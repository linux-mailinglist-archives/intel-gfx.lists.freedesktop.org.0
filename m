Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 87AA4FE161
	for <lists+intel-gfx@lfdr.de>; Fri, 15 Nov 2019 16:35:33 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CA7E46E8D1;
	Fri, 15 Nov 2019 15:35:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9594C6E8C4
 for <intel-gfx@lists.freedesktop.org>; Fri, 15 Nov 2019 15:35:29 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 15 Nov 2019 07:35:29 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,308,1569308400"; d="scan'208";a="195421082"
Received: from amanna.iind.intel.com ([10.223.74.216])
 by orsmga007.jf.intel.com with ESMTP; 15 Nov 2019 07:35:26 -0800
From: Animesh Manna <animesh.manna@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 15 Nov 2019 20:55:49 +0530
Message-Id: <20191115152549.23047-8-animesh.manna@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20191115152549.23047-1-animesh.manna@intel.com>
References: <20191115152549.23047-1-animesh.manna@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 7/7] drm/i915/dp: Program vswing, pre-emphasis,
 test-pattern
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com, nidhi1.gupta@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhpcyBwYXRjaCBwcm9jZXNzIHBoeSBjb21wbGlhbmNlIHJlcXVlc3QgYnkgcHJvZ3JhbW1pbmcg
cmVxdWVzdGVkCnZzd2luZywgcHJlLWVtcGhhc2lzIGFuZCB0ZXN0IHBhdHRlcm4uCgpTaWduZWQt
b2ZmLWJ5OiBBbmltZXNoIE1hbm5hIDxhbmltZXNoLm1hbm5hQGludGVsLmNvbT4KLS0tCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICB8IDE0ICsrKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgIDUgKysKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgIHwgNzcgKysrKysrKysrKysrKysr
KysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaCAgICAgIHwgIDIg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgfCAgMiArCiA1
IGZpbGVzIGNoYW5nZWQsIDEwMCBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggOGY4MTdkZTM0NDYwLi5jMTJkNGViYmQzNTIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtMzcwMCw4ICszNzAwLDE3
IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9wcmVfZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0Yyhj
cnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQg
KmRpZ19wb3J0ID0gZW5jX3RvX2RpZ19wb3J0KCZlbmNvZGVyLT5iYXNlKTsKIAllbnVtIHBpcGUg
cGlwZSA9IGNydGMtPnBpcGU7CiAKKwlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRf
RFApIHsKKwkJaWYgKGRpZ19wb3J0LT5kcC5jb21wbGlhbmNlLnRlc3RfdHlwZSA9PQorCQkgICAg
RFBfVEVTVF9MSU5LX1BIWV9URVNUX1BBVFRFUk4pIHsKKwkJCWludGVsX2RwX3Byb2Nlc3NfcGh5
X3JlcXVlc3QoJmRpZ19wb3J0LT5kcCk7CisJCQlyZXR1cm47CisJCX0KKwl9CisKIAkvKgogCSAq
IFdoZW4gY2FsbGVkIGZyb20gRFAgTVNUIGNvZGU6CiAJICogLSBjb25uX3N0YXRlIHdpbGwgYmUg
TlVMTApAQCAtNDE0Nyw2ICs0MTU2LDExIEBAIGludGVsX2RkaV9wcmVfcGxsX2VuYWJsZShzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3Rv
X3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAJYm9vbCBpc190Y19wb3J0ID0gaW50ZWxf
cGh5X2lzX3RjKGRldl9wcml2LCBwaHkpOwogCisJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxf
T1VUUFVUX0RQKQorCQlpZiAoZGlnX3BvcnQtPmRwLmNvbXBsaWFuY2UudGVzdF90eXBlID09CisJ
CSAgICBEUF9URVNUX0xJTktfUEhZX1RFU1RfUEFUVEVSTikKKwkJCXJldHVybjsKKwogCWlmIChp
c190Y19wb3J0KQogCQlpbnRlbF90Y19wb3J0X2dldF9saW5rKGRpZ19wb3J0LCBjcnRjX3N0YXRl
LT5sYW5lX2NvdW50KTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYwppbmRleCBhZGY1MGM0YjM4YWQuLjRhZDExZGY1NWYwNyAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTU0NSw2ICs1NDUsMTEgQEAg
aWNsX3dhX3NjYWxlcmNsa2dhdGluZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IGVudW0gcGlwZSBwaXBlLAogc3RhdGljIGJvb2wKIG5lZWRzX21vZGVzZXQoY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKnN0YXRlKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPnVhcGkuY3J0Yy0+ZGV2KTsKKworCWlmIChkZXZfcHJp
di0+ZHBfcGh5X2NvbXApCisJCXJldHVybiB0cnVlOworCiAJcmV0dXJuIGRybV9hdG9taWNfY3J0
Y19uZWVkc19tb2Rlc2V0KCZzdGF0ZS0+dWFwaSk7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHAuYwppbmRleCBkZjMxMjc4YTE2MTkuLjJjM2Q0YjZjNjAzNiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtNTAxMCwxNCArNTAxMCw5MSBA
QCBzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZHBfcGh5X3BhdHRlcm5fdXBkYXRlKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCiAJfQogfQogCitzdGF0aWMgdm9pZAoraW50ZWxfZHBfYXV0b3Rl
c3RfcGh5X2RkaV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJc3RydWN0
IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRl
bF9kcCk7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGludGVsX2RpZ19wb3J0LT5iYXNlLmJh
c2UuZGV2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2
KTsKKwllbnVtIHBvcnQgcG9ydCA9IGludGVsX2RpZ19wb3J0LT5iYXNlLnBvcnQ7CisJdTMyIGRk
aV9idWZfY3RsX3ZhbHVlLCBkcF90cF9jdGxfdmFsdWUsIHRyYW5zX2RkaV9mdW5jX2N0bF92YWx1
ZTsKKworCWRkaV9idWZfY3RsX3ZhbHVlID0gSTkxNV9SRUFEKERESV9CVUZfQ1RMKHBvcnQpKTsK
KwlkcF90cF9jdGxfdmFsdWUgPSBJOTE1X1JFQUQoVEdMX0RQX1RQX0NUTChwb3J0KSk7CisJdHJh
bnNfZGRpX2Z1bmNfY3RsX3ZhbHVlID0gSTkxNV9SRUFEKFRSQU5TX0RESV9GVU5DX0NUTChwb3J0
KSk7CisKKwlkZGlfYnVmX2N0bF92YWx1ZSAgICAgICAgJj0gfihERElfQlVGX0NUTF9FTkFCTEUg
fCBERElfUE9SVF9XSURUSF9NQVNLKTsKKwlkcF90cF9jdGxfdmFsdWUgICAgICAgICAgJj0gfkRQ
X1RQX0NUTF9FTkFCTEU7CisJdHJhbnNfZGRpX2Z1bmNfY3RsX3ZhbHVlICY9IH4oVFJBTlNfRERJ
X0ZVTkNfRU5BQkxFIHwKKwkJCQkgICAgICBERElfUE9SVF9XSURUSF9NQVNLKTsKKworCUk5MTVf
V1JJVEUoRERJX0JVRl9DVEwocG9ydCksIGRkaV9idWZfY3RsX3ZhbHVlKTsKKwlJOTE1X1dSSVRF
KFRHTF9EUF9UUF9DVEwocG9ydCksIGRwX3RwX2N0bF92YWx1ZSk7CisJSTkxNV9XUklURShUUkFO
U19ERElfRlVOQ19DVEwocG9ydCksIHRyYW5zX2RkaV9mdW5jX2N0bF92YWx1ZSk7Cit9CisKK3N0
YXRpYyB2b2lkCitpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2VuYWJsZShzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwLCB1aW50OF90IGxhbmVfY250KQoreworCXN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmludGVsX2RpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOworCXN0cnVj
dCBkcm1fZGV2aWNlICpkZXYgPSBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmRldjsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJZW51bSBwb3J0
IHBvcnQgPSBpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0OworCXUzMiBkZGlfYnVmX2N0bF92YWx1
ZSwgZHBfdHBfY3RsX3ZhbHVlLCB0cmFuc19kZGlfZnVuY19jdGxfdmFsdWU7CisKKwlkZGlfYnVm
X2N0bF92YWx1ZSA9IEk5MTVfUkVBRChERElfQlVGX0NUTChwb3J0KSk7CisJZHBfdHBfY3RsX3Zh
bHVlID0gSTkxNV9SRUFEKFRHTF9EUF9UUF9DVEwocG9ydCkpOworCXRyYW5zX2RkaV9mdW5jX2N0
bF92YWx1ZSA9IEk5MTVfUkVBRChUUkFOU19ERElfRlVOQ19DVEwocG9ydCkpOworCisJZGRpX2J1
Zl9jdGxfdmFsdWUgICAgICAgIHw9IERESV9CVUZfQ1RMX0VOQUJMRSB8CisJCQkJICAgIERESV9Q
T1JUX1dJRFRIKGxhbmVfY250KTsKKwlkcF90cF9jdGxfdmFsdWUgICAgICAgICAgfD0gRFBfVFBf
Q1RMX0VOQUJMRTsKKwl0cmFuc19kZGlfZnVuY19jdGxfdmFsdWUgfD0gVFJBTlNfRERJX0ZVTkNf
RU5BQkxFIHwKKwkJCQkgICAgRERJX1BPUlRfV0lEVEgobGFuZV9jbnQpOworCisJSTkxNV9XUklU
RShUUkFOU19ERElfRlVOQ19DVEwocG9ydCksIHRyYW5zX2RkaV9mdW5jX2N0bF92YWx1ZSk7CisJ
STkxNV9XUklURShUR0xfRFBfVFBfQ1RMKHBvcnQpLCBkcF90cF9jdGxfdmFsdWUpOworCUk5MTVf
V1JJVEUoRERJX0JVRl9DVEwocG9ydCksIGRkaV9idWZfY3RsX3ZhbHVlKTsKK30KKwordm9pZCBp
bnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7
CisJc3RydWN0IGRybV9kcF9waHlfdGVzdF9wYXJhbXMgKmRhdGEgPQorCQkmaW50ZWxfZHAtPmNv
bXBsaWFuY2UudGVzdF9kYXRhLnBoeXRlc3Q7CisJdTggbGlua19zdGF0dXNbRFBfTElOS19TVEFU
VVNfU0laRV07CisKKwlpZiAoIWludGVsX2RwX2dldF9saW5rX3N0YXR1cyhpbnRlbF9kcCwgbGlu
a19zdGF0dXMpKSB7CisJCURSTV9ERUJVR19LTVMoImZhaWxlZCB0byBnZXQgbGluayBzdGF0dXNc
biIpOworCQlyZXR1cm47CisJfQorCisJLyogcmV0cmlldmUgdnN3aW5nICYgcHJlLWVtcGhhc2lz
IHNldHRpbmcgKi8KKwlpbnRlbF9nZXRfYWRqdXN0X3RyYWluKGludGVsX2RwLCBsaW5rX3N0YXR1
cyk7CisKKwlpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2Rpc2FibGUoaW50ZWxfZHApOworCisJ
aW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHApOworCisJaW50ZWxfZHBfcGh5X3Bh
dHRlcm5fdXBkYXRlKGludGVsX2RwKTsKKworCWludGVsX2RwX2F1dG90ZXN0X3BoeV9kZGlfZW5h
YmxlKGludGVsX2RwLCBkYXRhLT5udW1fbGFuZXMpOworCisJZHJtX2RwX3NldF9waHlfdGVzdF9w
YXR0ZXJuKCZpbnRlbF9kcC0+YXV4LCBkYXRhKTsKK30KKwogc3RhdGljIHU4IGludGVsX2RwX2F1
dG90ZXN0X3BoeV9wYXR0ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJdTggdGVz
dF9yZXN1bHQgPSBEUF9URVNUX05BSzsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCXRlc3RfcmVzdWx0ID0gaW50ZWxfZHBfcHJl
cGFyZV9waHl0ZXN0KGludGVsX2RwKTsKIAlpZiAodGVzdF9yZXN1bHQgIT0gRFBfVEVTVF9BQ0sp
CiAJCURSTV9FUlJPUigiUGh5IHRlc3QgcHJlcGFyYXRpb24gZmFpbGVkXG4iKTsKIAorCS8qIFNl
dCB0ZXN0IGFjdGl2ZSBmbGFnIGhlcmUgc28gdXNlcnNwYWNlIGRvZXNuJ3QgaW50ZXJydXB0IHRo
aW5ncyAqLworCWludGVsX2RwLT5jb21wbGlhbmNlLnRlc3RfYWN0aXZlID0gMTsKKwlkZXZfcHJp
di0+ZHBfcGh5X2NvbXAgPSB0cnVlOworCiAJcmV0dXJuIHRlc3RfcmVzdWx0OwogfQogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmggYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKaW5kZXggMGQwY2I2OTJmNzAxLi5iMTI3
NGVjZmZjN2YgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKQEAgLTEy
MCw2ICsxMjAsOCBAQCB2b2lkIGludGVsX2RwX2hkcl9tZXRhZGF0YV9lbmFibGUoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIAkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlLAogCQkJCSAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5f
c3RhdGUpOwogYm9vbCBpbnRlbF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyKTsKK3ZvaWQgaW50ZWxfZHBfcHJvY2Vzc19waHlfcmVxdWVzdChzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKKwogCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBp
bnRlbF9kcF91bnVzZWRfbGFuZV9tYXNrKGludCBsYW5lX2NvdW50KQogewpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmgKaW5kZXggMTc3OWY2MDBmY2ZiLi4yMzJlMGRmYjlkOGUgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaApAQCAtMTI4NSw2ICsxMjg1LDggQEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
ewogCiAJSTkxNV9TRUxGVEVTVF9ERUNMQVJFKHN0cnVjdCBpOTE1X3NlbGZ0ZXN0X3N0YXNoIHNl
bGZ0ZXN0OykKIAorCWJvb2wgZHBfcGh5X2NvbXA7CisKIAkvKgogCSAqIE5PVEU6IFRoaXMgaXMg
dGhlIGRyaTEvdW1zIGR1bmdlb24sIGRvbid0IGFkZCBzdHVmZiBoZXJlLiBZb3VyIHBhdGNoCiAJ
ICogd2lsbCBiZSByZWplY3RlZC4gSW5zdGVhZCBsb29rIGZvciBhIGJldHRlciBwbGFjZS4KLS0g
CjIuMjIuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
SW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

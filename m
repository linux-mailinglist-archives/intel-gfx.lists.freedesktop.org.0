Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5420B30EA3
	for <lists+intel-gfx@lfdr.de>; Fri, 31 May 2019 15:12:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A2F8389496;
	Fri, 31 May 2019 13:12:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E122989487
 for <intel-gfx@lists.freedesktop.org>; Fri, 31 May 2019 13:12:21 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 31 May 2019 06:12:21 -0700
X-ExtLoop1: 1
Received: from jnikula-mobl3.fi.intel.com (HELO localhost) ([10.237.66.150])
 by fmsmga001.fm.intel.com with ESMTP; 31 May 2019 06:12:19 -0700
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 31 May 2019 16:15:00 +0300
Message-Id: <56e1989940d83a670d087d531b7b6aa5dc4c0228.1559308269.git.jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1559308269.git.jani.nikula@intel.com>
References: <cover.1559308269.git.jani.nikula@intel.com>
MIME-Version: 1.0
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Subject: [Intel-gfx] [PATCH 10/13] drm/i915/bios: sort BDB block definitions
 using block ID
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TWFrZSBpdCBlYXNpZXIgdG8gZmluZCB0aGUgcmlnaHQgYmxvY2tzLiBObyBmdW5jdGlvbmFsIGNo
YW5nZXMuCgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4KU2lnbmVkLW9mZi1ieTogSmFuaSBOaWt1bGEgPGphbmkubmlrdWxhQGludGVsLmNvbT4KLS0t
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF92YnRfZGVmcy5oIHwgMzcyICsrKysrKysrKysr
KystLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTg2IGluc2VydGlvbnMoKyksIDE4NiBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF92YnRf
ZGVmcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdmJ0X2RlZnMuaAppbmRleCA3ZGJl
ODM2OWJhZjkuLjYwOGZhNDEzNTI2MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfdmJ0X2RlZnMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF92YnRfZGVm
cy5oCkBAIC00NTYsMTgyICs0NTYsMzAgQEAgc3RydWN0IGJkYl9nZW5lcmFsX2RlZmluaXRpb25z
IHsKIH0gX19wYWNrZWQ7CiAKIC8qCi0gKiBCbG9jayA0MCAtIExGUCBEYXRhIEJsb2NrCi0gKi8K
LQotLyogTWFzayBmb3IgRFJSUyAvIFBhbmVsIENoYW5uZWwgLyBTU0MgLyBCTFQgY29udHJvbCBi
aXRzIGV4dHJhY3Rpb24gKi8KLSNkZWZpbmUgTU9ERV9NQVNLCQkweDMKLQotc3RydWN0IGJkYl9s
dmRzX29wdGlvbnMgewotCXU4IHBhbmVsX3R5cGU7Ci0JdTggcnN2ZDE7Ci0JLyogTFZEUyBjYXBh
YmlsaXRpZXMsIHN0b3JlZCBpbiBhIGR3b3JkICovCi0JdTggcGZpdF9tb2RlOjI7Ci0JdTggcGZp
dF90ZXh0X21vZGVfZW5oYW5jZWQ6MTsKLQl1OCBwZml0X2dmeF9tb2RlX2VuaGFuY2VkOjE7Ci0J
dTggcGZpdF9yYXRpb19hdXRvOjE7Ci0JdTggcGl4ZWxfZGl0aGVyOjE7Ci0JdTggbHZkc19lZGlk
OjE7Ci0JdTggcnN2ZDI6MTsKLQl1OCByc3ZkNDsKLQkvKiBMVkRTIFBhbmVsIGNoYW5uZWwgYml0
cyBzdG9yZWQgaGVyZSAqLwotCXUzMiBsdmRzX3BhbmVsX2NoYW5uZWxfYml0czsKLQkvKiBMVkRT
IFNTQyAoU3ByZWFkIFNwZWN0cnVtIENsb2NrKSBiaXRzIHN0b3JlZCBoZXJlLiAqLwotCXUxNiBz
c2NfYml0czsKLQl1MTYgc3NjX2ZyZXE7Ci0JdTE2IHNzY19kZHQ7Ci0JLyogUGFuZWwgY29sb3Ig
ZGVwdGggZGVmaW5lZCBoZXJlICovCi0JdTE2IHBhbmVsX2NvbG9yX2RlcHRoOwotCS8qIExWRFMg
cGFuZWwgdHlwZSBiaXRzIHN0b3JlZCBoZXJlICovCi0JdTMyIGRwc19wYW5lbF90eXBlX2JpdHM7
Ci0JLyogTFZEUyBiYWNrbGlnaHQgY29udHJvbCB0eXBlIGJpdHMgc3RvcmVkIGhlcmUgKi8KLQl1
MzIgYmx0X2NvbnRyb2xfdHlwZV9iaXRzOwotfSBfX3BhY2tlZDsKLQotLyoKLSAqIEJsb2NrIDQx
IC0gTEZQIERhdGEgVGFibGUgUG9pbnRlcnMKLSAqLwotCi0vKiBMRlAgcG9pbnRlciB0YWJsZSBj
b250YWlucyBlbnRyaWVzIHRvIHRoZSBzdHJ1Y3QgYmVsb3cgKi8KLXN0cnVjdCBsdmRzX2xmcF9k
YXRhX3B0ciB7Ci0JdTE2IGZwX3RpbWluZ19vZmZzZXQ7IC8qIG9mZnNldHMgYXJlIGZyb20gc3Rh
cnQgb2YgYmRiICovCi0JdTggZnBfdGFibGVfc2l6ZTsKLQl1MTYgZHZvX3RpbWluZ19vZmZzZXQ7
Ci0JdTggZHZvX3RhYmxlX3NpemU7Ci0JdTE2IHBhbmVsX3BucF9pZF9vZmZzZXQ7Ci0JdTggcG5w
X3RhYmxlX3NpemU7Ci19IF9fcGFja2VkOwotCi1zdHJ1Y3QgYmRiX2x2ZHNfbGZwX2RhdGFfcHRy
cyB7Ci0JdTggbHZkc19lbnRyaWVzOyAvKiBmb2xsb3dlZCBieSBvbmUgb3IgbW9yZSBsdmRzX2Rh
dGFfcHRyIHN0cnVjdHMgKi8KLQlzdHJ1Y3QgbHZkc19sZnBfZGF0YV9wdHIgcHRyWzE2XTsKLX0g
X19wYWNrZWQ7Ci0KLS8qCi0gKiBCbG9jayA0MiAtIExGUCBEYXRhIFRhYmxlcwotICovCi0KLS8q
IExGUCBkYXRhIGhhcyAzIGJsb2NrcyBwZXIgZW50cnkgKi8KLXN0cnVjdCBsdmRzX2ZwX3RpbWlu
ZyB7Ci0JdTE2IHhfcmVzOwotCXUxNiB5X3JlczsKLQl1MzIgbHZkc19yZWc7Ci0JdTMyIGx2ZHNf
cmVnX3ZhbDsKLQl1MzIgcHBfb25fcmVnOwotCXUzMiBwcF9vbl9yZWdfdmFsOwotCXUzMiBwcF9v
ZmZfcmVnOwotCXUzMiBwcF9vZmZfcmVnX3ZhbDsKLQl1MzIgcHBfY3ljbGVfcmVnOwotCXUzMiBw
cF9jeWNsZV9yZWdfdmFsOwotCXUzMiBwZml0X3JlZzsKLQl1MzIgcGZpdF9yZWdfdmFsOwotCXUx
NiB0ZXJtaW5hdG9yOwotfSBfX3BhY2tlZDsKLQotc3RydWN0IGx2ZHNfZHZvX3RpbWluZyB7Ci0J
dTE2IGNsb2NrOwkJLyoqPCBJbiAxMGtoeiAqLwotCXU4IGhhY3RpdmVfbG87Ci0JdTggaGJsYW5r
X2xvOwotCXU4IGhibGFua19oaTo0OwotCXU4IGhhY3RpdmVfaGk6NDsKLQl1OCB2YWN0aXZlX2xv
OwotCXU4IHZibGFua19sbzsKLQl1OCB2YmxhbmtfaGk6NDsKLQl1OCB2YWN0aXZlX2hpOjQ7Ci0J
dTggaHN5bmNfb2ZmX2xvOwotCXU4IGhzeW5jX3B1bHNlX3dpZHRoX2xvOwotCXU4IHZzeW5jX3B1
bHNlX3dpZHRoX2xvOjQ7Ci0JdTggdnN5bmNfb2ZmX2xvOjQ7Ci0JdTggdnN5bmNfcHVsc2Vfd2lk
dGhfaGk6MjsKLQl1OCB2c3luY19vZmZfaGk6MjsKLQl1OCBoc3luY19wdWxzZV93aWR0aF9oaToy
OwotCXU4IGhzeW5jX29mZl9oaToyOwotCXU4IGhpbWFnZV9sbzsKLQl1OCB2aW1hZ2VfbG87Ci0J
dTggdmltYWdlX2hpOjQ7Ci0JdTggaGltYWdlX2hpOjQ7Ci0JdTggaF9ib3JkZXI7Ci0JdTggdl9i
b3JkZXI7Ci0JdTggcnN2ZDE6MzsKLQl1OCBkaWdpdGFsOjI7Ci0JdTggdnN5bmNfcG9zaXRpdmU6
MTsKLQl1OCBoc3luY19wb3NpdGl2ZToxOwotCXU4IG5vbl9pbnRlcmxhY2VkOjE7Ci19IF9fcGFj
a2VkOwotCi1zdHJ1Y3QgbHZkc19wbnBfaWQgewotCXUxNiBtZmdfbmFtZTsKLQl1MTYgcHJvZHVj
dF9jb2RlOwotCXUzMiBzZXJpYWw7Ci0JdTggbWZnX3dlZWs7Ci0JdTggbWZnX3llYXI7Ci19IF9f
cGFja2VkOwotCi1zdHJ1Y3QgbHZkc19sZnBfZGF0YV9lbnRyeSB7Ci0Jc3RydWN0IGx2ZHNfZnBf
dGltaW5nIGZwX3RpbWluZzsKLQlzdHJ1Y3QgbHZkc19kdm9fdGltaW5nIGR2b190aW1pbmc7Ci0J
c3RydWN0IGx2ZHNfcG5wX2lkIHBucF9pZDsKLX0gX19wYWNrZWQ7Ci0KLXN0cnVjdCBiZGJfbHZk
c19sZnBfZGF0YSB7Ci0Jc3RydWN0IGx2ZHNfbGZwX2RhdGFfZW50cnkgZGF0YVsxNl07Ci19IF9f
cGFja2VkOwotCi0vKgotICogQmxvY2sgMjMgLSBTRFZPIExWRFMgUGFuZWwgRFREcwotICovCi0K
LXN0cnVjdCBiZGJfc2R2b19wYW5lbF9kdGRzIHsKLQlzdHJ1Y3QgbHZkc19kdm9fdGltaW5nIGR0
ZHNbNF07Ci19IF9fcGFja2VkOwotCi0vKgotICogQmxvY2sgNDMgLSBMRlAgQmFja2xpZ2h0IENv
bnRyb2wgRGF0YSBCbG9jaworICogQmxvY2sgOSAtIFNSRCBGZWF0dXJlIEJsb2NrCiAgKi8KIAot
I2RlZmluZSBCREJfQkFDS0xJR0hUX1RZUEVfTk9ORQkwCi0jZGVmaW5lIEJEQl9CQUNLTElHSFRf
VFlQRV9QV00JMgorc3RydWN0IHBzcl90YWJsZSB7CisJLyogRmVhdHVyZSBiaXRzICovCisJdTgg
ZnVsbF9saW5rOjE7CisJdTggcmVxdWlyZV9hdXhfdG9fd2FrZXVwOjE7CisJdTggZmVhdHVyZV9i
aXRzX3JzdmQ6NjsKIAotc3RydWN0IGxmcF9iYWNrbGlnaHRfZGF0YV9lbnRyeSB7Ci0JdTggdHlw
ZToyOwotCXU4IGFjdGl2ZV9sb3dfcHdtOjE7Ci0JdTggb2Jzb2xldGUxOjU7Ci0JdTE2IHB3bV9m
cmVxX2h6OwotCXU4IG1pbl9icmlnaHRuZXNzOwotCXU4IG9ic29sZXRlMjsKLQl1OCBvYnNvbGV0
ZTM7Ci19IF9fcGFja2VkOworCS8qIFdhaXQgdGltZXMgKi8KKwl1OCBpZGxlX2ZyYW1lczo0Owor
CXU4IGxpbmVzX3RvX3dhaXQ6MzsKKwl1OCB3YWl0X3RpbWVzX3JzdmQ6MTsKIAotc3RydWN0IGxm
cF9iYWNrbGlnaHRfY29udHJvbF9tZXRob2QgewotCXU4IHR5cGU6NDsKLQl1OCBjb250cm9sbGVy
OjQ7Ci19IF9fcGFja2VkOworCS8qIFRQIHdha2UgdXAgdGltZSBpbiBtdWx0aXBsZSBvZiAxMDAg
Ki8KKwl1MTYgdHAxX3dha2V1cF90aW1lOworCXUxNiB0cDJfdHAzX3dha2V1cF90aW1lOwogCi1z
dHJ1Y3QgYmRiX2xmcF9iYWNrbGlnaHRfZGF0YSB7Ci0JdTggZW50cnlfc2l6ZTsKLQlzdHJ1Y3Qg
bGZwX2JhY2tsaWdodF9kYXRhX2VudHJ5IGRhdGFbMTZdOwotCXU4IGxldmVsWzE2XTsKLQlzdHJ1
Y3QgbGZwX2JhY2tsaWdodF9jb250cm9sX21ldGhvZCBiYWNrbGlnaHRfY29udHJvbFsxNl07CisJ
LyogUFNSMiBUUDIvVFAzIHdha2V1cCB0aW1lIGZvciAxNiBwYW5lbHMgKi8KKwl1MzIgcHNyMl90
cDJfdHAzX3dha2V1cF90aW1lOwogfSBfX3BhY2tlZDsKIAotLyoKLSAqIEJsb2NrIDIyIC0gU0RW
TyBMVkRTIEdlbmVyYWwgT3B0aW9ucwotICovCi0KLXN0cnVjdCBiZGJfc2R2b19sdmRzX29wdGlv
bnMgewotCXU4IHBhbmVsX2JhY2tsaWdodDsKLQl1OCBoNDBfc2V0X3BhbmVsX3R5cGU7Ci0JdTgg
cGFuZWxfdHlwZTsKLQl1OCBzc2NfY2xrX2ZyZXE7Ci0JdTE2IGFsc19sb3dfdHJpcDsKLQl1MTYg
YWxzX2hpZ2hfdHJpcDsKLQl1OCBzY2xhbGFyY29lZmZfdGFiX3Jvd19udW07Ci0JdTggc2NsYWxh
cmNvZWZmX3RhYl9yb3dfc2l6ZTsKLQl1OCBjb2VmZmljaWVudFs4XTsKLQl1OCBwYW5lbF9taXNj
X2JpdHNfMTsKLQl1OCBwYW5lbF9taXNjX2JpdHNfMjsKLQl1OCBwYW5lbF9taXNjX2JpdHNfMzsK
LQl1OCBwYW5lbF9taXNjX2JpdHNfNDsKK3N0cnVjdCBiZGJfcHNyIHsKKwlzdHJ1Y3QgcHNyX3Rh
YmxlIHBzcl90YWJsZVsxNl07CiB9IF9fcGFja2VkOwogCiAvKgpAQCAtNjk3LDYgKzU0NSw2NSBA
QCBzdHJ1Y3QgYmRiX2RyaXZlcl9mZWF0dXJlcyB7CiAJdTE2IHBjX2ZlYXR1cmVfdmFsaWQ6MTsK
IH0gX19wYWNrZWQ7CiAKKy8qCisgKiBCbG9jayAyMiAtIFNEVk8gTFZEUyBHZW5lcmFsIE9wdGlv
bnMKKyAqLworCitzdHJ1Y3QgYmRiX3Nkdm9fbHZkc19vcHRpb25zIHsKKwl1OCBwYW5lbF9iYWNr
bGlnaHQ7CisJdTggaDQwX3NldF9wYW5lbF90eXBlOworCXU4IHBhbmVsX3R5cGU7CisJdTggc3Nj
X2Nsa19mcmVxOworCXUxNiBhbHNfbG93X3RyaXA7CisJdTE2IGFsc19oaWdoX3RyaXA7CisJdTgg
c2NsYWxhcmNvZWZmX3RhYl9yb3dfbnVtOworCXU4IHNjbGFsYXJjb2VmZl90YWJfcm93X3NpemU7
CisJdTggY29lZmZpY2llbnRbOF07CisJdTggcGFuZWxfbWlzY19iaXRzXzE7CisJdTggcGFuZWxf
bWlzY19iaXRzXzI7CisJdTggcGFuZWxfbWlzY19iaXRzXzM7CisJdTggcGFuZWxfbWlzY19iaXRz
XzQ7Cit9IF9fcGFja2VkOworCisvKgorICogQmxvY2sgMjMgLSBTRFZPIExWRFMgUGFuZWwgRFRE
cworICovCisKK3N0cnVjdCBsdmRzX2R2b190aW1pbmcgeworCXUxNiBjbG9jazsJCS8qKjwgSW4g
MTBraHogKi8KKwl1OCBoYWN0aXZlX2xvOworCXU4IGhibGFua19sbzsKKwl1OCBoYmxhbmtfaGk6
NDsKKwl1OCBoYWN0aXZlX2hpOjQ7CisJdTggdmFjdGl2ZV9sbzsKKwl1OCB2YmxhbmtfbG87CisJ
dTggdmJsYW5rX2hpOjQ7CisJdTggdmFjdGl2ZV9oaTo0OworCXU4IGhzeW5jX29mZl9sbzsKKwl1
OCBoc3luY19wdWxzZV93aWR0aF9sbzsKKwl1OCB2c3luY19wdWxzZV93aWR0aF9sbzo0OworCXU4
IHZzeW5jX29mZl9sbzo0OworCXU4IHZzeW5jX3B1bHNlX3dpZHRoX2hpOjI7CisJdTggdnN5bmNf
b2ZmX2hpOjI7CisJdTggaHN5bmNfcHVsc2Vfd2lkdGhfaGk6MjsKKwl1OCBoc3luY19vZmZfaGk6
MjsKKwl1OCBoaW1hZ2VfbG87CisJdTggdmltYWdlX2xvOworCXU4IHZpbWFnZV9oaTo0OworCXU4
IGhpbWFnZV9oaTo0OworCXU4IGhfYm9yZGVyOworCXU4IHZfYm9yZGVyOworCXU4IHJzdmQxOjM7
CisJdTggZGlnaXRhbDoyOworCXU4IHZzeW5jX3Bvc2l0aXZlOjE7CisJdTggaHN5bmNfcG9zaXRp
dmU6MTsKKwl1OCBub25faW50ZXJsYWNlZDoxOworfSBfX3BhY2tlZDsKKworc3RydWN0IGJkYl9z
ZHZvX3BhbmVsX2R0ZHMgeworCXN0cnVjdCBsdmRzX2R2b190aW1pbmcgZHRkc1s0XTsKK30gX19w
YWNrZWQ7CisKIC8qCiAgKiBCbG9jayAyNyAtIGVEUCBWQlQgQmxvY2sKICAqLwpAQCAtNzU0LDMw
ICs2NjEsMTIzIEBAIHN0cnVjdCBiZGJfZWRwIHsKIH0gX19wYWNrZWQ7CiAKIC8qCi0gKiBCbG9j
ayA5IC0gU1JEIEZlYXR1cmUgQmxvY2sKKyAqIEJsb2NrIDQwIC0gTEZQIERhdGEgQmxvY2sKICAq
LwogCi1zdHJ1Y3QgcHNyX3RhYmxlIHsKLQkvKiBGZWF0dXJlIGJpdHMgKi8KLQl1OCBmdWxsX2xp
bms6MTsKLQl1OCByZXF1aXJlX2F1eF90b193YWtldXA6MTsKLQl1OCBmZWF0dXJlX2JpdHNfcnN2
ZDo2OworLyogTWFzayBmb3IgRFJSUyAvIFBhbmVsIENoYW5uZWwgLyBTU0MgLyBCTFQgY29udHJv
bCBiaXRzIGV4dHJhY3Rpb24gKi8KKyNkZWZpbmUgTU9ERV9NQVNLCQkweDMKIAotCS8qIFdhaXQg
dGltZXMgKi8KLQl1OCBpZGxlX2ZyYW1lczo0OwotCXU4IGxpbmVzX3RvX3dhaXQ6MzsKLQl1OCB3
YWl0X3RpbWVzX3JzdmQ6MTsKK3N0cnVjdCBiZGJfbHZkc19vcHRpb25zIHsKKwl1OCBwYW5lbF90
eXBlOworCXU4IHJzdmQxOworCS8qIExWRFMgY2FwYWJpbGl0aWVzLCBzdG9yZWQgaW4gYSBkd29y
ZCAqLworCXU4IHBmaXRfbW9kZToyOworCXU4IHBmaXRfdGV4dF9tb2RlX2VuaGFuY2VkOjE7CisJ
dTggcGZpdF9nZnhfbW9kZV9lbmhhbmNlZDoxOworCXU4IHBmaXRfcmF0aW9fYXV0bzoxOworCXU4
IHBpeGVsX2RpdGhlcjoxOworCXU4IGx2ZHNfZWRpZDoxOworCXU4IHJzdmQyOjE7CisJdTggcnN2
ZDQ7CisJLyogTFZEUyBQYW5lbCBjaGFubmVsIGJpdHMgc3RvcmVkIGhlcmUgKi8KKwl1MzIgbHZk
c19wYW5lbF9jaGFubmVsX2JpdHM7CisJLyogTFZEUyBTU0MgKFNwcmVhZCBTcGVjdHJ1bSBDbG9j
aykgYml0cyBzdG9yZWQgaGVyZS4gKi8KKwl1MTYgc3NjX2JpdHM7CisJdTE2IHNzY19mcmVxOwor
CXUxNiBzc2NfZGR0OworCS8qIFBhbmVsIGNvbG9yIGRlcHRoIGRlZmluZWQgaGVyZSAqLworCXUx
NiBwYW5lbF9jb2xvcl9kZXB0aDsKKwkvKiBMVkRTIHBhbmVsIHR5cGUgYml0cyBzdG9yZWQgaGVy
ZSAqLworCXUzMiBkcHNfcGFuZWxfdHlwZV9iaXRzOworCS8qIExWRFMgYmFja2xpZ2h0IGNvbnRy
b2wgdHlwZSBiaXRzIHN0b3JlZCBoZXJlICovCisJdTMyIGJsdF9jb250cm9sX3R5cGVfYml0czsK
K30gX19wYWNrZWQ7CiAKLQkvKiBUUCB3YWtlIHVwIHRpbWUgaW4gbXVsdGlwbGUgb2YgMTAwICov
Ci0JdTE2IHRwMV93YWtldXBfdGltZTsKLQl1MTYgdHAyX3RwM193YWtldXBfdGltZTsKKy8qCisg
KiBCbG9jayA0MSAtIExGUCBEYXRhIFRhYmxlIFBvaW50ZXJzCisgKi8KIAotCS8qIFBTUjIgVFAy
L1RQMyB3YWtldXAgdGltZSBmb3IgMTYgcGFuZWxzICovCi0JdTMyIHBzcjJfdHAyX3RwM193YWtl
dXBfdGltZTsKKy8qIExGUCBwb2ludGVyIHRhYmxlIGNvbnRhaW5zIGVudHJpZXMgdG8gdGhlIHN0
cnVjdCBiZWxvdyAqLworc3RydWN0IGx2ZHNfbGZwX2RhdGFfcHRyIHsKKwl1MTYgZnBfdGltaW5n
X29mZnNldDsgLyogb2Zmc2V0cyBhcmUgZnJvbSBzdGFydCBvZiBiZGIgKi8KKwl1OCBmcF90YWJs
ZV9zaXplOworCXUxNiBkdm9fdGltaW5nX29mZnNldDsKKwl1OCBkdm9fdGFibGVfc2l6ZTsKKwl1
MTYgcGFuZWxfcG5wX2lkX29mZnNldDsKKwl1OCBwbnBfdGFibGVfc2l6ZTsKIH0gX19wYWNrZWQ7
CiAKLXN0cnVjdCBiZGJfcHNyIHsKLQlzdHJ1Y3QgcHNyX3RhYmxlIHBzcl90YWJsZVsxNl07Citz
dHJ1Y3QgYmRiX2x2ZHNfbGZwX2RhdGFfcHRycyB7CisJdTggbHZkc19lbnRyaWVzOyAvKiBmb2xs
b3dlZCBieSBvbmUgb3IgbW9yZSBsdmRzX2RhdGFfcHRyIHN0cnVjdHMgKi8KKwlzdHJ1Y3QgbHZk
c19sZnBfZGF0YV9wdHIgcHRyWzE2XTsKK30gX19wYWNrZWQ7CisKKy8qCisgKiBCbG9jayA0MiAt
IExGUCBEYXRhIFRhYmxlcworICovCisKKy8qIExGUCBkYXRhIGhhcyAzIGJsb2NrcyBwZXIgZW50
cnkgKi8KK3N0cnVjdCBsdmRzX2ZwX3RpbWluZyB7CisJdTE2IHhfcmVzOworCXUxNiB5X3JlczsK
Kwl1MzIgbHZkc19yZWc7CisJdTMyIGx2ZHNfcmVnX3ZhbDsKKwl1MzIgcHBfb25fcmVnOworCXUz
MiBwcF9vbl9yZWdfdmFsOworCXUzMiBwcF9vZmZfcmVnOworCXUzMiBwcF9vZmZfcmVnX3ZhbDsK
Kwl1MzIgcHBfY3ljbGVfcmVnOworCXUzMiBwcF9jeWNsZV9yZWdfdmFsOworCXUzMiBwZml0X3Jl
ZzsKKwl1MzIgcGZpdF9yZWdfdmFsOworCXUxNiB0ZXJtaW5hdG9yOworfSBfX3BhY2tlZDsKKwor
c3RydWN0IGx2ZHNfcG5wX2lkIHsKKwl1MTYgbWZnX25hbWU7CisJdTE2IHByb2R1Y3RfY29kZTsK
Kwl1MzIgc2VyaWFsOworCXU4IG1mZ193ZWVrOworCXU4IG1mZ195ZWFyOworfSBfX3BhY2tlZDsK
Kworc3RydWN0IGx2ZHNfbGZwX2RhdGFfZW50cnkgeworCXN0cnVjdCBsdmRzX2ZwX3RpbWluZyBm
cF90aW1pbmc7CisJc3RydWN0IGx2ZHNfZHZvX3RpbWluZyBkdm9fdGltaW5nOworCXN0cnVjdCBs
dmRzX3BucF9pZCBwbnBfaWQ7Cit9IF9fcGFja2VkOworCitzdHJ1Y3QgYmRiX2x2ZHNfbGZwX2Rh
dGEgeworCXN0cnVjdCBsdmRzX2xmcF9kYXRhX2VudHJ5IGRhdGFbMTZdOworfSBfX3BhY2tlZDsK
KworLyoKKyAqIEJsb2NrIDQzIC0gTEZQIEJhY2tsaWdodCBDb250cm9sIERhdGEgQmxvY2sKKyAq
LworCisjZGVmaW5lIEJEQl9CQUNLTElHSFRfVFlQRV9OT05FCTAKKyNkZWZpbmUgQkRCX0JBQ0tM
SUdIVF9UWVBFX1BXTQkyCisKK3N0cnVjdCBsZnBfYmFja2xpZ2h0X2RhdGFfZW50cnkgeworCXU4
IHR5cGU6MjsKKwl1OCBhY3RpdmVfbG93X3B3bToxOworCXU4IG9ic29sZXRlMTo1OworCXUxNiBw
d21fZnJlcV9oejsKKwl1OCBtaW5fYnJpZ2h0bmVzczsKKwl1OCBvYnNvbGV0ZTI7CisJdTggb2Jz
b2xldGUzOworfSBfX3BhY2tlZDsKKworc3RydWN0IGxmcF9iYWNrbGlnaHRfY29udHJvbF9tZXRo
b2QgeworCXU4IHR5cGU6NDsKKwl1OCBjb250cm9sbGVyOjQ7Cit9IF9fcGFja2VkOworCitzdHJ1
Y3QgYmRiX2xmcF9iYWNrbGlnaHRfZGF0YSB7CisJdTggZW50cnlfc2l6ZTsKKwlzdHJ1Y3QgbGZw
X2JhY2tsaWdodF9kYXRhX2VudHJ5IGRhdGFbMTZdOworCXU4IGxldmVsWzE2XTsKKwlzdHJ1Y3Qg
bGZwX2JhY2tsaWdodF9jb250cm9sX21ldGhvZCBiYWNrbGlnaHRfY29udHJvbFsxNl07CiB9IF9f
cGFja2VkOwogCiAvKgotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5E23C10A5DA
	for <lists+intel-gfx@lfdr.de>; Tue, 26 Nov 2019 22:17:02 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 02C8D6E09F;
	Tue, 26 Nov 2019 21:17:00 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A2E4F6E09F
 for <intel-gfx@lists.freedesktop.org>; Tue, 26 Nov 2019 21:16:58 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19350330-1500050 
 for multiple; Tue, 26 Nov 2019 21:16:39 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 26 Nov 2019 21:16:33 +0000
Message-Id: <20191126211633.3067603-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191126184341.2959765-1-chris@chris-wilson.co.uk>
References: <20191126184341.2959765-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Serialise i915_active_fence_set()
 with itself
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIGV4cGVjdGVkIGRvd25zaWRlIHRvIGNvbW1pdCA1OGI0YzFhMDdhZGEgKCJkcm0vaTkxNTog
UmVkdWNlIG5lc3RlZApwcmVwYXJlX3JlbW90ZV9jb250ZXh0KCkgdG8gYSB0cnlsb2NrIikgd2Fz
IHRoYXQgaXQgd291bGQgbmVlZCB0byByZXR1cm4KLUVBR0FJTiB0byB1c2Vyc3BhY2UgaW4gb3Jk
ZXIgdG8gcmVzb2x2ZSBwb3RlbnRpYWwgbXV0ZXggaW52ZXJzaW9uLiBTdWNoCmFuIHVuc2lnaHRs
eSByb3VuZCB0cmlwIGlzIHVubmVjZXNzYXJ5IGlmIHdlIGNvdWxkIGF0b21pY2FsbHkgaW5zZXJ0
IGEKYmFycmllciBpbnRvIHRoZSBpOTE1X2FjdGl2ZV9mZW5jZSwgc28gbWFrZSBpdCBoYXBwZW4u
CgpDdXJyZW50bHksIHdlIHVzZSB0aGUgdGltZWxpbmUtPm11dGV4IChvciBzb21lIG90aGVyIG5h
bWVkIG91dGVyIGxvY2spCnRvIG9yZGVyIGluc2VydGlvbiBpbnRvIHRoZSBpOTE1X2FjdGl2ZV9m
ZW5jZSAoYW5kIHNvIGluZGl2aWR1YWwgbm9kZXMKb2YgaTkxNV9hY3RpdmUpLiBJbnNpZGUgX19p
OTE1X2FjdGl2ZV9mZW5jZV9zZXQsIHdlIG9ubHkgbmVlZCB0aGVuCnNlcmlhbGlzZSB3aXRoIHRo
ZSBpbnRlcnJ1cHQgaGFuZGxlciBpbiBvcmRlciB0byBjbGFpbSB0aGUgdGltZWxpbmUgZm9yCm91
cnNlbHZlcy4KCkhvd2V2ZXIsIGlmIHdlIHJlbW92ZSB0aGUgb3V0ZXIgbG9jaywgd2UgbmVlZCB0
byBlbnN1cmUgdGhlIG9yZGVyIGlzCmludGFjdCBiZXR3ZWVuIG5vdCBvbmx5IG11bHRpcGxlIHRo
cmVhZHMgdHJ5aW5nIHRvIGluc2VydCB0aGVtc2VsdmVzCmludG8gdGhlIHRpbWVsaW5lLCBidXQg
YWxzbyB3aXRoIHRoZSBpbnRlcnJ1cHQgaGFuZGxlciBjb21wbGV0aW5nIHRoZQpwcmV2aW91cyBv
Y2N1cGFudC4gV2UgdXNlIHhjaGcoKSBvbiBpbnNlcnQgc28gdGhhdCB3ZSBoYXZlIGFuIG9yZGVy
ZWQKc2VxdWVuY2Ugb2YgaW5zZXJ0aW9ucyAoYW5kIGVhY2ggY2FsbGVyIGtub3dzIHRoZSBwcmV2
aW91cyBmZW5jZSBvbgp3aGljaCB0byB3YWl0LCBwcmVzZXJ2aW5nIHRoZSBjaGFpbiBvZiBhbGwg
ZmVuY2VzIGluIHRoZSB0aW1lbGluZSksIGJ1dAp3ZSB0aGVuIGhhdmUgdG8gY21weGNoZygpIGlu
IHRoZSBpbnRlcnJ1cHQgaGFuZGxlciB0byBhdm9pZCBvdmVyd3JpdGluZwp0aGUgbmV3IG9jY3Vw
YW50LiBUaGUgb25seSBuYXN0eSBzaWRlLWVmZmVjdCBpcyBoYXZpbmcgdG8gdGVtcG9yYXJpbHkK
c3RyaXAgb2ZmIHRoZSBSQ1UtYW5ub3RhdGlvbnMgdG8gYXBwbHkgdGhlIGF0b21pYyBvcGVyYXRp
b25zLCBvdGhlcndpc2UKdGhlIHJ1bGVzIGFyZSBtdWNoIG1vcmUgY29udmVudGlvbmFsIQoKRml4
ZXM6IDU4YjRjMWEwN2FkYSAoImRybS9pOTE1OiBSZWR1Y2UgbmVzdGVkIHByZXBhcmVfcmVtb3Rl
X2NvbnRleHQoKSB0byBhIHRyeWxvY2siKQpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNo
cmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxp
bkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5j
ICAgICAgIHwgMTkgLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3RpbWVsaW5l
LmMgICAgICB8ICAyICstCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0cy9tb2NrX3RpbWVs
aW5lLmMgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYyAgICAgICAg
ICAgIHwgNzkgKysrKysrKystLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9h
Y3RpdmUuaCAgICAgICAgICAgIHwgMjcgKysrKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9hY3RpdmVfdHlwZXMuaCAgICAgIHwgMTUgLS0tLQogNiBmaWxlcyBjaGFuZ2VkLCA1MyBpbnNl
cnRpb25zKCspLCA5MSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9j
b250ZXh0LmMKaW5kZXggZWY3YmM0MWZmZmZhLi5iNWU5YzM1ZWM2YjggMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKQEAgLTMxMCwyNyArMzEwLDggQEAgaW50IGludGVs
X2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Us
CiAJR0VNX0JVR19PTihycS0+aHdfY29udGV4dCA9PSBjZSk7CiAKIAlpZiAocmN1X2FjY2Vzc19w
b2ludGVyKHJxLT50aW1lbGluZSkgIT0gdGwpIHsgLyogdGltZWxpbmUgc2hhcmluZyEgKi8KLQkJ
LyoKLQkJICogSWRlYWxseSwgd2UganVzdCB3YW50IHRvIGluc2VydCBvdXIgZm9yZWlnbiBmZW5j
ZSBhcwotCQkgKiBhIGJhcnJpZXIgaW50byB0aGUgcmVtb3ZlIGNvbnRleHQsIHN1Y2ggdGhhdCB0
aGlzIG9wZXJhdGlvbgotCQkgKiBvY2N1cnMgYWZ0ZXIgYWxsIGN1cnJlbnQgb3BlcmF0aW9ucyBp
biB0aGF0IGNvbnRleHQsIGFuZAotCQkgKiBhbGwgZnV0dXJlIG9wZXJhdGlvbnMgbXVzdCBvY2N1
ciBhZnRlciB0aGlzLgotCQkgKgotCQkgKiBDdXJyZW50bHksIHRoZSB0aW1lbGluZS0+bGFzdF9y
ZXF1ZXN0IHRyYWNraW5nIGlzIGd1YXJkZWQKLQkJICogYnkgaXRzIG11dGV4IGFuZCBzbyB3ZSBt
dXN0IG9idGFpbiB0aGF0IHRvIGF0b21pY2FsbHkKLQkJICogaW5zZXJ0IG91ciBiYXJyaWVyLiBI
b3dldmVyLCBzaW5jZSB3ZSBhbHJlYWR5IGhvbGQgb3VyCi0JCSAqIHRpbWVsaW5lLT5tdXRleCwg
d2UgbXVzdCBiZSBjYXJlZnVsIGFnYWluc3QgcG90ZW50aWFsCi0JCSAqIGludmVyc2lvbiBpZiB3
ZSBhcmUgdGhlIGtlcm5lbF9jb250ZXh0IGFzIHRoZSByZW1vdGUgY29udGV4dAotCQkgKiB3aWxs
IGl0c2VsZiBwb2tlIGF0IHRoZSBrZXJuZWxfY29udGV4dCB3aGVuIGl0IG5lZWRzIHRvCi0JCSAq
IHVucGluLiBFcmdvLCBpZiBhbHJlYWR5IGxvY2tlZCwgd2UgZHJvcCBib3RoIGxvY2tzIGFuZAot
CQkgKiB0cnkgYWdhaW4gKHRocm91Z2ggdGhlIG1hZ2ljIG9mIHVzZXJzcGFjZSByZXBlYXRpbmcg
RUFHQUlOKS4KLQkJICovCi0JCWlmICghbXV0ZXhfdHJ5bG9jaygmdGwtPm11dGV4KSkKLQkJCXJl
dHVybiAtRUFHQUlOOwotCiAJCS8qIFF1ZXVlIHRoaXMgc3dpdGNoIGFmdGVyIGN1cnJlbnQgYWN0
aXZpdHkgYnkgdGhpcyBjb250ZXh0LiAqLwogCQllcnIgPSBpOTE1X2FjdGl2ZV9mZW5jZV9zZXQo
JnRsLT5sYXN0X3JlcXVlc3QsIHJxKTsKLQkJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogCQlp
ZiAoZXJyKQogCQkJcmV0dXJuIGVycjsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF90aW1lbGluZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
dGltZWxpbmUuYwppbmRleCBjMWQyNDE5NDQ0ZjguLjAzOGUwNWE2MzM2YyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfdGltZWxpbmUuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF90aW1lbGluZS5jCkBAIC0yNTQsNyArMjU0LDcgQEAgaW50IGlu
dGVsX3RpbWVsaW5lX2luaXQoc3RydWN0IGludGVsX3RpbWVsaW5lICp0aW1lbGluZSwKIAogCW11
dGV4X2luaXQoJnRpbWVsaW5lLT5tdXRleCk7CiAKLQlJTklUX0FDVElWRV9GRU5DRSgmdGltZWxp
bmUtPmxhc3RfcmVxdWVzdCwgJnRpbWVsaW5lLT5tdXRleCk7CisJSU5JVF9BQ1RJVkVfRkVOQ0Uo
JnRpbWVsaW5lLT5sYXN0X3JlcXVlc3QpOwogCUlOSVRfTElTVF9IRUFEKCZ0aW1lbGluZS0+cmVx
dWVzdHMpOwogCiAJaTkxNV9zeW5jbWFwX2luaXQoJnRpbWVsaW5lLT5zeW5jKTsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0cy9tb2NrX3RpbWVsaW5lLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdHMvbW9ja190aW1lbGluZS5jCmluZGV4IDJh
NzdjMDUxZjM2YS4uYWViMWQxZjYxNmU4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9zZWxmdGVzdHMvbW9ja190aW1lbGluZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0cy9tb2NrX3RpbWVsaW5lLmMKQEAgLTE1LDcgKzE1LDcgQEAgdm9pZCBtb2Nr
X3RpbWVsaW5lX2luaXQoc3RydWN0IGludGVsX3RpbWVsaW5lICp0aW1lbGluZSwgdTY0IGNvbnRl
eHQpCiAKIAltdXRleF9pbml0KCZ0aW1lbGluZS0+bXV0ZXgpOwogCi0JSU5JVF9BQ1RJVkVfRkVO
Q0UoJnRpbWVsaW5lLT5sYXN0X3JlcXVlc3QsICZ0aW1lbGluZS0+bXV0ZXgpOworCUlOSVRfQUNU
SVZFX0ZFTkNFKCZ0aW1lbGluZS0+bGFzdF9yZXF1ZXN0KTsKIAlJTklUX0xJU1RfSEVBRCgmdGlt
ZWxpbmUtPnJlcXVlc3RzKTsKIAogCWk5MTVfc3luY21hcF9pbml0KCZ0aW1lbGluZS0+c3luYyk7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYwppbmRleCBkY2ExNWFjZTg4ZjYuLjFiNDAzMDgz
YzQ1NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5jCkBAIC0xODksMTUgKzE4OSwxNSBA
QCBhY3RpdmVfcmV0aXJlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmKQogc3RhdGljIHZvaWQKIG5v
ZGVfcmV0aXJlKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpj
YikKIHsKLQlpOTE1X2FjdGl2ZV9mZW5jZV9jYihmZW5jZSwgY2IpOwotCWFjdGl2ZV9yZXRpcmUo
Y29udGFpbmVyX29mKGNiLCBzdHJ1Y3QgYWN0aXZlX25vZGUsIGJhc2UuY2IpLT5yZWYpOworCWlm
IChpOTE1X2FjdGl2ZV9mZW5jZV9jYihmZW5jZSwgY2IpKQorCQlhY3RpdmVfcmV0aXJlKGNvbnRh
aW5lcl9vZihjYiwgc3RydWN0IGFjdGl2ZV9ub2RlLCBiYXNlLmNiKS0+cmVmKTsKIH0KIAogc3Rh
dGljIHZvaWQKIGV4Y2xfcmV0aXJlKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBzdHJ1Y3QgZG1h
X2ZlbmNlX2NiICpjYikKIHsKLQlpOTE1X2FjdGl2ZV9mZW5jZV9jYihmZW5jZSwgY2IpOwotCWFj
dGl2ZV9yZXRpcmUoY29udGFpbmVyX29mKGNiLCBzdHJ1Y3QgaTkxNV9hY3RpdmUsIGV4Y2wuY2Ip
KTsKKwlpZiAoaTkxNV9hY3RpdmVfZmVuY2VfY2IoZmVuY2UsIGNiKSkKKwkJYWN0aXZlX3JldGly
ZShjb250YWluZXJfb2YoY2IsIHN0cnVjdCBpOTE1X2FjdGl2ZSwgZXhjbC5jYikpOwogfQogCiBz
dGF0aWMgc3RydWN0IGk5MTVfYWN0aXZlX2ZlbmNlICoKQEAgLTI0NCw3ICsyNDQsNyBAQCBhY3Rp
dmVfaW5zdGFuY2Uoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYsIHN0cnVjdCBpbnRlbF90aW1lbGlu
ZSAqdGwpCiAJfQogCiAJbm9kZSA9IHByZWFsbG9jOwotCV9faTkxNV9hY3RpdmVfZmVuY2VfaW5p
dCgmbm9kZS0+YmFzZSwgJnRsLT5tdXRleCwgTlVMTCwgbm9kZV9yZXRpcmUpOworCV9faTkxNV9h
Y3RpdmVfZmVuY2VfaW5pdCgmbm9kZS0+YmFzZSwgTlVMTCwgbm9kZV9yZXRpcmUpOwogCW5vZGUt
PnJlZiA9IHJlZjsKIAlub2RlLT50aW1lbGluZSA9IGlkeDsKIApAQCAtMjgxLDcgKzI4MSw3IEBA
IHZvaWQgX19pOTE1X2FjdGl2ZV9pbml0KHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLAogCWluaXRf
bGxpc3RfaGVhZCgmcmVmLT5wcmVhbGxvY2F0ZWRfYmFycmllcnMpOwogCWF0b21pY19zZXQoJnJl
Zi0+Y291bnQsIDApOwogCV9fbXV0ZXhfaW5pdCgmcmVmLT5tdXRleCwgImk5MTVfYWN0aXZlIiwg
a2V5KTsKLQlfX2k5MTVfYWN0aXZlX2ZlbmNlX2luaXQoJnJlZi0+ZXhjbCwgJnJlZi0+bXV0ZXgs
IE5VTEwsIGV4Y2xfcmV0aXJlKTsKKwlfX2k5MTVfYWN0aXZlX2ZlbmNlX2luaXQoJnJlZi0+ZXhj
bCwgTlVMTCwgZXhjbF9yZXRpcmUpOwogCUlOSVRfV09SSygmcmVmLT53b3JrLCBhY3RpdmVfd29y
ayk7CiB9CiAKQEAgLTM3NiwxNSArMzc2LDggQEAgdm9pZCBpOTE1X2FjdGl2ZV9zZXRfZXhjbHVz
aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLCBzdHJ1Y3QgZG1hX2ZlbmNlICpmKQogCS8qIFdl
IGV4cGVjdCB0aGUgY2FsbGVyIHRvIG1hbmFnZSB0aGUgZXhjbHVzaXZlIHRpbWVsaW5lIG9yZGVy
aW5nICovCiAJR0VNX0JVR19PTihpOTE1X2FjdGl2ZV9pc19pZGxlKHJlZikpOwogCi0JLyoKLQkg
KiBBcyB3ZSBkb24ndCBrbm93IHdoaWNoIG11dGV4IHRoZSBjYWxsZXIgaXMgdXNpbmcsIHdlIHRv
bGQgYSBzbWFsbAotCSAqIGxpZSB0byB0aGUgZGVidWcgY29kZSB0aGF0IGl0IGlzIHVzaW5nIHRo
ZSBpOTE1X2FjdGl2ZS5tdXRleDsKLQkgKiBhbmQgbm93IHdlIG11c3Qgc3RpY2sgdG8gdGhhdCBs
aWUuCi0JICovCi0JbXV0ZXhfYWNxdWlyZSgmcmVmLT5tdXRleC5kZXBfbWFwLCAwLCAwLCBfVEhJ
U19JUF8pOwogCWlmICghX19pOTE1X2FjdGl2ZV9mZW5jZV9zZXQoJnJlZi0+ZXhjbCwgZikpCiAJ
CWF0b21pY19pbmMoJnJlZi0+Y291bnQpOwotCW11dGV4X3JlbGVhc2UoJnJlZi0+bXV0ZXguZGVw
X21hcCwgMCwgX1RISVNfSVBfKTsKIH0KIAogYm9vbCBpOTE1X2FjdGl2ZV9hY3F1aXJlX2lmX2J1
c3koc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCkBAIC02MTUsMTAgKzYwOCw2IEBAIGludCBpOTE1
X2FjdGl2ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIoc3RydWN0IGk5MTVfYWN0aXZlICpy
ZWYsCiAJCQkJZ290byB1bndpbmQ7CiAJCQl9CiAKLSNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1f
STkxNV9ERUJVR19HRU0pCi0JCQlub2RlLT5iYXNlLmxvY2sgPQotCQkJCSZlbmdpbmUtPmtlcm5l
bF9jb250ZXh0LT50aW1lbGluZS0+bXV0ZXg7Ci0jZW5kaWYKIAkJCVJDVV9JTklUX1BPSU5URVIo
bm9kZS0+YmFzZS5mZW5jZSwgTlVMTCk7CiAJCQlub2RlLT5iYXNlLmNiLmZ1bmMgPSBub2RlX3Jl
dGlyZTsKIAkJCW5vZGUtPnRpbWVsaW5lID0gaWR4OwpAQCAtNzI4LDEyICs3MTcsNiBAQCB2b2lk
IGk5MTVfcmVxdWVzdF9hZGRfYWN0aXZlX2JhcnJpZXJzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnJxLT5sb2NrLCBmbGFncyk7CiB9CiAKLSNpZiBJ
U19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVR19HRU0pCi0jZGVmaW5lIGFjdGl2ZV9pc19o
ZWxkKGFjdGl2ZSkgbG9ja2RlcF9pc19oZWxkKChhY3RpdmUpLT5sb2NrKQotI2Vsc2UKLSNkZWZp
bmUgYWN0aXZlX2lzX2hlbGQoYWN0aXZlKSB0cnVlCi0jZW5kaWYKLQogLyoKICAqIF9faTkxNV9h
Y3RpdmVfZmVuY2Vfc2V0OiBVcGRhdGUgdGhlIGxhc3QgYWN0aXZlIGZlbmNlIGFsb25nIGl0cyB0
aW1lbGluZQogICogQGFjdGl2ZTogdGhlIGFjdGl2ZSB0cmFja2VyCkBAIC03NDQsNyArNzI3LDcg
QEAgdm9pZCBpOTE1X3JlcXVlc3RfYWRkX2FjdGl2ZV9iYXJyaWVycyhzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKICAqIGZlbmNlIG9udG8gdGhpcyBvbmUuIFJldHVybnMgdGhlIHByZXZpb3VzIGZl
bmNlIChpZiBub3QgYWxyZWFkeSBjb21wbGV0ZWQpLAogICogd2hpY2ggdGhlIGNhbGxlciBtdXN0
IGVuc3VyZSBpcyBleGVjdXRlZCBiZWZvcmUgdGhlIG5ldyBmZW5jZS4gVG8gZW5zdXJlCiAgKiB0
aGF0IHRoZSBvcmRlciBvZiBmZW5jZXMgd2l0aGluIHRoZSB0aW1lbGluZSBvZiB0aGUgaTkxNV9h
Y3RpdmVfZmVuY2UgaXMKLSAqIG1haW50YWluZWQsIGl0IG11c3QgYmUgbG9ja2VkIGJ5IHRoZSBj
YWxsZXIuCisgKiB1bmRlcnN0b29kLCBpdCBzaG91bGQgYmUgbG9ja2VkIGJ5IHRoZSBjYWxsZXIu
CiAgKi8KIHN0cnVjdCBkbWFfZmVuY2UgKgogX19pOTE1X2FjdGl2ZV9mZW5jZV9zZXQoc3RydWN0
IGk5MTVfYWN0aXZlX2ZlbmNlICphY3RpdmUsCkBAIC03NTMsMzQgKzczNiw0MCBAQCBfX2k5MTVf
YWN0aXZlX2ZlbmNlX3NldChzdHJ1Y3QgaTkxNV9hY3RpdmVfZmVuY2UgKmFjdGl2ZSwKIAlzdHJ1
Y3QgZG1hX2ZlbmNlICpwcmV2OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKLQkvKiBOQjogbXVz
dCBiZSBzZXJpYWxpc2VkIGJ5IGFuIG91dGVyIHRpbWVsaW5lIG11dGV4IChhY3RpdmUtPmxvY2sp
ICovCi0Jc3Bpbl9sb2NrX2lycXNhdmUoZmVuY2UtPmxvY2ssIGZsYWdzKTsKKwlpZiAoZmVuY2Ug
PT0gcmN1X2FjY2Vzc19wb2ludGVyKGFjdGl2ZS0+ZmVuY2UpKQorCQlyZXR1cm4gZmVuY2U7CisK
IAlHRU1fQlVHX09OKHRlc3RfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgJmZlbmNl
LT5mbGFncykpOwogCi0JcHJldiA9IHJjdV9kZXJlZmVyZW5jZV9wcm90ZWN0ZWQoYWN0aXZlLT5m
ZW5jZSwgYWN0aXZlX2lzX2hlbGQoYWN0aXZlKSk7CisJLyoKKwkgKiBDb25zaWRlciB0aGF0IHdl
IGhhdmUgdHdvIHRocmVhZHMgYXJyaXZpbmcgKEEgYW5kIEIpLCB3aXRoCisJICogQyBhbHJlYWR5
IHJlc2lkZW50IGFzIHRoZSBhY3RpdmUtPmZlbmNlLgorCSAqCisJICogQSBkb2VzIHRoZSB4Y2hn
IGZpcnN0LCBhbmQgc28gaXQgc2VlcyBDIG9yIE5VTEwgZGVwZW5kaW5nCisJICogb24gdGhlIHRp
bWluZyBvZiB0aGUgaW50ZXJydXB0IGhhbmRsZXIuIElmIGl0IGlzIE5VTEwsIHRoZQorCSAqIHBy
ZXZpb3VzIGZlbmNlIG11c3QgaGF2ZSBiZWVuIHNpZ25hbGVkIGFuZCB3ZSBrbm93IHRoYXQKKwkg
KiB3ZSBhcmUgZmlyc3Qgb24gdGhlIHRpbWVsaW5lLiBJZiBpdCBpcyBzdGlsbCBwcmVzZW50LAor
CSAqIHdlIGFjcXVpcmUgdGhlIGxvY2sgb24gdGhhdCBmZW5jZSBhbmQgc2VyaWFsaXNlIHdpdGgg
dGhlIGludGVycnVwdAorCSAqIGhhbmRsZXIsIGluIHRoZSBwcm9jZXNzIHJlbW92aW5nIGl0IGZy
b20gYW55IGZ1dHVyZSBpbnRlcnJ1cHQKKwkgKiBjYWxsYmFjay4gQSB3aWxsIHRoZW4gd2FpdCBv
biBDIGJlZm9yZSBleGVjdXRpbmcgKGlmIHByZXNlbnQpLgorCSAqCisJICogQXMgQiBpcyBzZWNv
bmQsIGl0IHNlZXMgQSBhcyB0aGUgcHJldmlvdXMgZmVuY2UgYW5kIHNvIHdhaXRzIGZvcgorCSAq
IGl0IHRvIGNvbXBsZXRlIGl0cyB0cmFuc2l0aW9uIGFuZCB0YWtlcyBvdmVyIHRoZSBvY2N1cGFu
Y3kgZm9yCisJICogaXRzZWxmIC0tIHJlbWVtYmVyaW5nIHRoYXQgaXQgbmVlZHMgdG8gd2FpdCBv
biBBIGJlZm9yZSBleGVjdXRpbmcuCisJICoKKwkgKiBOb3RlIHRoZSBzdHJvbmcgb3JkZXJpbmcg
b2YgdGhlIHRpbWVsaW5lIGFsc28gcHJvdmlkZXMgY29uc2lzdGVudAorCSAqIG5lc3RpbmcgcnVs
ZXMgZm9yIHRoZSBmZW5jZS0+bG9jazsgdGhlIG91dGVyIGxvY2sgaXMgYWx3YXlzIHRoZQorCSAq
IG9sZGVyIGxvY2suCisJICovCisJc3Bpbl9sb2NrX2lycXNhdmUoZmVuY2UtPmxvY2ssIGZsYWdz
KTsKKwlwcmV2ID0geGNoZyhfX2k5MTVfYWN0aXZlX2ZlbmNlX3Nsb3QoYWN0aXZlKSwgZmVuY2Up
OwogCWlmIChwcmV2KSB7CiAJCUdFTV9CVUdfT04ocHJldiA9PSBmZW5jZSk7CiAJCXNwaW5fbG9j
a19uZXN0ZWQocHJldi0+bG9jaywgU0lOR0xFX0RFUFRIX05FU1RJTkcpOwogCQlfX2xpc3RfZGVs
X2VudHJ5KCZhY3RpdmUtPmNiLm5vZGUpOwogCQlzcGluX3VubG9jayhwcmV2LT5sb2NrKTsgLyog
c2VyaWFsaXNlIHdpdGggcHJldi0+Y2JfbGlzdCAqLwotCi0JCS8qCi0JCSAqIGFjdGl2ZS0+ZmVu
Y2UgaXMgcmVzZXQgYnkgdGhlIGNhbGxiYWNrIGZyb20gaW5zaWRlCi0JCSAqIGludGVycnVwdCBj
b250ZXh0LiBXZSBuZWVkIHRvIHNlcmlhbGlzZSBvdXIgbGlzdAotCQkgKiBtYW5pcHVsYXRpb24g
d2l0aCB0aGUgZmVuY2UtPmxvY2sgdG8gcHJldmVudCB0aGUgcHJldgotCQkgKiBiZWluZyBsb3N0
IGluc2lkZSBhbiBpbnRlcnJ1cHQgKGl0IGNhbid0IGJlIHJlcGxhY2VkIGFzCi0JCSAqIG5vIG90
aGVyIGNhbGxlciBpcyBhbGxvd2VkIHRvIGVudGVyIF9faTkxNV9hY3RpdmVfZmVuY2Vfc2V0Ci0J
CSAqIGFzIHdlIGhvbGQgdGhlIHRpbWVsaW5lIGxvY2spLiBBZnRlciBzZXJpYWxpc2luZyB3aXRo
Ci0JCSAqIHRoZSBjYWxsYmFjaywgd2UgbmVlZCB0byBkb3VibGUgY2hlY2sgd2hpY2ggcmFuIGZp
cnN0LAotCQkgKiBvdXIgbGlzdF9kZWwoKSBbZGVjb3VwbGluZyBwcmV2IGZyb20gdGhlIGNhbGxi
YWNrXSBvcgotCQkgKiB0aGUgY2FsbGJhY2suLi4KLQkJICovCi0JCXByZXYgPSByY3VfYWNjZXNz
X3BvaW50ZXIoYWN0aXZlLT5mZW5jZSk7CiAJfQotCi0JcmN1X2Fzc2lnbl9wb2ludGVyKGFjdGl2
ZS0+ZmVuY2UsIGZlbmNlKTsKIAlsaXN0X2FkZF90YWlsKCZhY3RpdmUtPmNiLm5vZGUsICZmZW5j
ZS0+Y2JfbGlzdCk7Ci0KIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKGZlbmNlLT5sb2NrLCBmbGFn
cyk7CiAKIAlyZXR1cm4gcHJldjsKQEAgLTc5MiwxMCArNzgxLDYgQEAgaW50IGk5MTVfYWN0aXZl
X2ZlbmNlX3NldChzdHJ1Y3QgaTkxNV9hY3RpdmVfZmVuY2UgKmFjdGl2ZSwKIAlzdHJ1Y3QgZG1h
X2ZlbmNlICpmZW5jZTsKIAlpbnQgZXJyID0gMDsKIAotI2lmIElTX0VOQUJMRUQoQ09ORklHX0RS
TV9JOTE1X0RFQlVHX0dFTSkKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKGFjdGl2ZS0+bG9jayk7Ci0j
ZW5kaWYKLQogCS8qIE11c3QgbWFpbnRhaW4gdGltZWxpbmUgb3JkZXJpbmcgd3J0IHByZXZpb3Vz
IGFjdGl2ZSByZXF1ZXN0cyAqLwogCXJjdV9yZWFkX2xvY2soKTsKIAlmZW5jZSA9IF9faTkxNV9h
Y3RpdmVfZmVuY2Vfc2V0KGFjdGl2ZSwgJnJxLT5mZW5jZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9h
Y3RpdmUuaAppbmRleCA1ZGQ2MjMyM2I5MmEuLmZjYmRlMDE4NjkxYiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2FjdGl2ZS5oCkBAIC02MSwxOSArNjEsMTUgQEAgdm9pZCBpOTE1X2FjdGl2ZV9ub29w
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjYik7CiAgKi8K
IHN0YXRpYyBpbmxpbmUgdm9pZAogX19pOTE1X2FjdGl2ZV9mZW5jZV9pbml0KHN0cnVjdCBpOTE1
X2FjdGl2ZV9mZW5jZSAqYWN0aXZlLAotCQkJIHN0cnVjdCBtdXRleCAqbG9jaywKIAkJCSB2b2lk
ICpmZW5jZSwKIAkJCSBkbWFfZmVuY2VfZnVuY190IGZuKQogewogCVJDVV9JTklUX1BPSU5URVIo
YWN0aXZlLT5mZW5jZSwgZmVuY2UpOwogCWFjdGl2ZS0+Y2IuZnVuYyA9IGZuID86IGk5MTVfYWN0
aXZlX25vb3A7Ci0jaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfR0VNKQotCWFj
dGl2ZS0+bG9jayA9IGxvY2s7Ci0jZW5kaWYKIH0KIAotI2RlZmluZSBJTklUX0FDVElWRV9GRU5D
RShBLCBMT0NLKSBcCi0JX19pOTE1X2FjdGl2ZV9mZW5jZV9pbml0KChBKSwgKExPQ0spLCBOVUxM
LCBOVUxMKQorI2RlZmluZSBJTklUX0FDVElWRV9GRU5DRShBKSBcCisJX19pOTE1X2FjdGl2ZV9m
ZW5jZV9pbml0KChBKSwgTlVMTCwgTlVMTCkKIAogc3RydWN0IGRtYV9mZW5jZSAqCiBfX2k5MTVf
YWN0aXZlX2ZlbmNlX3NldChzdHJ1Y3QgaTkxNV9hY3RpdmVfZmVuY2UgKmFjdGl2ZSwKQEAgLTEy
NywxMyArMTIzLDI4IEBAIGk5MTVfYWN0aXZlX2ZlbmNlX2lzc2V0KGNvbnN0IHN0cnVjdCBpOTE1
X2FjdGl2ZV9mZW5jZSAqYWN0aXZlKQogCXJldHVybiByY3VfYWNjZXNzX3BvaW50ZXIoYWN0aXZl
LT5mZW5jZSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZAorLyoqCisgKiBfX2k5MTVfYWN0aXZl
X2ZlbmNlX3Nsb3QgLSBwcm92aWRlIHJhdyBhY2Nlc3MgdG8gdGhlIGRtYV9mZW5jZSBwb2ludGVy
CisgKiBAYWN0aXZlIC0gdGhlIGFjdGl2ZSB0cmFja2VyCisgKgorICogX19pOTE1X2FjdGl2ZV9m
ZW5jZV9zbG90KCkgc3RyaXBzIGF3YXkgdGhlIFJDVS1hbm5vdGF0aW9uIHNvIGJlIGNhcmVmdWwK
KyAqIGFuZCBvbmx5IHVzZSBpbiBjb25qdW5jdGlvbiB3aXRoIGF0b21pYyBhY2Nlc3MgdW5kZXJu
ZWF0aCBzb21lIHN0cm9uZworICogbG9ja2luZyBydWxlcywgc3VjaCBhcyBob2xkaW5nIGJvdGgg
dGhlIHBhc3QsIHByZXNlbnQgYW5kIGZ1dHVyZSBmZW5jZQorICogbG9ja3MuCisgKi8KK3N0YXRp
YyBpbmxpbmUgc3RydWN0IGRtYV9mZW5jZSAqKgorX19pOTE1X2FjdGl2ZV9mZW5jZV9zbG90KHN0
cnVjdCBpOTE1X2FjdGl2ZV9mZW5jZSAqYWN0aXZlKQoreworCXJldHVybiAoc3RydWN0IGRtYV9m
ZW5jZSAqKiBfX2ZvcmNlKSZhY3RpdmUtPmZlbmNlOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wK
IGk5MTVfYWN0aXZlX2ZlbmNlX2NiKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBzdHJ1Y3QgZG1h
X2ZlbmNlX2NiICpjYikKIHsKIAlzdHJ1Y3QgaTkxNV9hY3RpdmVfZmVuY2UgKmFjdGl2ZSA9CiAJ
CWNvbnRhaW5lcl9vZihjYiwgdHlwZW9mKCphY3RpdmUpLCBjYik7CiAKLQlSQ1VfSU5JVF9QT0lO
VEVSKGFjdGl2ZS0+ZmVuY2UsIE5VTEwpOworCXJldHVybiBjbXB4Y2hnKF9faTkxNV9hY3RpdmVf
ZmVuY2Vfc2xvdChhY3RpdmUpLCBmZW5jZSwgTlVMTCkgPT0gZmVuY2U7CiB9CiAKIC8qCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZV90eXBlcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVfdHlwZXMuaAppbmRleCA5NmFlZDBlZTcwMGEuLjYz
NjBjM2U0Yjc2NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZV90eXBlcy5oCkBA
IC0yMCwyMSArMjAsNiBAQAogc3RydWN0IGk5MTVfYWN0aXZlX2ZlbmNlIHsKIAlzdHJ1Y3QgZG1h
X2ZlbmNlIF9fcmN1ICpmZW5jZTsKIAlzdHJ1Y3QgZG1hX2ZlbmNlX2NiIGNiOwotI2lmIElTX0VO
QUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHX0dFTSkKLQkvKgotCSAqIEluY29ycG9yZWFsIQot
CSAqCi0JICogVXBkYXRlcyB0byB0aGUgaTkxNV9hY3RpdmVfcmVxdWVzdCBtdXN0IGJlIHNlcmlh
bGlzZWQgdW5kZXIgYSBsb2NrCi0JICogdG8gZW5zdXJlIHRoYXQgdGhlIHRpbWVsaW5lIGlzIG9y
ZGVyZWQuIE5vcm1hbGx5LCB0aGlzIGlzIHRoZQotCSAqIHRpbWVsaW5lLT5tdXRleCwgYnV0IGFu
b3RoZXIgbXV0ZXggbWF5IGJlIHVzZWQgc28gbG9uZyBhcyBpdCBpcwotCSAqIGRvbmUgc28gY29u
c2lzdGVudGx5LgotCSAqCi0JICogRm9yIGxvY2tkZXAgdHJhY2tpbmcgb2YgdGhlIGFib3ZlLCB3
ZSBzdG9yZSB0aGUgbG9jayB3ZSBpbnRlbmQKLQkgKiB0byBhbHdheXMgdXNlIGZvciB1cGRhdGVz
IG9mIHRoaXMgaTkxNV9hY3RpdmVfcmVxdWVzdCBkdXJpbmcKLQkgKiBjb25zdHJ1Y3Rpb24gYW5k
IGFzc2VydCB0aGF0IGlzIGhlbGQgb24gZXZlcnkgdXBkYXRlLgotCSAqLwotCXN0cnVjdCBtdXRl
eCAqbG9jazsKLSNlbmRpZgogfTsKIAogc3RydWN0IGFjdGl2ZV9ub2RlOwotLSAKMi4yNC4wCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 707522B27BA
	for <lists+intel-gfx@lfdr.de>; Fri, 13 Nov 2020 23:04:36 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BABC66E862;
	Fri, 13 Nov 2020 22:04:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 26B2E6E862
 for <intel-gfx@lists.freedesktop.org>; Fri, 13 Nov 2020 22:04:33 +0000 (UTC)
IronPort-SDR: 6lQS4FcWFPsSMurBSeju1wYUaEMor1qwrsE6GxwpHjG3dDucewfX+O2/DSwdWric34jtGAp0hn
 pW5CnymGOugQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9804"; a="170709121"
X-IronPort-AV: E=Sophos;i="5.77,476,1596524400"; d="scan'208";a="170709121"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 13 Nov 2020 14:04:30 -0800
IronPort-SDR: HO4yhlvCm9GNCRGpdmcmYJViekWIs7LKn9PTyhlmAK1MtWKZ5SbD1/I+aB4b7EHsMq6g0jsQpi
 gLKtAK/SsZLA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,476,1596524400"; d="scan'208";a="355681761"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga008.jf.intel.com with SMTP; 13 Nov 2020 14:04:28 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Sat, 14 Nov 2020 00:04:28 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 14 Nov 2020 00:03:45 +0200
Message-Id: <20201113220358.24794-11-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201113220358.24794-1-ville.syrjala@linux.intel.com>
References: <20201113220358.24794-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 10/23] drm/i915/dp: Allow big joiner modes in
 intel_dp_mode_valid(), v3.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNv
bT4KClNtYWxsIGNoYW5nZXMgdG8gaW50ZWxfZHBfbW9kZV92YWxpZCgpLCBhbGxvdyBsaXN0aW5n
IG1vZGVzIHRoYXQKY2FuIG9ubHkgYmUgc3VwcG9ydGVkIGluIHRoZSBiaWdqb2luZXIgY29uZmln
dXJhdGlvbiwgd2hpY2ggaXMKbm90IHN1cHBvcnRlZCB5ZXQuCgp2MTM6CiogQWxsb3cgYmlnam9p
bmVyIGlmIGhkaXNwbGF5ID41MTIwCnYxMjoKKiBzbGljZV9jb3VudCBsb2dpYyBzaW1wbGlmeSAo
VmlsbGUpCiogRml4IHVubmVjZXNzYXJ5IGNoYW5nZXMgaW4gZG93bnN0cmVhbV9tb2RlX3ZhbGlk
IChWaWxsZSkKdjExOgoqIE1ha2UgaW50ZWxfZHBfY2FuX2JpZ2pvaW5lciBub24gc3RhdGljCnNv
IGl0IGNhbiBiZSB1c2VkIGluIGludGVsX2Rpc3BsYXkgKE1hbmFzaSkKdjEwOgoqIFNpbXBsaWZ5
IGxvZ2ljIChWaWxsZSkKKiBBbGxvdyBiaWdqb2luZXIgb24gZWRwIChWaWxsZSkKdjk6CiogUmVz
dHJpYyBCaWdqb2luZXIgb24gUE9SVCBBIChWaWxsZSkKdjg6CiogdXNlIHNvdXJjZSBkb3RjbG9j
ayBmb3IgbWF4IGRvdGNsb2NrIChNYW5hc2kpCnY3OgoqIEFkZCBjYW5fYmlnam9pbmVyKCkgaGVs
cGVyIChWaWxsZSkKKiBQYXNzIGJpZ2pvaW5lciB0byBwbGFuZV9zaXplIHZhbGlkYXRpb24gKFZp
bGxlKQp2NjoKKiBSZWJhc2UgYWZ0ZXIgZHBfZG93bnN0cmVhbSBtb2RlIHZhbGlkIGNoYW5nZXMg
KE1hbmFzaSkKdjU6CiogSW5jcmVhc2UgbWF4IHBsYW5lIHdpZHRoIHRvIHN1cHBvcnQgOEsgd2l0
aCBiaWdqb2luZXIgKE1hYXJ0ZW4pCnY0OgoqIFJlYmFzZSAoTWFuYXNpKQoKQ2hhbmdlcyBzaW5j
ZSB2MToKLSBEaXNhbGxvdyBiaWdqb2luZXIgb24gZURQLgpDaGFuZ2VzIHNpbmNlIHYyOgotIFJl
bmFtZSBpbnRlbF9kcF9kb3duc3RyZWFtX21heF9kb3RjbG9jayB0byBpbnRlbF9kcF9tYXhfZG90
Y2xvY2ssCiAgYW5kIHNwbGl0IG9mZiB0aGUgZG93bnN0cmVhbSBhbmQgc291cmNlIGNoZWNraW5n
IHRvIGl0cyBvd24gZnVuY3Rpb24uCiAgKFZpbGxlKQp2MzoKKiBSZWJhc2UgKE1hbmFzaSkKClNp
Z25lZC1vZmYtYnk6IE1hbmFzaSBOYXZhcmUgPG1hbmFzaS5kLm5hdmFyZUBpbnRlbC5jb20+ClNp
Z25lZC1vZmYtYnk6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVuLmxhbmtob3JzdEBsaW51eC5p
bnRlbC5jb20+Clt2c3lyamFsYToKKiBLZWVwIGJpZ2pvaW5lciBkaXNhYmxlZCB1bnRpbCBldmVy
eXRoaW5nIGlzIHJlYWR5CiogQXBwZWFzZSBjaGVja3BhdGNoXQpTaWduZWQtb2ZmLWJ5OiBWaWxs
ZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgIDUgKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oIHwgIDMgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgIHwgODEgKysrKysrKysrKysrKysrKy0tLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaCAgICAgIHwgIDEgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYyAgfCAgMiArLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kc2kuYyAgICAgfCAgMiArLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMgICAgfCAgMiArLQogNyBmaWxlcyBjaGFu
Z2VkLCA3NiBpbnNlcnRpb25zKCspLCAyMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IGJlNTZmZTc4MmI0MS4uMDA0YWU5
NWVkZTE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YwpAQCAtMTc3NDEsNyArMTc3NDEsOCBAQCBpbnRlbF9tb2RlX3ZhbGlkKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsCiAKIGVudW0gZHJtX21vZGVfc3RhdHVzCiBpbnRlbF9tb2RlX3ZhbGlkX21heF9w
bGFuZV9zaXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQljb25zdCBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSkKKwkJCQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3Bs
YXlfbW9kZSAqbW9kZSwKKwkJCQlib29sIGJpZ2pvaW5lcikKIHsKIAlpbnQgcGxhbmVfd2lkdGhf
bWF4LCBwbGFuZV9oZWlnaHRfbWF4OwogCkBAIC0xNzc1OCw3ICsxNzc1OSw3IEBAIGludGVsX21v
ZGVfdmFsaWRfbWF4X3BsYW5lX3NpemUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LAogCSAqIHRvbyBiaWcgZm9yIHRoYXQuCiAJICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
Pj0gMTEpIHsKLQkJcGxhbmVfd2lkdGhfbWF4ID0gNTEyMDsKKwkJcGxhbmVfd2lkdGhfbWF4ID0g
NTEyMCA8PCBiaWdqb2luZXI7CiAJCXBsYW5lX2hlaWdodF9tYXggPSA0MzIwOwogCX0gZWxzZSB7
CiAJCXBsYW5lX3dpZHRoX21heCA9IDUxMjA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5oCmluZGV4IDZiZTE0ZTg1NzFhYS4uNWUwZDQyZDgyYzExIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaApAQCAtNTEzLDcg
KzUxMyw4IEBAIHUzMiBpbnRlbF9wbGFuZV9mYl9tYXhfc3RyaWRlKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKIGJvb2wgaW50ZWxfcGxhbmVfY2FuX3JlbWFwKGNvbnN0IHN0cnVj
dCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpOwogZW51bSBkcm1fbW9kZV9zdGF0dXMK
IGludGVsX21vZGVfdmFsaWRfbWF4X3BsYW5lX3NpemUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAotCQkJCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlKTsKKwkJ
CQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSwKKwkJCQlib29sIGJpZ2pvaW5l
cik7CiBlbnVtIHBoeSBpbnRlbF9wb3J0X3RvX3BoeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSwgZW51bSBwb3J0IHBvcnQpOwogYm9vbCBpc190cmFuc19wb3J0X3N5bmNfbW9kZShjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqc3RhdGUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMKaW5kZXggZWM4MzU5ZjAzYWFmLi41YWQ1OTYxMGViMTIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTI1NCw2ICsyNTQsMjAgQEAg
aW50ZWxfZHBfbWF4X2RhdGFfcmF0ZShpbnQgbWF4X2xpbmtfY2xvY2ssIGludCBtYXhfbGFuZXMp
CiAJcmV0dXJuIG1heF9saW5rX2Nsb2NrICogbWF4X2xhbmVzOwogfQogCitib29sIGludGVsX2Rw
X2Nhbl9iaWdqb2luZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwlzdHJ1Y3QgaW50
ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2Rw
KTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZpbnRlbF9kaWdfcG9ydC0+YmFz
ZTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXIt
PmJhc2UuZGV2KTsKKworCS8qIEZJWE1FIHJlbW92ZSBvbmNlIGV2ZXJ5dGhpbmcgaXMgaW4gcGxh
Y2UgKi8KKwlyZXR1cm4gZmFsc2U7CisKKwlyZXR1cm4gSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MiB8fAorCQkoSU5URUxfR0VOKGRldl9wcml2KSA9PSAxMSAmJgorCQkgZW5jb2Rlci0+cG9ydCAh
PSBQT1JUX0EpOworfQorCiBzdGF0aWMgaW50IGNubF9tYXhfc291cmNlX3JhdGUoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9y
dCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKQEAgLTUxOSw3ICs1MzMsOCBAQCBzbWFsbF9q
b2luZXJfcmFtX3NpemVfYml0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogc3Rh
dGljIHUxNiBpbnRlbF9kcF9kc2NfZ2V0X291dHB1dF9icHAoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUsCiAJCQkJICAgICAgIHUzMiBsaW5rX2Nsb2NrLCB1MzIgbGFuZV9jb3VudCwKLQkJ
CQkgICAgICAgdTMyIG1vZGVfY2xvY2ssIHUzMiBtb2RlX2hkaXNwbGF5KQorCQkJCSAgICAgICB1
MzIgbW9kZV9jbG9jaywgdTMyIG1vZGVfaGRpc3BsYXksCisJCQkJICAgICAgIGJvb2wgYmlnam9p
bmVyKQogewogCXUzMiBiaXRzX3Blcl9waXhlbCwgbWF4X2JwcF9zbWFsbF9qb2luZXJfcmFtOwog
CWludCBpOwpAQCAtNTM3LDYgKzU1MiwxMCBAQCBzdGF0aWMgdTE2IGludGVsX2RwX2RzY19nZXRf
b3V0cHV0X2JwcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkvKiBTbWFsbCBKb2lu
ZXIgQ2hlY2s6IG91dHB1dCBicHAgPD0gam9pbmVyIFJBTSAoYml0cykgLyBIb3Jpei4gd2lkdGgg
Ki8KIAltYXhfYnBwX3NtYWxsX2pvaW5lcl9yYW0gPSBzbWFsbF9qb2luZXJfcmFtX3NpemVfYml0
cyhpOTE1KSAvCiAJCW1vZGVfaGRpc3BsYXk7CisKKwlpZiAoYmlnam9pbmVyKQorCQltYXhfYnBw
X3NtYWxsX2pvaW5lcl9yYW0gKj0gMjsKKwogCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJNYXgg
c21hbGwgam9pbmVyIGJwcDogJXVcbiIsCiAJCSAgICBtYXhfYnBwX3NtYWxsX2pvaW5lcl9yYW0p
OwogCkBAIC01NDYsNiArNTY1LDE1IEBAIHN0YXRpYyB1MTYgaW50ZWxfZHBfZHNjX2dldF9vdXRw
dXRfYnBwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCSAqLwogCWJpdHNfcGVyX3Bp
eGVsID0gbWluKGJpdHNfcGVyX3BpeGVsLCBtYXhfYnBwX3NtYWxsX2pvaW5lcl9yYW0pOwogCisJ
aWYgKGJpZ2pvaW5lcikgeworCQl1MzIgbWF4X2JwcF9iaWdqb2luZXIgPQorCQkJaTkxNS0+bWF4
X2NkY2xrX2ZyZXEgKiA0OCAvCisJCQlpbnRlbF9kcF9tb2RlX3RvX2ZlY19jbG9jayhtb2RlX2Ns
b2NrKTsKKworCQlEUk1fREVCVUdfS01TKCJNYXggYmlnIGpvaW5lciBicHA6ICV1XG4iLCBtYXhf
YnBwX2JpZ2pvaW5lcik7CisJCWJpdHNfcGVyX3BpeGVsID0gbWluKGJpdHNfcGVyX3BpeGVsLCBt
YXhfYnBwX2JpZ2pvaW5lcik7CisJfQorCiAJLyogRXJyb3Igb3V0IGlmIHRoZSBtYXggYnBwIGlz
IGxlc3MgdGhhbiBzbWFsbGVzdCBhbGxvd2VkIHZhbGlkIGJwcCAqLwogCWlmIChiaXRzX3Blcl9w
aXhlbCA8IHZhbGlkX2RzY19icHBbMF0pIHsKIAkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIlVu
c3VwcG9ydGVkIEJQUCAldSwgbWluICV1XG4iLApAQCAtNTY4LDcgKzU5Niw4IEBAIHN0YXRpYyB1
MTYgaW50ZWxfZHBfZHNjX2dldF9vdXRwdXRfYnBwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1LAogfQogCiBzdGF0aWMgdTggaW50ZWxfZHBfZHNjX2dldF9zbGljZV9jb3VudChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAotCQkJCSAgICAgICBpbnQgbW9kZV9jbG9jaywgaW50IG1vZGVf
aGRpc3BsYXkpCisJCQkJICAgICAgIGludCBtb2RlX2Nsb2NrLCBpbnQgbW9kZV9oZGlzcGxheSwK
KwkJCQkgICAgICAgYm9vbCBiaWdqb2luZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAl1OCBtaW5fc2xpY2VfY291bnQsIGk7CkBA
IC01OTUsMTIgKzYyNCwxOCBAQCBzdGF0aWMgdTggaW50ZWxfZHBfZHNjX2dldF9zbGljZV9jb3Vu
dChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCiAJLyogRmluZCB0aGUgY2xvc2VzdCBtYXRj
aCB0byB0aGUgdmFsaWQgc2xpY2UgY291bnQgdmFsdWVzICovCiAJZm9yIChpID0gMDsgaSA8IEFS
UkFZX1NJWkUodmFsaWRfZHNjX3NsaWNlY291bnQpOyBpKyspIHsKLQkJaWYgKHZhbGlkX2RzY19z
bGljZWNvdW50W2ldID4KLQkJICAgIGRybV9kcF9kc2Nfc2lua19tYXhfc2xpY2VfY291bnQoaW50
ZWxfZHAtPmRzY19kcGNkLAotCQkJCQkJICAgIGZhbHNlKSkKKwkJdTggdGVzdF9zbGljZV9jb3Vu
dCA9IHZhbGlkX2RzY19zbGljZWNvdW50W2ldIDw8IGJpZ2pvaW5lcjsKKworCQlpZiAodGVzdF9z
bGljZV9jb3VudCA+CisJCSAgICBkcm1fZHBfZHNjX3NpbmtfbWF4X3NsaWNlX2NvdW50KGludGVs
X2RwLT5kc2NfZHBjZCwgZmFsc2UpKQogCQkJYnJlYWs7Ci0JCWlmIChtaW5fc2xpY2VfY291bnQg
IDw9IHZhbGlkX2RzY19zbGljZWNvdW50W2ldKQotCQkJcmV0dXJuIHZhbGlkX2RzY19zbGljZWNv
dW50W2ldOworCisJCS8qIGJpZyBqb2luZXIgbmVlZHMgc21hbGwgam9pbmVyIHRvIGJlIGVuYWJs
ZWQgKi8KKwkJaWYgKGJpZ2pvaW5lciAmJiB0ZXN0X3NsaWNlX2NvdW50IDwgNCkKKwkJCWNvbnRp
bnVlOworCisJCWlmIChtaW5fc2xpY2VfY291bnQgPD0gdGVzdF9zbGljZV9jb3VudCkKKwkJCXJl
dHVybiB0ZXN0X3NsaWNlX2NvdW50OwogCX0KIAogCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJV
bnN1cHBvcnRlZCBTbGljZSBDb3VudCAlZFxuIiwKQEAgLTcxNyw2ICs3NTIsNyBAQCBpbnRlbF9k
cF9tb2RlX3ZhbGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJdTE2IGRzY19t
YXhfb3V0cHV0X2JwcCA9IDA7CiAJdTggZHNjX3NsaWNlX2NvdW50ID0gMDsKIAllbnVtIGRybV9t
b2RlX3N0YXR1cyBzdGF0dXM7CisJYm9vbCBkc2MgPSBmYWxzZSwgYmlnam9pbmVyID0gZmFsc2U7
CiAKIAlpZiAobW9kZS0+ZmxhZ3MgJiBEUk1fTU9ERV9GTEFHX0RCTFNDQU4pCiAJCXJldHVybiBN
T0RFX05PX0RCTEVTQ0FOOwpAQCAtNzM3LDYgKzc3MywxNCBAQCBpbnRlbF9kcF9tb2RlX3ZhbGlk
KHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJaWYgKG1vZGUtPmNsb2NrIDwgMTAw
MDApCiAJCXJldHVybiBNT0RFX0NMT0NLX0xPVzsKIAorCWlmICgodGFyZ2V0X2Nsb2NrID4gbWF4
X2RvdGNsayB8fCBtb2RlLT5oZGlzcGxheSA+IDUxMjApICYmCisJICAgIGludGVsX2RwX2Nhbl9i
aWdqb2luZXIoaW50ZWxfZHApKSB7CisJCWJpZ2pvaW5lciA9IHRydWU7CisJCW1heF9kb3RjbGsg
Kj0gMjsKKwl9CisJaWYgKHRhcmdldF9jbG9jayA+IG1heF9kb3RjbGspCisJCXJldHVybiBNT0RF
X0NMT0NLX0hJR0g7CisKIAltYXhfbGlua19jbG9jayA9IGludGVsX2RwX21heF9saW5rX3JhdGUo
aW50ZWxfZHApOwogCW1heF9sYW5lcyA9IGludGVsX2RwX21heF9sYW5lX2NvdW50KGludGVsX2Rw
KTsKIApAQCAtNzY1LDE2ICs4MDksMjMgQEAgaW50ZWxfZHBfbW9kZV92YWxpZChzdHJ1Y3QgZHJt
X2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCQkJCQkJCSAgICBtYXhfbGlua19jbG9jaywKIAkJCQkJ
CQkgICAgbWF4X2xhbmVzLAogCQkJCQkJCSAgICB0YXJnZXRfY2xvY2ssCi0JCQkJCQkJICAgIG1v
ZGUtPmhkaXNwbGF5KSA+PiA0OworCQkJCQkJCSAgICBtb2RlLT5oZGlzcGxheSwKKwkJCQkJCQkg
ICAgYmlnam9pbmVyKSA+PiA0OwogCQkJZHNjX3NsaWNlX2NvdW50ID0KIAkJCQlpbnRlbF9kcF9k
c2NfZ2V0X3NsaWNlX2NvdW50KGludGVsX2RwLAogCQkJCQkJCSAgICAgdGFyZ2V0X2Nsb2NrLAot
CQkJCQkJCSAgICAgbW9kZS0+aGRpc3BsYXkpOworCQkJCQkJCSAgICAgbW9kZS0+aGRpc3BsYXks
CisJCQkJCQkJICAgICBiaWdqb2luZXIpOwogCQl9CisKKwkJZHNjID0gZHNjX21heF9vdXRwdXRf
YnBwICYmIGRzY19zbGljZV9jb3VudDsKIAl9CiAKLQlpZiAoKG1vZGVfcmF0ZSA+IG1heF9yYXRl
ICYmICEoZHNjX21heF9vdXRwdXRfYnBwICYmIGRzY19zbGljZV9jb3VudCkpIHx8Ci0JICAgIHRh
cmdldF9jbG9jayA+IG1heF9kb3RjbGspCisJLyogYmlnIGpvaW5lciBjb25maWd1cmF0aW9uIG5l
ZWRzIERTQyAqLworCWlmIChiaWdqb2luZXIgJiYgIWRzYykKKwkJcmV0dXJuIE1PREVfQ0xPQ0tf
SElHSDsKKworCWlmIChtb2RlX3JhdGUgPiBtYXhfcmF0ZSAmJiAhZHNjKQogCQlyZXR1cm4gTU9E
RV9DTE9DS19ISUdIOwogCiAJc3RhdHVzID0gaW50ZWxfZHBfbW9kZV92YWxpZF9kb3duc3RyZWFt
KGludGVsX2Nvbm5lY3RvciwKQEAgLTc4Miw3ICs4MzMsNyBAQCBpbnRlbF9kcF9tb2RlX3ZhbGlk
KHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJaWYgKHN0YXR1cyAhPSBNT0RFX09L
KQogCQlyZXR1cm4gc3RhdHVzOwogCi0JcmV0dXJuIGludGVsX21vZGVfdmFsaWRfbWF4X3BsYW5l
X3NpemUoZGV2X3ByaXYsIG1vZGUpOworCXJldHVybiBpbnRlbF9tb2RlX3ZhbGlkX21heF9wbGFu
ZV9zaXplKGRldl9wcml2LCBtb2RlLCBiaWdqb2luZXIpOwogfQogCiB1MzIgaW50ZWxfZHBfcGFj
a19hdXgoY29uc3QgdTggKnNyYywgaW50IHNyY19ieXRlcykKQEAgLTIzNTEsMTEgKzI0MDIsMTMg
QEAgc3RhdGljIGludCBpbnRlbF9kcF9kc2NfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwKIAkJCQkJCSAgICBwaXBlX2NvbmZpZy0+cG9ydF9jbG9jaywKIAkJCQkJCSAg
ICBwaXBlX2NvbmZpZy0+bGFuZV9jb3VudCwKIAkJCQkJCSAgICBhZGp1c3RlZF9tb2RlLT5jcnRj
X2Nsb2NrLAotCQkJCQkJICAgIGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXkpOworCQkJCQkJ
ICAgIGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXksCisJCQkJCQkgICAgZmFsc2UpOwogCQlk
c2NfZHBfc2xpY2VfY291bnQgPQogCQkJaW50ZWxfZHBfZHNjX2dldF9zbGljZV9jb3VudChpbnRl
bF9kcCwKIAkJCQkJCSAgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19jbG9jaywKLQkJCQkJCSAgICAg
YWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSk7CisJCQkJCQkgICAgIGFkanVzdGVkX21vZGUt
PmNydGNfaGRpc3BsYXksCisJCQkJCQkgICAgIGZhbHNlKTsKIAkJaWYgKCFkc2NfbWF4X291dHB1
dF9icHAgfHwgIWRzY19kcF9zbGljZV9jb3VudCkgewogCQkJZHJtX2RiZ19rbXMoJmRldl9wcml2
LT5kcm0sCiAJCQkJICAgICJDb21wcmVzc2VkIEJQUC9TbGljZSBDb3VudCBub3Qgc3VwcG9ydGVk
XG4iKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaAppbmRleCAzZjg2MmI0
ZmQzNGYuLmI4NzFhMDliNjkwMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuaApAQCAtMTA2LDYgKzEwNiw3IEBAIGJvb2wgaW50ZWxfZHBfc291cmNlX3N1cHBvcnRzX2hi
cjMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBib29sIGludGVsX2RwX2dldF9jb2xvcmlt
ZXRyeV9zdGF0dXMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBpbnQgaW50ZWxfZHBfbGlu
a19yZXF1aXJlZChpbnQgcGl4ZWxfY2xvY2ssIGludCBicHApOwogaW50IGludGVsX2RwX21heF9k
YXRhX3JhdGUoaW50IG1heF9saW5rX2Nsb2NrLCBpbnQgbWF4X2xhbmVzKTsKK2Jvb2wgaW50ZWxf
ZHBfY2FuX2JpZ2pvaW5lcihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIGJvb2wgaW50ZWxf
ZHBfbmVlZHNfdnNjX3NkcChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKIAkJCSAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSk7
CiB2b2lkIGludGVsX2RwX2NvbXB1dGVfcHNyX3ZzY19zZHAoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBf
bXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jCmluZGV4
IGM4ZmNlYzRkMDc4OC4uMGM4Njg0NjM0ZmNhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHBfbXN0LmMKQEAgLTcxNCw3ICs3MTQsNyBAQCBpbnRlbF9kcF9tc3RfbW9k
ZV92YWxpZF9jdHgoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKIAkJcmV0dXJuIDA7
CiAJfQogCi0JKnN0YXR1cyA9IGludGVsX21vZGVfdmFsaWRfbWF4X3BsYW5lX3NpemUoZGV2X3By
aXYsIG1vZGUpOworCSpzdGF0dXMgPSBpbnRlbF9tb2RlX3ZhbGlkX21heF9wbGFuZV9zaXplKGRl
dl9wcml2LCBtb2RlLCBmYWxzZSk7CiAJcmV0dXJuIDA7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RzaS5jCmluZGV4IGFmYTRlNjgxN2U4Yy4uZjQ1M2NlYjhkMTQ5IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpLmMKQEAgLTc1LDcgKzc1LDcg
QEAgZW51bSBkcm1fbW9kZV9zdGF0dXMgaW50ZWxfZHNpX21vZGVfdmFsaWQoc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvciwKIAkJCXJldHVybiBNT0RFX0NMT0NLX0hJR0g7CiAJfQogCi0J
cmV0dXJuIGludGVsX21vZGVfdmFsaWRfbWF4X3BsYW5lX3NpemUoZGV2X3ByaXYsIG1vZGUpOwor
CXJldHVybiBpbnRlbF9tb2RlX3ZhbGlkX21heF9wbGFuZV9zaXplKGRldl9wcml2LCBtb2RlLCBm
YWxzZSk7CiB9CiAKIHN0cnVjdCBpbnRlbF9kc2lfaG9zdCAqaW50ZWxfZHNpX2hvc3RfaW5pdChz
dHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2ksCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfaGRtaS5jCmluZGV4IGY5MDgzOGJjNzRmYi4uODI2NzRhODg1M2M2IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYwpAQCAtMjI3NCw3ICsyMjc0LDcgQEAg
aW50ZWxfaGRtaV9tb2RlX3ZhbGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJ
aWYgKHN0YXR1cyAhPSBNT0RFX09LKQogCQlyZXR1cm4gc3RhdHVzOwogCi0JcmV0dXJuIGludGVs
X21vZGVfdmFsaWRfbWF4X3BsYW5lX3NpemUoZGV2X3ByaXYsIG1vZGUpOworCXJldHVybiBpbnRl
bF9tb2RlX3ZhbGlkX21heF9wbGFuZV9zaXplKGRldl9wcml2LCBtb2RlLCBmYWxzZSk7CiB9CiAK
IGJvb2wgaW50ZWxfaGRtaV9kZWVwX2NvbG9yX3Bvc3NpYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAotLSAKMi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8D6EA803A4
	for <lists+intel-gfx@lfdr.de>; Sat,  3 Aug 2019 03:11:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 82E406E365;
	Sat,  3 Aug 2019 01:11:43 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4E6E96E365
 for <intel-gfx@lists.freedesktop.org>; Sat,  3 Aug 2019 01:11:41 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 02 Aug 2019 18:11:40 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,340,1559545200"; d="scan'208";a="257146529"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga001.jf.intel.com with ESMTP; 02 Aug 2019 18:11:40 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  2 Aug 2019 18:09:44 -0700
Message-Id: <20190803010944.10169-1-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.22.0
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC] drm/i915/gt: create a subfolder for GT debugfs
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIGlkZWEgaXMgdG8gYmV0dGVyIG9yZ2FuaXplIG91ciBkZWJ1Z2ZzIGVudHJpZXMgYnkgbW92
aW5nIHRoZQpHVC1yZWxhdGVkIG9uZXMgaW50byB0aGVpciBvd24gc3ViZm9sZGVyLCBzaW1pbGFy
bHkgdG8gd2hhdCB3ZSBkaWQgZm9yCnRoZSBrZXJuZWwgY29kZS4KCkFzIGFuIGV4YW1wbGUsIHRo
aXMgcGF0Y2ggbW92ZXMgdGhlIEd1Qy9IdUMgYW5kIHVzZXJfZm9yY2V3YWtlIGRlYnVnZnMsCmJ1
dCBhIGZldyBtb3JlIGZpbGVzIGNhbiBiZSBtb3ZlZCBpZiB3ZSBkZWNpZGUgdG8gZ28gdGhpcyB3
YXkgKGVuZ2luZQpzdGF0dXMsIGd0X3BtIGV0YykuIFRlc3QgdXBkYXRlcyB3aWxsIGFsc28gYmUg
cmVxdWlyZWQgdG8gbG9vayBmb3IgdGhlCmZpbGUgaW4gdGhlIGNvcnJlY3QgcGxhY2UuCgpWZXJ5
IGxpZ2h0bHkgdGVzdGVkIGFuZCBzdGlsbCBhIGJpdCByb3VnaCBhcm91bmQgdGhlIGVkZ2VzLgoK
U2lnbmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1
cmlvQGludGVsLmNvbT4KQ2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGxpbnV4LmludGVsLmNvbT4KLS0t
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZSAgICAgICAgICAgICAgfCAgIDEgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaCAgICAgICAgIHwgICA3ICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2RlYnVnZnMuYyB8IDQwMyArKysrKysrKysrKysrKysr
KysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jICAgICAgICB8IDM0OSAr
LS0tLS0tLS0tLS0tLS0tLS0KIDQgZmlsZXMgY2hhbmdlZCwgNDE0IGluc2VydGlvbnMoKyksIDM0
NiBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ndF9kZWJ1Z2ZzLmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9N
YWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCmluZGV4IDMzMWIxOWNjODI0
Ny4uN2M0MTA4YWY5NjZmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmls
ZQorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQpAQCAtNzQsNiArNzQsNyBAQCBn
dC15ICs9IFwKIAlndC9pbnRlbF9lbmdpbmVfY3MubyBcCiAJZ3QvaW50ZWxfZW5naW5lX3BtLm8g
XAogCWd0L2ludGVsX2d0Lm8gXAorCWd0L2ludGVsX2d0X2RlYnVnZnMubyBcCiAJZ3QvaW50ZWxf
Z3RfcG0ubyBcCiAJZ3QvaW50ZWxfaGFuZ2NoZWNrLm8gXAogCWd0L2ludGVsX2xyYy5vIFwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCmluZGV4IDQ5MjBjYjM1MWYxMC4uNjhjN2QxNTJmZjAx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmgKQEAgLTExLDYgKzExLDcgQEAKICNpbmNs
dWRlICJpbnRlbF9yZXNldC5oIgogCiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKK3N0cnVjdCBk
ZW50cnk7CiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2d0ICp1Y190b19ndChzdHJ1Y3Qg
aW50ZWxfdWMgKnVjKQogewpAQCAtNTcsNCArNTgsMTAgQEAgc3RhdGljIGlubGluZSBib29sIGlu
dGVsX2d0X2lzX3dlZGdlZChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCiB2b2lkIGludGVsX2d0X3F1
ZXVlX2hhbmdjaGVjayhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIAorI2lmZGVmIENPTkZJR19ERUJV
R19GUwordm9pZCBpbnRlbF9ndF9kZWJ1Z2ZzX3JlZ2lzdGVyKHN0cnVjdCBpbnRlbF9ndCAqZ3Qs
IHN0cnVjdCBkZW50cnkgKnJvb3QpOworI2Vsc2UKK3ZvaWQgaW50ZWxfZ3RfZGVidWdmc19yZWdp
c3RlcihzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBzdHJ1Y3QgZGVudHJ5ICpyb290KSB7IHJldHVybiB9
OworI2VuZGlmCisKICNlbmRpZiAvKiBfX0lOVEVMX0dUX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfZGVidWdmcy5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAwMC4uNGIyZjQwMTMyZTdhCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfZGVidWdmcy5jCkBAIC0wLDAgKzEsNDAzIEBACisvLyBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwg
Q29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSAiaW50ZWxfZ3QuaCIKKyNpbmNsdWRlICJpbnRl
bF9ydW50aW1lX3BtLmgiCisjaW5jbHVkZSAiZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIK
KworI2luY2x1ZGUgImk5MTVfZHJ2LmgiCisKKyNkZWZpbmUgREVGSU5FX0dUX1NIT1dfQVRUUklC
VVRFKHhfKSBcCitERUZJTkVfU0hPV19BVFRSSUJVVEUoeF8pOyBcCitzdGF0aWMgY29uc3QgdW1v
ZGVfdCB4XyMjX21vZGUgPSBTX0lSVUdPOworCisjZGVmaW5lIERFRklORV9HVF9TSU1QTEVfQVRU
UklCVVRFKHhfLCBmb3JtYXRfKSBcCitERUZJTkVfU0lNUExFX0FUVFJJQlVURSh4XyMjX2ZvcHMs
IHhfIyNfZ2V0LCB4XyMjX3NldCwgZm9ybWF0Xyk7IFwKK3N0YXRpYyBjb25zdCB1bW9kZV90IHhf
IyNfbW9kZSA9IFNfSVJVR08gfCBTX0lXVVNSOworCitzdGF0aWMgaW50IGk5MTVfaHVjX2xvYWRf
c3RhdHVzX3Nob3coc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBp
bnRlbF9ndCAqZ3QgPSBtLT5wcml2YXRlOworCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCXN0
cnVjdCBkcm1fcHJpbnRlciBwOworCisJaWYgKCFIQVNfR1RfVUMoZ3QtPmk5MTUpKQorCQlyZXR1
cm4gLUVOT0RFVjsKKworCXAgPSBkcm1fc2VxX2ZpbGVfcHJpbnRlcihtKTsKKwlpbnRlbF91Y19m
d19kdW1wKCZndC0+dWMuaHVjLmZ3LCAmcCk7CisKKwl3aXRoX2ludGVsX3J1bnRpbWVfcG0oJmd0
LT5pOTE1LT5ydW50aW1lX3BtLCB3YWtlcmVmKQorCQlzZXFfcHJpbnRmKG0sICJcbkh1QyBzdGF0
dXMgMHglMDh4OlxuIiwKKwkJCSAgIGludGVsX3VuY29yZV9yZWFkKGd0LT51bmNvcmUsIEhVQ19T
VEFUVVMyKSk7CisKKwlyZXR1cm4gMDsKK30KK0RFRklORV9HVF9TSE9XX0FUVFJJQlVURShpOTE1
X2h1Y19sb2FkX3N0YXR1cyk7CisKK3N0YXRpYyBpbnQgaTkxNV9ndWNfbG9hZF9zdGF0dXNfc2hv
dyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGludGVsX2d0ICpn
dCA9IG0tPnByaXZhdGU7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisJc3RydWN0IGRybV9w
cmludGVyIHA7CisKKwlpZiAoIUhBU19HVF9VQyhndC0+aTkxNSkpCisJCXJldHVybiAtRU5PREVW
OworCisJcCA9IGRybV9zZXFfZmlsZV9wcmludGVyKG0pOworCWludGVsX3VjX2Z3X2R1bXAoJmd0
LT51Yy5ndWMuZncsICZwKTsKKworCXdpdGhfaW50ZWxfcnVudGltZV9wbSgmZ3QtPmk5MTUtPnJ1
bnRpbWVfcG0sIHdha2VyZWYpIHsKKwkJdTMyIHRtcCA9IGludGVsX3VuY29yZV9yZWFkKGd0LT51
bmNvcmUsIEdVQ19TVEFUVVMpOworCQl1MzIgaTsKKworCQlzZXFfcHJpbnRmKG0sICJcbkd1QyBz
dGF0dXMgMHglMDh4OlxuIiwgdG1wKTsKKwkJc2VxX3ByaW50ZihtLCAiXHRCb290cm9tIHN0YXR1
cyA9IDB4JXhcbiIsCisJCQkgICAodG1wICYgR1NfQk9PVFJPTV9NQVNLKSA+PiBHU19CT09UUk9N
X1NISUZUKTsKKwkJc2VxX3ByaW50ZihtLCAiXHR1S2VybmVsIHN0YXR1cyA9IDB4JXhcbiIsCisJ
CQkgICAodG1wICYgR1NfVUtFUk5FTF9NQVNLKSA+PiBHU19VS0VSTkVMX1NISUZUKTsKKwkJc2Vx
X3ByaW50ZihtLCAiXHRNSUEgQ29yZSBzdGF0dXMgPSAweCV4XG4iLAorCQkJICAgKHRtcCAmIEdT
X01JQV9NQVNLKSA+PiBHU19NSUFfU0hJRlQpOworCQlzZXFfcHV0cyhtLCAiXG5TY3JhdGNoIHJl
Z2lzdGVyczpcbiIpOworCQlmb3IgKGkgPSAwOyBpIDwgMTY7IGkrKykgeworCQkJc2VxX3ByaW50
ZihtLCAiXHQlMmQ6IFx0MHgleFxuIiwKKwkJCQkgICBpLCBpbnRlbF91bmNvcmVfcmVhZChndC0+
dW5jb3JlLCBTT0ZUX1NDUkFUQ0goaSkpKTsKKwkJfQorCX0KKworCXJldHVybiAwOworfQorREVG
SU5FX0dUX1NIT1dfQVRUUklCVVRFKGk5MTVfZ3VjX2xvYWRfc3RhdHVzKTsKKworc3RhdGljIGNv
bnN0IGNoYXIgKgorc3RyaW5naWZ5X2d1Y19sb2dfdHlwZShlbnVtIGd1Y19sb2dfYnVmZmVyX3R5
cGUgdHlwZSkKK3sKKwlzd2l0Y2ggKHR5cGUpIHsKKwljYXNlIEdVQ19JU1JfTE9HX0JVRkZFUjoK
KwkJcmV0dXJuICJJU1IiOworCWNhc2UgR1VDX0RQQ19MT0dfQlVGRkVSOgorCQlyZXR1cm4gIkRQ
QyI7CisJY2FzZSBHVUNfQ1JBU0hfRFVNUF9MT0dfQlVGRkVSOgorCQlyZXR1cm4gIkNSQVNIIjsK
KwlkZWZhdWx0OgorCQlNSVNTSU5HX0NBU0UodHlwZSk7CisJfQorCisJcmV0dXJuICIiOworfQor
CitzdGF0aWMgdm9pZCBpOTE1X2d1Y19sb2dfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sCisJCQkg
ICAgICBzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cg
PSAmZ3QtPnVjLmd1Yy5sb2c7CisJZW51bSBndWNfbG9nX2J1ZmZlcl90eXBlIHR5cGU7CisKKwlp
ZiAoIWludGVsX2d1Y19sb2dfcmVsYXlfZW5hYmxlZChsb2cpKSB7CisJCXNlcV9wdXRzKG0sICJH
dUMgbG9nIHJlbGF5IGRpc2FibGVkXG4iKTsKKwkJcmV0dXJuOworCX0KKworCXNlcV9wdXRzKG0s
ICJHdUMgbG9nZ2luZyBzdGF0czpcbiIpOworCisJc2VxX3ByaW50ZihtLCAiXHRSZWxheSBmdWxs
IGNvdW50OiAldVxuIiwKKwkJICAgbG9nLT5yZWxheS5mdWxsX2NvdW50KTsKKworCWZvciAodHlw
ZSA9IEdVQ19JU1JfTE9HX0JVRkZFUjsgdHlwZSA8IEdVQ19NQVhfTE9HX0JVRkZFUjsgdHlwZSsr
KSB7CisJCXNlcV9wcmludGYobSwgIlx0JXM6XHRmbHVzaCBjb3VudCAlMTB1LCBvdmVyZmxvdyBj
b3VudCAlMTB1XG4iLAorCQkJICAgc3RyaW5naWZ5X2d1Y19sb2dfdHlwZSh0eXBlKSwKKwkJCSAg
IGxvZy0+c3RhdHNbdHlwZV0uZmx1c2gsCisJCQkgICBsb2ctPnN0YXRzW3R5cGVdLnNhbXBsZWRf
b3ZlcmZsb3cpOworCX0KK30KKworc3RhdGljIHZvaWQgaTkxNV9ndWNfY2xpZW50X2luZm8oc3Ry
dWN0IHNlcV9maWxlICptLAorCQkJCSBzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAorCQkJCSBzdHJ1Y3Qg
aW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwl1NjQgdG90ID0gMDsKKworCXNlcV9w
cmludGYobSwgIlx0UHJpb3JpdHkgJWQsIEd1QyBzdGFnZSBpbmRleDogJXUsIFBEIG9mZnNldCAw
eCV4XG4iLAorCQljbGllbnQtPnByaW9yaXR5LCBjbGllbnQtPnN0YWdlX2lkLCBjbGllbnQtPnBy
b2NfZGVzY19vZmZzZXQpOworCXNlcV9wcmludGYobSwgIlx0RG9vcmJlbGwgaWQgJWQsIG9mZnNl
dDogMHglbHhcbiIsCisJCWNsaWVudC0+ZG9vcmJlbGxfaWQsIGNsaWVudC0+ZG9vcmJlbGxfb2Zm
c2V0KTsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LT5pOTE1LCBpZCkgeworCQl1NjQg
c3VibWlzc2lvbnMgPSBjbGllbnQtPnN1Ym1pc3Npb25zW2lkXTsKKwkJdG90ICs9IHN1Ym1pc3Np
b25zOworCQlzZXFfcHJpbnRmKG0sICJcdFN1Ym1pc3Npb25zOiAlbGx1ICVzXG4iLAorCQkJCXN1
Ym1pc3Npb25zLCBlbmdpbmUtPm5hbWUpOworCX0KKwlzZXFfcHJpbnRmKG0sICJcdFRvdGFsOiAl
bGx1XG4iLCB0b3QpOworfQorCitzdGF0aWMgaW50IGk5MTVfZ3VjX2luZm9fc2hvdyhzdHJ1Y3Qg
c2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGludGVsX2d0ICpndCA9IG0tPnBy
aXZhdGU7CisJY29uc3Qgc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmd0LT51Yy5ndWM7CisKKwlp
ZiAoIWludGVsX3VjX3N1cHBvcnRzX2d1YygmZ3QtPnVjKSkKKwkJcmV0dXJuIC1FTk9ERVY7CisK
KwlpOTE1X2d1Y19sb2dfaW5mbyhtLCBndCk7CisKKwlpZiAoIWludGVsX3VjX3N1cHBvcnRzX2d1
Y19zdWJtaXNzaW9uKCZndC0+dWMpKQorCQlyZXR1cm4gMDsKKworCUdFTV9CVUdfT04oIWd1Yy0+
ZXhlY2J1Zl9jbGllbnQpOworCisJc2VxX3ByaW50ZihtLCAiXG5Eb29yYmVsbCBtYXA6XG4iKTsK
KwlzZXFfcHJpbnRmKG0sICJcdCUqcGJcbiIsIEdVQ19OVU1fRE9PUkJFTExTLCBndWMtPmRvb3Ji
ZWxsX2JpdG1hcCk7CisJc2VxX3ByaW50ZihtLCAiRG9vcmJlbGwgbmV4dCBjYWNoZWxpbmU6IDB4
JXhcbiIsIGd1Yy0+ZGJfY2FjaGVsaW5lKTsKKworCXNlcV9wcmludGYobSwgIlxuR3VDIGV4ZWNi
dWYgY2xpZW50IEAgJXA6XG4iLCBndWMtPmV4ZWNidWZfY2xpZW50KTsKKwlpOTE1X2d1Y19jbGll
bnRfaW5mbyhtLCBndCwgZ3VjLT5leGVjYnVmX2NsaWVudCk7CisKKwkvKiBBZGQgbW9yZSBhcyBy
ZXF1aXJlZCAuLi4gKi8KKworCXJldHVybiAwOworfQorREVGSU5FX0dUX1NIT1dfQVRUUklCVVRF
KGk5MTVfZ3VjX2luZm8pOworCitzdGF0aWMgaW50IGk5MTVfZ3VjX3N0YWdlX3Bvb2xfc2hvdyhz
dHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGludGVsX2d0ICpndCA9
IG0tPnByaXZhdGU7CisJY29uc3Qgc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmd0LT51Yy5ndWM7
CisJc3RydWN0IGd1Y19zdGFnZV9kZXNjICpkZXNjID0gZ3VjLT5zdGFnZV9kZXNjX3Bvb2xfdmFk
ZHI7CisJaW50ZWxfZW5naW5lX21hc2tfdCB0bXA7CisJaW50IGluZGV4OworCisJaWYgKCFpbnRl
bF91Y19zdXBwb3J0c19ndWNfc3VibWlzc2lvbigmZ3QtPnVjKSkKKwkJcmV0dXJuIC1FTk9ERVY7
CisKKwlmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBHVUNfTUFYX1NUQUdFX0RFU0NSSVBUT1JTOyBp
bmRleCsrLCBkZXNjKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCisJ
CWlmICghKGRlc2MtPmF0dHJpYnV0ZSAmIEdVQ19TVEFHRV9ERVNDX0FUVFJfQUNUSVZFKSkKKwkJ
CWNvbnRpbnVlOworCisJCXNlcV9wcmludGYobSwgIkd1QyBzdGFnZSBkZXNjcmlwdG9yICV1Olxu
IiwgaW5kZXgpOworCQlzZXFfcHJpbnRmKG0sICJcdEluZGV4OiAldVxuIiwgZGVzYy0+c3RhZ2Vf
aWQpOworCQlzZXFfcHJpbnRmKG0sICJcdEF0dHJpYnV0ZTogMHgleFxuIiwgZGVzYy0+YXR0cmli
dXRlKTsKKwkJc2VxX3ByaW50ZihtLCAiXHRQcmlvcml0eTogJWRcbiIsIGRlc2MtPnByaW9yaXR5
KTsKKwkJc2VxX3ByaW50ZihtLCAiXHREb29yYmVsbCBpZDogJWRcbiIsIGRlc2MtPmRiX2lkKTsK
KwkJc2VxX3ByaW50ZihtLCAiXHRFbmdpbmVzIHVzZWQ6IDB4JXhcbiIsCisJCQkgICBkZXNjLT5l
bmdpbmVzX3VzZWQpOworCQlzZXFfcHJpbnRmKG0sICJcdERvb3JiZWxsIHRyaWdnZXIgcGh5OiAw
eCVsbHgsIGNwdTogMHglbGx4LCB1SzogMHgleFxuIiwKKwkJCSAgIGRlc2MtPmRiX3RyaWdnZXJf
cGh5LAorCQkJICAgZGVzYy0+ZGJfdHJpZ2dlcl9jcHUsCisJCQkgICBkZXNjLT5kYl90cmlnZ2Vy
X3VrKTsKKwkJc2VxX3ByaW50ZihtLCAiXHRQcm9jZXNzIGRlc2NyaXB0b3I6IDB4JXhcbiIsCisJ
CQkgICBkZXNjLT5wcm9jZXNzX2Rlc2MpOworCQlzZXFfcHJpbnRmKG0sICJcdFdvcmtxdWV1ZSBh
ZGRyZXNzOiAweCV4LCBzaXplOiAweCV4XG4iLAorCQkJICAgZGVzYy0+d3FfYWRkciwgZGVzYy0+
d3Ffc2l6ZSk7CisJCXNlcV9wdXRjKG0sICdcbicpOworCisJCWZvcl9lYWNoX2VuZ2luZShlbmdp
bmUsIGd0LT5pOTE1LCB0bXApIHsKKwkJCXUzMiBndWNfZW5naW5lX2lkID0gZW5naW5lLT5ndWNf
aWQ7CisJCQlzdHJ1Y3QgZ3VjX2V4ZWNsaXN0X2NvbnRleHQgKmxyYyA9CisJCQkJCQkmZGVzYy0+
bHJjW2d1Y19lbmdpbmVfaWRdOworCisJCQlzZXFfcHJpbnRmKG0sICJcdCVzIExSQzpcbiIsIGVu
Z2luZS0+bmFtZSk7CisJCQlzZXFfcHJpbnRmKG0sICJcdFx0Q29udGV4dCBkZXNjOiAweCV4XG4i
LAorCQkJCSAgIGxyYy0+Y29udGV4dF9kZXNjKTsKKwkJCXNlcV9wcmludGYobSwgIlx0XHRDb250
ZXh0IGlkOiAweCV4XG4iLCBscmMtPmNvbnRleHRfaWQpOworCQkJc2VxX3ByaW50ZihtLCAiXHRc
dExSQ0E6IDB4JXhcbiIsIGxyYy0+cmluZ19scmNhKTsKKwkJCXNlcV9wcmludGYobSwgIlx0XHRS
aW5nIGJlZ2luOiAweCV4XG4iLCBscmMtPnJpbmdfYmVnaW4pOworCQkJc2VxX3ByaW50ZihtLCAi
XHRcdFJpbmcgZW5kOiAweCV4XG4iLCBscmMtPnJpbmdfZW5kKTsKKwkJCXNlcV9wdXRjKG0sICdc
bicpOworCQl9CisJfQorCisJcmV0dXJuIDA7Cit9CitERUZJTkVfR1RfU0hPV19BVFRSSUJVVEUo
aTkxNV9ndWNfc3RhZ2VfcG9vbCk7CisKK3N0YXRpYyBpbnQgaTkxNV9ndWNfbG9nX2R1bXAoc3Ry
dWN0IHNlcV9maWxlICptLCBib29sIGR1bXBfbG9hZF9lcnIpCit7CisJc3RydWN0IGludGVsX2d0
ICpndCA9IG0tPnByaXZhdGU7CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiA9IE5V
TEw7CisJdTMyICpsb2c7CisJaW50IGkgPSAwOworCisJaWYgKCFIQVNfR1RfVUMoZ3QtPmk5MTUp
KQorCQlyZXR1cm4gLUVOT0RFVjsKKworCWlmIChkdW1wX2xvYWRfZXJyKQorCQlvYmogPSBndC0+
dWMubG9hZF9lcnJfbG9nOworCWVsc2UgaWYgKGd0LT51Yy5ndWMubG9nLnZtYSkKKwkJb2JqID0g
Z3QtPnVjLmd1Yy5sb2cudm1hLT5vYmo7CisKKwlpZiAoIW9iaikKKwkJcmV0dXJuIDA7CisKKwls
b2cgPSBpOTE1X2dlbV9vYmplY3RfcGluX21hcChvYmosIEk5MTVfTUFQX1dDKTsKKwlpZiAoSVNf
RVJSKGxvZykpIHsKKwkJRFJNX0RFQlVHKCJGYWlsZWQgdG8gcGluIG9iamVjdFxuIik7CisJCXNl
cV9wdXRzKG0sICIobG9nIGRhdGEgdW5hY2Nlc3NpYmxlKVxuIik7CisJCXJldHVybiBQVFJfRVJS
KGxvZyk7CisJfQorCisJZm9yIChpID0gMDsgaSA8IG9iai0+YmFzZS5zaXplIC8gc2l6ZW9mKHUz
Mik7IGkgKz0gNCkKKwkJc2VxX3ByaW50ZihtLCAiMHglMDh4IDB4JTA4eCAweCUwOHggMHglMDh4
XG4iLAorCQkJICAgKihsb2cgKyBpKSwgKihsb2cgKyBpICsgMSksCisJCQkgICAqKGxvZyArIGkg
KyAyKSwgKihsb2cgKyBpICsgMykpOworCisJc2VxX3B1dGMobSwgJ1xuJyk7CisKKwlpOTE1X2dl
bV9vYmplY3RfdW5waW5fbWFwKG9iaik7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBp
OTE1X2d1Y19sb2dfZHVtcF9zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKK3sK
KwlyZXR1cm4gaTkxNV9ndWNfbG9nX2R1bXAobSwgZmFsc2UpOworfQorREVGSU5FX0dUX1NIT1df
QVRUUklCVVRFKGk5MTVfZ3VjX2xvZ19kdW1wKTsKKworc3RhdGljIGludCBpOTE1X2d1Y19sb2Fk
X2Vycl9sb2dfZHVtcF9zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKK3sKKwly
ZXR1cm4gaTkxNV9ndWNfbG9nX2R1bXAobSwgdHJ1ZSk7Cit9CitERUZJTkVfR1RfU0hPV19BVFRS
SUJVVEUoaTkxNV9ndWNfbG9hZF9lcnJfbG9nX2R1bXApOworCitzdGF0aWMgaW50IGk5MTVfZ3Vj
X2xvZ19sZXZlbF9nZXQodm9pZCAqZGF0YSwgdTY0ICp2YWwpCit7CisJc3RydWN0IGludGVsX2d0
ICpndCA9IGRhdGE7CisKKwlpZiAoIWludGVsX3VjX3N1cHBvcnRzX2d1YygmZ3QtPnVjKSkKKwkJ
cmV0dXJuIC1FTk9ERVY7CisKKwkqdmFsID0gaW50ZWxfZ3VjX2xvZ19nZXRfbGV2ZWwoJmd0LT51
Yy5ndWMubG9nKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGk5MTVfZ3VjX2xvZ19s
ZXZlbF9zZXQodm9pZCAqZGF0YSwgdTY0IHZhbCkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0g
ZGF0YTsKKworCWlmICghaW50ZWxfdWNfc3VwcG9ydHNfZ3VjKCZndC0+dWMpKQorCQlyZXR1cm4g
LUVOT0RFVjsKKworCXJldHVybiBpbnRlbF9ndWNfbG9nX3NldF9sZXZlbCgmZ3QtPnVjLmd1Yy5s
b2csIHZhbCk7Cit9CitERUZJTkVfR1RfU0lNUExFX0FUVFJJQlVURShpOTE1X2d1Y19sb2dfbGV2
ZWwsICIlbGxkXG4iKTsKKworc3RhdGljIGludCBpOTE1X2d1Y19sb2dfcmVsYXlfb3BlbihzdHJ1
Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0ID0gaW5vZGUtPmlfcHJpdmF0ZTsKKworCWlmICghaW50ZWxfdWNfc3VwcG9ydHNfZ3VjKCZn
dC0+dWMpKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCWZpbGUtPnByaXZhdGVfZGF0YSA9ICZndC0+
dWMuZ3VjLmxvZzsKKworCXJldHVybiBpbnRlbF9ndWNfbG9nX3JlbGF5X29wZW4oJmd0LT51Yy5n
dWMubG9nKTsKK30KKworc3RhdGljIHNzaXplX3QKK2k5MTVfZ3VjX2xvZ19yZWxheV93cml0ZShz
dHJ1Y3QgZmlsZSAqZmlscCwKKwkJCSBjb25zdCBjaGFyIF9fdXNlciAqdWJ1ZiwKKwkJCSBzaXpl
X3QgY250LAorCQkJIGxvZmZfdCAqcHBvcykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3VjX2xvZyAqbG9n
ID0gZmlscC0+cHJpdmF0ZV9kYXRhOworCisJaW50ZWxfZ3VjX2xvZ19yZWxheV9mbHVzaChsb2cp
OworCisJcmV0dXJuIGNudDsKK30KKworc3RhdGljIGludCBpOTE1X2d1Y19sb2dfcmVsYXlfcmVs
ZWFzZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKK3sKKwlzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0ID0gaW5vZGUtPmlfcHJpdmF0ZTsKKworCWludGVsX2d1Y19sb2dfcmVsYXlf
Y2xvc2UoJmd0LT51Yy5ndWMubG9nKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgY29uc3Qg
c3RydWN0IGZpbGVfb3BlcmF0aW9ucyBpOTE1X2d1Y19sb2dfcmVsYXlfZm9wcyA9IHsKKwkub3du
ZXIgPSBUSElTX01PRFVMRSwKKwkub3BlbiA9IGk5MTVfZ3VjX2xvZ19yZWxheV9vcGVuLAorCS53
cml0ZSA9IGk5MTVfZ3VjX2xvZ19yZWxheV93cml0ZSwKKwkucmVsZWFzZSA9IGk5MTVfZ3VjX2xv
Z19yZWxheV9yZWxlYXNlLAorfTsKKyNkZWZpbmUgaTkxNV9ndWNfbG9nX3JlbGF5X21vZGUgKFNf
SVJVR08gfCBTX0lXVVNSKQorCitzdGF0aWMgaW50IGk5MTVfZm9yY2V3YWtlX29wZW4oc3RydWN0
IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCit7CisJc3RydWN0IGludGVsX2d0ICpn
dCA9IGlub2RlLT5pX3ByaXZhdGU7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3Qt
PnVuY29yZTsKKworCWlmICghaW50ZWxfdW5jb3JlX2hhc19mb3JjZXdha2UodW5jb3JlKSkKKwkJ
cmV0dXJuIDA7CisKKwlmaWxlLT5wcml2YXRlX2RhdGEgPQorCQkodm9pZCAqKSh1aW50cHRyX3Qp
aW50ZWxfcnVudGltZV9wbV9nZXQodW5jb3JlLT5ycG0pOworCWludGVsX3VuY29yZV9mb3JjZXdh
a2VfdXNlcl9nZXQodW5jb3JlKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IGk5MTVf
Zm9yY2V3YWtlX3JlbGVhc2Uoc3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUp
Cit7CisJc3RydWN0IGludGVsX2d0ICpndCA9IGlub2RlLT5pX3ByaXZhdGU7CisJc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlID0gZ3QtPnVuY29yZTsKKworCWlmICghaW50ZWxfdW5jb3JlX2hh
c19mb3JjZXdha2UodW5jb3JlKSkKKwkJcmV0dXJuIDA7CisKKwlpbnRlbF91bmNvcmVfZm9yY2V3
YWtlX3VzZXJfcHV0KHVuY29yZSk7CisJaW50ZWxfcnVudGltZV9wbV9wdXQodW5jb3JlLT5ycG0s
CisJCQkgICAgIChpbnRlbF93YWtlcmVmX3QpKHVpbnRwdHJfdClmaWxlLT5wcml2YXRlX2RhdGEp
OworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25z
IGk5MTVfZm9yY2V3YWtlX3VzZXJfZm9wcyA9IHsKKwkub3duZXIgPSBUSElTX01PRFVMRSwKKwku
b3BlbiA9IGk5MTVfZm9yY2V3YWtlX29wZW4sCisJLnJlbGVhc2UgPSBpOTE1X2ZvcmNld2FrZV9y
ZWxlYXNlLAorfTsKKyNkZWZpbmUgaTkxNV9mb3JjZXdha2VfdXNlcl9tb2RlIFNfSVJVU1IKKwor
I2RlZmluZSBHVF9ERUJVR0ZTKG5hbWVfXykgeyAjbmFtZV9fLCAmbmFtZV9fIyNfZm9wcywgbmFt
ZV9fIyNfbW9kZSB9CitzdGF0aWMgY29uc3Qgc3RydWN0IHsKKwljb25zdCBjaGFyICpuYW1lOwor
CWNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgKmZvcHM7CisJdW1vZGVfdCBtb2RlOworI2Rl
ZmluZSBHVF9ERUJVR0ZTKG5hbWVfXykgeyAjbmFtZV9fLCAmbmFtZV9fIyNfZm9wcywgbmFtZV9f
IyNfbW9kZSB9Cit9IGd0X2RlYnVnZnNfbGlzdFtdID0geworCUdUX0RFQlVHRlMoaTkxNV9ndWNf
aW5mbyksCisJR1RfREVCVUdGUyhpOTE1X2d1Y19sb2FkX3N0YXR1cyksCisJR1RfREVCVUdGUyhp
OTE1X2d1Y19sb2dfZHVtcCksCisJR1RfREVCVUdGUyhpOTE1X2d1Y19sb2FkX2Vycl9sb2dfZHVt
cCksCisJR1RfREVCVUdGUyhpOTE1X2d1Y19zdGFnZV9wb29sKSwKKwlHVF9ERUJVR0ZTKGk5MTVf
aHVjX2xvYWRfc3RhdHVzKSwKKwlHVF9ERUJVR0ZTKGk5MTVfZ3VjX2xvZ19sZXZlbCksCisJR1Rf
REVCVUdGUyhpOTE1X2d1Y19sb2dfcmVsYXkpLAorCUdUX0RFQlVHRlMoaTkxNV9mb3JjZXdha2Vf
dXNlciksCit9OworCit2b2lkIGludGVsX2d0X2RlYnVnZnNfcmVnaXN0ZXIoc3RydWN0IGludGVs
X2d0ICpndCwgc3RydWN0IGRlbnRyeSAqcm9vdCkKK3sKKwlpbnQgaTsKKwlzdHJ1Y3QgZGVudHJ5
ICpndF9kZW50cnk7CisKKwlndF9kZW50cnkgPSBkZWJ1Z2ZzX2NyZWF0ZV9kaXIoImd0Iiwgcm9v
dCk7CisJaWYgKFdBUk5fT04oIWd0X2RlbnRyeSkpCisJCXJldHVybjsKKworCWZvciAoaSA9IDA7
IGkgPCBBUlJBWV9TSVpFKGd0X2RlYnVnZnNfbGlzdCk7IGkrKykgeworCQlkZWJ1Z2ZzX2NyZWF0
ZV9maWxlKGd0X2RlYnVnZnNfbGlzdFtpXS5uYW1lLAorCQkJCSAgICBndF9kZWJ1Z2ZzX2xpc3Rb
aV0ubW9kZSwKKwkJCQkgICAgZ3RfZGVudHJ5LCBndCwKKwkJCQkgICAgZ3RfZGVidWdmc19saXN0
W2ldLmZvcHMpOworCX0KK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKaW5kZXggNDYx
YThkZDRjYzQ3Li5mMzFjYTllYWUwMTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZGVidWdmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5j
CkBAIC0zOSw4ICszOSw4IEBACiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9wc3IuaCIKIAogI2lu
Y2x1ZGUgImdlbS9pOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIK
ICNpbmNsdWRlICJndC9pbnRlbF9yZXNldC5oIgotI2luY2x1ZGUgImd0L3VjL2ludGVsX2d1Y19z
dWJtaXNzaW9uLmgiCiAKICNpbmNsdWRlICJpOTE1X2RlYnVnZnMuaCIKICNpbmNsdWRlICJpOTE1
X2lycS5oIgpAQCAtMTg1OSwzMDYgKzE4NTksNiBAQCBzdGF0aWMgaW50IGk5MTVfbGxjKHN0cnVj
dCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBp
OTE1X2h1Y19sb2FkX3N0YXR1c19pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkK
LXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBub2RlX3RvX2k5MTUobS0+
cHJpdmF0ZSk7Ci0JaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7Ci0Jc3RydWN0IGRybV9wcmludGVy
IHA7Ci0KLQlpZiAoIUhBU19HVF9VQyhkZXZfcHJpdikpCi0JCXJldHVybiAtRU5PREVWOwotCi0J
cCA9IGRybV9zZXFfZmlsZV9wcmludGVyKG0pOwotCWludGVsX3VjX2Z3X2R1bXAoJmRldl9wcml2
LT5ndC51Yy5odWMuZncsICZwKTsKLQotCXdpdGhfaW50ZWxfcnVudGltZV9wbSgmZGV2X3ByaXYt
PnJ1bnRpbWVfcG0sIHdha2VyZWYpCi0JCXNlcV9wcmludGYobSwgIlxuSHVDIHN0YXR1cyAweCUw
OHg6XG4iLCBJOTE1X1JFQUQoSFVDX1NUQVRVUzIpKTsKLQotCXJldHVybiAwOwotfQotCi1zdGF0
aWMgaW50IGk5MTVfZ3VjX2xvYWRfc3RhdHVzX2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lk
ICpkYXRhKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9f
aTkxNShtLT5wcml2YXRlKTsKLQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQlzdHJ1Y3QgZHJt
X3ByaW50ZXIgcDsKLQotCWlmICghSEFTX0dUX1VDKGRldl9wcml2KSkKLQkJcmV0dXJuIC1FTk9E
RVY7Ci0KLQlwID0gZHJtX3NlcV9maWxlX3ByaW50ZXIobSk7Ci0JaW50ZWxfdWNfZndfZHVtcCgm
ZGV2X3ByaXYtPmd0LnVjLmd1Yy5mdywgJnApOwotCi0Jd2l0aF9pbnRlbF9ydW50aW1lX3BtKCZk
ZXZfcHJpdi0+cnVudGltZV9wbSwgd2FrZXJlZikgewotCQl1MzIgdG1wID0gSTkxNV9SRUFEKEdV
Q19TVEFUVVMpOwotCQl1MzIgaTsKLQotCQlzZXFfcHJpbnRmKG0sICJcbkd1QyBzdGF0dXMgMHgl
MDh4OlxuIiwgdG1wKTsKLQkJc2VxX3ByaW50ZihtLCAiXHRCb290cm9tIHN0YXR1cyA9IDB4JXhc
biIsCi0JCQkgICAodG1wICYgR1NfQk9PVFJPTV9NQVNLKSA+PiBHU19CT09UUk9NX1NISUZUKTsK
LQkJc2VxX3ByaW50ZihtLCAiXHR1S2VybmVsIHN0YXR1cyA9IDB4JXhcbiIsCi0JCQkgICAodG1w
ICYgR1NfVUtFUk5FTF9NQVNLKSA+PiBHU19VS0VSTkVMX1NISUZUKTsKLQkJc2VxX3ByaW50Ziht
LCAiXHRNSUEgQ29yZSBzdGF0dXMgPSAweCV4XG4iLAotCQkJICAgKHRtcCAmIEdTX01JQV9NQVNL
KSA+PiBHU19NSUFfU0hJRlQpOwotCQlzZXFfcHV0cyhtLCAiXG5TY3JhdGNoIHJlZ2lzdGVyczpc
biIpOwotCQlmb3IgKGkgPSAwOyBpIDwgMTY7IGkrKykgewotCQkJc2VxX3ByaW50ZihtLCAiXHQl
MmQ6IFx0MHgleFxuIiwKLQkJCQkgICBpLCBJOTE1X1JFQUQoU09GVF9TQ1JBVENIKGkpKSk7Ci0J
CX0KLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGNvbnN0IGNoYXIgKgotc3RyaW5naWZ5
X2d1Y19sb2dfdHlwZShlbnVtIGd1Y19sb2dfYnVmZmVyX3R5cGUgdHlwZSkKLXsKLQlzd2l0Y2gg
KHR5cGUpIHsKLQljYXNlIEdVQ19JU1JfTE9HX0JVRkZFUjoKLQkJcmV0dXJuICJJU1IiOwotCWNh
c2UgR1VDX0RQQ19MT0dfQlVGRkVSOgotCQlyZXR1cm4gIkRQQyI7Ci0JY2FzZSBHVUNfQ1JBU0hf
RFVNUF9MT0dfQlVGRkVSOgotCQlyZXR1cm4gIkNSQVNIIjsKLQlkZWZhdWx0OgotCQlNSVNTSU5H
X0NBU0UodHlwZSk7Ci0JfQotCi0JcmV0dXJuICIiOwotfQotCi1zdGF0aWMgdm9pZCBpOTE1X2d1
Y19sb2dfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sCi0JCQkgICAgICBzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCi17Ci0Jc3RydWN0IGludGVsX2d1Y19sb2cgKmxvZyA9ICZkZXZf
cHJpdi0+Z3QudWMuZ3VjLmxvZzsKLQllbnVtIGd1Y19sb2dfYnVmZmVyX3R5cGUgdHlwZTsKLQot
CWlmICghaW50ZWxfZ3VjX2xvZ19yZWxheV9lbmFibGVkKGxvZykpIHsKLQkJc2VxX3B1dHMobSwg
Ikd1QyBsb2cgcmVsYXkgZGlzYWJsZWRcbiIpOwotCQlyZXR1cm47Ci0JfQotCi0Jc2VxX3B1dHMo
bSwgIkd1QyBsb2dnaW5nIHN0YXRzOlxuIik7Ci0KLQlzZXFfcHJpbnRmKG0sICJcdFJlbGF5IGZ1
bGwgY291bnQ6ICV1XG4iLAotCQkgICBsb2ctPnJlbGF5LmZ1bGxfY291bnQpOwotCi0JZm9yICh0
eXBlID0gR1VDX0lTUl9MT0dfQlVGRkVSOyB0eXBlIDwgR1VDX01BWF9MT0dfQlVGRkVSOyB0eXBl
KyspIHsKLQkJc2VxX3ByaW50ZihtLCAiXHQlczpcdGZsdXNoIGNvdW50ICUxMHUsIG92ZXJmbG93
IGNvdW50ICUxMHVcbiIsCi0JCQkgICBzdHJpbmdpZnlfZ3VjX2xvZ190eXBlKHR5cGUpLAotCQkJ
ICAgbG9nLT5zdGF0c1t0eXBlXS5mbHVzaCwKLQkJCSAgIGxvZy0+c3RhdHNbdHlwZV0uc2FtcGxl
ZF9vdmVyZmxvdyk7Ci0JfQotfQotCi1zdGF0aWMgdm9pZCBpOTE1X2d1Y19jbGllbnRfaW5mbyhz
dHJ1Y3Qgc2VxX2ZpbGUgKm0sCi0JCQkJIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKLQkJCQkgc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKLXsKLQlzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmU7Ci0JZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7Ci0JdTY0IHRv
dCA9IDA7Ci0KLQlzZXFfcHJpbnRmKG0sICJcdFByaW9yaXR5ICVkLCBHdUMgc3RhZ2UgaW5kZXg6
ICV1LCBQRCBvZmZzZXQgMHgleFxuIiwKLQkJY2xpZW50LT5wcmlvcml0eSwgY2xpZW50LT5zdGFn
ZV9pZCwgY2xpZW50LT5wcm9jX2Rlc2Nfb2Zmc2V0KTsKLQlzZXFfcHJpbnRmKG0sICJcdERvb3Ji
ZWxsIGlkICVkLCBvZmZzZXQ6IDB4JWx4XG4iLAotCQljbGllbnQtPmRvb3JiZWxsX2lkLCBjbGll
bnQtPmRvb3JiZWxsX29mZnNldCk7Ci0KLQlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBkZXZfcHJp
diwgaWQpIHsKLQkJdTY0IHN1Ym1pc3Npb25zID0gY2xpZW50LT5zdWJtaXNzaW9uc1tpZF07Ci0J
CXRvdCArPSBzdWJtaXNzaW9uczsKLQkJc2VxX3ByaW50ZihtLCAiXHRTdWJtaXNzaW9uczogJWxs
dSAlc1xuIiwKLQkJCQlzdWJtaXNzaW9ucywgZW5naW5lLT5uYW1lKTsKLQl9Ci0Jc2VxX3ByaW50
ZihtLCAiXHRUb3RhbDogJWxsdVxuIiwgdG90KTsKLX0KLQotc3RhdGljIGludCBpOTE1X2d1Y19p
bmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSBub2RlX3RvX2k5MTUobS0+cHJpdmF0ZSk7Ci0JY29uc3Qgc3Ry
dWN0IGludGVsX2d1YyAqZ3VjID0gJmRldl9wcml2LT5ndC51Yy5ndWM7Ci0KLQlpZiAoIVVTRVNf
R1VDKGRldl9wcml2KSkKLQkJcmV0dXJuIC1FTk9ERVY7Ci0KLQlpOTE1X2d1Y19sb2dfaW5mbyht
LCBkZXZfcHJpdik7Ci0KLQlpZiAoIVVTRVNfR1VDX1NVQk1JU1NJT04oZGV2X3ByaXYpKQotCQly
ZXR1cm4gMDsKLQotCUdFTV9CVUdfT04oIWd1Yy0+ZXhlY2J1Zl9jbGllbnQpOwotCi0Jc2VxX3By
aW50ZihtLCAiXG5Eb29yYmVsbCBtYXA6XG4iKTsKLQlzZXFfcHJpbnRmKG0sICJcdCUqcGJcbiIs
IEdVQ19OVU1fRE9PUkJFTExTLCBndWMtPmRvb3JiZWxsX2JpdG1hcCk7Ci0Jc2VxX3ByaW50Ziht
LCAiRG9vcmJlbGwgbmV4dCBjYWNoZWxpbmU6IDB4JXhcbiIsIGd1Yy0+ZGJfY2FjaGVsaW5lKTsK
LQotCXNlcV9wcmludGYobSwgIlxuR3VDIGV4ZWNidWYgY2xpZW50IEAgJXA6XG4iLCBndWMtPmV4
ZWNidWZfY2xpZW50KTsKLQlpOTE1X2d1Y19jbGllbnRfaW5mbyhtLCBkZXZfcHJpdiwgZ3VjLT5l
eGVjYnVmX2NsaWVudCk7Ci0KLQkvKiBBZGQgbW9yZSBhcyByZXF1aXJlZCAuLi4gKi8KLQotCXJl
dHVybiAwOwotfQotCi1zdGF0aWMgaW50IGk5MTVfZ3VjX3N0YWdlX3Bvb2woc3RydWN0IHNlcV9m
aWxlICptLCB2b2lkICpkYXRhKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMgPSAmZGV2X3ByaXYtPmd0LnVjLmd1YzsKLQlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2Mg
PSBndWMtPnN0YWdlX2Rlc2NfcG9vbF92YWRkcjsKLQlpbnRlbF9lbmdpbmVfbWFza190IHRtcDsK
LQlpbnQgaW5kZXg7Ci0KLQlpZiAoIVVTRVNfR1VDX1NVQk1JU1NJT04oZGV2X3ByaXYpKQotCQly
ZXR1cm4gLUVOT0RFVjsKLQotCWZvciAoaW5kZXggPSAwOyBpbmRleCA8IEdVQ19NQVhfU1RBR0Vf
REVTQ1JJUFRPUlM7IGluZGV4KyssIGRlc2MrKykgewotCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmU7Ci0KLQkJaWYgKCEoZGVzYy0+YXR0cmlidXRlICYgR1VDX1NUQUdFX0RFU0NfQVRU
Ul9BQ1RJVkUpKQotCQkJY29udGludWU7Ci0KLQkJc2VxX3ByaW50ZihtLCAiR3VDIHN0YWdlIGRl
c2NyaXB0b3IgJXU6XG4iLCBpbmRleCk7Ci0JCXNlcV9wcmludGYobSwgIlx0SW5kZXg6ICV1XG4i
LCBkZXNjLT5zdGFnZV9pZCk7Ci0JCXNlcV9wcmludGYobSwgIlx0QXR0cmlidXRlOiAweCV4XG4i
LCBkZXNjLT5hdHRyaWJ1dGUpOwotCQlzZXFfcHJpbnRmKG0sICJcdFByaW9yaXR5OiAlZFxuIiwg
ZGVzYy0+cHJpb3JpdHkpOwotCQlzZXFfcHJpbnRmKG0sICJcdERvb3JiZWxsIGlkOiAlZFxuIiwg
ZGVzYy0+ZGJfaWQpOwotCQlzZXFfcHJpbnRmKG0sICJcdEVuZ2luZXMgdXNlZDogMHgleFxuIiwK
LQkJCSAgIGRlc2MtPmVuZ2luZXNfdXNlZCk7Ci0JCXNlcV9wcmludGYobSwgIlx0RG9vcmJlbGwg
dHJpZ2dlciBwaHk6IDB4JWxseCwgY3B1OiAweCVsbHgsIHVLOiAweCV4XG4iLAotCQkJICAgZGVz
Yy0+ZGJfdHJpZ2dlcl9waHksCi0JCQkgICBkZXNjLT5kYl90cmlnZ2VyX2NwdSwKLQkJCSAgIGRl
c2MtPmRiX3RyaWdnZXJfdWspOwotCQlzZXFfcHJpbnRmKG0sICJcdFByb2Nlc3MgZGVzY3JpcHRv
cjogMHgleFxuIiwKLQkJCSAgIGRlc2MtPnByb2Nlc3NfZGVzYyk7Ci0JCXNlcV9wcmludGYobSwg
Ilx0V29ya3F1ZXVlIGFkZHJlc3M6IDB4JXgsIHNpemU6IDB4JXhcbiIsCi0JCQkgICBkZXNjLT53
cV9hZGRyLCBkZXNjLT53cV9zaXplKTsKLQkJc2VxX3B1dGMobSwgJ1xuJyk7Ci0KLQkJZm9yX2Vh
Y2hfZW5naW5lKGVuZ2luZSwgZGV2X3ByaXYsIHRtcCkgewotCQkJdTMyIGd1Y19lbmdpbmVfaWQg
PSBlbmdpbmUtPmd1Y19pZDsKLQkJCXN0cnVjdCBndWNfZXhlY2xpc3RfY29udGV4dCAqbHJjID0K
LQkJCQkJCSZkZXNjLT5scmNbZ3VjX2VuZ2luZV9pZF07Ci0KLQkJCXNlcV9wcmludGYobSwgIlx0
JXMgTFJDOlxuIiwgZW5naW5lLT5uYW1lKTsKLQkJCXNlcV9wcmludGYobSwgIlx0XHRDb250ZXh0
IGRlc2M6IDB4JXhcbiIsCi0JCQkJICAgbHJjLT5jb250ZXh0X2Rlc2MpOwotCQkJc2VxX3ByaW50
ZihtLCAiXHRcdENvbnRleHQgaWQ6IDB4JXhcbiIsIGxyYy0+Y29udGV4dF9pZCk7Ci0JCQlzZXFf
cHJpbnRmKG0sICJcdFx0TFJDQTogMHgleFxuIiwgbHJjLT5yaW5nX2xyY2EpOwotCQkJc2VxX3By
aW50ZihtLCAiXHRcdFJpbmcgYmVnaW46IDB4JXhcbiIsIGxyYy0+cmluZ19iZWdpbik7Ci0JCQlz
ZXFfcHJpbnRmKG0sICJcdFx0UmluZyBlbmQ6IDB4JXhcbiIsIGxyYy0+cmluZ19lbmQpOwotCQkJ
c2VxX3B1dGMobSwgJ1xuJyk7Ci0JCX0KLQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGlu
dCBpOTE1X2d1Y19sb2dfZHVtcChzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCi17Ci0J
c3RydWN0IGRybV9pbmZvX25vZGUgKm5vZGUgPSBtLT5wcml2YXRlOwotCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShub2RlKTsKLQlib29sIGR1bXBfbG9h
ZF9lcnIgPSAhIW5vZGUtPmluZm9fZW50LT5kYXRhOwotCXN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmogPSBOVUxMOwotCXUzMiAqbG9nOwotCWludCBpID0gMDsKLQotCWlmICghSEFTX0dU
X1VDKGRldl9wcml2KSkKLQkJcmV0dXJuIC1FTk9ERVY7Ci0KLQlpZiAoZHVtcF9sb2FkX2VycikK
LQkJb2JqID0gZGV2X3ByaXYtPmd0LnVjLmxvYWRfZXJyX2xvZzsKLQllbHNlIGlmIChkZXZfcHJp
di0+Z3QudWMuZ3VjLmxvZy52bWEpCi0JCW9iaiA9IGRldl9wcml2LT5ndC51Yy5ndWMubG9nLnZt
YS0+b2JqOwotCi0JaWYgKCFvYmopCi0JCXJldHVybiAwOwotCi0JbG9nID0gaTkxNV9nZW1fb2Jq
ZWN0X3Bpbl9tYXAob2JqLCBJOTE1X01BUF9XQyk7Ci0JaWYgKElTX0VSUihsb2cpKSB7Ci0JCURS
TV9ERUJVRygiRmFpbGVkIHRvIHBpbiBvYmplY3RcbiIpOwotCQlzZXFfcHV0cyhtLCAiKGxvZyBk
YXRhIHVuYWNjZXNzaWJsZSlcbiIpOwotCQlyZXR1cm4gUFRSX0VSUihsb2cpOwotCX0KLQotCWZv
ciAoaSA9IDA7IGkgPCBvYmotPmJhc2Uuc2l6ZSAvIHNpemVvZih1MzIpOyBpICs9IDQpCi0JCXNl
cV9wcmludGYobSwgIjB4JTA4eCAweCUwOHggMHglMDh4IDB4JTA4eFxuIiwKLQkJCSAgICoobG9n
ICsgaSksICoobG9nICsgaSArIDEpLAotCQkJICAgKihsb2cgKyBpICsgMiksICoobG9nICsgaSAr
IDMpKTsKLQotCXNlcV9wdXRjKG0sICdcbicpOwotCi0JaTkxNV9nZW1fb2JqZWN0X3VucGluX21h
cChvYmopOwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgaTkxNV9ndWNfbG9nX2xldmVs
X2dldCh2b2lkICpkYXRhLCB1NjQgKnZhbCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkYXRhOwotCi0JaWYgKCFVU0VTX0dVQyhkZXZfcHJpdikpCi0JCXJldHVybiAt
RU5PREVWOwotCi0JKnZhbCA9IGludGVsX2d1Y19sb2dfZ2V0X2xldmVsKCZkZXZfcHJpdi0+Z3Qu
dWMuZ3VjLmxvZyk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBpOTE1X2d1Y19sb2df
bGV2ZWxfc2V0KHZvaWQgKmRhdGEsIHU2NCB2YWwpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gZGF0YTsKLQotCWlmICghVVNFU19HVUMoZGV2X3ByaXYpKQotCQlyZXR1
cm4gLUVOT0RFVjsKLQotCXJldHVybiBpbnRlbF9ndWNfbG9nX3NldF9sZXZlbCgmZGV2X3ByaXYt
Pmd0LnVjLmd1Yy5sb2csIHZhbCk7Ci19Ci0KLURFRklORV9TSU1QTEVfQVRUUklCVVRFKGk5MTVf
Z3VjX2xvZ19sZXZlbF9mb3BzLAotCQkJaTkxNV9ndWNfbG9nX2xldmVsX2dldCwgaTkxNV9ndWNf
bG9nX2xldmVsX3NldCwKLQkJCSIlbGxkXG4iKTsKLQotc3RhdGljIGludCBpOTE1X2d1Y19sb2df
cmVsYXlfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLQlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBpbm9kZS0+aV9wcml2YXRlOwotCi0J
aWYgKCFVU0VTX0dVQyhkZXZfcHJpdikpCi0JCXJldHVybiAtRU5PREVWOwotCi0JZmlsZS0+cHJp
dmF0ZV9kYXRhID0gJmRldl9wcml2LT5ndC51Yy5ndWMubG9nOwotCi0JcmV0dXJuIGludGVsX2d1
Y19sb2dfcmVsYXlfb3BlbigmZGV2X3ByaXYtPmd0LnVjLmd1Yy5sb2cpOwotfQotCi1zdGF0aWMg
c3NpemVfdAotaTkxNV9ndWNfbG9nX3JlbGF5X3dyaXRlKHN0cnVjdCBmaWxlICpmaWxwLAotCQkJ
IGNvbnN0IGNoYXIgX191c2VyICp1YnVmLAotCQkJIHNpemVfdCBjbnQsCi0JCQkgbG9mZl90ICpw
cG9zKQotewotCXN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cgPSBmaWxwLT5wcml2YXRlX2RhdGE7
Ci0KLQlpbnRlbF9ndWNfbG9nX3JlbGF5X2ZsdXNoKGxvZyk7Ci0KLQlyZXR1cm4gY250OwotfQot
Ci1zdGF0aWMgaW50IGk5MTVfZ3VjX2xvZ19yZWxheV9yZWxlYXNlKHN0cnVjdCBpbm9kZSAqaW5v
ZGUsIHN0cnVjdCBmaWxlICpmaWxlKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IGlub2RlLT5pX3ByaXZhdGU7Ci0KLQlpbnRlbF9ndWNfbG9nX3JlbGF5X2Nsb3NlKCZk
ZXZfcHJpdi0+Z3QudWMuZ3VjLmxvZyk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGNvbnN0
IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgaTkxNV9ndWNfbG9nX3JlbGF5X2ZvcHMgPSB7Ci0JLm93
bmVyID0gVEhJU19NT0RVTEUsCi0JLm9wZW4gPSBpOTE1X2d1Y19sb2dfcmVsYXlfb3BlbiwKLQku
d3JpdGUgPSBpOTE1X2d1Y19sb2dfcmVsYXlfd3JpdGUsCi0JLnJlbGVhc2UgPSBpOTE1X2d1Y19s
b2dfcmVsYXlfcmVsZWFzZSwKLX07Ci0KIHN0YXRpYyBpbnQgaTkxNV9wc3Jfc2lua19zdGF0dXNf
c2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiB7CiAJdTggdmFsOwpAQCAtNDA1
OSw0MCArMzc1OSw2IEBAIHN0YXRpYyBpbnQgaTkxNV9zc2V1X3N0YXR1cyhzdHJ1Y3Qgc2VxX2Zp
bGUgKm0sIHZvaWQgKnVudXNlZCkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBpOTE1X2Zv
cmNld2FrZV9vcGVuKHN0cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQotewot
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gaW5vZGUtPmlfcHJpdmF0ZTsKLQotCWlm
IChJTlRFTF9HRU4oaTkxNSkgPCA2KQotCQlyZXR1cm4gMDsKLQotCWZpbGUtPnByaXZhdGVfZGF0
YSA9Ci0JCSh2b2lkICopKHVpbnRwdHJfdClpbnRlbF9ydW50aW1lX3BtX2dldCgmaTkxNS0+cnVu
dGltZV9wbSk7Ci0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV91c2VyX2dldCgmaTkxNS0+dW5jb3Jl
KTsKLQotCXJldHVybiAwOwotfQotCi1zdGF0aWMgaW50IGk5MTVfZm9yY2V3YWtlX3JlbGVhc2Uo
c3RydWN0IGlub2RlICppbm9kZSwgc3RydWN0IGZpbGUgKmZpbGUpCi17Ci0Jc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUgPSBpbm9kZS0+aV9wcml2YXRlOwotCi0JaWYgKElOVEVMX0dFTihp
OTE1KSA8IDYpCi0JCXJldHVybiAwOwotCi0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV91c2VyX3B1
dCgmaTkxNS0+dW5jb3JlKTsKLQlpbnRlbF9ydW50aW1lX3BtX3B1dCgmaTkxNS0+cnVudGltZV9w
bSwKLQkJCSAgICAgKGludGVsX3dha2VyZWZfdCkodWludHB0cl90KWZpbGUtPnByaXZhdGVfZGF0
YSk7Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlv
bnMgaTkxNV9mb3JjZXdha2VfZm9wcyA9IHsKLQkub3duZXIgPSBUSElTX01PRFVMRSwKLQkub3Bl
biA9IGk5MTVfZm9yY2V3YWtlX29wZW4sCi0JLnJlbGVhc2UgPSBpOTE1X2ZvcmNld2FrZV9yZWxl
YXNlLAotfTsKLQogc3RhdGljIGludCBpOTE1X2hwZF9zdG9ybV9jdGxfc2hvdyhzdHJ1Y3Qgc2Vx
X2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gbS0+cHJpdmF0ZTsKQEAgLTQzODUsMTIgKzQwNTEsNiBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IGRybV9pbmZvX2xpc3QgaTkxNV9kZWJ1Z2ZzX2xpc3RbXSA9IHsKIAl7Imk5MTVfZ2VtX2Zl
bmNlX3JlZ3MiLCBpOTE1X2dlbV9mZW5jZV9yZWdzX2luZm8sIDB9LAogCXsiaTkxNV9nZW1faW50
ZXJydXB0IiwgaTkxNV9pbnRlcnJ1cHRfaW5mbywgMH0sCiAJeyJpOTE1X2dlbV9iYXRjaF9wb29s
IiwgaTkxNV9nZW1fYmF0Y2hfcG9vbF9pbmZvLCAwfSwKLQl7Imk5MTVfZ3VjX2luZm8iLCBpOTE1
X2d1Y19pbmZvLCAwfSwKLQl7Imk5MTVfZ3VjX2xvYWRfc3RhdHVzIiwgaTkxNV9ndWNfbG9hZF9z
dGF0dXNfaW5mbywgMH0sCi0JeyJpOTE1X2d1Y19sb2dfZHVtcCIsIGk5MTVfZ3VjX2xvZ19kdW1w
LCAwfSwKLQl7Imk5MTVfZ3VjX2xvYWRfZXJyX2xvZ19kdW1wIiwgaTkxNV9ndWNfbG9nX2R1bXAs
IDAsICh2b2lkICopMX0sCi0JeyJpOTE1X2d1Y19zdGFnZV9wb29sIiwgaTkxNV9ndWNfc3RhZ2Vf
cG9vbCwgMH0sCi0JeyJpOTE1X2h1Y19sb2FkX3N0YXR1cyIsIGk5MTVfaHVjX2xvYWRfc3RhdHVz
X2luZm8sIDB9LAogCXsiaTkxNV9mcmVxdWVuY3lfaW5mbyIsIGk5MTVfZnJlcXVlbmN5X2luZm8s
IDB9LAogCXsiaTkxNV9oYW5nY2hlY2tfaW5mbyIsIGk5MTVfaGFuZ2NoZWNrX2luZm8sIDB9LAog
CXsiaTkxNV9kcnBjX2luZm8iLCBpOTE1X2RycGNfaW5mbywgMH0sCkBAIC00NDQ1LDggKzQxMDUs
NiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGk5MTVfZGVidWdmc19maWxlcyB7CiAJeyJpOTE1X2Rw
X3Rlc3RfZGF0YSIsICZpOTE1X2Rpc3BsYXlwb3J0X3Rlc3RfZGF0YV9mb3BzfSwKIAl7Imk5MTVf
ZHBfdGVzdF90eXBlIiwgJmk5MTVfZGlzcGxheXBvcnRfdGVzdF90eXBlX2ZvcHN9LAogCXsiaTkx
NV9kcF90ZXN0X2FjdGl2ZSIsICZpOTE1X2Rpc3BsYXlwb3J0X3Rlc3RfYWN0aXZlX2ZvcHN9LAot
CXsiaTkxNV9ndWNfbG9nX2xldmVsIiwgJmk5MTVfZ3VjX2xvZ19sZXZlbF9mb3BzfSwKLQl7Imk5
MTVfZ3VjX2xvZ19yZWxheSIsICZpOTE1X2d1Y19sb2dfcmVsYXlfZm9wc30sCiAJeyJpOTE1X2hw
ZF9zdG9ybV9jdGwiLCAmaTkxNV9ocGRfc3Rvcm1fY3RsX2ZvcHN9LAogCXsiaTkxNV9ocGRfc2hv
cnRfc3Rvcm1fY3RsIiwgJmk5MTVfaHBkX3Nob3J0X3N0b3JtX2N0bF9mb3BzfSwKIAl7Imk5MTVf
aXBjX3N0YXR1cyIsICZpOTE1X2lwY19zdGF0dXNfZm9wc30sCkBAIC00NDU5LDkgKzQxMTcsNiBA
QCBpbnQgaTkxNV9kZWJ1Z2ZzX3JlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAlzdHJ1Y3QgZHJtX21pbm9yICptaW5vciA9IGRldl9wcml2LT5kcm0ucHJpbWFyeTsK
IAlpbnQgaTsKIAotCWRlYnVnZnNfY3JlYXRlX2ZpbGUoImk5MTVfZm9yY2V3YWtlX3VzZXIiLCBT
X0lSVVNSLCBtaW5vci0+ZGVidWdmc19yb290LAotCQkJICAgIHRvX2k5MTUobWlub3ItPmRldiks
ICZpOTE1X2ZvcmNld2FrZV9mb3BzKTsKLQogCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGk5
MTVfZGVidWdmc19maWxlcyk7IGkrKykgewogCQlkZWJ1Z2ZzX2NyZWF0ZV9maWxlKGk5MTVfZGVi
dWdmc19maWxlc1tpXS5uYW1lLAogCQkJCSAgICBTX0lSVUdPIHwgU19JV1VTUiwKQEAgLTQ0NzAs
NiArNDEyNSw4IEBAIGludCBpOTE1X2RlYnVnZnNfcmVnaXN0ZXIoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogCQkJCSAgICBpOTE1X2RlYnVnZnNfZmlsZXNbaV0uZm9wcyk7CiAJ
fQogCisJaW50ZWxfZ3RfZGVidWdmc19yZWdpc3RlcigmZGV2X3ByaXYtPmd0LCBtaW5vci0+ZGVi
dWdmc19yb290KTsKKwogCXJldHVybiBkcm1fZGVidWdmc19jcmVhdGVfZmlsZXMoaTkxNV9kZWJ1
Z2ZzX2xpc3QsCiAJCQkJCUk5MTVfREVCVUdGU19FTlRSSUVTLAogCQkJCQltaW5vci0+ZGVidWdm
c19yb290LCBtaW5vcik7Ci0tIAoyLjIyLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeA==

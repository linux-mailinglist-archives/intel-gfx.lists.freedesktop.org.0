Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A200674BAB
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Jul 2019 12:34:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DCF998955D;
	Thu, 25 Jul 2019 10:34:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E4A7189248
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 10:34:23 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 25 Jul 2019 03:34:23 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,306,1559545200"; d="scan'208";a="175171048"
Received: from roszkopf-mobl.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.249.32.173])
 by orsmga006.jf.intel.com with ESMTP; 25 Jul 2019 03:34:19 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 25 Jul 2019 13:33:27 +0300
Message-Id: <20190725103327.27010-10-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190725103327.27010-1-lionel.g.landwerlin@intel.com>
References: <20190725103327.27010-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v10 9/9] drm/i915: add support for perf
 configuration queries
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TGlzdGluZyBjb25maWd1cmF0aW9ucyBhdCB0aGUgbW9tZW50IGlzIHN1cHBvcnRlZCBvbmx5IHRo
cm91Z2ggc3lzZnMuClRoaXMgbWlnaHQgY2F1c2UgaXNzdWVzIGZvciBhcHBsaWNhdGlvbnMgd2Fu
dGluZyB0byBsaXN0CmNvbmZpZ3VyYXRpb25zIGZyb20gYSBjb250YWluZXIgd2hlcmUgc3lzZnMg
aXNuJ3QgYXZhaWxhYmxlLgoKVGhpcyBjaGFuZ2UgYWRkcyBhIHdheSB0byBxdWVyeSB0aGUgbnVt
YmVyIG9mIGNvbmZpZ3VyYXRpb25zIGFuZCB0aGVpcgpjb250ZW50IHRocm91Z2ggdGhlIGk5MTUg
cXVlcnkgdUFQSS4KCnYyOiBGaXggc3BhcnNlIHdhcm5pbmdzIChMaW9uZWwpCiAgICBBZGQgc3Vw
cG9ydCB0byBxdWVyeSBjb25maWd1cmF0aW9uIHVzaW5nIHV1aWQgKExpb25lbCkKCnYzOiBGaXgg
c29tZSBpbmNvbnNpc3RlbmN5IGluIHVhcGkgaGVhZGVyIChMaW9uZWwpCiAgICBGaXggdW5sb2Nr
aW5nIHdoZW4gbm90IGxvY2tlZCBpc3N1ZSAoTGlvbmVsKQogICAgQWRkIGRlYnVnIG1lc3NhZ2Vz
IChMaW9uZWwpCgp2NDogRml4IG1pc3NpbmcgdW5sb2NrIChEYW4pCgp2NTogRHJvcCBsb2NrIHdo
ZW4gY29weWluZyBjb25maWcgY29udGVudCB0byB1c2Vyc3BhY2UgKENocmlzKQoKdjY6IERyb3Ag
bG9jayB3aGVuIGNvcHlpbmcgY29uZmlnIGxpc3QgdG8gdXNlcnNwYWNlIChDaHJpcykKICAgIEZp
eCBkZWFkbG9jayB3aGVuIGNhbGxpbmcgaTkxNV9wZXJmX2dldF9vYV9jb25maWcoKSB1bmRlcgog
ICAgcGVyZi5tZXRyaWNzX2xvY2sgKExpb25lbCkKICAgIEFkZCBpOTE1X29hX2NvbmZpZ19nZXQo
KSAoQ2hyaXMpCgpTaWduZWQtb2ZmLWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFu
ZHdlcmxpbkBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgfCAg
MTIgKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jICB8ICAgMyArCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3F1ZXJ5LmMgfCAyODIgKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrCiBpbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggICAgICAgfCAgNjUgKysrKysrLQog
NCBmaWxlcyBjaGFuZ2VkLCAzNTkgaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9kcnYuaAppbmRleCA1YjBiYTVkZGY2ZGIuLmUyNDE0MjVlMGNkNCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0xNzI1LDYgKzE3MjUsMTIgQEAgc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgewogCQkgKi8KIAkJc3RydWN0IGxpc3RfaGVhZCBtZXRyaWNzX2J1ZmZlcnM7CiAK
KwkJLyoKKwkJICogTnVtYmVyIG9mIGR5bmFtaWMgY29uZmlndXJhdGlvbnMsIHlvdSBuZWVkIHRv
IGhvbGQKKwkJICogZGV2X3ByaXYtPnBlcmYubWV0cmljc19sb2NrIHRvIGFjY2VzcyBpdC4KKwkJ
ICovCisJCXUzMiBuX21ldHJpY3M7CisKIAkJLyoKIAkJICogTG9jayBhc3NvY2lhdGVkIHdpdGgg
YW55dGhpbmcgYmVsb3cgd2l0aGluIHRoaXMgc3RydWN0dXJlCiAJCSAqIGV4Y2VwdCBleGNsdXNp
dmVfc3RyZWFtLgpAQCAtMjU4NSw2ICsyNTkxLDEyIEBAIGludCBpOTE1X3BlcmZfZ2V0X29hX2Nv
bmZpZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkJCSAgICBzdHJ1Y3QgZHJtX2k5
MTVfZ2VtX29iamVjdCAqKm91dF9vYmopOwogdm9pZCBpOTE1X29hX2NvbmZpZ19yZWxlYXNlKHN0
cnVjdCBrcmVmICpyZWYpOwogCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpOTE1X29hX2NvbmZpZyAq
aTkxNV9vYV9jb25maWdfZ2V0KHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnKQorewor
CWtyZWZfZ2V0KCZvYV9jb25maWctPnJlZik7CisJcmV0dXJuIG9hX2NvbmZpZzsKK30KKwogc3Rh
dGljIGlubGluZSB2b2lkIGk5MTVfb2FfY29uZmlnX3B1dChzdHJ1Y3QgaTkxNV9vYV9jb25maWcg
Km9hX2NvbmZpZykKIHsKIAlrcmVmX3B1dCgmb2FfY29uZmlnLT5yZWYsIGk5MTVfb2FfY29uZmln
X3JlbGVhc2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwppbmRleCAxNDdhZTYyZmU5NTcuLmI4
ZWZlZDRmYWFkZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKQEAgLTM4MjQsNiArMzgyNCw4
IEBAIGludCBpOTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB2b2lkICpkYXRhLAogCQlnb3RvIHN5c2ZzX2VycjsKIAl9CiAKKwlkZXZfcHJpdi0+cGVyZi5u
X21ldHJpY3MrKzsKKwogCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBlcmYubWV0cmljc19sb2Nr
KTsKIAogCURSTV9ERUJVRygiQWRkZWQgY29uZmlnICVzIGlkPSVpXG4iLCBvYV9jb25maWctPnV1
aWQsIG9hX2NvbmZpZy0+aWQpOwpAQCAtMzg4NCw2ICszODg2LDcgQEAgaW50IGk5MTVfcGVyZl9y
ZW1vdmVfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJ
CQkgICAmb2FfY29uZmlnLT5zeXNmc19tZXRyaWMpOwogCiAJaWRyX3JlbW92ZSgmZGV2X3ByaXYt
PnBlcmYubWV0cmljc19pZHIsICphcmcpOworCWRldl9wcml2LT5wZXJmLm5fbWV0cmljcy0tOwog
CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2xvY2spOwogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3F1ZXJ5LmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3F1ZXJ5LmMKaW5kZXggN2I3MDE2MTcxMDU3Li40ZGU3OWQ1MzRhNjIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcXVlcnkuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3F1ZXJ5LmMKQEAgLTE0MywxMCArMTQzLDI5MiBAQCBxdWVyeV9lbmdp
bmVfaW5mbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlyZXR1cm4gbGVuOwogfQog
CitzdGF0aWMgaW50IGNhbl9jb3B5X3BlcmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIodTMy
IHVzZXJfbl9yZWdzLAorCQkJCQkJICAgIHU2NCB1c2VyX3JlZ3NfcHRyLAorCQkJCQkJICAgIHUz
MiBrZXJuZWxfbl9yZWdzKQoreworCS8qCisJICogV2UnbGwganVzdCBwdXQgdGhlIG51bWJlciBv
ZiByZWdpc3RlcnMsIGFuZCB3b24ndCBjb3B5IHRoZQorCSAqIHJlZ2lzdGVyLgorCSAqLworCWlm
ICh1c2VyX25fcmVncyA9PSAwKQorCQlyZXR1cm4gMDsKKworCWlmICh1c2VyX25fcmVncyA8IGtl
cm5lbF9uX3JlZ3MpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKCFhY2Nlc3Nfb2sodTY0X3Rv
X3VzZXJfcHRyKHVzZXJfcmVnc19wdHIpLAorCQkgICAgICAgMiAqIHNpemVvZih1MzIpICoga2Vy
bmVsX25fcmVncykpCisJCXJldHVybiAtRUZBVUxUOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRp
YyBpbnQgY29weV9wZXJmX2NvbmZpZ19yZWdpc3RlcnNfb3JfbnVtYmVyKGNvbnN0IHN0cnVjdCBp
OTE1X29hX3JlZyAqa2VybmVsX3JlZ3MsCisJCQkJCQl1MzIga2VybmVsX25fcmVncywKKwkJCQkJ
CXU2NCB1c2VyX3JlZ3NfcHRyLAorCQkJCQkJdTMyICp1c2VyX25fcmVncykKK3sKKwl1MzIgcjsK
KworCWlmICgqdXNlcl9uX3JlZ3MgPT0gMCkgeworCQkqdXNlcl9uX3JlZ3MgPSBrZXJuZWxfbl9y
ZWdzOworCQlyZXR1cm4gMDsKKwl9CisKKwkqdXNlcl9uX3JlZ3MgPSBrZXJuZWxfbl9yZWdzOwor
CisJZm9yIChyID0gMDsgciA8IGtlcm5lbF9uX3JlZ3M7IHIrKykgeworCQl1MzIgX191c2VyICp1
c2VyX3JlZ19wdHIgPQorCQkJdTY0X3RvX3VzZXJfcHRyKHVzZXJfcmVnc19wdHIgKyBzaXplb2Yo
dTMyKSAqIHIgKiAyKTsKKwkJdTMyIF9fdXNlciAqdXNlcl92YWxfcHRyID0KKwkJCXU2NF90b191
c2VyX3B0cih1c2VyX3JlZ3NfcHRyICsgc2l6ZW9mKHUzMikgKiByICogMiArCisJCQkJCXNpemVv
Zih1MzIpKTsKKwkJaW50IHJldDsKKworCQlyZXQgPSBfX3B1dF91c2VyKGk5MTVfbW1pb19yZWdf
b2Zmc2V0KGtlcm5lbF9yZWdzW3JdLmFkZHIpLAorCQkJCSB1c2VyX3JlZ19wdHIpOworCQlpZiAo
cmV0KQorCQkJcmV0dXJuIC1FRkFVTFQ7CisKKwkJcmV0ID0gX19wdXRfdXNlcihrZXJuZWxfcmVn
c1tyXS52YWx1ZSwgdXNlcl92YWxfcHRyKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiAtRUZBVUxU
OworCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IHF1ZXJ5X3BlcmZfY29uZmlnX2Rh
dGEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCisJCQkJICBzdHJ1Y3QgZHJtX2k5MTVf
cXVlcnlfaXRlbSAqcXVlcnlfaXRlbSwKKwkJCQkgIGJvb2wgdXNlX3V1aWQpCit7CisJc3RydWN0
IGRybV9pOTE1X3F1ZXJ5X3BlcmZfY29uZmlnIF9fdXNlciAqdXNlcl9xdWVyeV9jb25maWdfcHRy
ID0KKwkJdTY0X3RvX3VzZXJfcHRyKHF1ZXJ5X2l0ZW0tPmRhdGFfcHRyKTsKKwlzdHJ1Y3QgZHJt
X2k5MTVfcGVyZl9vYV9jb25maWcgX191c2VyICp1c2VyX2NvbmZpZ19wdHIgPQorCQl1NjRfdG9f
dXNlcl9wdHIocXVlcnlfaXRlbS0+ZGF0YV9wdHIgKworCQkJCXNpemVvZihzdHJ1Y3QgZHJtX2k5
MTVfcXVlcnlfcGVyZl9jb25maWcpKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcGVyZl9vYV9jb25maWcg
dXNlcl9jb25maWc7CisJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcgPSBOVUxMOwor
CWNoYXIgdXVpZFtVVUlEX1NUUklOR19MRU4gKyAxXTsKKwl1NjQgY29uZmlnX2lkOworCXUzMiBm
bGFncywgdG90YWxfc2l6ZTsKKwlpbnQgcmV0OworCisJaWYgKCFpOTE1LT5wZXJmLmluaXRpYWxp
emVkKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCXRvdGFsX3NpemUgPSBzaXplb2Yoc3RydWN0IGRy
bV9pOTE1X3F1ZXJ5X3BlcmZfY29uZmlnKSArCisJCXNpemVvZihzdHJ1Y3QgZHJtX2k5MTVfcGVy
Zl9vYV9jb25maWcpOworCisJaWYgKHF1ZXJ5X2l0ZW0tPmxlbmd0aCA9PSAwKQorCQlyZXR1cm4g
dG90YWxfc2l6ZTsKKworCWlmIChxdWVyeV9pdGVtLT5sZW5ndGggPCB0b3RhbF9zaXplKSB7CisJ
CURSTV9ERUJVRygiSW52YWxpZCBxdWVyeSBjb25maWcgZGF0YSBpdGVtIHNpemU9JXUgZXhwZWN0
ZWQ9JXVcbiIsCisJCQkgIHF1ZXJ5X2l0ZW0tPmxlbmd0aCwgdG90YWxfc2l6ZSk7CisJCXJldHVy
biAtRUlOVkFMOworCX0KKworCWlmICghYWNjZXNzX29rKHVzZXJfcXVlcnlfY29uZmlnX3B0ciwg
dG90YWxfc2l6ZSkpCisJCXJldHVybiAtRUZBVUxUOworCisJaWYgKF9fZ2V0X3VzZXIoZmxhZ3Ms
ICZ1c2VyX3F1ZXJ5X2NvbmZpZ19wdHItPmZsYWdzKSkKKwkJcmV0dXJuIC1FRkFVTFQ7CisKKwlp
ZiAoZmxhZ3MgIT0gMCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAodXNlX3V1aWQpIHsKKwkJ
QlVJTERfQlVHX09OKHNpemVvZih1c2VyX3F1ZXJ5X2NvbmZpZ19wdHItPnV1aWQpID49IHNpemVv
Zih1dWlkKSk7CisKKwkJbWVtc2V0KCZ1dWlkLCAwLCBzaXplb2YodXVpZCkpOworCQlpZiAoX19j
b3B5X2Zyb21fdXNlcih1dWlkLCB1c2VyX3F1ZXJ5X2NvbmZpZ19wdHItPnV1aWQsCisJCQkJICAg
ICBzaXplb2YodXNlcl9xdWVyeV9jb25maWdfcHRyLT51dWlkKSkpCisJCQlyZXR1cm4gLUVGQVVM
VDsKKwl9IGVsc2UgeworCQlpZiAoX19nZXRfdXNlcihjb25maWdfaWQsICZ1c2VyX3F1ZXJ5X2Nv
bmZpZ19wdHItPmNvbmZpZykpIHsKKwkJCXJldHVybiAtRUZBVUxUOworCQl9CisJfQorCisJaWYg
KHVzZV91dWlkKSB7CisJCXN0cnVjdCBpOTE1X29hX2NvbmZpZyAqdG1wOworCQlpbnQgaWQ7CisK
KwkJcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZpOTE1LT5wZXJmLm1ldHJpY3NfbG9j
ayk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCisJCWlkcl9mb3JfZWFjaF9lbnRyeSgm
aTkxNS0+cGVyZi5tZXRyaWNzX2lkciwgdG1wLCBpZCkgeworCQkJaWYgKCFzdHJjbXAodG1wLT51
dWlkLCB1dWlkKSkgeworCQkJCW9hX2NvbmZpZyA9IGk5MTVfb2FfY29uZmlnX2dldCh0bXApOwor
CQkJCWJyZWFrOworCQkJfQorCQl9CisKKwkJbXV0ZXhfdW5sb2NrKCZpOTE1LT5wZXJmLm1ldHJp
Y3NfbG9jayk7CisJfSBlbHNlIHsKKwkJcmV0ID0gaTkxNV9wZXJmX2dldF9vYV9jb25maWcoaTkx
NSwgY29uZmlnX2lkLCAmb2FfY29uZmlnLCBOVUxMKTsKKwl9CisKKwlpZiAocmV0IHx8ICFvYV9j
b25maWcpCisJCXJldHVybiAtRU5PRU5UOworCisJaWYgKF9fY29weV9mcm9tX3VzZXIoJnVzZXJf
Y29uZmlnLCB1c2VyX2NvbmZpZ19wdHIsCisJCQkgICAgIHNpemVvZih1c2VyX2NvbmZpZykpKSB7
CisJCXJldCA9IC1FRkFVTFQ7CisJCWdvdG8gb3V0OworCX0KKworCXJldCA9IGNhbl9jb3B5X3Bl
cmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIodXNlcl9jb25maWcubl9ib29sZWFuX3JlZ3Ms
CisJCQkJCQkgICAgICAgdXNlcl9jb25maWcuYm9vbGVhbl9yZWdzX3B0ciwKKwkJCQkJCSAgICAg
ICBvYV9jb25maWctPmJfY291bnRlcl9yZWdzX2xlbik7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7
CisKKwlyZXQgPSBjYW5fY29weV9wZXJmX2NvbmZpZ19yZWdpc3RlcnNfb3JfbnVtYmVyKHVzZXJf
Y29uZmlnLm5fZmxleF9yZWdzLAorCQkJCQkJICAgICAgIHVzZXJfY29uZmlnLmZsZXhfcmVnc19w
dHIsCisJCQkJCQkgICAgICAgb2FfY29uZmlnLT5mbGV4X3JlZ3NfbGVuKTsKKwlpZiAocmV0KQor
CQlnb3RvIG91dDsKKworCXJldCA9IGNhbl9jb3B5X3BlcmZfY29uZmlnX3JlZ2lzdGVyc19vcl9u
dW1iZXIodXNlcl9jb25maWcubl9tdXhfcmVncywKKwkJCQkJCSAgICAgICB1c2VyX2NvbmZpZy5t
dXhfcmVnc19wdHIsCisJCQkJCQkgICAgICAgb2FfY29uZmlnLT5tdXhfcmVnc19sZW4pOworCWlm
IChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0gY29weV9wZXJmX2NvbmZpZ19yZWdpc3RlcnNf
b3JfbnVtYmVyKG9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3MsCisJCQkJCQkgICBvYV9jb25maWct
PmJfY291bnRlcl9yZWdzX2xlbiwKKwkJCQkJCSAgIHVzZXJfY29uZmlnLmJvb2xlYW5fcmVnc19w
dHIsCisJCQkJCQkgICAmdXNlcl9jb25maWcubl9ib29sZWFuX3JlZ3MpOworCWlmIChyZXQpCisJ
CWdvdG8gb3V0OworCisJcmV0ID0gY29weV9wZXJmX2NvbmZpZ19yZWdpc3RlcnNfb3JfbnVtYmVy
KG9hX2NvbmZpZy0+ZmxleF9yZWdzLAorCQkJCQkJICAgb2FfY29uZmlnLT5mbGV4X3JlZ3NfbGVu
LAorCQkJCQkJICAgdXNlcl9jb25maWcuZmxleF9yZWdzX3B0ciwKKwkJCQkJCSAgICZ1c2VyX2Nv
bmZpZy5uX2ZsZXhfcmVncyk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlyZXQgPSBjb3B5
X3BlcmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIob2FfY29uZmlnLT5tdXhfcmVncywKKwkJ
CQkJCSAgIG9hX2NvbmZpZy0+bXV4X3JlZ3NfbGVuLAorCQkJCQkJICAgdXNlcl9jb25maWcubXV4
X3JlZ3NfcHRyLAorCQkJCQkJICAgJnVzZXJfY29uZmlnLm5fbXV4X3JlZ3MpOworCWlmIChyZXQp
CisJCWdvdG8gb3V0OworCisJbWVtY3B5KHVzZXJfY29uZmlnLnV1aWQsIG9hX2NvbmZpZy0+dXVp
ZCwgc2l6ZW9mKHVzZXJfY29uZmlnLnV1aWQpKTsKKworCWlmIChfX2NvcHlfdG9fdXNlcih1c2Vy
X2NvbmZpZ19wdHIsICZ1c2VyX2NvbmZpZywKKwkJCSAgIHNpemVvZih1c2VyX2NvbmZpZykpKSB7
CisJCXJldCA9IC1FRkFVTFQ7CisJCWdvdG8gb3V0OworCX0KKworCXJldCA9IHRvdGFsX3NpemU7
CisKK291dDoKKwlpOTE1X29hX2NvbmZpZ19wdXQob2FfY29uZmlnKTsKKworCXJldHVybiByZXQ7
Cit9CisKK3N0YXRpYyBpbnQgcXVlcnlfcGVyZl9jb25maWdfbGlzdChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKKwkJCQkgIHN0cnVjdCBkcm1faTkxNV9xdWVyeV9pdGVtICpxdWVyeV9p
dGVtKQoreworCXN0cnVjdCBkcm1faTkxNV9xdWVyeV9wZXJmX2NvbmZpZyBfX3VzZXIgKnVzZXJf
cXVlcnlfY29uZmlnX3B0ciA9CisJCXU2NF90b191c2VyX3B0cihxdWVyeV9pdGVtLT5kYXRhX3B0
cik7CisJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWc7CisJdTMyIGZsYWdzLCB0b3Rh
bF9zaXplOworCXU2NCBpLCBuX2NvbmZpZ3MsICpvYV9jb25maWdfaWRzOworCWludCByZXQsIGlk
OworCisJaWYgKCFpOTE1LT5wZXJmLmluaXRpYWxpemVkKQorCQlyZXR1cm4gLUVOT0RFVjsKKwor
CS8qIENvdW50IHRoZSBkZWZhdWx0IHRlc3QgY29uZmlndXJhdGlvbiAqLworCW5fY29uZmlncyA9
IGk5MTUtPnBlcmYubl9tZXRyaWNzICsgMTsKKwl0b3RhbF9zaXplID0gc2l6ZW9mKHN0cnVjdCBk
cm1faTkxNV9xdWVyeV9wZXJmX2NvbmZpZykgKworCQlzaXplb2YodTY0KSAqIG5fY29uZmlnczsK
KworCWlmIChxdWVyeV9pdGVtLT5sZW5ndGggPT0gMCkKKwkJcmV0dXJuIHRvdGFsX3NpemU7CisK
KwlpZiAocXVlcnlfaXRlbS0+bGVuZ3RoIDwgdG90YWxfc2l6ZSkgeworCQlEUk1fREVCVUcoIklu
dmFsaWQgcXVlcnkgY29uZmlnIGxpc3QgaXRlbSBzaXplPSV1IGV4cGVjdGVkPSV1XG4iLAorCQkJ
ICBxdWVyeV9pdGVtLT5sZW5ndGgsIHRvdGFsX3NpemUpOworCQlyZXR1cm4gLUVJTlZBTDsKKwl9
CisKKwlpZiAoIWFjY2Vzc19vayh1c2VyX3F1ZXJ5X2NvbmZpZ19wdHIsIHRvdGFsX3NpemUpKQor
CQlyZXR1cm4gLUVGQVVMVDsKKworCWlmIChfX2dldF91c2VyKGZsYWdzLCAmdXNlcl9xdWVyeV9j
b25maWdfcHRyLT5mbGFncykpCisJCXJldHVybiAtRUZBVUxUOworCisJaWYgKGZsYWdzICE9IDAp
CisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKF9fcHV0X3VzZXIobl9jb25maWdzLCAmdXNlcl9x
dWVyeV9jb25maWdfcHRyLT5jb25maWcpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCXJldCA9IG11
dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmaTkxNS0+cGVyZi5tZXRyaWNzX2xvY2spOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisKKwkvKiBDb3VudCB0aGUgY29uZmlncy4gKi8KKwluX2NvbmZp
Z3MgPSAxOworCWlkcl9mb3JfZWFjaF9lbnRyeSgmaTkxNS0+cGVyZi5tZXRyaWNzX2lkciwgb2Ff
Y29uZmlnLCBpZCkKKwkJbl9jb25maWdzKys7CisKKwlvYV9jb25maWdfaWRzID0KKwkJa21hbGxv
Y19hcnJheShuX2NvbmZpZ3MsIHNpemVvZigqb2FfY29uZmlnX2lkcyksIEdGUF9LRVJORUwpOwor
CWlmICghb2FfY29uZmlnX2lkcykgeworCQltdXRleF91bmxvY2soJmk5MTUtPnBlcmYubWV0cmlj
c19sb2NrKTsKKwkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJaSA9IDA7CisJb2FfY29uZmlnX2lk
c1tpKytdID0gMXVsbDsKKwlpZHJfZm9yX2VhY2hfZW50cnkoJmk5MTUtPnBlcmYubWV0cmljc19p
ZHIsIG9hX2NvbmZpZywgaWQpCisJCW9hX2NvbmZpZ19pZHNbaSsrXSA9IGlkOworCisJbXV0ZXhf
dW5sb2NrKCZpOTE1LT5wZXJmLm1ldHJpY3NfbG9jayk7CisKKwlyZXQgPSBjb3B5X3RvX3VzZXIo
dTY0X3RvX3VzZXJfcHRyKHF1ZXJ5X2l0ZW0tPmRhdGFfcHRyICsKKwkJCQkJICAgc2l6ZW9mKHN0
cnVjdCBkcm1faTkxNV9xdWVyeV9wZXJmX2NvbmZpZykpLAorCQkJICAgb2FfY29uZmlnX2lkcywK
KwkJCSAgIG5fY29uZmlncyAqIHNpemVvZigqb2FfY29uZmlnX2lkcykpOworCWtmcmVlKG9hX2Nv
bmZpZ19pZHMpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXR1cm4gdG90YWxfc2l6
ZTsKK30KKworc3RhdGljIGludCBxdWVyeV9wZXJmX2NvbmZpZyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKKwkJCSAgICAgc3RydWN0IGRybV9pOTE1X3F1ZXJ5X2l0ZW0gKnF1ZXJ5X2l0
ZW0pCit7CisJc3dpdGNoIChxdWVyeV9pdGVtLT5mbGFncykgeworCWNhc2UgRFJNX0k5MTVfUVVF
UllfUEVSRl9DT05GSUdfTElTVDoKKwkJcmV0dXJuIHF1ZXJ5X3BlcmZfY29uZmlnX2xpc3QoaTkx
NSwgcXVlcnlfaXRlbSk7CisJY2FzZSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19EQVRBX0ZP
Ul9VVUlEOgorCQlyZXR1cm4gcXVlcnlfcGVyZl9jb25maWdfZGF0YShpOTE1LCBxdWVyeV9pdGVt
LCB0cnVlKTsKKwljYXNlIERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0RBVEFfRk9SX0lEOgor
CQlyZXR1cm4gcXVlcnlfcGVyZl9jb25maWdfZGF0YShpOTE1LCBxdWVyeV9pdGVtLCBmYWxzZSk7
CisJZGVmYXVsdDoKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorfQorCiBzdGF0aWMgaW50ICgqIGNv
bnN0IGk5MTVfcXVlcnlfZnVuY3NbXSkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LAogCQkJCQlzdHJ1Y3QgZHJtX2k5MTVfcXVlcnlfaXRlbSAqcXVlcnlfaXRlbSkgPSB7CiAJcXVl
cnlfdG9wb2xvZ3lfaW5mbywKIAlxdWVyeV9lbmdpbmVfaW5mbywKKwlxdWVyeV9wZXJmX2NvbmZp
ZywKIH07CiAKIGludCBpOTE1X3F1ZXJ5X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZv
aWQgKmRhdGEsIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFw
aS9kcm0vaTkxNV9kcm0uaCBiL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAppbmRleCA3MzU5
ZjE5MDcyOGMuLjU0NWQ4N2E3MjJiNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2RybS9pOTE1
X2RybS5oCisrKyBiL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaApAQCAtMTAzNyw4ICsxMDM3
LDcgQEAgZW51bSBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9leHQgewogCURSTV9JOTE1X0dFTV9F
WEVDQlVGRkVSX0VYVF9USU1FTElORV9GRU5DRVMgPSAwLAogCiAJLyoqCi0JICogVGhpcyBpZGVu
dGlmaWVyIGlzIGFzc29jaWF0ZWQgd2l0aAotCSAqIGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX3Bl
cmZfZXh0LgorCSAqIFNlZSBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9wZXJmX2V4dC4KIAkgKi8K
IAlEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRiwKIApAQCAtMjExMCw2ICsyMTA5LDcg
QEAgc3RydWN0IGRybV9pOTE1X3F1ZXJ5X2l0ZW0gewogCV9fdTY0IHF1ZXJ5X2lkOwogI2RlZmlu
ZSBEUk1fSTkxNV9RVUVSWV9UT1BPTE9HWV9JTkZPICAgIDEKICNkZWZpbmUgRFJNX0k5MTVfUVVF
UllfRU5HSU5FX0lORk8JMgorI2RlZmluZSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJRyAgICAg
IDMKIC8qIE11c3QgYmUga2VwdCBjb21wYWN0IC0tIG5vIGhvbGVzIGFuZCB3ZWxsIGRvY3VtZW50
ZWQgKi8KIAogCS8qCkBAIC0yMTIxLDkgKzIxMjEsMTggQEAgc3RydWN0IGRybV9pOTE1X3F1ZXJ5
X2l0ZW0gewogCV9fczMyIGxlbmd0aDsKIAogCS8qCi0JICogVW51c2VkIGZvciBub3cuIE11c3Qg
YmUgY2xlYXJlZCB0byB6ZXJvLgorCSAqIFdoZW4gcXVlcnlfaWQgPT0gRFJNX0k5MTVfUVVFUllf
VE9QT0xPR1lfSU5GTywgbXVzdCBiZSAwLgorCSAqCisJICogV2hlbiBxdWVyeV9pZCA9PSBEUk1f
STkxNV9RVUVSWV9QRVJGX0NPTkZJRywgbXVzdCBiZSBvbmUgb2YgdGhlCisJICogZm9sbG93aW5n
IDoKKwkgKiAgICAgICAgIC0gRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUdfTElTVAorCSAqICAg
ICAgICAgLSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19EQVRBX0ZPUl9VVUlECisJICogICAg
ICAgICAtIERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0ZPUl9VVUlECiAJICovCiAJX191MzIg
ZmxhZ3M7CisjZGVmaW5lIERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0xJU1QgICAgICAgICAg
MQorI2RlZmluZSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19EQVRBX0ZPUl9VVUlEIDIKKyNk
ZWZpbmUgRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUdfREFUQV9GT1JfSUQgICAzCiAKIAkvKgog
CSAqIERhdGEgd2lsbCBiZSB3cml0dGVuIGF0IHRoZSBsb2NhdGlvbiBwb2ludGVkIGJ5IGRhdGFf
cHRyIHdoZW4gdGhlCkBAIC0yMjQ5LDYgKzIyNTgsNTYgQEAgc3RydWN0IGRybV9pOTE1X3F1ZXJ5
X2VuZ2luZV9pbmZvIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZW5naW5lX2luZm8gZW5naW5lc1tdOwog
fTsKIAorLyoKKyAqIERhdGEgd3JpdHRlbiBieSB0aGUga2VybmVsIHdpdGggcXVlcnkgRFJNX0k5
MTVfUVVFUllfUEVSRl9DT05GSUcuCisgKi8KK3N0cnVjdCBkcm1faTkxNV9xdWVyeV9wZXJmX2Nv
bmZpZyB7CisJdW5pb24geworCQkvKgorCQkgKiBXaGVuIHF1ZXJ5X2l0ZW0uZmxhZ3MgPT0gRFJN
X0k5MTVfUVVFUllfUEVSRl9DT05GSUdfTElTVCwgaTkxNSBzZXRzCisJCSAqIHRoaXMgZmllbGRz
IHRvIHRoZSBudW1iZXIgb2YgY29uZmlndXJhdGlvbnMgYXZhaWxhYmxlLgorCQkgKi8KKwkJX191
NjQgbl9jb25maWdzOworCisJCS8qCisJCSAqIFdoZW4gcXVlcnlfaWQgPT0gRFJNX0k5MTVfUVVF
UllfUEVSRl9DT05GSUdfREFUQV9GT1JfSUQsCisJCSAqIGk5MTUgd2lsbCB1c2UgdGhlIHZhbHVl
IGluIHRoaXMgZmllbGQgYXMgY29uZmlndXJhdGlvbgorCQkgKiBpZGVudGlmaWVyIHRvIGRlY2lk
ZSB3aGF0IGRhdGEgdG8gd3JpdGUgaW50byBjb25maWdfcHRyLgorCQkgKi8KKwkJX191NjQgY29u
ZmlnOworCisJCS8qCisJCSAqIFdoZW4gcXVlcnlfaWQgPT0gRFJNX0k5MTVfUVVFUllfUEVSRl9D
T05GSUdfREFUQV9GT1JfVVVJRCwKKwkJICogaTkxNSB3aWxsIHVzZSB0aGUgdmFsdWUgaW4gdGhp
cyBmaWVsZCBhcyBjb25maWd1cmF0aW9uCisJCSAqIGlkZW50aWZpZXIgdG8gZGVjaWRlIHdoYXQg
ZGF0YSB0byB3cml0ZSBpbnRvIGNvbmZpZ19wdHIuCisJCSAqCisJCSAqIFN0cmluZyBmb3JtYXR0
ZWQgbGlrZSAiJTA4eC0lMDR4LSUwNHgtJTA0eC0lMDEyeCIKKwkJICovCisJCWNoYXIgdXVpZFsz
Nl07CisJfTsKKworCS8qCisJICogVW51c2VkIGZvciBub3cuIE11c3QgYmUgY2xlYXJlZCB0byB6
ZXJvLgorCSAqLworCV9fdTMyIGZsYWdzOworCisJLyoKKwkgKiBXaGVuIHF1ZXJ5X2l0ZW0uZmxh
Z3MgPT0gRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUdfTElTVCwgaTkxNSB3aWxsCisJICogd3Jp
dGUgYW4gYXJyYXkgb2YgX191NjQgb2YgY29uZmlndXJhdGlvbiBpZGVudGlmaWVycy4KKwkgKgor
CSAqIFdoZW4gcXVlcnlfaXRlbS5mbGFncyA9PSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19E
QVRBLCBpOTE1IHdpbGwKKwkgKiB3cml0ZSBhIHN0cnVjdCBkcm1faTkxNV9wZXJmX29hX2NvbmZp
Zy4gSWYgdGhlIGZvbGxvd2luZyBmaWVsZHMgb2YKKwkgKiBkcm1faTkxNV9wZXJmX29hX2NvbmZp
ZyBhcmUgc2V0IG5vdCBzZXQgdG8gMCwgaTkxNSB3aWxsIHdyaXRlIGludG8KKwkgKiB0aGUgYXNz
b2NpYXRlZCBwb2ludGVycyB0aGUgdmFsdWVzIG9mIHN1Ym1pdHRlZCB3aGVuIHRoZQorCSAqIGNv
bmZpZ3VyYXRpb24gd2FzIGNyZWF0ZWQgOgorCSAqCisJICogICAgICAgICAtIG5fbXV4X3JlZ3MK
KwkgKiAgICAgICAgIC0gbl9ib29sZWFuX3JlZ3MKKwkgKiAgICAgICAgIC0gbl9mbGV4X3JlZ3MK
KwkgKi8KKwlfX3U4IGRhdGFbXTsKK307CisKICNpZiBkZWZpbmVkKF9fY3BsdXNwbHVzKQogfQog
I2VuZGlmCi0tIAoyLjIyLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeA==

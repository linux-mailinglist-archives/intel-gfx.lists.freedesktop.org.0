Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1A8DF1288FF
	for <lists+intel-gfx@lfdr.de>; Sat, 21 Dec 2019 13:06:35 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B56416E45C;
	Sat, 21 Dec 2019 12:06:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 515426E457
 for <intel-gfx@lists.freedesktop.org>; Sat, 21 Dec 2019 12:06:28 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Dec 2019 04:06:27 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,338,1571727600"; d="scan'208";a="219065259"
Received: from ideak-desk.fi.intel.com ([10.237.72.183])
 by orsmga003.jf.intel.com with ESMTP; 21 Dec 2019 04:06:26 -0800
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 21 Dec 2019 14:05:43 +0200
Message-Id: <20191221120543.22816-11-imre.deak@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20191221120543.22816-1-imre.deak@intel.com>
References: <20191221120543.22816-1-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 10/10] drm/i915: Make sure CCS YUV semiplanar
 format checks work
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yIENDUyBmb3JtYXRzLCB0aGUgY3VycmVudCBEUk0gY29yZSBjaGVjayBmb3IgWVVWIHNlbWlw
bGFuYXIgZm9ybWF0cwpkb2Vzbid0IHdvcms7IHVzZSBhbiBpOTE1IHNwZWNpZmljIGZ1bmN0aW9u
IGZvciB0aGF0LgoKdjI6IEZpeCBjaGVja3BhdGNoIHdhcm5pbmdzLgoKQ2M6IERoaW5ha2FyYW4g
UGFuZGl5YW4gPGRoaW5ha2FyYW4ucGFuZGl5YW5AaW50ZWwuY29tPgpDYzogVmlsbGUgU3lyasOk
bMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KQ2M6IE1pa2EgS2Fob2xhIDxtaWth
LmthaG9sYUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEltcmUgRGVhayA8aW1yZS5kZWFrQGlu
dGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1pa2EgS2Fob2xhIDxtaWthLmthaG9sYUBpbnRlbC5jb20+
Ci0tLQogLi4uL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5jIHwgIDIg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8IDI1ICsr
KysrKysrKysrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5oICB8ICA0ICsrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJp
dGUuYyAgIHwgIDkgKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyAgICAg
ICAgICAgICAgIHwgIDcgKysrLS0tCiA1IGZpbGVzIGNoYW5nZWQsIDMzIGluc2VydGlvbnMoKyks
IDE0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfYXRvbWljX3BsYW5lLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2F0b21pY19wbGFuZS5jCmluZGV4IDk0MjliOGUxNzI3MC4uM2U5N2FmNjgyYjFiIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmMK
QEAgLTI1MCw3ICsyNTAsNyBAQCBpbnQgaW50ZWxfcGxhbmVfYXRvbWljX2NoZWNrX3dpdGhfc3Rh
dGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjXwogCQluZXdfY3J0Y19z
dGF0ZS0+YWN0aXZlX3BsYW5lcyB8PSBCSVQocGxhbmUtPmlkKTsKIAogCWlmIChuZXdfcGxhbmVf
c3RhdGUtPnVhcGkudmlzaWJsZSAmJgotCSAgICBkcm1fZm9ybWF0X2luZm9faXNfeXV2X3NlbWlw
bGFuYXIoZmItPmZvcm1hdCkpCisJICAgIGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxh
bmFyKGZiLT5mb3JtYXQsIGZiLT5tb2RpZmllcikpCiAJCW5ld19jcnRjX3N0YXRlLT5udjEyX3Bs
YW5lcyB8PSBCSVQocGxhbmUtPmlkKTsKIAogCWlmIChuZXdfcGxhbmVfc3RhdGUtPnVhcGkudmlz
aWJsZSAmJgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpp
bmRleCA2MmQxMWU1MjMwYjQuLjE4NjBkYTBhNDkzZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE5ODYsNiArMTk4NiwxNCBAQCBpbnRlbF9t
YWluX3RvX2F1eF9wbGFuZShjb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwgaW50IG1h
aW5fcGxhbmUpCiAJcmV0dXJuIDE7CiB9CiAKK2Jvb2wKK2ludGVsX2Zvcm1hdF9pbmZvX2lzX3l1
dl9zZW1pcGxhbmFyKGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmluZm8sCisJCQkJICAg
IHVpbnQ2NF90IG1vZGlmaWVyKQoreworCXJldHVybiBpbmZvLT5pc195dXYgJiYKKwkgICAgICAg
aW5mby0+bnVtX3BsYW5lcyA9PSAoaXNfY2NzX21vZGlmaWVyKG1vZGlmaWVyKSA/IDQgOiAyKTsK
K30KKwogc3RhdGljIHVuc2lnbmVkIGludAogaW50ZWxfdGlsZV93aWR0aF9ieXRlcyhjb25zdCBz
dHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwgaW50IGNvbG9yX3BsYW5lKQogewpAQCAtMzg2Miw3
ICszODcwLDggQEAgaW50IHNrbF9jaGVja19wbGFuZV9zdXJmYWNlKHN0cnVjdCBpbnRlbF9wbGFu
ZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCiAJICogSGFuZGxlIHRoZSBBVVggc3VyZmFjZSBmaXJzdCBz
aW5jZQogCSAqIHRoZSBtYWluIHN1cmZhY2Ugc2V0dXAgZGVwZW5kcyBvbiBpdC4KIAkgKi8KLQlp
ZiAoZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQpKSB7CisJaWYg
KGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQsCisJCQkJCQlm
Yi0+bW9kaWZpZXIpKSB7CiAJCXJldCA9IHNrbF9jaGVja19udjEyX2F1eF9zdXJmYWNlKHBsYW5l
X3N0YXRlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CkBAIC01NzkxLDcgKzU4MDAsOCBA
QCBzdGF0aWMgaW50CiBza2xfdXBkYXRlX3NjYWxlcihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSwgYm9vbCBmb3JjZV9kZXRhY2gsCiAJCSAgdW5zaWduZWQgaW50IHNjYWxlcl91
c2VyLCBpbnQgKnNjYWxlcl9pZCwKIAkJICBpbnQgc3JjX3csIGludCBzcmNfaCwgaW50IGRzdF93
LCBpbnQgZHN0X2gsCi0JCSAgY29uc3Qgc3RydWN0IGRybV9mb3JtYXRfaW5mbyAqZm9ybWF0LCBi
b29sIG5lZWRfc2NhbGVyKQorCQkgIGNvbnN0IHN0cnVjdCBkcm1fZm9ybWF0X2luZm8gKmZvcm1h
dCwKKwkJICB1NjQgbW9kaWZpZXIsIGJvb2wgbmVlZF9zY2FsZXIpCiB7CiAJc3RydWN0IGludGVs
X2NydGNfc2NhbGVyX3N0YXRlICpzY2FsZXJfc3RhdGUgPQogCQkmY3J0Y19zdGF0ZS0+c2NhbGVy
X3N0YXRlOwpAQCAtNTg0NSw3ICs1ODU1LDcgQEAgc2tsX3VwZGF0ZV9zY2FsZXIoc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsIGJvb2wgZm9yY2VfZGV0YWNoLAogCQlyZXR1cm4g
MDsKIAl9CiAKLQlpZiAoZm9ybWF0ICYmIGRybV9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBsYW5h
cihmb3JtYXQpICYmCisJaWYgKGZvcm1hdCAmJiBpbnRlbF9mb3JtYXRfaW5mb19pc195dXZfc2Vt
aXBsYW5hcihmb3JtYXQsIG1vZGlmaWVyKSAmJgogCSAgICAoc3JjX2ggPCBTS0xfTUlOX1lVVl80
MjBfU1JDX0ggfHwgc3JjX3cgPCBTS0xfTUlOX1lVVl80MjBfU1JDX1cpKSB7CiAJCURSTV9ERUJV
R19LTVMoIlBsYW5hciBZVVY6IHNyYyBkaW1lbnNpb25zIG5vdCBtZXRcbiIpOwogCQlyZXR1cm4g
LUVJTlZBTDsKQEAgLTU4OTcsNyArNTkwNyw4IEBAIGludCBza2xfdXBkYXRlX3NjYWxlcl9jcnRj
KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpzdGF0ZSkKIAkJCQkgJnN0YXRlLT5zY2FsZXJfc3Rh
dGUuc2NhbGVyX2lkLAogCQkJCSBzdGF0ZS0+cGlwZV9zcmNfdywgc3RhdGUtPnBpcGVfc3JjX2gs
CiAJCQkJIGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXksCi0JCQkJIGFkanVzdGVkX21vZGUt
PmNydGNfdmRpc3BsYXksIE5VTEwsIG5lZWRfc2NhbGVyKTsKKwkJCQkgYWRqdXN0ZWRfbW9kZS0+
Y3J0Y192ZGlzcGxheSwgTlVMTCwgMCwKKwkJCQkgbmVlZF9zY2FsZXIpOwogfQogCiAvKioKQEAg
LTU5MjIsNyArNTkzMyw3IEBAIHN0YXRpYyBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfcGxhbmUoc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAKIAkvKiBQcmUtZ2VuMTEgYW5kIFNE
UiBwbGFuZXMgYWx3YXlzIG5lZWQgYSBzY2FsZXIgZm9yIHBsYW5hciBmb3JtYXRzLiAqLwogCWlm
ICghaWNsX2lzX2hkcl9wbGFuZShkZXZfcHJpdiwgaW50ZWxfcGxhbmUtPmlkKSAmJgotCSAgICBm
YiAmJiBkcm1fZm9ybWF0X2luZm9faXNfeXV2X3NlbWlwbGFuYXIoZmItPmZvcm1hdCkpCisJICAg
IGZiICYmIGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQsIGZi
LT5tb2RpZmllcikpCiAJCW5lZWRfc2NhbGVyID0gdHJ1ZTsKIAogCXJldCA9IHNrbF91cGRhdGVf
c2NhbGVyKGNydGNfc3RhdGUsIGZvcmNlX2RldGFjaCwKQEAgLTU5MzIsNyArNTk0Myw5IEBAIHN0
YXRpYyBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfcGxhbmUoc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCiAJCQkJZHJtX3JlY3RfaGVpZ2h0KCZwbGFuZV9zdGF0ZS0+dWFwaS5zcmMp
ID4+IDE2LAogCQkJCWRybV9yZWN0X3dpZHRoKCZwbGFuZV9zdGF0ZS0+dWFwaS5kc3QpLAogCQkJ
CWRybV9yZWN0X2hlaWdodCgmcGxhbmVfc3RhdGUtPnVhcGkuZHN0KSwKLQkJCQlmYiA/IGZiLT5m
b3JtYXQgOiBOVUxMLCBuZWVkX3NjYWxlcik7CisJCQkJZmIgPyBmYi0+Zm9ybWF0IDogTlVMTCwK
KwkJCQlmYiA/IGZiLT5tb2RpZmllciA6IDAsCisJCQkJbmVlZF9zY2FsZXIpOwogCiAJaWYgKHJl
dCB8fCBwbGFuZV9zdGF0ZS0+c2NhbGVyX2lkIDwgMCkKIAkJcmV0dXJuIHJldDsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmgKaW5kZXggZmY0OTZjZmJkNGFi
Li4wZmVmOTI2M2NkZGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGlzcGxheS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheS5oCkBAIC02MDEsNiArNjAxLDEwIEBAIGludGVsX2Rpc3BsYXlfY2FwdHVyZV9lcnJv
cl9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRlbF9k
aXNwbGF5X3ByaW50X2Vycm9yX3N0YXRlKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9idWYg
KmUsCiAJCQkJICAgICBzdHJ1Y3QgaW50ZWxfZGlzcGxheV9lcnJvcl9zdGF0ZSAqZXJyb3IpOwog
Citib29sCitpbnRlbF9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBsYW5hcihjb25zdCBzdHJ1Y3Qg
ZHJtX2Zvcm1hdF9pbmZvICppbmZvLAorCQkJCSAgICB1aW50NjRfdCBtb2RpZmllcik7CisKIC8q
IG1vZGVzZXR0aW5nICovCiB2b2lkIGludGVsX21vZGVzZXRfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSk7CiBpbnQgaW50ZWxfbW9kZXNldF9pbml0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfc3ByaXRlLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nw
cml0ZS5jCmluZGV4IDBhMjk4NjY3YjdjNi4uM2Y3YjhmMmZmNjcxIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nwcml0ZS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKQEAgLTQxNyw3ICs0MTcsNyBAQCBza2xf
cHJvZ3JhbV9zY2FsZXIoc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAkJCQkgICAgICAwLCBJ
TlRfTUFYKTsKIAogCS8qIFRPRE86IGhhbmRsZSBzdWItcGl4ZWwgY29vcmRpbmF0ZXMgKi8KLQlp
ZiAoZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQpICYmCisJaWYg
KGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQsIGZiLT5tb2Rp
ZmllcikgJiYKIAkgICAgIWljbF9pc19oZHJfcGxhbmUoZGV2X3ByaXYsIHBsYW5lLT5pZCkpIHsK
IAkJeV9ocGhhc2UgPSBza2xfc2NhbGVyX2NhbGNfcGhhc2UoMSwgaHNjYWxlLCBmYWxzZSk7CiAJ
CXlfdnBoYXNlID0gc2tsX3NjYWxlcl9jYWxjX3BoYXNlKDEsIHZzY2FsZSwgZmFsc2UpOwpAQCAt
MjE1MSw3ICsyMTUxLDggQEAgc3RhdGljIGludCBza2xfcGxhbmVfY2hlY2tfbnYxMl9yb3RhdGlv
bihjb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3MKIAlpbnQgc3JjX3cgPSBk
cm1fcmVjdF93aWR0aCgmcGxhbmVfc3RhdGUtPnVhcGkuc3JjKSA+PiAxNjsKIAogCS8qIERpc3Bs
YXkgV0EgIzExMDYgKi8KLQlpZiAoZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZi
LT5mb3JtYXQpICYmIHNyY193ICYgMyAmJgorCWlmIChpbnRlbF9mb3JtYXRfaW5mb19pc195dXZf
c2VtaXBsYW5hcihmYi0+Zm9ybWF0LCBmYi0+bW9kaWZpZXIpICYmCisJICAgIHNyY193ICYgMyAm
JgogCSAgICAocm90YXRpb24gPT0gRFJNX01PREVfUk9UQVRFXzI3MCB8fAogCSAgICAgcm90YXRp
b24gPT0gKERSTV9NT0RFX1JFRkxFQ1RfWCB8IERSTV9NT0RFX1JPVEFURV85MCkpKSB7CiAJCURS
TV9ERUJVR19LTVMoInNyYyB3aWR0aCBtdXN0IGJlIG11bHRpcGxlIG9mIDQgZm9yIHJvdGF0ZWQg
cGxhbmFyIFlVVlxuIik7CkBAIC0yMTcxLDcgKzIxNzIsNyBAQCBzdGF0aWMgaW50IHNrbF9wbGFu
ZV9tYXhfc2NhbGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCSAqIEZJWE1F
IG5lZWQgdG8gcHJvcGVybHkgY2hlY2sgdGhpcyBsYXRlci4KIAkgKi8KIAlpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMCB8fCBJU19HRU1JTklMQUtFKGRldl9wcml2KSB8fAotCSAgICAhZHJt
X2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQpKQorCSAgICAhaW50ZWxf
Zm9ybWF0X2luZm9faXNfeXV2X3NlbWlwbGFuYXIoZmItPmZvcm1hdCwgZmItPm1vZGlmaWVyKSkK
IAkJcmV0dXJuIDB4MzAwMDAgLSAxOwogCWVsc2UKIAkJcmV0dXJuIDB4MjAwMDAgLSAxOwpAQCAt
MjIzMyw3ICsyMjM0LDcgQEAgc3RhdGljIGludCBza2xfcGxhbmVfY2hlY2soc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCXBsYW5lX3N0YXRlLT5jb2xvcl9jdGwgPSBnbGtf
cGxhbmVfY29sb3JfY3RsKGNydGNfc3RhdGUsCiAJCQkJCQkJICAgICBwbGFuZV9zdGF0ZSk7CiAK
LQlpZiAoZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQpICYmCisJ
aWYgKGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZiLT5mb3JtYXQsIGZiLT5t
b2RpZmllcikgJiYKIAkgICAgaWNsX2lzX2hkcl9wbGFuZShkZXZfcHJpdiwgcGxhbmUtPmlkKSkK
IAkJLyogRW5hYmxlIGFuZCB1c2UgTVBFRy0yIGNocm9tYSBzaXRpbmcgKi8KIAkJcGxhbmVfc3Rh
dGUtPmN1c19jdGwgPSBQTEFORV9DVVNfRU5BQkxFIHwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmlu
ZGV4IDdjZGNhMDZiZTNiZC4uMzFlYzgyMzM3ZTRmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMK
QEAgLTQxMzUsNyArNDEzNSw3IEBAIHNrbF9wbGFuZV9yZWxhdGl2ZV9kYXRhX3JhdGUoY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCXJldHVybiAwOwogCiAJaWYg
KGNvbG9yX3BsYW5lID09IDEgJiYKLQkgICAgIWRybV9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBs
YW5hcihmYi0+Zm9ybWF0KSkKKwkgICAgIWludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxh
bmFyKGZiLT5mb3JtYXQsIGZiLT5tb2RpZmllcikpCiAJCXJldHVybiAwOwogCiAJLyoKQEAgLTQ1
NTksNyArNDU1OSw4IEBAIHNrbF9jb21wdXRlX3dtX3BhcmFtcyhjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAl1MzIgaW50ZXJtX3BicGw7CiAKIAkvKiBvbmx5IHBs
YW5hciBmb3JtYXQgaGFzIHR3byBwbGFuZXMgKi8KLQlpZiAoY29sb3JfcGxhbmUgPT0gMSAmJiAh
ZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZvcm1hdCkpIHsKKwlpZiAoY29sb3Jf
cGxhbmUgPT0gMSAmJgorCSAgICAhaW50ZWxfZm9ybWF0X2luZm9faXNfeXV2X3NlbWlwbGFuYXIo
Zm9ybWF0LCBtb2RpZmllcikpIHsKIAkJRFJNX0RFQlVHX0tNUygiTm9uIHBsYW5hciBmb3JtYXQg
aGF2ZSBzaW5nbGUgcGxhbmVcbiIpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CkBAIC00NTcxLDcg
KzQ1NzIsNyBAQCBza2xfY29tcHV0ZV93bV9wYXJhbXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJd3AtPnhfdGlsZWQgPSBtb2RpZmllciA9PSBJOTE1X0ZPUk1B
VF9NT0RfWF9USUxFRDsKIAl3cC0+cmNfc3VyZmFjZSA9IG1vZGlmaWVyID09IEk5MTVfRk9STUFU
X01PRF9ZX1RJTEVEX0NDUyB8fAogCQkJIG1vZGlmaWVyID09IEk5MTVfRk9STUFUX01PRF9ZZl9U
SUxFRF9DQ1M7Ci0Jd3AtPmlzX3BsYW5hciA9IGRybV9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBs
YW5hcihmb3JtYXQpOworCXdwLT5pc19wbGFuYXIgPSBpbnRlbF9mb3JtYXRfaW5mb19pc195dXZf
c2VtaXBsYW5hcihmb3JtYXQsIG1vZGlmaWVyKTsKIAogCXdwLT53aWR0aCA9IHdpZHRoOwogCWlm
IChjb2xvcl9wbGFuZSA9PSAxICYmIHdwLT5pc19wbGFuYXIpCi0tIAoyLjIyLjAKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5n
IGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

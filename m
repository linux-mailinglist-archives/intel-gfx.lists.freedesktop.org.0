Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CCFC6104110
	for <lists+intel-gfx@lfdr.de>; Wed, 20 Nov 2019 17:43:11 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1D9946E8EF;
	Wed, 20 Nov 2019 16:43:10 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 449F36E8EF
 for <intel-gfx@lists.freedesktop.org>; Wed, 20 Nov 2019 16:43:09 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19274530-1500050 
 for multiple; Wed, 20 Nov 2019 16:42:49 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 20 Nov 2019 16:42:46 +0000
Message-Id: <20191120164246.3943402-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191120134113.3777499-1-chris@chris-wilson.co.uk>
References: <20191120134113.3777499-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/gem: Reduce ggtt_flush() from a
 wait-for-idle to a mere barrier flush
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2luY2Ugd2UgdXNlIGJhcnJpZXJzLCB3ZSBuZWVkIG9ubHkgZXhwbGljaXRseSBmbHVzaCB0aG9z
ZSBiYXJyaWVycyB0bwplbnN1cmUgdGhhIHdlIGNhbiByZWNsYWltIHRoZSBhdmFpbGFibGUgZ2d0
dCBmb3Igb3Vyc2VsdmVzLiBUaGUgYmFycmllcgpmbHVzaCB3YXMgaW1wbGljaXQgaW5zaWRlIHRo
ZSBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKCkgLS0gZXhjZXB0IGJlY2F1c2UKd2UgdXNlIGk5MTVf
Z2VtX2V2aWN0IGZyb20gaW5zaWRlIGFuIGFjdGl2ZSB0aW1lbGluZSBkdXJpbmcgZXhlY2J1Ziwg
d2UKY291bGQgZWFzaWx5IGVuZCB1cCB3YWl0aW5nIHVwb24gb3Vyc2VsdmVzLgoKdjI6IFdhaXQg
b24gdGhlIGJhcnJpZXJzIHRvIGVuc3VyZSB0aGF0IGFueSBjb250ZXh0IHVucGlubmluZyB0aGF0
IGNhbgpiZSBkb25lLCB3aWxsIGJlIGRvbmUuCgpGaXhlczogNzkzNmEyMmRkNDY2ICgiZHJtL2k5
MTUvZ3Q6IFdhaXQgZm9yIG5ldyByZXF1ZXN0cyBpbiBpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHMo
KSIpCkZpeGVzOiBhNDZiZmRjODNmZWUgKCJkcm0vaTkxNS9ndDogV2FpdCBmb3IgbmV3IHJlcXVl
c3RzIGluIGludGVsX2d0X3JldGlyZV9yZXF1ZXN0cygpIikKVGVzdGNhc2U6IGlndC9nZW1fZXhl
Y19yZWxvYy9iYXNpYy1yYW5nZQpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNo
cmlzLXdpbHNvbi5jby51az4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRl
bC5jb20+Ci0tLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmMg
IHwgIDggKysrLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0Lmgg
IHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyAgICB8
IDM4ICsrKystLS0tLS0tLS0tLS0tLS0KIC4uLi9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVf
aGVhcnRiZWF0LmMgICB8ICA3ICsrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2
aWN0LmMgICAgICAgICB8IDI2ICsrKysrKysrKysrKy0KIDUgZmlsZXMgY2hhbmdlZCwgNDggaW5z
ZXJ0aW9ucygrKSwgMzUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5jCmluZGV4IGM5MWZkNGU0YWYyOS4uMDE3MzcyMGFm
MDVhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVh
cnRiZWF0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0
YmVhdC5jCkBAIC0yMTIsMTAgKzIxMiwxNCBAQCBpbnQgaW50ZWxfZW5naW5lX3B1bHNlKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gZXJyOwogfQogCi1pbnQgaW50ZWxf
ZW5naW5lX2ZsdXNoX2JhcnJpZXJzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK2lu
dCBpbnRlbF9lbmdpbmVfZmx1c2hfYmFycmllcnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lLAorCQkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKipvdXQpCiB7CiAJc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnE7CiAKKwlpZiAob3V0KQorCQkqb3V0ID0gTlVMTDsKKwogCWlmIChsbGlzdF9lbXB0
eSgmZW5naW5lLT5iYXJyaWVyX3Rhc2tzKSkKIAkJcmV0dXJuIDA7CiAKQEAgLTIyNCw2ICsyMjgs
OCBAQCBpbnQgaW50ZWxfZW5naW5lX2ZsdXNoX2JhcnJpZXJzKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKIAkJcmV0dXJuIFBUUl9FUlIocnEpOwogCiAJaWRsZV9wdWxzZShlbmdpbmUs
IHJxKTsKKwlpZiAob3V0KQorCQkqb3V0ID0gaTkxNV9yZXF1ZXN0X2dldChycSk7CiAJaTkxNV9y
ZXF1ZXN0X2FkZChycSk7CiAKIAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuaAppbmRleCBhN2I4YzBmOWUwMDUuLjE3ZTk3M2Q4
NmY1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hl
YXJ0YmVhdC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFy
dGJlYXQuaApAQCAtNyw2ICs3LDcgQEAKICNpZm5kZWYgSU5URUxfRU5HSU5FX0hFQVJUQkVBVF9I
CiAjZGVmaW5lIElOVEVMX0VOR0lORV9IRUFSVEJFQVRfSAogCitzdHJ1Y3QgaTkxNV9yZXF1ZXN0
Owogc3RydWN0IGludGVsX2VuZ2luZV9jczsKIAogdm9pZCBpbnRlbF9lbmdpbmVfaW5pdF9oZWFy
dGJlYXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKQEAgLTE4LDYgKzE5LDcgQEAg
dm9pZCBpbnRlbF9lbmdpbmVfcGFya19oZWFydGJlYXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKTsKIHZvaWQgaW50ZWxfZW5naW5lX3VucGFya19oZWFydGJlYXQoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKTsKIAogaW50IGludGVsX2VuZ2luZV9wdWxzZShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpOwotaW50IGludGVsX2VuZ2luZV9mbHVzaF9iYXJyaWVycyhz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOworaW50IGludGVsX2VuZ2luZV9mbHVzaF9i
YXJyaWVycyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJc3RydWN0IGk5MTVf
cmVxdWVzdCAqKmJhcnJpZXIpOwogCiAjZW5kaWYgLyogSU5URUxfRU5HSU5FX0hFQVJUQkVBVF9I
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKaW5kZXggMzU4
NmFmNjM2MzA0Li4wYzBmMTMwODAyZmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxm
dGVzdF9jb250ZXh0LmMKQEAgLTQxLDMzICs0MSw2IEBAIHN0YXRpYyBpbnQgcmVxdWVzdF9zeW5j
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCXJldHVybiBlcnI7CiB9CiAKLXN0YXRpYyBpbnQg
Y29udGV4dF9zeW5jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKLXsKLQlzdHJ1Y3QgaW50ZWxf
dGltZWxpbmUgKnRsID0gY2UtPnRpbWVsaW5lOwotCWludCBlcnIgPSAwOwotCi0JbXV0ZXhfbG9j
aygmdGwtPm11dGV4KTsKLQlkbyB7Ci0JCXN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlOwotCQlsb25n
IHRpbWVvdXQ7Ci0KLQkJZmVuY2UgPSBpOTE1X2FjdGl2ZV9mZW5jZV9nZXQoJnRsLT5sYXN0X3Jl
cXVlc3QpOwotCQlpZiAoIWZlbmNlKQotCQkJYnJlYWs7Ci0KLQkJdGltZW91dCA9IGRtYV9mZW5j
ZV93YWl0X3RpbWVvdXQoZmVuY2UsIGZhbHNlLCBIWiAvIDEwKTsKLQkJaWYgKHRpbWVvdXQgPCAw
KQotCQkJZXJyID0gdGltZW91dDsKLQkJZWxzZQotCQkJaTkxNV9yZXF1ZXN0X3JldGlyZV91cHRv
KHRvX3JlcXVlc3QoZmVuY2UpKTsKLQotCQlkbWFfZmVuY2VfcHV0KGZlbmNlKTsKLQl9IHdoaWxl
ICghZXJyKTsKLQltdXRleF91bmxvY2soJnRsLT5tdXRleCk7Ci0KLQlyZXR1cm4gZXJyOwotfQot
CiBzdGF0aWMgaW50IF9fbGl2ZV9jb250ZXh0X3NpemUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLAogCQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpmaXhtZSkKIHsKQEAg
LTIwMiw2ICsxNzUsNyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9hY3RpdmVfY29udGV4dChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpm
aXhtZSkKIHsKIAl1bnNpZ25lZCBsb25nIHNhdmVkX2hlYXJ0YmVhdDsKKwlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpiYXJyaWVyOwogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAlpbnQgcGFzczsK
IAlpbnQgZXJyOwpAQCAtMjY5LDE3ICsyNDMsMjEgQEAgc3RhdGljIGludCBfX2xpdmVfYWN0aXZl
X2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCX0KIAogCS8qIE5vdyBt
YWtlIHN1cmUgb3VyIGlkbGUtYmFycmllcnMgYXJlIGZsdXNoZWQgKi8KLQllcnIgPSBpbnRlbF9l
bmdpbmVfZmx1c2hfYmFycmllcnMoZW5naW5lKTsKKwllcnIgPSBpbnRlbF9lbmdpbmVfZmx1c2hf
YmFycmllcnMoZW5naW5lLCAmYmFycmllcik7CiAJaWYgKGVycikKIAkJZ290byBlcnI7CiAKLQll
cnIgPSBjb250ZXh0X3N5bmMoZW5naW5lLT5rZXJuZWxfY29udGV4dCk7Ci0JaWYgKGVycikKKwlp
ZiAoaTkxNV9yZXF1ZXN0X3dhaXQoYmFycmllciwgMCwgSFogLyA1KSA8IDApIHsKKwkJaTkxNV9y
ZXF1ZXN0X3B1dChiYXJyaWVyKTsKKwkJZXJyID0gLUVUSU1FOwogCQlnb3RvIGVycjsKKwl9CisJ
aTkxNV9yZXF1ZXN0X3B1dChiYXJyaWVyKTsKIAogCWlmICghaTkxNV9hY3RpdmVfaXNfaWRsZSgm
Y2UtPmFjdGl2ZSkpIHsKIAkJcHJfZXJyKCJjb250ZXh0IGlzIHN0aWxsIGFjdGl2ZSEiKTsKIAkJ
ZXJyID0gLUVJTlZBTDsKKwkJZ290byBlcnI7CiAJfQogCiAJaWYgKGludGVsX2VuZ2luZV9wbV9p
c19hd2FrZShlbmdpbmUpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9z
ZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxm
dGVzdF9lbmdpbmVfaGVhcnRiZWF0LmMKaW5kZXggZjY2NWEwZTIzYzYxLi4wYmQ5YWZjMjBlZjMg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9oZWFy
dGJlYXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVh
cnRiZWF0LmMKQEAgLTExNSw2ICsxMTUsMTEgQEAgc3RhdGljIGludCBfX2xpdmVfaWRsZV9wdWxz
ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJcmV0dXJuIGVycjsKIH0KIAorc3Rh
dGljIGludCB3cmFwX2VuZ2luZV9mbHVzaF9iYXJyaWVycyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCit7CisJcmV0dXJuIGludGVsX2VuZ2luZV9mbHVzaF9iYXJyaWVycyhlbmdpbmUs
IE5VTEwpOworfQorCiBzdGF0aWMgaW50IGxpdmVfaWRsZV9mbHVzaCh2b2lkICphcmcpCiB7CiAJ
c3RydWN0IGludGVsX2d0ICpndCA9IGFyZzsKQEAgLTEyNiw3ICsxMzEsNyBAQCBzdGF0aWMgaW50
IGxpdmVfaWRsZV9mbHVzaCh2b2lkICphcmcpCiAKIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBn
dCwgaWQpIHsKIAkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOwotCQllcnIgPSBfX2xpdmVf
aWRsZV9wdWxzZShlbmdpbmUsIGludGVsX2VuZ2luZV9mbHVzaF9iYXJyaWVycyk7CisJCWVyciA9
IF9fbGl2ZV9pZGxlX3B1bHNlKGVuZ2luZSwgd3JhcF9lbmdpbmVfZmx1c2hfYmFycmllcnMpOwog
CQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CiAJCWlmIChlcnIpCiAJCQlicmVhazsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2aWN0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmljdC5jCmluZGV4IDdlNjJjMzEwMjkwZi4uOTFkYWY4
N2Y0OTFlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmljdC5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2aWN0LmMKQEAgLTI4LDcgKzI4
LDcgQEAKIAogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCi0jaW5jbHVkZSAiZ2VtL2k5MTVf
Z2VtX2NvbnRleHQuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmgiCiAj
aW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuaCIKIAogI2luY2x1ZGUgImk5MTVfZHJ2Lmgi
CkBAIC00MCw2ICs0MCw5IEBAIEk5MTVfU0VMRlRFU1RfREVDTEFSRShzdGF0aWMgc3RydWN0IGln
dF9ldmljdF9jdGwgewogCiBzdGF0aWMgaW50IGdndHRfZmx1c2goc3RydWN0IGludGVsX2d0ICpn
dCkKIHsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdp
bmVfaWQgaWQ7CisKIAkvKgogCSAqIE5vdCBldmVyeXRoaW5nIGluIHRoZSBHR1RUIGlzIHRyYWNr
ZWQgdmlhIHZtYSAob3RoZXJ3aXNlIHdlCiAJICogY291bGQgZXZpY3QgYXMgcmVxdWlyZWQgd2l0
aCBtaW5pbWFsIHN0YWxsaW5nKSBzbyB3ZSBhcmUgZm9yY2VkCkBAIC00Nyw3ICs1MCwyNiBAQCBz
dGF0aWMgaW50IGdndHRfZmx1c2goc3RydWN0IGludGVsX2d0ICpndCkKIAkgKiB0aGUgaG9wZXMg
dGhhdCB3ZSBjYW4gdGhlbiByZW1vdmUgY29udGV4dHMgYW5kIHRoZSBsaWtlIG9ubHkKIAkgKiBi
b3VuZCBieSB0aGVpciBhY3RpdmUgcmVmZXJlbmNlLgogCSAqLwotCXJldHVybiBpbnRlbF9ndF93
YWl0X2Zvcl9pZGxlKGd0LCBNQVhfU0NIRURVTEVfVElNRU9VVCk7CisJaW50ZWxfZ3RfcmV0aXJl
X3JlcXVlc3RzKGd0KTsKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndCwgaWQpIHsKKwkJc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqYmFycmllcjsKKwkJbG9uZyBlcnI7CisKKwkJLyogQSBiYXJyaWVy
IHdpbGwgdW5waW4gYW55dGhpbmcgdGhhdCBpcyByZWFkeSB0byBiZSB1bnBpbm5lZCAqLworCQll
cnIgPSBpbnRlbF9lbmdpbmVfZmx1c2hfYmFycmllcnMoZW5naW5lLCAmYmFycmllcik7CisJCWlm
IChlcnIpCisJCQlyZXR1cm4gZXJyOworCisJCWVyciA9IGk5MTVfcmVxdWVzdF93YWl0KGJhcnJp
ZXIsCisJCQkJCUk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFLAorCQkJCQlNQVhfU0NIRURVTEVfVElN
RU9VVCk7CisJCWk5MTVfcmVxdWVzdF9wdXQoYmFycmllcik7CisJCWlmIChlcnIpCisJCQlyZXR1
cm4gZXJyOworCX0KKwlpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHMoZ3QpOworCisJcmV0dXJuIDA7
CiB9CiAKIHN0YXRpYyBib29sCi0tIAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFu
L2xpc3RpbmZvL2ludGVsLWdmeA==

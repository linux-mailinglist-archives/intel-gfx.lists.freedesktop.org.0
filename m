Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 12C54A8696
	for <lists+intel-gfx@lfdr.de>; Wed,  4 Sep 2019 18:27:01 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 58B1689C1C;
	Wed,  4 Sep 2019 16:26:59 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8A79589C0A
 for <intel-gfx@lists.freedesktop.org>; Wed,  4 Sep 2019 16:26:57 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Sep 2019 09:26:57 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,467,1559545200"; d="scan'208";a="199066159"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga001.fm.intel.com with SMTP; 04 Sep 2019 09:26:55 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 04 Sep 2019 19:26:54 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  4 Sep 2019 19:26:20 +0300
Message-Id: <20190904162625.15048-11-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190904162625.15048-1-ville.syrjala@linux.intel.com>
References: <20190904162625.15048-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 10/15] drm/i915: s/pipe_config/crtc_state/ in
 pfit functions
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkZv
bGxvdyB0aGUgbmV3IG5hbWluZyBjb252ZW50aW9uIGFuZCBjYWxsIHRoZSBjcnRjIHN0YXRlCiJj
cnRjX3N0YXRlIiwgYW5kIHdoaWxlIGF0IGl0IGRyb3AgdGhlIHJlZHVuZGFudCBjcnRjIGFyZ3Vt
ZW50LgoKU2lnbmVkLW9mZi1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4
LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYyAg
ICAgfCAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jICAgIHwg
IDcgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jICB8ICA1ICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2x2ZHMuYyAgfCAgNCArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5jIHwgOTggKysrKysrKysrKyst
LS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5oIHwg
IDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jICAgICB8ICA1ICst
CiA3IGZpbGVzIGNoYW5nZWQsIDYwIGluc2VydGlvbnMoKyksIDY4IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMKaW5kZXggNmUzOThjMzNhNTI0Li42Mjdj
YmQ4ODAyMjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2Rz
aS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jCkBAIC0xMjY1
LDcgKzEyNjUsNiBAQCBzdGF0aWMgaW50IGdlbjExX2RzaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kgPSBj
b250YWluZXJfb2YoZW5jb2Rlciwgc3RydWN0IGludGVsX2RzaSwKIAkJCQkJCSAgIGJhc2UpOwog
CXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmludGVsX2Nvbm5lY3RvciA9IGludGVsX2RzaS0+YXR0
YWNoZWRfY29ubmVjdG9yOwotCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0
YyhwaXBlX2NvbmZpZy0+YmFzZS5jcnRjKTsKIAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqZml4ZWRfbW9kZSA9CiAJCQkJCWludGVsX2Nvbm5lY3Rvci0+cGFuZWwuZml4ZWRfbW9kZTsK
IAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9CkBAIC0xMjczLDcgKzEy
NzIsNyBAQCBzdGF0aWMgaW50IGdlbjExX2RzaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKIAogCXBpcGVfY29uZmlnLT5vdXRwdXRfZm9ybWF0ID0gSU5URUxf
T1VUUFVUX0ZPUk1BVF9SR0I7CiAJaW50ZWxfZml4ZWRfcGFuZWxfbW9kZShmaXhlZF9tb2RlLCBh
ZGp1c3RlZF9tb2RlKTsKLQlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhjcnRjLCBwaXBlX2NvbmZp
ZywgY29ubl9zdGF0ZS0+c2NhbGluZ19tb2RlKTsKKwlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhw
aXBlX2NvbmZpZywgY29ubl9zdGF0ZS0+c2NhbGluZ19tb2RlKTsKIAogCWFkanVzdGVkX21vZGUt
PmZsYWdzID0gMDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCmluZGV4
IGQzMzNmODdkNWIzOS4uZjZlZjNjMjVjMGVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcC5jCkBAIC0yMTIwLDcgKzIxMjAsNiBAQCBpbnRlbF9kcF95Y2JjcjQyMF9jb25m
aWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlf
aW5mbyAqaW5mbyA9ICZjb25uZWN0b3ItPmRpc3BsYXlfaW5mbzsKIAljb25zdCBzdHJ1Y3QgZHJt
X2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9CiAJCSZjcnRjX3N0YXRlLT5iYXNlLmFkanVz
dGVkX21vZGU7Ci0Jc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNf
c3RhdGUtPmJhc2UuY3J0Yyk7CiAKIAlpZiAoIWRybV9tb2RlX2lzXzQyMF9vbmx5KGluZm8sIGFk
anVzdGVkX21vZGUpIHx8CiAJICAgICFpbnRlbF9kcF9nZXRfY29sb3JpbWV0cnlfc3RhdHVzKGlu
dGVsX2RwKSB8fApAQCAtMjEyOSw3ICsyMTI4LDcgQEAgaW50ZWxfZHBfeWNiY3I0MjBfY29uZmln
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAljcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0
ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMDsKIAotCWludGVsX3BjaF9wYW5lbF9maXR0
aW5nKGNydGMsIGNydGNfc3RhdGUsIERSTV9NT0RFX1NDQUxFX0ZVTExTQ1JFRU4pOworCWludGVs
X3BjaF9wYW5lbF9maXR0aW5nKGNydGNfc3RhdGUsIERSTV9NT0RFX1NDQUxFX0ZVTExTQ1JFRU4p
OwogCiAJcmV0dXJuIDA7CiB9CkBAIC0yMjAwLDEwICsyMTk5LDEwIEBAIGludGVsX2RwX2NvbXB1
dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCSAgICAgICBhZGp1
c3RlZF9tb2RlKTsKIAogCQlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQotCQkJaW50ZWxfZ21jaF9w
YW5lbF9maXR0aW5nKGludGVsX2NydGMsIHBpcGVfY29uZmlnLAorCQkJaW50ZWxfZ21jaF9wYW5l
bF9maXR0aW5nKHBpcGVfY29uZmlnLAogCQkJCQkJIGNvbm5fc3RhdGUtPnNjYWxpbmdfbW9kZSk7
CiAJCWVsc2UKLQkJCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGludGVsX2NydGMsIHBpcGVfY29u
ZmlnLAorCQkJaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsCiAJCQkJCQljb25u
X3N0YXRlLT5zY2FsaW5nX21vZGUpOwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2hkbWkuYwppbmRleCA0MDM5YzIyMTZhZTAuLmM3NDliMDRiYTQ3NyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKQEAgLTIyNjcsOCArMjI2Nyw2IEBA
IHN0YXRpYyBib29sCiBpbnRlbF9oZG1pX3ljYmNyNDIwX2NvbmZpZyhzdHJ1Y3QgZHJtX2Nvbm5l
Y3RvciAqY29ubmVjdG9yLAogCQkJICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNvbmZpZykK
IHsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMoY29uZmln
LT5iYXNlLmNydGMpOwotCiAJaWYgKCFjb25uZWN0b3ItPnljYmNyXzQyMF9hbGxvd2VkKSB7CiAJ
CURSTV9FUlJPUigiUGxhdGZvcm0gZG9lc24ndCBzdXBwb3J0IFlDQkNSNDIwIG91dHB1dFxuIik7
CiAJCXJldHVybiBmYWxzZTsKQEAgLTIyNzYsOCArMjI3NCw3IEBAIGludGVsX2hkbWlfeWNiY3I0
MjBfY29uZmlnKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAKIAljb25maWctPm91
dHB1dF9mb3JtYXQgPSBJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNSNDIwOwogCi0JaW50ZWxfcGNo
X3BhbmVsX2ZpdHRpbmcoaW50ZWxfY3J0YywgY29uZmlnLAotCQkJCURSTV9NT0RFX1NDQUxFX0ZV
TExTQ1JFRU4pOworCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGNvbmZpZywgRFJNX01PREVfU0NB
TEVfRlVMTFNDUkVFTik7CiAKIAlyZXR1cm4gdHJ1ZTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9sdmRzLmMKaW5kZXggYzc4NmFiZGMzMzM2Li5lOTgzMDM1YWNhNjMgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jCkBAIC00MzAsMTAgKzQz
MCwxMCBAQCBzdGF0aWMgaW50IGludGVsX2x2ZHNfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVs
X2VuY29kZXIgKmludGVsX2VuY29kZXIsCiAJaWYgKEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKSB7
CiAJCXBpcGVfY29uZmlnLT5oYXNfcGNoX2VuY29kZXIgPSB0cnVlOwogCi0JCWludGVsX3BjaF9w
YW5lbF9maXR0aW5nKGludGVsX2NydGMsIHBpcGVfY29uZmlnLAorCQlpbnRlbF9wY2hfcGFuZWxf
Zml0dGluZyhwaXBlX2NvbmZpZywKIAkJCQkJY29ubl9zdGF0ZS0+c2NhbGluZ19tb2RlKTsKIAl9
IGVsc2UgewotCQlpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcoaW50ZWxfY3J0YywgcGlwZV9jb25m
aWcsCisJCWludGVsX2dtY2hfcGFuZWxfZml0dGluZyhwaXBlX2NvbmZpZywKIAkJCQkJIGNvbm5f
c3RhdGUtPnNjYWxpbmdfbW9kZSk7CiAKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX3BhbmVsLmMKaW5kZXggOGYyZTc3NTBlOGY0Li42ZjQyNzBlY2RlYmQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcGFuZWwuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmMKQEAgLTE3NCwyMyArMTc0LDIz
IEBAIGludGVsX3BhbmVsX3ZidF9maXhlZF9tb2RlKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNv
bm5lY3RvcikKIAogLyogYWRqdXN0ZWRfbW9kZSBoYXMgYmVlbiBwcmVzZXQgdG8gYmUgdGhlIHBh
bmVsJ3MgZml4ZWQgbW9kZSAqLwogdm9pZAotaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0
IGludGVsX2NydGMgKmludGVsX2NydGMsCi0JCQlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlw
ZV9jb25maWcsCitpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKIAkJCWludCBmaXR0aW5nX21vZGUpCiB7Ci0JY29uc3Qgc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmcGlwZV9jb25maWctPmJhc2UuYWRqdXN0
ZWRfbW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9
CisJCSZjcnRjX3N0YXRlLT5iYXNlLmFkanVzdGVkX21vZGU7CiAJaW50IHgsIHksIHdpZHRoLCBo
ZWlnaHQ7CiAKIAkvKiBOYXRpdmUgbW9kZXMgZG9uJ3QgbmVlZCBmaXR0aW5nICovCi0JaWYgKGFk
anVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXkgPT0gcGlwZV9jb25maWctPnBpcGVfc3JjX3cgJiYK
LQkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheSA9PSBwaXBlX2NvbmZpZy0+cGlwZV9z
cmNfaCAmJgotCSAgICBwaXBlX2NvbmZpZy0+b3V0cHV0X2Zvcm1hdCAhPSBJTlRFTF9PVVRQVVRf
Rk9STUFUX1lDQkNSNDIwKQorCWlmIChhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5ID09IGNy
dGNfc3RhdGUtPnBpcGVfc3JjX3cgJiYKKwkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxh
eSA9PSBjcnRjX3N0YXRlLT5waXBlX3NyY19oICYmCisJICAgIGNydGNfc3RhdGUtPm91dHB1dF9m
b3JtYXQgIT0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMCkKIAkJcmV0dXJuOwogCiAJc3dp
dGNoIChmaXR0aW5nX21vZGUpIHsKIAljYXNlIERSTV9NT0RFX1NDQUxFX0NFTlRFUjoKLQkJd2lk
dGggPSBwaXBlX2NvbmZpZy0+cGlwZV9zcmNfdzsKLQkJaGVpZ2h0ID0gcGlwZV9jb25maWctPnBp
cGVfc3JjX2g7CisJCXdpZHRoID0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfdzsKKwkJaGVpZ2h0ID0g
Y3J0Y19zdGF0ZS0+cGlwZV9zcmNfaDsKIAkJeCA9IChhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNw
bGF5IC0gd2lkdGggKyAxKS8yOwogCQl5ID0gKGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkg
LSBoZWlnaHQgKyAxKS8yOwogCQlicmVhazsKQEAgLTE5OSwxOCArMTk5LDE4IEBAIGludGVsX3Bj
aF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjLAogCQkvKiBTY2Fs
ZSBidXQgcHJlc2VydmUgdGhlIGFzcGVjdCByYXRpbyAqLwogCQl7CiAJCQl1MzIgc2NhbGVkX3dp
ZHRoID0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheQotCQkJCSogcGlwZV9jb25maWctPnBp
cGVfc3JjX2g7Ci0JCQl1MzIgc2NhbGVkX2hlaWdodCA9IHBpcGVfY29uZmlnLT5waXBlX3NyY193
CisJCQkJKiBjcnRjX3N0YXRlLT5waXBlX3NyY19oOworCQkJdTMyIHNjYWxlZF9oZWlnaHQgPSBj
cnRjX3N0YXRlLT5waXBlX3NyY193CiAJCQkJKiBhZGp1c3RlZF9tb2RlLT5jcnRjX3ZkaXNwbGF5
OwogCQkJaWYgKHNjYWxlZF93aWR0aCA+IHNjYWxlZF9oZWlnaHQpIHsgLyogcGlsbGFyICovCi0J
CQkJd2lkdGggPSBzY2FsZWRfaGVpZ2h0IC8gcGlwZV9jb25maWctPnBpcGVfc3JjX2g7CisJCQkJ
d2lkdGggPSBzY2FsZWRfaGVpZ2h0IC8gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfaDsKIAkJCQlpZiAo
d2lkdGggJiAxKQogCQkJCQl3aWR0aCsrOwogCQkJCXggPSAoYWRqdXN0ZWRfbW9kZS0+Y3J0Y19o
ZGlzcGxheSAtIHdpZHRoICsgMSkgLyAyOwogCQkJCXkgPSAwOwogCQkJCWhlaWdodCA9IGFkanVz
dGVkX21vZGUtPmNydGNfdmRpc3BsYXk7CiAJCQl9IGVsc2UgaWYgKHNjYWxlZF93aWR0aCA8IHNj
YWxlZF9oZWlnaHQpIHsgLyogbGV0dGVyICovCi0JCQkJaGVpZ2h0ID0gc2NhbGVkX3dpZHRoIC8g
cGlwZV9jb25maWctPnBpcGVfc3JjX3c7CisJCQkJaGVpZ2h0ID0gc2NhbGVkX3dpZHRoIC8gY3J0
Y19zdGF0ZS0+cGlwZV9zcmNfdzsKIAkJCQlpZiAoaGVpZ2h0ICYgMSkKIAkJCQkgICAgaGVpZ2h0
Kys7CiAJCQkJeSA9IChhZGp1c3RlZF9tb2RlLT5jcnRjX3ZkaXNwbGF5IC0gaGVpZ2h0ICsgMSkg
LyAyOwpAQCAtMjM1LDExICsyMzUsMTEgQEAgaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0
IGludGVsX2NydGMgKmludGVsX2NydGMsCiAJCXJldHVybjsKIAl9CiAKLQlwaXBlX2NvbmZpZy0+
cGNoX3BmaXQuZHN0LngxID0geDsKLQlwaXBlX2NvbmZpZy0+cGNoX3BmaXQuZHN0LnkxID0geTsK
LQlwaXBlX2NvbmZpZy0+cGNoX3BmaXQuZHN0LngyID0geCArIHdpZHRoOwotCXBpcGVfY29uZmln
LT5wY2hfcGZpdC5kc3QueTIgPSB5ICsgaGVpZ2h0OwotCXBpcGVfY29uZmlnLT5wY2hfcGZpdC5l
bmFibGVkID0gdHJ1ZTsKKwljcnRjX3N0YXRlLT5wY2hfcGZpdC5kc3QueDEgPSB4OworCWNydGNf
c3RhdGUtPnBjaF9wZml0LmRzdC55MSA9IHk7CisJY3J0Y19zdGF0ZS0+cGNoX3BmaXQuZHN0Lngy
ID0geCArIHdpZHRoOworCWNydGNfc3RhdGUtPnBjaF9wZml0LmRzdC55MiA9IHkgKyBoZWlnaHQ7
CisJY3J0Y19zdGF0ZS0+cGNoX3BmaXQuZW5hYmxlZCA9IHRydWU7CiB9CiAKIHN0YXRpYyB2b2lk
CkBAIC0yOTgsMTMgKzI5OCwxMyBAQCBzdGF0aWMgaW5saW5lIHUzMiBwYW5lbF9maXR0ZXJfc2Nh
bGluZyh1MzIgc291cmNlLCB1MzIgdGFyZ2V0KQogCXJldHVybiAoRkFDVE9SICogcmF0aW8gKyBG
QUNUT1IvMikgLyBGQUNUT1I7CiB9CiAKLXN0YXRpYyB2b2lkIGk5NjVfc2NhbGVfYXNwZWN0KHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKK3N0YXRpYyB2b2lkIGk5NjVfc2Nh
bGVfYXNwZWN0KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAg
dTMyICpwZml0X2NvbnRyb2wpCiB7Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFk
anVzdGVkX21vZGUgPSAmcGlwZV9jb25maWctPmJhc2UuYWRqdXN0ZWRfbW9kZTsKKwljb25zdCBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9ICZjcnRjX3N0YXRlLT5iYXNl
LmFkanVzdGVkX21vZGU7CiAJdTMyIHNjYWxlZF93aWR0aCA9IGFkanVzdGVkX21vZGUtPmNydGNf
aGRpc3BsYXkgKgotCQlwaXBlX2NvbmZpZy0+cGlwZV9zcmNfaDsKLQl1MzIgc2NhbGVkX2hlaWdo
dCA9IHBpcGVfY29uZmlnLT5waXBlX3NyY193ICoKKwkJY3J0Y19zdGF0ZS0+cGlwZV9zcmNfaDsK
Kwl1MzIgc2NhbGVkX2hlaWdodCA9IGNydGNfc3RhdGUtPnBpcGVfc3JjX3cgKgogCQlhZGp1c3Rl
ZF9tb2RlLT5jcnRjX3ZkaXNwbGF5OwogCiAJLyogOTY1KyBpcyBlYXN5LCBpdCBkb2VzIGV2ZXJ5
dGhpbmcgaW4gaHcgKi8KQEAgLTMxNCwxOCArMzE0LDE4IEBAIHN0YXRpYyB2b2lkIGk5NjVfc2Nh
bGVfYXNwZWN0KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAllbHNlIGlm
IChzY2FsZWRfd2lkdGggPCBzY2FsZWRfaGVpZ2h0KQogCQkqcGZpdF9jb250cm9sIHw9IFBGSVRf
RU5BQkxFIHwKIAkJCVBGSVRfU0NBTElOR19MRVRURVI7Ci0JZWxzZSBpZiAoYWRqdXN0ZWRfbW9k
ZS0+Y3J0Y19oZGlzcGxheSAhPSBwaXBlX2NvbmZpZy0+cGlwZV9zcmNfdykKKwllbHNlIGlmIChh
ZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5ICE9IGNydGNfc3RhdGUtPnBpcGVfc3JjX3cpCiAJ
CSpwZml0X2NvbnRyb2wgfD0gUEZJVF9FTkFCTEUgfCBQRklUX1NDQUxJTkdfQVVUTzsKIH0KIAot
c3RhdGljIHZvaWQgaTl4eF9zY2FsZV9hc3BlY3Qoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBp
cGVfY29uZmlnLAorc3RhdGljIHZvaWQgaTl4eF9zY2FsZV9hc3BlY3Qoc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgICB1MzIgKnBmaXRfY29udHJvbCwgdTMyICpw
Zml0X3BnbV9yYXRpb3MsCiAJCQkgICAgICB1MzIgKmJvcmRlcikKIHsKLQlzdHJ1Y3QgZHJtX2Rp
c3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9ICZwaXBlX2NvbmZpZy0+YmFzZS5hZGp1c3RlZF9t
b2RlOworCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0gJmNydGNfc3Rh
dGUtPmJhc2UuYWRqdXN0ZWRfbW9kZTsKIAl1MzIgc2NhbGVkX3dpZHRoID0gYWRqdXN0ZWRfbW9k
ZS0+Y3J0Y19oZGlzcGxheSAqCi0JCXBpcGVfY29uZmlnLT5waXBlX3NyY19oOwotCXUzMiBzY2Fs
ZWRfaGVpZ2h0ID0gcGlwZV9jb25maWctPnBpcGVfc3JjX3cgKgorCQljcnRjX3N0YXRlLT5waXBl
X3NyY19oOworCXUzMiBzY2FsZWRfaGVpZ2h0ID0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfdyAqCiAJ
CWFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXk7CiAJdTMyIGJpdHM7CiAKQEAgLTMzNywxMSAr
MzM3LDExIEBAIHN0YXRpYyB2b2lkIGk5eHhfc2NhbGVfYXNwZWN0KHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpwaXBlX2NvbmZpZywKIAlpZiAoc2NhbGVkX3dpZHRoID4gc2NhbGVkX2hlaWdodCkg
eyAvKiBwaWxsYXIgKi8KIAkJY2VudHJlX2hvcml6b250YWxseShhZGp1c3RlZF9tb2RlLAogCQkJ
CSAgICBzY2FsZWRfaGVpZ2h0IC8KLQkJCQkgICAgcGlwZV9jb25maWctPnBpcGVfc3JjX2gpOwor
CQkJCSAgICBjcnRjX3N0YXRlLT5waXBlX3NyY19oKTsKIAogCQkqYm9yZGVyID0gTFZEU19CT1JE
RVJfRU5BQkxFOwotCQlpZiAocGlwZV9jb25maWctPnBpcGVfc3JjX2ggIT0gYWRqdXN0ZWRfbW9k
ZS0+Y3J0Y192ZGlzcGxheSkgewotCQkJYml0cyA9IHBhbmVsX2ZpdHRlcl9zY2FsaW5nKHBpcGVf
Y29uZmlnLT5waXBlX3NyY19oLAorCQlpZiAoY3J0Y19zdGF0ZS0+cGlwZV9zcmNfaCAhPSBhZGp1
c3RlZF9tb2RlLT5jcnRjX3ZkaXNwbGF5KSB7CisJCQliaXRzID0gcGFuZWxfZml0dGVyX3NjYWxp
bmcoY3J0Y19zdGF0ZS0+cGlwZV9zcmNfaCwKIAkJCQkJCSAgICBhZGp1c3RlZF9tb2RlLT5jcnRj
X3ZkaXNwbGF5KTsKIAogCQkJKnBmaXRfcGdtX3JhdGlvcyB8PSAoYml0cyA8PCBQRklUX0hPUkla
X1NDQUxFX1NISUZUIHwKQEAgLTM1MywxMSArMzUzLDExIEBAIHN0YXRpYyB2b2lkIGk5eHhfc2Nh
bGVfYXNwZWN0KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAl9IGVsc2Ug
aWYgKHNjYWxlZF93aWR0aCA8IHNjYWxlZF9oZWlnaHQpIHsgLyogbGV0dGVyICovCiAJCWNlbnRy
ZV92ZXJ0aWNhbGx5KGFkanVzdGVkX21vZGUsCiAJCQkJICBzY2FsZWRfd2lkdGggLwotCQkJCSAg
cGlwZV9jb25maWctPnBpcGVfc3JjX3cpOworCQkJCSAgY3J0Y19zdGF0ZS0+cGlwZV9zcmNfdyk7
CiAKIAkJKmJvcmRlciA9IExWRFNfQk9SREVSX0VOQUJMRTsKLQkJaWYgKHBpcGVfY29uZmlnLT5w
aXBlX3NyY193ICE9IGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXkpIHsKLQkJCWJpdHMgPSBw
YW5lbF9maXR0ZXJfc2NhbGluZyhwaXBlX2NvbmZpZy0+cGlwZV9zcmNfdywKKwkJaWYgKGNydGNf
c3RhdGUtPnBpcGVfc3JjX3cgIT0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSkgeworCQkJ
Yml0cyA9IHBhbmVsX2ZpdHRlcl9zY2FsaW5nKGNydGNfc3RhdGUtPnBpcGVfc3JjX3csCiAJCQkJ
CQkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSk7CiAKIAkJCSpwZml0X3BnbV9yYXRp
b3MgfD0gKGJpdHMgPDwgUEZJVF9IT1JJWl9TQ0FMRV9TSElGVCB8CkBAIC0zNzUsMTcgKzM3NSwx
NyBAQCBzdGF0aWMgdm9pZCBpOXh4X3NjYWxlX2FzcGVjdChzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqcGlwZV9jb25maWcsCiAJfQogfQogCi12b2lkIGludGVsX2dtY2hfcGFuZWxfZml0dGluZyhz
dHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YywKLQkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpwaXBlX2NvbmZpZywKK3ZvaWQgaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAgaW50IGZpdHRpbmdfbW9k
ZSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGludGVs
X2NydGMtPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2Ny
dGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKIAl1MzIgcGZpdF9jb250cm9sID0gMCwg
cGZpdF9wZ21fcmF0aW9zID0gMCwgYm9yZGVyID0gMDsKLQlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqYWRqdXN0ZWRfbW9kZSA9ICZwaXBlX2NvbmZpZy0+YmFzZS5hZGp1c3RlZF9tb2RlOworCXN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0gJmNydGNfc3RhdGUtPmJhc2Uu
YWRqdXN0ZWRfbW9kZTsKIAogCS8qIE5hdGl2ZSBtb2RlcyBkb24ndCBuZWVkIGZpdHRpbmcgKi8K
LQlpZiAoYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSA9PSBwaXBlX2NvbmZpZy0+cGlwZV9z
cmNfdyAmJgotCSAgICBhZGp1c3RlZF9tb2RlLT5jcnRjX3ZkaXNwbGF5ID09IHBpcGVfY29uZmln
LT5waXBlX3NyY19oKQorCWlmIChhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5ID09IGNydGNf
c3RhdGUtPnBpcGVfc3JjX3cgJiYKKwkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheSA9
PSBjcnRjX3N0YXRlLT5waXBlX3NyY19oKQogCQlnb3RvIG91dDsKIAogCXN3aXRjaCAoZml0dGlu
Z19tb2RlKSB7CkBAIC0zOTQsMTYgKzM5NCwxNiBAQCB2b2lkIGludGVsX2dtY2hfcGFuZWxfZml0
dGluZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YywKIAkJICogRm9yIGNlbnRlcmVkIG1v
ZGVzLCB3ZSBoYXZlIHRvIGNhbGN1bGF0ZSBib3JkZXIgd2lkdGhzICYKIAkJICogaGVpZ2h0cyBh
bmQgbW9kaWZ5IHRoZSB2YWx1ZXMgcHJvZ3JhbW1lZCBpbnRvIHRoZSBDUlRDLgogCQkgKi8KLQkJ
Y2VudHJlX2hvcml6b250YWxseShhZGp1c3RlZF9tb2RlLCBwaXBlX2NvbmZpZy0+cGlwZV9zcmNf
dyk7Ci0JCWNlbnRyZV92ZXJ0aWNhbGx5KGFkanVzdGVkX21vZGUsIHBpcGVfY29uZmlnLT5waXBl
X3NyY19oKTsKKwkJY2VudHJlX2hvcml6b250YWxseShhZGp1c3RlZF9tb2RlLCBjcnRjX3N0YXRl
LT5waXBlX3NyY193KTsKKwkJY2VudHJlX3ZlcnRpY2FsbHkoYWRqdXN0ZWRfbW9kZSwgY3J0Y19z
dGF0ZS0+cGlwZV9zcmNfaCk7CiAJCWJvcmRlciA9IExWRFNfQk9SREVSX0VOQUJMRTsKIAkJYnJl
YWs7CiAJY2FzZSBEUk1fTU9ERV9TQ0FMRV9BU1BFQ1Q6CiAJCS8qIFNjYWxlIGJ1dCBwcmVzZXJ2
ZSB0aGUgYXNwZWN0IHJhdGlvICovCiAJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDQpCi0J
CQlpOTY1X3NjYWxlX2FzcGVjdChwaXBlX2NvbmZpZywgJnBmaXRfY29udHJvbCk7CisJCQlpOTY1
X3NjYWxlX2FzcGVjdChjcnRjX3N0YXRlLCAmcGZpdF9jb250cm9sKTsKIAkJZWxzZQotCQkJaTl4
eF9zY2FsZV9hc3BlY3QocGlwZV9jb25maWcsICZwZml0X2NvbnRyb2wsCisJCQlpOXh4X3NjYWxl
X2FzcGVjdChjcnRjX3N0YXRlLCAmcGZpdF9jb250cm9sLAogCQkJCQkgICZwZml0X3BnbV9yYXRp
b3MsICZib3JkZXIpOwogCQlicmVhazsKIAljYXNlIERSTV9NT0RFX1NDQUxFX0ZVTExTQ1JFRU46
CkBAIC00MTEsOCArNDExLDggQEAgdm9pZCBpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0
IGludGVsX2NydGMgKmludGVsX2NydGMsCiAJCSAqIEZ1bGwgc2NhbGluZywgZXZlbiBpZiBpdCBj
aGFuZ2VzIHRoZSBhc3BlY3QgcmF0aW8uCiAJCSAqIEZvcnR1bmF0ZWx5IHRoaXMgaXMgYWxsIGRv
bmUgZm9yIHVzIGluIGh3LgogCQkgKi8KLQkJaWYgKHBpcGVfY29uZmlnLT5waXBlX3NyY19oICE9
IGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkgfHwKLQkJICAgIHBpcGVfY29uZmlnLT5waXBl
X3NyY193ICE9IGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXkpIHsKKwkJaWYgKGNydGNfc3Rh
dGUtPnBpcGVfc3JjX2ggIT0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheSB8fAorCQkgICAg
Y3J0Y19zdGF0ZS0+cGlwZV9zcmNfdyAhPSBhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5KSB7
CiAJCQlwZml0X2NvbnRyb2wgfD0gUEZJVF9FTkFCTEU7CiAJCQlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSA0KQogCQkJCXBmaXRfY29udHJvbCB8PSBQRklUX1NDQUxJTkdfQVVUTzsKQEAgLTQz
MSw3ICs0MzEsNyBAQCB2b2lkIGludGVsX2dtY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxf
Y3J0YyAqaW50ZWxfY3J0YywKIAkvKiA5NjUrIHdhbnRzIGZ1enp5IGZpdHRpbmcgKi8KIAkvKiBG
SVhNRTogaGFuZGxlIG11bHRpcGxlIHBhbmVscyBieSBmYWlsaW5nIGdyYWNlZnVsbHkgKi8KIAlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA0KQotCQlwZml0X2NvbnRyb2wgfD0gUEZJVF9QSVBF
KGludGVsX2NydGMtPnBpcGUpIHwgUEZJVF9GSUxURVJfRlVaWlk7CisJCXBmaXRfY29udHJvbCB8
PSBQRklUX1BJUEUoY3J0Yy0+cGlwZSkgfCBQRklUX0ZJTFRFUl9GVVpaWTsKIAogb3V0OgogCWlm
ICgocGZpdF9jb250cm9sICYgUEZJVF9FTkFCTEUpID09IDApIHsKQEAgLTQ0MCwxMiArNDQwLDEy
IEBAIHZvaWQgaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjICppbnRl
bF9jcnRjLAogCX0KIAogCS8qIE1ha2Ugc3VyZSBwcmUtOTY1IHNldCBkaXRoZXIgY29ycmVjdGx5
IGZvciAxOGJwcCBwYW5lbHMuICovCi0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCA0ICYmIHBp
cGVfY29uZmlnLT5waXBlX2JwcCA9PSAxOCkKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDQg
JiYgY3J0Y19zdGF0ZS0+cGlwZV9icHAgPT0gMTgpCiAJCXBmaXRfY29udHJvbCB8PSBQQU5FTF84
VE82X0RJVEhFUl9FTkFCTEU7CiAKLQlwaXBlX2NvbmZpZy0+Z21jaF9wZml0LmNvbnRyb2wgPSBw
Zml0X2NvbnRyb2w7Ci0JcGlwZV9jb25maWctPmdtY2hfcGZpdC5wZ21fcmF0aW9zID0gcGZpdF9w
Z21fcmF0aW9zOwotCXBpcGVfY29uZmlnLT5nbWNoX3BmaXQubHZkc19ib3JkZXJfYml0cyA9IGJv
cmRlcjsKKwljcnRjX3N0YXRlLT5nbWNoX3BmaXQuY29udHJvbCA9IHBmaXRfY29udHJvbDsKKwlj
cnRjX3N0YXRlLT5nbWNoX3BmaXQucGdtX3JhdGlvcyA9IHBmaXRfcGdtX3JhdGlvczsKKwljcnRj
X3N0YXRlLT5nbWNoX3BmaXQubHZkc19ib3JkZXJfYml0cyA9IGJvcmRlcjsKIH0KIAogLyoqCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmgKaW5kZXggY2VkZWVhNDQz
MzM2Li5lMTgwNGU2ZTgzMjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcGFuZWwuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X3BhbmVsLmgKQEAgLTI1LDExICsyNSw5IEBAIGludCBpbnRlbF9wYW5lbF9pbml0KHN0cnVjdCBp
bnRlbF9wYW5lbCAqcGFuZWwsCiB2b2lkIGludGVsX3BhbmVsX2Zpbmkoc3RydWN0IGludGVsX3Bh
bmVsICpwYW5lbCk7CiB2b2lkIGludGVsX2ZpeGVkX3BhbmVsX21vZGUoY29uc3Qgc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKmZpeGVkX21vZGUsCiAJCQkgICAgc3RydWN0IGRybV9kaXNwbGF5X21v
ZGUgKmFkanVzdGVkX21vZGUpOwotdm9pZCBpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YywKLQkJCSAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVf
Y29uZmlnLAordm9pZCBpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgaW50IGZpdHRpbmdfbW9kZSk7Ci12b2lkIGludGVs
X2dtY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJCSAgICAgIHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKK3ZvaWQgaW50ZWxfZ21jaF9wYW5l
bF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAg
aW50IGZpdHRpbmdfbW9kZSk7CiB2b2lkIGludGVsX3BhbmVsX3NldF9iYWNrbGlnaHRfYWNwaShj
b25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSwKIAkJCQkgICAgdTMy
IGxldmVsLCB1MzIgbWF4KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvdmx2X2RzaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS92bHZfZHNpLmMKaW5k
ZXggNTAwNjRjZGUwNzI0Li42YTIwYzQxNjlhNTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvdmx2X2RzaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvdmx2X2RzaS5jCkBAIC0yNjEsNyArMjYxLDYgQEAgc3RhdGljIGludCBpbnRlbF9kc2lfY29t
cHV0ZV9jb25maWcoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVs
X2RzaSAqaW50ZWxfZHNpID0gY29udGFpbmVyX29mKGVuY29kZXIsIHN0cnVjdCBpbnRlbF9kc2ks
CiAJCQkJCQkgICBiYXNlKTsKIAlzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICppbnRlbF9jb25uZWN0
b3IgPSBpbnRlbF9kc2ktPmF0dGFjaGVkX2Nvbm5lY3RvcjsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YyA9IHRvX2ludGVsX2NydGMocGlwZV9jb25maWctPmJhc2UuY3J0Yyk7CiAJY29uc3Qgc3Ry
dWN0IGRybV9kaXNwbGF5X21vZGUgKmZpeGVkX21vZGUgPSBpbnRlbF9jb25uZWN0b3ItPnBhbmVs
LmZpeGVkX21vZGU7CiAJc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAm
cGlwZV9jb25maWctPmJhc2UuYWRqdXN0ZWRfbW9kZTsKIAlpbnQgcmV0OwpAQCAtMjczLDEwICsy
NzIsMTAgQEAgc3RhdGljIGludCBpbnRlbF9kc2lfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIsCiAJCWludGVsX2ZpeGVkX3BhbmVsX21vZGUoZml4ZWRfbW9kZSwg
YWRqdXN0ZWRfbW9kZSk7CiAKIAkJaWYgKEhBU19HTUNIKGRldl9wcml2KSkKLQkJCWludGVsX2dt
Y2hfcGFuZWxfZml0dGluZyhjcnRjLCBwaXBlX2NvbmZpZywKKwkJCWludGVsX2dtY2hfcGFuZWxf
Zml0dGluZyhwaXBlX2NvbmZpZywKIAkJCQkJCSBjb25uX3N0YXRlLT5zY2FsaW5nX21vZGUpOwog
CQllbHNlCi0JCQlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhjcnRjLCBwaXBlX2NvbmZpZywKKwkJ
CWludGVsX3BjaF9wYW5lbF9maXR0aW5nKHBpcGVfY29uZmlnLAogCQkJCQkJY29ubl9zdGF0ZS0+
c2NhbGluZ19tb2RlKTsKIAl9CiAKLS0gCjIuMjEuMAoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vaW50ZWwtZ2Z4

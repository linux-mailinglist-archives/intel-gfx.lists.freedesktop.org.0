Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8241FE1CA0
	for <lists+intel-gfx@lfdr.de>; Wed, 23 Oct 2019 15:31:24 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 973F66EAC0;
	Wed, 23 Oct 2019 13:31:22 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D5A336EA19
 for <intel-gfx@lists.freedesktop.org>; Wed, 23 Oct 2019 13:31:20 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18937749-1500050 
 for <intel-gfx@lists.freedesktop.org>; Wed, 23 Oct 2019 14:31:15 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 23 Oct 2019 14:31:05 +0100
Message-Id: <20191023133108.21401-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191023133108.21401-1-chris@chris-wilson.co.uk>
References: <20191023133108.21401-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 2/5] drm/i915/execlists: Force preemption
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SWYgdGhlIHByZWVtcHRlZCBjb250ZXh0IHRha2VzIHRvbyBsb25nIHRvIHJlbGlucXVpc2ggY29u
dHJvbCwgZS5nLiBpdAppcyBzdHVjayBpbnNpZGUgYSBzaGFkZXIgd2l0aCBhcmJpdHJhdGlvbiBk
aXNhYmxlZCwgZXZpY3QgdGhhdCBjb250ZXh0CndpdGggYW4gZW5naW5lIHJlc2V0LiBUaGlzIGVu
c3VyZXMgdGhhdCBwcmVlbXB0aW9ucyBhcmUgcmVhc29uYWJseQpyZXNwb25zaXZlLCBwcm92aWRp
bmcgYSB0aWdodGVyIFFvUyBmb3IgdGhlIG1vcmUgaW1wb3J0YW50IGNvbnRleHQgYXQKdGhlIGNv
c3Qgb2YgZmxhZ2dpbmcgdW5yZXNwb25zaXZlIGNvbnRleHRzIG1vcmUgZnJlcXVlbnRseSAoaS5l
LiBpbnN0ZWFkCm9mIHVzaW5nIGFuIH4xMHMgaGFuZ2NoZWNrLCB3ZSBub3cgZXZpY3QgYXQgfjEw
MG1zKS4gIFRoZSBjaGFsbGVuZ2Ugb2YKbGllcyBpbiBwaWNraW5nIGEgdGltZW91dCB0aGF0IGNh
biBiZSByZWFzb25hYmx5IHNlcnZpY2VkIGJ5IEhXIGZvcgp0eXBpY2FsIHdvcmtsb2FkcywgYmFs
YW5jaW5nIHRoZSBleGlzdGluZyBjbGllbnRzIGFnYWluc3QgdGhlIG5lZWRzIGZvcgpyZXNwb25z
aXZlbmVzcy4KCk5vdGUgdGhhdCBjb3VwbGVkIHdpdGggdGltZXNsaWNpbmcsIHRoaXMgd2lsbCBs
ZWFkIHRvIHJhcGlkIEdQVSAiaGFuZyIKZGV0ZWN0aW9uIHdpdGggbXVsdGlwbGUgYWN0aXZlIGNv
bnRleHRzIHZ5aW5nIGZvciBHUFUgdGltZS4KClRoZSBmb3JjZWQgcHJlZW1wdGlvbiBtZWNoYW5p
c20gY2FuIGJlIGNvbXBpbGVkIG91dCB3aXRoCgoJLi9zY3JpcHRzL2NvbmZpZyAtLXNldC12YWwg
RFJNX0k5MTVfUFJFRU1QVF9USU1FT1VUIDAKClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogTWlrYSBLdW9wcGFsYSA8bWlrYS5rdW9wcGFs
YUBsaW51eC5pbnRlbC5jb20+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50
ZWwuY29tPgpSZXZpZXdlZC1ieTogTWlrYSBLdW9wcGFsYSA8bWlrYS5rdW9wcGFsYUBsaW51eC5p
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlICAgICAg
ICAgfCAgMTIgKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaCAgICAg
ICB8ICAgOSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAg
fCAgIDUgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIHwg
ICA2ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICB8ICA5
MyArKysrKysrKysrKysrKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJj
LmMgICAgICAgfCAxMDAgKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW0uaCAgICAgICAgICAgICAgfCAgMTQgLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3BhcmFtcy5oICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV91dGlscy5jICAgICAgICAgICAgfCAgMjkgKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3V0aWxzLmggICAgICAgICAgICB8ICAgOSArKwogMTAgZmlsZXMgY2hhbmdlZCwgMjU1IGlu
c2VydGlvbnMoKyksIDI0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L0tjb25maWcucHJvZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcucHJv
ZmlsZQppbmRleCAzYTM4ODFkNWU0NGIuLmIwNzFiNjAyNDE1MiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L0tjb25maWcucHJvZmlsZQpAQCAtMTIsNiArMTIsMTggQEAgY29uZmlnIERSTV9JOTE1X1VTRVJG
QVVMVF9BVVRPU1VTUEVORAogCSAgTWF5IGJlIDAgdG8gZGlzYWJsZSB0aGUgZXh0cmEgZGVsYXkg
YW5kIHNvbGVseSB1c2UgdGhlIGRldmljZSBsZXZlbAogCSAgcnVudGltZSBwbSBhdXRvc3VzcGVu
ZCBkZWxheSB0dW5hYmxlLgogCitjb25maWcgRFJNX0k5MTVfUFJFRU1QVF9USU1FT1VUCisJaW50
ICJQcmVlbXB0IHRpbWVvdXQgKG1zLCBqaWZmeSBncmFudWxhcml0eSkiCisJZGVmYXVsdCAxMDAg
IyBtaWxsaXNlY29uZHMKKwloZWxwCisJICBIb3cgbG9uZyB0byB3YWl0IChpbiBtaWxsaXNlY29u
ZHMpIGZvciBhIHByZWVtcHRpb24gZXZlbnQgdG8gb2NjdXIKKwkgIHdoZW4gc3VibWl0dGluZyBh
IG5ldyBjb250ZXh0IHZpYSBleGVjbGlzdHMuIElmIHRoZSBjdXJyZW50IGNvbnRleHQKKwkgIGRv
ZXMgbm90IGhpdCBhbiBhcmJpdHJhdGlvbiBwb2ludCBhbmQgeWllbGQgdG8gSFcgYmVmb3JlIHRo
ZSB0aW1lcgorCSAgZXhwaXJlcywgdGhlIEhXIHdpbGwgYmUgcmVzZXQgdG8gYWxsb3cgdGhlIG1v
cmUgaW1wb3J0YW50IGNvbnRleHQKKwkgIHRvIGV4ZWN1dGUuCisKKwkgIE1heSBiZSAwIHRvIGRp
c2FibGUgdGhlIHRpbWVvdXQuCisKIGNvbmZpZyBEUk1fSTkxNV9TUElOX1JFUVVFU1QKIAlpbnQg
IkJ1c3l3YWl0IGZvciByZXF1ZXN0IGNvbXBsZXRpb24gKHVzKSIKIAlkZWZhdWx0IDUgIyBtaWNy
b3NlY29uZHMKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2lu
ZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgKaW5kZXggYzJkOWQ2
N2M2M2Q5Li45NDA5Yjc4NTYyOTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2lu
ZS5oCkBAIC01MjcsNCArNTI3LDEzIEBAIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfYWN0aXZlKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKICNkZWZpbmUgRU5HSU5FX01PQ0sJMQogI2Rl
ZmluZSBFTkdJTkVfVklSVFVBTAkyCiAKK3N0YXRpYyBpbmxpbmUgYm9vbAoraW50ZWxfZW5naW5l
X2hhc19wcmVlbXB0X3Jlc2V0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
K3sKKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQpCisJCXJldHVybiAwOwor
CisJcmV0dXJuIGludGVsX2VuZ2luZV9oYXNfcHJlZW1wdGlvbihlbmdpbmUpOworfQorCiAjZW5k
aWYgLyogX0lOVEVMX1JJTkdCVUZGRVJfSF8gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZW5naW5lX2NzLmMKaW5kZXggZTQyMDNlYjQ0MTM5Li5iOTFlYTA3ZjQ4MTkgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCkBAIC0zMDgsNiArMzA4LDggQEAg
c3RhdGljIGludCBpbnRlbF9lbmdpbmVfc2V0dXAoc3RydWN0IGludGVsX2d0ICpndCwgZW51bSBp
bnRlbF9lbmdpbmVfaWQgaWQpCiAJZW5naW5lLT5pbnN0YW5jZSA9IGluZm8tPmluc3RhbmNlOwog
CV9fc3ByaW50X2VuZ2luZV9uYW1lKGVuZ2luZSk7CiAKKwllbmdpbmUtPnByb3BzLnByZWVtcHRf
dGltZW91dF9tcyA9CisJCUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQ7CiAJZW5naW5l
LT5wcm9wcy5zdG9wX3RpbWVvdXRfbXMgPQogCQlDT05GSUdfRFJNX0k5MTVfU1RPUF9USU1FT1VU
OwogCkBAIC0xMzM4LDEwICsxMzQwLDExIEBAIHN0YXRpYyB2b2lkIGludGVsX2VuZ2luZV9wcmlu
dF9yZWdpc3RlcnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQl1bnNpZ25lZCBp
bnQgaWR4OwogCQl1OCByZWFkLCB3cml0ZTsKIAotCQlkcm1fcHJpbnRmKG0sICJcdEV4ZWNsaXN0
IHRhc2tsZXQgcXVldWVkPyAlcyAoJXMpLCB0aW1lc2xpY2U/ICVzXG4iLAorCQlkcm1fcHJpbnRm
KG0sICJcdEV4ZWNsaXN0IHRhc2tsZXQgcXVldWVkPyAlcyAoJXMpLCBwcmVlbXB0PyAlcywgdGlt
ZXNsaWNlPyAlc1xuIiwKIAkJCSAgIHllc25vKHRlc3RfYml0KFRBU0tMRVRfU1RBVEVfU0NIRUQs
CiAJCQkJCSAgJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQuc3RhdGUpKSwKIAkJCSAgIGVuYWJs
ZWRkaXNhYmxlZCghYXRvbWljX3JlYWQoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQuY291bnQp
KSwKKwkJCSAgIHJlcHJfdGltZXIoJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQpLAogCQkJICAg
cmVwcl90aW1lcigmZW5naW5lLT5leGVjbGlzdHMudGltZXIpKTsKIAogCQlyZWFkID0gZXhlY2xp
c3RzLT5jc2JfaGVhZDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5
cGVzLmgKaW5kZXggODdkNWM0ZWYzYWU3Li4xMjUxZGFjOTFmMzEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCkBAIC0xNzQsNiArMTc0LDExIEBAIHN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzIHsKIAkgKi8KIAlzdHJ1Y3QgdGltZXJfbGlzdCB0
aW1lcjsKIAorCS8qKgorCSAqIEBwcmVlbXB0OiByZXNldCB0aGUgY3VycmVudCBjb250ZXh0IGlm
IGl0IGZhaWxzIHRvIGdpdmUgd2F5CisJICovCisJc3RydWN0IHRpbWVyX2xpc3QgcHJlZW1wdDsK
KwogCS8qKgogCSAqIEBkZWZhdWx0X3ByaW9saXN0OiBwcmlvcml0eSBsaXN0IGZvciBJOTE1X1BS
SU9SSVRZX05PUk1BTAogCSAqLwpAQCAtNTQ0LDYgKzU0OSw3IEBAIHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgewogCX0gc3RhdHM7CiAKIAlzdHJ1Y3QgeworCQl1bnNpZ25lZCBsb25nIHByZWVtcHRf
dGltZW91dF9tczsKIAkJdW5zaWduZWQgbG9uZyBzdG9wX3RpbWVvdXRfbXM7CiAJfSBwcm9wczsK
IH07CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IGY5ZjNlOTg1YmI3OS4uZmYw
ZGQyOTdlNzgyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMTM3Miw2ICsx
MzcyLDI2IEBAIHN0YXRpYyB2b2lkIHJlY29yZF9wcmVlbXB0aW9uKHN0cnVjdCBpbnRlbF9lbmdp
bmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiAJKHZvaWQpSTkxNV9TRUxGVEVTVF9PTkxZKGV4ZWNs
aXN0cy0+cHJlZW1wdF9oYW5nLmNvdW50KyspOwogfQogCitzdGF0aWMgdW5zaWduZWQgbG9uZyBh
Y3RpdmVfcHJlZW1wdF90aW1lb3V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sK
KwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCXJxID0gbGFzdF9hY3RpdmUoJmVuZ2luZS0+
ZXhlY2xpc3RzKTsKKwlpZiAoIXJxKQorCQlyZXR1cm4gMDsKKworCXJldHVybiBSRUFEX09OQ0Uo
ZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMpOworfQorCitzdGF0aWMgdm9pZCBzZXRf
cHJlZW1wdF90aW1lb3V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpZiAo
IWludGVsX2VuZ2luZV9oYXNfcHJlZW1wdF9yZXNldChlbmdpbmUpKQorCQlyZXR1cm47CisKKwlz
ZXRfdGltZXJfbXMoJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQsCisJCSAgICAgYWN0aXZlX3By
ZWVtcHRfdGltZW91dChlbmdpbmUpKTsKK30KKwogc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVl
dWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwpAQCAt
MTc0Nyw2ICsxNzY3LDggQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJCW1lbXNldChwb3J0ICsgMSwgMCwgKGxhc3RfcG9y
dCAtIHBvcnQpICogc2l6ZW9mKCpwb3J0KSk7CiAJCWV4ZWNsaXN0c19zdWJtaXRfcG9ydHMoZW5n
aW5lKTsKKworCQlzZXRfcHJlZW1wdF90aW1lb3V0KGVuZ2luZSk7CiAJfSBlbHNlIHsKIHNraXBf
c3VibWl0OgogCQlyaW5nX3NldF9wYXVzZWQoZW5naW5lLCAwKTsKQEAgLTE5ODcsNiArMjAwOSw0
MyBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqY29uc3QgZW5naW5lKQogCX0KIH0KIAorc3RhdGljIG5vaW5saW5lIHZv
aWQgcHJlZW1wdF9yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29u
c3QgdW5zaWduZWQgaW50IGJpdCA9IEk5MTVfUkVTRVRfRU5HSU5FICsgZW5naW5lLT5pZDsKKwl1
bnNpZ25lZCBsb25nICpsb2NrID0gJmVuZ2luZS0+Z3QtPnJlc2V0LmZsYWdzOworCisJaWYgKGk5
MTVfbW9kcGFyYW1zLnJlc2V0IDwgMykKKwkJcmV0dXJuOworCisJaWYgKHRlc3RfYW5kX3NldF9i
aXQoYml0LCBsb2NrKSkKKwkJcmV0dXJuOworCisJLyogTWFyayB0aGlzIHRhc2tsZXQgYXMgZGlz
YWJsZWQgdG8gYXZvaWQgd2FpdGluZyBmb3IgaXQgdG8gY29tcGxldGUgKi8KKwl0YXNrbGV0X2Rp
c2FibGVfbm9zeW5jKCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0KTsKKworCUdFTV9UUkFDRSgi
JXM6IHByZWVtcHQgdGltZW91dCAlbHUrJXVtc1xuIiwKKwkJICBlbmdpbmUtPm5hbWUsCisJCSAg
UkVBRF9PTkNFKGVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zKSwKKwkJICBqaWZmaWVz
X3RvX21zZWNzKGppZmZpZXMgLSBlbmdpbmUtPmV4ZWNsaXN0cy5wcmVlbXB0LmV4cGlyZXMpKTsK
KwlpbnRlbF9lbmdpbmVfcmVzZXQoZW5naW5lLCAicHJlZW1wdGlvbiB0aW1lIG91dCIpOworCisJ
dGFza2xldF9lbmFibGUoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQpOworCWNsZWFyX2FuZF93
YWtlX3VwX2JpdChiaXQsIGxvY2spOworfQorCitzdGF0aWMgYm9vbCBwcmVlbXB0X3RpbWVvdXQo
Y29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqY29uc3QgZW5naW5lKQoreworCWNvbnN0IHN0
cnVjdCB0aW1lcl9saXN0ICp0ID0gJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQ7CisKKwlpZiAo
IUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQpCisJCXJldHVybiBmYWxzZTsKKworCWlm
ICghdGltZXJfZXhwaXJlZCh0KSkKKwkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJuIFJFQURfT05D
RShlbmdpbmUtPmV4ZWNsaXN0cy5wZW5kaW5nWzBdKTsKK30KKwogLyoKICAqIENoZWNrIHRoZSB1
bnJlYWQgQ29udGV4dCBTdGF0dXMgQnVmZmVycyBhbmQgbWFuYWdlIHRoZSBzdWJtaXNzaW9uIG9m
IG5ldwogICogY29udGV4dHMgdG8gdGhlIEVMU1AgYWNjb3JkaW5nbHkuCkBAIC0xOTk0LDIzICsy
MDUzLDM5IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICpjb25zdCBlbmdpbmUpCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNf
c3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIHsKIAlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICogY29uc3QgZW5naW5lID0gKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKilkYXRh
OwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9vbCB0aW1lb3V0ID0gcHJlZW1wdF90aW1lb3V0
KGVuZ2luZSk7CiAKIAlwcm9jZXNzX2NzYihlbmdpbmUpOwotCWlmICghUkVBRF9PTkNFKGVuZ2lu
ZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0pKSB7CisJaWYgKCFSRUFEX09OQ0UoZW5naW5lLT5leGVj
bGlzdHMucGVuZGluZ1swXSkgfHwgdGltZW91dCkgeworCQl1bnNpZ25lZCBsb25nIGZsYWdzOwor
CiAJCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAJCV9f
ZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldChlbmdpbmUpOwogCQlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CisKKwkJLyogUmVjaGVjayBhZnRl
ciBzZXJpYWxpc2luZyB3aXRoIGRpcmVjdC1zdWJtaXNzaW9uICovCisJCWlmICh0aW1lb3V0ICYm
IHByZWVtcHRfdGltZW91dChlbmdpbmUpKQorCQkJcHJlZW1wdF9yZXNldChlbmdpbmUpOwogCX0K
IH0KIAotc3RhdGljIHZvaWQgZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGltZXIoc3RydWN0IHRpbWVy
X2xpc3QgKnRpbWVyKQorc3RhdGljIHZvaWQgX19leGVjbGlzdHNfa2ljayhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQogewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSA9Ci0JCWZyb21fdGltZXIoZW5naW5lLCB0aW1lciwgZXhlY2xpc3RzLnRpbWVyKTsK
LQogCS8qIEtpY2sgdGhlIHRhc2tsZXQgZm9yIHNvbWUgaW50ZXJydXB0IGNvYWxlc2NpbmcgYW5k
IHJlc2V0IGhhbmRsaW5nICovCi0JdGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5lLT5leGVjbGlz
dHMudGFza2xldCk7CisJdGFza2xldF9oaV9zY2hlZHVsZSgmZXhlY2xpc3RzLT50YXNrbGV0KTsK
K30KKworI2RlZmluZSBleGVjbGlzdHNfa2ljayh0LCBtZW1iZXIpIFwKKwlfX2V4ZWNsaXN0c19r
aWNrKGNvbnRhaW5lcl9vZih0LCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cywgbWVtYmVy
KSkKKworc3RhdGljIHZvaWQgZXhlY2xpc3RzX3RpbWVzbGljZShzdHJ1Y3QgdGltZXJfbGlzdCAq
dGltZXIpCit7CisJZXhlY2xpc3RzX2tpY2sodGltZXIsIHRpbWVyKTsKK30KKworc3RhdGljIHZv
aWQgZXhlY2xpc3RzX3ByZWVtcHQoc3RydWN0IHRpbWVyX2xpc3QgKnRpbWVyKQoreworCWV4ZWNs
aXN0c19raWNrKHRpbWVyLCBwcmVlbXB0KTsKIH0KIAogc3RhdGljIHZvaWQgcXVldWVfcmVxdWVz
dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCkBAIC0zNDU1LDYgKzM1MzAsNyBAQCBn
ZW4xMl9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9yY3Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVz
dCwgdTMyICpjcykKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19wYXJrKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIHsKIAljYW5jZWxfdGltZXIoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVy
KTsKKwljYW5jZWxfdGltZXIoJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQpOwogfQogCiB2b2lk
IGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKQEAgLTM1NzIsNyArMzY0OCw4IEBAIGludCBpbnRlbF9leGVjbGlzdHNf
c3VibWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJdGFz
a2xldF9pbml0KCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0LAogCQkgICAgIGV4ZWNsaXN0c19z
dWJtaXNzaW9uX3Rhc2tsZXQsICh1bnNpZ25lZCBsb25nKWVuZ2luZSk7Ci0JdGltZXJfc2V0dXAo
JmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyLCBleGVjbGlzdHNfc3VibWlzc2lvbl90aW1lciwgMCk7
CisJdGltZXJfc2V0dXAoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyLCBleGVjbGlzdHNfdGltZXNs
aWNlLCAwKTsKKwl0aW1lcl9zZXR1cCgmZW5naW5lLT5leGVjbGlzdHMucHJlZW1wdCwgZXhlY2xp
c3RzX3ByZWVtcHQsIDApOwogCiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfdmZ1bmNzKGVuZ2luZSk7
CiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfaXJxcyhlbmdpbmUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9scmMuYwppbmRleCA3NTE2ZDFjOTA5MjUuLmI2MzUyNjcxYzVhMCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKQEAgLTE2OTcsNiArMTY5NywxMDUgQEAg
c3RhdGljIGludCBsaXZlX3ByZWVtcHRfaGFuZyh2b2lkICphcmcpCiAJcmV0dXJuIGVycjsKIH0K
IAorc3RhdGljIGludCBsaXZlX3ByZWVtcHRfdGltZW91dCh2b2lkICphcmcpCit7CisJc3RydWN0
IGludGVsX2d0ICpndCA9IGFyZzsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4X2hpLCAq
Y3R4X2xvOworCXN0cnVjdCBpZ3Rfc3Bpbm5lciBzcGluX2xvOworCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwlpbnQgZXJyID0gLUVO
T01FTTsKKworCS8qCisJICogQ2hlY2sgdGhhdCB3ZSBmb3JjZSBwcmVlbXB0aW9uIHRvIG9jY3Vy
IGJ5IGNhbmNlbGxpbmcgdGhlIHByZXZpb3VzCisJICogY29udGV4dCBpZiBpdCByZWZ1c2VzIHRv
IHlpZWxkIHRoZSBHUFUuCisJICovCisJaWYgKCFDT05GSUdfRFJNX0k5MTVfUFJFRU1QVF9USU1F
T1VUKQorCQlyZXR1cm4gMDsKKworCWlmICghSEFTX0xPR0lDQUxfUklOR19QUkVFTVBUSU9OKGd0
LT5pOTE1KSkKKwkJcmV0dXJuIDA7CisKKwlpZiAoIWludGVsX2hhc19yZXNldF9lbmdpbmUoZ3Qp
KQorCQlyZXR1cm4gMDsKKworCWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZzcGluX2xvLCBndCkpCisJ
CXJldHVybiAtRU5PTUVNOworCisJY3R4X2hpID0ga2VybmVsX2NvbnRleHQoZ3QtPmk5MTUpOwor
CWlmICghY3R4X2hpKQorCQlnb3RvIGVycl9zcGluX2xvOworCWN0eF9oaS0+c2NoZWQucHJpb3Jp
dHkgPQorCQlJOTE1X1VTRVJfUFJJT1JJVFkoSTkxNV9DT05URVhUX01BWF9VU0VSX1BSSU9SSVRZ
KTsKKworCWN0eF9sbyA9IGtlcm5lbF9jb250ZXh0KGd0LT5pOTE1KTsKKwlpZiAoIWN0eF9sbykK
KwkJZ290byBlcnJfY3R4X2hpOworCWN0eF9sby0+c2NoZWQucHJpb3JpdHkgPQorCQlJOTE1X1VT
RVJfUFJJT1JJVFkoSTkxNV9DT05URVhUX01JTl9VU0VSX1BSSU9SSVRZKTsKKworCWZvcl9lYWNo
X2VuZ2luZShlbmdpbmUsIGd0LCBpZCkgeworCQl1bnNpZ25lZCBsb25nIHNhdmVkX3RpbWVvdXQ7
CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJCWlmICghaW50ZWxfZW5naW5lX2hhc19w
cmVlbXB0aW9uKGVuZ2luZSkpCisJCQljb250aW51ZTsKKworCQlycSA9IHNwaW5uZXJfY3JlYXRl
X3JlcXVlc3QoJnNwaW5fbG8sIGN0eF9sbywgZW5naW5lLAorCQkJCQkgICAgTUlfTk9PUCk7IC8q
IHByZWVtcHRpb24gZGlzYWJsZWQgKi8KKwkJaWYgKElTX0VSUihycSkpIHsKKwkJCWVyciA9IFBU
Ul9FUlIocnEpOworCQkJZ290byBlcnJfY3R4X2xvOworCQl9CisKKwkJaTkxNV9yZXF1ZXN0X2Fk
ZChycSk7CisJCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJnNwaW5fbG8sIHJxKSkgeworCQkJ
aW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7CisJCQllcnIgPSAtRUlPOworCQkJZ290byBlcnJfY3R4
X2xvOworCQl9CisKKwkJcnEgPSBpZ3RfcmVxdWVzdF9hbGxvYyhjdHhfaGksIGVuZ2luZSk7CisJ
CWlmIChJU19FUlIocnEpKSB7CisJCQlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW5fbG8pOworCQkJZXJy
ID0gUFRSX0VSUihycSk7CisJCQlnb3RvIGVycl9jdHhfbG87CisJCX0KKworCQkvKiBGbHVzaCB0
aGUgcHJldmlvdXMgQ1MgYWNrIGJlZm9yZSBjaGFuZ2luZyB0aW1lb3V0cyAqLworCQl3aGlsZSAo
UkVBRF9PTkNFKGVuZ2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0pKQorCQkJY3B1X3JlbGF4KCk7
CisKKwkJc2F2ZWRfdGltZW91dCA9IGVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zOwor
CQllbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tcyA9IDE7IC8qIGluIG1zLCAtPiAxIGpp
ZmZpZSAqLworCisJCWk5MTVfcmVxdWVzdF9nZXQocnEpOworCQlpOTE1X3JlcXVlc3RfYWRkKHJx
KTsKKworCQlpbnRlbF9lbmdpbmVfZmx1c2hfc3VibWlzc2lvbihlbmdpbmUpOworCQllbmdpbmUt
PnByb3BzLnByZWVtcHRfdGltZW91dF9tcyA9IHNhdmVkX3RpbWVvdXQ7CisKKwkJaWYgKGk5MTVf
cmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDEwKSA8IDApIHsKKwkJCWludGVsX2d0X3NldF93ZWRn
ZWQoZ3QpOworCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisJCQllcnIgPSAtRVRJTUU7CisJCQln
b3RvIGVycl9jdHhfbG87CisJCX0KKworCQlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW5fbG8pOworCQlp
OTE1X3JlcXVlc3RfcHV0KHJxKTsKKwl9CisKKwllcnIgPSAwOworZXJyX2N0eF9sbzoKKwlrZXJu
ZWxfY29udGV4dF9jbG9zZShjdHhfbG8pOworZXJyX2N0eF9oaToKKwlrZXJuZWxfY29udGV4dF9j
bG9zZShjdHhfaGkpOworZXJyX3NwaW5fbG86CisJaWd0X3NwaW5uZXJfZmluaSgmc3Bpbl9sbyk7
CisJcmV0dXJuIGVycjsKK30KKwogc3RhdGljIGludCByYW5kb21fcmFuZ2Uoc3RydWN0IHJuZF9z
dGF0ZSAqcm5kLCBpbnQgbWluLCBpbnQgbWF4KQogewogCXJldHVybiBpOTE1X3ByYW5kb21fdTMy
X21heF9zdGF0ZShtYXggLSBtaW4sIHJuZCkgKyBtaW47CkBAIC0yNTk4LDYgKzI2OTcsNyBAQCBp
bnQgaW50ZWxfZXhlY2xpc3RzX2xpdmVfc2VsZnRlc3RzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1KQogCQlTVUJURVNUKGxpdmVfc3VwcHJlc3Nfd2FpdF9wcmVlbXB0KSwKIAkJU1VCVEVT
VChsaXZlX2NoYWluX3ByZWVtcHQpLAogCQlTVUJURVNUKGxpdmVfcHJlZW1wdF9oYW5nKSwKKwkJ
U1VCVEVTVChsaXZlX3ByZWVtcHRfdGltZW91dCksCiAJCVNVQlRFU1QobGl2ZV9wcmVlbXB0X3Nt
b2tlKSwKIAkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfZW5naW5lKSwKIAkJU1VCVEVTVChsaXZlX3Zp
cnR1YWxfbWFzayksCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAppbmRleCAyMDExZjhlOWE5ZjEuLmY2
Zjk2NzU4NDhiOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oCkBAIC0xMTIsMTggKzExMiw0IEBA
IHN0YXRpYyBpbmxpbmUgYm9vbCBfX3Rhc2tsZXRfaXNfc2NoZWR1bGVkKHN0cnVjdCB0YXNrbGV0
X3N0cnVjdCAqdCkKIAlyZXR1cm4gdGVzdF9iaXQoVEFTS0xFVF9TVEFURV9TQ0hFRCwgJnQtPnN0
YXRlKTsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIGNhbmNlbF90aW1lcihzdHJ1Y3QgdGltZXJf
bGlzdCAqdCkKLXsKLQlpZiAoIVJFQURfT05DRSh0LT5leHBpcmVzKSkKLQkJcmV0dXJuOwotCi0J
ZGVsX3RpbWVyKHQpOwotCVdSSVRFX09OQ0UodC0+ZXhwaXJlcywgMCk7Ci19Ci0KLXN0YXRpYyBp
bmxpbmUgYm9vbCB0aW1lcl9leHBpcmVkKGNvbnN0IHN0cnVjdCB0aW1lcl9saXN0ICp0KQotewot
CXJldHVybiBSRUFEX09OQ0UodC0+ZXhwaXJlcykgJiYgIXRpbWVyX3BlbmRpbmcodCk7Ci19Ci0K
ICNlbmRpZiAvKiBfX0k5MTVfR0VNX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9wYXJhbXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmgK
aW5kZXggZDI5YWRlM2I3ZGU2Li41NjA1ODk3OGJiMjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcGFyYW1zLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9w
YXJhbXMuaApAQCAtNjEsNyArNjEsNyBAQCBzdHJ1Y3QgZHJtX3ByaW50ZXI7CiAJcGFyYW0oY2hh
ciAqLCBkbWNfZmlybXdhcmVfcGF0aCwgTlVMTCkgXAogCXBhcmFtKGludCwgbW1pb19kZWJ1Zywg
LUlTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHX01NSU8pKSBcCiAJcGFyYW0oaW50LCBl
ZHBfdnN3aW5nLCAwKSBcCi0JcGFyYW0oaW50LCByZXNldCwgMikgXAorCXBhcmFtKGludCwgcmVz
ZXQsIDMpIFwKIAlwYXJhbSh1bnNpZ25lZCBpbnQsIGluamVjdF9sb2FkX2ZhaWx1cmUsIDApIFwK
IAlwYXJhbShpbnQsIGZhc3Rib290LCAtMSkgXAogCXBhcmFtKGludCwgZW5hYmxlX2RwY2RfYmFj
a2xpZ2h0LCAwKSBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxz
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmMKaW5kZXggMTZhY2RmN2JkYmU2
Li4wMmU5NjliNjQ1MDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRp
bHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmMKQEAgLTc2LDMgKzc2
LDMyIEBAIGJvb2wgaTkxNV9lcnJvcl9pbmplY3RlZCh2b2lkKQogfQogCiAjZW5kaWYKKwordm9p
ZCBjYW5jZWxfdGltZXIoc3RydWN0IHRpbWVyX2xpc3QgKnQpCit7CisJaWYgKCFSRUFEX09OQ0Uo
dC0+ZXhwaXJlcykpCisJCXJldHVybjsKKworCWRlbF90aW1lcih0KTsKKwlXUklURV9PTkNFKHQt
PmV4cGlyZXMsIDApOworfQorCit2b2lkIHNldF90aW1lcl9tcyhzdHJ1Y3QgdGltZXJfbGlzdCAq
dCwgdW5zaWduZWQgbG9uZyB0aW1lb3V0KQoreworCWlmICghdGltZW91dCkgeworCQljYW5jZWxf
dGltZXIodCk7CisJCXJldHVybjsKKwl9CisKKwl0aW1lb3V0ID0gbXNlY3NfdG9famlmZmllc190
aW1lb3V0KHRpbWVvdXQpOworCisJLyoKKwkgKiBQYXJhbm9pYSB0byBtYWtlIHN1cmUgdGhlIGNv
bXBpbGVyIGNvbXB1dGVzIHRoZSB0aW1lb3V0IGJlZm9yZQorCSAqIGxvYWRpbmcgJ2ppZmZpZXMn
IGFzIGppZmZpZXMgaXMgdm9sYXRpbGUgYW5kIG1heSBiZSB1cGRhdGVkIGluCisJICogdGhlIGJh
Y2tncm91bmQgYnkgYSB0aW1lciB0aWNrLiBBbGwgdG8gcmVkdWNlIHRoZSBjb21wbGV4aXR5CisJ
ICogb2YgdGhlIGFkZGl0aW9uIGFuZCByZWR1Y2UgdGhlIHJpc2sgb2YgbG9zaW5nIGEgamlmZmll
LgorCSAqLworCWJhcnJpZXIoKTsKKworCW1vZF90aW1lcih0LCBqaWZmaWVzICsgdGltZW91dCk7
Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKaW5kZXggNTYyZjc1NmRhNDIxLi45NGYxMzZk
OGE1ZmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKQEAgLTMyLDYgKzMyLDcgQEAKICNp
bmNsdWRlIDxsaW51eC93b3JrcXVldWUuaD4KIAogc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7Citz
dHJ1Y3QgdGltZXJfbGlzdDsKIAogI3VuZGVmIFdBUk5fT04KIC8qIE1hbnkgZ2NjIHNlZW0gdG8g
bm8gc2VlIHRocm91Z2ggdGhpcyBhbmQgZmFsbCBvdmVyIDooICovCkBAIC00MjEsNCArNDIyLDEy
IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBhZGRfdGFpbnRfZm9yX0NJKHVuc2lnbmVkIGludCB0YWlu
dCkKIAlhZGRfdGFpbnQodGFpbnQsIExPQ0tERVBfU1RJTExfT0spOwogfQogCit2b2lkIGNhbmNl
bF90aW1lcihzdHJ1Y3QgdGltZXJfbGlzdCAqdCk7Cit2b2lkIHNldF90aW1lcl9tcyhzdHJ1Y3Qg
dGltZXJfbGlzdCAqdCwgdW5zaWduZWQgbG9uZyB0aW1lb3V0KTsKKworc3RhdGljIGlubGluZSBi
b29sIHRpbWVyX2V4cGlyZWQoY29uc3Qgc3RydWN0IHRpbWVyX2xpc3QgKnQpCit7CisJcmV0dXJu
IFJFQURfT05DRSh0LT5leHBpcmVzKSAmJiAhdGltZXJfcGVuZGluZyh0KTsKK30KKwogI2VuZGlm
IC8qICFfX0k5MTVfVVRJTFNfSCAqLwotLSAKMi4yNC4wLnJjMAoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRl
bC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

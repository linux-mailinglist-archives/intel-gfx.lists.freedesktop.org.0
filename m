Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 17FAB3025E5
	for <lists+intel-gfx@lfdr.de>; Mon, 25 Jan 2021 15:02:36 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 37CAF89CE3;
	Mon, 25 Jan 2021 14:02:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (unknown [77.68.26.236])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6998689D8E
 for <intel-gfx@lists.freedesktop.org>; Mon, 25 Jan 2021 14:02:05 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from build.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 23693642-1500050 
 for multiple; Mon, 25 Jan 2021 14:01:39 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 25 Jan 2021 14:01:15 +0000
Message-Id: <20210125140136.10494-20-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20210125140136.10494-1-chris@chris-wilson.co.uk>
References: <20210125140136.10494-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 20/41] drm/i915: Replace priolist rbtree with a
 skiplist
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: thomas.hellstrom@intel.com, Chris Wilson <chris@chris-wilson.co.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UmVwbGFjZSB0aGUgcHJpb2xpc3QgcmJ0cmVlIHdpdGggYSBza2lwbGlzdC4gVGhlIGNydWNpYWwg
ZGlmZmVyZW5jZSBpcwp0aGF0IHdhbGtpbmcgYW5kIHJlbW92aW5nIHRoZSBmaXJzdCBlbGVtZW50
IG9mIGEgc2tpcGxpc3QgaXMgTygxKSwgYnV0Ck8obGdOKSBmb3IgYW4gcmJ0cmVlLCBhcyB3ZSBu
ZWVkIHRvIHJlYmFsYW5jZSBvbiByZW1vdmUuIFRoaXMgaXMgYQpoaW5kcmFuY2UgZm9yIHN1Ym1p
c3Npb24gbGF0ZW5jeSBhcyBpdCBvY2N1cnMgYmV0d2VlbiBwaWNraW5nIGEgcmVxdWVzdApmb3Ig
dGhlIHByaW9saXN0IGFuZCBzdWJtaXR0aW5nIGl0IHRvIGhhcmR3YXJlLCBhcyB3ZWxsIGVmZmVj
dGl2ZWx5CnRyaXBwbGluZyB0aGUgbnVtYmVyIG9mIE8obGdOKSBvcGVyYXRpb25zIHJlcXVpcmVk
IHVuZGVyIHRoZSBpcnFvZmYgbG9jay4KVGhpcyBpcyBjcml0aWNhbCB0byByZWR1Y2luZyB0aGUg
bGF0ZW5jeSBqaXR0ZXIgd2l0aCBtdWx0aXBsZSBjbGllbnRzLgoKVGhlIGRvd25zaWRlcyB0byBz
a2lwbGlzdHMgYXJlIHRoYXQgbG9va3VwL2luc2VydGlvbiBpcyBvbmx5CnByb2JhYmxpc3RpY2Fs
bHkgTyhsZ04pIGFuZCB0aGVyZSBpcyBhIHNpZ25pZmljYW50IG1lbW9yeSBwZW5hbHR5IHRvCmFz
IGVhY2ggc2tpcCBub2RlIGlzIGxhcmdlciB0aGFuIHRoZSByYnRyZWUgZXF1aXZhbGVudC4gRnVy
dGhlcm1vcmUsIHdlCmRvbid0IHVzZSBkeW5hbWljIGFycmF5cyBmb3IgdGhlIHNraXBsaXN0LCBz
byB0aGUgYWxsb2NhdGlvbiBpcyBmaXhlZCwKYW5kIGltcG9zZXMgYW4gdXBwZXIgYm91bmQgb24g
dGhlIHNjYWxhYmlsaXR5IHdydCB0byB0aGUgbnVtYmVyIG9mCmluZmxpZ2h0IHJlcXVlc3RzLgoK
U2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0t
LQogLi4uL2RybS9pOTE1L2d0L2ludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uLmMgIHwgIDYzICsr
Ky0tCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMgfCAgMzAg
Ky0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ByaW9saXN0X3R5cGVzLmggICAgfCAgMjgg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgICAgICAgICB8IDI0NCAr
KysrKysrKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmgg
ICAgICAgICB8ICAxMSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJfdHlw
ZXMuaCAgIHwgICAyICstCiAuLi4vZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbW9ja19zZWxmdGVz
dHMuaCAgfCAgIDEgKwogLi4uL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9zY2hlZHVsZXIu
YyAgIHwgIDUzICsrKy0KIDggZmlsZXMgY2hhbmdlZCwgMzE2IGluc2VydGlvbnMoKyksIDExNiBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
eGVjbGlzdHNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhl
Y2xpc3RzX3N1Ym1pc3Npb24uYwppbmRleCAxMTAzYzhhMDBhZjEuLjEyOTE0NGRkODZiMCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Np
b24uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlz
c2lvbi5jCkBAIC0yNDQsMTEgKzI0NCw2IEBAIHN0YXRpYyB2b2lkIHJpbmdfc2V0X3BhdXNlZChj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGludCBzdGF0ZSkKIAkJd21iKCk7
CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdG9fcHJpb2xpc3Qoc3RydWN0IHJi
X25vZGUgKnJiKQotewotCXJldHVybiByYl9lbnRyeShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3Qs
IG5vZGUpOwotfQotCiBzdGF0aWMgaW50IHJxX3ByaW8oY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEpCiB7CiAJcmV0dXJuIFJFQURfT05DRShycS0+c2NoZWQuYXR0ci5wcmlvcml0eSk7CkBA
IC0yNzIsMTUgKzI2NywzMSBAQCBzdGF0aWMgaW50IGVmZmVjdGl2ZV9wcmlvKGNvbnN0IHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCXJldHVybiBwcmlvOwogfQogCi1zdGF0aWMgaW50IHF1ZXVl
X3ByaW8oY29uc3Qgc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzZSkKK3N0YXRpYyBzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpmaXJzdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2Up
CiB7Ci0Jc3RydWN0IHJiX25vZGUgKnJiOworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwbDsKIAot
CXJiID0gcmJfZmlyc3RfY2FjaGVkKCZzZS0+cXVldWUpOwotCWlmICghcmIpCisJZm9yX2VhY2hf
cHJpb2xpc3QocGwsICZzZS0+cXVldWUpIHsKKwkJaWYgKGxpa2VseSghbGlzdF9lbXB0eSgmcGwt
PnJlcXVlc3RzKSkpCisJCQlyZXR1cm4gbGlzdF9maXJzdF9lbnRyeSgmcGwtPnJlcXVlc3RzLAor
CQkJCQkJc3RydWN0IGk5MTVfcmVxdWVzdCwKKwkJCQkJCXNjaGVkLmxpbmspOworCisJCWk5MTVf
cHJpb2xpc3RfYWR2YW5jZSgmc2UtPnF1ZXVlLCBwbCk7CisJfQorCisJcmV0dXJuIE5VTEw7Cit9
CisKK3N0YXRpYyBpbnQgcXVldWVfcHJpbyhzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNlKQor
eworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJcnEgPSBmaXJzdF9yZXF1ZXN0KHNlKTsK
KwlpZiAoIXJxKQogCQlyZXR1cm4gSU5UX01JTjsKIAotCXJldHVybiB0b19wcmlvbGlzdChyYikt
PnByaW9yaXR5OworCXJldHVybiBycV9wcmlvKHJxKTsKIH0KIAogc3RhdGljIGludCB2aXJ0dWFs
X3ByaW8oY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmVsKQpAQCAtMjkwLDcg
KzMwMSw3IEBAIHN0YXRpYyBpbnQgdmlydHVhbF9wcmlvKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfZXhlY2xpc3RzICplbCkKIAlyZXR1cm4gcmIgPyByYl9lbnRyeShyYiwgc3RydWN0IHZlX25v
ZGUsIHJiKS0+cHJpbyA6IElOVF9NSU47CiB9CiAKLXN0YXRpYyBib29sIG5lZWRfcHJlZW1wdChj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCitzdGF0aWMgYm9vbCBuZWVkX3By
ZWVtcHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJIGNvbnN0IHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKQogewogCWludCBsYXN0X3ByaW87CkBAIC0xMTM2LDYgKzExNDcsNyBA
QCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqKiBjb25zdCBsYXN0X3BvcnQgPSBwb3J0ICsg
ZXhlY2xpc3RzLT5wb3J0X21hc2s7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdCwgKiBjb25z
dCAqYWN0aXZlOwogCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmU7CisJc3RydWN0IGk5MTVfcHJp
b2xpc3QgKnBsOwogCXN0cnVjdCByYl9ub2RlICpyYjsKIAlib29sIHN1Ym1pdCA9IGZhbHNlOwog
CkBAIC0xMzQ2LDExICsxMzU4LDEwIEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1ZXVlKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCWJyZWFrOwogCX0KIAotCXdoaWxlICgo
cmIgPSByYl9maXJzdF9jYWNoZWQoJmVuZ2luZS0+YWN0aXZlLnF1ZXVlKSkpIHsKLQkJc3RydWN0
IGk5MTVfcHJpb2xpc3QgKnAgPSB0b19wcmlvbGlzdChyYik7CisJZm9yX2VhY2hfcHJpb2xpc3Qo
cGwsICZlbmdpbmUtPmFjdGl2ZS5xdWV1ZSkgewogCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwg
KnJuOwogCi0JCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3RfY29uc3VtZShycSwgcm4sIHApIHsK
KwkJcHJpb2xpc3RfZm9yX2VhY2hfcmVxdWVzdF9zYWZlKHJxLCBybiwgcGwpIHsKIAkJCWJvb2wg
bWVyZ2UgPSB0cnVlOwogCiAJCQkvKgpAQCAtMTQyNSw4ICsxNDM2LDcgQEAgc3RhdGljIHZvaWQg
ZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJfQog
CQl9CiAKLQkJcmJfZXJhc2VfY2FjaGVkKCZwLT5ub2RlLCAmZW5naW5lLT5hY3RpdmUucXVldWUp
OwotCQlpOTE1X3ByaW9saXN0X2ZyZWUocCk7CisJCWk5MTVfcHJpb2xpc3RfYWR2YW5jZSgmZW5n
aW5lLT5hY3RpdmUucXVldWUsIHBsKTsKIAl9CiBkb25lOgogCSpwb3J0KysgPSBpOTE1X3JlcXVl
c3RfZ2V0KGxhc3QpOwpAQCAtMjYzMSw2ICsyNjQxLDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3Rz
X3Jlc2V0X2NhbmNlbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0
IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVj
bGlzdHM7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKKwlzdHJ1Y3QgaTkxNV9wcmlv
bGlzdCAqcGw7CiAJc3RydWN0IHJiX25vZGUgKnJiOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAK
QEAgLTI2NjEsMTYgKzI2NzIsMTIgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX3Jlc2V0X2NhbmNl
bChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJaW50ZWxfZW5naW5lX3NpZ25hbF9i
cmVhZGNydW1icyhlbmdpbmUpOwogCiAJLyogRmx1c2ggdGhlIHF1ZXVlZCByZXF1ZXN0cyB0byB0
aGUgdGltZWxpbmUgbGlzdCAoZm9yIHJldGlyaW5nKS4gKi8KLQl3aGlsZSAoKHJiID0gcmJfZmly
c3RfY2FjaGVkKCZlbmdpbmUtPmFjdGl2ZS5xdWV1ZSkpKSB7Ci0JCXN0cnVjdCBpOTE1X3ByaW9s
aXN0ICpwID0gdG9fcHJpb2xpc3QocmIpOwotCi0JCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3Rf
Y29uc3VtZShycSwgcm4sIHApIHsKKwlmb3JfZWFjaF9wcmlvbGlzdChwbCwgJmVuZ2luZS0+YWN0
aXZlLnF1ZXVlKSB7CisJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3Rfc2FmZShycSwgcm4sIHBs
KSB7CiAJCQlpOTE1X3JlcXVlc3RfbWFya19laW8ocnEpOwogCQkJX19pOTE1X3JlcXVlc3Rfc3Vi
bWl0KHJxKTsKIAkJfQotCi0JCXJiX2VyYXNlX2NhY2hlZCgmcC0+bm9kZSwgJmVuZ2luZS0+YWN0
aXZlLnF1ZXVlKTsKLQkJaTkxNV9wcmlvbGlzdF9mcmVlKHApOworCQlpOTE1X3ByaW9saXN0X2Fk
dmFuY2UoJmVuZ2luZS0+YWN0aXZlLnF1ZXVlLCBwbCk7CiAJfQogCUdFTV9CVUdfT04oIWk5MTVf
c2NoZWRfaXNfaWRsZSgmZW5naW5lLT5hY3RpdmUpKTsKIApAQCAtMjcwMyw3ICsyNzEwLDYgQEAg
c3RhdGljIHZvaWQgZXhlY2xpc3RzX3Jlc2V0X2NhbmNlbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiAJLyogUmVtYWluaW5nIF91bnJlYWR5XyByZXF1ZXN0cyB3aWxsIGJlIG5vcCdl
ZCB3aGVuIHN1Ym1pdHRlZCAqLwogCiAJZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50ID0g
SU5UX01JTjsKLQllbmdpbmUtPmFjdGl2ZS5xdWV1ZSA9IFJCX1JPT1RfQ0FDSEVEOwogCiAJR0VN
X0JVR19PTihfX3Rhc2tsZXRfaXNfZW5hYmxlZCgmZW5naW5lLT5hY3RpdmUudGFza2xldCkpOwog
CWVuZ2luZS0+YWN0aXZlLnRhc2tsZXQuZnVuYyA9IG5vcF9zdWJtaXNzaW9uX3Rhc2tsZXQ7CkBA
IC0zMDg5LDYgKzMwOTUsOCBAQCBzdGF0aWMgdm9pZCB2aXJ0dWFsX2NvbnRleHRfZXhpdChzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAKIAlmb3IgKG4gPSAwOyBuIDwgdmUtPm51bV9zaWJsaW5n
czsgbisrKQogCQlpbnRlbF9lbmdpbmVfcG1fcHV0KHZlLT5zaWJsaW5nc1tuXSk7CisKKwlpOTE1
X3NjaGVkX3BhcmtfZW5naW5lKCZ2ZS0+YmFzZS5hY3RpdmUpOwogfQogCiBzdGF0aWMgY29uc3Qg
c3RydWN0IGludGVsX2NvbnRleHRfb3BzIHZpcnR1YWxfY29udGV4dF9vcHMgPSB7CkBAIC0zNTAx
LDYgKzM1MDksNyBAQCB2b2lkIGludGVsX2V4ZWNsaXN0c19zaG93X3JlcXVlc3RzKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIHsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwogCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxLCAqbGFzdDsKKwlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcGw7CiAJdW5zaWduZWQg
bG9uZyBmbGFnczsKIAl1bnNpZ25lZCBpbnQgY291bnQ7CiAJc3RydWN0IHJiX25vZGUgKnJiOwpA
QCAtMzUzMCwxMCArMzUzOSw4IEBAIHZvaWQgaW50ZWxfZXhlY2xpc3RzX3Nob3dfcmVxdWVzdHMo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCiAJbGFzdCA9IE5VTEw7CiAJY291bnQg
PSAwOwotCWZvciAocmIgPSByYl9maXJzdF9jYWNoZWQoJmVuZ2luZS0+YWN0aXZlLnF1ZXVlKTsg
cmI7IHJiID0gcmJfbmV4dChyYikpIHsKLQkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnAgPSByYl9l
bnRyeShyYiwgdHlwZW9mKCpwKSwgbm9kZSk7Ci0KLQkJcHJpb2xpc3RfZm9yX2VhY2hfcmVxdWVz
dChycSwgcCkgeworCWZvcl9lYWNoX3ByaW9saXN0KHBsLCAmZW5naW5lLT5hY3RpdmUucXVldWUp
IHsKKwkJcHJpb2xpc3RfZm9yX2VhY2hfcmVxdWVzdChycSwgcGwpIHsKIAkJCWlmIChjb3VudCsr
IDwgbWF4IC0gMSkKIAkJCQlzaG93X3JlcXVlc3QobSwgcnEsICJcdFx0IiwgMCk7CiAJCQllbHNl
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlz
c2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24u
YwppbmRleCAyZDczMzllZjNiNGMuLjhkMGM2Y2QyNzdiMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCkBAIC01OSwxMSArNTksNiBA
QAogCiAjZGVmaW5lIEdVQ19SRVFVRVNUX1NJWkUgNjQgLyogYnl0ZXMgKi8KIAotc3RhdGljIGlu
bGluZSBzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdG9fcHJpb2xpc3Qoc3RydWN0IHJiX25vZGUgKnJi
KQotewotCXJldHVybiByYl9lbnRyeShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3QsIG5vZGUpOwot
fQotCiBzdGF0aWMgc3RydWN0IGd1Y19zdGFnZV9kZXNjICpfX2dldF9zdGFnZV9kZXNjKHN0cnVj
dCBpbnRlbF9ndWMgKmd1YywgdTMyIGlkKQogewogCXN0cnVjdCBndWNfc3RhZ2VfZGVzYyAqYmFz
ZSA9IGd1Yy0+c3RhZ2VfZGVzY19wb29sX3ZhZGRyOwpAQCAtMTg1LDggKzE4MCw4IEBAIHN0YXRp
YyB2b2lkIF9fZ3VjX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXN0
cnVjdCBpOTE1X3JlcXVlc3QgKiogY29uc3QgbGFzdF9wb3J0ID0gZmlyc3QgKyBleGVjbGlzdHMt
PnBvcnRfbWFzazsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpsYXN0ID0gZmlyc3RbMF07CiAJc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqKnBvcnQ7CisJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnBsOwogCWJv
b2wgc3VibWl0ID0gZmFsc2U7Ci0Jc3RydWN0IHJiX25vZGUgKnJiOwogCiAJbG9ja2RlcF9hc3Nl
cnRfaGVsZCgmZW5naW5lLT5hY3RpdmUubG9jayk7CiAKQEAgLTIwMywxMSArMTk4LDEwIEBAIHN0
YXRpYyB2b2lkIF9fZ3VjX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CSAqIGV2ZW50LgogCSAqLwogCXBvcnQgPSBmaXJzdDsKLQl3aGlsZSAoKHJiID0gcmJfZmlyc3Rf
Y2FjaGVkKCZlbmdpbmUtPmFjdGl2ZS5xdWV1ZSkpKSB7Ci0JCXN0cnVjdCBpOTE1X3ByaW9saXN0
ICpwID0gdG9fcHJpb2xpc3QocmIpOworCWZvcl9lYWNoX3ByaW9saXN0KHBsLCAmZW5naW5lLT5h
Y3RpdmUucXVldWUpIHsKIAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKIAotCQlwcmlv
bGlzdF9mb3JfZWFjaF9yZXF1ZXN0X2NvbnN1bWUocnEsIHJuLCBwKSB7CisJCXByaW9saXN0X2Zv
cl9lYWNoX3JlcXVlc3Rfc2FmZShycSwgcm4sIHBsKSB7CiAJCQlpZiAobGFzdCAmJiBycS0+Y29u
dGV4dCAhPSBsYXN0LT5jb250ZXh0KSB7CiAJCQkJaWYgKHBvcnQgPT0gbGFzdF9wb3J0KQogCQkJ
CQlnb3RvIGRvbmU7CkBAIC0yMjMsMTIgKzIxNywxMSBAQCBzdGF0aWMgdm9pZCBfX2d1Y19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCWxhc3QgPSBycTsKIAkJfQog
Ci0JCXJiX2VyYXNlX2NhY2hlZCgmcC0+bm9kZSwgJmVuZ2luZS0+YWN0aXZlLnF1ZXVlKTsKLQkJ
aTkxNV9wcmlvbGlzdF9mcmVlKHApOworCQlpOTE1X3ByaW9saXN0X2FkdmFuY2UoJmVuZ2luZS0+
YWN0aXZlLnF1ZXVlLCBwbCk7CiAJfQogZG9uZToKIAlleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5
X2hpbnQgPQotCQlyYiA/IHRvX3ByaW9saXN0KHJiKS0+cHJpb3JpdHkgOiBJTlRfTUlOOworCQlw
bCAhPSAmZW5naW5lLT5hY3RpdmUucXVldWUuc2VudGluZWwgPyBwbC0+cHJpb3JpdHkgOiBJTlRf
TUlOOwogCWlmIChzdWJtaXQpIHsKIAkJKnBvcnQgPSBzY2hlZHVsZV9pbihsYXN0LCBwb3J0IC0g
ZXhlY2xpc3RzLT5pbmZsaWdodCk7CiAJCSorK3BvcnQgPSBOVUxMOwpAQCAtMzI3LDcgKzMyMCw3
IEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9jYW5jZWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xp
c3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47
Ci0Jc3RydWN0IHJiX25vZGUgKnJiOworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwOwogCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CiAKIAlFTkdJTkVfVFJBQ0UoZW5naW5lLCAiXG4iKTsKQEAgLTM1NSwy
NSArMzQ4LDIwIEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9jYW5jZWwoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogCX0KIAogCS8qIEZsdXNoIHRoZSBxdWV1ZWQgcmVxdWVzdHMgdG8g
dGhlIHRpbWVsaW5lIGxpc3QgKGZvciByZXRpcmluZykuICovCi0Jd2hpbGUgKChyYiA9IHJiX2Zp
cnN0X2NhY2hlZCgmZW5naW5lLT5hY3RpdmUucXVldWUpKSkgewotCQlzdHJ1Y3QgaTkxNV9wcmlv
bGlzdCAqcCA9IHRvX3ByaW9saXN0KHJiKTsKLQotCQlwcmlvbGlzdF9mb3JfZWFjaF9yZXF1ZXN0
X2NvbnN1bWUocnEsIHJuLCBwKSB7CisJZm9yX2VhY2hfcHJpb2xpc3QocCwgJmVuZ2luZS0+YWN0
aXZlLnF1ZXVlKSB7CisJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3Rfc2FmZShycSwgcm4sIHAp
IHsKIAkJCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5saW5rKTsKIAkJCV9faTkxNV9yZXF1ZXN0
X3N1Ym1pdChycSk7CiAJCQlkbWFfZmVuY2Vfc2V0X2Vycm9yKCZycS0+ZmVuY2UsIC1FSU8pOwog
CQkJaTkxNV9yZXF1ZXN0X21hcmtfY29tcGxldGUocnEpOwogCQl9Ci0KLQkJcmJfZXJhc2VfY2Fj
aGVkKCZwLT5ub2RlLCAmZW5naW5lLT5hY3RpdmUucXVldWUpOwotCQlpOTE1X3ByaW9saXN0X2Zy
ZWUocCk7CisJCWk5MTVfcHJpb2xpc3RfYWR2YW5jZSgmZW5naW5lLT5hY3RpdmUucXVldWUsIHAp
OwogCX0KIAlHRU1fQlVHX09OKCFpOTE1X3NjaGVkX2lzX2lkbGUoJmVuZ2luZS0+YWN0aXZlKSk7
CiAKIAkvKiBSZW1haW5pbmcgX3VucmVhZHlfIHJlcXVlc3RzIHdpbGwgYmUgbm9wJ2VkIHdoZW4g
c3VibWl0dGVkICovCiAKIAlleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlO
OwotCWVuZ2luZS0+YWN0aXZlLnF1ZXVlID0gUkJfUk9PVF9DQUNIRUQ7CiAKIAlzcGluX3VubG9j
a19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ByaW9saXN0X3R5cGVzLmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3ByaW9saXN0X3R5cGVzLmgKaW5kZXggYmMyZmE4NGY5OGE4Li4xMjAw
YzNkZjZhNGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcHJpb2xpc3Rf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ByaW9saXN0X3R5cGVzLmgK
QEAgLTM4LDEwICszOCwzNiBAQCBlbnVtIHsKICNkZWZpbmUgSTkxNV9QUklPUklUWV9VTlBSRUVN
UFRBQkxFIElOVF9NQVgKICNkZWZpbmUgSTkxNV9QUklPUklUWV9CQVJSSUVSIChJOTE1X1BSSU9S
SVRZX1VOUFJFRU1QVEFCTEUgLSAxKQogCisjaWZkZWYgQ09ORklHXzY0QklUCisjZGVmaW5lIEk5
MTVfUFJJT0xJU1RfSEVJR0hUIDEyCisjZWxzZQorI2RlZmluZSBJOTE1X1BSSU9MSVNUX0hFSUdI
VCAxMQorI2VuZGlmCisKIHN0cnVjdCBpOTE1X3ByaW9saXN0IHsKIAlzdHJ1Y3QgbGlzdF9oZWFk
IHJlcXVlc3RzOwotCXN0cnVjdCByYl9ub2RlIG5vZGU7CiAJaW50IHByaW9yaXR5OworCisJaW50
IGxldmVsOworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpuZXh0W0k5MTVfUFJJT0xJU1RfSEVJR0hU
XTsKIH07CiAKK3N0cnVjdCBpOTE1X3ByaW9saXN0X3Jvb3QgeworCXN0cnVjdCBpOTE1X3ByaW9s
aXN0IHNlbnRpbmVsOworCXUzMiBwcm5nOworfTsKKworI2RlZmluZSBpOTE1X3ByaW9saXN0X2lz
X2VtcHR5KHJvb3QpICgocm9vdCktPnNlbnRpbmVsLmxldmVsIDwgMCkKKworI2RlZmluZSBmb3Jf
ZWFjaF9wcmlvbGlzdChwLCByb290KSBcCisJZm9yICgocCkgPSAocm9vdCktPnNlbnRpbmVsLm5l
eHRbMF07IFwKKwkgICAgIChwKSAhPSAmKHJvb3QpLT5zZW50aW5lbDsgXAorCSAgICAgKHApID0g
KHApLT5uZXh0WzBdKQorCisjZGVmaW5lIHByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3QoaXQsIHBs
aXN0KSBcCisJbGlzdF9mb3JfZWFjaF9lbnRyeShpdCwgJihwbGlzdCktPnJlcXVlc3RzLCBzY2hl
ZC5saW5rKQorCisjZGVmaW5lIHByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3Rfc2FmZShpdCwgbiwg
cGxpc3QpIFwKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoaXQsIG4sICYocGxpc3QpLT5yZXF1
ZXN0cywgc2NoZWQubGluaykKKwogI2VuZGlmIC8qIF9JOTE1X1BSSU9MSVNUX1RZUEVTX0hfICov
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwppbmRleCBhM2VlMDZjYjY2ZDcuLjc0
MDAwZDNlZWJiMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVs
ZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCkBAIC00LDcg
KzQsOSBAQAogICogQ29weXJpZ2h0IMKpIDIwMTggSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCisj
aW5jbHVkZSA8bGludXgvYml0b3BzLmg+CiAjaW5jbHVkZSA8bGludXgvbXV0ZXguaD4KKyNpbmNs
dWRlIDxsaW51eC9wcmFuZG9tLmg+CiAKICNpbmNsdWRlICJndC9pbnRlbF9yaW5nLmgiCiAjaW5j
bHVkZSAiZ3QvaW50ZWxfbHJjX3JlZy5oIgpAQCAtOTEsMTUgKzkzLDI0IEBAIHN0YXRpYyB2b2lk
IGk5MTVfc2NoZWRfaW5pdF9pcGkoc3RydWN0IGk5MTVfc2NoZWRfaXBpICppcGkpCiAJaXBpLT5s
aXN0ID0gTlVMTDsKIH0KIAorc3RhdGljIHZvaWQgaW5pdF9wcmlvbGlzdChzdHJ1Y3QgaTkxNV9w
cmlvbGlzdF9yb290ICpjb25zdCByb290KQoreworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwbCA9
ICZyb290LT5zZW50aW5lbDsKKworCW1lbXNldF9wKCh2b2lkICoqKXBsLT5uZXh0LCBwbCwgQVJS
QVlfU0laRShwbC0+bmV4dCkpOworCXBsLT5wcmlvcml0eSA9IElOVF9NSU47CisJcGwtPmxldmVs
ID0gLTE7Cit9CisKIHZvaWQgaTkxNV9zY2hlZF9pbml0X2VuZ2luZShzdHJ1Y3QgaTkxNV9zY2hl
ZF9lbmdpbmUgKnNlLAogCQkJICAgIHVuc2lnbmVkIGludCBzdWJjbGFzcykKIHsKIAlzcGluX2xv
Y2tfaW5pdCgmc2UtPmxvY2spOwogCWxvY2tkZXBfc2V0X3N1YmNsYXNzKCZzZS0+bG9jaywgc3Vi
Y2xhc3MpOwogCisJaW5pdF9wcmlvbGlzdCgmc2UtPnF1ZXVlKTsKIAlJTklUX0xJU1RfSEVBRCgm
c2UtPnJlcXVlc3RzKTsKIAlJTklUX0xJU1RfSEVBRCgmc2UtPmhvbGQpOwotCXNlLT5xdWV1ZSA9
IFJCX1JPT1RfQ0FDSEVEOwogCiAJaTkxNV9zY2hlZF9pbml0X2lwaSgmc2UtPmlwaSk7CiAKQEAg
LTExNiw4ICsxMjcsNTcgQEAgdm9pZCBpOTE1X3NjaGVkX2luaXRfZW5naW5lKHN0cnVjdCBpOTE1
X3NjaGVkX2VuZ2luZSAqc2UsCiAjZW5kaWYKIH0KIAorX19tYXliZV91bnVzZWQgc3RhdGljIGJv
b2wgcHJpb2xpc3RfaWRsZShzdHJ1Y3QgaTkxNV9wcmlvbGlzdF9yb290ICpyb290KQoreworCXN0
cnVjdCBpOTE1X3ByaW9saXN0ICpwbCA9ICZyb290LT5zZW50aW5lbDsKKwlpbnQgbHZsOworCisJ
Zm9yIChsdmwgPSAwOyBsdmwgPCBBUlJBWV9TSVpFKHBsLT5uZXh0KTsgbHZsKyspIHsKKwkJaWYg
KHBsLT5uZXh0W2x2bF0gIT0gcGwpIHsKKwkJCUdFTV9UUkFDRV9FUlIoInJvb3RbJWRdIGlzIG5v
dCBlbXB0eVxuIiwgbHZsKTsKKwkJCXJldHVybiBmYWxzZTsKKwkJfQorCX0KKworCWlmIChwbC0+
bGV2ZWwgIT0gLTEpIHsKKwkJR0VNX1RSQUNFX0VSUigicm9vdCBpcyBub3QgY2xlYXI6ICVkXG4i
LCBwbC0+bGV2ZWwpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJcmV0dXJuIHRydWU7Cit9CisK
K3N0YXRpYyB2b2lkIHBsX3B1c2goc3RydWN0IGk5MTVfcHJpb2xpc3QgKnBsLCBzdHJ1Y3QgbGlz
dF9oZWFkICpoZWFkKQoreworCXBsLT5yZXF1ZXN0cy5uZXh0ID0gaGVhZC0+bmV4dDsKKwloZWFk
LT5uZXh0ID0gJnBsLT5yZXF1ZXN0czsKK30KKworc3RhdGljIHN0cnVjdCBpOTE1X3ByaW9saXN0
ICpwbF9wb3Aoc3RydWN0IGxpc3RfaGVhZCAqaGVhZCkKK3sKKwlzdHJ1Y3QgaTkxNV9wcmlvbGlz
dCAqcGw7CisKKwlwbCA9IGNvbnRhaW5lcl9vZihoZWFkLT5uZXh0LCB0eXBlb2YoKnBsKSwgcmVx
dWVzdHMpOworCWhlYWQtPm5leHQgPSBwbC0+cmVxdWVzdHMubmV4dDsKKworCXJldHVybiBwbDsK
K30KKworc3RhdGljIGJvb2wgcGxfZW1wdHkoc3RydWN0IGxpc3RfaGVhZCAqaGVhZCkKK3sKKwly
ZXR1cm4gIWhlYWQtPm5leHQ7Cit9CisKIHZvaWQgaTkxNV9zY2hlZF9wYXJrX2VuZ2luZShzdHJ1
Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNlKQogeworCXN0cnVjdCBpOTE1X3ByaW9saXN0X3Jvb3Qg
KnJvb3QgPSAmc2UtPnF1ZXVlOworCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3QgPSAmcm9vdC0+c2Vu
dGluZWwucmVxdWVzdHM7CisKKwlHRU1fQlVHX09OKCFwcmlvbGlzdF9pZGxlKHJvb3QpKTsKKwor
CXdoaWxlICghcGxfZW1wdHkobGlzdCkpCisJCWttZW1fY2FjaGVfZnJlZShnbG9iYWwuc2xhYl9w
cmlvcml0aWVzLCBwbF9wb3AobGlzdCkpOworCiAJR0VNX0JVR19PTighaTkxNV9zY2hlZF9pc19p
ZGxlKHNlKSk7CiAJc2UtPm5vX3ByaW9saXN0ID0gZmFsc2U7CiB9CkBAIC0xODMsNzEgKzI0Myw1
NSBAQCBzdGF0aWMgaW5saW5lIGJvb2wgbm9kZV9zaWduYWxlZChjb25zdCBzdHJ1Y3QgaTkxNV9z
Y2hlZF9ub2RlICpub2RlKQogCXJldHVybiBpOTE1X3JlcXVlc3RfY29tcGxldGVkKG5vZGVfdG9f
cmVxdWVzdChub2RlKSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgc3RydWN0IGk5MTVfcHJpb2xpc3Qg
KnRvX3ByaW9saXN0KHN0cnVjdCByYl9ub2RlICpyYikKK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQg
aW50IHJhbmRvbV9sZXZlbChzdHJ1Y3QgaTkxNV9wcmlvbGlzdF9yb290ICpyb290KQogewotCXJl
dHVybiByYl9lbnRyeShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3QsIG5vZGUpOwotfQotCi1zdGF0
aWMgdm9pZCBhc3NlcnRfcHJpb2xpc3RzKHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0
IHNlKQotewotCXN0cnVjdCByYl9ub2RlICpyYjsKLQlsb25nIGxhc3RfcHJpbzsKLQotCWlmICgh
SVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfR0VNKSkKLQkJcmV0dXJuOwotCi0JR0VN
X0JVR19PTihyYl9maXJzdF9jYWNoZWQoJnNlLT5xdWV1ZSkgIT0KLQkJICAgcmJfZmlyc3QoJnNl
LT5xdWV1ZS5yYl9yb290KSk7Ci0KLQlsYXN0X3ByaW8gPSBJTlRfTUFYOwotCWZvciAocmIgPSBy
Yl9maXJzdF9jYWNoZWQoJnNlLT5xdWV1ZSk7IHJiOyByYiA9IHJiX25leHQocmIpKSB7Ci0JCWNv
bnN0IHN0cnVjdCBpOTE1X3ByaW9saXN0ICpwID0gdG9fcHJpb2xpc3QocmIpOwotCi0JCUdFTV9C
VUdfT04ocC0+cHJpb3JpdHkgPiBsYXN0X3ByaW8pOwotCQlsYXN0X3ByaW8gPSBwLT5wcmlvcml0
eTsKLQl9CisJcm9vdC0+cHJuZyA9IG5leHRfcHNldWRvX3JhbmRvbTMyKHJvb3QtPnBybmcpOwor
CXJldHVybiAgX19mZnMocm9vdC0+cHJuZykgLyAyOwogfQogCiBzdGF0aWMgc3RydWN0IGxpc3Rf
aGVhZCAqCiBsb29rdXBfcHJpb2xpc3Qoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBp
bnQgcHJpbykKIHsKKwlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdXBkYXRlW0k5MTVfUFJJT0xJU1Rf
SEVJR0hUXTsKIAlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKiBjb25zdCBzZSA9ICZlbmdpbmUt
PmFjdGl2ZTsKLQlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcDsKLQlzdHJ1Y3QgcmJfbm9kZSAqKnBh
cmVudCwgKnJiOwotCWJvb2wgZmlyc3QgPSB0cnVlOwotCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgm
ZW5naW5lLT5hY3RpdmUubG9jayk7Ci0JYXNzZXJ0X3ByaW9saXN0cyhzZSk7CisJc3RydWN0IGk5
MTVfcHJpb2xpc3Rfcm9vdCAqcm9vdCA9ICZzZS0+cXVldWU7CisJc3RydWN0IGk5MTVfcHJpb2xp
c3QgKnBsLCAqdG1wOworCWludCBsdmw7CiAKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZzZS0+bG9j
ayk7CiAJaWYgKHVubGlrZWx5KHNlLT5ub19wcmlvbGlzdCkpCiAJCXByaW8gPSBJOTE1X1BSSU9S
SVRZX05PUk1BTDsKIAorCWZvcl9lYWNoX3ByaW9saXN0KHBsLCByb290KSB7IC8qIHJlY3ljbGUg
YW55IGVtcHR5IGVsZW1lbnRzIGJlZm9yZSB1cyAqLworCQlpZiAocGwtPnByaW9yaXR5ID49IHBy
aW8gfHwgIWxpc3RfZW1wdHkoJnBsLT5yZXF1ZXN0cykpCisJCQlicmVhazsKKworCQlpOTE1X3By
aW9saXN0X2FkdmFuY2Uocm9vdCwgcGwpOworCX0KKwogZmluZF9wcmlvbGlzdDoKLQkvKiBtb3N0
IHBvc2l0aXZlIHByaW9yaXR5IGlzIHNjaGVkdWxlZCBmaXJzdCwgZXF1YWwgcHJpb3JpdGllcyBm
aWZvICovCi0JcmIgPSBOVUxMOwotCXBhcmVudCA9ICZzZS0+cXVldWUucmJfcm9vdC5yYl9ub2Rl
OwotCXdoaWxlICgqcGFyZW50KSB7Ci0JCXJiID0gKnBhcmVudDsKLQkJcCA9IHRvX3ByaW9saXN0
KHJiKTsKLQkJaWYgKHByaW8gPiBwLT5wcmlvcml0eSkgewotCQkJcGFyZW50ID0gJnJiLT5yYl9s
ZWZ0OwotCQl9IGVsc2UgaWYgKHByaW8gPCBwLT5wcmlvcml0eSkgewotCQkJcGFyZW50ID0gJnJi
LT5yYl9yaWdodDsKLQkJCWZpcnN0ID0gZmFsc2U7Ci0JCX0gZWxzZSB7Ci0JCQlyZXR1cm4gJnAt
PnJlcXVlc3RzOwotCQl9CisJcGwgPSAmcm9vdC0+c2VudGluZWw7CisJbHZsID0gcGwtPmxldmVs
OworCXdoaWxlIChsdmwgPj0gMCkgeworCQl3aGlsZSAodG1wID0gcGwtPm5leHRbbHZsXSwgdG1w
LT5wcmlvcml0eSA+PSBwcmlvKQorCQkJcGwgPSB0bXA7CisJCWlmIChwbC0+cHJpb3JpdHkgPT0g
cHJpbykKKwkJCWdvdG8gb3V0OworCQl1cGRhdGVbbHZsLS1dID0gcGw7CiAJfQogCiAJaWYgKHBy
aW8gPT0gSTkxNV9QUklPUklUWV9OT1JNQUwpIHsKLQkJcCA9ICZzZS0+ZGVmYXVsdF9wcmlvbGlz
dDsKKwkJcGwgPSAmc2UtPmRlZmF1bHRfcHJpb2xpc3Q7CisJfSBlbHNlIGlmICghcGxfZW1wdHko
JnJvb3QtPnNlbnRpbmVsLnJlcXVlc3RzKSkgeworCQlwbCA9IHBsX3BvcCgmcm9vdC0+c2VudGlu
ZWwucmVxdWVzdHMpOwogCX0gZWxzZSB7Ci0JCXAgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5z
bGFiX3ByaW9yaXRpZXMsIEdGUF9BVE9NSUMpOworCQlwbCA9IGttZW1fY2FjaGVfYWxsb2MoZ2xv
YmFsLnNsYWJfcHJpb3JpdGllcywgR0ZQX0FUT01JQyk7CiAJCS8qIENvbnZlcnQgYW4gYWxsb2Nh
dGlvbiBmYWlsdXJlIHRvIGEgcHJpb3JpdHkgYnVtcCAqLwotCQlpZiAodW5saWtlbHkoIXApKSB7
CisJCWlmICh1bmxpa2VseSghcGwpKSB7CiAJCQlwcmlvID0gSTkxNV9QUklPUklUWV9OT1JNQUw7
IC8qIHJlY3Vyc2VzIGp1c3Qgb25jZSAqLwogCi0JCQkvKiBUbyBtYWludGFpbiBvcmRlcmluZyB3
aXRoIGFsbCByZW5kZXJpbmcsIGFmdGVyIGFuCisJCQkvKgorCQkJICogVG8gbWFpbnRhaW4gb3Jk
ZXJpbmcgd2l0aCBhbGwgcmVuZGVyaW5nLCBhZnRlciBhbgogCQkJICogYWxsb2NhdGlvbiBmYWls
dXJlIHdlIGhhdmUgdG8gZGlzYWJsZSBhbGwgc2NoZWR1bGluZy4KIAkJCSAqIFJlcXVlc3RzIHdp
bGwgdGhlbiBiZSBleGVjdXRlZCBpbiBmaWZvLCBhbmQgc2NoZWR1bGUKIAkJCSAqIHdpbGwgZW5z
dXJlIHRoYXQgZGVwZW5kZW5jaWVzIGFyZSBlbWl0dGVkIGluIGZpZm8uCkBAIC0yNjAsMTggKzMw
NCwxMDMgQEAgbG9va3VwX3ByaW9saXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwg
aW50IHByaW8pCiAJCX0KIAl9CiAKLQlwLT5wcmlvcml0eSA9IHByaW87Ci0JSU5JVF9MSVNUX0hF
QUQoJnAtPnJlcXVlc3RzKTsKKwlwbC0+cHJpb3JpdHkgPSBwcmlvOworCUlOSVRfTElTVF9IRUFE
KCZwbC0+cmVxdWVzdHMpOwogCi0JcmJfbGlua19ub2RlKCZwLT5ub2RlLCByYiwgcGFyZW50KTsK
LQlyYl9pbnNlcnRfY29sb3JfY2FjaGVkKCZwLT5ub2RlLCAmc2UtPnF1ZXVlLCBmaXJzdCk7CisJ
bHZsID0gcmFuZG9tX2xldmVsKHJvb3QpOworCWlmIChsdmwgPiByb290LT5zZW50aW5lbC5sZXZl
bCkgeworCQlpZiAocm9vdC0+c2VudGluZWwubGV2ZWwgPCBJOTE1X1BSSU9MSVNUX0hFSUdIVCAt
IDEpIHsKKwkJCWx2bCA9ICsrcm9vdC0+c2VudGluZWwubGV2ZWw7CisJCQl1cGRhdGVbbHZsXSA9
ICZyb290LT5zZW50aW5lbDsKKwkJfSBlbHNlIHsKKwkJCWx2bCA9IEk5MTVfUFJJT0xJU1RfSEVJ
R0hUIC0gMTsKKwkJfQorCX0KKwlHRU1fQlVHX09OKGx2bCA8IDApOworCUdFTV9CVUdfT04obHZs
ID49IEFSUkFZX1NJWkUocGwtPm5leHQpKTsKIAotCXJldHVybiAmcC0+cmVxdWVzdHM7CisJcGwt
PmxldmVsID0gbHZsOworCWRvIHsKKwkJdG1wID0gdXBkYXRlW2x2bF07CisJCXBsLT5uZXh0W2x2
bF0gPSB1cGRhdGVbbHZsXS0+bmV4dFtsdmxdOworCQl0bXAtPm5leHRbbHZsXSA9IHBsOworCX0g
d2hpbGUgKC0tbHZsID49IDApOworCisJaWYgKElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RF
QlVHX0dFTSkpIHsKKwkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKmNoazsKKworCQljaGsgPSAmcm9v
dC0+c2VudGluZWw7CisJCWx2bCA9IGNoay0+bGV2ZWw7CisJCWRvIHsKKwkJCXdoaWxlICh0bXAg
PSBjaGstPm5leHRbbHZsXSwgdG1wLT5wcmlvcml0eSA+PSBwcmlvKQorCQkJCWNoayA9IHRtcDsK
KwkJfSB3aGlsZSAoLS1sdmwgPj0gMCk7CisKKwkJR0VNX0JVR19PTihjaGsgIT0gcGwpOworCX0K
Kworb3V0OgorCUdFTV9CVUdfT04ocGwgPT0gJnJvb3QtPnNlbnRpbmVsKTsKKwlyZXR1cm4gJnBs
LT5yZXF1ZXN0czsKIH0KIAotdm9pZCBfX2k5MTVfcHJpb2xpc3RfZnJlZShzdHJ1Y3QgaTkxNV9w
cmlvbGlzdCAqcCkKK3N0YXRpYyB2b2lkIHJlbW92ZV9wcmlvbGlzdChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUsCisJCQkgICAgc3RydWN0IGxpc3RfaGVhZCAqcGxpc3QpCiB7Ci0Ja21l
bV9jYWNoZV9mcmVlKGdsb2JhbC5zbGFiX3ByaW9yaXRpZXMsIHApOworCXN0cnVjdCBpOTE1X3Nj
aGVkX2VuZ2luZSAqIGNvbnN0IHNlID0gJmVuZ2luZS0+YWN0aXZlOworCXN0cnVjdCBpOTE1X3By
aW9saXN0X3Jvb3QgKnJvb3QgPSAmc2UtPnF1ZXVlOworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpw
bCwgKnRtcDsKKwlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqb2xkID0KKwkJY29udGFpbmVyX29mKHBs
aXN0LCBzdHJ1Y3QgaTkxNV9wcmlvbGlzdCwgcmVxdWVzdHMpOworCWludCBwcmlvID0gb2xkLT5w
cmlvcml0eTsKKwlpbnQgbHZsOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmc2UtPmxvY2spOwor
CUdFTV9CVUdfT04oIWxpc3RfZW1wdHkocGxpc3QpKTsKKworCXBsID0gJnJvb3QtPnNlbnRpbmVs
OworCWx2bCA9IHBsLT5sZXZlbDsKKwlHRU1fQlVHX09OKGx2bCA8IDApOworCisJaWYgKHByaW8g
IT0gSTkxNV9QUklPUklUWV9OT1JNQUwpCisJCXBsX3B1c2gob2xkLCAmcGwtPnJlcXVlc3RzKTsK
KworCWRvIHsKKwkJd2hpbGUgKHRtcCA9IHBsLT5uZXh0W2x2bF0sIHRtcC0+cHJpb3JpdHkgPiBw
cmlvKQorCQkJcGwgPSB0bXA7CisJCWlmIChsdmwgPD0gb2xkLT5sZXZlbCkgeworCQkJcGwtPm5l
eHRbbHZsXSA9IG9sZC0+bmV4dFtsdmxdOworCQkJaWYgKHBsID09ICZyb290LT5zZW50aW5lbCAm
JiBvbGQtPm5leHRbbHZsXSA9PSBwbCkgeworCQkJCUdFTV9CVUdfT04ocGwtPmxldmVsICE9IGx2
bCk7CisJCQkJcGwtPmxldmVsLS07CisJCQl9CisJCX0KKwl9IHdoaWxlICgtLWx2bCA+PSAwKTsK
KwlHRU1fQlVHX09OKHRtcCAhPSBvbGQpOworfQorCit2b2lkIGk5MTVfcHJpb2xpc3RfYWR2YW5j
ZShzdHJ1Y3QgaTkxNV9wcmlvbGlzdF9yb290ICpyb290LAorCQkJICAgc3RydWN0IGk5MTVfcHJp
b2xpc3QgKnBsKQoreworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICogY29uc3QgcyA9ICZyb290LT5z
ZW50aW5lbDsKKwlpbnQgbHZsOworCisJR0VNX0JVR19PTighbGlzdF9lbXB0eSgmcGwtPnJlcXVl
c3RzKSk7CisJR0VNX0JVR19PTihwbCAhPSBzLT5uZXh0WzBdKTsKKwlHRU1fQlVHX09OKHBsID09
IHMpOworCisJaWYgKHBsLT5wcmlvcml0eSAhPSBJOTE1X1BSSU9SSVRZX05PUk1BTCkKKwkJcGxf
cHVzaChwbCwgJnMtPnJlcXVlc3RzKTsKKworCWx2bCA9IHBsLT5sZXZlbDsKKwlHRU1fQlVHX09O
KGx2bCA8IDApOworCWRvIHsKKwkJcy0+bmV4dFtsdmxdID0gcGwtPm5leHRbbHZsXTsKKwkJaWYg
KHBsLT5uZXh0W2x2bF0gPT0gcykgeworCQkJR0VNX0JVR19PTihzLT5sZXZlbCAhPSBsdmwpOwor
CQkJcy0+bGV2ZWwtLTsKKwkJfQorCX0gd2hpbGUgKC0tbHZsID49IDApOwogfQogCiBzdGF0aWMg
c3RydWN0IGk5MTVfcmVxdWVzdCAqCkBAIC00MjAsOCArNTQ5LDEzIEBAIHN0YXRpYyB2b2lkIF9f
aTkxNV9yZXF1ZXN0X3NldF9wcmlvcml0eShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IHBy
aW8pCiAJCQljb250aW51ZTsKIAogCQlHRU1fQlVHX09OKHJxLT5lbmdpbmUgIT0gZW5naW5lKTsK
LQkJaWYgKGk5MTVfcmVxdWVzdF9pbl9wcmlvcml0eV9xdWV1ZShycSkpCisJCWlmIChpOTE1X3Jl
cXVlc3RfaW5fcHJpb3JpdHlfcXVldWUocnEpKSB7CisJCQlzdHJ1Y3QgbGlzdF9oZWFkICpwcmV2
ID0gcnEtPnNjaGVkLmxpbmsucHJldjsKKwogCQkJbGlzdF9tb3ZlX3RhaWwoJnJxLT5zY2hlZC5s
aW5rLCBwbGlzdCk7CisJCQlpZiAobGlzdF9lbXB0eShwcmV2KSkKKwkJCQlyZW1vdmVfcHJpb2xp
c3QoZW5naW5lLCBwcmV2KTsKKwkJfQogCiAJCS8qIERlZmVyICh0YXNrbGV0KSBzdWJtaXNzaW9u
IHVudGlsIGFmdGVyIGFsbCB1cGRhdGVzLiAqLwogCQlraWNrX3N1Ym1pc3Npb24oZW5naW5lLCBy
cSwgcHJpbyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxl
ci5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuaAppbmRleCAwYWI0N2Ni
ZjBlOWMuLmJjYTg5YTU4ZDk1MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9zY2hlZHVsZXIuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5o
CkBAIC0xNiwxMiArMTYsNiBAQAogCiBzdHJ1Y3QgZHJtX3ByaW50ZXI7CiAKLSNkZWZpbmUgcHJp
b2xpc3RfZm9yX2VhY2hfcmVxdWVzdChpdCwgcGxpc3QpIFwKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5
KGl0LCAmKHBsaXN0KS0+cmVxdWVzdHMsIHNjaGVkLmxpbmspCi0KLSNkZWZpbmUgcHJpb2xpc3Rf
Zm9yX2VhY2hfcmVxdWVzdF9jb25zdW1lKGl0LCBuLCBwbGlzdCkgXAotCWxpc3RfZm9yX2VhY2hf
ZW50cnlfc2FmZShpdCwgbiwgJihwbGlzdCktPnJlcXVlc3RzLCBzY2hlZC5saW5rKQotCiB2b2lk
IGk5MTVfc2NoZWRfbm9kZV9pbml0KHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUpOwogdm9p
ZCBpOTE1X3NjaGVkX25vZGVfcmVpbml0KHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUpOwog
CkBAIC02OSw3ICs2Myw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X3ByaW9saXN0X2ZyZWUo
c3RydWN0IGk5MTVfcHJpb2xpc3QgKnApCiAKIHN0YXRpYyBpbmxpbmUgYm9vbCBpOTE1X3NjaGVk
X2lzX2lkbGUoY29uc3Qgc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzZSkKIHsKLQlyZXR1cm4g
UkJfRU1QVFlfUk9PVCgmc2UtPnF1ZXVlLnJiX3Jvb3QpOworCXJldHVybiBpOTE1X3ByaW9saXN0
X2lzX2VtcHR5KCZzZS0+cXVldWUpOwogfQogCiBzdGF0aWMgaW5saW5lIGJvb2wKQEAgLTk5LDYg
KzkzLDkgQEAgc3RhdGljIGlubGluZSB2b2lkIGk5MTVfc2NoZWRfa2ljayhzdHJ1Y3QgaTkxNV9z
Y2hlZF9lbmdpbmUgKnNlKQogCXRhc2tsZXRfaGlfc2NoZWR1bGUoJnNlLT50YXNrbGV0KTsKIH0K
IAordm9pZCBpOTE1X3ByaW9saXN0X2FkdmFuY2Uoc3RydWN0IGk5MTVfcHJpb2xpc3Rfcm9vdCAq
cm9vdCwKKwkJCSAgIHN0cnVjdCBpOTE1X3ByaW9saXN0ICpvbGQpOworCiB2b2lkIGk5MTVfcmVx
dWVzdF9zaG93X3dpdGhfc2NoZWR1bGUoc3RydWN0IGRybV9wcmludGVyICptLAogCQkJCSAgICAg
Y29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJCQkJICAgICBjb25zdCBjaGFyICpwcmVm
aXgsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlcl90eXBl
cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJfdHlwZXMuaAppbmRleCBm
NjY4YzY4MGQyOTAuLmU2NDc1MGJlNGU3NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9zY2hlZHVsZXJfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3NjaGVkdWxlcl90eXBlcy5oCkBAIC04OSw3ICs4OSw3IEBAIHN0cnVjdCBpOTE1X3NjaGVkX2Vu
Z2luZSB7CiAJLyoqCiAJICogQHF1ZXVlOiBxdWV1ZSBvZiByZXF1ZXN0cywgaW4gcHJpb3JpdHkg
bGlzdHMKIAkgKi8KLQlzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgcXVldWU7CisJc3RydWN0IGk5MTVf
cHJpb2xpc3Rfcm9vdCBxdWV1ZTsKIAogCXN0cnVjdCBpOTE1X3NjaGVkX2lwaSBpcGk7CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X21vY2tfc2VsZnRl
c3RzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9tb2NrX3NlbGZ0ZXN0
cy5oCmluZGV4IDNkYjM0ZDNlZWE1OC4uOTQ2YzkzNDQxYzFmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9tb2NrX3NlbGZ0ZXN0cy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X21vY2tfc2VsZnRlc3RzLmgKQEAgLTI1LDYg
KzI1LDcgQEAgc2VsZnRlc3QocmluZywgaW50ZWxfcmluZ19tb2NrX3NlbGZ0ZXN0cykKIHNlbGZ0
ZXN0KGVuZ2luZSwgaW50ZWxfZW5naW5lX2NzX21vY2tfc2VsZnRlc3RzKQogc2VsZnRlc3QodGlt
ZWxpbmVzLCBpbnRlbF90aW1lbGluZV9tb2NrX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KHJlcXVlc3Rz
LCBpOTE1X3JlcXVlc3RfbW9ja19zZWxmdGVzdHMpCitzZWxmdGVzdChzY2hlZHVsZXIsIGk5MTVf
c2NoZWR1bGVyX21vY2tfc2VsZnRlc3RzKQogc2VsZnRlc3Qob2JqZWN0cywgaTkxNV9nZW1fb2Jq
ZWN0X21vY2tfc2VsZnRlc3RzKQogc2VsZnRlc3QocGh5cywgaTkxNV9nZW1fcGh5c19tb2NrX3Nl
bGZ0ZXN0cykKIHNlbGZ0ZXN0KGRtYWJ1ZiwgaTkxNV9nZW1fZG1hYnVmX21vY2tfc2VsZnRlc3Rz
KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfc2NoZWR1
bGVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9zY2hlZHVsZXIuYwpp
bmRleCBkZTQ0YTY2MjEwYjcuLmRlNWIxNDQzMTI5YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfc2NoZWR1bGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvc2VsZnRlc3RzL2k5MTVfc2NoZWR1bGVyLmMKQEAgLTEyLDYgKzEyLDU0IEBACiAjaW5j
bHVkZSAic2VsZnRlc3RzL2lndF9zcGlubmVyLmgiCiAjaW5jbHVkZSAic2VsZnRlc3RzL2k5MTVf
cmFuZG9tLmgiCiAKK3N0YXRpYyBpbnQgbW9ja19za2lwbGlzdF9sZXZlbHModm9pZCAqZHVtbXkp
Cit7CisJc3RydWN0IGk5MTVfcHJpb2xpc3Rfcm9vdCByb290ID0ge307CisJc3RydWN0IGk5MTVf
cHJpb2xpc3QgKnBsID0gJnJvb3Quc2VudGluZWw7CisJSUdUX1RJTUVPVVQoZW5kX3RpbWUpOwor
CXVuc2lnbmVkIGxvbmcgdG90YWw7CisJaW50IGNvdW50LCBsdmw7CisKKwl0b3RhbCA9IDA7CisJ
ZG8geworCQlmb3IgKGNvdW50ID0gMDsgY291bnQgPCAxNjM4NDsgY291bnQrKykgeworCQkJbHZs
ID0gcmFuZG9tX2xldmVsKCZyb290KTsKKwkJCWlmIChsdmwgPiBwbC0+bGV2ZWwpIHsKKwkJCQlp
ZiAobHZsIDwgSTkxNV9QUklPTElTVF9IRUlHSFQgLSAxKQorCQkJCQlsdmwgPSArK3BsLT5sZXZl
bDsKKwkJCQllbHNlCisJCQkJCWx2bCA9IEk5MTVfUFJJT0xJU1RfSEVJR0hUIC0gMTsKKwkJCX0K
KworCQkJcGwtPm5leHRbbHZsXSA9IHB0cl9pbmMocGwtPm5leHRbbHZsXSk7CisJCX0KKwkJdG90
YWwgKz0gY291bnQ7CisJfSB3aGlsZSAoIV9faWd0X3RpbWVvdXQoZW5kX3RpbWUsIE5VTEwpKTsK
KworCXByX2luZm8oIlRvdGFsICU5bHVcbiIsIHRvdGFsKTsKKwlmb3IgKGx2bCA9IDA7IGx2bCA8
PSBwbC0+bGV2ZWw7IGx2bCsrKSB7CisJCWludCB4ID0gaWxvZzIoKHVuc2lnbmVkIGxvbmcpcGwt
Pm5leHRbbHZsXSk7CisJCWNoYXIgcm93WzgwXTsKKworCQltZW1zZXQocm93LCAnKicsIHgpOwor
CQlyb3dbeF0gPSAnXDAnOworCisJCXByX2luZm8oIiBbJTJkXSAlOWx1ICVzXG4iLAorCQkJbHZs
LCAodW5zaWduZWQgbG9uZylwbC0+bmV4dFtsdmxdLCByb3cpOworCX0KKworCXJldHVybiAwOwor
fQorCitpbnQgaTkxNV9zY2hlZHVsZXJfbW9ja19zZWxmdGVzdHModm9pZCkKK3sKKwlzdGF0aWMg
Y29uc3Qgc3RydWN0IGk5MTVfc3VidGVzdCB0ZXN0c1tdID0geworCQlTVUJURVNUKG1vY2tfc2tp
cGxpc3RfbGV2ZWxzKSwKKwl9OworCisJcmV0dXJuIGk5MTVfc3VidGVzdHModGVzdHMsIE5VTEwp
OworfQorCiBzdGF0aWMgdm9pZCBzY2hlZHVsaW5nX2Rpc2FibGUoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogewogCWVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zID0gMDsK
QEAgLTgwLDkgKzEyOCw5IEBAIHN0YXRpYyBpbnQgYWxsX2VuZ2luZXMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsCiBzdGF0aWMgYm9vbCBjaGVja19jb250ZXh0X29yZGVyKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAl1NjQgbGFzdF9zZXFubywgbGFzdF9jb250ZXh0
OworCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwOwogCXVuc2lnbmVkIGxvbmcgY291bnQ7CiAJYm9v
bCByZXN1bHQgPSBmYWxzZTsKLQlzdHJ1Y3QgcmJfbm9kZSAqcmI7CiAJaW50IGxhc3RfcHJpbzsK
IAogCS8qIFdlIGV4cGVjdCB0aGUgZXhlY3V0aW9uIG9yZGVyIHRvIGZvbGxvdyBhc2NlbmRpbmcg
ZmVuY2UtY29udGV4dCAqLwpAQCAtOTIsOCArMTQwLDcgQEAgc3RhdGljIGJvb2wgY2hlY2tfY29u
dGV4dF9vcmRlcihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJbGFzdF9jb250ZXh0
ID0gMDsKIAlsYXN0X3NlcW5vID0gMDsKIAlsYXN0X3ByaW8gPSAwOwotCWZvciAocmIgPSByYl9m
aXJzdF9jYWNoZWQoJmVuZ2luZS0+YWN0aXZlLnF1ZXVlKTsgcmI7IHJiID0gcmJfbmV4dChyYikp
IHsKLQkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnAgPSByYl9lbnRyeShyYiwgdHlwZW9mKCpwKSwg
bm9kZSk7CisJZm9yX2VhY2hfcHJpb2xpc3QocCwgJmVuZ2luZS0+YWN0aXZlLnF1ZXVlKSB7CiAJ
CXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCiAJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3Qo
cnEsIHApIHsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRl
c2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8v
aW50ZWwtZ2Z4Cg==

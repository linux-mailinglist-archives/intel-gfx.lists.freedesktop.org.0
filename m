Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id B74CD2B6DBF
	for <lists+intel-gfx@lfdr.de>; Tue, 17 Nov 2020 19:50:53 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C013789F6D;
	Tue, 17 Nov 2020 18:50:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 15DAB89F0A
 for <intel-gfx@lists.freedesktop.org>; Tue, 17 Nov 2020 18:50:46 +0000 (UTC)
IronPort-SDR: OOmWolP0n/JDUNfdIuRq2pFZ40yIpb5buTDlWUu2msw0G9HFRJB8N/UZpSSUSd98FvH+QnUe4q
 8lOrTxjpPybg==
X-IronPort-AV: E=McAfee;i="6000,8403,9808"; a="150833838"
X-IronPort-AV: E=Sophos;i="5.77,486,1596524400"; d="scan'208";a="150833838"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 17 Nov 2020 10:50:45 -0800
IronPort-SDR: C1ND1o16HED96iShe8SVV5pSFboKcZp6oiF4NGJKf+iTBrgNeWNeE4bkDXvZwK9o3w4LhjHDGn
 1O8YoKWXujXw==
X-IronPort-AV: E=Sophos;i="5.77,486,1596524400"; d="scan'208";a="340996829"
Received: from ankithac-mobl1.amr.corp.intel.com (HELO
 aswarup-mobl.amr.corp.intel.com) ([10.254.101.215])
 by orsmga002-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 17 Nov 2020 10:50:45 -0800
From: Aditya Swarup <aditya.swarup@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 17 Nov 2020 10:50:11 -0800
Message-Id: <20201117185029.22078-4-aditya.swarup@intel.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20201117185029.22078-1-aditya.swarup@intel.com>
References: <20201117185029.22078-1-aditya.swarup@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 03/21] drm/i915/adl_s: Add ADL-S platform info
 and PCI ids
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogQ2F6IFlva295YW1hIDxjYXoueW9rb3lhbWFAaW50ZWwuY29tPgoKLSBBZGQgdGhlIGlu
aXRpYWwgcGxhdGZvcm0gaW5mb3JtYXRpb24gZm9yIEFsZGVybGFrZS1TLgotIFNwZWNpZnkgcHBn
dHRfc2l6ZSB2YWx1ZQotIEFkZCBkbWFfbWFza19zaXplCi0gQWRkIEFETFMgUkVWSURzCi0gSFcg
dHJhY2tpbmcoU2VsZWN0aXZlIFVwZGF0ZSBUcmFja2luZyBFbmFibGUpIGhhcyBiZWVuCiAgcmVt
b3ZlZCBmcm9tIEFETFMuIERpc2FibGUgUFNSMiB0aWxsIHdlIGVuYWJsZSBzb2Z0d2FyZS8KICBt
YW51YWwgdHJhY2tpbmcuCgp2MjoKLSBBZGQgc3VwcG9ydCBmb3IgZGlmZmVyZW50IEFETFMgU09D
IHN0ZXBwaW5ncyB0byBzZWxlY3QKICBjb3JyZWN0IEdUL0RJU1Agc3RlcHBpbmcgYmFzZWQgb24g
QnNwZWMgNTM2NTUgYmFzZWQgb24KICBmZWVkYmFjayBmcm9tIE1hdHQgUm9wZXIuKGFzd2FydXAp
CgpCc3BlYzogNTM1OTcKQnNwZWM6IDUzNjQ4CkJzcGVjOiA1MzY1NQpCc3BlYzogNDgwMjgKQnNw
ZWM6IDUzNjUwCkJTcGVjOiA1MDQyMgoKQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uu
c291emFAaW50ZWwuY29tPgpDYzogTWF0dCBSb3BlciA8bWF0dGhldy5kLnJvcGVyQGludGVsLmNv
bT4KQ2M6IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgpDYzogQW51
c2hhIFNyaXZhdHNhIDxhbnVzaGEuc3JpdmF0c2FAaW50ZWwuY29tPgpDYzogSmFuaSBOaWt1bGEg
PGphbmkubmlrdWxhQGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFs
YUBsaW51eC5pbnRlbC5jb20+CkNjOiBJbXJlIERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+ClNp
Z25lZC1vZmYtYnk6IENheiBZb2tveWFtYSA8Y2F6Lnlva295YW1hQGludGVsLmNvbT4KU2lnbmVk
LW9mZi1ieTogQWRpdHlhIFN3YXJ1cCA8YWRpdHlhLnN3YXJ1cEBpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHMuYyB8ICA4ICsrKysrKysrCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAgIHwgMjAgKysrKysrKysr
KysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMgICAgICAgICAgICAg
fCAxMiArKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RldmljZV9pbmZv
LmMgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5oICAg
IHwgIDEgKwogaW5jbHVkZS9kcm0vaTkxNV9wY2lpZHMuaCAgICAgICAgICAgICAgICAgICB8IDEz
ICsrKysrKysrKysrKysKIDYgZmlsZXMgY2hhbmdlZCwgNTUgaW5zZXJ0aW9ucygrKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kcy5jCmluZGV4IGQ3NTYxNTVkODJl
YS4uZDg4ZDNkNjBmYjFjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF93b3JrYXJvdW5kcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmth
cm91bmRzLmMKQEAgLTgzLDYgKzgzLDE0IEBAIGNvbnN0IHN0cnVjdCBpOTE1X3Jldl9zdGVwcGlu
Z3MgdGdsX3Jldmlkc1tdID0gewogCVsxXSA9IHsgLmd0X3N0ZXBwaW5nID0gUkVWSURfQjAsIC5k
aXNwX3N0ZXBwaW5nID0gUkVWSURfRDAgfSwKIH07CiAKK2NvbnN0IHN0cnVjdCBpOTE1X3Jldl9z
dGVwcGluZ3MgYWRsc19yZXZpZHNbXSA9IHsKKwlbQURMU19SRVZJRF9BMF0gPSB7IC5ndF9zdGVw
cGluZyA9IFJFVklEX0EwLCAuZGlzcF9zdGVwcGluZyA9IFJFVklEX0EwIH0sCisJW0FETFNfUkVW
SURfQTJdID0geyAuZ3Rfc3RlcHBpbmcgPSBSRVZJRF9BMCwgLmRpc3Bfc3RlcHBpbmcgPSBSRVZJ
RF9BMiB9LAorCVtBRExTX1JFVklEX0IwXSA9IHsgLmd0X3N0ZXBwaW5nID0gUkVWSURfQjAsIC5k
aXNwX3N0ZXBwaW5nID0gUkVWSURfQjAgfSwKKwlbQURMU19SRVZJRF9HMF0gPSB7IC5ndF9zdGVw
cGluZyA9IFJFVklEX0MwLCAuZGlzcF9zdGVwcGluZyA9IFJFVklEX0IwIH0sCisJW0FETFNfUkVW
SURfQzBdID0geyAuZ3Rfc3RlcHBpbmcgPSBSRVZJRF9EMCwgLmRpc3Bfc3RlcHBpbmcgPSBSRVZJ
RF9DMCB9LAorfTsKKwogc3RhdGljIHZvaWQgd2FfaW5pdF9zdGFydChzdHJ1Y3QgaTkxNV93YV9s
aXN0ICp3YWwsIGNvbnN0IGNoYXIgKm5hbWUsIGNvbnN0IGNoYXIgKmVuZ2luZV9uYW1lKQogewog
CXdhbC0+bmFtZSA9IG5hbWU7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCA0Mzc5MTZhYWNh
YTYuLjgxN2E1MTAyYjk0ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
cnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0xNDIzLDYgKzE0
MjMsNyBAQCBJU19TVUJQTEFURk9STShjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKICNkZWZpbmUgSVNfVElHRVJMQUtFKGRldl9wcml2KQlJU19QTEFURk9STShkZXZfcHJpdiwg
SU5URUxfVElHRVJMQUtFKQogI2RlZmluZSBJU19ST0NLRVRMQUtFKGRldl9wcml2KQlJU19QTEFU
Rk9STShkZXZfcHJpdiwgSU5URUxfUk9DS0VUTEFLRSkKICNkZWZpbmUgSVNfREcxKGRldl9wcml2
KSAgICAgICAgSVNfUExBVEZPUk0oZGV2X3ByaXYsIElOVEVMX0RHMSkKKyNkZWZpbmUgSVNfQUxE
RVJMQUtFX1MoZGV2X3ByaXYpIElTX1BMQVRGT1JNKGRldl9wcml2LCBJTlRFTF9BTERFUkxBS0Vf
UykKICNkZWZpbmUgSVNfSFNXX0VBUkxZX1NEVihkZXZfcHJpdikgKElTX0hBU1dFTEwoZGV2X3By
aXYpICYmIFwKIAkJCQkgICAgKElOVEVMX0RFVklEKGRldl9wcml2KSAmIDB4RkYwMCkgPT0gMHgw
QzAwKQogI2RlZmluZSBJU19CRFdfVUxUKGRldl9wcml2KSBcCkBAIC0xNTY2LDYgKzE1NjcsNyBA
QCBleHRlcm4gY29uc3Qgc3RydWN0IGk5MTVfcmV2X3N0ZXBwaW5ncyBrYmxfcmV2aWRzW107CiAK
IGVudW0gewogCVJFVklEX0EwLAorCVJFVklEX0EyLAogCVJFVklEX0IwLAogCVJFVklEX0IxLAog
CVJFVklEX0MwLApAQCAtMTYwNyw2ICsxNjA5LDI0IEBAIHRnbF9yZXZpZHNfZ2V0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKICNkZWZpbmUgSVNfREcxX1JFVklEKHAsIHNpbmNl
LCB1bnRpbCkgXAogCShJU19ERzEocCkgJiYgSVNfUkVWSUQocCwgc2luY2UsIHVudGlsKSkKIAor
I2RlZmluZSBBRExTX1JFVklEX0EwCQkweDAKKyNkZWZpbmUgQURMU19SRVZJRF9BMgkJMHgxCisj
ZGVmaW5lIEFETFNfUkVWSURfQjAJCTB4NAorI2RlZmluZSBBRExTX1JFVklEX0cwCQkweDgKKyNk
ZWZpbmUgQURMU19SRVZJRF9DMAkJMHhDIC8qU2FtZSBhcyBIMCBBRExTIFNPQyBzdGVwcGluZyov
CisKK2V4dGVybiBjb25zdCBzdHJ1Y3QgaTkxNV9yZXZfc3RlcHBpbmdzIGFkbHNfcmV2aWRzW107
CisKKyNkZWZpbmUgSVNfQURMU19ESVNQX1JFVklEKHAsIHNpbmNlLCB1bnRpbCkgXAorCShJU19B
TERFUkxBS0VfUyhwKSAmJiBcCisJIGFkbHNfcmV2aWRzW0lOVEVMX1JFVklEKHApXS5kaXNwX3N0
ZXBwaW5nID49IChzaW5jZSkgJiYgXAorCSBhZGxzX3Jldmlkc1tJTlRFTF9SRVZJRChwKV0uZGlz
cF9zdGVwcGluZyA8PSAodW50aWwpKQorCisjZGVmaW5lIElTX0FETFNfR1RfUkVWSUQocCwgc2lu
Y2UsIHVudGlsKSBcCisJKElTX0FMREVSTEFLRV9TKHApICYmIFwKKwkgYWRsc19yZXZpZHNbSU5U
RUxfUkVWSUQocCldLmd0X3N0ZXBwaW5nID49IChzaW5jZSkgJiYgXAorCSBhZGxzX3Jldmlkc1tJ
TlRFTF9SRVZJRChwKV0uZ3Rfc3RlcHBpbmcgPD0gKHVudGlsKSkKKwogI2RlZmluZSBJU19MUChk
ZXZfcHJpdikJKElOVEVMX0lORk8oZGV2X3ByaXYpLT5pc19scCkKICNkZWZpbmUgSVNfR0VOOV9M
UChkZXZfcHJpdikJKElTX0dFTihkZXZfcHJpdiwgOSkgJiYgSVNfTFAoZGV2X3ByaXYpKQogI2Rl
ZmluZSBJU19HRU45X0JDKGRldl9wcml2KQkoSVNfR0VOKGRldl9wcml2LCA5KSAmJiAhSVNfTFAo
ZGV2X3ByaXYpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wY2kuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMKaW5kZXggMTFmZTc5MGIxOTY5Li4wNjlh
YzBjMjhiYjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wY2kuYwpAQCAtOTI1LDYgKzkyNSwxNyBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2RldmljZV9pbmZvIGRnMV9pbmZvIF9fbWF5YmVfdW51
c2VkID0gewogCS5wcGd0dF9zaXplID0gNDcsCiB9OwogCitzdGF0aWMgY29uc3Qgc3RydWN0IGlu
dGVsX2RldmljZV9pbmZvIGFkbF9zX2luZm8gPSB7CisJR0VOMTJfRkVBVFVSRVMsCisJUExBVEZP
Uk0oSU5URUxfQUxERVJMQUtFX1MpLAorCS5waXBlX21hc2sgPSBCSVQoUElQRV9BKSB8IEJJVChQ
SVBFX0IpIHwgQklUKFBJUEVfQykgfCBCSVQoUElQRV9EKSwKKwkucmVxdWlyZV9mb3JjZV9wcm9i
ZSA9IDEsCisJLmRpc3BsYXkuaGFzX3Bzcl9od190cmFja2luZyA9IDAsCisJLnBsYXRmb3JtX2Vu
Z2luZV9tYXNrID0KKwkJQklUKFJDUzApIHwgQklUKEJDUzApIHwgQklUKFZFQ1MwKSB8IEJJVChW
Q1MwKSB8IEJJVChWQ1MyKSwKKwkuZG1hX21hc2tfc2l6ZSA9IDQ2LAorfTsKKwogI3VuZGVmIEdF
TgogI3VuZGVmIFBMQVRGT1JNCiAKQEAgLTEwMDEsNiArMTAxMiw3IEBAIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgcGNpX2RldmljZV9pZCBwY2lpZGxpc3RbXSA9IHsKIAlJTlRFTF9KU0xfSURTKCZqc2xf
aW5mbyksCiAJSU5URUxfVEdMXzEyX0lEUygmdGdsX2luZm8pLAogCUlOVEVMX1JLTF9JRFMoJnJr
bF9pbmZvKSwKKwlJTlRFTF9BRExTX0lEUygmYWRsX3NfaW5mbyksCiAJezAsIDAsIDB9CiB9Owog
TU9EVUxFX0RFVklDRV9UQUJMRShwY2ksIHBjaWlkbGlzdCk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfZGV2aWNlX2luZm8uYwppbmRleCBlNjdjZWM4ZmEyYWEuLjczMTBlMDE5YzYxMSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jCkBAIC02Niw2ICs2Niw3IEBA
IHN0YXRpYyBjb25zdCBjaGFyICogY29uc3QgcGxhdGZvcm1fbmFtZXNbXSA9IHsKIAlQTEFURk9S
TV9OQU1FKFRJR0VSTEFLRSksCiAJUExBVEZPUk1fTkFNRShST0NLRVRMQUtFKSwKIAlQTEFURk9S
TV9OQU1FKERHMSksCisJUExBVEZPUk1fTkFNRShBTERFUkxBS0VfUyksCiB9OwogI3VuZGVmIFBM
QVRGT1JNX05BTUUKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2
aWNlX2luZm8uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmgKaW5k
ZXggZDkyZmEwNDFjNzAwLi4zNjBmM2YxODM1ZjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfZGV2aWNlX2luZm8uaApAQCAtODQsNiArODQsNyBAQCBlbnVtIGludGVsX3BsYXRmb3JtIHsK
IAlJTlRFTF9USUdFUkxBS0UsCiAJSU5URUxfUk9DS0VUTEFLRSwKIAlJTlRFTF9ERzEsCisJSU5U
RUxfQUxERVJMQUtFX1MsCiAJSU5URUxfTUFYX1BMQVRGT1JNUwogfTsKIApkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9kcm0vaTkxNV9wY2lpZHMuaCBiL2luY2x1ZGUvZHJtL2k5MTVfcGNpaWRzLmgKaW5k
ZXggOTMxZTQ2MTkxMDQ3Li5hZTUzZmY4NDYyYWUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvZHJtL2k5
MTVfcGNpaWRzLmgKKysrIGIvaW5jbHVkZS9kcm0vaTkxNV9wY2lpZHMuaApAQCAtNjM0LDQgKzYz
NCwxNyBAQAogCUlOVEVMX1ZHQV9ERVZJQ0UoMHg0OTA3LCBpbmZvKSwgXAogCUlOVEVMX1ZHQV9E
RVZJQ0UoMHg0OTA4LCBpbmZvKQogCisvKiBBREwtUyAqLworI2RlZmluZSBJTlRFTF9BRExTX0lE
UyhpbmZvKSBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2ODAsIGluZm8pLCBcCisJSU5URUxfVkdB
X0RFVklDRSgweDQ2ODEsIGluZm8pLCBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2ODIsIGluZm8p
LCBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2ODMsIGluZm8pLCBcCisJSU5URUxfVkdBX0RFVklD
RSgweDQ2OTAsIGluZm8pLCBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2OTEsIGluZm8pLCBcCisJ
SU5URUxfVkdBX0RFVklDRSgweDQ2OTIsIGluZm8pLCBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2
OTMsIGluZm8pLCBcCisJSU5URUxfVkdBX0RFVklDRSgweDQ2OTgsIGluZm8pLCBcCisJSU5URUxf
VkdBX0RFVklDRSgweDQ2OTksIGluZm8pCisKICNlbmRpZiAvKiBfSTkxNV9QQ0lJRFNfSCAqLwot
LSAKMi4yNy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

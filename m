Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 08EF4E1C3E
	for <lists+intel-gfx@lfdr.de>; Wed, 23 Oct 2019 15:21:15 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9ED3A6EAA6;
	Wed, 23 Oct 2019 13:21:12 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9E25B6EAA9
 for <intel-gfx@lists.freedesktop.org>; Wed, 23 Oct 2019 13:21:10 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 Oct 2019 06:21:10 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,221,1569308400"; d="scan'208";a="188250464"
Received: from cmclare-mobl.ger.corp.intel.com (HELO
 mwahaha-bdw.ger.corp.intel.com) ([10.252.7.98])
 by orsmga007.jf.intel.com with ESMTP; 23 Oct 2019 06:21:09 -0700
From: Matthew Auld <matthew.auld@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 23 Oct 2019 14:20:59 +0100
Message-Id: <20191023132100.9578-6-matthew.auld@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191023132100.9578-1-matthew.auld@intel.com>
References: <20191023132100.9578-1-matthew.auld@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 6/7] drm/i915/selftests: prefer random sizes
 for the huge-GTT-page smoke tests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RGl0Y2ggdGhlIGR1YmlvdXMgc3RhdGljIGxpc3Qgb2Ygc2l6ZXMgdG8gZW51bWVyYXRlLCBpbiBm
YXZvdXIgb2YKY2hvb3NpbmcgYSByYW5kb20gc2l6ZSB3aXRoaW4gdGhlIGxpbWl0cyBvZiBlYWNo
IGJhY2tpbmcgc3RvcmUuIFdpdGgKcmVwZWF0ZWQgQ0kgcnVucyB0aGlzIHNob3VsZCBnaXZlIHVz
IGEgd2lkZXIgcmFuZ2Ugb2Ygb2JqZWN0IHNpemVzLCBhbmQKaW4gdHVybiBtb3JlIHBhZ2Utc2l6
ZSBjb21iaW5hdGlvbnMsIHdoaWxlIHVzaW5nIGxlc3MgbWFjaGluZSB0aW1lLgoKU2lnbmVkLW9m
Zi1ieTogTWF0dGhldyBBdWxkIDxtYXR0aGV3LmF1bGRAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTog
Q2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0tLQogLi4uL2dwdS9kcm0v
aTkxNS9nZW0vc2VsZnRlc3RzL2h1Z2VfcGFnZXMuYyAgIHwgMjI4ICsrKysrKy0tLS0tLS0tLS0t
LQogMSBmaWxlIGNoYW5nZWQsIDgwIGluc2VydGlvbnMoKyksIDE0OCBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2h1Z2VfcGFnZXMu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaHVnZV9wYWdlcy5jCmluZGV4
IDY4N2U5YWM5YjU4YS4uYjE3NmQ3MTliZGVmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vc2VsZnRlc3RzL2h1Z2VfcGFnZXMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vc2VsZnRlc3RzL2h1Z2VfcGFnZXMuYwpAQCAtMTMxNiwyMDMgKzEzMTYsMTM3IEBAIHN0
YXRpYyBpbnQgaWd0X3BwZ3R0X2V4aGF1c3RfaHVnZSh2b2lkICphcmcpCiAJcmV0dXJuIGVycjsK
IH0KIAotc3RhdGljIGludCBpZ3RfcHBndHRfaW50ZXJuYWxfaHVnZSh2b2lkICphcmcpCi17Ci0J
c3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IGFyZzsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSA9IGN0eC0+aTkxNTsKLQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2Jq
OwotCXN0YXRpYyBjb25zdCB1bnNpZ25lZCBpbnQgc2l6ZXNbXSA9IHsKLQkJU1pfNjRLLAotCQlT
Wl8xMjhLLAotCQlTWl8yNTZLLAotCQlTWl81MTJLLAotCQlTWl8xTSwKLQkJU1pfMk0sCi0JfTsK
LQlpbnQgaTsKLQlpbnQgZXJyOwotCi0JLyoKLQkgKiBTYW5pdHkgY2hlY2sgdGhhdCB0aGUgSFcg
dXNlcyBodWdlIHBhZ2VzIGNvcnJlY3RseSB0aHJvdWdoIGludGVybmFsCi0JICogLS0gZW5zdXJl
IHRoYXQgb3VyIHdyaXRlcyBsYW5kIGluIHRoZSByaWdodCBwbGFjZS4KLQkgKi8KLQotCWZvciAo
aSA9IDA7IGkgPCBBUlJBWV9TSVpFKHNpemVzKTsgKytpKSB7Ci0JCXVuc2lnbmVkIGludCBzaXpl
ID0gc2l6ZXNbaV07Ci0KLQkJb2JqID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9pbnRlcm5hbChp
OTE1LCBzaXplKTsKLQkJaWYgKElTX0VSUihvYmopKQotCQkJcmV0dXJuIFBUUl9FUlIob2JqKTsK
LQotCQllcnIgPSBpOTE1X2dlbV9vYmplY3RfcGluX3BhZ2VzKG9iaik7Ci0JCWlmIChlcnIpCi0J
CQlnb3RvIG91dF9wdXQ7Ci0KLQkJaWYgKG9iai0+bW0ucGFnZV9zaXplcy5waHlzIDwgSTkxNV9H
VFRfUEFHRV9TSVpFXzY0SykgewotCQkJcHJfaW5mbygiaW50ZXJuYWwgdW5hYmxlIHRvIGFsbG9j
YXRlIGh1Z2UtcGFnZShzKSB3aXRoIHNpemU9JXVcbiIsCi0JCQkJc2l6ZSk7Ci0JCQlnb3RvIG91
dF91bnBpbjsKLQkJfQotCi0JCWVyciA9IGlndF93cml0ZV9odWdlKGN0eCwgb2JqKTsKLQkJaWYg
KGVycikgewotCQkJcHJfZXJyKCJpbnRlcm5hbCB3cml0ZS1odWdlIGZhaWxlZCB3aXRoIHNpemU9
JXVcbiIsCi0JCQkgICAgICAgc2l6ZSk7Ci0JCQlnb3RvIG91dF91bnBpbjsKLQkJfQotCi0JCWk5
MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmopOwotCQlfX2k5MTVfZ2VtX29iamVjdF9wdXRf
cGFnZXMob2JqLCBJOTE1X01NX05PUk1BTCk7Ci0JCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsK
LQl9Ci0KLQlyZXR1cm4gMDsKLQotb3V0X3VucGluOgotCWk5MTVfZ2VtX29iamVjdF91bnBpbl9w
YWdlcyhvYmopOwotb3V0X3B1dDoKLQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Ci0KLQlyZXR1
cm4gZXJyOwotfQordHlwZWRlZiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqCisoKmlndF9j
cmVhdGVfZm4pKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCB1MzIgc2l6ZSwgdTMyIGZs
YWdzKTsKIAogc3RhdGljIGlubGluZSBib29sIGlndF9jYW5fYWxsb2NhdGVfdGhwKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1KQogewogCXJldHVybiBpOTE1LT5tbS5nZW1mcyAmJiBoYXNf
dHJhbnNwYXJlbnRfaHVnZXBhZ2UoKTsKIH0KIAotc3RhdGljIGludCBpZ3RfcHBndHRfZ2VtZnNf
aHVnZSh2b2lkICphcmcpCitzdGF0aWMgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKgoraWd0
X2NyZWF0ZV9zaG1lbShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgdTMyIHNpemUsIHUz
MiBmbGFncykKIHsKLQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gYXJnOwotCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gY3R4LT5pOTE1OwotCXN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0ICpvYmo7Ci0Jc3RhdGljIGNvbnN0IHVuc2lnbmVkIGludCBzaXplc1tdID0gewot
CQlTWl8yTSwKLQkJU1pfNE0sCi0JCVNaXzhNLAotCQlTWl8xNk0sCi0JCVNaXzMyTSwKLQl9Owot
CWludCBpOwotCWludCBlcnI7Ci0KLQkvKgotCSAqIFNhbml0eSBjaGVjayB0aGF0IHRoZSBIVyB1
c2VzIGh1Z2UgcGFnZXMgY29ycmVjdGx5IHRocm91Z2ggZ2VtZnMgLS0KLQkgKiBlbnN1cmUgdGhh
dCBvdXIgd3JpdGVzIGxhbmQgaW4gdGhlIHJpZ2h0IHBsYWNlLgotCSAqLwotCiAJaWYgKCFpZ3Rf
Y2FuX2FsbG9jYXRlX3RocChpOTE1KSkgewotCQlwcl9pbmZvKCJtaXNzaW5nIFRIUCBzdXBwb3J0
LCBza2lwcGluZ1xuIik7Ci0JCXJldHVybiAwOworCQlwcl9pbmZvKCIlcyBtaXNzaW5nIFRIUCBz
dXBwb3J0LCBza2lwcGluZ1xuIiwgX19mdW5jX18pOworCQlyZXR1cm4gRVJSX1BUUigtRU5PREVW
KTsKIAl9CiAKLQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShzaXplcyk7ICsraSkgewotCQl1
bnNpZ25lZCBpbnQgc2l6ZSA9IHNpemVzW2ldOwotCi0JCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9j
cmVhdGVfc2htZW0oaTkxNSwgc2l6ZSk7Ci0JCWlmIChJU19FUlIob2JqKSkKLQkJCXJldHVybiBQ
VFJfRVJSKG9iaik7Ci0KLQkJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmopOwot
CQlpZiAoZXJyKQotCQkJZ290byBvdXRfcHV0OworCXJldHVybiBpOTE1X2dlbV9vYmplY3RfY3Jl
YXRlX3NobWVtKGk5MTUsIHNpemUpOworfQogCi0JCWlmIChvYmotPm1tLnBhZ2Vfc2l6ZXMucGh5
cyA8IEk5MTVfR1RUX1BBR0VfU0laRV8yTSkgewotCQkJcHJfaW5mbygiZmluaXNoaW5nIHRlc3Qg
ZWFybHksIGdlbWZzIHVuYWJsZSB0byBhbGxvY2F0ZSBodWdlLXBhZ2Uocykgd2l0aCBzaXplPSV1
XG4iLAotCQkJCXNpemUpOwotCQkJZ290byBvdXRfdW5waW47Ci0JCX0KK3N0YXRpYyBzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCAqCitpZ3RfY3JlYXRlX2ludGVybmFsKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1LCB1MzIgc2l6ZSwgdTMyIGZsYWdzKQoreworCXJldHVybiBpOTE1X2dl
bV9vYmplY3RfY3JlYXRlX2ludGVybmFsKGk5MTUsIHNpemUpOworfQogCi0JCWVyciA9IGlndF93
cml0ZV9odWdlKGN0eCwgb2JqKTsKLQkJaWYgKGVycikgewotCQkJcHJfZXJyKCJnZW1mcyB3cml0
ZS1odWdlIGZhaWxlZCB3aXRoIHNpemU9JXVcbiIsCi0JCQkgICAgICAgc2l6ZSk7Ci0JCQlnb3Rv
IG91dF91bnBpbjsKLQkJfQorc3RhdGljIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoKK2ln
dF9jcmVhdGVfbG9jYWwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHUzMiBzaXplLCB1
MzIgZmxhZ3MpCit7CisJcmV0dXJuIGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfbG1lbShpOTE1LCBz
aXplLCBmbGFncyk7Cit9CiAKLQkJaTkxNV9nZW1fb2JqZWN0X3VucGluX3BhZ2VzKG9iaik7Ci0J
CV9faTkxNV9nZW1fb2JqZWN0X3B1dF9wYWdlcyhvYmosIEk5MTVfTU1fTk9STUFMKTsKLQkJaTkx
NV9nZW1fb2JqZWN0X3B1dChvYmopOwotCX0KK3N0YXRpYyB1MzIgaWd0X3JhbmRvbV9zaXplKHN0
cnVjdCBybmRfc3RhdGUgKnBybmcsCisJCQkgICB1MzIgbWluX3BhZ2Vfc2l6ZSwKKwkJCSAgIHUz
MiBtYXhfcGFnZV9zaXplKQoreworCXU2NCBtYXNrOworCXUzMiBzaXplOwogCi0JcmV0dXJuIDA7
CisJR0VNX0JVR19PTighaXNfcG93ZXJfb2ZfMihtaW5fcGFnZV9zaXplKSk7CisJR0VNX0JVR19P
TighaXNfcG93ZXJfb2ZfMihtYXhfcGFnZV9zaXplKSk7CisJR0VNX0JVR19PTihtaW5fcGFnZV9z
aXplIDwgUEFHRV9TSVpFKTsKKwlHRU1fQlVHX09OKG1pbl9wYWdlX3NpemUgPiBtYXhfcGFnZV9z
aXplKTsKIAotb3V0X3VucGluOgotCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmopOwot
b3V0X3B1dDoKLQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7CisJbWFzayA9ICgobWF4X3BhZ2Vf
c2l6ZSA8PCAxVUxMKSAtIDEpICYgUEFHRV9NQVNLOworCXNpemUgPSBwcmFuZG9tX3UzMl9zdGF0
ZShwcm5nKSAmIG1hc2s7CisJaWYgKHNpemUgPCBtaW5fcGFnZV9zaXplKQorCQlzaXplIHw9IG1p
bl9wYWdlX3NpemU7CiAKLQlyZXR1cm4gZXJyOworCXJldHVybiBzaXplOwogfQogCi1zdGF0aWMg
aW50IGlndF9wcGd0dF9sbWVtX2h1Z2Uodm9pZCAqYXJnKQorc3RhdGljIGludCBpZ3RfcHBndHRf
c21va2VfaHVnZSh2b2lkICphcmcpCiB7CiAJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9
IGFyZzsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGN0eC0+aTkxNTsKIAlzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwotCXN0YXRpYyBjb25zdCB1bnNpZ25lZCBpbnQg
c2l6ZXNbXSA9IHsKLQkJU1pfNjRLLAotCQlTWl81MTJLLAotCQlTWl8xTSwKLQkJU1pfMk0sCisJ
STkxNV9STkRfU1RBVEUocHJuZyk7CisJc3RydWN0IHsKKwkJaWd0X2NyZWF0ZV9mbiBmbjsKKwkJ
dTMyIG1pbjsKKwkJdTMyIG1heDsKKwl9IGJhY2tlbmRzW10gPSB7CisJCXsgaWd0X2NyZWF0ZV9p
bnRlcm5hbCwgU1pfNjRLLCBTWl8yTSwgIH0sCisJCXsgaWd0X2NyZWF0ZV9zaG1lbSwgICAgU1pf
NjRLLCBTWl8zMk0sIH0sCisJCXsgaWd0X2NyZWF0ZV9sb2NhbCwgICAgU1pfNjRLLCBTWl8xRywg
IH0sCiAJfTsKLQlpbnQgaTsKIAlpbnQgZXJyOwotCi0JaWYgKCFIQVNfTE1FTShpOTE1KSkgewot
CQlwcl9pbmZvKCJkZXZpY2UgbGFja3MgTE1FTSBzdXBwb3J0LCBza2lwcGluZ1xuIik7Ci0JCXJl
dHVybiAwOwotCX0KKwlpbnQgaTsKIAogCS8qCi0JICogU2FuaXR5IGNoZWNrIHRoYXQgdGhlIEhX
IHVzZXMgaHVnZSBwYWdlcyBjb3JyZWN0bHkgdGhyb3VnaCBMTUVNCi0JICogLS0gZW5zdXJlIHRo
YXQgb3VyIHdyaXRlcyBsYW5kIGluIHRoZSByaWdodCBwbGFjZS4KKwkgKiBTYW5pdHkgY2hlY2sg
dGhhdCB0aGUgSFcgdXNlcyBodWdlIHBhZ2VzIGNvcnJlY3RseSB0aHJvdWdoIG91cgorCSAqIHZh
cmlvdXMgYmFja2VuZHMgLS0gZW5zdXJlIHRoYXQgb3VyIHdyaXRlcyBsYW5kIGluIHRoZSByaWdo
dCBwbGFjZS4KIAkgKi8KIAotCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKHNpemVzKTsgKytp
KSB7Ci0JCXVuc2lnbmVkIGludCBzaXplID0gc2l6ZXNbaV07CisJZm9yIChpID0gMDsgaSA8IEFS
UkFZX1NJWkUoYmFja2VuZHMpOyArK2kpIHsKKwkJdTMyIG1pbiA9IGJhY2tlbmRzW2ldLm1pbjsK
KwkJdTMyIG1heCA9IGJhY2tlbmRzW2ldLm1heDsKKwkJdTMyIHNpemUgPSBtYXg7Cit0cnlfYWdh
aW46CisJCXNpemUgPSBpZ3RfcmFuZG9tX3NpemUoJnBybmcsIG1pbiwgcm91bmRkb3duX3Bvd19v
Zl90d28oc2l6ZSkpOwogCi0JCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfbG1lbShpOTE1
LCBzaXplLCBJOTE1X0JPX0FMTE9DX0NPTlRJR1VPVVMpOworCQlvYmogPSBiYWNrZW5kc1tpXS5m
bihpOTE1LCBzaXplLCAwKTsKIAkJaWYgKElTX0VSUihvYmopKSB7CiAJCQllcnIgPSBQVFJfRVJS
KG9iaik7CiAJCQlpZiAoZXJyID09IC1FMkJJRykgewotCQkJCXByX2luZm8oIm9iamVjdCB0b28g
YmlnIGZvciByZWdpb24hXG4iKTsKLQkJCQlyZXR1cm4gMDsKKwkJCQlzaXplID4+PSAxOworCQkJ
CWdvdG8gdHJ5X2FnYWluOworCQkJfSBlbHNlIGlmIChlcnIgPT0gLUVOT0RFVikgeworCQkJCWVy
ciA9IDA7CisJCQkJY29udGludWU7CiAJCQl9CiAKIAkJCXJldHVybiBlcnI7CiAJCX0KIAogCQll
cnIgPSBpOTE1X2dlbV9vYmplY3RfcGluX3BhZ2VzKG9iaik7Ci0JCWlmIChlcnIpCisJCWlmIChl
cnIpIHsKKwkJCWlmIChlcnIgPT0gLUVOWElPKSB7CisJCQkJaTkxNV9nZW1fb2JqZWN0X3B1dChv
YmopOworCQkJCXNpemUgPj49IDE7CisJCQkJZ290byB0cnlfYWdhaW47CisJCQl9CiAJCQlnb3Rv
IG91dF9wdXQ7CisJCX0KIAotCQlpZiAob2JqLT5tbS5wYWdlX3NpemVzLnBoeXMgPCBJOTE1X0dU
VF9QQUdFX1NJWkVfNjRLKSB7Ci0JCQlwcl9pbmZvKCJMTUVNIHVuYWJsZSB0byBhbGxvY2F0ZSBo
dWdlLXBhZ2Uocykgd2l0aCBzaXplPSV1XG4iLAotCQkJCXNpemUpOworCQlpZiAob2JqLT5tbS5w
YWdlX3NpemVzLnBoeXMgPCBtaW4pIHsKKwkJCXByX2luZm8oIiVzIHVuYWJsZSB0byBhbGxvY2F0
ZSBodWdlLXBhZ2Uocykgd2l0aCBzaXplPSV1LCBpPSVkXG4iLAorCQkJCV9fZnVuY19fLCBzaXpl
LCBpKTsKKwkJCWVyciA9IC1FTk9NRU07CiAJCQlnb3RvIG91dF91bnBpbjsKIAkJfQogCiAJCWVy
ciA9IGlndF93cml0ZV9odWdlKGN0eCwgb2JqKTsKIAkJaWYgKGVycikgewotCQkJcHJfZXJyKCJM
TUVNIHdyaXRlLWh1Z2UgZmFpbGVkIHdpdGggc2l6ZT0ldVxuIiwgc2l6ZSk7Ci0JCQlnb3RvIG91
dF91bnBpbjsKKwkJCXByX2VycigiJXMgd3JpdGUtaHVnZSBmYWlsZWQgd2l0aCBzaXplPSV1LCBp
PSVkXG4iLAorCQkJICAgICAgIF9fZnVuY19fLCBzaXplLCBpKTsKIAkJfQotCitvdXRfdW5waW46
CiAJCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmopOwogCQlfX2k5MTVfZ2VtX29iamVj
dF9wdXRfcGFnZXMob2JqLCBJOTE1X01NX05PUk1BTCk7CitvdXRfcHV0OgogCQlpOTE1X2dlbV9v
YmplY3RfcHV0KG9iaik7Ci0JfQogCi0JcmV0dXJuIDA7CisJCWlmIChlcnIgPT0gLUVOT01FTSB8
fCBlcnIgPT0gLUVOWElPKQorCQkJZXJyID0gMDsKIAotb3V0X3VucGluOgotCWk5MTVfZ2VtX29i
amVjdF91bnBpbl9wYWdlcyhvYmopOwotb3V0X3B1dDoKLQlpOTE1X2dlbV9vYmplY3RfcHV0KG9i
aik7CisJCWlmIChlcnIpCisJCQlicmVhazsKIAotCWlmIChlcnIgPT0gLUVOT01FTSkKLQkJZXJy
ID0gMDsKKwkJY29uZF9yZXNjaGVkKCk7CisJfQogCiAJcmV0dXJuIGVycjsKIH0KQEAgLTE4NzYs
OSArMTgxMCw3IEBAIGludCBpOTE1X2dlbV9odWdlX3BhZ2VfbGl2ZV9zZWxmdGVzdHMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCVNVQlRFU1QoaWd0X3BwZ3R0X3Bpbl91cGRhdGUp
LAogCQlTVUJURVNUKGlndF90bXBmc19mYWxsYmFjayksCiAJCVNVQlRFU1QoaWd0X3BwZ3R0X2V4
aGF1c3RfaHVnZSksCi0JCVNVQlRFU1QoaWd0X3BwZ3R0X2dlbWZzX2h1Z2UpLAotCQlTVUJURVNU
KGlndF9wcGd0dF9pbnRlcm5hbF9odWdlKSwKLQkJU1VCVEVTVChpZ3RfcHBndHRfbG1lbV9odWdl
KSwKKwkJU1VCVEVTVChpZ3RfcHBndHRfc21va2VfaHVnZSksCiAJfTsKIAlzdHJ1Y3QgZHJtX2Zp
bGUgKmZpbGU7CiAJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eDsKLS0gCjIuMjAuMQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

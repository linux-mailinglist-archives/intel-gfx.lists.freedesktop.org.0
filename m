Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8957DCD3B2
	for <lists+intel-gfx@lfdr.de>; Sun,  6 Oct 2019 18:50:32 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8E1E26E413;
	Sun,  6 Oct 2019 16:50:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8F55089AC0
 for <intel-gfx@lists.freedesktop.org>; Sun,  6 Oct 2019 16:50:17 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18742848-1500050 
 for multiple; Sun, 06 Oct 2019 17:50:06 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sun,  6 Oct 2019 17:50:00 +0100
Message-Id: <20191006165002.30312-10-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191006165002.30312-1-chris@chris-wilson.co.uk>
References: <20191006165002.30312-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 10/12] drm/i915: Cancel non-persistent contexts
 on close
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Tm9ybWFsbHksIHdlIHJlbHkgb24gb3VyIGhhbmdjaGVjayB0byBwcmV2ZW50IHBlcnNpc3RlbnQg
YmF0Y2hlcyBmcm9tCmhvZ2dpbmcgdGhlIEdQVS4gSG93ZXZlciwgaWYgdGhlIHVzZXIgZGlzYWJs
ZXMgaGFuZ2NoZWNrLCB0aGlzIG1lY2hhbmlzbQpicmVha3MgZG93bi4gRGVzcGl0ZSBvdXIgaW5z
aXN0ZW5jZSB0aGF0IHRoaXMgaXMgdW5zYWZlLCB0aGUgdXNlcnMgYXJlCmVxdWFsbHkgaW5zaXN0
ZW50IHRoYXQgdGhleSB3YW50IHRvIHVzZSBlbmRsZXNzIGJhdGNoZXMgYW5kIHdpbGwgZGlzYWJs
ZQp0aGUgaGFuZ2NoZWNrIG1lY2hhbmlzbS4gV2UgYXJlIGxvb2tpbmcgYXQgcGVyaGFwcyByZXBs
YWNpbmcgaGFuZ2NoZWNrCndpdGggYSBzb2Z0ZXIgbWVjaGFuaXNtLCB0aGF0IHNlbmRzIGEgcHVs
c2UgZG93biB0aGUgZW5naW5lIHRvIGNoZWNrIGlmCml0IGlzIHdlbGwuIFdlIGNhbiB1c2UgdGhl
IHNhbWUgcHJlZW1wdGl2ZSBwdWxzZSB0byBmbHVzaCBhbiBhY3RpdmUKcGVyc2lzdGVudCBjb250
ZXh0IG9mZiB0aGUgR1BVIHVwb24gY29udGV4dCBjbG9zZSwgcHJldmVudGluZyByZXNvdXJjZXMK
YmVpbmcgbG9zdCBhbmQgdW5raWxsYWJsZSByZXF1ZXN0cyByZW1haW5pbmcgb24gdGhlIEdQVSBh
ZnRlciBwcm9jZXNzCnRlcm1pbmF0aW9uLiBUbyBhdm9pZCBjaGFuZ2luZyB0aGUgQUJJIGFuZCBh
Y2NpZGVudGFsbHkgYnJlYWtpbmcKZXhpc3RpbmcgdXNlcnNwYWNlLCB3ZSBtYWtlIHRoZSBwZXJz
aXN0ZW5jZSBvZiBhIGNvbnRleHQgZXhwbGljaXQgYW5kCmVuYWJsZSBpdCBieSBkZWZhdWx0ICht
YXRjaGluZyBjdXJyZW50IEFCSSkuIFVzZXJzcGFjZSBjYW4gb3B0IG91dCBvZgpwZXJzaXN0ZW50
IG1vZGUgKGZvcmNpbmcgcmVxdWVzdHMgdG8gYmUgY2FuY2VsbGVkIHdoZW4gdGhlIGNvbnRleHQg
aXMKY2xvc2VkIGJ5IHByb2Nlc3MgdGVybWluYXRpb24gb3IgZXhwbGljaXRseSkgYnkgYSBjb250
ZXh0IHBhcmFtZXRlci4gVG8KZmFjaWxpdGF0ZSBleGlzdGluZyB1c2UtY2FzZXMgb2YgZGlzYWJs
aW5nIGhhbmdjaGVjaywgaWYgdGhlIG1vZHBhcmFtIGlzCmRpc2FibGVkIChpOTE1LmVuYWJsZV9o
YW5nY2hlY2s9MCksIHdlIGRpc2FibGUgcGVyc2lzdGVuY2UgbW9kZSBieQpkZWZhdWx0LiAgKE5v
dGUsIG9uZSBvZiB0aGUgb3V0Y29tZXMgZm9yIHN1cHBvcnRpbmcgZW5kbGVzcyBtb2RlIHdpbGwg
YmUKdGhlIHJlbW92YWwgb2YgaGFuZ2NoZWNraW5nLCBhdCB3aGljaCBwb2ludCBvcHRpbmcgaW50
byBwZXJzaXN0ZW50IG1vZGUKd2lsbCBiZSBtYW5kYXRvcnksIG9yIG1heWJlIHRoZSBkZWZhdWx0
IHBlcmhhcHMgY29udHJvbGxlZCBieSBjZ3JvdXBzLikKCnYyOiBDaGVjayBmb3IgaGFuZ2NoZWNr
aW5nIGF0IGNvbnRleHQgdGVybWluYXRpb24sIHNvIHRoYXQgd2UgYXJlIG5vdApsZWZ0IHdpdGgg
dW5keWluZyBjb250ZXh0cyBmcm9tIGEgY3JhZnR5IHVzZXIuCgpUZXN0Y2FzZTogaWd0L2dlbV9j
dHhfcGVyc2lzdGVuY2UKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13
aWxzb24uY28udWs+CkNjOiBKb29uYXMgTGFodGluZW4gPGpvb25hcy5sYWh0aW5lbkBsaW51eC5p
bnRlbC5jb20+CkNjOiBNaWNoYcWCIFdpbmlhcnNraSA8bWljaGFsLndpbmlhcnNraUBpbnRlbC5j
b20+CkNjOiBKb24gQmxvb21maWVsZCA8am9uLmJsb29tZmllbGRAaW50ZWwuY29tPgpSZXZpZXdl
ZC1ieTogSm9uIEJsb29tZmllbGQgPGpvbi5ibG9vbWZpZWxkQGludGVsLmNvbT4KLS0tCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jICAgfCAxMzIgKysrKysrKysr
KysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5oICAg
fCAgMTUgKysKIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaCB8
ICAgMSArCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19jb250ZXh0LmMgfCAg
IDIgKwogaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oICAgICAgICAgICAgICAgICAgIHwgIDE1
ICsrCiA1IGZpbGVzIGNoYW5nZWQsIDE2NSBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKaW5kZXggNWQ4MjIxYzdiYTgzLi40NmU1YjNi
NTMyODggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250
ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwpA
QCAtNzAsNiArNzAsNyBAQAogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCiAjaW5jbHVkZSAi
Z3QvaW50ZWxfbHJjX3JlZy5oIgorI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQu
aCIKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfdXNlci5oIgogCiAjaW5jbHVkZSAiaTkxNV9n
ZW1fY29udGV4dC5oIgpAQCAtMjY5LDYgKzI3MCw3OCBAQCB2b2lkIGk5MTVfZ2VtX2NvbnRleHRf
cmVsZWFzZShzdHJ1Y3Qga3JlZiAqcmVmKQogCQlzY2hlZHVsZV93b3JrKCZnYy0+ZnJlZV93b3Jr
KTsKIH0KIAorc3RhdGljIGlubGluZSBzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqCitfX2NvbnRl
eHRfZW5naW5lc19zdGF0aWMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKK3sKKwlyZXR1
cm4gcmN1X2RlcmVmZXJlbmNlX3Byb3RlY3RlZChjdHgtPmVuZ2luZXMsIHRydWUpOworfQorCitz
dGF0aWMgdm9pZCBraWxsX2NvbnRleHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKK3sK
KwlpbnRlbF9lbmdpbmVfbWFza190IHRtcCwgYWN0aXZlLCByZXNldDsKKwlzdHJ1Y3QgaW50ZWxf
Z3QgKmd0ID0gJmN0eC0+aTkxNS0+Z3Q7CisJc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXNfaXRlciBp
dDsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlOworCisJLyoKKwkgKiBJZiB3ZSBhcmUgYWxyZWFkeSBiYW5uZWQsIGl0IHdhcyBkdWUg
dG8gYSBndWlsdHkgcmVxdWVzdCBjYXVzaW5nCisJICogYSByZXNldCBhbmQgdGhlIGVudGlyZSBj
b250ZXh0IGJlaW5nIGV2aWN0ZWQgZnJvbSB0aGUgR1BVLgorCSAqLworCWlmIChpOTE1X2dlbV9j
b250ZXh0X2lzX2Jhbm5lZChjdHgpKQorCQlyZXR1cm47CisKKwlpOTE1X2dlbV9jb250ZXh0X3Nl
dF9iYW5uZWQoY3R4KTsKKworCS8qCisJICogTWFwIHRoZSB1c2VyJ3MgZW5naW5lIGJhY2sgdG8g
dGhlIGFjdHVhbCBlbmdpbmVzOyBvbmUgdmlydHVhbAorCSAqIGVuZ2luZSB3aWxsIGJlIG1hcHBl
ZCB0byBtdWx0aXBsZSBlbmdpbmVzLCBhbmQgdXNpbmcgY3R4LT5lbmdpbmVbXQorCSAqIHRoZSBz
YW1lIGVuZ2luZSBtYXkgYmUgaGF2ZSBtdWx0aXBsZSBpbnN0YW5jZXMgaW4gdGhlIHVzZXIncyBt
YXAuCisJICogSG93ZXZlciwgd2Ugb25seSBjYXJlIGFib3V0IHBlbmRpbmcgcmVxdWVzdHMsIHNv
IG9ubHkgaW5jbHVkZQorCSAqIGVuZ2luZXMgb24gd2hpY2ggdGhlcmUgYXJlIGluY29tcGxldGUg
cmVxdWVzdHMuCisJICovCisJYWN0aXZlID0gMDsKKwlmb3JfZWFjaF9nZW1fZW5naW5lKGNlLCBf
X2NvbnRleHRfZW5naW5lc19zdGF0aWMoY3R4KSwgaXQpIHsKKwkJc3RydWN0IGRtYV9mZW5jZSAq
ZmVuY2U7CisKKwkJaWYgKCFjZS0+dGltZWxpbmUpCisJCQljb250aW51ZTsKKworCQlmZW5jZSA9
IGk5MTVfYWN0aXZlX2ZlbmNlX2dldCgmY2UtPnRpbWVsaW5lLT5sYXN0X3JlcXVlc3QpOworCQlp
ZiAoIWZlbmNlKQorCQkJY29udGludWU7CisKKwkJZW5naW5lID0gdG9fcmVxdWVzdChmZW5jZSkt
PmVuZ2luZTsKKwkJaWYgKEhBU19FWEVDTElTVFMoZ3QtPmk5MTUpKQorCQkJZW5naW5lID0gaW50
ZWxfY29udGV4dF9pbmZsaWdodChjZSk7CisJCWlmIChlbmdpbmUpCisJCQlhY3RpdmUgfD0gZW5n
aW5lLT5tYXNrOworCisJCWRtYV9mZW5jZV9wdXQoZmVuY2UpOworCX0KKworCS8qCisJICogU2Vu
ZCBhICJoaWdoIHByaW9yaXR5IHB1bHNlIiBkb3duIHRoZSBlbmdpbmUgdG8gY2F1c2UgdGhlCisJ
ICogY3VycmVudCByZXF1ZXN0IHRvIGJlIG1vbWVudGFyaWx5IHByZWVtcHRlZC4gKElmIGl0IGZh
aWxzIHRvCisJICogYmUgcHJlZW1wdGVkLCBpdCB3aWxsIGJlIHJlc2V0KS4gQXMgd2UgaGF2ZSBt
YXJrZWQgb3VyIGNvbnRleHQKKwkgKiBhcyBiYW5uZWQsIGFueSBpbmNvbXBsZXRlIHJlcXVlc3Qs
IGluY2x1ZGluZyBhbnkgcnVubmluZywgd2lsbAorCSAqIGJlIHNraXBwZWQgZm9sbG93aW5nIHRo
ZSBwcmVlbXB0aW9uLgorCSAqLworCXJlc2V0ID0gMDsKKwlmb3JfZWFjaF9lbmdpbmVfbWFza2Vk
KGVuZ2luZSwgZ3QtPmk5MTUsIGFjdGl2ZSwgdG1wKQorCQlpZiAoaW50ZWxfZW5naW5lX3B1bHNl
KGVuZ2luZSkpCisJCQlyZXNldCB8PSBlbmdpbmUtPm1hc2s7CisKKwkvKgorCSAqIElmIHdlIGFy
ZSB1bmFibGUgdG8gc2VuZCBhIHByZWVtcHRpdmUgcHVsc2UgdG8gYnVtcAorCSAqIHRoZSBjb250
ZXh0IGZyb20gdGhlIEdQVSwgd2UgaGF2ZSB0byByZXNvcnQgdG8gYSBmdWxsCisJICogcmVzZXQu
IFdlIGhvcGUgdGhlIGNvbGxhdGVyYWwgZGFtYWdlIGlzIHdvcnRoIGl0LgorCSAqLworCWlmIChy
ZXNldCkKKwkJaW50ZWxfZ3RfaGFuZGxlX2Vycm9yKGd0LCByZXNldCwgMCwKKwkJCQkgICAgICAi
Y29udGV4dCBjbG9zdXJlIGluICVzIiwgY3R4LT5uYW1lKTsKK30KKwogc3RhdGljIHZvaWQgY29u
dGV4dF9jbG9zZShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQogewogCXN0cnVjdCBpOTE1
X2FkZHJlc3Nfc3BhY2UgKnZtOwpAQCAtMjkxLDkgKzM2NCw0NyBAQCBzdGF0aWMgdm9pZCBjb250
ZXh0X2Nsb3NlKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCiAJbHV0X2Nsb3NlKGN0eCk7
CiAKIAltdXRleF91bmxvY2soJmN0eC0+bXV0ZXgpOworCisJLyoKKwkgKiBJZiB0aGUgdXNlciBo
YXMgZGlzYWJsZWQgaGFuZ2NoZWNraW5nLCB3ZSBjYW4gbm90IGJlIHN1cmUgdGhhdAorCSAqIHRo
ZSBiYXRjaGVzIHdpbGwgZXZlciBjb21wbGV0ZSBhZnRlciB0aGUgY29udGV4dCBpcyBjbG9zZWQs
CisJICoga2VlcCB0aGUgY29udGV4dCBhbmQgYWxsIHJlc291cmNlcyBwaW5uZWQgZm9yZXZlci4g
U28gaW4gdGhpcworCSAqIGNhc2Ugd2Ugb3B0IHRvIGZvcmNpYmx5IGtpbGwgb2ZmIGFsbCByZW1h
aW5pbmcgcmVxdWVzdHMgb24KKwkgKiBjb250ZXh0IGNsb3NlLgorCSAqLworCWlmICghaTkxNV9n
ZW1fY29udGV4dF9pc19wZXJzaXN0ZW50KGN0eCkgfHwKKwkgICAgIWk5MTVfbW9kcGFyYW1zLmVu
YWJsZV9oYW5nY2hlY2spCisJCWtpbGxfY29udGV4dChjdHgpOworCiAJaTkxNV9nZW1fY29udGV4
dF9wdXQoY3R4KTsKIH0KIAorc3RhdGljIGludCBfX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsIGJvb2wgc3RhdGUpCit7CisJaWYgKGk5MTVfZ2Vt
X2NvbnRleHRfaXNfcGVyc2lzdGVudChjdHgpID09IHN0YXRlKQorCQlyZXR1cm4gMDsKKworCWlm
IChzdGF0ZSkgeworCQkvKgorCQkgKiBPbmx5IGNvbnRleHRzIHRoYXQgYXJlIHNob3J0LWxpdmVk
IFt0aGF0IHdpbGwgZXhwaXJlIG9yIGJlCisJCSAqIHJlc2V0XSBhcmUgYWxsb3dlZCB0byBzdXJ2
aXZlIHBhc3QgdGVybWluYXRpb24uIFdlIHJlcXVpcmUKKwkJICogaGFuZ2NoZWNrIHRvIGVuc3Vy
ZSB0aGF0IHRoZSBwZXJzaXN0ZW50IHJlcXVlc3RzIGFyZSBoZWFsdGh5LgorCQkgKi8KKwkJaWYg
KCFpOTE1X21vZHBhcmFtcy5lbmFibGVfaGFuZ2NoZWNrKQorCQkJcmV0dXJuIC1FSU5WQUw7CisK
KwkJaTkxNV9nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoY3R4KTsKKwl9IGVsc2UgeworCQkv
KiBUbyBjYW5jZWwgYSBjb250ZXh0IHdlIHVzZSAicHJlZW1wdC10by1pZGxlIiAqLworCQlpZiAo
IShjdHgtPmk5MTUtPmNhcHMuc2NoZWR1bGVyICYgSTkxNV9TQ0hFRFVMRVJfQ0FQX1BSRUVNUFRJ
T04pKQorCQkJcmV0dXJuIC1FTk9ERVY7CisKKwkJaTkxNV9nZW1fY29udGV4dF9jbGVhcl9wZXJz
aXN0ZW5jZShjdHgpOworCX0KKworCXJldHVybiAwOworfQorCiBzdGF0aWMgc3RydWN0IGk5MTVf
Z2VtX2NvbnRleHQgKgogX19jcmVhdGVfY29udGV4dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKIHsKQEAgLTMyOCw2ICs0MzksNyBAQCBfX2NyZWF0ZV9jb250ZXh0KHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1KQogCiAJaTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmFibGUoY3R4
KTsKIAlpOTE1X2dlbV9jb250ZXh0X3NldF9yZWNvdmVyYWJsZShjdHgpOworCV9fY29udGV4dF9z
ZXRfcGVyc2lzdGVuY2UoY3R4LCB0cnVlIC8qIGNncm91cCBob29rPyAqLyk7CiAKIAlmb3IgKGkg
PSAwOyBpIDwgQVJSQVlfU0laRShjdHgtPmhhbmdfdGltZXN0YW1wKTsgaSsrKQogCQljdHgtPmhh
bmdfdGltZXN0YW1wW2ldID0gamlmZmllcyAtIENPTlRFWFRfRkFTVF9IQU5HX0pJRkZJRVM7CkBA
IC00ODQsNiArNTk2LDcgQEAgaTkxNV9nZW1fY29udGV4dF9jcmVhdGVfa2VybmVsKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1LCBpbnQgcHJpbykKIAkJcmV0dXJuIGN0eDsKIAogCWk5MTVf
Z2VtX2NvbnRleHRfY2xlYXJfYmFubmFibGUoY3R4KTsKKwlpOTE1X2dlbV9jb250ZXh0X3NldF9w
ZXJzaXN0ZW5jZShjdHgpOwogCWN0eC0+c2NoZWQucHJpb3JpdHkgPSBJOTE1X1VTRVJfUFJJT1JJ
VFkocHJpbyk7CiAKIAlHRU1fQlVHX09OKCFpOTE1X2dlbV9jb250ZXh0X2lzX2tlcm5lbChjdHgp
KTsKQEAgLTE1OTQsNiArMTcwNywxNiBAQCBnZXRfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fY29u
dGV4dCAqY3R4LAogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyBpbnQKK3NldF9wZXJzaXN0ZW5j
ZShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQljb25zdCBzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX2NvbnRleHRfcGFyYW0gKmFyZ3MpCit7CisJaWYgKGFyZ3MtPnNpemUpCisJCXJldHVybiAt
RUlOVkFMOworCisJcmV0dXJuIF9fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoY3R4LCBhcmdzLT52
YWx1ZSk7Cit9CisKIHN0YXRpYyBpbnQgY3R4X3NldHBhcmFtKHN0cnVjdCBkcm1faTkxNV9maWxl
X3ByaXZhdGUgKmZwcml2LAogCQkJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKIAkJCXN0
cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbSAqYXJncykKQEAgLTE2NzEsNiArMTc5NCwx
MCBAQCBzdGF0aWMgaW50IGN0eF9zZXRwYXJhbShzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRl
ICpmcHJpdiwKIAkJcmV0ID0gc2V0X2VuZ2luZXMoY3R4LCBhcmdzKTsKIAkJYnJlYWs7CiAKKwlj
YXNlIEk5MTVfQ09OVEVYVF9QQVJBTV9QRVJTSVNURU5DRToKKwkJcmV0ID0gc2V0X3BlcnNpc3Rl
bmNlKGN0eCwgYXJncyk7CisJCWJyZWFrOworCiAJY2FzZSBJOTE1X0NPTlRFWFRfUEFSQU1fQkFO
X1BFUklPRDoKIAlkZWZhdWx0OgogCQlyZXQgPSAtRUlOVkFMOwpAQCAtMjEyMyw2ICsyMjUwLDEx
IEBAIGludCBpOTE1X2dlbV9jb250ZXh0X2dldHBhcmFtX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiAJCXJldCA9IGdldF9lbmdpbmVzKGN0eCwgYXJncyk7CiAJCWJy
ZWFrOwogCisJY2FzZSBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0U6CisJCWFyZ3MtPnNp
emUgPSAwOworCQlhcmdzLT52YWx1ZSA9IGk5MTVfZ2VtX2NvbnRleHRfaXNfcGVyc2lzdGVudChj
dHgpOworCQlicmVhazsKKwogCWNhc2UgSTkxNV9DT05URVhUX1BBUkFNX0JBTl9QRVJJT0Q6CiAJ
ZGVmYXVsdDoKIAkJcmV0ID0gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fY29udGV4dC5oCmluZGV4IDkyMzQ1ODY4MzBkMS4uMmVlYzAzNTM4MmEyIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgKQEAgLTc2LDYgKzc2LDIx
IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X2dlbV9jb250ZXh0X2NsZWFyX3JlY292ZXJhYmxl
KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjCiAJY2xlYXJfYml0KFVDT05URVhUX1JFQ09WRVJB
QkxFLCAmY3R4LT51c2VyX2ZsYWdzKTsKIH0KIAorc3RhdGljIGlubGluZSBib29sIGk5MTVfZ2Vt
X2NvbnRleHRfaXNfcGVyc2lzdGVudChjb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4
KQoreworCXJldHVybiB0ZXN0X2JpdChVQ09OVEVYVF9QRVJTSVNURU5DRSwgJmN0eC0+dXNlcl9m
bGFncyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X2dlbV9jb250ZXh0X3NldF9wZXJz
aXN0ZW5jZShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQoreworCXNldF9iaXQoVUNPTlRF
WFRfUEVSU0lTVEVOQ0UsICZjdHgtPnVzZXJfZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIHZv
aWQgaTkxNV9nZW1fY29udGV4dF9jbGVhcl9wZXJzaXN0ZW5jZShzdHJ1Y3QgaTkxNV9nZW1fY29u
dGV4dCAqY3R4KQoreworCWNsZWFyX2JpdChVQ09OVEVYVF9QRVJTSVNURU5DRSwgJmN0eC0+dXNl
cl9mbGFncyk7Cit9CisKIHN0YXRpYyBpbmxpbmUgYm9vbCBpOTE1X2dlbV9jb250ZXh0X2lzX2Jh
bm5lZChjb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQogewogCXJldHVybiB0ZXN0
X2JpdChDT05URVhUX0JBTk5FRCwgJmN0eC0+ZmxhZ3MpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKaW5kZXggYWI4ZTEzNjdkZmM4Li5h
M2VjZDE5ZjIzMDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9jb250ZXh0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2Vt
X2NvbnRleHRfdHlwZXMuaApAQCAtMTM3LDYgKzEzNyw3IEBAIHN0cnVjdCBpOTE1X2dlbV9jb250
ZXh0IHsKICNkZWZpbmUgVUNPTlRFWFRfTk9fRVJST1JfQ0FQVFVSRQkxCiAjZGVmaW5lIFVDT05U
RVhUX0JBTk5BQkxFCQkyCiAjZGVmaW5lIFVDT05URVhUX1JFQ09WRVJBQkxFCQkzCisjZGVmaW5l
IFVDT05URVhUX1BFUlNJU1RFTkNFCQk0CiAKIAkvKioKIAkgKiBAZmxhZ3M6IHNtYWxsIHNldCBv
ZiBib29sZWFucwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0
cy9tb2NrX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9j
a19jb250ZXh0LmMKaW5kZXggNzRkZGQ2ODJjOWNkLi4yOWI4OTg0ZjBlNDcgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19jb250ZXh0LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuYwpAQCAtMjIs
NiArMjIsOCBAQCBtb2NrX2NvbnRleHQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJ
SU5JVF9MSVNUX0hFQUQoJmN0eC0+bGluayk7CiAJY3R4LT5pOTE1ID0gaTkxNTsKIAorCWk5MTVf
Z2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGN0eCk7CisKIAltdXRleF9pbml0KCZjdHgtPmVu
Z2luZXNfbXV0ZXgpOwogCWUgPSBkZWZhdWx0X2VuZ2luZXMoY3R4KTsKIAlpZiAoSVNfRVJSKGUp
KQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oIGIvaW5jbHVkZS91YXBp
L2RybS9pOTE1X2RybS5oCmluZGV4IDMwYzU0MjE0NDAxNi4uZWI5ZTcwNGQ3MTdhIDEwMDY0NAot
LS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKKysrIGIvaW5jbHVkZS91YXBpL2RybS9p
OTE1X2RybS5oCkBAIC0xNTY1LDYgKzE1NjUsMjEgQEAgc3RydWN0IGRybV9pOTE1X2dlbV9jb250
ZXh0X3BhcmFtIHsKICAqICAgaTkxNV9jb250ZXh0X2VuZ2luZXNfYm9uZCAoSTkxNV9DT05URVhU
X0VOR0lORVNfRVhUX0JPTkQpCiAgKi8KICNkZWZpbmUgSTkxNV9DT05URVhUX1BBUkFNX0VOR0lO
RVMJMHhhCisKKy8qCisgKiBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0U6CisgKgorICog
QWxsb3cgdGhlIGNvbnRleHQgYW5kIGFjdGl2ZSByZW5kZXJpbmcgdG8gc3Vydml2ZSB0aGUgcHJv
Y2VzcyB1bnRpbAorICogY29tcGxldGlvbi4gUGVyc2lzdGVuY2UgYWxsb3dzIGZpcmUtYW5kLWZv
cmdldCBjbGllbnRzIHRvIHF1ZXVlIHVwIGEKKyAqIGJ1bmNoIG9mIHdvcmssIGhhbmQgdGhlIG91
dHB1dCBvdmVyIHRvIGEgZGlzcGxheSBzZXJ2ZXIgYW5kIHRoZSBxdWl0LgorICogSWYgdGhlIGNv
bnRleHQgaXMgbm90IG1hcmtlZCBhcyBwZXJzaXN0ZW50LCB1cG9uIGNsb3NpbmcgKGVpdGhlciB2
aWEKKyAqIGFuIGV4cGxpY2l0IERSTV9JOTE1X0dFTV9DT05URVhUX0RFU1RST1kgb3IgaW1wbGlj
aXRseSBmcm9tIGZpbGUgY2xvc3VyZQorICogb3IgcHJvY2VzcyB0ZXJtaW5hdGlvbiksIHRoZSBj
b250ZXh0IGFuZCBhbnkgb3V0c3RhbmRpbmcgcmVxdWVzdHMgd2lsbCBiZQorICogY2FuY2VsbGVk
IChhbmQgZXhwb3J0ZWQgZmVuY2VzIGZvciBjYW5jZWxsZWQgcmVxdWVzdHMgbWFya2VkIGFzIC1F
SU8pLgorICoKKyAqIEJ5IGRlZmF1bHQsIG5ldyBjb250ZXh0cyBhbGxvdyBwZXJzaXN0ZW5jZS4K
KyAqLworI2RlZmluZSBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0UJMHhiCiAvKiBNdXN0
IGJlIGtlcHQgY29tcGFjdCAtLSBubyBob2xlcyBhbmQgd2VsbCBkb2N1bWVudGVkICovCiAKIAlf
X3U2NCB2YWx1ZTsKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4

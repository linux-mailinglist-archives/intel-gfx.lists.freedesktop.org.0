Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 632C4B261B
	for <lists+intel-gfx@lfdr.de>; Fri, 13 Sep 2019 21:32:09 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 94EBB6F445;
	Fri, 13 Sep 2019 19:32:07 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2AC006F444
 for <intel-gfx@lists.freedesktop.org>; Fri, 13 Sep 2019 19:32:06 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 13 Sep 2019 12:32:05 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,492,1559545200"; d="scan'208";a="190405609"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga006.jf.intel.com with SMTP; 13 Sep 2019 12:32:01 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 13 Sep 2019 22:32:00 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 13 Sep 2019 22:31:54 +0300
Message-Id: <20190913193157.9556-2-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190913193157.9556-1-ville.syrjala@linux.intel.com>
References: <20190913193157.9556-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/4] drm/i915: Replace is_planar_yuv_format()
 with drm_format_info_is_yuv_semiplanar()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClRo
ZXJlJ3MgYSBoZWxwZXIgaW4gZHJtX2ZvdXJjYy5oIHRoZXNlIGRheXMgdG8gY2hlY2sgb2Ygd2Un
cmUgZGVhbGluZwp3aXRoIGEgdHdvIHBsYW5lIFlVViBmb3JtYXQuIE1ha2UgdXNlIGlmIGl0LgoK
QWxzbyBzL3BsYW5lL2NvbG9yX3BsYW5lLyBpbiBza2xfcGxhbmVfcmVsYXRpdmVfZGF0YV9yYXRl
KCkgdG8gcmVkdWNlCnRoZSBjb25mdXNpb24uCgpSZXZpZXdlZC1ieTogTWFhcnRlbiBMYW5raG9y
c3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogVmls
bGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiAuLi4vZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmMgfCAgNSArKy0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAxMCArKystLS0tCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaCAgfCAgMyArKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMgICB8IDIwICsrKy0tLS0tLS0t
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nwcml0ZS5oICAgfCAgMSAt
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAyNyArKysr
KysrKystLS0tLS0tLS0tCiA2IGZpbGVzIGNoYW5nZWQsIDI3IGluc2VydGlvbnMoKyksIDM5IGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYXRvbWljX3BsYW5lLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0
b21pY19wbGFuZS5jCmluZGV4IGQxZmNkZjIwNmRhNC4uNDc2ZWYwOTA2YmEwIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmMKQEAgLTE0
NCw2ICsxNDQsNyBAQCBpbnQgaW50ZWxfcGxhbmVfYXRvbWljX2NoZWNrX3dpdGhfc3RhdGUoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjXwogCQkJCQlzdHJ1Y3QgaW50ZWxf
cGxhbmVfc3RhdGUgKm5ld19wbGFuZV9zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBs
YW5lID0gdG9faW50ZWxfcGxhbmUobmV3X3BsYW5lX3N0YXRlLT5iYXNlLnBsYW5lKTsKKwljb25z
dCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9IG5ld19wbGFuZV9zdGF0ZS0+YmFzZS5mYjsK
IAlpbnQgcmV0OwogCiAJbmV3X2NydGNfc3RhdGUtPmFjdGl2ZV9wbGFuZXMgJj0gfkJJVChwbGFu
ZS0+aWQpOwpAQCAtMTY0LDExICsxNjUsMTEgQEAgaW50IGludGVsX3BsYW5lX2F0b21pY19jaGVj
a193aXRoX3N0YXRlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y18KIAkJ
bmV3X2NydGNfc3RhdGUtPmFjdGl2ZV9wbGFuZXMgfD0gQklUKHBsYW5lLT5pZCk7CiAKIAlpZiAo
bmV3X3BsYW5lX3N0YXRlLT5iYXNlLnZpc2libGUgJiYKLQkgICAgaXNfcGxhbmFyX3l1dl9mb3Jt
YXQobmV3X3BsYW5lX3N0YXRlLT5iYXNlLmZiLT5mb3JtYXQtPmZvcm1hdCkpCisJICAgIGRybV9m
b3JtYXRfaW5mb19pc195dXZfc2VtaXBsYW5hcihmYi0+Zm9ybWF0KSkKIAkJbmV3X2NydGNfc3Rh
dGUtPm52MTJfcGxhbmVzIHw9IEJJVChwbGFuZS0+aWQpOwogCiAJaWYgKG5ld19wbGFuZV9zdGF0
ZS0+YmFzZS52aXNpYmxlICYmCi0JICAgIG5ld19wbGFuZV9zdGF0ZS0+YmFzZS5mYi0+Zm9ybWF0
LT5mb3JtYXQgPT0gRFJNX0ZPUk1BVF9DOCkKKwkgICAgZmItPmZvcm1hdC0+Zm9ybWF0ID09IERS
TV9GT1JNQVRfQzgpCiAJCW5ld19jcnRjX3N0YXRlLT5jOF9wbGFuZXMgfD0gQklUKHBsYW5lLT5p
ZCk7CiAKIAlpZiAobmV3X3BsYW5lX3N0YXRlLT5iYXNlLnZpc2libGUgfHwgb2xkX3BsYW5lX3N0
YXRlLT5iYXNlLnZpc2libGUpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheS5jCmluZGV4IDRlMDAxMTEzZTgyOC4uMWYyNmVlOGFkYzRlIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMzU0NSw3ICszNTQ1LDcg
QEAgaW50IHNrbF9jaGVja19wbGFuZV9zdXJmYWNlKHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAq
cGxhbmVfc3RhdGUpCiAJICogSGFuZGxlIHRoZSBBVVggc3VyZmFjZSBmaXJzdCBzaW5jZQogCSAq
IHRoZSBtYWluIHN1cmZhY2Ugc2V0dXAgZGVwZW5kcyBvbiBpdC4KIAkgKi8KLQlpZiAoaXNfcGxh
bmFyX3l1dl9mb3JtYXQoZmItPmZvcm1hdC0+Zm9ybWF0KSkgeworCWlmIChkcm1fZm9ybWF0X2lu
Zm9faXNfeXV2X3NlbWlwbGFuYXIoZmItPmZvcm1hdCkpIHsKIAkJcmV0ID0gc2tsX2NoZWNrX252
MTJfYXV4X3N1cmZhY2UocGxhbmVfc3RhdGUpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsK
QEAgLTU0NjMsNyArNTQ2Myw3IEBAIHNrbF91cGRhdGVfc2NhbGVyKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLCBib29sIGZvcmNlX2RldGFjaCwKIAkJcmV0dXJuIDA7CiAJfQog
Ci0JaWYgKGZvcm1hdCAmJiBpc19wbGFuYXJfeXV2X2Zvcm1hdChmb3JtYXQtPmZvcm1hdCkgJiYK
KwlpZiAoZm9ybWF0ICYmIGRybV9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBsYW5hcihmb3JtYXQp
ICYmCiAJICAgIChzcmNfaCA8IFNLTF9NSU5fWVVWXzQyMF9TUkNfSCB8fCBzcmNfdyA8IFNLTF9N
SU5fWVVWXzQyMF9TUkNfVykpIHsKIAkJRFJNX0RFQlVHX0tNUygiUGxhbmFyIFlVVjogc3JjIGRp
bWVuc2lvbnMgbm90IG1ldFxuIik7CiAJCXJldHVybiAtRUlOVkFMOwpAQCAtNTU0MCw3ICs1NTQw
LDcgQEAgc3RhdGljIGludCBza2xfdXBkYXRlX3NjYWxlcl9wbGFuZShzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAogCS8qIFByZS1nZW4xMSBhbmQgU0RSIHBsYW5lcyBhbHdh
eXMgbmVlZCBhIHNjYWxlciBmb3IgcGxhbmFyIGZvcm1hdHMuICovCiAJaWYgKCFpY2xfaXNfaGRy
X3BsYW5lKGRldl9wcml2LCBpbnRlbF9wbGFuZS0+aWQpICYmCi0JICAgIGZiICYmIGlzX3BsYW5h
cl95dXZfZm9ybWF0KGZiLT5mb3JtYXQtPmZvcm1hdCkpCisJICAgIGZiICYmIGRybV9mb3JtYXRf
aW5mb19pc195dXZfc2VtaXBsYW5hcihmYi0+Zm9ybWF0KSkKIAkJbmVlZF9zY2FsZXIgPSB0cnVl
OwogCiAJcmV0ID0gc2tsX3VwZGF0ZV9zY2FsZXIoY3J0Y19zdGF0ZSwgZm9yY2VfZGV0YWNoLApA
QCAtMTQ1NTIsNyArMTQ1NTIsNyBAQCBpbnRlbF9jbGVhbnVwX3BsYW5lX2ZiKHN0cnVjdCBkcm1f
cGxhbmUgKnBsYW5lLAogCiBpbnQKIHNrbF9tYXhfc2NhbGUoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JICAgICAgdTMyIHBpeGVsX2Zvcm1hdCkKKwkgICAgICBj
b25zdCBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvICpmb3JtYXQpCiB7CiAJc3RydWN0IGludGVsX2Ny
dGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPmJhc2UuY3J0Yyk7CiAJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBA
IC0xNDU3Nyw3ICsxNDU3Nyw3IEBAIHNrbF9tYXhfc2NhbGUoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJICogICAgICAgICAgICBvcgogCSAqICAgIGNkY2xrL2Ny
dGNfY2xvY2sKIAkgKi8KLQltdWx0ID0gaXNfcGxhbmFyX3l1dl9mb3JtYXQocGl4ZWxfZm9ybWF0
KSA/IDIgOiAzOworCW11bHQgPSBkcm1fZm9ybWF0X2luZm9faXNfeXV2X3NlbWlwbGFuYXIoZm9y
bWF0KSA/IDIgOiAzOwogCXRtcGNsazEgPSAoMSA8PCAxNikgKiBtdWx0IC0gMTsKIAl0bXBjbGsy
ID0gKDEgPDwgOCkgKiAoKG1heF9kb3RjbGsgPDwgOCkgLyBjcnRjX2Nsb2NrKTsKIAltYXhfc2Nh
bGUgPSBtaW4odG1wY2xrMSwgdG1wY2xrMik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5oCmluZGV4IGY0ZGRkZTE3MTY1NS4uNjYzMzBmY2IxMGQ0IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaApAQCAtMzQsNiAr
MzQsNyBAQCBzdHJ1Y3QgZHJtX2Nvbm5lY3RvcjsKIHN0cnVjdCBkcm1fZGV2aWNlOwogc3RydWN0
IGRybV9lbmNvZGVyOwogc3RydWN0IGRybV9maWxlOworc3RydWN0IGRybV9mb3JtYXRfaW5mbzsK
IHN0cnVjdCBkcm1fZnJhbWVidWZmZXI7CiBzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfc3RhdGVfYnVm
Owogc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Q7CkBAIC01NDgsNyArNTQ5LDcgQEAgdm9pZCBp
bnRlbF9jcnRjX2FybV9maWZvX3VuZGVycnVuKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogdTE2
IHNrbF9zY2FsZXJfY2FsY19waGFzZShpbnQgc3ViLCBpbnQgc2NhbGUsIGJvb2wgY2hyb21hX2Nl
bnRlcik7CiBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfY3J0YyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSk7CiBpbnQgc2tsX21heF9zY2FsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJICB1MzIgcGl4ZWxfZm9ybWF0KTsKKwkJICBjb25zdCBz
dHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvICpmb3JtYXQpOwogdTMyIGdsa19wbGFuZV9jb2xvcl9jdGwo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQljb25zdCBzdHJ1
Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKTsKIHUzMiBnbGtfcGxhbmVfY29sb3Jf
Y3RsX2NydGMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKaW5kZXggZTQxNWIwYWQ0
YTQyLi43YTcwNzhkMGJhMjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfc3ByaXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9zcHJpdGUuYwpAQCAtNDgsMTkgKzQ4LDYgQEAKICNpbmNsdWRlICJpbnRlbF9wc3IuaCIKICNp
bmNsdWRlICJpbnRlbF9zcHJpdGUuaCIKIAotYm9vbCBpc19wbGFuYXJfeXV2X2Zvcm1hdCh1MzIg
cGl4ZWxmb3JtYXQpCi17Ci0Jc3dpdGNoIChwaXhlbGZvcm1hdCkgewotCWNhc2UgRFJNX0ZPUk1B
VF9OVjEyOgotCWNhc2UgRFJNX0ZPUk1BVF9QMDEwOgotCWNhc2UgRFJNX0ZPUk1BVF9QMDEyOgot
CWNhc2UgRFJNX0ZPUk1BVF9QMDE2OgotCQlyZXR1cm4gdHJ1ZTsKLQlkZWZhdWx0OgotCQlyZXR1
cm4gZmFsc2U7Ci0JfQotfQotCiBpbnQgaW50ZWxfdXNlY3NfdG9fc2NhbmxpbmVzKGNvbnN0IHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlLAogCQkJICAgICBpbnQgdXNlY3Mp
CiB7CkBAIC0zNjEsNiArMzQ4LDcgQEAgc2tsX3Byb2dyYW1fc2NhbGVyKHN0cnVjdCBpbnRlbF9w
bGFuZSAqcGxhbmUsCiAJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVf
c3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShw
bGFuZS0+YmFzZS5kZXYpOworCWNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gcGxh
bmVfc3RhdGUtPmJhc2UuZmI7CiAJZW51bSBwaXBlIHBpcGUgPSBwbGFuZS0+cGlwZTsKIAlpbnQg
c2NhbGVyX2lkID0gcGxhbmVfc3RhdGUtPnNjYWxlcl9pZDsKIAljb25zdCBzdHJ1Y3QgaW50ZWxf
c2NhbGVyICpzY2FsZXIgPQpAQCAtMzgxLDcgKzM2OSw3IEBAIHNrbF9wcm9ncmFtX3NjYWxlcihz
dHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lLAogCQkJCSAgICAgIDAsIElOVF9NQVgpOwogCiAJLyog
VE9ETzogaGFuZGxlIHN1Yi1waXhlbCBjb29yZGluYXRlcyAqLwotCWlmIChpc19wbGFuYXJfeXV2
X2Zvcm1hdChwbGFuZV9zdGF0ZS0+YmFzZS5mYi0+Zm9ybWF0LT5mb3JtYXQpICYmCisJaWYgKGRy
bV9mb3JtYXRfaW5mb19pc195dXZfc2VtaXBsYW5hcihmYi0+Zm9ybWF0KSAmJgogCSAgICAhaWNs
X2lzX2hkcl9wbGFuZShkZXZfcHJpdiwgcGxhbmUtPmlkKSkgewogCQl5X2hwaGFzZSA9IHNrbF9z
Y2FsZXJfY2FsY19waGFzZSgxLCBoc2NhbGUsIGZhbHNlKTsKIAkJeV92cGhhc2UgPSBza2xfc2Nh
bGVyX2NhbGNfcGhhc2UoMSwgdnNjYWxlLCBmYWxzZSk7CkBAIC0xNzkwLDcgKzE3NzgsNyBAQCBz
dGF0aWMgaW50IHNrbF9wbGFuZV9jaGVja19udjEyX3JvdGF0aW9uKGNvbnN0IHN0cnVjdCBpbnRl
bF9wbGFuZV9zdGF0ZSAqcGxhbmVfcwogCWludCBzcmNfdyA9IGRybV9yZWN0X3dpZHRoKCZwbGFu
ZV9zdGF0ZS0+YmFzZS5zcmMpID4+IDE2OwogCiAJLyogRGlzcGxheSBXQSAjMTEwNiAqLwotCWlm
IChpc19wbGFuYXJfeXV2X2Zvcm1hdChmYi0+Zm9ybWF0LT5mb3JtYXQpICYmIHNyY193ICYgMyAm
JgorCWlmIChkcm1fZm9ybWF0X2luZm9faXNfeXV2X3NlbWlwbGFuYXIoZmItPmZvcm1hdCkgJiYg
c3JjX3cgJiAzICYmCiAJICAgIChyb3RhdGlvbiA9PSBEUk1fTU9ERV9ST1RBVEVfMjcwIHx8CiAJ
ICAgICByb3RhdGlvbiA9PSAoRFJNX01PREVfUkVGTEVDVF9YIHwgRFJNX01PREVfUk9UQVRFXzkw
KSkpIHsKIAkJRFJNX0RFQlVHX0tNUygic3JjIHdpZHRoIG11c3QgYmUgbXVsdGlwbGUgb2YgNCBm
b3Igcm90YXRlZCBwbGFuYXIgWVVWXG4iKTsKQEAgLTE4MTcsNyArMTgwNSw3IEBAIHN0YXRpYyBp
bnQgc2tsX3BsYW5lX2NoZWNrKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAog
CS8qIHVzZSBzY2FsZXIgd2hlbiBjb2xvcmtleSBpcyBub3QgcmVxdWlyZWQgKi8KIAlpZiAoIXBs
YW5lX3N0YXRlLT5ja2V5LmZsYWdzICYmIGludGVsX2ZiX3NjYWxhYmxlKGZiKSkgewogCQltaW5f
c2NhbGUgPSAxOwotCQltYXhfc2NhbGUgPSBza2xfbWF4X3NjYWxlKGNydGNfc3RhdGUsIGZiLT5m
b3JtYXQtPmZvcm1hdCk7CisJCW1heF9zY2FsZSA9IHNrbF9tYXhfc2NhbGUoY3J0Y19zdGF0ZSwg
ZmItPmZvcm1hdCk7CiAJfQogCiAJcmV0ID0gZHJtX2F0b21pY19oZWxwZXJfY2hlY2tfcGxhbmVf
c3RhdGUoJnBsYW5lX3N0YXRlLT5iYXNlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfc3ByaXRlLmgKaW5kZXggMDkzYTJkMTU2ZjFlLi4yMjkzMzYyMTRmNjggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaApAQCAtMTcsNyArMTcsNiBA
QCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlOwogc3Ry
dWN0IGludGVsX3BsYW5lX3N0YXRlOwogCi1ib29sIGlzX3BsYW5hcl95dXZfZm9ybWF0KHUzMiBw
aXhlbGZvcm1hdCk7CiBpbnQgaW50ZWxfdXNlY3NfdG9fc2NhbmxpbmVzKGNvbnN0IHN0cnVjdCBk
cm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlLAogCQkJICAgICBpbnQgdXNlY3MpOwogc3Ry
dWN0IGludGVsX3BsYW5lICppbnRlbF9zcHJpdGVfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4IGQwY2ViMjcy
NTUxZi4uNmFhNDBmNTQ2MjI2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAgLTQwMDksNyAr
NDAwOSw4IEBAIHNrbF9kZGJfZ2V0X2h3X3BsYW5lX3N0YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJdmFsID0gSTkxNV9SRUFEKFBMQU5FX0JVRl9DRkcocGlwZSwgcGxh
bmVfaWQpKTsKIAkJdmFsMiA9IEk5MTVfUkVBRChQTEFORV9OVjEyX0JVRl9DRkcocGlwZSwgcGxh
bmVfaWQpKTsKIAotCQlpZiAoaXNfcGxhbmFyX3l1dl9mb3JtYXQoZm91cmNjKSkKKwkJaWYgKGZv
dXJjYyAmJgorCQkgICAgZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGRybV9mb3Jt
YXRfaW5mbyhmb3VyY2MpKSkKIAkJCXN3YXAodmFsLCB2YWwyKTsKIAogCQlza2xfZGRiX2VudHJ5
X2luaXRfZnJvbV9odyhkZXZfcHJpdiwgZGRiX3ksIHZhbCk7CkBAIC00MTk3LDI1ICs0MTk4LDIz
IEBAIGludCBza2xfY2hlY2tfcGlwZV9tYXhfcGl4ZWxfcmF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAq
aW50ZWxfY3J0YywKIHN0YXRpYyB1NjQKIHNrbF9wbGFuZV9yZWxhdGl2ZV9kYXRhX3JhdGUoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUsCi0JCQkgICAgIGNvbnN0IGludCBw
bGFuZSkKKwkJCSAgICAgaW50IGNvbG9yX3BsYW5lKQogewotCXN0cnVjdCBpbnRlbF9wbGFuZSAq
aW50ZWxfcGxhbmUgPSB0b19pbnRlbF9wbGFuZShwbGFuZV9zdGF0ZS0+YmFzZS5wbGFuZSk7CisJ
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSA9IHRvX2ludGVsX3BsYW5lKHBsYW5lX3N0YXRlLT5i
YXNlLnBsYW5lKTsKKwljb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9IHBsYW5lX3N0
YXRlLT5iYXNlLmZiOwogCXUzMiBkYXRhX3JhdGU7CiAJdTMyIHdpZHRoID0gMCwgaGVpZ2h0ID0g
MDsKLQlzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYjsKLQl1MzIgZm9ybWF0OwogCXVpbnRfZml4
ZWRfMTZfMTZfdCBkb3duX3NjYWxlX2Ftb3VudDsKIAl1NjQgcmF0ZTsKIAogCWlmICghcGxhbmVf
c3RhdGUtPmJhc2UudmlzaWJsZSkKIAkJcmV0dXJuIDA7CiAKLQlmYiA9IHBsYW5lX3N0YXRlLT5i
YXNlLmZiOwotCWZvcm1hdCA9IGZiLT5mb3JtYXQtPmZvcm1hdDsKLQotCWlmIChpbnRlbF9wbGFu
ZS0+aWQgPT0gUExBTkVfQ1VSU09SKQorCWlmIChwbGFuZS0+aWQgPT0gUExBTkVfQ1VSU09SKQog
CQlyZXR1cm4gMDsKLQlpZiAocGxhbmUgPT0gMSAmJiAhaXNfcGxhbmFyX3l1dl9mb3JtYXQoZm9y
bWF0KSkKKworCWlmIChjb2xvcl9wbGFuZSA9PSAxICYmCisJICAgICFkcm1fZm9ybWF0X2luZm9f
aXNfeXV2X3NlbWlwbGFuYXIoZmItPmZvcm1hdCkpCiAJCXJldHVybiAwOwogCiAJLyoKQEAgLTQy
MjcsNyArNDIyNiw3IEBAIHNrbF9wbGFuZV9yZWxhdGl2ZV9kYXRhX3JhdGUoY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJaGVpZ2h0ID0gZHJtX3JlY3RfaGVpZ2h0
KCZwbGFuZV9zdGF0ZS0+YmFzZS5zcmMpID4+IDE2OwogCiAJLyogVVYgcGxhbmUgZG9lcyAxLzIg
cGl4ZWwgc3ViLXNhbXBsaW5nICovCi0JaWYgKHBsYW5lID09IDEgJiYgaXNfcGxhbmFyX3l1dl9m
b3JtYXQoZm9ybWF0KSkgeworCWlmIChjb2xvcl9wbGFuZSA9PSAxKSB7CiAJCXdpZHRoIC89IDI7
CiAJCWhlaWdodCAvPSAyOwogCX0KQEAgLTQyMzgsNyArNDIzNyw3IEBAIHNrbF9wbGFuZV9yZWxh
dGl2ZV9kYXRhX3JhdGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
CiAKIAlyYXRlID0gbXVsX3JvdW5kX3VwX3UzMl9maXhlZDE2KGRhdGFfcmF0ZSwgZG93bl9zY2Fs
ZV9hbW91bnQpOwogCi0JcmF0ZSAqPSBmYi0+Zm9ybWF0LT5jcHBbcGxhbmVdOworCXJhdGUgKj0g
ZmItPmZvcm1hdC0+Y3BwW2NvbG9yX3BsYW5lXTsKIAlyZXR1cm4gcmF0ZTsKIH0KIApAQCAtNDY0
Myw3ICs0NjQyLDcgQEAgc2tsX2NvbXB1dGVfd21fcGFyYW1zKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCXUzMiBpbnRlcm1fcGJwbDsKIAogCS8qIG9ubHkgcGxh
bmFyIGZvcm1hdCBoYXMgdHdvIHBsYW5lcyAqLwotCWlmIChjb2xvcl9wbGFuZSA9PSAxICYmICFp
c19wbGFuYXJfeXV2X2Zvcm1hdChmb3JtYXQtPmZvcm1hdCkpIHsKKwlpZiAoY29sb3JfcGxhbmUg
PT0gMSAmJiAhZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZvcm1hdCkpIHsKIAkJ
RFJNX0RFQlVHX0tNUygiTm9uIHBsYW5hciBmb3JtYXQgaGF2ZSBzaW5nbGUgcGxhbmVcbiIpOwog
CQlyZXR1cm4gLUVJTlZBTDsKIAl9CkBAIC00NjU1LDcgKzQ2NTQsNyBAQCBza2xfY29tcHV0ZV93
bV9wYXJhbXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJd3At
PnhfdGlsZWQgPSBtb2RpZmllciA9PSBJOTE1X0ZPUk1BVF9NT0RfWF9USUxFRDsKIAl3cC0+cmNf
c3VyZmFjZSA9IG1vZGlmaWVyID09IEk5MTVfRk9STUFUX01PRF9ZX1RJTEVEX0NDUyB8fAogCQkJ
IG1vZGlmaWVyID09IEk5MTVfRk9STUFUX01PRF9ZZl9USUxFRF9DQ1M7Ci0Jd3AtPmlzX3BsYW5h
ciA9IGlzX3BsYW5hcl95dXZfZm9ybWF0KGZvcm1hdC0+Zm9ybWF0KTsKKwl3cC0+aXNfcGxhbmFy
ID0gZHJtX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGZvcm1hdCk7CiAKIAl3cC0+d2lk
dGggPSB3aWR0aDsKIAlpZiAoY29sb3JfcGxhbmUgPT0gMSAmJiB3cC0+aXNfcGxhbmFyKQotLSAK
Mi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

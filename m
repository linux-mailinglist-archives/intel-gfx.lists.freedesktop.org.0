Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9C4AC176AF
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 13:23:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A576F89736;
	Wed,  8 May 2019 11:23:38 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 00AB789736
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 11:23:35 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16489110-1500050 
 for multiple; Wed, 08 May 2019 12:23:24 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 12:23:22 +0100
Message-Id: <20190508112322.15413-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-14-chris@chris-wilson.co.uk>
References: <20190508080704.24223-14-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Load balancing across a virtual engine
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2aW5nIGFsbG93ZWQgdGhlIHVzZXIgdG8gZGVmaW5lIGEgc2V0IG9mIGVuZ2luZXMgdGhhdCB0
aGV5IHdpbGwgd2FudAp0byBvbmx5IHVzZSwgd2UgZ28gb25lIHN0ZXAgZnVydGhlciBhbmQgYWxs
b3cgdGhlbSB0byBiaW5kIHRob3NlIGVuZ2luZXMKaW50byBhIHNpbmdsZSB2aXJ0dWFsIGluc3Rh
bmNlLiBTdWJtaXR0aW5nIGEgYmF0Y2ggdG8gdGhlIHZpcnR1YWwgZW5naW5lCndpbGwgdGhlbiBm
b3J3YXJkIGl0IHRvIGFueSBvbmUgb2YgdGhlIHNldCBpbiBhIG1hbm5lciBhcyBiZXN0IHRvCmRp
c3RyaWJ1dGUgbG9hZC4gIFRoZSB2aXJ0dWFsIGVuZ2luZSBoYXMgYSBzaW5nbGUgdGltZWxpbmUg
YWNyb3NzIGFsbAplbmdpbmVzIChpdCBvcGVyYXRlcyBhcyBhIHNpbmdsZSBxdWV1ZSksIHNvIGl0
IGlzIG5vdCBhYmxlIHRvIGNvbmN1cnJlbnRseQpydW4gYmF0Y2hlcyBhY3Jvc3MgbXVsdGlwbGUg
ZW5naW5lcyBieSBpdHNlbGY7IHRoYXQgaXMgbGVmdCB1cCB0byB0aGUgdXNlcgp0byBzdWJtaXQg
bXVsdGlwbGUgY29uY3VycmVudCBiYXRjaGVzIHRvIG11bHRpcGxlIHF1ZXVlcy4gTXVsdGlwbGUg
dXNlcnMKd2lsbCBiZSBsb2FkIGJhbGFuY2VkIGFjcm9zcyB0aGUgc3lzdGVtLgoKVGhlIG1lY2hh
bmlzbSB1c2VkIGZvciBsb2FkIGJhbGFuY2luZyBpbiB0aGlzIHBhdGNoIGlzIGEgbGF0ZSBncmVl
ZHkKYmFsYW5jZXIuIFdoZW4gYSByZXF1ZXN0IGlzIHJlYWR5IGZvciBleGVjdXRpb24sIGl0IGlz
IGFkZGVkIHRvIGVhY2gKZW5naW5lJ3MgcXVldWUsIGFuZCB3aGVuIGFuIGVuZ2luZSBpcyByZWFk
eSBmb3IgaXRzIG5leHQgcmVxdWVzdCBpdApjbGFpbXMgaXQgZnJvbSB0aGUgdmlydHVhbCBlbmdp
bmUuIFRoZSBmaXJzdCBlbmdpbmUgdG8gZG8gc28sIHdpbnMsIGkuZS4KdGhlIHJlcXVlc3QgaXMg
ZXhlY3V0ZWQgYXQgdGhlIGVhcmxpZXN0IG9wcG9ydHVuaXR5IChpZGxlIG1vbWVudCkgaW4gdGhl
CnN5c3RlbS4KCkFzIG5vdCBhbGwgSFcgaXMgY3JlYXRlZCBlcXVhbCwgdGhlIHVzZXIgaXMgc3Rp
bGwgYWJsZSB0byBza2lwIHRoZQp2aXJ0dWFsIGVuZ2luZSBhbmQgZXhlY3V0ZSB0aGUgYmF0Y2gg
b24gYSBzcGVjaWZpYyBlbmdpbmUsIGFsbCB3aXRoaW4gdGhlCnNhbWUgcXVldWUuIEl0IHdpbGwg
dGhlbiBiZSBleGVjdXRlZCBpbiBvcmRlciBvbiB0aGUgY29ycmVjdCBlbmdpbmUsCndpdGggZXhl
Y3V0aW9uIG9uIG90aGVyIHZpcnR1YWwgZW5naW5lcyBiZWluZyBtb3ZlZCBhd2F5IGR1ZSB0byB0
aGUgbG9hZApkZXRlY3Rpb24uCgpBIGNvdXBsZSBvZiBhcmVhcyBmb3IgcG90ZW50aWFsIGltcHJv
dmVtZW50IGxlZnQhCgotIFRoZSB2aXJ0dWFsIGVuZ2luZSBhbHdheXMgdGFrZSBwcmlvcml0eSBv
dmVyIGVxdWFsLXByaW9yaXR5IHRhc2tzLgpNb3N0bHkgYnJva2VuIHVwIGJ5IGFwcGx5aW5nIEZR
X0NPREVMIHJ1bGVzIGZvciBwcmlvcml0aXNpbmcgbmV3IGNsaWVudHMsCmFuZCBob3BlZnVsbHkg
dGhlIHZpcnR1YWwgYW5kIHJlYWwgZW5naW5lcyBhcmUgbm90IHRoZW4gY29uZ2VzdGVkIChpLmUu
CmFsbCB3b3JrIGlzIHZpYSB2aXJ0dWFsIGVuZ2luZXMsIG9yIGFsbCB3b3JrIGlzIHRvIHRoZSBy
ZWFsIGVuZ2luZSkuCgotIFdlIHJlcXVpcmUgdGhlIGJyZWFkY3J1bWIgaXJxIGFyb3VuZCBldmVy
eSB2aXJ0dWFsIGVuZ2luZSByZXF1ZXN0LiBGb3IKbm9ybWFsIGVuZ2luZXMsIHdlIGVsaW1pbmF0
ZSB0aGUgbmVlZCBmb3IgdGhlIHNsb3cgcm91bmQgdHJpcCB2aWEKaW50ZXJydXB0IGJ5IHVzaW5n
IHRoZSBzdWJtaXQgZmVuY2UgYW5kIHF1ZXVlaW5nIGluIG9yZGVyLiBGb3IgdmlydHVhbAplbmdp
bmVzLCB3ZSBoYXZlIHRvIGFsbG93IGFueSBqb2IgdG8gdHJhbnNmZXIgdG8gYSBuZXcgcmluZywg
YW5kIGNhbm5vdApjb2FsZXNjZSB0aGUgc3VibWlzc2lvbnMsIHNvIHJlcXVpcmUgdGhlIGNvbXBs
ZXRpb24gZmVuY2UgaW5zdGVhZCwKZm9yY2luZyB0aGUgcGVyc2lzdGVudCB1c2Ugb2YgaW50ZXJy
dXB0cy4KCi0gV2Ugb25seSBkcmlwIGZlZWQgc2luZ2xlIHJlcXVlc3RzIHRocm91Z2ggZWFjaCB2
aXJ0dWFsIGVuZ2luZSBhbmQgb250bwp0aGUgcGh5c2ljYWwgZW5naW5lcywgZXZlbiBpZiB0aGVy
ZSB3YXMgZW5vdWdoIHdvcmsgdG8gZmlsbCBhbGwgRUxTUCwKbGVhdmluZyBzbWFsbCBzdGFsbHMg
d2l0aCBhbiBpZGxlIENTIGV2ZW50IGF0IHRoZSBlbmQgb2YgZXZlcnkgcmVxdWVzdC4KQ291bGQg
d2UgYmUgZ3JlZWR5IGFuZCBmaWxsIGJvdGggc2xvdHM/IEJlaW5nIGxhenkgaXMgdmlydHVvdXMg
Zm9yIGxvYWQKZGlzdHJpYnV0aW9uIG9uIGxlc3MtdGhhbi1mdWxsIHdvcmtsb2FkcyB0aG91Z2gu
CgpPdGhlciBhcmVhcyBvZiBpbXByb3ZlbWVudCBhcmUgbW9yZSBnZW5lcmFsLCBzdWNoIGFzIHJl
ZHVjaW5nIGxvY2sKY29udGVudGlvbiwgcmVkdWNpbmcgZGlzcGF0Y2ggb3ZlcmhlYWQsIGxvb2tp
bmcgYXQgZGlyZWN0IHN1Ym1pc3Npb24KcmF0aGVyIHRoYW4gYm91bmNpbmcgYXJvdW5kIHRhc2ts
ZXRzIGV0Yy4KCnNzZXU6IExpZnQgdGhlIHJlc3RyaWN0aW9uIHRvIGFsbG93IHNzZXUgdG8gYmUg
cmVjb25maWd1cmVkIG9uIHZpcnR1YWwKZW5naW5lcyBjb21wb3NlZCBvZiBSRU5ERVJfQ0xBU1Mg
KHJjcykuCgp2MjogbWFjcm9pemUgY2hlY2tfdXNlcl9tYnooKQp2MzogQ2FuY2VsIHZpcnR1YWwg
ZW5naW5lcyBvbiB3ZWRnaW5nCnY0OiBDb21tZW5jZSBjb21tZW50aW5nCnY1OiBSZXBsYWNlIDY0
YiBzaWJsaW5nX21hc2sgd2l0aCBhIGxpc3Qgb2YgY2xhc3M6aW5zdGFuY2UKdjY6IERyb3AgdGhl
IG9uZS1lbGVtZW50IGFycmF5IGluIHRoZSB1YWJpCnY3OiBBc3NlcnQgaXQgaXMgYW4gdmlydHVh
bCBlbmdpbmUgaW4gdG9fdmlydHVhbF9lbmdpbmUoKQp2ODogU2tpcCBvdmVyIGhvbGVzIGluIFtj
bGFzc11baW5zdF0gc28gd2UgY2FuIHNlbGZ0ZXN0IHdpdGggKHZjczAsIHZjczIpCgpTaWduZWQt
b2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IFR2cnRr
byBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggfCAgIDggKwogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMgICAgICAgICAgfCA2ODMgKysrKysrKysrKysrKysrKysrLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmggICAgICAgICAgfCAgIDkgKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgICAgICAgfCAxODAgKysrKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmggICAgICAgICAgICAgIHwgICA1ICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuYyAgICAgIHwgMTE2ICsrKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgICAgICAgIHwgIDE5ICstCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmggICB8ICAgMSArCiBpbmNsdWRlL3VhcGkv
ZHJtL2k5MTVfZHJtLmggICAgICAgICAgICAgICAgICB8ICAzOSArKwogOSBmaWxlcyBjaGFuZ2Vk
LCAxMDMyIGluc2VydGlvbnMoKyksIDI4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggZTM4MWMxYzczOTAyLi43YjQ3ZTAw
ZmEwODIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90
eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5o
CkBAIC0yMjcsNiArMjI3LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgewogCSAq
IEBxdWV1ZTogcXVldWUgb2YgcmVxdWVzdHMsIGluIHByaW9yaXR5IGxpc3RzCiAJICovCiAJc3Ry
dWN0IHJiX3Jvb3RfY2FjaGVkIHF1ZXVlOworCXN0cnVjdCByYl9yb290X2NhY2hlZCB2aXJ0dWFs
OwogCiAJLyoqCiAJICogQGNzYl93cml0ZTogY29udHJvbCByZWdpc3RlciBmb3IgQ29udGV4dCBT
d2l0Y2ggYnVmZmVyCkBAIC00NDUsNiArNDQ2LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAjZGVmaW5lIEk5MTVfRU5HSU5FX0hBU19QUkVFTVBUSU9OICAgQklUKDIpCiAjZGVmaW5lIEk5
MTVfRU5HSU5FX0hBU19TRU1BUEhPUkVTICAgQklUKDMpCiAjZGVmaW5lIEk5MTVfRU5HSU5FX05F
RURTX0JSRUFEQ1JVTUJfVEFTS0xFVCBCSVQoNCkKKyNkZWZpbmUgSTkxNV9FTkdJTkVfSVNfVklS
VFVBTCAgICAgICBCSVQoNSkKIAl1bnNpZ25lZCBpbnQgZmxhZ3M7CiAKIAkvKgpAQCAtNTM0LDYg
KzUzNiwxMiBAQCBpbnRlbF9lbmdpbmVfbmVlZHNfYnJlYWRjcnVtYl90YXNrbGV0KGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gZW5naW5lLT5mbGFncyAmIEk5
MTVfRU5HSU5FX05FRURTX0JSRUFEQ1JVTUJfVEFTS0xFVDsKIH0KIAorc3RhdGljIGlubGluZSBi
b29sCitpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCit7CisJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9JU19WSVJU
VUFMOworfQorCiAjZGVmaW5lIGluc3Rkb25lX3NsaWNlX21hc2soZGV2X3ByaXZfXykgXAogCShJ
U19HRU4oZGV2X3ByaXZfXywgNykgPyBcCiAJIDEgOiBSVU5USU1FX0lORk8oZGV2X3ByaXZfXykt
PnNzZXUuc2xpY2VfbWFzaykKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXggZjFk
NjI3NDZlMDY2Li5iYzM4OGRmMzk4MDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5j
CkBAIC0xNjYsNiArMTY2LDQyIEBACiAKICNkZWZpbmUgQUNUSVZFX1BSSU9SSVRZIChJOTE1X1BS
SU9SSVRZX05FV0NMSUVOVCB8IEk5MTVfUFJJT1JJVFlfTk9TRU1BUEhPUkUpCiAKK3N0cnVjdCB2
aXJ0dWFsX2VuZ2luZSB7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyBiYXNlOworCXN0cnVjdCBp
bnRlbF9jb250ZXh0IGNvbnRleHQ7CisKKwkvKgorCSAqIFdlIGFsbG93IG9ubHkgYSBzaW5nbGUg
cmVxdWVzdCB0aHJvdWdoIHRoZSB2aXJ0dWFsIGVuZ2luZSBhdCBhIHRpbWUKKwkgKiAoZWFjaCBy
ZXF1ZXN0IGluIHRoZSB0aW1lbGluZSB3YWl0cyBmb3IgdGhlIGNvbXBsZXRpb24gZmVuY2Ugb2YK
KwkgKiB0aGUgcHJldmlvdXMgYmVmb3JlIGJlaW5nIHN1Ym1pdHRlZCkuIEJ5IHJlc3RyaWN0aW5n
IG91cnNlbHZlcyB0bworCSAqIG9ubHkgc3VibWl0dGluZyBhIHNpbmdsZSByZXF1ZXN0LCBlYWNo
IHJlcXVlc3QgaXMgcGxhY2VkIG9uIHRvIGEKKwkgKiBwaHlzaWNhbCB0byBtYXhpbWlzZSBsb2Fk
IHNwcmVhZGluZyAoYnkgdmlydHVlIG9mIHRoZSBsYXRlIGdyZWVkeQorCSAqIHNjaGVkdWxpbmcg
LS0gZWFjaCByZWFsIGVuZ2luZSB0YWtlcyB0aGUgbmV4dCBhdmFpbGFibGUgcmVxdWVzdAorCSAq
IHVwb24gaWRsaW5nKS4KKwkgKi8KKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0OworCisJ
LyoKKwkgKiBXZSBrZWVwIGEgcmJ0cmVlIG9mIGF2YWlsYWJsZSB2aXJ0dWFsIGVuZ2luZXMgaW5z
aWRlIGVhY2ggcGh5c2ljYWwKKwkgKiBlbmdpbmUsIHNvcnRlZCBieSBwcmlvcml0eS4gSGVyZSB3
ZSBwcmVhbGxvY2F0ZSB0aGUgbm9kZXMgd2UgbmVlZAorCSAqIGZvciB0aGUgdmlydHVhbCBlbmdp
bmUsIGluZGV4ZWQgYnkgcGh5c2ljYWxfZW5naW5lLT5pZC4KKwkgKi8KKwlzdHJ1Y3QgdmVfbm9k
ZSB7CisJCXN0cnVjdCByYl9ub2RlIHJiOworCQlpbnQgcHJpbzsKKwl9IG5vZGVzW0k5MTVfTlVN
X0VOR0lORVNdOworCisJLyogQW5kIGZpbmFsbHksIHdoaWNoIHBoeXNpY2FsIGVuZ2luZXMgdGhp
cyB2aXJ0dWFsIGVuZ2luZSBtYXBzIG9udG8uICovCisJdW5zaWduZWQgaW50IG51bV9zaWJsaW5n
czsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzaWJsaW5nc1swXTsKK307CisKK3N0YXRpYyBz
dHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnRvX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKK3sKKwlHRU1fQlVHX09OKCFpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChl
bmdpbmUpKTsKKwlyZXR1cm4gY29udGFpbmVyX29mKGVuZ2luZSwgc3RydWN0IHZpcnR1YWxfZW5n
aW5lLCBiYXNlKTsKK30KKwogc3RhdGljIGludCBleGVjbGlzdHNfY29udGV4dF9kZWZlcnJlZF9h
bGxvYyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpOwogc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUz
MiAqcmVnX3N0YXRlLApAQCAtMjI5LDcgKzI2NSw4IEBAIHN0YXRpYyBpbnQgcXVldWVfcHJpbyhj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQogfQogCiBzdGF0
aWMgaW5saW5lIGJvb2wgbmVlZF9wcmVlbXB0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSwKLQkJCQljb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKKwkJCQljb25zdCBz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKKwkJCQlzdHJ1Y3QgcmJfbm9kZSAqcmIpCiB7CiAJaW50
IGxhc3RfcHJpbzsKIApAQCAtMjY0LDYgKzMwMSwyNSBAQCBzdGF0aWMgaW5saW5lIGJvb2wgbmVl
ZF9wcmVlbXB0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkgICAgcnFf
cHJpbyhsaXN0X25leHRfZW50cnkocnEsIGxpbmspKSA+IGxhc3RfcHJpbykKIAkJcmV0dXJuIHRy
dWU7CiAKKwlpZiAocmIpIHsKKwkJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9CisJCQlyYl9l
bnRyeShyYiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2luZS0+aWRdLnJiKTsKKwkJYm9vbCBwcmVl
bXB0ID0gZmFsc2U7CisKKwkJaWYgKGVuZ2luZSA9PSB2ZS0+c2libGluZ3NbMF0pIHsgLyogb25s
eSBwcmVlbXB0IG9uZSBzaWJsaW5nICovCisJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpuZXh0Owor
CisJCQlyY3VfcmVhZF9sb2NrKCk7CisJCQluZXh0ID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsK
KwkJCWlmIChuZXh0KQorCQkJCXByZWVtcHQgPSBycV9wcmlvKG5leHQpID4gbGFzdF9wcmlvOwor
CQkJcmN1X3JlYWRfdW5sb2NrKCk7CisJCX0KKworCQlpZiAocHJlZW1wdCkKKwkJCXJldHVybiBw
cmVlbXB0OworCX0KKwogCS8qCiAJICogSWYgdGhlIGluZmxpZ2h0IGNvbnRleHQgZGlkIG5vdCB0
cmlnZ2VyIHRoZSBwcmVlbXB0aW9uLCB0aGVuIG1heWJlCiAJICogaXQgd2FzIHRoZSBzZXQgb2Yg
cXVldWVkIHJlcXVlc3RzPyBQaWNrIHRoZSBoaWdoZXN0IHByaW9yaXR5IGluCkBAIC0zODIsNiAr
NDM4LDggQEAgX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsIGludCBib29zdCkKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmVfcmV2ZXJz
ZShycSwgcm4sCiAJCQkJCSAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywKIAkJCQkJIGxpbmsp
IHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqb3duZXI7CisKIAkJaWYgKGk5MTVfcmVxdWVz
dF9jb21wbGV0ZWQocnEpKQogCQkJYnJlYWs7CiAKQEAgLTM5MCwxNiArNDQ4LDMyIEBAIF9fdW53
aW5kX2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBp
bnQgYm9vc3QpCiAKIAkJR0VNX0JVR19PTihycS0+aHdfY29udGV4dC0+YWN0aXZlKTsKIAotCQlH
RU1fQlVHX09OKHJxX3ByaW8ocnEpID09IEk5MTVfUFJJT1JJVFlfSU5WQUxJRCk7Ci0JCWlmIChy
cV9wcmlvKHJxKSAhPSBwcmlvKSB7Ci0JCQlwcmlvID0gcnFfcHJpbyhycSk7Ci0JCQlwbCA9IGk5
MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0KGVuZ2luZSwgcHJpbyk7Ci0JCX0KLQkJR0VNX0JVR19P
TihSQl9FTVBUWV9ST09UKCZlbmdpbmUtPmV4ZWNsaXN0cy5xdWV1ZS5yYl9yb290KSk7CisJCS8q
CisJCSAqIFB1c2ggdGhlIHJlcXVlc3QgYmFjayBpbnRvIHRoZSBxdWV1ZSBmb3IgbGF0ZXIgcmVz
dWJtaXNzaW9uLgorCQkgKiBJZiB0aGlzIHJlcXVlc3QgaXMgbm90IG5hdGl2ZSB0byB0aGlzIHBo
eXNpY2FsIGVuZ2luZSAoaS5lLgorCQkgKiBpdCBjYW1lIGZyb20gYSB2aXJ0dWFsIHNvdXJjZSks
IHB1c2ggaXQgYmFjayBvbnRvIHRoZSB2aXJ0dWFsCisJCSAqIGVuZ2luZSBzbyB0aGF0IGl0IGNh
biBiZSBtb3ZlZCBhY3Jvc3Mgb250byBhbm90aGVyIHBoeXNpY2FsCisJCSAqIGVuZ2luZSBhcyBs
b2FkIGRpY3RhdGVzLgorCQkgKi8KKwkJb3duZXIgPSBycS0+aHdfY29udGV4dC0+ZW5naW5lOwor
CQlpZiAobGlrZWx5KG93bmVyID09IGVuZ2luZSkpIHsKKwkJCUdFTV9CVUdfT04ocnFfcHJpbyhy
cSkgPT0gSTkxNV9QUklPUklUWV9JTlZBTElEKTsKKwkJCWlmIChycV9wcmlvKHJxKSAhPSBwcmlv
KSB7CisJCQkJcHJpbyA9IHJxX3ByaW8ocnEpOworCQkJCXBsID0gaTkxNV9zY2hlZF9sb29rdXBf
cHJpb2xpc3QoZW5naW5lLCBwcmlvKTsKKwkJCX0KKwkJCUdFTV9CVUdfT04oUkJfRU1QVFlfUk9P
VCgmZW5naW5lLT5leGVjbGlzdHMucXVldWUucmJfcm9vdCkpOwogCi0JCWxpc3RfYWRkKCZycS0+
c2NoZWQubGluaywgcGwpOworCQkJbGlzdF9hZGQoJnJxLT5zY2hlZC5saW5rLCBwbCk7CisJCQlh
Y3RpdmUgPSBycTsKKwkJfSBlbHNlIHsKKwkJCWlmIChfX2k5MTVfcmVxdWVzdF9oYXNfc3RhcnRl
ZChycSkpCisJCQkJcnEtPnNjaGVkLmF0dHIucHJpb3JpdHkgfD0gYm9vc3Q7CiAKLQkJYWN0aXZl
ID0gcnE7CisJCQlycS0+ZW5naW5lID0gb3duZXI7CisJCQlvd25lci0+c3VibWl0X3JlcXVlc3Qo
cnEpOworCQkJYWN0aXZlID0gTlVMTDsKKwkJfQogCX0KIAogCS8qCkBAIC00MTksNyArNDkzLDcg
QEAgX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsIGludCBib29zdCkKIAkgKiBpbiB0aGUgcHJpb3JpdHkgcXVldWUsIGJ1dCB0aGV5IHdp
bGwgbm90IGdhaW4gaW1tZWRpYXRlIGFjY2VzcyB0bwogCSAqIHRoZSBHUFUuCiAJICovCi0JaWYg
KH5wcmlvICYgYm9vc3QgJiYgX19pOTE1X3JlcXVlc3RfaGFzX3N0YXJ0ZWQoYWN0aXZlKSkgewor
CWlmICh+cHJpbyAmIGJvb3N0ICYmIGFjdGl2ZSAmJiBfX2k5MTVfcmVxdWVzdF9oYXNfc3RhcnRl
ZChhY3RpdmUpKSB7CiAJCXByaW8gfD0gYm9vc3Q7CiAJCUdFTV9CVUdfT04oYWN0aXZlLT5zY2hl
ZC5hdHRyLnByaW9yaXR5ID49IHByaW8pOwogCQlhY3RpdmUtPnNjaGVkLmF0dHIucHJpb3JpdHkg
PSBwcmlvOwpAQCAtNjYxLDYgKzczNSw5MCBAQCBzdGF0aWMgdm9pZCBjb21wbGV0ZV9wcmVlbXB0
X2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIAkJCQkg
ICAgIEFDVElWRV9QUklPUklUWSk7CiB9CiAKK3N0YXRpYyB2b2lkIHZpcnR1YWxfdXBkYXRlX3Jl
Z2lzdGVyX29mZnNldHModTMyICpyZWdzLAorCQkJCQkgICAgc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQoreworCXUzMiBiYXNlID0gZW5naW5lLT5tbWlvX2Jhc2U7CisKKwkvKiBNdXN0
IG1hdGNoIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSgpISAqLworCisJcmVnc1tDVFhfQ09OVEVY
VF9DT05UUk9MXSA9CisJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ09OVEVYVF9DT05UUk9M
KGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX0hFQURdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklO
R19IRUFEKGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX1RBSUxdID0gaTkxNV9tbWlvX3JlZ19vZmZz
ZXQoUklOR19UQUlMKGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX0JVRkZFUl9TVEFSVF0gPSBpOTE1
X21taW9fcmVnX29mZnNldChSSU5HX1NUQVJUKGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX0JVRkZF
Ul9DT05UUk9MXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ1RMKGJhc2UpKTsKKworCXJl
Z3NbQ1RYX0JCX0hFQURfVV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCQUREUl9VRFco
YmFzZSkpOworCXJlZ3NbQ1RYX0JCX0hFQURfTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5H
X0JCQUREUihiYXNlKSk7CisJcmVnc1tDVFhfQkJfU1RBVEVdID0gaTkxNV9tbWlvX3JlZ19vZmZz
ZXQoUklOR19CQlNUQVRFKGJhc2UpKTsKKwlyZWdzW0NUWF9TRUNPTkRfQkJfSEVBRF9VXSA9CisJ
CWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfU0JCQUREUl9VRFcoYmFzZSkpOworCXJlZ3NbQ1RY
X1NFQ09ORF9CQl9IRUFEX0xdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19TQkJBRERSKGJh
c2UpKTsKKwlyZWdzW0NUWF9TRUNPTkRfQkJfU1RBVEVdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQo
UklOR19TQkJTVEFURShiYXNlKSk7CisKKwlyZWdzW0NUWF9DVFhfVElNRVNUQU1QXSA9CisJCWk5
MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ1RYX1RJTUVTVEFNUChiYXNlKSk7CisJcmVnc1tDVFhf
UERQM19VRFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9VRFcoYmFzZSwg
MykpOworCXJlZ3NbQ1RYX1BEUDNfTERXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklO
R19QRFBfTERXKGJhc2UsIDMpKTsKKwlyZWdzW0NUWF9QRFAyX1VEV10gPSBpOTE1X21taW9fcmVn
X29mZnNldChHRU44X1JJTkdfUERQX1VEVyhiYXNlLCAyKSk7CisJcmVnc1tDVFhfUERQMl9MRFdd
ID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFcoYmFzZSwgMikpOworCXJl
Z3NbQ1RYX1BEUDFfVURXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfVURX
KGJhc2UsIDEpKTsKKwlyZWdzW0NUWF9QRFAxX0xEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChH
RU44X1JJTkdfUERQX0xEVyhiYXNlLCAxKSk7CisJcmVnc1tDVFhfUERQMF9VRFddID0gaTkxNV9t
bWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9VRFcoYmFzZSwgMCkpOworCXJlZ3NbQ1RYX1BE
UDBfTERXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfTERXKGJhc2UsIDAp
KTsKKworCWlmIChlbmdpbmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUykgeworCQlyZWdzW0NUWF9S
Q1NfSU5ESVJFQ1RfQ1RYXSA9CisJCQlpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0lORElSRUNU
X0NUWChiYXNlKSk7CisJCXJlZ3NbQ1RYX1JDU19JTkRJUkVDVF9DVFhfT0ZGU0VUXSA9CisJCQlp
OTE1X21taW9fcmVnX29mZnNldChSSU5HX0lORElSRUNUX0NUWF9PRkZTRVQoYmFzZSkpOworCQly
ZWdzW0NUWF9CQl9QRVJfQ1RYX1BUUl0gPQorCQkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19C
Ql9QRVJfQ1RYX1BUUihiYXNlKSk7CisKKwkJcmVnc1tDVFhfUl9QV1JfQ0xLX1NUQVRFXSA9CisJ
CQlpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JfUFdSX0NMS19TVEFURSk7CisJfQorfQorCitz
dGF0aWMgYm9vbCB2aXJ0dWFsX21hdGNoZXMoY29uc3Qgc3RydWN0IHZpcnR1YWxfZW5naW5lICp2
ZSwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKKwkJCSAgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqYWN0aXZlOworCisJLyoKKwkgKiBXZSB0cmFjayB3aGVuIHRoZSBIVyBoYXMgY29t
cGxldGVkIHNhdmluZyB0aGUgY29udGV4dCBpbWFnZQorCSAqIChpLmUuIHdoZW4gd2UgaGF2ZSBz
ZWVuIHRoZSBmaW5hbCBDUyBldmVudCBzd2l0Y2hpbmcgb3V0IG9mCisJICogdGhlIGNvbnRleHQp
IGFuZCBtdXN0IG5vdCBvdmVyd3JpdGUgdGhlIGNvbnRleHQgaW1hZ2UgYmVmb3JlCisJICogdGhl
bi4gVGhpcyByZXN0cmljdHMgdXMgdG8gb25seSB1c2luZyB0aGUgYWN0aXZlIGVuZ2luZQorCSAq
IHdoaWxlIHRoZSBwcmV2aW91cyB2aXJ0dWFsaXplZCByZXF1ZXN0IGlzIGluZmxpZ2h0IChzbwor
CSAqIHdlIHJldXNlIHRoZSByZWdpc3RlciBvZmZzZXRzKS4gVGhpcyBpcyBhIHZlcnkgc21hbGwK
KwkgKiBoeXN0ZXJzaXMgb24gdGhlIGdyZWVkeSBzZWVsY3Rpb24gYWxnb3JpdGhtLgorCSAqLwor
CWFjdGl2ZSA9IFJFQURfT05DRSh2ZS0+Y29udGV4dC5hY3RpdmUpOworCWlmIChhY3RpdmUgJiYg
YWN0aXZlICE9IGVuZ2luZSkKKwkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJuIHRydWU7Cit9CisK
K3N0YXRpYyB2b2lkIHZpcnR1YWxfeGZlcl9icmVhZGNydW1icyhzdHJ1Y3QgdmlydHVhbF9lbmdp
bmUgKnZlLAorCQkJCSAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm9sZCA9IHZlLT5zaWJsaW5nc1swXTsKKworCS8qIEFsbCB1
bmF0dGFjaGVkIChycS0+ZW5naW5lID09IG9sZCkgbXVzdCBhbHJlYWR5IGJlIGNvbXBsZXRlZCAq
LworCisJc3Bpbl9sb2NrKCZvbGQtPmJyZWFkY3J1bWJzLmlycV9sb2NrKTsKKwlpZiAoIWxpc3Rf
ZW1wdHkoJnZlLT5jb250ZXh0LnNpZ25hbF9saW5rKSkgeworCQlsaXN0X21vdmVfdGFpbCgmdmUt
PmNvbnRleHQuc2lnbmFsX2xpbmssCisJCQkgICAgICAgJmVuZ2luZS0+YnJlYWRjcnVtYnMuc2ln
bmFsZXJzKTsKKwkJaW50ZWxfZW5naW5lX3F1ZXVlX2JyZWFkY3J1bWJzKGVuZ2luZSk7CisJfQor
CXNwaW5fdW5sb2NrKCZvbGQtPmJyZWFkY3J1bWJzLmlycV9sb2NrKTsKK30KKwogc3RhdGljIHZv
aWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewog
CXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2lu
ZS0+ZXhlY2xpc3RzOwpAQCAtNjkzLDYgKzg1MSwyNiBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNf
ZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJICogYW5kIGNvbnRleHQg
c3dpdGNoZXMpIHN1Ym1pc3Npb24uCiAJICovCiAKKwlmb3IgKHJiID0gcmJfZmlyc3RfY2FjaGVk
KCZleGVjbGlzdHMtPnZpcnR1YWwpOyByYjsgKSB7CisJCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAq
dmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVvZigqdmUpLCBub2Rlc1tlbmdpbmUtPmlkXS5yYik7
CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKwor
CQlpZiAoIXJxKSB7IC8qIGxhemlseSBjbGVhbnVwIGFmdGVyIGFub3RoZXIgZW5naW5lIGhhbmRs
ZWQgcnEgKi8KKwkJCXJiX2VyYXNlX2NhY2hlZChyYiwgJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJ
CQlSQl9DTEVBUl9OT0RFKHJiKTsKKwkJCXJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMt
PnZpcnR1YWwpOworCQkJY29udGludWU7CisJCX0KKworCQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2
ZSwgcnEsIGVuZ2luZSkpIHsKKwkJCXJiID0gcmJfbmV4dChyYik7CisJCQljb250aW51ZTsKKwkJ
fQorCisJCWJyZWFrOworCX0KKwogCWlmIChsYXN0KSB7CiAJCS8qCiAJCSAqIERvbid0IHJlc3Vi
bWl0IG9yIHN3aXRjaCB1bnRpbCBhbGwgb3V0c3RhbmRpbmcKQEAgLTcxNCw3ICs4OTIsNyBAQCBz
dGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiAJCWlmICghZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJ
VkVfSFdBQ0spKQogCQkJcmV0dXJuOwogCi0JCWlmIChuZWVkX3ByZWVtcHQoZW5naW5lLCBsYXN0
KSkgeworCQlpZiAobmVlZF9wcmVlbXB0KGVuZ2luZSwgbGFzdCwgcmIpKSB7CiAJCQlpbmplY3Rf
cHJlZW1wdF9jb250ZXh0KGVuZ2luZSk7CiAJCQlyZXR1cm47CiAJCX0KQEAgLTc1NCw2ICs5MzIs
OTIgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQogCQlsYXN0LT50YWlsID0gbGFzdC0+d2FfdGFpbDsKIAl9CiAKKwl3aGlsZSAo
cmIpIHsgLyogWFhYIHZpcnR1YWwgaXMgYWx3YXlzIHRha2luZyBwcmVjZWRlbmNlICovCisJCXN0
cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVvZigqdmUpLCBu
b2Rlc1tlbmdpbmUtPmlkXS5yYik7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJCXNw
aW5fbG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisKKwkJcnEgPSB2ZS0+cmVxdWVzdDsK
KwkJaWYgKHVubGlrZWx5KCFycSkpIHsgLyogbG9zdCB0aGUgcmFjZSB0byBhIHNpYmxpbmcgKi8K
KwkJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJCXJiX2VyYXNlX2Nh
Y2hlZChyYiwgJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQlSQl9DTEVBUl9OT0RFKHJiKTsKKwkJ
CXJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1YWwpOworCQkJY29udGludWU7
CisJCX0KKworCQlHRU1fQlVHX09OKHJxICE9IHZlLT5yZXF1ZXN0KTsKKwkJR0VNX0JVR19PTihy
cS0+ZW5naW5lICE9ICZ2ZS0+YmFzZSk7CisJCUdFTV9CVUdfT04ocnEtPmh3X2NvbnRleHQgIT0g
JnZlLT5jb250ZXh0KTsKKworCQlpZiAocnFfcHJpbyhycSkgPj0gcXVldWVfcHJpbyhleGVjbGlz
dHMpKSB7CisJCQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2ZSwgcnEsIGVuZ2luZSkpIHsKKwkJCQlz
cGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJCQkJcmIgPSByYl9uZXh0KHJi
KTsKKwkJCQljb250aW51ZTsKKwkJCX0KKworCQkJaWYgKGxhc3QgJiYgIWNhbl9tZXJnZV9ycShs
YXN0LCBycSkpIHsKKwkJCQlzcGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJ
CQkJcmV0dXJuOyAvKiBsZWF2ZSB0aGlzIHJxIGZvciBhbm90aGVyIGVuZ2luZSAqLworCQkJfQor
CisJCQlHRU1fVFJBQ0UoIiVzOiB2aXJ0dWFsIHJxPSVsbHg6JWxsZCVzLCBuZXcgZW5naW5lPyAl
c1xuIiwKKwkJCQkgIGVuZ2luZS0+bmFtZSwKKwkJCQkgIHJxLT5mZW5jZS5jb250ZXh0LAorCQkJ
CSAgcnEtPmZlbmNlLnNlcW5vLAorCQkJCSAgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkgPyAi
ISIgOgorCQkJCSAgaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpID8gIioiIDoKKwkJCQkgICIiLAor
CQkJCSAgeWVzbm8oZW5naW5lICE9IHZlLT5zaWJsaW5nc1swXSkpOworCisJCQl2ZS0+cmVxdWVz
dCA9IE5VTEw7CisJCQl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IElO
VF9NSU47CisJCQlyYl9lcmFzZV9jYWNoZWQocmIsICZleGVjbGlzdHMtPnZpcnR1YWwpOworCQkJ
UkJfQ0xFQVJfTk9ERShyYik7CisKKwkJCXJxLT5lbmdpbmUgPSBlbmdpbmU7CisKKwkJCWlmIChl
bmdpbmUgIT0gdmUtPnNpYmxpbmdzWzBdKSB7CisJCQkJdTMyICpyZWdzID0gdmUtPmNvbnRleHQu
bHJjX3JlZ19zdGF0ZTsKKwkJCQl1bnNpZ25lZCBpbnQgbjsKKworCQkJCUdFTV9CVUdfT04oUkVB
RF9PTkNFKHZlLT5jb250ZXh0LmFjdGl2ZSkpOworCQkJCXZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVy
X29mZnNldHMocmVncywgZW5naW5lKTsKKworCQkJCWlmICghbGlzdF9lbXB0eSgmdmUtPmNvbnRl
eHQuc2lnbmFscykpCisJCQkJCXZpcnR1YWxfeGZlcl9icmVhZGNydW1icyh2ZSwgZW5naW5lKTsK
KworCQkJCS8qCisJCQkJICogTW92ZSB0aGUgYm91bmQgZW5naW5lIHRvIHRoZSB0b3Agb2YgdGhl
IGxpc3QKKwkJCQkgKiBmb3IgZnV0dXJlIGV4ZWN1dGlvbi4gV2UgdGhlbiBraWNrIHRoaXMKKwkJ
CQkgKiB0YXNrbGV0IGZpcnN0IGJlZm9yZSBjaGVja2luZyBvdGhlcnMsIHNvIHRoYXQKKwkJCQkg
KiB3ZSBwcmVmZXJlbnRpYWxseSByZXVzZSB0aGlzIHNldCBvZiBib3VuZAorCQkJCSAqIHJlZ2lz
dGVycy4KKwkJCQkgKi8KKwkJCQlmb3IgKG4gPSAxOyBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisr
KSB7CisJCQkJCWlmICh2ZS0+c2libGluZ3Nbbl0gPT0gZW5naW5lKSB7CisJCQkJCQlzd2FwKHZl
LT5zaWJsaW5nc1tuXSwKKwkJCQkJCSAgICAgdmUtPnNpYmxpbmdzWzBdKTsKKwkJCQkJCWJyZWFr
OworCQkJCQl9CisJCQkJfQorCisJCQkJR0VNX0JVR19PTih2ZS0+c2libGluZ3NbMF0gIT0gZW5n
aW5lKTsKKwkJCX0KKworCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKKwkJCXRyYWNlX2k5
MTVfcmVxdWVzdF9pbihycSwgcG9ydF9pbmRleChwb3J0LCBleGVjbGlzdHMpKTsKKwkJCXN1Ym1p
dCA9IHRydWU7CisJCQlsYXN0ID0gcnE7CisJCX0KKworCQlzcGluX3VubG9jaygmdmUtPmJhc2Uu
dGltZWxpbmUubG9jayk7CisJCWJyZWFrOworCX0KKwogCXdoaWxlICgocmIgPSByYl9maXJzdF9j
YWNoZWQoJmV4ZWNsaXN0cy0+cXVldWUpKSkgewogCQlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcCA9
IHRvX3ByaW9saXN0KHJiKTsKIAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKQEAgLTE4
NzcsNiArMjE0MSwyNSBAQCBzdGF0aWMgdm9pZCByZXNldF9jc2JfcG9pbnRlcnMoc3RydWN0IGlu
dGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIAkJCSAgICAgICAmZXhlY2xpc3RzLT5j
c2Jfc3RhdHVzW3Jlc2V0X3ZhbHVlXSk7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICphY3RpdmVfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwljb25zdCBzdHJ1
Y3QgbGlzdF9oZWFkICogY29uc3QgbGlzdCA9ICZycS0+ZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0
czsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNvbnRleHQgPSBycS0+aHdf
Y29udGV4dDsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3RpdmUgPSBOVUxMOworCisJbGlzdF9m
b3JfZWFjaF9lbnRyeV9mcm9tX3JldmVyc2UocnEsIGxpc3QsIGxpbmspIHsKKwkJaWYgKGk5MTVf
cmVxdWVzdF9jb21wbGV0ZWQocnEpKQorCQkJYnJlYWs7CisKKwkJaWYgKHJxLT5od19jb250ZXh0
ICE9IGNvbnRleHQpCisJCQlicmVhazsKKworCQlhY3RpdmUgPSBycTsKKwl9CisKKwlyZXR1cm4g
YWN0aXZlOworfQorCiBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKQEAgLTE4
OTcsNyArMjE4MCw4IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCWlmICghcG9ydF9pc3NldChleGVj
bGlzdHMtPnBvcnQpKQogCQlnb3RvIG91dF9jbGVhcjsKIAotCWNlID0gcG9ydF9yZXF1ZXN0KGV4
ZWNsaXN0cy0+cG9ydCktPmh3X2NvbnRleHQ7CisJcnEgPSBwb3J0X3JlcXVlc3QoZXhlY2xpc3Rz
LT5wb3J0KTsKKwljZSA9IHJxLT5od19jb250ZXh0OwogCiAJLyoKIAkgKiBDYXRjaCB1cCB3aXRo
IGFueSBtaXNzZWQgY29udGV4dC1zd2l0Y2ggaW50ZXJydXB0cy4KQEAgLTE5MTAsMTYgKzIxOTQs
MTAgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJICovCiAJZXhlY2xpc3RzX2NhbmNlbF9wb3J0X3Jl
cXVlc3RzKGV4ZWNsaXN0cyk7CiAKLQkvKiBQdXNoIGJhY2sgYW55IGluY29tcGxldGUgcmVxdWVz
dHMgZm9yIHJlcGxheSBhZnRlciB0aGUgcmVzZXQuICovCi0JcnEgPSBfX3Vud2luZF9pbmNvbXBs
ZXRlX3JlcXVlc3RzKGVuZ2luZSwgMCk7CisJcnEgPSBhY3RpdmVfcmVxdWVzdChycSk7CiAJaWYg
KCFycSkKIAkJZ290byBvdXRfcmVwbGF5OwogCi0JaWYgKHJxLT5od19jb250ZXh0ICE9IGNlKSB7
IC8qIGNhdWdodCBqdXN0IGJlZm9yZSBhIENTIGV2ZW50ICovCi0JCXJxID0gTlVMTDsKLQkJZ290
byBvdXRfcmVwbGF5OwotCX0KLQogCS8qCiAJICogSWYgdGhpcyByZXF1ZXN0IGhhc24ndCBzdGFy
dGVkIHlldCwgZS5nLiBpdCBpcyB3YWl0aW5nIG9uIGEKIAkgKiBzZW1hcGhvcmUsIHdlIG5lZWQg
dG8gYXZvaWQgc2tpcHBpbmcgdGhlIHJlcXVlc3Qgb3IgZWxzZSB3ZQpAQCAtMTk2NiwxMyArMjI0
NCwxNiBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAl9CiAJZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRl
KHJlZ3MsIGNlLCBlbmdpbmUsIGNlLT5yaW5nKTsKIAotCS8qIFJlcnVuIHRoZSByZXF1ZXN0OyBp
dHMgcGF5bG9hZCBoYXMgYmVlbiBuZXV0ZXJlZCAoaWYgZ3VpbHR5KS4gKi8KIG91dF9yZXBsYXk6
CisJLyogUmVydW4gdGhlIHJlcXVlc3Q7IGl0cyBwYXlsb2FkIGhhcyBiZWVuIG5ldXRlcmVkIChp
ZiBndWlsdHkpLiAqLwogCWNlLT5yaW5nLT5oZWFkID0KIAkJcnEgPyBpbnRlbF9yaW5nX3dyYXAo
Y2UtPnJpbmcsIHJxLT5oZWFkKSA6IGNlLT5yaW5nLT50YWlsOwogCWludGVsX3JpbmdfdXBkYXRl
X3NwYWNlKGNlLT5yaW5nKTsKIAlfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0YXRlKGNlLCBlbmdp
bmUpOwogCisJLyogUHVzaCBiYWNrIGFueSBpbmNvbXBsZXRlIHJlcXVlc3RzIGZvciByZXBsYXkg
YWZ0ZXIgdGhlIHJlc2V0LiAqLworCV9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoZW5naW5l
LCAwKTsKKwogb3V0X2NsZWFyOgogCWV4ZWNsaXN0c19jbGVhcl9hbGxfYWN0aXZlKGV4ZWNsaXN0
cyk7CiB9CkBAIC0yMDQ2LDYgKzIzMjcsMjYgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNl
bF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWk5MTVfcHJpb2xp
c3RfZnJlZShwKTsKIAl9CiAKKwkvKiBDYW5jZWwgYWxsIGF0dGFjaGVkIHZpcnR1YWwgZW5naW5l
cyAqLworCXdoaWxlICgocmIgPSByYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+dmlydHVhbCkp
KSB7CisJCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVv
ZigqdmUpLCBub2Rlc1tlbmdpbmUtPmlkXS5yYik7CisKKwkJcmJfZXJhc2VfY2FjaGVkKHJiLCAm
ZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJUkJfQ0xFQVJfTk9ERShyYik7CisKKwkJc3Bpbl9sb2Nr
KCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJaWYgKHZlLT5yZXF1ZXN0KSB7CisJCQl2ZS0+
cmVxdWVzdC0+ZW5naW5lID0gZW5naW5lOworCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHZlLT5y
ZXF1ZXN0KTsKKwkJCWRtYV9mZW5jZV9zZXRfZXJyb3IoJnZlLT5yZXF1ZXN0LT5mZW5jZSwgLUVJ
Tyk7CisJCQlpOTE1X3JlcXVlc3RfbWFya19jb21wbGV0ZSh2ZS0+cmVxdWVzdCk7CisJCQl2ZS0+
YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CisJCQl2ZS0+cmVx
dWVzdCA9IE5VTEw7CisJCX0KKwkJc3Bpbl91bmxvY2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2sp
OworCX0KKwogCS8qIFJlbWFpbmluZyBfdW5yZWFkeV8gcmVxdWVzdHMgd2lsbCBiZSBub3AnZWQg
d2hlbiBzdWJtaXR0ZWQgKi8KIAogCWV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9IElO
VF9NSU47CkBAIC0yNTI5LDEyICsyODMwLDE1IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0
X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCiAJYm9vbCByY3MgPSBlbmdpbmUtPmNsYXNzID09IFJFTkRF
Ul9DTEFTUzsKIAl1MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19iYXNlOwogCi0JLyogQSBjb250ZXh0
IGlzIGFjdHVhbGx5IGEgYmlnIGJhdGNoIGJ1ZmZlciB3aXRoIHNldmVyYWwKKwkvKgorCSAqIEEg
Y29udGV4dCBpcyBhY3R1YWxseSBhIGJpZyBiYXRjaCBidWZmZXIgd2l0aCBzZXZlcmFsCiAJICog
TUlfTE9BRF9SRUdJU1RFUl9JTU0gY29tbWFuZHMgZm9sbG93ZWQgYnkgKHJlZywgdmFsdWUpIHBh
aXJzLiBUaGUKIAkgKiB2YWx1ZXMgd2UgYXJlIHNldHRpbmcgaGVyZSBhcmUgb25seSBmb3IgdGhl
IGZpcnN0IGNvbnRleHQgcmVzdG9yZToKIAkgKiBvbiBhIHN1YnNlcXVlbnQgc2F2ZSwgdGhlIEdQ
VSB3aWxsIHJlY3JlYXRlIHRoaXMgYmF0Y2hidWZmZXIgd2l0aCBuZXcKIAkgKiB2YWx1ZXMgKGlu
Y2x1ZGluZyBhbGwgdGhlIG1pc3NpbmcgTUlfTE9BRF9SRUdJU1RFUl9JTU0gY29tbWFuZHMgdGhh
dAogCSAqIHdlIGFyZSBub3QgaW5pdGlhbGl6aW5nIGhlcmUpLgorCSAqCisJICogTXVzdCBrZWVw
IGNvbnNpc3RlbnQgd2l0aCB2aXJ0dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKCkuCiAJICov
CiAJcmVnc1tDVFhfTFJJX0hFQURFUl8wXSA9IE1JX0xPQURfUkVHSVNURVJfSU1NKHJjcyA/IDE0
IDogMTEpIHwKIAkJCQkgTUlfTFJJX0ZPUkNFX1BPU1RFRDsKQEAgLTI3NTMsNiArMzA1NywzMjAg
QEAgc3RhdGljIGludCBleGVjbGlzdHNfY29udGV4dF9kZWZlcnJlZF9hbGxvYyhzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCiAJcmV0dXJuIHJldDsKIH0KIAorc3RhdGljIHZvaWQgdmlydHVhbF9j
b250ZXh0X2Rlc3Ryb3koc3RydWN0IGtyZWYgKmtyZWYpCit7CisJc3RydWN0IHZpcnR1YWxfZW5n
aW5lICp2ZSA9CisJCWNvbnRhaW5lcl9vZihrcmVmLCB0eXBlb2YoKnZlKSwgY29udGV4dC5yZWYp
OworCXVuc2lnbmVkIGludCBuOworCisJR0VNX0JVR19PTih2ZS0+cmVxdWVzdCk7CisJR0VNX0JV
R19PTih2ZS0+Y29udGV4dC5hY3RpdmUpOworCisJZm9yIChuID0gMDsgbiA8IHZlLT5udW1fc2li
bGluZ3M7IG4rKykgeworCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzaWJsaW5nID0gdmUtPnNp
YmxpbmdzW25dOworCQlzdHJ1Y3QgcmJfbm9kZSAqbm9kZSA9ICZ2ZS0+bm9kZXNbc2libGluZy0+
aWRdLnJiOworCisJCWlmIChSQl9FTVBUWV9OT0RFKG5vZGUpKQorCQkJY29udGludWU7CisKKwkJ
c3Bpbl9sb2NrX2lycSgmc2libGluZy0+dGltZWxpbmUubG9jayk7CisKKwkJLyogRGV0YWNobWVu
dCBpcyBsYXppbHkgcGVyZm9ybWVkIGluIHRoZSBleGVjbGlzdHMgdGFza2xldCAqLworCQlpZiAo
IVJCX0VNUFRZX05PREUobm9kZSkpCisJCQlyYl9lcmFzZV9jYWNoZWQobm9kZSwgJnNpYmxpbmct
PmV4ZWNsaXN0cy52aXJ0dWFsKTsKKworCQlzcGluX3VubG9ja19pcnEoJnNpYmxpbmctPnRpbWVs
aW5lLmxvY2spOworCX0KKwlHRU1fQlVHX09OKF9fdGFza2xldF9pc19zY2hlZHVsZWQoJnZlLT5i
YXNlLmV4ZWNsaXN0cy50YXNrbGV0KSk7CisKKwlpZiAodmUtPmNvbnRleHQuc3RhdGUpCisJCV9f
ZXhlY2xpc3RzX2NvbnRleHRfZmluaSgmdmUtPmNvbnRleHQpOworCisJaTkxNV90aW1lbGluZV9m
aW5pKCZ2ZS0+YmFzZS50aW1lbGluZSk7CisJa2ZyZWUodmUpOworfQorCitzdGF0aWMgdm9pZCB2
aXJ0dWFsX2VuZ2luZV9pbml0aWFsX2hpbnQoc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSkKK3sK
KwlpbnQgc3dwOworCisJLyoKKwkgKiBQaWNrIGEgcmFuZG9tIHNpYmxpbmcgb24gc3RhcnRpbmcg
dG8gaGVscCBzcHJlYWQgdGhlIGxvYWQgYXJvdW5kLgorCSAqCisJICogTmV3IGNvbnRleHRzIGFy
ZSB0eXBpY2FsbHkgY3JlYXRlZCB3aXRoIGV4YWN0bHkgdGhlIHNhbWUgb3JkZXIKKwkgKiBvZiBz
aWJsaW5ncywgYW5kIG9mdGVuIHN0YXJ0ZWQgaW4gYmF0Y2hlcy4gRHVlIHRvIHRoZSB3YXkgd2Ug
aXRlcmF0ZQorCSAqIHRoZSBhcnJheSBvZiBzaWJsaW5nIHdoZW4gc3VibWl0dGluZyByZXF1ZXN0
cywgc2libGluZ1swXSBpcworCSAqIHByaW9yaXRpc2VkIGZvciBkZXF1ZXVpbmcuIElmIHdlIG1h
a2Ugc3VyZSB0aGF0IHNpYmxpbmdbMF0gaXMgZmFpcmx5CisJICogcmFuZG9taXNlZCBhY3Jvc3Mg
dGhlIHN5c3RlbSwgd2UgYWxzbyBoZWxwIHNwcmVhZCB0aGUgbG9hZCBieSB0aGUKKwkgKiBmaXJz
dCBlbmdpbmUgd2UgaW5zcGVjdCBiZWluZyBkaWZmZXJlbnQgZWFjaCB0aW1lLgorCSAqCisJICog
TkIgVGhpcyBkb2VzIG5vdCBmb3JjZSB1cyB0byBleGVjdXRlIG9uIHRoaXMgZW5naW5lLCBpdCB3
aWxsIGp1c3QKKwkgKiB0eXBpY2FsbHkgYmUgdGhlIGZpcnN0IHdlIGluc3BlY3QgZm9yIHN1Ym1p
c3Npb24uCisJICovCisJc3dwID0gcHJhbmRvbV91MzJfbWF4KHZlLT5udW1fc2libGluZ3MpOwor
CWlmICghc3dwKQorCQlyZXR1cm47CisKKwlzd2FwKHZlLT5zaWJsaW5nc1tzd3BdLCB2ZS0+c2li
bGluZ3NbMF0pOworCXZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHModmUtPmNvbnRleHQu
bHJjX3JlZ19zdGF0ZSwKKwkJCQkJdmUtPnNpYmxpbmdzWzBdKTsKK30KKworc3RhdGljIGludCB2
aXJ0dWFsX2NvbnRleHRfcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3Qg
dmlydHVhbF9lbmdpbmUgKnZlID0gY29udGFpbmVyX29mKGNlLCB0eXBlb2YoKnZlKSwgY29udGV4
dCk7CisJaW50IGVycjsKKworCS8qIE5vdGU6IHdlIG11c3QgdXNlIGEgcmVhbCBlbmdpbmUgY2xh
c3MgZm9yIHNldHRpbmcgdXAgcmVnIHN0YXRlICovCisJZXJyID0gX19leGVjbGlzdHNfY29udGV4
dF9waW4oY2UsIHZlLT5zaWJsaW5nc1swXSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKwor
CXZpcnR1YWxfZW5naW5lX2luaXRpYWxfaGludCh2ZSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRp
YyB2b2lkIHZpcnR1YWxfY29udGV4dF9lbnRlcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9IGNvbnRhaW5lcl9vZihjZSwgdHlwZW9mKCp2
ZSksIGNvbnRleHQpOworCXVuc2lnbmVkIGludCBuOworCisJZm9yIChuID0gMDsgbiA8IHZlLT5u
dW1fc2libGluZ3M7IG4rKykKKwkJaW50ZWxfZW5naW5lX3BtX2dldCh2ZS0+c2libGluZ3Nbbl0p
OworfQorCitzdGF0aWMgdm9pZCB2aXJ0dWFsX2NvbnRleHRfZXhpdChzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9IGNvbnRhaW5lcl9vZihj
ZSwgdHlwZW9mKCp2ZSksIGNvbnRleHQpOworCXVuc2lnbmVkIGludCBuOworCisJY2UtPnNhdHVy
YXRlZCA9IDA7CisJZm9yIChuID0gMDsgbiA8IHZlLT5udW1fc2libGluZ3M7IG4rKykKKwkJaW50
ZWxfZW5naW5lX3BtX3B1dCh2ZS0+c2libGluZ3Nbbl0pOworfQorCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IGludGVsX2NvbnRleHRfb3BzIHZpcnR1YWxfY29udGV4dF9vcHMgPSB7CisJLnBpbiA9IHZp
cnR1YWxfY29udGV4dF9waW4sCisJLnVucGluID0gZXhlY2xpc3RzX2NvbnRleHRfdW5waW4sCisK
KwkuZW50ZXIgPSB2aXJ0dWFsX2NvbnRleHRfZW50ZXIsCisJLmV4aXQgPSB2aXJ0dWFsX2NvbnRl
eHRfZXhpdCwKKworCS5kZXN0cm95ID0gdmlydHVhbF9jb250ZXh0X2Rlc3Ryb3ksCit9OworCitz
dGF0aWMgdm9pZCB2aXJ0dWFsX3N1Ym1pc3Npb25fdGFza2xldCh1bnNpZ25lZCBsb25nIGRhdGEp
Cit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICogY29uc3QgdmUgPSAoc3RydWN0IHZpcnR1YWxf
ZW5naW5lICopZGF0YTsKKwljb25zdCBpbnQgcHJpbyA9IHZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1
ZV9wcmlvcml0eV9oaW50OworCXVuc2lnbmVkIGludCBuOworCisJbG9jYWxfaXJxX2Rpc2FibGUo
KTsKKwlmb3IgKG4gPSAwOyBSRUFEX09OQ0UodmUtPnJlcXVlc3QpICYmIG4gPCB2ZS0+bnVtX3Np
YmxpbmdzOyBuKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9IHZlLT5z
aWJsaW5nc1tuXTsKKwkJc3RydWN0IHZlX25vZGUgKiBjb25zdCBub2RlID0gJnZlLT5ub2Rlc1tz
aWJsaW5nLT5pZF07CisJCXN0cnVjdCByYl9ub2RlICoqcGFyZW50LCAqcmI7CisJCWJvb2wgZmly
c3Q7CisKKwkJc3Bpbl9sb2NrKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsKKworCQlpZiAoIVJC
X0VNUFRZX05PREUoJm5vZGUtPnJiKSkgeworCQkJLyoKKwkJCSAqIENoZWF0IGFuZCBhdm9pZCBy
ZWJhbGFuY2luZyB0aGUgdHJlZSBpZiB3ZSBjYW4KKwkJCSAqIHJldXNlIHRoaXMgbm9kZSBpbiBz
aXR1LgorCQkJICovCisJCQlmaXJzdCA9IHJiX2ZpcnN0X2NhY2hlZCgmc2libGluZy0+ZXhlY2xp
c3RzLnZpcnR1YWwpID09CisJCQkJJm5vZGUtPnJiOworCQkJaWYgKHByaW8gPT0gbm9kZS0+cHJp
byB8fCAocHJpbyA+IG5vZGUtPnByaW8gJiYgZmlyc3QpKQorCQkJCWdvdG8gc3VibWl0X2VuZ2lu
ZTsKKworCQkJcmJfZXJhc2VfY2FjaGVkKCZub2RlLT5yYiwgJnNpYmxpbmctPmV4ZWNsaXN0cy52
aXJ0dWFsKTsKKwkJfQorCisJCXJiID0gTlVMTDsKKwkJZmlyc3QgPSB0cnVlOworCQlwYXJlbnQg
PSAmc2libGluZy0+ZXhlY2xpc3RzLnZpcnR1YWwucmJfcm9vdC5yYl9ub2RlOworCQl3aGlsZSAo
KnBhcmVudCkgeworCQkJc3RydWN0IHZlX25vZGUgKm90aGVyOworCisJCQlyYiA9ICpwYXJlbnQ7
CisJCQlvdGhlciA9IHJiX2VudHJ5KHJiLCB0eXBlb2YoKm90aGVyKSwgcmIpOworCQkJaWYgKHBy
aW8gPiBvdGhlci0+cHJpbykgeworCQkJCXBhcmVudCA9ICZyYi0+cmJfbGVmdDsKKwkJCX0gZWxz
ZSB7CisJCQkJcGFyZW50ID0gJnJiLT5yYl9yaWdodDsKKwkJCQlmaXJzdCA9IGZhbHNlOworCQkJ
fQorCQl9CisKKwkJcmJfbGlua19ub2RlKCZub2RlLT5yYiwgcmIsIHBhcmVudCk7CisJCXJiX2lu
c2VydF9jb2xvcl9jYWNoZWQoJm5vZGUtPnJiLAorCQkJCSAgICAgICAmc2libGluZy0+ZXhlY2xp
c3RzLnZpcnR1YWwsCisJCQkJICAgICAgIGZpcnN0KTsKKworc3VibWl0X2VuZ2luZToKKwkJR0VN
X0JVR19PTihSQl9FTVBUWV9OT0RFKCZub2RlLT5yYikpOworCQlub2RlLT5wcmlvID0gcHJpbzsK
KwkJaWYgKGZpcnN0ICYmIHByaW8gPiBzaWJsaW5nLT5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlf
aGludCkgeworCQkJc2libGluZy0+ZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBwcmlv
OworCQkJdGFza2xldF9oaV9zY2hlZHVsZSgmc2libGluZy0+ZXhlY2xpc3RzLnRhc2tsZXQpOwor
CQl9CisKKwkJc3Bpbl91bmxvY2soJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCX0KKwlsb2Nh
bF9pcnFfZW5hYmxlKCk7Cit9CisKK3N0YXRpYyB2b2lkIHZpcnR1YWxfc3VibWl0X3JlcXVlc3Qo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9
IHRvX3ZpcnR1YWxfZW5naW5lKHJxLT5lbmdpbmUpOworCisJR0VNX1RSQUNFKCIlczogcnE9JWxs
eDolbGxkXG4iLAorCQkgIHZlLT5iYXNlLm5hbWUsCisJCSAgcnEtPmZlbmNlLmNvbnRleHQsCisJ
CSAgcnEtPmZlbmNlLnNlcW5vKTsKKworCUdFTV9CVUdfT04odmUtPmJhc2Uuc3VibWl0X3JlcXVl
c3QgIT0gdmlydHVhbF9zdWJtaXRfcmVxdWVzdCk7CisKKwlHRU1fQlVHX09OKHZlLT5yZXF1ZXN0
KTsKKwl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IHJxX3ByaW8ocnEp
OworCVdSSVRFX09OQ0UodmUtPnJlcXVlc3QsIHJxKTsKKworCXRhc2tsZXRfc2NoZWR1bGUoJnZl
LT5iYXNlLmV4ZWNsaXN0cy50YXNrbGV0KTsKK30KKworc3RydWN0IGludGVsX2NvbnRleHQgKgor
aW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpj
dHgsCisJCQkgICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLAorCQkJICAg
ICAgIHVuc2lnbmVkIGludCBjb3VudCkKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlOwor
CXVuc2lnbmVkIGludCBuOworCWludCBlcnI7CisKKwlpZiAoY291bnQgPT0gMCkKKwkJcmV0dXJu
IEVSUl9QVFIoLUVJTlZBTCk7CisKKwlpZiAoY291bnQgPT0gMSkKKwkJcmV0dXJuIGludGVsX2Nv
bnRleHRfY3JlYXRlKGN0eCwgc2libGluZ3NbMF0pOworCisJdmUgPSBremFsbG9jKHN0cnVjdF9z
aXplKHZlLCBzaWJsaW5ncywgY291bnQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXZlKQorCQlyZXR1
cm4gRVJSX1BUUigtRU5PTUVNKTsKKworCXZlLT5iYXNlLmk5MTUgPSBjdHgtPmk5MTU7CisJdmUt
PmJhc2UuaWQgPSAtMTsKKwl2ZS0+YmFzZS5jbGFzcyA9IE9USEVSX0NMQVNTOworCXZlLT5iYXNl
LnVhYmlfY2xhc3MgPSBJOTE1X0VOR0lORV9DTEFTU19JTlZBTElEOworCXZlLT5iYXNlLmluc3Rh
bmNlID0gSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9WSVJUVUFMOworCXZlLT5iYXNlLmZsYWdz
ID0gSTkxNV9FTkdJTkVfSVNfVklSVFVBTDsKKworCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNp
emVvZih2ZS0+YmFzZS5uYW1lKSwgInZpcnR1YWwiKTsKKworCWVyciA9IGk5MTVfdGltZWxpbmVf
aW5pdChjdHgtPmk5MTUsICZ2ZS0+YmFzZS50aW1lbGluZSwgTlVMTCk7CisJaWYgKGVycikKKwkJ
Z290byBlcnJfcHV0OworCWk5MTVfdGltZWxpbmVfc2V0X3N1YmNsYXNzKCZ2ZS0+YmFzZS50aW1l
bGluZSwgVElNRUxJTkVfVklSVFVBTCk7CisKKwlpbnRlbF9lbmdpbmVfaW5pdF9leGVjbGlzdHMo
JnZlLT5iYXNlKTsKKworCXZlLT5iYXNlLmNvcHMgPSAmdmlydHVhbF9jb250ZXh0X29wczsKKwl2
ZS0+YmFzZS5yZXF1ZXN0X2FsbG9jID0gZXhlY2xpc3RzX3JlcXVlc3RfYWxsb2M7CisKKwl2ZS0+
YmFzZS5zY2hlZHVsZSA9IGk5MTVfc2NoZWR1bGU7CisJdmUtPmJhc2Uuc3VibWl0X3JlcXVlc3Qg
PSB2aXJ0dWFsX3N1Ym1pdF9yZXF1ZXN0OworCisJdmUtPmJhc2UuZXhlY2xpc3RzLnF1ZXVlX3By
aW9yaXR5X2hpbnQgPSBJTlRfTUlOOworCXRhc2tsZXRfaW5pdCgmdmUtPmJhc2UuZXhlY2xpc3Rz
LnRhc2tsZXQsCisJCSAgICAgdmlydHVhbF9zdWJtaXNzaW9uX3Rhc2tsZXQsCisJCSAgICAgKHVu
c2lnbmVkIGxvbmcpdmUpOworCisJaW50ZWxfY29udGV4dF9pbml0KCZ2ZS0+Y29udGV4dCwgY3R4
LCAmdmUtPmJhc2UpOworCisJZm9yIChuID0gMDsgbiA8IGNvdW50OyBuKyspIHsKKwkJc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9IHNpYmxpbmdzW25dOworCisJCUdFTV9CVUdfT04o
IWlzX3Bvd2VyX29mXzIoc2libGluZy0+bWFzaykpOworCQlpZiAoc2libGluZy0+bWFzayAmIHZl
LT5iYXNlLm1hc2spIHsKKwkJCURSTV9ERUJVRygiZHVwbGljYXRlICVzIGVudHJ5IGluIGxvYWQg
YmFsYW5jZXJcbiIsCisJCQkJICBzaWJsaW5nLT5uYW1lKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJ
CQlnb3RvIGVycl9wdXQ7CisJCX0KKworCQkvKgorCQkgKiBUaGUgdmlydHVhbCBlbmdpbmUgaW1w
bGVtZW50YXRpb24gaXMgdGlnaHRseSBjb3VwbGVkIHRvCisJCSAqIHRoZSBleGVjbGlzdHMgYmFj
a2VuZCAtLSB3ZSBwdXNoIG91dCByZXF1ZXN0IGRpcmVjdGx5CisJCSAqIGludG8gYSB0cmVlIGlu
c2lkZSBlYWNoIHBoeXNpY2FsIGVuZ2luZS4gV2UgY291bGQgc3VwcG9ydAorCQkgKiBsYXllcmlu
ZyBpZiB3ZSBoYW5kbGUgY2xvbmluZyBvZiB0aGUgcmVxdWVzdHMgYW5kCisJCSAqIHN1Ym1pdHRp
bmcgYSBjb3B5IGludG8gZWFjaCBiYWNrZW5kLgorCQkgKi8KKwkJaWYgKHNpYmxpbmctPmV4ZWNs
aXN0cy50YXNrbGV0LmZ1bmMgIT0KKwkJICAgIGV4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQp
IHsKKwkJCWVyciA9IC1FTk9ERVY7CisJCQlnb3RvIGVycl9wdXQ7CisJCX0KKworCQlHRU1fQlVH
X09OKFJCX0VNUFRZX05PREUoJnZlLT5ub2Rlc1tzaWJsaW5nLT5pZF0ucmIpKTsKKwkJUkJfQ0xF
QVJfTk9ERSgmdmUtPm5vZGVzW3NpYmxpbmctPmlkXS5yYik7CisKKwkJdmUtPnNpYmxpbmdzW3Zl
LT5udW1fc2libGluZ3MrK10gPSBzaWJsaW5nOworCQl2ZS0+YmFzZS5tYXNrIHw9IHNpYmxpbmct
Pm1hc2s7CisKKwkJLyoKKwkJICogQWxsIHBoeXNpY2FsIGVuZ2luZXMgbXVzdCBiZSBjb21wYXRp
YmxlIGZvciB0aGVpciBlbWlzc2lvbgorCQkgKiBmdW5jdGlvbnMgKGFzIHdlIGJ1aWxkIHRoZSBp
bnN0cnVjdGlvbnMgZHVyaW5nIHJlcXVlc3QKKwkJICogY29uc3RydWN0aW9uIGFuZCBkbyBub3Qg
YWx0ZXIgdGhlbSBiZWZvcmUgc3VibWlzc2lvbgorCQkgKiBvbiB0aGUgcGh5c2ljYWwgZW5naW5l
KS4gV2UgdXNlIHRoZSBlbmdpbmUgY2xhc3MgYXMgYSBndWlkZQorCQkgKiBoZXJlLCBhbHRob3Vn
aCB0aGF0IGNvdWxkIGJlIHJlZmluZWQuCisJCSAqLworCQlpZiAodmUtPmJhc2UuY2xhc3MgIT0g
T1RIRVJfQ0xBU1MpIHsKKwkJCWlmICh2ZS0+YmFzZS5jbGFzcyAhPSBzaWJsaW5nLT5jbGFzcykg
eworCQkJCURSTV9ERUJVRygiaW52YWxpZCBtaXhpbmcgb2YgZW5naW5lIGNsYXNzLCBzaWJsaW5n
ICVkLCBhbHJlYWR5ICVkXG4iLAorCQkJCQkgIHNpYmxpbmctPmNsYXNzLCB2ZS0+YmFzZS5jbGFz
cyk7CisJCQkJZXJyID0gLUVJTlZBTDsKKwkJCQlnb3RvIGVycl9wdXQ7CisJCQl9CisJCQljb250
aW51ZTsKKwkJfQorCisJCXZlLT5iYXNlLmNsYXNzID0gc2libGluZy0+Y2xhc3M7CisJCXZlLT5i
YXNlLnVhYmlfY2xhc3MgPSBzaWJsaW5nLT51YWJpX2NsYXNzOworCQlzbnByaW50Zih2ZS0+YmFz
ZS5uYW1lLCBzaXplb2YodmUtPmJhc2UubmFtZSksCisJCQkgInYlZHglZCIsIHZlLT5iYXNlLmNs
YXNzLCBjb3VudCk7CisJCXZlLT5iYXNlLmNvbnRleHRfc2l6ZSA9IHNpYmxpbmctPmNvbnRleHRf
c2l6ZTsKKworCQl2ZS0+YmFzZS5lbWl0X2JiX3N0YXJ0ID0gc2libGluZy0+ZW1pdF9iYl9zdGFy
dDsKKwkJdmUtPmJhc2UuZW1pdF9mbHVzaCA9IHNpYmxpbmctPmVtaXRfZmx1c2g7CisJCXZlLT5i
YXNlLmVtaXRfaW5pdF9icmVhZGNydW1iID0gc2libGluZy0+ZW1pdF9pbml0X2JyZWFkY3J1bWI7
CisJCXZlLT5iYXNlLmVtaXRfZmluaV9icmVhZGNydW1iID0gc2libGluZy0+ZW1pdF9maW5pX2Jy
ZWFkY3J1bWI7CisJCXZlLT5iYXNlLmVtaXRfZmluaV9icmVhZGNydW1iX2R3ID0KKwkJCXNpYmxp
bmctPmVtaXRfZmluaV9icmVhZGNydW1iX2R3OworCX0KKworCXJldHVybiAmdmUtPmNvbnRleHQ7
CisKK2Vycl9wdXQ6CisJaW50ZWxfY29udGV4dF9wdXQoJnZlLT5jb250ZXh0KTsKKwlyZXR1cm4g
RVJSX1BUUihlcnIpOworfQorCitzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9leGVjbGlz
dHNfY2xvbmVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkJICAgICAg
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqc3JjKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAq
c2UgPSB0b192aXJ0dWFsX2VuZ2luZShzcmMpOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpkc3Q7
CisKKwlkc3QgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoY3R4LAorCQkJCQkgICAg
IHNlLT5zaWJsaW5ncywKKwkJCQkJICAgICBzZS0+bnVtX3NpYmxpbmdzKTsKKwlpZiAoSVNfRVJS
KGRzdCkpCisJCXJldHVybiBkc3Q7CisKKwlyZXR1cm4gZHN0OworfQorCiB2b2lkIGludGVsX2V4
ZWNsaXN0c19zaG93X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJ
CQkgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0sCiAJCQkJICAgdm9pZCAoKnNob3dfcmVxdWVzdCko
c3RydWN0IGRybV9wcmludGVyICptLApAQCAtMjgxMCw2ICszNDI4LDI5IEBAIHZvaWQgaW50ZWxf
ZXhlY2xpc3RzX3Nob3dfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAog
CQlzaG93X3JlcXVlc3QobSwgbGFzdCwgIlx0XHRRICIpOwogCX0KIAorCWxhc3QgPSBOVUxMOwor
CWNvdW50ID0gMDsKKwlmb3IgKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1
YWwpOyByYjsgcmIgPSByYl9uZXh0KHJiKSkgeworCQlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZl
ID0KKwkJCXJiX2VudHJ5KHJiLCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5naW5lLT5pZF0ucmIpOwor
CQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IFJFQURfT05DRSh2ZS0+cmVxdWVzdCk7CisKKwkJ
aWYgKHJxKSB7CisJCQlpZiAoY291bnQrKyA8IG1heCAtIDEpCisJCQkJc2hvd19yZXF1ZXN0KG0s
IHJxLCAiXHRcdFYgIik7CisJCQllbHNlCisJCQkJbGFzdCA9IHJxOworCQl9CisJfQorCWlmIChs
YXN0KSB7CisJCWlmIChjb3VudCA+IG1heCkgeworCQkJZHJtX3ByaW50ZihtLAorCQkJCSAgICJc
dFx0Li4uc2tpcHBpbmcgJWQgdmlydHVhbCByZXF1ZXN0cy4uLlxuIiwKKwkJCQkgICBjb3VudCAt
IG1heCk7CisJCX0KKwkJc2hvd19yZXF1ZXN0KG0sIGxhc3QsICJcdFx0ViAiKTsKKwl9CisKIAlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKIH0K
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuaAppbmRleCBhMGRjOTA3YTcyNDkuLjU1MzA2
MDYwNTJlNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKQEAgLTExNCw0ICsxMTQs
MTMgQEAgdm9pZCBpbnRlbF9leGVjbGlzdHNfc2hvd19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUsCiAJCQkJCQkJY29uc3QgY2hhciAqcHJlZml4KSwKIAkJCQkgICB1bnNp
Z25lZCBpbnQgbWF4KTsKIAorc3RydWN0IGludGVsX2NvbnRleHQgKgoraW50ZWxfZXhlY2xpc3Rz
X2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICAg
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLAorCQkJICAgICAgIHVuc2lnbmVkIGlu
dCBjb3VudCk7CisKK3N0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2V4ZWNsaXN0c19jbG9u
ZV92aXJ0dWFsKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICpzcmMpOworCiAjZW5kaWYgLyogX0lOVEVMX0xSQ19IXyAqLwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwppbmRleCA1YjNkOGUzM2YxY2YuLmY4ODAy
NzFmYjliYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJj
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKQEAgLTEzMTAs
NiArMTMxMCwxODUgQEAgc3RhdGljIGludCBsaXZlX3ByZWVtcHRfc21va2Uodm9pZCAqYXJnKQog
CXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyBpbnQgbm9wX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1LAorCQkJICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
KnNpYmxpbmdzLAorCQkJICAgICAgdW5zaWduZWQgaW50IG5zaWJsaW5nLAorCQkJICAgICAgdW5z
aWduZWQgaW50IG5jdHgsCisJCQkgICAgICB1bnNpZ25lZCBpbnQgZmxhZ3MpCisjZGVmaW5lIENI
QUlOIEJJVCgwKQoreworCUlHVF9USU1FT1VUKGVuZF90aW1lKTsKKwlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpyZXF1ZXN0WzE2XTsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4WzE2XTsKKwlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqdmVbMTZdOworCXVuc2lnbmVkIGxvbmcgbiwgcHJpbWUsIG5j
OworCXN0cnVjdCBpZ3RfbGl2ZV90ZXN0IHQ7CisJa3RpbWVfdCB0aW1lc1syXSA9IHt9OworCWlu
dCBlcnI7CisKKwlHRU1fQlVHX09OKCFuY3R4IHx8IG5jdHggPiBBUlJBWV9TSVpFKGN0eCkpOwor
CisJZm9yIChuID0gMDsgbiA8IG5jdHg7IG4rKykgeworCQljdHhbbl0gPSBrZXJuZWxfY29udGV4
dChpOTE1KTsKKwkJaWYgKCFjdHhbbl0pIHsKKwkJCWVyciA9IC1FTk9NRU07CisJCQluY3R4ID0g
bjsKKwkJCWdvdG8gb3V0OworCQl9CisKKwkJdmVbbl0gPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRl
X3ZpcnR1YWwoY3R4W25dLAorCQkJCQkJICAgICAgIHNpYmxpbmdzLCBuc2libGluZyk7CisJCWlm
IChJU19FUlIodmVbbl0pKSB7CisJCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbl0pOworCQkJ
ZXJyID0gUFRSX0VSUih2ZVtuXSk7CisJCQluY3R4ID0gbjsKKwkJCWdvdG8gb3V0OworCQl9CisK
KwkJZXJyID0gaW50ZWxfY29udGV4dF9waW4odmVbbl0pOworCQlpZiAoZXJyKSB7CisJCQlpbnRl
bF9jb250ZXh0X3B1dCh2ZVtuXSk7CisJCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbl0pOwor
CQkJbmN0eCA9IG47CisJCQlnb3RvIG91dDsKKwkJfQorCX0KKworCWVyciA9IGlndF9saXZlX3Rl
c3RfYmVnaW4oJnQsIGk5MTUsIF9fZnVuY19fLCB2ZVswXS0+ZW5naW5lLT5uYW1lKTsKKwlpZiAo
ZXJyKQorCQlnb3RvIG91dDsKKworCWZvcl9lYWNoX3ByaW1lX251bWJlcl9mcm9tKHByaW1lLCAx
LCA4MTkyKSB7CisJCXRpbWVzWzFdID0ga3RpbWVfZ2V0X3JhdygpOworCisJCWlmIChmbGFncyAm
IENIQUlOKSB7CisJCQlmb3IgKG5jID0gMDsgbmMgPCBuY3R4OyBuYysrKSB7CisJCQkJZm9yIChu
ID0gMDsgbiA8IHByaW1lOyBuKyspIHsKKwkJCQkJcmVxdWVzdFtuY10gPQorCQkJCQkJaTkxNV9y
ZXF1ZXN0X2NyZWF0ZSh2ZVtuY10pOworCQkJCQlpZiAoSVNfRVJSKHJlcXVlc3RbbmNdKSkgewor
CQkJCQkJZXJyID0gUFRSX0VSUihyZXF1ZXN0W25jXSk7CisJCQkJCQlnb3RvIG91dDsKKwkJCQkJ
fQorCisJCQkJCWk5MTVfcmVxdWVzdF9hZGQocmVxdWVzdFtuY10pOworCQkJCX0KKwkJCX0KKwkJ
fSBlbHNlIHsKKwkJCWZvciAobiA9IDA7IG4gPCBwcmltZTsgbisrKSB7CisJCQkJZm9yIChuYyA9
IDA7IG5jIDwgbmN0eDsgbmMrKykgeworCQkJCQlyZXF1ZXN0W25jXSA9CisJCQkJCQlpOTE1X3Jl
cXVlc3RfY3JlYXRlKHZlW25jXSk7CisJCQkJCWlmIChJU19FUlIocmVxdWVzdFtuY10pKSB7CisJ
CQkJCQllcnIgPSBQVFJfRVJSKHJlcXVlc3RbbmNdKTsKKwkJCQkJCWdvdG8gb3V0OworCQkJCQl9
CisKKwkJCQkJaTkxNV9yZXF1ZXN0X2FkZChyZXF1ZXN0W25jXSk7CisJCQkJfQorCQkJfQorCQl9
CisKKwkJZm9yIChuYyA9IDA7IG5jIDwgbmN0eDsgbmMrKykgeworCQkJaWYgKGk5MTVfcmVxdWVz
dF93YWl0KHJlcXVlc3RbbmNdLAorCQkJCQkgICAgICBJOTE1X1dBSVRfTE9DS0VELAorCQkJCQkg
ICAgICBIWiAvIDEwKSA8IDApIHsKKwkJCQlwcl9lcnIoIiVzKCVzKTogd2FpdCBmb3IgJWxseDol
bGxkIHRpbWVkIG91dFxuIiwKKwkJCQkgICAgICAgX19mdW5jX18sIHZlWzBdLT5lbmdpbmUtPm5h
bWUsCisJCQkJICAgICAgIHJlcXVlc3RbbmNdLT5mZW5jZS5jb250ZXh0LAorCQkJCSAgICAgICBy
ZXF1ZXN0W25jXS0+ZmVuY2Uuc2Vxbm8pOworCisJCQkJR0VNX1RSQUNFKCIlcyglcykgZmFpbGVk
IGF0IHJlcXVlc3QgJWxseDolbGxkXG4iLAorCQkJCQkgIF9fZnVuY19fLCB2ZVswXS0+ZW5naW5l
LT5uYW1lLAorCQkJCQkgIHJlcXVlc3RbbmNdLT5mZW5jZS5jb250ZXh0LAorCQkJCQkgIHJlcXVl
c3RbbmNdLT5mZW5jZS5zZXFubyk7CisJCQkJR0VNX1RSQUNFX0RVTVAoKTsKKwkJCQlpOTE1X2dl
bV9zZXRfd2VkZ2VkKGk5MTUpOworCQkJCWJyZWFrOworCQkJfQorCQl9CisKKwkJdGltZXNbMV0g
PSBrdGltZV9zdWIoa3RpbWVfZ2V0X3JhdygpLCB0aW1lc1sxXSk7CisJCWlmIChwcmltZSA9PSAx
KQorCQkJdGltZXNbMF0gPSB0aW1lc1sxXTsKKworCQlpZiAoX19pZ3RfdGltZW91dChlbmRfdGlt
ZSwgTlVMTCkpCisJCQlicmVhazsKKwl9CisKKwllcnIgPSBpZ3RfbGl2ZV90ZXN0X2VuZCgmdCk7
CisJaWYgKGVycikKKwkJZ290byBvdXQ7CisKKwlwcl9pbmZvKCJSZXF1ZXN0eCVkIGxhdGVuY2ll
cyBvbiAlczogMSA9ICVsbHVucywgJWx1ID0gJWxsdW5zXG4iLAorCQluY3R4LCB2ZVswXS0+ZW5n
aW5lLT5uYW1lLCBrdGltZV90b19ucyh0aW1lc1swXSksCisJCXByaW1lLCBkaXY2NF91NjQoa3Rp
bWVfdG9fbnModGltZXNbMV0pLCBwcmltZSkpOworCitvdXQ6CisJaWYgKGlndF9mbHVzaF90ZXN0
KGk5MTUsIEk5MTVfV0FJVF9MT0NLRUQpKQorCQllcnIgPSAtRUlPOworCisJZm9yIChuYyA9IDA7
IG5jIDwgbmN0eDsgbmMrKykgeworCQlpbnRlbF9jb250ZXh0X3VucGluKHZlW25jXSk7CisJCWlu
dGVsX2NvbnRleHRfcHV0KHZlW25jXSk7CisJCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuY10p
OworCX0KKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfdmlydHVhbF9lbmdpbmUo
dm9pZCAqYXJnKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gYXJnOworCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmdzW01BWF9FTkdJTkVfSU5TVEFOQ0UgKyAxXTsK
KwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQg
aWQ7CisJdW5zaWduZWQgaW50IGNsYXNzLCBpbnN0OworCWludCBlcnIgPSAtRU5PREVWOworCisJ
aWYgKFVTRVNfR1VDX1NVQk1JU1NJT04oaTkxNSkpCisJCXJldHVybiAwOworCisJbXV0ZXhfbG9j
aygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBp
OTE1LCBpZCkgeworCQllcnIgPSBub3BfdmlydHVhbF9lbmdpbmUoaTkxNSwgJmVuZ2luZSwgMSwg
MSwgMCk7CisJCWlmIChlcnIpIHsKKwkJCXByX2VycigiRmFpbGVkIHRvIHdyYXAgZW5naW5lICVz
OiBlcnI9JWRcbiIsCisJCQkgICAgICAgZW5naW5lLT5uYW1lLCBlcnIpOworCQkJZ290byBvdXRf
dW5sb2NrOworCQl9CisJfQorCisJZm9yIChjbGFzcyA9IDA7IGNsYXNzIDw9IE1BWF9FTkdJTkVf
Q0xBU1M7IGNsYXNzKyspIHsKKwkJaW50IG5zaWJsaW5nLCBuOworCisJCW5zaWJsaW5nID0gMDsK
KwkJZm9yIChpbnN0ID0gMDsgaW5zdCA8PSBNQVhfRU5HSU5FX0lOU1RBTkNFOyBpbnN0KyspIHsK
KwkJCWlmICghaTkxNS0+ZW5naW5lX2NsYXNzW2NsYXNzXVtpbnN0XSkKKwkJCQljb250aW51ZTsK
KworCQkJc2libGluZ3NbbnNpYmxpbmcrK10gPSBpOTE1LT5lbmdpbmVfY2xhc3NbY2xhc3NdW2lu
c3RdOworCQl9CisJCWlmIChuc2libGluZyA8IDIpCisJCQljb250aW51ZTsKKworCQlmb3IgKG4g
PSAxOyBuIDw9IG5zaWJsaW5nICsgMTsgbisrKSB7CisJCQllcnIgPSBub3BfdmlydHVhbF9lbmdp
bmUoaTkxNSwgc2libGluZ3MsIG5zaWJsaW5nLAorCQkJCQkJIG4sIDApOworCQkJaWYgKGVycikK
KwkJCQlnb3RvIG91dF91bmxvY2s7CisJCX0KKworCQllcnIgPSBub3BfdmlydHVhbF9lbmdpbmUo
aTkxNSwgc2libGluZ3MsIG5zaWJsaW5nLCBuLCBDSEFJTik7CisJCWlmIChlcnIpCisJCQlnb3Rv
IG91dF91bmxvY2s7CisJfQorCitvdXRfdW5sb2NrOgorCW11dGV4X3VubG9jaygmaTkxNS0+ZHJt
LnN0cnVjdF9tdXRleCk7CisJcmV0dXJuIGVycjsKK30KKwogaW50IGludGVsX2V4ZWNsaXN0c19s
aXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlzdGF0aWMg
Y29uc3Qgc3RydWN0IGk5MTVfc3VidGVzdCB0ZXN0c1tdID0gewpAQCAtMTMyMiw2ICsxNTAxLDcg
QEAgaW50IGludGVsX2V4ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKIAkJU1VCVEVTVChsaXZlX2NoYWluX3ByZWVtcHQpLAogCQlTVUJURVNUKGxp
dmVfcHJlZW1wdF9oYW5nKSwKIAkJU1VCVEVTVChsaXZlX3ByZWVtcHRfc21va2UpLAorCQlTVUJU
RVNUKGxpdmVfdmlydHVhbF9lbmdpbmUpLAogCX07CiAKIAlpZiAoIUhBU19FWEVDTElTVFMoaTkx
NSkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAppbmRleCA2N2Y4YTRhODA3YTAuLmZlODJkMzU3MTA3
MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oCkBAIC05MSw0ICs5MSw5IEBAIHN0YXRpYyBpbmxp
bmUgYm9vbCBfX3Rhc2tsZXRfZW5hYmxlKHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKIAlyZXR1
cm4gYXRvbWljX2RlY19hbmRfdGVzdCgmdC0+Y291bnQpOwogfQogCitzdGF0aWMgaW5saW5lIGJv
b2wgX190YXNrbGV0X2lzX3NjaGVkdWxlZChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCit7CisJ
cmV0dXJuIHRlc3RfYml0KFRBU0tMRVRfU1RBVEVfU0NIRUQsICZ0LT5zdGF0ZSk7Cit9CisKICNl
bmRpZiAvKiBfX0k5MTVfR0VNX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW1fY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fY29u
dGV4dC5jCmluZGV4IDA0MGMwYjc3MGMyMS4uM2FlMWQyNzEzMGE4IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9nZW1fY29udGV4dC5jCkBAIC04Niw2ICs4Niw3IEBACiAgKi8KIAogI2luY2x1
ZGUgPGxpbnV4L2xvZzIuaD4KKyNpbmNsdWRlIDxsaW51eC9ub3NwZWMuaD4KIAogI2luY2x1ZGUg
PGRybS9pOTE1X2RybS5oPgogCkBAIC0xMjE4LDcgKzEyMTksNiBAQCBfX2ludGVsX2NvbnRleHRf
cmVjb25maWd1cmVfc3NldShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJaW50IHJldDsKIAog
CUdFTV9CVUdfT04oSU5URUxfR0VOKGNlLT5nZW1fY29udGV4dC0+aTkxNSkgPCA4KTsKLQlHRU1f
QlVHX09OKGNlLT5lbmdpbmUtPmlkICE9IFJDUzApOwogCiAJcmV0ID0gaW50ZWxfY29udGV4dF9s
b2NrX3Bpbm5lZChjZSk7CiAJaWYgKHJldCkKQEAgLTE0MTIsNyArMTQxMiwxMDAgQEAgc3RydWN0
IHNldF9lbmdpbmVzIHsKIAlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqZW5naW5lczsKIH07CiAK
K3N0YXRpYyBpbnQKK3NldF9lbmdpbmVzX19sb2FkX2JhbGFuY2Uoc3RydWN0IGk5MTVfdXNlcl9l
eHRlbnNpb24gX191c2VyICpiYXNlLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBpOTE1X2NvbnRl
eHRfZW5naW5lc19sb2FkX2JhbGFuY2UgX191c2VyICpleHQgPQorCQljb250YWluZXJfb2ZfdXNl
cihiYXNlLCB0eXBlb2YoKmV4dCksIGJhc2UpOworCWNvbnN0IHN0cnVjdCBzZXRfZW5naW5lcyAq
c2V0ID0gZGF0YTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzdGFja1sxNl07CisJc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsK
Kwl1MTYgbnVtX3NpYmxpbmdzLCBpZHg7CisJdW5zaWduZWQgaW50IG47CisJaW50IGVycjsKKwor
CWlmICghSEFTX0VYRUNMSVNUUyhzZXQtPmN0eC0+aTkxNSkpCisJCXJldHVybiAtRU5PREVWOwor
CisJaWYgKFVTRVNfR1VDX1NVQk1JU1NJT04oc2V0LT5jdHgtPmk5MTUpKQorCQlyZXR1cm4gLUVO
T0RFVjsgLyogbm90IGltcGxlbWVudCB5ZXQgKi8KKworCWlmIChnZXRfdXNlcihpZHgsICZleHQt
PmVuZ2luZV9pbmRleCkpCisJCXJldHVybiAtRUZBVUxUOworCisJaWYgKGlkeCA+PSBzZXQtPmVu
Z2luZXMtPm51bV9lbmdpbmVzKSB7CisJCURSTV9ERUJVRygiSW52YWxpZCBwbGFjZW1lbnQgdmFs
dWUsICVkID49ICVkXG4iLAorCQkJICBpZHgsIHNldC0+ZW5naW5lcy0+bnVtX2VuZ2luZXMpOwor
CQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlpZHggPSBhcnJheV9pbmRleF9ub3NwZWMoaWR4LCBz
ZXQtPmVuZ2luZXMtPm51bV9lbmdpbmVzKTsKKwlpZiAoc2V0LT5lbmdpbmVzLT5lbmdpbmVzW2lk
eF0pIHsKKwkJRFJNX0RFQlVHKCJJbnZhbGlkIHBsYWNlbWVudFslZF0sIGFscmVhZHkgb2NjdXBp
ZWRcbiIsIGlkeCk7CisJCXJldHVybiAtRUVYSVNUOworCX0KKworCWlmIChnZXRfdXNlcihudW1f
c2libGluZ3MsICZleHQtPm51bV9zaWJsaW5ncykpCisJCXJldHVybiAtRUZBVUxUOworCisJZXJy
ID0gY2hlY2tfdXNlcl9tYnooJmV4dC0+ZmxhZ3MpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7
CisKKwllcnIgPSBjaGVja191c2VyX21ieigmZXh0LT5tYno2NCk7CisJaWYgKGVycikKKwkJcmV0
dXJuIGVycjsKKworCXNpYmxpbmdzID0gc3RhY2s7CisJaWYgKG51bV9zaWJsaW5ncyA+IEFSUkFZ
X1NJWkUoc3RhY2spKSB7CisJCXNpYmxpbmdzID0ga21hbGxvY19hcnJheShudW1fc2libGluZ3Ms
CisJCQkJCSBzaXplb2YoKnNpYmxpbmdzKSwKKwkJCQkJIEdGUF9LRVJORUwpOworCQlpZiAoIXNp
YmxpbmdzKQorCQkJcmV0dXJuIC1FTk9NRU07CisJfQorCisJZm9yIChuID0gMDsgbiA8IG51bV9z
aWJsaW5nczsgbisrKSB7CisJCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSBjaTsK
KworCQlpZiAoY29weV9mcm9tX3VzZXIoJmNpLCAmZXh0LT5lbmdpbmVzW25dLCBzaXplb2YoY2kp
KSkgeworCQkJZXJyID0gLUVGQVVMVDsKKwkJCWdvdG8gb3V0X3NpYmxpbmdzOworCQl9CisKKwkJ
c2libGluZ3Nbbl0gPSBpbnRlbF9lbmdpbmVfbG9va3VwX3VzZXIoc2V0LT5jdHgtPmk5MTUsCisJ
CQkJCQkgICAgICAgY2kuZW5naW5lX2NsYXNzLAorCQkJCQkJICAgICAgIGNpLmVuZ2luZV9pbnN0
YW5jZSk7CisJCWlmICghc2libGluZ3Nbbl0pIHsKKwkJCURSTV9ERUJVRygiSW52YWxpZCBzaWJs
aW5nWyVkXTogeyBjbGFzczolZCwgaW5zdDolZCB9XG4iLAorCQkJCSAgbiwgY2kuZW5naW5lX2Ns
YXNzLCBjaS5lbmdpbmVfaW5zdGFuY2UpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gb3V0
X3NpYmxpbmdzOworCQl9CisJfQorCisJY2UgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1
YWwoc2V0LT5jdHgsIHNpYmxpbmdzLCBuKTsKKwlpZiAoSVNfRVJSKGNlKSkgeworCQllcnIgPSBQ
VFJfRVJSKGNlKTsKKwkJZ290byBvdXRfc2libGluZ3M7CisJfQorCisJaWYgKGNtcHhjaGcoJnNl
dC0+ZW5naW5lcy0+ZW5naW5lc1tpZHhdLCBOVUxMLCBjZSkpIHsKKwkJaW50ZWxfY29udGV4dF9w
dXQoY2UpOworCQllcnIgPSAtRUVYSVNUOworCQlnb3RvIG91dF9zaWJsaW5nczsKKwl9CisKK291
dF9zaWJsaW5nczoKKwlpZiAoc2libGluZ3MgIT0gc3RhY2spCisJCWtmcmVlKHNpYmxpbmdzKTsK
KworCXJldHVybiBlcnI7Cit9CisKIHN0YXRpYyBjb25zdCBpOTE1X3VzZXJfZXh0ZW5zaW9uX2Zu
IHNldF9lbmdpbmVzX19leHRlbnNpb25zW10gPSB7CisJW0k5MTVfQ09OVEVYVF9FTkdJTkVTX0VY
VF9MT0FEX0JBTEFOQ0VdID0gc2V0X2VuZ2luZXNfX2xvYWRfYmFsYW5jZSwKIH07CiAKIHN0YXRp
YyBpbnQKQEAgLTE3MTEsMTQgKzE4MDQsMjkgQEAgc3RhdGljIGludCBjbG9uZV9lbmdpbmVzKHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpkc3QsCiAKIAljbG9uZS0+aTkxNSA9IGRzdC0+aTkxNTsK
IAlmb3IgKG4gPSAwOyBuIDwgZS0+bnVtX2VuZ2luZXM7IG4rKykgeworCQlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CisKIAkJaWYgKCFlLT5lbmdpbmVzW25dKSB7CiAJCQljbG9uZS0+
ZW5naW5lc1tuXSA9IE5VTEw7CiAJCQljb250aW51ZTsKIAkJfQorCQllbmdpbmUgPSBlLT5lbmdp
bmVzW25dLT5lbmdpbmU7CiAKLQkJY2xvbmUtPmVuZ2luZXNbbl0gPQotCQkJaW50ZWxfY29udGV4
dF9jcmVhdGUoZHN0LCBlLT5lbmdpbmVzW25dLT5lbmdpbmUpOwotCQlpZiAoIWNsb25lLT5lbmdp
bmVzW25dKSB7CisJCS8qCisJCSAqIFZpcnR1YWwgZW5naW5lcyBhcmUgc2luZ2xldG9uczsgdGhl
eSBjYW4gb25seSBleGlzdAorCQkgKiBpbnNpZGUgYSBzaW5nbGUgY29udGV4dCwgYmVjYXVzZSB0
aGV5IGVtYmVkIHRoZWlyCisJCSAqIEhXIGNvbnRleHQuLi4gQXMgZWFjaCB2aXJ0dWFsIGNvbnRl
eHQgaW1wbGllcyBhIHNpbmdsZQorCQkgKiB0aW1lbGluZSAoZWFjaCBlbmdpbmUgY2FuIG9ubHkg
ZGVxdWV1ZSBhIHNpbmdsZSByZXF1ZXN0CisJCSAqIGF0IGFueSB0aW1lKSwgaXQgd291bGQgYmUg
c3VycHJpc2luZyBmb3IgdHdvIGNvbnRleHRzCisJCSAqIHRvIHVzZSB0aGUgc2FtZSBlbmdpbmUu
IFNvIGxldCdzIGNyZWF0ZSBhIGNvcHkgb2YKKwkJICogdGhlIHZpcnR1YWwgZW5naW5lIGluc3Rl
YWQuCisJCSAqLworCQlpZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5lKSkKKwkJCWNs
b25lLT5lbmdpbmVzW25dID0KKwkJCQlpbnRlbF9leGVjbGlzdHNfY2xvbmVfdmlydHVhbChkc3Qs
IGVuZ2luZSk7CisJCWVsc2UKKwkJCWNsb25lLT5lbmdpbmVzW25dID0gaW50ZWxfY29udGV4dF9j
cmVhdGUoZHN0LCBlbmdpbmUpOworCQlpZiAoSVNfRVJSX09SX05VTEwoY2xvbmUtPmVuZ2luZXNb
bl0pKSB7CiAJCQlfX2ZyZWVfZW5naW5lcyhjbG9uZSwgbik7CiAJCQlnb3RvIGVycl91bmxvY2s7
CiAJCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCmluZGV4IGQyMTVkY2RmMGIx
ZS4uNzhjZWI1NmQ3ODAxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Nj
aGVkdWxlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKQEAg
LTE1MCwxNyArMTUwLDI2IEBAIHNjaGVkX2xvY2tfZW5naW5lKGNvbnN0IHN0cnVjdCBpOTE1X3Nj
aGVkX25vZGUgKm5vZGUsCiAJCSAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqbG9ja2VkLAogCQkg
IHN0cnVjdCBzY2hlZF9jYWNoZSAqY2FjaGUpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lID0gbm9kZV90b19yZXF1ZXN0KG5vZGUpLT5lbmdpbmU7CisJY29uc3Qgc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEgPSBub2RlX3RvX3JlcXVlc3Qobm9kZSk7CisJc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lOwogCiAJR0VNX0JVR19PTighbG9ja2VkKTsKIAotCWlmIChlbmdpbmUg
IT0gbG9ja2VkKSB7CisJLyoKKwkgKiBWaXJ0dWFsIGVuZ2luZXMgY29tcGxpY2F0ZSBhY3F1aXJp
bmcgdGhlIGVuZ2luZSB0aW1lbGluZSBsb2NrLAorCSAqIGFzIHRoZWlyIHJxLT5lbmdpbmUgcG9p
bnRlciBpcyBub3Qgc3RhYmxlIHVudGlsIHVuZGVyIHRoYXQKKwkgKiBlbmdpbmUgbG9jay4gVGhl
IHNpbXBsZSBwbG95IHdlIHVzZSBpcyB0byB0YWtlIHRoZSBsb2NrIHRoZW4KKwkgKiBjaGVjayB0
aGF0IHRoZSBycSBzdGlsbCBiZWxvbmdzIHRvIHRoZSBuZXdseSBsb2NrZWQgZW5naW5lLgorCSAq
LworCXdoaWxlIChsb2NrZWQgIT0gKGVuZ2luZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpIHsK
IAkJc3Bpbl91bmxvY2soJmxvY2tlZC0+dGltZWxpbmUubG9jayk7CiAJCW1lbXNldChjYWNoZSwg
MCwgc2l6ZW9mKCpjYWNoZSkpOwogCQlzcGluX2xvY2soJmVuZ2luZS0+dGltZWxpbmUubG9jayk7
CisJCWxvY2tlZCA9IGVuZ2luZTsKIAl9CiAKLQlyZXR1cm4gZW5naW5lOworCUdFTV9CVUdfT04o
bG9ja2VkICE9IGVuZ2luZSk7CisJcmV0dXJuIGxvY2tlZDsKIH0KIAogc3RhdGljIGlubGluZSBp
bnQgcnFfcHJpbyhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKQEAgLTI3Miw2ICsyODEs
NyBAQCBzdGF0aWMgdm9pZCBfX2k5MTVfc2NoZWR1bGUoc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAq
bm9kZSwKIAlzcGluX2xvY2soJmVuZ2luZS0+dGltZWxpbmUubG9jayk7CiAKIAkvKiBGaWZvIGFu
ZCBkZXB0aC1maXJzdCByZXBsYWNlbWVudCBlbnN1cmUgb3VyIGRlcHMgZXhlY3V0ZSBiZWZvcmUg
dXMgKi8KKwllbmdpbmUgPSBzY2hlZF9sb2NrX2VuZ2luZShub2RlLCBlbmdpbmUsICZjYWNoZSk7
CiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlX3JldmVyc2UoZGVwLCBwLCAmZGZzLCBkZnNfbGlu
aykgewogCQlJTklUX0xJU1RfSEVBRCgmZGVwLT5kZnNfbGluayk7CiAKQEAgLTI4Myw4ICsyOTMs
MTEgQEAgc3RhdGljIHZvaWQgX19pOTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUg
Km5vZGUsCiAJCWlmIChwcmlvIDw9IG5vZGUtPmF0dHIucHJpb3JpdHkgfHwgbm9kZV9zaWduYWxl
ZChub2RlKSkKIAkJCWNvbnRpbnVlOwogCisJCUdFTV9CVUdfT04obm9kZV90b19yZXF1ZXN0KG5v
ZGUpLT5lbmdpbmUgIT0gZW5naW5lKTsKKwogCQlub2RlLT5hdHRyLnByaW9yaXR5ID0gcHJpbzsK
IAkJaWYgKCFsaXN0X2VtcHR5KCZub2RlLT5saW5rKSkgeworCQkJR0VNX0JVR19PTihpbnRlbF9l
bmdpbmVfaXNfdmlydHVhbChlbmdpbmUpKTsKIAkJCWlmICghY2FjaGUucHJpb2xpc3QpCiAJCQkJ
Y2FjaGUucHJpb2xpc3QgPQogCQkJCQlpOTE1X3NjaGVkX2xvb2t1cF9wcmlvbGlzdChlbmdpbmUs
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgKaW5kZXggNTI1NmEw
YjVjNWY3Li4xNjg4NzA1ZjRhMmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfdGltZWxpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVs
aW5lX3R5cGVzLmgKQEAgLTI2LDYgKzI2LDcgQEAgc3RydWN0IGk5MTVfdGltZWxpbmUgewogCXNw
aW5sb2NrX3QgbG9jazsKICNkZWZpbmUgVElNRUxJTkVfQ0xJRU5UIDAgLyogZGVmYXVsdCBzdWJj
bGFzcyAqLwogI2RlZmluZSBUSU1FTElORV9FTkdJTkUgMQorI2RlZmluZSBUSU1FTElORV9WSVJU
VUFMIDIKIAlzdHJ1Y3QgbXV0ZXggbXV0ZXg7IC8qIHByb3RlY3RzIHRoZSBmbG93IG9mIHJlcXVl
c3RzICovCiAKIAl1bnNpZ25lZCBpbnQgcGluX2NvdW50OwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91
YXBpL2RybS9pOTE1X2RybS5oIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IDYy
Mzk2ZDU3NWUyOC4uZjk3NzA5NDgxNjFjIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5
MTVfZHJtLmgKKysrIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC0xMzcsNiArMTM3
LDcgQEAgc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIHsKIAlfX3UxNiBlbmdpbmVf
Y2xhc3M7IC8qIHNlZSBlbnVtIGRybV9pOTE1X2dlbV9lbmdpbmVfY2xhc3MgKi8KIAlfX3UxNiBl
bmdpbmVfaW5zdGFuY2U7CiAjZGVmaW5lIEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSURfTk9ORSAt
MQorI2RlZmluZSBJOTE1X0VOR0lORV9DTEFTU19JTlZBTElEX1ZJUlRVQUwgLTIKIH07CiAKIC8q
KgpAQCAtMTYwOCw4ICsxNjA5LDQ2IEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJh
bV9zc2V1IHsKIAlfX3UzMiByc3ZkOwogfTsKIAorLyoKKyAqIGk5MTVfY29udGV4dF9lbmdpbmVz
X2xvYWRfYmFsYW5jZToKKyAqCisgKiBFbmFibGUgbG9hZCBiYWxhbmNpbmcgYWNyb3NzIHRoaXMg
c2V0IG9mIGVuZ2luZXMuCisgKgorICogSW50byB0aGUgSTkxNV9FWEVDX0RFRkFVTFQgc2xvdCBb
MF0sIGEgdmlydHVhbCBlbmdpbmUgaXMgY3JlYXRlZCB0aGF0IHdoZW4KKyAqIHVzZWQgd2lsbCBw
cm94eSB0aGUgZXhlY2J1ZmZlciByZXF1ZXN0IG9udG8gb25lIG9mIHRoZSBzZXQgb2YgZW5naW5l
cworICogaW4gc3VjaCBhIHdheSBhcyB0byBkaXN0cmlidXRlIHRoZSBsb2FkIGV2ZW5seSBhY3Jv
c3MgdGhlIHNldC4KKyAqCisgKiBUaGUgc2V0IG9mIGVuZ2luZXMgbXVzdCBiZSBjb21wYXRpYmxl
IChlLmcuIHRoZSBzYW1lIEhXIGNsYXNzKSBhcyB0aGV5CisgKiB3aWxsIHNoYXJlIHRoZSBzYW1l
IGxvZ2ljYWwgR1BVIGNvbnRleHQgYW5kIHJpbmcuCisgKgorICogVG8gaW50ZXJtaXggcmVuZGVy
aW5nIHdpdGggdGhlIHZpcnR1YWwgZW5naW5lIGFuZCBkaXJlY3QgcmVuZGVyaW5nIG9udG8KKyAq
IHRoZSBiYWNraW5nIGVuZ2luZXMgKGJ5cGFzc2luZyB0aGUgbG9hZCBiYWxhbmNpbmcgcHJveHkp
LCB0aGUgY29udGV4dCBtdXN0CisgKiBiZSBkZWZpbmVkIHRvIHVzZSBhIHNpbmdsZSB0aW1lbGlu
ZSBmb3IgYWxsIGVuZ2luZXMuCisgKi8KK3N0cnVjdCBpOTE1X2NvbnRleHRfZW5naW5lc19sb2Fk
X2JhbGFuY2UgeworCXN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIGJhc2U7CisKKwlfX3UxNiBl
bmdpbmVfaW5kZXg7CisJX191MTYgbnVtX3NpYmxpbmdzOworCV9fdTMyIGZsYWdzOyAvKiBhbGwg
dW5kZWZpbmVkIGZsYWdzIG11c3QgYmUgemVybyAqLworCisJX191NjQgbWJ6NjQ7IC8qIHJlc2Vy
dmVkIGZvciBmdXR1cmUgdXNlOyBtdXN0IGJlIHplcm8gKi8KKworCXN0cnVjdCBpOTE1X2VuZ2lu
ZV9jbGFzc19pbnN0YW5jZSBlbmdpbmVzWzBdOworfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKTsK
KworI2RlZmluZSBJOTE1X0RFRklORV9DT05URVhUX0VOR0lORVNfTE9BRF9CQUxBTkNFKG5hbWVf
XywgTl9fKSBzdHJ1Y3QgeyBcCisJc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gYmFzZTsgXAor
CV9fdTE2IGVuZ2luZV9pbmRleDsgXAorCV9fdTE2IG51bV9zaWJsaW5nczsgXAorCV9fdTMyIGZs
YWdzOyBcCisJX191NjQgbWJ6NjQ7IFwKKwlzdHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFu
Y2UgZW5naW5lc1tOX19dOyBcCit9IF9fYXR0cmlidXRlX18oKHBhY2tlZCkpIG5hbWVfXworCiBz
dHJ1Y3QgaTkxNV9jb250ZXh0X3BhcmFtX2VuZ2luZXMgewogCV9fdTY0IGV4dGVuc2lvbnM7IC8q
IGxpbmtlZCBjaGFpbiBvZiBleHRlbnNpb24gYmxvY2tzLCAwIHRlcm1pbmF0ZXMgKi8KKyNkZWZp
bmUgSTkxNV9DT05URVhUX0VOR0lORVNfRVhUX0xPQURfQkFMQU5DRSAwIC8qIHNlZSBpOTE1X2Nv
bnRleHRfZW5naW5lc19sb2FkX2JhbGFuY2UgKi8KIAlzdHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3Nf
aW5zdGFuY2UgZW5naW5lc1swXTsKIH0gX19hdHRyaWJ1dGVfXygocGFja2VkKSk7CiAKLS0gCjIu
MjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50
ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

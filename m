Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A7D30A3DAB
	for <lists+intel-gfx@lfdr.de>; Fri, 30 Aug 2019 20:27:25 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6E6FF6E3B7;
	Fri, 30 Aug 2019 18:27:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5EFDD6E3B7
 for <intel-gfx@lists.freedesktop.org>; Fri, 30 Aug 2019 18:27:22 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 30 Aug 2019 11:27:21 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,447,1559545200"; d="scan'208";a="181279875"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga008.fm.intel.com with SMTP; 30 Aug 2019 11:27:20 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 30 Aug 2019 21:27:19 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 30 Aug 2019 21:27:19 +0300
Message-Id: <20190830182719.32608-1-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Prefer encoder->name over port_name()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCmVu
dW0gcG9ydCBpcyBhIG1lc3Mgbm93IGJlY2F1c2UgaXQgbm8gbG9uZ2VyIG1hdGNoZXMgdGhlIHNw
ZWMKYXQgYWxsLiBMZXQncyBzdGFydCB0byBkaWcgb3Vyc2VsdmVzIG91dCBvZiB0aGlzIGhvbGUg
YnkKcmVkdWNpbmcgb3VyIHJlbGlhbmNlIG9uIHBvcnRfbmFtZSgpLiBUaGlzIHNob3VsZCBhdCBs
ZWFzdCBtYWtlCmEgYnVuY2ggb2YgZGVidWcgbWVzc2FnZXMgYSBiaXQgbW9yZSBzZW5zaWJsZSB3
aGlsZSB3ZSB0aGluayBob3cKdG8gZmlsbCB0aGUgdGhlIGhvbGUgcHJvcGVybHkuCgpCYXNlZCBv
biB0aGUgZm9sbG93aW5nIGNvY2NpIHNjcmlwdCB3aXRoIGEgbG90IG9mIG1hbnVhbCBjbGVhbnVw
CihhbGwgdGhlIGZvcm1hdCBzdHJpbmdzIGV0Yy4pOgpAQApleHByZXNzaW9uIEU7CkBACigKLSBw
b3J0X25hbWUoRS0+cG9ydCkKKyBFLT5iYXNlLmJhc2UuaWQsIEUtPmJhc2UubmFtZQp8Ci0gcG9y
dF9uYW1lKEUucG9ydCkKKyBFLmJhc2UuYmFzZS5pZCwgRS5iYXNlLm5hbWUKKQoKQEAKZW51bSBw
b3J0IFA7CmV4cHJlc3Npb24gRTsKQEAKICBQID0gRS0+cG9ydAo8Li4uCi0gcG9ydF9uYW1lKFAp
CisgRS0+YmFzZS5iYXNlLmlkLCBFLT5iYXNlLm5hbWUKLi4uPgoKQEAKZW51bSBwb3J0IFA7CmV4
cHJlc3Npb24gRTsKQEAKICBQID0gRS5wb3J0CjwuLi4KLSBwb3J0X25hbWUoUCkKKyBFLmJhc2Uu
YmFzZS5pZCwgRS5iYXNlLm5hbWUKLi4uPgoKQEAKZXhwcmVzc2lvbiBFOwpAQAp7Ci0gZW51bSBw
b3J0IFAgPSBFOwouLi4gd2hlbiAhPSBQCn0KClNpZ25lZC1vZmYtYnk6IFZpbGxlIFN5cmrDpGzD
pCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9hdWRpby5jICAgIHwgIDEwICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCAgMTkgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgICB8IDEyMiArKysrKysrKysrLS0tLS0tLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYyB8ICAgNCArLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMgICAgIHwgICA5ICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuYyAgfCAgIDMgKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jICAgICAgICAgICB8ICAgNSArLQogOCBmaWxlcyBj
aGFuZ2VkLCAxMDIgaW5zZXJ0aW9ucygrKSwgNzQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdWRpby5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdWRpby5jCmluZGV4IGRkY2NjZjQ0MDhjMy4uYWFjMDg5
Yzc5Y2ViIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F1
ZGlvLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdWRpby5jCkBA
IC01NjAsOCArNTYwLDkgQEAgc3RhdGljIHZvaWQgaWxrX2F1ZGlvX2NvZGVjX2Rpc2FibGUoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJdTMyIHRtcCwgZWxkdjsKIAlpOTE1X3JlZ190
IGF1ZF9jb25maWcsIGF1ZF9jbnRybF9zdDI7CiAKLQlEUk1fREVCVUdfS01TKCJEaXNhYmxlIGF1
ZGlvIGNvZGVjIG9uIHBvcnQgJWMsIHBpcGUgJWNcbiIsCi0JCSAgICAgIHBvcnRfbmFtZShwb3J0
KSwgcGlwZV9uYW1lKHBpcGUpKTsKKwlEUk1fREVCVUdfS01TKCJEaXNhYmxlIGF1ZGlvIGNvZGVj
IG9uIFtFTkNPREVSOiVkOiVzXSwgcGlwZSAlY1xuIiwKKwkJICAgICAgZW5jb2Rlci0+YmFzZS5i
YXNlLmlkLCBlbmNvZGVyLT5iYXNlLm5hbWUsCisJCSAgICAgIHBpcGVfbmFtZShwaXBlKSk7CiAK
IAlpZiAoV0FSTl9PTihwb3J0ID09IFBPUlRfQSkpCiAJCXJldHVybjsKQEAgLTYwOSw4ICs2MTAs
OSBAQCBzdGF0aWMgdm9pZCBpbGtfYXVkaW9fY29kZWNfZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyLAogCWludCBsZW4sIGk7CiAJaTkxNV9yZWdfdCBoZG1pd19oZG1pZWRpZCwg
YXVkX2NvbmZpZywgYXVkX2NudGxfc3QsIGF1ZF9jbnRybF9zdDI7CiAKLQlEUk1fREVCVUdfS01T
KCJFbmFibGUgYXVkaW8gY29kZWMgb24gcG9ydCAlYywgcGlwZSAlYywgJXUgYnl0ZXMgRUxEXG4i
LAotCQkgICAgICBwb3J0X25hbWUocG9ydCksIHBpcGVfbmFtZShwaXBlKSwgZHJtX2VsZF9zaXpl
KGVsZCkpOworCURSTV9ERUJVR19LTVMoIkVuYWJsZSBhdWRpbyBjb2RlYyBvbiBbRU5DT0RFUjol
ZDolc10sIHBpcGUgJWMsICV1IGJ5dGVzIEVMRFxuIiwKKwkJICAgICAgZW5jb2Rlci0+YmFzZS5i
YXNlLmlkLCBlbmNvZGVyLT5iYXNlLm5hbWUsCisJCSAgICAgIHBpcGVfbmFtZShwaXBlKSwgZHJt
X2VsZF9zaXplKGVsZCkpOwogCiAJaWYgKFdBUk5fT04ocG9ydCA9PSBQT1JUX0EpKQogCQlyZXR1
cm47CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwppbmRleCAzMTgwZGFj
YjViZTQuLjFmZTBiZjAxZTU4MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RkaS5jCkBAIC0yMDgwLDE4ICsyMDgwLDIwIEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9nZXRf
ZW5jb2Rlcl9waXBlcyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl9CiAKIAlpZiAo
ISpwaXBlX21hc2spCi0JCURSTV9ERUJVR19LTVMoIk5vIHBpcGUgZm9yIGRkaSBwb3J0ICVjIGZv
dW5kXG4iLAotCQkJICAgICAgcG9ydF9uYW1lKHBvcnQpKTsKKwkJRFJNX0RFQlVHX0tNUygiTm8g
cGlwZSBmb3IgW0VOQ09ERVI6JWQ6JXNdIGZvdW5kXG4iLAorCQkJICAgICAgZW5jb2Rlci0+YmFz
ZS5iYXNlLmlkLCBlbmNvZGVyLT5iYXNlLm5hbWUpOwogCiAJaWYgKCFtc3RfcGlwZV9tYXNrICYm
IGh3ZWlnaHQ4KCpwaXBlX21hc2spID4gMSkgewotCQlEUk1fREVCVUdfS01TKCJNdWx0aXBsZSBw
aXBlcyBmb3Igbm9uIERQLU1TVCBwb3J0ICVjIChwaXBlX21hc2sgJTAyeClcbiIsCi0JCQkgICAg
ICBwb3J0X25hbWUocG9ydCksICpwaXBlX21hc2spOworCQlEUk1fREVCVUdfS01TKCJNdWx0aXBs
ZSBwaXBlcyBmb3IgW0VOQ09ERVI6JWQ6JXNdIChwaXBlX21hc2sgJTAyeClcbiIsCisJCQkgICAg
ICBlbmNvZGVyLT5iYXNlLmJhc2UuaWQsIGVuY29kZXItPmJhc2UubmFtZSwKKwkJCSAgICAgICpw
aXBlX21hc2spOwogCQkqcGlwZV9tYXNrID0gQklUKGZmcygqcGlwZV9tYXNrKSAtIDEpOwogCX0K
IAogCWlmIChtc3RfcGlwZV9tYXNrICYmIG1zdF9waXBlX21hc2sgIT0gKnBpcGVfbWFzaykKLQkJ
RFJNX0RFQlVHX0tNUygiQ29uZmxpY3RpbmcgTVNUIGFuZCBub24tTVNUIGVuY29kZXJzIGZvciBw
b3J0ICVjIChwaXBlX21hc2sgJTAyeCBtc3RfcGlwZV9tYXNrICUwMngpXG4iLAotCQkJICAgICAg
cG9ydF9uYW1lKHBvcnQpLCAqcGlwZV9tYXNrLCBtc3RfcGlwZV9tYXNrKTsKKwkJRFJNX0RFQlVH
X0tNUygiQ29uZmxpY3RpbmcgTVNUIGFuZCBub24tTVNUIHN0YXRlIGZvciBbRU5DT0RFUjolZDol
c10gKHBpcGVfbWFzayAlMDJ4IG1zdF9waXBlX21hc2sgJTAyeClcbiIsCisJCQkgICAgICBlbmNv
ZGVyLT5iYXNlLmJhc2UuaWQsIGVuY29kZXItPmJhc2UubmFtZSwKKwkJCSAgICAgICpwaXBlX21h
c2ssIG1zdF9waXBlX21hc2spOwogCWVsc2UKIAkJKmlzX2RwX21zdCA9IG1zdF9waXBlX21hc2s7
CiAKQEAgLTIxMDEsOCArMjEwMyw5IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9nZXRfZW5jb2Rl
cl9waXBlcyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJaWYgKCh0bXAgJiAoQlhU
X1BIWV9DTU5MQU5FX1BPV0VSRE9XTl9BQ0sgfAogCQkJICAgIEJYVF9QSFlfTEFORV9QT1dFUkRP
V05fQUNLIHwKIAkJCSAgICBCWFRfUEhZX0xBTkVfRU5BQkxFRCkpICE9IEJYVF9QSFlfTEFORV9F
TkFCTEVEKQotCQkJRFJNX0VSUk9SKCJQb3J0ICVjIGVuYWJsZWQgYnV0IFBIWSBwb3dlcmVkIGRv
d24/ICIKLQkJCQkgICIoUEhZX0NUTCAlMDh4KVxuIiwgcG9ydF9uYW1lKHBvcnQpLCB0bXApOwor
CQkJRFJNX0VSUk9SKCJbRU5DT0RFUjolZDolc10gZW5hYmxlZCBidXQgUEhZIHBvd2VyZWQgZG93
bj8gIgorCQkJCSAgIihQSFlfQ1RMICUwOHgpXG4iLCBlbmNvZGVyLT5iYXNlLmJhc2UuaWQsCisJ
CQkJICBlbmNvZGVyLT5iYXNlLm5hbWUsIHRtcCk7CiAJfQogCiAJaW50ZWxfZGlzcGxheV9wb3dl
cl9wdXQoZGV2X3ByaXYsIGVuY29kZXItPnBvd2VyX2RvbWFpbiwgd2FrZXJlZik7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IGIzOGQ4NDJmZjZl
Yy4uNmZhN2FkZjdmZGMwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYwpAQCAtMTYxMiw4ICsxNjEyLDggQEAgdm9pZCB2bHZfd2FpdF9wb3J0X3JlYWR5
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAogCWlmIChpbnRlbF9kZV93YWl0
X2Zvcl9yZWdpc3RlcihkZXZfcHJpdiwgZHBsbF9yZWcsCiAJCQkJICAgICAgIHBvcnRfbWFzaywg
ZXhwZWN0ZWRfbWFzaywgMTAwMCkpCi0JCVdBUk4oMSwgInRpbWVkIG91dCB3YWl0aW5nIGZvciBw
b3J0ICVjIHJlYWR5OiBnb3QgMHgleCwgZXhwZWN0ZWQgMHgleFxuIiwKLQkJICAgICBwb3J0X25h
bWUoZHBvcnQtPmJhc2UucG9ydCksCisJCVdBUk4oMSwgInRpbWVkIG91dCB3YWl0aW5nIGZvciBb
RU5DT0RFUjolZDolc10gcG9ydCByZWFkeTogZ290IDB4JXgsIGV4cGVjdGVkIDB4JXhcbiIsCisJ
CSAgICAgZHBvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLCBkcG9ydC0+YmFzZS5iYXNlLm5hbWUsCiAJ
CSAgICAgSTkxNV9SRUFEKGRwbGxfcmVnKSAmIHBvcnRfbWFzaywgZXhwZWN0ZWRfbWFzayk7CiB9
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwppbmRleCAyMDJmZjNjODM1
MjQuLjU2NzNlZDc1ZTQyOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YwpAQCAtNjM5LDEyICs2MzksMTQgQEAgdmx2X3Bvd2VyX3NlcXVlbmNlcl9raWNrKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCiAJdTMyIERQOwogCiAJaWYgKFdBUk4oSTkxNV9SRUFEKGludGVs
X2RwLT5vdXRwdXRfcmVnKSAmIERQX1BPUlRfRU4sCi0JCSAic2tpcHBpbmcgcGlwZSAlYyBwb3dl
ciBzZXF1ZW5jZXIga2ljayBkdWUgdG8gcG9ydCAlYyBiZWluZyBhY3RpdmVcbiIsCi0JCSBwaXBl
X25hbWUocGlwZSksIHBvcnRfbmFtZShpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0KSkpCisJCSAi
c2tpcHBpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIga2ljayBkdWUgdG8gW0VOQ09ERVI6JWQ6
JXNdIGJlaW5nIGFjdGl2ZVxuIiwKKwkJIHBpcGVfbmFtZShwaXBlKSwgaW50ZWxfZGlnX3BvcnQt
PmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgaW50ZWxfZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKSkK
IAkJcmV0dXJuOwogCi0JRFJNX0RFQlVHX0tNUygia2lja2luZyBwaXBlICVjIHBvd2VyIHNlcXVl
bmNlciBmb3IgcG9ydCAlY1xuIiwKLQkJICAgICAgcGlwZV9uYW1lKHBpcGUpLCBwb3J0X25hbWUo
aW50ZWxfZGlnX3BvcnQtPmJhc2UucG9ydCkpOworCURSTV9ERUJVR19LTVMoImtpY2tpbmcgcGlw
ZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIFtFTkNPREVSOiVkOiVzXVxuIiwKKwkJICAgICAgcGlw
ZV9uYW1lKHBpcGUpLCBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCSAgICAg
IGludGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CiAKIAkvKiBQcmVzZXJ2ZSB0aGUgQklP
Uy1jb21wdXRlZCBkZXRlY3RlZCBiaXQuIFRoaXMgaXMKIAkgKiBzdXBwb3NlZCB0byBiZSByZWFk
LW9ubHkuCkBAIC03NjIsOSArNzY0LDEwIEBAIHZsdl9wb3dlcl9zZXF1ZW5jZXJfcGlwZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXZsdl9zdGVhbF9wb3dlcl9zZXF1ZW5jZXIoZGV2X3By
aXYsIHBpcGUpOwogCWludGVsX2RwLT5wcHNfcGlwZSA9IHBpcGU7CiAKLQlEUk1fREVCVUdfS01T
KCJwaWNrZWQgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIHBvcnQgJWNcbiIsCisJRFJNX0RF
QlVHX0tNUygicGlja2VkIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZvciBbRU5DT0RFUjolZDol
c11cbiIsCiAJCSAgICAgIHBpcGVfbmFtZShpbnRlbF9kcC0+cHBzX3BpcGUpLAotCQkgICAgICBw
b3J0X25hbWUoaW50ZWxfZGlnX3BvcnQtPmJhc2UucG9ydCkpOworCQkgICAgICBpbnRlbF9kaWdf
cG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCSAgICAgIGludGVsX2RpZ19wb3J0LT5iYXNlLmJh
c2UubmFtZSk7CiAKIAkvKiBpbml0IHBvd2VyIHNlcXVlbmNlciBvbiB0aGlzIHBpcGUgYW5kIHBv
cnQgKi8KIAlpbnRlbF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcihpbnRlbF9kcCk7CkBA
IC04NzIsMTMgKzg3NSwxNiBAQCB2bHZfaW5pdGlhbF9wb3dlcl9zZXF1ZW5jZXJfc2V0dXAoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogCS8qIGRpZG4ndCBmaW5kIG9uZT8ganVzdCBsZXQg
dmx2X3Bvd2VyX3NlcXVlbmNlcl9waXBlKCkgcGljayBvbmUgd2hlbiBuZWVkZWQgKi8KIAlpZiAo
aW50ZWxfZHAtPnBwc19waXBlID09IElOVkFMSURfUElQRSkgewotCQlEUk1fREVCVUdfS01TKCJu
byBpbml0aWFsIHBvd2VyIHNlcXVlbmNlciBmb3IgcG9ydCAlY1xuIiwKLQkJCSAgICAgIHBvcnRf
bmFtZShwb3J0KSk7CisJCURSTV9ERUJVR19LTVMoIm5vIGluaXRpYWwgcG93ZXIgc2VxdWVuY2Vy
IGZvciBbRU5DT0RFUjolZDolc11cbiIsCisJCQkgICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5i
YXNlLmJhc2UuaWQsCisJCQkgICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUpOwog
CQlyZXR1cm47CiAJfQogCi0JRFJNX0RFQlVHX0tNUygiaW5pdGlhbCBwb3dlciBzZXF1ZW5jZXIg
Zm9yIHBvcnQgJWM6IHBpcGUgJWNcbiIsCi0JCSAgICAgIHBvcnRfbmFtZShwb3J0KSwgcGlwZV9u
YW1lKGludGVsX2RwLT5wcHNfcGlwZSkpOworCURSTV9ERUJVR19LTVMoImluaXRpYWwgcG93ZXIg
c2VxdWVuY2VyIGZvciBbRU5DT0RFUjolZDolc106IHBpcGUgJWNcbiIsCisJCSAgICAgIGludGVs
X2RpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwKKwkJICAgICAgaW50ZWxfZGlnX3BvcnQtPmJh
c2UuYmFzZS5uYW1lLAorCQkgICAgICBwaXBlX25hbWUoaW50ZWxfZHAtPnBwc19waXBlKSk7CiAK
IAlpbnRlbF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcihpbnRlbF9kcCk7CiAJaW50ZWxf
ZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXJfcmVnaXN0ZXJzKGludGVsX2RwLCBmYWxzZSk7
CkBAIC0yNDkyLDggKzI0OTgsOSBAQCBzdGF0aWMgYm9vbCBlZHBfcGFuZWxfdmRkX29uKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQoZGV2X3ByaXYs
CiAJCQkJaW50ZWxfYXV4X3Bvd2VyX2RvbWFpbihpbnRlbF9kaWdfcG9ydCkpOwogCi0JRFJNX0RF
QlVHX0tNUygiVHVybmluZyBlRFAgcG9ydCAlYyBWREQgb25cbiIsCi0JCSAgICAgIHBvcnRfbmFt
ZShpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0KSk7CisJRFJNX0RFQlVHX0tNUygiVHVybmluZyBb
RU5DT0RFUjolZDolc10gVkREIG9uXG4iLAorCQkgICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5i
YXNlLmJhc2UuaWQsCisJCSAgICAgIGludGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CiAK
IAlpZiAoIWVkcF9oYXZlX3BhbmVsX3Bvd2VyKGludGVsX2RwKSkKIAkJd2FpdF9wYW5lbF9wb3dl
cl9jeWNsZShpbnRlbF9kcCk7CkBAIC0yNTEyLDggKzI1MTksOSBAQCBzdGF0aWMgYm9vbCBlZHBf
cGFuZWxfdmRkX29uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJICogSWYgdGhlIHBhbmVs
IHdhc24ndCBvbiwgZGVsYXkgYmVmb3JlIGFjY2Vzc2luZyBhdXggY2hhbm5lbAogCSAqLwogCWlm
ICghZWRwX2hhdmVfcGFuZWxfcG93ZXIoaW50ZWxfZHApKSB7Ci0JCURSTV9ERUJVR19LTVMoImVE
UCBwb3J0ICVjIHBhbmVsIHBvd2VyIHdhc24ndCBlbmFibGVkXG4iLAotCQkJICAgICAgcG9ydF9u
YW1lKGludGVsX2RpZ19wb3J0LT5iYXNlLnBvcnQpKTsKKwkJRFJNX0RFQlVHX0tNUygiW0VOQ09E
RVI6JWQ6JXNdIHBhbmVsIHBvd2VyIHdhc24ndCBlbmFibGVkXG4iLAorCQkJICAgICAgaW50ZWxf
ZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkJICAgICAgaW50ZWxfZGlnX3BvcnQtPmJh
c2UuYmFzZS5uYW1lKTsKIAkJbXNsZWVwKGludGVsX2RwLT5wYW5lbF9wb3dlcl91cF9kZWxheSk7
CiAJfQogCkBAIC0yNTM4LDggKzI1NDYsOSBAQCB2b2lkIGludGVsX2VkcF9wYW5lbF92ZGRfb24o
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAl2ZGQgPSBmYWxzZTsKIAl3aXRoX3Bwc19sb2Nr
KGludGVsX2RwLCB3YWtlcmVmKQogCQl2ZGQgPSBlZHBfcGFuZWxfdmRkX29uKGludGVsX2RwKTsK
LQlJOTE1X1NUQVRFX1dBUk4oIXZkZCwgImVEUCBwb3J0ICVjIFZERCBhbHJlYWR5IHJlcXVlc3Rl
ZCBvblxuIiwKLQkgICAgIHBvcnRfbmFtZShkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2Uu
cG9ydCkpOworCUk5MTVfU1RBVEVfV0FSTighdmRkLCAiW0VOQ09ERVI6JWQ6JXNdIFZERCBhbHJl
YWR5IHJlcXVlc3RlZCBvblxuIiwKKwkJCWRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5i
YXNlLmJhc2UuaWQsCisJCQlkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5uYW1l
KTsKIH0KIAogc3RhdGljIHZvaWQgZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQpAQCAtMjU1Nyw4ICsyNTY2LDkgQEAgc3RhdGljIHZvaWQgZWRwX3BhbmVs
X3ZkZF9vZmZfc3luYyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWlmICghZWRwX2hhdmVf
cGFuZWxfdmRkKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCi0JRFJNX0RFQlVHX0tNUygiVHVybmlu
ZyBlRFAgcG9ydCAlYyBWREQgb2ZmXG4iLAotCQkgICAgICBwb3J0X25hbWUoaW50ZWxfZGlnX3Bv
cnQtPmJhc2UucG9ydCkpOworCURSTV9ERUJVR19LTVMoIlR1cm5pbmcgW0VOQ09ERVI6JWQ6JXNd
IFZERCBvZmZcbiIsCisJCSAgICAgIGludGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwK
KwkJICAgICAgaW50ZWxfZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKIAogCXBwID0gaXJvbmxh
a2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOwogCXBwICY9IH5FRFBfRk9SQ0VfVkREOwpAQCAt
MjYyMCw4ICsyNjMwLDkgQEAgc3RhdGljIHZvaWQgZWRwX3BhbmVsX3ZkZF9vZmYoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwgYm9vbCBzeW5jKQogCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVs
X2RwKSkKIAkJcmV0dXJuOwogCi0JSTkxNV9TVEFURV9XQVJOKCFpbnRlbF9kcC0+d2FudF9wYW5l
bF92ZGQsICJlRFAgcG9ydCAlYyBWREQgbm90IGZvcmNlZCBvbiIsCi0JICAgICBwb3J0X25hbWUo
ZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLnBvcnQpKTsKKwlJOTE1X1NUQVRFX1dBUk4o
IWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCwgIltFTkNPREVSOiVkOiVzXSBWREQgbm90IGZvcmNl
ZCBvbiIsCisJCQlkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5iYXNlLmlkLAor
CQkJZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2UubmFtZSk7CiAKIAlpbnRlbF9k
cC0+d2FudF9wYW5lbF92ZGQgPSBmYWxzZTsKIApAQCAtMjY0MiwxMiArMjY1MywxNCBAQCBzdGF0
aWMgdm9pZCBlZHBfcGFuZWxfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlpZiAoIWlu
dGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCiAJCXJldHVybjsKIAotCURSTV9ERUJVR19LTVMoIlR1
cm4gZURQIHBvcnQgJWMgcGFuZWwgcG93ZXIgb25cbiIsCi0JCSAgICAgIHBvcnRfbmFtZShkcF90
b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UucG9ydCkpOworCURSTV9ERUJVR19LTVMoIlR1cm4g
W0VOQ09ERVI6JWQ6JXNdIHBhbmVsIHBvd2VyIG9uXG4iLAorCQkgICAgICBkcF90b19kaWdfcG9y
dChpbnRlbF9kcCktPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgICAgICBkcF90b19kaWdfcG9ydChp
bnRlbF9kcCktPmJhc2UuYmFzZS5uYW1lKTsKIAogCWlmIChXQVJOKGVkcF9oYXZlX3BhbmVsX3Bv
d2VyKGludGVsX2RwKSwKLQkJICJlRFAgcG9ydCAlYyBwYW5lbCBwb3dlciBhbHJlYWR5IG9uXG4i
LAotCQkgcG9ydF9uYW1lKGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5wb3J0KSkpCisJ
CSAiW0VOQ09ERVI6JWQ6JXNdIHBhbmVsIHBvd2VyIGFscmVhZHkgb25cbiIsCisJCSBkcF90b19k
aWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgZHBfdG9fZGlnX3BvcnQo
aW50ZWxfZHApLT5iYXNlLmJhc2UubmFtZSkpCiAJCXJldHVybjsKIAogCXdhaXRfcGFuZWxfcG93
ZXJfY3ljbGUoaW50ZWxfZHApOwpAQCAtMjcwMiwxMSArMjcxNSwxMSBAQCBzdGF0aWMgdm9pZCBl
ZHBfcGFuZWxfb2ZmKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKCFpbnRlbF9kcF9p
c19lZHAoaW50ZWxfZHApKQogCQlyZXR1cm47CiAKLQlEUk1fREVCVUdfS01TKCJUdXJuIGVEUCBw
b3J0ICVjIHBhbmVsIHBvd2VyIG9mZlxuIiwKLQkJICAgICAgcG9ydF9uYW1lKGRpZ19wb3J0LT5i
YXNlLnBvcnQpKTsKKwlEUk1fREVCVUdfS01TKCJUdXJuIFtFTkNPREVSOiVkOiVzXSBwYW5lbCBw
b3dlciBvZmZcbiIsCisJCSAgICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwgZGlnX3Bv
cnQtPmJhc2UuYmFzZS5uYW1lKTsKIAotCVdBUk4oIWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCwg
Ik5lZWQgZURQIHBvcnQgJWMgVkREIHRvIHR1cm4gb2ZmIHBhbmVsXG4iLAotCSAgICAgcG9ydF9u
YW1lKGRpZ19wb3J0LT5iYXNlLnBvcnQpKTsKKwlXQVJOKCFpbnRlbF9kcC0+d2FudF9wYW5lbF92
ZGQsICJOZWVkIFtFTkNPREVSOiVkOiVzXSBWREQgdG8gdHVybiBvZmYgcGFuZWxcbiIsCisJICAg
ICBkaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7
CiAKIAlwcCA9IGlyb25sYWtlX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKIAkvKiBXZSBuZWVk
IHRvIHN3aXRjaCBvZmYgcGFuZWwgcG93ZXIgX2FuZF8gZm9yY2UgdmRkLCBmb3Igb3RoZXJ3aXNl
IHNvbWUKQEAgLTI4NTEsOCArMjg2NCw4IEBAIHN0YXRpYyB2b2lkIGFzc2VydF9kcF9wb3J0KHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIGJvb2wgc3RhdGUpCiAJYm9vbCBjdXJfc3RhdGUgPSBJ
OTE1X1JFQUQoaW50ZWxfZHAtPm91dHB1dF9yZWcpICYgRFBfUE9SVF9FTjsKIAogCUk5MTVfU1RB
VEVfV0FSTihjdXJfc3RhdGUgIT0gc3RhdGUsCi0JCQkiRFAgcG9ydCAlYyBzdGF0ZSBhc3NlcnRp
b24gZmFpbHVyZSAoZXhwZWN0ZWQgJXMsIGN1cnJlbnQgJXMpXG4iLAotCQkJcG9ydF9uYW1lKGRp
Z19wb3J0LT5iYXNlLnBvcnQpLAorCQkJIltFTkNPREVSOiVkOiVzXSBzdGF0ZSBhc3NlcnRpb24g
ZmFpbHVyZSAoZXhwZWN0ZWQgJXMsIGN1cnJlbnQgJXMpXG4iLAorCQkJZGlnX3BvcnQtPmJhc2Uu
YmFzZS5iYXNlLmlkLCBkaWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUsCiAJCQlvbm9mZihzdGF0ZSks
IG9ub2ZmKGN1cl9zdGF0ZSkpOwogfQogI2RlZmluZSBhc3NlcnRfZHBfcG9ydF9kaXNhYmxlZChk
KSBhc3NlcnRfZHBfcG9ydCgoZCksIGZhbHNlKQpAQCAtMzQzMCw4ICszNDQzLDkgQEAgc3RhdGlj
IHZvaWQgdmx2X2RldGFjaF9wb3dlcl9zZXF1ZW5jZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAkgKiBwb3J0IHNlbGVjdCBhbHdheXMgd2hlbiBsb2dpY2FsbHkgZGlzY29ubmVjdGluZyBh
IHBvd2VyIHNlcXVlbmNlcgogCSAqIGZyb20gYSBwb3J0LgogCSAqLwotCURSTV9ERUJVR19LTVMo
ImRldGFjaGluZyBwaXBlICVjIHBvd2VyIHNlcXVlbmNlciBmcm9tIHBvcnQgJWNcbiIsCi0JCSAg
ICAgIHBpcGVfbmFtZShwaXBlKSwgcG9ydF9uYW1lKGludGVsX2RpZ19wb3J0LT5iYXNlLnBvcnQp
KTsKKwlEUk1fREVCVUdfS01TKCJkZXRhY2hpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZnJv
bSBbRU5DT0RFUjolZDolc11cbiIsCisJCSAgICAgIHBpcGVfbmFtZShwaXBlKSwgaW50ZWxfZGln
X3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5i
YXNlLm5hbWUpOwogCUk5MTVfV1JJVEUocHBfb25fcmVnLCAwKTsKIAlQT1NUSU5HX1JFQUQocHBf
b25fcmVnKTsKIApAQCAtMzQ0NywxNyArMzQ2MSwxOCBAQCBzdGF0aWMgdm9pZCB2bHZfc3RlYWxf
cG93ZXJfc2VxdWVuY2VyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAogCWZv
cl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CiAJCXN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoJmVuY29kZXItPmJhc2UpOwotCQllbnVt
IHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CiAKIAkJV0FSTihpbnRlbF9kcC0+YWN0aXZlX3Bp
cGUgPT0gcGlwZSwKLQkJICAgICAic3RlYWxpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZnJv
bSBhY3RpdmUgKGUpRFAgcG9ydCAlY1xuIiwKLQkJICAgICBwaXBlX25hbWUocGlwZSksIHBvcnRf
bmFtZShwb3J0KSk7CisJCSAgICAgInN0ZWFsaW5nIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZy
b20gYWN0aXZlIFtFTkNPREVSOiVkOiVzXVxuIiwKKwkJICAgICBwaXBlX25hbWUocGlwZSksIGVu
Y29kZXItPmJhc2UuYmFzZS5pZCwKKwkJICAgICBlbmNvZGVyLT5iYXNlLm5hbWUpOwogCiAJCWlm
IChpbnRlbF9kcC0+cHBzX3BpcGUgIT0gcGlwZSkKIAkJCWNvbnRpbnVlOwogCi0JCURSTV9ERUJV
R19LTVMoInN0ZWFsaW5nIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZyb20gcG9ydCAlY1xuIiwK
LQkJCSAgICAgIHBpcGVfbmFtZShwaXBlKSwgcG9ydF9uYW1lKHBvcnQpKTsKKwkJRFJNX0RFQlVH
X0tNUygic3RlYWxpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZnJvbSBbRU5DT0RFUjolZDol
c11cbiIsCisJCQkgICAgICBwaXBlX25hbWUocGlwZSksIGVuY29kZXItPmJhc2UuYmFzZS5pZCwK
KwkJCSAgICAgIGVuY29kZXItPmJhc2UubmFtZSk7CiAKIAkJLyogbWFrZSBzdXJlIHZkZCBpcyBv
ZmYgYmVmb3JlIHdlIHN0ZWFsIGl0ICovCiAJCXZsdl9kZXRhY2hfcG93ZXJfc2VxdWVuY2VyKGlu
dGVsX2RwKTsKQEAgLTM0OTksOCArMzUxNCw5IEBAIHN0YXRpYyB2b2lkIHZsdl9pbml0X3BhbmVs
X3Bvd2VyX3NlcXVlbmNlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkvKiBub3cg
aXQncyBhbGwgb3VycyAqLwogCWludGVsX2RwLT5wcHNfcGlwZSA9IGNydGMtPnBpcGU7CiAKLQlE
Uk1fREVCVUdfS01TKCJpbml0aWFsaXppbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIHBv
cnQgJWNcbiIsCi0JCSAgICAgIHBpcGVfbmFtZShpbnRlbF9kcC0+cHBzX3BpcGUpLCBwb3J0X25h
bWUoZW5jb2Rlci0+cG9ydCkpOworCURSTV9ERUJVR19LTVMoImluaXRpYWxpemluZyBwaXBlICVj
IHBvd2VyIHNlcXVlbmNlciBmb3IgW0VOQ09ERVI6JWQ6JXNdXG4iLAorCQkgICAgICBwaXBlX25h
bWUoaW50ZWxfZHAtPnBwc19waXBlKSwgZW5jb2Rlci0+YmFzZS5iYXNlLmlkLAorCQkgICAgICBl
bmNvZGVyLT5iYXNlLm5hbWUpOwogCiAJLyogaW5pdCBwb3dlciBzZXF1ZW5jZXIgb24gdGhpcyBw
aXBlIGFuZCBwb3J0ICovCiAJaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXIoaW50
ZWxfZHApOwpAQCAtNDMyMSw5ICs0MzM3LDEwIEBAIGludGVsX2RwX2NvbmZpZ3VyZV9tc3Qoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJJmRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFz
ZTsKIAlib29sIHNpbmtfY2FuX21zdCA9IGludGVsX2RwX3NpbmtfY2FuX21zdChpbnRlbF9kcCk7
CiAKLQlEUk1fREVCVUdfS01TKCJNU1Qgc3VwcG9ydD8gcG9ydCAlYzogJXMsIHNpbms6ICVzLCBt
b2RwYXJhbTogJXNcbiIsCi0JCSAgICAgIHBvcnRfbmFtZShlbmNvZGVyLT5wb3J0KSwgeWVzbm8o
aW50ZWxfZHAtPmNhbl9tc3QpLAotCQkgICAgICB5ZXNubyhzaW5rX2Nhbl9tc3QpLCB5ZXNubyhp
OTE1X21vZHBhcmFtcy5lbmFibGVfZHBfbXN0KSk7CisJRFJNX0RFQlVHX0tNUygiW0VOQ09ERVI6
JWQ6JXNdIE1TVCBzdXBwb3J0PyBwb3J0OiAlcywgc2luazogJXMsIG1vZHBhcmFtOiAlc1xuIiwK
KwkJICAgICAgZW5jb2Rlci0+YmFzZS5iYXNlLmlkLCBlbmNvZGVyLT5iYXNlLm5hbWUsCisJCSAg
ICAgIHllc25vKGludGVsX2RwLT5jYW5fbXN0KSwgeWVzbm8oc2lua19jYW5fbXN0KSwKKwkJICAg
ICAgeWVzbm8oaTkxNV9tb2RwYXJhbXMuZW5hYmxlX2RwX21zdCkpOwogCiAJaWYgKCFpbnRlbF9k
cC0+Y2FuX21zdCkKIAkJcmV0dXJuOwpAQCAtNjI4MiwxMyArNjI5OSwxNSBAQCBpbnRlbF9kcF9o
cGRfcHVsc2Uoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsIGJvb2wg
bG9uZ19ocGQpCiAJCSAqIHdvdWxkIGVuZCB1cCBpbiBhbiBlbmRsZXNzIGN5Y2xlIG9mCiAJCSAq
ICJ2ZGQgb2ZmIC0+IGxvbmcgaHBkIC0+IHZkZCBvbiAtPiBkZXRlY3QgLT4gdmRkIG9mZiAtPiAu
Li4iCiAJCSAqLwotCQlEUk1fREVCVUdfS01TKCJpZ25vcmluZyBsb25nIGhwZCBvbiBlRFAgcG9y
dCAlY1xuIiwKLQkJCSAgICAgIHBvcnRfbmFtZShpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0KSk7
CisJCURSTV9ERUJVR19LTVMoImlnbm9yaW5nIGxvbmcgaHBkIG9uIGVEUCBbRU5DT0RFUjolZDol
c11cbiIsCisJCQkgICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCQkg
ICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUpOwogCQlyZXR1cm4gSVJRX0hBTkRM
RUQ7CiAJfQogCi0JRFJNX0RFQlVHX0tNUygiZ290IGhwZCBpcnEgb24gcG9ydCAlYyAtICVzXG4i
LAotCQkgICAgICBwb3J0X25hbWUoaW50ZWxfZGlnX3BvcnQtPmJhc2UucG9ydCksCisJRFJNX0RF
QlVHX0tNUygiZ290IGhwZCBpcnEgb24gW0VOQ09ERVI6JWQ6JXNdIC0gJXNcbiIsCisJCSAgICAg
IGludGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwKKwkJICAgICAgaW50ZWxfZGlnX3Bv
cnQtPmJhc2UuYmFzZS5uYW1lLAogCQkgICAgICBsb25nX2hwZCA/ICJsb25nIiA6ICJzaG9ydCIp
OwogCiAJaWYgKGxvbmdfaHBkKSB7CkBAIC03MTUyLDggKzcxNzEsOSBAQCBpbnRlbF9kcF9pbml0
X2Nvbm5lY3RvcihzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCwKIAkJ
ICBpbnRlbF9kcF9tb2Rlc2V0X3JldHJ5X3dvcmtfZm4pOwogCiAJaWYgKFdBUk4oaW50ZWxfZGln
X3BvcnQtPm1heF9sYW5lcyA8IDEsCi0JCSAiTm90IGVub3VnaCBsYW5lcyAoJWQpIGZvciBEUCBv
biBwb3J0ICVjXG4iLAotCQkgaW50ZWxfZGlnX3BvcnQtPm1heF9sYW5lcywgcG9ydF9uYW1lKHBv
cnQpKSkKKwkJICJOb3QgZW5vdWdoIGxhbmVzICglZCkgZm9yIERQIG9uIFtFTkNPREVSOiVkOiVz
XVxuIiwKKwkJIGludGVsX2RpZ19wb3J0LT5tYXhfbGFuZXMsIGludGVsX2VuY29kZXItPmJhc2Uu
YmFzZS5pZCwKKwkJIGludGVsX2VuY29kZXItPmJhc2UubmFtZSkpCiAJCXJldHVybiBmYWxzZTsK
IAogCWludGVsX2RwX3NldF9zb3VyY2VfcmF0ZXMoaW50ZWxfZHApOwpAQCAtNzE5NCw5ICs3MjE0
LDkgQEAgaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAq
aW50ZWxfZGlnX3BvcnQsCiAJCSAgICBwb3J0ICE9IFBPUlRfQiAmJiBwb3J0ICE9IFBPUlRfQykp
CiAJCXJldHVybiBmYWxzZTsKIAotCURSTV9ERUJVR19LTVMoIkFkZGluZyAlcyBjb25uZWN0b3Ig
b24gcG9ydCAlY1xuIiwKLQkJCXR5cGUgPT0gRFJNX01PREVfQ09OTkVDVE9SX2VEUCA/ICJlRFAi
IDogIkRQIiwKLQkJCXBvcnRfbmFtZShwb3J0KSk7CisJRFJNX0RFQlVHX0tNUygiQWRkaW5nICVz
IGNvbm5lY3RvciBvbiBbRU5DT0RFUjolZDolc11cbiIsCisJCSAgICAgIHR5cGUgPT0gRFJNX01P
REVfQ09OTkVDVE9SX2VEUCA/ICJlRFAiIDogIkRQIiwKKwkJICAgICAgaW50ZWxfZW5jb2Rlci0+
YmFzZS5iYXNlLmlkLCBpbnRlbF9lbmNvZGVyLT5iYXNlLm5hbWUpOwogCiAJZHJtX2Nvbm5lY3Rv
cl9pbml0KGRldiwgY29ubmVjdG9yLCAmaW50ZWxfZHBfY29ubmVjdG9yX2Z1bmNzLCB0eXBlKTsK
IAlkcm1fY29ubmVjdG9yX2hlbHBlcl9hZGQoY29ubmVjdG9yLCAmaW50ZWxfZHBfY29ubmVjdG9y
X2hlbHBlcl9mdW5jcyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RwbGxfbWdyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rw
bGxfbWdyLmMKaW5kZXggYjgxNDhmODM4MzU0Li45ODI4OGVkZjg4ZjAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmMKQEAgLTI5MTAsOCArMjkxMCw4
IEBAIHN0YXRpYyBib29sIGljbF9nZXRfY29tYm9fcGh5X2RwbGwoc3RydWN0IGludGVsX2F0b21p
Y19zdGF0ZSAqc3RhdGUsCiAJCQkJCQloYXNfZHBsbDQgPyBEUExMX0lEX0VITF9EUExMNAogCQkJ
CQkJCSAgOiBEUExMX0lEX0lDTF9EUExMMSk7CiAJaWYgKCFwb3J0X2RwbGwtPnBsbCkgewotCQlE
Uk1fREVCVUdfS01TKCJObyBjb21ibyBQSFkgUExMIGZvdW5kIGZvciBwb3J0ICVjXG4iLAotCQkJ
ICAgICAgcG9ydF9uYW1lKGVuY29kZXItPnBvcnQpKTsKKwkJRFJNX0RFQlVHX0tNUygiTm8gY29t
Ym8gUEhZIFBMTCBmb3VuZCBmb3IgW0VOQ09ERVI6JWQ6JXNdXG4iLAorCQkJICAgICAgZW5jb2Rl
ci0+YmFzZS5iYXNlLmlkLCBlbmNvZGVyLT5iYXNlLm5hbWUpOwogCQlyZXR1cm4gZmFsc2U7CiAJ
fQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWku
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCmluZGV4IDk3MTBi
ODVkMWFlZi4uM2Y3N2Y5MDUxYjA5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2hkbWkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2hkbWkuYwpAQCAtMzA3NywxMiArMzA3NywxMyBAQCB2b2lkIGludGVsX2hkbWlfaW5pdF9j
b25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsCiAJZW51
bSBwb3J0IHBvcnQgPSBpbnRlbF9lbmNvZGVyLT5wb3J0OwogCXN0cnVjdCBjZWNfY29ubmVjdG9y
X2luZm8gY29ubl9pbmZvOwogCi0JRFJNX0RFQlVHX0tNUygiQWRkaW5nIEhETUkgY29ubmVjdG9y
IG9uIHBvcnQgJWNcbiIsCi0JCSAgICAgIHBvcnRfbmFtZShwb3J0KSk7CisJRFJNX0RFQlVHX0tN
UygiQWRkaW5nIEhETUkgY29ubmVjdG9yIG9uIFtFTkNPREVSOiVkOiVzXVxuIiwKKwkJICAgICAg
aW50ZWxfZW5jb2Rlci0+YmFzZS5iYXNlLmlkLCBpbnRlbF9lbmNvZGVyLT5iYXNlLm5hbWUpOwog
CiAJaWYgKFdBUk4oaW50ZWxfZGlnX3BvcnQtPm1heF9sYW5lcyA8IDQsCi0JCSAiTm90IGVub3Vn
aCBsYW5lcyAoJWQpIGZvciBIRE1JIG9uIHBvcnQgJWNcbiIsCi0JCSBpbnRlbF9kaWdfcG9ydC0+
bWF4X2xhbmVzLCBwb3J0X25hbWUocG9ydCkpKQorCQkgIk5vdCBlbm91Z2ggbGFuZXMgKCVkKSBm
b3IgSERNSSBvbiBbRU5DT0RFUjolZDolc11cbiIsCisJCSBpbnRlbF9kaWdfcG9ydC0+bWF4X2xh
bmVzLCBpbnRlbF9lbmNvZGVyLT5iYXNlLmJhc2UuaWQsCisJCSBpbnRlbF9lbmNvZGVyLT5iYXNl
Lm5hbWUpKQogCQlyZXR1cm47CiAKIAlkcm1fY29ubmVjdG9yX2luaXQoZGV2LCBjb25uZWN0b3Is
ICZpbnRlbF9oZG1pX2Nvbm5lY3Rvcl9mdW5jcywKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9ob3RwbHVnLmMKaW5kZXggNTZiZTIwZjZmNDdlLi5mYzI5MDQ2ZDQ4ZWEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5jCkBAIC00ODEs
NyArNDgxLDggQEAgdm9pZCBpbnRlbF9ocGRfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAogCiAJCWxvbmdfaHBkID0gbG9uZ19tYXNrICYgQklUKHBpbik7CiAK
LQkJRFJNX0RFQlVHX0RSSVZFUigiZGlnaXRhbCBocGQgcG9ydCAlYyAtICVzXG4iLCBwb3J0X25h
bWUocG9ydCksCisJCURSTV9ERUJVR19EUklWRVIoImRpZ2l0YWwgaHBkIG9uIFtFTkNPREVSOiVk
OiVzXSAtICVzXG4iLAorCQkJCSBlbmNvZGVyLT5iYXNlLmJhc2UuaWQsIGVuY29kZXItPmJhc2Uu
bmFtZSwKIAkJCQkgbG9uZ19ocGQgPyAibG9uZyIgOiAic2hvcnQiKTsKIAkJcXVldWVfZGlnID0g
dHJ1ZTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYwppbmRleCA1ZTgxYzRmYzEzYWUu
Ljk3NDkzNjkxNzMyOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1
Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKQEAgLTMxMTQs
OCArMzExNCw5IEBAIHN0YXRpYyBpbnQgaTkxNV9kcF9tc3RfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUg
Km0sIHZvaWQgKnVudXNlZCkKIAkJaWYgKCFpbnRlbF9kaWdfcG9ydC0+ZHAuY2FuX21zdCkKIAkJ
CWNvbnRpbnVlOwogCi0JCXNlcV9wcmludGYobSwgIk1TVCBTb3VyY2UgUG9ydCAlY1xuIiwKLQkJ
CSAgIHBvcnRfbmFtZShpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0KSk7CisJCXNlcV9wcmludGYo
bSwgIk1TVCBTb3VyY2UgUG9ydCBbRU5DT0RFUjolZDolc11cbiIsCisJCQkgICBpbnRlbF9kaWdf
cG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCQkgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNl
Lm5hbWUpOwogCQlkcm1fZHBfbXN0X2R1bXBfdG9wb2xvZ3kobSwgJmludGVsX2RpZ19wb3J0LT5k
cC5tc3RfbWdyKTsKIAl9CiAJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZjb25uX2l0ZXIp
OwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1n
Zng=

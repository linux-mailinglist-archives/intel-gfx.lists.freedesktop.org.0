Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BE1642777ED
	for <lists+intel-gfx@lfdr.de>; Thu, 24 Sep 2020 19:39:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0F8636E3AC;
	Thu, 24 Sep 2020 17:39:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CFF656E3AA
 for <intel-gfx@lists.freedesktop.org>; Thu, 24 Sep 2020 17:38:58 +0000 (UTC)
IronPort-SDR: d2UrADSl6sS81jMKi6f8tjZT/+5IipYrYfO2izj00G6g/TZ3iDNOiddnTBoV3dWXiJIqm1v7ZT
 6JZ+yv5Qy8eA==
X-IronPort-AV: E=McAfee;i="6000,8403,9754"; a="158666805"
X-IronPort-AV: E=Sophos;i="5.77,298,1596524400"; d="scan'208";a="158666805"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 24 Sep 2020 10:38:58 -0700
IronPort-SDR: yoSNUjzYlZjVaqZ8Q0q8Pqp6mJYW7XgiO+NPJiIIP4c1LQyGsZAmrSAtkLo0T9ogadUytiI5EX
 Bh90bWcuCivA==
X-IronPort-AV: E=Sophos;i="5.77,298,1596524400"; d="scan'208";a="512259622"
Received: from agangwar-mobl2.gar.corp.intel.com (HELO
 josouza-MOBL2.amr.corp.intel.com) ([10.254.4.73])
 by fmsmga005-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 24 Sep 2020 10:38:58 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 24 Sep 2020 10:42:00 -0700
Message-Id: <20200924174201.44021-2-jose.souza@intel.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20200924174201.44021-1-jose.souza@intel.com>
References: <20200924174201.44021-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 2/3] drm/i915/display: Check PSR parameter
 and flag only in state compute phase
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RHVlIHRvIHRoZSBkZWJ1Z2ZzIGZsYWcsIGhhc19wc3IyIGluIENSVEMgc3RhdGUgY291bGQgaGF2
ZSBhIGRpZmZlcmVudAp2YWx1ZSB0aGFuIHBzci5wc3IyX2VuYWJsZWQgYW5kIGl0IHdhcyBjYXVz
aW5nIFBTUjIgc3ViZmVhdHVyZXMoREMzQ08KYW5kIHNlbGVjdGl2ZSBmZXRjaCkgdG8gYmUgc2V0
IHRvIG5vdCBhIGV4cGVjdGVkIHN0YXRlLgoKU28gaGVyZSBvbmx5IHRha2luZyBpbiBjb25zaWRl
cmF0aW9uIHRoZSBwYXJhbWV0ZXIgYW5kIGRlYnVnZnMgZmxhZwp3aGVuIGNvbXB1dGluZyBQU1Ig
c3RhdGUsIHRoaXMgd2F5IHRoZSBDUlRDIHN0YXRlIHdpbGwgYWxzbyBoYXZlCnRoZSBjb3JyZWN0
IHN0YXRlLgoKaW50ZWxfcHNyX2Zhc3RzZXRfZm9yY2UoKSB3YXMgYWxyZWFkeSBicm9rZW4gYXMK
aW50ZWxfcHNyX2NvbXB1dGVfY29uZmlnKCkgd2FzIGFscmVhZHkgb25seSBlbmFibGluZyBQU1Ig
d2hlbgpwc3JfZ2xvYmFsX2VuYWJsZWQoKSBhbmQgYWxsIG90aGVyIFBTUiByZXF1aXJlbWVudHMg
YXJlIG1ldC4KU28gc29tZSBjaGFuZ2VzIHdhcyByZXF1aXJlZCBpbiB0aGlzIGZ1bmN0aW9uLCBu
b3cgaXQgaXRlcmF0ZXMgb3ZlcgphbGwgY29ubmVjdG9ycywgaWYgaXQgaXMgYSBlRFAgY29ubmVj
dG9yIGFuZCBpcyBhY3RpdmUgZm9yY2UgYSBtb2Rlc2V0CmluIHRoZSBDUlRDIGRyaXZpbmcgdGhp
cyBjb25uZWN0b3IsIHdoYXQgd2lsbCBjYXVzZSB0aGUgbmV3IFBTUiBzdGF0ZQp0byBiZSBzZXQg
YmFzZWQgb24gdGhlIGRlYnVnZnMgZmxhZy4KCnYyOgotIGVuZCBjb25uZWN0b3IgaXRlcmF0b3Ig
aW4gZXJyb3IgY2FzZXMKCkNjOiBHd2FuLWd5ZW9uZyBNdW4gPGd3YW4tZ3llb25nLm11bkBpbnRl
bC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29t
PgpSZXZpZXdlZC1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVs
LmNvbT4KU2lnbmVkLW9mZi1ieTogSm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYyB8
IDczICsrKysrKysrKysrKystLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDQxIGluc2VydGlv
bnMoKyksIDMyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfcHNyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X3Bzci5jCmluZGV4IDRlMDlhZTYxZDRhYS4uMDJmNzRiMGRkZWMxIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMKQEAgLTkxLDE5ICs5MSwxNCBAQCBzdGF0aWMgYm9v
bCBwc3JfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQog
fQogCi1zdGF0aWMgYm9vbCBpbnRlbF9wc3IyX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAotCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQorc3RhdGljIGJvb2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JLyogQ2Fubm90IGVuYWJsZSBEU0MgYW5kIFBTUjIg
c2ltdWx0YW5lb3VzbHkgKi8KLQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgY3J0Y19zdGF0
ZS0+ZHNjLmNvbXByZXNzaW9uX2VuYWJsZSAmJgotCQkgICAgY3J0Y19zdGF0ZS0+aGFzX3BzcjIp
OwotCiAJc3dpdGNoIChkZXZfcHJpdi0+cHNyLmRlYnVnICYgSTkxNV9QU1JfREVCVUdfTU9ERV9N
QVNLKSB7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFOgogCWNhc2UgSTkxNV9QU1JfREVC
VUdfRk9SQ0VfUFNSMToKIAkJcmV0dXJuIGZhbHNlOwogCWRlZmF1bHQ6Ci0JCXJldHVybiBjcnRj
X3N0YXRlLT5oYXNfcHNyMjsKKwkJcmV0dXJuIHRydWU7CiAJfQogfQogCkBAIC03MjksNiArNzI0
LDExIEBAIHN0YXRpYyBib29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCiAJCXJldHVybiBmYWxzZTsKIAl9CiAKKwlpZiAoIXBzcjJfZ2xvYmFsX2Vu
YWJsZWQoZGV2X3ByaXYpKSB7CisJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiUFNSMiBk
aXNhYmxlZCBieSBmbGFnXG4iKTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKwogCS8qCiAJICogRFND
IGFuZCBQU1IyIGNhbm5vdCBiZSBlbmFibGVkIHNpbXVsdGFuZW91c2x5LiBJZiBhIHJlcXVlc3Rl
ZAogCSAqIHJlc29sdXRpb24gcmVxdWlyZXMgRFNDIHRvIGJlIGVuYWJsZWQsIHByaW9yaXR5IGlz
IGdpdmVuIHRvIERTQwpAQCAtODE3LDggKzgxNywxMSBAQCB2b2lkIGludGVsX3Bzcl9jb21wdXRl
X2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChpbnRlbF9kcCAhPSBkZXZf
cHJpdi0+cHNyLmRwKQogCQlyZXR1cm47CiAKLQlpZiAoIXBzcl9nbG9iYWxfZW5hYmxlZChkZXZf
cHJpdikpCisJaWYgKCFwc3JfZ2xvYmFsX2VuYWJsZWQoZGV2X3ByaXYpKSB7CisJCWRybV9kYmdf
a21zKCZkZXZfcHJpdi0+ZHJtLCAiUFNSIGRpc2FibGVkIGJ5IGZsYWdcbiIpOwogCQlyZXR1cm47
CisJfQorCiAJLyoKIAkgKiBIU1cgc3BlYyBleHBsaWNpdGx5IHNheXMgUFNSIGlzIHRpZWQgdG8g
cG9ydCBBLgogCSAqIEJEVysgcGxhdGZvcm1zIGhhdmUgYSBpbnN0YW5jZSBvZiBQU1IgcmVnaXN0
ZXJzIHBlciB0cmFuc2NvZGVyIGJ1dApAQCAtOTU5LDcgKzk2Miw3IEBAIHN0YXRpYyB2b2lkIGlu
dGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IAogCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBkZXZfcHJpdi0+cHNyLmVuYWJsZWQpOwog
Ci0JZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgPSBpbnRlbF9wc3IyX2VuYWJsZWQoZGV2X3By
aXYsIGNydGNfc3RhdGUpOworCWRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkID0gY3J0Y19zdGF0
ZS0+aGFzX3BzcjI7CiAJZGV2X3ByaXYtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMgPSAwOwog
CWRldl9wcml2LT5wc3IucGlwZSA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRj
KS0+cGlwZTsKIAlkZXZfcHJpdi0+cHNyLmRjM2NvX2VuYWJsZWQgPSAhIWNydGNfc3RhdGUtPmRj
M2NvX2V4aXRsaW5lOwpAQCAtMTAyOSwxNSArMTAzMiw3IEBAIHZvaWQgaW50ZWxfcHNyX2VuYWJs
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJt
LCBkZXZfcHJpdi0+ZHJycy5kcCk7CiAKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2sp
OwotCi0JaWYgKCFwc3JfZ2xvYmFsX2VuYWJsZWQoZGV2X3ByaXYpKSB7Ci0JCWRybV9kYmdfa21z
KCZkZXZfcHJpdi0+ZHJtLCAiUFNSIGRpc2FibGVkIGJ5IGZsYWdcbiIpOwotCQlnb3RvIHVubG9j
azsKLQl9Ci0KIAlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChkZXZfcHJpdiwgY3J0Y19zdGF0ZSwg
Y29ubl9zdGF0ZSk7Ci0KLXVubG9jazoKIAltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9j
ayk7CiB9CiAKQEAgLTEyMjIsOCArMTIxNyw4IEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2Nr
KTsKIAotCWVuYWJsZSA9IGNydGNfc3RhdGUtPmhhc19wc3IgJiYgcHNyX2dsb2JhbF9lbmFibGVk
KGRldl9wcml2KTsKLQlwc3IyX2VuYWJsZSA9IGludGVsX3BzcjJfZW5hYmxlZChkZXZfcHJpdiwg
Y3J0Y19zdGF0ZSk7CisJZW5hYmxlID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjsKKwlwc3IyX2VuYWJs
ZSA9IGNydGNfc3RhdGUtPmhhc19wc3IyOwogCiAJaWYgKGVuYWJsZSA9PSBwc3ItPmVuYWJsZWQg
JiYgcHNyMl9lbmFibGUgPT0gcHNyLT5wc3IyX2VuYWJsZWQpIHsKIAkJLyogRm9yY2UgYSBQU1Ig
ZXhpdCB3aGVuIGVuYWJsaW5nIENSQyB0byBhdm9pZCBDUkMgdGltZW91dHMgKi8KQEAgLTEzMjAs
MTEgKzEzMTUsMTIgQEAgc3RhdGljIGJvb2wgX19wc3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiBzdGF0aWMgaW50IGludGVsX3Bzcl9m
YXN0c2V0X2ZvcmNlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKKwlzdHJ1
Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9pdGVyOwogCXN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYgPSAmZGV2X3ByaXYtPmRybTsKIAlzdHJ1Y3QgZHJtX21vZGVzZXRfYWNxdWlyZV9jdHgg
Y3R4OwogCXN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICpzdGF0ZTsKLQlzdHJ1Y3QgaW50ZWxfY3J0
YyAqY3J0YzsKLQlpbnQgZXJyOworCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uOworCWludCBl
cnIgPSAwOwogCiAJc3RhdGUgPSBkcm1fYXRvbWljX3N0YXRlX2FsbG9jKGRldik7CiAJaWYgKCFz
dGF0ZSkKQEAgLTEzMzQsMjUgKzEzMzAsMzggQEAgc3RhdGljIGludCBpbnRlbF9wc3JfZmFzdHNl
dF9mb3JjZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJc3RhdGUtPmFjcXVp
cmVfY3R4ID0gJmN0eDsKIAogcmV0cnk6Ci0JZm9yX2VhY2hfaW50ZWxfY3J0YyhkZXYsIGNydGMp
IHsKLQkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUgPQotCQkJaW50ZWxfYXRv
bWljX2dldF9jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKIAotCQlpZiAoSVNfRVJSKGNydGNfc3Rh
dGUpKSB7Ci0JCQllcnIgPSBQVFJfRVJSKGNydGNfc3RhdGUpOwotCQkJZ290byBlcnJvcjsKKwlk
cm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZjb25uX2l0ZXIpOworCWRybV9mb3Jf
ZWFjaF9jb25uZWN0b3JfaXRlcihjb25uLCAmY29ubl9pdGVyKSB7CisJCXN0cnVjdCBkcm1fY29u
bmVjdG9yX3N0YXRlICpjb25uX3N0YXRlOworCQlzdHJ1Y3QgZHJtX2NydGNfc3RhdGUgKmNydGNf
c3RhdGU7CisKKwkJaWYgKGNvbm4tPmNvbm5lY3Rvcl90eXBlICE9IERSTV9NT0RFX0NPTk5FQ1RP
Ul9lRFApCisJCQljb250aW51ZTsKKworCQljb25uX3N0YXRlID0gZHJtX2F0b21pY19nZXRfY29u
bmVjdG9yX3N0YXRlKHN0YXRlLCBjb25uKTsKKwkJaWYgKElTX0VSUihjb25uX3N0YXRlKSkgewor
CQkJZXJyID0gUFRSX0VSUihjb25uX3N0YXRlKTsKKwkJCWJyZWFrOwogCQl9CiAKLQkJaWYgKGNy
dGNfc3RhdGUtPmh3LmFjdGl2ZSAmJiBjcnRjX3N0YXRlLT5oYXNfcHNyKSB7Ci0JCQkvKiBNYXJr
IG1vZGUgYXMgY2hhbmdlZCB0byB0cmlnZ2VyIGEgcGlwZS0+dXBkYXRlKCkgKi8KLQkJCWNydGNf
c3RhdGUtPnVhcGkubW9kZV9jaGFuZ2VkID0gdHJ1ZTsKKwkJaWYgKCFjb25uX3N0YXRlLT5jcnRj
KQorCQkJY29udGludWU7CisKKwkJY3J0Y19zdGF0ZSA9IGRybV9hdG9taWNfZ2V0X2NydGNfc3Rh
dGUoc3RhdGUsIGNvbm5fc3RhdGUtPmNydGMpOworCQlpZiAoSVNfRVJSKGNydGNfc3RhdGUpKSB7
CisJCQllcnIgPSBQVFJfRVJSKGNydGNfc3RhdGUpOwogCQkJYnJlYWs7CiAJCX0KKworCQkvKiBN
YXJrIG1vZGUgYXMgY2hhbmdlZCB0byB0cmlnZ2VyIGEgcGlwZS0+dXBkYXRlKCkgKi8KKwkJY3J0
Y19zdGF0ZS0+bW9kZV9jaGFuZ2VkID0gdHJ1ZTsKIAl9CisJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0
ZXJfZW5kKCZjb25uX2l0ZXIpOwogCi0JZXJyID0gZHJtX2F0b21pY19jb21taXQoc3RhdGUpOwor
CWlmIChlcnIgPT0gMCkKKwkJZXJyID0gZHJtX2F0b21pY19jb21taXQoc3RhdGUpOwogCi1lcnJv
cjoKIAlpZiAoZXJyID09IC1FREVBRExLKSB7CiAJCWRybV9hdG9taWNfc3RhdGVfY2xlYXIoc3Rh
dGUpOwogCQllcnIgPSBkcm1fbW9kZXNldF9iYWNrb2ZmKCZjdHgpOwotLSAKMi4yOC4wCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFp
bGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id F09B4CD3B1
	for <lists+intel-gfx@lfdr.de>; Sun,  6 Oct 2019 18:50:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1C68C6E0BA;
	Sun,  6 Oct 2019 16:50:28 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AB9206E415
 for <intel-gfx@lists.freedesktop.org>; Sun,  6 Oct 2019 16:50:16 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18742844-1500050 
 for multiple; Sun, 06 Oct 2019 17:50:05 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sun,  6 Oct 2019 17:49:56 +0100
Message-Id: <20191006165002.30312-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191006165002.30312-1-chris@chris-wilson.co.uk>
References: <20191006165002.30312-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 06/12] drm/i915/execlists: Force preemption
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SWYgdGhlIHByZWVtcHRlZCBjb250ZXh0IHRha2VzIHRvbyBsb25nIHRvIHJlbGlucXVpc2ggY29u
dHJvbCwgZS5nLiBpdAppcyBzdHVjayBpbnNpZGUgYSBzaGFkZXIgd2l0aCBhcmJpdHJhdGlvbiBk
aXNhYmxlZCwgZXZpY3QgdGhhdCBjb250ZXh0CndpdGggYW4gZW5naW5lIHJlc2V0LiBUaGlzIGVu
c3VyZXMgdGhhdCBwcmVlbXB0aW9ucyBhcmUgcmVhc29uYWJseQpyZXNwb25zaXZlLCBwcm92aWRp
bmcgYSB0aWdodGVyIFFvUyBmb3IgdGhlIG1vcmUgaW1wb3J0YW50IGNvbnRleHQgYXQKdGhlIGNv
c3Qgb2YgZmxhZ2dpbmcgdW5yZXNwb25zaXZlIGNvbnRleHRzIG1vcmUgZnJlcXVlbnRseSAoaS5l
LiBpbnN0ZWFkCm9mIHVzaW5nIGFuIH4xMHMgaGFuZ2NoZWNrLCB3ZSBub3cgZXZpY3QgYXQgfjEw
MG1zKS4gIFRoZSBjaGFsbGVuZ2Ugb2YKbGllcyBpbiBwaWNraW5nIGEgdGltZW91dCB0aGF0IGNh
biBiZSByZWFzb25hYmx5IHNlcnZpY2VkIGJ5IEhXIGZvcgp0eXBpY2FsIHdvcmtsb2FkcywgYmFs
YW5jaW5nIHRoZSBleGlzdGluZyBjbGllbnRzIGFnYWluc3QgdGhlIG5lZWRzIGZvcgpyZXNwb25z
aXZlbmVzcy4KCk5vdGUgdGhhdCBjb3VwbGVkIHdpdGggdGltZXNsaWNpbmcsIHRoaXMgd2lsbCBs
ZWFkIHRvIHJhcGlkIEdQVSAiaGFuZyIKZGV0ZWN0aW9uIHdpdGggbXVsdGlwbGUgYWN0aXZlIGNv
bnRleHRzIHZ5aW5nIGZvciBHUFUgdGltZS4KClRoZSBwcmVlbXB0IHRpbWVvdXQgY2FuIGJlIGFk
anVzdGVkIHBlci1lbmdpbmUgdXNpbmcsCgoJL3N5cy9jbGFzcy9kcm0vY2FyZD8vZW5naW5lLyov
cHJlZW1wdF90aW1lb3V0X21zCgp2MjogQ291cGxlIGluIHN5c2ZzIGNvbnRyb2wgb2YgcHJlZW1w
dGlvbiB0aW1lb3V0CgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdp
bHNvbi5jby51az4KQ2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwu
Y29tPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KUmV2aWV3
ZWQtYnk6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29tPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcucHJvZmlsZSAgICAgICAgIHwgMTUgKysrKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAgfCAgMiArCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYyB8IDMyICsrKysrKysKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIHwgIDkgKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgIHwgOTUgKysrKysrKysrKysr
KysrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmggICAgICAgICAgIHwg
IDIgKy0KIDYgZmlsZXMgY2hhbmdlZCwgMTQ2IGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlCmluZGV4IDQ4ZGY4ODg5YTg4YS4uOGZj
ZWVhODU5MzdiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9LY29uZmlnLnByb2Zp
bGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlCkBAIC0yNSwzICsy
NSwxOCBAQCBjb25maWcgRFJNX0k5MTVfU1BJTl9SRVFVRVNUCiAJICBNYXkgYmUgMCB0byBkaXNh
YmxlIHRoZSBpbml0aWFsIHNwaW4uIEluIHByYWN0aWNlLCB3ZSBlc3RpbWF0ZQogCSAgdGhlIGNv
c3Qgb2YgZW5hYmxpbmcgdGhlIGludGVycnVwdCAoaWYgY3VycmVudGx5IGRpc2FibGVkKSB0byBi
ZQogCSAgYSBmZXcgbWljcm9zZWNvbmRzLgorCitjb25maWcgRFJNX0k5MTVfUFJFRU1QVF9USU1F
T1VUCisJaW50ICJQcmVlbXB0IHRpbWVvdXQgKG1zKSIKKwlkZWZhdWx0IDEwMCAjIG1pbGxpc2Vj
b25kcworCWhlbHAKKwkgIEhvdyBsb25nIHRvIHdhaXQgKGluIG1pbGxpc2Vjb25kcykgZm9yIGEg
cHJlZW1wdGlvbiBldmVudCB0byBvY2N1cgorCSAgd2hlbiBzdWJtaXR0aW5nIGEgbmV3IGNvbnRl
eHQgdmlhIGV4ZWNsaXN0cy4gSWYgdGhlIGN1cnJlbnQgY29udGV4dAorCSAgZG9lcyBub3QgaGl0
IGFuIGFyYml0cmF0aW9uIHBvaW50IGFuZCB5aWVsZCB0byBIVyBiZWZvcmUgdGhlIHRpbWVyCisJ
ICBleHBpcmVzLCB0aGUgSFcgd2lsbCBiZSByZXNldCB0byBhbGxvdyB0aGUgbW9yZSBpbXBvcnRh
bnQgY29udGV4dAorCSAgdG8gZXhlY3V0ZS4KKworCSAgVGhpcyBpcyBhZGp1c3RhYmxlIHZpYQor
CSAgL3N5cy9jbGFzcy9kcm0vY2FyZD8vZW5naW5lLyovcHJlZW1wdF90aW1lb3V0X21zCisKKwkg
IE1heSBiZSAwIHRvIGRpc2FibGUgdGhlIHRpbWVvdXQuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IDgwZmQwNzJhYzcxOS4uZGZkZmZhZjM1Njc4IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtMzA0LDYgKzMwNCw4
IEBAIHN0YXRpYyBpbnQgaW50ZWxfZW5naW5lX3NldHVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGVu
dW0gaW50ZWxfZW5naW5lX2lkIGlkKQogCWVuZ2luZS0+aW5zdGFuY2UgPSBpbmZvLT5pbnN0YW5j
ZTsKIAlfX3NwcmludF9lbmdpbmVfbmFtZShlbmdpbmUpOwogCisJZW5naW5lLT5wcm9wcy5wcmVl
bXB0X3RpbWVvdXQgPSBDT05GSUdfRFJNX0k5MTVfUFJFRU1QVF9USU1FT1VUOworCiAJLyoKIAkg
KiBUbyBiZSBvdmVycmlkZGVuIGJ5IHRoZSBiYWNrZW5kIG9uIHNldHVwLiBIb3dldmVyIHRvIGZh
Y2lsaXRhdGUKIAkgKiBjbGVhbnVwIG9uIGVycm9yIGR1cmluZyBzZXR1cCwgd2UgYWx3YXlzIHBy
b3ZpZGUgdGhlIGRlc3Ryb3kgdmZ1bmMuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9zeXNmcy5jCmluZGV4IGNiZTllYzU5YmVlYi4uYWFjMjYwOTdjOTE2IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYwpAQCAtNDUsMTAgKzQ1
LDM3IEBAIG1taW9fc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGtvYmpfYXR0cmli
dXRlICphdHRyLCBjaGFyICpidWYpCiAJcmV0dXJuIHNwcmludGYoYnVmLCAiMHgleFxuIiwga29i
al90b19lbmdpbmUoa29iaiktPm1taW9fYmFzZSk7CiB9CiAKK3N0YXRpYyBzc2l6ZV90CitwcmVl
bXB0X3RpbWVvdXRfc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGtvYmpfYXR0cmli
dXRlICphdHRyLAorCQkgICAgIGNoYXIgKmJ1ZikKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUgPSBrb2JqX3RvX2VuZ2luZShrb2JqKTsKKworCXJldHVybiBzcHJpbnRmKGJ1Ziwg
IiVsdVxuIiwgZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXQpOworfQorCitzdGF0aWMgc3Np
emVfdAorcHJlZW1wdF90aW1lb3V0X3N0b3JlKHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3Qg
a29ial9hdHRyaWJ1dGUgKmF0dHIsCisJCSAgICAgIGNvbnN0IGNoYXIgKmJ1Ziwgc2l6ZV90IGNv
dW50KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGtvYmpfdG9fZW5naW5l
KGtvYmopOworCXVuc2lnbmVkIGxvbmcgdGltZW91dDsKKwlpbnQgZXJyOworCisJZXJyID0ga3N0
cnRvdWwoYnVmLCAwLCAmdGltZW91dCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVu
Z2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0ID0gdGltZW91dDsKKwlyZXR1cm4gY291bnQ7Cit9
CisKIHN0YXRpYyBzdHJ1Y3Qga29ial9hdHRyaWJ1dGUgbmFtZV9hdHRyID0gX19BVFRSKG5hbWUs
IDA0NDQsIG5hbWVfc2hvdywgTlVMTCk7CiBzdGF0aWMgc3RydWN0IGtvYmpfYXR0cmlidXRlIGNs
YXNzX2F0dHIgPSBfX0FUVFIoY2xhc3MsIDA0NDQsIGNsYXNzX3Nob3csIE5VTEwpOwogc3RhdGlj
IHN0cnVjdCBrb2JqX2F0dHJpYnV0ZSBpbnN0X2F0dHIgPSBfX0FUVFIoaW5zdGFuY2UsIDA0NDQs
IGluc3Rfc2hvdywgTlVMTCk7CiBzdGF0aWMgc3RydWN0IGtvYmpfYXR0cmlidXRlIG1taW9fYXR0
ciA9IF9fQVRUUihtbWlvX2Jhc2UsIDA0NDQsIG1taW9fc2hvdywgTlVMTCk7CitzdGF0aWMgc3Ry
dWN0IGtvYmpfYXR0cmlidXRlIHByZWVtcHRfdGltZW91dF9hdHRyID0KK19fQVRUUihwcmVlbXB0
X3RpbWVvdXRfbXMsIDA2MDAsIHByZWVtcHRfdGltZW91dF9zaG93LCBwcmVlbXB0X3RpbWVvdXRf
c3RvcmUpOwogCiBzdGF0aWMgdm9pZCBrb2JqX2VuZ2luZV9yZWxlYXNlKHN0cnVjdCBrb2JqZWN0
ICprb2JqKQogewpAQCAtMTA5LDYgKzEzNiwxMSBAQCB2b2lkIGludGVsX2VuZ2luZXNfYWRkX3N5
c2ZzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCQlpZiAoc3lzZnNfY3JlYXRlX2Zp
bGVzKGtvYmosIGZpbGVzKSkKIAkJCWdvdG8gZXJyX2VuZ2luZTsKIAorCQlpZiAoQ09ORklHX0RS
TV9JOTE1X1BSRUVNUFRfVElNRU9VVCAmJgorCQkgICAgaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0
aW9uKGVuZ2luZSkgJiYKKwkJICAgIHN5c2ZzX2NyZWF0ZV9maWxlKGtvYmosICZwcmVlbXB0X3Rp
bWVvdXRfYXR0ci5hdHRyKSkKKwkJCWdvdG8gZXJyX2VuZ2luZTsKKwogCQlpZiAoMCkgewogZXJy
X2VuZ2luZToKIAkJCWRldl9lcnIoa2RldiwgIkZhaWxlZCB0byBhZGQgc3lzZnMgZW5naW5lICcl
cydcbiIsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
dHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmlu
ZGV4IDYxOTkwNjRmMzMyYi4uNmFmOWIwMDk2OTc1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMTczLDYgKzE3MywxMSBAQCBzdHJ1Y3QgaW50
ZWxfZW5naW5lX2V4ZWNsaXN0cyB7CiAJICovCiAJc3RydWN0IHRpbWVyX2xpc3QgdGltZXI7CiAK
KwkvKioKKwkgKiBAcHJlZW1wdDogcmVzZXQgdGhlIGN1cnJlbnQgY29udGV4dCBpZiBpdCBmYWls
cyB0byBnaXZlIHdheQorCSAqLworCXN0cnVjdCB0aW1lcl9saXN0IHByZWVtcHQ7CisKIAkvKioK
IAkgKiBAZGVmYXVsdF9wcmlvbGlzdDogcHJpb3JpdHkgbGlzdCBmb3IgSTkxNV9QUklPUklUWV9O
T1JNQUwKIAkgKi8KQEAgLTU0MSw2ICs1NDYsMTAgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAJCSAqLwogCQlrdGltZV90IHRvdGFsOwogCX0gc3RhdHM7CisKKwlzdHJ1Y3QgeworCQl1bnNp
Z25lZCBsb25nIHByZWVtcHRfdGltZW91dDsKKwl9IHByb3BzOwogfTsKIAogc3RhdGljIGlubGlu
ZSBib29sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IDQzMmI4YjYwYzRjMC4u
MGQ1YjA2OWM2N2E0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9s
cmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMTM5NCw2
ICsxMzk0LDI5IEBAIHN0YXRpYyB2b2lkIHJlY29yZF9wcmVlbXB0aW9uKHN0cnVjdCBpbnRlbF9l
bmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiAJKHZvaWQpSTkxNV9TRUxGVEVTVF9PTkxZKGV4
ZWNsaXN0cy0+cHJlZW1wdF9oYW5nLmNvdW50KyspOwogfQogCitzdGF0aWMgdm9pZCBzZXRfcHJl
ZW1wdF90aW1lb3V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwl1bnNpZ25l
ZCBsb25nIHRpbWVvdXQ7CisKKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQp
CisJCXJldHVybjsKKworCXRpbWVvdXQgPSBSRUFEX09OQ0UoZW5naW5lLT5wcm9wcy5wcmVlbXB0
X3RpbWVvdXQpOworCWlmICghdGltZW91dCkKKwkJcmV0dXJuOworCisJdGltZW91dCA9IG1zZWNz
X3RvX2ppZmZpZXNfdGltZW91dCh0aW1lb3V0KTsKKwkvKgorCSAqIFBhcmFub2lhIHRvIG1ha2Ug
c3VyZSB0aGUgY29tcGlsZXIgY29tcHV0ZXMgdGhlIHRpbWVvdXQgYmVmb3JlCisJICogbG9hZGlu
ZyAnamlmZmllcycgYXMgamlmZmllcyBpcyB2b2xhdGlsZSBhbmQgbWF5IGJlIHVwZGF0ZWQgaW4K
KwkgKiB0aGUgYmFja2dyb3VuZCBieSBhIHRpbWVyIHRpY2suIEFsbCB0byByZWR1Y2UgdGhlIGNv
bXBsZXhpdHkKKwkgKiBvZiB0aGUgYWRkaXRpb24gYW5kIHJlZHVjZSB0aGUgcmlzayBvZiBsb3Np
bmcgYSBqaWZmaWUuCisJICovCisJYmFycmllcigpOworCisJbW9kX3RpbWVyKCZlbmdpbmUtPmV4
ZWNsaXN0cy5wcmVlbXB0LCBqaWZmaWVzICsgdGltZW91dCk7Cit9CisKIHN0YXRpYyB2b2lkIGV4
ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4
ZWNsaXN0czsKQEAgLTE3NTcsNiArMTc4MCw4IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCQltZW1zZXQocG9ydCArIDEs
IDAsIChsYXN0X3BvcnQgLSBwb3J0KSAqIHNpemVvZigqcG9ydCkpOwogCQlleGVjbGlzdHNfc3Vi
bWl0X3BvcnRzKGVuZ2luZSk7CisKKwkJc2V0X3ByZWVtcHRfdGltZW91dChlbmdpbmUpOwogCX0g
ZWxzZSB7CiBza2lwX3N1Ym1pdDoKIAkJcmluZ19zZXRfcGF1c2VkKGVuZ2luZSwgMCk7CkBAIC0x
OTg1LDYgKzIwMTAsNDIgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfc3VibWlzc2lvbl90YXNr
bGV0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmNvbnN0IGVuZ2luZSkKIAkJZXhlY2xpc3RzX2Rl
cXVldWUoZW5naW5lKTsKIH0KIAorc3RhdGljIG5vaW5saW5lIHZvaWQgcHJlZW1wdF9yZXNldChz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29uc3QgdW5zaWduZWQgaW50IGJp
dCA9IEk5MTVfUkVTRVRfRU5HSU5FICsgZW5naW5lLT5pZDsKKwl1bnNpZ25lZCBsb25nICpsb2Nr
ID0gJmVuZ2luZS0+Z3QtPnJlc2V0LmZsYWdzOworCisJaWYgKGk5MTVfbW9kcGFyYW1zLnJlc2V0
IDwgMykKKwkJcmV0dXJuOworCisJaWYgKHRlc3RfYW5kX3NldF9iaXQoYml0LCBsb2NrKSkKKwkJ
cmV0dXJuOworCisJLyogTWFyayB0aGlzIHRhc2tsZXQgYXMgZGlzYWJsZWQgdG8gYXZvaWQgd2Fp
dGluZyBmb3IgaXQgdG8gY29tcGxldGUgKi8KKwl0YXNrbGV0X2Rpc2FibGVfbm9zeW5jKCZlbmdp
bmUtPmV4ZWNsaXN0cy50YXNrbGV0KTsKKworCUdFTV9UUkFDRSgiJXM6IHByZWVtcHQgdGltZW91
dCAlbHUrJXVtc1xuIiwKKwkJICBlbmdpbmUtPm5hbWUsCisJCSAgZW5naW5lLT5wcm9wcy5wcmVl
bXB0X3RpbWVvdXQsCisJCSAgamlmZmllc190b19tc2VjcyhqaWZmaWVzIC0gZW5naW5lLT5leGVj
bGlzdHMucHJlZW1wdC5leHBpcmVzKSk7CisJaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgInBy
ZWVtcHRpb24gdGltZSBvdXQiKTsKKworCXRhc2tsZXRfZW5hYmxlKCZlbmdpbmUtPmV4ZWNsaXN0
cy50YXNrbGV0KTsKKwljbGVhcl9hbmRfd2FrZV91cF9iaXQoYml0LCBsb2NrKTsKK30KKworc3Rh
dGljIGJvb2wgcHJlZW1wdF90aW1lb3V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmNvbnN0IGVu
Z2luZSkKK3sKKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQpCisJCXJldHVy
biBmYWxzZTsKKworCWlmICghaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0aW9uKGVuZ2luZSkpCisJ
CXJldHVybiBmYWxzZTsKKworCXJldHVybiAhdGltZXJfcGVuZGluZygmZW5naW5lLT5leGVjbGlz
dHMucHJlZW1wdCkgJiYKKwkJUkVBRF9PTkNFKGVuZ2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0p
OworfQorCiAvKgogICogQ2hlY2sgdGhlIHVucmVhZCBDb250ZXh0IFN0YXR1cyBCdWZmZXJzIGFu
ZCBtYW5hZ2UgdGhlIHN1Ym1pc3Npb24gb2YgbmV3CiAgKiBjb250ZXh0cyB0byB0aGUgRUxTUCBh
Y2NvcmRpbmdseS4KQEAgLTE5OTIsMjMgKzIwNTMsMzkgQEAgc3RhdGljIHZvaWQgX19leGVjbGlz
dHNfc3VibWlzc2lvbl90YXNrbGV0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmNvbnN0IGVuZ2lu
ZSkKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQodW5zaWduZWQgbG9u
ZyBkYXRhKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUgPSAoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqKWRhdGE7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKKwlib29s
IHRpbWVvdXQgPSBwcmVlbXB0X3RpbWVvdXQoZW5naW5lKTsKIAogCXByb2Nlc3NfY3NiKGVuZ2lu
ZSk7Ci0JaWYgKCFSRUFEX09OQ0UoZW5naW5lLT5leGVjbGlzdHMucGVuZGluZ1swXSkpIHsKKwlp
ZiAoIVJFQURfT05DRShlbmdpbmUtPmV4ZWNsaXN0cy5wZW5kaW5nWzBdKSB8fCB0aW1lb3V0KSB7
CisJCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKIAkJc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+
YWN0aXZlLmxvY2ssIGZsYWdzKTsKIAkJX19leGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KGVu
Z2luZSk7CiAJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZs
YWdzKTsKKworCQkvKiBSZWNoZWNrIGFmdGVyIHNlcmlhbGlzaW5nIHdpdGggZGlyZWN0LXN1Ym1p
c3Npb24gKi8KKwkJaWYgKHRpbWVvdXQgJiYgcHJlZW1wdF90aW1lb3V0KGVuZ2luZSkpCisJCQlw
cmVlbXB0X3Jlc2V0KGVuZ2luZSk7CiAJfQogfQogCi1zdGF0aWMgdm9pZCBleGVjbGlzdHNfc3Vi
bWlzc2lvbl90aW1lcihzdHJ1Y3QgdGltZXJfbGlzdCAqdGltZXIpCitzdGF0aWMgdm9pZCBfX2V4
ZWNsaXN0c19raWNrKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiB7
Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0KLQkJZnJvbV90aW1lcihlbmdpbmUs
IHRpbWVyLCBleGVjbGlzdHMudGltZXIpOwotCiAJLyogS2ljayB0aGUgdGFza2xldCBmb3Igc29t
ZSBpbnRlcnJ1cHQgY29hbGVzY2luZyBhbmQgcmVzZXQgaGFuZGxpbmcgKi8KLQl0YXNrbGV0X2hp
X3NjaGVkdWxlKCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0KTsKKwl0YXNrbGV0X2hpX3NjaGVk
dWxlKCZleGVjbGlzdHMtPnRhc2tsZXQpOworfQorCisjZGVmaW5lIGV4ZWNsaXN0c19raWNrKHQs
IG1lbWJlcikgXAorCV9fZXhlY2xpc3RzX2tpY2soY29udGFpbmVyX29mKHQsIHN0cnVjdCBpbnRl
bF9lbmdpbmVfZXhlY2xpc3RzLCBtZW1iZXIpKQorCitzdGF0aWMgdm9pZCBleGVjbGlzdHNfdGlt
ZXNsaWNlKHN0cnVjdCB0aW1lcl9saXN0ICp0aW1lcikKK3sKKwlleGVjbGlzdHNfa2ljayh0aW1l
ciwgdGltZXIpOworfQorCitzdGF0aWMgdm9pZCBleGVjbGlzdHNfcHJlZW1wdChzdHJ1Y3QgdGlt
ZXJfbGlzdCAqdGltZXIpCit7CisJZXhlY2xpc3RzX2tpY2sodGltZXIsIHByZWVtcHQpOwogfQog
CiBzdGF0aWMgdm9pZCBxdWV1ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwKQEAgLTM0MjUsNiArMzUwMiw3IEBAIGdlbjEyX2VtaXRfZmluaV9icmVhZGNydW1iX3Jjcyhz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNzKQogc3RhdGljIHZvaWQgZXhlY2xp
c3RzX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCWRlbF90aW1lcigm
ZW5naW5lLT5leGVjbGlzdHMudGltZXIpOworCWRlbF90aW1lcigmZW5naW5lLT5leGVjbGlzdHMu
cHJlZW1wdCk7CiB9CiAKIHZvaWQgaW50ZWxfZXhlY2xpc3RzX3NldF9kZWZhdWx0X3N1Ym1pc3Np
b24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQpAQCAtMzU0Miw3ICszNjIwLDggQEAg
aW50IGludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKIHsKIAl0YXNrbGV0X2luaXQoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQs
CiAJCSAgICAgZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldCwgKHVuc2lnbmVkIGxvbmcpZW5n
aW5lKTsKLQl0aW1lcl9zZXR1cCgmZW5naW5lLT5leGVjbGlzdHMudGltZXIsIGV4ZWNsaXN0c19z
dWJtaXNzaW9uX3RpbWVyLCAwKTsKKwl0aW1lcl9zZXR1cCgmZW5naW5lLT5leGVjbGlzdHMudGlt
ZXIsIGV4ZWNsaXN0c190aW1lc2xpY2UsIDApOworCXRpbWVyX3NldHVwKCZlbmdpbmUtPmV4ZWNs
aXN0cy5wcmVlbXB0LCBleGVjbGlzdHNfcHJlZW1wdCwgMCk7CiAKIAlsb2dpY2FsX3JpbmdfZGVm
YXVsdF92ZnVuY3MoZW5naW5lKTsKIAlsb2dpY2FsX3JpbmdfZGVmYXVsdF9pcnFzKGVuZ2luZSk7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BhcmFtcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJhbXMuaAppbmRleCBkMjlhZGUzYjdkZTYuLjU2MDU4OTc4
YmIyNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJhbXMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BhcmFtcy5oCkBAIC02MSw3ICs2MSw3IEBAIHN0
cnVjdCBkcm1fcHJpbnRlcjsKIAlwYXJhbShjaGFyICosIGRtY19maXJtd2FyZV9wYXRoLCBOVUxM
KSBcCiAJcGFyYW0oaW50LCBtbWlvX2RlYnVnLCAtSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVf
REVCVUdfTU1JTykpIFwKIAlwYXJhbShpbnQsIGVkcF92c3dpbmcsIDApIFwKLQlwYXJhbShpbnQs
IHJlc2V0LCAyKSBcCisJcGFyYW0oaW50LCByZXNldCwgMykgXAogCXBhcmFtKHVuc2lnbmVkIGlu
dCwgaW5qZWN0X2xvYWRfZmFpbHVyZSwgMCkgXAogCXBhcmFtKGludCwgZmFzdGJvb3QsIC0xKSBc
CiAJcGFyYW0oaW50LCBlbmFibGVfZHBjZF9iYWNrbGlnaHQsIDApIFwKLS0gCjIuMjMuMAoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A894C347BB
	for <lists+intel-gfx@lfdr.de>; Tue,  4 Jun 2019 15:11:57 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0E9998984D;
	Tue,  4 Jun 2019 13:11:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 28DE489852
 for <intel-gfx@lists.freedesktop.org>; Tue,  4 Jun 2019 13:11:54 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Jun 2019 06:11:54 -0700
X-ExtLoop1: 1
Received: from bblokx-mobl.ger.corp.intel.com (HELO delly.ger.corp.intel.com)
 ([10.249.139.199])
 by FMSMGA003.fm.intel.com with ESMTP; 04 Jun 2019 06:11:52 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  4 Jun 2019 16:11:38 +0300
Message-Id: <20190604131140.12647-6-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.21.0.392.gf8f6787159e
In-Reply-To: <20190604131140.12647-1-lionel.g.landwerlin@intel.com>
References: <20190604131140.12647-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 5/7] drm/i915: add a new perf configuration
 execbuf parameter
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0aGUgYWJpbGl0eSB0byBkaXNwYXRjaCBhIHNldCBvZiBjb21tYW5kIGJ1ZmZlciB0
byB0aGUKaGFyZHdhcmUsIGVhY2ggd2l0aCBhIGRpZmZlcmVudCBPQSBjb25maWd1cmF0aW9uLiBU
byBhY2hpZXZlIHRoaXMsIHdlCnJldXNlIGEgY291cGxlIG9mIGZpZWxkcyBmcm9tIHRoZSBleGVj
YnVmMiBzdHJ1Y3QgKEkgQ0FOIEhBWgpleGVjYnVmMz8pIHRvIG5vdGlmeSB3aGF0IE9BIGNvbmZp
Z3VyYXRpb24gc2hvdWxkIGJlIHVzZWQgZm9yIGEgYmF0Y2gKYnVmZmVyLiBUaGlzIHJlcXVpcmVz
IHRoZSBwcm9jZXNzIG1ha2luZyB0aGUgZXhlY2J1ZiB3aXRoIHRoaXMgZmxhZyB0bwphbHNvIG93
biB0aGUgcGVyZiBmZCBhdCB0aGUgdGltZSBvZiBleGVjYnVmLgoKdjI6IEFkZCBhIGVtaXRfb2Ff
Y29uZmlnKCkgdmZ1bmMgaW4gdGhlIGludGVsX2VuZ2luZV9jcyAoQ2hyaXMpCiAgICBNb3ZlIG9h
X2NvbmZpZyB2bWEgdG8gYWN0aXZlIChDaHJpcykKCnYzOiBEb24ndCBkcm9wIHRoZSBsb2NrIGZv
ciBlbmdpbmUgbG9va3VwIChDaHJpcykKICAgIE1vdmUgT0EgY29uZmlnIHZtYSB0byBhY3RpdmUg
YmVmb3JlIHdyaXRpbmcgdGhlIHJpbmdidWZmZXIgKENocmlzKQoKU2lnbmVkLW9mZi1ieTogTGlv
bmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgotLS0KIC4uLi9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyAgICB8IDExMCArKysrKysrKysr
KysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oICB8
ICAgNyArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgICAgICAgIHwg
ICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyAgICB8ICAg
NCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAgICAgICAgICAgIHwgICA0
ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAgMSAr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyAgICAgICAgICAgICAgfCAgMTQgKy0t
CiBpbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggICAgICAgICAgICAgICAgICAgfCAgMzcgKysr
KysrCiA4IGZpbGVzIGNoYW5nZWQsIDE2OSBpbnNlcnRpb25zKCspLCA5IGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVy
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4
IDAyZGM1NDgwZThmZS4uNGE3ODU5OTlhOWM1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKQEAgLTI4MCw3ICsyODAsMTEgQEAgc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciB7CiAJc3RydWN0IHsKIAkJdTY0IGZsYWdzOyAvKiogQXZhaWxhYmxlIGV4
dGVuc2lvbnMgcGFyYW1ldGVycyAqLwogCQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNfdGltZWxp
bmVfZmVuY2VzIHRpbWVsaW5lX2ZlbmNlczsKKwkJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVm
ZmVyX3BlcmZfZXh0IHBlcmZfY29uZmlnOwogCX0gZXh0ZW5zaW9uczsKKworCXN0cnVjdCBpOTE1
X29hX2NvbmZpZyAqb2FfY29uZmlnOyAvKiogSFcgY29uZmlndXJhdGlvbiBmb3IgT0EsIE5VTEwg
aXMgbm90IG5lZWRlZC4gKi8KKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2FfYm87CiB9
OwogCiAjZGVmaW5lIGV4ZWNfZW50cnkoRUIsIFZNQSkgKCYoRUIpLT5leGVjWyhWTUEpLT5leGVj
X2ZsYWdzIC0gKEVCKS0+ZmxhZ3NdKQpAQCAtMTE5OCw2ICsxMjAyLDM0IEBAIHN0YXRpYyBpbnQg
cmVsb2NfbW92ZV90b19ncHUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIHN0cnVjdCBpOTE1X3Zt
YSAqdm1hKQogCXJldHVybiBlcnI7CiB9CiAKKworc3RhdGljIGludAorZ2V0X2V4ZWNidWZfb2Ff
Y29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJICAgICAgczMyIHBl
cmZfZmQsIHU2NCBvYV9jb25maWdfaWQsCisJCSAgICAgIHN0cnVjdCBpOTE1X29hX2NvbmZpZyAq
Km91dF9vYV9jb25maWcsCisJCSAgICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoqb3V0
X29hX29iaikKK3sKKwlzdHJ1Y3QgZmlsZSAqcGVyZl9maWxlOworCWludCByZXQ7CisKKwlpZiAo
IWRldl9wcml2LT5wZXJmLm9hLmV4Y2x1c2l2ZV9zdHJlYW0pCisJCXJldHVybiAtRUlOVkFMOwor
CisJcGVyZl9maWxlID0gZmdldChwZXJmX2ZkKTsKKwlpZiAoIXBlcmZfZmlsZSkKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwlpZiAocGVyZl9maWxlLT5wcml2YXRlX2RhdGEgIT0gZGV2X3ByaXYtPnBl
cmYub2EuZXhjbHVzaXZlX3N0cmVhbSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlmcHV0KHBlcmZf
ZmlsZSk7CisKKwlyZXQgPSBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZyhkZXZfcHJpdiwgb2FfY29u
ZmlnX2lkLAorCQkJCSAgICAgIG91dF9vYV9jb25maWcsIG91dF9vYV9vYmopOworCisJcmV0dXJu
IHJldDsKK30KKwogc3RhdGljIGludCBfX3JlbG9jX2dwdV9hbGxvYyhzdHJ1Y3QgaTkxNV9leGVj
YnVmZmVyICplYiwKIAkJCSAgICAgc3RydWN0IGk5MTVfdm1hICp2bWEsCiAJCQkgICAgIHVuc2ln
bmVkIGludCBsZW4pCkBAIC0yMDYwLDYgKzIwOTIsNTEgQEAgYWRkX3RvX2NsaWVudChzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0IGRybV9maWxlICpmaWxlKQogCWxpc3RfYWRkX3RhaWwo
JnJxLT5jbGllbnRfbGluaywgJnJxLT5maWxlX3ByaXYtPm1tLnJlcXVlc3RfbGlzdCk7CiB9CiAK
K3N0YXRpYyBpbnQgZWJfb2FfY29uZmlnKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQorewor
CXN0cnVjdCBpOTE1X3ZtYSAqb2Ffdm1hOworCWludCBlcnI7CisKKwlpZiAoIWViLT5vYV9jb25m
aWcpCisJCXJldHVybiAwOworCisJLyoKKwkgKiBJZiB0aGUgY29uZmlnIGhhc24ndCBjaGFuZ2Vk
LCBza2lwIHJlY29uZmlndXJpbmcgdGhlIEhXICh0aGlzIGlzCisJICogc3ViamVjdCB0byBhIGRl
bGF5IHdlIHdhbnQgdG8gYXZvaWQgaGFzIG11Y2ggYXMgcG9zc2libGUpLgorCSAqLworCWlmIChl
Yi0+b2FfY29uZmlnID09IGViLT5pOTE1LT5wZXJmLm9hLmV4Y2x1c2l2ZV9zdHJlYW0tPm9hX2Nv
bmZpZykKKwkJcmV0dXJuIDA7CisKKwlvYV92bWEgPSBpOTE1X3ZtYV9pbnN0YW5jZShlYi0+b2Ff
Ym8sCisJCQkJICAgJmViLT5lbmdpbmUtPmk5MTUtPmdndHQudm0sIE5VTEwpOworCWlmICh1bmxp
a2VseShJU19FUlIob2Ffdm1hKSkpCisJCXJldHVybiBQVFJfRVJSKG9hX3ZtYSk7CisKKwllcnIg
PSBpOTE1X3ZtYV9waW4ob2Ffdm1hLCAwLCAwLCBQSU5fR0xPQkFMKTsKKwlpZiAoZXJyKQorCQly
ZXR1cm4gZXJyOworCisJZXJyID0gaTkxNV92bWFfbW92ZV90b19hY3RpdmUob2Ffdm1hLCBlYi0+
cmVxdWVzdCwgMCk7CisJaWYgKGVycikgeworCQlpOTE1X3ZtYV91bnBpbihvYV92bWEpOworCQly
ZXR1cm4gZXJyOworCX0KKworCWVyciA9IGViLT5lbmdpbmUtPmVtaXRfYmJfc3RhcnQoZWItPnJl
cXVlc3QsCisJCQkJCW9hX3ZtYS0+bm9kZS5zdGFydCwKKwkJCQkJMCwgSTkxNV9ESVNQQVRDSF9T
RUNVUkUpOworCWlmIChlcnIpIHsKKwkJaTkxNV92bWFfdW5waW4ob2Ffdm1hKTsKKwkJcmV0dXJu
IGVycjsKKwl9CisKKwlpOTE1X3ZtYV91bnBpbihvYV92bWEpOworCisJc3dhcChlYi0+b2FfY29u
ZmlnLCBlYi0+aTkxNS0+cGVyZi5vYS5leGNsdXNpdmVfc3RyZWFtLT5vYV9jb25maWcpOworCisJ
cmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQgZWJfc3VibWl0KHN0cnVjdCBpOTE1X2V4ZWNidWZm
ZXIgKmViKQogewogCWludCBlcnI7CkBAIC0yMDg2LDYgKzIxNjMsMTAgQEAgc3RhdGljIGludCBl
Yl9zdWJtaXQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJCQlyZXR1cm4gZXJyOwogCX0K
IAorCWVyciA9IGViX29hX2NvbmZpZyhlYik7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKwog
CWVyciA9IGViLT5lbmdpbmUtPmVtaXRfYmJfc3RhcnQoZWItPnJlcXVlc3QsCiAJCQkJCWViLT5i
YXRjaC0+bm9kZS5zdGFydCArCiAJCQkJCWViLT5iYXRjaF9zdGFydF9vZmZzZXQsCkBAIC0yNTE5
LDYgKzI2MDAsMTMgQEAgcGFyc2VfZXhlY2J1ZjJfZXh0ZW5zaW9ucyhzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX2V4ZWNidWZmZXIyICphcmdzLAogCQkJCXJldHVybiAtRUZBVUxUOwogCQkJYnJlYWs7CiAK
KwkJY2FzZSBEUk1fSTkxNV9HRU1fQkFTRV9FWEVDQlVGRkVSX1RZUEVfUEVSRjoKKwkJCWlmIChj
b3B5X2Zyb21fdXNlcigmZWItPmV4dGVuc2lvbnMucGVyZl9jb25maWcsCisJCQkJCSAgIHU2NF90
b191c2VyX3B0cihpdGVyX3B0ciksCisJCQkJCSAgIHNpemVvZihlYi0+ZXh0ZW5zaW9ucy5wZXJm
X2NvbmZpZykpKQorCQkJCXJldHVybiAtRUZBVUxUOworCQkJYnJlYWs7CisKIAkJZGVmYXVsdDoK
IAkJCXJldHVybiAtRUlOVkFMOwogCQl9CkBAIC0yNTY3LDYgKzI2NTUsNyBAQCBpOTE1X2dlbV9k
b19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJZWIuYnVmZmVyX2NvdW50ID0g
YXJncy0+YnVmZmVyX2NvdW50OwogCWViLmJhdGNoX3N0YXJ0X29mZnNldCA9IGFyZ3MtPmJhdGNo
X3N0YXJ0X29mZnNldDsKIAllYi5iYXRjaF9sZW4gPSBhcmdzLT5iYXRjaF9sZW47CisJZWIub2Ff
Y29uZmlnID0gTlVMTDsKIAogCWViLmJhdGNoX2ZsYWdzID0gMDsKIAlpZiAoYXJncy0+ZmxhZ3Mg
JiBJOTE1X0VYRUNfU0VDVVJFKSB7CkBAIC0yNjUxLDkgKzI3NDAsMjMgQEAgaTkxNV9nZW1fZG9f
ZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIpKQog
CQlnb3RvIGVycl91bmxvY2s7CiAKKwlpZiAoZWIuZXh0ZW5zaW9ucy5mbGFncyAmIEJJVChEUk1f
STkxNV9HRU1fQkFTRV9FWEVDQlVGRkVSX1RZUEVfUEVSRikpIHsKKwkJaWYgKCFpbnRlbF9lbmdp
bmVfaGFzX29hKGViLmVuZ2luZSkpIHsKKwkJCWVyciA9IC1FTk9ERVY7CisJCQlnb3RvIGVycl9l
bmdpbmU7CisJCX0KKworCQllcnIgPSBnZXRfZXhlY2J1Zl9vYV9jb25maWcoZWIuaTkxNSwKKwkJ
CQkJICAgIGViLmV4dGVuc2lvbnMucGVyZl9jb25maWcucGVyZl9mZCwKKwkJCQkJICAgIGViLmV4
dGVuc2lvbnMucGVyZl9jb25maWcub2FfY29uZmlnLAorCQkJCQkgICAgJmViLm9hX2NvbmZpZywg
JmViLm9hX2JvKTsKKwkJaWYgKGVycikKKwkJCWdvdG8gZXJyX2VuZ2luZTsKKwl9CisKIAllcnIg
PSBlYl93YWl0X2Zvcl9yaW5nKCZlYik7IC8qIG1heSB0ZW1wb3JhcmlseSBkcm9wIHN0cnVjdF9t
dXRleCAqLwogCWlmICh1bmxpa2VseShlcnIpKQotCQlnb3RvIGVycl9lbmdpbmU7CisJCWdvdG8g
ZXJyX29hOwogCiAJZXJyID0gZWJfcmVsb2NhdGUoJmViKTsKIAlpZiAoZXJyKSB7CkBAIC0yODA2
LDYgKzI5MDksMTEgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2LAogZXJyX3ZtYToKIAlpZiAoZWIuZXhlYykKIAkJZWJfcmVsZWFzZV92bWFzKCZlYik7Citl
cnJfb2E6CisJaWYgKGViLm9hX2NvbmZpZykgeworCQlpOTE1X2dlbV9vYmplY3RfcHV0KGViLm9h
X2JvKTsKKwkJaTkxNV9vYV9jb25maWdfcHV0KGViLm9hX2NvbmZpZyk7CisJfQogZXJyX2VuZ2lu
ZToKIAllYl91bnBpbl9jb250ZXh0KCZlYik7CiBlcnJfdW5sb2NrOgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAppbmRleCAwMTIyMzg2NDIzN2EuLjk3YmFk
YjE4NWViMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVz
LmgKQEAgLTQ1Nyw2ICs0NTcsNyBAQCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzIHsKICNkZWZpbmUg
STkxNV9FTkdJTkVfSEFTX1NFTUFQSE9SRVMgICBCSVQoMykKICNkZWZpbmUgSTkxNV9FTkdJTkVf
TkVFRFNfQlJFQURDUlVNQl9UQVNLTEVUIEJJVCg0KQogI2RlZmluZSBJOTE1X0VOR0lORV9JU19W
SVJUVUFMICAgICAgIEJJVCg1KQorI2RlZmluZSBJOTE1X0VOR0lORV9IQVNfT0EgICAgICAgICAg
IEJJVCg2KQogCXVuc2lnbmVkIGludCBmbGFnczsKIAogCS8qCkBAIC01NTIsNiArNTUzLDEyIEBA
IGludGVsX2VuZ2luZV9pc192aXJ0dWFsKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKIAlyZXR1cm4gZW5naW5lLT5mbGFncyAmIEk5MTVfRU5HSU5FX0lTX1ZJUlRVQUw7CiB9
CiAKK3N0YXRpYyBpbmxpbmUgYm9vbAoraW50ZWxfZW5naW5lX2hhc19vYShjb25zdCBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1
X0VOR0lORV9IQVNfT0E7Cit9CisKICNkZWZpbmUgaW5zdGRvbmVfc2xpY2VfbWFzayhkZXZfcHJp
dl9fKSBcCiAJKElTX0dFTihkZXZfcHJpdl9fLCA3KSA/IFwKIAkgMSA6IFJVTlRJTUVfSU5GTyhk
ZXZfcHJpdl9fKS0+c3NldS5zbGljZV9tYXNrKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMu
YwppbmRleCBmZWQ3MDQ4MDJjNTcuLmVkMTlmNGU1M2QzMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjLmMKQEAgLTI3MzIsNiArMjczMiw3IEBAIGludCBpbnRlbF9leGVjbGlzdHNfc3Vi
bWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWVuZ2luZS0+
aW5pdF9jb250ZXh0ID0gZ2VuOF9pbml0X3Jjc19jb250ZXh0OwogCQllbmdpbmUtPmVtaXRfZmx1
c2ggPSBnZW44X2VtaXRfZmx1c2hfcmVuZGVyOwogCQllbmdpbmUtPmVtaXRfZmluaV9icmVhZGNy
dW1iID0gZ2VuOF9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9yY3M7CisJCWVuZ2luZS0+ZmxhZ3MgfD0g
STkxNV9FTkdJTkVfSEFTX09BOwogCX0KIAogCXJldHVybiAwOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jCmluZGV4IGZmNThkNjU4ZTNlMi4uOTcyMTkzY2ZiZjQx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jCkBAIC0yMjEy
LDggKzIyMTIsMTAgQEAgc3RhdGljIHZvaWQgc2V0dXBfcmNzKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKIAkJZW5naW5lLT5pcnFfZW5hYmxlX21hc2sgPSBJOTE1X1VTRVJfSU5URVJS
VVBUOwogCX0KIAotCWlmIChJU19IQVNXRUxMKGk5MTUpKQorCWlmIChJU19IQVNXRUxMKGk5MTUp
KSB7CiAJCWVuZ2luZS0+ZW1pdF9iYl9zdGFydCA9IGhzd19lbWl0X2JiX3N0YXJ0OworCQllbmdp
bmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19PQTsKKwl9CiAKIAllbmdpbmUtPnJlc3VtZSA9
IHJjc19yZXN1bWU7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCBhODcyNzkxZjk4YmQu
Ljc1MDI5ZDFhMzgwMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC00NzgsNiArNDc4LDEw
IEBAIHN0YXRpYyBpbnQgaTkxNV9nZXRwYXJhbV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB2b2lkICpkYXRhLAogCWNhc2UgSTkxNV9QQVJBTV9QRVJGX1JFVklTSU9OOgogCQl2YWx1ZSA9
IDE7CiAJCWJyZWFrOworCWNhc2UgSTkxNV9QQVJBTV9IQVNfRVhFQ19QRVJGX0NPTkZJRzoKKwkJ
LyogT2J2aW91c2x5IHJlcXVpcmVzIHBlcmYgc3VwcG9ydC4gKi8KKwkJdmFsdWUgPSBkZXZfcHJp
di0+cGVyZi5pbml0aWFsaXplZDsKKwkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJRFJNX0RFQlVHKCJV
bmtub3duIHBhcmFtZXRlciAlZFxuIiwgcGFyYW0tPnBhcmFtKTsKIAkJcmV0dXJuIC1FSU5WQUw7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCBmMWU1MTMwNzI1M2EuLmFlZmRhZTg1NmU3NyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0yODMzLDYgKzI4MzMsNyBAQCBpbnQgaTkxNV9w
ZXJmX2dldF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCQkgICAg
aW50IG1ldHJpY3Nfc2V0LAogCQkJICAgIHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqKm91dF9jb25m
aWcsCiAJCQkgICAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKipvdXRfb2JqKTsKK3ZvaWQg
aTkxNV9vYV9jb25maWdfcHV0KHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnKTsKIAog
LyogaTkxNV9nZW1fZXZpY3QuYyAqLwogaW50IF9fbXVzdF9jaGVjayBpOTE1X2dlbV9ldmljdF9z
b21ldGhpbmcoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cGVyZi5jCmluZGV4IGUwMDcxZTQ0ZGUzZC4uODJhMjgyZjY2OGMwIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3BlcmYuYwpAQCAtMzY2LDcgKzM2Niw3IEBAIHN0cnVjdCBwZXJmX29wZW5fcHJvcGVydGll
cyB7CiAJaW50IG9hX3BlcmlvZF9leHBvbmVudDsKIH07CiAKLXN0YXRpYyB2b2lkIHB1dF9vYV9j
b25maWcoc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCit2b2lkIGk5MTVfb2FfY29u
ZmlnX3B1dChzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZykKIHsKIAlpZiAoIWF0b21p
Y19kZWNfYW5kX3Rlc3QoJm9hX2NvbmZpZy0+cmVmX2NvdW50KSkKIAkJcmV0dXJuOwpAQCAtNTAw
LDcgKzUwMCw3IEBAIGludCBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKIAogZXJyX2J1Zl9hbGxvYzoKIAlpZiAob3V0X2NvbmZpZykgewotCQlw
dXRfb2FfY29uZmlnKG9hX2NvbmZpZyk7CisJCWk5MTVfb2FfY29uZmlnX3B1dChvYV9jb25maWcp
OwogCQkqb3V0X2NvbmZpZyA9IE5VTEw7CiAJfQogdW5sb2NrOgpAQCAtMTQ3NSw3ICsxNDc1LDcg
QEAgc3RhdGljIHZvaWQgaTkxNV9vYV9zdHJlYW1fZGVzdHJveShzdHJ1Y3QgaTkxNV9wZXJmX3N0
cmVhbSAqc3RyZWFtKQogCWlmIChzdHJlYW0tPmN0eCkKIAkJb2FfcHV0X3JlbmRlcl9jdHhfaWQo
c3RyZWFtKTsKIAotCXB1dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOworCWk5MTVfb2Ff
Y29uZmlnX3B1dChzdHJlYW0tPm9hX2NvbmZpZyk7CiAKIAlpZiAoZGV2X3ByaXYtPnBlcmYub2Eu
c3B1cmlvdXNfcmVwb3J0X3JzLm1pc3NlZCkgewogCQlEUk1fTk9URSgiJWQgc3B1cmlvdXMgT0Eg
cmVwb3J0IG5vdGljZXMgc3VwcHJlc3NlZCBkdWUgdG8gcmF0ZWxpbWl0aW5nXG4iLApAQCAtMjI0
Myw3ICsyMjQzLDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1
X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJZnJlZV9vYV9idWZmZXIoZGV2X3ByaXYpOwogCiBlcnJf
b2FfYnVmX2FsbG9jOgotCXB1dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOworCWk5MTVf
b2FfY29uZmlnX3B1dChzdHJlYW0tPm9hX2NvbmZpZyk7CiAKIAlpbnRlbF91bmNvcmVfZm9yY2V3
YWtlX3B1dCgmZGV2X3ByaXYtPnVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7CiAJaW50ZWxfcnVudGlt
ZV9wbV9wdXQoZGV2X3ByaXYsIHN0cmVhbS0+d2FrZXJlZik7CkBAIC0zNDA2LDcgKzM0MDYsNyBA
QCBpbnQgaTkxNV9wZXJmX2FkZF9jb25maWdfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
dm9pZCAqZGF0YSwKIHN5c2ZzX2VycjoKIAltdXRleF91bmxvY2soJmRldl9wcml2LT5wZXJmLm1l
dHJpY3NfbG9jayk7CiByZWdfZXJyOgotCXB1dF9vYV9jb25maWcob2FfY29uZmlnKTsKKwlpOTE1
X29hX2NvbmZpZ19wdXQob2FfY29uZmlnKTsKIAlEUk1fREVCVUcoIkZhaWxlZCB0byBhZGQgbmV3
IE9BIGNvbmZpZ1xuIik7CiAJcmV0dXJuIGVycjsKIH0KQEAgLTM0NjAsNyArMzQ2MCw3IEBAIGlu
dCBpOTE1X3BlcmZfcmVtb3ZlX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2
b2lkICpkYXRhLAogCiAJRFJNX0RFQlVHKCJSZW1vdmVkIGNvbmZpZyAlcyBpZD0laVxuIiwgb2Ff
Y29uZmlnLT51dWlkLCBvYV9jb25maWctPmlkKTsKIAotCXB1dF9vYV9jb25maWcob2FfY29uZmln
KTsKKwlpOTE1X29hX2NvbmZpZ19wdXQob2FfY29uZmlnKTsKIAogY29uZmlnX2VycjoKIAltdXRl
eF91bmxvY2soJmRldl9wcml2LT5wZXJmLm1ldHJpY3NfbG9jayk7CkBAIC0zNjIyLDcgKzM2MjIs
NyBAQCBzdGF0aWMgaW50IGRlc3Ryb3lfY29uZmlnKGludCBpZCwgdm9pZCAqcCwgdm9pZCAqZGF0
YSkKIHsKIAlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZyA9IHA7CiAKLQlwdXRfb2Ff
Y29uZmlnKG9hX2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KG9hX2NvbmZpZyk7CiAKIAly
ZXR1cm4gMDsKIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaCBiL2lu
Y2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAppbmRleCBiYTFiMDI4NTkzNDYuLjdmNzcwMTgzZWUz
MSAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCisrKyBiL2luY2x1ZGUv
dWFwaS9kcm0vaTkxNV9kcm0uaApAQCAtNjIzLDYgKzYyMywxNiBAQCB0eXBlZGVmIHN0cnVjdCBk
cm1faTkxNV9pcnFfd2FpdCB7CiAgKi8KICNkZWZpbmUgSTkxNV9QQVJBTV9IQVNfRVhFQ19USU1F
TElORV9GRU5DRVMgNTUKIAorLyoKKyAqIFJlcXVlc3QgYW4gT0EgcGVyZm9ybWFuY2UgY29uZmln
dXJhdGlvbiBjaGFuZ2UgYmVmb3JlIHJ1bm5pbmcgdGhlIGNvbW1hbmRzCisgKiBnaXZlbiBpbiBh
biBleGVjYnVmLgorICoKKyAqIFBlcmZvcm1hbmNlIGNvbmZpZ3VyYXRpb24gSUQgaXMgZ2l2ZW4g
aW4gdGhlIERSNCBmaWVsZCBvZgorICogZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXIyIGFuZCB0aGUg
ZmlsZSBkZXNjcmlwdG9yIG9mIHRoZSBpOTE1IHBlcmYgc3RyZWFtIGlzCisgKiBnaXZlbiBpbiBE
UjEuIEV4ZWNidWZmZXIgd2lsbCBmYWlsIGlmIGFueSBvZiB0aGVzZSBwYXJhbWV0ZXIgaXMgaW52
YWxpZC4KKyAqLworI2RlZmluZSBJOTE1X1BBUkFNX0hBU19FWEVDX1BFUkZfQ09ORklHIDU2CisK
IC8qIE11c3QgYmUga2VwdCBjb21wYWN0IC0tIG5vIGhvbGVzIGFuZCB3ZWxsIGRvY3VtZW50ZWQg
Ki8KIAogdHlwZWRlZiBzdHJ1Y3QgZHJtX2k5MTVfZ2V0cGFyYW0gewpAQCAtMTAyNiw2ICsxMDM2
LDEyIEBAIGVudW0gZHJtX2k5MTVfZ2VtX2Jhc2VfZXhlY2J1ZmZlcl90eXBlIHsKIAkgKi8KIAlE
Uk1fSTkxNV9HRU1fQkFTRV9FWEVDQlVGRkVSX1RZUEVfVElNRUxJTkVfRkVOQ0VTLAogCisJLyoq
CisJICogVGhpcyBpZGVudGlmaWVyIGlzIGFzc29jaWF0ZWQgd2l0aAorCSAqIGRybV9pOTE1X2dl
bV9leGVjYnVmZmVyX3BlcmZfZXh0LgorCSAqLworCURSTV9JOTE1X0dFTV9CQVNFX0VYRUNCVUZG
RVJfVFlQRV9QRVJGLAorCiAJRFJNX0k5MTVfR0VNX0JBU0VfRVhFQ0JVRkZFUl9UWVBFX01BWCAv
KiBub24tQUJJICovCiB9OwogCkBAIC0xMDczLDYgKzEwODksMjcgQEAgc3RydWN0IGRybV9pOTE1
X2dlbV9leGVjX3RpbWVsaW5lX2ZlbmNlcyB7CiAJX191NjQgdmFsdWVzX3B0cjsKIH07CiAKK3N0
cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9wZXJmX2V4dCB7CisJc3RydWN0IGRybV9pOTE1
X2dlbV9iYXNlX2V4ZWNidWZmZXJfZXh0IGJhc2U7CisKKwkvKioKKwkgKiBQZXJmb3JtYW5jZSBm
aWxlIGRlc2NyaXB0b3IgcmV0dXJuZWQgYnkgRFJNX0lPQ1RMX0k5MTVfUEVSRl9PUEVOLgorCSAq
IFRoaXMgaXMgdXNlZCB0byBpZGVudGlmeSB0aGF0IHRoZSBhcHBsaWNhdGlvbgorCSAqLworCV9f
czMyIHBlcmZfZmQ7CisKKwkvKioKKwkgKiBVbnVzZWQgZm9yIG5vdy4gTXVzdCBiZSBjbGVhcmVk
IHRvIHplcm8uCisJICovCisJX191MzIgcGFkOworCisJLyoqCisJICogT0EgY29uZmlndXJhdGlv
biBJRCB0byBzd2l0Y2ggdG8gYmVmb3JlIGV4ZWN1dGluZyB0aGUgY29tbWFuZHMKKwkgKiBhc3Nv
Y2lhdGVkIHRvIHRoZSBleGVjYnVmLgorCSAqLworCV9fdTY0IG9hX2NvbmZpZzsKK307CisKIHN0
cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgewogCS8qKgogCSAqIExpc3Qgb2YgZ2VtX2V4
ZWNfb2JqZWN0MiBzdHJ1Y3RzCi0tIAoyLjIxLjAuMzkyLmdmOGY2Nzg3MTU5ZQoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcg
bGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 30C1DE9988
	for <lists+intel-gfx@lfdr.de>; Wed, 30 Oct 2019 10:53:44 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8DB1E6E90A;
	Wed, 30 Oct 2019 09:53:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2009B6E90A
 for <intel-gfx@lists.freedesktop.org>; Wed, 30 Oct 2019 09:53:38 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19016531-1500050 
 for multiple; Wed, 30 Oct 2019 09:53:29 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 30 Oct 2019 09:53:25 +0000
Message-Id: <20191030095327.23359-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/3] drm/i915: Drop GEM context as a direct link
 from i915_request
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

S2VlcCB0aGUgaW50ZWxfY29udGV4dCBhcyBiZWluZyB0aGUgcHJpbWFyeSBzdGF0ZSBmb3IgaTkx
NV9yZXF1ZXN0LCB3aXRoCnRoZSBHRU0gY29udGV4dCBhIGJhY2twb2ludGVyIGZyb20gdGhlIGxv
dyBsZXZlbCBzdGF0ZSBmb3IgdGhlIHJhcmVyCmNhc2VzIHdlIG5lZWQgY2xpZW50IGluZm9ybWF0
aW9uLiBPdXIgZ29hbCBpcyB0byByZW1vdmUgc3VjaCByZWZlcmVuY2VzCnRvIGNsaWVudHMgZnJv
bSB0aGUgYmFja2VuZCwgYW5kIGxlYXZlIHRoZSBIVyBzdWJtaXNzaW9uIGFnbm9zdGljIHRvCmNs
aWVudCBpbnRlcmZhY2VzIGFuZCBzZWxmLWNvbnRhaW5lZC4KClNpZ25lZC1vZmYtYnk6IENocmlz
IFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgICB8IDE1ICsrKy0tLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmggICB8IDM4IC0tLS0tLS0tLS0tLS0tLS0KIC4u
Li9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaCB8ICA3ICstLQogLi4u
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jICAgIHwgIDggKystLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYyAgIHwgIDQgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYyAgICAgICB8ICAyICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmggICAgICAgfCA0MiArKysrKysrKysrKysr
KysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaCB8ICA1
ICsrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAgIHwgIDYg
Ky0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICAgfCA0NCAr
KysrKysrKystLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5j
ICAgICAgICAgfCAzOCArKysrKysrKystLS0tLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2d0L2ludGVs
X3Jpbmdfc3VibWlzc2lvbi5jICAgfCAxMCArKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
c2VsZnRlc3RfbHJjLmMgICAgICAgIHwgMjAgKysrKy0tLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2d0
L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMgfCAgNiArLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d2dC9zY2hlZHVsZXIuYyAgICAgICAgICB8IDI3ICsrKysrLS0tLS0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgICAgIHwgIDYgKy0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jICAgICAgICAgfCAxMSArKystLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9wZXJmLmMgICAgICAgICAgICAgIHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8IDE4ICsrKystLS0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCAgICAgICAgICAgfCAgMyArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyAgICAgICAgIHwgIDIgKy0KIDIxIGZpbGVzIGNoYW5n
ZWQsIDE2MCBpbnNlcnRpb25zKCspLCAxNTYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKaW5kZXggY2JkZjJmYjMyNjM2Li40MTJkNmM3
OTQ5YjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250
ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwpA
QCAtNjksNiArNjksNyBAQAogCiAjaW5jbHVkZSA8ZHJtL2k5MTVfZHJtLmg+CiAKKyNpbmNsdWRl
ICJndC9pbnRlbF9jb250ZXh0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVh
dC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV91c2VyLmgiCiAjaW5jbHVkZSAiZ3QvaW50
ZWxfbHJjX3JlZy5oIgpAQCAtMzY1LDE1ICszNjYsNiBAQCBzdGF0aWMgdm9pZCBraWxsX2NvbnRl
eHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5l
c19pdGVyIGl0OwogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAotCS8qCi0JICogSWYgd2Ug
YXJlIGFscmVhZHkgYmFubmVkLCBpdCB3YXMgZHVlIHRvIGEgZ3VpbHR5IHJlcXVlc3QgY2F1c2lu
ZwotCSAqIGEgcmVzZXQgYW5kIHRoZSBlbnRpcmUgY29udGV4dCBiZWluZyBldmljdGVkIGZyb20g
dGhlIEdQVS4KLQkgKi8KLQlpZiAoaTkxNV9nZW1fY29udGV4dF9pc19iYW5uZWQoY3R4KSkKLQkJ
cmV0dXJuOwotCi0JaTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmVkKGN0eCk7Ci0KIAkvKgogCSAq
IE1hcCB0aGUgdXNlcidzIGVuZ2luZSBiYWNrIHRvIHRoZSBhY3R1YWwgZW5naW5lczsgb25lIHZp
cnR1YWwKIAkgKiBlbmdpbmUgd2lsbCBiZSBtYXBwZWQgdG8gbXVsdGlwbGUgZW5naW5lcywgYW5k
IHVzaW5nIGN0eC0+ZW5naW5lW10KQEAgLTM4NSw2ICszNzcsOSBAQCBzdGF0aWMgdm9pZCBraWxs
X2NvbnRleHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAkJc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lOwogCQlzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZTsKIAorCQlpZiAoIWlu
dGVsX2NvbnRleHRfc2V0X2Jhbm5lZChjZSkpCisJCQljb250aW51ZTsKKwogCQlpZiAoIWNlLT50
aW1lbGluZSkKIAkJCWNvbnRpbnVlOwogCkBAIC0xMDI2LDcgKzEwMjEsNyBAQCBzdGF0aWMgdm9p
ZCBzZXRfcHBndHRfYmFycmllcih2b2lkICpkYXRhKQogCiBzdGF0aWMgaW50IGVtaXRfcHBndHRf
dXBkYXRlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB2b2lkICpkYXRhKQogewotCXN0cnVjdCBp
OTE1X2FkZHJlc3Nfc3BhY2UgKnZtID0gcnEtPmh3X2NvbnRleHQtPnZtOworCXN0cnVjdCBpOTE1
X2FkZHJlc3Nfc3BhY2UgKnZtID0gcnEtPmNvbnRleHQtPnZtOwogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSA9IHJxLT5lbmdpbmU7CiAJdTMyIGJhc2UgPSBlbmdpbmUtPm1taW9fYmFz
ZTsKIAl1MzIgKmNzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX2NvbnRleHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0
LmgKaW5kZXggMThlNTBhNzY5YTZlLi42OTkzMjg5OTgwM2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaApAQCAtOTEsMjYgKzkxLDYgQEAgc3RhdGljIGlu
bGluZSB2b2lkIGk5MTVfZ2VtX2NvbnRleHRfY2xlYXJfcGVyc2lzdGVuY2Uoc3RydWN0IGk5MTVf
Z2VtX2NvbnRleHQgKmMKIAljbGVhcl9iaXQoVUNPTlRFWFRfUEVSU0lTVEVOQ0UsICZjdHgtPnVz
ZXJfZmxhZ3MpOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgaTkxNV9nZW1fY29udGV4dF9pc19i
YW5uZWQoY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVz
dF9iaXQoQ09OVEVYVF9CQU5ORUQsICZjdHgtPmZsYWdzKTsKLX0KLQotc3RhdGljIGlubGluZSB2
b2lkIGk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Y3R4KQotewotCXNldF9iaXQoQ09OVEVYVF9CQU5ORUQsICZjdHgtPmZsYWdzKTsKLX0KLQotc3Rh
dGljIGlubGluZSBib29sIGk5MTVfZ2VtX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24o
Y29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVzdF9iaXQo
Q09OVEVYVF9GT1JDRV9TSU5HTEVfU1VCTUlTU0lPTiwgJmN0eC0+ZmxhZ3MpOwotfQotCi1zdGF0
aWMgaW5saW5lIHZvaWQgaTkxNV9nZW1fY29udGV4dF9zZXRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Np
b24oc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlfX3NldF9iaXQoQ09OVEVYVF9G
T1JDRV9TSU5HTEVfU1VCTUlTU0lPTiwgJmN0eC0+ZmxhZ3MpOwotfQotCiBzdGF0aWMgaW5saW5l
IGJvb2wKIGk5MTVfZ2VtX2NvbnRleHRfdXNlcl9lbmdpbmVzKGNvbnN0IHN0cnVjdCBpOTE1X2dl
bV9jb250ZXh0ICpjdHgpCiB7CkBAIC0xMjksMjQgKzEwOSw2IEBAIGk5MTVfZ2VtX2NvbnRleHRf
Y2xlYXJfdXNlcl9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCiAJY2xlYXJf
Yml0KENPTlRFWFRfVVNFUl9FTkdJTkVTLCAmY3R4LT5mbGFncyk7CiB9CiAKLXN0YXRpYyBpbmxp
bmUgYm9vbAotaTkxNV9nZW1fY29udGV4dF9ub3ByZWVtcHQoY29uc3Qgc3RydWN0IGk5MTVfZ2Vt
X2NvbnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVzdF9iaXQoQ09OVEVYVF9OT1BSRUVNUFQsICZj
dHgtPmZsYWdzKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lkCi1pOTE1X2dlbV9jb250ZXh0X3Nl
dF9ub3ByZWVtcHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlzZXRfYml0KENP
TlRFWFRfTk9QUkVFTVBULCAmY3R4LT5mbGFncyk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgdm9pZAot
aTkxNV9nZW1fY29udGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCkKLXsKLQljbGVhcl9iaXQoQ09OVEVYVF9OT1BSRUVNUFQsICZjdHgtPmZsYWdzKTsKLX0K
LQogc3RhdGljIGlubGluZSBib29sIGk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKHN0cnVjdCBp
OTE1X2dlbV9jb250ZXh0ICpjdHgpCiB7CiAJcmV0dXJuICFjdHgtPmZpbGVfcHJpdjsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCmluZGV4
IDg2MWQ3ZDkyZmU5Zi4uMzk2MjhjZmY4ZjA2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKQEAgLTE0MywxMSArMTQzLDggQEAgc3Ry
dWN0IGk5MTVfZ2VtX2NvbnRleHQgewogCSAqIEBmbGFnczogc21hbGwgc2V0IG9mIGJvb2xlYW5z
CiAJICovCiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLSNkZWZpbmUgQ09OVEVYVF9CQU5ORUQJCQkw
Ci0jZGVmaW5lIENPTlRFWFRfQ0xPU0VECQkJMQotI2RlZmluZSBDT05URVhUX0ZPUkNFX1NJTkdM
RV9TVUJNSVNTSU9OCTIKLSNkZWZpbmUgQ09OVEVYVF9VU0VSX0VOR0lORVMJCTMKLSNkZWZpbmUg
Q09OVEVYVF9OT1BSRUVNUFQJCTQKKyNkZWZpbmUgQ09OVEVYVF9DTE9TRUQJCQkwCisjZGVmaW5l
IENPTlRFWFRfVVNFUl9FTkdJTkVTCQkxCiAKIAlzdHJ1Y3QgbXV0ZXggbXV0ZXg7CiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IGU0ZjVj
MjY5MTUwYS4uNmRjODZjMTI5ZWVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9leGVjYnVmZmVyLmMKQEAgLTc0Niw5ICs3NDYsNiBAQCBzdGF0aWMgaW50IGViX2xv
b2t1cF92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCXVuc2lnbmVkIGludCBpLCBi
YXRjaDsKIAlpbnQgZXJyOwogCi0JaWYgKHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFu
bmVkKGViLT5nZW1fY29udGV4dCkpKQotCQlyZXR1cm4gLUVJTzsKLQogCUlOSVRfTElTVF9IRUFE
KCZlYi0+cmVsb2NzKTsKIAlJTklUX0xJU1RfSEVBRCgmZWItPnVuYm91bmQpOwogCkBAIC0yMDc4
LDcgKzIwNzUsNyBAQCBzdGF0aWMgaW50IGViX3N1Ym1pdChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVy
ICplYikKIAlpZiAoZXJyKQogCQlyZXR1cm4gZXJyOwogCi0JaWYgKGk5MTVfZ2VtX2NvbnRleHRf
bm9wcmVlbXB0KGViLT5nZW1fY29udGV4dCkpCisJaWYgKGludGVsX2NvbnRleHRfbm9wcmVlbXB0
KGViLT5jb250ZXh0KSkKIAkJZWItPnJlcXVlc3QtPmZsYWdzIHw9IEk5MTVfUkVRVUVTVF9OT1BS
RUVNUFQ7CiAKIAlyZXR1cm4gMDsKQEAgLTIxNjQsNiArMjE2MSw5IEBAIHN0YXRpYyBpbnQgX19l
Yl9waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UpCiAJaWYgKGVycikKIAkJcmV0dXJuIGVycjsKIAorCWlmICh1bmxpa2VseShpbnRl
bF9jb250ZXh0X2lzX2Jhbm5lZChjZSkpKQorCQlyZXR1cm4gLUVJTzsKKwogCS8qCiAJICogUGlu
bmluZyB0aGUgY29udGV4dHMgbWF5IGdlbmVyYXRlIHJlcXVlc3RzIGluIG9yZGVyIHRvIGFjcXVp
cmUKIAkgKiBHR1RUIHNwYWNlLCBzbyBkbyB0aGlzIGZpcnN0IGJlZm9yZSB3ZSByZXNlcnZlIGEg
c2Vxbm8gZm9yCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVh
ZGNydW1icy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYwpp
bmRleCA1NTMxNzA4MWQ0OGIuLjJmMTFiZWU2MzhkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9icmVhZGNydW1icy5jCkBAIC0yNzEsNyArMjcxLDcgQEAgYm9vbCBpOTE1X3Jl
cXVlc3RfZW5hYmxlX2JyZWFkY3J1bWIoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAKIAlpZiAo
dGVzdF9iaXQoSTkxNV9GRU5DRV9GTEFHX0FDVElWRSwgJnJxLT5mZW5jZS5mbGFncykpIHsKIAkJ
c3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiID0gJnJxLT5lbmdpbmUtPmJyZWFkY3J1bWJzOwot
CQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBycS0+aHdfY29udGV4dDsKKwkJc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlID0gcnEtPmNvbnRleHQ7CiAJCXN0cnVjdCBsaXN0X2hlYWQgKnBvczsK
IAogCQlzcGluX2xvY2soJmItPmlycV9sb2NrKTsKQEAgLTMyNiw3ICszMjYsNyBAQCB2b2lkIGk5
MTVfcmVxdWVzdF9jYW5jZWxfYnJlYWRjcnVtYihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAkg
Ki8KIAlzcGluX2xvY2soJmItPmlycV9sb2NrKTsKIAlpZiAodGVzdF9iaXQoSTkxNV9GRU5DRV9G
TEFHX1NJR05BTCwgJnJxLT5mZW5jZS5mbGFncykpIHsKLQkJc3RydWN0IGludGVsX2NvbnRleHQg
KmNlID0gcnEtPmh3X2NvbnRleHQ7CisJCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5j
b250ZXh0OwogCiAJCWxpc3RfZGVsKCZycS0+c2lnbmFsX2xpbmspOwogCQlpZiAobGlzdF9lbXB0
eSgmY2UtPnNpZ25hbHMpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCmlu
ZGV4IGVlOWQyYmNkMmMxMy4uNjI1Zjc1Zjc4MjVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfY29udGV4dC5jCkBAIC0zMDcsNyArMzA3LDcgQEAgaW50IGludGVsX2NvbnRleHRfcHJl
cGFyZV9yZW1vdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJaW50IGVycjsK
IAogCS8qIE9ubHkgc3VpdGFibGUgZm9yIHVzZSBpbiByZW1vdGVseSBtb2RpZnlpbmcgdGhpcyBj
b250ZXh0ICovCi0JR0VNX0JVR19PTihycS0+aHdfY29udGV4dCA9PSBjZSk7CisJR0VNX0JVR19P
TihycS0+Y29udGV4dCA9PSBjZSk7CiAKIAlpZiAocmN1X2FjY2Vzc19wb2ludGVyKHJxLT50aW1l
bGluZSkgIT0gdGwpIHsgLyogdGltZWxpbmUgc2hhcmluZyEgKi8KIAkJZXJyID0gbXV0ZXhfbG9j
a19pbnRlcnJ1cHRpYmxlX25lc3RlZCgmdGwtPm11dGV4LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfY29udGV4dC5oCmluZGV4IDY4YjNkMzE3ZDk1OS4uMWU2MDczNDNkMjU2IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCkBAIC03LDcgKzcsOSBAQAogI2lmbmRl
ZiBfX0lOVEVMX0NPTlRFWFRfSF9fCiAjZGVmaW5lIF9fSU5URUxfQ09OVEVYVF9IX18KIAorI2lu
Y2x1ZGUgPGxpbnV4L2JpdG9wcy5oPgogI2luY2x1ZGUgPGxpbnV4L2xvY2tkZXAuaD4KKyNpbmNs
dWRlIDxsaW51eC90eXBlcy5oPgogCiAjaW5jbHVkZSAiaTkxNV9hY3RpdmUuaCIKICNpbmNsdWRl
ICJpbnRlbF9jb250ZXh0X3R5cGVzLmgiCkBAIC0xNTMsNCArMTU1LDQ0IEBAIHN0YXRpYyBpbmxp
bmUgc3RydWN0IGludGVsX3JpbmcgKl9faW50ZWxfY29udGV4dF9yaW5nX3NpemUodTY0IHN6KQog
CXJldHVybiB1NjRfdG9fcHRyKHN0cnVjdCBpbnRlbF9yaW5nLCBzeik7CiB9CiAKK3N0YXRpYyBp
bmxpbmUgYm9vbCBpbnRlbF9jb250ZXh0X2lzX2Jhbm5lZChjb25zdCBzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UpCit7CisJcmV0dXJuIHRlc3RfYml0KENPTlRFWFRfQkFOTkVELCAmY2UtPmZsYWdz
KTsKK30KKworc3RhdGljIGlubGluZSBib29sIGludGVsX2NvbnRleHRfc2V0X2Jhbm5lZChzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJcmV0dXJuIHRlc3RfYW5kX3NldF9iaXQoQ09OVEVY
VF9CQU5ORUQsICZjZS0+ZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wKK2ludGVsX2Nv
bnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24oY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQoreworCXJldHVybiB0ZXN0X2JpdChDT05URVhUX0ZPUkNFX1NJTkdMRV9TVUJNSVNTSU9O
LCAmY2UtPmZsYWdzKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkCitpbnRlbF9jb250ZXh0X3Nl
dF9zaW5nbGVfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJX19zZXRf
Yml0KENPTlRFWFRfRk9SQ0VfU0lOR0xFX1NVQk1JU1NJT04sICZjZS0+ZmxhZ3MpOworfQorCitz
dGF0aWMgaW5saW5lIGJvb2wKK2ludGVsX2NvbnRleHRfbm9wcmVlbXB0KGNvbnN0IHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSkKK3sKKwlyZXR1cm4gdGVzdF9iaXQoQ09OVEVYVF9OT1BSRUVNUFQs
ICZjZS0+ZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK2ludGVsX2NvbnRleHRfc2V0
X25vcHJlZW1wdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc2V0X2JpdChDT05URVhU
X05PUFJFRU1QVCwgJmNlLT5mbGFncyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAoraW50ZWxf
Y29udGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWNs
ZWFyX2JpdChDT05URVhUX05PUFJFRU1QVCwgJmNlLT5mbGFncyk7Cit9CisKICNlbmRpZiAvKiBf
X0lOVEVMX0NPTlRFWFRfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9j
b250ZXh0X3R5cGVzLmgKaW5kZXggNjk1OWIwNWFlNWY4Li4wMjUxZWRjOGY1NjggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0X3R5cGVzLmgKQEAgLTU0LDcgKzU0
LDEwIEBAIHN0cnVjdCBpbnRlbF9jb250ZXh0IHsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRp
bWVsaW5lOwogCiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLSNkZWZpbmUgQ09OVEVYVF9BTExPQ19C
SVQgMAorI2RlZmluZSBDT05URVhUX0FMTE9DX0JJVAkJMAorI2RlZmluZSBDT05URVhUX0JBTk5F
RAkJCTEKKyNkZWZpbmUgQ09OVEVYVF9GT1JDRV9TSU5HTEVfU1VCTUlTU0lPTgkyCisjZGVmaW5l
IENPTlRFWFRfTk9QUkVFTVBUCQkzCiAKIAl1MzIgKmxyY19yZWdfc3RhdGU7CiAJdTY0IGxyY19k
ZXNjOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2Nz
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCBmODEx
M2JjNzU2YzYuLmVmZGUzZjhlMDU1OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMKQEAgLTE1MTMsOSArMTUxMyw5IEBAIHZvaWQgaW50ZWxfZW5naW5lX2R1bXAo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCiAJCXByaW50X3JlcXVlc3RfcmluZyht
LCBycSk7CiAKLQkJaWYgKHJxLT5od19jb250ZXh0LT5scmNfcmVnX3N0YXRlKSB7CisJCWlmIChy
cS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSkgewogCQkJZHJtX3ByaW50ZihtLCAiTG9naWNhbCBS
aW5nIENvbnRleHQ6XG4iKTsKLQkJCWhleGR1bXAobSwgcnEtPmh3X2NvbnRleHQtPmxyY19yZWdf
c3RhdGUsIFBBR0VfU0laRSk7CisJCQloZXhkdW1wKG0sIHJxLT5jb250ZXh0LT5scmNfcmVnX3N0
YXRlLCBQQUdFX1NJWkUpOwogCQl9CiAJfQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2lu
ZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKQEAgLTE1NzYsNyArMTU3Niw3IEBAIGludCBpbnRlbF9l
bmFibGVfZW5naW5lX3N0YXRzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCQlm
b3IgKHBvcnQgPSBleGVjbGlzdHMtPnBlbmRpbmc7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7CiAJ
CQkvKiBFeGNsdWRlIGFueSBjb250ZXh0cyBhbHJlYWR5IGNvdW50ZWQgaW4gYWN0aXZlICovCi0J
CQlpZiAoIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQocnEtPmh3X2NvbnRleHQpKQorCQkJ
aWYgKCFpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2NvdW50KHJxLT5jb250ZXh0KSkKIAkJCQllbmdp
bmUtPnN0YXRzLmFjdGl2ZSsrOwogCQl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMK
aW5kZXggNmZiM2RlZjViYTE2Li41YjIzYWViNTAzODUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2xyYy5jCkBAIC04ODgsNyArODg4LDcgQEAgX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0
cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQlsaXN0X21vdmUoJnJxLT5zY2hl
ZC5saW5rLCBwbCk7CiAJCQlhY3RpdmUgPSBycTsKIAkJfSBlbHNlIHsKLQkJCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKm93bmVyID0gcnEtPmh3X2NvbnRleHQtPmVuZ2luZTsKKwkJCXN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKm93bmVyID0gcnEtPmNvbnRleHQtPmVuZ2luZTsKIAogCQkJLyoKIAkJ
CSAqIERlY291cGxlIHRoZSB2aXJ0dWFsIGJyZWFkY3J1bWIgYmVmb3JlIG1vdmluZyBpdApAQCAt
OTk1LDcgKzk5NSw3IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqCiBf
X2V4ZWNsaXN0c19zY2hlZHVsZV9pbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICogY29uc3QgZW5naW5lID0gcnEtPmVuZ2luZTsKLQlzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0gcnEtPmh3X2NvbnRleHQ7CisJc3RydWN0IGludGVs
X2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5jb250ZXh0OwogCiAJaW50ZWxfY29udGV4dF9nZXQo
Y2UpOwogCkBAIC0xMDIxLDcgKzEwMjEsNyBAQCBfX2V4ZWNsaXN0c19zY2hlZHVsZV9pbihzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGk5MTVfcmVxdWVzdCAq
CiBleGVjbGlzdHNfc2NoZWR1bGVfaW4oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGludCBpZHgp
CiB7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0Owor
CXN0cnVjdCBpbnRlbF9jb250ZXh0ICogY29uc3QgY2UgPSBycS0+Y29udGV4dDsKIAlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICpvbGQ7CiAKIAlHRU1fQlVHX09OKCFpbnRlbF9lbmdpbmVfcG1faXNf
YXdha2UocnEtPmVuZ2luZSkpOwpAQCAtMTA2NCw3ICsxMDY0LDcgQEAgc3RhdGljIHZvaWQgcmVz
dG9yZV9kZWZhdWx0X3N0YXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIHN0YXRpYyB2b2lk
IHJlc2V0X2FjdGl2ZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAkJCSBzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiB7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9
IHJxLT5od19jb250ZXh0OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICogY29uc3QgY2UgPSBycS0+
Y29udGV4dDsKIAl1MzIgaGVhZDsKIAogCS8qCkBAIC0xMTA1LDEzICsxMTA1LDEzIEBAIHN0YXRp
YyBpbmxpbmUgdm9pZAogX19leGVjbGlzdHNfc2NoZWR1bGVfb3V0KHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxLAogCQkJIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUpCiB7Ci0J
c3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0OworCXN0cnVj
dCBpbnRlbF9jb250ZXh0ICogY29uc3QgY2UgPSBycS0+Y29udGV4dDsKIAogCWludGVsX2VuZ2lu
ZV9jb250ZXh0X291dChlbmdpbmUpOwogCWV4ZWNsaXN0c19jb250ZXh0X3N0YXR1c19jaGFuZ2Uo
cnEsIElOVEVMX0NPTlRFWFRfU0NIRURVTEVfT1VUKTsKIAlpbnRlbF9ndF9wbV9wdXQoZW5naW5l
LT5ndCk7CiAKLQlpZiAodW5saWtlbHkoaTkxNV9nZW1fY29udGV4dF9pc19iYW5uZWQoY2UtPmdl
bV9jb250ZXh0KSkpCisJaWYgKHVubGlrZWx5KGludGVsX2NvbnRleHRfaXNfYmFubmVkKGNlKSkp
CiAJCXJlc2V0X2FjdGl2ZShycSwgZW5naW5lKTsKIAogCS8qCkBAIC0xMTMyLDcgKzExMzIsNyBA
QCBfX2V4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiBzdGF0
aWMgaW5saW5lIHZvaWQKIGV4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEpCiB7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250
ZXh0OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICogY29uc3QgY2UgPSBycS0+Y29udGV4dDsKIAlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpjdXIsICpvbGQ7CiAKIAl0cmFjZV9pOTE1X3JlcXVlc3Rf
b3V0KHJxKTsKQEAgLTExNDksNyArMTE0OSw3IEBAIGV4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAKIHN0YXRpYyB1NjQgZXhlY2xpc3RzX3VwZGF0ZV9jb250
ZXh0KGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCXN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSA9IHJxLT5od19jb250ZXh0OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJx
LT5jb250ZXh0OwogCXU2NCBkZXNjOwogCiAJY2UtPmxyY19yZWdfc3RhdGVbQ1RYX1JJTkdfVEFJ
TF0gPQpAQCAtMTIzNiwxMyArMTIzNiwxMyBAQCBhc3NlcnRfcGVuZGluZ192YWxpZChjb25zdCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzLAogCX0KIAogCWZvciAocG9y
dCA9IGV4ZWNsaXN0cy0+cGVuZGluZzsgKHJxID0gKnBvcnQpOyBwb3J0KyspIHsKLQkJaWYgKGNl
ID09IHJxLT5od19jb250ZXh0KSB7CisJCWlmIChjZSA9PSBycS0+Y29udGV4dCkgewogCQkJR0VN
X1RSQUNFX0VSUigiRHVwbGljYXRlIGNvbnRleHQgaW4gcGVuZGluZ1slemRdXG4iLAogCQkJCSAg
ICAgIHBvcnQgLSBleGVjbGlzdHMtPnBlbmRpbmcpOwogCQkJcmV0dXJuIGZhbHNlOwogCQl9CiAK
LQkJY2UgPSBycS0+aHdfY29udGV4dDsKKwkJY2UgPSBycS0+Y29udGV4dDsKIAkJaWYgKGk5MTVf
cmVxdWVzdF9jb21wbGV0ZWQocnEpKQogCQkJY29udGludWU7CiAKQEAgLTEzMDcsNyArMTMwNyw3
IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19zdWJtaXRfcG9ydHMoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogc3RhdGljIGJvb2wgY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24oY29u
c3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewogCXJldHVybiAoSVNfRU5BQkxFRChDT05G
SUdfRFJNX0k5MTVfR1ZUKSAmJgotCQlpOTE1X2dlbV9jb250ZXh0X2ZvcmNlX3NpbmdsZV9zdWJt
aXNzaW9uKGNlLT5nZW1fY29udGV4dCkpOworCQlpbnRlbF9jb250ZXh0X2ZvcmNlX3NpbmdsZV9z
dWJtaXNzaW9uKGNlKSk7CiB9CiAKIHN0YXRpYyBib29sIGNhbl9tZXJnZV9jdHgoY29uc3Qgc3Ry
dWN0IGludGVsX2NvbnRleHQgKnByZXYsCkBAIC0xMzQzLDcgKzEzNDMsNyBAQCBzdGF0aWMgYm9v
bCBjYW5fbWVyZ2VfcnEoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiwKIAkJICAgICAo
STkxNV9SRVFVRVNUX05PUFJFRU1QVCB8IEk5MTVfUkVRVUVTVF9TRU5USU5FTCkpKQogCQlyZXR1
cm4gZmFsc2U7CiAKLQlpZiAoIWNhbl9tZXJnZV9jdHgocHJldi0+aHdfY29udGV4dCwgbmV4dC0+
aHdfY29udGV4dCkpCisJaWYgKCFjYW5fbWVyZ2VfY3R4KHByZXYtPmNvbnRleHQsIG5leHQtPmNv
bnRleHQpKQogCQlyZXR1cm4gZmFsc2U7CiAKIAlyZXR1cm4gdHJ1ZTsKQEAgLTE1MzAsNyArMTUz
MCw3IEBAIHN0YXRpYyB1bnNpZ25lZCBsb25nIGFjdGl2ZV9wcmVlbXB0X3RpbWVvdXQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlyZXR1cm4gMDsKIAogCS8qIEZvcmNlIGEgZmFz
dCByZXNldCBmb3IgdGVybWluYXRlZCBjb250ZXh0cyAoaWdub3Jpbmcgc3lzZnMhKSAqLwotCWlm
ICh1bmxpa2VseShpOTE1X2dlbV9jb250ZXh0X2lzX2Jhbm5lZChycS0+Z2VtX2NvbnRleHQpKSkK
KwlpZiAodW5saWtlbHkoaW50ZWxfY29udGV4dF9pc19iYW5uZWQocnEtPmNvbnRleHQpKSkKIAkJ
cmV0dXJuIDE7CiAKIAlyZXR1cm4gUkVBRF9PTkNFKGVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1l
b3V0X21zKTsKQEAgLTE2MzgsNyArMTYzOCw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCSAqIHRlbmRlbmN5IHRvIGln
bm9yZSB1cyByZXdpbmRpbmcgdGhlIFRBSUwgdG8gdGhlCiAJCQkgKiBlbmQgb2YgYW4gZWFybGll
ciByZXF1ZXN0LgogCQkJICovCi0JCQlsYXN0LT5od19jb250ZXh0LT5scmNfZGVzYyB8PSBDVFhf
REVTQ19GT1JDRV9SRVNUT1JFOworCQkJbGFzdC0+Y29udGV4dC0+bHJjX2Rlc2MgfD0gQ1RYX0RF
U0NfRk9SQ0VfUkVTVE9SRTsKIAkJCWxhc3QgPSBOVUxMOwogCQl9IGVsc2UgaWYgKG5lZWRfdGlt
ZXNsaWNlKGVuZ2luZSwgbGFzdCkgJiYKIAkJCSAgIHRpbWVyX2V4cGlyZWQoJmVuZ2luZS0+ZXhl
Y2xpc3RzLnRpbWVyKSkgewpAQCAtMTcyMCw3ICsxNzIwLDcgQEAgc3RhdGljIHZvaWQgZXhlY2xp
c3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJCUdFTV9CVUdf
T04ocnEgIT0gdmUtPnJlcXVlc3QpOwogCQlHRU1fQlVHX09OKHJxLT5lbmdpbmUgIT0gJnZlLT5i
YXNlKTsKLQkJR0VNX0JVR19PTihycS0+aHdfY29udGV4dCAhPSAmdmUtPmNvbnRleHQpOworCQlH
RU1fQlVHX09OKHJxLT5jb250ZXh0ICE9ICZ2ZS0+Y29udGV4dCk7CiAKIAkJaWYgKHJxX3ByaW8o
cnEpID49IHF1ZXVlX3ByaW8oZXhlY2xpc3RzKSkgewogCQkJaWYgKCF2aXJ0dWFsX21hdGNoZXMo
dmUsIHJxLCBlbmdpbmUpKSB7CkBAIC0xODM5LDcgKzE4MzksNyBAQCBzdGF0aWMgdm9pZCBleGVj
bGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkJICogc2Ft
ZSBMUkNBLCBpLmUuIHdlIG11c3Qgc3VibWl0IDIgZGlmZmVyZW50CiAJCQkJICogY29udGV4dHMg
aWYgd2Ugc3VibWl0IDIgRUxTUC4KIAkJCQkgKi8KLQkJCQlpZiAobGFzdC0+aHdfY29udGV4dCA9
PSBycS0+aHdfY29udGV4dCkKKwkJCQlpZiAobGFzdC0+Y29udGV4dCA9PSBycS0+Y29udGV4dCkK
IAkJCQkJZ290byBkb25lOwogCiAJCQkJaWYgKGk5MTVfcmVxdWVzdF9oYXNfc2VudGluZWwobGFz
dCkpCkBAIC0xODUyLDggKzE4NTIsOCBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkJICogdGhlIHNhbWUgY29udGV4dCAo
ZXZlbiB0aG91Z2ggYSBkaWZmZXJlbnQKIAkJCQkgKiByZXF1ZXN0KSB0byB0aGUgc2Vjb25kIHBv
cnQuCiAJCQkJICovCi0JCQkJaWYgKGN0eF9zaW5nbGVfcG9ydF9zdWJtaXNzaW9uKGxhc3QtPmh3
X2NvbnRleHQpIHx8Ci0JCQkJICAgIGN0eF9zaW5nbGVfcG9ydF9zdWJtaXNzaW9uKHJxLT5od19j
b250ZXh0KSkKKwkJCQlpZiAoY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24obGFzdC0+Y29udGV4
dCkgfHwKKwkJCQkgICAgY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24ocnEtPmNvbnRleHQpKQog
CQkJCQlnb3RvIGRvbmU7CiAKIAkJCQltZXJnZSA9IGZhbHNlOwpAQCAtMTg2Nyw4ICsxODY3LDgg
QEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCQkJCX0KIAogCQkJCUdFTV9CVUdfT04obGFzdCAmJgotCQkJCQkgICAhY2FuX21l
cmdlX2N0eChsYXN0LT5od19jb250ZXh0LAotCQkJCQkJCSAgcnEtPmh3X2NvbnRleHQpKTsKKwkJ
CQkJICAgIWNhbl9tZXJnZV9jdHgobGFzdC0+Y29udGV4dCwKKwkJCQkJCQkgIHJxLT5jb250ZXh0
KSk7CiAKIAkJCQlzdWJtaXQgPSB0cnVlOwogCQkJCWxhc3QgPSBycTsKQEAgLTI0ODQsNyArMjQ4
NCw3IEBAIHN0YXRpYyBpbnQgZXhlY2xpc3RzX3JlcXVlc3RfYWxsb2Moc3RydWN0IGk5MTVfcmVx
dWVzdCAqcmVxdWVzdCkKIHsKIAlpbnQgcmV0OwogCi0JR0VNX0JVR19PTighaW50ZWxfY29udGV4
dF9pc19waW5uZWQocmVxdWVzdC0+aHdfY29udGV4dCkpOworCUdFTV9CVUdfT04oIWludGVsX2Nv
bnRleHRfaXNfcGlubmVkKHJlcXVlc3QtPmNvbnRleHQpKTsKIAogCS8qCiAJICogRmx1c2ggZW5v
dWdoIHNwYWNlIHRvIHJlZHVjZSB0aGUgbGlrZWxpaG9vZCBvZiB3YWl0aW5nIGFmdGVyCkBAIC0y
OTk1LDcgKzI5OTUsNyBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAkvKiBXZSBzdGlsbCBoYXZlIHJl
cXVlc3RzIGluLWZsaWdodDsgdGhlIGVuZ2luZSBzaG91bGQgYmUgYWN0aXZlICovCiAJR0VNX0JV
R19PTighaW50ZWxfZW5naW5lX3BtX2lzX2F3YWtlKGVuZ2luZSkpOwogCi0JY2UgPSBycS0+aHdf
Y29udGV4dDsKKwljZSA9IHJxLT5jb250ZXh0OwogCUdFTV9CVUdfT04oIWk5MTVfdm1hX2lzX3Bp
bm5lZChjZS0+c3RhdGUpKTsKIAogCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkgewpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMKaW5kZXggZjAzZTAwMDA1MWMxLi5iNGMw
YWQ0YTYwODEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwpAQCAtNDAsMjcg
KzQwLDMxIEBAIHN0YXRpYyB2b2lkIHJtd19jbGVhcl9mdyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1
bmNvcmUsIGk5MTVfcmVnX3QgcmVnLCB1MzIgY2xyKQogc3RhdGljIHZvaWQgZW5naW5lX3NraXBf
Y29udGV4dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUgPSBycS0+ZW5naW5lOwotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpodW5n
X2N0eCA9IHJxLT5nZW1fY29udGV4dDsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqaHVuZ19jdHgg
PSBycS0+Y29udGV4dDsKIAogCWlmICghaTkxNV9yZXF1ZXN0X2lzX2FjdGl2ZShycSkpCi0JCXJl
dHVybjsKKwkJcnEgPSBsaXN0X2ZpcnN0X2VudHJ5KCZlbmdpbmUtPmFjdGl2ZS5yZXF1ZXN0cywK
KwkJCQkgICAgICB0eXBlb2YoKnJxKSwgc2NoZWQubGluayk7CiAKIAlsb2NrZGVwX2Fzc2VydF9o
ZWxkKCZlbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X2NvbnRpbnVl
KHJxLCAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxpbmspCi0JCWlmIChycS0+Z2Vt
X2NvbnRleHQgPT0gaHVuZ19jdHgpCisJCWlmIChycS0+Y29udGV4dCA9PSBodW5nX2N0eCkKIAkJ
CWk5MTVfcmVxdWVzdF9za2lwKHJxLCAtRUlPKTsKIH0KIAotc3RhdGljIHZvaWQgY2xpZW50X21h
cmtfZ3VpbHR5KHN0cnVjdCBkcm1faTkxNV9maWxlX3ByaXZhdGUgKmZpbGVfcHJpdiwKLQkJCSAg
ICAgICBjb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQorc3RhdGljIHZvaWQgY2xp
ZW50X21hcmtfZ3VpbHR5KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBib29sIGJhbm5lZCkKIHsK
LQl1bnNpZ25lZCBpbnQgc2NvcmU7CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJx
LT5jb250ZXh0LT5nZW1fY29udGV4dDsKKwlzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpm
aWxlX3ByaXYgPSBjdHgtPmZpbGVfcHJpdjsKIAl1bnNpZ25lZCBsb25nIHByZXZfaGFuZzsKKwl1
bnNpZ25lZCBpbnQgc2NvcmU7CiAKLQlpZiAoaTkxNV9nZW1fY29udGV4dF9pc19iYW5uZWQoY3R4
KSkKKwlpZiAoSVNfRVJSX09SX05VTEwoZmlsZV9wcml2KSkKKwkJcmV0dXJuOworCisJc2NvcmUg
PSAwOworCWlmIChiYW5uZWQpCiAJCXNjb3JlID0gSTkxNV9DTElFTlRfU0NPUkVfQ09OVEVYVF9C
QU47Ci0JZWxzZQotCQlzY29yZSA9IDA7CiAKIAlwcmV2X2hhbmcgPSB4Y2hnKCZmaWxlX3ByaXYt
PmhhbmdfdGltZXN0YW1wLCBqaWZmaWVzKTsKIAlpZiAodGltZV9iZWZvcmUoamlmZmllcywgcHJl
dl9oYW5nICsgSTkxNV9DTElFTlRfRkFTVF9IQU5HX0pJRkZJRVMpKQpAQCAtNzUsOCArNzksOSBA
QCBzdGF0aWMgdm9pZCBjbGllbnRfbWFya19ndWlsdHkoc3RydWN0IGRybV9pOTE1X2ZpbGVfcHJp
dmF0ZSAqZmlsZV9wcml2LAogCX0KIH0KIAotc3RhdGljIGJvb2wgY29udGV4dF9tYXJrX2d1aWx0
eShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQorc3RhdGljIGJvb2wgbWFya19ndWlsdHko
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0
eCA9IHJxLT5jb250ZXh0LT5nZW1fY29udGV4dDsKIAl1bnNpZ25lZCBsb25nIHByZXZfaGFuZzsK
IAlib29sIGJhbm5lZDsKIAlpbnQgaTsKQEAgLTEwMCwxOCArMTA1LDE3IEBAIHN0YXRpYyBib29s
IGNvbnRleHRfbWFya19ndWlsdHkoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAlpZiAo
YmFubmVkKSB7CiAJCURSTV9ERUJVR19EUklWRVIoImNvbnRleHQgJXM6IGd1aWx0eSAlZCwgYmFu
bmVkXG4iLAogCQkJCSBjdHgtPm5hbWUsIGF0b21pY19yZWFkKCZjdHgtPmd1aWx0eV9jb3VudCkp
OwotCQlpOTE1X2dlbV9jb250ZXh0X3NldF9iYW5uZWQoY3R4KTsKKwkJaW50ZWxfY29udGV4dF9z
ZXRfYmFubmVkKHJxLT5jb250ZXh0KTsKIAl9CiAKLQlpZiAoIUlTX0VSUl9PUl9OVUxMKGN0eC0+
ZmlsZV9wcml2KSkKLQkJY2xpZW50X21hcmtfZ3VpbHR5KGN0eC0+ZmlsZV9wcml2LCBjdHgpOwor
CWNsaWVudF9tYXJrX2d1aWx0eShycSwgYmFubmVkKTsKIAogCXJldHVybiBiYW5uZWQ7CiB9CiAK
LXN0YXRpYyB2b2lkIGNvbnRleHRfbWFya19pbm5vY2VudChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqY3R4KQorc3RhdGljIHZvaWQgbWFya19pbm5vY2VudChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKIHsKLQlhdG9taWNfaW5jKCZjdHgtPmFjdGl2ZV9jb3VudCk7CisJYXRvbWljX2luYygmcnEt
PmNvbnRleHQtPmdlbV9jb250ZXh0LT5hY3RpdmVfY291bnQpOwogfQogCiB2b2lkIF9faTkxNV9y
ZXF1ZXN0X3Jlc2V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBib29sIGd1aWx0eSkKQEAgLTEy
NiwxMSArMTMwLDExIEBAIHZvaWQgX19pOTE1X3JlcXVlc3RfcmVzZXQoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQogCiAJaWYgKGd1aWx0eSkgewogCQlpOTE1X3JlcXVlc3Rf
c2tpcChycSwgLUVJTyk7Ci0JCWlmIChjb250ZXh0X21hcmtfZ3VpbHR5KHJxLT5nZW1fY29udGV4
dCkpCisJCWlmIChtYXJrX2d1aWx0eShycSkpCiAJCQllbmdpbmVfc2tpcF9jb250ZXh0KHJxKTsK
IAl9IGVsc2UgewogCQlkbWFfZmVuY2Vfc2V0X2Vycm9yKCZycS0+ZmVuY2UsIC1FQUdBSU4pOwot
CQljb250ZXh0X21hcmtfaW5ub2NlbnQocnEtPmdlbV9jb250ZXh0KTsKKwkJbWFya19pbm5vY2Vu
dChycSk7CiAJfQogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9yaW5nX3N1Ym1pc3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdf
c3VibWlzc2lvbi5jCmluZGV4IGE0N2Q1YTdjMzJjOS4uMWMyZjNjM2E4ODQwIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYwpAQCAtMTQ4NSw3
ICsxNDg1LDcgQEAgc3RhdGljIGlubGluZSBpbnQgbWlfc2V0X2NvbnRleHQoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEsIHUzMiBmbGFncykKIAogCSpjcysrID0gTUlfTk9PUDsKIAkqY3MrKyA9IE1J
X1NFVF9DT05URVhUOwotCSpjcysrID0gaTkxNV9nZ3R0X29mZnNldChycS0+aHdfY29udGV4dC0+
c3RhdGUpIHwgZmxhZ3M7CisJKmNzKysgPSBpOTE1X2dndHRfb2Zmc2V0KHJxLT5jb250ZXh0LT5z
dGF0ZSkgfCBmbGFnczsKIAkvKgogCSAqIHcvYTogTUlfU0VUX0NPTlRFWFQgbXVzdCBhbHdheXMg
YmUgZm9sbG93ZWQgYnkgTUlfTk9PUAogCSAqIFdhTWlTZXRDb250ZXh0X0hhbmc6c25iLGl2Yix2
bHYKQEAgLTE1NTUsNyArMTU1NSw3IEBAIHN0YXRpYyBpbnQgcmVtYXBfbDNfc2xpY2Uoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEsIGludCBzbGljZSkKIAogc3RhdGljIGludCByZW1hcF9sMyhzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0g
cnEtPmdlbV9jb250ZXh0OworCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHggPSBycS0+Y29u
dGV4dC0+Z2VtX2NvbnRleHQ7CiAJaW50IGksIGVycjsKIAogCWlmICghY3R4LT5yZW1hcF9zbGlj
ZSkKQEAgLTE1NzYsNyArMTU3Niw3IEBAIHN0YXRpYyBpbnQgcmVtYXBfbDMoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEpCiAKIHN0YXRpYyBpbnQgc3dpdGNoX2NvbnRleHQoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiB7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEtPmh3X2NvbnRleHQ7
CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEtPmNvbnRleHQ7CiAJc3RydWN0IGk5MTVf
YWRkcmVzc19zcGFjZSAqdm0gPSB2bV9hbGlhcyhjZSk7CiAJaW50IHJldDsKIApAQCAtMTYwMSw3
ICsxNjAxLDcgQEAgc3RhdGljIGludCBzd2l0Y2hfY29udGV4dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKIAkJICogaXMgcHVyZWx5IHVzZWQgZm9yIGZsdXNoaW5nIHVzZXIgY29udGV4dHMuCiAJ
CSAqLwogCQlod19mbGFncyA9IDA7Ci0JCWlmIChpOTE1X2dlbV9jb250ZXh0X2lzX2tlcm5lbChy
cS0+Z2VtX2NvbnRleHQpKQorCQlpZiAoaTkxNV9nZW1fY29udGV4dF9pc19rZXJuZWwocnEtPmNv
bnRleHQtPmdlbV9jb250ZXh0KSkKIAkJCWh3X2ZsYWdzID0gTUlfUkVTVE9SRV9JTkhJQklUOwog
CiAJCXJldCA9IG1pX3NldF9jb250ZXh0KHJxLCBod19mbGFncyk7CkBAIC0xNjQ4LDcgKzE2NDgs
NyBAQCBzdGF0aWMgaW50IHJpbmdfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
ZXF1ZXN0KQogewogCWludCByZXQ7CiAKLQlHRU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2lzX3Bp
bm5lZChyZXF1ZXN0LT5od19jb250ZXh0KSk7CisJR0VNX0JVR19PTighaW50ZWxfY29udGV4dF9p
c19waW5uZWQocmVxdWVzdC0+Y29udGV4dCkpOwogCUdFTV9CVUdfT04oaTkxNV9yZXF1ZXN0X3Rp
bWVsaW5lKHJlcXVlc3QpLT5oYXNfaW5pdGlhbF9icmVhZGNydW1iKTsKIAogCS8qCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCmluZGV4IDVlOGMzNjU1NDhmMC4uOTU1MDRjNDhj
ZDk5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwpAQCAtMTE4NywxMyAr
MTE4NywxMyBAQCBzdGF0aWMgaW50IF9fY2FuY2VsX2FjdGl2ZTAoc3RydWN0IGxpdmVfcHJlZW1w
dF9jYW5jZWwgKmFyZykKIAkJCQlfX2Z1bmNfXywgYXJnLT5lbmdpbmUtPm5hbWUpKQogCQlyZXR1
cm4gLUVJTzsKIAotCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFyZy0+YS5jdHgtPmZsYWdz
KTsKIAlycSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+YS5zcGluLAogCQkJCSAgICBh
cmctPmEuY3R4LCBhcmctPmVuZ2luZSwKIAkJCQkgICAgTUlfQVJCX0NIRUNLKTsKIAlpZiAoSVNf
RVJSKHJxKSkKIAkJcmV0dXJuIFBUUl9FUlIocnEpOwogCisJY2xlYXJfYml0KENPTlRFWFRfQkFO
TkVELCAmcnEtPmNvbnRleHQtPmZsYWdzKTsKIAlpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKIAlpOTE1
X3JlcXVlc3RfYWRkKHJxKTsKIAlpZiAoIWlndF93YWl0X2Zvcl9zcGlubmVyKCZhcmctPmEuc3Bp
biwgcnEpKSB7CkBAIC0xMjAxLDcgKzEyMDEsNyBAQCBzdGF0aWMgaW50IF9fY2FuY2VsX2FjdGl2
ZTAoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKIAkJZ290byBvdXQ7CiAJfQogCi0J
aTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmVkKGFyZy0+YS5jdHgpOworCWludGVsX2NvbnRleHRf
c2V0X2Jhbm5lZChycS0+Y29udGV4dCk7CiAJZXJyID0gaW50ZWxfZW5naW5lX3B1bHNlKGFyZy0+
ZW5naW5lKTsKIAlpZiAoZXJyKQogCQlnb3RvIG91dDsKQEAgLTEyMzYsMTMgKzEyMzYsMTMgQEAg
c3RhdGljIGludCBfX2NhbmNlbF9hY3RpdmUxKHN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsICph
cmcpCiAJCQkJX19mdW5jX18sIGFyZy0+ZW5naW5lLT5uYW1lKSkKIAkJcmV0dXJuIC1FSU87CiAK
LQljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQsICZhcmctPmEuY3R4LT5mbGFncyk7CiAJcnFbMF0g
PSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZhcmctPmEuc3BpbiwKIAkJCQkgICAgICAgYXJnLT5h
LmN0eCwgYXJnLT5lbmdpbmUsCiAJCQkJICAgICAgIE1JX05PT1ApOyAvKiBubyBwcmVlbXB0aW9u
ICovCiAJaWYgKElTX0VSUihycVswXSkpCiAJCXJldHVybiBQVFJfRVJSKHJxWzBdKTsKIAorCWNs
ZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJnJxWzBdLT5jb250ZXh0LT5mbGFncyk7CiAJaTkxNV9y
ZXF1ZXN0X2dldChycVswXSk7CiAJaTkxNV9yZXF1ZXN0X2FkZChycVswXSk7CiAJaWYgKCFpZ3Rf
d2FpdF9mb3Jfc3Bpbm5lcigmYXJnLT5hLnNwaW4sIHJxWzBdKSkgewpAQCAtMTI1MCw3ICsxMjUw
LDYgQEAgc3RhdGljIGludCBfX2NhbmNlbF9hY3RpdmUxKHN0cnVjdCBsaXZlX3ByZWVtcHRfY2Fu
Y2VsICphcmcpCiAJCWdvdG8gb3V0OwogCX0KIAotCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwg
JmFyZy0+Yi5jdHgtPmZsYWdzKTsKIAlycVsxXSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFy
Zy0+Yi5zcGluLAogCQkJCSAgICAgICBhcmctPmIuY3R4LCBhcmctPmVuZ2luZSwKIAkJCQkgICAg
ICAgTUlfQVJCX0NIRUNLKTsKQEAgLTEyNTksMTMgKzEyNTgsMTQgQEAgc3RhdGljIGludCBfX2Nh
bmNlbF9hY3RpdmUxKHN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsICphcmcpCiAJCWdvdG8gb3V0
OwogCX0KIAorCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJnJxWzFdLT5jb250ZXh0LT5mbGFn
cyk7CiAJaTkxNV9yZXF1ZXN0X2dldChycVsxXSk7CiAJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0
X2RtYV9mZW5jZShycVsxXSwgJnJxWzBdLT5mZW5jZSk7CiAJaTkxNV9yZXF1ZXN0X2FkZChycVsx
XSk7CiAJaWYgKGVycikKIAkJZ290byBvdXQ7CiAKLQlpOTE1X2dlbV9jb250ZXh0X3NldF9iYW5u
ZWQoYXJnLT5iLmN0eCk7CisJaW50ZWxfY29udGV4dF9zZXRfYmFubmVkKHJxWzFdLT5jb250ZXh0
KTsKIAllcnIgPSBpbnRlbF9lbmdpbmVfcHVsc2UoYXJnLT5lbmdpbmUpOwogCWlmIChlcnIpCiAJ
CWdvdG8gb3V0OwpAQCAtMTMwOCwxMyArMTMwOCwxMyBAQCBzdGF0aWMgaW50IF9fY2FuY2VsX3F1
ZXVlZChzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQogCQkJCV9fZnVuY19fLCBhcmct
PmVuZ2luZS0+bmFtZSkpCiAJCXJldHVybiAtRUlPOwogCi0JY2xlYXJfYml0KENPTlRFWFRfQkFO
TkVELCAmYXJnLT5hLmN0eC0+ZmxhZ3MpOwogCXJxWzBdID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVz
dCgmYXJnLT5hLnNwaW4sCiAJCQkJICAgICAgIGFyZy0+YS5jdHgsIGFyZy0+ZW5naW5lLAogCQkJ
CSAgICAgICBNSV9BUkJfQ0hFQ0spOwogCWlmIChJU19FUlIocnFbMF0pKQogCQlyZXR1cm4gUFRS
X0VSUihycVswXSk7CiAKKwljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQsICZycVswXS0+Y29udGV4
dC0+ZmxhZ3MpOwogCWk5MTVfcmVxdWVzdF9nZXQocnFbMF0pOwogCWk5MTVfcmVxdWVzdF9hZGQo
cnFbMF0pOwogCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJmFyZy0+YS5zcGluLCBycVswXSkp
IHsKQEAgLTEzMjIsMTMgKzEzMjIsMTMgQEAgc3RhdGljIGludCBfX2NhbmNlbF9xdWV1ZWQoc3Ry
dWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKIAkJZ290byBvdXQ7CiAJfQogCi0JY2xlYXJf
Yml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5iLmN0eC0+ZmxhZ3MpOwogCXJxWzFdID0gaWd0X3Jl
cXVlc3RfYWxsb2MoYXJnLT5iLmN0eCwgYXJnLT5lbmdpbmUpOwogCWlmIChJU19FUlIocnFbMV0p
KSB7CiAJCWVyciA9IFBUUl9FUlIocnFbMV0pOwogCQlnb3RvIG91dDsKIAl9CiAKKwljbGVhcl9i
aXQoQ09OVEVYVF9CQU5ORUQsICZycVsxXS0+Y29udGV4dC0+ZmxhZ3MpOwogCWk5MTVfcmVxdWVz
dF9nZXQocnFbMV0pOwogCWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9kbWFfZmVuY2UocnFbMV0s
ICZycVswXS0+ZmVuY2UpOwogCWk5MTVfcmVxdWVzdF9hZGQocnFbMV0pOwpAQCAtMTM0OSw3ICsx
MzQ5LDcgQEAgc3RhdGljIGludCBfX2NhbmNlbF9xdWV1ZWQoc3RydWN0IGxpdmVfcHJlZW1wdF9j
YW5jZWwgKmFyZykKIAlpZiAoZXJyKQogCQlnb3RvIG91dDsKIAotCWk5MTVfZ2VtX2NvbnRleHRf
c2V0X2Jhbm5lZChhcmctPmEuY3R4KTsKKwlpbnRlbF9jb250ZXh0X3NldF9iYW5uZWQocnFbMl0t
PmNvbnRleHQpOwogCWVyciA9IGludGVsX2VuZ2luZV9wdWxzZShhcmctPmVuZ2luZSk7CiAJaWYg
KGVycikKIAkJZ290byBvdXQ7CkBAIC0xMzk2LDEzICsxMzk2LDEzIEBAIHN0YXRpYyBpbnQgX19j
YW5jZWxfaG9zdGlsZShzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQogCQlyZXR1cm4g
MDsKIAogCUdFTV9UUkFDRSgiJXMoJXMpXG4iLCBfX2Z1bmNfXywgYXJnLT5lbmdpbmUtPm5hbWUp
OwotCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFyZy0+YS5jdHgtPmZsYWdzKTsKIAlycSA9
IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+YS5zcGluLAogCQkJCSAgICBhcmctPmEuY3R4
LCBhcmctPmVuZ2luZSwKIAkJCQkgICAgTUlfTk9PUCk7IC8qIHByZWVtcHRpb24gZGlzYWJsZWQg
Ki8KIAlpZiAoSVNfRVJSKHJxKSkKIAkJcmV0dXJuIFBUUl9FUlIocnEpOwogCisJY2xlYXJfYml0
KENPTlRFWFRfQkFOTkVELCAmcnEtPmNvbnRleHQtPmZsYWdzKTsKIAlpOTE1X3JlcXVlc3RfZ2V0
KHJxKTsKIAlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKIAlpZiAoIWlndF93YWl0X2Zvcl9zcGlubmVy
KCZhcmctPmEuc3BpbiwgcnEpKSB7CkBAIC0xNDEwLDcgKzE0MTAsNyBAQCBzdGF0aWMgaW50IF9f
Y2FuY2VsX2hvc3RpbGUoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKIAkJZ290byBv
dXQ7CiAJfQogCi0JaTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmVkKGFyZy0+YS5jdHgpOworCWlu
dGVsX2NvbnRleHRfc2V0X2Jhbm5lZChycS0+Y29udGV4dCk7CiAJZXJyID0gaW50ZWxfZW5naW5l
X3B1bHNlKGFyZy0+ZW5naW5lKTsgLyogZm9yY2UgcmVzZXQgKi8KIAlpZiAoZXJyKQogCQlnb3Rv
IG91dDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19z
dWJtaXNzaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlz
c2lvbi5jCmluZGV4IDI0OThjNTVlMGVhNS4uMDgyNjdkMmMzY2ZjIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKQEAgLTQ3MSw3ICs0
NzEsNyBAQCBzdGF0aWMgdm9pZCBndWNfYWRkX3JlcXVlc3Qoc3RydWN0IGludGVsX2d1YyAqZ3Vj
LCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAq
Y2xpZW50ID0gZ3VjLT5leGVjYnVmX2NsaWVudDsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUgPSBycS0+ZW5naW5lOwotCXUzMiBjdHhfZGVzYyA9IGxvd2VyXzMyX2JpdHMocnEtPmh3
X2NvbnRleHQtPmxyY19kZXNjKTsKKwl1MzIgY3R4X2Rlc2MgPSBsb3dlcl8zMl9iaXRzKHJxLT5j
b250ZXh0LT5scmNfZGVzYyk7CiAJdTMyIHJpbmdfdGFpbCA9IGludGVsX3Jpbmdfc2V0X3RhaWwo
cnEtPnJpbmcsIHJxLT50YWlsKSAvIHNpemVvZih1NjQpOwogCiAJZ3VjX3dxX2l0ZW1fYXBwZW5k
KGNsaWVudCwgZW5naW5lLT5ndWNfaWQsIGN0eF9kZXNjLApAQCAtNTcyLDcgKzU3Miw3IEBAIHN0
YXRpYyB2b2lkIF9fZ3VjX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CQlpbnQgaTsKIAogCQlwcmlvbGlzdF9mb3JfZWFjaF9yZXF1ZXN0X2NvbnN1bWUocnEsIHJuLCBw
LCBpKSB7Ci0JCQlpZiAobGFzdCAmJiBycS0+aHdfY29udGV4dCAhPSBsYXN0LT5od19jb250ZXh0
KSB7CisJCQlpZiAobGFzdCAmJiBycS0+Y29udGV4dCAhPSBsYXN0LT5jb250ZXh0KSB7CiAJCQkJ
aWYgKHBvcnQgPT0gbGFzdF9wb3J0KQogCQkJCQlnb3RvIGRvbmU7CiAKQEAgLTY3Nyw3ICs2Nzcs
NyBAQCBzdGF0aWMgdm9pZCBndWNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCBib29sIHN0YWxsZWQpCiAJCXN0YWxsZWQgPSBmYWxzZTsKIAogCV9faTkxNV9yZXF1ZXN0X3Jl
c2V0KHJxLCBzdGFsbGVkKTsKLQlpbnRlbF9scl9jb250ZXh0X3Jlc2V0KGVuZ2luZSwgcnEtPmh3
X2NvbnRleHQsIHJxLT5oZWFkLCBzdGFsbGVkKTsKKwlpbnRlbF9scl9jb250ZXh0X3Jlc2V0KGVu
Z2luZSwgcnEtPmNvbnRleHQsIHJxLT5oZWFkLCBzdGFsbGVkKTsKIAogb3V0X3VubG9jazoKIAlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMKaW5kZXggMzc3ODExZjg4NTNmLi45NzZkNjk1MDIx
OGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMKQEAgLTU5LDcgKzU5LDcgQEAg
c3RhdGljIHZvaWQgc2V0X2NvbnRleHRfcGRwX3Jvb3RfcG9pbnRlcigKIHN0YXRpYyB2b2lkIHVw
ZGF0ZV9zaGFkb3dfcGRwcyhzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiB7
CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKmN0eF9vYmogPQotCQl3b3JrbG9hZC0+cmVx
LT5od19jb250ZXh0LT5zdGF0ZS0+b2JqOworCQl3b3JrbG9hZC0+cmVxLT5jb250ZXh0LT5zdGF0
ZS0+b2JqOwogCXN0cnVjdCBleGVjbGlzdF9yaW5nX2NvbnRleHQgKnNoYWRvd19yaW5nX2NvbnRl
eHQ7CiAJc3RydWN0IHBhZ2UgKnBhZ2U7CiAKQEAgLTEzMCw3ICsxMzAsNyBAQCBzdGF0aWMgaW50
IHBvcHVsYXRlX3NoYWRvd19jb250ZXh0KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3Jr
bG9hZCkKIAlzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQgPSB2Z3B1LT5ndnQ7CiAJaW50IHJpbmdfaWQg
PSB3b3JrbG9hZC0+cmluZ19pZDsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29i
aiA9Ci0JCXdvcmtsb2FkLT5yZXEtPmh3X2NvbnRleHQtPnN0YXRlLT5vYmo7CisJCXdvcmtsb2Fk
LT5yZXEtPmNvbnRleHQtPnN0YXRlLT5vYmo7CiAJc3RydWN0IGV4ZWNsaXN0X3JpbmdfY29udGV4
dCAqc2hhZG93X3JpbmdfY29udGV4dDsKIAlzdHJ1Y3QgcGFnZSAqcGFnZTsKIAl2b2lkICpkc3Q7
CkBAIC0yMDUsOSArMjA1LDkgQEAgc3RhdGljIGludCBwb3B1bGF0ZV9zaGFkb3dfY29udGV4dChz
dHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAJcmV0dXJuIDA7CiB9CiAKLXN0
YXRpYyBpbmxpbmUgYm9vbCBpc19ndnRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXEp
CitzdGF0aWMgaW5saW5lIGJvb2wgaXNfZ3Z0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEpCiB7Ci0JcmV0dXJuIGk5MTVfZ2VtX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24o
cmVxLT5nZW1fY29udGV4dCk7CisJcmV0dXJuIGludGVsX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1
Ym1pc3Npb24ocnEtPmNvbnRleHQpOwogfQogCiBzdGF0aWMgdm9pZCBzYXZlX3JpbmdfaHdfc3Rh
dGUoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkKQpAQCAtMzA3LDcgKzMwNyw3
IEBAIHN0YXRpYyBpbnQgY29weV93b3JrbG9hZF90b19yaW5nX2J1ZmZlcihzdHJ1Y3QgaW50ZWxf
dmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAJdTMyICpjczsKIAlpbnQgZXJyOwogCi0JaWYgKElT
X0dFTihyZXEtPmk5MTUsIDkpICYmIGlzX2luaGliaXRfY29udGV4dChyZXEtPmh3X2NvbnRleHQp
KQorCWlmIChJU19HRU4ocmVxLT5pOTE1LCA5KSAmJiBpc19pbmhpYml0X2NvbnRleHQocmVxLT5j
b250ZXh0KSkKIAkJaW50ZWxfdmdwdV9yZXN0b3JlX2luaGliaXRfY29udGV4dCh2Z3B1LCByZXEp
OwogCiAJLyoKQEAgLTM2MywxMSArMzYzLDEwIEBAIHN0YXRpYyB2b2lkIHJlbGVhc2Vfc2hhZG93
X3dhX2N0eChzdHJ1Y3QgaW50ZWxfc2hhZG93X3dhX2N0eCAqd2FfY3R4KQogfQogCiBzdGF0aWMg
dm9pZCBzZXRfY29udGV4dF9wcGd0dF9mcm9tX3NoYWRvdyhzdHJ1Y3QgaW50ZWxfdmdwdV93b3Jr
bG9hZCAqd29ya2xvYWQsCi0JCQkJCSAgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKKwkJ
CQkJICBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJc3RydWN0IGludGVsX3ZncHVfbW0g
Km1tID0gd29ya2xvYWQtPnNoYWRvd19tbTsKLQlzdHJ1Y3QgaTkxNV9wcGd0dCAqcHBndHQgPQot
CQlpOTE1X3ZtX3RvX3BwZ3R0KGk5MTVfZ2VtX2NvbnRleHRfZ2V0X3ZtX3JjdShjdHgpKTsKKwlz
dHJ1Y3QgaTkxNV9wcGd0dCAqcHBndHQgPSBpOTE1X3ZtX3RvX3BwZ3R0KGNlLT52bSk7CiAJaW50
IGkgPSAwOwogCiAJaWYgKG1tLT5wcGd0dF9tbS5yb290X2VudHJ5X3R5cGUgPT0gR1RUX1RZUEVf
UFBHVFRfUk9PVF9MNF9FTlRSWSkgewpAQCAtMzgwLDggKzM3OSw2IEBAIHN0YXRpYyB2b2lkIHNl
dF9jb250ZXh0X3BwZ3R0X2Zyb21fc2hhZG93KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3
b3JrbG9hZCwKIAkJCXB4X2RtYShwZCkgPSBtbS0+cHBndHRfbW0uc2hhZG93X3BkcHNbaV07CiAJ
CX0KIAl9Ci0KLQlpOTE1X3ZtX3B1dCgmcHBndHQtPnZtKTsKIH0KIAogc3RhdGljIGludApAQCAt
NTI5LDcgKzUyNiw3IEBAIHN0YXRpYyB2b2lkIHVwZGF0ZV93YV9jdHhfMl9zaGFkb3dfY3R4KHN0
cnVjdCBpbnRlbF9zaGFkb3dfd2FfY3R4ICp3YV9jdHgpCiAJCWNvbnRhaW5lcl9vZih3YV9jdHgs
IHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkLCB3YV9jdHgpOwogCXN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxID0gd29ya2xvYWQtPnJlcTsKIAlzdHJ1Y3QgZXhlY2xpc3RfcmluZ19jb250ZXh0ICpz
aGFkb3dfcmluZ19jb250ZXh0ID0KLQkJKHN0cnVjdCBleGVjbGlzdF9yaW5nX2NvbnRleHQgKily
cS0+aHdfY29udGV4dC0+bHJjX3JlZ19zdGF0ZTsKKwkJKHN0cnVjdCBleGVjbGlzdF9yaW5nX2Nv
bnRleHQgKilycS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZTsKIAogCXNoYWRvd19yaW5nX2NvbnRl
eHQtPmJiX3Blcl9jdHhfcHRyLnZhbCA9CiAJCShzaGFkb3dfcmluZ19jb250ZXh0LT5iYl9wZXJf
Y3R4X3B0ci52YWwgJgpAQCAtNjI4LDcgKzYyNSw3IEBAIHN0YXRpYyBpbnQgcHJlcGFyZV93b3Jr
bG9hZChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAKIAl1cGRhdGVfc2hh
ZG93X3BkcHMod29ya2xvYWQpOwogCi0Jc2V0X2NvbnRleHRfcHBndHRfZnJvbV9zaGFkb3cod29y
a2xvYWQsIHMtPnNoYWRvd1tyaW5nXS0+Z2VtX2NvbnRleHQpOworCXNldF9jb250ZXh0X3BwZ3R0
X2Zyb21fc2hhZG93KHdvcmtsb2FkLCBzLT5zaGFkb3dbcmluZ10pOwogCiAJcmV0ID0gaW50ZWxf
dmdwdV9zeW5jX29vc19wYWdlcyh3b3JrbG9hZC0+dmdwdSk7CiAJaWYgKHJldCkgewpAQCAtNzg3
LDcgKzc4NCw3IEBAIHN0YXRpYyB2b2lkIHVwZGF0ZV9ndWVzdF9jb250ZXh0KHN0cnVjdCBpbnRl
bF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IHdv
cmtsb2FkLT5yZXE7CiAJc3RydWN0IGludGVsX3ZncHUgKnZncHUgPSB3b3JrbG9hZC0+dmdwdTsK
IAlzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQgPSB2Z3B1LT5ndnQ7Ci0Jc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKmN0eF9vYmogPSBycS0+aHdfY29udGV4dC0+c3RhdGUtPm9iajsKKwlzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29iaiA9IHJxLT5jb250ZXh0LT5zdGF0ZS0+b2JqOwog
CXN0cnVjdCBleGVjbGlzdF9yaW5nX2NvbnRleHQgKnNoYWRvd19yaW5nX2NvbnRleHQ7CiAJc3Ry
dWN0IHBhZ2UgKnBhZ2U7CiAJdm9pZCAqc3JjOwpAQCAtMTIzMiw4ICsxMjI5LDYgQEAgaW50IGlu
dGVsX3ZncHVfc2V0dXBfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSkKIAlpZiAo
SVNfRVJSKGN0eCkpCiAJCXJldHVybiBQVFJfRVJSKGN0eCk7CiAKLQlpOTE1X2dlbV9jb250ZXh0
X3NldF9mb3JjZV9zaW5nbGVfc3VibWlzc2lvbihjdHgpOwotCiAJcHBndHQgPSBpOTE1X3ZtX3Rv
X3BwZ3R0KGk5MTVfZ2VtX2NvbnRleHRfZ2V0X3ZtX3JjdShjdHgpKTsKIAlpOTE1X2NvbnRleHRf
cHBndHRfcm9vdF9zYXZlKHMsIHBwZ3R0KTsKIApAQCAtMTI0OSw2ICsxMjQ0LDggQEAgaW50IGlu
dGVsX3ZncHVfc2V0dXBfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSkKIAkJCWdv
dG8gb3V0X3NoYWRvd19jdHg7CiAJCX0KIAorCQlpbnRlbF9jb250ZXh0X3NldF9zaW5nbGVfc3Vi
bWlzc2lvbihjZSk7CisKIAkJaWYgKCFVU0VTX0dVQ19TVUJNSVNTSU9OKGk5MTUpKSB7IC8qIE1h
eCByaW5nIGJ1ZmZlciBzaXplICovCiAJCQljb25zdCB1bnNpZ25lZCBpbnQgcmluZ19zaXplID0g
NTEyICogU1pfNEs7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2Vt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4IGIxNTc0YWIxMDRkNy4u
Y2UzMjc5NGVmNjgxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAgLTExNDAsOSArMTE0MCw5
IEBAIHN0YXRpYyBpbnQgX19pbnRlbF9lbmdpbmVzX3JlY29yZF9kZWZhdWx0cyhzdHJ1Y3QgaW50
ZWxfZ3QgKmd0KQogCQkJY29udGludWU7CiAKIAkJLyogV2Ugd2FudCB0byBiZSBhYmxlIHRvIHVu
YmluZCB0aGUgc3RhdGUgZnJvbSB0aGUgR0dUVCAqLwotCQlHRU1fQlVHX09OKGludGVsX2NvbnRl
eHRfaXNfcGlubmVkKHJxLT5od19jb250ZXh0KSk7CisJCUdFTV9CVUdfT04oaW50ZWxfY29udGV4
dF9pc19waW5uZWQocnEtPmNvbnRleHQpKTsKIAotCQlzdGF0ZSA9IHJxLT5od19jb250ZXh0LT5z
dGF0ZTsKKwkJc3RhdGUgPSBycS0+Y29udGV4dC0+c3RhdGU7CiAJCWlmICghc3RhdGUpCiAJCQlj
b250aW51ZTsKIApAQCAtMTE5NCw3ICsxMTk0LDcgQEAgc3RhdGljIGludCBfX2ludGVsX2VuZ2lu
ZXNfcmVjb3JkX2RlZmF1bHRzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJCWlmICghcnEpCiAJCQlj
b250aW51ZTsKIAotCQljZSA9IHJxLT5od19jb250ZXh0OworCQljZSA9IHJxLT5jb250ZXh0Owog
CQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIAkJaW50ZWxfY29udGV4dF9wdXQoY2UpOwogCX0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCmluZGV4IGU4YjY3ZjVlNTIxZC4uYjQwMTU3
Y2ZhZTE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKQEAgLTEyMjAsNyAr
MTIyMCw3IEBAIHN0YXRpYyB2b2lkIGVycm9yX3JlY29yZF9lbmdpbmVfcmVnaXN0ZXJzKHN0cnVj
dCBpOTE1X2dwdV9zdGF0ZSAqZXJyb3IsCiBzdGF0aWMgdm9pZCByZWNvcmRfcmVxdWVzdChjb25z
dCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LAogCQkJICAgc3RydWN0IGRybV9pOTE1X2Vy
cm9yX3JlcXVlc3QgKmVycSkKIHsKLQljb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4
ID0gcmVxdWVzdC0+Z2VtX2NvbnRleHQ7CisJY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCA9IHJlcXVlc3QtPmNvbnRleHQtPmdlbV9jb250ZXh0OwogCiAJZXJxLT5mbGFncyA9IHJl
cXVlc3QtPmZlbmNlLmZsYWdzOwogCWVycS0+Y29udGV4dCA9IHJlcXVlc3QtPmZlbmNlLmNvbnRl
eHQ7CkBAIC0xMjMyLDcgKzEyMzIsNyBAQCBzdGF0aWMgdm9pZCByZWNvcmRfcmVxdWVzdChjb25z
dCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LAogCWVycS0+dGFpbCA9IHJlcXVlc3QtPnRh
aWw7CiAKIAlyY3VfcmVhZF9sb2NrKCk7Ci0JZXJxLT5waWQgPSBjdHgtPnBpZCA/IHBpZF9ucihj
dHgtPnBpZCkgOiAwOworCWVycS0+cGlkID0gY3R4ICYmIGN0eC0+cGlkID8gcGlkX25yKGN0eC0+
cGlkKSA6IDA7CiAJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKQEAgLTEzMDAsNyArMTMwMCwxMCBA
QCBzdGF0aWMgdm9pZCBlcnJvcl9yZWNvcmRfZW5naW5lX2V4ZWNsaXN0cyhjb25zdCBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiBzdGF0aWMgYm9vbCByZWNvcmRfY29udGV4dChzdHJ1
Y3QgZHJtX2k5MTVfZXJyb3JfY29udGV4dCAqZSwKIAkJCSAgIGNvbnN0IHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxKQogewotCWNvbnN0IHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHggPSBycS0+
Z2VtX2NvbnRleHQ7CisJY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJxLT5j
b250ZXh0LT5nZW1fY29udGV4dDsKKworCWlmICghY3R4KQorCQlyZXR1cm4gZmFsc2U7CiAKIAlp
ZiAoY3R4LT5waWQpIHsKIAkJc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrOwpAQCAtMTQ1NCw3ICsx
NDU3LDcgQEAgZ2VtX3JlY29yZF9yaW5ncyhzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yLCBz
dHJ1Y3QgY29tcHJlc3MgKmNvbXByZXNzKQogCQljYXB0dXJlID0gcmVxdWVzdF9yZWNvcmRfdXNl
cl9ibyhyZXF1ZXN0LCBlZSwgY2FwdHVyZSk7CiAKIAkJY2FwdHVyZSA9IGNhcHR1cmVfdm1hKGNh
cHR1cmUsCi0JCQkJICAgICAgcmVxdWVzdC0+aHdfY29udGV4dC0+c3RhdGUsCisJCQkJICAgICAg
cmVxdWVzdC0+Y29udGV4dC0+c3RhdGUsCiAJCQkJICAgICAgJmVlLT5jdHgpOwogCiAJCWNhcHR1
cmUgPSBjYXB0dXJlX3ZtYShjYXB0dXJlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9wZXJmLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwppbmRleCBh
OGMyMzE4ZDNkNWUuLjZlMzViOTI1NTg4MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9wZXJmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKQEAg
LTMwNzAsNyArMzA3MCw3IEBAIHN0YXRpYyB2b2lkIGk5MTVfcGVyZl9lbmFibGVfbG9ja2VkKHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJCXN0cmVhbS0+b3BzLT5lbmFibGUoc3Ry
ZWFtKTsKIAogCWlmIChzdHJlYW0tPmhvbGRfcHJlZW1wdGlvbikKLQkJaTkxNV9nZW1fY29udGV4
dF9zZXRfbm9wcmVlbXB0KHN0cmVhbS0+Y3R4KTsKKwkJaW50ZWxfY29udGV4dF9zZXRfbm9wcmVl
bXB0KHN0cmVhbS0+cGlubmVkX2N0eCk7CiB9CiAKIC8qKgpAQCAtMzA5Niw3ICszMDk2LDcgQEAg
c3RhdGljIHZvaWQgaTkxNV9wZXJmX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0pCiAJc3RyZWFtLT5lbmFibGVkID0gZmFsc2U7CiAKIAlpZiAoc3RyZWFtLT5o
b2xkX3ByZWVtcHRpb24pCi0JCWk5MTVfZ2VtX2NvbnRleHRfY2xlYXJfbm9wcmVlbXB0KHN0cmVh
bS0+Y3R4KTsKKwkJaW50ZWxfY29udGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RyZWFtLT5waW5uZWRf
Y3R4KTsKIAogCWlmIChzdHJlYW0tPm9wcy0+ZGlzYWJsZSkKIAkJc3RyZWFtLT5vcHMtPmRpc2Fi
bGUoc3RyZWFtKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVz
dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKaW5kZXggMDAwMTFmOTUz
M2I2Li42MGY2MTc5YzJlNWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cmVxdWVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCkBAIC02
Miw2ICs2Miw4IEBAIHN0YXRpYyBjb25zdCBjaGFyICppOTE1X2ZlbmNlX2dldF9kcml2ZXJfbmFt
ZShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAogc3RhdGljIGNvbnN0IGNoYXIgKmk5MTVfZmVu
Y2VfZ2V0X3RpbWVsaW5lX25hbWUoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiB7CisJY29uc3Qg
c3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eDsKKwogCS8qCiAJICogVGhlIHRpbWVsaW5lIHN0
cnVjdCAoYXMgcGFydCBvZiB0aGUgcHBndHQgdW5kZXJuZWF0aCBhIGNvbnRleHQpCiAJICogbWF5
IGJlIGZyZWVkIHdoZW4gdGhlIHJlcXVlc3QgaXMgbm8gbG9uZ2VyIGluIHVzZSBieSB0aGUgR1BV
LgpAQCAtNzQsNyArNzYsOCBAQCBzdGF0aWMgY29uc3QgY2hhciAqaTkxNV9mZW5jZV9nZXRfdGlt
ZWxpbmVfbmFtZShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAlpZiAodGVzdF9iaXQoRE1BX0ZF
TkNFX0ZMQUdfU0lHTkFMRURfQklULCAmZmVuY2UtPmZsYWdzKSkKIAkJcmV0dXJuICJzaWduYWxl
ZCI7CiAKLQlyZXR1cm4gdG9fcmVxdWVzdChmZW5jZSktPmdlbV9jb250ZXh0LT5uYW1lID86ICJb
aTkxNV0iOworCWN0eCA9IHRvX3JlcXVlc3QoZmVuY2UpLT5jb250ZXh0LT5nZW1fY29udGV4dDsK
KwlyZXR1cm4gY3R4ICYmIGN0eC0+bmFtZSA/IGN0eC0+bmFtZSA6ICJbaTkxNV0iOwogfQogCiBz
dGF0aWMgYm9vbCBpOTE1X2ZlbmNlX3NpZ25hbGVkKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQpA
QCAtMjcyLDggKzI3NSw4IEBAIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKIAlyZW1vdmVfZnJvbV9jbGllbnQocnEpOwogCWxpc3RfZGVsKCZycS0+bGlu
ayk7CiAKLQlpbnRlbF9jb250ZXh0X2V4aXQocnEtPmh3X2NvbnRleHQpOwotCWludGVsX2NvbnRl
eHRfdW5waW4ocnEtPmh3X2NvbnRleHQpOworCWludGVsX2NvbnRleHRfZXhpdChycS0+Y29udGV4
dCk7CisJaW50ZWxfY29udGV4dF91bnBpbihycS0+Y29udGV4dCk7CiAKIAlmcmVlX2NhcHR1cmVf
bGlzdChycSk7CiAJaTkxNV9zY2hlZF9ub2RlX2ZpbmkoJnJxLT5zY2hlZCk7CkBAIC0zNzYsNyAr
Mzc5LDcgQEAgYm9vbCBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cmVxdWVzdCkKIAlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChyZXF1ZXN0KSkKIAkJZ290byB4
ZmVyOwogCi0JaWYgKGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmVkKHJlcXVlc3QtPmdlbV9jb250
ZXh0KSkKKwlpZiAoaW50ZWxfY29udGV4dF9pc19iYW5uZWQocmVxdWVzdC0+Y29udGV4dCkpCiAJ
CWk5MTVfcmVxdWVzdF9za2lwKHJlcXVlc3QsIC1FSU8pOwogCiAJLyoKQEAgLTY0Myw4ICs2NDYs
NyBAQCBfX2k5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBf
dCBnZnApCiAJCWdvdG8gZXJyX2ZyZWU7CiAKIAlycS0+aTkxNSA9IGNlLT5lbmdpbmUtPmk5MTU7
Ci0JcnEtPmh3X2NvbnRleHQgPSBjZTsKLQlycS0+Z2VtX2NvbnRleHQgPSBjZS0+Z2VtX2NvbnRl
eHQ7CisJcnEtPmNvbnRleHQgPSBjZTsKIAlycS0+ZW5naW5lID0gY2UtPmVuZ2luZTsKIAlycS0+
cmluZyA9IGNlLT5yaW5nOwogCXJxLT5leGVjdXRpb25fbWFzayA9IGNlLT5lbmdpbmUtPm1hc2s7
CkBAIC04OTksNyArOTAxLDcgQEAgaTkxNV9yZXF1ZXN0X2F3YWl0X3JlcXVlc3Qoc3RydWN0IGk5
MTVfcmVxdWVzdCAqdG8sIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmZyb20pCiAJCQkJCQkgICAgICAg
JmZyb20tPnN1Ym1pdCwKIAkJCQkJCSAgICAgICBJOTE1X0ZFTkNFX0dGUCk7CiAJfSBlbHNlIGlm
IChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXModG8tPmVuZ2luZSkgJiYKLQkJICAgdG8tPmdl
bV9jb250ZXh0LT5zY2hlZC5wcmlvcml0eSA+PSBJOTE1X1BSSU9SSVRZX05PUk1BTCkgeworCQkg
ICB0by0+Y29udGV4dC0+Z2VtX2NvbnRleHQtPnNjaGVkLnByaW9yaXR5ID49IEk5MTVfUFJJT1JJ
VFlfTk9STUFMKSB7CiAJCXJldCA9IGVtaXRfc2VtYXBob3JlX3dhaXQodG8sIGZyb20sIEk5MTVf
RkVOQ0VfR0ZQKTsKIAl9IGVsc2UgewogCQlyZXQgPSBpOTE1X3N3X2ZlbmNlX2F3YWl0X2RtYV9m
ZW5jZSgmdG8tPnN1Ym1pdCwKQEAgLTEyMjcsNyArMTIyOSw3IEBAIHZvaWQgX19pOTE1X3JlcXVl
c3RfcXVldWUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAKIHZvaWQgaTkxNV9yZXF1ZXN0X2Fk
ZChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlzdHJ1Y3QgaTkxNV9zY2hlZF9hdHRyIGF0
dHIgPSBycS0+Z2VtX2NvbnRleHQtPnNjaGVkOworCXN0cnVjdCBpOTE1X3NjaGVkX2F0dHIgYXR0
ciA9IHJxLT5jb250ZXh0LT5nZW1fY29udGV4dC0+c2NoZWQ7CiAJc3RydWN0IGludGVsX3RpbWVs
aW5lICogY29uc3QgdGwgPSBpOTE1X3JlcXVlc3RfdGltZWxpbmUocnEpOwogCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnByZXY7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cmVxdWVzdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKaW5kZXggOTY5
OTFkNjQ3NTljLi5iM2I2NTM0YWU3OTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcmVxdWVzdC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5o
CkBAIC0xMDksOSArMTA5LDggQEAgc3RydWN0IGk5MTVfcmVxdWVzdCB7CiAJICogaTkxNV9yZXF1
ZXN0X2ZyZWUoKSB3aWxsIHRoZW4gZGVjcmVtZW50IHRoZSByZWZjb3VudCBvbiB0aGUKIAkgKiBj
b250ZXh0LgogCSAqLwotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpnZW1fY29udGV4dDsKIAlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKmh3
X2NvbnRleHQ7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNvbnRleHQ7CiAJc3RydWN0IGludGVs
X3JpbmcgKnJpbmc7CiAJc3RydWN0IGludGVsX3RpbWVsaW5lIF9fcmN1ICp0aW1lbGluZTsKIAlz
dHJ1Y3QgbGlzdF9oZWFkIHNpZ25hbF9saW5rOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9zY2hlZHVsZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1
bGVyLmMKaW5kZXggZDJlZGI1MjdkY2I4Li5iZjAyM2I5YzA2ZmYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9zY2hlZHVsZXIuYwpAQCAtMjExLDcgKzIxMSw3IEBAIHN0YXRpYyB2b2lkIGtpY2tf
c3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJICogSWYgd2UgYXJl
IGFscmVhZHkgdGhlIGN1cnJlbnRseSBleGVjdXRpbmcgY29udGV4dCwgZG9uJ3QKIAkgKiBib3Ro
ZXIgZXZhbHVhdGluZyBpZiB3ZSBzaG91bGQgcHJlZW1wdCBvdXJzZWx2ZXMuCiAJICovCi0JaWYg
KGluZmxpZ2h0LT5od19jb250ZXh0ID09IHJxLT5od19jb250ZXh0KQorCWlmIChpbmZsaWdodC0+
Y29udGV4dCA9PSBycS0+Y29udGV4dCkKIAkJcmV0dXJuOwogCiAJZW5naW5lLT5leGVjbGlzdHMu
cXVldWVfcHJpb3JpdHlfaGludCA9IHByaW87Ci0tIAoyLjI0LjAucmMxCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0
CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

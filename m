Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 9DEC047AA6
	for <lists+intel-gfx@lfdr.de>; Mon, 17 Jun 2019 09:19:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 66378891C5;
	Mon, 17 Jun 2019 07:19:38 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E3BE989183
 for <intel-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 07:19:36 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16923048-1500050 
 for multiple; Mon, 17 Jun 2019 08:19:14 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 17 Jun 2019 08:19:02 +0100
Message-Id: <20190617071912.20256-12-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190617071912.20256-1-chris@chris-wilson.co.uk>
References: <20190617071912.20256-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 12/22] dma-fence: Refactor signaling for manual
 invocation
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: matthew.auld@intel.com, mika.kuoppala@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TW92ZSB0aGUgZHVwbGljYXRlZCBjb2RlIHdpdGhpbiBkbWEtZmVuY2UuYyBpbnRvIHRoZSBoZWFk
ZXIgZm9yIHdpZGVyCnJldXNlLiBJbiB0aGUgcHJvY2VzcyBhcHBseSBhIHNtYWxsIG1pY3JvLW9w
dGltaXNhdGlvbiB0byBvbmx5IHBydW5lIHRoZQpmZW5jZS0+Y2JfbGlzdCBvbmNlIHJhdGhlciB0
aGFuIHVzZSBsaXN0X2RlbCBvbiBldmVyeSBlbnRyeS4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdp
bHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRr
by51cnN1bGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUgICAgICAg
ICAgICAgICAgICAgIHwgIDEwICstCiBkcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMg
ICAgICAgICAgIHwgIDI4ICsrKwogZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS5jICAgICAgICAg
ICAgICAgICB8ICAzMyArLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1
bWJzLmMgfCAgMzIgKy0tCiBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS1pbXBsLmggICAgICAgICAg
ICAgIHwgIDg0ICsrKysrKysKIGluY2x1ZGUvbGludXgvZG1hLWZlbmNlLXR5cGVzLmggICAgICAg
ICAgICAgfCAyNTIgKysrKysrKysrKysrKysrKysrKysKIGluY2x1ZGUvbGludXgvZG1hLWZlbmNl
LmggICAgICAgICAgICAgICAgICAgfCAyMjIgKy0tLS0tLS0tLS0tLS0tLS0KIDcgZmlsZXMgY2hh
bmdlZCwgMzgxIGluc2VydGlvbnMoKyksIDI4MCBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBkcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMKIGNyZWF0ZSBtb2RlIDEwMDY0
NCBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS1pbXBsLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNs
dWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVm
L01ha2VmaWxlIGIvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCmluZGV4IGU4YzczMTBjYjgwMC4u
NjVjNDM3NzhlNTcxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKKysrIGIv
ZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCkBAIC0xLDYgKzEsMTIgQEAKICMgU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQotb2JqLXkgOj0gZG1hLWJ1Zi5vIGRtYS1mZW5jZS5v
IGRtYS1mZW5jZS1hcnJheS5vIGRtYS1mZW5jZS1jaGFpbi5vIFwKLQkgcmVzZXJ2YXRpb24ubyBz
ZXFuby1mZW5jZS5vCitvYmoteSA6PSBcCisJZG1hLWJ1Zi5vIFwKKwlkbWEtZmVuY2UubyBcCisJ
ZG1hLWZlbmNlLWFycmF5Lm8gXAorCWRtYS1mZW5jZS1jaGFpbi5vIFwKKwlkbWEtZmVuY2UtdHJh
Y2UubyBcCisJcmVzZXJ2YXRpb24ubyBcCisJc2Vxbm8tZmVuY2Uubwogb2JqLSQoQ09ORklHX1NZ
TkNfRklMRSkJCSs9IHN5bmNfZmlsZS5vCiBvYmotJChDT05GSUdfU1dfU1lOQykJCSs9IHN3X3N5
bmMubyBzeW5jX2RlYnVnLm8KIG9iai0kKENPTkZJR19VRE1BQlVGKQkJKz0gdWRtYWJ1Zi5vCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMgYi9kcml2ZXJzL2Rt
YS1idWYvZG1hLWZlbmNlLXRyYWNlLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMDAwLi5lYjZmMjgyYmU0YzAKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2RtYS1idWYv
ZG1hLWZlbmNlLXRyYWNlLmMKQEAgLTAsMCArMSwyOCBAQAorLyoKKyAqIEZlbmNlIG1lY2hhbmlz
bSBmb3IgZG1hLWJ1ZiBhbmQgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisg
KgorICogQ29weXJpZ2h0IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykg
MjAxMiBUZXhhcyBJbnN0cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJv
YmRjbGFya0BnbWFpbC5jb20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9y
c3RAY2Fub25pY2FsLmNvbT4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsg
eW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdAorICogdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIgYXMgcHVibGlz
aGVkIGJ5CisgKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLgorICoKKyAqIFRoaXMgcHJv
Z3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBi
dXQgV0lUSE9VVAorICogQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIg
UFVSUE9TRS4gIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yCisgKiBtb3Jl
IGRldGFpbHMuCisgKi8KKworI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS10eXBlcy5oPgorCisj
ZGVmaW5lIENSRUFURV9UUkFDRV9QT0lOVFMKKyNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2Zl
bmNlLmg+CisKK0VYUE9SVF9UUkFDRVBPSU5UX1NZTUJPTChkbWFfZmVuY2VfZW1pdCk7CitFWFBP
UlRfVFJBQ0VQT0lOVF9TWU1CT0woZG1hX2ZlbmNlX2VuYWJsZV9zaWduYWwpOworRVhQT1JUX1RS
QUNFUE9JTlRfU1lNQk9MKGRtYV9mZW5jZV9zaWduYWxlZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2RtYS1idWYvZG1hLWZlbmNlLmMgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLmMKaW5kZXgg
NTlhYzk2ZWM3YmE4Li4wMjdhNmE4OTRhYmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZG1hLWJ1Zi9k
bWEtZmVuY2UuYworKysgYi9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLmMKQEAgLTE0LDE1ICsx
NCw5IEBACiAjaW5jbHVkZSA8bGludXgvZXhwb3J0Lmg+CiAjaW5jbHVkZSA8bGludXgvYXRvbWlj
Lmg+CiAjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZl
bmNlLWltcGwuaD4KICNpbmNsdWRlIDxsaW51eC9zY2hlZC9zaWduYWwuaD4KIAotI2RlZmluZSBD
UkVBVEVfVFJBQ0VfUE9JTlRTCi0jaW5jbHVkZSA8dHJhY2UvZXZlbnRzL2RtYV9mZW5jZS5oPgot
Ci1FWFBPUlRfVFJBQ0VQT0lOVF9TWU1CT0woZG1hX2ZlbmNlX2VtaXQpOwotRVhQT1JUX1RSQUNF
UE9JTlRfU1lNQk9MKGRtYV9mZW5jZV9lbmFibGVfc2lnbmFsKTsKLUVYUE9SVF9UUkFDRVBPSU5U
X1NZTUJPTChkbWFfZmVuY2Vfc2lnbmFsZWQpOwotCiBzdGF0aWMgREVGSU5FX1NQSU5MT0NLKGRt
YV9mZW5jZV9zdHViX2xvY2spOwogc3RhdGljIHN0cnVjdCBkbWFfZmVuY2UgZG1hX2ZlbmNlX3N0
dWI7CiAKQEAgLTEyOCw3ICsxMjIsNiBAQCBFWFBPUlRfU1lNQk9MKGRtYV9mZW5jZV9jb250ZXh0
X2FsbG9jKTsKICAqLwogaW50IGRtYV9mZW5jZV9zaWduYWxfbG9ja2VkKHN0cnVjdCBkbWFfZmVu
Y2UgKmZlbmNlKQogewotCXN0cnVjdCBkbWFfZmVuY2VfY2IgKmN1ciwgKnRtcDsKIAlpbnQgcmV0
ID0gMDsKIAogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoZmVuY2UtPmxvY2spOwpAQCAtMTM2LDcgKzEy
OSw3IEBAIGludCBkbWFfZmVuY2Vfc2lnbmFsX2xvY2tlZChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSkKIAlpZiAoV0FSTl9PTighZmVuY2UpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWlmICh0ZXN0
X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFncykp
IHsKKwlpZiAoIV9fZG1hX2ZlbmNlX3NpZ25hbChmZW5jZSkpIHsKIAkJcmV0ID0gLUVJTlZBTDsK
IAogCQkvKgpAQCAtMTQ0LDE1ICsxMzcsMTAgQEAgaW50IGRtYV9mZW5jZV9zaWduYWxfbG9ja2Vk
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQogCQkgKiBzdGlsbCBydW4gdGhyb3VnaCBhbGwgY2Fs
bGJhY2tzCiAJCSAqLwogCX0gZWxzZSB7Ci0JCWZlbmNlLT50aW1lc3RhbXAgPSBrdGltZV9nZXQo
KTsKLQkJc2V0X2JpdChETUFfRkVOQ0VfRkxBR19USU1FU1RBTVBfQklULCAmZmVuY2UtPmZsYWdz
KTsKLQkJdHJhY2VfZG1hX2ZlbmNlX3NpZ25hbGVkKGZlbmNlKTsKKwkJX19kbWFfZmVuY2Vfc2ln
bmFsX190aW1lc3RhbXAoZmVuY2UsIGt0aW1lX2dldCgpKTsKIAl9CiAKLQlsaXN0X2Zvcl9lYWNo
X2VudHJ5X3NhZmUoY3VyLCB0bXAsICZmZW5jZS0+Y2JfbGlzdCwgbm9kZSkgewotCQlsaXN0X2Rl
bF9pbml0KCZjdXItPm5vZGUpOwotCQljdXItPmZ1bmMoZmVuY2UsIGN1cik7Ci0JfQorCV9fZG1h
X2ZlbmNlX3NpZ25hbF9fbm90aWZ5KGZlbmNlKTsKIAlyZXR1cm4gcmV0OwogfQogRVhQT1JUX1NZ
TUJPTChkbWFfZmVuY2Vfc2lnbmFsX2xvY2tlZCk7CkBAIC0xNzcsMjEgKzE2NSwxNCBAQCBpbnQg
ZG1hX2ZlbmNlX3NpZ25hbChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAlpZiAoIWZlbmNlKQog
CQlyZXR1cm4gLUVJTlZBTDsKIAotCWlmICh0ZXN0X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFH
X1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFncykpCisJaWYgKCFfX2RtYV9mZW5jZV9zaWduYWwo
ZmVuY2UpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWZlbmNlLT50aW1lc3RhbXAgPSBrdGltZV9n
ZXQoKTsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQsICZmZW5jZS0+Zmxh
Z3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7CisJX19kbWFfZmVuY2Vfc2ln
bmFsX190aW1lc3RhbXAoZmVuY2UsIGt0aW1lX2dldCgpKTsKIAogCWlmICh0ZXN0X2JpdChETUFf
RkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFMX0JJVCwgJmZlbmNlLT5mbGFncykpIHsKLQkJc3RydWN0
IGRtYV9mZW5jZV9jYiAqY3VyLCAqdG1wOwotCiAJCXNwaW5fbG9ja19pcnFzYXZlKGZlbmNlLT5s
b2NrLCBmbGFncyk7Ci0JCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShjdXIsIHRtcCwgJmZlbmNl
LT5jYl9saXN0LCBub2RlKSB7Ci0JCQlsaXN0X2RlbF9pbml0KCZjdXItPm5vZGUpOwotCQkJY3Vy
LT5mdW5jKGZlbmNlLCBjdXIpOwotCQl9CisJCV9fZG1hX2ZlbmNlX3NpZ25hbF9fbm90aWZ5KGZl
bmNlKTsKIAkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZShmZW5jZS0+bG9jaywgZmxhZ3MpOwogCX0K
IAlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Jy
ZWFkY3J1bWJzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5j
CmluZGV4IGMwOTJiZGY1ZjBiZi4uZjliYTQzYTBmNGQ4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMKQEAgLTIyLDggKzIyLDcgQEAKICAqCiAgKi8KIAot
I2luY2x1ZGUgPGxpbnV4L2t0aHJlYWQuaD4KLSNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2Zl
bmNlLmg+CisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLWltcGwuaD4KICNpbmNsdWRlIDx1YXBp
L2xpbnV4L3NjaGVkL3R5cGVzLmg+CiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgpAQCAtOTcsMzUg
Kzk2LDYgQEAgY2hlY2tfc2lnbmFsX29yZGVyKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyBib29sCi1f
X2RtYV9mZW5jZV9zaWduYWwoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCi17Ci0JcmV0dXJuICF0
ZXN0X2FuZF9zZXRfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgJmZlbmNlLT5mbGFn
cyk7Ci19Ci0KLXN0YXRpYyB2b2lkCi1fX2RtYV9mZW5jZV9zaWduYWxfX3RpbWVzdGFtcChzdHJ1
Y3QgZG1hX2ZlbmNlICpmZW5jZSwga3RpbWVfdCB0aW1lc3RhbXApCi17Ci0JZmVuY2UtPnRpbWVz
dGFtcCA9IHRpbWVzdGFtcDsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQs
ICZmZW5jZS0+ZmxhZ3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7Ci19Ci0K
LXN0YXRpYyB2b2lkCi1fX2RtYV9mZW5jZV9zaWduYWxfX25vdGlmeShzdHJ1Y3QgZG1hX2ZlbmNl
ICpmZW5jZSkKLXsKLQlzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjdXIsICp0bXA7Ci0KLQlsb2NrZGVw
X2Fzc2VydF9oZWxkKGZlbmNlLT5sb2NrKTsKLQlsb2NrZGVwX2Fzc2VydF9pcnFzX2Rpc2FibGVk
KCk7Ci0KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoY3VyLCB0bXAsICZmZW5jZS0+Y2JfbGlz
dCwgbm9kZSkgewotCQlJTklUX0xJU1RfSEVBRCgmY3VyLT5ub2RlKTsKLQkJY3VyLT5mdW5jKGZl
bmNlLCBjdXIpOwotCX0KLQlJTklUX0xJU1RfSEVBRCgmZmVuY2UtPmNiX2xpc3QpOwotfQotCiB2
b2lkIGludGVsX2VuZ2luZV9icmVhZGNydW1ic19pcnEoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9ICZlbmdpbmUtPmJyZWFk
Y3J1bWJzOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9kbWEtZmVuY2UtaW1wbC5oIGIvaW5j
bHVkZS9saW51eC9kbWEtZmVuY2UtaW1wbC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAwMC4uYWE0NGViMDMxNjkzCi0tLSAvZGV2L251bGwKKysrIGIvaW5jbHVkZS9saW51
eC9kbWEtZmVuY2UtaW1wbC5oCkBAIC0wLDAgKzEsODQgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wLW9ubHkgKi8KKy8qCisgKiBGZW5jZSBtZWNoYW5pc20gZm9yIGRtYS1i
dWYgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisgKgorICogQ29weXJpZ2h0
IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykgMjAxMiBUZXhhcyBJbnN0
cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJvYmRjbGFya0BnbWFpbC5j
b20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAY2Fub25pY2FsLmNv
bT4KKyAqLworCisjaWZuZGVmIF9fTElOVVhfRE1BX0ZFTkNFX0lNUExfSAorI2RlZmluZSBfX0xJ
TlVYX0RNQV9GRU5DRV9JTVBMX0gKKworI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS5oPgorI2lu
Y2x1ZGUgPGxpbnV4L2xvY2tkZXAuaD4KKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5jbHVk
ZSA8bGludXgva3RpbWUuaD4KKworI2luY2x1ZGUgPHRyYWNlL2V2ZW50cy9kbWFfZmVuY2UuaD4K
KworLyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWw6IE1hcmsgYSBmZW5jZSBhcyBzaWduYWxlZAor
ICogQGZlbmNlOiB0aGUgZG1hIGZlbmNlIHRvIG1hcmsKKyAqCisgKiBUaGUgZmlyc3Qgc3RlcCBv
ZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGltcGxlbWVudGF0aW9uIGlzIHRvIGF0b21pY2FsbHkK
KyAqIG1hcmsgdGhlIGZlbmNlIGFzIHNpZ25hbGVkLgorICoKKyAqIFJldHVybnM6IHRydWUgaWYg
dGhlIGZlbmNlIHdhcyBub3QgcHJldmlvdXNseSBzaWduYWxlZCwgZmFsc2UgaWYgaXQgd2FzCisg
KiBhbHJlYWR5IHNpZ25hbGVkLgorICovCitzdGF0aWMgaW5saW5lIGJvb2wKK19fZG1hX2ZlbmNl
X3NpZ25hbChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKK3sKKwlyZXR1cm4gIXRlc3RfYW5kX3Nl
dF9iaXQoRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklULCAmZmVuY2UtPmZsYWdzKTsKK30KKwor
LyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWxfX3RpbWVzdGFtcDogc2V0cyB0aGUgc2lnbmFsaW5n
IHRpbWVzdGFtcAorICogQGZlbmNlOiB0aGUgZG1hIGZlbmNlCisgKiBAdGltZXN0YW1wOiB0aGUg
bW9ub3RvbmljIHRpbWVzdGFtcCAoZS5nLiBrdGltZV9nZXRfbW9ubygpKQorICoKKyAqIFRoZSBz
ZWNvbmQgc3RlcCBvZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGltcGxlbWVudGF0aW9uIGl0IHRv
IHJlY29yZAorICogdGhlIHNpZ2FubGluZyB0aW1lc3RhbXAuCisgKgorICogVGhlIGRtYS1mZW5j
ZSBzdG9yZXMgYSB0aW1lc3RhbXAgb2Ygd2hlbiBpdCB3YXMgc2lnbmFsZWQgZm9yIGluc3BlY3Rp
b24KKyAqIGJ5IHVzZXJzcGFjZS4gVGhpcyB0aW1lc3RhbXAgaXMgdHlwaWNhbGx5IHRoZSBDUFUg
dGltZSBhdCB3aGljaCB0aGUKKyAqIHNpZ25hbCB3YXMgcmFpc2VkLCBidXQgY291bGQgYmUgYSBI
VyB0aW1lc3RhbXAgZ2VuZXJhdGVkIGJ5IHRoZSBldmVudAorICogaXRzZWxmLiBFaXRoZXIgd2F5
LCBpdCBtdXN0IGJlIHNldCBvbiB0aGUgc2lnbmFsZWQgZmVuY2UgYmVmb3JlCisgKiBjYWxsYmFj
a3MgYXJlIG5vdGlmaWVkLgorICovCitzdGF0aWMgaW5saW5lIHZvaWQKK19fZG1hX2ZlbmNlX3Np
Z25hbF9fdGltZXN0YW1wKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBrdGltZV90IHRpbWVzdGFt
cCkKK3sKKwlmZW5jZS0+dGltZXN0YW1wID0gdGltZXN0YW1wOworCXNldF9iaXQoRE1BX0ZFTkNF
X0ZMQUdfVElNRVNUQU1QX0JJVCwgJmZlbmNlLT5mbGFncyk7CisJdHJhY2VfZG1hX2ZlbmNlX3Np
Z25hbGVkKGZlbmNlKTsKK30KKworLyoqCisgKiBfX2RtYV9mZW5jZV9zaWduYWxfX25vdGlmeTog
bm90aWZ5IG9ic2VydmVycyBvZiB0aGUgc2lnbmFsIGV2ZW50CisgKiBAZmVuY2U6IHRoZSBkbWEg
ZmVuY2UKKyAqCisgKiBUaGUgZmluYWwgc3RlcCBvZiB0aGUgZG1hX2ZlbmNlX3NpZ25hbCgpIGlt
cGxlbWVudGF0aW9uIGlzIHRvIG5vdGlmeQorICogYWxsIG9ic2VydmVycyAoZG1hX2ZlbmNlX2Fk
ZF9jYWxsYmFjaygpKSBvZiB0aGUgc2lnbmFsIGV2ZW50LiBUaGlzIG11c3QKKyAqIGJlIGNhbGxl
ZCB3aXRoIHRoZSBmZW5jZS0+bG9jayBhbHJlYWR5IGhlbGQgYW5kIGlycXNvZmYuCisgKi8KK3N0
YXRpYyBpbmxpbmUgdm9pZAorX19kbWFfZmVuY2Vfc2lnbmFsX19ub3RpZnkoc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2UpCit7CisJc3RydWN0IGRtYV9mZW5jZV9jYiAqY3VyLCAqdG1wOworCisJbG9j
a2RlcF9hc3NlcnRfaGVsZChmZW5jZS0+bG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaXJxc19kaXNh
YmxlZCgpOworCisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGN1ciwgdG1wLCAmZmVuY2UtPmNi
X2xpc3QsIG5vZGUpIHsKKwkJSU5JVF9MSVNUX0hFQUQoJmN1ci0+bm9kZSk7CisJCWN1ci0+ZnVu
YyhmZW5jZSwgY3VyKTsKKwl9CisJSU5JVF9MSVNUX0hFQUQoJmZlbmNlLT5jYl9saXN0KTsKK30K
KworI2VuZGlmIC8qIF9fTElOVVhfRE1BX0ZFTkNFX0lNUExfSCAqLwpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9saW51eC9kbWEtZmVuY2UtdHlwZXMuaCBiL2luY2x1ZGUvbGludXgvZG1hLWZlbmNlLXR5
cGVzLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi41MmY0OGRlY2Yy
M2QKLS0tIC9kZXYvbnVsbAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oCkBA
IC0wLDAgKzEsMjUyIEBACisvKgorICogRmVuY2UgbWVjaGFuaXNtIGZvciBkbWEtYnVmIHRvIGFs
bG93IGZvciBhc3luY2hyb25vdXMgZG1hIGFjY2VzcworICoKKyAqIENvcHlyaWdodCAoQykgMjAx
MiBDYW5vbmljYWwgTHRkCisgKiBDb3B5cmlnaHQgKEMpIDIwMTIgVGV4YXMgSW5zdHJ1bWVudHMK
KyAqCisgKiBBdXRob3JzOgorICogUm9iIENsYXJrIDxyb2JkY2xhcmtAZ21haWwuY29tPgorICog
TWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGNhbm9uaWNhbC5jb20+CisgKgor
ICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0
IGFuZC9vciBtb2RpZnkgaXQKKyAqIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UgdmVyc2lvbiAyIGFzIHB1Ymxpc2hlZCBieQorICogdGhlIEZyZWUgU29m
dHdhcmUgRm91bmRhdGlvbi4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4g
dGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQKKyAqIEFOWSBXQVJS
QU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElU
WSBvcgorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVSBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvcgorICogbW9yZSBkZXRhaWxzLgorICovCisKKyNpZm5k
ZWYgX19MSU5VWF9ETUFfRkVOQ0VfVFlQRVNfSAorI2RlZmluZSBfX0xJTlVYX0RNQV9GRU5DRV9U
WVBFU19ICisKKyNpbmNsdWRlIDxsaW51eC9saXN0Lmg+CisjaW5jbHVkZSA8bGludXgva3JlZi5o
PgorI2luY2x1ZGUgPGxpbnV4L2t0aW1lLmg+CisjaW5jbHVkZSA8bGludXgvcmN1cGRhdGUuaD4K
KyNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisK
K3N0cnVjdCBkbWFfZmVuY2U7CitzdHJ1Y3QgZG1hX2ZlbmNlX29wczsKK3N0cnVjdCBkbWFfZmVu
Y2VfY2I7CisKKy8qKgorICogc3RydWN0IGRtYV9mZW5jZSAtIHNvZnR3YXJlIHN5bmNocm9uaXph
dGlvbiBwcmltaXRpdmUKKyAqIEByZWZjb3VudDogcmVmY291bnQgZm9yIHRoaXMgZmVuY2UKKyAq
IEBvcHM6IGRtYV9mZW5jZV9vcHMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgZmVuY2UKKyAqIEByY3U6
IHVzZWQgZm9yIHJlbGVhc2luZyBmZW5jZSB3aXRoIGtmcmVlX3JjdQorICogQGNiX2xpc3Q6IGxp
c3Qgb2YgYWxsIGNhbGxiYWNrcyB0byBjYWxsCisgKiBAbG9jazogc3Bpbl9sb2NrX2lycXNhdmUg
dXNlZCBmb3IgbG9ja2luZworICogQGNvbnRleHQ6IGV4ZWN1dGlvbiBjb250ZXh0IHRoaXMgZmVu
Y2UgYmVsb25ncyB0bywgcmV0dXJuZWQgYnkKKyAqICAgICAgICAgICBkbWFfZmVuY2VfY29udGV4
dF9hbGxvYygpCisgKiBAc2Vxbm86IHRoZSBzZXF1ZW5jZSBudW1iZXIgb2YgdGhpcyBmZW5jZSBp
bnNpZGUgdGhlIGV4ZWN1dGlvbiBjb250ZXh0LAorICogY2FuIGJlIGNvbXBhcmVkIHRvIGRlY2lk
ZSB3aGljaCBmZW5jZSB3b3VsZCBiZSBzaWduYWxlZCBsYXRlci4KKyAqIEBmbGFnczogQSBtYXNr
IG9mIERNQV9GRU5DRV9GTEFHXyogZGVmaW5lZCBiZWxvdworICogQHRpbWVzdGFtcDogVGltZXN0
YW1wIHdoZW4gdGhlIGZlbmNlIHdhcyBzaWduYWxlZC4KKyAqIEBlcnJvcjogT3B0aW9uYWwsIG9u
bHkgdmFsaWQgaWYgPCAwLCBtdXN0IGJlIHNldCBiZWZvcmUgY2FsbGluZworICogZG1hX2ZlbmNl
X3NpZ25hbCwgaW5kaWNhdGVzIHRoYXQgdGhlIGZlbmNlIGhhcyBjb21wbGV0ZWQgd2l0aCBhbiBl
cnJvci4KKyAqCisgKiB0aGUgZmxhZ3MgbWVtYmVyIG11c3QgYmUgbWFuaXB1bGF0ZWQgYW5kIHJl
YWQgdXNpbmcgdGhlIGFwcHJvcHJpYXRlCisgKiBhdG9taWMgb3BzIChiaXRfKiksIHNvIHRha2lu
ZyB0aGUgc3BpbmxvY2sgd2lsbCBub3QgYmUgbmVlZGVkIG1vc3QKKyAqIG9mIHRoZSB0aW1lLgor
ICoKKyAqIERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCAtIGZlbmNlIGlzIGFscmVhZHkgc2ln
bmFsZWQKKyAqIERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQgLSB0aW1lc3RhbXAgcmVjb3Jk
ZWQgZm9yIGZlbmNlIHNpZ25hbGluZworICogRE1BX0ZFTkNFX0ZMQUdfRU5BQkxFX1NJR05BTF9C
SVQgLSBlbmFibGVfc2lnbmFsaW5nIG1pZ2h0IGhhdmUgYmVlbiBjYWxsZWQKKyAqIERNQV9GRU5D
RV9GTEFHX1VTRVJfQklUUyAtIHN0YXJ0IG9mIHRoZSB1bnVzZWQgYml0cywgY2FuIGJlIHVzZWQg
YnkgdGhlCisgKiBpbXBsZW1lbnRlciBvZiB0aGUgZmVuY2UgZm9yIGl0cyBvd24gcHVycG9zZXMu
IENhbiBiZSB1c2VkIGluIGRpZmZlcmVudAorICogd2F5cyBieSBkaWZmZXJlbnQgZmVuY2UgaW1w
bGVtZW50ZXJzLCBzbyBkbyBub3QgcmVseSBvbiB0aGlzLgorICoKKyAqIFNpbmNlIGF0b21pYyBi
aXRvcHMgYXJlIHVzZWQsIHRoaXMgaXMgbm90IGd1YXJhbnRlZWQgdG8gYmUgdGhlIGNhc2UuCisg
KiBQYXJ0aWN1bGFybHksIGlmIHRoZSBiaXQgd2FzIHNldCwgYnV0IGRtYV9mZW5jZV9zaWduYWwg
d2FzIGNhbGxlZCByaWdodAorICogYmVmb3JlIHRoaXMgYml0IHdhcyBzZXQsIGl0IHdvdWxkIGhh
dmUgYmVlbiBhYmxlIHRvIHNldCB0aGUKKyAqIERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwg
YmVmb3JlIGVuYWJsZV9zaWduYWxpbmcgd2FzIGNhbGxlZC4KKyAqIEFkZGluZyBhIGNoZWNrIGZv
ciBETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQgYWZ0ZXIgc2V0dGluZworICogRE1BX0ZFTkNF
X0ZMQUdfRU5BQkxFX1NJR05BTF9CSVQgY2xvc2VzIHRoaXMgcmFjZSwgYW5kIG1ha2VzIHN1cmUg
dGhhdAorICogYWZ0ZXIgZG1hX2ZlbmNlX3NpZ25hbCB3YXMgY2FsbGVkLCBhbnkgZW5hYmxlX3Np
Z25hbGluZyBjYWxsIHdpbGwgaGF2ZSBlaXRoZXIKKyAqIGJlZW4gY29tcGxldGVkLCBvciBuZXZl
ciBjYWxsZWQgYXQgYWxsLgorICovCitzdHJ1Y3QgZG1hX2ZlbmNlIHsKKwlzdHJ1Y3Qga3JlZiBy
ZWZjb3VudDsKKwljb25zdCBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAqb3BzOworCXN0cnVjdCByY3Vf
aGVhZCByY3U7CisJc3RydWN0IGxpc3RfaGVhZCBjYl9saXN0OworCXNwaW5sb2NrX3QgKmxvY2s7
CisJdTY0IGNvbnRleHQ7CisJdTY0IHNlcW5vOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJa3Rp
bWVfdCB0aW1lc3RhbXA7CisJaW50IGVycm9yOworfTsKKworZW51bSBkbWFfZmVuY2VfZmxhZ19i
aXRzIHsKKwlETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQsCisJRE1BX0ZFTkNFX0ZMQUdfVElN
RVNUQU1QX0JJVCwKKwlETUFfRkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFMX0JJVCwKKwlETUFfRkVO
Q0VfRkxBR19VU0VSX0JJVFMsIC8qIG11c3QgYWx3YXlzIGJlIGxhc3QgbWVtYmVyICovCit9Owor
Cit0eXBlZGVmIHZvaWQgKCpkbWFfZmVuY2VfZnVuY190KShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSwKKwkJCQkgc3RydWN0IGRtYV9mZW5jZV9jYiAqY2IpOworCisvKioKKyAqIHN0cnVjdCBkbWFf
ZmVuY2VfY2IgLSBjYWxsYmFjayBmb3IgZG1hX2ZlbmNlX2FkZF9jYWxsYmFjaygpCisgKiBAbm9k
ZTogdXNlZCBieSBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkgdG8gYXBwZW5kIHRoaXMgc3RydWN0
IHRvIGZlbmNlOjpjYl9saXN0CisgKiBAZnVuYzogZG1hX2ZlbmNlX2Z1bmNfdCB0byBjYWxsCisg
KgorICogVGhpcyBzdHJ1Y3Qgd2lsbCBiZSBpbml0aWFsaXplZCBieSBkbWFfZmVuY2VfYWRkX2Nh
bGxiYWNrKCksIGFkZGl0aW9uYWwKKyAqIGRhdGEgY2FuIGJlIHBhc3NlZCBhbG9uZyBieSBlbWJl
ZGRpbmcgZG1hX2ZlbmNlX2NiIGluIGFub3RoZXIgc3RydWN0LgorICovCitzdHJ1Y3QgZG1hX2Zl
bmNlX2NiIHsKKwlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7CisJZG1hX2ZlbmNlX2Z1bmNfdCBmdW5j
OworfTsKKworLyoqCisgKiBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAtIG9wZXJhdGlvbnMgaW1wbGVt
ZW50ZWQgZm9yIGZlbmNlCisgKgorICovCitzdHJ1Y3QgZG1hX2ZlbmNlX29wcyB7CisJLyoqCisJ
ICogQHVzZV82NGJpdF9zZXFubzoKKwkgKgorCSAqIFRydWUgaWYgdGhpcyBkbWFfZmVuY2UgaW1w
bGVtZW50YXRpb24gdXNlcyA2NGJpdCBzZXFubywgZmFsc2UKKwkgKiBvdGhlcndpc2UuCisJICov
CisJYm9vbCB1c2VfNjRiaXRfc2Vxbm87CisKKwkvKioKKwkgKiBAZ2V0X2RyaXZlcl9uYW1lOgor
CSAqCisJICogUmV0dXJucyB0aGUgZHJpdmVyIG5hbWUuIFRoaXMgaXMgYSBjYWxsYmFjayB0byBh
bGxvdyBkcml2ZXJzIHRvCisJICogY29tcHV0ZSB0aGUgbmFtZSBhdCBydW50aW1lLCB3aXRob3V0
IGhhdmluZyBpdCB0byBzdG9yZSBwZXJtYW5lbnRseQorCSAqIGZvciBlYWNoIGZlbmNlLCBvciBi
dWlsZCBhIGNhY2hlIG9mIHNvbWUgc29ydC4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgbWFu
ZGF0b3J5LgorCSAqLworCWNvbnN0IGNoYXIgKiAoKmdldF9kcml2ZXJfbmFtZSkoc3RydWN0IGRt
YV9mZW5jZSAqZmVuY2UpOworCisJLyoqCisJICogQGdldF90aW1lbGluZV9uYW1lOgorCSAqCisJ
ICogUmV0dXJuIHRoZSBuYW1lIG9mIHRoZSBjb250ZXh0IHRoaXMgZmVuY2UgYmVsb25ncyB0by4g
VGhpcyBpcyBhCisJICogY2FsbGJhY2sgdG8gYWxsb3cgZHJpdmVycyB0byBjb21wdXRlIHRoZSBu
YW1lIGF0IHJ1bnRpbWUsIHdpdGhvdXQKKwkgKiBoYXZpbmcgaXQgdG8gc3RvcmUgcGVybWFuZW50
bHkgZm9yIGVhY2ggZmVuY2UsIG9yIGJ1aWxkIGEgY2FjaGUgb2YKKwkgKiBzb21lIHNvcnQuCisJ
ICoKKwkgKiBUaGlzIGNhbGxiYWNrIGlzIG1hbmRhdG9yeS4KKwkgKi8KKwljb25zdCBjaGFyICog
KCpnZXRfdGltZWxpbmVfbmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpOworCisJLyoqCisJ
ICogQGVuYWJsZV9zaWduYWxpbmc6CisJICoKKwkgKiBFbmFibGUgc29mdHdhcmUgc2lnbmFsaW5n
IG9mIGZlbmNlLgorCSAqCisJICogRm9yIGZlbmNlIGltcGxlbWVudGF0aW9ucyB0aGF0IGhhdmUg
dGhlIGNhcGFiaWxpdHkgZm9yIGh3LT5odworCSAqIHNpZ25hbGluZywgdGhleSBjYW4gaW1wbGVt
ZW50IHRoaXMgb3AgdG8gZW5hYmxlIHRoZSBuZWNlc3NhcnkKKwkgKiBpbnRlcnJ1cHRzLCBvciBp
bnNlcnQgY29tbWFuZHMgaW50byBjbWRzdHJlYW0sIGV0YywgdG8gYXZvaWQgdGhlc2UKKwkgKiBj
b3N0bHkgb3BlcmF0aW9ucyBmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJlIG9ubHkgaHctPmh3CisJ
ICogc3luY2hyb25pemF0aW9uIGlzIHJlcXVpcmVkLiAgVGhpcyBpcyBjYWxsZWQgaW4gdGhlIGZp
cnN0CisJICogZG1hX2ZlbmNlX3dhaXQoKSBvciBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkgcGF0
aCB0byBsZXQgdGhlIGZlbmNlCisJICogaW1wbGVtZW50YXRpb24ga25vdyB0aGF0IHRoZXJlIGlz
IGFub3RoZXIgZHJpdmVyIHdhaXRpbmcgb24gdGhlCisJICogc2lnbmFsIChpZS4gaHctPnN3IGNh
c2UpLgorCSAqCisJICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgY2FsbGVkIGZyb20gYXRvbWljIGNv
bnRleHQsIGJ1dCBub3QKKwkgKiBmcm9tIGlycSBjb250ZXh0LCBzbyBub3JtYWwgc3BpbmxvY2tz
IGNhbiBiZSB1c2VkLgorCSAqCisJICogQSByZXR1cm4gdmFsdWUgb2YgZmFsc2UgaW5kaWNhdGVz
IHRoZSBmZW5jZSBhbHJlYWR5IHBhc3NlZCwKKwkgKiBvciBzb21lIGZhaWx1cmUgb2NjdXJyZWQg
dGhhdCBtYWRlIGl0IGltcG9zc2libGUgdG8gZW5hYmxlCisJICogc2lnbmFsaW5nLiBUcnVlIGlu
ZGljYXRlcyBzdWNjZXNzZnVsIGVuYWJsaW5nLgorCSAqCisJICogJmRtYV9mZW5jZS5lcnJvciBt
YXkgYmUgc2V0IGluIGVuYWJsZV9zaWduYWxpbmcsIGJ1dCBvbmx5IHdoZW4gZmFsc2UKKwkgKiBp
cyByZXR1cm5lZC4KKwkgKgorCSAqIFNpbmNlIG1hbnkgaW1wbGVtZW50YXRpb25zIGNhbiBjYWxs
IGRtYV9mZW5jZV9zaWduYWwoKSBldmVuIGJlZm9yZQorCSAqIEBlbmFibGVfc2lnbmFsaW5nIGhh
cyBiZWVuIGNhbGxlZCB0aGVyZSdzIGEgcmFjZSB3aW5kb3csIHdoZXJlIHRoZQorCSAqIGRtYV9m
ZW5jZV9zaWduYWwoKSBtaWdodCByZXN1bHQgaW4gdGhlIGZpbmFsIGZlbmNlIHJlZmVyZW5jZSBi
ZWluZworCSAqIHJlbGVhc2VkIGFuZCBpdHMgbWVtb3J5IGZyZWVkLiBUbyBhdm9pZCB0aGlzLCBp
bXBsZW1lbnRhdGlvbnMgb2YgdGhpcworCSAqIGNhbGxiYWNrIHNob3VsZCBncmFiIHRoZWlyIG93
biByZWZlcmVuY2UgdXNpbmcgZG1hX2ZlbmNlX2dldCgpLCB0byBiZQorCSAqIHJlbGVhc2VkIHdo
ZW4gdGhlIGZlbmNlIGlzIHNpZ25hbGxlZCAodGhyb3VnaCBlLmcuIHRoZSBpbnRlcnJ1cHQKKwkg
KiBoYW5kbGVyKS4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0aW9uYWwuIElmIHRoaXMg
Y2FsbGJhY2sgaXMgbm90IHByZXNlbnQsIHRoZW4gdGhlCisJICogZHJpdmVyIG11c3QgYWx3YXlz
IGhhdmUgc2lnbmFsaW5nIGVuYWJsZWQuCisJICovCisJYm9vbCAoKmVuYWJsZV9zaWduYWxpbmcp
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKKworCS8qKgorCSAqIEBzaWduYWxlZDoKKwkgKgor
CSAqIFBlZWsgd2hldGhlciB0aGUgZmVuY2UgaXMgc2lnbmFsZWQsIGFzIGEgZmFzdHBhdGggb3B0
aW1pemF0aW9uIGZvcgorCSAqIGUuZy4gZG1hX2ZlbmNlX3dhaXQoKSBvciBkbWFfZmVuY2VfYWRk
X2NhbGxiYWNrKCkuIE5vdGUgdGhhdCB0aGlzCisJICogY2FsbGJhY2sgZG9lcyBub3QgbmVlZCB0
byBtYWtlIGFueSBndWFyYW50ZWVzIGJleW9uZCB0aGF0IGEgZmVuY2UKKwkgKiBvbmNlIGluZGlj
YXRlcyBhcyBzaWduYWxsZWQgbXVzdCBhbHdheXMgcmV0dXJuIHRydWUgZnJvbSB0aGlzCisJICog
Y2FsbGJhY2suIFRoaXMgY2FsbGJhY2sgbWF5IHJldHVybiBmYWxzZSBldmVuIGlmIHRoZSBmZW5j
ZSBoYXMKKwkgKiBjb21wbGV0ZWQgYWxyZWFkeSwgaW4gdGhpcyBjYXNlIGluZm9ybWF0aW9uIGhh
c24ndCBwcm9wb2dhdGVkIHRocm91ZworCSAqIHRoZSBzeXN0ZW0geWV0LiBTZWUgYWxzbyBkbWFf
ZmVuY2VfaXNfc2lnbmFsZWQoKS4KKwkgKgorCSAqIE1heSBzZXQgJmRtYV9mZW5jZS5lcnJvciBp
ZiByZXR1cm5pbmcgdHJ1ZS4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMgb3B0aW9uYWwuCisJ
ICovCisJYm9vbCAoKnNpZ25hbGVkKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSk7CisKKwkvKioK
KwkgKiBAd2FpdDoKKwkgKgorCSAqIEN1c3RvbSB3YWl0IGltcGxlbWVudGF0aW9uLCBkZWZhdWx0
cyB0byBkbWFfZmVuY2VfZGVmYXVsdF93YWl0KCkgaWYKKwkgKiBub3Qgc2V0LgorCSAqCisJICog
VGhlIGRtYV9mZW5jZV9kZWZhdWx0X3dhaXQgaW1wbGVtZW50YXRpb24gc2hvdWxkIHdvcmsgZm9y
IGFueSBmZW5jZSwKKwkgKiBhcyBsb25nIGFzIEBlbmFibGVfc2lnbmFsaW5nIHdvcmtzIGNvcnJl
Y3RseS4gVGhpcyBob29rIGFsbG93cworCSAqIGRyaXZlcnMgdG8gaGF2ZSBhbiBvcHRpbWl6ZWQg
dmVyc2lvbiBmb3IgdGhlIGNhc2Ugd2hlcmUgYSBwcm9jZXNzCisJICogY29udGV4dCBpcyBhbHJl
YWR5IGF2YWlsYWJsZSwgZS5nLiBpZiBAZW5hYmxlX3NpZ25hbGluZyBmb3IgdGhlCisJICogZ2Vu
ZXJhbCBjYXNlIG5lZWRzIHRvIHNldCB1cCBhIHdvcmtlciB0aHJlYWQuCisJICoKKwkgKiBNdXN0
IHJldHVybiAtRVJFU1RBUlRTWVMgaWYgdGhlIHdhaXQgaXMgaW50ciA9IHRydWUgYW5kIHRoZSB3
YWl0IHdhcworCSAqIGludGVycnVwdGVkLCBhbmQgcmVtYWluaW5nIGppZmZpZXMgaWYgZmVuY2Ug
aGFzIHNpZ25hbGVkLCBvciAwIGlmCisJICogd2FpdCB0aW1lZCBvdXQuIENhbiBhbHNvIHJldHVy
biBvdGhlciBlcnJvciB2YWx1ZXMgb24gY3VzdG9tCisJICogaW1wbGVtZW50YXRpb25zLCB3aGlj
aCBzaG91bGQgYmUgdHJlYXRlZCBhcyBpZiB0aGUgZmVuY2UgaXMgc2lnbmFsZWQuCisJICogRm9y
IGV4YW1wbGUgYSBoYXJkd2FyZSBsb2NrdXAgY291bGQgYmUgcmVwb3J0ZWQgbGlrZSB0aGF0Lgor
CSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4KKwkgKi8KKwlzaWduZWQgbG9uZyAo
KndhaXQpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLAorCQkJICAgIGJvb2wgaW50ciwgc2lnbmVk
IGxvbmcgdGltZW91dCk7CisKKwkvKioKKwkgKiBAcmVsZWFzZToKKwkgKgorCSAqIENhbGxlZCBv
biBkZXN0cnVjdGlvbiBvZiBmZW5jZSB0byByZWxlYXNlIGFkZGl0aW9uYWwgcmVzb3VyY2VzLgor
CSAqIENhbiBiZSBjYWxsZWQgZnJvbSBpcnEgY29udGV4dC4gIFRoaXMgY2FsbGJhY2sgaXMgb3B0
aW9uYWwuIElmIGl0IGlzCisJICogTlVMTCwgdGhlbiBkbWFfZmVuY2VfZnJlZSgpIGlzIGluc3Rl
YWQgY2FsbGVkIGFzIHRoZSBkZWZhdWx0CisJICogaW1wbGVtZW50YXRpb24uCisJICovCisJdm9p
ZCAoKnJlbGVhc2UpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKKworCS8qKgorCSAqIEBmZW5j
ZV92YWx1ZV9zdHI6CisJICoKKwkgKiBDYWxsYmFjayB0byBmaWxsIGluIGZyZWUtZm9ybSBkZWJ1
ZyBpbmZvIHNwZWNpZmljIHRvIHRoaXMgZmVuY2UsIGxpa2UKKwkgKiB0aGUgc2VxdWVuY2UgbnVt
YmVyLgorCSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4KKwkgKi8KKwl2b2lkICgq
ZmVuY2VfdmFsdWVfc3RyKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwgY2hhciAqc3RyLCBpbnQg
c2l6ZSk7CisKKwkvKioKKwkgKiBAdGltZWxpbmVfdmFsdWVfc3RyOgorCSAqCisJICogRmlsbHMg
aW4gdGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIHRpbWVsaW5lIGFzIGEgc3RyaW5nLCBsaWtlIHRo
ZQorCSAqIHNlcXVlbmNlIG51bWJlci4gTm90ZSB0aGF0IHRoZSBzcGVjaWZpYyBmZW5jZSBwYXNz
ZWQgdG8gdGhpcyBmdW5jdGlvbgorCSAqIHNob3VsZCBub3QgbWF0dGVyLCBkcml2ZXJzIHNob3Vs
ZCBvbmx5IHVzZSBpdCB0byBsb29rIHVwIHRoZQorCSAqIGNvcnJlc3BvbmRpbmcgdGltZWxpbmUg
c3RydWN0dXJlcy4KKwkgKi8KKwl2b2lkICgqdGltZWxpbmVfdmFsdWVfc3RyKShzdHJ1Y3QgZG1h
X2ZlbmNlICpmZW5jZSwKKwkJCQkgICBjaGFyICpzdHIsIGludCBzaXplKTsKK307CisKKyNlbmRp
ZiAvKiBfX0xJTlVYX0RNQV9GRU5DRV9UWVBFU19IICovCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L2RtYS1mZW5jZS5oIGIvaW5jbHVkZS9saW51eC9kbWEtZmVuY2UuaAppbmRleCAwNWQyOWRi
YzdlNjIuLjFjOGRkMWZiYWZhZSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9kbWEtZmVuY2Uu
aAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS5oCkBAIC0xMyw2ICsxMyw3IEBACiAjaWZu
ZGVmIF9fTElOVVhfRE1BX0ZFTkNFX0gKICNkZWZpbmUgX19MSU5VWF9ETUFfRkVOQ0VfSAogCisj
aW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLXR5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvZXJyLmg+
CiAjaW5jbHVkZSA8bGludXgvd2FpdC5oPgogI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KQEAgLTIy
LDIyNyArMjMsNiBAQAogI2luY2x1ZGUgPGxpbnV4L3ByaW50ay5oPgogI2luY2x1ZGUgPGxpbnV4
L3JjdXBkYXRlLmg+CiAKLXN0cnVjdCBkbWFfZmVuY2U7Ci1zdHJ1Y3QgZG1hX2ZlbmNlX29wczsK
LXN0cnVjdCBkbWFfZmVuY2VfY2I7Ci0KLS8qKgotICogc3RydWN0IGRtYV9mZW5jZSAtIHNvZnR3
YXJlIHN5bmNocm9uaXphdGlvbiBwcmltaXRpdmUKLSAqIEByZWZjb3VudDogcmVmY291bnQgZm9y
IHRoaXMgZmVuY2UKLSAqIEBvcHM6IGRtYV9mZW5jZV9vcHMgYXNzb2NpYXRlZCB3aXRoIHRoaXMg
ZmVuY2UKLSAqIEByY3U6IHVzZWQgZm9yIHJlbGVhc2luZyBmZW5jZSB3aXRoIGtmcmVlX3JjdQot
ICogQGNiX2xpc3Q6IGxpc3Qgb2YgYWxsIGNhbGxiYWNrcyB0byBjYWxsCi0gKiBAbG9jazogc3Bp
bl9sb2NrX2lycXNhdmUgdXNlZCBmb3IgbG9ja2luZwotICogQGNvbnRleHQ6IGV4ZWN1dGlvbiBj
b250ZXh0IHRoaXMgZmVuY2UgYmVsb25ncyB0bywgcmV0dXJuZWQgYnkKLSAqICAgICAgICAgICBk
bWFfZmVuY2VfY29udGV4dF9hbGxvYygpCi0gKiBAc2Vxbm86IHRoZSBzZXF1ZW5jZSBudW1iZXIg
b2YgdGhpcyBmZW5jZSBpbnNpZGUgdGhlIGV4ZWN1dGlvbiBjb250ZXh0LAotICogY2FuIGJlIGNv
bXBhcmVkIHRvIGRlY2lkZSB3aGljaCBmZW5jZSB3b3VsZCBiZSBzaWduYWxlZCBsYXRlci4KLSAq
IEBmbGFnczogQSBtYXNrIG9mIERNQV9GRU5DRV9GTEFHXyogZGVmaW5lZCBiZWxvdwotICogQHRp
bWVzdGFtcDogVGltZXN0YW1wIHdoZW4gdGhlIGZlbmNlIHdhcyBzaWduYWxlZC4KLSAqIEBlcnJv
cjogT3B0aW9uYWwsIG9ubHkgdmFsaWQgaWYgPCAwLCBtdXN0IGJlIHNldCBiZWZvcmUgY2FsbGlu
ZwotICogZG1hX2ZlbmNlX3NpZ25hbCwgaW5kaWNhdGVzIHRoYXQgdGhlIGZlbmNlIGhhcyBjb21w
bGV0ZWQgd2l0aCBhbiBlcnJvci4KLSAqCi0gKiB0aGUgZmxhZ3MgbWVtYmVyIG11c3QgYmUgbWFu
aXB1bGF0ZWQgYW5kIHJlYWQgdXNpbmcgdGhlIGFwcHJvcHJpYXRlCi0gKiBhdG9taWMgb3BzIChi
aXRfKiksIHNvIHRha2luZyB0aGUgc3BpbmxvY2sgd2lsbCBub3QgYmUgbmVlZGVkIG1vc3QKLSAq
IG9mIHRoZSB0aW1lLgotICoKLSAqIERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCAtIGZlbmNl
IGlzIGFscmVhZHkgc2lnbmFsZWQKLSAqIERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQgLSB0
aW1lc3RhbXAgcmVjb3JkZWQgZm9yIGZlbmNlIHNpZ25hbGluZwotICogRE1BX0ZFTkNFX0ZMQUdf
RU5BQkxFX1NJR05BTF9CSVQgLSBlbmFibGVfc2lnbmFsaW5nIG1pZ2h0IGhhdmUgYmVlbiBjYWxs
ZWQKLSAqIERNQV9GRU5DRV9GTEFHX1VTRVJfQklUUyAtIHN0YXJ0IG9mIHRoZSB1bnVzZWQgYml0
cywgY2FuIGJlIHVzZWQgYnkgdGhlCi0gKiBpbXBsZW1lbnRlciBvZiB0aGUgZmVuY2UgZm9yIGl0
cyBvd24gcHVycG9zZXMuIENhbiBiZSB1c2VkIGluIGRpZmZlcmVudAotICogd2F5cyBieSBkaWZm
ZXJlbnQgZmVuY2UgaW1wbGVtZW50ZXJzLCBzbyBkbyBub3QgcmVseSBvbiB0aGlzLgotICoKLSAq
IFNpbmNlIGF0b21pYyBiaXRvcHMgYXJlIHVzZWQsIHRoaXMgaXMgbm90IGd1YXJhbnRlZWQgdG8g
YmUgdGhlIGNhc2UuCi0gKiBQYXJ0aWN1bGFybHksIGlmIHRoZSBiaXQgd2FzIHNldCwgYnV0IGRt
YV9mZW5jZV9zaWduYWwgd2FzIGNhbGxlZCByaWdodAotICogYmVmb3JlIHRoaXMgYml0IHdhcyBz
ZXQsIGl0IHdvdWxkIGhhdmUgYmVlbiBhYmxlIHRvIHNldCB0aGUKLSAqIERNQV9GRU5DRV9GTEFH
X1NJR05BTEVEX0JJVCwgYmVmb3JlIGVuYWJsZV9zaWduYWxpbmcgd2FzIGNhbGxlZC4KLSAqIEFk
ZGluZyBhIGNoZWNrIGZvciBETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQgYWZ0ZXIgc2V0dGlu
ZwotICogRE1BX0ZFTkNFX0ZMQUdfRU5BQkxFX1NJR05BTF9CSVQgY2xvc2VzIHRoaXMgcmFjZSwg
YW5kIG1ha2VzIHN1cmUgdGhhdAotICogYWZ0ZXIgZG1hX2ZlbmNlX3NpZ25hbCB3YXMgY2FsbGVk
LCBhbnkgZW5hYmxlX3NpZ25hbGluZyBjYWxsIHdpbGwgaGF2ZSBlaXRoZXIKLSAqIGJlZW4gY29t
cGxldGVkLCBvciBuZXZlciBjYWxsZWQgYXQgYWxsLgotICovCi1zdHJ1Y3QgZG1hX2ZlbmNlIHsK
LQlzdHJ1Y3Qga3JlZiByZWZjb3VudDsKLQljb25zdCBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAqb3Bz
OwotCXN0cnVjdCByY3VfaGVhZCByY3U7Ci0Jc3RydWN0IGxpc3RfaGVhZCBjYl9saXN0OwotCXNw
aW5sb2NrX3QgKmxvY2s7Ci0JdTY0IGNvbnRleHQ7Ci0JdTY0IHNlcW5vOwotCXVuc2lnbmVkIGxv
bmcgZmxhZ3M7Ci0Ja3RpbWVfdCB0aW1lc3RhbXA7Ci0JaW50IGVycm9yOwotfTsKLQotZW51bSBk
bWFfZmVuY2VfZmxhZ19iaXRzIHsKLQlETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQsCi0JRE1B
X0ZFTkNFX0ZMQUdfVElNRVNUQU1QX0JJVCwKLQlETUFfRkVOQ0VfRkxBR19FTkFCTEVfU0lHTkFM
X0JJVCwKLQlETUFfRkVOQ0VfRkxBR19VU0VSX0JJVFMsIC8qIG11c3QgYWx3YXlzIGJlIGxhc3Qg
bWVtYmVyICovCi19OwotCi10eXBlZGVmIHZvaWQgKCpkbWFfZmVuY2VfZnVuY190KShzdHJ1Y3Qg
ZG1hX2ZlbmNlICpmZW5jZSwKLQkJCQkgc3RydWN0IGRtYV9mZW5jZV9jYiAqY2IpOwotCi0vKioK
LSAqIHN0cnVjdCBkbWFfZmVuY2VfY2IgLSBjYWxsYmFjayBmb3IgZG1hX2ZlbmNlX2FkZF9jYWxs
YmFjaygpCi0gKiBAbm9kZTogdXNlZCBieSBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkgdG8gYXBw
ZW5kIHRoaXMgc3RydWN0IHRvIGZlbmNlOjpjYl9saXN0Ci0gKiBAZnVuYzogZG1hX2ZlbmNlX2Z1
bmNfdCB0byBjYWxsCi0gKgotICogVGhpcyBzdHJ1Y3Qgd2lsbCBiZSBpbml0aWFsaXplZCBieSBk
bWFfZmVuY2VfYWRkX2NhbGxiYWNrKCksIGFkZGl0aW9uYWwKLSAqIGRhdGEgY2FuIGJlIHBhc3Nl
ZCBhbG9uZyBieSBlbWJlZGRpbmcgZG1hX2ZlbmNlX2NiIGluIGFub3RoZXIgc3RydWN0LgotICov
Ci1zdHJ1Y3QgZG1hX2ZlbmNlX2NiIHsKLQlzdHJ1Y3QgbGlzdF9oZWFkIG5vZGU7Ci0JZG1hX2Zl
bmNlX2Z1bmNfdCBmdW5jOwotfTsKLQotLyoqCi0gKiBzdHJ1Y3QgZG1hX2ZlbmNlX29wcyAtIG9w
ZXJhdGlvbnMgaW1wbGVtZW50ZWQgZm9yIGZlbmNlCi0gKgotICovCi1zdHJ1Y3QgZG1hX2ZlbmNl
X29wcyB7Ci0JLyoqCi0JICogQHVzZV82NGJpdF9zZXFubzoKLQkgKgotCSAqIFRydWUgaWYgdGhp
cyBkbWFfZmVuY2UgaW1wbGVtZW50YXRpb24gdXNlcyA2NGJpdCBzZXFubywgZmFsc2UKLQkgKiBv
dGhlcndpc2UuCi0JICovCi0JYm9vbCB1c2VfNjRiaXRfc2Vxbm87Ci0KLQkvKioKLQkgKiBAZ2V0
X2RyaXZlcl9uYW1lOgotCSAqCi0JICogUmV0dXJucyB0aGUgZHJpdmVyIG5hbWUuIFRoaXMgaXMg
YSBjYWxsYmFjayB0byBhbGxvdyBkcml2ZXJzIHRvCi0JICogY29tcHV0ZSB0aGUgbmFtZSBhdCBy
dW50aW1lLCB3aXRob3V0IGhhdmluZyBpdCB0byBzdG9yZSBwZXJtYW5lbnRseQotCSAqIGZvciBl
YWNoIGZlbmNlLCBvciBidWlsZCBhIGNhY2hlIG9mIHNvbWUgc29ydC4KLQkgKgotCSAqIFRoaXMg
Y2FsbGJhY2sgaXMgbWFuZGF0b3J5LgotCSAqLwotCWNvbnN0IGNoYXIgKiAoKmdldF9kcml2ZXJf
bmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoqCi0JICogQGdldF90aW1lbGlu
ZV9uYW1lOgotCSAqCi0JICogUmV0dXJuIHRoZSBuYW1lIG9mIHRoZSBjb250ZXh0IHRoaXMgZmVu
Y2UgYmVsb25ncyB0by4gVGhpcyBpcyBhCi0JICogY2FsbGJhY2sgdG8gYWxsb3cgZHJpdmVycyB0
byBjb21wdXRlIHRoZSBuYW1lIGF0IHJ1bnRpbWUsIHdpdGhvdXQKLQkgKiBoYXZpbmcgaXQgdG8g
c3RvcmUgcGVybWFuZW50bHkgZm9yIGVhY2ggZmVuY2UsIG9yIGJ1aWxkIGEgY2FjaGUgb2YKLQkg
KiBzb21lIHNvcnQuCi0JICoKLQkgKiBUaGlzIGNhbGxiYWNrIGlzIG1hbmRhdG9yeS4KLQkgKi8K
LQljb25zdCBjaGFyICogKCpnZXRfdGltZWxpbmVfbmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVu
Y2UpOwotCi0JLyoqCi0JICogQGVuYWJsZV9zaWduYWxpbmc6Ci0JICoKLQkgKiBFbmFibGUgc29m
dHdhcmUgc2lnbmFsaW5nIG9mIGZlbmNlLgotCSAqCi0JICogRm9yIGZlbmNlIGltcGxlbWVudGF0
aW9ucyB0aGF0IGhhdmUgdGhlIGNhcGFiaWxpdHkgZm9yIGh3LT5odwotCSAqIHNpZ25hbGluZywg
dGhleSBjYW4gaW1wbGVtZW50IHRoaXMgb3AgdG8gZW5hYmxlIHRoZSBuZWNlc3NhcnkKLQkgKiBp
bnRlcnJ1cHRzLCBvciBpbnNlcnQgY29tbWFuZHMgaW50byBjbWRzdHJlYW0sIGV0YywgdG8gYXZv
aWQgdGhlc2UKLQkgKiBjb3N0bHkgb3BlcmF0aW9ucyBmb3IgdGhlIGNvbW1vbiBjYXNlIHdoZXJl
IG9ubHkgaHctPmh3Ci0JICogc3luY2hyb25pemF0aW9uIGlzIHJlcXVpcmVkLiAgVGhpcyBpcyBj
YWxsZWQgaW4gdGhlIGZpcnN0Ci0JICogZG1hX2ZlbmNlX3dhaXQoKSBvciBkbWFfZmVuY2VfYWRk
X2NhbGxiYWNrKCkgcGF0aCB0byBsZXQgdGhlIGZlbmNlCi0JICogaW1wbGVtZW50YXRpb24ga25v
dyB0aGF0IHRoZXJlIGlzIGFub3RoZXIgZHJpdmVyIHdhaXRpbmcgb24gdGhlCi0JICogc2lnbmFs
IChpZS4gaHctPnN3IGNhc2UpLgotCSAqCi0JICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgY2FsbGVk
IGZyb20gYXRvbWljIGNvbnRleHQsIGJ1dCBub3QKLQkgKiBmcm9tIGlycSBjb250ZXh0LCBzbyBu
b3JtYWwgc3BpbmxvY2tzIGNhbiBiZSB1c2VkLgotCSAqCi0JICogQSByZXR1cm4gdmFsdWUgb2Yg
ZmFsc2UgaW5kaWNhdGVzIHRoZSBmZW5jZSBhbHJlYWR5IHBhc3NlZCwKLQkgKiBvciBzb21lIGZh
aWx1cmUgb2NjdXJyZWQgdGhhdCBtYWRlIGl0IGltcG9zc2libGUgdG8gZW5hYmxlCi0JICogc2ln
bmFsaW5nLiBUcnVlIGluZGljYXRlcyBzdWNjZXNzZnVsIGVuYWJsaW5nLgotCSAqCi0JICogJmRt
YV9mZW5jZS5lcnJvciBtYXkgYmUgc2V0IGluIGVuYWJsZV9zaWduYWxpbmcsIGJ1dCBvbmx5IHdo
ZW4gZmFsc2UKLQkgKiBpcyByZXR1cm5lZC4KLQkgKgotCSAqIFNpbmNlIG1hbnkgaW1wbGVtZW50
YXRpb25zIGNhbiBjYWxsIGRtYV9mZW5jZV9zaWduYWwoKSBldmVuIHdoZW4gYmVmb3JlCi0JICog
QGVuYWJsZV9zaWduYWxpbmcgaGFzIGJlZW4gY2FsbGVkIHRoZXJlJ3MgYSByYWNlIHdpbmRvdywg
d2hlcmUgdGhlCi0JICogZG1hX2ZlbmNlX3NpZ25hbCgpIG1pZ2h0IHJlc3VsdCBpbiB0aGUgZmlu
YWwgZmVuY2UgcmVmZXJlbmNlIGJlaW5nCi0JICogcmVsZWFzZWQgYW5kIGl0cyBtZW1vcnkgZnJl
ZWQuIFRvIGF2b2lkIHRoaXMsIGltcGxlbWVudGF0aW9ucyBvZiB0aGlzCi0JICogY2FsbGJhY2sg
c2hvdWxkIGdyYWIgdGhlaXIgb3duIHJlZmVyZW5jZSB1c2luZyBkbWFfZmVuY2VfZ2V0KCksIHRv
IGJlCi0JICogcmVsZWFzZWQgd2hlbiB0aGUgZmVuY2UgaXMgc2lnbmFsbGVkICh0aHJvdWdoIGUu
Zy4gdGhlIGludGVycnVwdAotCSAqIGhhbmRsZXIpLgotCSAqCi0JICogVGhpcyBjYWxsYmFjayBp
cyBvcHRpb25hbC4gSWYgdGhpcyBjYWxsYmFjayBpcyBub3QgcHJlc2VudCwgdGhlbiB0aGUKLQkg
KiBkcml2ZXIgbXVzdCBhbHdheXMgaGF2ZSBzaWduYWxpbmcgZW5hYmxlZC4KLQkgKi8KLQlib29s
ICgqZW5hYmxlX3NpZ25hbGluZykoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoqCi0J
ICogQHNpZ25hbGVkOgotCSAqCi0JICogUGVlayB3aGV0aGVyIHRoZSBmZW5jZSBpcyBzaWduYWxl
ZCwgYXMgYSBmYXN0cGF0aCBvcHRpbWl6YXRpb24gZm9yCi0JICogZS5nLiBkbWFfZmVuY2Vfd2Fp
dCgpIG9yIGRtYV9mZW5jZV9hZGRfY2FsbGJhY2soKS4gTm90ZSB0aGF0IHRoaXMKLQkgKiBjYWxs
YmFjayBkb2VzIG5vdCBuZWVkIHRvIG1ha2UgYW55IGd1YXJhbnRlZXMgYmV5b25kIHRoYXQgYSBm
ZW5jZQotCSAqIG9uY2UgaW5kaWNhdGVzIGFzIHNpZ25hbGxlZCBtdXN0IGFsd2F5cyByZXR1cm4g
dHJ1ZSBmcm9tIHRoaXMKLQkgKiBjYWxsYmFjay4gVGhpcyBjYWxsYmFjayBtYXkgcmV0dXJuIGZh
bHNlIGV2ZW4gaWYgdGhlIGZlbmNlIGhhcwotCSAqIGNvbXBsZXRlZCBhbHJlYWR5LCBpbiB0aGlz
IGNhc2UgaW5mb3JtYXRpb24gaGFzbid0IHByb3BvZ2F0ZWQgdGhyb3VnCi0JICogdGhlIHN5c3Rl
bSB5ZXQuIFNlZSBhbHNvIGRtYV9mZW5jZV9pc19zaWduYWxlZCgpLgotCSAqCi0JICogTWF5IHNl
dCAmZG1hX2ZlbmNlLmVycm9yIGlmIHJldHVybmluZyB0cnVlLgotCSAqCi0JICogVGhpcyBjYWxs
YmFjayBpcyBvcHRpb25hbC4KLQkgKi8KLQlib29sICgqc2lnbmFsZWQpKHN0cnVjdCBkbWFfZmVu
Y2UgKmZlbmNlKTsKLQotCS8qKgotCSAqIEB3YWl0OgotCSAqCi0JICogQ3VzdG9tIHdhaXQgaW1w
bGVtZW50YXRpb24sIGRlZmF1bHRzIHRvIGRtYV9mZW5jZV9kZWZhdWx0X3dhaXQoKSBpZgotCSAq
IG5vdCBzZXQuCi0JICoKLQkgKiBUaGUgZG1hX2ZlbmNlX2RlZmF1bHRfd2FpdCBpbXBsZW1lbnRh
dGlvbiBzaG91bGQgd29yayBmb3IgYW55IGZlbmNlLCBhcyBsb25nCi0JICogYXMgQGVuYWJsZV9z
aWduYWxpbmcgd29ya3MgY29ycmVjdGx5LiBUaGlzIGhvb2sgYWxsb3dzIGRyaXZlcnMgdG8KLQkg
KiBoYXZlIGFuIG9wdGltaXplZCB2ZXJzaW9uIGZvciB0aGUgY2FzZSB3aGVyZSBhIHByb2Nlc3Mg
Y29udGV4dCBpcwotCSAqIGFscmVhZHkgYXZhaWxhYmxlLCBlLmcuIGlmIEBlbmFibGVfc2lnbmFs
aW5nIGZvciB0aGUgZ2VuZXJhbCBjYXNlCi0JICogbmVlZHMgdG8gc2V0IHVwIGEgd29ya2VyIHRo
cmVhZC4KLQkgKgotCSAqIE11c3QgcmV0dXJuIC1FUkVTVEFSVFNZUyBpZiB0aGUgd2FpdCBpcyBp
bnRyID0gdHJ1ZSBhbmQgdGhlIHdhaXQgd2FzCi0JICogaW50ZXJydXB0ZWQsIGFuZCByZW1haW5p
bmcgamlmZmllcyBpZiBmZW5jZSBoYXMgc2lnbmFsZWQsIG9yIDAgaWYgd2FpdAotCSAqIHRpbWVk
IG91dC4gQ2FuIGFsc28gcmV0dXJuIG90aGVyIGVycm9yIHZhbHVlcyBvbiBjdXN0b20gaW1wbGVt
ZW50YXRpb25zLAotCSAqIHdoaWNoIHNob3VsZCBiZSB0cmVhdGVkIGFzIGlmIHRoZSBmZW5jZSBp
cyBzaWduYWxlZC4gRm9yIGV4YW1wbGUgYSBoYXJkd2FyZQotCSAqIGxvY2t1cCBjb3VsZCBiZSBy
ZXBvcnRlZCBsaWtlIHRoYXQuCi0JICoKLQkgKiBUaGlzIGNhbGxiYWNrIGlzIG9wdGlvbmFsLgot
CSAqLwotCXNpZ25lZCBsb25nICgqd2FpdCkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UsCi0JCQkg
ICAgYm9vbCBpbnRyLCBzaWduZWQgbG9uZyB0aW1lb3V0KTsKLQotCS8qKgotCSAqIEByZWxlYXNl
OgotCSAqCi0JICogQ2FsbGVkIG9uIGRlc3RydWN0aW9uIG9mIGZlbmNlIHRvIHJlbGVhc2UgYWRk
aXRpb25hbCByZXNvdXJjZXMuCi0JICogQ2FuIGJlIGNhbGxlZCBmcm9tIGlycSBjb250ZXh0LiAg
VGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4gSWYgaXQgaXMKLQkgKiBOVUxMLCB0aGVuIGRtYV9m
ZW5jZV9mcmVlKCkgaXMgaW5zdGVhZCBjYWxsZWQgYXMgdGhlIGRlZmF1bHQKLQkgKiBpbXBsZW1l
bnRhdGlvbi4KLQkgKi8KLQl2b2lkICgqcmVsZWFzZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2Up
OwotCi0JLyoqCi0JICogQGZlbmNlX3ZhbHVlX3N0cjoKLQkgKgotCSAqIENhbGxiYWNrIHRvIGZp
bGwgaW4gZnJlZS1mb3JtIGRlYnVnIGluZm8gc3BlY2lmaWMgdG8gdGhpcyBmZW5jZSwgbGlrZQot
CSAqIHRoZSBzZXF1ZW5jZSBudW1iZXIuCi0JICoKLQkgKiBUaGlzIGNhbGxiYWNrIGlzIG9wdGlv
bmFsLgotCSAqLwotCXZvaWQgKCpmZW5jZV92YWx1ZV9zdHIpKHN0cnVjdCBkbWFfZmVuY2UgKmZl
bmNlLCBjaGFyICpzdHIsIGludCBzaXplKTsKLQotCS8qKgotCSAqIEB0aW1lbGluZV92YWx1ZV9z
dHI6Ci0JICoKLQkgKiBGaWxscyBpbiB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgdGltZWxpbmUg
YXMgYSBzdHJpbmcsIGxpa2UgdGhlCi0JICogc2VxdWVuY2UgbnVtYmVyLiBOb3RlIHRoYXQgdGhl
IHNwZWNpZmljIGZlbmNlIHBhc3NlZCB0byB0aGlzIGZ1bmN0aW9uCi0JICogc2hvdWxkIG5vdCBt
YXR0ZXIsIGRyaXZlcnMgc2hvdWxkIG9ubHkgdXNlIGl0IHRvIGxvb2sgdXAgdGhlCi0JICogY29y
cmVzcG9uZGluZyB0aW1lbGluZSBzdHJ1Y3R1cmVzLgotCSAqLwotCXZvaWQgKCp0aW1lbGluZV92
YWx1ZV9zdHIpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLAotCQkJCSAgIGNoYXIgKnN0ciwgaW50
IHNpemUpOwotfTsKLQogdm9pZCBkbWFfZmVuY2VfaW5pdChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSwgY29uc3Qgc3RydWN0IGRtYV9mZW5jZV9vcHMgKm9wcywKIAkJICAgIHNwaW5sb2NrX3QgKmxv
Y2ssIHU2NCBjb250ZXh0LCB1NjQgc2Vxbm8pOwogCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QK
SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

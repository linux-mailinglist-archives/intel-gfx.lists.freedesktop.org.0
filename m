Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8D581464D2
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 18:46:14 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C1F4489B69;
	Fri, 14 Jun 2019 16:46:12 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6316E89B66
 for <intel-gfx@lists.freedesktop.org>; Fri, 14 Jun 2019 16:46:10 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16905376-1500050 
 for <intel-gfx@lists.freedesktop.org>; Fri, 14 Jun 2019 17:46:07 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 14 Jun 2019 17:46:06 +0100
Message-Id: <20190614164606.15633-3-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614164606.15633-1-chris@chris-wilson.co.uk>
References: <20190614164606.15633-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 3/3] drm/i915: Replace engine->timeline with a
 plain list
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VG8gY29udGludWUgdGhlIG9uc2xhdWdodCBvZiByZW1vdmluZyB0aGUgYXNzdW1wdGlvbiBvZiBh
IGdsb2JhbApleGVjdXRpb24gb3JkZXJpbmcsIGFub3RoZXIgY2FzdWFsdHkgaXMgdGhlIGVuZ2lu
ZS0+dGltZWxpbmUuIFdpdGhvdXQgYW4KYWN0dWFsIHRpbWVsaW5lIHRvIHRyYWNrLCBpdCBpcyBv
dmVya2lsbCBhbmQgd2UgY2FuIHJlcGxhY2UgaXQgd2l0aCBhCm11Y2ggbGVzcyBncmFuZCBwbGFp
biBsaXN0LiBXZSBzdGlsbCBuZWVkIGEgbGlzdCBvZiByZXF1ZXN0cyBpbmZsaWdodCwKZm9yIHRo
ZSBzaW1wbGUgcHVycG9zZSBvZiBmaW5kaW5nIGluZmxpZ2h0IHJlcXVlc3RzIChmb3IgcmV0aXJp
bmcsCnJlc2V0dGluZywgcHJlZW1wdGlvbiBldGMpLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2ls
c29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+ClJldmlld2VkLWJ5OiBNaWthIEt1b3BwYWxh
IDxtaWthLmt1b3BwYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmUuaCAgICAgICAgfCAgNiArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMgICAgIHwgNjIgKysrKysrLS0tLS0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCAgfCAgNiArLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgICAgICAgIHwgOTUgKysrKysrKysrKy0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyAgICAgICAgIHwgMTAgKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyAgICB8IDE1ICsrLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyAgICAgICAgIHwgMTggKystLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyAgICAgICAgIHwgIDUgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8IDQzICsrKy0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggICAgICAgICAgIHwgIDIgKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgICAgICAgICB8IDM4ICsrKystLS0t
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lLmMgICAgICAgICAgfCAgMSAtCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lLmggICAgICAgICAgfCAxOSAtLS0tCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmggICAgfCAgNCAtCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfc3VibWlzc2lvbi5jICAgfCAxNiArKy0tCiAuLi4v
Z3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX3RpbWVsaW5lLmMgICAgfCAgMSAtCiAxNiBmaWxl
cyBjaGFuZ2VkLCAxNTMgaW5zZXJ0aW9ucygrKSwgMTg4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgKaW5kZXggM2I1YTZkMTUyOTk3Li4yZjFjNjg3MWVl
OTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oCkBAIC01NjUsNCArNTY1
LDEwIEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpbmplY3RfcHJlZW1wdF9oYW5nKHN0cnVjdCBpbnRl
bF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiAKICNlbmRpZgogCit2b2lkIGludGVsX2Vu
Z2luZV9pbml0X2FjdGl2ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkgICAg
ICB1bnNpZ25lZCBpbnQgc3ViY2xhc3MpOworI2RlZmluZSBFTkdJTkVfUEhZU0lDQUwJMAorI2Rl
ZmluZSBFTkdJTkVfTU9DSwkxCisjZGVmaW5lIEVOR0lORV9WSVJUVUFMCTIKKwogI2VuZGlmIC8q
IF9JTlRFTF9SSU5HQlVGRkVSX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV9jcy5jCmluZGV4IDIyMjQyZTkyN2JhYS4uODk4NjkyOTg5MzEzIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtNjE3LDE0ICs2MTcsNyBAQCBzdGF0
aWMgaW50IGludGVsX2VuZ2luZV9zZXR1cF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCWlmIChlcnIpCiAJCXJldHVybiBlcnI7CiAKLQllcnIgPSBpOTE1X3RpbWVsaW5l
X2luaXQoZW5naW5lLT5pOTE1LAotCQkJCSAmZW5naW5lLT50aW1lbGluZSwKLQkJCQkgZW5naW5l
LT5zdGF0dXNfcGFnZS52bWEpOwotCWlmIChlcnIpCi0JCWdvdG8gZXJyX2h3c3A7Ci0KLQlpOTE1
X3RpbWVsaW5lX3NldF9zdWJjbGFzcygmZW5naW5lLT50aW1lbGluZSwgVElNRUxJTkVfRU5HSU5F
KTsKLQorCWludGVsX2VuZ2luZV9pbml0X2FjdGl2ZShlbmdpbmUsIEVOR0lORV9QSFlTSUNBTCk7
CiAJaW50ZWxfZW5naW5lX2luaXRfYnJlYWRjcnVtYnMoZW5naW5lKTsKIAlpbnRlbF9lbmdpbmVf
aW5pdF9leGVjbGlzdHMoZW5naW5lKTsKIAlpbnRlbF9lbmdpbmVfaW5pdF9oYW5nY2hlY2soZW5n
aW5lKTsKQEAgLTYzNywxMCArNjMwLDYgQEAgc3RhdGljIGludCBpbnRlbF9lbmdpbmVfc2V0dXBf
Y29tbW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJaW50ZWxfc3NldV9mcm9t
X2RldmljZV9pbmZvKCZSVU5USU1FX0lORk8oZW5naW5lLT5pOTE1KS0+c3NldSk7CiAKIAlyZXR1
cm4gMDsKLQotZXJyX2h3c3A6Ci0JY2xlYW51cF9zdGF0dXNfcGFnZShlbmdpbmUpOwotCXJldHVy
biBlcnI7CiB9CiAKIC8qKgpAQCAtNzk3LDYgKzc4NiwyNyBAQCBzdGF0aWMgaW50IHBpbl9jb250
ZXh0KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJcmV0dXJuIDA7CiB9CiAKK3ZvaWQK
K2ludGVsX2VuZ2luZV9pbml0X2FjdGl2ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
IHVuc2lnbmVkIGludCBzdWJjbGFzcykKK3sKKwlJTklUX0xJU1RfSEVBRCgmZW5naW5lLT5hY3Rp
dmUucmVxdWVzdHMpOworCisJc3Bpbl9sb2NrX2luaXQoJmVuZ2luZS0+YWN0aXZlLmxvY2spOwor
CWxvY2tkZXBfc2V0X3N1YmNsYXNzKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBzdWJjbGFzcyk7CisK
KwkvKgorCSAqIER1ZSB0byBhbiBpbnRlcmVzdGluZyBxdWlyayBpbiBsb2NrZGVwJ3MgaW50ZXJu
YWwgZGVidWcgdHJhY2tpbmcsCisJICogYWZ0ZXIgc2V0dGluZyBhIHN1YmNsYXNzIHdlIG11c3Qg
ZW5zdXJlIHRoZSBsb2NrIGlzIHVzZWQuIE90aGVyd2lzZSwKKwkgKiBucl91bnVzZWRfbG9ja3Mg
aXMgaW5jcmVtZW50ZWQgb25jZSB0b28gb2Z0ZW4uCisJICovCisjaWZkZWYgQ09ORklHX0RFQlVH
X0xPQ0tfQUxMT0MKKwlsb2NhbF9pcnFfZGlzYWJsZSgpOworCWxvY2tfbWFwX2FjcXVpcmUoJmVu
Z2luZS0+YWN0aXZlLmxvY2suZGVwX21hcCk7CisJbG9ja19tYXBfcmVsZWFzZSgmZW5naW5lLT5h
Y3RpdmUubG9jay5kZXBfbWFwKTsKKwlsb2NhbF9pcnFfZW5hYmxlKCk7CisjZW5kaWYKK30KKwog
LyoqCiAgKiBpbnRlbF9lbmdpbmVzX2luaXRfY29tbW9uIC0gaW5pdGlhbGl6ZSBjZW5naW5lIHN0
YXRlIHdoaWNoIG1pZ2h0IHJlcXVpcmUgaHcgYWNjZXNzCiAgKiBAZW5naW5lOiBFbmdpbmUgdG8g
aW5pdGlhbGl6ZS4KQEAgLTg2MCw2ICs4NzAsOCBAQCBpbnQgaW50ZWxfZW5naW5lX2luaXRfY29t
bW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKICAqLwogdm9pZCBpbnRlbF9lbmdp
bmVfY2xlYW51cF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogeworCUdF
TV9CVUdfT04oIWxpc3RfZW1wdHkoJmVuZ2luZS0+YWN0aXZlLnJlcXVlc3RzKSk7CisKIAljbGVh
bnVwX3N0YXR1c19wYWdlKGVuZ2luZSk7CiAKIAlpbnRlbF9lbmdpbmVfZmluaV9icmVhZGNydW1i
cyhlbmdpbmUpOwpAQCAtODc0LDggKzg4Niw2IEBAIHZvaWQgaW50ZWxfZW5naW5lX2NsZWFudXBf
Y29tbW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlpbnRlbF9jb250ZXh0X3Vu
cGluKGVuZ2luZS0+a2VybmVsX2NvbnRleHQpOwogCUdFTV9CVUdfT04oIWxsaXN0X2VtcHR5KCZl
bmdpbmUtPmJhcnJpZXJfdGFza3MpKTsKIAotCWk5MTVfdGltZWxpbmVfZmluaSgmZW5naW5lLT50
aW1lbGluZSk7Ci0KIAlpbnRlbF93YV9saXN0X2ZyZWUoJmVuZ2luZS0+Y3R4X3dhX2xpc3QpOwog
CWludGVsX3dhX2xpc3RfZnJlZSgmZW5naW5lLT53YV9saXN0KTsKIAlpbnRlbF93YV9saXN0X2Zy
ZWUoJmVuZ2luZS0+d2hpdGVsaXN0KTsKQEAgLTE0ODIsMTYgKzE0OTIsNiBAQCB2b2lkIGludGVs
X2VuZ2luZV9kdW1wKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAogCWRybV9wcmlu
dGYobSwgIlx0UmVxdWVzdHM6XG4iKTsKIAotCXJxID0gbGlzdF9maXJzdF9lbnRyeSgmZW5naW5l
LT50aW1lbGluZS5yZXF1ZXN0cywKLQkJCSAgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3QsIGxpbmsp
OwotCWlmICgmcnEtPmxpbmsgIT0gJmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMpCi0JCXByaW50
X3JlcXVlc3QobSwgcnEsICJcdFx0Zmlyc3QgICIpOwotCi0JcnEgPSBsaXN0X2xhc3RfZW50cnko
JmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMsCi0JCQkgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3Qs
IGxpbmspOwotCWlmICgmcnEtPmxpbmsgIT0gJmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMpCi0J
CXByaW50X3JlcXVlc3QobSwgcnEsICJcdFx0bGFzdCAgICIpOwotCiAJcnEgPSBpbnRlbF9lbmdp
bmVfZmluZF9hY3RpdmVfcmVxdWVzdChlbmdpbmUpOwogCWlmIChycSkgewogCQlwcmludF9yZXF1
ZXN0KG0sIHJxLCAiXHRcdGFjdGl2ZSAiKTsKQEAgLTE1NzIsNyArMTU3Miw3IEBAIGludCBpbnRl
bF9lbmFibGVfZW5naW5lX3N0YXRzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlp
ZiAoIWludGVsX2VuZ2luZV9zdXBwb3J0c19zdGF0cyhlbmdpbmUpKQogCQlyZXR1cm4gLUVOT0RF
VjsKIAotCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsK
KwlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCXdyaXRl
X3NlcWxvY2soJmVuZ2luZS0+c3RhdHMubG9jayk7CiAKIAlpZiAodW5saWtlbHkoZW5naW5lLT5z
dGF0cy5lbmFibGVkID09IH4wKSkgewpAQCAtMTU5OCw3ICsxNTk4LDcgQEAgaW50IGludGVsX2Vu
YWJsZV9lbmdpbmVfc3RhdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiB1bmxv
Y2s6CiAJd3JpdGVfc2VxdW5sb2NrKCZlbmdpbmUtPnN0YXRzLmxvY2spOwotCXNwaW5fdW5sb2Nr
X2lycXJlc3RvcmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fdW5sb2Nr
X2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKIAogCXJldHVybiBlcnI7
CiB9CkBAIC0xNjgzLDIyICsxNjgzLDIyIEBAIGludGVsX2VuZ2luZV9maW5kX2FjdGl2ZV9yZXF1
ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkgKiBBdCBhbGwgb3RoZXIgdGlt
ZXMsIHdlIG11c3QgYXNzdW1lIHRoZSBHUFUgaXMgc3RpbGwgcnVubmluZywgYnV0CiAJICogd2Ug
b25seSBjYXJlIGFib3V0IHRoZSBzbmFwc2hvdCBvZiB0aGlzIG1vbWVudC4KIAkgKi8KLQlzcGlu
X2xvY2tfaXJxc2F2ZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7Ci0JbGlzdF9mb3Jf
ZWFjaF9lbnRyeShyZXF1ZXN0LCAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywgbGluaykgewor
CXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CisJbGlzdF9m
b3JfZWFjaF9lbnRyeShyZXF1ZXN0LCAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxp
bmspIHsKIAkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocmVxdWVzdCkpCiAJCQljb250aW51
ZTsKIAogCQlpZiAoIWk5MTVfcmVxdWVzdF9zdGFydGVkKHJlcXVlc3QpKQotCQkJYnJlYWs7CisJ
CQljb250aW51ZTsKIAogCQkvKiBNb3JlIHRoYW4gb25lIHByZWVtcHRpYmxlIHJlcXVlc3QgbWF5
IG1hdGNoISAqLwogCQlpZiAoIW1hdGNoX3JpbmcocmVxdWVzdCkpCi0JCQlicmVhazsKKwkJCWNv
bnRpbnVlOwogCiAJCWFjdGl2ZSA9IHJlcXVlc3Q7CiAJCWJyZWFrOwogCX0KLQlzcGluX3VubG9j
a19pcnFyZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGluX3VubG9j
a19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKIAlyZXR1cm4gYWN0
aXZlOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApp
bmRleCAzM2EzMWFhMmQyYWUuLmIyZmFjYThlNWRlYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKQEAgLTI4OCw3ICsyODgsMTEgQEAgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyB7CiAKIAlzdHJ1Y3QgaW50ZWxfcmluZyAqYnVmZmVyOwogCi0Jc3RydWN0
IGk5MTVfdGltZWxpbmUgdGltZWxpbmU7CisJc3RydWN0IHsKKwkJc3BpbmxvY2tfdCBsb2NrOwor
CQlzdHJ1Y3QgbGlzdF9oZWFkIHJlcXVlc3RzOworCX0gYWN0aXZlOworCiAJc3RydWN0IGxsaXN0
X2hlYWQgYmFycmllcl90YXNrczsKIAogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICprZXJuZWxfY29u
dGV4dDsgLyogcGlubmVkICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IGQw
YTUxNzUyMzg2Zi4uYzQwMGM2NmQwZWU1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMu
YwpAQCAtMjk4LDggKzI5OCw4IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBuZWVkX3ByZWVtcHQoY29u
c3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCSAqIENoZWNrIGFnYWluc3QgdGhl
IGZpcnN0IHJlcXVlc3QgaW4gRUxTUFsxXSwgaXQgd2lsbCwgdGhhbmtzIHRvIHRoZQogCSAqIHBv
d2VyIG9mIFBJLCBiZSB0aGUgaGlnaGVzdCBwcmlvcml0eSBvZiB0aGF0IGNvbnRleHQuCiAJICov
Ci0JaWYgKCFsaXN0X2lzX2xhc3QoJnJxLT5saW5rLCAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0
cykgJiYKLQkgICAgcnFfcHJpbyhsaXN0X25leHRfZW50cnkocnEsIGxpbmspKSA+IGxhc3RfcHJp
bykKKwlpZiAoIWxpc3RfaXNfbGFzdCgmcnEtPnNjaGVkLmxpbmssICZlbmdpbmUtPmFjdGl2ZS5y
ZXF1ZXN0cykgJiYKKwkgICAgcnFfcHJpbyhsaXN0X25leHRfZW50cnkocnEsIHNjaGVkLmxpbmsp
KSA+IGxhc3RfcHJpbykKIAkJcmV0dXJuIHRydWU7CiAKIAlpZiAocmIpIHsKQEAgLTQzNCwxMSAr
NDM0LDExIEBAIF9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogCXN0cnVjdCBsaXN0X2hlYWQgKnVuaW5pdGlhbGl6ZWRfdmFyKHBsKTsK
IAlpbnQgcHJpbyA9IEk5MTVfUFJJT1JJVFlfSU5WQUxJRDsKIAotCWxvY2tkZXBfYXNzZXJ0X2hl
bGQoJmVuZ2luZS0+dGltZWxpbmUubG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5l
LT5hY3RpdmUubG9jayk7CiAKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmVfcmV2ZXJzZShycSwg
cm4sCi0JCQkJCSAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywKLQkJCQkJIGxpbmspIHsKKwkJ
CQkJICZlbmdpbmUtPmFjdGl2ZS5yZXF1ZXN0cywKKwkJCQkJIHNjaGVkLmxpbmspIHsKIAkJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqb3duZXI7CiAKIAkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0
ZWQocnEpKQpAQCAtNDY1LDcgKzQ2NSw3IEBAIF9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJfQogCQkJR0VNX0JVR19PTihSQl9F
TVBUWV9ST09UKCZlbmdpbmUtPmV4ZWNsaXN0cy5xdWV1ZS5yYl9yb290KSk7CiAKLQkJCWxpc3Rf
YWRkKCZycS0+c2NoZWQubGluaywgcGwpOworCQkJbGlzdF9tb3ZlKCZycS0+c2NoZWQubGluaywg
cGwpOwogCQkJYWN0aXZlID0gcnE7CiAJCX0gZWxzZSB7CiAJCQlycS0+ZW5naW5lID0gb3duZXI7
CkBAIC05MzMsMTEgKzkzMywxMSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQlyYl9lbnRyeShyYiwgdHlwZW9mKCp2ZSks
IG5vZGVzW2VuZ2luZS0+aWRdLnJiKTsKIAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAKLQkJ
c3Bpbl9sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJc3Bpbl9sb2NrKCZ2ZS0+YmFz
ZS5hY3RpdmUubG9jayk7CiAKIAkJcnEgPSB2ZS0+cmVxdWVzdDsKIAkJaWYgKHVubGlrZWx5KCFy
cSkpIHsgLyogbG9zdCB0aGUgcmFjZSB0byBhIHNpYmxpbmcgKi8KLQkJCXNwaW5fdW5sb2NrKCZ2
ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS5hY3RpdmUu
bG9jayk7CiAJCQlyYl9lcmFzZV9jYWNoZWQocmIsICZleGVjbGlzdHMtPnZpcnR1YWwpOwogCQkJ
UkJfQ0xFQVJfTk9ERShyYik7CiAJCQlyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT52
aXJ0dWFsKTsKQEAgLTk1MCwxMyArOTUwLDEzIEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCQlpZiAocnFfcHJpbyhycSkg
Pj0gcXVldWVfcHJpbyhleGVjbGlzdHMpKSB7CiAJCQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2ZSwg
cnEsIGVuZ2luZSkpIHsKLQkJCQlzcGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7
CisJCQkJc3Bpbl91bmxvY2soJnZlLT5iYXNlLmFjdGl2ZS5sb2NrKTsKIAkJCQlyYiA9IHJiX25l
eHQocmIpOwogCQkJCWNvbnRpbnVlOwogCQkJfQogCiAJCQlpZiAobGFzdCAmJiAhY2FuX21lcmdl
X3JxKGxhc3QsIHJxKSkgewotCQkJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2Nr
KTsKKwkJCQlzcGluX3VubG9jaygmdmUtPmJhc2UuYWN0aXZlLmxvY2spOwogCQkJCXJldHVybjsg
LyogbGVhdmUgdGhpcyBycSBmb3IgYW5vdGhlciBlbmdpbmUgKi8KIAkJCX0KIApAQCAtMTAxMSw3
ICsxMDExLDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogCQkJbGFzdCA9IHJxOwogCQl9CiAKLQkJc3Bpbl91bmxvY2soJnZl
LT5iYXNlLnRpbWVsaW5lLmxvY2spOworCQlzcGluX3VubG9jaygmdmUtPmJhc2UuYWN0aXZlLmxv
Y2spOwogCQlicmVhazsKIAl9CiAKQEAgLTEwNjgsOCArMTA2OCw2IEBAIHN0YXRpYyB2b2lkIGV4
ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQlHRU1f
QlVHX09OKHBvcnRfaXNzZXQocG9ydCkpOwogCQkJfQogCi0JCQlsaXN0X2RlbF9pbml0KCZycS0+
c2NoZWQubGluayk7Ci0KIAkJCV9faTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7CiAJCQl0cmFjZV9p
OTE1X3JlcXVlc3RfaW4ocnEsIHBvcnRfaW5kZXgocG9ydCwgZXhlY2xpc3RzKSk7CiAKQEAgLTEx
NzAsNyArMTE2OCw3IEBAIHN0YXRpYyB2b2lkIHByb2Nlc3NfY3NiKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIAljb25zdCB1OCBudW1fZW50cmllcyA9IGV4ZWNsaXN0cy0+Y3NiX3Np
emU7CiAJdTggaGVhZCwgdGFpbDsKIAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+dGlt
ZWxpbmUubG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT5hY3RpdmUubG9jayk7
CiAKIAkvKgogCSAqIE5vdGUgdGhhdCBjc2Jfd3JpdGUsIGNzYl9zdGF0dXMgbWF5IGJlIGVpdGhl
ciBpbiBIV1NQIG9yIG1taW8uCkBAIC0xMzMwLDcgKzEzMjgsNyBAQCBzdGF0aWMgdm9pZCBwcm9j
ZXNzX2NzYihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIHN0YXRpYyB2b2lkIF9f
ZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpjb25z
dCBlbmdpbmUpCiB7Ci0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT50aW1lbGluZS5sb2Nr
KTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZlbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAogCXByb2Nl
c3NfY3NiKGVuZ2luZSk7CiAJaWYgKCFleGVjbGlzdHNfaXNfYWN0aXZlKCZlbmdpbmUtPmV4ZWNs
aXN0cywgRVhFQ0xJU1RTX0FDVElWRV9QUkVFTVBUKSkKQEAgLTEzNTEsMTUgKzEzNDksMTYgQEAg
c3RhdGljIHZvaWQgZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldCh1bnNpZ25lZCBsb25nIGRh
dGEpCiAJCSAgISFpbnRlbF93YWtlcmVmX2FjdGl2ZSgmZW5naW5lLT53YWtlcmVmKSwKIAkJICBl
bmdpbmUtPmV4ZWNsaXN0cy5hY3RpdmUpOwogCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+
dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2
ZS5sb2NrLCBmbGFncyk7CiAJX19leGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KGVuZ2luZSk7
Ci0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7
CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwog
fQogCiBzdGF0aWMgdm9pZCBxdWV1ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKIAkJCSAgc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9kZSwKIAkJCSAgaW50IHByaW8p
CiB7CisJR0VNX0JVR19PTighbGlzdF9lbXB0eSgmbm9kZS0+bGluaykpOwogCWxpc3RfYWRkX3Rh
aWwoJm5vZGUtPmxpbmssIGk5MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0KGVuZ2luZSwgcHJpbykp
OwogfQogCkBAIC0xMzkwLDcgKzEzODksNyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfc3VibWl0
X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAl1bnNpZ25lZCBsb25nIGZs
YWdzOwogCiAJLyogV2lsbCBiZSBjYWxsZWQgZnJvbSBpcnEtY29udGV4dCB3aGVuIHVzaW5nIGZv
cmVpZ24gZmVuY2VzLiAqLwotCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnRpbWVsaW5lLmxv
Y2ssIGZsYWdzKTsKKwlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxh
Z3MpOwogCiAJcXVldWVfcmVxdWVzdChlbmdpbmUsICZyZXF1ZXN0LT5zY2hlZCwgcnFfcHJpbyhy
ZXF1ZXN0KSk7CiAKQEAgLTEzOTksNyArMTM5OCw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19z
dWJtaXRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCiAJc3VibWl0X3F1
ZXVlKGVuZ2luZSwgcnFfcHJpbyhyZXF1ZXN0KSk7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKIHN0YXRpYyB2b2lkIF9fZXhlY2xp
c3RzX2NvbnRleHRfZmluaShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCkBAIC0yMDUwLDggKzIw
NDksOCBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiAJaW50ZWxfZW5naW5lX3N0b3BfY3MoZW5naW5lKTsKIAogCS8q
IEFuZCBmbHVzaCBhbnkgY3VycmVudCBkaXJlY3Qgc3VibWlzc2lvbi4gKi8KLQlzcGluX2xvY2tf
aXJxc2F2ZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7Ci0Jc3Bpbl91bmxvY2tfaXJx
cmVzdG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7CisJc3Bpbl9sb2NrX2lycXNh
dmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKIHN0YXRpYyBib29sIGxyY19yZWdz
X29rKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQpAQCAtMjA5NCwxMSArMjA5MywxMSBA
QCBzdGF0aWMgdm9pZCByZXNldF9jc2JfcG9pbnRlcnMoc3RydWN0IGludGVsX2VuZ2luZV9leGVj
bGlzdHMgKmV4ZWNsaXN0cykKIAogc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmFjdGl2ZV9y
ZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCWNvbnN0IHN0cnVjdCBsaXN0X2hl
YWQgKiBjb25zdCBsaXN0ID0gJnJxLT5lbmdpbmUtPnRpbWVsaW5lLnJlcXVlc3RzOworCWNvbnN0
IHN0cnVjdCBsaXN0X2hlYWQgKiBjb25zdCBsaXN0ID0gJnJxLT5lbmdpbmUtPmFjdGl2ZS5yZXF1
ZXN0czsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNvbnRleHQgPSBycS0+
aHdfY29udGV4dDsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3RpdmUgPSBOVUxMOwogCi0JbGlz
dF9mb3JfZWFjaF9lbnRyeV9mcm9tX3JldmVyc2UocnEsIGxpc3QsIGxpbmspIHsKKwlsaXN0X2Zv
cl9lYWNoX2VudHJ5X2Zyb21fcmV2ZXJzZShycSwgbGlzdCwgc2NoZWQubGluaykgewogCQlpZiAo
aTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCiAJCQlicmVhazsKIApAQCAtMjIxNSwxMSArMjIx
NCwxMSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAKIAlHRU1fVFJBQ0UoIiVzXG4iLCBlbmdpbmUtPm5h
bWUpOwogCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3Mp
OworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKIAlf
X2V4ZWNsaXN0c19yZXNldChlbmdpbmUsIHN0YWxsZWQpOwogCi0Jc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7CisJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogfQogCiBzdGF0aWMgdm9pZCBub3Bf
c3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKQEAgLTIyNTAsMTIgKzIyNDks
MTIgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiAJICogc3VibWlzc2lvbidzIGlycSBzdGF0ZSwgd2UgYWxzbyB3
aXNoIHRvIHJlbWluZCBvdXJzZWx2ZXMgdGhhdAogCSAqIGl0IGlzIGlycSBzdGF0ZS4pCiAJICov
Ci0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNw
aW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKIAlfX2V4ZWNs
aXN0c19yZXNldChlbmdpbmUsIHRydWUpOwogCiAJLyogTWFyayBhbGwgZXhlY3V0aW5nIHJlcXVl
c3RzIGFzIHNraXBwZWQuICovCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShycSwgJmVuZ2luZS0+dGlt
ZWxpbmUucmVxdWVzdHMsIGxpbmspIHsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAmZW5naW5l
LT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxpbmspIHsKIAkJaWYgKCFpOTE1X3JlcXVlc3Rfc2ln
bmFsZWQocnEpKQogCQkJZG1hX2ZlbmNlX3NldF9lcnJvcigmcnEtPmZlbmNlLCAtRUlPKTsKIApA
QCAtMjI4Niw3ICsyMjg1LDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNlbF9yZXF1ZXN0
cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCXJiX2VyYXNlX2NhY2hlZChyYiwg
JmV4ZWNsaXN0cy0+dmlydHVhbCk7CiAJCVJCX0NMRUFSX05PREUocmIpOwogCi0JCXNwaW5fbG9j
aygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJCXNwaW5fbG9jaygmdmUtPmJhc2UuYWN0aXZl
LmxvY2spOwogCQlpZiAodmUtPnJlcXVlc3QpIHsKIAkJCXZlLT5yZXF1ZXN0LT5lbmdpbmUgPSBl
bmdpbmU7CiAJCQlfX2k5MTVfcmVxdWVzdF9zdWJtaXQodmUtPnJlcXVlc3QpOwpAQCAtMjI5NSw3
ICsyMjk0LDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJp
b3JpdHlfaGludCA9IElOVF9NSU47CiAJCQl2ZS0+cmVxdWVzdCA9IE5VTEw7CiAJCX0KLQkJc3Bp
bl91bmxvY2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2spOworCQlzcGluX3VubG9jaygmdmUtPmJh
c2UuYWN0aXZlLmxvY2spOwogCX0KIAogCS8qIFJlbWFpbmluZyBfdW5yZWFkeV8gcmVxdWVzdHMg
d2lsbCBiZSBub3AnZWQgd2hlbiBzdWJtaXR0ZWQgKi8KQEAgLTIzMDcsNyArMjMwNiw3IEBAIHN0
YXRpYyB2b2lkIGV4ZWNsaXN0c19jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQogCUdFTV9CVUdfT04oX190YXNrbGV0X2lzX2VuYWJsZWQoJmV4ZWNsaXN0cy0+
dGFza2xldCkpOwogCWV4ZWNsaXN0cy0+dGFza2xldC5mdW5jID0gbm9wX3N1Ym1pc3Npb25fdGFz
a2xldDsKIAotCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywg
ZmxhZ3MpOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZs
YWdzKTsKIH0KIAogc3RhdGljIHZvaWQgZXhlY2xpc3RzX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCkBAIC0zMDEwLDEyICszMDA5LDE4IEBAIHN0YXRpYyBpbnQg
ZXhlY2xpc3RzX2NvbnRleHRfZGVmZXJyZWRfYWxsb2Moc3RydWN0IGludGVsX2NvbnRleHQgKmNl
LAogCXJldHVybiByZXQ7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgbGlzdF9oZWFkICp2aXJ0dWFsX3F1
ZXVlKHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUpCit7CisJcmV0dXJuICZ2ZS0+YmFzZS5leGVj
bGlzdHMuZGVmYXVsdF9wcmlvbGlzdC5yZXF1ZXN0c1swXTsKK30KKwogc3RhdGljIHZvaWQgdmly
dHVhbF9jb250ZXh0X2Rlc3Ryb3koc3RydWN0IGtyZWYgKmtyZWYpCiB7CiAJc3RydWN0IHZpcnR1
YWxfZW5naW5lICp2ZSA9CiAJCWNvbnRhaW5lcl9vZihrcmVmLCB0eXBlb2YoKnZlKSwgY29udGV4
dC5yZWYpOwogCXVuc2lnbmVkIGludCBuOwogCisJR0VNX0JVR19PTighbGlzdF9lbXB0eSh2aXJ0
dWFsX3F1ZXVlKHZlKSkpOwogCUdFTV9CVUdfT04odmUtPnJlcXVlc3QpOwogCUdFTV9CVUdfT04o
dmUtPmNvbnRleHQuaW5mbGlnaHQpOwogCkBAIC0zMDI2LDEzICszMDMxLDEzIEBAIHN0YXRpYyB2
b2lkIHZpcnR1YWxfY29udGV4dF9kZXN0cm95KHN0cnVjdCBrcmVmICprcmVmKQogCQlpZiAoUkJf
RU1QVFlfTk9ERShub2RlKSkKIAkJCWNvbnRpbnVlOwogCi0JCXNwaW5fbG9ja19pcnEoJnNpYmxp
bmctPnRpbWVsaW5lLmxvY2spOworCQlzcGluX2xvY2tfaXJxKCZzaWJsaW5nLT5hY3RpdmUubG9j
ayk7CiAKIAkJLyogRGV0YWNobWVudCBpcyBsYXppbHkgcGVyZm9ybWVkIGluIHRoZSBleGVjbGlz
dHMgdGFza2xldCAqLwogCQlpZiAoIVJCX0VNUFRZX05PREUobm9kZSkpCiAJCQlyYl9lcmFzZV9j
YWNoZWQobm9kZSwgJnNpYmxpbmctPmV4ZWNsaXN0cy52aXJ0dWFsKTsKIAotCQlzcGluX3VubG9j
a19pcnEoJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCQlzcGluX3VubG9ja19pcnEoJnNpYmxp
bmctPmFjdGl2ZS5sb2NrKTsKIAl9CiAJR0VNX0JVR19PTihfX3Rhc2tsZXRfaXNfc2NoZWR1bGVk
KCZ2ZS0+YmFzZS5leGVjbGlzdHMudGFza2xldCkpOwogCkBAIC0zMDQwLDggKzMwNDUsNiBAQCBz
dGF0aWMgdm9pZCB2aXJ0dWFsX2NvbnRleHRfZGVzdHJveShzdHJ1Y3Qga3JlZiAqa3JlZikKIAkJ
X19leGVjbGlzdHNfY29udGV4dF9maW5pKCZ2ZS0+Y29udGV4dCk7CiAKIAlrZnJlZSh2ZS0+Ym9u
ZHMpOwotCi0JaTkxNV90aW1lbGluZV9maW5pKCZ2ZS0+YmFzZS50aW1lbGluZSk7CiAJa2ZyZWUo
dmUpOwogfQogCkBAIC0zMTYxLDE2ICszMTY0LDE2IEBAIHN0YXRpYyB2b2lkIHZpcnR1YWxfc3Vi
bWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIAogCQlpZiAodW5saWtlbHkoISht
YXNrICYgc2libGluZy0+bWFzaykpKSB7CiAJCQlpZiAoIVJCX0VNUFRZX05PREUoJm5vZGUtPnJi
KSkgewotCQkJCXNwaW5fbG9jaygmc2libGluZy0+dGltZWxpbmUubG9jayk7CisJCQkJc3Bpbl9s
b2NrKCZzaWJsaW5nLT5hY3RpdmUubG9jayk7CiAJCQkJcmJfZXJhc2VfY2FjaGVkKCZub2RlLT5y
YiwKIAkJCQkJCSZzaWJsaW5nLT5leGVjbGlzdHMudmlydHVhbCk7CiAJCQkJUkJfQ0xFQVJfTk9E
RSgmbm9kZS0+cmIpOwotCQkJCXNwaW5fdW5sb2NrKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsK
KwkJCQlzcGluX3VubG9jaygmc2libGluZy0+YWN0aXZlLmxvY2spOwogCQkJfQogCQkJY29udGlu
dWU7CiAJCX0KIAotCQlzcGluX2xvY2soJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCQlzcGlu
X2xvY2soJnNpYmxpbmctPmFjdGl2ZS5sb2NrKTsKIAogCQlpZiAoIVJCX0VNUFRZX05PREUoJm5v
ZGUtPnJiKSkgewogCQkJLyoKQEAgLTMyMTQsNyArMzIxNyw3IEBAIHN0YXRpYyB2b2lkIHZpcnR1
YWxfc3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIAkJCXRhc2tsZXRfaGlf
c2NoZWR1bGUoJnNpYmxpbmctPmV4ZWNsaXN0cy50YXNrbGV0KTsKIAkJfQogCi0JCXNwaW5fdW5s
b2NrKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsKKwkJc3Bpbl91bmxvY2soJnNpYmxpbmctPmFj
dGl2ZS5sb2NrKTsKIAl9CiAJbG9jYWxfaXJxX2VuYWJsZSgpOwogfQpAQCAtMzIzMSw5ICszMjM0
LDEzIEBAIHN0YXRpYyB2b2lkIHZpcnR1YWxfc3VibWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiAJR0VNX0JVR19PTih2ZS0+YmFzZS5zdWJtaXRfcmVxdWVzdCAhPSB2aXJ0dWFs
X3N1Ym1pdF9yZXF1ZXN0KTsKIAogCUdFTV9CVUdfT04odmUtPnJlcXVlc3QpOworCUdFTV9CVUdf
T04oIWxpc3RfZW1wdHkodmlydHVhbF9xdWV1ZSh2ZSkpKTsKKwogCXZlLT5iYXNlLmV4ZWNsaXN0
cy5xdWV1ZV9wcmlvcml0eV9oaW50ID0gcnFfcHJpbyhycSk7CiAJV1JJVEVfT05DRSh2ZS0+cmVx
dWVzdCwgcnEpOwogCisJbGlzdF9tb3ZlX3RhaWwoJnJxLT5zY2hlZC5saW5rLCB2aXJ0dWFsX3F1
ZXVlKHZlKSk7CisKIAl0YXNrbGV0X3NjaGVkdWxlKCZ2ZS0+YmFzZS5leGVjbGlzdHMudGFza2xl
dCk7CiB9CiAKQEAgLTMyOTcsMTAgKzMzMDQsNyBAQCBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3Zp
cnR1YWwoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKIAogCXNucHJpbnRmKHZlLT5iYXNl
Lm5hbWUsIHNpemVvZih2ZS0+YmFzZS5uYW1lKSwgInZpcnR1YWwiKTsKIAotCWVyciA9IGk5MTVf
dGltZWxpbmVfaW5pdChjdHgtPmk5MTUsICZ2ZS0+YmFzZS50aW1lbGluZSwgTlVMTCk7Ci0JaWYg
KGVycikKLQkJZ290byBlcnJfcHV0OwotCWk5MTVfdGltZWxpbmVfc2V0X3N1YmNsYXNzKCZ2ZS0+
YmFzZS50aW1lbGluZSwgVElNRUxJTkVfVklSVFVBTCk7CisJaW50ZWxfZW5naW5lX2luaXRfYWN0
aXZlKCZ2ZS0+YmFzZSwgRU5HSU5FX1ZJUlRVQUwpOwogCiAJaW50ZWxfZW5naW5lX2luaXRfZXhl
Y2xpc3RzKCZ2ZS0+YmFzZSk7CiAKQEAgLTMzMTEsNiArMzMxNSw3IEBAIGludGVsX2V4ZWNsaXN0
c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCXZlLT5iYXNl
LnN1Ym1pdF9yZXF1ZXN0ID0gdmlydHVhbF9zdWJtaXRfcmVxdWVzdDsKIAl2ZS0+YmFzZS5ib25k
X2V4ZWN1dGUgPSB2aXJ0dWFsX2JvbmRfZXhlY3V0ZTsKIAorCUlOSVRfTElTVF9IRUFEKHZpcnR1
YWxfcXVldWUodmUpKTsKIAl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9
IElOVF9NSU47CiAJdGFza2xldF9pbml0KCZ2ZS0+YmFzZS5leGVjbGlzdHMudGFza2xldCwKIAkJ
ICAgICB2aXJ0dWFsX3N1Ym1pc3Npb25fdGFza2xldCwKQEAgLTM0NjUsMTEgKzM0NzAsMTEgQEAg
dm9pZCBpbnRlbF9leGVjbGlzdHNfc2hvd19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCiAJdW5zaWduZWQgaW50IGNvdW50OwogCXN0cnVjdCByYl9ub2RlICpyYjsKIAot
CXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGlu
X2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCiAJbGFzdCA9IE5V
TEw7CiAJY291bnQgPSAwOwotCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZlbmdpbmUtPnRpbWVs
aW5lLnJlcXVlc3RzLCBsaW5rKSB7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShycSwgJmVuZ2luZS0+
YWN0aXZlLnJlcXVlc3RzLCBzY2hlZC5saW5rKSB7CiAJCWlmIChjb3VudCsrIDwgbWF4IC0gMSkK
IAkJCXNob3dfcmVxdWVzdChtLCBycSwgIlx0XHRFICIpOwogCQllbHNlCkBAIC0zNTMyLDcgKzM1
MzcsNyBAQCB2b2lkIGludGVsX2V4ZWNsaXN0c19zaG93X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSwKIAkJc2hvd19yZXF1ZXN0KG0sIGxhc3QsICJcdFx0ViAiKTsKIAl9
CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdz
KTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7
CiB9CiAKIHZvaWQgaW50ZWxfbHJfY29udGV4dF9yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNl
dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCA2ZTY4MDdh
M2Y3NDguLjg0YzY3MGJkYjA4MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfcmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5j
CkBAIC00OSwxMiArNDksMTIgQEAgc3RhdGljIHZvaWQgZW5naW5lX3NraXBfY29udGV4dChzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBy
cS0+ZW5naW5lOwogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpodW5nX2N0eCA9IHJxLT5nZW1f
Y29udGV4dDsKIAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+dGltZWxpbmUubG9jayk7
CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT5hY3RpdmUubG9jayk7CiAKIAlpZiAoIWk5
MTVfcmVxdWVzdF9pc19hY3RpdmUocnEpKQogCQlyZXR1cm47CiAKLQlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5X2NvbnRpbnVlKHJxLCAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywgbGluaykKKwlsaXN0
X2Zvcl9lYWNoX2VudHJ5X2NvbnRpbnVlKHJxLCAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMsIHNj
aGVkLmxpbmspCiAJCWlmIChycS0+Z2VtX2NvbnRleHQgPT0gaHVuZ19jdHgpCiAJCQlpOTE1X3Jl
cXVlc3Rfc2tpcChycSwgLUVJTyk7CiB9CkBAIC0xMzAsNyArMTMwLDcgQEAgdm9pZCBpOTE1X3Jl
c2V0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQogCQkgIHJx
LT5mZW5jZS5zZXFubywKIAkJICB5ZXNubyhndWlsdHkpKTsKIAotCWxvY2tkZXBfYXNzZXJ0X2hl
bGQoJnJxLT5lbmdpbmUtPnRpbWVsaW5lLmxvY2spOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJx
LT5lbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAlHRU1fQlVHX09OKGk5MTVfcmVxdWVzdF9jb21wbGV0
ZWQocnEpKTsKIAogCWlmIChndWlsdHkpIHsKQEAgLTc4NSwxMCArNzg1LDEwIEBAIHN0YXRpYyB2
b2lkIG5vcF9zdWJtaXRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCQkg
IGVuZ2luZS0+bmFtZSwgcmVxdWVzdC0+ZmVuY2UuY29udGV4dCwgcmVxdWVzdC0+ZmVuY2Uuc2Vx
bm8pOwogCWRtYV9mZW5jZV9zZXRfZXJyb3IoJnJlcXVlc3QtPmZlbmNlLCAtRUlPKTsKIAotCXNw
aW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGluX2xv
Y2tfaXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCV9faTkxNV9yZXF1ZXN0
X3N1Ym1pdChyZXF1ZXN0KTsKIAlpOTE1X3JlcXVlc3RfbWFya19jb21wbGV0ZShyZXF1ZXN0KTsK
LQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsK
KwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAK
IAlpbnRlbF9lbmdpbmVfcXVldWVfYnJlYWRjcnVtYnMoZW5naW5lKTsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYwppbmRleCBjYzkwMWVkZWMwOWEuLjAxOWJm
MDM5ZjYxNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1
ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYwpA
QCAtNzMwLDE0ICs3MzAsMTMgQEAgc3RhdGljIHZvaWQgcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIHN0YXRpYyB2b2lkIHJlc2V0X3Jpbmcoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiB7Ci0Jc3RydWN0IGk5MTVfdGlt
ZWxpbmUgKnRsID0gJmVuZ2luZS0+dGltZWxpbmU7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcG9z
LCAqcnE7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAl1MzIgaGVhZDsKIAogCXJxID0gTlVMTDsK
LQlzcGluX2xvY2tfaXJxc2F2ZSgmdGwtPmxvY2ssIGZsYWdzKTsKLQlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5KHBvcywgJnRsLT5yZXF1ZXN0cywgbGluaykgeworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdp
bmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShwb3MsICZlbmdp
bmUtPmFjdGl2ZS5yZXF1ZXN0cywgc2NoZWQubGluaykgewogCQlpZiAoIWk5MTVfcmVxdWVzdF9j
b21wbGV0ZWQocG9zKSkgewogCQkJcnEgPSBwb3M7CiAJCQlicmVhazsKQEAgLTc5MSw3ICs3OTAs
NyBAQCBzdGF0aWMgdm9pZCByZXNldF9yaW5nKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwgYm9vbCBzdGFsbGVkKQogCX0KIAllbmdpbmUtPmJ1ZmZlci0+aGVhZCA9IGludGVsX3Jpbmdf
d3JhcChlbmdpbmUtPmJ1ZmZlciwgaGVhZCk7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0
bC0+bG9jaywgZmxhZ3MpOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZl
LmxvY2ssIGZsYWdzKTsKIH0KIAogc3RhdGljIHZvaWQgcmVzZXRfZmluaXNoKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKQEAgLTg3NywxMCArODc2LDEwIEBAIHN0YXRpYyB2b2lkIGNh
bmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJc3RydWN0IGk5
MTVfcmVxdWVzdCAqcmVxdWVzdDsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCi0Jc3Bpbl9sb2Nr
X2lycXNhdmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fbG9ja19pcnFz
YXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKIAkvKiBNYXJrIGFsbCBzdWJtaXR0
ZWQgcmVxdWVzdHMgYXMgc2tpcHBlZC4gKi8KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlcXVlc3Qs
ICZlbmdpbmUtPnRpbWVsaW5lLnJlcXVlc3RzLCBsaW5rKSB7CisJbGlzdF9mb3JfZWFjaF9lbnRy
eShyZXF1ZXN0LCAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxpbmspIHsKIAkJaWYg
KCFpOTE1X3JlcXVlc3Rfc2lnbmFsZWQocmVxdWVzdCkpCiAJCQlkbWFfZmVuY2Vfc2V0X2Vycm9y
KCZyZXF1ZXN0LT5mZW5jZSwgLUVJTyk7CiAKQEAgLTg4OSw3ICs4ODgsNyBAQCBzdGF0aWMgdm9p
ZCBjYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJLyog
UmVtYWluaW5nIF91bnJlYWR5XyByZXF1ZXN0cyB3aWxsIGJlIG5vcCdlZCB3aGVuIHN1Ym1pdHRl
ZCAqLwogCi0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBm
bGFncyk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxh
Z3MpOwogfQogCiBzdGF0aWMgdm9pZCBpOXh4X3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJlcXVlc3QpCkBAIC0xMjY3LDggKzEyNjYsNiBAQCBpbnRlbF9lbmdpbmVfY3JlYXRl
X3Jpbmcoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCiAJR0VNX0JVR19PTighaXNf
cG93ZXJfb2ZfMihzaXplKSk7CiAJR0VNX0JVR19PTihSSU5HX0NUTF9TSVpFKHNpemUpICYgflJJ
TkdfTlJfUEFHRVMpOwotCUdFTV9CVUdfT04odGltZWxpbmUgPT0gJmVuZ2luZS0+dGltZWxpbmUp
OwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CiAKIAlyaW5nID0ga3phbGxvYyhzaXplb2YoKnJpbmcpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIXJp
bmcpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwppbmRleCBkMWVmNTE1YmFjOGQu
LjA4NjgwMWI1MTQ0MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19l
bmdpbmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCkBAIC0y
MjksMTcgKzIyOSwxNyBAQCBzdGF0aWMgdm9pZCBtb2NrX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdDsK
IAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+dGlt
ZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5s
b2NrLCBmbGFncyk7CiAKIAkvKiBNYXJrIGFsbCBzdWJtaXR0ZWQgcmVxdWVzdHMgYXMgc2tpcHBl
ZC4gKi8KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJlcXVlc3QsICZlbmdpbmUtPnRpbWVsaW5lLnJl
cXVlc3RzLCBzY2hlZC5saW5rKSB7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShyZXF1ZXN0LCAmZW5n
aW5lLT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxpbmspIHsKIAkJaWYgKCFpOTE1X3JlcXVlc3Rf
c2lnbmFsZWQocmVxdWVzdCkpCiAJCQlkbWFfZmVuY2Vfc2V0X2Vycm9yKCZyZXF1ZXN0LT5mZW5j
ZSwgLUVJTyk7CiAKIAkJaTkxNV9yZXF1ZXN0X21hcmtfY29tcGxldGUocmVxdWVzdCk7CiAJfQog
Ci0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7
CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwog
fQogCiBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICptb2NrX2VuZ2luZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKQEAgLTI4NSwyOCArMjg1LDIzIEBAIGludCBtb2NrX2VuZ2luZV9pbml0
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSA9IGVuZ2luZS0+aTkxNTsKIAlpbnQgZXJyOwogCisJaW50ZWxfZW5naW5lX2luaXRf
YWN0aXZlKGVuZ2luZSwgRU5HSU5FX01PQ0spOwogCWludGVsX2VuZ2luZV9pbml0X2JyZWFkY3J1
bWJzKGVuZ2luZSk7CiAJaW50ZWxfZW5naW5lX2luaXRfZXhlY2xpc3RzKGVuZ2luZSk7CiAJaW50
ZWxfZW5naW5lX2luaXRfX3BtKGVuZ2luZSk7CiAKLQlpZiAoaTkxNV90aW1lbGluZV9pbml0KGk5
MTUsICZlbmdpbmUtPnRpbWVsaW5lLCBOVUxMKSkKLQkJZ290byBlcnJfYnJlYWRjcnVtYnM7Ci0J
aTkxNV90aW1lbGluZV9zZXRfc3ViY2xhc3MoJmVuZ2luZS0+dGltZWxpbmUsIFRJTUVMSU5FX0VO
R0lORSk7Ci0KIAllbmdpbmUtPmtlcm5lbF9jb250ZXh0ID0KIAkJaTkxNV9nZW1fY29udGV4dF9n
ZXRfZW5naW5lKGk5MTUtPmtlcm5lbF9jb250ZXh0LCBlbmdpbmUtPmlkKTsKIAlpZiAoSVNfRVJS
KGVuZ2luZS0+a2VybmVsX2NvbnRleHQpKQotCQlnb3RvIGVycl90aW1lbGluZTsKKwkJZ290byBl
cnJfYnJlYWRjcnVtYnM7CiAKIAllcnIgPSBpbnRlbF9jb250ZXh0X3BpbihlbmdpbmUtPmtlcm5l
bF9jb250ZXh0KTsKIAlpbnRlbF9jb250ZXh0X3B1dChlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsK
IAlpZiAoZXJyKQotCQlnb3RvIGVycl90aW1lbGluZTsKKwkJZ290byBlcnJfYnJlYWRjcnVtYnM7
CiAKIAlyZXR1cm4gMDsKIAotZXJyX3RpbWVsaW5lOgotCWk5MTVfdGltZWxpbmVfZmluaSgmZW5n
aW5lLT50aW1lbGluZSk7CiBlcnJfYnJlYWRjcnVtYnM6CiAJaW50ZWxfZW5naW5lX2ZpbmlfYnJl
YWRjcnVtYnMoZW5naW5lKTsKIAlyZXR1cm4gLUVOT01FTTsKQEAgLTM0MCw3ICszMzUsNiBAQCB2
b2lkIG1vY2tfZW5naW5lX2ZyZWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWlu
dGVsX2NvbnRleHRfdW5waW4oZW5naW5lLT5rZXJuZWxfY29udGV4dCk7CiAKIAlpbnRlbF9lbmdp
bmVfZmluaV9icmVhZGNydW1icyhlbmdpbmUpOwotCWk5MTVfdGltZWxpbmVfZmluaSgmZW5naW5l
LT50aW1lbGluZSk7CiAKIAlrZnJlZShlbmdpbmUpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Z3B1X2Vycm9yLmMKaW5kZXggMjZjOWMwNTk1YmRmLi5mNDExZTMyNDQyMDggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYwpAQCAtMTI3NSw3ICsxMjc1LDcgQEAgc3RhdGljIHZv
aWQgZW5naW5lX3JlY29yZF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
CiAKIAljb3VudCA9IDA7CiAJcmVxdWVzdCA9IGZpcnN0OwotCWxpc3RfZm9yX2VhY2hfZW50cnlf
ZnJvbShyZXF1ZXN0LCAmZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywgbGluaykKKwlsaXN0X2Zv
cl9lYWNoX2VudHJ5X2Zyb20ocmVxdWVzdCwgJmVuZ2luZS0+YWN0aXZlLnJlcXVlc3RzLCBzY2hl
ZC5saW5rKQogCQljb3VudCsrOwogCWlmICghY291bnQpCiAJCXJldHVybjsKQEAgLTEyODgsNyAr
MTI4OCw4IEBAIHN0YXRpYyB2b2lkIGVuZ2luZV9yZWNvcmRfcmVxdWVzdHMoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lLAogCiAJY291bnQgPSAwOwogCXJlcXVlc3QgPSBmaXJzdDsKLQls
aXN0X2Zvcl9lYWNoX2VudHJ5X2Zyb20ocmVxdWVzdCwgJmVuZ2luZS0+dGltZWxpbmUucmVxdWVz
dHMsIGxpbmspIHsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X2Zyb20ocmVxdWVzdCwKKwkJCQkgJmVu
Z2luZS0+YWN0aXZlLnJlcXVlc3RzLCBzY2hlZC5saW5rKSB7CiAJCWlmIChjb3VudCA+PSBlZS0+
bnVtX3JlcXVlc3RzKSB7CiAJCQkvKgogCQkJICogSWYgdGhlIHJpbmcgcmVxdWVzdCBsaXN0IHdh
cyBjaGFuZ2VkIGluCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVl
c3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCmluZGV4IGM5OTEzNmY3
OGFmOS4uOTgxOTQ4M2QxYjVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3JlcXVlc3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwpAQCAt
MjMyLDkgKzIzMiw5IEBAIHN0YXRpYyBib29sIGk5MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCiAKIAlsb2NhbF9pcnFfZGlzYWJsZSgpOwogCi0Jc3Bpbl9sb2NrKCZy
cS0+ZW5naW5lLT50aW1lbGluZS5sb2NrKTsKLQlsaXN0X2RlbCgmcnEtPmxpbmspOwotCXNwaW5f
dW5sb2NrKCZycS0+ZW5naW5lLT50aW1lbGluZS5sb2NrKTsKKwlzcGluX2xvY2soJnJxLT5lbmdp
bmUtPmFjdGl2ZS5sb2NrKTsKKwlsaXN0X2RlbCgmcnEtPnNjaGVkLmxpbmspOworCXNwaW5fdW5s
b2NrKCZycS0+ZW5naW5lLT5hY3RpdmUubG9jayk7CiAKIAlzcGluX2xvY2soJnJxLT5sb2NrKTsK
IAlpOTE1X3JlcXVlc3RfbWFya19jb21wbGV0ZShycSk7CkBAIC0yNTQsNiArMjU0LDcgQEAgc3Rh
dGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAlp
bnRlbF9jb250ZXh0X3VucGluKHJxLT5od19jb250ZXh0KTsKIAogCWk5MTVfcmVxdWVzdF9yZW1v
dmVfZnJvbV9jbGllbnQocnEpOworCWxpc3RfZGVsKCZycS0+bGluayk7CiAKIAlmcmVlX2NhcHR1
cmVfbGlzdChycSk7CiAJaTkxNV9zY2hlZF9ub2RlX2ZpbmkoJnJxLT5zY2hlZCk7CkBAIC0zNzMs
MjggKzM3NCwxNyBAQCBfX2k5MTVfcmVxdWVzdF9hd2FpdF9leGVjdXRpb24oc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEsCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyB2b2lkIG1vdmVfdG9fdGltZWxp
bmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwKLQkJCSAgICAgc3RydWN0IGk5MTVfdGlt
ZWxpbmUgKnRpbWVsaW5lKQotewotCUdFTV9CVUdfT04ocmVxdWVzdC0+dGltZWxpbmUgPT0gJnJl
cXVlc3QtPmVuZ2luZS0+dGltZWxpbmUpOwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJlcXVlc3Qt
PmVuZ2luZS0+dGltZWxpbmUubG9jayk7Ci0KLQlzcGluX2xvY2soJnJlcXVlc3QtPnRpbWVsaW5l
LT5sb2NrKTsKLQlsaXN0X21vdmVfdGFpbCgmcmVxdWVzdC0+bGluaywgJnRpbWVsaW5lLT5yZXF1
ZXN0cyk7Ci0Jc3Bpbl91bmxvY2soJnJlcXVlc3QtPnRpbWVsaW5lLT5sb2NrKTsKLX0KLQogdm9p
ZCBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIHsK
IAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSByZXF1ZXN0LT5lbmdpbmU7CiAKLQlH
RU1fVFJBQ0UoIiVzIGZlbmNlICVsbHg6JWxsZCAtPiBjdXJyZW50ICVkXG4iLAorCUdFTV9UUkFD
RSgiJXMgZmVuY2UgJWxseDolbGxkLCBjdXJyZW50ICVkXG4iLAogCQkgIGVuZ2luZS0+bmFtZSwK
IAkJICByZXF1ZXN0LT5mZW5jZS5jb250ZXh0LCByZXF1ZXN0LT5mZW5jZS5zZXFubywKIAkJICBo
d3NwX3NlcW5vKHJlcXVlc3QpKTsKIAogCUdFTV9CVUdfT04oIWlycXNfZGlzYWJsZWQoKSk7Ci0J
bG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT50aW1lbGluZS5sb2NrKTsKKwlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZlbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAogCWlmIChpOTE1X2dlbV9jb250ZXh0
X2lzX2Jhbm5lZChyZXF1ZXN0LT5nZW1fY29udGV4dCkpCiAJCWk5MTVfcmVxdWVzdF9za2lwKHJl
cXVlc3QsIC1FSU8pOwpAQCAtNDIyLDYgKzQxMiw4IEBAIHZvaWQgX19pOTE1X3JlcXVlc3Rfc3Vi
bWl0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJLyogV2UgbWF5IGJlIHJlY3Vyc2lu
ZyBmcm9tIHRoZSBzaWduYWwgY2FsbGJhY2sgb2YgYW5vdGhlciBpOTE1IGZlbmNlICovCiAJc3Bp
bl9sb2NrX25lc3RlZCgmcmVxdWVzdC0+bG9jaywgU0lOR0xFX0RFUFRIX05FU1RJTkcpOwogCisJ
bGlzdF9tb3ZlX3RhaWwoJnJlcXVlc3QtPnNjaGVkLmxpbmssICZlbmdpbmUtPmFjdGl2ZS5yZXF1
ZXN0cyk7CisKIAlHRU1fQlVHX09OKHRlc3RfYml0KEk5MTVfRkVOQ0VfRkxBR19BQ1RJVkUsICZy
ZXF1ZXN0LT5mZW5jZS5mbGFncykpOwogCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFHX0FDVElWRSwg
JnJlcXVlc3QtPmZlbmNlLmZsYWdzKTsKIApAQCAtNDM3LDkgKzQyOSw2IEBAIHZvaWQgX19pOTE1
X3JlcXVlc3Rfc3VibWl0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJZW5naW5lLT5l
bWl0X2ZpbmlfYnJlYWRjcnVtYihyZXF1ZXN0LAogCQkJCSAgICAgcmVxdWVzdC0+cmluZy0+dmFk
ZHIgKyByZXF1ZXN0LT5wb3N0Zml4KTsKIAotCS8qIFRyYW5zZmVyIGZyb20gcGVyLWNvbnRleHQg
b250byB0aGUgZ2xvYmFsIHBlci1lbmdpbmUgdGltZWxpbmUgKi8KLQltb3ZlX3RvX3RpbWVsaW5l
KHJlcXVlc3QsICZlbmdpbmUtPnRpbWVsaW5lKTsKLQogCWVuZ2luZS0+c2VyaWFsKys7CiAKIAl0
cmFjZV9pOTE1X3JlcXVlc3RfZXhlY3V0ZShyZXF1ZXN0KTsKQEAgLTQ1MSwxMSArNDQwLDExIEBA
IHZvaWQgaTkxNV9yZXF1ZXN0X3N1Ym1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQog
CXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKIAkvKiBXaWxsIGJlIGNhbGxlZCBmcm9tIGlycS1jb250
ZXh0IHdoZW4gdXNpbmcgZm9yZWlnbiBmZW5jZXMuICovCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVu
Z2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUt
PmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKIAlfX2k5MTVfcmVxdWVzdF9zdWJtaXQocmVxdWVzdCk7
CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdz
KTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7
CiB9CiAKIHZvaWQgX19pOTE1X3JlcXVlc3RfdW5zdWJtaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cmVxdWVzdCkKQEAgLTQ2OCw3ICs0NTcsNyBAQCB2b2lkIF9faTkxNV9yZXF1ZXN0X3Vuc3VibWl0
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJCSAgaHdzcF9zZXFubyhyZXF1ZXN0KSk7
CiAKIAlHRU1fQlVHX09OKCFpcnFzX2Rpc2FibGVkKCkpOwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQo
JmVuZ2luZS0+dGltZWxpbmUubG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT5h
Y3RpdmUubG9jayk7CiAKIAkvKgogCSAqIE9ubHkgdW53aW5kIGluIHJldmVyc2Ugb3JkZXIsIHJl
cXVpcmVkIHNvIHRoYXQgdGhlIHBlci1jb250ZXh0IGxpc3QKQEAgLTQ4Niw5ICs0NzUsNiBAQCB2
b2lkIF9faTkxNV9yZXF1ZXN0X3Vuc3VibWl0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Qp
CiAKIAlzcGluX3VubG9jaygmcmVxdWVzdC0+bG9jayk7CiAKLQkvKiBUcmFuc2ZlciBiYWNrIGZy
b20gdGhlIGdsb2JhbCBwZXItZW5naW5lIHRpbWVsaW5lIHRvIHBlci1jb250ZXh0ICovCi0JbW92
ZV90b190aW1lbGluZShyZXF1ZXN0LCByZXF1ZXN0LT50aW1lbGluZSk7Ci0KIAkvKiBXZSd2ZSBh
bHJlYWR5IHNwdW4sIGRvbid0IGNoYXJnZSBvbiByZXN1Ym1pdHRpbmcuICovCiAJaWYgKHJlcXVl
c3QtPnNjaGVkLnNlbWFwaG9yZXMgJiYgaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocmVxdWVzdCkpIHsK
IAkJcmVxdWVzdC0+c2NoZWQuYXR0ci5wcmlvcml0eSB8PSBJOTE1X1BSSU9SSVRZX05PU0VNQVBI
T1JFOwpAQCAtNTEwLDExICs0OTYsMTEgQEAgdm9pZCBpOTE1X3JlcXVlc3RfdW5zdWJtaXQoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCiAJLyog
V2lsbCBiZSBjYWxsZWQgZnJvbSBpcnEtY29udGV4dCB3aGVuIHVzaW5nIGZvcmVpZ24gZmVuY2Vz
LiAqLwotCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsK
KwlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCiAJX19p
OTE1X3JlcXVlc3RfdW5zdWJtaXQocmVxdWVzdCk7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKIHN0YXRpYyBpbnQgX19pOTE1X3N3
X2ZlbmNlX2NhbGwKQEAgLTY2OSw3ICs2NTUsNiBAQCBfX2k5MTVfcmVxdWVzdF9jcmVhdGUoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBfdCBnZnApCiAJcnEtPmVuZ2luZSA9IGNlLT5lbmdp
bmU7CiAJcnEtPnJpbmcgPSBjZS0+cmluZzsKIAlycS0+dGltZWxpbmUgPSB0bDsKLQlHRU1fQlVH
X09OKHJxLT50aW1lbGluZSA9PSAmY2UtPmVuZ2luZS0+dGltZWxpbmUpOwogCXJxLT5od3NwX3Nl
cW5vID0gdGwtPmh3c3Bfc2Vxbm87CiAJcnEtPmh3c3BfY2FjaGVsaW5lID0gdGwtPmh3c3BfY2Fj
aGVsaW5lOwogCXJxLT5yY3VzdGF0ZSA9IGdldF9zdGF0ZV9zeW5jaHJvbml6ZV9yY3UoKTsgLyog
YWN0cyBhcyBzbXBfbWIoKSAqLwpAQCAtMTEzNiw5ICsxMTIxLDcgQEAgX19pOTE1X3JlcXVlc3Rf
YWRkX3RvX3RpbWVsaW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCQkJCQkJCSAwKTsKIAl9
CiAKLQlzcGluX2xvY2tfaXJxKCZ0aW1lbGluZS0+bG9jayk7CiAJbGlzdF9hZGRfdGFpbCgmcnEt
PmxpbmssICZ0aW1lbGluZS0+cmVxdWVzdHMpOwotCXNwaW5fdW5sb2NrX2lycSgmdGltZWxpbmUt
PmxvY2spOwogCiAJLyoKIAkgKiBNYWtlIHN1cmUgdGhhdCBubyByZXF1ZXN0IGdhenVtcGVkIHVz
IC0gaWYgaXQgd2FzIGFsbG9jYXRlZCBhZnRlcgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9yZXF1ZXN0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3Qu
aAppbmRleCBjOWY3ZDA3OTkxYzguLmVkYmJkZmVjMjRhYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZXF1ZXN0LmgKQEAgLTIxNyw3ICsyMTcsNyBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0IHsKIAog
CWJvb2wgd2FpdGJvb3N0OwogCi0JLyoqIGVuZ2luZS0+cmVxdWVzdF9saXN0IGVudHJ5IGZvciB0
aGlzIHJlcXVlc3QgKi8KKwkvKiogdGltZWxpbmUtPnJlcXVlc3QgZW50cnkgZm9yIHRoaXMgcmVx
dWVzdCAqLwogCXN0cnVjdCBsaXN0X2hlYWQgbGluazsKIAogCS8qKiByaW5nLT5yZXF1ZXN0X2xp
c3QgZW50cnkgZm9yIHRoaXMgcmVxdWVzdCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9zY2hlZHVsZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1
bGVyLmMKaW5kZXggNzhjZWI1NmQ3ODAxLi4yZTliMzhiZGMzM2MgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9zY2hlZHVsZXIuYwpAQCAtNzcsNyArNzcsNyBAQCBpOTE1X3NjaGVkX2xvb2t1cF9w
cmlvbGlzdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGludCBwcmlvKQogCWJvb2wg
Zmlyc3QgPSB0cnVlOwogCWludCBpZHgsIGk7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZlbmdp
bmUtPnRpbWVsaW5lLmxvY2spOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+YWN0aXZl
LmxvY2spOwogCWFzc2VydF9wcmlvbGlzdHMoZXhlY2xpc3RzKTsKIAogCS8qIGJ1Y2tldHMgc29y
dGVkIGZyb20gaGlnaGVzdCBbaW4gc2xvdCAwXSB0byBsb3dlc3QgcHJpb3JpdHkgKi8KQEAgLTE2
Miw5ICsxNjIsOSBAQCBzY2hlZF9sb2NrX2VuZ2luZShjb25zdCBzdHJ1Y3QgaTkxNV9zY2hlZF9u
b2RlICpub2RlLAogCSAqIGNoZWNrIHRoYXQgdGhlIHJxIHN0aWxsIGJlbG9uZ3MgdG8gdGhlIG5l
d2x5IGxvY2tlZCBlbmdpbmUuCiAJICovCiAJd2hpbGUgKGxvY2tlZCAhPSAoZW5naW5lID0gUkVB
RF9PTkNFKHJxLT5lbmdpbmUpKSkgewotCQlzcGluX3VubG9jaygmbG9ja2VkLT50aW1lbGluZS5s
b2NrKTsKKwkJc3Bpbl91bmxvY2soJmxvY2tlZC0+YWN0aXZlLmxvY2spOwogCQltZW1zZXQoY2Fj
aGUsIDAsIHNpemVvZigqY2FjaGUpKTsKLQkJc3Bpbl9sb2NrKCZlbmdpbmUtPnRpbWVsaW5lLmxv
Y2spOworCQlzcGluX2xvY2soJmVuZ2luZS0+YWN0aXZlLmxvY2spOwogCQlsb2NrZWQgPSBlbmdp
bmU7CiAJfQogCkBAIC0xODksNyArMTg5LDcgQEAgc3RhdGljIHZvaWQga2lja19zdWJtaXNzaW9u
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgaW50IHByaW8pCiAJICogdGFza2xldCwg
aS5lLiB3ZSBoYXZlIG5vdCBjaGFuZ2UgdGhlIHByaW9yaXR5IHF1ZXVlCiAJICogc3VmZmljaWVu
dGx5IHRvIG91c3QgdGhlIHJ1bm5pbmcgY29udGV4dC4KIAkgKi8KLQlpZiAoaW5mbGlnaHQgJiYg
IWk5MTVfc2NoZWR1bGVyX25lZWRfcHJlZW1wdChwcmlvLCBycV9wcmlvKGluZmxpZ2h0KSkpCisJ
aWYgKCFpbmZsaWdodCB8fCAhaTkxNV9zY2hlZHVsZXJfbmVlZF9wcmVlbXB0KHByaW8sIHJxX3By
aW8oaW5mbGlnaHQpKSkKIAkJcmV0dXJuOwogCiAJdGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5l
LT5leGVjbGlzdHMudGFza2xldCk7CkBAIC0yNzgsNyArMjc4LDcgQEAgc3RhdGljIHZvaWQgX19p
OTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUsCiAKIAltZW1zZXQoJmNh
Y2hlLCAwLCBzaXplb2YoY2FjaGUpKTsKIAllbmdpbmUgPSBub2RlX3RvX3JlcXVlc3Qobm9kZSkt
PmVuZ2luZTsKLQlzcGluX2xvY2soJmVuZ2luZS0+dGltZWxpbmUubG9jayk7CisJc3Bpbl9sb2Nr
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAogCS8qIEZpZm8gYW5kIGRlcHRoLWZpcnN0IHJlcGxh
Y2VtZW50IGVuc3VyZSBvdXIgZGVwcyBleGVjdXRlIGJlZm9yZSB1cyAqLwogCWVuZ2luZSA9IHNj
aGVkX2xvY2tfZW5naW5lKG5vZGUsIGVuZ2luZSwgJmNhY2hlKTsKQEAgLTI4Nyw3ICsyODcsNyBA
QCBzdGF0aWMgdm9pZCBfX2k5MTVfc2NoZWR1bGUoc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9k
ZSwKIAogCQlub2RlID0gZGVwLT5zaWduYWxlcjsKIAkJZW5naW5lID0gc2NoZWRfbG9ja19lbmdp
bmUobm9kZSwgZW5naW5lLCAmY2FjaGUpOwotCQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZlbmdpbmUt
PnRpbWVsaW5lLmxvY2spOworCQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZlbmdpbmUtPmFjdGl2ZS5s
b2NrKTsKIAogCQkvKiBSZWNoZWNrIGFmdGVyIGFjcXVpcmluZyB0aGUgZW5naW5lLT50aW1lbGlu
ZS5sb2NrICovCiAJCWlmIChwcmlvIDw9IG5vZGUtPmF0dHIucHJpb3JpdHkgfHwgbm9kZV9zaWdu
YWxlZChub2RlKSkKQEAgLTI5NiwxNCArMjk2LDggQEAgc3RhdGljIHZvaWQgX19pOTE1X3NjaGVk
dWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUsCiAJCUdFTV9CVUdfT04obm9kZV90b19y
ZXF1ZXN0KG5vZGUpLT5lbmdpbmUgIT0gZW5naW5lKTsKIAogCQlub2RlLT5hdHRyLnByaW9yaXR5
ID0gcHJpbzsKLQkJaWYgKCFsaXN0X2VtcHR5KCZub2RlLT5saW5rKSkgewotCQkJR0VNX0JVR19P
TihpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChlbmdpbmUpKTsKLQkJCWlmICghY2FjaGUucHJpb2xp
c3QpCi0JCQkJY2FjaGUucHJpb2xpc3QgPQotCQkJCQlpOTE1X3NjaGVkX2xvb2t1cF9wcmlvbGlz
dChlbmdpbmUsCi0JCQkJCQkJCSAgIHByaW8pOwotCQkJbGlzdF9tb3ZlX3RhaWwoJm5vZGUtPmxp
bmssIGNhY2hlLnByaW9saXN0KTsKLQkJfSBlbHNlIHsKKworCQlpZiAobGlzdF9lbXB0eSgmbm9k
ZS0+bGluaykpIHsKIAkJCS8qCiAJCQkgKiBJZiB0aGUgcmVxdWVzdCBpcyBub3QgaW4gdGhlIHBy
aW9saXN0IHF1ZXVlIGJlY2F1c2UKIAkJCSAqIGl0IGlzIG5vdCB5ZXQgcnVubmFibGUsIHRoZW4g
aXQgZG9lc24ndCBjb250cmlidXRlCkBAIC0zMTIsOCArMzA2LDE2IEBAIHN0YXRpYyB2b2lkIF9f
aTkxNV9zY2hlZHVsZShzdHJ1Y3QgaTkxNV9zY2hlZF9ub2RlICpub2RlLAogCQkJICogcXVldWU7
IGJ1dCBpbiB0aGF0IGNhc2Ugd2UgbWF5IHN0aWxsIG5lZWQgdG8gcmVvcmRlcgogCQkJICogdGhl
IGluZmxpZ2h0IHJlcXVlc3RzLgogCQkJICovCi0JCQlpZiAoIWk5MTVfc3dfZmVuY2VfZG9uZSgm
bm9kZV90b19yZXF1ZXN0KG5vZGUpLT5zdWJtaXQpKQotCQkJCWNvbnRpbnVlOworCQkJY29udGlu
dWU7CisJCX0KKworCQlpZiAoIWludGVsX2VuZ2luZV9pc192aXJ0dWFsKGVuZ2luZSkgJiYKKwkJ
ICAgICFpOTE1X3JlcXVlc3RfaXNfYWN0aXZlKG5vZGVfdG9fcmVxdWVzdChub2RlKSkpIHsKKwkJ
CWlmICghY2FjaGUucHJpb2xpc3QpCisJCQkJY2FjaGUucHJpb2xpc3QgPQorCQkJCQlpOTE1X3Nj
aGVkX2xvb2t1cF9wcmlvbGlzdChlbmdpbmUsCisJCQkJCQkJCSAgIHByaW8pOworCQkJbGlzdF9t
b3ZlX3RhaWwoJm5vZGUtPmxpbmssIGNhY2hlLnByaW9saXN0KTsKIAkJfQogCiAJCWlmIChwcmlv
IDw9IGVuZ2luZS0+ZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQpCkBAIC0zMjUsNyArMzI3
LDcgQEAgc3RhdGljIHZvaWQgX19pOTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUg
Km5vZGUsCiAJCWtpY2tfc3VibWlzc2lvbihlbmdpbmUsIHByaW8pOwogCX0KIAotCXNwaW5fdW5s
b2NrKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2spOworCXNwaW5fdW5sb2NrKCZlbmdpbmUtPmFjdGl2
ZS5sb2NrKTsKIH0KIAogdm9pZCBpOTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LCBjb25zdCBzdHJ1Y3QgaTkxNV9zY2hlZF9hdHRyICphdHRyKQpAQCAtNDM5LDggKzQ0MSw2IEBA
IHZvaWQgaTkxNV9zY2hlZF9ub2RlX2Zpbmkoc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9kZSkK
IHsKIAlzdHJ1Y3QgaTkxNV9kZXBlbmRlbmN5ICpkZXAsICp0bXA7CiAKLQlHRU1fQlVHX09OKCFs
aXN0X2VtcHR5KCZub2RlLT5saW5rKSk7Ci0KIAlzcGluX2xvY2tfaXJxKCZzY2hlZHVsZV9sb2Nr
KTsKIAogCS8qCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5l
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lLmMKaW5kZXggMDAwZTFhOWI2
NzUwLi5jMzExY2U5YzZmOWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
dGltZWxpbmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lLmMKQEAg
LTI1MSw3ICsyNTEsNiBAQCBpbnQgaTkxNV90aW1lbGluZV9pbml0KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1LAogCiAJdGltZWxpbmUtPmZlbmNlX2NvbnRleHQgPSBkbWFfZmVuY2VfY29u
dGV4dF9hbGxvYygxKTsKIAotCXNwaW5fbG9ja19pbml0KCZ0aW1lbGluZS0+bG9jayk7CiAJbXV0
ZXhfaW5pdCgmdGltZWxpbmUtPm11dGV4KTsKIAogCUlOSVRfQUNUSVZFX1JFUVVFU1QoJnRpbWVs
aW5lLT5sYXN0X3JlcXVlc3QpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV90aW1lbGluZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGluZS5oCmluZGV4
IDI3NjY4YTFhNjlhMy4uMzZlNWU1YTY1MTU1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3RpbWVsaW5lLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1l
bGluZS5oCkBAIC0zNiwyNSArMzYsNiBAQCBpbnQgaTkxNV90aW1lbGluZV9pbml0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1LAogCQkgICAgICAgc3RydWN0IGk5MTVfdm1hICpod3NwKTsK
IHZvaWQgaTkxNV90aW1lbGluZV9maW5pKHN0cnVjdCBpOTE1X3RpbWVsaW5lICp0bCk7CiAKLXN0
YXRpYyBpbmxpbmUgdm9pZAotaTkxNV90aW1lbGluZV9zZXRfc3ViY2xhc3Moc3RydWN0IGk5MTVf
dGltZWxpbmUgKnRpbWVsaW5lLAotCQkJICAgdW5zaWduZWQgaW50IHN1YmNsYXNzKQotewotCWxv
Y2tkZXBfc2V0X3N1YmNsYXNzKCZ0aW1lbGluZS0+bG9jaywgc3ViY2xhc3MpOwotCi0JLyoKLQkg
KiBEdWUgdG8gYW4gaW50ZXJlc3RpbmcgcXVpcmsgaW4gbG9ja2RlcCdzIGludGVybmFsIGRlYnVn
IHRyYWNraW5nLAotCSAqIGFmdGVyIHNldHRpbmcgYSBzdWJjbGFzcyB3ZSBtdXN0IGVuc3VyZSB0
aGUgbG9jayBpcyB1c2VkLiBPdGhlcndpc2UsCi0JICogbnJfdW51c2VkX2xvY2tzIGlzIGluY3Jl
bWVudGVkIG9uY2UgdG9vIG9mdGVuLgotCSAqLwotI2lmZGVmIENPTkZJR19ERUJVR19MT0NLX0FM
TE9DCi0JbG9jYWxfaXJxX2Rpc2FibGUoKTsKLQlsb2NrX21hcF9hY3F1aXJlKCZ0aW1lbGluZS0+
bG9jay5kZXBfbWFwKTsKLQlsb2NrX21hcF9yZWxlYXNlKCZ0aW1lbGluZS0+bG9jay5kZXBfbWFw
KTsKLQlsb2NhbF9pcnFfZW5hYmxlKCk7Ci0jZW5kaWYKLX0KLQogc3RydWN0IGk5MTVfdGltZWxp
bmUgKgogaTkxNV90aW1lbGluZV9jcmVhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUs
CiAJCSAgICAgc3RydWN0IGk5MTVfdm1hICpnbG9iYWxfaHdzcCk7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgKaW5kZXggMTY4ODcwNWY0YTJiLi5mY2U1Y2I0ZjEw
OTAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdGltZWxpbmVfdHlwZXMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgKQEAgLTIz
LDEwICsyMyw2IEBAIHN0cnVjdCBpOTE1X3RpbWVsaW5lIHsKIAl1NjQgZmVuY2VfY29udGV4dDsK
IAl1MzIgc2Vxbm87CiAKLQlzcGlubG9ja190IGxvY2s7Ci0jZGVmaW5lIFRJTUVMSU5FX0NMSUVO
VCAwIC8qIGRlZmF1bHQgc3ViY2xhc3MgKi8KLSNkZWZpbmUgVElNRUxJTkVfRU5HSU5FIDEKLSNk
ZWZpbmUgVElNRUxJTkVfVklSVFVBTCAyCiAJc3RydWN0IG11dGV4IG11dGV4OyAvKiBwcm90ZWN0
cyB0aGUgZmxvdyBvZiByZXF1ZXN0cyAqLwogCiAJdW5zaWduZWQgaW50IHBpbl9jb3VudDsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Y19zdWJtaXNzaW9uLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCmluZGV4IDk3ZjY5NzBk
OGRhOC4uZGI1MzFlYmM3NzA0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF9ndWNfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Y19z
dWJtaXNzaW9uLmMKQEAgLTc0MCw3ICs3NDAsNyBAQCBzdGF0aWMgYm9vbCBfX2d1Y19kZXF1ZXVl
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlib29sIHN1Ym1pdCA9IGZhbHNlOwog
CXN0cnVjdCByYl9ub2RlICpyYjsKIAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+dGlt
ZWxpbmUubG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZW5naW5lLT5hY3RpdmUubG9jayk7
CiAKIAlpZiAocG9ydF9pc3NldChwb3J0KSkgewogCQlpZiAoaW50ZWxfZW5naW5lX2hhc19wcmVl
bXB0aW9uKGVuZ2luZSkpIHsKQEAgLTgyMiw3ICs4MjIsNyBAQCBzdGF0aWMgdm9pZCBndWNfc3Vi
bWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycTsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCi0Jc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2lu
ZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFj
dGl2ZS5sb2NrLCBmbGFncyk7CiAKIAlycSA9IHBvcnRfcmVxdWVzdChwb3J0KTsKIAl3aGlsZSAo
cnEgJiYgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpIHsKQEAgLTg0Nyw3ICs4NDcsNyBAQCBz
dGF0aWMgdm9pZCBndWNfc3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIAlp
ZiAoIWV4ZWNsaXN0c19pc19hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1BSRUVN
UFQpKQogCQlndWNfZGVxdWV1ZShlbmdpbmUpOwogCi0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
ZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
ZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogfQogCiBzdGF0aWMgdm9pZCBndWNfcmVzZXRf
cHJlcGFyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCkBAIC04ODQsNyArODg0LDcg
QEAgc3RhdGljIHZvaWQgZ3VjX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwg
Ym9vbCBzdGFsbGVkKQogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFn
cyk7CisJc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKIAog
CWV4ZWNsaXN0c19jYW5jZWxfcG9ydF9yZXF1ZXN0cyhleGVjbGlzdHMpOwogCkBAIC05MDAsNyAr
OTAwLDcgQEAgc3RhdGljIHZvaWQgZ3VjX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwgYm9vbCBzdGFsbGVkKQogCWludGVsX2xyX2NvbnRleHRfcmVzZXQoZW5naW5lLCBycS0+
aHdfY29udGV4dCwgcnEtPmhlYWQsIHN0YWxsZWQpOwogCiBvdXRfdW5sb2NrOgotCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOworCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKIH0KIAogc3RhdGlj
IHZvaWQgZ3VjX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CkBAIC05MjYsMTMgKzkyNiwxMyBAQCBzdGF0aWMgdm9pZCBndWNfY2FuY2VsX3JlcXVlc3RzKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkgKiBzdWJtaXNzaW9uJ3MgaXJxIHN0YXRl
LCB3ZSBhbHNvIHdpc2ggdG8gcmVtaW5kIG91cnNlbHZlcyB0aGF0CiAJICogaXQgaXMgaXJxIHN0
YXRlLikKIAkgKi8KLQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBm
bGFncyk7CisJc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsK
IAogCS8qIENhbmNlbCB0aGUgcmVxdWVzdHMgb24gdGhlIEhXIGFuZCBjbGVhciB0aGUgRUxTUCB0
cmFja2VyLiAqLwogCWV4ZWNsaXN0c19jYW5jZWxfcG9ydF9yZXF1ZXN0cyhleGVjbGlzdHMpOwog
CiAJLyogTWFyayBhbGwgZXhlY3V0aW5nIHJlcXVlc3RzIGFzIHNraXBwZWQuICovCi0JbGlzdF9m
b3JfZWFjaF9lbnRyeShycSwgJmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMsIGxpbmspIHsKKwls
aXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMsIHNjaGVkLmxp
bmspIHsKIAkJaWYgKCFpOTE1X3JlcXVlc3Rfc2lnbmFsZWQocnEpKQogCQkJZG1hX2ZlbmNlX3Nl
dF9lcnJvcigmcnEtPmZlbmNlLCAtRUlPKTsKIApAQCAtOTYxLDcgKzk2MSw3IEBAIHN0YXRpYyB2
b2lkIGd1Y19jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CWV4ZWNsaXN0cy0+cXVldWUgPSBSQl9ST09UX0NBQ0hFRDsKIAlHRU1fQlVHX09OKHBvcnRfaXNz
ZXQoZXhlY2xpc3RzLT5wb3J0KSk7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUt
PnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUt
PmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9maW5pc2go
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvc2VsZnRlc3RzL21vY2tfdGltZWxpbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L3NlbGZ0ZXN0cy9tb2NrX3RpbWVsaW5lLmMKaW5kZXggZTA4NDQ3NjQ2OWVmLi42NWI1MmJlMjNk
NDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX3RpbWVs
aW5lLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL21vY2tfdGltZWxpbmUu
YwpAQCAtMTMsNyArMTMsNiBAQCB2b2lkIG1vY2tfdGltZWxpbmVfaW5pdChzdHJ1Y3QgaTkxNV90
aW1lbGluZSAqdGltZWxpbmUsIHU2NCBjb250ZXh0KQogCXRpbWVsaW5lLT5pOTE1ID0gTlVMTDsK
IAl0aW1lbGluZS0+ZmVuY2VfY29udGV4dCA9IGNvbnRleHQ7CiAKLQlzcGluX2xvY2tfaW5pdCgm
dGltZWxpbmUtPmxvY2spOwogCW11dGV4X2luaXQoJnRpbWVsaW5lLT5tdXRleCk7CiAKIAlJTklU
X0FDVElWRV9SRVFVRVNUKCZ0aW1lbGluZS0+bGFzdF9yZXF1ZXN0KTsKLS0gCjIuMjAuMQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

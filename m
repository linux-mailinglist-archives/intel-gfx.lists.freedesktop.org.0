Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2536C21B46B
	for <lists+intel-gfx@lfdr.de>; Fri, 10 Jul 2020 13:59:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A404A6EBEE;
	Fri, 10 Jul 2020 11:59:39 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 94CC36EBEE
 for <intel-gfx@lists.freedesktop.org>; Fri, 10 Jul 2020 11:59:38 +0000 (UTC)
IronPort-SDR: wUYbRrRSm8edzebN9yOBK5NzSqBo4VHk2IO5nHcivSoguaab4d33H/+qSOKvqRrfJKDxytUQ33
 jGEb4gFv1YmA==
X-IronPort-AV: E=McAfee;i="6000,8403,9677"; a="149653680"
X-IronPort-AV: E=Sophos;i="5.75,335,1589266800"; d="scan'208";a="149653680"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 10 Jul 2020 04:59:38 -0700
IronPort-SDR: vJNF3hG6DzxP8MU0w8drz1B5B8DLqakcm3OAn2hX2BOoawRGVERB5KSfT0XgK/1RUZoK24yihz
 tfEv/Hd3yU9w==
X-IronPort-AV: E=Sophos;i="5.75,335,1589266800"; d="scan'208";a="458257444"
Received: from nmartino-mobl1.ger.corp.intel.com (HELO
 mwahaha-bdw.ger.corp.intel.com) ([10.255.207.224])
 by orsmga005-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 10 Jul 2020 04:59:35 -0700
From: Matthew Auld <matthew.auld@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 10 Jul 2020 12:57:12 +0100
Message-Id: <20200710115757.290984-16-matthew.auld@intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200710115757.290984-1-matthew.auld@intel.com>
References: <20200710115757.290984-1-matthew.auld@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 15/60] drm/i915/dg1: add hpd interrupt handling
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTHVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+CgpERzEgaGFz
IG9uZSBtb3JlIGNvbWJvIHBoeSBwb3J0LCBubyBUQyBhbmQgYWxsIGlycSBoYW5kbGluZyBnb2Vz
IHRocm91Z2gKU0RFLCBsaWtlIGZvciBNQ0MuCgp2MjogQWxzbyBjaGFuZ2UgaW50ZWxfaHBkX3Bp
bl9kZWZhdWx0KCkgdG8gaW5jbHVkZSBERzEgbWFwcGluZwoKQ2M6IEFuc2h1bWFuIEd1cHRhIDxh
bnNodW1hbi5ndXB0YUBpbnRlbC5jb20+CkNjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3Nl
LnNvdXphQGludGVsLmNvbT4KQ2M6IEltcmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4KU2ln
bmVkLW9mZi1ieTogTHVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+Ci0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9ob3RwbHVnLmMgfCAgMyArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyAgICAgICAgICAgICAgfCA1NyArKysrKysr
KysrKysrKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCAgICAgICAgICAg
ICAgfCAgOCArKysKIDMgZmlsZXMgY2hhbmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwgNyBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hv
dHBsdWcuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5jCmlu
ZGV4IDNmMWQ3YjgwNGE2Ni4uMTgzOGUzYzg3ZTczIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuYwpAQCAtOTUsNyArOTUsOCBAQCBlbnVtIGhwZF9waW4g
aW50ZWxfaHBkX3Bpbl9kZWZhdWx0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IAkgKiBzaG9sZCBiZSBIUERfUE9SVF97RCxFfSByYXRoZXIgdGhhbiB7QyxEfS4gIE5vdGUgdGhh
dCB0aGlzIGRpZmZlcnMKIAkgKiBmcm9tIHRoZSBiZWhhdmlvciBvZiBib3RoIFRHTCtUR1AgYW5k
IFJLTCtDTVAuCiAJICovCi0JaWYgKElTX1JPQ0tFVExBS0UoZGV2X3ByaXYpICYmIEhBU19QQ0hf
VEdQKGRldl9wcml2KSkKKwlpZiAoSVNfREcxKGRldl9wcml2KSB8fAorCSAgICAoSVNfUk9DS0VU
TEFLRShkZXZfcHJpdikgJiYgSEFTX1BDSF9UR1AoZGV2X3ByaXYpKSkKIAkJcmV0dXJuIEhQRF9Q
T1JUX0EgKyBwb3J0IC0gUE9SVF9BOwogCiAJc3dpdGNoIChwaHkpIHsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2lycS5jCmluZGV4IDFmYTY3NzAwZDhmNC4uZThiZGM1MmM5NGJiIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfaXJxLmMKQEAgLTE2Nyw2ICsxNjcsMTMgQEAgc3RhdGljIGNvbnN0IHUzMiBocGRfdGdwW0hQ
RF9OVU1fUElOU10gPSB7CiAJW0hQRF9QT1JUX0ldID0gU0RFX1RDX0hPVFBMVUdfSUNQKFBPUlRf
VEM2KSwKIH07CiAKK3N0YXRpYyBjb25zdCB1MzIgaHBkX2RnMV9zZGVbSFBEX05VTV9QSU5TXSA9
IHsKKwlbSFBEX1BPUlRfQV0gPSBTREVfRERJX0hPVFBMVUdfSUNQKFBIWV9BKSwKKwlbSFBEX1BP
UlRfQl0gPSBTREVfRERJX0hPVFBMVUdfSUNQKFBIWV9CKSwKKwlbSFBEX1BPUlRfRF0gPSBTREVf
RERJX0hPVFBMVUdfSUNQKFBIWV9DKSwKKwlbSFBEX1BPUlRfRV0gPSBTREVfRERJX0hPVFBMVUdf
SUNQKFBIWV9EKSwKK307CisKIHN0YXRpYyB2b2lkIGludGVsX2hwZF9pbml0X3BpbnMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXN0cnVjdCBpOTE1X2hvdHBsdWcgKmhw
ZCA9ICZkZXZfcHJpdi0+aG90cGx1ZzsKQEAgLTE5MywxMCArMjAwLDEzIEBAIHN0YXRpYyB2b2lk
IGludGVsX2hwZF9pbml0X3BpbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CWVsc2UKIAkJaHBkLT5ocGQgPSBocGRfaWxrOwogCi0JaWYgKCFIQVNfUENIX1NQTElUKGRldl9w
cml2KSB8fCBIQVNfUENIX05PUChkZXZfcHJpdikpCisJaWYgKChJTlRFTF9QQ0hfVFlQRShkZXZf
cHJpdikgPCBQQ0hfREcxKSAmJgorCSAgICAoIUhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpIHx8IEhB
U19QQ0hfTk9QKGRldl9wcml2KSkpCiAJCXJldHVybjsKIAotCWlmIChIQVNfUENIX1RHUChkZXZf
cHJpdikgfHwgSEFTX1BDSF9KU1AoZGV2X3ByaXYpKQorCWlmIChIQVNfUENIX0RHMShkZXZfcHJp
dikpCisJCWhwZC0+cGNoX2hwZCA9IGhwZF9kZzFfc2RlOworCWVsc2UgaWYgKEhBU19QQ0hfVEdQ
KGRldl9wcml2KSB8fCBIQVNfUENIX0pTUChkZXZfcHJpdikpCiAJCWhwZC0+cGNoX2hwZCA9IGhw
ZF90Z3A7CiAJZWxzZSBpZiAoSEFTX1BDSF9JQ1AoZGV2X3ByaXYpIHx8IEhBU19QQ0hfTUNDKGRl
dl9wcml2KSkKIAkJaHBkLT5wY2hfaHBkID0gaHBkX2ljcDsKQEAgLTExNDUsNiArMTE1NSwyMiBA
QCBzdGF0aWMgYm9vbCB0Z3BfdGNfcG9ydF9ob3RwbHVnX2xvbmdfZGV0ZWN0KGVudW0gaHBkX3Bp
biBwaW4sIHUzMiB2YWwpCiAJfQogfQogCitzdGF0aWMgYm9vbCBkZzFfZGRpX3BvcnRfaG90cGx1
Z19sb25nX2RldGVjdChlbnVtIGhwZF9waW4gcGluLCB1MzIgdmFsKQoreworCXN3aXRjaCAocGlu
KSB7CisJY2FzZSBIUERfUE9SVF9BOgorCQlyZXR1cm4gdmFsICYgU0hPVFBMVUdfQ1RMX0RESV9I
UERfTE9OR19ERVRFQ1QoUE9SVF9BKTsKKwljYXNlIEhQRF9QT1JUX0I6CisJCXJldHVybiB2YWwg
JiBTSE9UUExVR19DVExfRERJX0hQRF9MT05HX0RFVEVDVChQT1JUX0IpOworCWNhc2UgSFBEX1BP
UlRfRDoKKwkJcmV0dXJuIHZhbCAmIFNIT1RQTFVHX0NUTF9ERElfSFBEX0xPTkdfREVURUNUKFBP
UlRfQyk7CisJY2FzZSBIUERfUE9SVF9FOgorCQlyZXR1cm4gdmFsICYgU0hPVFBMVUdfQ1RMX0RE
SV9IUERfTE9OR19ERVRFQ1QoUE9SVF9EKTsKKwlkZWZhdWx0OgorCQlyZXR1cm4gZmFsc2U7CisJ
fQorfQorCiBzdGF0aWMgYm9vbCBzcHRfcG9ydF9ob3RwbHVnMl9sb25nX2RldGVjdChlbnVtIGhw
ZF9waW4gcGluLCB1MzIgdmFsKQogewogCXN3aXRjaCAocGluKSB7CkBAIC0xODkzLDEzICsxOTE5
LDIwIEBAIHN0YXRpYyB2b2lkIGljcF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsIHUzMiBwY2hfaWlyKQogCXUzMiBkZGlfaG90cGx1Z190cmlnZ2VyLCB0Y19o
b3RwbHVnX3RyaWdnZXI7CiAJdTMyIHBpbl9tYXNrID0gMCwgbG9uZ19tYXNrID0gMDsKIAlib29s
ICgqdGNfcG9ydF9ob3RwbHVnX2xvbmdfZGV0ZWN0KShlbnVtIGhwZF9waW4gcGluLCB1MzIgdmFs
KTsKKwlib29sICgqZGRpX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdCkoZW51bSBocGRfcGluIHBp
biwgdTMyIHZhbCk7CiAKLQlpZiAoSEFTX1BDSF9UR1AoZGV2X3ByaXYpKSB7CisJaWYgKEhBU19Q
Q0hfREcxKGRldl9wcml2KSkgeworCQlkZGlfaG90cGx1Z190cmlnZ2VyID0gcGNoX2lpciAmIFNE
RV9ERElfTUFTS19ERzE7CisJCWRkaV9wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3QgPSBkZzFfZGRp
X3BvcnRfaG90cGx1Z19sb25nX2RldGVjdDsKKwkJdGNfaG90cGx1Z190cmlnZ2VyID0gMDsKKwl9
IGVsc2UgaWYgKEhBU19QQ0hfVEdQKGRldl9wcml2KSkgewogCQlkZGlfaG90cGx1Z190cmlnZ2Vy
ID0gcGNoX2lpciAmIFNERV9ERElfTUFTS19UR1A7CisJCWRkaV9wb3J0X2hvdHBsdWdfbG9uZ19k
ZXRlY3QgPSBpY3BfZGRpX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdDsKIAkJdGNfaG90cGx1Z190
cmlnZ2VyID0gcGNoX2lpciAmIFNERV9UQ19NQVNLX1RHUDsKIAkJdGNfcG9ydF9ob3RwbHVnX2xv
bmdfZGV0ZWN0ID0gdGdwX3RjX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdDsKIAl9IGVsc2UgaWYg
KEhBU19QQ0hfSlNQKGRldl9wcml2KSkgewogCQlkZGlfaG90cGx1Z190cmlnZ2VyID0gcGNoX2lp
ciAmIFNERV9ERElfTUFTS19UR1A7CisJCWRkaV9wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3QgPSBp
Y3BfZGRpX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdDsKIAkJdGNfaG90cGx1Z190cmlnZ2VyID0g
MDsKIAl9IGVsc2UgaWYgKEhBU19QQ0hfTUNDKGRldl9wcml2KSkgewogCQlkZGlfaG90cGx1Z190
cmlnZ2VyID0gcGNoX2lpciAmIFNERV9ERElfTUFTS19JQ1A7CkBAIC0xOTExLDYgKzE5NDQsNyBA
QCBzdGF0aWMgdm9pZCBpY3BfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LCB1MzIgcGNoX2lpcikKIAkJCSBJTlRFTF9QQ0hfVFlQRShkZXZfcHJpdikpOwogCiAJ
CWRkaV9ob3RwbHVnX3RyaWdnZXIgPSBwY2hfaWlyICYgU0RFX0RESV9NQVNLX0lDUDsKKwkJZGRp
X3BvcnRfaG90cGx1Z19sb25nX2RldGVjdCA9IGljcF9kZGlfcG9ydF9ob3RwbHVnX2xvbmdfZGV0
ZWN0OwogCQl0Y19ob3RwbHVnX3RyaWdnZXIgPSBwY2hfaWlyICYgU0RFX1RDX01BU0tfSUNQOwog
CQl0Y19wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3QgPSBpY3BfdGNfcG9ydF9ob3RwbHVnX2xvbmdf
ZGV0ZWN0OwogCX0KQEAgLTE5MjQsNyArMTk1OCw3IEBAIHN0YXRpYyB2b2lkIGljcF9pcnFfaGFu
ZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBwY2hfaWlyKQogCQlp
bnRlbF9nZXRfaHBkX3BpbnMoZGV2X3ByaXYsICZwaW5fbWFzaywgJmxvbmdfbWFzaywKIAkJCQkg
ICBkZGlfaG90cGx1Z190cmlnZ2VyLCBkaWdfaG90cGx1Z19yZWcsCiAJCQkJICAgZGV2X3ByaXYt
PmhvdHBsdWcucGNoX2hwZCwKLQkJCQkgICBpY3BfZGRpX3BvcnRfaG90cGx1Z19sb25nX2RldGVj
dCk7CisJCQkJICAgZGRpX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdCk7CiAJfQogCiAJaWYgKHRj
X2hvdHBsdWdfdHJpZ2dlcikgewpAQCAtMzE0NSw2ICszMTc5LDEzIEBAIHN0YXRpYyB2b2lkIGpz
cF9ocGRfaXJxX3NldHVwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJCSAg
VEdQX0RESV9IUERfRU5BQkxFX01BU0ssIDApOwogfQogCitzdGF0aWMgdm9pZCBkZzFfaHBkX2ly
cV9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCit7CisJaWNwX2hwZF9p
cnFfc2V0dXAoZGV2X3ByaXYsCisJCQkgIFNERV9ERElfTUFTS19ERzEsIDAsCisJCQkgIERHMV9E
RElfSFBEX0VOQUJMRV9NQVNLLCAwKTsKK30KKwogc3RhdGljIHZvaWQgZ2VuMTFfaHBkX2RldGVj
dGlvbl9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJdTMyIGhv
dHBsdWc7CkBAIC0zNTMzLDcgKzM1NzQsOSBAQCBzdGF0aWMgdm9pZCBpY3BfaXJxX3Bvc3RpbnN0
YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlnZW4zX2Fzc2VydF9paXJf
aXNfemVybygmZGV2X3ByaXYtPnVuY29yZSwgU0RFSUlSKTsKIAlJOTE1X1dSSVRFKFNERUlNUiwg
fm1hc2spOwogCi0JaWYgKEhBU19QQ0hfVEdQKGRldl9wcml2KSkKKwlpZiAoSEFTX1BDSF9ERzEo
ZGV2X3ByaXYpKQorCQlpY3BfaHBkX2RldGVjdGlvbl9zZXR1cChkZXZfcHJpdiwgREcxX0RESV9I
UERfRU5BQkxFX01BU0ssIDApOworCWVsc2UgaWYgKEhBU19QQ0hfVEdQKGRldl9wcml2KSkKIAkJ
aWNwX2hwZF9kZXRlY3Rpb25fc2V0dXAoZGV2X3ByaXYsIFRHUF9ERElfSFBEX0VOQUJMRV9NQVNL
LAogCQkJCQlUR1BfVENfSFBEX0VOQUJMRV9NQVNLKTsKIAllbHNlIGlmIChIQVNfUENIX0pTUChk
ZXZfcHJpdikpCkBAIC00MDQ5LDcgKzQwOTIsOSBAQCB2b2lkIGludGVsX2lycV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaWYgKEk5MTVfSEFTX0hPVFBMVUcoZGV2
X3ByaXYpKQogCQkJZGV2X3ByaXYtPmRpc3BsYXkuaHBkX2lycV9zZXR1cCA9IGk5MTVfaHBkX2ly
cV9zZXR1cDsKIAl9IGVsc2UgewotCQlpZiAoSEFTX1BDSF9KU1AoZGV2X3ByaXYpKQorCQlpZiAo
SEFTX1BDSF9ERzEoZGV2X3ByaXYpKQorCQkJZGV2X3ByaXYtPmRpc3BsYXkuaHBkX2lycV9zZXR1
cCA9IGRnMV9ocGRfaXJxX3NldHVwOworCQllbHNlIGlmIChIQVNfUENIX0pTUChkZXZfcHJpdikp
CiAJCQlkZXZfcHJpdi0+ZGlzcGxheS5ocGRfaXJxX3NldHVwID0ganNwX2hwZF9pcnFfc2V0dXA7
CiAJCWVsc2UgaWYgKEhBU19QQ0hfTUNDKGRldl9wcml2KSkKIAkJCWRldl9wcml2LT5kaXNwbGF5
LmhwZF9pcnFfc2V0dXAgPSBtY2NfaHBkX2lycV9zZXR1cDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfcmVnLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5o
CmluZGV4IGE0MjM5NDZlMGY3OC4uNjE0YjJkYTRlNmI2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVn
LmgKQEAgLTgyMzAsNiArODIzMCwxMCBAQCBlbnVtIHsKIAkJCQkJIFNERV9UQ19IT1RQTFVHX0lD
UChQT1JUX1RDMykgfCBcCiAJCQkJCSBTREVfVENfSE9UUExVR19JQ1AoUE9SVF9UQzIpIHwgXAog
CQkJCQkgU0RFX1RDX0hPVFBMVUdfSUNQKFBPUlRfVEMxKSkKKyNkZWZpbmUgU0RFX0RESV9NQVNL
X0RHMQkJKFNERV9ERElfSE9UUExVR19JQ1AoUE9SVF9EKSB8IFwKKwkJCQkJIFNERV9ERElfSE9U
UExVR19JQ1AoUE9SVF9DKSB8IFwKKwkJCQkJIFNERV9ERElfSE9UUExVR19JQ1AoUE9SVF9CKSB8
IFwKKwkJCQkJIFNERV9ERElfSE9UUExVR19JQ1AoUE9SVF9BKSkKIAogI2RlZmluZSBTREVJU1Ig
IF9NTUlPKDB4YzQwMDApCiAjZGVmaW5lIFNERUlNUiAgX01NSU8oMHhjNDAwNCkKQEAgLTg0Mjks
NiArODQzMywxMCBAQCBlbnVtIHsKICNkZWZpbmUgVEdQX1RDX0hQRF9FTkFCTEVfTUFTSwkJKElD
UF9UQ19IUERfRU5BQkxFKFBPUlRfVEM2KSB8IFwKIAkJCQkJIElDUF9UQ19IUERfRU5BQkxFKFBP
UlRfVEM1KSB8IFwKIAkJCQkJIElDUF9UQ19IUERfRU5BQkxFX01BU0spCisjZGVmaW5lIERHMV9E
RElfSFBEX0VOQUJMRV9NQVNLCQkoU0hPVFBMVUdfQ1RMX0RESV9IUERfRU5BQkxFKFBPUlRfRCkg
fCBcCisJCQkJCSBTSE9UUExVR19DVExfRERJX0hQRF9FTkFCTEUoUE9SVF9DKSB8IFwKKwkJCQkJ
IFNIT1RQTFVHX0NUTF9ERElfSFBEX0VOQUJMRShQT1JUX0IpIHwgXAorCQkJCQkgU0hPVFBMVUdf
Q1RMX0RESV9IUERfRU5BQkxFKFBPUlRfQSkpCiAKICNkZWZpbmUgX1BDSF9EUExMX0EgICAgICAg
ICAgICAgIDB4YzYwMTQKICNkZWZpbmUgX1BDSF9EUExMX0IgICAgICAgICAgICAgIDB4YzYwMTgK
LS0gCjIuMjYuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
Cmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4
Cg==

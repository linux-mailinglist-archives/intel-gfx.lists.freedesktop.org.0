Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5CA3722D97
	for <lists+intel-gfx@lfdr.de>; Mon, 20 May 2019 10:03:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0F3E78926A;
	Mon, 20 May 2019 08:03:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 53B0D89262
 for <intel-gfx@lists.freedesktop.org>; Mon, 20 May 2019 08:03:29 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16610859-1500050 
 for multiple; Mon, 20 May 2019 09:01:32 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 20 May 2019 09:01:00 +0100
Message-Id: <20190520080127.18255-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190520080127.18255-1-chris@chris-wilson.co.uk>
References: <20190520080127.18255-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 06/33] drm/i915: Load balancing across a virtual
 engine
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2aW5nIGFsbG93ZWQgdGhlIHVzZXIgdG8gZGVmaW5lIGEgc2V0IG9mIGVuZ2luZXMgdGhhdCB0
aGV5IHdpbGwgd2FudAp0byBvbmx5IHVzZSwgd2UgZ28gb25lIHN0ZXAgZnVydGhlciBhbmQgYWxs
b3cgdGhlbSB0byBiaW5kIHRob3NlIGVuZ2luZXMKaW50byBhIHNpbmdsZSB2aXJ0dWFsIGluc3Rh
bmNlLiBTdWJtaXR0aW5nIGEgYmF0Y2ggdG8gdGhlIHZpcnR1YWwgZW5naW5lCndpbGwgdGhlbiBm
b3J3YXJkIGl0IHRvIGFueSBvbmUgb2YgdGhlIHNldCBpbiBhIG1hbm5lciBhcyBiZXN0IHRvCmRp
c3RyaWJ1dGUgbG9hZC4gIFRoZSB2aXJ0dWFsIGVuZ2luZSBoYXMgYSBzaW5nbGUgdGltZWxpbmUg
YWNyb3NzIGFsbAplbmdpbmVzIChpdCBvcGVyYXRlcyBhcyBhIHNpbmdsZSBxdWV1ZSksIHNvIGl0
IGlzIG5vdCBhYmxlIHRvIGNvbmN1cnJlbnRseQpydW4gYmF0Y2hlcyBhY3Jvc3MgbXVsdGlwbGUg
ZW5naW5lcyBieSBpdHNlbGY7IHRoYXQgaXMgbGVmdCB1cCB0byB0aGUgdXNlcgp0byBzdWJtaXQg
bXVsdGlwbGUgY29uY3VycmVudCBiYXRjaGVzIHRvIG11bHRpcGxlIHF1ZXVlcy4gTXVsdGlwbGUg
dXNlcnMKd2lsbCBiZSBsb2FkIGJhbGFuY2VkIGFjcm9zcyB0aGUgc3lzdGVtLgoKVGhlIG1lY2hh
bmlzbSB1c2VkIGZvciBsb2FkIGJhbGFuY2luZyBpbiB0aGlzIHBhdGNoIGlzIGEgbGF0ZSBncmVl
ZHkKYmFsYW5jZXIuIFdoZW4gYSByZXF1ZXN0IGlzIHJlYWR5IGZvciBleGVjdXRpb24sIGl0IGlz
IGFkZGVkIHRvIGVhY2gKZW5naW5lJ3MgcXVldWUsIGFuZCB3aGVuIGFuIGVuZ2luZSBpcyByZWFk
eSBmb3IgaXRzIG5leHQgcmVxdWVzdCBpdApjbGFpbXMgaXQgZnJvbSB0aGUgdmlydHVhbCBlbmdp
bmUuIFRoZSBmaXJzdCBlbmdpbmUgdG8gZG8gc28sIHdpbnMsIGkuZS4KdGhlIHJlcXVlc3QgaXMg
ZXhlY3V0ZWQgYXQgdGhlIGVhcmxpZXN0IG9wcG9ydHVuaXR5IChpZGxlIG1vbWVudCkgaW4gdGhl
CnN5c3RlbS4KCkFzIG5vdCBhbGwgSFcgaXMgY3JlYXRlZCBlcXVhbCwgdGhlIHVzZXIgaXMgc3Rp
bGwgYWJsZSB0byBza2lwIHRoZQp2aXJ0dWFsIGVuZ2luZSBhbmQgZXhlY3V0ZSB0aGUgYmF0Y2gg
b24gYSBzcGVjaWZpYyBlbmdpbmUsIGFsbCB3aXRoaW4gdGhlCnNhbWUgcXVldWUuIEl0IHdpbGwg
dGhlbiBiZSBleGVjdXRlZCBpbiBvcmRlciBvbiB0aGUgY29ycmVjdCBlbmdpbmUsCndpdGggZXhl
Y3V0aW9uIG9uIG90aGVyIHZpcnR1YWwgZW5naW5lcyBiZWluZyBtb3ZlZCBhd2F5IGR1ZSB0byB0
aGUgbG9hZApkZXRlY3Rpb24uCgpBIGNvdXBsZSBvZiBhcmVhcyBmb3IgcG90ZW50aWFsIGltcHJv
dmVtZW50IGxlZnQhCgotIFRoZSB2aXJ0dWFsIGVuZ2luZSBhbHdheXMgdGFrZSBwcmlvcml0eSBv
dmVyIGVxdWFsLXByaW9yaXR5IHRhc2tzLgpNb3N0bHkgYnJva2VuIHVwIGJ5IGFwcGx5aW5nIEZR
X0NPREVMIHJ1bGVzIGZvciBwcmlvcml0aXNpbmcgbmV3IGNsaWVudHMsCmFuZCBob3BlZnVsbHkg
dGhlIHZpcnR1YWwgYW5kIHJlYWwgZW5naW5lcyBhcmUgbm90IHRoZW4gY29uZ2VzdGVkIChpLmUu
CmFsbCB3b3JrIGlzIHZpYSB2aXJ0dWFsIGVuZ2luZXMsIG9yIGFsbCB3b3JrIGlzIHRvIHRoZSBy
ZWFsIGVuZ2luZSkuCgotIFdlIHJlcXVpcmUgdGhlIGJyZWFkY3J1bWIgaXJxIGFyb3VuZCBldmVy
eSB2aXJ0dWFsIGVuZ2luZSByZXF1ZXN0LiBGb3IKbm9ybWFsIGVuZ2luZXMsIHdlIGVsaW1pbmF0
ZSB0aGUgbmVlZCBmb3IgdGhlIHNsb3cgcm91bmQgdHJpcCB2aWEKaW50ZXJydXB0IGJ5IHVzaW5n
IHRoZSBzdWJtaXQgZmVuY2UgYW5kIHF1ZXVlaW5nIGluIG9yZGVyLiBGb3IgdmlydHVhbAplbmdp
bmVzLCB3ZSBoYXZlIHRvIGFsbG93IGFueSBqb2IgdG8gdHJhbnNmZXIgdG8gYSBuZXcgcmluZywg
YW5kIGNhbm5vdApjb2FsZXNjZSB0aGUgc3VibWlzc2lvbnMsIHNvIHJlcXVpcmUgdGhlIGNvbXBs
ZXRpb24gZmVuY2UgaW5zdGVhZCwKZm9yY2luZyB0aGUgcGVyc2lzdGVudCB1c2Ugb2YgaW50ZXJy
dXB0cy4KCi0gV2Ugb25seSBkcmlwIGZlZWQgc2luZ2xlIHJlcXVlc3RzIHRocm91Z2ggZWFjaCB2
aXJ0dWFsIGVuZ2luZSBhbmQgb250bwp0aGUgcGh5c2ljYWwgZW5naW5lcywgZXZlbiBpZiB0aGVy
ZSB3YXMgZW5vdWdoIHdvcmsgdG8gZmlsbCBhbGwgRUxTUCwKbGVhdmluZyBzbWFsbCBzdGFsbHMg
d2l0aCBhbiBpZGxlIENTIGV2ZW50IGF0IHRoZSBlbmQgb2YgZXZlcnkgcmVxdWVzdC4KQ291bGQg
d2UgYmUgZ3JlZWR5IGFuZCBmaWxsIGJvdGggc2xvdHM/IEJlaW5nIGxhenkgaXMgdmlydHVvdXMg
Zm9yIGxvYWQKZGlzdHJpYnV0aW9uIG9uIGxlc3MtdGhhbi1mdWxsIHdvcmtsb2FkcyB0aG91Z2gu
CgpPdGhlciBhcmVhcyBvZiBpbXByb3ZlbWVudCBhcmUgbW9yZSBnZW5lcmFsLCBzdWNoIGFzIHJl
ZHVjaW5nIGxvY2sKY29udGVudGlvbiwgcmVkdWNpbmcgZGlzcGF0Y2ggb3ZlcmhlYWQsIGxvb2tp
bmcgYXQgZGlyZWN0IHN1Ym1pc3Npb24KcmF0aGVyIHRoYW4gYm91bmNpbmcgYXJvdW5kIHRhc2ts
ZXRzIGV0Yy4KCnNzZXU6IExpZnQgdGhlIHJlc3RyaWN0aW9uIHRvIGFsbG93IHNzZXUgdG8gYmUg
cmVjb25maWd1cmVkIG9uIHZpcnR1YWwKZW5naW5lcyBjb21wb3NlZCBvZiBSRU5ERVJfQ0xBU1Mg
KHJjcykuCgp2MjogbWFjcm9pemUgY2hlY2tfdXNlcl9tYnooKQp2MzogQ2FuY2VsIHZpcnR1YWwg
ZW5naW5lcyBvbiB3ZWRnaW5nCnY0OiBDb21tZW5jZSBjb21tZW50aW5nCnY1OiBSZXBsYWNlIDY0
YiBzaWJsaW5nX21hc2sgd2l0aCBhIGxpc3Qgb2YgY2xhc3M6aW5zdGFuY2UKdjY6IERyb3AgdGhl
IG9uZS1lbGVtZW50IGFycmF5IGluIHRoZSB1YWJpCnY3OiBBc3NlcnQgaXQgaXMgYW4gdmlydHVh
bCBlbmdpbmUgaW4gdG9fdmlydHVhbF9lbmdpbmUoKQp2ODogU2tpcCBvdmVyIGhvbGVzIGluIFtj
bGFzc11baW5zdF0gc28gd2UgY2FuIHNlbGZ0ZXN0IHdpdGggKHZjczAsIHZjczIpCgpTaWduZWQt
b2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IFR2cnRr
byBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBUdnJ0a28g
VXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIHwgICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5jICAgICAgICAgIHwgNjgwICsrKysrKysrKysrKysrKysrKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oICAgICAgICAgIHwgICA5ICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jICAgICAgIHwgMTgwICsrKysrCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oICAgICAgICAgICAgICB8ICAgNSArCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0LmMgICAgICB8IDExNiArKystCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jICAgICAgICB8ICAxOSArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV90aW1lbGluZV90eXBlcy5oICAgfCAgIDEgKwogaW5jbHVkZS91YXBpL2Ry
bS9pOTE1X2RybS5oICAgICAgICAgICAgICAgICAgfCAgMzkgKysKIDkgZmlsZXMgY2hhbmdlZCwg
MTAyOSBpbnNlcnRpb25zKCspLCAyOCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmluZGV4IGUzODFjMWM3MzkwMi4uN2I0N2UwMGZh
MDgyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlw
ZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApA
QCAtMjI3LDYgKzIyNyw3IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzIHsKIAkgKiBA
cXVldWU6IHF1ZXVlIG9mIHJlcXVlc3RzLCBpbiBwcmlvcml0eSBsaXN0cwogCSAqLwogCXN0cnVj
dCByYl9yb290X2NhY2hlZCBxdWV1ZTsKKwlzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgdmlydHVhbDsK
IAogCS8qKgogCSAqIEBjc2Jfd3JpdGU6IGNvbnRyb2wgcmVnaXN0ZXIgZm9yIENvbnRleHQgU3dp
dGNoIGJ1ZmZlcgpAQCAtNDQ1LDYgKzQ0Niw3IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mgewog
I2RlZmluZSBJOTE1X0VOR0lORV9IQVNfUFJFRU1QVElPTiAgIEJJVCgyKQogI2RlZmluZSBJOTE1
X0VOR0lORV9IQVNfU0VNQVBIT1JFUyAgIEJJVCgzKQogI2RlZmluZSBJOTE1X0VOR0lORV9ORUVE
U19CUkVBRENSVU1CX1RBU0tMRVQgQklUKDQpCisjZGVmaW5lIEk5MTVfRU5HSU5FX0lTX1ZJUlRV
QUwgICAgICAgQklUKDUpCiAJdW5zaWduZWQgaW50IGZsYWdzOwogCiAJLyoKQEAgLTUzNCw2ICs1
MzYsMTIgQEAgaW50ZWxfZW5naW5lX25lZWRzX2JyZWFkY3J1bWJfdGFza2xldChjb25zdCBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1
X0VOR0lORV9ORUVEU19CUkVBRENSVU1CX1RBU0tMRVQ7CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9v
bAoraW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQoreworCXJldHVybiBlbmdpbmUtPmZsYWdzICYgSTkxNV9FTkdJTkVfSVNfVklSVFVB
TDsKK30KKwogI2RlZmluZSBpbnN0ZG9uZV9zbGljZV9tYXNrKGRldl9wcml2X18pIFwKIAkoSVNf
R0VOKGRldl9wcml2X18sIDcpID8gXAogCSAxIDogUlVOVElNRV9JTkZPKGRldl9wcml2X18pLT5z
c2V1LnNsaWNlX21hc2spCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IGYyNjNh
ODM3NDI3My4uYWZmYTVlMmRmY2UxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpA
QCAtMTY0LDYgKzE2NCw0MiBAQAogI2RlZmluZSBXQV9UQUlMX0RXT1JEUyAyCiAjZGVmaW5lIFdB
X1RBSUxfQllURVMgKHNpemVvZih1MzIpICogV0FfVEFJTF9EV09SRFMpCiAKK3N0cnVjdCB2aXJ0
dWFsX2VuZ2luZSB7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyBiYXNlOworCXN0cnVjdCBpbnRl
bF9jb250ZXh0IGNvbnRleHQ7CisKKwkvKgorCSAqIFdlIGFsbG93IG9ubHkgYSBzaW5nbGUgcmVx
dWVzdCB0aHJvdWdoIHRoZSB2aXJ0dWFsIGVuZ2luZSBhdCBhIHRpbWUKKwkgKiAoZWFjaCByZXF1
ZXN0IGluIHRoZSB0aW1lbGluZSB3YWl0cyBmb3IgdGhlIGNvbXBsZXRpb24gZmVuY2Ugb2YKKwkg
KiB0aGUgcHJldmlvdXMgYmVmb3JlIGJlaW5nIHN1Ym1pdHRlZCkuIEJ5IHJlc3RyaWN0aW5nIG91
cnNlbHZlcyB0bworCSAqIG9ubHkgc3VibWl0dGluZyBhIHNpbmdsZSByZXF1ZXN0LCBlYWNoIHJl
cXVlc3QgaXMgcGxhY2VkIG9uIHRvIGEKKwkgKiBwaHlzaWNhbCB0byBtYXhpbWlzZSBsb2FkIHNw
cmVhZGluZyAoYnkgdmlydHVlIG9mIHRoZSBsYXRlIGdyZWVkeQorCSAqIHNjaGVkdWxpbmcgLS0g
ZWFjaCByZWFsIGVuZ2luZSB0YWtlcyB0aGUgbmV4dCBhdmFpbGFibGUgcmVxdWVzdAorCSAqIHVw
b24gaWRsaW5nKS4KKwkgKi8KKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0OworCisJLyoK
KwkgKiBXZSBrZWVwIGEgcmJ0cmVlIG9mIGF2YWlsYWJsZSB2aXJ0dWFsIGVuZ2luZXMgaW5zaWRl
IGVhY2ggcGh5c2ljYWwKKwkgKiBlbmdpbmUsIHNvcnRlZCBieSBwcmlvcml0eS4gSGVyZSB3ZSBw
cmVhbGxvY2F0ZSB0aGUgbm9kZXMgd2UgbmVlZAorCSAqIGZvciB0aGUgdmlydHVhbCBlbmdpbmUs
IGluZGV4ZWQgYnkgcGh5c2ljYWxfZW5naW5lLT5pZC4KKwkgKi8KKwlzdHJ1Y3QgdmVfbm9kZSB7
CisJCXN0cnVjdCByYl9ub2RlIHJiOworCQlpbnQgcHJpbzsKKwl9IG5vZGVzW0k5MTVfTlVNX0VO
R0lORVNdOworCisJLyogQW5kIGZpbmFsbHksIHdoaWNoIHBoeXNpY2FsIGVuZ2luZXMgdGhpcyB2
aXJ0dWFsIGVuZ2luZSBtYXBzIG9udG8uICovCisJdW5zaWduZWQgaW50IG51bV9zaWJsaW5nczsK
KwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzaWJsaW5nc1swXTsKK307CisKK3N0YXRpYyBzdHJ1
Y3QgdmlydHVhbF9lbmdpbmUgKnRvX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKK3sKKwlHRU1fQlVHX09OKCFpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChlbmdp
bmUpKTsKKwlyZXR1cm4gY29udGFpbmVyX29mKGVuZ2luZSwgc3RydWN0IHZpcnR1YWxfZW5naW5l
LCBiYXNlKTsKK30KKwogc3RhdGljIGludCBleGVjbGlzdHNfY29udGV4dF9kZWZlcnJlZF9hbGxv
YyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpOwogc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUzMiAq
cmVnX3N0YXRlLApAQCAtMjE2LDcgKzI1Miw4IEBAIHN0YXRpYyBpbnQgcXVldWVfcHJpbyhjb25z
dCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQogfQogCiBzdGF0aWMg
aW5saW5lIGJvb2wgbmVlZF9wcmVlbXB0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKLQkJCQljb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKKwkJCQljb25zdCBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwKKwkJCQlzdHJ1Y3QgcmJfbm9kZSAqcmIpCiB7CiAJaW50IGxh
c3RfcHJpbzsKIApAQCAtMjUxLDYgKzI4OCwyNSBAQCBzdGF0aWMgaW5saW5lIGJvb2wgbmVlZF9w
cmVlbXB0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkgICAgcnFfcHJp
byhsaXN0X25leHRfZW50cnkocnEsIGxpbmspKSA+IGxhc3RfcHJpbykKIAkJcmV0dXJuIHRydWU7
CiAKKwlpZiAocmIpIHsKKwkJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9CisJCQlyYl9lbnRy
eShyYiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2luZS0+aWRdLnJiKTsKKwkJYm9vbCBwcmVlbXB0
ID0gZmFsc2U7CisKKwkJaWYgKGVuZ2luZSA9PSB2ZS0+c2libGluZ3NbMF0pIHsgLyogb25seSBw
cmVlbXB0IG9uZSBzaWJsaW5nICovCisJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpuZXh0OworCisJ
CQlyY3VfcmVhZF9sb2NrKCk7CisJCQluZXh0ID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKwkJ
CWlmIChuZXh0KQorCQkJCXByZWVtcHQgPSBycV9wcmlvKG5leHQpID4gbGFzdF9wcmlvOworCQkJ
cmN1X3JlYWRfdW5sb2NrKCk7CisJCX0KKworCQlpZiAocHJlZW1wdCkKKwkJCXJldHVybiBwcmVl
bXB0OworCX0KKwogCS8qCiAJICogSWYgdGhlIGluZmxpZ2h0IGNvbnRleHQgZGlkIG5vdCB0cmln
Z2VyIHRoZSBwcmVlbXB0aW9uLCB0aGVuIG1heWJlCiAJICogaXQgd2FzIHRoZSBzZXQgb2YgcXVl
dWVkIHJlcXVlc3RzPyBQaWNrIHRoZSBoaWdoZXN0IHByaW9yaXR5IGluCkBAIC0zNjksNiArNDI1
LDggQEAgX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlX3JldmVyc2UocnEsIHJuLAogCQkJ
CQkgJmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMsCiAJCQkJCSBsaW5rKSB7CisJCXN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKm93bmVyOworCiAJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJx
KSkKIAkJCWJyZWFrOwogCkBAIC0zNzcsMTYgKzQzNSwyOSBAQCBfX3Vud2luZF9pbmNvbXBsZXRl
X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCQlHRU1fQlVHX09O
KHJxLT5od19jb250ZXh0LT5hY3RpdmUpOwogCi0JCUdFTV9CVUdfT04ocnFfcHJpbyhycSkgPT0g
STkxNV9QUklPUklUWV9JTlZBTElEKTsKLQkJaWYgKHJxX3ByaW8ocnEpICE9IHByaW8pIHsKLQkJ
CXByaW8gPSBycV9wcmlvKHJxKTsKLQkJCXBsID0gaTkxNV9zY2hlZF9sb29rdXBfcHJpb2xpc3Qo
ZW5naW5lLCBwcmlvKTsKLQkJfQotCQlHRU1fQlVHX09OKFJCX0VNUFRZX1JPT1QoJmVuZ2luZS0+
ZXhlY2xpc3RzLnF1ZXVlLnJiX3Jvb3QpKTsKLQotCQlsaXN0X2FkZCgmcnEtPnNjaGVkLmxpbmss
IHBsKTsKKwkJLyoKKwkJICogUHVzaCB0aGUgcmVxdWVzdCBiYWNrIGludG8gdGhlIHF1ZXVlIGZv
ciBsYXRlciByZXN1Ym1pc3Npb24uCisJCSAqIElmIHRoaXMgcmVxdWVzdCBpcyBub3QgbmF0aXZl
IHRvIHRoaXMgcGh5c2ljYWwgZW5naW5lIChpLmUuCisJCSAqIGl0IGNhbWUgZnJvbSBhIHZpcnR1
YWwgc291cmNlKSwgcHVzaCBpdCBiYWNrIG9udG8gdGhlIHZpcnR1YWwKKwkJICogZW5naW5lIHNv
IHRoYXQgaXQgY2FuIGJlIG1vdmVkIGFjcm9zcyBvbnRvIGFub3RoZXIgcGh5c2ljYWwKKwkJICog
ZW5naW5lIGFzIGxvYWQgZGljdGF0ZXMuCisJCSAqLworCQlvd25lciA9IHJxLT5od19jb250ZXh0
LT5lbmdpbmU7CisJCWlmIChsaWtlbHkob3duZXIgPT0gZW5naW5lKSkgeworCQkJR0VNX0JVR19P
TihycV9wcmlvKHJxKSA9PSBJOTE1X1BSSU9SSVRZX0lOVkFMSUQpOworCQkJaWYgKHJxX3ByaW8o
cnEpICE9IHByaW8pIHsKKwkJCQlwcmlvID0gcnFfcHJpbyhycSk7CisJCQkJcGwgPSBpOTE1X3Nj
aGVkX2xvb2t1cF9wcmlvbGlzdChlbmdpbmUsIHByaW8pOworCQkJfQorCQkJR0VNX0JVR19PTihS
Ql9FTVBUWV9ST09UKCZlbmdpbmUtPmV4ZWNsaXN0cy5xdWV1ZS5yYl9yb290KSk7CiAKLQkJYWN0
aXZlID0gcnE7CisJCQlsaXN0X2FkZCgmcnEtPnNjaGVkLmxpbmssIHBsKTsKKwkJCWFjdGl2ZSA9
IHJxOworCQl9IGVsc2UgeworCQkJcnEtPmVuZ2luZSA9IG93bmVyOworCQkJb3duZXItPnN1Ym1p
dF9yZXF1ZXN0KHJxKTsKKwkJCWFjdGl2ZSA9IE5VTEw7CisJCX0KIAl9CiAKIAlyZXR1cm4gYWN0
aXZlOwpAQCAtNjIyLDYgKzY5Myw5MCBAQCBzdGF0aWMgdm9pZCBjb21wbGV0ZV9wcmVlbXB0X2Nv
bnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIAkJCQkJCSAg
ZXhlY2xpc3RzKSk7CiB9CiAKK3N0YXRpYyB2b2lkIHZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29m
ZnNldHModTMyICpyZWdzLAorCQkJCQkgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQoreworCXUzMiBiYXNlID0gZW5naW5lLT5tbWlvX2Jhc2U7CisKKwkvKiBNdXN0IG1hdGNoIGV4
ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSgpISAqLworCisJcmVnc1tDVFhfQ09OVEVYVF9DT05UUk9M
XSA9CisJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ09OVEVYVF9DT05UUk9MKGJhc2UpKTsK
KwlyZWdzW0NUWF9SSU5HX0hFQURdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19IRUFEKGJh
c2UpKTsKKwlyZWdzW0NUWF9SSU5HX1RBSUxdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19U
QUlMKGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX0JVRkZFUl9TVEFSVF0gPSBpOTE1X21taW9fcmVn
X29mZnNldChSSU5HX1NUQVJUKGJhc2UpKTsKKwlyZWdzW0NUWF9SSU5HX0JVRkZFUl9DT05UUk9M
XSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ1RMKGJhc2UpKTsKKworCXJlZ3NbQ1RYX0JC
X0hFQURfVV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCQUREUl9VRFcoYmFzZSkpOwor
CXJlZ3NbQ1RYX0JCX0hFQURfTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCQUREUihi
YXNlKSk7CisJcmVnc1tDVFhfQkJfU1RBVEVdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19C
QlNUQVRFKGJhc2UpKTsKKwlyZWdzW0NUWF9TRUNPTkRfQkJfSEVBRF9VXSA9CisJCWk5MTVfbW1p
b19yZWdfb2Zmc2V0KFJJTkdfU0JCQUREUl9VRFcoYmFzZSkpOworCXJlZ3NbQ1RYX1NFQ09ORF9C
Ql9IRUFEX0xdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19TQkJBRERSKGJhc2UpKTsKKwly
ZWdzW0NUWF9TRUNPTkRfQkJfU1RBVEVdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19TQkJT
VEFURShiYXNlKSk7CisKKwlyZWdzW0NUWF9DVFhfVElNRVNUQU1QXSA9CisJCWk5MTVfbW1pb19y
ZWdfb2Zmc2V0KFJJTkdfQ1RYX1RJTUVTVEFNUChiYXNlKSk7CisJcmVnc1tDVFhfUERQM19VRFdd
ID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9VRFcoYmFzZSwgMykpOworCXJl
Z3NbQ1RYX1BEUDNfTERXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfTERX
KGJhc2UsIDMpKTsKKwlyZWdzW0NUWF9QRFAyX1VEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChH
RU44X1JJTkdfUERQX1VEVyhiYXNlLCAyKSk7CisJcmVnc1tDVFhfUERQMl9MRFddID0gaTkxNV9t
bWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFcoYmFzZSwgMikpOworCXJlZ3NbQ1RYX1BE
UDFfVURXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfVURXKGJhc2UsIDEp
KTsKKwlyZWdzW0NUWF9QRFAxX0xEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JJTkdf
UERQX0xEVyhiYXNlLCAxKSk7CisJcmVnc1tDVFhfUERQMF9VRFddID0gaTkxNV9tbWlvX3JlZ19v
ZmZzZXQoR0VOOF9SSU5HX1BEUF9VRFcoYmFzZSwgMCkpOworCXJlZ3NbQ1RYX1BEUDBfTERXXSA9
IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfTERXKGJhc2UsIDApKTsKKworCWlm
IChlbmdpbmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUykgeworCQlyZWdzW0NUWF9SQ1NfSU5ESVJF
Q1RfQ1RYXSA9CisJCQlpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0lORElSRUNUX0NUWChiYXNl
KSk7CisJCXJlZ3NbQ1RYX1JDU19JTkRJUkVDVF9DVFhfT0ZGU0VUXSA9CisJCQlpOTE1X21taW9f
cmVnX29mZnNldChSSU5HX0lORElSRUNUX0NUWF9PRkZTRVQoYmFzZSkpOworCQlyZWdzW0NUWF9C
Ql9QRVJfQ1RYX1BUUl0gPQorCQkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19CQl9QRVJfQ1RY
X1BUUihiYXNlKSk7CisKKwkJcmVnc1tDVFhfUl9QV1JfQ0xLX1NUQVRFXSA9CisJCQlpOTE1X21t
aW9fcmVnX29mZnNldChHRU44X1JfUFdSX0NMS19TVEFURSk7CisJfQorfQorCitzdGF0aWMgYm9v
bCB2aXJ0dWFsX21hdGNoZXMoY29uc3Qgc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSwKKwkJCSAg
ICBjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
YWN0aXZlOworCisJLyoKKwkgKiBXZSB0cmFjayB3aGVuIHRoZSBIVyBoYXMgY29tcGxldGVkIHNh
dmluZyB0aGUgY29udGV4dCBpbWFnZQorCSAqIChpLmUuIHdoZW4gd2UgaGF2ZSBzZWVuIHRoZSBm
aW5hbCBDUyBldmVudCBzd2l0Y2hpbmcgb3V0IG9mCisJICogdGhlIGNvbnRleHQpIGFuZCBtdXN0
IG5vdCBvdmVyd3JpdGUgdGhlIGNvbnRleHQgaW1hZ2UgYmVmb3JlCisJICogdGhlbi4gVGhpcyBy
ZXN0cmljdHMgdXMgdG8gb25seSB1c2luZyB0aGUgYWN0aXZlIGVuZ2luZQorCSAqIHdoaWxlIHRo
ZSBwcmV2aW91cyB2aXJ0dWFsaXplZCByZXF1ZXN0IGlzIGluZmxpZ2h0IChzbworCSAqIHdlIHJl
dXNlIHRoZSByZWdpc3RlciBvZmZzZXRzKS4gVGhpcyBpcyBhIHZlcnkgc21hbGwKKwkgKiBoeXN0
ZXJzaXMgb24gdGhlIGdyZWVkeSBzZWVsY3Rpb24gYWxnb3JpdGhtLgorCSAqLworCWFjdGl2ZSA9
IFJFQURfT05DRSh2ZS0+Y29udGV4dC5hY3RpdmUpOworCWlmIChhY3RpdmUgJiYgYWN0aXZlICE9
IGVuZ2luZSkKKwkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRpYyB2
b2lkIHZpcnR1YWxfeGZlcl9icmVhZGNydW1icyhzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlLAor
CQkJCSAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKm9sZCA9IHZlLT5zaWJsaW5nc1swXTsKKworCS8qIEFsbCB1bmF0dGFjaGVk
IChycS0+ZW5naW5lID09IG9sZCkgbXVzdCBhbHJlYWR5IGJlIGNvbXBsZXRlZCAqLworCisJc3Bp
bl9sb2NrKCZvbGQtPmJyZWFkY3J1bWJzLmlycV9sb2NrKTsKKwlpZiAoIWxpc3RfZW1wdHkoJnZl
LT5jb250ZXh0LnNpZ25hbF9saW5rKSkgeworCQlsaXN0X21vdmVfdGFpbCgmdmUtPmNvbnRleHQu
c2lnbmFsX2xpbmssCisJCQkgICAgICAgJmVuZ2luZS0+YnJlYWRjcnVtYnMuc2lnbmFsZXJzKTsK
KwkJaW50ZWxfZW5naW5lX3F1ZXVlX2JyZWFkY3J1bWJzKGVuZ2luZSk7CisJfQorCXNwaW5fdW5s
b2NrKCZvbGQtPmJyZWFkY3J1bWJzLmlycV9sb2NrKTsKK30KKwogc3RhdGljIHZvaWQgZXhlY2xp
c3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBp
bnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xp
c3RzOwpAQCAtNjU0LDYgKzgwOSwyNiBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJICogYW5kIGNvbnRleHQgc3dpdGNoZXMp
IHN1Ym1pc3Npb24uCiAJICovCiAKKwlmb3IgKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlz
dHMtPnZpcnR1YWwpOyByYjsgKSB7CisJCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJ
cmJfZW50cnkocmIsIHR5cGVvZigqdmUpLCBub2Rlc1tlbmdpbmUtPmlkXS5yYik7CisJCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKworCQlpZiAoIXJx
KSB7IC8qIGxhemlseSBjbGVhbnVwIGFmdGVyIGFub3RoZXIgZW5naW5lIGhhbmRsZWQgcnEgKi8K
KwkJCXJiX2VyYXNlX2NhY2hlZChyYiwgJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQlSQl9DTEVB
Ul9OT0RFKHJiKTsKKwkJCXJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1YWwp
OworCQkJY29udGludWU7CisJCX0KKworCQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2ZSwgcnEsIGVu
Z2luZSkpIHsKKwkJCXJiID0gcmJfbmV4dChyYik7CisJCQljb250aW51ZTsKKwkJfQorCisJCWJy
ZWFrOworCX0KKwogCWlmIChsYXN0KSB7CiAJCS8qCiAJCSAqIERvbid0IHJlc3VibWl0IG9yIHN3
aXRjaCB1bnRpbCBhbGwgb3V0c3RhbmRpbmcKQEAgLTY3NSw3ICs4NTAsNyBAQCBzdGF0aWMgdm9p
ZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWlm
ICghZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVfSFdBQ0sp
KQogCQkJcmV0dXJuOwogCi0JCWlmIChuZWVkX3ByZWVtcHQoZW5naW5lLCBsYXN0KSkgeworCQlp
ZiAobmVlZF9wcmVlbXB0KGVuZ2luZSwgbGFzdCwgcmIpKSB7CiAJCQlpbmplY3RfcHJlZW1wdF9j
b250ZXh0KGVuZ2luZSk7CiAJCQlyZXR1cm47CiAJCX0KQEAgLTcxNSw2ICs4OTAsOTIgQEAgc3Rh
dGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQogCQlsYXN0LT50YWlsID0gbGFzdC0+d2FfdGFpbDsKIAl9CiAKKwl3aGlsZSAocmIpIHsgLyog
WFhYIHZpcnR1YWwgaXMgYWx3YXlzIHRha2luZyBwcmVjZWRlbmNlICovCisJCXN0cnVjdCB2aXJ0
dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVvZigqdmUpLCBub2Rlc1tlbmdp
bmUtPmlkXS5yYik7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJCXNwaW5fbG9jaygm
dmUtPmJhc2UudGltZWxpbmUubG9jayk7CisKKwkJcnEgPSB2ZS0+cmVxdWVzdDsKKwkJaWYgKHVu
bGlrZWx5KCFycSkpIHsgLyogbG9zdCB0aGUgcmFjZSB0byBhIHNpYmxpbmcgKi8KKwkJCXNwaW5f
dW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJCXJiX2VyYXNlX2NhY2hlZChyYiwg
JmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQlSQl9DTEVBUl9OT0RFKHJiKTsKKwkJCXJiID0gcmJf
Zmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1YWwpOworCQkJY29udGludWU7CisJCX0KKwor
CQlHRU1fQlVHX09OKHJxICE9IHZlLT5yZXF1ZXN0KTsKKwkJR0VNX0JVR19PTihycS0+ZW5naW5l
ICE9ICZ2ZS0+YmFzZSk7CisJCUdFTV9CVUdfT04ocnEtPmh3X2NvbnRleHQgIT0gJnZlLT5jb250
ZXh0KTsKKworCQlpZiAocnFfcHJpbyhycSkgPj0gcXVldWVfcHJpbyhleGVjbGlzdHMpKSB7CisJ
CQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2ZSwgcnEsIGVuZ2luZSkpIHsKKwkJCQlzcGluX3VubG9j
aygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJCQkJcmIgPSByYl9uZXh0KHJiKTsKKwkJCQlj
b250aW51ZTsKKwkJCX0KKworCQkJaWYgKGxhc3QgJiYgIWNhbl9tZXJnZV9ycShsYXN0LCBycSkp
IHsKKwkJCQlzcGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJCQkJcmV0dXJu
OyAvKiBsZWF2ZSB0aGlzIHJxIGZvciBhbm90aGVyIGVuZ2luZSAqLworCQkJfQorCisJCQlHRU1f
VFJBQ0UoIiVzOiB2aXJ0dWFsIHJxPSVsbHg6JWxsZCVzLCBuZXcgZW5naW5lPyAlc1xuIiwKKwkJ
CQkgIGVuZ2luZS0+bmFtZSwKKwkJCQkgIHJxLT5mZW5jZS5jb250ZXh0LAorCQkJCSAgcnEtPmZl
bmNlLnNlcW5vLAorCQkJCSAgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkgPyAiISIgOgorCQkJ
CSAgaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpID8gIioiIDoKKwkJCQkgICIiLAorCQkJCSAgeWVz
bm8oZW5naW5lICE9IHZlLT5zaWJsaW5nc1swXSkpOworCisJCQl2ZS0+cmVxdWVzdCA9IE5VTEw7
CisJCQl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CisJ
CQlyYl9lcmFzZV9jYWNoZWQocmIsICZleGVjbGlzdHMtPnZpcnR1YWwpOworCQkJUkJfQ0xFQVJf
Tk9ERShyYik7CisKKwkJCXJxLT5lbmdpbmUgPSBlbmdpbmU7CisKKwkJCWlmIChlbmdpbmUgIT0g
dmUtPnNpYmxpbmdzWzBdKSB7CisJCQkJdTMyICpyZWdzID0gdmUtPmNvbnRleHQubHJjX3JlZ19z
dGF0ZTsKKwkJCQl1bnNpZ25lZCBpbnQgbjsKKworCQkJCUdFTV9CVUdfT04oUkVBRF9PTkNFKHZl
LT5jb250ZXh0LmFjdGl2ZSkpOworCQkJCXZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHMo
cmVncywgZW5naW5lKTsKKworCQkJCWlmICghbGlzdF9lbXB0eSgmdmUtPmNvbnRleHQuc2lnbmFs
cykpCisJCQkJCXZpcnR1YWxfeGZlcl9icmVhZGNydW1icyh2ZSwgZW5naW5lKTsKKworCQkJCS8q
CisJCQkJICogTW92ZSB0aGUgYm91bmQgZW5naW5lIHRvIHRoZSB0b3Agb2YgdGhlIGxpc3QKKwkJ
CQkgKiBmb3IgZnV0dXJlIGV4ZWN1dGlvbi4gV2UgdGhlbiBraWNrIHRoaXMKKwkJCQkgKiB0YXNr
bGV0IGZpcnN0IGJlZm9yZSBjaGVja2luZyBvdGhlcnMsIHNvIHRoYXQKKwkJCQkgKiB3ZSBwcmVm
ZXJlbnRpYWxseSByZXVzZSB0aGlzIHNldCBvZiBib3VuZAorCQkJCSAqIHJlZ2lzdGVycy4KKwkJ
CQkgKi8KKwkJCQlmb3IgKG4gPSAxOyBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKSB7CisJCQkJ
CWlmICh2ZS0+c2libGluZ3Nbbl0gPT0gZW5naW5lKSB7CisJCQkJCQlzd2FwKHZlLT5zaWJsaW5n
c1tuXSwKKwkJCQkJCSAgICAgdmUtPnNpYmxpbmdzWzBdKTsKKwkJCQkJCWJyZWFrOworCQkJCQl9
CisJCQkJfQorCisJCQkJR0VNX0JVR19PTih2ZS0+c2libGluZ3NbMF0gIT0gZW5naW5lKTsKKwkJ
CX0KKworCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKKwkJCXRyYWNlX2k5MTVfcmVxdWVz
dF9pbihycSwgcG9ydF9pbmRleChwb3J0LCBleGVjbGlzdHMpKTsKKwkJCXN1Ym1pdCA9IHRydWU7
CisJCQlsYXN0ID0gcnE7CisJCX0KKworCQlzcGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUu
bG9jayk7CisJCWJyZWFrOworCX0KKwogCXdoaWxlICgocmIgPSByYl9maXJzdF9jYWNoZWQoJmV4
ZWNsaXN0cy0+cXVldWUpKSkgewogCQlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcCA9IHRvX3ByaW9s
aXN0KHJiKTsKIAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKQEAgLTE4MzgsNiArMjA5
OSwyNSBAQCBzdGF0aWMgdm9pZCByZXNldF9jc2JfcG9pbnRlcnMoc3RydWN0IGludGVsX2VuZ2lu
ZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIAkJCSAgICAgICAmZXhlY2xpc3RzLT5jc2Jfc3RhdHVz
W3Jlc2V0X3ZhbHVlXSk7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3RpdmVf
cmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwljb25zdCBzdHJ1Y3QgbGlzdF9o
ZWFkICogY29uc3QgbGlzdCA9ICZycS0+ZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0czsKKwljb25z
dCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNvbnRleHQgPSBycS0+aHdfY29udGV4dDsK
KwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3RpdmUgPSBOVUxMOworCisJbGlzdF9mb3JfZWFjaF9l
bnRyeV9mcm9tX3JldmVyc2UocnEsIGxpc3QsIGxpbmspIHsKKwkJaWYgKGk5MTVfcmVxdWVzdF9j
b21wbGV0ZWQocnEpKQorCQkJYnJlYWs7CisKKwkJaWYgKHJxLT5od19jb250ZXh0ICE9IGNvbnRl
eHQpCisJCQlicmVhazsKKworCQlhY3RpdmUgPSBycTsKKwl9CisKKwlyZXR1cm4gYWN0aXZlOwor
fQorCiBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0
cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKQEAgLTE4NTgsNyArMjEz
OCw4IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCWlmICghcG9ydF9pc3NldChleGVjbGlzdHMtPnBv
cnQpKQogCQlnb3RvIG91dF9jbGVhcjsKIAotCWNlID0gcG9ydF9yZXF1ZXN0KGV4ZWNsaXN0cy0+
cG9ydCktPmh3X2NvbnRleHQ7CisJcnEgPSBwb3J0X3JlcXVlc3QoZXhlY2xpc3RzLT5wb3J0KTsK
KwljZSA9IHJxLT5od19jb250ZXh0OwogCiAJLyoKIAkgKiBDYXRjaCB1cCB3aXRoIGFueSBtaXNz
ZWQgY29udGV4dC1zd2l0Y2ggaW50ZXJydXB0cy4KQEAgLTE4NzEsMTYgKzIxNTIsMTAgQEAgc3Rh
dGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCBib29sIHN0YWxsZWQpCiAJICovCiAJZXhlY2xpc3RzX2NhbmNlbF9wb3J0X3JlcXVlc3RzKGV4
ZWNsaXN0cyk7CiAKLQkvKiBQdXNoIGJhY2sgYW55IGluY29tcGxldGUgcmVxdWVzdHMgZm9yIHJl
cGxheSBhZnRlciB0aGUgcmVzZXQuICovCi0JcnEgPSBfX3Vud2luZF9pbmNvbXBsZXRlX3JlcXVl
c3RzKGVuZ2luZSk7CisJcnEgPSBhY3RpdmVfcmVxdWVzdChycSk7CiAJaWYgKCFycSkKIAkJZ290
byBvdXRfcmVwbGF5OwogCi0JaWYgKHJxLT5od19jb250ZXh0ICE9IGNlKSB7IC8qIGNhdWdodCBq
dXN0IGJlZm9yZSBhIENTIGV2ZW50ICovCi0JCXJxID0gTlVMTDsKLQkJZ290byBvdXRfcmVwbGF5
OwotCX0KLQogCS8qCiAJICogSWYgdGhpcyByZXF1ZXN0IGhhc24ndCBzdGFydGVkIHlldCwgZS5n
LiBpdCBpcyB3YWl0aW5nIG9uIGEKIAkgKiBzZW1hcGhvcmUsIHdlIG5lZWQgdG8gYXZvaWQgc2tp
cHBpbmcgdGhlIHJlcXVlc3Qgb3IgZWxzZSB3ZQpAQCAtMTkyNywxMyArMjIwMiwxNiBAQCBzdGF0
aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
IGJvb2wgc3RhbGxlZCkKIAl9CiAJZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBl
bmdpbmUsIGNlLT5yaW5nKTsKIAotCS8qIFJlcnVuIHRoZSByZXF1ZXN0OyBpdHMgcGF5bG9hZCBo
YXMgYmVlbiBuZXV0ZXJlZCAoaWYgZ3VpbHR5KS4gKi8KIG91dF9yZXBsYXk6CisJLyogUmVydW4g
dGhlIHJlcXVlc3Q7IGl0cyBwYXlsb2FkIGhhcyBiZWVuIG5ldXRlcmVkIChpZiBndWlsdHkpLiAq
LwogCWNlLT5yaW5nLT5oZWFkID0KIAkJcnEgPyBpbnRlbF9yaW5nX3dyYXAoY2UtPnJpbmcsIHJx
LT5oZWFkKSA6IGNlLT5yaW5nLT50YWlsOwogCWludGVsX3JpbmdfdXBkYXRlX3NwYWNlKGNlLT5y
aW5nKTsKIAlfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0YXRlKGNlLCBlbmdpbmUpOwogCisJLyog
UHVzaCBiYWNrIGFueSBpbmNvbXBsZXRlIHJlcXVlc3RzIGZvciByZXBsYXkgYWZ0ZXIgdGhlIHJl
c2V0LiAqLworCV9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoZW5naW5lKTsKKwogb3V0X2Ns
ZWFyOgogCWV4ZWNsaXN0c19jbGVhcl9hbGxfYWN0aXZlKGV4ZWNsaXN0cyk7CiB9CkBAIC0yMDA3
LDYgKzIyODUsMjYgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWk5MTVfcHJpb2xpc3RfZnJlZShwKTsKIAl9
CiAKKwkvKiBDYW5jZWwgYWxsIGF0dGFjaGVkIHZpcnR1YWwgZW5naW5lcyAqLworCXdoaWxlICgo
cmIgPSByYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+dmlydHVhbCkpKSB7CisJCXN0cnVjdCB2
aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVvZigqdmUpLCBub2Rlc1tl
bmdpbmUtPmlkXS5yYik7CisKKwkJcmJfZXJhc2VfY2FjaGVkKHJiLCAmZXhlY2xpc3RzLT52aXJ0
dWFsKTsKKwkJUkJfQ0xFQVJfTk9ERShyYik7CisKKwkJc3Bpbl9sb2NrKCZ2ZS0+YmFzZS50aW1l
bGluZS5sb2NrKTsKKwkJaWYgKHZlLT5yZXF1ZXN0KSB7CisJCQl2ZS0+cmVxdWVzdC0+ZW5naW5l
ID0gZW5naW5lOworCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHZlLT5yZXF1ZXN0KTsKKwkJCWRt
YV9mZW5jZV9zZXRfZXJyb3IoJnZlLT5yZXF1ZXN0LT5mZW5jZSwgLUVJTyk7CisJCQlpOTE1X3Jl
cXVlc3RfbWFya19jb21wbGV0ZSh2ZS0+cmVxdWVzdCk7CisJCQl2ZS0+YmFzZS5leGVjbGlzdHMu
cXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CisJCQl2ZS0+cmVxdWVzdCA9IE5VTEw7CisJ
CX0KKwkJc3Bpbl91bmxvY2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2spOworCX0KKwogCS8qIFJl
bWFpbmluZyBfdW5yZWFkeV8gcmVxdWVzdHMgd2lsbCBiZSBub3AnZWQgd2hlbiBzdWJtaXR0ZWQg
Ki8KIAogCWV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CkBAIC0yNDkx
LDEyICsyNzg5LDE1IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIg
KnJlZ3MsCiAJYm9vbCByY3MgPSBlbmdpbmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUzsKIAl1MzIg
YmFzZSA9IGVuZ2luZS0+bW1pb19iYXNlOwogCi0JLyogQSBjb250ZXh0IGlzIGFjdHVhbGx5IGEg
YmlnIGJhdGNoIGJ1ZmZlciB3aXRoIHNldmVyYWwKKwkvKgorCSAqIEEgY29udGV4dCBpcyBhY3R1
YWxseSBhIGJpZyBiYXRjaCBidWZmZXIgd2l0aCBzZXZlcmFsCiAJICogTUlfTE9BRF9SRUdJU1RF
Ul9JTU0gY29tbWFuZHMgZm9sbG93ZWQgYnkgKHJlZywgdmFsdWUpIHBhaXJzLiBUaGUKIAkgKiB2
YWx1ZXMgd2UgYXJlIHNldHRpbmcgaGVyZSBhcmUgb25seSBmb3IgdGhlIGZpcnN0IGNvbnRleHQg
cmVzdG9yZToKIAkgKiBvbiBhIHN1YnNlcXVlbnQgc2F2ZSwgdGhlIEdQVSB3aWxsIHJlY3JlYXRl
IHRoaXMgYmF0Y2hidWZmZXIgd2l0aCBuZXcKIAkgKiB2YWx1ZXMgKGluY2x1ZGluZyBhbGwgdGhl
IG1pc3NpbmcgTUlfTE9BRF9SRUdJU1RFUl9JTU0gY29tbWFuZHMgdGhhdAogCSAqIHdlIGFyZSBu
b3QgaW5pdGlhbGl6aW5nIGhlcmUpLgorCSAqCisJICogTXVzdCBrZWVwIGNvbnNpc3RlbnQgd2l0
aCB2aXJ0dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKCkuCiAJICovCiAJcmVnc1tDVFhfTFJJ
X0hFQURFUl8wXSA9IE1JX0xPQURfUkVHSVNURVJfSU1NKHJjcyA/IDE0IDogMTEpIHwKIAkJCQkg
TUlfTFJJX0ZPUkNFX1BPU1RFRDsKQEAgLTI3MTUsNiArMzAxNiwzMjAgQEAgc3RhdGljIGludCBl
eGVjbGlzdHNfY29udGV4dF9kZWZlcnJlZF9hbGxvYyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Us
CiAJcmV0dXJuIHJldDsKIH0KIAorc3RhdGljIHZvaWQgdmlydHVhbF9jb250ZXh0X2Rlc3Ryb3ko
c3RydWN0IGtyZWYgKmtyZWYpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9CisJCWNv
bnRhaW5lcl9vZihrcmVmLCB0eXBlb2YoKnZlKSwgY29udGV4dC5yZWYpOworCXVuc2lnbmVkIGlu
dCBuOworCisJR0VNX0JVR19PTih2ZS0+cmVxdWVzdCk7CisJR0VNX0JVR19PTih2ZS0+Y29udGV4
dC5hY3RpdmUpOworCisJZm9yIChuID0gMDsgbiA8IHZlLT5udW1fc2libGluZ3M7IG4rKykgewor
CQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzaWJsaW5nID0gdmUtPnNpYmxpbmdzW25dOworCQlz
dHJ1Y3QgcmJfbm9kZSAqbm9kZSA9ICZ2ZS0+bm9kZXNbc2libGluZy0+aWRdLnJiOworCisJCWlm
IChSQl9FTVBUWV9OT0RFKG5vZGUpKQorCQkJY29udGludWU7CisKKwkJc3Bpbl9sb2NrX2lycSgm
c2libGluZy0+dGltZWxpbmUubG9jayk7CisKKwkJLyogRGV0YWNobWVudCBpcyBsYXppbHkgcGVy
Zm9ybWVkIGluIHRoZSBleGVjbGlzdHMgdGFza2xldCAqLworCQlpZiAoIVJCX0VNUFRZX05PREUo
bm9kZSkpCisJCQlyYl9lcmFzZV9jYWNoZWQobm9kZSwgJnNpYmxpbmctPmV4ZWNsaXN0cy52aXJ0
dWFsKTsKKworCQlzcGluX3VubG9ja19pcnEoJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCX0K
KwlHRU1fQlVHX09OKF9fdGFza2xldF9pc19zY2hlZHVsZWQoJnZlLT5iYXNlLmV4ZWNsaXN0cy50
YXNrbGV0KSk7CisKKwlpZiAodmUtPmNvbnRleHQuc3RhdGUpCisJCV9fZXhlY2xpc3RzX2NvbnRl
eHRfZmluaSgmdmUtPmNvbnRleHQpOworCisJaTkxNV90aW1lbGluZV9maW5pKCZ2ZS0+YmFzZS50
aW1lbGluZSk7CisJa2ZyZWUodmUpOworfQorCitzdGF0aWMgdm9pZCB2aXJ0dWFsX2VuZ2luZV9p
bml0aWFsX2hpbnQoc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSkKK3sKKwlpbnQgc3dwOworCisJ
LyoKKwkgKiBQaWNrIGEgcmFuZG9tIHNpYmxpbmcgb24gc3RhcnRpbmcgdG8gaGVscCBzcHJlYWQg
dGhlIGxvYWQgYXJvdW5kLgorCSAqCisJICogTmV3IGNvbnRleHRzIGFyZSB0eXBpY2FsbHkgY3Jl
YXRlZCB3aXRoIGV4YWN0bHkgdGhlIHNhbWUgb3JkZXIKKwkgKiBvZiBzaWJsaW5ncywgYW5kIG9m
dGVuIHN0YXJ0ZWQgaW4gYmF0Y2hlcy4gRHVlIHRvIHRoZSB3YXkgd2UgaXRlcmF0ZQorCSAqIHRo
ZSBhcnJheSBvZiBzaWJsaW5nIHdoZW4gc3VibWl0dGluZyByZXF1ZXN0cywgc2libGluZ1swXSBp
cworCSAqIHByaW9yaXRpc2VkIGZvciBkZXF1ZXVpbmcuIElmIHdlIG1ha2Ugc3VyZSB0aGF0IHNp
YmxpbmdbMF0gaXMgZmFpcmx5CisJICogcmFuZG9taXNlZCBhY3Jvc3MgdGhlIHN5c3RlbSwgd2Ug
YWxzbyBoZWxwIHNwcmVhZCB0aGUgbG9hZCBieSB0aGUKKwkgKiBmaXJzdCBlbmdpbmUgd2UgaW5z
cGVjdCBiZWluZyBkaWZmZXJlbnQgZWFjaCB0aW1lLgorCSAqCisJICogTkIgVGhpcyBkb2VzIG5v
dCBmb3JjZSB1cyB0byBleGVjdXRlIG9uIHRoaXMgZW5naW5lLCBpdCB3aWxsIGp1c3QKKwkgKiB0
eXBpY2FsbHkgYmUgdGhlIGZpcnN0IHdlIGluc3BlY3QgZm9yIHN1Ym1pc3Npb24uCisJICovCisJ
c3dwID0gcHJhbmRvbV91MzJfbWF4KHZlLT5udW1fc2libGluZ3MpOworCWlmICghc3dwKQorCQly
ZXR1cm47CisKKwlzd2FwKHZlLT5zaWJsaW5nc1tzd3BdLCB2ZS0+c2libGluZ3NbMF0pOworCXZp
cnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHModmUtPmNvbnRleHQubHJjX3JlZ19zdGF0ZSwK
KwkJCQkJdmUtPnNpYmxpbmdzWzBdKTsKK30KKworc3RhdGljIGludCB2aXJ0dWFsX2NvbnRleHRf
cGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUg
KnZlID0gY29udGFpbmVyX29mKGNlLCB0eXBlb2YoKnZlKSwgY29udGV4dCk7CisJaW50IGVycjsK
KworCS8qIE5vdGU6IHdlIG11c3QgdXNlIGEgcmVhbCBlbmdpbmUgY2xhc3MgZm9yIHNldHRpbmcg
dXAgcmVnIHN0YXRlICovCisJZXJyID0gX19leGVjbGlzdHNfY29udGV4dF9waW4oY2UsIHZlLT5z
aWJsaW5nc1swXSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCXZpcnR1YWxfZW5naW5l
X2luaXRpYWxfaGludCh2ZSk7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIHZpcnR1YWxf
Y29udGV4dF9lbnRlcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IHZpcnR1
YWxfZW5naW5lICp2ZSA9IGNvbnRhaW5lcl9vZihjZSwgdHlwZW9mKCp2ZSksIGNvbnRleHQpOwor
CXVuc2lnbmVkIGludCBuOworCisJZm9yIChuID0gMDsgbiA8IHZlLT5udW1fc2libGluZ3M7IG4r
KykKKwkJaW50ZWxfZW5naW5lX3BtX2dldCh2ZS0+c2libGluZ3Nbbl0pOworfQorCitzdGF0aWMg
dm9pZCB2aXJ0dWFsX2NvbnRleHRfZXhpdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJ
c3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9IGNvbnRhaW5lcl9vZihjZSwgdHlwZW9mKCp2ZSks
IGNvbnRleHQpOworCXVuc2lnbmVkIGludCBuOworCisJY2UtPnNhdHVyYXRlZCA9IDA7CisJZm9y
IChuID0gMDsgbiA8IHZlLT5udW1fc2libGluZ3M7IG4rKykKKwkJaW50ZWxfZW5naW5lX3BtX3B1
dCh2ZS0+c2libGluZ3Nbbl0pOworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2NvbnRl
eHRfb3BzIHZpcnR1YWxfY29udGV4dF9vcHMgPSB7CisJLnBpbiA9IHZpcnR1YWxfY29udGV4dF9w
aW4sCisJLnVucGluID0gZXhlY2xpc3RzX2NvbnRleHRfdW5waW4sCisKKwkuZW50ZXIgPSB2aXJ0
dWFsX2NvbnRleHRfZW50ZXIsCisJLmV4aXQgPSB2aXJ0dWFsX2NvbnRleHRfZXhpdCwKKworCS5k
ZXN0cm95ID0gdmlydHVhbF9jb250ZXh0X2Rlc3Ryb3ksCit9OworCitzdGF0aWMgdm9pZCB2aXJ0
dWFsX3N1Ym1pc3Npb25fdGFza2xldCh1bnNpZ25lZCBsb25nIGRhdGEpCit7CisJc3RydWN0IHZp
cnR1YWxfZW5naW5lICogY29uc3QgdmUgPSAoc3RydWN0IHZpcnR1YWxfZW5naW5lICopZGF0YTsK
Kwljb25zdCBpbnQgcHJpbyA9IHZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50
OworCXVuc2lnbmVkIGludCBuOworCisJbG9jYWxfaXJxX2Rpc2FibGUoKTsKKwlmb3IgKG4gPSAw
OyBSRUFEX09OQ0UodmUtPnJlcXVlc3QpICYmIG4gPCB2ZS0+bnVtX3NpYmxpbmdzOyBuKyspIHsK
KwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9IHZlLT5zaWJsaW5nc1tuXTsKKwkJ
c3RydWN0IHZlX25vZGUgKiBjb25zdCBub2RlID0gJnZlLT5ub2Rlc1tzaWJsaW5nLT5pZF07CisJ
CXN0cnVjdCByYl9ub2RlICoqcGFyZW50LCAqcmI7CisJCWJvb2wgZmlyc3Q7CisKKwkJc3Bpbl9s
b2NrKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsKKworCQlpZiAoIVJCX0VNUFRZX05PREUoJm5v
ZGUtPnJiKSkgeworCQkJLyoKKwkJCSAqIENoZWF0IGFuZCBhdm9pZCByZWJhbGFuY2luZyB0aGUg
dHJlZSBpZiB3ZSBjYW4KKwkJCSAqIHJldXNlIHRoaXMgbm9kZSBpbiBzaXR1LgorCQkJICovCisJ
CQlmaXJzdCA9IHJiX2ZpcnN0X2NhY2hlZCgmc2libGluZy0+ZXhlY2xpc3RzLnZpcnR1YWwpID09
CisJCQkJJm5vZGUtPnJiOworCQkJaWYgKHByaW8gPT0gbm9kZS0+cHJpbyB8fCAocHJpbyA+IG5v
ZGUtPnByaW8gJiYgZmlyc3QpKQorCQkJCWdvdG8gc3VibWl0X2VuZ2luZTsKKworCQkJcmJfZXJh
c2VfY2FjaGVkKCZub2RlLT5yYiwgJnNpYmxpbmctPmV4ZWNsaXN0cy52aXJ0dWFsKTsKKwkJfQor
CisJCXJiID0gTlVMTDsKKwkJZmlyc3QgPSB0cnVlOworCQlwYXJlbnQgPSAmc2libGluZy0+ZXhl
Y2xpc3RzLnZpcnR1YWwucmJfcm9vdC5yYl9ub2RlOworCQl3aGlsZSAoKnBhcmVudCkgeworCQkJ
c3RydWN0IHZlX25vZGUgKm90aGVyOworCisJCQlyYiA9ICpwYXJlbnQ7CisJCQlvdGhlciA9IHJi
X2VudHJ5KHJiLCB0eXBlb2YoKm90aGVyKSwgcmIpOworCQkJaWYgKHByaW8gPiBvdGhlci0+cHJp
bykgeworCQkJCXBhcmVudCA9ICZyYi0+cmJfbGVmdDsKKwkJCX0gZWxzZSB7CisJCQkJcGFyZW50
ID0gJnJiLT5yYl9yaWdodDsKKwkJCQlmaXJzdCA9IGZhbHNlOworCQkJfQorCQl9CisKKwkJcmJf
bGlua19ub2RlKCZub2RlLT5yYiwgcmIsIHBhcmVudCk7CisJCXJiX2luc2VydF9jb2xvcl9jYWNo
ZWQoJm5vZGUtPnJiLAorCQkJCSAgICAgICAmc2libGluZy0+ZXhlY2xpc3RzLnZpcnR1YWwsCisJ
CQkJICAgICAgIGZpcnN0KTsKKworc3VibWl0X2VuZ2luZToKKwkJR0VNX0JVR19PTihSQl9FTVBU
WV9OT0RFKCZub2RlLT5yYikpOworCQlub2RlLT5wcmlvID0gcHJpbzsKKwkJaWYgKGZpcnN0ICYm
IHByaW8gPiBzaWJsaW5nLT5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCkgeworCQkJc2li
bGluZy0+ZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBwcmlvOworCQkJdGFza2xldF9o
aV9zY2hlZHVsZSgmc2libGluZy0+ZXhlY2xpc3RzLnRhc2tsZXQpOworCQl9CisKKwkJc3Bpbl91
bmxvY2soJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCX0KKwlsb2NhbF9pcnFfZW5hYmxlKCk7
Cit9CisKK3N0YXRpYyB2b2lkIHZpcnR1YWxfc3VibWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9IHRvX3ZpcnR1YWxfZW5n
aW5lKHJxLT5lbmdpbmUpOworCisJR0VNX1RSQUNFKCIlczogcnE9JWxseDolbGxkXG4iLAorCQkg
IHZlLT5iYXNlLm5hbWUsCisJCSAgcnEtPmZlbmNlLmNvbnRleHQsCisJCSAgcnEtPmZlbmNlLnNl
cW5vKTsKKworCUdFTV9CVUdfT04odmUtPmJhc2Uuc3VibWl0X3JlcXVlc3QgIT0gdmlydHVhbF9z
dWJtaXRfcmVxdWVzdCk7CisKKwlHRU1fQlVHX09OKHZlLT5yZXF1ZXN0KTsKKwl2ZS0+YmFzZS5l
eGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IHJxX3ByaW8ocnEpOworCVdSSVRFX09OQ0Uo
dmUtPnJlcXVlc3QsIHJxKTsKKworCXRhc2tsZXRfc2NoZWR1bGUoJnZlLT5iYXNlLmV4ZWNsaXN0
cy50YXNrbGV0KTsKK30KKworc3RydWN0IGludGVsX2NvbnRleHQgKgoraW50ZWxfZXhlY2xpc3Rz
X2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICAg
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLAorCQkJICAgICAgIHVuc2lnbmVkIGlu
dCBjb3VudCkKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlOworCXVuc2lnbmVkIGludCBu
OworCWludCBlcnI7CisKKwlpZiAoY291bnQgPT0gMCkKKwkJcmV0dXJuIEVSUl9QVFIoLUVJTlZB
TCk7CisKKwlpZiAoY291bnQgPT0gMSkKKwkJcmV0dXJuIGludGVsX2NvbnRleHRfY3JlYXRlKGN0
eCwgc2libGluZ3NbMF0pOworCisJdmUgPSBremFsbG9jKHN0cnVjdF9zaXplKHZlLCBzaWJsaW5n
cywgY291bnQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXZlKQorCQlyZXR1cm4gRVJSX1BUUigtRU5P
TUVNKTsKKworCXZlLT5iYXNlLmk5MTUgPSBjdHgtPmk5MTU7CisJdmUtPmJhc2UuaWQgPSAtMTsK
Kwl2ZS0+YmFzZS5jbGFzcyA9IE9USEVSX0NMQVNTOworCXZlLT5iYXNlLnVhYmlfY2xhc3MgPSBJ
OTE1X0VOR0lORV9DTEFTU19JTlZBTElEOworCXZlLT5iYXNlLmluc3RhbmNlID0gSTkxNV9FTkdJ
TkVfQ0xBU1NfSU5WQUxJRF9WSVJUVUFMOworCXZlLT5iYXNlLmZsYWdzID0gSTkxNV9FTkdJTkVf
SVNfVklSVFVBTDsKKworCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVvZih2ZS0+YmFzZS5u
YW1lKSwgInZpcnR1YWwiKTsKKworCWVyciA9IGk5MTVfdGltZWxpbmVfaW5pdChjdHgtPmk5MTUs
ICZ2ZS0+YmFzZS50aW1lbGluZSwgTlVMTCk7CisJaWYgKGVycikKKwkJZ290byBlcnJfcHV0Owor
CWk5MTVfdGltZWxpbmVfc2V0X3N1YmNsYXNzKCZ2ZS0+YmFzZS50aW1lbGluZSwgVElNRUxJTkVf
VklSVFVBTCk7CisKKwlpbnRlbF9lbmdpbmVfaW5pdF9leGVjbGlzdHMoJnZlLT5iYXNlKTsKKwor
CXZlLT5iYXNlLmNvcHMgPSAmdmlydHVhbF9jb250ZXh0X29wczsKKwl2ZS0+YmFzZS5yZXF1ZXN0
X2FsbG9jID0gZXhlY2xpc3RzX3JlcXVlc3RfYWxsb2M7CisKKwl2ZS0+YmFzZS5zY2hlZHVsZSA9
IGk5MTVfc2NoZWR1bGU7CisJdmUtPmJhc2Uuc3VibWl0X3JlcXVlc3QgPSB2aXJ0dWFsX3N1Ym1p
dF9yZXF1ZXN0OworCisJdmUtPmJhc2UuZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJ
TlRfTUlOOworCXRhc2tsZXRfaW5pdCgmdmUtPmJhc2UuZXhlY2xpc3RzLnRhc2tsZXQsCisJCSAg
ICAgdmlydHVhbF9zdWJtaXNzaW9uX3Rhc2tsZXQsCisJCSAgICAgKHVuc2lnbmVkIGxvbmcpdmUp
OworCisJaW50ZWxfY29udGV4dF9pbml0KCZ2ZS0+Y29udGV4dCwgY3R4LCAmdmUtPmJhc2UpOwor
CisJZm9yIChuID0gMDsgbiA8IGNvdW50OyBuKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqc2libGluZyA9IHNpYmxpbmdzW25dOworCisJCUdFTV9CVUdfT04oIWlzX3Bvd2VyX29mXzIo
c2libGluZy0+bWFzaykpOworCQlpZiAoc2libGluZy0+bWFzayAmIHZlLT5iYXNlLm1hc2spIHsK
KwkJCURSTV9ERUJVRygiZHVwbGljYXRlICVzIGVudHJ5IGluIGxvYWQgYmFsYW5jZXJcbiIsCisJ
CQkJICBzaWJsaW5nLT5uYW1lKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlnb3RvIGVycl9wdXQ7
CisJCX0KKworCQkvKgorCQkgKiBUaGUgdmlydHVhbCBlbmdpbmUgaW1wbGVtZW50YXRpb24gaXMg
dGlnaHRseSBjb3VwbGVkIHRvCisJCSAqIHRoZSBleGVjbGlzdHMgYmFja2VuZCAtLSB3ZSBwdXNo
IG91dCByZXF1ZXN0IGRpcmVjdGx5CisJCSAqIGludG8gYSB0cmVlIGluc2lkZSBlYWNoIHBoeXNp
Y2FsIGVuZ2luZS4gV2UgY291bGQgc3VwcG9ydAorCQkgKiBsYXllcmluZyBpZiB3ZSBoYW5kbGUg
Y2xvbmluZyBvZiB0aGUgcmVxdWVzdHMgYW5kCisJCSAqIHN1Ym1pdHRpbmcgYSBjb3B5IGludG8g
ZWFjaCBiYWNrZW5kLgorCQkgKi8KKwkJaWYgKHNpYmxpbmctPmV4ZWNsaXN0cy50YXNrbGV0LmZ1
bmMgIT0KKwkJICAgIGV4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQpIHsKKwkJCWVyciA9IC1F
Tk9ERVY7CisJCQlnb3RvIGVycl9wdXQ7CisJCX0KKworCQlHRU1fQlVHX09OKFJCX0VNUFRZX05P
REUoJnZlLT5ub2Rlc1tzaWJsaW5nLT5pZF0ucmIpKTsKKwkJUkJfQ0xFQVJfTk9ERSgmdmUtPm5v
ZGVzW3NpYmxpbmctPmlkXS5yYik7CisKKwkJdmUtPnNpYmxpbmdzW3ZlLT5udW1fc2libGluZ3Mr
K10gPSBzaWJsaW5nOworCQl2ZS0+YmFzZS5tYXNrIHw9IHNpYmxpbmctPm1hc2s7CisKKwkJLyoK
KwkJICogQWxsIHBoeXNpY2FsIGVuZ2luZXMgbXVzdCBiZSBjb21wYXRpYmxlIGZvciB0aGVpciBl
bWlzc2lvbgorCQkgKiBmdW5jdGlvbnMgKGFzIHdlIGJ1aWxkIHRoZSBpbnN0cnVjdGlvbnMgZHVy
aW5nIHJlcXVlc3QKKwkJICogY29uc3RydWN0aW9uIGFuZCBkbyBub3QgYWx0ZXIgdGhlbSBiZWZv
cmUgc3VibWlzc2lvbgorCQkgKiBvbiB0aGUgcGh5c2ljYWwgZW5naW5lKS4gV2UgdXNlIHRoZSBl
bmdpbmUgY2xhc3MgYXMgYSBndWlkZQorCQkgKiBoZXJlLCBhbHRob3VnaCB0aGF0IGNvdWxkIGJl
IHJlZmluZWQuCisJCSAqLworCQlpZiAodmUtPmJhc2UuY2xhc3MgIT0gT1RIRVJfQ0xBU1MpIHsK
KwkJCWlmICh2ZS0+YmFzZS5jbGFzcyAhPSBzaWJsaW5nLT5jbGFzcykgeworCQkJCURSTV9ERUJV
RygiaW52YWxpZCBtaXhpbmcgb2YgZW5naW5lIGNsYXNzLCBzaWJsaW5nICVkLCBhbHJlYWR5ICVk
XG4iLAorCQkJCQkgIHNpYmxpbmctPmNsYXNzLCB2ZS0+YmFzZS5jbGFzcyk7CisJCQkJZXJyID0g
LUVJTlZBTDsKKwkJCQlnb3RvIGVycl9wdXQ7CisJCQl9CisJCQljb250aW51ZTsKKwkJfQorCisJ
CXZlLT5iYXNlLmNsYXNzID0gc2libGluZy0+Y2xhc3M7CisJCXZlLT5iYXNlLnVhYmlfY2xhc3Mg
PSBzaWJsaW5nLT51YWJpX2NsYXNzOworCQlzbnByaW50Zih2ZS0+YmFzZS5uYW1lLCBzaXplb2Yo
dmUtPmJhc2UubmFtZSksCisJCQkgInYlZHglZCIsIHZlLT5iYXNlLmNsYXNzLCBjb3VudCk7CisJ
CXZlLT5iYXNlLmNvbnRleHRfc2l6ZSA9IHNpYmxpbmctPmNvbnRleHRfc2l6ZTsKKworCQl2ZS0+
YmFzZS5lbWl0X2JiX3N0YXJ0ID0gc2libGluZy0+ZW1pdF9iYl9zdGFydDsKKwkJdmUtPmJhc2Uu
ZW1pdF9mbHVzaCA9IHNpYmxpbmctPmVtaXRfZmx1c2g7CisJCXZlLT5iYXNlLmVtaXRfaW5pdF9i
cmVhZGNydW1iID0gc2libGluZy0+ZW1pdF9pbml0X2JyZWFkY3J1bWI7CisJCXZlLT5iYXNlLmVt
aXRfZmluaV9icmVhZGNydW1iID0gc2libGluZy0+ZW1pdF9maW5pX2JyZWFkY3J1bWI7CisJCXZl
LT5iYXNlLmVtaXRfZmluaV9icmVhZGNydW1iX2R3ID0KKwkJCXNpYmxpbmctPmVtaXRfZmluaV9i
cmVhZGNydW1iX2R3OworCX0KKworCXJldHVybiAmdmUtPmNvbnRleHQ7CisKK2Vycl9wdXQ6CisJ
aW50ZWxfY29udGV4dF9wdXQoJnZlLT5jb250ZXh0KTsKKwlyZXR1cm4gRVJSX1BUUihlcnIpOwor
fQorCitzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9leGVjbGlzdHNfY2xvbmVfdmlydHVh
bChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkJICAgICAgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqc3JjKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqc2UgPSB0b192aXJ0dWFs
X2VuZ2luZShzcmMpOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpkc3Q7CisKKwlkc3QgPSBpbnRl
bF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoY3R4LAorCQkJCQkgICAgIHNlLT5zaWJsaW5ncywK
KwkJCQkJICAgICBzZS0+bnVtX3NpYmxpbmdzKTsKKwlpZiAoSVNfRVJSKGRzdCkpCisJCXJldHVy
biBkc3Q7CisKKwlyZXR1cm4gZHN0OworfQorCiB2b2lkIGludGVsX2V4ZWNsaXN0c19zaG93X3Jl
cXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCQkgICBzdHJ1Y3QgZHJt
X3ByaW50ZXIgKm0sCiAJCQkJICAgdm9pZCAoKnNob3dfcmVxdWVzdCkoc3RydWN0IGRybV9wcmlu
dGVyICptLApAQCAtMjc3Miw2ICszMzg3LDI5IEBAIHZvaWQgaW50ZWxfZXhlY2xpc3RzX3Nob3df
cmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQlzaG93X3JlcXVlc3Qo
bSwgbGFzdCwgIlx0XHRRICIpOwogCX0KIAorCWxhc3QgPSBOVUxMOworCWNvdW50ID0gMDsKKwlm
b3IgKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1YWwpOyByYjsgcmIgPSBy
Yl9uZXh0KHJiKSkgeworCQlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0KKwkJCXJiX2VudHJ5
KHJiLCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5naW5lLT5pZF0ucmIpOworCQlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSA9IFJFQURfT05DRSh2ZS0+cmVxdWVzdCk7CisKKwkJaWYgKHJxKSB7CisJCQlp
ZiAoY291bnQrKyA8IG1heCAtIDEpCisJCQkJc2hvd19yZXF1ZXN0KG0sIHJxLCAiXHRcdFYgIik7
CisJCQllbHNlCisJCQkJbGFzdCA9IHJxOworCQl9CisJfQorCWlmIChsYXN0KSB7CisJCWlmIChj
b3VudCA+IG1heCkgeworCQkJZHJtX3ByaW50ZihtLAorCQkJCSAgICJcdFx0Li4uc2tpcHBpbmcg
JWQgdmlydHVhbCByZXF1ZXN0cy4uLlxuIiwKKwkJCQkgICBjb3VudCAtIG1heCk7CisJCX0KKwkJ
c2hvd19yZXF1ZXN0KG0sIGxhc3QsICJcdFx0ViAiKTsKKwl9CisKIAlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2ssIGZsYWdzKTsKIH0KIApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9scmMuaAppbmRleCBhMGRjOTA3YTcyNDkuLjU1MzA2MDYwNTJlNSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKQEAgLTExNCw0ICsxMTQsMTMgQEAgdm9pZCBpbnRl
bF9leGVjbGlzdHNfc2hvd19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
CiAJCQkJCQkJY29uc3QgY2hhciAqcHJlZml4KSwKIAkJCQkgICB1bnNpZ25lZCBpbnQgbWF4KTsK
IAorc3RydWN0IGludGVsX2NvbnRleHQgKgoraW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFs
KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICAgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqKnNpYmxpbmdzLAorCQkJICAgICAgIHVuc2lnbmVkIGludCBjb3VudCk7CisKK3N0
cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2V4ZWNsaXN0c19jbG9uZV92aXJ0dWFsKHN0cnVj
dCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICpzcmMpOworCiAjZW5kaWYgLyogX0lOVEVMX0xSQ19IXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9scmMuYwppbmRleCA1YjNkOGUzM2YxY2YuLmY4ODAyNzFmYjliYSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKQEAgLTEzMTAsNiArMTMxMCwxODUgQEAg
c3RhdGljIGludCBsaXZlX3ByZWVtcHRfc21va2Uodm9pZCAqYXJnKQogCXJldHVybiBlcnI7CiB9
CiAKK3N0YXRpYyBpbnQgbm9wX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1LAorCQkJICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLAorCQkJ
ICAgICAgdW5zaWduZWQgaW50IG5zaWJsaW5nLAorCQkJICAgICAgdW5zaWduZWQgaW50IG5jdHgs
CisJCQkgICAgICB1bnNpZ25lZCBpbnQgZmxhZ3MpCisjZGVmaW5lIENIQUlOIEJJVCgwKQorewor
CUlHVF9USU1FT1VUKGVuZF90aW1lKTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0WzE2
XTsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4WzE2XTsKKwlzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqdmVbMTZdOworCXVuc2lnbmVkIGxvbmcgbiwgcHJpbWUsIG5jOworCXN0cnVjdCBpZ3Rf
bGl2ZV90ZXN0IHQ7CisJa3RpbWVfdCB0aW1lc1syXSA9IHt9OworCWludCBlcnI7CisKKwlHRU1f
QlVHX09OKCFuY3R4IHx8IG5jdHggPiBBUlJBWV9TSVpFKGN0eCkpOworCisJZm9yIChuID0gMDsg
biA8IG5jdHg7IG4rKykgeworCQljdHhbbl0gPSBrZXJuZWxfY29udGV4dChpOTE1KTsKKwkJaWYg
KCFjdHhbbl0pIHsKKwkJCWVyciA9IC1FTk9NRU07CisJCQluY3R4ID0gbjsKKwkJCWdvdG8gb3V0
OworCQl9CisKKwkJdmVbbl0gPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoY3R4W25d
LAorCQkJCQkJICAgICAgIHNpYmxpbmdzLCBuc2libGluZyk7CisJCWlmIChJU19FUlIodmVbbl0p
KSB7CisJCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbl0pOworCQkJZXJyID0gUFRSX0VSUih2
ZVtuXSk7CisJCQluY3R4ID0gbjsKKwkJCWdvdG8gb3V0OworCQl9CisKKwkJZXJyID0gaW50ZWxf
Y29udGV4dF9waW4odmVbbl0pOworCQlpZiAoZXJyKSB7CisJCQlpbnRlbF9jb250ZXh0X3B1dCh2
ZVtuXSk7CisJCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbl0pOworCQkJbmN0eCA9IG47CisJ
CQlnb3RvIG91dDsKKwkJfQorCX0KKworCWVyciA9IGlndF9saXZlX3Rlc3RfYmVnaW4oJnQsIGk5
MTUsIF9fZnVuY19fLCB2ZVswXS0+ZW5naW5lLT5uYW1lKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91
dDsKKworCWZvcl9lYWNoX3ByaW1lX251bWJlcl9mcm9tKHByaW1lLCAxLCA4MTkyKSB7CisJCXRp
bWVzWzFdID0ga3RpbWVfZ2V0X3JhdygpOworCisJCWlmIChmbGFncyAmIENIQUlOKSB7CisJCQlm
b3IgKG5jID0gMDsgbmMgPCBuY3R4OyBuYysrKSB7CisJCQkJZm9yIChuID0gMDsgbiA8IHByaW1l
OyBuKyspIHsKKwkJCQkJcmVxdWVzdFtuY10gPQorCQkJCQkJaTkxNV9yZXF1ZXN0X2NyZWF0ZSh2
ZVtuY10pOworCQkJCQlpZiAoSVNfRVJSKHJlcXVlc3RbbmNdKSkgeworCQkJCQkJZXJyID0gUFRS
X0VSUihyZXF1ZXN0W25jXSk7CisJCQkJCQlnb3RvIG91dDsKKwkJCQkJfQorCisJCQkJCWk5MTVf
cmVxdWVzdF9hZGQocmVxdWVzdFtuY10pOworCQkJCX0KKwkJCX0KKwkJfSBlbHNlIHsKKwkJCWZv
ciAobiA9IDA7IG4gPCBwcmltZTsgbisrKSB7CisJCQkJZm9yIChuYyA9IDA7IG5jIDwgbmN0eDsg
bmMrKykgeworCQkJCQlyZXF1ZXN0W25jXSA9CisJCQkJCQlpOTE1X3JlcXVlc3RfY3JlYXRlKHZl
W25jXSk7CisJCQkJCWlmIChJU19FUlIocmVxdWVzdFtuY10pKSB7CisJCQkJCQllcnIgPSBQVFJf
RVJSKHJlcXVlc3RbbmNdKTsKKwkJCQkJCWdvdG8gb3V0OworCQkJCQl9CisKKwkJCQkJaTkxNV9y
ZXF1ZXN0X2FkZChyZXF1ZXN0W25jXSk7CisJCQkJfQorCQkJfQorCQl9CisKKwkJZm9yIChuYyA9
IDA7IG5jIDwgbmN0eDsgbmMrKykgeworCQkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJlcXVlc3Rb
bmNdLAorCQkJCQkgICAgICBJOTE1X1dBSVRfTE9DS0VELAorCQkJCQkgICAgICBIWiAvIDEwKSA8
IDApIHsKKwkJCQlwcl9lcnIoIiVzKCVzKTogd2FpdCBmb3IgJWxseDolbGxkIHRpbWVkIG91dFxu
IiwKKwkJCQkgICAgICAgX19mdW5jX18sIHZlWzBdLT5lbmdpbmUtPm5hbWUsCisJCQkJICAgICAg
IHJlcXVlc3RbbmNdLT5mZW5jZS5jb250ZXh0LAorCQkJCSAgICAgICByZXF1ZXN0W25jXS0+ZmVu
Y2Uuc2Vxbm8pOworCisJCQkJR0VNX1RSQUNFKCIlcyglcykgZmFpbGVkIGF0IHJlcXVlc3QgJWxs
eDolbGxkXG4iLAorCQkJCQkgIF9fZnVuY19fLCB2ZVswXS0+ZW5naW5lLT5uYW1lLAorCQkJCQkg
IHJlcXVlc3RbbmNdLT5mZW5jZS5jb250ZXh0LAorCQkJCQkgIHJlcXVlc3RbbmNdLT5mZW5jZS5z
ZXFubyk7CisJCQkJR0VNX1RSQUNFX0RVTVAoKTsKKwkJCQlpOTE1X2dlbV9zZXRfd2VkZ2VkKGk5
MTUpOworCQkJCWJyZWFrOworCQkJfQorCQl9CisKKwkJdGltZXNbMV0gPSBrdGltZV9zdWIoa3Rp
bWVfZ2V0X3JhdygpLCB0aW1lc1sxXSk7CisJCWlmIChwcmltZSA9PSAxKQorCQkJdGltZXNbMF0g
PSB0aW1lc1sxXTsKKworCQlpZiAoX19pZ3RfdGltZW91dChlbmRfdGltZSwgTlVMTCkpCisJCQli
cmVhazsKKwl9CisKKwllcnIgPSBpZ3RfbGl2ZV90ZXN0X2VuZCgmdCk7CisJaWYgKGVycikKKwkJ
Z290byBvdXQ7CisKKwlwcl9pbmZvKCJSZXF1ZXN0eCVkIGxhdGVuY2llcyBvbiAlczogMSA9ICVs
bHVucywgJWx1ID0gJWxsdW5zXG4iLAorCQluY3R4LCB2ZVswXS0+ZW5naW5lLT5uYW1lLCBrdGlt
ZV90b19ucyh0aW1lc1swXSksCisJCXByaW1lLCBkaXY2NF91NjQoa3RpbWVfdG9fbnModGltZXNb
MV0pLCBwcmltZSkpOworCitvdXQ6CisJaWYgKGlndF9mbHVzaF90ZXN0KGk5MTUsIEk5MTVfV0FJ
VF9MT0NLRUQpKQorCQllcnIgPSAtRUlPOworCisJZm9yIChuYyA9IDA7IG5jIDwgbmN0eDsgbmMr
KykgeworCQlpbnRlbF9jb250ZXh0X3VucGluKHZlW25jXSk7CisJCWludGVsX2NvbnRleHRfcHV0
KHZlW25jXSk7CisJCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuY10pOworCX0KKwlyZXR1cm4g
ZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfdmlydHVhbF9lbmdpbmUodm9pZCAqYXJnKQorewor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gYXJnOworCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKnNpYmxpbmdzW01BWF9FTkdJTkVfSU5TVEFOQ0UgKyAxXTsKKwlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisJdW5zaWduZWQg
aW50IGNsYXNzLCBpbnN0OworCWludCBlcnIgPSAtRU5PREVWOworCisJaWYgKFVTRVNfR1VDX1NV
Qk1JU1NJT04oaTkxNSkpCisJCXJldHVybiAwOworCisJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0
cnVjdF9tdXRleCk7CisKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkgeworCQll
cnIgPSBub3BfdmlydHVhbF9lbmdpbmUoaTkxNSwgJmVuZ2luZSwgMSwgMSwgMCk7CisJCWlmIChl
cnIpIHsKKwkJCXByX2VycigiRmFpbGVkIHRvIHdyYXAgZW5naW5lICVzOiBlcnI9JWRcbiIsCisJ
CQkgICAgICAgZW5naW5lLT5uYW1lLCBlcnIpOworCQkJZ290byBvdXRfdW5sb2NrOworCQl9CisJ
fQorCisJZm9yIChjbGFzcyA9IDA7IGNsYXNzIDw9IE1BWF9FTkdJTkVfQ0xBU1M7IGNsYXNzKysp
IHsKKwkJaW50IG5zaWJsaW5nLCBuOworCisJCW5zaWJsaW5nID0gMDsKKwkJZm9yIChpbnN0ID0g
MDsgaW5zdCA8PSBNQVhfRU5HSU5FX0lOU1RBTkNFOyBpbnN0KyspIHsKKwkJCWlmICghaTkxNS0+
ZW5naW5lX2NsYXNzW2NsYXNzXVtpbnN0XSkKKwkJCQljb250aW51ZTsKKworCQkJc2libGluZ3Nb
bnNpYmxpbmcrK10gPSBpOTE1LT5lbmdpbmVfY2xhc3NbY2xhc3NdW2luc3RdOworCQl9CisJCWlm
IChuc2libGluZyA8IDIpCisJCQljb250aW51ZTsKKworCQlmb3IgKG4gPSAxOyBuIDw9IG5zaWJs
aW5nICsgMTsgbisrKSB7CisJCQllcnIgPSBub3BfdmlydHVhbF9lbmdpbmUoaTkxNSwgc2libGlu
Z3MsIG5zaWJsaW5nLAorCQkJCQkJIG4sIDApOworCQkJaWYgKGVycikKKwkJCQlnb3RvIG91dF91
bmxvY2s7CisJCX0KKworCQllcnIgPSBub3BfdmlydHVhbF9lbmdpbmUoaTkxNSwgc2libGluZ3Ms
IG5zaWJsaW5nLCBuLCBDSEFJTik7CisJCWlmIChlcnIpCisJCQlnb3RvIG91dF91bmxvY2s7CisJ
fQorCitvdXRfdW5sb2NrOgorCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CisJcmV0dXJuIGVycjsKK30KKwogaW50IGludGVsX2V4ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlzdGF0aWMgY29uc3Qgc3RydWN0IGk5
MTVfc3VidGVzdCB0ZXN0c1tdID0gewpAQCAtMTMyMiw2ICsxNTAxLDcgQEAgaW50IGludGVsX2V4
ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJ
U1VCVEVTVChsaXZlX2NoYWluX3ByZWVtcHQpLAogCQlTVUJURVNUKGxpdmVfcHJlZW1wdF9oYW5n
KSwKIAkJU1VCVEVTVChsaXZlX3ByZWVtcHRfc21va2UpLAorCQlTVUJURVNUKGxpdmVfdmlydHVh
bF9lbmdpbmUpLAogCX07CiAKIAlpZiAoIUhBU19FWEVDTElTVFMoaTkxNSkpCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW0uaAppbmRleCA2N2Y4YTRhODA3YTAuLmZlODJkMzU3MTA3MiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbS5oCkBAIC05MSw0ICs5MSw5IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBfX3Rhc2ts
ZXRfZW5hYmxlKHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKIAlyZXR1cm4gYXRvbWljX2RlY19h
bmRfdGVzdCgmdC0+Y291bnQpOwogfQogCitzdGF0aWMgaW5saW5lIGJvb2wgX190YXNrbGV0X2lz
X3NjaGVkdWxlZChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCit7CisJcmV0dXJuIHRlc3RfYml0
KFRBU0tMRVRfU1RBVEVfU0NIRUQsICZ0LT5zdGF0ZSk7Cit9CisKICNlbmRpZiAvKiBfX0k5MTVf
R0VNX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fY29u
dGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fY29udGV4dC5jCmluZGV4IDA0
MGMwYjc3MGMyMS4uM2FlMWQyNzEzMGE4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1f
Y29udGV4dC5jCkBAIC04Niw2ICs4Niw3IEBACiAgKi8KIAogI2luY2x1ZGUgPGxpbnV4L2xvZzIu
aD4KKyNpbmNsdWRlIDxsaW51eC9ub3NwZWMuaD4KIAogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5o
PgogCkBAIC0xMjE4LDcgKzEyMTksNiBAQCBfX2ludGVsX2NvbnRleHRfcmVjb25maWd1cmVfc3Nl
dShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJaW50IHJldDsKIAogCUdFTV9CVUdfT04oSU5U
RUxfR0VOKGNlLT5nZW1fY29udGV4dC0+aTkxNSkgPCA4KTsKLQlHRU1fQlVHX09OKGNlLT5lbmdp
bmUtPmlkICE9IFJDUzApOwogCiAJcmV0ID0gaW50ZWxfY29udGV4dF9sb2NrX3Bpbm5lZChjZSk7
CiAJaWYgKHJldCkKQEAgLTE0MTIsNyArMTQxMiwxMDAgQEAgc3RydWN0IHNldF9lbmdpbmVzIHsK
IAlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqZW5naW5lczsKIH07CiAKK3N0YXRpYyBpbnQKK3Nl
dF9lbmdpbmVzX19sb2FkX2JhbGFuY2Uoc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gX191c2Vy
ICpiYXNlLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBpOTE1X2NvbnRleHRfZW5naW5lc19sb2Fk
X2JhbGFuY2UgX191c2VyICpleHQgPQorCQljb250YWluZXJfb2ZfdXNlcihiYXNlLCB0eXBlb2Yo
KmV4dCksIGJhc2UpOworCWNvbnN0IHN0cnVjdCBzZXRfZW5naW5lcyAqc2V0ID0gZGF0YTsKKwlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzdGFja1sxNl07CisJc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqKnNpYmxpbmdzOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1MTYgbnVtX3NpYmxp
bmdzLCBpZHg7CisJdW5zaWduZWQgaW50IG47CisJaW50IGVycjsKKworCWlmICghSEFTX0VYRUNM
SVNUUyhzZXQtPmN0eC0+aTkxNSkpCisJCXJldHVybiAtRU5PREVWOworCisJaWYgKFVTRVNfR1VD
X1NVQk1JU1NJT04oc2V0LT5jdHgtPmk5MTUpKQorCQlyZXR1cm4gLUVOT0RFVjsgLyogbm90IGlt
cGxlbWVudCB5ZXQgKi8KKworCWlmIChnZXRfdXNlcihpZHgsICZleHQtPmVuZ2luZV9pbmRleCkp
CisJCXJldHVybiAtRUZBVUxUOworCisJaWYgKGlkeCA+PSBzZXQtPmVuZ2luZXMtPm51bV9lbmdp
bmVzKSB7CisJCURSTV9ERUJVRygiSW52YWxpZCBwbGFjZW1lbnQgdmFsdWUsICVkID49ICVkXG4i
LAorCQkJICBpZHgsIHNldC0+ZW5naW5lcy0+bnVtX2VuZ2luZXMpOworCQlyZXR1cm4gLUVJTlZB
TDsKKwl9CisKKwlpZHggPSBhcnJheV9pbmRleF9ub3NwZWMoaWR4LCBzZXQtPmVuZ2luZXMtPm51
bV9lbmdpbmVzKTsKKwlpZiAoc2V0LT5lbmdpbmVzLT5lbmdpbmVzW2lkeF0pIHsKKwkJRFJNX0RF
QlVHKCJJbnZhbGlkIHBsYWNlbWVudFslZF0sIGFscmVhZHkgb2NjdXBpZWRcbiIsIGlkeCk7CisJ
CXJldHVybiAtRUVYSVNUOworCX0KKworCWlmIChnZXRfdXNlcihudW1fc2libGluZ3MsICZleHQt
Pm51bV9zaWJsaW5ncykpCisJCXJldHVybiAtRUZBVUxUOworCisJZXJyID0gY2hlY2tfdXNlcl9t
YnooJmV4dC0+ZmxhZ3MpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwllcnIgPSBjaGVj
a191c2VyX21ieigmZXh0LT5tYno2NCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCXNp
YmxpbmdzID0gc3RhY2s7CisJaWYgKG51bV9zaWJsaW5ncyA+IEFSUkFZX1NJWkUoc3RhY2spKSB7
CisJCXNpYmxpbmdzID0ga21hbGxvY19hcnJheShudW1fc2libGluZ3MsCisJCQkJCSBzaXplb2Yo
KnNpYmxpbmdzKSwKKwkJCQkJIEdGUF9LRVJORUwpOworCQlpZiAoIXNpYmxpbmdzKQorCQkJcmV0
dXJuIC1FTk9NRU07CisJfQorCisJZm9yIChuID0gMDsgbiA8IG51bV9zaWJsaW5nczsgbisrKSB7
CisJCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSBjaTsKKworCQlpZiAoY29weV9m
cm9tX3VzZXIoJmNpLCAmZXh0LT5lbmdpbmVzW25dLCBzaXplb2YoY2kpKSkgeworCQkJZXJyID0g
LUVGQVVMVDsKKwkJCWdvdG8gb3V0X3NpYmxpbmdzOworCQl9CisKKwkJc2libGluZ3Nbbl0gPSBp
bnRlbF9lbmdpbmVfbG9va3VwX3VzZXIoc2V0LT5jdHgtPmk5MTUsCisJCQkJCQkgICAgICAgY2ku
ZW5naW5lX2NsYXNzLAorCQkJCQkJICAgICAgIGNpLmVuZ2luZV9pbnN0YW5jZSk7CisJCWlmICgh
c2libGluZ3Nbbl0pIHsKKwkJCURSTV9ERUJVRygiSW52YWxpZCBzaWJsaW5nWyVkXTogeyBjbGFz
czolZCwgaW5zdDolZCB9XG4iLAorCQkJCSAgbiwgY2kuZW5naW5lX2NsYXNzLCBjaS5lbmdpbmVf
aW5zdGFuY2UpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gb3V0X3NpYmxpbmdzOworCQl9
CisJfQorCisJY2UgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2V0LT5jdHgsIHNp
YmxpbmdzLCBuKTsKKwlpZiAoSVNfRVJSKGNlKSkgeworCQllcnIgPSBQVFJfRVJSKGNlKTsKKwkJ
Z290byBvdXRfc2libGluZ3M7CisJfQorCisJaWYgKGNtcHhjaGcoJnNldC0+ZW5naW5lcy0+ZW5n
aW5lc1tpZHhdLCBOVUxMLCBjZSkpIHsKKwkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQllcnIg
PSAtRUVYSVNUOworCQlnb3RvIG91dF9zaWJsaW5nczsKKwl9CisKK291dF9zaWJsaW5nczoKKwlp
ZiAoc2libGluZ3MgIT0gc3RhY2spCisJCWtmcmVlKHNpYmxpbmdzKTsKKworCXJldHVybiBlcnI7
Cit9CisKIHN0YXRpYyBjb25zdCBpOTE1X3VzZXJfZXh0ZW5zaW9uX2ZuIHNldF9lbmdpbmVzX19l
eHRlbnNpb25zW10gPSB7CisJW0k5MTVfQ09OVEVYVF9FTkdJTkVTX0VYVF9MT0FEX0JBTEFOQ0Vd
ID0gc2V0X2VuZ2luZXNfX2xvYWRfYmFsYW5jZSwKIH07CiAKIHN0YXRpYyBpbnQKQEAgLTE3MTEs
MTQgKzE4MDQsMjkgQEAgc3RhdGljIGludCBjbG9uZV9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9j
b250ZXh0ICpkc3QsCiAKIAljbG9uZS0+aTkxNSA9IGRzdC0+aTkxNTsKIAlmb3IgKG4gPSAwOyBu
IDwgZS0+bnVtX2VuZ2luZXM7IG4rKykgeworCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmU7CisKIAkJaWYgKCFlLT5lbmdpbmVzW25dKSB7CiAJCQljbG9uZS0+ZW5naW5lc1tuXSA9IE5V
TEw7CiAJCQljb250aW51ZTsKIAkJfQorCQllbmdpbmUgPSBlLT5lbmdpbmVzW25dLT5lbmdpbmU7
CiAKLQkJY2xvbmUtPmVuZ2luZXNbbl0gPQotCQkJaW50ZWxfY29udGV4dF9jcmVhdGUoZHN0LCBl
LT5lbmdpbmVzW25dLT5lbmdpbmUpOwotCQlpZiAoIWNsb25lLT5lbmdpbmVzW25dKSB7CisJCS8q
CisJCSAqIFZpcnR1YWwgZW5naW5lcyBhcmUgc2luZ2xldG9uczsgdGhleSBjYW4gb25seSBleGlz
dAorCQkgKiBpbnNpZGUgYSBzaW5nbGUgY29udGV4dCwgYmVjYXVzZSB0aGV5IGVtYmVkIHRoZWly
CisJCSAqIEhXIGNvbnRleHQuLi4gQXMgZWFjaCB2aXJ0dWFsIGNvbnRleHQgaW1wbGllcyBhIHNp
bmdsZQorCQkgKiB0aW1lbGluZSAoZWFjaCBlbmdpbmUgY2FuIG9ubHkgZGVxdWV1ZSBhIHNpbmds
ZSByZXF1ZXN0CisJCSAqIGF0IGFueSB0aW1lKSwgaXQgd291bGQgYmUgc3VycHJpc2luZyBmb3Ig
dHdvIGNvbnRleHRzCisJCSAqIHRvIHVzZSB0aGUgc2FtZSBlbmdpbmUuIFNvIGxldCdzIGNyZWF0
ZSBhIGNvcHkgb2YKKwkJICogdGhlIHZpcnR1YWwgZW5naW5lIGluc3RlYWQuCisJCSAqLworCQlp
ZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5lKSkKKwkJCWNsb25lLT5lbmdpbmVzW25d
ID0KKwkJCQlpbnRlbF9leGVjbGlzdHNfY2xvbmVfdmlydHVhbChkc3QsIGVuZ2luZSk7CisJCWVs
c2UKKwkJCWNsb25lLT5lbmdpbmVzW25dID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZHN0LCBlbmdp
bmUpOworCQlpZiAoSVNfRVJSX09SX05VTEwoY2xvbmUtPmVuZ2luZXNbbl0pKSB7CiAJCQlfX2Zy
ZWVfZW5naW5lcyhjbG9uZSwgbik7CiAJCQlnb3RvIGVycl91bmxvY2s7CiAJCX0KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCmluZGV4IGQyMTVkY2RmMGIxZS4uNzhjZWI1NmQ3ODAx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKQEAgLTE1MCwxNyArMTUwLDI2
IEBAIHNjaGVkX2xvY2tfZW5naW5lKGNvbnN0IHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUs
CiAJCSAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqbG9ja2VkLAogCQkgIHN0cnVjdCBzY2hlZF9j
YWNoZSAqY2FjaGUpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gbm9kZV90
b19yZXF1ZXN0KG5vZGUpLT5lbmdpbmU7CisJY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEg
PSBub2RlX3RvX3JlcXVlc3Qobm9kZSk7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
OwogCiAJR0VNX0JVR19PTighbG9ja2VkKTsKIAotCWlmIChlbmdpbmUgIT0gbG9ja2VkKSB7CisJ
LyoKKwkgKiBWaXJ0dWFsIGVuZ2luZXMgY29tcGxpY2F0ZSBhY3F1aXJpbmcgdGhlIGVuZ2luZSB0
aW1lbGluZSBsb2NrLAorCSAqIGFzIHRoZWlyIHJxLT5lbmdpbmUgcG9pbnRlciBpcyBub3Qgc3Rh
YmxlIHVudGlsIHVuZGVyIHRoYXQKKwkgKiBlbmdpbmUgbG9jay4gVGhlIHNpbXBsZSBwbG95IHdl
IHVzZSBpcyB0byB0YWtlIHRoZSBsb2NrIHRoZW4KKwkgKiBjaGVjayB0aGF0IHRoZSBycSBzdGls
bCBiZWxvbmdzIHRvIHRoZSBuZXdseSBsb2NrZWQgZW5naW5lLgorCSAqLworCXdoaWxlIChsb2Nr
ZWQgIT0gKGVuZ2luZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpIHsKIAkJc3Bpbl91bmxvY2so
JmxvY2tlZC0+dGltZWxpbmUubG9jayk7CiAJCW1lbXNldChjYWNoZSwgMCwgc2l6ZW9mKCpjYWNo
ZSkpOwogCQlzcGluX2xvY2soJmVuZ2luZS0+dGltZWxpbmUubG9jayk7CisJCWxvY2tlZCA9IGVu
Z2luZTsKIAl9CiAKLQlyZXR1cm4gZW5naW5lOworCUdFTV9CVUdfT04obG9ja2VkICE9IGVuZ2lu
ZSk7CisJcmV0dXJuIGxvY2tlZDsKIH0KIAogc3RhdGljIGlubGluZSBpbnQgcnFfcHJpbyhjb25z
dCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKQEAgLTI3Miw2ICsyODEsNyBAQCBzdGF0aWMgdm9p
ZCBfX2k5MTVfc2NoZWR1bGUoc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9kZSwKIAlzcGluX2xv
Y2soJmVuZ2luZS0+dGltZWxpbmUubG9jayk7CiAKIAkvKiBGaWZvIGFuZCBkZXB0aC1maXJzdCBy
ZXBsYWNlbWVudCBlbnN1cmUgb3VyIGRlcHMgZXhlY3V0ZSBiZWZvcmUgdXMgKi8KKwllbmdpbmUg
PSBzY2hlZF9sb2NrX2VuZ2luZShub2RlLCBlbmdpbmUsICZjYWNoZSk7CiAJbGlzdF9mb3JfZWFj
aF9lbnRyeV9zYWZlX3JldmVyc2UoZGVwLCBwLCAmZGZzLCBkZnNfbGluaykgewogCQlJTklUX0xJ
U1RfSEVBRCgmZGVwLT5kZnNfbGluayk7CiAKQEAgLTI4Myw4ICsyOTMsMTEgQEAgc3RhdGljIHZv
aWQgX19pOTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUsCiAJCWlmIChw
cmlvIDw9IG5vZGUtPmF0dHIucHJpb3JpdHkgfHwgbm9kZV9zaWduYWxlZChub2RlKSkKIAkJCWNv
bnRpbnVlOwogCisJCUdFTV9CVUdfT04obm9kZV90b19yZXF1ZXN0KG5vZGUpLT5lbmdpbmUgIT0g
ZW5naW5lKTsKKwogCQlub2RlLT5hdHRyLnByaW9yaXR5ID0gcHJpbzsKIAkJaWYgKCFsaXN0X2Vt
cHR5KCZub2RlLT5saW5rKSkgeworCQkJR0VNX0JVR19PTihpbnRlbF9lbmdpbmVfaXNfdmlydHVh
bChlbmdpbmUpKTsKIAkJCWlmICghY2FjaGUucHJpb2xpc3QpCiAJCQkJY2FjaGUucHJpb2xpc3Qg
PQogCQkJCQlpOTE1X3NjaGVkX2xvb2t1cF9wcmlvbGlzdChlbmdpbmUsCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgKaW5kZXggNTI1NmEwYjVjNWY3Li4xNjg4NzA1
ZjRhMmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdGltZWxpbmVfdHlw
ZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgKQEAg
LTI2LDYgKzI2LDcgQEAgc3RydWN0IGk5MTVfdGltZWxpbmUgewogCXNwaW5sb2NrX3QgbG9jazsK
ICNkZWZpbmUgVElNRUxJTkVfQ0xJRU5UIDAgLyogZGVmYXVsdCBzdWJjbGFzcyAqLwogI2RlZmlu
ZSBUSU1FTElORV9FTkdJTkUgMQorI2RlZmluZSBUSU1FTElORV9WSVJUVUFMIDIKIAlzdHJ1Y3Qg
bXV0ZXggbXV0ZXg7IC8qIHByb3RlY3RzIHRoZSBmbG93IG9mIHJlcXVlc3RzICovCiAKIAl1bnNp
Z25lZCBpbnQgcGluX2NvdW50OwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2Ry
bS5oIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IDYyMzk2ZDU3NWUyOC4uZjk3
NzA5NDgxNjFjIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKKysrIGIv
aW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC0xMzcsNiArMTM3LDcgQEAgc3RydWN0IGk5
MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIHsKIAlfX3UxNiBlbmdpbmVfY2xhc3M7IC8qIHNlZSBl
bnVtIGRybV9pOTE1X2dlbV9lbmdpbmVfY2xhc3MgKi8KIAlfX3UxNiBlbmdpbmVfaW5zdGFuY2U7
CiAjZGVmaW5lIEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSURfTk9ORSAtMQorI2RlZmluZSBJOTE1
X0VOR0lORV9DTEFTU19JTlZBTElEX1ZJUlRVQUwgLTIKIH07CiAKIC8qKgpAQCAtMTYwOCw4ICsx
NjA5LDQ2IEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbV9zc2V1IHsKIAlfX3Uz
MiByc3ZkOwogfTsKIAorLyoKKyAqIGk5MTVfY29udGV4dF9lbmdpbmVzX2xvYWRfYmFsYW5jZToK
KyAqCisgKiBFbmFibGUgbG9hZCBiYWxhbmNpbmcgYWNyb3NzIHRoaXMgc2V0IG9mIGVuZ2luZXMu
CisgKgorICogSW50byB0aGUgSTkxNV9FWEVDX0RFRkFVTFQgc2xvdCBbMF0sIGEgdmlydHVhbCBl
bmdpbmUgaXMgY3JlYXRlZCB0aGF0IHdoZW4KKyAqIHVzZWQgd2lsbCBwcm94eSB0aGUgZXhlY2J1
ZmZlciByZXF1ZXN0IG9udG8gb25lIG9mIHRoZSBzZXQgb2YgZW5naW5lcworICogaW4gc3VjaCBh
IHdheSBhcyB0byBkaXN0cmlidXRlIHRoZSBsb2FkIGV2ZW5seSBhY3Jvc3MgdGhlIHNldC4KKyAq
CisgKiBUaGUgc2V0IG9mIGVuZ2luZXMgbXVzdCBiZSBjb21wYXRpYmxlIChlLmcuIHRoZSBzYW1l
IEhXIGNsYXNzKSBhcyB0aGV5CisgKiB3aWxsIHNoYXJlIHRoZSBzYW1lIGxvZ2ljYWwgR1BVIGNv
bnRleHQgYW5kIHJpbmcuCisgKgorICogVG8gaW50ZXJtaXggcmVuZGVyaW5nIHdpdGggdGhlIHZp
cnR1YWwgZW5naW5lIGFuZCBkaXJlY3QgcmVuZGVyaW5nIG9udG8KKyAqIHRoZSBiYWNraW5nIGVu
Z2luZXMgKGJ5cGFzc2luZyB0aGUgbG9hZCBiYWxhbmNpbmcgcHJveHkpLCB0aGUgY29udGV4dCBt
dXN0CisgKiBiZSBkZWZpbmVkIHRvIHVzZSBhIHNpbmdsZSB0aW1lbGluZSBmb3IgYWxsIGVuZ2lu
ZXMuCisgKi8KK3N0cnVjdCBpOTE1X2NvbnRleHRfZW5naW5lc19sb2FkX2JhbGFuY2UgeworCXN0
cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIGJhc2U7CisKKwlfX3UxNiBlbmdpbmVfaW5kZXg7CisJ
X191MTYgbnVtX3NpYmxpbmdzOworCV9fdTMyIGZsYWdzOyAvKiBhbGwgdW5kZWZpbmVkIGZsYWdz
IG11c3QgYmUgemVybyAqLworCisJX191NjQgbWJ6NjQ7IC8qIHJlc2VydmVkIGZvciBmdXR1cmUg
dXNlOyBtdXN0IGJlIHplcm8gKi8KKworCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5j
ZSBlbmdpbmVzWzBdOworfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKTsKKworI2RlZmluZSBJOTE1
X0RFRklORV9DT05URVhUX0VOR0lORVNfTE9BRF9CQUxBTkNFKG5hbWVfXywgTl9fKSBzdHJ1Y3Qg
eyBcCisJc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gYmFzZTsgXAorCV9fdTE2IGVuZ2luZV9p
bmRleDsgXAorCV9fdTE2IG51bV9zaWJsaW5nczsgXAorCV9fdTMyIGZsYWdzOyBcCisJX191NjQg
bWJ6NjQ7IFwKKwlzdHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFuY2UgZW5naW5lc1tOX19d
OyBcCit9IF9fYXR0cmlidXRlX18oKHBhY2tlZCkpIG5hbWVfXworCiBzdHJ1Y3QgaTkxNV9jb250
ZXh0X3BhcmFtX2VuZ2luZXMgewogCV9fdTY0IGV4dGVuc2lvbnM7IC8qIGxpbmtlZCBjaGFpbiBv
ZiBleHRlbnNpb24gYmxvY2tzLCAwIHRlcm1pbmF0ZXMgKi8KKyNkZWZpbmUgSTkxNV9DT05URVhU
X0VOR0lORVNfRVhUX0xPQURfQkFMQU5DRSAwIC8qIHNlZSBpOTE1X2NvbnRleHRfZW5naW5lc19s
b2FkX2JhbGFuY2UgKi8KIAlzdHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFuY2UgZW5naW5l
c1swXTsKIH0gX19hdHRyaWJ1dGVfXygocGFja2VkKSk7CiAKLS0gCjIuMjAuMQoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcg
bGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

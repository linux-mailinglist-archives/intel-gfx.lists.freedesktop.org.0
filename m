Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0AC4E2AC91F
	for <lists+intel-gfx@lfdr.de>; Tue, 10 Nov 2020 00:12:52 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4D3F78977A;
	Mon,  9 Nov 2020 23:12:50 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F2F018973E
 for <intel-gfx@lists.freedesktop.org>; Mon,  9 Nov 2020 23:12:48 +0000 (UTC)
IronPort-SDR: 0lmIselwCzwgKN/6e1nGtkh4p5r2zpp+NbtxkrLnvvpUPqI6rfakfuFmbgAy5ayBAT7QUYrzYN
 x8RBT7mjhbpg==
X-IronPort-AV: E=McAfee;i="6000,8403,9800"; a="157668121"
X-IronPort-AV: E=Sophos;i="5.77,464,1596524400"; d="scan'208";a="157668121"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 09 Nov 2020 15:12:47 -0800
IronPort-SDR: twCMrfWGxUHsqBdRxRGETDPcjd19fPiWv/KaqcjjheD2mNPoslduFXqLIqEbqXwuFDp5KMnmCl
 nLiamvjeGwWw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,464,1596524400"; d="scan'208";a="327457506"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga006.jf.intel.com with SMTP; 09 Nov 2020 15:12:45 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 10 Nov 2020 01:12:45 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 10 Nov 2020 01:12:38 +0200
Message-Id: <20201109231239.17002-3-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201109231239.17002-1-ville.syrjala@linux.intel.com>
References: <20201109231239.17002-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/4] drm/i915: Use actual readout results for
 .get_freq()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkN1
cnJlbnRseSB0aGUgRFBMTCAuZ2V0X2ZyZXEoKSB1c2VzIHBsbC0+c3RhdGUuaHdfc3RhdGUgd2hp
Y2gKaXMgbm90IHRoZSB0aGluZyB3ZSBhY3R1YWxseSByZWFkIG91dCAoZXhjZXB0IGR1cmluZyBk
cml2ZXIKbG9hZC9yZXN1bWUpLiBPdXRzaWRlIG9mIHRoYXQgcGxsLT5zdGF0ZS5od19zdGF0ZSBp
cyBqdXN0IHRoZQp0aGluZyB3ZSBjb21taXR0ZWQgbGFzdCB0aW1lIGFyb3VuZC4gRHVyaW5nIHN0
YXRlIGNoZWNrIHdlCmp1c3QgcmVhZCB0aGUgdGhpbmcgaW50byBjcnRjX3N0YXRlLT5kcGxsX2h3
X3N0YXRlLCBzbyB0aGF0CmlzIHdoYXQgd2Ugc2hvdWxkIHVzZSBmb3IgY2FsY3VsYXRpbmcgdGhl
IERQTEwgb3V0cHV0IGZyZXF1ZW5jeS4KCkkgdGhpbmsgd2UgdXNlZCB0byBkbyB0aGlzIHNvIHRo
YXQgdGhlIHJlc3VsdHMgb2YgdGhlIHJlYWRvdXQKd2VyZSBhY3R1YWxseSB1c2VkLCBidXQgc29t
ZWhvdyBpdCBnb3QgY2hhbmdlZCB3aGVuIHRoZQouZ2V0X2ZyZXEoKSByZWZhY3RvcmluZyBoYXBw
ZW5lZC4KCkNjOiBJbXJlIERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMgICAgICAgIHwgIDMgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8ICAzICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmMgfCA3OCArKysrKysrKysrKy0t
LS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmggfCAg
OCArLQogNCBmaWxlcyBjaGFuZ2VkLCA1NCBpbnNlcnRpb25zKCspLCAzOCBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jCmluZGV4IDA5NjY1MjkyMTQ1My4u
NzY5YmIxYjBkNTQzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lj
bF9kc2kuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYwpAQCAt
MTQ5Niw3ICsxNDk2LDggQEAgc3RhdGljIHZvaWQgZ2VuMTFfZHNpX2dldF9jb25maWcoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAKIAkvKiBGSVhNRTogYWRhcHQgaWNsX2RkaV9jbG9j
a19nZXQoKSBmb3IgRFNJIGFuZCB1c2UgdGhhdD8gKi8KIAlwaXBlX2NvbmZpZy0+cG9ydF9jbG9j
ayA9IGludGVsX2RwbGxfZ2V0X2ZyZXEoaTkxNSwKLQkJCQkJCSAgICAgIHBpcGVfY29uZmlnLT5z
aGFyZWRfZHBsbCk7CisJCQkJCQkgICAgICBwaXBlX2NvbmZpZy0+c2hhcmVkX2RwbGwsCisJCQkJ
CQkgICAgICAmcGlwZV9jb25maWctPmRwbGxfaHdfc3RhdGUpOwogCiAJcGlwZV9jb25maWctPmh3
LmFkanVzdGVkX21vZGUuY3J0Y19jbG9jayA9IGludGVsX2RzaS0+cGNsazsKIAlpZiAoaW50ZWxf
ZHNpLT5kdWFsX2xpbmspCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpp
bmRleCBkNGIxYjczYzdhYWIuLjlkODBlNDdlOTU1OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RkaS5jCkBAIC0xNzU1LDcgKzE3NTUsOCBAQCBzdGF0aWMgdm9pZCBpbnRl
bF9kZGlfY2xvY2tfZ2V0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCQkJCQll
bmNvZGVyLT5wb3J0KTsKIAllbHNlCiAJCXBpcGVfY29uZmlnLT5wb3J0X2Nsb2NrID0KLQkJCWlu
dGVsX2RwbGxfZ2V0X2ZyZXEoZGV2X3ByaXYsIHBpcGVfY29uZmlnLT5zaGFyZWRfZHBsbCk7CisJ
CQlpbnRlbF9kcGxsX2dldF9mcmVxKGRldl9wcml2LCBwaXBlX2NvbmZpZy0+c2hhcmVkX2RwbGws
CisJCQkJCSAgICAmcGlwZV9jb25maWctPmRwbGxfaHdfc3RhdGUpOwogCiAJZGRpX2RvdGNsb2Nr
X2dldChwaXBlX2NvbmZpZyk7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwbGxfbWdyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwbGxfbWdyLmMKaW5kZXggMTYwNGMyMGJhYzMzLi4wZjE0YzRkZWUwMmMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmMKQEAgLTg5MSwxMSAr
ODkxLDEyIEBAIGhzd19kZGlfd3JwbGxfZ2V0X2RwbGwoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsCiB9CiAKIHN0YXRpYyBpbnQgaHN3X2RkaV93cnBsbF9nZXRfZnJlcShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hh
cmVkX2RwbGwgKnBsbCkKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxs
LAorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSkKIHsK
IAlpbnQgcmVmY2xrOwogCWludCBuLCBwLCByOwotCXUzMiB3cnBsbCA9IHBsbC0+c3RhdGUuaHdf
c3RhdGUud3JwbGw7CisJdTMyIHdycGxsID0gcGxsX3N0YXRlLT53cnBsbDsKIAogCXN3aXRjaCAo
d3JwbGwgJiBXUlBMTF9SRUZfTUFTSykgewogCWNhc2UgV1JQTExfUkVGX1NQRUNJQUxfSFNXOgpA
QCAtOTYyLDcgKzk2Myw4IEBAIGhzd19kZGlfbGNwbGxfZ2V0X2RwbGwoc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpCiB9CiAKIHN0YXRpYyBpbnQgaHN3X2RkaV9sY3BsbF9nZXRf
ZnJlcShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKLQkJCQkgIGNvbnN0IHN0cnVjdCBp
bnRlbF9zaGFyZWRfZHBsbCAqcGxsKQorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX3NoYXJlZF9k
cGxsICpwbGwsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfZHBsbF9od19zdGF0ZSAqcGxsX3N0
YXRlKQogewogCWludCBsaW5rX2Nsb2NrID0gMDsKIApAQCAtMTAwMiwxMSArMTAwNCwxMiBAQCBo
c3dfZGRpX3NwbGxfZ2V0X2RwbGwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiB9
CiAKIHN0YXRpYyBpbnQgaHN3X2RkaV9zcGxsX2dldF9mcmVxKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAotCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCkKKwkJ
CQkgY29uc3Qgc3RydWN0IGludGVsX3NoYXJlZF9kcGxsICpwbGwsCisJCQkJIGNvbnN0IHN0cnVj
dCBpbnRlbF9kcGxsX2h3X3N0YXRlICpwbGxfc3RhdGUpCiB7CiAJaW50IGxpbmtfY2xvY2sgPSAw
OwogCi0Jc3dpdGNoIChwbGwtPnN0YXRlLmh3X3N0YXRlLnNwbGwgJiBTUExMX0ZSRVFfTUFTSykg
eworCXN3aXRjaCAocGxsX3N0YXRlLT5zcGxsICYgU1BMTF9GUkVRX01BU0spIHsKIAljYXNlIFNQ
TExfRlJFUV84MTBNSHo6CiAJCWxpbmtfY2xvY2sgPSA4MTAwMDsKIAkJYnJlYWs7CkBAIC0xNTc3
LDkgKzE1ODAsOSBAQCBzdGF0aWMgYm9vbCBza2xfZGRpX2hkbWlfcGxsX2RpdmlkZXJzKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogfQogCiBzdGF0aWMgaW50IHNrbF9kZGlf
d3JwbGxfZ2V0X2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCQkJICBjb25z
dCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCkKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRl
bF9zaGFyZWRfZHBsbCAqcGxsLAorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3Rh
dGUgKnBsbF9zdGF0ZSkKIHsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfZHBsbF9od19zdGF0ZSAqcGxs
X3N0YXRlID0gJnBsbC0+c3RhdGUuaHdfc3RhdGU7CiAJaW50IHJlZl9jbG9jayA9IGk5MTUtPmRw
bGwucmVmX2Nsa3MubnNzYzsKIAl1MzIgcDAsIHAxLCBwMiwgZGNvX2ZyZXE7CiAKQEAgLTE2ODgs
MTIgKzE2OTEsMTIgQEAgc2tsX2RkaV9kcF9zZXRfZHBsbF9od19zdGF0ZShzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIH0KIAogc3RhdGljIGludCBza2xfZGRpX2xjcGxsX2dl
dF9mcmVxKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAotCQkJCSAgY29uc3Qgc3RydWN0
IGludGVsX3NoYXJlZF9kcGxsICpwbGwpCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVk
X2RwbGwgKnBsbCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9kcGxsX2h3X3N0YXRlICpwbGxf
c3RhdGUpCiB7CiAJaW50IGxpbmtfY2xvY2sgPSAwOwogCi0Jc3dpdGNoICgocGxsLT5zdGF0ZS5o
d19zdGF0ZS5jdHJsMSAmCi0JCSBEUExMX0NUUkwxX0xJTktfUkFURV9NQVNLKDApKSA+PgorCXN3
aXRjaCAoKHBsbF9zdGF0ZS0+Y3RybDEgJiBEUExMX0NUUkwxX0xJTktfUkFURV9NQVNLKDApKSA+
PgogCQlEUExMX0NUUkwxX0xJTktfUkFURV9TSElGVCgwKSkgewogCWNhc2UgRFBMTF9DVFJMMV9M
SU5LX1JBVEVfODEwOgogCQlsaW5rX2Nsb2NrID0gODEwMDA7CkBAIC0xNzcxLDE2ICsxNzc0LDE3
IEBAIHN0YXRpYyBib29sIHNrbF9nZXRfZHBsbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKIH0KIAogc3RhdGljIGludCBza2xfZGRpX3BsbF9nZXRfZnJlcShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKLQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBs
bCkKKwkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCwKKwkJCQljb25zdCBz
dHJ1Y3QgaW50ZWxfZHBsbF9od19zdGF0ZSAqcGxsX3N0YXRlKQogewogCS8qCiAJICogY3RybDEg
cmVnaXN0ZXIgaXMgYWxyZWFkeSBzaGlmdGVkIGZvciBlYWNoIHBsbCwganVzdCB1c2UgMCB0byBn
ZXQKIAkgKiB0aGUgaW50ZXJuYWwgc2hpZnQgZm9yIGVhY2ggZmllbGQKIAkgKi8KLQlpZiAocGxs
LT5zdGF0ZS5od19zdGF0ZS5jdHJsMSAmIERQTExfQ1RSTDFfSERNSV9NT0RFKDApKQotCQlyZXR1
cm4gc2tsX2RkaV93cnBsbF9nZXRfZnJlcShpOTE1LCBwbGwpOworCWlmIChwbGxfc3RhdGUtPmN0
cmwxICYgRFBMTF9DVFJMMV9IRE1JX01PREUoMCkpCisJCXJldHVybiBza2xfZGRpX3dycGxsX2dl
dF9mcmVxKGk5MTUsIHBsbCwgcGxsX3N0YXRlKTsKIAllbHNlCi0JCXJldHVybiBza2xfZGRpX2xj
cGxsX2dldF9mcmVxKGk5MTUsIHBsbCk7CisJCXJldHVybiBza2xfZGRpX2xjcGxsX2dldF9mcmVx
KGk5MTUsIHBsbCwgcGxsX3N0YXRlKTsKIH0KIAogc3RhdGljIHZvaWQgc2tsX3VwZGF0ZV9kcGxs
X3JlZl9jbGtzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQpAQCAtMjIxOCw5ICsyMjIy
LDkgQEAgYnh0X2RkaV9oZG1pX3NldF9kcGxsX2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKQogfQogCiBzdGF0aWMgaW50IGJ4dF9kZGlfcGxsX2dldF9mcmVxKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAotCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9zaGFy
ZWRfZHBsbCAqcGxsKQorCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsLAor
CQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9kcGxsX2h3X3N0YXRlICpwbGxfc3RhdGUpCiB7Ci0JY29u
c3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwbGwtPnN0YXRlLmh3
X3N0YXRlOwogCXN0cnVjdCBkcGxsIGNsb2NrOwogCiAJY2xvY2subTEgPSAyOwpAQCAtMjY1MCw5
ICsyNjU0LDkgQEAgZWhsX2NvbWJvX3BsbF9kaXZfZnJhY193YV9uZWVkZWQoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpCiAKIHN0YXRpYyBpbnQgX19jbmxfZGRpX3dycGxsX2dldF9mcmVx
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgICAgY29uc3Qgc3RydWN0
IGludGVsX3NoYXJlZF9kcGxsICpwbGwsCisJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9kcGxs
X2h3X3N0YXRlICpwbGxfc3RhdGUsCiAJCQkJICAgIGludCByZWZfY2xvY2spCiB7Ci0JY29uc3Qg
c3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwbGwtPnN0YXRlLmh3X3N0
YXRlOwogCXUzMiBkY29fZnJhY3Rpb247CiAJdTMyIHAwLCBwMSwgcDIsIGRjb19mcmVxOwogCkBA
IC0yNzExLDkgKzI3MTUsMTEgQEAgc3RhdGljIGludCBfX2NubF9kZGlfd3JwbGxfZ2V0X2ZyZXEo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogfQogCiBzdGF0aWMgaW50IGNubF9k
ZGlfd3JwbGxfZ2V0X2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCQkJICBj
b25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCkKKwkJCQkgIGNvbnN0IHN0cnVjdCBp
bnRlbF9zaGFyZWRfZHBsbCAqcGxsLAorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdf
c3RhdGUgKnBsbF9zdGF0ZSkKIHsKLQlyZXR1cm4gX19jbmxfZGRpX3dycGxsX2dldF9mcmVxKGk5
MTUsIHBsbCwgaTkxNS0+ZHBsbC5yZWZfY2xrcy5uc3NjKTsKKwlyZXR1cm4gX19jbmxfZGRpX3dy
cGxsX2dldF9mcmVxKGk5MTUsIHBsbCwgcGxsX3N0YXRlLAorCQkJCQlpOTE1LT5kcGxsLnJlZl9j
bGtzLm5zc2MpOwogfQogCiBzdGF0aWMgYm9vbApAQCAtMjc2MiwxMSArMjc2OCwxMiBAQCBjbmxf
ZGRpX2RwX3NldF9kcGxsX2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogfQogCiBzdGF0aWMgaW50IGNubF9kZGlfbGNwbGxfZ2V0X2ZyZXEoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUsCi0JCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwg
KnBsbCkKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsLAorCQkJCSAg
Y29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSkKIHsKIAlpbnQgbGlu
a19jbG9jayA9IDA7CiAKLQlzd2l0Y2ggKHBsbC0+c3RhdGUuaHdfc3RhdGUuY2ZnY3IwICYgRFBM
TF9DRkdDUjBfTElOS19SQVRFX01BU0spIHsKKwlzd2l0Y2ggKHBsbF9zdGF0ZS0+Y2ZnY3IwICYg
RFBMTF9DRkdDUjBfTElOS19SQVRFX01BU0spIHsKIAljYXNlIERQTExfQ0ZHQ1IwX0xJTktfUkFU
RV84MTA6CiAJCWxpbmtfY2xvY2sgPSA4MTAwMDsKIAkJYnJlYWs7CkBAIC0yODQ5LDEyICsyODU2
LDEzIEBAIHN0YXRpYyBib29sIGNubF9nZXRfZHBsbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSwKIH0KIAogc3RhdGljIGludCBjbmxfZGRpX3BsbF9nZXRfZnJlcShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSwKLQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwg
KnBsbCkKKwkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCwKKwkJCQljb25z
dCBzdHJ1Y3QgaW50ZWxfZHBsbF9od19zdGF0ZSAqcGxsX3N0YXRlKQogewotCWlmIChwbGwtPnN0
YXRlLmh3X3N0YXRlLmNmZ2NyMCAmIERQTExfQ0ZHQ1IwX0hETUlfTU9ERSkKLQkJcmV0dXJuIGNu
bF9kZGlfd3JwbGxfZ2V0X2ZyZXEoaTkxNSwgcGxsKTsKKwlpZiAocGxsX3N0YXRlLT5jZmdjcjAg
JiBEUExMX0NGR0NSMF9IRE1JX01PREUpCisJCXJldHVybiBjbmxfZGRpX3dycGxsX2dldF9mcmVx
KGk5MTUsIHBsbCwgcGxsX3N0YXRlKTsKIAllbHNlCi0JCXJldHVybiBjbmxfZGRpX2xjcGxsX2dl
dF9mcmVxKGk5MTUsIHBsbCk7CisJCXJldHVybiBjbmxfZGRpX2xjcGxsX2dldF9mcmVxKGk5MTUs
IHBsbCwgcGxsX3N0YXRlKTsKIH0KIAogc3RhdGljIHZvaWQgY25sX3VwZGF0ZV9kcGxsX3JlZl9j
bGtzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQpAQCAtMzAzOSw3ICszMDQ3LDggQEAg
c3RhdGljIGJvb2wgaWNsX2NhbGNfdGJ0X3BsbChzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSwKIH0KIAogc3RhdGljIGludCBpY2xfZGRpX3RidF9wbGxfZ2V0X2ZyZXEoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9zaGFy
ZWRfZHBsbCAqcGxsKQorCQkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBs
bCwKKwkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSkK
IHsKIAkvKgogCSAqIFRoZSBQTEwgb3V0cHV0cyBtdWx0aXBsZSBmcmVxdWVuY2llcyBhdCB0aGUg
c2FtZSB0aW1lLCBzZWxlY3Rpb24gaXMKQEAgLTMwNzUsOSArMzA4NCwxMCBAQCBpY2xfY2FsY193
cnBsbChzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIH0KIAogc3RhdGljIGlu
dCBpY2xfZGRpX2NvbWJvX3BsbF9nZXRfZnJlcShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKLQkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCkKKwkJCQkg
ICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCwKKwkJCQkgICAgICBjb25z
dCBzdHJ1Y3QgaW50ZWxfZHBsbF9od19zdGF0ZSAqcGxsX3N0YXRlKQogewotCXJldHVybiBfX2Nu
bF9kZGlfd3JwbGxfZ2V0X2ZyZXEoaTkxNSwgcGxsLAorCXJldHVybiBfX2NubF9kZGlfd3JwbGxf
Z2V0X2ZyZXEoaTkxNSwgcGxsLCBwbGxfc3RhdGUsCiAJCQkJCWljbF93cnBsbF9yZWZfY2xvY2so
aTkxNSkpOwogfQogCkBAIC0zNDAyLDkgKzM0MTIsOSBAQCBzdGF0aWMgYm9vbCBpY2xfY2FsY19t
Z19wbGxfc3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiB9CiAKIHN0
YXRpYyBpbnQgaWNsX2RkaV9tZ19wbGxfZ2V0X2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAotCQkJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsKQor
CQkJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsLAorCQkJCSAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9kcGxsX2h3X3N0YXRlICpwbGxfc3RhdGUpCiB7Ci0JY29uc3Qgc3RydWN0
IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwbGwtPnN0YXRlLmh3X3N0YXRlOwog
CXUzMiBtMSwgbTJfaW50LCBtMl9mcmFjLCBkaXYxLCBkaXYyLCByZWZfY2xvY2s7CiAJdTY0IHRt
cDsKIApAQCAtNDUxNSwxNiArNDUyNSwxOCBAQCB2b2lkIGludGVsX3VwZGF0ZV9hY3RpdmVfZHBs
bChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKICAqIGludGVsX2RwbGxfZ2V0X2Zy
ZXEgLSBjYWxjdWxhdGUgdGhlIERQTEwncyBvdXRwdXQgZnJlcXVlbmN5CiAgKiBAaTkxNTogaTkx
NSBkZXZpY2UKICAqIEBwbGw6IERQTEwgZm9yIHdoaWNoIHRvIGNhbGN1bGF0ZSB0aGUgb3V0cHV0
IGZyZXF1ZW5jeQorICogQHBsbF9zdGF0ZTogRFBMTCBzdGF0ZSBmcm9tIHdoaWNoIHRvIGNhbGN1
bGF0ZSB0aGUgb3V0cHV0IGZyZXF1ZW5jeQogICoKLSAqIFJldHVybiB0aGUgb3V0cHV0IGZyZXF1
ZW5jeSBjb3JyZXNwb25kaW5nIHRvIEBwbGwncyBjdXJyZW50IHN0YXRlLgorICogUmV0dXJuIHRo
ZSBvdXRwdXQgZnJlcXVlbmN5IGNvcnJlc3BvbmRpbmcgdG8gQHBsbCdzIHBhc3NlZCBpbiBAcGxs
X3N0YXRlLgogICovCiBpbnQgaW50ZWxfZHBsbF9nZXRfZnJlcShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKLQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsKQorCQkJ
Y29uc3Qgc3RydWN0IGludGVsX3NoYXJlZF9kcGxsICpwbGwsCisJCQljb25zdCBzdHJ1Y3QgaW50
ZWxfZHBsbF9od19zdGF0ZSAqcGxsX3N0YXRlKQogewogCWlmIChkcm1fV0FSTl9PTigmaTkxNS0+
ZHJtLCAhcGxsLT5pbmZvLT5mdW5jcy0+Z2V0X2ZyZXEpKQogCQlyZXR1cm4gMDsKIAotCXJldHVy
biBwbGwtPmluZm8tPmZ1bmNzLT5nZXRfZnJlcShpOTE1LCBwbGwpOworCXJldHVybiBwbGwtPmlu
Zm8tPmZ1bmNzLT5nZXRfZnJlcShpOTE1LCBwbGwsIHBsbF9zdGF0ZSk7CiB9CiAKIC8qKgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5oCmluZGV4IDQzNTdm
OTJlYWZkNi4uMmViNzYxOGVmOTU3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwbGxfbWdyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcGxsX21nci5oCkBAIC0zMDAsMTAgKzMwMCwxMSBAQCBzdHJ1Y3QgaW50ZWxfc2hh
cmVkX2RwbGxfZnVuY3MgewogCSAqIEBnZXRfZnJlcToKIAkgKgogCSAqIEhvb2sgZm9yIGNhbGN1
bGF0aW5nIHRoZSBwbGwncyBvdXRwdXQgZnJlcXVlbmN5IGJhc2VkIG9uIGl0cwotCSAqIGN1cnJl
bnQgc3RhdGUuCisJICogcGFzc2VkIGluIHN0YXRlLgogCSAqLwogCWludCAoKmdldF9mcmVxKShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKLQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9zaGFy
ZWRfZHBsbCAqcGxsKTsKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsLAor
CQkJY29uc3Qgc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSk7CiB9OwogCiAv
KioKQEAgLTM5OSw3ICs0MDAsOCBAQCB2b2lkIGludGVsX3VwZGF0ZV9hY3RpdmVfZHBsbChzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogCQkJICAgICAgc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpOwogaW50IGlu
dGVsX2RwbGxfZ2V0X2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCQljb25z
dCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCk7CisJCQljb25zdCBzdHJ1Y3QgaW50ZWxf
c2hhcmVkX2RwbGwgKnBsbCwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9kcGxsX2h3X3N0YXRlICpw
bGxfc3RhdGUpOwogYm9vbCBpbnRlbF9kcGxsX2dldF9od19zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKIAkJCSAgICAgc3RydWN0IGludGVsX3NoYXJlZF9kcGxsICpwbGwsCiAJ
CQkgICAgIHN0cnVjdCBpbnRlbF9kcGxsX2h3X3N0YXRlICpod19zdGF0ZSk7Ci0tIAoyLjI2LjIK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

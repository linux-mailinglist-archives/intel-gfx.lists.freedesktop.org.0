Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 71B8BE0E4C
	for <lists+intel-gfx@lfdr.de>; Wed, 23 Oct 2019 00:39:21 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C35EC6E927;
	Tue, 22 Oct 2019 22:39:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A91766E91C
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Oct 2019 22:39:05 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18930837-1500050 
 for multiple; Tue, 22 Oct 2019 23:38:54 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 22 Oct 2019 23:38:25 +0100
Message-Id: <20191022223831.22677-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191022223831.22677-1-chris@chris-wilson.co.uk>
References: <20191022223831.22677-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 06/12] drm/i915/execlists: Cancel banned
 contexts on schedule-out
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gc2NoZWR1bGUtb3V0IChDUyBjb21wbGV0aW9uKSBvZiBhIGJhbm5lZCBjb250ZXh0LCBzY3J1
YiB0aGUgY29udGV4dAppbWFnZSBzbyB0aGF0IHdlIGRvIG5vdCByZXBsYXkgdGhlIGFjdGl2ZSBw
YXlsb2FkLiBUaGUgaW50ZW50IGlzIHRoYXQgd2UKc2tpcCBiYW5uZWQgcGF5bG9hZHMgb24gcmVx
dWVzdCBzdWJtaXNzaW9uIHNvIHRoYXQgdGhlIHRpbWVsaW5lCmFkdmFuY2VtZW50IGNvbnRpbnVl
cyBvbiBpbiB0aGUgYmFja2dyb3VuZC4gSG93ZXZlciwgaWYgd2UgYXJlIHJldHVybmluZwp0byBh
IHByZWVtcHRlZCByZXF1ZXN0LCBpOTE1X3JlcXVlc3Rfc2tpcCgpIGlzIGluZWZmZWN0aXZlIGFu
ZCBpbnN0ZWFkIHdlCm5lZWQgdG8gcGF0Y2ggdXAgdGhlIGNvbnRleHQgaW1hZ2Ugc28gdGhhdCBp
dCBjb250aW51ZXMgZnJvbSB0aGUgc3RhcnQKb2YgdGhlIG5leHQgcmVxdWVzdC4KCnYyOiBGaXh1
cCBjYW5jZWxsYXRpb24gc28gdGhhdCB3ZSBvbmx5IHNjcnViIHRoZSBwYXlsb2FkIG9mIHRoZSBh
Y3RpdmUKcmVxdWVzdCBhbmQgZG8gbm90IHNob3J0LWNpcmN1aXQgdGhlIGJyZWFkY3J1bWJzICh3
aGljaCBtaWdodCBjYXVzZQpvdGhlciBjb250ZXh0cyB0byBleGVjdXRlIG91dCBvZiBvcmRlciku
CnYzOiBHcmFtbWFyIHBhc3MKClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hy
aXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVs
LmNvbT4KUmV2aWV3ZWQtYnk6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgfCAxMzEgKysr
KysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgfCAzMjEgKysr
KysrKysrKysrKysrKysrKysrKysrKwogMiBmaWxlcyBjaGFuZ2VkLCA0MTEgaW5zZXJ0aW9ucygr
KSwgNDEgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwppbmRleCBl
YzBmN2VmODhlM2UuLmU2YWUzODgzMmU2ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJj
LmMKQEAgLTIzNCw2ICsyMzQsOSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfaW5pdF9yZWdfc3Rh
dGUodTMyICpyZWdfc3RhdGUsCiAJCQkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCiAJCQkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZywKIAkJCQkg
ICAgIGJvb2wgY2xvc2UpOworc3RhdGljIHZvaWQKK19fZXhlY2xpc3RzX3VwZGF0ZV9yZWdfc3Rh
dGUoY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJICAgICBjb25zdCBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogCiBzdGF0aWMgdm9pZCBtYXJrX2VpbyhzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSkKIHsKQEAgLTI0Niw2ICsyNDksMzEgQEAgc3RhdGljIHZvaWQgbWFy
a19laW8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJaTkxNV9yZXF1ZXN0X21hcmtfY29tcGxl
dGUocnEpOwogfQogCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAqYWN0aXZlX3JlcXVlc3Qo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQg
KiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0OworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKmFjdGl2
ZSA9IE5VTEw7CisJc3RydWN0IGxpc3RfaGVhZCAqbGlzdDsKKworCWlmICghaTkxNV9yZXF1ZXN0
X2lzX2FjdGl2ZShycSkpIC8qIHVud291bmQsIGJ1dCBpbmNvbXBsZXRlISAqLworCQlyZXR1cm4g
cnE7CisKKwlyY3VfcmVhZF9sb2NrKCk7CisJbGlzdCA9ICZyY3VfZGVyZWZlcmVuY2UocnEtPnRp
bWVsaW5lKS0+cmVxdWVzdHM7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9mcm9tX3JldmVyc2UocnEs
IGxpc3QsIGxpbmspIHsKKwkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQorCQkJYnJl
YWs7CisKKwkJaWYgKHJxLT5od19jb250ZXh0ICE9IGNlKQorCQkJYnJlYWs7CisKKwkJYWN0aXZl
ID0gcnE7CisJfQorCXJjdV9yZWFkX3VubG9jaygpOworCisJcmV0dXJuIGFjdGl2ZTsKK30KKwog
c3RhdGljIGlubGluZSB1MzIgaW50ZWxfaHdzX3ByZWVtcHRfYWRkcmVzcyhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiB7CiAJcmV0dXJuIChpOTE1X2dndHRfb2Zmc2V0KGVuZ2luZS0+
c3RhdHVzX3BhZ2Uudm1hKSArCkBAIC05OTIsNiArMTAyMCw1OCBAQCBzdGF0aWMgdm9pZCBraWNr
X3NpYmxpbmdzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UpCiAJCXRhc2tsZXRfc2NoZWR1bGUoJnZlLT5iYXNlLmV4ZWNsaXN0cy50YXNrbGV0KTsKIH0K
IAorc3RhdGljIHZvaWQgcmVzdG9yZV9kZWZhdWx0X3N0YXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSwKKwkJCQkgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwl1MzIgKnJl
Z3MgPSBjZS0+bHJjX3JlZ19zdGF0ZTsKKworCWlmIChlbmdpbmUtPnBpbm5lZF9kZWZhdWx0X3N0
YXRlKQorCQltZW1jcHkocmVncywgLyogc2tpcCByZXN0b3JpbmcgdGhlIHZhbmlsbGEgUFBIV1NQ
ICovCisJCSAgICAgICBlbmdpbmUtPnBpbm5lZF9kZWZhdWx0X3N0YXRlICsgTFJDX1NUQVRFX1BO
ICogUEFHRV9TSVpFLAorCQkgICAgICAgZW5naW5lLT5jb250ZXh0X3NpemUgLSBQQUdFX1NJWkUp
OworCisJZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBlbmdpbmUsIGNlLT5yaW5n
LCBmYWxzZSk7Cit9CisKK3N0YXRpYyB2b2lkIHJlc2V0X2FjdGl2ZShzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSwKKwkJCSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJc3RydWN0
IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0OworCisJLyoKKwkgKiBU
aGUgZXhlY3V0aW5nIGNvbnRleHQgaGFzIGJlZW4gY2FuY2VsbGVkLiBXZSB3YW50IHRvIHByZXZl
bnQKKwkgKiBmdXJ0aGVyIGV4ZWN1dGlvbiBhbG9uZyB0aGlzIGNvbnRleHQgYW5kIHByb3BhZ2F0
ZSB0aGUgZXJyb3Igb24KKwkgKiB0byBhbnl0aGluZyBkZXBlbmRpbmcgb24gaXRzIHJlc3VsdHMu
CisJICoKKwkgKiBJbiBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoKSwgd2UgYXBwbHkgdGhlIC1FSU8g
YW5kIHJlbW92ZSB0aGUKKwkgKiByZXF1ZXN0cycgcGF5bG9hZHMgZm9yIGFueSBiYW5uZWQgcmVx
dWVzdHMuIEJ1dCBmaXJzdCwgd2UgbXVzdAorCSAqIHJld2luZCB0aGUgY29udGV4dCBiYWNrIHRv
IHRoZSBzdGFydCBvZiB0aGUgaW5jb21wbGV0ZSByZXF1ZXN0IHNvCisJICogdGhhdCB3ZSBkbyBu
b3QganVtcCBiYWNrIGludG8gdGhlIG1pZGRsZSBvZiB0aGUgYmF0Y2guCisJICoKKwkgKiBXZSBw
cmVzZXJ2ZSB0aGUgYnJlYWRjcnVtYnMgYW5kIHNlbWFwaG9yZXMgb2YgdGhlIGluY29tcGxldGUK
KwkgKiByZXF1ZXN0cyBzbyB0aGF0IGludGVyLXRpbWVsaW5lIGRlcGVuZGVuY2llcyAoaS5lIG90
aGVyIHRpbWVsaW5lcykKKwkgKiByZW1haW4gY29ycmVjdGx5IG9yZGVyZWQuIEFuZCB3ZSBkZWZl
ciB0byBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoKQorCSAqIHNvIHRoYXQgYWxsIGFzeW5jaHJvbm91
cyB3YWl0cyBhcmUgY29ycmVjdGx5IGhhbmRsZWQuCisJICovCisJR0VNX1RSQUNFKCIlcyglcyk6
IHsgcnE9JWxseDolbGxkIH1cbiIsCisJCSAgX19mdW5jX18sIGVuZ2luZS0+bmFtZSwgcnEtPmZl
bmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubyk7CisKKwkvKiBPbiByZXN1Ym1pc3Npb24gb2Yg
dGhlIGFjdGl2ZSByZXF1ZXN0LCBwYXlsb2FkIHdpbGwgYmUgc2NydWJiZWQgKi8KKwlycSA9IGFj
dGl2ZV9yZXF1ZXN0KHJxKTsKKwlpZiAocnEpCisJCWNlLT5yaW5nLT5oZWFkID0gaW50ZWxfcmlu
Z193cmFwKGNlLT5yaW5nLCBycS0+aGVhZCk7CisJZWxzZQorCQljZS0+cmluZy0+aGVhZCA9IGNl
LT5yaW5nLT50YWlsOworCWludGVsX3JpbmdfdXBkYXRlX3NwYWNlKGNlLT5yaW5nKTsKKworCS8q
IFNjcnViIHRoZSBjb250ZXh0IGltYWdlIHRvIHByZXZlbnQgcmVwbGF5aW5nIHRoZSBwcmV2aW91
cyBiYXRjaCAqLworCXJlc3RvcmVfZGVmYXVsdF9zdGF0ZShjZSwgZW5naW5lKTsKKwlfX2V4ZWNs
aXN0c191cGRhdGVfcmVnX3N0YXRlKGNlLCBlbmdpbmUpOworCisJLyogV2UndmUgc3dpdGNoZWQg
YXdheSwgc28gdGhpcyBzaG91bGQgYmUgYSBuby1vcCwgYnV0IGludGVudCBtYXR0ZXJzICovCisJ
Y2UtPmxyY19kZXNjIHw9IENUWF9ERVNDX0ZPUkNFX1JFU1RPUkU7Cit9CisKIHN0YXRpYyBpbmxp
bmUgdm9pZAogX19leGVjbGlzdHNfc2NoZWR1bGVfb3V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LAogCQkJIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUpCkBAIC0xMDAyLDYg
KzEwODIsOSBAQCBfX2V4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEsCiAJZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShycSwgSU5URUxfQ09OVEVYVF9T
Q0hFRFVMRV9PVVQpOwogCWludGVsX2d0X3BtX3B1dChlbmdpbmUtPmd0KTsKIAorCWlmICh1bmxp
a2VseShpOTE1X2dlbV9jb250ZXh0X2lzX2Jhbm5lZChjZS0+Z2VtX2NvbnRleHQpKSkKKwkJcmVz
ZXRfYWN0aXZlKHJxLCBlbmdpbmUpOworCiAJLyoKIAkgKiBJZiB0aGlzIGlzIHBhcnQgb2YgYSB2
aXJ0dWFsIGVuZ2luZSwgaXRzIG5leHQgcmVxdWVzdCBtYXkKIAkgKiBoYXZlIGJlZW4gYmxvY2tl
ZCB3YWl0aW5nIGZvciBhY2Nlc3MgdG8gdGhlIGFjdGl2ZSBjb250ZXh0LgpAQCAtMTQxNyw2ICsx
NTAwLDEwIEBAIHN0YXRpYyB1bnNpZ25lZCBsb25nIGFjdGl2ZV9wcmVlbXB0X3RpbWVvdXQoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWlmICghcnEpCiAJCXJldHVybiAwOwogCisJ
LyogRm9yY2UgYSBmYXN0IHJlc2V0IGZvciB0ZXJtaW5hdGVkIGNvbnRleHRzIChpZ25vcmluZyBz
eXNmcyEpICovCisJaWYgKHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmVkKHJxLT5n
ZW1fY29udGV4dCkpKQorCQlyZXR1cm4gMTsKKwogCXJldHVybiBSRUFEX09OQ0UoZW5naW5lLT5w
cm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMpOwogfQogCkBAIC0yODI2LDI5ICsyOTEzLDYgQEAgc3Rh
dGljIHZvaWQgcmVzZXRfY3NiX3BvaW50ZXJzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKIAkJCSAgICAgICAmZXhlY2xpc3RzLT5jc2Jfc3RhdHVzW3Jlc2V0X3ZhbHVlXSk7CiB9CiAK
LXN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3RpdmVfcmVxdWVzdChzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKLXsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0g
cnEtPmh3X2NvbnRleHQ7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqYWN0aXZlID0gTlVMTDsKLQlz
dHJ1Y3QgbGlzdF9oZWFkICpsaXN0OwotCi0JaWYgKCFpOTE1X3JlcXVlc3RfaXNfYWN0aXZlKHJx
KSkgLyogdW53b3VuZCwgYnV0IGluY29tcGxldGUhICovCi0JCXJldHVybiBycTsKLQotCWxpc3Qg
PSAmaTkxNV9yZXF1ZXN0X2FjdGl2ZV90aW1lbGluZShycSktPnJlcXVlc3RzOwotCWxpc3RfZm9y
X2VhY2hfZW50cnlfZnJvbV9yZXZlcnNlKHJxLCBsaXN0LCBsaW5rKSB7Ci0JCWlmIChpOTE1X3Jl
cXVlc3RfY29tcGxldGVkKHJxKSkKLQkJCWJyZWFrOwotCi0JCWlmIChycS0+aHdfY29udGV4dCAh
PSBjZSkKLQkJCWJyZWFrOwotCi0JCWFjdGl2ZSA9IHJxOwotCX0KLQotCXJldHVybiBhY3RpdmU7
Ci19Ci0KIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0X3JlZ19zdGF0ZShjb25zdCBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIHsKQEAgLTI4NjUsNyArMjkyOSw2IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3Rz
X3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCXN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+
ZXhlY2xpc3RzOwogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKLQl1MzIgKnJlZ3M7CiAKIAltYigpOyAvKiBwYXJhbm9pYTogcmVhZCB0aGUgQ1NC
IHBvaW50ZXJzIGZyb20gYWZ0ZXIgdGhlIHJlc2V0ICovCiAJY2xmbHVzaChleGVjbGlzdHMtPmNz
Yl93cml0ZSk7CkBAIC0yOTQxLDEzICszMDA0LDcgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNf
cmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJICog
dG8gcmVjcmVhdGUgaXRzIG93biBzdGF0ZS4KIAkgKi8KIAlHRU1fQlVHX09OKCFpbnRlbF9jb250
ZXh0X2lzX3Bpbm5lZChjZSkpOwotCXJlZ3MgPSBjZS0+bHJjX3JlZ19zdGF0ZTsKLQlpZiAoZW5n
aW5lLT5waW5uZWRfZGVmYXVsdF9zdGF0ZSkgewotCQltZW1jcHkocmVncywgLyogc2tpcCByZXN0
b3JpbmcgdGhlIHZhbmlsbGEgUFBIV1NQICovCi0JCSAgICAgICBlbmdpbmUtPnBpbm5lZF9kZWZh
dWx0X3N0YXRlICsgTFJDX1NUQVRFX1BOICogUEFHRV9TSVpFLAotCQkgICAgICAgZW5naW5lLT5j
b250ZXh0X3NpemUgLSBQQUdFX1NJWkUpOwotCX0KLQlleGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUo
cmVncywgY2UsIGVuZ2luZSwgY2UtPnJpbmcsIGZhbHNlKTsKKwlyZXN0b3JlX2RlZmF1bHRfc3Rh
dGUoY2UsIGVuZ2luZSk7CiAKIG91dF9yZXBsYXk6CiAJR0VNX1RSQUNFKCIlcyByZXBsYXkge2hl
YWQ6JTA0eCwgdGFpbDolMDR4XG4iLApAQCAtNDYwOCwxNiArNDY2NSw4IEBAIHZvaWQgaW50ZWxf
bHJfY29udGV4dF9yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJICogZnV0
dXJlIHJlcXVlc3Qgd2lsbCBiZSBhZnRlciB1c2Vyc3BhY2UgaGFzIGhhZCB0aGUgb3Bwb3J0dW5p
dHkKIAkgKiB0byByZWNyZWF0ZSBpdHMgb3duIHN0YXRlLgogCSAqLwotCWlmIChzY3J1Yikgewot
CQl1MzIgKnJlZ3MgPSBjZS0+bHJjX3JlZ19zdGF0ZTsKLQotCQlpZiAoZW5naW5lLT5waW5uZWRf
ZGVmYXVsdF9zdGF0ZSkgewotCQkJbWVtY3B5KHJlZ3MsIC8qIHNraXAgcmVzdG9yaW5nIHRoZSB2
YW5pbGxhIFBQSFdTUCAqLwotCQkJICAgICAgIGVuZ2luZS0+cGlubmVkX2RlZmF1bHRfc3RhdGUg
KyBMUkNfU1RBVEVfUE4gKiBQQUdFX1NJWkUsCi0JCQkgICAgICAgZW5naW5lLT5jb250ZXh0X3Np
emUgLSBQQUdFX1NJWkUpOwotCQl9Ci0JCWV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZShyZWdzLCBj
ZSwgZW5naW5lLCBjZS0+cmluZywgZmFsc2UpOwotCX0KKwlpZiAoc2NydWIpCisJCXJlc3RvcmVf
ZGVmYXVsdF9zdGF0ZShjZSwgZW5naW5lKTsKIAogCS8qIFJlcnVuIHRoZSByZXF1ZXN0OyBpdHMg
cGF5bG9hZCBoYXMgYmVlbiBuZXV0ZXJlZCAoaWYgZ3VpbHR5KS4gKi8KIAljZS0+cmluZy0+aGVh
ZCA9IGhlYWQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9s
cmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCmluZGV4IDIyNzRm
MWE3NzU4NC4uMTVmMWVkNGQyZGQxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9s
cmMuYwpAQCAtNyw2ICs3LDcgQEAKICNpbmNsdWRlIDxsaW51eC9wcmltZV9udW1iZXJzLmg+CiAK
ICNpbmNsdWRlICJnZW0vaTkxNV9nZW1fcG0uaCIKKyNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVf
aGVhcnRiZWF0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfcmVzZXQuaCIKIAogI2luY2x1ZGUgImk5
MTVfc2VsZnRlc3QuaCIKQEAgLTExNjksNiArMTE3MCwzMjUgQEAgc3RhdGljIGludCBsaXZlX25v
cHJlZW1wdCh2b2lkICphcmcpCiAJZ290byBlcnJfY2xpZW50X2I7CiB9CiAKK3N0cnVjdCBsaXZl
X3ByZWVtcHRfY2FuY2VsIHsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3Ry
dWN0IHByZWVtcHRfY2xpZW50IGEsIGI7Cit9OworCitzdGF0aWMgaW50IF9fY2FuY2VsX2FjdGl2
ZTAoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKKwlzdHJ1Y3QgaWd0X2xpdmVfdGVzdCB0OworCWludCBlcnI7CisKKwkvKiBQcmVl
bXB0IGNhbmNlbCBvZiBFTFNQMCAqLworCUdFTV9UUkFDRSgiJXMoJXMpXG4iLCBfX2Z1bmNfXywg
YXJnLT5lbmdpbmUtPm5hbWUpOworCWlmIChpZ3RfbGl2ZV90ZXN0X2JlZ2luKCZ0LCBhcmctPmVu
Z2luZS0+aTkxNSwKKwkJCQlfX2Z1bmNfXywgYXJnLT5lbmdpbmUtPm5hbWUpKQorCQlyZXR1cm4g
LUVJTzsKKworCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFyZy0+YS5jdHgtPmZsYWdzKTsK
KwlycSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+YS5zcGluLAorCQkJCSAgICBhcmct
PmEuY3R4LCBhcmctPmVuZ2luZSwKKwkJCQkgICAgTUlfQVJCX0NIRUNLKTsKKwlpZiAoSVNfRVJS
KHJxKSkKKwkJcmV0dXJuIFBUUl9FUlIocnEpOworCisJaTkxNV9yZXF1ZXN0X2dldChycSk7CisJ
aTkxNV9yZXF1ZXN0X2FkZChycSk7CisJaWYgKCFpZ3Rfd2FpdF9mb3Jfc3Bpbm5lcigmYXJnLT5h
LnNwaW4sIHJxKSkgeworCQllcnIgPSAtRUlPOworCQlnb3RvIG91dDsKKwl9CisKKwlpOTE1X2dl
bV9jb250ZXh0X3NldF9iYW5uZWQoYXJnLT5hLmN0eCk7CisJZXJyID0gaW50ZWxfZW5naW5lX3B1
bHNlKGFyZy0+ZW5naW5lKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dDsKKworCWlmIChpOTE1X3Jl
cXVlc3Rfd2FpdChycSwgMCwgSFogLyA1KSA8IDApIHsKKwkJZXJyID0gLUVJTzsKKwkJZ290byBv
dXQ7CisJfQorCisJaWYgKHJxLT5mZW5jZS5lcnJvciAhPSAtRUlPKSB7CisJCXByX2VycigiQ2Fu
Y2VsbGVkIGluZmxpZ2h0MCByZXF1ZXN0IGRpZCBub3QgcmVwb3J0IC1FSU9cbiIpOworCQllcnIg
PSAtRUlOVkFMOworCQlnb3RvIG91dDsKKwl9CisKK291dDoKKwlpOTE1X3JlcXVlc3RfcHV0KHJx
KTsKKwlpZiAoaWd0X2xpdmVfdGVzdF9lbmQoJnQpKQorCQllcnIgPSAtRUlPOworCXJldHVybiBl
cnI7Cit9CisKK3N0YXRpYyBpbnQgX19jYW5jZWxfYWN0aXZlMShzdHJ1Y3QgbGl2ZV9wcmVlbXB0
X2NhbmNlbCAqYXJnKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxWzJdID0ge307CisJc3Ry
dWN0IGlndF9saXZlX3Rlc3QgdDsKKwlpbnQgZXJyOworCisJLyogUHJlZW1wdCBjYW5jZWwgb2Yg
RUxTUDEgKi8KKwlHRU1fVFJBQ0UoIiVzKCVzKVxuIiwgX19mdW5jX18sIGFyZy0+ZW5naW5lLT5u
YW1lKTsKKwlpZiAoaWd0X2xpdmVfdGVzdF9iZWdpbigmdCwgYXJnLT5lbmdpbmUtPmk5MTUsCisJ
CQkJX19mdW5jX18sIGFyZy0+ZW5naW5lLT5uYW1lKSkKKwkJcmV0dXJuIC1FSU87CisKKwljbGVh
cl9iaXQoQ09OVEVYVF9CQU5ORUQsICZhcmctPmEuY3R4LT5mbGFncyk7CisJcnFbMF0gPSBzcGlu
bmVyX2NyZWF0ZV9yZXF1ZXN0KCZhcmctPmEuc3BpbiwKKwkJCQkgICAgICAgYXJnLT5hLmN0eCwg
YXJnLT5lbmdpbmUsCisJCQkJICAgICAgIE1JX05PT1ApOyAvKiBubyBwcmVlbXB0aW9uICovCisJ
aWYgKElTX0VSUihycVswXSkpCisJCXJldHVybiBQVFJfRVJSKHJxWzBdKTsKKworCWk5MTVfcmVx
dWVzdF9nZXQocnFbMF0pOworCWk5MTVfcmVxdWVzdF9hZGQocnFbMF0pOworCWlmICghaWd0X3dh
aXRfZm9yX3NwaW5uZXIoJmFyZy0+YS5zcGluLCBycVswXSkpIHsKKwkJZXJyID0gLUVJTzsKKwkJ
Z290byBvdXQ7CisJfQorCisJY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5iLmN0eC0+
ZmxhZ3MpOworCXJxWzFdID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5iLnNwaW4sCisJ
CQkJICAgICAgIGFyZy0+Yi5jdHgsIGFyZy0+ZW5naW5lLAorCQkJCSAgICAgICBNSV9BUkJfQ0hF
Q0spOworCWlmIChJU19FUlIocnFbMV0pKSB7CisJCWVyciA9IFBUUl9FUlIocnFbMV0pOworCQln
b3RvIG91dDsKKwl9CisKKwlpOTE1X3JlcXVlc3RfZ2V0KHJxWzFdKTsKKwllcnIgPSBpOTE1X3Jl
cXVlc3RfYXdhaXRfZG1hX2ZlbmNlKHJxWzFdLCAmcnFbMF0tPmZlbmNlKTsKKwlpOTE1X3JlcXVl
c3RfYWRkKHJxWzFdKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dDsKKworCWk5MTVfZ2VtX2NvbnRl
eHRfc2V0X2Jhbm5lZChhcmctPmIuY3R4KTsKKwllcnIgPSBpbnRlbF9lbmdpbmVfcHVsc2UoYXJn
LT5lbmdpbmUpOworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJaWd0X3NwaW5uZXJfZW5kKCZh
cmctPmEuc3Bpbik7CisJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxWzFdLCAwLCBIWiAvIDUpIDwg
MCkgeworCQllcnIgPSAtRUlPOworCQlnb3RvIG91dDsKKwl9CisKKwlpZiAocnFbMF0tPmZlbmNl
LmVycm9yICE9IDApIHsKKwkJcHJfZXJyKCJOb3JtYWwgaW5mbGlnaHQwIHJlcXVlc3QgZGlkIG5v
dCBjb21wbGV0ZVxuIik7CisJCWVyciA9IC1FSU5WQUw7CisJCWdvdG8gb3V0OworCX0KKworCWlm
IChycVsxXS0+ZmVuY2UuZXJyb3IgIT0gLUVJTykgeworCQlwcl9lcnIoIkNhbmNlbGxlZCBpbmZs
aWdodDEgcmVxdWVzdCBkaWQgbm90IHJlcG9ydCAtRUlPXG4iKTsKKwkJZXJyID0gLUVJTlZBTDsK
KwkJZ290byBvdXQ7CisJfQorCitvdXQ6CisJaTkxNV9yZXF1ZXN0X3B1dChycVsxXSk7CisJaTkx
NV9yZXF1ZXN0X3B1dChycVswXSk7CisJaWYgKGlndF9saXZlX3Rlc3RfZW5kKCZ0KSkKKwkJZXJy
ID0gLUVJTzsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IF9fY2FuY2VsX3F1ZXVlZChz
dHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxWzNdID0ge307CisJc3RydWN0IGlndF9saXZlX3Rlc3QgdDsKKwlpbnQgZXJyOworCisJLyog
RnVsbCBFTFNQIGFuZCBvbmUgaW4gdGhlIHdpbmdzICovCisJR0VNX1RSQUNFKCIlcyglcylcbiIs
IF9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFtZSk7CisJaWYgKGlndF9saXZlX3Rlc3RfYmVnaW4o
JnQsIGFyZy0+ZW5naW5lLT5pOTE1LAorCQkJCV9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFtZSkp
CisJCXJldHVybiAtRUlPOworCisJY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5hLmN0
eC0+ZmxhZ3MpOworCXJxWzBdID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5hLnNwaW4s
CisJCQkJICAgICAgIGFyZy0+YS5jdHgsIGFyZy0+ZW5naW5lLAorCQkJCSAgICAgICBNSV9BUkJf
Q0hFQ0spOworCWlmIChJU19FUlIocnFbMF0pKQorCQlyZXR1cm4gUFRSX0VSUihycVswXSk7CisK
KwlpOTE1X3JlcXVlc3RfZ2V0KHJxWzBdKTsKKwlpOTE1X3JlcXVlc3RfYWRkKHJxWzBdKTsKKwlp
ZiAoIWlndF93YWl0X2Zvcl9zcGlubmVyKCZhcmctPmEuc3BpbiwgcnFbMF0pKSB7CisJCWVyciA9
IC1FSU87CisJCWdvdG8gb3V0OworCX0KKworCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFy
Zy0+Yi5jdHgtPmZsYWdzKTsKKwlycVsxXSA9IGlndF9yZXF1ZXN0X2FsbG9jKGFyZy0+Yi5jdHgs
IGFyZy0+ZW5naW5lKTsKKwlpZiAoSVNfRVJSKHJxWzFdKSkgeworCQllcnIgPSBQVFJfRVJSKHJx
WzFdKTsKKwkJZ290byBvdXQ7CisJfQorCisJaTkxNV9yZXF1ZXN0X2dldChycVsxXSk7CisJZXJy
ID0gaTkxNV9yZXF1ZXN0X2F3YWl0X2RtYV9mZW5jZShycVsxXSwgJnJxWzBdLT5mZW5jZSk7CisJ
aTkxNV9yZXF1ZXN0X2FkZChycVsxXSk7CisJaWYgKGVycikKKwkJZ290byBvdXQ7CisKKwlycVsy
XSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+Yi5zcGluLAorCQkJCSAgICAgICBhcmct
PmEuY3R4LCBhcmctPmVuZ2luZSwKKwkJCQkgICAgICAgTUlfQVJCX0NIRUNLKTsKKwlpZiAoSVNf
RVJSKHJxWzJdKSkgeworCQllcnIgPSBQVFJfRVJSKHJxWzJdKTsKKwkJZ290byBvdXQ7CisJfQor
CisJaTkxNV9yZXF1ZXN0X2dldChycVsyXSk7CisJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X2Rt
YV9mZW5jZShycVsyXSwgJnJxWzFdLT5mZW5jZSk7CisJaTkxNV9yZXF1ZXN0X2FkZChycVsyXSk7
CisJaWYgKGVycikKKwkJZ290byBvdXQ7CisKKwlpOTE1X2dlbV9jb250ZXh0X3NldF9iYW5uZWQo
YXJnLT5hLmN0eCk7CisJZXJyID0gaW50ZWxfZW5naW5lX3B1bHNlKGFyZy0+ZW5naW5lKTsKKwlp
ZiAoZXJyKQorCQlnb3RvIG91dDsKKworCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycVsyXSwgMCwg
SFogLyA1KSA8IDApIHsKKwkJZXJyID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJaWYgKHJx
WzBdLT5mZW5jZS5lcnJvciAhPSAtRUlPKSB7CisJCXByX2VycigiQ2FuY2VsbGVkIGluZmxpZ2h0
MCByZXF1ZXN0IGRpZCBub3QgcmVwb3J0IC1FSU9cbiIpOworCQllcnIgPSAtRUlOVkFMOworCQln
b3RvIG91dDsKKwl9CisKKwlpZiAocnFbMV0tPmZlbmNlLmVycm9yICE9IDApIHsKKwkJcHJfZXJy
KCJOb3JtYWwgaW5mbGlnaHQxIHJlcXVlc3QgZGlkIG5vdCBjb21wbGV0ZVxuIik7CisJCWVyciA9
IC1FSU5WQUw7CisJCWdvdG8gb3V0OworCX0KKworCWlmIChycVsyXS0+ZmVuY2UuZXJyb3IgIT0g
LUVJTykgeworCQlwcl9lcnIoIkNhbmNlbGxlZCBxdWV1ZWQgcmVxdWVzdCBkaWQgbm90IHJlcG9y
dCAtRUlPXG4iKTsKKwkJZXJyID0gLUVJTlZBTDsKKwkJZ290byBvdXQ7CisJfQorCitvdXQ6CisJ
aTkxNV9yZXF1ZXN0X3B1dChycVsyXSk7CisJaTkxNV9yZXF1ZXN0X3B1dChycVsxXSk7CisJaTkx
NV9yZXF1ZXN0X3B1dChycVswXSk7CisJaWYgKGlndF9saXZlX3Rlc3RfZW5kKCZ0KSkKKwkJZXJy
ID0gLUVJTzsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IF9fY2FuY2VsX2hvc3RpbGUo
c3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycTsKKwlpbnQgZXJyOworCisJLyogUHJlZW1wdCBjYW5jZWwgbm9uLXByZWVtcHRpYmxlIHNw
aW5uZXIgaW4gRUxTUDAgKi8KKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQp
CisJCXJldHVybiAwOworCisJR0VNX1RSQUNFKCIlcyglcylcbiIsIF9fZnVuY19fLCBhcmctPmVu
Z2luZS0+bmFtZSk7CisJY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5hLmN0eC0+Zmxh
Z3MpOworCXJxID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5hLnNwaW4sCisJCQkJICAg
IGFyZy0+YS5jdHgsIGFyZy0+ZW5naW5lLAorCQkJCSAgICBNSV9OT09QKTsgLyogcHJlZW1wdGlv
biBkaXNhYmxlZCAqLworCWlmIChJU19FUlIocnEpKQorCQlyZXR1cm4gUFRSX0VSUihycSk7CisK
KwlpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKwlpZiAoIWln
dF93YWl0X2Zvcl9zcGlubmVyKCZhcmctPmEuc3BpbiwgcnEpKSB7CisJCWVyciA9IC1FSU87CisJ
CWdvdG8gb3V0OworCX0KKworCWk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChhcmctPmEuY3R4
KTsKKwllcnIgPSBpbnRlbF9lbmdpbmVfcHVsc2UoYXJnLT5lbmdpbmUpOyAvKiBmb3JjZSByZXNl
dCAqLworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJx
LCAwLCBIWiAvIDUpIDwgMCkgeworCQllcnIgPSAtRUlPOworCQlnb3RvIG91dDsKKwl9CisKKwlp
ZiAocnEtPmZlbmNlLmVycm9yICE9IC1FSU8pIHsKKwkJcHJfZXJyKCJDYW5jZWxsZWQgaW5mbGln
aHQwIHJlcXVlc3QgZGlkIG5vdCByZXBvcnQgLUVJT1xuIik7CisJCWVyciA9IC1FSU5WQUw7CisJ
CWdvdG8gb3V0OworCX0KKworb3V0OgorCWk5MTVfcmVxdWVzdF9wdXQocnEpOworCWlmIChpZ3Rf
Zmx1c2hfdGVzdChhcmctPmVuZ2luZS0+aTkxNSkpCisJCWVyciA9IC1FSU87CisJcmV0dXJuIGVy
cjsKK30KKworc3RhdGljIGludCBsaXZlX3ByZWVtcHRfY2FuY2VsKHZvaWQgKmFyZykKK3sKKwlz
dHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOworCXN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsIGRh
dGE7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisJaW50IGVyciA9IC1FTk9NRU07CisKKwkv
KgorCSAqIFRvIGNhbmNlbCBhbiBpbmZsaWdodCBjb250ZXh0LCB3ZSBuZWVkIHRvIGZpcnN0IHJl
bW92ZSBpdCBmcm9tIHRoZQorCSAqIEdQVS4gVGhhdCBzb3VuZHMgbGlrZSBwcmVlbXB0aW9uISBQ
bHVzIGEgbGl0dGxlIGJpdCBvZiBib29ra2VlcGluZy4KKwkgKi8KKworCWlmICghSEFTX0xPR0lD
QUxfUklOR19QUkVFTVBUSU9OKGd0LT5pOTE1KSkKKwkJcmV0dXJuIDA7CisKKwlpZiAocHJlZW1w
dF9jbGllbnRfaW5pdChndCwgJmRhdGEuYSkpCisJCXJldHVybiAtRU5PTUVNOworCWlmIChwcmVl
bXB0X2NsaWVudF9pbml0KGd0LCAmZGF0YS5iKSkKKwkJZ290byBlcnJfY2xpZW50X2E7CisKKwlm
b3JfZWFjaF9lbmdpbmUoZGF0YS5lbmdpbmUsIGd0LCBpZCkgeworCQlpZiAoIWludGVsX2VuZ2lu
ZV9oYXNfcHJlZW1wdGlvbihkYXRhLmVuZ2luZSkpCisJCQljb250aW51ZTsKKworCQllcnIgPSBf
X2NhbmNlbF9hY3RpdmUwKCZkYXRhKTsKKwkJaWYgKGVycikKKwkJCWdvdG8gZXJyX3dlZGdlZDsK
KworCQllcnIgPSBfX2NhbmNlbF9hY3RpdmUxKCZkYXRhKTsKKwkJaWYgKGVycikKKwkJCWdvdG8g
ZXJyX3dlZGdlZDsKKworCQllcnIgPSBfX2NhbmNlbF9xdWV1ZWQoJmRhdGEpOworCQlpZiAoZXJy
KQorCQkJZ290byBlcnJfd2VkZ2VkOworCisJCWVyciA9IF9fY2FuY2VsX2hvc3RpbGUoJmRhdGEp
OworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfd2VkZ2VkOworCX0KKworCWVyciA9IDA7CitlcnJf
Y2xpZW50X2I6CisJcHJlZW1wdF9jbGllbnRfZmluaSgmZGF0YS5iKTsKK2Vycl9jbGllbnRfYToK
KwlwcmVlbXB0X2NsaWVudF9maW5pKCZkYXRhLmEpOworCXJldHVybiBlcnI7CisKK2Vycl93ZWRn
ZWQ6CisJR0VNX1RSQUNFX0RVTVAoKTsKKwlpZ3Rfc3Bpbm5lcl9lbmQoJmRhdGEuYi5zcGluKTsK
KwlpZ3Rfc3Bpbm5lcl9lbmQoJmRhdGEuYS5zcGluKTsKKwlpbnRlbF9ndF9zZXRfd2VkZ2VkKGd0
KTsKKwlnb3RvIGVycl9jbGllbnRfYjsKK30KKwogc3RhdGljIGludCBsaXZlX3N1cHByZXNzX3Nl
bGZfcHJlZW1wdCh2b2lkICphcmcpCiB7CiAJc3RydWN0IGludGVsX2d0ICpndCA9IGFyZzsKQEAg
LTI3MDIsNiArMzAyMiw3IEBAIGludCBpbnRlbF9leGVjbGlzdHNfbGl2ZV9zZWxmdGVzdHMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCVNVQlRFU1QobGl2ZV9wcmVlbXB0KSwKIAkJ
U1VCVEVTVChsaXZlX2xhdGVfcHJlZW1wdCksCiAJCVNVQlRFU1QobGl2ZV9ub3ByZWVtcHQpLAor
CQlTVUJURVNUKGxpdmVfcHJlZW1wdF9jYW5jZWwpLAogCQlTVUJURVNUKGxpdmVfc3VwcHJlc3Nf
c2VsZl9wcmVlbXB0KSwKIAkJU1VCVEVTVChsaXZlX3N1cHByZXNzX3dhaXRfcHJlZW1wdCksCiAJ
CVNVQlRFU1QobGl2ZV9jaGFpbl9wcmVlbXB0KSwKLS0gCjIuMjQuMC5yYzAKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

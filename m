Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3EAB13D36D5
	for <lists+intel-gfx@lfdr.de>; Fri, 23 Jul 2021 10:35:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6A8936EB69;
	Fri, 23 Jul 2021 08:35:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mail-ej1-x62c.google.com (mail-ej1-x62c.google.com
 [IPv6:2a00:1450:4864:20::62c])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 952DC6EB69
 for <intel-gfx@lists.freedesktop.org>; Fri, 23 Jul 2021 08:35:08 +0000 (UTC)
Received: by mail-ej1-x62c.google.com with SMTP id v21so2638362ejg.1
 for <intel-gfx@lists.freedesktop.org>; Fri, 23 Jul 2021 01:35:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ffwll.ch; s=google;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=f4bn887uqWohEHf9tJtivGZU2B/OMsh89fDHBPHgucE=;
 b=GquE+FLUdLXKgierMdGxD5QMQi0V+Obx7uAPWKNMKtR8U7jSzEeBBmypZ9lVlQJ810
 r0uv2HgmXlbD6jQv2f1Cb2xRWp5HSy43Xe4LpB0vWSbwvVXHcSQi998uVbXlonToXZQg
 EABnUR4/Gkl2q8a3qAwJ1HzjckGxfO5Ezzug4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=f4bn887uqWohEHf9tJtivGZU2B/OMsh89fDHBPHgucE=;
 b=oxlu/pZNWmwTHPNsEcsmo9uxzT7VLidrHj24qGOHY9BSB4P6wLJ0mCGZJt6sSS1RAo
 8A6FDctRL+qmoQerWi/+VSDMGCkcld3Vv+KMioVynZVifhnBj1XgvXhFmBU1/CkZaASP
 LsS36kG/YPwdFzQkRj+1OdaJmEv+CErVewTS/TM6HwntNo/OcP21mLdCC+X2y5Hu105x
 xhUlvh/w0O8gAgdD2AHH45vhQtx9Cn5cYMnP5UaM0CGB7J2NLOaS07dp+ipfxr9OO/Pt
 ZCwZW+aXLYTdt9IlgpUDB9VjmcaMizrSfqt9vIwj/QkNYypalJsfMwXc9MzWZ+JrUQrX
 sd+g==
X-Gm-Message-State: AOAM532jXisnUbQb1isX0sQNhEm22IdKHFlKWB1baLCP7sE0gDTVSggU
 GkwSbNMADLtb+lb2Ruj1/TXKgA==
X-Google-Smtp-Source: ABdhPJyo99sg1Z/X7gvWndHlguL4DGLiUMKtoBa59X7cFNiRAsgU/yHatubV3eSW7QcgvOl9eeCX7Q==
X-Received: by 2002:a17:906:5509:: with SMTP id
 r9mr3798819ejp.74.1627029307206; 
 Fri, 23 Jul 2021 01:35:07 -0700 (PDT)
Received: from phenom.ffwll.local ([2a02:168:57f4:0:efd0:b9e5:5ae6:c2fa])
 by smtp.gmail.com with ESMTPSA id s26sm10237758ejv.87.2021.07.23.01.35.06
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 23 Jul 2021 01:35:06 -0700 (PDT)
From: Daniel Vetter <daniel.vetter@ffwll.ch>
To: DRI Development <dri-devel@lists.freedesktop.org>
Date: Fri, 23 Jul 2021 10:34:55 +0200
Message-Id: <20210723083457.696939-1-daniel.vetter@ffwll.ch>
X-Mailer: git-send-email 2.32.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/3] drm/plane: remove
 drm_helper_get_plane_damage_clips
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: David Airlie <airlied@linux.ie>, Daniel Vetter <daniel.vetter@ffwll.ch>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 Daniel Vetter <daniel.vetter@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQncyBub3QgdXNlZC4gRHJpdmVycyBzaG91bGQgaW5zdGVhZCB1c2UgdGhlIGhlbHBlcnMgYW55
d2F5LgoKQ3VycmVudGx5IGJvdGggdmJveCBhbmQgaTkxNSBoYW5kLXJvbGwgdGhpcyBhbmQgaXQn
cyBub3QgdGhlIGdyZWF0ZXN0Lgp2Ym94IGxvb2tzIGJ1Z2d5LCBhbmQgaTkxNSBkb2VzIGEgYml0
IG11Y2ggdGhhdCBoZWxwZXJzIHdvdWxkIHRha2UKY2FyZSBvZiBJIHRoaW5rLgoKQWxzbyBpbXBy
b3ZlIHRoZSBrZXJuZWxkb2NzIHdoaWxlIHdlJ3JlIGF0IGl0LgoKUmV2aWV3ZWQtYnk6IEpvc8Op
IFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPgpDYzogVmlsbGUgU3lyasOk
bMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KQ2M6IEd3YW4tZ3llb25nIE11biA8
Z3dhbi1neWVvbmcubXVuQGludGVsLmNvbT4KQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpv
c2Uuc291emFAaW50ZWwuY29tPgpDYzogSGFucyBkZSBHb2VkZSA8aGRlZ29lZGVAcmVkaGF0LmNv
bT4KU2lnbmVkLW9mZi1ieTogRGFuaWVsIFZldHRlciA8ZGFuaWVsLnZldHRlckBpbnRlbC5jb20+
CkNjOiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwuY29t
PgpDYzogTWF4aW1lIFJpcGFyZCA8bXJpcGFyZEBrZXJuZWwub3JnPgpDYzogVGhvbWFzIFppbW1l
cm1hbm4gPHR6aW1tZXJtYW5uQHN1c2UuZGU+CkNjOiBEYXZpZCBBaXJsaWUgPGFpcmxpZWRAbGlu
dXguaWU+CkNjOiBEYW5pZWwgVmV0dGVyIDxkYW5pZWxAZmZ3bGwuY2g+Ci0tLQogZHJpdmVycy9n
cHUvZHJtL2RybV9kYW1hZ2VfaGVscGVyLmMgfCAgMiArLQogaW5jbHVkZS9kcm0vZHJtX2RhbWFn
ZV9oZWxwZXIuaCAgICAgfCAxNyAtLS0tLS0tLS0tLS0tLS0tLQogaW5jbHVkZS9kcm0vZHJtX3Bs
YW5lLmggICAgICAgICAgICAgfCAxMCArKysrKysrLS0tCiBpbmNsdWRlL2RybS9kcm1fcmVjdC5o
ICAgICAgICAgICAgICB8ICAzICsrKwogNCBmaWxlcyBjaGFuZ2VkLCAxMSBpbnNlcnRpb25zKCsp
LCAyMSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX2RhbWFn
ZV9oZWxwZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fZGFtYWdlX2hlbHBlci5jCmluZGV4IDNh
NDEyNmRjMjUyMC4uZWI2OWI3MTIzYWY1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vZHJt
X2RhbWFnZV9oZWxwZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIu
YwpAQCAtMjgyLDcgKzI4Miw3IEBAIGRybV9hdG9taWNfaGVscGVyX2RhbWFnZV9pdGVyX2luaXQo
c3RydWN0IGRybV9hdG9taWNfaGVscGVyX2RhbWFnZV9pdGVyICppdGVyLAogCWlmICghc3RhdGUg
fHwgIXN0YXRlLT5jcnRjIHx8ICFzdGF0ZS0+ZmIgfHwgIXN0YXRlLT52aXNpYmxlKQogCQlyZXR1
cm47CiAKLQlpdGVyLT5jbGlwcyA9IGRybV9oZWxwZXJfZ2V0X3BsYW5lX2RhbWFnZV9jbGlwcyhz
dGF0ZSk7CisJaXRlci0+Y2xpcHMgPSAoc3RydWN0IGRybV9yZWN0ICopZHJtX3BsYW5lX2dldF9k
YW1hZ2VfY2xpcHMoc3RhdGUpOwogCWl0ZXItPm51bV9jbGlwcyA9IGRybV9wbGFuZV9nZXRfZGFt
YWdlX2NsaXBzX2NvdW50KHN0YXRlKTsKIAogCS8qIFJvdW5kIGRvd24gZm9yIHgxL3kxIGFuZCBy
b3VuZCB1cCBmb3IgeDIveTIgdG8gY2F0Y2ggYWxsIHBpeGVscyAqLwpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9kcm0vZHJtX2RhbWFnZV9oZWxwZXIuaCBiL2luY2x1ZGUvZHJtL2RybV9kYW1hZ2VfaGVs
cGVyLmgKaW5kZXggNDBjMzRhNWJmMTQ5Li4xYWU4YmNlNmE1Y2UgMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvZHJtL2RybV9kYW1hZ2VfaGVscGVyLmgKKysrIGIvaW5jbHVkZS9kcm0vZHJtX2RhbWFnZV9o
ZWxwZXIuaApAQCAtODIsMjEgKzgyLDQgQEAgYm9vbCBkcm1fYXRvbWljX2hlbHBlcl9kYW1hZ2Vf
bWVyZ2VkKGNvbnN0IHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKm9sZF9zdGF0ZSwKIAkJCQkgICAg
IHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKnN0YXRlLAogCQkJCSAgICAgc3RydWN0IGRybV9yZWN0
ICpyZWN0KTsKIAotLyoqCi0gKiBkcm1faGVscGVyX2dldF9wbGFuZV9kYW1hZ2VfY2xpcHMgLSBS
ZXR1cm5zIGRhbWFnZSBjbGlwcyBpbiAmZHJtX3JlY3QuCi0gKiBAc3RhdGU6IFBsYW5lIHN0YXRl
LgotICoKLSAqIFJldHVybnMgcGxhbmUgZGFtYWdlIHJlY3RhbmdsZXMgaW4gaW50ZXJuYWwgJmRy
bV9yZWN0LiBDdXJyZW50bHkgJmRybV9yZWN0Ci0gKiBjYW4gYmUgb2J0YWluZWQgYnkgc2ltcGx5
IHR5cGVjYXN0aW5nICZkcm1fbW9kZV9yZWN0LiBUaGlzIGlzIGJlY2F1c2UgYm90aAotICogYXJl
IHNpZ25lZCAzMiBhbmQgZHVyaW5nIGRybV9hdG9taWNfY2hlY2tfb25seSgpIGl0IGlzIHZlcmlm
aWVkIHRoYXQgZGFtYWdlCi0gKiBjbGlwcyBhcmUgaW5zaWRlIGZiLgotICoKLSAqIFJldHVybjog
Q2xpcHMgaW4gcGxhbmUgZmJfZGFtYWdlX2NsaXBzIGJsb2IgcHJvcGVydHkuCi0gKi8KLXN0YXRp
YyBpbmxpbmUgc3RydWN0IGRybV9yZWN0ICoKLWRybV9oZWxwZXJfZ2V0X3BsYW5lX2RhbWFnZV9j
bGlwcyhjb25zdCBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpzdGF0ZSkKLXsKLQlyZXR1cm4gKHN0
cnVjdCBkcm1fcmVjdCAqKWRybV9wbGFuZV9nZXRfZGFtYWdlX2NsaXBzKHN0YXRlKTsKLX0KLQog
I2VuZGlmCmRpZmYgLS1naXQgYS9pbmNsdWRlL2RybS9kcm1fcGxhbmUuaCBiL2luY2x1ZGUvZHJt
L2RybV9wbGFuZS5oCmluZGV4IDEyOTQ2MTBlODRmNC4uN2Y3ZDUxNDgzMTBjIDEwMDY0NAotLS0g
YS9pbmNsdWRlL2RybS9kcm1fcGxhbmUuaAorKysgYi9pbmNsdWRlL2RybS9kcm1fcGxhbmUuaApA
QCAtMTg2LDYgKzE4Niw5IEBAIHN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgewogCSAqIHNpbmNlIGxh
c3QgcGxhbmUgdXBkYXRlKSBhcyBhbiBhcnJheSBvZiAmZHJtX21vZGVfcmVjdCBpbiBmcmFtZWJ1
ZmZlcgogCSAqIGNvb2RpbmF0ZXMgb2YgdGhlIGF0dGFjaGVkIGZyYW1lYnVmZmVyLiBOb3RlIHRo
YXQgdW5saWtlIHBsYW5lIHNyYywKIAkgKiBkYW1hZ2UgY2xpcHMgYXJlIG5vdCBpbiAxNi4xNiBm
aXhlZCBwb2ludC4KKwkgKgorCSAqIFNlZSBkcm1fcGxhbmVfZ2V0X2RhbWFnZV9jbGlwcygpIGFu
ZAorCSAqIGRybV9wbGFuZV9nZXRfZGFtYWdlX2NsaXBzX2NvdW50KCkgZm9yIGFjY2Vzc2luZyB0
aGVzZS4KIAkgKi8KIAlzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmZiX2RhbWFnZV9jbGlwczsK
IApAQCAtOTE0LDkgKzkxNywxMCBAQCBkcm1fcGxhbmVfZ2V0X2RhbWFnZV9jbGlwc19jb3VudChj
b25zdCBzdHJ1Y3QgZHJtX3BsYW5lX3N0YXRlICpzdGF0ZSkKICAqIGRybV9wbGFuZV9nZXRfZGFt
YWdlX2NsaXBzIC0gUmV0dXJucyBkYW1hZ2UgY2xpcHMuCiAgKiBAc3RhdGU6IFBsYW5lIHN0YXRl
LgogICoKLSAqIE5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdWFwaSB0eXBlICZkcm1f
bW9kZV9yZWN0LiBEcml2ZXJzIG1pZ2h0Ci0gKiBpbnN0ZWFkIGJlIGludGVyZXN0ZWQgaW4gaW50
ZXJuYWwgJmRybV9yZWN0IHdoaWNoIGNhbiBiZSBvYnRhaW5lZCBieSBjYWxsaW5nCi0gKiBkcm1f
aGVscGVyX2dldF9wbGFuZV9kYW1hZ2VfY2xpcHMoKS4KKyAqIE5vdGUgdGhhdCB0aGlzIGZ1bmN0
aW9uIHJldHVybnMgdWFwaSB0eXBlICZkcm1fbW9kZV9yZWN0LiBEcml2ZXJzIG1pZ2h0IHdhbnQK
KyAqIHRvIHVzZSB0aGUgaGVscGVyIGZ1bmN0aW9ucyBkcm1fYXRvbWljX2hlbHBlcl9kYW1hZ2Vf
aXRlcl9pbml0KCkgYW5kCisgKiBkcm1fYXRvbWljX2hlbHBlcl9kYW1hZ2VfaXRlcl9uZXh0KCkg
b3IgZHJtX2F0b21pY19oZWxwZXJfZGFtYWdlX21lcmdlZCgpIGlmCisgKiB0aGUgZHJpdmVyIGNh
biBvbmx5IGhhbmRsZSBhIHNpbmdsZSBkYW1hZ2UgcmVnaW9uIGF0IG1vc3QuCiAgKgogICogUmV0
dXJuOiBEYW1hZ2UgY2xpcHMgaW4gcGxhbmUgZmJfZGFtYWdlX2NsaXBzIGJsb2IgcHJvcGVydHku
CiAgKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2RybV9yZWN0LmggYi9pbmNsdWRlL2RybS9k
cm1fcmVjdC5oCmluZGV4IDM5ZjJkZWVlNzA5Yy4uNmY2ZTE5YmQ0ZGFjIDEwMDY0NAotLS0gYS9p
bmNsdWRlL2RybS9kcm1fcmVjdC5oCisrKyBiL2luY2x1ZGUvZHJtL2RybV9yZWN0LmgKQEAgLTM5
LDYgKzM5LDkgQEAKICAqIEB4MjogaG9yaXpvbnRhbCBlbmRpbmcgY29vcmRpbmF0ZSAoZXhjbHVz
aXZlKQogICogQHkxOiB2ZXJ0aWNhbCBzdGFydGluZyBjb29yZGluYXRlIChpbmNsdXNpdmUpCiAg
KiBAeTI6IHZlcnRpY2FsIGVuZGluZyBjb29yZGluYXRlIChleGNsdXNpdmUpCisgKgorICogTm90
ZSB0aGF0IHRoaXMgbXVzdCBtYXRjaCB0aGUgbGF5b3V0IG9mIHN0cnVjdCBkcm1fbW9kZV9yZWN0
IG9yIHRoZSBkYW1hZ2UKKyAqIGhlbHBlcnMgbGlrZSBkcm1fYXRvbWljX2hlbHBlcl9kYW1hZ2Vf
aXRlcl9pbml0KCkgYnJlYWsuCiAgKi8KIHN0cnVjdCBkcm1fcmVjdCB7CiAJaW50IHgxLCB5MSwg
eDIsIHkyOwotLSAKMi4zMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVz
a3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9p
bnRlbC1nZngK

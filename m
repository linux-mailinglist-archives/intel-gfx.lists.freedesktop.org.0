Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 304FAAC21BF
	for <lists+intel-gfx@lfdr.de>; Fri, 23 May 2025 13:06:28 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 574CF10E2C1;
	Fri, 23 May 2025 11:06:24 +0000 (UTC)
Authentication-Results: gabe.freedesktop.org;
	dkim=pass (2048-bit key; unprotected) header.d=intel.com header.i=@intel.com header.b="TAn2yG2d";
	dkim-atps=neutral
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.10])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0FC7C10E1FE;
 Fri, 23 May 2025 11:06:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1747998382; x=1779534382;
 h=from:to:cc:subject:date:message-id:mime-version:
 content-transfer-encoding;
 bh=mS45YAjtNh7n3yb1ZcdtSKB7mPVzvhWv9MFMIRZq3tI=;
 b=TAn2yG2dOX2i4MRKa8QCu+TDPelbWum9ff2XAsxHQ3CZv2bDDlEBK57r
 UU/JgKblDKssiXahD6BW49qq1CopdCyQK27T6EHR7/r2HhmAxYvEFD8gS
 AHpokQ5D6zzXbUZg/lnx7Ld9l3mkW5Nw9rfwOsOllD6wZhkqqIUALYhdi
 8+MemogaluaqVMheqYqaOSMxQg5vMD8e3o4ePv+QnWBiKNjjxe256xxxg
 AWZTd4wF421nfRnfyV4kZhNP/g0URf0zJW4N7uaE/WS636fS7jSIM/CEi
 YCLM0ryZWTUI4FKX8uAxcLnfSkEtI6hYsQrV0/r/tG8kj9OLsQVD7OthM Q==;
X-CSE-ConnectionGUID: GLkFvn12SoW/TYUD3NxiYw==
X-CSE-MsgGUID: qruLCNOKTwK2I3R0hRil8g==
X-IronPort-AV: E=McAfee;i="6700,10204,11441"; a="67463906"
X-IronPort-AV: E=Sophos;i="6.15,308,1739865600"; d="scan'208";a="67463906"
Received: from fmviesa002.fm.intel.com ([10.60.135.142])
 by orvoesa102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 23 May 2025 04:06:14 -0700
X-CSE-ConnectionGUID: KaA5nbSAT9+/vTzAt+WX2Q==
X-CSE-MsgGUID: PbxBmX+TTPyvspdntw/ldg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.15,308,1739865600"; d="scan'208";a="164341779"
Received: from ettammin-mobl2.ger.corp.intel.com (HELO jhogande-mobl1..)
 ([10.245.244.108])
 by fmviesa002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 23 May 2025 04:06:12 -0700
From: =?UTF-8?q?Jouni=20H=C3=B6gander?= <jouni.hogander@intel.com>
To: intel-gfx@lists.freedesktop.org,
	intel-xe@lists.freedesktop.org
Cc: =?UTF-8?q?Jouni=20H=C3=B6gander?= <jouni.hogander@intel.com>
Subject: [PATCH v3 0/4] Use trans push mechanism to generate frame change event
Date: Fri, 23 May 2025 14:05:51 +0300
Message-ID: <20250523110555.3494901-1-jouni.hogander@intel.com>
X-Mailer: git-send-email 2.43.0
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Content-Transfer-Encoding: 8bit
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Currently we are using "automatic" frame change event generation. The
event is generated by any access to plane or pipe registers.

We have option to use "PSR PR Frame Change Enable" bit in TRANS_PUSH
register to enable frame change event generation only when doing trans
push. When this bit is set "automatic" frame change event generation
doesn't work anymore. Benfit from this is more controled updates send
by PSR HW.

This patch set is taking trans push mechanism into use.

v3:
  - use rmw when enabling disabling transh push for PSR or VRR
  - rely on crtc_state->has_psr/has_vrr to keep trans push enabled
  - modify frontbuffer flush/invalidate to use disable/enable also for
    SU/SF on recent platforms.
  - send push before waiting for vblank
v2: implement intel_vrr_trans_push_enabled_set_clear and use that
    instead of rmw

Jouni HÃ¶gander (4):
  drm/i915/psr: Do not trigger Frame Change events from frontbuffer
    flush
  drm/i915/display: Send push before waiting vblanks
  drm/i915/psr: Add TRANS_PUSH register bit definition for PSR
  drm/i915/vrr: Use TRANS_PUSH mechanism for PSR frame change

 drivers/gpu/drm/i915/display/intel_display.c  |  3 +-
 drivers/gpu/drm/i915/display/intel_psr.c      | 24 +++++++++++---
 drivers/gpu/drm/i915/display/intel_vrr.c      | 33 ++++++++++++++-----
 drivers/gpu/drm/i915/display/intel_vrr.h      |  1 +
 drivers/gpu/drm/i915/display/intel_vrr_regs.h |  1 +
 5 files changed, 46 insertions(+), 16 deletions(-)

-- 
2.43.0


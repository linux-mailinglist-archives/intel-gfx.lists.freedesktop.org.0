Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CE7EFA1E00
	for <lists+intel-gfx@lfdr.de>; Thu, 29 Aug 2019 16:54:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B66928926F;
	Thu, 29 Aug 2019 14:54:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 11A7E6E14A;
 Thu, 29 Aug 2019 14:54:31 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18305836-1500050 
 for multiple; Thu, 29 Aug 2019 15:54:18 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: igt-dev@lists.freedesktop.org
Date: Thu, 29 Aug 2019 15:54:16 +0100
Message-Id: <20190829145416.31626-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190829145416.31626-1-chris@chris-wilson.co.uk>
References: <20190829145416.31626-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 2/2] lib/intel_mmio: add additional api
 for multiple devices
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>, intel-gfx@lists.freedesktop.org,
 =?UTF-8?q?Zbigniew=20Kempczy=C5=84ski?= <zbigniew.kempczynski@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogRGFuaWVsIE1yenlnbG9kIDxkYW5pZWwudC5tcnp5Z2xvZEBpbnRlbC5jb20+CgpMaWJy
YXJ5ICB3YXMgbGltaXRlZCBmb3IgcmVhZGluZyByZWdpc3RlcnMgZm9yIG9ubHkKb25lIGRldmlj
ZSBhdCBhIHRpbWUgaW4gaWd0IHRlc3RzLgpDaGFuZ2VzIGluIHRoaXMgcGF0Y2ggZ2l2ZSBhcyBv
cG9ydHVuaXR5IHRvIHRlc3QgbXVsdGlwbGUgZGV2aWNlcyBpbgp0aGUgc2FtZSB0aW1lLgoKdjg6
IHBhY2sgYW5kIHJlbmFtZSBzdHJ1Y3R1cmUsIHJlbW92ZSB1bm5lY2Vzc2FyeSBmaWVsZAp2Nzog
cmVtb3ZlIHVubmVjZXNzYXJ5IGNvZGUKdjY6IFJld29yZCBwYXRjaC4gQ29zbWV0aWMgY2hhbmdl
cy4KCkNjOiBBbnRvbmlvIEFyZ2Vuemlhbm8gPGFudG9uaW8uYXJnZW56aWFub0BpbnRlbC5jb20+
CkNjOiBEYW5pZWxlIFNwdXJpbyBDZXJhb2xvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwu
Y29tPgpDYzogS2F0YXJ6eW5hIERlYyA8a2F0YXJ6eW5hLmRlY0BpbnRlbC5jb20+CkNjOiBDaHJp
cyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IFBldHJpIExhdHZhbGEgPHBl
dHJpLmxhdHZhbGFAaW50ZWwuY29tPgpDYzogWmJpZ25pZXcgS2VtcGN6ecWEc2tpIDx6Ymlnbmll
dy5rZW1wY3p5bnNraUBpbnRlbC5jb20+CkNjOiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFAaW50
ZWwuY29tPgoKU2lnbmVkLW9mZi1ieTogRGFuaWVsIE1yenlnbG9kIDxkYW5pZWwudC5tcnp5Z2xv
ZEBpbnRlbC5jb20+Ci0tLQogYmVuY2htYXJrcy9nZW1fbGF0ZW5jeS5jICAgICAgfCAgIDMgKy0K
IGJlbmNobWFya3MvZ2VtX3dzaW0uYyAgICAgICAgIHwgICAzICstCiBsaWIvaW50ZWxfaW8uaCAg
ICAgICAgICAgICAgICB8ICA4MSArKysrKysrKysrKysrKystLS0tLS0tLS0tCiBsaWIvaW50ZWxf
aW9zZi5jICAgICAgICAgICAgICB8ICA3NCArKysrKysrKysrKysrLS0tLS0tLS0tLQogbGliL2lu
dGVsX21taW8uYyAgICAgICAgICAgICAgfCAxMTAgKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0t
LS0tLS0tLQogdGVzdHMvaTkxNS9nZW1fZXhlY19sYXRlbmN5LmMgfCAgIDQgKy0KIHRlc3RzL2k5
MTUvZ2VtX2V4ZWNfcGFyc2UuYyAgIHwgIDEyICsrLS0KIHRlc3RzL2k5MTUvZ2VtX3dvcmthcm91
bmRzLmMgIHwgICAzICstCiB0ZXN0cy9pOTE1L2k5MTVfcG1fbHBzcC5jICAgICB8ICAgNiArLQog
dG9vbHMvaW50ZWxfYXVkaW9fZHVtcC5jICAgICAgfCAgIDYgKy0KIHRvb2xzL2ludGVsX2JhY2ts
aWdodC5jICAgICAgIHwgICAzICstCiB0b29scy9pbnRlbF9kaXNwbGF5X3BvbGxlci5jICB8ICAg
NSArLQogdG9vbHMvaW50ZWxfZm9yY2V3YWtlZC5jICAgICAgfCAgMTUgKystLS0KIHRvb2xzL2lu
dGVsX2dwdV90aW1lLmMgICAgICAgIHwgICAzICstCiB0b29scy9pbnRlbF9pbmZvZnJhbWVzLmMg
ICAgICB8ICAgNSArLQogdG9vbHMvaW50ZWxfbDNfcGFyaXR5LmMgICAgICAgfCAgMTEgKystLQog
dG9vbHMvaW50ZWxfbGlkLmMgICAgICAgICAgICAgfCAgIDMgKy0KIHRvb2xzL2ludGVsX3BhbmVs
X2ZpdHRlci5jICAgIHwgICA1ICstCiB0b29scy9pbnRlbF9wZXJmX2NvdW50ZXJzLmMgICB8ICAx
MCArKy0tCiB0b29scy9pbnRlbF9yZWcuYyAgICAgICAgICAgICB8ICAyMyArKystLS0tCiB0b29s
cy9pbnRlbF9yZWdfY2hlY2tlci5jICAgICB8ICAgMyArLQogdG9vbHMvaW50ZWxfd2F0ZXJtYXJr
LmMgICAgICAgfCAgNDIgKysrKysrKy0tLS0tLQogMjIgZmlsZXMgY2hhbmdlZCwgMjQzIGluc2Vy
dGlvbnMoKyksIDE4NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9iZW5jaG1hcmtzL2dlbV9s
YXRlbmN5LmMgYi9iZW5jaG1hcmtzL2dlbV9sYXRlbmN5LmMKaW5kZXggYzNmYzRiZjBmLi4wZmM0
YjA1ZWEgMTAwNjQ0Ci0tLSBhL2JlbmNobWFya3MvZ2VtX2xhdGVuY3kuYworKysgYi9iZW5jaG1h
cmtzL2dlbV9sYXRlbmN5LmMKQEAgLTU1LDYgKzU1LDcgQEAKIHN0YXRpYyBpbnQgZG9uZTsKIHN0
YXRpYyBpbnQgZmQ7CiBzdGF0aWMgdm9sYXRpbGUgdWludDMyX3QgKnRpbWVzdGFtcF9yZWc7Citz
dGF0aWMgc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAKICNkZWZpbmUgUkVHKHgp
ICh2b2xhdGlsZSB1aW50MzJfdCAqKSgodm9sYXRpbGUgY2hhciAqKWlndF9nbG9iYWxfbW1pbyAr
IHgpCiAjZGVmaW5lIFJFR19PRkZTRVQoeCkgKCh2b2xhdGlsZSBjaGFyICopKHgpIC0gKHZvbGF0
aWxlIGNoYXIgKilpZ3RfZ2xvYmFsX21taW8pCkBAIC00NTYsNyArNDU3LDcgQEAgc3RhdGljIGlu
dCBydW4oaW50IHNlY29uZHMsCiAJaWYgKGdlbiA8IDYpCiAJCXJldHVybiBJR1RfRVhJVF9TS0lQ
OyAvKiBOZWVkcyBCQ1MgdGltZXN0YW1wICovCiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5p
dChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCBmYWxzZSwgZmQpOworCWludGVsX3JlZ2lzdGVyX2Fj
Y2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVsX2dldF9wY2lfZGV2aWNlKCksIGZhbHNlLCBmZCk7
CiAKIAlpZiAoZ2VuID09IDYpCiAJCXRpbWVzdGFtcF9yZWcgPSBSRUcoUkNTX1RJTUVTVEFNUCk7
CmRpZmYgLS1naXQgYS9iZW5jaG1hcmtzL2dlbV93c2ltLmMgYi9iZW5jaG1hcmtzL2dlbV93c2lt
LmMKaW5kZXggYjhlMjJiM2Y2Li44N2Y4NzNiMGUgMTAwNjQ0Ci0tLSBhL2JlbmNobWFya3MvZ2Vt
X3dzaW0uYworKysgYi9iZW5jaG1hcmtzL2dlbV93c2ltLmMKQEAgLTIzOCw2ICsyMzgsNyBAQCBz
dHJ1Y3Qgd29ya2xvYWQKIAl9IGJ1c3lfYmFsYW5jZXI7CiB9OwogCitzdHJ1Y3QgaW50ZWxfbW1p
b19kYXRhIG1taW9fZGF0YTsKIHN0YXRpYyBjb25zdCB1bnNpZ25lZCBpbnQgbm9wX2NhbGlicmF0
aW9uX3VzID0gMTAwMDsKIHN0YXRpYyB1bnNpZ25lZCBsb25nIG5vcF9jYWxpYnJhdGlvbjsKIApA
QCAtMzA3MSw3ICszMDcyLDcgQEAgc3RhdGljIHZvaWQgaW5pdF9jbG9ja3Modm9pZCkKIAl1aW50
MzJfdCByY3Nfc3RhcnQsIHJjc19lbmQ7CiAJZG91YmxlIG92ZXJoZWFkLCB0OwogCi0JaW50ZWxf
cmVnaXN0ZXJfYWNjZXNzX2luaXQoaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwgZmFsc2UsIGZkKTsK
KwlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdCgmbW1pb19kYXRhLCBpbnRlbF9nZXRfcGNpX2Rl
dmljZSgpLCBmYWxzZSwgZmQpOwogCiAJaWYgKHZlcmJvc2UgPD0gMSkKIAkJcmV0dXJuOwpkaWZm
IC0tZ2l0IGEvbGliL2ludGVsX2lvLmggYi9saWIvaW50ZWxfaW8uaAppbmRleCA0OWFiMDhhYzku
LjFjZmU0ZmI2YiAxMDA2NDQKLS0tIGEvbGliL2ludGVsX2lvLmgKKysrIGIvbGliL2ludGVsX2lv
LmgKQEAgLTMwLDE3ICszMCw0MiBAQAogCiAjaW5jbHVkZSA8c3RkaW50Lmg+CiAjaW5jbHVkZSA8
cGNpYWNjZXNzLmg+CisjaW5jbHVkZSA8c3RkYm9vbC5oPgogCi0vKiByZWdpc3RlciBhY2Nlc3Mg
aGVscGVycyBmcm9tIGludGVsX21taW8uYyAqLwogZXh0ZXJuIHZvaWQgKmlndF9nbG9iYWxfbW1p
bzsKLXZvaWQgaW50ZWxfbW1pb191c2VfcGNpX2JhcihzdHJ1Y3QgcGNpX2RldmljZSAqcGNpX2Rl
dik7Ci12b2lkIGludGVsX21taW9fdXNlX2R1bXBfZmlsZShjaGFyICpmaWxlKTsKIAotaW50IGlu
dGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KHN0cnVjdCBwY2lfZGV2aWNlICpwY2lfZGV2LCBpbnQg
c2FmZSwgaW50IGZkKTsKLXZvaWQgaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2Zpbmkodm9pZCk7Ci11
aW50MzJfdCBpbnRlbF9yZWdpc3Rlcl9yZWFkKHVpbnQzMl90IHJlZyk7Ci12b2lkIGludGVsX3Jl
Z2lzdGVyX3dyaXRlKHVpbnQzMl90IHJlZywgdWludDMyX3QgdmFsKTsKLWludCBpbnRlbF9yZWdp
c3Rlcl9hY2Nlc3NfbmVlZHNfZmFrZXdha2Uodm9pZCk7CisvKiByZWdpc3RlciBhY2Nlc3MgaGVs
cGVycyBmcm9tIGludGVsX21taW8uYyAqLworc3RydWN0IGludGVsX3JlZ2lzdGVyX3JhbmdlIHsK
Kwl1aW50MzJfdCBiYXNlOworCXVpbnQzMl90IHNpemU7CisJdWludDMyX3QgZmxhZ3M7Cit9Owor
CitzdHJ1Y3QgaW50ZWxfcmVnaXN0ZXJfbWFwIHsKKwlzdHJ1Y3QgaW50ZWxfcmVnaXN0ZXJfcmFu
Z2UgKm1hcDsKKwl1aW50MzJfdCB0b3A7CisJdWludDMyX3QgYWxpZ25tZW50X21hc2s7Cit9Owor
CitzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhIHsKKwl2b2lkICppZ3RfbW1pbzsKKwlzdHJ1Y3QgaW50
ZWxfcmVnaXN0ZXJfbWFwIG1hcDsKKwl1aW50MzJfdCBwY2lfZGV2aWNlX2lkOworCWludCBrZXk7
CisJYm9vbCBzYWZlOworfTsKKwordm9pZCBpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKHN0cnVjdCBp
bnRlbF9tbWlvX2RhdGEgKm1taW9fZGF0YSwKKwkJCSAgICBzdHJ1Y3QgcGNpX2RldmljZSAqcGNp
X2Rldik7Cit2b2lkIGludGVsX21taW9fdXNlX2R1bXBfZmlsZShzdHJ1Y3QgaW50ZWxfbW1pb19k
YXRhICptbWlvX2RhdGEsIGNoYXIgKmZpbGUpOworCitpbnQgaW50ZWxfcmVnaXN0ZXJfYWNjZXNz
X2luaXQoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhLAorCQkJICAgICAgIHN0cnVj
dCBwY2lfZGV2aWNlICpwY2lfZGV2LCBpbnQgc2FmZSwgaW50IGZkKTsKK3ZvaWQgaW50ZWxfcmVn
aXN0ZXJfYWNjZXNzX2Zpbmkoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhKTsKK3Vp
bnQzMl90IGludGVsX3JlZ2lzdGVyX3JlYWQoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19k
YXRhLCB1aW50MzJfdCByZWcpOwordm9pZCBpbnRlbF9yZWdpc3Rlcl93cml0ZShzdHJ1Y3QgaW50
ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IHJlZywKKwkJCSAgdWludDMyX3QgdmFs
KTsKK2ludCBpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfbmVlZHNfZmFrZXdha2Uoc3RydWN0IGludGVs
X21taW9fZGF0YSAqbW1pb19kYXRhKTsKIAogLyogbW1pbyByZWdpc3RlciBhY2Nlc3MgZnVuY3Rp
b25zIHRoYXQgdXNlIGlndF9nbG9iYWxfbW1pbyAqLwogCkBAIC04NiwxNyArMTExLDI0IEBAIF9f
T1VUUkVHKDgsOCkKICN1bmRlZiBfX09VVFJFRwogCiAvKiBzaWRlYmFuZCBhY2Nlc3MgZnVuY3Rp
b25zIGZyb20gaW50ZWxfaW9zZi5jICovCi11aW50MzJfdCBpbnRlbF9kcGlvX3JlZ19yZWFkKHVp
bnQzMl90IHJlZywgaW50IHBoeSk7Ci12b2lkIGludGVsX2RwaW9fcmVnX3dyaXRlKHVpbnQzMl90
IHJlZywgdWludDMyX3QgdmFsLCBpbnQgcGh5KTsKLXVpbnQzMl90IGludGVsX2ZsaXNkc2lfcmVn
X3JlYWQodWludDMyX3QgcmVnKTsKLXZvaWQgaW50ZWxfZmxpc2RzaV9yZWdfd3JpdGUodWludDMy
X3QgcmVnLCB1aW50MzJfdCB2YWwpOwotdWludDMyX3QgaW50ZWxfaW9zZl9zYl9yZWFkKHVpbnQz
Ml90IHBvcnQsIHVpbnQzMl90IHJlZyk7Ci12b2lkIGludGVsX2lvc2Zfc2Jfd3JpdGUodWludDMy
X3QgcG9ydCwgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwpOwotCi1pbnQgaW50ZWxfcHVuaXRf
cmVhZCh1aW50MzJfdCBhZGRyLCB1aW50MzJfdCAqdmFsKTsKLWludCBpbnRlbF9wdW5pdF93cml0
ZSh1aW50MzJfdCBhZGRyLCB1aW50MzJfdCB2YWwpOwotaW50IGludGVsX25jX3JlYWQodWludDMy
X3QgYWRkciwgdWludDMyX3QgKnZhbCk7Ci1pbnQgaW50ZWxfbmNfd3JpdGUodWludDMyX3QgYWRk
ciwgdWludDMyX3QgdmFsKTsKK3VpbnQzMl90IGludGVsX2RwaW9fcmVnX3JlYWQoc3RydWN0IGlu
dGVsX21taW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCByZWcsCisJCQkgICAgIGludCBwaHkp
Owordm9pZCBpbnRlbF9kcGlvX3JlZ193cml0ZShzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlv
X2RhdGEsIHVpbnQzMl90IHJlZywKKwkJCSAgdWludDMyX3QgdmFsLCBpbnQgcGh5KTsKK3VpbnQz
Ml90IGludGVsX2ZsaXNkc2lfcmVnX3JlYWQoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19k
YXRhLCB1aW50MzJfdCByZWcpOwordm9pZCBpbnRlbF9mbGlzZHNpX3JlZ193cml0ZShzdHJ1Y3Qg
aW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IHJlZywKKwkJCSAgICAgdWludDMy
X3QgdmFsKTsKK3VpbnQzMl90IGludGVsX2lvc2Zfc2JfcmVhZChzdHJ1Y3QgaW50ZWxfbW1pb19k
YXRhICptbWlvX2RhdGEsIHVpbnQzMl90IHBvcnQsCisJCQkgICAgdWludDMyX3QgcmVnKTsKK3Zv
aWQgaW50ZWxfaW9zZl9zYl93cml0ZShzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEs
IHVpbnQzMl90IHBvcnQsCisJCQkgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwpOworCitpbnQg
aW50ZWxfcHVuaXRfcmVhZChzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQz
Ml90IGFkZHIsCisJCSAgICAgdWludDMyX3QgKnZhbCk7CitpbnQgaW50ZWxfcHVuaXRfd3JpdGUo
c3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCBhZGRyLAorCQkgICAg
ICB1aW50MzJfdCB2YWwpOworaW50IGludGVsX25jX3JlYWQoc3RydWN0IGludGVsX21taW9fZGF0
YSAqbW1pb19kYXRhLCB1aW50MzJfdCBhZGRyLCB1aW50MzJfdCAqdmFsKTsKK2ludCBpbnRlbF9u
Y193cml0ZShzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IGFkZHIs
IHVpbnQzMl90IHZhbCk7CiAKIC8qIHJlZ2lzdGVyIG1hcHMgZnJvbSBpbnRlbF9yZWdfbWFwLmMg
Ki8KICNpZm5kZWYgX19HVEtfRE9DX0lHTk9SRV9fCkBAIC0xMDcsMTcgKzEzOSw2IEBAIGludCBp
bnRlbF9uY193cml0ZSh1aW50MzJfdCBhZGRyLCB1aW50MzJfdCB2YWwpOwogI2RlZmluZSBJTlRF
TF9SQU5HRV9SVwkJKElOVEVMX1JBTkdFX1JFQUQgfCBJTlRFTF9SQU5HRV9XUklURSkKICNkZWZp
bmUgSU5URUxfUkFOR0VfRU5ECQkoMTw8MzEpCiAKLXN0cnVjdCBpbnRlbF9yZWdpc3Rlcl9yYW5n
ZSB7Ci0JdWludDMyX3QgYmFzZTsKLQl1aW50MzJfdCBzaXplOwotCXVpbnQzMl90IGZsYWdzOwot
fTsKLQotc3RydWN0IGludGVsX3JlZ2lzdGVyX21hcCB7Ci0Jc3RydWN0IGludGVsX3JlZ2lzdGVy
X3JhbmdlICptYXA7Ci0JdWludDMyX3QgdG9wOwotCXVpbnQzMl90IGFsaWdubWVudF9tYXNrOwot
fTsKIHN0cnVjdCBpbnRlbF9yZWdpc3Rlcl9tYXAgaW50ZWxfZ2V0X3JlZ2lzdGVyX21hcCh1aW50
MzJfdCBkZXZpZCk7CiBzdHJ1Y3QgaW50ZWxfcmVnaXN0ZXJfcmFuZ2UgKmludGVsX2dldF9yZWdp
c3Rlcl9yYW5nZShzdHJ1Y3QgaW50ZWxfcmVnaXN0ZXJfbWFwIG1hcCwgdWludDMyX3Qgb2Zmc2V0
LCB1aW50MzJfdCBtb2RlKTsKICNlbmRpZiAvKiBfX0dUS19ET0NfSUdOT1JFX18gKi8KZGlmZiAt
LWdpdCBhL2xpYi9pbnRlbF9pb3NmLmMgYi9saWIvaW50ZWxfaW9zZi5jCmluZGV4IDNiNWExMzcw
MC4uMTY4NjJlZjRlIDEwMDY0NAotLS0gYS9saWIvaW50ZWxfaW9zZi5jCisrKyBiL2xpYi9pbnRl
bF9pb3NmLmMKQEAgLTE5LDggKzE5LDggQEAKIC8qIFByaXZhdGUgcmVnaXN0ZXIgd3JpdGUsIGRv
dWJsZS13b3JkIGFkZHJlc3NpbmcsIG5vbi1wb3N0ZWQgKi8KICNkZWZpbmUgU0JfQ1JXUkRBX05Q
ICAgMHgwNwogCi1zdGF0aWMgaW50IHZsdl9zaWRlYmFuZF9ydyh1aW50MzJfdCBwb3J0LCB1aW50
OF90IG9wY29kZSwgdWludDMyX3QgYWRkciwKLQkJCSAgIHVpbnQzMl90ICp2YWwpCitzdGF0aWMg
aW50IHZsdl9zaWRlYmFuZF9ydyhzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVp
bnQzMl90IHBvcnQsCisJCQkgICB1aW50OF90IG9wY29kZSwgdWludDMyX3QgYWRkciwgdWludDMy
X3QgKnZhbCkKIHsKIAlpbnQgdGltZW91dCA9IDA7CiAJdWludDMyX3QgY21kLCBkZXZmbiwgYmUs
IGJhcjsKQEAgLTM0LDIyICszNCwyNCBAQCBzdGF0aWMgaW50IHZsdl9zaWRlYmFuZF9ydyh1aW50
MzJfdCBwb3J0LCB1aW50OF90IG9wY29kZSwgdWludDMyX3QgYWRkciwKIAkJKHBvcnQgPDwgSU9T
Rl9QT1JUX1NISUZUKSB8IChiZSA8PCBJT1NGX0JZVEVfRU5BQkxFU19TSElGVCkgfAogCQkoYmFy
IDw8IElPU0ZfQkFSX1NISUZUKTsKIAotCWlmIChpbnRlbF9yZWdpc3Rlcl9yZWFkKFZMVl9JT1NG
X0RPT1JCRUxMX1JFUSkgJiBJT1NGX1NCX0JVU1kpIHsKKwlpZiAoaW50ZWxfcmVnaXN0ZXJfcmVh
ZChtbWlvX2RhdGEsIFZMVl9JT1NGX0RPT1JCRUxMX1JFUSkgJgorCSAgICBJT1NGX1NCX0JVU1kp
IHsKIAkJaWd0X3dhcm4oIndhcm5pbmc6IHBjb2RlICglcykgbWFpbGJveCBhY2Nlc3MgZmFpbGVk
XG4iLCBpc19yZWFkID8gInJlYWQiIDogIndyaXRlIik7CiAJCXJldHVybiAtRUFHQUlOOwogCX0K
IAotCWludGVsX3JlZ2lzdGVyX3dyaXRlKFZMVl9JT1NGX0FERFIsIGFkZHIpOworCWludGVsX3Jl
Z2lzdGVyX3dyaXRlKG1taW9fZGF0YSwgVkxWX0lPU0ZfQUREUiwgYWRkcik7CiAJaWYgKCFpc19y
ZWFkKQotCQlpbnRlbF9yZWdpc3Rlcl93cml0ZShWTFZfSU9TRl9EQVRBLCAqdmFsKTsKKwkJaW50
ZWxfcmVnaXN0ZXJfd3JpdGUobW1pb19kYXRhLCBWTFZfSU9TRl9EQVRBLCAqdmFsKTsKIAotCWlu
dGVsX3JlZ2lzdGVyX3dyaXRlKFZMVl9JT1NGX0RPT1JCRUxMX1JFUSwgY21kKTsKKwlpbnRlbF9y
ZWdpc3Rlcl93cml0ZShtbWlvX2RhdGEsIFZMVl9JT1NGX0RPT1JCRUxMX1JFUSwgY21kKTsKIAog
CWRvIHsKIAkJdXNsZWVwKDEpOwogCQl0aW1lb3V0Kys7Ci0JfSB3aGlsZSAoaW50ZWxfcmVnaXN0
ZXJfcmVhZChWTFZfSU9TRl9ET09SQkVMTF9SRVEpICYgSU9TRl9TQl9CVVNZICYmCi0JCSB0aW1l
b3V0IDwgVElNRU9VVF9VUyk7CisJfSB3aGlsZSAoaW50ZWxfcmVnaXN0ZXJfcmVhZChtbWlvX2Rh
dGEtPmlndF9tbWlvLAorCQkJCSAgICAgVkxWX0lPU0ZfRE9PUkJFTExfUkVRKSAmCisJCUlPU0Zf
U0JfQlVTWSAmJiB0aW1lb3V0IDwgVElNRU9VVF9VUyk7CiAKIAlpZiAodGltZW91dCA+PSBUSU1F
T1VUX1VTKSB7CiAJCWlndF93YXJuKCJ0aW1lb3V0IHdhaXRpbmcgZm9yIHBjb2RlICVzICglZCkg
dG8gZmluaXNoXG4iLCBpc19yZWFkID8gInJlYWQiIDogIndyaXRlIiwgYWRkcik7CkBAIC01Nyw4
ICs1OSw4IEBAIHN0YXRpYyBpbnQgdmx2X3NpZGViYW5kX3J3KHVpbnQzMl90IHBvcnQsIHVpbnQ4
X3Qgb3Bjb2RlLCB1aW50MzJfdCBhZGRyLAogCX0KIAogCWlmIChpc19yZWFkKQotCQkqdmFsID0g
aW50ZWxfcmVnaXN0ZXJfcmVhZChWTFZfSU9TRl9EQVRBKTsKLQlpbnRlbF9yZWdpc3Rlcl93cml0
ZShWTFZfSU9TRl9EQVRBLCAwKTsKKwkJKnZhbCA9IGludGVsX3JlZ2lzdGVyX3JlYWQobW1pb19k
YXRhLT5pZ3RfbW1pbywgVkxWX0lPU0ZfREFUQSk7CisJaW50ZWxfcmVnaXN0ZXJfd3JpdGUobW1p
b19kYXRhLT5pZ3RfbW1pbywgVkxWX0lPU0ZfREFUQSwgMCk7CiAKIAlyZXR1cm4gMDsKIH0KQEAg
LTczLDkgKzc1LDEwIEBAIHN0YXRpYyBpbnQgdmx2X3NpZGViYW5kX3J3KHVpbnQzMl90IHBvcnQs
IHVpbnQ4X3Qgb3Bjb2RlLCB1aW50MzJfdCBhZGRyLAogICogUmV0dXJuczoKICAqIDAgd2hlbiB0
aGUgcmVnaXN0ZXIgYWNjZXNzIHN1Y2NlZWRlZCwgbmVnYXRpdmUgZXJybm8gY29kZSBvbiBmYWls
dXJlLgogICovCi1pbnQgaW50ZWxfcHVuaXRfcmVhZCh1aW50MzJfdCBhZGRyLCB1aW50MzJfdCAq
dmFsKQoraW50IGludGVsX3B1bml0X3JlYWQoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19k
YXRhLCB1aW50MzJfdCBhZGRyLCB1aW50MzJfdCAqdmFsKQogewotCXJldHVybiB2bHZfc2lkZWJh
bmRfcncoSU9TRl9QT1JUX1BVTklULCBTQl9DUlJEREFfTlAsIGFkZHIsIHZhbCk7CisJcmV0dXJu
IHZsdl9zaWRlYmFuZF9ydyhtbWlvX2RhdGEsIElPU0ZfUE9SVF9QVU5JVCwgU0JfQ1JSRERBX05Q
LCBhZGRyLAorCQkJICAgICAgIHZhbCk7CiB9CiAKIC8qKgpAQCAtODgsOSArOTEsMTAgQEAgaW50
IGludGVsX3B1bml0X3JlYWQodWludDMyX3QgYWRkciwgdWludDMyX3QgKnZhbCkKICAqIFJldHVy
bnM6CiAgKiAwIHdoZW4gdGhlIHJlZ2lzdGVyIGFjY2VzcyBzdWNjZWVkZWQsIG5lZ2F0aXZlIGVy
cm5vIGNvZGUgb24gZmFpbHVyZS4KICAqLwotaW50IGludGVsX3B1bml0X3dyaXRlKHVpbnQzMl90
IGFkZHIsIHVpbnQzMl90IHZhbCkKK2ludCBpbnRlbF9wdW5pdF93cml0ZShzdHJ1Y3QgaW50ZWxf
bW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IGFkZHIsIHVpbnQzMl90IHZhbCkKIHsKLQly
ZXR1cm4gdmx2X3NpZGViYW5kX3J3KElPU0ZfUE9SVF9QVU5JVCwgU0JfQ1JXUkRBX05QLCBhZGRy
LCAmdmFsKTsKKwlyZXR1cm4gdmx2X3NpZGViYW5kX3J3KG1taW9fZGF0YSwgSU9TRl9QT1JUX1BV
TklULCBTQl9DUldSREFfTlAsIGFkZHIsCisJCQkgICAgICAgJnZhbCk7CiB9CiAKIC8qKgpAQCAt
MTAzLDkgKzEwNywxMCBAQCBpbnQgaW50ZWxfcHVuaXRfd3JpdGUodWludDMyX3QgYWRkciwgdWlu
dDMyX3QgdmFsKQogICogUmV0dXJuczoKICAqIDAgd2hlbiB0aGUgcmVnaXN0ZXIgYWNjZXNzIHN1
Y2NlZWRlZCwgbmVnYXRpdmUgZXJybm8gY29kZSBvbiBmYWlsdXJlLgogICovCi1pbnQgaW50ZWxf
bmNfcmVhZCh1aW50MzJfdCBhZGRyLCB1aW50MzJfdCAqdmFsKQoraW50IGludGVsX25jX3JlYWQo
c3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCBhZGRyLCB1aW50MzJf
dCAqdmFsKQogewotCXJldHVybiB2bHZfc2lkZWJhbmRfcncoSU9TRl9QT1JUX05DLCBTQl9DUlJE
REFfTlAsIGFkZHIsIHZhbCk7CisJcmV0dXJuIHZsdl9zaWRlYmFuZF9ydyhtbWlvX2RhdGEsIElP
U0ZfUE9SVF9OQywgU0JfQ1JSRERBX05QLCBhZGRyLAorCQkJICAgICAgIHZhbCk7CiB9CiAKIC8q
KgpAQCAtMTE4LDkgKzEyMywxMCBAQCBpbnQgaW50ZWxfbmNfcmVhZCh1aW50MzJfdCBhZGRyLCB1
aW50MzJfdCAqdmFsKQogICogUmV0dXJuczoKICAqIDAgd2hlbiB0aGUgcmVnaXN0ZXIgYWNjZXNz
IHN1Y2NlZWRlZCwgbmVnYXRpdmUgZXJybm8gY29kZSBvbiBmYWlsdXJlLgogICovCi1pbnQgaW50
ZWxfbmNfd3JpdGUodWludDMyX3QgYWRkciwgdWludDMyX3QgdmFsKQoraW50IGludGVsX25jX3dy
aXRlKHN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgKm1taW9fZGF0YSwgdWludDMyX3QgYWRkciwgdWlu
dDMyX3QgdmFsKQogewotCXJldHVybiB2bHZfc2lkZWJhbmRfcncoSU9TRl9QT1JUX05DLCBTQl9D
UldSREFfTlAsIGFkZHIsICZ2YWwpOworCXJldHVybiB2bHZfc2lkZWJhbmRfcncobW1pb19kYXRh
LCBJT1NGX1BPUlRfTkMsIFNCX0NSV1JEQV9OUCwgYWRkciwKKwkJCSAgICAgICAmdmFsKTsKIH0K
IAogLyoqCkBAIC0xMzMsMTQgKzEzOSwxNiBAQCBpbnQgaW50ZWxfbmNfd3JpdGUodWludDMyX3Qg
YWRkciwgdWludDMyX3QgdmFsKQogICogUmV0dXJuczoKICAqIFRoZSB2YWx1ZSByZWFkIGZyb20g
dGhlIHJlZ2lzdGVyLgogICovCi11aW50MzJfdCBpbnRlbF9kcGlvX3JlZ19yZWFkKHVpbnQzMl90
IHJlZywgaW50IHBoeSkKK3VpbnQzMl90IGludGVsX2RwaW9fcmVnX3JlYWQoc3RydWN0IGludGVs
X21taW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCByZWcsIGludCBwaHkpCiB7CiAJdWludDMy
X3QgdmFsOwogCiAJaWYgKHBoeSA9PSAwKQotCQl2bHZfc2lkZWJhbmRfcncoSU9TRl9QT1JUX0RQ
SU8sIFNCX01SRF9OUCwgcmVnLCAmdmFsKTsKKwkJdmx2X3NpZGViYW5kX3J3KG1taW9fZGF0YSwg
SU9TRl9QT1JUX0RQSU8sIFNCX01SRF9OUCwgcmVnLAorCQkJCSZ2YWwpOwogCWVsc2UKLQkJdmx2
X3NpZGViYW5kX3J3KElPU0ZfUE9SVF9EUElPXzIsIFNCX01SRF9OUCwgcmVnLCAmdmFsKTsKKwkJ
dmx2X3NpZGViYW5kX3J3KG1taW9fZGF0YSwgSU9TRl9QT1JUX0RQSU9fMiwgU0JfTVJEX05QLCBy
ZWcsCisJCQkJJnZhbCk7CiAJcmV0dXJuIHZhbDsKIH0KIApAQCAtMTUyLDM4ICsxNjAsNDAgQEAg
dWludDMyX3QgaW50ZWxfZHBpb19yZWdfcmVhZCh1aW50MzJfdCByZWcsIGludCBwaHkpCiAgKgog
ICogMzItYml0IHdyaXRlIG9mIHRoZSByZWdpc3RlciBhdCBAb2Zmc2V0IHRocm91Z2ggdGhlIERQ
SU8gc2lkZWJhbmQgcG9ydC4KICAqLwotdm9pZCBpbnRlbF9kcGlvX3JlZ193cml0ZSh1aW50MzJf
dCByZWcsIHVpbnQzMl90IHZhbCwgaW50IHBoeSkKK3ZvaWQgaW50ZWxfZHBpb19yZWdfd3JpdGUo
c3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCByZWcsIHVpbnQzMl90
IHZhbCwgaW50IHBoeSkKIHsKIAlpZiAocGh5ID09IDApCi0JCXZsdl9zaWRlYmFuZF9ydyhJT1NG
X1BPUlRfRFBJTywgU0JfTVdSX05QLCByZWcsICZ2YWwpOworCQl2bHZfc2lkZWJhbmRfcncobW1p
b19kYXRhLCBJT1NGX1BPUlRfRFBJTywgU0JfTVdSX05QLCByZWcsICZ2YWwpOwogCWVsc2UKLQkJ
dmx2X3NpZGViYW5kX3J3KElPU0ZfUE9SVF9EUElPXzIsIFNCX01XUl9OUCwgcmVnLCAmdmFsKTsK
KwkJdmx2X3NpZGViYW5kX3J3KG1taW9fZGF0YSwgSU9TRl9QT1JUX0RQSU9fMiwgU0JfTVdSX05Q
LCByZWcsCisJCQkJJnZhbCk7CiB9CiAKLXVpbnQzMl90IGludGVsX2ZsaXNkc2lfcmVnX3JlYWQo
dWludDMyX3QgcmVnKQordWludDMyX3QgaW50ZWxfZmxpc2RzaV9yZWdfcmVhZChzdHJ1Y3QgaW50
ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IHJlZykKIHsKIAl1aW50MzJfdCB2YWwg
PSAwOwogCi0Jdmx2X3NpZGViYW5kX3J3KElPU0ZfUE9SVF9GTElTRFNJLCBTQl9DUlJEREFfTlAs
IHJlZywgJnZhbCk7CisJdmx2X3NpZGViYW5kX3J3KG1taW9fZGF0YSwgSU9TRl9QT1JUX0ZMSVNE
U0ksIFNCX0NSUkREQV9OUCwgcmVnLCAmdmFsKTsKIAogCXJldHVybiB2YWw7CiB9CiAKLXZvaWQg
aW50ZWxfZmxpc2RzaV9yZWdfd3JpdGUodWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwpCit2b2lk
IGludGVsX2ZsaXNkc2lfcmVnX3dyaXRlKHN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgKm1taW9fZGF0
YSwgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwpCiB7Ci0Jdmx2X3NpZGViYW5kX3J3KElPU0Zf
UE9SVF9GTElTRFNJLCBTQl9DUldSREFfTlAsIHJlZywgJnZhbCk7CisJdmx2X3NpZGViYW5kX3J3
KG1taW9fZGF0YSwgSU9TRl9QT1JUX0ZMSVNEU0ksIFNCX0NSV1JEQV9OUCwgcmVnLCAmdmFsKTsK
IH0KIAotdWludDMyX3QgaW50ZWxfaW9zZl9zYl9yZWFkKHVpbnQzMl90IHBvcnQsIHVpbnQzMl90
IHJlZykKK3VpbnQzMl90IGludGVsX2lvc2Zfc2JfcmVhZChzdHJ1Y3QgaW50ZWxfbW1pb19kYXRh
ICptbWlvX2RhdGEsIHVpbnQzMl90IHBvcnQsIHVpbnQzMl90IHJlZykKIHsKIAl1aW50MzJfdCB2
YWw7CiAKLQl2bHZfc2lkZWJhbmRfcncocG9ydCwgU0JfQ1JSRERBX05QLCByZWcsICZ2YWwpOwor
CXZsdl9zaWRlYmFuZF9ydyhtbWlvX2RhdGEsIHBvcnQsIFNCX0NSUkREQV9OUCwgcmVnLCAmdmFs
KTsKIAogCXJldHVybiB2YWw7CiB9CiAKLXZvaWQgaW50ZWxfaW9zZl9zYl93cml0ZSh1aW50MzJf
dCBwb3J0LCB1aW50MzJfdCByZWcsIHVpbnQzMl90IHZhbCkKK3ZvaWQgaW50ZWxfaW9zZl9zYl93
cml0ZShzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEsIHVpbnQzMl90IHBvcnQsCisJ
CQkgdWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwpCiB7Ci0Jdmx2X3NpZGViYW5kX3J3KHBvcnQs
IFNCX0NSV1JEQV9OUCwgcmVnLCAmdmFsKTsKKwl2bHZfc2lkZWJhbmRfcncobW1pb19kYXRhLCBw
b3J0LCBTQl9DUldSREFfTlAsIHJlZywgJnZhbCk7CiB9CmRpZmYgLS1naXQgYS9saWIvaW50ZWxf
bW1pby5jIGIvbGliL2ludGVsX21taW8uYwppbmRleCA0NjRlNjUyODQuLjY2N2E2OWY1YSAxMDA2
NDQKLS0tIGEvbGliL2ludGVsX21taW8uYworKysgYi9saWIvaW50ZWxfbW1pby5jCkBAIC03MCw1
NyArNzAsNTcgQEAKICAqCiAgKiBQb2ludGVyIHRvIHRoZSByZWdpc3RlciByYW5nZSwgaW5pdGlh
bGl6ZWQgdXNpbmcgaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoKQogICogb3IgaW50ZWxfbW1p
b191c2VfZHVtcF9maWxlKCkuIEl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byB1c2UgdGhpcyBkaXJl
Y3RseS4KKyAqIFRoaXMgcG9pbnRlciBpcyB2YWxpZCBvbmx5IGZvciBvbmUgZHJtIGRldmljZS4K
ICAqLwogdm9pZCAqaWd0X2dsb2JhbF9tbWlvOwogCi1zdGF0aWMgc3RydWN0IF9tbWlvX2RhdGEg
ewotCWludCBpbml0ZWQ7Ci0JYm9vbCBzYWZlOwotCXVpbnQzMl90IGk5MTVfZGV2aWQ7Ci0Jc3Ry
dWN0IGludGVsX3JlZ2lzdGVyX21hcCBtYXA7Ci0JaW50IGtleTsKLX0gbW1pb19kYXRhOwotCiAv
KioKICAqIGludGVsX21taW9fdXNlX2R1bXBfZmlsZToKKyAqIEBtbWlvX2RhdGE6ICBtbWlvIHN0
cnVjdHVyZSBmb3IgSU8gb3BlcmF0aW9ucwogICogQGZpbGU6IG5hbWUgb2YgdGhlIHJlZ2lzdGVy
IGR1bXAgZmlsZSB0byBvcGVuCiAgKgotICogU2V0cyB1cCAjaWd0X2dsb2JhbF9tbWlvIHRvIHBv
aW50IGF0IHRoZSBkYXRhIGNvbnRhaW5lZCBpbiBAZmlsZS4gVGhpcyBhbGxvd3MKLSAqIHRoZSBz
YW1lIGNvZGUgdG8gZ2V0IHJldXNlZCBmb3IgZHVtcGluZyBhbmQgZGVjb2RpbmcgZnJvbSBydW5u
aW5nIGhhcmR3YXJlIGFzCi0gKiBmcm9tIHJlZ2lzdGVyIGR1bXBzLgorICogU2V0cyBhbHNvIHVw
IG1taW9fZGF0YS0+aWd0X21taW8gdG8gcG9pbnQgYXQgdGhlIGRhdGEgY29udGFpbmVkCisgKiBp
biBAZmlsZS4gVGhpcyBhbGxvd3MgdGhlIHNhbWUgY29kZSB0byBnZXQgcmV1c2VkIGZvciBkdW1w
aW5nIGFuZCBkZWNvZGluZworICogZnJvbSBydW5uaW5nIGhhcmR3YXJlIGFzIGZyb20gcmVnaXN0
ZXIgZHVtcHMuCiAgKi8KIHZvaWQKLWludGVsX21taW9fdXNlX2R1bXBfZmlsZShjaGFyICpmaWxl
KQoraW50ZWxfbW1pb191c2VfZHVtcF9maWxlKHN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgKm1taW9f
ZGF0YSwgY2hhciAqZmlsZSkKIHsKIAlpbnQgZmQ7CiAJc3RydWN0IHN0YXQgc3Q7CiAKKwltZW1z
ZXQobW1pb19kYXRhLCAwLCBzaXplb2Yoc3RydWN0IGludGVsX21taW9fZGF0YSkpOwogCWZkID0g
b3BlbihmaWxlLCBPX1JEV1IpOwogCWlndF9mYWlsX29uX2YoZmQgPT0gLTEsCiAJCSAgICAgICJD
b3VsZG4ndCBvcGVuICVzXG4iLCBmaWxlKTsKIAogCWZzdGF0KGZkLCAmc3QpOwotCWlndF9nbG9i
YWxfbW1pbyA9IG1tYXAoTlVMTCwgc3Quc3Rfc2l6ZSwgUFJPVF9SRUFEfFBST1RfV1JJVEUsIE1B
UF9QUklWQVRFLCBmZCwgMCk7Ci0JaWd0X2ZhaWxfb25fZihpZ3RfZ2xvYmFsX21taW8gPT0gTUFQ
X0ZBSUxFRCwKKwltbWlvX2RhdGEtPmlndF9tbWlvID0gbW1hcChOVUxMLCBzdC5zdF9zaXplLCBQ
Uk9UX1JFQUR8UFJPVF9XUklURSwgTUFQX1BSSVZBVEUsIGZkLCAwKTsKKwlpZ3RfZmFpbF9vbl9m
KG1taW9fZGF0YS0+aWd0X21taW8gPT0gTUFQX0ZBSUxFRCwKIAkJICAgICAgIkNvdWxkbid0IG1t
YXAgJXNcbiIsIGZpbGUpOworCisJaWd0X2dsb2JhbF9tbWlvID0gbW1pb19kYXRhLT5pZ3RfbW1p
bzsKKwogCWNsb3NlKGZkKTsKIH0KIAogLyoqCiAgKiBpbnRlbF9tbWlvX3VzZV9wY2lfYmFyOgor
ICogQG1taW9fZGF0YTogIG1taW8gc3RydWN0dXJlIGZvciBJTyBvcGVyYXRpb25zCiAgKiBAcGNp
X2RldjogaW50ZWwgZ3JhY3BoaXMgcGNpIGRldmljZQogICoKLSAqIFNldHMgdXAgI2lndF9nbG9i
YWxfbW1pbyB0byBwb2ludCBhdCB0aGUgbW1pbyBiYXIuCisgKiBGaWxsIGEgbW1pb19kYXRhIHN0
dWN0dXJlIHdpdGggaWd0X21taW8gdG8gcG9pbnQgYXQgdGhlIG1taW8gYmFyLgogICoKICAqIEBw
Y2lfZGV2IGNhbiBiZSBvYnRhaW5lZCBmcm9tIGludGVsX2dldF9wY2lfZGV2aWNlKCkuCiAgKi8K
IHZvaWQKLWludGVsX21taW9fdXNlX3BjaV9iYXIoc3RydWN0IHBjaV9kZXZpY2UgKnBjaV9kZXYp
CitpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKHN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgKm1taW9fZGF0
YSwgc3RydWN0IHBjaV9kZXZpY2UgKnBjaV9kZXYpCiB7CiAJdWludDMyX3QgZGV2aWQsIGdlbjsK
IAlpbnQgbW1pb19iYXIsIG1taW9fc2l6ZTsKIAlpbnQgZXJyb3I7CiAKKwltZW1zZXQobW1pb19k
YXRhLCAwLCBzaXplb2Yoc3RydWN0IGludGVsX21taW9fZGF0YSkpOwogCWRldmlkID0gcGNpX2Rl
di0+ZGV2aWNlX2lkOwogCWlmIChJU19HRU4yKGRldmlkKSkKIAkJbW1pb19iYXIgPSAxOwpAQCAt
MTM5LDcgKzEzOSw5IEBAIGludGVsX21taW9fdXNlX3BjaV9iYXIoc3RydWN0IHBjaV9kZXZpY2Ug
KnBjaV9kZXYpCiAJCQkJICAgICAgcGNpX2Rldi0+cmVnaW9uc1ttbWlvX2Jhcl0uYmFzZV9hZGRy
LAogCQkJCSAgICAgIG1taW9fc2l6ZSwKIAkJCQkgICAgICBQQ0lfREVWX01BUF9GTEFHX1dSSVRB
QkxFLAotCQkJCSAgICAgICZpZ3RfZ2xvYmFsX21taW8pOworCQkJCSAgICAgICZtbWlvX2RhdGEt
PmlndF9tbWlvKTsKKworCWlndF9nbG9iYWxfbW1pbyA9IG1taW9fZGF0YS0+aWd0X21taW87CiAK
IAlpZ3RfZmFpbF9vbl9mKGVycm9yICE9IDAsCiAJCSAgICAgICJDb3VsZG4ndCBtYXAgTU1JTyBy
ZWdpb25cbiIpOwpAQCAtMTUzLDYgKzE1NSw3IEBAIHJlbGVhc2VfZm9yY2V3YWtlX2xvY2soaW50
IGZkKQogCiAvKioKICAqIGludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0OgorICogQG1taW9fZGF0
YTogIG1taW8gc3RydWN0dXJlIGZvciBJTyBvcGVyYXRpb25zCiAgKiBAcGNpX2RldjogaW50ZWwg
Z3JhcGhpY3MgcGNpIGRldmljZQogICogQHNhZmU6IHVzZSBzYWZlIHJlZ2lzdGVyIGFjY2VzcyB0
YWJsZXMKICAqCkBAIC0xNjAsNzYgKzE2Myw3MiBAQCByZWxlYXNlX2ZvcmNld2FrZV9sb2NrKGlu
dCBmZCkKICAqIGhhbmRsaW5nIGFuZCBhbHNvIGFsbG93cyByZWdpc3RlciBhY2Nlc3MgdG8gYmUg
Y2hlY2tlZCB3aXRoIGFuIGV4cGxpY2l0CiAgKiB3aGl0ZWxpc3QuCiAgKgotICogSXQgYWxzbyBp
bml0aWFsaXplcyAjaWd0X2dsb2JhbF9tbWlvIGxpa2UgaW50ZWxfbW1pb191c2VfcGNpX2Jhcigp
LgorICogSXQgYWxzbyBpbml0aWFsaXplcyBtbWlvX2RhdGEtPmlndF9tbWlvIGxpa2UgaW50ZWxf
bW1pb191c2VfcGNpX2JhcigpLgogICoKICAqIEBwY2lfZGV2IGNhbiBiZSBvYnRhaW5lZCBmcm9t
IGludGVsX2dldF9wY2lfZGV2aWNlKCkuCiAgKi8KIGludAotaW50ZWxfcmVnaXN0ZXJfYWNjZXNz
X2luaXQoc3RydWN0IHBjaV9kZXZpY2UgKnBjaV9kZXYsIGludCBzYWZlLCBpbnQgZmQpCitpbnRl
bF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhICptbWlvX2RhdGEs
IHN0cnVjdCBwY2lfZGV2aWNlICpwY2lfZGV2LCBpbnQgc2FmZSwgaW50IGZkKQogewogCWludCBy
ZXQ7CiAKLQkvKiBhZnRlciBvbGQgQVBJIGlzIGRlcHJlY2F0ZWQsIHJlbW92ZSB0aGlzICovCi0J
aWYgKGlndF9nbG9iYWxfbW1pbyA9PSBOVUxMKQotCQlpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKHBj
aV9kZXYpOworCWludGVsX21taW9fdXNlX3BjaV9iYXIobW1pb19kYXRhLCBwY2lfZGV2KTsKIAot
CWlndF9hc3NlcnQoaWd0X2dsb2JhbF9tbWlvICE9IE5VTEwpOworCWlndF9hc3NlcnQobW1pb19k
YXRhLT5pZ3RfbW1pbyAhPSBOVUxMKTsKIAotCWlmIChtbWlvX2RhdGEuaW5pdGVkKQotCQlyZXR1
cm4gLTE7Ci0KLQltbWlvX2RhdGEuc2FmZSA9IChzYWZlICE9IDAgJiYKKwltbWlvX2RhdGEtPnNh
ZmUgPSAoc2FmZSAhPSAwICYmCiAJCQlpbnRlbF9nZW4ocGNpX2Rldi0+ZGV2aWNlX2lkKSA+PSA0
KSA/IHRydWUgOiBmYWxzZTsKLQltbWlvX2RhdGEuaTkxNV9kZXZpZCA9IHBjaV9kZXYtPmRldmlj
ZV9pZDsKLQlpZiAobW1pb19kYXRhLnNhZmUpCi0JCW1taW9fZGF0YS5tYXAgPSBpbnRlbF9nZXRf
cmVnaXN0ZXJfbWFwKG1taW9fZGF0YS5pOTE1X2RldmlkKTsKKwltbWlvX2RhdGEtPnBjaV9kZXZp
Y2VfaWQgPSBwY2lfZGV2LT5kZXZpY2VfaWQ7CisJaWYgKG1taW9fZGF0YS0+c2FmZSkKKwkJbW1p
b19kYXRhLT5tYXAgPSBpbnRlbF9nZXRfcmVnaXN0ZXJfbWFwKG1taW9fZGF0YS0+cGNpX2Rldmlj
ZV9pZCk7CiAKIAkvKiBGaW5kIHdoZXJlIHRoZSBmb3JjZXdha2UgbG9jayBpcy4gRm9yY2V3YWtl
IGRvZXNuJ3QgZXhpc3QKIAkgKiBnZW4gPCA2LCBidXQgdGhlIGRlYnVnZnMgc2hvdWxkIGRvIHRo
ZSByaWdodCB0aGluZ3MgZm9yIHVzLgogCSAqLwogCXJldCA9IGlndF9vcGVuX2ZvcmNld2FrZV9o
YW5kbGUoZmQpOwogCWlmIChyZXQgPT0gLTEpCi0JCW1taW9fZGF0YS5rZXkgPSBGQUtFS0VZOwor
CQltbWlvX2RhdGEtPmtleSA9IEZBS0VLRVk7CiAJZWxzZQotCQltbWlvX2RhdGEua2V5ID0gcmV0
OworCQltbWlvX2RhdGEtPmtleSA9IHJldDsKIAotCW1taW9fZGF0YS5pbml0ZWQrKzsKIAlyZXR1
cm4gMDsKIH0KIAogc3RhdGljIGludAotaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX25lZWRzX3dha2Uo
dm9pZCkKK2ludGVsX3JlZ2lzdGVyX2FjY2Vzc19uZWVkc193YWtlKHN0cnVjdCBpbnRlbF9tbWlv
X2RhdGEgKm1taW9fZGF0YSkKIHsKLQlyZXR1cm4gbW1pb19kYXRhLmtleSAhPSBGQUtFS0VZOwor
CXJldHVybiBtbWlvX2RhdGEtPmtleSAhPSBGQUtFS0VZOwogfQogCiAvKioKICAqIGludGVsX3Jl
Z2lzdGVyX2FjY2Vzc19uZWVkc19mYWtld2FrZToKKyAqIEBtbWlvX2RhdGE6ICBtbWlvIHN0cnVj
dHVyZSBmb3IgSU8gb3BlcmF0aW9ucwogICoKICAqIFJldHVybnM6CiAgKiBOb24temVybyB3aGVu
IGZvcmNld2FrZSBpbml0aWFsaXphdGlvbiBmYWlsZWQuCiAgKi8KLWludCBpbnRlbF9yZWdpc3Rl
cl9hY2Nlc3NfbmVlZHNfZmFrZXdha2Uodm9pZCkKK2ludCBpbnRlbF9yZWdpc3Rlcl9hY2Nlc3Nf
bmVlZHNfZmFrZXdha2Uoc3RydWN0IGludGVsX21taW9fZGF0YSAqbW1pb19kYXRhKQogewotCXJl
dHVybiBtbWlvX2RhdGEua2V5ID09IEZBS0VLRVk7CisJcmV0dXJuIG1taW9fZGF0YS0+a2V5ID09
IEZBS0VLRVk7CiB9CiAKIC8qKgogICogaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2Zpbmk6CisgKiBA
bW1pb19kYXRhOiAgbW1pbyBzdHJ1Y3R1cmUgZm9yIElPIG9wZXJhdGlvbnMKICAqCiAgKiBDbGVh
biB1cCB0aGUgcmVnaXN0ZXIgYWNjZXNzIGhlbHBlciBpbml0aWFsaXplZCB3aXRoCiAgKiBpbnRl
bF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdCgpLgogICovCiB2b2lkCi1pbnRlbF9yZWdpc3Rlcl9hY2Nl
c3NfZmluaSh2b2lkKQoraW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2Zpbmkoc3RydWN0IGludGVsX21t
aW9fZGF0YSAqbW1pb19kYXRhKQogewotCWlmIChtbWlvX2RhdGEua2V5ICYmIGludGVsX3JlZ2lz
dGVyX2FjY2Vzc19uZWVkc193YWtlKCkpCi0JCXJlbGVhc2VfZm9yY2V3YWtlX2xvY2sobW1pb19k
YXRhLmtleSk7Ci0JbW1pb19kYXRhLmluaXRlZC0tOworCWlmIChtbWlvX2RhdGEtPmtleSAmJiBp
bnRlbF9yZWdpc3Rlcl9hY2Nlc3NfbmVlZHNfd2FrZShtbWlvX2RhdGEpKQorCQlyZWxlYXNlX2Zv
cmNld2FrZV9sb2NrKG1taW9fZGF0YS0+a2V5KTsKIH0KIAogLyoqCiAgKiBpbnRlbF9yZWdpc3Rl
cl9yZWFkOgorICogQG1taW9fZGF0YTogIG1taW8gc3RydWN0dXJlIGZvciBJTyBvcGVyYXRpb25z
CiAgKiBAcmVnOiByZWdpc3RlciBvZmZzZXQKICAqCiAgKiAzMi1iaXQgcmVhZCBvZiB0aGUgcmVn
aXN0ZXIgYXQgQG9mZnNldC4gVGhpcyBmdW5jdGlvbiBvbmx5IHdvcmtzIHdoZW4gdGhlIG5ldwpA
QCAtMjQyLDIwICsyNDEsMTggQEAgaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2Zpbmkodm9pZCkKICAq
IFRoZSB2YWx1ZSByZWFkIGZyb20gdGhlIHJlZ2lzdGVyLgogICovCiB1aW50MzJfdAotaW50ZWxf
cmVnaXN0ZXJfcmVhZCh1aW50MzJfdCByZWcpCitpbnRlbF9yZWdpc3Rlcl9yZWFkKHN0cnVjdCBp
bnRlbF9tbWlvX2RhdGEgKm1taW9fZGF0YSwgdWludDMyX3QgcmVnKQogewogCXN0cnVjdCBpbnRl
bF9yZWdpc3Rlcl9yYW5nZSAqcmFuZ2U7CiAJdWludDMyX3QgcmV0OwogCi0JaWd0X2Fzc2VydCht
bWlvX2RhdGEuaW5pdGVkKTsKLQotCWlmIChpbnRlbF9nZW4obW1pb19kYXRhLmk5MTVfZGV2aWQp
ID49IDYpCi0JCWlndF9hc3NlcnQobW1pb19kYXRhLmtleSAhPSAtMSk7CisJaWYgKGludGVsX2dl
bihtbWlvX2RhdGEtPnBjaV9kZXZpY2VfaWQpID49IDYpCisJCWlndF9hc3NlcnQobW1pb19kYXRh
LT5rZXkgIT0gLTEpOwogCi0JaWYgKCFtbWlvX2RhdGEuc2FmZSkKKwlpZiAoIW1taW9fZGF0YS0+
c2FmZSkKIAkJZ290byByZWFkX291dDsKIAotCXJhbmdlID0gaW50ZWxfZ2V0X3JlZ2lzdGVyX3Jh
bmdlKG1taW9fZGF0YS5tYXAsCisJcmFuZ2UgPSBpbnRlbF9nZXRfcmVnaXN0ZXJfcmFuZ2UobW1p
b19kYXRhLT5tYXAsCiAJCQkJCSByZWcsCiAJCQkJCSBJTlRFTF9SQU5HRV9SRUFEKTsKIApAQCAt
MjY2LDEzICsyNjMsMTQgQEAgaW50ZWxfcmVnaXN0ZXJfcmVhZCh1aW50MzJfdCByZWcpCiAJfQog
CiByZWFkX291dDoKLQlyZXQgPSBpb3JlYWQzMihpZ3RfZ2xvYmFsX21taW8sIHJlZyk7CisJcmV0
ID0gaW9yZWFkMzIobW1pb19kYXRhLT5pZ3RfbW1pbywgcmVnKTsKIG91dDoKIAlyZXR1cm4gcmV0
OwogfQogCiAvKioKICAqIGludGVsX3JlZ2lzdGVyX3dyaXRlOgorICogQG1taW9fZGF0YTogIG1t
aW8gc3RydWN0dXJlIGZvciBJTyBvcGVyYXRpb25zCiAgKiBAcmVnOiByZWdpc3RlciBvZmZzZXQK
ICAqIEB2YWw6IHZhbHVlIHRvIHdyaXRlCiAgKgpAQCAtMjgzLDE5ICsyODEsMTcgQEAgb3V0Ogog
ICogd2hpdGUgbGlzdHMuCiAgKi8KIHZvaWQKLWludGVsX3JlZ2lzdGVyX3dyaXRlKHVpbnQzMl90
IHJlZywgdWludDMyX3QgdmFsKQoraW50ZWxfcmVnaXN0ZXJfd3JpdGUoc3RydWN0IGludGVsX21t
aW9fZGF0YSAqbW1pb19kYXRhLCB1aW50MzJfdCByZWcsIHVpbnQzMl90IHZhbCkKIHsKIAlzdHJ1
Y3QgaW50ZWxfcmVnaXN0ZXJfcmFuZ2UgKnJhbmdlOwogCi0JaWd0X2Fzc2VydChtbWlvX2RhdGEu
aW5pdGVkKTsKLQotCWlmIChpbnRlbF9nZW4obW1pb19kYXRhLmk5MTVfZGV2aWQpID49IDYpCi0J
CWlndF9hc3NlcnQobW1pb19kYXRhLmtleSAhPSAtMSk7CisJaWYgKGludGVsX2dlbihtbWlvX2Rh
dGEtPnBjaV9kZXZpY2VfaWQpID49IDYpCisJCWlndF9hc3NlcnQobW1pb19kYXRhLT5rZXkgIT0g
LTEpOwogCi0JaWYgKCFtbWlvX2RhdGEuc2FmZSkKKwlpZiAoIW1taW9fZGF0YS0+c2FmZSkKIAkJ
Z290byB3cml0ZV9vdXQ7CiAKLQlyYW5nZSA9IGludGVsX2dldF9yZWdpc3Rlcl9yYW5nZShtbWlv
X2RhdGEubWFwLAorCXJhbmdlID0gaW50ZWxfZ2V0X3JlZ2lzdGVyX3JhbmdlKG1taW9fZGF0YS0+
bWFwLAogCQkJCQkgcmVnLAogCQkJCQkgSU5URUxfUkFOR0VfV1JJVEUpOwogCkBAIC0zMDMsNSAr
Mjk5LDUgQEAgaW50ZWxfcmVnaXN0ZXJfd3JpdGUodWludDMyX3QgcmVnLCB1aW50MzJfdCB2YWwp
CiAJCSAgICAgICJSZWdpc3RlciB3cml0ZSBibG9ja2VkIGZvciBzYWZldHkgIiIoKjB4JTA4eCA9
IDB4JXgpXG4iLCByZWcsIHZhbCk7CiAKIHdyaXRlX291dDoKLQlpb3dyaXRlMzIoaWd0X2dsb2Jh
bF9tbWlvLCByZWcsIHZhbCk7CisJaW93cml0ZTMyKG1taW9fZGF0YS0+aWd0X21taW8sIHJlZywg
dmFsKTsKIH0KZGlmZiAtLWdpdCBhL3Rlc3RzL2k5MTUvZ2VtX2V4ZWNfbGF0ZW5jeS5jIGIvdGVz
dHMvaTkxNS9nZW1fZXhlY19sYXRlbmN5LmMKaW5kZXggZTU2ZDYyNzgwLi45ZGRiMzQ4YzAgMTAw
NjQ0Ci0tLSBhL3Rlc3RzL2k5MTUvZ2VtX2V4ZWNfbGF0ZW5jeS5jCisrKyBiL3Rlc3RzL2k5MTUv
Z2VtX2V4ZWNfbGF0ZW5jeS5jCkBAIC02MSw2ICs2MSw4IEBACiAKIHN0YXRpYyB1bnNpZ25lZCBp
bnQgcmluZ19zaXplOwogc3RhdGljIGRvdWJsZSByY3NfY2xvY2s7CitzdGF0aWMgc3RydWN0IGlu
dGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CisKIAogc3RhdGljIHZvaWQKIHBvbGxfcmluZyhpbnQg
ZmQsIHVuc2lnbmVkIHJpbmcsIGNvbnN0IGNoYXIgKm5hbWUpCkBAIC02NjcsNyArNjY5LDcgQEAg
aWd0X21haW4KIAkJaWYgKHJpbmdfc2l6ZSA+IDEwMjQpCiAJCQlyaW5nX3NpemUgPSAxMDI0Owog
Ci0JCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KGludGVsX2dldF9wY2lfZGV2aWNlKCksIGZh
bHNlLCBkZXZpY2UpOworCQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdCgmbW1pb19kYXRhLCBp
bnRlbF9nZXRfcGNpX2RldmljZSgpLCBmYWxzZSwgZGV2aWNlKTsKIAkJcmNzX2Nsb2NrID0gY2xv
Y2tyYXRlKGRldmljZSwgUkNTX1RJTUVTVEFNUCk7CiAJCWlndF9pbmZvKCJSQ1MgdGltZXN0YW1w
IGNsb2NrOiAlLjBmS0h6LCAlLjFmbnNcbiIsCiAJCQkgcmNzX2Nsb2NrIC8gMWUzLCAxZTkgLyBy
Y3NfY2xvY2spOwpkaWZmIC0tZ2l0IGEvdGVzdHMvaTkxNS9nZW1fZXhlY19wYXJzZS5jIGIvdGVz
dHMvaTkxNS9nZW1fZXhlY19wYXJzZS5jCmluZGV4IDYyZThkMGE1MS4uNjBiZWUyNmRlIDEwMDY0
NAotLS0gYS90ZXN0cy9pOTE1L2dlbV9leGVjX3BhcnNlLmMKKysrIGIvdGVzdHMvaTkxNS9nZW1f
ZXhlY19wYXJzZS5jCkBAIC01OCw2ICs1OCw4IEBACiAKIHN0YXRpYyBpbnQgcGFyc2VyX3ZlcnNp
b247CiAKK3N0cnVjdCBpbnRlbF9tbWlvX2RhdGEgbW1pb19kYXRhOworCiBzdGF0aWMgaW50IGNv
bW1hbmRfcGFyc2VyX3ZlcnNpb24oaW50IGZkKQogewogCWludCB2ZXJzaW9uID0gLTE7CkBAIC0y
ODQsOSArMjg2LDkgQEAgdGVzdF9scmkoaW50IGZkLCB1aW50MzJfdCBoYW5kbGUsIHN0cnVjdCB0
ZXN0X2xyaSAqdGVzdCkKIAkJICB0ZXN0LT5uYW1lLCB0ZXN0LT5yZWcsIHRlc3QtPnRlc3RfdmFs
LAogCQkgIGV4cGVjdGVkX2Vycm5vLCBleHBlY3QpOwogCi0JaW50ZWxfcmVnaXN0ZXJfd3JpdGUo
dGVzdC0+cmVnLCB0ZXN0LT5pbml0X3ZhbCk7CisJaW50ZWxfcmVnaXN0ZXJfd3JpdGUoJm1taW9f
ZGF0YSwgdGVzdC0+cmVnLCB0ZXN0LT5pbml0X3ZhbCk7CiAKLQlpZ3RfYXNzZXJ0X2VxX3UzMigo
aW50ZWxfcmVnaXN0ZXJfcmVhZCh0ZXN0LT5yZWcpICYKKwlpZ3RfYXNzZXJ0X2VxX3UzMigoaW50
ZWxfcmVnaXN0ZXJfcmVhZCgmbW1pb19kYXRhLCB0ZXN0LT5yZWcpICYKIAkJCSAgIHRlc3QtPnJl
YWRfbWFzayksCiAJCQkgIHRlc3QtPmluaXRfdmFsKTsKIApAQCAtMjk2LDcgKzI5OCw3IEBAIHRl
c3RfbHJpKGludCBmZCwgdWludDMyX3QgaGFuZGxlLCBzdHJ1Y3QgdGVzdF9scmkgKnRlc3QpCiAJ
CSAgIGV4cGVjdGVkX2Vycm5vKTsKIAlnZW1fc3luYyhmZCwgaGFuZGxlKTsKIAotCWlndF9hc3Nl
cnRfZXFfdTMyKChpbnRlbF9yZWdpc3Rlcl9yZWFkKHRlc3QtPnJlZykgJgorCWlndF9hc3NlcnRf
ZXFfdTMyKChpbnRlbF9yZWdpc3Rlcl9yZWFkKCZtbWlvX2RhdGEsIHRlc3QtPnJlZykgJgogCQkJ
ICAgdGVzdC0+cmVhZF9tYXNrKSwKIAkJCSAgZXhwZWN0KTsKIH0KQEAgLTUzMCw3ICs1MzIsNyBA
QCBpZ3RfbWFpbgogI3VuZGVmIFJFRwogCiAJCWlndF9maXh0dXJlIHsKLQkJCWludGVsX3JlZ2lz
dGVyX2FjY2Vzc19pbml0KGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIGZkKTsKKwkJCWludGVs
X3JlZ2lzdGVyX2FjY2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVsX2dldF9wY2lfZGV2aWNlKCks
IDAsIGZkKTsKIAkJfQogCiAJCWZvciAoaW50IGkgPSAwOyBpIDwgQVJSQVlfU0laRShscmlzKTsg
aSsrKSB7CkBAIC01NDMsNyArNTQ1LDcgQEAgaWd0X21haW4KIAkJfQogCiAJCWlndF9maXh0dXJl
IHsKLQkJCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJCQlpbnRlbF9yZWdpc3Rlcl9h
Y2Nlc3NfZmluaSgmbW1pb19kYXRhKTsKIAkJfQogCX0KIApkaWZmIC0tZ2l0IGEvdGVzdHMvaTkx
NS9nZW1fd29ya2Fyb3VuZHMuYyBiL3Rlc3RzL2k5MTUvZ2VtX3dvcmthcm91bmRzLmMKaW5kZXgg
ODFjMzU2ZjA2Li5kZDYzMTZlYTMgMTAwNjQ0Ci0tLSBhL3Rlc3RzL2k5MTUvZ2VtX3dvcmthcm91
bmRzLmMKKysrIGIvdGVzdHMvaTkxNS9nZW1fd29ya2Fyb3VuZHMuYwpAQCAtMjI1LDYgKzIyNSw3
IEBAIHN0YXRpYyB2b2lkIGNoZWNrX3dvcmthcm91bmRzKGludCBmZCwgZW51bSBvcGVyYXRpb24g
b3AsIHVuc2lnbmVkIGludCBmbGFncykKIAogaWd0X21haW4KIHsKKwlzdHJ1Y3QgaW50ZWxfbW1p
b19kYXRhIG1taW9fZGF0YTsKIAlpbnQgZGV2aWNlID0gLTE7CiAJY29uc3Qgc3RydWN0IHsKIAkJ
Y29uc3QgY2hhciAqbmFtZTsKQEAgLTI1Niw3ICsyNTcsNyBAQCBpZ3RfbWFpbgogCQlkZXZpY2Ug
PSBkcm1fb3Blbl9kcml2ZXIoRFJJVkVSX0lOVEVMKTsKIAkJaWd0X3JlcXVpcmVfZ2VtKGRldmlj
ZSk7CiAKLQkJaW50ZWxfbW1pb191c2VfcGNpX2JhcihpbnRlbF9nZXRfcGNpX2RldmljZSgpKTsK
KwkJaW50ZWxfbW1pb191c2VfcGNpX2JhcigmbW1pb19kYXRhLCBpbnRlbF9nZXRfcGNpX2Rldmlj
ZSgpKTsKIAogCQlnZW4gPSBpbnRlbF9nZW4oaW50ZWxfZ2V0X2RybV9kZXZpZChkZXZpY2UpKTsK
IApkaWZmIC0tZ2l0IGEvdGVzdHMvaTkxNS9pOTE1X3BtX2xwc3AuYyBiL3Rlc3RzL2k5MTUvaTkx
NV9wbV9scHNwLmMKaW5kZXggYjMxOWRiZTlhLi40MjkzOGUxMDQgMTAwNjQ0Ci0tLSBhL3Rlc3Rz
L2k5MTUvaTkxNV9wbV9scHNwLmMKKysrIGIvdGVzdHMvaTkxNS9pOTE1X3BtX2xwc3AuYwpAQCAt
MTg3LDcgKzE4Nyw3IEBAIGludCBkcm1fZmQ7CiB1aW50MzJfdCBkZXZpZDsKIGRybU1vZGVSZXNQ
dHIgZHJtX3JlczsKIGRybU1vZGVDb25uZWN0b3JQdHIgZHJtX2Nvbm5lY3RvcnNbTUFYX0NPTk5F
Q1RPUlNdOwotCitzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIGlndF9tYWluCiB7
CiAJaWd0X2ZpeHR1cmUgewpAQCAtMjEwLDcgKzIxMCw3IEBAIGlndF9tYWluCiAKIAkJaWd0X3Jl
cXVpcmUoc3VwcG9ydHNfbHBzcChkZXZpZCkpOwogCi0JCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19p
bml0KGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIGRybV9mZCk7CisJCWludGVsX3JlZ2lzdGVy
X2FjY2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIGRybV9m
ZCk7CiAKIAkJa21zdGVzdF9zZXRfdnRfZ3JhcGhpY3NfbW9kZSgpOwogCX0KQEAgLTIyNyw3ICsy
MjcsNyBAQCBpZ3RfbWFpbgogCWlndF9maXh0dXJlIHsKIAkJaW50IGk7CiAKLQkJaW50ZWxfcmVn
aXN0ZXJfYWNjZXNzX2ZpbmkoKTsKKwkJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJm1taW9f
ZGF0YSk7CiAJCWZvciAoaSA9IDA7IGkgPCBkcm1fcmVzLT5jb3VudF9jb25uZWN0b3JzOyBpKysp
CiAJCQlkcm1Nb2RlRnJlZUNvbm5lY3Rvcihkcm1fY29ubmVjdG9yc1tpXSk7CiAJCWRybU1vZGVG
cmVlUmVzb3VyY2VzKGRybV9yZXMpOwpkaWZmIC0tZ2l0IGEvdG9vbHMvaW50ZWxfYXVkaW9fZHVt
cC5jIGIvdG9vbHMvaW50ZWxfYXVkaW9fZHVtcC5jCmluZGV4IDcyNmJiNGI2Yi4uNmQxMTY1OWVj
IDEwMDY0NAotLS0gYS90b29scy9pbnRlbF9hdWRpb19kdW1wLmMKKysrIGIvdG9vbHMvaW50ZWxf
YXVkaW9fZHVtcC5jCkBAIC00Miw2ICs0Miw3IEBAIHN0YXRpYyB1aW50MzJfdCBkZXZpZDsKIHN0
YXRpYyBpbnQgYXVkX3JlZ19iYXNlID0gMDsJLyogYmFzZSBhZGRyZXNzIG9mIGF1ZGlvIHJlZ2lz
dGVycyAqLwogc3RhdGljIGludCBkaXNwX3JlZ19iYXNlID0gMDsJLyogYmFzZSBhZGRyZXNzIG9m
IGRpc3BsYXkgcmVnaXN0ZXJzICovCiAKKwogI2RlZmluZSBJU19IQVNXRUxMX1BMVVMoZGV2aWQp
ICAoSVNfSEFTV0VMTChkZXZpZCkgfHwgSVNfQlJPQURXRUxMKGRldmlkKSkKIAogI2RlZmluZSBC
SVRTVE8obikJCShuID49IHNpemVvZihsb25nKSAqIDggPyB+MCA6ICgxVUwgPDwgKG4pKSAtIDEp
CkBAIC0yNDY0LDYgKzI0NjUsNyBAQCBzdGF0aWMgdm9pZCBkdW1wX2JyYXN3ZWxsKHZvaWQpCiBp
bnQgbWFpbihpbnQgYXJnYywgY2hhciAqKmFyZ3YpCiB7CiAJc3RydWN0IHBjaV9kZXZpY2UgKnBj
aV9kZXY7CisJc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAKIAlwY2lfZGV2ID0g
aW50ZWxfZ2V0X3BjaV9kZXZpY2UoKTsKIAlkZXZpZCA9IHBjaV9kZXYtPmRldmljZV9pZDsgLyog
WFhYIG5vdCB0cnVlIHdoZW4gbWFwcGluZyEgKi8KQEAgLTI0NzEsOSArMjQ3Myw5IEBAIGludCBt
YWluKGludCBhcmdjLCBjaGFyICoqYXJndikKIAlkb19zZWxmX3Rlc3RzKCk7CiAKIAlpZiAoYXJn
YyA9PSAyKQotCQlpbnRlbF9tbWlvX3VzZV9kdW1wX2ZpbGUoYXJndlsxXSk7CisJCWludGVsX21t
aW9fdXNlX2R1bXBfZmlsZSgmbW1pb19kYXRhLCBhcmd2WzFdKTsKIAllbHNlCi0JCWludGVsX21t
aW9fdXNlX3BjaV9iYXIocGNpX2Rldik7CisJCWludGVsX21taW9fdXNlX3BjaV9iYXIoJm1taW9f
ZGF0YSwgcGNpX2Rldik7CiAKIAlwcmludGYoIiVzIGF1ZGlvIHJlZ2lzdGVyczpcblxuIiwgaW50
ZWxfZ2V0X2RldmljZV9pbmZvKGRldmlkKS0+Y29kZW5hbWUpOwogCWlmIChJU19WQUxMRVlWSUVX
KGRldmlkKSkgewpkaWZmIC0tZ2l0IGEvdG9vbHMvaW50ZWxfYmFja2xpZ2h0LmMgYi90b29scy9p
bnRlbF9iYWNrbGlnaHQuYwppbmRleCAwNjdmZDQxODAuLmVkZjA2MDIyNCAxMDA2NDQKLS0tIGEv
dG9vbHMvaW50ZWxfYmFja2xpZ2h0LmMKKysrIGIvdG9vbHMvaW50ZWxfYmFja2xpZ2h0LmMKQEAg
LTM4LDkgKzM4LDEwIEBACiAKIGludCBtYWluKGludCBhcmdjLCBjaGFyKiogYXJndikKIHsKKwlz
dHJ1Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAl1aW50MzJfdCBjdXJyZW50LCBtYXg7
CiAKLQlpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKGludGVsX2dldF9wY2lfZGV2aWNlKCkpOworCWlu
dGVsX21taW9fdXNlX3BjaV9iYXIoJm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSk7
CiAKIAljdXJyZW50ID0gSU5SRUcoQkxDX1BXTV9DUFVfQ1RMKSAmIEJBQ0tMSUdIVF9EVVRZX0NZ
Q0xFX01BU0s7CiAJbWF4ID0gSU5SRUcoQkxDX1BXTV9QQ0hfQ1RMMikgPj4gMTY7CmRpZmYgLS1n
aXQgYS90b29scy9pbnRlbF9kaXNwbGF5X3BvbGxlci5jIGIvdG9vbHMvaW50ZWxfZGlzcGxheV9w
b2xsZXIuYwppbmRleCA1MWY1YjlhNTguLmY0Nzk3YTIwOSAxMDA2NDQKLS0tIGEvdG9vbHMvaW50
ZWxfZGlzcGxheV9wb2xsZXIuYworKysgYi90b29scy9pbnRlbF9kaXNwbGF5X3BvbGxlci5jCkBA
IC05NjIsNiArOTYyLDcgQEAgc3RhdGljIHZvaWQgX19hdHRyaWJ1dGVfXygobm9yZXR1cm4pKSB1
c2FnZShjb25zdCBjaGFyICpuYW1lKQogCiBpbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltd
KQogeworCXN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgbW1pb19kYXRhOwogCWludCBpOwogCWludCBw
aXBlID0gMCwgYml0ID0gMCwgdGFyZ2V0X3NjYW5saW5lID0gMCwgdGFyZ2V0X2Z1enogPSAxOwog
CWJvb2wgdGVzdF9waXhlbGNvdW50ID0gZmFsc2U7CkBAIC0xMTg3LDcgKzExODgsNyBAQCBpbnQg
bWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKQogCQlicmVhazsKIAl9CiAKLQlpbnRlbF9yZWdp
c3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAwLCAtMSk7CisJaW50ZWxf
cmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSAsaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwg
MCwgLTEpOwogCiAJcHJpbnRmKCIlcz9cbiIsIHRlc3RfbmFtZSh0ZXN0LCBwaXBlLCBiaXQsIHRl
c3RfcGl4ZWxjb3VudCkpOwogCkBAIC0xMjYyLDcgKzEyNjMsNyBAQCBpbnQgbWFpbihpbnQgYXJn
YywgY2hhciAqYXJndltdKQogCQlhc3NlcnQoMCk7CiAJfQogCi0JaW50ZWxfcmVnaXN0ZXJfYWNj
ZXNzX2ZpbmkoKTsKKwlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgmbW1pb19kYXRhKTsKIAog
CWlmIChxdWl0KQogCQlyZXR1cm4gMDsKZGlmZiAtLWdpdCBhL3Rvb2xzL2ludGVsX2ZvcmNld2Fr
ZWQuYyBiL3Rvb2xzL2ludGVsX2ZvcmNld2FrZWQuYwppbmRleCAwMmZiZjg4ODAuLjg3YjI2ZDQz
YSAxMDA2NDQKLS0tIGEvdG9vbHMvaW50ZWxfZm9yY2V3YWtlZC5jCisrKyBiL3Rvb2xzL2ludGVs
X2ZvcmNld2FrZWQuYwpAQCAtNTcsMTQgKzU3LDE1IEBAIGhlbHAoY2hhciAqcHJvZykgewogfQog
CiBzdGF0aWMgaW50Ci1pc19hbGl2ZSh2b2lkKSB7Citpc19hbGl2ZShzdHJ1Y3QgaW50ZWxfbW1p
b19kYXRhICptbWlvX2RhdGEpIHsKIAkvKiBSZWFkIHRoZSB0aW1lc3RhbXAsIHdoaWNoIHNob3Vs
ZCAqYWxtb3N0KiBhbHdheXMgYmUgITAgKi8KLQlyZXR1cm4gKGludGVsX3JlZ2lzdGVyX3JlYWQo
MHgyMzU4KSAhPSAwKTsKKwlyZXR1cm4gKGludGVsX3JlZ2lzdGVyX3JlYWQobW1pb19kYXRhLCAw
eDIzNTgpICE9IDApOwogfQogCiBpbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKQogewog
CWludCByZXQ7CisJc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAKIAlpZiAoYXJn
YyA+IDIgfHwgKGFyZ2MgPT0gMiAmJiAhc3RybmNtcChhcmd2WzFdLCAiLWgiLCAyKSkpIHsKIAkJ
aGVscChhcmd2WzFdKTsKQEAgLTgwLDcgKzgxLDcgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIg
KmFyZ3ZbXSkKIAkJSU5GT19QUklOVCgic3RhcnRlZCBkYWVtb24iKTsKIAl9CiAKLQlyZXQgPSBp
bnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAxLCAtMSk7
CisJcmV0ID0gaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0
X3BjaV9kZXZpY2UoKSwgMSwgLTEpOwogCWlmIChyZXQpIHsKIAkJSU5GT19QUklOVCgiQ291bGRu
J3QgaW5pdCByZWdpc3RlciBhY2Nlc3NcbiIpOwogCQlleGl0KDEpOwpAQCAtODgsMTYgKzg5LDE2
IEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pCiAJCUlORk9fUFJJTlQoIkZvcmNl
d2FrZSBsb2NrZWRcbiIpOwogCX0KIAl3aGlsZSgxKSB7Ci0JCWlmICghaXNfYWxpdmUoKSkgewor
CQlpZiAoIWlzX2FsaXZlKCZtbWlvX2RhdGEpKSB7CiAJCQlJTkZPX1BSSU5UKCJncHUgcmVzZXQ/
IHJlc3RhcnRpbmcgZGFlbW9uXG4iKTsKLQkJCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7
Ci0JCQlyZXQgPSBpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2Rldmlj
ZSgpLCAxLCAtMSk7CisJCQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgmbW1pb19kYXRhKTsK
KwkJCXJldCA9IGludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVsX2dl
dF9wY2lfZGV2aWNlKCksIDEsIC0xKTsKIAkJCWlmIChyZXQpCiAJCQkJSU5GT19QUklOVCgiUmVn
IGFjY2VzcyBpbml0IGZhaWxcbiIpOwogCQl9CiAJCXNsZWVwKDEpOwogCX0KLQlpbnRlbF9yZWdp
c3Rlcl9hY2Nlc3NfZmluaSgpOworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCZtbWlvX2Rh
dGEpOwogCUlORk9fUFJJTlQoIkZvcmNld2FrZSB1bmxvY2tcbiIpOwogCiAJaWYgKGRhZW1vbml6
ZWQpIHsKZGlmZiAtLWdpdCBhL3Rvb2xzL2ludGVsX2dwdV90aW1lLmMgYi90b29scy9pbnRlbF9n
cHVfdGltZS5jCmluZGV4IDU2ZDY1ZmUwNy4uMTFiZjczNTQxIDEwMDY0NAotLS0gYS90b29scy9p
bnRlbF9ncHVfdGltZS5jCisrKyBiL3Rvb2xzL2ludGVsX2dwdV90aW1lLmMKQEAgLTY1LDkgKzY1
LDEwIEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICoqYXJndikKIAl1aW50NjRfdCByaW5nX2lk
bGUgPSAwLCByaW5nX3RpbWUgPSAwOwogCXN0cnVjdCB0aW1ldmFsIHN0YXJ0LCBlbmQ7CiAJc3Rh
dGljIHN0cnVjdCBydXNhZ2UgcnVzYWdlOworCXN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgbW1pb19k
YXRhOwogCWludCBzdGF0dXM7CiAKLQlpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKGludGVsX2dldF9w
Y2lfZGV2aWNlKCkpOworCWludGVsX21taW9fdXNlX3BjaV9iYXIoJm1taW9fZGF0YSwgaW50ZWxf
Z2V0X3BjaV9kZXZpY2UoKSk7CiAKIAlpZiAoYXJnYyA9PSAxKSB7CiAJCWZwcmludGYoc3RkZXJy
LCAidXNhZ2U6ICVzIGNtZCBbYXJncy4uLl1cbiIsIGFyZ3ZbMF0pOwpkaWZmIC0tZ2l0IGEvdG9v
bHMvaW50ZWxfaW5mb2ZyYW1lcy5jIGIvdG9vbHMvaW50ZWxfaW5mb2ZyYW1lcy5jCmluZGV4IDJl
ZjVkNGZkZC4uZDRiZjUyOGMyIDEwMDY0NAotLS0gYS90b29scy9pbnRlbF9pbmZvZnJhbWVzLmMK
KysrIGIvdG9vbHMvaW50ZWxfaW5mb2ZyYW1lcy5jCkBAIC0yNjQsNiArMjY0LDcgQEAgY29uc3Qg
Y2hhciAqZGlwX2ZyZXF1ZW5jeV9uYW1lc1tdID0gewogCiBzdHJ1Y3QgcGNpX2RldmljZSAqcGNp
X2RldjsKIGludCBnZW4gPSAwOworc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAK
IHN0YXRpYyBjb25zdCBjaGFyICpzcGRfc291cmNlX3RvX3N0cmluZyhTb3VyY2VEZXZpY2Ugc291
cmNlKQogewpAQCAtMTEwOCw3ICsxMTA5LDcgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFy
Z3ZbXSkKIAkgICAgICAgIiBwZXJmZWN0bHk6IHRoZSBLZXJuZWwgbWlnaHQgdW5kbyBvdXIgY2hh
bmdlcy5cbiIpOwogCiAJcGNpX2RldiA9IGludGVsX2dldF9wY2lfZGV2aWNlKCk7Ci0JaW50ZWxf
cmVnaXN0ZXJfYWNjZXNzX2luaXQocGNpX2RldiwgMCwgLTEpOworCWludGVsX3JlZ2lzdGVyX2Fj
Y2Vzc19pbml0KCZtbWlvX2RhdGEsIHBjaV9kZXYsIDAsIC0xKTsKIAlpbnRlbF9jaGVja19wY2go
KTsKIAogCWlmIChJU19HRU40KHBjaV9kZXYtPmRldmljZV9pZCkpCkBAIC0xMjU2LDYgKzEyNTcs
NiBAQCBpbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKQogCX0KIAogb3V0OgotCWludGVs
X3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJm1t
aW9fZGF0YSk7CiAJcmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBhL3Rvb2xzL2ludGVsX2wzX3Bh
cml0eS5jIGIvdG9vbHMvaW50ZWxfbDNfcGFyaXR5LmMKaW5kZXggNDE3OWM1YWUxLi4wNmExODVj
OTEgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2ludGVsX2wzX3Bhcml0eS5jCisrKyBiL3Rvb2xzL2ludGVs
X2wzX3Bhcml0eS5jCkBAIC0xNzYsNiArMTc2LDcgQEAgc3RhdGljIHZvaWQgdXNhZ2UoY29uc3Qg
Y2hhciAqbmFtZSkKIAogaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIHsKKwlzdHJ1
Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAljb25zdCBjaGFyICpwYXRoW1JFQUxfTUFY
X1NMSUNFU10gPSB7ImwzX3Bhcml0eSIsICJsM19wYXJpdHlfc2xpY2VfMSJ9OwogCWludCByb3cg
PSAwLCBiYW5rID0gMCwgc2JhbmsgPSAwOwogCWludCBmZFtSRUFMX01BWF9TTElDRVNdID0gezB9
LCByZXQsIGk7CkBAIC0xODksNyArMTkwLDcgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFy
Z3ZbXSkKIAlpZiAoaW50ZWxfZ2VuKGRldmlkKSA8IDcgfHwgSVNfVkFMTEVZVklFVyhkZXZpZCkp
CiAJCWV4aXQoNzcpOwogCi0JYXNzZXJ0KGludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KGludGVs
X2dldF9wY2lfZGV2aWNlKCksIDAsIGRldmljZSkgPT0gMCk7CisJYXNzZXJ0KGludGVsX3JlZ2lz
dGVyX2FjY2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIGRl
dmljZSkgPT0gMCk7CiAKIAlkaXIgPSBpZ3Rfc3lzZnNfb3BlbihkZXZpY2UpOwogCkBAIC0yMTcs
NyArMjE4LDcgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAkgKiBub3cuIEp1
c3QgYmUgYXdhcmUgb2YgdGhpcyBpZiBmb3Igc29tZSByZWFzb24gYSBoYW5nIGlzIHJlcG9ydGVk
CiAJICogd2hlbiB1c2luZyB0aGlzIHRvb2wuCiAJICovCi0JZGZ0ID0gaW50ZWxfcmVnaXN0ZXJf
cmVhZCgweGIwMzgpOworCWRmdCA9IGludGVsX3JlZ2lzdGVyX3JlYWQoJm1taW9fZGF0YSwgMHhi
MDM4KTsKIAogCXdoaWxlICgxKSB7CiAJCWludCBjLCBvcHRpb25faW5kZXggPSAwOwpAQCAtMzY2
LDEwICszNjcsMTAgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAkJCQlhc3Nl
cnQoaSA8IDIpOwogCQkJCWRmdCB8PSBpIDw8IDE7IC8qIHNsaWNlICovCiAJCQkJZGZ0IHw9IDEg
PDwgMDsgLyogZW5hYmxlICovCi0JCQkJaW50ZWxfcmVnaXN0ZXJfd3JpdGUoMHhiMDM4LCBkZnQp
OworCQkJCWludGVsX3JlZ2lzdGVyX3dyaXRlKCZtbWlvX2RhdGEsIDB4YjAzOCwgZGZ0KTsKIAkJ
CQlicmVhazsKIAkJCWNhc2UgJ3UnOgotCQkJCWludGVsX3JlZ2lzdGVyX3dyaXRlKDB4YjAzOCwg
ZGZ0ICYgfigxPDwwKSk7CisJCQkJaW50ZWxfcmVnaXN0ZXJfd3JpdGUoJm1taW9fZGF0YSAsMHhi
MDM4LCBkZnQgJiB+KDE8PDApKTsKIAkJCQlicmVhazsKIAkJCWNhc2UgJ0wnOgogCQkJCWJyZWFr
OwpAQCAtMzc4LDcgKzM3OSw3IEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pCiAJ
CX0KIAl9CiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgpOworCWludGVsX3JlZ2lzdGVy
X2FjY2Vzc19maW5pKCZtbWlvX2RhdGEpOwogCWlmIChhY3Rpb24gPT0gJ2wnKQogCQlleGl0KEVY
SVRfU1VDQ0VTUyk7CiAKZGlmZiAtLWdpdCBhL3Rvb2xzL2ludGVsX2xpZC5jIGIvdG9vbHMvaW50
ZWxfbGlkLmMKaW5kZXggMzdjNmJhNWU0Li4yYTFkOTgwMGEgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2lu
dGVsX2xpZC5jCisrKyBiL3Rvb2xzL2ludGVsX2xpZC5jCkBAIC0xMTcsOSArMTE3LDEwIEBAIG91
dDoKIAogaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKiphcmd2KQogeworCXN0cnVjdCBpbnRlbF9t
bWlvX2RhdGEgbW1pb19kYXRhOwogCWludCBzd2YxNCwgYWNwaV9saWQ7CiAKLQlpbnRlbF9tbWlv
X3VzZV9wY2lfYmFyKGludGVsX2dldF9wY2lfZGV2aWNlKCkpOworCWludGVsX21taW9fdXNlX3Bj
aV9iYXIoJm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSk7CiAKIAl3aGlsZSAoMSkg
ewogCQlzd2YxNCA9IElOUkVHKFNXRjE0KTsKZGlmZiAtLWdpdCBhL3Rvb2xzL2ludGVsX3BhbmVs
X2ZpdHRlci5jIGIvdG9vbHMvaW50ZWxfcGFuZWxfZml0dGVyLmMKaW5kZXggMTM3ZWY2MWFiLi42
NDA3ODcwNTMgMTAwNjQ0Ci0tLSBhL3Rvb2xzL2ludGVsX3BhbmVsX2ZpdHRlci5jCisrKyBiL3Rv
b2xzL2ludGVsX3BhbmVsX2ZpdHRlci5jCkBAIC0yNzMsNiArMjczLDcgQEAgaW50IG1haW4gKGlu
dCBhcmdjLCBjaGFyICphcmd2W10pCiAJYm9vbCBkb19kaXNhYmxlID0gZmFsc2UsIGRvX2R1bXAg
PSBmYWxzZSwgZG9fdXNhZ2UgPSBmYWxzZTsKIAlzdHJ1Y3QgcGNpX2RldmljZSAqcGNpX2RldjsK
IAl1aW50MzJfdCBkZXZpZDsKKwlzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAog
CXByaW50ZigiV0FSTklORzpcbiIKIAkgICAgICAgIlRoaXMgdG9vbCBpcyBhIHdvcmthcm91bmQg
Zm9yIHBlb3BsZSB0aGF0IGRvbid0IGhhdmUgYSBLZXJuZWwgIgpAQCAtMjgwLDcgKzI4MSw3IEBA
IGludCBtYWluIChpbnQgYXJnYywgY2hhciAqYXJndltdKQogCSAgICAgICAic29sdXRpb24gdGhh
dCBtYXkgb3IgbWF5IG5vdCB3b3JrLiBVc2UgaXQgYXQgeW91ciBvd24gcmlzay5cbiIpOwogCiAJ
cGNpX2RldiA9IGludGVsX2dldF9wY2lfZGV2aWNlKCk7Ci0JaW50ZWxfcmVnaXN0ZXJfYWNjZXNz
X2luaXQocGNpX2RldiwgMCwgLTEpOworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KCZtbWlv
X2RhdGEsIHBjaV9kZXYsIDAsIC0xKTsKIAlkZXZpZCA9IHBjaV9kZXYtPmRldmljZV9pZDsKIAog
CWlmICghSEFTX1BDSF9TUExJVChkZXZpZCkpIHsKQEAgLTM0Miw2ICszNDMsNiBAQCBpbnQgbWFp
biAoaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAl9CiAKIG91dDoKLQlpbnRlbF9yZWdpc3Rlcl9h
Y2Nlc3NfZmluaSgpOworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCZtbWlvX2RhdGEpOwog
CXJldHVybiByZXQ7CiB9CmRpZmYgLS1naXQgYS90b29scy9pbnRlbF9wZXJmX2NvdW50ZXJzLmMg
Yi90b29scy9pbnRlbF9wZXJmX2NvdW50ZXJzLmMKaW5kZXggNTBjNGJjZTYxLi41ODI0ZDljMWIg
MTAwNjQ0Ci0tLSBhL3Rvb2xzL2ludGVsX3BlcmZfY291bnRlcnMuYworKysgYi90b29scy9pbnRl
bF9wZXJmX2NvdW50ZXJzLmMKQEAgLTQ0MSw2ICs0NDEsNyBAQCBnZW43X2dldF9jb3VudGVycyh2
b2lkKQogaW50CiBtYWluKGludCBhcmdjLCBjaGFyICoqYXJndikKIHsKKwlzdHJ1Y3QgaW50ZWxf
bW1pb19kYXRhIG1taW9fZGF0YTsKIAl1aW50MzJfdCBkZXZpZDsKIAlpbnQgY291bnRlcl9mb3Jt
YXQ7CiAJaW50IGNvdW50ZXJfY291bnQ7CkBAIC00ODMsMTAgKzQ4NCwxMSBAQCBtYWluKGludCBh
cmdjLCBjaGFyICoqYXJndikKIAogCWlmIChvYWNvbnRyb2wpIHsKIAkJLyogRm9yY2V3YWtlICov
Ci0JCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAs
IGZkKTsKKwkJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0
X3BjaV9kZXZpY2UoKSwKKwkJCQkwLCBmZCk7CiAKIAkJLyogRW5hYmxlIHBlcmZvcm1hbmNlIGNv
dW50ZXJzICovCi0JCWludGVsX3JlZ2lzdGVyX3dyaXRlKE9BQ09OVFJPTCwKKwkJaW50ZWxfcmVn
aXN0ZXJfd3JpdGUoJm1taW9fZGF0YSwgT0FDT05UUk9MLAogCQkJY291bnRlcl9mb3JtYXQgPDwg
T0FDT05UUk9MX0NPVU5URVJfU0VMRUNUX1NISUZUIHwKIAkJCVBFUkZPUk1BTkNFX0NPVU5URVJf
RU5BQkxFKTsKIAl9CkBAIC01MjAsMTAgKzUyMiwxMCBAQCBtYWluKGludCBhcmdjLCBjaGFyICoq
YXJndikKIAogCWlmIChvYWNvbnRyb2wpIHsKIAkJLyogRGlzYWJsZSBwZXJmb3JtYW5jZSBjb3Vu
dGVycyAqLwotCQlpbnRlbF9yZWdpc3Rlcl93cml0ZShPQUNPTlRST0wsIDApOworCQlpbnRlbF9y
ZWdpc3Rlcl93cml0ZSgmbW1pb19kYXRhLCBPQUNPTlRST0wsIDApOwogCiAJCS8qIEZvcmNld2Fr
ZSAqLwotCQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgpOworCQlpbnRlbF9yZWdpc3Rlcl9h
Y2Nlc3NfZmluaSgmbW1pb19kYXRhKTsKIAl9CiAKIAlmcmVlKHRvdGFscyk7CmRpZmYgLS1naXQg
YS90b29scy9pbnRlbF9yZWcuYyBiL3Rvb2xzL2ludGVsX3JlZy5jCmluZGV4IGU1MTc5NTZiOC4u
ODQ3ZmRiZWQ4IDEwMDY0NAotLS0gYS90b29scy9pbnRlbF9yZWcuYworKysgYi90b29scy9pbnRl
bF9yZWcuYwpAQCAtNTcsNiArNTcsNyBAQCBzdGF0aWMgaW5saW5lIGludCBfbm90X3N1cHBvcnRl
ZCh2b2lkKQogCiBzdHJ1Y3QgY29uZmlnIHsKIAlzdHJ1Y3QgcGNpX2RldmljZSAqcGNpX2RldjsK
KwlzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAljaGFyICptbWlvZmlsZTsKIAl1
aW50MzJfdCBkZXZpZDsKIApAQCAtMzg3LDcgKzM4OCw3IEBAIHN0YXRpYyBpbnQgcmVhZF9yZWdp
c3RlcihzdHJ1Y3QgY29uZmlnICpjb25maWcsIHN0cnVjdCByZWcgKnJlZywgdWludDMyX3QgKnZh
bHApCiAJCQkJcmVnLT5wb3J0X2Rlc2MubmFtZSk7CiAJCQlyZXR1cm4gLTE7CiAJCX0KLQkJdmFs
ID0gaW50ZWxfaW9zZl9zYl9yZWFkKHJlZy0+cG9ydF9kZXNjLnBvcnQsIHJlZy0+YWRkcik7CisJ
CXZhbCA9IGludGVsX2lvc2Zfc2JfcmVhZCgmY29uZmlnLT5tbWlvX2RhdGEsIHJlZy0+cG9ydF9k
ZXNjLnBvcnQsIHJlZy0+YWRkcik7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCWZwcmludGYoc3Rk
ZXJyLCAicG9ydCAlZCBub3Qgc3VwcG9ydGVkXG4iLCByZWctPnBvcnRfZGVzYy5wb3J0KTsKQEAg
LTQ1OCw3ICs0NTksNyBAQCBzdGF0aWMgaW50IHdyaXRlX3JlZ2lzdGVyKHN0cnVjdCBjb25maWcg
KmNvbmZpZywgc3RydWN0IHJlZyAqcmVnLCB1aW50MzJfdCB2YWwpCiAJCQkJcmVnLT5wb3J0X2Rl
c2MubmFtZSk7CiAJCQlyZXR1cm4gLTE7CiAJCX0KLQkJaW50ZWxfaW9zZl9zYl93cml0ZShyZWct
PnBvcnRfZGVzYy5wb3J0LCByZWctPmFkZHIsIHZhbCk7CisJCWludGVsX2lvc2Zfc2Jfd3JpdGUo
JmNvbmZpZy0+bW1pb19kYXRhLCByZWctPnBvcnRfZGVzYy5wb3J0LCByZWctPmFkZHIsIHZhbCk7
CiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCWZwcmludGYoc3RkZXJyLCAicG9ydCAlZCBub3Qgc3Vw
cG9ydGVkXG4iLCByZWctPnBvcnRfZGVzYy5wb3J0KTsKQEAgLTU1Miw5ICs1NTMsOSBAQCBzdGF0
aWMgaW50IGludGVsX3JlZ19yZWFkKHN0cnVjdCBjb25maWcgKmNvbmZpZywgaW50IGFyZ2MsIGNo
YXIgKmFyZ3ZbXSkKIAl9CiAKIAlpZiAoY29uZmlnLT5tbWlvZmlsZSkKLQkJaW50ZWxfbW1pb191
c2VfZHVtcF9maWxlKGNvbmZpZy0+bW1pb2ZpbGUpOworCQlpbnRlbF9tbWlvX3VzZV9kdW1wX2Zp
bGUoJmNvbmZpZy0+bW1pb19kYXRhLCBjb25maWctPm1taW9maWxlKTsKIAllbHNlCi0JCWludGVs
X3JlZ2lzdGVyX2FjY2Vzc19pbml0KGNvbmZpZy0+cGNpX2RldiwgMCwgLTEpOworCQlpbnRlbF9y
ZWdpc3Rlcl9hY2Nlc3NfaW5pdCgmY29uZmlnLT5tbWlvX2RhdGEsIGNvbmZpZy0+cGNpX2Rldiwg
MCwgLTEpOwogCiAJZm9yIChpID0gMTsgaSA8IGFyZ2M7IGkrKykgewogCQlzdHJ1Y3QgcmVnIHJl
ZzsKQEAgLTU3MCw3ICs1NzEsNyBAQCBzdGF0aWMgaW50IGludGVsX3JlZ19yZWFkKHN0cnVjdCBj
b25maWcgKmNvbmZpZywgaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAkJfQogCX0KIAotCWludGVs
X3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJmNv
bmZpZy0+bW1pb19kYXRhKTsKIAogCXJldHVybiBFWElUX1NVQ0NFU1M7CiB9CkBAIC01ODQsNyAr
NTg1LDcgQEAgc3RhdGljIGludCBpbnRlbF9yZWdfd3JpdGUoc3RydWN0IGNvbmZpZyAqY29uZmln
LCBpbnQgYXJnYywgY2hhciAqYXJndltdKQogCQlyZXR1cm4gRVhJVF9GQUlMVVJFOwogCX0KIAot
CWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KGNvbmZpZy0+cGNpX2RldiwgMCwgLTEpOworCWlu
dGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KCZjb25maWctPm1taW9fZGF0YSwgY29uZmlnLT5wY2lf
ZGV2LCAwLCAtMSk7CiAKIAlmb3IgKGkgPSAxOyBpIDwgYXJnYzsgaSArPSAyKSB7CiAJCXN0cnVj
dCByZWcgcmVnOwpAQCAtNjA5LDcgKzYxMCw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfcmVnX3dyaXRl
KHN0cnVjdCBjb25maWcgKmNvbmZpZywgaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAkJd3JpdGVf
cmVnaXN0ZXIoY29uZmlnLCAmcmVnLCB2YWwpOwogCX0KIAotCWludGVsX3JlZ2lzdGVyX2FjY2Vz
c19maW5pKCk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJmNvbmZpZy0+bW1pb19kYXRh
KTsKIAogCXJldHVybiBFWElUX1NVQ0NFU1M7CiB9CkBAIC02MjAsOSArNjIxLDkgQEAgc3RhdGlj
IGludCBpbnRlbF9yZWdfZHVtcChzdHJ1Y3QgY29uZmlnICpjb25maWcsIGludCBhcmdjLCBjaGFy
ICphcmd2W10pCiAJaW50IGk7CiAKIAlpZiAoY29uZmlnLT5tbWlvZmlsZSkKLQkJaW50ZWxfbW1p
b191c2VfZHVtcF9maWxlKGNvbmZpZy0+bW1pb2ZpbGUpOworCQlpbnRlbF9tbWlvX3VzZV9kdW1w
X2ZpbGUoJmNvbmZpZy0+bW1pb19kYXRhLCBjb25maWctPm1taW9maWxlKTsKIAllbHNlCi0JCWlu
dGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KGNvbmZpZy0+cGNpX2RldiwgMCwgLTEpOworCQlpbnRl
bF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdCgmY29uZmlnLT5tbWlvX2RhdGEsIGNvbmZpZy0+cGNpX2Rl
diwgMCwgLTEpOwogCiAJZm9yIChpID0gMDsgaSA8IGNvbmZpZy0+cmVnY291bnQ7IGkrKykgewog
CQlyZWcgPSAmY29uZmlnLT5yZWdzW2ldOwpAQCAtNjM0LDcgKzYzNSw3IEBAIHN0YXRpYyBpbnQg
aW50ZWxfcmVnX2R1bXAoc3RydWN0IGNvbmZpZyAqY29uZmlnLCBpbnQgYXJnYywgY2hhciAqYXJn
dltdKQogCQlkdW1wX3JlZ2lzdGVyKGNvbmZpZywgJmNvbmZpZy0+cmVnc1tpXSk7CiAJfQogCi0J
aW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoKTsKKwlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmlu
aSgmY29uZmlnLT5tbWlvX2RhdGEpOwogCiAJcmV0dXJuIEVYSVRfU1VDQ0VTUzsKIH0KQEAgLTY0
OCw3ICs2NDksNyBAQCBzdGF0aWMgaW50IGludGVsX3JlZ19zbmFwc2hvdChzdHJ1Y3QgY29uZmln
ICpjb25maWcsIGludCBhcmdjLCBjaGFyICphcmd2W10pCiAJCXJldHVybiBFWElUX0ZBSUxVUkU7
CiAJfQogCi0JaW50ZWxfbW1pb191c2VfcGNpX2Jhcihjb25maWctPnBjaV9kZXYpOworCWludGVs
X21taW9fdXNlX3BjaV9iYXIoJmNvbmZpZy0+bW1pb19kYXRhLCBjb25maWctPnBjaV9kZXYpOwog
CiAJLyogWFhYOiBlcnJvciBoYW5kbGluZyAqLwogCWlmICh3cml0ZSgxLCBpZ3RfZ2xvYmFsX21t
aW8sIGNvbmZpZy0+cGNpX2Rldi0+cmVnaW9uc1ttbWlvX2Jhcl0uc2l6ZSkgPT0gLTEpCmRpZmYg
LS1naXQgYS90b29scy9pbnRlbF9yZWdfY2hlY2tlci5jIGIvdG9vbHMvaW50ZWxfcmVnX2NoZWNr
ZXIuYwppbmRleCA2YmRlNjNlY2UuLjNmOTBkZTgyNCAxMDA2NDQKLS0tIGEvdG9vbHMvaW50ZWxf
cmVnX2NoZWNrZXIuYworKysgYi90b29scy9pbnRlbF9yZWdfY2hlY2tlci5jCkBAIC0zNDIsMTAg
KzM0MiwxMSBAQCBjaGVja19kcGZjX2NvbnRyb2xfc2Eodm9pZCkKIGludCBtYWluKGludCBhcmdj
LCBjaGFyKiogYXJndikKIHsKIAlzdHJ1Y3QgcGNpX2RldmljZSAqZGV2OworCXN0cnVjdCBpbnRl
bF9tbWlvX2RhdGEgbW1pb19kYXRhOwogCiAJZGV2ID0gaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKTsK
IAlkZXZpZCA9IGRldi0+ZGV2aWNlX2lkOwotCWludGVsX21taW9fdXNlX3BjaV9iYXIoZGV2KTsK
KwlpbnRlbF9tbWlvX3VzZV9wY2lfYmFyKCZtbWlvX2RhdGEsIGRldik7CiAKIAlpZiAoSVNfR0VO
NyhkZXZpZCkpCiAJCWdlbiA9IDc7CmRpZmYgLS1naXQgYS90b29scy9pbnRlbF93YXRlcm1hcmsu
YyBiL3Rvb2xzL2ludGVsX3dhdGVybWFyay5jCmluZGV4IGU3MWMzZDljZi4uMTRkMWFlMGQ4IDEw
MDY0NAotLS0gYS90b29scy9pbnRlbF93YXRlcm1hcmsuYworKysgYi90b29scy9pbnRlbF93YXRl
cm1hcmsuYwpAQCAtMjM3LDYgKzIzNyw3IEBAIHN0YXRpYyBjb25zdCBjaGFyICpza2xfbnYxMl9i
dWZfY2ZnX3JlZ19uYW1lKGludCBwaXBlLCBpbnQgcGxhbmUpCiAKIHN0YXRpYyB2b2lkIHNrbF93
bV9kdW1wKHZvaWQpCiB7CisJc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAJaW50
IHBpcGUsIHBsYW5lLCBsZXZlbDsKIAlpbnQgbnVtX3BpcGVzID0gMzsKIAlpbnQgbWF4X3BsYW5l
cyA9IHNrbF9tYXhfcGxhbmVzKGRldmlkKTsKQEAgLTI0OSw3ICsyNTAsNyBAQCBzdGF0aWMgdm9p
ZCBza2xfd21fZHVtcCh2b2lkKQogCXVpbnQzMl90IHBsYW5lX2N0bFtudW1fcGlwZXNdW21heF9w
bGFuZXNdOwogCXVpbnQzMl90IHdtX2xpbmV0aW1lW251bV9waXBlc107CiAKLQlpbnRlbF9yZWdp
c3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAwLCAtMSk7CisJaW50ZWxf
cmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwg
MCwgLTEpOwogCiAJZm9yIChwaXBlID0gMDsgcGlwZSA8IG51bV9waXBlczsgcGlwZSsrKSB7CiAJ
CWludCBudW1fcGxhbmVzID0gc2tsX251bV9wbGFuZXMoZGV2aWQsIHBpcGUpOwpAQCAtNDU4LDYg
KzQ1OSw3IEBAIHN0YXRpYyB2b2lkIHNrbF93bV9kdW1wKHZvaWQpCiAKIHN0YXRpYyB2b2lkIGls
a193bV9kdW1wKHZvaWQpCiB7CisJc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAJ
aW50IGk7CiAJdWludDMyX3QgZHNwY250clszXTsKIAl1aW50MzJfdCBzcGNudHJbM107CkBAIC00
NjksNyArNDcxLDcgQEAgc3RhdGljIHZvaWQgaWxrX3dtX2R1bXAodm9pZCkKIAlpbnQgbnVtX3Bp
cGVzID0gaW50ZWxfZ2VuKGRldmlkKSA+PSA3ID8gMyA6IDI7CiAJc3RydWN0IGlsa193bSB3bSA9
IHt9OwogCi0JaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoaW50ZWxfZ2V0X3BjaV9kZXZpY2Uo
KSwgMCwgLTEpOworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0KCZtbWlvX2RhdGEsIGludGVs
X2dldF9wY2lfZGV2aWNlKCksIDAsIC0xKTsKIAogCWZvciAoaSA9IDA7IGkgPCBudW1fcGlwZXM7
IGkrKykgewogCQlkc3BjbnRyW2ldID0gcmVhZF9yZWcoMHg3MDE4MCArIGkgKiAweDEwMDApOwpA
QCAtNTA1LDcgKzUwNyw3IEBAIHN0YXRpYyB2b2lkIGlsa193bV9kdW1wKHZvaWQpCiAJaWYgKElT
X0JST0FEV0VMTChkZXZpZCkgfHwgSVNfSEFTV0VMTChkZXZpZCkpCiAJCXdtX21pc2MgPSByZWFk
X3JlZygweDQ1MjYwKTsKIAotCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxf
cmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJm1taW9fZGF0YSk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgbnVt
X3BpcGVzOyBpKyspCiAJCXByaW50ZigiICAgIFdNX1BJUEVfJWMgPSAweCUwOHhcbiIsIHBpcGVf
bmFtZShpKSwgd21fcGlwZVtpXSk7CkBAIC02MTAsNiArNjEyLDcgQEAgc3RhdGljIHZvaWQgaWxr
X3dtX2R1bXAodm9pZCkKIAogc3RhdGljIHZvaWQgdmx2X3dtX2R1bXAodm9pZCkKIHsKKwlzdHJ1
Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAlpbnQgaTsKIAl1bnNpZ25lZCBpbnQgbnVt
X3BpcGVzID0gSVNfQ0hFUlJZVklFVyhkZXZpZCkgPyAzIDogMjsKIAl1aW50MzJfdCBkc3BhcmIs
IGRzcGFyYjIsIGRzcGFyYjM7CkBAIC02MTksNyArNjIyLDcgQEAgc3RhdGljIHZvaWQgdmx2X3dt
X2R1bXAodm9pZCkKIAl1aW50MzJfdCBkc3Bfc3NfcG0sIGRkcl9zZXR1cDI7CiAJc3RydWN0IGdt
Y2hfd20gd21zW01BWF9QTEFORV0gPSB7fTsKIAotCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0
KGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIC0xKTsKKwlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3Nf
aW5pdCgmbW1pb19kYXRhLCBpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAwLCAtMSk7CiAKIAlkc3Bh
cmIgPSByZWFkX3JlZygweDcwMDMwKTsKIAlkc3BhcmIyID0gcmVhZF9yZWcoMHg3MDA2MCk7CkBA
IC02NTAsMTMgKzY1MywxMyBAQCBzdGF0aWMgdm9pZCB2bHZfd21fZHVtcCh2b2lkKQogCiAJCWRk
bDMgPSByZWFkX3JlZygweDcwMDU4KTsKIAotCQlpbnRlbF9wdW5pdF9yZWFkKDB4MzYsICZkc3Bf
c3NfcG0pOwotCQlpbnRlbF9wdW5pdF9yZWFkKDB4MTM5LCAmZGRyX3NldHVwMik7CisJCWludGVs
X3B1bml0X3JlYWQoJm1taW9fZGF0YSwgMHgzNiwgJmRzcF9zc19wbSk7CisJCWludGVsX3B1bml0
X3JlYWQoJm1taW9fZGF0YSwgMHgxMzksICZkZHJfc2V0dXAyKTsKIAl9IGVsc2UgewogCQlmdzcg
PSByZWFkX3JlZygweDcwMDdjKTsKIAl9CiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgp
OworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCZtbWlvX2RhdGEpOwogCiAJcHJpbnRmKCIg
ICAgICAgIEZXMSA9IDB4JTA4eFxuIiwgZncxKTsKIAlwcmludGYoIiAgICAgICAgRlcyID0gMHgl
MDh4XG4iLCBmdzIpOwpAQCAtODI3LDYgKzgzMCw3IEBAIHN0YXRpYyB2b2lkIHZsdl93bV9kdW1w
KHZvaWQpCiAKIHN0YXRpYyB2b2lkIGc0eF93bV9kdW1wKHZvaWQpCiB7CisJc3RydWN0IGludGVs
X21taW9fZGF0YSBtbWlvX2RhdGE7CiAJaW50IGk7CiAJdWludDMyX3QgZHNwYWNudHIsIGRzcGJj
bnRyOwogCXVpbnQzMl90IGRzcGFyYjsKQEAgLTgzNSw3ICs4MzksNyBAQCBzdGF0aWMgdm9pZCBn
NHhfd21fZHVtcCh2b2lkKQogCXVpbnQzMl90IG1pX2FyYl9zdGF0ZTsKIAlzdHJ1Y3QgZ21jaF93
bSB3bXNbTUFYX1BMQU5FXSA9IHt9OwogCi0JaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoaW50
ZWxfZ2V0X3BjaV9kZXZpY2UoKSwgMCwgLTEpOworCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19pbml0
KCZtbWlvX2RhdGEsIGludGVsX2dldF9wY2lfZGV2aWNlKCksIDAsIC0xKTsKIAogCWRzcGFjbnRy
ID0gcmVhZF9yZWcoMHg3MDE4MCk7CiAJZHNwYmNudHIgPSByZWFkX3JlZygweDcxMTgwKTsKQEAg
LTg0Niw3ICs4NTAsNyBAQCBzdGF0aWMgdm9pZCBnNHhfd21fZHVtcCh2b2lkKQogCW1pX2Rpc3Bs
YXlfcG93ZXJfZG93biA9IHJlYWRfcmVnKDB4MjBlMCk7CiAJbWlfYXJiX3N0YXRlID0gcmVhZF9y
ZWcoMHgyMGU0KTsKIAotCWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxfcmVn
aXN0ZXJfYWNjZXNzX2ZpbmkoJm1taW9fZGF0YSk7CiAKIAlwcmludGYoIiAgICAgICAgICAgICBE
U1BBQ05UUiA9IDB4JTA4eFxuIiwgZHNwYWNudHIpOwogCXByaW50ZigiICAgICAgICAgICAgIERT
UEJDTlRSID0gMHglMDh4XG4iLCBkc3BiY250cik7CkBAIC05MTMsNiArOTE3LDcgQEAgc3RhdGlj
IHZvaWQgZzR4X3dtX2R1bXAodm9pZCkKIAogc3RhdGljIHZvaWQgZ2VuNF93bV9kdW1wKHZvaWQp
CiB7CisJc3RydWN0IGludGVsX21taW9fZGF0YSBtbWlvX2RhdGE7CiAJaW50IGk7CiAJaW50IHRv
dGFsc2l6ZSA9IElTX0NSRVNUTElORShkZXZpZCkgPyAxMjggOiA5NjsKIAl1aW50MzJfdCBkc3Bh
cmI7CkBAIC05MjEsNyArOTI2LDcgQEAgc3RhdGljIHZvaWQgZ2VuNF93bV9kdW1wKHZvaWQpCiAJ
dWludDMyX3QgbWlfYXJiX3N0YXRlOwogCXN0cnVjdCBnbWNoX3dtIHdtc1tNQVhfUExBTkVdID0g
e307CiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgp
LCAwLCAtMSk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxf
Z2V0X3BjaV9kZXZpY2UoKSwgMCwgLTEpOwogCiAJZHNwYXJiID0gcmVhZF9yZWcoMHg3MDAzMCk7
CiAJZncxID0gcmVhZF9yZWcoMHg3MDAzNCk7CkBAIC05MzAsNyArOTM1LDcgQEAgc3RhdGljIHZv
aWQgZ2VuNF93bV9kdW1wKHZvaWQpCiAJbWlfZGlzcGxheV9wb3dlcl9kb3duID0gcmVhZF9yZWco
MHgyMGUwKTsKIAltaV9hcmJfc3RhdGUgPSByZWFkX3JlZygweDIwZTQpOwogCi0JaW50ZWxfcmVn
aXN0ZXJfYWNjZXNzX2ZpbmkoKTsKKwlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgmbW1pb19k
YXRhKTsKIAogCXByaW50ZigiICAgICAgICAgICAgICAgICAgRlcxID0gMHglMDh4XG4iLCBmdzEp
OwogCXByaW50ZigiICAgICAgICAgICAgICAgICAgRlcyID0gMHglMDh4XG4iLCBmdzIpOwpAQCAt
OTgzLDYgKzk4OCw3IEBAIHN0YXRpYyB2b2lkIGdlbjRfd21fZHVtcCh2b2lkKQogCiBzdGF0aWMg
dm9pZCBwbnZfd21fZHVtcCh2b2lkKQogeworCXN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgbW1pb19k
YXRhOwogCWludCBpOwogCWludCB0b3RhbHNpemUgPSA5NjsgLyogRklYTUU/ICovCiAJdWludDMy
X3QgZHNwYXJiOwpAQCAtOTkyLDcgKzk5OCw3IEBAIHN0YXRpYyB2b2lkIHBudl93bV9kdW1wKHZv
aWQpCiAJdWludDMyX3QgY2JyOwogCXN0cnVjdCBnbWNoX3dtIHdtc1tNQVhfUExBTkVdID0ge307
CiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAw
LCAtMSk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0
X3BjaV9kZXZpY2UoKSwgMCwgLTEpOwogCiAJZHNwYXJiID0gcmVhZF9yZWcoMHg3MDAzMCk7CiAJ
ZncxID0gcmVhZF9yZWcoMHg3MDAzNCk7CkBAIC0xMDAyLDcgKzEwMDgsNyBAQCBzdGF0aWMgdm9p
ZCBwbnZfd21fZHVtcCh2b2lkKQogCW1pX2Rpc3BsYXlfcG93ZXJfZG93biA9IHJlYWRfcmVnKDB4
MjBlMCk7CiAJbWlfYXJiX3N0YXRlID0gcmVhZF9yZWcoMHgyMGU0KTsKIAotCWludGVsX3JlZ2lz
dGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoJm1taW9fZGF0
YSk7CiAKIAlwcmludGYoIiAgICAgICAgICAgICAgIERTUEFSQiA9IDB4JTA4eFxuIiwgZHNwYXJi
KTsKIAlwcmludGYoIiAgICAgICAgICAgICAgICAgIEZXMSA9IDB4JTA4eFxuIiwgZncxKTsKQEAg
LTEwNzMsNiArMTA3OSw3IEBAIHN0YXRpYyB2b2lkIHBudl93bV9kdW1wKHZvaWQpCiAKIHN0YXRp
YyB2b2lkIGdlbjNfd21fZHVtcCh2b2lkKQogeworCXN0cnVjdCBpbnRlbF9tbWlvX2RhdGEgbW1p
b19kYXRhOwogCWludCBpOwogCWludCB0b3RhbHNpemUgPSBJU185NDVHTShkZXZpZCkgPyAxMjgg
OiA5NjsgLyogRklYTUU/ICovCiAJdWludDMyX3QgZHNwYXJiOwpAQCAtMTA4Miw3ICsxMDg5LDcg
QEAgc3RhdGljIHZvaWQgZ2VuM193bV9kdW1wKHZvaWQpCiAJdWludDMyX3QgbWlfYXJiX3N0YXRl
OwogCXN0cnVjdCBnbWNoX3dtIHdtc1tNQVhfUExBTkVdID0ge307CiAKLQlpbnRlbF9yZWdpc3Rl
cl9hY2Nlc3NfaW5pdChpbnRlbF9nZXRfcGNpX2RldmljZSgpLCAwLCAtMSk7CisJaW50ZWxfcmVn
aXN0ZXJfYWNjZXNzX2luaXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwgMCwg
LTEpOwogCiAJZHNwYXJiID0gcmVhZF9yZWcoMHg3MDAzMCk7CiAJaW5zdHBtID0gcmVhZF9yZWco
MHgyMGMwKTsKQEAgLTEwOTAsNyArMTA5Nyw3IEBAIHN0YXRpYyB2b2lkIGdlbjNfd21fZHVtcCh2
b2lkKQogCWZ3X2JsY19zZWxmID0gcmVhZF9yZWcoMHgyMGUwKTsKIAltaV9hcmJfc3RhdGUgPSBy
ZWFkX3JlZygweDIwZTQpOwogCi0JaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2ZpbmkoKTsKKwlpbnRl
bF9yZWdpc3Rlcl9hY2Nlc3NfZmluaSgmbW1pb19kYXRhKTsKIAogCXByaW50ZigiICAgICAgRFNQ
QVJCID0gMHglMDh4XG4iLCBkc3BhcmIpOwogCXByaW50ZigiICAgICAgRldfQkxDID0gMHglMDE2
IiBQUkl4NjQgIlxuIiwgZndfYmxjKTsKQEAgLTExNDIsNiArMTE0OSw3IEBAIHN0YXRpYyB2b2lk
IGdlbjNfd21fZHVtcCh2b2lkKQogCiBzdGF0aWMgdm9pZCBnZW4yX3dtX2R1bXAodm9pZCkKIHsK
KwlzdHJ1Y3QgaW50ZWxfbW1pb19kYXRhIG1taW9fZGF0YTsKIAlpbnQgaTsKIAlpbnQgdG90YWxz
aXplOwogCXVpbnQzMl90IGRzcGFyYjsKQEAgLTExNTEsNyArMTE1OSw3IEBAIHN0YXRpYyB2b2lk
IGdlbjJfd21fZHVtcCh2b2lkKQogCXVpbnQzMl90IG1pX3N0YXRlOwogCXN0cnVjdCBnbWNoX3dt
IHdtc1tNQVhfUExBTkVdID0ge307CiAKLQlpbnRlbF9yZWdpc3Rlcl9hY2Nlc3NfaW5pdChpbnRl
bF9nZXRfcGNpX2RldmljZSgpLCAwLCAtMSk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2luaXQo
Jm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwgMCwgLTEpOwogCiAJZHNwYXJiID0g
cmVhZF9yZWcoMHg3MDAzMCk7CiAJbWVtX21vZGUgPSByZWFkX3JlZygweDIwY2MpOwpAQCAtMTE1
OSw3ICsxMTY3LDcgQEAgc3RhdGljIHZvaWQgZ2VuMl93bV9kdW1wKHZvaWQpCiAJZndfYmxjX3Nl
bGYgPSByZWFkX3JlZygweDIwZTApOwogCW1pX3N0YXRlID0gcmVhZF9yZWcoMHgyMGU0KTsKIAot
CWludGVsX3JlZ2lzdGVyX2FjY2Vzc19maW5pKCk7CisJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2Zp
bmkoJm1taW9fZGF0YSk7CiAKIAlwcmludGYoIiAgICAgRFNQQVJCID0gMHglMDh4XG4iLCBkc3Bh
cmIpOwogCXByaW50ZigiICAgTUVNX01PREUgPSAweCUwOHhcbiIsIG1lbV9tb2RlKTsKLS0gCjIu
MjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50
ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

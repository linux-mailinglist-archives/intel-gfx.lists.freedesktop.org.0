Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9DD8229D299
	for <lists+intel-gfx@lfdr.de>; Wed, 28 Oct 2020 22:33:41 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C8EB16E59D;
	Wed, 28 Oct 2020 21:33:38 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 285976E58B
 for <intel-gfx@lists.freedesktop.org>; Wed, 28 Oct 2020 21:33:34 +0000 (UTC)
IronPort-SDR: z2VVbnf/LLX/dnaphrU18ksKpo+jEVjggq/vCOuQg1mUmZixoKKspJMXuVYCeAdAnmEY6/M4ex
 EQgyOnWWG1zg==
X-IronPort-AV: E=McAfee;i="6000,8403,9788"; a="168440899"
X-IronPort-AV: E=Sophos;i="5.77,428,1596524400"; d="scan'208";a="168440899"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 28 Oct 2020 14:33:31 -0700
IronPort-SDR: vAFeBnm0YDebyXtspWwGlF0fjT3u+yq3U6l3+GCBd2ecmNuN1g42Ha6Zb7i0ZnQXyXB0gvH4ml
 Nw8rCoWNrmbA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,428,1596524400"; d="scan'208";a="323489270"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga006.jf.intel.com with SMTP; 28 Oct 2020 14:33:29 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 28 Oct 2020 23:33:28 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 28 Oct 2020 23:33:06 +0200
Message-Id: <20201028213323.5423-3-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201028213323.5423-1-ville.syrjala@linux.intel.com>
References: <20201028213323.5423-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 02/19] drm/i915: Add PORT_TCn aliases to enum
 port
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClNp
bmNlIHRnbCB0aGUgRERJcyBoYXZlIGJlZW4gbmFtZWQgQSxCLEMsVEMxLFRDMixUQzMuLi4KQWRk
IHRoZSBhcHByb3ByaWF0ZSBlbnVtIHZhbHVlcyBmb3IgdGhlIFRDIERESXMgdG8gZW51bSBwb3J0
LgoKdjI6IERlYWwgd2l0aCBya2wgYW5kIGRnMQoKUmV2aWV3ZWQtYnk6IEx1Y2FzIERlIE1hcmNo
aSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJqw6Rs
w6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jICAgIHwgMTAgKysrLS0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyAgICAgfCAxMiArKysrLS0tLS0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgMjggKysrKysrKysrKy0tLS0tLS0t
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oIHwgIDggKysr
KysrCiA0IGZpbGVzIGNoYW5nZWQsIDMyIGluc2VydGlvbnMoKyksIDI2IGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKaW5kZXggMGEzMDk2NDVm
ZTA2Li5mZjgyNWJlMGFjODggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfYmlvcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
Ymlvcy5jCkBAIC0xNjg4LDE3ICsxNjg4LDE1IEBAIHN0YXRpYyBlbnVtIHBvcnQgZHZvX3BvcnRf
dG9fcG9ydChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCVtQT1JUX0ldID0g
eyBEVk9fUE9SVF9IRE1JSSwgRFZPX1BPUlRfRFBJLCAtMSB9LAogCX07CiAJLyoKLQkgKiBCc3Bl
YyBsaXN0cyB0aGUgcG9ydHMgYXMgQSwgQiwgQywgRCAtIGhvd2V2ZXIgaW50ZXJuYWxseSBpbiBv
dXIKLQkgKiBkcml2ZXIgd2Uga2VlcCB0aGVtIGFzIFBPUlRfQSwgUE9SVF9CLCBQT1JUX0QgYW5k
IFBPUlRfRSBzbyB0aGUKLQkgKiByZWdpc3RlcnMgaW4gRGlzcGxheSBFbmdpbmUgbWF0Y2ggdGhl
IHJpZ2h0IG9mZnNldHMuIEFwcGx5IHRoZQotCSAqIG1hcHBpbmcgaGVyZSB0byB0cmFuc2xhdGUg
ZnJvbSBWQlQgdG8gaW50ZXJuYWwgY29udmVudGlvbi4KKwkgKiBSS0wgVkJUIHVzZXMgUEhZIGJh
c2VkIG1hcHBpbmcuIENvbWJvIFBIWXMgQSxCLEMsRAorCSAqIG1hcCB0byBEREkgQSxCLFRDMSxU
QzIgcmVzcGVjdGl2ZWx5LgogCSAqLwogCXN0YXRpYyBjb25zdCBpbnQgcmtsX3BvcnRfbWFwcGlu
Z1tdWzNdID0gewogCQlbUE9SVF9BXSA9IHsgRFZPX1BPUlRfSERNSUEsIERWT19QT1JUX0RQQSwg
LTEgfSwKIAkJW1BPUlRfQl0gPSB7IERWT19QT1JUX0hETUlCLCBEVk9fUE9SVF9EUEIsIC0xIH0s
CiAJCVtQT1JUX0NdID0geyAtMSB9LAotCQlbUE9SVF9EXSA9IHsgRFZPX1BPUlRfSERNSUMsIERW
T19QT1JUX0RQQywgLTEgfSwKLQkJW1BPUlRfRV0gPSB7IERWT19QT1JUX0hETUlELCBEVk9fUE9S
VF9EUEQsIC0xIH0sCisJCVtQT1JUX1RDMV0gPSB7IERWT19QT1JUX0hETUlDLCBEVk9fUE9SVF9E
UEMsIC0xIH0sCisJCVtQT1JUX1RDMl0gPSB7IERWT19QT1JUX0hETUlELCBEVk9fUE9SVF9EUEQs
IC0xIH0sCiAJfTsKIAogCWlmIChJU19ERzEoZGV2X3ByaXYpIHx8IElTX1JPQ0tFVExBS0UoZGV2
X3ByaXYpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggNjMz
ODBiMTY2YzI1Li4yNDI0NTE1N2RjYjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kZGkuYwpAQCAtNTA2OSw4ICs1MDY5LDggQEAgc3RhdGljIGJvb2wgaHRpX3VzZXNfcGh5
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBlbnVtIHBoeSBwaHkpCiBzdGF0aWMgZW51
bSBocGRfcGluIGRnMV9ocGRfcGluKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IAkJCQllbnVtIHBvcnQgcG9ydCkKIHsKLQlpZiAocG9ydCA+PSBQT1JUX0QpCi0JCXJldHVybiBI
UERfUE9SVF9DICsgcG9ydCAtIFBPUlRfRDsKKwlpZiAocG9ydCA+PSBQT1JUX1RDMSkKKwkJcmV0
dXJuIEhQRF9QT1JUX0MgKyBwb3J0IC0gUE9SVF9UQzE7CiAJZWxzZQogCQlyZXR1cm4gSFBEX1BP
UlRfQSArIHBvcnQgLSBQT1JUX0E7CiB9CkBAIC01MDc4LDggKzUwNzgsOCBAQCBzdGF0aWMgZW51
bSBocGRfcGluIGRnMV9ocGRfcGluKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IHN0YXRpYyBlbnVtIGhwZF9waW4gdGdsX2hwZF9waW4oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogCQkJCWVudW0gcG9ydCBwb3J0KQogewotCWlmIChwb3J0ID49IFBPUlRfRCkK
LQkJcmV0dXJuIEhQRF9QT1JUX1RDMSArIHBvcnQgLSBQT1JUX0Q7CisJaWYgKHBvcnQgPj0gUE9S
VF9UQzEpCisJCXJldHVybiBIUERfUE9SVF9UQzEgKyBwb3J0IC0gUE9SVF9UQzE7CiAJZWxzZQog
CQlyZXR1cm4gSFBEX1BPUlRfQSArIHBvcnQgLSBQT1JUX0E7CiB9CkBAIC01MDkwLDggKzUwOTAs
OCBAQCBzdGF0aWMgZW51bSBocGRfcGluIHJrbF9ocGRfcGluKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAlpZiAoSEFTX1BDSF9UR1AoZGV2X3ByaXYpKQogCQlyZXR1cm4gdGds
X2hwZF9waW4oZGV2X3ByaXYsIHBvcnQpOwogCi0JaWYgKHBvcnQgPj0gUE9SVF9EKQotCQlyZXR1
cm4gSFBEX1BPUlRfQyArIHBvcnQgLSBQT1JUX0Q7CisJaWYgKHBvcnQgPj0gUE9SVF9UQzEpCisJ
CXJldHVybiBIUERfUE9SVF9DICsgcG9ydCAtIFBPUlRfVEMxOwogCWVsc2UKIAkJcmV0dXJuIEhQ
RF9QT1JUX0EgKyBwb3J0IC0gUE9SVF9BOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBkYTJhOTExMjJkNDQuLmNkZGJkYTUzMDNmZiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTc0NjMs
MTIgKzc0NjMsMTIgQEAgYm9vbCBpbnRlbF9waHlfaXNfdGMoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LCBlbnVtIHBoeSBwaHkpCiAKIGVudW0gcGh5IGludGVsX3BvcnRfdG9fcGh5
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBlbnVtIHBvcnQgcG9ydCkKIHsKLQlpZiAo
SVNfUk9DS0VUTEFLRShpOTE1KSAmJiBwb3J0ID49IFBPUlRfRCkKLQkJcmV0dXJuIChlbnVtIHBo
eSlwb3J0IC0gMTsKKwlpZiAoSVNfUk9DS0VUTEFLRShpOTE1KSAmJiBwb3J0ID49IFBPUlRfVEMx
KQorCQlyZXR1cm4gUEhZX0MgKyBwb3J0IC0gUE9SVF9UQzE7CiAJZWxzZSBpZiAoSVNfSlNMX0VI
TChpOTE1KSAmJiBwb3J0ID09IFBPUlRfRCkKIAkJcmV0dXJuIFBIWV9BOwogCi0JcmV0dXJuIChl
bnVtIHBoeSlwb3J0OworCXJldHVybiBQSFlfQSArIHBvcnQgLSBQT1JUX0E7CiB9CiAKIGVudW0g
dGNfcG9ydCBpbnRlbF9wb3J0X3RvX3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwgZW51bSBwb3J0IHBvcnQpCkBAIC03NDc3LDkgKzc0NzcsOSBAQCBlbnVtIHRjX3BvcnQgaW50
ZWxfcG9ydF90b190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9y
dCBwb3J0KQogCQlyZXR1cm4gVENfUE9SVF9OT05FOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPj0gMTIpCi0JCXJldHVybiBwb3J0IC0gUE9SVF9EOwotCi0JcmV0dXJuIHBvcnQgLSBQT1JU
X0M7CisJCXJldHVybiBUQ19QT1JUXzEgKyBwb3J0IC0gUE9SVF9UQzE7CisJZWxzZQorCQlyZXR1
cm4gVENfUE9SVF8xICsgcG9ydCAtIFBPUlRfQzsKIH0KIAogZW51bSBpbnRlbF9kaXNwbGF5X3Bv
d2VyX2RvbWFpbiBpbnRlbF9wb3J0X3RvX3Bvd2VyX2RvbWFpbihlbnVtIHBvcnQgcG9ydCkKQEAg
LTE3MjE2LDE3ICsxNzIxNiwxNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9zZXR1cF9vdXRwdXRzKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpZiAoSVNfUk9DS0VUTEFLRShkZXZf
cHJpdikpIHsKIAkJaW50ZWxfZGRpX2luaXQoZGV2X3ByaXYsIFBPUlRfQSk7CiAJCWludGVsX2Rk
aV9pbml0KGRldl9wcml2LCBQT1JUX0IpOwotCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9S
VF9EKTsJLyogRERJIFRDMSAqLwotCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9FKTsJ
LyogRERJIFRDMiAqLworCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9UQzEpOworCQlp
bnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9UQzIpOwogCX0gZWxzZSBpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMikgewogCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9BKTsK
IAkJaW50ZWxfZGRpX2luaXQoZGV2X3ByaXYsIFBPUlRfQik7Ci0JCWludGVsX2RkaV9pbml0KGRl
dl9wcml2LCBQT1JUX0QpOwotCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9FKTsKLQkJ
aW50ZWxfZGRpX2luaXQoZGV2X3ByaXYsIFBPUlRfRik7Ci0JCWludGVsX2RkaV9pbml0KGRldl9w
cml2LCBQT1JUX0cpOwotCQlpbnRlbF9kZGlfaW5pdChkZXZfcHJpdiwgUE9SVF9IKTsKLQkJaW50
ZWxfZGRpX2luaXQoZGV2X3ByaXYsIFBPUlRfSSk7CisJCWludGVsX2RkaV9pbml0KGRldl9wcml2
LCBQT1JUX1RDMSk7CisJCWludGVsX2RkaV9pbml0KGRldl9wcml2LCBQT1JUX1RDMik7CisJCWlu
dGVsX2RkaV9pbml0KGRldl9wcml2LCBQT1JUX1RDMik7CisJCWludGVsX2RkaV9pbml0KGRldl9w
cml2LCBQT1JUX1RDNCk7CisJCWludGVsX2RkaV9pbml0KGRldl9wcml2LCBQT1JUX1RDNSk7CisJ
CWludGVsX2RkaV9pbml0KGRldl9wcml2LCBQT1JUX1RDNik7CiAJCWljbF9kc2lfaW5pdChkZXZf
cHJpdik7CiAJfSBlbHNlIGlmIChJU19KU0xfRUhMKGRldl9wcml2KSkgewogCQlpbnRlbF9kZGlf
aW5pdChkZXZfcHJpdiwgUE9SVF9BKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmgKaW5kZXggMWI3YWUxZDUwN2YyLi43NDdhZWM4ZTg1ODAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCkBAIC0yMDgsNiArMjA4
LDE0IEBAIGVudW0gcG9ydCB7CiAJUE9SVF9ILAogCVBPUlRfSSwKIAorCS8qIHRnbCsgKi8KKwlQ
T1JUX1RDMSA9IFBPUlRfRCwKKwlQT1JUX1RDMiwKKwlQT1JUX1RDMywKKwlQT1JUX1RDNCwKKwlQ
T1JUX1RDNSwKKwlQT1JUX1RDNiwKKwogCUk5MTVfTUFYX1BPUlRTCiB9OwogCi0tIAoyLjI2LjIK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

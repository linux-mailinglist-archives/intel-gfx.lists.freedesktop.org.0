Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 26D4D3D136F
	for <lists+intel-gfx@lfdr.de>; Wed, 21 Jul 2021 18:12:14 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 05D476E9B1;
	Wed, 21 Jul 2021 16:12:12 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5E29B6E997;
 Wed, 21 Jul 2021 16:12:10 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10052"; a="233271642"
X-IronPort-AV: E=Sophos;i="5.84,258,1620716400"; d="scan'208";a="233271642"
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 21 Jul 2021 09:11:56 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.84,258,1620716400"; d="scan'208";a="564786713"
Received: from vbelgaum-ubuntu.fm.intel.com ([10.1.27.27])
 by orsmga004.jf.intel.com with ESMTP; 21 Jul 2021 09:11:54 -0700
From: Vinay Belgaumkar <vinay.belgaumkar@intel.com>
To: intel-gfx@lists.freedesktop.org,
	dri-devel@lists.freedesktop.org
Date: Wed, 21 Jul 2021 09:11:07 -0700
Message-Id: <20210721161120.24610-2-vinay.belgaumkar@intel.com>
X-Mailer: git-send-email 2.25.0
In-Reply-To: <20210721161120.24610-1-vinay.belgaumkar@intel.com>
References: <20210721161120.24610-1-vinay.belgaumkar@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 01/14] drm/i915/guc: SQUASHED PATCH - DO NOT
 REVIEW
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Fernando Pacheco <fernando.pacheco@intel.com>,
 Rahul Kumar Singh <rahul.kumar.singh@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+CgpGcm9tIE1hdHQg
QnJvc3QncyBzZXJpZXMgLSBodHRwczovL3BhdGNod29yay5mcmVlZGVza3RvcC5vcmcvc2VyaWVz
LzkyNjg3LwoKZHJtL2k5MTUvZ3VjOiBBZGQgbmV3IEd1QyBpbnRlcmZhY2UgZGVmaW5lcyBhbmQg
c3RydWN0dXJlcwoKQWRkIG5ldyBHdUMgaW50ZXJmYWNlIGRlZmluZXMgYW5kIHN0cnVjdHVyZXMg
d2hpbGUgbWFpbnRhaW5pbmcgb2xkIG9uZXMKaW4gcGFyYWxsZWwuCgpDYzogSm9obiBIYXJyaXNv
biA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9z
dCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJpc29uIDxK
b2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBSZW1vdmUgR3VDIHN0YWdl
IGRlc2NyaXB0b3IsIGFkZCBMUkMgZGVzY3JpcHRvcgoKUmVtb3ZlIG9sZCBHdUMgc3RhZ2UgZGVz
Y3JpcHRvciwgYWRkIExSQyBkZXNjcmlwdG9yIHdoaWNoIHdpbGwgYmUgdXNlZApieSB0aGUgbmV3
IEd1QyBpbnRlcmZhY2UgaW1wbGVtZW50ZWQgaW4gdGhpcyBwYXRjaCBzZXJpZXMuCgp2MjoKIChK
b2huIEhhcnJpc29uKQogIC0gcy9scmMvTFJDL2cKCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMu
aGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3
LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJy
aXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEFkZCBMUkMgZGVzY3JpcHRvciBjb250ZXh0
IGxvb2t1cCBhcnJheQoKQWRkIExSQyBkZXNjcmlwdG9yIGNvbnRleHQgbG9va3VwIGFycmF5IHdo
aWNoIGNhbiByZXNvbHZlIHRoZQppbnRlbF9jb250ZXh0IGZyb20gdGhlIExSQyBkZXNjcmlwdG9y
IGluZGV4LiBJbiBhZGRpdGlvbiB0byBsb29rdXAsIGl0CmNhbiBkZXRlcm1pbmUgaWYgdGhlIExS
QyBkZXNjcmlwdG9yIGNvbnRleHQgaXMgY3VycmVudGx5IHJlZ2lzdGVyZWQgd2l0aAp0aGUgR3VD
IGJ5IGNoZWNraW5nIGlmIGFuIGVudHJ5IGZvciBhIGRlc2NyaXB0b3IgaW5kZXggaXMgcHJlc2Vu
dC4KRnV0dXJlIHBhdGNoZXMgaW4gdGhlIHNlcmllcyB3aWxsIG1ha2UgdXNlIG9mIHRoaXMgYXJy
YXkuCgp2MjoKIChNaWNoYWwpCiAgLSAibGludXgveGFycmF5LmgiIC0+IDxsaW51eC94YXJyYXku
aD4KICAtIHMvbHJjL0xSQwogKEpvaG4gSCkKICAtIEZpeCBjb21taXQgbWVzc2FnZQoKQ2M6IEpv
aG4gSGFycmlzb24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1h
dHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBI
YXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogSW1wbGVt
ZW50IEd1QyBzdWJtaXNzaW9uIHRhc2tsZXQKCkltcGxlbWVudCBHdUMgc3VibWlzc2lvbiB0YXNr
bGV0IGZvciBuZXcgaW50ZXJmYWNlLiBUaGUgbmV3IEd1QwppbnRlcmZhY2UgdXNlcyBIMkcgdG8g
c3VibWl0IGNvbnRleHRzIHRvIHRoZSBHdUMuIFNpbmNlIEgyRyB1c2UgYSBzaW5nbGUKY2hhbm5l
bCwgYSBzaW5nbGUgdGFza2xldCBpcyB1c2VkIGZvciB0aGUgc3VibWlzc2lvbiBwYXRoLgoKQWxz
byB0aGUgcGVyIGVuZ2luZSBpbnRlcnJ1cHQgaGFuZGxlciBoYXMgYmVlbiB1cGRhdGVkIHRvIGRp
c2FibGUgdGhlCnJlc2NoZWR1bGluZyBvZiB0aGUgcGh5c2ljYWwgZW5naW5lIHRhc2tsZXQsIHdo
ZW4gdXNpbmcgR3VDIHNjaGVkdWxpbmcsCmFzIHRoZSBwaHlzaWNhbCBlbmdpbmUgdGFza2xldCBp
cyBubyBsb25nZXIgdXNlZC4KCkluIHRoaXMgcGF0Y2ggdGhlIGZpZWxkLCBndWNfaWQsIGhhcyBi
ZWVuIGFkZGVkIHRvIGludGVsX2NvbnRleHQgYW5kIGlzCm5vdCBhc3NpZ25lZC4gUGF0Y2hlcyBs
YXRlciBpbiB0aGUgc2VyaWVzIHdpbGwgYXNzaWduIHRoaXMgdmFsdWUuCgp2MjoKIChKb2huIEhh
cnJpc29uKQogIC0gQ2xlYW4gdXAgc29tZSBjb21tZW50cwp2MzoKIChKb2huIEhhcnJpc29uKQog
IC0gTW9yZSBjb21tZW50IGNsZWFudXBzCgpDYzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJp
c29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9z
dEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25A
SW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBBZGQgYnlwYXNzIHRhc2tsZXQgc3VibWlzc2lvbiBw
YXRoIHRvIEd1QwoKQWRkIGJ5cGFzcyB0YXNrbGV0IHN1Ym1pc3Npb24gcGF0aCB0byBHdUMuIFRo
ZSB0YXNrbGV0IGlzIG9ubHkgdXNlZCBpZiBIMkcKY2hhbm5lbCBoYXMgYmFja3ByZXN1cmUuCgpT
aWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2
aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0v
aTkxNS9ndWM6IEltcGxlbWVudCBHdUMgY29udGV4dCBvcGVyYXRpb25zIGZvciBuZXcgaW50ZWZh
Y2UKCkltcGxlbWVudCBHdUMgY29udGV4dCBvcGVyYXRpb25zIHdoaWNoIGluY2x1ZGVzIEd1QyBz
cGVjaWZpYyBvcGVyYXRpb25zCmFsbG9jLCBwaW4sIHVucGluLCBhbmQgZGVzdHJveS4KCnYyOgog
KERhbmllbCBWZXR0ZXIpCiAgLSBVc2UgbXNsZWVwX2ludGVycnVwdGlibGUgcmF0aGVyIHRoYW4g
Y29uZF9yZXNjaGVkIGluIGJ1c3kgbG9vcAogKE1pY2hhbCkKICAtIFJlbW92ZSBDKysgc3R5bGUg
Y29tbWVudAp2MzoKIChNYXR0aGV3IEJyb3N0KQogIC0gRHJvcCBHVUNfSURfU1RBUlQKIChKb2hu
IEhhcnJpc29uKQogIC0gRml4IGEgYnVuY2ggb2YgdHlwb3MKICAtIFVzZSBkcm1fZXJyIHJhdGhl
ciB0aGFuIGRybV9kYmcgZm9yIEcySCBlcnJvcnMKIChEYW5pZWxlKQogIC0gRml4IDs7IHR5cG8K
ICAtIENsZWFuIHVwIHNjaGVkIHN0YXRlIGZ1bmN0aW9ucwogIC0gQWRkIGxvY2tkZXAgZm9yIGd1
Y19pZCBmdW5jdGlvbnMKICAtIERvbid0IGNhbGwgX19yZWxlYXNlX2d1Y19pZCB3aGVuIGd1Y19p
ZCBpcyBpbnZhbGlkCiAgLSBVc2UgTUlTU0lOR19DQVNFCiAgLSBBZGQgY29tbWVudCBpbiBndWNf
Y29udGV4dF9waW4KICAtIFVzZSBzaG9ydGVyIHBhdGggdG8gcnBtCiAoRGFuaWVsZSAvIENJKQog
IC0gRG9uJ3QgY2FsbCByZWxlYXNlX2d1Y19pZCBvbiBhbiBpbnZhbGlkIGd1Y19pZCBpbiBkZXN0
cm95CgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNv
bT4KCmRybS9pOTE1L2d1YzogSW5zZXJ0IGZlbmNlIG9uIGNvbnRleHQgd2hlbiBkZXJlZ2lzdGVy
aW5nCgpTb21ldGltZXMgZHVyaW5nIGNvbnRleHQgcGlubmluZyBhIGNvbnRleHQgd2l0aCB0aGUg
c2FtZSBndWNfaWQgaXMKcmVnaXN0ZXJlZCB3aXRoIHRoZSBHdUMuIEluIHRoaXMgYSBjYXNlIGRl
cmVnaXN0ZXIgbXVzdCBiZSBkb25lIGJlZm9yZQp0aGUgY29udGV4dCBjYW4gYmUgcmVnaXN0ZXJl
ZC4gQSBmZW5jZSBpcyBpbnNlcnRlZCBvbiBhbGwgcmVxdWVzdHMgd2hpbGUKdGhlIGRlcmVnaXN0
ZXIgaXMgaW4gZmxpZ2h0LiBPbmNlIHRoZSBHMkggaXMgcmVjZWl2ZWQgaW5kaWNhdGluZyB0aGUK
ZGVyZWdpc3RyYXRpb24gaXMgY29tcGxldGUgdGhlIGNvbnRleHQgaXMgcmVnaXN0ZXJlZCBhbmQg
dGhlIGZlbmNlIGlzCnJlbGVhc2VkLgoKdjI6CiAoSm9obiBIKQogIC0gRml4IGNvbW1pdCBtZXNz
YWdlCgpDYzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVk
LW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2Vk
LWJ5OiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgoKZHJtL2k5MTUv
Z3VjOiBEZWZlciBjb250ZXh0IHVucGluIHVudGlsIHNjaGVkdWxpbmcgaXMgZGlzYWJsZWQKCldp
dGggR3VDIHNjaGVkdWxpbmcsIGl0IGlzbid0IHNhZmUgdG8gdW5waW4gYSBjb250ZXh0IHdoaWxl
IHNjaGVkdWxpbmcKaXMgZW5hYmxlZCBmb3IgdGhhdCBjb250ZXh0IGFzIHRoZSBHdUMgbWF5IHRv
dWNoIHNvbWUgb2YgdGhlIHBpbm5lZApzdGF0ZSAoZS5nLiBMUkMpLiBUbyBlbnN1cmUgc2NoZWR1
bGluZyBpc24ndCBlbmFibGVkIHdoZW4gYW4gdW5waW4gaXMKZG9uZSwgYSBjYWxsIGJhY2sgaXMg
YWRkZWQgdG8gaW50ZWxfY29udGV4dF91bnBpbiB3aGVuIHBpbiBjb3VudCA9PSAxCnRvIGRpc2Fi
bGUgc2NoZWR1bGluZyBmb3IgdGhhdCBjb250ZXh0LiBXaGVuIHRoZSByZXNwb25zZSBDVEIgaXMK
cmVjZWl2ZWQgaXQgaXMgc2FmZSB0byBkbyB0aGUgZmluYWwgdW5waW4uCgpGdXR1cmUgcGF0Y2hl
cyBtYXkgYWRkIGEgaGV1cmlzdGljIC8gZGVsYXkgdG8gc2NoZWR1bGUgdGhlIGRpc2FibGUKY2Fs
bCBiYWNrIHRvIGF2b2lkIHRocmFzaGluZyBvbiBzY2hlZHVsZSBlbmFibGUgLyBkaXNhYmxlLgoK
djI6CiAoSm9obiBIKQogIC0gcy9kcm1fZGJnL2RybV9lcnIKIChEYW5laWVsKQogIC0gQ2xlYW4g
dXAgc2NoZWQgc3RhdGUgZnVuY3Rpb24KCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlz
b25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0
QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJ
bnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IERpc2FibGUgZW5naW5lIGJhcnJpZXJzIHdpdGggR3VD
IGR1cmluZyB1bnBpbgoKRGlzYWJsZSBlbmdpbmUgYmFycmllcnMgZm9yIHVucGlubmluZyB3aXRo
IEd1Qy4gVGhpcyBmZWF0dXJlIGlzbid0Cm5lZWRlZCB3aXRoIHRoZSBHdUMgYXMgaXQgZGlzYWJs
ZXMgY29udGV4dCBzY2hlZHVsaW5nIGJlZm9yZSB1bnBpbm5pbmcKd2hpY2ggZ3VhcmFudGVlcyB0
aGUgSFcgd2lsbCBub3QgcmVmZXJlbmNlIHRoZSBjb250ZXh0LiBIZW5jZSBpdCBpcwpub3QgbmVj
ZXNzYXJ5IHRvIGRlZmVyIHVucGlubmluZyB1bnRpbCBhIGtlcm5lbCBjb250ZXh0IHJlcXVlc3QK
Y29tcGxldGVzIG9uIGVhY2ggZW5naW5lIGluIHRoZSBjb250ZXh0IGVuZ2luZSBtYXNrLgoKQ2M6
IEpvaG4gSGFycmlzb24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBE
YW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpS
ZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCmRy
bS9pOTE1L2d1YzogRXh0ZW5kIGRlcmVnaXN0cmF0aW9uIGZlbmNlIHRvIHNjaGVkdWxlIGRpc2Fi
bGUKCkV4dGVuZCB0aGUgZGVyZWdpc3RyYXRpb24gY29udGV4dCBmZW5jZSB0byBmZW5jZSB3aG5l
IGEgR3VDIGNvbnRleHQgaGFzCnNjaGVkdWxpbmcgZGlzYWJsZSBwZW5kaW5nLgoKdjI6CiAoSm9o
biBIKQogIC0gVXBkYXRlIGNvbW1lbnQgd2h5IHdlIGNoZWNrIHRoZSBwaW4gY291bnQgd2l0aGlu
IHNwaW4gbG9jawoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+
ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpS
ZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KCmRy
bS9pOTE1OiBEaXNhYmxlIHByZWVtcHQgYnVzeXdhaXQgd2hlbiB1c2luZyBHdUMgc2NoZWR1bGlu
ZwoKRGlzYWJsZSBwcmVlbXB0IGJ1c3l3YWl0IHdoZW4gdXNpbmcgR3VDIHNjaGVkdWxpbmcuIFRo
aXMgaXNuJ3QgbmVlZGVkIGFzCnRoZSBHdUMgY29udHJvbHMgcHJlZW1wdGlvbiB3aGVuIHNjaGVk
dWxpbmcuCgp2MjoKIChKb2huIEgpOgogIC0gRml4IGNvbW1pdCBtZXNzYWdlCgpDYzogSm9obiBI
YXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhl
dyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJp
c29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBFbnN1cmUgcmVx
dWVzdCBvcmRlcmluZyB2aWEgY29tcGxldGlvbiBmZW5jZXMKCklmIHR3byByZXF1ZXN0cyBhcmUg
b24gdGhlIHNhbWUgcmluZywgdGhleSBhcmUgZXhwbGljaXRseSBvcmRlcmVkIGJ5IHRoZQpIVy4g
U28sIGEgc3VibWlzc2lvbiBmZW5jZSBpcyBzdWZmaWNpZW50IHRvIGVuc3VyZSBvcmRlcmluZyB3
aGVuIHVzaW5nCnRoZSBuZXcgR3VDIHN1Ym1pc3Npb24gaW50ZXJmYWNlLiBDb252ZXJzZWx5LCBp
ZiB0d28gcmVxdWVzdHMgc2hhcmUgYQp0aW1lbGluZSBhbmQgYXJlIG9uIHRoZSBzYW1lIHBoeXNp
Y2FsIGVuZ2luZSBidXQgZGlmZmVyZW50IGNvbnRleHQgdGhpcwpkb2Vzbid0IGVuc3VyZSBvcmRl
cmluZyBvbiB0aGUgbmV3IEd1QyBzdWJtaXNzaW9uIGludGVyZmFjZS4gU28sIGEKY29tcGxldGlv
biBmZW5jZSBuZWVkcyB0byBiZSB1c2VkIHRvIGVuc3VyZSBvcmRlcmluZy4KCnYyOgogKERhbmll
bGUpCiAgLSBEb24ndCBkZWxldGUgc3BpbiBsb2NrCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJp
c29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJy
b3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogRGlzYWJsZSBzZW1h
cGhvcmVzIHdoZW4gdXNpbmcgR3VDIHNjaGVkdWxpbmcKClNlbWFwaG9yZXMgYXJlIGFuIG9wdGlt
aXphdGlvbiBhbmQgbm90IHJlcXVpcmVkIGZvciBiYXNpYyBHdUMgc3VibWlzc2lvbgp0byB3b3Jr
IHByb3Blcmx5LiBEaXNhYmxlIHVudGlsIHdlIGhhdmUgdGltZSB0byBkbyB0aGUgaW1wbGVtZW50
YXRpb24gdG8KZW5hYmxlIHNlbWFwaG9yZXMgYW5kIHR1bmUgdGhlbSBmb3IgcGVyZm9ybWFuY2Uu
IEFsc28gbG9uZyBkaXJlY3Rpb24gaXMKanVzdCB0byBkZWxldGUgc2VtYXBob3JlcyBmcm9tIHRo
ZSBpOTE1IHNvIGFub3RoZXIgcmVhc29uIHRvIG5vdCBlbmFibGUKdGhlc2UgZm9yIEd1QyBzdWJt
aXNzaW9uLgoKVGhpcyBwYXRjaCBmaXhlcyBhbiBleGlzdGluZyBidWdzIHdoZXJlIEk5MTVfRU5H
SU5FX0hBU19TRU1BUEhPUkVTIHdhcwpub3QgaG9ub3JlZCBjb3JyZWN0bHkuCgp2MjogUmV3b3Jk
IGNvbW1pdCBtZXNzYWdlCnYzOgogKEpvaG4gSCkKICAtIEFkZCB0ZXh0IHRvIGNvbW1pdCBpbmRp
Y2F0aW5nIHRoaXMgYWxzbyBmaXhpbmcgYW4gZXhpc3RpbmcgYnVnCnY0OgogKEpvaG4gSCkKICAt
IHMvYnVnL2J1Z3MKCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29t
PgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4K
UmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpk
cm0vaTkxNS9ndWM6IEVuc3VyZSBHMkggcmVzcG9uc2UgaGFzIHNwYWNlIGluIGJ1ZmZlcgoKRW5z
dXJlIEcySCByZXNwb25zZSBoYXMgc3BhY2UgaW4gdGhlIGJ1ZmZlciBiZWZvcmUgc2VuZGluZyBI
MkcgQ1RCIGFzCnRoZSBHdUMgY2FuJ3QgaGFuZGxlIGFueSBiYWNrcHJlc3N1cmUgb24gdGhlIEcy
SCBpbnRlcmZhY2UuCgp2MjoKIChNYXR0aGV3KQogIC0gcy9JTlRFTF9HVUNfU0VORC9JTlRFTF9H
VUNfQ1RfU0VORAp2MzoKIChNYXR0aGV3KQogIC0gQWRkIEcySCBjcmVkaXQgYWNjb3VudGluZyB0
byBibG9ja2luZyBwYXRoLCBhZGQgZzJoX3JlbGVhc2Vfc3BhY2UKICAgIGhlbHBlcgogKEpvaG4g
SCkKICAtIENUQl9HMkhfQlVGRkVSX1NJWkUgLyA0ID09IEcySF9ST09NX0JVRkZFUl9TSVpFCgpT
aWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpT
aWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2
aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0v
aTkxNS9ndWM6IFVwZGF0ZSBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlIHRvIHdvcmsgd2l0aCBHdUMK
CldoZW4gcnVubmluZyB0aGUgR3VDIHRoZSBHUFUgY2FuJ3QgYmUgY29uc2lkZXJlZCBpZGxlIGlm
IHRoZSBHdUMgc3RpbGwKaGFzIGNvbnRleHRzIHBpbm5lZC4gQXMgc3VjaCwgYSBjYWxsIGhhcyBi
ZWVuIGFkZGVkIGluCmludGVsX2d0X3dhaXRfZm9yX2lkbGUgdG8gaWRsZSB0aGUgVUMgYW5kIGlu
IHR1cm4gdGhlIEd1QyBieSB3YWl0aW5nIGZvcgp0aGUgbnVtYmVyIG9mIHVucGlubmVkIGNvbnRl
eHRzIHRvIGdvIHRvIHplcm8uCgp2MjogcnRpbWVvdXQgLT4gcmVtYWluaW5nX3RpbWVvdXQKdjM6
IERyb3AgdW5uZWNlc3NhcnkgaW5jbHVkZXMsIGd1Y19zdWJtaXNzaW9uX2J1c3lfbG9vcCAtPgpn
dWNfc3VibWlzc2lvbl9zZW5kX2J1c3lfbG9vcCwgZHJvcCBuZWdhdGllIHRpbWVvdXQgdHJpY2ss
IG1vdmUgYQpyZWZhY3RvciBvZiBndWNfY29udGV4dF91bnBpbiB0byBlYXJsaWVyIHBhdGggKEpv
aG4gSCkKdjQ6IEFkZCBzdGRkZWYuaCBiYWNrIGludG8gaW50ZWxfZ3RfcmVxdWVzdHMuaCwgc29y
dCBjaXJjdWl0IGlkbGUKZnVuY3Rpb24gaWYgbm90IGluIEd1QyBzdWJtaXNzaW9uIG1vZGUKCkNj
OiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5
OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpv
aG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IFVw
ZGF0ZSBHdUMgZGVidWdmcyB0byBzdXBwb3J0IG5ldyBHdUMKClVwZGF0ZSBHdUMgZGVidWdmcyB0
byBzdXBwb3J0IHRoZSBuZXcgR3VDIHN0cnVjdHVyZXMuCgp2MjoKIChKb2huIEhhcnJpc29uKQog
IC0gUmVtb3ZlIGludGVsX2xyY19yZWcuaCBpbmNsdWRlIGZyb20gaTkxNV9kZWJ1Z2ZzLmMKIChN
aWNoYWwpCiAgLSBSZW5hbWUgR3VDIGRlYnVnZnMgZnVuY3Rpb25zCgpTaWduZWQtb2ZmLWJ5OiBK
b2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBN
YXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4g
SGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEFkZCB0
cmFjZSBwb2ludCBmb3IgR3VDIHN1Ym1pdAoKQWRkIHRyYWNlIHBvaW50IGZvciBHdUMgc3VibWl0
LiBFeHRlbmRlZCBleGlzdGluZyByZXF1ZXN0IHRyYWNlIHBvaW50cwp0byBpbmNsdWRlIHN1Ym1p
dCBmZW5jZSB2YWx1ZSwsIGd1Y19pZCwgYW5kIHJpbmcgdGFpbCB2YWx1ZS4KCnYyOiBGaXggd2hp
dGUgc3BhY2UgYWxpZ25tZW50IGluIGk5MTVfcmVxdWVzdF9hZGQgdHJhY2UgcG9pbnQKdjM6IERl
bGV0ZSBkZXBfZnJvbSAsIGRlcF90byAoVHZydGtvKQoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4u
Yy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRo
ZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhh
cnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1OiBBZGQgaW50ZWxfY29udGV4dCB0cmFjaW5nCgpB
ZGQgaW50ZWxfY29udGV4dCB0cmFjaW5nLiBUaGVzZSB0cmFjZSBwb2ludHMgYXJlIHBhcnRpY3Vs
YXIgaGVscGZ1bAp3aGVuIGRlYnVnZ2luZyB0aGUgR3VDIGZpcm13YXJlIGFuZCBjYW4gYmUgZW5h
YmxlZCB2aWEKQ09ORklHX0RSTV9JOTE1X0xPV19MRVZFTF9UUkFDRVBPSU5UUyBrZXJuZWwgY29u
ZmlnIG9wdGlvbi4KCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29t
PgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4K
UmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpk
cm0vaTkxNS9ndWM6IEd1QyB2aXJ0dWFsIGVuZ2luZXMKCkltcGxlbWVudCBHdUMgdmlydHVhbCBl
bmdpbmVzLiBSYXRoZXIgc2ltcGxlIGltcGxlbWVudGF0aW9uLCBiYXNpY2FsbHkKanVzdCBhbGxv
Y2F0ZSBhbiBlbmdpbmUsIHNldHVwIGNvbnRleHQgZW50ZXIgLyBleGl0IGZ1bmN0aW9uIHRvIHZp
cnR1YWwKZW5naW5lIHNwZWNpZmljIGZ1bmN0aW9ucywgc2V0IGFsbCBvdGhlciB2YXJpYWJsZXMg
LyBmdW5jdGlvbnMgdG8gZ3VjCnZlcnNpb25zLCBhbmQgc2V0IHRoZSBlbmdpbmUgbWFzayB0byB0
aGF0IG9mIGFsbCB0aGUgc2libGluZ3MuCgp2MjogVXBkYXRlIHRvIHdvcmsgd2l0aCBwcm90by1j
dHgKdjM6CiAoRGFuaWVsZSkKICAtIERyb3AgaW5jbHVkZSwgYWRkIGNvbW1lbnQgdG8gaW50ZWxf
dmlydHVhbF9lbmdpbmVfaGFzX2hlYXJ0YmVhdAoKQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8g
PGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcg
QnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBNYWtlIGhhbmdj
aGVjayB3b3JrIHdpdGggR3VDIHZpcnR1YWwgZW5naW5lcwoKVGhlIHNlcmlhbCBudW1iZXIgdHJh
Y2tpbmcgb2YgZW5naW5lcyBoYXBwZW5zIGF0IHRoZSBiYWNrZW5kIG9mCnJlcXVlc3Qgc3VibWlz
c2lvbiBhbmQgd2FzIGV4cGVjdGluZyB0byBvbmx5IGJlIGdpdmVuIHBoeXNpY2FsCmVuZ2luZXMu
IEhvd2V2ZXIsIGluIEd1QyBzdWJtaXNzaW9uIG1vZGUsIHRoZSBkZWNvbXBvc2l0aW9uIG9mIHZp
cnR1YWwKdG8gcGh5c2ljYWwgZW5naW5lcyBkb2VzIG5vdCBoYXBwZW4gaW4gaTkxNS4gSW5zdGVh
ZCwgcmVxdWVzdHMgYXJlCnN1Ym1pdHRlZCB0byB0aGVpciB2aXJ0dWFsIGVuZ2luZSBtYXNrIGFs
bCB0aGUgd2F5IHRocm91Z2ggdG8gdGhlCmhhcmR3YXJlIChpLmUuIHRvIEd1QykuIFRoaXMgd291
bGQgbWVhbiB0aGF0IHRoZSBoZWFydCBiZWF0IGNvZGUKdGhpbmtzIHRoZSBwaHlzaWNhbCBlbmdp
bmVzIGFyZSBpZGxlIGR1ZSB0byB0aGUgc2VyaWFsIG51bWJlciBub3QKaW5jcmVtZW50aW5nLiBX
aGljaCBpbiB0dXJucyBtZWFucyBoYW5nY2hlY2sgZG9lcyBub3Qgd29yayBmb3IKR3VDIHZpcnR1
YWwgZW5naW5lcy4KClRoaXMgcGF0Y2ggdXBkYXRlcyB0aGUgdHJhY2tpbmcgdG8gZGVjb21wb3Nl
IHZpcnR1YWwgZW5naW5lcyBpbnRvCnRoZWlyIHBoeXNpY2FsIGNvbnN0aXR1ZW50cyBhbmQgdHJh
Y2tzIHRoZSByZXF1ZXN0IGFnYWluc3QgZWFjaC4gVGhpcwppcyBub3QgZW50aXJlbHkgYWNjdXJh
dGUgYXMgdGhlIEd1QyB3aWxsIG9ubHkgYmUgaXNzdWluZyB0aGUgcmVxdWVzdAp0byBvbmUgcGh5
c2ljYWwgZW5naW5lLiBIb3dldmVyLCBpdCBpcyB0aGUgYmVzdCB0aGF0IGk5MTUgY2FuIGRvIGdp
dmVuCnRoYXQgaXQgaGFzIG5vIGtub3dsZWRnZSBvZiB0aGUgR3VDJ3Mgc2NoZWR1bGluZyBkZWNp
c2lvbnMuCgpEb3duc2lkZSBvZiB0aGlzIGlzIHRoYXQgYWxsIHBoeXNpY2FsIGVuZ2luZXMgY29u
c3RpdHV0aW5nIGEgR3VDCnZpcnR1YWwgZW5naW5lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHVucGFy
a2VkIChldmVuIGR1cmluZyBqdXN0IGEgc2luZ2xlCmNvbnRleHQgZXhlY3V0aW5nKSBpbiBvcmRl
ciB0byBiZSBwaW5nZWQgd2l0aCBhIGhlYXJ0YmVhdCByZXF1ZXN0LgpIb3dldmVyIHRoZSBwb3dl
ciBhbmQgcGVyZm9ybWFuY2UgY29zdCBvZiB0aGlzIGlzIG5vdCBleHBlY3RlZCB0byBiZQptZWFz
dXJhYmxlIChkdWUgbG93IGZyZXF1ZW5jeSBvZiBoZWFydGJlYXQgcHVsc2VzKSBhbmQgaXQgaXMg
Y29uc2lkZXJlZAphbiBlYXNpZXIgb3B0aW9uIHRoYW4gdHJ5aW5nIHRvIG1ha2UgY2hhbmdlcyB0
byBHdUMgZmlybXdhcmUuCgp2MjoKIChUdnJ0a28pCiAgLSBVcGRhdGUgY29tbWl0IG1lc3NhZ2UK
ICAtIEhhdmUgZGVmYXVsdCBiZWhhdmlvciBpZiBubyB2ZnVuYyBwcmVzZW50CgpTaWduZWQtb2Zm
LWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2Zm
LWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6
IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTU6IEhvbGQg
cmVmZXJlbmNlIHRvIGludGVsX2NvbnRleHQgb3ZlciBsaWZlIG9mIGk5MTVfcmVxdWVzdAoKSG9s
ZCBhIHJlZmVyZW5jZSB0byB0aGUgaW50ZWxfY29udGV4dCBvdmVyIGxpZmUgb2YgYW4gaTkxNV9y
ZXF1ZXN0LgpXaXRob3V0IHRoaXMgYW4gaTkxNV9yZXF1ZXN0IGNhbiBleGlzdCBhZnRlciB0aGUg
Y29udGV4dCBoYXMgYmVlbgpkZXN0cm95ZWQgKGUuZy4gcmVxdWVzdCByZXRpcmVkLCBjb250ZXh0
IGNsb3NlZCwgYnV0IHVzZXIgc3BhY2UgaG9sZHMgYQpyZWZlcmVuY2UgdG8gdGhlIHJlcXVlc3Qg
ZnJvbSBhbiBvdXQgZmVuY2UpLiBJbiB0aGUgY2FzZSBvZiBHdUMKc3VibWlzc2lvbiArIHZpcnR1
YWwgZW5naW5lLCB0aGUgZW5naW5lIHRoYXQgdGhlIHJlcXVlc3QgcmVmZXJlbmNlcyBpcwphbHNv
IGRlc3Ryb3llZCB3aGljaCBjYW4gdHJpZ2dlciBiYWQgcG9pbnRlciBkcmVmIGluIGZlbmNlIG9w
cyAoZS5nLgppOTE1X2ZlbmNlX2dldF9kcml2ZXJfbmFtZSkuIFdlIGNvdWxkIGxpa2VseSBjaGFu
Z2UKaTkxNV9mZW5jZV9nZXRfZHJpdmVyX25hbWUgdG8gYXZvaWQgdG91Y2hpbmcgdGhlIGVuZ2lu
ZSBidXQgbGV0J3MganVzdApiZSBzYWZlIGFuZCBob2xkIHRoZSBpbnRlbF9jb250ZXh0IHJlZmVy
ZW5jZS4KCnYyOgogKEpvaG4gSGFycmlzb24pCiAgLSBVcGRhdGUgY29tbWVudCBleHBsYWluaW5n
IGhvdyBHdUMgbW9kZSBhbmQgZXhlY2xpc3RzIG1vZGUgZGVhbCB3aXRoCiAgICB2aXJ0dWFsIGVu
Z2luZXMgZGlmZmVyZW50bHkKClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcu
YnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJp
c29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogRGlzYWJsZSBib25kaW5nIGV4dGVuc2lvbiB3
aXRoIEd1QyBzdWJtaXNzaW9uCgpVcGRhdGUgdGhlIGJvbmRpbmcgZXh0ZW5zaW9uIHRvIHJldHVy
biAtRU5PREVWIHdoZW4gdXNpbmcgR3VDIHN1Ym1pc3Npb24KYXMgdGhpcyBleHRlbnNpb24gZnVu
ZGFtZW50YWxseSB3aWxsIG5vdCB3b3JrIHdpdGggdGhlIEd1QyBzdWJtaXNzaW9uCmludGVyZmFj
ZS4KClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29t
PgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4K
CmRybS9pOTE1L2d1YzogRGlyZWN0IGFsbCBicmVhZGNydW1icyBmb3IgYSBjbGFzcyB0byBzaW5n
bGUgYnJlYWRjcnVtYnMKCldpdGggR3VDIHZpcnR1YWwgZW5naW5lcyB0aGUgcGh5c2ljYWwgZW5n
aW5lIHdoaWNoIGEgcmVxdWVzdCBleGVjdXRlcwphbmQgY29tcGxldGVzIG9uIGlzbid0IGtub3du
IHRvIHRoZSBpOTE1LiBUaGVyZWZvcmUgd2UgY2FuJ3QgYXR0YWNoIGEKcmVxdWVzdCB0byBhIHBo
eXNpY2FsIGVuZ2luZXMgYnJlYWRjcnVtYnMuIFRvIHdvcmsgYXJvdW5kIHRoaXMgd2UgY3JlYXRl
CmEgc2luZ2xlIGJyZWFkY3J1bWJzIHBlciBlbmdpbmUgY2xhc3Mgd2hlbiB1c2luZyBHdUMgc3Vi
bWlzc2lvbiBhbmQKZGlyZWN0IGFsbCBwaHlzaWNhbCBlbmdpbmUgaW50ZXJydXB0cyB0byB0aGlz
IGJyZWFkY3J1bWJzLgoKdjI6CiAoSm9obiBIKQogIC0gUmV3b3JrIGhlYWRlciBmaWxlIHN0cnVj
dHVyZSBzbyBpbnRlbF9lbmdpbmVfbWFza190IGNhbiBiZSBpbgogICAgaW50ZWxfZW5naW5lX3R5
cGVzLmgKClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwu
Y29tPgpDQzogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KUmV2aWV3
ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkx
NTogQWRkIGk5MTVfc2NoZWRfZW5naW5lIGRlc3Ryb3kgdmZ1bmMKClRoaXMgaXMgcmVxdWlyZWQg
dG8gYWxsb3cgYmFja2VuZCBzcGVjaWZpYyBjbGVhbnVwCgp2MjoKIChKb2huIEgpCiAgLSBSZXdv
cmsgY29tbWl0IG1lc3NhZ2UKClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcu
YnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJp
c29uQEludGVsLmNvbT4KCmRybS9pOTE1OiBNb3ZlIGFjdGl2ZSByZXF1ZXN0IHRyYWNraW5nIHRv
IGEgdmZ1bmMKCk1vdmUgYWN0aXZlIHJlcXVlc3QgdHJhY2tpbmcgdG8gYSBiYWNrZW5kIHZmdW5j
IHJhdGhlciB0aGFuIGFzc3VtaW5nIGFsbApiYWNrZW5kcyB3YW50IHRvIGRvIHRoaXMgaW4gdGhl
IG1hbm5lci4gSW4gdGhlIG9mIGNhc2UgZXhlY2xpc3RzIC8KcmluZyBzdWJtaXNzaW9uIHRoZSB0
cmFja2luZyBpcyBvbiB0aGUgcGh5c2ljYWwgZW5naW5lIHdoaWxlIHdpdGggR3VDCnN1Ym1pc3Np
b24gaXQgaXMgb24gdGhlIGNvbnRleHQuCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxt
YXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4u
Qy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IFJlc2V0IGltcGxlbWVudGF0aW9u
IGZvciBuZXcgR3VDIGludGVyZmFjZQoKUmVzZXQgaW1wbGVtZW50YXRpb24gZm9yIG5ldyBHdUMg
aW50ZXJmYWNlLiBUaGlzIGlzIHRoZSBsZWdhY3kgcmVzZXQKaW1wbGVtZW50YXRpb24gd2hpY2gg
aXMgY2FsbGVkIHdoZW4gdGhlIGk5MTUgb3ducyB0aGUgZW5naW5lIGhhbmcgY2hlY2suCkZ1dHVy
ZSBwYXRjaGVzIHdpbGwgb2ZmbG9hZCB0aGUgZW5naW5lIGhhbmcgY2hlY2sgdG8gR3VDIGJ1dCB3
ZSB3aWxsCmNvbnRpbnVlIHRvIG1haW50YWluIHRoaXMgbGVnYWN5IHBhdGggYXMgYSBmYWxsYmFj
ayBhbmQgdGhpcyBjb2RlIHBhdGgKaXMgYWxzbyByZXF1aXJlZCBpZiB0aGUgR3VDIGRpZXMuCgpX
aXRoIHRoZSBuZXcgR3VDIGludGVyZmFjZSBpdCBpcyBub3QgcG9zc2libGUgdG8gcmVzZXQgaW5k
aXZpZHVhbAplbmdpbmVzIC0gaXQgaXMgb25seSBwb3NzaWJsZSB0byByZXNldCB0aGUgR1BVIGVu
dGlyZWx5LiBUaGlzIHBhdGNoCmZvcmNlcyBhbiBlbnRpcmUgY2hpcCByZXNldCBpZiBhbnkgZW5n
aW5lIGhhbmdzLgoKdjI6CiAoTWljaGFsKQogIC0gQ2hlY2sgZm9yIC1FUElQRSByYXRoZXIgdGhh
biAtRUlPIChDVCBkZWFkbG9jay9jb3JydXB0IGNoZWNrKQp2MzoKIChKb2huIEgpCiAgLSBTcGxp
dCBpbnRvIGEgc2VyaWVzIG9mIHNtYWxsZXIgcGF0Y2hlcwp2NDoKIChKb2huIEgpCiAgLSBGaXgg
dHlwbwogIC0gQWRkIGJyYWNlcyBhcm91bmQgaWYgc3RhdGVtZW50cyBpbiByZXNldCBjb2RlCgpD
YzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNTogUmVz
ZXQgR1BVIGltbWVkaWF0ZWx5IGlmIHN1Ym1pc3Npb24gaXMgZGlzYWJsZWQKCklmIHN1Ym1pc3Np
b24gaXMgZGlzYWJsZWQgYnkgdGhlIGJhY2tlbmQgZm9yIGFueSByZWFzb24sIHJlc2V0IHRoZSBH
UFUKaW1tZWRpYXRlbHkgaW4gdGhlIGhlYXJ0YmVhdCBjb2RlIGFzIHRoZSBiYWNrZW5kIGNhbid0
IGJlIHJlZW5hYmxlZAp1bnRpbCB0aGUgR1BVIGlzIHJlc2V0LgoKU2lnbmVkLW9mZi1ieTogTWF0
dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhh
cnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBBZGQgZGlz
YWJsZSBpbnRlcnJ1cHRzIHRvIGd1YyBzYW5pdGl6ZQoKQWRkIGRpc2FibGUgR3VDIGludGVycnVw
dHMgdG8gaW50ZWxfZ3VjX3Nhbml0aXplKCkuIFBhcnQgb2YgdGhpcwpyZXF1aXJlcyBtb3Zpbmcg
dGhlIGd1Y18qX2ludGVycnVwdCB3cmFwcGVyIGZ1bmN0aW9uIGludG8gaGVhZGVyIGZpbGUKaW50
ZWxfZ3VjLmguCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGlu
dGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJp
b0BpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25A
SW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBTdXNwZW5kL3Jlc3VtZSBpbXBsZW1lbnRhdGlvbiBm
b3IgbmV3IGludGVyZmFjZQoKVGhlIG5ldyBHdUMgaW50ZXJmYWNlIGludHJvZHVjZXMgYW4gTU1J
TyBIMkcgY29tbWFuZCwKSU5URUxfR1VDX0FDVElPTl9SRVNFVF9DTElFTlQsIHdoaWNoIGlzIHVz
ZWQgdG8gaW1wbGVtZW50IHN1c3BlbmQuIFRoaXMKTU1JTyB0ZWFycyBkb3duIGFueSBhY3RpdmUg
Y29udGV4dHMgZ2VuZXJhdGluZyBhIGNvbnRleHQgcmVzZXQgRzJIIENUQgpmb3IgZWFjaC4gT25j
ZSB0aGF0IHN0ZXAgY29tcGxldGVzIHRoZSBHdUMgdGVhcnMgZG93biB0aGUgQ1RCCmNoYW5uZWxz
LiBJdCBpcyBzYWZlIHRvIHN1c3BlbmQgb25jZSB0aGlzIE1NSU8gSDJHIGNvbW1hbmQgY29tcGxl
dGVzCmFuZCBhbGwgRzJIIENUQnMgaGF2ZSBiZWVuIHByb2Nlc3NlZC4gSW4gcHJhY3RpY2UgdGhl
IGk5MTUgd2lsbCBsaWtlbHkKbmV2ZXIgcmVjZWl2ZSBhIEcySCBhcyBzdXNwZW5kIHNob3VsZCBv
bmx5IGJlIGNhbGxlZCBhZnRlciB0aGUgR1BVIGlzCmlkbGUuCgpSZXN1bWUgaXMgaW1wbGVtZW50
ZWQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIGJlZm9yZSAtIHNpbXBseSByZWxvYWQgdGhlCkd1QyBm
aXJtd2FyZSBhbmQgcmVpbml0aWFsaXplIGV2ZXJ5dGhpbmcgKGUuZy4gQ1RCIGNoYW5uZWxzLCBj
b250ZXh0cywKZXRjLi4pLgoKdjI6CiAoTWljaGVsIC8gSm9obiBIKQogIC0gSU5URUxfR1VDX0FD
VElPTl9SRVNFVF9DTElFTlQgMHg1QjAxIC0+IDB4NTUwNwoKQ2M6IEpvaG4gSGFycmlzb24gPGpv
aG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1h
dHRoZXcuYnJvc3RAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNaWNoYWwgV2FqZGVjemtvIDxt
aWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpv
aG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEhhbmRsZSBjb250ZXh0IHJl
c2V0IG5vdGlmaWNhdGlvbgoKR3VDIHdpbGwgaXNzdWUgYSByZXNldCBvbiBkZXRlY3RpbmcgYW4g
ZW5naW5lIGhhbmcgYW5kIHdpbGwgbm90aWZ5CnRoZSBkcml2ZXIgdmlhIGEgRzJIIG1lc3NhZ2Uu
IFRoZSBkcml2ZXIgd2lsbCBzZXJ2aWNlIHRoZSBub3RpZmljYXRpb24KYnkgcmVzZXR0aW5nIHRo
ZSBndWlsdHkgY29udGV4dCB0byBhIHNpbXBsZSBzdGF0ZSBvciBiYW5uaW5nIGl0CmNvbXBsZXRl
bHkuCgp2MjoKIChKb2huIEhhcnJpc29uKQogIC0gTW92ZSBtc2dbMF0gbG9va3VwIGFmdGVyIGxl
bmd0aCBjaGVjawp2MzoKIChKb2huIEhhcnJpc29uKQogIC0gcy9kcm1fZGJnL2RybV9lcnIKCkNj
OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KQ2M6IEpvaG4gSGFycmlz
b24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJv
c3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8
Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogSGFuZGxlIGVuZ2luZSBy
ZXNldCBmYWlsdXJlIG5vdGlmaWNhdGlvbgoKR3VDIHdpbGwgbm90aWZ5IHRoZSBkcml2ZXIsIHZp
YSBHMkgsIGlmIGl0IGZhaWxzIHRvCnJlc2V0IGFuIGVuZ2luZS4gV2UgcmVjb3ZlciBieSByZXNv
cnRpbmcgdG8gYSBmdWxsIEdQVQpyZXNldC4KCnYyOgogKEpvaG4gSGFycmlzb24pOgogIC0gcy9k
cm1fZGJnL2RybV9lcnIKClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJv
c3RAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBGZXJuYW5kbyBQYWNoZWNvIDxmZXJuYW5kby5w
YWNoZWNvQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJy
aXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEVuYWJsZSB0aGUgdGltZXIgZXhwaXJlZCBp
bnRlcnJ1cHQgZm9yIEd1QwoKVGhlIEd1QyBjYW4gaW1wbGVtZW50IGV4ZWN1dGlvbiBxdW5hdHVt
cywgZGV0ZWN0IGh1bmcgY29udGV4dHMgYW5kCm90aGVyIHN1Y2ggdGhpbmdzIGJ1dCBpdCByZXF1
aXJlcyB0aGUgdGltZXIgZXhwaXJlZCBpbnRlcnJ1cHQgdG8gZG8gc28uCgpTaWduZWQtb2ZmLWJ5
OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KQ0M6IEpvaG4gSGFycmlz
b24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJpc29u
IDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBQcm92aWRlIG1taW8g
bGlzdCB0byBiZSBzYXZlZC9yZXN0b3JlZCBvbiBlbmdpbmUgcmVzZXQKClRoZSBkcml2ZXIgbXVz
dCBwcm92aWRlIEd1QyB3aXRoIGEgbGlzdCBvZiBtbWlvIHJlZ2lzdGVycwp0aGF0IHNob3VsZCBi
ZSBzYXZlZC9yZXN0b3JlZCBkdXJpbmcgYSBHdUMtYmFzZWQgZW5naW5lIHJlc2V0LgpVbmZvcnR1
bmF0ZWx5LCB0aGUgbGlzdCBtdXN0IGJlIGR5bmFtaWNhbGx5IGFsbG9jYXRlZCBhcyBpdHMgc2l6
ZSBpcwp2YXJpYWJsZS4gVGhhdCBtZWFucyB0aGUgZHJpdmVyIG11c3QgZ2VuZXJhdGUgdGhlIGxp
c3QgdHdpY2UgLSBvbmNlIHRvCndvcmsgb3V0IHRoZSBzaXplIGFuZCBhIHNlY29uZCB0aW1lIHRv
IGFjdHVhbGx5IHNhdmUgaXQuCgp2MjoKIChBbGFuIC8gQ0kpCiAgLSBHRU43X0dUX01PREUgLT4g
R0VONl9HVF9NT0RFIHRvIGZpeCBXQSBzZWxmdGVzdCBmYWlsdXJlCgpTaWduZWQtb2ZmLWJ5OiBK
b2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBG
ZXJuYW5kbyBQYWNoZWNvIDxmZXJuYW5kby5wYWNoZWNvQGludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6
IERvbid0IGNvbXBsYWluIGFib3V0IHJlc2V0IHJhY2VzCgpJdCBpcyBpbXBvc3NpYmxlIHRvIHNl
YWwgYWxsIHJhY2UgY29uZGl0aW9ucyBvZiByZXNldHMgb2NjdXJyaW5nCmNvbmN1cnJlbnQgdG8g
b3RoZXIgb3BlcmF0aW9ucy4gQXQgbGVhc3QsIG5vdCB3aXRob3V0IGludHJvZHVjaW5nCmV4Y2Vz
aXZlIG11dGV4IGxvY2tpbmcuIEluc3RlYWQsIGRvbid0IGNvbXBsYWluIGlmIGl0IG9jY3Vycy4g
SW4KcGFydGljdWxhciwgZG9uJ3QgY29tcGxhaW4gaWYgdHJ5aW5nIHRvIHNlbmQgYSBIMkcgZHVy
aW5nIGEgcmVzZXQuCldoYXRldmVyIHRoZSBIMkcgd2FzIGFib3V0IHNob3VsZCBnZXQgcmVkb25l
IG9uY2UgdGhlIHJlc2V0IGlzIG92ZXIuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxK
b2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxt
YXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRo
ZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBFbmFibGUgR3VDIGVuZ2luZSByZXNl
dAoKQ2xlYXIgdGhlICdkaXNhYmxlIHJlc2V0cycgZmxhZyB0byBhbGxvdyBHdUMgdG8gcmVzZXQg
aHVuZyBjb250ZXh0cwooZGV0ZWN0ZWQgdmlhIHByZS1lbXB0aW9uIHRpbWVvdXQpLgoKU2lnbmVk
LW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVk
LW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2Vk
LWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1
YzogQ2FwdHVyZSBlcnJvciBzdGF0ZSBvbiBjb250ZXh0IHJlc2V0CgpXZSByZWNlaXZlIG5vdGlm
aWNhdGlvbiBvZiBhbiBlbmdpbmUgcmVzZXQgZnJvbSBHdUMgYXQgaXRzCmNvbXBsZXRpb24uIE1l
YW5pbmcgR3VDIGhhcyBwb3RlbnRpYWxseSBjbGVhcmVkIGFueSBIVyBzdGF0ZQp3ZSBtYXkgaGF2
ZSBiZWVuIGludGVyZXN0ZWQgaW4gY2FwdHVyaW5nLiBHdUMgcmVzdW1lcyBzY2hlZHVsaW5nCm9u
IHRoZSBlbmdpbmUgcG9zdC1yZXNldCwgYXMgdGhlIHJlc2V0cyBhcmUgbWVhbnQgdG8gYmUgdHJh
bnNwYXJlbnQsCmZ1cnRoZXIgbXVkZGxpbmcgb3VyIGVycm9yIHN0YXRlLgoKVGhlcmUgaXMgb25n
b2luZyB3b3JrIHRvIGRlZmluZSBhbiBBUEkgZm9yIGEgR3VDIGRlYnVnIHN0YXRlIGR1bXAuIFRo
ZQpzdWdnZXN0aW9uIGZvciBub3cgaXMgdG8gbWFudWFsbHkgZGlzYWJsZSBGVyBpbml0aWF0ZWQg
cmVzZXRzIGluIGNhc2VzCndoZXJlIGRlYnVnIHN0YXRlIGlzIG5lZWRlZC4KClNpZ25lZC1vZmYt
Ynk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTog
Sm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1Yzog
Rml4IGZvciBlcnJvciBjYXB0dXJlIGFmdGVyIGZ1bGwgR1BVIHJlc2V0IHdpdGggR3VDCgpJbiB0
aGUgY2FzZSBvZiBhIGZ1bGwgR1BVIHJlc2V0IChlLmcuIGJlY2F1c2UgR3VDIGhhcyBkaWVkIG9y
IGJlY2F1c2UKR3VDJ3MgaGFuZyBkZXRlY3Rpb24gaGFzIGJlZW4gZGlzYWJsZWQpLCB0aGUgZHJp
dmVyIGNhbid0IHJlbHkgb24gR3VDCnJlcG9ydGluZyB0aGUgZ3VpbHR5IGNvbnRleHQuIEluc3Rl
YWQsIHRoZSBkcml2ZXIgbmVlZHMgdG8gc2NhbiBhbGwKYWN0aXZlIGNvbnRleHRzIGFuZCBmaW5k
IG9uZSB0aGF0IGlzIGN1cnJlbnRseSBleGVjdXRpbmcsIGFzIHBlciB0aGUKZXhlY2xpc3QgbW9k
ZSBiZWhhdmlvdXIuIEluIEd1QyBtb2RlLCB0aGlzIHNjYW4gaXMgZGlmZmVyZW50IHRvCmV4ZWNs
aXN0IG1vZGUgYXMgdGhlIGFjdGl2ZSByZXF1ZXN0IGxpc3QgaXMgaGFuZGxlZCB2ZXJ5IGRpZmZl
cmVudGx5LgoKU2ltaWxhcmx5LCB0aGUgcmVxdWVzdCBzdGF0ZSBkdW1wIGluIGRlYnVnZnMgbmVl
ZHMgdG8gYmUgaGFuZGxlZApkaWZmZXJlbnRseSB3aGVuIGluIEd1QyBzdWJtaXNzaW9uIG1vZGUu
CgpBbHNvIHJlZmFjdHVyZWQgc29tZSBvZiB0aGUgcmVxdWVzdCBzY2FubmluZyBjb2RlIHRvIGF2
b2lkIGR1cGxpY2F0aW9uCmFjcm9zcyB0aGUgbXVsdGlwbGUgY29kZSBwYXRocyB0aGF0IGFyZSBu
b3cgcmVwbGljYXRpbmcgaXQuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMu
SGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3
LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJv
c3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBIb29rIEd1QyBzY2hlZHVsaW5nIHBvbGljaWVz
IHVwCgpVc2UgdGhlIG9mZmljaWFsIGRyaXZlciBkZWZhdWx0IHNjaGVkdWxpbmcgcG9saWNpZXMg
Zm9yIGNvbmZpZ3VyaW5nCnRoZSBHdUMgc2NoZWR1bGVyIHJhdGhlciB0aGFuIGEgYnVuY2ggb2Yg
aGFyZGNvZGVkIHZhbHVlcy4KCnYyOgogKE1hdHRoZXcgQnJvc3QpCiAgLSBNb3ZlIEk5MTVfRU5H
SU5FX1dBTlRfRk9SQ0VEX1BSRUVNUFRJT04gdG8gbGF0ZXIgcGF0Y2gKClNpZ25lZC1vZmYtYnk6
IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogTWF0
dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+CkNjOiBKb3NlIFNvdXphIDxqb3Nl
LnNvdXphQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogQ29ubmVjdCByZXNldCBtb2RwYXJhbSB1
cGRhdGVzIHRvIEd1QyBwb2xpY3kgZmxhZ3MKCkNoYW5naW5nIHRoZSByZXNldCBtb2R1bGUgcGFy
YW1ldGVyIGhhcyBubyBlZmZlY3Qgb24gYSBydW5uaW5nIEd1Qy4KVGhlIGNvcnJlc3BvbmRpbmcg
ZW50cnkgaW4gdGhlIEFEUyBtdXN0IGJlIHVwZGF0ZWQgYW5kIHRoZW4gdGhlIEd1QwppbmZvcm1l
ZCB2aWEgYSBIb3N0Mkd1QyBtZXNzYWdlLgoKVGhlIG5ldyBkZWJ1Z2ZzIGludGVyZmFjZSB0byBt
b2R1bGUgcGFyYW1ldGVycyBhbGxvd3MgdGhpcyB0byBoYXBwZW4uCkhvd2V2ZXIsIGNvbm5lY3Rp
bmcgdGhlIHBhcmFtZXRlciBkYXRhIGFkZHJlc3MgYmFjayB0byBhbnl0aGluZyB1c2VmdWwKaXMg
bWVzc3kuIE9uZSBvcHRpb24gd291bGQgYmUgdG8gcGFzcyBhIG5ldyBwcml2YXRlIGRhdGEgc3Ry
dWN0dXJlCmFkZHJlc3MgdGhyb3VnaCBpbnN0ZWFkIG9mIGp1c3QgdGhlIHBhcmFtZXRlciBwb2lu
dGVyLiBIb3dldmVyLCB0aGF0Cm1lYW5zIGhhdmluZyBhIG5ldyAoYW5kIGRpZmZlcmVudCkgZGF0
YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggcGFyYW1ldGVyCmFuZCBhIG5ldyAoYW5kIGRpZmZlcmVudCkg
d3JpdGUgZnVuY3Rpb24gZm9yIGVhY2ggcGFyYW1ldGVyLiBUaGlzCm1ldGhvZCBrZWVwcyBldmVy
eXRoaW5nIGdlbmVyaWMgYnkgaW5zdGVhZCB1c2luZyBhIHN0cmluZyBsb29rdXAgb24KdGhlIGRp
cmVjdG9yeSBlbnRyeSBuYW1lLgoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5D
LkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhl
dy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJy
b3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogSW5jbHVkZSBzY2hlZHVsaW5nIHBvbGljaWVz
IGluIHRoZSBkZWJ1Z2ZzIHN0YXRlIGR1bXAKCkFkZGVkIHRoZSBzY2hlZHVsaW5nIHBvbGljeSBw
YXJhbWV0ZXJzIHRvIHRoZSAnZ3VjX2luZm8nIGRlYnVnZnMgc3RhdGUKZHVtcC4KClNpZ25lZC1v
ZmYtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1i
eTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6
IEFkZCBnb2xkZW4gY29udGV4dCB0byBHdUMgQURTCgpUaGUgbWVkaWEgd2F0Y2hkb2cgbWVjaGFu
aXNtIGludm9sdmVzIEd1QyBkb2luZyBhIHNpbGVudCByZXNldCBhbmQKY29udGludWUgb2YgdGhl
IGh1bmcgY29udGV4dC4gVGhpcyByZXF1aXJlcyB0aGUgaTkxNSBkcml2ZXIgcHJvdmlkZSBhCmdv
bGRlbiBjb250ZXh0IHRvIEd1QyBpbiB0aGUgQURTLgoKdjI6CiAoTWF0dGhldyBCcm9zdCk6CiAg
LSBGaXggbWVtb3J5IGNvcnJ1cHRpb24gaW4gc2htZW1fcmVhZAogKEpvaG4gSCkKICAtIFVzZSBs
b2NhbHMgcmF0aGVyIHRoYW4gZGVmaW5lcyBmb3IgTFJfKiArIFNLSVBfU0laRQoKU2lnbmVkLW9m
Zi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9m
Zi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5
OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1Yzog
SW1wbGVtZW50IGJhbm5lZCBjb250ZXh0cyBmb3IgR3VDIHN1Ym1pc3Npb24KCldoZW4gdXNpbmcg
R3VDIHN1Ym1pc3Npb24sIGlmIGEgY29udGV4dCBnZXRzIGJhbm5lZCBkaXNhYmxlIHNjaGVkdWxp
bmcKYW5kIG1hcmsgYWxsIGluZmxpZ2h0IHJlcXVlc3RzIGFzIGNvbXBsZXRlLgoKQ2M6IEpvaG4g
SGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRo
ZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJy
aXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogU3VwcG9ydCBy
ZXF1ZXN0IGNhbmNlbGxhdGlvbgoKVGhpcyBhZGRzIEd1QyBiYWNrZW5kIHN1cHBvcnQgZm9yIGk5
MTVfcmVxdWVzdF9jYW5jZWwoKSwgd2hpY2ggaW4gdHVybgptYWtlcyBDT05GSUdfRFJNX0k5MTVf
UkVRVUVTVF9USU1FT1VUIHdvcmsuCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0
aGV3LmJyb3N0QGludGVsLmNvbT4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBp
bnRlbC5jb20+Cgpkcm0vaTkxNS9zZWxmdGVzdDogQmV0dGVyIGVycm9yIHJlcG9ydGluZyBmcm9t
IGhhbmdjaGVjayBzZWxmdGVzdAoKVGhlcmUgYXJlIG1hbnkgd2F5cyBpbiB3aGljaCB0aGUgaGFu
Z2NoZWNrIHNlbGZ0ZXN0IGNhbiBmYWlsLiBWZXJ5IGZldwpvZiB0aGVtIGFjdHVhbGx5IHByaW50
ZWQgYW4gZXJyb3IgbWVzc2FnZSB0byBzYXkgd2hhdCBoYXBwZW5lZC4gU28sCmZpbGwgaW4gdGhl
IG1pc3NpbmcgbWVzc2FnZXMuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMu
SGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3
LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJv
c3RAaW50ZWwuY29tPgpDYzogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xv
c3B1cmlvQGludGVsLmNvbT4KCmRybS9pOTE1L3NlbGZ0ZXN0OiBGaXggd29ya2Fyb3VuZHMgc2Vs
ZnRlc3QgZm9yIEd1QyBzdWJtaXNzaW9uCgpXaGVuIEd1QyBzdWJtaXNzaW9uIGlzIGVuYWJsZWQs
IHRoZSBHdUMgY29udHJvbHMgZW5naW5lIHJlc2V0cy4gUmF0aGVyCnRoYW4gZXhwbGljaXRseSB0
cmlnZ2VyaW5nIGEgcmVzZXQsIHRoZSBkcml2ZXIgbXVzdCBzdWJtaXQgYSBoYW5naW5nCmNvbnRl
eHQgdG8gR3VDIGFuZCB3YWl0IGZvciB0aGUgcmVzZXQgdG8gb2NjdXIuCgpTaWduZWQtb2ZmLWJ5
OiBSYWh1bCBLdW1hciBTaW5naCA8cmFodWwua3VtYXIuc2luZ2hAaW50ZWwuY29tPgpTaWduZWQt
b2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQt
b2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KQ2M6IERhbmll
bGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+CkNjOiBN
YXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHRo
ZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvc2VsZnRlc3Q6IEZp
eCBNT0NTIHNlbGZ0ZXN0IGZvciBHdUMgc3VibWlzc2lvbgoKV2hlbiBHdUMgc3VibWlzc2lvbiBp
cyBlbmFibGVkLCB0aGUgR3VDIGNvbnRyb2xzIGVuZ2luZSByZXNldHMuIFJhdGhlcgp0aGFuIGV4
cGxpY2l0bHkgdHJpZ2dlcmluZyBhIHJlc2V0LCB0aGUgZHJpdmVyIG11c3Qgc3VibWl0IGEgaGFu
Z2luZwpjb250ZXh0IHRvIEd1QyBhbmQgd2FpdCBmb3IgdGhlIHJlc2V0IHRvIG9jY3VyLgoKU2ln
bmVkLW9mZi1ieTogUmFodWwgS3VtYXIgU2luZ2ggPHJhaHVsLmt1bWFyLnNpbmdoQGludGVsLmNv
bT4KU2lnbmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNv
bT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+
CkNjOiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwu
Y29tPgpDYzogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2Vk
LWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L3Nl
bGZ0ZXN0OiBJbmNyZWFzZSBzb21lIHRpbWVvdXRzIGluIGxpdmVfcmVxdWVzdHMKClJlcXVlc3Rz
IG1heSB0YWtlIHNsaWdodGx5IGxvbmdlciB3aXRoIEd1QyBzdWJtaXNzaW9uLCBsZXQncyBpbmNy
ZWFzZQp0aGUgdGltZW91dHMgaW4gbGl2ZV9yZXF1ZXN0cy4KClNpZ25lZC1vZmYtYnk6IE1hdHRo
ZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvc2VsZnRlc3Q6IEZp
eCBoYW5nY2hlY2sgc2VsZiB0ZXN0IGZvciBHdUMgc3VibWlzc2lvbgoKRnJvbTogSm9obiBIYXJy
aXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KCldoZW4gR3VDIHN1Ym1pc3Npb24gaXMg
ZW5hYmxlZCwgdGhlIEd1QyBjb250cm9scyBlbmdpbmUgcmVzZXRzLiBSYXRoZXIKdGhhbiBleHBs
aWNpdGx5IHRyaWdnZXJpbmcgYSByZXNldCwgdGhlIGRyaXZlciBtdXN0IHN1Ym1pdCBhIGhhbmdp
bmcKY29udGV4dCB0byBHdUMgYW5kIHdhaXQgZm9yIHRoZSByZXNldCB0byBvY2N1ci4KCkNvbnZl
cnNlbHksIG9uZSBvZiB0aGUgdGVzdHMgc3BlY2lmaWNhbGx5IHNlbmRzIGhhbmdpbmcgYmF0Y2hl
cyB0byB0aGUKZW5naW5lcyBidXQgd2FudHMgdGhlbSB0byBzaXQgYXJvdW5kIHVudGlsIGEgbWFu
dWFsIHJlc2V0IG9mIHRoZSBmdWxsCkdUIChpbmNsdWRpbmcgR3VDIGl0c2VsZikuIFRoYXQgbWVh
bnMgZGlzYWJsaW5nIEd1QyBiYXNlZCBlbmdpbmUKcmVzZXRzIHRvIHByZXZlbnQgdGhvc2UgZnJv
bSBraWxsaW5nIHRoZSBoYW5naW5nIGJhdGNoIHRvbyBzb29uLiBTbywKYWRkIHN1cHBvcnQgdG8g
dGhlIHNjaGVkdWxpbmcgcG9saWN5IGhlbHBlciBmb3IgZGlzYWJsaW5nIHJlc2V0cyBhcwp3ZWxs
IGFzIG1ha2luZyB0aGVtIHF1aWNrZXIhCgpJbiBHdUMgc3VibWlzc2lvbiBtb2RlLCB0aGUgJ2lz
IGVuZ2luZSBpZGxlJyB0ZXN0IGJhc2ljYWxseSB0dXJucyBpbnRvCidpcyBlbmdpbmUgUE0gd2Fr
ZWxvY2sgaGVsZCcuIEluZGVwZW5kZW50bHksIHRoZXJlIGlzIGEgaGVhcnRiZWF0CmRpc2FibGUg
aGVscGVyIGZ1bmN0aW9uIHRoYXQgdGhlIHRlc3RzIHVzZS4gRm9yIHVuZXhwbGFpbmVkIHJlYXNv
bnMsCnRoaXMgYWNxdWlyZXMgdGhlIGVuZ2luZSB3YWtlbG9jayBiZWZvcmUgZGlzYWJsaW5nIHRo
ZSBoZWFydGJlYXQgYW5kCm9ubHkgcmVsZWFzZXMgaXQgd2hlbiByZS1lbmFibGluZyB0aGUgaGVh
cnRiZWF0LiBBcyBvbmUgb2YgdGhlIHRlc3RzCnRyaWVzIHRvIGRvIGEgd2FpdCBmb3IgaWRsZSBp
biB0aGUgbWlkZGxlIG9mIGEgaGVhcnRiZWF0IGRpc2FibGVkCnNlY3Rpb24sIGl0IGlzIHRoZXJl
Zm9yZSBndWFyYW50ZWVkIHRvIGFsd2F5cyBmYWlsLiBBZGRlZCBhICdub19wbScKdmFyaWFudCBv
ZiB0aGUgaGVhcnRiZWF0IGhlbHBlciB0aGF0IGFsbG93cyB0aGUgZW5naW5lIHRvIGJlIGFzbGVl
cAp3aGlsZSBhbHNvIGhhdmluZyBoZWFydGJlYXRzIGRpc2FibGVkLgoKU2lnbmVkLW9mZi1ieTog
Sm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTog
TWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNYXR0
aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBT
cHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+CkNjOiBNYXR0aGV3IEJyb3N0
IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L3NlbGZ0ZXN0OiBCdW1wIHNlbGZ0
ZXN0IHRpbWVvdXRzIGZvciBoYW5nY2hlY2sKCkZyb206IEpvaG4gSGFycmlzb24gPEpvaG4uQy5I
YXJyaXNvbkBJbnRlbC5jb20+CgpTb21lIHRlc3RpbmcgZW52aXJvbm1lbnRzIGFuZCBzb21lIGhl
YXZpZXIgdGVzdHMgYXJlIHNsb3dlciB0aGFuCnByZXZpb3VzIGxpbWl0cyBhbGxvd2VkIGZvci4g
Rm9yIGV4YW1wbGUsIGl0IGNhbiB0YWtlIG11bHRpcGxlIHNlY29uZHMKZm9yIHRoZSAnY29udGV4
dCBoYXMgYmVlbiByZXNldCcgbm90aWZpY2F0aW9uIGhhbmRsZXIgdG8gcmVhY2ggdGhlCidraWxs
IHRoZSByZXF1ZXN0cycgY29kZSBpbiB0aGUgJ2FjdGl2ZScgdmVyc2lvbiBvZiB0aGUgJ3Jlc2V0
CmVuZ2luZXMnIHRlc3QuIER1cmluZyB3aGljaCB0aW1lIHRoZSBzZWxmdGVzdCBnZXRzIGJvcmVk
LCBnaXZlcyB1cAp3YWl0aW5nIGFuZCBmYWlscyB0aGUgdGVzdC4KClRoZXJlIGlzIGFsc28gYW4g
YXN5bmMgdGhyZWFkIHRoYXQgdGhlIHNlbGZ0ZXN0IHVzZXMgdG8gcHVtcCB3b3JrCnRocm91Z2gg
dGhlIGhhcmR3YXJlIGluIHBhcmFsbGVsIHRvIHRoZSBjb250ZXh0IHRoYXQgaXMgbWFya2VkIGZv
cgpyZXNldC4gVGhhdCBhbHNvIGNvdWxkIGdldCBib3JlZCB3YWl0aW5nIGZvciBjb21wbGV0aW9u
cyBhbmQga2lsbCB0aGUKdGVzdCBvZmYuCgpMYXN0bHksIHRoZSBmbHVzaCBhdCB0aGUgb2YgdmFy
aW91cyB0ZXN0IHNlY3Rpb25zIGNhbiBhbHNvIHNlZQp0aW1lb3V0cyBkdWUgdG8gdGhlIGxhcmdl
IGFtb3VudCBvZiB3b3JrIGJhY2tlZCB1cC4gVGhpcyBpcyBhbHNvIHRydWUKb2YgdGhlIGxpdmVf
aHdzcF9yZWFkIHRlc3QuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFy
cmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJy
b3N0QGludGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9s
b3NwdXJpb0BpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJy
b3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogSW1wbGVtZW50IEd1QyBwcmlvcml0eSBtYW5h
Z2VtZW50CgpJbXBsZW1lbnQgYSBzaW1wbGUgc3RhdGljIG1hcHBpbmcgYWxnb3JpdGhtIG9mIHRo
ZSBpOTE1IHByaW9yaXR5IGxldmVscwooaW50LCAtMWsgdG8gMWsgZXhwb3NlZCB0byB1c2VyKSB0
byB0aGUgNCBHdUMgbGV2ZWxzLiBNYXBwaW5nIGlzIGFzCmZvbGxvd3M6CgppOTE1IGxldmVsIDwg
MCAgICAgICAgICAtPiBHdUMgbG93IGxldmVsICAgICAoMykKaTkxNSBsZXZlbCA9PSAwICAgICAg
ICAgLT4gR3VDIG5vcm1hbCBsZXZlbCAgKDIpCmk5MTUgbGV2ZWwgPCBJTlRfTUFYICAgIC0+IEd1
QyBoaWdoIGxldmVsICAgICgxKQppOTE1IGxldmVsID09IElOVF9NQVggICAtPiBHdUMgaGlnaGVz
dCBsZXZlbCAoMCkKCldlIGJlbGlldmUgdGhpcyBtYXBwaW5nIHNob3VsZCBjb3ZlciB0aGUgVU1E
IHVzZSBjYXNlcyAoMyBkaXN0aW5jdCB1c2VyCmxldmVscyArIDEga2VybmVsIGxldmVsKS4KCklu
IGFkZGl0aW9uIHRvIHN0YXRpYyBtYXBwaW5nLCBhIHNpbXBsZSBjb3VudGVyIHN5c3RlbSBpcyBh
dHRhY2hlZCB0bwplYWNoIGNvbnRleHQgdHJhY2tpbmcgdGhlIG51bWJlciBvZiByZXF1ZXN0cyBp
bmZsaWdodCBvbiB0aGUgY29udGV4dCBhdAplYWNoIGxldmVsLiBUaGlzIGlzIG5lZWRlZCBhcyB0
aGUgR3VDIGxldmVscyBhcmUgcGVyIGNvbnRleHQgd2hpbGUgaW4KdGhlIGk5MTUgbGV2ZWxzIGFy
ZSBwZXIgcmVxdWVzdC4KClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJv
c3RAaW50ZWwuY29tPgpDYzogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xv
c3B1cmlvQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogVW5ibG9jayBHdUMgc3VibWlzc2lvbiBv
biBHZW4xMSsKClVuYmxvY2sgR3VDIHN1Ym1pc3Npb24gb24gR2VuMTErIHBsYXRmb3Jtcy4KCnYy
OgogKE1hcnRpbiBQZXJlcyAvIEpvaG4gSCkKICAtIERlbGV0ZSBkZWJ1ZyBtZXNzYWdlIHdoZW4g
R3VDIGlzIGRpc2FibGVkIGJ5IGRlZmF1bHQgb24gY2VydGFpbgogICAgcGxhdGZvcm1zCgpTaWdu
ZWQtb2ZmLWJ5OiBNaWNoYWwgV2FqZGVjemtvIDxtaWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4K
U2lnbmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1
cmlvQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9z
dEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGlu
dGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZSAgICAgICAgICAgICAg
ICAgfCAgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMg
ICB8ICAgMjEgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9tbWFuLmMgICAg
ICB8ICAgIDMgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2dlbjhfZW5naW5lX2NzLmMgICAg
ICB8ICAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMg
ICB8ICAgNDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmgg
ICB8ICAgMTYgKy0KIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMu
aCB8ICAgIDcgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jICAgICAg
IHwgICA1MCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oICAgICAg
IHwgICA1MCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90eXBlcy5o
IHwgICA2MyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggICAgICAg
IHwgICA1NyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAg
IHwgIDE4MiArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmMg
IHwgICA3MSArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0Lmgg
IHwgICAgNCArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCAg
fCAgIDEzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdXNlci5jICAg
fCAgICA0ICsKIC4uLi9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5jICB8
ICAgODkgKy0KIC4uLi9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5oICB8
ICAgIDQgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyAgICAgICAgICAgIHwg
ICAyMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oICAgICAgICAgICAgfCAg
ICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMgICAgICAgICB8ICAg
IDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmMgICB8ICAg
MjEgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmggICB8ICAg
IDkgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaCAgICAgICB8ICAg
IDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyAgICAgICAgIHwgICA1
MCArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYyAgIHwgICA0
MiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ycHMuYyAgICAgICAgICAgfCAgICA0
ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMgICB8ICAgNDYg
Ky0KIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHNfdHlwZXMuaCB8ICAgIDEg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyAgICAgICAgIHwgICAzNCAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29udGV4dC5jICAgIHwgICAxMCAr
CiAuLi4vZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5jICAgfCAgIDIyICsK
IC4uLi9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmggICB8ICAgIDIgKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZXhlY2xpc3RzLmMgIHwgICAxMiArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfaGFuZ2NoZWNrLmMgIHwgIDMyMiArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbW9jcy5jICAgICAgIHwgICA1MCArLQog
Li4uL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF93b3JrYXJvdW5kcy5jICAgIHwgIDEzMiArLQog
Li4uL2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmggIHwgICAxNSArCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuYyAgICAgICAgfCAgIDgyICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuaCAgICAgICAgfCAgMTAxICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfYWRzLmMgICAgfCAgNDY0ICsrLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Fkcy5oICAgIHwgICAgNCArCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuYyAgICAgfCAgMTMzICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuaCAgICAgfCAgIDE3ICstCiAu
Li4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19kZWJ1Z2ZzLmMgICAgfCAgIDI1ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZndpZi5oICAgfCAgIDg5ICstCiAu
Li4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMgfCAyODE1ICsrKysr
KysrKysrKysrKy0tCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9u
LmggfCAgIDE4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jICAgICAg
ICAgfCAgMTAxICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5oICAgICAg
ICAgfCAgIDExICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmc19wYXJhbXMuYyAg
ICB8ICAgMzIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXZpY3QuYyAgICAgICAg
IHwgICAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jICAgICAgICAg
fCAgIDI1ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oICAgICAgICAgICAgICAg
fCAgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8
ICAxNzQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oICAgICAgICAgICB8
ICAgMjggKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyAgICAgICAgIHwg
ICAxNiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuaCAgICAgICAgIHwg
ICAxMCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJfdHlwZXMuaCAgIHwg
ICAyMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RyYWNlLmggICAgICAgICAgICAgfCAg
MjAxICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMgfCAg
ICA0ICstCiAuLi4vZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5jICAgfCAg
ICAyICstCiAuLi4vZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMgICAgfCAg
ICAyICstCiAuLi4vaTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBlcnMuYyAgfCAg
IDg5ICsKIC4uLi9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oICB8ICAg
MzUgKwogLi4uL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMgIHwgICAg
MyArLQogaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oICAgICAgICAgICAgICAgICAgIHwgICAg
OSArCiA2NyBmaWxlcyBjaGFuZ2VkLCA1MTIxIGluc2VydGlvbnMoKyksIDg4MSBkZWxldGlvbnMo
LSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50
ZWxfc2NoZWR1bGVyX2hlbHBlcnMuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtl
ZmlsZQppbmRleCAxMGIzYmI2MjA3YmEuLmFiNzY3OTk1NzYyMyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZp
bGUKQEAgLTI4MCw2ICsyODAsNyBAQCBpOTE1LSQoQ09ORklHX0RSTV9JOTE1X0NBUFRVUkVfRVJS
T1IpICs9IGk5MTVfZ3B1X2Vycm9yLm8KIGk5MTUtJChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1Qp
ICs9IFwKIAlnZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NsaWVudF9ibHQubyBcCiAJZ2VtL3NlbGZ0
ZXN0cy9pZ3RfZ2VtX3V0aWxzLm8gXAorCXNlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVy
cy5vIFwKIAlzZWxmdGVzdHMvaTkxNV9yYW5kb20ubyBcCiAJc2VsZnRlc3RzL2k5MTVfc2VsZnRl
c3QubyBcCiAJc2VsZnRlc3RzL2lndF9hdG9taWMubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2NvbnRleHQuYwppbmRleCA3ZDZmNTJkOGE4MDEuLmQ4N2E0YzZkYTViYyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCkBAIC03NCw3
ICs3NCw2IEBACiAjaW5jbHVkZSAiZ3QvaW50ZWxfY29udGV4dF9wYXJhbS5oIgogI2luY2x1ZGUg
Imd0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVf
dXNlci5oIgotI2luY2x1ZGUgImd0L2ludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uLmgiIC8qIHZp
cnR1YWxfZW5naW5lICovCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3B1X2NvbW1hbmRzLmgiCiAjaW5j
bHVkZSAiZ3QvaW50ZWxfcmluZy5oIgogCkBAIC0zNjMsOSArMzYyLDYgQEAgc2V0X3Byb3RvX2N0
eF9lbmdpbmVzX2JhbGFuY2Uoc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gX191c2VyICpiYXNl
LAogCWlmICghSEFTX0VYRUNMSVNUUyhpOTE1KSkKIAkJcmV0dXJuIC1FTk9ERVY7CiAKLQlpZiAo
aW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmaTkxNS0+Z3QudWMpKQotCQlyZXR1cm4gLUVO
T0RFVjsgLyogbm90IGltcGxlbWVudCB5ZXQgKi8KLQogCWlmIChnZXRfdXNlcihpZHgsICZleHQt
PmVuZ2luZV9pbmRleCkpCiAJCXJldHVybiAtRUZBVUxUOwogCkBAIC00OTUsNiArNDkxLDExIEBA
IHNldF9wcm90b19jdHhfZW5naW5lc19ib25kKHN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIF9f
dXNlciAqYmFzZSwgdm9pZCAqZGF0YSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCisJaWYgKGlu
dGVsX2VuZ2luZV91c2VzX2d1YyhtYXN0ZXIpKSB7CisJCURSTV9ERUJVRygiYm9uZGluZyBleHRl
bnNpb24gbm90IHN1cHBvcnRlZCB3aXRoIEd1QyBzdWJtaXNzaW9uIik7CisJCXJldHVybiAtRU5P
REVWOworCX0KKwogCWlmIChnZXRfdXNlcihudW1fYm9uZHMsICZleHQtPm51bV9ib25kcykpCiAJ
CXJldHVybiAtRUZBVUxUOwogCkBAIC03OTksNyArODAwLDggQEAgc3RhdGljIGludCBpbnRlbF9j
b250ZXh0X3NldF9nZW0oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCX0KIAogCWlmIChjdHgt
PnNjaGVkLnByaW9yaXR5ID49IEk5MTVfUFJJT1JJVFlfTk9STUFMICYmCi0JICAgIGludGVsX2Vu
Z2luZV9oYXNfdGltZXNsaWNlcyhjZS0+ZW5naW5lKSkKKwkgICAgaW50ZWxfZW5naW5lX2hhc190
aW1lc2xpY2VzKGNlLT5lbmdpbmUpICYmCisJICAgIGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3Jl
cyhjZS0+ZW5naW5lKSkKIAkJX19zZXRfYml0KENPTlRFWFRfVVNFX1NFTUFQSE9SRVMsICZjZS0+
ZmxhZ3MpOwogCiAJaWYgKElTX0FDVElWRShDT05GSUdfRFJNX0k5MTVfUkVRVUVTVF9USU1FT1VU
KSAmJgpAQCAtOTQ5LDggKzk1MSw4IEBAIHN0YXRpYyBzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAq
dXNlcl9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJCQlicmVhazsKIAog
CQljYXNlIEk5MTVfR0VNX0VOR0lORV9UWVBFX0JBTEFOQ0VEOgotCQkJY2UgPSBpbnRlbF9leGVj
bGlzdHNfY3JlYXRlX3ZpcnR1YWwocGVbbl0uc2libGluZ3MsCi0JCQkJCQkJICAgIHBlW25dLm51
bV9zaWJsaW5ncyk7CisJCQljZSA9IGludGVsX2VuZ2luZV9jcmVhdGVfdmlydHVhbChwZVtuXS5z
aWJsaW5ncywKKwkJCQkJCQkgcGVbbl0ubnVtX3NpYmxpbmdzKTsKIAkJCWJyZWFrOwogCiAJCWNh
c2UgSTkxNV9HRU1fRU5HSU5FX1RZUEVfSU5WQUxJRDoKQEAgLTEwODIsNyArMTA4NCw3IEBAIHN0
YXRpYyB2b2lkIGtpbGxfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqZW5naW5lcywg
Ym9vbCBiYW4pCiAJZm9yX2VhY2hfZ2VtX2VuZ2luZShjZSwgZW5naW5lcywgaXQpIHsKIAkJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwogCi0JCWlmIChiYW4gJiYgaW50ZWxfY29udGV4
dF9zZXRfYmFubmVkKGNlKSkKKwkJaWYgKGJhbiAmJiBpbnRlbF9jb250ZXh0X2JhbihjZSwgTlVM
TCkpCiAJCQljb250aW51ZTsKIAogCQkvKgpAQCAtMTc3OCw3ICsxNzgwLDggQEAgc3RhdGljIHZv
aWQgX19hcHBseV9wcmlvcml0eShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHZvaWQgKmFyZykK
IAlpZiAoIWludGVsX2VuZ2luZV9oYXNfdGltZXNsaWNlcyhjZS0+ZW5naW5lKSkKIAkJcmV0dXJu
OwogCi0JaWYgKGN0eC0+c2NoZWQucHJpb3JpdHkgPj0gSTkxNV9QUklPUklUWV9OT1JNQUwpCisJ
aWYgKGN0eC0+c2NoZWQucHJpb3JpdHkgPj0gSTkxNV9QUklPUklUWV9OT1JNQUwgJiYKKwkgICAg
aW50ZWxfZW5naW5lX2hhc19zZW1hcGhvcmVzKGNlLT5lbmdpbmUpKQogCQlpbnRlbF9jb250ZXh0
X3NldF91c2Vfc2VtYXBob3JlcyhjZSk7CiAJZWxzZQogCQlpbnRlbF9jb250ZXh0X2NsZWFyX3Vz
ZV9zZW1hcGhvcmVzKGNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5j
CmluZGV4IGE5MGY3OTZlODVjMC4uNmZmZmQ0ZDM3N2MyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9tbWFuLmMKQEAgLTY0NSw3ICs2NDUsOCBAQCBtbWFwX29mZnNldF9hdHRh
Y2goc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJZ290byBpbnNlcnQ7CiAKIAkv
KiBBdHRlbXB0IHRvIHJlYXAgc29tZSBtbWFwIHNwYWNlIGZyb20gZGVhZCBvYmplY3RzICovCi0J
ZXJyID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoJmk5MTUtPmd0LCBNQVhfU0NI
RURVTEVfVElNRU9VVCk7CisJZXJyID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQo
Jmk5MTUtPmd0LCBNQVhfU0NIRURVTEVfVElNRU9VVCwKKwkJCQkJICAgICAgIE5VTEwpOwogCWlm
IChlcnIpCiAJCWdvdG8gZXJyOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9nZW44X2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvZ2VuOF9lbmdpbmVf
Y3MuYwppbmRleCA4N2IwNjU3MmZkMmUuLmY3YWFlNTAyZWMzZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvZ2VuOF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9nZW44X2VuZ2luZV9jcy5jCkBAIC01MDYsNyArNTA2LDggQEAgZ2VuOF9lbWl0X2Zp
bmlfYnJlYWRjcnVtYl90YWlsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB1MzIgKmNzKQogCSpj
cysrID0gTUlfVVNFUl9JTlRFUlJVUFQ7CiAKIAkqY3MrKyA9IE1JX0FSQl9PTl9PRkYgfCBNSV9B
UkJfRU5BQkxFOwotCWlmIChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMocnEtPmVuZ2luZSkp
CisJaWYgKGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3JlcyhycS0+ZW5naW5lKSAmJgorCSAgICAh
aW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnEtPmVuZ2luZS0+Z3QtPnVjKSkKIAkJY3Mg
PSBlbWl0X3ByZWVtcHRfYnVzeXdhaXQocnEsIGNzKTsKIAogCXJxLT50YWlsID0gaW50ZWxfcmlu
Z19vZmZzZXQocnEsIGNzKTsKQEAgLTU5OCw3ICs1OTksOCBAQCBnZW4xMl9lbWl0X2ZpbmlfYnJl
YWRjcnVtYl90YWlsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB1MzIgKmNzKQogCSpjcysrID0g
TUlfVVNFUl9JTlRFUlJVUFQ7CiAKIAkqY3MrKyA9IE1JX0FSQl9PTl9PRkYgfCBNSV9BUkJfRU5B
QkxFOwotCWlmIChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMocnEtPmVuZ2luZSkpCisJaWYg
KGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3JlcyhycS0+ZW5naW5lKSAmJgorCSAgICAhaW50ZWxf
dWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnEtPmVuZ2luZS0+Z3QtPnVjKSkKIAkJY3MgPSBnZW4x
Ml9lbWl0X3ByZWVtcHRfYnVzeXdhaXQocnEsIGNzKTsKIAogCXJxLT50YWlsID0gaW50ZWxfcmlu
Z19vZmZzZXQocnEsIGNzKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2JyZWFkY3J1bWJzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNy
dW1icy5jCmluZGV4IDM4Y2M0Mjc4M2RmYi4uMjA5Y2YyNjViZjc0IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMKQEAgLTE1LDI4ICsxNSwxNCBAQAogI2lu
Y2x1ZGUgImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVzdHMuaCIKIAot
c3RhdGljIGJvb2wgaXJxX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitz
dGF0aWMgYm9vbCBpcnFfZW5hYmxlKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKIHsKLQlp
ZiAoIWVuZ2luZS0+aXJxX2VuYWJsZSkKLQkJcmV0dXJuIGZhbHNlOwotCi0JLyogQ2FsbGVyIGRp
c2FibGVzIGludGVycnVwdHMgKi8KLQlzcGluX2xvY2soJmVuZ2luZS0+Z3QtPmlycV9sb2NrKTsK
LQllbmdpbmUtPmlycV9lbmFibGUoZW5naW5lKTsKLQlzcGluX3VubG9jaygmZW5naW5lLT5ndC0+
aXJxX2xvY2spOwotCi0JcmV0dXJuIHRydWU7CisJcmV0dXJuIGludGVsX2VuZ2luZV9pcnFfZW5h
YmxlKGItPmlycV9lbmdpbmUpOwogfQogCi1zdGF0aWMgdm9pZCBpcnFfZGlzYWJsZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitzdGF0aWMgdm9pZCBpcnFfZGlzYWJsZShzdHJ1Y3Qg
aW50ZWxfYnJlYWRjcnVtYnMgKmIpCiB7Ci0JaWYgKCFlbmdpbmUtPmlycV9kaXNhYmxlKQotCQly
ZXR1cm47Ci0KLQkvKiBDYWxsZXIgZGlzYWJsZXMgaW50ZXJydXB0cyAqLwotCXNwaW5fbG9jaygm
ZW5naW5lLT5ndC0+aXJxX2xvY2spOwotCWVuZ2luZS0+aXJxX2Rpc2FibGUoZW5naW5lKTsKLQlz
cGluX3VubG9jaygmZW5naW5lLT5ndC0+aXJxX2xvY2spOworCWludGVsX2VuZ2luZV9pcnFfZGlz
YWJsZShiLT5pcnFfZW5naW5lKTsKIH0KIAogc3RhdGljIHZvaWQgX19pbnRlbF9icmVhZGNydW1i
c19hcm1faXJxKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKQEAgLTU3LDcgKzQzLDcgQEAg
c3RhdGljIHZvaWQgX19pbnRlbF9icmVhZGNydW1ic19hcm1faXJxKHN0cnVjdCBpbnRlbF9icmVh
ZGNydW1icyAqYikKIAlXUklURV9PTkNFKGItPmlycV9hcm1lZCwgdHJ1ZSk7CiAKIAkvKiBSZXF1
ZXN0cyBtYXkgaGF2ZSBjb21wbGV0ZWQgYmVmb3JlIHdlIGNvdWxkIGVuYWJsZSB0aGUgaW50ZXJy
dXB0LiAqLwotCWlmICghYi0+aXJxX2VuYWJsZWQrKyAmJiBpcnFfZW5hYmxlKGItPmlycV9lbmdp
bmUpKQorCWlmICghYi0+aXJxX2VuYWJsZWQrKyAmJiBiLT5pcnFfZW5hYmxlKGIpKQogCQlpcnFf
d29ya19xdWV1ZSgmYi0+aXJxX3dvcmspOwogfQogCkBAIC03Niw3ICs2Miw3IEBAIHN0YXRpYyB2
b2lkIF9faW50ZWxfYnJlYWRjcnVtYnNfZGlzYXJtX2lycShzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVt
YnMgKmIpCiB7CiAJR0VNX0JVR19PTighYi0+aXJxX2VuYWJsZWQpOwogCWlmICghLS1iLT5pcnFf
ZW5hYmxlZCkKLQkJaXJxX2Rpc2FibGUoYi0+aXJxX2VuZ2luZSk7CisJCWItPmlycV9kaXNhYmxl
KGIpOwogCiAJV1JJVEVfT05DRShiLT5pcnFfYXJtZWQsIGZhbHNlKTsKIAlpbnRlbF9ndF9wbV9w
dXRfYXN5bmMoYi0+aXJxX2VuZ2luZS0+Z3QpOwpAQCAtMjU5LDYgKzI0NSw5IEBAIHN0YXRpYyB2
b2lkIHNpZ25hbF9pcnFfd29yayhzdHJ1Y3QgaXJxX3dvcmsgKndvcmspCiAJCQlsbGlzdF9lbnRy
eShzaWduYWwsIHR5cGVvZigqcnEpLCBzaWduYWxfbm9kZSk7CiAJCXN0cnVjdCBsaXN0X2hlYWQg
Y2JfbGlzdDsKIAorCQlpZiAocnEtPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXRpcmVfaW5mbGln
aHRfcmVxdWVzdF9wcmlvKQorCQkJcnEtPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXRpcmVfaW5m
bGlnaHRfcmVxdWVzdF9wcmlvKHJxKTsKKwogCQlzcGluX2xvY2soJnJxLT5sb2NrKTsKIAkJbGlz
dF9yZXBsYWNlKCZycS0+ZmVuY2UuY2JfbGlzdCwgJmNiX2xpc3QpOwogCQlfX2RtYV9mZW5jZV9z
aWduYWxfX3RpbWVzdGFtcCgmcnEtPmZlbmNlLCB0aW1lc3RhbXApOwpAQCAtMjgxLDcgKzI3MCw3
IEBAIGludGVsX2JyZWFkY3J1bWJzX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICppcnFf
ZW5naW5lKQogCWlmICghYikKIAkJcmV0dXJuIE5VTEw7CiAKLQliLT5pcnFfZW5naW5lID0gaXJx
X2VuZ2luZTsKKwlrcmVmX2luaXQoJmItPnJlZik7CiAKIAlzcGluX2xvY2tfaW5pdCgmYi0+c2ln
bmFsZXJzX2xvY2spOwogCUlOSVRfTElTVF9IRUFEKCZiLT5zaWduYWxlcnMpOwpAQCAtMjkwLDYg
KzI3OSwxMCBAQCBpbnRlbF9icmVhZGNydW1ic19jcmVhdGUoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqaXJxX2VuZ2luZSkKIAlzcGluX2xvY2tfaW5pdCgmYi0+aXJxX2xvY2spOwogCWluaXRfaXJx
X3dvcmsoJmItPmlycV93b3JrLCBzaWduYWxfaXJxX3dvcmspOwogCisJYi0+aXJxX2VuZ2luZSA9
IGlycV9lbmdpbmU7CisJYi0+aXJxX2VuYWJsZSA9IGlycV9lbmFibGU7CisJYi0+aXJxX2Rpc2Fi
bGUgPSBpcnFfZGlzYWJsZTsKKwogCXJldHVybiBiOwogfQogCkBAIC0zMDMsOSArMjk2LDkgQEAg
dm9pZCBpbnRlbF9icmVhZGNydW1ic19yZXNldChzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIp
CiAJc3Bpbl9sb2NrX2lycXNhdmUoJmItPmlycV9sb2NrLCBmbGFncyk7CiAKIAlpZiAoYi0+aXJx
X2VuYWJsZWQpCi0JCWlycV9lbmFibGUoYi0+aXJxX2VuZ2luZSk7CisJCWItPmlycV9lbmFibGUo
Yik7CiAJZWxzZQotCQlpcnFfZGlzYWJsZShiLT5pcnFfZW5naW5lKTsKKwkJYi0+aXJxX2Rpc2Fi
bGUoYik7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZiLT5pcnFfbG9jaywgZmxhZ3MpOwog
fQpAQCAtMzI1LDExICszMTgsMTQgQEAgdm9pZCBfX2ludGVsX2JyZWFkY3J1bWJzX3Bhcmsoc3Ry
dWN0IGludGVsX2JyZWFkY3J1bWJzICpiKQogCX0KIH0KIAotdm9pZCBpbnRlbF9icmVhZGNydW1i
c19mcmVlKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKK3ZvaWQgaW50ZWxfYnJlYWRjcnVt
YnNfZnJlZShzdHJ1Y3Qga3JlZiAqa3JlZikKIHsKKwlzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMg
KmIgPSBjb250YWluZXJfb2Yoa3JlZiwgdHlwZW9mKCpiKSwgcmVmKTsKKwogCWlycV93b3JrX3N5
bmMoJmItPmlycV93b3JrKTsKIAlHRU1fQlVHX09OKCFsaXN0X2VtcHR5KCZiLT5zaWduYWxlcnMp
KTsKIAlHRU1fQlVHX09OKGItPmlycV9hcm1lZCk7CisKIAlrZnJlZShiKTsKIH0KIApkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmgKaW5kZXggM2NlNWNlMjcwYjA0
Li5iZTBkNGYzNzlhODUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2JyZWFkY3J1bWJzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRj
cnVtYnMuaApAQCAtOSw3ICs5LDcgQEAKICNpbmNsdWRlIDxsaW51eC9hdG9taWMuaD4KICNpbmNs
dWRlIDxsaW51eC9pcnFfd29yay5oPgogCi0jaW5jbHVkZSAiaW50ZWxfZW5naW5lX3R5cGVzLmgi
CisjaW5jbHVkZSAiaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMuaCIKIAogc3RydWN0IGRybV9wcmlu
dGVyOwogc3RydWN0IGk5MTVfcmVxdWVzdDsKQEAgLTE3LDcgKzE3LDcgQEAgc3RydWN0IGludGVs
X2JyZWFkY3J1bWJzOwogCiBzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKgogaW50ZWxfYnJlYWRj
cnVtYnNfY3JlYXRlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmlycV9lbmdpbmUpOwotdm9pZCBp
bnRlbF9icmVhZGNydW1ic19mcmVlKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYik7Cit2b2lk
IGludGVsX2JyZWFkY3J1bWJzX2ZyZWUoc3RydWN0IGtyZWYgKmtyZWYpOwogCiB2b2lkIGludGVs
X2JyZWFkY3J1bWJzX3Jlc2V0KHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYik7CiB2b2lkIF9f
aW50ZWxfYnJlYWRjcnVtYnNfcGFyayhzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpOwpAQCAt
NDgsNCArNDgsMTYgQEAgdm9pZCBpOTE1X3JlcXVlc3RfY2FuY2VsX2JyZWFkY3J1bWIoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCk7CiB2b2lkIGludGVsX2NvbnRleHRfcmVtb3ZlX2JyZWFk
Y3J1bWJzKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJCQkgICAgICBzdHJ1Y3QgaW50ZWxf
YnJlYWRjcnVtYnMgKmIpOwogCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9icmVhZGNydW1i
cyAqCitpbnRlbF9icmVhZGNydW1ic19nZXQoc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiKQor
eworCWtyZWZfZ2V0KCZiLT5yZWYpOworCXJldHVybiBiOworfQorCitzdGF0aWMgaW5saW5lIHZv
aWQgaW50ZWxfYnJlYWRjcnVtYnNfcHV0KHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKK3sK
KwlrcmVmX3B1dCgmYi0+cmVmLCBpbnRlbF9icmVhZGNydW1ic19mcmVlKTsKK30KKwogI2VuZGlm
IC8qIF9fSU5URUxfQlJFQURDUlVNQlNfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2JyZWFkY3J1bWJzX3R5cGVzLmgKaW5kZXggM2EwODRjZThmZjVlLi43MmRmZDM3
NDhjNGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1
bWJzX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVt
YnNfdHlwZXMuaApAQCAtNywxMCArNywxMyBAQAogI2RlZmluZSBfX0lOVEVMX0JSRUFEQ1JVTUJT
X1RZUEVTX18KIAogI2luY2x1ZGUgPGxpbnV4L2lycV93b3JrLmg+CisjaW5jbHVkZSA8bGludXgv
a3JlZi5oPgogI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KICNpbmNsdWRlIDxsaW51eC9zcGlubG9j
ay5oPgogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAKKyNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
dHlwZXMuaCIKKwogLyoKICAqIFJhdGhlciB0aGFuIGhhdmUgZXZlcnkgY2xpZW50IHdhaXQgdXBv
biBhbGwgdXNlciBpbnRlcnJ1cHRzLAogICogd2l0aCB0aGUgaGVyZCB3YWtpbmcgYWZ0ZXIgZXZl
cnkgaW50ZXJydXB0IGFuZCBlYWNoIGRvaW5nIHRoZQpAQCAtMjksNiArMzIsNyBAQAogICogdGhl
IG92ZXJoZWFkIG9mIHdha2luZyB0aGF0IGNsaWVudCBpcyBtdWNoIHByZWZlcnJlZC4KICAqLwog
c3RydWN0IGludGVsX2JyZWFkY3J1bWJzIHsKKwlzdHJ1Y3Qga3JlZiByZWY7CiAJYXRvbWljX3Qg
YWN0aXZlOwogCiAJc3BpbmxvY2tfdCBzaWduYWxlcnNfbG9jazsgLyogcHJvdGVjdHMgdGhlIGxp
c3Qgb2Ygc2lnbmFsZXJzICovCkBAIC00Miw3ICs0NiwxMCBAQCBzdHJ1Y3QgaW50ZWxfYnJlYWRj
cnVtYnMgewogCWJvb2wgaXJxX2FybWVkOwogCiAJLyogTm90IGFsbCBicmVhZGNydW1icyBhcmUg
YXR0YWNoZWQgdG8gcGh5c2ljYWwgSFcgKi8KKwlpbnRlbF9lbmdpbmVfbWFza190CWVuZ2luZV9t
YXNrOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmlycV9lbmdpbmU7CisJYm9vbAkoKmlycV9l
bmFibGUpKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYik7CisJdm9pZAkoKmlycV9kaXNhYmxl
KShzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpOwogfTsKIAogI2VuZGlmIC8qIF9fSU5URUxf
QlJFQURDUlVNQlNfVFlQRVNfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4
dC5jCmluZGV4IGJkNjM4MTNjOGE4MC4uYjFlM2QwMGZiMWYyIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfY29udGV4dC5jCkBAIC04LDYgKzgsNyBAQAogCiAjaW5jbHVkZSAiaTkxNV9k
cnYuaCIKICNpbmNsdWRlICJpOTE1X2dsb2JhbHMuaCIKKyNpbmNsdWRlICJpOTE1X3RyYWNlLmgi
CiAKICNpbmNsdWRlICJpbnRlbF9jb250ZXh0LmgiCiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lLmgi
CkBAIC0yOCw2ICsyOSw3IEBAIHN0YXRpYyB2b2lkIHJjdV9jb250ZXh0X2ZyZWUoc3RydWN0IHJj
dV9oZWFkICpyY3UpCiB7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gY29udGFpbmVyX29m
KHJjdSwgdHlwZW9mKCpjZSksIHJjdSk7CiAKKwl0cmFjZV9pbnRlbF9jb250ZXh0X2ZyZWUoY2Up
OwogCWttZW1fY2FjaGVfZnJlZShnbG9iYWwuc2xhYl9jZSwgY2UpOwogfQogCkBAIC00Niw2ICs0
OCw3IEBAIGludGVsX2NvbnRleHRfY3JlYXRlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAKIAlpbnRlbF9jb250ZXh0X2luaXQoY2Us
IGVuZ2luZSk7CisJdHJhY2VfaW50ZWxfY29udGV4dF9jcmVhdGUoY2UpOwogCXJldHVybiBjZTsK
IH0KIApAQCAtODAsNyArODMsNyBAQCBzdGF0aWMgaW50IGludGVsX2NvbnRleHRfYWN0aXZlX2Fj
cXVpcmUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCiAJX19pOTE1X2FjdGl2ZV9hY3F1aXJl
KCZjZS0+YWN0aXZlKTsKIAotCWlmIChpbnRlbF9jb250ZXh0X2lzX2JhcnJpZXIoY2UpKQorCWlm
IChpbnRlbF9jb250ZXh0X2lzX2JhcnJpZXIoY2UpIHx8IGludGVsX2VuZ2luZV91c2VzX2d1Yyhj
ZS0+ZW5naW5lKSkKIAkJcmV0dXJuIDA7CiAKIAkvKiBQcmVhbGxvY2F0ZSB0cmFja2luZyBub2Rl
cyAqLwpAQCAtMjY4LDYgKzI3MSw4IEBAIGludCBfX2ludGVsX2NvbnRleHRfZG9fcGluX3d3KHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAogCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNf
cGlubmVkKGNlKSk7IC8qIG5vIG92ZXJmbG93ISAqLwogCisJdHJhY2VfaW50ZWxfY29udGV4dF9k
b19waW4oY2UpOworCiBlcnJfdW5sb2NrOgogCW11dGV4X3VubG9jaygmY2UtPnBpbl9tdXRleCk7
CiBlcnJfcG9zdF91bnBpbjoKQEAgLTMwNiw5ICszMTEsOSBAQCBpbnQgX19pbnRlbF9jb250ZXh0
X2RvX3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJuIGVycjsKIH0KIAotdm9p
ZCBpbnRlbF9jb250ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3ZvaWQgX19p
bnRlbF9jb250ZXh0X2RvX3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgaW50IHN1YikK
IHsKLQlpZiAoIWF0b21pY19kZWNfYW5kX3Rlc3QoJmNlLT5waW5fY291bnQpKQorCWlmICghYXRv
bWljX3N1Yl9hbmRfdGVzdChzdWIsICZjZS0+cGluX2NvdW50KSkKIAkJcmV0dXJuOwogCiAJQ0Vf
VFJBQ0UoY2UsICJ1bnBpblxuIik7CkBAIC0zMjMsNiArMzI4LDcgQEAgdm9pZCBpbnRlbF9jb250
ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAkgKi8KIAlpbnRlbF9jb250ZXh0
X2dldChjZSk7CiAJaW50ZWxfY29udGV4dF9hY3RpdmVfcmVsZWFzZShjZSk7CisJdHJhY2VfaW50
ZWxfY29udGV4dF9kb191bnBpbihjZSk7CiAJaW50ZWxfY29udGV4dF9wdXQoY2UpOwogfQogCkBA
IC0zNjAsNiArMzY2LDEyIEBAIHN0YXRpYyBpbnQgX19pbnRlbF9jb250ZXh0X2FjdGl2ZShzdHJ1
Y3QgaTkxNV9hY3RpdmUgKmFjdGl2ZSkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGludCBzd19m
ZW5jZV9kdW1teV9ub3RpZnkoc3RydWN0IGk5MTVfc3dfZmVuY2UgKnNmLAorCQkJCSBlbnVtIGk5
MTVfc3dfZmVuY2Vfbm90aWZ5IHN0YXRlKQoreworCXJldHVybiBOT1RJRllfRE9ORTsKK30KKwog
dm9pZAogaW50ZWxfY29udGV4dF9pbml0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewpAQCAtMzg0LDYgKzM5NiwxOCBAQCBpbnRlbF9j
b250ZXh0X2luaXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCiAKIAltdXRleF9pbml0KCZjZS0+cGluX211dGV4KTsKIAorCXNwaW5fbG9j
a19pbml0KCZjZS0+Z3VjX3N0YXRlLmxvY2spOworCUlOSVRfTElTVF9IRUFEKCZjZS0+Z3VjX3N0
YXRlLmZlbmNlcyk7CisKKwlzcGluX2xvY2tfaW5pdCgmY2UtPmd1Y19hY3RpdmUubG9jayk7CisJ
SU5JVF9MSVNUX0hFQUQoJmNlLT5ndWNfYWN0aXZlLnJlcXVlc3RzKTsKKworCWNlLT5ndWNfaWQg
PSBHVUNfSU5WQUxJRF9MUkNfSUQ7CisJSU5JVF9MSVNUX0hFQUQoJmNlLT5ndWNfaWRfbGluayk7
CisKKwlpOTE1X3N3X2ZlbmNlX2luaXQoJmNlLT5ndWNfYmxvY2tlZCwgc3dfZmVuY2VfZHVtbXlf
bm90aWZ5KTsKKwlpOTE1X3N3X2ZlbmNlX2NvbW1pdCgmY2UtPmd1Y19ibG9ja2VkKTsKKwogCWk5
MTVfYWN0aXZlX2luaXQoJmNlLT5hY3RpdmUsCiAJCQkgX19pbnRlbF9jb250ZXh0X2FjdGl2ZSwg
X19pbnRlbF9jb250ZXh0X3JldGlyZSwgMCk7CiB9CkBAIC01MDAsNiArNTI0LDI2IEBAIHN0cnVj
dCBpOTE1X3JlcXVlc3QgKmludGVsX2NvbnRleHRfY3JlYXRlX3JlcXVlc3Qoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQogCXJldHVybiBycTsKIH0KIAorc3RydWN0IGk5MTVfcmVxdWVzdCAqaW50
ZWxfY29udGV4dF9maW5kX2FjdGl2ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
K3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKmFjdGl2ZSA9IE5VTEw7CisJdW5zaWduZWQg
bG9uZyBmbGFnczsKKworCUdFTV9CVUdfT04oIWludGVsX2VuZ2luZV91c2VzX2d1YyhjZS0+ZW5n
aW5lKSk7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmY2UtPmd1Y19hY3RpdmUubG9jaywgZmxhZ3Mp
OworCWxpc3RfZm9yX2VhY2hfZW50cnlfcmV2ZXJzZShycSwgJmNlLT5ndWNfYWN0aXZlLnJlcXVl
c3RzLAorCQkJCSAgICBzY2hlZC5saW5rKSB7CisJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVk
KHJxKSkKKwkJCWJyZWFrOworCisJCWFjdGl2ZSA9IHJxOworCX0KKwlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrLCBmbGFncyk7CisKKwlyZXR1cm4gYWN0aXZlOwor
fQorCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1QpCiAjaW5jbHVkZSAi
c2VsZnRlc3RfY29udGV4dC5jIgogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9jb250ZXh0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9j
b250ZXh0LmgKaW5kZXggYjEwY2JlOGZlZTk5Li44NzZiZGIwODMwM2MgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKQEAgLTE2LDYgKzE2LDcgQEAKICNpbmNsdWRlICJp
bnRlbF9lbmdpbmVfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9yaW5nX3R5cGVzLmgiCiAjaW5j
bHVkZSAiaW50ZWxfdGltZWxpbmVfdHlwZXMuaCIKKyNpbmNsdWRlICJpOTE1X3RyYWNlLmgiCiAK
ICNkZWZpbmUgQ0VfVFJBQ0UoY2UsIGZtdCwgLi4uKSBkbyB7CQkJCQlcCiAJY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHQgKmNlX18gPSAoY2UpOwkJCVwKQEAgLTY5LDYgKzcwLDEzIEBAIGludGVs
X2NvbnRleHRfaXNfcGlubmVkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAlyZXR1cm4gYXRv
bWljX3JlYWQoJmNlLT5waW5fY291bnQpOwogfQogCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxf
Y29udGV4dF9jYW5jZWxfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJCQlz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlHRU1fQlVHX09OKCFjZS0+b3BzLT5jYW5jZWxf
cmVxdWVzdCk7CisJcmV0dXJuIGNlLT5vcHMtPmNhbmNlbF9yZXF1ZXN0KGNlLCBycSk7Cit9CisK
IC8qKgogICogaW50ZWxfY29udGV4dF91bmxvY2tfcGlubmVkIC0gUmVsZWFzZXMgdGhlIGVhcmxp
ZXIgbG9ja2luZyBvZiAncGlubmVkJyBzdGF0dXMKICAqIEBjZSAtIHRoZSBjb250ZXh0CkBAIC0x
MTMsNyArMTIxLDMyIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2ludGVsX2NvbnRleHRfcGluKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAlhdG9taWNfaW5jKCZjZS0+cGluX2NvdW50KTsKIH0K
IAotdm9pZCBpbnRlbF9jb250ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7Cit2
b2lkIF9faW50ZWxfY29udGV4dF9kb191bnBpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGlu
dCBzdWIpOworCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfY29udGV4dF9zY2hlZF9kaXNhYmxl
X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlfX2ludGVsX2NvbnRleHRfZG9f
dW5waW4oY2UsIDIpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfY29udGV4dF91bnBp
bihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJaWYgKCFjZS0+b3BzLT5zY2hlZF9kaXNh
YmxlKSB7CisJCV9faW50ZWxfY29udGV4dF9kb191bnBpbihjZSwgMSk7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogTW92ZSBvd25lcnNoaXAgb2YgdGhpcyBwaW4gdG8gdGhlIHNjaGVkdWxpbmcgZGlz
YWJsZSB3aGljaCBpcworCQkgKiBhbiBhc3luYyBvcGVyYXRpb24uIFdoZW4gdGhhdCBvcGVyYXRp
b24gY29tcGxldGVzIHRoZSBhYm92ZQorCQkgKiBpbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2FibGVf
dW5waW4gaXMgY2FsbGVkIHBvdGVudGlhbGx5CisJCSAqIHVucGlubmluZyB0aGUgY29udGV4dC4K
KwkJICovCisJCXdoaWxlICghYXRvbWljX2FkZF91bmxlc3MoJmNlLT5waW5fY291bnQsIC0xLCAx
KSkgeworCQkJaWYgKGF0b21pY19jbXB4Y2hnKCZjZS0+cGluX2NvdW50LCAxLCAyKSA9PSAxKSB7
CisJCQkJY2UtPm9wcy0+c2NoZWRfZGlzYWJsZShjZSk7CisJCQkJYnJlYWs7CisJCQl9CisJCX0K
Kwl9Cit9CiAKIHZvaWQgaW50ZWxfY29udGV4dF9lbnRlcl9lbmdpbmUoc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKTsKIHZvaWQgaW50ZWxfY29udGV4dF9leGl0X2VuZ2luZShzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpOwpAQCAtMTc1LDYgKzIwOCw5IEBAIGludCBpbnRlbF9jb250ZXh0X3ByZXBh
cmVfcmVtb3RlX3JlcXVlc3Qoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCiBzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICppbnRlbF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSk7CiAKK3N0cnVjdCBpOTE1X3JlcXVlc3QgKgoraW50ZWxfY29udGV4dF9maW5kX2Fj
dGl2ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CisKIHN0YXRpYyBpbmxpbmUg
Ym9vbCBpbnRlbF9jb250ZXh0X2lzX2JhcnJpZXIoY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQogewogCXJldHVybiB0ZXN0X2JpdChDT05URVhUX0JBUlJJRVJfQklULCAmY2UtPmZsYWdz
KTsKQEAgLTIxNSw2ICsyNTEsMTggQEAgc3RhdGljIGlubGluZSBib29sIGludGVsX2NvbnRleHRf
c2V0X2Jhbm5lZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJuIHRlc3RfYW5kX3Nl
dF9iaXQoQ09OVEVYVF9CQU5ORUQsICZjZS0+ZmxhZ3MpOwogfQogCitzdGF0aWMgaW5saW5lIGJv
b2wgaW50ZWxfY29udGV4dF9iYW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCSAgICAg
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJYm9vbCByZXQgPSBpbnRlbF9jb250ZXh0X3Nl
dF9iYW5uZWQoY2UpOworCisJdHJhY2VfaW50ZWxfY29udGV4dF9iYW4oY2UpOworCWlmIChjZS0+
b3BzLT5iYW4pCisJCWNlLT5vcHMtPmJhbihjZSwgcnEpOworCisJcmV0dXJuIHJldDsKK30KKwog
c3RhdGljIGlubGluZSBib29sCiBpbnRlbF9jb250ZXh0X2ZvcmNlX3NpbmdsZV9zdWJtaXNzaW9u
KGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaAppbmRleCA5MDAyNmMxNzcxMDUuLmZlNTU1NTUx
YzJkMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90
eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMu
aApAQCAtMTMsMTIgKzEzLDE0IEBACiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAogI2luY2x1
ZGUgImk5MTVfYWN0aXZlX3R5cGVzLmgiCisjaW5jbHVkZSAiaTkxNV9zd19mZW5jZS5oIgogI2lu
Y2x1ZGUgImk5MTVfdXRpbHMuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfdHlwZXMuaCIKICNp
bmNsdWRlICJpbnRlbF9zc2V1LmgiCiAKLSNkZWZpbmUgQ09OVEVYVF9SRURaT05FIFBPSVNPTl9J
TlVTRQorI2luY2x1ZGUgInVjL2ludGVsX2d1Y19md2lmLmgiCiAKKyNkZWZpbmUgQ09OVEVYVF9S
RURaT05FIFBPSVNPTl9JTlVTRQogREVDTEFSRV9FV01BKHJ1bnRpbWUsIDMsIDgpOwogCiBzdHJ1
Y3QgaTkxNV9nZW1fY29udGV4dDsKQEAgLTM1LDE2ICszNywyOSBAQCBzdHJ1Y3QgaW50ZWxfY29u
dGV4dF9vcHMgewogCiAJaW50ICgqYWxsb2MpKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiAK
Kwl2b2lkICgqYmFuKShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKTsKKwogCWludCAoKnByZV9waW4pKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgc3Ry
dWN0IGk5MTVfZ2VtX3d3X2N0eCAqd3csIHZvaWQgKip2YWRkcik7CiAJaW50ICgqcGluKShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsIHZvaWQgKnZhZGRyKTsKIAl2b2lkICgqdW5waW4pKHN0cnVj
dCBpbnRlbF9jb250ZXh0ICpjZSk7CiAJdm9pZCAoKnBvc3RfdW5waW4pKHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSk7CiAKKwl2b2lkICgqY2FuY2VsX3JlcXVlc3QpKHN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSwKKwkJCSAgICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7CisKIAl2b2lkICgq
ZW50ZXIpKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiAJdm9pZCAoKmV4aXQpKHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSk7CiAKKwl2b2lkICgqc2NoZWRfZGlzYWJsZSkoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKTsKKwogCXZvaWQgKCpyZXNldCkoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KTsKIAl2b2lkICgqZGVzdHJveSkoc3RydWN0IGtyZWYgKmtyZWYpOworCisJLyogdmlydHVhbCBl
bmdpbmUvY29udGV4dCBpbnRlcmZhY2UgKi8KKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqKCpjcmVh
dGVfdmlydHVhbCkoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKmVuZ2luZSwKKwkJCQkJCXVuc2ln
bmVkIGludCBjb3VudCk7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKCpnZXRfc2libGluZyko
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCQkgICAgICAgdW5zaWduZWQgaW50
IHNpYmxpbmcpOwogfTsKIAogc3RydWN0IGludGVsX2NvbnRleHQgewpAQCAtOTYsNiArMTExLDcg
QEAgc3RydWN0IGludGVsX2NvbnRleHQgewogI2RlZmluZSBDT05URVhUX0JBTk5FRAkJCTYKICNk
ZWZpbmUgQ09OVEVYVF9GT1JDRV9TSU5HTEVfU1VCTUlTU0lPTgk3CiAjZGVmaW5lIENPTlRFWFRf
Tk9QUkVFTVBUCQk4CisjZGVmaW5lIENPTlRFWFRfTFJDQV9ESVJUWQkJOQogCiAJc3RydWN0IHsK
IAkJdTY0IHRpbWVvdXRfdXM7CkBAIC0xMzcsNiArMTUzLDUxIEBAIHN0cnVjdCBpbnRlbF9jb250
ZXh0IHsKIAlzdHJ1Y3QgaW50ZWxfc3NldSBzc2V1OwogCiAJdTggd2FfYmJfcGFnZTsgLyogaWYg
c2V0LCBwYWdlIG51bSByZXNlcnZlZCBmb3IgY29udGV4dCB3b3JrYXJvdW5kcyAqLworCisJc3Ry
dWN0IHsKKwkJLyoqIGxvY2s6IHByb3RlY3RzIGV2ZXJ5dGhpbmcgaW4gZ3VjX3N0YXRlICovCisJ
CXNwaW5sb2NrX3QgbG9jazsKKwkJLyoqCisJCSAqIHNjaGVkX3N0YXRlOiBzY2hlZHVsaW5nIHN0
YXRlIG9mIHRoaXMgY29udGV4dCB1c2luZyBHdUMKKwkJICogc3VibWlzc2lvbgorCQkgKi8KKwkJ
dTggc2NoZWRfc3RhdGU7CisJCS8qCisJCSAqIGZlbmNlczogbWFpbnRhaW5zIG9mIGxpc3Qgb2Yg
cmVxdWVzdHMgdGhhdCBoYXZlIGEgc3VibWl0CisJCSAqIGZlbmNlIHJlbGF0ZWQgdG8gR3VDIHN1
Ym1pc3Npb24KKwkJICovCisJCXN0cnVjdCBsaXN0X2hlYWQgZmVuY2VzOworCX0gZ3VjX3N0YXRl
OworCisJc3RydWN0IHsKKwkJLyoqIGxvY2s6IHByb3RlY3RzIGV2ZXJ5dGhpbmcgaW4gZ3VjX2Fj
dGl2ZSAqLworCQlzcGlubG9ja190IGxvY2s7CisJCS8qKiByZXF1ZXN0czogYWN0aXZlIHJlcXVl
c3RzIG9uIHRoaXMgY29udGV4dCAqLworCQlzdHJ1Y3QgbGlzdF9oZWFkIHJlcXVlc3RzOworCX0g
Z3VjX2FjdGl2ZTsKKworCS8qIEd1QyBzY2hlZHVsaW5nIHN0YXRlIGZsYWdzIHRoYXQgZG8gbm90
IHJlcXVpcmUgYSBsb2NrLiAqLworCWF0b21pY190IGd1Y19zY2hlZF9zdGF0ZV9ub19sb2NrOwor
CisJLyogR3VDIExSQyBkZXNjcmlwdG9yIElEICovCisJdTE2IGd1Y19pZDsKKworCS8qIEd1QyBM
UkMgZGVzY3JpcHRvciByZWZlcmVuY2UgY291bnQgKi8KKwlhdG9taWNfdCBndWNfaWRfcmVmOwor
CisJLyoKKwkgKiBHdUMgSUQgbGluayAtIGluIGxpc3Qgd2hlbiB1bnBpbm5lZCBidXQgZ3VjX2lk
IHN0aWxsIHZhbGlkIGluIEd1QworCSAqLworCXN0cnVjdCBsaXN0X2hlYWQgZ3VjX2lkX2xpbms7
CisKKwkvKiBHdUMgY29udGV4dCBibG9ja2VkIGZlbmNlICovCisJc3RydWN0IGk5MTVfc3dfZmVu
Y2UgZ3VjX2Jsb2NrZWQ7CisKKwkvKgorCSAqIEd1QyBwcmlvcml0eSBtYW5hZ2VtZW50CisJICov
CisJdTggZ3VjX3ByaW87CisJdTMyIGd1Y19wcmlvX2NvdW50W0dVQ19DTElFTlRfUFJJT1JJVFlf
TlVNXTsKIH07CiAKICNlbmRpZiAvKiBfX0lOVEVMX0NPTlRFWFRfVFlQRVNfXyAqLwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaAppbmRleCBmOTExYzEyMjRhYjIuLmMyYTU2NDBh
ZTA1NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgKQEAgLTIxMiw2ICsy
MTIsOSBAQCB2b2lkIGludGVsX2VuZ2luZV9nZXRfaW5zdGRvbmUoY29uc3Qgc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lLAogCiB2b2lkIGludGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cyhz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogCitib29sIGludGVsX2VuZ2luZV9pcnFf
ZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7Cit2b2lkIGludGVsX2VuZ2lu
ZV9pcnFfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOworCiBzdGF0aWMg
aW5saW5lIHZvaWQgX19pbnRlbF9lbmdpbmVfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLAogCQkJCQlib29sIHN0YWxsZWQpCiB7CkBAIC0yMzcsMTIgKzI0MCwxNSBAQCBfX3By
aW50ZigzLCA0KQogdm9pZCBpbnRlbF9lbmdpbmVfZHVtcChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCiAJCSAgICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0sCiAJCSAgICAgICBjb25z
dCBjaGFyICpoZWFkZXIsIC4uLik7Cit2b2lkIGludGVsX2VuZ2luZV9kdW1wX2FjdGl2ZV9yZXF1
ZXN0cyhzdHJ1Y3QgbGlzdF9oZWFkICpyZXF1ZXN0cywKKwkJCQkgICAgICAgc3RydWN0IGk5MTVf
cmVxdWVzdCAqaHVuZ19ycSwKKwkJCQkgICAgICAgc3RydWN0IGRybV9wcmludGVyICptKTsKIAog
a3RpbWVfdCBpbnRlbF9lbmdpbmVfZ2V0X2J1c3lfdGltZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCiAJCQkJICAga3RpbWVfdCAqbm93KTsKIAogc3RydWN0IGk5MTVfcmVxdWVzdCAq
Ci1pbnRlbF9lbmdpbmVfZmluZF9hY3RpdmVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpOworaW50ZWxfZW5naW5lX2V4ZWNsaXN0X2ZpbmRfaHVuZ19yZXF1ZXN0KHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAKIHUzMiBpbnRlbF9lbmdpbmVfY29udGV4dF9z
aXplKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIHU4IGNsYXNzKTsKIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICoKQEAgLTI3MywxMyArMjc5LDYwIEBAIGludGVsX2VuZ2luZV9oYXNfcHJlZW1wdF9yZXNldChj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJcmV0dXJuIGludGVsX2VuZ2lu
ZV9oYXNfcHJlZW1wdGlvbihlbmdpbmUpOwogfQogCitzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitp
bnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1YWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxp
bmdzLAorCQkJICAgIHVuc2lnbmVkIGludCBjb3VudCk7CisKK3N0YXRpYyBpbmxpbmUgYm9vbAor
aW50ZWxfdmlydHVhbF9lbmdpbmVfaGFzX2hlYXJ0YmVhdChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCit7CisJLyoKKwkgKiBGb3Igbm9uLUd1QyBzdWJtaXNzaW9uIHdlIGV4
cGVjdCB0aGUgYmFjay1lbmQgdG8gbG9vayBhdCB0aGUKKwkgKiBoZWFydGJlYXQgc3RhdHVzIG9m
IHRoZSBhY3R1YWwgcGh5c2ljYWwgZW5naW5lIHRoYXQgdGhlIHdvcmsKKwkgKiBoYXMgYmVlbiAo
b3IgaXMgYmVpbmcpIHNjaGVkdWxlZCBvbiwgc28gd2Ugc2hvdWxkIG9ubHkgcmVhY2gKKwkgKiBo
ZXJlIHdpdGggR3VDIHN1Ym1pc3Npb24gZW5hYmxlZC4KKwkgKi8KKwlHRU1fQlVHX09OKCFpbnRl
bF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKSk7CisKKwlyZXR1cm4gaW50ZWxfZ3VjX3ZpcnR1YWxf
ZW5naW5lX2hhc19oZWFydGJlYXQoZW5naW5lKTsKK30KKwogc3RhdGljIGlubGluZSBib29sCiBp
bnRlbF9lbmdpbmVfaGFzX2hlYXJ0YmVhdChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiB7CiAJaWYgKCFJU19BQ1RJVkUoQ09ORklHX0RSTV9JOTE1X0hFQVJUQkVBVF9JTlRF
UlZBTCkpCiAJCXJldHVybiBmYWxzZTsKIAotCXJldHVybiBSRUFEX09OQ0UoZW5naW5lLT5wcm9w
cy5oZWFydGJlYXRfaW50ZXJ2YWxfbXMpOworCWlmIChpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChl
bmdpbmUpKQorCQlyZXR1cm4gaW50ZWxfdmlydHVhbF9lbmdpbmVfaGFzX2hlYXJ0YmVhdChlbmdp
bmUpOworCWVsc2UKKwkJcmV0dXJuIFJFQURfT05DRShlbmdpbmUtPnByb3BzLmhlYXJ0YmVhdF9p
bnRlcnZhbF9tcyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
CitpbnRlbF9lbmdpbmVfZ2V0X3NpYmxpbmcoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCB1bnNpZ25lZCBpbnQgc2libGluZykKK3sKKwlHRU1fQlVHX09OKCFpbnRlbF9lbmdpbmVfaXNf
dmlydHVhbChlbmdpbmUpKTsKKwlyZXR1cm4gZW5naW5lLT5jb3BzLT5nZXRfc2libGluZyhlbmdp
bmUsIHNpYmxpbmcpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK2ludGVsX2VuZ2luZV9zZXRf
aHVuZ19jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCSAgICAgIHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwllbmdpbmUtPmh1bmdfY2UgPSBjZTsKK30KKwor
c3RhdGljIGlubGluZSB2b2lkCitpbnRlbF9lbmdpbmVfY2xlYXJfaHVuZ19jb250ZXh0KHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpbnRlbF9lbmdpbmVfc2V0X2h1bmdfY29u
dGV4dChlbmdpbmUsIE5VTEwpOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9jb250
ZXh0ICoKK2ludGVsX2VuZ2luZV9nZXRfaHVuZ19jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKK3sKKwlyZXR1cm4gZW5naW5lLT5odW5nX2NlOwogfQogCiAjZW5kaWYgLyog
X0lOVEVMX1JJTkdCVUZGRVJfSF8gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX2NzLmMKaW5kZXggZDU2MTU3M2VkOThjLi41MWEwZDg2MGQ1NTEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCkBAIC03MzksNyArNzM5LDcgQEAgc3RhdGlj
IGludCBlbmdpbmVfc2V0dXBfY29tbW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
IGVycl9jbWRfcGFyc2VyOgogCWk5MTVfc2NoZWRfZW5naW5lX3B1dChlbmdpbmUtPnNjaGVkX2Vu
Z2luZSk7CiBlcnJfc2NoZWRfZW5naW5lOgotCWludGVsX2JyZWFkY3J1bWJzX2ZyZWUoZW5naW5l
LT5icmVhZGNydW1icyk7CisJaW50ZWxfYnJlYWRjcnVtYnNfcHV0KGVuZ2luZS0+YnJlYWRjcnVt
YnMpOwogZXJyX3N0YXR1czoKIAljbGVhbnVwX3N0YXR1c19wYWdlKGVuZ2luZSk7CiAJcmV0dXJu
IGVycjsKQEAgLTk0OCw3ICs5NDgsNyBAQCB2b2lkIGludGVsX2VuZ2luZV9jbGVhbnVwX2NvbW1v
bihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJR0VNX0JVR19PTighbGlzdF9lbXB0
eSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnJlcXVlc3RzKSk7CiAKIAlpOTE1X3NjaGVkX2VuZ2lu
ZV9wdXQoZW5naW5lLT5zY2hlZF9lbmdpbmUpOwotCWludGVsX2JyZWFkY3J1bWJzX2ZyZWUoZW5n
aW5lLT5icmVhZGNydW1icyk7CisJaW50ZWxfYnJlYWRjcnVtYnNfcHV0KGVuZ2luZS0+YnJlYWRj
cnVtYnMpOwogCiAJaW50ZWxfZW5naW5lX2ZpbmlfcmV0aXJlKGVuZ2luZSk7CiAJaW50ZWxfZW5n
aW5lX2NsZWFudXBfY21kX3BhcnNlcihlbmdpbmUpOwpAQCAtMTI2NSw2ICsxMjY1LDMwIEBAIGJv
b2wgaW50ZWxfZW5naW5lc19hcmVfaWRsZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCXJldHVybiB0
cnVlOwogfQogCitib29sIGludGVsX2VuZ2luZV9pcnFfZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKK3sKKwlpZiAoIWVuZ2luZS0+aXJxX2VuYWJsZSkKKwkJcmV0dXJuIGZh
bHNlOworCisJLyogQ2FsbGVyIGRpc2FibGVzIGludGVycnVwdHMgKi8KKwlzcGluX2xvY2soJmVu
Z2luZS0+Z3QtPmlycV9sb2NrKTsKKwllbmdpbmUtPmlycV9lbmFibGUoZW5naW5lKTsKKwlzcGlu
X3VubG9jaygmZW5naW5lLT5ndC0+aXJxX2xvY2spOworCisJcmV0dXJuIHRydWU7Cit9CisKK3Zv
aWQgaW50ZWxfZW5naW5lX2lycV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKK3sKKwlpZiAoIWVuZ2luZS0+aXJxX2Rpc2FibGUpCisJCXJldHVybjsKKworCS8qIENhbGxl
ciBkaXNhYmxlcyBpbnRlcnJ1cHRzICovCisJc3Bpbl9sb2NrKCZlbmdpbmUtPmd0LT5pcnFfbG9j
ayk7CisJZW5naW5lLT5pcnFfZGlzYWJsZShlbmdpbmUpOworCXNwaW5fdW5sb2NrKCZlbmdpbmUt
Pmd0LT5pcnFfbG9jayk7Cit9CisKIHZvaWQgaW50ZWxfZW5naW5lc19yZXNldF9kZWZhdWx0X3N1
Ym1pc3Npb24oc3RydWN0IGludGVsX2d0ICpndCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmU7CkBAIC0xNjAxLDYgKzE2MjUsOTcgQEAgc3RhdGljIHZvaWQgcHJpbnRfcHJvcGVy
dGllcyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkgICByZWFkX3VsKCZlbmdp
bmUtPmRlZmF1bHRzLCBwLT5vZmZzZXQpKTsKIH0KIAorc3RhdGljIHZvaWQgZW5naW5lX2R1bXBf
cmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0IGRybV9wcmludGVyICptLCBj
b25zdCBjaGFyICptc2cpCit7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IGdldF90aW1l
bGluZShycSk7CisKKwlpOTE1X3JlcXVlc3Rfc2hvdyhtLCBycSwgbXNnLCAwKTsKKworCWRybV9w
cmludGYobSwgIlx0XHRyaW5nLT5zdGFydDogIDB4JTA4eFxuIiwKKwkJICAgaTkxNV9nZ3R0X29m
ZnNldChycS0+cmluZy0+dm1hKSk7CisJZHJtX3ByaW50ZihtLCAiXHRcdHJpbmctPmhlYWQ6ICAg
MHglMDh4XG4iLAorCQkgICBycS0+cmluZy0+aGVhZCk7CisJZHJtX3ByaW50ZihtLCAiXHRcdHJp
bmctPnRhaWw6ICAgMHglMDh4XG4iLAorCQkgICBycS0+cmluZy0+dGFpbCk7CisJZHJtX3ByaW50
ZihtLCAiXHRcdHJpbmctPmVtaXQ6ICAgMHglMDh4XG4iLAorCQkgICBycS0+cmluZy0+ZW1pdCk7
CisJZHJtX3ByaW50ZihtLCAiXHRcdHJpbmctPnNwYWNlOiAgMHglMDh4XG4iLAorCQkgICBycS0+
cmluZy0+c3BhY2UpOworCisJaWYgKHRsKSB7CisJCWRybV9wcmludGYobSwgIlx0XHRyaW5nLT5o
d3NwOiAgIDB4JTA4eFxuIiwKKwkJCSAgIHRsLT5od3NwX29mZnNldCk7CisJCWludGVsX3RpbWVs
aW5lX3B1dCh0bCk7CisJfQorCisJcHJpbnRfcmVxdWVzdF9yaW5nKG0sIHJxKTsKKworCWlmIChy
cS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSkgeworCQlkcm1fcHJpbnRmKG0sICJMb2dpY2FsIFJp
bmcgQ29udGV4dDpcbiIpOworCQloZXhkdW1wKG0sIHJxLT5jb250ZXh0LT5scmNfcmVnX3N0YXRl
LCBQQUdFX1NJWkUpOworCX0KK30KKwordm9pZCBpbnRlbF9lbmdpbmVfZHVtcF9hY3RpdmVfcmVx
dWVzdHMoc3RydWN0IGxpc3RfaGVhZCAqcmVxdWVzdHMsCisJCQkJICAgICAgIHN0cnVjdCBpOTE1
X3JlcXVlc3QgKmh1bmdfcnEsCisJCQkJICAgICAgIHN0cnVjdCBkcm1fcHJpbnRlciAqbSkKK3sK
KwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwljb25zdCBjaGFyICptc2c7CisJZW51bSBpOTE1
X3JlcXVlc3Rfc3RhdGUgc3RhdGU7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCByZXF1ZXN0
cywgc2NoZWQubGluaykgeworCQlpZiAocnEgPT0gaHVuZ19ycSkKKwkJCWNvbnRpbnVlOworCisJ
CXN0YXRlID0gaTkxNV90ZXN0X3JlcXVlc3Rfc3RhdGUocnEpOworCQlpZiAoc3RhdGUgPCBJOTE1
X1JFUVVFU1RfUVVFVUVEKQorCQkJY29udGludWU7CisKKwkJaWYgKHN0YXRlID09IEk5MTVfUkVR
VUVTVF9BQ1RJVkUpCisJCQltc2cgPSAiXHRcdGFjdGl2ZSBvbiBlbmdpbmUiOworCQllbHNlCisJ
CQltc2cgPSAiXHRcdGFjdGl2ZSBpbiBxdWV1ZSI7CisKKwkJZW5naW5lX2R1bXBfcmVxdWVzdChy
cSwgbSwgbXNnKTsKKwl9Cit9CisKK3N0YXRpYyB2b2lkIGVuZ2luZV9kdW1wX2FjdGl2ZV9yZXF1
ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBkcm1fcHJpbnRlciAq
bSkKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpodW5nX3JxID0gTlVMTDsKKwlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2U7CisJYm9vbCBndWM7CisKKwkvKgorCSAqIE5vIG5lZWQgZm9yIGFuIGVu
Z2luZS0+aXJxX3NlcW5vX2JhcnJpZXIoKSBiZWZvcmUgdGhlIHNlcW5vIHJlYWRzLgorCSAqIFRo
ZSBHUFUgaXMgc3RpbGwgcnVubmluZyBzbyByZXF1ZXN0cyBhcmUgc3RpbGwgZXhlY3V0aW5nIGFu
ZCBhbnkKKwkgKiBoYXJkd2FyZSByZWFkcyB3aWxsIGJlIG91dCBvZiBkYXRlIGJ5IHRoZSB0aW1l
IHRoZXkgYXJlIHJlcG9ydGVkLgorCSAqIEJ1dCB0aGUgaW50ZW50aW9uIGhlcmUgaXMganVzdCB0
byByZXBvcnQgYW4gaW5zdGFudGFuZW91cyBzbmFwc2hvdAorCSAqIHNvIHRoYXQncyBmaW5lLgor
CSAqLworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrKTsK
KworCWRybV9wcmludGYobSwgIlx0UmVxdWVzdHM6XG4iKTsKKworCWd1YyA9IGludGVsX3VjX3Vz
ZXNfZ3VjX3N1Ym1pc3Npb24oJmVuZ2luZS0+Z3QtPnVjKTsKKwlpZiAoZ3VjKSB7CisJCWNlID0g
aW50ZWxfZW5naW5lX2dldF9odW5nX2NvbnRleHQoZW5naW5lKTsKKwkJaWYgKGNlKQorCQkJaHVu
Z19ycSA9IGludGVsX2NvbnRleHRfZmluZF9hY3RpdmVfcmVxdWVzdChjZSk7CisJfSBlbHNlCisJ
CWh1bmdfcnEgPSBpbnRlbF9lbmdpbmVfZXhlY2xpc3RfZmluZF9odW5nX3JlcXVlc3QoZW5naW5l
KTsKKworCWlmIChodW5nX3JxKQorCQllbmdpbmVfZHVtcF9yZXF1ZXN0KGh1bmdfcnEsIG0sICJc
dFx0aHVuZyIpOworCisJaWYgKGd1YykKKwkJaW50ZWxfZ3VjX2R1bXBfYWN0aXZlX3JlcXVlc3Rz
KGVuZ2luZSwgaHVuZ19ycSwgbSk7CisJZWxzZQorCQlpbnRlbF9lbmdpbmVfZHVtcF9hY3RpdmVf
cmVxdWVzdHMoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXF1ZXN0cywKKwkJCQkJCSAgaHVuZ19y
cSwgbSk7Cit9CisKIHZvaWQgaW50ZWxfZW5naW5lX2R1bXAoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLAogCQkgICAgICAgc3RydWN0IGRybV9wcmludGVyICptLAogCQkgICAgICAgY29u
c3QgY2hhciAqaGVhZGVyLCAuLi4pCkBAIC0xNjQ1LDM5ICsxNzYwLDkgQEAgdm9pZCBpbnRlbF9l
bmdpbmVfZHVtcChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCSAgIGk5MTVfcmVz
ZXRfY291bnQoZXJyb3IpKTsKIAlwcmludF9wcm9wZXJ0aWVzKGVuZ2luZSwgbSk7CiAKLQlkcm1f
cHJpbnRmKG0sICJcdFJlcXVlc3RzOlxuIik7Ci0KIAlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5l
LT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKLQlycSA9IGludGVsX2VuZ2luZV9maW5kX2Fj
dGl2ZV9yZXF1ZXN0KGVuZ2luZSk7Ci0JaWYgKHJxKSB7Ci0JCXN0cnVjdCBpbnRlbF90aW1lbGlu
ZSAqdGwgPSBnZXRfdGltZWxpbmUocnEpOworCWVuZ2luZV9kdW1wX2FjdGl2ZV9yZXF1ZXN0cyhl
bmdpbmUsIG0pOwogCi0JCWk5MTVfcmVxdWVzdF9zaG93KG0sIHJxLCAiXHRcdGFjdGl2ZSAiLCAw
KTsKLQotCQlkcm1fcHJpbnRmKG0sICJcdFx0cmluZy0+c3RhcnQ6ICAweCUwOHhcbiIsCi0JCQkg
ICBpOTE1X2dndHRfb2Zmc2V0KHJxLT5yaW5nLT52bWEpKTsKLQkJZHJtX3ByaW50ZihtLCAiXHRc
dHJpbmctPmhlYWQ6ICAgMHglMDh4XG4iLAotCQkJICAgcnEtPnJpbmctPmhlYWQpOwotCQlkcm1f
cHJpbnRmKG0sICJcdFx0cmluZy0+dGFpbDogICAweCUwOHhcbiIsCi0JCQkgICBycS0+cmluZy0+
dGFpbCk7Ci0JCWRybV9wcmludGYobSwgIlx0XHRyaW5nLT5lbWl0OiAgIDB4JTA4eFxuIiwKLQkJ
CSAgIHJxLT5yaW5nLT5lbWl0KTsKLQkJZHJtX3ByaW50ZihtLCAiXHRcdHJpbmctPnNwYWNlOiAg
MHglMDh4XG4iLAotCQkJICAgcnEtPnJpbmctPnNwYWNlKTsKLQotCQlpZiAodGwpIHsKLQkJCWRy
bV9wcmludGYobSwgIlx0XHRyaW5nLT5od3NwOiAgIDB4JTA4eFxuIiwKLQkJCQkgICB0bC0+aHdz
cF9vZmZzZXQpOwotCQkJaW50ZWxfdGltZWxpbmVfcHV0KHRsKTsKLQkJfQotCi0JCXByaW50X3Jl
cXVlc3RfcmluZyhtLCBycSk7Ci0KLQkJaWYgKHJxLT5jb250ZXh0LT5scmNfcmVnX3N0YXRlKSB7
Ci0JCQlkcm1fcHJpbnRmKG0sICJMb2dpY2FsIFJpbmcgQ29udGV4dDpcbiIpOwotCQkJaGV4ZHVt
cChtLCBycS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSwgUEFHRV9TSVpFKTsKLQkJfQotCX0KIAlk
cm1fcHJpbnRmKG0sICJcdE9uIGhvbGQ/OiAlbHVcbiIsCiAJCSAgIGxpc3RfY291bnQoJmVuZ2lu
ZS0+c2NoZWRfZW5naW5lLT5ob2xkKSk7CiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5l
LT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKQEAgLTE3MzcsMTggKzE4MjIsMzIgQEAga3Rp
bWVfdCBpbnRlbF9lbmdpbmVfZ2V0X2J1c3lfdGltZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsIGt0aW1lX3QgKm5vdykKIAlyZXR1cm4gdG90YWw7CiB9CiAKLXN0YXRpYyBib29sIG1h
dGNoX3Jpbmcoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
CitpbnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1YWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNp
YmxpbmdzLAorCQkJICAgIHVuc2lnbmVkIGludCBjb3VudCkKIHsKLQl1MzIgcmluZyA9IEVOR0lO
RV9SRUFEKHJxLT5lbmdpbmUsIFJJTkdfU1RBUlQpOworCWlmIChjb3VudCA9PSAwKQorCQlyZXR1
cm4gRVJSX1BUUigtRUlOVkFMKTsKKworCWlmIChjb3VudCA9PSAxKQorCQlyZXR1cm4gaW50ZWxf
Y29udGV4dF9jcmVhdGUoc2libGluZ3NbMF0pOwogCi0JcmV0dXJuIHJpbmcgPT0gaTkxNV9nZ3R0
X29mZnNldChycS0+cmluZy0+dm1hKTsKKwlHRU1fQlVHX09OKCFzaWJsaW5nc1swXS0+Y29wcy0+
Y3JlYXRlX3ZpcnR1YWwpOworCXJldHVybiBzaWJsaW5nc1swXS0+Y29wcy0+Y3JlYXRlX3ZpcnR1
YWwoc2libGluZ3MsIGNvdW50KTsKIH0KIAogc3RydWN0IGk5MTVfcmVxdWVzdCAqCi1pbnRlbF9l
bmdpbmVfZmluZF9hY3RpdmVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CitpbnRlbF9lbmdpbmVfZXhlY2xpc3RfZmluZF9odW5nX3JlcXVlc3Qoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsICphY3Rp
dmUgPSBOVUxMOwogCisJLyoKKwkgKiBUaGlzIHNlYXJjaCBkb2VzIG5vdCB3b3JrIGluIEd1QyBz
dWJtaXNzaW9uIG1vZGUuIEhvd2V2ZXIsIHRoZSBHdUMKKwkgKiB3aWxsIHJlcG9ydCB0aGUgaGFu
Z2luZyBjb250ZXh0IGRpcmVjdGx5IHRvIHRoZSBkcml2ZXIgaXRzZWxmLiBTbworCSAqIHRoZSBk
cml2ZXIgc2hvdWxkIG5ldmVyIGdldCBoZXJlIHdoZW4gaW4gR3VDIG1vZGUuCisJICovCisJR0VN
X0JVR19PTihpbnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZlbmdpbmUtPmd0LT51YykpOwor
CiAJLyoKIAkgKiBXZSBhcmUgY2FsbGVkIGJ5IHRoZSBlcnJvciBjYXB0dXJlLCByZXNldCBhbmQg
dG8gZHVtcCBlbmdpbmUKIAkgKiBzdGF0ZSBhdCByYW5kb20gcG9pbnRzIGluIHRpbWUuIEluIHBh
cnRpY3VsYXIsIG5vdGUgdGhhdCBuZWl0aGVyIGlzCkBAIC0xNzgwLDE0ICsxODc5LDcgQEAgaW50
ZWxfZW5naW5lX2ZpbmRfYWN0aXZlX3JlcXVlc3Qoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKQogCiAJbGlzdF9mb3JfZWFjaF9lbnRyeShyZXF1ZXN0LCAmZW5naW5lLT5zY2hlZF9lbmdp
bmUtPnJlcXVlc3RzLAogCQkJICAgIHNjaGVkLmxpbmspIHsKLQkJaWYgKF9faTkxNV9yZXF1ZXN0
X2lzX2NvbXBsZXRlKHJlcXVlc3QpKQotCQkJY29udGludWU7Ci0KLQkJaWYgKCFfX2k5MTVfcmVx
dWVzdF9oYXNfc3RhcnRlZChyZXF1ZXN0KSkKLQkJCWNvbnRpbnVlOwotCi0JCS8qIE1vcmUgdGhh
biBvbmUgcHJlZW1wdGlibGUgcmVxdWVzdCBtYXkgbWF0Y2ghICovCi0JCWlmICghbWF0Y2hfcmlu
ZyhyZXF1ZXN0KSkKKwkJaWYgKGk5MTVfdGVzdF9yZXF1ZXN0X3N0YXRlKHJlcXVlc3QpICE9IEk5
MTVfUkVRVUVTVF9BQ1RJVkUpCiAJCQljb250aW51ZTsKIAogCQlhY3RpdmUgPSByZXF1ZXN0Owpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVh
dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5jCmlu
ZGV4IGI2YTMwNWU2YTk3NC4uZjA3Njg4MjRkZTZmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5jCkBAIC03MCwxMiArNzAsMzggQEAgc3Rh
dGljIHZvaWQgc2hvd19oZWFydGJlYXQoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiB7
CiAJc3RydWN0IGRybV9wcmludGVyIHAgPSBkcm1fZGVidWdfcHJpbnRlcigiaGVhcnRiZWF0Iik7
CiAKLQlpbnRlbF9lbmdpbmVfZHVtcChlbmdpbmUsICZwLAotCQkJICAiJXMgaGVhcnRiZWF0IHtz
ZXFubzolbGx4OiVsbGQsIHByaW86JWR9IG5vdCB0aWNraW5nXG4iLAotCQkJICBlbmdpbmUtPm5h
bWUsCi0JCQkgIHJxLT5mZW5jZS5jb250ZXh0LAotCQkJICBycS0+ZmVuY2Uuc2Vxbm8sCi0JCQkg
IHJxLT5zY2hlZC5hdHRyLnByaW9yaXR5KTsKKwlpZiAoIXJxKSB7CisJCWludGVsX2VuZ2luZV9k
dW1wKGVuZ2luZSwgJnAsCisJCQkJICAiJXMgaGVhcnRiZWF0IG5vdCB0aWNraW5nXG4iLAorCQkJ
CSAgZW5naW5lLT5uYW1lKTsKKwl9IGVsc2UgeworCQlpbnRlbF9lbmdpbmVfZHVtcChlbmdpbmUs
ICZwLAorCQkJCSAgIiVzIGhlYXJ0YmVhdCB7c2Vxbm86JWxseDolbGxkLCBwcmlvOiVkfSBub3Qg
dGlja2luZ1xuIiwKKwkJCQkgIGVuZ2luZS0+bmFtZSwKKwkJCQkgIHJxLT5mZW5jZS5jb250ZXh0
LAorCQkJCSAgcnEtPmZlbmNlLnNlcW5vLAorCQkJCSAgcnEtPnNjaGVkLmF0dHIucHJpb3JpdHkp
OworCX0KK30KKworc3RhdGljIHZvaWQKK3Jlc2V0X2VuZ2luZShzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCWlmIChJU19FTkFCTEVE
KENPTkZJR19EUk1fSTkxNV9ERUJVR19HRU0pKQorCQlzaG93X2hlYXJ0YmVhdChycSwgZW5naW5l
KTsKKworCWlmIChpbnRlbF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKSkKKwkJLyoKKwkJICogR3VD
IGl0c2VsZiBpcyB0b2FzdCBvciBHdUMncyBoYW5nIGRldGVjdGlvbgorCQkgKiBpcyBkaXNhYmxl
ZC4gRWl0aGVyIHdheSwgbmVlZCB0byBmaW5kIHRoZQorCQkgKiBoYW5nIGN1bHByaXQgbWFudWFs
bHkuCisJCSAqLworCQlpbnRlbF9ndWNfZmluZF9odW5nX2NvbnRleHQoZW5naW5lKTsKKworCWlu
dGVsX2d0X2hhbmRsZV9lcnJvcihlbmdpbmUtPmd0LCBlbmdpbmUtPm1hc2ssCisJCQkgICAgICBJ
OTE1X0VSUk9SX0NBUFRVUkUsCisJCQkgICAgICAic3RvcHBlZCBoZWFydGJlYXQgb24gJXMiLAor
CQkJICAgICAgZW5naW5lLT5uYW1lKTsKIH0KIAogc3RhdGljIHZvaWQgaGVhcnRiZWF0KHN0cnVj
dCB3b3JrX3N0cnVjdCAqd3JrKQpAQCAtMTAyLDYgKzEyOCwxMSBAQCBzdGF0aWMgdm9pZCBoZWFy
dGJlYXQoc3RydWN0IHdvcmtfc3RydWN0ICp3cmspCiAJaWYgKGludGVsX2d0X2lzX3dlZGdlZChl
bmdpbmUtPmd0KSkKIAkJZ290byBvdXQ7CiAKKwlpZiAoaTkxNV9zY2hlZF9lbmdpbmVfZGlzYWJs
ZWQoZW5naW5lLT5zY2hlZF9lbmdpbmUpKSB7CisJCXJlc2V0X2VuZ2luZShlbmdpbmUsIGVuZ2lu
ZS0+aGVhcnRiZWF0LnN5c3RvbGUpOworCQlnb3RvIG91dDsKKwl9CisKIAlpZiAoZW5naW5lLT5o
ZWFydGJlYXQuc3lzdG9sZSkgewogCQlsb25nIGRlbGF5ID0gUkVBRF9PTkNFKGVuZ2luZS0+cHJv
cHMuaGVhcnRiZWF0X2ludGVydmFsX21zKTsKIApAQCAtMTM5LDEzICsxNzAsNyBAQCBzdGF0aWMg
dm9pZCBoZWFydGJlYXQoc3RydWN0IHdvcmtfc3RydWN0ICp3cmspCiAJCQllbmdpbmUtPnNjaGVk
X2VuZ2luZS0+c2NoZWR1bGUocnEsICZhdHRyKTsKIAkJCWxvY2FsX2JoX2VuYWJsZSgpOwogCQl9
IGVsc2UgewotCQkJaWYgKElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHX0dFTSkpCi0J
CQkJc2hvd19oZWFydGJlYXQocnEsIGVuZ2luZSk7Ci0KLQkJCWludGVsX2d0X2hhbmRsZV9lcnJv
cihlbmdpbmUtPmd0LCBlbmdpbmUtPm1hc2ssCi0JCQkJCSAgICAgIEk5MTVfRVJST1JfQ0FQVFVS
RSwKLQkJCQkJICAgICAgInN0b3BwZWQgaGVhcnRiZWF0IG9uICVzIiwKLQkJCQkJICAgICAgZW5n
aW5lLT5uYW1lKTsKKwkJCXJlc2V0X2VuZ2luZShlbmdpbmUsIHJxKTsKIAkJfQogCiAJCXJxLT5l
bWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwpAQCAtMTk0LDYgKzIxOSwyNiBAQCB2b2lkIGludGVs
X2VuZ2luZV9wYXJrX2hlYXJ0YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJ
CWk5MTVfcmVxdWVzdF9wdXQoZmV0Y2hfYW5kX3plcm8oJmVuZ2luZS0+aGVhcnRiZWF0LnN5c3Rv
bGUpKTsKIH0KIAordm9pZCBpbnRlbF9ndF91bnBhcmtfaGVhcnRiZWF0cyhzdHJ1Y3QgaW50ZWxf
Z3QgKmd0KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVs
X2VuZ2luZV9pZCBpZDsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkKKwkJaWYg
KGludGVsX2VuZ2luZV9wbV9pc19hd2FrZShlbmdpbmUpKQorCQkJaW50ZWxfZW5naW5lX3VucGFy
a19oZWFydGJlYXQoZW5naW5lKTsKKworfQorCit2b2lkIGludGVsX2d0X3BhcmtfaGVhcnRiZWF0
cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUs
IGd0LCBpZCkKKwkJaW50ZWxfZW5naW5lX3BhcmtfaGVhcnRiZWF0KGVuZ2luZSk7Cit9CisKIHZv
aWQgaW50ZWxfZW5naW5lX2luaXRfaGVhcnRiZWF0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKIHsKIAlJTklUX0RFTEFZRURfV09SSygmZW5naW5lLT5oZWFydGJlYXQud29yaywgaGVh
cnRiZWF0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2lu
ZV9oZWFydGJlYXQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFy
dGJlYXQuaAppbmRleCBhNDg4ZWEzZTg0YTMuLjVkYTZkODA5YTg3YSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuaApAQCAtNyw2ICs3LDcg
QEAKICNkZWZpbmUgSU5URUxfRU5HSU5FX0hFQVJUQkVBVF9ICiAKIHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3M7CitzdHJ1Y3QgaW50ZWxfZ3Q7CiAKIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfaGVhcnRi
ZWF0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAKQEAgLTE2LDYgKzE3LDkgQEAg
aW50IGludGVsX2VuZ2luZV9zZXRfaGVhcnRiZWF0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKIHZvaWQgaW50ZWxfZW5naW5lX3BhcmtfaGVhcnRiZWF0KHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSk7CiB2b2lkIGludGVsX2VuZ2luZV91bnBhcmtfaGVhcnRiZWF0KHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAKK3ZvaWQgaW50ZWxfZ3RfcGFya19oZWFydGJl
YXRzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwordm9pZCBpbnRlbF9ndF91bnBhcmtfaGVhcnRiZWF0
cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKKwogaW50IGludGVsX2VuZ2luZV9wdWxzZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogaW50IGludGVsX2VuZ2luZV9mbHVzaF9iYXJyaWVy
cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmluZGV4IDFjYjljM2I3MGIyOS4uZWVjNTdlNTc0
MDNmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlw
ZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApA
QCAtMjEsNyArMjEsNiBAQAogI2luY2x1ZGUgImk5MTVfcG11LmgiCiAjaW5jbHVkZSAiaTkxNV9w
cmlvbGlzdF90eXBlcy5oIgogI2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKLSNpbmNsdWRlICJp
bnRlbF9icmVhZGNydW1ic190eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3NzZXUuaCIKICNpbmNs
dWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3VuY29yZS5oIgpA
QCAtNjMsNiArNjIsNyBAQCBzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmU7CiBzdHJ1Y3QgaW50ZWxf
Z3Q7CiBzdHJ1Y3QgaW50ZWxfcmluZzsKIHN0cnVjdCBpbnRlbF91bmNvcmU7CitzdHJ1Y3QgaW50
ZWxfYnJlYWRjcnVtYnM7CiAKIHR5cGVkZWYgdTggaW50ZWxfZW5naW5lX21hc2tfdDsKICNkZWZp
bmUgQUxMX0VOR0lORVMgKChpbnRlbF9lbmdpbmVfbWFza190KX4wdWwpCkBAIC0zMDQsNiArMzA0
LDggQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7CiAJLyoga2VlcCBhIHJlcXVlc3QgaW4gcmVz
ZXJ2ZSBmb3IgYSBbcG1dIGJhcnJpZXIgdW5kZXIgb29tICovCiAJc3RydWN0IGk5MTVfcmVxdWVz
dCAqcmVxdWVzdF9wb29sOwogCisJc3RydWN0IGludGVsX2NvbnRleHQgKmh1bmdfY2U7CisKIAlz
dHJ1Y3QgbGxpc3RfaGVhZCBiYXJyaWVyX3Rhc2tzOwogCiAJc3RydWN0IGludGVsX2NvbnRleHQg
Kmtlcm5lbF9jb250ZXh0OyAvKiBwaW5uZWQgKi8KQEAgLTM4OCw2ICszOTAsOCBAQCBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzIHsKIAl2b2lkCQkoKnBhcmspKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSk7CiAJdm9pZAkJKCp1bnBhcmspKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSk7CiAKKwl2b2lkCQkoKmJ1bXBfc2VyaWFsKShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpOworCiAJdm9pZAkJKCpzZXRfZGVmYXVsdF9zdWJtaXNzaW9uKShzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpOwogCiAJY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHRfb3BzICpjb3Bz
OwpAQCAtNDE4LDYgKzQyMiwxMiBAQCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzIHsKIAogCXZvaWQJ
CSgqcmVsZWFzZSkoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAorCS8qCisJICog
QWRkIC8gcmVtb3ZlIHJlcXVlc3QgZnJvbSBlbmdpbmUgYWN0aXZlIHRyYWNraW5nCisJICovCisJ
dm9pZAkJKCphZGRfYWN0aXZlX3JlcXVlc3QpKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKTsKKwl2
b2lkCQkoKnJlbW92ZV9hY3RpdmVfcmVxdWVzdCkoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpOwor
CiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgZXhlY2xpc3RzOwogCiAJLyoKQEAgLTQz
OSw2ICs0NDksNyBAQCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzIHsKICNkZWZpbmUgSTkxNV9FTkdJ
TkVfSVNfVklSVFVBTCAgICAgICBCSVQoNSkKICNkZWZpbmUgSTkxNV9FTkdJTkVfSEFTX1JFTEFU
SVZFX01NSU8gQklUKDYpCiAjZGVmaW5lIEk5MTVfRU5HSU5FX1JFUVVJUkVTX0NNRF9QQVJTRVIg
QklUKDcpCisjZGVmaW5lIEk5MTVfRU5HSU5FX1dBTlRfRk9SQ0VEX1BSRUVNUFRJT04gQklUKDgp
CiAJdW5zaWduZWQgaW50IGZsYWdzOwogCiAJLyoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV91c2VyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfdXNlci5jCmluZGV4IDg0MTQyMTI3ZWJkOC4uOGY4YmVhMDhlNzM0IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdXNlci5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV91c2VyLmMKQEAgLTExLDYgKzEx
LDcgQEAKICNpbmNsdWRlICJpbnRlbF9lbmdpbmUuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
dXNlci5oIgogI2luY2x1ZGUgImludGVsX2d0LmgiCisjaW5jbHVkZSAidWMvaW50ZWxfZ3VjX3N1
Ym1pc3Npb24uaCIKIAogc3RydWN0IGludGVsX2VuZ2luZV9jcyAqCiBpbnRlbF9lbmdpbmVfbG9v
a3VwX3VzZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHU4IGNsYXNzLCB1OCBpbnN0
YW5jZSkKQEAgLTExNSw2ICsxMTYsOSBAQCBzdGF0aWMgdm9pZCBzZXRfc2NoZWR1bGVyX2NhcHMo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCQlkaXNhYmxlZCB8PSAoSTkxNV9TQ0hF
RFVMRVJfQ0FQX0VOQUJMRUQgfAogCQkJCSAgICAgSTkxNV9TQ0hFRFVMRVJfQ0FQX1BSSU9SSVRZ
KTsKIAorCQlpZiAoaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmaTkxNS0+Z3QudWMpKQor
CQkJZW5hYmxlZCB8PSBJOTE1X1NDSEVEVUxFUl9DQVBfU1RBVElDX1BSSU9SSVRZX01BUDsKKwog
CQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShtYXApOyBpKyspIHsKIAkJCWlmIChlbmdpbmUt
PmZsYWdzICYgQklUKG1hcFtpXS5lbmdpbmUpKQogCQkJCWVuYWJsZWQgfD0gQklUKG1hcFtpXS5z
Y2hlZCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlz
dHNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3Rz
X3N1Ym1pc3Npb24uYwppbmRleCA1NmUyNTA5MGRhNjcuLjJhYTVjYzEwMDk1NiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5j
CkBAIC0xMTQsNiArMTE0LDcgQEAKICNpbmNsdWRlICJnZW44X2VuZ2luZV9jcy5oIgogI2luY2x1
ZGUgImludGVsX2JyZWFkY3J1bWJzLmgiCiAjaW5jbHVkZSAiaW50ZWxfY29udGV4dC5oIgorI2lu
Y2x1ZGUgImludGVsX2VuZ2luZV9oZWFydGJlYXQuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
cG0uaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfc3RhdHMuaCIKICNpbmNsdWRlICJpbnRlbF9l
eGVjbGlzdHNfc3VibWlzc2lvbi5oIgpAQCAtMTkzLDYgKzE5NCw5IEBAIHN0YXRpYyBzdHJ1Y3Qg
dmlydHVhbF9lbmdpbmUgKnRvX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAlyZXR1cm4gY29udGFpbmVyX29mKGVuZ2luZSwgc3RydWN0IHZpcnR1YWxfZW5n
aW5lLCBiYXNlKTsKIH0KIAorc3RhdGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2V4ZWNsaXN0
c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2ln
bmVkIGludCBjb3VudCk7CisKIHN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKIF9fYWN0aXZl
X3JlcXVlc3QoY29uc3Qgc3RydWN0IGludGVsX3RpbWVsaW5lICogY29uc3QgdGwsCiAJCSBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwKQEAgLTI1MzMsMTEgKzI1MzcsMjYgQEAgc3RhdGljIGludCBl
eGVjbGlzdHNfY29udGV4dF9hbGxvYyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJu
IGxyY19hbGxvYyhjZSwgY2UtPmVuZ2luZSk7CiB9CiAKK3N0YXRpYyB2b2lkIGV4ZWNsaXN0c19j
b250ZXh0X2NhbmNlbF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCQkJICAg
ICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUgPSBOVUxMOworCisJaTkxNV9yZXF1ZXN0X2FjdGl2ZV9lbmdpbmUocnEsICZlbmdpbmUp
OworCisJaWYgKGVuZ2luZSAmJiBpbnRlbF9lbmdpbmVfcHVsc2UoZW5naW5lKSkKKwkJaW50ZWxf
Z3RfaGFuZGxlX2Vycm9yKGVuZ2luZS0+Z3QsIGVuZ2luZS0+bWFzaywgMCwKKwkJCQkgICAgICAi
cmVxdWVzdCBjYW5jZWxsYXRpb24gYnkgJXMiLAorCQkJCSAgICAgIGN1cnJlbnQtPmNvbW0pOwor
fQorCiBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHRfb3BzIGV4ZWNsaXN0c19jb250
ZXh0X29wcyA9IHsKIAkuZmxhZ3MgPSBDT1BTX0hBU19JTkZMSUdIVCwKIAogCS5hbGxvYyA9IGV4
ZWNsaXN0c19jb250ZXh0X2FsbG9jLAogCisJLmNhbmNlbF9yZXF1ZXN0ID0gZXhlY2xpc3RzX2Nv
bnRleHRfY2FuY2VsX3JlcXVlc3QsCisKIAkucHJlX3BpbiA9IGV4ZWNsaXN0c19jb250ZXh0X3By
ZV9waW4sCiAJLnBpbiA9IGV4ZWNsaXN0c19jb250ZXh0X3BpbiwKIAkudW5waW4gPSBscmNfdW5w
aW4sCkBAIC0yNTQ4LDYgKzI1NjcsOCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2NvbnRl
eHRfb3BzIGV4ZWNsaXN0c19jb250ZXh0X29wcyA9IHsKIAogCS5yZXNldCA9IGxyY19yZXNldCwK
IAkuZGVzdHJveSA9IGxyY19kZXN0cm95LAorCisJLmNyZWF0ZV92aXJ0dWFsID0gZXhlY2xpc3Rz
X2NyZWF0ZV92aXJ0dWFsLAogfTsKIAogc3RhdGljIGludCBlbWl0X3BkcHMoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEpCkBAIC0zMTAxLDYgKzMxMjIsNDIgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3Rz
X3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWNhbmNlbF90aW1lcigmZW5n
aW5lLT5leGVjbGlzdHMucHJlZW1wdCk7CiB9CiAKK3N0YXRpYyB2b2lkIGFkZF90b19lbmdpbmUo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPmVu
Z2luZS0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKwlsaXN0X21vdmVfdGFpbCgmcnEtPnNjaGVkLmxp
bmssICZycS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPnJlcXVlc3RzKTsKK30KKworc3RhdGljIHZv
aWQgcmVtb3ZlX2Zyb21fZW5naW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgKmxvY2tlZDsKKworCS8qCisJICogVmlydHVhbCBl
bmdpbmVzIGNvbXBsaWNhdGUgYWNxdWlyaW5nIHRoZSBlbmdpbmUgdGltZWxpbmUgbG9jaywKKwkg
KiBhcyB0aGVpciBycS0+ZW5naW5lIHBvaW50ZXIgaXMgbm90IHN0YWJsZSB1bnRpbCB1bmRlciB0
aGF0CisJICogZW5naW5lIGxvY2suIFRoZSBzaW1wbGUgcGxveSB3ZSB1c2UgaXMgdG8gdGFrZSB0
aGUgbG9jayB0aGVuCisJICogY2hlY2sgdGhhdCB0aGUgcnEgc3RpbGwgYmVsb25ncyB0byB0aGUg
bmV3bHkgbG9ja2VkIGVuZ2luZS4KKwkgKi8KKwlsb2NrZWQgPSBSRUFEX09OQ0UocnEtPmVuZ2lu
ZSk7CisJc3Bpbl9sb2NrX2lycSgmbG9ja2VkLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCXdoaWxl
ICh1bmxpa2VseShsb2NrZWQgIT0gKGVuZ2luZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpKSB7
CisJCXNwaW5fdW5sb2NrKCZsb2NrZWQtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisJCXNwaW5fbG9j
aygmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCQlsb2NrZWQgPSBlbmdpbmU7CisJfQor
CWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5saW5rKTsKKworCWNsZWFyX2JpdChJOTE1X0ZFTkNF
X0ZMQUdfUFFVRVVFLCAmcnEtPmZlbmNlLmZsYWdzKTsKKwljbGVhcl9iaXQoSTkxNV9GRU5DRV9G
TEFHX0hPTEQsICZycS0+ZmVuY2UuZmxhZ3MpOworCisJLyogUHJldmVudCBmdXJ0aGVyIF9fYXdh
aXRfZXhlY3V0aW9uKCkgcmVnaXN0ZXJpbmcgYSBjYiwgdGhlbiBmbHVzaCAqLworCXNldF9iaXQo
STkxNV9GRU5DRV9GTEFHX0FDVElWRSwgJnJxLT5mZW5jZS5mbGFncyk7CisKKwlzcGluX3VubG9j
a19pcnEoJmxvY2tlZC0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKworCWk5MTVfcmVxdWVzdF9ub3Rp
ZnlfZXhlY3V0ZV9jYl9pbW0ocnEpOworfQorCiBzdGF0aWMgYm9vbCBjYW5fcHJlZW1wdChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJaWYgKEdSQVBISUNTX1ZFUihlbmdpbmUt
Pmk5MTUpID4gOCkKQEAgLTMxOTUsNiArMzI1Miw4IEBAIGxvZ2ljYWxfcmluZ19kZWZhdWx0X3Zm
dW5jcyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIAllbmdpbmUtPmNvcHMgPSAm
ZXhlY2xpc3RzX2NvbnRleHRfb3BzOwogCWVuZ2luZS0+cmVxdWVzdF9hbGxvYyA9IGV4ZWNsaXN0
c19yZXF1ZXN0X2FsbG9jOworCWVuZ2luZS0+YWRkX2FjdGl2ZV9yZXF1ZXN0ID0gYWRkX3RvX2Vu
Z2luZTsKKwllbmdpbmUtPnJlbW92ZV9hY3RpdmVfcmVxdWVzdCA9IHJlbW92ZV9mcm9tX2VuZ2lu
ZTsKIAogCWVuZ2luZS0+cmVzZXQucHJlcGFyZSA9IGV4ZWNsaXN0c19yZXNldF9wcmVwYXJlOwog
CWVuZ2luZS0+cmVzZXQucmV3aW5kID0gZXhlY2xpc3RzX3Jlc2V0X3Jld2luZDsKQEAgLTMzOTYs
NyArMzQ1NSw3IEBAIHN0YXRpYyB2b2lkIHJjdV92aXJ0dWFsX2NvbnRleHRfZGVzdHJveShzdHJ1
Y3Qgd29ya19zdHJ1Y3QgKndyaykKIAlpbnRlbF9jb250ZXh0X2ZpbmkoJnZlLT5jb250ZXh0KTsK
IAogCWlmICh2ZS0+YmFzZS5icmVhZGNydW1icykKLQkJaW50ZWxfYnJlYWRjcnVtYnNfZnJlZSh2
ZS0+YmFzZS5icmVhZGNydW1icyk7CisJCWludGVsX2JyZWFkY3J1bWJzX3B1dCh2ZS0+YmFzZS5i
cmVhZGNydW1icyk7CiAJaWYgKHZlLT5iYXNlLnNjaGVkX2VuZ2luZSkKIAkJaTkxNV9zY2hlZF9l
bmdpbmVfcHV0KHZlLT5iYXNlLnNjaGVkX2VuZ2luZSk7CiAJaW50ZWxfZW5naW5lX2ZyZWVfcmVx
dWVzdF9wb29sKCZ2ZS0+YmFzZSk7CkBAIC0zNDkzLDExICszNTUyLDI0IEBAIHN0YXRpYyB2b2lk
IHZpcnR1YWxfY29udGV4dF9leGl0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAkJaW50ZWxf
ZW5naW5lX3BtX3B1dCh2ZS0+c2libGluZ3Nbbl0pOwogfQogCitzdGF0aWMgc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqCit2aXJ0dWFsX2dldF9zaWJsaW5nKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSwgdW5zaWduZWQgaW50IHNpYmxpbmcpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5l
ICp2ZSA9IHRvX3ZpcnR1YWxfZW5naW5lKGVuZ2luZSk7CisKKwlpZiAoc2libGluZyA+PSB2ZS0+
bnVtX3NpYmxpbmdzKQorCQlyZXR1cm4gTlVMTDsKKworCXJldHVybiB2ZS0+c2libGluZ3Nbc2li
bGluZ107Cit9CisKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dF9vcHMgdmlydHVh
bF9jb250ZXh0X29wcyA9IHsKIAkuZmxhZ3MgPSBDT1BTX0hBU19JTkZMSUdIVCwKIAogCS5hbGxv
YyA9IHZpcnR1YWxfY29udGV4dF9hbGxvYywKIAorCS5jYW5jZWxfcmVxdWVzdCA9IGV4ZWNsaXN0
c19jb250ZXh0X2NhbmNlbF9yZXF1ZXN0LAorCiAJLnByZV9waW4gPSB2aXJ0dWFsX2NvbnRleHRf
cHJlX3BpbiwKIAkucGluID0gdmlydHVhbF9jb250ZXh0X3BpbiwKIAkudW5waW4gPSBscmNfdW5w
aW4sCkBAIC0zNTA3LDYgKzM1NzksOCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2NvbnRl
eHRfb3BzIHZpcnR1YWxfY29udGV4dF9vcHMgPSB7CiAJLmV4aXQgPSB2aXJ0dWFsX2NvbnRleHRf
ZXhpdCwKIAogCS5kZXN0cm95ID0gdmlydHVhbF9jb250ZXh0X2Rlc3Ryb3ksCisKKwkuZ2V0X3Np
YmxpbmcgPSB2aXJ0dWFsX2dldF9zaWJsaW5nLAogfTsKIAogc3RhdGljIGludGVsX2VuZ2luZV9t
YXNrX3QgdmlydHVhbF9zdWJtaXNzaW9uX21hc2soc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSkK
QEAgLTM2NTUsMjAgKzM3MjksMTMgQEAgc3RhdGljIHZvaWQgdmlydHVhbF9zdWJtaXRfcmVxdWVz
dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ2ZS0+
YmFzZS5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKIH0KIAotc3RydWN0IGludGVsX2NvbnRl
eHQgKgotaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKipzaWJsaW5ncywKLQkJCSAgICAgICB1bnNpZ25lZCBpbnQgY291bnQpCitzdGF0aWMgc3Ry
dWN0IGludGVsX2NvbnRleHQgKgorZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKipzaWJsaW5ncywgdW5zaWduZWQgaW50IGNvdW50KQogewogCXN0cnVjdCB2
aXJ0dWFsX2VuZ2luZSAqdmU7CiAJdW5zaWduZWQgaW50IG47CiAJaW50IGVycjsKIAotCWlmIChj
b3VudCA9PSAwKQotCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKLQotCWlmIChjb3VudCA9PSAx
KQotCQlyZXR1cm4gaW50ZWxfY29udGV4dF9jcmVhdGUoc2libGluZ3NbMF0pOwotCiAJdmUgPSBr
emFsbG9jKHN0cnVjdF9zaXplKHZlLCBzaWJsaW5ncywgY291bnQpLCBHRlBfS0VSTkVMKTsKIAlp
ZiAoIXZlKQogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKQEAgLTM3ODAsNiArMzg0Nyw4IEBA
IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoq
c2libGluZ3MsCiAJCQkgInYlZHglZCIsIHZlLT5iYXNlLmNsYXNzLCBjb3VudCk7CiAJCXZlLT5i
YXNlLmNvbnRleHRfc2l6ZSA9IHNpYmxpbmctPmNvbnRleHRfc2l6ZTsKIAorCQl2ZS0+YmFzZS5h
ZGRfYWN0aXZlX3JlcXVlc3QgPSBzaWJsaW5nLT5hZGRfYWN0aXZlX3JlcXVlc3Q7CisJCXZlLT5i
YXNlLnJlbW92ZV9hY3RpdmVfcmVxdWVzdCA9IHNpYmxpbmctPnJlbW92ZV9hY3RpdmVfcmVxdWVz
dDsKIAkJdmUtPmJhc2UuZW1pdF9iYl9zdGFydCA9IHNpYmxpbmctPmVtaXRfYmJfc3RhcnQ7CiAJ
CXZlLT5iYXNlLmVtaXRfZmx1c2ggPSBzaWJsaW5nLT5lbWl0X2ZsdXNoOwogCQl2ZS0+YmFzZS5l
bWl0X2luaXRfYnJlYWRjcnVtYiA9IHNpYmxpbmctPmVtaXRfaW5pdF9icmVhZGNydW1iOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Np
b24uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9u
LmgKaW5kZXggYWQ0ZjNlMWEwZmRlLi5hMWFhOTJjOTgzYTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uaApAQCAtMzIsMTAg
KzMyLDYgQEAgdm9pZCBpbnRlbF9leGVjbGlzdHNfc2hvd19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUsCiAJCQkJCQkJaW50IGluZGVudCksCiAJCQkJICAgdW5zaWduZWQg
aW50IG1heCk7CiAKLXN0cnVjdCBpbnRlbF9jb250ZXh0ICoKLWludGVsX2V4ZWNsaXN0c19jcmVh
dGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCi0JCQkgICAgICAg
dW5zaWduZWQgaW50IGNvdW50KTsKLQogYm9vbAogaW50ZWxfZW5naW5lX2luX2V4ZWNsaXN0c19z
dWJtaXNzaW9uX21vZGUoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKaW5kZXggZTcxNGUyMWMwYTRkLi5jZWViNTE3YmEy
NTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYwpAQCAtNTg1LDYgKzU4NSwyNSBAQCBz
dGF0aWMgdm9pZCBfX2ludGVsX2d0X2Rpc2FibGUoc3RydWN0IGludGVsX2d0ICpndCkKIAlHRU1f
QlVHX09OKGludGVsX2d0X3BtX2lzX2F3YWtlKGd0KSk7CiB9CiAKK2ludCBpbnRlbF9ndF93YWl0
X2Zvcl9pZGxlKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGxvbmcgdGltZW91dCkKK3sKKwlsb25nIHJl
bWFpbmluZ190aW1lb3V0OworCisJLyogSWYgdGhlIGRldmljZSBpcyBhc2xlZXAsIHdlIGhhdmUg
bm8gcmVxdWVzdHMgb3V0c3RhbmRpbmcgKi8KKwlpZiAoIWludGVsX2d0X3BtX2lzX2F3YWtlKGd0
KSkKKwkJcmV0dXJuIDA7CisKKwl3aGlsZSAoKHRpbWVvdXQgPSBpbnRlbF9ndF9yZXRpcmVfcmVx
dWVzdHNfdGltZW91dChndCwgdGltZW91dCwKKwkJCQkJCQkgICAmcmVtYWluaW5nX3RpbWVvdXQp
KSA+IDApIHsKKwkJY29uZF9yZXNjaGVkKCk7CisJCWlmIChzaWduYWxfcGVuZGluZyhjdXJyZW50
KSkKKwkJCXJldHVybiAtRUlOVFI7CisJfQorCisJcmV0dXJuIHRpbWVvdXQgPyB0aW1lb3V0IDog
aW50ZWxfdWNfd2FpdF9mb3JfaWRsZSgmZ3QtPnVjLAorCQkJCQkJCSAgcmVtYWluaW5nX3RpbWVv
dXQpOworfQorCiBpbnQgaW50ZWxfZ3RfaW5pdChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewogCWlu
dCBlcnI7CkBAIC02MzUsNiArNjU0LDggQEAgaW50IGludGVsX2d0X2luaXQoc3RydWN0IGludGVs
X2d0ICpndCkKIAlpZiAoZXJyKQogCQlnb3RvIGVycl9ndDsKIAorCWludGVsX3VjX2luaXRfbGF0
ZSgmZ3QtPnVjKTsKKwogCWVyciA9IGk5MTVfaW5qZWN0X3Byb2JlX2Vycm9yKGd0LT5pOTE1LCAt
RUlPKTsKIAlpZiAoZXJyKQogCQlnb3RvIGVycl9ndDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2d0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dC5oCmluZGV4IGU3YWFiZTBjYzViZi4uNzRlNzcxODcxYTliIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2d0LmgKQEAgLTQ4LDYgKzQ4LDggQEAgdm9pZCBpbnRlbF9ndF9kcml2ZXJfcmVsZWFz
ZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIAogdm9pZCBpbnRlbF9ndF9kcml2ZXJfbGF0ZV9yZWxl
YXNlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogCitpbnQgaW50ZWxfZ3Rfd2FpdF9mb3JfaWRsZShz
dHJ1Y3QgaW50ZWxfZ3QgKmd0LCBsb25nIHRpbWVvdXQpOworCiB2b2lkIGludGVsX2d0X2NoZWNr
X2FuZF9jbGVhcl9mYXVsdHMoc3RydWN0IGludGVsX2d0ICpndCk7CiB2b2lkIGludGVsX2d0X2Ns
ZWFyX2Vycm9yX3JlZ2lzdGVycyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQkJCSAgICBpbnRlbF9l
bmdpbmVfbWFza190IGVuZ2luZV9tYXNrKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2d0X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9w
bS5jCmluZGV4IGFlZjMwODRlOGIxNi4uNDYzYTZhZTYwNWEwIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2d0X3BtLmMKQEAgLTE3NCw4ICsxNzQsNiBAQCBzdGF0aWMgdm9pZCBndF9zYW5p
dGl6ZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBib29sIGZvcmNlKQogCWlmIChpbnRlbF9ndF9pc193
ZWRnZWQoZ3QpKQogCQlpbnRlbF9ndF91bnNldF93ZWRnZWQoZ3QpOwogCi0JaW50ZWxfdWNfc2Fu
aXRpemUoJmd0LT51Yyk7Ci0KIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndCwgaWQpCiAJCWlm
IChlbmdpbmUtPnJlc2V0LnByZXBhcmUpCiAJCQllbmdpbmUtPnJlc2V0LnByZXBhcmUoZW5naW5l
KTsKQEAgLTE5MSw2ICsxODksOCBAQCBzdGF0aWMgdm9pZCBndF9zYW5pdGl6ZShzdHJ1Y3QgaW50
ZWxfZ3QgKmd0LCBib29sIGZvcmNlKQogCQkJX19pbnRlbF9lbmdpbmVfcmVzZXQoZW5naW5lLCBm
YWxzZSk7CiAJfQogCisJaW50ZWxfdWNfcmVzZXQoJmd0LT51YywgZmFsc2UpOworCiAJZm9yX2Vh
Y2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKQogCQlpZiAoZW5naW5lLT5yZXNldC5maW5pc2gpCiAJ
CQllbmdpbmUtPnJlc2V0LmZpbmlzaChlbmdpbmUpOwpAQCAtMjQzLDYgKzI0Myw4IEBAIGludCBp
bnRlbF9ndF9yZXN1bWUoc3RydWN0IGludGVsX2d0ICpndCkKIAkJZ290byBlcnJfd2VkZ2VkOwog
CX0KIAorCWludGVsX3VjX3Jlc2V0X2ZpbmlzaCgmZ3QtPnVjKTsKKwogCWludGVsX3Jwc19lbmFi
bGUoJmd0LT5ycHMpOwogCWludGVsX2xsY19lbmFibGUoJmd0LT5sbGMpOwogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0cy5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuYwppbmRleCA2NDdlY2E5ZDg2N2EuLmVk
Yjg4MWQ3NTYzMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
cmVxdWVzdHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0
cy5jCkBAIC0xMzAsNyArMTMwLDggQEAgdm9pZCBpbnRlbF9lbmdpbmVfZmluaV9yZXRpcmUoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCUdFTV9CVUdfT04oZW5naW5lLT5yZXRpcmUp
OwogfQogCi1sb25nIGludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KHN0cnVjdCBpbnRl
bF9ndCAqZ3QsIGxvbmcgdGltZW91dCkKK2xvbmcgaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3Rp
bWVvdXQoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0LAorCQkJCSAgICAgIGxvbmcg
KnJlbWFpbmluZ190aW1lb3V0KQogewogCXN0cnVjdCBpbnRlbF9ndF90aW1lbGluZXMgKnRpbWVs
aW5lcyA9ICZndC0+dGltZWxpbmVzOwogCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwsICp0bjsK
QEAgLTE5NSwyMiArMTk2LDEwIEBAIG91dF9hY3RpdmU6CXNwaW5fbG9jaygmdGltZWxpbmVzLT5s
b2NrKTsKIAlpZiAoZmx1c2hfc3VibWlzc2lvbihndCwgdGltZW91dCkpIC8qIFdhaXQsIHRoZXJl
J3MgbW9yZSEgKi8KIAkJYWN0aXZlX2NvdW50Kys7CiAKLQlyZXR1cm4gYWN0aXZlX2NvdW50ID8g
dGltZW91dCA6IDA7Ci19Ci0KLWludCBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKHN0cnVjdCBpbnRl
bF9ndCAqZ3QsIGxvbmcgdGltZW91dCkKLXsKLQkvKiBJZiB0aGUgZGV2aWNlIGlzIGFzbGVlcCwg
d2UgaGF2ZSBubyByZXF1ZXN0cyBvdXRzdGFuZGluZyAqLwotCWlmICghaW50ZWxfZ3RfcG1faXNf
YXdha2UoZ3QpKQotCQlyZXR1cm4gMDsKLQotCXdoaWxlICgodGltZW91dCA9IGludGVsX2d0X3Jl
dGlyZV9yZXF1ZXN0c190aW1lb3V0KGd0LCB0aW1lb3V0KSkgPiAwKSB7Ci0JCWNvbmRfcmVzY2hl
ZCgpOwotCQlpZiAoc2lnbmFsX3BlbmRpbmcoY3VycmVudCkpCi0JCQlyZXR1cm4gLUVJTlRSOwot
CX0KKwlpZiAocmVtYWluaW5nX3RpbWVvdXQpCisJCSpyZW1haW5pbmdfdGltZW91dCA9IHRpbWVv
dXQ7CiAKLQlyZXR1cm4gdGltZW91dDsKKwlyZXR1cm4gYWN0aXZlX2NvdW50ID8gdGltZW91dCA6
IDA7CiB9CiAKIHN0YXRpYyB2b2lkIHJldGlyZV93b3JrX2hhbmRsZXIoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3b3JrKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
cmVxdWVzdHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmgK
aW5kZXggZmNjMzBhNmU0ZmU5Li41MWRiZTBlMzI5NGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuaApAQCAtNiwxNCArNiwxNyBAQAogI2lmbmRlZiBJTlRF
TF9HVF9SRVFVRVNUU19ICiAjZGVmaW5lIElOVEVMX0dUX1JFUVVFU1RTX0gKIAorI2luY2x1ZGUg
PHN0ZGRlZi5oPgorCiBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzOwogc3RydWN0IGludGVsX2d0Owog
c3RydWN0IGludGVsX3RpbWVsaW5lOwogCi1sb25nIGludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190
aW1lb3V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGxvbmcgdGltZW91dCk7Citsb25nIGludGVsX2d0
X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGxvbmcgdGltZW91
dCwKKwkJCQkgICAgICBsb25nICpyZW1haW5pbmdfdGltZW91dCk7CiBzdGF0aWMgaW5saW5lIHZv
aWQgaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7Ci0JaW50
ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIDApOworCWludGVsX2d0X3JldGlyZV9y
ZXF1ZXN0c190aW1lb3V0KGd0LCAwLCBOVUxMKTsKIH0KIAogdm9pZCBpbnRlbF9lbmdpbmVfaW5p
dF9yZXRpcmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKQEAgLTIxLDggKzI0LDYg
QEAgdm9pZCBpbnRlbF9lbmdpbmVfYWRkX3JldGlyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsCiAJCQkgICAgIHN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwpOwogdm9pZCBpbnRlbF9l
bmdpbmVfZmluaV9yZXRpcmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAotaW50
IGludGVsX2d0X3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0
KTsKLQogdm9pZCBpbnRlbF9ndF9pbml0X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwog
dm9pZCBpbnRlbF9ndF9wYXJrX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogdm9pZCBp
bnRlbF9ndF91bnBhcmtfcmVxdWVzdHMoc3RydWN0IGludGVsX2d0ICpndCk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmNfcmVnLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9scmNfcmVnLmgKaW5kZXggNDFlNTM1MGE3YTA1Li40OWQ0ODU3YWQ5
YjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmNfcmVnLmgKQEAgLTg3LDcgKzg3
LDYgQEAKICNkZWZpbmUgR0VOMTFfQ1NCX1dSSVRFX1BUUl9NQVNLCShHRU4xMV9DU0JfUFRSX01B
U0sgPDwgMCkKIAogI2RlZmluZSBNQVhfQ09OVEVYVF9IV19JRAkoMSA8PCAyMSkgLyogZXhjbHVz
aXZlICovCi0jZGVmaW5lIE1BWF9HVUNfQ09OVEVYVF9IV19JRAkoMSA8PCAyMCkgLyogZXhjbHVz
aXZlICovCiAjZGVmaW5lIEdFTjExX01BWF9DT05URVhUX0hXX0lECSgxIDw8IDExKSAvKiBleGNs
dXNpdmUgKi8KIC8qIGluIEdlbjEyIElEIDB4N0ZGIGlzIHJlc2VydmVkIHRvIGluZGljYXRlIGlk
bGUgKi8KICNkZWZpbmUgR0VOMTJfTUFYX0NPTlRFWFRfSFdfSUQJKEdFTjExX01BWF9DT05URVhU
X0hXX0lEIC0gMSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jl
c2V0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCmluZGV4IDcyMjUx
NjM4ZDRlYS4uM2VkNjk0Y2FiNWFmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9yZXNldC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0
LmMKQEAgLTIyLDcgKzIyLDYgQEAKICNpbmNsdWRlICJpbnRlbF9yZXNldC5oIgogCiAjaW5jbHVk
ZSAidWMvaW50ZWxfZ3VjLmgiCi0jaW5jbHVkZSAidWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIK
IAogI2RlZmluZSBSRVNFVF9NQVhfUkVUUklFUyAzCiAKQEAgLTM5LDIxICszOCw2IEBAIHN0YXRp
YyB2b2lkIHJtd19jbGVhcl9mdyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUsIGk5MTVfcmVn
X3QgcmVnLCB1MzIgY2xyKQogCWludGVsX3VuY29yZV9ybXdfZncodW5jb3JlLCByZWcsIGNsciwg
MCk7CiB9CiAKLXN0YXRpYyB2b2lkIHNraXBfY29udGV4dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKLXsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqaHVuZ19jdHggPSBycS0+Y29udGV4dDsKLQot
CWxpc3RfZm9yX2VhY2hfZW50cnlfZnJvbV9yY3UocnEsICZodW5nX2N0eC0+dGltZWxpbmUtPnJl
cXVlc3RzLCBsaW5rKSB7Ci0JCWlmICghaTkxNV9yZXF1ZXN0X2lzX2FjdGl2ZShycSkpCi0JCQly
ZXR1cm47Ci0KLQkJaWYgKHJxLT5jb250ZXh0ID09IGh1bmdfY3R4KSB7Ci0JCQlpOTE1X3JlcXVl
c3Rfc2V0X2Vycm9yX29uY2UocnEsIC1FSU8pOwotCQkJX19pOTE1X3JlcXVlc3Rfc2tpcChycSk7
Ci0JCX0KLQl9Ci19Ci0KIHN0YXRpYyB2b2lkIGNsaWVudF9tYXJrX2d1aWx0eShzdHJ1Y3QgaTkx
NV9nZW1fY29udGV4dCAqY3R4LCBib29sIGJhbm5lZCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZmls
ZV9wcml2YXRlICpmaWxlX3ByaXYgPSBjdHgtPmZpbGVfcHJpdjsKQEAgLTg4LDEwICs3Miw4IEBA
IHN0YXRpYyBib29sIG1hcmtfZ3VpbHR5KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCWJvb2wg
YmFubmVkOwogCWludCBpOwogCi0JaWYgKGludGVsX2NvbnRleHRfaXNfY2xvc2VkKHJxLT5jb250
ZXh0KSkgewotCQlpbnRlbF9jb250ZXh0X3NldF9iYW5uZWQocnEtPmNvbnRleHQpOworCWlmIChp
bnRlbF9jb250ZXh0X2lzX2Nsb3NlZChycS0+Y29udGV4dCkpCiAJCXJldHVybiB0cnVlOwotCX0K
IAogCXJjdV9yZWFkX2xvY2soKTsKIAljdHggPSByY3VfZGVyZWZlcmVuY2UocnEtPmNvbnRleHQt
PmdlbV9jb250ZXh0KTsKQEAgLTEyMywxMSArMTA1LDkgQEAgc3RhdGljIGJvb2wgbWFya19ndWls
dHkoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJYmFubmVkID0gIWk5MTVfZ2VtX2NvbnRleHRf
aXNfcmVjb3ZlcmFibGUoY3R4KTsKIAlpZiAodGltZV9iZWZvcmUoamlmZmllcywgcHJldl9oYW5n
ICsgQ09OVEVYVF9GQVNUX0hBTkdfSklGRklFUykpCiAJCWJhbm5lZCA9IHRydWU7Ci0JaWYgKGJh
bm5lZCkgeworCWlmIChiYW5uZWQpCiAJCWRybV9kYmcoJmN0eC0+aTkxNS0+ZHJtLCAiY29udGV4
dCAlczogZ3VpbHR5ICVkLCBiYW5uZWRcbiIsCiAJCQljdHgtPm5hbWUsIGF0b21pY19yZWFkKCZj
dHgtPmd1aWx0eV9jb3VudCkpOwotCQlpbnRlbF9jb250ZXh0X3NldF9iYW5uZWQocnEtPmNvbnRl
eHQpOwotCX0KIAogCWNsaWVudF9tYXJrX2d1aWx0eShjdHgsIGJhbm5lZCk7CiAKQEAgLTE0OSw2
ICsxMjksOCBAQCBzdGF0aWMgdm9pZCBtYXJrX2lubm9jZW50KHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQogCiB2b2lkIF9faTkxNV9yZXF1ZXN0X3Jlc2V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LCBib29sIGd1aWx0eSkKIHsKKwlib29sIGJhbm5lZCA9IGZhbHNlOworCiAJUlFfVFJBQ0UocnEs
ICJndWlsdHk/ICVzXG4iLCB5ZXNubyhndWlsdHkpKTsKIAlHRU1fQlVHX09OKF9faTkxNV9yZXF1
ZXN0X2lzX2NvbXBsZXRlKHJxKSk7CiAKQEAgLTE1NiwxMyArMTM4LDE1IEBAIHZvaWQgX19pOTE1
X3JlcXVlc3RfcmVzZXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQogCWlm
IChndWlsdHkpIHsKIAkJaTkxNV9yZXF1ZXN0X3NldF9lcnJvcl9vbmNlKHJxLCAtRUlPKTsKIAkJ
X19pOTE1X3JlcXVlc3Rfc2tpcChycSk7Ci0JCWlmIChtYXJrX2d1aWx0eShycSkpCi0JCQlza2lw
X2NvbnRleHQocnEpOworCQliYW5uZWQgPSBtYXJrX2d1aWx0eShycSk7CiAJfSBlbHNlIHsKIAkJ
aTkxNV9yZXF1ZXN0X3NldF9lcnJvcl9vbmNlKHJxLCAtRUFHQUlOKTsKIAkJbWFya19pbm5vY2Vu
dChycSk7CiAJfQogCXJjdV9yZWFkX3VubG9jaygpOworCisJaWYgKGJhbm5lZCkKKwkJaW50ZWxf
Y29udGV4dF9iYW4ocnEtPmNvbnRleHQsIHJxKTsKIH0KIAogc3RhdGljIGJvb2wgaTkxNV9pbl9y
ZXNldChzdHJ1Y3QgcGNpX2RldiAqcGRldikKQEAgLTgyNiw2ICs4MTAsOCBAQCBzdGF0aWMgaW50
IGd0X3Jlc2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGludGVsX2VuZ2luZV9tYXNrX3Qgc3RhbGxl
ZF9tYXNrKQogCQlfX2ludGVsX2VuZ2luZV9yZXNldChlbmdpbmUsIHN0YWxsZWRfbWFzayAmIGVu
Z2luZS0+bWFzayk7CiAJbG9jYWxfYmhfZW5hYmxlKCk7CiAKKwlpbnRlbF91Y19yZXNldCgmZ3Qt
PnVjLCB0cnVlKTsKKwogCWludGVsX2dndHRfcmVzdG9yZV9mZW5jZXMoZ3QtPmdndHQpOwogCiAJ
cmV0dXJuIGVycjsKQEAgLTg1MCw2ICs4MzYsOCBAQCBzdGF0aWMgdm9pZCByZXNldF9maW5pc2go
c3RydWN0IGludGVsX2d0ICpndCwgaW50ZWxfZW5naW5lX21hc2tfdCBhd2FrZSkKIAkJaWYgKGF3
YWtlICYgZW5naW5lLT5tYXNrKQogCQkJaW50ZWxfZW5naW5lX3BtX3B1dChlbmdpbmUpOwogCX0K
KworCWludGVsX3VjX3Jlc2V0X2ZpbmlzaCgmZ3QtPnVjKTsKIH0KIAogc3RhdGljIHZvaWQgbm9w
X3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCkBAIC05MDMsNiAr
ODkxLDcgQEAgc3RhdGljIHZvaWQgX19pbnRlbF9ndF9zZXRfd2VkZ2VkKHN0cnVjdCBpbnRlbF9n
dCAqZ3QpCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKQogCQlpZiAoZW5naW5lLT5y
ZXNldC5jYW5jZWwpCiAJCQllbmdpbmUtPnJlc2V0LmNhbmNlbChlbmdpbmUpOworCWludGVsX3Vj
X2NhbmNlbF9yZXF1ZXN0cygmZ3QtPnVjKTsKIAlsb2NhbF9iaF9lbmFibGUoKTsKIAogCXJlc2V0
X2ZpbmlzaChndCwgYXdha2UpOwpAQCAtMTE5MSw2ICsxMTgwLDkgQEAgaW50IF9faW50ZWxfZW5n
aW5lX3Jlc2V0X2JoKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgY29uc3QgY2hhciAq
bXNnKQogCUVOR0lORV9UUkFDRShlbmdpbmUsICJmbGFncz0lbHhcbiIsIGd0LT5yZXNldC5mbGFn
cyk7CiAJR0VNX0JVR19PTighdGVzdF9iaXQoSTkxNV9SRVNFVF9FTkdJTkUgKyBlbmdpbmUtPmlk
LCAmZ3QtPnJlc2V0LmZsYWdzKSk7CiAKKwlpZiAoaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2lu
ZSkpCisJCXJldHVybiAtRU5PREVWOworCiAJaWYgKCFpbnRlbF9lbmdpbmVfcG1fZ2V0X2lmX2F3
YWtlKGVuZ2luZSkpCiAJCXJldHVybiAwOwogCkBAIC0xMjAxLDEzICsxMTkzLDEwIEBAIGludCBf
X2ludGVsX2VuZ2luZV9yZXNldF9iaChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGNv
bnN0IGNoYXIgKm1zZykKIAkJCSAgICJSZXNldHRpbmcgJXMgZm9yICVzXG4iLCBlbmdpbmUtPm5h
bWUsIG1zZyk7CiAJYXRvbWljX2luYygmZW5naW5lLT5pOTE1LT5ncHVfZXJyb3IucmVzZXRfZW5n
aW5lX2NvdW50W2VuZ2luZS0+dWFiaV9jbGFzc10pOwogCi0JaWYgKGludGVsX2VuZ2luZV91c2Vz
X2d1YyhlbmdpbmUpKQotCQlyZXQgPSBpbnRlbF9ndWNfcmVzZXRfZW5naW5lKCZlbmdpbmUtPmd0
LT51Yy5ndWMsIGVuZ2luZSk7Ci0JZWxzZQotCQlyZXQgPSBpbnRlbF9ndF9yZXNldF9lbmdpbmUo
ZW5naW5lKTsKKwlyZXQgPSBpbnRlbF9ndF9yZXNldF9lbmdpbmUoZW5naW5lKTsKIAlpZiAocmV0
KSB7CiAJCS8qIElmIHdlIGZhaWwgaGVyZSwgd2UgZXhwZWN0IHRvIGZhbGxiYWNrIHRvIGEgZ2xv
YmFsIHJlc2V0ICovCi0JCUVOR0lORV9UUkFDRShlbmdpbmUsICJGYWlsZWQgdG8gcmVzZXQsIGVy
cjogJWRcbiIsIHJldCk7CisJCUVOR0lORV9UUkFDRShlbmdpbmUsICJGYWlsZWQgdG8gcmVzZXQg
JXMsIGVycjogJWRcbiIsIGVuZ2luZS0+bmFtZSwgcmV0KTsKIAkJZ290byBvdXQ7CiAJfQogCkBA
IC0xMzQxLDcgKzEzMzAsOCBAQCB2b2lkIGludGVsX2d0X2hhbmRsZV9lcnJvcihzdHJ1Y3QgaW50
ZWxfZ3QgKmd0LAogCSAqIFRyeSBlbmdpbmUgcmVzZXQgd2hlbiBhdmFpbGFibGUuIFdlIGZhbGwg
YmFjayB0byBmdWxsIHJlc2V0IGlmCiAJICogc2luZ2xlIHJlc2V0IGZhaWxzLgogCSAqLwotCWlm
IChpbnRlbF9oYXNfcmVzZXRfZW5naW5lKGd0KSAmJiAhaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkg
eworCWlmICghaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmZ3QtPnVjKSAmJgorCSAgICBp
bnRlbF9oYXNfcmVzZXRfZW5naW5lKGd0KSAmJiAhaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkgewog
CQlsb2NhbF9iaF9kaXNhYmxlKCk7CiAJCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQoZW5naW5lLCBn
dCwgZW5naW5lX21hc2ssIHRtcCkgewogCQkJQlVJTERfQlVHX09OKEk5MTVfUkVTRVRfTU9ERVNF
VCA+PSBJOTE1X1JFU0VUX0VOR0lORSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX3Jpbmdfc3VibWlzc2lvbi5jCmluZGV4IDVjNGQyMDRkMDdjYy4uMDViYjlmNDQ5ZGYxIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYwpA
QCAtNTg2LDkgKzU4NiwyOSBAQCBzdGF0aWMgdm9pZCByaW5nX2NvbnRleHRfcmVzZXQoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQogCWNsZWFyX2JpdChDT05URVhUX1ZBTElEX0JJVCwgJmNlLT5m
bGFncyk7CiB9CiAKK3N0YXRpYyB2b2lkIHJpbmdfY29udGV4dF9iYW4oc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlLAorCQkJICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisKKwlpZiAoIXJxIHx8ICFpOTE1X3JlcXVlc3RfaXNf
YWN0aXZlKHJxKSkKKwkJcmV0dXJuOworCisJZW5naW5lID0gcnEtPmVuZ2luZTsKKwlsb2NrZGVw
X2Fzc2VydF9oZWxkKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisJbGlzdF9mb3JfZWFj
aF9lbnRyeV9jb250aW51ZShycSwgJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXF1ZXN0cywKKwkJ
CQkgICAgIHNjaGVkLmxpbmspCisJCWlmIChycS0+Y29udGV4dCA9PSBjZSkgeworCQkJaTkxNV9y
ZXF1ZXN0X3NldF9lcnJvcl9vbmNlKHJxLCAtRUlPKTsKKwkJCV9faTkxNV9yZXF1ZXN0X3NraXAo
cnEpOworCQl9Cit9CisKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dF9vcHMgcmlu
Z19jb250ZXh0X29wcyA9IHsKIAkuYWxsb2MgPSByaW5nX2NvbnRleHRfYWxsb2MsCiAKKwkuYmFu
ID0gcmluZ19jb250ZXh0X2JhbiwKKwogCS5wcmVfcGluID0gcmluZ19jb250ZXh0X3ByZV9waW4s
CiAJLnBpbiA9IHJpbmdfY29udGV4dF9waW4sCiAJLnVucGluID0gcmluZ19jb250ZXh0X3VucGlu
LApAQCAtMTA0Nyw2ICsxMDY3LDI1IEBAIHN0YXRpYyB2b2lkIHNldHVwX2lycShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJfQogfQogCitzdGF0aWMgdm9pZCBhZGRfdG9fZW5naW5l
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJxLT5l
bmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisJbGlzdF9tb3ZlX3RhaWwoJnJxLT5zY2hlZC5s
aW5rLCAmcnEtPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXF1ZXN0cyk7Cit9CisKK3N0YXRpYyB2
b2lkIHJlbW92ZV9mcm9tX2VuZ2luZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzcGlu
X2xvY2tfaXJxKCZycS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCWxpc3RfZGVsX2lu
aXQoJnJxLT5zY2hlZC5saW5rKTsKKworCS8qIFByZXZlbnQgZnVydGhlciBfX2F3YWl0X2V4ZWN1
dGlvbigpIHJlZ2lzdGVyaW5nIGEgY2IsIHRoZW4gZmx1c2ggKi8KKwlzZXRfYml0KEk5MTVfRkVO
Q0VfRkxBR19BQ1RJVkUsICZycS0+ZmVuY2UuZmxhZ3MpOworCisJc3Bpbl91bmxvY2tfaXJxKCZy
cS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCisJaTkxNV9yZXF1ZXN0X25vdGlmeV9l
eGVjdXRlX2NiX2ltbShycSk7Cit9CisKIHN0YXRpYyB2b2lkIHNldHVwX2NvbW1vbihzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUgPSBlbmdpbmUtPmk5MTU7CkBAIC0xMDY0LDYgKzExMDMsOSBAQCBzdGF0aWMgdm9pZCBzZXR1
cF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVuZ2luZS0+cmVzZXQu
Y2FuY2VsID0gcmVzZXRfY2FuY2VsOwogCWVuZ2luZS0+cmVzZXQuZmluaXNoID0gcmVzZXRfZmlu
aXNoOwogCisJZW5naW5lLT5hZGRfYWN0aXZlX3JlcXVlc3QgPSBhZGRfdG9fZW5naW5lOworCWVu
Z2luZS0+cmVtb3ZlX2FjdGl2ZV9yZXF1ZXN0ID0gcmVtb3ZlX2Zyb21fZW5naW5lOworCiAJZW5n
aW5lLT5jb3BzID0gJnJpbmdfY29udGV4dF9vcHM7CiAJZW5naW5lLT5yZXF1ZXN0X2FsbG9jID0g
cmluZ19yZXF1ZXN0X2FsbG9jOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ycHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jwcy5jCmluZGV4
IDA2ZTlhOGVkNGUwMy4uMGM4ZTdmMmIwNmYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ycHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9y
cHMuYwpAQCAtMTg3Nyw2ICsxODc3LDEwIEBAIHZvaWQgaW50ZWxfcnBzX2luaXQoc3RydWN0IGlu
dGVsX3JwcyAqcnBzKQogCiAJaWYgKEdSQVBISUNTX1ZFUihpOTE1KSA+PSA4ICYmIEdSQVBISUNT
X1ZFUihpOTE1KSA8IDExKQogCQlycHMtPnBtX2ludHJtc2tfbWJ6IHw9IEdFTjhfUE1JTlRSX0RJ
U0FCTEVfUkVESVJFQ1RfVE9fR1VDOworCisJLyogR3VDIG5lZWRzIEFSQVQgZXhwaXJlZCBpbnRl
cnJ1cHQgdW5tYXNrZWQgKi8KKwlpZiAoaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnBz
X3RvX2d0KHJwcyktPnVjKSkKKwkJcnBzLT5wbV9pbnRybXNrX21ieiB8PSBBUkFUX0VYUElSRURf
SU5UUk1TSzsKIH0KIAogdm9pZCBpbnRlbF9ycHNfc2FuaXRpemUoc3RydWN0IGludGVsX3JwcyAq
cnBzKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3Vu
ZHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMKaW5kZXgg
NzczMWRiMzNjNDZhLi4yZmQzMmRjMGI1MjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfd29ya2Fyb3VuZHMuYwpAQCAtMTUwLDEzICsxNTAsMTQgQEAgc3RhdGljIHZvaWQgX3dh
X2FkZChzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwsIGNvbnN0IHN0cnVjdCBpOTE1X3dhICp3YSkK
IH0KIAogc3RhdGljIHZvaWQgd2FfYWRkKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9y
ZWdfdCByZWcsCi0JCSAgIHUzMiBjbGVhciwgdTMyIHNldCwgdTMyIHJlYWRfbWFzaykKKwkJICAg
dTMyIGNsZWFyLCB1MzIgc2V0LCB1MzIgcmVhZF9tYXNrLCBib29sIG1hc2tlZF9yZWcpCiB7CiAJ
c3RydWN0IGk5MTVfd2Egd2EgPSB7CiAJCS5yZWcgID0gcmVnLAogCQkuY2xyICA9IGNsZWFyLAog
CQkuc2V0ICA9IHNldCwKIAkJLnJlYWQgPSByZWFkX21hc2ssCisJCS5tYXNrZWRfcmVnID0gbWFz
a2VkX3JlZywKIAl9OwogCiAJX3dhX2FkZCh3YWwsICZ3YSk7CkBAIC0xNjUsNyArMTY2LDcgQEAg
c3RhdGljIHZvaWQgd2FfYWRkKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9yZWdfdCBy
ZWcsCiBzdGF0aWMgdm9pZAogd2Ffd3JpdGVfY2xyX3NldChzdHJ1Y3QgaTkxNV93YV9saXN0ICp3
YWwsIGk5MTVfcmVnX3QgcmVnLCB1MzIgY2xlYXIsIHUzMiBzZXQpCiB7Ci0Jd2FfYWRkKHdhbCwg
cmVnLCBjbGVhciwgc2V0LCBjbGVhcik7CisJd2FfYWRkKHdhbCwgcmVnLCBjbGVhciwgc2V0LCBj
bGVhciwgZmFsc2UpOwogfQogCiBzdGF0aWMgdm9pZApAQCAtMjAwLDIwICsyMDEsMjAgQEAgd2Ff
d3JpdGVfY2xyKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9yZWdfdCByZWcsIHUzMiBj
bHIpCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2VuKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwg
aTkxNV9yZWdfdCByZWcsIHUzMiB2YWwpCiB7Ci0Jd2FfYWRkKHdhbCwgcmVnLCAwLCBfTUFTS0VE
X0JJVF9FTkFCTEUodmFsKSwgdmFsKTsKKwl3YV9hZGQod2FsLCByZWcsIDAsIF9NQVNLRURfQklU
X0VOQUJMRSh2YWwpLCB2YWwsIHRydWUpOwogfQogCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2Rp
cyhzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwsIGk5MTVfcmVnX3QgcmVnLCB1MzIgdmFsKQogewot
CXdhX2FkZCh3YWwsIHJlZywgMCwgX01BU0tFRF9CSVRfRElTQUJMRSh2YWwpLCB2YWwpOworCXdh
X2FkZCh3YWwsIHJlZywgMCwgX01BU0tFRF9CSVRfRElTQUJMRSh2YWwpLCB2YWwsIHRydWUpOwog
fQogCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2ZpZWxkX3NldChzdHJ1Y3QgaTkxNV93YV9saXN0
ICp3YWwsIGk5MTVfcmVnX3QgcmVnLAogCQkgICAgdTMyIG1hc2ssIHUzMiB2YWwpCiB7Ci0Jd2Ff
YWRkKHdhbCwgcmVnLCAwLCBfTUFTS0VEX0ZJRUxEKG1hc2ssIHZhbCksIG1hc2spOworCXdhX2Fk
ZCh3YWwsIHJlZywgMCwgX01BU0tFRF9GSUVMRChtYXNrLCB2YWwpLCBtYXNrLCB0cnVlKTsKIH0K
IAogc3RhdGljIHZvaWQgZ2VuNl9jdHhfd29ya2Fyb3VuZHNfaW5pdChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUsCkBAIC01MzMsMTAgKzUzNCwxMCBAQCBzdGF0aWMgdm9pZCBpY2xfY3R4
X3dvcmthcm91bmRzX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCXdhX21h
c2tlZF9lbih3YWwsIElDTF9IRENfTU9ERSwgSERDX0ZPUkNFX05PTl9DT0hFUkVOVCk7CiAKIAkv
KiBXYUVuYWJsZUZsb2F0QmxlbmRPcHRpbWl6YXRpb246aWNsICovCi0Jd2Ffd3JpdGVfY2xyX3Nl
dCh3YWwsCi0JCQkgR0VOMTBfQ0FDSEVfTU9ERV9TUywKLQkJCSAwLCAvKiB3cml0ZS1vbmx5LCBz
byBza2lwIHZhbGlkYXRpb24gKi8KLQkJCSBfTUFTS0VEX0JJVF9FTkFCTEUoRkxPQVRfQkxFTkRf
T1BUSU1JWkFUSU9OX0VOQUJMRSkpOworCXdhX2FkZCh3YWwsIEdFTjEwX0NBQ0hFX01PREVfU1Ms
IDAsCisJICAgICAgIF9NQVNLRURfQklUX0VOQUJMRShGTE9BVF9CTEVORF9PUFRJTUlaQVRJT05f
RU5BQkxFKSwKKwkgICAgICAgMCAvKiB3cml0ZS1vbmx5LCBzbyBza2lwIHZhbGlkYXRpb24gKi8s
CisJICAgICAgIHRydWUpOwogCiAJLyogV2FEaXNhYmxlR1BHUFVNaWRUaHJlYWRQcmVlbXB0aW9u
OmljbCAqLwogCXdhX21hc2tlZF9maWVsZF9zZXQod2FsLCBHRU44X0NTX0NISUNLRU4xLApAQCAt
NTgxLDcgKzU4Miw3IEBAIHN0YXRpYyB2b2lkIGdlbjEyX2N0eF9ndF90dW5pbmdfaW5pdChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJICAgICAgIEZGX01PREUyLAogCSAgICAgICBG
Rl9NT0RFMl9URFNfVElNRVJfTUFTSywKIAkgICAgICAgRkZfTU9ERTJfVERTX1RJTUVSXzEyOCwK
LQkgICAgICAgMCk7CisJICAgICAgIDAsIGZhbHNlKTsKIH0KIAogc3RhdGljIHZvaWQgZ2VuMTJf
Y3R4X3dvcmthcm91bmRzX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLApAQCAt
NjE5LDcgKzYyMCw3IEBAIHN0YXRpYyB2b2lkIGdlbjEyX2N0eF93b3JrYXJvdW5kc19pbml0KHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkgICAgICAgRkZfTU9ERTIsCiAJICAgICAg
IEZGX01PREUyX0dTX1RJTUVSX01BU0ssCiAJICAgICAgIEZGX01PREUyX0dTX1RJTUVSXzIyNCwK
LQkgICAgICAgMCk7CisJICAgICAgIDAsIGZhbHNlKTsKIAogCS8qCiAJICogV2FfMTQwMTIxMzEy
Mjc6ZGcxCkBAIC03OTUsNyArNzk2LDcgQEAgaHN3X2d0X3dvcmthcm91bmRzX2luaXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCkKIAl3YV9h
ZGQod2FsLAogCSAgICAgICBIU1dfUk9XX0NISUNLRU4zLCAwLAogCSAgICAgICBfTUFTS0VEX0JJ
VF9FTkFCTEUoSFNXX1JPV19DSElDS0VOM19MM19HTE9CQUxfQVRPTUlDU19ESVNBQkxFKSwKLQkJ
MCAvKiBYWFggZG9lcyB0aGlzIHJlZyBleGlzdD8gKi8pOworCSAgICAgICAwIC8qIFhYWCBkb2Vz
IHRoaXMgcmVnIGV4aXN0PyAqLywgdHJ1ZSk7CiAKIAkvKiBXYVZTUmVmQ291bnRGdWxsZm9yY2VN
aXNzRGlzYWJsZTpoc3cgKi8KIAl3YV93cml0ZV9jbHIod2FsLCBHRU43X0ZGX1RIUkVBRF9NT0RF
LCBHRU43X0ZGX1ZTX1JFRl9DTlRfRkZNRSk7CkBAIC0xODQzLDEwICsxODQ0LDEwIEBAIHJjc19l
bmdpbmVfd2FfaW5pdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBpOTE1
X3dhX2xpc3QgKndhbCkKIAkJICogZGlzYWJsZSBiaXQsIHdoaWNoIHdlIGRvbid0IHRvdWNoIGhl
cmUsIGJ1dCBpdCdzIGdvb2QKIAkJICogdG8ga2VlcCBpbiBtaW5kIChzZWUgM0RTVEFURV9QUyBh
bmQgM0RTVEFURV9XTSkuCiAJCSAqLwotCQl3YV9hZGQod2FsLCBHRU43X0dUX01PREUsIDAsCi0J
CSAgICAgICBfTUFTS0VEX0ZJRUxEKEdFTjZfV0laX0hBU0hJTkdfTUFTSywKLQkJCQkgICAgIEdF
TjZfV0laX0hBU0hJTkdfMTZ4NCksCi0JCSAgICAgICBHRU42X1dJWl9IQVNISU5HXzE2eDQpOwor
CQl3YV9tYXNrZWRfZmllbGRfc2V0KHdhbCwKKwkJCQkgICAgR0VON19HVF9NT0RFLAorCQkJCSAg
ICBHRU42X1dJWl9IQVNISU5HX01BU0ssCisJCQkJICAgIEdFTjZfV0laX0hBU0hJTkdfMTZ4NCk7
CiAJfQogCiAJaWYgKElTX0dSQVBISUNTX1ZFUihpOTE1LCA2LCA3KSkKQEAgLTE4OTYsMTAgKzE4
OTcsMTAgQEAgcmNzX2VuZ2luZV93YV9pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwgc3RydWN0IGk5MTVfd2FfbGlzdCAqd2FsKQogCQkgKiBkaXNhYmxlIGJpdCwgd2hpY2ggd2Ug
ZG9uJ3QgdG91Y2ggaGVyZSwgYnV0IGl0J3MgZ29vZAogCQkgKiB0byBrZWVwIGluIG1pbmQgKHNl
ZSAzRFNUQVRFX1BTIGFuZCAzRFNUQVRFX1dNKS4KIAkJICovCi0JCXdhX2FkZCh3YWwsCi0JCSAg
ICAgICBHRU42X0dUX01PREUsIDAsCi0JCSAgICAgICBfTUFTS0VEX0ZJRUxEKEdFTjZfV0laX0hB
U0hJTkdfTUFTSywgR0VONl9XSVpfSEFTSElOR18xNng0KSwKLQkJICAgICAgIEdFTjZfV0laX0hB
U0hJTkdfMTZ4NCk7CisJCXdhX21hc2tlZF9maWVsZF9zZXQod2FsLAorCQkJCSAgICBHRU42X0dU
X01PREUsCisJCQkJICAgIEdFTjZfV0laX0hBU0hJTkdfTUFTSywKKwkJCQkgICAgR0VONl9XSVpf
SEFTSElOR18xNng0KTsKIAogCQkvKiBXYURpc2FibGVfUmVuZGVyQ2FjaGVfT3BlcmF0aW9uYWxG
bHVzaDpzbmIgKi8KIAkJd2FfbWFza2VkX2Rpcyh3YWwsIENBQ0hFX01PREVfMCwgUkNfT1BfRkxV
U0hfRU5BQkxFKTsKQEAgLTE5MjAsNyArMTkyMSw3IEBAIHJjc19lbmdpbmVfd2FfaW5pdChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCkKIAkJ
d2FfYWRkKHdhbCwgTUlfTU9ERSwKIAkJICAgICAgIDAsIF9NQVNLRURfQklUX0VOQUJMRShWU19U
SU1FUl9ESVNQQVRDSCksCiAJCSAgICAgICAvKiBYWFggYml0IGRvZXNuJ3Qgc3RpY2sgb24gQnJv
YWR3YXRlciAqLwotCQkgICAgICAgSVNfSTk2NUcoaTkxNSkgPyAwIDogVlNfVElNRVJfRElTUEFU
Q0gpOworCQkgICAgICAgSVNfSTk2NUcoaTkxNSkgPyAwIDogVlNfVElNRVJfRElTUEFUQ0gsIHRy
dWUpOwogCiAJaWYgKEdSQVBISUNTX1ZFUihpOTE1KSA9PSA0KQogCQkvKgpAQCAtMTkzNSw3ICsx
OTM2LDggQEAgcmNzX2VuZ2luZV93YV9pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwgc3RydWN0IGk5MTVfd2FfbGlzdCAqd2FsKQogCQkgKi8KIAkJd2FfYWRkKHdhbCwgRUNPU0tQ
RCwKIAkJICAgICAgIDAsIF9NQVNLRURfQklUX0VOQUJMRShFQ09fQ09OU1RBTlRfQlVGRkVSX1NS
X0RJU0FCTEUpLAotCQkgICAgICAgMCAvKiBYWFggYml0IGRvZXNuJ3Qgc3RpY2sgb24gQnJvYWR3
YXRlciAqLyk7CisJCSAgICAgICAwIC8qIFhYWCBiaXQgZG9lc24ndCBzdGljayBvbiBCcm9hZHdh
dGVyICovLAorCQkgICAgICAgdHJ1ZSk7CiB9CiAKIHN0YXRpYyB2b2lkCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kc190eXBlcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHNfdHlwZXMuaAppbmRleCBjMjE0MTEx
ZWEzNjcuLjFlODczNjgxNzk1ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfd29ya2Fyb3VuZHNfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF93b3JrYXJvdW5kc190eXBlcy5oCkBAIC0xNSw2ICsxNSw3IEBAIHN0cnVjdCBpOTE1X3dh
IHsKIAl1MzIJCWNscjsKIAl1MzIJCXNldDsKIAl1MzIJCXJlYWQ7CisJYm9vbAkJbWFza2VkX3Jl
ZzsKIH07CiAKIHN0cnVjdCBpOTE1X3dhX2xpc3QgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tf
ZW5naW5lLmMKaW5kZXggNjg5NzAzOThlNGVmLi4yYzFhZjAzMDMxMGMgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvbW9ja19lbmdpbmUuYwpAQCAtMjM1LDYgKzIzNSwzNCBAQCBzdGF0aWMgdm9pZCBt
b2NrX3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJc3Bpbl91
bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5od19sb2NrLCBmbGFncyk7CiB9CiAKK3N0YXRpYyB2
b2lkIG1vY2tfYWRkX3RvX2VuZ2luZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZycS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCWxpc3Rf
bW92ZV90YWlsKCZycS0+c2NoZWQubGluaywgJnJxLT5lbmdpbmUtPnNjaGVkX2VuZ2luZS0+cmVx
dWVzdHMpOworfQorCitzdGF0aWMgdm9pZCBtb2NrX3JlbW92ZV9mcm9tX2VuZ2luZShzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsICps
b2NrZWQ7CisKKwkvKgorCSAqIFZpcnR1YWwgZW5naW5lcyBjb21wbGljYXRlIGFjcXVpcmluZyB0
aGUgZW5naW5lIHRpbWVsaW5lIGxvY2ssCisJICogYXMgdGhlaXIgcnEtPmVuZ2luZSBwb2ludGVy
IGlzIG5vdCBzdGFibGUgdW50aWwgdW5kZXIgdGhhdAorCSAqIGVuZ2luZSBsb2NrLiBUaGUgc2lt
cGxlIHBsb3kgd2UgdXNlIGlzIHRvIHRha2UgdGhlIGxvY2sgdGhlbgorCSAqIGNoZWNrIHRoYXQg
dGhlIHJxIHN0aWxsIGJlbG9uZ3MgdG8gdGhlIG5ld2x5IGxvY2tlZCBlbmdpbmUuCisJICovCisK
Kwlsb2NrZWQgPSBSRUFEX09OQ0UocnEtPmVuZ2luZSk7CisJc3Bpbl9sb2NrX2lycSgmbG9ja2Vk
LT5zY2hlZF9lbmdpbmUtPmxvY2spOworCXdoaWxlICh1bmxpa2VseShsb2NrZWQgIT0gKGVuZ2lu
ZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpKSB7CisJCXNwaW5fdW5sb2NrKCZsb2NrZWQtPnNj
aGVkX2VuZ2luZS0+bG9jayk7CisJCXNwaW5fbG9jaygmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxv
Y2spOworCQlsb2NrZWQgPSBlbmdpbmU7CisJfQorCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5s
aW5rKTsKKwlzcGluX3VubG9ja19pcnEoJmxvY2tlZC0+c2NoZWRfZW5naW5lLT5sb2NrKTsKK30K
Kwogc3RhdGljIHZvaWQgbW9ja19yZXNldF9wcmVwYXJlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIHsKIH0KQEAgLTI4NCw3ICszMTIsNyBAQCBzdGF0aWMgdm9pZCBtb2NrX2VuZ2lu
ZV9yZWxlYXNlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlHRU1fQlVHX09OKHRp
bWVyX3BlbmRpbmcoJm1vY2stPmh3X2RlbGF5KSk7CiAKIAlpOTE1X3NjaGVkX2VuZ2luZV9wdXQo
ZW5naW5lLT5zY2hlZF9lbmdpbmUpOwotCWludGVsX2JyZWFkY3J1bWJzX2ZyZWUoZW5naW5lLT5i
cmVhZGNydW1icyk7CisJaW50ZWxfYnJlYWRjcnVtYnNfcHV0KGVuZ2luZS0+YnJlYWRjcnVtYnMp
OwogCiAJaW50ZWxfY29udGV4dF91bnBpbihlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKIAlpbnRl
bF9jb250ZXh0X3B1dChlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKQEAgLTMyMSw2ICszNDksOCBA
QCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICptb2NrX2VuZ2luZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKIAllbmdpbmUtPmJhc2UuZW1pdF9mbHVzaCA9IG1vY2tfZW1pdF9mbHVzaDsK
IAllbmdpbmUtPmJhc2UuZW1pdF9maW5pX2JyZWFkY3J1bWIgPSBtb2NrX2VtaXRfYnJlYWRjcnVt
YjsKIAllbmdpbmUtPmJhc2Uuc3VibWl0X3JlcXVlc3QgPSBtb2NrX3N1Ym1pdF9yZXF1ZXN0Owor
CWVuZ2luZS0+YmFzZS5hZGRfYWN0aXZlX3JlcXVlc3QgPSBtb2NrX2FkZF90b19lbmdpbmU7CisJ
ZW5naW5lLT5iYXNlLnJlbW92ZV9hY3RpdmVfcmVxdWVzdCA9IG1vY2tfcmVtb3ZlX2Zyb21fZW5n
aW5lOwogCiAJZW5naW5lLT5iYXNlLnJlc2V0LnByZXBhcmUgPSBtb2NrX3Jlc2V0X3ByZXBhcmU7
CiAJZW5naW5lLT5iYXNlLnJlc2V0LnJld2luZCA9IG1vY2tfcmVzZXRfcmV3aW5kOwpAQCAtMzcw
LDcgKzQwMCw3IEBAIGludCBtb2NrX2VuZ2luZV9pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAlyZXR1cm4gMDsKIAogZXJyX2JyZWFkY3J1bWJzOgotCWludGVsX2JyZWFkY3J1
bWJzX2ZyZWUoZW5naW5lLT5icmVhZGNydW1icyk7CisJaW50ZWxfYnJlYWRjcnVtYnNfcHV0KGVu
Z2luZS0+YnJlYWRjcnVtYnMpOwogZXJyX3NjaGVkdWxlOgogCWk5MTVfc2NoZWRfZW5naW5lX3B1
dChlbmdpbmUtPnNjaGVkX2VuZ2luZSk7CiAJcmV0dXJuIC1FTk9NRU07CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKaW5kZXggMjY2ODViOTI3MTY5Li5mYTdiOTlh
NjcxZGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRl
eHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKQEAg
LTIwOSw3ICsyMDksMTMgQEAgc3RhdGljIGludCBfX2xpdmVfYWN0aXZlX2NvbnRleHQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCSAqIFRoaXMgdGVzdCBtYWtlcyBzdXJlIHRoYXQg
dGhlIGNvbnRleHQgaXMga2VwdCBhbGl2ZSB1bnRpbCBhCiAJICogc3Vic2VxdWVudCBpZGxlLWJh
cnJpZXIgKGVtaXR0ZWQgd2hlbiB0aGUgZW5naW5lIHdha2VyZWYgaGl0cyAwCiAJICogd2l0aCBu
byBtb3JlIG91dHN0YW5kaW5nIHJlcXVlc3RzKS4KKwkgKgorCSAqIEluIEd1QyBzdWJtaXNzaW9u
IG1vZGUgd2UgZG9uJ3QgdXNlIGlkbGUgYmFycmllcnMgYW5kIHdlIGluc3RlYWQKKwkgKiBnZXQg
YSBtZXNzYWdlIGZyb20gdGhlIEd1QyB0byBzaWduYWwgdGhhdCBpdCBpcyBzYWZlIHRvIHVucGlu
IHRoZQorCSAqIGNvbnRleHQgZnJvbSBtZW1vcnkuCiAJICovCisJaWYgKGludGVsX2VuZ2luZV91
c2VzX2d1YyhlbmdpbmUpKQorCQlyZXR1cm4gMDsKIAogCWlmIChpbnRlbF9lbmdpbmVfcG1faXNf
YXdha2UoZW5naW5lKSkgewogCQlwcl9lcnIoIiVzIGlzIGF3YWtlIGJlZm9yZSBzdGFydGluZyAl
cyFcbiIsCkBAIC0zNTcsNyArMzYzLDExIEBAIHN0YXRpYyBpbnQgX19saXZlX3JlbW90ZV9jb250
ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkgKiBvbiB0aGUgY29udGV4dCBp
bWFnZSByZW1vdGVseSAoaW50ZWxfY29udGV4dF9wcmVwYXJlX3JlbW90ZV9yZXF1ZXN0KSwKIAkg
KiB3aGljaCBpbnNlcnRzIGZvcmVpZ24gZmVuY2VzIGludG8gaW50ZWxfY29udGV4dC5hY3RpdmUs
IGRvZXMgbm90CiAJICogY2xvYmJlciB0aGUgaWRsZS1iYXJyaWVyLgorCSAqCisJICogSW4gR3VD
IHN1Ym1pc3Npb24gbW9kZSB3ZSBkb24ndCB1c2UgaWRsZSBiYXJyaWVycy4KIAkgKi8KKwlpZiAo
aW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2luZSkpCisJCXJldHVybiAwOwogCiAJaWYgKGludGVs
X2VuZ2luZV9wbV9pc19hd2FrZShlbmdpbmUpKSB7CiAJCXByX2VycigiJXMgaXMgYXdha2UgYmVm
b3JlIHN0YXJ0aW5nICVzIVxuIiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2VuZ2luZV9oZWFydGJlYXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X2VuZ2luZV9oZWFydGJlYXQuYwppbmRleCA0ODk2ZTRjY2FkNTAuLjMxN2VlYmYwODZj
MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hl
YXJ0YmVhdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9o
ZWFydGJlYXQuYwpAQCAtNDA1LDMgKzQwNSwyNSBAQCB2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRf
ZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAllbmdpbmUtPnByb3BzLmhl
YXJ0YmVhdF9pbnRlcnZhbF9tcyA9CiAJCWVuZ2luZS0+ZGVmYXVsdHMuaGVhcnRiZWF0X2ludGVy
dmFsX21zOwogfQorCit2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRfZGlzYWJsZV9ub19wbShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJZW5naW5lLT5wcm9wcy5oZWFydGJlYXRf
aW50ZXJ2YWxfbXMgPSAwOworCisJLyoKKwkgKiBQYXJrIHRoZSBoZWFydGJlYXQgYnV0IHdpdGhv
dXQgaG9sZGluZyB0aGUgUE0gbG9jayBhcyB0aGF0CisJICogbWFrZXMgdGhlIGVuZ2luZXMgYXBw
ZWFyIG5vdC1pZGxlLiBOb3RlIHRoYXQgaWYvd2hlbiB1bnBhcmsKKwkgKiBpcyBjYWxsZWQgZHVl
IHRvIHRoZSBQTSBsb2NrIGJlaW5nIGFjcXVpcmVkIGxhdGVyIHRoZQorCSAqIGhlYXJ0YmVhdCBz
dGlsbCB3b24ndCBiZSBlbmFibGVkIGJlY2F1c2Ugb2YgdGhlIGFib3ZlID0gMC4KKwkgKi8KKwlp
ZiAoaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZShlbmdpbmUpKSB7CisJCWludGVsX2VuZ2lu
ZV9wYXJrX2hlYXJ0YmVhdChlbmdpbmUpOworCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7
CisJfQorfQorCit2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlX25vX3BtKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwllbmdpbmUtPnByb3BzLmhlYXJ0YmVhdF9pbnRl
cnZhbF9tcyA9CisJCWVuZ2luZS0+ZGVmYXVsdHMuaGVhcnRiZWF0X2ludGVydmFsX21zOworfQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0
YmVhdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVh
dC5oCmluZGV4IGNkMjcxMTNkNTQwMC4uODFkYTJjZDhlNDA2IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5oCkBAIC05LDYgKzks
OCBAQAogc3RydWN0IGludGVsX2VuZ2luZV9jczsKIAogdm9pZCBzdF9lbmdpbmVfaGVhcnRiZWF0
X2Rpc2FibGUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKK3ZvaWQgc3RfZW5naW5l
X2hlYXJ0YmVhdF9kaXNhYmxlX25vX3BtKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7
CiB2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSk7Cit2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlX25vX3BtKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAKICNlbmRpZiAvKiBTRUxGVEVTVF9FTkdJTkVfSEVB
UlRCRUFUX0ggKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0
X2V4ZWNsaXN0cy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZXhlY2xpc3Rz
LmMKaW5kZXggNzNkZGM2ZTE0NzMwLi41OWNmOGFmYzZkNmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2V4ZWNsaXN0cy5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3NlbGZ0ZXN0X2V4ZWNsaXN0cy5jCkBAIC0zNzI3LDcgKzM3MjcsNyBAQCBzdGF0
aWMgaW50IG5vcF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCUdFTV9CVUdf
T04oIW5jdHggfHwgbmN0eCA+IEFSUkFZX1NJWkUodmUpKTsKIAogCWZvciAobiA9IDA7IG4gPCBu
Y3R4OyBuKyspIHsKLQkJdmVbbl0gPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2li
bGluZ3MsIG5zaWJsaW5nKTsKKwkJdmVbbl0gPSBpbnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1YWwo
c2libGluZ3MsIG5zaWJsaW5nKTsKIAkJaWYgKElTX0VSUih2ZVtuXSkpIHsKIAkJCWVyciA9IFBU
Ul9FUlIodmVbbl0pOwogCQkJbmN0eCA9IG47CkBAIC0zOTIzLDcgKzM5MjMsNyBAQCBzdGF0aWMg
aW50IG1hc2tfdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVsX2d0ICpndCwKIAkgKiByZXN0cmlj
dCBpdCB0byBvdXIgZGVzaXJlZCBlbmdpbmUgd2l0aGluIHRoZSB2aXJ0dWFsIGVuZ2luZS4KIAkg
Ki8KIAotCXZlID0gaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHNpYmxpbmdzLCBuc2li
bGluZyk7CisJdmUgPSBpbnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1YWwoc2libGluZ3MsIG5zaWJs
aW5nKTsKIAlpZiAoSVNfRVJSKHZlKSkgewogCQllcnIgPSBQVFJfRVJSKHZlKTsKIAkJZ290byBv
dXRfY2xvc2U7CkBAIC00MDU0LDcgKzQwNTQsNyBAQCBzdGF0aWMgaW50IHNsaWNlaW5fdmlydHVh
bF9lbmdpbmUoc3RydWN0IGludGVsX2d0ICpndCwKIAkJaTkxNV9yZXF1ZXN0X2FkZChycSk7CiAJ
fQogCi0JY2UgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2libGluZ3MsIG5zaWJs
aW5nKTsKKwljZSA9IGludGVsX2VuZ2luZV9jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxp
bmcpOwogCWlmIChJU19FUlIoY2UpKSB7CiAJCWVyciA9IFBUUl9FUlIoY2UpOwogCQlnb3RvIG91
dDsKQEAgLTQxMDYsNyArNDEwNiw3IEBAIHN0YXRpYyBpbnQgc2xpY2VvdXRfdmlydHVhbF9lbmdp
bmUoc3RydWN0IGludGVsX2d0ICpndCwKIAogCS8qIFhYWCBXZSBkbyBub3QgaGFuZGxlIG92ZXJz
dWJzY3JpcHRpb24gYW5kIGZhaXJuZXNzIHdpdGggbm9ybWFsIHJxICovCiAJZm9yIChuID0gMDsg
biA8IG5zaWJsaW5nOyBuKyspIHsKLQkJY2UgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1
YWwoc2libGluZ3MsIG5zaWJsaW5nKTsKKwkJY2UgPSBpbnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1
YWwoc2libGluZ3MsIG5zaWJsaW5nKTsKIAkJaWYgKElTX0VSUihjZSkpIHsKIAkJCWVyciA9IFBU
Ul9FUlIoY2UpOwogCQkJZ290byBvdXQ7CkBAIC00MjA4LDcgKzQyMDgsNyBAQCBzdGF0aWMgaW50
IHByZXNlcnZlZF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCWlmIChlcnIp
CiAJCWdvdG8gb3V0X3NjcmF0Y2g7CiAKLQl2ZSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmly
dHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOworCXZlID0gaW50ZWxfZW5naW5lX2NyZWF0ZV92aXJ0
dWFsKHNpYmxpbmdzLCBuc2libGluZyk7CiAJaWYgKElTX0VSUih2ZSkpIHsKIAkJZXJyID0gUFRS
X0VSUih2ZSk7CiAJCWdvdG8gb3V0X3NjcmF0Y2g7CkBAIC00MzQ4LDcgKzQzNDgsNyBAQCBzdGF0
aWMgaW50IHJlc2V0X3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJaWYgKGln
dF9zcGlubmVyX2luaXQoJnNwaW4sIGd0KSkKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQl2ZSA9IGlu
dGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOworCXZlID0g
aW50ZWxfZW5naW5lX2NyZWF0ZV92aXJ0dWFsKHNpYmxpbmdzLCBuc2libGluZyk7CiAJaWYgKElT
X0VSUih2ZSkpIHsKIAkJZXJyID0gUFRSX0VSUih2ZSk7CiAJCWdvdG8gb3V0X3NwaW47CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9oYW5nY2hlY2suYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2hhbmdjaGVjay5jCmluZGV4IDdhZWExMGFh
MWZiNC4uM2UzMmJlY2FlYWUyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9z
ZWxmdGVzdF9oYW5nY2hlY2suYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVz
dF9oYW5nY2hlY2suYwpAQCAtMTcsNiArMTcsOCBAQAogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3Rf
Zmx1c2hfdGVzdC5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfcmVzZXQuaCIKICNpbmNsdWRl
ICJzZWxmdGVzdHMvaWd0X2F0b21pYy5oIgorI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3Rfc3Bpbm5l
ci5oIgorI2luY2x1ZGUgInNlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oIgogCiAj
aW5jbHVkZSAic2VsZnRlc3RzL21vY2tfZHJtLmgiCiAKQEAgLTM3OCw2ICszODAsNyBAQCBzdGF0
aWMgaW50IGlndF9yZXNldF9ub3Aodm9pZCAqYXJnKQogCQkJY2UgPSBpbnRlbF9jb250ZXh0X2Ny
ZWF0ZShlbmdpbmUpOwogCQkJaWYgKElTX0VSUihjZSkpIHsKIAkJCQllcnIgPSBQVFJfRVJSKGNl
KTsKKwkJCQlwcl9lcnIoIlslc10gQ3JlYXRlIGNvbnRleHQgZmFpbGVkOiAlZCFcbiIsIGVuZ2lu
ZS0+bmFtZSwgZXJyKTsKIAkJCQlicmVhazsKIAkJCX0KIApAQCAtMzg3LDYgKzM5MCw4IEBAIHN0
YXRpYyBpbnQgaWd0X3Jlc2V0X25vcCh2b2lkICphcmcpCiAJCQkJcnEgPSBpbnRlbF9jb250ZXh0
X2NyZWF0ZV9yZXF1ZXN0KGNlKTsKIAkJCQlpZiAoSVNfRVJSKHJxKSkgewogCQkJCQllcnIgPSBQ
VFJfRVJSKHJxKTsKKwkJCQkJcHJfZXJyKCJbJXNdIENyZWF0ZSByZXF1ZXN0IGZhaWxlZDogJWQh
XG4iLAorCQkJCQkgICAgICAgZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJCQlicmVhazsKIAkJCQl9
CiAKQEAgLTQwMSwyNCArNDA2LDMxIEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X25vcCh2b2lkICph
cmcpCiAJCWlndF9nbG9iYWxfcmVzZXRfdW5sb2NrKGd0KTsKIAogCQlpZiAoaW50ZWxfZ3RfaXNf
d2VkZ2VkKGd0KSkgeworCQkJcHJfZXJyKCJbJXNdIEdUIGlzIHdlZGdlZCFcbiIsIGVuZ2luZS0+
bmFtZSk7CiAJCQllcnIgPSAtRUlPOwogCQkJYnJlYWs7CiAJCX0KIAogCQlpZiAoaTkxNV9yZXNl
dF9jb3VudChnbG9iYWwpICE9IHJlc2V0X2NvdW50ICsgKytjb3VudCkgewotCQkJcHJfZXJyKCJG
dWxsIEdQVSByZXNldCBub3QgcmVjb3JkZWQhXG4iKTsKKwkJCXByX2VycigiWyVzXSBSZXNldCBu
b3QgcmVjb3JkZWQ6ICVkIHZzICVkICsgJWQhXG4iLAorCQkJICAgICAgIGVuZ2luZS0+bmFtZSwg
aTkxNV9yZXNldF9jb3VudChnbG9iYWwpLCByZXNldF9jb3VudCwgY291bnQpOwogCQkJZXJyID0g
LUVJTlZBTDsKIAkJCWJyZWFrOwogCQl9CiAKIAkJZXJyID0gaWd0X2ZsdXNoX3Rlc3QoZ3QtPmk5
MTUpOwotCQlpZiAoZXJyKQorCQlpZiAoZXJyKSB7CisJCQlwcl9lcnIoIlslc10gRmx1c2ggZmFp
bGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCWJyZWFrOworCQl9CiAJfSB3aGls
ZSAodGltZV9iZWZvcmUoamlmZmllcywgZW5kX3RpbWUpKTsKIAlwcl9pbmZvKCIlczogJWQgcmVz
ZXRzXG4iLCBfX2Z1bmNfXywgY291bnQpOwogCi0JaWYgKGlndF9mbHVzaF90ZXN0KGd0LT5pOTE1
KSkKKwlpZiAoaWd0X2ZsdXNoX3Rlc3QoZ3QtPmk5MTUpKSB7CisJCXByX2VycigiUG9zdCBmbHVz
aCBmYWlsZWQ6ICVkIVxuIiwgZXJyKTsKIAkJZXJyID0gLUVJTzsKKwl9CisKIAlyZXR1cm4gZXJy
OwogfQogCkBAIC00NDAsOSArNDUyLDE5IEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X25vcF9lbmdp
bmUodm9pZCAqYXJnKQogCQlJR1RfVElNRU9VVChlbmRfdGltZSk7CiAJCWludCBlcnI7CiAKKwkJ
aWYgKGludGVsX2VuZ2luZV91c2VzX2d1YyhlbmdpbmUpKSB7CisJCQkvKiBFbmdpbmUgbGV2ZWwg
cmVzZXRzIGFyZSB0cmlnZ2VyZWQgYnkgR3VDIHdoZW4gYSBoYW5nCisJCQkgKiBpcyBkZXRlY3Rl
ZC4gVGhleSBjYW4ndCBiZSB0cmlnZ2VyZWQgYnkgdGhlIEtNRCBhbnkKKwkJCSAqIG1vcmUuIFRo
dXMgYSBub3AgYmF0Y2ggY2Fubm90IGJlIHVzZWQgYXMgYSByZXNldCB0ZXN0CisJCQkgKi8KKwkJ
CWNvbnRpbnVlOworCQl9CisKIAkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwot
CQlpZiAoSVNfRVJSKGNlKSkKKwkJaWYgKElTX0VSUihjZSkpIHsKKwkJCXByX2VycigiWyVzXSBD
cmVhdGUgY29udGV4dCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJcmV0
dXJuIFBUUl9FUlIoY2UpOworCQl9CiAKIAkJcmVzZXRfY291bnQgPSBpOTE1X3Jlc2V0X2NvdW50
KGdsb2JhbCk7CiAJCXJlc2V0X2VuZ2luZV9jb3VudCA9IGk5MTVfcmVzZXRfZW5naW5lX2NvdW50
KGdsb2JhbCwgZW5naW5lKTsKQEAgLTU0OSw5ICs1NzEsMTUgQEAgc3RhdGljIGludCBpZ3RfcmVz
ZXRfZmFpbF9lbmdpbmUodm9pZCAqYXJnKQogCQlJR1RfVElNRU9VVChlbmRfdGltZSk7CiAJCWlu
dCBlcnI7CiAKKwkJLyogQ2FuJ3QgbWFudWFsbHkgYnJlYWsgdGhlIHJlc2V0IGlmIGk5MTUgZG9l
c24ndCBwZXJmb3JtIGl0ICovCisJCWlmIChpbnRlbF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKSkK
KwkJCWNvbnRpbnVlOworCiAJCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZW5naW5lKTsKLQkJ
aWYgKElTX0VSUihjZSkpCisJCWlmIChJU19FUlIoY2UpKSB7CisJCQlwcl9lcnIoIlslc10gQ3Jl
YXRlIGNvbnRleHQgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCXJldHVy
biBQVFJfRVJSKGNlKTsKKwkJfQogCiAJCXN0X2VuZ2luZV9oZWFydGJlYXRfZGlzYWJsZShlbmdp
bmUpOwogCQlzZXRfYml0KEk5MTVfUkVTRVRfRU5HSU5FICsgaWQsICZndC0+cmVzZXQuZmxhZ3Mp
OwpAQCAtNjg2LDggKzcxNCwxMiBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZShzdHJ1
Y3QgaW50ZWxfZ3QgKmd0LCBib29sIGFjdGl2ZSkKIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBn
dCwgaWQpIHsKIAkJdW5zaWduZWQgaW50IHJlc2V0X2NvdW50LCByZXNldF9lbmdpbmVfY291bnQ7
CiAJCXVuc2lnbmVkIGxvbmcgY291bnQ7CisJCWJvb2wgdXNpbmdfZ3VjID0gaW50ZWxfZW5naW5l
X3VzZXNfZ3VjKGVuZ2luZSk7CiAJCUlHVF9USU1FT1VUKGVuZF90aW1lKTsKIAorCQlpZiAodXNp
bmdfZ3VjICYmICFhY3RpdmUpCisJCQljb250aW51ZTsKKwogCQlpZiAoYWN0aXZlICYmICFpbnRl
bF9lbmdpbmVfY2FuX3N0b3JlX2R3b3JkKGVuZ2luZSkpCiAJCQljb250aW51ZTsKIApAQCAtNzA1
LDEzICs3MzcsMjQgQEAgc3RhdGljIGludCBfX2lndF9yZXNldF9lbmdpbmUoc3RydWN0IGludGVs
X2d0ICpndCwgYm9vbCBhY3RpdmUpCiAJCXNldF9iaXQoSTkxNV9SRVNFVF9FTkdJTkUgKyBpZCwg
Jmd0LT5yZXNldC5mbGFncyk7CiAJCWNvdW50ID0gMDsKIAkJZG8gewotCQkJaWYgKGFjdGl2ZSkg
ewotCQkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCQkJc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEgPSBOVUxMOworCQkJc3RydWN0IGludGVsX3NlbGZ0ZXN0X3NhdmVkX3BvbGljeSBzYXZlZDsK
KwkJCWludCBlcnIyOworCisJCQllcnIgPSBpbnRlbF9zZWxmdGVzdF9tb2RpZnlfcG9saWN5KGVu
Z2luZSwgJnNhdmVkLAorCQkJCQkJCSAgIFNFTEZURVNUX1NDSEVEVUxFUl9NT0RJRllfRkFTVF9S
RVNFVCk7CisJCQlpZiAoZXJyKSB7CisJCQkJcHJfZXJyKCJbJXNdIE1vZGlmeSBwb2xpY3kgZmFp
bGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKKwkJCQlicmVhazsKKwkJCX0KIAorCQkJ
aWYgKGFjdGl2ZSkgewogCQkJCXJxID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsK
IAkJCQlpZiAoSVNfRVJSKHJxKSkgewogCQkJCQllcnIgPSBQVFJfRVJSKHJxKTsKLQkJCQkJYnJl
YWs7CisJCQkJCXByX2VycigiWyVzXSBDcmVhdGUgaGFuZyByZXF1ZXN0IGZhaWxlZDogJWQhXG4i
LAorCQkJCQkgICAgICAgZW5naW5lLT5uYW1lLCBlcnIpOworCQkJCQlnb3RvIHJlc3RvcmU7CiAJ
CQkJfQogCiAJCQkJaTkxNV9yZXF1ZXN0X2dldChycSk7CkBAIC03MjcsMzQgKzc3MCw1OSBAQCBz
dGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBib29sIGFj
dGl2ZSkKIAogCQkJCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIAkJCQkJZXJyID0gLUVJTzsKLQkJ
CQkJYnJlYWs7CisJCQkJCWdvdG8gcmVzdG9yZTsKIAkJCQl9CisJCQl9CiAKLQkJCQlpOTE1X3Jl
cXVlc3RfcHV0KHJxKTsKKwkJCWlmICghdXNpbmdfZ3VjKSB7CisJCQkJZXJyID0gaW50ZWxfZW5n
aW5lX3Jlc2V0KGVuZ2luZSwgTlVMTCk7CisJCQkJaWYgKGVycikgeworCQkJCQlwcl9lcnIoImlu
dGVsX2VuZ2luZV9yZXNldCglcykgZmFpbGVkLCBlcnI6JWRcbiIsCisJCQkJCSAgICAgICBlbmdp
bmUtPm5hbWUsIGVycik7CisJCQkJCWdvdG8gc2tpcDsKKwkJCQl9CiAJCQl9CiAKLQkJCWVyciA9
IGludGVsX2VuZ2luZV9yZXNldChlbmdpbmUsIE5VTEwpOwotCQkJaWYgKGVycikgewotCQkJCXBy
X2VycigiaW50ZWxfZW5naW5lX3Jlc2V0KCVzKSBmYWlsZWQsIGVycjolZFxuIiwKLQkJCQkgICAg
ICAgZW5naW5lLT5uYW1lLCBlcnIpOwotCQkJCWJyZWFrOworCQkJaWYgKHJxKSB7CisJCQkJLyog
RW5zdXJlIHRoZSByZXNldCBoYXBwZW5zIGFuZCBraWxscyB0aGUgZW5naW5lICovCisJCQkJZXJy
ID0gaW50ZWxfc2VsZnRlc3Rfd2FpdF9mb3JfcnEocnEpOworCQkJCWlmIChlcnIpCisJCQkJCXBy
X2VycigiWyVzXSBXYWl0IGZvciByZXF1ZXN0ICVsbGQ6JWxsZCBbMHglMDRYXSBmYWlsZWQ6ICVk
IVxuIiwKKwkJCQkJICAgICAgIGVuZ2luZS0+bmFtZSwgcnEtPmZlbmNlLmNvbnRleHQsCisJCQkJ
CSAgICAgICBycS0+ZmVuY2Uuc2Vxbm8sIHJxLT5jb250ZXh0LT5ndWNfaWQsIGVycik7CiAJCQl9
CiAKK3NraXA6CisJCQlpZiAocnEpCisJCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisKIAkJCWlm
IChpOTE1X3Jlc2V0X2NvdW50KGdsb2JhbCkgIT0gcmVzZXRfY291bnQpIHsKIAkJCQlwcl9lcnIo
IkZ1bGwgR1BVIHJlc2V0IHJlY29yZGVkISAoZW5naW5lIHJlc2V0IGV4cGVjdGVkKVxuIik7CiAJ
CQkJZXJyID0gLUVJTlZBTDsKLQkJCQlicmVhazsKKwkJCQlnb3RvIHJlc3RvcmU7CiAJCQl9CiAK
LQkJCWlmIChpOTE1X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIGVuZ2luZSkgIT0KLQkJCSAg
ICArK3Jlc2V0X2VuZ2luZV9jb3VudCkgewotCQkJCXByX2VycigiJXMgZW5naW5lIHJlc2V0IG5v
dCByZWNvcmRlZCFcbiIsCi0JCQkJICAgICAgIGVuZ2luZS0+bmFtZSk7Ci0JCQkJZXJyID0gLUVJ
TlZBTDsKLQkJCQlicmVhazsKKwkJCS8qIEd1QyBiYXNlZCByZXNldHMgYXJlIG5vdCBsb2dnZWQg
cGVyIGVuZ2luZSAqLworCQkJaWYgKCF1c2luZ19ndWMpIHsKKwkJCQlpZiAoaTkxNV9yZXNldF9l
bmdpbmVfY291bnQoZ2xvYmFsLCBlbmdpbmUpICE9CisJCQkJICAgICsrcmVzZXRfZW5naW5lX2Nv
dW50KSB7CisJCQkJCXByX2VycigiJXMgZW5naW5lIHJlc2V0IG5vdCByZWNvcmRlZCFcbiIsCisJ
CQkJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQkJCQllcnIgPSAtRUlOVkFMOworCQkJCQlnb3Rv
IHJlc3RvcmU7CisJCQkJfQogCQkJfQogCiAJCQljb3VudCsrOworCityZXN0b3JlOgorCQkJZXJy
MiA9IGludGVsX3NlbGZ0ZXN0X3Jlc3RvcmVfcG9saWN5KGVuZ2luZSwgJnNhdmVkKTsKKwkJCWlm
IChlcnIyKQorCQkJCXByX2VycigiWyVzXSBSZXN0b3JlIHBvbGljeSBmYWlsZWQ6ICVkIVxuIiwg
ZW5naW5lLT5uYW1lLCBlcnIpOworCQkJaWYgKGVyciA9PSAwKQorCQkJCWVyciA9IGVycjI7CisJ
CQlpZiAoZXJyKQorCQkJCWJyZWFrOwogCQl9IHdoaWxlICh0aW1lX2JlZm9yZShqaWZmaWVzLCBl
bmRfdGltZSkpOwogCQljbGVhcl9iaXQoSTkxNV9SRVNFVF9FTkdJTkUgKyBpZCwgJmd0LT5yZXNl
dC5mbGFncyk7CiAJCXN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlKGVuZ2luZSk7CkBAIC03NjUs
MTIgKzgzMywxNiBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZShzdHJ1Y3QgaW50ZWxf
Z3QgKmd0LCBib29sIGFjdGl2ZSkKIAkJCWJyZWFrOwogCiAJCWVyciA9IGlndF9mbHVzaF90ZXN0
KGd0LT5pOTE1KTsKLQkJaWYgKGVycikKKwkJaWYgKGVycikgeworCQkJcHJfZXJyKCJbJXNdIEZs
dXNoIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCQlicmVhazsKKwkJfQog
CX0KIAotCWlmIChpbnRlbF9ndF9pc193ZWRnZWQoZ3QpKQorCWlmIChpbnRlbF9ndF9pc193ZWRn
ZWQoZ3QpKSB7CisJCXByX2VycigiR1QgaXMgd2VkZ2VkIVxuIik7CiAJCWVyciA9IC1FSU87CisJ
fQogCiAJaWYgKGFjdGl2ZSkKIAkJaGFuZ19maW5pKCZoKTsKQEAgLTgwNyw3ICs4NzksNyBAQCBz
dGF0aWMgaW50IGFjdGl2ZV9yZXF1ZXN0X3B1dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAlp
ZiAoIXJxKQogCQlyZXR1cm4gMDsKIAotCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgNSAq
IEhaKSA8IDApIHsKKwlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocnEsIDAsIDEwICogSFopIDwgMCkg
ewogCQlHRU1fVFJBQ0UoIiVzIHRpbWVkIG91dCB3YWl0aW5nIGZvciBjb21wbGV0aW9uIG9mIGZl
bmNlICVsbHg6JWxsZFxuIiwKIAkJCSAgcnEtPmVuZ2luZS0+bmFtZSwKIAkJCSAgcnEtPmZlbmNl
LmNvbnRleHQsCkBAIC04MzcsNiArOTA5LDcgQEAgc3RhdGljIGludCBhY3RpdmVfZW5naW5lKHZv
aWQgKmRhdGEpCiAJCWNlW2NvdW50XSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7CiAJ
CWlmIChJU19FUlIoY2VbY291bnRdKSkgewogCQkJZXJyID0gUFRSX0VSUihjZVtjb3VudF0pOwor
CQkJcHJfZXJyKCJbJXNdIENyZWF0ZSBjb250ZXh0ICMlbGQgZmFpbGVkOiAlZCFcbiIsIGVuZ2lu
ZS0+bmFtZSwgY291bnQsIGVycik7CiAJCQl3aGlsZSAoLS1jb3VudCkKIAkJCQlpbnRlbF9jb250
ZXh0X3B1dChjZVtjb3VudF0pOwogCQkJcmV0dXJuIGVycjsKQEAgLTg1Miw2ICs5MjUsNyBAQCBz
dGF0aWMgaW50IGFjdGl2ZV9lbmdpbmUodm9pZCAqZGF0YSkKIAkJbmV3ID0gaW50ZWxfY29udGV4
dF9jcmVhdGVfcmVxdWVzdChjZVtpZHhdKTsKIAkJaWYgKElTX0VSUihuZXcpKSB7CiAJCQllcnIg
PSBQVFJfRVJSKG5ldyk7CisJCQlwcl9lcnIoIlslc10gQ3JlYXRlIHJlcXVlc3QgIyVkIGZhaWxl
ZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGlkeCwgZXJyKTsKIAkJCWJyZWFrOwogCQl9CiAKQEAg
LTg2Nyw4ICs5NDEsMTAgQEAgc3RhdGljIGludCBhY3RpdmVfZW5naW5lKHZvaWQgKmRhdGEpCiAJ
CX0KIAogCQllcnIgPSBhY3RpdmVfcmVxdWVzdF9wdXQob2xkKTsKLQkJaWYgKGVycikKKwkJaWYg
KGVycikgeworCQkJcHJfZXJyKCJbJXNdIFJlcXVlc3QgcHV0IGZhaWxlZDogJWQhXG4iLCBlbmdp
bmUtPm5hbWUsIGVycik7CiAJCQlicmVhazsKKwkJfQogCiAJCWNvbmRfcmVzY2hlZCgpOwogCX0K
QEAgLTg3Niw2ICs5NTIsOSBAQCBzdGF0aWMgaW50IGFjdGl2ZV9lbmdpbmUodm9pZCAqZGF0YSkK
IAlmb3IgKGNvdW50ID0gMDsgY291bnQgPCBBUlJBWV9TSVpFKHJxKTsgY291bnQrKykgewogCQlp
bnQgZXJyX18gPSBhY3RpdmVfcmVxdWVzdF9wdXQocnFbY291bnRdKTsKIAorCQlpZiAoZXJyKQor
CQkJcHJfZXJyKCJbJXNdIFJlcXVlc3QgcHV0ICMlbGQgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+
bmFtZSwgY291bnQsIGVycik7CisKIAkJLyogS2VlcCB0aGUgZmlyc3QgZXJyb3IgKi8KIAkJaWYg
KCFlcnIpCiAJCQllcnIgPSBlcnJfXzsKQEAgLTkxNiwxMCArOTk1LDEzIEBAIHN0YXRpYyBpbnQg
X19pZ3RfcmVzZXRfZW5naW5lcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQlzdHJ1Y3QgYWN0aXZl
X2VuZ2luZSB0aHJlYWRzW0k5MTVfTlVNX0VOR0lORVNdID0ge307CiAJCXVuc2lnbmVkIGxvbmcg
ZGV2aWNlID0gaTkxNV9yZXNldF9jb3VudChnbG9iYWwpOwogCQl1bnNpZ25lZCBsb25nIGNvdW50
ID0gMCwgcmVwb3J0ZWQ7CisJCWJvb2wgdXNpbmdfZ3VjID0gaW50ZWxfZW5naW5lX3VzZXNfZ3Vj
KGVuZ2luZSk7CiAJCUlHVF9USU1FT1VUKGVuZF90aW1lKTsKIAotCQlpZiAoZmxhZ3MgJiBURVNU
X0FDVElWRSAmJgotCQkgICAgIWludGVsX2VuZ2luZV9jYW5fc3RvcmVfZHdvcmQoZW5naW5lKSkK
KwkJaWYgKGZsYWdzICYgVEVTVF9BQ1RJVkUpIHsKKwkJCWlmICghaW50ZWxfZW5naW5lX2Nhbl9z
dG9yZV9kd29yZChlbmdpbmUpKQorCQkJCWNvbnRpbnVlOworCQl9IGVsc2UgaWYgKHVzaW5nX2d1
YykKIAkJCWNvbnRpbnVlOwogCiAJCWlmICghd2FpdF9mb3JfaWRsZShlbmdpbmUpKSB7CkBAIC05
NDksNiArMTAzMSw3IEBAIHN0YXRpYyBpbnQgX19pZ3RfcmVzZXRfZW5naW5lcyhzdHJ1Y3QgaW50
ZWxfZ3QgKmd0LAogCQkJCQkgICJpZ3QvJXMiLCBvdGhlci0+bmFtZSk7CiAJCQlpZiAoSVNfRVJS
KHRzaykpIHsKIAkJCQllcnIgPSBQVFJfRVJSKHRzayk7CisJCQkJcHJfZXJyKCJbJXNdIFRocmVh
ZCBzcGF3biBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJCWdvdG8gdW53
aW5kOwogCQkJfQogCkBAIC05NTgsMTYgKzEwNDEsMjcgQEAgc3RhdGljIGludCBfX2lndF9yZXNl
dF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAKIAkJeWllbGQoKTsgLyogc3RhcnQgYWxs
IHRocmVhZHMgYmVmb3JlIHdlIGJlZ2luICovCiAKLQkJc3RfZW5naW5lX2hlYXJ0YmVhdF9kaXNh
YmxlKGVuZ2luZSk7CisJCXN0X2VuZ2luZV9oZWFydGJlYXRfZGlzYWJsZV9ub19wbShlbmdpbmUp
OwogCQlzZXRfYml0KEk5MTVfUkVTRVRfRU5HSU5FICsgaWQsICZndC0+cmVzZXQuZmxhZ3MpOwog
CQlkbyB7CiAJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IE5VTEw7CisJCQlzdHJ1Y3QgaW50
ZWxfc2VsZnRlc3Rfc2F2ZWRfcG9saWN5IHNhdmVkOworCQkJaW50IGVycjI7CisKKwkJCWVyciA9
IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9wb2xpY3koZW5naW5lLCAmc2F2ZWQsCisJCQkJCQkJICBT
RUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX0ZBU1RfUkVTRVQpOworCQkJaWYgKGVycikgeworCQkJ
CXByX2VycigiWyVzXSBNb2RpZnkgcG9saWN5IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUs
IGVycik7CisJCQkJYnJlYWs7CisJCQl9CiAKIAkJCWlmIChmbGFncyAmIFRFU1RfQUNUSVZFKSB7
CiAJCQkJcnEgPSBoYW5nX2NyZWF0ZV9yZXF1ZXN0KCZoLCBlbmdpbmUpOwogCQkJCWlmIChJU19F
UlIocnEpKSB7CiAJCQkJCWVyciA9IFBUUl9FUlIocnEpOwotCQkJCQlicmVhazsKKwkJCQkJcHJf
ZXJyKCJbJXNdIENyZWF0ZSBoYW5nIHJlcXVlc3QgZmFpbGVkOiAlZCFcbiIsCisJCQkJCSAgICAg
ICBlbmdpbmUtPm5hbWUsIGVycik7CisJCQkJCWdvdG8gcmVzdG9yZTsKIAkJCQl9CiAKIAkJCQlp
OTE1X3JlcXVlc3RfZ2V0KHJxKTsKQEAgLTk4MywzMiArMTA3Nyw0NCBAQCBzdGF0aWMgaW50IF9f
aWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0IGludGVsX2d0ICpndCwKIAogCQkJCQlpOTE1X3JlcXVl
c3RfcHV0KHJxKTsKIAkJCQkJZXJyID0gLUVJTzsKLQkJCQkJYnJlYWs7CisJCQkJCWdvdG8gcmVz
dG9yZTsKIAkJCQl9CisJCQl9IGVsc2UgeworCQkJCWludGVsX2VuZ2luZV9wbV9nZXQoZW5naW5l
KTsKIAkJCX0KIAotCQkJZXJyID0gaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgTlVMTCk7Ci0J
CQlpZiAoZXJyKSB7Ci0JCQkJcHJfZXJyKCJpOTE1X3Jlc2V0X2VuZ2luZSglczolcyk6IGZhaWxl
ZCwgZXJyPSVkXG4iLAotCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIHRlc3RfbmFtZSwgZXJyKTsK
LQkJCQlicmVhazsKKwkJCWlmICghdXNpbmdfZ3VjKSB7CisJCQkJZXJyID0gaW50ZWxfZW5naW5l
X3Jlc2V0KGVuZ2luZSwgTlVMTCk7CisJCQkJaWYgKGVycikgeworCQkJCQlwcl9lcnIoImk5MTVf
cmVzZXRfZW5naW5lKCVzOiVzKTogZmFpbGVkLCBlcnI9JWRcbiIsCisJCQkJCSAgICAgICBlbmdp
bmUtPm5hbWUsIHRlc3RfbmFtZSwgZXJyKTsKKwkJCQkJZ290byByZXN0b3JlOworCQkJCX0KKwkJ
CX0KKworCQkJaWYgKHJxKSB7CisJCQkJLyogRW5zdXJlIHRoZSByZXNldCBoYXBwZW5zIGFuZCBr
aWxscyB0aGUgZW5naW5lICovCisJCQkJZXJyID0gaW50ZWxfc2VsZnRlc3Rfd2FpdF9mb3JfcnEo
cnEpOworCQkJCWlmIChlcnIpCisJCQkJCXByX2VycigiWyVzXSBXYWl0IGZvciByZXF1ZXN0ICVs
bGQ6JWxsZCBbMHglMDRYXSBmYWlsZWQ6ICVkIVxuIiwKKwkJCQkJICAgICAgIGVuZ2luZS0+bmFt
ZSwgcnEtPmZlbmNlLmNvbnRleHQsCisJCQkJCSAgICAgICBycS0+ZmVuY2Uuc2Vxbm8sIHJxLT5j
b250ZXh0LT5ndWNfaWQsIGVycik7CiAJCQl9CiAKIAkJCWNvdW50Kys7CiAKIAkJCWlmIChycSkg
ewogCQkJCWlmIChycS0+ZmVuY2UuZXJyb3IgIT0gLUVJTykgewotCQkJCQlwcl9lcnIoImk5MTVf
cmVzZXRfZW5naW5lKCVzOiVzKToiCi0JCQkJCSAgICAgICAiIGZhaWxlZCB0byByZXNldCByZXF1
ZXN0ICVsbHg6JWxsZFxuIiwKKwkJCQkJcHJfZXJyKCJpOTE1X3Jlc2V0X2VuZ2luZSglczolcyk6
IGZhaWxlZCB0byByZXNldCByZXF1ZXN0ICVsbGQ6JWxsZCBbMHglMDRYXVxuIiwKIAkJCQkJICAg
ICAgIGVuZ2luZS0+bmFtZSwgdGVzdF9uYW1lLAogCQkJCQkgICAgICAgcnEtPmZlbmNlLmNvbnRl
eHQsCi0JCQkJCSAgICAgICBycS0+ZmVuY2Uuc2Vxbm8pOworCQkJCQkgICAgICAgcnEtPmZlbmNl
LnNlcW5vLCBycS0+Y29udGV4dC0+Z3VjX2lkKTsKIAkJCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7
CiAKIAkJCQkJR0VNX1RSQUNFX0RVTVAoKTsKIAkJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7
CiAJCQkJCWVyciA9IC1FSU87Ci0JCQkJCWJyZWFrOworCQkJCQlnb3RvIHJlc3RvcmU7CiAJCQkJ
fQogCiAJCQkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDUpIDwgMCkgewpAQCAt
MTAyNywxMiArMTEzMywxNSBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0
IGludGVsX2d0ICpndCwKIAkJCQkJR0VNX1RSQUNFX0RVTVAoKTsKIAkJCQkJaW50ZWxfZ3Rfc2V0
X3dlZGdlZChndCk7CiAJCQkJCWVyciA9IC1FSU87Ci0JCQkJCWJyZWFrOworCQkJCQlnb3RvIHJl
c3RvcmU7CiAJCQkJfQogCiAJCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiAJCQl9CiAKKwkJCWlm
ICghKGZsYWdzICYgVEVTVF9BQ1RJVkUpKQorCQkJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5l
KTsKKwogCQkJaWYgKCEoZmxhZ3MgJiBURVNUX1NFTEYpICYmICF3YWl0X2Zvcl9pZGxlKGVuZ2lu
ZSkpIHsKIAkJCQlzdHJ1Y3QgZHJtX3ByaW50ZXIgcCA9CiAJCQkJCWRybV9pbmZvX3ByaW50ZXIo
Z3QtPmk5MTUtPmRybS5kZXYpOwpAQCAtMTA0NCwyMiArMTE1MywzNCBAQCBzdGF0aWMgaW50IF9f
aWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0IGludGVsX2d0ICpndCwKIAkJCQkJCSAgIiVzXG4iLCBl
bmdpbmUtPm5hbWUpOwogCiAJCQkJZXJyID0gLUVJTzsKLQkJCQlicmVhazsKKwkJCQlnb3RvIHJl
c3RvcmU7CiAJCQl9CisKK3Jlc3RvcmU6CisJCQllcnIyID0gaW50ZWxfc2VsZnRlc3RfcmVzdG9y
ZV9wb2xpY3koZW5naW5lLCAmc2F2ZWQpOworCQkJaWYgKGVycjIpCisJCQkJcHJfZXJyKCJbJXNd
IFJlc3RvcmUgcG9saWN5IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycjIpOworCQkJ
aWYgKGVyciA9PSAwKQorCQkJCWVyciA9IGVycjI7CisJCQlpZiAoZXJyKQorCQkJCWJyZWFrOwog
CQl9IHdoaWxlICh0aW1lX2JlZm9yZShqaWZmaWVzLCBlbmRfdGltZSkpOwogCQljbGVhcl9iaXQo
STkxNV9SRVNFVF9FTkdJTkUgKyBpZCwgJmd0LT5yZXNldC5mbGFncyk7Ci0JCXN0X2VuZ2luZV9o
ZWFydGJlYXRfZW5hYmxlKGVuZ2luZSk7CisJCXN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlX25v
X3BtKGVuZ2luZSk7CiAKIAkJcHJfaW5mbygiaTkxNV9yZXNldF9lbmdpbmUoJXM6JXMpOiAlbHUg
cmVzZXRzXG4iLAogCQkJZW5naW5lLT5uYW1lLCB0ZXN0X25hbWUsIGNvdW50KTsKIAotCQlyZXBv
cnRlZCA9IGk5MTVfcmVzZXRfZW5naW5lX2NvdW50KGdsb2JhbCwgZW5naW5lKTsKLQkJcmVwb3J0
ZWQgLT0gdGhyZWFkc1tlbmdpbmUtPmlkXS5yZXNldHM7Ci0JCWlmIChyZXBvcnRlZCAhPSBjb3Vu
dCkgewotCQkJcHJfZXJyKCJpOTE1X3Jlc2V0X2VuZ2luZSglczolcyk6IHJlc2V0ICVsdSB0aW1l
cywgYnV0IHJlcG9ydGVkICVsdVxuIiwKLQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIHRlc3RfbmFt
ZSwgY291bnQsIHJlcG9ydGVkKTsKLQkJCWlmICghZXJyKQotCQkJCWVyciA9IC1FSU5WQUw7CisJ
CS8qIEd1QyBiYXNlZCByZXNldHMgYXJlIG5vdCBsb2dnZWQgcGVyIGVuZ2luZSAqLworCQlpZiAo
IXVzaW5nX2d1YykgeworCQkJcmVwb3J0ZWQgPSBpOTE1X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9i
YWwsIGVuZ2luZSk7CisJCQlyZXBvcnRlZCAtPSB0aHJlYWRzW2VuZ2luZS0+aWRdLnJlc2V0czsK
KwkJCWlmIChyZXBvcnRlZCAhPSBjb3VudCkgeworCQkJCXByX2VycigiaTkxNV9yZXNldF9lbmdp
bmUoJXM6JXMpOiByZXNldCAlbHUgdGltZXMsIGJ1dCByZXBvcnRlZCAlbHVcbiIsCisJCQkJICAg
ICAgIGVuZ2luZS0+bmFtZSwgdGVzdF9uYW1lLCBjb3VudCwgcmVwb3J0ZWQpOworCQkJCWlmICgh
ZXJyKQorCQkJCQllcnIgPSAtRUlOVkFMOworCQkJfQogCQl9CiAKIHVud2luZDoKQEAgLTEwNzgs
MTUgKzExOTksMTggQEAgc3RhdGljIGludCBfX2lndF9yZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRl
bF9ndCAqZ3QsCiAJCQl9CiAJCQlwdXRfdGFza19zdHJ1Y3QodGhyZWFkc1t0bXBdLnRhc2spOwog
Ci0JCQlpZiAob3RoZXItPnVhYmlfY2xhc3MgIT0gZW5naW5lLT51YWJpX2NsYXNzICYmCi0JCQkg
ICAgdGhyZWFkc1t0bXBdLnJlc2V0cyAhPQotCQkJICAgIGk5MTVfcmVzZXRfZW5naW5lX2NvdW50
KGdsb2JhbCwgb3RoZXIpKSB7Ci0JCQkJcHJfZXJyKCJJbm5vY2VudCBlbmdpbmUgJXMgd2FzIHJl
c2V0IChjb3VudD0lbGQpXG4iLAotCQkJCSAgICAgICBvdGhlci0+bmFtZSwKLQkJCQkgICAgICAg
aTkxNV9yZXNldF9lbmdpbmVfY291bnQoZ2xvYmFsLCBvdGhlcikgLQotCQkJCSAgICAgICB0aHJl
YWRzW3RtcF0ucmVzZXRzKTsKLQkJCQlpZiAoIWVycikKLQkJCQkJZXJyID0gLUVJTlZBTDsKKwkJ
CS8qIEd1QyBiYXNlZCByZXNldHMgYXJlIG5vdCBsb2dnZWQgcGVyIGVuZ2luZSAqLworCQkJaWYg
KCF1c2luZ19ndWMpIHsKKwkJCQlpZiAob3RoZXItPnVhYmlfY2xhc3MgIT0gZW5naW5lLT51YWJp
X2NsYXNzICYmCisJCQkJICAgIHRocmVhZHNbdG1wXS5yZXNldHMgIT0KKwkJCQkgICAgaTkxNV9y
ZXNldF9lbmdpbmVfY291bnQoZ2xvYmFsLCBvdGhlcikpIHsKKwkJCQkJcHJfZXJyKCJJbm5vY2Vu
dCBlbmdpbmUgJXMgd2FzIHJlc2V0IChjb3VudD0lbGQpXG4iLAorCQkJCQkgICAgICAgb3RoZXIt
Pm5hbWUsCisJCQkJCSAgICAgICBpOTE1X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIG90aGVy
KSAtCisJCQkJCSAgICAgICB0aHJlYWRzW3RtcF0ucmVzZXRzKTsKKwkJCQkJaWYgKCFlcnIpCisJ
CQkJCQllcnIgPSAtRUlOVkFMOworCQkJCX0KIAkJCX0KIAkJfQogCkBAIC0xMTAxLDggKzEyMjUs
MTAgQEAgc3RhdGljIGludCBfX2lndF9yZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3Qs
CiAJCQlicmVhazsKIAogCQllcnIgPSBpZ3RfZmx1c2hfdGVzdChndC0+aTkxNSk7Ci0JCWlmIChl
cnIpCisJCWlmIChlcnIpIHsKKwkJCXByX2VycigiWyVzXSBGbHVzaCBmYWlsZWQ6ICVkIVxuIiwg
ZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJYnJlYWs7CisJCX0KIAl9CiAKIAlpZiAoaW50ZWxfZ3Rf
aXNfd2VkZ2VkKGd0KSkKQEAgLTExODAsMTIgKzEzMDYsMTUgQEAgc3RhdGljIGludCBpZ3RfcmVz
ZXRfd2FpdCh2b2lkICphcmcpCiAJaWd0X2dsb2JhbF9yZXNldF9sb2NrKGd0KTsKIAogCWVyciA9
IGhhbmdfaW5pdCgmaCwgZ3QpOwotCWlmIChlcnIpCisJaWYgKGVycikgeworCQlwcl9lcnIoIlsl
c10gSGFuZyBpbml0IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCWdvdG8g
dW5sb2NrOworCX0KIAogCXJxID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsKIAlp
ZiAoSVNfRVJSKHJxKSkgewogCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJcHJfZXJyKCJbJXNdIENy
ZWF0ZSBoYW5nIHJlcXVlc3QgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJ
Z290byBmaW5pOwogCX0KIApAQCAtMTMxMCwxMiArMTQzOSwxNSBAQCBzdGF0aWMgaW50IF9faWd0
X3Jlc2V0X2V2aWN0X3ZtYShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCS8qIENoZWNrIHRoYXQgd2Ug
Y2FuIHJlY292ZXIgYW4gdW5iaW5kIHN0dWNrIG9uIGEgaGFuZ2luZyByZXF1ZXN0ICovCiAKIAll
cnIgPSBoYW5nX2luaXQoJmgsIGd0KTsKLQlpZiAoZXJyKQorCWlmIChlcnIpIHsKKwkJcHJfZXJy
KCJbJXNdIEhhbmcgaW5pdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQly
ZXR1cm4gZXJyOworCX0KIAogCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwo
Z3QtPmk5MTUsIFNaXzFNKTsKIAlpZiAoSVNfRVJSKG9iaikpIHsKIAkJZXJyID0gUFRSX0VSUihv
YmopOworCQlwcl9lcnIoIlslc10gQ3JlYXRlIG9iamVjdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5l
LT5uYW1lLCBlcnIpOwogCQlnb3RvIGZpbmk7CiAJfQogCkBAIC0xMzMwLDEyICsxNDYyLDE0IEBA
IHN0YXRpYyBpbnQgX19pZ3RfcmVzZXRfZXZpY3Rfdm1hKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJ
YXJnLnZtYSA9IGk5MTVfdm1hX2luc3RhbmNlKG9iaiwgdm0sIE5VTEwpOwogCWlmIChJU19FUlIo
YXJnLnZtYSkpIHsKIAkJZXJyID0gUFRSX0VSUihhcmcudm1hKTsKKwkJcHJfZXJyKCJbJXNdIFZN
QSBpbnN0YW5jZSBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlnb3RvIG91
dF9vYmo7CiAJfQogCiAJcnEgPSBoYW5nX2NyZWF0ZV9yZXF1ZXN0KCZoLCBlbmdpbmUpOwogCWlm
IChJU19FUlIocnEpKSB7CiAJCWVyciA9IFBUUl9FUlIocnEpOworCQlwcl9lcnIoIlslc10gQ3Jl
YXRlIGhhbmcgcmVxdWVzdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQln
b3RvIG91dF9vYmo7CiAJfQogCkBAIC0xMzQ3LDYgKzE0ODEsNyBAQCBzdGF0aWMgaW50IF9faWd0
X3Jlc2V0X2V2aWN0X3ZtYShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCWVyciA9IGk5MTVfdm1hX3Bp
bihhcmcudm1hLCAwLCAwLCBwaW5fZmxhZ3MpOwogCWlmIChlcnIpIHsKIAkJaTkxNV9yZXF1ZXN0
X2FkZChycSk7CisJCXByX2VycigiWyVzXSBWTUEgcGluIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUt
Pm5hbWUsIGVycik7CiAJCWdvdG8gb3V0X29iajsKIAl9CiAKQEAgLTEzNjMsOCArMTQ5OCwxNCBA
QCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2V2aWN0X3ZtYShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAog
CWk5MTVfdm1hX2xvY2soYXJnLnZtYSk7CiAJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X29iamVj
dChycSwgYXJnLnZtYS0+b2JqLAogCQkJCQlmbGFncyAmIEVYRUNfT0JKRUNUX1dSSVRFKTsKLQlp
ZiAoZXJyID09IDApCisJaWYgKGVyciA9PSAwKSB7CiAJCWVyciA9IGk5MTVfdm1hX21vdmVfdG9f
YWN0aXZlKGFyZy52bWEsIHJxLCBmbGFncyk7CisJCWlmIChlcnIpCisJCQlwcl9lcnIoIlslc10g
TW92ZSB0byBhY3RpdmUgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKKwl9IGVs
c2UgeworCQlwcl9lcnIoIlslc10gUmVxdWVzdCBhd2FpdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5l
LT5uYW1lLCBlcnIpOworCX0KKwogCWk5MTVfdm1hX3VubG9jayhhcmcudm1hKTsKIAogCWlmIChm
bGFncyAmIEVYRUNfT0JKRUNUX05FRURTX0ZFTkNFKQpAQCAtMTM5Miw2ICsxNTMzLDcgQEAgc3Rh
dGljIGludCBfX2lndF9yZXNldF9ldmljdF92bWEoc3RydWN0IGludGVsX2d0ICpndCwKIAl0c2sg
PSBrdGhyZWFkX3J1bihmbiwgJmFyZywgImlndC9ldmljdF92bWEiKTsKIAlpZiAoSVNfRVJSKHRz
aykpIHsKIAkJZXJyID0gUFRSX0VSUih0c2spOworCQlwcl9lcnIoIlslc10gVGhyZWFkIHNwYXdu
IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCXRzayA9IE5VTEw7CiAJCWdv
dG8gb3V0X3Jlc2V0OwogCX0KQEAgLTE1MDgsMTcgKzE2NTAsMjkgQEAgc3RhdGljIGludCBpZ3Rf
cmVzZXRfcXVldWUodm9pZCAqYXJnKQogCQlnb3RvIHVubG9jazsKIAogCWZvcl9lYWNoX2VuZ2lu
ZShlbmdpbmUsIGd0LCBpZCkgeworCQlzdHJ1Y3QgaW50ZWxfc2VsZnRlc3Rfc2F2ZWRfcG9saWN5
IHNhdmVkOwogCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpwcmV2OwogCQlJR1RfVElNRU9VVChlbmRf
dGltZSk7CiAJCXVuc2lnbmVkIGludCBjb3VudDsKKwkJYm9vbCB1c2luZ19ndWMgPSBpbnRlbF9l
bmdpbmVfdXNlc19ndWMoZW5naW5lKTsKIAogCQlpZiAoIWludGVsX2VuZ2luZV9jYW5fc3RvcmVf
ZHdvcmQoZW5naW5lKSkKIAkJCWNvbnRpbnVlOwogCisJCWlmICh1c2luZ19ndWMpIHsKKwkJCWVy
ciA9IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9wb2xpY3koZW5naW5lLCAmc2F2ZWQsCisJCQkJCQkJ
ICBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX05PX0hBTkdDSEVDSyk7CisJCQlpZiAoZXJyKSB7
CisJCQkJcHJfZXJyKCJbJXNdIE1vZGlmeSBwb2xpY3kgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+
bmFtZSwgZXJyKTsKKwkJCQlnb3RvIGZpbmk7CisJCQl9CisJCX0KKwogCQlwcmV2ID0gaGFuZ19j
cmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsKIAkJaWYgKElTX0VSUihwcmV2KSkgewogCQkJZXJy
ID0gUFRSX0VSUihwcmV2KTsKLQkJCWdvdG8gZmluaTsKKwkJCXByX2VycigiWyVzXSBDcmVhdGUg
J3ByZXYnIGhhbmcgcmVxdWVzdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwor
CQkJZ290byByZXN0b3JlOwogCQl9CiAKIAkJaTkxNV9yZXF1ZXN0X2dldChwcmV2KTsKQEAgLTE1
MzIsNyArMTY4Niw4IEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X3F1ZXVlKHZvaWQgKmFyZykKIAkJ
CXJxID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsKIAkJCWlmIChJU19FUlIocnEp
KSB7CiAJCQkJZXJyID0gUFRSX0VSUihycSk7Ci0JCQkJZ290byBmaW5pOworCQkJCXByX2Vycigi
WyVzXSBDcmVhdGUgaGFuZyByZXF1ZXN0IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVy
cik7CisJCQkJZ290byByZXN0b3JlOwogCQkJfQogCiAJCQlpOTE1X3JlcXVlc3RfZ2V0KHJxKTsK
QEAgLTE1NTcsNyArMTcxMiw3IEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X3F1ZXVlKHZvaWQgKmFy
ZykKIAogCQkJCUdFTV9UUkFDRV9EVU1QKCk7CiAJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7
Ci0JCQkJZ290byBmaW5pOworCQkJCWdvdG8gcmVzdG9yZTsKIAkJCX0KIAogCQkJaWYgKCF3YWl0
X3VudGlsX3J1bm5pbmcoJmgsIHByZXYpKSB7CkBAIC0xNTc1LDcgKzE3MzAsNyBAQCBzdGF0aWMg
aW50IGlndF9yZXNldF9xdWV1ZSh2b2lkICphcmcpCiAJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChn
dCk7CiAKIAkJCQllcnIgPSAtRUlPOwotCQkJCWdvdG8gZmluaTsKKwkJCQlnb3RvIHJlc3RvcmU7
CiAJCQl9CiAKIAkJCXJlc2V0X2NvdW50ID0gZmFrZV9oYW5nY2hlY2soZ3QsIEJJVChpZCkpOwpA
QCAtMTU4Niw3ICsxNzQxLDcgQEAgc3RhdGljIGludCBpZ3RfcmVzZXRfcXVldWUodm9pZCAqYXJn
KQogCQkJCWk5MTVfcmVxdWVzdF9wdXQocnEpOwogCQkJCWk5MTVfcmVxdWVzdF9wdXQocHJldik7
CiAJCQkJZXJyID0gLUVJTlZBTDsKLQkJCQlnb3RvIGZpbmk7CisJCQkJZ290byByZXN0b3JlOwog
CQkJfQogCiAJCQlpZiAocnEtPmZlbmNlLmVycm9yKSB7CkBAIC0xNTk1LDcgKzE3NTAsNyBAQCBz
dGF0aWMgaW50IGlndF9yZXNldF9xdWV1ZSh2b2lkICphcmcpCiAJCQkJaTkxNV9yZXF1ZXN0X3B1
dChycSk7CiAJCQkJaTkxNV9yZXF1ZXN0X3B1dChwcmV2KTsKIAkJCQllcnIgPSAtRUlOVkFMOwot
CQkJCWdvdG8gZmluaTsKKwkJCQlnb3RvIHJlc3RvcmU7CiAJCQl9CiAKIAkJCWlmIChpOTE1X3Jl
c2V0X2NvdW50KGdsb2JhbCkgPT0gcmVzZXRfY291bnQpIHsKQEAgLTE2MDMsNyArMTc1OCw3IEBA
IHN0YXRpYyBpbnQgaWd0X3Jlc2V0X3F1ZXVlKHZvaWQgKmFyZykKIAkJCQlpOTE1X3JlcXVlc3Rf
cHV0KHJxKTsKIAkJCQlpOTE1X3JlcXVlc3RfcHV0KHByZXYpOwogCQkJCWVyciA9IC1FSU5WQUw7
Ci0JCQkJZ290byBmaW5pOworCQkJCWdvdG8gcmVzdG9yZTsKIAkJCX0KIAogCQkJaTkxNV9yZXF1
ZXN0X3B1dChwcmV2KTsKQEAgLTE2MTgsOSArMTc3MywyNCBAQCBzdGF0aWMgaW50IGlndF9yZXNl
dF9xdWV1ZSh2b2lkICphcmcpCiAKIAkJaTkxNV9yZXF1ZXN0X3B1dChwcmV2KTsKIAotCQllcnIg
PSBpZ3RfZmx1c2hfdGVzdChndC0+aTkxNSk7CityZXN0b3JlOgorCQlpZiAodXNpbmdfZ3VjKSB7
CisJCQlpbnQgZXJyMiA9IGludGVsX3NlbGZ0ZXN0X3Jlc3RvcmVfcG9saWN5KGVuZ2luZSwgJnNh
dmVkKTsKKworCQkJaWYgKGVycjIpCisJCQkJcHJfZXJyKCIlczolZD4gWyVzXSBSZXN0b3JlIHBv
bGljeSBmYWlsZWQ6ICVkIVxuIiwKKwkJCQkgICAgICAgX19mdW5jX18sIF9fTElORV9fLCBlbmdp
bmUtPm5hbWUsIGVycjIpOworCQkJaWYgKGVyciA9PSAwKQorCQkJCWVyciA9IGVycjI7CisJCX0K
IAkJaWYgKGVycikKKwkJCWdvdG8gZmluaTsKKworCQllcnIgPSBpZ3RfZmx1c2hfdGVzdChndC0+
aTkxNSk7CisJCWlmIChlcnIpIHsKKwkJCXByX2VycigiWyVzXSBGbHVzaCBmYWlsZWQ6ICVkIVxu
IiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJYnJlYWs7CisJCX0KIAl9CiAKIGZpbmk6CkBAIC0x
NjUzLDEyICsxODIzLDE1IEBAIHN0YXRpYyBpbnQgaWd0X2hhbmRsZV9lcnJvcih2b2lkICphcmcp
CiAJCXJldHVybiAwOwogCiAJZXJyID0gaGFuZ19pbml0KCZoLCBndCk7Ci0JaWYgKGVycikKKwlp
ZiAoZXJyKSB7CisJCXByX2VycigiWyVzXSBIYW5nIGluaXQgZmFpbGVkOiAlZCFcbiIsIGVuZ2lu
ZS0+bmFtZSwgZXJyKTsKIAkJcmV0dXJuIGVycjsKKwl9CiAKIAlycSA9IGhhbmdfY3JlYXRlX3Jl
cXVlc3QoJmgsIGVuZ2luZSk7CiAJaWYgKElTX0VSUihycSkpIHsKIAkJZXJyID0gUFRSX0VSUihy
cSk7CisJCXByX2VycigiWyVzXSBDcmVhdGUgaGFuZyByZXF1ZXN0IGZhaWxlZDogJWQhXG4iLCBl
bmdpbmUtPm5hbWUsIGVycik7CiAJCWdvdG8gZXJyX2Zpbmk7CiAJfQogCkBAIC0xNzQzLDEyICsx
OTE2LDE1IEBAIHN0YXRpYyBpbnQgaWd0X2F0b21pY19yZXNldF9lbmdpbmUoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lLAogCQlyZXR1cm4gZXJyOwogCiAJZXJyID0gaGFuZ19pbml0KCZo
LCBlbmdpbmUtPmd0KTsKLQlpZiAoZXJyKQorCWlmIChlcnIpIHsKKwkJcHJfZXJyKCJbJXNdIEhh
bmcgaW5pdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlyZXR1cm4gZXJy
OworCX0KIAogCXJxID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsKIAlpZiAoSVNf
RVJSKHJxKSkgewogCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJcHJfZXJyKCJbJXNdIENyZWF0ZSBo
YW5nIHJlcXVlc3QgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJZ290byBv
dXQ7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9t
b2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9tb2NzLmMKaW5kZXggODc2
M2JiZWNhMGY3Li4xM2QyNWJmMmE5NGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X21vY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVz
dF9tb2NzLmMKQEAgLTEwLDYgKzEwLDcgQEAKICNpbmNsdWRlICJnZW0vc2VsZnRlc3RzL21vY2tf
Y29udGV4dC5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfcmVzZXQuaCIKICNpbmNsdWRlICJz
ZWxmdGVzdHMvaWd0X3NwaW5uZXIuaCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaW50ZWxfc2NoZWR1
bGVyX2hlbHBlcnMuaCIKIAogc3RydWN0IGxpdmVfbW9jcyB7CiAJc3RydWN0IGRybV9pOTE1X21v
Y3NfdGFibGUgdGFibGU7CkBAIC0zMTgsNyArMzE5LDggQEAgc3RhdGljIGludCBsaXZlX21vY3Nf
Y2xlYW4odm9pZCAqYXJnKQogfQogCiBzdGF0aWMgaW50IGFjdGl2ZV9lbmdpbmVfcmVzZXQoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLAotCQkJICAgICAgIGNvbnN0IGNoYXIgKnJlYXNvbikKKwkJ
CSAgICAgICBjb25zdCBjaGFyICpyZWFzb24sCisJCQkgICAgICAgYm9vbCB1c2luZ19ndWMpCiB7
CiAJc3RydWN0IGlndF9zcGlubmVyIHNwaW47CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CkBA
IC0zMzUsOSArMzM3LDEzIEBAIHN0YXRpYyBpbnQgYWN0aXZlX2VuZ2luZV9yZXNldChzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UsCiAJfQogCiAJZXJyID0gcmVxdWVzdF9hZGRfc3BpbihycSwgJnNw
aW4pOwotCWlmIChlcnIgPT0gMCkKKwlpZiAoZXJyID09IDAgJiYgIXVzaW5nX2d1YykKIAkJZXJy
ID0gaW50ZWxfZW5naW5lX3Jlc2V0KGNlLT5lbmdpbmUsIHJlYXNvbik7CiAKKwkvKiBFbnN1cmUg
dGhlIHJlc2V0IGhhcHBlbnMgYW5kIGtpbGxzIHRoZSBlbmdpbmUgKi8KKwlpZiAoZXJyID09IDAp
CisJCWVyciA9IGludGVsX3NlbGZ0ZXN0X3dhaXRfZm9yX3JxKHJxKTsKKwogCWlndF9zcGlubmVy
X2VuZCgmc3Bpbik7CiAJaWd0X3NwaW5uZXJfZmluaSgmc3Bpbik7CiAKQEAgLTM0NSwyMSArMzUx
LDIzIEBAIHN0YXRpYyBpbnQgYWN0aXZlX2VuZ2luZV9yZXNldChzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UsCiB9CiAKIHN0YXRpYyBpbnQgX19saXZlX21vY3NfcmVzZXQoc3RydWN0IGxpdmVfbW9j
cyAqbW9jcywKLQkJCSAgICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorCQkJICAgICBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgdXNpbmdfZ3VjKQogewogCXN0cnVjdCBpbnRlbF9n
dCAqZ3QgPSBjZS0+ZW5naW5lLT5ndDsKIAlpbnQgZXJyOwogCiAJaWYgKGludGVsX2hhc19yZXNl
dF9lbmdpbmUoZ3QpKSB7Ci0JCWVyciA9IGludGVsX2VuZ2luZV9yZXNldChjZS0+ZW5naW5lLCAi
bW9jcyIpOwotCQlpZiAoZXJyKQotCQkJcmV0dXJuIGVycjsKLQotCQllcnIgPSBjaGVja19tb2Nz
X2VuZ2luZShtb2NzLCBjZSk7Ci0JCWlmIChlcnIpCi0JCQlyZXR1cm4gZXJyOworCQlpZiAoIXVz
aW5nX2d1YykgeworCQkJZXJyID0gaW50ZWxfZW5naW5lX3Jlc2V0KGNlLT5lbmdpbmUsICJtb2Nz
Iik7CisJCQlpZiAoZXJyKQorCQkJCXJldHVybiBlcnI7CisKKwkJCWVyciA9IGNoZWNrX21vY3Nf
ZW5naW5lKG1vY3MsIGNlKTsKKwkJCWlmIChlcnIpCisJCQkJcmV0dXJuIGVycjsKKwkJfQogCi0J
CWVyciA9IGFjdGl2ZV9lbmdpbmVfcmVzZXQoY2UsICJtb2NzIik7CisJCWVyciA9IGFjdGl2ZV9l
bmdpbmVfcmVzZXQoY2UsICJtb2NzIiwgdXNpbmdfZ3VjKTsKIAkJaWYgKGVycikKIAkJCXJldHVy
biBlcnI7CiAKQEAgLTM5NSwxOSArNDAzLDMzIEBAIHN0YXRpYyBpbnQgbGl2ZV9tb2NzX3Jlc2V0
KHZvaWQgKmFyZykKIAogCWlndF9nbG9iYWxfcmVzZXRfbG9jayhndCk7CiAJZm9yX2VhY2hfZW5n
aW5lKGVuZ2luZSwgZ3QsIGlkKSB7CisJCWJvb2wgdXNpbmdfZ3VjID0gaW50ZWxfZW5naW5lX3Vz
ZXNfZ3VjKGVuZ2luZSk7CisJCXN0cnVjdCBpbnRlbF9zZWxmdGVzdF9zYXZlZF9wb2xpY3kgc2F2
ZWQ7CiAJCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwkJaW50IGVycjI7CisKKwkJZXJyID0g
aW50ZWxfc2VsZnRlc3RfbW9kaWZ5X3BvbGljeShlbmdpbmUsICZzYXZlZCwKKwkJCQkJCSAgIFNF
TEZURVNUX1NDSEVEVUxFUl9NT0RJRllfRkFTVF9SRVNFVCk7CisJCWlmIChlcnIpCisJCQlicmVh
azsKIAogCQljZSA9IG1vY3NfY29udGV4dF9jcmVhdGUoZW5naW5lKTsKIAkJaWYgKElTX0VSUihj
ZSkpIHsKIAkJCWVyciA9IFBUUl9FUlIoY2UpOwotCQkJYnJlYWs7CisJCQlnb3RvIHJlc3RvcmU7
CiAJCX0KIAogCQlpbnRlbF9lbmdpbmVfcG1fZ2V0KGVuZ2luZSk7Ci0JCWVyciA9IF9fbGl2ZV9t
b2NzX3Jlc2V0KCZtb2NzLCBjZSk7Ci0JCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKIAor
CQllcnIgPSBfX2xpdmVfbW9jc19yZXNldCgmbW9jcywgY2UsIHVzaW5nX2d1Yyk7CisKKwkJaW50
ZWxfZW5naW5lX3BtX3B1dChlbmdpbmUpOwogCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisKK3Jl
c3RvcmU6CisJCWVycjIgPSBpbnRlbF9zZWxmdGVzdF9yZXN0b3JlX3BvbGljeShlbmdpbmUsICZz
YXZlZCk7CisJCWlmIChlcnIgPT0gMCkKKwkJCWVyciA9IGVycjI7CiAJCWlmIChlcnIpCiAJCQli
cmVhazsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF93
b3JrYXJvdW5kcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rfd29ya2Fyb3Vu
ZHMuYwppbmRleCA3ZWJjNGVkYjhlY2YuLjkyNzYyNDdhMzQ2YiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rfd29ya2Fyb3VuZHMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9zZWxmdGVzdF93b3JrYXJvdW5kcy5jCkBAIC0xMiw2ICsxMiw3IEBACiAj
aW5jbHVkZSAic2VsZnRlc3RzL2lndF9mbHVzaF90ZXN0LmgiCiAjaW5jbHVkZSAic2VsZnRlc3Rz
L2lndF9yZXNldC5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3Rfc3Bpbm5lci5oIgorI2luY2x1
ZGUgInNlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oIgogI2luY2x1ZGUgInNlbGZ0
ZXN0cy9tb2NrX2RybS5oIgogCiAjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0cy9pZ3RfZ2VtX3V0aWxz
LmgiCkBAIC0yNjEsMjggKzI2MiwzNCBAQCBzdGF0aWMgaW50IGRvX2VuZ2luZV9yZXNldChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJcmV0dXJuIGludGVsX2VuZ2luZV9yZXNldChl
bmdpbmUsICJsaXZlX3dvcmthcm91bmRzIik7CiB9CiAKK3N0YXRpYyBpbnQgZG9fZ3VjX3Jlc2V0
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwkvKiBDdXJyZW50bHkgYSBuby1v
cCBhcyB0aGUgcmVzZXQgaXMgaGFuZGxlZCBieSBHdUMgKi8KKwlyZXR1cm4gMDsKK30KKwogc3Rh
dGljIGludAogc3dpdGNoX3RvX3NjcmF0Y2hfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCi0JCQkgIHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3BpbikKKwkJCSAgc3RydWN0IGln
dF9zcGlubmVyICpzcGluLAorCQkJICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqcnEpCiB7CiAJc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCWludCBl
cnIgPSAwOwogCiAJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCWlmIChJU19F
UlIoY2UpKQogCQlyZXR1cm4gUFRSX0VSUihjZSk7CiAKLQlycSA9IGlndF9zcGlubmVyX2NyZWF0
ZV9yZXF1ZXN0KHNwaW4sIGNlLCBNSV9OT09QKTsKKwkqcnEgPSBpZ3Rfc3Bpbm5lcl9jcmVhdGVf
cmVxdWVzdChzcGluLCBjZSwgTUlfTk9PUCk7CiAJaW50ZWxfY29udGV4dF9wdXQoY2UpOwogCi0J
aWYgKElTX0VSUihycSkpIHsKKwlpZiAoSVNfRVJSKCpycSkpIHsKIAkJc3BpbiA9IE5VTEw7Ci0J
CWVyciA9IFBUUl9FUlIocnEpOworCQllcnIgPSBQVFJfRVJSKCpycSk7CiAJCWdvdG8gZXJyOwog
CX0KIAotCWVyciA9IHJlcXVlc3RfYWRkX3NwaW4ocnEsIHNwaW4pOworCWVyciA9IHJlcXVlc3Rf
YWRkX3NwaW4oKnJxLCBzcGluKTsKIGVycjoKIAlpZiAoZXJyICYmIHNwaW4pCiAJCWlndF9zcGlu
bmVyX2VuZChzcGluKTsKQEAgLTI5Niw2ICszMDMsNyBAQCBzdGF0aWMgaW50IGNoZWNrX3doaXRl
bGlzdF9hY3Jvc3NfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogewogCXN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgKnRtcDsKIAlzdHJ1Y3QgaWd0X3NwaW5uZXIgc3BpbjsK
KwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKIAlp
bnQgZXJyOwogCkBAIC0zMTYsMTMgKzMyNCwyNCBAQCBzdGF0aWMgaW50IGNoZWNrX3doaXRlbGlz
dF9hY3Jvc3NfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQlnb3RvIG91
dF9zcGluOwogCX0KIAotCWVyciA9IHN3aXRjaF90b19zY3JhdGNoX2NvbnRleHQoZW5naW5lLCAm
c3Bpbik7CisJZXJyID0gc3dpdGNoX3RvX3NjcmF0Y2hfY29udGV4dChlbmdpbmUsICZzcGluLCAm
cnEpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0X3NwaW47CiAKKwkvKiBFbnN1cmUgdGhlIHNwaW5u
ZXIgaGFzbid0IGFib3J0ZWQgKi8KKwlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpIHsK
KwkJcHJfZXJyKCIlcyBzcGlubmVyIGZhaWxlZCB0byBzdGFydFxuIiwgbmFtZSk7CisJCWVyciA9
IC1FVElNRURPVVQ7CisJCWdvdG8gb3V0X3NwaW47CisJfQorCiAJd2l0aF9pbnRlbF9ydW50aW1l
X3BtKGVuZ2luZS0+dW5jb3JlLT5ycG0sIHdha2VyZWYpCiAJCWVyciA9IHJlc2V0KGVuZ2luZSk7
CiAKKwkvKiBFbnN1cmUgdGhlIHJlc2V0IGhhcHBlbnMgYW5kIGtpbGxzIHRoZSBlbmdpbmUgKi8K
KwlpZiAoZXJyID09IDApCisJCWVyciA9IGludGVsX3NlbGZ0ZXN0X3dhaXRfZm9yX3JxKHJxKTsK
KwogCWlndF9zcGlubmVyX2VuZCgmc3Bpbik7CiAKIAlpZiAoZXJyKSB7CkBAIC03ODcsOSArODA2
LDI3IEBAIHN0YXRpYyBpbnQgbGl2ZV9yZXNldF93aGl0ZWxpc3Qodm9pZCAqYXJnKQogCQkJY29u
dGludWU7CiAKIAkJaWYgKGludGVsX2hhc19yZXNldF9lbmdpbmUoZ3QpKSB7Ci0JCQllcnIgPSBj
aGVja193aGl0ZWxpc3RfYWNyb3NzX3Jlc2V0KGVuZ2luZSwKLQkJCQkJCQkgICBkb19lbmdpbmVf
cmVzZXQsCi0JCQkJCQkJICAgImVuZ2luZSIpOworCQkJaWYgKGludGVsX2VuZ2luZV91c2VzX2d1
YyhlbmdpbmUpKSB7CisJCQkJc3RydWN0IGludGVsX3NlbGZ0ZXN0X3NhdmVkX3BvbGljeSBzYXZl
ZDsKKwkJCQlpbnQgZXJyMjsKKworCQkJCWVyciA9IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9wb2xp
Y3koZW5naW5lLCAmc2F2ZWQsCisJCQkJCQkJCSAgIFNFTEZURVNUX1NDSEVEVUxFUl9NT0RJRllf
RkFTVF9SRVNFVCk7CisJCQkJaWYgKGVycikKKwkJCQkJZ290byBvdXQ7CisKKwkJCQllcnIgPSBj
aGVja193aGl0ZWxpc3RfYWNyb3NzX3Jlc2V0KGVuZ2luZSwKKwkJCQkJCQkJICAgZG9fZ3VjX3Jl
c2V0LAorCQkJCQkJCQkgICAiZ3VjIik7CisKKwkJCQllcnIyID0gaW50ZWxfc2VsZnRlc3RfcmVz
dG9yZV9wb2xpY3koZW5naW5lLCAmc2F2ZWQpOworCQkJCWlmIChlcnIgPT0gMCkKKwkJCQkJZXJy
ID0gZXJyMjsKKwkJCX0gZWxzZQorCQkJCWVyciA9IGNoZWNrX3doaXRlbGlzdF9hY3Jvc3NfcmVz
ZXQoZW5naW5lLAorCQkJCQkJCQkgICBkb19lbmdpbmVfcmVzZXQsCisJCQkJCQkJCSAgICJlbmdp
bmUiKTsKKwogCQkJaWYgKGVycikKIAkJCQlnb3RvIG91dDsKIAkJfQpAQCAtMTIyNiwzMSArMTI2
Myw0MiBAQCBsaXZlX2VuZ2luZV9yZXNldF93b3JrYXJvdW5kcyh2b2lkICphcmcpCiAJcmVmZXJl
bmNlX2xpc3RzX2luaXQoZ3QsICZsaXN0cyk7CiAKIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBn
dCwgaWQpIHsKKwkJc3RydWN0IGludGVsX3NlbGZ0ZXN0X3NhdmVkX3BvbGljeSBzYXZlZDsKKwkJ
Ym9vbCB1c2luZ19ndWMgPSBpbnRlbF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKTsKIAkJYm9vbCBv
azsKKwkJaW50IHJldDI7CiAKIAkJcHJfaW5mbygiVmVyaWZ5aW5nIGFmdGVyICVzIHJlc2V0Li4u
XG4iLCBlbmdpbmUtPm5hbWUpOworCQlyZXQgPSBpbnRlbF9zZWxmdGVzdF9tb2RpZnlfcG9saWN5
KGVuZ2luZSwgJnNhdmVkLAorCQkJCQkJICAgU0VMRlRFU1RfU0NIRURVTEVSX01PRElGWV9GQVNU
X1JFU0VUKTsKKwkJaWYgKHJldCkKKwkJCWJyZWFrOworCisKIAkJY2UgPSBpbnRlbF9jb250ZXh0
X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJcmV0ID0gUFRSX0VSUihj
ZSk7Ci0JCQlicmVhazsKKwkJCWdvdG8gcmVzdG9yZTsKIAkJfQogCi0JCW9rID0gdmVyaWZ5X3dh
X2xpc3RzKGd0LCAmbGlzdHMsICJiZWZvcmUgcmVzZXQiKTsKLQkJaWYgKCFvaykgewotCQkJcmV0
ID0gLUVTUkNIOwotCQkJZ290byBlcnI7Ci0JCX0KKwkJaWYgKCF1c2luZ19ndWMpIHsKKwkJCW9r
ID0gdmVyaWZ5X3dhX2xpc3RzKGd0LCAmbGlzdHMsICJiZWZvcmUgcmVzZXQiKTsKKwkJCWlmICgh
b2spIHsKKwkJCQlyZXQgPSAtRVNSQ0g7CisJCQkJZ290byBlcnI7CisJCQl9CiAKLQkJcmV0ID0g
aW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgImxpdmVfd29ya2Fyb3VuZHM6aWRsZSIpOwotCQlp
ZiAocmV0KSB7Ci0JCQlwcl9lcnIoIiVzOiBSZXNldCBmYWlsZWQgd2hpbGUgaWRsZVxuIiwgZW5n
aW5lLT5uYW1lKTsKLQkJCWdvdG8gZXJyOwotCQl9CisJCQlyZXQgPSBpbnRlbF9lbmdpbmVfcmVz
ZXQoZW5naW5lLCAibGl2ZV93b3JrYXJvdW5kczppZGxlIik7CisJCQlpZiAocmV0KSB7CisJCQkJ
cHJfZXJyKCIlczogUmVzZXQgZmFpbGVkIHdoaWxlIGlkbGVcbiIsIGVuZ2luZS0+bmFtZSk7CisJ
CQkJZ290byBlcnI7CisJCQl9CiAKLQkJb2sgPSB2ZXJpZnlfd2FfbGlzdHMoZ3QsICZsaXN0cywg
ImFmdGVyIGlkbGUgcmVzZXQiKTsKLQkJaWYgKCFvaykgewotCQkJcmV0ID0gLUVTUkNIOwotCQkJ
Z290byBlcnI7CisJCQlvayA9IHZlcmlmeV93YV9saXN0cyhndCwgJmxpc3RzLCAiYWZ0ZXIgaWRs
ZSByZXNldCIpOworCQkJaWYgKCFvaykgeworCQkJCXJldCA9IC1FU1JDSDsKKwkJCQlnb3RvIGVy
cjsKKwkJCX0KIAkJfQogCiAJCXJldCA9IGlndF9zcGlubmVyX2luaXQoJnNwaW4sIGVuZ2luZS0+
Z3QpOwpAQCAtMTI3MSwyNSArMTMxOSw0MSBAQCBsaXZlX2VuZ2luZV9yZXNldF93b3JrYXJvdW5k
cyh2b2lkICphcmcpCiAJCQlnb3RvIGVycjsKIAkJfQogCi0JCXJldCA9IGludGVsX2VuZ2luZV9y
ZXNldChlbmdpbmUsICJsaXZlX3dvcmthcm91bmRzOmFjdGl2ZSIpOwotCQlpZiAocmV0KSB7Ci0J
CQlwcl9lcnIoIiVzOiBSZXNldCBmYWlsZWQgb24gYW4gYWN0aXZlIHNwaW5uZXJcbiIsCi0JCQkg
ICAgICAgZW5naW5lLT5uYW1lKTsKLQkJCWlndF9zcGlubmVyX2ZpbmkoJnNwaW4pOwotCQkJZ290
byBlcnI7CisJCS8qIEVuc3VyZSB0aGUgc3Bpbm5lciBoYXNuJ3QgYWJvcnRlZCAqLworCQlpZiAo
aTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpIHsKKwkJCXJldCA9IC1FVElNRURPVVQ7CisJCQln
b3RvIHNraXA7CisJCX0KKworCQlpZiAoIXVzaW5nX2d1YykgeworCQkJcmV0ID0gaW50ZWxfZW5n
aW5lX3Jlc2V0KGVuZ2luZSwgImxpdmVfd29ya2Fyb3VuZHM6YWN0aXZlIik7CisJCQlpZiAocmV0
KSB7CisJCQkJcHJfZXJyKCIlczogUmVzZXQgZmFpbGVkIG9uIGFuIGFjdGl2ZSBzcGlubmVyXG4i
LAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQkJCWlndF9zcGlubmVyX2ZpbmkoJnNwaW4p
OworCQkJCWdvdG8gZXJyOworCQkJfQogCQl9CiAKKwkJLyogRW5zdXJlIHRoZSByZXNldCBoYXBw
ZW5zIGFuZCBraWxscyB0aGUgZW5naW5lICovCisJCWlmIChyZXQgPT0gMCkKKwkJCXJldCA9IGlu
dGVsX3NlbGZ0ZXN0X3dhaXRfZm9yX3JxKHJxKTsKKworc2tpcDoKIAkJaWd0X3NwaW5uZXJfZW5k
KCZzcGluKTsKIAkJaWd0X3NwaW5uZXJfZmluaSgmc3Bpbik7CiAKIAkJb2sgPSB2ZXJpZnlfd2Ff
bGlzdHMoZ3QsICZsaXN0cywgImFmdGVyIGJ1c3kgcmVzZXQiKTsKLQkJaWYgKCFvaykgeworCQlp
ZiAoIW9rKQogCQkJcmV0ID0gLUVTUkNIOwotCQkJZ290byBlcnI7Ci0JCX0KIAogZXJyOgogCQlp
bnRlbF9jb250ZXh0X3B1dChjZSk7CisKK3Jlc3RvcmU6CisJCXJldDIgPSBpbnRlbF9zZWxmdGVz
dF9yZXN0b3JlX3BvbGljeShlbmdpbmUsICZzYXZlZCk7CisJCWlmIChyZXQgPT0gMCkKKwkJCXJl
dCA9IHJldDI7CiAJCWlmIChyZXQpCiAJCQlicmVhazsKIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmgKaW5kZXggMmQ2MTk4ZTYzZWJlLi5k
ODMyYzhmMTFjMTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2FiaS9n
dWNfYWN0aW9uc19hYmkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3Vj
X2FjdGlvbnNfYWJpLmgKQEAgLTEyNCwxMCArMTI0LDI1IEBAIGVudW0gaW50ZWxfZ3VjX2FjdGlv
biB7CiAJSU5URUxfR1VDX0FDVElPTl9GT1JDRV9MT0dfQlVGRkVSX0ZMVVNIID0gMHgzMDIsCiAJ
SU5URUxfR1VDX0FDVElPTl9FTlRFUl9TX1NUQVRFID0gMHg1MDEsCiAJSU5URUxfR1VDX0FDVElP
Tl9FWElUX1NfU1RBVEUgPSAweDUwMiwKKwlJTlRFTF9HVUNfQUNUSU9OX0dMT0JBTF9TQ0hFRF9Q
T0xJQ1lfQ0hBTkdFID0gMHg1MDYsCisJSU5URUxfR1VDX0FDVElPTl9TQ0hFRF9DT05URVhUID0g
MHgxMDAwLAorCUlOVEVMX0dVQ19BQ1RJT05fU0NIRURfQ09OVEVYVF9NT0RFX1NFVCA9IDB4MTAw
MSwKKwlJTlRFTF9HVUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9ET05FID0gMHgxMDAyLAor
CUlOVEVMX0dVQ19BQ1RJT05fU0NIRURfRU5HSU5FX01PREVfU0VUID0gMHgxMDAzLAorCUlOVEVM
X0dVQ19BQ1RJT05fU0NIRURfRU5HSU5FX01PREVfRE9ORSA9IDB4MTAwNCwKKwlJTlRFTF9HVUNf
QUNUSU9OX1NFVF9DT05URVhUX1BSSU9SSVRZID0gMHgxMDA1LAorCUlOVEVMX0dVQ19BQ1RJT05f
U0VUX0NPTlRFWFRfRVhFQ1VUSU9OX1FVQU5UVU0gPSAweDEwMDYsCisJSU5URUxfR1VDX0FDVElP
Tl9TRVRfQ09OVEVYVF9QUkVFTVBUSU9OX1RJTUVPVVQgPSAweDEwMDcsCisJSU5URUxfR1VDX0FD
VElPTl9DT05URVhUX1JFU0VUX05PVElGSUNBVElPTiA9IDB4MTAwOCwKKwlJTlRFTF9HVUNfQUNU
SU9OX0VOR0lORV9GQUlMVVJFX05PVElGSUNBVElPTiA9IDB4MTAwOSwKIAlJTlRFTF9HVUNfQUNU
SU9OX1NMUENfUkVRVUVTVCA9IDB4MzAwMywKIAlJTlRFTF9HVUNfQUNUSU9OX0FVVEhFTlRJQ0FU
RV9IVUMgPSAweDQwMDAsCisJSU5URUxfR1VDX0FDVElPTl9SRUdJU1RFUl9DT05URVhUID0gMHg0
NTAyLAorCUlOVEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT05URVhUID0gMHg0NTAzLAogCUlO
VEVMX0dVQ19BQ1RJT05fUkVHSVNURVJfQ09NTUFORF9UUkFOU1BPUlRfQlVGRkVSID0gMHg0NTA1
LAogCUlOVEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT01NQU5EX1RSQU5TUE9SVF9CVUZGRVIg
PSAweDQ1MDYsCisJSU5URUxfR1VDX0FDVElPTl9ERVJFR0lTVEVSX0NPTlRFWFRfRE9ORSA9IDB4
NDYwMCwKKwlJTlRFTF9HVUNfQUNUSU9OX1JFU0VUX0NMSUVOVCA9IDB4NTUwNywKIAlJTlRFTF9H
VUNfQUNUSU9OX0xJTUlUCiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9ndWMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5j
CmluZGV4IDY2NjFkY2IwMjIzOS4uOTc5MTI4ZTI4MzcyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9ndWMuYwpAQCAtMTgwLDYgKzE4MCwxMSBAQCB2b2lkIGludGVsX2d1Y19pbml0
X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAl9CiB9CiAKK3ZvaWQgaW50ZWxfZ3VjX2lu
aXRfbGF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaW50ZWxfZ3VjX2Fkc19pbml0X2xh
dGUoZ3VjKTsKK30KKwogc3RhdGljIHUzMiBndWNfY3RsX2RlYnVnX2ZsYWdzKHN0cnVjdCBpbnRl
bF9ndWMgKmd1YykKIHsKIAl1MzIgbGV2ZWwgPSBpbnRlbF9ndWNfbG9nX2dldF9sZXZlbCgmZ3Vj
LT5sb2cpOwpAQCAtNTI0LDY1ICs1MjksMzUgQEAgaW50IGludGVsX2d1Y19hdXRoX2h1YyhzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiByc2Ffb2Zmc2V0KQogICovCiBpbnQgaW50ZWxfZ3VjX3N1
c3BlbmQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewotCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVu
Y29yZSA9IGd1Y190b19ndChndWMpLT51bmNvcmU7CiAJaW50IHJldDsKLQl1MzIgc3RhdHVzOwog
CXUzMiBhY3Rpb25bXSA9IHsKLQkJSU5URUxfR1VDX0FDVElPTl9FTlRFUl9TX1NUQVRFLAotCQlH
VUNfUE9XRVJfRDEsIC8qIGFueSB2YWx1ZSBncmVhdGVyIHRoYW4gR1VDX1BPV0VSX0QwICovCisJ
CUlOVEVMX0dVQ19BQ1RJT05fUkVTRVRfQ0xJRU5ULAogCX07CiAKLQkvKgotCSAqIElmIEd1QyBj
b21tdW5pY2F0aW9uIGlzIGVuYWJsZWQgYnV0IHN1Ym1pc3Npb24gaXMgbm90IHN1cHBvcnRlZCwK
LQkgKiB3ZSBkbyBub3QgbmVlZCB0byBzdXNwZW5kIHRoZSBHdUMuCi0JICovCi0JaWYgKCFpbnRl
bF9ndWNfc3VibWlzc2lvbl9pc191c2VkKGd1YykgfHwgIWludGVsX2d1Y19pc19yZWFkeShndWMp
KQorCWlmICghaW50ZWxfZ3VjX2lzX3JlYWR5KGd1YykpCiAJCXJldHVybiAwOwogCi0JLyoKLQkg
KiBUaGUgRU5URVJfU19TVEFURSBhY3Rpb24gcXVldWVzIHRoZSBzYXZlL3Jlc3RvcmUgb3BlcmF0
aW9uIGluIEd1QyBGVwotCSAqIGFuZCB0aGVuIHJldHVybnMsIHNvIHdhaXRpbmcgb24gdGhlIEgy
RyBpcyBub3QgZW5vdWdoIHRvIGd1YXJhbnRlZQotCSAqIEd1QyBpcyBkb25lLiBXaGVuIGFsbCB0
aGUgcHJvY2Vzc2luZyBpcyBkb25lLCBHdUMgd3JpdGVzCi0JICogSU5URUxfR1VDX1NMRUVQX1NU
QVRFX1NVQ0NFU1MgdG8gc2NyYXRjaCByZWdpc3RlciAxNCwgc28gd2UgY2FuIHBvbGwKLQkgKiBv
biB0aGF0LiBOb3RlIHRoYXQgR3VDIGRvZXMgbm90IGVuc3VyZSB0aGF0IHRoZSB2YWx1ZSBpbiB0
aGUgcmVnaXN0ZXIKLQkgKiBpcyBkaWZmZXJlbnQgZnJvbSBJTlRFTF9HVUNfU0xFRVBfU1RBVEVf
U1VDQ0VTUyB3aGlsZSB0aGUgYWN0aW9uIGlzCi0JICogaW4gcHJvZ3Jlc3Mgc28gd2UgbmVlZCB0
byB0YWtlIGNhcmUgb2YgdGhhdCBvdXJzZWx2ZXMgYXMgd2VsbC4KLQkgKi8KLQotCWludGVsX3Vu
Y29yZV93cml0ZSh1bmNvcmUsIFNPRlRfU0NSQVRDSCgxNCksCi0JCQkgICBJTlRFTF9HVUNfU0xF
RVBfU1RBVEVfSU5WQUxJRF9NQVNLKTsKLQotCXJldCA9IGludGVsX2d1Y19zZW5kKGd1YywgYWN0
aW9uLCBBUlJBWV9TSVpFKGFjdGlvbikpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQly
ZXQgPSBfX2ludGVsX3dhaXRfZm9yX3JlZ2lzdGVyKHVuY29yZSwgU09GVF9TQ1JBVENIKDE0KSwK
LQkJCQkJSU5URUxfR1VDX1NMRUVQX1NUQVRFX0lOVkFMSURfTUFTSywKLQkJCQkJMCwgMCwgMTAs
ICZzdGF0dXMpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlpZiAoc3RhdHVzICE9IElO
VEVMX0dVQ19TTEVFUF9TVEFURV9TVUNDRVNTKSB7Ci0JCURSTV9FUlJPUigiR3VDIGZhaWxlZCB0
byBjaGFuZ2Ugc2xlZXAgc3RhdGUuICIKLQkJCSAgImFjdGlvbj0weCV4LCBlcnI9JXVcbiIsCi0J
CQkgIGFjdGlvblswXSwgc3RhdHVzKTsKLQkJcmV0dXJuIC1FSU87CisJaWYgKGludGVsX2d1Y19z
dWJtaXNzaW9uX2lzX3VzZWQoZ3VjKSkgeworCQkvKgorCQkgKiBUaGlzIEgyRyBNTUlPIGNvbW1h
bmQgdGVhcnMgZG93biB0aGUgR3VDIGluIHR3byBzdGVwcy4gRmlyc3QgaXQgd2lsbAorCQkgKiBn
ZW5lcmF0ZSBhIEcySCBDVEIgZm9yIGV2ZXJ5IGFjdGl2ZSBjb250ZXh0IGluZGljYXRpbmcgYSBy
ZXNldC4gSW4KKwkJICogcHJhY3RpY2UgdGhlIGk5MTUgc2hvdWxkbid0IGV2ZXIgZ2V0IGEgRzJI
IGFzIHN1c3BlbmQgc2hvdWxkIG9ubHkgYmUKKwkJICogY2FsbGVkIHdoZW4gdGhlIEdQVSBpcyBp
ZGxlLiBOZXh0LCBpdCB0ZWFycyBkb3duIHRoZSBDVEJzIGFuZCB0aGlzCisJCSAqIEgyRyBNTUlP
IGNvbW1hbmQgY29tcGxldGVzLgorCQkgKgorCQkgKiBEb24ndCBhYm9ydCBvbiBhIGZhaWx1cmUg
Y29kZSBmcm9tIHRoZSBHdUMuIEtlZXAgZ29pbmcgYW5kIGRvIHRoZQorCQkgKiBjbGVhbiB1cCBp
biBzYW50aXplKCkgYW5kIHJlLWluaXRpYWxpc2F0aW9uIG9uIHJlc3VtZSBhbmQgaG9wZWZ1bGx5
CisJCSAqIHRoZSBlcnJvciBoZXJlIHdvbid0IGJlIHByb2JsZW1hdGljLgorCQkgKi8KKwkJcmV0
ID0gaW50ZWxfZ3VjX3NlbmRfbW1pbyhndWMsIGFjdGlvbiwgQVJSQVlfU0laRShhY3Rpb24pLCBO
VUxMLCAwKTsKKwkJaWYgKHJldCkKKwkJCURSTV9FUlJPUigiR3VDIHN1c3BlbmQ6IFJFU0VUX0NM
SUVOVCBhY3Rpb24gZmFpbGVkIHdpdGggZXJyb3IgJWQhXG4iLCByZXQpOwogCX0KIAotCXJldHVy
biAwOwotfQorCS8qIFNpZ25hbCB0aGF0IHRoZSBHdUMgaXNuJ3QgcnVubmluZy4gKi8KKwlpbnRl
bF9ndWNfc2FuaXRpemUoZ3VjKTsKIAotLyoqCi0gKiBpbnRlbF9ndWNfcmVzZXRfZW5naW5lKCkg
LSBhc2sgR3VDIHRvIHJlc2V0IGFuIGVuZ2luZQotICogQGd1YzoJaW50ZWxfZ3VjIHN0cnVjdHVy
ZQotICogQGVuZ2luZToJZW5naW5lIHRvIGJlIHJlc2V0Ci0gKi8KLWludCBpbnRlbF9ndWNfcmVz
ZXRfZW5naW5lKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKLQkJCSAgIHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKLXsKLQkvKiBYWFg6IHRvIGJlIGltcGxlbWVudGVkIHdpdGggc3VibWlz
c2lvbiBpbnRlcmZhY2UgcmV3b3JrICovCi0KLQlyZXR1cm4gLUVOT0RFVjsKKwlyZXR1cm4gMDsK
IH0KIAogLyoqCkBAIC01OTEsNyArNTY2LDEyIEBAIGludCBpbnRlbF9ndWNfcmVzZXRfZW5naW5l
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKICAqLwogaW50IGludGVsX2d1Y19yZXN1bWUoc3RydWN0
IGludGVsX2d1YyAqZ3VjKQogewotCS8qIFhYWDogdG8gYmUgaW1wbGVtZW50ZWQgd2l0aCBzdWJt
aXNzaW9uIGludGVyZmFjZSByZXdvcmsgKi8KKwkvKgorCSAqIE5COiBUaGlzIGZ1bmN0aW9uIGNh
biBzdGlsbCBiZSBjYWxsZWQgZXZlbiBpZiBHdUMgc3VibWlzc2lvbiBpcworCSAqIGRpc2FibGVk
LCBlLmcuIGlmIEd1QyBpcyBlbmFibGVkIGZvciBIdUMgYXV0aGVudGljYXRpb24gb25seS4gVGh1
cywKKwkgKiBpZiBhbnkgY29kZSBpcyBsYXRlciBhZGRlZCBoZXJlLCBpdCBtdXN0IGJlIHN1cHBv
cnQgZG9pbmcgbm90aGluZworCSAqIGlmIHN1Ym1pc3Npb24gaXMgZGlzYWJsZWQgKGFzIHBlciBp
bnRlbF9ndWNfc3VzcGVuZCkuCisJICovCiAJcmV0dXJuIDA7CiB9CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvdWMvaW50ZWxfZ3VjLmgKaW5kZXggNzJlNDY1MzIyMmUyLi45YzYyYzY4ZmIxMzIgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oCkBAIC02LDYgKzYsOSBAQAogI2lm
bmRlZiBfSU5URUxfR1VDX0hfCiAjZGVmaW5lIF9JTlRFTF9HVUNfSF8KIAorI2luY2x1ZGUgPGxp
bnV4L3hhcnJheS5oPgorI2luY2x1ZGUgPGxpbnV4L2RlbGF5Lmg+CisKICNpbmNsdWRlICJpbnRl
bF91bmNvcmUuaCIKICNpbmNsdWRlICJpbnRlbF9ndWNfZncuaCIKICNpbmNsdWRlICJpbnRlbF9n
dWNfZndpZi5oIgpAQCAtMjgsMjMgKzMxLDQzIEBAIHN0cnVjdCBpbnRlbF9ndWMgewogCXN0cnVj
dCBpbnRlbF9ndWNfbG9nIGxvZzsKIAlzdHJ1Y3QgaW50ZWxfZ3VjX2N0IGN0OwogCisJLyogR2xv
YmFsIGVuZ2luZSB1c2VkIHRvIHN1Ym1pdCByZXF1ZXN0cyB0byBHdUMgKi8KKwlzdHJ1Y3QgaTkx
NV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzdGFs
bGVkX3JlcXVlc3Q7CisKIAkvKiBpbnRlbF9ndWNfcmVjdiBpbnRlcnJ1cHQgcmVsYXRlZCBzdGF0
ZSAqLwogCXNwaW5sb2NrX3QgaXJxX2xvY2s7CiAJdW5zaWduZWQgaW50IG1zZ19lbmFibGVkX21h
c2s7CiAKKwlhdG9taWNfdCBvdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaDsKKwogCXN0cnVjdCB7
CiAJCXZvaWQgKCpyZXNldCkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIAkJdm9pZCAoKmVuYWJs
ZSkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIAkJdm9pZCAoKmRpc2FibGUpKHN0cnVjdCBpbnRl
bF9ndWMgKmd1Yyk7CiAJfSBpbnRlcnJ1cHRzOwogCisJLyoKKwkgKiBjb250ZXh0c19sb2NrIHBy
b3RlY3RzIHRoZSBwb29sIG9mIGZyZWUgZ3VjIGlkcyBhbmQgYSBsaW5rZWQgbGlzdCBvZgorCSAq
IGd1YyBpZHMgYXZhaWxhYmxlIHRvIGJlIHN0b2xlbgorCSAqLworCXNwaW5sb2NrX3QgY29udGV4
dHNfbG9jazsKKwlzdHJ1Y3QgaWRhIGd1Y19pZHM7CisJc3RydWN0IGxpc3RfaGVhZCBndWNfaWRf
bGlzdDsKKworCWJvb2wgc3VibWlzc2lvbl9zdXBwb3J0ZWQ7CiAJYm9vbCBzdWJtaXNzaW9uX3Nl
bGVjdGVkOwogCiAJc3RydWN0IGk5MTVfdm1hICphZHNfdm1hOwogCXN0cnVjdCBfX2d1Y19hZHNf
YmxvYiAqYWRzX2Jsb2I7CisJdTMyIGFkc19yZWdzZXRfc2l6ZTsKKwl1MzIgYWRzX2dvbGRlbl9j
dHh0X3NpemU7CisKKwlzdHJ1Y3QgaTkxNV92bWEgKmxyY19kZXNjX3Bvb2w7CisJdm9pZCAqbHJj
X2Rlc2NfcG9vbF92YWRkcjsKIAotCXN0cnVjdCBpOTE1X3ZtYSAqc3RhZ2VfZGVzY19wb29sOwot
CXZvaWQgKnN0YWdlX2Rlc2NfcG9vbF92YWRkcjsKKwkvKiBndWNfaWQgdG8gaW50ZWxfY29udGV4
dCBsb29rdXAgKi8KKwlzdHJ1Y3QgeGFycmF5IGNvbnRleHRfbG9va3VwOwogCiAJLyogQ29udHJv
bCBwYXJhbXMgZm9yIGZ3IGluaXRpYWxpemF0aW9uICovCiAJdTMyIHBhcmFtc1tHVUNfQ1RMX01B
WF9EV09SRFNdOwpAQCAtNzgsMTAgKzEwMSwxMSBAQCBpbmxpbmUgaW50IGludGVsX2d1Y19zZW5k
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgY29uc3QgdTMyICphY3Rpb24sIHUzMiBsZW4pCiB9CiAK
IHN0YXRpYwotaW5saW5lIGludCBpbnRlbF9ndWNfc2VuZF9uYihzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMsIGNvbnN0IHUzMiAqYWN0aW9uLCB1MzIgbGVuKQoraW5saW5lIGludCBpbnRlbF9ndWNfc2Vu
ZF9uYihzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIGNvbnN0IHUzMiAqYWN0aW9uLCB1MzIgbGVuLAor
CQkJICAgICB1MzIgZzJoX2xlbl9kdykKIHsKIAlyZXR1cm4gaW50ZWxfZ3VjX2N0X3NlbmQoJmd1
Yy0+Y3QsIGFjdGlvbiwgbGVuLCBOVUxMLCAwLAotCQkJCSBJTlRFTF9HVUNfQ1RfU0VORF9OQik7
CisJCQkJIE1BS0VfU0VORF9GTEFHUyhnMmhfbGVuX2R3KSk7CiB9CiAKIHN0YXRpYyBpbmxpbmUg
aW50CkBAIC05Miw2ICsxMTYsMzUgQEAgaW50ZWxfZ3VjX3NlbmRfYW5kX3JlY2VpdmUoc3RydWN0
IGludGVsX2d1YyAqZ3VjLCBjb25zdCB1MzIgKmFjdGlvbiwgdTMyIGxlbiwKIAkJCQkgcmVzcG9u
c2VfYnVmLCByZXNwb25zZV9idWZfc2l6ZSwgMCk7CiB9CiAKK3N0YXRpYyBpbmxpbmUgaW50IGlu
dGVsX2d1Y19zZW5kX2J1c3lfbG9vcChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJCSAgIGNv
bnN0IHUzMiAqYWN0aW9uLAorCQkJCQkgICB1MzIgbGVuLAorCQkJCQkgICB1MzIgZzJoX2xlbl9k
dywKKwkJCQkJICAgYm9vbCBsb29wKQoreworCWludCBlcnI7CisJdW5zaWduZWQgaW50IHNsZWVw
X3BlcmlvZF9tcyA9IDE7CisJYm9vbCBub3RfYXRvbWljID0gIWluX2F0b21pYygpICYmICFpcnFz
X2Rpc2FibGVkKCk7CisKKwkvKiBObyBzbGVlcGluZyB3aXRoIHNwaW4gbG9ja3MsIGp1c3QgYnVz
eSBsb29wICovCisJbWlnaHRfc2xlZXBfaWYobG9vcCAmJiBub3RfYXRvbWljKTsKKworcmV0cnk6
CisJZXJyID0gaW50ZWxfZ3VjX3NlbmRfbmIoZ3VjLCBhY3Rpb24sIGxlbiwgZzJoX2xlbl9kdyk7
CisJaWYgKHVubGlrZWx5KGVyciA9PSAtRUJVU1kgJiYgbG9vcCkpIHsKKwkJaWYgKGxpa2VseShu
b3RfYXRvbWljKSkgeworCQkJaWYgKG1zbGVlcF9pbnRlcnJ1cHRpYmxlKHNsZWVwX3BlcmlvZF9t
cykpCisJCQkJcmV0dXJuIC1FSU5UUjsKKwkJCXNsZWVwX3BlcmlvZF9tcyA9IHNsZWVwX3Blcmlv
ZF9tcyA8PCAxOworCQl9IGVsc2UgeworCQkJY3B1X3JlbGF4KCk7CisJCX0KKwkJZ290byByZXRy
eTsKKwl9CisKKwlyZXR1cm4gZXJyOworfQorCiBzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3Vj
X3RvX2hvc3RfZXZlbnRfaGFuZGxlcihzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJaW50ZWxf
Z3VjX2N0X2V2ZW50X2hhbmRsZXIoJmd1Yy0+Y3QpOwpAQCAtMTI1LDYgKzE3OCw3IEBAIHN0YXRp
YyBpbmxpbmUgdTMyIGludGVsX2d1Y19nZ3R0X29mZnNldChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMs
CiB9CiAKIHZvaWQgaW50ZWxfZ3VjX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsK
K3ZvaWQgaW50ZWxfZ3VjX2luaXRfbGF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBp
bnRlbF9ndWNfaW5pdF9zZW5kX3JlZ3Moc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIHZvaWQgaW50
ZWxfZ3VjX3dyaXRlX3BhcmFtcyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogaW50IGludGVsX2d1
Y19pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CkBAIC0xNjcsOSArMjIxLDI1IEBAIHN0YXRp
YyBpbmxpbmUgYm9vbCBpbnRlbF9ndWNfaXNfcmVhZHkoc3RydWN0IGludGVsX2d1YyAqZ3VjKQog
CXJldHVybiBpbnRlbF9ndWNfaXNfZndfcnVubmluZyhndWMpICYmIGludGVsX2d1Y19jdF9lbmFi
bGVkKCZndWMtPmN0KTsKIH0KIAorc3RhdGljIGlubGluZSB2b2lkIGludGVsX2d1Y19yZXNldF9p
bnRlcnJ1cHRzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlndWMtPmludGVycnVwdHMucmVz
ZXQoZ3VjKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGludGVsX2d1Y19lbmFibGVfaW50ZXJy
dXB0cyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJZ3VjLT5pbnRlcnJ1cHRzLmVuYWJsZShn
dWMpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3VjX2Rpc2FibGVfaW50ZXJydXB0
cyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJZ3VjLT5pbnRlcnJ1cHRzLmRpc2FibGUoZ3Vj
KTsKK30KKwogc3RhdGljIGlubGluZSBpbnQgaW50ZWxfZ3VjX3Nhbml0aXplKHN0cnVjdCBpbnRl
bF9ndWMgKmd1YykKIHsKIAlpbnRlbF91Y19md19zYW5pdGl6ZSgmZ3VjLT5mdyk7CisJaW50ZWxf
Z3VjX2Rpc2FibGVfaW50ZXJydXB0cyhndWMpOwogCWludGVsX2d1Y19jdF9zYW5pdGl6ZSgmZ3Vj
LT5jdCk7CiAJZ3VjLT5tbWlvX21zZyA9IDA7CiAKQEAgLTE5MCw4ICsyNjAsMjcgQEAgc3RhdGlj
IGlubGluZSB2b2lkIGludGVsX2d1Y19kaXNhYmxlX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMs
IHUzMiBtYXNrKQogCXNwaW5fdW5sb2NrX2lycSgmZ3VjLT5pcnFfbG9jayk7CiB9CiAKLWludCBp
bnRlbF9ndWNfcmVzZXRfZW5naW5lKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKLQkJCSAgIHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CitpbnQgaW50ZWxfZ3VjX3dhaXRfZm9yX2lkbGUo
c3RydWN0IGludGVsX2d1YyAqZ3VjLCBsb25nIHRpbWVvdXQpOworCitpbnQgaW50ZWxfZ3VjX2Rl
cmVnaXN0ZXJfZG9uZV9wcm9jZXNzX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJCSAg
Y29uc3QgdTMyICptc2csIHUzMiBsZW4pOworaW50IGludGVsX2d1Y19zY2hlZF9kb25lX3Byb2Nl
c3NfbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkgICAgIGNvbnN0IHUzMiAqbXNnLCB1
MzIgbGVuKTsKK2ludCBpbnRlbF9ndWNfY29udGV4dF9yZXNldF9wcm9jZXNzX21zZyhzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMsCisJCQkJCWNvbnN0IHUzMiAqbXNnLCB1MzIgbGVuKTsKK2ludCBpbnRl
bF9ndWNfZW5naW5lX2ZhaWx1cmVfcHJvY2Vzc19tc2coc3RydWN0IGludGVsX2d1YyAqZ3VjLAor
CQkJCQkgY29uc3QgdTMyICptc2csIHUzMiBsZW4pOworCit2b2lkIGludGVsX2d1Y19maW5kX2h1
bmdfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOworCitpbnQgaW50ZWxf
Z3VjX2dsb2JhbF9wb2xpY2llc191cGRhdGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKKwordm9p
ZCBpbnRlbF9ndWNfY29udGV4dF9iYW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSk7CisKK3ZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fcmVzZXRfcHJl
cGFyZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwordm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9y
ZXNldChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIGJvb2wgc3RhbGxlZCk7Cit2b2lkIGludGVsX2d1
Y19zdWJtaXNzaW9uX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwordm9pZCBp
bnRlbF9ndWNfc3VibWlzc2lvbl9jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2d1YyAqZ3Vj
KTsKIAogdm9pZCBpbnRlbF9ndWNfbG9hZF9zdGF0dXMoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBz
dHJ1Y3QgZHJtX3ByaW50ZXIgKnApOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC91Yy9pbnRlbF9ndWNfYWRzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRl
bF9ndWNfYWRzLmMKaW5kZXggYjgyMTQ1NjUyZDU3Li5kYjkyNTI1MjAzYTQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19hZHMuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfYWRzLmMKQEAgLTMsOCArMywxMSBAQAogICog
Q29weXJpZ2h0IMKpIDIwMTQtMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgogICovCiAKKyNpbmNsdWRl
IDxsaW51eC9ic2VhcmNoLmg+CisKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUg
Imd0L2ludGVsX2xyYy5oIgorI2luY2x1ZGUgImd0L3NobWVtX3V0aWxzLmgiCiAjaW5jbHVkZSAi
aW50ZWxfZ3VjX2Fkcy5oIgogI2luY2x1ZGUgImludGVsX2d1Y19md2lmLmgiCiAjaW5jbHVkZSAi
aW50ZWxfdWMuaCIKQEAgLTIzLDYgKzI2LDE1IEBACiAgKiAgICAgIHwgZ3VjX3BvbGljaWVzICAg
ICAgICAgICAgICAgICAgICAgICAgICB8CiAgKiAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0rCiAgKiAgICAgIHwgZ3VjX2d0X3N5c3RlbV9pbmZvICAgICAgICAg
ICAgICAgICAgICB8CisgKiAgICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0rIDw9PSBzdGF0aWMKKyAqICAgICAgfCBndWNfbW1pb19yZWdbY291bnRBXSAoZW5naW5l
IDAuMCkgICAgIHwKKyAqICAgICAgfCBndWNfbW1pb19yZWdbY291bnRCXSAoZW5naW5lIDAuMSkg
ICAgIHwKKyAqICAgICAgfCBndWNfbW1pb19yZWdbY291bnRDXSAoZW5naW5lIDEuMCkgICAgIHwK
KyAqICAgICAgfCAgIC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKKyAqICAg
ICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgPD09IGR5bmFtaWMK
KyAqICAgICAgfCBwYWRkaW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKKyAqICAg
ICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgPD09IDRLIGFsaWdu
ZWQKKyAqICAgICAgfCBnb2xkZW4gY29udGV4dHMgICAgICAgICAgICAgICAgICAgICAgIHwKICAq
ICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKICAqICAgICAg
fCBwYWRkaW5nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKICAqICAgICAgKy0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsgPD09IDRLIGFsaWduZWQKQEAgLTM1
LDE2ICs0Nyw0OSBAQCBzdHJ1Y3QgX19ndWNfYWRzX2Jsb2IgewogCXN0cnVjdCBndWNfYWRzIGFk
czsKIAlzdHJ1Y3QgZ3VjX3BvbGljaWVzIHBvbGljaWVzOwogCXN0cnVjdCBndWNfZ3Rfc3lzdGVt
X2luZm8gc3lzdGVtX2luZm87CisJLyogRnJvbSBoZXJlIG9uLCBsb2NhdGlvbiBpcyBkeW5hbWlj
ISBSZWZlciB0byBhYm92ZSBkaWFncmFtLiAqLworCXN0cnVjdCBndWNfbW1pb19yZWcgcmVnc2V0
WzBdOwogfSBfX3BhY2tlZDsKIAorc3RhdGljIHUzMiBndWNfYWRzX3JlZ3NldF9zaXplKHN0cnVj
dCBpbnRlbF9ndWMgKmd1YykKK3sKKwlHRU1fQlVHX09OKCFndWMtPmFkc19yZWdzZXRfc2l6ZSk7
CisJcmV0dXJuIGd1Yy0+YWRzX3JlZ3NldF9zaXplOworfQorCitzdGF0aWMgdTMyIGd1Y19hZHNf
Z29sZGVuX2N0eHRfc2l6ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJcmV0dXJuIFBBR0Vf
QUxJR04oZ3VjLT5hZHNfZ29sZGVuX2N0eHRfc2l6ZSk7Cit9CisKIHN0YXRpYyB1MzIgZ3VjX2Fk
c19wcml2YXRlX2RhdGFfc2l6ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJcmV0dXJuIFBB
R0VfQUxJR04oZ3VjLT5mdy5wcml2YXRlX2RhdGFfc2l6ZSk7CiB9CiAKK3N0YXRpYyB1MzIgZ3Vj
X2Fkc19yZWdzZXRfb2Zmc2V0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlyZXR1cm4gb2Zm
c2V0b2Yoc3RydWN0IF9fZ3VjX2Fkc19ibG9iLCByZWdzZXQpOworfQorCitzdGF0aWMgdTMyIGd1
Y19hZHNfZ29sZGVuX2N0eHRfb2Zmc2V0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwl1MzIg
b2Zmc2V0OworCisJb2Zmc2V0ID0gZ3VjX2Fkc19yZWdzZXRfb2Zmc2V0KGd1YykgKworCQkgZ3Vj
X2Fkc19yZWdzZXRfc2l6ZShndWMpOworCisJcmV0dXJuIFBBR0VfQUxJR04ob2Zmc2V0KTsKK30K
Kwogc3RhdGljIHUzMiBndWNfYWRzX3ByaXZhdGVfZGF0YV9vZmZzZXQoc3RydWN0IGludGVsX2d1
YyAqZ3VjKQogewotCXJldHVybiBQQUdFX0FMSUdOKHNpemVvZihzdHJ1Y3QgX19ndWNfYWRzX2Js
b2IpKTsKKwl1MzIgb2Zmc2V0OworCisJb2Zmc2V0ID0gZ3VjX2Fkc19nb2xkZW5fY3R4dF9vZmZz
ZXQoZ3VjKSArCisJCSBndWNfYWRzX2dvbGRlbl9jdHh0X3NpemUoZ3VjKTsKKworCXJldHVybiBQ
QUdFX0FMSUdOKG9mZnNldCk7CiB9CiAKIHN0YXRpYyB1MzIgZ3VjX2Fkc19ibG9iX3NpemUoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKQpAQCAtNTMsMTUgKzk4LDY4IEBAIHN0YXRpYyB1MzIgZ3VjX2Fk
c19ibG9iX3NpemUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCSAgICAgICBndWNfYWRzX3ByaXZh
dGVfZGF0YV9zaXplKGd1Yyk7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19wb2xpY2llc19pbml0KHN0
cnVjdCBndWNfcG9saWNpZXMgKnBvbGljaWVzKQorc3RhdGljIHZvaWQgZ3VjX3BvbGljaWVzX2lu
aXQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgZ3VjX3BvbGljaWVzICpwb2xpY2llcykK
IHsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gZ3VjX3RvX2d0KGd1Yyk7CisJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUgPSBndC0+aTkxNTsKKwogCXBvbGljaWVzLT5kcGNfcHJvbW90ZV90
aW1lID0gR0xPQkFMX1BPTElDWV9ERUZBVUxUX0RQQ19QUk9NT1RFX1RJTUVfVVM7CiAJcG9saWNp
ZXMtPm1heF9udW1fd29ya19pdGVtcyA9IEdMT0JBTF9QT0xJQ1lfTUFYX05VTV9XSTsKLQkvKiBE
aXNhYmxlIGF1dG9tYXRpYyByZXNldHMgYXMgbm90IHlldCBzdXBwb3J0ZWQuICovCi0JcG9saWNp
ZXMtPmdsb2JhbF9mbGFncyA9IEdMT0JBTF9QT0xJQ1lfRElTQUJMRV9FTkdJTkVfUkVTRVQ7CisK
Kwlwb2xpY2llcy0+Z2xvYmFsX2ZsYWdzID0gMDsKKwlpZiAoaTkxNS0+cGFyYW1zLnJlc2V0IDwg
MikKKwkJcG9saWNpZXMtPmdsb2JhbF9mbGFncyB8PSBHTE9CQUxfUE9MSUNZX0RJU0FCTEVfRU5H
SU5FX1JFU0VUOworCiAJcG9saWNpZXMtPmlzX3ZhbGlkID0gMTsKIH0KIAordm9pZCBpbnRlbF9n
dWNfYWRzX3ByaW50X3BvbGljeV9pbmZvKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkgICAg
IHN0cnVjdCBkcm1fcHJpbnRlciAqZHApCit7CisJc3RydWN0IF9fZ3VjX2Fkc19ibG9iICpibG9i
ID0gZ3VjLT5hZHNfYmxvYjsKKworCWlmICh1bmxpa2VseSghYmxvYikpCisJCXJldHVybjsKKwor
CWRybV9wcmludGYoZHAsICJHbG9iYWwgc2NoZWR1bGluZyBwb2xpY2llczpcbiIpOworCWRybV9w
cmludGYoZHAsICIgIERQQyBwcm9tb3RlIHRpbWUgICA9ICV1XG4iLCBibG9iLT5wb2xpY2llcy5k
cGNfcHJvbW90ZV90aW1lKTsKKwlkcm1fcHJpbnRmKGRwLCAiICBNYXggbnVtIHdvcmsgaXRlbXMg
PSAldVxuIiwgYmxvYi0+cG9saWNpZXMubWF4X251bV93b3JrX2l0ZW1zKTsKKwlkcm1fcHJpbnRm
KGRwLCAiICBGbGFncyAgICAgICAgICAgICAgPSAldVxuIiwgYmxvYi0+cG9saWNpZXMuZ2xvYmFs
X2ZsYWdzKTsKK30KKworc3RhdGljIGludCBndWNfYWN0aW9uX3BvbGljaWVzX3VwZGF0ZShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBwb2xpY3lfb2Zmc2V0KQoreworCXUzMiBhY3Rpb25bXSA9
IHsKKwkJSU5URUxfR1VDX0FDVElPTl9HTE9CQUxfU0NIRURfUE9MSUNZX0NIQU5HRSwKKwkJcG9s
aWN5X29mZnNldAorCX07CisKKwlyZXR1cm4gaW50ZWxfZ3VjX3NlbmRfYnVzeV9sb29wKGd1Yywg
YWN0aW9uLCBBUlJBWV9TSVpFKGFjdGlvbiksIDAsIHRydWUpOworfQorCitpbnQgaW50ZWxfZ3Vj
X2dsb2JhbF9wb2xpY2llc191cGRhdGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCXN0cnVj
dCBfX2d1Y19hZHNfYmxvYiAqYmxvYiA9IGd1Yy0+YWRzX2Jsb2I7CisJc3RydWN0IGludGVsX2d0
ICpndCA9IGd1Y190b19ndChndWMpOworCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCWludCBy
ZXQ7CisKKwlpZiAoIWJsb2IpCisJCXJldHVybiAtRU9QTk9UU1VQUDsKKworCUdFTV9CVUdfT04o
IWJsb2ItPmFkcy5zY2hlZHVsZXJfcG9saWNpZXMpOworCisJZ3VjX3BvbGljaWVzX2luaXQoZ3Vj
LCAmYmxvYi0+cG9saWNpZXMpOworCisJaWYgKCFpbnRlbF9ndWNfaXNfcmVhZHkoZ3VjKSkKKwkJ
cmV0dXJuIDA7CisKKwl3aXRoX2ludGVsX3J1bnRpbWVfcG0oJmd0LT5pOTE1LT5ydW50aW1lX3Bt
LCB3YWtlcmVmKQorCQlyZXQgPSBndWNfYWN0aW9uX3BvbGljaWVzX3VwZGF0ZShndWMsIGJsb2It
PmFkcy5zY2hlZHVsZXJfcG9saWNpZXMpOworCisJcmV0dXJuIHJldDsKK30KKwogc3RhdGljIHZv
aWQgZ3VjX21hcHBpbmdfdGFibGVfaW5pdChzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQkJCSAgIHN0
cnVjdCBndWNfZ3Rfc3lzdGVtX2luZm8gKnN5c3RlbV9pbmZvKQogewpAQCAtODQsNTMgKzE4Miwz
MjQgQEAgc3RhdGljIHZvaWQgZ3VjX21hcHBpbmdfdGFibGVfaW5pdChzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0LAogfQogCiAvKgotICogVGhlIGZpcnN0IDgwIGR3b3JkcyBvZiB0aGUgcmVnaXN0ZXIgc3Rh
dGUgY29udGV4dCwgY29udGFpbmluZyB0aGUKLSAqIGV4ZWNsaXN0cyBhbmQgcHBndHQgcmVnaXN0
ZXJzLgorICogVGhlIHNhdmUvcmVzdG9yZSByZWdpc3RlciBsaXN0IG11c3QgYmUgcHJlLWNhbGN1
bGF0ZWQgdG8gYSB0ZW1wb3JhcnkKKyAqIGJ1ZmZlciBvZiBkcml2ZXIgZGVmaW5lZCBzaXplIGJl
Zm9yZSBpdCBjYW4gYmUgZ2VuZXJhdGVkIGluIHBsYWNlCisgKiBpbnNpZGUgdGhlIEFEUy4KICAq
LwotI2RlZmluZSBMUl9IV19DT05URVhUX1NJWkUJKDgwICogc2l6ZW9mKHUzMikpCisjZGVmaW5l
IE1BWF9NTUlPX1JFR1MJMTI4CS8qIEFyYml0cmFyeSBzaXplLCBpbmNyZWFzZSBhcyBuZWVkZWQg
Ki8KK3N0cnVjdCB0ZW1wX3JlZ3NldCB7CisJc3RydWN0IGd1Y19tbWlvX3JlZyAqcmVnaXN0ZXJz
OworCXUzMiB1c2VkOworCXUzMiBzaXplOworfTsKIAotc3RhdGljIHZvaWQgX19ndWNfYWRzX2lu
aXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQorc3RhdGljIGludCBndWNfbW1pb19yZWdfY21wKGNv
bnN0IHZvaWQgKmEsIGNvbnN0IHZvaWQgKmIpCit7CisJY29uc3Qgc3RydWN0IGd1Y19tbWlvX3Jl
ZyAqcmEgPSBhOworCWNvbnN0IHN0cnVjdCBndWNfbW1pb19yZWcgKnJiID0gYjsKKworCXJldHVy
biAoaW50KXJhLT5vZmZzZXQgLSAoaW50KXJiLT5vZmZzZXQ7Cit9CisKK3N0YXRpYyB2b2lkIGd1
Y19tbWlvX3JlZ19hZGQoc3RydWN0IHRlbXBfcmVnc2V0ICpyZWdzZXQsCisJCQkgICAgIHUzMiBv
ZmZzZXQsIHUzMiBmbGFncykKK3sKKwl1MzIgY291bnQgPSByZWdzZXQtPnVzZWQ7CisJc3RydWN0
IGd1Y19tbWlvX3JlZyByZWcgPSB7CisJCS5vZmZzZXQgPSBvZmZzZXQsCisJCS5mbGFncyA9IGZs
YWdzLAorCX07CisJc3RydWN0IGd1Y19tbWlvX3JlZyAqc2xvdDsKKworCUdFTV9CVUdfT04oY291
bnQgPj0gcmVnc2V0LT5zaXplKTsKKworCS8qCisJICogVGhlIG1taW8gbGlzdCBpcyBidWlsdCB1
c2luZyBzZXBhcmF0ZSBsaXN0cyB3aXRoaW4gdGhlIGRyaXZlci4KKwkgKiBJdCdzIHBvc3NpYmxl
IHRoYXQgYXQgc29tZSBwb2ludCB3ZSBtYXkgYXR0ZW1wdCB0byBhZGQgdGhlIHNhbWUKKwkgKiBy
ZWdpc3RlciBtb3JlIHRoYW4gb25jZS4gRG8gbm90IGNvbnNpZGVyIHRoaXMgYW4gZXJyb3I7IHNp
bGVudGx5CisJICogbW92ZSBvbiBpZiB0aGUgcmVnaXN0ZXIgaXMgYWxyZWFkeSBpbiB0aGUgbGlz
dC4KKwkgKi8KKwlpZiAoYnNlYXJjaCgmcmVnLCByZWdzZXQtPnJlZ2lzdGVycywgY291bnQsCisJ
CSAgICBzaXplb2YocmVnKSwgZ3VjX21taW9fcmVnX2NtcCkpCisJCXJldHVybjsKKworCXNsb3Qg
PSAmcmVnc2V0LT5yZWdpc3RlcnNbY291bnRdOworCXJlZ3NldC0+dXNlZCsrOworCSpzbG90ID0g
cmVnOworCisJd2hpbGUgKHNsb3QtLSA+IHJlZ3NldC0+cmVnaXN0ZXJzKSB7CisJCUdFTV9CVUdf
T04oc2xvdFswXS5vZmZzZXQgPT0gc2xvdFsxXS5vZmZzZXQpOworCQlpZiAoc2xvdFsxXS5vZmZz
ZXQgPiBzbG90WzBdLm9mZnNldCkKKwkJCWJyZWFrOworCisJCXN3YXAoc2xvdFsxXSwgc2xvdFsw
XSk7CisJfQorfQorCisjZGVmaW5lIEdVQ19NTUlPX1JFR19BREQocmVnc2V0LCByZWcsIG1hc2tl
ZCkgXAorCWd1Y19tbWlvX3JlZ19hZGQocmVnc2V0LCBcCisJCQkgaTkxNV9tbWlvX3JlZ19vZmZz
ZXQoKHJlZykpLCBcCisJCQkgKG1hc2tlZCkgPyBHVUNfUkVHU0VUX01BU0tFRCA6IDApCisKK3N0
YXRpYyB2b2lkIGd1Y19tbWlvX3JlZ3NldF9pbml0KHN0cnVjdCB0ZW1wX3JlZ3NldCAqcmVnc2V0
LAorCQkJCSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29uc3QgdTMyIGJh
c2UgPSBlbmdpbmUtPm1taW9fYmFzZTsKKwlzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwgPSAmZW5n
aW5lLT53YV9saXN0OworCXN0cnVjdCBpOTE1X3dhICp3YTsKKwl1bnNpZ25lZCBpbnQgaTsKKwor
CXJlZ3NldC0+dXNlZCA9IDA7CisKKwlHVUNfTU1JT19SRUdfQUREKHJlZ3NldCwgUklOR19NT0RF
X0dFTjcoYmFzZSksIHRydWUpOworCUdVQ19NTUlPX1JFR19BREQocmVnc2V0LCBSSU5HX0hXU19Q
R0EoYmFzZSksIGZhbHNlKTsKKwlHVUNfTU1JT19SRUdfQUREKHJlZ3NldCwgUklOR19JTVIoYmFz
ZSksIGZhbHNlKTsKKworCWZvciAoaSA9IDAsIHdhID0gd2FsLT5saXN0OyBpIDwgd2FsLT5jb3Vu
dDsgaSsrLCB3YSsrKQorCQlHVUNfTU1JT19SRUdfQUREKHJlZ3NldCwgd2EtPnJlZywgd2EtPm1h
c2tlZF9yZWcpOworCisJLyogQmUgZXh0cmEgcGFyYW5vaWQgYW5kIGluY2x1ZGUgYWxsIHdoaXRl
bGlzdCByZWdpc3RlcnMuICovCisJZm9yIChpID0gMDsgaSA8IFJJTkdfTUFYX05PTlBSSVZfU0xP
VFM7IGkrKykKKwkJR1VDX01NSU9fUkVHX0FERChyZWdzZXQsCisJCQkJIFJJTkdfRk9SQ0VfVE9f
Tk9OUFJJVihiYXNlLCBpKSwKKwkJCQkgZmFsc2UpOworCisJLyogYWRkIGluIGxvY2FsIE1PQ1Mg
cmVnaXN0ZXJzICovCisJZm9yIChpID0gMDsgaSA8IEdFTjlfTE5DRkNNT0NTX1JFR19DT1VOVDsg
aSsrKQorCQlHVUNfTU1JT19SRUdfQUREKHJlZ3NldCwgR0VOOV9MTkNGQ01PQ1MoaSksIGZhbHNl
KTsKK30KKworc3RhdGljIGludCBndWNfbW1pb19yZWdfc3RhdGVfcXVlcnkoc3RydWN0IGludGVs
X2d1YyAqZ3VjKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3VjKTsKLQlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1OworCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwlzdHJ1Y3QgdGVt
cF9yZWdzZXQgdGVtcF9zZXQ7CisJdTMyIHRvdGFsOworCisJLyoKKwkgKiBOZWVkIHRvIGFjdHVh
bGx5IGJ1aWxkIHRoZSBsaXN0IGluIG9yZGVyIHRvIGZpbHRlciBvdXQKKwkgKiBkdXBsaWNhdGVz
IGFuZCBvdGhlciBzdWNoIGRhdGEgZGVwZW5kZW50IGNvbnN0cnVjdGlvbnMuCisJICovCisJdGVt
cF9zZXQuc2l6ZSA9IE1BWF9NTUlPX1JFR1M7CisJdGVtcF9zZXQucmVnaXN0ZXJzID0ga21hbGxv
Y19hcnJheSh0ZW1wX3NldC5zaXplLAorCQkJCQkgIHNpemVvZigqdGVtcF9zZXQucmVnaXN0ZXJz
KSwKKwkJCQkJICBHRlBfS0VSTkVMKTsKKwlpZiAoIXRlbXBfc2V0LnJlZ2lzdGVycykKKwkJcmV0
dXJuIC1FTk9NRU07CisKKwl0b3RhbCA9IDA7CisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3Qs
IGlkKSB7CisJCWd1Y19tbWlvX3JlZ3NldF9pbml0KCZ0ZW1wX3NldCwgZW5naW5lKTsKKwkJdG90
YWwgKz0gdGVtcF9zZXQudXNlZDsKKwl9CisKKwlrZnJlZSh0ZW1wX3NldC5yZWdpc3RlcnMpOwor
CisJcmV0dXJuIHRvdGFsICogc2l6ZW9mKHN0cnVjdCBndWNfbW1pb19yZWcpOworfQorCitzdGF0
aWMgdm9pZCBndWNfbW1pb19yZWdfc3RhdGVfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJ
CQkJICAgIHN0cnVjdCBfX2d1Y19hZHNfYmxvYiAqYmxvYikKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0ID0gZ3VjX3RvX2d0KGd1Yyk7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwor
CWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0cnVjdCB0ZW1wX3JlZ3NldCB0ZW1wX3NldDsK
KwlzdHJ1Y3QgZ3VjX21taW9fcmVnX3NldCAqYWRzX3JlZ19zZXQ7CisJdTMyIGFkZHJfZ2d0dCwg
b2Zmc2V0OworCXU4IGd1Y19jbGFzczsKKworCW9mZnNldCA9IGd1Y19hZHNfcmVnc2V0X29mZnNl
dChndWMpOworCWFkZHJfZ2d0dCA9IGludGVsX2d1Y19nZ3R0X29mZnNldChndWMsIGd1Yy0+YWRz
X3ZtYSkgKyBvZmZzZXQ7CisJdGVtcF9zZXQucmVnaXN0ZXJzID0gKHN0cnVjdCBndWNfbW1pb19y
ZWcgKikgKCgodTggKikgYmxvYikgKyBvZmZzZXQpOworCXRlbXBfc2V0LnNpemUgPSBndWMtPmFk
c19yZWdzZXRfc2l6ZSAvIHNpemVvZih0ZW1wX3NldC5yZWdpc3RlcnNbMF0pOworCisJZm9yX2Vh
Y2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7CisJCS8qIENsYXNzIGluZGV4IGlzIGNoZWNrZWQg
aW4gY2xhc3MgY29udmVydGVyICovCisJCUdFTV9CVUdfT04oZW5naW5lLT5pbnN0YW5jZSA+PSBH
VUNfTUFYX0lOU1RBTkNFU19QRVJfQ0xBU1MpOworCisJCWd1Y19jbGFzcyA9IGVuZ2luZV9jbGFz
c190b19ndWNfY2xhc3MoZW5naW5lLT5jbGFzcyk7CisJCWFkc19yZWdfc2V0ID0gJmJsb2ItPmFk
cy5yZWdfc3RhdGVfbGlzdFtndWNfY2xhc3NdW2VuZ2luZS0+aW5zdGFuY2VdOworCisJCWd1Y19t
bWlvX3JlZ3NldF9pbml0KCZ0ZW1wX3NldCwgZW5naW5lKTsKKwkJaWYgKCF0ZW1wX3NldC51c2Vk
KSB7CisJCQlhZHNfcmVnX3NldC0+YWRkcmVzcyA9IDA7CisJCQlhZHNfcmVnX3NldC0+Y291bnQg
PSAwOworCQkJY29udGludWU7CisJCX0KKworCQlhZHNfcmVnX3NldC0+YWRkcmVzcyA9IGFkZHJf
Z2d0dDsKKwkJYWRzX3JlZ19zZXQtPmNvdW50ID0gdGVtcF9zZXQudXNlZDsKKworCQl0ZW1wX3Nl
dC5zaXplIC09IHRlbXBfc2V0LnVzZWQ7CisJCXRlbXBfc2V0LnJlZ2lzdGVycyArPSB0ZW1wX3Nl
dC51c2VkOworCQlhZGRyX2dndHQgKz0gdGVtcF9zZXQudXNlZCAqIHNpemVvZihzdHJ1Y3QgZ3Vj
X21taW9fcmVnKTsKKwl9CisKKwlHRU1fQlVHX09OKHRlbXBfc2V0LnNpemUpOworfQorCitzdGF0
aWMgdm9pZCBmaWxsX2VuZ2luZV9lbmFibGVfbWFza3Moc3RydWN0IGludGVsX2d0ICpndCwKKwkJ
CQkgICAgIHN0cnVjdCBndWNfZ3Rfc3lzdGVtX2luZm8gKmluZm8pCit7CisJaW5mby0+ZW5naW5l
X2VuYWJsZWRfbWFza3NbR1VDX1JFTkRFUl9DTEFTU10gPSAxOworCWluZm8tPmVuZ2luZV9lbmFi
bGVkX21hc2tzW0dVQ19CTElUVEVSX0NMQVNTXSA9IDE7CisJaW5mby0+ZW5naW5lX2VuYWJsZWRf
bWFza3NbR1VDX1ZJREVPX0NMQVNTXSA9IFZEQk9YX01BU0soZ3QpOworCWluZm8tPmVuZ2luZV9l
bmFibGVkX21hc2tzW0dVQ19WSURFT0VOSEFOQ0VfQ0xBU1NdID0gVkVCT1hfTUFTSyhndCk7Cit9
CisKK3N0YXRpYyBpbnQgZ3VjX3ByZXBfZ29sZGVuX2NvbnRleHQoc3RydWN0IGludGVsX2d1YyAq
Z3VjLAorCQkJCSAgIHN0cnVjdCBfX2d1Y19hZHNfYmxvYiAqYmxvYikKK3sKKwlzdHJ1Y3QgaW50
ZWxfZ3QgKmd0ID0gZ3VjX3RvX2d0KGd1Yyk7CisJdTMyIGFkZHJfZ2d0dCwgb2Zmc2V0OworCXUz
MiB0b3RhbF9zaXplID0gMCwgYWxsb2Nfc2l6ZSwgcmVhbF9zaXplOworCXU4IGVuZ2luZV9jbGFz
cywgZ3VjX2NsYXNzOworCXN0cnVjdCBndWNfZ3Rfc3lzdGVtX2luZm8gKmluZm8sIGxvY2FsX2lu
Zm87CisKKwkvKgorCSAqIFJlc2VydmUgdGhlIG1lbW9yeSBmb3IgdGhlIGdvbGRlbiBjb250ZXh0
cyBhbmQgcG9pbnQgR3VDIGF0IGl0IGJ1dAorCSAqIGxlYXZlIGl0IGVtcHR5IGZvciBub3cuIFRo
ZSBjb250ZXh0IGRhdGEgd2lsbCBiZSBmaWxsZWQgaW4gbGF0ZXIKKwkgKiBvbmNlIHRoZXJlIGlz
IHNvbWV0aGluZyBhdmFpbGFibGUgdG8gcHV0IHRoZXJlLgorCSAqCisJICogTm90ZSB0aGF0IHRo
ZSBIV1NQIGFuZCByaW5nIGNvbnRleHQgYXJlIG5vdCBpbmNsdWRlZC4KKwkgKgorCSAqIE5vdGUg
YWxzbyB0aGF0IHRoZSBzdG9yYWdlIG11c3QgYmUgcGlubmVkIGluIHRoZSBHR1RULCBzbyB0aGF0
IHRoZQorCSAqIGFkZHJlc3Mgd29uJ3QgY2hhbmdlIGFmdGVyIEd1QyBoYXMgYmVlbiB0b2xkIHdo
ZXJlIHRvIGZpbmQgaXQuIFRoZQorCSAqIEd1QyB3aWxsIGFsc28gdmFsaWRhdGUgdGhhdCB0aGUg
TFJDIGJhc2UgKyBzaXplIGZhbGwgd2l0aGluIHRoZQorCSAqIGFsbG93ZWQgR0dUVCByYW5nZS4K
KwkgKi8KKwlpZiAoYmxvYikgeworCQlvZmZzZXQgPSBndWNfYWRzX2dvbGRlbl9jdHh0X29mZnNl
dChndWMpOworCQlhZGRyX2dndHQgPSBpbnRlbF9ndWNfZ2d0dF9vZmZzZXQoZ3VjLCBndWMtPmFk
c192bWEpICsgb2Zmc2V0OworCQlpbmZvID0gJmJsb2ItPnN5c3RlbV9pbmZvOworCX0gZWxzZSB7
CisJCW1lbXNldCgmbG9jYWxfaW5mbywgMCwgc2l6ZW9mKGxvY2FsX2luZm8pKTsKKwkJaW5mbyA9
ICZsb2NhbF9pbmZvOworCQlmaWxsX2VuZ2luZV9lbmFibGVfbWFza3MoZ3QsIGluZm8pOworCX0K
KworCWZvciAoZW5naW5lX2NsYXNzID0gMDsgZW5naW5lX2NsYXNzIDw9IE1BWF9FTkdJTkVfQ0xB
U1M7ICsrZW5naW5lX2NsYXNzKSB7CisJCWlmIChlbmdpbmVfY2xhc3MgPT0gT1RIRVJfQ0xBU1Mp
CisJCQljb250aW51ZTsKKworCQlndWNfY2xhc3MgPSBlbmdpbmVfY2xhc3NfdG9fZ3VjX2NsYXNz
KGVuZ2luZV9jbGFzcyk7CisKKwkJaWYgKCFpbmZvLT5lbmdpbmVfZW5hYmxlZF9tYXNrc1tndWNf
Y2xhc3NdKQorCQkJY29udGludWU7CisKKwkJcmVhbF9zaXplID0gaW50ZWxfZW5naW5lX2NvbnRl
eHRfc2l6ZShndCwgZW5naW5lX2NsYXNzKTsKKwkJYWxsb2Nfc2l6ZSA9IFBBR0VfQUxJR04ocmVh
bF9zaXplKTsKKwkJdG90YWxfc2l6ZSArPSBhbGxvY19zaXplOworCisJCWlmICghYmxvYikKKwkJ
CWNvbnRpbnVlOworCisJCWJsb2ItPmFkcy5lbmdfc3RhdGVfc2l6ZVtndWNfY2xhc3NdID0gcmVh
bF9zaXplOworCQlibG9iLT5hZHMuZ29sZGVuX2NvbnRleHRfbHJjYVtndWNfY2xhc3NdID0gYWRk
cl9nZ3R0OworCQlhZGRyX2dndHQgKz0gYWxsb2Nfc2l6ZTsKKwl9CisKKwlpZiAoIWJsb2IpCisJ
CXJldHVybiB0b3RhbF9zaXplOworCisJR0VNX0JVR19PTihndWMtPmFkc19nb2xkZW5fY3R4dF9z
aXplICE9IHRvdGFsX3NpemUpOworCXJldHVybiB0b3RhbF9zaXplOworfQorCitzdGF0aWMgc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZmluZF9lbmdpbmVfc3RhdGUoc3RydWN0IGludGVsX2d0ICpn
dCwgdTggZW5naW5lX2NsYXNzKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsK
KwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0
LCBpZCkgeworCQlpZiAoZW5naW5lLT5jbGFzcyAhPSBlbmdpbmVfY2xhc3MpCisJCQljb250aW51
ZTsKKworCQlpZiAoIWVuZ2luZS0+ZGVmYXVsdF9zdGF0ZSkKKwkJCWNvbnRpbnVlOworCisJCXJl
dHVybiBlbmdpbmU7CisJfQorCisJcmV0dXJuIE5VTEw7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19p
bml0X2dvbGRlbl9jb250ZXh0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKIAlzdHJ1Y3QgX19n
dWNfYWRzX2Jsb2IgKmJsb2IgPSBndWMtPmFkc19ibG9iOwotCWNvbnN0IHUzMiBza2lwcGVkX3Np
emUgPSBMUkNfUFBIV1NQX1NaICogUEFHRV9TSVpFICsgTFJfSFdfQ09OVEVYVF9TSVpFOwotCXUz
MiBiYXNlOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwlzdHJ1Y3QgaW50ZWxf
Z3QgKmd0ID0gZ3VjX3RvX2d0KGd1Yyk7CisJdTMyIGFkZHJfZ2d0dCwgb2Zmc2V0OworCXUzMiB0
b3RhbF9zaXplID0gMCwgYWxsb2Nfc2l6ZSwgcmVhbF9zaXplOwogCXU4IGVuZ2luZV9jbGFzcywg
Z3VjX2NsYXNzOworCXU4ICpwdHI7CiAKLQkvKiBHdUMgc2NoZWR1bGluZyBwb2xpY2llcyAqLwot
CWd1Y19wb2xpY2llc19pbml0KCZibG9iLT5wb2xpY2llcyk7CisJLyogU2tpcCBleGVjbGlzdCBh
bmQgUFBHVFQgcmVnaXN0ZXJzICsgSFdTUCAqLworCWNvbnN0IHUzMiBscl9od19jb250ZXh0X3Np
emUgPSA4MCAqIHNpemVvZih1MzIpOworCWNvbnN0IHUzMiBza2lwX3NpemUgPSBMUkNfUFBIV1NQ
X1NaICogUEFHRV9TSVpFICsKKwkJbHJfaHdfY29udGV4dF9zaXplOworCisJaWYgKCFpbnRlbF91
Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZndC0+dWMpKQorCQlyZXR1cm47CisKKwlHRU1fQlVHX09O
KCFibG9iKTsKIAogCS8qCi0JICogR3VDIGV4cGVjdHMgYSBwZXItZW5naW5lLWNsYXNzIGNvbnRl
eHQgaW1hZ2UgYW5kIHNpemUKLQkgKiAobWludXMgaHdzcCBhbmQgcmluZyBjb250ZXh0KS4gVGhl
IGNvbnRleHQgaW1hZ2Ugd2lsbCBiZQotCSAqIHVzZWQgdG8gcmVpbml0aWFsaXplIGVuZ2luZXMg
YWZ0ZXIgYSByZXNldC4gSXQgbXVzdCBleGlzdAotCSAqIGFuZCBiZSBwaW5uZWQgaW4gdGhlIEdH
VFQsIHNvIHRoYXQgdGhlIGFkZHJlc3Mgd29uJ3QgY2hhbmdlIGFmdGVyCi0JICogd2UgaGF2ZSB0
b2xkIEd1QyB3aGVyZSB0byBmaW5kIGl0LiBUaGUgY29udGV4dCBzaXplIHdpbGwgYmUgdXNlZAot
CSAqIHRvIHZhbGlkYXRlIHRoYXQgdGhlIExSQyBiYXNlICsgc2l6ZSBmYWxsIHdpdGhpbiBhbGxv
d2VkIEdHVFQuCisJICogR28gYmFjayBhbmQgZmlsbCBpbiB0aGUgZ29sZGVuIGNvbnRleHQgZGF0
YSBub3cgdGhhdCBpdCBpcworCSAqIGF2YWlsYWJsZS4KIAkgKi8KKwlvZmZzZXQgPSBndWNfYWRz
X2dvbGRlbl9jdHh0X29mZnNldChndWMpOworCWFkZHJfZ2d0dCA9IGludGVsX2d1Y19nZ3R0X29m
ZnNldChndWMsIGd1Yy0+YWRzX3ZtYSkgKyBvZmZzZXQ7CisJcHRyID0gKCh1OCAqKSBibG9iKSAr
IG9mZnNldDsKKwogCWZvciAoZW5naW5lX2NsYXNzID0gMDsgZW5naW5lX2NsYXNzIDw9IE1BWF9F
TkdJTkVfQ0xBU1M7ICsrZW5naW5lX2NsYXNzKSB7CiAJCWlmIChlbmdpbmVfY2xhc3MgPT0gT1RI
RVJfQ0xBU1MpCiAJCQljb250aW51ZTsKIAogCQlndWNfY2xhc3MgPSBlbmdpbmVfY2xhc3NfdG9f
Z3VjX2NsYXNzKGVuZ2luZV9jbGFzcyk7CiAKLQkJLyoKLQkJICogVE9ETzogU2V0IGNvbnRleHQg
cG9pbnRlciB0byBkZWZhdWx0IHN0YXRlIHRvIGFsbG93Ci0JCSAqIEd1QyB0byByZS1pbml0IGd1
aWx0eSBjb250ZXh0cyBhZnRlciBpbnRlcm5hbCByZXNldC4KLQkJICovCi0JCWJsb2ItPmFkcy5n
b2xkZW5fY29udGV4dF9scmNhW2d1Y19jbGFzc10gPSAwOwotCQlibG9iLT5hZHMuZW5nX3N0YXRl
X3NpemVbZ3VjX2NsYXNzXSA9Ci0JCQlpbnRlbF9lbmdpbmVfY29udGV4dF9zaXplKGd1Y190b19n
dChndWMpLAotCQkJCQkJICBlbmdpbmVfY2xhc3MpIC0KLQkJCXNraXBwZWRfc2l6ZTsKKwkJaWYg
KCFibG9iLT5zeXN0ZW1faW5mby5lbmdpbmVfZW5hYmxlZF9tYXNrc1tndWNfY2xhc3NdKQorCQkJ
Y29udGludWU7CisKKwkJcmVhbF9zaXplID0gaW50ZWxfZW5naW5lX2NvbnRleHRfc2l6ZShndCwg
ZW5naW5lX2NsYXNzKTsKKwkJYWxsb2Nfc2l6ZSA9IFBBR0VfQUxJR04ocmVhbF9zaXplKTsKKwkJ
dG90YWxfc2l6ZSArPSBhbGxvY19zaXplOworCisJCWVuZ2luZSA9IGZpbmRfZW5naW5lX3N0YXRl
KGd0LCBlbmdpbmVfY2xhc3MpOworCQlpZiAoIWVuZ2luZSkgeworCQkJZHJtX2VycigmZ3QtPmk5
MTUtPmRybSwgIk5vIGVuZ2luZSBzdGF0ZSByZWNvcmRlZCBmb3IgY2xhc3MgJWQhXG4iLAorCQkJ
CWVuZ2luZV9jbGFzcyk7CisJCQlibG9iLT5hZHMuZW5nX3N0YXRlX3NpemVbZ3VjX2NsYXNzXSA9
IDA7CisJCQlibG9iLT5hZHMuZ29sZGVuX2NvbnRleHRfbHJjYVtndWNfY2xhc3NdID0gMDsKKwkJ
CWNvbnRpbnVlOworCQl9CisKKwkJR0VNX0JVR19PTihibG9iLT5hZHMuZW5nX3N0YXRlX3NpemVb
Z3VjX2NsYXNzXSAhPSByZWFsX3NpemUpOworCQlHRU1fQlVHX09OKGJsb2ItPmFkcy5nb2xkZW5f
Y29udGV4dF9scmNhW2d1Y19jbGFzc10gIT0gYWRkcl9nZ3R0KTsKKwkJYWRkcl9nZ3R0ICs9IGFs
bG9jX3NpemU7CisKKwkJc2htZW1fcmVhZChlbmdpbmUtPmRlZmF1bHRfc3RhdGUsIHNraXBfc2l6
ZSwgcHRyICsgc2tpcF9zaXplLAorCQkJICAgcmVhbF9zaXplIC0gc2tpcF9zaXplKTsKKwkJcHRy
ICs9IGFsbG9jX3NpemU7CiAJfQogCisJR0VNX0JVR19PTihndWMtPmFkc19nb2xkZW5fY3R4dF9z
aXplICE9IHRvdGFsX3NpemUpOworfQorCitzdGF0aWMgdm9pZCBfX2d1Y19hZHNfaW5pdChzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJc3RydWN0IGludGVsX2d0ICpndCA9IGd1Y190b19ndChn
dWMpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZ3QtPmk5MTU7CisJc3RydWN0
IF9fZ3VjX2Fkc19ibG9iICpibG9iID0gZ3VjLT5hZHNfYmxvYjsKKwl1MzIgYmFzZTsKKworCS8q
IEd1QyBzY2hlZHVsaW5nIHBvbGljaWVzICovCisJZ3VjX3BvbGljaWVzX2luaXQoZ3VjLCAmYmxv
Yi0+cG9saWNpZXMpOworCiAJLyogU3lzdGVtIGluZm8gKi8KLQlibG9iLT5zeXN0ZW1faW5mby5l
bmdpbmVfZW5hYmxlZF9tYXNrc1tHVUNfUkVOREVSX0NMQVNTXSA9IDE7Ci0JYmxvYi0+c3lzdGVt
X2luZm8uZW5naW5lX2VuYWJsZWRfbWFza3NbR1VDX0JMSVRURVJfQ0xBU1NdID0gMTsKLQlibG9i
LT5zeXN0ZW1faW5mby5lbmdpbmVfZW5hYmxlZF9tYXNrc1tHVUNfVklERU9fQ0xBU1NdID0gVkRC
T1hfTUFTSyhndCk7Ci0JYmxvYi0+c3lzdGVtX2luZm8uZW5naW5lX2VuYWJsZWRfbWFza3NbR1VD
X1ZJREVPRU5IQU5DRV9DTEFTU10gPSBWRUJPWF9NQVNLKGd0KTsKKwlmaWxsX2VuZ2luZV9lbmFi
bGVfbWFza3MoZ3QsICZibG9iLT5zeXN0ZW1faW5mbyk7CiAKIAlibG9iLT5zeXN0ZW1faW5mby5n
ZW5lcmljX2d0X3N5c2luZm9bR1VDX0dFTkVSSUNfR1RfU1lTSU5GT19TTElDRV9FTkFCTEVEXSA9
CiAJCWh3ZWlnaHQ4KGd0LT5pbmZvLnNzZXUuc2xpY2VfbWFzayk7CkBAIC0xNDUsNiArNTE0LDkg
QEAgc3RhdGljIHZvaWQgX19ndWNfYWRzX2luaXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCQkJ
IEdFTjEyX0RPT1JCRUxMU19QRVJfU1FJREkpICsgMTsKIAl9CiAKKwkvKiBHb2xkZW4gY29udGV4
dHMgZm9yIHJlLWluaXRpYWxpc2luZyBhZnRlciBhIHdhdGNoZG9nIHJlc2V0ICovCisJZ3VjX3By
ZXBfZ29sZGVuX2NvbnRleHQoZ3VjLCBibG9iKTsKKwogCWd1Y19tYXBwaW5nX3RhYmxlX2luaXQo
Z3VjX3RvX2d0KGd1YyksICZibG9iLT5zeXN0ZW1faW5mbyk7CiAKIAliYXNlID0gaW50ZWxfZ3Vj
X2dndHRfb2Zmc2V0KGd1YywgZ3VjLT5hZHNfdm1hKTsKQEAgLTE1Myw2ICs1MjUsOSBAQCBzdGF0
aWMgdm9pZCBfX2d1Y19hZHNfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJYmxvYi0+YWRz
LnNjaGVkdWxlcl9wb2xpY2llcyA9IGJhc2UgKyBwdHJfb2Zmc2V0KGJsb2IsIHBvbGljaWVzKTsK
IAlibG9iLT5hZHMuZ3Rfc3lzdGVtX2luZm8gPSBiYXNlICsgcHRyX29mZnNldChibG9iLCBzeXN0
ZW1faW5mbyk7CiAKKwkvKiBNTUlPIHNhdmUvcmVzdG9yZSBsaXN0ICovCisJZ3VjX21taW9fcmVn
X3N0YXRlX2luaXQoZ3VjLCBibG9iKTsKKwogCS8qIFByaXZhdGUgRGF0YSAqLwogCWJsb2ItPmFk
cy5wcml2YXRlX2RhdGEgPSBiYXNlICsgZ3VjX2Fkc19wcml2YXRlX2RhdGFfb2Zmc2V0KGd1Yyk7
CiAKQEAgLTE3Myw2ICs1NDgsMTkgQEAgaW50IGludGVsX2d1Y19hZHNfY3JlYXRlKHN0cnVjdCBp
bnRlbF9ndWMgKmd1YykKIAogCUdFTV9CVUdfT04oZ3VjLT5hZHNfdm1hKTsKIAorCS8qIE5lZWQg
dG8gY2FsY3VsYXRlIHRoZSByZWcgc3RhdGUgc2l6ZSBkeW5hbWljYWxseTogKi8KKwlyZXQgPSBn
dWNfbW1pb19yZWdfc3RhdGVfcXVlcnkoZ3VjKTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0dXJuIHJl
dDsKKwlndWMtPmFkc19yZWdzZXRfc2l6ZSA9IHJldDsKKworCS8qIExpa2V3aXNlIHRoZSBnb2xk
ZW4gY29udGV4dHM6ICovCisJcmV0ID0gZ3VjX3ByZXBfZ29sZGVuX2NvbnRleHQoZ3VjLCBOVUxM
KTsKKwlpZiAocmV0IDwgMCkKKwkJcmV0dXJuIHJldDsKKwlndWMtPmFkc19nb2xkZW5fY3R4dF9z
aXplID0gcmV0OworCisJLyogTm93IHRoZSB0b3RhbCBzaXplIGNhbiBiZSBkZXRlcm1pbmVkOiAq
LwogCXNpemUgPSBndWNfYWRzX2Jsb2Jfc2l6ZShndWMpOwogCiAJcmV0ID0gaW50ZWxfZ3VjX2Fs
bG9jYXRlX2FuZF9tYXBfdm1hKGd1Yywgc2l6ZSwgJmd1Yy0+YWRzX3ZtYSwKQEAgLTE4NSw2ICs1
NzMsMTggQEAgaW50IGludGVsX2d1Y19hZHNfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykK
IAlyZXR1cm4gMDsKIH0KIAordm9pZCBpbnRlbF9ndWNfYWRzX2luaXRfbGF0ZShzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMpCit7CisJLyoKKwkgKiBUaGUgZ29sZGVuIGNvbnRleHQgc2V0dXAgcmVxdWly
ZXMgdGhlIHNhdmVkIGVuZ2luZSBzdGF0ZSBmcm9tCisJICogX19lbmdpbmVzX3JlY29yZF9kZWZh
dWx0cygpLiBIb3dldmVyLCB0aGF0IHJlcXVpcmVzIGVuZ2luZXMgdG8gYmUKKwkgKiBvcGVyYXRp
b25hbCB3aGljaCBtZWFucyB0aGUgQURTIG11c3QgYWxyZWFkeSBoYXZlIGJlZW4gY29uZmlndXJl
ZC4KKwkgKiBGb3J0dW5hdGVseSwgdGhlIGdvbGRlbiBjb250ZXh0IHN0YXRlIGlzIG5vdCBuZWVk
ZWQgdW50aWwgYSBoYW5nCisJICogb2NjdXJzLCBzbyBpdCBjYW4gYmUgZmlsbGVkIGluIGR1cmlu
ZyB0aGlzIGxhdGUgaW5pdCBwaGFzZS4KKwkgKi8KKwlndWNfaW5pdF9nb2xkZW5fY29udGV4dChn
dWMpOworfQorCiB2b2lkIGludGVsX2d1Y19hZHNfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCiB7CiAJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJmd1Yy0+YWRzX3ZtYSwgSTkxNV9W
TUFfUkVMRUFTRV9NQVApOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMv
aW50ZWxfZ3VjX2Fkcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Fk
cy5oCmluZGV4IGIwMGQzYWUxMTEzYS4uM2Q4NTA1MWQ1N2U0IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfYWRzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Fkcy5oCkBAIC03LDkgKzcsMTMgQEAKICNkZWZpbmUgX0lO
VEVMX0dVQ19BRFNfSF8KIAogc3RydWN0IGludGVsX2d1YzsKK3N0cnVjdCBkcm1fcHJpbnRlcjsK
IAogaW50IGludGVsX2d1Y19hZHNfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiB2b2lk
IGludGVsX2d1Y19hZHNfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwordm9pZCBpbnRl
bF9ndWNfYWRzX2luaXRfbGF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRlbF9n
dWNfYWRzX3Jlc2V0KHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7Cit2b2lkIGludGVsX2d1Y19hZHNf
cHJpbnRfcG9saWN5X2luZm8oc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCSAgICAgc3RydWN0
IGRybV9wcmludGVyICpwKTsKIAogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2lu
dGVsX2d1Y19jdC5jCmluZGV4IDgzZWM2MGVhM2Y4OS4uMWQ3Mjk3Yzc4MDRmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuYwpAQCAtNzMsNiArNzMsNyBAQCBzdGF0
aWMgaW5saW5lIHN0cnVjdCBkcm1fZGV2aWNlICpjdF90b19kcm0oc3RydWN0IGludGVsX2d1Y19j
dCAqY3QpCiAjZGVmaW5lIENUQl9ERVNDX1NJWkUJCUFMSUdOKHNpemVvZihzdHJ1Y3QgZ3VjX2N0
X2J1ZmZlcl9kZXNjKSwgU1pfMkspCiAjZGVmaW5lIENUQl9IMkdfQlVGRkVSX1NJWkUJKFNaXzRL
KQogI2RlZmluZSBDVEJfRzJIX0JVRkZFUl9TSVpFCSg0ICogQ1RCX0gyR19CVUZGRVJfU0laRSkK
KyNkZWZpbmUgRzJIX1JPT01fQlVGRkVSX1NJWkUJKENUQl9HMkhfQlVGRkVSX1NJWkUgLyA0KQog
CiBzdHJ1Y3QgY3RfcmVxdWVzdCB7CiAJc3RydWN0IGxpc3RfaGVhZCBsaW5rOwpAQCAtMTA4LDYg
KzEwOSw3IEBAIHZvaWQgaW50ZWxfZ3VjX2N0X2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1Y19j
dCAqY3QpCiAJSU5JVF9MSVNUX0hFQUQoJmN0LT5yZXF1ZXN0cy5pbmNvbWluZyk7CiAJSU5JVF9X
T1JLKCZjdC0+cmVxdWVzdHMud29ya2VyLCBjdF9pbmNvbWluZ19yZXF1ZXN0X3dvcmtlcl9mdW5j
KTsKIAl0YXNrbGV0X3NldHVwKCZjdC0+cmVjZWl2ZV90YXNrbGV0LCBjdF9yZWNlaXZlX3Rhc2ts
ZXRfZnVuYyk7CisJaW5pdF93YWl0cXVldWVfaGVhZCgmY3QtPndxKTsKIH0KIAogc3RhdGljIGlu
bGluZSBjb25zdCBjaGFyICpndWNfY3RfYnVmZmVyX3R5cGVfdG9fc3RyKHUzMiB0eXBlKQpAQCAt
MTI5LDIzICsxMzEsMjcgQEAgc3RhdGljIHZvaWQgZ3VjX2N0X2J1ZmZlcl9kZXNjX2luaXQoc3Ry
dWN0IGd1Y19jdF9idWZmZXJfZGVzYyAqZGVzYykKIAogc3RhdGljIHZvaWQgZ3VjX2N0X2J1ZmZl
cl9yZXNldChzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciAqY3RiKQogeworCXUzMiBzcGFjZTsK
KwogCWN0Yi0+YnJva2VuID0gZmFsc2U7CiAJY3RiLT50YWlsID0gMDsKIAljdGItPmhlYWQgPSAw
OwotCWN0Yi0+c3BhY2UgPSBDSVJDX1NQQUNFKGN0Yi0+dGFpbCwgY3RiLT5oZWFkLCBjdGItPnNp
emUpOworCXNwYWNlID0gQ0lSQ19TUEFDRShjdGItPnRhaWwsIGN0Yi0+aGVhZCwgY3RiLT5zaXpl
KSAtIGN0Yi0+cmVzdl9zcGFjZTsKKwlhdG9taWNfc2V0KCZjdGItPnNwYWNlLCBzcGFjZSk7CiAK
IAlndWNfY3RfYnVmZmVyX2Rlc2NfaW5pdChjdGItPmRlc2MpOwogfQogCiBzdGF0aWMgdm9pZCBn
dWNfY3RfYnVmZmVyX2luaXQoc3RydWN0IGludGVsX2d1Y19jdF9idWZmZXIgKmN0YiwKIAkJCSAg
ICAgICBzdHJ1Y3QgZ3VjX2N0X2J1ZmZlcl9kZXNjICpkZXNjLAotCQkJICAgICAgIHUzMiAqY21k
cywgdTMyIHNpemVfaW5fYnl0ZXMpCisJCQkgICAgICAgdTMyICpjbWRzLCB1MzIgc2l6ZV9pbl9i
eXRlcywgdTMyIHJlc3Zfc3BhY2UpCiB7CiAJR0VNX0JVR19PTihzaXplX2luX2J5dGVzICUgNCk7
CiAKIAljdGItPmRlc2MgPSBkZXNjOwogCWN0Yi0+Y21kcyA9IGNtZHM7CiAJY3RiLT5zaXplID0g
c2l6ZV9pbl9ieXRlcyAvIDQ7CisJY3RiLT5yZXN2X3NwYWNlID0gcmVzdl9zcGFjZSAvIDQ7CiAK
IAlndWNfY3RfYnVmZmVyX3Jlc2V0KGN0Yik7CiB9CkBAIC0yMjYsNiArMjMyLDcgQEAgaW50IGlu
dGVsX2d1Y19jdF9pbml0KHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0KQogCXN0cnVjdCBndWNfY3Rf
YnVmZmVyX2Rlc2MgKmRlc2M7CiAJdTMyIGJsb2Jfc2l6ZTsKIAl1MzIgY21kc19zaXplOworCXUz
MiByZXN2X3NwYWNlOwogCXZvaWQgKmJsb2I7CiAJdTMyICpjbWRzOwogCWludCBlcnI7CkBAIC0y
NTAsMTkgKzI1NywyMyBAQCBpbnQgaW50ZWxfZ3VjX2N0X2luaXQoc3RydWN0IGludGVsX2d1Y19j
dCAqY3QpCiAJZGVzYyA9IGJsb2I7CiAJY21kcyA9IGJsb2IgKyAyICogQ1RCX0RFU0NfU0laRTsK
IAljbWRzX3NpemUgPSBDVEJfSDJHX0JVRkZFUl9TSVpFOwotCUNUX0RFQlVHKGN0LCAiJXMgZGVz
YyAlI3R4IGNtZHMgJSN0eCBzaXplICV1XG4iLCAic2VuZCIsCi0JCSBwdHJkaWZmKGRlc2MsIGJs
b2IpLCBwdHJkaWZmKGNtZHMsIGJsb2IpLCBjbWRzX3NpemUpOworCXJlc3Zfc3BhY2UgPSAwOwor
CUNUX0RFQlVHKGN0LCAiJXMgZGVzYyAlI3R4IGNtZHMgJSN0eCBzaXplICV1LyV1XG4iLCAic2Vu
ZCIsCisJCSBwdHJkaWZmKGRlc2MsIGJsb2IpLCBwdHJkaWZmKGNtZHMsIGJsb2IpLCBjbWRzX3Np
emUsCisJCSByZXN2X3NwYWNlKTsKIAotCWd1Y19jdF9idWZmZXJfaW5pdCgmY3QtPmN0YnMuc2Vu
ZCwgZGVzYywgY21kcywgY21kc19zaXplKTsKKwlndWNfY3RfYnVmZmVyX2luaXQoJmN0LT5jdGJz
LnNlbmQsIGRlc2MsIGNtZHMsIGNtZHNfc2l6ZSwgcmVzdl9zcGFjZSk7CiAKIAkvKiBzdG9yZSBw
b2ludGVycyB0byBkZXNjIGFuZCBjbWRzIGZvciByZWN2IGN0YiAqLwogCWRlc2MgPSBibG9iICsg
Q1RCX0RFU0NfU0laRTsKIAljbWRzID0gYmxvYiArIDIgKiBDVEJfREVTQ19TSVpFICsgQ1RCX0gy
R19CVUZGRVJfU0laRTsKIAljbWRzX3NpemUgPSBDVEJfRzJIX0JVRkZFUl9TSVpFOwotCUNUX0RF
QlVHKGN0LCAiJXMgZGVzYyAlI3R4IGNtZHMgJSN0eCBzaXplICV1XG4iLCAicmVjdiIsCi0JCSBw
dHJkaWZmKGRlc2MsIGJsb2IpLCBwdHJkaWZmKGNtZHMsIGJsb2IpLCBjbWRzX3NpemUpOworCXJl
c3Zfc3BhY2UgPSBHMkhfUk9PTV9CVUZGRVJfU0laRTsKKwlDVF9ERUJVRyhjdCwgIiVzIGRlc2Mg
JSN0eCBjbWRzICUjdHggc2l6ZSAldS8ldVxuIiwgInJlY3YiLAorCQkgcHRyZGlmZihkZXNjLCBi
bG9iKSwgcHRyZGlmZihjbWRzLCBibG9iKSwgY21kc19zaXplLAorCQkgcmVzdl9zcGFjZSk7CiAK
LQlndWNfY3RfYnVmZmVyX2luaXQoJmN0LT5jdGJzLnJlY3YsIGRlc2MsIGNtZHMsIGNtZHNfc2l6
ZSk7CisJZ3VjX2N0X2J1ZmZlcl9pbml0KCZjdC0+Y3Ricy5yZWN2LCBkZXNjLCBjbWRzLCBjbWRz
X3NpemUsIHJlc3Zfc3BhY2UpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC00NjEsOCArNDcyLDggQEAg
c3RhdGljIGludCBjdF93cml0ZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwKIAogCS8qIHVwZGF0
ZSBsb2NhbCBjb3BpZXMgKi8KIAljdGItPnRhaWwgPSB0YWlsOwotCUdFTV9CVUdfT04oY3RiLT5z
cGFjZSA8IGxlbiArIEdVQ19DVEJfSERSX0xFTik7Ci0JY3RiLT5zcGFjZSAtPSBsZW4gKyBHVUNf
Q1RCX0hEUl9MRU47CisJR0VNX0JVR19PTihhdG9taWNfcmVhZCgmY3RiLT5zcGFjZSkgPCBsZW4g
KyBHVUNfQ1RCX0hEUl9MRU4pOworCWF0b21pY19zdWIobGVuICsgR1VDX0NUQl9IRFJfTEVOLCAm
Y3RiLT5zcGFjZSk7CiAKIAkvKiBub3cgdXBkYXRlIGRlc2NyaXB0b3IgKi8KIAlXUklURV9PTkNF
KGRlc2MtPnRhaWwsIHRhaWwpOwpAQCAtNTM3LDYgKzU0OCwzMiBAQCBzdGF0aWMgaW5saW5lIGJv
b2wgY3RfZGVhZGxvY2tlZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkKIAlyZXR1cm4gcmV0Owog
fQogCitzdGF0aWMgaW5saW5lIGJvb2wgZzJoX2hhc19yb29tKHN0cnVjdCBpbnRlbF9ndWNfY3Qg
KmN0LCB1MzIgZzJoX2xlbl9kdykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciAqY3Ri
ID0gJmN0LT5jdGJzLnJlY3Y7CisKKwkvKgorCSAqIFdlIGxlYXZlIGEgY2VydGFpbiBhbW91bnQg
b2Ygc3BhY2UgaW4gdGhlIEcySCBDVEIgYnVmZmVyIGZvcgorCSAqIHVuZXhwZWN0ZWQgRzJIIENU
QnMgKGUuZy4gbG9nZ2luZywgZW5naW5lIGhhbmcsIGV0Yy4uLikKKwkgKi8KKwlyZXR1cm4gIWcy
aF9sZW5fZHcgfHwgYXRvbWljX3JlYWQoJmN0Yi0+c3BhY2UpID49IGcyaF9sZW5fZHc7Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZCBnMmhfcmVzZXJ2ZV9zcGFjZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0
ICpjdCwgdTMyIGcyaF9sZW5fZHcpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY3QtPmN0YnMu
c2VuZC5sb2NrKTsKKworCUdFTV9CVUdfT04oIWcyaF9oYXNfcm9vbShjdCwgZzJoX2xlbl9kdykp
OworCisJaWYgKGcyaF9sZW5fZHcpCisJCWF0b21pY19zdWIoZzJoX2xlbl9kdywgJmN0LT5jdGJz
LnJlY3Yuc3BhY2UpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZzJoX3JlbGVhc2Vfc3BhY2Uo
c3RydWN0IGludGVsX2d1Y19jdCAqY3QsIHUzMiBnMmhfbGVuX2R3KQoreworCWF0b21pY19hZGQo
ZzJoX2xlbl9kdywgJmN0LT5jdGJzLnJlY3Yuc3BhY2UpOworfQorCiBzdGF0aWMgaW5saW5lIGJv
b2wgaDJnX2hhc19yb29tKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LCB1MzIgbGVuX2R3KQogewog
CXN0cnVjdCBpbnRlbF9ndWNfY3RfYnVmZmVyICpjdGIgPSAmY3QtPmN0YnMuc2VuZDsKQEAgLTU0
NCw3ICs1ODEsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaDJnX2hhc19yb29tKHN0cnVjdCBpbnRl
bF9ndWNfY3QgKmN0LCB1MzIgbGVuX2R3KQogCXUzMiBoZWFkOwogCXUzMiBzcGFjZTsKIAotCWlm
IChjdGItPnNwYWNlID49IGxlbl9kdykKKwlpZiAoYXRvbWljX3JlYWQoJmN0Yi0+c3BhY2UpID49
IGxlbl9kdykKIAkJcmV0dXJuIHRydWU7CiAKIAloZWFkID0gUkVBRF9PTkNFKGRlc2MtPmhlYWQp
OwpAQCAtNTU3LDE2ICs1OTQsMTYgQEAgc3RhdGljIGlubGluZSBib29sIGgyZ19oYXNfcm9vbShz
dHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgdTMyIGxlbl9kdykKIAl9CiAKIAlzcGFjZSA9IENJUkNf
U1BBQ0UoY3RiLT50YWlsLCBoZWFkLCBjdGItPnNpemUpOwotCWN0Yi0+c3BhY2UgPSBzcGFjZTsK
KwlhdG9taWNfc2V0KCZjdGItPnNwYWNlLCBzcGFjZSk7CiAKIAlyZXR1cm4gc3BhY2UgPj0gbGVu
X2R3OwogfQogCi1zdGF0aWMgaW50IGhhc19yb29tX25iKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0
LCB1MzIgbGVuX2R3KQorc3RhdGljIGludCBoYXNfcm9vbV9uYihzdHJ1Y3QgaW50ZWxfZ3VjX2N0
ICpjdCwgdTMyIGgyZ19kdywgdTMyIGcyaF9kdykKIHsKIAlsb2NrZGVwX2Fzc2VydF9oZWxkKCZj
dC0+Y3Ricy5zZW5kLmxvY2spOwogCi0JaWYgKHVubGlrZWx5KCFoMmdfaGFzX3Jvb20oY3QsIGxl
bl9kdykpKSB7CisJaWYgKHVubGlrZWx5KCFoMmdfaGFzX3Jvb20oY3QsIGgyZ19kdykgfHwgIWcy
aF9oYXNfcm9vbShjdCwgZzJoX2R3KSkpIHsKIAkJaWYgKGN0LT5zdGFsbF90aW1lID09IEtUSU1F
X01BWCkKIAkJCWN0LT5zdGFsbF90aW1lID0ga3RpbWVfZ2V0KCk7CiAKQEAgLTU4MCw2ICs2MTcs
MTAgQEAgc3RhdGljIGludCBoYXNfcm9vbV9uYihzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgdTMy
IGxlbl9kdykKIAlyZXR1cm4gMDsKIH0KIAorI2RlZmluZSBHMkhfTEVOX0RXKGYpICh7IHR5cGVv
ZiAoZikgZl8gPSAoZik7IFwKKwkgRklFTERfR0VUKElOVEVMX0dVQ19DVF9TRU5EX0cySF9EV19N
QVNLLCBmXykgPyBcCisJIEZJRUxEX0dFVChJTlRFTF9HVUNfQ1RfU0VORF9HMkhfRFdfTUFTSywg
Zl8pICsgXAorCSBHVUNfQ1RCX0hYR19NU0dfTUlOX0xFTiA6IDA7IH0pCiBzdGF0aWMgaW50IGN0
X3NlbmRfbmIoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsCiAJCSAgICAgIGNvbnN0IHUzMiAqYWN0
aW9uLAogCQkgICAgICB1MzIgbGVuLApAQCAtNTg3LDEyICs2MjgsMTMgQEAgc3RhdGljIGludCBj
dF9zZW5kX25iKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LAogewogCXN0cnVjdCBpbnRlbF9ndWNf
Y3RfYnVmZmVyICpjdGIgPSAmY3QtPmN0YnMuc2VuZDsKIAl1bnNpZ25lZCBsb25nIHNwaW5fZmxh
Z3M7CisJdTMyIGcyaF9sZW5fZHcgPSBHMkhfTEVOX0RXKGZsYWdzKTsKIAl1MzIgZmVuY2U7CiAJ
aW50IHJldDsKIAogCXNwaW5fbG9ja19pcnFzYXZlKCZjdGItPmxvY2ssIHNwaW5fZmxhZ3MpOwog
Ci0JcmV0ID0gaGFzX3Jvb21fbmIoY3QsIGxlbiArIEdVQ19DVEJfSERSX0xFTik7CisJcmV0ID0g
aGFzX3Jvb21fbmIoY3QsIGxlbiArIEdVQ19DVEJfSERSX0xFTiwgZzJoX2xlbl9kdyk7CiAJaWYg
KHVubGlrZWx5KHJldCkpCiAJCWdvdG8gb3V0OwogCkBAIC02MDEsNiArNjQzLDcgQEAgc3RhdGlj
IGludCBjdF9zZW5kX25iKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LAogCWlmICh1bmxpa2VseShy
ZXQpKQogCQlnb3RvIG91dDsKIAorCWcyaF9yZXNlcnZlX3NwYWNlKGN0LCBnMmhfbGVuX2R3KTsK
IAlpbnRlbF9ndWNfbm90aWZ5KGN0X3RvX2d1YyhjdCkpOwogCiBvdXQ6CkBAIC02MzIsMTEgKzY3
NSwxMyBAQCBzdGF0aWMgaW50IGN0X3NlbmQoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsCiAJLyoK
IAkgKiBXZSB1c2UgYSBsYXp5IHNwaW4gd2FpdCBsb29wIGhlcmUgYXMgd2UgYmVsaWV2ZSB0aGF0
IGlmIHRoZSBDVAogCSAqIGJ1ZmZlcnMgYXJlIHNpemVkIGNvcnJlY3RseSB0aGUgZmxvdyBjb250
cm9sIGNvbmRpdGlvbiBzaG91bGQgYmUKLQkgKiByYXJlLgorCSAqIHJhcmUuIFJlc2VydmluZyB0
aGUgbWF4aW11bSBzaXplIGluIHRoZSBHMkggY3JlZGl0cyBhcyB3ZSBkb24ndCBrbm93CisJICog
aG93IGJpZyB0aGUgcmVzcG9uc2UgaXMgZ29pbmcgdG8gYmUuCiAJICovCiByZXRyeToKIAlzcGlu
X2xvY2tfaXJxc2F2ZSgmY3RiLT5sb2NrLCBmbGFncyk7Ci0JaWYgKHVubGlrZWx5KCFoMmdfaGFz
X3Jvb20oY3QsIGxlbiArIEdVQ19DVEJfSERSX0xFTikpKSB7CisJaWYgKHVubGlrZWx5KCFoMmdf
aGFzX3Jvb20oY3QsIGxlbiArIEdVQ19DVEJfSERSX0xFTikgfHwKKwkJICAgICAhZzJoX2hhc19y
b29tKGN0LCBHVUNfQ1RCX0hYR19NU0dfTUFYX0xFTikpKSB7CiAJCWlmIChjdC0+c3RhbGxfdGlt
ZSA9PSBLVElNRV9NQVgpCiAJCQljdC0+c3RhbGxfdGltZSA9IGt0aW1lX2dldCgpOwogCQlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZjdGItPmxvY2ssIGZsYWdzKTsKQEAgLTY2NCw2ICs3MDksNyBA
QCBzdGF0aWMgaW50IGN0X3NlbmQoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsCiAJc3Bpbl91bmxv
Y2soJmN0LT5yZXF1ZXN0cy5sb2NrKTsKIAogCWVyciA9IGN0X3dyaXRlKGN0LCBhY3Rpb24sIGxl
biwgZmVuY2UsIDApOworCWcyaF9yZXNlcnZlX3NwYWNlKGN0LCBHVUNfQ1RCX0hYR19NU0dfTUFY
X0xFTik7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdGItPmxvY2ssIGZsYWdzKTsKIApA
QCAtNjczLDYgKzcxOSw3IEBAIHN0YXRpYyBpbnQgY3Rfc2VuZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0
ICpjdCwKIAlpbnRlbF9ndWNfbm90aWZ5KGN0X3RvX2d1YyhjdCkpOwogCiAJZXJyID0gd2FpdF9m
b3JfY3RfcmVxdWVzdF91cGRhdGUoJnJlcXVlc3QsIHN0YXR1cyk7CisJZzJoX3JlbGVhc2Vfc3Bh
Y2UoY3QsIEdVQ19DVEJfSFhHX01TR19NQVhfTEVOKTsKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJ
Z290byB1bmxpbms7CiAKQEAgLTcxMSw3ICs3NTgsMTAgQEAgaW50IGludGVsX2d1Y19jdF9zZW5k
KHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LCBjb25zdCB1MzIgKmFjdGlvbiwgdTMyIGxlbiwKIAlp
bnQgcmV0OwogCiAJaWYgKHVubGlrZWx5KCFjdC0+ZW5hYmxlZCkpIHsKLQkJV0FSTigxLCAiVW5l
eHBlY3RlZCBzZW5kOiBhY3Rpb249JSN4XG4iLCAqYWN0aW9uKTsKKwkJc3RydWN0IGludGVsX2d1
YyAqZ3VjID0gY3RfdG9fZ3VjKGN0KTsKKwkJc3RydWN0IGludGVsX3VjICp1YyA9IGNvbnRhaW5l
cl9vZihndWMsIHN0cnVjdCBpbnRlbF91YywgZ3VjKTsKKworCQlXQVJOKCF1Yy0+cmVzZXRfaW5f
cHJvZ3Jlc3MsICJVbmV4cGVjdGVkIHNlbmQ6IGFjdGlvbj0lI3hcbiIsICphY3Rpb24pOwogCQly
ZXR1cm4gLUVOT0RFVjsKIAl9CiAKQEAgLTkyOCw2ICs5NzgsMTkgQEAgc3RhdGljIGludCBjdF9w
cm9jZXNzX3JlcXVlc3Qoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsIHN0cnVjdCBjdF9pbmNvbWlu
Z19tc2cgKnIKIAljYXNlIElOVEVMX0dVQ19BQ1RJT05fREVGQVVMVDoKIAkJcmV0ID0gaW50ZWxf
Z3VjX3RvX2hvc3RfcHJvY2Vzc19yZWN2X21zZyhndWMsIHBheWxvYWQsIGxlbik7CiAJCWJyZWFr
OworCWNhc2UgSU5URUxfR1VDX0FDVElPTl9ERVJFR0lTVEVSX0NPTlRFWFRfRE9ORToKKwkJcmV0
ID0gaW50ZWxfZ3VjX2RlcmVnaXN0ZXJfZG9uZV9wcm9jZXNzX21zZyhndWMsIHBheWxvYWQsCisJ
CQkJCQkJICAgIGxlbik7CisJCWJyZWFrOworCWNhc2UgSU5URUxfR1VDX0FDVElPTl9TQ0hFRF9D
T05URVhUX01PREVfRE9ORToKKwkJcmV0ID0gaW50ZWxfZ3VjX3NjaGVkX2RvbmVfcHJvY2Vzc19t
c2coZ3VjLCBwYXlsb2FkLCBsZW4pOworCQlicmVhazsKKwljYXNlIElOVEVMX0dVQ19BQ1RJT05f
Q09OVEVYVF9SRVNFVF9OT1RJRklDQVRJT046CisJCXJldCA9IGludGVsX2d1Y19jb250ZXh0X3Jl
c2V0X3Byb2Nlc3NfbXNnKGd1YywgcGF5bG9hZCwgbGVuKTsKKwkJYnJlYWs7CisJY2FzZSBJTlRF
TF9HVUNfQUNUSU9OX0VOR0lORV9GQUlMVVJFX05PVElGSUNBVElPTjoKKwkJcmV0ID0gaW50ZWxf
Z3VjX2VuZ2luZV9mYWlsdXJlX3Byb2Nlc3NfbXNnKGd1YywgcGF5bG9hZCwgbGVuKTsKKwkJYnJl
YWs7CiAJZGVmYXVsdDoKIAkJcmV0ID0gLUVPUE5PVFNVUFA7CiAJCWJyZWFrOwpAQCAtOTg1LDEw
ICsxMDQ4LDIyIEBAIHN0YXRpYyB2b2lkIGN0X2luY29taW5nX3JlcXVlc3Rfd29ya2VyX2Z1bmMo
c3RydWN0IHdvcmtfc3RydWN0ICp3KQogc3RhdGljIGludCBjdF9oYW5kbGVfZXZlbnQoc3RydWN0
IGludGVsX2d1Y19jdCAqY3QsIHN0cnVjdCBjdF9pbmNvbWluZ19tc2cgKnJlcXVlc3QpCiB7CiAJ
Y29uc3QgdTMyICpoeGcgPSAmcmVxdWVzdC0+bXNnW0dVQ19DVEJfTVNHX01JTl9MRU5dOworCXUz
MiBhY3Rpb24gPSBGSUVMRF9HRVQoR1VDX0hYR19FVkVOVF9NU0dfMF9BQ1RJT04sIGh4Z1swXSk7
CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAogCUdFTV9CVUdfT04oRklFTERfR0VUKEdVQ19IWEdf
TVNHXzBfVFlQRSwgaHhnWzBdKSAhPSBHVUNfSFhHX1RZUEVfRVZFTlQpOwogCisJLyoKKwkgKiBB
ZGp1c3RpbmcgdGhlIHNwYWNlIG11c3QgYmUgZG9uZSBpbiBJUlEgb3IgZGVhZGxvY2sgY2FuIG9j
Y3VyIGFzIHRoZQorCSAqIENUQiBwcm9jZXNzaW5nIGluIHRoZSBiZWxvdyB3b3JrcXVldWUgY2Fu
IHNlbmQgQ1RCcyB3aGljaCBjcmVhdGVzIGEKKwkgKiBjaXJjdWxhciBkZXBlbmRlbmN5IGlmIHRo
ZSBzcGFjZSB3YXMgcmV0dXJuZWQgdGhlcmUuCisJICovCisJc3dpdGNoIChhY3Rpb24pIHsKKwlj
YXNlIElOVEVMX0dVQ19BQ1RJT05fU0NIRURfQ09OVEVYVF9NT0RFX0RPTkU6CisJY2FzZSBJTlRF
TF9HVUNfQUNUSU9OX0RFUkVHSVNURVJfQ09OVEVYVF9ET05FOgorCQlnMmhfcmVsZWFzZV9zcGFj
ZShjdCwgcmVxdWVzdC0+c2l6ZSk7CisJfQorCiAJc3Bpbl9sb2NrX2lycXNhdmUoJmN0LT5yZXF1
ZXN0cy5sb2NrLCBmbGFncyk7CiAJbGlzdF9hZGRfdGFpbCgmcmVxdWVzdC0+bGluaywgJmN0LT5y
ZXF1ZXN0cy5pbmNvbWluZyk7CiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY3QtPnJlcXVlc3Rz
LmxvY2ssIGZsYWdzKTsKQEAgLTExMDYsMyArMTE4MSwyNSBAQCB2b2lkIGludGVsX2d1Y19jdF9l
dmVudF9oYW5kbGVyKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0KQogCiAJY3RfdHJ5X3JlY2VpdmVf
bWVzc2FnZShjdCk7CiB9CisKK3ZvaWQgaW50ZWxfZ3VjX2N0X3ByaW50X2luZm8oc3RydWN0IGlu
dGVsX2d1Y19jdCAqY3QsCisJCQkgICAgIHN0cnVjdCBkcm1fcHJpbnRlciAqcCkKK3sKKwlkcm1f
cHJpbnRmKHAsICJDVCAlc1xuIiwgZW5hYmxlZGRpc2FibGVkKGN0LT5lbmFibGVkKSk7CisKKwlp
ZiAoIWN0LT5lbmFibGVkKQorCQlyZXR1cm47CisKKwlkcm1fcHJpbnRmKHAsICJIMkcgU3BhY2U6
ICV1XG4iLAorCQkgICBhdG9taWNfcmVhZCgmY3QtPmN0YnMuc2VuZC5zcGFjZSkgKiA0KTsKKwlk
cm1fcHJpbnRmKHAsICJIZWFkOiAldVxuIiwKKwkJICAgY3QtPmN0YnMuc2VuZC5kZXNjLT5oZWFk
KTsKKwlkcm1fcHJpbnRmKHAsICJUYWlsOiAldVxuIiwKKwkJICAgY3QtPmN0YnMuc2VuZC5kZXNj
LT50YWlsKTsKKwlkcm1fcHJpbnRmKHAsICJHMkggU3BhY2U6ICV1XG4iLAorCQkgICBhdG9taWNf
cmVhZCgmY3QtPmN0YnMucmVjdi5zcGFjZSkgKiA0KTsKKwlkcm1fcHJpbnRmKHAsICJIZWFkOiAl
dVxuIiwKKwkJICAgY3QtPmN0YnMucmVjdi5kZXNjLT5oZWFkKTsKKwlkcm1fcHJpbnRmKHAsICJU
YWlsOiAldVxuIiwKKwkJICAgY3QtPmN0YnMucmVjdi5kZXNjLT50YWlsKTsKK30KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19jdC5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmgKaW5kZXggZWRkMWJiYTA0NDVkLi4zODE1
ZjQyOTNiNGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1
Y19jdC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19jdC5oCkBA
IC0xMCwxMSArMTAsMTMgQEAKICNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgogI2luY2x1ZGUg
PGxpbnV4L3dvcmtxdWV1ZS5oPgogI2luY2x1ZGUgPGxpbnV4L2t0aW1lLmg+CisjaW5jbHVkZSA8
bGludXgvd2FpdC5oPgogCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX2Z3aWYuaCIKIAogc3RydWN0IGk5
MTVfdm1hOwogc3RydWN0IGludGVsX2d1YzsKK3N0cnVjdCBkcm1fcHJpbnRlcjsKIAogLyoqCiAg
KiBET0M6IENvbW1hbmQgVHJhbnNwb3J0IChDVCkuCkBAIC0zMyw2ICszNSw3IEBAIHN0cnVjdCBp
bnRlbF9ndWM7CiAgKiBAZGVzYzogcG9pbnRlciB0byB0aGUgYnVmZmVyIGRlc2NyaXB0b3IKICAq
IEBjbWRzOiBwb2ludGVyIHRvIHRoZSBjb21tYW5kcyBidWZmZXIKICAqIEBzaXplOiBzaXplIG9m
IHRoZSBjb21tYW5kcyBidWZmZXIgaW4gZHdvcmRzCisgKiBAcmVzdl9zcGFjZTogcmVzZXJ2ZWQg
c3BhY2UgaW4gYnVmZmVyIGluIGR3b3JkcwogICogQGhlYWQ6IGxvY2FsIHNoYWRvdyBjb3B5IG9m
IGhlYWQgaW4gZHdvcmRzCiAgKiBAdGFpbDogbG9jYWwgc2hhZG93IGNvcHkgb2YgdGFpbCBpbiBk
d29yZHMKICAqIEBzcGFjZTogbG9jYWwgc2hhZG93IGNvcHkgb2Ygc3BhY2UgaW4gZHdvcmRzCkBA
IC00Myw5ICs0NiwxMCBAQCBzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciB7CiAJc3RydWN0IGd1
Y19jdF9idWZmZXJfZGVzYyAqZGVzYzsKIAl1MzIgKmNtZHM7CiAJdTMyIHNpemU7CisJdTMyIHJl
c3Zfc3BhY2U7CiAJdTMyIHRhaWw7CiAJdTMyIGhlYWQ7Ci0JdTMyIHNwYWNlOworCWF0b21pY190
IHNwYWNlOwogCWJvb2wgYnJva2VuOwogfTsKIApAQCAtNjYsNiArNzAsOSBAQCBzdHJ1Y3QgaW50
ZWxfZ3VjX2N0IHsKIAogCXN0cnVjdCB0YXNrbGV0X3N0cnVjdCByZWNlaXZlX3Rhc2tsZXQ7CiAK
KwkvKiogQHdxOiB3YWl0IHF1ZXVlIGZvciBnMmggY2hhbmVubCAqLworCXdhaXRfcXVldWVfaGVh
ZF90IHdxOworCiAJc3RydWN0IHsKIAkJdTE2IGxhc3RfZmVuY2U7IC8qIGxhc3QgZmVuY2UgdXNl
ZCB0byBzZW5kIHJlcXVlc3QgKi8KIApAQCAtOTcsOCArMTA0LDE2IEBAIHN0YXRpYyBpbmxpbmUg
Ym9vbCBpbnRlbF9ndWNfY3RfZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkKIH0KIAog
I2RlZmluZSBJTlRFTF9HVUNfQ1RfU0VORF9OQgkJQklUKDMxKQorI2RlZmluZSBJTlRFTF9HVUNf
Q1RfU0VORF9HMkhfRFdfU0hJRlQJMAorI2RlZmluZSBJTlRFTF9HVUNfQ1RfU0VORF9HMkhfRFdf
TUFTSwkoMHhmZiA8PCBJTlRFTF9HVUNfQ1RfU0VORF9HMkhfRFdfU0hJRlQpCisjZGVmaW5lIE1B
S0VfU0VORF9GTEFHUyhsZW4pIFwKKwkoeyB0eXBlb2YgKGxlbikgbGVuXyA9IChsZW4pOyBcCisJ
IEdFTV9CVUdfT04oIUZJRUxEX0ZJVChJTlRFTF9HVUNfQ1RfU0VORF9HMkhfRFdfTUFTSywgbGVu
XykpOyBcCisJKEZJRUxEX1BSRVAoSU5URUxfR1VDX0NUX1NFTkRfRzJIX0RXX01BU0ssIGxlbl8p
IHwgSU5URUxfR1VDX0NUX1NFTkRfTkIpOyB9KQogaW50IGludGVsX2d1Y19jdF9zZW5kKHN0cnVj
dCBpbnRlbF9ndWNfY3QgKmN0LCBjb25zdCB1MzIgKmFjdGlvbiwgdTMyIGxlbiwKIAkJICAgICAg
dTMyICpyZXNwb25zZV9idWYsIHUzMiByZXNwb25zZV9idWZfc2l6ZSwgdTMyIGZsYWdzKTsKIHZv
aWQgaW50ZWxfZ3VjX2N0X2V2ZW50X2hhbmRsZXIoc3RydWN0IGludGVsX2d1Y19jdCAqY3QpOwog
Cit2b2lkIGludGVsX2d1Y19jdF9wcmludF9pbmZvKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LCBz
dHJ1Y3QgZHJtX3ByaW50ZXIgKnApOworCiAjZW5kaWYgLyogX0lOVEVMX0dVQ19DVF9IXyAqLwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2RlYnVnZnMu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19kZWJ1Z2ZzLmMKaW5kZXgg
ZmU3Y2I3YjI5YTFlLi43MmRkZmZmNDJmN2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3VjL2ludGVsX2d1Y19kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvdWMvaW50ZWxfZ3VjX2RlYnVnZnMuYwpAQCAtOSw2ICs5LDkgQEAKICNpbmNsdWRlICJpbnRl
bF9ndWMuaCIKICNpbmNsdWRlICJpbnRlbF9ndWNfZGVidWdmcy5oIgogI2luY2x1ZGUgImludGVs
X2d1Y19sb2dfZGVidWdmcy5oIgorI2luY2x1ZGUgImd0L3VjL2ludGVsX2d1Y19jdC5oIgorI2lu
Y2x1ZGUgImd0L3VjL2ludGVsX2d1Y19hZHMuaCIKKyNpbmNsdWRlICJndC91Yy9pbnRlbF9ndWNf
c3VibWlzc2lvbi5oIgogCiBzdGF0aWMgaW50IGd1Y19pbmZvX3Nob3coc3RydWN0IHNlcV9maWxl
ICptLCB2b2lkICpkYXRhKQogewpAQCAtMjIsMTYgKzI1LDM2IEBAIHN0YXRpYyBpbnQgZ3VjX2lu
Zm9fc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiAJZHJtX3B1dHMoJnAsICJc
biIpOwogCWludGVsX2d1Y19sb2dfaW5mbygmZ3VjLT5sb2csICZwKTsKIAotCS8qIEFkZCBtb3Jl
IGFzIHJlcXVpcmVkIC4uLiAqLworCWlmICghaW50ZWxfZ3VjX3N1Ym1pc3Npb25faXNfdXNlZChn
dWMpKQorCQlyZXR1cm4gMDsKKworCWludGVsX2d1Y19jdF9wcmludF9pbmZvKCZndWMtPmN0LCAm
cCk7CisJaW50ZWxfZ3VjX3N1Ym1pc3Npb25fcHJpbnRfaW5mbyhndWMsICZwKTsKKwlpbnRlbF9n
dWNfYWRzX3ByaW50X3BvbGljeV9pbmZvKGd1YywgJnApOwogCiAJcmV0dXJuIDA7CiB9CiBERUZJ
TkVfR1RfREVCVUdGU19BVFRSSUJVVEUoZ3VjX2luZm8pOwogCitzdGF0aWMgaW50IGd1Y19yZWdp
c3RlcmVkX2NvbnRleHRzX3Nob3coc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQorewor
CXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IG0tPnByaXZhdGU7CisJc3RydWN0IGRybV9wcmludGVy
IHAgPSBkcm1fc2VxX2ZpbGVfcHJpbnRlcihtKTsKKworCWlmICghaW50ZWxfZ3VjX3N1Ym1pc3Np
b25faXNfdXNlZChndWMpKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCWludGVsX2d1Y19zdWJtaXNz
aW9uX3ByaW50X2NvbnRleHRfaW5mbyhndWMsICZwKTsKKworCXJldHVybiAwOworfQorREVGSU5F
X0dUX0RFQlVHRlNfQVRUUklCVVRFKGd1Y19yZWdpc3RlcmVkX2NvbnRleHRzKTsKKwogdm9pZCBp
bnRlbF9ndWNfZGVidWdmc19yZWdpc3RlcihzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBk
ZW50cnkgKnJvb3QpCiB7CiAJc3RhdGljIGNvbnN0IHN0cnVjdCBkZWJ1Z2ZzX2d0X2ZpbGUgZmls
ZXNbXSA9IHsKIAkJeyAiZ3VjX2luZm8iLCAmZ3VjX2luZm9fZm9wcywgTlVMTCB9LAorCQl7ICJn
dWNfcmVnaXN0ZXJlZF9jb250ZXh0cyIsICZndWNfcmVnaXN0ZXJlZF9jb250ZXh0c19mb3BzLCBO
VUxMIH0sCiAJfTsKIAogCWlmICghaW50ZWxfZ3VjX2lzX3N1cHBvcnRlZChndWMpKQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3aWYuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmgKaW5kZXggNjE3ZWM2MDE2NDhk
Li44MjUzNDI1OWI3YWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2lu
dGVsX2d1Y19md2lmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3Vj
X2Z3aWYuaApAQCAtMTcsMTQgKzE3LDIxIEBACiAjaW5jbHVkZSAiYWJpL2d1Y19jb21tdW5pY2F0
aW9uX2N0Yl9hYmkuaCIKICNpbmNsdWRlICJhYmkvZ3VjX21lc3NhZ2VzX2FiaS5oIgogCisvKiBQ
YXlsb2FkIGxlbmd0aCBvbmx5IGkuZS4gZG9uJ3QgaW5jbHVkZSBHMkggaGVhZGVyIGxlbmd0aCAq
LworI2RlZmluZSBHMkhfTEVOX0RXX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQJMgorI2RlZmluZSBH
MkhfTEVOX0RXX0RFUkVHSVNURVJfQ09OVEVYVAkJMQorCisjZGVmaW5lIEdVQ19DT05URVhUX0RJ
U0FCTEUJCTAKKyNkZWZpbmUgR1VDX0NPTlRFWFRfRU5BQkxFCQkxCisKICNkZWZpbmUgR1VDX0NM
SUVOVF9QUklPUklUWV9LTURfSElHSAkwCiAjZGVmaW5lIEdVQ19DTElFTlRfUFJJT1JJVFlfSElH
SAkxCiAjZGVmaW5lIEdVQ19DTElFTlRfUFJJT1JJVFlfS01EX05PUk1BTAkyCiAjZGVmaW5lIEdV
Q19DTElFTlRfUFJJT1JJVFlfTk9STUFMCTMKICNkZWZpbmUgR1VDX0NMSUVOVF9QUklPUklUWV9O
VU0JCTQKIAotI2RlZmluZSBHVUNfTUFYX1NUQUdFX0RFU0NSSVBUT1JTCTEwMjQKLSNkZWZpbmUJ
R1VDX0lOVkFMSURfU1RBR0VfSUQJCUdVQ19NQVhfU1RBR0VfREVTQ1JJUFRPUlMKKyNkZWZpbmUg
R1VDX01BWF9MUkNfREVTQ1JJUFRPUlMJCTY1NTM1CisjZGVmaW5lCUdVQ19JTlZBTElEX0xSQ19J
RAkJR1VDX01BWF9MUkNfREVTQ1JJUFRPUlMKIAogI2RlZmluZSBHVUNfUkVOREVSX0VOR0lORQkJ
MAogI2RlZmluZSBHVUNfVklERU9fRU5HSU5FCQkxCkBAIC0xNzUsNjYgKzE4Miw0MCBAQCBzdHJ1
Y3QgZ3VjX3Byb2Nlc3NfZGVzYyB7CiAJdTMyIHJlc2VydmVkWzMwXTsKIH0gX19wYWNrZWQ7CiAK
LS8qIGVuZ2luZSBpZCBhbmQgY29udGV4dCBpZCBpcyBwYWNrZWQgaW50byBndWNfZXhlY2xpc3Rf
Y29udGV4dC5jb250ZXh0X2lkKi8KLSNkZWZpbmUgR1VDX0VMQ19DVFhJRF9PRkZTRVQJCTAKLSNk
ZWZpbmUgR1VDX0VMQ19FTkdJTkVfT0ZGU0VUCQkyOQorI2RlZmluZSBDT05URVhUX1JFR0lTVFJB
VElPTl9GTEFHX0tNRAlCSVQoMCkKIAotLyogVGhlIGV4ZWNsaXN0IGNvbnRleHQgaW5jbHVkaW5n
IHNvZnR3YXJlIGFuZCBIVyBpbmZvcm1hdGlvbiAqLwotc3RydWN0IGd1Y19leGVjbGlzdF9jb250
ZXh0IHsKLQl1MzIgY29udGV4dF9kZXNjOwotCXUzMiBjb250ZXh0X2lkOwotCXUzMiByaW5nX3N0
YXR1czsKLQl1MzIgcmluZ19scmNhOwotCXUzMiByaW5nX2JlZ2luOwotCXUzMiByaW5nX2VuZDsK
LQl1MzIgcmluZ19uZXh0X2ZyZWVfbG9jYXRpb247Ci0JdTMyIHJpbmdfY3VycmVudF90YWlsX3Bv
aW50ZXJfdmFsdWU7Ci0JdTggZW5naW5lX3N0YXRlX3N1Ym1pdF92YWx1ZTsKLQl1OCBlbmdpbmVf
c3RhdGVfd2FpdF92YWx1ZTsKLQl1MTYgcGFnZWZhdWx0X2NvdW50OwotCXUxNiBlbmdpbmVfc3Vi
bWl0X3F1ZXVlX2NvdW50OwotfSBfX3BhY2tlZDsKKyNkZWZpbmUgQ09OVEVYVF9QT0xJQ1lfREVG
QVVMVF9FWEVDVVRJT05fUVVBTlRVTV9VUyAxMDAwMDAwCisjZGVmaW5lIENPTlRFWFRfUE9MSUNZ
X0RFRkFVTFRfUFJFRU1QVElPTl9USU1FX1VTIDUwMDAwMAorCisvKiBQcmVlbXB0IHRvIGlkbGUg
b24gcXVhbnR1bSBleHBpcnkgKi8KKyNkZWZpbmUgQ09OVEVYVF9QT0xJQ1lfRkxBR19QUkVFTVBU
X1RPX0lETEUJQklUKDApCiAKIC8qCi0gKiBUaGlzIHN0cnVjdHVyZSBkZXNjcmliZXMgYSBzdGFn
ZSBzZXQgYXJyYW5nZWQgZm9yIGEgcGFydGljdWxhciBjb21tdW5pY2F0aW9uCi0gKiBiZXR3ZWVu
IHVLZXJuZWwgKEd1QykgYW5kIERyaXZlciAoS01EKS4gVGVjaG5pY2FsbHksIHRoaXMgaXMga25v
d24gYXMgYQotICogIkd1QyBDb250ZXh0IGRlc2NyaXB0b3IiIGluIHRoZSBzcGVjcywgYnV0IHdl
IHVzZSB0aGUgdGVybSAic3RhZ2UgZGVzY3JpcHRvciIKLSAqIHRvIGF2b2lkIGNvbmZ1c2lvbiB3
aXRoIGFsbCB0aGUgb3RoZXIgdGhpbmdzIGFscmVhZHkgbmFtZWQgImNvbnRleHQiIGluIHRoZQot
ICogZHJpdmVyLiBBIHN0YXRpYyBwb29sIG9mIHRoZXNlIGRlc2NyaXB0b3JzIGFyZSBzdG9yZWQg
aW5zaWRlIGEgR0VNIG9iamVjdAotICogKHN0YWdlX2Rlc2NfcG9vbCkgd2hpY2ggaXMgaGVsZCBm
b3IgdGhlIGVudGlyZSBsaWZldGltZSBvZiBvdXIgaW50ZXJhY3Rpb24KLSAqIHdpdGggdGhlIEd1
QywgYmVpbmcgYWxsb2NhdGVkIGJlZm9yZSB0aGUgR3VDIGlzIGxvYWRlZCB3aXRoIGl0cyBmaXJt
d2FyZS4KKyAqIEd1QyBDb250ZXh0IHJlZ2lzdHJhdGlvbiBkZXNjcmlwdG9yLgorICogRklYTUU6
IFRoaXMgaXMgb25seSByZXF1aXJlZCB0byBleGlzdCBkdXJpbmcgY29udGV4dCByZWdpc3RyYXRp
b24uCisgKiBUaGUgY3VycmVudCAxOjEgYmV0d2VlbiBndWNfbHJjX2Rlc2MgYW5kIExSQ3MgZm9y
IHRoZSBsaWZldGltZSBvZiB0aGUgTFJDCisgKiBpcyBub3QgcmVxdWlyZWQuCiAgKi8KLXN0cnVj
dCBndWNfc3RhZ2VfZGVzYyB7Ci0JdTMyIHNjaGVkX2NvbW1vbl9hcmVhOwotCXUzMiBzdGFnZV9p
ZDsKLQl1MzIgcGFzX2lkOwotCXU4IGVuZ2luZXNfdXNlZDsKLQl1NjQgZGJfdHJpZ2dlcl9jcHU7
Ci0JdTMyIGRiX3RyaWdnZXJfdWs7Ci0JdTY0IGRiX3RyaWdnZXJfcGh5OwotCXUxNiBkYl9pZDsK
LQotCXN0cnVjdCBndWNfZXhlY2xpc3RfY29udGV4dCBscmNbR1VDX01BWF9FTkdJTkVTX05VTV07
Ci0KLQl1OCBhdHRyaWJ1dGU7Ci0KK3N0cnVjdCBndWNfbHJjX2Rlc2MgeworCXUzMiBod19jb250
ZXh0X2Rlc2M7CisJdTMyIHNscG1fcGVyZl9tb2RlX2hpbnQ7CS8qIFNQTEMgdjEgb25seSAqLwor
CXUzMiBzbHBtX2ZyZXFfaGludDsKKwl1MzIgZW5naW5lX3N1Ym1pdF9tYXNrOwkJLyogSW4gbG9n
aWNhbCBzcGFjZSAqLworCXU4IGVuZ2luZV9jbGFzczsKKwl1OCByZXNlcnZlZDBbM107CiAJdTMy
IHByaW9yaXR5OwotCi0JdTMyIHdxX3NhbXBsZWRfdGFpbF9vZmZzZXQ7Ci0JdTMyIHdxX3RvdGFs
X3N1Ym1pdF9lbnF1ZXVlczsKLQogCXUzMiBwcm9jZXNzX2Rlc2M7CiAJdTMyIHdxX2FkZHI7CiAJ
dTMyIHdxX3NpemU7Ci0KLQl1MzIgZW5naW5lX3ByZXNlbmNlOwotCi0JdTggZW5naW5lX3N1c3Bl
bmRlZDsKLQotCXU4IHJlc2VydmVkMFszXTsKLQl1NjQgcmVzZXJ2ZWQxWzFdOwotCi0JdTY0IGRl
c2NfcHJpdmF0ZTsKKwl1MzIgY29udGV4dF9mbGFnczsJCS8qIENPTlRFWFRfUkVHSVNUUkFUSU9O
XyogKi8KKwkvKiBUaW1lIGZvciBvbmUgd29ya2xvYWQgdG8gZXhlY3V0ZS4gKGluIG1pY3JvIHNl
Y29uZHMpICovCisJdTMyIGV4ZWN1dGlvbl9xdWFudHVtOworCS8qIFRpbWUgdG8gd2FpdCBmb3Ig
YSBwcmVlbXB0aW9uIHJlcXVlc3QgdG8gY29tcGxldGUgYmVmb3JlIGlzc3VpbmcgYQorCSAqIHJl
c2V0LiAoaW4gbWljcm8gc2Vjb25kcykuCisJICovCisJdTMyIHByZWVtcHRpb25fdGltZW91dDsK
Kwl1MzIgcG9saWN5X2ZsYWdzOwkJLyogQ09OVEVYVF9QT0xJQ1lfKiAqLworCXUzMiByZXNlcnZl
ZDFbMTldOwogfSBfX3BhY2tlZDsKIAogI2RlZmluZSBHVUNfUE9XRVJfVU5TUEVDSUZJRUQJMApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Np
b24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMK
aW5kZXggZTljMjM3YjE4NjkyLi45MDgzYmQ0YWRiMjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwpAQCAtMTAsMTAgKzEwLDEzIEBA
CiAjaW5jbHVkZSAiZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaCIKICNpbmNsdWRlICJndC9pbnRlbF9j
b250ZXh0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX3BtLmgiCisjaW5jbHVkZSAiZ3Qv
aW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCiAjaW5j
bHVkZSAiZ3QvaW50ZWxfZ3RfaXJxLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIKKyNp
bmNsdWRlICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgogI2luY2x1ZGUgImd0L2ludGVsX2xyYy5o
IgorI2luY2x1ZGUgImd0L2ludGVsX2xyY19yZWcuaCIKICNpbmNsdWRlICJndC9pbnRlbF9tb2Nz
LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfcmluZy5oIgogCkBAIC01OCwyNDYgKzYxLDY5OCBAQAog
ICoKICAqLwogCisvKiBHdUMgVmlydHVhbCBFbmdpbmUgKi8KK3N0cnVjdCBndWNfdmlydHVhbF9l
bmdpbmUgeworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgYmFzZTsKKwlzdHJ1Y3QgaW50ZWxfY29u
dGV4dCBjb250ZXh0OworfTsKKworc3RhdGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2d1Y19j
cmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2lnbmVk
IGludCBjb3VudCk7CisKICNkZWZpbmUgR1VDX1JFUVVFU1RfU0laRSA2NCAvKiBieXRlcyAqLwog
Ci1zdGF0aWMgaW5saW5lIHN0cnVjdCBpOTE1X3ByaW9saXN0ICp0b19wcmlvbGlzdChzdHJ1Y3Qg
cmJfbm9kZSAqcmIpCisvKgorICogQmVsb3cgaXMgYSBzZXQgb2YgZnVuY3Rpb25zIHdoaWNoIGNv
bnRyb2wgdGhlIEd1QyBzY2hlZHVsaW5nIHN0YXRlIHdoaWNoIGRvCisgKiBub3QgcmVxdWlyZSBh
IGxvY2sgYXMgYWxsIHN0YXRlIHRyYW5zaXRpb25zIGFyZSBtdXR1YWxseSBleGNsdXNpdmUuIGku
ZS4gSXQKKyAqIGlzIG5vdCBwb3NzaWJsZSBmb3IgdGhlIGNvbnRleHQgcGlubmluZyBjb2RlIGFu
ZCBzdWJtaXNzaW9uLCBmb3IgdGhlIHNhbWUKKyAqIGNvbnRleHQsIHRvIGJlIGV4ZWN1dGluZyBz
aW11bHRhbmVvdXNseS4gV2Ugc3RpbGwgbmVlZCBhbiBhdG9taWMgYXMgaXQgaXMKKyAqIHBvc3Np
YmxlIGZvciBzb21lIG9mIHRoZSBiaXRzIHRvIGNoYW5naW5nIGF0IHRoZSBzYW1lIHRpbWUgdGhv
dWdoLgorICovCisjZGVmaW5lIFNDSEVEX1NUQVRFX05PX0xPQ0tfRU5BQkxFRAkJCUJJVCgwKQor
I2RlZmluZSBTQ0hFRF9TVEFURV9OT19MT0NLX1BFTkRJTkdfRU5BQkxFCQlCSVQoMSkKKyNkZWZp
bmUgU0NIRURfU1RBVEVfTk9fTE9DS19SRUdJU1RFUkVECQkJQklUKDIpCisjZGVmaW5lIFNDSEVE
X1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9TSElGVAkJMworI2RlZmluZSBTQ0hFRF9TVEFURV9OT19M
T0NLX0JMT0NLRUQgXAorCUJJVChTQ0hFRF9TVEFURV9OT19MT0NLX0JMT0NLRURfU0hJRlQpCisj
ZGVmaW5lIFNDSEVEX1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9NQVNLIFwKKwkoMHhmZmZmIDw8IFND
SEVEX1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9TSElGVCkKK3N0YXRpYyBpbmxpbmUgYm9vbCBjb250
ZXh0X2VuYWJsZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXJldHVybiByYl9lbnRy
eShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3QsIG5vZGUpOworCXJldHVybiAoYXRvbWljX3JlYWQo
JmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jaykgJgorCQlTQ0hFRF9TVEFURV9OT19MT0NLX0VO
QUJMRUQpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfZW5hYmxlZChzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJYXRvbWljX29yKFNDSEVEX1NUQVRFX05PX0xPQ0tf
RU5BQkxFRCwgJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBjbHJfY29udGV4dF9lbmFibGVkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sK
KwlhdG9taWNfYW5kKCh1MzIpflNDSEVEX1NUQVRFX05PX0xPQ0tfRU5BQkxFRCwKKwkJICAgJmNl
LT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbCBjb250
ZXh0X3BlbmRpbmdfZW5hYmxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlyZXR1cm4g
KGF0b21pY19yZWFkKCZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spICYKKwkJU0NIRURfU1RB
VEVfTk9fTE9DS19QRU5ESU5HX0VOQUJMRSk7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgZ3VjX3N0YWdl
X2Rlc2MgKl9fZ2V0X3N0YWdlX2Rlc2Moc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MzIgaWQpCitz
dGF0aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfcGVuZGluZ19lbmFibGUoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQogewotCXN0cnVjdCBndWNfc3RhZ2VfZGVzYyAqYmFzZSA9IGd1Yy0+c3Rh
Z2VfZGVzY19wb29sX3ZhZGRyOworCWF0b21pY19vcihTQ0hFRF9TVEFURV9OT19MT0NLX1BFTkRJ
TkdfRU5BQkxFLAorCQkgICZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spOworfQorCitzdGF0
aWMgaW5saW5lIHZvaWQgY2xyX2NvbnRleHRfcGVuZGluZ19lbmFibGUoc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQoreworCWF0b21pY19hbmQoKHUzMil+U0NIRURfU1RBVEVfTk9fTE9DS19QRU5E
SU5HX0VOQUJMRSwKKwkJICAgJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7Cit9CisKK3N0
YXRpYyBpbmxpbmUgdTMyIGNvbnRleHRfYmxvY2tlZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
Cit7CisJcmV0dXJuIChhdG9taWNfcmVhZCgmY2UtPmd1Y19zY2hlZF9zdGF0ZV9ub19sb2NrKSAm
CisJCVNDSEVEX1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9NQVNLKSA+PgorCQlTQ0hFRF9TVEFURV9O
T19MT0NLX0JMT0NLRURfU0hJRlQ7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbmNyX2NvbnRl
eHRfYmxvY2tlZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJbG9ja2RlcF9hc3NlcnRf
aGVsZCgmY2UtPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKwlhdG9taWNfYWRkKFNDSEVE
X1NUQVRFX05PX0xPQ0tfQkxPQ0tFRCwKKwkJICAgJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9j
ayk7Cit9CiAKLQlyZXR1cm4gJmJhc2VbaWRdOworc3RhdGljIGlubGluZSB2b2lkIGRlY3JfY29u
dGV4dF9ibG9ja2VkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZjZS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCWF0b21pY19zdWIoU0NI
RURfU1RBVEVfTk9fTE9DS19CTE9DS0VELAorCQkgICAmY2UtPmd1Y19zY2hlZF9zdGF0ZV9ub19s
b2NrKTsKIH0KIAotc3RhdGljIGludCBndWNfc3RhZ2VfZGVzY19wb29sX2NyZWF0ZShzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMpCitzdGF0aWMgaW5saW5lIGJvb2wgY29udGV4dF9yZWdpc3RlcmVkKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKLQl1MzIgc2l6ZSA9IFBBR0VfQUxJR04oc2l6ZW9m
KHN0cnVjdCBndWNfc3RhZ2VfZGVzYykgKgotCQkJICAgICAgR1VDX01BWF9TVEFHRV9ERVNDUklQ
VE9SUyk7CisJcmV0dXJuIChhdG9taWNfcmVhZCgmY2UtPmd1Y19zY2hlZF9zdGF0ZV9ub19sb2Nr
KSAmCisJCVNDSEVEX1NUQVRFX05PX0xPQ0tfUkVHSVNURVJFRCk7Cit9CiAKLQlyZXR1cm4gaW50
ZWxfZ3VjX2FsbG9jYXRlX2FuZF9tYXBfdm1hKGd1Yywgc2l6ZSwgJmd1Yy0+c3RhZ2VfZGVzY19w
b29sLAotCQkJCQkgICAgICAmZ3VjLT5zdGFnZV9kZXNjX3Bvb2xfdmFkZHIpOworc3RhdGljIGlu
bGluZSB2b2lkIHNldF9jb250ZXh0X3JlZ2lzdGVyZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworCWF0b21pY19vcihTQ0hFRF9TVEFURV9OT19MT0NLX1JFR0lTVEVSRUQsCisJCSAgJmNl
LT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19zdGFnZV9k
ZXNjX3Bvb2xfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCitzdGF0aWMgaW5saW5lIHZv
aWQgY2xyX2NvbnRleHRfcmVnaXN0ZXJlZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7Ci0J
aTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJmd1Yy0+c3RhZ2VfZGVzY19wb29sLCBJOTE1X1ZN
QV9SRUxFQVNFX01BUCk7CisJYXRvbWljX2FuZCgodTMyKX5TQ0hFRF9TVEFURV9OT19MT0NLX1JF
R0lTVEVSRUQsCisJCSAgICZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spOwogfQogCiAvKgot
ICogSW5pdGlhbGlzZS9jbGVhciB0aGUgc3RhZ2UgZGVzY3JpcHRvciBzaGFyZWQgd2l0aCB0aGUg
R3VDIGZpcm13YXJlLgotICoKLSAqIFRoaXMgZGVzY3JpcHRvciB0ZWxscyB0aGUgR3VDIHdoZXJl
IChpbiBHR1RUIHNwYWNlKSB0byBmaW5kIHRoZSBpbXBvcnRhbnQKLSAqIGRhdGEgc3RydWN0dXJl
cyByZWxhdGVkIHRvIHdvcmsgc3VibWlzc2lvbiAocHJvY2VzcyBkZXNjcmlwdG9yLCB3cml0ZSBx
dWV1ZSwKLSAqIGV0YykuCisgKiBCZWxvdyBpcyBhIHNldCBvZiBmdW5jdGlvbnMgd2hpY2ggY29u
dHJvbCB0aGUgR3VDIHNjaGVkdWxpbmcgc3RhdGUgd2hpY2gKKyAqIHJlcXVpcmUgYSBsb2NrLCBh
c2lkZSBmcm9tIHRoZSBzcGVjaWFsIGNhc2Ugd2hlcmUgdGhlIGZ1bmN0aW9ucyBhcmUgY2FsbGVk
CisgKiBmcm9tIGd1Y19scmNfZGVzY19waW4oKS4gSW4gdGhhdCBjYXNlIGl0IGlzbid0IHBvc3Np
YmxlIGZvciBhbnkgb3RoZXIgY29kZQorICogcGF0aCB0byBiZSBleGVjdXRpbmcgb24gdGhlIGNv
bnRleHQuCiAgKi8KLXN0YXRpYyB2b2lkIGd1Y19zdGFnZV9kZXNjX2luaXQoc3RydWN0IGludGVs
X2d1YyAqZ3VjKQorI2RlZmluZSBTQ0hFRF9TVEFURV9XQUlUX0ZPUl9ERVJFR0lTVEVSX1RPX1JF
R0lTVEVSCUJJVCgwKQorI2RlZmluZSBTQ0hFRF9TVEFURV9ERVNUUk9ZRUQJCQkJQklUKDEpCisj
ZGVmaW5lIFNDSEVEX1NUQVRFX1BFTkRJTkdfRElTQUJMRQkJCUJJVCgyKQorI2RlZmluZSBTQ0hF
RF9TVEFURV9CQU5ORUQJCQkJQklUKDMpCitzdGF0aWMgaW5saW5lIHZvaWQgaW5pdF9zY2hlZF9z
dGF0ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJLyogT25seSBzaG91bGQgYmUgY2Fs
bGVkIGZyb20gZ3VjX2xyY19kZXNjX3BpbigpICovCisJYXRvbWljX3NldCgmY2UtPmd1Y19zY2hl
ZF9zdGF0ZV9ub19sb2NrLCAwKTsKKwljZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRlID0gMDsKK30K
Kworc3RhdGljIGlubGluZSBib29sCitjb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9fcmVn
aXN0ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXN0cnVjdCBndWNfc3RhZ2VfZGVz
YyAqZGVzYzsKKwlyZXR1cm4gY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSAmCisJCVNDSEVEX1NU
QVRFX1dBSVRfRk9SX0RFUkVHSVNURVJfVE9fUkVHSVNURVI7Cit9CiAKLQkvKiB3ZSBvbmx5IHVz
ZSAxIHN0YWdlIGRlc2MsIHNvIGhhcmRjb2RlIGl0IHRvIDAgKi8KLQlkZXNjID0gX19nZXRfc3Rh
Z2VfZGVzYyhndWMsIDApOwotCW1lbXNldChkZXNjLCAwLCBzaXplb2YoKmRlc2MpKTsKK3N0YXRp
YyBpbmxpbmUgdm9pZAorc2V0X2NvbnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3Rl
cihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJLyogT25seSBzaG91bGQgYmUgY2FsbGVk
IGZyb20gZ3VjX2xyY19kZXNjX3BpbigpIHdpdGhvdXQgbG9jayAqLworCWNlLT5ndWNfc3RhdGUu
c2NoZWRfc3RhdGUgfD0KKwkJU0NIRURfU1RBVEVfV0FJVF9GT1JfREVSRUdJU1RFUl9UT19SRUdJ
U1RFUjsKK30KIAotCWRlc2MtPmF0dHJpYnV0ZSA9IEdVQ19TVEFHRV9ERVNDX0FUVFJfQUNUSVZF
IHwKLQkJCSAgR1VDX1NUQUdFX0RFU0NfQVRUUl9LRVJORUw7CitzdGF0aWMgaW5saW5lIHZvaWQK
K2Nscl9jb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9fcmVnaXN0ZXIoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9j
ayk7CisJY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSAmPQorCQl+U0NIRURfU1RBVEVfV0FJVF9G
T1JfREVSRUdJU1RFUl9UT19SRUdJU1RFUjsKK30KIAotCWRlc2MtPnN0YWdlX2lkID0gMDsKLQlk
ZXNjLT5wcmlvcml0eSA9IEdVQ19DTElFTlRfUFJJT1JJVFlfS01EX05PUk1BTDsKK3N0YXRpYyBp
bmxpbmUgYm9vbAorY29udGV4dF9kZXN0cm95ZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQor
eworCXJldHVybiBjZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRlICYgU0NIRURfU1RBVEVfREVTVFJP
WUVEOworfQogCi0JZGVzYy0+d3Ffc2l6ZSA9IEdVQ19XUV9TSVpFOworc3RhdGljIGlubGluZSB2
b2lkCitzZXRfY29udGV4dF9kZXN0cm95ZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorewor
CWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisJY2UtPmd1Y19zdGF0
ZS5zY2hlZF9zdGF0ZSB8PSBTQ0hFRF9TVEFURV9ERVNUUk9ZRUQ7CiB9CiAKLXN0YXRpYyB2b2lk
IGd1Y19zdGFnZV9kZXNjX2Zpbmkoc3RydWN0IGludGVsX2d1YyAqZ3VjKQorc3RhdGljIGlubGlu
ZSBib29sIGNvbnRleHRfcGVuZGluZ19kaXNhYmxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
IHsKLQlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2M7CisJcmV0dXJuIGNlLT5ndWNfc3RhdGUu
c2NoZWRfc3RhdGUgJiBTQ0hFRF9TVEFURV9QRU5ESU5HX0RJU0FCTEU7Cit9CiAKLQlkZXNjID0g
X19nZXRfc3RhZ2VfZGVzYyhndWMsIDApOwotCW1lbXNldChkZXNjLCAwLCBzaXplb2YoKmRlc2Mp
KTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBzZXRfY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3Rh
dGUubG9jayk7CisJY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSB8PSBTQ0hFRF9TVEFURV9QRU5E
SU5HX0RJU0FCTEU7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19hZGRfcmVxdWVzdChzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQorc3RhdGljIGlubGluZSB2b2lk
IGNscl9jb250ZXh0X3BlbmRpbmdfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7
Ci0JLyogTGVhdmluZyBzdHViIGFzIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSB1c2VkIGluIGZ1dHVy
ZSBwYXRjaGVzICovCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY2UtPmd1Y19zdGF0ZS5sb2NrKTsK
KwljZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRlICY9IH5TQ0hFRF9TVEFURV9QRU5ESU5HX0RJU0FC
TEU7CiB9CiAKLS8qCi0gKiBXaGVuIHdlJ3JlIGRvaW5nIHN1Ym1pc3Npb25zIHVzaW5nIHJlZ3Vs
YXIgZXhlY2xpc3RzIGJhY2tlbmQsIHdyaXRpbmcgdG8KLSAqIEVMU1AgZnJvbSBDUFUgc2lkZSBp
cyBlbm91Z2ggdG8gbWFrZSBzdXJlIHRoYXQgd3JpdGVzIHRvIHJpbmdidWZmZXIgcGFnZXMKLSAq
IHBpbm5lZCBpbiBtYXBwYWJsZSBhcGVydHVyZSBwb3J0aW9uIG9mIEdHVFQgYXJlIHZpc2libGUg
dG8gY29tbWFuZCBzdHJlYW1lci4KLSAqIFdyaXRlcyBkb25lIGJ5IEd1QyBvbiBvdXIgYmVoYWxm
IGFyZSBub3QgZ3VhcmFudGVlaW5nIHN1Y2ggb3JkZXJpbmcsCi0gKiB0aGVyZWZvcmUsIHRvIGVu
c3VyZSB0aGUgZmx1c2gsIHdlJ3JlIGlzc3VpbmcgYSBQT1NUSU5HIFJFQUQuCi0gKi8KLXN0YXRp
YyB2b2lkIGZsdXNoX2dndHRfd3JpdGVzKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQorc3RhdGljIGlu
bGluZSBib29sIGNvbnRleHRfYmFubmVkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKLQlp
ZiAoaTkxNV92bWFfaXNfbWFwX2FuZF9mZW5jZWFibGUodm1hKSkKLQkJaW50ZWxfdW5jb3JlX3Bv
c3RpbmdfcmVhZF9mdyh2bWEtPnZtLT5ndC0+dW5jb3JlLAotCQkJCQkgICAgIEdVQ19TVEFUVVMp
OworCXJldHVybiBjZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRlICYgU0NIRURfU1RBVEVfQkFOTkVE
OwogfQogCi1zdGF0aWMgdm9pZCBndWNfc3VibWl0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKLQkJICAgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3QgKipvdXQsCi0JCSAgICAgICBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICoqZW5kKQorc3RhdGljIGlubGluZSB2b2lkIHNldF9jb250ZXh0X2Jh
bm5lZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7Ci0Jc3RydWN0IGludGVsX2d1YyAqZ3Vj
ID0gJmVuZ2luZS0+Z3QtPnVjLmd1YzsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZjZS0+Z3VjX3N0
YXRlLmxvY2spOworCWNlLT5ndWNfc3RhdGUuc2NoZWRfc3RhdGUgfD0gU0NIRURfU1RBVEVfQkFO
TkVEOworfQogCi0JZG8gewotCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9ICpvdXQrKzsKK3N0
YXRpYyBpbmxpbmUgdm9pZCBjbHJfY29udGV4dF9iYW5uZWQoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisJY2Ut
Pmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSAmPSB+U0NIRURfU1RBVEVfQkFOTkVEOworfQogCi0JCWZs
dXNoX2dndHRfd3JpdGVzKHJxLT5yaW5nLT52bWEpOwotCQlndWNfYWRkX3JlcXVlc3QoZ3VjLCBy
cSk7Ci0JfSB3aGlsZSAob3V0ICE9IGVuZCk7CitzdGF0aWMgaW5saW5lIGJvb2wgY29udGV4dF9n
dWNfaWRfaW52YWxpZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJcmV0dXJuIChjZS0+
Z3VjX2lkID09IEdVQ19JTlZBTElEX0xSQ19JRCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgaW50IHJx
X3ByaW8oY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgaW5saW5lIHZvaWQg
c2V0X2NvbnRleHRfZ3VjX2lkX2ludmFsaWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewot
CXJldHVybiBycS0+c2NoZWQuYXR0ci5wcmlvcml0eTsKKwljZS0+Z3VjX2lkID0gR1VDX0lOVkFM
SURfTFJDX0lEOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9ndWMgKmNlX3RvX2d1
YyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJcmV0dXJuICZjZS0+ZW5naW5lLT5ndC0+
dWMuZ3VjOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpOTE1X3ByaW9saXN0ICp0b19wcmlv
bGlzdChzdHJ1Y3QgcmJfbm9kZSAqcmIpCit7CisJcmV0dXJuIHJiX2VudHJ5KHJiLCBzdHJ1Y3Qg
aTkxNV9wcmlvbGlzdCwgbm9kZSk7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgZ3VjX2xyY19kZXNjICpf
X2dldF9scmNfZGVzYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBpbmRleCkKK3sKKwlzdHJ1
Y3QgZ3VjX2xyY19kZXNjICpiYXNlID0gZ3VjLT5scmNfZGVzY19wb29sX3ZhZGRyOworCisJR0VN
X0JVR19PTihpbmRleCA+PSBHVUNfTUFYX0xSQ19ERVNDUklQVE9SUyk7CisKKwlyZXR1cm4gJmJh
c2VbaW5kZXhdOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpfX2dl
dF9jb250ZXh0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMyIGlkKQoreworCXN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSA9IHhhX2xvYWQoJmd1Yy0+Y29udGV4dF9sb29rdXAsIGlkKTsKKworCUdF
TV9CVUdfT04oaWQgPj0gR1VDX01BWF9MUkNfREVTQ1JJUFRPUlMpOworCisJcmV0dXJuIGNlOwor
fQorCitzdGF0aWMgaW50IGd1Y19scmNfZGVzY19wb29sX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMpCit7CisJdTMyIHNpemU7CisJaW50IHJldDsKKworCXNpemUgPSBQQUdFX0FMSUdOKHNp
emVvZihzdHJ1Y3QgZ3VjX2xyY19kZXNjKSAqCisJCQkgIEdVQ19NQVhfTFJDX0RFU0NSSVBUT1JT
KTsKKwlyZXQgPSBpbnRlbF9ndWNfYWxsb2NhdGVfYW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3Vj
LT5scmNfZGVzY19wb29sLAorCQkJCQkgICAgICh2b2lkICoqKSZndWMtPmxyY19kZXNjX3Bvb2xf
dmFkZHIpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXR1cm4gMDsKIH0KIAotc3Rh
dGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnNjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxLCBpbnQgaWR4KQorc3RhdGljIHZvaWQgZ3VjX2xyY19kZXNjX3Bvb2xfZGVzdHJveShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpCiB7Ci0JdHJhY2VfaTkxNV9yZXF1ZXN0X2luKHJxLCBpZHgpOwor
CWd1Yy0+bHJjX2Rlc2NfcG9vbF92YWRkciA9IE5VTEw7CisJaTkxNV92bWFfdW5waW5fYW5kX3Jl
bGVhc2UoJmd1Yy0+bHJjX2Rlc2NfcG9vbCwgSTkxNV9WTUFfUkVMRUFTRV9NQVApOworfQorCitz
dGF0aWMgaW5saW5lIGJvb2wgZ3VjX3N1Ym1pc3Npb25faW5pdGlhbGl6ZWQoc3RydWN0IGludGVs
X2d1YyAqZ3VjKQoreworCXJldHVybiBndWMtPmxyY19kZXNjX3Bvb2xfdmFkZHIgIT0gTlVMTDsK
K30KKworc3RhdGljIGlubGluZSB2b2lkIHJlc2V0X2xyY19kZXNjKHN0cnVjdCBpbnRlbF9ndWMg
Kmd1YywgdTMyIGlkKQoreworCWlmIChsaWtlbHkoZ3VjX3N1Ym1pc3Npb25faW5pdGlhbGl6ZWQo
Z3VjKSkpIHsKKwkJc3RydWN0IGd1Y19scmNfZGVzYyAqZGVzYyA9IF9fZ2V0X2xyY19kZXNjKGd1
YywgaWQpOworCQl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJCW1lbXNldChkZXNjLCAwLCBzaXpl
b2YoKmRlc2MpKTsKKworCQkvKgorCQkgKiB4YXJyYXkgQVBJIGRvZXNuJ3QgaGF2ZSB4YV9lcmFz
ZV9pcnFzYXZlIHdyYXBwZXIsIHNvIGNhbGxpbmcKKwkJICogdGhlIGxvd2VyIGxldmVsIGZ1bmN0
aW9ucyBkaXJlY3RseS4KKwkJICovCisJCXhhX2xvY2tfaXJxc2F2ZSgmZ3VjLT5jb250ZXh0X2xv
b2t1cCwgZmxhZ3MpOworCQlfX3hhX2VyYXNlKCZndWMtPmNvbnRleHRfbG9va3VwLCBpZCk7CisJ
CXhhX3VubG9ja19pcnFyZXN0b3JlKCZndWMtPmNvbnRleHRfbG9va3VwLCBmbGFncyk7CisJfQor
fQorCitzdGF0aWMgaW5saW5lIGJvb2wgbHJjX2Rlc2NfcmVnaXN0ZXJlZChzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMsIHUzMiBpZCkKK3sKKwlyZXR1cm4gX19nZXRfY29udGV4dChndWMsIGlkKTsKK30K
Kworc3RhdGljIGlubGluZSB2b2lkIHNldF9scmNfZGVzY19yZWdpc3RlcmVkKHN0cnVjdCBpbnRl
bF9ndWMgKmd1YywgdTMyIGlkLAorCQkJCQkgICBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
CisJdW5zaWduZWQgbG9uZyBmbGFnczsKIAogCS8qCi0JICogQ3VycmVudGx5IHdlIGFyZSBub3Qg
dHJhY2tpbmcgdGhlIHJxLT5jb250ZXh0IGJlaW5nIGluZmxpZ2h0Ci0JICogKGNlLT5pbmZsaWdo
dCA9IHJxLT5lbmdpbmUpLiBJdCBpcyBvbmx5IHVzZWQgYnkgdGhlIGV4ZWNsaXN0cwotCSAqIGJh
Y2tlbmQgYXQgdGhlIG1vbWVudCwgYSBzaW1pbGFyIGNvdW50aW5nIHN0cmF0ZWd5IHdvdWxkIGJl
Ci0JICogcmVxdWlyZWQgaWYgd2UgZ2VuZXJhbGlzZSB0aGUgaW5mbGlnaHQgdHJhY2tpbmcuCisJ
ICogeGFycmF5IEFQSSBkb2Vzbid0IGhhdmUgeGFfc2F2ZV9pcnFzYXZlIHdyYXBwZXIsIHNvIGNh
bGxpbmcgdGhlCisJICogbG93ZXIgbGV2ZWwgZnVuY3Rpb25zIGRpcmVjdGx5LgogCSAqLworCXhh
X2xvY2tfaXJxc2F2ZSgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgZmxhZ3MpOworCV9feGFfc3RvcmUo
Jmd1Yy0+Y29udGV4dF9sb29rdXAsIGlkLCBjZSwgR0ZQX0FUT01JQyk7CisJeGFfdW5sb2NrX2ly
cXJlc3RvcmUoJmd1Yy0+Y29udGV4dF9sb29rdXAsIGZsYWdzKTsKK30KKworc3RhdGljIGludCBn
dWNfc3VibWlzc2lvbl9zZW5kX2J1c3lfbG9vcChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJ
CSBjb25zdCB1MzIgKmFjdGlvbiwKKwkJCQkJIHUzMiBsZW4sCisJCQkJCSB1MzIgZzJoX2xlbl9k
dywKKwkJCQkJIGJvb2wgbG9vcCkKK3sKKwlpbnQgZXJyOworCisJZXJyID0gaW50ZWxfZ3VjX3Nl
bmRfYnVzeV9sb29wKGd1YywgYWN0aW9uLCBsZW4sIGcyaF9sZW5fZHcsIGxvb3ApOwogCi0JX19p
bnRlbF9ndF9wbV9nZXQocnEtPmVuZ2luZS0+Z3QpOwotCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0
KHJxKTsKKwlpZiAoIWVyciAmJiBnMmhfbGVuX2R3KQorCQlhdG9taWNfaW5jKCZndWMtPm91dHN0
YW5kaW5nX3N1Ym1pc3Npb25fZzJoKTsKKworCXJldHVybiBlcnI7CiB9CiAKLXN0YXRpYyB2b2lk
IHNjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK2ludCBpbnRlbF9ndWNfd2Fp
dF9mb3JfcGVuZGluZ19tc2coc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCSAgIGF0b21pY190
ICp3YWl0X3ZhciwKKwkJCQkgICBib29sIGludGVycnVwdGlibGUsCisJCQkJICAgbG9uZyB0aW1l
b3V0KQogewotCXRyYWNlX2k5MTVfcmVxdWVzdF9vdXQocnEpOworCWNvbnN0IGludCBzdGF0ZSA9
IGludGVycnVwdGlibGUgPworCQlUQVNLX0lOVEVSUlVQVElCTEUgOiBUQVNLX1VOSU5URVJSVVBU
SUJMRTsKKwlERUZJTkVfV0FJVCh3YWl0KTsKKworCW1pZ2h0X3NsZWVwKCk7CisJR0VNX0JVR19P
Tih0aW1lb3V0IDwgMCk7CisKKwlpZiAoIWF0b21pY19yZWFkKHdhaXRfdmFyKSkKKwkJcmV0dXJu
IDA7CisKKwlpZiAoIXRpbWVvdXQpCisJCXJldHVybiAtRVRJTUU7CisKKwlmb3IgKDs7KSB7CisJ
CXByZXBhcmVfdG9fd2FpdCgmZ3VjLT5jdC53cSwgJndhaXQsIHN0YXRlKTsKKworCQlpZiAoIWF0
b21pY19yZWFkKHdhaXRfdmFyKSkKKwkJCWJyZWFrOworCisJCWlmIChzaWduYWxfcGVuZGluZ19z
dGF0ZShzdGF0ZSwgY3VycmVudCkpIHsKKwkJCXRpbWVvdXQgPSAtRUlOVFI7CisJCQlicmVhazsK
KwkJfQorCisJCWlmICghdGltZW91dCkgeworCQkJdGltZW91dCA9IC1FVElNRTsKKwkJCWJyZWFr
OworCQl9CiAKLQlpbnRlbF9ndF9wbV9wdXRfYXN5bmMocnEtPmVuZ2luZS0+Z3QpOwotCWk5MTVf
cmVxdWVzdF9wdXQocnEpOworCQl0aW1lb3V0ID0gaW9fc2NoZWR1bGVfdGltZW91dCh0aW1lb3V0
KTsKKwl9CisJZmluaXNoX3dhaXQoJmd1Yy0+Y3Qud3EsICZ3YWl0KTsKKworCXJldHVybiAodGlt
ZW91dCA8IDApID8gdGltZW91dCA6IDA7CiB9CiAKLXN0YXRpYyB2b2lkIF9fZ3VjX2RlcXVldWUo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoraW50IGludGVsX2d1Y193YWl0X2Zvcl9p
ZGxlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgbG9uZyB0aW1lb3V0KQogewotCXN0cnVjdCBpbnRl
bF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3Rz
OwotCXN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2VuZ2luZSA9IGVuZ2lu
ZS0+c2NoZWRfZW5naW5lOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKipmaXJzdCA9IGV4ZWNsaXN0
cy0+aW5mbGlnaHQ7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqKiBjb25zdCBsYXN0X3BvcnQgPSBm
aXJzdCArIGV4ZWNsaXN0cy0+cG9ydF9tYXNrOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKmxhc3Qg
PSBmaXJzdFswXTsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqcG9ydDsKLQlib29sIHN1Ym1pdCA9
IGZhbHNlOwotCXN0cnVjdCByYl9ub2RlICpyYjsKKwlpZiAoIWludGVsX3VjX3VzZXNfZ3VjX3N1
Ym1pc3Npb24oJmd1Y190b19ndChndWMpLT51YykpCisJCXJldHVybiAwOwogCi0JbG9ja2RlcF9h
c3NlcnRfaGVsZCgmc2NoZWRfZW5naW5lLT5sb2NrKTsKKwlyZXR1cm4gaW50ZWxfZ3VjX3dhaXRf
Zm9yX3BlbmRpbmdfbXNnKGd1YywKKwkJCQkJICAgICAgJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlz
c2lvbl9nMmgsCisJCQkJCSAgICAgIHRydWUsIHRpbWVvdXQpOworfQogCi0JaWYgKGxhc3QpIHsK
LQkJaWYgKCorK2ZpcnN0KQotCQkJcmV0dXJuOworc3RhdGljIGludCBndWNfbHJjX2Rlc2NfcGlu
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgYm9vbCBsb29wKTsKIAotCQlsYXN0ID0gTlVMTDsK
K3N0YXRpYyBpbnQgZ3VjX2FkZF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9ndWMgKmd1Yywgc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJaW50IGVyciA9IDA7CisJc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlID0gcnEtPmNvbnRleHQ7CisJdTMyIGFjdGlvblszXTsKKwlpbnQgbGVuID0gMDsKKwl1
MzIgZzJoX2xlbl9kdyA9IDA7CisJYm9vbCBlbmFibGVkOworCisJLyoKKwkgKiBDb3JuZXIgY2Fz
ZSB3aGVyZSByZXF1ZXN0cyB3ZXJlIHNpdHRpbmcgaW4gdGhlIHByaW9yaXR5IGxpc3Qgb3IgYQor
CSAqIHJlcXVlc3QgcmVzdWJtaXR0ZWQgYWZ0ZXIgdGhlIGNvbnRleHQgd2FzIGJhbm5lZC4KKwkg
Ki8KKwlpZiAodW5saWtlbHkoaW50ZWxfY29udGV4dF9pc19iYW5uZWQoY2UpKSkgeworCQlpOTE1
X3JlcXVlc3RfcHV0KGk5MTVfcmVxdWVzdF9tYXJrX2VpbyhycSkpOworCQlpbnRlbF9lbmdpbmVf
c2lnbmFsX2JyZWFkY3J1bWJzKGNlLT5lbmdpbmUpOworCQlnb3RvIG91dDsKIAl9CiAKKwlHRU1f
QlVHX09OKCFhdG9taWNfcmVhZCgmY2UtPmd1Y19pZF9yZWYpKTsKKwlHRU1fQlVHX09OKGNvbnRl
eHRfZ3VjX2lkX2ludmFsaWQoY2UpKTsKKwogCS8qCi0JICogV2Ugd3JpdGUgZGlyZWN0bHkgaW50
byB0aGUgZXhlY2xpc3RzLT5pbmZsaWdodCBxdWV1ZSBhbmQgZG9uJ3QgdXNlCi0JICogdGhlIGV4
ZWNsaXN0cy0+cGVuZGluZyBxdWV1ZSwgYXMgd2UgZG9uJ3QgaGF2ZSBhIGRpc3RpbmN0IHN3aXRj
aAotCSAqIGV2ZW50LgorCSAqIENvcm5lciBjYXNlIHdoZXJlIHRoZSBHdUMgZmlybXdhcmUgd2Fz
IGJsb3duIGF3YXkgYW5kIHJlbG9hZGVkIHdoaWxlCisJICogdGhpcyBjb250ZXh0IHdhcyBwaW5u
ZWQuCiAJICovCi0JcG9ydCA9IGZpcnN0OworCWlmICh1bmxpa2VseSghbHJjX2Rlc2NfcmVnaXN0
ZXJlZChndWMsIGNlLT5ndWNfaWQpKSkgeworCQllcnIgPSBndWNfbHJjX2Rlc2NfcGluKGNlLCBm
YWxzZSk7CisJCWlmICh1bmxpa2VseShlcnIpKQorCQkJZ290byBvdXQ7CisJfQorCisJaWYgKHVu
bGlrZWx5KGNvbnRleHRfYmxvY2tlZChjZSkpKQorCQlnb3RvIG91dDsKKworCWVuYWJsZWQgPSBj
b250ZXh0X2VuYWJsZWQoY2UpOworCisJaWYgKCFlbmFibGVkKSB7CisJCWFjdGlvbltsZW4rK10g
PSBJTlRFTF9HVUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQ7CisJCWFjdGlvbltsZW4r
K10gPSBjZS0+Z3VjX2lkOworCQlhY3Rpb25bbGVuKytdID0gR1VDX0NPTlRFWFRfRU5BQkxFOwor
CQlzZXRfY29udGV4dF9wZW5kaW5nX2VuYWJsZShjZSk7CisJCWludGVsX2NvbnRleHRfZ2V0KGNl
KTsKKwkJZzJoX2xlbl9kdyA9IEcySF9MRU5fRFdfU0NIRURfQ09OVEVYVF9NT0RFX1NFVDsKKwl9
IGVsc2UgeworCQlhY3Rpb25bbGVuKytdID0gSU5URUxfR1VDX0FDVElPTl9TQ0hFRF9DT05URVhU
OworCQlhY3Rpb25bbGVuKytdID0gY2UtPmd1Y19pZDsKKwl9CisKKwllcnIgPSBpbnRlbF9ndWNf
c2VuZF9uYihndWMsIGFjdGlvbiwgbGVuLCBnMmhfbGVuX2R3KTsKKwlpZiAoIWVuYWJsZWQgJiYg
IWVycikgeworCQl0cmFjZV9pbnRlbF9jb250ZXh0X3NjaGVkX2VuYWJsZShjZSk7CisJCWF0b21p
Y19pbmMoJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgpOworCQlzZXRfY29udGV4dF9l
bmFibGVkKGNlKTsKKwl9IGVsc2UgaWYgKCFlbmFibGVkKSB7CisJCWNscl9jb250ZXh0X3BlbmRp
bmdfZW5hYmxlKGNlKTsKKwkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCX0KKwlpZiAobGlrZWx5
KCFlcnIpKQorCQl0cmFjZV9pOTE1X3JlcXVlc3RfZ3VjX3N1Ym1pdChycSk7CisKK291dDoKKwly
ZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZ3VjX3NldF9scmNfdGFpbChzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlycS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZVtDVFhf
UklOR19UQUlMXSA9CisJCWludGVsX3Jpbmdfc2V0X3RhaWwocnEtPnJpbmcsIHJxLT50YWlsKTsK
K30KKworc3RhdGljIGlubGluZSBpbnQgcnFfcHJpbyhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKK3sKKwlyZXR1cm4gcnEtPnNjaGVkLmF0dHIucHJpb3JpdHk7Cit9CisKK3N0YXRpYyBp
bnQgZ3VjX2RlcXVldWVfb25lX2NvbnRleHQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCXN0
cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2VuZ2luZSA9IGd1Yy0+c2NoZWRf
ZW5naW5lOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKmxhc3QgPSBOVUxMOworCWJvb2wgc3VibWl0
ID0gZmFsc2U7CisJc3RydWN0IHJiX25vZGUgKnJiOworCWludCByZXQ7CisKKwlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZzY2hlZF9lbmdpbmUtPmxvY2spOworCisJaWYgKGd1Yy0+c3RhbGxlZF9yZXF1
ZXN0KSB7CisJCXN1Ym1pdCA9IHRydWU7CisJCWxhc3QgPSBndWMtPnN0YWxsZWRfcmVxdWVzdDsK
KwkJZ290byByZXN1Ym1pdDsKKwl9CisKIAl3aGlsZSAoKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZz
Y2hlZF9lbmdpbmUtPnF1ZXVlKSkpIHsKIAkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnAgPSB0b19w
cmlvbGlzdChyYik7CiAJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47CiAKIAkJcHJpb2xp
c3RfZm9yX2VhY2hfcmVxdWVzdF9jb25zdW1lKHJxLCBybiwgcCkgewotCQkJaWYgKGxhc3QgJiYg
cnEtPmNvbnRleHQgIT0gbGFzdC0+Y29udGV4dCkgewotCQkJCWlmIChwb3J0ID09IGxhc3RfcG9y
dCkKLQkJCQkJZ290byBkb25lOwotCi0JCQkJKnBvcnQgPSBzY2hlZHVsZV9pbihsYXN0LAotCQkJ
CQkJICAgIHBvcnQgLSBleGVjbGlzdHMtPmluZmxpZ2h0KTsKLQkJCQlwb3J0Kys7Ci0JCQl9CisJ
CQlpZiAobGFzdCAmJiBycS0+Y29udGV4dCAhPSBsYXN0LT5jb250ZXh0KQorCQkJCWdvdG8gZG9u
ZTsKIAogCQkJbGlzdF9kZWxfaW5pdCgmcnEtPnNjaGVkLmxpbmspOworCiAJCQlfX2k5MTVfcmVx
dWVzdF9zdWJtaXQocnEpOwotCQkJc3VibWl0ID0gdHJ1ZTsKKworCQkJdHJhY2VfaTkxNV9yZXF1
ZXN0X2luKHJxLCAwKTsKIAkJCWxhc3QgPSBycTsKKwkJCXN1Ym1pdCA9IHRydWU7CiAJCX0KIAog
CQlyYl9lcmFzZV9jYWNoZWQoJnAtPm5vZGUsICZzY2hlZF9lbmdpbmUtPnF1ZXVlKTsKIAkJaTkx
NV9wcmlvbGlzdF9mcmVlKHApOwogCX0KIGRvbmU6Ci0Jc2NoZWRfZW5naW5lLT5xdWV1ZV9wcmlv
cml0eV9oaW50ID0KLQkJcmIgPyB0b19wcmlvbGlzdChyYiktPnByaW9yaXR5IDogSU5UX01JTjsK
IAlpZiAoc3VibWl0KSB7Ci0JCSpwb3J0ID0gc2NoZWR1bGVfaW4obGFzdCwgcG9ydCAtIGV4ZWNs
aXN0cy0+aW5mbGlnaHQpOwotCQkqKytwb3J0ID0gTlVMTDsKLQkJZ3VjX3N1Ym1pdChlbmdpbmUs
IGZpcnN0LCBwb3J0KTsKKwkJZ3VjX3NldF9scmNfdGFpbChsYXN0KTsKK3Jlc3VibWl0OgorCQly
ZXQgPSBndWNfYWRkX3JlcXVlc3QoZ3VjLCBsYXN0KTsKKwkJaWYgKHVubGlrZWx5KHJldCA9PSAt
RVBJUEUpKQorCQkJZ290byBkZWFkbGs7CisJCWVsc2UgaWYgKHJldCA9PSAtRUJVU1kpIHsKKwkJ
CXRhc2tsZXRfc2NoZWR1bGUoJnNjaGVkX2VuZ2luZS0+dGFza2xldCk7CisJCQlndWMtPnN0YWxs
ZWRfcmVxdWVzdCA9IGxhc3Q7CisJCQlyZXR1cm4gZmFsc2U7CisJCX0KIAl9Ci0JZXhlY2xpc3Rz
LT5hY3RpdmUgPSBleGVjbGlzdHMtPmluZmxpZ2h0OworCisJZ3VjLT5zdGFsbGVkX3JlcXVlc3Qg
PSBOVUxMOworCXJldHVybiBzdWJtaXQ7CisKK2RlYWRsazoKKwlzY2hlZF9lbmdpbmUtPnRhc2ts
ZXQuY2FsbGJhY2sgPSBOVUxMOworCXRhc2tsZXRfZGlzYWJsZV9ub3N5bmMoJnNjaGVkX2VuZ2lu
ZS0+dGFza2xldCk7CisJcmV0dXJuIGZhbHNlOwogfQogCiBzdGF0aWMgdm9pZCBndWNfc3VibWlz
c2lvbl90YXNrbGV0KHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKIHsKIAlzdHJ1Y3QgaTkxNV9z
Y2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSA9CiAJCWZyb21fdGFza2xldChzY2hlZF9lbmdpbmUs
IHQsIHRhc2tsZXQpOwotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUgPSBz
Y2hlZF9lbmdpbmUtPnByaXZhdGVfZGF0YTsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0
cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICoqcG9ydCwgKnJxOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9vbCBsb29wOwor
CisJc3Bpbl9sb2NrX2lycXNhdmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOwogCi0Jc3Bp
bl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJZG8g
eworCQlsb29wID0gZ3VjX2RlcXVldWVfb25lX2NvbnRleHQoc2NoZWRfZW5naW5lLT5wcml2YXRl
X2RhdGEpOworCX0gd2hpbGUgKGxvb3ApOwogCi0JZm9yIChwb3J0ID0gZXhlY2xpc3RzLT5pbmZs
aWdodDsgKHJxID0gKnBvcnQpOyBwb3J0KyspIHsKLQkJaWYgKCFpOTE1X3JlcXVlc3RfY29tcGxl
dGVkKHJxKSkKLQkJCWJyZWFrOworCWk5MTVfc2NoZWRfZW5naW5lX3Jlc2V0X29uX2VtcHR5KHNj
aGVkX2VuZ2luZSk7CiAKLQkJc2NoZWR1bGVfb3V0KHJxKTsKLQl9Ci0JaWYgKHBvcnQgIT0gZXhl
Y2xpc3RzLT5pbmZsaWdodCkgewotCQlpbnQgaWR4ID0gcG9ydCAtIGV4ZWNsaXN0cy0+aW5mbGln
aHQ7Ci0JCWludCByZW0gPSBBUlJBWV9TSVpFKGV4ZWNsaXN0cy0+aW5mbGlnaHQpIC0gaWR4Owot
CQltZW1tb3ZlKGV4ZWNsaXN0cy0+aW5mbGlnaHQsIHBvcnQsIHJlbSAqIHNpemVvZigqcG9ydCkp
OworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOwor
fQorCitzdGF0aWMgdm9pZCBjc19pcnFfaGFuZGxlcihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsIHUxNiBpaXIpCit7CisJaWYgKGlpciAmIEdUX1JFTkRFUl9VU0VSX0lOVEVSUlVQVCkK
KwkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhlbmdpbmUpOworfQorCitzdGF0aWMg
dm9pZCBfX2d1Y19jb250ZXh0X2Rlc3Ryb3koc3RydWN0IGludGVsX2NvbnRleHQgKmNlKTsKK3N0
YXRpYyB2b2lkIHJlbGVhc2VfZ3VjX2lkKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yywgc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKTsKK3N0YXRpYyB2b2lkIGd1Y19zaWduYWxfY29udGV4dF9mZW5jZShz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOworc3RhdGljIHZvaWQgZ3VjX2NhbmNlbF9jb250ZXh0
X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CitzdGF0aWMgdm9pZCBndWNfYmxv
Y2tlZF9mZW5jZV9jb21wbGV0ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOworCitzdGF0aWMg
dm9pZCBzY3J1Yl9ndWNfZGVzY19mb3Jfb3V0c3RhbmRpbmdfZzJoKHN0cnVjdCBpbnRlbF9ndWMg
Kmd1YykKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJdW5zaWduZWQgbG9uZyBpbmRl
eCwgZmxhZ3M7CisJYm9vbCBwZW5kaW5nX2Rpc2FibGUsIHBlbmRpbmdfZW5hYmxlLCBkZXJlZ2lz
dGVyLCBkZXN0cm95ZWQsIGJhbm5lZDsKKworCXhhX2Zvcl9lYWNoKCZndWMtPmNvbnRleHRfbG9v
a3VwLCBpbmRleCwgY2UpIHsKKwkJLyogRmx1c2ggY29udGV4dCAqLworCQlzcGluX2xvY2tfaXJx
c2F2ZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3Rv
cmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCisJCS8qCisJCSAqIE9uY2Ugd2UgYXJl
IGF0IHRoaXMgcG9pbnQgc3VibWlzc2lvbl9kaXNhYmxlZCgpIGlzIGd1YXJhbnRlZWQKKwkJICog
dG8gYmUgdmlzaWJsZSB0byBhbGwgY2FsbGVycyB3aG8gc2V0IHRoZSBiZWxvdyBmbGFncyAoc2Vl
IGFib3ZlCisJCSAqIGZsdXNoIGFuZCBmbHVzaGVzIGluIHJlc2V0X3ByZXBhcmUpLiBJZiBzdWJt
aXNzaW9uX2Rpc2FibGVkKCkKKwkJICogaXMgc2V0LCB0aGUgY2FsbGVyIHNob3VsZG4ndCBzZXQg
dGhlc2UgZmxhZ3MuCisJCSAqLworCisJCWRlc3Ryb3llZCA9IGNvbnRleHRfZGVzdHJveWVkKGNl
KTsKKwkJcGVuZGluZ19lbmFibGUgPSBjb250ZXh0X3BlbmRpbmdfZW5hYmxlKGNlKTsKKwkJcGVu
ZGluZ19kaXNhYmxlID0gY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2UpOworCQlkZXJlZ2lzdGVy
ID0gY29udGV4dF93YWl0X2Zvcl9kZXJlZ2lzdGVyX3RvX3JlZ2lzdGVyKGNlKTsKKwkJYmFubmVk
ID0gY29udGV4dF9iYW5uZWQoY2UpOworCQlpbml0X3NjaGVkX3N0YXRlKGNlKTsKKworCQlpZiAo
cGVuZGluZ19lbmFibGUgfHwgZGVzdHJveWVkIHx8IGRlcmVnaXN0ZXIpIHsKKwkJCWF0b21pY19k
ZWMoJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgpOworCQkJaWYgKGRlcmVnaXN0ZXIp
CisJCQkJZ3VjX3NpZ25hbF9jb250ZXh0X2ZlbmNlKGNlKTsKKwkJCWlmIChkZXN0cm95ZWQpIHsK
KwkJCQlyZWxlYXNlX2d1Y19pZChndWMsIGNlKTsKKwkJCQlfX2d1Y19jb250ZXh0X2Rlc3Ryb3ko
Y2UpOworCQkJfQorCQkJaWYgKHBlbmRpbmdfZW5hYmxlIHx8IGRlcmVnaXN0ZXIpCisJCQkJaW50
ZWxfY29udGV4dF9wdXQoY2UpOworCQl9CisKKwkJLyogTm90IG11dHVhbHkgZXhjbHVzaXZlIHdp
dGggYWJvdmUgaWYgc3RhdGVtZW50LiAqLworCQlpZiAocGVuZGluZ19kaXNhYmxlKSB7CisJCQln
dWNfc2lnbmFsX2NvbnRleHRfZmVuY2UoY2UpOworCQkJaWYgKGJhbm5lZCkgeworCQkJCWd1Y19j
YW5jZWxfY29udGV4dF9yZXF1ZXN0cyhjZSk7CisJCQkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVh
ZGNydW1icyhjZS0+ZW5naW5lKTsKKwkJCX0KKwkJCWludGVsX2NvbnRleHRfc2NoZWRfZGlzYWJs
ZV91bnBpbihjZSk7CisJCQlhdG9taWNfZGVjKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Npb25f
ZzJoKTsKKwkJCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsK
KwkJCWd1Y19ibG9ja2VkX2ZlbmNlX2NvbXBsZXRlKGNlKTsKKwkJCXNwaW5fdW5sb2NrX2lycXJl
c3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCisJCQlpbnRlbF9jb250ZXh0X3B1
dChjZSk7CisJCX0KIAl9Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbAorc3VibWlzc2lvbl9kaXNh
YmxlZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5l
ICogY29uc3Qgc2NoZWRfZW5naW5lID0gZ3VjLT5zY2hlZF9lbmdpbmU7CiAKLQlfX2d1Y19kZXF1
ZXVlKGVuZ2luZSk7CisJcmV0dXJuIHVubGlrZWx5KCFzY2hlZF9lbmdpbmUgfHwKKwkJCSFfX3Rh
c2tsZXRfaXNfZW5hYmxlZCgmc2NoZWRfZW5naW5lLT50YXNrbGV0KSk7Cit9CiAKLQlpOTE1X3Nj
aGVkX2VuZ2luZV9yZXNldF9vbl9lbXB0eShlbmdpbmUtPnNjaGVkX2VuZ2luZSk7CitzdGF0aWMg
dm9pZCBkaXNhYmxlX3N1Ym1pc3Npb24oc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCXN0cnVj
dCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2VuZ2luZSA9IGd1Yy0+c2NoZWRfZW5n
aW5lOwogCi0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxv
Y2ssIGZsYWdzKTsKKwlpZiAoX190YXNrbGV0X2lzX2VuYWJsZWQoJnNjaGVkX2VuZ2luZS0+dGFz
a2xldCkpIHsKKwkJR0VNX0JVR19PTighZ3VjLT5jdC5lbmFibGVkKTsKKwkJX190YXNrbGV0X2Rp
c2FibGVfc3luY19vbmNlKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpOworCQlzY2hlZF9lbmdpbmUt
PnRhc2tsZXQuY2FsbGJhY2sgPSBOVUxMOworCX0KIH0KIAotc3RhdGljIHZvaWQgY3NfaXJxX2hh
bmRsZXIoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCB1MTYgaWlyKQorc3RhdGljIHZv
aWQgZW5hYmxlX3N1Ym1pc3Npb24oc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewotCWlmIChpaXIg
JiBHVF9SRU5ERVJfVVNFUl9JTlRFUlJVUFQpIHsKLQkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVh
ZGNydW1icyhlbmdpbmUpOwotCQl0YXNrbGV0X2hpX3NjaGVkdWxlKCZlbmdpbmUtPnNjaGVkX2Vu
Z2luZS0+dGFza2xldCk7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICogY29uc3Qgc2NoZWRf
ZW5naW5lID0gZ3VjLT5zY2hlZF9lbmdpbmU7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCXNw
aW5fbG9ja19pcnFzYXZlKCZndWMtPnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCXNjaGVk
X2VuZ2luZS0+dGFza2xldC5jYWxsYmFjayA9IGd1Y19zdWJtaXNzaW9uX3Rhc2tsZXQ7CisJd21i
KCk7CS8qIE1ha2Ugc3VyZSBjYWxsYmFjayB2aXNpYmxlICovCisJaWYgKCFfX3Rhc2tsZXRfaXNf
ZW5hYmxlZCgmc2NoZWRfZW5naW5lLT50YXNrbGV0KSAmJgorCSAgICBfX3Rhc2tsZXRfZW5hYmxl
KCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpKSB7CisJCUdFTV9CVUdfT04oIWd1Yy0+Y3QuZW5hYmxl
ZCk7CisKKwkJLyogQW5kIGtpY2sgaW4gY2FzZSB3ZSBtaXNzZWQgYSBuZXcgcmVxdWVzdCBzdWJt
aXNzaW9uLiAqLworCQl0YXNrbGV0X2hpX3NjaGVkdWxlKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQp
OwogCX0KKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZndWMtPnNjaGVkX2VuZ2luZS0+bG9jaywg
ZmxhZ3MpOwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCitzdGF0aWMgdm9pZCBndWNfZmx1c2hfc3VibWlzc2lvbnMoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKQogewotCUVOR0lORV9UUkFDRShlbmdpbmUsICJcbiIpOworCXN0
cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2VuZ2luZSA9IGd1Yy0+c2NoZWRf
ZW5naW5lOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmc2No
ZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmc2NoZWRf
ZW5naW5lLT5sb2NrLCBmbGFncyk7Cit9CisKK3ZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fcmVz
ZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaW50IGk7CisKKwlpZiAodW5s
aWtlbHkoIWd1Y19zdWJtaXNzaW9uX2luaXRpYWxpemVkKGd1YykpKSB7CisJCS8qIFJlc2V0IGNh
bGxlZCBkdXJpbmcgZHJpdmVyIGxvYWQ/IEd1QyBub3QgeWV0IGluaXRpYWxpc2VkISAqLworCQly
ZXR1cm47CisJfQorCisJaW50ZWxfZ3RfcGFya19oZWFydGJlYXRzKGd1Y190b19ndChndWMpKTsK
KwlkaXNhYmxlX3N1Ym1pc3Npb24oZ3VjKTsKKwlndWMtPmludGVycnVwdHMuZGlzYWJsZShndWMp
OworCisJLyogRmx1c2ggSVJRIGhhbmRsZXIgKi8KKwlzcGluX2xvY2tfaXJxKCZndWNfdG9fZ3Qo
Z3VjKS0+aXJxX2xvY2spOworCXNwaW5fdW5sb2NrX2lycSgmZ3VjX3RvX2d0KGd1YyktPmlycV9s
b2NrKTsKKworCWd1Y19mbHVzaF9zdWJtaXNzaW9ucyhndWMpOwogCiAJLyoKLQkgKiBQcmV2ZW50
IHJlcXVlc3Qgc3VibWlzc2lvbiB0byB0aGUgaGFyZHdhcmUgdW50aWwgd2UgaGF2ZQotCSAqIGNv
bXBsZXRlZCB0aGUgcmVzZXQgaW4gaTkxNV9nZW1fcmVzZXRfZmluaXNoKCkuIElmIGEgcmVxdWVz
dAotCSAqIGlzIGNvbXBsZXRlZCBieSBvbmUgZW5naW5lLCBpdCBtYXkgdGhlbiBxdWV1ZSBhIHJl
cXVlc3QKLQkgKiB0byBhIHNlY29uZCB2aWEgaXRzIGV4ZWNsaXN0cy0+dGFza2xldCAqanVzdCog
YXMgd2UgYXJlCi0JICogY2FsbGluZyBlbmdpbmUtPmluaXRfaHcoKSBhbmQgYWxzbyB3cml0aW5n
IHRoZSBFTFNQLgotCSAqIFR1cm5pbmcgb2ZmIHRoZSBleGVjbGlzdHMtPnRhc2tsZXQgdW50aWwg
dGhlIHJlc2V0IGlzIG92ZXIKLQkgKiBwcmV2ZW50cyB0aGUgcmFjZS4KKwkgKiBIYW5kbGUgYW55
IG91dHN0YW5kaW5nIEcySHMgYmVmb3JlIHJlc2V0LiBDYWxsIElSUSBoYW5kbGVyIGRpcmVjdGx5
CisJICogZWFjaCBwYXNzIGFzIGludGVycnVwdCBoYXZlIGJlZW4gZGlzYWJsZWQuIFdlIGFsd2F5
cyBzY3J1YiBmb3IKKwkgKiBvdXRzdGFuZGluZyBHMkggYXMgaXQgaXMgcG9zc2libGUgZm9yIG91
dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoIHRvCisJICogYmUgaW5jcmVtZW50ZWQgYWZ0ZXIgdGhl
IGNvbnRleHQgc3RhdGUgdXBkYXRlLgogCSAqLwotCV9fdGFza2xldF9kaXNhYmxlX3N5bmNfb25j
ZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQpOworCWZvciAoaSA9IDA7IGkgPCA0ICYm
IGF0b21pY19yZWFkKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKTsgKytpKSB7CisJ
CWludGVsX2d1Y190b19ob3N0X2V2ZW50X2hhbmRsZXIoZ3VjKTsKKyNkZWZpbmUgd2FpdF9mb3Jf
cmVzZXQoZ3VjLCB3YWl0X3ZhcikgXAorCQlpbnRlbF9ndWNfd2FpdF9mb3JfcGVuZGluZ19tc2co
Z3VjLCB3YWl0X3ZhciwgZmFsc2UsIChIWiAvIDIwKSkKKwkJZG8geworCQkJd2FpdF9mb3JfcmVz
ZXQoZ3VjLCAmZ3VjLT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCk7CisJCX0gd2hpbGUgKCFs
aXN0X2VtcHR5KCZndWMtPmN0LnJlcXVlc3RzLmluY29taW5nKSk7CisJfQorCXNjcnViX2d1Y19k
ZXNjX2Zvcl9vdXRzdGFuZGluZ19nMmgoZ3VjKTsKK30KKworc3RhdGljIHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKgorZ3VjX3ZpcnR1YWxfZ2V0X3NpYmxpbmcoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqdmUsIHVuc2lnbmVkIGludCBzaWJsaW5nKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKKwlpbnRlbF9lbmdpbmVfbWFza190IHRtcCwgbWFzayA9IHZlLT5tYXNrOworCXVu
c2lnbmVkIGludCBudW1fc2libGluZ3MgPSAwOworCisJZm9yX2VhY2hfZW5naW5lX21hc2tlZChl
bmdpbmUsIHZlLT5ndCwgbWFzaywgdG1wKQorCQlpZiAobnVtX3NpYmxpbmdzKysgPT0gc2libGlu
ZykKKwkJCXJldHVybiBlbmdpbmU7CisKKwlyZXR1cm4gTlVMTDsKK30KKworc3RhdGljIGlubGlu
ZSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoKK19fY29udGV4dF90b19waHlzaWNhbF9lbmdpbmUo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSA9IGNlLT5lbmdpbmU7CisKKwlpZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5l
KSkKKwkJZW5naW5lID0gZ3VjX3ZpcnR1YWxfZ2V0X3NpYmxpbmcoZW5naW5lLCAwKTsKKworCXJl
dHVybiBlbmdpbmU7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19yZXNldF9zdGF0ZShzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCi0JCQkgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAot
CQkJICAgIHUzMiBoZWFkLAotCQkJICAgIGJvb2wgc2NydWIpCitzdGF0aWMgdm9pZCBndWNfcmVz
ZXRfc3RhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB1MzIgaGVhZCwgYm9vbCBzY3J1YikK
IHsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBfX2NvbnRleHRfdG9fcGh5c2lj
YWxfZW5naW5lKGNlKTsKKworCWlmIChpbnRlbF9jb250ZXh0X2lzX2Jhbm5lZChjZSkpCisJCXJl
dHVybjsKKwogCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSk7CiAKIAkv
KgpAQCAtMzE1LDY5ICs3NzAsMTU5IEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9zdGF0ZShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJbHJjX3VwZGF0ZV9yZWdzKGNlLCBlbmdpbmUsIGhlYWQp
OwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfcmV3aW5kKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQorc3RhdGljIHZvaWQgZ3VjX3Jlc2V0X25vcChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9leGVj
bGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnE7Ci0JdW5zaWduZWQgbG9uZyBmbGFnczsKK30KIAotCXNwaW5fbG9ja19p
cnFzYXZlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworc3RhdGljIHZvaWQg
Z3VjX3Jld2luZF9ub3Aoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxs
ZWQpCit7Cit9CiAKLQkvKiBQdXNoIGJhY2sgYW55IGluY29tcGxldGUgcmVxdWVzdHMgZm9yIHJl
cGxheSBhZnRlciB0aGUgcmVzZXQuICovCi0JcnEgPSBleGVjbGlzdHNfdW53aW5kX2luY29tcGxl
dGVfcmVxdWVzdHMoZXhlY2xpc3RzKTsKLQlpZiAoIXJxKQotCQlnb3RvIG91dF91bmxvY2s7Citz
dGF0aWMgdm9pZAorX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UpCit7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKKwlzdHJ1Y3QgbGlz
dF9oZWFkICpwbDsKKwlpbnQgcHJpbyA9IEk5MTVfUFJJT1JJVFlfSU5WQUxJRDsKKwlzdHJ1Y3Qg
aTkxNV9zY2hlZF9lbmdpbmUgKiBjb25zdCBzY2hlZF9lbmdpbmUgPQorCQljZS0+ZW5naW5lLT5z
Y2hlZF9lbmdpbmU7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKIAotCWlmICghaTkxNV9yZXF1ZXN0
X3N0YXJ0ZWQocnEpKQotCQlzdGFsbGVkID0gZmFsc2U7CisJc3Bpbl9sb2NrX2lycXNhdmUoJnNj
aGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCXNwaW5fbG9jaygmY2UtPmd1Y19hY3RpdmUubG9j
ayk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJxLCBybiwKKwkJCQkgJmNlLT5ndWNfYWN0
aXZlLnJlcXVlc3RzLAorCQkJCSBzY2hlZC5saW5rKSB7CisJCWlmIChpOTE1X3JlcXVlc3RfY29t
cGxldGVkKHJxKSkKKwkJCWNvbnRpbnVlOworCisJCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5s
aW5rKTsKKwkJc3Bpbl91bmxvY2soJmNlLT5ndWNfYWN0aXZlLmxvY2spOworCisJCV9faTkxNV9y
ZXF1ZXN0X3Vuc3VibWl0KHJxKTsKKworCQkvKiBQdXNoIHRoZSByZXF1ZXN0IGJhY2sgaW50byB0
aGUgcXVldWUgZm9yIGxhdGVyIHJlc3VibWlzc2lvbi4gKi8KKwkJR0VNX0JVR19PTihycV9wcmlv
KHJxKSA9PSBJOTE1X1BSSU9SSVRZX0lOVkFMSUQpOworCQlpZiAocnFfcHJpbyhycSkgIT0gcHJp
bykgeworCQkJcHJpbyA9IHJxX3ByaW8ocnEpOworCQkJcGwgPSBpOTE1X3NjaGVkX2xvb2t1cF9w
cmlvbGlzdChzY2hlZF9lbmdpbmUsIHByaW8pOworCQl9CisJCUdFTV9CVUdfT04oaTkxNV9zY2hl
ZF9lbmdpbmVfaXNfZW1wdHkoc2NoZWRfZW5naW5lKSk7CiAKLQlfX2k5MTVfcmVxdWVzdF9yZXNl
dChycSwgc3RhbGxlZCk7Ci0JZ3VjX3Jlc2V0X3N0YXRlKHJxLT5jb250ZXh0LCBlbmdpbmUsIHJx
LT5oZWFkLCBzdGFsbGVkKTsKKwkJbGlzdF9hZGRfdGFpbCgmcnEtPnNjaGVkLmxpbmssIHBsKTsK
KwkJc2V0X2JpdChJOTE1X0ZFTkNFX0ZMQUdfUFFVRVVFLCAmcnEtPmZlbmNlLmZsYWdzKTsKIAot
b3V0X3VubG9jazoKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnNjaGVkX2VuZ2lu
ZS0+bG9jaywgZmxhZ3MpOworCQlzcGluX2xvY2soJmNlLT5ndWNfYWN0aXZlLmxvY2spOworCX0K
KwlzcGluX3VubG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7CisJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19y
ZXNldF9jYW5jZWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3RhdGljIHZvaWQg
X19ndWNfcmVzZXRfY29udGV4dChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgc3RhbGxl
ZCkKIHsKLQlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKiBjb25zdCBzY2hlZF9lbmdpbmUgPSBl
bmdpbmUtPnNjaGVkX2VuZ2luZTsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOwotCXN0
cnVjdCByYl9ub2RlICpyYjsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOworCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxOworCXUzMiBoZWFkOwogCi0JRU5HSU5FX1RSQUNFKGVuZ2luZSwgIlxuIik7CisJ
aW50ZWxfY29udGV4dF9nZXQoY2UpOwogCiAJLyoKLQkgKiBCZWZvcmUgd2UgY2FsbCBlbmdpbmUt
PmNhbmNlbF9yZXF1ZXN0cygpLCB3ZSBzaG91bGQgaGF2ZSBleGNsdXNpdmUKLQkgKiBhY2Nlc3Mg
dG8gdGhlIHN1Ym1pc3Npb24gc3RhdGUuIFRoaXMgaXMgYXJyYW5nZWQgZm9yIHVzIGJ5IHRoZQot
CSAqIGNhbGxlciBkaXNhYmxpbmcgdGhlIGludGVycnVwdCBnZW5lcmF0aW9uLCB0aGUgdGFza2xl
dCBhbmQgb3RoZXIKLQkgKiB0aHJlYWRzIHRoYXQgbWF5IHRoZW4gYWNjZXNzIHRoZSBzYW1lIHN0
YXRlLCBnaXZpbmcgdXMgYSBmcmVlIGhhbmQKLQkgKiB0byByZXNldCBzdGF0ZS4gSG93ZXZlciwg
d2Ugc3RpbGwgbmVlZCB0byBsZXQgbG9ja2RlcCBiZSBhd2FyZSB0aGF0Ci0JICogd2Uga25vdyB0
aGlzIHN0YXRlIG1heSBiZSBhY2Nlc3NlZCBpbiBoYXJkaXJxIGNvbnRleHQsIHNvIHdlCi0JICog
ZGlzYWJsZSB0aGUgaXJxIGFyb3VuZCB0aGlzIG1hbmlwdWxhdGlvbiBhbmQgd2Ugd2FudCB0byBr
ZWVwCi0JICogdGhlIHNwaW5sb2NrIGZvY3VzZWQgb24gaXRzIGR1dGllcyBhbmQgbm90IGFjY2lk
ZW50YWxseSBjb25mbGF0ZQotCSAqIGNvdmVyYWdlIHRvIHRoZSBzdWJtaXNzaW9uJ3MgaXJxIHN0
YXRlLiAoU2ltaWxhcmx5LCBhbHRob3VnaCB3ZQotCSAqIHNob3VsZG4ndCBuZWVkIHRvIGRpc2Fi
bGUgaXJxIGFyb3VuZCB0aGUgbWFuaXB1bGF0aW9uIG9mIHRoZQotCSAqIHN1Ym1pc3Npb24ncyBp
cnEgc3RhdGUsIHdlIGFsc28gd2lzaCB0byByZW1pbmQgb3Vyc2VsdmVzIHRoYXQKLQkgKiBpdCBp
cyBpcnEgc3RhdGUuKQorCSAqIEd1QyB3aWxsIGltcGxpY2l0bHkgbWFyayB0aGUgY29udGV4dCBh
cyBub24tc2NoZWR1bGFibGUKKwkgKiB3aGVuIGl0IHNlbmRzIHRoZSByZXNldCBub3RpZmljYXRp
b24uIE1ha2Ugc3VyZSBvdXIgc3RhdGUKKwkgKiByZWZsZWN0cyB0aGlzIGNoYW5nZS4gVGhlIGNv
bnRleHQgd2lsbCBiZSBtYXJrZWQgZW5hYmxlZAorCSAqIG9uIHJlc3VibWlzc2lvbi4KIAkgKi8K
LQlzcGluX2xvY2tfaXJxc2F2ZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJY2xyX2Nv
bnRleHRfZW5hYmxlZChjZSk7CiAKLQkvKiBNYXJrIGFsbCBleGVjdXRpbmcgcmVxdWVzdHMgYXMg
c2tpcHBlZC4gKi8KLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAmc2NoZWRfZW5naW5lLT5yZXF1
ZXN0cywgc2NoZWQubGluaykgewotCQlpOTE1X3JlcXVlc3Rfc2V0X2Vycm9yX29uY2UocnEsIC1F
SU8pOwotCQlpOTE1X3JlcXVlc3RfbWFya19jb21wbGV0ZShycSk7CisJcnEgPSBpbnRlbF9jb250
ZXh0X2ZpbmRfYWN0aXZlX3JlcXVlc3QoY2UpOworCWlmICghcnEpIHsKKwkJaGVhZCA9IGNlLT5y
aW5nLT50YWlsOworCQlzdGFsbGVkID0gZmFsc2U7CisJCWdvdG8gb3V0X3JlcGxheTsKIAl9CiAK
LQkvKiBGbHVzaCB0aGUgcXVldWVkIHJlcXVlc3RzIHRvIHRoZSB0aW1lbGluZSBsaXN0IChmb3Ig
cmV0aXJpbmcpLiAqLwotCXdoaWxlICgocmIgPSByYl9maXJzdF9jYWNoZWQoJnNjaGVkX2VuZ2lu
ZS0+cXVldWUpKSkgewotCQlzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcCA9IHRvX3ByaW9saXN0KHJi
KTsKLQorCWlmICghaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpKQorCQlzdGFsbGVkID0gZmFsc2U7
CisKKwlHRU1fQlVHX09OKGk5MTVfYWN0aXZlX2lzX2lkbGUoJmNlLT5hY3RpdmUpKTsKKwloZWFk
ID0gaW50ZWxfcmluZ193cmFwKGNlLT5yaW5nLCBycS0+aGVhZCk7CisJX19pOTE1X3JlcXVlc3Rf
cmVzZXQocnEsIHN0YWxsZWQpOworCitvdXRfcmVwbGF5OgorCWd1Y19yZXNldF9zdGF0ZShjZSwg
aGVhZCwgc3RhbGxlZCk7CisJX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhjZSk7CisJaW50
ZWxfY29udGV4dF9wdXQoY2UpOworfQorCit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX3Jlc2V0
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgYm9vbCBzdGFsbGVkKQoreworCXN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZTsKKwl1bnNpZ25lZCBsb25nIGluZGV4OworCisJaWYgKHVubGlrZWx5KCFndWNf
c3VibWlzc2lvbl9pbml0aWFsaXplZChndWMpKSkgeworCQkvKiBSZXNldCBjYWxsZWQgZHVyaW5n
IGRyaXZlciBsb2FkPyBHdUMgbm90IHlldCBpbml0aWFsaXNlZCEgKi8KKwkJcmV0dXJuOworCX0K
KworCXhhX2Zvcl9lYWNoKCZndWMtPmNvbnRleHRfbG9va3VwLCBpbmRleCwgY2UpCisJCWlmIChp
bnRlbF9jb250ZXh0X2lzX3Bpbm5lZChjZSkpCisJCQlfX2d1Y19yZXNldF9jb250ZXh0KGNlLCBz
dGFsbGVkKTsKKworCS8qIEd1QyBpcyBibG93biBhd2F5LCBkcm9wIGFsbCByZWZlcmVuY2VzIHRv
IGNvbnRleHRzICovCisJeGFfZGVzdHJveSgmZ3VjLT5jb250ZXh0X2xvb2t1cCk7Cit9CisKK3N0
YXRpYyB2b2lkIGd1Y19jYW5jZWxfY29udGV4dF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UpCit7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUgPSBjZV90
b19ndWMoY2UpLT5zY2hlZF9lbmdpbmU7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJdW5z
aWduZWQgbG9uZyBmbGFnczsKKworCS8qIE1hcmsgYWxsIGV4ZWN1dGluZyByZXF1ZXN0cyBhcyBz
a2lwcGVkLiAqLworCXNwaW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdz
KTsKKwlzcGluX2xvY2soJmNlLT5ndWNfYWN0aXZlLmxvY2spOworCWxpc3RfZm9yX2VhY2hfZW50
cnkocnEsICZjZS0+Z3VjX2FjdGl2ZS5yZXF1ZXN0cywgc2NoZWQubGluaykKKwkJaTkxNV9yZXF1
ZXN0X3B1dChpOTE1X3JlcXVlc3RfbWFya19laW8ocnEpKTsKKwlzcGluX3VubG9jaygmY2UtPmd1
Y19hY3RpdmUubG9jayk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmc2NoZWRfZW5naW5lLT5s
b2NrLCBmbGFncyk7Cit9CisKK3N0YXRpYyB2b2lkCitndWNfY2FuY2VsX3NjaGVkX2VuZ2luZV9y
ZXF1ZXN0cyhzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSkKK3sKKwlzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOworCXN0cnVjdCByYl9ub2RlICpyYjsKKwl1bnNpZ25l
ZCBsb25nIGZsYWdzOworCisJLyogQ2FuIGJlIGNhbGxlZCBkdXJpbmcgYm9vdCBpZiBHdUMgZmFp
bHMgdG8gbG9hZCAqLworCWlmICghc2NoZWRfZW5naW5lKQorCQlyZXR1cm47CisKKwkvKgorCSAq
IEJlZm9yZSB3ZSBjYWxsIGVuZ2luZS0+Y2FuY2VsX3JlcXVlc3RzKCksIHdlIHNob3VsZCBoYXZl
IGV4Y2x1c2l2ZQorCSAqIGFjY2VzcyB0byB0aGUgc3VibWlzc2lvbiBzdGF0ZS4gVGhpcyBpcyBh
cnJhbmdlZCBmb3IgdXMgYnkgdGhlCisJICogY2FsbGVyIGRpc2FibGluZyB0aGUgaW50ZXJydXB0
IGdlbmVyYXRpb24sIHRoZSB0YXNrbGV0IGFuZCBvdGhlcgorCSAqIHRocmVhZHMgdGhhdCBtYXkg
dGhlbiBhY2Nlc3MgdGhlIHNhbWUgc3RhdGUsIGdpdmluZyB1cyBhIGZyZWUgaGFuZAorCSAqIHRv
IHJlc2V0IHN0YXRlLiBIb3dldmVyLCB3ZSBzdGlsbCBuZWVkIHRvIGxldCBsb2NrZGVwIGJlIGF3
YXJlIHRoYXQKKwkgKiB3ZSBrbm93IHRoaXMgc3RhdGUgbWF5IGJlIGFjY2Vzc2VkIGluIGhhcmRp
cnEgY29udGV4dCwgc28gd2UKKwkgKiBkaXNhYmxlIHRoZSBpcnEgYXJvdW5kIHRoaXMgbWFuaXB1
bGF0aW9uIGFuZCB3ZSB3YW50IHRvIGtlZXAKKwkgKiB0aGUgc3BpbmxvY2sgZm9jdXNlZCBvbiBp
dHMgZHV0aWVzIGFuZCBub3QgYWNjaWRlbnRhbGx5IGNvbmZsYXRlCisJICogY292ZXJhZ2UgdG8g
dGhlIHN1Ym1pc3Npb24ncyBpcnEgc3RhdGUuIChTaW1pbGFybHksIGFsdGhvdWdoIHdlCisJICog
c2hvdWxkbid0IG5lZWQgdG8gZGlzYWJsZSBpcnEgYXJvdW5kIHRoZSBtYW5pcHVsYXRpb24gb2Yg
dGhlCisJICogc3VibWlzc2lvbidzIGlycSBzdGF0ZSwgd2UgYWxzbyB3aXNoIHRvIHJlbWluZCBv
dXJzZWx2ZXMgdGhhdAorCSAqIGl0IGlzIGlycSBzdGF0ZS4pCisJICovCisJc3Bpbl9sb2NrX2ly
cXNhdmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCisJLyogRmx1c2ggdGhlIHF1ZXVl
ZCByZXF1ZXN0cyB0byB0aGUgdGltZWxpbmUgbGlzdCAoZm9yIHJldGlyaW5nKS4gKi8KKwl3aGls
ZSAoKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZzY2hlZF9lbmdpbmUtPnF1ZXVlKSkpIHsKKwkJc3Ry
dWN0IGk5MTVfcHJpb2xpc3QgKnAgPSB0b19wcmlvbGlzdChyYik7CisKIAkJcHJpb2xpc3RfZm9y
X2VhY2hfcmVxdWVzdF9jb25zdW1lKHJxLCBybiwgcCkgewogCQkJbGlzdF9kZWxfaW5pdCgmcnEt
PnNjaGVkLmxpbmspOworCiAJCQlfX2k5MTVfcmVxdWVzdF9zdWJtaXQocnEpOwotCQkJZG1hX2Zl
bmNlX3NldF9lcnJvcigmcnEtPmZlbmNlLCAtRUlPKTsKLQkJCWk5MTVfcmVxdWVzdF9tYXJrX2Nv
bXBsZXRlKHJxKTsKKworCQkJaTkxNV9yZXF1ZXN0X3B1dChpOTE1X3JlcXVlc3RfbWFya19laW8o
cnEpKTsKIAkJfQogCiAJCXJiX2VyYXNlX2NhY2hlZCgmcC0+bm9kZSwgJnNjaGVkX2VuZ2luZS0+
cXVldWUpOwpAQCAtMzkyLDE0ICs5MzcsNDEgQEAgc3RhdGljIHZvaWQgZ3VjX3Jlc2V0X2NhbmNl
bChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19yZXNl
dF9maW5pc2goc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQordm9pZCBpbnRlbF9ndWNf
c3VibWlzc2lvbl9jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewotCWlm
IChfX3Rhc2tsZXRfZW5hYmxlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+dGFza2xldCkpCi0JCS8q
IEFuZCBraWNrIGluIGNhc2Ugd2UgbWlzc2VkIGEgbmV3IHJlcXVlc3Qgc3VibWlzc2lvbi4gKi8K
LQkJdGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQpOwor
CXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1bnNpZ25lZCBsb25nIGluZGV4OworCisJeGFf
Zm9yX2VhY2goJmd1Yy0+Y29udGV4dF9sb29rdXAsIGluZGV4LCBjZSkKKwkJaWYgKGludGVsX2Nv
bnRleHRfaXNfcGlubmVkKGNlKSkKKwkJCWd1Y19jYW5jZWxfY29udGV4dF9yZXF1ZXN0cyhjZSk7
CisKKwlndWNfY2FuY2VsX3NjaGVkX2VuZ2luZV9yZXF1ZXN0cyhndWMtPnNjaGVkX2VuZ2luZSk7
CisKKwkvKiBHdUMgaXMgYmxvd24gYXdheSwgZHJvcCBhbGwgcmVmZXJlbmNlcyB0byBjb250ZXh0
cyAqLworCXhhX2Rlc3Ryb3koJmd1Yy0+Y29udGV4dF9sb29rdXApOworfQorCit2b2lkIGludGVs
X2d1Y19zdWJtaXNzaW9uX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJ
LyogUmVzZXQgY2FsbGVkIGR1cmluZyBkcml2ZXIgbG9hZCBvciBkdXJpbmcgd2VkZ2U/ICovCisJ
aWYgKHVubGlrZWx5KCFndWNfc3VibWlzc2lvbl9pbml0aWFsaXplZChndWMpIHx8CisJCSAgICAg
dGVzdF9iaXQoSTkxNV9XRURHRUQsICZndWNfdG9fZ3QoZ3VjKS0+cmVzZXQuZmxhZ3MpKSkgewor
CQlyZXR1cm47CisJfQorCisJLyoKKwkgKiBUZWNobmljYWxseSBwb3NzaWJsZSBmb3IgZWl0aGVy
IG9mIHRoZXNlIHZhbHVlcyB0byBiZSBub24temVybyBoZXJlLAorCSAqIGJ1dCB2ZXJ5IHVubGlr
ZWx5ICsgaGFybWxlc3MuIFJlZ2FyZGxlc3MgbGV0J3MgYWRkIGEgd2FybiBzbyB3ZSBjYW4KKwkg
KiBzZWUgaW4gQ0kgaWYgdGhpcyBoYXBwZW5zIGZyZXF1ZW50bHkgLyBhIHByZWN1cnNvciB0byB0
YWtpbmcgZG93biB0aGUKKwkgKiBtYWNoaW5lLgorCSAqLworCUdFTV9XQVJOX09OKGF0b21pY19y
ZWFkKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKSk7CisJYXRvbWljX3NldCgmZ3Vj
LT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCwgMCk7CiAKLQlFTkdJTkVfVFJBQ0UoZW5naW5l
LCAiZGVwdGgtPiVkXG4iLAotCQkgICAgIGF0b21pY19yZWFkKCZlbmdpbmUtPnNjaGVkX2VuZ2lu
ZS0+dGFza2xldC5jb3VudCkpOworCWludGVsX2d1Y19nbG9iYWxfcG9saWNpZXNfdXBkYXRlKGd1
Yyk7CisJZW5hYmxlX3N1Ym1pc3Npb24oZ3VjKTsKKwlpbnRlbF9ndF91bnBhcmtfaGVhcnRiZWF0
cyhndWNfdG9fZ3QoZ3VjKSk7CiB9CiAKIC8qCkBAIC00MTAsMTE2ICs5ODIsMTI3MSBAQCBpbnQg
aW50ZWxfZ3VjX3N1Ym1pc3Npb25faW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJaW50
IHJldDsKIAotCWlmIChndWMtPnN0YWdlX2Rlc2NfcG9vbCkKKwlpZiAoZ3VjLT5scmNfZGVzY19w
b29sKQorCQlyZXR1cm4gMDsKKworCXJldCA9IGd1Y19scmNfZGVzY19wb29sX2NyZWF0ZShndWMp
OworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisJLyoKKwkgKiBLZWVwIHN0YXRpYyBhbmFseXNl
cnMgaGFwcHksIGxldCB0aGVtIGtub3cgdGhhdCB3ZSBhbGxvY2F0ZWQgdGhlCisJICogdm1hIGFm
dGVyIHRlc3RpbmcgdGhhdCBpdCBkaWRuJ3QgZXhpc3QgZWFybGllci4KKwkgKi8KKwlHRU1fQlVH
X09OKCFndWMtPmxyY19kZXNjX3Bvb2wpOworCisJeGFfaW5pdF9mbGFncygmZ3VjLT5jb250ZXh0
X2xvb2t1cCwgWEFfRkxBR1NfTE9DS19JUlEpOworCisJc3Bpbl9sb2NrX2luaXQoJmd1Yy0+Y29u
dGV4dHNfbG9jayk7CisJSU5JVF9MSVNUX0hFQUQoJmd1Yy0+Z3VjX2lkX2xpc3QpOworCWlkYV9p
bml0KCZndWMtPmd1Y19pZHMpOworCisJcmV0dXJuIDA7Cit9CisKK3ZvaWQgaW50ZWxfZ3VjX3N1
Ym1pc3Npb25fZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaWYgKCFndWMtPmxyY19k
ZXNjX3Bvb2wpCisJCXJldHVybjsKKworCWd1Y19scmNfZGVzY19wb29sX2Rlc3Ryb3koZ3VjKTsK
KwlpOTE1X3NjaGVkX2VuZ2luZV9wdXQoZ3VjLT5zY2hlZF9lbmdpbmUpOworfQorCitzdGF0aWMg
aW5saW5lIHZvaWQgcXVldWVfcmVxdWVzdChzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVk
X2VuZ2luZSwKKwkJCQkgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCisJCQkJIGludCBwcmlvKQor
eworCUdFTV9CVUdfT04oIWxpc3RfZW1wdHkoJnJxLT5zY2hlZC5saW5rKSk7CisJbGlzdF9hZGRf
dGFpbCgmcnEtPnNjaGVkLmxpbmssCisJCSAgICAgIGk5MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0
KHNjaGVkX2VuZ2luZSwgcHJpbykpOworCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFHX1BRVUVVRSwg
JnJxLT5mZW5jZS5mbGFncyk7Cit9CisKK3N0YXRpYyBpbnQgZ3VjX2J5cGFzc190YXNrbGV0X3N1
Ym1pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKK3sKKwlpbnQgcmV0OworCisJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKKworCXRy
YWNlX2k5MTVfcmVxdWVzdF9pbihycSwgMCk7CisKKwlndWNfc2V0X2xyY190YWlsKHJxKTsKKwly
ZXQgPSBndWNfYWRkX3JlcXVlc3QoZ3VjLCBycSk7CisJaWYgKHJldCA9PSAtRUJVU1kpCisJCWd1
Yy0+c3RhbGxlZF9yZXF1ZXN0ID0gcnE7CisKKwlpZiAodW5saWtlbHkocmV0ID09IC1FUElQRSkp
CisJCWRpc2FibGVfc3VibWlzc2lvbihndWMpOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGlj
IHZvaWQgZ3VjX3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCXN0
cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5naW5lID0gcnEtPmVuZ2luZS0+c2NoZWRf
ZW5naW5lOworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZycS0+ZW5naW5lLT5ndC0+dWMuZ3Vj
OworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwkvKiBXaWxsIGJlIGNhbGxlZCBmcm9tIGlycS1j
b250ZXh0IHdoZW4gdXNpbmcgZm9yZWlnbiBmZW5jZXMuICovCisJc3Bpbl9sb2NrX2lycXNhdmUo
JnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCisJaWYgKHN1Ym1pc3Npb25fZGlzYWJsZWQo
Z3VjKSB8fCBndWMtPnN0YWxsZWRfcmVxdWVzdCB8fAorCSAgICAhaTkxNV9zY2hlZF9lbmdpbmVf
aXNfZW1wdHkoc2NoZWRfZW5naW5lKSkKKwkJcXVldWVfcmVxdWVzdChzY2hlZF9lbmdpbmUsIHJx
LCBycV9wcmlvKHJxKSk7CisJZWxzZSBpZiAoZ3VjX2J5cGFzc190YXNrbGV0X3N1Ym1pdChndWMs
IHJxKSA9PSAtRUJVU1kpCisJCXRhc2tsZXRfaGlfc2NoZWR1bGUoJnNjaGVkX2VuZ2luZS0+dGFz
a2xldCk7CisKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZs
YWdzKTsKK30KKworc3RhdGljIGludCBuZXdfZ3VjX2lkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykK
K3sKKwlyZXR1cm4gaWRhX3NpbXBsZV9nZXQoJmd1Yy0+Z3VjX2lkcywgMCwKKwkJCSAgICAgIEdV
Q19NQVhfTFJDX0RFU0NSSVBUT1JTLCBHRlBfS0VSTkVMIHwKKwkJCSAgICAgIF9fR0ZQX1JFVFJZ
X01BWUZBSUwgfCBfX0dGUF9OT1dBUk4pOworfQorCitzdGF0aWMgdm9pZCBfX3JlbGVhc2VfZ3Vj
X2lkKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yywgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorewor
CWlmICghY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkpIHsKKwkJaWRhX3NpbXBsZV9yZW1vdmUo
Jmd1Yy0+Z3VjX2lkcywgY2UtPmd1Y19pZCk7CisJCXJlc2V0X2xyY19kZXNjKGd1YywgY2UtPmd1
Y19pZCk7CisJCXNldF9jb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKTsKKwl9CisJaWYgKCFsaXN0
X2VtcHR5KCZjZS0+Z3VjX2lkX2xpbmspKQorCQlsaXN0X2RlbF9pbml0KCZjZS0+Z3VjX2lkX2xp
bmspOworfQorCitzdGF0aWMgdm9pZCByZWxlYXNlX2d1Y19pZChzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOwor
CisJc3Bpbl9sb2NrX2lycXNhdmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCV9fcmVs
ZWFzZV9ndWNfaWQoZ3VjLCBjZSk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250
ZXh0c19sb2NrLCBmbGFncyk7Cit9CisKK3N0YXRpYyBpbnQgc3RlYWxfZ3VjX2lkKHN0cnVjdCBp
bnRlbF9ndWMgKmd1YykKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJaW50IGd1Y19p
ZDsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmd1Yy0+Y29udGV4dHNfbG9jayk7CisKKwlpZiAo
IWxpc3RfZW1wdHkoJmd1Yy0+Z3VjX2lkX2xpc3QpKSB7CisJCWNlID0gbGlzdF9maXJzdF9lbnRy
eSgmZ3VjLT5ndWNfaWRfbGlzdCwKKwkJCQkgICAgICBzdHJ1Y3QgaW50ZWxfY29udGV4dCwKKwkJ
CQkgICAgICBndWNfaWRfbGluayk7CisKKwkJR0VNX0JVR19PTihhdG9taWNfcmVhZCgmY2UtPmd1
Y19pZF9yZWYpKTsKKwkJR0VNX0JVR19PTihjb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSk7CisK
KwkJbGlzdF9kZWxfaW5pdCgmY2UtPmd1Y19pZF9saW5rKTsKKwkJZ3VjX2lkID0gY2UtPmd1Y19p
ZDsKKwkJY2xyX2NvbnRleHRfcmVnaXN0ZXJlZChjZSk7CisJCXNldF9jb250ZXh0X2d1Y19pZF9p
bnZhbGlkKGNlKTsKKwkJcmV0dXJuIGd1Y19pZDsKKwl9IGVsc2UgeworCQlyZXR1cm4gLUVBR0FJ
TjsKKwl9Cit9CisKK3N0YXRpYyBpbnQgYXNzaWduX2d1Y19pZChzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMsIHUxNiAqb3V0KQoreworCWludCByZXQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZndWMt
PmNvbnRleHRzX2xvY2spOworCisJcmV0ID0gbmV3X2d1Y19pZChndWMpOworCWlmICh1bmxpa2Vs
eShyZXQgPCAwKSkgeworCQlyZXQgPSBzdGVhbF9ndWNfaWQoZ3VjKTsKKwkJaWYgKHJldCA8IDAp
CisJCQlyZXR1cm4gcmV0OworCX0KKworCSpvdXQgPSByZXQ7CisJcmV0dXJuIDA7Cit9CisKKyNk
ZWZpbmUgUElOX0dVQ19JRF9UUklFUwk0CitzdGF0aWMgaW50IHBpbl9ndWNfaWQoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJaW50IHJldCA9IDA7
CisJdW5zaWduZWQgbG9uZyBmbGFncywgdHJpZXMgPSBQSU5fR1VDX0lEX1RSSUVTOworCisJR0VN
X0JVR19PTihhdG9taWNfcmVhZCgmY2UtPmd1Y19pZF9yZWYpKTsKKwordHJ5X2FnYWluOgorCXNw
aW5fbG9ja19pcnFzYXZlKCZndWMtPmNvbnRleHRzX2xvY2ssIGZsYWdzKTsKKworCWlmIChjb250
ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSkgeworCQlyZXQgPSBhc3NpZ25fZ3VjX2lkKGd1YywgJmNl
LT5ndWNfaWQpOworCQlpZiAocmV0KQorCQkJZ290byBvdXRfdW5sb2NrOworCQlyZXQgPSAxOwkv
KiBJbmRpZGNhdGVzIG5ld2x5IGFzc2lnbmVkIGd1Y19pZCAqLworCX0KKwlpZiAoIWxpc3RfZW1w
dHkoJmNlLT5ndWNfaWRfbGluaykpCisJCWxpc3RfZGVsX2luaXQoJmNlLT5ndWNfaWRfbGluayk7
CisJYXRvbWljX2luYygmY2UtPmd1Y19pZF9yZWYpOworCitvdXRfdW5sb2NrOgorCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCisJLyoKKwkgKiAt
RUFHQUlOIGluZGljYXRlcyBubyBndWNfaWRzIGFyZSBhdmFpbGFibGUsIGxldCdzIHJldGlyZSBh
bnkKKwkgKiBvdXRzdGFuZGluZyByZXF1ZXN0cyB0byBzZWUgaWYgdGhhdCBmcmVlcyB1cCBhIGd1
Y19pZC4gSWYgdGhlIGZpcnN0CisJICogcmV0aXJlIGRpZG4ndCBoZWxwLCBpbnNlcnQgYSBzbGVl
cCB3aXRoIHRoZSB0aW1lc2xpY2UgZHVyYXRpb24gYmVmb3JlCisJICogYXR0ZW1wdGluZyB0byBy
ZXRpcmUgbW9yZSByZXF1ZXN0cy4gRG91YmxlIHRoZSBzbGVlcCBwZXJpb2QgZWFjaAorCSAqIHN1
YnNlcXVlbnQgcGFzcyBiZWZvcmUgZmluYWxseSBnaXZpbmcgdXAuIFRoZSBzbGVlcCBwZXJpb2Qg
aGFzIG1heCBvZgorCSAqIDEwMG1zIGFuZCBtaW5pbXVtIG9mIDFtcy4KKwkgKi8KKwlpZiAocmV0
ID09IC1FQUdBSU4gJiYgLS10cmllcykgeworCQlpZiAoUElOX0dVQ19JRF9UUklFUyAtIHRyaWVz
ID4gMSkgeworCQkJdW5zaWduZWQgaW50IHRpbWVzbGljZV9zaGlmdGVkID0KKwkJCQljZS0+ZW5n
aW5lLT5wcm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMgPDwKKwkJCQkoUElOX0dVQ19JRF9UUklF
UyAtIHRyaWVzIC0gMik7CisJCQl1bnNpZ25lZCBpbnQgbWF4ID0gbWluX3QodW5zaWduZWQgaW50
LCAxMDAsCisJCQkJCQkgdGltZXNsaWNlX3NoaWZ0ZWQpOworCisJCQltc2xlZXAobWF4X3QodW5z
aWduZWQgaW50LCBtYXgsIDEpKTsKKwkJfQorCQlpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHMoZ3Vj
X3RvX2d0KGd1YykpOworCQlnb3RvIHRyeV9hZ2FpbjsKKwl9CisKKwlyZXR1cm4gcmV0OworfQor
CitzdGF0aWMgdm9pZCB1bnBpbl9ndWNfaWQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UpCit7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCUdFTV9CVUdf
T04oYXRvbWljX3JlYWQoJmNlLT5ndWNfaWRfcmVmKSA8IDApOworCisJc3Bpbl9sb2NrX2lycXNh
dmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCWlmICghY29udGV4dF9ndWNfaWRfaW52
YWxpZChjZSkgJiYgbGlzdF9lbXB0eSgmY2UtPmd1Y19pZF9saW5rKSAmJgorCSAgICAhYXRvbWlj
X3JlYWQoJmNlLT5ndWNfaWRfcmVmKSkKKwkJbGlzdF9hZGRfdGFpbCgmY2UtPmd1Y19pZF9saW5r
LCAmZ3VjLT5ndWNfaWRfbGlzdCk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250
ZXh0c19sb2NrLCBmbGFncyk7Cit9CisKK3N0YXRpYyBpbnQgX19ndWNfYWN0aW9uX3JlZ2lzdGVy
X2NvbnRleHQoc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCQkgdTMyIGd1Y19pZCwKKwkJCQkJ
IHUzMiBvZmZzZXQsCisJCQkJCSBib29sIGxvb3ApCit7CisJdTMyIGFjdGlvbltdID0geworCQlJ
TlRFTF9HVUNfQUNUSU9OX1JFR0lTVEVSX0NPTlRFWFQsCisJCWd1Y19pZCwKKwkJb2Zmc2V0LAor
CX07CisKKwlyZXR1cm4gZ3VjX3N1Ym1pc3Npb25fc2VuZF9idXN5X2xvb3AoZ3VjLCBhY3Rpb24s
IEFSUkFZX1NJWkUoYWN0aW9uKSwKKwkJCQkJICAgICAwLCBsb29wKTsKK30KKworc3RhdGljIGlu
dCByZWdpc3Rlcl9jb250ZXh0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgYm9vbCBsb29wKQor
eworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGNlX3RvX2d1YyhjZSk7CisJdTMyIG9mZnNldCA9
IGludGVsX2d1Y19nZ3R0X29mZnNldChndWMsIGd1Yy0+bHJjX2Rlc2NfcG9vbCkgKworCQljZS0+
Z3VjX2lkICogc2l6ZW9mKHN0cnVjdCBndWNfbHJjX2Rlc2MpOworCWludCByZXQ7CisKKwl0cmFj
ZV9pbnRlbF9jb250ZXh0X3JlZ2lzdGVyKGNlKTsKKworCXJldCA9IF9fZ3VjX2FjdGlvbl9yZWdp
c3Rlcl9jb250ZXh0KGd1YywgY2UtPmd1Y19pZCwgb2Zmc2V0LCBsb29wKTsKKwlzZXRfY29udGV4
dF9yZWdpc3RlcmVkKGNlKTsKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgaW50IF9fZ3VjX2Fj
dGlvbl9kZXJlZ2lzdGVyX2NvbnRleHQoc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCQkgICB1
MzIgZ3VjX2lkLAorCQkJCQkgICBib29sIGxvb3ApCit7CisJdTMyIGFjdGlvbltdID0geworCQlJ
TlRFTF9HVUNfQUNUSU9OX0RFUkVHSVNURVJfQ09OVEVYVCwKKwkJZ3VjX2lkLAorCX07CisKKwly
ZXR1cm4gZ3VjX3N1Ym1pc3Npb25fc2VuZF9idXN5X2xvb3AoZ3VjLCBhY3Rpb24sIEFSUkFZX1NJ
WkUoYWN0aW9uKSwKKwkJCQkJICAgICBHMkhfTEVOX0RXX0RFUkVHSVNURVJfQ09OVEVYVCwKKwkJ
CQkJICAgICBsb29wKTsKK30KKworc3RhdGljIGludCBkZXJlZ2lzdGVyX2NvbnRleHQoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlLCB1MzIgZ3VjX2lkLCBib29sIGxvb3ApCit7CisJc3RydWN0IGlu
dGVsX2d1YyAqZ3VjID0gY2VfdG9fZ3VjKGNlKTsKKworCXRyYWNlX2ludGVsX2NvbnRleHRfZGVy
ZWdpc3RlcihjZSk7CisKKwlyZXR1cm4gX19ndWNfYWN0aW9uX2RlcmVnaXN0ZXJfY29udGV4dChn
dWMsIGd1Y19pZCwgbG9vcCk7Cit9CisKK3N0YXRpYyBpbnRlbF9lbmdpbmVfbWFza190IGFkanVz
dF9lbmdpbmVfbWFzayh1OCBjbGFzcywgaW50ZWxfZW5naW5lX21hc2tfdCBtYXNrKQoreworCXN3
aXRjaCAoY2xhc3MpIHsKKwljYXNlIFJFTkRFUl9DTEFTUzoKKwkJcmV0dXJuIG1hc2sgPj4gUkNT
MDsKKwljYXNlIFZJREVPX0VOSEFOQ0VNRU5UX0NMQVNTOgorCQlyZXR1cm4gbWFzayA+PiBWRUNT
MDsKKwljYXNlIFZJREVPX0RFQ09ERV9DTEFTUzoKKwkJcmV0dXJuIG1hc2sgPj4gVkNTMDsKKwlj
YXNlIENPUFlfRU5HSU5FX0NMQVNTOgorCQlyZXR1cm4gbWFzayA+PiBCQ1MwOworCWRlZmF1bHQ6
CisJCU1JU1NJTkdfQ0FTRShjbGFzcyk7CiAJCXJldHVybiAwOworCX0KK30KKworc3RhdGljIHZv
aWQgZ3VjX2NvbnRleHRfcG9saWN5X2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LAorCQkJCSAgICBzdHJ1Y3QgZ3VjX2xyY19kZXNjICpkZXNjKQoreworCWRlc2MtPnBvbGljeV9m
bGFncyA9IDA7CisKKwlpZiAoZW5naW5lLT5mbGFncyAmIEk5MTVfRU5HSU5FX1dBTlRfRk9SQ0VE
X1BSRUVNUFRJT04pCisJCWRlc2MtPnBvbGljeV9mbGFncyB8PSBDT05URVhUX1BPTElDWV9GTEFH
X1BSRUVNUFRfVE9fSURMRTsKKworCS8qIE5COiBGb3IgYm90aCBvZiB0aGVzZSwgemVybyBtZWFu
cyBkaXNhYmxlZC4gKi8KKwlkZXNjLT5leGVjdXRpb25fcXVhbnR1bSA9IGVuZ2luZS0+cHJvcHMu
dGltZXNsaWNlX2R1cmF0aW9uX21zICogMTAwMDsKKwlkZXNjLT5wcmVlbXB0aW9uX3RpbWVvdXQg
PSBlbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tcyAqIDEwMDA7Cit9CisKK3N0YXRpYyBp
bmxpbmUgdTggbWFwX2k5MTVfcHJpb190b19ndWNfcHJpbyhpbnQgcHJpbyk7CisKK3N0YXRpYyBp
bnQgZ3VjX2xyY19kZXNjX3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgbG9vcCkK
K3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBjZS0+ZW5naW5lOworCXN0cnVj
dCBpbnRlbF9ydW50aW1lX3BtICpydW50aW1lX3BtID0gZW5naW5lLT51bmNvcmUtPnJwbTsKKwlz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5ndC0+dWMuZ3VjOworCXUzMiBkZXNjX2lk
eCA9IGNlLT5ndWNfaWQ7CisJc3RydWN0IGd1Y19scmNfZGVzYyAqZGVzYzsKKwljb25zdCBzdHJ1
Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OworCWludCBwcmlvID0gSTkxNV9DT05URVhUX0RFRkFV
TFRfUFJJT1JJVFk7CisJYm9vbCBjb250ZXh0X3JlZ2lzdGVyZWQ7CisJaW50ZWxfd2FrZXJlZl90
IHdha2VyZWY7CisJaW50IHJldCA9IDA7CisKKwlHRU1fQlVHX09OKCFlbmdpbmUtPm1hc2spOwor
CisJLyoKKwkgKiBFbnN1cmUgTFJDICsgQ1Qgdm1hcyBhcmUgaXMgc2FtZSByZWdpb24gYXMgd3Jp
dGUgYmFycmllciBpcyBkb25lCisJICogYmFzZWQgb24gQ1Qgdm1hIHJlZ2lvbi4KKwkgKi8KKwlH
RU1fQlVHX09OKGk5MTVfZ2VtX29iamVjdF9pc19sbWVtKGd1Yy0+Y3Qudm1hLT5vYmopICE9CisJ
CSAgIGk5MTVfZ2VtX29iamVjdF9pc19sbWVtKGNlLT5yaW5nLT52bWEtPm9iaikpOworCisJY29u
dGV4dF9yZWdpc3RlcmVkID0gbHJjX2Rlc2NfcmVnaXN0ZXJlZChndWMsIGRlc2NfaWR4KTsKKwor
CXJjdV9yZWFkX2xvY2soKTsKKwljdHggPSByY3VfZGVyZWZlcmVuY2UoY2UtPmdlbV9jb250ZXh0
KTsKKwlpZiAoY3R4KQorCQlwcmlvID0gY3R4LT5zY2hlZC5wcmlvcml0eTsKKwlyY3VfcmVhZF91
bmxvY2soKTsKKworCXJlc2V0X2xyY19kZXNjKGd1YywgZGVzY19pZHgpOworCXNldF9scmNfZGVz
Y19yZWdpc3RlcmVkKGd1YywgZGVzY19pZHgsIGNlKTsKKworCWRlc2MgPSBfX2dldF9scmNfZGVz
YyhndWMsIGRlc2NfaWR4KTsKKwlkZXNjLT5lbmdpbmVfY2xhc3MgPSBlbmdpbmVfY2xhc3NfdG9f
Z3VjX2NsYXNzKGVuZ2luZS0+Y2xhc3MpOworCWRlc2MtPmVuZ2luZV9zdWJtaXRfbWFzayA9IGFk
anVzdF9lbmdpbmVfbWFzayhlbmdpbmUtPmNsYXNzLAorCQkJCQkJICAgICAgZW5naW5lLT5tYXNr
KTsKKwlkZXNjLT5od19jb250ZXh0X2Rlc2MgPSBjZS0+bHJjLmxyY2E7CisJY2UtPmd1Y19wcmlv
ID0gbWFwX2k5MTVfcHJpb190b19ndWNfcHJpbyhwcmlvKTsKKwlkZXNjLT5wcmlvcml0eSA9IGNl
LT5ndWNfcHJpbzsKKwlkZXNjLT5jb250ZXh0X2ZsYWdzID0gQ09OVEVYVF9SRUdJU1RSQVRJT05f
RkxBR19LTUQ7CisJZ3VjX2NvbnRleHRfcG9saWN5X2luaXQoZW5naW5lLCBkZXNjKTsKKwlpbml0
X3NjaGVkX3N0YXRlKGNlKTsKKworCS8qCisJICogVGhlIGNvbnRleHRfbG9va3VwIHhhcnJheSBp
cyB1c2VkIHRvIGRldGVybWluZSBpZiB0aGUgaGFyZHdhcmUKKwkgKiBjb250ZXh0IGlzIGN1cnJl
bnRseSByZWdpc3RlcmVkLiBUaGVyZSBhcmUgdHdvIGNhc2VzIGluIHdoaWNoIGl0CisJICogY291
bGQgYmUgcmVnaXN0ZXJlZCBlaXRoZXIgdGhlIGd1Y19pZCBoYXMgYmVlbiBzdG9sZW4gZnJvbSBh
bm90aGVyCisJICogY29udGV4dCBvciB0aGUgbHJjIGRlc2NyaXB0b3IgYWRkcmVzcyBvZiB0aGlz
IGNvbnRleHQgaGFzIGNoYW5nZWQuIEluCisJICogZWl0aGVyIGNhc2UgdGhlIGNvbnRleHQgbmVl
ZHMgdG8gYmUgZGVyZWdpc3RlcmVkIHdpdGggdGhlIEd1QyBiZWZvcmUKKwkgKiByZWdpc3Rlcmlu
ZyB0aGlzIGNvbnRleHQuCisJICovCisJaWYgKGNvbnRleHRfcmVnaXN0ZXJlZCkgeworCQl0cmFj
ZV9pbnRlbF9jb250ZXh0X3N0ZWFsX2d1Y19pZChjZSk7CisJCWlmICghbG9vcCkgeworCQkJc2V0
X2NvbnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihjZSk7CisJCQlpbnRlbF9j
b250ZXh0X2dldChjZSk7CisJCX0gZWxzZSB7CisJCQlib29sIGRpc2FibGVkOworCQkJdW5zaWdu
ZWQgbG9uZyBmbGFnczsKKworCQkJLyogU2VhbCByYWNlIHdpdGggUmVzZXQgKi8KKwkJCXNwaW5f
bG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwkJCWRpc2FibGVkID0g
c3VibWlzc2lvbl9kaXNhYmxlZChndWMpOworCQkJaWYgKGxpa2VseSghZGlzYWJsZWQpKSB7CisJ
CQkJc2V0X2NvbnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihjZSk7CisJCQkJ
aW50ZWxfY29udGV4dF9nZXQoY2UpOworCQkJfQorCQkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
Y2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJCQlpZiAodW5saWtlbHkoZGlzYWJsZWQpKSB7
CisJCQkJcmVzZXRfbHJjX2Rlc2MoZ3VjLCBkZXNjX2lkeCk7CisJCQkJcmV0dXJuIDA7CS8qIFdp
bGwgZ2V0IHJlZ2lzdGVyZWQgbGF0ZXIgKi8KKwkJCX0KKwkJfQorCisJCS8qCisJCSAqIElmIHN0
ZWFsaW5nIHRoZSBndWNfaWQsIHRoaXMgY2UgaGFzIHRoZSBzYW1lIGd1Y19pZCBhcyB0aGUKKwkJ
ICogY29udGV4dCB3aG9zZSBndWNfaWQgd2FzIHN0b2xlbi4KKwkJICovCisJCXdpdGhfaW50ZWxf
cnVudGltZV9wbShydW50aW1lX3BtLCB3YWtlcmVmKQorCQkJcmV0ID0gZGVyZWdpc3Rlcl9jb250
ZXh0KGNlLCBjZS0+Z3VjX2lkLCBsb29wKTsKKwkJaWYgKHVubGlrZWx5KHJldCA9PSAtRUJVU1kp
KSB7CisJCQljbHJfY29udGV4dF93YWl0X2Zvcl9kZXJlZ2lzdGVyX3RvX3JlZ2lzdGVyKGNlKTsK
KwkJCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwkJfSBlbHNlIGlmICh1bmxpa2VseShyZXQgPT0g
LUVOT0RFVikpCisJCQlyZXQgPSAwOwkvKiBXaWxsIGdldCByZWdpc3RlcmVkIGxhdGVyICovCisJ
fSBlbHNlIHsKKwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpCisJ
CQlyZXQgPSByZWdpc3Rlcl9jb250ZXh0KGNlLCBsb29wKTsKKwkJaWYgKHVubGlrZWx5KHJldCA9
PSAtRUJVU1kpKQorCQkJcmVzZXRfbHJjX2Rlc2MoZ3VjLCBkZXNjX2lkeCk7CisJCWVsc2UgaWYg
KHVubGlrZWx5KHJldCA9PSAtRU5PREVWKSkKKwkJCXJldCA9IDA7CS8qIFdpbGwgZ2V0IHJlZ2lz
dGVyZWQgbGF0ZXIgKi8KKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgaW50IF9fZ3Vj
X2NvbnRleHRfcHJlX3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJIHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgc3RydWN0IGk5MTVfZ2VtX3d3X2N0eCAqd3cs
CisJCQkJIHZvaWQgKip2YWRkcikKK3sKKwlyZXR1cm4gbHJjX3ByZV9waW4oY2UsIGVuZ2luZSwg
d3csIHZhZGRyKTsKK30KKworc3RhdGljIGludCBfX2d1Y19jb250ZXh0X3BpbihzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCisJCQkgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwK
KwkJCSAgICAgdm9pZCAqdmFkZHIpCit7CisJaWYgKGk5MTVfZ2d0dF9vZmZzZXQoY2UtPnN0YXRl
KSAhPQorCSAgICAoY2UtPmxyYy5scmNhICYgQ1RYX0dUVF9BRERSRVNTX01BU0spKQorCQlzZXRf
Yml0KENPTlRFWFRfTFJDQV9ESVJUWSwgJmNlLT5mbGFncyk7CisKKwkvKgorCSAqIEd1QyBjb250
ZXh0IGdldHMgcGlubmVkIGluIGd1Y19yZXF1ZXN0X2FsbG9jLiBTZWUgdGhhdCBmdW5jdGlvbiBm
b3IKKwkgKiBleHBsYWluYXRpb24gb2Ygd2h5LgorCSAqLworCisJcmV0dXJuIGxyY19waW4oY2Us
IGVuZ2luZSwgdmFkZHIpOworfQorCitzdGF0aWMgaW50IGd1Y19jb250ZXh0X3ByZV9waW4oc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV93d19jdHgg
Knd3LAorCQkJICAgICAgIHZvaWQgKip2YWRkcikKK3sKKwlyZXR1cm4gX19ndWNfY29udGV4dF9w
cmVfcGluKGNlLCBjZS0+ZW5naW5lLCB3dywgdmFkZHIpOworfQorCitzdGF0aWMgaW50IGd1Y19j
b250ZXh0X3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHZvaWQgKnZhZGRyKQoreworCXJl
dHVybiBfX2d1Y19jb250ZXh0X3BpbihjZSwgY2UtPmVuZ2luZSwgdmFkZHIpOworfQorCitzdGF0
aWMgdm9pZCBndWNfY29udGV4dF91bnBpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJ
c3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2VfdG9fZ3VjKGNlKTsKKworCXVucGluX2d1Y19pZChn
dWMsIGNlKTsKKwlscmNfdW5waW4oY2UpOworfQorCitzdGF0aWMgdm9pZCBndWNfY29udGV4dF9w
b3N0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlscmNfcG9zdF91bnBpbihj
ZSk7Cit9CisKK3N0YXRpYyB2b2lkIF9fZ3VjX2NvbnRleHRfc2NoZWRfZW5hYmxlKHN0cnVjdCBp
bnRlbF9ndWMgKmd1YywKKwkJCQkgICAgICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorewor
CXUzMiBhY3Rpb25bXSA9IHsKKwkJSU5URUxfR1VDX0FDVElPTl9TQ0hFRF9DT05URVhUX01PREVf
U0VULAorCQljZS0+Z3VjX2lkLAorCQlHVUNfQ09OVEVYVF9FTkFCTEUKKwl9OworCisJdHJhY2Vf
aW50ZWxfY29udGV4dF9zY2hlZF9lbmFibGUoY2UpOworCisJZ3VjX3N1Ym1pc3Npb25fc2VuZF9i
dXN5X2xvb3AoZ3VjLCBhY3Rpb24sIEFSUkFZX1NJWkUoYWN0aW9uKSwKKwkJCQkgICAgICBHMkhf
TEVOX0RXX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQsIHRydWUpOworfQorCitzdGF0aWMgdm9pZCBf
X2d1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCQlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJCXUxNiBndWNfaWQpCit7CisJdTMyIGFjdGlv
bltdID0geworCQlJTlRFTF9HVUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQsCisJCWd1
Y19pZCwJLyogY2UtPmd1Y19pZCBub3Qgc3RhYmxlICovCisJCUdVQ19DT05URVhUX0RJU0FCTEUK
Kwl9OworCisJR0VNX0JVR19PTihndWNfaWQgPT0gR1VDX0lOVkFMSURfTFJDX0lEKTsKKworCXRy
YWNlX2ludGVsX2NvbnRleHRfc2NoZWRfZGlzYWJsZShjZSk7CisKKwlndWNfc3VibWlzc2lvbl9z
ZW5kX2J1c3lfbG9vcChndWMsIGFjdGlvbiwgQVJSQVlfU0laRShhY3Rpb24pLAorCQkJCSAgICAg
IEcySF9MRU5fRFdfU0NIRURfQ09OVEVYVF9NT0RFX1NFVCwgdHJ1ZSk7Cit9CisKK3N0YXRpYyB2
b2lkIGd1Y19ibG9ja2VkX2ZlbmNlX2NvbXBsZXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
K3sKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZjZS0+Z3VjX3N0YXRlLmxvY2spOworCisJaWYgKCFp
OTE1X3N3X2ZlbmNlX2RvbmUoJmNlLT5ndWNfYmxvY2tlZCkpCisJCWk5MTVfc3dfZmVuY2VfY29t
cGxldGUoJmNlLT5ndWNfYmxvY2tlZCk7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19ibG9ja2VkX2Zl
bmNlX3JlaW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJbG9ja2RlcF9hc3NlcnRf
aGVsZCgmY2UtPmd1Y19zdGF0ZS5sb2NrKTsKKwlHRU1fQlVHX09OKCFpOTE1X3N3X2ZlbmNlX2Rv
bmUoJmNlLT5ndWNfYmxvY2tlZCkpOworCWk5MTVfc3dfZmVuY2VfZmluaSgmY2UtPmd1Y19ibG9j
a2VkKTsKKwlpOTE1X3N3X2ZlbmNlX3JlaW5pdCgmY2UtPmd1Y19ibG9ja2VkKTsKKwlpOTE1X3N3
X2ZlbmNlX2F3YWl0KCZjZS0+Z3VjX2Jsb2NrZWQpOworCWk5MTVfc3dfZmVuY2VfY29tbWl0KCZj
ZS0+Z3VjX2Jsb2NrZWQpOworfQorCitzdGF0aWMgdTE2IHByZXBfY29udGV4dF9wZW5kaW5nX2Rp
c2FibGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQo
JmNlLT5ndWNfc3RhdGUubG9jayk7CisKKwlzZXRfY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2Up
OworCWNscl9jb250ZXh0X2VuYWJsZWQoY2UpOworCWd1Y19ibG9ja2VkX2ZlbmNlX3JlaW5pdChj
ZSk7CisJaW50ZWxfY29udGV4dF9nZXQoY2UpOworCisJcmV0dXJuIGNlLT5ndWNfaWQ7Cit9CisK
K3N0YXRpYyBzdHJ1Y3QgaTkxNV9zd19mZW5jZSAqZ3VjX2NvbnRleHRfYmxvY2soc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGNlX3RvX2d1Yyhj
ZSk7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUgPSBjZS0+ZW5naW5l
LT5zY2hlZF9lbmdpbmU7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlzdHJ1Y3QgaW50ZWxfcnVu
dGltZV9wbSAqcnVudGltZV9wbSA9ICZjZS0+ZW5naW5lLT5ndC0+aTkxNS0+cnVudGltZV9wbTsK
KwlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKwl1MTYgZ3VjX2lkOworCWJvb2wgZW5hYmxlZDsK
KworCXNwaW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwlpbmNy
X2NvbnRleHRfYmxvY2tlZChjZSk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmc2NoZWRfZW5n
aW5lLT5sb2NrLCBmbGFncyk7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmY2UtPmd1Y19zdGF0ZS5s
b2NrLCBmbGFncyk7CisJZW5hYmxlZCA9IGNvbnRleHRfZW5hYmxlZChjZSk7CisJaWYgKHVubGlr
ZWx5KCFlbmFibGVkIHx8IHN1Ym1pc3Npb25fZGlzYWJsZWQoZ3VjKSkpIHsKKwkJaWYgKGVuYWJs
ZWQpCisJCQljbHJfY29udGV4dF9lbmFibGVkKGNlKTsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJCXJldHVybiAmY2UtPmd1Y19ibG9ja2Vk
OworCX0KKworCS8qCisJICogV2UgYWRkICsyIGhlcmUgYXMgdGhlIHNjaGVkdWxlIGRpc2FibGUg
Y29tcGxldGUgQ1RCIGhhbmRsZXIgY2FsbHMKKwkgKiBpbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2Fi
bGVfdW5waW4gKC0yIHRvIHBpbl9jb3VudCkuCisJICovCisJYXRvbWljX2FkZCgyLCAmY2UtPnBp
bl9jb3VudCk7CisKKwlndWNfaWQgPSBwcmVwX2NvbnRleHRfcGVuZGluZ19kaXNhYmxlKGNlKTsK
KwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwor
CXdpdGhfaW50ZWxfcnVudGltZV9wbShydW50aW1lX3BtLCB3YWtlcmVmKQorCQlfX2d1Y19jb250
ZXh0X3NjaGVkX2Rpc2FibGUoZ3VjLCBjZSwgZ3VjX2lkKTsKKworCXJldHVybiAmY2UtPmd1Y19i
bG9ja2VkOworfQorCitzdGF0aWMgdm9pZCBndWNfY29udGV4dF91bmJsb2NrKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSBjZV90b19ndWMoY2Up
OworCXN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5naW5lID0gY2UtPmVuZ2luZS0+
c2NoZWRfZW5naW5lOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJc3RydWN0IGludGVsX3J1bnRp
bWVfcG0gKnJ1bnRpbWVfcG0gPSAmY2UtPmVuZ2luZS0+Z3QtPmk5MTUtPnJ1bnRpbWVfcG07CisJ
aW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwlHRU1fQlVHX09OKGNvbnRleHRfZW5hYmxlZChj
ZSkpOworCisJaWYgKHVubGlrZWx5KGNvbnRleHRfYmxvY2tlZChjZSkgPiAxKSkgeworCQlzcGlu
X2xvY2tfaXJxc2F2ZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJCWlmIChsaWtlbHko
Y29udGV4dF9ibG9ja2VkKGNlKSA+IDEpKQorCQkJZ290byBkZWNyZW1lbnQ7CisJCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCX0KKworCXNwaW5f
bG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwlpZiAodW5saWtlbHko
c3VibWlzc2lvbl9kaXNhYmxlZChndWMpIHx8CisJCSAgICAgIWludGVsX2NvbnRleHRfaXNfcGlu
bmVkKGNlKSB8fAorCQkgICAgIGNvbnRleHRfcGVuZGluZ19kaXNhYmxlKGNlKSB8fAorCQkgICAg
IGNvbnRleHRfYmxvY2tlZChjZSkgPiAxKSkgeworCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZj
ZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwkJZ290byBvdXQ7CisJfQorCisJc2V0X2NvbnRl
eHRfcGVuZGluZ19lbmFibGUoY2UpOworCXNldF9jb250ZXh0X2VuYWJsZWQoY2UpOworCWludGVs
X2NvbnRleHRfZ2V0KGNlKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjZS0+Z3VjX3N0YXRl
LmxvY2ssIGZsYWdzKTsKKworCXdpdGhfaW50ZWxfcnVudGltZV9wbShydW50aW1lX3BtLCB3YWtl
cmVmKQorCQlfX2d1Y19jb250ZXh0X3NjaGVkX2VuYWJsZShndWMsIGNlKTsKKworb3V0OgorCXNw
aW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKK2RlY3JlbWVudDoK
KwlkZWNyX2NvbnRleHRfYmxvY2tlZChjZSk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmc2No
ZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19jb250ZXh0X2Nh
bmNlbF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCQkgICAgICAgc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJaWYgKGk5MTVfc3dfZmVuY2Vfc2lnbmFsZWQoJnJxLT5z
dWJtaXQpKSB7CisJCXN0cnVjdCBpOTE1X3N3X2ZlbmNlICpmZW5jZSA9IGd1Y19jb250ZXh0X2Js
b2NrKGNlKTsKKworCQlpOTE1X3N3X2ZlbmNlX3dhaXQoZmVuY2UpOworCQlpZiAoIWk5MTVfcmVx
dWVzdF9jb21wbGV0ZWQocnEpKSB7CisJCQlfX2k5MTVfcmVxdWVzdF9za2lwKHJxKTsKKwkJCWd1
Y19yZXNldF9zdGF0ZShjZSwgaW50ZWxfcmluZ193cmFwKGNlLT5yaW5nLCBycS0+aGVhZCksCisJ
CQkJCXRydWUpOworCQl9CisJCWd1Y19jb250ZXh0X3VuYmxvY2soY2UpOworCX0KK30KKworc3Rh
dGljIHZvaWQgX19ndWNfY29udGV4dF9zZXRfcHJlZW1wdGlvbl90aW1lb3V0KHN0cnVjdCBpbnRl
bF9ndWMgKmd1YywKKwkJCQkJCSB1MTYgZ3VjX2lkLAorCQkJCQkJIHUzMiBwcmVlbXB0aW9uX3Rp
bWVvdXQpCit7CisJdTMyIGFjdGlvbltdID0geworCQlJTlRFTF9HVUNfQUNUSU9OX1NFVF9DT05U
RVhUX1BSRUVNUFRJT05fVElNRU9VVCwKKwkJZ3VjX2lkLAorCQlwcmVlbXB0aW9uX3RpbWVvdXQK
Kwl9OworCisJaW50ZWxfZ3VjX3NlbmRfYnVzeV9sb29wKGd1YywgYWN0aW9uLCBBUlJBWV9TSVpF
KGFjdGlvbiksIDAsIHRydWUpOworfQorCitzdGF0aWMgdm9pZCBndWNfY29udGV4dF9iYW4oc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMgPSBjZV90b19ndWMoY2UpOworCXN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpydW50aW1lX3BtID0KKwkJJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1lX3BtOwor
CWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlndWNf
Zmx1c2hfc3VibWlzc2lvbnMoZ3VjKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0
YXRlLmxvY2ssIGZsYWdzKTsKKwlzZXRfY29udGV4dF9iYW5uZWQoY2UpOworCisJaWYgKHN1Ym1p
c3Npb25fZGlzYWJsZWQoZ3VjKSB8fCAoIWNvbnRleHRfZW5hYmxlZChjZSkgJiYKKwkgICAgIWNv
bnRleHRfcGVuZGluZ19kaXNhYmxlKGNlKSkpIHsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
Y2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisKKwkJZ3VjX2NhbmNlbF9jb250ZXh0X3JlcXVl
c3RzKGNlKTsKKwkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhjZS0+ZW5naW5lKTsK
Kwl9IGVsc2UgaWYgKCFjb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSkpIHsKKwkJdTE2IGd1Y19p
ZDsKKworCQkvKgorCQkgKiBXZSBhZGQgKzIgaGVyZSBhcyB0aGUgc2NoZWR1bGUgZGlzYWJsZSBj
b21wbGV0ZSBDVEIgaGFuZGxlcgorCQkgKiBjYWxscyBpbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2Fi
bGVfdW5waW4gKC0yIHRvIHBpbl9jb3VudCkuCisJCSAqLworCQlhdG9taWNfYWRkKDIsICZjZS0+
cGluX2NvdW50KTsKKworCQlndWNfaWQgPSBwcmVwX2NvbnRleHRfcGVuZGluZ19kaXNhYmxlKGNl
KTsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7
CisKKwkJLyoKKwkJICogSW4gYWRkaXRpb24gdG8gZGlzYWJsaW5nIHNjaGVkdWxpbmcsIHNldCB0
aGUgcHJlZW1wdGlvbgorCQkgKiB0aW1lb3V0IHRvIHRoZSBtaW5pbXVtIHZhbHVlICgxIHVzKSBz
byB0aGUgYmFubmVkIGNvbnRleHQKKwkJICogZ2V0cyBraWNrZWQgb2ZmIHRoZSBIVyBBU0FQLgor
CQkgKi8KKwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpIHsKKwkJ
CV9fZ3VjX2NvbnRleHRfc2V0X3ByZWVtcHRpb25fdGltZW91dChndWMsIGd1Y19pZCwgMSk7CisJ
CQlfX2d1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUoZ3VjLCBjZSwgZ3VjX2lkKTsKKwkJfQorCX0g
ZWxzZSB7CisJCWlmICghY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkpCisJCQl3aXRoX2ludGVs
X3J1bnRpbWVfcG0ocnVudGltZV9wbSwgd2FrZXJlZikKKwkJCQlfX2d1Y19jb250ZXh0X3NldF9w
cmVlbXB0aW9uX3RpbWVvdXQoZ3VjLAorCQkJCQkJCQkgICAgIGNlLT5ndWNfaWQsCisJCQkJCQkJ
CSAgICAgMSk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywg
ZmxhZ3MpOworCX0KK30KKworc3RhdGljIHZvaWQgZ3VjX2NvbnRleHRfc2NoZWRfZGlzYWJsZShz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2Vf
dG9fZ3VjKGNlKTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCXN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpydW50aW1lX3BtID0gJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1lX3BtOworCWlu
dGVsX3dha2VyZWZfdCB3YWtlcmVmOworCXUxNiBndWNfaWQ7CisJYm9vbCBlbmFibGVkOworCisJ
aWYgKHN1Ym1pc3Npb25fZGlzYWJsZWQoZ3VjKSB8fCBjb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNl
KSB8fAorCSAgICAhbHJjX2Rlc2NfcmVnaXN0ZXJlZChndWMsIGNlLT5ndWNfaWQpKSB7CisJCWNs
cl9jb250ZXh0X2VuYWJsZWQoY2UpOworCQlnb3RvIHVucGluOworCX0KKworCWlmICghY29udGV4
dF9lbmFibGVkKGNlKSkKKwkJZ290byB1bnBpbjsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+
Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKworCS8qCisJICogV2UgaGF2ZSB0byBjaGVjayBpZiB0
aGUgY29udGV4dCBoYXMgYmVlbiBkaXNhYmxlZCBieSBhbm90aGVyIHRocmVhZC4KKwkgKiBXZSBh
bHNvIGhhdmUgdG8gY2hlY2sgaWYgdGhlIGNvbnRleHQgaGFzIGJlZW4gcGlubmVkIGFnYWluIGFz
IGFub3RoZXIKKwkgKiBwaW4gb3BlcmF0aW9uIGlzIGFsbG93ZWQgdG8gcGFzcyB0aGlzIGZ1bmN0
aW9uLiBDaGVja2luZyB0aGUgcGluCisJICogY291bnQsIHdpdGhpbiBjZS0+Z3VjX3N0YXRlLmxv
Y2ssIHN5bmNocm9uaXplcyB0aGlzIGZ1bmN0aW9uIHdpdGgKKwkgKiBndWNfcmVxdWVzdF9hbGxv
YyBlbnN1cmluZyBhIHJlcXVlc3QgZG9lc24ndCBzbGlwIHRocm91Z2ggdGhlCisJICogJ2NvbnRl
eHRfcGVuZGluZ19kaXNhYmxlJyBmZW5jZS4gQ2hlY2tpbmcgd2l0aGluIHRoZSBzcGluIGxvY2sg
KGNhbid0CisJICogc2xlZXApIGVuc3VyZXMgYW5vdGhlciBwcm9jZXNzIGRvZXNuJ3QgcGluIHRo
aXMgY29udGV4dCBhbmQgZ2VuZXJhdGUKKwkgKiBhIHJlcXVlc3QgYmVmb3JlIHdlIHNldCB0aGUg
J2NvbnRleHRfcGVuZGluZ19kaXNhYmxlJyBmbGFnIGhlcmUuCisJICovCisJZW5hYmxlZCA9IGNv
bnRleHRfZW5hYmxlZChjZSk7CisJaWYgKHVubGlrZWx5KCFlbmFibGVkIHx8IHN1Ym1pc3Npb25f
ZGlzYWJsZWQoZ3VjKSkpIHsKKwkJaWYgKGVuYWJsZWQpCisJCQljbHJfY29udGV4dF9lbmFibGVk
KGNlKTsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFn
cyk7CisJCWdvdG8gdW5waW47CisJfQorCWlmICh1bmxpa2VseShhdG9taWNfYWRkX3VubGVzcygm
Y2UtPnBpbl9jb3VudCwgLTIsIDIpKSkgeworCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjZS0+
Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwkJcmV0dXJuOworCX0KKwlndWNfaWQgPSBwcmVwX2Nv
bnRleHRfcGVuZGluZ19kaXNhYmxlKGNlKTsKKworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNl
LT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCisJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRp
bWVfcG0sIHdha2VyZWYpCisJCV9fZ3VjX2NvbnRleHRfc2NoZWRfZGlzYWJsZShndWMsIGNlLCBn
dWNfaWQpOworCisJcmV0dXJuOwordW5waW46CisJaW50ZWxfY29udGV4dF9zY2hlZF9kaXNhYmxl
X3VucGluKGNlKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGd1Y19scmNfZGVzY191bnBpbihz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2Vf
dG9fZ3VjKGNlKTsKKworCUdFTV9CVUdfT04oIWxyY19kZXNjX3JlZ2lzdGVyZWQoZ3VjLCBjZS0+
Z3VjX2lkKSk7CisJR0VNX0JVR19PTihjZSAhPSBfX2dldF9jb250ZXh0KGd1YywgY2UtPmd1Y19p
ZCkpOworCUdFTV9CVUdfT04oY29udGV4dF9lbmFibGVkKGNlKSk7CisKKwljbHJfY29udGV4dF9y
ZWdpc3RlcmVkKGNlKTsKKwlkZXJlZ2lzdGVyX2NvbnRleHQoY2UsIGNlLT5ndWNfaWQsIHRydWUp
OworfQorCitzdGF0aWMgdm9pZCBfX2d1Y19jb250ZXh0X2Rlc3Ryb3koc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQoreworCUdFTV9CVUdfT04oY2UtPmd1Y19wcmlvX2NvdW50W0dVQ19DTElFTlRf
UFJJT1JJVFlfS01EX0hJR0hdIHx8CisJCSAgIGNlLT5ndWNfcHJpb19jb3VudFtHVUNfQ0xJRU5U
X1BSSU9SSVRZX0hJR0hdIHx8CisJCSAgIGNlLT5ndWNfcHJpb19jb3VudFtHVUNfQ0xJRU5UX1BS
SU9SSVRZX0tNRF9OT1JNQUxdIHx8CisJCSAgIGNlLT5ndWNfcHJpb19jb3VudFtHVUNfQ0xJRU5U
X1BSSU9SSVRZX05PUk1BTF0pOworCisJbHJjX2ZpbmkoY2UpOworCWludGVsX2NvbnRleHRfZmlu
aShjZSk7CisKKwlpZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY2UtPmVuZ2luZSkpIHsKKwkJ
c3RydWN0IGd1Y192aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJY29udGFpbmVyX29mKGNlLCB0eXBl
b2YoKnZlKSwgY29udGV4dCk7CisKKwkJaWYgKHZlLT5iYXNlLmJyZWFkY3J1bWJzKQorCQkJaW50
ZWxfYnJlYWRjcnVtYnNfcHV0KHZlLT5iYXNlLmJyZWFkY3J1bWJzKTsKKworCQlrZnJlZSh2ZSk7
CisJfSBlbHNlIHsKKwkJaW50ZWxfY29udGV4dF9mcmVlKGNlKTsKKwl9Cit9CisKK3N0YXRpYyB2
b2lkIGd1Y19jb250ZXh0X2Rlc3Ryb3koc3RydWN0IGtyZWYgKmtyZWYpCit7CisJc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlID0gY29udGFpbmVyX29mKGtyZWYsIHR5cGVvZigqY2UpLCByZWYpOwor
CXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpydW50aW1lX3BtID0gY2UtPmVuZ2luZS0+dW5jb3Jl
LT5ycG07CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2VfdG9fZ3VjKGNlKTsKKwlpbnRlbF93
YWtlcmVmX3Qgd2FrZXJlZjsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWJvb2wgZGlzYWJsZWQ7
CisKKwkvKgorCSAqIElmIHRoZSBndWNfaWQgaXMgaW52YWxpZCB0aGlzIGNvbnRleHQgaGFzIGJl
ZW4gc3RvbGVuIGFuZCB3ZSBjYW4gZnJlZQorCSAqIGl0IGltbWVkaWF0ZWx5LiBBbHNvIGNhbiBi
ZSBmcmVlZCBpbW1lZGlhdGVseSBpZiB0aGUgY29udGV4dCBpcyBub3QKKwkgKiByZWdpc3RlcmVk
IHdpdGggdGhlIEd1QyBvciB0aGUgR3VDIGlzIGluIHRoZSBtaWRkbGUgb2YgYSByZXNldC4KKwkg
Ki8KKwlpZiAoY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkpIHsKKwkJX19ndWNfY29udGV4dF9k
ZXN0cm95KGNlKTsKKwkJcmV0dXJuOworCX0gZWxzZSBpZiAoc3VibWlzc2lvbl9kaXNhYmxlZChn
dWMpIHx8CisJCSAgICFscmNfZGVzY19yZWdpc3RlcmVkKGd1YywgY2UtPmd1Y19pZCkpIHsKKwkJ
cmVsZWFzZV9ndWNfaWQoZ3VjLCBjZSk7CisJCV9fZ3VjX2NvbnRleHRfZGVzdHJveShjZSk7CisJ
CXJldHVybjsKKwl9CisKKwkvKgorCSAqIFdlIGhhdmUgdG8gYWNxdWlyZSB0aGUgY29udGV4dCBz
cGlubG9jayBhbmQgY2hlY2sgZ3VjX2lkIGFnYWluLCBpZiBpdAorCSAqIGlzIHZhbGlkIGl0IGhh
c24ndCBiZWVuIHN0b2xlbiBhbmQgbmVlZHMgdG8gYmUgZGVyZWdpc3RlcmVkLiBXZQorCSAqIGRl
bGV0ZSB0aGlzIGNvbnRleHQgZnJvbSB0aGUgbGlzdCBvZiB1bnBpbm5lZCBndWNfaWRzIGF2YWls
YWJsZSB0bworCSAqIHN0ZWFsIHRvIHNlYWwgYSByYWNlIHdpdGggZ3VjX2xyY19kZXNjX3Bpbigp
LiBXaGVuIHRoZSBHMkggQ1RCCisJICogcmV0dXJucyBpbmRpY2F0aW5nIHRoaXMgY29udGV4dCBo
YXMgYmVlbiBkZXJlZ2lzdGVyZWQgdGhlIGd1Y19pZCBpcworCSAqIHJldHVybmVkIHRvIHRoZSBw
b29sIG9mIGF2YWlsYWJsZSBndWNfaWRzLgorCSAqLworCXNwaW5fbG9ja19pcnFzYXZlKCZndWMt
PmNvbnRleHRzX2xvY2ssIGZsYWdzKTsKKwlpZiAoY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkp
IHsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250ZXh0c19sb2NrLCBmbGFncyk7
CisJCV9fZ3VjX2NvbnRleHRfZGVzdHJveShjZSk7CisJCXJldHVybjsKKwl9CisKKwlpZiAoIWxp
c3RfZW1wdHkoJmNlLT5ndWNfaWRfbGluaykpCisJCWxpc3RfZGVsX2luaXQoJmNlLT5ndWNfaWRf
bGluayk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250ZXh0c19sb2NrLCBmbGFn
cyk7CisKKwkvKiBTZWFsIHJhY2Ugd2l0aCBSZXNldCAqLworCXNwaW5fbG9ja19pcnFzYXZlKCZj
ZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwlkaXNhYmxlZCA9IHN1Ym1pc3Npb25fZGlzYWJs
ZWQoZ3VjKTsKKwlpZiAobGlrZWx5KCFkaXNhYmxlZCkpCisJCXNldF9jb250ZXh0X2Rlc3Ryb3ll
ZChjZSk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFn
cyk7CisJaWYgKHVubGlrZWx5KGRpc2FibGVkKSkgeworCQlyZWxlYXNlX2d1Y19pZChndWMsIGNl
KTsKKwkJX19ndWNfY29udGV4dF9kZXN0cm95KGNlKTsKKwkJcmV0dXJuOworCX0KKworCS8qCisJ
ICogV2UgZGVmZXIgR3VDIGNvbnRleHQgZGVyZWdpc3RyYXRpb24gdW50aWwgdGhlIGNvbnRleHQg
aXMgZGVzdHJveWVkCisJICogaW4gb3JkZXIgdG8gc2F2ZSBvbiBDVEJzLiBXaXRoIHRoaXMgb3B0
aW1pemF0aW9uIGlkZWFsbHkgd2Ugb25seSBuZWVkCisJICogMSBDVEIgdG8gcmVnaXN0ZXIgdGhl
IGNvbnRleHQgZHVyaW5nIHRoZSBmaXJzdCBwaW4gYW5kIDEgQ1RCIHRvCisJICogZGVyZWdpc3Rl
ciB0aGUgY29udGV4dCB3aGVuIHRoZSBjb250ZXh0IGlzIGRlc3Ryb3llZC4gV2l0aG91dCB0aGlz
CisJICogb3B0aW1pemF0aW9uLCBhIENUQiB3b3VsZCBiZSBuZWVkZWQgZXZlcnkgcGluICYgdW5w
aW4uCisJICoKKwkgKiBYWFg6IE5lZWQgdG8gYWNxaXVyZSB0aGUgcnVudGltZSB3YWtlcmVmIGFz
IHRoaXMgY2FuIGJlIHRyaWdnZXJlZAorCSAqIGZyb20gY29udGV4dF9mcmVlX3dvcmtlciB3aGVu
IHJ1bnRpbWUgd2FrZXJlZiBpcyBub3QgaGVsZC4KKwkgKiBndWNfbHJjX2Rlc2NfdW5waW4gcmVx
dWlyZXMgdGhlIHJ1bnRpbWUgYXMgYSBHdUMgcmVnaXN0ZXIgaXMgd3JpdHRlbgorCSAqIGluIEgy
RyBDVEIgdG8gZGVyZWdpc3RlciB0aGUgY29udGV4dC4gQSBmdXR1cmUgcGF0Y2ggbWF5IGRlZmVy
IHRoaXMKKwkgKiBIMkcgQ1RCIGlmIHRoZSBydW50aW1lIHdha2VyZWYgaXMgemVyby4KKwkgKi8K
Kwl3aXRoX2ludGVsX3J1bnRpbWVfcG0ocnVudGltZV9wbSwgd2FrZXJlZikKKwkJZ3VjX2xyY19k
ZXNjX3VucGluKGNlKTsKK30KKworc3RhdGljIGludCBndWNfY29udGV4dF9hbGxvYyhzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UpCit7CisJcmV0dXJuIGxyY19hbGxvYyhjZSwgY2UtPmVuZ2luZSk7
Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19jb250ZXh0X3NldF9wcmlvKHN0cnVjdCBpbnRlbF9ndWMg
Kmd1YywKKwkJCQkgc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCSB1OCBwcmlvKQorewor
CXUzMiBhY3Rpb25bXSA9IHsKKwkJSU5URUxfR1VDX0FDVElPTl9TRVRfQ09OVEVYVF9QUklPUklU
WSwKKwkJY2UtPmd1Y19pZCwKKwkJcHJpbywKKwl9OworCisJR0VNX0JVR19PTihwcmlvIDwgR1VD
X0NMSUVOVF9QUklPUklUWV9LTURfSElHSCB8fAorCQkgICBwcmlvID4gR1VDX0NMSUVOVF9QUklP
UklUWV9OT1JNQUwpOworCisJaWYgKGNlLT5ndWNfcHJpbyA9PSBwcmlvIHx8IHN1Ym1pc3Npb25f
ZGlzYWJsZWQoZ3VjKSB8fAorCSAgICAhY29udGV4dF9yZWdpc3RlcmVkKGNlKSkKKwkJcmV0dXJu
OworCisJZ3VjX3N1Ym1pc3Npb25fc2VuZF9idXN5X2xvb3AoZ3VjLCBhY3Rpb24sIEFSUkFZX1NJ
WkUoYWN0aW9uKSwgMCwgdHJ1ZSk7CisKKwljZS0+Z3VjX3ByaW8gPSBwcmlvOworCXRyYWNlX2lu
dGVsX2NvbnRleHRfc2V0X3ByaW8oY2UpOworfQorCitzdGF0aWMgaW5saW5lIHU4IG1hcF9pOTE1
X3ByaW9fdG9fZ3VjX3ByaW8oaW50IHByaW8pCit7CisJaWYgKHByaW8gPT0gSTkxNV9QUklPUklU
WV9OT1JNQUwpCisJCXJldHVybiBHVUNfQ0xJRU5UX1BSSU9SSVRZX0tNRF9OT1JNQUw7CisJZWxz
ZSBpZiAocHJpbyA8IEk5MTVfUFJJT1JJVFlfTk9STUFMKQorCQlyZXR1cm4gR1VDX0NMSUVOVF9Q
UklPUklUWV9OT1JNQUw7CisJZWxzZSBpZiAocHJpbyAhPSBJOTE1X1BSSU9SSVRZX0JBUlJJRVIp
CisJCXJldHVybiBHVUNfQ0xJRU5UX1BSSU9SSVRZX0hJR0g7CisJZWxzZQorCQlyZXR1cm4gR1VD
X0NMSUVOVF9QUklPUklUWV9LTURfSElHSDsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGFkZF9j
b250ZXh0X2luZmxpZ2h0X3ByaW8oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCQkgICAg
IHU4IGd1Y19wcmlvKQoreworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfYWN0aXZlLmxv
Y2spOworCUdFTV9CVUdfT04oZ3VjX3ByaW8gPj0gQVJSQVlfU0laRShjZS0+Z3VjX3ByaW9fY291
bnQpKTsKKworCSsrY2UtPmd1Y19wcmlvX2NvdW50W2d1Y19wcmlvXTsKKworCS8qIE92ZXJmbG93
IHByb3RlY3Rpb24gKi8KKwlHRU1fV0FSTl9PTighY2UtPmd1Y19wcmlvX2NvdW50W2d1Y19wcmlv
XSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBzdWJfY29udGV4dF9pbmZsaWdodF9wcmlvKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCQkJICAgICB1OCBndWNfcHJpbykKK3sKKwlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlHRU1fQlVHX09OKGd1Y19w
cmlvID49IEFSUkFZX1NJWkUoY2UtPmd1Y19wcmlvX2NvdW50KSk7CisKKwkvKiBVbmRlcmZsb3cg
cHJvdGVjdGlvbiAqLworCUdFTV9XQVJOX09OKCFjZS0+Z3VjX3ByaW9fY291bnRbZ3VjX3ByaW9d
KTsKKworCS0tY2UtPmd1Y19wcmlvX2NvdW50W2d1Y19wcmlvXTsKK30KKworc3RhdGljIGlubGlu
ZSB2b2lkIHVwZGF0ZV9jb250ZXh0X3ByaW8oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorewor
CXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZjZS0+ZW5naW5lLT5ndC0+dWMuZ3VjOworCWludCBp
OworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY2UtPmd1Y19hY3RpdmUubG9jayk7CisKKwlmb3Ig
KGkgPSAwOyBpIDwgQVJSQVlfU0laRShjZS0+Z3VjX3ByaW9fY291bnQpOyArK2kpIHsKKwkJaWYg
KGNlLT5ndWNfcHJpb19jb3VudFtpXSkgeworCQkJZ3VjX2NvbnRleHRfc2V0X3ByaW8oZ3VjLCBj
ZSwgaSk7CisJCQlicmVhazsKKwkJfQorCX0KK30KKworc3RhdGljIGlubGluZSBib29sIG5ld19n
dWNfcHJpb19oaWdoZXIodTggb2xkX2d1Y19wcmlvLCB1OCBuZXdfZ3VjX3ByaW8pCit7CisJLyog
TG93ZXIgdmFsdWUgaXMgaGlnaGVyIHByaW9yaXR5ICovCisJcmV0dXJuIG5ld19ndWNfcHJpbyA8
IG9sZF9ndWNfcHJpbzsKK30KKworc3RhdGljIHZvaWQgYWRkX3RvX2NvbnRleHQoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEtPmNvbnRl
eHQ7CisJdTggbmV3X2d1Y19wcmlvID0gbWFwX2k5MTVfcHJpb190b19ndWNfcHJpbyhycV9wcmlv
KHJxKSk7CisKKwlHRU1fQlVHX09OKHJxLT5ndWNfcHJpbyA9PSBHVUNfUFJJT19GSU5JKTsKKwor
CXNwaW5fbG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7CisJbGlzdF9tb3ZlX3RhaWwoJnJxLT5z
Y2hlZC5saW5rLCAmY2UtPmd1Y19hY3RpdmUucmVxdWVzdHMpOworCisJaWYgKHJxLT5ndWNfcHJp
byA9PSBHVUNfUFJJT19JTklUKSB7CisJCXJxLT5ndWNfcHJpbyA9IG5ld19ndWNfcHJpbzsKKwkJ
YWRkX2NvbnRleHRfaW5mbGlnaHRfcHJpbyhjZSwgcnEtPmd1Y19wcmlvKTsKKwl9IGVsc2UgaWYg
KG5ld19ndWNfcHJpb19oaWdoZXIocnEtPmd1Y19wcmlvLCBuZXdfZ3VjX3ByaW8pKSB7CisJCXN1
Yl9jb250ZXh0X2luZmxpZ2h0X3ByaW8oY2UsIHJxLT5ndWNfcHJpbyk7CisJCXJxLT5ndWNfcHJp
byA9IG5ld19ndWNfcHJpbzsKKwkJYWRkX2NvbnRleHRfaW5mbGlnaHRfcHJpbyhjZSwgcnEtPmd1
Y19wcmlvKTsKKwl9CisJdXBkYXRlX2NvbnRleHRfcHJpbyhjZSk7CisKKwlzcGluX3VubG9jaygm
Y2UtPmd1Y19hY3RpdmUubG9jayk7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19wcmlvX2Zpbmkoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlpZiAo
cnEtPmd1Y19wcmlvICE9IEdVQ19QUklPX0lOSVQgJiYKKwkgICAgcnEtPmd1Y19wcmlvICE9IEdV
Q19QUklPX0ZJTkkpIHsKKwkJc3ViX2NvbnRleHRfaW5mbGlnaHRfcHJpbyhjZSwgcnEtPmd1Y19w
cmlvKTsKKwkJdXBkYXRlX2NvbnRleHRfcHJpbyhjZSk7CisJfQorCXJxLT5ndWNfcHJpbyA9IEdV
Q19QUklPX0ZJTkk7Cit9CisKK3N0YXRpYyB2b2lkIHJlbW92ZV9mcm9tX2NvbnRleHQoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEtPmNv
bnRleHQ7CisKKwlzcGluX2xvY2tfaXJxKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKworCWxpc3Rf
ZGVsX2luaXQoJnJxLT5zY2hlZC5saW5rKTsKKwljbGVhcl9iaXQoSTkxNV9GRU5DRV9GTEFHX1BR
VUVVRSwgJnJxLT5mZW5jZS5mbGFncyk7CisKKwkvKiBQcmV2ZW50IGZ1cnRoZXIgX19hd2FpdF9l
eGVjdXRpb24oKSByZWdpc3RlcmluZyBhIGNiLCB0aGVuIGZsdXNoICovCisJc2V0X2JpdChJOTE1
X0ZFTkNFX0ZMQUdfQUNUSVZFLCAmcnEtPmZlbmNlLmZsYWdzKTsKKworCWd1Y19wcmlvX2Zpbmko
cnEsIGNlKTsKKworCXNwaW5fdW5sb2NrX2lycSgmY2UtPmd1Y19hY3RpdmUubG9jayk7CisKKwlh
dG9taWNfZGVjKCZjZS0+Z3VjX2lkX3JlZik7CisJaTkxNV9yZXF1ZXN0X25vdGlmeV9leGVjdXRl
X2NiX2ltbShycSk7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dF9vcHMg
Z3VjX2NvbnRleHRfb3BzID0geworCS5hbGxvYyA9IGd1Y19jb250ZXh0X2FsbG9jLAorCisJLnBy
ZV9waW4gPSBndWNfY29udGV4dF9wcmVfcGluLAorCS5waW4gPSBndWNfY29udGV4dF9waW4sCisJ
LnVucGluID0gZ3VjX2NvbnRleHRfdW5waW4sCisJLnBvc3RfdW5waW4gPSBndWNfY29udGV4dF9w
b3N0X3VucGluLAorCisJLmJhbiA9IGd1Y19jb250ZXh0X2JhbiwKKworCS5jYW5jZWxfcmVxdWVz
dCA9IGd1Y19jb250ZXh0X2NhbmNlbF9yZXF1ZXN0LAorCisJLmVudGVyID0gaW50ZWxfY29udGV4
dF9lbnRlcl9lbmdpbmUsCisJLmV4aXQgPSBpbnRlbF9jb250ZXh0X2V4aXRfZW5naW5lLAorCisJ
LnNjaGVkX2Rpc2FibGUgPSBndWNfY29udGV4dF9zY2hlZF9kaXNhYmxlLAorCisJLnJlc2V0ID0g
bHJjX3Jlc2V0LAorCS5kZXN0cm95ID0gZ3VjX2NvbnRleHRfZGVzdHJveSwKKworCS5jcmVhdGVf
dmlydHVhbCA9IGd1Y19jcmVhdGVfdmlydHVhbCwKK307CisKK3N0YXRpYyB2b2lkIF9fZ3VjX3Np
Z25hbF9jb250ZXh0X2ZlbmNlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycTsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUu
bG9jayk7CisKKwlpZiAoIWxpc3RfZW1wdHkoJmNlLT5ndWNfc3RhdGUuZmVuY2VzKSkKKwkJdHJh
Y2VfaW50ZWxfY29udGV4dF9mZW5jZV9yZWxlYXNlKGNlKTsKKworCWxpc3RfZm9yX2VhY2hfZW50
cnkocnEsICZjZS0+Z3VjX3N0YXRlLmZlbmNlcywgZ3VjX2ZlbmNlX2xpbmspCisJCWk5MTVfc3df
ZmVuY2VfY29tcGxldGUoJnJxLT5zdWJtaXQpOworCisJSU5JVF9MSVNUX0hFQUQoJmNlLT5ndWNf
c3RhdGUuZmVuY2VzKTsKK30KKworc3RhdGljIHZvaWQgZ3VjX3NpZ25hbF9jb250ZXh0X2ZlbmNl
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJ
c3Bpbl9sb2NrX2lycXNhdmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCWNscl9jb250
ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9fcmVnaXN0ZXIoY2UpOworCV9fZ3VjX3NpZ25hbF9j
b250ZXh0X2ZlbmNlKGNlKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjZS0+Z3VjX3N0YXRl
LmxvY2ssIGZsYWdzKTsKK30KKworc3RhdGljIGJvb2wgY29udGV4dF9uZWVkc19yZWdpc3Rlcihz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgbmV3X2d1Y19pZCkKK3sKKwlyZXR1cm4gKG5l
d19ndWNfaWQgfHwgdGVzdF9iaXQoQ09OVEVYVF9MUkNBX0RJUlRZLCAmY2UtPmZsYWdzKSB8fAor
CQkhbHJjX2Rlc2NfcmVnaXN0ZXJlZChjZV90b19ndWMoY2UpLCBjZS0+Z3VjX2lkKSkgJiYKKwkJ
IXN1Ym1pc3Npb25fZGlzYWJsZWQoY2VfdG9fZ3VjKGNlKSk7Cit9CisKK3N0YXRpYyBpbnQgZ3Vj
X3JlcXVlc3RfYWxsb2Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IGludGVs
X2NvbnRleHQgKmNlID0gcnEtPmNvbnRleHQ7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2Vf
dG9fZ3VjKGNlKTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCWludCByZXQ7CisKKwlHRU1fQlVH
X09OKCFpbnRlbF9jb250ZXh0X2lzX3Bpbm5lZChycS0+Y29udGV4dCkpOworCisJLyoKKwkgKiBG
bHVzaCBlbm91Z2ggc3BhY2UgdG8gcmVkdWNlIHRoZSBsaWtlbGlob29kIG9mIHdhaXRpbmcgYWZ0
ZXIKKwkgKiB3ZSBzdGFydCBidWlsZGluZyB0aGUgcmVxdWVzdCAtIGluIHdoaWNoIGNhc2Ugd2Ug
d2lsbCBqdXN0CisJICogaGF2ZSB0byByZXBlYXQgd29yay4KKwkgKi8KKwlycS0+cmVzZXJ2ZWRf
c3BhY2UgKz0gR1VDX1JFUVVFU1RfU0laRTsKKworCS8qCisJICogTm90ZSB0aGF0IGFmdGVyIHRo
aXMgcG9pbnQsIHdlIGhhdmUgY29tbWl0dGVkIHRvIHVzaW5nCisJICogdGhpcyByZXF1ZXN0IGFz
IGl0IGlzIGJlaW5nIHVzZWQgdG8gYm90aCB0cmFjayB0aGUKKwkgKiBzdGF0ZSBvZiBlbmdpbmUg
aW5pdGlhbGlzYXRpb24gYW5kIGxpdmVuZXNzIG9mIHRoZQorCSAqIGdvbGRlbiByZW5kZXJzdGF0
ZSBhYm92ZS4gVGhpbmsgdHdpY2UgYmVmb3JlIHlvdSB0cnkKKwkgKiB0byBjYW5jZWwvdW53aW5k
IHRoaXMgcmVxdWVzdCBub3cuCisJICovCisKKwkvKiBVbmNvbmRpdGlvbmFsbHkgaW52YWxpZGF0
ZSBHUFUgY2FjaGVzIGFuZCBUTEJzLiAqLworCXJldCA9IHJxLT5lbmdpbmUtPmVtaXRfZmx1c2go
cnEsIEVNSVRfSU5WQUxJREFURSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJxLT5y
ZXNlcnZlZF9zcGFjZSAtPSBHVUNfUkVRVUVTVF9TSVpFOworCisJLyoKKwkgKiBDYWxsIHBpbl9n
dWNfaWQgaGVyZSByYXRoZXIgdGhhbiBpbiB0aGUgcGlubmluZyBzdGVwIGFzIHdpdGgKKwkgKiBk
bWFfcmVzdiwgY29udGV4dHMgY2FuIGJlIHJlcGVhdGVkbHkgcGlubmVkIC8gdW5waW5uZWQgdHJh
c2hpbmcgdGhlCisJICogZ3VjX2lkcyBhbmQgY3JlYXRpbmcgaG9ycmlibGUgcmFjZSBjb25kaXRp
b25zLiBUaGlzIGlzIGVzcGVjaWFsbHkgYmFkCisJICogd2hlbiBndWNfaWRzIGFyZSBiZWluZyBz
dG9sZW4gZHVlIHRvIG92ZXIgc3Vic2NyaXB0aW9uLiBCeSB0aGUgdGltZQorCSAqIHRoaXMgZnVu
Y3Rpb24gaXMgcmVhY2hlZCwgaXQgaXMgZ3VhcmFudGVlZCB0aGF0IHRoZSBndWNfaWQgd2lsbCBi
ZQorCSAqIHBlcnNpc3RlbnQgdW50aWwgdGhlIGdlbmVyYXRlZCByZXF1ZXN0IGlzIHJldGlyZWQu
IFRodXMsIHNlYWxpbmcgdGhlc2UKKwkgKiByYWNlIGNvbmRpdGlvbnMuIEl0IGlzIHN0aWxsIHNh
ZmUgdG8gZmFpbCBoZXJlIGlmIGd1Y19pZHMgYXJlCisJICogZXhoYXVzdGVkIGFuZCByZXR1cm4g
LUVBR0FJTiB0byB0aGUgdXNlciBpbmRpY2F0aW5nIHRoYXQgdGhleSBjYW4gdHJ5CisJICogYWdh
aW4gaW4gdGhlIGZ1dHVyZS4KKwkgKgorCSAqIFRoZXJlIGlzIG5vIG5lZWQgZm9yIGEgbG9jayBo
ZXJlIGFzIHRoZSB0aW1lbGluZSBtdXRleCBlbnN1cmVzIGF0CisJICogbW9zdCBvbmUgY29udGV4
dCBjYW4gYmUgZXhlY3V0aW5nIHRoaXMgY29kZSBwYXRoIGF0IG9uY2UuIFRoZQorCSAqIGd1Y19p
ZF9yZWYgaXMgaW5jcmVtZW50ZWQgb25jZSBmb3IgZXZlcnkgcmVxdWVzdCBpbiBmbGlnaHQgYW5k
CisJICogZGVjcmVtZW50ZWQgb24gZWFjaCByZXRpcmUuIFdoZW4gaXQgaXMgemVybywgYSBsb2Nr
IGFyb3VuZCB0aGUKKwkgKiBpbmNyZW1lbnQgKGluIHBpbl9ndWNfaWQpIGlzIG5lZWRlZCB0byBz
ZWFsIGEgcmFjZSB3aXRoIHVucGluX2d1Y19pZC4KKwkgKi8KKwlpZiAoYXRvbWljX2FkZF91bmxl
c3MoJmNlLT5ndWNfaWRfcmVmLCAxLCAwKSkKKwkJZ290byBvdXQ7CiAKLQlyZXQgPSBndWNfc3Rh
Z2VfZGVzY19wb29sX2NyZWF0ZShndWMpOwotCWlmIChyZXQpCisJcmV0ID0gcGluX2d1Y19pZChn
dWMsIGNlKTsJLyogcmV0dXJucyAxIGlmIG5ldyBndWNfaWQgYXNzaWduZWQgKi8KKwlpZiAodW5s
aWtlbHkocmV0IDwgMCkpCiAJCXJldHVybiByZXQ7CisJaWYgKGNvbnRleHRfbmVlZHNfcmVnaXN0
ZXIoY2UsICEhcmV0KSkgeworCQlyZXQgPSBndWNfbHJjX2Rlc2NfcGluKGNlLCB0cnVlKTsKKwkJ
aWYgKHVubGlrZWx5KHJldCkpIHsJLyogdW53aW5kICovCisJCQlpZiAocmV0ID09IC1FUElQRSkg
eworCQkJCWRpc2FibGVfc3VibWlzc2lvbihndWMpOworCQkJCWdvdG8gb3V0OwkvKiBHUFUgd2ls
bCBiZSByZXNldCAqLworCQkJfQorCQkJYXRvbWljX2RlYygmY2UtPmd1Y19pZF9yZWYpOworCQkJ
dW5waW5fZ3VjX2lkKGd1YywgY2UpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0KKworCWNsZWFy
X2JpdChDT05URVhUX0xSQ0FfRElSVFksICZjZS0+ZmxhZ3MpOworCitvdXQ6CiAJLyoKLQkgKiBL
ZWVwIHN0YXRpYyBhbmFseXNlcnMgaGFwcHksIGxldCB0aGVtIGtub3cgdGhhdCB3ZSBhbGxvY2F0
ZWQgdGhlCi0JICogdm1hIGFmdGVyIHRlc3RpbmcgdGhhdCBpdCBkaWRuJ3QgZXhpc3QgZWFybGll
ci4KKwkgKiBXZSBibG9jayBhbGwgcmVxdWVzdHMgb24gdGhpcyBjb250ZXh0IGlmIGEgRzJIIGlz
IHBlbmRpbmcgZm9yIGEKKwkgKiBzY2hlZHVsZSBkaXNhYmxlIG9yIGNvbnRleHQgZGVyZWdpc3Ry
YXRpb24gYXMgdGhlIEd1QyB3aWxsIGZhaWwgYQorCSAqIHNjaGVkdWxlIGVuYWJsZSBvciBjb250
ZXh0IHJlZ2lzdHJhdGlvbiBpZiBlaXRoZXIgRzJIIGlzIHBlbmRpbmcKKwkgKiByZXNwZWN0ZnVs
bHkuIE9uY2UgYSBHMkggcmV0dXJucywgdGhlIGZlbmNlIGlzIHJlbGVhc2VkIHRoYXQgaXMKKwkg
KiBibG9ja2luZyB0aGVzZSByZXF1ZXN0cyAoc2VlIGd1Y19zaWduYWxfY29udGV4dF9mZW5jZSku
CisJICoKKwkgKiBXZSBjYW4gc2FmZWx5IGNoZWNrIHRoZSBiZWxvdyBmaWVsZHMgb3V0c2lkZSBv
ZiB0aGUgbG9jayBhcyBpdCBpc24ndAorCSAqIHBvc3NpYmxlIGZvciB0aGVzZSBmaWVsZHMgdG8g
dHJhbnNpdGlvbiBmcm9tIGJlaW5nIGNsZWFyIHRvIHNldCBidXQKKwkgKiBjb252ZXJzZSBpcyBw
b3NzaWJsZSwgaGVuY2UgdGhlIG5lZWQgZm9yIHRoZSBjaGVjayB3aXRoaW4gdGhlIGxvY2suCiAJ
ICovCi0JR0VNX0JVR19PTighZ3VjLT5zdGFnZV9kZXNjX3Bvb2wpOworCWlmIChsaWtlbHkoIWNv
bnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihjZSkgJiYKKwkJICAgIWNvbnRl
eHRfcGVuZGluZ19kaXNhYmxlKGNlKSkpCisJCXJldHVybiAwOworCisJc3Bpbl9sb2NrX2lycXNh
dmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCWlmIChjb250ZXh0X3dhaXRfZm9yX2Rl
cmVnaXN0ZXJfdG9fcmVnaXN0ZXIoY2UpIHx8CisJICAgIGNvbnRleHRfcGVuZGluZ19kaXNhYmxl
KGNlKSkgeworCQlpOTE1X3N3X2ZlbmNlX2F3YWl0KCZycS0+c3VibWl0KTsKKworCQlsaXN0X2Fk
ZF90YWlsKCZycS0+Z3VjX2ZlbmNlX2xpbmssICZjZS0+Z3VjX3N0YXRlLmZlbmNlcyk7CisJfQor
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOwogCiAJ
cmV0dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZmluaShzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMpCitzdGF0aWMgaW50IGd1Y192aXJ0dWFsX2NvbnRleHRfcHJlX3BpbihzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV93d19jdHgg
Knd3LAorCQkJCSAgICAgICB2b2lkICoqdmFkZHIpCiB7Ci0JaWYgKGd1Yy0+c3RhZ2VfZGVzY19w
b29sKSB7Ci0JCWd1Y19zdGFnZV9kZXNjX3Bvb2xfZGVzdHJveShndWMpOwotCX0KKwlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBndWNfdmlydHVhbF9nZXRfc2libGluZyhjZS0+ZW5n
aW5lLCAwKTsKKworCXJldHVybiBfX2d1Y19jb250ZXh0X3ByZV9waW4oY2UsIGVuZ2luZSwgd3cs
IHZhZGRyKTsKIH0KIAotc3RhdGljIGludCBndWNfY29udGV4dF9hbGxvYyhzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpCitzdGF0aWMgaW50IGd1Y192aXJ0dWFsX2NvbnRleHRfcGluKHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSwgdm9pZCAqdmFkZHIpCiB7Ci0JcmV0dXJuIGxyY19hbGxvYyhjZSwg
Y2UtPmVuZ2luZSk7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gZ3VjX3ZpcnR1
YWxfZ2V0X3NpYmxpbmcoY2UtPmVuZ2luZSwgMCk7CisKKwlyZXR1cm4gX19ndWNfY29udGV4dF9w
aW4oY2UsIGVuZ2luZSwgdmFkZHIpOwogfQogCi1zdGF0aWMgaW50IGd1Y19jb250ZXh0X3ByZV9w
aW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAotCQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV93
d19jdHggKnd3LAotCQkJICAgICAgIHZvaWQgKip2YWRkcikKK3N0YXRpYyB2b2lkIGd1Y192aXJ0
dWFsX2NvbnRleHRfZW50ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXJldHVybiBs
cmNfcHJlX3BpbihjZSwgY2UtPmVuZ2luZSwgd3csIHZhZGRyKTsKKwlpbnRlbF9lbmdpbmVfbWFz
a190IHRtcCwgbWFzayA9IGNlLT5lbmdpbmUtPm1hc2s7CisJc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lOworCisJZm9yX2VhY2hfZW5naW5lX21hc2tlZChlbmdpbmUsIGNlLT5lbmdpbmUt
Pmd0LCBtYXNrLCB0bXApCisJCWludGVsX2VuZ2luZV9wbV9nZXQoZW5naW5lKTsKKworCWludGVs
X3RpbWVsaW5lX2VudGVyKGNlLT50aW1lbGluZSk7CiB9CiAKLXN0YXRpYyBpbnQgZ3VjX2NvbnRl
eHRfcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgdm9pZCAqdmFkZHIpCitzdGF0aWMgdm9p
ZCBndWNfdmlydHVhbF9jb250ZXh0X2V4aXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewot
CXJldHVybiBscmNfcGluKGNlLCBjZS0+ZW5naW5lLCB2YWRkcik7CisJaW50ZWxfZW5naW5lX21h
c2tfdCB0bXAsIG1hc2sgPSBjZS0+ZW5naW5lLT5tYXNrOworCXN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZTsKKworCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQoZW5naW5lLCBjZS0+ZW5naW5l
LT5ndCwgbWFzaywgdG1wKQorCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CisKKwlpbnRl
bF90aW1lbGluZV9leGl0KGNlLT50aW1lbGluZSk7CiB9CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3Qg
aW50ZWxfY29udGV4dF9vcHMgZ3VjX2NvbnRleHRfb3BzID0gewotCS5hbGxvYyA9IGd1Y19jb250
ZXh0X2FsbG9jLAorc3RhdGljIGludCBndWNfdmlydHVhbF9jb250ZXh0X2FsbG9jKHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBn
dWNfdmlydHVhbF9nZXRfc2libGluZyhjZS0+ZW5naW5lLCAwKTsKIAotCS5wcmVfcGluID0gZ3Vj
X2NvbnRleHRfcHJlX3BpbiwKLQkucGluID0gZ3VjX2NvbnRleHRfcGluLAotCS51bnBpbiA9IGxy
Y191bnBpbiwKLQkucG9zdF91bnBpbiA9IGxyY19wb3N0X3VucGluLAorCXJldHVybiBscmNfYWxs
b2MoY2UsIGVuZ2luZSk7Cit9CiAKLQkuZW50ZXIgPSBpbnRlbF9jb250ZXh0X2VudGVyX2VuZ2lu
ZSwKLQkuZXhpdCA9IGludGVsX2NvbnRleHRfZXhpdF9lbmdpbmUsCitzdGF0aWMgY29uc3Qgc3Ry
dWN0IGludGVsX2NvbnRleHRfb3BzIHZpcnR1YWxfZ3VjX2NvbnRleHRfb3BzID0geworCS5hbGxv
YyA9IGd1Y192aXJ0dWFsX2NvbnRleHRfYWxsb2MsCiAKLQkucmVzZXQgPSBscmNfcmVzZXQsCi0J
LmRlc3Ryb3kgPSBscmNfZGVzdHJveSwKLX07CisJLnByZV9waW4gPSBndWNfdmlydHVhbF9jb250
ZXh0X3ByZV9waW4sCisJLnBpbiA9IGd1Y192aXJ0dWFsX2NvbnRleHRfcGluLAorCS51bnBpbiA9
IGd1Y19jb250ZXh0X3VucGluLAorCS5wb3N0X3VucGluID0gZ3VjX2NvbnRleHRfcG9zdF91bnBp
biwKIAotc3RhdGljIGludCBndWNfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
ZXF1ZXN0KQotewotCWludCByZXQ7CisJLmJhbiA9IGd1Y19jb250ZXh0X2JhbiwKIAotCUdFTV9C
VUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKHJlcXVlc3QtPmNvbnRleHQpKTsKKwkuY2Fu
Y2VsX3JlcXVlc3QgPSBndWNfY29udGV4dF9jYW5jZWxfcmVxdWVzdCwKIAotCS8qCi0JICogRmx1
c2ggZW5vdWdoIHNwYWNlIHRvIHJlZHVjZSB0aGUgbGlrZWxpaG9vZCBvZiB3YWl0aW5nIGFmdGVy
Ci0JICogd2Ugc3RhcnQgYnVpbGRpbmcgdGhlIHJlcXVlc3QgLSBpbiB3aGljaCBjYXNlIHdlIHdp
bGwganVzdAotCSAqIGhhdmUgdG8gcmVwZWF0IHdvcmsuCi0JICovCi0JcmVxdWVzdC0+cmVzZXJ2
ZWRfc3BhY2UgKz0gR1VDX1JFUVVFU1RfU0laRTsKKwkuZW50ZXIgPSBndWNfdmlydHVhbF9jb250
ZXh0X2VudGVyLAorCS5leGl0ID0gZ3VjX3ZpcnR1YWxfY29udGV4dF9leGl0LAogCi0JLyoKLQkg
KiBOb3RlIHRoYXQgYWZ0ZXIgdGhpcyBwb2ludCwgd2UgaGF2ZSBjb21taXR0ZWQgdG8gdXNpbmcK
LQkgKiB0aGlzIHJlcXVlc3QgYXMgaXQgaXMgYmVpbmcgdXNlZCB0byBib3RoIHRyYWNrIHRoZQot
CSAqIHN0YXRlIG9mIGVuZ2luZSBpbml0aWFsaXNhdGlvbiBhbmQgbGl2ZW5lc3Mgb2YgdGhlCi0J
ICogZ29sZGVuIHJlbmRlcnN0YXRlIGFib3ZlLiBUaGluayB0d2ljZSBiZWZvcmUgeW91IHRyeQot
CSAqIHRvIGNhbmNlbC91bndpbmQgdGhpcyByZXF1ZXN0IG5vdy4KLQkgKi8KKwkuc2NoZWRfZGlz
YWJsZSA9IGd1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUsCiAKLQkvKiBVbmNvbmRpdGlvbmFsbHkg
aW52YWxpZGF0ZSBHUFUgY2FjaGVzIGFuZCBUTEJzLiAqLwotCXJldCA9IHJlcXVlc3QtPmVuZ2lu
ZS0+ZW1pdF9mbHVzaChyZXF1ZXN0LCBFTUlUX0lOVkFMSURBVEUpOwotCWlmIChyZXQpCi0JCXJl
dHVybiByZXQ7CisJLmRlc3Ryb3kgPSBndWNfY29udGV4dF9kZXN0cm95LAogCi0JcmVxdWVzdC0+
cmVzZXJ2ZWRfc3BhY2UgLT0gR1VDX1JFUVVFU1RfU0laRTsKLQlyZXR1cm4gMDsKKwkuZ2V0X3Np
YmxpbmcgPSBndWNfdmlydHVhbF9nZXRfc2libGluZywKK307CisKK3N0YXRpYyBib29sCitndWNf
aXJxX2VuYWJsZV9icmVhZGNydW1icyhzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpCit7CisJ
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZzsKKwlpbnRlbF9lbmdpbmVfbWFza190IHRt
cCwgbWFzayA9IGItPmVuZ2luZV9tYXNrOworCWJvb2wgcmVzdWx0ID0gZmFsc2U7CisKKwlmb3Jf
ZWFjaF9lbmdpbmVfbWFza2VkKHNpYmxpbmcsIGItPmlycV9lbmdpbmUtPmd0LCBtYXNrLCB0bXAp
CisJCXJlc3VsdCB8PSBpbnRlbF9lbmdpbmVfaXJxX2VuYWJsZShzaWJsaW5nKTsKKworCXJldHVy
biByZXN1bHQ7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBxdWV1ZV9yZXF1ZXN0KHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKLQkJCQkgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCi0J
CQkJIGludCBwcmlvKQorc3RhdGljIHZvaWQKK2d1Y19pcnFfZGlzYWJsZV9icmVhZGNydW1icyhz
dHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpCiB7Ci0JR0VNX0JVR19PTighbGlzdF9lbXB0eSgm
cnEtPnNjaGVkLmxpbmspKTsKLQlsaXN0X2FkZF90YWlsKCZycS0+c2NoZWQubGluaywKLQkJICAg
ICAgaTkxNV9zY2hlZF9sb29rdXBfcHJpb2xpc3QoZW5naW5lLT5zY2hlZF9lbmdpbmUsIHByaW8p
KTsKLQlzZXRfYml0KEk5MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZycS0+ZmVuY2UuZmxhZ3MpOwor
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmc7CisJaW50ZWxfZW5naW5lX21hc2tfdCB0
bXAsIG1hc2sgPSBiLT5lbmdpbmVfbWFzazsKKworCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQoc2li
bGluZywgYi0+aXJxX2VuZ2luZS0+Z3QsIG1hc2ssIHRtcCkKKwkJaW50ZWxfZW5naW5lX2lycV9k
aXNhYmxlKHNpYmxpbmcpOwogfQogCi1zdGF0aWMgdm9pZCBndWNfc3VibWl0X3JlcXVlc3Qoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgdm9pZCBndWNfaW5pdF9icmVhZGNydW1icyhz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lID0gcnEtPmVuZ2luZTsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOworCWludCBpOwog
Ci0JLyogV2lsbCBiZSBjYWxsZWQgZnJvbSBpcnEtY29udGV4dCB3aGVuIHVzaW5nIGZvcmVpZ24g
ZmVuY2VzLiAqLwotCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9j
aywgZmxhZ3MpOworCS8qCisJICogSW4gR3VDIHN1Ym1pc3Npb24gbW9kZSB3ZSBkbyBub3Qga25v
dyB3aGljaCBwaHlzaWNhbCBlbmdpbmUgYSByZXF1ZXN0CisJICogd2lsbCBiZSBzY2hlZHVsZWQg
b24sIHRoaXMgY3JlYXRlcyBhIHByb2JsZW0gYmVjYXVzZSB0aGUgYnJlYWRjcnVtYgorCSAqIGlu
dGVycnVwdCBpcyBwZXIgcGh5c2ljYWwgZW5naW5lLiBUbyB3b3JrIGFyb3VuZCB0aGlzIHdlIGF0
dGFjaAorCSAqIHJlcXVlc3RzIGFuZCBkaXJlY3QgYWxsIGJyZWFkY3J1bWIgaW50ZXJydXB0cyB0
byB0aGUgZmlyc3QgaW5zdGFuY2UKKwkgKiBvZiBhbiBlbmdpbmUgcGVyIGNsYXNzLiBJbiBhZGRp
dGlvbiBhbGwgYnJlYWRjcnVtYiBpbnRlcnJ1cHRzIGFyZQorCSAqIGVuYWJsZWQgLyBkaXNhYmxl
ZCBhY3Jvc3MgYW4gZW5naW5lIGNsYXNzIGluIHVuaXNvbi4KKwkgKi8KKwlmb3IgKGkgPSAwOyBp
IDwgTUFYX0VOR0lORV9JTlNUQU5DRTsgKytpKSB7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KnNpYmxpbmcgPQorCQkJZW5naW5lLT5ndC0+ZW5naW5lX2NsYXNzW2VuZ2luZS0+Y2xhc3NdW2ld
OworCisJCWlmIChzaWJsaW5nKSB7CisJCQlpZiAoZW5naW5lLT5icmVhZGNydW1icyAhPSBzaWJs
aW5nLT5icmVhZGNydW1icykgeworCQkJCWludGVsX2JyZWFkY3J1bWJzX3B1dChlbmdpbmUtPmJy
ZWFkY3J1bWJzKTsKKwkJCQllbmdpbmUtPmJyZWFkY3J1bWJzID0KKwkJCQkJaW50ZWxfYnJlYWRj
cnVtYnNfZ2V0KHNpYmxpbmctPmJyZWFkY3J1bWJzKTsKKwkJCX0KKwkJCWJyZWFrOworCQl9CisJ
fQogCi0JcXVldWVfcmVxdWVzdChlbmdpbmUsIHJxLCBycV9wcmlvKHJxKSk7CisJaWYgKGVuZ2lu
ZS0+YnJlYWRjcnVtYnMpIHsKKwkJZW5naW5lLT5icmVhZGNydW1icy0+ZW5naW5lX21hc2sgfD0g
ZW5naW5lLT5tYXNrOworCQllbmdpbmUtPmJyZWFkY3J1bWJzLT5pcnFfZW5hYmxlID0gZ3VjX2ly
cV9lbmFibGVfYnJlYWRjcnVtYnM7CisJCWVuZ2luZS0+YnJlYWRjcnVtYnMtPmlycV9kaXNhYmxl
ID0gZ3VjX2lycV9kaXNhYmxlX2JyZWFkY3J1bWJzOworCX0KK30KIAotCUdFTV9CVUdfT04oaTkx
NV9zY2hlZF9lbmdpbmVfaXNfZW1wdHkoZW5naW5lLT5zY2hlZF9lbmdpbmUpKTsKLQlHRU1fQlVH
X09OKGxpc3RfZW1wdHkoJnJxLT5zY2hlZC5saW5rKSk7CitzdGF0aWMgdm9pZCBndWNfYnVtcF9p
bmZsaWdodF9yZXF1ZXN0X3ByaW8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCisJCQkJCSAgIGlu
dCBwcmlvKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5jb250ZXh0OworCXU4
IG5ld19ndWNfcHJpbyA9IG1hcF9pOTE1X3ByaW9fdG9fZ3VjX3ByaW8ocHJpbyk7CisKKwkvKiBT
aG9ydCBjaXJjdWl0IGZ1bmN0aW9uICovCisJaWYgKHByaW8gPCBJOTE1X1BSSU9SSVRZX05PUk1B
TCB8fAorCSAgICAocnEtPmd1Y19wcmlvID09IEdVQ19QUklPX0ZJTkkpIHx8CisJICAgIChycS0+
Z3VjX3ByaW8gIT0gR1VDX1BSSU9fSU5JVCAmJgorCSAgICAgIW5ld19ndWNfcHJpb19oaWdoZXIo
cnEtPmd1Y19wcmlvLCBuZXdfZ3VjX3ByaW8pKSkKKwkJcmV0dXJuOworCisJc3Bpbl9sb2NrKCZj
ZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlpZiAocnEtPmd1Y19wcmlvICE9IEdVQ19QUklPX0ZJTkkp
IHsKKwkJaWYgKHJxLT5ndWNfcHJpbyAhPSBHVUNfUFJJT19JTklUKQorCQkJc3ViX2NvbnRleHRf
aW5mbGlnaHRfcHJpbyhjZSwgcnEtPmd1Y19wcmlvKTsKKwkJcnEtPmd1Y19wcmlvID0gbmV3X2d1
Y19wcmlvOworCQlhZGRfY29udGV4dF9pbmZsaWdodF9wcmlvKGNlLCBycS0+Z3VjX3ByaW8pOwor
CQl1cGRhdGVfY29udGV4dF9wcmlvKGNlKTsKKwl9CisJc3Bpbl91bmxvY2soJmNlLT5ndWNfYWN0
aXZlLmxvY2spOworfQogCi0JdGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5lLT5zY2hlZF9lbmdp
bmUtPnRhc2tsZXQpOworc3RhdGljIHZvaWQgZ3VjX3JldGlyZV9pbmZsaWdodF9yZXF1ZXN0X3By
aW8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNl
ID0gcnEtPmNvbnRleHQ7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnNjaGVk
X2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCXNwaW5fbG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7
CisJZ3VjX3ByaW9fZmluaShycSwgY2UpOworCXNwaW5fdW5sb2NrKCZjZS0+Z3VjX2FjdGl2ZS5s
b2NrKTsKIH0KIAogc3RhdGljIHZvaWQgc2FuaXRpemVfaHdzcChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCkBAIC01ODgsMjEgKzIzMTUsNjggQEAgc3RhdGljIGludCBndWNfcmVzdW1l
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGlj
IGJvb2wgZ3VjX3NjaGVkX2VuZ2luZV9kaXNhYmxlZChzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUg
KnNjaGVkX2VuZ2luZSkKK3sKKwlyZXR1cm4gIXNjaGVkX2VuZ2luZS0+dGFza2xldC5jYWxsYmFj
azsKK30KKwogc3RhdGljIHZvaWQgZ3VjX3NldF9kZWZhdWx0X3N1Ym1pc3Npb24oc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCWVuZ2luZS0+c3VibWl0X3JlcXVlc3QgPSBndWNf
c3VibWl0X3JlcXVlc3Q7CiB9CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBndWNfa2VybmVsX2NvbnRl
eHRfcGluKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkJICBzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UpCit7CisJaWYgKGNvbnRleHRfZ3VjX2lkX2ludmFsaWQoY2UpKQorCQlwaW5fZ3VjX2lk
KGd1YywgY2UpOworCWd1Y19scmNfZGVzY19waW4oY2UsIHRydWUpOworfQorCitzdGF0aWMgaW5s
aW5lIHZvaWQgZ3VjX2luaXRfbHJjX21hcHBpbmcoc3RydWN0IGludGVsX2d1YyAqZ3VjKQorewor
CXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3VjKTsKKwlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisKKwkvKiBtYWtlIHN1
cmUgYWxsIGRlc2NyaXB0b3JzIGFyZSBjbGVhbi4uLiAqLworCXhhX2Rlc3Ryb3koJmd1Yy0+Y29u
dGV4dF9sb29rdXApOworCisJLyoKKwkgKiBTb21lIGNvbnRleHRzIG1pZ2h0IGhhdmUgYmVlbiBw
aW5uZWQgYmVmb3JlIHdlIGVuYWJsZWQgR3VDCisJICogc3VibWlzc2lvbiwgc28gd2UgbmVlZCB0
byBhZGQgdGhlbSB0byB0aGUgR3VDIGJvb2tlZXBpbmcuCisJICogQWxzbywgYWZ0ZXIgYSByZXNl
dCB0aGUgb2YgR3VDIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlCisJICogaW5mb3JtYXRp
b24gc2hhcmVkIHdpdGggR3VDIGlzIHByb3Blcmx5IHJlc2V0LiBUaGUga2VybmVsIExSQ3MgYXJl
CisJICogbm90IGF0dGFjaGVkIHRvIHRoZSBnZW1fY29udGV4dCwgc28gdGhleSBuZWVkIHRvIGJl
IGFkZGVkIHNlcGFyYXRlbHkuCisJICoKKwkgKiBOb3RlOiB3ZSBwdXJwb3NlbHkgZG8gbm90IGNo
ZWNrIHRoZSByZXR1cm4gb2YgZ3VjX2xyY19kZXNjX3BpbiwKKwkgKiBiZWNhdXNlIHRoYXQgZnVu
Y3Rpb24gY2FuIG9ubHkgZmFpbCBpZiBhIHJlc2V0IGlzIGp1c3Qgc3RhcnRpbmcuIFRoaXMKKwkg
KiBpcyBhdCB0aGUgZW5kIG9mIHJlc2V0IHNvIHByZXN1bWFibHkgYW5vdGhlciByZXNldCBpc24n
dCBoYXBwZW5pbmcKKwkgKiBhbmQgZXZlbiBpdCBkaWQgdGhpcyBjb2RlIHdvdWxkIGJlIHJ1biBh
Z2Fpbi4KKwkgKi8KKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkKKwkJaWYgKGVu
Z2luZS0+a2VybmVsX2NvbnRleHQpCisJCQlndWNfa2VybmVsX2NvbnRleHRfcGluKGd1YywgZW5n
aW5lLT5rZXJuZWxfY29udGV4dCk7Cit9CisKIHN0YXRpYyB2b2lkIGd1Y19yZWxlYXNlKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAllbmdpbmUtPnNhbml0aXplID0gTlVMTDsg
Lyogbm8gbG9uZ2VyIGluIGNvbnRyb2wsIG5vdGhpbmcgdG8gc2FuaXRpemUgKi8KIAotCXRhc2ts
ZXRfa2lsbCgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQpOwotCiAJaW50ZWxfZW5naW5l
X2NsZWFudXBfY29tbW9uKGVuZ2luZSk7CiAJbHJjX2Zpbmlfd2FfY3R4KGVuZ2luZSk7CiB9CiAK
K3N0YXRpYyB2b2lkIHZpcnR1YWxfZ3VjX2J1bXBfc2VyaWFsKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplOworCWludGVsX2VuZ2lu
ZV9tYXNrX3QgdG1wLCBtYXNrID0gZW5naW5lLT5tYXNrOworCisJZm9yX2VhY2hfZW5naW5lX21h
c2tlZChlLCBlbmdpbmUtPmd0LCBtYXNrLCB0bXApCisJCWUtPnNlcmlhbCsrOworfQorCiBzdGF0
aWMgdm9pZCBndWNfZGVmYXVsdF92ZnVuY3Moc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQogewogCS8qIERlZmF1bHQgdmZ1bmNzIHdoaWNoIGNhbiBiZSBvdmVycmlkZGVuIGJ5IGVhY2gg
ZW5naW5lLiAqLwpAQCAtNjExLDEzICsyMzg1LDE1IEBAIHN0YXRpYyB2b2lkIGd1Y19kZWZhdWx0
X3ZmdW5jcyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIAllbmdpbmUtPmNvcHMg
PSAmZ3VjX2NvbnRleHRfb3BzOwogCWVuZ2luZS0+cmVxdWVzdF9hbGxvYyA9IGd1Y19yZXF1ZXN0
X2FsbG9jOworCWVuZ2luZS0+YWRkX2FjdGl2ZV9yZXF1ZXN0ID0gYWRkX3RvX2NvbnRleHQ7CisJ
ZW5naW5lLT5yZW1vdmVfYWN0aXZlX3JlcXVlc3QgPSByZW1vdmVfZnJvbV9jb250ZXh0OwogCiAJ
ZW5naW5lLT5zY2hlZF9lbmdpbmUtPnNjaGVkdWxlID0gaTkxNV9zY2hlZHVsZTsKIAotCWVuZ2lu
ZS0+cmVzZXQucHJlcGFyZSA9IGd1Y19yZXNldF9wcmVwYXJlOwotCWVuZ2luZS0+cmVzZXQucmV3
aW5kID0gZ3VjX3Jlc2V0X3Jld2luZDsKLQllbmdpbmUtPnJlc2V0LmNhbmNlbCA9IGd1Y19yZXNl
dF9jYW5jZWw7Ci0JZW5naW5lLT5yZXNldC5maW5pc2ggPSBndWNfcmVzZXRfZmluaXNoOworCWVu
Z2luZS0+cmVzZXQucHJlcGFyZSA9IGd1Y19yZXNldF9ub3A7CisJZW5naW5lLT5yZXNldC5yZXdp
bmQgPSBndWNfcmV3aW5kX25vcDsKKwllbmdpbmUtPnJlc2V0LmNhbmNlbCA9IGd1Y19yZXNldF9u
b3A7CisJZW5naW5lLT5yZXNldC5maW5pc2ggPSBndWNfcmVzZXRfbm9wOwogCiAJZW5naW5lLT5l
bWl0X2ZsdXNoID0gZ2VuOF9lbWl0X2ZsdXNoX3hjczsKIAllbmdpbmUtPmVtaXRfaW5pdF9icmVh
ZGNydW1iID0gZ2VuOF9lbWl0X2luaXRfYnJlYWRjcnVtYjsKQEAgLTYyOSwxMyArMjQwNSwxMyBA
QCBzdGF0aWMgdm9pZCBndWNfZGVmYXVsdF92ZnVuY3Moc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCWVuZ2luZS0+c2V0X2RlZmF1bHRfc3VibWlzc2lvbiA9IGd1Y19zZXRfZGVmYXVs
dF9zdWJtaXNzaW9uOwogCiAJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfUFJFRU1Q
VElPTjsKKwllbmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19USU1FU0xJQ0VTOwogCiAJ
LyoKIAkgKiBUT0RPOiBHdUMgc3VwcG9ydHMgdGltZXNsaWNpbmcgYW5kIHNlbWFwaG9yZXMgYXMg
d2VsbCwgYnV0IHRoZXkncmUKIAkgKiBoYW5kbGVkIGJ5IHRoZSBmaXJtd2FyZSBzbyBzb21lIG1p
bm9yIHR3ZWFrcyBhcmUgcmVxdWlyZWQgYmVmb3JlCiAJICogZW5hYmxpbmcuCiAJICoKLQkgKiBl
bmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19USU1FU0xJQ0VTOwogCSAqIGVuZ2luZS0+
ZmxhZ3MgfD0gSTkxNV9FTkdJTkVfSEFTX1NFTUFQSE9SRVM7CiAJICovCiAKQEAgLTY2Niw5ICsy
NDQyLDIxIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBndWNfZGVmYXVsdF9pcnFzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlpbnRlbF9lbmdpbmVfc2V0X2lycV9oYW5kbGVyKGVuZ2lu
ZSwgY3NfaXJxX2hhbmRsZXIpOwogfQogCitzdGF0aWMgdm9pZCBndWNfc2NoZWRfZW5naW5lX2Rl
c3Ryb3koc3RydWN0IGtyZWYgKmtyZWYpCit7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpz
Y2hlZF9lbmdpbmUgPQorCQljb250YWluZXJfb2Yoa3JlZiwgdHlwZW9mKCpzY2hlZF9lbmdpbmUp
LCByZWYpOworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IHNjaGVkX2VuZ2luZS0+cHJpdmF0ZV9k
YXRhOworCisJZ3VjLT5zY2hlZF9lbmdpbmUgPSBOVUxMOworCXRhc2tsZXRfa2lsbCgmc2NoZWRf
ZW5naW5lLT50YXNrbGV0KTsgLyogZmx1c2ggdGhlIGNhbGxiYWNrICovCisJa2ZyZWUoc2NoZWRf
ZW5naW5lKTsKK30KKwogaW50IGludGVsX2d1Y19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
IGVuZ2luZS0+aTkxNTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5ndC0+dWMu
Z3VjOwogCiAJLyoKIAkgKiBUaGUgc2V0dXAgcmVsaWVzIG9uIHNldmVyYWwgYXNzdW1wdGlvbnMg
KGUuZy4gaXJxcyBhbHdheXMgZW5hYmxlZCkKQEAgLTY3NiwxMCArMjQ2NCwyOCBAQCBpbnQgaW50
ZWxfZ3VjX3N1Ym1pc3Npb25fc2V0dXAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CSAqLwogCUdFTV9CVUdfT04oR1JBUEhJQ1NfVkVSKGk5MTUpIDwgMTEpOwogCi0JdGFza2xldF9z
ZXR1cCgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQsIGd1Y19zdWJtaXNzaW9uX3Rhc2ts
ZXQpOworCWlmICghZ3VjLT5zY2hlZF9lbmdpbmUpIHsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUgPSBp
OTE1X3NjaGVkX2VuZ2luZV9jcmVhdGUoRU5HSU5FX1ZJUlRVQUwpOworCQlpZiAoIWd1Yy0+c2No
ZWRfZW5naW5lKQorCQkJcmV0dXJuIC1FTk9NRU07CisKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPnNj
aGVkdWxlID0gaTkxNV9zY2hlZHVsZTsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPmRpc2FibGVkID0g
Z3VjX3NjaGVkX2VuZ2luZV9kaXNhYmxlZDsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPnByaXZhdGVf
ZGF0YSA9IGd1YzsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPmRlc3Ryb3kgPSBndWNfc2NoZWRfZW5n
aW5lX2Rlc3Ryb3k7CisJCWd1Yy0+c2NoZWRfZW5naW5lLT5idW1wX2luZmxpZ2h0X3JlcXVlc3Rf
cHJpbyA9CisJCQlndWNfYnVtcF9pbmZsaWdodF9yZXF1ZXN0X3ByaW87CisJCWd1Yy0+c2NoZWRf
ZW5naW5lLT5yZXRpcmVfaW5mbGlnaHRfcmVxdWVzdF9wcmlvID0KKwkJCWd1Y19yZXRpcmVfaW5m
bGlnaHRfcmVxdWVzdF9wcmlvOworCQl0YXNrbGV0X3NldHVwKCZndWMtPnNjaGVkX2VuZ2luZS0+
dGFza2xldCwKKwkJCSAgICAgIGd1Y19zdWJtaXNzaW9uX3Rhc2tsZXQpOworCX0KKwlpOTE1X3Nj
aGVkX2VuZ2luZV9wdXQoZW5naW5lLT5zY2hlZF9lbmdpbmUpOworCWVuZ2luZS0+c2NoZWRfZW5n
aW5lID0gaTkxNV9zY2hlZF9lbmdpbmVfZ2V0KGd1Yy0+c2NoZWRfZW5naW5lKTsKIAogCWd1Y19k
ZWZhdWx0X3ZmdW5jcyhlbmdpbmUpOwogCWd1Y19kZWZhdWx0X2lycXMoZW5naW5lKTsKKwlndWNf
aW5pdF9icmVhZGNydW1icyhlbmdpbmUpOwogCiAJaWYgKGVuZ2luZS0+Y2xhc3MgPT0gUkVOREVS
X0NMQVNTKQogCQlyY3Nfc3VibWlzc2lvbl9vdmVycmlkZShlbmdpbmUpOwpAQCAtNjk1LDcgKzI1
MDEsNyBAQCBpbnQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fc2V0dXAoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogCiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2VuYWJsZShzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMpCiB7Ci0JZ3VjX3N0YWdlX2Rlc2NfaW5pdChndWMpOworCWd1Y19pbml0
X2xyY19tYXBwaW5nKGd1Yyk7CiB9CiAKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCkBAIC03MDUsOCArMjUxMSwxMyBAQCB2b2lkIGludGVs
X2d1Y19zdWJtaXNzaW9uX2Rpc2FibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCUdFTV9CVUdf
T04oZ3QtPmF3YWtlKTsgLyogR1Qgc2hvdWxkIGJlIHBhcmtlZCBmaXJzdCAqLwogCiAJLyogTm90
ZTogQnkgdGhlIHRpbWUgd2UncmUgaGVyZSwgR3VDIG1heSBoYXZlIGFscmVhZHkgYmVlbiByZXNl
dCAqLworfQogCi0JZ3VjX3N0YWdlX2Rlc2NfZmluaShndWMpOworc3RhdGljIGJvb2wgX19ndWNf
c3VibWlzc2lvbl9zdXBwb3J0ZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCS8qIEd1QyBz
dWJtaXNzaW9uIGlzIHVuYXZhaWxhYmxlIGZvciBwcmUtR2VuMTEgKi8KKwlyZXR1cm4gaW50ZWxf
Z3VjX2lzX3N1cHBvcnRlZChndWMpICYmCisJICAgICAgIEdSQVBISUNTX1ZFUihndWNfdG9fZ3Qo
Z3VjKS0+aTkxNSkgPj0gMTE7CiB9CiAKIHN0YXRpYyBib29sIF9fZ3VjX3N1Ym1pc3Npb25fc2Vs
ZWN0ZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQpAQCAtNzIxLDUgKzI1MzIsNDgzIEBAIHN0YXRp
YyBib29sIF9fZ3VjX3N1Ym1pc3Npb25fc2VsZWN0ZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQog
CiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1YyAq
Z3VjKQogeworCWd1Yy0+c3VibWlzc2lvbl9zdXBwb3J0ZWQgPSBfX2d1Y19zdWJtaXNzaW9uX3N1
cHBvcnRlZChndWMpOwogCWd1Yy0+c3VibWlzc2lvbl9zZWxlY3RlZCA9IF9fZ3VjX3N1Ym1pc3Np
b25fc2VsZWN0ZWQoZ3VjKTsKIH0KKworc3RhdGljIGlubGluZSBzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqCitnMmhfY29udGV4dF9sb29rdXAoc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MzIgZGVzY19p
ZHgpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCisJaWYgKHVubGlrZWx5KGRlc2Nf
aWR4ID49IEdVQ19NQVhfTFJDX0RFU0NSSVBUT1JTKSkgeworCQlkcm1fZXJyKCZndWNfdG9fZ3Qo
Z3VjKS0+aTkxNS0+ZHJtLAorCQkJIkludmFsaWQgZGVzY19pZHggJXUiLCBkZXNjX2lkeCk7CisJ
CXJldHVybiBOVUxMOworCX0KKworCWNlID0gX19nZXRfY29udGV4dChndWMsIGRlc2NfaWR4KTsK
KwlpZiAodW5saWtlbHkoIWNlKSkgeworCQlkcm1fZXJyKCZndWNfdG9fZ3QoZ3VjKS0+aTkxNS0+
ZHJtLAorCQkJIkNvbnRleHQgaXMgTlVMTCwgZGVzY19pZHggJXUiLCBkZXNjX2lkeCk7CisJCXJl
dHVybiBOVUxMOworCX0KKworCXJldHVybiBjZTsKK30KKworc3RhdGljIHZvaWQgZGVjcl9vdXRz
dGFuZGluZ19zdWJtaXNzaW9uX2cyaChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaWYgKGF0
b21pY19kZWNfYW5kX3Rlc3QoJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgpKQorCQl3
YWtlX3VwX2FsbCgmZ3VjLT5jdC53cSk7Cit9CisKK2ludCBpbnRlbF9ndWNfZGVyZWdpc3Rlcl9k
b25lX3Byb2Nlc3NfbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkJICBjb25zdCB1MzIg
Km1zZywKKwkJCQkJICB1MzIgbGVuKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1
MzIgZGVzY19pZHggPSBtc2dbMF07CisKKwlpZiAodW5saWtlbHkobGVuIDwgMSkpIHsKKwkJZHJt
X2VycigmZ3VjX3RvX2d0KGd1YyktPmk5MTUtPmRybSwgIkludmFsaWQgbGVuZ3RoICV1IiwgbGVu
KTsKKwkJcmV0dXJuIC1FUFJPVE87CisJfQorCisJY2UgPSBnMmhfY29udGV4dF9sb29rdXAoZ3Vj
LCBkZXNjX2lkeCk7CisJaWYgKHVubGlrZWx5KCFjZSkpCisJCXJldHVybiAtRVBST1RPOworCisJ
dHJhY2VfaW50ZWxfY29udGV4dF9kZXJlZ2lzdGVyX2RvbmUoY2UpOworCisJaWYgKGNvbnRleHRf
d2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihjZSkpIHsKKwkJc3RydWN0IGludGVsX3J1
bnRpbWVfcG0gKnJ1bnRpbWVfcG0gPQorCQkJJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1l
X3BtOworCQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKworCQkvKgorCQkgKiBQcmV2aW91cyBv
d25lciBvZiB0aGlzIGd1Y19pZCBoYXMgYmVlbiBkZXJlZ2lzdGVyZWQsIG5vdyBzYWZlCisJCSAq
IHJlZ2lzdGVyIHRoaXMgY29udGV4dC4KKwkJICovCisJCXdpdGhfaW50ZWxfcnVudGltZV9wbShy
dW50aW1lX3BtLCB3YWtlcmVmKQorCQkJcmVnaXN0ZXJfY29udGV4dChjZSwgdHJ1ZSk7CisJCWd1
Y19zaWduYWxfY29udGV4dF9mZW5jZShjZSk7CisJCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwl9
IGVsc2UgaWYgKGNvbnRleHRfZGVzdHJveWVkKGNlKSkgeworCQkvKiBDb250ZXh0IGhhcyBiZWVu
IGRlc3Ryb3llZCAqLworCQlyZWxlYXNlX2d1Y19pZChndWMsIGNlKTsKKwkJX19ndWNfY29udGV4
dF9kZXN0cm95KGNlKTsKKwl9CisKKwlkZWNyX291dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKGd1
Yyk7CisKKwlyZXR1cm4gMDsKK30KKworaW50IGludGVsX2d1Y19zY2hlZF9kb25lX3Byb2Nlc3Nf
bXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkgICAgIGNvbnN0IHUzMiAqbXNnLAorCQkJ
CSAgICAgdTMyIGxlbikKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJdW5zaWduZWQg
bG9uZyBmbGFnczsKKwl1MzIgZGVzY19pZHggPSBtc2dbMF07CisKKwlpZiAodW5saWtlbHkobGVu
IDwgMikpIHsKKwkJZHJtX2VycigmZ3VjX3RvX2d0KGd1YyktPmk5MTUtPmRybSwgIkludmFsaWQg
bGVuZ3RoICV1IiwgbGVuKTsKKwkJcmV0dXJuIC1FUFJPVE87CisJfQorCisJY2UgPSBnMmhfY29u
dGV4dF9sb29rdXAoZ3VjLCBkZXNjX2lkeCk7CisJaWYgKHVubGlrZWx5KCFjZSkpCisJCXJldHVy
biAtRVBST1RPOworCisJaWYgKHVubGlrZWx5KGNvbnRleHRfZGVzdHJveWVkKGNlKSB8fAorCQkg
ICAgICghY29udGV4dF9wZW5kaW5nX2VuYWJsZShjZSkgJiYKKwkJICAgICAhY29udGV4dF9wZW5k
aW5nX2Rpc2FibGUoY2UpKSkpIHsKKwkJZHJtX2VycigmZ3VjX3RvX2d0KGd1YyktPmk5MTUtPmRy
bSwKKwkJCSJCYWQgY29udGV4dCBzY2hlZF9zdGF0ZSAweCV4LCAweCV4LCBkZXNjX2lkeCAldSIs
CisJCQlhdG9taWNfcmVhZCgmY2UtPmd1Y19zY2hlZF9zdGF0ZV9ub19sb2NrKSwKKwkJCWNlLT5n
dWNfc3RhdGUuc2NoZWRfc3RhdGUsIGRlc2NfaWR4KTsKKwkJcmV0dXJuIC1FUFJPVE87CisJfQor
CisJdHJhY2VfaW50ZWxfY29udGV4dF9zY2hlZF9kb25lKGNlKTsKKworCWlmIChjb250ZXh0X3Bl
bmRpbmdfZW5hYmxlKGNlKSkgeworCQljbHJfY29udGV4dF9wZW5kaW5nX2VuYWJsZShjZSk7CisJ
fSBlbHNlIGlmIChjb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSkpIHsKKwkJYm9vbCBiYW5uZWQ7
CisKKwkJLyoKKwkJICogVW5waW4gbXVzdCBiZSBkb25lIGJlZm9yZSBfX2d1Y19zaWduYWxfY29u
dGV4dF9mZW5jZSwKKwkJICogb3RoZXJ3aXNlIGEgcmFjZSBleGlzdHMgYmV0d2VlbiB0aGUgcmVx
dWVzdHMgZ2V0dGluZworCQkgKiBzdWJtaXR0ZWQgKyByZXRpcmVkIGJlZm9yZSB0aGlzIHVucGlu
IGNvbXBsZXRlcyByZXN1bHRpbmcgaW4KKwkJICogdGhlIHBpbl9jb3VudCBnb2luZyB0byB6ZXJv
IGFuZCB0aGUgY29udGV4dCBzdGlsbCBiZWluZworCQkgKiBlbmFibGVkLgorCQkgKi8KKwkJaW50
ZWxfY29udGV4dF9zY2hlZF9kaXNhYmxlX3VucGluKGNlKTsKKworCQlzcGluX2xvY2tfaXJxc2F2
ZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJCWJhbm5lZCA9IGNvbnRleHRfYmFubmVk
KGNlKTsKKwkJY2xyX2NvbnRleHRfYmFubmVkKGNlKTsKKwkJY2xyX2NvbnRleHRfcGVuZGluZ19k
aXNhYmxlKGNlKTsKKwkJX19ndWNfc2lnbmFsX2NvbnRleHRfZmVuY2UoY2UpOworCQlndWNfYmxv
Y2tlZF9mZW5jZV9jb21wbGV0ZShjZSk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5n
dWNfc3RhdGUubG9jaywgZmxhZ3MpOworCisJCWlmIChiYW5uZWQpIHsKKwkJCWd1Y19jYW5jZWxf
Y29udGV4dF9yZXF1ZXN0cyhjZSk7CisJCQlpbnRlbF9lbmdpbmVfc2lnbmFsX2JyZWFkY3J1bWJz
KGNlLT5lbmdpbmUpOworCQl9CisJfQorCisJZGVjcl9vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cy
aChndWMpOworCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKworCXJldHVybiAwOworfQorCitzdGF0
aWMgdm9pZCBjYXB0dXJlX2Vycm9yX3N0YXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGludGVsX2d0ICpndCA9IGd1Y190
b19ndChndWMpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZ3QtPmk5MTU7CisJ
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gX19jb250ZXh0X3RvX3BoeXNpY2FsX2Vu
Z2luZShjZSk7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwlpbnRlbF9lbmdpbmVfc2V0
X2h1bmdfY29udGV4dChlbmdpbmUsIGNlKTsKKwl3aXRoX2ludGVsX3J1bnRpbWVfcG0oJmk5MTUt
PnJ1bnRpbWVfcG0sIHdha2VyZWYpCisJCWk5MTVfY2FwdHVyZV9lcnJvcl9zdGF0ZShndCwgZW5n
aW5lLT5tYXNrKTsKKwlhdG9taWNfaW5jKCZpOTE1LT5ncHVfZXJyb3IucmVzZXRfZW5naW5lX2Nv
dW50W2VuZ2luZS0+dWFiaV9jbGFzc10pOworfQorCitzdGF0aWMgdm9pZCBndWNfY29udGV4dF9y
ZXBsYXkoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpOTE1X3NjaGVkX2Vu
Z2luZSAqc2NoZWRfZW5naW5lID0gY2UtPmVuZ2luZS0+c2NoZWRfZW5naW5lOworCisJX19ndWNf
cmVzZXRfY29udGV4dChjZSwgdHJ1ZSk7CisJdGFza2xldF9oaV9zY2hlZHVsZSgmc2NoZWRfZW5n
aW5lLT50YXNrbGV0KTsKK30KKworc3RhdGljIHZvaWQgZ3VjX2hhbmRsZV9jb250ZXh0X3Jlc2V0
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkgICAgIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKK3sKKwl0cmFjZV9pbnRlbF9jb250ZXh0X3Jlc2V0KGNlKTsKKworCWlmIChsaWtlbHkoIWlu
dGVsX2NvbnRleHRfaXNfYmFubmVkKGNlKSkpIHsKKwkJY2FwdHVyZV9lcnJvcl9zdGF0ZShndWMs
IGNlKTsKKwkJZ3VjX2NvbnRleHRfcmVwbGF5KGNlKTsKKwl9Cit9CisKK2ludCBpbnRlbF9ndWNf
Y29udGV4dF9yZXNldF9wcm9jZXNzX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJCWNv
bnN0IHUzMiAqbXNnLCB1MzIgbGVuKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwlp
bnQgZGVzY19pZHg7CisKKwlpZiAodW5saWtlbHkobGVuICE9IDEpKSB7CisJCWRybV9lcnIoJmd1
Y190b19ndChndWMpLT5pOTE1LT5kcm0sICJJbnZhbGlkIGxlbmd0aCAldSIsIGxlbik7CisJCXJl
dHVybiAtRVBST1RPOworCX0KKworCWRlc2NfaWR4ID0gbXNnWzBdOworCWNlID0gZzJoX2NvbnRl
eHRfbG9va3VwKGd1YywgZGVzY19pZHgpOworCWlmICh1bmxpa2VseSghY2UpKQorCQlyZXR1cm4g
LUVQUk9UTzsKKworCWd1Y19oYW5kbGVfY29udGV4dF9yZXNldChndWMsIGNlKTsKKworCXJldHVy
biAwOworfQorCitzdGF0aWMgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqCitndWNfbG9va3VwX2Vu
Z2luZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHU4IGd1Y19jbGFzcywgdTggaW5zdGFuY2UpCit7
CisJc3RydWN0IGludGVsX2d0ICpndCA9IGd1Y190b19ndChndWMpOworCXU4IGVuZ2luZV9jbGFz
cyA9IGd1Y19jbGFzc190b19lbmdpbmVfY2xhc3MoZ3VjX2NsYXNzKTsKKworCS8qIENsYXNzIGlu
ZGV4IGlzIGNoZWNrZWQgaW4gY2xhc3MgY29udmVydGVyICovCisJR0VNX0JVR19PTihpbnN0YW5j
ZSA+IE1BWF9FTkdJTkVfSU5TVEFOQ0UpOworCisJcmV0dXJuIGd0LT5lbmdpbmVfY2xhc3NbZW5n
aW5lX2NsYXNzXVtpbnN0YW5jZV07Cit9CisKK2ludCBpbnRlbF9ndWNfZW5naW5lX2ZhaWx1cmVf
cHJvY2Vzc19tc2coc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCQkgY29uc3QgdTMyICptc2cs
IHUzMiBsZW4pCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCXU4IGd1Y19j
bGFzcywgaW5zdGFuY2U7CisJdTMyIHJlYXNvbjsKKworCWlmICh1bmxpa2VseShsZW4gIT0gMykp
IHsKKwkJZHJtX2VycigmZ3VjX3RvX2d0KGd1YyktPmk5MTUtPmRybSwgIkludmFsaWQgbGVuZ3Ro
ICV1IiwgbGVuKTsKKwkJcmV0dXJuIC1FUFJPVE87CisJfQorCisJZ3VjX2NsYXNzID0gbXNnWzBd
OworCWluc3RhbmNlID0gbXNnWzFdOworCXJlYXNvbiA9IG1zZ1syXTsKKworCWVuZ2luZSA9IGd1
Y19sb29rdXBfZW5naW5lKGd1YywgZ3VjX2NsYXNzLCBpbnN0YW5jZSk7CisJaWYgKHVubGlrZWx5
KCFlbmdpbmUpKSB7CisJCWRybV9lcnIoJmd1Y190b19ndChndWMpLT5pOTE1LT5kcm0sCisJCQki
SW52YWxpZCBlbmdpbmUgJWQ6JWQiLCBndWNfY2xhc3MsIGluc3RhbmNlKTsKKwkJcmV0dXJuIC1F
UFJPVE87CisJfQorCisJaW50ZWxfZ3RfaGFuZGxlX2Vycm9yKGd1Y190b19ndChndWMpLCBlbmdp
bmUtPm1hc2ssCisJCQkgICAgICBJOTE1X0VSUk9SX0NBUFRVUkUsCisJCQkgICAgICAiR3VDIGZh
aWxlZCB0byByZXNldCAlcyAocmVhc29uPTB4JTA4eClcbiIsCisJCQkgICAgICBlbmdpbmUtPm5h
bWUsIHJlYXNvbik7CisKKwlyZXR1cm4gMDsKK30KKwordm9pZCBpbnRlbF9ndWNfZmluZF9odW5n
X2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXN0cnVjdCBpbnRl
bF9ndWMgKmd1YyA9ICZlbmdpbmUtPmd0LT51Yy5ndWM7CisJc3RydWN0IGludGVsX2NvbnRleHQg
KmNlOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisK
KwkvKiBSZXNldCBjYWxsZWQgZHVyaW5nIGRyaXZlciBsb2FkPyBHdUMgbm90IHlldCBpbml0aWFs
aXNlZCEgKi8KKwlpZiAodW5saWtlbHkoIWd1Y19zdWJtaXNzaW9uX2luaXRpYWxpemVkKGd1Yykp
KQorCQlyZXR1cm47CisKKwl4YV9mb3JfZWFjaCgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgaW5kZXgs
IGNlKSB7CisJCWlmICghaW50ZWxfY29udGV4dF9pc19waW5uZWQoY2UpKQorCQkJY29udGludWU7
CisKKwkJaWYgKGludGVsX2VuZ2luZV9pc192aXJ0dWFsKGNlLT5lbmdpbmUpKSB7CisJCQlpZiAo
IShjZS0+ZW5naW5lLT5tYXNrICYgZW5naW5lLT5tYXNrKSkKKwkJCQljb250aW51ZTsKKwkJfSBl
bHNlIHsKKwkJCWlmIChjZS0+ZW5naW5lICE9IGVuZ2luZSkKKwkJCQljb250aW51ZTsKKwkJfQor
CisJCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZjZS0+Z3VjX2FjdGl2ZS5yZXF1ZXN0cywgc2No
ZWQubGluaykgeworCQkJaWYgKGk5MTVfdGVzdF9yZXF1ZXN0X3N0YXRlKHJxKSAhPSBJOTE1X1JF
UVVFU1RfQUNUSVZFKQorCQkJCWNvbnRpbnVlOworCisJCQlpbnRlbF9lbmdpbmVfc2V0X2h1bmdf
Y29udGV4dChlbmdpbmUsIGNlKTsKKworCQkJLyogQ2FuIG9ubHkgY29wZSB3aXRoIG9uZSBoYW5n
IGF0IGEgdGltZS4uLiAqLworCQkJcmV0dXJuOworCQl9CisJfQorfQorCit2b2lkIGludGVsX2d1
Y19kdW1wX2FjdGl2ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJ
CQkJICAgIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmh1bmdfcnEsCisJCQkJICAgIHN0cnVjdCBkcm1f
cHJpbnRlciAqbSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5ndC0+dWMu
Z3VjOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1bnNpZ25lZCBsb25nIGluZGV4Owor
CXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwkvKiBSZXNldCBjYWxsZWQgZHVyaW5nIGRyaXZlciBs
b2FkPyBHdUMgbm90IHlldCBpbml0aWFsaXNlZCEgKi8KKwlpZiAodW5saWtlbHkoIWd1Y19zdWJt
aXNzaW9uX2luaXRpYWxpemVkKGd1YykpKQorCQlyZXR1cm47CisKKwl4YV9mb3JfZWFjaCgmZ3Vj
LT5jb250ZXh0X2xvb2t1cCwgaW5kZXgsIGNlKSB7CisJCWlmICghaW50ZWxfY29udGV4dF9pc19w
aW5uZWQoY2UpKQorCQkJY29udGludWU7CisKKwkJaWYgKGludGVsX2VuZ2luZV9pc192aXJ0dWFs
KGNlLT5lbmdpbmUpKSB7CisJCQlpZiAoIShjZS0+ZW5naW5lLT5tYXNrICYgZW5naW5lLT5tYXNr
KSkKKwkJCQljb250aW51ZTsKKwkJfSBlbHNlIHsKKwkJCWlmIChjZS0+ZW5naW5lICE9IGVuZ2lu
ZSkKKwkJCQljb250aW51ZTsKKwkJfQorCisJCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX2Fj
dGl2ZS5sb2NrLCBmbGFncyk7CisJCWludGVsX2VuZ2luZV9kdW1wX2FjdGl2ZV9yZXF1ZXN0cygm
Y2UtPmd1Y19hY3RpdmUucmVxdWVzdHMsCisJCQkJCQkgIGh1bmdfcnEsIG0pOworCQlzcGluX3Vu
bG9ja19pcnFyZXN0b3JlKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrLCBmbGFncyk7CisJfQorfQorCit2
b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX3ByaW50X2luZm8oc3RydWN0IGludGVsX2d1YyAqZ3Vj
LAorCQkJCSAgICAgc3RydWN0IGRybV9wcmludGVyICpwKQoreworCXN0cnVjdCBpOTE1X3NjaGVk
X2VuZ2luZSAqc2NoZWRfZW5naW5lID0gZ3VjLT5zY2hlZF9lbmdpbmU7CisJc3RydWN0IHJiX25v
ZGUgKnJiOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlpZiAoIXNjaGVkX2VuZ2luZSkKKwkJ
cmV0dXJuOworCisJZHJtX3ByaW50ZihwLCAiR3VDIE51bWJlciBPdXRzdGFuZGluZyBTdWJtaXNz
aW9uIEcySDogJXVcbiIsCisJCSAgIGF0b21pY19yZWFkKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1p
c3Npb25fZzJoKSk7CisJZHJtX3ByaW50ZihwLCAiR3VDIHRhc2tsZXQgY291bnQ6ICV1XG5cbiIs
CisJCSAgIGF0b21pY19yZWFkKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQuY291bnQpKTsKKworCXNw
aW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwlkcm1fcHJpbnRm
KHAsICJSZXF1ZXN0cyBpbiBHdUMgc3VibWl0IHRhc2tsZXQ6XG4iKTsKKwlmb3IgKHJiID0gcmJf
Zmlyc3RfY2FjaGVkKCZzY2hlZF9lbmdpbmUtPnF1ZXVlKTsgcmI7IHJiID0gcmJfbmV4dChyYikp
IHsKKwkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnBsID0gdG9fcHJpb2xpc3QocmIpOworCQlzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCQlwcmlvbGlzdF9mb3JfZWFjaF9yZXF1ZXN0KHJxLCBw
bCkKKwkJCWRybV9wcmludGYocCwgImd1Y19pZD0ldSwgc2Vxbm89JWxsdVxuIiwKKwkJCQkgICBy
cS0+Y29udGV4dC0+Z3VjX2lkLAorCQkJCSAgIHJxLT5mZW5jZS5zZXFubyk7CisJfQorCXNwaW5f
dW5sb2NrX2lycXJlc3RvcmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCWRybV9wcmlu
dGYocCwgIlxuIik7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBndWNfbG9nX2NvbnRleHRfcHJp
b3JpdHkoc3RydWN0IGRybV9wcmludGVyICpwLAorCQkJCQkgICAgc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlKQoreworCWludCBpOworCisJZHJtX3ByaW50ZihwLCAiXHRcdFByaW9yaXR5OiAlZFxu
IiwKKwkJICAgY2UtPmd1Y19wcmlvKTsKKwlkcm1fcHJpbnRmKHAsICJcdFx0TnVtYmVyIFJlcXVl
c3RzIChsb3dlciBpbmRleCA9PSBoaWdoZXIgcHJpb3JpdHkpXG4iKTsKKwlmb3IgKGkgPSBHVUNf
Q0xJRU5UX1BSSU9SSVRZX0tNRF9ISUdIOworCSAgICAgaSA8IEdVQ19DTElFTlRfUFJJT1JJVFlf
TlVNOyArK2kpIHsKKwkJZHJtX3ByaW50ZihwLCAiXHRcdE51bWJlciByZXF1ZXN0cyBpbiBwcmlv
cml0eSBiYW5kWyVkXTogJWRcbiIsCisJCQkgICBpLCBjZS0+Z3VjX3ByaW9fY291bnRbaV0pOwor
CX0KKwlkcm1fcHJpbnRmKHAsICJcbiIpOworfQorCit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9u
X3ByaW50X2NvbnRleHRfaW5mbyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJCSAgICAgc3Ry
dWN0IGRybV9wcmludGVyICpwKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1bnNp
Z25lZCBsb25nIGluZGV4OworCisJeGFfZm9yX2VhY2goJmd1Yy0+Y29udGV4dF9sb29rdXAsIGlu
ZGV4LCBjZSkgeworCQlkcm1fcHJpbnRmKHAsICJHdUMgbHJjIGRlc2NyaXB0b3IgJXU6XG4iLCBj
ZS0+Z3VjX2lkKTsKKwkJZHJtX3ByaW50ZihwLCAiXHRIVyBDb250ZXh0IERlc2M6IDB4JTA4eFxu
IiwgY2UtPmxyYy5scmNhKTsKKwkJZHJtX3ByaW50ZihwLCAiXHRcdExSQyBIZWFkOiBJbnRlcm5h
bCAldSwgTWVtb3J5ICV1XG4iLAorCQkJICAgY2UtPnJpbmctPmhlYWQsCisJCQkgICBjZS0+bHJj
X3JlZ19zdGF0ZVtDVFhfUklOR19IRUFEXSk7CisJCWRybV9wcmludGYocCwgIlx0XHRMUkMgVGFp
bDogSW50ZXJuYWwgJXUsIE1lbW9yeSAldVxuIiwKKwkJCSAgIGNlLT5yaW5nLT50YWlsLAorCQkJ
ICAgY2UtPmxyY19yZWdfc3RhdGVbQ1RYX1JJTkdfVEFJTF0pOworCQlkcm1fcHJpbnRmKHAsICJc
dFx0Q29udGV4dCBQaW4gQ291bnQ6ICV1XG4iLAorCQkJICAgYXRvbWljX3JlYWQoJmNlLT5waW5f
Y291bnQpKTsKKwkJZHJtX3ByaW50ZihwLCAiXHRcdEd1QyBJRCBSZWYgQ291bnQ6ICV1XG4iLAor
CQkJICAgYXRvbWljX3JlYWQoJmNlLT5ndWNfaWRfcmVmKSk7CisJCWRybV9wcmludGYocCwgIlx0
XHRTY2hlZHVsZSBTdGF0ZTogMHgleCwgMHgleFxuXG4iLAorCQkJICAgY2UtPmd1Y19zdGF0ZS5z
Y2hlZF9zdGF0ZSwKKwkJCSAgIGF0b21pY19yZWFkKCZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xv
Y2spKTsKKworCQlndWNfbG9nX2NvbnRleHRfcHJpb3JpdHkocCwgY2UpOworCX0KK30KKworc3Rh
dGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2d1Y19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2lnbmVkIGludCBjb3VudCkKK3sKKwlzdHJ1Y3Qg
Z3VjX3ZpcnR1YWxfZW5naW5lICp2ZTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWM7CisJdW5zaWdu
ZWQgaW50IG47CisJaW50IGVycjsKKworCXZlID0ga3phbGxvYyhzaXplb2YoKnZlKSwgR0ZQX0tF
Uk5FTCk7CisJaWYgKCF2ZSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisKKwlndWMgPSAm
c2libGluZ3NbMF0tPmd0LT51Yy5ndWM7CisKKwl2ZS0+YmFzZS5pOTE1ID0gc2libGluZ3NbMF0t
Pmk5MTU7CisJdmUtPmJhc2UuZ3QgPSBzaWJsaW5nc1swXS0+Z3Q7CisJdmUtPmJhc2UudW5jb3Jl
ID0gc2libGluZ3NbMF0tPnVuY29yZTsKKwl2ZS0+YmFzZS5pZCA9IC0xOworCisJdmUtPmJhc2Uu
dWFiaV9jbGFzcyA9IEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSUQ7CisJdmUtPmJhc2UuaW5zdGFu
Y2UgPSBJOTE1X0VOR0lORV9DTEFTU19JTlZBTElEX1ZJUlRVQUw7CisJdmUtPmJhc2UudWFiaV9p
bnN0YW5jZSA9IEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSURfVklSVFVBTDsKKwl2ZS0+YmFzZS5z
YXR1cmF0ZWQgPSBBTExfRU5HSU5FUzsKKworCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVv
Zih2ZS0+YmFzZS5uYW1lKSwgInZpcnR1YWwiKTsKKworCXZlLT5iYXNlLnNjaGVkX2VuZ2luZSA9
IGk5MTVfc2NoZWRfZW5naW5lX2dldChndWMtPnNjaGVkX2VuZ2luZSk7CisKKwl2ZS0+YmFzZS5j
b3BzID0gJnZpcnR1YWxfZ3VjX2NvbnRleHRfb3BzOworCXZlLT5iYXNlLnJlcXVlc3RfYWxsb2Mg
PSBndWNfcmVxdWVzdF9hbGxvYzsKKwl2ZS0+YmFzZS5idW1wX3NlcmlhbCA9IHZpcnR1YWxfZ3Vj
X2J1bXBfc2VyaWFsOworCisJdmUtPmJhc2Uuc3VibWl0X3JlcXVlc3QgPSBndWNfc3VibWl0X3Jl
cXVlc3Q7CisKKwl2ZS0+YmFzZS5mbGFncyA9IEk5MTVfRU5HSU5FX0lTX1ZJUlRVQUw7CisKKwlp
bnRlbF9jb250ZXh0X2luaXQoJnZlLT5jb250ZXh0LCAmdmUtPmJhc2UpOworCisJZm9yIChuID0g
MDsgbiA8IGNvdW50OyBuKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9
IHNpYmxpbmdzW25dOworCisJCUdFTV9CVUdfT04oIWlzX3Bvd2VyX29mXzIoc2libGluZy0+bWFz
aykpOworCQlpZiAoc2libGluZy0+bWFzayAmIHZlLT5iYXNlLm1hc2spIHsKKwkJCURSTV9ERUJV
RygiZHVwbGljYXRlICVzIGVudHJ5IGluIGxvYWQgYmFsYW5jZXJcbiIsCisJCQkJICBzaWJsaW5n
LT5uYW1lKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlnb3RvIGVycl9wdXQ7CisJCX0KKworCQl2
ZS0+YmFzZS5tYXNrIHw9IHNpYmxpbmctPm1hc2s7CisKKwkJaWYgKG4gIT0gMCAmJiB2ZS0+YmFz
ZS5jbGFzcyAhPSBzaWJsaW5nLT5jbGFzcykgeworCQkJRFJNX0RFQlVHKCJpbnZhbGlkIG1peGlu
ZyBvZiBlbmdpbmUgY2xhc3MsIHNpYmxpbmcgJWQsIGFscmVhZHkgJWRcbiIsCisJCQkJICBzaWJs
aW5nLT5jbGFzcywgdmUtPmJhc2UuY2xhc3MpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8g
ZXJyX3B1dDsKKwkJfSBlbHNlIGlmIChuID09IDApIHsKKwkJCXZlLT5iYXNlLmNsYXNzID0gc2li
bGluZy0+Y2xhc3M7CisJCQl2ZS0+YmFzZS51YWJpX2NsYXNzID0gc2libGluZy0+dWFiaV9jbGFz
czsKKwkJCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVvZih2ZS0+YmFzZS5uYW1lKSwKKwkJ
CQkgInYlZHglZCIsIHZlLT5iYXNlLmNsYXNzLCBjb3VudCk7CisJCQl2ZS0+YmFzZS5jb250ZXh0
X3NpemUgPSBzaWJsaW5nLT5jb250ZXh0X3NpemU7CisKKwkJCXZlLT5iYXNlLmFkZF9hY3RpdmVf
cmVxdWVzdCA9CisJCQkJc2libGluZy0+YWRkX2FjdGl2ZV9yZXF1ZXN0OworCQkJdmUtPmJhc2Uu
cmVtb3ZlX2FjdGl2ZV9yZXF1ZXN0ID0KKwkJCQlzaWJsaW5nLT5yZW1vdmVfYWN0aXZlX3JlcXVl
c3Q7CisJCQl2ZS0+YmFzZS5lbWl0X2JiX3N0YXJ0ID0gc2libGluZy0+ZW1pdF9iYl9zdGFydDsK
KwkJCXZlLT5iYXNlLmVtaXRfZmx1c2ggPSBzaWJsaW5nLT5lbWl0X2ZsdXNoOworCQkJdmUtPmJh
c2UuZW1pdF9pbml0X2JyZWFkY3J1bWIgPQorCQkJCXNpYmxpbmctPmVtaXRfaW5pdF9icmVhZGNy
dW1iOworCQkJdmUtPmJhc2UuZW1pdF9maW5pX2JyZWFkY3J1bWIgPQorCQkJCXNpYmxpbmctPmVt
aXRfZmluaV9icmVhZGNydW1iOworCQkJdmUtPmJhc2UuZW1pdF9maW5pX2JyZWFkY3J1bWJfZHcg
PQorCQkJCXNpYmxpbmctPmVtaXRfZmluaV9icmVhZGNydW1iX2R3OworCQkJdmUtPmJhc2UuYnJl
YWRjcnVtYnMgPQorCQkJCWludGVsX2JyZWFkY3J1bWJzX2dldChzaWJsaW5nLT5icmVhZGNydW1i
cyk7CisKKwkJCXZlLT5iYXNlLmZsYWdzIHw9IHNpYmxpbmctPmZsYWdzOworCisJCQl2ZS0+YmFz
ZS5wcm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMgPQorCQkJCXNpYmxpbmctPnByb3BzLnRpbWVz
bGljZV9kdXJhdGlvbl9tczsKKwkJCXZlLT5iYXNlLnByb3BzLnByZWVtcHRfdGltZW91dF9tcyA9
CisJCQkJc2libGluZy0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zOworCQl9CisJfQorCisJcmV0
dXJuICZ2ZS0+Y29udGV4dDsKKworZXJyX3B1dDoKKwlpbnRlbF9jb250ZXh0X3B1dCgmdmUtPmNv
bnRleHQpOworCXJldHVybiBFUlJfUFRSKGVycik7Cit9CisKKworCitib29sIGludGVsX2d1Y192
aXJ0dWFsX2VuZ2luZV9oYXNfaGVhcnRiZWF0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KnZlKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwlpbnRlbF9lbmdpbmVf
bWFza190IHRtcCwgbWFzayA9IHZlLT5tYXNrOworCisJZm9yX2VhY2hfZW5naW5lX21hc2tlZChl
bmdpbmUsIHZlLT5ndCwgbWFzaywgdG1wKQorCQlpZiAoUkVBRF9PTkNFKGVuZ2luZS0+cHJvcHMu
aGVhcnRiZWF0X2ludGVydmFsX21zKSkKKwkJCXJldHVybiB0cnVlOworCisJcmV0dXJuIGZhbHNl
OworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1
Ym1pc3Npb24uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNz
aW9uLmgKaW5kZXggM2Y3MDA1MDE4OTM5Li5jN2VmNDRmYTBjMzYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaApAQCAtMTAsNiArMTAs
NyBAQAogCiAjaW5jbHVkZSAiaW50ZWxfZ3VjLmgiCiAKK3N0cnVjdCBkcm1fcHJpbnRlcjsKIHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3M7CiAKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25faW5pdF9l
YXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwpAQCAtMjAsMTEgKzIxLDI0IEBAIHZvaWQgaW50
ZWxfZ3VjX3N1Ym1pc3Npb25fZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogaW50IGludGVs
X2d1Y19wcmVlbXB0X3dvcmtfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiB2b2lkIGlu
dGVsX2d1Y19wcmVlbXB0X3dvcmtfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogaW50
IGludGVsX2d1Y19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSk7Cit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX3ByaW50X2luZm8oc3RydWN0IGludGVsX2d1
YyAqZ3VjLAorCQkJCSAgICAgc3RydWN0IGRybV9wcmludGVyICpwKTsKK3ZvaWQgaW50ZWxfZ3Vj
X3N1Ym1pc3Npb25fcHJpbnRfY29udGV4dF9pbmZvKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJ
CQkJICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOwordm9pZCBpbnRlbF9ndWNfZHVtcF9hY3Rp
dmVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSAgICBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpodW5nX3JxLAorCQkJCSAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0p
OworCitib29sIGludGVsX2d1Y192aXJ0dWFsX2VuZ2luZV9oYXNfaGVhcnRiZWF0KGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnZlKTsKKworaW50IGludGVsX2d1Y193YWl0X2Zvcl9wZW5k
aW5nX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAgYXRvbWljX3QgKndhaXRfdmFy
LAorCQkJCSAgIGJvb2wgaW50ZXJydXB0aWJsZSwKKwkJCQkgICBsb25nIHRpbWVvdXQpOwogCiBz
dGF0aWMgaW5saW5lIGJvb2wgaW50ZWxfZ3VjX3N1Ym1pc3Npb25faXNfc3VwcG9ydGVkKHN0cnVj
dCBpbnRlbF9ndWMgKmd1YykKIHsKLQkvKiBYWFg6IEd1QyBzdWJtaXNzaW9uIGlzIHVuYXZhaWxh
YmxlIGZvciBub3cgKi8KLQlyZXR1cm4gZmFsc2U7CisJcmV0dXJuIGd1Yy0+c3VibWlzc2lvbl9z
dXBwb3J0ZWQ7CiB9CiAKIHN0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF9ndWNfc3VibWlzc2lvbl9p
c193YW50ZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2lu
dGVsX3VjLmMKaW5kZXggNmQ4YjkyMzMyMTRlLi5kYTU3ZDE4ZDlmNmIgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfdWMuYwpAQCAtMzQsOCArMzQsMTQgQEAgc3RhdGljIHZvaWQgdWNf
ZXhwYW5kX2RlZmF1bHRfb3B0aW9ucyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogCQlyZXR1cm47CiAJ
fQogCi0JLyogRGVmYXVsdDogZW5hYmxlIEh1QyBhdXRoZW50aWNhdGlvbiBvbmx5ICovCi0JaTkx
NS0+cGFyYW1zLmVuYWJsZV9ndWMgPSBFTkFCTEVfR1VDX0xPQURfSFVDOworCS8qIEludGVybWVk
aWF0ZSBwbGF0Zm9ybXMgYXJlIEh1QyBhdXRoZW50aWNhdGlvbiBvbmx5ICovCisJaWYgKElTX0RH
MShpOTE1KSB8fCBJU19BTERFUkxBS0VfUyhpOTE1KSkgeworCQlpOTE1LT5wYXJhbXMuZW5hYmxl
X2d1YyA9IEVOQUJMRV9HVUNfTE9BRF9IVUM7CisJCXJldHVybjsKKwl9CisKKwkvKiBEZWZhdWx0
OiBlbmFibGUgSHVDIGF1dGhlbnRpY2F0aW9uIGFuZCBHdUMgc3VibWlzc2lvbiAqLworCWk5MTUt
PnBhcmFtcy5lbmFibGVfZ3VjID0gRU5BQkxFX0dVQ19MT0FEX0hVQyB8IEVOQUJMRV9HVUNfU1VC
TUlTU0lPTjsKIH0KIAogLyogUmVzZXQgR3VDIHByb3ZpZGluZyB1cyB3aXRoIGZyZXNoIHN0YXRl
IGZvciBib3RoIEd1QyBhbmQgSHVDLgpAQCAtMTIwLDYgKzEyNiwxMSBAQCB2b2lkIGludGVsX3Vj
X2luaXRfZWFybHkoc3RydWN0IGludGVsX3VjICp1YykKIAkJdWMtPm9wcyA9ICZ1Y19vcHNfb2Zm
OwogfQogCit2b2lkIGludGVsX3VjX2luaXRfbGF0ZShzdHJ1Y3QgaW50ZWxfdWMgKnVjKQorewor
CWludGVsX2d1Y19pbml0X2xhdGUoJnVjLT5ndWMpOworfQorCiB2b2lkIGludGVsX3VjX2RyaXZl
cl9sYXRlX3JlbGVhc2Uoc3RydWN0IGludGVsX3VjICp1YykKIHsKIH0KQEAgLTIwNywyMSArMjE4
LDYgQEAgc3RhdGljIHZvaWQgZ3VjX2hhbmRsZV9tbWlvX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCiAJc3Bpbl91bmxvY2tfaXJxKCZndWMtPmlycV9sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQg
Z3VjX3Jlc2V0X2ludGVycnVwdHMoc3RydWN0IGludGVsX2d1YyAqZ3VjKQotewotCWd1Yy0+aW50
ZXJydXB0cy5yZXNldChndWMpOwotfQotCi1zdGF0aWMgdm9pZCBndWNfZW5hYmxlX2ludGVycnVw
dHMoc3RydWN0IGludGVsX2d1YyAqZ3VjKQotewotCWd1Yy0+aW50ZXJydXB0cy5lbmFibGUoZ3Vj
KTsKLX0KLQotc3RhdGljIHZvaWQgZ3VjX2Rpc2FibGVfaW50ZXJydXB0cyhzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMpCi17Ci0JZ3VjLT5pbnRlcnJ1cHRzLmRpc2FibGUoZ3VjKTsKLX0KLQogc3RhdGlj
IGludCBndWNfZW5hYmxlX2NvbW11bmljYXRpb24oc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewog
CXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3VjKTsKQEAgLTI0Miw3ICsyMzgsNyBA
QCBzdGF0aWMgaW50IGd1Y19lbmFibGVfY29tbXVuaWNhdGlvbihzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCiAJZ3VjX2dldF9tbWlvX21zZyhndWMpOwogCWd1Y19oYW5kbGVfbW1pb19tc2coZ3VjKTsK
IAotCWd1Y19lbmFibGVfaW50ZXJydXB0cyhndWMpOworCWludGVsX2d1Y19lbmFibGVfaW50ZXJy
dXB0cyhndWMpOwogCiAJLyogY2hlY2sgZm9yIENUIG1lc3NhZ2VzIHJlY2VpdmVkIGJlZm9yZSB3
ZSBlbmFibGVkIGludGVycnVwdHMgKi8KIAlzcGluX2xvY2tfaXJxKCZndC0+aXJxX2xvY2spOwpA
QCAtMjY1LDcgKzI2MSw3IEBAIHN0YXRpYyB2b2lkIGd1Y19kaXNhYmxlX2NvbW11bmljYXRpb24o
c3RydWN0IGludGVsX2d1YyAqZ3VjKQogCSAqLwogCWd1Y19jbGVhcl9tbWlvX21zZyhndWMpOwog
Ci0JZ3VjX2Rpc2FibGVfaW50ZXJydXB0cyhndWMpOworCWludGVsX2d1Y19kaXNhYmxlX2ludGVy
cnVwdHMoZ3VjKTsKIAogCWludGVsX2d1Y19jdF9kaXNhYmxlKCZndWMtPmN0KTsKIApAQCAtMzIz
LDkgKzMxOSw2IEBAIHN0YXRpYyBpbnQgX191Y19pbml0KHN0cnVjdCBpbnRlbF91YyAqdWMpCiAJ
aWYgKGk5MTVfaW5qZWN0X3Byb2JlX2ZhaWx1cmUodWNfdG9fZ3QodWMpLT5pOTE1KSkKIAkJcmV0
dXJuIC1FTk9NRU07CiAKLQkvKiBYWFg6IEd1QyBzdWJtaXNzaW9uIGlzIHVuYXZhaWxhYmxlIGZv
ciBub3cgKi8KLQlHRU1fQlVHX09OKGludGVsX3VjX3VzZXNfZ3VjX3N1Ym1pc3Npb24odWMpKTsK
LQogCXJldCA9IGludGVsX2d1Y19pbml0KGd1Yyk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsK
QEAgLTQ2Myw3ICs0NTYsNyBAQCBzdGF0aWMgaW50IF9fdWNfaW5pdF9odyhzdHJ1Y3QgaW50ZWxf
dWMgKnVjKQogCWlmIChyZXQpCiAJCWdvdG8gZXJyX291dDsKIAotCWd1Y19yZXNldF9pbnRlcnJ1
cHRzKGd1Yyk7CisJaW50ZWxfZ3VjX3Jlc2V0X2ludGVycnVwdHMoZ3VjKTsKIAogCS8qIFdhRW5h
YmxldUtlcm5lbEhlYWRlclZhbGlkRml4OnNrbCAqLwogCS8qIFdhRW5hYmxlR3VDQm9vdEhhc2hD
aGVja05vdFNldDpza2wsYnh0LGtibCAqLwpAQCAtNTY1LDIzICs1NTgsNjcgQEAgdm9pZCBpbnRl
bF91Y19yZXNldF9wcmVwYXJlKHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7CiAJc3RydWN0IGludGVs
X2d1YyAqZ3VjID0gJnVjLT5ndWM7CiAKLQlpZiAoIWludGVsX2d1Y19pc19yZWFkeShndWMpKQor
CXVjLT5yZXNldF9pbl9wcm9ncmVzcyA9IHRydWU7CisKKwkvKiBOb3RoaW5nIHRvIGRvIGlmIEd1
QyBpc24ndCBzdXBwb3J0ZWQgKi8KKwlpZiAoIWludGVsX3VjX3N1cHBvcnRzX2d1Yyh1YykpCiAJ
CXJldHVybjsKIAorCS8qIEZpcm13YXJlIGV4cGVjdGVkIHRvIGJlIHJ1bm5pbmcgd2hlbiB0aGlz
IGZ1bmN0aW9uIGlzIGNhbGxlZCAqLworCWlmICghaW50ZWxfZ3VjX2lzX3JlYWR5KGd1YykpCisJ
CWdvdG8gc2FuaXRpemU7CisKKwlpZiAoaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbih1Yykp
CisJCWludGVsX2d1Y19zdWJtaXNzaW9uX3Jlc2V0X3ByZXBhcmUoZ3VjKTsKKworc2FuaXRpemU6
CiAJX191Y19zYW5pdGl6ZSh1Yyk7CiB9CiAKK3ZvaWQgaW50ZWxfdWNfcmVzZXQoc3RydWN0IGlu
dGVsX3VjICp1YywgYm9vbCBzdGFsbGVkKQoreworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZ1
Yy0+Z3VjOworCisJLyogRmlybXdhcmUgY2FuIG5vdCBiZSBydW5uaW5nIHdoZW4gdGhpcyBmdW5j
dGlvbiBpcyBjYWxsZWQgICovCisJaWYgKGludGVsX3VjX3VzZXNfZ3VjX3N1Ym1pc3Npb24odWMp
KQorCQlpbnRlbF9ndWNfc3VibWlzc2lvbl9yZXNldChndWMsIHN0YWxsZWQpOworfQorCit2b2lk
IGludGVsX3VjX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfdWMgKnVjKQoreworCXN0cnVjdCBp
bnRlbF9ndWMgKmd1YyA9ICZ1Yy0+Z3VjOworCisJdWMtPnJlc2V0X2luX3Byb2dyZXNzID0gZmFs
c2U7CisKKwkvKiBGaXJtd2FyZSBleHBlY3RlZCB0byBiZSBydW5uaW5nIHdoZW4gdGhpcyBmdW5j
dGlvbiBpcyBjYWxsZWQgKi8KKwlpZiAoaW50ZWxfZ3VjX2lzX2Z3X3J1bm5pbmcoZ3VjKSAmJiBp
bnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKHVjKSkKKwkJaW50ZWxfZ3VjX3N1Ym1pc3Npb25f
cmVzZXRfZmluaXNoKGd1Yyk7Cit9CisKK3ZvaWQgaW50ZWxfdWNfY2FuY2VsX3JlcXVlc3RzKHN0
cnVjdCBpbnRlbF91YyAqdWMpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJnVjLT5ndWM7
CisKKwkvKiBGaXJtd2FyZSBjYW4gbm90IGJlIHJ1bm5pbmcgd2hlbiB0aGlzIGZ1bmN0aW9uIGlz
IGNhbGxlZCAgKi8KKwlpZiAoaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbih1YykpCisJCWlu
dGVsX2d1Y19zdWJtaXNzaW9uX2NhbmNlbF9yZXF1ZXN0cyhndWMpOworfQorCiB2b2lkIGludGVs
X3VjX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewogCXN0cnVjdCBpbnRl
bF9ndWMgKmd1YyA9ICZ1Yy0+Z3VjOwotCWludCBlcnI7CiAKIAlpZiAoIWludGVsX2d1Y19pc19y
ZWFkeShndWMpKQogCQlyZXR1cm47CiAKLQllcnIgPSBpbnRlbF9ndWNfc3VzcGVuZChndWMpOwot
CWlmIChlcnIpCi0JCURSTV9ERUJVR19EUklWRVIoIkZhaWxlZCB0byBzdXNwZW5kIEd1QywgZXJy
PSVkIiwgZXJyKTsKKwkvKgorCSAqIFdhaXQgZm9yIGFueSBvdXRzdGFuZGluZyBDVEIgYmVmb3Jl
IHRlYXJpbmcgZG93biBjb21tdW5pY2F0aW9uIC93IHRoZQorCSAqIEd1Qy4KKwkgKi8KKyNkZWZp
bmUgT1VUU1RBTkRJTkdfQ1RCX1RJTUVPVVRfUEVSSU9ECShIWiAvIDUpCisJaW50ZWxfZ3VjX3dh
aXRfZm9yX3BlbmRpbmdfbXNnKGd1YywgJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgs
CisJCQkJICAgICAgIGZhbHNlLCBPVVRTVEFORElOR19DVEJfVElNRU9VVF9QRVJJT0QpOworCUdF
TV9XQVJOX09OKGF0b21pY19yZWFkKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKSk7
CiAKIAlndWNfZGlzYWJsZV9jb21tdW5pY2F0aW9uKGd1Yyk7CiB9CkBAIC01OTAsMTIgKzYyNywx
NiBAQCB2b2lkIGludGVsX3VjX3N1c3BlbmQoc3RydWN0IGludGVsX3VjICp1YykKIHsKIAlzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsK
KwlpbnQgZXJyOwogCiAJaWYgKCFpbnRlbF9ndWNfaXNfcmVhZHkoZ3VjKSkKIAkJcmV0dXJuOwog
Ci0Jd2l0aF9pbnRlbF9ydW50aW1lX3BtKHVjX3RvX2d0KHVjKS0+dW5jb3JlLT5ycG0sIHdha2Vy
ZWYpCi0JCWludGVsX3VjX3J1bnRpbWVfc3VzcGVuZCh1Yyk7CisJd2l0aF9pbnRlbF9ydW50aW1l
X3BtKCZ1Y190b19ndCh1YyktPmk5MTUtPnJ1bnRpbWVfcG0sIHdha2VyZWYpIHsKKwkJZXJyID0g
aW50ZWxfZ3VjX3N1c3BlbmQoZ3VjKTsKKwkJaWYgKGVycikKKwkJCURSTV9ERUJVR19EUklWRVIo
IkZhaWxlZCB0byBzdXNwZW5kIEd1QywgZXJyPSVkIiwgZXJyKTsKKwl9CiB9CiAKIHN0YXRpYyBp
bnQgX191Y19yZXN1bWUoc3RydWN0IGludGVsX3VjICp1YywgYm9vbCBlbmFibGVfY29tbXVuaWNh
dGlvbikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5oCmluZGV4IDljOTU0YzU4OWVk
Zi4uZTJkYTJiNmU3NmUxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9p
bnRlbF91Yy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmgKQEAg
LTMwLDEzICszMCwxOSBAQCBzdHJ1Y3QgaW50ZWxfdWMgewogCiAJLyogU25hcHNob3Qgb2YgR3VD
IGxvZyBmcm9tIGxhc3QgZmFpbGVkIGxvYWQgKi8KIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqbG9hZF9lcnJfbG9nOworCisJYm9vbCByZXNldF9pbl9wcm9ncmVzczsKIH07CiAKIHZvaWQg
aW50ZWxfdWNfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsKK3ZvaWQgaW50ZWxfdWNf
aW5pdF9sYXRlKHN0cnVjdCBpbnRlbF91YyAqdWMpOwogdm9pZCBpbnRlbF91Y19kcml2ZXJfbGF0
ZV9yZWxlYXNlKHN0cnVjdCBpbnRlbF91YyAqdWMpOwogdm9pZCBpbnRlbF91Y19kcml2ZXJfcmVt
b3ZlKHN0cnVjdCBpbnRlbF91YyAqdWMpOwogdm9pZCBpbnRlbF91Y19pbml0X21taW8oc3RydWN0
IGludGVsX3VjICp1Yyk7CiB2b2lkIGludGVsX3VjX3Jlc2V0X3ByZXBhcmUoc3RydWN0IGludGVs
X3VjICp1Yyk7Cit2b2lkIGludGVsX3VjX3Jlc2V0KHN0cnVjdCBpbnRlbF91YyAqdWMsIGJvb2wg
c3RhbGxlZCk7Cit2b2lkIGludGVsX3VjX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfdWMgKnVj
KTsKK3ZvaWQgaW50ZWxfdWNfY2FuY2VsX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF91YyAqdWMpOwog
dm9pZCBpbnRlbF91Y19zdXNwZW5kKHN0cnVjdCBpbnRlbF91YyAqdWMpOwogdm9pZCBpbnRlbF91
Y19ydW50aW1lX3N1c3BlbmQoc3RydWN0IGludGVsX3VjICp1Yyk7CiBpbnQgaW50ZWxfdWNfcmVz
dW1lKHN0cnVjdCBpbnRlbF91YyAqdWMpOwpAQCAtODEsNiArODcsMTEgQEAgdWNfc3RhdGVfY2hl
Y2tlcnMoZ3VjLCBndWNfc3VibWlzc2lvbik7CiAjdW5kZWYgdWNfc3RhdGVfY2hlY2tlcnMKICN1
bmRlZiBfX3VjX3N0YXRlX2NoZWNrZXIKIAorc3RhdGljIGlubGluZSBpbnQgaW50ZWxfdWNfd2Fp
dF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfdWMgKnVjLCBsb25nIHRpbWVvdXQpCit7CisJcmV0dXJu
IGludGVsX2d1Y193YWl0X2Zvcl9pZGxlKCZ1Yy0+Z3VjLCB0aW1lb3V0KTsKK30KKwogI2RlZmlu
ZSBpbnRlbF91Y19vcHNfZnVuY3Rpb24oX05BTUUsIF9PUFMsIF9UWVBFLCBfUkVUKSBcCiBzdGF0
aWMgaW5saW5lIF9UWVBFIGludGVsX3VjXyMjX05BTUUoc3RydWN0IGludGVsX3VjICp1YykgXAog
eyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnNfcGFyYW1z
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnNfcGFyYW1zLmMKaW5kZXggNGUy
YjA3NzY5MmNiLi5jZTBkOTc2ODY5MTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZGVidWdmc19wYXJhbXMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rl
YnVnZnNfcGFyYW1zLmMKQEAgLTYsOSArNiwyMSBAQAogI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5o
PgogCiAjaW5jbHVkZSAiaTkxNV9kZWJ1Z2ZzX3BhcmFtcy5oIgorI2luY2x1ZGUgImd0L2ludGVs
X2d0LmgiCisjaW5jbHVkZSAiZ3QvdWMvaW50ZWxfZ3VjLmgiCiAjaW5jbHVkZSAiaTkxNV9kcnYu
aCIKICNpbmNsdWRlICJpOTE1X3BhcmFtcy5oIgogCisjZGVmaW5lIE1BVENIX0RFQlVHRlNfTk9E
RV9OQU1FKF9maWxlLCBfbmFtZSkgXAorCShzdHJjbXAoKF9maWxlKS0+Zl9wYXRoLmRlbnRyeS0+
ZF9uYW1lLm5hbWUsIChfbmFtZSkpID09IDApCisKKyNkZWZpbmUgR0VUX0k5MTUoaTkxNSwgbmFt
ZSwgcHRyKQlcCisJZG8gewlcCisJCXN0cnVjdCBpOTE1X3BhcmFtcyAqcGFyYW1zOwlcCisJCXBh
cmFtcyA9IGNvbnRhaW5lcl9vZigoKHZvaWQgKikgKHB0cikpLCB0eXBlb2YoKnBhcmFtcyksIG5h
bWUpOwlcCisJCShpOTE1KSA9IGNvbnRhaW5lcl9vZihwYXJhbXMsIHR5cGVvZigqKGk5MTUpKSwg
cGFyYW1zKTsJXAorCX0gd2hpbGUgKDApCisKIC8qIGludCBwYXJhbSAqLwogc3RhdGljIGludCBp
OTE1X3BhcmFtX2ludF9zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIHsKQEAg
LTI0LDYgKzM2LDE2IEBAIHN0YXRpYyBpbnQgaTkxNV9wYXJhbV9pbnRfb3BlbihzdHJ1Y3QgaW5v
ZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlsZSkKIAlyZXR1cm4gc2luZ2xlX29wZW4oZmlsZSwg
aTkxNV9wYXJhbV9pbnRfc2hvdywgaW5vZGUtPmlfcHJpdmF0ZSk7CiB9CiAKK3N0YXRpYyBpbnQg
bm90aWZ5X2d1YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlpbnQgcmV0ID0g
MDsKKworCWlmIChpbnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZpOTE1LT5ndC51YykpCisJ
CXJldCA9IGludGVsX2d1Y19nbG9iYWxfcG9saWNpZXNfdXBkYXRlKCZpOTE1LT5ndC51Yy5ndWMp
OworCisJcmV0dXJuIHJldDsKK30KKwogc3RhdGljIHNzaXplX3QgaTkxNV9wYXJhbV9pbnRfd3Jp
dGUoc3RydWN0IGZpbGUgKmZpbGUsCiAJCQkJICAgIGNvbnN0IGNoYXIgX191c2VyICp1YnVmLCBz
aXplX3QgbGVuLAogCQkJCSAgICBsb2ZmX3QgKm9mZnApCkBAIC04MSw4ICsxMDMsMTAgQEAgc3Rh
dGljIHNzaXplX3QgaTkxNV9wYXJhbV91aW50X3dyaXRlKHN0cnVjdCBmaWxlICpmaWxlLAogCQkJ
CSAgICAgY29uc3QgY2hhciBfX3VzZXIgKnVidWYsIHNpemVfdCBsZW4sCiAJCQkJICAgICBsb2Zm
X3QgKm9mZnApCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTU7CiAJc3RydWN0IHNl
cV9maWxlICptID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwogCXVuc2lnbmVkIGludCAqdmFsdWUgPSBt
LT5wcml2YXRlOworCXVuc2lnbmVkIGludCBvbGQgPSAqdmFsdWU7CiAJaW50IHJldDsKIAogCXJl
dCA9IGtzdHJ0b3VpbnRfZnJvbV91c2VyKHVidWYsIGxlbiwgMCwgdmFsdWUpOwpAQCAtOTUsNiAr
MTE5LDE0IEBAIHN0YXRpYyBzc2l6ZV90IGk5MTVfcGFyYW1fdWludF93cml0ZShzdHJ1Y3QgZmls
ZSAqZmlsZSwKIAkJCSp2YWx1ZSA9IGI7CiAJfQogCisJaWYgKCFyZXQgJiYgTUFUQ0hfREVCVUdG
U19OT0RFX05BTUUoZmlsZSwgInJlc2V0IikpIHsKKwkJR0VUX0k5MTUoaTkxNSwgcmVzZXQsIHZh
bHVlKTsKKworCQlyZXQgPSBub3RpZnlfZ3VjKGk5MTUpOworCQlpZiAocmV0KQorCQkJKnZhbHVl
ID0gb2xkOworCX0KKwogCXJldHVybiByZXQgPzogbGVuOwogfQogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmljdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW1fZXZpY3QuYwppbmRleCA0ZDJkNTlhOTk0MmIuLjJiNzNkZGIxMWM2NiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXZpY3QuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmljdC5jCkBAIC0yNyw2ICsyNyw3IEBACiAgKi8KIAog
I2luY2x1ZGUgImdlbS9pOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3Qu
aCIKICNpbmNsdWRlICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgogCiAjaW5jbHVkZSAiaTkxNV9k
cnYuaCIKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCmluZGV4IGEyYzU4YjU0YTU5
Mi4uMGYwOGJjZmJlOTY0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dw
dV9lcnJvci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKQEAg
LTE0MjksMjAgKzE0MjksMzcgQEAgY2FwdHVyZV9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLAogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY2FwdHVyZV92bWEgKmNhcHR1cmUg
PSBOVUxMOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY29yZWR1bXAgKmVlOwotCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSA9IE5VTEw7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAogCWVlID0gaW50ZWxf
ZW5naW5lX2NvcmVkdW1wX2FsbG9jKGVuZ2luZSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFlZSkKIAkJ
cmV0dXJuIE5VTEw7CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUt
PmxvY2ssIGZsYWdzKTsKLQlycSA9IGludGVsX2VuZ2luZV9maW5kX2FjdGl2ZV9yZXF1ZXN0KGVu
Z2luZSk7CisJY2UgPSBpbnRlbF9lbmdpbmVfZ2V0X2h1bmdfY29udGV4dChlbmdpbmUpOworCWlm
IChjZSkgeworCQlpbnRlbF9lbmdpbmVfY2xlYXJfaHVuZ19jb250ZXh0KGVuZ2luZSk7CisJCXJx
ID0gaW50ZWxfY29udGV4dF9maW5kX2FjdGl2ZV9yZXF1ZXN0KGNlKTsKKwkJaWYgKCFycSB8fCAh
aTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpKQorCQkJZ290byBub19yZXF1ZXN0X2NhcHR1cmU7CisJ
fSBlbHNlIHsKKwkJLyoKKwkJICogR2V0dGluZyBoZXJlIHdpdGggR3VDIGVuYWJsZWQgbWVhbnMg
aXQgaXMgYSBmb3JjZWQgZXJyb3IgY2FwdHVyZQorCQkgKiB3aXRoIG5vIGFjdHVhbCBoYW5nLiBT
bywgbm8gbmVlZCB0byBhdHRlbXB0IHRoZSBleGVjbGlzdCBzZWFyY2guCisJCSAqLworCQlpZiAo
IWludGVsX3VjX3VzZXNfZ3VjX3N1Ym1pc3Npb24oJmVuZ2luZS0+Z3QtPnVjKSkgeworCQkJc3Bp
bl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJCQly
cSA9IGludGVsX2VuZ2luZV9leGVjbGlzdF9maW5kX2h1bmdfcmVxdWVzdChlbmdpbmUpOworCQkJ
c3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssCisJCQkJ
CSAgICAgICBmbGFncyk7CisJCX0KKwl9CiAJaWYgKHJxKQogCQljYXB0dXJlID0gaW50ZWxfZW5n
aW5lX2NvcmVkdW1wX2FkZF9yZXF1ZXN0KGVlLCBycSwKIAkJCQkJCQkgICAgQVRPTUlDX01BWUZB
SUwpOwotCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2Nr
LCBmbGFncyk7CiAJaWYgKCFjYXB0dXJlKSB7Citub19yZXF1ZXN0X2NhcHR1cmU6CiAJCWtmcmVl
KGVlKTsKIAkJcmV0dXJuIE5VTEw7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9yZWcuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKaW5kZXggOTRm
ZGU1Y2EyNmFlLi5hYTQzM2FlOGY1ZGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcmVnLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaApAQCAtNDE0
Miw2ICs0MTQyLDcgQEAgZW51bSB7CiAJRkFVTFRfQU5EX0NPTlRJTlVFIC8qIFVuc3VwcG9ydGVk
ICovCiB9OwogCisjZGVmaW5lIENUWF9HVFRfQUREUkVTU19NQVNLIEdFTk1BU0soMzEsIDEyKQog
I2RlZmluZSBHRU44X0NUWF9WQUxJRCAoMSA8PCAwKQogI2RlZmluZSBHRU44X0NUWF9GT1JDRV9Q
RF9SRVNUT1JFICgxIDw8IDEpCiAjZGVmaW5lIEdFTjhfQ1RYX0ZPUkNFX1JFU1RPUkUgKDEgPDwg
MikKQEAgLTEyMjg0LDYgKzEyMjg1LDcgQEAgZW51bSBza2xfcG93ZXJfZ2F0ZSB7CiAKIC8qIE1P
Q1MgKE1lbW9yeSBPYmplY3QgQ29udHJvbCBTdGF0ZSkgcmVnaXN0ZXJzICovCiAjZGVmaW5lIEdF
TjlfTE5DRkNNT0NTKGkpCV9NTUlPKDB4YjAyMCArIChpKSAqIDQpCS8qIEwzIENhY2hlIENvbnRy
b2wgKi8KKyNkZWZpbmUgR0VOOV9MTkNGQ01PQ1NfUkVHX0NPVU5UCTMyCiAKICNkZWZpbmUgX19H
RU45X1JDUzBfTU9DUzAJMHhjODAwCiAjZGVmaW5lIEdFTjlfR0ZYX01PQ1MoaSkJX01NSU8oX19H
RU45X1JDUzBfTU9DUzAgKyAoaSkgKiA0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwpp
bmRleCAwOWViZWE5YTAwOTAuLjY4MjY4MTU3OTk3OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZXF1ZXN0LmMKQEAgLTExNCw2ICsxMTQsOSBAQCBzdGF0aWMgdm9pZCBpOTE1X2ZlbmNlX3JlbGVh
c2Uoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiB7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEg
PSB0b19yZXF1ZXN0KGZlbmNlKTsKIAorCUdFTV9CVUdfT04ocnEtPmd1Y19wcmlvICE9IEdVQ19Q
UklPX0lOSVQgJiYKKwkJICAgcnEtPmd1Y19wcmlvICE9IEdVQ19QUklPX0ZJTkkpOworCiAJLyoK
IAkgKiBUaGUgcmVxdWVzdCBpcyBwdXQgb250byBhIFJDVSBmcmVlbGlzdCAoaS5lLiB0aGUgYWRk
cmVzcwogCSAqIGlzIGltbWVkaWF0ZWx5IHJldXNlZCksIG1hcmsgdGhlIGZlbmNlcyBhcyBiZWlu
ZyBmcmVlZCBub3cuCkBAIC0xMjUsMzkgKzEyOCwxNyBAQCBzdGF0aWMgdm9pZCBpOTE1X2ZlbmNl
X3JlbGVhc2Uoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiAJaTkxNV9zd19mZW5jZV9maW5pKCZy
cS0+c2VtYXBob3JlKTsKIAogCS8qCi0JICogS2VlcCBvbmUgcmVxdWVzdCBvbiBlYWNoIGVuZ2lu
ZSBmb3IgcmVzZXJ2ZWQgdXNlIHVuZGVyIG1lbXByZXNzdXJlCi0JICoKLQkgKiBXZSBkbyBub3Qg
aG9sZCBhIHJlZmVyZW5jZSB0byB0aGUgZW5naW5lIGhlcmUgYW5kIHNvIGhhdmUgdG8gYmUKLQkg
KiB2ZXJ5IGNhcmVmdWwgaW4gd2hhdCBycS0+ZW5naW5lIHdlIHBva2UuIFRoZSB2aXJ0dWFsIGVu
Z2luZSBpcwotCSAqIHJlZmVyZW5jZWQgdmlhIHRoZSBycS0+Y29udGV4dCBhbmQgd2UgcmVsZWFz
ZWQgdGhhdCByZWYgZHVyaW5nCi0JICogaTkxNV9yZXF1ZXN0X3JldGlyZSgpLCBlcmdvIHdlIG11
c3Qgbm90IGRlcmVmZXJlbmNlIGEgdmlydHVhbAotCSAqIGVuZ2luZSBoZXJlLiBOb3QgdGhhdCB3
ZSB3b3VsZCB3YW50IHRvLCBhcyB0aGUgb25seSBjb25zdW1lciBvZgotCSAqIHRoZSByZXNlcnZl
ZCBlbmdpbmUtPnJlcXVlc3RfcG9vbCBpcyB0aGUgcG93ZXIgbWFuYWdlbWVudCBwYXJraW5nLAot
CSAqIHdoaWNoIG11c3Qtbm90LWZhaWwsIGFuZCB0aGF0IGlzIG9ubHkgcnVuIG9uIHRoZSBwaHlz
aWNhbCBlbmdpbmVzLgotCSAqCi0JICogU2luY2UgdGhlIHJlcXVlc3QgbXVzdCBoYXZlIGJlZW4g
ZXhlY3V0ZWQgdG8gYmUgaGF2ZSBjb21wbGV0ZWQsCi0JICogd2Uga25vdyB0aGF0IGl0IHdpbGwg
aGF2ZSBiZWVuIHByb2Nlc3NlZCBieSB0aGUgSFcgYW5kIHdpbGwKLQkgKiBub3QgYmUgdW5zdWJt
aXR0ZWQgYWdhaW4sIHNvIHJxLT5lbmdpbmUgYW5kIHJxLT5leGVjdXRpb25fbWFzawotCSAqIGF0
IHRoaXMgcG9pbnQgaXMgc3RhYmxlLiBycS0+ZXhlY3V0aW9uX21hc2sgd2lsbCBiZSBhIHNpbmds
ZQotCSAqIGJpdCBpZiB0aGUgbGFzdCBhbmQgX29ubHlfIGVuZ2luZSBpdCBjb3VsZCBleGVjdXRp
b24gb24gd2FzIGEKLQkgKiBwaHlzaWNhbCBlbmdpbmUsIGlmIGl0J3MgbXVsdGlwbGUgYml0cyB0
aGVuIGl0IHN0YXJ0ZWQgb24gYW5kCi0JICogY291bGQgc3RpbGwgYmUgb24gYSB2aXJ0dWFsIGVu
Z2luZS4gVGh1cyBpZiB0aGUgbWFzayBpcyBub3QgYQotCSAqIHBvd2VyLW9mLXR3byB3ZSBhc3N1
bWUgdGhhdCBycS0+ZW5naW5lIG1heSBzdGlsbCBiZSBhIHZpcnR1YWwKLQkgKiBlbmdpbmUgYW5k
IHNvIGEgZGFuZ2xpbmcgaW52YWxpZCBwb2ludGVyIHRoYXQgd2UgY2Fubm90IGRlcmVmZXJlbmNl
Ci0JICoKLQkgKiBGb3IgZXhhbXBsZSwgY29uc2lkZXIgdGhlIGZsb3cgb2YgYSBib25kZWQgcmVx
dWVzdCB0aHJvdWdoIGEgdmlydHVhbAotCSAqIGVuZ2luZS4gVGhlIHJlcXVlc3QgaXMgY3JlYXRl
ZCB3aXRoIGEgd2lkZSBlbmdpbmUgbWFzayAoYWxsIGVuZ2luZXMKLQkgKiB0aGF0IHdlIG1pZ2h0
IGV4ZWN1dGUgb24pLiBPbiBwcm9jZXNzaW5nIHRoZSBib25kLCB0aGUgcmVxdWVzdCBtYXNrCi0J
ICogaXMgcmVkdWNlZCB0byBvbmUgb3IgbW9yZSBlbmdpbmVzLiBJZiB0aGUgcmVxdWVzdCBpcyBz
dWJzZXF1ZW50bHkKLQkgKiBib3VuZCB0byBhIHNpbmdsZSBlbmdpbmUsIGl0IHdpbGwgdGhlbiBi
ZSBjb25zdHJhaW5lZCB0byBvbmx5Ci0JICogZXhlY3V0ZSBvbiB0aGF0IGVuZ2luZSBhbmQgbmV2
ZXIgcmV0dXJuZWQgdG8gdGhlIHZpcnR1YWwgZW5naW5lCi0JICogYWZ0ZXIgdGltZXNsaWNpbmcg
YXdheSwgc2VlIF9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoKS4gVGh1cyB3ZQotCSAqIGtu
b3cgdGhhdCBpZiB0aGUgcnEtPmV4ZWN1dGlvbl9tYXNrIGlzIGEgc2luZ2xlIGJpdCwgcnEtPmVu
Z2luZQotCSAqIGNhbiBiZSBhIHBoeXNpY2FsIGVuZ2luZSB3aXRoIHRoZSBleGFjdCBjb3JyZXNw
b25kaW5nIG1hc2suCisJICogS2VlcCBvbmUgcmVxdWVzdCBvbiBlYWNoIGVuZ2luZSBmb3IgcmVz
ZXJ2ZWQgdXNlIHVuZGVyIG1lbXByZXNzdXJlLAorCSAqIGRvIG5vdCB1c2Ugd2l0aCB2aXJ0dWFs
IGVuZ2luZXMgYXMgdGhpcyByZWFsbHkgaXMgb25seSBuZWVkZWQgZm9yCisJICoga2VybmVsIGNv
bnRleHRzLgogCSAqLwotCWlmIChpc19wb3dlcl9vZl8yKHJxLT5leGVjdXRpb25fbWFzaykgJiYK
LQkgICAgIWNtcHhjaGcoJnJxLT5lbmdpbmUtPnJlcXVlc3RfcG9vbCwgTlVMTCwgcnEpKQorCWlm
ICghaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwocnEtPmVuZ2luZSkgJiYKKwkgICAgIWNtcHhjaGco
JnJxLT5lbmdpbmUtPnJlcXVlc3RfcG9vbCwgTlVMTCwgcnEpKSB7CisJCWludGVsX2NvbnRleHRf
cHV0KHJxLT5jb250ZXh0KTsKIAkJcmV0dXJuOworCX0KKworCWludGVsX2NvbnRleHRfcHV0KHJx
LT5jb250ZXh0KTsKIAogCWttZW1fY2FjaGVfZnJlZShnbG9iYWwuc2xhYl9yZXF1ZXN0cywgcnEp
OwogfQpAQCAtMjA0LDcgKzE4NSw3IEBAIHN0YXRpYyBib29sIGlycV93b3JrX2ltbShzdHJ1Y3Qg
aXJxX3dvcmsgKndyaykKIAlyZXR1cm4gZmFsc2U7CiB9CiAKLXN0YXRpYyB2b2lkIF9fbm90aWZ5
X2V4ZWN1dGVfY2JfaW1tKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQordm9pZCBpOTE1X3JlcXVl
c3Rfbm90aWZ5X2V4ZWN1dGVfY2JfaW1tKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCV9f
bm90aWZ5X2V4ZWN1dGVfY2IocnEsIGlycV93b3JrX2ltbSk7CiB9CkBAIC0yNzgsMzcgKzI1OSw2
IEBAIGk5MTVfcmVxdWVzdF9hY3RpdmVfZW5naW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAog
CXJldHVybiByZXQ7CiB9CiAKLQotc3RhdGljIHZvaWQgcmVtb3ZlX2Zyb21fZW5naW5lKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQotewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwg
KmxvY2tlZDsKLQotCS8qCi0JICogVmlydHVhbCBlbmdpbmVzIGNvbXBsaWNhdGUgYWNxdWlyaW5n
IHRoZSBlbmdpbmUgdGltZWxpbmUgbG9jaywKLQkgKiBhcyB0aGVpciBycS0+ZW5naW5lIHBvaW50
ZXIgaXMgbm90IHN0YWJsZSB1bnRpbCB1bmRlciB0aGF0Ci0JICogZW5naW5lIGxvY2suIFRoZSBz
aW1wbGUgcGxveSB3ZSB1c2UgaXMgdG8gdGFrZSB0aGUgbG9jayB0aGVuCi0JICogY2hlY2sgdGhh
dCB0aGUgcnEgc3RpbGwgYmVsb25ncyB0byB0aGUgbmV3bHkgbG9ja2VkIGVuZ2luZS4KLQkgKi8K
LQlsb2NrZWQgPSBSRUFEX09OQ0UocnEtPmVuZ2luZSk7Ci0Jc3Bpbl9sb2NrX2lycSgmbG9ja2Vk
LT5zY2hlZF9lbmdpbmUtPmxvY2spOwotCXdoaWxlICh1bmxpa2VseShsb2NrZWQgIT0gKGVuZ2lu
ZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpKSB7Ci0JCXNwaW5fdW5sb2NrKCZsb2NrZWQtPnNj
aGVkX2VuZ2luZS0+bG9jayk7Ci0JCXNwaW5fbG9jaygmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxv
Y2spOwotCQlsb2NrZWQgPSBlbmdpbmU7Ci0JfQotCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5s
aW5rKTsKLQotCWNsZWFyX2JpdChJOTE1X0ZFTkNFX0ZMQUdfUFFVRVVFLCAmcnEtPmZlbmNlLmZs
YWdzKTsKLQljbGVhcl9iaXQoSTkxNV9GRU5DRV9GTEFHX0hPTEQsICZycS0+ZmVuY2UuZmxhZ3Mp
OwotCi0JLyogUHJldmVudCBmdXJ0aGVyIF9fYXdhaXRfZXhlY3V0aW9uKCkgcmVnaXN0ZXJpbmcg
YSBjYiwgdGhlbiBmbHVzaCAqLwotCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFHX0FDVElWRSwgJnJx
LT5mZW5jZS5mbGFncyk7Ci0KLQlzcGluX3VubG9ja19pcnEoJmxvY2tlZC0+c2NoZWRfZW5naW5l
LT5sb2NrKTsKLQotCV9fbm90aWZ5X2V4ZWN1dGVfY2JfaW1tKHJxKTsKLX0KLQogc3RhdGljIHZv
aWQgX19ycV9pbml0X3dhdGNoZG9nKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXJxLT53
YXRjaGRvZy50aW1lci5mdW5jdGlvbiA9IE5VTEw7CkBAIC00MDUsOCArMzU1LDcgQEAgYm9vbCBp
OTE1X3JlcXVlc3RfcmV0aXJlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCSAqIGFmdGVyIHJl
bW92aW5nIHRoZSBicmVhZGNydW1iIGFuZCBzaWduYWxpbmcgaXQsIHNvIHRoYXQgd2UgZG8gbm90
CiAJICogaW5hZHZlcnRlbnRseSBhdHRhY2ggdGhlIGJyZWFkY3J1bWIgdG8gYSBjb21wbGV0ZWQg
cmVxdWVzdC4KIAkgKi8KLQlpZiAoIWxpc3RfZW1wdHkoJnJxLT5zY2hlZC5saW5rKSkKLQkJcmVt
b3ZlX2Zyb21fZW5naW5lKHJxKTsKKwlycS0+ZW5naW5lLT5yZW1vdmVfYWN0aXZlX3JlcXVlc3Qo
cnEpOwogCUdFTV9CVUdfT04oIWxsaXN0X2VtcHR5KCZycS0+ZXhlY3V0ZV9jYikpOwogCiAJX19s
aXN0X2RlbF9lbnRyeSgmcnEtPmxpbmspOyAvKiBwb2lzb24gbmVpdGhlciBwcmV2L25leHQgKFJD
VSB3YWxrcykgKi8KQEAgLTQzMSw2ICszODAsNyBAQCB2b2lkIGk5MTVfcmVxdWVzdF9yZXRpcmVf
dXB0byhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogCWRvIHsKIAkJdG1wID0gbGlzdF9maXJz
dF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnRtcCksIGxpbmspOworCQlHRU1fQlVHX09O
KCFpOTE1X3JlcXVlc3RfY29tcGxldGVkKHRtcCkpOwogCX0gd2hpbGUgKGk5MTVfcmVxdWVzdF9y
ZXRpcmUodG1wKSAmJiB0bXAgIT0gcnEpOwogfQogCkBAIC01MzYsNyArNDg2LDcgQEAgX19hd2Fp
dF9leGVjdXRpb24oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJaWYgKGxsaXN0X2FkZCgmY2It
Pndvcmsubm9kZS5sbGlzdCwgJnNpZ25hbC0+ZXhlY3V0ZV9jYikpIHsKIAkJaWYgKGk5MTVfcmVx
dWVzdF9pc19hY3RpdmUoc2lnbmFsKSB8fAogCQkgICAgX19yZXF1ZXN0X2luX2ZsaWdodChzaWdu
YWwpKQotCQkJX19ub3RpZnlfZXhlY3V0ZV9jYl9pbW0oc2lnbmFsKTsKKwkJCWk5MTVfcmVxdWVz
dF9ub3RpZnlfZXhlY3V0ZV9jYl9pbW0oc2lnbmFsKTsKIAl9CiAKIAlyZXR1cm4gMDsKQEAgLTY2
NywxMSArNjE3LDE1IEBAIGJvb2wgX19pOTE1X3JlcXVlc3Rfc3VibWl0KHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJlcXVlc3QpCiAJCQkJICAgICByZXF1ZXN0LT5yaW5nLT52YWRkciArIHJlcXVlc3Qt
PnBvc3RmaXgpOwogCiAJdHJhY2VfaTkxNV9yZXF1ZXN0X2V4ZWN1dGUocmVxdWVzdCk7Ci0JZW5n
aW5lLT5zZXJpYWwrKzsKKwlpZiAoZW5naW5lLT5idW1wX3NlcmlhbCkKKwkJZW5naW5lLT5idW1w
X3NlcmlhbChlbmdpbmUpOworCWVsc2UKKwkJZW5naW5lLT5zZXJpYWwrKzsKKwogCXJlc3VsdCA9
IHRydWU7CiAKIAlHRU1fQlVHX09OKHRlc3RfYml0KEk5MTVfRkVOQ0VfRkxBR19BQ1RJVkUsICZy
ZXF1ZXN0LT5mZW5jZS5mbGFncykpOwotCWxpc3RfbW92ZV90YWlsKCZyZXF1ZXN0LT5zY2hlZC5s
aW5rLCAmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnJlcXVlc3RzKTsKKwllbmdpbmUtPmFkZF9hY3Rp
dmVfcmVxdWVzdChyZXF1ZXN0KTsKIGFjdGl2ZToKIAljbGVhcl9iaXQoSTkxNV9GRU5DRV9GTEFH
X1BRVUVVRSwgJnJlcXVlc3QtPmZlbmNlLmZsYWdzKTsKIAlzZXRfYml0KEk5MTVfRkVOQ0VfRkxB
R19BQ1RJVkUsICZyZXF1ZXN0LT5mZW5jZS5mbGFncyk7CkBAIC03NTksMTggKzcxMyw2IEBAIHZv
aWQgaTkxNV9yZXF1ZXN0X3Vuc3VibWl0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJ
c3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdz
KTsKIH0KIAotc3RhdGljIHZvaWQgX19jYW5jZWxfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKLXsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBOVUxMOwotCi0JaTkx
NV9yZXF1ZXN0X2FjdGl2ZV9lbmdpbmUocnEsICZlbmdpbmUpOwotCi0JaWYgKGVuZ2luZSAmJiBp
bnRlbF9lbmdpbmVfcHVsc2UoZW5naW5lKSkKLQkJaW50ZWxfZ3RfaGFuZGxlX2Vycm9yKGVuZ2lu
ZS0+Z3QsIGVuZ2luZS0+bWFzaywgMCwKLQkJCQkgICAgICAicmVxdWVzdCBjYW5jZWxsYXRpb24g
YnkgJXMiLAotCQkJCSAgICAgIGN1cnJlbnQtPmNvbW0pOwotfQotCiB2b2lkIGk5MTVfcmVxdWVz
dF9jYW5jZWwoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGludCBlcnJvcikKIHsKIAlpZiAoIWk5
MTVfcmVxdWVzdF9zZXRfZXJyb3Jfb25jZShycSwgZXJyb3IpKQpAQCAtNzc4LDcgKzcyMCw3IEBA
IHZvaWQgaTkxNV9yZXF1ZXN0X2NhbmNlbChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGVy
cm9yKQogCiAJc2V0X2JpdChJOTE1X0ZFTkNFX0ZMQUdfU0VOVElORUwsICZycS0+ZmVuY2UuZmxh
Z3MpOwogCi0JX19jYW5jZWxfcmVxdWVzdChycSk7CisJaW50ZWxfY29udGV4dF9jYW5jZWxfcmVx
dWVzdChycS0+Y29udGV4dCwgcnEpOwogfQogCiBzdGF0aWMgaW50IF9faTkxNV9zd19mZW5jZV9j
YWxsCkBAIC05NTAsNyArODkyLDE5IEBAIF9faTkxNV9yZXF1ZXN0X2NyZWF0ZShzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsIGdmcF90IGdmcCkKIAkJfQogCX0KIAotCXJxLT5jb250ZXh0ID0gY2U7
CisJLyoKKwkgKiBIb2xkIGEgcmVmZXJlbmNlIHRvIHRoZSBpbnRlbF9jb250ZXh0IG92ZXIgbGlm
ZSBvZiBhbiBpOTE1X3JlcXVlc3QuCisJICogV2l0aG91dCB0aGlzIGFuIGk5MTVfcmVxdWVzdCBj
YW4gZXhpc3QgYWZ0ZXIgdGhlIGNvbnRleHQgaGFzIGJlZW4KKwkgKiBkZXN0cm95ZWQgKGUuZy4g
cmVxdWVzdCByZXRpcmVkLCBjb250ZXh0IGNsb3NlZCwgYnV0IHVzZXIgc3BhY2UgaG9sZHMKKwkg
KiBhIHJlZmVyZW5jZSB0byB0aGUgcmVxdWVzdCBmcm9tIGFuIG91dCBmZW5jZSkuIEluIHRoZSBj
YXNlIG9mIEd1QworCSAqIHN1Ym1pc3Npb24gKyB2aXJ0dWFsIGVuZ2luZSwgdGhlIGVuZ2luZSB0
aGF0IHRoZSByZXF1ZXN0IHJlZmVyZW5jZXMKKwkgKiBpcyBhbHNvIGRlc3Ryb3llZCB3aGljaCBj
YW4gdHJpZ2dlciBiYWQgcG9pbnRlciBkcmVmIGluIGZlbmNlIG9wcworCSAqIChlLmcuIGk5MTVf
ZmVuY2VfZ2V0X2RyaXZlcl9uYW1lKS4gV2UgY291bGQgbGlrZWx5IGNoYW5nZSB0aGVzZQorCSAq
IGZ1bmN0aW9ucyB0byBhdm9pZCB0b3VjaGluZyB0aGUgZW5naW5lIGJ1dCBsZXQncyBqdXN0IGJl
IHNhZmUgYW5kCisJICogaG9sZCB0aGUgaW50ZWxfY29udGV4dCByZWZlcmVuY2UuIEluIGV4ZWNs
aXN0IG1vZGUgdGhlIHJlcXVlc3QgYWx3YXlzCisJICogZXZlbnR1YWxseSBwb2ludHMgdG8gYSBw
aHlzaWNhbCBlbmdpbmUgc28gdGhpcyBpc24ndCBhbiBpc3N1ZS4KKwkgKi8KKwlycS0+Y29udGV4
dCA9IGludGVsX2NvbnRleHRfZ2V0KGNlKTsKIAlycS0+ZW5naW5lID0gY2UtPmVuZ2luZTsKIAly
cS0+cmluZyA9IGNlLT5yaW5nOwogCXJxLT5leGVjdXRpb25fbWFzayA9IGNlLT5lbmdpbmUtPm1h
c2s7CkBAIC05NzMsNiArOTI3LDggQEAgX19pOTE1X3JlcXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQogCiAJcnEtPnJjdXN0YXRlID0gZ2V0X3N0YXRlX3N5
bmNocm9uaXplX3JjdSgpOyAvKiBhY3RzIGFzIHNtcF9tYigpICovCiAKKwlycS0+Z3VjX3ByaW8g
PSBHVUNfUFJJT19JTklUOworCiAJLyogV2UgYnVtcCB0aGUgcmVmIGZvciB0aGUgZmVuY2UgY2hh
aW4gKi8KIAlpOTE1X3N3X2ZlbmNlX3JlaW5pdCgmaTkxNV9yZXF1ZXN0X2dldChycSktPnN1Ym1p
dCk7CiAJaTkxNV9zd19mZW5jZV9yZWluaXQoJmk5MTVfcmVxdWVzdF9nZXQocnEpLT5zZW1hcGhv
cmUpOwpAQCAtMTAyNyw2ICs5ODMsNyBAQCBfX2k5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlLCBnZnBfdCBnZnApCiAJR0VNX0JVR19PTighbGlzdF9lbXB0eSgmcnEt
PnNjaGVkLndhaXRlcnNfbGlzdCkpOwogCiBlcnJfZnJlZToKKwlpbnRlbF9jb250ZXh0X3B1dChj
ZSk7CiAJa21lbV9jYWNoZV9mcmVlKGdsb2JhbC5zbGFiX3JlcXVlc3RzLCBycSk7CiBlcnJfdW5y
ZXNlcnZlOgogCWludGVsX2NvbnRleHRfdW5waW4oY2UpOwpAQCAtMTM3OSw2ICsxMzM2LDkgQEAg
aTkxNV9yZXF1ZXN0X2F3YWl0X2V4dGVybmFsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1
Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIAlyZXR1cm4gZXJyOwogfQogCitzdGF0aWMgaW50CitpOTE1
X3JlcXVlc3RfYXdhaXRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICp0bywgc3RydWN0IGk5
MTVfcmVxdWVzdCAqZnJvbSk7CisKIGludAogaTkxNV9yZXF1ZXN0X2F3YWl0X2V4ZWN1dGlvbihz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAkJCSAgICAgc3RydWN0IGRtYV9mZW5jZSAqZmVuY2Up
CkBAIC0xNDYyLDcgKzE0MjIsOCBAQCBpOTE1X3JlcXVlc3RfYXdhaXRfcmVxdWVzdChzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICp0bywgc3RydWN0IGk5MTVfcmVxdWVzdCAqZnJvbSkKIAkJCXJldHVybiBy
ZXQ7CiAJfQogCi0JaWYgKGlzX3Bvd2VyX29mXzIodG8tPmV4ZWN1dGlvbl9tYXNrIHwgUkVBRF9P
TkNFKGZyb20tPmV4ZWN1dGlvbl9tYXNrKSkpCisJaWYgKCFpbnRlbF9lbmdpbmVfdXNlc19ndWMo
dG8tPmVuZ2luZSkgJiYKKwkgICAgaXNfcG93ZXJfb2ZfMih0by0+ZXhlY3V0aW9uX21hc2sgfCBS
RUFEX09OQ0UoZnJvbS0+ZXhlY3V0aW9uX21hc2spKSkKIAkJcmV0ID0gYXdhaXRfcmVxdWVzdF9z
dWJtaXQodG8sIGZyb20pOwogCWVsc2UKIAkJcmV0ID0gZW1pdF9zZW1hcGhvcmVfd2FpdCh0bywg
ZnJvbSwgSTkxNV9GRU5DRV9HRlApOwpAQCAtMTYyMSw2ICsxNTgyLDggQEAgX19pOTE1X3JlcXVl
c3RfYWRkX3RvX3RpbWVsaW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCXByZXYgPSB0b19y
ZXF1ZXN0KF9faTkxNV9hY3RpdmVfZmVuY2Vfc2V0KCZ0aW1lbGluZS0+bGFzdF9yZXF1ZXN0LAog
CQkJCQkJICAmcnEtPmZlbmNlKSk7CiAJaWYgKHByZXYgJiYgIV9faTkxNV9yZXF1ZXN0X2lzX2Nv
bXBsZXRlKHByZXYpKSB7CisJCWJvb2wgdXNlc19ndWMgPSBpbnRlbF9lbmdpbmVfdXNlc19ndWMo
cnEtPmVuZ2luZSk7CisKIAkJLyoKIAkJICogVGhlIHJlcXVlc3RzIGFyZSBzdXBwb3NlZCB0byBi
ZSBrZXB0IGluIG9yZGVyLiBIb3dldmVyLAogCQkgKiB3ZSBuZWVkIHRvIGJlIHdhcnkgaW4gY2Fz
ZSB0aGUgdGltZWxpbmUtPmxhc3RfcmVxdWVzdApAQCAtMTYzMSw3ICsxNTk0LDkgQEAgX19pOTE1
X3JlcXVlc3RfYWRkX3RvX3RpbWVsaW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCQkJICAg
aTkxNV9zZXFub19wYXNzZWQocHJldi0+ZmVuY2Uuc2Vxbm8sCiAJCQkJCSAgICAgcnEtPmZlbmNl
LnNlcW5vKSk7CiAKLQkJaWYgKGlzX3Bvd2VyX29mXzIoUkVBRF9PTkNFKHByZXYtPmVuZ2luZSkt
Pm1hc2sgfCBycS0+ZW5naW5lLT5tYXNrKSkKKwkJaWYgKCghdXNlc19ndWMgJiYKKwkJICAgICBp
c19wb3dlcl9vZl8yKFJFQURfT05DRShwcmV2LT5lbmdpbmUpLT5tYXNrIHwgcnEtPmVuZ2luZS0+
bWFzaykpIHx8CisJCSAgICAodXNlc19ndWMgJiYgcHJldi0+Y29udGV4dCA9PSBycS0+Y29udGV4
dCkpCiAJCQlpOTE1X3N3X2ZlbmNlX2F3YWl0X3N3X2ZlbmNlKCZycS0+c3VibWl0LAogCQkJCQkJ
ICAgICAmcHJldi0+c3VibWl0LAogCQkJCQkJICAgICAmcnEtPnN1Ym1pdHEpOwpAQCAtMjA3Miw2
ICsyMDM3LDQ3IEBAIHZvaWQgaTkxNV9yZXF1ZXN0X3Nob3coc3RydWN0IGRybV9wcmludGVyICpt
LAogCQkgICBuYW1lKTsKIH0KIAorc3RhdGljIGJvb2wgZW5naW5lX21hdGNoX3Jpbmcoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwl1
MzIgcmluZyA9IEVOR0lORV9SRUFEKGVuZ2luZSwgUklOR19TVEFSVCk7CisKKwlyZXR1cm4gcmlu
ZyA9PSBpOTE1X2dndHRfb2Zmc2V0KHJxLT5yaW5nLT52bWEpOworfQorCitzdGF0aWMgYm9vbCBt
YXRjaF9yaW5nKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKKwlib29sIGZvdW5kOworCWludCBpOworCisJaWYgKCFpbnRlbF9lbmdp
bmVfaXNfdmlydHVhbChycS0+ZW5naW5lKSkKKwkJcmV0dXJuIGVuZ2luZV9tYXRjaF9yaW5nKHJx
LT5lbmdpbmUsIHJxKTsKKworCWZvdW5kID0gZmFsc2U7CisJaSA9IDA7CisJd2hpbGUgKChlbmdp
bmUgPSBpbnRlbF9lbmdpbmVfZ2V0X3NpYmxpbmcocnEtPmVuZ2luZSwgaSsrKSkpIHsKKwkJZm91
bmQgPSBlbmdpbmVfbWF0Y2hfcmluZyhlbmdpbmUsIHJxKTsKKwkJaWYgKGZvdW5kKQorCQkJYnJl
YWs7CisJfQorCisJcmV0dXJuIGZvdW5kOworfQorCitlbnVtIGk5MTVfcmVxdWVzdF9zdGF0ZSBp
OTE1X3Rlc3RfcmVxdWVzdF9zdGF0ZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlpZiAo
aTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCisJCXJldHVybiBJOTE1X1JFUVVFU1RfQ09NUExF
VEU7CisKKwlpZiAoIWk5MTVfcmVxdWVzdF9zdGFydGVkKHJxKSkKKwkJcmV0dXJuIEk5MTVfUkVR
VUVTVF9QRU5ESU5HOworCisJaWYgKG1hdGNoX3JpbmcocnEpKQorCQlyZXR1cm4gSTkxNV9SRVFV
RVNUX0FDVElWRTsKKworCXJldHVybiBJOTE1X1JFUVVFU1RfUVVFVUVEOworfQorCiAjaWYgSVNf
RU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1QpCiAjaW5jbHVkZSAic2VsZnRlc3RzL21v
Y2tfcmVxdWVzdC5jIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pOTE1X3JlcXVlc3QuYyIKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKaW5kZXggNWRlYjY1ZWM1ZmE1Li44YmIyYzJiNjFlODkg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCkBAIC0yODUsNiArMjg1LDIyIEBAIHN0
cnVjdCBpOTE1X3JlcXVlc3QgewogCQlzdHJ1Y3QgaHJ0aW1lciB0aW1lcjsKIAl9IHdhdGNoZG9n
OwogCisJLyoKKwkgKiBSZXF1ZXN0cyBtYXkgbmVlZCB0byBiZSBzdGFsbGVkIHdoZW4gdXNpbmcg
R3VDIHN1Ym1pc3Npb24gd2FpdGluZyBmb3IKKwkgKiBjZXJ0YWluIEd1QyBvcGVyYXRpb25zIHRv
IGNvbXBsZXRlLiBJZiB0aGF0IGlzIHRoZSBjYXNlLCBzdGFsbGVkCisJICogcmVxdWVzdHMgYXJl
IGFkZGVkIHRvIGEgcGVyIGNvbnRleHQgbGlzdCBvZiBzdGFsbGVkIHJlcXVlc3RzLiBUaGUKKwkg
KiBiZWxvdyBsaXN0X2hlYWQgaXMgdGhlIGxpbmsgaW4gdGhhdCBsaXN0LgorCSAqLworCXN0cnVj
dCBsaXN0X2hlYWQgZ3VjX2ZlbmNlX2xpbms7CisKKwkvKioKKwkgKiBQcmlvcml0eSBsZXZlbCB3
aGlsZSB0aGUgcmVxdWVzdCBpcyBpbmZsaWdodC4gRGlmZmVycyBzbGlnaHRseSB0aGFuCisJICog
aTkxNSBzY2hlZHVsZXIgcHJpb3JpdHkuCisJICovCisjZGVmaW5lCUdVQ19QUklPX0lOSVQJMHhm
ZgorI2RlZmluZQlHVUNfUFJJT19GSU5JCTB4ZmUKKwl1OCBndWNfcHJpbzsKKwogCUk5MTVfU0VM
RlRFU1RfREVDTEFSRShzdHJ1Y3QgewogCQlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAJCXVuc2ln
bmVkIGxvbmcgZGVsYXk7CkBAIC02MzksNCArNjU1LDE2IEBAIGJvb2wKIGk5MTVfcmVxdWVzdF9h
Y3RpdmVfZW5naW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogCQkJICAgc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqKmFjdGl2ZSk7CiAKK3ZvaWQgaTkxNV9yZXF1ZXN0X25vdGlmeV9leGVjdXRl
X2NiX2ltbShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7CisKK2VudW0gaTkxNV9yZXF1ZXN0X3N0
YXRlIHsKKwlJOTE1X1JFUVVFU1RfVU5LTk9XTiA9IDAsCisJSTkxNV9SRVFVRVNUX0NPTVBMRVRF
LAorCUk5MTVfUkVRVUVTVF9QRU5ESU5HLAorCUk5MTVfUkVRVUVTVF9RVUVVRUQsCisJSTkxNV9S
RVFVRVNUX0FDVElWRSwKK307CisKK2VudW0gaTkxNV9yZXF1ZXN0X3N0YXRlIGk5MTVfdGVzdF9y
ZXF1ZXN0X3N0YXRlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKTsKKwogI2VuZGlmIC8qIEk5MTVf
UkVRVUVTVF9IICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVk
dWxlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwppbmRleCAzYTU4
YTkxMzAzMDkuLjNmY2NhZTM2NzJjMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9zY2hlZHVsZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxl
ci5jCkBAIC0yNDEsNiArMjQxLDkgQEAgc3RhdGljIHZvaWQgX19pOTE1X3NjaGVkdWxlKHN0cnVj
dCBpOTE1X3NjaGVkX25vZGUgKm5vZGUsCiAJLyogRmlmbyBhbmQgZGVwdGgtZmlyc3QgcmVwbGFj
ZW1lbnQgZW5zdXJlIG91ciBkZXBzIGV4ZWN1dGUgYmVmb3JlIHVzICovCiAJc2NoZWRfZW5naW5l
ID0gbG9ja19zY2hlZF9lbmdpbmUobm9kZSwgc2NoZWRfZW5naW5lLCAmY2FjaGUpOwogCWxpc3Rf
Zm9yX2VhY2hfZW50cnlfc2FmZV9yZXZlcnNlKGRlcCwgcCwgJmRmcywgZGZzX2xpbmspIHsKKwkJ
c3RydWN0IGk5MTVfcmVxdWVzdCAqZnJvbSA9IGNvbnRhaW5lcl9vZihkZXAtPnNpZ25hbGVyLAor
CQkJCQkJCSBzdHJ1Y3QgaTkxNV9yZXF1ZXN0LAorCQkJCQkJCSBzY2hlZCk7CiAJCUlOSVRfTElT
VF9IRUFEKCZkZXAtPmRmc19saW5rKTsKIAogCQlub2RlID0gZGVwLT5zaWduYWxlcjsKQEAgLTI1
NCw2ICsyNTcsMTAgQEAgc3RhdGljIHZvaWQgX19pOTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3Nj
aGVkX25vZGUgKm5vZGUsCiAJCUdFTV9CVUdfT04obm9kZV90b19yZXF1ZXN0KG5vZGUpLT5lbmdp
bmUtPnNjaGVkX2VuZ2luZSAhPQogCQkJICAgc2NoZWRfZW5naW5lKTsKIAorCQkvKiBNdXN0IGJl
IGNhbGxlZCBiZWZvcmUgY2hhbmdpbmcgdGhlIG5vZGVzIHByaW9yaXR5ICovCisJCWlmIChzY2hl
ZF9lbmdpbmUtPmJ1bXBfaW5mbGlnaHRfcmVxdWVzdF9wcmlvKQorCQkJc2NoZWRfZW5naW5lLT5i
dW1wX2luZmxpZ2h0X3JlcXVlc3RfcHJpbyhmcm9tLCBwcmlvKTsKKwogCQlXUklURV9PTkNFKG5v
ZGUtPmF0dHIucHJpb3JpdHksIHByaW8pOwogCiAJCS8qCkBAIC00MzEsNyArNDM4LDcgQEAgdm9p
ZCBpOTE1X3JlcXVlc3Rfc2hvd193aXRoX3NjaGVkdWxlKHN0cnVjdCBkcm1fcHJpbnRlciAqbSwK
IAlyY3VfcmVhZF91bmxvY2soKTsKIH0KIAotdm9pZCBpOTE1X3NjaGVkX2VuZ2luZV9mcmVlKHN0
cnVjdCBrcmVmICprcmVmKQorc3RhdGljIHZvaWQgZGVmYXVsdF9kZXN0cm95KHN0cnVjdCBrcmVm
ICprcmVmKQogewogCXN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5naW5lID0KIAkJ
Y29udGFpbmVyX29mKGtyZWYsIHR5cGVvZigqc2NoZWRfZW5naW5lKSwgcmVmKTsKQEAgLTQ0MCw2
ICs0NDcsMTEgQEAgdm9pZCBpOTE1X3NjaGVkX2VuZ2luZV9mcmVlKHN0cnVjdCBrcmVmICprcmVm
KQogCWtmcmVlKHNjaGVkX2VuZ2luZSk7CiB9CiAKK3N0YXRpYyBib29sIGRlZmF1bHRfZGlzYWJs
ZWQoc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUpCit7CisJcmV0dXJuIGZh
bHNlOworfQorCiBzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKgogaTkxNV9zY2hlZF9lbmdpbmVf
Y3JlYXRlKHVuc2lnbmVkIGludCBzdWJjbGFzcykKIHsKQEAgLTQ1Myw2ICs0NjUsOCBAQCBpOTE1
X3NjaGVkX2VuZ2luZV9jcmVhdGUodW5zaWduZWQgaW50IHN1YmNsYXNzKQogCiAJc2NoZWRfZW5n
aW5lLT5xdWV1ZSA9IFJCX1JPT1RfQ0FDSEVEOwogCXNjaGVkX2VuZ2luZS0+cXVldWVfcHJpb3Jp
dHlfaGludCA9IElOVF9NSU47CisJc2NoZWRfZW5naW5lLT5kZXN0cm95ID0gZGVmYXVsdF9kZXN0
cm95OworCXNjaGVkX2VuZ2luZS0+ZGlzYWJsZWQgPSBkZWZhdWx0X2Rpc2FibGVkOwogCiAJSU5J
VF9MSVNUX0hFQUQoJnNjaGVkX2VuZ2luZS0+cmVxdWVzdHMpOwogCUlOSVRfTElTVF9IRUFEKCZz
Y2hlZF9lbmdpbmUtPmhvbGQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9zY2hlZHVsZXIuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmgKaW5k
ZXggNjUwYWI4ZTBkYjlmLi5mNGQ5ODExYWRlNWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfc2NoZWR1bGVyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9z
Y2hlZHVsZXIuaApAQCAtNTEsOCArNTEsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaTkxNV9wcmlv
bGlzdF9mcmVlKHN0cnVjdCBpOTE1X3ByaW9saXN0ICpwKQogc3RydWN0IGk5MTVfc2NoZWRfZW5n
aW5lICoKIGk5MTVfc2NoZWRfZW5naW5lX2NyZWF0ZSh1bnNpZ25lZCBpbnQgc3ViY2xhc3MpOwog
Ci12b2lkIGk5MTVfc2NoZWRfZW5naW5lX2ZyZWUoc3RydWN0IGtyZWYgKmtyZWYpOwotCiBzdGF0
aWMgaW5saW5lIHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqCiBpOTE1X3NjaGVkX2VuZ2luZV9n
ZXQoc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUpCiB7CkBAIC02Myw3ICs2
MSw3IEBAIGk5MTVfc2NoZWRfZW5naW5lX2dldChzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNj
aGVkX2VuZ2luZSkKIHN0YXRpYyBpbmxpbmUgdm9pZAogaTkxNV9zY2hlZF9lbmdpbmVfcHV0KHN0
cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5naW5lKQogewotCWtyZWZfcHV0KCZzY2hl
ZF9lbmdpbmUtPnJlZiwgaTkxNV9zY2hlZF9lbmdpbmVfZnJlZSk7CisJa3JlZl9wdXQoJnNjaGVk
X2VuZ2luZS0+cmVmLCBzY2hlZF9lbmdpbmUtPmRlc3Ryb3kpOwogfQogCiBzdGF0aWMgaW5saW5l
IGJvb2wKQEAgLTk4LDQgKzk2LDEwIEBAIHZvaWQgaTkxNV9yZXF1ZXN0X3Nob3dfd2l0aF9zY2hl
ZHVsZShzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0sCiAJCQkJICAgICBjb25zdCBjaGFyICpwcmVmaXgs
CiAJCQkJICAgICBpbnQgaW5kZW50KTsKIAorc3RhdGljIGlubGluZSBib29sCitpOTE1X3NjaGVk
X2VuZ2luZV9kaXNhYmxlZChzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSkK
K3sKKwlyZXR1cm4gc2NoZWRfZW5naW5lLT5kaXNhYmxlZChzY2hlZF9lbmdpbmUpOworfQorCiAj
ZW5kaWYgLyogX0k5MTVfU0NIRURVTEVSX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3NjaGVkdWxlcl90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9zY2hlZHVsZXJfdHlwZXMuaAppbmRleCA1OTM1YzMxNTJiZGMuLmIwYTFiNThjNzg5MyAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJfdHlwZXMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlcl90eXBlcy5oCkBAIC0xNjMsMTIg
KzE2MywzNCBAQCBzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgewogCSAqLwogCXZvaWQgKnByaXZh
dGVfZGF0YTsKIAorCS8qKgorCSAqIEBkZXN0cm95OiBkZXN0cm95IHNjaGVkdWxlIGVuZ2luZSAv
IGNsZWFudXAgaW4gYmFja2VuZAorCSAqLworCXZvaWQJKCpkZXN0cm95KShzdHJ1Y3Qga3JlZiAq
a3JlZik7CisKKwkvKioKKwkgKiBAZGlzYWJsZWQ6IGNoZWNrIGlmIGJhY2tlbmQgaGFzIGRpc2Fi
bGVkIHN1Ym1pc3Npb24KKwkgKi8KKwlib29sCSgqZGlzYWJsZWQpKHN0cnVjdCBpOTE1X3NjaGVk
X2VuZ2luZSAqc2NoZWRfZW5naW5lKTsKKwogCS8qKgogCSAqIEBraWNrX2JhY2tlbmQ6IGtpY2sg
YmFja2VuZCBhZnRlciBhIHJlcXVlc3QncyBwcmlvcml0eSBoYXMgY2hhbmdlZAogCSAqLwogCXZv
aWQJKCpraWNrX2JhY2tlbmQpKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogCQkJCWlu
dCBwcmlvKTsKIAorCS8qKgorCSAqIEBidW1wX2luZmxpZ2h0X3JlcXVlc3RfcHJpbzogdXBkYXRl
IHByaW9yaXR5IG9mIGFuIGluZmxpZ2h0IHJlcXVlc3QKKwkgKi8KKwl2b2lkCSgqYnVtcF9pbmZs
aWdodF9yZXF1ZXN0X3ByaW8pKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAorCQkJCQkgICAgICBp
bnQgcHJpbyk7CisKKwkvKioKKwkgKiBAcmV0aXJlX2luZmxpZ2h0X3JlcXVlc3RfcHJpbzogaW5k
aWNhdGUgcmVxdWVzdCBpcyByZXRpcmVkIHRvCisJICogcHJpb3JpdHkgdHJhY2tpbmcKKwkgKi8K
Kwl2b2lkCSgqcmV0aXJlX2luZmxpZ2h0X3JlcXVlc3RfcHJpbykoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEpOworCiAJLyoqCiAJICogQHNjaGVkdWxlOiBhZGp1c3QgcHJpb3JpdHkgb2YgcmVxdWVz
dAogCSAqCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RyYWNlLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RyYWNlLmgKaW5kZXggNjc3OGFkMmExNGE0Li44MDZh
ZDY4ODI3NGIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdHJhY2UuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RyYWNlLmgKQEAgLTc5NCwzMCArNzk0LDQw
IEBAIERFQ0xBUkVfRVZFTlRfQ0xBU1MoaTkxNV9yZXF1ZXN0LAogCSAgICBUUF9TVFJVQ1RfX2Vu
dHJ5KAogCQkJICAgICBfX2ZpZWxkKHUzMiwgZGV2KQogCQkJICAgICBfX2ZpZWxkKHU2NCwgY3R4
KQorCQkJICAgICBfX2ZpZWxkKHUzMiwgZ3VjX2lkKQogCQkJICAgICBfX2ZpZWxkKHUxNiwgY2xh
c3MpCiAJCQkgICAgIF9fZmllbGQodTE2LCBpbnN0YW5jZSkKIAkJCSAgICAgX19maWVsZCh1MzIs
IHNlcW5vKQorCQkJICAgICBfX2ZpZWxkKHUzMiwgdGFpbCkKIAkJCSAgICAgKSwKIAogCSAgICBU
UF9mYXN0X2Fzc2lnbigKIAkJCSAgIF9fZW50cnktPmRldiA9IHJxLT5lbmdpbmUtPmk5MTUtPmRy
bS5wcmltYXJ5LT5pbmRleDsKIAkJCSAgIF9fZW50cnktPmNsYXNzID0gcnEtPmVuZ2luZS0+dWFi
aV9jbGFzczsKIAkJCSAgIF9fZW50cnktPmluc3RhbmNlID0gcnEtPmVuZ2luZS0+dWFiaV9pbnN0
YW5jZTsKKwkJCSAgIF9fZW50cnktPmd1Y19pZCA9IHJxLT5jb250ZXh0LT5ndWNfaWQ7CiAJCQkg
ICBfX2VudHJ5LT5jdHggPSBycS0+ZmVuY2UuY29udGV4dDsKIAkJCSAgIF9fZW50cnktPnNlcW5v
ID0gcnEtPmZlbmNlLnNlcW5vOworCQkJICAgX19lbnRyeS0+dGFpbCA9IHJxLT50YWlsOwogCQkJ
ICAgKSwKIAotCSAgICBUUF9wcmludGsoImRldj0ldSwgZW5naW5lPSV1OiV1LCBjdHg9JWxsdSwg
c2Vxbm89JXUiLAorCSAgICBUUF9wcmludGsoImRldj0ldSwgZW5naW5lPSV1OiV1LCBndWNfaWQ9
JXUsIGN0eD0lbGx1LCBzZXFubz0ldSwgdGFpbD0ldSIsCiAJCSAgICAgIF9fZW50cnktPmRldiwg
X19lbnRyeS0+Y2xhc3MsIF9fZW50cnktPmluc3RhbmNlLAotCQkgICAgICBfX2VudHJ5LT5jdHgs
IF9fZW50cnktPnNlcW5vKQorCQkgICAgICBfX2VudHJ5LT5ndWNfaWQsIF9fZW50cnktPmN0eCwg
X19lbnRyeS0+c2Vxbm8sCisJCSAgICAgIF9fZW50cnktPnRhaWwpCiApOwogCiBERUZJTkVfRVZF
TlQoaTkxNV9yZXF1ZXN0LCBpOTE1X3JlcXVlc3RfYWRkLAotCSAgICBUUF9QUk9UTyhzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSksCi0JICAgIFRQX0FSR1MocnEpCisJICAgICBUUF9QUk9UTyhzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSksCisJICAgICBUUF9BUkdTKHJxKQogKTsKIAogI2lmIGRlZmlu
ZWQoQ09ORklHX0RSTV9JOTE1X0xPV19MRVZFTF9UUkFDRVBPSU5UUykKK0RFRklORV9FVkVOVChp
OTE1X3JlcXVlc3QsIGk5MTVfcmVxdWVzdF9ndWNfc3VibWl0LAorCSAgICAgVFBfUFJPVE8oc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpLAorCSAgICAgVFBfQVJHUyhycSkKKyk7CisKIERFRklORV9F
VkVOVChpOTE1X3JlcXVlc3QsIGk5MTVfcmVxdWVzdF9zdWJtaXQsCiAJICAgICBUUF9QUk9UTyhz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSksCiAJICAgICBUUF9BUkdTKHJxKQpAQCAtODg1LDggKzg5
NSwxMTYgQEAgVFJBQ0VfRVZFTlQoaTkxNV9yZXF1ZXN0X291dCwKIAkJCSAgICAgIF9fZW50cnkt
PmN0eCwgX19lbnRyeS0+c2Vxbm8sIF9fZW50cnktPmNvbXBsZXRlZCkKICk7CiAKK0RFQ0xBUkVf
RVZFTlRfQ0xBU1MoaW50ZWxfY29udGV4dCwKKwkJICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSksCisJCSAgICBUUF9BUkdTKGNlKSwKKworCQkgICAgVFBfU1RSVUNUX19lbnRy
eSgKKwkJCSAgICAgX19maWVsZCh1MzIsIGd1Y19pZCkKKwkJCSAgICAgX19maWVsZChpbnQsIHBp
bl9jb3VudCkKKwkJCSAgICAgX19maWVsZCh1MzIsIHNjaGVkX3N0YXRlKQorCQkJICAgICBfX2Zp
ZWxkKHUzMiwgZ3VjX3NjaGVkX3N0YXRlX25vX2xvY2spCisJCQkgICAgIF9fZmllbGQodTgsIGd1
Y19wcmlvKQorCQkJICAgICApLAorCisJCSAgICBUUF9mYXN0X2Fzc2lnbigKKwkJCSAgIF9fZW50
cnktPmd1Y19pZCA9IGNlLT5ndWNfaWQ7CisJCQkgICBfX2VudHJ5LT5waW5fY291bnQgPSBhdG9t
aWNfcmVhZCgmY2UtPnBpbl9jb3VudCk7CisJCQkgICBfX2VudHJ5LT5zY2hlZF9zdGF0ZSA9IGNl
LT5ndWNfc3RhdGUuc2NoZWRfc3RhdGU7CisJCQkgICBfX2VudHJ5LT5ndWNfc2NoZWRfc3RhdGVf
bm9fbG9jayA9CisJCQkgICBhdG9taWNfcmVhZCgmY2UtPmd1Y19zY2hlZF9zdGF0ZV9ub19sb2Nr
KTsKKwkJCSAgIF9fZW50cnktPmd1Y19wcmlvID0gY2UtPmd1Y19wcmlvOworCQkJICAgKSwKKwor
CQkgICAgVFBfcHJpbnRrKCJndWNfaWQ9JWQsIHBpbl9jb3VudD0lZCBzY2hlZF9zdGF0ZT0weCV4
LDB4JXgsIGd1Y19wcmlvPSV1IiwKKwkJCSAgICAgIF9fZW50cnktPmd1Y19pZCwgX19lbnRyeS0+
cGluX2NvdW50LAorCQkJICAgICAgX19lbnRyeS0+c2NoZWRfc3RhdGUsCisJCQkgICAgICBfX2Vu
dHJ5LT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jaywKKwkJCSAgICAgIF9fZW50cnktPmd1Y19wcmlv
KQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRleHRfc2V0X3By
aW8sCisJICAgICBUUF9QUk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBf
QVJHUyhjZSkKKyk7CisKK0RFRklORV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0
X3Jlc2V0LAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKSwKKwkgICAg
IFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQoaW50ZWxfY29udGV4dCwgaW50ZWxfY29u
dGV4dF9iYW4sCisJICAgICBUUF9QUk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAg
ICAgVFBfQVJHUyhjZSkKKyk7CisKK0RFRklORV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9j
b250ZXh0X3JlZ2lzdGVyLAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQoaW50ZWxfY29udGV4dCwg
aW50ZWxfY29udGV4dF9kZXJlZ2lzdGVyLAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQoaW50ZWxf
Y29udGV4dCwgaW50ZWxfY29udGV4dF9kZXJlZ2lzdGVyX2RvbmUsCisJICAgICBUUF9QUk9UTyhz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJHUyhjZSkKKyk7CisKK0RFRklO
RV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0X3NjaGVkX2VuYWJsZSwKKwkgICAg
IFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgICBUUF9BUkdTKGNlKQor
KTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRleHRfc2NoZWRfZGlz
YWJsZSwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgICBU
UF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRl
eHRfc2NoZWRfZG9uZSwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSks
CisJICAgICBUUF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGlu
dGVsX2NvbnRleHRfY3JlYXRlLAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQoaW50ZWxfY29udGV4
dCwgaW50ZWxfY29udGV4dF9mZW5jZV9yZWxlYXNlLAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQo
aW50ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9mcmVlLAorCSAgICAgVFBfUFJPVE8oc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZF
TlQoaW50ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9zdGVhbF9ndWNfaWQsCisJICAgICBUUF9Q
Uk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJHUyhjZSkKKyk7CisK
K0RFRklORV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0X2RvX3BpbiwKKwkgICAg
IFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgICBUUF9BUkdTKGNlKQor
KTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRleHRfZG9fdW5waW4s
CisJICAgICBUUF9QUk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJH
UyhjZSkKKyk7CisKICNlbHNlCiAjaWYgIWRlZmluZWQoVFJBQ0VfSEVBREVSX01VTFRJX1JFQUQp
CitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2k5MTVfcmVxdWVzdF9ndWNfc3VibWl0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQoreworfQorCiBzdGF0aWMgaW5saW5lIHZvaWQKIHRyYWNlX2k5
MTVfcmVxdWVzdF9zdWJtaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CkBAIC05MDYsNiAr
MTAyNCw4MSBAQCBzdGF0aWMgaW5saW5lIHZvaWQKIHRyYWNlX2k5MTVfcmVxdWVzdF9vdXQoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CiB9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2Vf
aW50ZWxfY29udGV4dF9zZXRfcHJpbyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9yZXNldChzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCit7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxf
Y29udGV4dF9iYW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5s
aW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfcmVnaXN0ZXIoc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRf
ZGVyZWdpc3RlcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9kZXJlZ2lzdGVyX2RvbmUoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2Nv
bnRleHRfc2NoZWRfZW5hYmxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3Rh
dGljIGlubGluZSB2b2lkCit0cmFjZV9pbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2FibGUoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2lu
dGVsX2NvbnRleHRfc2NoZWRfZG9uZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9jcmVhdGUoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVs
X2NvbnRleHRfZmVuY2VfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9mcmVlKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lkCit0cmFjZV9pbnRlbF9j
b250ZXh0X3N0ZWFsX2d1Y19pZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisKK3N0
YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9kb19waW4oc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2Nv
bnRleHRfZG9fdW5waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworfQogI2VuZGlmCiAj
ZW5kaWYKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVf
cmVxdWVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfcmVxdWVzdC5j
CmluZGV4IGJkNWM5NmE3N2JhMy4uZDY3NzEwZDEwNjE1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvc2VsZnRlc3RzL2k5MTVfcmVxdWVzdC5jCkBAIC0xMzEzLDcgKzEzMTMsNyBAQCBzdGF0
aWMgaW50IF9fbGl2ZV9wYXJhbGxlbF9lbmdpbmUxKHZvaWQgKmFyZykKIAkJaTkxNV9yZXF1ZXN0
X2FkZChycSk7CiAKIAkJZXJyID0gMDsKLQkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBI
WiAvIDUpIDwgMCkKKwkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWikgPCAwKQogCQkJ
ZXJyID0gLUVUSU1FOwogCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIAkJaWYgKGVycikKQEAgLTE0
MTksNyArMTQxOSw3IEBAIHN0YXRpYyBpbnQgX19saXZlX3BhcmFsbGVsX3NwaW4odm9pZCAqYXJn
KQogCX0KIAlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW4pOwogCi0JaWYgKGVyciA9PSAwICYmIGk5MTVf
cmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDUpIDwgMCkKKwlpZiAoZXJyID09IDAgJiYgaTkxNV9y
ZXF1ZXN0X3dhaXQocnEsIDAsIEhaKSA8IDApCiAJCWVyciA9IC1FSU87CiAJaTkxNV9yZXF1ZXN0
X3B1dChycSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9p
Z3RfZmx1c2hfdGVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2lndF9mbHVz
aF90ZXN0LmMKaW5kZXggN2IwOTM5ZTNmMDA3Li5hNmM3MWZjYTYxYWEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5jCkBAIC0xOSw3ICsxOSw3
IEBAIGludCBpZ3RfZmx1c2hfdGVzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAog
CWNvbmRfcmVzY2hlZCgpOwogCi0JaWYgKGludGVsX2d0X3dhaXRfZm9yX2lkbGUoZ3QsIEhaIC8g
NSkgPT0gLUVUSU1FKSB7CisJaWYgKGludGVsX2d0X3dhaXRfZm9yX2lkbGUoZ3QsIEhaKSA9PSAt
RVRJTUUpIHsKIAkJcHJfZXJyKCIlcFMgdGltZWQgb3V0LCBjYW5jZWxsaW5nIGFsbCBmdXJ0aGVy
IHRlc3RpbmcuXG4iLAogCQkgICAgICAgX19idWlsdGluX3JldHVybl9hZGRyZXNzKDApKTsKIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2lndF9saXZlX3Rlc3Qu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMKaW5kZXgg
YzEzMDAxMGE3MDMzLi4xYzcyMTU0MmUyNzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L3NlbGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
c2VsZnRlc3RzL2lndF9saXZlX3Rlc3QuYwpAQCAtNSw3ICs1LDcgQEAKICAqLwogCiAjaW5jbHVk
ZSAiaTkxNV9kcnYuaCIKLSNpbmNsdWRlICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgorI2luY2x1
ZGUgImd0L2ludGVsX2d0LmgiCiAKICNpbmNsdWRlICIuLi9pOTE1X3NlbGZ0ZXN0LmgiCiAjaW5j
bHVkZSAiaWd0X2ZsdXNoX3Rlc3QuaCIKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvc2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmMKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5lYmQ2ZDY5YjMzMTUKLS0tIC9kZXYvbnVsbAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBlcnMuYwpA
QCAtMCwwICsxLDg5IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAorICoK
KyAqIENvcHlyaWdodCDCqSAyMDE4IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworLy8jaW5jbHVk
ZSAiZ3QvaW50ZWxfZW5naW5lX3VzZXIuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2lu
Y2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5oIgorCisjaW5jbHVk
ZSAic2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgiCisKKyNkZWZpbmUgUkVEVUNF
RF9USU1FU0xJQ0UJNQorI2RlZmluZSBSRURVQ0VEX1BSRUVNUFQJCTEwCisjZGVmaW5lIFdBSVRf
Rk9SX1JFU0VUX1RJTUUJMTAwMDAKKworaW50IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9wb2xpY3ko
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSBzdHJ1Y3QgaW50ZWxfc2VsZnRl
c3Rfc2F2ZWRfcG9saWN5ICpzYXZlZCwKKwkJCQkgdTMyIG1vZGlmeV90eXBlKQorCit7CisJaW50
IGVycjsKKworCXNhdmVkLT5yZXNldCA9IGVuZ2luZS0+aTkxNS0+cGFyYW1zLnJlc2V0OworCXNh
dmVkLT5mbGFncyA9IGVuZ2luZS0+ZmxhZ3M7CisJc2F2ZWQtPnRpbWVzbGljZSA9IGVuZ2luZS0+
cHJvcHMudGltZXNsaWNlX2R1cmF0aW9uX21zOworCXNhdmVkLT5wcmVlbXB0X3RpbWVvdXQgPSBl
bmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tczsKKworCXN3aXRjaCAobW9kaWZ5X3R5cGUp
IHsKKwljYXNlIFNFTEZURVNUX1NDSEVEVUxFUl9NT0RJRllfRkFTVF9SRVNFVDoKKwkJLyoKKwkJ
ICogRW5hYmxlIGZvcmNlIHByZS1lbXB0aW9uIG9uIHRpbWUgc2xpY2UgZXhwaXJhdGlvbgorCQkg
KiB0b2dldGhlciB3aXRoIGVuZ2luZSByZXNldCBvbiBwcmUtZW1wdGlvbiB0aW1lb3V0LgorCQkg
KiBUaGlzIGlzIHJlcXVpcmVkIHRvIG1ha2UgdGhlIEd1QyBub3RpY2UgYW5kIHJlc2V0CisJCSAq
IHRoZSBzaW5nbGUgaGFuZ2luZyBjb250ZXh0LgorCQkgKiBBbHNvLCByZWR1Y2UgdGhlIHByZWVt
cHRpb24gdGltZW91dCB0byBzb21ldGhpbmcKKwkJICogc21hbGwgdG8gc3BlZWQgdGhlIHRlc3Qg
dXAuCisJCSAqLworCQllbmdpbmUtPmk5MTUtPnBhcmFtcy5yZXNldCA9IDI7CisJCWVuZ2luZS0+
ZmxhZ3MgfD0gSTkxNV9FTkdJTkVfV0FOVF9GT1JDRURfUFJFRU1QVElPTjsKKwkJZW5naW5lLT5w
cm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMgPSBSRURVQ0VEX1RJTUVTTElDRTsKKwkJZW5naW5l
LT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMgPSBSRURVQ0VEX1BSRUVNUFQ7CisJCWJyZWFrOwor
CisJY2FzZSBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX05PX0hBTkdDSEVDSzoKKwkJZW5naW5l
LT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMgPSAwOworCQlicmVhazsKKworCWRlZmF1bHQ6CisJ
CXByX2VycigiSW52YWxpZCBzY2hlZHVsZXIgcG9saWN5IG1vZGlmaWNhdGlvbiB0eXBlOiAlZCFc
biIsIG1vZGlmeV90eXBlKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJaWYgKCFpbnRlbF9l
bmdpbmVfdXNlc19ndWMoZW5naW5lKSkKKwkJcmV0dXJuIDA7CisKKwllcnIgPSBpbnRlbF9ndWNf
Z2xvYmFsX3BvbGljaWVzX3VwZGF0ZSgmZW5naW5lLT5ndC0+dWMuZ3VjKTsKKwlpZiAoZXJyKQor
CQlpbnRlbF9zZWxmdGVzdF9yZXN0b3JlX3BvbGljeShlbmdpbmUsIHNhdmVkKTsKKworCXJldHVy
biBlcnI7Cit9CisKK2ludCBpbnRlbF9zZWxmdGVzdF9yZXN0b3JlX3BvbGljeShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJICBzdHJ1Y3QgaW50ZWxfc2VsZnRlc3Rfc2F2ZWRf
cG9saWN5ICpzYXZlZCkKK3sKKwkvKiBSZXN0b3JlIHRoZSBvcmlnaW5hbCBwb2xpY2llcyAqLwor
CWVuZ2luZS0+aTkxNS0+cGFyYW1zLnJlc2V0ID0gc2F2ZWQtPnJlc2V0OworCWVuZ2luZS0+Zmxh
Z3MgPSBzYXZlZC0+ZmxhZ3M7CisJZW5naW5lLT5wcm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMg
PSBzYXZlZC0+dGltZXNsaWNlOworCWVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zID0g
c2F2ZWQtPnByZWVtcHRfdGltZW91dDsKKworCWlmICghaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVu
Z2luZSkpCisJCXJldHVybiAwOworCisJcmV0dXJuIGludGVsX2d1Y19nbG9iYWxfcG9saWNpZXNf
dXBkYXRlKCZlbmdpbmUtPmd0LT51Yy5ndWMpOworfQorCitpbnQgaW50ZWxfc2VsZnRlc3Rfd2Fp
dF9mb3JfcnEoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJbG9uZyByZXQ7CisKKwlyZXQg
PSBpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgV0FJVF9GT1JfUkVTRVRfVElNRSk7CisJaWYgKHJl
dCA8IDApCisJCXJldHVybiByZXQ7CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4wNTBiYzVhOGJhOGIKLS0tIC9k
ZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1
bGVyX2hlbHBlcnMuaApAQCAtMCwwICsxLDM1IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmll
cjogTUlUICovCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTQtMjAxOSBJbnRlbCBDb3Jwb3JhdGlv
bgorICovCisKKyNpZm5kZWYgX0lOVEVMX1NFTEZURVNUX1NDSEVEVUxFUl9IRUxQRVJTX0hfCisj
ZGVmaW5lIF9JTlRFTF9TRUxGVEVTVF9TQ0hFRFVMRVJfSEVMUEVSU19IXworCisjaW5jbHVkZSA8
bGludXgvdHlwZXMuaD4KKworc3RydWN0IGk5MTVfcmVxdWVzdDsKK3N0cnVjdCBpbnRlbF9lbmdp
bmVfY3M7CisKK3N0cnVjdCBpbnRlbF9zZWxmdGVzdF9zYXZlZF9wb2xpY3kKK3sKKwl1MzIgZmxh
Z3M7CisJdTMyIHJlc2V0OworCXU2NCB0aW1lc2xpY2U7CisJdTY0IHByZWVtcHRfdGltZW91dDsK
K307CisKK2VudW0gc2VsZnRlc3Rfc2NoZWR1bGVyX21vZGlmeQoreworCVNFTEZURVNUX1NDSEVE
VUxFUl9NT0RJRllfTk9fSEFOR0NIRUNLID0gMCwKKwlTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZ
X0ZBU1RfUkVTRVQsCit9OworCitpbnQgaW50ZWxfc2VsZnRlc3RfbW9kaWZ5X3BvbGljeShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJIHN0cnVjdCBpbnRlbF9zZWxmdGVzdF9z
YXZlZF9wb2xpY3kgKnNhdmVkLAorCQkJCSBlbnVtIHNlbGZ0ZXN0X3NjaGVkdWxlcl9tb2RpZnkg
bW9kaWZ5X3R5cGUpOworaW50IGludGVsX3NlbGZ0ZXN0X3Jlc3RvcmVfcG9saWN5KHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgIHN0cnVjdCBpbnRlbF9zZWxmdGVzdF9zYXZl
ZF9wb2xpY3kgKnNhdmVkKTsKK2ludCBpbnRlbF9zZWxmdGVzdF93YWl0X2Zvcl9ycSggc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpOworCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYwppbmRleCBkMTg5YzRiZDRiZWYuLjRmODE4MDE0
Njg4OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL21vY2tfZ2Vt
X2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9k
ZXZpY2UuYwpAQCAtNTIsNyArNTIsOCBAQCB2b2lkIG1vY2tfZGV2aWNlX2ZsdXNoKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1KQogCWRvIHsKIAkJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwg
Z3QsIGlkKQogCQkJbW9ja19lbmdpbmVfZmx1c2goZW5naW5lKTsKLQl9IHdoaWxlIChpbnRlbF9n
dF9yZXRpcmVfcmVxdWVzdHNfdGltZW91dChndCwgTUFYX1NDSEVEVUxFX1RJTUVPVVQpKTsKKwl9
IHdoaWxlIChpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHNfdGltZW91dChndCwgTUFYX1NDSEVEVUxF
X1RJTUVPVVQsCisJCQkJCQkgIE5VTEwpKTsKIH0KIAogc3RhdGljIHZvaWQgbW9ja19kZXZpY2Vf
cmVsZWFzZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBp
L2RybS9pOTE1X2RybS5oIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IGUyMGVl
ZWNhN2ExYy4uNDQ5MTlkMDg0OGEwIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVf
ZHJtLmgKKysrIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC01NzIsNiArNTcyLDE1
IEBAIHR5cGVkZWYgc3RydWN0IGRybV9pOTE1X2lycV93YWl0IHsKICNkZWZpbmUgICBJOTE1X1ND
SEVEVUxFUl9DQVBfUFJFRU1QVElPTgkoMXVsIDw8IDIpCiAjZGVmaW5lICAgSTkxNV9TQ0hFRFVM
RVJfQ0FQX1NFTUFQSE9SRVMJKDF1bCA8PCAzKQogI2RlZmluZSAgIEk5MTVfU0NIRURVTEVSX0NB
UF9FTkdJTkVfQlVTWV9TVEFUUwkoMXVsIDw8IDQpCisvKgorICogSW5kaWNhdGVzIHRoZSAyayB1
c2VyIHByaW9yaXR5IGxldmVscyBhcmUgc3RhdGljYWxseSBtYXBwZWQgaW50byAzIGJ1Y2tldHMg
YXMKKyAqIGZvbGxvd3M6CisgKgorICogLTFrIHRvIC0xCUxvdyBwcmlvcml0eQorICogMAkJTm9y
bWFsIHByaW9yaXR5CisgKiAxIHRvIDFrCUhpZ2hlc3QgcHJpb3JpdHkKKyAqLworI2RlZmluZSAg
IEk5MTVfU0NIRURVTEVSX0NBUF9TVEFUSUNfUFJJT1JJVFlfTUFQCSgxdWwgPDwgNSkKIAogI2Rl
ZmluZSBJOTE1X1BBUkFNX0hVQ19TVEFUVVMJCSA0MgogCi0tIAoyLjI1LjAKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

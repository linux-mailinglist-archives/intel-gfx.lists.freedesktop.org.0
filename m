Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 64B99100F92
	for <lists+intel-gfx@lfdr.de>; Tue, 19 Nov 2019 00:56:00 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 83CD56E0F2;
	Mon, 18 Nov 2019 23:55:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AB1636E0FE
 for <intel-gfx@lists.freedesktop.org>; Mon, 18 Nov 2019 23:55:47 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Nov 2019 15:55:47 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,321,1569308400"; d="scan'208";a="289422995"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga001.jf.intel.com with ESMTP; 18 Nov 2019 15:55:47 -0800
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 18 Nov 2019 15:55:30 -0800
Message-Id: <20191118235531.9353-4-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191118235531.9353-1-daniele.ceraolospurio@intel.com>
References: <20191118235531.9353-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 4/5] drm/i915/guc: kill the GuC client
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugbm93IG9ubHkgdXNlIDEgY2xpZW50IHdpdGhvdXQgYW55IHBsYW4gdG8gYWRkIG1vcmUuIFRo
ZSBjbGllbnQgaXMKYWxzbyBvbmx5IGhvbGRpbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIFdRIGFu
ZCB0aGUgcHJvY2VzcyBkZXNjLCBzbyB3ZQpjYW4ganVzdCBtb3ZlIHRob3NlIGluIHRoZSBpbnRl
bF9ndWMgc3RydWN0dXJlIGFuZCBhbHdheXMgdXNlIHN0YWdlX2lkCjAuCgp2MjogZml4IGNvbW1l
bnQgKEpvaG4pCgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxl
LmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpDYzogTWljaGFsIFdhamRlY3prbyA8bWljaGFsLndh
amRlY3prb0BpbnRlbC5jb20+CkNjOiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50
ZWwuY29tPgpDYzogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmll
d2VkLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgICAgICAgICB8ICAgNiArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmggICAgICAgIHwgICA4ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZndpZi5oICAgfCAgIDEgLQogLi4uL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIHwgMjc1ICsrKysrLS0tLS0t
LS0tLS0tLQogLi4uL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oIHwg
IDQ1ICstLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICAgICAgIHwg
IDExIC0KIDYgZmlsZXMgY2hhbmdlZCwgODkgaW5zZXJ0aW9ucygrKSwgMjU3IGRlbGV0aW9ucygt
KQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCmluZGV4IGI3MDA3Y2Q3OGM2Zi4u
YTEyZjg3MTQzNWZjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9y
ZXNldC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMKQEAgLTIx
LDYgKzIxLDcgQEAKICNpbmNsdWRlICJpbnRlbF9yZXNldC5oIgogCiAjaW5jbHVkZSAidWMvaW50
ZWxfZ3VjLmgiCisjaW5jbHVkZSAidWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKIAogI2RlZmlu
ZSBSRVNFVF9NQVhfUkVUUklFUyAzCiAKQEAgLTEwODEsNiArMTA4Miw3IEBAIHN0YXRpYyBpbmxp
bmUgaW50IGludGVsX2d0X3Jlc2V0X2VuZ2luZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiBpbnQgaW50ZWxfZW5naW5lX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwgY29uc3QgY2hhciAqbXNnKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBlbmdpbmUtPmd0
OworCWJvb2wgdXNlc19ndWMgPSBpbnRlbF9lbmdpbmVfaW5fZ3VjX3N1Ym1pc3Npb25fbW9kZShl
bmdpbmUpOwogCWludCByZXQ7CiAKIAlHRU1fVFJBQ0UoIiVzIGZsYWdzPSVseFxuIiwgZW5naW5l
LT5uYW1lLCBndC0+cmVzZXQuZmxhZ3MpOwpAQCAtMTA5NiwxNCArMTA5OCwxNCBAQCBpbnQgaW50
ZWxfZW5naW5lX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgY29uc3QgY2hh
ciAqbXNnKQogCQkJICAgIlJlc2V0dGluZyAlcyBmb3IgJXNcbiIsIGVuZ2luZS0+bmFtZSwgbXNn
KTsKIAlhdG9taWNfaW5jKCZlbmdpbmUtPmk5MTUtPmdwdV9lcnJvci5yZXNldF9lbmdpbmVfY291
bnRbZW5naW5lLT51YWJpX2NsYXNzXSk7CiAKLQlpZiAoIWVuZ2luZS0+Z3QtPnVjLmd1Yy5leGVj
YnVmX2NsaWVudCkKKwlpZiAoIXVzZXNfZ3VjKQogCQlyZXQgPSBpbnRlbF9ndF9yZXNldF9lbmdp
bmUoZW5naW5lKTsKIAllbHNlCiAJCXJldCA9IGludGVsX2d1Y19yZXNldF9lbmdpbmUoJmVuZ2lu
ZS0+Z3QtPnVjLmd1YywgZW5naW5lKTsKIAlpZiAocmV0KSB7CiAJCS8qIElmIHdlIGZhaWwgaGVy
ZSwgd2UgZXhwZWN0IHRvIGZhbGxiYWNrIHRvIGEgZ2xvYmFsIHJlc2V0ICovCiAJCURSTV9ERUJV
R19EUklWRVIoIiVzRmFpbGVkIHRvIHJlc2V0ICVzLCByZXQ9JWRcbiIsCi0JCQkJIGVuZ2luZS0+
Z3QtPnVjLmd1Yy5leGVjYnVmX2NsaWVudCA/ICJHdUMgIiA6ICIiLAorCQkJCSB1c2VzX2d1YyA/
ICJHdUMgIiA6ICIiLAogCQkJCSBlbmdpbmUtPm5hbWUsIHJldCk7CiAJCWdvdG8gb3V0OwogCX0K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmgKaW5kZXggYjJkMTc2NmU2ODlhLi5j
ZDA5YzkxMmUzNjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVs
X2d1Yy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oCkBAIC00
Niw5ICs0NiwxMyBAQCBzdHJ1Y3QgaW50ZWxfZ3VjIHsKIAogCXN0cnVjdCBpOTE1X3ZtYSAqc3Rh
Z2VfZGVzY19wb29sOwogCXZvaWQgKnN0YWdlX2Rlc2NfcG9vbF92YWRkcjsKLQlzdHJ1Y3QgaWRh
IHN0YWdlX2lkczsKIAotCXN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpleGVjYnVmX2NsaWVudDsK
KwlzdHJ1Y3QgaTkxNV92bWEgKndvcmtxdWV1ZTsKKwl2b2lkICp3b3JrcXVldWVfdmFkZHI7CisJ
c3BpbmxvY2tfdCB3cV9sb2NrOworCisJc3RydWN0IGk5MTVfdm1hICpwcm9jX2Rlc2M7CisJdm9p
ZCAqcHJvY19kZXNjX3ZhZGRyOwogCiAJLyogQ29udHJvbCBwYXJhbXMgZm9yIGZ3IGluaXRpYWxp
emF0aW9uICovCiAJdTMyIHBhcmFtc1tHVUNfQ1RMX01BWF9EV09SRFNdOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3aWYuaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmgKaW5kZXggMWU4ZTRhZjdkOWNhLi5hNmI3
MzNjMTQ2YzkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1
Y19md2lmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3aWYu
aApAQCAtMzEsNyArMzEsNiBAQAogCiAjZGVmaW5lIEdVQ19ET09SQkVMTF9JTlZBTElECQkyNTYK
IAotI2RlZmluZSBHVUNfUERfU0laRQkJCShQQUdFX1NJWkUpCiAjZGVmaW5lIEdVQ19XUV9TSVpF
CQkJKFBBR0VfU0laRSAqIDIpCiAKIC8qIFdvcmsgcXVldWUgaXRlbSBoZWFkZXIgZGVmaW5pdGlv
bnMgKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19z
dWJtaXNzaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlz
c2lvbi5jCmluZGV4IDBiODlkYTg1ODg1Yy4uZTM1ZTk5MzliMjA3IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKQEAgLTI3LDI0ICsy
NywxMyBAQAogICogY29kZSkgbWF0Y2hlcyB0aGUgb2xkIHN1Ym1pc3Npb24gbW9kZWwgYW5kIHdp
bGwgYmUgdXBkYXRlZCBhcyBwYXJ0IG9mIHRoZQogICogdXBncmFkZSB0byB0aGUgbmV3IGZsb3cu
CiAgKgotICogR3VDIGNsaWVudDoKLSAqIEEgaW50ZWxfZ3VjX2NsaWVudCByZWZlcnMgdG8gYSBz
dWJtaXNzaW9uIHBhdGggdGhyb3VnaCBHdUMuIEN1cnJlbnRseSwgdGhlcmUKLSAqIGlzIG9ubHkg
b25lIGNsaWVudCwgd2hpY2ggaXMgY2hhcmdlZCB3aXRoIGFsbCBzdWJtaXNzaW9ucyB0byB0aGUg
R3VDLiBUaGlzCi0gKiBzdHJ1Y3QgaXMgdGhlIG93bmVyIG9mIGEgcHJvY2VzcyBkZXNjcmlwdG9y
IGFuZCBhIHdvcmtxdWV1ZSAoYm90aCBvZiB0aGVtCi0gKiBpbnNpZGUgYSBzaW5nbGUgZ2VtIG9i
amVjdCB0aGF0IGNvbnRhaW5zIGFsbCByZXF1aXJlZCBwYWdlcyBmb3IgdGhlc2UKLSAqIGVsZW1l
bnRzKS4KLSAqCiAgKiBHdUMgc3RhZ2UgZGVzY3JpcHRvcjoKICAqIER1cmluZyBpbml0aWFsaXph
dGlvbiwgdGhlIGRyaXZlciBhbGxvY2F0ZXMgYSBzdGF0aWMgcG9vbCBvZiAxMDI0IHN1Y2gKLSAq
IGRlc2NyaXB0b3JzLCBhbmQgc2hhcmVzIHRoZW0gd2l0aCB0aGUgR3VDLgotICogQ3VycmVudGx5
LCB0aGVyZSBleGlzdHMgYSAxOjEgbWFwcGluZyBiZXR3ZWVuIGEgaW50ZWxfZ3VjX2NsaWVudCBh
bmQgYQotICogZ3VjX3N0YWdlX2Rlc2MgKHZpYSB0aGUgY2xpZW50J3Mgc3RhZ2VfaWQpLCBzbyBl
ZmZlY3RpdmVseSBvbmx5IG9uZQotICogZ2V0cyB1c2VkLiBUaGlzIHN0YWdlIGRlc2NyaXB0b3Ig
bGV0cyB0aGUgR3VDIGtub3cgYWJvdXQgdGhlIHdvcmtxdWV1ZSBhbmQKKyAqIGRlc2NyaXB0b3Jz
LCBhbmQgc2hhcmVzIHRoZW0gd2l0aCB0aGUgR3VDLiBDdXJyZW50bHksIHdlIG9ubHkgdXNlIG9u
ZQorICogZGVzY3JpcHRvci4gVGhpcyBzdGFnZSBkZXNjcmlwdG9yIGxldHMgdGhlIEd1QyBrbm93
IGFib3V0IHRoZSB3b3JrcXVldWUgYW5kCiAgKiBwcm9jZXNzIGRlc2NyaXB0b3IuIFRoZW9yZXRp
Y2FsbHksIGl0IGFsc28gbGV0cyB0aGUgR3VDIGtub3cgYWJvdXQgb3VyIEhXCiAgKiBjb250ZXh0
cyAoY29udGV4dCBJRCwgZXRjLi4uKSwgYnV0IHdlIGFjdHVhbGx5IGVtcGxveSBhIGtpbmQgb2Yg
c3VibWlzc2lvbgotICogd2hlcmUgdGhlIEd1QyB1c2VzIHRoZSBMUkNBIHNlbnQgdmlhIHRoZSB3
b3JrIGl0ZW0gaW5zdGVhZCAodGhlIHNpbmdsZQotICogZ3VjX3N0YWdlX2Rlc2MgYXNzb2NpYXRl
ZCB0byBleGVjYnVmIGNsaWVudCBjb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCB0aGUKLSAqIGRl
ZmF1bHQga2VybmVsIGNvbnRleHQgb25seSwgYnV0IHRoaXMgaXMgZXNzZW50aWFsbHkgdW51c2Vk
KS4gVGhpcyBpcyBjYWxsZWQKKyAqIHdoZXJlIHRoZSBHdUMgdXNlcyB0aGUgTFJDQSBzZW50IHZp
YSB0aGUgd29yayBpdGVtIGluc3RlYWQuIFRoaXMgaXMgY2FsbGVkCiAgKiBhICJwcm94eSIgc3Vi
bWlzc2lvbi4KICAqCiAgKiBUaGUgU2NyYXRjaCByZWdpc3RlcnM6CkBAIC03MSwzMyArNjAsNDUg
QEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdG9fcHJpb2xpc3Qoc3RydWN0
IHJiX25vZGUgKnJiKQogCXJldHVybiByYl9lbnRyeShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3Qs
IG5vZGUpOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgaXNfaGlnaF9wcmlvcml0eShzdHJ1Y3Qg
aW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQorc3RhdGljIHN0cnVjdCBndWNfc3RhZ2VfZGVzYyAq
X19nZXRfc3RhZ2VfZGVzYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBpZCkKIHsKLQlyZXR1
cm4gKGNsaWVudC0+cHJpb3JpdHkgPT0gR1VDX0NMSUVOVF9QUklPUklUWV9LTURfSElHSCB8fAot
CQljbGllbnQtPnByaW9yaXR5ID09IEdVQ19DTElFTlRfUFJJT1JJVFlfSElHSCk7CisJc3RydWN0
IGd1Y19zdGFnZV9kZXNjICpiYXNlID0gZ3VjLT5zdGFnZV9kZXNjX3Bvb2xfdmFkZHI7CisKKwly
ZXR1cm4gJmJhc2VbaWRdOwogfQogCi1zdGF0aWMgc3RydWN0IGd1Y19zdGFnZV9kZXNjICpfX2dl
dF9zdGFnZV9kZXNjKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCitzdGF0aWMgaW50
IGd1Y193b3JrcXVldWVfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlzdHJ1Y3Qg
Z3VjX3N0YWdlX2Rlc2MgKmJhc2UgPSBjbGllbnQtPmd1Yy0+c3RhZ2VfZGVzY19wb29sX3ZhZGRy
OwotCi0JcmV0dXJuICZiYXNlW2NsaWVudC0+c3RhZ2VfaWRdOworCXJldHVybiBpbnRlbF9ndWNf
YWxsb2NhdGVfYW5kX21hcF92bWEoZ3VjLCBHVUNfV1FfU0laRSwgJmd1Yy0+d29ya3F1ZXVlLAor
CQkJCQkgICAgICAmZ3VjLT53b3JrcXVldWVfdmFkZHIpOwogfQogCi1zdGF0aWMgaW5saW5lIHN0
cnVjdCBndWNfcHJvY2Vzc19kZXNjICoKLV9fZ2V0X3Byb2Nlc3NfZGVzYyhzdHJ1Y3QgaW50ZWxf
Z3VjX2NsaWVudCAqY2xpZW50KQorc3RhdGljIHZvaWQgZ3VjX3dvcmtxdWV1ZV9kZXN0cm95KHN0
cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlyZXR1cm4gY2xpZW50LT52YWRkcjsKKwlpOTE1X3Zt
YV91bnBpbl9hbmRfcmVsZWFzZSgmZ3VjLT53b3JrcXVldWUsIEk5MTVfVk1BX1JFTEVBU0VfTUFQ
KTsKIH0KIAogLyoKICAqIEluaXRpYWxpc2UgdGhlIHByb2Nlc3MgZGVzY3JpcHRvciBzaGFyZWQg
d2l0aCB0aGUgR3VDIGZpcm13YXJlLgogICovCi1zdGF0aWMgdm9pZCBndWNfcHJvY19kZXNjX2lu
aXQoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKK3N0YXRpYyBpbnQgZ3VjX3Byb2Nf
ZGVzY19jcmVhdGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCWNvbnN0IHUzMiBzaXplID0g
UEFHRV9BTElHTihzaXplb2Yoc3RydWN0IGd1Y19wcm9jZXNzX2Rlc2MpKTsKKworCXJldHVybiBp
bnRlbF9ndWNfYWxsb2NhdGVfYW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3VjLT5wcm9jX2Rlc2Ms
CisJCQkJCSAgICAgICZndWMtPnByb2NfZGVzY192YWRkcik7Cit9CisKK3N0YXRpYyB2b2lkIGd1
Y19wcm9jX2Rlc2NfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaTkxNV92bWFf
dW5waW5fYW5kX3JlbGVhc2UoJmd1Yy0+cHJvY19kZXNjLCBJOTE1X1ZNQV9SRUxFQVNFX01BUCk7
Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19wcm9jX2Rlc2NfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCiB7CiAJc3RydWN0IGd1Y19wcm9jZXNzX2Rlc2MgKmRlc2M7CiAKLQlkZXNjID0gbWVtc2V0
KF9fZ2V0X3Byb2Nlc3NfZGVzYyhjbGllbnQpLCAwLCBzaXplb2YoKmRlc2MpKTsKKwlkZXNjID0g
bWVtc2V0KGd1Yy0+cHJvY19kZXNjX3ZhZGRyLCAwLCBzaXplb2YoKmRlc2MpKTsKIAogCS8qCiAJ
ICogWFhYOiBwRG9vcmJlbGwgYW5kIFdRVkJhc2VBZGRyZXNzIGFyZSBwb2ludGVycyBpbiBwcm9j
ZXNzIGFkZHJlc3MKQEAgLTEwOCwzOSArMTA5LDI3IEBAIHN0YXRpYyB2b2lkIGd1Y19wcm9jX2Rl
c2NfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQogCWRlc2MtPndxX2Jhc2Vf
YWRkciA9IDA7CiAJZGVzYy0+ZGJfYmFzZV9hZGRyID0gMDsKIAotCWRlc2MtPnN0YWdlX2lkID0g
Y2xpZW50LT5zdGFnZV9pZDsKIAlkZXNjLT53cV9zaXplX2J5dGVzID0gR1VDX1dRX1NJWkU7CiAJ
ZGVzYy0+d3Ffc3RhdHVzID0gV1FfU1RBVFVTX0FDVElWRTsKLQlkZXNjLT5wcmlvcml0eSA9IGNs
aWVudC0+cHJpb3JpdHk7CisJZGVzYy0+cHJpb3JpdHkgPSBHVUNfQ0xJRU5UX1BSSU9SSVRZX0tN
RF9OT1JNQUw7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19wcm9jX2Rlc2NfZmluaShzdHJ1Y3QgaW50
ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQorc3RhdGljIHZvaWQgZ3VjX3Byb2NfZGVzY19maW5pKHN0
cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlzdHJ1Y3QgZ3VjX3Byb2Nlc3NfZGVzYyAqZGVzYzsK
LQotCWRlc2MgPSBfX2dldF9wcm9jZXNzX2Rlc2MoY2xpZW50KTsKLQltZW1zZXQoZGVzYywgMCwg
c2l6ZW9mKCpkZXNjKSk7CisJbWVtc2V0KGd1Yy0+cHJvY19kZXNjX3ZhZGRyLCAwLCBzaXplb2Yo
c3RydWN0IGd1Y19wcm9jZXNzX2Rlc2MpKTsKIH0KIAogc3RhdGljIGludCBndWNfc3RhZ2VfZGVz
Y19wb29sX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJdTMyIHNpemUgPSBQQUdF
X0FMSUdOKHNpemVvZihzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MpICoKIAkJCSAgICAgIEdVQ19NQVhf
U1RBR0VfREVTQ1JJUFRPUlMpOwotCWludCByZXQ7Ci0KLQlyZXQgPSBpbnRlbF9ndWNfYWxsb2Nh
dGVfYW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3VjLT5zdGFnZV9kZXNjX3Bvb2wsCi0JCQkJCSAg
ICAgJmd1Yy0+c3RhZ2VfZGVzY19wb29sX3ZhZGRyKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0
OwotCi0JaWRhX2luaXQoJmd1Yy0+c3RhZ2VfaWRzKTsKIAotCXJldHVybiAwOworCXJldHVybiBp
bnRlbF9ndWNfYWxsb2NhdGVfYW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3VjLT5zdGFnZV9kZXNj
X3Bvb2wsCisJCQkJCSAgICAgICZndWMtPnN0YWdlX2Rlc2NfcG9vbF92YWRkcik7CiB9CiAKIHN0
YXRpYyB2b2lkIGd1Y19zdGFnZV9kZXNjX3Bvb2xfZGVzdHJveShzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCiB7Ci0JaWRhX2Rlc3Ryb3koJmd1Yy0+c3RhZ2VfaWRzKTsKIAlpOTE1X3ZtYV91bnBpbl9h
bmRfcmVsZWFzZSgmZ3VjLT5zdGFnZV9kZXNjX3Bvb2wsIEk5MTVfVk1BX1JFTEVBU0VfTUFQKTsK
IH0KIApAQCAtMTQ4LDU4ICsxMzcsNDkgQEAgc3RhdGljIHZvaWQgZ3VjX3N0YWdlX2Rlc2NfcG9v
bF9kZXN0cm95KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKICAqIEluaXRpYWxpc2UvY2xlYXIgdGhl
IHN0YWdlIGRlc2NyaXB0b3Igc2hhcmVkIHdpdGggdGhlIEd1QyBmaXJtd2FyZS4KICAqCiAgKiBU
aGlzIGRlc2NyaXB0b3IgdGVsbHMgdGhlIEd1QyB3aGVyZSAoaW4gR0dUVCBzcGFjZSkgdG8gZmlu
ZCB0aGUgaW1wb3J0YW50Ci0gKiBkYXRhIHN0cnVjdHVyZXMgcmVsYXRpbmcgdG8gdGhpcyBjbGll
bnQgKHByb2Nlc3MgZGVzY3JpcHRvciwgd3JpdGUgcXVldWUsCisgKiBkYXRhIHN0cnVjdHVyZXMg
cmVsYXRlZCB0byB3b3JrIHN1Ym1pc3Npb24gKHByb2Nlc3MgZGVzY3JpcHRvciwgd3JpdGUgcXVl
dWUsCiAgKiBldGMpLgogICovCi1zdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19pbml0KHN0cnVj
dCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCitzdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19p
bml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSBj
bGllbnQtPmd1YzsKIAlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2M7Ci0JdTMyIGdmeF9hZGRy
OwogCi0JZGVzYyA9IF9fZ2V0X3N0YWdlX2Rlc2MoY2xpZW50KTsKKwkvKiB3ZSBvbmx5IHVzZSAx
IHN0YWdlIGRlc2MsIHNvIGhhcmRjb2RlIGl0IHRvIDAgKi8KKwlkZXNjID0gX19nZXRfc3RhZ2Vf
ZGVzYyhndWMsIDApOwogCW1lbXNldChkZXNjLCAwLCBzaXplb2YoKmRlc2MpKTsKIAogCWRlc2Mt
PmF0dHJpYnV0ZSA9IEdVQ19TVEFHRV9ERVNDX0FUVFJfQUNUSVZFIHwKIAkJCSAgR1VDX1NUQUdF
X0RFU0NfQVRUUl9LRVJORUw7Ci0JaWYgKGlzX2hpZ2hfcHJpb3JpdHkoY2xpZW50KSkKLQkJZGVz
Yy0+YXR0cmlidXRlIHw9IEdVQ19TVEFHRV9ERVNDX0FUVFJfUFJFRU1QVDsKLQlkZXNjLT5zdGFn
ZV9pZCA9IGNsaWVudC0+c3RhZ2VfaWQ7Ci0JZGVzYy0+cHJpb3JpdHkgPSBjbGllbnQtPnByaW9y
aXR5OwogCi0JLyoKLQkgKiBUaGUgcHJvY2VzcyBkZXNjcmlwdG9yIGFuZCB3b3JrcXVldWUgYXJl
IGFsbCBwYXJ0cyBvZiB0aGUgY2xpZW50Ci0JICogb2JqZWN0LCB3aGljaCB0aGUgR3VDIHdpbGwg
cmVmZXJlbmNlIHZpYSB0aGUgR0dUVAotCSAqLwotCWdmeF9hZGRyID0gaW50ZWxfZ3VjX2dndHRf
b2Zmc2V0KGd1YywgY2xpZW50LT52bWEpOwotCWRlc2MtPnByb2Nlc3NfZGVzYyA9IGdmeF9hZGRy
OwotCWRlc2MtPndxX2FkZHIgPSBnZnhfYWRkciArIEdVQ19QRF9TSVpFOwotCWRlc2MtPndxX3Np
emUgPSBHVUNfV1FfU0laRTsKKwlkZXNjLT5zdGFnZV9pZCA9IDA7CisJZGVzYy0+cHJpb3JpdHkg
PSBHVUNfQ0xJRU5UX1BSSU9SSVRZX0tNRF9OT1JNQUw7CiAKLQlkZXNjLT5kZXNjX3ByaXZhdGUg
PSBwdHJfdG9fdTY0KGNsaWVudCk7CisJZGVzYy0+cHJvY2Vzc19kZXNjID0gaW50ZWxfZ3VjX2dn
dHRfb2Zmc2V0KGd1YywgZ3VjLT5wcm9jX2Rlc2MpOworCWRlc2MtPndxX2FkZHIgPSBpbnRlbF9n
dWNfZ2d0dF9vZmZzZXQoZ3VjLCBndWMtPndvcmtxdWV1ZSk7CisJZGVzYy0+d3Ffc2l6ZSA9IEdV
Q19XUV9TSVpFOwogfQogCi1zdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19maW5pKHN0cnVjdCBp
bnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCitzdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19maW5p
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKIAlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2M7
CiAKLQlkZXNjID0gX19nZXRfc3RhZ2VfZGVzYyhjbGllbnQpOworCWRlc2MgPSBfX2dldF9zdGFn
ZV9kZXNjKGd1YywgMCk7CiAJbWVtc2V0KGRlc2MsIDAsIHNpemVvZigqZGVzYykpOwogfQogCiAv
KiBDb25zdHJ1Y3QgYSBXb3JrIEl0ZW0gYW5kIGFwcGVuZCBpdCB0byB0aGUgR3VDJ3MgV29yayBR
dWV1ZSAqLwotc3RhdGljIHZvaWQgZ3VjX3dxX2l0ZW1fYXBwZW5kKHN0cnVjdCBpbnRlbF9ndWNf
Y2xpZW50ICpjbGllbnQsCitzdGF0aWMgdm9pZCBndWNfd3FfaXRlbV9hcHBlbmQoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjLAogCQkJICAgICAgIHUzMiB0YXJnZXRfZW5naW5lLCB1MzIgY29udGV4dF9k
ZXNjLAogCQkJICAgICAgIHUzMiByaW5nX3RhaWwsIHUzMiBmZW5jZV9pZCkKIHsKIAkvKiB3cWlf
bGVuIGlzIGluIERXb3JkcywgYW5kIGRvZXMgbm90IGluY2x1ZGUgdGhlIG9uZS13b3JkIGhlYWRl
ciAqLwogCWNvbnN0IHNpemVfdCB3cWlfc2l6ZSA9IHNpemVvZihzdHJ1Y3QgZ3VjX3dxX2l0ZW0p
OwogCWNvbnN0IHUzMiB3cWlfbGVuID0gd3FpX3NpemUgLyBzaXplb2YodTMyKSAtIDE7Ci0Jc3Ry
dWN0IGd1Y19wcm9jZXNzX2Rlc2MgKmRlc2MgPSBfX2dldF9wcm9jZXNzX2Rlc2MoY2xpZW50KTsK
KwlzdHJ1Y3QgZ3VjX3Byb2Nlc3NfZGVzYyAqZGVzYyA9IGd1Yy0+cHJvY19kZXNjX3ZhZGRyOwog
CXN0cnVjdCBndWNfd3FfaXRlbSAqd3FpOwogCXUzMiB3cV9vZmY7CiAKLQlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZjbGllbnQtPndxX2xvY2spOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmd1Yy0+d3Ff
bG9jayk7CiAKIAkvKiBGb3Igbm93IHdvcmtxdWV1ZSBpdGVtIGlzIDQgRFdzOyB3b3JrcXVldWUg
YnVmZmVyIGlzIDIgcGFnZXMuIFNvIHdlCiAJICogc2hvdWxkIG5vdCBoYXZlIHRoZSBjYXNlIHdo
ZXJlIHN0cnVjdHVyZSB3cWkgaXMgYWNyb3NzIHBhZ2UsIG5laXRoZXIKQEAgLTIyMCw3ICsyMDAs
NyBAQCBzdGF0aWMgdm9pZCBndWNfd3FfaXRlbV9hcHBlbmQoc3RydWN0IGludGVsX2d1Y19jbGll
bnQgKmNsaWVudCwKIAlHRU1fQlVHX09OKHdxX29mZiAmICh3cWlfc2l6ZSAtIDEpKTsKIAogCS8q
IFdRIHN0YXJ0cyBmcm9tIHRoZSBwYWdlIGFmdGVyIHByb2Nlc3NfZGVzYyAqLwotCXdxaSA9IGNs
aWVudC0+dmFkZHIgKyB3cV9vZmYgKyBHVUNfUERfU0laRTsKKwl3cWkgPSBndWMtPndvcmtxdWV1
ZV92YWRkciArIHdxX29mZjsKIAogCS8qIE5vdyBmaWxsIGluIHRoZSA0LXdvcmQgd29yayBxdWV1
ZSBpdGVtICovCiAJd3FpLT5oZWFkZXIgPSBXUV9UWVBFX0lOT1JERVIgfApAQCAtMjM4LDEyICsy
MTgsMTEgQEAgc3RhdGljIHZvaWQgZ3VjX3dxX2l0ZW1fYXBwZW5kKHN0cnVjdCBpbnRlbF9ndWNf
Y2xpZW50ICpjbGllbnQsCiAKIHN0YXRpYyB2b2lkIGd1Y19hZGRfcmVxdWVzdChzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCXN0cnVjdCBpbnRlbF9n
dWNfY2xpZW50ICpjbGllbnQgPSBndWMtPmV4ZWNidWZfY2xpZW50OwogCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSA9IHJxLT5lbmdpbmU7CiAJdTMyIGN0eF9kZXNjID0gbG93ZXJfMzJf
Yml0cyhycS0+aHdfY29udGV4dC0+bHJjX2Rlc2MpOwogCXUzMiByaW5nX3RhaWwgPSBpbnRlbF9y
aW5nX3NldF90YWlsKHJxLT5yaW5nLCBycS0+dGFpbCkgLyBzaXplb2YodTY0KTsKIAotCWd1Y193
cV9pdGVtX2FwcGVuZChjbGllbnQsIGVuZ2luZS0+Z3VjX2lkLCBjdHhfZGVzYywKKwlndWNfd3Ff
aXRlbV9hcHBlbmQoZ3VjLCBlbmdpbmUtPmd1Y19pZCwgY3R4X2Rlc2MsCiAJCQkgICByaW5nX3Rh
aWwsIHJxLT5mZW5jZS5zZXFubyk7CiB9CiAKQEAgLTI2Nyw5ICsyNDYsOCBAQCBzdGF0aWMgdm9p
ZCBndWNfc3VibWl0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJICAgICAgIHN0
cnVjdCBpOTE1X3JlcXVlc3QgKiplbmQpCiB7CiAJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmVu
Z2luZS0+Z3QtPnVjLmd1YzsKLQlzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50ID0gZ3Vj
LT5leGVjYnVmX2NsaWVudDsKIAotCXNwaW5fbG9jaygmY2xpZW50LT53cV9sb2NrKTsKKwlzcGlu
X2xvY2soJmd1Yy0+d3FfbG9jayk7CiAKIAlkbyB7CiAJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
ID0gKm91dCsrOwpAQCAtMjc4LDcgKzI1Niw3IEBAIHN0YXRpYyB2b2lkIGd1Y19zdWJtaXQoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQlndWNfYWRkX3JlcXVlc3QoZ3VjLCBycSk7
CiAJfSB3aGlsZSAob3V0ICE9IGVuZCk7CiAKLQlzcGluX3VubG9jaygmY2xpZW50LT53cV9sb2Nr
KTsKKwlzcGluX3VubG9jaygmZ3VjLT53cV9sb2NrKTsKIH0KIAogc3RhdGljIGlubGluZSBpbnQg
cnFfcHJpbyhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKQEAgLTUyOSwxMjYgKzUwNyw2
IEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9maW5pc2goc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogICogcGF0aCBvZiBndWNfc3VibWl0KCkgYWJvdmUuCiAgKi8KIAotLyoqCi0gKiBn
dWNfY2xpZW50X2FsbG9jKCkgLSBBbGxvY2F0ZSBhbiBpbnRlbF9ndWNfY2xpZW50Ci0gKiBAZ3Vj
Ogl0aGUgaW50ZWxfZ3VjIHN0cnVjdHVyZQotICogQHByaW9yaXR5Oglmb3VyIGxldmVscyBwcmlv
cml0eSBfQ1JJVElDQUwsIF9ISUdILCBfTk9STUFMIGFuZCBfTE9XCi0gKgkJVGhlIGtlcm5lbCBj
bGllbnQgdG8gcmVwbGFjZSBFeGVjTGlzdCBzdWJtaXNzaW9uIGlzIGNyZWF0ZWQgd2l0aAotICoJ
CU5PUk1BTCBwcmlvcml0eS4gUHJpb3JpdHkgb2YgYSBjbGllbnQgZm9yIHNjaGVkdWxlciBjYW4g
YmUgSElHSCwKLSAqCQl3aGlsZSBhIHByZWVtcHRpb24gY29udGV4dCBjYW4gdXNlIENSSVRJQ0FM
LgotICoKLSAqIFJldHVybjoJQW4gaW50ZWxfZ3VjX2NsaWVudCBvYmplY3QgaWYgc3VjY2Vzcywg
ZWxzZSBOVUxMLgotICovCi1zdGF0aWMgc3RydWN0IGludGVsX2d1Y19jbGllbnQgKgotZ3VjX2Ns
aWVudF9hbGxvYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBwcmlvcml0eSkKLXsKLQlzdHJ1
Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50OwotCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwotCXZv
aWQgKnZhZGRyOwotCWludCByZXQ7Ci0KLQljbGllbnQgPSBremFsbG9jKHNpemVvZigqY2xpZW50
KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFjbGllbnQpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwotCi0JY2xpZW50LT5ndWMgPSBndWM7Ci0JY2xpZW50LT5wcmlvcml0eSA9IHByaW9yaXR5Owot
CXNwaW5fbG9ja19pbml0KCZjbGllbnQtPndxX2xvY2spOwotCi0JcmV0ID0gaWRhX3NpbXBsZV9n
ZXQoJmd1Yy0+c3RhZ2VfaWRzLCAwLCBHVUNfTUFYX1NUQUdFX0RFU0NSSVBUT1JTLAotCQkJICAg
ICBHRlBfS0VSTkVMKTsKLQlpZiAocmV0IDwgMCkKLQkJZ290byBlcnJfY2xpZW50OwotCi0JY2xp
ZW50LT5zdGFnZV9pZCA9IHJldDsKLQotCS8qIFRoZSBmaXJzdCBwYWdlIGlzIHByb2NfZGVzYy4g
VHdvIGZvbGxvd2luZyBwYWdlcyBhcmUgd3EuICovCi0Jdm1hID0gaW50ZWxfZ3VjX2FsbG9jYXRl
X3ZtYShndWMsIEdVQ19QRF9TSVpFICsgR1VDX1dRX1NJWkUpOwotCWlmIChJU19FUlIodm1hKSkg
ewotCQlyZXQgPSBQVFJfRVJSKHZtYSk7Ci0JCWdvdG8gZXJyX2lkOwotCX0KLQotCS8qIFdlJ2xs
IGtlZXAganVzdCB0aGUgZmlyc3QgKGRvb3JiZWxsL3Byb2MpIHBhZ2UgcGVybWFuZW50bHkga21h
cCdkLiAqLwotCWNsaWVudC0+dm1hID0gdm1hOwotCi0JdmFkZHIgPSBpOTE1X2dlbV9vYmplY3Rf
cGluX21hcCh2bWEtPm9iaiwgSTkxNV9NQVBfV0IpOwotCWlmIChJU19FUlIodmFkZHIpKSB7Ci0J
CXJldCA9IFBUUl9FUlIodmFkZHIpOwotCQlnb3RvIGVycl92bWE7Ci0JfQotCWNsaWVudC0+dmFk
ZHIgPSB2YWRkcjsKLQotCURSTV9ERUJVR19EUklWRVIoIm5ldyBwcmlvcml0eSAldSBjbGllbnQg
JXA6IHN0YWdlX2lkICV1XG4iLAotCQkJIHByaW9yaXR5LCBjbGllbnQsIGNsaWVudC0+c3RhZ2Vf
aWQpOwotCi0JcmV0dXJuIGNsaWVudDsKLQotZXJyX3ZtYToKLQlpOTE1X3ZtYV91bnBpbl9hbmRf
cmVsZWFzZSgmY2xpZW50LT52bWEsIDApOwotZXJyX2lkOgotCWlkYV9zaW1wbGVfcmVtb3ZlKCZn
dWMtPnN0YWdlX2lkcywgY2xpZW50LT5zdGFnZV9pZCk7Ci1lcnJfY2xpZW50OgotCWtmcmVlKGNs
aWVudCk7Ci0JcmV0dXJuIEVSUl9QVFIocmV0KTsKLX0KLQotc3RhdGljIHZvaWQgZ3VjX2NsaWVu
dF9mcmVlKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCi17Ci0JaTkxNV92bWFfdW5w
aW5fYW5kX3JlbGVhc2UoJmNsaWVudC0+dm1hLCBJOTE1X1ZNQV9SRUxFQVNFX01BUCk7Ci0JaWRh
X3NpbXBsZV9yZW1vdmUoJmNsaWVudC0+Z3VjLT5zdGFnZV9pZHMsIGNsaWVudC0+c3RhZ2VfaWQp
OwotCWtmcmVlKGNsaWVudCk7Ci19Ci0KLXN0YXRpYyBpbnQgZ3VjX2NsaWVudHNfY3JlYXRlKHN0
cnVjdCBpbnRlbF9ndWMgKmd1YykKLXsKLQlzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50
OwotCi0JR0VNX0JVR19PTihndWMtPmV4ZWNidWZfY2xpZW50KTsKLQotCWNsaWVudCA9IGd1Y19j
bGllbnRfYWxsb2MoZ3VjLCBHVUNfQ0xJRU5UX1BSSU9SSVRZX0tNRF9OT1JNQUwpOwotCWlmIChJ
U19FUlIoY2xpZW50KSkgewotCQlEUk1fRVJST1IoIkZhaWxlZCB0byBjcmVhdGUgR3VDIGNsaWVu
dCBmb3Igc3VibWlzc2lvbiFcbiIpOwotCQlyZXR1cm4gUFRSX0VSUihjbGllbnQpOwotCX0KLQln
dWMtPmV4ZWNidWZfY2xpZW50ID0gY2xpZW50OwotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyB2
b2lkIGd1Y19jbGllbnRzX2Rlc3Ryb3koc3RydWN0IGludGVsX2d1YyAqZ3VjKQotewotCXN0cnVj
dCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQ7Ci0KLQljbGllbnQgPSBmZXRjaF9hbmRfemVybygm
Z3VjLT5leGVjYnVmX2NsaWVudCk7Ci0JaWYgKGNsaWVudCkKLQkJZ3VjX2NsaWVudF9mcmVlKGNs
aWVudCk7Ci19Ci0KLXN0YXRpYyB2b2lkIF9fZ3VjX2NsaWVudF9lbmFibGUoc3RydWN0IGludGVs
X2d1Y19jbGllbnQgKmNsaWVudCkKLXsKLQlndWNfcHJvY19kZXNjX2luaXQoY2xpZW50KTsKLQln
dWNfc3RhZ2VfZGVzY19pbml0KGNsaWVudCk7Ci19Ci0KLXN0YXRpYyB2b2lkIF9fZ3VjX2NsaWVu
dF9kaXNhYmxlKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCi17Ci0JLyogTm90ZTog
QnkgdGhlIHRpbWUgd2UncmUgaGVyZSwgR3VDIG1heSBoYXZlIGFscmVhZHkgYmVlbiByZXNldCAq
LwotCWd1Y19zdGFnZV9kZXNjX2ZpbmkoY2xpZW50KTsKLQlndWNfcHJvY19kZXNjX2ZpbmkoY2xp
ZW50KTsKLX0KLQotc3RhdGljIHZvaWQgZ3VjX2NsaWVudHNfZW5hYmxlKHN0cnVjdCBpbnRlbF9n
dWMgKmd1YykKLXsKLQlfX2d1Y19jbGllbnRfZW5hYmxlKGd1Yy0+ZXhlY2J1Zl9jbGllbnQpOwot
fQotCi1zdGF0aWMgdm9pZCBndWNfY2xpZW50c19kaXNhYmxlKHN0cnVjdCBpbnRlbF9ndWMgKmd1
YykKLXsKLQlpZiAoZ3VjLT5leGVjYnVmX2NsaWVudCkKLQkJX19ndWNfY2xpZW50X2Rpc2FibGUo
Z3VjLT5leGVjYnVmX2NsaWVudCk7Ci19Ci0KIC8qCiAgKiBTZXQgdXAgdGhlIG1lbW9yeSByZXNv
dXJjZXMgdG8gYmUgc2hhcmVkIHdpdGggdGhlIEd1QyAodmlhIHRoZSBHR1RUKQogICogYXQgZmly
bXdhcmUgbG9hZGluZyB0aW1lLgpAQCAtNjY5LDEyICs1MjcsMjAgQEAgaW50IGludGVsX2d1Y19z
dWJtaXNzaW9uX2luaXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCSAqLwogCUdFTV9CVUdfT04o
IWd1Yy0+c3RhZ2VfZGVzY19wb29sKTsKIAotCXJldCA9IGd1Y19jbGllbnRzX2NyZWF0ZShndWMp
OworCXJldCA9IGd1Y193b3JrcXVldWVfY3JlYXRlKGd1Yyk7CiAJaWYgKHJldCkKIAkJZ290byBl
cnJfcG9vbDsKIAorCXJldCA9IGd1Y19wcm9jX2Rlc2NfY3JlYXRlKGd1Yyk7CisJaWYgKHJldCkK
KwkJZ290byBlcnJfd29ya3F1ZXVlOworCisJc3Bpbl9sb2NrX2luaXQoJmd1Yy0+d3FfbG9jayk7
CisKIAlyZXR1cm4gMDsKIAorZXJyX3dvcmtxdWV1ZToKKwlndWNfd29ya3F1ZXVlX2Rlc3Ryb3ko
Z3VjKTsKIGVycl9wb29sOgogCWd1Y19zdGFnZV9kZXNjX3Bvb2xfZGVzdHJveShndWMpOwogCXJl
dHVybiByZXQ7CkBAIC02ODIsMTAgKzU0OCwxMSBAQCBpbnQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25f
aW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25f
ZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7Ci0JZ3VjX2NsaWVudHNfZGVzdHJveShndWMp
OwotCi0JaWYgKGd1Yy0+c3RhZ2VfZGVzY19wb29sKQorCWlmIChndWMtPnN0YWdlX2Rlc2NfcG9v
bCkgeworCQlndWNfcHJvY19kZXNjX2Rlc3Ryb3koZ3VjKTsKKwkJZ3VjX3dvcmtxdWV1ZV9kZXN0
cm95KGd1Yyk7CiAJCWd1Y19zdGFnZV9kZXNjX3Bvb2xfZGVzdHJveShndWMpOworCX0KIH0KIAog
c3RhdGljIHZvaWQgZ3VjX2ludGVycnVwdHNfY2FwdHVyZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQpA
QCAtNzcxLDkgKzYzOCw4IEBAIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZW5hYmxlKHN0cnVj
dCBpbnRlbF9ndWMgKmd1YykKIAkJICAgICBzaXplb2Yoc3RydWN0IGd1Y193cV9pdGVtKSAqCiAJ
CSAgICAgSTkxNV9OVU1fRU5HSU5FUyA+IEdVQ19XUV9TSVpFKTsKIAotCUdFTV9CVUdfT04oIWd1
Yy0+ZXhlY2J1Zl9jbGllbnQpOwotCi0JZ3VjX2NsaWVudHNfZW5hYmxlKGd1Yyk7CisJZ3VjX3By
b2NfZGVzY19pbml0KGd1Yyk7CisJZ3VjX3N0YWdlX2Rlc2NfaW5pdChndWMpOwogCiAJLyogVGFr
ZSBvdmVyIGZyb20gbWFudWFsIGNvbnRyb2wgb2YgRUxTUCAoZXhlY2xpc3RzKSAqLwogCWd1Y19p
bnRlcnJ1cHRzX2NhcHR1cmUoZ3QpOwpAQCAtNzkwLDggKzY1NiwxMiBAQCB2b2lkIGludGVsX2d1
Y19zdWJtaXNzaW9uX2Rpc2FibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCiAJR0VNX0JVR19P
TihndC0+YXdha2UpOyAvKiBHVCBzaG91bGQgYmUgcGFya2VkIGZpcnN0ICovCiAKKwkvKiBOb3Rl
OiBCeSB0aGUgdGltZSB3ZSdyZSBoZXJlLCBHdUMgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHJlc2V0
ICovCisKIAlndWNfaW50ZXJydXB0c19yZWxlYXNlKGd0KTsKLQlndWNfY2xpZW50c19kaXNhYmxl
KGd1Yyk7CisKKwlndWNfc3RhZ2VfZGVzY19maW5pKGd1Yyk7CisJZ3VjX3Byb2NfZGVzY19maW5p
KGd1Yyk7CiB9CiAKIHN0YXRpYyBib29sIF9fZ3VjX3N1Ym1pc3Npb25fc3VwcG9ydChzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMpCkBAIC04MDksMyArNjc5LDggQEAgdm9pZCBpbnRlbF9ndWNfc3VibWlz
c2lvbl9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKIAlndWMtPnN1Ym1pc3Np
b25fc3VwcG9ydGVkID0gX19ndWNfc3VibWlzc2lvbl9zdXBwb3J0KGd1Yyk7CiB9CisKK2Jvb2wg
aW50ZWxfZW5naW5lX2luX2d1Y19zdWJtaXNzaW9uX21vZGUoY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQoreworCXJldHVybiBlbmdpbmUtPnNldF9kZWZhdWx0X3N1Ym1pc3Np
b24gPT0gZ3VjX3NldF9kZWZhdWx0X3N1Ym1pc3Npb247Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaAppbmRleCBlMmRlYjRlNmY0MmEu
LmU0MDJhMjkzMjU5MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfZ3VjX3N1Ym1pc3Npb24uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRl
bF9ndWNfc3VibWlzc2lvbi5oCkBAIC02LDQ4ICs2LDEwIEBACiAjaWZuZGVmIF9JTlRFTF9HVUNf
U1VCTUlTU0lPTl9IXwogI2RlZmluZSBfSU5URUxfR1VDX1NVQk1JU1NJT05fSF8KIAotI2luY2x1
ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CisjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAotI2luY2x1
ZGUgImd0L2ludGVsX2VuZ2luZV90eXBlcy5oIgotCi0jaW5jbHVkZSAiaTkxNV9nZW0uaCIKLSNp
bmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCi0KLXN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwotCi0v
KgotICogVGhpcyBzdHJ1Y3R1cmUgcHJpbWFyaWx5IGRlc2NyaWJlcyB0aGUgR0VNIG9iamVjdCBz
aGFyZWQgd2l0aCB0aGUgR3VDLgotICogVGhlIHNwZWNzIHNvbWV0aW1lcyByZWZlciB0byB0aGlz
IG9iamVjdCBhcyBhICJHdUMgY29udGV4dCIsIGJ1dCB3ZSB1c2UKLSAqIHRoZSB0ZXJtICJjbGll
bnQiIHRvIGF2b2lkIGNvbmZ1c2lvbiB3aXRoIGhhcmR3YXJlIGNvbnRleHRzLiBUaGlzCi0gKiBH
RU0gb2JqZWN0IGlzIGhlbGQgZm9yIHRoZSBlbnRpcmUgbGlmZXRpbWUgb2Ygb3VyIGludGVyYWN0
aW9uIHdpdGgKLSAqIHRoZSBHdUMsIGJlaW5nIGFsbG9jYXRlZCBiZWZvcmUgdGhlIEd1QyBpcyBs
b2FkZWQgd2l0aCBpdHMgZmlybXdhcmUuCi0gKiBCZWNhdXNlIHRoZXJlJ3Mgbm8gd2F5IHRvIHVw
ZGF0ZSB0aGUgYWRkcmVzcyB1c2VkIGJ5IHRoZSBHdUMgYWZ0ZXIKLSAqIGluaXRpYWxpc2F0aW9u
LCB0aGUgc2hhcmVkIG9iamVjdCBtdXN0IHN0YXkgcGlubmVkIGludG8gdGhlIEdHVFQgYXMKLSAq
IGxvbmcgYXMgdGhlIEd1QyBpcyBpbiB1c2UuIFdlIGFsc28ga2VlcCB0aGUgZmlyc3QgcGFnZSAo
b25seSkgbWFwcGVkCi0gKiBpbnRvIGtlcm5lbCBhZGRyZXNzIHNwYWNlLCBhcyBpdCBpbmNsdWRl
cyBzaGFyZWQgZGF0YSB0aGF0IG11c3QgYmUKLSAqIHVwZGF0ZWQgb24gZXZlcnkgcmVxdWVzdCBz
dWJtaXNzaW9uLgotICoKLSAqIFRoZSBzaW5nbGUgR0VNIG9iamVjdCBkZXNjcmliZWQgaGVyZSBp
cyBhY3R1YWxseSBtYWRlIHVwIG9mIHNldmVyYWwKLSAqIHNlcGFyYXRlIGFyZWFzLCBhcyBmYXIg
YXMgdGhlIEd1QyBpcyBjb25jZXJuZWQuIFRoZSBmaXJzdCBwYWdlIChrZXB0Ci0gKiBrbWFwJ2Qp
IGluY2x1ZGVzIHRoZSAicHJvY2VzcyBkZXNjcmlwdG9yIiB3aGljaCBob2xkcyBzZXF1ZW5jZSBk
YXRhIGZvcgotICogdGhlIGRvb3JiZWxsLCBhbmQgb25lIGNhY2hlbGluZSB3aGljaCBhY3R1YWxs
eSAqaXMqIHRoZSBkb29yYmVsbDsgYQotICogd3JpdGUgdG8gdGhpcyB3aWxsICJyaW5nIHRoZSBk
b29yYmVsbCIgKGkuZS4gc2VuZCBhbiBpbnRlcnJ1cHQgdG8gdGhlCi0gKiBHdUMpLiBUaGUgc3Vi
c2VxdWVudCAgcGFnZXMgb2YgdGhlIGNsaWVudCBvYmplY3QgY29uc3RpdHV0ZSB0aGUgd29yawot
ICogcXVldWUgKGEgY2lyY3VsYXIgYXJyYXkgb2Ygd29yayBpdGVtcyksIGFnYWluIGRlc2NyaWJl
ZCBpbiB0aGUgcHJvY2VzcwotICogZGVzY3JpcHRvci4gV29yayBxdWV1ZSBwYWdlcyBhcmUgbWFw
cGVkIG1vbWVudGFyaWx5IGFzIHJlcXVpcmVkLgotICovCi1zdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVu
dCB7Ci0Jc3RydWN0IGk5MTVfdm1hICp2bWE7Ci0Jdm9pZCAqdmFkZHI7Ci0Jc3RydWN0IGludGVs
X2d1YyAqZ3VjOwotCi0JLyogYml0bWFwIG9mIChob3N0KSBlbmdpbmUgaWRzICovCi0JdTMyIHBy
aW9yaXR5OwotCXUzMiBzdGFnZV9pZDsKLQotCS8qIFByb3RlY3RzIEd1QyBjbGllbnQncyBXUSBh
Y2Nlc3MgKi8KLQlzcGlubG9ja190IHdxX2xvY2s7Ci19Oworc3RydWN0IGludGVsX2d1YzsKK3N0
cnVjdCBpbnRlbF9lbmdpbmVfY3M7CiAKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25faW5pdF9l
YXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogaW50IGludGVsX2d1Y19zdWJtaXNzaW9uX2lu
aXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKQEAgLTU2LDUgKzE4LDYgQEAgdm9pZCBpbnRlbF9n
dWNfc3VibWlzc2lvbl9kaXNhYmxlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiB2b2lkIGludGVs
X2d1Y19zdWJtaXNzaW9uX2Zpbmkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIGludCBpbnRlbF9n
dWNfcHJlZW1wdF93b3JrX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRl
bF9ndWNfcHJlZW1wdF93b3JrX2Rlc3Ryb3koc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKK2Jvb2wg
aW50ZWxfZW5naW5lX2luX2d1Y19zdWJtaXNzaW9uX21vZGUoY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKTsKIAogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5j
CmluZGV4IDVkNTk3NGU3ZjNlZC4uZjMyZTdiMDE2MTk3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2RlYnVnZnMuYwpAQCAtMTgwMiwyMyArMTgwMiwxMiBAQCBzdGF0aWMgdm9pZCBpOTE1X2d1Y19s
b2dfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sCiBzdGF0aWMgaW50IGk5MTVfZ3VjX2luZm8oc3Ry
dWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKLQljb25zdCBzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMgPSAmZGV2X3ByaXYtPmd0LnVjLmd1YzsKLQlzdHJ1Y3QgaW50ZWxfZ3VjX2Ns
aWVudCAqY2xpZW50ID0gZ3VjLT5leGVjYnVmX2NsaWVudDsKIAogCWlmICghVVNFU19HVUMoZGV2
X3ByaXYpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAogCWk5MTVfZ3VjX2xvZ19pbmZvKG0sIGRldl9w
cml2KTsKIAotCWlmICghVVNFU19HVUNfU1VCTUlTU0lPTihkZXZfcHJpdikpCi0JCXJldHVybiAw
OwotCi0JR0VNX0JVR19PTighZ3VjLT5leGVjYnVmX2NsaWVudCk7Ci0KLQlzZXFfcHJpbnRmKG0s
ICJcbkd1QyBleGVjYnVmIGNsaWVudCBAICVwOlxuIiwgY2xpZW50KTsKLQlzZXFfcHJpbnRmKG0s
ICJcdFByaW9yaXR5ICVkLCBHdUMgc3RhZ2UgaW5kZXg6ICV1XG4iLAotCQkgICBjbGllbnQtPnBy
aW9yaXR5LAotCQkgICBjbGllbnQtPnN0YWdlX2lkKTsKIAkvKiBBZGQgbW9yZSBhcyByZXF1aXJl
ZCAuLi4gKi8KIAogCXJldHVybiAwOwotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZng=

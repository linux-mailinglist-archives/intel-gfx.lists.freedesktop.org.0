Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8BC0919CE00
	for <lists+intel-gfx@lfdr.de>; Fri,  3 Apr 2020 02:59:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A37BF6E057;
	Fri,  3 Apr 2020 00:59:27 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D52CD6E03F
 for <intel-gfx@lists.freedesktop.org>; Fri,  3 Apr 2020 00:59:25 +0000 (UTC)
IronPort-SDR: qqCNCcfEQMeXl1ZewBuiQzKf1h009Wagqmetv8+Cs+YEe6YDtPyU2WYetlnGYKoSv1NwUN4lm6
 Iae+u0lK0Pbg==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 02 Apr 2020 17:59:25 -0700
IronPort-SDR: 2Y8/h6qDgu5G2YZQl6J2/RUkf8CKvWjozu3OUqnE4Xv9lnFq0t4x+UwDmt9uoth9xJAITMmN00
 /JWUYAKhYlnw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,337,1580803200"; d="scan'208";a="250011862"
Received: from fmsmsx103.amr.corp.intel.com ([10.18.124.201])
 by orsmga003.jf.intel.com with ESMTP; 02 Apr 2020 17:59:24 -0700
Received: from fmsmsx156.amr.corp.intel.com (10.18.116.74) by
 FMSMSX103.amr.corp.intel.com (10.18.124.201) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Thu, 2 Apr 2020 17:59:24 -0700
Received: from fmsmsx116.amr.corp.intel.com ([169.254.2.62]) by
 fmsmsx156.amr.corp.intel.com ([169.254.13.253]) with mapi id 14.03.0439.000;
 Thu, 2 Apr 2020 17:59:24 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "ville.syrjala@linux.intel.com" <ville.syrjala@linux.intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [Intel-gfx] [PATCH 13/13] drm/i915: Move the port sync
 DP_TP_CTL stuff to the encoder hook
Thread-Index: AQHV+Vde+iv4rsZiCU6nbQ8jAUAl6ahnKVMA
Date: Fri, 3 Apr 2020 00:59:23 +0000
Message-ID: <a535d404d7436db1af6e675c674256b0f0409b69.camel@intel.com>
References: <20200313164831.5980-1-ville.syrjala@linux.intel.com>
 <20200313164831.5980-14-ville.syrjala@linux.intel.com>
In-Reply-To: <20200313164831.5980-14-ville.syrjala@linux.intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.212.184.248]
Content-ID: <887184AD6C6D6C468305AA59D3E103A5@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 13/13] drm/i915: Move the port sync
 DP_TP_CTL stuff to the encoder hook
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gRnJpLCAyMDIwLTAzLTEzIGF0IDE4OjQ4ICswMjAwLCBWaWxsZSBTeXJqYWxhIHdyb3RlOg0K
PiBGcm9tOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPg0K
PiANCj4gTW92ZSB0aGUgZmluYWwgRFBfVFBfQ1RMIGZyb2JiaW5nIG9mIHBvcnQgc3luYyB0byB0
aGUgbWFzdGVyDQo+IGVuY29kZXIncyBlbmFibGUgaG9vay4gTm93IG5lYXRseSBvdXQgb2Ygc2ln
aHQgZnJvbSB0aGUgaGlnaCBsZXZlbA0KPiBtb2Rlc2V0IGNvZGUuDQo+IA0KPiBBbmQgdGh1cyB3
ZSd2ZSBlbGltaW5hdGVkIGFsbCB0aGUgc3BlY2lhbCBjYXNpbmcgb2YgcG9ydCBzeW5jDQo+IGlu
IHRoZSBoaWdoIGxldmVsIG1vZGVzZXQgY29kZS4NCg0KUmV2aWV3ZWQtYnk6IEpvc8OpIFJvYmVy
dG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPg0KDQo+IA0KPiBTaWduZWQtb2ZmLWJ5
OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPg0KPiAtLS0N
Cj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgIHwgMzcgKysr
KysrKysNCj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwg
OTkgKysrKy0tLS0tLS0tLS0tLQ0KPiAtLS0tDQo+ICAyIGZpbGVzIGNoYW5nZWQsIDUzIGluc2Vy
dGlvbnMoKyksIDgzIGRlbGV0aW9ucygtKQ0KPiANCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RkaS5jDQo+IGluZGV4IDk4NDc1YzgxZjFkYS4uODU2YzU2Zjg0ODMzIDEw
MDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jDQo+
ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMNCj4gQEAgLTM1
NDcsNiArMzU0Nyw0MSBAQCB2b2lkIGludGVsX2RkaV9mZGlfcG9zdF9kaXNhYmxlKHN0cnVjdA0K
PiBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLA0KPiAgCWludGVsX2RlX3dyaXRlKGRldl9wcml2
LCBGRElfUlhfQ1RMKFBJUEVfQSksIHZhbCk7DQo+ICB9DQo+ICANCj4gK3N0YXRpYyB2b2lkIHRy
YW5zX3BvcnRfc3luY19zdG9wX2xpbmtfdHJhaW4oc3RydWN0DQo+IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsDQo+ICsJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5jb2Rlcg0KPiAqZW5jb2RlciwN
Cj4gKwkJCQkJICAgIGNvbnN0IHN0cnVjdA0KPiBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KQ0KPiArew0KPiArCWNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRl
Ow0KPiArCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uOw0KPiArCWludCBpOw0KPiArDQo+ICsJ
aWYgKCFjcnRjX3N0YXRlLT5zeW5jX21vZGVfc2xhdmVzX21hc2spDQo+ICsJCXJldHVybjsNCj4g
Kw0KPiArCWZvcl9lYWNoX25ld19jb25uZWN0b3JfaW5fc3RhdGUoJnN0YXRlLT5iYXNlLCBjb25u
LCBjb25uX3N0YXRlLA0KPiBpKSB7DQo+ICsJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICpzbGF2ZV9l
bmNvZGVyID0NCj4gKwkJCXRvX2ludGVsX2VuY29kZXIoY29ubl9zdGF0ZS0+YmVzdF9lbmNvZGVy
KTsNCj4gKwkJc3RydWN0IGludGVsX2NydGMgKnNsYXZlX2NydGMgPQ0KPiB0b19pbnRlbF9jcnRj
KGNvbm5fc3RhdGUtPmNydGMpOw0KPiArCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
c2xhdmVfY3J0Y19zdGF0ZTsNCj4gKw0KPiArCQlpZiAoIXNsYXZlX2NydGMpDQo+ICsJCQljb250
aW51ZTsNCj4gKw0KPiArCQlzbGF2ZV9jcnRjX3N0YXRlID0NCj4gKwkJCWludGVsX2F0b21pY19n
ZXRfbmV3X2NydGNfc3RhdGUoc3RhdGUsDQo+IHNsYXZlX2NydGMpOw0KPiArDQo+ICsJCWlmIChz
bGF2ZV9jcnRjX3N0YXRlLT5tYXN0ZXJfdHJhbnNjb2RlciAhPQ0KPiArCQkgICAgY3J0Y19zdGF0
ZS0+Y3B1X3RyYW5zY29kZXIpDQo+ICsJCQljb250aW51ZTsNCj4gKw0KPiArCQlpbnRlbF9kcF9z
dG9wX2xpbmtfdHJhaW4oZW5jX3RvX2ludGVsX2RwKHNsYXZlX2VuY29kZXIpDQo+ICk7DQo+ICsJ
fQ0KPiArDQo+ICsJdXNsZWVwX3JhbmdlKDIwMCwgNDAwKTsNCj4gKw0KPiArCWludGVsX2RwX3N0
b3BfbGlua190cmFpbihlbmNfdG9faW50ZWxfZHAoZW5jb2RlcikpOw0KPiArfQ0KPiArDQo+ICBz
dGF0aWMgdm9pZCBpbnRlbF9lbmFibGVfZGRpX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlLA0KPiAgCQkJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLA0KPiAgCQkJCWNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlDQo+ICpjcnRjX3N0YXRlLA0KPiBAQCAtMzU2Nyw2
ICszNjAyLDggQEAgc3RhdGljIHZvaWQgaW50ZWxfZW5hYmxlX2RkaV9kcChzdHJ1Y3QNCj4gaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwNCj4gIA0KPiAgCWlmIChjcnRjX3N0YXRlLT5oYXNfYXVk
aW8pDQo+ICAJCWludGVsX2F1ZGlvX2NvZGVjX2VuYWJsZShlbmNvZGVyLCBjcnRjX3N0YXRlLA0K
PiBjb25uX3N0YXRlKTsNCj4gKw0KPiArCXRyYW5zX3BvcnRfc3luY19zdG9wX2xpbmtfdHJhaW4o
c3RhdGUsIGVuY29kZXIsIGNydGNfc3RhdGUpOw0KPiAgfQ0KPiAgDQo+ICBzdGF0aWMgaTkxNV9y
ZWdfdA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
Yw0KPiBpbmRleCA4NGU1OWY2YWI4ZTQuLmNkYWU3YTY4MGU0YSAxMDA2NDQNCj4gLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gQEAgLTU0NCwxOSArNTQ0
LDI1IEBAIG5lZWRzX21vZGVzZXQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUNCj4gKnN0
YXRlKQ0KPiAgCXJldHVybiBkcm1fYXRvbWljX2NydGNfbmVlZHNfbW9kZXNldCgmc3RhdGUtPnVh
cGkpOw0KPiAgfQ0KPiAgDQo+IC1ib29sDQo+IC1pc190cmFuc19wb3J0X3N5bmNfbW9kZShjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkNCj4gLXsNCj4gLQlyZXR1cm4g
KGNydGNfc3RhdGUtPm1hc3Rlcl90cmFuc2NvZGVyICE9IElOVkFMSURfVFJBTlNDT0RFUiB8fA0K
PiAtCQljcnRjX3N0YXRlLT5zeW5jX21vZGVfc2xhdmVzX21hc2spOw0KPiAtfQ0KPiAtDQo+ICBz
dGF0aWMgYm9vbA0KPiAgaXNfdHJhbnNfcG9ydF9zeW5jX3NsYXZlKGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQ0KPiAgew0KPiAgCXJldHVybiBjcnRjX3N0YXRlLT5t
YXN0ZXJfdHJhbnNjb2RlciAhPSBJTlZBTElEX1RSQU5TQ09ERVI7DQo+ICB9DQo+ICANCj4gK3N0
YXRpYyBib29sDQo+ICtpc190cmFuc19wb3J0X3N5bmNfbWFzdGVyKGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQ0KPiArew0KPiArCXJldHVybiBjcnRjX3N0YXRlLT5z
eW5jX21vZGVfc2xhdmVzX21hc2sgIT0gMDsNCj4gK30NCj4gKw0KPiArYm9vbA0KPiAraXNfdHJh
bnNfcG9ydF9zeW5jX21vZGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUpDQo+ICt7DQo+ICsJcmV0dXJuIGlzX3RyYW5zX3BvcnRfc3luY19tYXN0ZXIoY3J0Y19zdGF0
ZSkgfHwNCj4gKwkJaXNfdHJhbnNfcG9ydF9zeW5jX3NsYXZlKGNydGNfc3RhdGUpOw0KPiArfQ0K
PiArDQo+ICAvKg0KPiAgICogUGxhdGZvcm0gc3BlY2lmaWMgaGVscGVycyB0byBjYWxjdWxhdGUg
dGhlIHBvcnQgUExMIGxvb3BiYWNrLQ0KPiAoY2xvY2subSksDQo+ICAgKiBhbmQgcG9zdC1kaXZp
ZGVyIChjbG9jay5wKSB2YWx1ZXMsIHByZS0gKGNsb2NrLnZjbykgYW5kIHBvc3QtDQo+IGRpdmlk
ZWQgZmFzdA0KPiBAQCAtMTUxMDQsNjMgKzE1MTEwLDYgQEAgc3RhdGljIHZvaWQNCj4gaW50ZWxf
Y29tbWl0X21vZGVzZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkN
Cj4gIAl9DQo+ICB9DQo+ICANCj4gLXN0YXRpYyB2b2lkIGludGVsX3NldF9kcF90cF9jdGxfbm9y
bWFsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUNCj4gKnN0YXRlLA0KPiAtCQkJCSAgICAgICBz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykNCj4gLXsNCj4gLQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAq
dW5pbml0aWFsaXplZF92YXIoY29ubik7DQo+IC0Jc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUg
KmNvbm5fc3RhdGU7DQo+IC0Jc3RydWN0IGludGVsX2RwICppbnRlbF9kcDsNCj4gLQlpbnQgaTsN
Cj4gLQ0KPiAtCWZvcl9lYWNoX25ld19jb25uZWN0b3JfaW5fc3RhdGUoJnN0YXRlLT5iYXNlLCBj
b25uLCBjb25uX3N0YXRlLA0KPiBpKSB7DQo+IC0JCWlmIChjb25uX3N0YXRlLT5jcnRjID09ICZj
cnRjLT5iYXNlKQ0KPiAtCQkJYnJlYWs7DQo+IC0JfQ0KPiAtCWludGVsX2RwID0gaW50ZWxfYXR0
YWNoZWRfZHAodG9faW50ZWxfY29ubmVjdG9yKGNvbm4pKTsNCj4gLQlpbnRlbF9kcF9zdG9wX2xp
bmtfdHJhaW4oaW50ZWxfZHApOw0KPiAtfQ0KPiAtDQo+IC1zdGF0aWMgdm9pZCBpbnRlbF91cGRh
dGVfdHJhbnNfcG9ydF9zeW5jX2NydGNzKHN0cnVjdA0KPiBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlLA0KPiAtCQkJCQkgICAgICAgc3RydWN0IGludGVsX2NydGMgKmNydGMpDQo+IC17DQo+IC0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRldik7
DQo+IC0JY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19zbGF2ZV9jcnRjX3N0YXRl
Ow0KPiAtCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZTsNCj4g
LQlzdHJ1Y3QgaW50ZWxfY3J0YyAqc2xhdmVfY3J0YzsNCj4gLQlpbnQgaTsNCj4gLQ0KPiAtCWZv
cl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBzbGF2ZV9jcnRjLA0KPiAtCQkJ
CQkgbmV3X3NsYXZlX2NydGNfc3RhdGUsIGkpIHsNCj4gLQkJaWYgKG5ld19zbGF2ZV9jcnRjX3N0
YXRlLT5tYXN0ZXJfdHJhbnNjb2RlciAhPQ0KPiAtCQkgICAgbmV3X2NydGNfc3RhdGUtPmNwdV90
cmFuc2NvZGVyKQ0KPiAtCQkJY29udGludWU7DQo+IC0NCj4gLQkJZHJtX2RiZ19rbXMoJmk5MTUt
PmRybSwNCj4gLQkJCSAgICAiVXBkYXRpbmcgdHJhbnNjb2RlciBwb3J0IHN5bmMgc2xhdmUNCj4g
W0NSVEM6JWQ6JXNdXG4iLA0KPiAtCQkJICAgIHNsYXZlX2NydGMtPmJhc2UuYmFzZS5pZCwgc2xh
dmVfY3J0Yy0NCj4gPmJhc2UubmFtZSk7DQo+IC0NCj4gLQkJaW50ZWxfZW5hYmxlX2NydGMoc3Rh
dGUsIHNsYXZlX2NydGMpOw0KPiAtCX0NCj4gLQ0KPiAtCWRybV9kYmdfa21zKCZpOTE1LT5kcm0s
DQo+IC0JCSAgICAiVXBkYXRpbmcgdHJhbnNjb2RlciBwb3J0IHN5bmMgbWFzdGVyDQo+IFtDUlRD
OiVkOiVzXVxuIiwNCj4gLQkJICAgIGNydGMtPmJhc2UuYmFzZS5pZCwgY3J0Yy0+YmFzZS5uYW1l
KTsNCj4gLQ0KPiAtCWludGVsX2VuYWJsZV9jcnRjKHN0YXRlLCBjcnRjKTsNCj4gLQ0KPiAtCWZv
cl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBzbGF2ZV9jcnRjLA0KPiAtCQkJ
CQkgbmV3X3NsYXZlX2NydGNfc3RhdGUsIGkpIHsNCj4gLQkJaWYgKG5ld19zbGF2ZV9jcnRjX3N0
YXRlLT5tYXN0ZXJfdHJhbnNjb2RlciAhPQ0KPiAtCQkgICAgbmV3X2NydGNfc3RhdGUtPmNwdV90
cmFuc2NvZGVyKQ0KPiAtCQkJY29udGludWU7DQo+IC0NCj4gLQkJaW50ZWxfc2V0X2RwX3RwX2N0
bF9ub3JtYWwoc3RhdGUsIHNsYXZlX2NydGMpOw0KPiAtCX0NCj4gLQ0KPiAtCXVzbGVlcF9yYW5n
ZSgyMDAsIDQwMCk7DQo+IC0JaW50ZWxfc2V0X2RwX3RwX2N0bF9ub3JtYWwoc3RhdGUsIGNydGMp
Ow0KPiAtfQ0KPiAtDQo+ICBzdGF0aWMgdm9pZCBpY2xfZGJ1Zl9zbGljZV9wcmVfdXBkYXRlKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUNCj4gKnN0YXRlKQ0KPiAgew0KPiAgCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsNCj4gQEAg
LTE1MjYxLDMzICsxNTIxMCwxNyBAQCBzdGF0aWMgdm9pZA0KPiBza2xfY29tbWl0X21vZGVzZXRf
ZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkNCj4gIAkJCWNvbnRpbnVl
Ow0KPiAgDQo+ICAJCWlmIChpbnRlbF9kcF9tc3RfaXNfc2xhdmVfdHJhbnMobmV3X2NydGNfc3Rh
dGUpIHx8DQo+IC0JCSAgICBpc190cmFuc19wb3J0X3N5bmNfc2xhdmUobmV3X2NydGNfc3RhdGUp
KQ0KPiArCQkgICAgaXNfdHJhbnNfcG9ydF9zeW5jX21hc3RlcihuZXdfY3J0Y19zdGF0ZSkpDQo+
ICAJCQljb250aW51ZTsNCj4gIA0KPiAgCQltb2Rlc2V0X3BpcGVzICY9IH5CSVQocGlwZSk7DQo+
ICANCj4gLQkJaWYgKGlzX3RyYW5zX3BvcnRfc3luY19tb2RlKG5ld19jcnRjX3N0YXRlKSkgew0K
PiAtCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUNCj4gKm5ld19zbGF2ZV9jcnRjX3N0
YXRlOw0KPiAtCQkJc3RydWN0IGludGVsX2NydGMgKnNsYXZlX2NydGM7DQo+IC0JCQlpbnQgaTsN
Cj4gLQ0KPiAtCQkJaW50ZWxfdXBkYXRlX3RyYW5zX3BvcnRfc3luY19jcnRjcyhzdGF0ZSwNCj4g
Y3J0Yyk7DQo+IC0NCj4gLQkJCWZvcl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRl
LA0KPiBzbGF2ZV9jcnRjLA0KPiAtCQkJCQkJCSBuZXdfc2xhdmVfY3J0Yw0KPiBfc3RhdGUsIGkp
IHsNCj4gLQ0KPiAtCQkJCS8qIFRPRE86IHVwZGF0ZSBlbnRyaWVzW10gb2Ygc2xhdmUgKi8NCj4g
LQkJCQltb2Rlc2V0X3BpcGVzICY9IH5CSVQoc2xhdmVfY3J0Yy0NCj4gPnBpcGUpOw0KPiAtCQkJ
fQ0KPiAtCQl9IGVsc2Ugew0KPiAtCQkJaW50ZWxfZW5hYmxlX2NydGMoc3RhdGUsIGNydGMpOw0K
PiAtCQl9DQo+ICsJCWludGVsX2VuYWJsZV9jcnRjKHN0YXRlLCBjcnRjKTsNCj4gIAl9DQo+ICAN
Cj4gIAkvKg0KPiAgCSAqIFRoZW4gd2UgZW5hYmxlIGFsbCByZW1haW5pbmcgcGlwZXMgdGhhdCBk
ZXBlbmQgb24gb3RoZXINCj4gLQkgKiBwaXBlcywgcmlnaHQgbm93IGl0IGlzIG9ubHkgTVNUIHNs
YXZlcyBhcyBib3RoIHBvcnQgc3luYw0KPiAtCSAqIHNsYXZlIGFuZCBtYXN0ZXIgYXJlIGVuYWJs
ZWQgdG9nZXRoZXINCj4gKwkgKiBwaXBlczogTVNUIHNsYXZlcyBhbmQgcG9ydCBzeW5jIG1hc3Rl
cnMuDQo+ICAJICovDQo+ICAJZm9yX2VhY2hfbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUs
IGNydGMsIG5ld19jcnRjX3N0YXRlLA0KPiBpKSB7DQo+ICAJCWVudW0gcGlwZSBwaXBlID0gY3J0
Yy0+cGlwZTsNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

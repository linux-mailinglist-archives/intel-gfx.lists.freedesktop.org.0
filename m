Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2D7282DFB0F
	for <lists+intel-gfx@lfdr.de>; Mon, 21 Dec 2020 11:30:02 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9408889F5B;
	Mon, 21 Dec 2020 10:29:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BDB3389F5B
 for <intel-gfx@lists.freedesktop.org>; Mon, 21 Dec 2020 10:29:56 +0000 (UTC)
IronPort-SDR: pfjGr8bUvicL4KYWFcOc7kEDOAzFUEnisUJR35PofhHz0vuITVtlHw6dATjOlX/IEbgr0cvddl
 Vq3RZoiLDurQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9841"; a="175807003"
X-IronPort-AV: E=Sophos;i="5.78,436,1599548400"; d="scan'208";a="175807003"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 21 Dec 2020 02:29:55 -0800
IronPort-SDR: M9IZIJSZOMjbCjOc0O5U/q7R0JwMRleP3me3Jq3Fp31ymxeAyA7xC/zh/p9X/GxMU7m4cKhT9n
 a5rXZV4q1Zqg==
X-IronPort-AV: E=Sophos;i="5.78,436,1599548400"; d="scan'208";a="456183084"
Received: from helsinki.fi.intel.com ([10.237.66.162])
 by fmsmga001-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 21 Dec 2020 02:29:53 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 21 Dec 2020 12:29:22 +0200
Message-Id: <20201221102923.616120-1-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.25.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v8 1/2] drm/i915/display: Support PSR Multiple
 Transcoders
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQgaXMgYSBwcmVsaW1pbmFyeSB3b3JrIGZvciBzdXBwb3J0aW5nIG11bHRpcGxlIEVEUCBQU1Ig
YW5kCkRQIFBhbmVsUmVwbGF5LiBBbmQgaXQgcmVmYWN0b3JzIHNpbmdsZXRvbiBQU1IgdG8gTXVs
dGkgVHJhbnNjb2RlcgpzdXBwb3J0YWJsZSBQU1IuCkFuZCB0aGlzIG1vdmVzIGFuZCByZW5hbWVz
IHRoZSBpOTE1X3BzciBzdHJ1Y3R1cmUgb2YgZHJtX2k5MTVfcHJpdmF0ZSdzIHRvCmludGVsX2Rw
J3MgaW50ZWxfcHNyIHN0cnVjdHVyZS4KSXQgYWxzbyBjYXVzZXMgY2hhbmdlcyBpbiBQU1IgaW50
ZXJydXB0IGhhbmRsaW5nIHJvdXRpbmUgZm9yIHN1cHBvcnRpbmcKbXVsdGlwbGUgdHJhbnNjb2Rl
cnMuIEJ1dCBpdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIHNjZW5hcmlvIGFuZCB0aW1pbmcgb2YKZW5h
YmxpbmcgYW5kIGRpc2FibGluZyBQU1IuIEFuZCBpdCBub3Qgc3VwcG9ydCBtdWx0aXBsZSBwaXBl
cyB3aXRoCmEgc2luZ2xlIHRyYW5zY29kZXIgUFNSIGNhc2UgeWV0LgoKdjI6IEZpeCBpbmRlbnRh
dGlvbiBhbmQgYWRkIGNvbW1lbnRzCnYzOiBSZW1vdmUgQmxhbmsgbGluZQp2NDogUmViYXNlZAp2
NTogUmViYXNlZCBhbmQgQWRkcmVzc2VkIEFuc2h1bWFuJ3MgcmV2aWV3IGNvbW1lbnQuCiAgICAt
IE1vdmUgY2FsbGluZyBvZiBpbnRlbF9wc3JfaW5pdCgpIHRvIGludGVsX2RwX2luaXRfY29ubmVj
dG9yKCkKdjY6IEFkZHJlc3MgQW5zaHVtYW4ncyByZXZpZXcgY29tbWVudHMKICAgLSBSZW1vdmUg
d3JvbmcgY29tbWVudHMgYW5kIGFkZCBjb21tZW50cyBmb3IgYSBsaW1pdCBvZiBzdXBwb3J0aW5n
IG9mCiAgICAgYSBzaW5nbGUgcGlwZSBQU1IKdjc6IFVwZGF0ZSBpbnRlbF9wc3JfY29tcHV0ZV9j
b25maWcoKSBmb3Igc3VwcG9ydGluZyBtdWx0aXBsZSB0cmFuc2NvZGVyCiAgICBQU1Igb24gQkRX
Kwp2ODogQWRkcmVzcyBBbnNodW1hbidzIHJldmlldyBjb21tZW50cwogICAtIFJlcGxhY2UgRFJN
X0RFQlVHX0tNUyB3aXRoIGRybV9kYmdfa21zKCkgLyBEUk1fV0FSTiB3aXRoIGRybV93YXJuKCkK
ClNpZ25lZC1vZmYtYnk6IEd3YW4tZ3llb25nIE11biA8Z3dhbi1neWVvbmcubXVuQGludGVsLmNv
bT4KQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPgpDYzog
SnVoYS1QZWtrYSBIZWlra2lsYSA8anVoYXBla2thLmhlaWtraWxhQGdtYWlsLmNvbT4KQ2M6IEFu
c2h1bWFuIEd1cHRhIDxhbnNodW1hbi5ndXB0YUBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyAgICAgIHwgICAzICsKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAgNCAtCiAuLi4vZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYyAgfCAxMTEgKystLQogLi4uL2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgIDM4ICsrCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAgfCAgMjMgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMgICAgICB8IDU3NiArKysrKysrKysrLS0tLS0tLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmggICAgICB8ICAxNCArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyAgIHwgICA2ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAgICAgfCAgMzggLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgICAgICAgICAgICAgICB8ICA0OSArLQogMTAgZmls
ZXMgY2hhbmdlZCwgNDg1IGluc2VydGlvbnMoKyksIDM3NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwppbmRleCA2ODYzMjM2ZGYxZDAuLjRiODdm
NzJjYjljMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCkBAIC00
MzIwLDcgKzQzMjAsMTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3VwZGF0ZV9waXBlX2RwKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCiAJaW50ZWxfZGRpX3NldF9kcF9tc2Eo
Y3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAKKwkvL1RPRE86IG1vdmUgUFNSIHJlbGF0ZWQgZnVu
Y3Rpb25zIGludG8gaW50ZWxfcHNyX3VwZGF0ZSgpCisJaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5z
X21hbl90cmtfY3RsKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAlpbnRlbF9wc3JfdXBkYXRlKGlu
dGVsX2RwLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKKwogCWludGVsX2RwX3NldF9pbmZvZnJh
bWVzKGVuY29kZXIsIHRydWUsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOwogCWludGVsX2VkcF9k
cnJzX3VwZGF0ZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5kZXggNzg0NTJkZTVlMTJmLi5hNzUzNjQ3YjBi
Y2IgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBA
IC0xNTg2OSw4ICsxNTg2OSw2IEBAIHN0YXRpYyB2b2lkIGNvbW1pdF9waXBlX2NvbmZpZyhzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAogCQlpZiAobmV3X2NydGNfc3RhdGUtPnVw
ZGF0ZV9waXBlKQogCQkJaW50ZWxfcGlwZV9mYXN0c2V0KG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0
Y19zdGF0ZSk7Ci0KLQkJaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKG5ld19j
cnRjX3N0YXRlKTsKIAl9CiAKIAlpZiAoZGV2X3ByaXYtPmRpc3BsYXkuYXRvbWljX3VwZGF0ZV93
YXRlcm1hcmtzKQpAQCAtMTc4MjksOCArMTc4MjcsNiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9zZXR1
cF9vdXRwdXRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaW50ZWxfZHZv
X2luaXQoZGV2X3ByaXYpOwogCX0KIAotCWludGVsX3Bzcl9pbml0KGRldl9wcml2KTsKLQogCWZv
cl9lYWNoX2ludGVsX2VuY29kZXIoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKIAkJZW5jb2Rl
ci0+YmFzZS5wb3NzaWJsZV9jcnRjcyA9CiAJCQlpbnRlbF9lbmNvZGVyX3Bvc3NpYmxlX2NydGNz
KGVuY29kZXIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV9kZWJ1Z2ZzLmMKaW5kZXggY2Q3ZTU1MTllZTdkLi4wNDEwNTMxNjdkN2YgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9kZWJ1Z2Zz
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVn
ZnMuYwpAQCAtMjQ5LDE4ICsyNDksMTcgQEAgc3RhdGljIGludCBpOTE1X3Bzcl9zaW5rX3N0YXR1
c19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJInNpbmsgaW50ZXJuYWwg
ZXJyb3IiLAogCX07CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9IG0tPnByaXZh
dGU7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjb25uZWN0
b3ItPmRldik7CiAJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9CiAJCWludGVsX2F0dGFjaGVk
X2RwKHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpKTsKIAlpbnQgcmV0OwogCi0JaWYgKCFD
QU5fUFNSKGRldl9wcml2KSkgewotCQlzZXFfcHV0cyhtLCAiUFNSIFVuc3VwcG9ydGVkXG4iKTsK
KwlpZiAoY29ubmVjdG9yLT5zdGF0dXMgIT0gY29ubmVjdG9yX3N0YXR1c19jb25uZWN0ZWQpCiAJ
CXJldHVybiAtRU5PREVWOwotCX0KIAotCWlmIChjb25uZWN0b3ItPnN0YXR1cyAhPSBjb25uZWN0
b3Jfc3RhdHVzX2Nvbm5lY3RlZCkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKSB7CisJCXNlcV9w
dXRzKG0sICJQU1IgVW5zdXBwb3J0ZWRcbiIpOwogCQlyZXR1cm4gLUVOT0RFVjsKKwl9CiAKIAly
ZXQgPSBkcm1fZHBfZHBjZF9yZWFkYigmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX1NUQVRVUywgJnZh
bCk7CiAKQEAgLTI4MCwxMiArMjc5LDEzIEBAIHN0YXRpYyBpbnQgaTkxNV9wc3Jfc2lua19zdGF0
dXNfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiBERUZJTkVfU0hPV19BVFRS
SUJVVEUoaTkxNV9wc3Jfc2lua19zdGF0dXMpOwogCiBzdGF0aWMgdm9pZAotcHNyX3NvdXJjZV9z
dGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUg
Km0pCitwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBzdHJ1Y3Qg
c2VxX2ZpbGUgKm0pCiB7CiAJdTMyIHZhbCwgc3RhdHVzX3ZhbDsKIAljb25zdCBjaGFyICpzdGF0
dXMgPSAidW5rbm93biI7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBf
dG9faTkxNShpbnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpIHsK
KwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKIAkJc3RhdGljIGNvbnN0IGNoYXIg
KiBjb25zdCBsaXZlX3N0YXR1c1tdID0gewogCQkJIklETEUiLAogCQkJIkNBUFRVUkUiLApAQCAt
MzAwLDcgKzMwMCw3IEBAIHBzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwgc3RydWN0IHNlcV9maWxlICptKQogCQkJIlRHX09OIgogCQl9OwogCQl2YWwg
PSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSMl9TVEFUVVMoZGV2X3By
aXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9kcC0+
cHNyLnRyYW5zY29kZXIpKTsKIAkJc3RhdHVzX3ZhbCA9ICh2YWwgJiBFRFBfUFNSMl9TVEFUVVNf
U1RBVEVfTUFTSykgPj4KIAkJCSAgICAgIEVEUF9QU1IyX1NUQVRVU19TVEFURV9TSElGVDsKIAkJ
aWYgKHN0YXR1c192YWwgPCBBUlJBWV9TSVpFKGxpdmVfc3RhdHVzKSkKQEAgLTMxNyw3ICszMTcs
NyBAQCBwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IHN0cnVjdCBzZXFfZmlsZSAqbSkKIAkJCSJTUkRFTlRfT04iLAogCQl9OwogCQl2YWwgPSBpbnRl
bF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+cHNy
LnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFu
c2NvZGVyKSk7CiAJCXN0YXR1c192YWwgPSAodmFsICYgRURQX1BTUl9TVEFUVVNfU1RBVEVfTUFT
SykgPj4KIAkJCSAgICAgIEVEUF9QU1JfU1RBVFVTX1NUQVRFX1NISUZUOwogCQlpZiAoc3RhdHVz
X3ZhbCA8IEFSUkFZX1NJWkUobGl2ZV9zdGF0dXMpKQpAQCAtMzI3LDIxICszMjcsMTggQEAgcHNy
X3NvdXJjZV9zdGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qg
c2VxX2ZpbGUgKm0pCiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBzdGF0dXM6ICVzIFsweCUw
OHhdXG4iLCBzdGF0dXMsIHZhbCk7CiB9CiAKLXN0YXRpYyBpbnQgaTkxNV9lZHBfcHNyX3N0YXR1
cyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCitzdGF0aWMgaW50IGludGVsX3Bzcl9z
dGF0dXMoc3RydWN0IHNlcV9maWxlICptLCBzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewot
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2
YXRlKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXN0cnVj
dCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCWludGVsX3dha2VyZWZfdCB3YWtl
cmVmOwogCWNvbnN0IGNoYXIgKnN0YXR1czsKIAlib29sIGVuYWJsZWQ7CiAJdTMyIHZhbDsKIAot
CWlmICghSEFTX1BTUihkZXZfcHJpdikpCi0JCXJldHVybiAtRU5PREVWOwotCiAJc2VxX3ByaW50
ZihtLCAiU2luayBzdXBwb3J0OiAlcyIsIHllc25vKHBzci0+c2lua19zdXBwb3J0KSk7Ci0JaWYg
KHBzci0+ZHApCi0JCXNlcV9wcmludGYobSwgIiBbMHglMDJ4XSIsIHBzci0+ZHAtPnBzcl9kcGNk
WzBdKTsKKwlpZiAocHNyLT5zaW5rX3N1cHBvcnQpCisJCXNlcV9wcmludGYobSwgIiBbMHglMDJ4
XSIsIGludGVsX2RwLT5wc3JfZHBjZFswXSk7CiAJc2VxX3B1dHMobSwgIlxuIik7CiAKIAlpZiAo
IXBzci0+c2lua19zdXBwb3J0KQpAQCAtMzY1LDE2ICszNjIsMTYgQEAgc3RhdGljIGludCBpOTE1
X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAogCWlmIChw
c3ItPnBzcjJfZW5hYmxlZCkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJ
CSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVE
UF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZW5hYmxlZCA9IHZhbCAm
IEVEUF9QU1IyX0VOQUJMRTsKIAl9IGVsc2UgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9w
cml2LAotCQkJCSAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJ
CQkgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCWVuYWJsZWQg
PSB2YWwgJiBFRFBfUFNSX0VOQUJMRTsKIAl9CiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBj
dGw6ICVzIFsweCUwOHhdXG4iLAogCQkgICBlbmFibGVkZGlzYWJsZWQoZW5hYmxlZCksIHZhbCk7
Ci0JcHNyX3NvdXJjZV9zdGF0dXMoZGV2X3ByaXYsIG0pOworCXBzcl9zb3VyY2Vfc3RhdHVzKGlu
dGVsX2RwLCBtKTsKIAlzZXFfcHJpbnRmKG0sICJCdXN5IGZyb250YnVmZmVyIGJpdHM6IDB4JTA4
eFxuIiwKIAkJICAgcHNyLT5idXN5X2Zyb250YnVmZmVyX2JpdHMpOwogCkBAIC0zODMsNyArMzgw
LDcgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwg
dm9pZCAqZGF0YSkKIAkgKi8KIAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURX
RUxMKGRldl9wcml2KSkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAg
ICBFRFBfUFNSX1BFUkZfQ05UKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBF
RFBfUFNSX1BFUkZfQ05UKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQl2YWwgJj0gRURQ
X1BTUl9QRVJGX0NOVF9NQVNLOwogCQlzZXFfcHJpbnRmKG0sICJQZXJmb3JtYW5jZSBjb3VudGVy
OiAldVxuIiwgdmFsKTsKIAl9CkBAIC00MDQsNyArNDAxLDcgQEAgc3RhdGljIGludCBpOTE1X2Vk
cF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJICovCiAJCWZv
ciAoZnJhbWUgPSAwOyBmcmFtZSA8IFBTUjJfU1VfU1RBVFVTX0ZSQU1FUzsgZnJhbWUgKz0gMykg
ewogCQkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkJICAgIFBTUjJfU1VfU1RB
VFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKKwkJCQkJICAgIFBTUjJfU1Vf
U1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKIAkJCXN1X2ZyYW1lc192
YWxbZnJhbWUgLyAzXSA9IHZhbDsKIAkJfQogCkBAIC00MzAsMjMgKzQyNyw1NyBAQCBzdGF0aWMg
aW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQog
CXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNl
cV9maWxlICptLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlcjsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gTlVMTDsKKworCWlmICghSEFT
X1BTUihkZXZfcHJpdikpCisJCXJldHVybiAtRU5PREVWOworCisJLyogRmluZCB0aGUgZmlyc3Qg
RURQICovCisJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJ
aWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkgeworCQkJaW50ZWxfZHAgPSBl
bmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisJCQlicmVhazsKKwkJfQorCX0KKworCWlmICghaW50
ZWxfZHApCisJCXJldHVybiAtRU5PREVWOworCisJcmV0dXJuIGludGVsX3Bzcl9zdGF0dXMobSwg
aW50ZWxfZHApOworfQorCiBzdGF0aWMgaW50CiBpOTE1X2VkcF9wc3JfZGVidWdfc2V0KHZvaWQg
KmRhdGEsIHU2NCB2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZGF0YTsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQlpbnQgcmV0OworCWludCByZXQgPSAt
RU5PREVWOworCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0JaWYgKCFDQU5fUFNS
KGRldl9wcml2KSkKLQkJcmV0dXJuIC1FTk9ERVY7CisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkK
KwkJcmV0dXJuIHJldDsKIAotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiU2V0dGluZyBQ
U1IgZGVidWcgdG8gJWxseFxuIiwgdmFsKTsKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYt
PmRybSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2lu
dGVsX2RwKGVuY29kZXIpOwogCi0Jd2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZkZXZf
cHJpdi0+cnVudGltZV9wbSk7CisJCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCisJCQljb250aW51
ZTsKIAotCXJldCA9IGludGVsX3Bzcl9kZWJ1Z19zZXQoZGV2X3ByaXYsIHZhbCk7CisJCWlmIChl
bmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFApIHsKKwkJCWRybV9kYmdfa21zKCZkZXZf
cHJpdi0+ZHJtLCAiU2V0dGluZyBQU1IgZGVidWcgdG8gJWxseFxuIiwgdmFsKTsKIAotCWludGVs
X3J1bnRpbWVfcG1fcHV0KCZkZXZfcHJpdi0+cnVudGltZV9wbSwgd2FrZXJlZik7CisJCQl3YWtl
cmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXQoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKKworCQkJ
Ly8gVE9ETzogc3BsaXQgdG8gZWFjaCB0cmFuc2NvZGVyJ3MgUFNSIGRlYnVnIHN0YXRlCisJCQly
ZXQgPSBpbnRlbF9wc3JfZGVidWdfc2V0KGludGVsX2RwLCB2YWwpOworCisJCQlpbnRlbF9ydW50
aW1lX3BtX3B1dCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0sIHdha2VyZWYpOworCQl9CisJfQogCiAJ
cmV0dXJuIHJldDsKIH0KQEAgLTQ1NSwxMiArNDg2LDI1IEBAIHN0YXRpYyBpbnQKIGk5MTVfZWRw
X3Bzcl9kZWJ1Z19nZXQodm9pZCAqZGF0YSwgdTY0ICp2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gZGF0YTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
cjsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikpCisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkK
IAkJcmV0dXJuIC1FTk9ERVY7CiAKLQkqdmFsID0gUkVBRF9PTkNFKGRldl9wcml2LT5wc3IuZGVi
dWcpOwotCXJldHVybiAwOworCWZvcl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNv
ZGVyKSB7CisJCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5j
b2Rlcik7CisKKwkJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKKwkJCWNvbnRpbnVlOworCisJCS8v
IFRPRE86IHNwbGl0IHRvIGVhY2ggdHJhbnNjb2RlcidzIFBTUiBkZWJ1ZyBzdGF0ZQorCQlpZiAo
ZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKSB7CisJCQkqdmFsID0gUkVBRF9PTkNF
KGludGVsX2RwLT5wc3IuZGVidWcpOworCQkJcmV0dXJuIDA7CisJCX0KKwl9CisKKwlyZXR1cm4g
LUVOT0RFVjsKIH0KIAogREVGSU5FX1NJTVBMRV9BVFRSSUJVVEUoaTkxNV9lZHBfcHNyX2RlYnVn
X2ZvcHMsCkBAIC0xMjM0LDkgKzEyNzgsNiBAQCBzdGF0aWMgdm9pZCBkcnJzX3N0YXR1c19wZXJf
Y3J0YyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sCiAJCS8qIGRpc2FibGVfZHJycygpIHdpbGwgbWFrZSBk
cnJzLT5kcCBOVUxMICovCiAJCWlmICghZHJycy0+ZHApIHsKIAkJCXNlcV9wdXRzKG0sICJJZGxl
bmVzcyBEUlJTOiBEaXNhYmxlZFxuIik7Ci0JCQlpZiAoZGV2X3ByaXYtPnBzci5lbmFibGVkKQot
CQkJCXNlcV9wdXRzKG0sCi0JCQkJIlx0QXMgUFNSIGlzIGVuYWJsZWQsIERSUlMgaXMgbm90IGVu
YWJsZWRcbiIpOwogCQkJbXV0ZXhfdW5sb2NrKCZkcnJzLT5tdXRleCk7CiAJCQlyZXR1cm47CiAJ
CX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5
cGVzLmgKaW5kZXggNWJjNWJmYmM0NTUxLi45ODk5ZmRkZjRjOTkgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC0xMzM5LDYg
KzEzMzksNDIgQEAgc3RydWN0IGludGVsX2RwX2NvbXBsaWFuY2UgewogCXU4IHRlc3RfbGFuZV9j
b3VudDsKIH07CiAKK3N0cnVjdCBpbnRlbF9wc3IgeworCS8qIE11dGV4IGZvciBQU1Igc3RhdGUg
b2YgdGhlIHRyYW5zY29kZXIgKi8KKwlzdHJ1Y3QgbXV0ZXggbG9jazsKKworI2RlZmluZSBJOTE1
X1BTUl9ERUJVR19NT0RFX01BU0sJMHgwZgorI2RlZmluZSBJOTE1X1BTUl9ERUJVR19ERUZBVUxU
CQkweDAwCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0RJU0FCTEUJCTB4MDEKKyNkZWZpbmUgSTkx
NV9QU1JfREVCVUdfRU5BQkxFCQkweDAyCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0ZPUkNFX1BT
UjEJMHgwMworI2RlZmluZSBJOTE1X1BTUl9ERUJVR19JUlEJCTB4MTAKKworCXUzMiBkZWJ1ZzsK
Kwlib29sIHNpbmtfc3VwcG9ydDsKKwlib29sIGVuYWJsZWQ7CisJZW51bSBwaXBlIHBpcGU7CisJ
ZW51bSB0cmFuc2NvZGVyIHRyYW5zY29kZXI7CisJYm9vbCBhY3RpdmU7CisJc3RydWN0IHdvcmtf
c3RydWN0IHdvcms7CisJdW5zaWduZWQgaW50IGJ1c3lfZnJvbnRidWZmZXJfYml0czsKKwlib29s
IHNpbmtfcHNyMl9zdXBwb3J0OworCWJvb2wgbGlua19zdGFuZGJ5OworCWJvb2wgY29sb3JpbWV0
cnlfc3VwcG9ydDsKKwlib29sIHBzcjJfZW5hYmxlZDsKKwlib29sIHBzcjJfc2VsX2ZldGNoX2Vu
YWJsZWQ7CisJdTggc2lua19zeW5jX2xhdGVuY3k7CisJa3RpbWVfdCBsYXN0X2VudHJ5X2F0dGVt
cHQ7CisJa3RpbWVfdCBsYXN0X2V4aXQ7CisJYm9vbCBzaW5rX25vdF9yZWxpYWJsZTsKKwlib29s
IGlycV9hdXhfZXJyb3I7CisJdTE2IHN1X3hfZ3JhbnVsYXJpdHk7CisJYm9vbCBkYzNjb19lbmFi
bGVkOworCXUzMiBkYzNjb19leGl0X2RlbGF5OworCXN0cnVjdCBkZWxheWVkX3dvcmsgZGMzY29f
d29yazsKKwlzdHJ1Y3QgZHJtX2RwX3ZzY19zZHAgdnNjOworfTsKKwogc3RydWN0IGludGVsX2Rw
IHsKIAlpOTE1X3JlZ190IG91dHB1dF9yZWc7CiAJdTMyIERQOwpAQCAtMTQ2MCw2ICsxNDk2LDgg
QEAgc3RydWN0IGludGVsX2RwIHsKIAogCWJvb2wgaG9ibF9mYWlsZWQ7CiAJYm9vbCBob2JsX2Fj
dGl2ZTsKKworCXN0cnVjdCBpbnRlbF9wc3IgcHNyOwogfTsKIAogZW51bSBsc3Bjb25fdmVuZG9y
IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwppbmRleCBiMmJjMGM4YzM5
YzcuLjU3MzBjYWQ3YjZhYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YwpAQCAtMjcwMiwxMiArMjcwMiwxMCBAQCB2b2lkIGludGVsX2RwX2NvbXB1dGVfcHNyX3ZzY19z
ZHAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJCQkgIGNvbnN0IHN0cnVjdCBkcm1fY29u
bmVjdG9yX3N0YXRlICpjb25uX3N0YXRlLAogCQkJCSAgc3RydWN0IGRybV9kcF92c2Nfc2RwICp2
c2MpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShp
bnRlbF9kcCk7Ci0KIAl2c2MtPnNkcF90eXBlID0gRFBfU0RQX1ZTQzsKIAotCWlmIChkZXZfcHJp
di0+cHNyLnBzcjJfZW5hYmxlZCkgewotCQlpZiAoZGV2X3ByaXYtPnBzci5jb2xvcmltZXRyeV9z
dXBwb3J0ICYmCisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCWlmIChpbnRl
bF9kcC0+cHNyLmNvbG9yaW1ldHJ5X3N1cHBvcnQgJiYKIAkJICAgIGludGVsX2RwX25lZWRzX3Zz
Y19zZHAoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkpIHsKIAkJCS8qIFtQU1IyLCArQ29sb3JpbWV0
cnldICovCiAJCQlpbnRlbF9kcF9jb21wdXRlX3ZzY19jb2xvcmltZXRyeShjcnRjX3N0YXRlLCBj
b25uX3N0YXRlLApAQCAtMzg0NCw3ICszODQyLDcgQEAgYm9vbCBpbnRlbF9kcF9pbml0aWFsX2Zh
c3RzZXRfY2hlY2soc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCXJldHVybiBmYWxz
ZTsKIAl9CiAKLQlpZiAoQ0FOX1BTUihpOTE1KSAmJiBpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHAp
KSB7CisJaWYgKENBTl9QU1IoaW50ZWxfZHApICYmIGludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkp
IHsKIAkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIkZvcmNpbmcgZnVsbCBtb2Rlc2V0IHRvIGNv
bXB1dGUgUFNSIHN0YXRlXG4iKTsKIAkJY3J0Y19zdGF0ZS0+dWFwaS5tb2RlX2NoYW5nZWQgPSB0
cnVlOwogCQlyZXR1cm4gZmFsc2U7CkBAIC04MDcwLDYgKzgwNjgsMTcgQEAgc3RhdGljIHZvaWQg
aW50ZWxfZHBfbW9kZXNldF9yZXRyeV93b3JrX2ZuKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykK
IAlkcm1fa21zX2hlbHBlcl9ob3RwbHVnX2V2ZW50KGNvbm5lY3Rvci0+ZGV2KTsKIH0KIAorc3Rh
dGljIHZvaWQgaW50ZWxfZHBfdXBkYXRlX3BpcGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUsCisJCQkJIHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJCSBjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkgY29uc3Qgc3RydWN0IGRy
bV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCit7CisJc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCWludGVsX3BhbmVsX3VwZGF0ZV9i
YWNrbGlnaHQoc3RhdGUsIGVuY29kZXIsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOworCWludGVs
X3BzcjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bChpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7Cit9
CisKIGJvb2wKIGludGVsX2RwX2luaXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3Bv
cnQgKmRpZ19wb3J0LAogCQkJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9y
KQpAQCAtODE4NCw2ICs4MTkzLDggQEAgaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGlu
dGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQsCiAJCQkgICAgICAgKHRlbXAgJiB+MHhmKSB8IDB4
ZCk7CiAJfQogCisJaW50ZWxfcHNyX2luaXQoaW50ZWxfZHApOworCiAJcmV0dXJuIHRydWU7CiAK
IGZhaWw6CkBAIC04MjI1LDcgKzgyMzYsNyBAQCBib29sIGludGVsX2RwX2luaXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCWludGVsX2VuY29kZXItPmdldF9jb25maWcgPSBp
bnRlbF9kcF9nZXRfY29uZmlnOwogCWludGVsX2VuY29kZXItPnN5bmNfc3RhdGUgPSBpbnRlbF9k
cF9zeW5jX3N0YXRlOwogCWludGVsX2VuY29kZXItPmluaXRpYWxfZmFzdHNldF9jaGVjayA9IGlu
dGVsX2RwX2luaXRpYWxfZmFzdHNldF9jaGVjazsKLQlpbnRlbF9lbmNvZGVyLT51cGRhdGVfcGlw
ZSA9IGludGVsX3BhbmVsX3VwZGF0ZV9iYWNrbGlnaHQ7CisJaW50ZWxfZW5jb2Rlci0+dXBkYXRl
X3BpcGUgPSBpbnRlbF9kcF91cGRhdGVfcGlwZTsKIAlpbnRlbF9lbmNvZGVyLT5zdXNwZW5kID0g
aW50ZWxfZHBfZW5jb2Rlcl9zdXNwZW5kOwogCWludGVsX2VuY29kZXItPnNodXRkb3duID0gaW50
ZWxfZHBfZW5jb2Rlcl9zaHV0ZG93bjsKIAlpZiAoSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpIHsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jCmluZGV4IGQ5YTM5NWM0ODZk
My4uYmFkZGY2MzU0N2U3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX3Bzci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNy
LmMKQEAgLTc5LDExICs3OSwxMyBAQAogICogdXNlIHBhZ2UgZmxpcHMuCiAgKi8KIAotc3RhdGlj
IGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQor
c3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
CiB7Ci0Jc3dpdGNoIChpOTE1LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0sp
IHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVs
X2RwKTsKKworCXN3aXRjaCAoaW50ZWxfZHAtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01P
REVfTUFTSykgewogCWNhc2UgSTkxNV9QU1JfREVCVUdfREVGQVVMVDoKLQkJcmV0dXJuIGk5MTUt
PnBhcmFtcy5lbmFibGVfcHNyOworCQlyZXR1cm4gZGV2X3ByaXYtPnBhcmFtcy5lbmFibGVfcHNy
OwogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJMRToKIAkJcmV0dXJuIGZhbHNlOwogCWRlZmF1
bHQ6CkBAIC05MSw5ICs5Myw5IEBAIHN0YXRpYyBib29sIHBzcl9nbG9iYWxfZW5hYmxlZChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAl9CiB9CiAKLXN0YXRpYyBib29sIHBzcjJfZ2xv
YmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIGJv
b2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCXN3
aXRjaCAoZGV2X3ByaXYtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSykgewor
CXN3aXRjaCAoaW50ZWxfZHAtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSykg
ewogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJMRToKIAljYXNlIEk5MTVfUFNSX0RFQlVHX0ZP
UkNFX1BTUjE6CiAJCXJldHVybiBmYWxzZTsKQEAgLTEwMiwxMSArMTA0LDEyIEBAIHN0YXRpYyBi
b29sIHBzcjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogCX0KIH0KIAotc3RhdGljIHZvaWQgcHNyX2lycV9jb250cm9sKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHBzcl9pcnFfY29udHJvbChzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQogewogCWVudW0gdHJhbnNjb2RlciB0cmFuc19zaGlmdDsKIAl1MzIg
bWFzaywgdmFsOwogCWk5MTVfcmVnX3QgaW1yX3JlZzsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCS8qCiAJICogZ2VuMTIrIGhh
cyByZWdpc3RlcnMgcmVsYXRpdmUgdG8gdHJhbnNjb2RlciBhbmQgb25lIHBlciB0cmFuc2NvZGVy
CkBAIC0xMTUsMTQgKzExOCwxNCBAQCBzdGF0aWMgdm9pZCBwc3JfaXJxX2NvbnRyb2woc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCSAqLwogCWlmIChJTlRFTF9HRU4oZGV2X3By
aXYpID49IDEyKSB7CiAJCXRyYW5zX3NoaWZ0ID0gMDsKLQkJaW1yX3JlZyA9IFRSQU5TX1BTUl9J
TVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIo
aW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9IGVsc2UgewotCQl0cmFuc19zaGlmdCA9IGRl
dl9wcml2LT5wc3IudHJhbnNjb2RlcjsKKwkJdHJhbnNfc2hpZnQgPSBpbnRlbF9kcC0+cHNyLnRy
YW5zY29kZXI7CiAJCWltcl9yZWcgPSBFRFBfUFNSX0lNUjsKIAl9CiAKIAltYXNrID0gRURQX1BT
Ul9FUlJPUih0cmFuc19zaGlmdCk7Ci0JaWYgKGRldl9wcml2LT5wc3IuZGVidWcgJiBJOTE1X1BT
Ul9ERUJVR19JUlEpCisJaWYgKGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19J
UlEpCiAJCW1hc2sgfD0gRURQX1BTUl9QT1NUX0VYSVQodHJhbnNfc2hpZnQpIHwKIAkJCUVEUF9Q
U1JfUFJFX0VOVFJZKHRyYW5zX3NoaWZ0KTsKIApAQCAtMTcxLDMwICsxNzQsMzEgQEAgc3RhdGlj
IHZvaWQgcHNyX2V2ZW50X3ByaW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQlk
cm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiXHRQU1IgZGlzYWJsZWRcbiIpOwogfQogCi12b2lkIGlu
dGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUz
MiBwc3JfaWlyKQordm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwgdTMyIHBzcl9paXIpCiB7Ci0JZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVy
ID0gZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWVudW0gdHJhbnNjb2RlciBjcHVfdHJh
bnNjb2RlciA9IGludGVsX2RwLT5wc3IudHJhbnNjb2RlcjsKIAllbnVtIHRyYW5zY29kZXIgdHJh
bnNfc2hpZnQ7CiAJaTkxNV9yZWdfdCBpbXJfcmVnOwogCWt0aW1lX3QgdGltZV9ucyA9ICBrdGlt
ZV9nZXQoKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCXRyYW5zX3No
aWZ0ID0gMDsKLQkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoZGV2X3ByaXYtPnBzci50cmFuc2Nv
ZGVyKTsKKwkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KTsKIAl9IGVsc2UgewotCQl0cmFuc19zaGlmdCA9IGRldl9wcml2LT5wc3IudHJhbnNjb2RlcjsK
KwkJdHJhbnNfc2hpZnQgPSBpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXI7CiAJCWltcl9yZWcgPSBF
RFBfUFNSX0lNUjsKIAl9CiAKIAlpZiAocHNyX2lpciAmIEVEUF9QU1JfUFJFX0VOVFJZKHRyYW5z
X3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxhc3RfZW50cnlfYXR0ZW1wdCA9IHRpbWVfbnM7
CisJCWludGVsX2RwLT5wc3IubGFzdF9lbnRyeV9hdHRlbXB0ID0gdGltZV9uczsKIAkJZHJtX2Ri
Z19rbXMoJmRldl9wcml2LT5kcm0sCiAJCQkgICAgIlt0cmFuc2NvZGVyICVzXSBQU1IgZW50cnkg
YXR0ZW1wdCBpbiAyIHZibGFua3NcbiIsCiAJCQkgICAgdHJhbnNjb2Rlcl9uYW1lKGNwdV90cmFu
c2NvZGVyKSk7CiAJfQogCiAJaWYgKHBzcl9paXIgJiBFRFBfUFNSX1BPU1RfRVhJVCh0cmFuc19z
aGlmdCkpIHsKLQkJZGV2X3ByaXYtPnBzci5sYXN0X2V4aXQgPSB0aW1lX25zOworCQlpbnRlbF9k
cC0+cHNyLmxhc3RfZXhpdCA9IHRpbWVfbnM7CiAJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJt
LAogCQkJICAgICJbdHJhbnNjb2RlciAlc10gUFNSIGV4aXQgY29tcGxldGVkXG4iLAogCQkJICAg
IHRyYW5zY29kZXJfbmFtZShjcHVfdHJhbnNjb2RlcikpOwpAQCAtMjAyLDcgKzIwNiw3IEBAIHZv
aWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwgdTMyIHBzcl9paXIpCiAJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDkpIHsKIAkJCXUz
MiB2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAogCQkJCQkJUFNSX0VWRU5UKGNwdV90cmFu
c2NvZGVyKSk7Ci0JCQlib29sIHBzcjJfZW5hYmxlZCA9IGRldl9wcml2LT5wc3IucHNyMl9lbmFi
bGVkOworCQkJYm9vbCBwc3IyX2VuYWJsZWQgPSBpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZDsK
IAogCQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIFBTUl9FVkVOVChjcHVfdHJhbnNjb2Rlciks
CiAJCQkJICAgICAgIHZhbCk7CkBAIC0yMTYsNyArMjIwLDcgQEAgdm9pZCBpbnRlbF9wc3JfaXJx
X2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcHNyX2lpcikK
IAkJZHJtX3dhcm4oJmRldl9wcml2LT5kcm0sICJbdHJhbnNjb2RlciAlc10gUFNSIGF1eCBlcnJv
clxuIiwKIAkJCSB0cmFuc2NvZGVyX25hbWUoY3B1X3RyYW5zY29kZXIpKTsKIAotCQlkZXZfcHJp
di0+cHNyLmlycV9hdXhfZXJyb3IgPSB0cnVlOworCQlpbnRlbF9kcC0+cHNyLmlycV9hdXhfZXJy
b3IgPSB0cnVlOwogCiAJCS8qCiAJCSAqIElmIHRoaXMgaW50ZXJydXB0aW9uIGlzIG5vdCBtYXNr
ZWQgaXQgd2lsbCBrZWVwCkBAIC0yMzAsNyArMjM0LDcgQEAgdm9pZCBpbnRlbF9wc3JfaXJxX2hh
bmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcHNyX2lpcikKIAkJ
dmFsIHw9IEVEUF9QU1JfRVJST1IodHJhbnNfc2hpZnQpOwogCQlpbnRlbF9kZV93cml0ZShkZXZf
cHJpdiwgaW1yX3JlZywgdmFsKTsKIAotCQlzY2hlZHVsZV93b3JrKCZkZXZfcHJpdi0+cHNyLndv
cmspOworCQlzY2hlZHVsZV93b3JrKCZpbnRlbF9kcC0+cHNyLndvcmspOwogCX0KIH0KIApAQCAt
MjkxLDEyICsyOTUsNiBAQCB2b2lkIGludGVsX3Bzcl9pbml0X2RwY2Qoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPQogCQl0b19p
OTE1KGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5iYXNlLmRldik7CiAKLQlpZiAoZGV2
X3ByaXYtPnBzci5kcCkgewotCQlkcm1fd2FybigmZGV2X3ByaXYtPmRybSwKLQkJCSAiTW9yZSB0
aGFuIG9uZSBlRFAgcGFuZWwgZm91bmQsIFBTUiBzdXBwb3J0IHNob3VsZCBiZSBleHRlbmRlZFxu
Iik7Ci0JCXJldHVybjsKLQl9Ci0KIAlkcm1fZHBfZHBjZF9yZWFkKCZpbnRlbF9kcC0+YXV4LCBE
UF9QU1JfU1VQUE9SVCwgaW50ZWxfZHAtPnBzcl9kcGNkLAogCQkJIHNpemVvZihpbnRlbF9kcC0+
cHNyX2RwY2QpKTsKIApAQCAtMzE3LDEyICszMTUsMTAgQEAgdm9pZCBpbnRlbF9wc3JfaW5pdF9k
cGNkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCXJldHVybjsKIAl9CiAKLQlkZXZfcHJp
di0+cHNyLnNpbmtfc3VwcG9ydCA9IHRydWU7Ci0JZGV2X3ByaXYtPnBzci5zaW5rX3N5bmNfbGF0
ZW5jeSA9CisJaW50ZWxfZHAtPnBzci5zaW5rX3N1cHBvcnQgPSB0cnVlOworCWludGVsX2RwLT5w
c3Iuc2lua19zeW5jX2xhdGVuY3kgPQogCQlpbnRlbF9kcF9nZXRfc2lua19zeW5jX2xhdGVuY3ko
aW50ZWxfZHApOwogCi0JZGV2X3ByaXYtPnBzci5kcCA9IGludGVsX2RwOwotCiAJaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPj0gOSAmJgogCSAgICAoaW50ZWxfZHAtPnBzcl9kcGNkWzBdID09IERQ
X1BTUjJfV0lUSF9ZX0NPT1JEX0lTX1NVUFBPUlRFRCkpIHsKIAkJYm9vbCB5X3JlcSA9IGludGVs
X2RwLT5wc3JfZHBjZFsxXSAmCkBAIC0zNDAsMTQgKzMzNiwxNCBAQCB2b2lkIGludGVsX3Bzcl9p
bml0X2RwY2Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJICogWS1jb29yZGluYXRlIHJl
cXVpcmVtZW50IHBhbmVscyB3ZSB3b3VsZCBuZWVkIHRvIGVuYWJsZQogCQkgKiBHVEMgZmlyc3Qu
CiAJCSAqLwotCQlkZXZfcHJpdi0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0ID0geV9yZXEgJiYgYWxw
bTsKKwkJaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCA9IHlfcmVxICYmIGFscG07CiAJ
CWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiUFNSMiAlc3N1cHBvcnRlZFxuIiwKLQkJCSAg
ICBkZXZfcHJpdi0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0ID8gIiIgOiAibm90ICIpOworCQkJICAg
IGludGVsX2RwLT5wc3Iuc2lua19wc3IyX3N1cHBvcnQgPyAiIiA6ICJub3QgIik7CiAKLQkJaWYg
KGRldl9wcml2LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQpIHsKLQkJCWRldl9wcml2LT5wc3IuY29s
b3JpbWV0cnlfc3VwcG9ydCA9CisJCWlmIChpbnRlbF9kcC0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0
KSB7CisJCQlpbnRlbF9kcC0+cHNyLmNvbG9yaW1ldHJ5X3N1cHBvcnQgPQogCQkJCWludGVsX2Rw
X2dldF9jb2xvcmltZXRyeV9zdGF0dXMoaW50ZWxfZHApOwotCQkJZGV2X3ByaXYtPnBzci5zdV94
X2dyYW51bGFyaXR5ID0KKwkJCWludGVsX2RwLT5wc3Iuc3VfeF9ncmFudWxhcml0eSA9CiAJCQkJ
aW50ZWxfZHBfZ2V0X3N1X3hfZ3JhbnVsYXJ0aXkoaW50ZWxfZHApOwogCQl9CiAJfQpAQCAtMzcz
LDcgKzM2OSw3IEBAIHN0YXRpYyB2b2lkIGhzd19wc3Jfc2V0dXBfYXV4KHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAJQlVJTERfQlVHX09OKHNpemVvZihhdXhfbXNnKSA+IDIwKTsKIAlmb3Ig
KGkgPSAwOyBpIDwgc2l6ZW9mKGF1eF9tc2cpOyBpICs9IDQpCiAJCWludGVsX2RlX3dyaXRlKGRl
dl9wcml2LAotCQkJICAgICAgIEVEUF9QU1JfQVVYX0RBVEEoZGV2X3ByaXYtPnBzci50cmFuc2Nv
ZGVyLCBpID4+IDIpLAorCQkJICAgICAgIEVEUF9QU1JfQVVYX0RBVEEoaW50ZWxfZHAtPnBzci50
cmFuc2NvZGVyLCBpID4+IDIpLAogCQkJICAgICAgIGludGVsX2RwX3BhY2tfYXV4KCZhdXhfbXNn
W2ldLCBzaXplb2YoYXV4X21zZykgLSBpKSk7CiAKIAlhdXhfY2xvY2tfZGl2aWRlciA9IGludGVs
X2RwLT5nZXRfYXV4X2Nsb2NrX2RpdmlkZXIoaW50ZWxfZHAsIDApOwpAQCAtMzg0LDcgKzM4MCw3
IEBAIHN0YXRpYyB2b2lkIGhzd19wc3Jfc2V0dXBfYXV4KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHApCiAKIAkvKiBTZWxlY3Qgb25seSB2YWxpZCBiaXRzIGZvciBTUkRfQVVYX0NUTCAqLwogCWF1
eF9jdGwgJj0gcHNyX2F1eF9tYXNrOwotCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNS
X0FVWF9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwKKwlpbnRlbF9kZV93cml0ZShkZXZf
cHJpdiwgRURQX1BTUl9BVVhfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksCiAJCSAgICAg
ICBhdXhfY3RsKTsKIH0KIApAQCAtMzk0LDE0ICszOTAsMTQgQEAgc3RhdGljIHZvaWQgaW50ZWxf
cHNyX2VuYWJsZV9zaW5rKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJdTggZHBjZF92YWwg
PSBEUF9QU1JfRU5BQkxFOwogCiAJLyogRW5hYmxlIEFMUE0gYXQgc2luayBmb3IgcHNyMiAqLwot
CWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkgeworCWlmIChpbnRlbF9kcC0+cHNyLnBz
cjJfZW5hYmxlZCkgewogCQlkcm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1JF
Q0VJVkVSX0FMUE1fQ09ORklHLAogCQkJCSAgIERQX0FMUE1fRU5BQkxFIHwKIAkJCQkgICBEUF9B
TFBNX0xPQ0tfRVJST1JfSVJRX0hQRF9FTkFCTEUpOwogCiAJCWRwY2RfdmFsIHw9IERQX1BTUl9F
TkFCTEVfUFNSMiB8IERQX1BTUl9JUlFfSFBEX1dJVEhfQ1JDX0VSUk9SUzsKIAl9IGVsc2Ugewot
CQlpZiAoZGV2X3ByaXYtPnBzci5saW5rX3N0YW5kYnkpCisJCWlmIChpbnRlbF9kcC0+cHNyLmxp
bmtfc3RhbmRieSkKIAkJCWRwY2RfdmFsIHw9IERQX1BTUl9NQUlOX0xJTktfQUNUSVZFOwogCiAJ
CWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDgpCkBAIC00NjQsNyArNDYwLDcgQEAgc3RhdGlj
IHU4IHBzcl9jb21wdXRlX2lkbGVfZnJhbWVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJ
ICogb2ZmLWJ5LW9uZSBpc3N1ZSB0aGF0IEhXIGhhcyBpbiBzb21lIGNhc2VzLgogCSAqLwogCWlk
bGVfZnJhbWVzID0gbWF4KDYsIGRldl9wcml2LT52YnQucHNyLmlkbGVfZnJhbWVzKTsKLQlpZGxl
X2ZyYW1lcyA9IG1heChpZGxlX2ZyYW1lcywgZGV2X3ByaXYtPnBzci5zaW5rX3N5bmNfbGF0ZW5j
eSArIDEpOworCWlkbGVfZnJhbWVzID0gbWF4KGlkbGVfZnJhbWVzLCBpbnRlbF9kcC0+cHNyLnNp
bmtfc3luY19sYXRlbmN5ICsgMSk7CiAKIAlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0s
IGlkbGVfZnJhbWVzID4gMHhmKSkKIAkJaWRsZV9mcmFtZXMgPSAweGY7CkBAIC00ODQsNyArNDgw
LDcgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjEoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKIAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikpCiAJCXZhbCB8PSBFRFBfUFNSX01JTl9M
SU5LX0VOVFJZX1RJTUVfOF9MSU5FUzsKIAotCWlmIChkZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRi
eSkKKwlpZiAoaW50ZWxfZHAtPnBzci5saW5rX3N0YW5kYnkpCiAJCXZhbCB8PSBFRFBfUFNSX0xJ
TktfU1RBTkRCWTsKIAogCXZhbCB8PSBpbnRlbF9wc3IxX2dldF90cF90aW1lKGludGVsX2RwKTsK
QEAgLTQ5Miw5ICs0ODgsOSBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0aXZhdGVfcHNyMShzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDgpCiAJCXZh
bCB8PSBFRFBfUFNSX0NSQ19FTkFCTEU7CiAKLQl2YWwgfD0gKGludGVsX2RlX3JlYWQoZGV2X3By
aXYsIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpICYKKwl2YWwgfD0gKGlu
dGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
cikpICYKIAkJRURQX1BTUl9SRVNUT1JFX1BTUl9BQ1RJVkVfQ1RYX01BU0spOwotCWludGVsX2Rl
X3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCB2
YWwpOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNy
LnRyYW5zY29kZXIpLCB2YWwpOwogfQogCiBzdGF0aWMgdTMyIGludGVsX3BzcjJfZ2V0X3RwX3Rp
bWUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKQEAgLTUyOSw3ICs1MjUsNyBAQCBzdGF0aWMg
dm9pZCBoc3dfYWN0aXZhdGVfcHNyMihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWlmIChJ
TlRFTF9HRU4oZGV2X3ByaXYpID49IDEwIHx8IElTX0dFTUlOSUxBS0UoZGV2X3ByaXYpKQogCQl2
YWwgfD0gRURQX1lfQ09PUkRJTkFURV9FTkFCTEU7CiAKLQl2YWwgfD0gRURQX1BTUjJfRlJBTUVf
QkVGT1JFX1NVKGRldl9wcml2LT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgKyAxKTsKKwl2YWwgfD0g
RURQX1BTUjJfRlJBTUVfQkVGT1JFX1NVKGludGVsX2RwLT5wc3Iuc2lua19zeW5jX2xhdGVuY3kg
KyAxKTsKIAl2YWwgfD0gaW50ZWxfcHNyMl9nZXRfdHBfdGltZShpbnRlbF9kcCk7CiAKIAlpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikgewpAQCAtNTQ4LDcgKzU0NCw3IEBAIHN0YXRpYyB2
b2lkIGhzd19hY3RpdmF0ZV9wc3IyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCXZhbCB8
PSBFRFBfUFNSMl9GQVNUX1dBS0UoNyk7CiAJfQogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9z
ZWxfZmV0Y2hfZW5hYmxlZCkgeworCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfc2VsX2ZldGNoX2Vu
YWJsZWQpIHsKIAkJLyogV0EgMTQwODMzMDg0NyAqLwogCQlpZiAoSVNfVEdMX0RJU1BfUkVWSUQo
ZGV2X3ByaXYsIFRHTF9SRVZJRF9BMCwgVEdMX1JFVklEX0EwKSB8fAogCQkgICAgSVNfUktMX1JF
VklEKGRldl9wcml2LCBSS0xfUkVWSURfQTAsIFJLTF9SRVZJRF9BMCkpCkBAIC01NTcsMjAgKzU1
MywyMCBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0aXZhdGVfcHNyMihzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogCQkJCSAgICAgRElTX1JBTV9CWVBBU1NfUFNSMl9NQU5fVFJBQ0spOwogCiAJCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LAotCQkJICAgICAgIFBTUjJfTUFOX1RSS19DVEwoZGV2X3By
aXYtPnBzci50cmFuc2NvZGVyKSwKKwkJCSAgICAgICBQU1IyX01BTl9UUktfQ1RMKGludGVsX2Rw
LT5wc3IudHJhbnNjb2RlciksCiAJCQkgICAgICAgUFNSMl9NQU5fVFJLX0NUTF9FTkFCTEUpOwog
CX0gZWxzZSBpZiAoSEFTX1BTUjJfU0VMX0ZFVENIKGRldl9wcml2KSkgewogCQlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwKLQkJCSAgICAgICBQU1IyX01BTl9UUktfQ1RMKGRldl9wcml2LT5wc3Iu
dHJhbnNjb2RlciksIDApOworCQkJICAgICAgIFBTUjJfTUFOX1RSS19DVEwoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKSwgMCk7CiAJfQogCiAJLyoKIAkgKiBQU1IyIEhXIGlzIGluY29ycmVjdGx5
IHVzaW5nIEVEUF9QU1JfVFAxX1RQM19TRUwgYW5kIEJTcGVjIGlzCiAJICogcmVjb21tZW5kaW5n
IGtlZXAgdGhpcyBiaXQgdW5zZXQgd2hpbGUgUFNSMiBpcyBlbmFibGVkLgogCSAqLwotCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIp
LCAwKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKSwgMCk7CiAKLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJf
Q1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2
X3ByaXYsIEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogfQog
CiBzdGF0aWMgYm9vbApAQCAtNTkzLDU1ICs1ODksNTggQEAgc3RhdGljIHUzMiBpbnRlbF9nZXRf
ZnJhbWVfdGltZV91cyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3N0YXRlKQogCQkJ
ICAgIGRybV9tb2RlX3ZyZWZyZXNoKCZjc3RhdGUtPmh3LmFkanVzdGVkX21vZGUpKTsKIH0KIAot
c3RhdGljIHZvaWQgcHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKK3N0YXRpYyB2b2lkIHBzcjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJCSAgICAgdTMyIGlkbGVfZnJhbWVzKQogeworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwog
CXUzMiB2YWw7CiAKIAlpZGxlX2ZyYW1lcyA8PD0gIEVEUF9QU1IyX0lETEVfRlJBTUVfU0hJRlQ7
Ci0JdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5w
c3IudHJhbnNjb2RlcikpOworCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1Iy
X0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAl2YWwgJj0gfkVEUF9QU1IyX0lETEVf
RlJBTUVfTUFTSzsKIAl2YWwgfD0gaWRsZV9mcmFtZXM7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3By
aXYsIEVEUF9QU1IyX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOworCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KSwgdmFsKTsKIH0KIAotc3RhdGljIHZvaWQgdGdsX3BzcjJfZW5hYmxlX2RjM2NvKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHRnbF9wc3IyX2VuYWJsZV9k
YzNjbyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCXBzcjJfcHJvZ3JhbV9pZGxlX2Zy
YW1lcyhkZXZfcHJpdiwgMCk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CisKKwlwc3IyX3Byb2dyYW1faWRsZV9mcmFtZXMoaW50ZWxf
ZHAsIDApOwogCWludGVsX2Rpc3BsYXlfcG93ZXJfc2V0X3RhcmdldF9kY19zdGF0ZShkZXZfcHJp
diwgRENfU1RBVEVfRU5fREMzQ08pOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfcHNyMl9kaXNhYmxl
X2RjM2NvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHRn
bF9wc3IyX2Rpc2FibGVfZGMzY28oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZGV2X3ByaXYtPnBzci5kcDsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCWludGVsX2Rp
c3BsYXlfcG93ZXJfc2V0X3RhcmdldF9kY19zdGF0ZShkZXZfcHJpdiwgRENfU1RBVEVfRU5fVVBU
T19EQzYpOwotCXBzcjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhkZXZfcHJpdiwgcHNyX2NvbXB1dGVf
aWRsZV9mcmFtZXMoaW50ZWxfZHApKTsKKwlwc3IyX3Byb2dyYW1faWRsZV9mcmFtZXMoaW50ZWxf
ZHAsIHBzcl9jb21wdXRlX2lkbGVfZnJhbWVzKGludGVsX2RwKSk7CiB9CiAKIHN0YXRpYyB2b2lk
IHRnbF9kYzNjb19kaXNhYmxlX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9Ci0JCWNvbnRhaW5lcl9vZih3b3JrLCB0
eXBlb2YoKmRldl9wcml2KSwgcHNyLmRjM2NvX3dvcmsud29yayk7CisJc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCA9CisJCWNvbnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKmludGVsX2RwKSwgcHNy
LmRjM2NvX3dvcmsud29yayk7CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwor
CW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiAJLyogSWYgZGVsYXllZCB3b3JrIGlz
IHBlbmRpbmcsIGl0IGlzIG5vdCBpZGxlICovCi0JaWYgKGRlbGF5ZWRfd29ya19wZW5kaW5nKCZk
ZXZfcHJpdi0+cHNyLmRjM2NvX3dvcmspKQorCWlmIChkZWxheWVkX3dvcmtfcGVuZGluZygmaW50
ZWxfZHAtPnBzci5kYzNjb193b3JrKSkKIAkJZ290byB1bmxvY2s7CiAKLQl0Z2xfcHNyMl9kaXNh
YmxlX2RjM2NvKGRldl9wcml2KTsKKwl0Z2xfcHNyMl9kaXNhYmxlX2RjM2NvKGludGVsX2RwKTsK
IHVubG9jazoKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5s
b2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfZGlzYWxsb3df
ZGMzY29fb25fcHNyMl9leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0
YXRpYyB2b2lkIHRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIHsKLQlpZiAoIWRldl9wcml2LT5wc3IuZGMzY29fZW5hYmxlZCkKKwlpZiAo
IWludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCkKIAkJcmV0dXJuOwogCi0JY2FuY2VsX2RlbGF5
ZWRfd29yaygmZGV2X3ByaXYtPnBzci5kYzNjb193b3JrKTsKKwljYW5jZWxfZGVsYXllZF93b3Jr
KCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspOwogCS8qIEJlZm9yZSBQU1IyIGV4aXQgZGlzYWxs
b3cgZGMzY28qLwotCXRnbF9wc3IyX2Rpc2FibGVfZGMzY28oZGV2X3ByaXYpOworCXRnbF9wc3Iy
X2Rpc2FibGVfZGMzY28oaW50ZWxfZHApOwogfQogCiBzdGF0aWMgdm9pZApAQCAtNzE0LDcgKzcx
Myw3IEBAIHN0YXRpYyBib29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCiAJaW50IGNydGNfdmRpc3BsYXkgPSBjcnRjX3N0YXRlLT5ody5hZGp1c3Rl
ZF9tb2RlLmNydGNfdmRpc3BsYXk7CiAJaW50IHBzcl9tYXhfaCA9IDAsIHBzcl9tYXhfdiA9IDAs
IG1heF9icHAgPSAwOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0KQor
CWlmICghaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCkKIAkJcmV0dXJuIGZhbHNlOwog
CiAJaWYgKCF0cmFuc2NvZGVyX2hhc19wc3IyKGRldl9wcml2LCBjcnRjX3N0YXRlLT5jcHVfdHJh
bnNjb2RlcikpIHsKQEAgLTcyNCw3ICs3MjMsNyBAQCBzdGF0aWMgYm9vbCBpbnRlbF9wc3IyX2Nv
bmZpZ192YWxpZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQlyZXR1cm4gZmFsc2U7CiAJ
fQogCi0JaWYgKCFwc3IyX2dsb2JhbF9lbmFibGVkKGRldl9wcml2KSkgeworCWlmICghcHNyMl9n
bG9iYWxfZW5hYmxlZChpbnRlbF9kcCkpIHsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0s
ICJQU1IyIGRpc2FibGVkIGJ5IGZsYWdcbiIpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQpAQCAtNzcz
LDEwICs3NzIsMTAgQEAgc3RhdGljIGJvb2wgaW50ZWxfcHNyMl9jb25maWdfdmFsaWQoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKIAkgKiBvbmx5IG5lZWQgdG8gdmFsaWRhdGUgdGhlIFNVIGJs
b2NrIHdpZHRoIGlzIGEgbXVsdGlwbGUgb2YKIAkgKiB4IGdyYW51bGFyaXR5LgogCSAqLwotCWlm
IChjcnRjX2hkaXNwbGF5ICUgZGV2X3ByaXYtPnBzci5zdV94X2dyYW51bGFyaXR5KSB7CisJaWYg
KGNydGNfaGRpc3BsYXkgJSBpbnRlbF9kcC0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkpIHsKIAkJZHJt
X2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCiAJCQkgICAgIlBTUjIgbm90IGVuYWJsZWQsIGhkaXNw
bGF5KCVkKSBub3QgbXVsdGlwbGUgb2YgJWRcbiIsCi0JCQkgICAgY3J0Y19oZGlzcGxheSwgZGV2
X3ByaXYtPnBzci5zdV94X2dyYW51bGFyaXR5KTsKKwkJCSAgICBjcnRjX2hkaXNwbGF5LCBpbnRl
bF9kcC0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQogCkBAIC04
MTEsMzAgKzgxMCwyNSBAQCB2b2lkIGludGVsX3Bzcl9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAogCQkmY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKIAlpbnQg
cHNyX3NldHVwX3RpbWU7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpKQorCWlmICghQ0FOX1BT
UihpbnRlbF9kcCkpCiAJCXJldHVybjsKIAotCWlmIChpbnRlbF9kcCAhPSBkZXZfcHJpdi0+cHNy
LmRwKQotCQlyZXR1cm47Ci0KLQlpZiAoIXBzcl9nbG9iYWxfZW5hYmxlZChkZXZfcHJpdikpIHsK
KwlpZiAoIXBzcl9nbG9iYWxfZW5hYmxlZChpbnRlbF9kcCkpIHsKIAkJZHJtX2RiZ19rbXMoJmRl
dl9wcml2LT5kcm0sICJQU1IgZGlzYWJsZWQgYnkgZmxhZ1xuIik7CiAJCXJldHVybjsKIAl9CiAK
IAkvKgogCSAqIEhTVyBzcGVjIGV4cGxpY2l0bHkgc2F5cyBQU1IgaXMgdGllZCB0byBwb3J0IEEu
Ci0JICogQkRXKyBwbGF0Zm9ybXMgaGF2ZSBhIGluc3RhbmNlIG9mIFBTUiByZWdpc3RlcnMgcGVy
IHRyYW5zY29kZXIgYnV0Ci0JICogZm9yIG5vdyBpdCBvbmx5IHN1cHBvcnRzIG9uZSBpbnN0YW5j
ZSBvZiBQU1IsIHNvIGxldHMga2VlcCBpdAotCSAqIGhhcmRjb2RlZCB0byBQT1JUX0EKKwkgKiBC
RFcrIHBsYXRmb3JtcyBoYXZlIGEgaW5zdGFuY2Ugb2YgUFNSIHJlZ2lzdGVycyBwZXIgdHJhbnNj
b2Rlci4KIAkgKi8KLQlpZiAoZGlnX3BvcnQtPmJhc2UucG9ydCAhPSBQT1JUX0EpIHsKKwlpZiAo
SVNfSEFTV0VMTChkZXZfcHJpdikgJiYgZGlnX3BvcnQtPmJhc2UucG9ydCAhPSBQT1JUX0EpIHsK
IAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCiAJCQkgICAgIlBTUiBjb25kaXRpb24gZmFp
bGVkOiBQb3J0IG5vdCBzdXBwb3J0ZWRcbiIpOwogCQlyZXR1cm47CiAJfQogCi0JaWYgKGRldl9w
cml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUpIHsKKwlpZiAoaW50ZWxfZHAtPnBzci5zaW5rX25v
dF9yZWxpYWJsZSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAiUFNS
IHNpbmsgaW1wbGVtZW50YXRpb24gaXMgbm90IHJlbGlhYmxlXG4iKTsKIAkJcmV0dXJuOwpAQCAt
ODcwLDIzICs4NjQsMjQgQEAgdm9pZCBpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9hY3RpdmF0ZShzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWVudW0gdHJhbnNjb2RlciB0cmFuc2NvZGVyID0g
aW50ZWxfZHAtPnBzci50cmFuc2NvZGVyOwogCi0JaWYgKHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2
X3ByaXYsIGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpCisJaWYgKHRyYW5zY29kZXJfaGFzX3Bz
cjIoZGV2X3ByaXYsIHRyYW5zY29kZXIpKQogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwK
LQkJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBz
ci50cmFuc2NvZGVyKSkgJiBFRFBfUFNSMl9FTkFCTEUpOworCQkJICAgIGludGVsX2RlX3JlYWQo
ZGV2X3ByaXYsIEVEUF9QU1IyX0NUTCh0cmFuc2NvZGVyKSkgJiBFRFBfUFNSMl9FTkFCTEUpOwog
CiAJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sCi0JCSAgICBpbnRlbF9kZV9yZWFkKGRldl9w
cml2LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKSAmIEVEUF9QU1JfRU5B
QkxFKTsKLQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZGV2X3ByaXYtPnBzci5hY3RpdmUp
OwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wc3IubG9jayk7CisJCSAgICBpbnRl
bF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSX0NUTCh0cmFuc2NvZGVyKSkgJiBFRFBfUFNSX0VO
QUJMRSk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5wc3IuYWN0aXZl
KTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJLyogcHNy
MSBhbmQgcHNyMiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiovCi0JaWYgKGRldl9wcml2LT5wc3Iu
cHNyMl9lbmFibGVkKQorCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkKIAkJaHN3X2Fj
dGl2YXRlX3BzcjIoaW50ZWxfZHApOwogCWVsc2UKIAkJaHN3X2FjdGl2YXRlX3BzcjEoaW50ZWxf
ZHApOwogCi0JZGV2X3ByaXYtPnBzci5hY3RpdmUgPSB0cnVlOworCWludGVsX2RwLT5wc3IuYWN0
aXZlID0gdHJ1ZTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2Uoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKQEAgLTkwMiw3ICs4OTcsNyBAQCBzdGF0aWMgdm9pZCBp
bnRlbF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChJ
U19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQloc3dfcHNy
X3NldHVwX2F1eChpbnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQg
JiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJs
ZWQgJiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKIAkJCQkJICAgIUlTX0dFTUlOSUxBS0UoZGV2
X3ByaXYpKSkgewogCQlpOTE1X3JlZ190IHJlZyA9IENISUNLRU5fVFJBTlMoY3B1X3RyYW5zY29k
ZXIpOwogCQl1MzIgY2hpY2tlbiA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJlZyk7CkBAIC05
MjYsMTAgKzkyMSwxMCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEpCiAJ
CW1hc2sgfD0gRURQX1BTUl9ERUJVR19NQVNLX0RJU1BfUkVHX1dSSVRFOwogCi0JaW50ZWxfZGVf
d3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfREVCVUcoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwK
KwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9ERUJVRyhpbnRlbF9kcC0+cHNyLnRy
YW5zY29kZXIpLAogCQkgICAgICAgbWFzayk7CiAKLQlwc3JfaXJxX2NvbnRyb2woZGV2X3ByaXYp
OworCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7CiAKIAlpZiAoY3J0Y19zdGF0ZS0+ZGMzY29f
ZXhpdGxpbmUpIHsKIAkJdTMyIHZhbDsKQEAgLTk0NywzMCArOTQyLDMwIEBAIHN0YXRpYyB2b2lk
IGludGVsX3Bzcl9lbmFibGVfc291cmNlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAlp
ZiAoSEFTX1BTUl9IV19UUkFDS0lORyhkZXZfcHJpdikgJiYgSEFTX1BTUjJfU0VMX0ZFVENIKGRl
dl9wcml2KSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElDS0VOX1BBUjFfMSwgSUdOT1JF
X1BTUjJfSFdfVFJBQ0tJTkcsCi0JCQkgICAgIGRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0Y2hf
ZW5hYmxlZCA/CisJCQkgICAgIGludGVsX2RwLT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA/
CiAJCQkgICAgIElHTk9SRV9QU1IyX0hXX1RSQUNLSU5HIDogMCk7CiB9CiAKLXN0YXRpYyB2b2lk
IGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAogCQkJCSAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0
ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZGV2X3ByaXYtPnBzci5kcDsKKwlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsK
IAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGlu
dGVsX2RwKTsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkaWdfcG9ydC0+YmFz
ZTsKIAl1MzIgdmFsOwogCi0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGRldl9wcml2LT5w
c3IuZW5hYmxlZCk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5wc3Iu
ZW5hYmxlZCk7CiAKLQlkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmhh
c19wc3IyOwotCWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzID0gMDsKLQlkZXZf
cHJpdi0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0YyktPnBp
cGU7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19lbmFibGVkID0gISFjcnRjX3N0YXRlLT5kYzNjb19l
eGl0bGluZTsKLQlkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIgPSBjcnRjX3N0YXRlLT5jcHVfdHJh
bnNjb2RlcjsKKwlpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmhhc19w
c3IyOworCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzID0gMDsKKwlpbnRlbF9k
cC0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0YyktPnBpcGU7
CisJaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkID0gISFjcnRjX3N0YXRlLT5kYzNjb19leGl0
bGluZTsKKwlpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIgPSBjcnRjX3N0YXRlLT5jcHVfdHJhbnNj
b2RlcjsKIAkvKiBEQzUvREM2IHJlcXVpcmVzIGF0IGxlYXN0IDYgaWRsZSBmcmFtZXMgKi8KIAl2
YWwgPSB1c2Vjc190b19qaWZmaWVzKGludGVsX2dldF9mcmFtZV90aW1lX3VzKGNydGNfc3RhdGUp
ICogNik7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19leGl0X2RlbGF5ID0gdmFsOwotCWRldl9wcml2
LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmVuYWJsZV9wc3IyX3Nl
bF9mZXRjaDsKKwlpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRfZGVsYXkgPSB2YWw7CisJaW50ZWxf
ZHAtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkID0gY3J0Y19zdGF0ZS0+ZW5hYmxlX3BzcjJf
c2VsX2ZldGNoOwogCiAJLyoKIAkgKiBJZiBhIFBTUiBlcnJvciBoYXBwZW5lZCBhbmQgdGhlIGRy
aXZlciBpcyByZWxvYWRlZCwgdGhlIEVEUF9QU1JfSUlSCkBAIC05ODIsMjcgKzk3NywyNyBAQCBz
dGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsCiAJICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpIHsKIAkJ
dmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgVFJBTlNfUFNSX0lJUihkZXZf
cHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgVFJBTlNfUFNSX0lJUihpbnRlbF9kcC0+
cHNyLnRyYW5zY29kZXIpKTsKIAkJdmFsICY9IEVEUF9QU1JfRVJST1IoMCk7CiAJfSBlbHNlIHsK
IAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9JSVIpOwotCQl2YWwgJj0g
RURQX1BTUl9FUlJPUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCQl2YWwgJj0gRURQX1BT
Ul9FUlJPUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCX0KIAlpZiAodmFsKSB7Ci0JCWRl
dl9wcml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUgPSB0cnVlOworCQlpbnRlbF9kcC0+cHNyLnNp
bmtfbm90X3JlbGlhYmxlID0gdHJ1ZTsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCiAJ
CQkgICAgIlBTUiBpbnRlcnJ1cHRpb24gZXJyb3Igc2V0LCBub3QgZW5hYmxpbmcgUFNSXG4iKTsK
IAkJcmV0dXJuOwogCX0KIAogCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiRW5hYmxpbmcg
UFNSJXNcbiIsCi0JCSAgICBkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCA/ICIyIiA6ICIxIik7
CisJCSAgICBpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA/ICIyIiA6ICIxIik7CiAJaW50ZWxf
ZHBfY29tcHV0ZV9wc3JfdnNjX3NkcChpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSwK
LQkJCQkgICAgICZkZXZfcHJpdi0+cHNyLnZzYyk7Ci0JaW50ZWxfd3JpdGVfZHBfdnNjX3NkcChl
bmNvZGVyLCBjcnRjX3N0YXRlLCAmZGV2X3ByaXYtPnBzci52c2MpOworCQkJCSAgICAgJmludGVs
X2RwLT5wc3IudnNjKTsKKwlpbnRlbF93cml0ZV9kcF92c2Nfc2RwKGVuY29kZXIsIGNydGNfc3Rh
dGUsICZpbnRlbF9kcC0+cHNyLnZzYyk7CiAJaW50ZWxfcHNyX2VuYWJsZV9zaW5rKGludGVsX2Rw
KTsKIAlpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7Ci0JZGV2
X3ByaXYtPnBzci5lbmFibGVkID0gdHJ1ZTsKKwlpbnRlbF9kcC0+cHNyLmVuYWJsZWQgPSB0cnVl
OwogCiAJaW50ZWxfcHNyX2FjdGl2YXRlKGludGVsX2RwKTsKIH0KQEAgLTEwMjEsNyArMTAxNiw3
IEBAIHZvaWQgaW50ZWxfcHNyX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
OwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSB8fCBkZXZfcHJpdi0+cHNyLmRwICE9IGludGVs
X2RwKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCiAJCXJldHVybjsKIAogCWlmICghY3J0Y19z
dGF0ZS0+aGFzX3BzcikKQEAgLTEwMjksNDYgKzEwMjQsNDcgQEAgdm9pZCBpbnRlbF9wc3JfZW5h
YmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAlkcm1fV0FSTl9PTigmZGV2X3ByaXYt
PmRybSwgZGV2X3ByaXYtPmRycnMuZHApOwogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5s
b2NrKTsKLQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChkZXZfcHJpdiwgY3J0Y19zdGF0ZSwgY29u
bl9zdGF0ZSk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X2xv
Y2soJmludGVsX2RwLT5wc3IubG9jayk7CisJaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoaW50ZWxf
ZHAsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBz
ci5sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgaW50ZWxfcHNyX2V4aXQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgaW50ZWxfcHNyX2V4aXQoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSBkcF90b19pOTE1KGludGVsX2RwKTsKIAl1MzIgdmFsOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNy
LmFjdGl2ZSkgewotCQlpZiAodHJhbnNjb2Rlcl9oYXNfcHNyMihkZXZfcHJpdiwgZGV2X3ByaXYt
PnBzci50cmFuc2NvZGVyKSkgeworCWlmICghaW50ZWxfZHAtPnBzci5hY3RpdmUpIHsKKwkJaWYg
KHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcikp
IHsKIAkJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCSAgICBFRFBfUFNSMl9D
VEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJCSAgICBFRFBfUFNSMl9DVEwoaW50
ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwg
dmFsICYgRURQX1BTUjJfRU5BQkxFKTsKIAkJfQogCiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2
X3ByaXYsCi0JCQkJICAgIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOwor
CQkJCSAgICBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZHJtX1dB
Uk5fT04oJmRldl9wcml2LT5kcm0sIHZhbCAmIEVEUF9QU1JfRU5BQkxFKTsKIAogCQlyZXR1cm47
CiAJfQogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSB7Ci0JCXRnbF9kaXNhbGxv
d19kYzNjb19vbl9wc3IyX2V4aXQoZGV2X3ByaXYpOworCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJf
ZW5hYmxlZCkgeworCQl0Z2xfZGlzYWxsb3dfZGMzY29fb25fcHNyMl9leGl0KGludGVsX2RwKTsK
IAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgRURQX1BTUjJfQ1RMKGRl
dl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSMl9DVEwoaW50ZWxfZHAt
PnBzci50cmFuc2NvZGVyKSk7CiAJCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCAhKHZhbCAm
IEVEUF9QU1IyX0VOQUJMRSkpOwogCQl2YWwgJj0gfkVEUF9QU1IyX0VOQUJMRTsKIAkJaW50ZWxf
ZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CisJCQkgICAgICAgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CiAJfSBlbHNlIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwKLQkJCQkgICAgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJ
CQkJICAgIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQlkcm1fV0FS
Tl9PTigmZGV2X3ByaXYtPmRybSwgISh2YWwgJiBFRFBfUFNSX0VOQUJMRSkpOwogCQl2YWwgJj0g
fkVEUF9QU1JfRU5BQkxFOwogCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwKLQkJCSAgICAgICBF
RFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOworCQkJICAgICAgIEVE
UF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiAJfQotCWRldl9wcml2
LT5wc3IuYWN0aXZlID0gZmFsc2U7CisJaW50ZWxfZHAtPnBzci5hY3RpdmUgPSBmYWxzZTsKIH0K
IAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApCkBAIC0xMDc3LDIxICsxMDczLDIxIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9k
aXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWk5MTVfcmVnX3QgcHNy
X3N0YXR1czsKIAl1MzIgcHNyX3N0YXR1c19tYXNrOwogCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgm
ZGV2X3ByaXYtPnBzci5sb2NrKTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZpbnRlbF9kcC0+cHNy
LmxvY2spOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQpCisJaWYgKCFpbnRlbF9kcC0+
cHNyLmVuYWJsZWQpCiAJCXJldHVybjsKIAogCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAi
RGlzYWJsaW5nIFBTUiVzXG4iLAotCQkgICAgZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgPyAi
MiIgOiAiMSIpOworCQkgICAgaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQgPyAiMiIgOiAiMSIp
OwogCi0JaW50ZWxfcHNyX2V4aXQoZGV2X3ByaXYpOworCWludGVsX3Bzcl9leGl0KGludGVsX2Rw
KTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkgewotCQlwc3Jfc3RhdHVzID0g
RURQX1BTUjJfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJaWYgKGludGVsX2Rw
LT5wc3IucHNyMl9lbmFibGVkKSB7CisJCXBzcl9zdGF0dXMgPSBFRFBfUFNSMl9TVEFUVVMoaW50
ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJcHNyX3N0YXR1c19tYXNrID0gRURQX1BTUjJfU1RB
VFVTX1NUQVRFX01BU0s7CiAJfSBlbHNlIHsKLQkJcHNyX3N0YXR1cyA9IEVEUF9QU1JfU1RBVFVT
KGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJCXBzcl9zdGF0dXMgPSBFRFBfUFNSX1NUQVRV
UyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCQlwc3Jfc3RhdHVzX21hc2sgPSBFRFBfUFNS
X1NUQVRVU19TVEFURV9NQVNLOwogCX0KIApAQCAtMTEwMSw3ICsxMDk3LDcgQEAgc3RhdGljIHZv
aWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJ
CWRybV9lcnIoJmRldl9wcml2LT5kcm0sICJUaW1lZCBvdXQgd2FpdGluZyBQU1IgaWRsZSBzdGF0
ZVxuIik7CiAKIAkvKiBXQSAxNDA4MzMwODQ3ICovCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9z
ZWxfZmV0Y2hfZW5hYmxlZCAmJgorCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfc2VsX2ZldGNoX2Vu
YWJsZWQgJiYKIAkgICAgKElTX1RHTF9ESVNQX1JFVklEKGRldl9wcml2LCBUR0xfUkVWSURfQTAs
IFRHTF9SRVZJRF9BMCkgfHwKIAkgICAgIElTX1JLTF9SRVZJRChkZXZfcHJpdiwgUktMX1JFVklE
X0EwLCBSS0xfUkVWSURfQTApKSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElDS0VOX1BB
UjFfMSwKQEAgLTExMTAsMTAgKzExMDYsMTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2Fi
bGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJLyogRGlzYWJsZSBQU1Igb24g
U2luayAqLwogCWRybV9kcF9kcGNkX3dyaXRlYigmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX0VOX0NG
RywgMCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpCisJaWYgKGludGVsX2Rw
LT5wc3IucHNyMl9lbmFibGVkKQogCQlkcm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgs
IERQX1JFQ0VJVkVSX0FMUE1fQ09ORklHLCAwKTsKIAotCWRldl9wcml2LT5wc3IuZW5hYmxlZCA9
IGZhbHNlOworCWludGVsX2RwLT5wc3IuZW5hYmxlZCA9IGZhbHNlOwogfQogCiAvKioKQEAgLTEx
MzEsMjAgKzExMjcsMjIgQEAgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAogCWlmICghb2xkX2NydGNfc3RhdGUtPmhhc19wc3IpCiAJCXJldHVybjsKIAot
CWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgIUNBTl9QU1IoZGV2X3ByaXYpKSkKKwlp
ZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFDQU5fUFNSKGludGVsX2RwKSkpCiAJCXJl
dHVybjsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygm
aW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChpbnRlbF9k
cCk7CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JY2FuY2VsX3dvcmtf
c3luYygmZGV2X3ByaXYtPnBzci53b3JrKTsKLQljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmRl
dl9wcml2LT5wc3IuZGMzY29fd29yayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOworCWNhbmNlbF93b3JrX3N5bmMoJmludGVsX2RwLT5wc3Iud29yayk7CisJY2FuY2VsX2Rl
bGF5ZWRfd29ya19zeW5jKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspOwogfQogCi1zdGF0aWMg
dm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCiAJaWYgKElTX1RJR0VSTEFLRShkZXZfcHJpdikp
CiAJCS8qCiAJCSAqIFdyaXRlcyB0byBDVVJTVVJGTElWRSBpbiBUR0wgYXJlIGNhdXNpbmcgSU9N
TVUgZXJyb3JzIGFuZApAQCAtMTE1OCw3ICsxMTU2LDcgQEAgc3RhdGljIHZvaWQgcHNyX2ZvcmNl
X2h3X3RyYWNraW5nX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkg
KiBTbyB1c2luZyB0aGlzIHdvcmthcm91bmQgdW50aWwgdGhpcyBpc3N1ZSBpcyByb290IGNhdXNl
ZAogCQkgKiBhbmQgYSBiZXR0ZXIgZml4IGlzIGZvdW5kLgogCQkgKi8KLQkJaW50ZWxfcHNyX2V4
aXQoZGV2X3ByaXYpOworCQlpbnRlbF9wc3JfZXhpdChpbnRlbF9kcCk7CiAJZWxzZSBpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQkvKgogCQkgKiBEaXNwbGF5IFdBICMwODg0OiBza2wr
CkBAIC0xMTY5LDEzICsxMTY3LDEzIEBAIHN0YXRpYyB2b2lkIHBzcl9mb3JjZV9od190cmFja2lu
Z19leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJICogYnV0IGl0IG1h
a2VzIG1vcmUgc2Vuc2Ugd3JpdGUgdG8gdGhlIGN1cnJlbnQgYWN0aXZlCiAJCSAqIHBpcGUuCiAJ
CSAqLwotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgQ1VSU1VSRkxJVkUoZGV2X3ByaXYtPnBz
ci5waXBlKSwgMCk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBDVVJTVVJGTElWRShpbnRl
bF9kcC0+cHNyLnBpcGUpLCAwKTsKIAllbHNlCiAJCS8qCiAJCSAqIEEgd3JpdGUgdG8gQ1VSU1VS
RkxJVkUgZG8gbm90IGNhdXNlIEhXIHRyYWNraW5nIHRvIGV4aXQgUFNSCiAJCSAqIG9uIG9sZGVy
IGdlbnMgc28gZG9pbmcgdGhlIG1hbnVhbCBleGl0IGluc3RlYWQuCiAJCSAqLwotCQlpbnRlbF9w
c3JfZXhpdChkZXZfcHJpdik7CisJCWludGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIH0KIAogdm9p
ZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAq
cGxhbmUsCkBAIC0xMjE1LDExICsxMjEzLDExIEBAIHZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3Bs
YW5lX3NlbF9mZXRjaChzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lLAogCWludGVsX2RlX3dyaXRl
X2Z3KGRldl9wcml2LCBQTEFORV9TRUxfRkVUQ0hfU0laRShwaXBlLCBwbGFuZS0+aWQpLCB2YWwp
OwogfQogCi12b2lkIGludGVsX3BzcjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bChjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3ZvaWQgaW50ZWxfcHNyMl9wcm9n
cmFtX3RyYW5zX21hbl90cmtfY3RsKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCSAg
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7Ci0Jc3RydWN0IGlu
dGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRl
dik7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwlzdHJ1Y3Qg
aW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsKIAogCWlmICghSEFTX1BTUjJfU0VMX0ZF
VENIKGRldl9wcml2KSB8fAogCSAgICAhY3J0Y19zdGF0ZS0+ZW5hYmxlX3BzcjJfc2VsX2ZldGNo
KQpAQCAtMTMzNiwxMyArMTMzNCwxMyBAQCB2b2lkIGludGVsX3Bzcl91cGRhdGUoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIAkJICAgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3Rh
dGUgKmNvbm5fc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYt
PnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsKIAlib29sIGVu
YWJsZSwgcHNyMl9lbmFibGU7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8IFJFQURfT05D
RShwc3ItPmRwKSAhPSBpbnRlbF9kcCkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKQogCQlyZXR1
cm47CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X2xvY2soJmlu
dGVsX2RwLT5wc3IubG9jayk7CiAKIAllbmFibGUgPSBjcnRjX3N0YXRlLT5oYXNfcHNyOwogCXBz
cjJfZW5hYmxlID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7CkBAIC0xMzUwLDE1ICsxMzQ4LDE1IEBA
IHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChl
bmFibGUgPT0gcHNyLT5lbmFibGVkICYmIHBzcjJfZW5hYmxlID09IHBzci0+cHNyMl9lbmFibGVk
KSB7CiAJCS8qIEZvcmNlIGEgUFNSIGV4aXQgd2hlbiBlbmFibGluZyBDUkMgdG8gYXZvaWQgQ1JD
IHRpbWVvdXRzICovCiAJCWlmIChjcnRjX3N0YXRlLT5jcmNfZW5hYmxlZCAmJiBwc3ItPmVuYWJs
ZWQpCi0JCQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChkZXZfcHJpdik7CisJCQlwc3JfZm9y
Y2VfaHdfdHJhY2tpbmdfZXhpdChpbnRlbF9kcCk7CiAJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPCA5ICYmIHBzci0+ZW5hYmxlZCkgewogCQkJLyoKIAkJCSAqIEFjdGl2YXRlIFBTUiBh
Z2FpbiBhZnRlciBhIGZvcmNlIGV4aXQgd2hlbiBlbmFibGluZwogCQkJICogQ1JDIGluIG9sZGVy
IGdlbnMKIAkJCSAqLwotCQkJaWYgKCFkZXZfcHJpdi0+cHNyLmFjdGl2ZSAmJgotCQkJICAgICFk
ZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKLQkJCQlzY2hlZHVsZV93b3JrKCZk
ZXZfcHJpdi0+cHNyLndvcmspOworCQkJaWYgKCFpbnRlbF9kcC0+cHNyLmFjdGl2ZSAmJgorCQkJ
ICAgICFpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKKwkJCQlzY2hlZHVsZV93
b3JrKCZpbnRlbF9kcC0+cHNyLndvcmspOwogCQl9CiAKIAkJZ290byB1bmxvY2s7CkBAIC0xMzY4
LDM0ICsxMzY2LDIzIEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwLAogCQlpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoaW50ZWxfZHApOwogCiAJaWYgKGVu
YWJsZSkKLQkJaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoZGV2X3ByaXYsIGNydGNfc3RhdGUsIGNv
bm5fc3RhdGUpOworCQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChpbnRlbF9kcCwgY3J0Y19zdGF0
ZSwgY29ubl9zdGF0ZSk7CiAKIHVubG9jazoKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3Iu
bG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQogCiAvKioKLSAq
IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxlCi0gKiBAbmV3
X2NydGNfc3RhdGU6IG5ldyBDUlRDIHN0YXRlCisgKiBwc3Jfd2FpdF9mb3JfaWRsZSAtIHdhaXQg
Zm9yIFBTUjEgdG8gaWRsZQorICogQGludGVsX2RwOiBJbnRlbCBEUAogICogQG91dF92YWx1ZTog
UFNSIHN0YXR1cyBpbiBjYXNlIG9mIGZhaWx1cmUKICAqCi0gKiBUaGlzIGZ1bmN0aW9uIGlzIGV4
cGVjdGVkIHRvIGJlIGNhbGxlZCBmcm9tIHBpcGVfdXBkYXRlX3N0YXJ0KCkgd2hlcmUgaXQgaXMK
LSAqIG5vdCBleHBlY3RlZCB0byByYWNlIHdpdGggUFNSIGVuYWJsZSBvciBkaXNhYmxlLgotICoK
ICAqIFJldHVybnM6IDAgb24gc3VjY2VzcyBvciAtRVRJTUVPVVQgaWYgUFNSIHN0YXR1cyBkb2Vz
IG5vdCBpZGxlLgorICoKICAqLwotaW50IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwKLQkJCSAgICB1MzIgKm91dF92
YWx1ZSkKK3N0YXRpYyBpbnQgcHNyX3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwgdTMyICpvdXRfdmFsdWUpCiB7Ci0Jc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19p
bnRlbF9jcnRjKG5ld19jcnRjX3N0YXRlLT51YXBpLmNydGMpOwotCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwotCi0JaWYgKCFkZXZf
cHJpdi0+cHNyLmVuYWJsZWQgfHwgIW5ld19jcnRjX3N0YXRlLT5oYXNfcHNyKQotCQlyZXR1cm4g
MDsKLQotCS8qIEZJWE1FOiBVcGRhdGUgdGhpcyBmb3IgUFNSMiBpZiB3ZSBuZWVkIHRvIHdhaXQg
Zm9yIGlkbGUgKi8KLQlpZiAoUkVBRF9PTkNFKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSkK
LQkJcmV0dXJuIDA7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9f
aTkxNShpbnRlbF9kcCk7CiAKIAkvKgogCSAqIEZyb20gYnNwZWM6IFBhbmVsIFNlbGYgUmVmcmVz
aCAoQkRXKykKQEAgLTE0MDMsMzIgKzEzOTAsNjQgQEAgaW50IGludGVsX3Bzcl93YWl0X2Zvcl9p
ZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwKIAkgKiBl
eGl0IHRyYWluaW5nIHRpbWUgKyAxLjUgbXMgb2YgYXV4IGNoYW5uZWwgaGFuZHNoYWtlLiA1MCBt
cyBpcwogCSAqIGRlZmVuc2l2ZSBlbm91Z2ggdG8gY292ZXIgZXZlcnl0aGluZy4KIAkgKi8KLQog
CXJldHVybiBfX2ludGVsX3dhaXRfZm9yX3JlZ2lzdGVyKCZkZXZfcHJpdi0+dW5jb3JlLAotCQkJ
CQkgRURQX1BTUl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwKKwkJCQkJIEVEUF9Q
U1JfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksCiAJCQkJCSBFRFBfUFNSX1NUQVRV
U19TVEFURV9NQVNLLAogCQkJCQkgRURQX1BTUl9TVEFUVVNfU1RBVEVfSURMRSwgMiwgNTAsCiAJ
CQkJCSBvdXRfdmFsdWUpOwogfQogCi1zdGF0aWMgYm9vbCBfX3Bzcl93YWl0X2Zvcl9pZGxlX2xv
Y2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCisvKioKKyAqIGludGVsX3Bz
cl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxlCisgKiBAbmV3X2NydGNfc3Rh
dGU6IG5ldyBDUlRDIHN0YXRlCisgKgorICogVGhpcyBmdW5jdGlvbiBpcyBleHBlY3RlZCB0byBi
ZSBjYWxsZWQgZnJvbSBwaXBlX3VwZGF0ZV9zdGFydCgpIHdoZXJlIGl0IGlzCisgKiBub3QgZXhw
ZWN0ZWQgdG8gcmFjZSB3aXRoIFBTUiBlbmFibGUgb3IgZGlzYWJsZS4KKyAqLwordm9pZCBpbnRl
bF9wc3Jfd2FpdF9mb3JfaWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2Ny
dGNfc3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShuZXdfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOworCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyOworCXUzMiBwc3Jfc3RhdHVzOworCisJaWYgKCFuZXdfY3J0Y19zdGF0ZS0+aGFz
X3BzcikKKwkJcmV0dXJuOworCisJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVu
Y29kZXIpIHsKKwkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChl
bmNvZGVyKTsKKworCQlpZiAoZW5jb2Rlci0+dHlwZSAhPSBJTlRFTF9PVVRQVVRfRURQKQorCQkJ
Y29udGludWU7CisKKwkJLyogd2hlbiB0aGUgUFNSMSBpcyBlbmFibGVkICovCisJCWlmIChpbnRl
bF9kcC0+cHNyLmVuYWJsZWQgJiYgIWludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCQlp
ZiAocHNyX3dhaXRfZm9yX2lkbGUoaW50ZWxfZHAsICZwc3Jfc3RhdHVzKSkKKwkJCQlkcm1fZXJy
KCZkZXZfcHJpdi0+ZHJtLAorCQkJCQkiUFNSIGlkbGUgdGltZWQgb3V0IDB4JXgsIGF0b21pYyB1
cGRhdGUgbWF5IGZhaWxcbiIsCisJCQkJCXBzcl9zdGF0dXMpOworCQl9CisJfQorfQorCitzdGF0
aWMgYm9vbCBfX3Bzcl93YWl0X2Zvcl9pZGxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQogewogCWk5MTVfcmVnX3QgcmVnOwogCXUzMiBtYXNrOwogCWludCBlcnI7CisJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKLQlp
ZiAoIWRldl9wcml2LT5wc3IuZW5hYmxlZCkKKwlpZiAoIWludGVsX2RwLT5wc3IuZW5hYmxlZCkK
IAkJcmV0dXJuIGZhbHNlOwogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSB7Ci0J
CXJlZyA9IEVEUF9QU1IyX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCWlmIChp
bnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkgeworCQlyZWcgPSBFRFBfUFNSMl9TVEFUVVMoaW50
ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJbWFzayA9IEVEUF9QU1IyX1NUQVRVU19TVEFURV9N
QVNLOwogCX0gZWxzZSB7Ci0JCXJlZyA9IEVEUF9QU1JfU1RBVFVTKGRldl9wcml2LT5wc3IudHJh
bnNjb2Rlcik7CisJCXJlZyA9IEVEUF9QU1JfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
cik7CiAJCW1hc2sgPSBFRFBfUFNSX1NUQVRVU19TVEFURV9NQVNLOwogCX0KIAotCW11dGV4X3Vu
bG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3Iu
bG9jayk7CiAKIAllcnIgPSBpbnRlbF9kZV93YWl0X2Zvcl9jbGVhcihkZXZfcHJpdiwgcmVnLCBt
YXNrLCA1MCk7CiAJaWYgKGVycikKQEAgLTE0MzYsOCArMTQ1NSw4IEBAIHN0YXRpYyBib29sIF9f
cHNyX3dhaXRfZm9yX2lkbGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dikKIAkJCSJUaW1lZCBvdXQgd2FpdGluZyBmb3IgUFNSIElkbGUgZm9yIHJlLWVuYWJsZVxuIik7
CiAKIAkvKiBBZnRlciB0aGUgdW5sb2NrZWQgd2FpdCwgdmVyaWZ5IHRoYXQgUFNSIGlzIHN0aWxs
IHdhbnRlZCEgKi8KLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCXJldHVybiBl
cnIgPT0gMCAmJiBkZXZfcHJpdi0+cHNyLmVuYWJsZWQ7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAt
PnBzci5sb2NrKTsKKwlyZXR1cm4gZXJyID09IDAgJiYgaW50ZWxfZHAtPnBzci5lbmFibGVkOwog
fQogCiBzdGF0aWMgaW50IGludGVsX3Bzcl9mYXN0c2V0X2ZvcmNlKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKQEAgLTE1MDMsMTEgKzE1MjIsMTIgQEAgc3RhdGljIGludCBpbnRl
bF9wc3JfZmFzdHNldF9mb3JjZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJ
cmV0dXJuIGVycjsKIH0KIAotaW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQoraW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwgdTY0IHZhbCkKIHsKIAljb25zdCB1MzIgbW9kZSA9IHZh
bCAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSzsKIAl1MzIgb2xkX21vZGU7CiAJaW50IHJldDsK
KwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2Rw
KTsKIAogCWlmICh2YWwgJiB+KEk5MTVfUFNSX0RFQlVHX0lSUSB8IEk5MTVfUFNSX0RFQlVHX01P
REVfTUFTSykgfHwKIAkgICAgbW9kZSA+IEk5MTVfUFNSX0RFQlVHX0ZPUkNFX1BTUjEpIHsKQEAg
LTE1MTUsMjEgKzE1MzUsMjEgQEAgaW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAK
LQlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmRldl9wcml2LT5wc3IubG9jayk7CisJ
cmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCWlm
IChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlvbGRfbW9kZSA9IGRldl9wcml2LT5wc3IuZGVidWcg
JiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0s7Ci0JZGV2X3ByaXYtPnBzci5kZWJ1ZyA9IHZhbDsK
KwlvbGRfbW9kZSA9IGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01B
U0s7CisJaW50ZWxfZHAtPnBzci5kZWJ1ZyA9IHZhbDsKIAogCS8qCiAJICogRG8gaXQgcmlnaHQg
YXdheSBpZiBpdCdzIGFscmVhZHkgZW5hYmxlZCwgb3RoZXJ3aXNlIGl0IHdpbGwgYmUgZG9uZQog
CSAqIHdoZW4gZW5hYmxpbmcgdGhlIHNvdXJjZS4KIAkgKi8KLQlpZiAoZGV2X3ByaXYtPnBzci5l
bmFibGVkKQotCQlwc3JfaXJxX2NvbnRyb2woZGV2X3ByaXYpOworCWlmIChpbnRlbF9kcC0+cHNy
LmVuYWJsZWQpCisJCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7CiAKLQltdXRleF91bmxvY2so
JmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2sp
OwogCiAJaWYgKG9sZF9tb2RlICE9IG1vZGUpCiAJCXJldCA9IGludGVsX3Bzcl9mYXN0c2V0X2Zv
cmNlKGRldl9wcml2KTsKQEAgLTE1MzcsMjggKzE1NTcsMjggQEAgaW50IGludGVsX3Bzcl9kZWJ1
Z19zZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQogCXJldHVy
biByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3Bzcl9oYW5kbGVfaXJxKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9oYW5kbGVfaXJx
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3IgPSAm
ZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsK
IAotCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChwc3ItPmRwKTsKKwlpbnRlbF9wc3JfZGlzYWJs
ZV9sb2NrZWQoaW50ZWxfZHApOwogCXBzci0+c2lua19ub3RfcmVsaWFibGUgPSB0cnVlOwogCS8q
IGxldCdzIG1ha2Ugc3VyZSB0aGF0IHNpbmsgaXMgYXdha2VuICovCi0JZHJtX2RwX2RwY2Rfd3Jp
dGViKCZwc3ItPmRwLT5hdXgsIERQX1NFVF9QT1dFUiwgRFBfU0VUX1BPV0VSX0QwKTsKKwlkcm1f
ZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1NFVF9QT1dFUiwgRFBfU0VUX1BPV0VS
X0QwKTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0
ICp3b3JrKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9Ci0JCWNvbnRh
aW5lcl9vZih3b3JrLCB0eXBlb2YoKmRldl9wcml2KSwgcHNyLndvcmspOworCXN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAgPQorCQljb250YWluZXJfb2Yod29yaywgdHlwZW9mKCppbnRlbF9kcCks
IHBzci53b3JrKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhf
bG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVk
KQorCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQogCQlnb3RvIHVubG9jazsKIAotCWlmIChS
RUFEX09OQ0UoZGV2X3ByaXYtPnBzci5pcnFfYXV4X2Vycm9yKSkKLQkJaW50ZWxfcHNyX2hhbmRs
ZV9pcnEoZGV2X3ByaXYpOworCWlmIChSRUFEX09OQ0UoaW50ZWxfZHAtPnBzci5pcnFfYXV4X2Vy
cm9yKSkKKwkJaW50ZWxfcHNyX2hhbmRsZV9pcnEoaW50ZWxfZHApOwogCiAJLyoKIAkgKiBXZSBo
YXZlIHRvIG1ha2Ugc3VyZSBQU1IgaXMgcmVhZHkgZm9yIHJlLWVuYWJsZQpAQCAtMTU2Niw3ICsx
NTg2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3
b3JrKQogCSAqIFBTUiBtaWdodCB0YWtlIHNvbWUgdGltZSB0byBnZXQgZnVsbHkgZGlzYWJsZWQK
IAkgKiBhbmQgYmUgcmVhZHkgZm9yIHJlLWVuYWJsZS4KIAkgKi8KLQlpZiAoIV9fcHNyX3dhaXRf
Zm9yX2lkbGVfbG9ja2VkKGRldl9wcml2KSkKKwlpZiAoIV9fcHNyX3dhaXRfZm9yX2lkbGVfbG9j
a2VkKGludGVsX2RwKSkKIAkJZ290byB1bmxvY2s7CiAKIAkvKgpAQCAtMTU3NCwxMiArMTU5NCwx
MiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmsp
CiAJICogcmVjaGVjay4gU2luY2UgcHNyX2ZsdXNoIGZpcnN0IGNsZWFycyB0aGlzIGFuZCB0aGVu
IHJlc2NoZWR1bGVzIHdlCiAJICogd29uJ3QgZXZlciBtaXNzIGEgZmx1c2ggd2hlbiBiYWlsaW5n
IG91dCBoZXJlLgogCSAqLwotCWlmIChkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0
cyB8fCBkZXZfcHJpdi0+cHNyLmFjdGl2ZSkKKwlpZiAoaW50ZWxfZHAtPnBzci5idXN5X2Zyb250
YnVmZmVyX2JpdHMgfHwgaW50ZWxfZHAtPnBzci5hY3RpdmUpCiAJCWdvdG8gdW5sb2NrOwogCi0J
aW50ZWxfcHNyX2FjdGl2YXRlKGRldl9wcml2LT5wc3IuZHApOworCWludGVsX3Bzcl9hY3RpdmF0
ZShpbnRlbF9kcCk7CiB1bmxvY2s6Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2sp
OworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogLyoqCkBAIC0xNTk4
LDI3ICsxNjE4LDM1IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93b3JrKHN0cnVjdCB3b3JrX3N0
cnVjdCAqd29yaykKIHZvaWQgaW50ZWxfcHNyX2ludmFsaWRhdGUoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAogCQkJICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLCBlbnVtIGZi
X29wX29yaWdpbiBvcmlnaW4pCiB7Ci0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKLQkJcmV0dXJu
OworCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHA7CiAKLQlpZiAob3JpZ2luID09IE9SSUdJTl9GTElQKQotCQlyZXR1cm47CisJZm9yX2Vh
Y2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKIAotCW11dGV4X2xvY2soJmRl
dl9wcml2LT5wc3IubG9jayk7Ci0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQpIHsKLQkJbXV0
ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCQlyZXR1cm47Ci0JfQorCQlpbnRlbF9k
cCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKwkJaWYgKGVuY29kZXItPnR5cGUgIT0gSU5U
RUxfT1VUUFVUX0VEUCkKKwkJCWNvbnRpbnVlOworCQlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKQor
CQkJY29udGludWU7CiAKLQlmcm9udGJ1ZmZlcl9iaXRzICY9IElOVEVMX0ZST05UQlVGRkVSX0FM
TF9NQVNLKGRldl9wcml2LT5wc3IucGlwZSk7Ci0JZGV2X3ByaXYtPnBzci5idXN5X2Zyb250YnVm
ZmVyX2JpdHMgfD0gZnJvbnRidWZmZXJfYml0czsKKwkJaWYgKG9yaWdpbiA9PSBPUklHSU5fRkxJ
UCkKKwkJCWNvbnRpbnVlOworCisJCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJ
CWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKSB7CisJCQltdXRleF91bmxvY2soJmludGVsX2Rw
LT5wc3IubG9jayk7CisJCQljb250aW51ZTsKKwkJfQogCi0JaWYgKGZyb250YnVmZmVyX2JpdHMp
Ci0JCWludGVsX3Bzcl9leGl0KGRldl9wcml2KTsKKwkJZnJvbnRidWZmZXJfYml0cyAmPSBJTlRF
TF9GUk9OVEJVRkZFUl9BTExfTUFTSyhpbnRlbF9kcC0+cHNyLnBpcGUpOworCQlpbnRlbF9kcC0+
cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyB8PSBmcm9udGJ1ZmZlcl9iaXRzOwogCi0JbXV0ZXhf
dW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotfQorCQlpZiAoZnJvbnRidWZmZXJfYml0cykK
KwkJCWludGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIAorCQltdXRleF91bmxvY2soJmludGVsX2Rw
LT5wc3IubG9jayk7CisJfQorfQogLyoKICAqIFdoZW4gd2Ugd2lsbCBiZSBjb21wbGV0ZWx5IHJl
bHkgb24gUFNSMiBTL1cgdHJhY2tpbmcgaW4gZnV0dXJlLAogICogaW50ZWxfcHNyX2ZsdXNoKCkg
d2lsbCBpbnZhbGlkYXRlIGFuZCBmbHVzaCB0aGUgUFNSIGZvciBPUklHSU5fRkxJUApAQCAtMTYy
NiwxNSArMTY1NCwxNSBAQCB2b2lkIGludGVsX3Bzcl9pbnZhbGlkYXRlKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKICAqIGFjY29yZGluZ2x5IGluIGZ1dHVyZS4KICAqLwogc3Rh
dGljIHZvaWQKLXRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCi0JCXVuc2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzLCBlbnVtIGZiX29wX29yaWdpbiBv
cmlnaW4pCit0Z2xfZGMzY29fZmx1c2goc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdW5zaWdu
ZWQgaW50IGZyb250YnVmZmVyX2JpdHMsCisJCWVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbikKIHsK
LQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X2xvY2soJmludGVsX2Rw
LT5wc3IubG9jayk7CiAKLQlpZiAoIWRldl9wcml2LT5wc3IuZGMzY29fZW5hYmxlZCkKKwlpZiAo
IWludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCkKIAkJZ290byB1bmxvY2s7CiAKLQlpZiAoIWRl
dl9wcml2LT5wc3IucHNyMl9lbmFibGVkIHx8ICFkZXZfcHJpdi0+cHNyLmFjdGl2ZSkKKwlpZiAo
IWludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkIHx8ICFpbnRlbF9kcC0+cHNyLmFjdGl2ZSkKIAkJ
Z290byB1bmxvY2s7CiAKIAkvKgpAQCAtMTY0MiwxNSArMTY3MCwxNSBAQCB0Z2xfZGMzY29fZmx1
c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCSAqIHdoZW4gZGVsYXllZCB3
b3JrIHNjaGVkdWxlcyB0aGF0IG1lYW5zIGRpc3BsYXkgaGFzIGJlZW4gaWRsZS4KIAkgKi8KIAlp
ZiAoIShmcm9udGJ1ZmZlcl9iaXRzICYKLQkgICAgSU5URUxfRlJPTlRCVUZGRVJfQUxMX01BU0so
ZGV2X3ByaXYtPnBzci5waXBlKSkpCisJICAgIElOVEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGlu
dGVsX2RwLT5wc3IucGlwZSkpKQogCQlnb3RvIHVubG9jazsKIAotCXRnbF9wc3IyX2VuYWJsZV9k
YzNjbyhkZXZfcHJpdik7Ci0JbW9kX2RlbGF5ZWRfd29yayhzeXN0ZW1fd3EsICZkZXZfcHJpdi0+
cHNyLmRjM2NvX3dvcmssCi0JCQkgZGV2X3ByaXYtPnBzci5kYzNjb19leGl0X2RlbGF5KTsKKwl0
Z2xfcHNyMl9lbmFibGVfZGMzY28oaW50ZWxfZHApOworCW1vZF9kZWxheWVkX3dvcmsoc3lzdGVt
X3dxLCAmaW50ZWxfZHAtPnBzci5kYzNjb193b3JrLAorCQkJIGludGVsX2RwLT5wc3IuZGMzY29f
ZXhpdF9kZWxheSk7CiAKIHVubG9jazoKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9j
ayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQogCiAvKioKQEAgLTE2
NjksNDUgKzE2OTcsNTQgQEAgdGdsX2RjM2NvX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIHZvaWQgaW50ZWxfcHNyX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIAkJICAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLCBlbnVtIGZiX29w
X29yaWdpbiBvcmlnaW4pCiB7Ci0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKLQkJcmV0dXJuOwot
Ci0JaWYgKG9yaWdpbiA9PSBPUklHSU5fRkxJUCkgewotCQl0Z2xfZGMzY29fZmx1c2goZGV2X3By
aXYsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdpbik7Ci0JCXJldHVybjsKLQl9Ci0KLQltdXRleF9s
b2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVkKSB7
Ci0JCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQkJcmV0dXJuOworCXN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHA7CisK
Kwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlpbnRlbF9k
cCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJ
TlRFTF9PVVRQVVRfRURQICYmIENBTl9QU1IoaW50ZWxfZHApKSB7CisJCQlpZiAob3JpZ2luID09
IE9SSUdJTl9GTElQKSB7CisJCQkJdGdsX2RjM2NvX2ZsdXNoKGludGVsX2RwLCBmcm9udGJ1ZmZl
cl9iaXRzLCBvcmlnaW4pOworCQkJCWNvbnRpbnVlOworCQkJfQorCisJCQltdXRleF9sb2NrKCZp
bnRlbF9kcC0+cHNyLmxvY2spOworCQkJaWYgKCFpbnRlbF9kcC0+cHNyLmVuYWJsZWQpIHsKKwkJ
CQltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCQkJY29udGludWU7CisJCQl9
CisKKwkJCWZyb250YnVmZmVyX2JpdHMgJj0gSU5URUxfRlJPTlRCVUZGRVJfQUxMX01BU0soaW50
ZWxfZHAtPnBzci5waXBlKTsKKwkJCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRz
ICY9IH5mcm9udGJ1ZmZlcl9iaXRzOworCisJCQkvKiBCeSBkZWZpbml0aW9uIGZsdXNoID0gaW52
YWxpZGF0ZSArIGZsdXNoICovCisJCQlpZiAoZnJvbnRidWZmZXJfYml0cykKKwkJCQlwc3JfZm9y
Y2VfaHdfdHJhY2tpbmdfZXhpdChpbnRlbF9kcCk7CisKKwkJCWlmICghaW50ZWxfZHAtPnBzci5h
Y3RpdmUgJiYgIWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzKQorCQkJCXNjaGVk
dWxlX3dvcmsoJmludGVsX2RwLT5wc3Iud29yayk7CisJCQltdXRleF91bmxvY2soJmludGVsX2Rw
LT5wc3IubG9jayk7CisJCX0KIAl9Ci0KLQlmcm9udGJ1ZmZlcl9iaXRzICY9IElOVEVMX0ZST05U
QlVGRkVSX0FMTF9NQVNLKGRldl9wcml2LT5wc3IucGlwZSk7Ci0JZGV2X3ByaXYtPnBzci5idXN5
X2Zyb250YnVmZmVyX2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7Ci0KLQkvKiBCeSBkZWZpbml0
aW9uIGZsdXNoID0gaW52YWxpZGF0ZSArIGZsdXNoICovCi0JaWYgKGZyb250YnVmZmVyX2JpdHMp
Ci0JCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0KGRldl9wcml2KTsKLQotCWlmICghZGV2X3By
aXYtPnBzci5hY3RpdmUgJiYgIWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzKQot
CQlzY2hlZHVsZV93b3JrKCZkZXZfcHJpdi0+cHNyLndvcmspOwotCW11dGV4X3VubG9jaygmZGV2
X3ByaXYtPnBzci5sb2NrKTsKIH0KIAogLyoqCiAgKiBpbnRlbF9wc3JfaW5pdCAtIEluaXQgYmFz
aWMgUFNSIHdvcmsgYW5kIG11dGV4LgotICogQGRldl9wcml2OiBpOTE1IGRldmljZSBwcml2YXRl
CisgKiBAaW50ZWxfZHA6IEludGVsIERQCiAgKgotICogVGhpcyBmdW5jdGlvbiBpcyAgY2FsbGVk
IG9ubHkgb25jZSBhdCBkcml2ZXIgbG9hZCB0byBpbml0aWFsaXplIGJhc2ljCi0gKiBQU1Igc3R1
ZmYuCisgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZnRlciB0aGUgaW5pdGlhbGl6aW5nIGNv
bm5lY3Rvci4KKyAqICh0aGUgaW5pdGlhbGl6aW5nIG9mIGNvbm5lY3RvciB0cmVhdHMgdGhlIGhh
bmRsaW5nIG9mIGNvbm5lY3RvciBjYXBhYmlsaXRpZXMpCisgKiBBbmQgaXQgaW5pdGlhbGl6ZXMg
YmFzaWMgUFNSIHN0dWZmIGZvciBlYWNoIERQIEVuY29kZXIuCiAgKi8KLXZvaWQgaW50ZWxfcHNy
X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQordm9pZCBpbnRlbF9wc3Jf
aW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCiAJaWYgKCFIQVNfUFNSKGRl
dl9wcml2KSkKIAkJcmV0dXJuOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLnNpbmtfc3VwcG9ydCkK
KwlpZiAoIWludGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0KQogCQlyZXR1cm47CiAKIAlpZiAoSVNf
SEFTV0VMTChkZXZfcHJpdikpCkBAIC0xNzI1LDE0ICsxNzYyLDE0IEBAIHZvaWQgaW50ZWxfcHNy
X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCS8qIFNldCBsaW5rX3N0
YW5kYnkgeCBsaW5rX29mZiBkZWZhdWx0cyAqLwogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8
fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQkvKiBIU1cgYW5kIEJEVyByZXF1aXJlIHdvcmth
cm91bmRzIHRoYXQgd2UgZG9uJ3QgaW1wbGVtZW50LiAqLwotCQlkZXZfcHJpdi0+cHNyLmxpbmtf
c3RhbmRieSA9IGZhbHNlOworCQlpbnRlbF9kcC0+cHNyLmxpbmtfc3RhbmRieSA9IGZhbHNlOwog
CWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMikKIAkJLyogRm9yIG5ldyBwbGF0Zm9y
bXMgdXAgdG8gVEdMIGxldCdzIHJlc3BlY3QgVkJUIGJhY2sgYWdhaW4gKi8KLQkJZGV2X3ByaXYt
PnBzci5saW5rX3N0YW5kYnkgPSBkZXZfcHJpdi0+dmJ0LnBzci5mdWxsX2xpbms7CisJCWludGVs
X2RwLT5wc3IubGlua19zdGFuZGJ5ID0gZGV2X3ByaXYtPnZidC5wc3IuZnVsbF9saW5rOwogCi0J
SU5JVF9XT1JLKCZkZXZfcHJpdi0+cHNyLndvcmssIGludGVsX3Bzcl93b3JrKTsKLQlJTklUX0RF
TEFZRURfV09SSygmZGV2X3ByaXYtPnBzci5kYzNjb193b3JrLCB0Z2xfZGMzY29fZGlzYWJsZV93
b3JrKTsKLQltdXRleF9pbml0KCZkZXZfcHJpdi0+cHNyLmxvY2spOworCUlOSVRfV09SSygmaW50
ZWxfZHAtPnBzci53b3JrLCBpbnRlbF9wc3Jfd29yayk7CisJSU5JVF9ERUxBWUVEX1dPUksoJmlu
dGVsX2RwLT5wc3IuZGMzY29fd29yaywgdGdsX2RjM2NvX2Rpc2FibGVfd29yayk7CisJbXV0ZXhf
aW5pdCgmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogc3RhdGljIGludCBwc3JfZ2V0X3N0YXR1
c19hbmRfZXJyb3Jfc3RhdHVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCkBAIC0xNzU4LDcg
KzE3OTUsNyBAQCBzdGF0aWMgdm9pZCBwc3JfYWxwbV9jaGVjayhzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5
MTUoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZHBfYXV4ICphdXggPSAmaW50ZWxfZHAtPmF1eDsK
LQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9w
c3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4IHZhbDsKIAlpbnQgcjsKIApAQCAtMTc4NSw3
ICsxODIyLDcgQEAgc3RhdGljIHZvaWQgcHNyX2FscG1fY2hlY2soc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKIHN0YXRpYyB2b2lkIHBzcl9jYXBhYmlsaXR5X2NoYW5nZWRfY2hlY2soc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZf
cHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4
IHZhbDsKIAlpbnQgcjsKIApAQCAtMTgwOSwxOCArMTg0NiwxOCBAQCBzdGF0aWMgdm9pZCBwc3Jf
Y2FwYWJpbGl0eV9jaGFuZ2VkX2NoZWNrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB2b2lk
IGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwot
CXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRldl9wcml2LT5wc3I7CisJc3RydWN0IGludGVsX3Bz
ciAqcHNyID0gJmludGVsX2RwLT5wc3I7CiAJdTggc3RhdHVzLCBlcnJvcl9zdGF0dXM7CiAJY29u
c3QgdTggZXJyb3JzID0gRFBfUFNSX1JGQl9TVE9SQUdFX0VSUk9SIHwKIAkJCSAgRFBfUFNSX1ZT
Q19TRFBfVU5DT1JSRUNUQUJMRV9FUlJPUiB8CiAJCQkgIERQX1BTUl9MSU5LX0NSQ19FUlJPUjsK
IAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwgIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkp
CisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSB8fCAhaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkK
IAkJcmV0dXJuOwogCiAJbXV0ZXhfbG9jaygmcHNyLT5sb2NrKTsKIAotCWlmICghcHNyLT5lbmFi
bGVkIHx8IHBzci0+ZHAgIT0gaW50ZWxfZHApCisJaWYgKCFwc3ItPmVuYWJsZWQpCiAJCWdvdG8g
ZXhpdDsKIAogCWlmIChwc3JfZ2V0X3N0YXR1c19hbmRfZXJyb3Jfc3RhdHVzKGludGVsX2RwLCAm
c3RhdHVzLCAmZXJyb3Jfc3RhdHVzKSkgewpAQCAtMTg2MywxNSArMTkwMCwxNCBAQCB2b2lkIGlu
dGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCiBib29sIGlu
dGVsX3Bzcl9lbmFibGVkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJYm9vbCBy
ZXQ7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8ICFpbnRlbF9kcF9pc19lZHAoaW50ZWxf
ZHApKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkgfHwgIWludGVsX2RwX2lzX2VkcChpbnRlbF9k
cCkpCiAJCXJldHVybiBmYWxzZTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7
Ci0JcmV0ID0gKGRldl9wcml2LT5wc3IuZHAgPT0gaW50ZWxfZHAgJiYgZGV2X3ByaXYtPnBzci5l
bmFibGVkKTsKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9j
aygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlyZXQgPSBpbnRlbF9kcC0+cHNyLmVuYWJsZWQ7CisJ
bXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJcmV0dXJuIHJldDsKIH0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oCmluZGV4IDBhNTE3OTc4ZThhZi4u
MDNlYjE5NTQ3ZDA5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3Bzci5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgK
QEAgLTE4LDcgKzE4LDcgQEAgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZTsKIHN0cnVjdCBpbnRl
bF9wbGFuZV9zdGF0ZTsKIHN0cnVjdCBpbnRlbF9wbGFuZTsKIAotI2RlZmluZSBDQU5fUFNSKGRl
dl9wcml2KSAoSEFTX1BTUihkZXZfcHJpdikgJiYgZGV2X3ByaXYtPnBzci5zaW5rX3N1cHBvcnQp
CisjZGVmaW5lIENBTl9QU1IoaW50ZWxfZHApIChIQVNfUFNSKGRwX3RvX2k5MTUoaW50ZWxfZHAp
KSAmJiBpbnRlbF9kcC0+cHNyLnNpbmtfc3VwcG9ydCkKIHZvaWQgaW50ZWxfcHNyX2luaXRfZHBj
ZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZvaWQgaW50ZWxfcHNyX2VuYWJsZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKQEAgLTI4LDI0ICsyOCwyNCBAQCB2b2lkIGludGVsX3Bzcl9kaXNh
YmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiB2b2lkIGludGVsX3Bzcl91cGRhdGUoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0
YXRlICpjb25uX3N0YXRlKTsKLWludCBpbnRlbF9wc3JfZGVidWdfc2V0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwgdTY0IHZhbHVlKTsKK2ludCBpbnRlbF9wc3JfZGVidWdfc2V0
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHU2NCB2YWx1ZSk7CiB2b2lkIGludGVsX3Bzcl9p
bnZhbGlkYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgdW5zaWdu
ZWQgZnJvbnRidWZmZXJfYml0cywKIAkJCSAgZW51bSBmYl9vcF9vcmlnaW4gb3JpZ2luKTsKIHZv
aWQgaW50ZWxfcHNyX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJ
ICAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLAogCQkgICAgIGVudW0gZmJfb3Bfb3JpZ2lu
IG9yaWdpbik7Ci12b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdik7Cit2b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
Owogdm9pZCBpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKIAkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKLXZvaWQg
aW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwg
dTMyIHBzcl9paXIpOwordm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwgdTMyIHBzcl9paXIpOwogdm9pZCBpbnRlbF9wc3Jfc2hvcnRfcHVsc2Uoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCk7Ci1pbnQgaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlLAotCQkJICAgIHUzMiAq
b3V0X3ZhbHVlKTsKK3ZvaWQgaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUoY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlKTsKIGJvb2wgaW50ZWxfcHNyX2VuYWJsZWQo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBpbnQgaW50ZWxfcHNyMl9zZWxfZmV0Y2hfdXBk
YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkJCXN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjKTsKLXZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKK3ZvaWQgaW50ZWxfcHNy
Ml9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJ
CQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwogdm9pZCBp
bnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxh
bmUsCiAJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJ
CQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKaW5kZXggYjdlMjA4ODE2MDc0Li45
NDgyMzRjNjA2NDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfc3ByaXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJp
dGUuYwpAQCAtODQsNyArODQsNiBAQCB2b2lkIGludGVsX3BpcGVfdXBkYXRlX3N0YXJ0KGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSkKIAlib29sIG5lZWRfdmx2
X2RzaV93YSA9IChJU19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9w
cml2KSkgJiYKIAkJaW50ZWxfY3J0Y19oYXNfdHlwZShuZXdfY3J0Y19zdGF0ZSwgSU5URUxfT1VU
UFVUX0RTSSk7CiAJREVGSU5FX1dBSVQod2FpdCk7Ci0JdTMyIHBzcl9zdGF0dXM7CiAKIAlpZiAo
bmV3X2NydGNfc3RhdGUtPnVhcGkuYXN5bmNfZmxpcCkKIAkJcmV0dXJuOwpAQCAtMTA5LDEwICsx
MDgsNyBAQCB2b2lkIGludGVsX3BpcGVfdXBkYXRlX3N0YXJ0KGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSkKIAkgKiBWQkwgaW50ZXJydXB0cyB3aWxsIHN0YXJ0
IHRoZSBQU1IgZXhpdCBhbmQgcHJldmVudCBhIFBTUgogCSAqIHJlLWVudHJ5IGFzIHdlbGwuCiAJ
ICovCi0JaWYgKGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKG5ld19jcnRjX3N0YXRlLCAmcHNyX3N0
YXR1cykpCi0JCWRybV9lcnIoJmRldl9wcml2LT5kcm0sCi0JCQkiUFNSIGlkbGUgdGltZWQgb3V0
IDB4JXgsIGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCi0JCQlwc3Jfc3RhdHVzKTsKKwlpbnRl
bF9wc3Jfd2FpdF9mb3JfaWRsZShuZXdfY3J0Y19zdGF0ZSk7CiAKIAlsb2NhbF9pcnFfZGlzYWJs
ZSgpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCA0YThmZjJhODk5YTUuLmRjN2EyNDEw
MzZlNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC00NzUsNDIgKzQ3NSw2IEBAIHN0cnVj
dCBpOTE1X2RycnMgewogCWVudW0gZHJyc19zdXBwb3J0X3R5cGUgdHlwZTsKIH07CiAKLXN0cnVj
dCBpOTE1X3BzciB7Ci0Jc3RydWN0IG11dGV4IGxvY2s7Ci0KLSNkZWZpbmUgSTkxNV9QU1JfREVC
VUdfTU9ERV9NQVNLCTB4MGYKLSNkZWZpbmUgSTkxNV9QU1JfREVCVUdfREVGQVVMVAkJMHgwMAot
I2RlZmluZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFCQkweDAxCi0jZGVmaW5lIEk5MTVfUFNSX0RF
QlVHX0VOQUJMRQkJMHgwMgotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19GT1JDRV9QU1IxCTB4MDMK
LSNkZWZpbmUgSTkxNV9QU1JfREVCVUdfSVJRCQkweDEwCi0KLQl1MzIgZGVidWc7Ci0JYm9vbCBz
aW5rX3N1cHBvcnQ7Ci0JYm9vbCBlbmFibGVkOwotCXN0cnVjdCBpbnRlbF9kcCAqZHA7Ci0JZW51
bSBwaXBlIHBpcGU7Ci0JZW51bSB0cmFuc2NvZGVyIHRyYW5zY29kZXI7Ci0JYm9vbCBhY3RpdmU7
Ci0Jc3RydWN0IHdvcmtfc3RydWN0IHdvcms7Ci0JdW5zaWduZWQgYnVzeV9mcm9udGJ1ZmZlcl9i
aXRzOwotCWJvb2wgc2lua19wc3IyX3N1cHBvcnQ7Ci0JYm9vbCBsaW5rX3N0YW5kYnk7Ci0JYm9v
bCBjb2xvcmltZXRyeV9zdXBwb3J0OwotCWJvb2wgcHNyMl9lbmFibGVkOwotCWJvb2wgcHNyMl9z
ZWxfZmV0Y2hfZW5hYmxlZDsKLQl1OCBzaW5rX3N5bmNfbGF0ZW5jeTsKLQlrdGltZV90IGxhc3Rf
ZW50cnlfYXR0ZW1wdDsKLQlrdGltZV90IGxhc3RfZXhpdDsKLQlib29sIHNpbmtfbm90X3JlbGlh
YmxlOwotCWJvb2wgaXJxX2F1eF9lcnJvcjsKLQl1MTYgc3VfeF9ncmFudWxhcml0eTsKLQlib29s
IGRjM2NvX2VuYWJsZWQ7Ci0JdTMyIGRjM2NvX2V4aXRfZGVsYXk7Ci0Jc3RydWN0IGRlbGF5ZWRf
d29yayBkYzNjb193b3JrOwotCXN0cnVjdCBkcm1fZHBfdnNjX3NkcCB2c2M7Ci19OwotCiAjZGVm
aW5lIFFVSVJLX0xWRFNfU1NDX0RJU0FCTEUgKDE8PDEpCiAjZGVmaW5lIFFVSVJLX0lOVkVSVF9C
UklHSFRORVNTICgxPDwyKQogI2RlZmluZSBRVUlSS19CQUNLTElHSFRfUFJFU0VOVCAoMTw8MykK
QEAgLTEwNDEsOCArMTAwNSw2IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlIHsKIAogCXN0cnVj
dCBpOTE1X3Bvd2VyX2RvbWFpbnMgcG93ZXJfZG9tYWluczsKIAotCXN0cnVjdCBpOTE1X3BzciBw
c3I7Ci0KIAlzdHJ1Y3QgaTkxNV9ncHVfZXJyb3IgZ3B1X2Vycm9yOwogCiAJc3RydWN0IGRybV9p
OTE1X2dlbV9vYmplY3QgKnZsdl9wY3R4OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9pcnEuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKaW5kZXggNDkx
ZjgyNTAwZDY4Li44NTQ2Nzg2NTIxYjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfaXJxLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYwpAQCAtMjA0
NCwxMCArMjA0NCwyMiBAQCBzdGF0aWMgdm9pZCBpdmJfZGlzcGxheV9pcnFfaGFuZGxlcihzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCWl2Yl9lcnJfaW50X2hhbmRsZXIoZGV2
X3ByaXYpOwogCiAJaWYgKGRlX2lpciAmIERFX0VEUF9QU1JfSU5UX0hTVykgewotCQl1MzIgcHNy
X2lpciA9IGludGVsX3VuY29yZV9yZWFkKCZkZXZfcHJpdi0+dW5jb3JlLCBFRFBfUFNSX0lJUik7
CisJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0JCWludGVsX3Bzcl9pcnFfaGFu
ZGxlcihkZXZfcHJpdiwgcHNyX2lpcik7Ci0JCWludGVsX3VuY29yZV93cml0ZSgmZGV2X3ByaXYt
PnVuY29yZSwgRURQX1BTUl9JSVIsIHBzcl9paXIpOworCQlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2
X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVu
Y190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxf
T1VUUFVUX0VEUCAmJgorCQkJICAgIENBTl9QU1IoaW50ZWxfZHApKSB7CisJCQkJdTMyIHBzcl9p
aXIgPSBpbnRlbF91bmNvcmVfcmVhZCgmZGV2X3ByaXYtPnVuY29yZSwKKwkJCQkJCQkJRURQX1BT
Ul9JSVIpOworCisJCQkJaW50ZWxfcHNyX2lycV9oYW5kbGVyKGludGVsX2RwLCBwc3JfaWlyKTsK
KwkJCQlpbnRlbF91bmNvcmVfd3JpdGUoJmRldl9wcml2LT51bmNvcmUsCisJCQkJCQkgICBFRFBf
UFNSX0lJUiwgcHNyX2lpcik7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KIAl9CiAKIAlpZiAoZGVf
aWlyICYgREVfQVVYX0NIQU5ORUxfQV9JVkIpCkBAIC0yMjU1LDIxICsyMjY3LDM0IEBAIGdlbjhf
ZGVfbWlzY19pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUz
MiBpaXIpCiAJfQogCiAJaWYgKGlpciAmIEdFTjhfREVfRURQX1BTUikgeworCQlzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAkJdTMyIHBzcl9paXI7CiAJCWk5MTVfcmVnX3QgaWlyX3Jl
ZzsKIAotCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikKLQkJCWlpcl9yZWcgPSBUUkFO
U19QU1JfSUlSKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7Ci0JCWVsc2UKLQkJCWlpcl9yZWcg
PSBFRFBfUFNSX0lJUjsKKwkJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29k
ZXIpIHsKKwkJCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5j
b2Rlcik7CiAKLQkJcHNyX2lpciA9IGludGVsX3VuY29yZV9yZWFkKCZkZXZfcHJpdi0+dW5jb3Jl
LCBpaXJfcmVnKTsKLQkJaW50ZWxfdW5jb3JlX3dyaXRlKCZkZXZfcHJpdi0+dW5jb3JlLCBpaXJf
cmVnLCBwc3JfaWlyKTsKKwkJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyICYmIENBTl9Q
U1IoaW50ZWxfZHApKSB7CisJCQkJaWlyX3JlZyA9IFRSQU5TX1BTUl9JSVIoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKTsKKwkJCX0gZWxzZSBpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQ
VVRfRURQICYmCisJCQkJICAgQ0FOX1BTUihpbnRlbF9kcCkpIHsKKwkJCQlpaXJfcmVnID0gRURQ
X1BTUl9JSVI7CisJCQl9IGVsc2UgeworCQkJCWNvbnRpbnVlOworCQkJfQorCisJCQlwc3JfaWly
ID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRldl9wcml2LT51bmNvcmUsIGlpcl9yZWcpOworCQkJaW50
ZWxfdW5jb3JlX3dyaXRlKCZkZXZfcHJpdi0+dW5jb3JlLCBpaXJfcmVnLCBwc3JfaWlyKTsKKwor
CQkJaWYgKHBzcl9paXIpCisJCQkJZm91bmQgPSB0cnVlOwogCi0JCWlmIChwc3JfaWlyKQotCQkJ
Zm91bmQgPSB0cnVlOworCQkJaW50ZWxfcHNyX2lycV9oYW5kbGVyKGludGVsX2RwLCBwc3JfaWly
KTsKIAotCQlpbnRlbF9wc3JfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIHBzcl9paXIpOworCQkJLyog
cHJpb3IgR0VOMTIgb25seSBoYXZlIG9uZSBFRFAgUFNSICovCisJCQlpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA8IDEyKQorCQkJCWJyZWFrOworCQl9CiAJfQogCiAJaWYgKCFmb3VuZCkKLS0gCjIu
MjUuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50
ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

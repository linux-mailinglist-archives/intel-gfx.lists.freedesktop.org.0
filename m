Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id AC683468CF
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 22:24:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E5439892CF;
	Fri, 14 Jun 2019 20:24:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D6431892CF
 for <intel-gfx@lists.freedesktop.org>; Fri, 14 Jun 2019 20:24:33 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 14 Jun 2019 13:24:33 -0700
X-ExtLoop1: 1
Received: from orsmsx109.amr.corp.intel.com ([10.22.240.7])
 by orsmga004.jf.intel.com with ESMTP; 14 Jun 2019 13:24:32 -0700
Received: from orsmsx151.amr.corp.intel.com (10.22.226.38) by
 ORSMSX109.amr.corp.intel.com (10.22.240.7) with Microsoft SMTP Server (TLS)
 id 14.3.408.0; Fri, 14 Jun 2019 13:24:32 -0700
Received: from orsmsx108.amr.corp.intel.com ([169.254.2.211]) by
 ORSMSX151.amr.corp.intel.com ([169.254.7.242]) with mapi id 14.03.0415.000;
 Fri, 14 Jun 2019 13:24:32 -0700
From: "Srivatsa, Anusha" <anusha.srivatsa@intel.com>
To: "De Marchi, Lucas" <lucas.demarchi@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [PATCH 6/9] drm/i915/dmc: extract function to parse dmc_header
Thread-Index: AQHVHREvX1SKJRLfi0u0UnPyHC6j4qabn7Rw
Date: Fri, 14 Jun 2019 20:24:32 +0000
Message-ID: <83F5C7385F545743AD4FB2A62F75B073480D3865@ORSMSX108.amr.corp.intel.com>
References: <20190607091230.1489-1-lucas.demarchi@intel.com>
 <20190607091230.1489-7-lucas.demarchi@intel.com>
In-Reply-To: <20190607091230.1489-7-lucas.demarchi@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
dlp-product: dlpe-windows
dlp-version: 11.0.600.7
dlp-reaction: no-action
x-ctpclassification: CTP_NT
x-titus-metadata-40: eyJDYXRlZ29yeUxhYmVscyI6IiIsIk1ldGFkYXRhIjp7Im5zIjoiaHR0cDpcL1wvd3d3LnRpdHVzLmNvbVwvbnNcL0ludGVsMyIsImlkIjoiNDM2Y2RiOGMtNmZmNC00OGVlLTkzNjQtZTRhOGJjYmRkZWEyIiwicHJvcHMiOlt7Im4iOiJDVFBDbGFzc2lmaWNhdGlvbiIsInZhbHMiOlt7InZhbHVlIjoiQ1RQX05UIn1dfV19LCJTdWJqZWN0TGFiZWxzIjpbXSwiVE1DVmVyc2lvbiI6IjE3LjEwLjE4MDQuNDkiLCJUcnVzdGVkTGFiZWxIYXNoIjoiZCtnaW9nY0h0NEJMd1J0N0U4ZTFkSmRWSFkydWRBOGZVNDl0VElJV1poVE9wQmR6ald1dWZ3VXZNOFNQQ3RLMyJ9
x-originating-ip: [10.22.254.140]
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 6/9] drm/i915/dmc: extract function to parse
 dmc_header
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Cgo+LS0tLS1PcmlnaW5hbCBNZXNzYWdlLS0tLS0KPkZyb206IERlIE1hcmNoaSwgTHVjYXMKPlNl
bnQ6IEZyaWRheSwgSnVuZSA3LCAyMDE5IDI6MTIgQU0KPlRvOiBpbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCj5DYzogVml2aSwgUm9kcmlnbyA8cm9kcmlnby52aXZpQGludGVsLmNvbT47
IFNyaXZhdHNhLCBBbnVzaGEKPjxhbnVzaGEuc3JpdmF0c2FAaW50ZWwuY29tPjsgRGUgTWFyY2hp
LCBMdWNhcyA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgo+U3ViamVjdDogW1BBVENIIDYvOV0g
ZHJtL2k5MTUvZG1jOiBleHRyYWN0IGZ1bmN0aW9uIHRvIHBhcnNlIGRtY19oZWFkZXIKPgo+Q29t
cGxldGUgdGhlIGV4dHJhY3Rpb24gb2YgZnVuY3Rpb25zIHRvIHBhcnNlIHNwZWNpZmljIHBhcnRz
IG9mIHRoZSBmaXJtd2FyZS4gVGhlCj5yZXR1cm4gb2YgdGhlIGZ1bmN0aW9uIHBhcnNlX2Nzcl9m
dygpIGlzIG5vdyByZWR1bmRhbnQgc2luY2UgaXQgYWxyZWFkeSBzZXRzIHRoZQo+ZG1jX3BheWxv
YWQgZmllbGQuIENoYW5naW5nIGl0IGlzIGxlZnQgZm9yIGxhdGVyIHRvIGF2b2lkIG5vaXNlIGlu
IHRoZSBjb21taXQuCj4KUmV2aWV3ZWQtYnk6IEFudXNoYSBTcml2YXRzYSA8YW51c2hhLnNyaXZh
dHNhQGludGVsLmNvbT4KPlNpZ25lZC1vZmYtYnk6IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVt
YXJjaGlAaW50ZWwuY29tPgo+LS0tCj4gZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfY3NyLmMg
fCAxMzAgKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLQo+IDEgZmlsZSBjaGFuZ2VkLCA3
NCBpbnNlcnRpb25zKCspLCA1NiBkZWxldGlvbnMoLSkKPgo+ZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX2Nzci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfY3Ny
LmMKPmluZGV4IGRiNTc3MjYxNmE0Zi4uMWZiNDJmZDQ0NTE5IDEwMDY0NAo+LS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfY3NyLmMKPisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX2Nzci5jCj5AQCAtMzMyLDYgKzMzMiw3NCBAQCBzdGF0aWMgdTMyIGZpbmRfZG1jX2Z3X29m
ZnNldChjb25zdCBzdHJ1Y3QKPmludGVsX2Z3X2luZm8gKmZ3X2luZm8sCj4gCXJldHVybiBkbWNf
b2Zmc2V0Owo+IH0KPgo+K3N0YXRpYyB1MzIgcGFyc2VfY3NyX2Z3X2RtYyhzdHJ1Y3QgaW50ZWxf
Y3NyICpjc3IsCj4rCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9kbWNfaGVhZGVyICpkbWNfaGVh
ZGVyLAo+KwkJCSAgICBzaXplX3QgcmVtX3NpemUpCj4rewo+Kwl1bnNpZ25lZCBpbnQgaSwgcGF5
bG9hZF9zaXplOwo+Kwl1MzIgcjsKPisJdTggKnBheWxvYWQ7Cj4rCj4rCWlmIChyZW1fc2l6ZSA8
IHNpemVvZihzdHJ1Y3QgaW50ZWxfZG1jX2hlYWRlcikpCj4rCQlnb3RvIGVycm9yX3RydW5jYXRl
ZDsKPisKPisJaWYgKHNpemVvZihzdHJ1Y3QgaW50ZWxfZG1jX2hlYWRlcikgIT0gZG1jX2hlYWRl
ci0+aGVhZGVyX2xlbikgewo+KwkJRFJNX0VSUk9SKCJETUMgZmlybXdhcmUgaGFzIHdyb25nIGRt
YyBoZWFkZXIgbGVuZ3RoICIKPisJCQkgICIoJXUgYnl0ZXMpXG4iLAo+KwkJCSAgKGRtY19oZWFk
ZXItPmhlYWRlcl9sZW4pKTsKPisJCXJldHVybiAwOwo+Kwl9Cj4rCj4rCS8qIENhY2hlIHRoZSBk
bWMgaGVhZGVyIGluZm8uICovCj4rCWlmIChkbWNfaGVhZGVyLT5tbWlvX2NvdW50ID4gQVJSQVlf
U0laRShjc3ItPm1taW9hZGRyKSkgewo+KwkJRFJNX0VSUk9SKCJETUMgZmlybXdhcmUgaGFzIHdy
b25nIG1taW8gY291bnQgJXVcbiIsCj4rCQkJICBkbWNfaGVhZGVyLT5tbWlvX2NvdW50KTsKPisJ
CXJldHVybiAwOwo+Kwl9Cj4rCj4rCWNzci0+bW1pb19jb3VudCA9IGRtY19oZWFkZXItPm1taW9f
Y291bnQ7Cj4rCWZvciAoaSA9IDA7IGkgPCBkbWNfaGVhZGVyLT5tbWlvX2NvdW50OyBpKyspIHsK
PisJCWlmIChkbWNfaGVhZGVyLT5tbWlvYWRkcltpXSA8IENTUl9NTUlPX1NUQVJUX1JBTkdFIHx8
Cj4rCQkgICAgZG1jX2hlYWRlci0+bW1pb2FkZHJbaV0gPiBDU1JfTU1JT19FTkRfUkFOR0UpIHsK
PisJCQlEUk1fRVJST1IoIkRNQyBmaXJtd2FyZSBoYXMgd3JvbmcgbW1pbyBhZGRyZXNzCj4weCV4
XG4iLAo+KwkJCQkgIGRtY19oZWFkZXItPm1taW9hZGRyW2ldKTsKPisJCQlyZXR1cm4gMDsKPisJ
CX0KPisJCWNzci0+bW1pb2FkZHJbaV0gPSBfTU1JTyhkbWNfaGVhZGVyLT5tbWlvYWRkcltpXSk7
Cj4rCQljc3ItPm1taW9kYXRhW2ldID0gZG1jX2hlYWRlci0+bW1pb2RhdGFbaV07Cj4rCX0KPisK
PisJcmVtX3NpemUgLT0gZG1jX2hlYWRlci0+aGVhZGVyX2xlbjsKPisKPisJLyogZndfc2l6ZSBp
cyBpbiBkd29yZHMsIHNvIG11bHRpcGxpZWQgYnkgNCB0byBjb252ZXJ0IGludG8gYnl0ZXMuICov
Cj4rCXBheWxvYWRfc2l6ZSA9IGRtY19oZWFkZXItPmZ3X3NpemUgKiA0Owo+KwlpZiAocmVtX3Np
emUgPCBwYXlsb2FkX3NpemUpCj4rCQlnb3RvIGVycm9yX3RydW5jYXRlZDsKPisKPisJaWYgKHBh
eWxvYWRfc2l6ZSA+IGNzci0+bWF4X2Z3X3NpemUpIHsKPisJCURSTV9FUlJPUigiRE1DIEZXIHRv
byBiaWcgKCV1IGJ5dGVzKVxuIiwgcGF5bG9hZF9zaXplKTsKPisJCXJldHVybiAwOwo+Kwl9Cj4r
CWNzci0+ZG1jX2Z3X3NpemUgPSBkbWNfaGVhZGVyLT5md19zaXplOwo+Kwo+Kwljc3ItPmRtY19w
YXlsb2FkID0ga21hbGxvYyhwYXlsb2FkX3NpemUsIEdGUF9LRVJORUwpOwo+KwlpZiAoIWNzci0+
ZG1jX3BheWxvYWQpIHsKPisJCURSTV9FUlJPUigiTWVtb3J5IGFsbG9jYXRpb24gZmFpbGVkIGZv
ciBkbWMgcGF5bG9hZFxuIik7Cj4rCQlyZXR1cm4gMDsKPisJfQo+Kwo+KwlyID0gc2l6ZW9mKHN0
cnVjdCBpbnRlbF9kbWNfaGVhZGVyKTsKPisJcGF5bG9hZCA9ICh1OCAqKShkbWNfaGVhZGVyKSAr
IHI7Cj4rCW1lbWNweShjc3ItPmRtY19wYXlsb2FkLCBwYXlsb2FkLCBwYXlsb2FkX3NpemUpOwo+
KwlyICs9IHBheWxvYWRfc2l6ZTsKPisKPisJcmV0dXJuIHI7Cj4rCj4rZXJyb3JfdHJ1bmNhdGVk
Ogo+KwlEUk1fRVJST1IoIlRydW5jYXRlZCBETUMgZmlybXdhcmUsIHJlZnVzaW5nLlxuIik7Cj4r
CXJldHVybiAwOwo+K30KPisKPiBzdGF0aWMgdTMyCj4gcGFyc2VfY3NyX2Z3X3BhY2thZ2Uoc3Ry
dWN0IGludGVsX2NzciAqY3NyLAo+IAkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfcGFja2FnZV9o
ZWFkZXIgKnBhY2thZ2VfaGVhZGVyLCBAQCAtCj40MzIsMTAgKzUwMCw4IEBAIHN0YXRpYyB1MzIg
KnBhcnNlX2Nzcl9mdyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCj4gCXN0cnVj
dCBpbnRlbF9kbWNfaGVhZGVyICpkbWNfaGVhZGVyOwo+IAlzdHJ1Y3QgaW50ZWxfY3NyICpjc3Ig
PSAmZGV2X3ByaXYtPmNzcjsKPiAJY29uc3Qgc3RydWN0IHN0ZXBwaW5nX2luZm8gKnNpID0gaW50
ZWxfZ2V0X3N0ZXBwaW5nX2luZm8oZGV2X3ByaXYpOwo+LQl1MzIgcmVhZGNvdW50ID0gMCwgbmJ5
dGVzOwo+LQl1MzIgaSwgcjsKPi0JdTMyICpkbWNfcGF5bG9hZDsKPi0Jc2l6ZV90IGZzaXplOwo+
Kwl1MzIgcmVhZGNvdW50ID0gMDsKPisJdTMyIHI7Cj4KPiAJaWYgKCFmdykKPiAJCXJldHVybiBO
VUxMOwo+QEAgLTQ1NSw2MiArNTIxLDE0IEBAIHN0YXRpYyB1MzIgKnBhcnNlX2Nzcl9mdyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZQo+KmRldl9wcml2LAo+IAkJcmV0dXJuIE5VTEw7Cj4KPiAJcmVh
ZGNvdW50ICs9IHI7Cj4tCWZzaXplID0gcmVhZGNvdW50ICsKPi0JCXNpemVvZihzdHJ1Y3QgaW50
ZWxfZG1jX2hlYWRlcik7Cj4tCWlmIChmc2l6ZSA+IGZ3LT5zaXplKQo+LQkJZ290byBlcnJvcl90
cnVuY2F0ZWQ7Cj4KPi0JLyogRXh0cmFjdCBkbWNfaGVhZGVyIGluZm9ybWF0aW9uLiAqLwo+Kwkv
KiBFeHRyYWN0IGRtY19oZWFkZXIgaW5mb3JtYXRpb24gKi8KPiAJZG1jX2hlYWRlciA9IChzdHJ1
Y3QgaW50ZWxfZG1jX2hlYWRlciAqKSZmdy0+ZGF0YVtyZWFkY291bnRdOwo+LQlpZiAoc2l6ZW9m
KHN0cnVjdCBpbnRlbF9kbWNfaGVhZGVyKSAhPSAoZG1jX2hlYWRlci0+aGVhZGVyX2xlbikpIHsK
Pi0JCURSTV9FUlJPUigiRE1DIGZpcm13YXJlIGhhcyB3cm9uZyBkbWMgaGVhZGVyIGxlbmd0aCAi
Cj4tCQkJICAiKCV1IGJ5dGVzKVxuIiwKPi0JCQkgIChkbWNfaGVhZGVyLT5oZWFkZXJfbGVuKSk7
Cj4tCQlyZXR1cm4gTlVMTDsKPi0JfQo+LQlyZWFkY291bnQgKz0gc2l6ZW9mKHN0cnVjdCBpbnRl
bF9kbWNfaGVhZGVyKTsKPi0KPi0JLyogQ2FjaGUgdGhlIGRtYyBoZWFkZXIgaW5mby4gKi8KPi0J
aWYgKGRtY19oZWFkZXItPm1taW9fY291bnQgPiBBUlJBWV9TSVpFKGNzci0+bW1pb2FkZHIpKSB7
Cj4tCQlEUk1fRVJST1IoIkRNQyBmaXJtd2FyZSBoYXMgd3JvbmcgbW1pbyBjb3VudCAldVxuIiwK
Pi0JCQkgIGRtY19oZWFkZXItPm1taW9fY291bnQpOwo+LQkJcmV0dXJuIE5VTEw7Cj4tCX0KPi0J
Y3NyLT5tbWlvX2NvdW50ID0gZG1jX2hlYWRlci0+bW1pb19jb3VudDsKPi0JZm9yIChpID0gMDsg
aSA8IGRtY19oZWFkZXItPm1taW9fY291bnQ7IGkrKykgewo+LQkJaWYgKGRtY19oZWFkZXItPm1t
aW9hZGRyW2ldIDwgQ1NSX01NSU9fU1RBUlRfUkFOR0UgfHwKPi0JCSAgICBkbWNfaGVhZGVyLT5t
bWlvYWRkcltpXSA+IENTUl9NTUlPX0VORF9SQU5HRSkgewo+LQkJCURSTV9FUlJPUigiRE1DIGZp
cm13YXJlIGhhcyB3cm9uZyBtbWlvIGFkZHJlc3MKPjB4JXhcbiIsCj4tCQkJCSAgZG1jX2hlYWRl
ci0+bW1pb2FkZHJbaV0pOwo+LQkJCXJldHVybiBOVUxMOwo+LQkJfQo+LQkJY3NyLT5tbWlvYWRk
cltpXSA9IF9NTUlPKGRtY19oZWFkZXItPm1taW9hZGRyW2ldKTsKPi0JCWNzci0+bW1pb2RhdGFb
aV0gPSBkbWNfaGVhZGVyLT5tbWlvZGF0YVtpXTsKPi0JfQo+LQo+LQkvKiBmd19zaXplIGlzIGlu
IGR3b3Jkcywgc28gbXVsdGlwbGllZCBieSA0IHRvIGNvbnZlcnQgaW50byBieXRlcy4gKi8KPi0J
bmJ5dGVzID0gZG1jX2hlYWRlci0+Zndfc2l6ZSAqIDQ7Cj4tCWZzaXplICs9IG5ieXRlczsKPi0J
aWYgKGZzaXplID4gZnctPnNpemUpCj4tCQlnb3RvIGVycm9yX3RydW5jYXRlZDsKPi0KPi0JaWYg
KG5ieXRlcyA+IGNzci0+bWF4X2Z3X3NpemUpIHsKPi0JCURSTV9FUlJPUigiRE1DIEZXIHRvbyBi
aWcgKCV1IGJ5dGVzKVxuIiwgbmJ5dGVzKTsKPi0JCXJldHVybiBOVUxMOwo+LQl9Cj4tCWNzci0+
ZG1jX2Z3X3NpemUgPSBkbWNfaGVhZGVyLT5md19zaXplOwo+LQo+LQlkbWNfcGF5bG9hZCA9IGtt
YWxsb2MobmJ5dGVzLCBHRlBfS0VSTkVMKTsKPi0JaWYgKCFkbWNfcGF5bG9hZCkgewo+LQkJRFJN
X0VSUk9SKCJNZW1vcnkgYWxsb2NhdGlvbiBmYWlsZWQgZm9yIGRtYyBwYXlsb2FkXG4iKTsKPisJ
ciA9IHBhcnNlX2Nzcl9md19kbWMoY3NyLCBkbWNfaGVhZGVyLCBmdy0+c2l6ZSAtIHJlYWRjb3Vu
dCk7Cj4rCWlmICghcikKPiAJCXJldHVybiBOVUxMOwo+LQl9Cj4KPi0JcmV0dXJuIG1lbWNweShk
bWNfcGF5bG9hZCwgJmZ3LT5kYXRhW3JlYWRjb3VudF0sIG5ieXRlcyk7Cj4tCj4tZXJyb3JfdHJ1
bmNhdGVkOgo+LQlEUk1fRVJST1IoIlRydW5jYXRlZCBETUMgZmlybXdhcmUsIHJlamVjdGluZy5c
biIpOwo+LQlyZXR1cm4gTlVMTDsKPisJcmV0dXJuIGNzci0+ZG1jX3BheWxvYWQ7Cj4gfQo+Cj4g
c3RhdGljIHZvaWQgaW50ZWxfY3NyX3J1bnRpbWVfcG1fZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKPi0tCj4yLjIxLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeA==

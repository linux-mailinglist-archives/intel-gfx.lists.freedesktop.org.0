Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7E0B539861
	for <lists+intel-gfx@lfdr.de>; Sat,  8 Jun 2019 00:15:49 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D459388EBA;
	Fri,  7 Jun 2019 22:15:47 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 49BA588EBA
 for <intel-gfx@lists.freedesktop.org>; Fri,  7 Jun 2019 22:15:46 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Jun 2019 15:15:45 -0700
X-ExtLoop1: 1
Received: from fmsmsx104.amr.corp.intel.com ([10.18.124.202])
 by orsmga007.jf.intel.com with ESMTP; 07 Jun 2019 15:15:45 -0700
Received: from fmsmsx124.amr.corp.intel.com (10.18.125.39) by
 fmsmsx104.amr.corp.intel.com (10.18.124.202) with Microsoft SMTP Server (TLS)
 id 14.3.408.0; Fri, 7 Jun 2019 15:15:45 -0700
Received: from fmsmsx117.amr.corp.intel.com ([169.254.3.248]) by
 fmsmsx124.amr.corp.intel.com ([169.254.8.120]) with mapi id 14.03.0415.000;
 Fri, 7 Jun 2019 15:15:44 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>,
 "Deak, Imre" <imre.deak@intel.com>
Thread-Topic: [PATCH 12/23] drm/i915: Sanitize the TypeC connect/detect
 sequences
Thread-Index: AQHVGuYfWAtd9lhEy0WhTD6M/UEa7KaRPKSA
Date: Fri, 7 Jun 2019 22:15:44 +0000
Message-ID: <79180a7982973a7fe8f090b486bfdf351b56bfa4.camel@intel.com>
References: <20190604145826.16424-1-imre.deak@intel.com>
 <20190604145826.16424-13-imre.deak@intel.com>
In-Reply-To: <20190604145826.16424-13-imre.deak@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.24.8.212]
Content-ID: <871A4FA635FC444B9961CADAA670EBCB@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 12/23] drm/i915: Sanitize the TypeC
 connect/detect sequences
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Zanoni, Paulo R" <paulo.r.zanoni@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVHVlLCAyMDE5LTA2LTA0IGF0IDE3OjU4ICswMzAwLCBJbXJlIERlYWsgd3JvdGU6DQo+IE1h
a2UgdGhlIG9yZGVyIGR1cmluZyBkZXRlY3Rpb24gbW9yZSBjb25zaXN0ZW50OiBmaXJzdCByZXNl
dCB0aGUNCj4gVHlwZUMNCj4gcG9ydCBtb2RlIGlmIG5lZWRlZCAoYWRkaW5nIG5ldyBoZWxwZXJz
IGZvciB0aGlzKSwgdGhlbiBkZXRlY3QgYW55DQo+IGNvbm5lY3RlZCBzaW5rLg0KPiANCj4gVG8g
Y2hlY2sgaWYgYSBwb3J0IG1vZGUgcmVzZXQgaXMgbmVlZGVkIGRldGVybWluZSBmaXJzdCB0aGUg
dGFyZ2V0DQo+IHBvcnQNCj4gbW9kZSBiYXNlZCBvbiB0aGUgbGl2ZSBzdGF0dXMgaWYgYSBzaW5r
IGlzIGFscmVhZHkgY29ubmVjdGVkIG9yIHRoZQ0KPiBQSFkgc3RhdHVzIGNvbXBsZXRlIGZsYWcg
b3RoZXJ3aXNlLg0KPiANCj4gQWRkIGEgV0FSTiBpbiBsZWdhY3kgbW9kZSBpZiB1bmV4cGVjdGVk
bHkgd2UgY2FuJ3Qgc2V0IHRoZSB1bnNhZmUNCj4gbW9kZQ0KPiBvciBpZiB0aGUgRklBIGRvZXNu
J3QgcHJvdmlkZSB0aGUgNCBsYW5lcyByZXF1aXJlZC4NCj4gDQo+IENjOiBKb3PDqSBSb2JlcnRv
IGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4NCj4gQ2M6IFJvZHJpZ28gVml2aSA8cm9k
cmlnby52aXZpQGludGVsLmNvbT4NCj4gQ2M6IFBhdWxvIFphbm9uaSA8cGF1bG8uci56YW5vbmlA
aW50ZWwuY29tPg0KPiBDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4Lmlu
dGVsLmNvbT4NCj4gU2lnbmVkLW9mZi1ieTogSW1yZSBEZWFrIDxpbXJlLmRlYWtAaW50ZWwuY29t
Pg0KPiAtLS0NCj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3RjLmMgfCAxMDQgKysrKysr
KysrKysrKysrLS0tLS0tLS0tLS0tLS0tDQo+IC0tDQo+ICAxIGZpbGUgY2hhbmdlZCwgNTAgaW5z
ZXJ0aW9ucygrKSwgNTQgZGVsZXRpb25zKC0pDQo+IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfdGMuYw0KPiBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Rj
LmMNCj4gaW5kZXggZDkxMzgxYzBlODdkLi45ODMyZTJkZGI5MmUgMTAwNjQ0DQo+IC0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3RjLmMNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfdGMuYw0KPiBAQCAtMTg4LDQzICsxODgsNDYgQEAgc3RhdGljIGJvb2wgaWNsX3Rj
X3BoeV9zZXRfc2FmZV9tb2RlKHN0cnVjdA0KPiBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0
LA0KPiAgICogd2lsbCByZXF1aXJlIGEgbG90IG9mIGNvb3JkaW5hdGlvbiB3aXRoIHVzZXIgc3Bh
Y2UgYW5kIHRob3JvdWdoDQo+IHRlc3RpbmcgZm9yDQo+ICAgKiB0aGUgZXh0cmEgcG9zc2libGUg
Y2FzZXMuDQo+ICAgKi8NCj4gLXN0YXRpYyBib29sIGljbF90Y19waHlfY29ubmVjdChzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkNCj4gK3N0YXRpYyB2b2lkIGljbF90Y19waHlf
Y29ubmVjdChzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkNCj4gIHsNCj4gIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRpZ19wb3J0LQ0KPiA+
YmFzZS5iYXNlLmRldik7DQo+ICAJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRlbF9wb3J0X3Rv
X3RjKGRldl9wcml2LCBkaWdfcG9ydC0NCj4gPmJhc2UucG9ydCk7DQo+IC0JdTMyIGxpdmVfc3Rh
dHVzX21hc2s7DQo+IC0NCj4gLQlpZiAoZGlnX3BvcnQtPnRjX21vZGUgIT0gVENfUE9SVF9MRUdB
Q1kgJiYNCj4gLQkgICAgZGlnX3BvcnQtPnRjX21vZGUgIT0gVENfUE9SVF9EUF9BTFQpDQo+IC0J
CXJldHVybiB0cnVlOw0KPiAgDQo+ICAJaWYgKCFpY2xfdGNfcGh5X3N0YXR1c19jb21wbGV0ZShk
aWdfcG9ydCkpIHsNCj4gIAkJRFJNX0RFQlVHX0tNUygiUG9ydCAlczogUEhZIG5vdCByZWFkeVxu
IiwNCj4gIAkJCSAgICAgIHRjX3BvcnRfbmFtZShkZXZfcHJpdiwgdGNfcG9ydCkpOw0KPiAtCQlX
QVJOX09OKGRpZ19wb3J0LT50Y19sZWdhY3lfcG9ydCk7DQo+IC0JCXJldHVybiBmYWxzZTsNCj4g
KwkJZ290byBvdXRfc2V0X3RidF9hbHRfbW9kZTsNCj4gIAl9DQo+ICANCj4gLQlpZiAoIWljbF90
Y19waHlfc2V0X3NhZmVfbW9kZShkaWdfcG9ydCwgZmFsc2UpKQ0KPiAtCQlyZXR1cm4gZmFsc2U7
DQo+ICsJaWYgKCFpY2xfdGNfcGh5X3NldF9zYWZlX21vZGUoZGlnX3BvcnQsIGZhbHNlKSAmJg0K
PiArCSAgICAhV0FSTl9PTihkaWdfcG9ydC0+dGNfbGVnYWN5X3BvcnQpKQ0KPiArCQlnb3RvIG91
dF9zZXRfdGJ0X2FsdF9tb2RlOw0KPiAgDQo+IC0JaWYgKGRpZ19wb3J0LT50Y19tb2RlID09IFRD
X1BPUlRfTEVHQUNZKQ0KPiAtCQlyZXR1cm4gdHJ1ZTsNCj4gKwlpZiAoZGlnX3BvcnQtPnRjX2xl
Z2FjeV9wb3J0KSB7DQo+ICsJCVdBUk5fT04oaW50ZWxfdGNfcG9ydF9maWFfbWF4X2xhbmVfY291
bnQoZGlnX3BvcnQpICE9DQo+IDQpOw0KPiArCQlkaWdfcG9ydC0+dGNfbW9kZSA9IFRDX1BPUlRf
TEVHQUNZOw0KPiAgDQo+IC0JbGl2ZV9zdGF0dXNfbWFzayA9IHRjX3BvcnRfbGl2ZV9zdGF0dXNf
bWFzayhkaWdfcG9ydCk7DQo+ICsJCXJldHVybjsNCj4gKwl9DQo+ICANCj4gIAkvKg0KPiAgCSAq
IE5vdyB3ZSBoYXZlIHRvIHJlLWNoZWNrIHRoZSBsaXZlIHN0YXRlLCBpbiBjYXNlIHRoZSBwb3J0
DQo+IHJlY2VudGx5DQo+ICAJICogYmVjYW1lIGRpc2Nvbm5lY3RlZC4gTm90IG5lY2Vzc2FyeSBm
b3IgbGVnYWN5IG1vZGUuDQo+ICAJICovDQo+IC0JaWYgKCEobGl2ZV9zdGF0dXNfbWFzayAmIEJJ
VChUQ19QT1JUX0RQX0FMVCkpKSB7DQo+ICsJaWYgKCEodGNfcG9ydF9saXZlX3N0YXR1c19tYXNr
KGRpZ19wb3J0KSAmDQo+IEJJVChUQ19QT1JUX0RQX0FMVCkpKSB7DQo+ICAJCURSTV9ERUJVR19L
TVMoIlBvcnQgJXM6IFBIWSBzdWRkZW4gZGlzY29ubmVjdFxuIiwNCj4gIAkJCSAgICAgIHRjX3Bv
cnRfbmFtZShkZXZfcHJpdiwgdGNfcG9ydCkpOw0KPiAtCQlpY2xfdGNfcGh5X2Rpc2Nvbm5lY3Qo
ZGlnX3BvcnQpOw0KPiAtCQlyZXR1cm4gZmFsc2U7DQo+ICsJCWdvdG8gb3V0X3NldF9zYWZlX21v
ZGU7DQo+ICAJfQ0KPiAgDQo+IC0JcmV0dXJuIHRydWU7DQo+ICsJZGlnX3BvcnQtPnRjX21vZGUg
PSBUQ19QT1JUX0RQX0FMVDsNCj4gKw0KPiArCXJldHVybjsNCj4gKw0KPiArb3V0X3NldF9zYWZl
X21vZGU6DQo+ICsJaWNsX3RjX3BoeV9zZXRfc2FmZV9tb2RlKGRpZ19wb3J0LCB0cnVlKTsNCj4g
K291dF9zZXRfdGJ0X2FsdF9tb2RlOg0KPiArCWRpZ19wb3J0LT50Y19tb2RlID0gVENfUE9SVF9U
QlRfQUxUOw0KPiAgfQ0KPiAgDQo+ICAvKg0KPiBAQCAtMjMzLDkgKzIzNiw2IEBAIHN0YXRpYyBi
b29sIGljbF90Y19waHlfY29ubmVjdChzdHJ1Y3QNCj4gaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCkNCj4gICAqLw0KPiAgdm9pZCBpY2xfdGNfcGh5X2Rpc2Nvbm5lY3Qoc3RydWN0IGludGVs
X2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpDQo+ICB7DQo+IC0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShkaWdfcG9ydC0NCj4gPmJhc2UuYmFzZS5kZXYpOw0KPiAt
CWVudW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZGlnX3Bv
cnQtDQo+ID5iYXNlLnBvcnQpOw0KPiAtDQo+ICAJc3dpdGNoIChkaWdfcG9ydC0+dGNfbW9kZSkg
ew0KPiAgCWNhc2UgVENfUE9SVF9MRUdBQ1k6DQo+ICAJY2FzZSBUQ19QT1JUX0RQX0FMVDoNCj4g
QEAgLTI0OCwzMSArMjQ4LDQxIEBAIHZvaWQgaWNsX3RjX3BoeV9kaXNjb25uZWN0KHN0cnVjdA0K
PiBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQ0KPiAgCWRlZmF1bHQ6DQo+ICAJCU1JU1NJ
TkdfQ0FTRShkaWdfcG9ydC0+dGNfbW9kZSk7DQo+ICAJfQ0KPiAtDQo+IC0JRFJNX0RFQlVHX0tN
UygiUG9ydCAlczogbW9kZSAlcyBkaXNjb25uZWN0ZWRcbiIsDQo+IC0JCSAgICAgIHRjX3BvcnRf
bmFtZShkZXZfcHJpdiwgdGNfcG9ydCksDQo+IC0JCSAgICAgIHRjX3BvcnRfbW9kZV9uYW1lKGRp
Z19wb3J0LT50Y19tb2RlKSk7DQo+ICB9DQo+ICANCj4gLXN0YXRpYyB2b2lkIGljbF91cGRhdGVf
dGNfcG9ydF90eXBlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlDQo+ICpkZXZfcHJpdiwNCj4gLQkJ
CQkgICAgc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydA0KPiAqaW50ZWxfZGlnX3BvcnQsDQo+IC0J
CQkJICAgIHUzMiBsaXZlX3N0YXR1c19tYXNrKQ0KPiArc3RhdGljIGVudW0gdGNfcG9ydF9tb2Rl
DQo+ICtpbnRlbF90Y19wb3J0X2dldF90YXJnZXRfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9w
b3J0ICpkaWdfcG9ydCkNCj4gIHsNCj4gLQllbnVtIHBvcnQgcG9ydCA9IGludGVsX2RpZ19wb3J0
LT5iYXNlLnBvcnQ7DQo+IC0JZW51bSB0Y19wb3J0X21vZGUgb2xkX21vZGUgPSBpbnRlbF9kaWdf
cG9ydC0+dGNfbW9kZTsNCj4gKwl1MzIgbGl2ZV9zdGF0dXNfbWFzayA9IHRjX3BvcnRfbGl2ZV9z
dGF0dXNfbWFzayhkaWdfcG9ydCk7DQo+ICANCj4gLQlpZiAoIWxpdmVfc3RhdHVzX21hc2spDQo+
IC0JCXJldHVybjsNCj4gKwlpZiAobGl2ZV9zdGF0dXNfbWFzaykNCj4gKwkJcmV0dXJuIGZscyhs
aXZlX3N0YXR1c19tYXNrKSAtIDE7DQo+ICsNCj4gKwlyZXR1cm4gaWNsX3RjX3BoeV9zdGF0dXNf
Y29tcGxldGUoZGlnX3BvcnQpICYmDQo+ICsJICAgICAgIGRpZ19wb3J0LT50Y19sZWdhY3lfcG9y
dCA/IFRDX1BPUlRfTEVHQUNZIDoNCj4gKwkJCQkJICBUQ19QT1JUX1RCVF9BTFQ7DQoNClRoaXMg
d2lsbCByZXR1cm4gMCBvciAxLCBuZXZlciBUQ19QT1JUX0xFR0FDWSgyKSBiZWNhdXNlIG9mIHRo
ZSAiJiYiLg0KDQoNCi1UT09NQU5ZUkVGQUNUT1JTDQpTdGFyaW5nIHRvIGxvdmUgYWdhaW4gaHVn
ZSBwYXRjaGVzIDpQDQoNCj4gK30NCj4gIA0KPiAtCWludGVsX2RpZ19wb3J0LT50Y19tb2RlID0g
ZmxzKGxpdmVfc3RhdHVzX21hc2spIC0gMTsNCj4gK3N0YXRpYyB2b2lkIGludGVsX3RjX3BvcnRf
cmVzZXRfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0DQo+ICpkaWdfcG9ydCkNCj4gK3sN
Cj4gKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRpZ19wb3J0
LQ0KPiA+YmFzZS5iYXNlLmRldik7DQo+ICsJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRlbF9w
b3J0X3RvX3RjKGRldl9wcml2LCBkaWdfcG9ydC0NCj4gPmJhc2UucG9ydCk7DQo+ICsJZW51bSB0
Y19wb3J0X21vZGUgb2xkX3RjX21vZGUgPSBkaWdfcG9ydC0+dGNfbW9kZTsNCj4gIA0KPiAtCWlm
IChvbGRfbW9kZSAhPSBpbnRlbF9kaWdfcG9ydC0+dGNfbW9kZSkNCj4gLQkJRFJNX0RFQlVHX0tN
UygiUG9ydCAlczogcG9ydCBoYXMgbW9kZSAlc1xuIiwNCj4gLQkJCSAgICAgIHRjX3BvcnRfbmFt
ZShkZXZfcHJpdiwNCj4gLQkJCQkJICAgaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwNCj4gcG9y
dCkpLA0KPiAtCQkJICAgICAgdGNfcG9ydF9tb2RlX25hbWUoaW50ZWxfZGlnX3BvcnQtDQo+ID50
Y19tb2RlKSk7DQo+ICsJaWNsX3RjX3BoeV9kaXNjb25uZWN0KGRpZ19wb3J0KTsNCj4gKwlpY2xf
dGNfcGh5X2Nvbm5lY3QoZGlnX3BvcnQpOw0KPiArDQo+ICsJRFJNX0RFQlVHX0tNUygiUG9ydCAl
czogVEMgcG9ydCBtb2RlIHJlc2V0ICglcyAtPiAlcylcbiIsDQo+ICsJCSAgICAgIHRjX3BvcnRf
bmFtZShkZXZfcHJpdiwgdGNfcG9ydCksDQo+ICsJCSAgICAgIHRjX3BvcnRfbW9kZV9uYW1lKG9s
ZF90Y19tb2RlKSwNCj4gKwkJICAgICAgdGNfcG9ydF9tb2RlX25hbWUoZGlnX3BvcnQtPnRjX21v
ZGUpKTsNCj4gIH0NCj4gIA0KPiArc3RhdGljIGJvb2wNCj4gK2ludGVsX3RjX3BvcnRfbmVlZHNf
cmVzZXQoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpDQo+ICt7DQo+ICsJcmV0
dXJuIGludGVsX3RjX3BvcnRfZ2V0X3RhcmdldF9tb2RlKGRpZ19wb3J0KSAhPSBkaWdfcG9ydC0N
Cj4gPnRjX21vZGU7DQo+ICt9DQo+ICANCj4gIC8qDQo+ICAgKiBUaGUgdHlwZS1DIHBvcnRzIGFy
ZSBkaWZmZXJlbnQgYmVjYXVzZSBldmVuIHdoZW4gdGhleSBhcmUNCj4gY29ubmVjdGVkLCB0aGV5
IG1heQ0KPiBAQCAtMjg2LDIzICsyOTYsOSBAQCBzdGF0aWMgdm9pZCBpY2xfdXBkYXRlX3RjX3Bv
cnRfdHlwZShzdHJ1Y3QNCj4gZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsDQo+ICAgKi8NCj4g
IGJvb2wgaW50ZWxfdGNfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAq
ZGlnX3BvcnQpDQo+ICB7DQo+IC0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShkaWdfcG9ydC0NCj4gPmJhc2UuYmFzZS5kZXYpOw0KPiAtCXUzMiBsaXZlX3N0YXR1
c19tYXNrID0gdGNfcG9ydF9saXZlX3N0YXR1c19tYXNrKGRpZ19wb3J0KTsNCj4gKwlpZiAoaW50
ZWxfdGNfcG9ydF9uZWVkc19yZXNldChkaWdfcG9ydCkpDQo+ICsJCWludGVsX3RjX3BvcnRfcmVz
ZXRfbW9kZShkaWdfcG9ydCk7DQo+ICANCj4gLQkvKg0KPiAtCSAqIFRoZSBzcGVjIHNheXMgd2Ug
c2hvdWxkbid0IGJlIHVzaW5nIHRoZSBJU1IgYml0cyBmb3INCj4gZGV0ZWN0aW5nDQo+IC0JICog
YmV0d2VlbiBUQyBhbmQgVEJULiBXZSBzaG91bGQgdXNlIERGTEVYRFBTUC4NCj4gLQkgKi8NCj4g
LQlpZiAoIWxpdmVfc3RhdHVzX21hc2sgJiYgIWRpZ19wb3J0LT50Y19sZWdhY3lfcG9ydCkgew0K
PiAtCQlpY2xfdGNfcGh5X2Rpc2Nvbm5lY3QoZGlnX3BvcnQpOw0KPiAtDQo+IC0JCXJldHVybiBm
YWxzZTsNCj4gLQl9DQo+IC0NCj4gLQlpY2xfdXBkYXRlX3RjX3BvcnRfdHlwZShkZXZfcHJpdiwg
ZGlnX3BvcnQsIGxpdmVfc3RhdHVzX21hc2spOw0KPiAtCWlmICghaWNsX3RjX3BoeV9jb25uZWN0
KGRpZ19wb3J0KSkNCj4gLQkJcmV0dXJuIGZhbHNlOw0KPiAtDQo+IC0JcmV0dXJuIHRydWU7DQo+
ICsJcmV0dXJuIHRjX3BvcnRfbGl2ZV9zdGF0dXNfbWFzayhkaWdfcG9ydCkgJiBCSVQoZGlnX3Bv
cnQtDQo+ID50Y19tb2RlKTsNCj4gIH0NCj4gIA0KX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vaW50ZWwtZ2Z4

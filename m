Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id ACA32F2C1A
	for <lists+intel-gfx@lfdr.de>; Thu,  7 Nov 2019 11:25:19 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D9F4C6F559;
	Thu,  7 Nov 2019 10:25:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 175BF6F535
 for <intel-gfx@lists.freedesktop.org>; Thu,  7 Nov 2019 10:25:14 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Nov 2019 02:25:13 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,277,1569308400"; d="scan'208";a="230065635"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by FMSMGA003.fm.intel.com with ESMTP; 07 Nov 2019 02:25:11 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  7 Nov 2019 12:22:25 +0200
Message-Id: <20191107102225.25988-3-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191107102225.25988-1-stanislav.lisovskiy@intel.com>
References: <20191107102225.25988-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v10 2/2] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KClJldmll
d2VkLWJ5OiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0BpbnRlbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IFN0YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNraXlAaW50ZWwuY29tPgpD
YzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGludGVsLmNvbT4KQ2M6IEphbWVzIEF1
c211cyA8amFtZXMuYXVzbXVzQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2F0b21pYy5oICAgfCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9idy5jICAgICAgIHwgMTM3ICsrKysrKysrKysrKysrKy0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oICAgICAgIHwgICAyICsKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICA5NyArKysrKysrKysrKystCiAu
Li4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgIDMgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgIHwgICA0ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oICAgICAgICAgICAgICAgfCAgIDggKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyAgICAgICAgICAgICAgIHwgIDE1ICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oICAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuYyAgICAgICAgIHwgIDI3ICsrKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3NpZGViYW5kLmggICAgICAgICB8ICAgMSAtCiAxMSBmaWxlcyBj
aGFuZ2VkLCAyNTkgaW5zZXJ0aW9ucygrKSwgMzkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmgKaW5kZXggN2I0OTYyMzQxOWJhLi4zYWI2
ZDdlYzc1YWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
YXRvbWljLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMu
aApAQCAtNyw2ICs3LDcgQEAKICNkZWZpbmUgX19JTlRFTF9BVE9NSUNfSF9fCiAKICNpbmNsdWRl
IDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgImludGVsX2Rpc3BsYXlfdHlwZXMuaCIKIAogc3Ry
dWN0IGRybV9hdG9taWNfc3RhdGU7CiBzdHJ1Y3QgZHJtX2Nvbm5lY3RvcjsKQEAgLTQxLDYgKzQy
LDggQEAgdm9pZCBpbnRlbF9jcnRjX2NvcHlfY29sb3JfYmxvYnMoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpOwogc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKmludGVsX2F0b21p
Y19zdGF0ZV9hbGxvYyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KTsKIHZvaWQgaW50ZWxfYXRvbWlj
X3N0YXRlX2NsZWFyKHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICpzdGF0ZSk7CiAKK2ludCBpbnRl
bF9hdG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSk7CisKIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICoKIGludGVsX2F0b21pY19nZXRf
Y3J0Y19zdGF0ZShzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCQkgICAgc3RydWN0
IGludGVsX2NydGMgKmNydGMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9idy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5j
CmluZGV4IDNmNmUyOWY2MTMyMy4uMWRkZTRlMTU3NGZiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9idy5jCkBAIC04LDYgKzgsOSBAQAogI2luY2x1ZGUgImludGVsX2J3Lmgi
CiAjaW5jbHVkZSAiaW50ZWxfZGlzcGxheV90eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3NpZGVi
YW5kLmgiCisjaW5jbHVkZSAiaW50ZWxfYXRvbWljLmgiCisjaW5jbHVkZSAiaW50ZWxfcG0uaCIK
KwogCiAvKiBQYXJhbWV0ZXJzIGZvciBRY2xrIEdleXNlcnZpbGxlIChRR1YpICovCiBzdHJ1Y3Qg
aW50ZWxfcWd2X3BvaW50IHsKQEAgLTE1LDcgKzE4LDcgQEAgc3RydWN0IGludGVsX3Fndl9wb2lu
dCB7CiB9OwogCiBzdHJ1Y3QgaW50ZWxfcWd2X2luZm8gewotCXN0cnVjdCBpbnRlbF9xZ3ZfcG9p
bnQgcG9pbnRzWzNdOworCXN0cnVjdCBpbnRlbF9xZ3ZfcG9pbnQgcG9pbnRzW05VTV9TQUdWX1BP
SU5UU107CiAJdTggbnVtX3BvaW50czsKIAl1OCBudW1fY2hhbm5lbHM7CiAJdTggdF9ibDsKQEAg
LTExMyw2ICsxMTYsMjcgQEAgc3RhdGljIGludCBpY2xfcGNvZGVfcmVhZF9xZ3ZfcG9pbnRfaW5m
byhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJcmV0dXJuIDA7CiB9CiAKK2lu
dCBpY2xfcGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsCisJCQkJICB1MzIgcG9pbnRzX21hc2spCit7CisJaW50IHJldDsKKworCS8qIGJz
cGVjIHNheXMgdG8ga2VlcCByZXRyeWluZyBmb3IgYXQgbGVhc3QgMSBtcyAqLworCXJldCA9IHNr
bF9wY29kZV9yZXF1ZXN0KGRldl9wcml2LCBJQ0xfUENPREVfU0FHVl9ERV9NRU1fU1NfQ09ORklH
LAorCQkJCXBvaW50c19tYXNrLAorCQkJCUdFTjExX1BDT0RFX1BPSU5UU19SRVNUUklDVEVEX01B
U0ssCisJCQkJR0VOMTFfUENPREVfUE9JTlRTX1JFU1RSSUNURUQsCisJCQkJMSk7CisKKwlpZiAo
cmV0IDwgMCkgeworCQlEUk1fRVJST1IoIkZhaWxlZCB0byBkaXNhYmxlIHFndiBwb2ludHMgKCVk
KVxuIiwgcmV0KTsKKwkJcmV0dXJuIHJldDsKKwl9CisKKwlyZXR1cm4gMDsKK30KKworCiBzdGF0
aWMgaW50IGljbF9nZXRfcWd2X3BvaW50cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfcWd2X2luZm8gKnFpKQogewpAQCAtMTc2LDcgKzIw
MCw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfc2FfaW5mbyB0Z2xfc2FfaW5mbyA9IHsK
IAogc3RhdGljIGludCBpY2xfZ2V0X2J3X2luZm8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LCBjb25zdCBzdHJ1Y3QgaW50ZWxfc2FfaW5mbyAqc2EpCiB7Ci0Jc3RydWN0IGludGVs
X3Fndl9pbmZvIHFpID0ge307CisJc3RydWN0IGludGVsX3Fndl9pbmZvIHFpOwogCWJvb2wgaXNf
eV90aWxlID0gdHJ1ZTsgLyogYXNzdW1lIHkgdGlsZSBtYXkgYmUgdXNlZCAqLwogCWludCBudW1f
Y2hhbm5lbHM7CiAJaW50IGRlaW50ZXJsZWF2ZTsKQEAgLTI3MCwyMiArMjk0LDYgQEAgdm9pZCBp
bnRlbF9id19pbml0X2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaWNs
X2dldF9id19pbmZvKGRldl9wcml2LCAmaWNsX3NhX2luZm8pOwogfQogCi1zdGF0aWMgdW5zaWdu
ZWQgaW50IGludGVsX21heF9kYXRhX3JhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LAotCQkJCQlpbnQgbnVtX3BsYW5lcykKLXsKLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+
PSAxMSkKLQkJLyoKLQkJICogRklYTUUgd2l0aCBTQUdWIGRpc2FibGVkIG1heWJlIHdlIGNhbiBh
c3N1bWUKLQkJICogcG9pbnQgMSB3aWxsIGFsd2F5cyBiZSB1c2VkPyBTZWVtcyB0byBtYXRjaAot
CQkgKiB0aGUgYmVoYXZpb3VyIG9ic2VydmVkIGluIHRoZSB3aWxkLgotCQkgKi8KLQkJcmV0dXJu
IG1pbjMoaWNsX21heF9idyhkZXZfcHJpdiwgbnVtX3BsYW5lcywgMCksCi0JCQkgICAgaWNsX21h
eF9idyhkZXZfcHJpdiwgbnVtX3BsYW5lcywgMSksCi0JCQkgICAgaWNsX21heF9idyhkZXZfcHJp
diwgbnVtX3BsYW5lcywgMikpOwotCWVsc2UKLQkJcmV0dXJuIFVJTlRfTUFYOwotfQotCiBzdGF0
aWMgdW5zaWduZWQgaW50IGludGVsX2J3X2NydGNfbnVtX2FjdGl2ZV9wbGFuZXMoY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJLyoKQEAgLTM3Nyw3ICszODUs
MTIgQEAgaW50IGludGVsX2J3X2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSkKIAl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlOwogCXVuc2ln
bmVkIGludCBudW1fYWN0aXZlX3BsYW5lczsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKLQlp
bnQgaTsKKwlpbnQgaSwgcmV0OworCXN0cnVjdCBpbnRlbF9xZ3ZfaW5mbyBxaSA9IHt9OworCXUz
MiBhbGxvd2VkX3BvaW50cyA9IDA7CisJdW5zaWduZWQgaW50IG1heF9id19wb2ludCA9IDAsIG1h
eF9idyA9IDA7CisJdW5zaWduZWQgaW50IG51bV9xZ3ZfcG9pbnRzID0gZGV2X3ByaXYtPm1heF9i
d1swXS5udW1fcWd2X3BvaW50czsKKwl1MzIgbWFzayA9ICgxIDw8IG51bV9xZ3ZfcG9pbnRzKSAt
IDE7CiAKIAkvKiBGSVhNRSBlYXJsaWVyIGdlbnMgbmVlZCBzb21lIGNoZWNrcyB0b28gKi8KIAlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQpAQCAtNDIxLDE2ICs0MzQsOTIgQEAgaW50IGlu
dGVsX2J3X2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlk
YXRhX3JhdGUgPSBpbnRlbF9id19kYXRhX3JhdGUoZGV2X3ByaXYsIGJ3X3N0YXRlKTsKIAludW1f
YWN0aXZlX3BsYW5lcyA9IGludGVsX2J3X251bV9hY3RpdmVfcGxhbmVzKGRldl9wcml2LCBid19z
dGF0ZSk7CiAKLQltYXhfZGF0YV9yYXRlID0gaW50ZWxfbWF4X2RhdGFfcmF0ZShkZXZfcHJpdiwg
bnVtX2FjdGl2ZV9wbGFuZXMpOwotCiAJZGF0YV9yYXRlID0gRElWX1JPVU5EX1VQKGRhdGFfcmF0
ZSwgMTAwMCk7CiAKLQlpZiAoZGF0YV9yYXRlID4gbWF4X2RhdGFfcmF0ZSkgewotCQlEUk1fREVC
VUdfS01TKCJCYW5kd2lkdGggJXUgTUIvcyBleGNlZWRzIG1heCBhdmFpbGFibGUgJWQgTUIvcyAo
JWQgYWN0aXZlIHBsYW5lcylcbiIsCi0JCQkgICAgICBkYXRhX3JhdGUsIG1heF9kYXRhX3JhdGUs
IG51bV9hY3RpdmVfcGxhbmVzKTsKKwlmb3IgKGkgPSAwOyBpIDwgbnVtX3Fndl9wb2ludHM7IGkr
KykgeworCQltYXhfZGF0YV9yYXRlID0gaWNsX21heF9idyhkZXZfcHJpdiwgbnVtX2FjdGl2ZV9w
bGFuZXMsIGkpOworCQkvKgorCQkgKiBXZSBuZWVkIHRvIGtub3cgd2hpY2ggcWd2IHBvaW50IGdp
dmVzIHVzCisJCSAqIG1heGltdW0gYmFuZHdpZHRoIGluIG9yZGVyIHRvIGRpc2FibGUgU0FHVgor
CQkgKiBpZiB3ZSBmaW5kIHRoYXQgd2UgZXhjZWVkIFNBR1YgYmxvY2sgdGltZQorCQkgKiB3aXRo
IHdhdGVybWFya3MuIEJ5IHRoYXQgbW9tZW50IHdlIGFscmVhZHkKKwkJICogaGF2ZSB0aG9zZSwg
YXMgaXQgaXMgY2FsY3VsYXRlZCBlYXJsaWVyIGluCisJCSAqIGludGVsX2F0b21pY19jaGVjaywK
KwkJICovCisJCWlmIChtYXhfZGF0YV9yYXRlID4gbWF4X2J3KSB7CisJCQltYXhfYndfcG9pbnQg
PSBpOworCQkJbWF4X2J3ID0gbWF4X2RhdGFfcmF0ZTsKKwkJfQorCQlpZiAobWF4X2RhdGFfcmF0
ZSA+PSBkYXRhX3JhdGUpCisJCQlhbGxvd2VkX3BvaW50cyB8PSAxIDw8IGk7CisJCURSTV9ERUJV
R19LTVMoIlFHViBwb2ludCAlZDogbWF4IGJ3ICVkIHJlcXVpcmVkICVkXG4iLAorCQkJICAgICAg
aSwgbWF4X2RhdGFfcmF0ZSwgZGF0YV9yYXRlKTsKKwl9CisKKwkvKgorCSAqIEJTcGVjIHN0YXRl
cyB0aGF0IHdlIGFsd2F5cyBzaG91bGQgaGF2ZSBhdCBsZWFzdCBvbmUgYWxsb3dlZCBwb2ludAor
CSAqIGxlZnQsIHNvIGlmIHdlIGNvdWxkbid0IC0gc2ltcGx5IHJlamVjdCB0aGUgY29uZmlndXJh
dGlvbiBmb3Igb2J2aW91cworCSAqIHJlYXNvbnMuCisJICovCisJaWYgKGFsbG93ZWRfcG9pbnRz
ID09IDApIHsKKwkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IGZpbmQgYW55IHN1aXRhYmxlIFFH
ViBwb2ludHNcbiIpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKKwkvKgorCSAqIEluIGNhc2Ug
aWYgU0FHViBpcyBkaXNhYmxlZCBpbiBCSU9TLCB3ZSBhbHdheXMgZ2V0IDEKKwkgKiBTQUdWIHBv
aW50LCBidXQgd2UgY2FuJ3Qgc2VuZCBQQ29kZSBjb21tYW5kcyB0byByZXN0cmljdCBpdAorCSAq
IGFzIGl0IHdpbGwgZmFpbCBhbmQgcG9pbnRsZXNzIGFueXdheS4KKwkgKi8KKwlpZiAocWkubnVt
X3BvaW50cyA9PSAxKQorCQlkZXZfcHJpdi0+c2Fndl9zdGF0dXMgPSBJOTE1X1NBR1ZfTk9UX0NP
TlRST0xMRUQ7CisJZWxzZQorCQlkZXZfcHJpdi0+c2Fndl9zdGF0dXMgPSBJOTE1X1NBR1ZfRU5B
QkxFRDsKKworCS8qCisJICogTGVhdmUgb25seSBzaW5nbGUgcG9pbnQgd2l0aCBoaWdoZXN0IGJh
bmR3aWR0aCwgaWYKKwkgKiB3ZSBjYW4ndCBlbmFibGUgU0FHViBhY2NvcmRpbmcgdG8gQlNwZWMu
CisJICovCisJaWYgKCFpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RhdGUpKSB7CisKKwkJLyoKKwkJ
ICogVGhpcyBpcyBhIGJvcmRlciBsaW5lIGNvbmRpdGlvbiB3aGVuIHdlIGhhdmUgMCBwbGFuZXMK
KwkJICogYW5kIFNBR1Ygbm90IGVuYWJsZWQgbWVhbnMgdGhhdCB3ZSBzaG91bGQga2VlcCBRR1Yg
d2l0aAorCQkgKiBoaWdoZXN0IGJhbmR3aWR0aCwgaG93ZXZlciBhbGdvcml0aG0gcmV0dXJucyB3
cm9uZyByZXN1bHQKKwkJICogZm9yIDAgcGxhbmVzIGFuZCAwIGRhdGEgcmF0ZSwgc28ganVzdCBz
dGljayB0byBsYXN0IGNvbmZpZworCQkgKiB0aGVuLiBPdGhlcndpc2UgdXNlIHRoZSBRR1YgcG9p
bnQgd2l0aCBoaWdoZXN0IEJXIGFjY29yZGluZworCQkgKiB0byBCU3BlYy4KKwkJICovCisJCWlm
ICghZGF0YV9yYXRlICYmICFudW1fYWN0aXZlX3BsYW5lcykgeworCQkJRFJNX0RFQlVHX0tNUygi
Tm8gU0FHViwgdXNpbmcgb2xkIFFHViBtYXNrXG4iKTsKKwkJCWFsbG93ZWRfcG9pbnRzID0gKH5k
ZXZfcHJpdi0+cWd2X3BvaW50c19tYXNrKSAmIG1hc2s7CisJCX0gZWxzZSB7CisJCQlhbGxvd2Vk
X3BvaW50cyA9IDEgPDwgbWF4X2J3X3BvaW50OworCQkJRFJNX0RFQlVHX0tNUygiTm8gU0FHViwg
dXNpbmcgc2luZ2xlIFFHViBwb2ludCAlZFxuIiwKKwkJCQkgICAgICBtYXhfYndfcG9pbnQpOwor
CQl9CisJfQorCS8qCisJICogV2Ugc3RvcmUgdGhlIG9uZXMgd2hpY2ggbmVlZCB0byBiZSBtYXNr
ZWQgYXMgdGhhdCBpcyB3aGF0IFBDb2RlCisJICogYWN0dWFsbHkgYWNjZXB0cyBhcyBhIHBhcmFt
ZXRlci4KKwkgKi8KKwlzdGF0ZS0+cWd2X3BvaW50c19tYXNrID0gKH5hbGxvd2VkX3BvaW50cykg
JiBtYXNrOworCisJRFJNX0RFQlVHX0tNUygiTmV3IHN0YXRlICVwIHFndiBtYXNrICV4XG4iLAor
CQkgICAgICBzdGF0ZSwgc3RhdGUtPnFndl9wb2ludHNfbWFzayk7CisKKwkvKgorCSAqIElmIHRo
ZSBhY3R1YWwgbWFzayBoYWQgY2hhbmdlZCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0CisJICog
dGhlIGNvbW1pdHMgYXJlIHNlcmlhbGl6ZWQoaW4gY2FzZSB0aGlzIGlzIGEgbm9tb2Rlc2V0LCBu
b25ibG9ja2luZykKKwkgKi8KKwlpZiAoc3RhdGUtPnFndl9wb2ludHNfbWFzayAhPSBkZXZfcHJp
di0+cWd2X3BvaW50c19tYXNrKSB7CisJCXJldCA9IGludGVsX2F0b21pY19zZXJpYWxpemVfZ2xv
YmFsX3N0YXRlKHN0YXRlKTsKKwkJaWYgKHJldCkgeworCQkJRFJNX0RFQlVHX0tNUygiQ291bGQg
bm90IHNlcmlhbGl6ZSBnbG9iYWwgc3RhdGVcbiIpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0K
KwogCXJldHVybiAwOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2J3LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmgK
aW5kZXggOWRiMTBhZjAxMmY0Li42NmJmOWJjMTBiNzMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2J3LmgKQEAgLTI4LDUgKzI4LDcgQEAgaW50IGludGVsX2J3X2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIGludCBpbnRlbF9id19hdG9taWNfY2hl
Y2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOwogdm9pZCBpbnRlbF9id19jcnRj
X3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlLAogCQkJICBjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CitpbnQgaWNsX3Bjb2RlX3Jlc3RyaWN0
X3Fndl9wb2ludHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgdTMy
IHBvaW50c19tYXNrKTsKIAogI2VuZGlmIC8qIF9fSU5URUxfQldfSF9fICovCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IDdlYTFlNzUxOGFiNi4u
NTgxZjI0OGVlNzNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYwpAQCAtMTQ3NDQsNiArMTQ3NDQsODggQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWlj
X2NsZWFudXBfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJaW50ZWxfYXRvbWljX2hl
bHBlcl9mcmVlX3N0YXRlKGk5MTUpOwogfQogCitzdGF0aWMgdm9pZCBpbnRlbF9xZ3ZfcG9pbnRz
X21hc2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9k
ZXZpY2UgKmRldiA9IHN0YXRlLT5iYXNlLmRldjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJaW50IHJldDsKKwl1MzIgbmV3X21hc2sgPSBkZXZf
cHJpdi0+cWd2X3BvaW50c19tYXNrIHwgc3RhdGUtPnFndl9wb2ludHNfbWFzazsKKwl1bnNpZ25l
ZCBpbnQgbnVtX3Fndl9wb2ludHMgPSBkZXZfcHJpdi0+bWF4X2J3WzBdLm51bV9xZ3ZfcG9pbnRz
OworCXVuc2lnbmVkIGludCBtYXNrID0gKDEgPDwgbnVtX3Fndl9wb2ludHMpIC0gMTsKKworCURS
TV9ERUJVR19LTVMoIlFHViBwb2ludHMgbWFza2luZzogb2xkIG1hc2sgJXggbmV3IG1hc2sgJXhc
biIsCisJCSAgICAgIGRldl9wcml2LT5xZ3ZfcG9pbnRzX21hc2ssCisJCSAgICAgIG5ld19tYXNr
KTsKKworCS8qCisJICogQXMgd2UgZG9uJ3Qga25vdyBpbml0aWFsIGhhcmR3YXJlIHN0YXRlIGR1
cmluZyBpbml0aWFsIGNvbW1pdAorCSAqIHdlIHNob3VsZCBub3QgZG8gYW55dGhpbmcsIHVudGls
IHdlIGFjdHVhbGx5IGZpZ3VyZSBvdXQsCisJICogd2hhdCBhcmUgdGhlIHFndiBwb2ludHMgdG8g
bWFzay4KKwkgKi8KKwlpZiAoIW5ld19tYXNrKQorCQlyZXR1cm47CisKKwlXQVJOX09OKG5ld19t
YXNrID09IG1hc2spOworCisJLyoKKwkgKiBKdXN0IHJldHVybiBpZiB3ZSBjYW4ndCBjb250cm9s
IFNBR1Ygb3IgZG9uJ3QgaGF2ZSBpdC4KKwkgKi8KKwlpZiAoIWludGVsX2hhc19zYWd2KGRldl9w
cml2KSkKKwkJcmV0dXJuOworCisJLyoKKwkgKiBSZXN0cmljdCByZXF1aXJlZCBxZ3YgcG9pbnRz
IGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbi4KKwkgKiBBY2NvcmRpbmcgdG8gQlNw
ZWMgd2UgY2FuJ3QgbWFzayBhbmQgdW5tYXNrIHFndiBwb2ludHMgYXQgdGhlIHNhbWUKKwkgKiB0
aW1lLiBBbHNvIG1hc2tpbmcgc2hvdWxkIGJlIGRvbmUgYmVmb3JlIHVwZGF0aW5nIHRoZSBjb25m
aWd1cmF0aW9uCisJICogYW5kIHVubWFza2luZyBhZnRlcndhcmRzLgorCSAqLworCXJldCA9IGlj
bF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKGRldl9wcml2LCBuZXdfbWFzayk7CisJaWYgKHJl
dCA8IDApCisJCURSTV9ERUJVR19LTVMoIkNvdWxkIG5vdCByZXN0cmljdCByZXF1aXJlZCBxZ3Yg
cG9pbnRzKCVkKVxuIiwKKwkJCSAgICAgIHJldCk7CisJZWxzZQorCQlkZXZfcHJpdi0+cWd2X3Bv
aW50c19tYXNrID0gbmV3X21hc2s7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsX3Fndl9wb2ludHNf
dW5tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShkZXYpOworCWludCByZXQ7CisJdTMyIG5ld19tYXNrID0gZGV2
X3ByaXYtPnFndl9wb2ludHNfbWFzayAmIHN0YXRlLT5xZ3ZfcG9pbnRzX21hc2s7CisKKwlEUk1f
REVCVUdfS01TKCJRR1YgcG9pbnRzIHVubWFza2luZzogb2xkIG1hc2sgJXggbmV3IG1hc2sgJXhc
biIsCisJCSAgICAgIGRldl9wcml2LT5xZ3ZfcG9pbnRzX21hc2ssCisJCSAgICAgIG5ld19tYXNr
KTsKKworCS8qCisJICogQXMgd2UgZG9uJ3Qga25vdyBpbml0aWFsIGhhcmR3YXJlIHN0YXRlIGR1
cmluZyBpbml0aWFsIGNvbW1pdAorCSAqIHdlIHNob3VsZCBub3QgZG8gYW55dGhpbmcsIHVudGls
IHdlIGFjdHVhbGx5IGZpZ3VyZSBvdXQsCisJICogd2hhdCBhcmUgdGhlIHFndiBwb2ludHMgdG8g
bWFzay4KKwkgKi8KKwlpZiAoIW5ld19tYXNrKQorCQlyZXR1cm47CisKKwkvKgorCSAqIEp1c3Qg
cmV0dXJuIGlmIHdlIGNhbid0IGNvbnRyb2wgU0FHViBvciBkb24ndCBoYXZlIGl0LgorCSAqLwor
CWlmICghaW50ZWxfaGFzX3NhZ3YoZGV2X3ByaXYpKQorCQlyZXR1cm47CisKKwkvKgorCSAqIEFs
bG93IHJlcXVpcmVkIHFndiBwb2ludHMgYWZ0ZXIgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24u
CisJICogQWNjb3JkaW5nIHRvIEJTcGVjIHdlIGNhbid0IG1hc2sgYW5kIHVubWFzayBxZ3YgcG9p
bnRzIGF0IHRoZSBzYW1lCisJICogdGltZS4gQWxzbyBtYXNraW5nIHNob3VsZCBiZSBkb25lIGJl
Zm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbgorCSAqIGFuZCB1bm1hc2tpbmcgYWZ0ZXJ3
YXJkcy4KKwkgKi8KKwlyZXQgPSBpY2xfcGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhkZXZfcHJp
diwgbmV3X21hc2spOworCWlmIChyZXQgPCAwKQorCQlEUk1fREVCVUdfS01TKCJDb3VsZCBub3Qg
cmVzdHJpY3QgcmVxdWlyZWQgcWd2IHBvaW50cyglZClcbiIsCisJCQkgICAgICByZXQpOworCWVs
c2UKKwkJZGV2X3ByaXYtPnFndl9wb2ludHNfbWFzayA9IG5ld19tYXNrOworfQorCiBzdGF0aWMg
dm9pZCBpbnRlbF9hdG9taWNfY29tbWl0X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHN0YXRlLT5iYXNlLmRldjsKQEAg
LTE0NzcxLDYgKzE0ODUzLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2NvbW1pdF90YWls
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQl9CiAJfQogCisJaWYgKChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDExKSkKKwkJaW50ZWxfcWd2X3BvaW50c19tYXNrKHN0YXRlKTsK
KwogCWludGVsX2NvbW1pdF9tb2Rlc2V0X2Rpc2FibGVzKHN0YXRlKTsKIAogCS8qIEZJWE1FOiBF
dmVudHVhbGx5IGdldCByaWQgb2Ygb3VyIGNydGMtPmNvbmZpZyBwb2ludGVyICovCkBAIC0xNDc4
OSw4ICsxNDg3NCw5IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJICogU0tMIHdvcmthcm91bmQ6IGJzcGVj
IHJlY29tbWVuZHMgd2UgZGlzYWJsZSB0aGUgU0FHViB3aGVuIHdlCiAJCSAqIGhhdmUgbW9yZSB0
aGVuIG9uZSBwaXBlIGVuYWJsZWQKIAkJICovCi0JCWlmICghaW50ZWxfY2FuX2VuYWJsZV9zYWd2
KHN0YXRlKSkKLQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7CisJCWlmIChJTlRFTF9H
RU4oZGV2X3ByaXYpIDwgMTEpCisJCQlpZiAoIWludGVsX2Nhbl9lbmFibGVfc2FndihzdGF0ZSkp
CisJCQkJaW50ZWxfZGlzYWJsZV9zYWd2KGRldl9wcml2KTsKIAogCQlpbnRlbF9tb2Rlc2V0X3Zl
cmlmeV9kaXNhYmxlZChkZXZfcHJpdiwgc3RhdGUpOwogCX0KQEAgLTE0ODczLDggKzE0OTU5LDEx
IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSkKIAlpZiAoc3RhdGUtPm1vZGVzZXQpCiAJCWludGVsX3ZlcmlmeV9w
bGFuZXMoc3RhdGUpOwogCi0JaWYgKHN0YXRlLT5tb2Rlc2V0ICYmIGludGVsX2Nhbl9lbmFibGVf
c2FndihzdGF0ZSkpCi0JCWludGVsX2VuYWJsZV9zYWd2KGRldl9wcml2KTsKKwlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA8IDExKSB7CisJCWlmIChzdGF0ZS0+bW9kZXNldCAmJiBpbnRlbF9jYW5f
ZW5hYmxlX3NhZ3Yoc3RhdGUpKQorCQkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3ByaXYpOworCX0g
ZWxzZQorCQlpbnRlbF9xZ3ZfcG9pbnRzX3VubWFzayhzdGF0ZSk7CiAKIAlkcm1fYXRvbWljX2hl
bHBlcl9jb21taXRfaHdfZG9uZSgmc3RhdGUtPmJhc2UpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IGZiMjc0NTM4YWYy
My4uODk2YjEzYmM0NDk0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtNTI4LDYgKzUyOCw5IEBAIHN0cnVjdCBpbnRlbF9h
dG9taWNfc3RhdGUgewogCXN0cnVjdCBpOTE1X3N3X2ZlbmNlIGNvbW1pdF9yZWFkeTsKIAogCXN0
cnVjdCBsbGlzdF9ub2RlIGZyZWVkOworCisJLyogR2VuMTErIG9ubHkgKi8KKwl1MzIgcWd2X3Bv
aW50c19tYXNrOwogfTsKIAogc3RydWN0IGludGVsX3BsYW5lX3N0YXRlIHsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCmluZGV4IDRmNGUyZTgzOTUxMy4uOTkyNDM5MGNiOTRiIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmgKQEAgLTEyNDMsMTEgKzEyNDMsMTMgQEAgc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgewogCX0gZHJhbV9pbmZvOwogCiAJc3RydWN0IGludGVsX2J3X2luZm8gewotCQl1bnNpZ25l
ZCBpbnQgZGVyYXRlZGJ3WzNdOyAvKiBmb3IgZWFjaCBRR1YgcG9pbnQgKi8KKwkJdW5zaWduZWQg
aW50IGRlcmF0ZWRid1tOVU1fU0FHVl9QT0lOVFNdOyAvKiBmb3IgZWFjaCBRR1YgcG9pbnQgKi8K
IAkJdTggbnVtX3Fndl9wb2ludHM7CiAJCXU4IG51bV9wbGFuZXM7CiAJfSBtYXhfYndbNl07CiAK
Kwl1MzIgcWd2X3BvaW50c19tYXNrOworCiAJc3RydWN0IGRybV9wcml2YXRlX29iaiBid19vYmo7
CiAKIAlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSBydW50aW1lX3BtOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cmVnLmgKaW5kZXggYTYwN2VhNTIwODI5Li42ZDZlY2YxZDlmNmIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZWcuaApAQCAtODk1MSw2ICs4OTUxLDkgQEAgZW51bSB7CiAjZGVmaW5lIFZMVl9SRU5ERVJf
QzBfQ09VTlQJCQlfTU1JTygweDEzODExOCkKICNkZWZpbmUgVkxWX01FRElBX0MwX0NPVU5UCQkJ
X01NSU8oMHgxMzgxMUMpCiAKKy8qIEJTcGVjIHByZWNpc2VseSBkZWZpbmVzIHRoaXMgKi8KKyNk
ZWZpbmUgTlVNX1NBR1ZfUE9JTlRTIDgKKwogI2RlZmluZSBHRU42X1BDT0RFX01BSUxCT1gJCQlf
TU1JTygweDEzODEyNCkKICNkZWZpbmUgICBHRU42X1BDT0RFX1JFQURZCQkJKDEgPDwgMzEpCiAj
ZGVmaW5lICAgR0VONl9QQ09ERV9FUlJPUl9NQVNLCQkJMHhGRgpAQCAtODk2MSw2ICs4OTY0LDgg
QEAgZW51bSB7CiAjZGVmaW5lICAgICBHRU42X1BDT0RFX1VOSU1QTEVNRU5URURfQ01ECTB4RkYK
ICNkZWZpbmUgICAgIEdFTjdfUENPREVfVElNRU9VVAkJCTB4MgogI2RlZmluZSAgICAgR0VON19Q
Q09ERV9JTExFR0FMX0RBVEEJCTB4MworI2RlZmluZSAgICAgR0VOMTFfUENPREVfTUFJTF9CT1hf
TE9DS0VECQkweDYKKyNkZWZpbmUgICAgIEdFTjExX1BDT0RFX1JFSkVDVEVECQkweDExCiAjZGVm
aW5lICAgICBHRU43X1BDT0RFX01JTl9GUkVRX1RBQkxFX0dUX1JBVElPX09VVF9PRl9SQU5HRSAw
eDEwCiAjZGVmaW5lICAgR0VONl9QQ09ERV9XUklURV9SQzZWSURTCQkweDQKICNkZWZpbmUgICBH
RU42X1BDT0RFX1JFQURfUkM2VklEUwkJMHg1CkBAIC04OTgyLDYgKzg5ODcsNyBAQCBlbnVtIHsK
ICNkZWZpbmUgICBJQ0xfUENPREVfTUVNX1NVQlNZU1lTVEVNX0lORk8JMHhkCiAjZGVmaW5lICAg
ICBJQ0xfUENPREVfTUVNX1NTX1JFQURfR0xPQkFMX0lORk8JKDB4MCA8PCA4KQogI2RlZmluZSAg
ICAgSUNMX1BDT0RFX01FTV9TU19SRUFEX1FHVl9QT0lOVF9JTkZPKHBvaW50KQkoKChwb2ludCkg
PDwgMTYpIHwgKDB4MSA8PCA4KSkKKyNkZWZpbmUgICBJQ0xfUENPREVfU0FHVl9ERV9NRU1fU1Nf
Q09ORklHCTB4ZQogI2RlZmluZSAgIEdFTjZfUENPREVfUkVBRF9EX0NPTVAJCTB4MTAKICNkZWZp
bmUgICBHRU42X1BDT0RFX1dSSVRFX0RfQ09NUAkJMHgxMQogI2RlZmluZSAgIEhTV19QQ09ERV9E
RV9XUklURV9GUkVRX1JFUQkJMHgxNwpAQCAtODk5NCw2ICs5MDAwLDggQEAgZW51bSB7CiAjZGVm
aW5lICAgICBHRU45X1NBR1ZfSVNfRElTQUJMRUQJCTB4MQogI2RlZmluZSAgICAgR0VOOV9TQUdW
X0VOQUJMRQkJCTB4MwogI2RlZmluZSBHRU4xMl9QQ09ERV9SRUFEX1NBR1ZfQkxPQ0tfVElNRV9V
UwkweDIzCisjZGVmaW5lIEdFTjExX1BDT0RFX1BPSU5UU19SRVNUUklDVEVECQkweDAKKyNkZWZp
bmUgR0VOMTFfUENPREVfUE9JTlRTX1JFU1RSSUNURURfTUFTSwkweDEKICNkZWZpbmUgR0VONl9Q
Q09ERV9EQVRBCQkJCV9NTUlPKDB4MTM4MTI4KQogI2RlZmluZSAgIEdFTjZfUENPREVfRlJFUV9J
QV9SQVRJT19TSElGVAk4CiAjZGVmaW5lICAgR0VONl9QQ09ERV9GUkVRX1JJTkdfUkFUSU9fU0hJ
RlQJMTYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4IGM3OTJkZDE2ODc0Mi4uMTA4MTZmM2Uy
OWYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAgLTM2MTcsMTMgKzM2MTcsOSBAQCBzdGF0
aWMgYm9vbCBza2xfbmVlZHNfbWVtb3J5X2J3X3dhKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAlyZXR1cm4gSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSVNfQlJPWFRPTihkZXZf
cHJpdik7CiB9CiAKLXN0YXRpYyBib29sCitib29sCiBpbnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JLyogSEFDSyEgKi8KLQlpZiAoSVNfR0VOKGRl
dl9wcml2LCAxMikpCi0JCXJldHVybiBmYWxzZTsKLQogCXJldHVybiAoSVNfR0VOOV9CQyhkZXZf
cHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMCkgJiYKIAkJZGV2X3ByaXYtPnNhZ3Zf
c3RhdHVzICE9IEk5MTVfU0FHVl9OT1RfQ09OVFJPTExFRDsKIH0KQEAgLTM4MzksNyArMzgzNSw3
IEBAIHN0YXRpYyB2b2lkIGljbF9zZXRfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3Rh
dGUgKnN0YXRlKQogCQlpZiAoZmxhZ3MgJiBEUk1fTU9ERV9GTEFHX0lOVEVSTEFDRSkKIAkJCWNv
bnRpbnVlOwogCi0JCWlmICghbmV3X2NydGNfc3RhdGUtPmJhc2UuYWN0aXZlKQorCQlpZiAoIW5l
d19jcnRjX3N0YXRlLT5ody5lbmFibGUpCiAJCQljb250aW51ZTsKIAogCQljYW5fc2FndiA9IHRy
dWU7CkBAIC0zODg2LDYgKzM4ODIsOSBAQCBib29sIGludGVsX2Nhbl9lbmFibGVfc2FndihzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAllbHNlCiAJCXNrbF9zZXRfc2Fndl9tYXNr
KHN0YXRlKTsKIAorCURSTV9ERUJVR19LTVMoIkNydGMgc2FndiBtYXNrcywgc3RhdGUgJXggZ2xv
YmFsIHN0YXRlICV4XG4iLAorCQkgICAgICBzdGF0ZS0+Y3J0Y19zYWd2X21hc2ssCisJCSAgICAg
IGRldl9wcml2LT5jcnRjX3NhZ3ZfbWFzayk7CiAJLyoKIAkgKiBGb3IgU0FHViB3ZSBuZWVkIHRv
IGFjY291bnQgYWxsIHRoZSBwaXBlcywKIAkgKiBub3Qgb25seSB0aGUgb25lcyB3aGljaCBhcmUg
aW4gc3RhdGUgY3VycmVudGx5LgpAQCAtNDM0MCw3ICs0MzM5LDcgQEAgc3RhdGljIGludAogdGds
X2NoZWNrX3BpcGVfZml0c19zYWd2X3dtKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAogCQkgICAgICBzdHJ1Y3Qgc2tsX2RkYl9hbGxvY2F0aW9uICpkZGIgLyogb3V0ICovKQog
ewotCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IGNydGNfc3RhdGUtPmJhc2UuY3J0YzsKKwlzdHJ1
Y3QgZHJtX2NydGMgKmNydGMgPSBjcnRjX3N0YXRlLT51YXBpLmNydGM7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwogCXN0cnVjdCBpbnRl
bF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsKIAlzdHJ1Y3Qgc2tsX2Rk
Yl9lbnRyeSAqYWxsb2MgPSAmY3J0Y19zdGF0ZS0+d20uc2tsLmRkYjsKQEAgLTQ4MzMsNyArNDgz
Miw2IEBAIHN0YXRpYyB2b2lkIHNrbF9jb21wdXRlX3BsYW5lX3dtKGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCSBzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1
bHQgLyogb3V0ICovKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOwotCXUzMiBsYXRlbmN5ID0gZGV2X3By
aXYtPndtLnNrbF9sYXRlbmN5W2xldmVsXTsKIAl1aW50X2ZpeGVkXzE2XzE2X3QgbWV0aG9kMSwg
bWV0aG9kMjsKIAl1aW50X2ZpeGVkXzE2XzE2X3Qgc2VsZWN0ZWRfcmVzdWx0OwogCXUzMiByZXNf
YmxvY2tzLCByZXNfbGluZXMsIG1pbl9kZGJfYWxsb2MgPSAwOwpAQCAtNTcwNyw2ICs1NzA1LDcg
QEAgc3RhdGljIHZvaWQgdGdsX3NldF9zYWd2X21hc2soc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUpCiAJCXJldCA9IHRnbF9jaGVja19waXBlX2ZpdHNfc2Fndl93bShuZXdfY3J0Y19z
dGF0ZSwgZGRiKTsKIAkJaWYgKCFyZXQpIHsKIAkJCWludCBwaXBlX2JpdCA9IEJJVChjcnRjLT5w
aXBlKTsKKwogCQkJc3RhdGUtPmNydGNfc2Fndl9tYXNrIHw9IHBpcGVfYml0OwogCQl9CiAJfQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3BtLmgKaW5kZXggYjU3OWM3MjRiOTE1Li41MzI3NTg2MDczMWEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfcG0uaApAQCAtNDMsNiArNDMsNyBAQCB2b2lkIHNrbF9waXBlX3dt
X2dldF9od19zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIHZvaWQgZzR4X3dtX3Nhbml0
aXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIHZsdl93bV9zYW5p
dGl6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogYm9vbCBpbnRlbF9jYW5f
ZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOworYm9vbCBpbnRl
bF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogaW50IGludGVs
X2VuYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBpbnQgaW50
ZWxfZGlzYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBib29s
IHNrbF93bV9sZXZlbF9lcXVhbHMoY29uc3Qgc3RydWN0IHNrbF93bV9sZXZlbCAqbDEsCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9zaWRlYmFuZC5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuYwppbmRleCBlMDZiMzViODQ0YTAuLmZmOWRiZWQw
OTRkOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9zaWRlYmFuZC5jCkBAIC0zNzEsNiArMzcx
LDI5IEBAIHN0YXRpYyBpbmxpbmUgaW50IGdlbjdfY2hlY2tfbWFpbGJveF9zdGF0dXModTMyIG1i
b3gpCiAJfQogfQogCitzdGF0aWMgaW5saW5lIGludCBnZW4xMV9jaGVja19tYWlsYm94X3N0YXR1
cyh1MzIgbWJveCkKK3sKKwlzd2l0Y2ggKG1ib3ggJiBHRU42X1BDT0RFX0VSUk9SX01BU0spIHsK
KwljYXNlIEdFTjZfUENPREVfU1VDQ0VTUzoKKwkJcmV0dXJuIDA7CisJY2FzZSBHRU42X1BDT0RF
X0lMTEVHQUxfQ01EOgorCQlyZXR1cm4gLUVOWElPOworCWNhc2UgR0VON19QQ09ERV9USU1FT1VU
OgorCQlyZXR1cm4gLUVUSU1FRE9VVDsKKwljYXNlIEdFTjdfUENPREVfSUxMRUdBTF9EQVRBOgor
CQlyZXR1cm4gLUVJTlZBTDsKKwljYXNlIEdFTjdfUENPREVfTUlOX0ZSRVFfVEFCTEVfR1RfUkFU
SU9fT1VUX09GX1JBTkdFOgorCQlyZXR1cm4gLUVPVkVSRkxPVzsKKwljYXNlIEdFTjExX1BDT0RF
X01BSUxfQk9YX0xPQ0tFRDoKKwkJcmV0dXJuIC1FQUdBSU47CisJY2FzZSBHRU4xMV9QQ09ERV9S
RUpFQ1RFRDoKKwkJcmV0dXJuIC1FQUNDRVM7CisJZGVmYXVsdDoKKwkJTUlTU0lOR19DQVNFKG1i
b3ggJiBHRU42X1BDT0RFX0VSUk9SX01BU0spOworCQlyZXR1cm4gMDsKKwl9Cit9CisKIHN0YXRp
YyBpbnQgX19zYW5keWJyaWRnZV9wY29kZV9ydyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKIAkJCQkgIHUzMiBtYm94LCB1MzIgKnZhbCwgdTMyICp2YWwxLAogCQkJCSAgaW50IGZhc3Rf
dGltZW91dF91cywKQEAgLTQwOCw3ICs0MzEsOSBAQCBzdGF0aWMgaW50IF9fc2FuZHlicmlkZ2Vf
cGNvZGVfcncoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJaWYgKGlzX3JlYWQgJiYg
dmFsMSkKIAkJKnZhbDEgPSBpbnRlbF91bmNvcmVfcmVhZF9mdyh1bmNvcmUsIEdFTjZfUENPREVf
REFUQTEpOwogCi0JaWYgKElOVEVMX0dFTihpOTE1KSA+IDYpCisJaWYgKElOVEVMX0dFTihpOTE1
KSA+PSAxMSkKKwkJcmV0dXJuIGdlbjExX2NoZWNrX21haWxib3hfc3RhdHVzKG1ib3gpOworCWVs
c2UgaWYgKElOVEVMX0dFTihpOTE1KSA+IDYpCiAJCXJldHVybiBnZW43X2NoZWNrX21haWxib3hf
c3RhdHVzKG1ib3gpOwogCWVsc2UKIAkJcmV0dXJuIGdlbjZfY2hlY2tfbWFpbGJveF9zdGF0dXMo
bWJveCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9zaWRlYmFuZC5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuaAppbmRleCA3ZmI5NTc0NWE0
NDQuLjE0NjI3YWNlOTlhZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
c2lkZWJhbmQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9zaWRlYmFuZC5oCkBA
IC0xMzcsNSArMTM3LDQgQEAgaW50IHNhbmR5YnJpZGdlX3Bjb2RlX3dyaXRlX3RpbWVvdXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHUzMiBtYm94LAogCiBpbnQgc2tsX3Bjb2RlX3Jl
cXVlc3Qoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHUzMiBtYm94LCB1MzIgcmVxdWVz
dCwKIAkJICAgICAgdTMyIHJlcGx5X21hc2ssIHUzMiByZXBseSwgaW50IHRpbWVvdXRfYmFzZV9t
cyk7Ci0KICNlbmRpZiAvKiBfSU5URUxfU0lERUJBTkRfSCAqLwotLSAKMi4xNy4xCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGlu
ZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

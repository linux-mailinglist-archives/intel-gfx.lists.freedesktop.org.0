Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8FB544BF52
	for <lists+intel-gfx@lfdr.de>; Wed, 19 Jun 2019 19:08:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D28CD6E451;
	Wed, 19 Jun 2019 17:08:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id EB5806E451
 for <intel-gfx@lists.freedesktop.org>; Wed, 19 Jun 2019 17:08:54 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 19 Jun 2019 10:08:54 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,393,1557212400"; d="scan'208";a="243371306"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga001.jf.intel.com with SMTP; 19 Jun 2019 10:08:52 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 19 Jun 2019 20:08:51 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 19 Jun 2019 20:08:41 +0300
Message-Id: <20190619170842.20579-4-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190619170842.20579-1-ville.syrjala@linux.intel.com>
References: <20190619170842.20579-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/4] drm/i915: Nuke drm_driver irq vfuncs
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClN0
b3AgdXNpbmcgdGhlIGlycSB2ZnVuY3MgdW5kZXIgZHJtX2RyaXZlci4gVGhhdCdzIG5vdCBnb2lu
ZyB0byBmbHkKaW4gYSBtaXhlZCBnZW4gZW52aXJvbm1lbnQgc2luY2UgdGhlIHN0cnVjdHVyZSBp
cyBzaGFyZWQgYmV0d2VlbiBhbGwKdGhlIGRldmljZXMuCgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBT
eXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogQ2hy
aXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9kcnYuYyB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEu
YyB8IDI4MCArKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tLQogMiBmaWxlcyBjaGFuZ2Vk
LCAxNDAgaW5zZXJ0aW9ucygrKSwgMTQyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5jCmluZGV4IGY2MmUzMzk3ZDkzNi4uZWE2YjA2MTA5ZDVhIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZHJ2LmMKQEAgLTc1NCw3ICs3NTQsNyBAQCBzdGF0aWMgaW50IGk5MTVfbG9hZF9tb2Rlc2V0X2lu
aXQoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIGNsZWFudXBfbW9kZXNldDoKIAlpbnRlbF9tb2Rl
c2V0X2NsZWFudXAoZGV2KTsKIGNsZWFudXBfaXJxOgotCWRybV9pcnFfdW5pbnN0YWxsKGRldik7
CisJaW50ZWxfaXJxX3VuaW5zdGFsbChkZXZfcHJpdik7CiAJaW50ZWxfZ21idXNfdGVhcmRvd24o
ZGV2X3ByaXYpOwogY2xlYW51cF9jc3I6CiAJaW50ZWxfY3NyX3Vjb2RlX2ZpbmkoZGV2X3ByaXYp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKaW5kZXggNGZiZThkOTA5NTBhLi5lOWUyOWVlZDgwMDUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYwpAQCAtMjE4Nyw4ICsyMTg3LDcgQEAgc3RhdGljIHZv
aWQgaTl4eF9ocGRfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LAogCiBzdGF0aWMgaXJxcmV0dXJuX3QgdmFsbGV5dmlld19pcnFfaGFuZGxlcihpbnQgaXJxLCB2
b2lkICphcmcpCiB7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGFyZzsKLQlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gYXJnOwogCWlycXJldHVybl90IHJldCA9IElSUV9OT05FOwog
CiAJaWYgKCFpbnRlbF9pcnFzX2VuYWJsZWQoZGV2X3ByaXYpKQpAQCAtMjI3Myw4ICsyMjcyLDcg
QEAgc3RhdGljIGlycXJldHVybl90IHZhbGxleXZpZXdfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9p
ZCAqYXJnKQogCiBzdGF0aWMgaXJxcmV0dXJuX3QgY2hlcnJ5dmlld19pcnFfaGFuZGxlcihpbnQg
aXJxLCB2b2lkICphcmcpCiB7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGFyZzsKLQlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gYXJnOwogCWlycXJldHVybl90IHJldCA9IElSUV9O
T05FOwogCiAJaWYgKCFpbnRlbF9pcnFzX2VuYWJsZWQoZGV2X3ByaXYpKQpAQCAtMjY5Myw4ICsy
NjkxLDcgQEAgc3RhdGljIHZvaWQgaXZiX2Rpc3BsYXlfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAogICovCiBzdGF0aWMgaXJxcmV0dXJuX3QgaXJvbmxha2Vf
aXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKQogewotCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYgPSBhcmc7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShk
ZXYpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGFyZzsKIAl1MzIgZGVf
aWlyLCBndF9paXIsIGRlX2llciwgc2RlX2llciA9IDA7CiAJaXJxcmV0dXJuX3QgcmV0ID0gSVJR
X05PTkU7CiAKQEAgLTMwMDQsNyArMzAwMSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBnZW44X21h
c3Rlcl9pbnRyX2VuYWJsZSh2b2lkIF9faW9tZW0gKiBjb25zdCByZWdzKQogCiBzdGF0aWMgaXJx
cmV0dXJuX3QgZ2VuOF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiB7Ci0Jc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShhcmcpOworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGFyZzsKIAl2b2lkIF9faW9tZW0gKiBjb25zdCByZWdz
ID0gZGV2X3ByaXYtPnVuY29yZS5yZWdzOwogCXUzMiBtYXN0ZXJfY3RsOwogCXUzMiBndF9paXJb
NF07CkBAIC0zMjAzLDcgKzMyMDAsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgZ2VuMTFfbWFzdGVy
X2ludHJfZW5hYmxlKHZvaWQgX19pb21lbSAqIGNvbnN0IHJlZ3MpCiAKIHN0YXRpYyBpcnFyZXR1
cm5fdCBnZW4xMV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiB7Ci0Jc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKiBjb25zdCBpOTE1ID0gdG9faTkxNShhcmcpOworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICogY29uc3QgaTkxNSA9IGFyZzsKIAl2b2lkIF9faW9tZW0gKiBjb25zdCBy
ZWdzID0gaTkxNS0+dW5jb3JlLnJlZ3M7CiAJdTMyIG1hc3Rlcl9jdGw7CiAJdTMyIGd1X21pc2Nf
aWlyOwpAQCAtMzQ1NywxMCArMzQ1NCw4IEBAIHN0YXRpYyB2b2lkIGlieF9pcnFfcmVzZXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogICoKICAqIFRoaXMgZnVuY3Rpb24gbmVl
ZHMgdG8gYmUgY2FsbGVkIGJlZm9yZSBpbnRlcnJ1cHRzIGFyZSBlbmFibGVkLgogICovCi1zdGF0
aWMgdm9pZCBpYnhfaXJxX3ByZV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQor
c3RhdGljIHZvaWQgaWJ4X2lycV9wcmVfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZGV2KTsKLQogCWlmIChIQVNfUENIX05PUChkZXZfcHJpdikpCiAJCXJldHVybjsKIApA
QCAtMzUyOSw5ICszNTI0LDggQEAgc3RhdGljIHZvaWQgdmx2X2Rpc3BsYXlfaXJxX3Bvc3RpbnN0
YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogLyogZHJtX2RtYS5oIGhv
b2tzCiAqLwotc3RhdGljIHZvaWQgaXJvbmxha2VfaXJxX3Jlc2V0KHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYpCitzdGF0aWMgdm9pZCBpcm9ubGFrZV9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYt
PnVuY29yZTsKIAogCUdFTjNfSVJRX1JFU0VUKHVuY29yZSwgREUpOwpAQCAtMzU0OCwxMCArMzU0
Miw4IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX2lycV9yZXNldChzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2KQogCWlieF9pcnFfcmVzZXQoZGV2X3ByaXYpOwogfQogCi1zdGF0aWMgdm9pZCB2YWxsZXl2
aWV3X2lycV9yZXNldChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZvaWQgdmFsbGV5
dmlld19pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKLQogCUk5MTVf
V1JJVEUoVkxWX01BU1RFUl9JRVIsIDApOwogCVBPU1RJTkdfUkVBRChWTFZfTUFTVEVSX0lFUik7
CiAKQEAgLTM1NzMsOSArMzU2NSw4IEBAIHN0YXRpYyB2b2lkIGdlbjhfZ3RfaXJxX3Jlc2V0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlHRU44X0lSUV9SRVNFVF9ORFgodW5j
b3JlLCBHVCwgMyk7CiB9CiAKLXN0YXRpYyB2b2lkIGdlbjhfaXJxX3Jlc2V0KHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYpCitzdGF0aWMgdm9pZCBnZW44X2lycV9yZXNldChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShkZXYpOwogCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZkZXZfcHJp
di0+dW5jb3JlOwogCWludCBwaXBlOwogCkBAIC0zNjE4LDkgKzM2MDksOCBAQCBzdGF0aWMgdm9p
ZCBnZW4xMV9ndF9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CUk5MTVfV1JJVEUoR0VOMTFfR1VDX1NHX0lOVFJfTUFTSywgIH4wKTsKIH0KIAotc3RhdGljIHZv
aWQgZ2VuMTFfaXJxX3Jlc2V0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCitzdGF0aWMgdm9pZCBn
ZW4xMV9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRldi0+ZGV2X3ByaXZhdGU7CiAJc3Ry
dWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJmRldl9wcml2LT51bmNvcmU7CiAJaW50IHBpcGU7
CiAKQEAgLTM2OTMsOSArMzY4Myw4IEBAIHZvaWQgZ2VuOF9pcnFfcG93ZXJfd2VsbF9wcmVfZGlz
YWJsZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJc3luY2hyb25pemVfaXJx
KGRldl9wcml2LT5kcm0uaXJxKTsKIH0KIAotc3RhdGljIHZvaWQgY2hlcnJ5dmlld19pcnFfcmVz
ZXQoc3RydWN0IGRybV9kZXZpY2UgKmRldikKK3N0YXRpYyB2b2lkIGNoZXJyeXZpZXdfaXJxX3Jl
c2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CiAJc3RydWN0IGludGVsX3VuY29y
ZSAqdW5jb3JlID0gJmRldl9wcml2LT51bmNvcmU7CiAKIAlJOTE1X1dSSVRFKEdFTjhfTUFTVEVS
X0lSUSwgMCk7CkBAIC0zOTYwLDkgKzM5NDksOCBAQCBzdGF0aWMgdm9pZCBieHRfaHBkX2lycV9z
ZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJX19ieHRfaHBkX2RldGVj
dGlvbl9zZXR1cChkZXZfcHJpdiwgZW5hYmxlZF9pcnFzKTsKIH0KIAotc3RhdGljIHZvaWQgaWJ4
X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZvaWQgaWJ4
X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCXUzMiBt
YXNrOwogCiAJaWYgKEhBU19QQ0hfTk9QKGRldl9wcml2KSkKQEAgLTM5ODUsOSArMzk3Myw4IEBA
IHN0YXRpYyB2b2lkIGlieF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRldikK
IAkJc3B0X2hwZF9kZXRlY3Rpb25fc2V0dXAoZGV2X3ByaXYpOwogfQogCi1zdGF0aWMgdm9pZCBn
ZW41X2d0X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZv
aWQgZ2VuNV9ndF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2
KTsKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYtPnVuY29yZTsKIAl1
MzIgcG1faXJxcywgZ3RfaXJxczsKIApAQCAtNDAyNCw5ICs0MDExLDggQEAgc3RhdGljIHZvaWQg
Z2VuNV9ndF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAl9CiB9CiAK
LXN0YXRpYyBpbnQgaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYpCitzdGF0aWMgdm9pZCBpcm9ubGFrZV9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3By
aXYtPnVuY29yZTsKIAl1MzIgZGlzcGxheV9tYXNrLCBleHRyYV9tYXNrOwogCkBAIC00MDUzLDE2
ICs0MDM5LDE2IEBAIHN0YXRpYyBpbnQgaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYpCiAKIAlkZXZfcHJpdi0+aXJxX21hc2sgPSB+ZGlzcGxheV9tYXNrOwog
Ci0JaWJ4X2lycV9wcmVfcG9zdGluc3RhbGwoZGV2KTsKKwlpYnhfaXJxX3ByZV9wb3N0aW5zdGFs
bChkZXZfcHJpdik7CiAKIAlHRU4zX0lSUV9JTklUKHVuY29yZSwgREUsIGRldl9wcml2LT5pcnFf
bWFzaywKIAkJICAgICAgZGlzcGxheV9tYXNrIHwgZXh0cmFfbWFzayk7CiAKLQlnZW41X2d0X2ly
cV9wb3N0aW5zdGFsbChkZXYpOworCWdlbjVfZ3RfaXJxX3Bvc3RpbnN0YWxsKGRldl9wcml2KTsK
IAogCWlsa19ocGRfZGV0ZWN0aW9uX3NldHVwKGRldl9wcml2KTsKIAotCWlieF9pcnFfcG9zdGlu
c3RhbGwoZGV2KTsKKwlpYnhfaXJxX3Bvc3RpbnN0YWxsKGRldl9wcml2KTsKIAogCWlmIChJU19J
Uk9OTEFLRV9NKGRldl9wcml2KSkgewogCQkvKiBFbmFibGUgUENVIGV2ZW50IGludGVycnVwdHMK
QEAgLTQwNzQsOCArNDA2MCw2IEBAIHN0YXRpYyBpbnQgaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxs
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCWlsa19lbmFibGVfZGlzcGxheV9pcnEoZGV2X3By
aXYsIERFX1BDVV9FVkVOVCk7CiAJCXNwaW5fdW5sb2NrX2lycSgmZGV2X3ByaXYtPmlycV9sb2Nr
KTsKIAl9Ci0KLQlyZXR1cm4gMDsKIH0KIAogdm9pZCB2YWxsZXl2aWV3X2VuYWJsZV9kaXNwbGF5
X2lycXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpAQCAtNDEwNywxMSArNDA5
MSw5IEBAIHZvaWQgdmFsbGV5dmlld19kaXNhYmxlX2Rpc3BsYXlfaXJxcyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB9CiAKIAotc3RhdGljIGludCB2YWxsZXl2aWV3X2lycV9w
b3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZvaWQgdmFsbGV5dmll
d19pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewot
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKLQotCWdl
bjVfZ3RfaXJxX3Bvc3RpbnN0YWxsKGRldik7CisJZ2VuNV9ndF9pcnFfcG9zdGluc3RhbGwoZGV2
X3ByaXYpOwogCiAJc3Bpbl9sb2NrX2lycSgmZGV2X3ByaXYtPmlycV9sb2NrKTsKIAlpZiAoZGV2
X3ByaXYtPmRpc3BsYXlfaXJxc19lbmFibGVkKQpAQCAtNDEyMCw4ICs0MTAyLDYgQEAgc3RhdGlj
IGludCB2YWxsZXl2aWV3X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQog
CiAJSTkxNV9XUklURShWTFZfTUFTVEVSX0lFUiwgTUFTVEVSX0lOVEVSUlVQVF9FTkFCTEUpOwog
CVBPU1RJTkdfUkVBRChWTFZfTUFTVEVSX0lFUik7Ci0KLQlyZXR1cm4gMDsKIH0KIAogc3RhdGlj
IHZvaWQgZ2VuOF9ndF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQpAQCAtNDIyOCwyMiArNDIwOCwxOCBAQCBzdGF0aWMgdm9pZCBnZW44X2RlX2lycV9w
b3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJfQogfQogCi1z
dGF0aWMgaW50IGdlbjhfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCitz
dGF0aWMgdm9pZCBnZW44X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShkZXYpOwotCiAJaWYgKEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKQotCQlpYnhfaXJxX3ByZV9w
b3N0aW5zdGFsbChkZXYpOworCQlpYnhfaXJxX3ByZV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CiAK
IAlnZW44X2d0X2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CiAJZ2VuOF9kZV9pcnFfcG9zdGlu
c3RhbGwoZGV2X3ByaXYpOwogCiAJaWYgKEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKQotCQlpYnhf
aXJxX3Bvc3RpbnN0YWxsKGRldik7CisJCWlieF9pcnFfcG9zdGluc3RhbGwoZGV2X3ByaXYpOwog
CiAJZ2VuOF9tYXN0ZXJfaW50cl9lbmFibGUoZGV2X3ByaXYtPnVuY29yZS5yZWdzKTsKLQotCXJl
dHVybiAwOwogfQogCiBzdGF0aWMgdm9pZCBnZW4xMV9ndF9pcnFfcG9zdGluc3RhbGwoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpAQCAtNDI3Nyw5ICs0MjUzLDggQEAgc3RhdGlj
IHZvaWQgZ2VuMTFfZ3RfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAlJOTE1X1dSSVRFKEdFTjExX0dVQ19TR19JTlRSX01BU0ssICB+MCk7CiB9CiAK
LXN0YXRpYyB2b2lkIGljcF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRldikK
K3N0YXRpYyB2b2lkIGljcF9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZGV2KTsKIAl1MzIgbWFzayA9IFNERV9HTUJVU19JQ1A7CiAKIAlXQVJOX09OKEk5MTVfUkVB
RChTREVJRVIpICE9IDApOwpAQCAtNDI5MiwxNCArNDI2NywxMyBAQCBzdGF0aWMgdm9pZCBpY3Bf
aXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJaWNwX2hwZF9kZXRlY3Rp
b25fc2V0dXAoZGV2X3ByaXYpOwogfQogCi1zdGF0aWMgaW50IGdlbjExX2lycV9wb3N0aW5zdGFs
bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZvaWQgZ2VuMTFfaXJxX3Bvc3RpbnN0
YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkZXYtPmRldl9wcml2YXRlOwogCXN0cnVjdCBpbnRlbF91
bmNvcmUgKnVuY29yZSA9ICZkZXZfcHJpdi0+dW5jb3JlOwogCXUzMiBndV9taXNjX21hc2tlZCA9
IEdFTjExX0dVX01JU0NfR1NFOwogCiAJaWYgKElOVEVMX1BDSF9UWVBFKGRldl9wcml2KSA+PSBQ
Q0hfSUNQKQotCQlpY3BfaXJxX3Bvc3RpbnN0YWxsKGRldik7CisJCWljcF9pcnFfcG9zdGluc3Rh
bGwoZGV2X3ByaXYpOwogCiAJZ2VuMTFfZ3RfaXJxX3Bvc3RpbnN0YWxsKGRldl9wcml2KTsKIAln
ZW44X2RlX2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CkBAIC00MzEwLDE0ICs0Mjg0LDEwIEBA
IHN0YXRpYyBpbnQgZ2VuMTFfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
CiAKIAlnZW4xMV9tYXN0ZXJfaW50cl9lbmFibGUoZGV2X3ByaXYtPnVuY29yZS5yZWdzKTsKIAlQ
T1NUSU5HX1JFQUQoR0VOMTFfR0ZYX01TVFJfSVJRKTsKLQotCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IGNoZXJyeXZpZXdfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
CitzdGF0aWMgdm9pZCBjaGVycnl2aWV3X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShkZXYpOwotCiAJZ2VuOF9ndF9pcnFfcG9zdGluc3RhbGwoZGV2X3ByaXYpOwog
CiAJc3Bpbl9sb2NrX2lycSgmZGV2X3ByaXYtPmlycV9sb2NrKTsKQEAgLTQzMjcsMTMgKzQyOTcs
MTAgQEAgc3RhdGljIGludCBjaGVycnl2aWV3X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2KQogCiAJSTkxNV9XUklURShHRU44X01BU1RFUl9JUlEsIEdFTjhfTUFTVEVSX0lS
UV9DT05UUk9MKTsKIAlQT1NUSU5HX1JFQUQoR0VOOF9NQVNURVJfSVJRKTsKLQotCXJldHVybiAw
OwogfQogCi1zdGF0aWMgdm9pZCBpOHh4X2lycV9yZXNldChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
KQorc3RhdGljIHZvaWQgaTh4eF9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYtPnVuY29yZTsK
IAogCWk5eHhfcGlwZXN0YXRfaXJxX3Jlc2V0KGRldl9wcml2KTsKQEAgLTQzNDEsOSArNDMwOCw4
IEBAIHN0YXRpYyB2b2lkIGk4eHhfaXJxX3Jlc2V0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJ
R0VOMl9JUlFfUkVTRVQodW5jb3JlKTsKIH0KIAotc3RhdGljIGludCBpOHh4X2lycV9wb3N0aW5z
dGFsbChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQorc3RhdGljIHZvaWQgaTh4eF9pcnFfcG9zdGlu
c3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfdW5j
b3JlICp1bmNvcmUgPSAmZGV2X3ByaXYtPnVuY29yZTsKIAl1MTYgZW5hYmxlX21hc2s7CiAKQEAg
LTQzNzIsOCArNDMzOCw2IEBAIHN0YXRpYyBpbnQgaTh4eF9pcnFfcG9zdGluc3RhbGwoc3RydWN0
IGRybV9kZXZpY2UgKmRldikKIAlpOTE1X2VuYWJsZV9waXBlc3RhdChkZXZfcHJpdiwgUElQRV9B
LCBQSVBFX0NSQ19ET05FX0lOVEVSUlVQVF9TVEFUVVMpOwogCWk5MTVfZW5hYmxlX3BpcGVzdGF0
KGRldl9wcml2LCBQSVBFX0IsIFBJUEVfQ1JDX0RPTkVfSU5URVJSVVBUX1NUQVRVUyk7CiAJc3Bp
bl91bmxvY2tfaXJxKCZkZXZfcHJpdi0+aXJxX2xvY2spOwotCi0JcmV0dXJuIDA7CiB9CiAKIHN0
YXRpYyB2b2lkIGk4eHhfZXJyb3JfaXJxX2FjayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKQEAgLTQ0NTQsOCArNDQxOCw3IEBAIHN0YXRpYyB2b2lkIGk5eHhfZXJyb3JfaXJxX2hhbmRs
ZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCiBzdGF0aWMgaXJxcmV0dXJu
X3QgaTh4eF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiB7Ci0Jc3RydWN0IGRybV9k
ZXZpY2UgKmRldiA9IGFyZzsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGRldik7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gYXJnOwog
CWlycXJldHVybl90IHJldCA9IElSUV9OT05FOwogCiAJaWYgKCFpbnRlbF9pcnFzX2VuYWJsZWQo
ZGV2X3ByaXYpKQpAQCAtNDQ5OCw5ICs0NDYxLDggQEAgc3RhdGljIGlycXJldHVybl90IGk4eHhf
aXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKQogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRp
YyB2b2lkIGk5MTVfaXJxX3Jlc2V0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCitzdGF0aWMgdm9p
ZCBpOTE1X2lycV9yZXNldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCXN0cnVj
dCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZkZXZfcHJpdi0+dW5jb3JlOwogCiAJaWYgKEk5MTVf
SEFTX0hPVFBMVUcoZGV2X3ByaXYpKSB7CkBAIC00NTEzLDkgKzQ0NzUsOCBAQCBzdGF0aWMgdm9p
ZCBpOTE1X2lycV9yZXNldChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCUdFTjNfSVJRX1JFU0VU
KHVuY29yZSwgR0VOMl8pOwogfQogCi1zdGF0aWMgaW50IGk5MTVfaXJxX3Bvc3RpbnN0YWxsKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYpCitzdGF0aWMgdm9pZCBpOTE1X2lycV9wb3N0aW5zdGFsbChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVu
Y29yZSA9ICZkZXZfcHJpdi0+dW5jb3JlOwogCXUzMiBlbmFibGVfbWFzazsKIApAQCAtNDU1Mywx
NCArNDUxNCwxMSBAQCBzdGF0aWMgaW50IGk5MTVfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYpCiAJc3Bpbl91bmxvY2tfaXJxKCZkZXZfcHJpdi0+aXJxX2xvY2spOwogCiAJ
aTkxNV9lbmFibGVfYXNsZV9waXBlc3RhdChkZXZfcHJpdik7Ci0KLQlyZXR1cm4gMDsKIH0KIAog
c3RhdGljIGlycXJldHVybl90IGk5MTVfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKQog
ewotCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBhcmc7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IGFyZzsKIAlpcnFyZXR1cm5fdCByZXQgPSBJUlFfTk9ORTsKIAogCWlmICghaW50
ZWxfaXJxc19lbmFibGVkKGRldl9wcml2KSkKQEAgLTQ2MTEsOSArNDU2OSw4IEBAIHN0YXRpYyBp
cnFyZXR1cm5fdCBpOTE1X2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIAlyZXR1cm4g
cmV0OwogfQogCi1zdGF0aWMgdm9pZCBpOTY1X2lycV9yZXNldChzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2KQorc3RhdGljIHZvaWQgaTk2NV9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYtPnVuY29y
ZTsKIAogCWk5MTVfaG90cGx1Z19pbnRlcnJ1cHRfdXBkYXRlKGRldl9wcml2LCAweGZmZmZmZmZm
LCAwKTsKQEAgLTQ2MjQsOSArNDU4MSw4IEBAIHN0YXRpYyB2b2lkIGk5NjVfaXJxX3Jlc2V0KHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJR0VOM19JUlFfUkVTRVQodW5jb3JlLCBHRU4yXyk7CiB9
CiAKLXN0YXRpYyBpbnQgaTk2NV9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9kZXZpY2UgKmRl
dikKK3N0YXRpYyB2b2lkIGk5NjVfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGRldik7CiAJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJmRldl9wcml2LT51
bmNvcmU7CiAJdTMyIGVuYWJsZV9tYXNrOwogCXUzMiBlcnJvcl9tYXNrOwpAQCAtNDY3Niw4ICs0
NjMyLDYgQEAgc3RhdGljIGludCBpOTY1X2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2KQogCXNwaW5fdW5sb2NrX2lycSgmZGV2X3ByaXYtPmlycV9sb2NrKTsKIAogCWk5MTVf
ZW5hYmxlX2FzbGVfcGlwZXN0YXQoZGV2X3ByaXYpOwotCi0JcmV0dXJuIDA7CiB9CiAKIHN0YXRp
YyB2b2lkIGk5MTVfaHBkX2lycV9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCkBAIC00NzA3LDggKzQ2NjEsNyBAQCBzdGF0aWMgdm9pZCBpOTE1X2hwZF9pcnFfc2V0dXAo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiBzdGF0aWMgaXJxcmV0dXJuX3Qg
aTk2NV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiB7Ci0Jc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IGFyZzsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KGRldik7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gYXJnOwogCWly
cXJldHVybl90IHJldCA9IElSUV9OT05FOwogCiAJaWYgKCFpbnRlbF9pcnFzX2VuYWJsZWQoZGV2
X3ByaXYpKQpAQCAtNDgzOSw2NSArNDc5MiwxOCBAQCB2b2lkIGludGVsX2lycV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlkZXYtPmRyaXZlci0+Z2V0X3ZibGFua190
aW1lc3RhbXAgPSBkcm1fY2FsY192Ymx0aW1lc3RhbXBfZnJvbV9zY2Fub3V0cG9zOwogCWRldi0+
ZHJpdmVyLT5nZXRfc2Nhbm91dF9wb3NpdGlvbiA9IGk5MTVfZ2V0X2NydGNfc2Nhbm91dHBvczsK
IAotCWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSkgewotCQlkZXYtPmRyaXZlci0+aXJxX2hh
bmRsZXIgPSBjaGVycnl2aWV3X2lycV9oYW5kbGVyOwotCQlkZXYtPmRyaXZlci0+aXJxX3ByZWlu
c3RhbGwgPSBjaGVycnl2aWV3X2lycV9yZXNldDsKLQkJZGV2LT5kcml2ZXItPmlycV9wb3N0aW5z
dGFsbCA9IGNoZXJyeXZpZXdfaXJxX3Bvc3RpbnN0YWxsOwotCQlkZXYtPmRyaXZlci0+aXJxX3Vu
aW5zdGFsbCA9IGNoZXJyeXZpZXdfaXJxX3Jlc2V0OwotCQlkZXZfcHJpdi0+ZGlzcGxheS5ocGRf
aXJxX3NldHVwID0gaTkxNV9ocGRfaXJxX3NldHVwOwotCX0gZWxzZSBpZiAoSVNfVkFMTEVZVklF
VyhkZXZfcHJpdikpIHsKLQkJZGV2LT5kcml2ZXItPmlycV9oYW5kbGVyID0gdmFsbGV5dmlld19p
cnFfaGFuZGxlcjsKLQkJZGV2LT5kcml2ZXItPmlycV9wcmVpbnN0YWxsID0gdmFsbGV5dmlld19p
cnFfcmVzZXQ7Ci0JCWRldi0+ZHJpdmVyLT5pcnFfcG9zdGluc3RhbGwgPSB2YWxsZXl2aWV3X2ly
cV9wb3N0aW5zdGFsbDsKLQkJZGV2LT5kcml2ZXItPmlycV91bmluc3RhbGwgPSB2YWxsZXl2aWV3
X2lycV9yZXNldDsKLQkJZGV2X3ByaXYtPmRpc3BsYXkuaHBkX2lycV9zZXR1cCA9IGk5MTVfaHBk
X2lycV9zZXR1cDsKLQl9IGVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpIHsKLQkJ
ZGV2LT5kcml2ZXItPmlycV9oYW5kbGVyID0gZ2VuMTFfaXJxX2hhbmRsZXI7Ci0JCWRldi0+ZHJp
dmVyLT5pcnFfcHJlaW5zdGFsbCA9IGdlbjExX2lycV9yZXNldDsKLQkJZGV2LT5kcml2ZXItPmly
cV9wb3N0aW5zdGFsbCA9IGdlbjExX2lycV9wb3N0aW5zdGFsbDsKLQkJZGV2LT5kcml2ZXItPmly
cV91bmluc3RhbGwgPSBnZW4xMV9pcnFfcmVzZXQ7Ci0JCWRldl9wcml2LT5kaXNwbGF5LmhwZF9p
cnFfc2V0dXAgPSBnZW4xMV9ocGRfaXJxX3NldHVwOwotCX0gZWxzZSBpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA+PSA4KSB7Ci0JCWRldi0+ZHJpdmVyLT5pcnFfaGFuZGxlciA9IGdlbjhfaXJxX2hh
bmRsZXI7Ci0JCWRldi0+ZHJpdmVyLT5pcnFfcHJlaW5zdGFsbCA9IGdlbjhfaXJxX3Jlc2V0Owot
CQlkZXYtPmRyaXZlci0+aXJxX3Bvc3RpbnN0YWxsID0gZ2VuOF9pcnFfcG9zdGluc3RhbGw7Ci0J
CWRldi0+ZHJpdmVyLT5pcnFfdW5pbnN0YWxsID0gZ2VuOF9pcnFfcmVzZXQ7Ci0JCWlmIChJU19H
RU45X0xQKGRldl9wcml2KSkKKwlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKSB7CisJCWlmIChJOTE1
X0hBU19IT1RQTFVHKGRldl9wcml2KSkKKwkJCWRldl9wcml2LT5kaXNwbGF5LmhwZF9pcnFfc2V0
dXAgPSBpOTE1X2hwZF9pcnFfc2V0dXA7CisJfSBlbHNlIHsKKwkJaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPj0gMTEpCisJCQlkZXZfcHJpdi0+ZGlzcGxheS5ocGRfaXJxX3NldHVwID0gZ2VuMTFf
aHBkX2lycV9zZXR1cDsKKwkJZWxzZSBpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpCiAJCQlkZXZf
cHJpdi0+ZGlzcGxheS5ocGRfaXJxX3NldHVwID0gYnh0X2hwZF9pcnFfc2V0dXA7CiAJCWVsc2Ug
aWYgKElOVEVMX1BDSF9UWVBFKGRldl9wcml2KSA+PSBQQ0hfU1BUKQogCQkJZGV2X3ByaXYtPmRp
c3BsYXkuaHBkX2lycV9zZXR1cCA9IHNwdF9ocGRfaXJxX3NldHVwOwogCQllbHNlCiAJCQlkZXZf
cHJpdi0+ZGlzcGxheS5ocGRfaXJxX3NldHVwID0gaWxrX2hwZF9pcnFfc2V0dXA7Ci0JfSBlbHNl
IGlmIChIQVNfUENIX1NQTElUKGRldl9wcml2KSkgewotCQlkZXYtPmRyaXZlci0+aXJxX2hhbmRs
ZXIgPSBpcm9ubGFrZV9pcnFfaGFuZGxlcjsKLQkJZGV2LT5kcml2ZXItPmlycV9wcmVpbnN0YWxs
ID0gaXJvbmxha2VfaXJxX3Jlc2V0OwotCQlkZXYtPmRyaXZlci0+aXJxX3Bvc3RpbnN0YWxsID0g
aXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxsOwotCQlkZXYtPmRyaXZlci0+aXJxX3VuaW5zdGFsbCA9
IGlyb25sYWtlX2lycV9yZXNldDsKLQkJZGV2X3ByaXYtPmRpc3BsYXkuaHBkX2lycV9zZXR1cCA9
IGlsa19ocGRfaXJxX3NldHVwOwotCX0gZWxzZSB7Ci0JCWlmIChJU19HRU4oZGV2X3ByaXYsIDIp
KSB7Ci0JCQlkZXYtPmRyaXZlci0+aXJxX3ByZWluc3RhbGwgPSBpOHh4X2lycV9yZXNldDsKLQkJ
CWRldi0+ZHJpdmVyLT5pcnFfcG9zdGluc3RhbGwgPSBpOHh4X2lycV9wb3N0aW5zdGFsbDsKLQkJ
CWRldi0+ZHJpdmVyLT5pcnFfaGFuZGxlciA9IGk4eHhfaXJxX2hhbmRsZXI7Ci0JCQlkZXYtPmRy
aXZlci0+aXJxX3VuaW5zdGFsbCA9IGk4eHhfaXJxX3Jlc2V0OwotCQl9IGVsc2UgaWYgKElTX0k5
NDVHTShkZXZfcHJpdikpIHsKLQkJCWRldi0+ZHJpdmVyLT5pcnFfcHJlaW5zdGFsbCA9IGk5MTVf
aXJxX3Jlc2V0OwotCQkJZGV2LT5kcml2ZXItPmlycV9wb3N0aW5zdGFsbCA9IGk5MTVfaXJxX3Bv
c3RpbnN0YWxsOwotCQkJZGV2LT5kcml2ZXItPmlycV91bmluc3RhbGwgPSBpOTE1X2lycV9yZXNl
dDsKLQkJCWRldi0+ZHJpdmVyLT5pcnFfaGFuZGxlciA9IGk5MTVfaXJxX2hhbmRsZXI7Ci0JCX0g
ZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCAzKSkgewotCQkJZGV2LT5kcml2ZXItPmlycV9wcmVp
bnN0YWxsID0gaTkxNV9pcnFfcmVzZXQ7Ci0JCQlkZXYtPmRyaXZlci0+aXJxX3Bvc3RpbnN0YWxs
ID0gaTkxNV9pcnFfcG9zdGluc3RhbGw7Ci0JCQlkZXYtPmRyaXZlci0+aXJxX3VuaW5zdGFsbCA9
IGk5MTVfaXJxX3Jlc2V0OwotCQkJZGV2LT5kcml2ZXItPmlycV9oYW5kbGVyID0gaTkxNV9pcnFf
aGFuZGxlcjsKLQkJfSBlbHNlIHsKLQkJCWRldi0+ZHJpdmVyLT5pcnFfcHJlaW5zdGFsbCA9IGk5
NjVfaXJxX3Jlc2V0OwotCQkJZGV2LT5kcml2ZXItPmlycV9wb3N0aW5zdGFsbCA9IGk5NjVfaXJx
X3Bvc3RpbnN0YWxsOwotCQkJZGV2LT5kcml2ZXItPmlycV91bmluc3RhbGwgPSBpOTY1X2lycV9y
ZXNldDsKLQkJCWRldi0+ZHJpdmVyLT5pcnFfaGFuZGxlciA9IGk5NjVfaXJxX2hhbmRsZXI7Ci0J
CX0KLQkJaWYgKEk5MTVfSEFTX0hPVFBMVUcoZGV2X3ByaXYpKQotCQkJZGV2X3ByaXYtPmRpc3Bs
YXkuaHBkX2lycV9zZXR1cCA9IGk5MTVfaHBkX2lycV9zZXR1cDsKIAl9CiB9CiAKQEAgLTQ5MTgs
NiArNDgyNCw3NSBAQCB2b2lkIGludGVsX2lycV9maW5pKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1KQogCQlrZnJlZShpOTE1LT5sM19wYXJpdHkucmVtYXBfaW5mb1tpXSk7CiB9CiAKK3N0
YXRpYyBpcnFfaGFuZGxlcl90IGludGVsX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKK3sKKwlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKSB7CisJCWlmIChJU19D
SEVSUllWSUVXKGRldl9wcml2KSkKKwkJCXJldHVybiBjaGVycnl2aWV3X2lycV9oYW5kbGVyOwor
CQllbHNlIGlmIChJU19WQUxMRVlWSUVXKGRldl9wcml2KSkKKwkJCXJldHVybiB2YWxsZXl2aWV3
X2lycV9oYW5kbGVyOworCQllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDQpKQorCQkJcmV0dXJu
IGk5NjVfaXJxX2hhbmRsZXI7CisJCWVsc2UgaWYgKElTX0dFTihkZXZfcHJpdiwgMykpCisJCQly
ZXR1cm4gaTkxNV9pcnFfaGFuZGxlcjsKKwkJZWxzZQorCQkJcmV0dXJuIGk4eHhfaXJxX2hhbmRs
ZXI7CisJfSBlbHNlIHsKKwkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCisJCQlyZXR1
cm4gZ2VuMTFfaXJxX2hhbmRsZXI7CisJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0g
OCkKKwkJCXJldHVybiBnZW44X2lycV9oYW5kbGVyOworCQllbHNlCisJCQlyZXR1cm4gaXJvbmxh
a2VfaXJxX2hhbmRsZXI7CisJfQorfQorCitzdGF0aWMgdm9pZCBpbnRlbF9pcnFfcmVzZXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQoreworCWlmIChIQVNfR01DSChkZXZfcHJp
dikpIHsKKwkJaWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQorCQkJY2hlcnJ5dmlld19pcnFf
cmVzZXQoZGV2X3ByaXYpOworCQllbHNlIGlmIChJU19WQUxMRVlWSUVXKGRldl9wcml2KSkKKwkJ
CXZhbGxleXZpZXdfaXJxX3Jlc2V0KGRldl9wcml2KTsKKwkJZWxzZSBpZiAoSVNfR0VOKGRldl9w
cml2LCA0KSkKKwkJCWk5NjVfaXJxX3Jlc2V0KGRldl9wcml2KTsKKwkJZWxzZSBpZiAoSVNfR0VO
KGRldl9wcml2LCAzKSkKKwkJCWk5MTVfaXJxX3Jlc2V0KGRldl9wcml2KTsKKwkJZWxzZQorCQkJ
aTh4eF9pcnFfcmVzZXQoZGV2X3ByaXYpOworCX0gZWxzZSB7CisJCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpID49IDExKQorCQkJZ2VuMTFfaXJxX3Jlc2V0KGRldl9wcml2KTsKKwkJZWxzZSBpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSA4KQorCQkJZ2VuOF9pcnFfcmVzZXQoZGV2X3ByaXYpOwor
CQllbHNlCisJCQlpcm9ubGFrZV9pcnFfcmVzZXQoZGV2X3ByaXYpOworCX0KK30KKworc3RhdGlj
IHZvaWQgaW50ZWxfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKK3sKKwlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKSB7CisJCWlmIChJU19DSEVSUllWSUVX
KGRldl9wcml2KSkKKwkJCWNoZXJyeXZpZXdfaXJxX3Bvc3RpbnN0YWxsKGRldl9wcml2KTsKKwkJ
ZWxzZSBpZiAoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikpCisJCQl2YWxsZXl2aWV3X2lycV9wb3N0
aW5zdGFsbChkZXZfcHJpdik7CisJCWVsc2UgaWYgKElTX0dFTihkZXZfcHJpdiwgNCkpCisJCQlp
OTY1X2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CisJCWVsc2UgaWYgKElTX0dFTihkZXZfcHJp
diwgMykpCisJCQlpOTE1X2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CisJCWVsc2UKKwkJCWk4
eHhfaXJxX3Bvc3RpbnN0YWxsKGRldl9wcml2KTsKKwl9IGVsc2UgeworCQlpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMSkKKwkJCWdlbjExX2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CisJ
CWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKKwkJCWdlbjhfaXJxX3Bvc3RpbnN0
YWxsKGRldl9wcml2KTsKKwkJZWxzZQorCQkJaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxsKGRldl9w
cml2KTsKKwl9Cit9CisKIC8qKgogICogaW50ZWxfaXJxX2luc3RhbGwgLSBlbmFibGVzIHRoZSBo
YXJkd2FyZSBpbnRlcnJ1cHQKICAqIEBkZXZfcHJpdjogaTkxNSBkZXZpY2UgaW5zdGFuY2UKQEAg
LTQ5MzEsNiArNDkwNiw5IEBAIHZvaWQgaW50ZWxfaXJxX2Zpbmkoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUpCiAgKi8KIGludCBpbnRlbF9pcnFfaW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiB7CisJaW50IGlycSA9IGRldl9wcml2LT5kcm0ucGRldi0+aXJx
OworCWludCByZXQ7CisKIAkvKgogCSAqIFdlIGVuYWJsZSBzb21lIGludGVycnVwdCBzb3VyY2Vz
IGluIG91ciBwb3N0aW5zdGFsbCBob29rcywgc28gbWFyawogCSAqIGludGVycnVwdHMgYXMgZW5h
YmxlZCBfYmVmb3JlXyBhY3R1YWxseSBlbmFibGluZyB0aGVtIHRvIGF2b2lkCkBAIC00OTM4LDcg
KzQ5MTYsMjAgQEAgaW50IGludGVsX2lycV9pbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdikKIAkgKi8KIAlkZXZfcHJpdi0+cnVudGltZV9wbS5pcnFzX2VuYWJsZWQgPSB0
cnVlOwogCi0JcmV0dXJuIGRybV9pcnFfaW5zdGFsbCgmZGV2X3ByaXYtPmRybSwgZGV2X3ByaXYt
PmRybS5wZGV2LT5pcnEpOworCWRldl9wcml2LT5kcm0uaXJxX2VuYWJsZWQgPSB0cnVlOworCisJ
aW50ZWxfaXJxX3Jlc2V0KGRldl9wcml2KTsKKworCXJldCA9IHJlcXVlc3RfaXJxKGlycSwgaW50
ZWxfaXJxX2hhbmRsZXIoZGV2X3ByaXYpLAorCQkJICBJUlFGX1NIQVJFRCwgRFJJVkVSX05BTUUs
IGRldl9wcml2KTsKKwlpZiAocmV0IDwgMCkgeworCQlkZXZfcHJpdi0+ZHJtLmlycV9lbmFibGVk
ID0gZmFsc2U7CisJCXJldHVybiByZXQ7CisJfQorCisJaW50ZWxfaXJxX3Bvc3RpbnN0YWxsKGRl
dl9wcml2KTsKKworCXJldHVybiByZXQ7CiB9CiAKIC8qKgpAQCAtNDk1MCw3ICs0OTQxLDE0IEBA
IGludCBpbnRlbF9pcnFfaW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiAgKi8KIHZvaWQgaW50ZWxfaXJxX3VuaW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiB7Ci0JZHJtX2lycV91bmluc3RhbGwoJmRldl9wcml2LT5kcm0pOworCWludCBp
cnEgPSBkZXZfcHJpdi0+ZHJtLnBkZXYtPmlycTsKKworCWRldl9wcml2LT5kcm0uaXJxX2VuYWJs
ZWQgPSBmYWxzZTsKKworCWludGVsX2lycV9yZXNldChkZXZfcHJpdik7CisKKwlmcmVlX2lycShp
cnEsIGRldl9wcml2KTsKKwogCWludGVsX2hwZF9jYW5jZWxfd29yayhkZXZfcHJpdik7CiAJZGV2
X3ByaXYtPnJ1bnRpbWVfcG0uaXJxc19lbmFibGVkID0gZmFsc2U7CiB9CkBAIC00OTY0LDcgKzQ5
NjIsNyBAQCB2b2lkIGludGVsX2lycV91bmluc3RhbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogICovCiB2b2lkIGludGVsX3J1bnRpbWVfcG1fZGlzYWJsZV9pbnRlcnJ1cHRz
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlkZXZfcHJpdi0+ZHJtLmRy
aXZlci0+aXJxX3VuaW5zdGFsbCgmZGV2X3ByaXYtPmRybSk7CisJaW50ZWxfaXJxX3Jlc2V0KGRl
dl9wcml2KTsKIAlkZXZfcHJpdi0+cnVudGltZV9wbS5pcnFzX2VuYWJsZWQgPSBmYWxzZTsKIAlz
eW5jaHJvbml6ZV9pcnEoZGV2X3ByaXYtPmRybS5pcnEpOwogfQpAQCAtNDk3OSw2ICs0OTc3LDYg
QEAgdm9pZCBpbnRlbF9ydW50aW1lX3BtX2Rpc2FibGVfaW50ZXJydXB0cyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB2b2lkIGludGVsX3J1bnRpbWVfcG1fZW5hYmxlX2ludGVy
cnVwdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCWRldl9wcml2LT5y
dW50aW1lX3BtLmlycXNfZW5hYmxlZCA9IHRydWU7Ci0JZGV2X3ByaXYtPmRybS5kcml2ZXItPmly
cV9wcmVpbnN0YWxsKCZkZXZfcHJpdi0+ZHJtKTsKLQlkZXZfcHJpdi0+ZHJtLmRyaXZlci0+aXJx
X3Bvc3RpbnN0YWxsKCZkZXZfcHJpdi0+ZHJtKTsKKwlpbnRlbF9pcnFfcmVzZXQoZGV2X3ByaXYp
OworCWludGVsX2lycV9wb3N0aW5zdGFsbChkZXZfcHJpdik7CiB9Ci0tIAoyLjIxLjAKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWls
aW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZy
ZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

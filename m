Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 489D074282
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Jul 2019 02:18:59 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BAAF96E40C;
	Thu, 25 Jul 2019 00:18:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 297096E40C
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 00:18:44 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 24 Jul 2019 17:18:44 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,304,1559545200"; d="scan'208";a="177816928"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by FMSMGA003.fm.intel.com with ESMTP; 24 Jul 2019 17:18:44 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 24 Jul 2019 17:18:13 -0700
Message-Id: <20190725001813.4740-9-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190725001813.4740-1-daniele.ceraolospurio@intel.com>
References: <20190725001813.4740-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 8/8] drm/i915/uc: Unify uC firmware upload
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIHdheSB3ZSBsb2FkIHRoZSBmaXJtd2FyZXMgaXMgdGhlIHNhbWUgZm9yIGJvdGggR3VDIGFu
ZCBIdUMsIHRoZSBvbmx5CmRpZmZlcmVuY2UgaXMgaW4gdGhlIHdvcGNtIGRlc3RpbmF0aW9uIGFk
ZHJlc3MgYW5kIHRoZSBkbWEgZmxhZ3MsIHNvIHdlCmVhc2lseSBjYW4gbW92ZSB0aGUgbG9naWMg
dG8gYSBjb21tb24gZnVuY3Rpb24gYW5kIHBhc3MgaW4gb2Zmc2V0IGFuZApmbGFncy4gVGhlIG9u
bHkgb3RoZXIgZGlmZmVyZW5jZSBpbiB0aGUgdXBsYW9kIHBhdGggYXJlIHNvbWUgdGhlIGV4dHJh
CnN0ZXBzIHRoYXQgZ3VjIGRvZXMgYmVmb3JlIGFuZCBhZnRlciB0aGUgeGZlciwgYnV0IHRob3Nl
IGRvbid0IHJlcXVpcmUKdGhlIGd1YyBmdyB0byBiZSBwaW5uZWQgaW4gZ2d0dCBhbmQgY2FuIHNh
ZmVseSBiZSBwZXJmb3JtZWQgYmVmb3JlCmNhbGxpbmcgdGhlIHVjX3VwbG9hZCBmdW5jdGlvbi4K
Ck5vdGUgdGhhdCB0aGlzIHBhdGNoIHJlLWludHJvZHVjZXMgdGhlIGRtYSB4ZmVyIHdhaXQgZm9y
IGd1YyBsb2FkaW5nIHRoYXQKd2FzIHJlbW92ZWQgd2l0aCAiZHJtL2k5MTUvZ3VjOiBQcm9wYWdh
dGUgdGhlIGZ3IHhmZXIgdGltZW91dCIuIFRoaXMgaXMKbm90IGdvaW5nIHRvIHNsb3cgdXMgZG93
biBvbiBhIHN1Y2Nlc3NmdWwgbG9hZCAodGhlIGRtYSBoYXMgdG8gY29tcGxldGUKYmVmb3JlIGZ3
IGluaXQgY2FuIHN0YXJ0KSwgYnV0IGNvdWxkIHNsaWdodGx5IGluY3JlYXNlIHRoZSB0aW1lb3V0
IGluIGNhc2UKb2YgYSBmdyBpbml0IGVycm9yLgoKdjI6IHVzZSBfZncgdmFyaWFudHMgZm9yIHVu
Y29yZSBhY2Nlc3NlcyAoQ2hyaXMpLCBmaXggZ3VjX2Z3IHN0YXR1cyBvbgogICAgZmFpbGVkIHdh
aXQuCgp2MzogdXNlIGRldl9lcnIgYW5kIHByaW50IERNQV9DVFJMIChDaHJpcykKClNpZ25lZC1v
ZmYtYnk6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRl
bC5jb20+CkNjOiBNaWNoYWwgV2FqZGVjemtvIDxtaWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4K
Q2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpSZXZpZXdlZC1ieTog
Q2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3LmMgfCAxMDcgKysrKysrLS0tLS0tLS0tLS0tLS0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfaHVjX2Z3LmMgfCAgNTcgKy0tLS0t
LS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jICB8ICA4MCAr
KysrKysrKysrKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5o
ICB8ICAgNCArLQogNCBmaWxlcyBjaGFuZ2VkLCA5MyBpbnNlcnRpb25zKCspLCAxNTUgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3Vj
X2Z3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZncuYwppbmRleCAz
ZWEwZGU2ZjRiNzMuLjI4NzM1YzE0YjlhMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMv
aW50ZWxfZ3VjX2Z3LmMKQEAgLTg0LDEzICs4NCw2IEBAIHN0YXRpYyB2b2lkIGd1Y194ZmVyX3Jz
YShzdHJ1Y3QgaW50ZWxfdWNfZncgKmd1Y19mdywKIAkJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29y
ZSwgVU9TX1JTQV9TQ1JBVENIKGkpLCByc2FbaV0pOwogfQogCi1zdGF0aWMgYm9vbCBndWNfeGZl
cl9jb21wbGV0ZWQoc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlLCB1MzIgKnN0YXR1cykKLXsK
LQkvKiBEaWQgd2UgY29tcGxldGUgdGhlIHhmZXI/ICovCi0JKnN0YXR1cyA9IGludGVsX3VuY29y
ZV9yZWFkKHVuY29yZSwgRE1BX0NUUkwpOwotCXJldHVybiAhKCpzdGF0dXMgJiBTVEFSVF9ETUEp
OwotfQotCiAvKgogICogUmVhZCB0aGUgR3VDIHN0YXR1cyByZWdpc3RlciAoR1VDX1NUQVRVUykg
YW5kIHN0b3JlIGl0IGluIHRoZQogICogc3BlY2lmaWVkIGxvY2F0aW9uOyB0aGVuIHJldHVybiBh
IGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyCkBAIC0xMzcsNjUgKzEzMCwyNyBAQCBzdGF0aWMg
aW50IGd1Y193YWl0X3Vjb2RlKHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSkKIAkJcmV0ID0g
LUVOWElPOwogCX0KIAotCWlmIChyZXQgPT0gMCAmJiAhZ3VjX3hmZXJfY29tcGxldGVkKHVuY29y
ZSwgJnN0YXR1cykpIHsKLQkJRFJNX0VSUk9SKCJHdUMgaXMgcmVhZHksIGJ1dCB0aGUgeGZlciAl
MDh4IGlzIGluY29tcGxldGVcbiIsCi0JCQkgIHN0YXR1cyk7Ci0JCXJldCA9IC1FTlhJTzsKLQl9
Ci0KIAlyZXR1cm4gcmV0OwogfQogCi0vKgotICogVHJhbnNmZXIgdGhlIGZpcm13YXJlIGltYWdl
IHRvIFJBTSBmb3IgZXhlY3V0aW9uIGJ5IHRoZSBtaWNyb2NvbnRyb2xsZXIuCisvKioKKyAqIGlu
dGVsX2d1Y19md191cGxvYWQoKSAtIGxvYWQgR3VDIHVDb2RlIHRvIGRldmljZQorICogQGd1Yzog
aW50ZWxfZ3VjIHN0cnVjdHVyZQogICoKLSAqIEFyY2hpdGVjdHVyYWxseSwgdGhlIERNQSBlbmdp
bmUgaXMgYmlkaXJlY3Rpb25hbCwgYW5kIGNhbiBwb3RlbnRpYWxseSBldmVuCi0gKiB0cmFuc2Zl
ciBiZXR3ZWVuIEdUVCBsb2NhdGlvbnMuIFRoaXMgZnVuY3Rpb25hbGl0eSBpcyBsZWZ0IG91dCBv
ZiB0aGUgQVBJCi0gKiBmb3Igbm93IGFzIHRoZXJlIGlzIG5vIG5lZWQgZm9yIGl0LgotICovCi1z
dGF0aWMgaW50IGd1Y194ZmVyX3Vjb2RlKHN0cnVjdCBpbnRlbF91Y19mdyAqZ3VjX2Z3LAotCQkJ
ICBzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9
IGd0LT51bmNvcmU7Ci0JdW5zaWduZWQgbG9uZyBvZmZzZXQ7Ci0KLQkvKgotCSAqIFRoZSBoZWFk
ZXIgcGx1cyB1Q29kZSB3aWxsIGJlIGNvcGllZCB0byBXT1BDTSB2aWEgRE1BLCBleGNsdWRpbmcg
YW55Ci0JICogb3RoZXIgY29tcG9uZW50cwotCSAqLwotCWludGVsX3VuY29yZV93cml0ZSh1bmNv
cmUsIERNQV9DT1BZX1NJWkUsCi0JCQkgICBndWNfZnctPmhlYWRlcl9zaXplICsgZ3VjX2Z3LT51
Y29kZV9zaXplKTsKLQotCS8qIFNldCB0aGUgc291cmNlIGFkZHJlc3MgZm9yIHRoZSBuZXcgYmxv
YiAqLwotCW9mZnNldCA9IGludGVsX3VjX2Z3X2dndHRfb2Zmc2V0KGd1Y19mdywgZ3QtPmdndHQp
ICsgZ3VjX2Z3LT5oZWFkZXJfb2Zmc2V0OwotCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERN
QV9BRERSXzBfTE9XLCBsb3dlcl8zMl9iaXRzKG9mZnNldCkpOwotCWludGVsX3VuY29yZV93cml0
ZSh1bmNvcmUsIERNQV9BRERSXzBfSElHSCwgdXBwZXJfMzJfYml0cyhvZmZzZXQpICYgMHhGRkZG
KTsKLQotCS8qCi0JICogU2V0IHRoZSBETUEgZGVzdGluYXRpb24uIEN1cnJlbnQgdUNvZGUgZXhw
ZWN0cyB0aGUgY29kZSB0byBiZQotCSAqIGxvYWRlZCBhdCA4azsgbG9jYXRpb25zIGJlbG93IHRo
aXMgYXJlIHVzZWQgZm9yIHRoZSBzdGFjay4KLQkgKi8KLQlpbnRlbF91bmNvcmVfd3JpdGUodW5j
b3JlLCBETUFfQUREUl8xX0xPVywgMHgyMDAwKTsKLQlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3Jl
LCBETUFfQUREUl8xX0hJR0gsIERNQV9BRERSRVNTX1NQQUNFX1dPUENNKTsKLQotCS8qIEZpbmFs
bHkgc3RhcnQgdGhlIERNQSAqLwotCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERNQV9DVFJM
LAotCQkJICAgX01BU0tFRF9CSVRfRU5BQkxFKFVPU19NT1ZFIHwgU1RBUlRfRE1BKSk7Ci0KLQly
ZXR1cm4gZ3VjX3dhaXRfdWNvZGUodW5jb3JlKTsKLX0KLS8qCi0gKiBMb2FkIHRoZSBHdUMgZmly
bXdhcmUgYmxvYiBpbnRvIHRoZSBNaW51dGVJQS4KKyAqIENhbGxlZCBmcm9tIGludGVsX3VjX2lu
aXRfaHcoKSBkdXJpbmcgZHJpdmVyIGxvYWQsIHJlc3VtZSBmcm9tIHNsZWVwIGFuZAorICogYWZ0
ZXIgYSBHUFUgcmVzZXQuCisgKgorICogVGhlIGZpcm13YXJlIGltYWdlIHNob3VsZCBoYXZlIGFs
cmVhZHkgYmVlbiBmZXRjaGVkIGludG8gbWVtb3J5LCBzbyBvbmx5CisgKiBjaGVjayB0aGF0IGZl
dGNoIHN1Y2NlZWRlZCwgYW5kIHRoZW4gdHJhbnNmZXIgdGhlIGltYWdlIHRvIHRoZSBoL3cuCisg
KgorICogUmV0dXJuOglub24temVybyBjb2RlIG9uIGVycm9yCiAgKi8KLXN0YXRpYyBpbnQgZ3Vj
X2Z3X3hmZXIoc3RydWN0IGludGVsX3VjX2Z3ICpndWNfZncsIHN0cnVjdCBpbnRlbF9ndCAqZ3Qp
CitpbnQgaW50ZWxfZ3VjX2Z3X3VwbG9hZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CisJc3Ry
dWN0IGludGVsX2d0ICpndCA9IGd1Y190b19ndChndWMpOwogCXN0cnVjdCBpbnRlbF91bmNvcmUg
KnVuY29yZSA9IGd0LT51bmNvcmU7CiAJaW50IHJldDsKIAotCUdFTV9CVUdfT04oZ3VjX2Z3LT50
eXBlICE9IElOVEVMX1VDX0ZXX1RZUEVfR1VDKTsKLQotCWludGVsX3VuY29yZV9mb3JjZXdha2Vf
Z2V0KHVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7Ci0KIAlndWNfcHJlcGFyZV94ZmVyKHVuY29yZSk7
CiAKIAkvKgpAQCAtMjAzLDMyICsxNTgsMjQgQEAgc3RhdGljIGludCBndWNfZndfeGZlcihzdHJ1
Y3QgaW50ZWxfdWNfZncgKmd1Y19mdywgc3RydWN0IGludGVsX2d0ICpndCkKIAkgKiBieSB0aGUg
RE1BIGVuZ2luZSBpbiBvbmUgb3BlcmF0aW9uLCB3aGVyZWFzIHRoZSBSU0Egc2lnbmF0dXJlIGlz
CiAJICogbG9hZGVkIHZpYSBNTUlPLgogCSAqLwotCWd1Y194ZmVyX3JzYShndWNfZncsIHVuY29y
ZSk7CisJZ3VjX3hmZXJfcnNhKCZndWMtPmZ3LCB1bmNvcmUpOwogCi0JcmV0ID0gZ3VjX3hmZXJf
dWNvZGUoZ3VjX2Z3LCBndCk7Ci0KLQlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1dCh1bmNvcmUs
IEZPUkNFV0FLRV9BTEwpOworCS8qCisJICogQ3VycmVudCB1Q29kZSBleHBlY3RzIHRoZSBjb2Rl
IHRvIGJlIGxvYWRlZCBhdCA4azsgbG9jYXRpb25zIGJlbG93CisJICogdGhpcyBhcmUgdXNlZCBm
b3IgdGhlIHN0YWNrLgorCSAqLworCXJldCA9IGludGVsX3VjX2Z3X3VwbG9hZCgmZ3VjLT5mdywg
Z3QsIDB4MjAwMCwgVU9TX01PVkUpOworCWlmIChyZXQpCisJCWdvdG8gb3V0OwogCi0JcmV0dXJu
IHJldDsKLX0KKwlyZXQgPSBndWNfd2FpdF91Y29kZSh1bmNvcmUpOworCWlmIChyZXQpCisJCWdv
dG8gb3V0OwogCi0vKioKLSAqIGludGVsX2d1Y19md191cGxvYWQoKSAtIGxvYWQgR3VDIHVDb2Rl
IHRvIGRldmljZQotICogQGd1YzogaW50ZWxfZ3VjIHN0cnVjdHVyZQotICoKLSAqIENhbGxlZCBm
cm9tIGludGVsX3VjX2luaXRfaHcoKSBkdXJpbmcgZHJpdmVyIGxvYWQsIHJlc3VtZSBmcm9tIHNs
ZWVwIGFuZAotICogYWZ0ZXIgYSBHUFUgcmVzZXQuCi0gKgotICogVGhlIGZpcm13YXJlIGltYWdl
IHNob3VsZCBoYXZlIGFscmVhZHkgYmVlbiBmZXRjaGVkIGludG8gbWVtb3J5LCBzbyBvbmx5Ci0g
KiBjaGVjayB0aGF0IGZldGNoIHN1Y2NlZWRlZCwgYW5kIHRoZW4gdHJhbnNmZXIgdGhlIGltYWdl
IHRvIHRoZSBoL3cuCi0gKgotICogUmV0dXJuOglub24temVybyBjb2RlIG9uIGVycm9yCi0gKi8K
LWludCBpbnRlbF9ndWNfZndfdXBsb2FkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKLXsKLQlpbnQg
cmV0ID0gaW50ZWxfdWNfZndfdXBsb2FkKCZndWMtPmZ3LCBndWNfdG9fZ3QoZ3VjKSwgZ3VjX2Z3
X3hmZXIpOwotCWlmICghcmV0KQotCQlndWMtPmZ3LnN0YXR1cyA9IElOVEVMX1VDX0ZJUk1XQVJF
X1JVTk5JTkc7CisJZ3VjLT5mdy5zdGF0dXMgPSBJTlRFTF9VQ19GSVJNV0FSRV9SVU5OSU5HOwor
CXJldHVybiAwOwogCitvdXQ6CisJZ3VjLT5mdy5zdGF0dXMgPSBJTlRFTF9VQ19GSVJNV0FSRV9G
QUlMOwogCXJldHVybiByZXQ7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9odWNfZncuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2h1
Y19mdy5jCmluZGV4IDJlN2FjODg2MzcyOC4uMGU4ODU4NTljODI4IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9odWNfZncuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF9odWNfZncuYwpAQCAtMzQsNjAgKzM0LDYgQEAgdm9pZCBpbnRl
bF9odWNfZndfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfaHVjICpodWMpCiAJaW50ZWxfdWNfZndf
aW5pdF9lYXJseSgmaHVjLT5mdywgSU5URUxfVUNfRldfVFlQRV9IVUMsIGh1Y190b19ndChodWMp
LT5pOTE1KTsKIH0KIAotLyoqCi0gKiBodWNfZndfeGZlcigpIC0gRE1BJ3MgdGhlIGZpcm13YXJl
Ci0gKiBAaHVjX2Z3OiB0aGUgZmlybXdhcmUgZGVzY3JpcHRvcgotICoKLSAqIFRyYW5zZmVyIHRo
ZSBmaXJtd2FyZSBpbWFnZSB0byBSQU0gZm9yIGV4ZWN1dGlvbiBieSB0aGUgbWljcm9jb250cm9s
bGVyLgotICoKLSAqIFJldHVybjogMCBvbiBzdWNjZXNzLCBub24temVybyBvbiBmYWlsdXJlCi0g
Ki8KLXN0YXRpYyBpbnQgaHVjX2Z3X3hmZXIoc3RydWN0IGludGVsX3VjX2Z3ICpodWNfZncsIHN0
cnVjdCBpbnRlbF9ndCAqZ3QpCi17Ci0Jc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3Qt
PnVuY29yZTsKLQl1bnNpZ25lZCBsb25nIG9mZnNldCA9IDA7Ci0JdTMyIHNpemU7Ci0JaW50IHJl
dDsKLQotCUdFTV9CVUdfT04oaHVjX2Z3LT50eXBlICE9IElOVEVMX1VDX0ZXX1RZUEVfSFVDKTsK
LQotCWludGVsX3VuY29yZV9mb3JjZXdha2VfZ2V0KHVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7Ci0K
LQkvKiBTZXQgdGhlIHNvdXJjZSBhZGRyZXNzIGZvciB0aGUgdUNvZGUgKi8KLQlvZmZzZXQgPSBp
bnRlbF91Y19md19nZ3R0X29mZnNldChodWNfZncsIGd0LT5nZ3R0KSArCi0JCSBodWNfZnctPmhl
YWRlcl9vZmZzZXQ7Ci0JaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgRE1BX0FERFJfMF9MT1cs
Ci0JCQkgICBsb3dlcl8zMl9iaXRzKG9mZnNldCkpOwotCWludGVsX3VuY29yZV93cml0ZSh1bmNv
cmUsIERNQV9BRERSXzBfSElHSCwKLQkJCSAgIHVwcGVyXzMyX2JpdHMob2Zmc2V0KSAmIDB4RkZG
Rik7Ci0KLQkvKgotCSAqIEhhcmR3YXJlIGRvZXNuJ3QgbG9vayBhdCBkZXN0aW5hdGlvbiBhZGRy
ZXNzIGZvciBIdUMuIFNldCBpdCB0byAwLAotCSAqIGJ1dCBzdGlsbCBwcm9ncmFtIHRoZSBjb3Jy
ZWN0IGFkZHJlc3Mgc3BhY2UuCi0JICovCi0JaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgRE1B
X0FERFJfMV9MT1csIDApOwotCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERNQV9BRERSXzFf
SElHSCwgRE1BX0FERFJFU1NfU1BBQ0VfV09QQ00pOwotCi0Jc2l6ZSA9IGh1Y19mdy0+aGVhZGVy
X3NpemUgKyBodWNfZnctPnVjb2RlX3NpemU7Ci0JaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwg
RE1BX0NPUFlfU0laRSwgc2l6ZSk7Ci0KLQkvKiBTdGFydCB0aGUgRE1BICovCi0JaW50ZWxfdW5j
b3JlX3dyaXRlKHVuY29yZSwgRE1BX0NUUkwsCi0JCQkgICBfTUFTS0VEX0JJVF9FTkFCTEUoSFVD
X1VLRVJORUwgfCBTVEFSVF9ETUEpKTsKLQotCS8qIFdhaXQgZm9yIERNQSB0byBmaW5pc2ggKi8K
LQlyZXQgPSBpbnRlbF93YWl0X2Zvcl9yZWdpc3Rlcl9mdyh1bmNvcmUsIERNQV9DVFJMLCBTVEFS
VF9ETUEsIDAsIDEwMCk7Ci0KLQlEUk1fREVCVUdfRFJJVkVSKCJIdUMgRE1BIHRyYW5zZmVyIHdh
aXQgb3ZlciB3aXRoIHJldCAlZFxuIiwgcmV0KTsKLQotCS8qIERpc2FibGUgdGhlIGJpdHMgb25j
ZSBETUEgaXMgb3ZlciAqLwotCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERNQV9DVFJMLCBf
TUFTS0VEX0JJVF9ESVNBQkxFKEhVQ19VS0VSTkVMKSk7Ci0KLQlpbnRlbF91bmNvcmVfZm9yY2V3
YWtlX3B1dCh1bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCi0JcmV0dXJuIHJldDsKLX0KLQogLyoq
CiAgKiBpbnRlbF9odWNfZndfdXBsb2FkKCkgLSBsb2FkIEh1QyB1Q29kZSB0byBkZXZpY2UKICAq
IEBodWM6IGludGVsX2h1YyBzdHJ1Y3R1cmUKQEAgLTEwMiw1ICs0OCw2IEBAIHN0YXRpYyBpbnQg
aHVjX2Z3X3hmZXIoc3RydWN0IGludGVsX3VjX2Z3ICpodWNfZncsIHN0cnVjdCBpbnRlbF9ndCAq
Z3QpCiAgKi8KIGludCBpbnRlbF9odWNfZndfdXBsb2FkKHN0cnVjdCBpbnRlbF9odWMgKmh1YykK
IHsKLQlyZXR1cm4gaW50ZWxfdWNfZndfdXBsb2FkKCZodWMtPmZ3LCBodWNfdG9fZ3QoaHVjKSwg
aHVjX2Z3X3hmZXIpOworCS8qIEhXIGRvZXNuJ3QgbG9vayBhdCBkZXN0aW5hdGlvbiBhZGRyZXNz
IGZvciBIdUMsIHNvIHNldCBpdCB0byAwICovCisJcmV0dXJuIGludGVsX3VjX2Z3X3VwbG9hZCgm
aHVjLT5mdywgaHVjX3RvX2d0KGh1YyksIDAsIEhVQ19VS0VSTkVMKTsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jCmluZGV4IDhkMDk5ZGFjMDIyNC4uNzg5YjNkNzIy
OGE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmMKQEAgLTMyMSwx
MyArMzIxLDI0IEBAIHZvaWQgaW50ZWxfdWNfZndfZmV0Y2goc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAogCXJlbGVhc2VfZmlybXdhcmUoZncpOwkJLyogT0sgZXZlbiBpZiBmdyBp
cyBOVUxMICovCiB9CiAKK3N0YXRpYyB1MzIgdWNfZndfZ2d0dF9vZmZzZXQoc3RydWN0IGludGVs
X3VjX2Z3ICp1Y19mdywgc3RydWN0IGk5MTVfZ2d0dCAqZ2d0dCkKK3sKKwlzdHJ1Y3QgZHJtX21t
X25vZGUgKm5vZGUgPSAmZ2d0dC0+dWNfZnc7CisKKwlHRU1fQlVHX09OKCFub2RlLT5hbGxvY2F0
ZWQpOworCUdFTV9CVUdfT04odXBwZXJfMzJfYml0cyhub2RlLT5zdGFydCkpOworCUdFTV9CVUdf
T04odXBwZXJfMzJfYml0cyhub2RlLT5zdGFydCArIG5vZGUtPnNpemUgLSAxKSk7CisKKwlyZXR1
cm4gbG93ZXJfMzJfYml0cyhub2RlLT5zdGFydCk7Cit9CisKIHN0YXRpYyB2b2lkIGludGVsX3Vj
X2Z3X2dndHRfYmluZChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LAogCQkJCSAgc3RydWN0IGlu
dGVsX2d0ICpndCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdWNfZnct
Pm9iajsKIAlzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0ID0gZ3QtPmdndHQ7CiAJc3RydWN0IGk5MTVf
dm1hIGR1bW15ID0gewotCQkubm9kZS5zdGFydCA9IGludGVsX3VjX2Z3X2dndHRfb2Zmc2V0KHVj
X2Z3LCBnZ3R0KSwKKwkJLm5vZGUuc3RhcnQgPSB1Y19md19nZ3R0X29mZnNldCh1Y19mdywgZ2d0
dCksCiAJCS5ub2RlLnNpemUgPSBvYmotPmJhc2Uuc2l6ZSwKIAkJLnBhZ2VzID0gb2JqLT5tbS5w
YWdlcywKIAkJLnZtID0gJmdndHQtPnZtLApAQCAtMzQ3LDIzICszNTgsNjkgQEAgc3RhdGljIHZv
aWQgaW50ZWxfdWNfZndfZ2d0dF91bmJpbmQoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywKIHsK
IAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdWNfZnctPm9iajsKIAlzdHJ1Y3Qg
aTkxNV9nZ3R0ICpnZ3R0ID0gZ3QtPmdndHQ7Ci0JdTY0IHN0YXJ0ID0gaW50ZWxfdWNfZndfZ2d0
dF9vZmZzZXQodWNfZncsIGdndHQpOworCXU2NCBzdGFydCA9IHVjX2Z3X2dndHRfb2Zmc2V0KHVj
X2Z3LCBnZ3R0KTsKIAogCWdndHQtPnZtLmNsZWFyX3JhbmdlKCZnZ3R0LT52bSwgc3RhcnQsIG9i
ai0+YmFzZS5zaXplKTsKIH0KIAorc3RhdGljIGludCB1Y19md194ZmVyKHN0cnVjdCBpbnRlbF91
Y19mdyAqdWNfZncsIHN0cnVjdCBpbnRlbF9ndCAqZ3QsCisJCSAgICAgIHUzMiB3b3BjbV9vZmZz
ZXQsIHUzMiBkbWFfZmxhZ3MpCit7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3Qt
PnVuY29yZTsKKwl1NjQgb2Zmc2V0OworCWludCByZXQ7CisKKwlpbnRlbF91bmNvcmVfZm9yY2V3
YWtlX2dldCh1bmNvcmUsIEZPUkNFV0FLRV9BTEwpOworCisJLyogU2V0IHRoZSBzb3VyY2UgYWRk
cmVzcyBmb3IgdGhlIHVDb2RlICovCisJb2Zmc2V0ID0gdWNfZndfZ2d0dF9vZmZzZXQodWNfZncs
IGd0LT5nZ3R0KSArIHVjX2Z3LT5oZWFkZXJfb2Zmc2V0OworCUdFTV9CVUdfT04odXBwZXJfMzJf
Yml0cyhvZmZzZXQpICYgMHhGRkZGMDAwMCk7CisJaW50ZWxfdW5jb3JlX3dyaXRlX2Z3KHVuY29y
ZSwgRE1BX0FERFJfMF9MT1csIGxvd2VyXzMyX2JpdHMob2Zmc2V0KSk7CisJaW50ZWxfdW5jb3Jl
X3dyaXRlX2Z3KHVuY29yZSwgRE1BX0FERFJfMF9ISUdILCB1cHBlcl8zMl9iaXRzKG9mZnNldCkp
OworCisJLyogU2V0IHRoZSBETUEgZGVzdGluYXRpb24gKi8KKwlpbnRlbF91bmNvcmVfd3JpdGVf
ZncodW5jb3JlLCBETUFfQUREUl8xX0xPVywgd29wY21fb2Zmc2V0KTsKKwlpbnRlbF91bmNvcmVf
d3JpdGVfZncodW5jb3JlLCBETUFfQUREUl8xX0hJR0gsIERNQV9BRERSRVNTX1NQQUNFX1dPUENN
KTsKKworCS8qCisJICogU2V0IHRoZSB0cmFuc2ZlciBzaXplLiBUaGUgaGVhZGVyIHBsdXMgdUNv
ZGUgd2lsbCBiZSBjb3BpZWQgdG8gV09QQ00KKwkgKiB2aWEgRE1BLCBleGNsdWRpbmcgYW55IG90
aGVyIGNvbXBvbmVudHMKKwkgKi8KKwlpbnRlbF91bmNvcmVfd3JpdGVfZncodW5jb3JlLCBETUFf
Q09QWV9TSVpFLAorCQkJICAgICAgdWNfZnctPmhlYWRlcl9zaXplICsgdWNfZnctPnVjb2RlX3Np
emUpOworCisJLyogU3RhcnQgdGhlIERNQSAqLworCWludGVsX3VuY29yZV93cml0ZV9mdyh1bmNv
cmUsIERNQV9DVFJMLAorCQkJICAgICAgX01BU0tFRF9CSVRfRU5BQkxFKGRtYV9mbGFncyB8IFNU
QVJUX0RNQSkpOworCisJLyogV2FpdCBmb3IgRE1BIHRvIGZpbmlzaCAqLworCXJldCA9IGludGVs
X3dhaXRfZm9yX3JlZ2lzdGVyX2Z3KHVuY29yZSwgRE1BX0NUUkwsIFNUQVJUX0RNQSwgMCwgMTAw
KTsKKwlpZiAocmV0KQorCQlkZXZfZXJyKGd0LT5pOTE1LT5kcm0uZGV2LCAiRE1BIGZvciAlcyBm
dyBmYWlsZWQsIERNQV9DVFJMPSV1XG4iLAorCQkJaW50ZWxfdWNfZndfdHlwZV9yZXByKHVjX2Z3
LT50eXBlKSwKKwkJCWludGVsX3VuY29yZV9yZWFkX2Z3KHVuY29yZSwgRE1BX0NUUkwpKTsKKwor
CS8qIERpc2FibGUgdGhlIGJpdHMgb25jZSBETUEgaXMgb3ZlciAqLworCWludGVsX3VuY29yZV93
cml0ZV9mdyh1bmNvcmUsIERNQV9DVFJMLCBfTUFTS0VEX0JJVF9ESVNBQkxFKGRtYV9mbGFncykp
OworCisJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsK
KworCXJldHVybiByZXQ7Cit9CisKIC8qKgogICogaW50ZWxfdWNfZndfdXBsb2FkIC0gbG9hZCB1
QyBmaXJtd2FyZSB1c2luZyBjdXN0b20gbG9hZGVyCiAgKiBAdWNfZnc6IHVDIGZpcm13YXJlCiAg
KiBAZ3Q6IHRoZSBpbnRlbF9ndCBzdHJ1Y3R1cmUKLSAqIEB4ZmVyOiBjdXN0b20gdUMgZmlybXdh
cmUgbG9hZGVyIGZ1bmN0aW9uCisgKiBAd29wY21fb2Zmc2V0OiBkZXN0aW5hdGlvbiBvZmZzZXQg
aW4gd29wY20KKyAqIEBkbWFfZmxhZ3M6IGZsYWdzIGZvciBmbGFncyBmb3IgZG1hIGN0cmwKICAq
Ci0gKiBMb2FkcyB1QyBmaXJtd2FyZSB1c2luZyBjdXN0b20gbG9hZGVyIGFuZCB1cGRhdGVzIGlu
dGVybmFsIGZsYWdzLgorICogTG9hZHMgdUMgZmlybXdhcmUgYW5kIHVwZGF0ZXMgaW50ZXJuYWwg
ZmxhZ3MuCiAgKgogICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIG5vbi16ZXJvIG9uIGZhaWx1cmUu
CiAgKi8KIGludCBpbnRlbF91Y19md191cGxvYWQoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywg
c3RydWN0IGludGVsX2d0ICpndCwKLQkJICAgICAgIGludCAoKnhmZXIpKHN0cnVjdCBpbnRlbF91
Y19mdyAqdWNfZncsIHN0cnVjdCBpbnRlbF9ndCAqZ3QpKQorCQkgICAgICAgdTMyIHdvcGNtX29m
ZnNldCwgdTMyIGRtYV9mbGFncykKIHsKIAlpbnQgZXJyOwogCkBAIC0zNzcsNyArNDM0LDcgQEAg
aW50IGludGVsX3VjX2Z3X3VwbG9hZChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0LAogCQlyZXR1cm4gLUVOT0VYRUM7CiAJLyogQ2FsbCBjdXN0b20gbG9hZGVy
ICovCiAJaW50ZWxfdWNfZndfZ2d0dF9iaW5kKHVjX2Z3LCBndCk7Ci0JZXJyID0geGZlcih1Y19m
dywgZ3QpOworCWVyciA9IHVjX2Z3X3hmZXIodWNfZncsIGd0LCB3b3BjbV9vZmZzZXQsIGRtYV9m
bGFncyk7CiAJaW50ZWxfdWNfZndfZ2d0dF91bmJpbmQodWNfZncsIGd0KTsKIAlpZiAoZXJyKQog
CQlnb3RvIGZhaWw7CkBAIC00MzAsMTcgKzQ4Nyw2IEBAIHZvaWQgaW50ZWxfdWNfZndfZmluaShz
dHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KQogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyh1
Y19mdy0+b2JqKTsKIH0KIAotdTMyIGludGVsX3VjX2Z3X2dndHRfb2Zmc2V0KHN0cnVjdCBpbnRl
bF91Y19mdyAqdWNfZncsIHN0cnVjdCBpOTE1X2dndHQgKmdndHQpCi17Ci0Jc3RydWN0IGRybV9t
bV9ub2RlICpub2RlID0gJmdndHQtPnVjX2Z3OwotCi0JR0VNX0JVR19PTighbm9kZS0+YWxsb2Nh
dGVkKTsKLQlHRU1fQlVHX09OKHVwcGVyXzMyX2JpdHMobm9kZS0+c3RhcnQpKTsKLQlHRU1fQlVH
X09OKHVwcGVyXzMyX2JpdHMobm9kZS0+c3RhcnQgKyBub2RlLT5zaXplIC0gMSkpOwotCi0JcmV0
dXJuIGxvd2VyXzMyX2JpdHMobm9kZS0+c3RhcnQpOwotfQotCiAvKioKICAqIGludGVsX3VjX2Z3
X2NsZWFudXBfZmV0Y2ggLSBjbGVhbnVwIHVDIGZpcm13YXJlCiAgKgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgKaW5kZXggYTY5YjZmMDBmZTE2Li5mZjY4NGMwYzgwOGUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaApAQCAtMzEsNyArMzEs
NiBAQAogc3RydWN0IGRybV9wcmludGVyOwogc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CiBzdHJ1
Y3QgaW50ZWxfZ3Q7Ci1zdHJ1Y3QgaTkxNV9nZ3R0OwogCiAvKiBIb21lIG9mIEd1QywgSHVDIGFu
ZCBETUMgZmlybXdhcmVzICovCiAjZGVmaW5lIElOVEVMX1VDX0ZJUk1XQVJFX1VSTCAiaHR0cHM6
Ly9naXQua2VybmVsLm9yZy9wdWIvc2NtL2xpbnV4L2tlcm5lbC9naXQvZmlybXdhcmUvbGludXgt
ZmlybXdhcmUuZ2l0L3RyZWUvaTkxNSIKQEAgLTE3NCwxMCArMTczLDkgQEAgdm9pZCBpbnRlbF91
Y19md19mZXRjaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkJICAgICAgIHN0cnVj
dCBpbnRlbF91Y19mdyAqdWNfZncpOwogdm9pZCBpbnRlbF91Y19md19jbGVhbnVwX2ZldGNoKHN0
cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpOwogaW50IGludGVsX3VjX2Z3X3VwbG9hZChzdHJ1Y3Qg
aW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAotCQkgICAgICAgaW50ICgq
eGZlcikoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywgc3RydWN0IGludGVsX2d0ICpndCkpOwor
CQkgICAgICAgdTMyIHdvcGNtX29mZnNldCwgdTMyIGRtYV9mbGFncyk7CiBpbnQgaW50ZWxfdWNf
ZndfaW5pdChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KTsKIHZvaWQgaW50ZWxfdWNfZndfZmlu
aShzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KTsKLXUzMiBpbnRlbF91Y19md19nZ3R0X29mZnNl
dChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0KTsKIHNp
emVfdCBpbnRlbF91Y19md19jb3B5X3JzYShzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCB2b2lk
ICpkc3QsIHUzMiBtYXhfbGVuKTsKIHZvaWQgaW50ZWxfdWNfZndfZHVtcChjb25zdCBzdHJ1Y3Qg
aW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOwogCi0tIAoyLjIyLjAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

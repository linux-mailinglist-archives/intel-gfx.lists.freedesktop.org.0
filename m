Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1E43EA4E47
	for <lists+intel-gfx@lfdr.de>; Mon,  2 Sep 2019 06:16:06 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 506ED89B95;
	Mon,  2 Sep 2019 04:16:02 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1924289B95;
 Mon,  2 Sep 2019 04:16:00 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18339103-1500050 
 for multiple; Mon, 02 Sep 2019 05:15:49 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  2 Sep 2019 05:15:46 +0100
Message-Id: <20190902041548.14919-4-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190902041548.14919-1-chris@chris-wilson.co.uk>
References: <20190902041548.14919-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 4/6] Add i915/gem_ctx_persistence
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2FuaXR5IHRlc3QgZXhpc3RpbmcgcGVyc2lzdGVuY2UgYW5kIG5ldyBleGNpdGluZyBub24tcGVy
c2lzdGVudCBjb250ZXh0CmJlaGF2aW91ci4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogSm9vbmFzIExhaHRpbmVuIDxqb29uYXMubGFo
dGluZW5AbGludXguaW50ZWwuY29tPgpDYzogTWljaGHFgiBXaW5pYXJza2kgPG1pY2hhbC53aW5p
YXJza2lAaW50ZWwuY29tPgpDYzogSm9uIEJsb29tZmllbGQgPGpvbi5ibG9vbWZpZWxkQGludGVs
LmNvbT4KLS0tCiBsaWIvaTkxNS9nZW1fY29udGV4dC5jICAgICAgICAgICB8ICAzNyArKysrCiBs
aWIvaTkxNS9nZW1fY29udGV4dC5oICAgICAgICAgICB8ICAgOSArCiBsaWIvaWd0X2R1bW15bG9h
ZC5jICAgICAgICAgICAgICB8ICAgMyArLQogbGliL2lvY3RsX3dyYXBwZXJzLmMgICAgICAgICAg
ICAgfCAgIDEgKwogdGVzdHMvTWFrZWZpbGUuc291cmNlcyAgICAgICAgICAgfCAgIDMgKwogdGVz
dHMvaTkxNS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMgfCAzMTIgKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKwogdGVzdHMvbWVzb24uYnVpbGQgICAgICAgICAgICAgICAgfCAgIDEgKwogNyBm
aWxlcyBjaGFuZ2VkLCAzNjUgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IHRlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCgpkaWZmIC0tZ2l0IGEv
bGliL2k5MTUvZ2VtX2NvbnRleHQuYyBiL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKaW5kZXggODNj
NWRmOTYxLi4xZmFlNTE5MWYgMTAwNjQ0Ci0tLSBhL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKKysr
IGIvbGliL2k5MTUvZ2VtX2NvbnRleHQuYwpAQCAtMjcyLDYgKzI3Miw0MyBAQCB2b2lkIGdlbV9j
b250ZXh0X3NldF9wcmlvcml0eShpbnQgZmQsIHVpbnQzMl90IGN0eF9pZCwgaW50IHByaW8pCiAJ
aWd0X2Fzc2VydF9lcShfX2dlbV9jb250ZXh0X3NldF9wcmlvcml0eShmZCwgY3R4X2lkLCBwcmlv
KSwgMCk7CiB9CiAKKy8qKgorICogX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2U6CisgKiBA
aTkxNTogb3BlbiBpOTE1IGRybSBmaWxlIGRlc2NyaXB0b3IKKyAqIEBjdHg6IGk5MTUgY29udGV4
dCBpZAorICogQHN0YXRlOiBkZXNpcmVkIHBlcnNpc3RlbmNlCisgKgorICogRGVjbGFyZSB3aGV0
aGVyIHRoaXMgY29udGV4dCBpcyBhbGxvd2VkIHRvIHBlcnNpc3QgYWZ0ZXIgY2xvc2luZyB1bnRp
bAorICogaXRzIHJlcXVlc3RzIGFyZSBjb21wbGV0ZSAocGVyc2lzdGVudD10cnVlKSBvciBpZiBp
dCBzaG91bGQgYmUKKyAqIGltbWVkaWF0ZWx5IHJlYXBlZCBvbiBjbG9zaW5nIGFuZCBpdHMgcmVx
dWVzdHMgY2FuY2VsbGVkCisgKiAocGVyc2lzdGVudD1mYWxzZSkuCisgKgorICogUmV0dXJuczog
QW4gaW50ZWdlciBlcXVhbCB0byB6ZXJvIGZvciBzdWNjZXNzIGFuZCBuZWdhdGl2ZSBmb3IgZmFp
bHVyZQorICovCitpbnQgX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaW50IGk5MTUsIHVp
bnQzMl90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRf
cGFyYW0gcCA9IHsKKwkJLmN0eF9pZCA9IGN0eCwKKwkJLnBhcmFtID0gSTkxNV9DT05URVhUX1BB
UkFNX1BFUlNJU1RFTkNFLAorCQkudmFsdWUgPSBzdGF0ZSwKKwl9OworCisJcmV0dXJuIF9fZ2Vt
X2NvbnRleHRfc2V0X3BhcmFtKGk5MTUsICZwKTsKK30KKworLyoqCisgKiBfX2dlbV9jb250ZXh0
X3NldF9wZXJzaXN0ZW5jZToKKyAqIEBpOTE1OiBvcGVuIGk5MTUgZHJtIGZpbGUgZGVzY3JpcHRv
cgorICogQGN0eDogaTkxNSBjb250ZXh0IGlkCisgKiBAc3RhdGU6IGRlc2lyZWQgcGVyc2lzdGVu
Y2UKKyAqCisgKiBMaWtlIF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKCksIGV4Y2VwdCB3
ZSBhc3NlcnQgb24gZmFpbHVyZS4KKyAqLwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVu
Y2UoaW50IGk5MTUsIHVpbnQzMl90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlpZ3RfYXNzZXJ0X2Vx
KF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgc3RhdGUpLCAwKTsKK30K
KwogaW50CiBfX2dlbV9jb250ZXh0X2Nsb25lKGludCBpOTE1LAogCQkgICAgdWludDMyX3Qgc3Jj
LCB1bnNpZ25lZCBpbnQgc2hhcmUsCmRpZmYgLS1naXQgYS9saWIvaTkxNS9nZW1fY29udGV4dC5o
IGIvbGliL2k5MTUvZ2VtX2NvbnRleHQuaAppbmRleCA4MDQzYzM0MDEuLjY3NDVjOTBjMyAxMDA2
NDQKLS0tIGEvbGliL2k5MTUvZ2VtX2NvbnRleHQuaAorKysgYi9saWIvaTkxNS9nZW1fY29udGV4
dC5oCkBAIC0yNCw2ICsyNCwxMSBAQAogI2lmbmRlZiBHRU1fQ09OVEVYVF9ICiAjZGVmaW5lIEdF
TV9DT05URVhUX0gKIAorI2luY2x1ZGUgPHN0ZGJvb2wuaD4KKyNpbmNsdWRlIDxzdGRpbnQuaD4K
Kworc3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtOworCiB1aW50MzJfdCBnZW1fY29u
dGV4dF9jcmVhdGUoaW50IGZkKTsKIGludCBfX2dlbV9jb250ZXh0X2NyZWF0ZShpbnQgZmQsIHVp
bnQzMl90ICpjdHhfaWQpOwogdm9pZCBnZW1fY29udGV4dF9kZXN0cm95KGludCBmZCwgdWludDMy
X3QgY3R4X2lkKTsKQEAgLTU4LDYgKzYzLDEwIEBAIGludCBfX2dlbV9jb250ZXh0X2dldF9wYXJh
bShpbnQgZmQsIHN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbSAqcCk7CiBpbnQgX19n
ZW1fY29udGV4dF9zZXRfcHJpb3JpdHkoaW50IGZkLCB1aW50MzJfdCBjdHgsIGludCBwcmlvKTsK
IHZvaWQgZ2VtX2NvbnRleHRfc2V0X3ByaW9yaXR5KGludCBmZCwgdWludDMyX3QgY3R4LCBpbnQg
cHJpbyk7CiAKKyNkZWZpbmUgSTkxNV9DT05URVhUX1BBUkFNX1BFUlNJU1RFTkNFIDB4YgoraW50
IF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGludCBpOTE1LCB1aW50MzJfdCBjdHgsIGJv
b2wgc3RhdGUpOwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaW50IGk5MTUsIHVp
bnQzMl90IGN0eCwgYm9vbCBzdGF0ZSk7CisKIGJvb2wgZ2VtX2NvbnRleHRfaGFzX2VuZ2luZShp
bnQgZmQsIHVpbnQzMl90IGN0eCwgdWludDY0X3QgZW5naW5lKTsKIAogI2VuZGlmIC8qIEdFTV9D
T05URVhUX0ggKi8KZGlmZiAtLWdpdCBhL2xpYi9pZ3RfZHVtbXlsb2FkLmMgYi9saWIvaWd0X2R1
bW15bG9hZC5jCmluZGV4IDBlMDYyNzZhZi4uNDlhYWFhOWNkIDEwMDY0NAotLS0gYS9saWIvaWd0
X2R1bW15bG9hZC5jCisrKyBiL2xpYi9pZ3RfZHVtbXlsb2FkLmMKQEAgLTQ0NSw3ICs0NDUsOCBA
QCB2b2lkIGlndF9zcGluX2ZyZWUoaW50IGZkLCBpZ3Rfc3Bpbl90ICpzcGluKQogCQlnZW1fY2xv
c2UoZmQsIHNwaW4tPnBvbGxfaGFuZGxlKTsKIAl9CiAKLQlnZW1fY2xvc2UoZmQsIHNwaW4tPmhh
bmRsZSk7CisJaWYgKHNwaW4tPmhhbmRsZSkKKwkJZ2VtX2Nsb3NlKGZkLCBzcGluLT5oYW5kbGUp
OwogCiAJaWYgKHNwaW4tPm91dF9mZW5jZSA+PSAwKQogCQljbG9zZShzcGluLT5vdXRfZmVuY2Up
OwpkaWZmIC0tZ2l0IGEvbGliL2lvY3RsX3dyYXBwZXJzLmMgYi9saWIvaW9jdGxfd3JhcHBlcnMu
YwppbmRleCAyODBmZGQ2MjQuLjYyOGY4YjgzMCAxMDA2NDQKLS0tIGEvbGliL2lvY3RsX3dyYXBw
ZXJzLmMKKysrIGIvbGliL2lvY3RsX3dyYXBwZXJzLmMKQEAgLTQ0NSw2ICs0NDUsNyBAQCBpbnQg
Z2VtX3dhaXQoaW50IGZkLCB1aW50MzJfdCBoYW5kbGUsIGludDY0X3QgKnRpbWVvdXRfbnMpCiAJ
cmV0ID0gMDsKIAlpZiAoaWd0X2lvY3RsKGZkLCBEUk1fSU9DVExfSTkxNV9HRU1fV0FJVCwgJndh
aXQpKQogCQlyZXQgPSAtZXJybm87CisJZXJybm8gPSAwOwogCiAJaWYgKHRpbWVvdXRfbnMpCiAJ
CSp0aW1lb3V0X25zID0gd2FpdC50aW1lb3V0X25zOwpkaWZmIC0tZ2l0IGEvdGVzdHMvTWFrZWZp
bGUuc291cmNlcyBiL3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMKaW5kZXggYzAyZTRkOTQ4Li5mZThl
MjIxZWIgMTAwNjQ0Ci0tLSBhL3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMKKysrIGIvdGVzdHMvTWFr
ZWZpbGUuc291cmNlcwpAQCAtMTUzLDYgKzE1Myw5IEBAIGdlbV9jdHhfaXNvbGF0aW9uX1NPVVJD
RVMgPSBpOTE1L2dlbV9jdHhfaXNvbGF0aW9uLmMKIFRFU1RTX3Byb2dzICs9IGdlbV9jdHhfcGFy
YW0KIGdlbV9jdHhfcGFyYW1fU09VUkNFUyA9IGk5MTUvZ2VtX2N0eF9wYXJhbS5jCiAKK1RFU1RT
X3Byb2dzICs9IGdlbV9jdHhfcGVyc2lzdGVuY2UKK2dlbV9jdHhfcGVyc2lzdGVuY2VfU09VUkNF
UyA9IGk5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCisKIFRFU1RTX3Byb2dzICs9IGdlbV9jdHhf
c2hhcmVkCiBnZW1fY3R4X3NoYXJlZF9TT1VSQ0VTID0gaTkxNS9nZW1fY3R4X3NoYXJlZC5jCiAK
ZGlmZiAtLWdpdCBhL3Rlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jIGIvdGVzdHMvaTkx
NS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwLi5lY2I3OTFkZWQKLS0tIC9kZXYvbnVsbAorKysgYi90ZXN0cy9pOTE1L2dlbV9jdHhfcGVy
c2lzdGVuY2UuYwpAQCAtMCwwICsxLDMxMiBAQAorLyoKKyAqIENvcHlyaWdodCDCqSAyMDE5IElu
dGVsIENvcnBvcmF0aW9uCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJl
ZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBz
b2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJl
IiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNs
dWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9k
aWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBz
ZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9t
IHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBm
b2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBh
bmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZSBuZXh0CisgKiBwYXJhZ3Jh
cGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlv
bnMgb2YgdGhlCisgKiBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQg
IkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICogSU1Q
TElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJD
SEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9O
SU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBBVVRIT1JTIE9SIENPUFlS
SUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCisg
KiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9U
SEVSV0lTRSwgQVJJU0lORworICogRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBU
SEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUworICogSU4gVEhFIFNPRlRX
QVJFLgorICovCisKKyNpbmNsdWRlIDxlcnJuby5oPgorI2luY2x1ZGUgPHN5cy9zb2NrZXQuaD4K
KyNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KKyNpbmNsdWRlIDx1bmlzdGQuaD4KKworI2luY2x1ZGUg
ImRybXRlc3QuaCIgLyogZ2VtX3F1aWVzY2VudF9ncHUoKSEgKi8KKyNpbmNsdWRlICJpOTE1L2dl
bV9jb250ZXh0LmgiCisjaW5jbHVkZSAiaTkxNS9nZW1fc3VibWlzc2lvbi5oIgorI2luY2x1ZGUg
ImlndF9kZWJ1Z2ZzLmgiCisjaW5jbHVkZSAiaWd0X2R1bW15bG9hZC5oIgorI2luY2x1ZGUgImlv
Y3RsX3dyYXBwZXJzLmgiIC8qIGdlbV93YWl0KCkhICovCisjaW5jbHVkZSAic3dfc3luYy5oIgor
CitzdGF0aWMgYm9vbCBoYXNfcGVyc2lzdGVuY2UoaW50IGk5MTUpCit7CisJc3RydWN0IGRybV9p
OTE1X2dlbV9jb250ZXh0X3BhcmFtIHAgPSB7CisJCS5wYXJhbSA9IEk5MTVfQ09OVEVYVF9QQVJB
TV9QRVJTSVNURU5DRSwKKwl9OworCXVpbnQ2NF90IHNhdmVkOworCisJaWYgKF9fZ2VtX2NvbnRl
eHRfZ2V0X3BhcmFtKGk5MTUsICZwKSkKKwkJcmV0dXJuIGZhbHNlOworCisJc2F2ZWQgPSBwLnZh
bHVlOworCXAudmFsdWUgPSAwOworCWlmIChfX2dlbV9jb250ZXh0X3NldF9wYXJhbShpOTE1LCAm
cCkpCisJCXJldHVybiBmYWxzZTsKKworCXAudmFsdWUgPSBzYXZlZDsKKwlyZXR1cm4gX19nZW1f
Y29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApID09IDA7Cit9CisKK3N0YXRpYyB2b2lkIHRlc3Rf
aWRlbXBvdGVudChpbnQgaTkxNSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfcGFy
YW0gcCA9IHsKKwkJLnBhcmFtID0gSTkxNV9DT05URVhUX1BBUkFNX1BFUlNJU1RFTkNFLAorCX07
CisJaW50IGV4cGVjdGVkOworCisJZ2VtX2NvbnRleHRfZ2V0X3BhcmFtKGk5MTUsICZwKTsKKwll
eHBlY3RlZCA9ICEhcC52YWx1ZTsKKworCWV4cGVjdGVkID0gIWV4cGVjdGVkOworCXAudmFsdWUg
PSBleHBlY3RlZDsKKwlnZW1fY29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApOworCWdlbV9jb250
ZXh0X2dldF9wYXJhbShpOTE1LCAmcCk7CisJaWd0X2Fzc2VydF9lcShwLnZhbHVlLCBleHBlY3Rl
ZCk7CisKKwlleHBlY3RlZCA9ICFleHBlY3RlZDsgLyogYW5kIHJlc3RvcmVzICovCisJcC52YWx1
ZSA9IGV4cGVjdGVkOworCWdlbV9jb250ZXh0X3NldF9wYXJhbShpOTE1LCAmcCk7CisJZ2VtX2Nv
bnRleHRfZ2V0X3BhcmFtKGk5MTUsICZwKTsKKwlpZ3RfYXNzZXJ0X2VxKHAudmFsdWUsIGV4cGVj
dGVkKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9wZXJzaXN0ZW5jZShpbnQgaTkxNSkKK3sKKwlp
Z3Rfc3Bpbl90ICpzcGluOworCWludDY0X3QgdGltZW91dDsKKwl1aW50MzJfdCBjdHg7CisKKwlj
dHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3Rl
bmNlKGk5MTUsIGN0eCwgdHJ1ZSk7CisKKwlzcGluID0gaWd0X3NwaW5fbmV3KGk5MTUsIGN0eCwg
LmZsYWdzID0gSUdUX1NQSU5fRkVOQ0VfT1VUKTsKKwlnZW1fY29udGV4dF9kZXN0cm95KGk5MTUs
IGN0eCk7CisKKwl0aW1lb3V0ID0gTlNFQ19QRVJfU0VDIC8gNTsKKwlpZ3RfYXNzZXJ0X2VxKGdl
bV93YWl0KGk5MTUsIHNwaW4tPmhhbmRsZSwgJnRpbWVvdXQpLCAtRVRJTUUpOworCisJaWd0X3Nw
aW5fZW5kKHNwaW4pOworCisJdGltZW91dCA9IE5TRUNfUEVSX1NFQyAvIDU7CisJaWd0X2Fzc2Vy
dF9lcShnZW1fd2FpdChpOTE1LCBzcGluLT5oYW5kbGUsICZ0aW1lb3V0KSwgMCk7CisJaWd0X2Fz
c2VydF9lcShzeW5jX2ZlbmNlX3N0YXR1cyhzcGluLT5vdXRfZmVuY2UpLCAxKTsKKworCWlndF9z
cGluX2ZyZWUoaTkxNSwgc3Bpbik7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisKK3N0
YXRpYyB2b2lkIHRlc3Rfbm9ucGVyc2lzdGVudF9jbGVhbnVwKGludCBpOTE1KQoreworCWludDY0
X3QgdGltZW91dCA9IE5TRUNfUEVSX1NFQyAvIDU7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwl1aW50
MzJfdCBjdHg7CisKKwljdHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2NvbnRl
eHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9IGlndF9zcGlu
X25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJZ2VtX2NvbnRl
eHRfZGVzdHJveShpOTE1LCBjdHgpOworCisJaWd0X2Fzc2VydF9lcShnZW1fd2FpdChpOTE1LCBz
cGluLT5oYW5kbGUsICZ0aW1lb3V0KSwgMCk7CisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3N0
YXR1cyhzcGluLT5vdXRfZmVuY2UpLCAtRUlPKTsKKworCWlndF9zcGluX2ZyZWUoaTkxNSwgc3Bp
bik7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisKK3N0YXRpYyB2b2lkIHRlc3Rfbm9u
cGVyc2lzdGVudF9taXhlZChpbnQgaTkxNSkKK3sKKwlpbnQgZmVuY2VbM107CisKKwlmb3IgKGlu
dCBpID0gMDsgaSA8IEFSUkFZX1NJWkUoZmVuY2UpOyBpKyspIHsKKwkJaWd0X3NwaW5fdCAqc3Bp
bjsKKwkJdWludDMyX3QgY3R4OworCisJCWN0eCA9IGdlbV9jb250ZXh0X2NyZWF0ZShpOTE1KTsK
KwkJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgaSAmIDEpOworCisJCXNw
aW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgY3R4LCAuZmxhZ3MgPSBJR1RfU1BJTl9GRU5DRV9PVVQp
OworCQlnZW1fY29udGV4dF9kZXN0cm95KGk5MTUsIGN0eCk7CisKKwkJZmVuY2VbaV0gPSBzcGlu
LT5vdXRfZmVuY2U7CisJfQorCisJLyogT3V0ZXIgcGFpciBvZiBjb250ZXh0cyB3ZXJlIG5vbi1w
ZXJzaXN0ZW50IGFuZCBraWxsZWQgKi8KKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfd2FpdChm
ZW5jZVswXSwgTVNFQ19QRVJfU0VDIC8gNSksIDApOworCWlndF9hc3NlcnRfZXEoc3luY19mZW5j
ZV9zdGF0dXMoZmVuY2VbMF0pLCAtRUlPKTsKKworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV93
YWl0KGZlbmNlWzJdLCBNU0VDX1BFUl9TRUMgLyA1KSwgMCk7CisJaWd0X2Fzc2VydF9lcShzeW5j
X2ZlbmNlX3N0YXR1cyhmZW5jZVsyXSksIC1FSU8pOworCisJLyogQnV0IHRoZSBtaWRkbGUgY29u
dGV4dCBpcyBzdGlsbCBydW5uaW5nICovCisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3dhaXQo
ZmVuY2VbMV0sIDApLCAtRVRJTUUpOworCisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisK
K3N0YXRpYyB2b2lkIHRlc3Rfbm9ucGVyc2lzdGVudF9ob3N0aWxlKGludCBpOTE1KQoreworCWlu
dDY0X3QgdGltZW91dCA9IE5TRUNfUEVSX1NFQyAvIDI7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwl1
aW50MzJfdCBjdHg7CisKKwljdHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2Nv
bnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9IGlndF9z
cGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX05PX1BSRUVNUFRJT04pOworCWdl
bV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4KTsKKworCWlndF9hc3NlcnRfZXEoZ2VtX3dhaXQo
aTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCisJaWd0X3NwaW5fZnJlZShpOTE1
LCBzcGluKTsKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKK30KKworc3RhdGljIHZvaWQgdGVz
dF9ub25wZXJzaXN0ZW50X2ZpbGUoaW50IGk5MTUpCit7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwl1
aW50MzJfdCBjdHg7CisKKwlpOTE1ID0gZ2VtX3Jlb3Blbl9kcml2ZXIoaTkxNSk7CisKKwljdHgg
PSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNl
KGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5m
bGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJY2xvc2UoaTkxNSk7CisKKwlpZ3RfYXNzZXJ0
X2VxKHN5bmNfZmVuY2Vfd2FpdChzcGluLT5vdXRfZmVuY2UsIE1TRUNfUEVSX1NFQyAvIDUpLCAw
KTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKHNwaW4tPm91dF9mZW5jZSksIC1F
SU8pOworCisJc3Bpbi0+aGFuZGxlID0gMDsKKwlpZ3Rfc3Bpbl9mcmVlKC0xLCBzcGluKTsKK30K
Kworc3RhdGljIHZvaWQgc2VuZGZkKGludCBzb2NrZXQsIGludCBmZCkKK3sKKwljaGFyIGJ1ZltD
TVNHX1NQQUNFKHNpemVvZihmZCkpXTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7IC5pb3ZfYmFzZSA9
IChjaGFyICopIkFCQyIsIC5pb3ZfbGVuID0gMyB9OworCXN0cnVjdCBtc2doZHIgbXNnID0gewor
CQkubXNnX2lvdiA9ICZpbywKKwkJLm1zZ19pb3ZsZW4gPSAxLAorCQkubXNnX2NvbnRyb2wgPSBi
dWYsCisJCS5tc2dfY29udHJvbGxlbiA9IENNU0dfTEVOKHNpemVvZihmZCkpLAorCX07CisJc3Ry
dWN0IGNtc2doZHIgKmNtc2cgPSBDTVNHX0ZJUlNUSERSKCZtc2cpOworCisJY21zZy0+Y21zZ19s
ZXZlbCA9IFNPTF9TT0NLRVQ7CisJY21zZy0+Y21zZ190eXBlID0gU0NNX1JJR0hUUzsKKwljbXNn
LT5jbXNnX2xlbiA9IG1zZy5tc2dfY29udHJvbGxlbjsKKwkqKGludCAqKUNNU0dfREFUQShjbXNn
KSA9IGZkOworCisJaWd0X2Fzc2VydChzZW5kbXNnKHNvY2tldCwgJm1zZywgMCkgIT0gLTEpOwor
fQorCitzdGF0aWMgaW50IHJlY3ZmZChpbnQgc29ja2V0KQoreworCWNoYXIgbV9idWZmZXJbMjU2
XSwgY19idWZmZXJbMjU2XTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7CisJCS5pb3ZfYmFzZSA9IG1f
YnVmZmVyLAorCQkuaW92X2xlbiA9IHNpemVvZihtX2J1ZmZlciksCisJfTsKKwlzdHJ1Y3QgbXNn
aGRyIG1zZyA9IHsKKwkJLm1zZ19pb3YgPSAmaW8sCisJCS5tc2dfaW92bGVuID0gMSwKKwkJLm1z
Z19jb250cm9sID0gY19idWZmZXIsCisJCS5tc2dfY29udHJvbGxlbiA9IHNpemVvZihjX2J1ZmZl
ciksCisJfTsKKworCWlndF9hc3NlcnQocmVjdm1zZyhzb2NrZXQsICZtc2csIDApICE9IC0xKTsK
KwlyZXR1cm4gKihpbnQgKilDTVNHX0RBVEEoQ01TR19GSVJTVEhEUigmbXNnKSk7Cit9CisKK3N0
YXRpYyB2b2lkIHRlc3Rfbm9ucGVyc2lzdGVudF9wcm9jZXNzKGludCBpOTE1KQoreworCWludCBm
ZW5jZVsyXSwgc3ZbMl07CisKKwlpZ3RfcmVxdWlyZShzb2NrZXRwYWlyKEFGX1VOSVgsIFNPQ0tf
REdSQU0sIDAsIHN2KSA9PSAwKTsKKworCWlndF9mb3JrKGNoaWxkLCAxKSB7CisJCWk5MTUgPSBn
ZW1fcmVvcGVuX2RyaXZlcihpOTE1KTsKKworCQlmb3IgKGludCBwZXJzaXN0cyA9IDA7IHBlcnNp
c3RzIDw9IDE7IHBlcnNpc3RzKyspIHsKKwkJCWlndF9zcGluX3QgKnNwaW47CisJCQl1aW50MzJf
dCBjdHg7CisKKwkJCWN0eCA9IGdlbV9jb250ZXh0X2NyZWF0ZShpOTE1KTsKKwkJCWdlbV9jb250
ZXh0X3NldF9wZXJzaXN0ZW5jZShpOTE1LCBjdHgsIHBlcnNpc3RzKTsKKworCQkJc3BpbiA9IGln
dF9zcGluX25ldyhpOTE1LCBjdHgsCisJCQkJCSAgICAuZmxhZ3MgPSBJR1RfU1BJTl9GRU5DRV9P
VVQpOworCisJCQlzZW5kZmQoc3ZbMF0sIHNwaW4tPm91dF9mZW5jZSk7CisKKwkJCWlndF9saXN0
X2RlbCgmc3Bpbi0+bGluayk7IC8qIHByZXZlbnQgYXV0b2NsZWFudXAgKi8KKwkJfQorCX0KKwlj
bG9zZShzdlswXSk7CisJaWd0X3dhaXRjaGlsZHJlbigpOworCisJZmVuY2VbMF0gPSByZWN2ZmQo
c3ZbMV0pOworCWZlbmNlWzFdID0gcmVjdmZkKHN2WzFdKTsKKwljbG9zZShzdlsxXSk7CisKKwkv
KiBGaXJzdCBmZW5jZSBpcyBub24tcGVyc2lzdGVudCwgc28gc2hvdWxkIGJlIHJlc2V0ICovCisJ
aWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3dhaXQoZmVuY2VbMF0sIE1TRUNfUEVSX1NFQyAvIDUp
LCAwKTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKGZlbmNlWzBdKSwgLUVJTyk7
CisJY2xvc2UoZmVuY2VbMF0pOworCisJLyogU2Vjb25kIGZlbmNlIGlzIHBlcnNpc3RlbnQsIHNv
IHNob3VsZCBiZSBzdGlsbCBzcGlubmluZyAqLworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV93
YWl0KGZlbmNlWzFdLCAwKSwgLUVUSU1FKTsKKwljbG9zZShmZW5jZVsxXSk7CisKKwkvKiBXZSBo
YXZlIHRvIG1hbnVhbGx5IGNsZWFuIHVwIHRoZSBvcnBoYW5lZCBzcGlubmVyICovCisJaWd0X2Ry
b3BfY2FjaGVzX3NldChpOTE1LCBEUk9QX1JFU0VUX0FDVElWRSk7CisKKwlnZW1fcXVpZXNjZW50
X2dwdShpOTE1KTsKK30KKworaWd0X21haW4KK3sKKwlpbnQgaTkxNTsKKworCWlndF9maXh0dXJl
IHsKKwkJaTkxNSA9IGRybV9vcGVuX2RyaXZlcihEUklWRVJfSU5URUwpOworCQlpZ3RfcmVxdWly
ZV9nZW0oaTkxNSk7CisKKwkJaWd0X3JlcXVpcmUoaGFzX3BlcnNpc3RlbmNlKGk5MTUpKTsKKwl9
CisKKwlpZ3Rfc3VidGVzdF9ncm91cCB7CisJCWlndF9zdWJ0ZXN0KCJpZGVtcG90ZW50IikKKwkJ
CXRlc3RfaWRlbXBvdGVudChpOTE1KTsKKworCQlpZ3Rfc3VidGVzdCgicGVyc2lzdGVuY2UiKQor
CQkJdGVzdF9wZXJzaXN0ZW5jZShpOTE1KTsKKworCQlpZ3Rfc3VidGVzdCgiY2xlYW51cCIpCisJ
CQl0ZXN0X25vbnBlcnNpc3RlbnRfY2xlYW51cChpOTE1KTsKKworCQlpZ3Rfc3VidGVzdCgibWl4
ZWQiKQorCQkJdGVzdF9ub25wZXJzaXN0ZW50X21peGVkKGk5MTUpOworCisJCWlndF9zdWJ0ZXN0
KCJob3N0aWxlIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9ob3N0aWxlKGk5MTUpOworCisJCWln
dF9zdWJ0ZXN0KCJmaWxlIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9maWxlKGk5MTUpOworCisJ
CWlndF9zdWJ0ZXN0KCJwcm9jZXNzIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9wcm9jZXNzKGk5
MTUpOworCX0KKworCWlndF9maXh0dXJlIHsKKwkJY2xvc2UoaTkxNSk7CisJfQorfQpkaWZmIC0t
Z2l0IGEvdGVzdHMvbWVzb24uYnVpbGQgYi90ZXN0cy9tZXNvbi5idWlsZAppbmRleCBhN2IyYjMy
MjEuLjA1MjM3NWExNSAxMDA2NDQKLS0tIGEvdGVzdHMvbWVzb24uYnVpbGQKKysrIGIvdGVzdHMv
bWVzb24uYnVpbGQKQEAgLTEyMCw2ICsxMjAsNyBAQCBpOTE1X3Byb2dzID0gWwogCSdnZW1fY3R4
X2V4ZWMnLAogCSdnZW1fY3R4X2lzb2xhdGlvbicsCiAJJ2dlbV9jdHhfcGFyYW0nLAorCSdnZW1f
Y3R4X3BlcnNpc3RlbmNlJywKIAknZ2VtX2N0eF9zaGFyZWQnLAogCSdnZW1fY3R4X3N3aXRjaCcs
CiAJJ2dlbV9jdHhfdGhyYXNoJywKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vaW50ZWwtZ2Z4

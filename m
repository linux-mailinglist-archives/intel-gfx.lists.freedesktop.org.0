Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 10F17E0816
	for <lists+intel-gfx@lfdr.de>; Tue, 22 Oct 2019 17:59:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 25FED6E872;
	Tue, 22 Oct 2019 15:59:32 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A4EEF6E86E
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Oct 2019 15:59:29 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18927716-1500050 
 for multiple; Tue, 22 Oct 2019 16:59:19 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 22 Oct 2019 16:58:59 +0100
Message-Id: <20191022155907.32203-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191022155907.32203-1-chris@chris-wilson.co.uk>
References: <20191022155907.32203-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 02/10] i915: Start putting the mmio_base
 to wider use
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2V2ZXJhbCB0ZXN0cyBkZXBlbmQgdXBvbiB0aGUgaW1wbGljaXQgZW5naW5lLT5tbWlvX2Jhc2Ug
YnV0IGhhdmUgbm8KbWVhbnMgb2YgZGV0ZXJtaW5pbmcgdGhlIHBoeXNpY2FsIGxheW91dC4gU2lu
Y2UgdGhlIGtlcm5lbCBoYXMgc3RhcnRlZApwcm92aWRpbmcgdGhpcyBpbmZvcm1hdGlvbiwgc3Rh
cnQgcHV0dGluZyBpdCB0byB1c2UuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlz
QGNocmlzLXdpbHNvbi5jby51az4KLS0tCiBsaWIvaTkxNS9nZW1fZW5naW5lX3RvcG9sb2d5LmMg
fCA4NCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBsaWIvaTkxNS9nZW1fZW5n
aW5lX3RvcG9sb2d5LmggfCAgNSArKwogdGVzdHMvaTkxNS9nZW1fY3R4X3NoYXJlZC5jICAgIHwg
MzggKysrKystLS0tLS0tLS0tCiB0ZXN0cy9pOTE1L2dlbV9leGVjX2xhdGVuY3kuYyAgfCAxNyAr
KysrLS0tCiA0IGZpbGVzIGNoYW5nZWQsIDExMSBpbnNlcnRpb25zKCspLCAzMyBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9saWIvaTkxNS9nZW1fZW5naW5lX3RvcG9sb2d5LmMgYi9saWIvaTkx
NS9nZW1fZW5naW5lX3RvcG9sb2d5LmMKaW5kZXggNzkwZDQ1NWZmLi5iZDIwMGE0YjkgMTAwNjQ0
Ci0tLSBhL2xpYi9pOTE1L2dlbV9lbmdpbmVfdG9wb2xvZ3kuYworKysgYi9saWIvaTkxNS9nZW1f
ZW5naW5lX3RvcG9sb2d5LmMKQEAgLTIxLDcgKzIxLDEyIEBACiAgKiBJTiBUSEUgU09GVFdBUkUu
CiAgKi8KIAorI2luY2x1ZGUgPGZjbnRsLmg+CisjaW5jbHVkZSA8dW5pc3RkLmg+CisKICNpbmNs
dWRlICJkcm10ZXN0LmgiCisjaW5jbHVkZSAiaWd0X3N5c2ZzLmgiCisjaW5jbHVkZSAiaW50ZWxf
Y2hpcHNldC5oIgogI2luY2x1ZGUgImlvY3RsX3dyYXBwZXJzLmgiCiAKICNpbmNsdWRlICJpOTE1
L2dlbV9lbmdpbmVfdG9wb2xvZ3kuaCIKQEAgLTMzNywzICszNDIsODIgQEAgYm9vbCBnZW1fZW5n
aW5lX2lzX2VxdWFsKGNvbnN0IHN0cnVjdCBpbnRlbF9leGVjdXRpb25fZW5naW5lMiAqZTEsCiB7
CiAJcmV0dXJuIGUxLT5jbGFzcyA9PSBlMi0+Y2xhc3MgJiYgZTEtPmluc3RhbmNlID09IGUyLT5p
bnN0YW5jZTsKIH0KKworc3RhdGljIGludCBkZXNjZW5kKGludCBkaXIsIGNvbnN0IGNoYXIgKnBh
dGgpCit7CisJaW50IGZkOworCisJZmQgPSBvcGVuYXQoZGlyLCBwYXRoLCBPX1JET05MWSk7CisJ
Y2xvc2UoZGlyKTsKKworCXJldHVybiBmZDsKK30KKworaW50IGdlbV9lbmdpbmVfcHJvcGVydHlf
c2NhbmYoaW50IGk5MTUsIGNvbnN0IGNoYXIgKmVuZ2luZSwgY29uc3QgY2hhciAqYXR0ciwKKwkJ
CSAgICAgIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQoreworCUZJTEUgKmZpbGU7CisJdmFfbGlzdCBh
cDsKKwlpbnQgcmV0OworCWludCBmZDsKKworCWZkID0gaWd0X3N5c2ZzX29wZW4oaTkxNSk7CisJ
aWYgKGZkIDwgMCkKKwkJcmV0dXJuIGZkOworCisJZmQgPSBkZXNjZW5kKGZkLCAiZW5naW5lIik7
CisJaWYgKGZkIDwgMCkKKwkJcmV0dXJuIGZkOworCisJZmQgPSBkZXNjZW5kKGZkLCBlbmdpbmUp
OworCWlmIChmZCA8IDApCisJCXJldHVybiBmZDsKKworCWZkID0gZGVzY2VuZChmZCwgYXR0cik7
CisJaWYgKGZkIDwgMCkKKwkJcmV0dXJuIGZkOworCisJZmlsZSA9IGZkb3BlbihmZCwgInIiKTsK
KwlpZiAoIWZpbGUpIHsKKwkJY2xvc2UoZmQpOworCQlyZXR1cm4gLTE7CisJfQorCisJdmFfc3Rh
cnQoYXAsIGZtdCk7CisJcmV0ID0gdmZzY2FuZihmaWxlLCBmbXQsIGFwKTsKKwl2YV9lbmQoYXAp
OworCisJZmNsb3NlKGZpbGUpOworCXJldHVybiByZXQ7Cit9CisKK3VpbnQzMl90IGdlbV9lbmdp
bmVfbW1pb19iYXNlKGludCBpOTE1LCBjb25zdCBjaGFyICplbmdpbmUpCit7CisJdW5zaWduZWQg
aW50IG1taW8gPSAwOworCisJaWYgKGdlbV9lbmdpbmVfcHJvcGVydHlfc2NhbmYoaTkxNSwgZW5n
aW5lLCAibW1pb19iYXNlIiwKKwkJCQkgICAgICAiJXgiLCAmbW1pbykgPCAwKSB7CisJCWludCBn
ZW4gPSBpbnRlbF9nZW4oaW50ZWxfZ2V0X2RybV9kZXZpZChpOTE1KSk7CisKKwkJLyogVGhlIGxh
eW91dCBvZiB4Y3MxKyBpcyB1bnJlbGlhYmxlIC0tIGhlbmNlIHRoZSBwcm9wZXJ0eSEgKi8KKwkJ
aWYgKCFzdHJjbXAoZW5naW5lLCAicmNzMCIpKSB7CisJCQltbWlvID0gMHgyMDAwOworCQl9IGVs
c2UgaWYgKCFzdHJjbXAoZW5naW5lLCAiYmNzMCIpKSB7CisJCQltbWlvID0gMHgyMjAwMDsKKwkJ
fSBlbHNlIGlmICghc3RyY21wKGVuZ2luZSwgInZjczAiKSkgeworCQkJaWYgKGdlbiA8IDYpCisJ
CQkJbW1pbyA9IDB4NDAwMDsKKwkJCWVsc2UgaWYgKGdlbiA8IDExKQorCQkJCW1taW8gPSAweDEy
MDAwOworCQkJZWxzZQorCQkJCW1taW8gPSAweDFjMDAwMDsKKwkJfSBlbHNlIGlmICghc3RyY21w
KGVuZ2luZSwgInZlY3MwIikpIHsKKwkJCWlmIChnZW4gPCAxMSkKKwkJCQltbWlvID0gMHgxYTAw
MDsKKwkJCWVsc2UKKwkJCQltbWlvID0gMHgxYzgwMDA7CisJCX0KKwl9CisKKwlyZXR1cm4gbW1p
bzsKK30KZGlmZiAtLWdpdCBhL2xpYi9pOTE1L2dlbV9lbmdpbmVfdG9wb2xvZ3kuaCBiL2xpYi9p
OTE1L2dlbV9lbmdpbmVfdG9wb2xvZ3kuaAppbmRleCBkOTg3NzNlMDYuLmU3MjhlYmQ5MyAxMDA2
NDQKLS0tIGEvbGliL2k5MTUvZ2VtX2VuZ2luZV90b3BvbG9neS5oCisrKyBiL2xpYi9pOTE1L2dl
bV9lbmdpbmVfdG9wb2xvZ3kuaApAQCAtNzQsNCArNzQsOSBAQCBzdHJ1Y3QgaW50ZWxfZXhlY3V0
aW9uX2VuZ2luZTIgZ2VtX2ViX2ZsYWdzX3RvX2VuZ2luZSh1bnNpZ25lZCBpbnQgZmxhZ3MpOwog
CSAgICAgKChlX18pID0gaW50ZWxfZ2V0X2N1cnJlbnRfcGh5c2ljYWxfZW5naW5lKCZpX18pKTsg
XAogCSAgICAgaW50ZWxfbmV4dF9lbmdpbmUoJmlfXykpCiAKK19fYXR0cmlidXRlX18oKGZvcm1h
dChzY2FuZiwgNCwgNSkpKQoraW50IGdlbV9lbmdpbmVfcHJvcGVydHlfc2NhbmYoaW50IGk5MTUs
IGNvbnN0IGNoYXIgKmVuZ2luZSwgY29uc3QgY2hhciAqYXR0ciwKKwkJCSAgICAgIGNvbnN0IGNo
YXIgKmZtdCwgLi4uKTsKK3VpbnQzMl90IGdlbV9lbmdpbmVfbW1pb19iYXNlKGludCBpOTE1LCBj
b25zdCBjaGFyICplbmdpbmUpOworCiAjZW5kaWYgLyogR0VNX0VOR0lORV9UT1BPTE9HWV9IICov
CmRpZmYgLS1naXQgYS90ZXN0cy9pOTE1L2dlbV9jdHhfc2hhcmVkLmMgYi90ZXN0cy9pOTE1L2dl
bV9jdHhfc2hhcmVkLmMKaW5kZXggZjc4NTI0ODIyLi41OTQ0Njg3MzggMTAwNjQ0Ci0tLSBhL3Rl
c3RzL2k5MTUvZ2VtX2N0eF9zaGFyZWQuYworKysgYi90ZXN0cy9pOTE1L2dlbV9jdHhfc2hhcmVk
LmMKQEAgLTM4LDYgKzM4LDcgQEAKIAogI2luY2x1ZGUgPGRybS5oPgogCisjaW5jbHVkZSAiaTkx
NS9nZW1fZW5naW5lX3RvcG9sb2d5LmgiCiAjaW5jbHVkZSAiaWd0X3JhbmQuaCIKICNpbmNsdWRl
ICJpZ3RfdmdlbS5oIgogI2luY2x1ZGUgInN5bmNfZmlsZS5oIgpAQCAtNTU4LDYgKzU1OSwxNCBA
QCBzdGF0aWMgdWludDMyX3Qgc3RvcmVfdGltZXN0YW1wKGludCBpOTE1LAogCXJldHVybiBvYmou
aGFuZGxlOwogfQogCitzdGF0aWMgdWludDMyX3QgcmluZ19iYXNlKGludCBpOTE1LCB1bnNpZ25l
ZCByaW5nKQoreworCWlmIChyaW5nID09IEk5MTVfRVhFQ19ERUZBVUxUKQorCQlyaW5nID0gSTkx
NV9FWEVDX1JFTkRFUjsgLyogWFhYICovCisKKwlyZXR1cm4gZ2VtX2VuZ2luZV9tbWlvX2Jhc2Uo
aTkxNSwgZ2VtX2ViX2ZsYWdzX3RvX2VuZ2luZShyaW5nKS5uYW1lKTsKK30KKwogc3RhdGljIHZv
aWQgaW5kZXBlbmRlbnQoaW50IGk5MTUsIHVuc2lnbmVkIHJpbmcsIHVuc2lnbmVkIGZsYWdzKQog
ewogCWNvbnN0IGludCBUSU1FU1RBTVAgPSAxMDIzOwpAQCAtNTY1LDMzICs1NzQsOCBAQCBzdGF0
aWMgdm9pZCBpbmRlcGVuZGVudChpbnQgaTkxNSwgdW5zaWduZWQgcmluZywgdW5zaWduZWQgZmxh
Z3MpCiAJaWd0X3NwaW5fdCAqc3BpbltNQVhfRUxTUF9RTEVOXTsKIAl1bnNpZ25lZCBpbnQgbW1p
b19iYXNlOwogCi0JLyogWFhYIGk5MTVfcXVlcnkoKSEgKi8KLQlzd2l0Y2ggKHJpbmcpIHsKLQlj
YXNlIEk5MTVfRVhFQ19ERUZBVUxUOgotCWNhc2UgSTkxNV9FWEVDX1JFTkRFUjoKLQkJbW1pb19i
YXNlID0gMHgyMDAwOwotCQlicmVhazsKLSNpZiAwCi0JY2FzZSBJOTE1X0VYRUNfQlNEOgotCQlt
bWlvX2Jhc2UgPSAweDEyMDAwOwotCQlicmVhazsKLSNlbmRpZgotCWNhc2UgSTkxNV9FWEVDX0JM
VDoKLQkJbW1pb19iYXNlID0gMHgyMjAwMDsKLQkJYnJlYWs7Ci0KLSNkZWZpbmUgR0VOMTFfVkVD
UzBfQkFTRSAweDFjODAwMAotI2RlZmluZSBHRU4xMV9WRUNTMV9CQVNFIDB4MWQ4MDAwCi0JY2Fz
ZSBJOTE1X0VYRUNfVkVCT1g6Ci0JCWlmIChpbnRlbF9nZW4oaW50ZWxfZ2V0X2RybV9kZXZpZChp
OTE1KSkgPj0gMTEpCi0JCQltbWlvX2Jhc2UgPSBHRU4xMV9WRUNTMF9CQVNFOwotCQllbHNlCi0J
CQltbWlvX2Jhc2UgPSAweDFhMDAwOwotCQlicmVhazsKLQotCWRlZmF1bHQ6Ci0JCWlndF9za2lw
KCJtbWlvIGJhc2Ugbm90IGtub3duXG4iKTsKLQl9CisJbW1pb19iYXNlID0gcmluZ19iYXNlKGk5
MTUsIHJpbmcpOworCWlndF9yZXF1aXJlX2YobW1pb19iYXNlLCAibW1pbyBiYXNlIG5vdCBrbm93
blxuIik7CiAKIAlmb3IgKGludCBuID0gMDsgbiA8IEFSUkFZX1NJWkUoc3Bpbik7IG4rKykgewog
CQljb25zdCBzdHJ1Y3QgaWd0X3NwaW5fZmFjdG9yeSBvcHRzID0gewpkaWZmIC0tZ2l0IGEvdGVz
dHMvaTkxNS9nZW1fZXhlY19sYXRlbmN5LmMgYi90ZXN0cy9pOTE1L2dlbV9leGVjX2xhdGVuY3ku
YwppbmRleCA5ZGRiMzQ4YzAuLmVhMWVlZTBhYSAxMDA2NDQKLS0tIGEvdGVzdHMvaTkxNS9nZW1f
ZXhlY19sYXRlbmN5LmMKKysrIGIvdGVzdHMvaTkxNS9nZW1fZXhlY19sYXRlbmN5LmMKQEAgLTEw
OSw3ICsxMDksNyBAQCBwb2xsX3JpbmcoaW50IGZkLCB1bnNpZ25lZCByaW5nLCBjb25zdCBjaGFy
ICpuYW1lKQogCWlndF9zcGluX2ZyZWUoZmQsIHNwaW5bMF0pOwogfQogCi0jZGVmaW5lIFJDU19U
SU1FU1RBTVAgKDB4MjAwMCArIDB4MzU4KQorI2RlZmluZSBUSU1FU1RBTVAgKDB4MzU4KQogc3Rh
dGljIHZvaWQgbGF0ZW5jeV9vbl9yaW5nKGludCBmZCwKIAkJCSAgICB1bnNpZ25lZCByaW5nLCBj
b25zdCBjaGFyICpuYW1lLAogCQkJICAgIHVuc2lnbmVkIGZsYWdzKQpAQCAtMTE5LDYgKzExOSw3
IEBAIHN0YXRpYyB2b2lkIGxhdGVuY3lfb25fcmluZyhpbnQgZmQsCiAJc3RydWN0IGRybV9pOTE1
X2dlbV9leGVjX29iamVjdDIgb2JqWzNdOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fcmVsb2NhdGlv
bl9lbnRyeSByZWxvYzsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXIyIGV4ZWNidWY7
CisJY29uc3QgdWludDMyX3QgbW1pb19iYXNlID0gZ2VtX2VuZ2luZV9tbWlvX2Jhc2UoZmQsIG5h
bWUpOwogCWlndF9zcGluX3QgKnNwaW4gPSBOVUxMOwogCUlHVF9DT1JLX0hBTkRMRShjKTsKIAl2
b2xhdGlsZSB1aW50MzJfdCAqcmVnOwpAQCAtMTI4LDcgKzEyOSw4IEBAIHN0YXRpYyB2b2lkIGxh
dGVuY3lfb25fcmluZyhpbnQgZmQsCiAJZG91YmxlIGdwdV9sYXRlbmN5OwogCWludCBpLCBqOwog
Ci0JcmVnID0gKHZvbGF0aWxlIHVpbnQzMl90ICopKCh2b2xhdGlsZSBjaGFyICopaWd0X2dsb2Jh
bF9tbWlvICsgUkNTX1RJTUVTVEFNUCk7CisJaWd0X3JlcXVpcmUobW1pb19iYXNlKTsKKwlyZWcg
PSAodm9sYXRpbGUgdWludDMyX3QgKikoKHZvbGF0aWxlIGNoYXIgKilpZ3RfZ2xvYmFsX21taW8g
KyBtbWlvX2Jhc2UgKyBUSU1FU1RBTVApOwogCiAJbWVtc2V0KCZleGVjYnVmLCAwLCBzaXplb2Yo
ZXhlY2J1ZikpOwogCWV4ZWNidWYuYnVmZmVyc19wdHIgPSB0b191c2VyX3BvaW50ZXIoJm9ialsx
XSk7CkBAIC0xNzYsNyArMTc4LDcgQEAgc3RhdGljIHZvaWQgbGF0ZW5jeV9vbl9yaW5nKGludCBm
ZCwKIAkJbWFwW2krK10gPSAweDI0IDw8IDIzIHwgMTsKIAkJaWYgKGhhc182NGJpdF9yZWxvYykK
IAkJCW1hcFtpLTFdKys7Ci0JCW1hcFtpKytdID0gUkNTX1RJTUVTVEFNUDsgLyogcmluZyBsb2Nh
bCEgKi8KKwkJbWFwW2krK10gPSBtbWlvX2Jhc2UgKyBUSU1FU1RBTVA7CiAJCW1hcFtpKytdID0g
b2Zmc2V0OwogCQlpZiAoaGFzXzY0Yml0X3JlbG9jKQogCQkJbWFwW2krK10gPSBvZmZzZXQgPj4g
MzI7CkBAIC0yNjYsMTIgKzI2OCwxNSBAQCBzdGF0aWMgdm9pZCBsYXRlbmN5X2Zyb21fcmluZyhp
bnQgZmQsCiAJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjX29iamVjdDIgb2JqWzNdOwogCXN0cnVj
dCBkcm1faTkxNV9nZW1fcmVsb2NhdGlvbl9lbnRyeSByZWxvYzsKIAlzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX2V4ZWNidWZmZXIyIGV4ZWNidWY7CisJY29uc3QgdWludDMyX3QgbW1pb19iYXNlID0gZ2Vt
X2VuZ2luZV9tbWlvX2Jhc2UoZmQsIG5hbWUpOwogCWNvbnN0IHVuc2lnbmVkIGludCByZXBlYXRz
ID0gcmluZ19zaXplIC8gMjsKIAl1bnNpZ25lZCBpbnQgb3RoZXI7CiAJdWludDMyX3QgKm1hcCwg
KnJlc3VsdHM7CiAJdWludDMyX3QgY3R4WzJdID0ge307CiAJaW50IGksIGo7CiAKKwlpZ3RfcmVx
dWlyZShtbWlvX2Jhc2UpOworCiAJaWYgKGZsYWdzICYgUFJFRU1QVCkgewogCQljdHhbMF0gPSBn
ZW1fY29udGV4dF9jcmVhdGUoZmQpOwogCQlnZW1fY29udGV4dF9zZXRfcHJpb3JpdHkoZmQsIGN0
eFswXSwgLTEwMjMpOwpAQCAtMzUyLDcgKzM1Nyw3IEBAIHN0YXRpYyB2b2lkIGxhdGVuY3lfZnJv
bV9yaW5nKGludCBmZCwKIAkJCW1hcFtpKytdID0gMHgyNCA8PCAyMyB8IDE7CiAJCQlpZiAoaGFz
XzY0Yml0X3JlbG9jKQogCQkJCW1hcFtpLTFdKys7Ci0JCQltYXBbaSsrXSA9IFJDU19USU1FU1RB
TVA7IC8qIHJpbmcgbG9jYWwhICovCisJCQltYXBbaSsrXSA9IG1taW9fYmFzZSArIFRJTUVTVEFN
UDsKIAkJCW1hcFtpKytdID0gb2Zmc2V0OwogCQkJaWYgKGhhc182NGJpdF9yZWxvYykKIAkJCQlt
YXBbaSsrXSA9IG9mZnNldCA+PiAzMjsKQEAgLTM3Nyw3ICszODIsNyBAQCBzdGF0aWMgdm9pZCBs
YXRlbmN5X2Zyb21fcmluZyhpbnQgZmQsCiAJCQltYXBbaSsrXSA9IDB4MjQgPDwgMjMgfCAxOwog
CQkJaWYgKGhhc182NGJpdF9yZWxvYykKIAkJCQltYXBbaS0xXSsrOwotCQkJbWFwW2krK10gPSBS
Q1NfVElNRVNUQU1QOyAvKiByaW5nIGxvY2FsISAqLworCQkJbWFwW2krK10gPSBtbWlvX2Jhc2Ug
KyBUSU1FU1RBTVA7CiAJCQltYXBbaSsrXSA9IG9mZnNldDsKIAkJCWlmIChoYXNfNjRiaXRfcmVs
b2MpCiAJCQkJbWFwW2krK10gPSBvZmZzZXQgPj4gMzI7CkBAIC02NzAsNyArNjc1LDcgQEAgaWd0
X21haW4KIAkJCXJpbmdfc2l6ZSA9IDEwMjQ7CiAKIAkJaW50ZWxfcmVnaXN0ZXJfYWNjZXNzX2lu
aXQoJm1taW9fZGF0YSwgaW50ZWxfZ2V0X3BjaV9kZXZpY2UoKSwgZmFsc2UsIGRldmljZSk7Ci0J
CXJjc19jbG9jayA9IGNsb2NrcmF0ZShkZXZpY2UsIFJDU19USU1FU1RBTVApOworCQlyY3NfY2xv
Y2sgPSBjbG9ja3JhdGUoZGV2aWNlLCAweDIwMDAgKyBUSU1FU1RBTVApOwogCQlpZ3RfaW5mbygi
UkNTIHRpbWVzdGFtcCBjbG9jazogJS4wZktIeiwgJS4xZm5zXG4iLAogCQkJIHJjc19jbG9jayAv
IDFlMywgMWU5IC8gcmNzX2Nsb2NrKTsKIAkJcmNzX2Nsb2NrID0gMWU5IC8gcmNzX2Nsb2NrOwot
LSAKMi4yNC4wLnJjMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwt
Z2Z4

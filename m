Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id EECF11946B6
	for <lists+intel-gfx@lfdr.de>; Thu, 26 Mar 2020 19:40:46 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 495B56E354;
	Thu, 26 Mar 2020 18:40:45 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1E2E36E354
 for <intel-gfx@lists.freedesktop.org>; Thu, 26 Mar 2020 18:40:44 +0000 (UTC)
IronPort-SDR: mRnlT8wJWuMg2p6eu3P4108PaLL5Ol5SmTG1WOrSdKQAhZLnX6STAer6DNsKCTGBrCL/3d1lFI
 6jd1G8LJ6r5g==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 26 Mar 2020 11:40:43 -0700
IronPort-SDR: Q+5SHXZ/IGk2gZ82nPO+7PDccoreFFTP0VI0f3KfjzjH98s2InN7KPFBcZpgAOOux/8py6O2NK
 GK3keKjIpAnQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,309,1580803200"; d="scan'208";a="282599894"
Received: from unknown (HELO slisovsk-Lenovo-ideapad-720S-13IKB.fi.intel.com)
 ([10.237.72.89])
 by fmsmga002.fm.intel.com with ESMTP; 26 Mar 2020 11:40:41 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 26 Mar 2020 20:36:57 +0200
Message-Id: <20200326183657.22700-1-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200326181005.11775-10-stanislav.lisovskiy@intel.com>
References: <20200326181005.11775-10-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v20 09/10] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KCnYxMDog
LSBGaXggQ0RDTEsgY29ycnVwdGlvbiwgYmVjYXVzZSBvZiBnbG9iYWwgc3RhdGUgZ2V0dGluZyBz
ZXJpYWxpemVkCiAgICAgICB3aXRob3V0IG1vZGVzZXQsIHdoaWNoIGNhdXNlZCBjb3B5aW5nIG9m
IG5vbi1jYWxjdWxhdGVkIGNkY2xrCiAgICAgICB0byBiZSBjb3BpZWQgdG8gZGV2X3ByaXYodGhh
bmtzIHRvIFZpbGxlIGZvciB0aGUgaGludCkuCgp2MTE6IC0gUmVtb3ZlIHVubmVlZGVkIGhlYWRl
cnMgYW5kIHNwYWNlcyhNYXR0aGV3IFJvcGVyKQogICAgIC0gUmVtb3ZlIHVubmVlZGVkIGludGVs
X3Fndl9pbmZvIHFpIHN0cnVjdCBmcm9tIGJ3IGNoZWNrIGFuZCB6ZXJvCiAgICAgICBvdXQgdGhl
IG5lZWRlZCBvbmUoTWF0dGhldyBSb3BlcikKICAgICAtIENoYW5nZWQgUUdWIGVycm9yIG1lc3Nh
Z2UgdG8gaGF2ZSBtb3JlIGNsZWFyIG1lYW5pbmcoTWF0dGhldyBSb3BlcikKICAgICAtIFVzZSBz
dGF0ZS0+bW9kZXNldF9zZXQgaW5zdGVhZCBvZiBhbnlfbXMoTWF0dGhldyBSb3BlcikKICAgICAt
IE1vdmVkIE5VTV9TQUdWX1BPSU5UUyBmcm9tIGk5MTVfcmVnLmggdG8gaTkxNV9kcnYuaCB3aGVy
ZSBpdCdzIHVzZWQKICAgICAtIEtlZXAgdXNpbmcgY3J0Y19zdGF0ZS0+aHcuYWN0aXZlIGluc3Rl
YWQgb2YgLmVuYWJsZShNYXR0aGV3IFJvcGVyKQogICAgIC0gTW92ZWQgdW5yZWxhdGVkIGNoYW5n
ZXMgdG8gb3RoZXIgcGF0Y2godXNpbmcgbGF0ZW5jeSBhcyBwYXJhbWV0ZXIKICAgICAgIGZvciBw
bGFuZSB3bSBjYWxjdWxhdGlvbiwgbW92ZWQgdG8gU0FHViByZWZhY3RvcmluZyBwYXRjaCkKCnYx
MjogLSBGaXggcmViYXNlIGNvbmZsaWN0IHdpdGggb3duIHRlbXBvcmFyeSBTQUdWL1FHViBmaXgu
CiAgICAgLSBSZW1vdmUgdW5uZWNlc3NhcnkgbWFzayBiZWluZyB6ZXJvIGNoZWNrIHdoZW4gdW5t
YXNraW5nCiAgICAgICBxZ3YgcG9pbnRzIGFzIHRoaXMgaXMgY29tcGxldGVseSBsZWdhbChNYXR0
IFJvcGVyKQogICAgIC0gQ2hlY2sgaWYgd2UgYXJlIHNldHRpbmcgdGhlIHNhbWUgbWFzayBhcyBh
bHJlYWR5IGJlaW5nIHNldAogICAgICAgaW4gaGFyZHdhcmUgdG8gcHJldmVudCBlcnJvciBmcm9t
IFBDb2RlLgogICAgIC0gRml4IGVycm9yIG1lc3NhZ2Ugd2hlbiByZXN0cmljdGluZy91bnJlc3Ry
aWN0aW5nIHFndiBwb2ludHMKICAgICAgIHRvICJtYXNrL3VubWFzayIgd2hpY2ggc291bmRzIG1v
cmUgYWNjdXJhdGUoTWF0dCBSb3BlcikKICAgICAtIE1vdmUgc2FndiBzdGF0dXMgc2V0dGluZyB0
byBpY2xfZ2V0X2J3X2luZm8gZnJvbSBhdG9taWMgY2hlY2sKICAgICAgIGFzIHRoaXMgc2hvdWxk
IGJlIGNhbGN1bGF0ZWQgb25seSBvbmNlLihNYXR0IFJvcGVyKQogICAgIC0gRWRpdGVkIGNvbW1l
bnRzIGZvciB0aGUgY2FzZSB3aGVuIHdlIGNhbid0IGVuYWJsZSBTQUdWIGFuZAogICAgICAgdXNl
IG9ubHkgMSBRR1YgcG9pbnQgd2l0aCBoaWdoZXN0IGJhbmR3aWR0aCB0byBiZSBtb3JlCiAgICAg
ICB1bmRlcnN0YW5kYWJsZS4oTWF0dCBSb3BlcikKCnYxMzogLSBNb3ZlZCBtYXhfZGF0YV9yYXRl
IGluIGJ3IGNoZWNrIHRvIGNsb3NlciBzY29wZShWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBDaGFu
Z2VkIGNvbW1lbnQgZm9yIHplcm8gbmV3X21hc2sgaW4gcWd2IHBvaW50cyBtYXNraW5nIGZ1bmN0
aW9uCiAgICAgICB0byBiZXR0ZXIgcmVmbGVjdCByZWFsaXR5KFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIFNpbXBsaWZpZWQgYml0IG1hc2sgb3BlcmF0aW9uIGluIHFndiBwb2ludHMgbWFza2luZyBm
dW5jdGlvbgogICAgICAgKFZpbGxlIFN5cmrDpGzDpCkKICAgICAtIE1vdmVkIGludGVsX3Fndl9w
b2ludHNfbWFzayBjbG9zZXIgdG8gZ2VuMTEgU0FHViBkaXNhYmxpbmcsCiAgICAgICBob3dldmVy
IHRoaXMgc3RpbGwgY2FuJ3QgYmUgdW5kZXIgbW9kZXNldCBjb25kaXRpb24oVmlsbGUgU3lyasOk
bMOkKQogICAgIC0gUGFja2VkIHFndl9wb2ludHNfbWFzayBhcyB1OCBhbmQgbW92ZWQgY2xvc2Vy
IHRvIHBpcGVfc2Fndl9tYXNrCiAgICAgICAoVmlsbGUgU3lyasOkbMOkKQogICAgIC0gRXh0cmFj
dGVkIFBDb2RlIGNoYW5nZXMgdG8gc2VwYXJhdGUgcGF0Y2guKFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIE5vdyB0cmVhdCBudW1fcGxhbmVzIDAgc2FtZSBhcyAxIHRvIGF2b2lkIGNvbmZ1c2lvbiBh
bmQKICAgICAgIHJldHVybmluZyBtYXhfYncgYXMgMCwgd2hpY2ggd291bGQgcHJldmVudCBjaG9v
c2luZyBRR1YKICAgICAgIHBvaW50IGhhdmluZyBtYXggYmFuZHdpZHRoIGluIGNhc2UgaWYgU0FH
ViBpcyBub3QgYWxsb3dlZCwKICAgICAgIGFzIHBlciBCU3BlYyhWaWxsZSBTeXJqw6Rsw6QpCiAg
ICAgLSBEbyB0aGUgYWN0dWFsIHFndl9wb2ludHNfbWFzayBzd2FwIGluIHRoZSBzYW1lIHBsYWNl
IGFzCiAgICAgICBhbGwgb3RoZXIgZ2xvYmFsIHN0YXRlIHBhcnRzIGxpa2UgY2RjbGsgYXJlIHN3
YXBwZWQuCiAgICAgICBJbiB0aGUgbmV4dCBwYXRjaCwgdGhpcyBhbGwgd2lsbCBiZSBtb3ZlZCB0
byBidyBzdGF0ZSBhcwogICAgICAgZ2xvYmFsIHN0YXRlLCBvbmNlIG5ldyBnbG9iYWwgc3RhdGUg
cGF0Y2ggc2VyaWVzIGZyb20gVmlsbGUKICAgICAgIGxhbmRzCgp2MTQ6IC0gTm93IHVzaW5nIGds
b2JhbCBzdGF0ZSB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHFndiBwb2ludHMKICAgICAtIEFkZGVk
IGdsb2JhbCBzdGF0ZSBsb2NraW5nIGJhY2ssIG90aGVyd2lzZSB3ZSBzZWVtIHRvIHJlYWQKICAg
ICAgIGJ3IHN0YXRlIGluIGEgd3Jvbmcgd2F5LgoKdjE1OiAtIEFkZGVkIFRPRE8gY29tbWVudCBm
b3IgbmVhciBhdG9taWMgZ2xvYmFsIHN0YXRlIGxvY2tpbmcgaW4KICAgICAgIGJ3IGNvZGUuCgp2
MTY6IC0gRml4ZWQgaW50ZWxfYXRvbWljX2J3XyogZnVuY3Rpb25zIHRvIGJlIGludGVsX2J3Xyog
YXMgZGlzY3Vzc2VkCiAgICAgICB3aXRoIEphbmkgTmlrdWxhLgogICAgIC0gVGFrZSBid19zdGF0
ZV9jaGFuZ2VkIGZsYWcgaW50byB1c2UuCgp2MTc6IC0gTW92ZWQgcWd2IHBvaW50IHJlbGF0ZWQg
bWFuaXB1bGF0aW9ucyBuZXh0IHRvIFNBR1YgY29kZSwgYXMKICAgICAgIHRob3NlIGFyZSBzZW1h
bnRpY2FsbHkgcmVsYXRlZChWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBSZW5hbWVkIHRob3NlIGlu
dG8gaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlCiAgICAgICAoVmlsbGUgU3ly
asOkbMOkKQoKdjE4OiAtIE1vdmUgc2FndiByZWxhdGVkIGNhbGxzIGZyb20gY29tbWl0IHRhaWwg
aW50bwogICAgICAgaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlKFZpbGxlIFN5
cmrDpGzDpCkKCnYxOTogLSBVc2UgaW50ZWxfYXRvbWljX2dldF9id18ob2xkKXwobmV3KV9zdGF0
ZSB3aGljaCBpcyBpbnRlbmRlZAogICAgICAgZm9yIGNvbW1pdCB0YWlsIHN0YWdlLgoKU2lnbmVk
LW9mZi1ieTogU3RhbmlzbGF2IExpc292c2tpeSA8c3RhbmlzbGF2Lmxpc292c2tpeUBpbnRlbC5j
b20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAaW50ZWwuY29tPgpDYzogSmFt
ZXMgQXVzbXVzIDxqYW1lcy5hdXNtdXNAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfYncuYyAgICAgICB8IDE0NyArKysrKysrKysrKysrLS0tLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaCAgICAgICB8ICAgOSArKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgIHwgIDI5ICstLS0KIC4u
Li9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAgMyArCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAxMTkgKysrKysrKysr
KysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmggICAgICAgICAgICAgICB8ICAg
MiArCiA2IGZpbGVzIGNoYW5nZWQsIDI1MSBpbnNlcnRpb25zKCspLCA1OCBkZWxldGlvbnMoLSkK
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMKaW5kZXggZDE2NzcxZGQyYjEw
Li5kNWE5M2U4ZjcxMzQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfYncuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMK
QEAgLTgsNiArOCw5IEBACiAjaW5jbHVkZSAiaW50ZWxfYncuaCIKICNpbmNsdWRlICJpbnRlbF9k
aXNwbGF5X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfc2lkZWJhbmQuaCIKKyNpbmNsdWRlICJp
bnRlbF9hdG9taWMuaCIKKyNpbmNsdWRlICJpbnRlbF9wbS5oIgorCiAKIC8qIFBhcmFtZXRlcnMg
Zm9yIFFjbGsgR2V5c2VydmlsbGUgKFFHVikgKi8KIHN0cnVjdCBpbnRlbF9xZ3ZfcG9pbnQgewpA
QCAtMTEzLDYgKzExNiwyNiBAQCBzdGF0aWMgaW50IGljbF9wY29kZV9yZWFkX3Fndl9wb2ludF9p
bmZvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4gMDsKIH0KIAor
aW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2ludHNfbWFzaykKK3sKKwlpbnQgcmV0OworCisJLyog
YnNwZWMgc2F5cyB0byBrZWVwIHJldHJ5aW5nIGZvciBhdCBsZWFzdCAxIG1zICovCisJcmV0ID0g
c2tsX3Bjb2RlX3JlcXVlc3QoZGV2X3ByaXYsIElDTF9QQ09ERV9TQUdWX0RFX01FTV9TU19DT05G
SUcsCisJCQkJcG9pbnRzX21hc2ssCisJCQkJR0VOMTFfUENPREVfUE9JTlRTX1JFU1RSSUNURURf
TUFTSywKKwkJCQlHRU4xMV9QQ09ERV9QT0lOVFNfUkVTVFJJQ1RFRCwKKwkJCQkxKTsKKworCWlm
IChyZXQgPCAwKSB7CisJCURSTV9FUlJPUigiRmFpbGVkIHRvIGRpc2FibGUgcWd2IHBvaW50cyAo
JWQpXG4iLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOworfQorCiBzdGF0
aWMgaW50IGljbF9nZXRfcWd2X3BvaW50cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfcWd2X2luZm8gKnFpKQogewpAQCAtMjQwLDYgKzI2
MywxNiBAQCBzdGF0aWMgaW50IGljbF9nZXRfYndfaW5mbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsIGNvbnN0IHN0cnVjdCBpbnRlbAogCQkJYnJlYWs7CiAJfQogCisJLyoKKwkg
KiBJbiBjYXNlIGlmIFNBR1YgaXMgZGlzYWJsZWQgaW4gQklPUywgd2UgYWx3YXlzIGdldCAxCisJ
ICogU0FHViBwb2ludCwgYnV0IHdlIGNhbid0IHNlbmQgUENvZGUgY29tbWFuZHMgdG8gcmVzdHJp
Y3QgaXQKKwkgKiBhcyBpdCB3aWxsIGZhaWwgYW5kIHBvaW50bGVzcyBhbnl3YXkuCisJICovCisJ
aWYgKHFpLm51bV9wb2ludHMgPT0gMSkKKwkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9T
QUdWX05PVF9DT05UUk9MTEVEOworCWVsc2UKKwkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkx
NV9TQUdWX0VOQUJMRUQ7CisKIAlyZXR1cm4gMDsKIH0KIApAQCAtMjU5LDcgKzI5Miw3IEBAIHN0
YXRpYyB1bnNpZ25lZCBpbnQgaWNsX21heF9idyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJCWlmIChxZ3ZfcG9pbnQgPj0gYmktPm51bV9xZ3ZfcG9pbnRzKQogCQkJcmV0dXJu
IFVJTlRfTUFYOwogCi0JCWlmIChudW1fcGxhbmVzID49IGJpLT5udW1fcGxhbmVzKQorCQlpZiAo
bnVtX3BsYW5lcyA+PSBiaS0+bnVtX3BsYW5lcyB8fCAhbnVtX3BsYW5lcykKIAkJCXJldHVybiBi
aS0+ZGVyYXRlZGJ3W3Fndl9wb2ludF07CiAJfQogCkBAIC0yNzcsMzQgKzMxMCw2IEBAIHZvaWQg
aW50ZWxfYndfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWlj
bF9nZXRfYndfaW5mbyhkZXZfcHJpdiwgJmljbF9zYV9pbmZvKTsKIH0KIAotc3RhdGljIHVuc2ln
bmVkIGludCBpbnRlbF9tYXhfZGF0YV9yYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwKLQkJCQkJaW50IG51bV9wbGFuZXMpCi17Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
Pj0gMTEpIHsKLQkJLyoKLQkJICogQW55IGJ3IGdyb3VwIGhhcyBzYW1lIGFtb3VudCBvZiBRR1Yg
cG9pbnRzCi0JCSAqLwotCQljb25zdCBzdHJ1Y3QgaW50ZWxfYndfaW5mbyAqYmkgPQotCQkJJmRl
dl9wcml2LT5tYXhfYndbMF07Ci0JCXVuc2lnbmVkIGludCBtaW5fYncgPSBVSU5UX01BWDsKLQkJ
aW50IGk7Ci0KLQkJLyoKLQkJICogRklYTUUgd2l0aCBTQUdWIGRpc2FibGVkIG1heWJlIHdlIGNh
biBhc3N1bWUKLQkJICogcG9pbnQgMSB3aWxsIGFsd2F5cyBiZSB1c2VkPyBTZWVtcyB0byBtYXRj
aAotCQkgKiB0aGUgYmVoYXZpb3VyIG9ic2VydmVkIGluIHRoZSB3aWxkLgotCQkgKi8KLQkJZm9y
IChpID0gMDsgaSA8IGJpLT5udW1fcWd2X3BvaW50czsgaSsrKSB7Ci0JCQl1bnNpZ25lZCBpbnQg
YncgPSBpY2xfbWF4X2J3KGRldl9wcml2LCBudW1fcGxhbmVzLCBpKTsKLQotCQkJbWluX2J3ID0g
bWluKGJ3LCBtaW5fYncpOwotCQl9Ci0JCXJldHVybiBtaW5fYnc7Ci0JfSBlbHNlIHsKLQkJcmV0
dXJuIFVJTlRfTUFYOwotCX0KLX0KLQogc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9id19jcnRj
X251bV9hY3RpdmVfcGxhbmVzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogewogCS8qCkBAIC00MTksMTAgKzQyNCwxNSBAQCBpbnQgaW50ZWxfYndfYXRvbWljX2No
ZWNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUsICpvbGRfY3J0Y19zdGF0ZTsKIAlzdHJ1Y3Qg
aW50ZWxfYndfc3RhdGUgKm5ld19id19zdGF0ZSA9IE5VTEw7Ci0JdW5zaWduZWQgaW50IGRhdGFf
cmF0ZSwgbWF4X2RhdGFfcmF0ZTsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm9sZF9id19zdGF0
ZSA9IE5VTEw7CisJdW5zaWduZWQgaW50IGRhdGFfcmF0ZTsKIAl1bnNpZ25lZCBpbnQgbnVtX2Fj
dGl2ZV9wbGFuZXM7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7CiAJaW50IGksIHJldDsKKwl1
MzIgYWxsb3dlZF9wb2ludHMgPSAwOworCXVuc2lnbmVkIGludCBtYXhfYndfcG9pbnQgPSAwLCBt
YXhfYncgPSAwOworCXVuc2lnbmVkIGludCBudW1fcWd2X3BvaW50cyA9IGRldl9wcml2LT5tYXhf
YndbMF0ubnVtX3Fndl9wb2ludHM7CisJdTMyIG1hc2sgPSAoMSA8PCBudW1fcWd2X3BvaW50cykg
LSAxOwogCiAJLyogRklYTUUgZWFybGllciBnZW5zIG5lZWQgc29tZSBjaGVja3MgdG9vICovCiAJ
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkKQEAgLTQ2NSwyMyArNDc1LDg2IEBAIGludCBp
bnRlbF9id19hdG9taWNfY2hlY2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJ
CXJldHVybiAwOwogCiAJcmV0ID0gaW50ZWxfYXRvbWljX2xvY2tfZ2xvYmFsX3N0YXRlKCZuZXdf
Yndfc3RhdGUtPmJhc2UpOwotCWlmIChyZXQpCisJaWYgKHJldCkgeworCQlEUk1fREVCVUdfS01T
KCJDb3VsZCBub3QgbG9jayBnbG9iYWwgc3RhdGVcbiIpOwogCQlyZXR1cm4gcmV0OworCX0KIAog
CWRhdGFfcmF0ZSA9IGludGVsX2J3X2RhdGFfcmF0ZShkZXZfcHJpdiwgbmV3X2J3X3N0YXRlKTsK
KwlkYXRhX3JhdGUgPSBESVZfUk9VTkRfVVAoZGF0YV9yYXRlLCAxMDAwKTsKKwogCW51bV9hY3Rp
dmVfcGxhbmVzID0gaW50ZWxfYndfbnVtX2FjdGl2ZV9wbGFuZXMoZGV2X3ByaXYsIG5ld19id19z
dGF0ZSk7CiAKLQltYXhfZGF0YV9yYXRlID0gaW50ZWxfbWF4X2RhdGFfcmF0ZShkZXZfcHJpdiwg
bnVtX2FjdGl2ZV9wbGFuZXMpOworCWZvciAoaSA9IDA7IGkgPCBudW1fcWd2X3BvaW50czsgaSsr
KSB7CisJCXVuc2lnbmVkIGludCBtYXhfZGF0YV9yYXRlOwogCi0JZGF0YV9yYXRlID0gRElWX1JP
VU5EX1VQKGRhdGFfcmF0ZSwgMTAwMCk7CisJCW1heF9kYXRhX3JhdGUgPSBpY2xfbWF4X2J3KGRl
dl9wcml2LCBudW1fYWN0aXZlX3BsYW5lcywgaSk7CisJCS8qCisJCSAqIFdlIG5lZWQgdG8ga25v
dyB3aGljaCBxZ3YgcG9pbnQgZ2l2ZXMgdXMKKwkJICogbWF4aW11bSBiYW5kd2lkdGggaW4gb3Jk
ZXIgdG8gZGlzYWJsZSBTQUdWCisJCSAqIGlmIHdlIGZpbmQgdGhhdCB3ZSBleGNlZWQgU0FHViBi
bG9jayB0aW1lCisJCSAqIHdpdGggd2F0ZXJtYXJrcy4gQnkgdGhhdCBtb21lbnQgd2UgYWxyZWFk
eQorCQkgKiBoYXZlIHRob3NlLCBhcyBpdCBpcyBjYWxjdWxhdGVkIGVhcmxpZXIgaW4KKwkJICog
aW50ZWxfYXRvbWljX2NoZWNrLAorCQkgKi8KKwkJaWYgKG1heF9kYXRhX3JhdGUgPiBtYXhfYncp
IHsKKwkJCW1heF9id19wb2ludCA9IGk7CisJCQltYXhfYncgPSBtYXhfZGF0YV9yYXRlOworCQl9
CisJCWlmIChtYXhfZGF0YV9yYXRlID49IGRhdGFfcmF0ZSkKKwkJCWFsbG93ZWRfcG9pbnRzIHw9
IEJJVChpKTsKKwkJRFJNX0RFQlVHX0tNUygiUUdWIHBvaW50ICVkOiBtYXggYncgJWQgcmVxdWly
ZWQgJWRcbiIsCisJCQkgICAgICBpLCBtYXhfZGF0YV9yYXRlLCBkYXRhX3JhdGUpOworCX0KIAot
CWlmIChkYXRhX3JhdGUgPiBtYXhfZGF0YV9yYXRlKSB7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJp
di0+ZHJtLAotCQkJICAgICJCYW5kd2lkdGggJXUgTUIvcyBleGNlZWRzIG1heCBhdmFpbGFibGUg
JWQgTUIvcyAoJWQgYWN0aXZlIHBsYW5lcylcbiIsCi0JCQkgICAgZGF0YV9yYXRlLCBtYXhfZGF0
YV9yYXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJLyoKKwkgKiBCU3BlYyBzdGF0ZXMgdGhhdCB3
ZSBhbHdheXMgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGFsbG93ZWQgcG9pbnQKKwkgKiBsZWZ0
LCBzbyBpZiB3ZSBjb3VsZG4ndCAtIHNpbXBseSByZWplY3QgdGhlIGNvbmZpZ3VyYXRpb24gZm9y
IG9idmlvdXMKKwkgKiByZWFzb25zLgorCSAqLworCWlmIChhbGxvd2VkX3BvaW50cyA9PSAwKSB7
CisJCURSTV9ERUJVR19LTVMoIk5vIFFHViBwb2ludHMgcHJvdmlkZSBzdWZmaWNpZW50IG1lbW9y
eSIKKwkJCSAgICAgICIgYmFuZHdpZHRoIGZvciBkaXNwbGF5IGNvbmZpZ3VyYXRpb24uXG4iKTsK
IAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCisJLyoKKwkgKiBMZWF2ZSBvbmx5IHNpbmdsZSBwb2lu
dCB3aXRoIGhpZ2hlc3QgYmFuZHdpZHRoLCBpZgorCSAqIHdlIGNhbid0IGVuYWJsZSBTQUdWIGR1
ZSB0byB0aGUgaW5jcmVhc2VkIG1lbW9yeSBsYXRlbmN5IGl0IG1heQorCSAqIGNhdXNlLgorCSAq
LworCWlmICghaW50ZWxfY2FuX2VuYWJsZV9zYWd2KG5ld19id19zdGF0ZSkpIHsKKwkJYWxsb3dl
ZF9wb2ludHMgPSAxIDw8IG1heF9id19wb2ludDsKKwkJRFJNX0RFQlVHX0tNUygiTm8gU0FHViwg
dXNpbmcgc2luZ2xlIFFHViBwb2ludCAlZFxuIiwKKwkJCSAgICAgIG1heF9id19wb2ludCk7CisJ
fQorCS8qCisJICogV2Ugc3RvcmUgdGhlIG9uZXMgd2hpY2ggbmVlZCB0byBiZSBtYXNrZWQgYXMg
dGhhdCBpcyB3aGF0IFBDb2RlCisJICogYWN0dWFsbHkgYWNjZXB0cyBhcyBhIHBhcmFtZXRlci4K
KwkgKi8KKwluZXdfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzayA9ICh+YWxsb3dlZF9wb2ludHMp
ICYgbWFzazsKKworCURSTV9ERUJVR19LTVMoIk5ldyBzdGF0ZSAlcCBxZ3YgbWFzayAleFxuIiwK
KwkJICAgICAgc3RhdGUsIG5ld19id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrKTsKKworCW9sZF9i
d19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfYndfb2xkX3N0YXRlKHN0YXRlKTsKKwlpZiAoSVNf
RVJSKG9sZF9id19zdGF0ZSkpIHsKKwkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IGdldCBvbGQg
Yncgc3RhdGUhXG4iKTsKKwkJcmV0dXJuIFBUUl9FUlIob2xkX2J3X3N0YXRlKTsKKwl9CisKKwkv
KgorCSAqIElmIHRoZSBhY3R1YWwgbWFzayBoYWQgY2hhbmdlZCB3ZSBuZWVkIHRvIG1ha2Ugc3Vy
ZSB0aGF0CisJICogdGhlIGNvbW1pdHMgYXJlIHNlcmlhbGl6ZWQoaW4gY2FzZSB0aGlzIGlzIGEg
bm9tb2Rlc2V0LCBub25ibG9ja2luZykKKwkgKi8KKwlpZiAobmV3X2J3X3N0YXRlLT5xZ3ZfcG9p
bnRzX21hc2sgIT0gb2xkX2J3X3N0YXRlLT5xZ3ZfcG9pbnRzX21hc2spIHsKKwkJcmV0ID0gaW50
ZWxfYXRvbWljX3NlcmlhbGl6ZV9nbG9iYWxfc3RhdGUoJm5ld19id19zdGF0ZS0+YmFzZSk7CisJ
CWlmIChyZXQpIHsKKwkJCURSTV9ERUJVR19LTVMoIkNvdWxkIG5vdCBzZXJpYWxpemUgZ2xvYmFs
IHN0YXRlXG4iKTsKKwkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKIAlyZXR1cm4gMDsKIH0KIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCmluZGV4IDZhZDNlYTdjZWRmZS4u
NWNiMDcxN2MyZGY4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2J3LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCkBA
IC0yNCw2ICsyNCwxMyBAQCBzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgewogCSAqLwogCXU4IHBpcGVf
c2Fndl9yZWplY3Q7CiAKKwkvKgorCSAqIEN1cnJlbnQgUUdWIHBvaW50cyBtYXNrLCB3aGljaCBy
ZXN0cmljdHMKKwkgKiBzb21lIHBhcnRpY3VsYXIgU0FHViBzdGF0ZXMsIG5vdCB0byBjb25mdXNl
CisJICogd2l0aCBwaXBlX3NhZ3ZfbWFzay4KKwkgKi8KKwl1OCBxZ3ZfcG9pbnRzX21hc2s7CisK
IAl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlW0k5MTVfTUFYX1BJUEVTXTsKIAl1OCBudW1fYWN0aXZl
X3BsYW5lc1tJOTE1X01BWF9QSVBFU107CiB9OwpAQCAtNDQsNSArNTEsNyBAQCBpbnQgaW50ZWxf
YndfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogaW50IGludGVsX2J3
X2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7CiB2b2lkIGlu
dGVsX2J3X2NydGNfdXBkYXRlKHN0cnVjdCBpbnRlbF9id19zdGF0ZSAqYndfc3RhdGUsCiAJCQkg
IGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKK2ludCBpY2xfcGNv
ZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CisJCQkJICB1MzIgcG9pbnRzX21hc2spOwogCiAjZW5kaWYgLyogX19JTlRFTF9CV19IX18gKi8K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5kZXggOGEw
ZDk1MmM2N2JmLi5hYjNkOTRlM2U5N2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5jCkBAIC0xNTUzOSwyMyArMTU1MzksMTcgQEAgc3RhdGljIHZvaWQg
aW50ZWxfYXRvbWljX2NvbW1pdF90YWlsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRl
KQogCQljcnRjLT5jb25maWcgPSBuZXdfY3J0Y19zdGF0ZTsKIAogCWlmIChzdGF0ZS0+bW9kZXNl
dCkgewotCQlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlOwotCi0JCWJ3X3N0YXRlID0g
aW50ZWxfYXRvbWljX2dldF9id19uZXdfc3RhdGUoc3RhdGUpOworCQkvKgorCQkgKiBOb3cgd2Ug
bmVlZCB0byBjaGVjayBpZiBTQUdWIG5lZWRzIHRvIGJlIGRpc2FibGVkKGkuZSBRR1YgcG9pbnRz
CisJCSAqIG1vZGlmaWVkIGV2ZW4sIHdoZW4gbm8gbW9kZXNldCBpcyBkb25lKGZvciBleGFtcGxl
IHBsYW5lIHVwZGF0ZXMKKwkJICogY2FuIG5vdyB0cmlnZ2VyIHRoYXQpLgorCQkgKi8KKwkJaW50
ZWxfc2Fndl9wcmVfcGxhbmVfdXBkYXRlKHN0YXRlKTsKIAogCQlkcm1fYXRvbWljX2hlbHBlcl91
cGRhdGVfbGVnYWN5X21vZGVzZXRfc3RhdGUoZGV2LCAmc3RhdGUtPmJhc2UpOwogCiAJCWludGVs
X3NldF9jZGNsa19wcmVfcGxhbmVfdXBkYXRlKHN0YXRlKTsKIAotCQkvKgotCQkgKiBTS0wgd29y
a2Fyb3VuZDogYnNwZWMgcmVjb21tZW5kcyB3ZSBkaXNhYmxlIHRoZSBTQUdWIHdoZW4gd2UKLQkJ
ICogaGF2ZSBtb3JlIHRoZW4gb25lIHBpcGUgZW5hYmxlZAotCQkgKi8KLQkJaWYgKElOVEVMX0dF
TihkZXZfcHJpdikgPCAxMSkgewotCQkJaWYgKGJ3X3N0YXRlICYmICFpbnRlbF9jYW5fZW5hYmxl
X3NhZ3YoYndfc3RhdGUpKQotCQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7Ci0JCX0K
LQogCQlpbnRlbF9tb2Rlc2V0X3ZlcmlmeV9kaXNhYmxlZChkZXZfcHJpdiwgc3RhdGUpOwogCX0K
IApAQCAtMTU2NTEsMTcgKzE1NjQ1LDEwIEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21t
aXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlpbnRlbF9jaGVja19j
cHVfZmlmb191bmRlcnJ1bnMoZGV2X3ByaXYpOwogCWludGVsX2NoZWNrX3BjaF9maWZvX3VuZGVy
cnVucyhkZXZfcHJpdik7CiAKLQlpZiAoc3RhdGUtPm1vZGVzZXQpCisJaWYgKHN0YXRlLT5tb2Rl
c2V0KSB7CiAJCWludGVsX3ZlcmlmeV9wbGFuZXMoc3RhdGUpOwogCi0JaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPCAxMSkgewotCQlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlOwotCi0J
CWJ3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9id19uZXdfc3RhdGUoc3RhdGUpOwotCi0JCWlm
IChid19zdGF0ZSAmJiBzdGF0ZS0+bW9kZXNldCAmJiBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YoYndf
c3RhdGUpKSB7Ci0JCQlpbnRlbF9lbmFibGVfc2FndihkZXZfcHJpdik7Ci0JCX0KKwkJaW50ZWxf
c2Fndl9wb3N0X3BsYW5lX3VwZGF0ZShzdGF0ZSk7CiAJfQogCiAJZHJtX2F0b21pY19oZWxwZXJf
Y29tbWl0X2h3X2RvbmUoJnN0YXRlLT5iYXNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5kZXggNTFmYTVhNzQ2YTVmLi44NjU1
MDM4YmFmZTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oCkBAIC02ODksNiArNjg5LDkgQEAgZW51bSBjb2xvcl9wbGFuZSB7CiAJ
Q09MT1JfUExBTkVfVVYKIH07CiAKKy8qIEJTcGVjIHByZWNpc2VseSBkZWZpbmVzIHRoaXMgKi8K
KyNkZWZpbmUgTlVNX1NBR1ZfUE9JTlRTIDgKKwogc3RydWN0IHNrbF9waXBlX3dtIHsKIAlzdHJ1
Y3Qgc2tsX3BsYW5lX3dtIHBsYW5lc1tJOTE1X01BWF9QTEFORVNdOwogCWJvb2wgY2FuX3NhZ3Y7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfcG0uYwppbmRleCA2M2M0NjkxOGQxZWQuLjRiOTZjMTRmOTM2MSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCkBAIC0zNzU4LDYgKzM3NTgsMTI1IEBAIGludGVsX2Rp
c2FibGVfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJcmV0dXJuIDA7
CiB9CiAKK3ZvaWQgaW50ZWxfc2Fndl9wcmVfcGxhbmVfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFz
ZS5kZXY7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYp
OworCWludCByZXQ7CisJc3RydWN0IGludGVsX2J3X3N0YXRlICpuZXdfYndfc3RhdGUgPSBOVUxM
OworCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAqb2xkX2J3X3N0YXRlID0gTlVMTDsKKwl1MzIgbmV3
X21hc2sgPSAwOworCisJLyoKKwkgKiBKdXN0IHJldHVybiBpZiB3ZSBjYW4ndCBjb250cm9sIFNB
R1Ygb3IgZG9uJ3QgaGF2ZSBpdC4KKwkgKiBUaGlzIGlzIGRpZmZlcmVudCBmcm9tIHNpdHVhdGlv
biB3aGVuIHdlIGhhdmUgU0FHViBidXQganVzdCBjYW4ndAorCSAqIGFmZm9yZCBpdCBkdWUgdG8g
REJ1ZiBsaW1pdGF0aW9uIC0gaW4gY2FzZSBpZiBTQUdWIGlzIGNvbXBsZXRlbHkKKwkgKiBkaXNh
YmxlZCBpbiBhIEJJT1MsIHdlIGFyZSBub3QgZXZlbiBhbGxvd2VkIHRvIHNlbmQgYSBQQ29kZSBy
ZXF1ZXN0LAorCSAqIGFzIGl0IHdpbGwgdGhyb3cgYW4gZXJyb3IuIFNvIGhhdmUgdG8gY2hlY2sg
aXQgaGVyZS4KKwkgKi8KKwlpZiAoIWludGVsX2hhc19zYWd2KGRldl9wcml2KSkKKwkJcmV0dXJu
OworCisJbmV3X2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9id19uZXdfc3RhdGUoc3RhdGUp
OworCWlmICghbmV3X2J3X3N0YXRlKSB7CisJCVdBUk4oMSwgIkNvdWxkIG5vdCBnZXQgbmV3IGJ3
X3N0YXRlXG4iKTsKKwkJcmV0dXJuOworCX0KKworCWlmICgoSU5URUxfR0VOKGRldl9wcml2KSA8
IDExKSAmJiAhaW50ZWxfY2FuX2VuYWJsZV9zYWd2KG5ld19id19zdGF0ZSkpIHsKKwkJaW50ZWxf
ZGlzYWJsZV9zYWd2KGRldl9wcml2KTsKKwkJcmV0dXJuOworCX0KKworCW9sZF9id19zdGF0ZSA9
IGludGVsX2F0b21pY19nZXRfYndfb2xkX3N0YXRlKHN0YXRlKTsKKwlpZiAoIW9sZF9id19zdGF0
ZSkgeworCQlXQVJOKDEsICJDb3VsZCBub3QgZ2V0IG9sZCBid19zdGF0ZVxuIik7CisJCXJldHVy
bjsKKwl9CisKKwkvKgorCSAqIE5vdGhpbmcgdG8gbWFzaworCSAqLworCWlmIChuZXdfYndfc3Rh
dGUtPnFndl9wb2ludHNfbWFzayA9PSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzaykKKwkJ
cmV0dXJuOworCisJbmV3X21hc2sgPSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzayB8IG5l
d19id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrOworCisJLyoKKwkgKiBJZiBuZXcgbWFzayBpcyB6
ZXJvIC0gbWVhbnMgdGhlcmUgaXMgbm90aGluZyB0byBtYXNrLAorCSAqIHdlIGNhbiBvbmx5IHVu
bWFzaywgd2hpY2ggc2hvdWxkIGJlIGRvbmUgaW4gdW5tYXNrLgorCSAqLworCWlmICghbmV3X21h
c2spCisJCXJldHVybjsKKworCS8qCisJICogUmVzdHJpY3QgcmVxdWlyZWQgcWd2IHBvaW50cyBi
ZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24uCisJICogQWNjb3JkaW5nIHRvIEJTcGVj
IHdlIGNhbid0IG1hc2sgYW5kIHVubWFzayBxZ3YgcG9pbnRzIGF0IHRoZSBzYW1lCisJICogdGlt
ZS4gQWxzbyBtYXNraW5nIHNob3VsZCBiZSBkb25lIGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmln
dXJhdGlvbgorCSAqIGFuZCB1bm1hc2tpbmcgYWZ0ZXJ3YXJkcy4KKwkgKi8KKwlyZXQgPSBpY2xf
cGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhkZXZfcHJpdiwgbmV3X21hc2spOworCWlmIChyZXQg
PCAwKQorCQlEUk1fREVCVUdfS01TKCJDb3VsZCBub3QgbWFzayByZXF1aXJlZCBxZ3YgcG9pbnRz
KCVkKVxuIiwKKwkJCSAgICAgIHJldCk7Cit9CisKK3ZvaWQgaW50ZWxfc2Fndl9wb3N0X3BsYW5l
X3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlpbnQgcmV0OworCXN0cnVjdCBpbnRlbF9id19z
dGF0ZSAqbmV3X2J3X3N0YXRlID0gTlVMTDsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm9sZF9i
d19zdGF0ZSA9IE5VTEw7CisJdTMyIG5ld19tYXNrID0gMDsKKworCS8qCisJICogSnVzdCByZXR1
cm4gaWYgd2UgY2FuJ3QgY29udHJvbCBTQUdWIG9yIGRvbid0IGhhdmUgaXQuCisJICogVGhpcyBp
cyBkaWZmZXJlbnQgZnJvbSBzaXR1YXRpb24gd2hlbiB3ZSBoYXZlIFNBR1YgYnV0IGp1c3QgY2Fu
J3QKKwkgKiBhZmZvcmQgaXQgZHVlIHRvIERCdWYgbGltaXRhdGlvbiAtIGluIGNhc2UgaWYgU0FH
ViBpcyBjb21wbGV0ZWx5CisJICogZGlzYWJsZWQgaW4gYSBCSU9TLCB3ZSBhcmUgbm90IGV2ZW4g
YWxsb3dlZCB0byBzZW5kIGEgUENvZGUgcmVxdWVzdCwKKwkgKiBhcyBpdCB3aWxsIHRocm93IGFu
IGVycm9yLiBTbyBoYXZlIHRvIGNoZWNrIGl0IGhlcmUuCisJICovCisJaWYgKCFpbnRlbF9oYXNf
c2FndihkZXZfcHJpdikpCisJCXJldHVybjsKKworCW5ld19id19zdGF0ZSA9IGludGVsX2F0b21p
Y19nZXRfYndfbmV3X3N0YXRlKHN0YXRlKTsKKwlpZiAoIW5ld19id19zdGF0ZSkgeworCQlXQVJO
KDEsICJDb3VsZCBub3QgZ2V0IG5ldyBid19zdGF0ZVxuIik7CisJCXJldHVybjsKKwl9CisKKwlp
ZiAoKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkgJiYgaW50ZWxfY2FuX2VuYWJsZV9zYWd2KG5l
d19id19zdGF0ZSkpIHsKKwkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3ByaXYpOworCQlyZXR1cm47
CisJfQorCisJb2xkX2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9id19vbGRfc3RhdGUoc3Rh
dGUpOworCWlmICghb2xkX2J3X3N0YXRlKSB7CisJCVdBUk4oMSwgIkNvdWxkIG5vdCBnZXQgb2xk
IGJ3X3N0YXRlXG4iKTsKKwkJcmV0dXJuOworCX0KKworCS8qCisJICogTm90aGluZyB0byB1bm1h
c2sKKwkgKi8KKwlpZiAobmV3X2J3X3N0YXRlLT5xZ3ZfcG9pbnRzX21hc2sgPT0gb2xkX2J3X3N0
YXRlLT5xZ3ZfcG9pbnRzX21hc2spCisJCXJldHVybjsKKworCW5ld19tYXNrID0gbmV3X2J3X3N0
YXRlLT5xZ3ZfcG9pbnRzX21hc2s7CisKKwkvKgorCSAqIEFsbG93IHJlcXVpcmVkIHFndiBwb2lu
dHMgYWZ0ZXIgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24uCisJICogQWNjb3JkaW5nIHRvIEJT
cGVjIHdlIGNhbid0IG1hc2sgYW5kIHVubWFzayBxZ3YgcG9pbnRzIGF0IHRoZSBzYW1lCisJICog
dGltZS4gQWxzbyBtYXNraW5nIHNob3VsZCBiZSBkb25lIGJlZm9yZSB1cGRhdGluZyB0aGUgY29u
ZmlndXJhdGlvbgorCSAqIGFuZCB1bm1hc2tpbmcgYWZ0ZXJ3YXJkcy4KKwkgKi8KKwlyZXQgPSBp
Y2xfcGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhkZXZfcHJpdiwgbmV3X21hc2spOworCWlmIChy
ZXQgPCAwKQorCQlEUk1fREVCVUdfS01TKCJDb3VsZCBub3QgdW5tYXNrIHJlcXVpcmVkIHFndiBw
b2ludHMoJWQpXG4iLAorCQkJICAgICAgcmV0KTsKK30KKwogc3RhdGljIGJvb2wgaWNsX2Nhbl9l
bmFibGVfc2Fndl9vbl9waXBlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQog
ewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldjsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9wbS5oCmluZGV4IDVmYjMyZGI0YWJjNS4uNzkzYTRhZGQ5ODMxIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3BtLmgKQEAgLTQyLDYgKzQyLDggQEAgdm9pZCBza2xfcGlwZV93
bV9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJCQkgICAgICBzdHJ1Y3Qg
c2tsX3BpcGVfd20gKm91dCk7CiB2b2lkIGc0eF93bV9zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCB2bHZfd21fc2FuaXRpemUoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KTsKK3ZvaWQgaW50ZWxfc2Fndl9wcmVfcGxhbmVfdXBkYXRlKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKTsKK3ZvaWQgaW50ZWxfc2Fndl9wb3N0X3Bs
YW5lX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7CiBib29sIGludGVs
X2hhc19zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBib29sIGludGVs
X2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlKTsKIGludCBp
bnRlbF9lbmFibGVfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotLSAK
Mi4yNC4xLjQ4NS5nYWQwNWEzZDhlNQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4Cg==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1BC0F19A300
	for <lists+intel-gfx@lfdr.de>; Wed,  1 Apr 2020 02:40:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 812DF6E8B0;
	Wed,  1 Apr 2020 00:39:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 053BB6E8B0
 for <intel-gfx@lists.freedesktop.org>; Wed,  1 Apr 2020 00:39:55 +0000 (UTC)
IronPort-SDR: nN0CQ5JZfgCLik6YAuNpo+x7unQ2doEPChsc8y7xHX0wnseBMEbKLzj2mAL4YMOkO2vaSuuFoK
 EFKS6UOAPfLQ==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 31 Mar 2020 17:39:55 -0700
IronPort-SDR: OJow4Ajj+f1WTIX40Em2jPEIhIASBs7pI++bpLLL+5ccHouF5Ic36+t3LGUVut/97E+Pmvg9Ad
 Yws2dMzMjhJA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,329,1580803200"; d="scan'208";a="295169811"
Received: from akahan1-mobl3.amr.corp.intel.com (HELO
 josouza-MOBL2.amr.corp.intel.com) ([10.252.143.47])
 by FMSMGA003.fm.intel.com with ESMTP; 31 Mar 2020 17:39:54 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 31 Mar 2020 17:41:19 -0700
Message-Id: <20200401004120.408586-5-jose.souza@intel.com>
X-Mailer: git-send-email 2.26.0
In-Reply-To: <20200401004120.408586-1-jose.souza@intel.com>
References: <20200401004120.408586-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 5/6] drm/i915/tc/icl: Implement TC cold sequences
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Cooper Chiou <cooper.chiou@intel.com>,
 Kai-Heng Feng <kai.heng.feng@canonical.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhpcyBpcyByZXF1aXJlZCBmb3IgbGVnYWN5L3N0YXRpYyBUQyBwb3J0cyBhcyBJT00gaXMgbm90
IGF3YXJlIG9mCnRoZSBjb25uZWN0aW9uIGFuZCB3aWxsIG5vdCB0cmlnZ2VyIHRoZSBUQyBjb2xk
IGV4aXQuCgpKdXN0IHJlcXVlc3QgUENPREUgdG8gZXhpdCBUQ0NPTEQgaXMgbm90IGVub3VnaCBh
cyBpdCBjb3VsZCBlbnRlcgphZ2FpbiBiZSBkcml2ZXIgbWFrZXMgdXNlIG9mIHRoZSBwb3J0LCB0
byBwcmV2ZW50IGl0IEJTcGVjIHN0YXRlcyB0aGF0CmF1eCBwb3dlcndlbGwgc2hvdWxkIGJlIGhl
bGQuCgpTbyBoZXJlIGVtYmVkZGluZyB0aGUgVEMgY29sZCBleGl0IHNlcXVlbmNlIGludG8gSUNM
IGF1eCBlbmFibGUsCml0IHdpbGwgZW5hYmxlIGF1eCwgcmVxdWVzdCB0YyBjb2xkIGV4aXQgYW5k
IGRlcGVuZGluZyBpbiB0aGUgVEMgbGl2ZQpzdGF0ZSBjb250aW51ZSB3aXRoIHRoZSByZWd1bGFy
IGF1eCBlbmFibGUgc2VxdWVuY2UuCgpBbmQgdGhlbiB0dXJuaW5nIG9uIGF1eCBwb3dlciB3ZWxs
IGR1cmluZyB0YyBsb2NrIGFuZCB0dXJuaW5nIG9mZgpkdXJpbmcgdW5sb2NrIGJvdGggZGVwZW5k
aW5nIGludG8gdGhlIFRDIHBvcnQgcmVmY291bnQuCgpCU3BlYzogMjE3NTAKRml4ZXM6IGh0dHBz
Oi8vZ2l0bGFiLmZyZWVkZXNrdG9wLm9yZy9kcm0vaW50ZWwvaXNzdWVzLzEyOTYKQ2M6IEltcmUg
RGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4KQ2M6IENvb3BlciBDaGlvdSA8Y29vcGVyLmNoaW91
QGludGVsLmNvbT4KQ2M6IEthaS1IZW5nIEZlbmcgPGthaS5oZW5nLmZlbmdAY2Fub25pY2FsLmNv
bT4KU2lnbmVkLW9mZi1ieTogSm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRl
bC5jb20+Ci0tLQoKV2lsbCBydW4gc29tZSB0ZXN0cyBpbiB0aGUgb2ZmaWNlIHdpdGggVEJUIGRv
Y2tzdGF0aW9uIHRvIGNoZWNrIGlmCml0IHdpbGwgYmUgYSBpc3N1ZSBrZWVwIGJvdGggYXV4IGVu
YWJsZWQuIE90aGVyd2lzZSBtb3JlIGNoYW5nZXMgd2lsbApiZSByZXF1aXJlZCBoZXJlLgoKIC4u
Li9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYyAgICB8IDEyICsrKystCiAu
Li4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgMSArCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMgICAgICAgfCA0NyArKysrKysrKysr
KysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmggICAgICAg
fCAgMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oICAgICAgICAgICAgICAgfCAg
MSArCiA1IGZpbGVzIGNoYW5nZWQsIDU5IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bv
d2VyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIu
YwppbmRleCBkYmQ2MTUxN2JhNjMuLjFjY2Q1N2Q2NDVjNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKQEAgLTU5Miw5ICs1OTIs
MTcgQEAgaWNsX3RjX3BoeV9hdXhfcG93ZXJfd2VsbF9lbmFibGUoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAogCiAJX2hzd19wb3dlcl93ZWxsX2VuYWJsZShkZXZfcHJpdiwgcG93
ZXJfd2VsbCk7CiAKLQkvKiBUT0RPIElDTCBUQyBjb2xkIGhhbmRsaW5nICovCisJaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPT0gMTEpCisJCWludGVsX3RjX2ljbF90Y19jb2xkX2V4aXQoZGV2X3By
aXYpOwogCi0JX2hzd19wb3dlcl93ZWxsX2NvbnRpbnVlX2VuYWJsZShkZXZfcHJpdiwgcG93ZXJf
d2VsbCk7CisJLyoKKwkgKiBUbyBhdm9pZCBwb3dlciB3ZWxsIGVuYWJsZSB0aW1lb3V0cyB3aGVu
IGRpc2Nvbm5lY3RlZCBvciBpbiBUQlQgbW9kZQorCSAqIHdoZW4gZG9pbmcgdGhlIFRDIGNvbGQg
ZXhpdCBzZXF1ZW5jZSBmb3IgR0VOMTEKKwkgKi8KKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSAh
PSAxMSB8fAorCSAgICAoaW50ZWxfdGNfcG9ydF9saXZlX3N0YXR1c19tYXNrKGRpZ19wb3J0KSAm
CisJICAgICAoVENfUE9SVF9MRUdBQ1kgfCBUQ19QT1JUX0RQX0FMVCkpKQorCQlfaHN3X3Bvd2Vy
X3dlbGxfY29udGludWVfZW5hYmxlKGRldl9wcml2LCBwb3dlcl93ZWxsKTsKIAogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDEyICYmICFwb3dlcl93ZWxsLT5kZXNjLT5oc3cuaXNfdGNfdGJ0
KSB7CiAJCWVudW0gdGNfcG9ydCB0Y19wb3J0OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCAxNzZhYjVmMWU4NjcuLmE5YTRh
M2MxYjRkNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKQEAgLTEzOTEsNiArMTM5MSw3IEBAIHN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgewogCWVudW0gaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4gZGRpX2lvX3Bvd2VyX2Rv
bWFpbjsKIAlzdHJ1Y3QgbXV0ZXggdGNfbG9jazsJLyogcHJvdGVjdHMgdGhlIFR5cGVDIHBvcnQg
bW9kZSAqLwogCWludGVsX3dha2VyZWZfdCB0Y19sb2NrX3dha2VyZWY7CisJaW50ZWxfd2FrZXJl
Zl90IHRjX2NvbGRfd2FrZXJlZjsKIAlpbnQgdGNfbGlua19yZWZjb3VudDsKIAlib29sIHRjX2xl
Z2FjeV9wb3J0OjE7CiAJY2hhciB0Y19wb3J0X25hbWVbOF07CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3RjLmMKaW5kZXggZDk0NGJlOTM1NDIzLi5iNmQ2N2YwNjllZjcgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfdGMuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMKQEAgLTcsNiArNyw3IEBACiAjaW5j
bHVkZSAiaW50ZWxfZGlzcGxheS5oIgogI2luY2x1ZGUgImludGVsX2Rpc3BsYXlfdHlwZXMuaCIK
ICNpbmNsdWRlICJpbnRlbF9kcF9tc3QuaCIKKyNpbmNsdWRlICJpbnRlbF9zaWRlYmFuZC5oIgog
I2luY2x1ZGUgImludGVsX3RjLmgiCiAKIHN0YXRpYyBjb25zdCBjaGFyICp0Y19wb3J0X21vZGVf
bmFtZShlbnVtIHRjX3BvcnRfbW9kZSBtb2RlKQpAQCAtNTA2LDYgKzUwNywxMyBAQCBzdGF0aWMg
dm9pZCBfX2ludGVsX3RjX3BvcnRfbG9jayhzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCwKIAogCW11dGV4X2xvY2soJmRpZ19wb3J0LT50Y19sb2NrKTsKIAorCWlmIChJTlRFTF9H
RU4oaTkxNSkgPT0gMTEgJiYgZGlnX3BvcnQtPnRjX2xpbmtfcmVmY291bnQgPT0gMCkgeworCQll
bnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGF1eF9kb21haW47CisKKwkJYXV4X2RvbWFp
biA9IGludGVsX2F1eF9jaF90b19wb3dlcl9kb21haW4oZGlnX3BvcnQtPmF1eF9jaCk7CisJCWRp
Z19wb3J0LT50Y19jb2xkX3dha2VyZWYgPSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldChpOTE1LCBh
dXhfZG9tYWluKTsKKwl9CisKIAlpZiAoIWRpZ19wb3J0LT50Y19saW5rX3JlZmNvdW50ICYmCiAJ
ICAgIGludGVsX3RjX3BvcnRfbmVlZHNfcmVzZXQoZGlnX3BvcnQpKQogCQlpbnRlbF90Y19wb3J0
X3Jlc2V0X21vZGUoZGlnX3BvcnQsIHJlcXVpcmVkX2xhbmVzKTsKQEAgLTUxOSwxNSArNTI3LDMw
IEBAIHZvaWQgaW50ZWxfdGNfcG9ydF9sb2NrKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRp
Z19wb3J0KQogCV9faW50ZWxfdGNfcG9ydF9sb2NrKGRpZ19wb3J0LCAxKTsKIH0KIAorc3RhdGlj
IHZvaWQgaWNsX3RjX2NvbGRfdW5ibG9jayhzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZGlnX3Bv
cnQtPmJhc2UuYmFzZS5kZXYpOworCWVudW0gaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4gYXV4
X2RvbWFpbjsKKwlpbnRlbF93YWtlcmVmX3QgdGNfY29sZF93YWtlcmVmOworCisJaWYgKElOVEVM
X0dFTihpOTE1KSAhPSAxMSB8fCBkaWdfcG9ydC0+dGNfbGlua19yZWZjb3VudCA+IDApCisJCXJl
dHVybjsKKworCXRjX2NvbGRfd2FrZXJlZiA9IGZldGNoX2FuZF96ZXJvKCZkaWdfcG9ydC0+dGNf
Y29sZF93YWtlcmVmKTsKKwlhdXhfZG9tYWluID0gaW50ZWxfYXV4X2NoX3RvX3Bvd2VyX2RvbWFp
bihkaWdfcG9ydC0+YXV4X2NoKTsKKwlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF9hc3luYyhpOTE1
LCBhdXhfZG9tYWluLCB0Y19jb2xkX3dha2VyZWYpOworfQorCiB2b2lkIGludGVsX3RjX3BvcnRf
dW5sb2NrKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQogewogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7
CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWYgPSBmZXRjaF9hbmRfemVybygmZGlnX3BvcnQtPnRj
X2xvY2tfd2FrZXJlZik7CiAKKwlpY2xfdGNfY29sZF91bmJsb2NrKGRpZ19wb3J0KTsKKwogCW11
dGV4X3VubG9jaygmZGlnX3BvcnQtPnRjX2xvY2spOwogCi0JaW50ZWxfZGlzcGxheV9wb3dlcl9w
dXRfYXN5bmMoaTkxNSwgUE9XRVJfRE9NQUlOX0RJU1BMQVlfQ09SRSwKLQkJCQkgICAgICB3YWtl
cmVmKTsKKwlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF9hc3luYyhpOTE1LCBQT1dFUl9ET01BSU5f
RElTUExBWV9DT1JFLCB3YWtlcmVmKTsKIH0KIAogYm9vbCBpbnRlbF90Y19wb3J0X3JlZl9oZWxk
KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQpAQCAtNTQ4LDYgKzU3MSw3IEBA
IHZvaWQgaW50ZWxfdGNfcG9ydF9wdXRfbGluayhzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpk
aWdfcG9ydCkKIHsKIAltdXRleF9sb2NrKCZkaWdfcG9ydC0+dGNfbG9jayk7CiAJZGlnX3BvcnQt
PnRjX2xpbmtfcmVmY291bnQtLTsKKwlpY2xfdGNfY29sZF91bmJsb2NrKGRpZ19wb3J0KTsKIAlt
dXRleF91bmxvY2soJmRpZ19wb3J0LT50Y19sb2NrKTsKIH0KIApAQCAtNTY4LDMgKzU5MiwyMiBA
QCB2b2lkIGludGVsX3RjX3BvcnRfaW5pdChzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCwgYm9vbCBpc19sZWdhY3kpCiAJZGlnX3BvcnQtPnRjX2xpbmtfcmVmY291bnQgPSAwOwog
CXRjX3BvcnRfbG9hZF9maWFfcGFyYW1zKGk5MTUsIGRpZ19wb3J0KTsKIH0KKwordm9pZCBpbnRl
bF90Y19pY2xfdGNfY29sZF9leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQorewor
CWludCByZXQ7CisKKwlkbyB7CisJCXJldCA9IHNhbmR5YnJpZGdlX3Bjb2RlX3dyaXRlX3RpbWVv
dXQoaTkxNSwKKwkJCQkJCSAgICAgIElDTF9QQ09ERV9FWElUX1RDQ09MRCwKKwkJCQkJCSAgICAg
IDAsIDI1MCwgMSk7CisKKwl9IHdoaWxlIChyZXQgPT0gLUVBR0FJTik7CisKKwlpZiAoIXJldCkK
KwkJbXNsZWVwKDEpOworCisJaWYgKHJldCkKKwkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIlRD
IGNvbGQgYmxvY2sgJXNcbiIsCisJCQkgICAgKHJldCA9PSAwID8gInN1Y2NlZWRlZCIgOiAiZmFp
bGVkIikpOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF90Yy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5oCmluZGV4IGEx
YWZjZWU0ODgxOC4uMTY4ZDg4OTZmY2ZkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX3RjLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF90Yy5oCkBAIC05LDYgKzksNyBAQAogI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+CiAjaW5j
bHVkZSA8bGludXgvdHlwZXMuaD4KIAorc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CiBzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0OwogCiBib29sIGludGVsX3RjX3BvcnRfY29ubmVjdGVkKHN0cnVj
dCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KTsKQEAgLTI5LDUgKzMwLDYgQEAgYm9vbCBp
bnRlbF90Y19wb3J0X3JlZl9oZWxkKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0
KTsKIHZvaWQgaW50ZWxfdGNfcG9ydF9pbml0KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRp
Z19wb3J0LCBib29sIGlzX2xlZ2FjeSk7CiAKIHUzMiBpbnRlbF90Y19wb3J0X2xpdmVfc3RhdHVz
X21hc2soc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpOwordm9pZCBpbnRlbF90
Y19pY2xfdGNfY29sZF9leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKIAogI2Vu
ZGlmIC8qIF9fSU5URUxfVENfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3JlZy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaAppbmRleCAxNzQ4
NDM0NWNiODAuLmIxMTE4MTVkNjU5NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9yZWcuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCkBAIC05MTA3
LDYgKzkxMDcsNyBAQCBlbnVtIHsKICNkZWZpbmUgICAgIElDTF9QQ09ERV9NRU1fU1NfUkVBRF9R
R1ZfUE9JTlRfSU5GTyhwb2ludCkJKCgocG9pbnQpIDw8IDE2KSB8ICgweDEgPDwgOCkpCiAjZGVm
aW5lICAgR0VONl9QQ09ERV9SRUFEX0RfQ09NUAkJMHgxMAogI2RlZmluZSAgIEdFTjZfUENPREVf
V1JJVEVfRF9DT01QCQkweDExCisjZGVmaW5lICAgSUNMX1BDT0RFX0VYSVRfVENDT0xECQkJMHgx
MgogI2RlZmluZSAgIEhTV19QQ09ERV9ERV9XUklURV9GUkVRX1JFUQkJMHgxNwogI2RlZmluZSAg
IERJU1BMQVlfSVBTX0NPTlRST0wJCQkweDE5CiAgICAgICAgICAgICAvKiBTZWUgYWxzbyBJUFNf
Q1RMICovCi0tIAoyLjI2LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeAo=

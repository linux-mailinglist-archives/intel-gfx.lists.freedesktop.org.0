Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id EC4A5DEA52
	for <lists+intel-gfx@lfdr.de>; Mon, 21 Oct 2019 13:01:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6BE4D89D7D;
	Mon, 21 Oct 2019 11:01:49 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CF9F189A16;
 Mon, 21 Oct 2019 11:01:47 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18911184-1500050 
 for multiple; Mon, 21 Oct 2019 12:01:41 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 21 Oct 2019 12:01:38 +0100
Message-Id: <20191021110138.16731-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191021110138.16731-1-chris@chris-wilson.co.uk>
References: <20191021110138.16731-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 2/2] i915/gem_ctx_isolation: Check engine
 relative registers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U29tZSBvZiB0aGUgbm9uLXByaXZpbGVnZWQgcmVnaXN0ZXJzIGFyZSBhdCB0aGUgc2FtZSBvZmZz
ZXQgb24gZWFjaAplbmdpbmUuIFdlIGNhbiBpbXByb3ZlIG91ciBjb3ZlcmFnZSBmb3IgdW5rbm93
biBIVyBsYXlvdXQgYnkgdXNpbmcgdGhlCnJlcG9ydGVkIGVuZ2luZS0+bW1pb19iYXNlIGZvciBy
ZWxhdGl2ZSBvZmZzZXRzLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJp
cy13aWxzb24uY28udWs+Ci0tLQogdGVzdHMvaTkxNS9nZW1fY3R4X2lzb2xhdGlvbi5jIHwgMTYw
ICsrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDk5IGlu
c2VydGlvbnMoKyksIDYxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3Rlc3RzL2k5MTUvZ2Vt
X2N0eF9pc29sYXRpb24uYyBiL3Rlc3RzL2k5MTUvZ2VtX2N0eF9pc29sYXRpb24uYwppbmRleCA2
YWEyNzEzM2MuLjJlZDcxZGQzNCAxMDA2NDQKLS0tIGEvdGVzdHMvaTkxNS9nZW1fY3R4X2lzb2xh
dGlvbi5jCisrKyBiL3Rlc3RzL2k5MTUvZ2VtX2N0eF9pc29sYXRpb24uYwpAQCAtNzAsNiArNzAs
NyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IG5hbWVkX3JlZ2lzdGVyIHsKIAl1aW50MzJfdCBpZ25v
cmVfYml0czsKIAl1aW50MzJfdCB3cml0ZV9tYXNrOyAvKiBzb21lIHJlZ2lzdGVycyBiaXRzIGRv
IG5vdCBleGlzdCAqLwogCWJvb2wgbWFza2VkOworCWJvb2wgcmVsYXRpdmU7CiB9IG5vbnByaXZf
cmVnaXN0ZXJzW10gPSB7CiAJeyAiTk9QSUQiLCBOT0NUWCwgUkNTMCwgMHgyMDk0IH0sCiAJeyAi
TUlfUFJFRElDQVRFX1JFU1VMVF8yIiwgTk9DVFgsIFJDUzAsIDB4MjNiYyB9LApAQCAtMTUwLDY3
ICsxNTEsNDUgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBuYW1lZF9yZWdpc3RlciB7CiAJeyAiSEFM
Rl9TTElDRV9DSElDS0VONyIsIEdFTl9SQU5HRSgxMSwgMTEpLCBSQ1MwLCAweGUxOTQsIC5tYXNr
ZWQgPSB0cnVlIH0sCiAJeyAiU0FNUExFUl9NT0RFIiwgR0VOX1JBTkdFKDExLCAxMSksIFJDUzAs
IDB4ZTE4YywgLm1hc2tlZCA9IHRydWUgfSwKIAotCXsgIkJDU19HUFIiLCBHRU45LCBCQ1MwLCAw
eDIyNjAwLCAzMiB9LAogCXsgIkJDU19TV0NUUkwiLCBHRU44LCBCQ1MwLCAweDIyMjAwLCAud3Jp
dGVfbWFzayA9IDB4MywgLm1hc2tlZCA9IHRydWUgfSwKIAogCXsgIk1GQ19WREJPWDEiLCBOT0NU
WCwgVkNTMCwgMHgxMjgwMCwgNjQgfSwKIAl7ICJNRkNfVkRCT1gyIiwgTk9DVFgsIFZDUzEsIDB4
MWM4MDAsIDY0IH0sCiAKLQl7ICJWQ1MwX0dQUiIsIEdFTl9SQU5HRSg5LCAxMCksIFZDUzAsIDB4
MTI2MDAsIDMyIH0sCi0JeyAiVkNTMV9HUFIiLCBHRU5fUkFOR0UoOSwgMTApLCBWQ1MxLCAweDFj
NjAwLCAzMiB9LAotCXsgIlZFQ1NfR1BSIiwgR0VOX1JBTkdFKDksIDEwKSwgVkVDUzAsIDB4MWE2
MDAsIDMyIH0sCi0KLQl7ICJWQ1MwX0dQUiIsIEdFTjExLCBWQ1MwLCAweDFjMDYwMCwgMzIgfSwK
LQl7ICJWQ1MxX0dQUiIsIEdFTjExLCBWQ1MxLCAweDFjNDYwMCwgMzIgfSwKLQl7ICJWQ1MyX0dQ
UiIsIEdFTjExLCBWQ1MyLCAweDFkMDYwMCwgMzIgfSwKLQl7ICJWQ1MzX0dQUiIsIEdFTjExLCBW
Q1MzLCAweDFkNDYwMCwgMzIgfSwKLQl7ICJWRUNTX0dQUiIsIEdFTjExLCBWRUNTMCwgMHgxYzg2
MDAsIDMyIH0sCisJeyAieENTX0dQUiIsIEdFTjksIEFMTCwgMHg2MDAsIDMyLCAucmVsYXRpdmUg
PSB0cnVlIH0sCiAKIAl7fQogfSwgaWdub3JlX3JlZ2lzdGVyc1tdID0gewogCXsgIlJDUyB0aW1l
c3RhbXAiLCBHRU42LCB+MHUsIDB4MjM1OCB9LAogCXsgIkJDUyB0aW1lc3RhbXAiLCBHRU43LCB+
MHUsIDB4MjIzNTggfSwKIAotCXsgIlZDUzAgdGltZXN0YW1wIiwgR0VOX1JBTkdFKDcsIDEwKSwg
fjB1LCAweDEyMzU4IH0sCi0JeyAiVkNTMSB0aW1lc3RhbXAiLCBHRU5fUkFOR0UoNywgMTApLCB+
MHUsIDB4MWMzNTggfSwKLQl7ICJWRUNTIHRpbWVzdGFtcCIsIEdFTl9SQU5HRSg4LCAxMCksIH4w
dSwgMHgxYTM1OCB9LAotCi0JeyAiVkNTMCB0aW1lc3RhbXAiLCBHRU4xMSwgfjB1LCAweDFjMDM1
OCB9LAotCXsgIlZDUzEgdGltZXN0YW1wIiwgR0VOMTEsIH4wdSwgMHgxYzQzNTggfSwKLQl7ICJW
Q1MyIHRpbWVzdGFtcCIsIEdFTjExLCB+MHUsIDB4MWQwMzU4IH0sCi0JeyAiVkNTMyB0aW1lc3Rh
bXAiLCBHRU4xMSwgfjB1LCAweDFkNDM1OCB9LAotCXsgIlZFQ1MgdGltZXN0YW1wIiwgR0VOMTEs
IH4wdSwgMHgxYzgzNTggfSwKKwl7ICJ4Q1MgdGltZXN0YW1wIiwgR0VOOCwgQUxMLCAweDM1OCwg
LnJlbGF0aXZlID0gdHJ1ZSB9LAogCiAJLyogaHVjIHJlYWQgb25seSAqLwotCXsgIkJTRDAgMHgy
MDAwIiwgR0VOMTEsIH4wdSwgMHgxYzAwMDAgKyAweDIwMDAgfSwKLQl7ICJCU0QwIDB4MjAwMCIs
IEdFTjExLCB+MHUsIDB4MWMwMDAwICsgMHgyMDE0IH0sCi0JeyAiQlNEMCAweDIwMDAiLCBHRU4x
MSwgfjB1LCAweDFjMDAwMCArIDB4MjNiMCB9LAotCi0JeyAiQlNEMSAweDIwMDAiLCBHRU4xMSwg
fjB1LCAweDFjNDAwMCArIDB4MjAwMCB9LAotCXsgIkJTRDEgMHgyMDAwIiwgR0VOMTEsIH4wdSwg
MHgxYzQwMDAgKyAweDIwMTQgfSwKLQl7ICJCU0QxIDB4MjAwMCIsIEdFTjExLCB+MHUsIDB4MWM0
MDAwICsgMHgyM2IwIH0sCi0KLQl7ICJCU0QyIDB4MjAwMCIsIEdFTjExLCB+MHUsIDB4MWQwMDAw
ICsgMHgyMDAwIH0sCi0JeyAiQlNEMiAweDIwMDAiLCBHRU4xMSwgfjB1LCAweDFkMDAwMCArIDB4
MjAxNCB9LAotCXsgIkJTRDIgMHgyMDAwIiwgR0VOMTEsIH4wdSwgMHgxZDAwMDAgKyAweDIzYjAg
fSwKLQotCXsgIkJTRDMgMHgyMDAwIiwgR0VOMTEsIH4wdSwgMHgxZDQwMDAgKyAweDIwMDAgfSwK
LQl7ICJCU0QzIDB4MjAwMCIsIEdFTjExLCB+MHUsIDB4MWQ0MDAwICsgMHgyMDE0IH0sCi0JeyAi
QlNEMyAweDIwMDAiLCBHRU4xMSwgfjB1LCAweDFkNDAwMCArIDB4MjNiMCB9LAorCXsgIkJTRCAw
eDIwMDAiLCBHRU4xMSwgQUxMLCAweDIwMDAsIC5yZWxhdGl2ZSA9IHRydWUgfSwKKwl7ICJCU0Qg
MHgyMDE0IiwgR0VOMTEsIEFMTCwgMHgyMDE0LCAucmVsYXRpdmUgPSB0cnVlIH0sCisJeyAiQlNE
IDB4MjNiMCIsIEdFTjExLCBBTEwsIDB4MjNiMCwgLnJlbGF0aXZlID0gdHJ1ZX0sCiAKIAl7fQog
fTsKIAotc3RhdGljIGNvbnN0IGNoYXIgKnJlZ2lzdGVyX25hbWUodWludDMyX3Qgb2Zmc2V0LCBj
aGFyICpidWYsIHNpemVfdCBsZW4pCitzdGF0aWMgY29uc3QgY2hhciAqCityZWdpc3Rlcl9uYW1l
KHVpbnQzMl90IG9mZnNldCwgdWludDMyX3QgbW1pb19iYXNlLCBjaGFyICpidWYsIHNpemVfdCBs
ZW4pCiB7CiAJZm9yIChjb25zdCBzdHJ1Y3QgbmFtZWRfcmVnaXN0ZXIgKnIgPSBub25wcml2X3Jl
Z2lzdGVyczsgci0+bmFtZTsgcisrKSB7CiAJCXVuc2lnbmVkIGludCB3aWR0aCA9IHItPmNvdW50
ID8gNCpyLT5jb3VudCA6IDQ7Ci0JCWlmIChvZmZzZXQgPj0gci0+b2Zmc2V0ICYmIG9mZnNldCA8
IHItPm9mZnNldCArIHdpZHRoKSB7CisJCXVpbnQzMl90IGJhc2U7CisKKwkJYmFzZSA9IHItPm9m
ZnNldDsKKwkJaWYgKHItPnJlbGF0aXZlKQorCQkJYmFzZSArPSBtbWlvX2Jhc2U7CisKKwkJaWYg
KG9mZnNldCA+PSBiYXNlICYmIG9mZnNldCA8IGJhc2UgKyB3aWR0aCkgewogCQkJaWYgKHItPmNv
dW50IDw9IDEpCiAJCQkJcmV0dXJuIHItPm5hbWU7CiAKIAkJCXNucHJpbnRmKGJ1ZiwgbGVuLCAi
JXNbJWRdIiwKLQkJCQkgci0+bmFtZSwgKG9mZnNldCAtIHItPm9mZnNldCkvNCk7CisJCQkJIHIt
Pm5hbWUsIChvZmZzZXQgLSBiYXNlKSAvIDQpOwogCQkJcmV0dXJuIGJ1ZjsKIAkJfQogCX0KQEAg
LTIxOCwyMiArMTk3LDM1IEBAIHN0YXRpYyBjb25zdCBjaGFyICpyZWdpc3Rlcl9uYW1lKHVpbnQz
Ml90IG9mZnNldCwgY2hhciAqYnVmLCBzaXplX3QgbGVuKQogCXJldHVybiAidW5rbm93biI7CiB9
CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgbmFtZWRfcmVnaXN0ZXIgKmxvb2t1cF9yZWdpc3Rlcih1
aW50MzJfdCBvZmZzZXQpCitzdGF0aWMgY29uc3Qgc3RydWN0IG5hbWVkX3JlZ2lzdGVyICoKK2xv
b2t1cF9yZWdpc3Rlcih1aW50MzJfdCBvZmZzZXQsIHVpbnQzMl90IG1taW9fYmFzZSkKIHsKIAlm
b3IgKGNvbnN0IHN0cnVjdCBuYW1lZF9yZWdpc3RlciAqciA9IG5vbnByaXZfcmVnaXN0ZXJzOyBy
LT5uYW1lOyByKyspIHsKIAkJdW5zaWduZWQgaW50IHdpZHRoID0gci0+Y291bnQgPyA0KnItPmNv
dW50IDogNDsKLQkJaWYgKG9mZnNldCA+PSByLT5vZmZzZXQgJiYgb2Zmc2V0IDwgci0+b2Zmc2V0
ICsgd2lkdGgpCisJCXVpbnQzMl90IGJhc2U7CisKKwkJYmFzZSA9IHItPm9mZnNldDsKKwkJaWYg
KHItPnJlbGF0aXZlKQorCQkJYmFzZSArPSBtbWlvX2Jhc2U7CisKKwkJaWYgKG9mZnNldCA+PSBi
YXNlICYmIG9mZnNldCA8IGJhc2UgKyB3aWR0aCkKIAkJCXJldHVybiByOwogCX0KIAogCXJldHVy
biBOVUxMOwogfQogCi1zdGF0aWMgYm9vbCBpZ25vcmVfcmVnaXN0ZXIodWludDMyX3Qgb2Zmc2V0
KQorc3RhdGljIGJvb2wgaWdub3JlX3JlZ2lzdGVyKHVpbnQzMl90IG9mZnNldCwgdWludDMyX3Qg
bW1pb19iYXNlKQogewogCWZvciAoY29uc3Qgc3RydWN0IG5hbWVkX3JlZ2lzdGVyICpyID0gaWdu
b3JlX3JlZ2lzdGVyczsgci0+bmFtZTsgcisrKSB7CiAJCXVuc2lnbmVkIGludCB3aWR0aCA9IHIt
PmNvdW50ID8gNCpyLT5jb3VudCA6IDQ7Ci0JCWlmIChvZmZzZXQgPj0gci0+b2Zmc2V0ICYmIG9m
ZnNldCA8IHItPm9mZnNldCArIHdpZHRoKQorCQl1aW50MzJfdCBiYXNlOworCisJCWJhc2UgPSBy
LT5vZmZzZXQ7CisJCWlmIChyLT5yZWxhdGl2ZSkKKwkJCWJhc2UgKz0gbW1pb19iYXNlOworCisJ
CWlmIChvZmZzZXQgPj0gYmFzZSAmJiBvZmZzZXQgPCBiYXNlICsgd2lkdGgpCiAJCQlyZXR1cm4g
dHJ1ZTsKIAl9CiAKQEAgLTI0OCw2ICsyNDAsNyBAQCBzdGF0aWMgdm9pZCB0bXBsX3JlZ3MoaW50
IGZkLAogewogCWNvbnN0IHVuc2lnbmVkIGludCBnZW5fYml0ID0gMSA8PCBpbnRlbF9nZW4oaW50
ZWxfZ2V0X2RybV9kZXZpZChmZCkpOwogCWNvbnN0IHVuc2lnbmVkIGludCBlbmdpbmVfYml0ID0g
RU5HSU5FKGUtPmNsYXNzLCBlLT5pbnN0YW5jZSk7CisJY29uc3QgdWludDMyX3QgbW1pb19iYXNl
ID0gZ2VtX2VuZ2luZV9tbWlvX2Jhc2UoZmQsIGUtPm5hbWUpOwogCXVuc2lnbmVkIGludCByZWdz
X3NpemU7CiAJdWludDMyX3QgKnJlZ3M7CiAKQEAgLTI1OSwxMiArMjUyLDIwIEBAIHN0YXRpYyB2
b2lkIHRtcGxfcmVncyhpbnQgZmQsCiAJCSAgICAgICBJOTE1X0dFTV9ET01BSU5fQ1BVLCBJOTE1
X0dFTV9ET01BSU5fQ1BVKTsKIAogCWZvciAoY29uc3Qgc3RydWN0IG5hbWVkX3JlZ2lzdGVyICpy
ID0gbm9ucHJpdl9yZWdpc3RlcnM7IHItPm5hbWU7IHIrKykgeworCQl1aW50MzJfdCBvZmZzZXQ7
CisKIAkJaWYgKCEoci0+ZW5naW5lX21hc2sgJiBlbmdpbmVfYml0KSkKIAkJCWNvbnRpbnVlOwog
CQlpZiAoIShyLT5nZW5fbWFzayAmIGdlbl9iaXQpKQogCQkJY29udGludWU7Ci0JCWZvciAodW5z
aWduZWQgY291bnQgPSByLT5jb3VudCA/OiAxLCBvZmZzZXQgPSByLT5vZmZzZXQ7Ci0JCSAgICAg
Y291bnQtLTsgb2Zmc2V0ICs9IDQpIHsKKwkJaWYgKHItPnJlbGF0aXZlICYmICFtbWlvX2Jhc2Up
CisJCQljb250aW51ZTsKKworCQlvZmZzZXQgPSByLT5vZmZzZXQ7CisJCWlmIChyLT5yZWxhdGl2
ZSkKKwkJCW9mZnNldCArPSBtbWlvX2Jhc2U7CisKKwkJZm9yICh1bnNpZ25lZCBjb3VudCA9IHIt
PmNvdW50ID86IDE7IGNvdW50LS07IG9mZnNldCArPSA0KSB7CiAJCQl1aW50MzJfdCB4ID0gdmFs
dWU7CiAJCQlpZiAoci0+d3JpdGVfbWFzaykKIAkJCQl4ICY9IHItPndyaXRlX21hc2s7CkBAIC0y
ODQsNiArMjg1LDcgQEAgc3RhdGljIHVpbnQzMl90IHJlYWRfcmVncyhpbnQgZmQsCiAJY29uc3Qg
dW5zaWduZWQgaW50IGdlbiA9IGludGVsX2dlbihpbnRlbF9nZXRfZHJtX2RldmlkKGZkKSk7CiAJ
Y29uc3QgdW5zaWduZWQgaW50IGdlbl9iaXQgPSAxIDw8IGdlbjsKIAljb25zdCB1bnNpZ25lZCBp
bnQgZW5naW5lX2JpdCA9IEVOR0lORShlLT5jbGFzcywgZS0+aW5zdGFuY2UpOworCWNvbnN0IHVp
bnQzMl90IG1taW9fYmFzZSA9IGdlbV9lbmdpbmVfbW1pb19iYXNlKGZkLCBlLT5uYW1lKTsKIAlj
b25zdCBib29sIHI2NGIgPSBnZW4gPj0gODsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNfb2Jq
ZWN0MiBvYmpbMl07CiAJc3RydWN0IGRybV9pOTE1X2dlbV9yZWxvY2F0aW9uX2VudHJ5ICpyZWxv
YzsKQEAgLTMxMSwxMyArMzEzLDIwIEBAIHN0YXRpYyB1aW50MzJfdCByZWFkX3JlZ3MoaW50IGZk
LAogCiAJbiA9IDA7CiAJZm9yIChjb25zdCBzdHJ1Y3QgbmFtZWRfcmVnaXN0ZXIgKnIgPSBub25w
cml2X3JlZ2lzdGVyczsgci0+bmFtZTsgcisrKSB7CisJCXVpbnQzMl90IG9mZnNldDsKKwogCQlp
ZiAoIShyLT5lbmdpbmVfbWFzayAmIGVuZ2luZV9iaXQpKQogCQkJY29udGludWU7CiAJCWlmICgh
KHItPmdlbl9tYXNrICYgZ2VuX2JpdCkpCiAJCQljb250aW51ZTsKKwkJaWYgKHItPnJlbGF0aXZl
ICYmICFtbWlvX2Jhc2UpCisJCQljb250aW51ZTsKKworCQlvZmZzZXQgPSByLT5vZmZzZXQ7CisJ
CWlmIChyLT5yZWxhdGl2ZSkKKwkJCW9mZnNldCArPSBtbWlvX2Jhc2U7CiAKLQkJZm9yICh1bnNp
Z25lZCBjb3VudCA9IHItPmNvdW50ID86IDEsIG9mZnNldCA9IHItPm9mZnNldDsKLQkJICAgICBj
b3VudC0tOyBvZmZzZXQgKz0gNCkgeworCQlmb3IgKHVuc2lnbmVkIGNvdW50ID0gci0+Y291bnQg
PzogMTsgY291bnQtLTsgb2Zmc2V0ICs9IDQpIHsKIAkJCSpiKysgPSAweDI0IDw8IDIzIHwgKDEg
KyByNjRiKTsgLyogU1JNICovCiAJCQkqYisrID0gb2Zmc2V0OwogCQkJcmVsb2Nbbl0udGFyZ2V0
X2hhbmRsZSA9IG9ialswXS5oYW5kbGU7CkBAIC0zNTcsNiArMzY2LDcgQEAgc3RhdGljIHZvaWQg
d3JpdGVfcmVncyhpbnQgZmQsCiB7CiAJY29uc3QgdW5zaWduZWQgaW50IGdlbl9iaXQgPSAxIDw8
IGludGVsX2dlbihpbnRlbF9nZXRfZHJtX2RldmlkKGZkKSk7CiAJY29uc3QgdW5zaWduZWQgaW50
IGVuZ2luZV9iaXQgPSBFTkdJTkUoZS0+Y2xhc3MsIGUtPmluc3RhbmNlKTsKKwljb25zdCB1aW50
MzJfdCBtbWlvX2Jhc2UgPSBnZW1fZW5naW5lX21taW9fYmFzZShmZCwgZS0+bmFtZSk7CiAJc3Ry
dWN0IGRybV9pOTE1X2dlbV9leGVjX29iamVjdDIgb2JqOwogCXN0cnVjdCBkcm1faTkxNV9nZW1f
ZXhlY2J1ZmZlcjIgZXhlY2J1ZjsKIAl1bnNpZ25lZCBpbnQgYmF0Y2hfc2l6ZTsKQEAgLTM3Miwx
MiArMzgyLDIwIEBAIHN0YXRpYyB2b2lkIHdyaXRlX3JlZ3MoaW50IGZkLAogCWdlbV9zZXRfZG9t
YWluKGZkLCBvYmouaGFuZGxlLAogCQkgICAgICAgSTkxNV9HRU1fRE9NQUlOX0NQVSwgSTkxNV9H
RU1fRE9NQUlOX0NQVSk7CiAJZm9yIChjb25zdCBzdHJ1Y3QgbmFtZWRfcmVnaXN0ZXIgKnIgPSBu
b25wcml2X3JlZ2lzdGVyczsgci0+bmFtZTsgcisrKSB7CisJCXVpbnQzMl90IG9mZnNldDsKKwog
CQlpZiAoIShyLT5lbmdpbmVfbWFzayAmIGVuZ2luZV9iaXQpKQogCQkJY29udGludWU7CiAJCWlm
ICghKHItPmdlbl9tYXNrICYgZ2VuX2JpdCkpCiAJCQljb250aW51ZTsKLQkJZm9yICh1bnNpZ25l
ZCBjb3VudCA9IHItPmNvdW50ID86IDEsIG9mZnNldCA9IHItPm9mZnNldDsKLQkJICAgICBjb3Vu
dC0tOyBvZmZzZXQgKz0gNCkgeworCQlpZiAoci0+cmVsYXRpdmUgJiYgIW1taW9fYmFzZSkKKwkJ
CWNvbnRpbnVlOworCisJCW9mZnNldCA9IHItPm9mZnNldDsKKwkJaWYgKHItPnJlbGF0aXZlKQor
CQkJb2Zmc2V0ICs9IG1taW9fYmFzZTsKKworCQlmb3IgKHVuc2lnbmVkIGNvdW50ID0gci0+Y291
bnQgPzogMTsgY291bnQtLTsgb2Zmc2V0ICs9IDQpIHsKIAkJCXVpbnQzMl90IHggPSB2YWx1ZTsK
IAkJCWlmIChyLT53cml0ZV9tYXNrKQogCQkJCXggJj0gci0+d3JpdGVfbWFzazsKQEAgLTQxMCw2
ICs0MjgsNyBAQCBzdGF0aWMgdm9pZCByZXN0b3JlX3JlZ3MoaW50IGZkLAogCWNvbnN0IHVuc2ln
bmVkIGludCBnZW4gPSBpbnRlbF9nZW4oaW50ZWxfZ2V0X2RybV9kZXZpZChmZCkpOwogCWNvbnN0
IHVuc2lnbmVkIGludCBnZW5fYml0ID0gMSA8PCBnZW47CiAJY29uc3QgdW5zaWduZWQgaW50IGVu
Z2luZV9iaXQgPSBFTkdJTkUoZS0+Y2xhc3MsIGUtPmluc3RhbmNlKTsKKwljb25zdCB1aW50MzJf
dCBtbWlvX2Jhc2UgPSBnZW1fZW5naW5lX21taW9fYmFzZShmZCwgZS0+bmFtZSk7CiAJY29uc3Qg
Ym9vbCByNjRiID0gZ2VuID49IDg7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjX29iamVjdDIg
b2JqWzJdOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgZXhlY2J1ZjsKQEAgLTQz
NywxMyArNDU2LDIwIEBAIHN0YXRpYyB2b2lkIHJlc3RvcmVfcmVncyhpbnQgZmQsCiAKIAluID0g
MDsKIAlmb3IgKGNvbnN0IHN0cnVjdCBuYW1lZF9yZWdpc3RlciAqciA9IG5vbnByaXZfcmVnaXN0
ZXJzOyByLT5uYW1lOyByKyspIHsKKwkJdWludDMyX3Qgb2Zmc2V0OworCiAJCWlmICghKHItPmVu
Z2luZV9tYXNrICYgZW5naW5lX2JpdCkpCiAJCQljb250aW51ZTsKIAkJaWYgKCEoci0+Z2VuX21h
c2sgJiBnZW5fYml0KSkKIAkJCWNvbnRpbnVlOworCQlpZiAoci0+cmVsYXRpdmUgJiYgIW1taW9f
YmFzZSkKKwkJCWNvbnRpbnVlOworCisJCW9mZnNldCA9IHItPm9mZnNldDsKKwkJaWYgKHItPnJl
bGF0aXZlKQorCQkJb2Zmc2V0ICs9IG1taW9fYmFzZTsKIAotCQlmb3IgKHVuc2lnbmVkIGNvdW50
ID0gci0+Y291bnQgPzogMSwgb2Zmc2V0ID0gci0+b2Zmc2V0OwotCQkgICAgIGNvdW50LS07IG9m
ZnNldCArPSA0KSB7CisJCWZvciAodW5zaWduZWQgY291bnQgPSByLT5jb3VudCA/OiAxOyBjb3Vu
dC0tOyBvZmZzZXQgKz0gNCkgewogCQkJKmIrKyA9IDB4MjkgPDwgMjMgfCAoMSArIHI2NGIpOyAv
KiBMUk0gKi8KIAkJCSpiKysgPSBvZmZzZXQ7CiAJCQlyZWxvY1tuXS50YXJnZXRfaGFuZGxlID0g
b2JqWzBdLmhhbmRsZTsKQEAgLTQ3OSw2ICs1MDUsNyBAQCBzdGF0aWMgdm9pZCBkdW1wX3JlZ3Mo
aW50IGZkLAogCWNvbnN0IGludCBnZW4gPSBpbnRlbF9nZW4oaW50ZWxfZ2V0X2RybV9kZXZpZChm
ZCkpOwogCWNvbnN0IHVuc2lnbmVkIGludCBnZW5fYml0ID0gMSA8PCBnZW47CiAJY29uc3QgdW5z
aWduZWQgaW50IGVuZ2luZV9iaXQgPSBFTkdJTkUoZS0+Y2xhc3MsIGUtPmluc3RhbmNlKTsKKwlj
b25zdCB1aW50MzJfdCBtbWlvX2Jhc2UgPSBnZW1fZW5naW5lX21taW9fYmFzZShmZCwgZS0+bmFt
ZSk7CiAJdW5zaWduZWQgaW50IHJlZ3Nfc2l6ZTsKIAl1aW50MzJfdCAqb3V0OwogCkBAIC00ODks
MjYgKzUxNiwzNiBAQCBzdGF0aWMgdm9pZCBkdW1wX3JlZ3MoaW50IGZkLAogCWdlbV9zZXRfZG9t
YWluKGZkLCByZWdzLCBJOTE1X0dFTV9ET01BSU5fQ1BVLCAwKTsKIAogCWZvciAoY29uc3Qgc3Ry
dWN0IG5hbWVkX3JlZ2lzdGVyICpyID0gbm9ucHJpdl9yZWdpc3RlcnM7IHItPm5hbWU7IHIrKykg
eworCQl1aW50MzJfdCBvZmZzZXQ7CisKIAkJaWYgKCEoci0+ZW5naW5lX21hc2sgJiBlbmdpbmVf
Yml0KSkKIAkJCWNvbnRpbnVlOwogCQlpZiAoIShyLT5nZW5fbWFzayAmIGdlbl9iaXQpKQogCQkJ
Y29udGludWU7CisJCWlmIChyLT5yZWxhdGl2ZSAmJiAhbW1pb19iYXNlKQorCQkJY29udGludWU7
CisKKwkJb2Zmc2V0ID0gci0+b2Zmc2V0OworCQlpZiAoci0+cmVsYXRpdmUpCisJCQlvZmZzZXQg
Kz0gbW1pb19iYXNlOwogCiAJCWlmIChyLT5jb3VudCA8PSAxKSB7CiAJCQlpZ3RfZGVidWcoIjB4
JTA0eCAoJXMpOiAweCUwOHhcbiIsCi0JCQkJICByLT5vZmZzZXQsIHItPm5hbWUsIG91dFtyLT5v
ZmZzZXQvNF0pOworCQkJCSAgb2Zmc2V0LCByLT5uYW1lLCBvdXRbb2Zmc2V0IC8gNF0pOwogCQl9
IGVsc2UgewogCQkJZm9yICh1bnNpZ25lZCB4ID0gMDsgeCA8IHItPmNvdW50OyB4KyspCiAJCQkJ
aWd0X2RlYnVnKCIweCUwNHggKCVzWyVkXSk6IDB4JTA4eFxuIiwKLQkJCQkJICByLT5vZmZzZXQr
NCp4LCByLT5uYW1lLCB4LAotCQkJCQkgIG91dFtyLT5vZmZzZXQvNCArIHhdKTsKKwkJCQkJICBv
ZmZzZXQgKyA0ICogeCwgci0+bmFtZSwgeCwKKwkJCQkJICBvdXRbb2Zmc2V0IC8gNCArIHhdKTsK
IAkJfQogCX0KIAltdW5tYXAob3V0LCByZWdzX3NpemUpOwogfQogCi1zdGF0aWMgdm9pZCBjb21w
YXJlX3JlZ3MoaW50IGZkLCB1aW50MzJfdCBBLCB1aW50MzJfdCBCLCBjb25zdCBjaGFyICp3aG8p
CitzdGF0aWMgdm9pZCBjb21wYXJlX3JlZ3MoaW50IGZkLCBjb25zdCBzdHJ1Y3QgaW50ZWxfZXhl
Y3V0aW9uX2VuZ2luZTIgKmUsCisJCQkgdWludDMyX3QgQSwgdWludDMyX3QgQiwgY29uc3QgY2hh
ciAqd2hvKQogeworCWNvbnN0IHVpbnQzMl90IG1taW9fYmFzZSA9IGdlbV9lbmdpbmVfbW1pb19i
YXNlKGZkLCBlLT5uYW1lKTsKIAl1bnNpZ25lZCBpbnQgbnVtX2Vycm9yczsKIAl1bnNpZ25lZCBp
bnQgcmVnc19zaXplOwogCXVpbnQzMl90ICphLCAqYjsKQEAgLTUzMiwxMSArNTY5LDExIEBAIHN0
YXRpYyB2b2lkIGNvbXBhcmVfcmVncyhpbnQgZmQsIHVpbnQzMl90IEEsIHVpbnQzMl90IEIsIGNv
bnN0IGNoYXIgKndobykKIAkJaWYgKGFbbl0gPT0gYltuXSkKIAkJCWNvbnRpbnVlOwogCi0JCWlm
IChpZ25vcmVfcmVnaXN0ZXIob2Zmc2V0KSkKKwkJaWYgKGlnbm9yZV9yZWdpc3RlcihvZmZzZXQs
IG1taW9fYmFzZSkpCiAJCQljb250aW51ZTsKIAogCQltYXNrID0gfjB1OwotCQlyID0gbG9va3Vw
X3JlZ2lzdGVyKG9mZnNldCk7CisJCXIgPSBsb29rdXBfcmVnaXN0ZXIob2Zmc2V0LCBtbWlvX2Jh
c2UpOwogCQlpZiAociAmJiByLT5tYXNrZWQpCiAJCQltYXNrID4+PSAxNjsKIAkJaWYgKHIgJiYg
ci0+aWdub3JlX2JpdHMpCkBAIC01NDcsNyArNTg0LDcgQEAgc3RhdGljIHZvaWQgY29tcGFyZV9y
ZWdzKGludCBmZCwgdWludDMyX3QgQSwgdWludDMyX3QgQiwgY29uc3QgY2hhciAqd2hvKQogCiAJ
CWlndF93YXJuKCJSZWdpc3RlciAweCUwNHggKCVzKTogQT0lMDh4IEI9JTA4eFxuIiwKIAkJCSBv
ZmZzZXQsCi0JCQkgcmVnaXN0ZXJfbmFtZShvZmZzZXQsIGJ1Ziwgc2l6ZW9mKGJ1ZikpLAorCQkJ
IHJlZ2lzdGVyX25hbWUob2Zmc2V0LCBtbWlvX2Jhc2UsIGJ1Ziwgc2l6ZW9mKGJ1ZikpLAogCQkJ
IGFbbl0gJiBtYXNrLCBiW25dICYgbWFzayk7CiAJCW51bV9lcnJvcnMrKzsKIAl9CkBAIC02Mzgs
NyArNjc1LDcgQEAgc3RhdGljIHZvaWQgbm9ucHJpdihpbnQgZmQsCiAKIAkJaWd0X3NwaW5fZnJl
ZShmZCwgc3Bpbik7CiAKLQkJY29tcGFyZV9yZWdzKGZkLCB0bXBsLCByZWdzWzFdLCAibm9ucHJp
diByZWFkL3dyaXRlcyIpOworCQljb21wYXJlX3JlZ3MoZmQsIGUsIHRtcGwsIHJlZ3NbMV0sICJu
b25wcml2IHJlYWQvd3JpdGVzIik7CiAKIAkJZm9yIChpbnQgbiA9IDA7IG4gPCBBUlJBWV9TSVpF
KHJlZ3MpOyBuKyspCiAJCQlnZW1fY2xvc2UoZmQsIHJlZ3Nbbl0pOwpAQCAtNzA4LDggKzc0NSw5
IEBAIHN0YXRpYyB2b2lkIGlzb2xhdGlvbihpbnQgZmQsCiAJCWlndF9zcGluX2ZyZWUoZmQsIHNw
aW4pOwogCiAJCWlmICghKGZsYWdzICYgRElSVFkxKSkKLQkJCWNvbXBhcmVfcmVncyhmZCwgcmVn
c1swXSwgdG1wLCAidHdvIHJlYWRzIG9mIHRoZSBzYW1lIGN0eCIpOwotCQljb21wYXJlX3JlZ3Mo
ZmQsIHJlZ3NbMF0sIHJlZ3NbMV0sICJ0d28gdmlyZ2luIGNvbnRleHRzIik7CisJCQljb21wYXJl
X3JlZ3MoZmQsIGUsIHJlZ3NbMF0sIHRtcCwKKwkJCQkgICAgICJ0d28gcmVhZHMgb2YgdGhlIHNh
bWUgY3R4Iik7CisJCWNvbXBhcmVfcmVncyhmZCwgZSwgcmVnc1swXSwgcmVnc1sxXSwgInR3byB2
aXJnaW4gY29udGV4dHMiKTsKIAogCQlmb3IgKGludCBuID0gMDsgbiA8IEFSUkFZX1NJWkUoY3R4
KTsgbisrKSB7CiAJCQlnZW1fY2xvc2UoZmQsIHJlZ3Nbbl0pOwpAQCAtODI5LDEzICs4NjcsMTMg
QEAgc3RhdGljIHZvaWQgcHJlc2VydmF0aW9uKGludCBmZCwKIAkJY2hhciBidWZbODBdOwogCiAJ
CXNucHJpbnRmKGJ1Ziwgc2l6ZW9mKGJ1ZiksICJkaXJ0eSAleCBjb250ZXh0XG4iLCB2YWx1ZXNb
dl0pOwotCQljb21wYXJlX3JlZ3MoZmQsIHJlZ3Nbdl1bMF0sIHJlZ3Nbdl1bMV0sIGJ1Zik7CisJ
CWNvbXBhcmVfcmVncyhmZCwgZSwgcmVnc1t2XVswXSwgcmVnc1t2XVsxXSwgYnVmKTsKIAogCQln
ZW1fY2xvc2UoZmQsIHJlZ3Nbdl1bMF0pOwogCQlnZW1fY2xvc2UoZmQsIHJlZ3Nbdl1bMV0pOwog
CQlnZW1fY29udGV4dF9kZXN0cm95KGZkLCBjdHhbdl0pOwogCX0KLQljb21wYXJlX3JlZ3MoZmQs
IHJlZ3NbbnVtX3ZhbHVlc11bMF0sIHJlZ3NbbnVtX3ZhbHVlc11bMV0sICJjbGVhbiIpOworCWNv
bXBhcmVfcmVncyhmZCwgZSwgcmVnc1tudW1fdmFsdWVzXVswXSwgcmVnc1tudW1fdmFsdWVzXVsx
XSwgImNsZWFuIik7CiAJZ2VtX2NvbnRleHRfZGVzdHJveShmZCwgY3R4W251bV92YWx1ZXNdKTsK
IH0KIAotLSAKMi4yNC4wLnJjMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRl
c2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8v
aW50ZWwtZ2Z4

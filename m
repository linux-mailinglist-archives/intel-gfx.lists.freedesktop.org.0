Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 684EFE87C1
	for <lists+intel-gfx@lfdr.de>; Tue, 29 Oct 2019 13:08:32 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6262B6E239;
	Tue, 29 Oct 2019 12:08:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 864CE6E226
 for <intel-gfx@lists.freedesktop.org>; Tue, 29 Oct 2019 12:08:29 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 29 Oct 2019 05:08:28 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,243,1569308400"; d="scan'208";a="202821699"
Received: from fmsmsx105.amr.corp.intel.com ([10.18.124.203])
 by orsmga003.jf.intel.com with ESMTP; 29 Oct 2019 05:08:28 -0700
Received: from fmsmsx102.amr.corp.intel.com (10.18.124.200) by
 FMSMSX105.amr.corp.intel.com (10.18.124.203) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Tue, 29 Oct 2019 05:08:27 -0700
Received: from bgsmsx155.gar.corp.intel.com (10.224.48.102) by
 FMSMSX102.amr.corp.intel.com (10.18.124.200) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Tue, 29 Oct 2019 05:08:27 -0700
Received: from bgsmsx104.gar.corp.intel.com ([169.254.5.228]) by
 BGSMSX155.gar.corp.intel.com ([169.254.12.52]) with mapi id 14.03.0439.000;
 Tue, 29 Oct 2019 17:38:24 +0530
From: "Shankar, Uma" <uma.shankar@intel.com>
To: Ville Syrjala <ville.syrjala@linux.intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [Intel-gfx] [PATCH v2 5/9] drm/i915: Add 10bpc formats with
 alpha for icl+
Thread-Index: AQHVfo52804U6ESvUE6v1dX9hq3Uwqdxpbew
Date: Tue, 29 Oct 2019 12:08:23 +0000
Message-ID: <E7C9878FBA1C6D42A1CA3F62AEB6945F8227DC4F@BGSMSX104.gar.corp.intel.com>
References: <20191008161441.12721-5-ville.syrjala@linux.intel.com>
 <20191009104352.15619-1-ville.syrjala@linux.intel.com>
In-Reply-To: <20191009104352.15619-1-ville.syrjala@linux.intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ctpclassification: CTP_NT
x-titus-metadata-40: eyJDYXRlZ29yeUxhYmVscyI6IiIsIk1ldGFkYXRhIjp7Im5zIjoiaHR0cDpcL1wvd3d3LnRpdHVzLmNvbVwvbnNcL0ludGVsMyIsImlkIjoiYjAzZWViZTUtYWUxMi00MDM5LWIzOGUtOTk2MzM2MmRlMWFiIiwicHJvcHMiOlt7Im4iOiJDVFBDbGFzc2lmaWNhdGlvbiIsInZhbHMiOlt7InZhbHVlIjoiQ1RQX05UIn1dfV19LCJTdWJqZWN0TGFiZWxzIjpbXSwiVE1DVmVyc2lvbiI6IjE3LjEwLjE4MDQuNDkiLCJUcnVzdGVkTGFiZWxIYXNoIjoiRG12RzRYamg3VXowQ1BIb0J5WGJqXC9IalpVOTBCdlB0YWpvNnF6Q2hXV3hcL1lFcktcL09Ob1NWRWlOM3BBZzB3SCJ9
dlp-product: dlpe-windows
dlp-version: 11.2.0.6
dlp-reaction: no-action
x-originating-ip: [10.223.10.10]
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v2 5/9] drm/i915: Add 10bpc formats with
 alpha for icl+
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

DQoNCj4tLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KPkZyb206IEludGVsLWdmeCA8aW50ZWwt
Z2Z4LWJvdW5jZXNAbGlzdHMuZnJlZWRlc2t0b3Aub3JnPiBPbiBCZWhhbGYgT2YgVmlsbGUgU3ly
amFsYQ0KPlNlbnQ6IFdlZG5lc2RheSwgT2N0b2JlciA5LCAyMDE5IDQ6MTQgUE0NCj5UbzogaW50
ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KPlN1YmplY3Q6IFtJbnRlbC1nZnhdIFtQQVRD
SCB2MiA1LzldIGRybS9pOTE1OiBBZGQgMTBicGMgZm9ybWF0cyB3aXRoIGFscGhhIGZvciBpY2wr
DQo+DQo+RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4NCj4NCj5JQ0wrIGFnYWluIHN1cHBvcnRzIGFscGhhIGJsZW5kaW5nIHdpdGggMTBicGMgcGl4
ZWwgZm9ybWF0cy4NCj5FeHBvc2UgdGhlbS4NCj4NCj52MjogQWRkIGFsbCB0aGUgc3R1ZmYgSSBt
aXNzZWQgZWFybGllciENCg0KQ2hhbmdlcyBsb29rIGdvb2QgdG8gbWUuDQpSZXZpZXdlZC1ieTog
VW1hIFNoYW5rYXIgPHVtYS5zaGFua2FyQGludGVsLmNvbT4NCg0KPlNpZ25lZC1vZmYtYnk6IFZp
bGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+DQo+LS0tDQo+IGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgMTkgKysrKysrKysr
KysrKysrLS0tLQ0KPmRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMg
IHwgMTAgKysrKysrKysrKw0KPiAyIGZpbGVzIGNoYW5nZWQsIDI1IGluc2VydGlvbnMoKyksIDQg
ZGVsZXRpb25zKC0pDQo+DQo+ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5jDQo+Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYw0KPmluZGV4IDFjZGNkMGVhMDU2NC4uMTlhMGM4Y2ZiMTUxIDEwMDY0NA0KPi0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+KysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj5AQCAtMzAzMSwx
MCArMzAzMSwxNyBAQCBpbnQgc2tsX2Zvcm1hdF90b19mb3VyY2MoaW50IGZvcm1hdCwgYm9vbCBy
Z2Jfb3JkZXIsDQo+Ym9vbCBhbHBoYSkNCj4gCQkJCXJldHVybiBEUk1fRk9STUFUX1hSR0I4ODg4
Ow0KPiAJCX0NCj4gCWNhc2UgUExBTkVfQ1RMX0ZPUk1BVF9YUkdCXzIxMDEwMTA6DQo+LQkJaWYg
KHJnYl9vcmRlcikNCj4tCQkJcmV0dXJuIERSTV9GT1JNQVRfWEJHUjIxMDEwMTA7DQo+LQkJZWxz
ZQ0KPi0JCQlyZXR1cm4gRFJNX0ZPUk1BVF9YUkdCMjEwMTAxMDsNCj4rCQlpZiAocmdiX29yZGVy
KSB7DQo+KwkJCWlmIChhbHBoYSkNCj4rCQkJCXJldHVybiBEUk1fRk9STUFUX0FCR1IyMTAxMDEw
Ow0KPisJCQllbHNlDQo+KwkJCQlyZXR1cm4gRFJNX0ZPUk1BVF9YQkdSMjEwMTAxMDsNCj4rCQl9
IGVsc2Ugew0KPisJCQlpZiAoYWxwaGEpDQo+KwkJCQlyZXR1cm4gRFJNX0ZPUk1BVF9BUkdCMjEw
MTAxMDsNCj4rCQkJZWxzZQ0KPisJCQkJcmV0dXJuIERSTV9GT1JNQVRfWFJHQjIxMDEwMTA7DQo+
KwkJfQ0KPiAJY2FzZSBQTEFORV9DVExfRk9STUFUX1hSR0JfMTYxNjE2MTZGOg0KPiAJCWlmIChy
Z2Jfb3JkZXIpIHsNCj4gCQkJaWYgKGFscGhhKQ0KPkBAIC00MDI0LDggKzQwMzEsMTAgQEAgc3Rh
dGljIHUzMiBza2xfcGxhbmVfY3RsX2Zvcm1hdCh1MzIgcGl4ZWxfZm9ybWF0KQ0KPiAJY2FzZSBE
Uk1fRk9STUFUX0FSR0I4ODg4Og0KPiAJCXJldHVybiBQTEFORV9DVExfRk9STUFUX1hSR0JfODg4
ODsNCj4gCWNhc2UgRFJNX0ZPUk1BVF9YQkdSMjEwMTAxMDoNCj4rCWNhc2UgRFJNX0ZPUk1BVF9B
QkdSMjEwMTAxMDoNCj4gCQlyZXR1cm4gUExBTkVfQ1RMX0ZPUk1BVF9YUkdCXzIxMDEwMTAgfA0K
PlBMQU5FX0NUTF9PUkRFUl9SR0JYOw0KPiAJY2FzZSBEUk1fRk9STUFUX1hSR0IyMTAxMDEwOg0K
PisJY2FzZSBEUk1fRk9STUFUX0FSR0IyMTAxMDEwOg0KPiAJCXJldHVybiBQTEFORV9DVExfRk9S
TUFUX1hSR0JfMjEwMTAxMDsNCj4gCWNhc2UgRFJNX0ZPUk1BVF9YQkdSMTYxNjE2MTZGOg0KPiAJ
Y2FzZSBEUk1fRk9STUFUX0FCR1IxNjE2MTYxNkY6DQo+QEAgLTU2MTcsNiArNTYyNiw4IEBAIHN0
YXRpYyBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfcGxhbmUoc3RydWN0IGludGVsX2NydGNfc3RhdGUN
Cj4qY3J0Y19zdGF0ZSwNCj4gCWNhc2UgRFJNX0ZPUk1BVF9BUkdCODg4ODoNCj4gCWNhc2UgRFJN
X0ZPUk1BVF9YUkdCMjEwMTAxMDoNCj4gCWNhc2UgRFJNX0ZPUk1BVF9YQkdSMjEwMTAxMDoNCj4r
CWNhc2UgRFJNX0ZPUk1BVF9BUkdCMjEwMTAxMDoNCj4rCWNhc2UgRFJNX0ZPUk1BVF9BQkdSMjEw
MTAxMDoNCj4gCWNhc2UgRFJNX0ZPUk1BVF9YQkdSMTYxNjE2MTZGOg0KPiAJY2FzZSBEUk1fRk9S
TUFUX0FCR1IxNjE2MTYxNkY6DQo+IAljYXNlIERSTV9GT1JNQVRfWFJHQjE2MTYxNjE2RjoNCj5k
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYw0K
PmIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYw0KPmluZGV4IDRj
ZDA5ODJkYzhhMi4uZGYzY2E3NTU4MGQ3IDEwMDY0NA0KPi0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMNCj4rKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3Nwcml0ZS5jDQo+QEAgLTIxMDMsNiArMjEwMyw4IEBAIHN0YXRpYyBjb25z
dCB1MzIgaWNsX3Nkcl95X3BsYW5lX2Zvcm1hdHNbXSA9IHsNCj4gCURSTV9GT1JNQVRfQUJHUjg4
ODgsDQo+IAlEUk1fRk9STUFUX1hSR0IyMTAxMDEwLA0KPiAJRFJNX0ZPUk1BVF9YQkdSMjEwMTAx
MCwNCj4rCURSTV9GT1JNQVRfQVJHQjIxMDEwMTAsDQo+KwlEUk1fRk9STUFUX0FCR1IyMTAxMDEw
LA0KPiAJRFJNX0ZPUk1BVF9ZVVlWLA0KPiAJRFJNX0ZPUk1BVF9ZVllVLA0KPiAJRFJNX0ZPUk1B
VF9VWVZZLA0KPkBAIC0yMTI0LDYgKzIxMjYsOCBAQCBzdGF0aWMgY29uc3QgdTMyIGljbF9zZHJf
dXZfcGxhbmVfZm9ybWF0c1tdID0gew0KPiAJRFJNX0ZPUk1BVF9BQkdSODg4OCwNCj4gCURSTV9G
T1JNQVRfWFJHQjIxMDEwMTAsDQo+IAlEUk1fRk9STUFUX1hCR1IyMTAxMDEwLA0KPisJRFJNX0ZP
Uk1BVF9BUkdCMjEwMTAxMCwNCj4rCURSTV9GT1JNQVRfQUJHUjIxMDEwMTAsDQo+IAlEUk1fRk9S
TUFUX1lVWVYsDQo+IAlEUk1fRk9STUFUX1lWWVUsDQo+IAlEUk1fRk9STUFUX1VZVlksDQo+QEAg
LTIxNDksNiArMjE1Myw4IEBAIHN0YXRpYyBjb25zdCB1MzIgaWNsX2hkcl9wbGFuZV9mb3JtYXRz
W10gPSB7DQo+IAlEUk1fRk9STUFUX0FCR1I4ODg4LA0KPiAJRFJNX0ZPUk1BVF9YUkdCMjEwMTAx
MCwNCj4gCURSTV9GT1JNQVRfWEJHUjIxMDEwMTAsDQo+KwlEUk1fRk9STUFUX0FSR0IyMTAxMDEw
LA0KPisJRFJNX0ZPUk1BVF9BQkdSMjEwMTAxMCwNCj4gCURSTV9GT1JNQVRfWFJHQjE2MTYxNjE2
RiwNCj4gCURSTV9GT1JNQVRfWEJHUjE2MTYxNjE2RiwNCj4gCURSTV9GT1JNQVRfQVJHQjE2MTYx
NjE2RiwNCj5AQCAtMjMxNSw2ICsyMzIxLDggQEAgc3RhdGljIGJvb2wgc2tsX3BsYW5lX2Zvcm1h
dF9tb2Rfc3VwcG9ydGVkKHN0cnVjdA0KPmRybV9wbGFuZSAqX3BsYW5lLA0KPiAJY2FzZSBEUk1f
Rk9STUFUX1JHQjU2NToNCj4gCWNhc2UgRFJNX0ZPUk1BVF9YUkdCMjEwMTAxMDoNCj4gCWNhc2Ug
RFJNX0ZPUk1BVF9YQkdSMjEwMTAxMDoNCj4rCWNhc2UgRFJNX0ZPUk1BVF9BUkdCMjEwMTAxMDoN
Cj4rCWNhc2UgRFJNX0ZPUk1BVF9BQkdSMjEwMTAxMDoNCj4gCWNhc2UgRFJNX0ZPUk1BVF9ZVVlW
Og0KPiAJY2FzZSBEUk1fRk9STUFUX1lWWVU6DQo+IAljYXNlIERSTV9GT1JNQVRfVVlWWToNCj5A
QCAtMjM2Nyw2ICsyMzc1LDggQEAgc3RhdGljIGJvb2wgZ2VuMTJfcGxhbmVfZm9ybWF0X21vZF9z
dXBwb3J0ZWQoc3RydWN0DQo+ZHJtX3BsYW5lICpfcGxhbmUsDQo+IAljYXNlIERSTV9GT1JNQVRf
UkdCNTY1Og0KPiAJY2FzZSBEUk1fRk9STUFUX1hSR0IyMTAxMDEwOg0KPiAJY2FzZSBEUk1fRk9S
TUFUX1hCR1IyMTAxMDEwOg0KPisJY2FzZSBEUk1fRk9STUFUX0FSR0IyMTAxMDEwOg0KPisJY2Fz
ZSBEUk1fRk9STUFUX0FCR1IyMTAxMDEwOg0KPiAJY2FzZSBEUk1fRk9STUFUX1lVWVY6DQo+IAlj
YXNlIERSTV9GT1JNQVRfWVZZVToNCj4gCWNhc2UgRFJNX0ZPUk1BVF9VWVZZOg0KPi0tDQo+Mi4y
MS4wDQo+DQo+X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18N
Cj5JbnRlbC1nZnggbWFpbGluZyBsaXN0DQo+SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
Zw0KPmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwt
Z2Z4DQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRl
bC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

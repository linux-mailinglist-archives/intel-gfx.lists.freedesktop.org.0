Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7039F2191DC
	for <lists+intel-gfx@lfdr.de>; Wed,  8 Jul 2020 22:53:34 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8688F6E162;
	Wed,  8 Jul 2020 20:53:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7AB2189FF7
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 Jul 2020 20:53:27 +0000 (UTC)
IronPort-SDR: 80bqulILF4SrKflGQGKpOmcm4xceuh41be08q0909T+6z1pJHJ6CbA6YeNoRp266jqEH14MLwL
 MT/+y/82Yf3Q==
X-IronPort-AV: E=McAfee;i="6000,8403,9676"; a="209427819"
X-IronPort-AV: E=Sophos;i="5.75,329,1589266800"; d="scan'208";a="209427819"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jul 2020 13:53:26 -0700
IronPort-SDR: /rZl7r6YFqn+73Q5wrdPrqJ1mFjx4QDAr8ZYn+ueklQwR800J5W+BkGoxrtJyNneysFeNC8t44
 sEzrEpBF6R3g==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.75,329,1589266800"; d="scan'208";a="388928940"
Received: from josouza-mobl2.jf.intel.com (HELO josouza-MOBL2.intel.com)
 ([10.24.14.51])
 by fmsmga001.fm.intel.com with ESMTP; 08 Jul 2020 13:53:26 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 Jul 2020 13:55:08 -0700
Message-Id: <20200708205512.21625-1-jose.souza@intel.com>
X-Mailer: git-send-email 2.27.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 1/5] drm/i915/display: Replace
 drm_i915_private in voltage swing functions by intel_encoder
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

aW50ZWxfZW5jb2RlciB3aWxsIGJlIG5lZWRlZCBpbnNpZGUgb2YgdnN3aW5nIGZ1bmN0aW9ucyBp
biBhIGZ1dHVyZQpwYXRjaCwgc28gaGVyZSBkb2luZyB0aGlzIGNoYW5nZSBpbiBhbGwgdnN3aW5n
IGZ1bmN0aW9ucyBzaW5jZSBIU1cuCgpTaWduZWQtb2ZmLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNv
dXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2RkaS5jIHwgMTY0ICsrKysrKysrKysrKystLS0tLS0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgOTUgaW5zZXJ0aW9ucygrKSwgNjkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggNTc3M2ViZWZmZmM3Li5lODAzMTlhYTdjZjAg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtNzA3LDggKzcw
NywxMCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5zIHRnbF9jb21ib19w
aHlfZGRpX3RyYW5zbGF0aW9uc19kcF9oYnIyW10gPQogfTsKIAogc3RhdGljIGNvbnN0IHN0cnVj
dCBkZGlfYnVmX3RyYW5zICoKLWJkd19nZXRfYnVmX3RyYW5zX2VkcChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRyaWVzKQorYmR3X2dldF9idWZfdHJhbnNfZWRw
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQgKm5fZW50cmllcykKIHsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2
KTsKKwogCWlmIChkZXZfcHJpdi0+dmJ0LmVkcC5sb3dfdnN3aW5nKSB7CiAJCSpuX2VudHJpZXMg
PSBBUlJBWV9TSVpFKGJkd19kZGlfdHJhbnNsYXRpb25zX2VkcCk7CiAJCXJldHVybiBiZHdfZGRp
X3RyYW5zbGF0aW9uc19lZHA7CkBAIC03MTksOCArNzIxLDEwIEBAIGJkd19nZXRfYnVmX3RyYW5z
X2VkcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRyaWVzKQog
fQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGRkaV9idWZfdHJhbnMgKgotc2tsX2dldF9idWZfdHJh
bnNfZHAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgKm5fZW50cmllcykK
K3NrbF9nZXRfYnVmX3RyYW5zX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQg
Km5fZW50cmllcykKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwogCWlmIChJU19TS0xfVUxYKGRldl9wcml2KSkgewog
CQkqbl9lbnRyaWVzID0gQVJSQVlfU0laRShza2xfeV9kZGlfdHJhbnNsYXRpb25zX2RwKTsKIAkJ
cmV0dXJuIHNrbF95X2RkaV90cmFuc2xhdGlvbnNfZHA7CkBAIC03MzQsOCArNzM4LDEwIEBAIHNr
bF9nZXRfYnVmX3RyYW5zX2RwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50
ICpuX2VudHJpZXMpCiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZGRpX2J1Zl90cmFucyAqCi1r
YmxfZ2V0X2J1Zl90cmFuc19kcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGlu
dCAqbl9lbnRyaWVzKQora2JsX2dldF9idWZfdHJhbnNfZHAoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsIGludCAqbl9lbnRyaWVzKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOworCiAJaWYgKElTX0tCTF9VTFgo
ZGV2X3ByaXYpIHx8CiAJICAgIElTX0NGTF9VTFgoZGV2X3ByaXYpIHx8CiAJICAgIElTX0NNTF9V
TFgoZGV2X3ByaXYpKSB7CkBAIC03NTMsOCArNzU5LDEwIEBAIGtibF9nZXRfYnVmX3RyYW5zX2Rw
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50ICpuX2VudHJpZXMpCiB9CiAK
IHN0YXRpYyBjb25zdCBzdHJ1Y3QgZGRpX2J1Zl90cmFucyAqCi1za2xfZ2V0X2J1Zl90cmFuc19l
ZHAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgKm5fZW50cmllcykKK3Nr
bF9nZXRfYnVmX3RyYW5zX2VkcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgaW50ICpu
X2VudHJpZXMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShlbmNvZGVyLT5iYXNlLmRldik7CisKIAlpZiAoZGV2X3ByaXYtPnZidC5lZHAubG93X3Zzd2lu
ZykgewogCQlpZiAoSVNfU0tMX1VMWChkZXZfcHJpdikgfHwKIAkJICAgIElTX0tCTF9VTFgoZGV2
X3ByaXYpIHx8CkBAIC03NzcsOSArNzg1LDkgQEAgc2tsX2dldF9idWZfdHJhbnNfZWRwKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50ICpuX2VudHJpZXMpCiAJaWYgKElTX0tB
QllMQUtFKGRldl9wcml2KSB8fAogCSAgICBJU19DT0ZGRUVMQUtFKGRldl9wcml2KSB8fAogCSAg
ICBJU19DT01FVExBS0UoZGV2X3ByaXYpKQotCQlyZXR1cm4ga2JsX2dldF9idWZfdHJhbnNfZHAo
ZGV2X3ByaXYsIG5fZW50cmllcyk7CisJCXJldHVybiBrYmxfZ2V0X2J1Zl90cmFuc19kcChlbmNv
ZGVyLCBuX2VudHJpZXMpOwogCWVsc2UKLQkJcmV0dXJuIHNrbF9nZXRfYnVmX3RyYW5zX2RwKGRl
dl9wcml2LCBuX2VudHJpZXMpOworCQlyZXR1cm4gc2tsX2dldF9idWZfdHJhbnNfZHAoZW5jb2Rl
ciwgbl9lbnRyaWVzKTsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBkZGlfYnVmX3RyYW5zICoK
QEAgLTgwNywxOSArODE1LDIxIEBAIHN0YXRpYyBpbnQgc2tsX2J1Zl90cmFuc19udW1fZW50cmll
cyhlbnVtIHBvcnQgcG9ydCwgaW50IG5fZW50cmllcykKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVj
dCBkZGlfYnVmX3RyYW5zICoKLWludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2RwKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKK2ludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2RwKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJICAgZW51bSBwb3J0IHBvcnQsIGludCAqbl9l
bnRyaWVzKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZW5jb2Rlci0+YmFzZS5kZXYpOworCiAJaWYgKElTX0tBQllMQUtFKGRldl9wcml2KSB8fAogCSAg
ICBJU19DT0ZGRUVMQUtFKGRldl9wcml2KSB8fAogCSAgICBJU19DT01FVExBS0UoZGV2X3ByaXYp
KSB7CiAJCWNvbnN0IHN0cnVjdCBkZGlfYnVmX3RyYW5zICpkZGlfdHJhbnNsYXRpb25zID0KLQkJ
CWtibF9nZXRfYnVmX3RyYW5zX2RwKGRldl9wcml2LCBuX2VudHJpZXMpOworCQkJa2JsX2dldF9i
dWZfdHJhbnNfZHAoZW5jb2Rlciwgbl9lbnRyaWVzKTsKIAkJKm5fZW50cmllcyA9IHNrbF9idWZf
dHJhbnNfbnVtX2VudHJpZXMocG9ydCwgKm5fZW50cmllcyk7CiAJCXJldHVybiBkZGlfdHJhbnNs
YXRpb25zOwogCX0gZWxzZSBpZiAoSVNfU0tZTEFLRShkZXZfcHJpdikpIHsKIAkJY29uc3Qgc3Ry
dWN0IGRkaV9idWZfdHJhbnMgKmRkaV90cmFuc2xhdGlvbnMgPQotCQkJc2tsX2dldF9idWZfdHJh
bnNfZHAoZGV2X3ByaXYsIG5fZW50cmllcyk7CisJCQlza2xfZ2V0X2J1Zl90cmFuc19kcChlbmNv
ZGVyLCBuX2VudHJpZXMpOwogCQkqbl9lbnRyaWVzID0gc2tsX2J1Zl90cmFuc19udW1fZW50cmll
cyhwb3J0LCAqbl9lbnRyaWVzKTsKIAkJcmV0dXJuIGRkaV90cmFuc2xhdGlvbnM7CiAJfSBlbHNl
IGlmIChJU19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7CkBAIC04MzUsMTYgKzg0NSwxOCBAQCBpbnRl
bF9kZGlfZ2V0X2J1Zl90cmFuc19kcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZGRpX2J1Zl90cmFucyAqCi1pbnRlbF9kZGlfZ2V0
X2J1Zl90cmFuc19lZHAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAoraW50ZWxf
ZGRpX2dldF9idWZfdHJhbnNfZWRwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJ
ICAgIGVudW0gcG9ydCBwb3J0LCBpbnQgKm5fZW50cmllcykKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwogCWlmIChJ
U19HRU45X0JDKGRldl9wcml2KSkgewogCQljb25zdCBzdHJ1Y3QgZGRpX2J1Zl90cmFucyAqZGRp
X3RyYW5zbGF0aW9ucyA9Ci0JCQlza2xfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsIG5fZW50
cmllcyk7CisJCQlza2xfZ2V0X2J1Zl90cmFuc19lZHAoZW5jb2Rlciwgbl9lbnRyaWVzKTsKIAkJ
Km5fZW50cmllcyA9IHNrbF9idWZfdHJhbnNfbnVtX2VudHJpZXMocG9ydCwgKm5fZW50cmllcyk7
CiAJCXJldHVybiBkZGlfdHJhbnNsYXRpb25zOwogCX0gZWxzZSBpZiAoSVNfQlJPQURXRUxMKGRl
dl9wcml2KSkgewotCQlyZXR1cm4gYmR3X2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCBuX2Vu
dHJpZXMpOworCQlyZXR1cm4gYmR3X2dldF9idWZfdHJhbnNfZWRwKGVuY29kZXIsIG5fZW50cmll
cyk7CiAJfSBlbHNlIGlmIChJU19IQVNXRUxMKGRldl9wcml2KSkgewogCQkqbl9lbnRyaWVzID0g
QVJSQVlfU0laRShoc3dfZGRpX3RyYW5zbGF0aW9uc19kcCk7CiAJCXJldHVybiBoc3dfZGRpX3Ry
YW5zbGF0aW9uc19kcDsKQEAgLTg3MSw5ICs4ODMsMTEgQEAgaW50ZWxfZGRpX2dldF9idWZfdHJh
bnNfZmRpKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIH0KIAogc3RhdGljIGNv
bnN0IHN0cnVjdCBkZGlfYnVmX3RyYW5zICoKLWludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2hkbWko
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAoraW50ZWxfZGRpX2dldF9idWZfdHJh
bnNfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCSAgICAgaW50ICpuX2Vu
dHJpZXMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShl
bmNvZGVyLT5iYXNlLmRldik7CisKIAlpZiAoSVNfR0VOOV9CQyhkZXZfcHJpdikpIHsKIAkJcmV0
dXJuIHNrbF9nZXRfYnVmX3RyYW5zX2hkbWkoZGV2X3ByaXYsIG5fZW50cmllcyk7CiAJfSBlbHNl
IGlmIChJU19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7CkBAIC04ODksMzMgKzkwMywzNiBAQCBpbnRl
bF9kZGlfZ2V0X2J1Zl90cmFuc19oZG1pKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBieHRfZGRpX2J1Zl90cmFucyAqCi1ieHRfZ2V0
X2J1Zl90cmFuc19kcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9l
bnRyaWVzKQorYnh0X2dldF9idWZfdHJhbnNfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsIGludCAqbl9lbnRyaWVzKQogewogCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKGJ4dF9kZGlf
dHJhbnNsYXRpb25zX2RwKTsKIAlyZXR1cm4gYnh0X2RkaV90cmFuc2xhdGlvbnNfZHA7CiB9CiAK
IHN0YXRpYyBjb25zdCBzdHJ1Y3QgYnh0X2RkaV9idWZfdHJhbnMgKgotYnh0X2dldF9idWZfdHJh
bnNfZWRwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50ICpuX2VudHJpZXMp
CitieHRfZ2V0X2J1Zl90cmFuc19lZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGlu
dCAqbl9lbnRyaWVzKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOworCiAJaWYgKGRldl9wcml2LT52YnQuZWRwLmxvd192
c3dpbmcpIHsKIAkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoYnh0X2RkaV90cmFuc2xhdGlvbnNf
ZWRwKTsKIAkJcmV0dXJuIGJ4dF9kZGlfdHJhbnNsYXRpb25zX2VkcDsKIAl9CiAKLQlyZXR1cm4g
Ynh0X2dldF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsIG5fZW50cmllcyk7CisJcmV0dXJuIGJ4dF9n
ZXRfYnVmX3RyYW5zX2RwKGVuY29kZXIsIG5fZW50cmllcyk7CiB9CiAKIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgYnh0X2RkaV9idWZfdHJhbnMgKgotYnh0X2dldF9idWZfdHJhbnNfaGRtaShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRyaWVzKQorYnh0X2dldF9idWZf
dHJhbnNfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgaW50ICpuX2VudHJpZXMp
CiB7CiAJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoYnh0X2RkaV90cmFuc2xhdGlvbnNfaGRtaSk7
CiAJcmV0dXJuIGJ4dF9kZGlfdHJhbnNsYXRpb25zX2hkbWk7CiB9CiAKIHN0YXRpYyBjb25zdCBz
dHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgKgotY25sX2dldF9idWZfdHJhbnNfaGRtaShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRyaWVzKQorY25sX2dldF9idWZf
dHJhbnNfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgaW50ICpuX2VudHJpZXMp
CiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVy
LT5iYXNlLmRldik7CiAJdTMyIHZvbHRhZ2UgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBDTkxf
UE9SVF9DT01QX0RXMykgJiBWT0xUQUdFX0lORk9fTUFTSzsKIAogCWlmICh2b2x0YWdlID09IFZP
TFRBR0VfSU5GT18wXzg1VikgewpAQCAtOTM1LDggKzk1Miw5IEBAIGNubF9nZXRfYnVmX3RyYW5z
X2hkbWkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgKm5fZW50cmllcykK
IH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAqCi1jbmxfZ2V0X2J1
Zl90cmFuc19kcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRy
aWVzKQorY25sX2dldF9idWZfdHJhbnNfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIs
IGludCAqbl9lbnRyaWVzKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXUzMiB2b2x0YWdlID0gaW50ZWxfZGVfcmVh
ZChkZXZfcHJpdiwgQ05MX1BPUlRfQ09NUF9EVzMpICYgVk9MVEFHRV9JTkZPX01BU0s7CiAKIAlp
ZiAodm9sdGFnZSA9PSBWT0xUQUdFX0lORk9fMF84NVYpIHsKQEAgLTk1Niw4ICs5NzQsOSBAQCBj
bmxfZ2V0X2J1Zl90cmFuc19kcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGlu
dCAqbl9lbnRyaWVzKQogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5z
ICoKLWNubF9nZXRfYnVmX3RyYW5zX2VkcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsIGludCAqbl9lbnRyaWVzKQorY25sX2dldF9idWZfdHJhbnNfZWRwKHN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyLCBpbnQgKm5fZW50cmllcykKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAl1MzIgdm9sdGFn
ZSA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIENOTF9QT1JUX0NPTVBfRFczKSAmIFZPTFRBR0Vf
SU5GT19NQVNLOwogCiAJaWYgKGRldl9wcml2LT52YnQuZWRwLmxvd192c3dpbmcpIHsKQEAgLTk3
NiwxNCArOTk1LDE2IEBAIGNubF9nZXRfYnVmX3RyYW5zX2VkcChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsIGludCAqbl9lbnRyaWVzKQogCQl9CiAJCXJldHVybiBOVUxMOwogCX0g
ZWxzZSB7Ci0JCXJldHVybiBjbmxfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgbl9lbnRyaWVz
KTsKKwkJcmV0dXJuIGNubF9nZXRfYnVmX3RyYW5zX2RwKGVuY29kZXIsIG5fZW50cmllcyk7CiAJ
fQogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5zICoKLWljbF9nZXRf
Y29tYm9fYnVmX3RyYW5zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IHR5
cGUsIGludCByYXRlLAoraWNsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsIGludCB0eXBlLCBpbnQgcmF0ZSwKIAkJCWludCAqbl9lbnRyaWVzKQogewor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFz
ZS5kZXYpOworCiAJaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0hETUkpIHsKIAkJKm5fZW50cmll
cyA9IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2hkbWkpOwogCQly
ZXR1cm4gaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2hkbWk7CkBAIC0xMDAwLDcgKzEw
MjEsNyBAQCBpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsIGludCB0eXBlLCBpbnQgcmF0ZSwKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBp
Y2xfbWdfcGh5X2RkaV9idWZfdHJhbnMgKgotaWNsX2dldF9tZ19idWZfdHJhbnMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCitpY2xfZ2V0X21n
X2J1Zl90cmFucyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgaW50IHR5cGUsIGludCBy
YXRlLAogCQkgICAgIGludCAqbl9lbnRyaWVzKQogewogCWlmICh0eXBlID09IElOVEVMX09VVFBV
VF9IRE1JKSB7CkBAIC0xMDE2LDcgKzEwMzcsNyBAQCBpY2xfZ2V0X21nX2J1Zl90cmFucyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCB0eXBlLCBpbnQgcmF0ZSwKIH0KIAog
c3RhdGljIGNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAqCi1laGxfZ2V0X2NvbWJvX2J1
Zl90cmFucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCB0eXBlLCBpbnQg
cmF0ZSwKK2VobF9nZXRfY29tYm9fYnVmX3RyYW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLCBpbnQgdHlwZSwgaW50IHJhdGUsCiAJCQlpbnQgKm5fZW50cmllcykKIHsKIAlpZiAodHlw
ZSAhPSBJTlRFTF9PVVRQVVRfSERNSSAmJiB0eXBlICE9IElOVEVMX09VVFBVVF9FRFApIHsKQEAg
LTEwMjQsMTUgKzEwNDUsMTUgQEAgZWhsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCiAJCXJldHVybiBlaGxf
Y29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHA7CiAJfQogCi0JcmV0dXJuIGljbF9nZXRfY29t
Ym9fYnVmX3RyYW5zKGRldl9wcml2LCB0eXBlLCByYXRlLCBuX2VudHJpZXMpOworCXJldHVybiBp
Y2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhlbmNvZGVyLCB0eXBlLCByYXRlLCBuX2VudHJpZXMpOwog
fQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5zICoKLXRnbF9nZXRfY29t
Ym9fYnVmX3RyYW5zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IHR5cGUs
IGludCByYXRlLAordGdsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsIGludCB0eXBlLCBpbnQgcmF0ZSwKIAkJCWludCAqbl9lbnRyaWVzKQogewogCWlm
ICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JIHx8IHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkg
ewotCQlyZXR1cm4gaWNsX2dldF9jb21ib19idWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUs
IG5fZW50cmllcyk7CisJCXJldHVybiBpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhlbmNvZGVyLCB0
eXBlLCByYXRlLCBuX2VudHJpZXMpOwogCX0gZWxzZSBpZiAocmF0ZSA+IDI3MDAwMCkgewogCQkq
bl9lbnRyaWVzID0gQVJSQVlfU0laRSh0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBf
aGJyMik7CiAJCXJldHVybiB0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyMjsK
QEAgLTEwNDMsNyArMTA2NCw3IEBAIHRnbF9nZXRfY29tYm9fYnVmX3RyYW5zKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IHR5cGUsIGludCByYXRlLAogfQogCiBzdGF0aWMg
Y29uc3Qgc3RydWN0IHRnbF9ka2xfcGh5X2RkaV9idWZfdHJhbnMgKgotdGdsX2dldF9ka2xfYnVm
X3RyYW5zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IHR5cGUsIGludCBy
YXRlLAordGdsX2dldF9ka2xfYnVmX3RyYW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
LCBpbnQgdHlwZSwgaW50IHJhdGUsCiAJCSAgICAgIGludCAqbl9lbnRyaWVzKQogewogCWlmICh0
eXBlID09IElOVEVMX09VVFBVVF9IRE1JKSB7CkBAIC0xMDY2LDM0ICsxMDg3LDM0IEBAIHN0YXRp
YyBpbnQgaW50ZWxfZGRpX2hkbWlfbGV2ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIp
CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikgewogCQlpZiAoaW50ZWxfcGh5X2lz
X2NvbWJvKGRldl9wcml2LCBwaHkpKQotCQkJdGdsX2dldF9jb21ib19idWZfdHJhbnMoZGV2X3By
aXYsIElOVEVMX09VVFBVVF9IRE1JLAorCQkJdGdsX2dldF9jb21ib19idWZfdHJhbnMoZW5jb2Rl
ciwgSU5URUxfT1VUUFVUX0hETUksCiAJCQkJCQkwLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQotCQkJ
dGdsX2dldF9ka2xfYnVmX3RyYW5zKGRldl9wcml2LCBJTlRFTF9PVVRQVVRfSERNSSwgMCwKKwkJ
CXRnbF9nZXRfZGtsX2J1Zl90cmFucyhlbmNvZGVyLCBJTlRFTF9PVVRQVVRfSERNSSwgMCwKIAkJ
CQkJICAgICAgJm5fZW50cmllcyk7CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwog
CX0gZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA9PSAxMSkgewogCQlpZiAoaW50ZWxfcGh5
X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQotCQkJaWNsX2dldF9jb21ib19idWZfdHJhbnMoZGV2
X3ByaXYsIElOVEVMX09VVFBVVF9IRE1JLAorCQkJaWNsX2dldF9jb21ib19idWZfdHJhbnMoZW5j
b2RlciwgSU5URUxfT1VUUFVUX0hETUksCiAJCQkJCQkwLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQot
CQkJaWNsX2dldF9tZ19idWZfdHJhbnMoZGV2X3ByaXYsIElOVEVMX09VVFBVVF9IRE1JLCAwLAor
CQkJaWNsX2dldF9tZ19idWZfdHJhbnMoZW5jb2RlciwgSU5URUxfT1VUUFVUX0hETUksIDAsCiAJ
CQkJCSAgICAgJm5fZW50cmllcyk7CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwog
CX0gZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKLQkJY25sX2dldF9idWZfdHJh
bnNfaGRtaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJCWNubF9nZXRfYnVmX3RyYW5zX2hkbWko
ZW5jb2RlciwgJm5fZW50cmllcyk7CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwog
CX0gZWxzZSBpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpIHsKLQkJYnh0X2dldF9idWZfdHJhbnNf
aGRtaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJCWJ4dF9nZXRfYnVmX3RyYW5zX2hkbWkoZW5j
b2RlciwgJm5fZW50cmllcyk7CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwogCX0g
ZWxzZSBpZiAoSVNfR0VOOV9CQyhkZXZfcHJpdikpIHsKLQkJaW50ZWxfZGRpX2dldF9idWZfdHJh
bnNfaGRtaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJCWludGVsX2RkaV9nZXRfYnVmX3RyYW5z
X2hkbWkoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJCWRlZmF1bHRfZW50cnkgPSA4OwogCX0gZWxz
ZSBpZiAoSVNfQlJPQURXRUxMKGRldl9wcml2KSkgewotCQlpbnRlbF9kZGlfZ2V0X2J1Zl90cmFu
c19oZG1pKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKKwkJaW50ZWxfZGRpX2dldF9idWZfdHJhbnNf
aGRtaShlbmNvZGVyLCAmbl9lbnRyaWVzKTsKIAkJZGVmYXVsdF9lbnRyeSA9IDc7CiAJfSBlbHNl
IGlmIChJU19IQVNXRUxMKGRldl9wcml2KSkgewotCQlpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19o
ZG1pKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKKwkJaW50ZWxfZGRpX2dldF9idWZfdHJhbnNfaGRt
aShlbmNvZGVyLCAmbl9lbnRyaWVzKTsKIAkJZGVmYXVsdF9lbnRyeSA9IDY7CiAJfSBlbHNlIHsK
IAkJZHJtX1dBUk4oJmRldl9wcml2LT5kcm0sIDEsICJkZGkgdHJhbnNsYXRpb24gdGFibGUgbWlz
c2luZ1xuIik7CkBAIC0xMTMxLDEwICsxMTUyLDEwIEBAIHN0YXRpYyB2b2lkIGludGVsX3ByZXBh
cmVfZHBfZGRpX2J1ZmZlcnMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCWRkaV90
cmFuc2xhdGlvbnMgPSBpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19mZGkoZGV2X3ByaXYsCiAJCQkJ
CQkJICAgICAgICZuX2VudHJpZXMpOwogCWVsc2UgaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0
Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCi0JCWRkaV90cmFuc2xhdGlvbnMgPSBpbnRlbF9k
ZGlfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsIHBvcnQsCisJCWRkaV90cmFuc2xhdGlvbnMg
PSBpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19lZHAoZW5jb2RlciwgcG9ydCwKIAkJCQkJCQkgICAg
ICAgJm5fZW50cmllcyk7CiAJZWxzZQotCQlkZGlfdHJhbnNsYXRpb25zID0gaW50ZWxfZGRpX2dl
dF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsIHBvcnQsCisJCWRkaV90cmFuc2xhdGlvbnMgPSBpbnRl
bF9kZGlfZ2V0X2J1Zl90cmFuc19kcChlbmNvZGVyLCBwb3J0LAogCQkJCQkJCSAgICAgICZuX2Vu
dHJpZXMpOwogCiAJLyogSWYgd2UncmUgYm9vc3RpbmcgdGhlIGN1cnJlbnQsIHNldCBiaXQgMzEg
b2YgdHJhbnMxICovCkBAIC0xMTYzLDcgKzExODQsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wcmVw
YXJlX2hkbWlfZGRpX2J1ZmZlcnMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZW51
bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0OwogCWNvbnN0IHN0cnVjdCBkZGlfYnVmX3RyYW5z
ICpkZGlfdHJhbnNsYXRpb25zOwogCi0JZGRpX3RyYW5zbGF0aW9ucyA9IGludGVsX2RkaV9nZXRf
YnVmX3RyYW5zX2hkbWkoZGV2X3ByaXYsICZuX2VudHJpZXMpOworCWRkaV90cmFuc2xhdGlvbnMg
PSBpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19oZG1pKGVuY29kZXIsICZuX2VudHJpZXMpOwogCiAJ
aWYgKGRybV9XQVJOX09OX09OQ0UoJmRldl9wcml2LT5kcm0sICFkZGlfdHJhbnNsYXRpb25zKSkK
IAkJcmV0dXJuOwpAQCAtMjA5OCwxMSArMjExOSwxNSBAQCBzdGF0aWMgdm9pZCBza2xfZGRpX3Nl
dF9pYm9vc3Qoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCWludCBuX2VudHJpZXM7
CiAKIAkJaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0hETUkpCi0JCQlkZGlfdHJhbnNsYXRpb25z
ID0gaW50ZWxfZGRpX2dldF9idWZfdHJhbnNfaGRtaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJ
CQlkZGlfdHJhbnNsYXRpb25zID0gaW50ZWxfZGRpX2dldF9idWZfdHJhbnNfaGRtaShlbmNvZGVy
LCAmbl9lbnRyaWVzKTsKIAkJZWxzZSBpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKQotCQkJ
ZGRpX3RyYW5zbGF0aW9ucyA9IGludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2VkcChkZXZfcHJpdiwg
cG9ydCwgJm5fZW50cmllcyk7CisJCQlkZGlfdHJhbnNsYXRpb25zID0gaW50ZWxfZGRpX2dldF9i
dWZfdHJhbnNfZWRwKGVuY29kZXIsCisJCQkJCQkJCSAgICAgICBwb3J0LAorCQkJCQkJCQkgICAg
ICAgJm5fZW50cmllcyk7CiAJCWVsc2UKLQkJCWRkaV90cmFuc2xhdGlvbnMgPSBpbnRlbF9kZGlf
Z2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgcG9ydCwgJm5fZW50cmllcyk7CisJCQlkZGlfdHJh
bnNsYXRpb25zID0gaW50ZWxfZGRpX2dldF9idWZfdHJhbnNfZHAoZW5jb2RlciwKKwkJCQkJCQkJ
ICAgICAgcG9ydCwKKwkJCQkJCQkJICAgICAgJm5fZW50cmllcyk7CiAKIAkJaWYgKGRybV9XQVJO
X09OX09OQ0UoJmRldl9wcml2LT5kcm0sICFkZGlfdHJhbnNsYXRpb25zKSkKIAkJCXJldHVybjsK
QEAgLTIxMzMsMTEgKzIxNTgsMTEgQEAgc3RhdGljIHZvaWQgYnh0X2RkaV92c3dpbmdfc2VxdWVu
Y2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaW50IG5fZW50cmllczsKIAogCWlm
ICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JKQotCQlkZGlfdHJhbnNsYXRpb25zID0gYnh0X2dl
dF9idWZfdHJhbnNfaGRtaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJCWRkaV90cmFuc2xhdGlv
bnMgPSBieHRfZ2V0X2J1Zl90cmFuc19oZG1pKGVuY29kZXIsICZuX2VudHJpZXMpOwogCWVsc2Ug
aWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IGJ4dF9n
ZXRfYnVmX3RyYW5zX2VkcChkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJCWRkaV90cmFuc2xhdGlv
bnMgPSBieHRfZ2V0X2J1Zl90cmFuc19lZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJZWxzZQot
CQlkZGlfdHJhbnNsYXRpb25zID0gYnh0X2dldF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsICZuX2Vu
dHJpZXMpOworCQlkZGlfdHJhbnNsYXRpb25zID0gYnh0X2dldF9idWZfdHJhbnNfZHAoZW5jb2Rl
ciwgJm5fZW50cmllcyk7CiAKIAlpZiAoZHJtX1dBUk5fT05fT05DRSgmZGV2X3ByaXYtPmRybSwg
IWRkaV90cmFuc2xhdGlvbnMpKQogCQlyZXR1cm47CkBAIC0yMTYxLDM2ICsyMTg2LDM2IEBAIHN0
YXRpYyB1OCBpbnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCWlmIChpbnRlbF9waHlf
aXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpCi0JCQl0Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZf
cHJpdiwgZW5jb2Rlci0+dHlwZSwKKwkJCXRnbF9nZXRfY29tYm9fYnVmX3RyYW5zKGVuY29kZXIs
IGVuY29kZXItPnR5cGUsCiAJCQkJCQlpbnRlbF9kcC0+bGlua19yYXRlLCAmbl9lbnRyaWVzKTsK
IAkJZWxzZQotCQkJdGdsX2dldF9ka2xfYnVmX3RyYW5zKGRldl9wcml2LCBlbmNvZGVyLT50eXBl
LAorCQkJdGdsX2dldF9ka2xfYnVmX3RyYW5zKGVuY29kZXIsIGVuY29kZXItPnR5cGUsCiAJCQkJ
CSAgICAgIGludGVsX2RwLT5saW5rX3JhdGUsICZuX2VudHJpZXMpOwogCX0gZWxzZSBpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA9PSAxMSkgewogCQlpZiAoSVNfRUxLSEFSVExBS0UoZGV2X3ByaXYp
KQotCQkJZWhsX2dldF9jb21ib19idWZfdHJhbnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCisJ
CQllaGxfZ2V0X2NvbWJvX2J1Zl90cmFucyhlbmNvZGVyLCBlbmNvZGVyLT50eXBlLAogCQkJCQkJ
aW50ZWxfZHAtPmxpbmtfcmF0ZSwgJm5fZW50cmllcyk7CiAJCWVsc2UgaWYgKGludGVsX3BoeV9p
c19jb21ibyhkZXZfcHJpdiwgcGh5KSkKLQkJCWljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9w
cml2LCBlbmNvZGVyLT50eXBlLAorCQkJaWNsX2dldF9jb21ib19idWZfdHJhbnMoZW5jb2Rlciwg
ZW5jb2Rlci0+dHlwZSwKIAkJCQkJCWludGVsX2RwLT5saW5rX3JhdGUsICZuX2VudHJpZXMpOwog
CQllbHNlCi0JCQlpY2xfZ2V0X21nX2J1Zl90cmFucyhkZXZfcHJpdiwgZW5jb2Rlci0+dHlwZSwK
KwkJCWljbF9nZXRfbWdfYnVmX3RyYW5zKGVuY29kZXIsIGVuY29kZXItPnR5cGUsCiAJCQkJCSAg
ICAgaW50ZWxfZHAtPmxpbmtfcmF0ZSwgJm5fZW50cmllcyk7CiAJfSBlbHNlIGlmIChJU19DQU5O
T05MQUtFKGRldl9wcml2KSkgewogCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRf
RURQKQotCQkJY25sX2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKKwkJ
CWNubF9nZXRfYnVmX3RyYW5zX2VkcChlbmNvZGVyLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQotCQkJ
Y25sX2dldF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsICZuX2VudHJpZXMpOworCQkJY25sX2dldF9i
dWZfdHJhbnNfZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJfSBlbHNlIGlmIChJU19HRU45X0xQ
KGRldl9wcml2KSkgewogCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKQot
CQkJYnh0X2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKKwkJCWJ4dF9n
ZXRfYnVmX3RyYW5zX2VkcChlbmNvZGVyLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQotCQkJYnh0X2dl
dF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsICZuX2VudHJpZXMpOworCQkJYnh0X2dldF9idWZfdHJh
bnNfZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJfSBlbHNlIHsKIAkJaWYgKGVuY29kZXItPnR5
cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkKLQkJCWludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2VkcChk
ZXZfcHJpdiwgcG9ydCwgJm5fZW50cmllcyk7CisJCQlpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19l
ZHAoZW5jb2RlciwgcG9ydCwgJm5fZW50cmllcyk7CiAJCWVsc2UKLQkJCWludGVsX2RkaV9nZXRf
YnVmX3RyYW5zX2RwKGRldl9wcml2LCBwb3J0LCAmbl9lbnRyaWVzKTsKKwkJCWludGVsX2RkaV9n
ZXRfYnVmX3RyYW5zX2RwKGVuY29kZXIsIHBvcnQsICZuX2VudHJpZXMpOwogCX0KIAogCWlmIChk
cm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgbl9lbnRyaWVzIDwgMSkpCkBAIC0yMjIzLDExICsy
MjQ4LDExIEBAIHN0YXRpYyB2b2lkIGNubF9kZGlfdnN3aW5nX3Byb2dyYW0oc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIsCiAJdTMyIHZhbDsKIAogCWlmICh0eXBlID09IElOVEVMX09VVFBV
VF9IRE1JKQotCQlkZGlfdHJhbnNsYXRpb25zID0gY25sX2dldF9idWZfdHJhbnNfaGRtaShkZXZf
cHJpdiwgJm5fZW50cmllcyk7CisJCWRkaV90cmFuc2xhdGlvbnMgPSBjbmxfZ2V0X2J1Zl90cmFu
c19oZG1pKGVuY29kZXIsICZuX2VudHJpZXMpOwogCWVsc2UgaWYgKHR5cGUgPT0gSU5URUxfT1VU
UFVUX0VEUCkKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IGNubF9nZXRfYnVmX3RyYW5zX2VkcChkZXZf
cHJpdiwgJm5fZW50cmllcyk7CisJCWRkaV90cmFuc2xhdGlvbnMgPSBjbmxfZ2V0X2J1Zl90cmFu
c19lZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJZWxzZQotCQlkZGlfdHJhbnNsYXRpb25zID0g
Y25sX2dldF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsICZuX2VudHJpZXMpOworCQlkZGlfdHJhbnNs
YXRpb25zID0gY25sX2dldF9idWZfdHJhbnNfZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CiAKIAlp
ZiAoZHJtX1dBUk5fT05fT05DRSgmZGV2X3ByaXYtPmRybSwgIWRkaV90cmFuc2xhdGlvbnMpKQog
CQlyZXR1cm47CkBAIC0yMzQ0LDIyICsyMzY5LDIzIEBAIHN0YXRpYyB2b2lkIGNubF9kZGlfdnN3
aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBDTkxfUE9SVF9UWF9EVzVfR1JQKHBvcnQpLCB2YWwpOwogfQogCi1zdGF0
aWMgdm9pZCBpY2xfZGRpX2NvbWJvX3Zzd2luZ19wcm9ncmFtKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKLQkJCQkJdTMyIGxldmVsLCBlbnVtIHBoeSBwaHksIGludCB0eXBlLAot
CQkJCQlpbnQgcmF0ZSkKK3N0YXRpYyB2b2lkIGljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0o
c3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkJCSB1MzIgbGV2ZWwsIGVudW0gcGh5
IHBoeSwgaW50IHR5cGUsCisJCQkJCSBpbnQgcmF0ZSkKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAljb25zdCBzdHJ1
Y3QgY25sX2RkaV9idWZfdHJhbnMgKmRkaV90cmFuc2xhdGlvbnMgPSBOVUxMOwogCXUzMiBuX2Vu
dHJpZXMsIHZhbDsKIAlpbnQgbG47CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikK
LQkJZGRpX3RyYW5zbGF0aW9ucyA9IHRnbF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2LCB0
eXBlLCByYXRlLAorCQlkZGlfdHJhbnNsYXRpb25zID0gdGdsX2dldF9jb21ib19idWZfdHJhbnMo
ZW5jb2RlciwgdHlwZSwgcmF0ZSwKIAkJCQkJCQkgICAmbl9lbnRyaWVzKTsKIAllbHNlIGlmIChJ
U19FTEtIQVJUTEFLRShkZXZfcHJpdikpCi0JCWRkaV90cmFuc2xhdGlvbnMgPSBlaGxfZ2V0X2Nv
bWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwgcmF0ZSwKKwkJZGRpX3RyYW5zbGF0aW9ucyA9
IGVobF9nZXRfY29tYm9fYnVmX3RyYW5zKGVuY29kZXIsIHR5cGUsIHJhdGUsCiAJCQkJCQkJICAg
Jm5fZW50cmllcyk7CiAJZWxzZQotCQlkZGlfdHJhbnNsYXRpb25zID0gaWNsX2dldF9jb21ib19i
dWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsCisJCWRkaV90cmFuc2xhdGlvbnMgPSBpY2xf
Z2V0X2NvbWJvX2J1Zl90cmFucyhlbmNvZGVyLCB0eXBlLCByYXRlLAogCQkJCQkJCSAgICZuX2Vu
dHJpZXMpOwogCWlmICghZGRpX3RyYW5zbGF0aW9ucykKIAkJcmV0dXJuOwpAQCAtMjQ3MSw3ICsy
NDk3LDcgQEAgc3RhdGljIHZvaWQgaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBJ
Q0xfUE9SVF9UWF9EVzVfR1JQKHBoeSksIHZhbCk7CiAKIAkvKiA1LiBQcm9ncmFtIHN3aW5nIGFu
ZCBkZS1lbXBoYXNpcyAqLwotCWljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0oZGV2X3ByaXYs
IGxldmVsLCBwaHksIHR5cGUsIHJhdGUpOworCWljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0o
ZW5jb2RlciwgbGV2ZWwsIHBoeSwgdHlwZSwgcmF0ZSk7CiAKIAkvKiA2LiBTZXQgdHJhaW5pbmcg
ZW5hYmxlIHRvIHRyaWdnZXIgdXBkYXRlICovCiAJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwgSUNMX1BPUlRfVFhfRFc1X0xOMChwaHkpKTsKQEAgLTI0OTUsNyArMjUyMSw3IEBAIHN0YXRp
YyB2b2lkIGljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciwKIAkJcmF0ZSA9IGludGVsX2RwLT5saW5rX3JhdGU7CiAJfQogCi0JZGRpX3Ry
YW5zbGF0aW9ucyA9IGljbF9nZXRfbWdfYnVmX3RyYW5zKGRldl9wcml2LCB0eXBlLCByYXRlLAor
CWRkaV90cmFuc2xhdGlvbnMgPSBpY2xfZ2V0X21nX2J1Zl90cmFucyhlbmNvZGVyLCB0eXBlLCBy
YXRlLAogCQkJCQkJJm5fZW50cmllcyk7CiAJLyogVGhlIHRhYmxlIGRvZXMgbm90IGhhdmUgdmFs
dWVzIGZvciBsZXZlbCAzIGFuZCBsZXZlbCA5LiAqLwogCWlmIChsZXZlbCA+PSBuX2VudHJpZXMg
fHwgbGV2ZWwgPT0gMyB8fCBsZXZlbCA9PSA5KSB7CkBAIC0yNjQwLDcgKzI2NjYsNyBAQCB0Z2xf
ZGtsX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
LCBpbnQgbGlua19jbG9jaywKIAkJcmF0ZSA9IGludGVsX2RwLT5saW5rX3JhdGU7CiAJfQogCi0J
ZGRpX3RyYW5zbGF0aW9ucyA9IHRnbF9nZXRfZGtsX2J1Zl90cmFucyhkZXZfcHJpdiwgZW5jb2Rl
ci0+dHlwZSwgcmF0ZSwKKwlkZGlfdHJhbnNsYXRpb25zID0gdGdsX2dldF9ka2xfYnVmX3RyYW5z
KGVuY29kZXIsIGVuY29kZXItPnR5cGUsIHJhdGUsCiAJCQkJCQkgJm5fZW50cmllcyk7CiAKIAlp
ZiAobGV2ZWwgPj0gbl9lbnRyaWVzKQotLSAKMi4yNy4wCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZngK

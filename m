Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 0E515129BF8
	for <lists+intel-gfx@lfdr.de>; Tue, 24 Dec 2019 01:06:13 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 698AA6E53E;
	Tue, 24 Dec 2019 00:06:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6B3AA6E511
 for <intel-gfx@lists.freedesktop.org>; Tue, 24 Dec 2019 00:05:45 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 Dec 2019 16:05:44 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,349,1571727600"; d="scan'208";a="417409519"
Received: from ldmartin1-desk.jf.intel.com ([10.165.21.151])
 by fmsmga005.fm.intel.com with ESMTP; 23 Dec 2019 16:05:44 -0800
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 23 Dec 2019 16:05:25 -0800
Message-Id: <20191224000528.10630-8-lucas.demarchi@intel.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191224000528.10630-1-lucas.demarchi@intel.com>
References: <20191224000528.10630-1-lucas.demarchi@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 07/10] drm/i915: prefer 3-letter acronym for
 ironlake
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgYXJlIGN1cnJlbnRseSB1c2luZyBhIG1peCBvZiBwbGF0Zm9ybSBuYW1lIGFuZCBhY3Jvbnlt
IHRvIG5hbWUgdGhlCmZ1bmN0aW9ucy4gTGV0J3MgcHJlZmVyIHRoZSBhY3JvbnltIGFzIGl0IHNo
b3VsZCBiZSBjbGVhciB3aGF0IHBsYXRmb3JtCml0J3MgYWJvdXQgYW5kIGl0J3Mgc2hvcnRlciwg
c28gaXQgZG9lc24ndCBnbyBvdmVyIDgwIGNvbHVtbnMgaW4gYSBmZXcKY2FzZXMuIFRoaXMgY29u
dmVydHMgaXJvbmxha2UgdG8gaWxrIHdoZXJlIGFwcHJvcHJpYXRlLgoKU2lnbmVkLW9mZi1ieTog
THVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+CkFja2VkLWJ5OiBKYW5p
IE5pa3VsYSA8amFuaS5uaWt1bGFAbGludXguaW50ZWwuY29tPgpBY2tlZC1ieTogVmlsbGUgU3ly
asOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHQg
Um9wZXIgPG1hdHRoZXcuZC5yb3BlckBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9jcnQuYyAgICAgIHwgICA4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8IDE2OCArKysrKysrKystLS0tLS0tLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oICB8ICAgNCArLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jICAgICAgIHwgIDM0ICsrLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbXN0LmMgICB8ICAgMiArLQogLi4uL2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmlmb191bmRlcnJ1bi5jICAgIHwgICA2ICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jICAgICAgICAgfCAgIDcgKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9pcnEuYyAgICAgICAgICAgICAgIHwgIDEyICstCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAgIDQgKy0KIDExIGZpbGVzIGNo
YW5nZWQsIDEyNSBpbnNlcnRpb25zKCspLCAxMjYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jcnQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfY3J0LmMKaW5kZXggYjJiMTMzNmVjZGI2Li5jYmU1OTc4ZTdm
YjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY3J0LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jcnQuYwpAQCAtMjQ3LDcg
KzI0Nyw3IEBAIHN0YXRpYyB2b2lkIGhzd19wb3N0X2Rpc2FibGVfY3J0KHN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyLAogCiAJaW50ZWxfZGRpX2Rpc2FibGVfdHJhbnNjb2Rlcl9mdW5jKG9s
ZF9jcnRjX3N0YXRlKTsKIAotCWlyb25sYWtlX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7
CisJaWxrX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAKIAlpbnRlbF9kZGlfZGlzYWJs
ZV9waXBlX2Nsb2NrKG9sZF9jcnRjX3N0YXRlKTsKIApAQCAtMzUxLDcgKzM1MSw3IEBAIGludGVs
X2NydF9tb2RlX3ZhbGlkKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAKIAkvKiBU
aGUgRkRJIHJlY2VpdmVyIG9uIExQVCBvbmx5IHN1cHBvcnRzIDhicGMgYW5kIG9ubHkgaGFzIDIg
bGFuZXMuICovCiAJaWYgKEhBU19QQ0hfTFBUKGRldl9wcml2KSAmJgotCSAgICAoaXJvbmxha2Vf
Z2V0X2xhbmVzX3JlcXVpcmVkKG1vZGUtPmNsb2NrLCAyNzAwMDAsIDI0KSA+IDIpKQorCSAgICBp
bGtfZ2V0X2xhbmVzX3JlcXVpcmVkKG1vZGUtPmNsb2NrLCAyNzAwMDAsIDI0KSA+IDIpCiAJCXJl
dHVybiBNT0RFX0NMT0NLX0hJR0g7CiAKIAkvKiBIU1cvQkRXIEZESSBsaW1pdGVkIHRvIDRrICov
CkBAIC00MjcsNyArNDI3LDcgQEAgc3RhdGljIGludCBoc3dfY3J0X2NvbXB1dGVfY29uZmlnKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgYm9v
bCBpbnRlbF9pcm9ubGFrZV9jcnRfZGV0ZWN0X2hvdHBsdWcoc3RydWN0IGRybV9jb25uZWN0b3Ig
KmNvbm5lY3RvcikKK3N0YXRpYyBib29sIGlsa19jcnRfZGV0ZWN0X2hvdHBsdWcoc3RydWN0IGRy
bV9jb25uZWN0b3IgKmNvbm5lY3RvcikKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gY29u
bmVjdG9yLT5kZXY7CiAJc3RydWN0IGludGVsX2NydCAqY3J0ID0gaW50ZWxfYXR0YWNoZWRfY3J0
KGNvbm5lY3Rvcik7CkBAIC01MzUsNyArNTM1LDcgQEAgc3RhdGljIGJvb2wgaW50ZWxfY3J0X2Rl
dGVjdF9ob3RwbHVnKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IpCiAJaW50IGksIHRy
aWVzID0gMDsKIAogCWlmIChIQVNfUENIX1NQTElUKGRldl9wcml2KSkKLQkJcmV0dXJuIGludGVs
X2lyb25sYWtlX2NydF9kZXRlY3RfaG90cGx1Zyhjb25uZWN0b3IpOworCQlyZXR1cm4gaWxrX2Ny
dF9kZXRlY3RfaG90cGx1Zyhjb25uZWN0b3IpOwogCiAJaWYgKElTX1ZBTExFWVZJRVcoZGV2X3By
aXYpKQogCQlyZXR1cm4gdmFsbGV5dmlld19jcnRfZGV0ZWN0X2hvdHBsdWcoY29ubmVjdG9yKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCmluZGV4IDdlOGUyMGZmMDA4
ZC4uMjNmMDkxZTY0NDk4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRp
LmMKQEAgLTM5MTYsNyArMzkxNiw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9wb3N0X2Rpc2Fi
bGUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPj0gOSkKIAkJc2tsX3NjYWxlcl9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKIAllbHNlCi0J
CWlyb25sYWtlX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CisJCWlsa19wZml0X2Rpc2Fi
bGUob2xkX2NydGNfc3RhdGUpOwogCiAJLyoKIAkgKiBXaGVuIGNhbGxlZCBmcm9tIERQIE1TVCBj
b2RlOgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRl
eCAzYjE4Njg2ODQ0YjEuLjYxNzgzYWZlOWUwOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE0Niw4ICsxNDYsOCBAQCBzdGF0aWMgY29uc3Qg
dTY0IGN1cnNvcl9mb3JtYXRfbW9kaWZpZXJzW10gPSB7CiAKIHN0YXRpYyB2b2lkIGk5eHhfY3J0
Y19jbG9ja19nZXQoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJCQkJc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKnBpcGVfY29uZmlnKTsKLXN0YXRpYyB2b2lkIGlyb25sYWtlX3BjaF9jbG9ja19n
ZXQoc3RydWN0IGludGVsX2NydGMgKmNydGMsCi0JCQkJICAgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKnBpcGVfY29uZmlnKTsKK3N0YXRpYyB2b2lkIGlsa19wY2hfY2xvY2tfZ2V0KHN0cnVjdCBp
bnRlbF9jcnRjICpjcnRjLAorCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVf
Y29uZmlnKTsKIAogc3RhdGljIGludCBpbnRlbF9mcmFtZWJ1ZmZlcl9pbml0KHN0cnVjdCBpbnRl
bF9mcmFtZWJ1ZmZlciAqaWZiLAogCQkJCSAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aiwKQEAgLTE1OCw3ICsxNTgsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9jcHVfdHJhbnNjb2Rlcl9z
ZXRfbV9uKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YQogCQkJCQkgY29u
c3Qgc3RydWN0IGludGVsX2xpbmtfbV9uICptX24sCiAJCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxf
bGlua19tX24gKm0yX24yKTsKIHN0YXRpYyB2b2lkIGk5eHhfc2V0X3BpcGVjb25mKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKLXN0YXRpYyB2b2lkIGlyb25sYWtl
X3NldF9waXBlY29uZihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7
CitzdGF0aWMgdm9pZCBpbGtfc2V0X3BpcGVjb25mKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKTsKIHN0YXRpYyB2b2lkIGhzd19zZXRfcGlwZWNvbmYoY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwogc3RhdGljIHZvaWQgYmR3X3NldF9w
aXBlbWlzYyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiBzdGF0
aWMgdm9pZCB2bHZfcHJlcGFyZV9wbGwoc3RydWN0IGludGVsX2NydGMgKmNydGMsCkBAIC0xNjYs
NyArMTY2LDcgQEAgc3RhdGljIHZvaWQgdmx2X3ByZXBhcmVfcGxsKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogc3RhdGljIHZvaWQgY2h2X3ByZXBhcmVfcGxsKHN0cnVjdCBpbnRlbF9jcnRjICpj
cnRjLAogCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZyk7
CiBzdGF0aWMgdm9pZCBza2xfcGZpdF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpOwotc3RhdGljIHZvaWQgaXJvbmxha2VfcGZpdF9lbmFibGUoY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOworc3RhdGljIHZvaWQgaWxrX3Bm
aXRfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKIHN0
YXRpYyB2b2lkIGludGVsX21vZGVzZXRfc2V0dXBfaHdfc3RhdGUoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwKIAkJCQkJIHN0cnVjdCBkcm1fbW9kZXNldF9hY3F1aXJlX2N0eCAqY3R4KTsKIHN0YXRp
YyBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqaW50ZWxfY3J0Y19zdGF0ZV9hbGxvYyhzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0Yyk7CkBAIC00MDMsNyArNDAzLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVj
dCBpbnRlbF9saW1pdCBwbnZfbGltaXRzX2x2ZHMgPSB7CiAgKiBXZSBjYWxjdWxhdGUgY2xvY2sg
dXNpbmcgKHJlZ2lzdGVyX3ZhbHVlICsgMikgZm9yIE4vTTEvTTIsIHNvIGhlcmUKICAqIHRoZSBy
YW5nZSB2YWx1ZSBmb3IgdGhlbSBpcyAoYWN0dWFsX3ZhbHVlIC0gMikuCiAgKi8KLXN0YXRpYyBj
b25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGltaXRzX2lyb25sYWtlX2RhYyA9IHsKK3N0
YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaWxrX2xpbWl0c19kYWMgPSB7CiAJLmRvdCA9
IHsgLm1pbiA9IDI1MDAwLCAubWF4ID0gMzUwMDAwIH0sCiAJLnZjbyA9IHsgLm1pbiA9IDE3NjAw
MDAsIC5tYXggPSAzNTEwMDAwIH0sCiAJLm4gPSB7IC5taW4gPSAxLCAubWF4ID0gNSB9LApAQCAt
NDE2LDcgKzQxNiw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGlt
aXRzX2lyb25sYWtlX2RhYyA9IHsKIAkJLnAyX3Nsb3cgPSAxMCwgLnAyX2Zhc3QgPSA1IH0sCiB9
OwogCi1zdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2xpbWl0IGludGVsX2xpbWl0c19pcm9ubGFr
ZV9zaW5nbGVfbHZkcyA9IHsKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaWxrX2xp
bWl0c19zaW5nbGVfbHZkcyA9IHsKIAkuZG90ID0geyAubWluID0gMjUwMDAsIC5tYXggPSAzNTAw
MDAgfSwKIAkudmNvID0geyAubWluID0gMTc2MDAwMCwgLm1heCA9IDM1MTAwMDAgfSwKIAkubiA9
IHsgLm1pbiA9IDEsIC5tYXggPSAzIH0sCkBAIC00MjksNyArNDI5LDcgQEAgc3RhdGljIGNvbnN0
IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRlbF9saW1pdHNfaXJvbmxha2Vfc2luZ2xlX2x2ZHMgPSB7
CiAJCS5wMl9zbG93ID0gMTQsIC5wMl9mYXN0ID0gMTQgfSwKIH07CiAKLXN0YXRpYyBjb25zdCBz
dHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGltaXRzX2lyb25sYWtlX2R1YWxfbHZkcyA9IHsKK3N0
YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaWxrX2xpbWl0c19kdWFsX2x2ZHMgPSB7CiAJ
LmRvdCA9IHsgLm1pbiA9IDI1MDAwLCAubWF4ID0gMzUwMDAwIH0sCiAJLnZjbyA9IHsgLm1pbiA9
IDE3NjAwMDAsIC5tYXggPSAzNTEwMDAwIH0sCiAJLm4gPSB7IC5taW4gPSAxLCAubWF4ID0gMyB9
LApAQCAtNDQzLDcgKzQ0Myw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50
ZWxfbGltaXRzX2lyb25sYWtlX2R1YWxfbHZkcyA9IHsKIH07CiAKIC8qIExWRFMgMTAwbWh6IHJl
ZmNsayBsaW1pdHMuICovCi1zdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2xpbWl0IGludGVsX2xp
bWl0c19pcm9ubGFrZV9zaW5nbGVfbHZkc18xMDBtID0geworc3RhdGljIGNvbnN0IHN0cnVjdCBp
bnRlbF9saW1pdCBpbGtfbGltaXRzX3NpbmdsZV9sdmRzXzEwMG0gPSB7CiAJLmRvdCA9IHsgLm1p
biA9IDI1MDAwLCAubWF4ID0gMzUwMDAwIH0sCiAJLnZjbyA9IHsgLm1pbiA9IDE3NjAwMDAsIC5t
YXggPSAzNTEwMDAwIH0sCiAJLm4gPSB7IC5taW4gPSAxLCAubWF4ID0gMiB9LApAQCAtNDU2LDcg
KzQ1Niw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGltaXRzX2ly
b25sYWtlX3NpbmdsZV9sdmRzXzEwMG0gPSB7CiAJCS5wMl9zbG93ID0gMTQsIC5wMl9mYXN0ID0g
MTQgfSwKIH07CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGltaXRz
X2lyb25sYWtlX2R1YWxfbHZkc18xMDBtID0geworc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9s
aW1pdCBpbGtfbGltaXRzX2R1YWxfbHZkc18xMDBtID0gewogCS5kb3QgPSB7IC5taW4gPSAyNTAw
MCwgLm1heCA9IDM1MDAwMCB9LAogCS52Y28gPSB7IC5taW4gPSAxNzYwMDAwLCAubWF4ID0gMzUx
MDAwMCB9LAogCS5uID0geyAubWluID0gMSwgLm1heCA9IDMgfSwKQEAgLTE2MzgsNyArMTYzOCw3
IEBAIHZvaWQgdmx2X3dhaXRfcG9ydF9yZWFkeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJCSAgICAgSTkxNV9SRUFEKGRwbGxfcmVnKSAmIHBvcnRfbWFzaywgZXhwZWN0ZWRf
bWFzayk7CiB9CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2VuYWJsZV9wY2hfdHJhbnNjb2Rlcihj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3N0YXRpYyB2b2lkIGls
a19lbmFibGVfcGNoX3RyYW5zY29kZXIoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNy
dGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC0xNzM2LDggKzE3MzYsOCBAQCBzdGF0aWMg
dm9pZCBscHRfZW5hYmxlX3BjaF90cmFuc2NvZGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gZW5hYmxlIFBDSCB0cmFuc2NvZGVyXG4i
KTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfZGlzYWJsZV9wY2hfdHJhbnNjb2RlcihzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkJCSAgICBlbnVtIHBpcGUgcGlwZSkK
K3N0YXRpYyB2b2lkIGlsa19kaXNhYmxlX3BjaF90cmFuc2NvZGVyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKKwkJCQkgICAgICAgZW51bSBwaXBlIHBpcGUpCiB7CiAJaTkxNV9y
ZWdfdCByZWc7CiAJdTMyIHZhbDsKQEAgLTQ4NzAsOCArNDg3MCw4IEBAIHN0YXRpYyB2b2lkIGlu
dGVsX2ZkaV9ub3JtYWxfdHJhaW4oc3RydWN0IGludGVsX2NydGMgKmNydGMpCiB9CiAKIC8qIFRo
ZSBGREkgbGluayB0cmFpbmluZyBmdW5jdGlvbnMgZm9yIElMSy9JYmV4cGVhay4gKi8KLXN0YXRp
YyB2b2lkIGlyb25sYWtlX2ZkaV9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAot
CQkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3N0YXRp
YyB2b2lkIGlsa19mZGlfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKKwkJCSAg
ICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2ID0gY3J0Yy0+YmFzZS5kZXY7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwpAQCAtNTIyMyw3ICs1MjIzLDcgQEAgc3Rh
dGljIHZvaWQgaXZiX21hbnVhbF9mZGlfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YywKIAlEUk1fREVCVUdfS01TKCJGREkgdHJhaW4gZG9uZS5cbiIpOwogfQogCi1zdGF0aWMgdm9p
ZCBpcm9ubGFrZV9mZGlfcGxsX2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSkKK3N0YXRpYyB2b2lkIGlsa19mZGlfcGxsX2VuYWJsZShjb25zdCBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50
ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGludGVsX2NydGMtPmJhc2UuZGV2
KTsKQEAgLTUyNjAsNyArNTI2MCw3IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX2ZkaV9wbGxfZW5h
YmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCX0KIH0KIAot
c3RhdGljIHZvaWQgaXJvbmxha2VfZmRpX3BsbF9kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRjICpp
bnRlbF9jcnRjKQorc3RhdGljIHZvaWQgaWxrX2ZkaV9wbGxfZGlzYWJsZShzdHJ1Y3QgaW50ZWxf
Y3J0YyAqaW50ZWxfY3J0YykKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gaW50ZWxfY3J0
Yy0+YmFzZS5kZXY7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShkZXYpOwpAQCAtNTI5MCw3ICs1MjkwLDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfZmRpX3Bs
bF9kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjKQogCXVkZWxheSgxMDApOwog
fQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9mZGlfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YykKK3N0YXRpYyB2b2lkIGlsa19mZGlfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMt
PmJhc2UuZGV2KTsKIAllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CkBAIC01NDk3LDggKzU0
OTcsOCBAQCBpbnQgbHB0X2dldF9pY2xraXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KQogCQkJCSBkZXNpcmVkX2Rpdmlzb3IgPDwgYXV4ZGl2KTsKIH0KIAotc3RhdGljIHZvaWQg
aXJvbmxha2VfcGNoX3RyYW5zY29kZXJfc2V0X3RpbWluZ3MoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JCQkJCQllbnVtIHBpcGUgcGNoX3RyYW5zY29kZXIpCitz
dGF0aWMgdm9pZCBpbGtfcGNoX3RyYW5zY29kZXJfc2V0X3RpbWluZ3MoY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkJCSAgIGVudW0gcGlwZSBwY2hfdHJhbnNj
b2RlcikKIHsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19z
dGF0ZS0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKQEAgLTU2MDIsOCArNTYwMiw4IEBAIGludGVsX2dldF9j
cnRjX25ld19lbmNvZGVyKGNvbnN0IHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAog
ICogICAtIERQIHRyYW5zY29kaW5nIGJpdHMKICAqICAgLSB0cmFuc2NvZGVyCiAgKi8KLXN0YXRp
YyB2b2lkIGlyb25sYWtlX3BjaF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsCi0JCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
CitzdGF0aWMgdm9pZCBpbGtfcGNoX2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0
YXRlICpzdGF0ZSwKKwkJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0
YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRjLT5iYXNlLmRl
djsKQEAgLTU2NTEsNyArNTY1MSw3IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX3BjaF9lbmFibGUo
Y29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAKIAkvKiBzZXQgdHJhbnNj
b2RlciB0aW1pbmcsIHBhbmVsIG11c3QgYWxsb3cgaXQgKi8KIAlhc3NlcnRfcGFuZWxfdW5sb2Nr
ZWQoZGV2X3ByaXYsIHBpcGUpOwotCWlyb25sYWtlX3BjaF90cmFuc2NvZGVyX3NldF90aW1pbmdz
KGNydGNfc3RhdGUsIHBpcGUpOworCWlsa19wY2hfdHJhbnNjb2Rlcl9zZXRfdGltaW5ncyhjcnRj
X3N0YXRlLCBwaXBlKTsKIAogCWludGVsX2ZkaV9ub3JtYWxfdHJhaW4oY3J0Yyk7CiAKQEAgLTU2
ODMsNyArNTY4Myw3IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX3BjaF9lbmFibGUoY29uc3Qgc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCUk5MTVfV1JJVEUocmVnLCB0ZW1wKTsK
IAl9CiAKLQlpcm9ubGFrZV9lbmFibGVfcGNoX3RyYW5zY29kZXIoY3J0Y19zdGF0ZSk7CisJaWxr
X2VuYWJsZV9wY2hfdHJhbnNjb2RlcihjcnRjX3N0YXRlKTsKIH0KIAogc3RhdGljIHZvaWQgbHB0
X3BjaF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCkBAIC01
Njk4LDcgKzU2OTgsNyBAQCBzdGF0aWMgdm9pZCBscHRfcGNoX2VuYWJsZShjb25zdCBzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAlscHRfcHJvZ3JhbV9pY2xraXAoY3J0Y19zdGF0
ZSk7CiAKIAkvKiBTZXQgdHJhbnNjb2RlciB0aW1pbmcuICovCi0JaXJvbmxha2VfcGNoX3RyYW5z
Y29kZXJfc2V0X3RpbWluZ3MoY3J0Y19zdGF0ZSwgUElQRV9BKTsKKwlpbGtfcGNoX3RyYW5zY29k
ZXJfc2V0X3RpbWluZ3MoY3J0Y19zdGF0ZSwgUElQRV9BKTsKIAogCWxwdF9lbmFibGVfcGNoX3Ry
YW5zY29kZXIoZGV2X3ByaXYsIGNwdV90cmFuc2NvZGVyKTsKIH0KQEAgLTYwNDgsNyArNjA0OCw3
IEBAIHN0YXRpYyB2b2lkIHNrbF9wZml0X2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKIAl9CiB9CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX3BmaXRfZW5h
YmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQorc3RhdGljIHZv
aWQgaWxrX3BmaXRfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0
YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtNjYyNyw4ICs2NjI3LDggQEAgc3RhdGljIHZvaWQg
aW50ZWxfZGlzYWJsZV9wcmltYXJ5X3BsYW5lKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXQKIAlwbGFuZS0+ZGlzYWJsZV9wbGFuZShwbGFuZSwgY3J0Y19zdGF0ZSk7CiB9
CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlLAotCQkJCSBzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykKK3N0YXRpYyB2b2lk
IGlsa19jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJCSAg
ICBzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykKIHsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqbmV3X2NydGNfc3RhdGUgPQogCQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRl
KHN0YXRlLCBjcnRjKTsKQEAgLTY2NjQsNyArNjY2NCw3IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtl
X2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQlpbnRlbF9j
cHVfdHJhbnNjb2Rlcl9zZXRfbV9uKG5ld19jcnRjX3N0YXRlLAogCQkJCQkgICAgICZuZXdfY3J0
Y19zdGF0ZS0+ZmRpX21fbiwgTlVMTCk7CiAKLQlpcm9ubGFrZV9zZXRfcGlwZWNvbmYobmV3X2Ny
dGNfc3RhdGUpOworCWlsa19zZXRfcGlwZWNvbmYobmV3X2NydGNfc3RhdGUpOwogCiAJY3J0Yy0+
YWN0aXZlID0gdHJ1ZTsKIApAQCAtNjY3NCwxMyArNjY3NCwxMyBAQCBzdGF0aWMgdm9pZCBpcm9u
bGFrZV9jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJLyog
Tm90ZTogRkRJIFBMTCBlbmFibGluZyBfbXVzdF8gYmUgZG9uZSBiZWZvcmUgd2UgZW5hYmxlIHRo
ZQogCQkgKiBjcHUgcGlwZXMsIGhlbmNlIHRoaXMgaXMgc2VwYXJhdGUgZnJvbSBhbGwgdGhlIG90
aGVyIGZkaS9wY2gKIAkJICogZW5hYmxpbmcuICovCi0JCWlyb25sYWtlX2ZkaV9wbGxfZW5hYmxl
KG5ld19jcnRjX3N0YXRlKTsKKwkJaWxrX2ZkaV9wbGxfZW5hYmxlKG5ld19jcnRjX3N0YXRlKTsK
IAl9IGVsc2UgewogCQlhc3NlcnRfZmRpX3R4X2Rpc2FibGVkKGRldl9wcml2LCBwaXBlKTsKIAkJ
YXNzZXJ0X2ZkaV9yeF9kaXNhYmxlZChkZXZfcHJpdiwgcGlwZSk7CiAJfQogCi0JaXJvbmxha2Vf
cGZpdF9lbmFibGUobmV3X2NydGNfc3RhdGUpOworCWlsa19wZml0X2VuYWJsZShuZXdfY3J0Y19z
dGF0ZSk7CiAKIAkvKgogCSAqIE9uIElMSysgTFVUIG11c3QgYmUgbG9hZGVkIGJlZm9yZSB0aGUg
cGlwZSBpcyBydW5uaW5nIGJ1dCB3aXRoCkBAIC02Njk2LDcgKzY2OTYsNyBAQCBzdGF0aWMgdm9p
ZCBpcm9ubGFrZV9jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwK
IAlpbnRlbF9lbmFibGVfcGlwZShuZXdfY3J0Y19zdGF0ZSk7CiAKIAlpZiAobmV3X2NydGNfc3Rh
dGUtPmhhc19wY2hfZW5jb2RlcikKLQkJaXJvbmxha2VfcGNoX2VuYWJsZShzdGF0ZSwgbmV3X2Ny
dGNfc3RhdGUpOworCQlpbGtfcGNoX2VuYWJsZShzdGF0ZSwgbmV3X2NydGNfc3RhdGUpOwogCiAJ
aW50ZWxfY3J0Y192Ymxhbmtfb24obmV3X2NydGNfc3RhdGUpOwogCkBAIC02ODMwLDcgKzY4MzAs
NyBAQCBzdGF0aWMgdm9pZCBoc3dfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOSkKIAkJc2tsX3BmaXRfZW5h
YmxlKG5ld19jcnRjX3N0YXRlKTsKIAllbHNlCi0JCWlyb25sYWtlX3BmaXRfZW5hYmxlKG5ld19j
cnRjX3N0YXRlKTsKKwkJaWxrX3BmaXRfZW5hYmxlKG5ld19jcnRjX3N0YXRlKTsKIAogCS8qCiAJ
ICogT24gSUxLKyBMVVQgbXVzdCBiZSBsb2FkZWQgYmVmb3JlIHRoZSBwaXBlIGlzIHJ1bm5pbmcg
YnV0IHdpdGgKQEAgLTY4NzksNyArNjg3OSw3IEBAIHN0YXRpYyB2b2lkIGhzd19jcnRjX2VuYWJs
ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAl9CiB9CiAKLXZvaWQgaXJvbmxh
a2VfcGZpdF9kaXNhYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19z
dGF0ZSkKK3ZvaWQgaWxrX3BmaXRfZGlzYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqb2xkX2NydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRl
bF9jcnRjKG9sZF9jcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtNjg5NCw4ICs2ODk0
LDggQEAgdm9pZCBpcm9ubGFrZV9wZml0X2Rpc2FibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKm9sZF9jcnRjX3N0YXRlKQogCX0KIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0
Y19kaXNhYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAotCQkJCSAgc3RydWN0
IGludGVsX2NydGMgKmNydGMpCitzdGF0aWMgdm9pZCBpbGtfY3J0Y19kaXNhYmxlKHN0cnVjdCBp
bnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAorCQkJICAgICBzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YykKIHsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUgPQog
CQlpbnRlbF9hdG9taWNfZ2V0X29sZF9jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKQEAgLTY5MTYs
MTUgKzY5MTYsMTUgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0Y19kaXNhYmxlKHN0cnVjdCBp
bnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCiAJaW50ZWxfZGlzYWJsZV9waXBlKG9sZF9jcnRj
X3N0YXRlKTsKIAotCWlyb25sYWtlX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CisJaWxr
X3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAKIAlpZiAob2xkX2NydGNfc3RhdGUtPmhh
c19wY2hfZW5jb2RlcikKLQkJaXJvbmxha2VfZmRpX2Rpc2FibGUoY3J0Yyk7CisJCWlsa19mZGlf
ZGlzYWJsZShjcnRjKTsKIAogCWludGVsX2VuY29kZXJzX3Bvc3RfZGlzYWJsZShzdGF0ZSwgY3J0
Yyk7CiAKIAlpZiAob2xkX2NydGNfc3RhdGUtPmhhc19wY2hfZW5jb2RlcikgewotCQlpcm9ubGFr
ZV9kaXNhYmxlX3BjaF90cmFuc2NvZGVyKGRldl9wcml2LCBwaXBlKTsKKwkJaWxrX2Rpc2FibGVf
cGNoX3RyYW5zY29kZXIoZGV2X3ByaXYsIHBpcGUpOwogCiAJCWlmIChIQVNfUENIX0NQVChkZXZf
cHJpdikpIHsKIAkJCWk5MTVfcmVnX3QgcmVnOwpAQCAtNjk0NCw3ICs2OTQ0LDcgQEAgc3RhdGlj
IHZvaWQgaXJvbmxha2VfY3J0Y19kaXNhYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlLAogCQkJSTkxNV9XUklURShQQ0hfRFBMTF9TRUwsIHRlbXApOwogCQl9CiAKLQkJaXJvbmxh
a2VfZmRpX3BsbF9kaXNhYmxlKGNydGMpOworCQlpbGtfZmRpX3BsbF9kaXNhYmxlKGNydGMpOwog
CX0KIAogCWludGVsX3NldF9jcHVfZmlmb191bmRlcnJ1bl9yZXBvcnRpbmcoZGV2X3ByaXYsIHBp
cGUsIHRydWUpOwpAQCAtNzQ4OSw4ICs3NDg5LDggQEAgc3RhdGljIGludCBwaXBlX3JlcXVpcmVk
X2ZkaV9sYW5lcyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAlyZXR1cm4g
MDsKIH0KIAotc3RhdGljIGludCBpcm9ubGFrZV9jaGVja19mZGlfbGFuZXMoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgZW51bSBwaXBlIHBpcGUsCi0JCQkJICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgaW50IGlsa19jaGVja19mZGlfbGFuZXMoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwgZW51bSBwaXBlIHBpcGUsCisJCQkgICAgICAgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUg
PSBwaXBlX2NvbmZpZy0+dWFwaS5zdGF0ZTsKQEAgLTc1NjIsOCArNzU2Miw4IEBAIHN0YXRpYyBp
bnQgaXJvbmxha2VfY2hlY2tfZmRpX2xhbmVzKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIGVudW0g
cGlwZSBwaXBlLAogfQogCiAjZGVmaW5lIFJFVFJZIDEKLXN0YXRpYyBpbnQgaXJvbmxha2VfZmRp
X2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjLAotCQkJCSAgICAg
ICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgaW50IGlsa19m
ZGlfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMsCisJCQkJICBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IGludGVsX2NydGMtPmJhc2UuZGV2OwogCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICphZGp1c3RlZF9tb2RlID0gJnBpcGVfY29uZmlnLT5ody5hZGp1c3RlZF9tb2RlOwpA
QCAtNzU4MiwxNSArNzU4MiwxNSBAQCBzdGF0aWMgaW50IGlyb25sYWtlX2ZkaV9jb21wdXRlX2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YywKIAogCWZkaV9kb3RjbG9jayA9IGFk
anVzdGVkX21vZGUtPmNydGNfY2xvY2s7CiAKLQlsYW5lID0gaXJvbmxha2VfZ2V0X2xhbmVzX3Jl
cXVpcmVkKGZkaV9kb3RjbG9jaywgbGlua19idywKLQkJCQkJICAgcGlwZV9jb25maWctPnBpcGVf
YnBwKTsKKwlsYW5lID0gaWxrX2dldF9sYW5lc19yZXF1aXJlZChmZGlfZG90Y2xvY2ssIGxpbmtf
YncsCisJCQkJICAgICAgcGlwZV9jb25maWctPnBpcGVfYnBwKTsKIAogCXBpcGVfY29uZmlnLT5m
ZGlfbGFuZXMgPSBsYW5lOwogCiAJaW50ZWxfbGlua19jb21wdXRlX21fbihwaXBlX2NvbmZpZy0+
cGlwZV9icHAsIGxhbmUsIGZkaV9kb3RjbG9jaywKIAkJCSAgICAgICBsaW5rX2J3LCAmcGlwZV9j
b25maWctPmZkaV9tX24sIGZhbHNlLCBmYWxzZSk7CiAKLQlyZXQgPSBpcm9ubGFrZV9jaGVja19m
ZGlfbGFuZXMoZGV2LCBpbnRlbF9jcnRjLT5waXBlLCBwaXBlX2NvbmZpZyk7CisJcmV0ID0gaWxr
X2NoZWNrX2ZkaV9sYW5lcyhkZXYsIGludGVsX2NydGMtPnBpcGUsIHBpcGVfY29uZmlnKTsKIAlp
ZiAocmV0ID09IC1FREVBRExLKQogCQlyZXR1cm4gcmV0OwogCkBAIC03Nzk2LDcgKzc3OTYsNyBA
QCBzdGF0aWMgaW50IGludGVsX2NydGNfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2NydGMg
KmNydGMsCiAJaW50ZWxfY3J0Y19jb21wdXRlX3BpeGVsX3JhdGUocGlwZV9jb25maWcpOwogCiAJ
aWYgKHBpcGVfY29uZmlnLT5oYXNfcGNoX2VuY29kZXIpCi0JCXJldHVybiBpcm9ubGFrZV9mZGlf
Y29tcHV0ZV9jb25maWcoY3J0YywgcGlwZV9jb25maWcpOworCQlyZXR1cm4gaWxrX2ZkaV9jb21w
dXRlX2NvbmZpZyhjcnRjLCBwaXBlX2NvbmZpZyk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTkyMDgs
NyArOTIwOCw3IEBAIHN0YXRpYyBib29sIGk5eHhfZ2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRl
bF9jcnRjICpjcnRjLAogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2lu
aXRfcGNoX3JlZmNsayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMg
dm9pZCBpbGtfaW5pdF9wY2hfcmVmY2xrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dikKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAlpbnQgaTsKQEAgLTk3MDYs
MTIgKzk3MDYsMTIgQEAgc3RhdGljIHZvaWQgbHB0X2luaXRfcGNoX3JlZmNsayhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB2b2lkIGludGVsX2luaXRfcGNoX3JlZmNsayhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJaWYgKEhBU19QQ0hfSUJYKGRldl9w
cml2KSB8fCBIQVNfUENIX0NQVChkZXZfcHJpdikpCi0JCWlyb25sYWtlX2luaXRfcGNoX3JlZmNs
ayhkZXZfcHJpdik7CisJCWlsa19pbml0X3BjaF9yZWZjbGsoZGV2X3ByaXYpOwogCWVsc2UgaWYg
KEhBU19QQ0hfTFBUKGRldl9wcml2KSkKIAkJbHB0X2luaXRfcGNoX3JlZmNsayhkZXZfcHJpdik7
CiB9CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX3NldF9waXBlY29uZihjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3N0YXRpYyB2b2lkIGlsa19zZXRfcGlwZWNvbmYo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGlu
dGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRl
dik7CkBAIC05ODU1LDcgKzk4NTUsNyBAQCBpbnQgYmR3X2dldF9waXBlbWlzY19icHAoc3RydWN0
IGludGVsX2NydGMgKmNydGMpCiAJfQogfQogCi1pbnQgaXJvbmxha2VfZ2V0X2xhbmVzX3JlcXVp
cmVkKGludCB0YXJnZXRfY2xvY2ssIGludCBsaW5rX2J3LCBpbnQgYnBwKQoraW50IGlsa19nZXRf
bGFuZXNfcmVxdWlyZWQoaW50IHRhcmdldF9jbG9jaywgaW50IGxpbmtfYncsIGludCBicHApCiB7
CiAJLyoKIAkgKiBBY2NvdW50IGZvciBzcHJlYWQgc3BlY3RydW0gdG8gYXZvaWQKQEAgLTk4NjYs
MTQgKzk4NjYsMTQgQEAgaW50IGlyb25sYWtlX2dldF9sYW5lc19yZXF1aXJlZChpbnQgdGFyZ2V0
X2Nsb2NrLCBpbnQgbGlua19idywgaW50IGJwcCkKIAlyZXR1cm4gRElWX1JPVU5EX1VQKGJwcywg
bGlua19idyAqIDgpOwogfQogCi1zdGF0aWMgYm9vbCBpcm9ubGFrZV9uZWVkc19mYl9jYl90dW5l
KHN0cnVjdCBkcGxsICpkcGxsLCBpbnQgZmFjdG9yKQorc3RhdGljIGJvb2wgaWxrX25lZWRzX2Zi
X2NiX3R1bmUoc3RydWN0IGRwbGwgKmRwbGwsIGludCBmYWN0b3IpCiB7CiAJcmV0dXJuIGk5eHhf
ZHBsbF9jb21wdXRlX20oZHBsbCkgPCBmYWN0b3IgKiBkcGxsLT5uOwogfQogCi1zdGF0aWMgdm9p
ZCBpcm9ubGFrZV9jb21wdXRlX2RwbGwoc3RydWN0IGludGVsX2NydGMgKmNydGMsCi0JCQkJICBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJCQkgIHN0cnVjdCBkcGxsICpy
ZWR1Y2VkX2Nsb2NrKQorc3RhdGljIHZvaWQgaWxrX2NvbXB1dGVfZHBsbChzdHJ1Y3QgaW50ZWxf
Y3J0YyAqY3J0YywKKwkJCSAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
CisJCQkgICAgIHN0cnVjdCBkcGxsICpyZWR1Y2VkX2Nsb2NrKQogewogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwogCXUzMiBkcGxs
LCBmcCwgZnAyOwpAQCAtOTg5Myw3ICs5ODkzLDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfY29t
cHV0ZV9kcGxsKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCiAJZnAgPSBpOXh4X2RwbGxfY29t
cHV0ZV9mcCgmY3J0Y19zdGF0ZS0+ZHBsbCk7CiAKLQlpZiAoaXJvbmxha2VfbmVlZHNfZmJfY2Jf
dHVuZSgmY3J0Y19zdGF0ZS0+ZHBsbCwgZmFjdG9yKSkKKwlpZiAoaWxrX25lZWRzX2ZiX2NiX3R1
bmUoJmNydGNfc3RhdGUtPmRwbGwsIGZhY3RvcikpCiAJCWZwIHw9IEZQX0NCX1RVTkU7CiAKIAlp
ZiAocmVkdWNlZF9jbG9jaykgewpAQCAtOTk3Myw4ICs5OTczLDggQEAgc3RhdGljIHZvaWQgaXJv
bmxha2VfY29tcHV0ZV9kcGxsKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCWNydGNfc3RhdGUt
PmRwbGxfaHdfc3RhdGUuZnAxID0gZnAyOwogfQogCi1zdGF0aWMgaW50IGlyb25sYWtlX2NydGNf
Y29tcHV0ZV9jbG9jayhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJCQkgICAgICAgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCitzdGF0aWMgaW50IGlsa19jcnRjX2NvbXB1
dGVfY2xvY2soc3RydWN0IGludGVsX2NydGMgKmNydGMsCisJCQkJICBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSA9CkBAIC05OTk4LDE3ICs5OTk4LDE3IEBAIHN0YXRpYyBpbnQgaXJvbmxha2VfY3J0
Y19jb21wdXRlX2Nsb2NrKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCiAJCWlmIChpbnRlbF9p
c19kdWFsX2xpbmtfbHZkcyhkZXZfcHJpdikpIHsKIAkJCWlmIChyZWZjbGsgPT0gMTAwMDAwKQot
CQkJCWxpbWl0ID0gJmludGVsX2xpbWl0c19pcm9ubGFrZV9kdWFsX2x2ZHNfMTAwbTsKKwkJCQls
aW1pdCA9ICZpbGtfbGltaXRzX2R1YWxfbHZkc18xMDBtOwogCQkJZWxzZQotCQkJCWxpbWl0ID0g
JmludGVsX2xpbWl0c19pcm9ubGFrZV9kdWFsX2x2ZHM7CisJCQkJbGltaXQgPSAmaWxrX2xpbWl0
c19kdWFsX2x2ZHM7CiAJCX0gZWxzZSB7CiAJCQlpZiAocmVmY2xrID09IDEwMDAwMCkKLQkJCQls
aW1pdCA9ICZpbnRlbF9saW1pdHNfaXJvbmxha2Vfc2luZ2xlX2x2ZHNfMTAwbTsKKwkJCQlsaW1p
dCA9ICZpbGtfbGltaXRzX3NpbmdsZV9sdmRzXzEwMG07CiAJCQllbHNlCi0JCQkJbGltaXQgPSAm
aW50ZWxfbGltaXRzX2lyb25sYWtlX3NpbmdsZV9sdmRzOworCQkJCWxpbWl0ID0gJmlsa19saW1p
dHNfc2luZ2xlX2x2ZHM7CiAJCX0KIAl9IGVsc2UgewotCQlsaW1pdCA9ICZpbnRlbF9saW1pdHNf
aXJvbmxha2VfZGFjOworCQlsaW1pdCA9ICZpbGtfbGltaXRzX2RhYzsKIAl9CiAKIAlpZiAoIWNy
dGNfc3RhdGUtPmNsb2NrX3NldCAmJgpAQCAtMTAwMTgsNyArMTAwMTgsNyBAQCBzdGF0aWMgaW50
IGlyb25sYWtlX2NydGNfY29tcHV0ZV9jbG9jayhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJ
cmV0dXJuIC1FSU5WQUw7CiAJfQogCi0JaXJvbmxha2VfY29tcHV0ZV9kcGxsKGNydGMsIGNydGNf
c3RhdGUsIE5VTEwpOworCWlsa19jb21wdXRlX2RwbGwoY3J0YywgY3J0Y19zdGF0ZSwgTlVMTCk7
CiAKIAlpZiAoIWludGVsX3Jlc2VydmVfc2hhcmVkX2RwbGxzKHN0YXRlLCBjcnRjLCBOVUxMKSkg
ewogCQlEUk1fREVCVUdfS01TKCJmYWlsZWQgdG8gZmluZCBQTEwgZm9yIHBpcGUgJWNcbiIsCkBA
IC0xMDA5Myw4ICsxMDA5Myw4IEBAIHZvaWQgaW50ZWxfZHBfZ2V0X21fbihzdHJ1Y3QgaW50ZWxf
Y3J0YyAqY3J0YywKIAkJCQkJICAgICAmcGlwZV9jb25maWctPmRwX20yX24yKTsKIH0KIAotc3Rh
dGljIHZvaWQgaXJvbmxha2VfZ2V0X2ZkaV9tX25fY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpj
cnRjLAotCQkJCQlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMg
dm9pZCBpbGtfZ2V0X2ZkaV9tX25fY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJ
CSAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZykKIHsKIAlpbnRlbF9jcHVf
dHJhbnNjb2Rlcl9nZXRfbV9uKGNydGMsIHBpcGVfY29uZmlnLT5jcHVfdHJhbnNjb2RlciwKIAkJ
CQkgICAgICZwaXBlX2NvbmZpZy0+ZmRpX21fbiwgTlVMTCk7CkBAIC0xMDI2MCw4ICsxMDI2MCw4
IEBAIHNrbF9nZXRfaW5pdGlhbF9wbGFuZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmNydGMs
CiAJa2ZyZWUoaW50ZWxfZmIpOwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9nZXRfcGZpdF9j
b25maWcoc3RydWN0IGludGVsX2NydGMgKmNydGMsCi0JCQkJICAgICBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgdm9pZCBpbGtfZ2V0X3BmaXRfY29uZmlnKHN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBl
X2NvbmZpZykKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gY3J0Yy0+YmFzZS5kZXY7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwpAQCAtMTAy
ODQsOCArMTAyODQsOCBAQCBzdGF0aWMgdm9pZCBpcm9ubGFrZV9nZXRfcGZpdF9jb25maWcoc3Ry
dWN0IGludGVsX2NydGMgKmNydGMsCiAJfQogfQogCi1zdGF0aWMgYm9vbCBpcm9ubGFrZV9nZXRf
cGlwZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmNydGMsCi0JCQkJICAgICBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgYm9vbCBpbGtfZ2V0X3BpcGVfY29u
ZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpwaXBlX2NvbmZpZykKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gY3J0Yy0+YmFzZS5k
ZXY7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwpA
QCAtMTAzNTYsNyArMTAzNTYsNyBAQCBzdGF0aWMgYm9vbCBpcm9ubGFrZV9nZXRfcGlwZV9jb25m
aWcoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJCXBpcGVfY29uZmlnLT5mZGlfbGFuZXMgPSAo
KEZESV9EUF9QT1JUX1dJRFRIX01BU0sgJiB0bXApID4+CiAJCQkJCSAgRkRJX0RQX1BPUlRfV0lE
VEhfU0hJRlQpICsgMTsKIAotCQlpcm9ubGFrZV9nZXRfZmRpX21fbl9jb25maWcoY3J0YywgcGlw
ZV9jb25maWcpOworCQlpbGtfZ2V0X2ZkaV9tX25fY29uZmlnKGNydGMsIHBpcGVfY29uZmlnKTsK
IAogCQlpZiAoSEFTX1BDSF9JQlgoZGV2X3ByaXYpKSB7CiAJCQkvKgpAQCAtMTAzODQsNyArMTAz
ODQsNyBAQCBzdGF0aWMgYm9vbCBpcm9ubGFrZV9nZXRfcGlwZV9jb25maWcoc3RydWN0IGludGVs
X2NydGMgKmNydGMsCiAJCQkoKHRtcCAmIFBMTF9SRUZfU0RWT19IRE1JX01VTFRJUExJRVJfTUFT
SykKIAkJCSA+PiBQTExfUkVGX1NEVk9fSERNSV9NVUxUSVBMSUVSX1NISUZUKSArIDE7CiAKLQkJ
aXJvbmxha2VfcGNoX2Nsb2NrX2dldChjcnRjLCBwaXBlX2NvbmZpZyk7CisJCWlsa19wY2hfY2xv
Y2tfZ2V0KGNydGMsIHBpcGVfY29uZmlnKTsKIAl9IGVsc2UgewogCQlwaXBlX2NvbmZpZy0+cGl4
ZWxfbXVsdGlwbGllciA9IDE7CiAJfQpAQCAtMTAzOTIsNyArMTAzOTIsNyBAQCBzdGF0aWMgYm9v
bCBpcm9ubGFrZV9nZXRfcGlwZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJaW50
ZWxfZ2V0X3BpcGVfdGltaW5ncyhjcnRjLCBwaXBlX2NvbmZpZyk7CiAJaW50ZWxfZ2V0X3BpcGVf
c3JjX3NpemUoY3J0YywgcGlwZV9jb25maWcpOwogCi0JaXJvbmxha2VfZ2V0X3BmaXRfY29uZmln
KGNydGMsIHBpcGVfY29uZmlnKTsKKwlpbGtfZ2V0X3BmaXRfY29uZmlnKGNydGMsIHBpcGVfY29u
ZmlnKTsKIAogCXJldCA9IHRydWU7CiAKQEAgLTEwNzUzLDcgKzEwNzUzLDcgQEAgc3RhdGljIHZv
aWQgaHN3X2dldF9kZGlfcG9ydF9zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJcGlw
ZV9jb25maWctPmZkaV9sYW5lcyA9ICgoRkRJX0RQX1BPUlRfV0lEVEhfTUFTSyAmIHRtcCkgPj4K
IAkJCQkJICBGRElfRFBfUE9SVF9XSURUSF9TSElGVCkgKyAxOwogCi0JCWlyb25sYWtlX2dldF9m
ZGlfbV9uX2NvbmZpZyhjcnRjLCBwaXBlX2NvbmZpZyk7CisJCWlsa19nZXRfZmRpX21fbl9jb25m
aWcoY3J0YywgcGlwZV9jb25maWcpOwogCX0KIH0KIApAQCAtMTA5MDUsNyArMTA5MDUsNyBAQCBz
dGF0aWMgYm9vbCBoc3dfZ2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAog
CQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQkJc2tsX2dldF9wZml0X2NvbmZpZyhj
cnRjLCBwaXBlX2NvbmZpZyk7CiAJCWVsc2UKLQkJCWlyb25sYWtlX2dldF9wZml0X2NvbmZpZyhj
cnRjLCBwaXBlX2NvbmZpZyk7CisJCQlpbGtfZ2V0X3BmaXRfY29uZmlnKGNydGMsIHBpcGVfY29u
ZmlnKTsKIAl9CiAKIAlpZiAoaHN3X2NydGNfc3VwcG9ydHNfaXBzKGNydGMpKSB7CkBAIC0xMTg0
OCw4ICsxMTg0OCw4IEBAIGludCBpbnRlbF9kb3RjbG9ja19jYWxjdWxhdGUoaW50IGxpbmtfZnJl
cSwKIAlyZXR1cm4gZGl2X3U2NChtdWxfdTMyX3UzMihtX24tPmxpbmtfbSwgbGlua19mcmVxKSwg
bV9uLT5saW5rX24pOwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9wY2hfY2xvY2tfZ2V0KHN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjLAotCQkJCSAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpw
aXBlX2NvbmZpZykKK3N0YXRpYyB2b2lkIGlsa19wY2hfY2xvY2tfZ2V0KHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjLAorCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmln
KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+
YmFzZS5kZXYpOwogCkBAIC0xNDUxMCw5ICsxNDUxMCw5IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bp
cGVfZmFzdHNldChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUs
CiAJCQlza2xfcGZpdF9lbmFibGUobmV3X2NydGNfc3RhdGUpOwogCX0gZWxzZSBpZiAoSEFTX1BD
SF9TUExJVChkZXZfcHJpdikpIHsKIAkJaWYgKG5ld19jcnRjX3N0YXRlLT5wY2hfcGZpdC5lbmFi
bGVkKQotCQkJaXJvbmxha2VfcGZpdF9lbmFibGUobmV3X2NydGNfc3RhdGUpOworCQkJaWxrX3Bm
aXRfZW5hYmxlKG5ld19jcnRjX3N0YXRlKTsKIAkJZWxzZSBpZiAob2xkX2NydGNfc3RhdGUtPnBj
aF9wZml0LmVuYWJsZWQpCi0JCQlpcm9ubGFrZV9wZml0X2Rpc2FibGUob2xkX2NydGNfc3RhdGUp
OworCQkJaWxrX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAJfQogCiAJaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPj0gMTEpCkBAIC0xNjkyNywxMyArMTY5MjcsMTMgQEAgdm9pZCBpbnRl
bF9pbml0X2Rpc3BsYXlfaG9va3Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CQlkZXZfcHJpdi0+ZGlzcGxheS5jcnRjX2VuYWJsZSA9IGhzd19jcnRjX2VuYWJsZTsKIAkJZGV2
X3ByaXYtPmRpc3BsYXkuY3J0Y19kaXNhYmxlID0gaHN3X2NydGNfZGlzYWJsZTsKIAl9IGVsc2Ug
aWYgKEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKSB7Ci0JCWRldl9wcml2LT5kaXNwbGF5LmdldF9w
aXBlX2NvbmZpZyA9IGlyb25sYWtlX2dldF9waXBlX2NvbmZpZzsKKwkJZGV2X3ByaXYtPmRpc3Bs
YXkuZ2V0X3BpcGVfY29uZmlnID0gaWxrX2dldF9waXBlX2NvbmZpZzsKIAkJZGV2X3ByaXYtPmRp
c3BsYXkuZ2V0X2luaXRpYWxfcGxhbmVfY29uZmlnID0KIAkJCWk5eHhfZ2V0X2luaXRpYWxfcGxh
bmVfY29uZmlnOwogCQlkZXZfcHJpdi0+ZGlzcGxheS5jcnRjX2NvbXB1dGVfY2xvY2sgPQotCQkJ
aXJvbmxha2VfY3J0Y19jb21wdXRlX2Nsb2NrOwotCQlkZXZfcHJpdi0+ZGlzcGxheS5jcnRjX2Vu
YWJsZSA9IGlyb25sYWtlX2NydGNfZW5hYmxlOwotCQlkZXZfcHJpdi0+ZGlzcGxheS5jcnRjX2Rp
c2FibGUgPSBpcm9ubGFrZV9jcnRjX2Rpc2FibGU7CisJCQlpbGtfY3J0Y19jb21wdXRlX2Nsb2Nr
OworCQlkZXZfcHJpdi0+ZGlzcGxheS5jcnRjX2VuYWJsZSA9IGlsa19jcnRjX2VuYWJsZTsKKwkJ
ZGV2X3ByaXYtPmRpc3BsYXkuY3J0Y19kaXNhYmxlID0gaWxrX2NydGNfZGlzYWJsZTsKIAl9IGVs
c2UgaWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSB7CiAJCWRldl9wcml2LT5kaXNwbGF5Lmdl
dF9waXBlX2NvbmZpZyA9IGk5eHhfZ2V0X3BpcGVfY29uZmlnOwogCQlkZXZfcHJpdi0+ZGlzcGxh
eS5nZXRfaW5pdGlhbF9wbGFuZV9jb25maWcgPQpAQCAtMTY5NzksNyArMTY5NzksNyBAQCB2b2lk
IGludGVsX2luaXRfZGlzcGxheV9ob29rcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiAJfQogCiAJaWYgKElTX0dFTihkZXZfcHJpdiwgNSkpIHsKLQkJZGV2X3ByaXYtPmRpc3Bs
YXkuZmRpX2xpbmtfdHJhaW4gPSBpcm9ubGFrZV9mZGlfbGlua190cmFpbjsKKwkJZGV2X3ByaXYt
PmRpc3BsYXkuZmRpX2xpbmtfdHJhaW4gPSBpbGtfZmRpX2xpbmtfdHJhaW47CiAJfSBlbHNlIGlm
IChJU19HRU4oZGV2X3ByaXYsIDYpKSB7CiAJCWRldl9wcml2LT5kaXNwbGF5LmZkaV9saW5rX3Ry
YWluID0gZ2VuNl9mZGlfbGlua190cmFpbjsKIAl9IGVsc2UgaWYgKElTX0lWWUJSSURHRShkZXZf
cHJpdikpIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmgK
aW5kZXggOTIxYTU4NGMzMjg0Li5iYzJjNTEwNGY3NTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCkBAIC01MjEsNyArNTIxLDcgQEAgaW50IGludGVs
X2dldF9waXBlX2Zyb21fY3J0Y19pZF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lk
ICpkYXRhLAogdTMyIGludGVsX2NydGNfZ2V0X3ZibGFua19jb3VudGVyKHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjKTsKIHZvaWQgaW50ZWxfY3J0Y192Ymxhbmtfb2ZmKGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKIAotaW50IGlyb25sYWtlX2dldF9sYW5lc19yZXF1
aXJlZChpbnQgdGFyZ2V0X2Nsb2NrLCBpbnQgbGlua19idywgaW50IGJwcCk7CitpbnQgaWxrX2dl
dF9sYW5lc19yZXF1aXJlZChpbnQgdGFyZ2V0X2Nsb2NrLCBpbnQgbGlua19idywgaW50IGJwcCk7
CiB2b2lkIHZsdl93YWl0X3BvcnRfcmVhZHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LAogCQkJIHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRwb3J0LAogCQkJIHVuc2lnbmVk
IGludCBleHBlY3RlZF9tYXNrKTsKQEAgLTU3OSw3ICs1NzksNyBAQCB2b2lkIGludGVsX2NydGNf
YXJtX2ZpZm9fdW5kZXJydW4oc3RydWN0IGludGVsX2NydGMgKmNydGMsCiB1MTYgc2tsX3NjYWxl
cl9jYWxjX3BoYXNlKGludCBzdWIsIGludCBzY2FsZSwgYm9vbCBjaHJvbWFfY2VudGVyKTsKIGlu
dCBza2xfdXBkYXRlX3NjYWxlcl9jcnRjKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKTsKIHZvaWQgc2tsX3NjYWxlcl9kaXNhYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpvbGRfY3J0Y19zdGF0ZSk7Ci12b2lkIGlyb25sYWtlX3BmaXRfZGlzYWJsZShjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUpOwordm9pZCBpbGtfcGZpdF9k
aXNhYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSk7CiB1
MzIgZ2xrX3BsYW5lX2NvbG9yX2N0bChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSwKIAkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUp
OwogdTMyIGdsa19wbGFuZV9jb2xvcl9jdGxfY3J0Yyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMK
aW5kZXggMmYzMWQyMjZjNmViLi45OTFmMzQzNTc5ZWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMKQEAgLTI1MDksNyArMjUwOSw3IEBAIHN0YXRpYyB2b2lkIGludGVs
X2RwX3ByZXBhcmUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJICoKIAkgKiBDUFQg
UENIIGlzIHF1aXRlIGRpZmZlcmVudCwgaGF2aW5nIG1hbnkgYml0cyBtb3ZlZAogCSAqIHRvIHRo
ZSBUUkFOU19EUF9DVEwgcmVnaXN0ZXIgaW5zdGVhZC4gVGhhdAotCSAqIGNvbmZpZ3VyYXRpb24g
aGFwcGVucyAob2RkbHkpIGluIGlyb25sYWtlX3BjaF9lbmFibGUKKwkgKiBjb25maWd1cmF0aW9u
IGhhcHBlbnMgKG9kZGx5KSBpbiBpbGtfcGNoX2VuYWJsZQogCSAqLwogCiAJLyogUHJlc2VydmUg
dGhlIEJJT1MtY29tcHV0ZWQgZGV0ZWN0ZWQgYml0LiBUaGlzIGlzCkBAIC0yNjUzLDcgKzI2NTMs
NyBAQCBzdGF0aWMgdm9pZCBlZHBfd2FpdF9iYWNrbGlnaHRfb2ZmKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApCiAgKiBpcyBsb2NrZWQKICAqLwogCi1zdGF0aWMgIHUzMiBpcm9ubGFrZV9nZXRf
cHBfY29udHJvbChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljICB1MzIgaWxrX2dl
dF9wcF9jb250cm9sKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTMyIGNvbnRy
b2w7CkBAIC0yNzAzLDcgKzI3MDMsNyBAQCBzdGF0aWMgYm9vbCBlZHBfcGFuZWxfdmRkX29uKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKCFlZHBfaGF2ZV9wYW5lbF9wb3dlcihpbnRl
bF9kcCkpCiAJCXdhaXRfcGFuZWxfcG93ZXJfY3ljbGUoaW50ZWxfZHApOwogCi0JcHAgPSBpcm9u
bGFrZV9nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CisJcHAgPSBpbGtfZ2V0X3BwX2NvbnRyb2wo
aW50ZWxfZHApOwogCXBwIHw9IEVEUF9GT1JDRV9WREQ7CiAKIAlwcF9zdGF0X3JlZyA9IF9wcF9z
dGF0X3JlZyhpbnRlbF9kcCk7CkBAIC0yNzY4LDcgKzI3NjgsNyBAQCBzdGF0aWMgdm9pZCBlZHBf
cGFuZWxfdmRkX29mZl9zeW5jKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCSAgICAgIGlu
dGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwKIAkJICAgICAgaW50ZWxfZGlnX3BvcnQt
PmJhc2UuYmFzZS5uYW1lKTsKIAotCXBwID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxf
ZHApOworCXBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKIAlwcCAmPSB+RURQX0ZP
UkNFX1ZERDsKIAogCXBwX2N0cmxfcmVnID0gX3BwX2N0cmxfcmVnKGludGVsX2RwKTsKQEAgLTI4
NjQsNyArMjg2NCw3IEBAIHN0YXRpYyB2b2lkIGVkcF9wYW5lbF9vbihzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQogCXdhaXRfcGFuZWxfcG93ZXJfY3ljbGUoaW50ZWxfZHApOwogCiAJcHBfY3Ry
bF9yZWcgPSBfcHBfY3RybF9yZWcoaW50ZWxfZHApOwotCXBwID0gaXJvbmxha2VfZ2V0X3BwX2Nv
bnRyb2woaW50ZWxfZHApOworCXBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKIAlp
ZiAoSVNfR0VOKGRldl9wcml2LCA1KSkgewogCQkvKiBJTEsgd29ya2Fyb3VuZDogZGlzYWJsZSBy
ZXNldCBhcm91bmQgcG93ZXIgc2VxdWVuY2UgKi8KIAkJcHAgJj0gflBBTkVMX1BPV0VSX1JFU0VU
OwpAQCAtMjkxOSw3ICsyOTE5LDcgQEAgc3RhdGljIHZvaWQgZWRwX3BhbmVsX29mZihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogCVdBUk4oIWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCwgIk5l
ZWQgW0VOQ09ERVI6JWQ6JXNdIFZERCB0byB0dXJuIG9mZiBwYW5lbFxuIiwKIAkgICAgIGRpZ19w
b3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKIAotCXBw
ID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOworCXBwID0gaWxrX2dldF9wcF9j
b250cm9sKGludGVsX2RwKTsKIAkvKiBXZSBuZWVkIHRvIHN3aXRjaCBvZmYgcGFuZWwgcG93ZXIg
X2FuZF8gZm9yY2UgdmRkLCBmb3Igb3RoZXJ3aXNlIHNvbWUKIAkgKiBwYW5lbHMgZ2V0IHZlcnkg
dW5oYXBweSBhbmQgY2Vhc2UgdG8gd29yay4gKi8KIAlwcCAmPSB+KFBBTkVMX1BPV0VSX09OIHwg
UEFORUxfUE9XRVJfUkVTRVQgfCBFRFBfRk9SQ0VfVkREIHwKQEAgLTI5NjgsNyArMjk2OCw3IEBA
IHN0YXRpYyB2b2lkIF9pbnRlbF9lZHBfYmFja2xpZ2h0X29uKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCiAJCWk5MTVfcmVnX3QgcHBfY3RybF9yZWcgPSBfcHBfY3RybF9yZWcoaW50ZWxfZHAp
OwogCQl1MzIgcHA7CiAKLQkJcHAgPSBpcm9ubGFrZV9nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7
CisJCXBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKIAkJcHAgfD0gRURQX0JMQ19F
TkFCTEU7CiAKIAkJSTkxNV9XUklURShwcF9jdHJsX3JlZywgcHApOwpAQCAtMzAwNCw3ICszMDA0
LDcgQEAgc3RhdGljIHZvaWQgX2ludGVsX2VkcF9iYWNrbGlnaHRfb2ZmKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAJCWk5MTVfcmVnX3QgcHBfY3RybF9yZWcgPSBfcHBfY3RybF9yZWcoaW50
ZWxfZHApOwogCQl1MzIgcHA7CiAKLQkJcHAgPSBpcm9ubGFrZV9nZXRfcHBfY29udHJvbChpbnRl
bF9kcCk7CisJCXBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKIAkJcHAgJj0gfkVE
UF9CTENfRU5BQkxFOwogCiAJCUk5MTVfV1JJVEUocHBfY3RybF9yZWcsIHBwKTsKQEAgLTMwNDIs
NyArMzA0Miw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2VkcF9iYWNrbGlnaHRfcG93ZXIoc3RydWN0
IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCiAJaXNfZW5hYmxlZCA9IGZhbHNlOwogCXdp
dGhfcHBzX2xvY2soaW50ZWxfZHAsIHdha2VyZWYpCi0JCWlzX2VuYWJsZWQgPSBpcm9ubGFrZV9n
ZXRfcHBfY29udHJvbChpbnRlbF9kcCkgJiBFRFBfQkxDX0VOQUJMRTsKKwkJaXNfZW5hYmxlZCA9
IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCkgJiBFRFBfQkxDX0VOQUJMRTsKIAlpZiAoaXNf
ZW5hYmxlZCA9PSBlbmFibGUpCiAJCXJldHVybjsKIApAQCAtMzA3OSw4ICszMDc5LDggQEAgc3Rh
dGljIHZvaWQgYXNzZXJ0X2VkcF9wbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LCBib29sIHN0YXRlKQogI2RlZmluZSBhc3NlcnRfZWRwX3BsbF9lbmFibGVkKGQpIGFzc2VydF9l
ZHBfcGxsKChkKSwgdHJ1ZSkKICNkZWZpbmUgYXNzZXJ0X2VkcF9wbGxfZGlzYWJsZWQoZCkgYXNz
ZXJ0X2VkcF9wbGwoKGQpLCBmYWxzZSkKIAotc3RhdGljIHZvaWQgaXJvbmxha2VfZWRwX3BsbF9v
bihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpwaXBlX2NvbmZpZykKK3N0YXRpYyB2b2lkIGlsa19lZHBfcGxsX29uKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
cGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRj
KHBpcGVfY29uZmlnLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtMzExOSw4ICszMTE5LDggQEAgc3Rh
dGljIHZvaWQgaXJvbmxha2VfZWRwX3BsbF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAog
CXVkZWxheSgyMDApOwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9lZHBfcGxsX29mZihzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqb2xkX2NydGNfc3RhdGUpCitzdGF0aWMgdm9pZCBpbGtfZWRwX3BsbF9vZmYoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
b2xkX2NydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9j
cnRjKG9sZF9jcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtMzQxMCw3ICszNDEwLDcg
QEAgc3RhdGljIHZvaWQgZzR4X3Bvc3RfZGlzYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKIAogCS8qIE9ubHkgaWxrKyBoYXMgcG9ydCBBICovCiAJaWYgKHBvcnQgPT0gUE9S
VF9BKQotCQlpcm9ubGFrZV9lZHBfcGxsX29mZihpbnRlbF9kcCwgb2xkX2NydGNfc3RhdGUpOwor
CQlpbGtfZWRwX3BsbF9vZmYoaW50ZWxfZHAsIG9sZF9jcnRjX3N0YXRlKTsKIH0KIAogc3RhdGlj
IHZvaWQgdmx2X3Bvc3RfZGlzYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
QEAgLTM2MTUsNyArMzYxNSw3IEBAIHN0YXRpYyB2b2lkIGc0eF9wcmVfZW5hYmxlX2RwKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCiAJLyogT25seSBpbGsrIGhhcyBwb3J0IEEgKi8K
IAlpZiAocG9ydCA9PSBQT1JUX0EpCi0JCWlyb25sYWtlX2VkcF9wbGxfb24oaW50ZWxfZHAsIHBp
cGVfY29uZmlnKTsKKwkJaWxrX2VkcF9wbGxfb24oaW50ZWxfZHAsIHBpcGVfY29uZmlnKTsKIH0K
IAogc3RhdGljIHZvaWQgdmx2X2RldGFjaF9wb3dlcl9zZXF1ZW5jZXIoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKQEAgLTY2OTMsNyArNjY5Myw3IEBAIGludGVsX3Bwc19yZWFkb3V0X2h3X3N0
YXRlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHN0cnVjdCBlZHBfcG93ZXJfc2VxICpzZXEp
CiAKIAlpbnRlbF9wcHNfZ2V0X3JlZ2lzdGVycyhpbnRlbF9kcCwgJnJlZ3MpOwogCi0JcHBfY3Rs
ID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOworCXBwX2N0bCA9IGlsa19nZXRf
cHBfY29udHJvbChpbnRlbF9kcCk7CiAKIAkvKiBFbnN1cmUgUFBTIGlzIHVubG9ja2VkICovCiAJ
aWYgKCFIQVNfRERJKGRldl9wcml2KSkKQEAgLTY4NjMsNyArNjg2Myw3IEBAIGludGVsX2RwX2lu
aXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lzdGVycyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwLAogCSAqIHNvb24gYXMgdGhlIG5ldyBwb3dlciBzZXF1ZW5jZXIgZ2V0cyBpbml0aWFsaXpl
ZC4KIAkgKi8KIAlpZiAoZm9yY2VfZGlzYWJsZV92ZGQpIHsKLQkJdTMyIHBwID0gaXJvbmxha2Vf
Z2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOworCQl1MzIgcHAgPSBpbGtfZ2V0X3BwX2NvbnRyb2wo
aW50ZWxfZHApOwogCiAJCVdBUk4ocHAgJiBQQU5FTF9QT1dFUl9PTiwgIlBhbmVsIHBvd2VyIGFs
cmVhZHkgb25cbiIpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RwX21zdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9t
c3QuYwppbmRleCBjYTM4YzBjYjBiMzIuLjNiMDY2YzYzODE2ZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jCkBAIC0zNzYsNyArMzc2LDcgQEAgc3RhdGlj
IHZvaWQgaW50ZWxfbXN0X3Bvc3RfZGlzYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlciwKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQlza2xfc2NhbGVyX2Rpc2Fi
bGUob2xkX2NydGNfc3RhdGUpOwogCWVsc2UKLQkJaXJvbmxha2VfcGZpdF9kaXNhYmxlKG9sZF9j
cnRjX3N0YXRlKTsKKwkJaWxrX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAKIAkvKgog
CSAqIFBvd2VyIGRvd24gbXN0IHBhdGggYmVmb3JlIGRpc2FibGluZyB0aGUgcG9ydCwgb3RoZXJ3
aXNlIHdlIGVuZApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9maWZvX3VuZGVycnVuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Zp
Zm9fdW5kZXJydW4uYwppbmRleCBhYjYxZjg4ZDFkMzMuLmQ2ZTBkMGJlODQyZSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMKQEAg
LTEyNiw4ICsxMjYsOCBAQCBzdGF0aWMgdm9pZCBpOXh4X3NldF9maWZvX3VuZGVycnVuX3JlcG9y
dGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCX0KIH0KIAotc3RhdGljIHZvaWQgaXJvbmxh
a2Vfc2V0X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0J
CQkJCQkgZW51bSBwaXBlIHBpcGUsIGJvb2wgZW5hYmxlKQorc3RhdGljIHZvaWQgaWxrX3NldF9m
aWZvX3VuZGVycnVuX3JlcG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJCQkgICAg
ZW51bSBwaXBlIHBpcGUsIGJvb2wgZW5hYmxlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAl1MzIgYml0ID0gKHBpcGUgPT0gUElQRV9BKSA/
CkBAIC0yNjQsNyArMjY0LDcgQEAgc3RhdGljIGJvb2wgX19pbnRlbF9zZXRfY3B1X2ZpZm9fdW5k
ZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaWYgKEhBU19HTUNIKGRl
dl9wcml2KSkKIAkJaTl4eF9zZXRfZmlmb191bmRlcnJ1bl9yZXBvcnRpbmcoZGV2LCBwaXBlLCBl
bmFibGUsIG9sZCk7CiAJZWxzZSBpZiAoSVNfR0VOX1JBTkdFKGRldl9wcml2LCA1LCA2KSkKLQkJ
aXJvbmxha2Vfc2V0X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKGRldiwgcGlwZSwgZW5hYmxlKTsK
KwkJaWxrX3NldF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhkZXYsIHBpcGUsIGVuYWJsZSk7CiAJ
ZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCA3KSkKIAkJaXZ5YnJpZGdlX3NldF9maWZvX3VuZGVy
cnVuX3JlcG9ydGluZyhkZXYsIHBpcGUsIGVuYWJsZSwgb2xkKTsKIAllbHNlIGlmIChJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDgpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9yZXNldC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRl
eCAxYzUxMjk2NjQ2ZTAuLmVhNzA2OWUyMzhkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfcmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9yZXNldC5jCkBAIC0yNTEsOSArMjUxLDggQEAgc3RhdGljIGludCBnNHhfZG9fcmVzZXQoc3Ry
dWN0IGludGVsX2d0ICpndCwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IGlyb25sYWtl
X2RvX3Jlc2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsCi0JCQkgICAgIGludGVsX2VuZ2luZV9tYXNr
X3QgZW5naW5lX21hc2ssCi0JCQkgICAgIHVuc2lnbmVkIGludCByZXRyeSkKK3N0YXRpYyBpbnQg
aWxrX2RvX3Jlc2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGludGVsX2VuZ2luZV9tYXNrX3QgZW5n
aW5lX21hc2ssCisJCQl1bnNpZ25lZCBpbnQgcmV0cnkpCiB7CiAJc3RydWN0IGludGVsX3VuY29y
ZSAqdW5jb3JlID0gZ3QtPnVuY29yZTsKIAlpbnQgcmV0OwpAQCAtNTk3LDcgKzU5Niw3IEBAIHN0
YXRpYyByZXNldF9mdW5jIGludGVsX2dldF9ncHVfcmVzZXQoY29uc3Qgc3RydWN0IGludGVsX2d0
ICpndCkKIAllbHNlIGlmIChJTlRFTF9HRU4oaTkxNSkgPj0gNikKIAkJcmV0dXJuIGdlbjZfcmVz
ZXRfZW5naW5lczsKIAllbHNlIGlmIChJTlRFTF9HRU4oaTkxNSkgPj0gNSkKLQkJcmV0dXJuIGly
b25sYWtlX2RvX3Jlc2V0OworCQlyZXR1cm4gaWxrX2RvX3Jlc2V0OwogCWVsc2UgaWYgKElTX0c0
WChpOTE1KSkKIAkJcmV0dXJuIGc0eF9kb19yZXNldDsKIAllbHNlIGlmIChJU19HMzMoaTkxNSkg
fHwgSVNfUElORVZJRVcoaTkxNSkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCmluZGV4
IGQyODQ2OGVhZWQ1Ny4uMDQwNzIyOTI1MWJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVn
ZnMuYwpAQCAtMTAwMSw3ICsxMDAxLDcgQEAgc3RhdGljIGludCBpOTE1X2ZyZXF1ZW5jeV9pbmZv
KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqdW51c2VkKQogCXJldHVybiByZXQ7CiB9CiAKLXN0
YXRpYyBpbnQgaXJvbmxha2VfZHJwY19pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSkKK3N0YXRpYyBp
bnQgaWxrX2RycGNfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiB7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUgPSBub2RlX3RvX2k5MTUobS0+cHJpdmF0ZSk7CiAJc3RydWN0IGludGVs
X3VuY29yZSAqdW5jb3JlID0gJmk5MTUtPnVuY29yZTsKQEAgLTEyMDksNyArMTIwOSw3IEBAIHN0
YXRpYyBpbnQgaTkxNV9kcnBjX2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lkICp1bnVzZWQp
CiAJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gNikKIAkJCWVyciA9IGdlbjZfZHJw
Y19pbmZvKG0pOwogCQllbHNlCi0JCQllcnIgPSBpcm9ubGFrZV9kcnBjX2luZm8obSk7CisJCQll
cnIgPSBpbGtfZHJwY19pbmZvKG0pOwogCX0KIAogCXJldHVybiBlcnI7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9pcnEuYwppbmRleCA0MmI3OWY1Nzc1MDAuLjJkNjMyNGQyOTIyYSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2lycS5jCkBAIC0yMDMxLDcgKzIwMzEsNyBAQCBzdGF0aWMgdm9pZCBpdmJfZGlzcGxheV9p
cnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAgKiA0IC0gUHJv
Y2VzcyB0aGUgaW50ZXJydXB0KHMpIHRoYXQgaGFkIGJpdHMgc2V0IGluIHRoZSBJSVJzLgogICog
NSAtIFJlLWVuYWJsZSBNYXN0ZXIgSW50ZXJydXB0IENvbnRyb2wuCiAgKi8KLXN0YXRpYyBpcnFy
ZXR1cm5fdCBpcm9ubGFrZV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCitzdGF0aWMg
aXJxcmV0dXJuX3QgaWxrX2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIHsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBhcmc7CiAJdTMyIGRlX2lpciwgZ3RfaWly
LCBkZV9pZXIsIHNkZV9pZXIgPSAwOwpAQCAtMjc0Miw3ICsyNzQyLDcgQEAgc3RhdGljIHZvaWQg
dmx2X2Rpc3BsYXlfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAogLyogZHJtX2RtYS5oIGhvb2tzCiAqLwotc3RhdGljIHZvaWQgaXJvbmxha2VfaXJx
X3Jlc2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGls
a19pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXN0cnVj
dCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZkZXZfcHJpdi0+dW5jb3JlOwogCkBAIC0zMjI1LDcg
KzMyMjUsNyBAQCBzdGF0aWMgdm9pZCBpYnhfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdikKIAkJc3B0X2hwZF9kZXRlY3Rpb25fc2V0dXAoZGV2X3ByaXYp
OwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgaWxrX2lycV9wb3N0aW5zdGFsbChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJc3RydWN0IGludGVsX3VuY29y
ZSAqdW5jb3JlID0gJmRldl9wcml2LT51bmNvcmU7CiAJdTMyIGRpc3BsYXlfbWFzaywgZXh0cmFf
bWFzazsKQEAgLTM5ODAsNyArMzk4MCw3IEBAIHN0YXRpYyBpcnFfaGFuZGxlcl90IGludGVsX2ly
cV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJZWxzZSBpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSA4KQogCQkJcmV0dXJuIGdlbjhfaXJxX2hhbmRsZXI7CiAJ
CWVsc2UKLQkJCXJldHVybiBpcm9ubGFrZV9pcnFfaGFuZGxlcjsKKwkJCXJldHVybiBpbGtfaXJx
X2hhbmRsZXI7CiAJfQogfQogCkBAIC00MDAzLDcgKzQwMDMsNyBAQCBzdGF0aWMgdm9pZCBpbnRl
bF9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQllbHNlIGlm
IChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDgpCiAJCQlnZW44X2lycV9yZXNldChkZXZfcHJpdik7
CiAJCWVsc2UKLQkJCWlyb25sYWtlX2lycV9yZXNldChkZXZfcHJpdik7CisJCQlpbGtfaXJxX3Jl
c2V0KGRldl9wcml2KTsKIAl9CiB9CiAKQEAgLTQwMjYsNyArNDAyNiw3IEBAIHN0YXRpYyB2b2lk
IGludGVsX2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiAJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKIAkJCWdlbjhfaXJxX3Bvc3Rp
bnN0YWxsKGRldl9wcml2KTsKIAkJZWxzZQotCQkJaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxsKGRl
dl9wcml2KTsKKwkJCWlsa19pcnFfcG9zdGluc3RhbGwoZGV2X3ByaXYpOwogCX0KIH0KIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX3BtLmMKaW5kZXggYjU1ZTlkMmQyYTgzLi43MzBmZTlhMjE3ZWQgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtMTc4LDcgKzE3OCw3IEBAIHN0YXRpYyB2b2lkIHBudl9n
ZXRfbWVtX2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCWRldl9wcml2
LT5pc19kZHIzID0gKHRtcCAmIENTSFJERFIzQ1RMX0REUjMpID8gMSA6IDA7CiB9CiAKLXN0YXRp
YyB2b2lkIGk5MTVfaXJvbmxha2VfZ2V0X21lbV9mcmVxKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGlsa19nZXRfbWVtX2ZyZXEoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogewogCXUxNiBkZHJwbGwsIGNzaXBsbDsKIApAQCAtNzE5MSw3
ICs3MTkxLDcgQEAgdm9pZCBpbnRlbF9pbml0X3BtKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAlpZiAoSVNfUElORVZJRVcoZGV2X3ByaXYpKQogCQlwbnZfZ2V0X21lbV9mcmVx
KGRldl9wcml2KTsKIAllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDUpKQotCQlpOTE1X2lyb25s
YWtlX2dldF9tZW1fZnJlcShkZXZfcHJpdik7CisJCWlsa19nZXRfbWVtX2ZyZXEoZGV2X3ByaXYp
OwogCiAJaWYgKGludGVsX2hhc19zYWd2KGRldl9wcml2KSkKIAkJc2tsX3NldHVwX3NhZ3ZfYmxv
Y2tfdGltZShkZXZfcHJpdik7Ci0tIAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFu
L2xpc3RpbmZvL2ludGVsLWdmeAo=

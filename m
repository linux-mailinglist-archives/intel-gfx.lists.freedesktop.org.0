Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 24DA9463D3
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 18:18:02 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8B21A89A5E;
	Fri, 14 Jun 2019 16:18:00 +0000 (UTC)
X-Original-To: Intel-gfx@lists.freedesktop.org
Delivered-To: Intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6150E89A5E
 for <Intel-gfx@lists.freedesktop.org>; Fri, 14 Jun 2019 16:17:59 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 14 Jun 2019 09:17:58 -0700
X-ExtLoop1: 1
Received: from yyosef-mobl.ger.corp.intel.com (HELO localhost.localdomain)
 ([10.252.23.42])
 by orsmga001.jf.intel.com with ESMTP; 14 Jun 2019 09:17:57 -0700
From: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
To: Intel-gfx@lists.freedesktop.org
Date: Fri, 14 Jun 2019 17:17:54 +0100
Message-Id: <20190614161754.27958-1-tvrtko.ursulin@linux.intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614151731.17608-22-tvrtko.ursulin@linux.intel.com>
References: <20190614151731.17608-22-tvrtko.ursulin@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 21/31] drm/i915: Convert
 i915_gem_flush_ggtt_writes to intel_gt
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KCkhhdmluZyBp
bnRyb2R1Y2VkIHN0cnVjdCBpbnRlbF9ndCAobmFtZWQgdGhlIGFub255bW91cyBzdHJ1Y3R1cmUg
aW4gaTkxNSkKd2UgY2FuIHN0YXJ0IHVzaW5nIGl0IHRvIGNvbXBhcnRtZW50YWxpemUgb3VyIGNv
ZGUgYmV0dGVyLiBJdCBtYWtlcyBtb3JlCnNlbnNlIGxvZ2ljYWxseSB0byBoYXZlIHRoZSBjb2Rl
IGludGVybmFsbHkgbGlrZSB0aGlzIGFuZCBpdCB3aWxsIGFsc28KaGVscCB3aXRoIGZ1dHVyZSBz
cGxpdCBiZXR3ZWVuIGd0IGFuZCBkaXNwbGF5IGluIGk5MTUuCgpTaWduZWQtb2ZmLWJ5OiBUdnJ0
a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYyAgICB8ICA1ICstLQogLi4uL2RybS9pOTE1L2dl
bS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jICAgIHwgIDMgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2d0LmMgICAgICAgICAgICB8IDQxICsrKysrKysrKysrKysrKysrKysKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmggICAgICAgICAgICB8ICAyICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAyIC0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgICAgICAgICAgICAgICB8IDQwIC0tLS0tLS0tLS0tLS0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYyAgICAgICAgICAgICAgIHwgIDMg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQuYyB8ICAyICst
CiA4IGZpbGVzIGNoYW5nZWQsIDUwIGluc2VydGlvbnMoKyksIDQ4IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYwppbmRleCBhNDA0N2E1ODVj
OGIuLjM0MTY4MWU2MDJjZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX29iamVjdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9v
YmplY3QuYwpAQCAtMjIsNiArMjIsNyBAQAogICoKICAqLwogCisjaW5jbHVkZSAiZ3QvaW50ZWxf
Z3QuaCIKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2NsZmx1c2gu
aCIKICNpbmNsdWRlICJpOTE1X2dlbV9jb250ZXh0LmgiCkBAIC0zNjcsNyArMzY4LDYgQEAgdm9p
ZAogaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX3dyaXRlX2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqLAogCQkJCSAgIHVuc2lnbmVkIGludCBmbHVzaF9kb21haW5zKQogewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7
CiAJc3RydWN0IGk5MTVfdm1hICp2bWE7CiAKIAlhc3NlcnRfb2JqZWN0X2hlbGQob2JqKTsKQEAg
LTM3Nyw4ICszNzcsNiBAQCBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAKIAlzd2l0Y2ggKG9iai0+d3JpdGVfZG9tYWlu
KSB7CiAJY2FzZSBJOTE1X0dFTV9ET01BSU5fR1RUOgotCQlpOTE1X2dlbV9mbHVzaF9nZ3R0X3dy
aXRlcyhkZXZfcHJpdik7Ci0KIAkJaW50ZWxfZmJfb2JqX2ZsdXNoKG9iaiwKIAkJCQkgICBmYl93
cml0ZV9vcmlnaW4ob2JqLCBJOTE1X0dFTV9ET01BSU5fR1RUKSk7CiAKQEAgLTM4Niw2ICszODQs
NyBAQCBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0ICpvYmosCiAJCQlpZiAodm1hLT5pb21hcCkKIAkJCQljb250aW51ZTsKIAorCQkJ
aW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXModm1hLT52bS0+Z3QpOwogCQkJaTkxNV92bWFfdW5z
ZXRfZ2d0dF93cml0ZSh2bWEpOwogCQl9CiAJCWJyZWFrOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYwppbmRleCA1YzgxZjRiNDgxM2Eu
LjI4MTJmN2ZhMjdmZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0
ZXN0cy9pOTE1X2dlbV9tbWFuLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0
ZXN0cy9pOTE1X2dlbV9tbWFuLmMKQEAgLTYsNiArNiw3IEBACiAKICNpbmNsdWRlIDxsaW51eC9w
cmltZV9udW1iZXJzLmg+CiAKKyNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUgImd0
L2ludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaHVnZV9nZW1fb2JqZWN0LmgiCiAjaW5jbHVkZSAi
aTkxNV9zZWxmdGVzdC5oIgpAQCAtMTQzLDcgKzE0NCw3IEBAIHN0YXRpYyBpbnQgY2hlY2tfcGFy
dGlhbF9tYXBwaW5nKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCWlmIChvZmZz
ZXQgPj0gb2JqLT5iYXNlLnNpemUpCiAJCQljb250aW51ZTsKIAotCQlpOTE1X2dlbV9mbHVzaF9n
Z3R0X3dyaXRlcyh0b19pOTE1KG9iai0+YmFzZS5kZXYpKTsKKwkJaW50ZWxfZ3RfZmx1c2hfZ2d0
dF93cml0ZXMoJnRvX2k5MTUob2JqLT5iYXNlLmRldiktPmd0KTsKIAogCQlwID0gaTkxNV9nZW1f
b2JqZWN0X2dldF9wYWdlKG9iaiwgb2Zmc2V0ID4+IFBBR0VfU0hJRlQpOwogCQljcHUgPSBrbWFw
KHApICsgb2Zmc2V0X2luX3BhZ2Uob2Zmc2V0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2d0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5j
CmluZGV4IGQ1ZWUzNDg3ZTE4MC4uNGQzOTgwNTVmMzdjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0LmMKQEAgLTE0NywzICsxNDcsNDQgQEAgdm9pZCBpbnRlbF9ndF9jaGVja19hbmRfY2xl
YXJfZmF1bHRzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAKIAlpbnRlbF9ndF9jbGVhcl9lcnJvcl9y
ZWdpc3RlcnMoZ3QsIEFMTF9FTkdJTkVTKTsKIH0KKwordm9pZCBpbnRlbF9ndF9mbHVzaF9nZ3R0
X3dyaXRlcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1ID0gZ3QtPmk5MTU7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwkvKgorCSAq
IE5vIGFjdHVhbCBmbHVzaGluZyBpcyByZXF1aXJlZCBmb3IgdGhlIEdUVCB3cml0ZSBkb21haW4g
Zm9yIHJlYWRzCisJICogZnJvbSB0aGUgR1RUIGRvbWFpbi4gV3JpdGVzIHRvIGl0ICJpbW1lZGlh
dGVseSIgZ28gdG8gbWFpbiBtZW1vcnkKKwkgKiBhcyBmYXIgYXMgd2Uga25vdywgc28gdGhlcmUn
cyBubyBjaGlwc2V0IGZsdXNoLiBJdCBhbHNvIGRvZXNuJ3QKKwkgKiBsYW5kIGluIHRoZSBHUFUg
cmVuZGVyIGNhY2hlLgorCSAqCisJICogSG93ZXZlciwgd2UgZG8gaGF2ZSB0byBlbmZvcmNlIHRo
ZSBvcmRlciBzbyB0aGF0IGFsbCB3cml0ZXMgdGhyb3VnaAorCSAqIHRoZSBHVFQgbGFuZCBiZWZv
cmUgYW55IHdyaXRlcyB0byB0aGUgZGV2aWNlLCBzdWNoIGFzIHVwZGF0ZXMgdG8KKwkgKiB0aGUg
R0FUVCBpdHNlbGYuCisJICoKKwkgKiBXZSBhbHNvIGhhdmUgdG8gd2FpdCBhIGJpdCBmb3IgdGhl
IHdyaXRlcyB0byBsYW5kIGZyb20gdGhlIEdUVC4KKwkgKiBBbiB1bmNhY2hlZCByZWFkIChpLmUu
IG1taW8pIHNlZW1zIHRvIGJlIGlkZWFsIGZvciB0aGUgcm91bmQtdHJpcAorCSAqIHRpbWluZy4g
VGhpcyBpc3N1ZSBoYXMgb25seSBiZWVuIG9ic2VydmVkIHdoZW4gc3dpdGNoaW5nIHF1aWNrbHkK
KwkgKiBiZXR3ZWVuIEdUVCB3cml0ZXMgYW5kIENQVSByZWFkcyBmcm9tIGluc2lkZSB0aGUga2Vy
bmVsIG9uIHJlY2VudCBodywKKwkgKiBhbmQgaXQgYXBwZWFycyB0byBvbmx5IGFmZmVjdCBkaXNj
cmV0ZSBHVFQgYmxvY2tzIChpLmUuIG9uIExMQworCSAqIHN5c3RlbSBhZ2VudHMgd2UgY2Fubm90
IHJlcHJvZHVjZSB0aGlzIGJlaGF2aW91ciwgdW50aWwgQ2Fubm9ubGFrZQorCSAqIHRoYXQgd2Fz
ISkuCisJICovCisKKwl3bWIoKTsKKworCWlmIChJTlRFTF9JTkZPKGk5MTUpLT5oYXNfY29oZXJl
bnRfZ2d0dCkKKwkJcmV0dXJuOworCisJaTkxNV9nZW1fY2hpcHNldF9mbHVzaChpOTE1KTsKKwor
CXdpdGhfaW50ZWxfcnVudGltZV9wbSgmaTkxNS0+cnVudGltZV9wbSwgd2FrZXJlZikgeworCQlz
dHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBndC0+dW5jb3JlOworCisJCXNwaW5fbG9ja19p
cnEoJnVuY29yZS0+bG9jayk7CisJCWludGVsX3VuY29yZV9wb3N0aW5nX3JlYWRfZncodW5jb3Jl
LAorCQkJCQkgICAgIFJJTkdfSEVBRChSRU5ERVJfUklOR19CQVNFKSk7CisJCXNwaW5fdW5sb2Nr
X2lycSgmdW5jb3JlLT5sb2NrKTsKKwl9Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaApp
bmRleCBkNGY1ODUxNTE1MjcuLjA1MWQ3MDY5ZGI1NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndC5oCkBAIC0xOCw0ICsxOCw2IEBAIHZvaWQgaW50ZWxfZ3RfY2hlY2tfYW5kX2NsZWFyX2Zh
dWx0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIHZvaWQgaW50ZWxfZ3RfY2xlYXJfZXJyb3JfcmVn
aXN0ZXJzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQkJICAgIGludGVsX2VuZ2luZV9tYXNrX3Qg
ZW5naW5lX21hc2spOwogCit2b2lkIGludGVsX2d0X2ZsdXNoX2dndHRfd3JpdGVzKHN0cnVjdCBp
bnRlbF9ndCAqZ3QpOworCiAjZW5kaWYgLyogX19JTlRFTF9HVF9IX18gKi8KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCmluZGV4IDJjNGM4ZWU0MTMzYi4uZDljMDJiZjQyMDUyIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmgKQEAgLTI2MDAsOCArMjYwMCw2IEBAIGludCBfX211c3RfY2hlY2sgaTkxNV9n
ZW1fZXZpY3RfZm9yX25vZGUoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJCQkJCSB1
bnNpZ25lZCBpbnQgZmxhZ3MpOwogaW50IGk5MTVfZ2VtX2V2aWN0X3ZtKHN0cnVjdCBpOTE1X2Fk
ZHJlc3Nfc3BhY2UgKnZtKTsKIAotdm9pZCBpOTE1X2dlbV9mbHVzaF9nZ3R0X3dyaXRlcyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotCiAvKiBiZWxvbmdzIGluIGk5MTVfZ2Vt
X2d0dC5oICovCiBzdGF0aWMgaW5saW5lIHZvaWQgaTkxNV9nZW1fY2hpcHNldF9mbHVzaChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwpp
bmRleCA1ZTkxNGJhNjcyNGUuLmRjYWRmZmQyMTMzOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
CkBAIC0yMzMsNDYgKzIzMyw2IEBAIGk5MTVfZ2VtX2NyZWF0ZV9pb2N0bChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQkJICAgICAgICZhcmdzLT5zaXplLCAmYXJncy0+aGFu
ZGxlKTsKIH0KIAotdm9pZCBpOTE1X2dlbV9mbHVzaF9nZ3R0X3dyaXRlcyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCi17Ci0JaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7Ci0KLQkv
KgotCSAqIE5vIGFjdHVhbCBmbHVzaGluZyBpcyByZXF1aXJlZCBmb3IgdGhlIEdUVCB3cml0ZSBk
b21haW4gZm9yIHJlYWRzCi0JICogZnJvbSB0aGUgR1RUIGRvbWFpbi4gV3JpdGVzIHRvIGl0ICJp
bW1lZGlhdGVseSIgZ28gdG8gbWFpbiBtZW1vcnkKLQkgKiBhcyBmYXIgYXMgd2Uga25vdywgc28g
dGhlcmUncyBubyBjaGlwc2V0IGZsdXNoLiBJdCBhbHNvIGRvZXNuJ3QKLQkgKiBsYW5kIGluIHRo
ZSBHUFUgcmVuZGVyIGNhY2hlLgotCSAqCi0JICogSG93ZXZlciwgd2UgZG8gaGF2ZSB0byBlbmZv
cmNlIHRoZSBvcmRlciBzbyB0aGF0IGFsbCB3cml0ZXMgdGhyb3VnaAotCSAqIHRoZSBHVFQgbGFu
ZCBiZWZvcmUgYW55IHdyaXRlcyB0byB0aGUgZGV2aWNlLCBzdWNoIGFzIHVwZGF0ZXMgdG8KLQkg
KiB0aGUgR0FUVCBpdHNlbGYuCi0JICoKLQkgKiBXZSBhbHNvIGhhdmUgdG8gd2FpdCBhIGJpdCBm
b3IgdGhlIHdyaXRlcyB0byBsYW5kIGZyb20gdGhlIEdUVC4KLQkgKiBBbiB1bmNhY2hlZCByZWFk
IChpLmUuIG1taW8pIHNlZW1zIHRvIGJlIGlkZWFsIGZvciB0aGUgcm91bmQtdHJpcAotCSAqIHRp
bWluZy4gVGhpcyBpc3N1ZSBoYXMgb25seSBiZWVuIG9ic2VydmVkIHdoZW4gc3dpdGNoaW5nIHF1
aWNrbHkKLQkgKiBiZXR3ZWVuIEdUVCB3cml0ZXMgYW5kIENQVSByZWFkcyBmcm9tIGluc2lkZSB0
aGUga2VybmVsIG9uIHJlY2VudCBodywKLQkgKiBhbmQgaXQgYXBwZWFycyB0byBvbmx5IGFmZmVj
dCBkaXNjcmV0ZSBHVFQgYmxvY2tzIChpLmUuIG9uIExMQwotCSAqIHN5c3RlbSBhZ2VudHMgd2Ug
Y2Fubm90IHJlcHJvZHVjZSB0aGlzIGJlaGF2aW91ciwgdW50aWwgQ2Fubm9ubGFrZQotCSAqIHRo
YXQgd2FzISkuCi0JICovCi0KLQl3bWIoKTsKLQotCWlmIChJTlRFTF9JTkZPKGRldl9wcml2KS0+
aGFzX2NvaGVyZW50X2dndHQpCi0JCXJldHVybjsKLQotCWk5MTVfZ2VtX2NoaXBzZXRfZmx1c2go
ZGV2X3ByaXYpOwotCi0Jd2l0aF9pbnRlbF9ydW50aW1lX3BtKCZkZXZfcHJpdi0+cnVudGltZV9w
bSwgd2FrZXJlZikgewotCQlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYt
PnVuY29yZTsKLQotCQlzcGluX2xvY2tfaXJxKCZ1bmNvcmUtPmxvY2spOwotCQlpbnRlbF91bmNv
cmVfcG9zdGluZ19yZWFkX2Z3KHVuY29yZSwKLQkJCQkJICAgICBSSU5HX0hFQUQoUkVOREVSX1JJ
TkdfQkFTRSkpOwotCQlzcGluX3VubG9ja19pcnEoJnVuY29yZS0+bG9jayk7Ci0JfQotfQotCiBz
dGF0aWMgaW50CiBzaG1lbV9wcmVhZChzdHJ1Y3QgcGFnZSAqcGFnZSwgaW50IG9mZnNldCwgaW50
IGxlbiwgY2hhciBfX3VzZXIgKnVzZXJfZGF0YSwKIAkgICAgYm9vbCBuZWVkc19jbGZsdXNoKQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfdm1hLmMKaW5kZXggYjI5NWM1MzA4NWVlLi41NzFjNmRkZDdlYWYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV92bWEuYwpAQCAtMjMsNiArMjMsNyBAQAogICovCiAKICNpbmNsdWRl
ICJndC9pbnRlbF9lbmdpbmUuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogCiAjaW5jbHVk
ZSAiaTkxNV92bWEuaCIKIApAQCAtNDA4LDcgKzQwOSw3IEBAIHZvaWQgaTkxNV92bWFfZmx1c2hf
d3JpdGVzKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCWlmICghaTkxNV92bWFfaGFzX2dndHRfd3Jp
dGUodm1hKSkKIAkJcmV0dXJuOwogCi0JaTkxNV9nZW1fZmx1c2hfZ2d0dF93cml0ZXModm1hLT52
bS0+aTkxNSk7CisJaW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXModm1hLT52bS0+Z3QpOwogCiAJ
aTkxNV92bWFfdW5zZXRfZ2d0dF93cml0ZSh2bWEpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2d0dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2d0dC5jCmluZGV4IDFhNjBiOWZlODIyMS4uZDk1MzFjYjVm
MjM1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9nZW1f
Z3R0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2d0dC5j
CkBAIC0xMTk1LDcgKzExOTUsNyBAQCBzdGF0aWMgaW50IGlndF9nZ3R0X3BhZ2Uodm9pZCAqYXJn
KQogCQlpb3dyaXRlMzIobiwgdmFkZHIgKyBuKTsKIAkJaW9fbWFwcGluZ191bm1hcF9hdG9taWMo
dmFkZHIpOwogCX0KLQlpOTE1X2dlbV9mbHVzaF9nZ3R0X3dyaXRlcyhpOTE1KTsKKwlpbnRlbF9n
dF9mbHVzaF9nZ3R0X3dyaXRlcyhnZ3R0LT52bS5ndCk7CiAKIAlpOTE1X3JhbmRvbV9yZW9yZGVy
KG9yZGVyLCBjb3VudCwgJnBybmcpOwogCWZvciAobiA9IDA7IG4gPCBjb3VudDsgbisrKSB7Ci0t
IAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

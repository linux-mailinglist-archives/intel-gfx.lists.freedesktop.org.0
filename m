Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 54EDF1C6F41
	for <lists+intel-gfx@lfdr.de>; Wed,  6 May 2020 13:24:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9630F6E85F;
	Wed,  6 May 2020 11:24:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 81CF16E85F
 for <intel-gfx@lists.freedesktop.org>; Wed,  6 May 2020 11:24:00 +0000 (UTC)
IronPort-SDR: DhOOJNuNmACzyzs/rZOHAXomR99nV9jj7To2oYON3ABe9dXh6O4mX6O3E3BOv7hHm/fVQj2LkP
 jJSjpstVxL1Q==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 06 May 2020 04:23:53 -0700
IronPort-SDR: R+RTxVz9LdUP33k3vo44UTODoO8OCg456OuAODm71bIj0VAzkSiH4ijKJMWzEkdKZzMQAA8RIs
 2rZsi3sFbaQA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.73,358,1583222400"; d="scan'208";a="295306749"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga002.fm.intel.com with SMTP; 06 May 2020 04:23:51 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 06 May 2020 14:23:50 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  6 May 2020 14:23:27 +0300
Message-Id: <20200506112328.16562-9-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200506112328.16562-1-ville.syrjala@linux.intel.com>
References: <20200506112328.16562-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 8/9] drm/i915: Plumb crtc_state to link training
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkdl
dCByaWQgb2YgbW9kZSBjcnRjLT5jb25maWcgdXNhZ2UsIGFuZCBzb21lIGFkLWhvYyBpbnRlbF9k
cCBzdGF0ZQp1c2FnZSBieSBwbHVtYmluZyB0aGUgY3J0YyBzdGF0ZSBhbGwgdGhlIHdheSBkb3du
IHRvIHRoZSBsaW5rIHRyYWluaW5nCmNvZGUuCgpVbmZvcnR1bmF0ZWx5IHdlIGRvIGhhdmUgdG8g
a2VlcCBzb21lIGNhY2hlZCBzdGF0ZSBpbiBpbnRlbF9kcCBzbwp0aGF0IHdlIGNhbiBkbyB0aGUg
ImRvZXMgdGhlIGxpbmsgbmVlZCByZXRyYWluaW5nPyIgY2hlY2tzIGZyb20KdGhlIHNob3J0IGhw
ZCBoYW5kbGVyLgoKVGhlIFBIWSB0ZXN0IGNvZGUgc2VlbXMgdG8gaGF2ZSBzdGFydGVkIHRvIGJ1
aWxkIHNvbWUga2luZCBvZiBOSUgKbW9kZXNldCBjb2RlIHJpZ2h0IGludG8gaW50ZWxfZHAuYy4g
VGhhdCdzIG5vdCBob3cgd2Ugc2hvdWxkIGRvCnRoaW5ncywgYW5kIGluc3RlYWQgd2Ugc2hvdWxk
IGp1c3QgZ28gdGhyb3VnaCB0aGUgbm9ybWFsIG1vZGVzZXQKbWFjaGluZXJ5IGZvciB0aGF0ICht
ZWFuaW5nIGl0IGFsbCBuZWVkcyB0byBtb3ZlIGludG8gdGhlIGhvdHBsdWcKd29yayBhcyB3ZWxs
LCBqdXN0IGxpa2Ugd2UndmUgYWxyZWFkeSBkb25lIGZvciBub3JtYWwgbGluayByZXRyYWluaW5n
KS4KRm9yIG5vdyBqdXN0IG5ldXRlciB0aGF0IGNvZGUgYW5kIHRvc3MgaW4gYSBGSVhNRS4KClNp
Z25lZC1vZmYtYnk6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyAgICAgIHwg
MzM0ICsrKysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuaCAgICAgIHwgICA2ICstCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3R5cGVzLmggICAgfCAgMTcgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYyAgICAgICB8IDEzOCArKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcC5oICAgICAgIHwgIDExICstCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9s
aW5rX3RyYWluaW5nLmMgfCAxMDIgKysrLS0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
cF9saW5rX3RyYWluaW5nLmggfCAgIDcgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZHBpb19waHkuYyB8ICAyMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcGlvX3BoeS5oIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfaGRtaS5jICAgICB8ICAgNyArLQogMTAgZmlsZXMgY2hhbmdlZCwgMzQ5IGluc2VydGlvbnMo
KyksIDI5OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYwppbmRleCA0MDliOGE2ODU3MGYuLjc3ZDIwMjFkMGJjZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCkBAIC05NTMsNjggKzk1Myw3NSBAQCBjbmxfZ2V0X2J1
Zl90cmFuc19lZHAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgKm5fZW50
cmllcykKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAqCi1pY2xf
Z2V0X2NvbWJvX2J1Zl90cmFucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGlu
dCB0eXBlLCBpbnQgcmF0ZSwKK2ljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJaW50ICpuX2VudHJpZXMpCiB7Ci0JaWYg
KHR5cGUgPT0gSU5URUxfT1VUUFVUX0hETUkpIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGNydGNfc3RhdGUtPnVhcGkuY3J0Yy0+ZGV2KTsKKworCWlmIChp
bnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSkgewogCQkq
bl9lbnRyaWVzID0gQVJSQVlfU0laRShpY2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfaGRt
aSk7CiAJCXJldHVybiBpY2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfaGRtaTsKLQl9IGVs
c2UgaWYgKHJhdGUgPiA1NDAwMDAgJiYgdHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKSB7CisJfSBl
bHNlIGlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9FRFAp
ICYmCisJCSAgIGNydGNfc3RhdGUtPnBvcnRfY2xvY2sgPiA1NDAwMDApIHsKIAkJKm5fZW50cmll
cyA9IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2VkcF9oYnIzKTsK
IAkJcmV0dXJuIGljbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19lZHBfaGJyMzsKLQl9IGVs
c2UgaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCAmJiBkZXZfcHJpdi0+dmJ0LmVkcC5sb3df
dnN3aW5nKSB7CisJfSBlbHNlIGlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElO
VEVMX09VVFBVVF9FRFApICYmCisJCSAgIGRldl9wcml2LT52YnQuZWRwLmxvd192c3dpbmcpIHsK
IAkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25z
X2VkcF9oYnIyKTsKIAkJcmV0dXJuIGljbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19lZHBf
aGJyMjsKKwl9IGVsc2UgeworCQkqbl9lbnRyaWVzID0gQVJSQVlfU0laRShpY2xfY29tYm9fcGh5
X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyMik7CisJCXJldHVybiBpY2xfY29tYm9fcGh5X2RkaV90
cmFuc2xhdGlvbnNfZHBfaGJyMjsKIAl9Ci0KLQkqbl9lbnRyaWVzID0gQVJSQVlfU0laRShpY2xf
Y29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyMik7Ci0JcmV0dXJuIGljbF9jb21ib19w
aHlfZGRpX3RyYW5zbGF0aW9uc19kcF9oYnIyOwogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGlj
bF9tZ19waHlfZGRpX2J1Zl90cmFucyAqCi1pY2xfZ2V0X21nX2J1Zl90cmFucyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCB0eXBlLCBpbnQgcmF0ZSwKK2ljbF9nZXRfbWdf
YnVmX3RyYW5zKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkg
ICAgIGludCAqbl9lbnRyaWVzKQogewotCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JKSB7
CisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0hETUkp
KSB7CiAJCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKGljbF9tZ19waHlfZGRpX3RyYW5zbGF0aW9u
c19oZG1pKTsKIAkJcmV0dXJuIGljbF9tZ19waHlfZGRpX3RyYW5zbGF0aW9uc19oZG1pOwotCX0g
ZWxzZSBpZiAocmF0ZSA+IDI3MDAwMCkgeworCX0gZWxzZSBpZiAoY3J0Y19zdGF0ZS0+cG9ydF9j
bG9jayA+IDI3MDAwMCkgewogCQkqbl9lbnRyaWVzID0gQVJSQVlfU0laRShpY2xfbWdfcGh5X2Rk
aV90cmFuc2xhdGlvbnNfaGJyMl9oYnIzKTsKIAkJcmV0dXJuIGljbF9tZ19waHlfZGRpX3RyYW5z
bGF0aW9uc19oYnIyX2hicjM7CisJfSBlbHNlIHsKKwkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUo
aWNsX21nX3BoeV9kZGlfdHJhbnNsYXRpb25zX3Jicl9oYnIpOworCQlyZXR1cm4gaWNsX21nX3Bo
eV9kZGlfdHJhbnNsYXRpb25zX3Jicl9oYnI7CiAJfQotCi0JKm5fZW50cmllcyA9IEFSUkFZX1NJ
WkUoaWNsX21nX3BoeV9kZGlfdHJhbnNsYXRpb25zX3Jicl9oYnIpOwotCXJldHVybiBpY2xfbWdf
cGh5X2RkaV90cmFuc2xhdGlvbnNfcmJyX2hicjsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBj
bmxfZGRpX2J1Zl90cmFucyAqCi1laGxfZ2V0X2NvbWJvX2J1Zl90cmFucyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCB0eXBlLCBpbnQgcmF0ZSwKK2VobF9nZXRfY29tYm9f
YnVmX3RyYW5zKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJ
aW50ICpuX2VudHJpZXMpCiB7Ci0JaWYgKHR5cGUgIT0gSU5URUxfT1VUUFVUX0hETUkgJiYgdHlw
ZSAhPSBJTlRFTF9PVVRQVVRfRURQKSB7CisJaWYgKCFpbnRlbF9jcnRjX2hhc190eXBlKGNydGNf
c3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSAmJgorCSAgICAhaW50ZWxfY3J0Y19oYXNfdHlwZShj
cnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRURQKSkgewogCQkqbl9lbnRyaWVzID0gQVJSQVlfU0la
RShlaGxfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHApOwogCQlyZXR1cm4gZWhsX2NvbWJv
X3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwOworCX0gZWxzZSB7CisJCXJldHVybiBpY2xfZ2V0X2Nv
bWJvX2J1Zl90cmFucyhjcnRjX3N0YXRlLCBuX2VudHJpZXMpOwogCX0KLQotCXJldHVybiBpY2xf
Z2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwgcmF0ZSwgbl9lbnRyaWVzKTsKIH0K
IAogc3RhdGljIGNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAqCi10Z2xfZ2V0X2NvbWJv
X2J1Zl90cmFucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCB0eXBlLCBp
bnQgcmF0ZSwKK3RnbF9nZXRfY29tYm9fYnVmX3RyYW5zKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAogCQkJaW50ICpuX2VudHJpZXMpCiB7Ci0JaWYgKHR5cGUgPT0g
SU5URUxfT1VUUFVUX0hETUkgfHwgdHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKSB7Ci0JCXJldHVy
biBpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwgcmF0ZSwgbl9lbnRyaWVz
KTsKLQl9IGVsc2UgaWYgKHJhdGUgPiAyNzAwMDApIHsKKwlpZiAoaW50ZWxfY3J0Y19oYXNfdHlw
ZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfSERNSSkgfHwKKwkgICAgaW50ZWxfY3J0Y19oYXNf
dHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRURQKSkgeworCQlyZXR1cm4gaWNsX2dldF9j
b21ib19idWZfdHJhbnMoY3J0Y19zdGF0ZSwgbl9lbnRyaWVzKTsKKwl9IGVsc2UgaWYgKGNydGNf
c3RhdGUtPnBvcnRfY2xvY2sgPiAyNzAwMDApIHsKIAkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUo
dGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwX2hicjIpOwogCQlyZXR1cm4gdGdsX2Nv
bWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwX2hicjI7CisJfSBlbHNlIHsKKwkJKm5fZW50cmll
cyA9IEFSUkFZX1NJWkUodGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwX2hicik7CisJ
CXJldHVybiB0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyOwogCX0KLQotCSpu
X2VudHJpZXMgPSBBUlJBWV9TSVpFKHRnbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19kcF9o
YnIpOwotCXJldHVybiB0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyOwogfQog
Ci1zdGF0aWMgaW50IGludGVsX2RkaV9oZG1pX2xldmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyKQorc3RhdGljIGludCBpbnRlbF9kZGlfaGRtaV9sZXZlbChzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlciwKKwkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVu
Y29kZXItPmJhc2UuZGV2KTsKIAlpbnQgbl9lbnRyaWVzLCBsZXZlbCwgZGVmYXVsdF9lbnRyeTsK
QEAgLTEwMjIsMTggKzEwMjksMTUgQEAgc3RhdGljIGludCBpbnRlbF9kZGlfaGRtaV9sZXZlbChz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYp
ID49IDEyKSB7CiAJCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpCi0JCQl0
Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgSU5URUxfT1VUUFVUX0hETUksCi0JCQkJ
CQkwLCAmbl9lbnRyaWVzKTsKKwkJCXRnbF9nZXRfY29tYm9fYnVmX3RyYW5zKGNydGNfc3RhdGUs
ICZuX2VudHJpZXMpOwogCQllbHNlCiAJCQluX2VudHJpZXMgPSBBUlJBWV9TSVpFKHRnbF9ka2xf
cGh5X2hkbWlfZGRpX3RyYW5zKTsKIAkJZGVmYXVsdF9lbnRyeSA9IG5fZW50cmllcyAtIDE7CiAJ
fSBlbHNlIGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID09IDExKSB7CiAJCWlmIChpbnRlbF9waHlf
aXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpCi0JCQlpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZf
cHJpdiwgSU5URUxfT1VUUFVUX0hETUksCi0JCQkJCQkwLCAmbl9lbnRyaWVzKTsKKwkJCWljbF9n
ZXRfY29tYm9fYnVmX3RyYW5zKGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCQllbHNlCi0JCQlp
Y2xfZ2V0X21nX2J1Zl90cmFucyhkZXZfcHJpdiwgSU5URUxfT1VUUFVUX0hETUksIDAsCi0JCQkJ
CSAgICAgJm5fZW50cmllcyk7CisJCQlpY2xfZ2V0X21nX2J1Zl90cmFucyhjcnRjX3N0YXRlLCAm
bl9lbnRyaWVzKTsKIAkJZGVmYXVsdF9lbnRyeSA9IG5fZW50cmllcyAtIDE7CiAJfSBlbHNlIGlm
IChJU19DQU5OT05MQUtFKGRldl9wcml2KSkgewogCQljbmxfZ2V0X2J1Zl90cmFuc19oZG1pKGRl
dl9wcml2LCAmbl9lbnRyaWVzKTsKQEAgLTEzNDYsNyArMTM1MCw4IEBAIHZvaWQgaHN3X2ZkaV9s
aW5rX3RyYWluKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkgICAgICAgRFBfVFBf
Q1RMX0VOQUJMRSk7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX2RkaV9pbml0X2RwX2J1Zl9yZWco
c3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCitzdGF0aWMgdm9pZCBpbnRlbF9kZGlfaW5p
dF9kcF9idWZfcmVnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJCSAgICAgIGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CiAJc3RydWN0IGludGVs
X2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPQpAQCAtMTM1NCw3ICsxMzU5LDcgQEAgc3Rh
dGljIHZvaWQgaW50ZWxfZGRpX2luaXRfZHBfYnVmX3JlZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlcikKIAogCWludGVsX2RwLT5EUCA9IGludGVsX2RpZ19wb3J0LT5zYXZlZF9wb3J0X2Jp
dHMgfAogCQlERElfQlVGX0NUTF9FTkFCTEUgfCBERElfQlVGX1RSQU5TX1NFTEVDVCgwKTsKLQlp
bnRlbF9kcC0+RFAgfD0gRERJX1BPUlRfV0lEVEgoaW50ZWxfZHAtPmxhbmVfY291bnQpOworCWlu
dGVsX2RwLT5EUCB8PSBERElfUE9SVF9XSURUSChjcnRjX3N0YXRlLT5sYW5lX2NvdW50KTsKIH0K
IAogc3RhdGljIGludCBpY2xfY2FsY190YnRfcGxsX2xpbmsoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LApAQCAtMjAyNSwxNCArMjAzMCwxNSBAQCBzdGF0aWMgdm9pZCBfc2tsX2Rk
aV9zZXRfaWJvb3N0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIH0KIAogc3Rh
dGljIHZvaWQgc2tsX2RkaV9zZXRfaWJvb3N0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
LAotCQkJICAgICAgIGludCBsZXZlbCwgZW51bSBpbnRlbF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJ
ICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJICAg
ICAgIGludCBsZXZlbCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdf
cG9ydCA9IGVuY190b19kaWdfcG9ydChlbmNvZGVyKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAllbnVtIHBvcnQgcG9y
dCA9IGVuY29kZXItPnBvcnQ7CiAJdTggaWJvb3N0OwogCi0JaWYgKHR5cGUgPT0gSU5URUxfT1VU
UFVUX0hETUkpCisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VU
UFVUX0hETUkpKQogCQlpYm9vc3QgPSBpbnRlbF9iaW9zX2hkbWlfYm9vc3RfbGV2ZWwoZW5jb2Rl
cik7CiAJZWxzZQogCQlpYm9vc3QgPSBpbnRlbF9iaW9zX2RwX2Jvb3N0X2xldmVsKGVuY29kZXIp
OwpAQCAtMjA0MSw5ICsyMDQ3LDkgQEAgc3RhdGljIHZvaWQgc2tsX2RkaV9zZXRfaWJvb3N0KHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQljb25zdCBzdHJ1Y3QgZGRpX2J1Zl90cmFu
cyAqZGRpX3RyYW5zbGF0aW9uczsKIAkJaW50IG5fZW50cmllczsKIAotCQlpZiAodHlwZSA9PSBJ
TlRFTF9PVVRQVVRfSERNSSkKKwkJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwg
SU5URUxfT1VUUFVUX0hETUkpKQogCQkJZGRpX3RyYW5zbGF0aW9ucyA9IGludGVsX2RkaV9nZXRf
YnVmX3RyYW5zX2hkbWkoZGV2X3ByaXYsICZuX2VudHJpZXMpOwotCQllbHNlIGlmICh0eXBlID09
IElOVEVMX09VVFBVVF9FRFApCisJCWVsc2UgaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19z
dGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCiAJCQlkZGlfdHJhbnNsYXRpb25zID0gaW50ZWxfZGRp
X2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCBwb3J0LCAmbl9lbnRyaWVzKTsKIAkJZWxzZQog
CQkJZGRpX3RyYW5zbGF0aW9ucyA9IGludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2RwKGRldl9wcml2
LCBwb3J0LCAmbl9lbnRyaWVzKTsKQEAgLTIwNjksMTYgKzIwNzUsMTcgQEAgc3RhdGljIHZvaWQg
c2tsX2RkaV9zZXRfaWJvb3N0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogfQogCiBz
dGF0aWMgdm9pZCBieHRfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKLQkJCQkgICAgaW50IGxldmVsLCBlbnVtIGludGVsX291dHB1dF90eXBlIHR5cGUp
CisJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJ
CSAgICBpbnQgbGV2ZWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJY29uc3Qgc3RydWN0IGJ4dF9kZGlfYnVmX3Ry
YW5zICpkZGlfdHJhbnNsYXRpb25zOwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsK
IAlpbnQgbl9lbnRyaWVzOwogCi0JaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0hETUkpCisJaWYg
KGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0hETUkpKQogCQlk
ZGlfdHJhbnNsYXRpb25zID0gYnh0X2dldF9idWZfdHJhbnNfaGRtaShkZXZfcHJpdiwgJm5fZW50
cmllcyk7Ci0JZWxzZSBpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKQorCWVsc2UgaWYgKGlu
dGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCiAJCWRkaV90
cmFuc2xhdGlvbnMgPSBieHRfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsICZuX2VudHJpZXMp
OwogCWVsc2UKIAkJZGRpX3RyYW5zbGF0aW9ucyA9IGJ4dF9nZXRfYnVmX3RyYW5zX2RwKGRldl9w
cml2LCAmbl9lbnRyaWVzKTsKQEAgLTIwOTUsNyArMjEwMiw4IEBAIHN0YXRpYyB2b2lkIGJ4dF9k
ZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCSAg
ICAgZGRpX3RyYW5zbGF0aW9uc1tsZXZlbF0uZGVlbXBoYXNpcyk7CiB9CiAKLXN0YXRpYyB1OCBp
bnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0YXRp
YyB1OCBpbnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
KwkJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCkt
PmJhc2U7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNv
ZGVyLT5iYXNlLmRldik7CkBAIC0yMTA1LDMyICsyMTEzLDI4IEBAIHN0YXRpYyB1OCBpbnRlbF9k
ZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3By
aXYsIHBoeSkpCi0JCQl0Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgZW5jb2Rlci0+
dHlwZSwKLQkJCQkJCWludGVsX2RwLT5saW5rX3JhdGUsICZuX2VudHJpZXMpOworCQkJdGdsX2dl
dF9jb21ib19idWZfdHJhbnMoY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAJCWVsc2UKIAkJCW5f
ZW50cmllcyA9IEFSUkFZX1NJWkUodGdsX2RrbF9waHlfZHBfZGRpX3RyYW5zKTsKIAl9IGVsc2Ug
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPT0gMTEpIHsKIAkJaWYgKElTX0VMS0hBUlRMQUtFKGRl
dl9wcml2KSkKLQkJCWVobF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2LCBlbmNvZGVyLT50
eXBlLAotCQkJCQkJaW50ZWxfZHAtPmxpbmtfcmF0ZSwgJm5fZW50cmllcyk7CisJCQllaGxfZ2V0
X2NvbWJvX2J1Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAkJZWxzZSBpZiAoaW50
ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQotCQkJaWNsX2dldF9jb21ib19idWZfdHJh
bnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCi0JCQkJCQlpbnRlbF9kcC0+bGlua19yYXRlLCAm
bl9lbnRyaWVzKTsKKwkJCWljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGNydGNfc3RhdGUsICZuX2Vu
dHJpZXMpOwogCQllbHNlCi0JCQlpY2xfZ2V0X21nX2J1Zl90cmFucyhkZXZfcHJpdiwgZW5jb2Rl
ci0+dHlwZSwKLQkJCQkJICAgICBpbnRlbF9kcC0+bGlua19yYXRlLCAmbl9lbnRyaWVzKTsKKwkJ
CWljbF9nZXRfbWdfYnVmX3RyYW5zKGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCX0gZWxzZSBp
ZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKLQkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5U
RUxfT1VUUFVUX0VEUCkKKwkJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5U
RUxfT1VUUFVUX0VEUCkpCiAJCQljbmxfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsICZuX2Vu
dHJpZXMpOwogCQllbHNlCiAJCQljbmxfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgJm5fZW50
cmllcyk7CiAJfSBlbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2KSkgewotCQlpZiAoZW5jb2Rl
ci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKQorCQlpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShj
cnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRURQKSkKIAkJCWJ4dF9nZXRfYnVmX3RyYW5zX2VkcChk
ZXZfcHJpdiwgJm5fZW50cmllcyk7CiAJCWVsc2UKIAkJCWJ4dF9nZXRfYnVmX3RyYW5zX2RwKGRl
dl9wcml2LCAmbl9lbnRyaWVzKTsKIAl9IGVsc2UgewotCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJ
TlRFTF9PVVRQVVRfRURQKQorCQlpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJ
TlRFTF9PVVRQVVRfRURQKSkKIAkJCWludGVsX2RkaV9nZXRfYnVmX3RyYW5zX2VkcChkZXZfcHJp
diwgcG9ydCwgJm5fZW50cmllcyk7CiAJCWVsc2UKIAkJCWludGVsX2RkaV9nZXRfYnVmX3RyYW5z
X2RwKGRldl9wcml2LCBwb3J0LCAmbl9lbnRyaWVzKTsKQEAgLTIxNTcsNyArMjE2MSw4IEBAIHN0
YXRpYyB1OCBpbnRlbF9kZGlfZHBfcHJlZW1waF9tYXgoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIH0KIAogc3RhdGljIHZvaWQgY25sX2RkaV92c3dpbmdfcHJvZ3JhbShzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKLQkJCQkgICBpbnQgbGV2ZWwsIGVudW0gaW50ZWxfb3V0cHV0X3R5
cGUgdHlwZSkKKwkJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKKwkJCQkgICBpbnQgbGV2ZWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJY29uc3Qgc3RydWN0IGNubF9kZGlf
YnVmX3RyYW5zICpkZGlfdHJhbnNsYXRpb25zOwpAQCAtMjE2NSw5ICsyMTcwLDkgQEAgc3RhdGlj
IHZvaWQgY25sX2RkaV92c3dpbmdfcHJvZ3JhbShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKIAlpbnQgbl9lbnRyaWVzLCBsbjsKIAl1MzIgdmFsOwogCi0JaWYgKHR5cGUgPT0gSU5URUxf
T1VUUFVUX0hETUkpCisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxf
T1VUUFVUX0hETUkpKQogCQlkZGlfdHJhbnNsYXRpb25zID0gY25sX2dldF9idWZfdHJhbnNfaGRt
aShkZXZfcHJpdiwgJm5fZW50cmllcyk7Ci0JZWxzZSBpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRf
RURQKQorCWVsc2UgaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VU
UFVUX0VEUCkpCiAJCWRkaV90cmFuc2xhdGlvbnMgPSBjbmxfZ2V0X2J1Zl90cmFuc19lZHAoZGV2
X3ByaXYsICZuX2VudHJpZXMpOwogCWVsc2UKIAkJZGRpX3RyYW5zbGF0aW9ucyA9IGNubF9nZXRf
YnVmX3RyYW5zX2RwKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKQEAgLTIyMjEsMjIgKzIyMjYsMTYg
QEAgc3RhdGljIHZvaWQgY25sX2RkaV92c3dpbmdfcHJvZ3JhbShzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciwKIH0KIAogc3RhdGljIHZvaWQgY25sX2RkaV92c3dpbmdfc2VxdWVuY2Uoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCi0JCQkJICAgIGludCBsZXZlbCwgZW51bSBpbnRl
bF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKKwkJCQkgICAgaW50IGxldmVsKQogewogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcG9y
dCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKIAlpbnQgd2lkdGgsIHJhdGUsIGxuOwogCXUzMiB2YWw7
CiAKLQlpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRfSERNSSkgewotCQl3aWR0aCA9IDQ7Ci0JCXJh
dGUgPSAwOyAvKiBSYXRlIGlzIGFsd2F5cyA8IHRoYW4gNkdIeiBmb3IgSERNSSAqLwotCX0gZWxz
ZSB7Ci0JCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rl
cik7Ci0KLQkJd2lkdGggPSBpbnRlbF9kcC0+bGFuZV9jb3VudDsKLQkJcmF0ZSA9IGludGVsX2Rw
LT5saW5rX3JhdGU7Ci0JfQorCXdpZHRoID0gY3J0Y19zdGF0ZS0+bGFuZV9jb3VudDsKKwlyYXRl
ID0gY3J0Y19zdGF0ZS0+cG9ydF9jbG9jazsKIAogCS8qCiAJICogMS4gSWYgcG9ydCB0eXBlIGlz
IGVEUCBvciBEUCwKQEAgLTIyNDQsMTAgKzIyNDMsMTAgQEAgc3RhdGljIHZvaWQgY25sX2RkaV92
c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJICogZWxzZSBj
bGVhciB0byAwYi4KIAkgKi8KIAl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBDTkxfUE9S
VF9QQ1NfRFcxX0xOMChwb3J0KSk7Ci0JaWYgKHR5cGUgIT0gSU5URUxfT1VUUFVUX0hETUkpCi0J
CXZhbCB8PSBDT01NT05fS0VFUEVSX0VOOwotCWVsc2UKKwlpZiAoaW50ZWxfY3J0Y19oYXNfdHlw
ZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfSERNSSkpCiAJCXZhbCAmPSB+Q09NTU9OX0tFRVBF
Ul9FTjsKKwllbHNlCisJCXZhbCB8PSBDT01NT05fS0VFUEVSX0VOOwogCWludGVsX2RlX3dyaXRl
KGRldl9wcml2LCBDTkxfUE9SVF9QQ1NfRFcxX0dSUChwb3J0KSwgdmFsKTsKIAogCS8qIDIuIFBy
b2dyYW0gbG9hZGdlbiBzZWxlY3QgKi8KQEAgLTIyNzksNyArMjI3OCw3IEBAIHN0YXRpYyB2b2lk
IGNubF9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAog
CWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBDTkxfUE9SVF9UWF9EVzVfR1JQKHBvcnQpLCB2YWwp
OwogCiAJLyogNS4gUHJvZ3JhbSBzd2luZyBhbmQgZGUtZW1waGFzaXMgKi8KLQljbmxfZGRpX3Zz
d2luZ19wcm9ncmFtKGVuY29kZXIsIGxldmVsLCB0eXBlKTsKKwljbmxfZGRpX3Zzd2luZ19wcm9n
cmFtKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAogCS8qIDYuIFNldCB0cmFpbmluZyBl
bmFibGUgdG8gdHJpZ2dlciB1cGRhdGUgKi8KIAl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LCBDTkxfUE9SVF9UWF9EVzVfTE4wKHBvcnQpKTsKQEAgLTIyODcsMjMgKzIyODYsMjIgQEAgc3Rh
dGljIHZvaWQgY25sX2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsCiAJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIENOTF9QT1JUX1RYX0RXNV9HUlAocG9y
dCksIHZhbCk7CiB9CiAKLXN0YXRpYyB2b2lkIGljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0o
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCQl1MzIgbGV2ZWwsIGVudW0g
cGh5IHBoeSwgaW50IHR5cGUsCi0JCQkJCWludCByYXRlKQorc3RhdGljIHZvaWQgaWNsX2RkaV9j
b21ib192c3dpbmdfcHJvZ3JhbShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkJ
IGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCQkgaW50IGxl
dmVsKQogewotCWNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAqZGRpX3RyYW5zbGF0aW9u
cyA9IE5VTEw7Ci0JdTMyIG5fZW50cmllcywgdmFsOwotCWludCBsbjsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwljb25z
dCBzdHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgKmRkaV90cmFuc2xhdGlvbnM7CisJZW51bSBwaHkg
cGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOworCWludCBu
X2VudHJpZXMsIGxuOworCXUzMiB2YWw7CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MikKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IHRnbF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2
LCB0eXBlLCByYXRlLAotCQkJCQkJCSAgICZuX2VudHJpZXMpOworCQlkZGlfdHJhbnNsYXRpb25z
ID0gdGdsX2dldF9jb21ib19idWZfdHJhbnMoY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAJZWxz
ZSBpZiAoSVNfRUxLSEFSVExBS0UoZGV2X3ByaXYpKQotCQlkZGlfdHJhbnNsYXRpb25zID0gZWhs
X2dldF9jb21ib19idWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsCi0JCQkJCQkJICAgJm5f
ZW50cmllcyk7CisJCWRkaV90cmFuc2xhdGlvbnMgPSBlaGxfZ2V0X2NvbWJvX2J1Zl90cmFucyhj
cnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAllbHNlCi0JCWRkaV90cmFuc2xhdGlvbnMgPSBpY2xf
Z2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwgcmF0ZSwKLQkJCQkJCQkgICAmbl9l
bnRyaWVzKTsKKwkJZGRpX3RyYW5zbGF0aW9ucyA9IGljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGNy
dGNfc3RhdGUsICZuX2VudHJpZXMpOwogCWlmICghZGRpX3RyYW5zbGF0aW9ucykKIAkJcmV0dXJu
OwogCkBAIC0yMzUzLDI1ICsyMzUxLDE2IEBAIHN0YXRpYyB2b2lkIGljbF9kZGlfY29tYm9fdnN3
aW5nX3Byb2dyYW0oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogfQogCiBzdGF0
aWMgdm9pZCBpY2xfY29tYm9fcGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXIsCi0JCQkJCSAgICAgIHUzMiBsZXZlbCwKLQkJCQkJICAgICAgZW51bSBp
bnRlbF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkJICAgICAgaW50IGxldmVsKQogewogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwog
CWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0
KTsKLQlpbnQgd2lkdGggPSAwOwotCWludCByYXRlID0gMDsKKwlpbnQgd2lkdGgsIHJhdGUsIGxu
OwogCXUzMiB2YWw7Ci0JaW50IGxuID0gMDsKIAotCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9I
RE1JKSB7Ci0JCXdpZHRoID0gNDsKLQkJLyogUmF0ZSBpcyBhbHdheXMgPCB0aGFuIDZHSHogZm9y
IEhETUkgKi8KLQl9IGVsc2UgewotCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3Rv
X2ludGVsX2RwKGVuY29kZXIpOwotCi0JCXdpZHRoID0gaW50ZWxfZHAtPmxhbmVfY291bnQ7Ci0J
CXJhdGUgPSBpbnRlbF9kcC0+bGlua19yYXRlOwotCX0KKwl3aWR0aCA9IGNydGNfc3RhdGUtPmxh
bmVfY291bnQ7CisJcmF0ZSA9IGNydGNfc3RhdGUtPnBvcnRfY2xvY2s7CiAKIAkvKgogCSAqIDEu
IElmIHBvcnQgdHlwZSBpcyBlRFAgb3IgRFAsCkBAIC0yMzc5LDcgKzIzNjgsNyBAQCBzdGF0aWMg
dm9pZCBpY2xfY29tYm9fcGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJICogZWxzZSBjbGVhciB0byAwYi4KIAkgKi8KIAl2YWwgPSBpbnRlbF9k
ZV9yZWFkKGRldl9wcml2LCBJQ0xfUE9SVF9QQ1NfRFcxX0xOMChwaHkpKTsKLQlpZiAodHlwZSA9
PSBJTlRFTF9PVVRQVVRfSERNSSkKKwlpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRl
LCBJTlRFTF9PVVRQVVRfSERNSSkpCiAJCXZhbCAmPSB+Q09NTU9OX0tFRVBFUl9FTjsKIAllbHNl
CiAJCXZhbCB8PSBDT01NT05fS0VFUEVSX0VOOwpAQCAtMjQxNCw3ICsyNDAzLDcgQEAgc3RhdGlj
IHZvaWQgaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyLAogCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBJQ0xfUE9SVF9UWF9EVzVf
R1JQKHBoeSksIHZhbCk7CiAKIAkvKiA1LiBQcm9ncmFtIHN3aW5nIGFuZCBkZS1lbXBoYXNpcyAq
LwotCWljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0oZGV2X3ByaXYsIGxldmVsLCBwaHksIHR5
cGUsIHJhdGUpOworCWljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0oZW5jb2RlciwgY3J0Y19z
dGF0ZSwgbGV2ZWwpOwogCiAJLyogNi4gU2V0IHRyYWluaW5nIGVuYWJsZSB0byB0cmlnZ2VyIHVw
ZGF0ZSAqLwogCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIElDTF9QT1JUX1RYX0RXNV9M
TjAocGh5KSk7CkBAIC0yNDIzLDIzICsyNDEyLDE2IEBAIHN0YXRpYyB2b2lkIGljbF9jb21ib19w
aHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIH0K
IAogc3RhdGljIHZvaWQgaWNsX21nX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAotCQkJCQkgICBpbnQgbGlua19jbG9jaywgdTMyIGxldmVsLAot
CQkJCQkgICBlbnVtIGludGVsX291dHB1dF90eXBlIHR5cGUpCisJCQkJCSAgIGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCQkgICBpbnQgbGV2ZWwpCiB7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNl
LmRldik7CiAJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRlbF9wb3J0X3RvX3RjKGRldl9wcml2
LCBlbmNvZGVyLT5wb3J0KTsKIAljb25zdCBzdHJ1Y3QgaWNsX21nX3BoeV9kZGlfYnVmX3RyYW5z
ICpkZGlfdHJhbnNsYXRpb25zOwotCXUzMiBuX2VudHJpZXMsIHZhbDsKLQlpbnQgbG4sIHJhdGUg
PSAwOworCWludCBuX2VudHJpZXMsIGxuOworCXUzMiB2YWw7CiAKLQlpZiAodHlwZSAhPSBJTlRF
TF9PVVRQVVRfSERNSSkgewotCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2lu
dGVsX2RwKGVuY29kZXIpOwotCi0JCXJhdGUgPSBpbnRlbF9kcC0+bGlua19yYXRlOwotCX0KLQot
CWRkaV90cmFuc2xhdGlvbnMgPSBpY2xfZ2V0X21nX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwg
cmF0ZSwKLQkJCQkJCSZuX2VudHJpZXMpOworCWRkaV90cmFuc2xhdGlvbnMgPSBpY2xfZ2V0X21n
X2J1Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAkvKiBUaGUgdGFibGUgZG9lcyBu
b3QgaGF2ZSB2YWx1ZXMgZm9yIGxldmVsIDMgYW5kIGxldmVsIDkuICovCiAJaWYgKGxldmVsID49
IG5fZW50cmllcyB8fCBsZXZlbCA9PSAzIHx8IGxldmVsID09IDkpIHsKIAkJZHJtX2RiZ19rbXMo
JmRldl9wcml2LT5kcm0sCkBAIC0yNTA2LDcgKzI0ODgsNyBAQCBzdGF0aWMgdm9pZCBpY2xfbWdf
cGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJ
ICovCiAJZm9yIChsbiA9IDA7IGxuIDwgMjsgbG4rKykgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFk
KGRldl9wcml2LCBNR19DTEtIVUIobG4sIHRjX3BvcnQpKTsKLQkJaWYgKGxpbmtfY2xvY2sgPCAz
MDAwMDApCisJCWlmIChjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrIDwgMzAwMDAwKQogCQkJdmFsIHw9
IENGR19MT1dfUkFURV9MS1JFTl9FTjsKIAkJZWxzZQogCQkJdmFsICY9IH5DRkdfTE9XX1JBVEVf
TEtSRU5fRU47CkBAIC0yNTE3LDcgKzI0OTksNyBAQCBzdGF0aWMgdm9pZCBpY2xfbWdfcGh5X2Rk
aV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZm9yIChs
biA9IDA7IGxuIDwgMjsgbG4rKykgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBN
R19UWDFfRENDKGxuLCB0Y19wb3J0KSk7CiAJCXZhbCAmPSB+Q0ZHX0FNSV9DS19ESVZfT1ZFUlJJ
REVfVkFMX01BU0s7Ci0JCWlmIChsaW5rX2Nsb2NrIDw9IDUwMDAwMCkgeworCQlpZiAoY3J0Y19z
dGF0ZS0+cG9ydF9jbG9jayA8PSA1MDAwMDApIHsKIAkJCXZhbCAmPSB+Q0ZHX0FNSV9DS19ESVZf
T1ZFUlJJREVfRU47CiAJCX0gZWxzZSB7CiAJCQl2YWwgfD0gQ0ZHX0FNSV9DS19ESVZfT1ZFUlJJ
REVfRU4gfApAQCAtMjUyNyw3ICsyNTA5LDcgQEAgc3RhdGljIHZvaWQgaWNsX21nX3BoeV9kZGlf
dnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCiAJCXZhbCA9
IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIE1HX1RYMl9EQ0MobG4sIHRjX3BvcnQpKTsKIAkJdmFs
ICY9IH5DRkdfQU1JX0NLX0RJVl9PVkVSUklERV9WQUxfTUFTSzsKLQkJaWYgKGxpbmtfY2xvY2sg
PD0gNTAwMDAwKSB7CisJCWlmIChjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrIDw9IDUwMDAwMCkgewog
CQkJdmFsICY9IH5DRkdfQU1JX0NLX0RJVl9PVkVSUklERV9FTjsKIAkJfSBlbHNlIHsKIAkJCXZh
bCB8PSBDRkdfQU1JX0NLX0RJVl9PVkVSUklERV9FTiB8CkBAIC0yNTUzLDI4ICsyNTM1LDI4IEBA
IHN0YXRpYyB2b2lkIGljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKIH0KIAogc3RhdGljIHZvaWQgaWNsX2RkaV92c3dpbmdfc2VxdWVu
Y2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCi0JCQkJICAgIGludCBsaW5rX2Nsb2Nr
LAotCQkJCSAgICB1MzIgbGV2ZWwsCi0JCQkJICAgIGVudW0gaW50ZWxfb3V0cHV0X3R5cGUgdHlw
ZSkKKwkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJ
CQkJICAgIGludCBsZXZlbCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0
X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAKIAlpZiAoaW50ZWxfcGh5X2lzX2Nv
bWJvKGRldl9wcml2LCBwaHkpKQotCQlpY2xfY29tYm9fcGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uo
ZW5jb2RlciwgbGV2ZWwsIHR5cGUpOworCQlpY2xfY29tYm9fcGh5X2RkaV92c3dpbmdfc2VxdWVu
Y2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogCWVsc2UKLQkJaWNsX21nX3BoeV9kZGlf
dnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGxpbmtfY2xvY2ssIGxldmVsLAotCQkJCQkgICAgICAg
dHlwZSk7CisJCWljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0
YXRlLCBsZXZlbCk7CiB9CiAKIHN0YXRpYyB2b2lkCi10Z2xfZGtsX3BoeV9kZGlfdnN3aW5nX3Nl
cXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQgbGlua19jbG9jaywKLQkJ
CQl1MzIgbGV2ZWwpCit0Z2xfZGtsX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAorCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlLAorCQkJCWludCBsZXZlbCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAllbnVtIHRjX3BvcnQgdGNf
cG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCWNvbnN0
IHN0cnVjdCB0Z2xfZGtsX3BoeV9kZGlfYnVmX3RyYW5zICpkZGlfdHJhbnNsYXRpb25zOwotCXUz
MiBuX2VudHJpZXMsIHZhbCwgbG4sIGRwY250X21hc2ssIGRwY250X3ZhbDsKKwl1MzIgdmFsLCBk
cGNudF9tYXNrLCBkcGNudF92YWw7CisJaW50IG5fZW50cmllcywgbG47CiAKIAlpZiAoZW5jb2Rl
ci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfSERNSSkgewogCQluX2VudHJpZXMgPSBBUlJBWV9TSVpF
KHRnbF9ka2xfcGh5X2hkbWlfZGRpX3RyYW5zKTsKQEAgLTI2MTgsMjAgKzI2MDAsMjAgQEAgdGds
X2RrbF9waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwgaW50IGxpbmtfY2xvY2ssCiB9CiAKIHN0YXRpYyB2b2lkIHRnbF9kZGlfdnN3aW5nX3NlcXVl
bmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAotCQkJCSAgICBpbnQgbGlua19jbG9j
aywKLQkJCQkgICAgdTMyIGxldmVsLAotCQkJCSAgICBlbnVtIGludGVsX291dHB1dF90eXBlIHR5
cGUpCisJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAor
CQkJCSAgICBpbnQgbGV2ZWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9y
dF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCiAJaWYgKGludGVsX3BoeV9pc19j
b21ibyhkZXZfcHJpdiwgcGh5KSkKLQkJaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNl
KGVuY29kZXIsIGxldmVsLCB0eXBlKTsKKwkJaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVl
bmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAllbHNlCi0JCXRnbF9ka2xfcGh5X2Rk
aV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgbGlua19jbG9jaywgbGV2ZWwpOworCQl0Z2xfZGts
X3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIH0K
IAotc3RhdGljIHUzMiB0cmFuc2xhdGVfc2lnbmFsX2xldmVsKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsIGludCBzaWduYWxfbGV2ZWxzKQorc3RhdGljIGludCB0cmFuc2xhdGVfc2lnbmFsX2xl
dmVsKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICB1OCBzaWduYWxfbGV2ZWxzKQog
ewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7
CiAJaW50IGk7CkBAIC0yNjQ4LDU1ICsyNjMwLDU4IEBAIHN0YXRpYyB1MzIgdHJhbnNsYXRlX3Np
Z25hbF9sZXZlbChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBpbnQgc2lnbmFsX2xldmVscykK
IAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHUzMiBpbnRlbF9kZGlfZHBfbGV2ZWwoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyBpbnQgaW50ZWxfZGRpX2RwX2xldmVsKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJdTggdHJhaW5fc2V0ID0gaW50ZWxfZHAtPnRyYWluX3Nl
dFswXTsKLQlpbnQgc2lnbmFsX2xldmVscyA9IHRyYWluX3NldCAmIChEUF9UUkFJTl9WT0xUQUdF
X1NXSU5HX01BU0sgfAotCQkJCQkgRFBfVFJBSU5fUFJFX0VNUEhBU0lTX01BU0spOworCXU4IHNp
Z25hbF9sZXZlbHMgPSB0cmFpbl9zZXQgJiAoRFBfVFJBSU5fVk9MVEFHRV9TV0lOR19NQVNLIHwK
KwkJCQkJRFBfVFJBSU5fUFJFX0VNUEhBU0lTX01BU0spOwogCiAJcmV0dXJuIHRyYW5zbGF0ZV9z
aWduYWxfbGV2ZWwoaW50ZWxfZHAsIHNpZ25hbF9sZXZlbHMpOwogfQogCiBzdGF0aWMgdm9pZAot
dGdsX3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit0Z2xfc2V0
X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJICAgICAgY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXIgPSAmZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlOwogCWludCBs
ZXZlbCA9IGludGVsX2RkaV9kcF9sZXZlbChpbnRlbF9kcCk7CiAKLQl0Z2xfZGRpX3Zzd2luZ19z
ZXF1ZW5jZShlbmNvZGVyLCBpbnRlbF9kcC0+bGlua19yYXRlLAotCQkJCWxldmVsLCBlbmNvZGVy
LT50eXBlKTsKKwl0Z2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRlLCBs
ZXZlbCk7CiB9CiAKIHN0YXRpYyB2b2lkCi1pY2xfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKK2ljbF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkcF90b19kaWdfcG9y
dChpbnRlbF9kcCktPmJhc2U7CiAJaW50IGxldmVsID0gaW50ZWxfZGRpX2RwX2xldmVsKGludGVs
X2RwKTsKIAotCWljbF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGludGVsX2RwLT5saW5r
X3JhdGUsCi0JCQkJbGV2ZWwsIGVuY29kZXItPnR5cGUpOworCWljbF9kZGlfdnN3aW5nX3NlcXVl
bmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIH0KIAogc3RhdGljIHZvaWQKLWNubF9z
ZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorY25sX3NldF9zaWdu
YWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCSAgICAgIGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyID0gJmRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZTsKIAlpbnQgbGV2ZWwg
PSBpbnRlbF9kZGlfZHBfbGV2ZWwoaW50ZWxfZHApOwogCi0JY25sX2RkaV92c3dpbmdfc2VxdWVu
Y2UoZW5jb2RlciwgbGV2ZWwsIGVuY29kZXItPnR5cGUpOworCWNubF9kZGlfdnN3aW5nX3NlcXVl
bmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIH0KIAogc3RhdGljIHZvaWQKLWJ4dF9z
ZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorYnh0X3NldF9zaWdu
YWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCSAgICAgIGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyID0gJmRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZTsKIAlpbnQgbGV2ZWwg
PSBpbnRlbF9kZGlfZHBfbGV2ZWwoaW50ZWxfZHApOwogCi0JYnh0X2RkaV92c3dpbmdfc2VxdWVu
Y2UoZW5jb2RlciwgbGV2ZWwsIGVuY29kZXItPnR5cGUpOworCWJ4dF9kZGlfdnN3aW5nX3NlcXVl
bmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIH0KIAogc3RhdGljIHZvaWQKLWhzd19z
ZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoraHN3X3NldF9zaWdu
YWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCSAgICAgIGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyID0gJmRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZTsKIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKQEAg
LTI3MTMsNyArMjY5OCw3IEBAIGhzd19zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQogCWludGVsX2RwLT5EUCB8PSBzaWduYWxfbGV2ZWxzOwogCiAJaWYgKElTX0dF
TjlfQkMoZGV2X3ByaXYpKQotCQlza2xfZGRpX3NldF9pYm9vc3QoZW5jb2RlciwgbGV2ZWwsIGVu
Y29kZXItPnR5cGUpOworCQlza2xfZGRpX3NldF9pYm9vc3QoZW5jb2RlciwgY3J0Y19zdGF0ZSwg
bGV2ZWwpOwogCiAJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIERESV9CVUZfQ1RMKHBvcnQpLCBp
bnRlbF9kcC0+RFApOwogCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgRERJX0JVRl9D
VEwocG9ydCkpOwpAQCAtMzEwOCw4ICszMDkzLDkgQEAgc3RhdGljIHZvaWQgdGdsX2RkaV9wcmVf
ZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCWludCBsZXZlbCA9
IGludGVsX2RkaV9kcF9sZXZlbChpbnRlbF9kcCk7CiAJZW51bSB0cmFuc2NvZGVyIHRyYW5zY29k
ZXIgPSBjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcjsKIAotCWludGVsX2RwX3NldF9saW5rX3Bh
cmFtcyhpbnRlbF9kcCwgY3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywKLQkJCQkgY3J0Y19zdGF0ZS0+
bGFuZV9jb3VudCwgaXNfbXN0KTsKKwlpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxfZHAs
CisJCQkJIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssCisJCQkJIGNydGNfc3RhdGUtPmxhbmVfY291
bnQpOwogCiAJaW50ZWxfZHAtPnJlZ3MuZHBfdHBfY3RsID0gVEdMX0RQX1RQX0NUTCh0cmFuc2Nv
ZGVyKTsKIAlpbnRlbF9kcC0+cmVncy5kcF90cF9zdGF0dXMgPSBUR0xfRFBfVFBfU1RBVFVTKHRy
YW5zY29kZXIpOwpAQCAtMzE4MSw4ICszMTY3LDcgQEAgc3RhdGljIHZvaWQgdGdsX2RkaV9wcmVf
ZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCSAqLwogCiAJLyog
Ny5lIENvbmZpZ3VyZSB2b2x0YWdlIHN3aW5nIGFuZCByZWxhdGVkIElPIHNldHRpbmdzICovCi0J
dGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywg
bGV2ZWwsCi0JCQkJZW5jb2Rlci0+dHlwZSk7CisJdGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5j
b2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogCiAJLyoKIAkgKiA3LmYgQ29tYm8gUEhZOiBDb25m
aWd1cmUgUE9SVF9DTF9EVzEwIFN0YXRpYyBQb3dlciBEb3duIHRvIHBvd2VyIHVwCkBAIC0zMjA1
LDcgKzMxOTAsNyBAQCBzdGF0aWMgdm9pZCB0Z2xfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJICogV2Ugb25seSBjb25maWd1cmUgd2hhdCB0aGUg
cmVnaXN0ZXIgdmFsdWUgd2lsbCBiZSBoZXJlLiAgQWN0dWFsCiAJICogZW5hYmxpbmcgaGFwcGVu
cyBkdXJpbmcgbGluayB0cmFpbmluZyBmYXJ0aGVyIGRvd24uCiAJICovCi0JaW50ZWxfZGRpX2lu
aXRfZHBfYnVmX3JlZyhlbmNvZGVyKTsKKwlpbnRlbF9kZGlfaW5pdF9kcF9idWZfcmVnKGVuY29k
ZXIsIGNydGNfc3RhdGUpOwogCiAJaWYgKCFpc19tc3QpCiAJCWludGVsX2RwX3NpbmtfZHBtcyhp
bnRlbF9kcCwgRFJNX01PREVfRFBNU19PTik7CkBAIC0zMjI1LDExICszMjEwLDExIEBAIHN0YXRp
YyB2b2lkIHRnbF9kZGlfcHJlX2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKIAkgKiAgICAgUGF0dGVybiwgd2FpdCBmb3IgNSBpZGxlIHBhdHRlcm5zIChEUF9UUF9T
VEFUVVMgTWluX0lkbGVzX1NlbnQpCiAJICogICAgICh0aW1lb3V0IGFmdGVyIDgwMCB1cykKIAkg
Ki8KLQlpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKGludGVsX2RwKTsKKwlpbnRlbF9kcF9zdGFy
dF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCS8qIDcuayBTZXQgRFBfVFBf
Q1RMIGxpbmsgdHJhaW5pbmcgdG8gTm9ybWFsICovCiAJaWYgKCFpc190cmFuc19wb3J0X3N5bmNf
bW9kZShjcnRjX3N0YXRlKSkKLQkJaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKGludGVsX2RwKTsK
KwkJaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCS8q
IDcubCBDb25maWd1cmUgYW5kIGVuYWJsZSBGRUMgaWYgbmVlZGVkICovCiAJaW50ZWxfZGRpX2Vu
YWJsZV9mZWMoZW5jb2RlciwgY3J0Y19zdGF0ZSk7CkBAIC0zMjU1LDggKzMyNDAsOSBAQCBzdGF0
aWMgdm9pZCBoc3dfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUsCiAJZWxzZQogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgaXNfbXN0ICYmIHBv
cnQgPT0gUE9SVF9BKTsKIAotCWludGVsX2RwX3NldF9saW5rX3BhcmFtcyhpbnRlbF9kcCwgY3J0
Y19zdGF0ZS0+cG9ydF9jbG9jaywKLQkJCQkgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCwgaXNfbXN0
KTsKKwlpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxfZHAsCisJCQkJIGNydGNfc3RhdGUt
PnBvcnRfY2xvY2ssCisJCQkJIGNydGNfc3RhdGUtPmxhbmVfY291bnQpOwogCiAJaW50ZWxfZWRw
X3BhbmVsX29uKGludGVsX2RwKTsKIApAQCAtMzI3MCwxMiArMzI1NiwxMSBAQCBzdGF0aWMgdm9p
ZCBoc3dfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUs
CiAJaWNsX3Byb2dyYW1fbWdfZHBfbW9kZShkaWdfcG9ydCwgY3J0Y19zdGF0ZSk7CiAKIAlpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkKLQkJaWNsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5j
b2RlciwgY3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywKLQkJCQkJbGV2ZWwsIGVuY29kZXItPnR5cGUp
OworCQlpY2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRlLCBsZXZlbCk7
CiAJZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpCi0JCWNubF9kZGlfdnN3aW5nX3Nl
cXVlbmNlKGVuY29kZXIsIGxldmVsLCBlbmNvZGVyLT50eXBlKTsKKwkJY25sX2RkaV92c3dpbmdf
c2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogCWVsc2UgaWYgKElTX0dFTjlf
TFAoZGV2X3ByaXYpKQotCQlieHRfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBsZXZlbCwg
ZW5jb2Rlci0+dHlwZSk7CisJCWJ4dF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNf
c3RhdGUsIGxldmVsKTsKIAllbHNlCiAJCWludGVsX3ByZXBhcmVfZHBfZGRpX2J1ZmZlcnMoZW5j
b2RlciwgY3J0Y19zdGF0ZSk7CiAKQEAgLTMyODgsMTYgKzMyNzMsMTYgQEAgc3RhdGljIHZvaWQg
aHN3X2RkaV9wcmVfZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAog
CQkJCQkgICAgICAgbGFuZV9yZXZlcnNhbCk7CiAJfQogCi0JaW50ZWxfZGRpX2luaXRfZHBfYnVm
X3JlZyhlbmNvZGVyKTsKKwlpbnRlbF9kZGlfaW5pdF9kcF9idWZfcmVnKGVuY29kZXIsIGNydGNf
c3RhdGUpOwogCWlmICghaXNfbXN0KQogCQlpbnRlbF9kcF9zaW5rX2RwbXMoaW50ZWxfZHAsIERS
TV9NT0RFX0RQTVNfT04pOwogCWludGVsX2RwX3Npbmtfc2V0X2RlY29tcHJlc3Npb25fc3RhdGUo
aW50ZWxfZHAsIGNydGNfc3RhdGUsCiAJCQkJCSAgICAgIHRydWUpOwogCWludGVsX2RwX3Npbmtf
c2V0X2ZlY19yZWFkeShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7Ci0JaW50ZWxfZHBfc3RhcnRfbGlu
a190cmFpbihpbnRlbF9kcCk7CisJaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihpbnRlbF9kcCwg
Y3J0Y19zdGF0ZSk7CiAJaWYgKChwb3J0ICE9IFBPUlRfQSB8fCBJTlRFTF9HRU4oZGV2X3ByaXYp
ID49IDkpICYmCiAJICAgICFpc190cmFuc19wb3J0X3N5bmNfbW9kZShjcnRjX3N0YXRlKSkKLQkJ
aW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKGludGVsX2RwKTsKKwkJaW50ZWxfZHBfc3RvcF9saW5r
X3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCWludGVsX2RkaV9lbmFibGVfZmVjKGVu
Y29kZXIsIGNydGNfc3RhdGUpOwogCkBAIC0zMzM3LDcgKzMzMjIsNyBAQCBzdGF0aWMgdm9pZCBp
bnRlbF9kZGlfcHJlX2VuYWJsZV9oZG1pKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRl
LAogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gZW5jX3RvX2Rp
Z19wb3J0KGVuY29kZXIpOwogCXN0cnVjdCBpbnRlbF9oZG1pICppbnRlbF9oZG1pID0gJmludGVs
X2RpZ19wb3J0LT5oZG1pOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwotCWludCBsZXZlbCA9IGludGVsX2RkaV9oZG1pX2xl
dmVsKGVuY29kZXIpOworCWludCBsZXZlbCA9IGludGVsX2RkaV9oZG1pX2xldmVsKGVuY29kZXIs
IGNydGNfc3RhdGUpOwogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZW5j
X3RvX2RpZ19wb3J0KGVuY29kZXIpOwogCiAJaW50ZWxfZHBfZHVhbF9tb2RlX3NldF90bWRzX291
dHB1dChpbnRlbF9oZG1pLCB0cnVlKTsKQEAgLTMzNDgsMjAgKzMzMzMsMTggQEAgc3RhdGljIHZv
aWQgaW50ZWxfZGRpX3ByZV9lbmFibGVfaGRtaShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKIAlpY2xfcHJvZ3JhbV9tZ19kcF9tb2RlKGRpZ19wb3J0LCBjcnRjX3N0YXRlKTsKIAog
CWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKQotCQl0Z2xfZGRpX3Zzd2luZ19zZXF1ZW5j
ZShlbmNvZGVyLCBjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrLAotCQkJCQlsZXZlbCwgSU5URUxfT1VU
UFVUX0hETUkpOworCQl0Z2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRl
LCBsZXZlbCk7CiAJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA9PSAxMSkKLQkJaWNsX2Rk
aV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywKLQkJCQkJ
bGV2ZWwsIElOVEVMX09VVFBVVF9IRE1JKTsKKwkJaWNsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5j
b2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogCWVsc2UgaWYgKElTX0NBTk5PTkxBS0UoZGV2X3By
aXYpKQotCQljbmxfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBsZXZlbCwgSU5URUxfT1VU
UFVUX0hETUkpOworCQljbmxfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRl
LCBsZXZlbCk7CiAJZWxzZSBpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpCi0JCWJ4dF9kZGlfdnN3
aW5nX3NlcXVlbmNlKGVuY29kZXIsIGxldmVsLCBJTlRFTF9PVVRQVVRfSERNSSk7CisJCWJ4dF9k
ZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAllbHNlCiAJ
CWludGVsX3ByZXBhcmVfaGRtaV9kZGlfYnVmZmVycyhlbmNvZGVyLCBsZXZlbCk7CiAKIAlpZiAo
SVNfR0VOOV9CQyhkZXZfcHJpdikpCi0JCXNrbF9kZGlfc2V0X2lib29zdChlbmNvZGVyLCBsZXZl
bCwgSU5URUxfT1VUUFVUX0hETUkpOworCQlza2xfZGRpX3NldF9pYm9vc3QoZW5jb2RlciwgY3J0
Y19zdGF0ZSwgbGV2ZWwpOwogCiAJaW50ZWxfZGRpX2VuYWJsZV9waXBlX2Nsb2NrKGVuY29kZXIs
IGNydGNfc3RhdGUpOwogCkBAIC0zNjQ5LDEyICszNjMyLDE0IEBAIHN0YXRpYyB2b2lkIHRyYW5z
X3BvcnRfc3luY19zdG9wX2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCiAJCSAgICBjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcikKIAkJCWNvbnRpbnVlOwogCi0J
CWludGVsX2RwX3N0b3BfbGlua190cmFpbihlbmNfdG9faW50ZWxfZHAoc2xhdmVfZW5jb2Rlcikp
OworCQlpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oZW5jX3RvX2ludGVsX2RwKHNsYXZlX2VuY29k
ZXIpLAorCQkJCQkgc2xhdmVfY3J0Y19zdGF0ZSk7CiAJfQogCiAJdXNsZWVwX3JhbmdlKDIwMCwg
NDAwKTsKIAotCWludGVsX2RwX3N0b3BfbGlua190cmFpbihlbmNfdG9faW50ZWxfZHAoZW5jb2Rl
cikpOworCWludGVsX2RwX3N0b3BfbGlua190cmFpbihlbmNfdG9faW50ZWxfZHAoZW5jb2Rlciks
CisJCQkJIGNydGNfc3RhdGUpOwogfQogCiBzdGF0aWMgdm9pZCBpbnRlbF9lbmFibGVfZGRpX2Rw
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLApAQCAtMzY2Nyw3ICszNjUyLDcgQEAg
c3RhdGljIHZvaWQgaW50ZWxfZW5hYmxlX2RkaV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSwKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CiAKIAlpZiAocG9ydCA9
PSBQT1JUX0EgJiYgSU5URUxfR0VOKGRldl9wcml2KSA8IDkpCi0JCWludGVsX2RwX3N0b3BfbGlu
a190cmFpbihpbnRlbF9kcCk7CisJCWludGVsX2RwX3N0b3BfbGlua190cmFpbihpbnRlbF9kcCwg
Y3J0Y19zdGF0ZSk7CiAKIAlpbnRlbF9lZHBfYmFja2xpZ2h0X29uKGNydGNfc3RhdGUsIGNvbm5f
c3RhdGUpOwogCWludGVsX3Bzcl9lbmFibGUoaW50ZWxfZHAsIGNydGNfc3RhdGUpOwpAQCAtMzky
Nyw3ICszOTEyLDggQEAgaW50ZWxfZGRpX3ByZV9wbGxfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlLAogCQkJCQkJY3J0Y19zdGF0ZS0+bGFuZV9sYXRfb3B0aW1fbWFzayk7
CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX2RkaV9wcmVwYXJlX2xpbmtfcmV0cmFpbihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHZvaWQgaW50ZWxfZGRpX3ByZXBhcmVfbGlua19y
ZXRyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCSAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3Bv
cnQgKmludGVsX2RpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9CkBAIC0zOTU3LDkgKzM5NDMsOSBAQCBzdGF0aWMg
dm9pZCBpbnRlbF9kZGlfcHJlcGFyZV9saW5rX3JldHJhaW4oc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKIAogCWRwX3RwX2N0bCA9IERQX1RQX0NUTF9FTkFCTEUgfAogCQkgICAgRFBfVFBfQ1RM
X0xJTktfVFJBSU5fUEFUMSB8IERQX1RQX0NUTF9TQ1JBTUJMRV9ESVNBQkxFOwotCWlmIChpbnRl
bF9kcC0+bGlua19tc3QpCisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5U
RUxfT1VUUFVUX0RQX01TVCkpIHsKIAkJZHBfdHBfY3RsIHw9IERQX1RQX0NUTF9NT0RFX01TVDsK
LQllbHNlIHsKKwl9IGVsc2UgewogCQlkcF90cF9jdGwgfD0gRFBfVFBfQ1RMX01PREVfU1NUOwog
CQlpZiAoZHJtX2RwX2VuaGFuY2VkX2ZyYW1lX2NhcChpbnRlbF9kcC0+ZHBjZCkpCiAJCQlkcF90
cF9jdGwgfD0gRFBfVFBfQ1RMX0VOSEFOQ0VEX0ZSQU1FX0VOQUJMRTsKQEAgLTM5NzUsNiArMzk2
MSw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9wcmVwYXJlX2xpbmtfcmV0cmFpbihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogfQogCiBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfc2V0X2xpbmtf
dHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCSAgICAgdTggZHBfdHJhaW5fcGF0KQog
ewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxf
ZHApOwpAQCAtNDAxNCw3ICs0MDAxLDggQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3NldF9saW5r
X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJaW50ZWxfZGVfcG9zdGluZ19yZWFk
KGRldl9wcml2LCBERElfQlVGX0NUTChwb3J0KSk7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX2Rk
aV9zZXRfaWRsZV9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMg
dm9pZCBpbnRlbF9kZGlfc2V0X2lkbGVfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwLAorCQkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQog
ewogCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyID0gJmRwX3RvX2RpZ19wb3J0KGludGVs
X2RwKS0+YmFzZTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1
KGVuY29kZXItPmJhc2UuZGV2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rk
aS5oCmluZGV4IDA3N2U5ZGJiZTM2Ny4uN2EwNmJiOTQyZDIxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmgKQEAgLTQwLDggKzQwLDEwIEBAIHZvaWQgaW50ZWxfZGRp
X3NldF92Y19wYXlsb2FkX2FsbG9jKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQkJCSAgICBib29sIHN0YXRlKTsKIHZvaWQgaW50ZWxfZGRpX2NvbXB1dGVfbWlu
X3ZvbHRhZ2VfbGV2ZWwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJCQkg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwotdTMyIGJ4dF9zaWduYWxfbGV2
ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwotdTMyIGRkaV9zaWduYWxfbGV2ZWxzKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwordTMyIGJ4dF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCisJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlKTsKK3UzMiBkZGlfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSk7CiBpbnQgaW50ZWxfZGRpX3RvZ2dsZV9oZGNwX3NpZ25hbGxpbmcoc3RydWN0IGludGVsX2Vu
Y29kZXIgKmludGVsX2VuY29kZXIsCiAJCQkJICAgICBib29sIGVuYWJsZSk7CiB2b2lkIGljbF9z
YW5pdGl6ZV9lbmNvZGVyX3BsbF9tYXBwaW5nKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5
cGVzLmgKaW5kZXggZTAzODRhZjQ4OWMyLi5iNzE3NzEzNGFjYzMgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC0xMjc0LDcg
KzEyNzQsNiBAQCBzdHJ1Y3QgaW50ZWxfZHAgewogCWludCBsaW5rX3JhdGU7CiAJdTggbGFuZV9j
b3VudDsKIAl1OCBzaW5rX2NvdW50OwotCWJvb2wgbGlua19tc3Q7CiAJYm9vbCBsaW5rX3RyYWlu
ZWQ7CiAJYm9vbCBoYXNfYXVkaW87CiAJYm9vbCByZXNldF9saW5rX3BhcmFtczsKQEAgLTEzNjYs
MTMgKzEzNjUsMTkgQEAgc3RydWN0IGludGVsX2RwIHsKIAlpOTE1X3JlZ190ICgqYXV4X2NoX2Rh
dGFfcmVnKShzdHJ1Y3QgaW50ZWxfZHAgKmRwLCBpbnQgaW5kZXgpOwogCiAJLyogVGhpcyBpcyBj
YWxsZWQgYmVmb3JlIGEgbGluayB0cmFpbmluZyBpcyBzdGFydGVyZCAqLwotCXZvaWQgKCpwcmVw
YXJlX2xpbmtfcmV0cmFpbikoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Ci0Jdm9pZCAoKnNl
dF9saW5rX3RyYWluKShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1OCBkcF90cmFpbl9wYXQp
OwotCXZvaWQgKCpzZXRfaWRsZV9saW5rX3RyYWluKShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KTsKLQl2b2lkICgqc2V0X3NpZ25hbF9sZXZlbHMpKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
OworCXZvaWQgKCpwcmVwYXJlX2xpbmtfcmV0cmFpbikoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKKwkJCQkgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsK
Kwl2b2lkICgqc2V0X2xpbmtfdHJhaW4pKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkg
ICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgICAg
ICAgdTggZHBfdHJhaW5fcGF0KTsKKwl2b2lkICgqc2V0X2lkbGVfbGlua190cmFpbikoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpOworCXZvaWQgKCpzZXRfc2lnbmFsX2xldmVscykoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlKTsKIAogCXU4ICgqcHJlZW1waF9tYXgpKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
OwotCXU4ICgqdm9sdGFnZV9tYXgpKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOworCXU4ICgq
dm9sdGFnZV9tYXgpKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgIGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKIAogCS8qIERpc3BsYXlwb3J0IGNvbXBs
aWFuY2UgdGVzdGluZyAqLwogCXN0cnVjdCBpbnRlbF9kcF9jb21wbGlhbmNlIGNvbXBsaWFuY2U7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKaW5kZXggMWI3ODZkNWFmMzgz
Li41NjJjYjU2MGQ2YzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZHAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMK
QEAgLTI2MjcsMTMgKzI2MjcsMTEgQEAgaW50ZWxfZHBfY29tcHV0ZV9jb25maWcoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiB9CiAKIHZvaWQgaW50ZWxfZHBfc2V0X2xpbmtfcGFyYW1z
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCi0JCQkgICAgICBpbnQgbGlua19yYXRlLCB1OCBs
YW5lX2NvdW50LAotCQkJICAgICAgYm9vbCBsaW5rX21zdCkKKwkJCSAgICAgIGludCBsaW5rX3Jh
dGUsIGludCBsYW5lX2NvdW50KQogewogCWludGVsX2RwLT5saW5rX3RyYWluZWQgPSBmYWxzZTsK
IAlpbnRlbF9kcC0+bGlua19yYXRlID0gbGlua19yYXRlOwogCWludGVsX2RwLT5sYW5lX2NvdW50
ID0gbGFuZV9jb3VudDsKLQlpbnRlbF9kcC0+bGlua19tc3QgPSBsaW5rX21zdDsKIH0KIAogc3Rh
dGljIHZvaWQgaW50ZWxfZHBfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
QEAgLTI2NDUsMTAgKzI2NDMsOSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9wcmVwYXJlKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9f
aW50ZWxfY3J0YyhwaXBlX2NvbmZpZy0+dWFwaS5jcnRjKTsKIAljb25zdCBzdHJ1Y3QgZHJtX2Rp
c3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9ICZwaXBlX2NvbmZpZy0+aHcuYWRqdXN0ZWRfbW9k
ZTsKIAotCWludGVsX2RwX3NldF9saW5rX3BhcmFtcyhpbnRlbF9kcCwgcGlwZV9jb25maWctPnBv
cnRfY2xvY2ssCi0JCQkJIHBpcGVfY29uZmlnLT5sYW5lX2NvdW50LAotCQkJCSBpbnRlbF9jcnRj
X2hhc190eXBlKHBpcGVfY29uZmlnLAotCQkJCQkJICAgICBJTlRFTF9PVVRQVVRfRFBfTVNUKSk7
CisJaW50ZWxfZHBfc2V0X2xpbmtfcGFyYW1zKGludGVsX2RwLAorCQkJCSBwaXBlX2NvbmZpZy0+
cG9ydF9jbG9jaywKKwkJCQkgcGlwZV9jb25maWctPmxhbmVfY291bnQpOwogCiAJLyoKIAkgKiBU
aGVyZSBhcmUgZm91ciBraW5kcyBvZiBEUCByZWdpc3RlcnM6CkBAIC0zNjE5LDYgKzM2MTYsNyBA
QCBzdGF0aWMgdm9pZCBjaHZfcG9zdF9kaXNhYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3Rh
dGUgKnN0YXRlLAogCiBzdGF0aWMgdm9pZAogY3B0X3NldF9saW5rX3RyYWluKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCisJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQkgICB1OCBkcF90cmFpbl9wYXQpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CkBAIC0zNjQ5LDYgKzM2NDcsNyBA
QCBjcHRfc2V0X2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAogc3RhdGlj
IHZvaWQKIGc0eF9zZXRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkg
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgdTggZHBf
dHJhaW5fcGF0KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOwpAQCAtMzY3OCwxMyArMzY3NywxNCBAQCBnNHhfc2V0X2xpbmtfdHJh
aW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfZHBf
ZW5hYmxlX3BvcnQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCQkgY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlKQorCQkJCSBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCS8qIGVuYWJsZSB3aXRoIHBhdHRl
cm4gMSAoYXMgcGVyIHNwZWMpICovCiAKLQlpbnRlbF9kcF9wcm9ncmFtX2xpbmtfdHJhaW5pbmdf
cGF0dGVybihpbnRlbF9kcCwgRFBfVFJBSU5JTkdfUEFUVEVSTl8xKTsKKwlpbnRlbF9kcF9wcm9n
cmFtX2xpbmtfdHJhaW5pbmdfcGF0dGVybihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwKKwkJCQkJICAg
ICAgIERQX1RSQUlOSU5HX1BBVFRFUk5fMSk7CiAKIAkvKgogCSAqIE1hZ2ljIGZvciBWTFYvQ0hW
LiBXZSBfbXVzdF8gZmlyc3Qgc2V0IHVwIHRoZSByZWdpc3RlcgpAQCAtMzY5Myw3ICszNjkzLDcg
QEAgc3RhdGljIHZvaWQgaW50ZWxfZHBfZW5hYmxlX3BvcnQoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwKIAkgKiBmYWlsIHdoZW4gdGhlIHBvd2VyIHNlcXVlbmNlciBpcyBmcmVzaGx5IHVzZWQg
Zm9yIHRoaXMgcG9ydC4KIAkgKi8KIAlpbnRlbF9kcC0+RFAgfD0gRFBfUE9SVF9FTjsKLQlpZiAo
b2xkX2NydGNfc3RhdGUtPmhhc19hdWRpbykKKwlpZiAoY3J0Y19zdGF0ZS0+aGFzX2F1ZGlvKQog
CQlpbnRlbF9kcC0+RFAgfD0gRFBfQVVESU9fT1VUUFVUX0VOQUJMRTsKIAogCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZywgaW50ZWxfZHAtPkRQKTsKQEAgLTM3
MzcsOCArMzczNyw4IEBAIHN0YXRpYyB2b2lkIGludGVsX2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSwKIAl9CiAKIAlpbnRlbF9kcF9zaW5rX2RwbXMoaW50ZWxfZHAs
IERSTV9NT0RFX0RQTVNfT04pOwotCWludGVsX2RwX3N0YXJ0X2xpbmtfdHJhaW4oaW50ZWxfZHAp
OwotCWludGVsX2RwX3N0b3BfbGlua190cmFpbihpbnRlbF9kcCk7CisJaW50ZWxfZHBfc3RhcnRf
bGlua190cmFpbihpbnRlbF9kcCwgcGlwZV9jb25maWcpOworCWludGVsX2RwX3N0b3BfbGlua190
cmFpbihpbnRlbF9kcCwgcGlwZV9jb25maWcpOwogCiAJaWYgKHBpcGVfY29uZmlnLT5oYXNfYXVk
aW8pIHsKIAkJZHJtX2RiZygmZGV2X3ByaXYtPmRybSwgIkVuYWJsaW5nIERQIGF1ZGlvIG9uIHBp
cGUgJWNcbiIsCkBAIC0zOTQ3LDEyICszOTQ3LDE0IEBAIGludGVsX2RwX2dldF9saW5rX3N0YXR1
cyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1OCBsaW5rX3N0YXR1c1tEUF9MSU5LX1NUQVRV
CiAJCQkJRFBfTElOS19TVEFUVVNfU0laRSkgPT0gRFBfTElOS19TVEFUVVNfU0laRTsKIH0KIAot
c3RhdGljIHU4IGludGVsX2RwX3ZvbHRhZ2VfbWF4XzIoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKK3N0YXRpYyB1OCBpbnRlbF9kcF92b2x0YWdlX21heF8yKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsCisJCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQog
ewogCXJldHVybiBEUF9UUkFJTl9WT0xUQUdFX1NXSU5HX0xFVkVMXzI7CiB9CiAKLXN0YXRpYyB1
OCBpbnRlbF9kcF92b2x0YWdlX21heF8zKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0
aWMgdTggaW50ZWxfZHBfdm9sdGFnZV9tYXhfMyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAor
CQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlyZXR1
cm4gRFBfVFJBSU5fVk9MVEFHRV9TV0lOR19MRVZFTF8zOwogfQpAQCAtMzk2Nyw3ICszOTY5LDgg
QEAgc3RhdGljIHU4IGludGVsX2RwX3ByZV9lbXBlbXBoX21heF8zKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApCiAJcmV0dXJuIERQX1RSQUlOX1BSRV9FTVBIX0xFVkVMXzM7CiB9CiAKLXN0YXRp
YyB2b2lkIHZsdl9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQor
c3RhdGljIHZvaWQgdmx2X3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsK
IAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkcF90b19kaWdfcG9ydChpbnRlbF9k
cCktPmJhc2U7CiAJdW5zaWduZWQgbG9uZyBkZW1waF9yZWdfdmFsdWUsIHByZWVtcGhfcmVnX3Zh
bHVlLApAQCAtNDA0NywxMSArNDA1MCwxMyBAQCBzdGF0aWMgdm9pZCB2bHZfc2V0X3NpZ25hbF9s
ZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJcmV0dXJuOwogCX0KIAotCXZsdl9z
ZXRfcGh5X3NpZ25hbF9sZXZlbChlbmNvZGVyLCBkZW1waF9yZWdfdmFsdWUsIHByZWVtcGhfcmVn
X3ZhbHVlLAorCXZsdl9zZXRfcGh5X3NpZ25hbF9sZXZlbChlbmNvZGVyLCBjcnRjX3N0YXRlLAor
CQkJCSBkZW1waF9yZWdfdmFsdWUsIHByZWVtcGhfcmVnX3ZhbHVlLAogCQkJCSB1bmlxdHJhbnNj
YWxlX3JlZ192YWx1ZSwgMCk7CiB9CiAKLXN0YXRpYyB2b2lkIGNodl9zZXRfc2lnbmFsX2xldmVs
cyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHZvaWQgY2h2X3NldF9zaWduYWxf
bGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlciA9ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2U7CiAJdTMyIGRlZW1waF9yZWdf
dmFsdWUsIG1hcmdpbl9yZWdfdmFsdWU7CkBAIC00MTI4LDggKzQxMzMsOSBAQCBzdGF0aWMgdm9p
ZCBjaHZfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJcmV0
dXJuOwogCX0KIAotCWNodl9zZXRfcGh5X3NpZ25hbF9sZXZlbChlbmNvZGVyLCBkZWVtcGhfcmVn
X3ZhbHVlLAotCQkJCSBtYXJnaW5fcmVnX3ZhbHVlLCB1bmlxX3RyYW5zX3NjYWxlKTsKKwljaHZf
c2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgY3J0Y19zdGF0ZSwKKwkJCQkgZGVlbXBoX3Jl
Z192YWx1ZSwgbWFyZ2luX3JlZ192YWx1ZSwKKwkJCQkgdW5pcV90cmFuc19zY2FsZSk7CiB9CiAK
IHN0YXRpYyB1MzIgZzR4X3NpZ25hbF9sZXZlbHModTggdHJhaW5fc2V0KQpAQCAtNDE3MCw3ICs0
MTc2LDggQEAgc3RhdGljIHUzMiBnNHhfc2lnbmFsX2xldmVscyh1OCB0cmFpbl9zZXQpCiB9CiAK
IHN0YXRpYyB2b2lkCi1nNHhfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKK2c0eF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAor
CQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsK
IAl1OCB0cmFpbl9zZXQgPSBpbnRlbF9kcC0+dHJhaW5fc2V0WzBdOwpAQCAtNDIxNyw3ICs0MjI0
LDggQEAgc3RhdGljIHUzMiBzbmJfY3B1X2VkcF9zaWduYWxfbGV2ZWxzKHU4IHRyYWluX3NldCkK
IH0KIAogc3RhdGljIHZvaWQKLXNuYl9jcHVfZWRwX3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCitzbmJfY3B1X2VkcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTggdHJhaW5fc2V0ID0gaW50ZWxfZHAtPnRyYWluX3Nl
dFswXTsKQEAgLTQyNjgsNyArNDI3Niw4IEBAIHN0YXRpYyB1MzIgaXZiX2NwdV9lZHBfc2lnbmFs
X2xldmVscyh1OCB0cmFpbl9zZXQpCiB9CiAKIHN0YXRpYyB2b2lkCi1pdmJfY3B1X2VkcF9zZXRf
c2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoraXZiX2NwdV9lZHBfc2V0
X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCSAgICAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXU4IHRyYWluX3Nl
dCA9IGludGVsX2RwLT50cmFpbl9zZXRbMF07CkBAIC00Mjg2LDcgKzQyOTUsOCBAQCBpdmJfY3B1
X2VkcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWludGVs
X2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgaW50ZWxfZHAtPm91dHB1dF9yZWcpOwogfQogCi12
b2lkIGludGVsX2RwX3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
Cit2b2lkIGludGVsX2RwX3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsCisJCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7
CiAJdTggdHJhaW5fc2V0ID0gaW50ZWxfZHAtPnRyYWluX3NldFswXTsKQEAgLTQzMDAsMTEgKzQz
MTAsMTIgQEAgdm9pZCBpbnRlbF9kcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQogCQkgICAgdHJhaW5fc2V0ICYgRFBfVFJBSU5fTUFYX1BSRV9FTVBIQVNJU19S
RUFDSEVEID8KIAkJICAgICIgKG1heCkiIDogIiIpOwogCi0JaW50ZWxfZHAtPnNldF9zaWduYWxf
bGV2ZWxzKGludGVsX2RwKTsKKwlpbnRlbF9kcC0+c2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHAs
IGNydGNfc3RhdGUpOwogfQogCiB2b2lkCiBpbnRlbF9kcF9wcm9ncmFtX2xpbmtfdHJhaW5pbmdf
cGF0dGVybihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgICAgICBjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgICAgICAgdTggZHBfdHJhaW5f
cGF0KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOwpAQCAtNDMxNSwxMyArNDMyNiwxNCBAQCBpbnRlbF9kcF9wcm9ncmFtX2xpbmtf
dHJhaW5pbmdfcGF0dGVybihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJICAgICJVc2lu
ZyBEUCB0cmFpbmluZyBwYXR0ZXJuIFRQUyVkXG4iLAogCQkJICAgIGRwX3RyYWluX3BhdCAmIHRy
YWluX3BhdF9tYXNrKTsKIAotCWludGVsX2RwLT5zZXRfbGlua190cmFpbihpbnRlbF9kcCwgZHBf
dHJhaW5fcGF0KTsKKwlpbnRlbF9kcC0+c2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3Rh
dGUsIGRwX3RyYWluX3BhdCk7CiB9CiAKLXZvaWQgaW50ZWxfZHBfc2V0X2lkbGVfbGlua190cmFp
bihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQordm9pZCBpbnRlbF9kcF9zZXRfaWRsZV9saW5r
X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlpZiAoaW50ZWxfZHAtPnNldF9pZGxlX2xp
bmtfdHJhaW4pCi0JCWludGVsX2RwLT5zZXRfaWRsZV9saW5rX3RyYWluKGludGVsX2RwKTsKKwkJ
aW50ZWxfZHAtPnNldF9pZGxlX2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUpOwogfQog
CiBzdGF0aWMgdm9pZApAQCAtNTMxMiwyMyArNTMyNCwxNyBAQCBzdGF0aWMgdTggaW50ZWxfZHBf
cHJlcGFyZV9waHl0ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCXJldHVybiBEUF9U
RVNUX05BSzsKIAl9CiAKLQkvKgotCSAqIGxpbmtfbXN0IGlzIHNldCB0byBmYWxzZSB0byBhdm9p
ZCBleGVjdXRpbmcgbXN0IHJlbGF0ZWQgY29kZQotCSAqIGR1cmluZyBjb21wbGlhbmNlIHRlc3Rp
bmcuCi0JICovCi0JaW50ZWxfZHAtPmxpbmtfbXN0ID0gZmFsc2U7Ci0KIAlyZXR1cm4gRFBfVEVT
VF9BQ0s7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX2RwX3BoeV9wYXR0ZXJuX3VwZGF0ZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHZvaWQgaW50ZWxfZHBfcGh5X3BhdHRlcm5f
dXBkYXRlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCWNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9CiAJCQl0b19pOTE1KGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5iYXNl
LmRldik7Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBkcF90
b19kaWdfcG9ydChpbnRlbF9kcCk7CiAJc3RydWN0IGRybV9kcF9waHlfdGVzdF9wYXJhbXMgKmRh
dGEgPQogCQkJJmludGVsX2RwLT5jb21wbGlhbmNlLnRlc3RfZGF0YS5waHl0ZXN0OwotCXN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhpbnRlbF9kaWdfcG9ydC0+YmFzZS5i
YXNlLmNydGMpOworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRj
X3N0YXRlLT51YXBpLmNydGMpOwogCWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKIAl1MzIg
cGF0dGVybl92YWw7CiAKQEAgLTUzODgsNyArNTM5NCw4IEBAIHN0YXRpYyB2b2lkIGludGVsX2Rw
X3BoeV9wYXR0ZXJuX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogfQogCiBzdGF0
aWMgdm9pZAotaW50ZWxfZHBfYXV0b3Rlc3RfcGh5X2RkaV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCitpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2Rpc2FibGUoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0
ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBp
bnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmRldjsKQEAgLTU0MTQsNyArNTQyMSw4IEBAIGludGVs
X2RwX2F1dG90ZXN0X3BoeV9kZGlfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQog
fQogCiBzdGF0aWMgdm9pZAotaW50ZWxfZHBfYXV0b3Rlc3RfcGh5X2RkaV9lbmFibGUoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwgdWludDhfdCBsYW5lX2NudCkKK2ludGVsX2RwX2F1dG90ZXN0
X3BoeV9kZGlfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJIGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9kaWdp
dGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwogCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmRldjsKQEAg
LTU0NDAsNyArNTQ0OCw4IEBAIGludGVsX2RwX2F1dG90ZXN0X3BoeV9kZGlfZW5hYmxlKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHAsIHVpbnQ4X3QgbGFuZV9jbnQpCiAJCSAgICAgICB0cmFuc19k
ZGlfZnVuY19jdGxfdmFsdWUpOwogfQogCi12b2lkIGludGVsX2RwX3Byb2Nlc3NfcGh5X3JlcXVl
c3Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyB2b2lkIGludGVsX2RwX3Byb2Nl
c3NfcGh5X3JlcXVlc3Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkJIGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1fZHBfcGh5
X3Rlc3RfcGFyYW1zICpkYXRhID0KIAkJJmludGVsX2RwLT5jb21wbGlhbmNlLnRlc3RfZGF0YS5w
aHl0ZXN0OwpAQCAtNTQ1MiwyMSArNTQ2MSwyMiBAQCB2b2lkIGludGVsX2RwX3Byb2Nlc3NfcGh5
X3JlcXVlc3Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAl9CiAKIAkvKiByZXRyaWV2ZSB2
c3dpbmcgJiBwcmUtZW1waGFzaXMgc2V0dGluZyAqLwotCWludGVsX2RwX2dldF9hZGp1c3RfdHJh
aW4oaW50ZWxfZHAsIGxpbmtfc3RhdHVzKTsKKwlpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKGlu
dGVsX2RwLCBjcnRjX3N0YXRlLCBsaW5rX3N0YXR1cyk7CiAKLQlpbnRlbF9kcF9hdXRvdGVzdF9w
aHlfZGRpX2Rpc2FibGUoaW50ZWxfZHApOworCWludGVsX2RwX2F1dG90ZXN0X3BoeV9kZGlfZGlz
YWJsZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKLQlpbnRlbF9kcF9zZXRfc2lnbmFsX2xldmVs
cyhpbnRlbF9kcCk7CisJaW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHAsIGNydGNf
c3RhdGUpOwogCi0JaW50ZWxfZHBfcGh5X3BhdHRlcm5fdXBkYXRlKGludGVsX2RwKTsKKwlpbnRl
bF9kcF9waHlfcGF0dGVybl91cGRhdGUoaW50ZWxfZHAsIGNydGNfc3RhdGUpOwogCi0JaW50ZWxf
ZHBfYXV0b3Rlc3RfcGh5X2RkaV9lbmFibGUoaW50ZWxfZHAsIGRhdGEtPm51bV9sYW5lcyk7CisJ
aW50ZWxfZHBfYXV0b3Rlc3RfcGh5X2RkaV9lbmFibGUoaW50ZWxfZHAsIGNydGNfc3RhdGUpOwog
CiAJZHJtX2RwX3NldF9waHlfdGVzdF9wYXR0ZXJuKCZpbnRlbF9kcC0+YXV4LCBkYXRhLAogCQkJ
CSAgICBsaW5rX3N0YXR1c1tEUF9EUENEX1JFVl0pOwogfQogCi1zdGF0aWMgdTggaW50ZWxfZHBf
YXV0b3Rlc3RfcGh5X3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyB1
OCBpbnRlbF9kcF9hdXRvdGVzdF9waHlfcGF0dGVybihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
LAorCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAl1
OCB0ZXN0X3Jlc3VsdDsKIApAQCAtNTQ3NCwxMiArNTQ4NCwxMyBAQCBzdGF0aWMgdTggaW50ZWxf
ZHBfYXV0b3Rlc3RfcGh5X3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlpZiAo
dGVzdF9yZXN1bHQgIT0gRFBfVEVTVF9BQ0spCiAJCURSTV9FUlJPUigiUGh5IHRlc3QgcHJlcGFy
YXRpb24gZmFpbGVkXG4iKTsKIAotCWludGVsX2RwX3Byb2Nlc3NfcGh5X3JlcXVlc3QoaW50ZWxf
ZHApOworCWludGVsX2RwX3Byb2Nlc3NfcGh5X3JlcXVlc3QoaW50ZWxfZHAsIGNydGNfc3RhdGUp
OwogCiAJcmV0dXJuIHRlc3RfcmVzdWx0OwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9kcF9oYW5k
bGVfdGVzdF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMgdm9pZCBp
bnRlbF9kcF9oYW5kbGVfdGVzdF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJ
CQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXU4IHJl
c3BvbnNlID0gRFBfVEVTVF9OQUs7CkBAIC01NTA4LDcgKzU1MTksOSBAQCBzdGF0aWMgdm9pZCBp
bnRlbF9kcF9oYW5kbGVfdGVzdF9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJ
CWJyZWFrOwogCWNhc2UgRFBfVEVTVF9MSU5LX1BIWV9URVNUX1BBVFRFUk46CiAJCWRybV9kYmdf
a21zKCZpOTE1LT5kcm0sICJQSFlfUEFUVEVSTiB0ZXN0IHJlcXVlc3RlZFxuIik7Ci0JCXJlc3Bv
bnNlID0gaW50ZWxfZHBfYXV0b3Rlc3RfcGh5X3BhdHRlcm4oaW50ZWxfZHApOworCQkvKiBGSVhN
RSBzZWUgaW50ZWxfZHBfY2hlY2tfc2VydmljZV9pcnEoKSAqLworCQlpZiAoY3J0Y19zdGF0ZSkK
KwkJCXJlc3BvbnNlID0gaW50ZWxfZHBfYXV0b3Rlc3RfcGh5X3BhdHRlcm4oaW50ZWxfZHAsIGNy
dGNfc3RhdGUpOwogCQlicmVhazsKIAlkZWZhdWx0OgogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJt
LCAiSW52YWxpZCB0ZXN0IHJlcXVlc3QgJyUwMngnXG4iLApAQCAtNTYwMiw2ICs1NjE1LDEwIEBA
IGludGVsX2RwX25lZWRzX2xpbmtfcmV0cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQog
CS8qCiAJICogVmFsaWRhdGUgdGhlIGNhY2hlZCB2YWx1ZXMgb2YgaW50ZWxfZHAtPmxpbmtfcmF0
ZSBhbmQKIAkgKiBpbnRlbF9kcC0+bGFuZV9jb3VudCBiZWZvcmUgYXR0ZW1wdGluZyB0byByZXRy
YWluLgorCSAqCisJICogRklYTUUgd291bGQgYmUgbmljZSB0byB1c2VyIHRoZSBjcnRjIHN0YXRl
IGhlcmUsIGJ1dCBzaW5jZQorCSAqIHdlIG5lZWQgdG8gY2FsbCB0aGlzIGZyb20gdGhlIHNob3J0
IEhQRCBoYW5kbGVyIHRoYXQgc2VlbXMKKwkgKiBhIGJpdCBoYXJkLgogCSAqLwogCWlmICghaW50
ZWxfZHBfbGlua19wYXJhbXNfdmFsaWQoaW50ZWxfZHAsIGludGVsX2RwLT5saW5rX3JhdGUsCiAJ
CQkJCWludGVsX2RwLT5sYW5lX2NvdW50KSkKQEAgLTU3MzUsOCArNTc1MiwyMCBAQCBpbnQgaW50
ZWxfZHBfcmV0cmFpbl9saW5rKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCQkJ
CSAgICAgIGludGVsX2NydGNfcGNoX3RyYW5zY29kZXIoY3J0YyksIGZhbHNlKTsKIAl9CiAKLQlp
bnRlbF9kcF9zdGFydF9saW5rX3RyYWluKGludGVsX2RwKTsKLQlpbnRlbF9kcF9zdG9wX2xpbmtf
dHJhaW4oaW50ZWxfZHApOworCWZvcl9lYWNoX2ludGVsX2NydGNfbWFzaygmZGV2X3ByaXYtPmRy
bSwgY3J0YywgY3J0Y19tYXNrKSB7CisJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlID0KKwkJCXRvX2ludGVsX2NydGNfc3RhdGUoY3J0Yy0+YmFzZS5zdGF0ZSk7CisK
KwkJLyogcmV0cmFpbiBvbiB0aGUgTVNUIG1hc3RlciB0cmFuc2NvZGVyICovCisJCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDEyICYmCisJCSAgICBpbnRlbF9jcnRjX2hhc190eXBlKGNydGNf
c3RhdGUsIElOVEVMX09VVFBVVF9EUF9NU1QpICYmCisJCSAgICBjcnRjX3N0YXRlLT5jcHVfdHJh
bnNjb2RlciAhPSBjcnRjX3N0YXRlLT5tc3RfbWFzdGVyX3RyYW5zY29kZXIpCisJCQljb250aW51
ZTsKKworCQlpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsK
KwkJaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKKwkJYnJl
YWs7CisJfQogCiAJZm9yX2VhY2hfaW50ZWxfY3J0Y19tYXNrKCZkZXZfcHJpdi0+ZHJtLCBjcnRj
LCBjcnRjX21hc2spIHsKIAkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUgPQpAQCAtNTgxOCw4ICs1ODQ3LDE1IEBAIHN0YXRpYyB2b2lkIGludGVsX2RwX2NoZWNrX3Nl
cnZpY2VfaXJxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAKIAlkcm1fZHBfZHBjZF93cml0
ZWIoJmludGVsX2RwLT5hdXgsIERQX0RFVklDRV9TRVJWSUNFX0lSUV9WRUNUT1IsIHZhbCk7CiAK
KwkvKgorCSAqIEZJWE1FIGdldCByaWQgb2YgdGhlIGhhbmQgcm9sbGVkIG1vZGVzZXQgY29kZSBm
cm9tCisJICogdGhlIHBoeSB0ZXN0IGNvZGUgYW5kIGp1c3QgZG8gcHJvcGVyIG1vZGVzZXRzIGlu
c3RlYWQuCisJICogRG9pbmcgbW9kZXNldHMgZnJvbSB0aGUgc2hvcnQgaHBkIGhhbmRsZXIgaXMg
YSB0b3RhbAorCSAqIG5vIG5vIGFueXdheS4gRm9yIG5vdyB0aGlzIHdpbGwgbm90IHdvcmsgc2lu
Y2Ugd2UgZG9uJ3QKKwkgKiBoYXZlIGEgY3J0YyBzdGF0ZS4KKwkgKi8KIAlpZiAodmFsICYgRFBf
QVVUT01BVEVEX1RFU1RfUkVRVUVTVCkKLQkJaW50ZWxfZHBfaGFuZGxlX3Rlc3RfcmVxdWVzdChp
bnRlbF9kcCk7CisJCWludGVsX2RwX2hhbmRsZV90ZXN0X3JlcXVlc3QoaW50ZWxfZHAsIE5VTEwp
OwogCiAJaWYgKHZhbCAmIERQX0NQX0lSUSkKIAkJaW50ZWxfaGRjcF9oYW5kbGVfY3BfaXJxKGlu
dGVsX2RwLT5hdHRhY2hlZF9jb25uZWN0b3IpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcC5oCmluZGV4IGU4Mzc1YTc1YzNlYy4uMjVkNTVjMDZhZjE5IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oCkBAIC00Miw4ICs0Miw3IEBAIGJvb2wgaW50ZWxf
ZHBfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGk5MTVfcmVnX3Qgb3V0
cHV0X3JlZywKIGJvb2wgaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsCiAJCQkgICAgIHN0cnVjdCBpbnRlbF9jb25uZWN0b3Ig
KmludGVsX2Nvbm5lY3Rvcik7CiB2b2lkIGludGVsX2RwX3NldF9saW5rX3BhcmFtcyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAotCQkJICAgICAgaW50IGxpbmtfcmF0ZSwgdTggbGFuZV9jb3Vu
dCwKLQkJCSAgICAgIGJvb2wgbGlua19tc3QpOworCQkJICAgICAgaW50IGxpbmtfcmF0ZSwgaW50
IGxhbmVfY291bnQpOwogaW50IGludGVsX2RwX2dldF9saW5rX3RyYWluX2ZhbGxiYWNrX3ZhbHVl
cyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJCQkgICAgaW50IGxpbmtfcmF0ZSwgdTgg
bGFuZV9jb3VudCk7CiBpbnQgaW50ZWxfZHBfcmV0cmFpbl9saW5rKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyLApAQCAtODcsMTAgKzg2LDEzIEBAIHZvaWQgaW50ZWxfZWRwX2RycnNfZmx1
c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCiB2b2lkCiBpbnRlbF9kcF9w
cm9ncmFtX2xpbmtfdHJhaW5pbmdfcGF0dGVybihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAor
CQkJCSAgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJ
CQkgICAgICAgdTggZHBfdHJhaW5fcGF0KTsKIHZvaWQKLWludGVsX2RwX3NldF9zaWduYWxfbGV2
ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwotdm9pZCBpbnRlbF9kcF9zZXRfaWRsZV9s
aW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOworaW50ZWxfZHBfc2V0X3NpZ25h
bF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCSAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKK3ZvaWQgaW50ZWxfZHBfc2V0X2lkbGVfbGlu
a190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwogdm9pZCBpbnRlbF9kcF9jb21wdXRlX3JhdGUo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgaW50IHBvcnRfY2xvY2ssCiAJCQkgICB1OCAqbGlu
a19idywgdTggKnJhdGVfc2VsZWN0KTsKIGJvb2wgaW50ZWxfZHBfc291cmNlX3N1cHBvcnRzX2hi
cjIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CkBAIC0xMTQsNyArMTE2LDYgQEAgdm9pZCBp
bnRlbF9kcF9zZXRfaW5mb2ZyYW1lcyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgYm9v
bCBlbmFibGUsCiAJCQkgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAogCQkJICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0
ZSk7CiBib29sIGludGVsX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIpOwotdm9pZCBpbnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApOwogCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBpbnRlbF9k
cF91bnVzZWRfbGFuZV9tYXNrKGludCBsYW5lX2NvdW50KQogewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX2xpbmtfdHJhaW5pbmcuYwppbmRleCAyNDkz
MTQyYTcwZTkuLjFiMDU5NTcxNTM4MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmMKQEAgLTQ5LDggKzQ5LDEwIEBAIHN0
YXRpYyB1OCBkcF92b2x0YWdlX21heCh1OCBwcmVlbXBoKQogCX0KIH0KIAotdm9pZCBpbnRlbF9k
cF9nZXRfYWRqdXN0X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCi0JCQkgICAgICAg
Y29uc3QgdTggbGlua19zdGF0dXNbRFBfTElOS19TVEFUVVNfU0laRV0pCit2b2lkCitpbnRlbF9k
cF9nZXRfYWRqdXN0X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgIGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJICBjb25zdCB1OCBsaW5r
X3N0YXR1c1tEUF9MSU5LX1NUQVRVU19TSVpFXSkKIHsKIAl1OCB2ID0gMDsKIAl1OCBwID0gMDsK
QEAgLTU4LDcgKzYwLDcgQEAgdm9pZCBpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCiAJdTggdm9sdGFnZV9tYXg7CiAJdTggcHJlZW1waF9tYXg7CiAK
LQlmb3IgKGxhbmUgPSAwOyBsYW5lIDwgaW50ZWxfZHAtPmxhbmVfY291bnQ7IGxhbmUrKykgewor
CWZvciAobGFuZSA9IDA7IGxhbmUgPCBjcnRjX3N0YXRlLT5sYW5lX2NvdW50OyBsYW5lKyspIHsK
IAkJdiA9IG1heCh2LCBkcm1fZHBfZ2V0X2FkanVzdF9yZXF1ZXN0X3ZvbHRhZ2UobGlua19zdGF0
dXMsIGxhbmUpKTsKIAkJcCA9IG1heChwLCBkcm1fZHBfZ2V0X2FkanVzdF9yZXF1ZXN0X3ByZV9l
bXBoYXNpcyhsaW5rX3N0YXR1cywgbGFuZSkpOwogCX0KQEAgLTY5LDcgKzcxLDcgQEAgdm9pZCBp
bnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAl2
ID0gbWluKHYsIGRwX3ZvbHRhZ2VfbWF4KHApKTsKIAotCXZvbHRhZ2VfbWF4ID0gaW50ZWxfZHAt
PnZvbHRhZ2VfbWF4KGludGVsX2RwKTsKKwl2b2x0YWdlX21heCA9IGludGVsX2RwLT52b2x0YWdl
X21heChpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAJaWYgKHYgPj0gdm9sdGFnZV9tYXgpCiAJCXYg
PSB2b2x0YWdlX21heCB8IERQX1RSQUlOX01BWF9TV0lOR19SRUFDSEVEOwogCkBAIC03OSwxMiAr
ODEsMTQgQEAgdm9pZCBpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsCiAKIHN0YXRpYyBib29sCiBpbnRlbF9kcF9zZXRfbGlua190cmFpbihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAorCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCiAJCQl1OCBkcF90cmFpbl9wYXQpCiB7CiAJdTggYnVmW3NpemVvZihpbnRlbF9k
cC0+dHJhaW5fc2V0KSArIDFdOwogCWludCByZXQsIGxlbjsKIAotCWludGVsX2RwX3Byb2dyYW1f
bGlua190cmFpbmluZ19wYXR0ZXJuKGludGVsX2RwLCBkcF90cmFpbl9wYXQpOworCWludGVsX2Rw
X3Byb2dyYW1fbGlua190cmFpbmluZ19wYXR0ZXJuKGludGVsX2RwLCBjcnRjX3N0YXRlLAorCQkJ
CQkgICAgICAgZHBfdHJhaW5fcGF0KTsKIAogCWJ1ZlswXSA9IGRwX3RyYWluX3BhdDsKIAlpZiAo
KGRwX3RyYWluX3BhdCAmIERQX1RSQUlOSU5HX1BBVFRFUk5fTUFTSykgPT0KQEAgLTkzLDggKzk3
LDggQEAgaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
IAkJbGVuID0gMTsKIAl9IGVsc2UgewogCQkvKiBEUF9UUkFJTklOR19MQU5FeF9TRVQgZm9sbG93
IERQX1RSQUlOSU5HX1BBVFRFUk5fU0VUICovCi0JCW1lbWNweShidWYgKyAxLCBpbnRlbF9kcC0+
dHJhaW5fc2V0LCBpbnRlbF9kcC0+bGFuZV9jb3VudCk7Ci0JCWxlbiA9IGludGVsX2RwLT5sYW5l
X2NvdW50ICsgMTsKKwkJbWVtY3B5KGJ1ZiArIDEsIGludGVsX2RwLT50cmFpbl9zZXQsIGNydGNf
c3RhdGUtPmxhbmVfY291bnQpOworCQlsZW4gPSBjcnRjX3N0YXRlLT5sYW5lX2NvdW50ICsgMTsK
IAl9CiAKIAlyZXQgPSBkcm1fZHBfZHBjZF93cml0ZSgmaW50ZWxfZHAtPmF1eCwgRFBfVFJBSU5J
TkdfUEFUVEVSTl9TRVQsCkBAIC0xMDUsMzEgKzEwOSwzNCBAQCBpbnRlbF9kcF9zZXRfbGlua190
cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCiBzdGF0aWMgYm9vbAogaW50ZWxfZHBf
cmVzZXRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJdTggZHBfdHJh
aW5fcGF0KQorCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
KwkJCSAgdTggZHBfdHJhaW5fcGF0KQogewogCW1lbXNldChpbnRlbF9kcC0+dHJhaW5fc2V0LCAw
LCBzaXplb2YoaW50ZWxfZHAtPnRyYWluX3NldCkpOwotCWludGVsX2RwX3NldF9zaWduYWxfbGV2
ZWxzKGludGVsX2RwKTsKLQlyZXR1cm4gaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAs
IGRwX3RyYWluX3BhdCk7CisJaW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHAsIGNy
dGNfc3RhdGUpOworCXJldHVybiBpbnRlbF9kcF9zZXRfbGlua190cmFpbihpbnRlbF9kcCwgY3J0
Y19zdGF0ZSwgZHBfdHJhaW5fcGF0KTsKIH0KIAogc3RhdGljIGJvb2wKLWludGVsX2RwX3VwZGF0
ZV9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitpbnRlbF9kcF91cGRhdGVf
bGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJaW50IHJldDsKIAotCWludGVsX2Rw
X3NldF9zaWduYWxfbGV2ZWxzKGludGVsX2RwKTsKKwlpbnRlbF9kcF9zZXRfc2lnbmFsX2xldmVs
cyhpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKIAlyZXQgPSBkcm1fZHBfZHBjZF93cml0ZSgmaW50
ZWxfZHAtPmF1eCwgRFBfVFJBSU5JTkdfTEFORTBfU0VULAotCQkJCWludGVsX2RwLT50cmFpbl9z
ZXQsIGludGVsX2RwLT5sYW5lX2NvdW50KTsKKwkJCQlpbnRlbF9kcC0+dHJhaW5fc2V0LCBjcnRj
X3N0YXRlLT5sYW5lX2NvdW50KTsKIAotCXJldHVybiByZXQgPT0gaW50ZWxfZHAtPmxhbmVfY291
bnQ7CisJcmV0dXJuIHJldCA9PSBjcnRjX3N0YXRlLT5sYW5lX2NvdW50OwogfQogCi1zdGF0aWMg
Ym9vbCBpbnRlbF9kcF9saW5rX21heF92c3dpbmdfcmVhY2hlZChzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQorc3RhdGljIGJvb2wgaW50ZWxfZHBfbGlua19tYXhfdnN3aW5nX3JlYWNoZWQoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlpbnQgbGFuZTsKIAotCWZvciAobGFuZSA9IDA7IGxh
bmUgPCBpbnRlbF9kcC0+bGFuZV9jb3VudDsgbGFuZSsrKQorCWZvciAobGFuZSA9IDA7IGxhbmUg
PCBjcnRjX3N0YXRlLT5sYW5lX2NvdW50OyBsYW5lKyspCiAJCWlmICgoaW50ZWxfZHAtPnRyYWlu
X3NldFtsYW5lXSAmCiAJCSAgICAgRFBfVFJBSU5fTUFYX1NXSU5HX1JFQUNIRUQpID09IDApCiAJ
CQlyZXR1cm4gZmFsc2U7CkBAIC0xMzksNyArMTQ2LDggQEAgc3RhdGljIGJvb2wgaW50ZWxfZHBf
bGlua19tYXhfdnN3aW5nX3JlYWNoZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogLyog
RW5hYmxlIGNvcnJlc3BvbmRpbmcgcG9ydCBhbmQgc3RhcnQgdHJhaW5pbmcgcGF0dGVybiAxICov
CiBzdGF0aWMgYm9vbAotaW50ZWxfZHBfbGlua190cmFpbmluZ19jbG9ja19yZWNvdmVyeShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoraW50ZWxfZHBfbGlua190cmFpbmluZ19jbG9ja19yZWNv
dmVyeShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgICAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTggdm9sdGFnZTsKQEAgLTE0OSw5ICsx
NTcsOSBAQCBpbnRlbF9kcF9saW5rX3RyYWluaW5nX2Nsb2NrX3JlY292ZXJ5KHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCiAJdTggbGlua19idywgcmF0ZV9zZWxlY3Q7CiAKIAlpZiAoaW50ZWxf
ZHAtPnByZXBhcmVfbGlua19yZXRyYWluKQotCQlpbnRlbF9kcC0+cHJlcGFyZV9saW5rX3JldHJh
aW4oaW50ZWxfZHApOworCQlpbnRlbF9kcC0+cHJlcGFyZV9saW5rX3JldHJhaW4oaW50ZWxfZHAs
IGNydGNfc3RhdGUpOwogCi0JaW50ZWxfZHBfY29tcHV0ZV9yYXRlKGludGVsX2RwLCBpbnRlbF9k
cC0+bGlua19yYXRlLAorCWludGVsX2RwX2NvbXB1dGVfcmF0ZShpbnRlbF9kcCwgY3J0Y19zdGF0
ZS0+cG9ydF9jbG9jaywKIAkJCSAgICAgICZsaW5rX2J3LCAmcmF0ZV9zZWxlY3QpOwogCiAJaWYg
KGxpbmtfYncpCkBAIC0xNjMsNyArMTcxLDcgQEAgaW50ZWxfZHBfbGlua190cmFpbmluZ19jbG9j
a19yZWNvdmVyeShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCiAJLyogV3JpdGUgdGhlIGxp
bmsgY29uZmlndXJhdGlvbiBkYXRhICovCiAJbGlua19jb25maWdbMF0gPSBsaW5rX2J3OwotCWxp
bmtfY29uZmlnWzFdID0gaW50ZWxfZHAtPmxhbmVfY291bnQ7CisJbGlua19jb25maWdbMV0gPSBj
cnRjX3N0YXRlLT5sYW5lX2NvdW50OwogCWlmIChkcm1fZHBfZW5oYW5jZWRfZnJhbWVfY2FwKGlu
dGVsX2RwLT5kcGNkKSkKIAkJbGlua19jb25maWdbMV0gfD0gRFBfTEFORV9DT1VOVF9FTkhBTkNF
RF9GUkFNRV9FTjsKIAlkcm1fZHBfZHBjZF93cml0ZSgmaW50ZWxfZHAtPmF1eCwgRFBfTElOS19C
V19TRVQsIGxpbmtfY29uZmlnLCAyKTsKQEAgLTE4MCw3ICsxODgsNyBAQCBpbnRlbF9kcF9saW5r
X3RyYWluaW5nX2Nsb2NrX3JlY292ZXJ5KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaW50
ZWxfZHAtPkRQIHw9IERQX1BPUlRfRU47CiAKIAkvKiBjbG9jayByZWNvdmVyeSAqLwotCWlmICgh
aW50ZWxfZHBfcmVzZXRfbGlua190cmFpbihpbnRlbF9kcCwKKwlpZiAoIWludGVsX2RwX3Jlc2V0
X2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUsCiAJCQkJICAgICAgIERQX1RSQUlOSU5H
X1BBVFRFUk5fMSB8CiAJCQkJICAgICAgIERQX0xJTktfU0NSQU1CTElOR19ESVNBQkxFKSkgewog
CQlkcm1fZXJyKCZpOTE1LT5kcm0sICJmYWlsZWQgdG8gZW5hYmxlIGxpbmsgdHJhaW5pbmdcbiIp
OwpAQCAtMjExLDcgKzIxOSw3IEBAIGludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zl
cnkoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJCXJldHVybiBmYWxzZTsKIAkJfQogCi0J
CWlmIChkcm1fZHBfY2xvY2tfcmVjb3Zlcnlfb2sobGlua19zdGF0dXMsIGludGVsX2RwLT5sYW5l
X2NvdW50KSkgeworCQlpZiAoZHJtX2RwX2Nsb2NrX3JlY292ZXJ5X29rKGxpbmtfc3RhdHVzLCBj
cnRjX3N0YXRlLT5sYW5lX2NvdW50KSkgewogCQkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgImNs
b2NrIHJlY292ZXJ5IE9LXG4iKTsKIAkJCXJldHVybiB0cnVlOwogCQl9CkBAIC0yMzAsOCArMjM4
LDggQEAgaW50ZWxfZHBfbGlua190cmFpbmluZ19jbG9ja19yZWNvdmVyeShzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogCQl2b2x0YWdlID0gaW50ZWxfZHAtPnRyYWluX3NldFswXSAmIERQX1RS
QUlOX1ZPTFRBR0VfU1dJTkdfTUFTSzsKIAogCQkvKiBVcGRhdGUgdHJhaW5pbmcgc2V0IGFzIHJl
cXVlc3RlZCBieSB0YXJnZXQgKi8KLQkJaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihpbnRlbF9k
cCwgbGlua19zdGF0dXMpOwotCQlpZiAoIWludGVsX2RwX3VwZGF0ZV9saW5rX3RyYWluKGludGVs
X2RwKSkgeworCQlpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRl
LCBsaW5rX3N0YXR1cyk7CisJCWlmICghaW50ZWxfZHBfdXBkYXRlX2xpbmtfdHJhaW4oaW50ZWxf
ZHAsIGNydGNfc3RhdGUpKSB7CiAJCQlkcm1fZXJyKCZpOTE1LT5kcm0sCiAJCQkJImZhaWxlZCB0
byB1cGRhdGUgbGluayB0cmFpbmluZ1xuIik7CiAJCQlyZXR1cm4gZmFsc2U7CkBAIC0yNDMsNyAr
MjUxLDcgQEAgaW50ZWxfZHBfbGlua190cmFpbmluZ19jbG9ja19yZWNvdmVyeShzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQogCQllbHNlCiAJCQl2b2x0YWdlX3RyaWVzID0gMTsKIAotCQlpZiAo
aW50ZWxfZHBfbGlua19tYXhfdnN3aW5nX3JlYWNoZWQoaW50ZWxfZHApKQorCQlpZiAoaW50ZWxf
ZHBfbGlua19tYXhfdnN3aW5nX3JlYWNoZWQoaW50ZWxfZHAsIGNydGNfc3RhdGUpKQogCQkJbWF4
X3Zzd2luZ19yZWFjaGVkID0gdHJ1ZTsKIAogCX0KQEAgLTI1Nyw3ICsyNjUsOCBAQCBpbnRlbF9k
cF9saW5rX3RyYWluaW5nX2Nsb2NrX3JlY292ZXJ5KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
CiAgKiBvciBmb3IgMS40IGRldmljZXMgdGhhdCBzdXBwb3J0IGl0LCB0cmFpbmluZyBQYXR0ZXJu
IDMgZm9yIEhCUjIKICAqIG9yIDEuMiBkZXZpY2VzIHRoYXQgc3VwcG9ydCBpdCwgVHJhaW5pbmcg
UGF0dGVybiAyIG90aGVyd2lzZS4KICAqLwotc3RhdGljIHUzMiBpbnRlbF9kcF90cmFpbmluZ19w
YXR0ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMgdTMyIGludGVsX2RwX3Ry
YWluaW5nX3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCWJvb2wgc291cmNlX3Rw
czMsIHNpbmtfdHBzMywgc291cmNlX3RwczQsIHNpbmtfdHBzNDsKIApAQCAtMjcxLDcgKzI4MCw3
IEBAIHN0YXRpYyB1MzIgaW50ZWxfZHBfdHJhaW5pbmdfcGF0dGVybihzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQogCXNpbmtfdHBzNCA9IGRybV9kcF90cHM0X3N1cHBvcnRlZChpbnRlbF9kcC0+
ZHBjZCk7CiAJaWYgKHNvdXJjZV90cHM0ICYmIHNpbmtfdHBzNCkgewogCQlyZXR1cm4gRFBfVFJB
SU5JTkdfUEFUVEVSTl80OwotCX0gZWxzZSBpZiAoaW50ZWxfZHAtPmxpbmtfcmF0ZSA9PSA4MTAw
MDApIHsKKwl9IGVsc2UgaWYgKGNydGNfc3RhdGUtPnBvcnRfY2xvY2sgPT0gODEwMDAwKSB7CiAJ
CWlmICghc291cmNlX3RwczQpCiAJCQlkcm1fZGJnX2ttcygmZHBfdG9faTkxNShpbnRlbF9kcCkt
PmRybSwKIAkJCQkgICAgIjguMSBHYnBzIGxpbmsgcmF0ZSB3aXRob3V0IHNvdXJjZSBIQlIzL1RQ
UzQgc3VwcG9ydFxuIik7CkBAIC0yODgsNyArMjk3LDcgQEAgc3RhdGljIHUzMiBpbnRlbF9kcF90
cmFpbmluZ19wYXR0ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJc2lua190cHMzID0g
ZHJtX2RwX3RwczNfc3VwcG9ydGVkKGludGVsX2RwLT5kcGNkKTsKIAlpZiAoc291cmNlX3RwczMg
JiYgc2lua190cHMzKSB7CiAJCXJldHVybiAgRFBfVFJBSU5JTkdfUEFUVEVSTl8zOwotCX0gZWxz
ZSBpZiAoaW50ZWxfZHAtPmxpbmtfcmF0ZSA+PSA1NDAwMDApIHsKKwl9IGVsc2UgaWYgKGNydGNf
c3RhdGUtPnBvcnRfY2xvY2sgPj0gNTQwMDAwKSB7CiAJCWlmICghc291cmNlX3RwczMpCiAJCQlk
cm1fZGJnX2ttcygmZHBfdG9faTkxNShpbnRlbF9kcCktPmRybSwKIAkJCQkgICAgIj49NS40LzYu
NDggR2JwcyBsaW5rIHJhdGUgd2l0aG91dCBzb3VyY2UgSEJSMi9UUFMzIHN1cHBvcnRcbiIpOwpA
QCAtMzAxLDcgKzMxMCw4IEBAIHN0YXRpYyB1MzIgaW50ZWxfZHBfdHJhaW5pbmdfcGF0dGVybihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogfQogCiBzdGF0aWMgYm9vbAotaW50ZWxfZHBfbGlu
a190cmFpbmluZ19jaGFubmVsX2VxdWFsaXphdGlvbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQoraW50ZWxfZHBfbGlua190cmFpbmluZ19jaGFubmVsX2VxdWFsaXphdGlvbihzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAorCQkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBkcF90b19p
OTE1KGludGVsX2RwKTsKIAlpbnQgdHJpZXM7CkBAIC0zMDksMTMgKzMxOSwxMyBAQCBpbnRlbF9k
cF9saW5rX3RyYWluaW5nX2NoYW5uZWxfZXF1YWxpemF0aW9uKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCiAJdTggbGlua19zdGF0dXNbRFBfTElOS19TVEFUVVNfU0laRV07CiAJYm9vbCBjaGFu
bmVsX2VxID0gZmFsc2U7CiAKLQl0cmFpbmluZ19wYXR0ZXJuID0gaW50ZWxfZHBfdHJhaW5pbmdf
cGF0dGVybihpbnRlbF9kcCk7CisJdHJhaW5pbmdfcGF0dGVybiA9IGludGVsX2RwX3RyYWluaW5n
X3BhdHRlcm4oaW50ZWxfZHAsIGNydGNfc3RhdGUpOwogCS8qIFNjcmFtYmxpbmcgaXMgZGlzYWJs
ZWQgZm9yIFRQUzIvMyBhbmQgZW5hYmxlZCBmb3IgVFBTNCAqLwogCWlmICh0cmFpbmluZ19wYXR0
ZXJuICE9IERQX1RSQUlOSU5HX1BBVFRFUk5fNCkKIAkJdHJhaW5pbmdfcGF0dGVybiB8PSBEUF9M
SU5LX1NDUkFNQkxJTkdfRElTQUJMRTsKIAogCS8qIGNoYW5uZWwgZXF1YWxpemF0aW9uICovCi0J
aWYgKCFpbnRlbF9kcF9zZXRfbGlua190cmFpbihpbnRlbF9kcCwKKwlpZiAoIWludGVsX2RwX3Nl
dF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlLAogCQkJCSAgICAgdHJhaW5pbmdfcGF0
dGVybikpIHsKIAkJZHJtX2VycigmaTkxNS0+ZHJtLCAiZmFpbGVkIHRvIHN0YXJ0IGNoYW5uZWwg
ZXF1YWxpemF0aW9uXG4iKTsKIAkJcmV0dXJuIGZhbHNlOwpAQCAtMzMyLDcgKzM0Miw3IEBAIGlu
dGVsX2RwX2xpbmtfdHJhaW5pbmdfY2hhbm5lbF9lcXVhbGl6YXRpb24oc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIAogCQkvKiBNYWtlIHN1cmUgY2xvY2sgaXMgc3RpbGwgb2sgKi8KIAkJaWYg
KCFkcm1fZHBfY2xvY2tfcmVjb3Zlcnlfb2sobGlua19zdGF0dXMsCi0JCQkJCSAgICAgIGludGVs
X2RwLT5sYW5lX2NvdW50KSkgeworCQkJCQkgICAgICBjcnRjX3N0YXRlLT5sYW5lX2NvdW50KSkg
ewogCQkJaW50ZWxfZHBfZHVtcF9saW5rX3N0YXR1cyhsaW5rX3N0YXR1cyk7CiAJCQlkcm1fZGJn
X2ttcygmaTkxNS0+ZHJtLAogCQkJCSAgICAiQ2xvY2sgcmVjb3ZlcnkgY2hlY2sgZmFpbGVkLCBj
YW5ub3QgIgpAQCAtMzQxLDcgKzM1MSw3IEBAIGludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2hhbm5l
bF9lcXVhbGl6YXRpb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJfQogCiAJCWlmIChk
cm1fZHBfY2hhbm5lbF9lcV9vayhsaW5rX3N0YXR1cywKLQkJCQkJIGludGVsX2RwLT5sYW5lX2Nv
dW50KSkgeworCQkJCQkgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCkpIHsKIAkJCWNoYW5uZWxfZXEg
PSB0cnVlOwogCQkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIkNoYW5uZWwgRVEgZG9uZS4gRFAg
VHJhaW5pbmcgIgogCQkJCSAgICAic3VjY2Vzc2Z1bFxuIik7CkBAIC0zNDksOCArMzU5LDggQEAg
aW50ZWxfZHBfbGlua190cmFpbmluZ19jaGFubmVsX2VxdWFsaXphdGlvbihzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogCQl9CiAKIAkJLyogVXBkYXRlIHRyYWluaW5nIHNldCBhcyByZXF1ZXN0
ZWQgYnkgdGFyZ2V0ICovCi0JCWludGVsX2RwX2dldF9hZGp1c3RfdHJhaW4oaW50ZWxfZHAsIGxp
bmtfc3RhdHVzKTsKLQkJaWYgKCFpbnRlbF9kcF91cGRhdGVfbGlua190cmFpbihpbnRlbF9kcCkp
IHsKKwkJaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgbGlu
a19zdGF0dXMpOworCQlpZiAoIWludGVsX2RwX3VwZGF0ZV9saW5rX3RyYWluKGludGVsX2RwLCBj
cnRjX3N0YXRlKSkgewogCQkJZHJtX2VycigmaTkxNS0+ZHJtLAogCQkJCSJmYWlsZWQgdG8gdXBk
YXRlIGxpbmsgdHJhaW5pbmdcbiIpOwogCQkJYnJlYWs7CkBAIC0zNjQsMzUgKzM3NCwzNyBAQCBp
bnRlbF9kcF9saW5rX3RyYWluaW5nX2NoYW5uZWxfZXF1YWxpemF0aW9uKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAJCQkgICAgIkNoYW5uZWwgZXF1YWxpemF0aW9uIGZhaWxlZCA1IHRpbWVz
XG4iKTsKIAl9CiAKLQlpbnRlbF9kcF9zZXRfaWRsZV9saW5rX3RyYWluKGludGVsX2RwKTsKKwlp
bnRlbF9kcF9zZXRfaWRsZV9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCXJl
dHVybiBjaGFubmVsX2VxOwogCiB9CiAKLXZvaWQgaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit2b2lkIGludGVsX2RwX3N0b3BfbGlua190cmFpbihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJaW50ZWxfZHAtPmxpbmtfdHJhaW5lZCA9IHRydWU7
CiAKLQlpbnRlbF9kcF9zZXRfbGlua190cmFpbihpbnRlbF9kcCwKKwlpbnRlbF9kcF9zZXRfbGlu
a190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwKIAkJCQlEUF9UUkFJTklOR19QQVRURVJOX0RJ
U0FCTEUpOwogfQogCiB2b2lkCi1pbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCitpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCisJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogewogCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmludGVsX2Nvbm5lY3RvciA9IGludGVs
X2RwLT5hdHRhY2hlZF9jb25uZWN0b3I7CiAKLQlpZiAoIWludGVsX2RwX2xpbmtfdHJhaW5pbmdf
Y2xvY2tfcmVjb3ZlcnkoaW50ZWxfZHApKQorCWlmICghaW50ZWxfZHBfbGlua190cmFpbmluZ19j
bG9ja19yZWNvdmVyeShpbnRlbF9kcCwgY3J0Y19zdGF0ZSkpCiAJCWdvdG8gZmFpbHVyZV9oYW5k
bGluZzsKLQlpZiAoIWludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2hhbm5lbF9lcXVhbGl6YXRpb24o
aW50ZWxfZHApKQorCWlmICghaW50ZWxfZHBfbGlua190cmFpbmluZ19jaGFubmVsX2VxdWFsaXph
dGlvbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSkpCiAJCWdvdG8gZmFpbHVyZV9oYW5kbGluZzsKIAog
CWRybV9kYmdfa21zKCZkcF90b19pOTE1KGludGVsX2RwKS0+ZHJtLAogCQkgICAgIltDT05ORUNU
T1I6JWQ6JXNdIExpbmsgVHJhaW5pbmcgUGFzc2VkIGF0IExpbmsgUmF0ZSA9ICVkLCBMYW5lIGNv
dW50ID0gJWQiLAogCQkgICAgaW50ZWxfY29ubmVjdG9yLT5iYXNlLmJhc2UuaWQsCiAJCSAgICBp
bnRlbF9jb25uZWN0b3ItPmJhc2UubmFtZSwKLQkJICAgIGludGVsX2RwLT5saW5rX3JhdGUsIGlu
dGVsX2RwLT5sYW5lX2NvdW50KTsKKwkJICAgIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssIGNydGNf
c3RhdGUtPmxhbmVfY291bnQpOwogCXJldHVybjsKIAogIGZhaWx1cmVfaGFuZGxpbmc6CkBAIC00
MDAsMTAgKzQxMiwxMCBAQCBpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAJCSAgICAiW0NPTk5FQ1RPUjolZDolc10gTGluayBUcmFpbmluZyBmYWls
ZWQgYXQgbGluayByYXRlID0gJWQsIGxhbmUgY291bnQgPSAlZCIsCiAJCSAgICBpbnRlbF9jb25u
ZWN0b3ItPmJhc2UuYmFzZS5pZCwKIAkJICAgIGludGVsX2Nvbm5lY3Rvci0+YmFzZS5uYW1lLAot
CQkgICAgaW50ZWxfZHAtPmxpbmtfcmF0ZSwgaW50ZWxfZHAtPmxhbmVfY291bnQpOworCQkgICAg
Y3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCk7CiAJaWYgKCFp
bnRlbF9kcF9nZXRfbGlua190cmFpbl9mYWxsYmFja192YWx1ZXMoaW50ZWxfZHAsCi0JCQkJCQkg
ICAgIGludGVsX2RwLT5saW5rX3JhdGUsCi0JCQkJCQkgICAgIGludGVsX2RwLT5sYW5lX2NvdW50
KSkKKwkJCQkJCSAgICAgY3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywKKwkJCQkJCSAgICAgY3J0Y19z
dGF0ZS0+bGFuZV9jb3VudCkpCiAJCS8qIFNjaGVkdWxlIGEgSG90cGx1ZyBVZXZlbnQgdG8gdXNl
cnNwYWNlIHRvIHN0YXJ0IG1vZGVzZXQgKi8KIAkJc2NoZWR1bGVfd29yaygmaW50ZWxfY29ubmVj
dG9yLT5tb2Rlc2V0X3JldHJ5X3dvcmspOwogCXJldHVybjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmgKaW5kZXggMDFmMWRh
YmJiMDYwLi5hZTgwNGVjMTMyNGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5oCkBAIC0xMSw4ICsxMSwxMSBAQAogc3Ry
dWN0IGludGVsX2RwOwogCiB2b2lkIGludGVsX2RwX2dldF9hZGp1c3RfdHJhaW4oc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKKwkJCSAgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgICBjb25zdCB1OCBsaW5rX3N0YXR1c1tEUF9MSU5LX1NU
QVRVU19TSVpFXSk7Ci12b2lkIGludGVsX2RwX3N0YXJ0X2xpbmtfdHJhaW4oc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCk7Ci12b2lkIGludGVsX2RwX3N0b3BfbGlua190cmFpbihzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKTsKK3ZvaWQgaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKTsKK3ZvaWQgaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSk7CiAKICNlbmRpZiAvKiBfX0lOVEVMX0RQX0xJTktfVFJBSU5JTkdfSF9f
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9f
cGh5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9fcGh5LmMKaW5k
ZXggMzk5YTdlZGI0NTY4Li43OWRhMjgxZDQ2ZGIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBpb19waHkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RwaW9fcGh5LmMKQEAgLTY0NCwxNiArNjQ0LDE2IEBAIGJ4dF9kZGlf
cGh5X2dldF9sYW5lX2xhdF9vcHRpbV9tYXNrKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
KQogCXJldHVybiBtYXNrOwogfQogCi0KIHZvaWQgY2h2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgICB1MzIgZGVlbXBoX3JlZ192YWx1ZSwg
dTMyIG1hcmdpbl9yZWdfdmFsdWUsCiAJCQkgICAgICBib29sIHVuaXFfdHJhbnNfc2NhbGUpCiB7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5i
YXNlLmRldik7CiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZHBvcnQgPSBlbmNfdG9fZGln
X3BvcnQoZW5jb2Rlcik7Ci0Jc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRl
bF9jcnRjKGVuY29kZXItPmJhc2UuY3J0Yyk7CisJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0
b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJZW51bSBkcGlvX2NoYW5uZWwg
Y2ggPSB2bHZfZHBvcnRfdG9fY2hhbm5lbChkcG9ydCk7Ci0JZW51bSBwaXBlIHBpcGUgPSBpbnRl
bF9jcnRjLT5waXBlOworCWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKIAl1MzIgdmFsOwog
CWludCBpOwogCkBAIC02NjYsNyArNjY2LDcgQEAgdm9pZCBjaHZfc2V0X3BoeV9zaWduYWxfbGV2
ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJdmFsIHw9IERQSU9fUENTX1RYMURF
RU1QXzlQNSB8IERQSU9fUENTX1RYMkRFRU1QXzlQNTsKIAl2bHZfZHBpb193cml0ZShkZXZfcHJp
diwgcGlwZSwgVkxWX1BDUzAxX0RXMTAoY2gpLCB2YWwpOwogCi0JaWYgKGludGVsX2NydGMtPmNv
bmZpZy0+bGFuZV9jb3VudCA+IDIpIHsKKwlpZiAoY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCA+IDIp
IHsKIAkJdmFsID0gdmx2X2RwaW9fcmVhZChkZXZfcHJpdiwgcGlwZSwgVkxWX1BDUzIzX0RXMTAo
Y2gpKTsKIAkJdmFsICY9IH4oRFBJT19QQ1NfU1dJTkdfQ0FMQ19UWDBfVFgyIHwgRFBJT19QQ1Nf
U1dJTkdfQ0FMQ19UWDFfVFgzKTsKIAkJdmFsICY9IH4oRFBJT19QQ1NfVFgxREVFTVBfTUFTSyB8
IERQSU9fUENTX1RYMkRFRU1QX01BU0spOwpAQCAtNjc5LDcgKzY3OSw3IEBAIHZvaWQgY2h2X3Nl
dF9waHlfc2lnbmFsX2xldmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXZhbCB8
PSBEUElPX1BDU19UWDFNQVJHSU5fMDAwIHwgRFBJT19QQ1NfVFgyTUFSR0lOXzAwMDsKIAl2bHZf
ZHBpb193cml0ZShkZXZfcHJpdiwgcGlwZSwgVkxWX1BDUzAxX0RXOShjaCksIHZhbCk7CiAKLQlp
ZiAoaW50ZWxfY3J0Yy0+Y29uZmlnLT5sYW5lX2NvdW50ID4gMikgeworCWlmIChjcnRjX3N0YXRl
LT5sYW5lX2NvdW50ID4gMikgewogCQl2YWwgPSB2bHZfZHBpb19yZWFkKGRldl9wcml2LCBwaXBl
LCBWTFZfUENTMjNfRFc5KGNoKSk7CiAJCXZhbCAmPSB+KERQSU9fUENTX1RYMU1BUkdJTl9NQVNL
IHwgRFBJT19QQ1NfVFgyTUFSR0lOX01BU0spOwogCQl2YWwgfD0gRFBJT19QQ1NfVFgxTUFSR0lO
XzAwMCB8IERQSU9fUENTX1RYMk1BUkdJTl8wMDA7CkBAIC02ODcsNyArNjg3LDcgQEAgdm9pZCBj
aHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJ
fQogCiAJLyogUHJvZ3JhbSBzd2luZyBkZWVtcGggKi8KLQlmb3IgKGkgPSAwOyBpIDwgaW50ZWxf
Y3J0Yy0+Y29uZmlnLT5sYW5lX2NvdW50OyBpKyspIHsKKwlmb3IgKGkgPSAwOyBpIDwgY3J0Y19z
dGF0ZS0+bGFuZV9jb3VudDsgaSsrKSB7CiAJCXZhbCA9IHZsdl9kcGlvX3JlYWQoZGV2X3ByaXYs
IHBpcGUsIENIVl9UWF9EVzQoY2gsIGkpKTsKIAkJdmFsICY9IH5EUElPX1NXSU5HX0RFRU1QSDlQ
NV9NQVNLOwogCQl2YWwgfD0gZGVlbXBoX3JlZ192YWx1ZSA8PCBEUElPX1NXSU5HX0RFRU1QSDlQ
NV9TSElGVDsKQEAgLTY5NSw3ICs2OTUsNyBAQCB2b2lkIGNodl9zZXRfcGh5X3NpZ25hbF9sZXZl
bChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl9CiAKIAkvKiBQcm9ncmFtIHN3aW5n
IG1hcmdpbiAqLwotCWZvciAoaSA9IDA7IGkgPCBpbnRlbF9jcnRjLT5jb25maWctPmxhbmVfY291
bnQ7IGkrKykgeworCWZvciAoaSA9IDA7IGkgPCBjcnRjX3N0YXRlLT5sYW5lX2NvdW50OyBpKysp
IHsKIAkJdmFsID0gdmx2X2RwaW9fcmVhZChkZXZfcHJpdiwgcGlwZSwgQ0hWX1RYX0RXMihjaCwg
aSkpOwogCiAJCXZhbCAmPSB+RFBJT19TV0lOR19NQVJHSU4wMDBfTUFTSzsKQEAgLTcxOCw3ICs3
MTgsNyBAQCB2b2lkIGNodl9zZXRfcGh5X3NpZ25hbF9sZXZlbChzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciwKIAkgKiBGb3Igbm93LCBmb3IgdGhpcyB1bmlxdWUgdHJhbnNpdGlvbiBzY2Fs
ZSBzZWxlY3Rpb24sIHNldCBiaXQKIAkgKiAyNyBmb3IgY2gwIGFuZCBjaDEuCiAJICovCi0JZm9y
IChpID0gMDsgaSA8IGludGVsX2NydGMtPmNvbmZpZy0+bGFuZV9jb3VudDsgaSsrKSB7CisJZm9y
IChpID0gMDsgaSA8IGNydGNfc3RhdGUtPmxhbmVfY291bnQ7IGkrKykgewogCQl2YWwgPSB2bHZf
ZHBpb19yZWFkKGRldl9wcml2LCBwaXBlLCBDSFZfVFhfRFczKGNoLCBpKSk7CiAJCWlmICh1bmlx
X3RyYW5zX3NjYWxlKQogCQkJdmFsIHw9IERQSU9fVFhfVU5JUV9UUkFOU19TQ0FMRV9FTjsKQEAg
LTczMiw3ICs3MzIsNyBAQCB2b2lkIGNodl9zZXRfcGh5X3NpZ25hbF9sZXZlbChzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl2YWwgfD0gRFBJT19QQ1NfU1dJTkdfQ0FMQ19UWDBfVFgy
IHwgRFBJT19QQ1NfU1dJTkdfQ0FMQ19UWDFfVFgzOwogCXZsdl9kcGlvX3dyaXRlKGRldl9wcml2
LCBwaXBlLCBWTFZfUENTMDFfRFcxMChjaCksIHZhbCk7CiAKLQlpZiAoaW50ZWxfY3J0Yy0+Y29u
ZmlnLT5sYW5lX2NvdW50ID4gMikgeworCWlmIChjcnRjX3N0YXRlLT5sYW5lX2NvdW50ID4gMikg
ewogCQl2YWwgPSB2bHZfZHBpb19yZWFkKGRldl9wcml2LCBwaXBlLCBWTFZfUENTMjNfRFcxMChj
aCkpOwogCQl2YWwgfD0gRFBJT19QQ1NfU1dJTkdfQ0FMQ19UWDBfVFgyIHwgRFBJT19QQ1NfU1dJ
TkdfQ0FMQ19UWDFfVFgzOwogCQl2bHZfZHBpb193cml0ZShkZXZfcHJpdiwgcGlwZSwgVkxWX1BD
UzIzX0RXMTAoY2gpLCB2YWwpOwpAQCAtOTkyLDE0ICs5OTIsMTUgQEAgdm9pZCBjaHZfcGh5X3Bv
c3RfcGxsX2Rpc2FibGUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiB9CiAKIHZvaWQg
dmx2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAor
CQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkg
ICAgICB1MzIgZGVtcGhfcmVnX3ZhbHVlLCB1MzIgcHJlZW1waF9yZWdfdmFsdWUsCiAJCQkgICAg
ICB1MzIgdW5pcXRyYW5zY2FsZV9yZWdfdmFsdWUsIHUzMiB0eDNfZGVtcGgpCiB7CiAJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7
Ci0Jc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKGVuY29kZXIt
PmJhc2UuY3J0Yyk7CisJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNy
dGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZHBvcnQg
PSBlbmNfdG9fZGlnX3BvcnQoZW5jb2Rlcik7CiAJZW51bSBkcGlvX2NoYW5uZWwgcG9ydCA9IHZs
dl9kcG9ydF90b19jaGFubmVsKGRwb3J0KTsKLQllbnVtIHBpcGUgcGlwZSA9IGludGVsX2NydGMt
PnBpcGU7CisJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCiAJdmx2X2RwaW9fZ2V0KGRl
dl9wcml2KTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kcGlvX3BoeS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGlvX3Bo
eS5oCmluZGV4IGY0MThhYWI5MGI3ZS4uNjQ3MzQ0MGU3NDU3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9fcGh5LmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGlvX3BoeS5oCkBAIC0zMiw2ICszMiw3IEBAIHZvaWQg
Ynh0X2RkaV9waHlfc2V0X2xhbmVfb3B0aW1fbWFzayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlciwKIHU4IGJ4dF9kZGlfcGh5X2dldF9sYW5lX2xhdF9vcHRpbV9tYXNrKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyKTsKIAogdm9pZCBjaHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgIHUzMiBkZWVtcGhfcmVnX3ZhbHVlLCB1
MzIgbWFyZ2luX3JlZ192YWx1ZSwKIAkJCSAgICAgIGJvb2wgdW5pcV90cmFuc19zY2FsZSk7CiB2
b2lkIGNodl9kYXRhX2xhbmVfc29mdF9yZXNldChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKQEAgLTQ2LDYgKzQ3LDcgQEAgdm9pZCBjaHZfcGh5X3Bvc3RfcGxsX2Rpc2FibGUoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUpOwogCiB2b2lkIHZsdl9zZXRfcGh5X3NpZ25hbF9sZXZl
bChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAgdTMyIGRlbXBoX3JlZ192YWx1
ZSwgdTMyIHByZWVtcGhfcmVnX3ZhbHVlLAogCQkJICAgICAgdTMyIHVuaXF0cmFuc2NhbGVfcmVn
X3ZhbHVlLCB1MzIgdHgzX2RlbXBoKTsKIHZvaWQgdmx2X3BoeV9wcmVfcGxsX2VuYWJsZShzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9oZG1pLmMKaW5kZXggMDEwZjM3MjQwNzEwLi44MTIxOGQ5NjhhN2UgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCkBAIC0yNzMwLDggKzI3MzAsOSBAQCBz
dGF0aWMgdm9pZCB2bHZfaGRtaV9wcmVfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlLAogCXZsdl9waHlfcHJlX2VuY29kZXJfZW5hYmxlKGVuY29kZXIsIHBpcGVfY29uZmln
KTsKIAogCS8qIEhETUkgMS4wVi0yZEIgKi8KLQl2bHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5j
b2RlciwgMHgyYjI0NWY1ZiwgMHgwMDAwMjAwMCwgMHg1NTc4YjgzYSwKLQkJCQkgMHgyYjI0Nzg3
OCk7CisJdmx2X3NldF9waHlfc2lnbmFsX2xldmVsKGVuY29kZXIsIHBpcGVfY29uZmlnLAorCQkJ
CSAweDJiMjQ1ZjVmLCAweDAwMDAyMDAwLAorCQkJCSAweDU1NzhiODNhLCAweDJiMjQ3ODc4KTsK
IAogCWRwb3J0LT5zZXRfaW5mb2ZyYW1lcyhlbmNvZGVyLAogCQkJICAgICAgcGlwZV9jb25maWct
Pmhhc19pbmZvZnJhbWUsCkBAIC0yODA4LDcgKzI4MDksNyBAQCBzdGF0aWMgdm9pZCBjaHZfaGRt
aV9wcmVfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCiAJLyogRklY
TUU6IFByb2dyYW0gdGhlIHN1cHBvcnQgeHh4IFYtZEIgKi8KIAkvKiBVc2UgODAwbVYtMGRCICov
Ci0JY2h2X3NldF9waHlfc2lnbmFsX2xldmVsKGVuY29kZXIsIDEyOCwgMTAyLCBmYWxzZSk7CisJ
Y2h2X3NldF9waHlfc2lnbmFsX2xldmVsKGVuY29kZXIsIHBpcGVfY29uZmlnLCAxMjgsIDEwMiwg
ZmFsc2UpOwogCiAJZHBvcnQtPnNldF9pbmZvZnJhbWVzKGVuY29kZXIsCiAJCQkgICAgICBwaXBl
X2NvbmZpZy0+aGFzX2luZm9mcmFtZSwKLS0gCjIuMjQuMQoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1n
ZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21h
aWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

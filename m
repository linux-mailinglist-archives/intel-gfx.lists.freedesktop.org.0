Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A33302EAF18
	for <lists+intel-gfx@lfdr.de>; Tue,  5 Jan 2021 16:46:15 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0022F6E187;
	Tue,  5 Jan 2021 15:45:48 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl
 [IPv6:2a02:2308::216:3eff:fe92:dfa3])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B2C446E14C
 for <intel-gfx@lists.freedesktop.org>; Tue,  5 Jan 2021 15:45:41 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  5 Jan 2021 16:35:23 +0100
Message-Id: <20210105153558.134272-30-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.30.0.rc1
In-Reply-To: <20210105153558.134272-1-maarten.lankhorst@linux.intel.com>
References: <20210105153558.134272-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v6 29/64] drm/i915: Defer pin calls in buffer
 pool until first use by caller.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgbmVlZCB0byB0YWtlIHRoZSBvYmogbG9jayB0byBwaW4gcGFnZXMsIHNvIHdhaXQgdW50aWwg
dGhlIGNhbGxlcnMKaGF2ZSBkb25lIHNvLCBiZWZvcmUgbWFraW5nIHRoZSBvYmplY3QgdW5zaHJp
bmthYmxlLgoKU2lnbmVkLW9mZi1ieTogTWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hv
cnN0QGxpbnV4LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IFRob21hcyBIZWxsc3Ryw7ZtIDx0aG9t
YXMuaGVsbHN0cm9tQGxpbnV4LmludGVsLmNvbT4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9leGVjYnVmZmVyLmMgICAgfCAgMiArCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9vYmplY3RfYmx0LmMgICAgfCAgNiArKysKIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Z3RfYnVmZmVyX3Bvb2wuYyAgICB8IDQ3ICsrKysrKysrKy0tLS0tLS0tLS0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaCAgICB8ICA1ICsrCiAuLi4vZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaCAgfCAgMSArCiA1IGZpbGVzIGNoYW5nZWQs
IDM1IGluc2VydGlvbnMoKyksIDI2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IGQ0YzA2NWMxZGEwNi4uMWFjMjcy
ZjQ2MzRhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhl
Y2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMKQEAgLTEzNDIsNiArMTM0Miw3IEBAIHN0YXRpYyBpbnQgX19yZWxvY19ncHVfYWxsb2Mo
c3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCWVyciA9IFBUUl9FUlIoY21kKTsKIAkJZ290
byBlcnJfcG9vbDsKIAl9CisJaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2VkKHBvb2wpOwog
CiAJbWVtc2V0MzIoY21kLCAwLCBwb29sLT5vYmotPmJhc2Uuc2l6ZSAvIHNpemVvZih1MzIpKTsK
IApAQCAtMjYzNiw2ICsyNjM3LDcgQEAgc3RhdGljIGludCBlYl9wYXJzZShzdHJ1Y3QgaTkxNV9l
eGVjYnVmZmVyICplYikKIAkJZXJyID0gUFRSX0VSUihzaGFkb3cpOwogCQlnb3RvIGVycjsKIAl9
CisJaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2VkKHBvb2wpOwogCWk5MTVfZ2VtX29iamVj
dF9zZXRfcmVhZG9ubHkoc2hhZG93LT5vYmopOwogCXNoYWRvdy0+cHJpdmF0ZSA9IHBvb2w7CiAK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X2JsdC5jCmluZGV4
IDEwY2FjOWZhYzc5Yi4uMTNmNjgxZmMyN2RiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X2JsdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmMKQEAgLTU1LDYgKzU1LDkgQEAgc3RydWN0IGk5MTVf
dm1hICppbnRlbF9lbWl0X3ZtYV9maWxsX2JsdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJ
aWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gb3V0X3B1dDsKIAorCS8qIHdlIHBpbm5lZCB0aGUg
cG9vbCwgbWFyayBpdCBhcyBzdWNoICovCisJaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2Vk
KHBvb2wpOworCiAJY21kID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9tYXAocG9vbC0+b2JqLCBJOTE1
X01BUF9XQyk7CiAJaWYgKElTX0VSUihjbWQpKSB7CiAJCWVyciA9IFBUUl9FUlIoY21kKTsKQEAg
LTI3Nyw2ICsyODAsOSBAQCBzdHJ1Y3QgaTkxNV92bWEgKmludGVsX2VtaXRfdm1hX2NvcHlfYmx0
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBv
dXRfcHV0OwogCisJLyogd2UgcGlubmVkIHRoZSBwb29sLCBtYXJrIGl0IGFzIHN1Y2ggKi8KKwlp
bnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX3VzZWQocG9vbCk7CisKIAljbWQgPSBpOTE1X2dlbV9v
YmplY3RfcGluX21hcChwb29sLT5vYmosIEk5MTVfTUFQX1dDKTsKIAlpZiAoSVNfRVJSKGNtZCkp
IHsKIAkJZXJyID0gUFRSX0VSUihjbWQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0X2J1ZmZlcl9wb29sLmMKaW5kZXggMTA0Y2IzMGU4YzEzLi4wMzA3NTkzMDUxOTYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2J1ZmZlcl9wb29sLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuYwpAQCAt
OTgsMjggKzk4LDYgQEAgc3RhdGljIHZvaWQgcG9vbF9mcmVlX3dvcmsoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3cmspCiAJCQkJICAgICAgcm91bmRfamlmZmllc191cF9yZWxhdGl2ZShIWikpOwogfQog
Ci1zdGF0aWMgaW50IHBvb2xfYWN0aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmKQotewotCXN0
cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlID0KLQkJY29udGFpbmVyX29mKHJl
ZiwgdHlwZW9mKCpub2RlKSwgYWN0aXZlKTsKLQlzdHJ1Y3QgZG1hX3Jlc3YgKnJlc3YgPSBub2Rl
LT5vYmotPmJhc2UucmVzdjsKLQlpbnQgZXJyOwotCi0JaWYgKGRtYV9yZXN2X3RyeWxvY2socmVz
dikpIHsKLQkJZG1hX3Jlc3ZfYWRkX2V4Y2xfZmVuY2UocmVzdiwgTlVMTCk7Ci0JCWRtYV9yZXN2
X3VubG9jayhyZXN2KTsKLQl9Ci0KLQllcnIgPSBpOTE1X2dlbV9vYmplY3RfcGluX3BhZ2VzKG5v
ZGUtPm9iaik7Ci0JaWYgKGVycikKLQkJcmV0dXJuIGVycjsKLQotCS8qIEhpZGUgdGhpcyBwaW5u
ZWQgb2JqZWN0IGZyb20gdGhlIHNocmlua2VyIHVudGlsIHJldGlyZWQgKi8KLQlpOTE1X2dlbV9v
YmplY3RfbWFrZV91bnNocmlua2FibGUobm9kZS0+b2JqKTsKLQotCXJldHVybiAwOwotfQotCiBf
X2k5MTVfYWN0aXZlX2NhbGwKIHN0YXRpYyB2b2lkIHBvb2xfcmV0aXJlKHN0cnVjdCBpOTE1X2Fj
dGl2ZSAqcmVmKQogewpAQCAtMTI5LDEwICsxMDcsMTMgQEAgc3RhdGljIHZvaWQgcG9vbF9yZXRp
cmUoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiAJc3RydWN0IGxpc3RfaGVhZCAqbGlzdCA9IGJ1
Y2tldF9mb3Jfc2l6ZShwb29sLCBub2RlLT5vYmotPmJhc2Uuc2l6ZSk7CiAJdW5zaWduZWQgbG9u
ZyBmbGFnczsKIAotCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhub2RlLT5vYmopOworCWlm
IChub2RlLT5waW5uZWQpIHsKKwkJaTkxNV9nZW1fb2JqZWN0X3VucGluX3BhZ2VzKG5vZGUtPm9i
aik7CiAKLQkvKiBSZXR1cm4gdGhpcyBvYmplY3QgdG8gdGhlIHNocmlua2VyIHBvb2wgKi8KLQlp
OTE1X2dlbV9vYmplY3RfbWFrZV9wdXJnZWFibGUobm9kZS0+b2JqKTsKKwkJLyogUmV0dXJuIHRo
aXMgb2JqZWN0IHRvIHRoZSBzaHJpbmtlciBwb29sICovCisJCWk5MTVfZ2VtX29iamVjdF9tYWtl
X3B1cmdlYWJsZShub2RlLT5vYmopOworCQlub2RlLT5waW5uZWQgPSBmYWxzZTsKKwl9CiAKIAlH
RU1fQlVHX09OKG5vZGUtPmFnZSk7CiAJc3Bpbl9sb2NrX2lycXNhdmUoJnBvb2wtPmxvY2ssIGZs
YWdzKTsKQEAgLTE0NCw2ICsxMjUsMTkgQEAgc3RhdGljIHZvaWQgcG9vbF9yZXRpcmUoc3RydWN0
IGk5MTVfYWN0aXZlICpyZWYpCiAJCQkgICAgICByb3VuZF9qaWZmaWVzX3VwX3JlbGF0aXZlKEha
KSk7CiB9CiAKK3ZvaWQgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2VkKHN0cnVjdCBpbnRl
bF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlKQoreworCWFzc2VydF9vYmplY3RfaGVsZChub2Rl
LT5vYmopOworCisJaWYgKG5vZGUtPnBpbm5lZCkKKwkJcmV0dXJuOworCisJX19pOTE1X2dlbV9v
YmplY3RfcGluX3BhZ2VzKG5vZGUtPm9iaik7CisJLyogSGlkZSB0aGlzIHBpbm5lZCBvYmplY3Qg
ZnJvbSB0aGUgc2hyaW5rZXIgdW50aWwgcmV0aXJlZCAqLworCWk5MTVfZ2VtX29iamVjdF9tYWtl
X3Vuc2hyaW5rYWJsZShub2RlLT5vYmopOworCW5vZGUtPnBpbm5lZCA9IHRydWU7Cit9CisKIHN0
YXRpYyBzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqCiBub2RlX2NyZWF0ZShzdHJ1
Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wgKnBvb2wsIHNpemVfdCBzeikKIHsKQEAgLTE1OCw3ICsx
NTIsOCBAQCBub2RlX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wgKnBvb2wsIHNp
emVfdCBzeikKIAogCW5vZGUtPmFnZSA9IDA7CiAJbm9kZS0+cG9vbCA9IHBvb2w7Ci0JaTkxNV9h
Y3RpdmVfaW5pdCgmbm9kZS0+YWN0aXZlLCBwb29sX2FjdGl2ZSwgcG9vbF9yZXRpcmUpOworCW5v
ZGUtPnBpbm5lZCA9IGZhbHNlOworCWk5MTVfYWN0aXZlX2luaXQoJm5vZGUtPmFjdGl2ZSwgTlVM
TCwgcG9vbF9yZXRpcmUpOwogCiAJb2JqID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9pbnRlcm5h
bChndC0+aTkxNSwgc3opOwogCWlmIChJU19FUlIob2JqKSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2d0X2J1ZmZlcl9wb29sLmgKaW5kZXggNDJjYmFjMDAzZThhLi45ODc4
Y2U5YTA3YWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2J1
ZmZlcl9wb29sLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVy
X3Bvb2wuaApAQCAtMTcsMTAgKzE3LDE1IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3Q7CiBzdHJ1Y3Qg
aW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqCiBpbnRlbF9ndF9nZXRfYnVmZmVyX3Bvb2woc3Ry
dWN0IGludGVsX2d0ICpndCwgc2l6ZV90IHNpemUpOwogCit2b2lkIGludGVsX2d0X2J1ZmZlcl9w
b29sX21hcmtfdXNlZChzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqbm9kZSk7CisK
IHN0YXRpYyBpbmxpbmUgaW50CiBpbnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX2FjdGl2ZShzdHJ1
Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqbm9kZSwKIAkJCQkgc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiB7CisJLyogZGlkIHdlIGNhbGwgbWFya191c2VkPyAqLworCUdFTV9XQVJOX09O
KCFub2RlLT5waW5uZWQpOworCiAJcmV0dXJuIGk5MTVfYWN0aXZlX2FkZF9yZXF1ZXN0KCZub2Rl
LT5hY3RpdmUsIHJxKTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0X2J1ZmZlcl9wb29sX3R5cGVzLmgKaW5kZXggYmNmMTY1OGM5NjMzLi4wNDAxODI1ZTgy
OWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2J1ZmZlcl9w
b29sX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVy
X3Bvb2xfdHlwZXMuaApAQCAtMzEsNiArMzEsNyBAQCBzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bv
b2xfbm9kZSB7CiAJCXN0cnVjdCByY3VfaGVhZCByY3U7CiAJfTsKIAl1bnNpZ25lZCBsb25nIGFn
ZTsKKwlib29sIHBpbm5lZDsKIH07CiAKICNlbmRpZiAvKiBJTlRFTF9HVF9CVUZGRVJfUE9PTF9U
WVBFU19IICovCi0tIAoyLjMwLjAucmMxCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZngK

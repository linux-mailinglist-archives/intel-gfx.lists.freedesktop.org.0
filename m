Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2162617347
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 10:09:32 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1CD15896E5;
	Wed,  8 May 2019 08:09:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7C0DE8957D
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 08:09:14 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16485919-1500050 
 for multiple; Wed, 08 May 2019 09:07:09 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 09:06:43 +0100
Message-Id: <20190508080704.24223-19-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-1-chris@chris-wilson.co.uk>
References: <20190508080704.24223-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 19/40] drm/i915: Split GEM object type
 definition to its own header
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Matthew Auld <matthew.auld@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yIGNvbnZlbmllbmNlIGluIGF2b2lkaW5nIGlubGluZSBzcGFnaGV0dGksIGtlZXAgdGhlIHR5
cGUgZGVmaW5pdGlvbgphcyBhIHNlcGFyYXRlIGhlYWRlci4KClNpZ25lZC1vZmYtYnk6IENocmlz
IFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpSZXZpZXdlZC1ieTogTWF0dGhldyBB
dWxkIDxtYXR0aGV3LmF1bGRAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L01h
a2VmaWxlICAgICAgICAgICAgICAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0v
TWFrZWZpbGUgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL01h
a2VmaWxlLmhlYWRlci10ZXN0IHwgIDE2ICsKIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2Vt
X29iamVjdF90eXBlcy5oICB8IDI4NSArKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW1fYmF0Y2hfcG9vbC5oICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbV9ndHQuaCAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW1fb2JqZWN0LmggICAgICAgIHwgMjk1ICstLS0tLS0tLS0tLS0tLS0tLQogOSBmaWxl
cyBjaGFuZ2VkLCAzMTIgaW5zZXJ0aW9ucygrKSwgMjk0IGRlbGV0aW9ucygtKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9NYWtlZmlsZQogY3JlYXRlIG1vZGUg
MTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9NYWtlZmlsZS5oZWFkZXItdGVzdAogY3Jl
YXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3Rf
dHlwZXMuaAoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKaW5kZXggNjgxMDZmZTM1YTA0Li45NjM0NGM5YTA3
MjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCkBAIC04NSw2ICs4NSw3IEBAIGd0LSQoQ09ORklHX0RS
TV9JOTE1X1NFTEZURVNUKSArPSBcCiBpOTE1LXkgKz0gJChndC15KQogCiAjIEdFTSAoR3JhcGhp
Y3MgRXhlY3V0aW9uIE1hbmFnZW1lbnQpIGNvZGUKK29iai15ICs9IGdlbS8KIGk5MTUteSArPSBc
CiAJICBpOTE1X2FjdGl2ZS5vIFwKIAkgIGk5MTVfY21kX3BhcnNlci5vIFwKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9NYWtlZmlsZQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjA3
ZTdiOGI4NDBlYQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9N
YWtlZmlsZQpAQCAtMCwwICsxIEBACitpbmNsdWRlICQoc3JjKS9NYWtlZmlsZS5oZWFkZXItdGVz
dCAjIEV4dHJhIGhlYWRlciB0ZXN0cwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL01ha2VmaWxlLmhlYWRlci10ZXN0IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL01ha2Vm
aWxlLmhlYWRlci10ZXN0Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4u
NjFlMDZjYmI0YjMyCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L01ha2VmaWxlLmhlYWRlci10ZXN0CkBAIC0wLDAgKzEsMTYgQEAKKyMgU1BEWC1MaWNlbnNlLUlk
ZW50aWZpZXI6IE1JVAorIyBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorCisj
IFRlc3QgdGhlIGhlYWRlcnMgYXJlIGNvbXBpbGFibGUgYXMgc3RhbmRhbG9uZSB1bml0cworaGVh
ZGVyX3Rlc3QgOj0gJChub3RkaXIgJCh3aWxkY2FyZCAkKHNyYykvKi5oKSkKKworcXVpZXRfY21k
X2hlYWRlcl90ZXN0ID0gSERSVEVTVCAkQAorICAgICAgY21kX2hlYWRlcl90ZXN0ID0gZWNobyAi
XCNpbmNsdWRlIFwiJCg8RilcIiIgPiAkQAorCitoZWFkZXJfdGVzdF8lLmM6ICUuaAorCSQoY2Fs
bCBjbWQsaGVhZGVyX3Rlc3QpCisKK2V4dHJhLSQoQ09ORklHX0RSTV9JOTE1X1dFUlJPUikgKz0g
XAorCSQoZm9yZWFjaCBoLCQoaGVhZGVyX3Rlc3QpLCQocGF0c3Vic3QgJS5oLGhlYWRlcl90ZXN0
XyUubywkKGgpKSkKKworY2xlYW4tZmlsZXMgKz0gJChmb3JlYWNoIGgsJChoZWFkZXJfdGVzdCks
JChwYXRzdWJzdCAlLmgsaGVhZGVyX3Rlc3RfJS5jLCQoaCkpKQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAwMDAwMC4uZTRiNTA5NDRmNTUzCi0tLSAvZGV2L251bGwKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCkBAIC0wLDAgKzEs
Mjg1IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAorICoKKyAqIENvcHly
aWdodCDCqSAyMDE2IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBfX0k5MTVfR0VN
X09CSkVDVF9UWVBFU19IX18KKyNkZWZpbmUgX19JOTE1X0dFTV9PQkpFQ1RfVFlQRVNfSF9fCisK
KyNpbmNsdWRlIDxsaW51eC9yZXNlcnZhdGlvbi5oPgorCisjaW5jbHVkZSA8ZHJtL2RybV9nZW0u
aD4KKworI2luY2x1ZGUgIi4uL2k5MTVfYWN0aXZlLmgiCisjaW5jbHVkZSAiLi4vaTkxNV9zZWxm
dGVzdC5oIgorCitzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdDsKKworLyoKKyAqIHN0cnVjdCBp
OTE1X2x1dF9oYW5kbGUgdHJhY2tzIHRoZSBmYXN0IGxvb2t1cHMgZnJvbSBoYW5kbGUgdG8gdm1h
IHVzZWQKKyAqIGZvciBleGVjYnVmLiBBbHRob3VnaCB3ZSB1c2UgYSByYWRpeHRyZWUgZm9yIHRo
YXQgbWFwcGluZywgaW4gb3JkZXIgdG8KKyAqIHJlbW92ZSB0aGVtIGFzIHRoZSBvYmplY3Qgb3Ig
Y29udGV4dCBpcyBjbG9zZWQsIHdlIG5lZWQgYSBzZWNvbmRhcnkgbGlzdAorICogYW5kIGEgdHJh
bnNsYXRpb24gZW50cnkgKGk5MTVfbHV0X2hhbmRsZSkuCisgKi8KK3N0cnVjdCBpOTE1X2x1dF9o
YW5kbGUgeworCXN0cnVjdCBsaXN0X2hlYWQgb2JqX2xpbms7CisJc3RydWN0IGxpc3RfaGVhZCBj
dHhfbGluazsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OworCXUzMiBoYW5kbGU7Cit9
OworCitzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdF9vcHMgeworCXVuc2lnbmVkIGludCBmbGFn
czsKKyNkZWZpbmUgSTkxNV9HRU1fT0JKRUNUX0hBU19TVFJVQ1RfUEFHRQlCSVQoMCkKKyNkZWZp
bmUgSTkxNV9HRU1fT0JKRUNUX0lTX1NIUklOS0FCTEUJQklUKDEpCisjZGVmaW5lIEk5MTVfR0VN
X09CSkVDVF9JU19QUk9YWQlCSVQoMikKKyNkZWZpbmUgSTkxNV9HRU1fT0JKRUNUX0FTWU5DX0NB
TkNFTAlCSVQoMykKKworCS8qIEludGVyZmFjZSBiZXR3ZWVuIHRoZSBHRU0gb2JqZWN0IGFuZCBp
dHMgYmFja2luZyBzdG9yYWdlLgorCSAqIGdldF9wYWdlcygpIGlzIGNhbGxlZCBvbmNlIHByaW9y
IHRvIHRoZSB1c2Ugb2YgdGhlIGFzc29jaWF0ZWQgc2V0CisJICogb2YgcGFnZXMgYmVmb3JlIHRv
IGJpbmRpbmcgdGhlbSBpbnRvIHRoZSBHVFQsIGFuZCBwdXRfcGFnZXMoKSBpcworCSAqIGNhbGxl
ZCBhZnRlciB3ZSBubyBsb25nZXIgbmVlZCB0aGVtLiBBcyB3ZSBleHBlY3QgdGhlcmUgdG8gYmUK
KwkgKiBhc3NvY2lhdGVkIGNvc3Qgd2l0aCBtaWdyYXRpbmcgcGFnZXMgYmV0d2VlbiB0aGUgYmFj
a2luZyBzdG9yYWdlCisJICogYW5kIG1ha2luZyB0aGVtIGF2YWlsYWJsZSBmb3IgdGhlIEdQVSAo
ZS5nLiBjbGZsdXNoKSwgd2UgbWF5IGhvbGQKKwkgKiBvbnRvIHRoZSBwYWdlcyBhZnRlciB0aGV5
IGFyZSBubyBsb25nZXIgcmVmZXJlbmNlZCBieSB0aGUgR1BVCisJICogaW4gY2FzZSB0aGV5IG1h
eSBiZSB1c2VkIGFnYWluIHNob3J0bHkgKGZvciBleGFtcGxlIG1pZ3JhdGluZyB0aGUKKwkgKiBw
YWdlcyB0byBhIGRpZmZlcmVudCBtZW1vcnkgZG9tYWluIHdpdGhpbiB0aGUgR1RUKS4gcHV0X3Bh
Z2VzKCkKKwkgKiB3aWxsIHRoZXJlZm9yZSBtb3N0IGxpa2VseSBiZSBjYWxsZWQgd2hlbiB0aGUg
b2JqZWN0IGl0c2VsZiBpcworCSAqIGJlaW5nIHJlbGVhc2VkIG9yIHVuZGVyIG1lbW9yeSBwcmVz
c3VyZSAod2hlcmUgd2UgYXR0ZW1wdCB0bworCSAqIHJlYXAgcGFnZXMgZm9yIHRoZSBzaHJpbmtl
cikuCisJICovCisJaW50ICgqZ2V0X3BhZ2VzKShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqKTsKKwl2b2lkICgqcHV0X3BhZ2VzKShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2Jq
LAorCQkJICBzdHJ1Y3Qgc2dfdGFibGUgKnBhZ2VzKTsKKworCWludCAoKnB3cml0ZSkoc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKKwkJICAgICAgY29uc3Qgc3RydWN0IGRybV9pOTE1
X2dlbV9wd3JpdGUgKmFyZyk7CisKKwlpbnQgKCpkbWFidWZfZXhwb3J0KShzdHJ1Y3QgZHJtX2k5
MTVfZ2VtX29iamVjdCAqb2JqKTsKKwl2b2lkICgqcmVsZWFzZSkoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaik7Cit9OworCitzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCB7CisJc3Ry
dWN0IGRybV9nZW1fb2JqZWN0IGJhc2U7CisKKwljb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdF9vcHMgKm9wczsKKworCXN0cnVjdCB7CisJCS8qKgorCQkgKiBAdm1hLmxvY2s6IHByb3Rl
Y3QgdGhlIGxpc3QvdHJlZSBvZiB2bWFzCisJCSAqLworCQlzcGlubG9ja190IGxvY2s7CisKKwkJ
LyoqCisJCSAqIEB2bWEubGlzdDogTGlzdCBvZiBWTUFzIGJhY2tlZCBieSB0aGlzIG9iamVjdAor
CQkgKgorCQkgKiBUaGUgVk1BIG9uIHRoaXMgbGlzdCBhcmUgb3JkZXJlZCBieSB0eXBlLCBhbGwg
R0dUVCB2bWEgYXJlCisJCSAqIHBsYWNlZCBhdCB0aGUgaGVhZCBhbmQgYWxsIHBwR1RUIHZtYSBh
cmUgcGxhY2VkIGF0IHRoZSB0YWlsLgorCQkgKiBUaGUgZGlmZmVyZW50IHR5cGVzIG9mIEdHVFQg
dm1hIGFyZSB1bm9yZGVyZWQgYmV0d2VlbgorCQkgKiB0aGVtc2VsdmVzLCB1c2UgdGhlIEB2bWEu
dHJlZSAod2hpY2ggaGFzIGEgZGVmaW5lZCBvcmRlcgorCQkgKiBiZXR3ZWVuIGFsbCBWTUEpIHRv
IHF1aWNrbHkgZmluZCBhbiBleGFjdCBtYXRjaC4KKwkJICovCisJCXN0cnVjdCBsaXN0X2hlYWQg
bGlzdDsKKworCQkvKioKKwkJICogQHZtYS50cmVlOiBPcmRlcmVkIHRyZWUgb2YgVk1BcyBiYWNr
ZWQgYnkgdGhpcyBvYmplY3QKKwkJICoKKwkJICogQWxsIFZNQSBjcmVhdGVkIGZvciB0aGlzIG9i
amVjdCBhcmUgcGxhY2VkIGluIHRoZSBAdm1hLnRyZWUKKwkJICogZm9yIGZhc3QgcmV0cmlldmFs
IHZpYSBhIGJpbmFyeSBzZWFyY2ggaW4KKwkJICogaTkxNV92bWFfaW5zdGFuY2UoKS4gVGhleSBh
cmUgYWxzbyBhZGRlZCB0byBAdm1hLmxpc3QgZm9yCisJCSAqIGVhc3kgaXRlcmF0aW9uLgorCQkg
Ki8KKwkJc3RydWN0IHJiX3Jvb3QgdHJlZTsKKwl9IHZtYTsKKworCS8qKgorCSAqIEBsdXRfbGlz
dDogTGlzdCBvZiB2bWEgbG9va3VwIGVudHJpZXMgaW4gdXNlIGZvciB0aGlzIG9iamVjdC4KKwkg
KgorCSAqIElmIHRoaXMgb2JqZWN0IGlzIGNsb3NlZCwgd2UgbmVlZCB0byByZW1vdmUgYWxsIG9m
IGl0cyBWTUEgZnJvbQorCSAqIHRoZSBmYXN0IGxvb2t1cCBpbmRleCBpbiBhc3NvY2lhdGVkIGNv
bnRleHRzOyBAbHV0X2xpc3QgcHJvdmlkZXMKKwkgKiB0aGlzIHRyYW5zbGF0aW9uIGZyb20gb2Jq
ZWN0IHRvIGNvbnRleHQtPmhhbmRsZXNfdm1hLgorCSAqLworCXN0cnVjdCBsaXN0X2hlYWQgbHV0
X2xpc3Q7CisKKwkvKiogU3RvbGVuIG1lbW9yeSBmb3IgdGhpcyBvYmplY3QsIGluc3RlYWQgb2Yg
YmVpbmcgYmFja2VkIGJ5IHNobWVtLiAqLworCXN0cnVjdCBkcm1fbW1fbm9kZSAqc3RvbGVuOwor
CXVuaW9uIHsKKwkJc3RydWN0IHJjdV9oZWFkIHJjdTsKKwkJc3RydWN0IGxsaXN0X25vZGUgZnJl
ZWQ7CisJfTsKKworCS8qKgorCSAqIFdoZXRoZXIgdGhlIG9iamVjdCBpcyBjdXJyZW50bHkgaW4g
dGhlIEdHVFQgbW1hcC4KKwkgKi8KKwl1bnNpZ25lZCBpbnQgdXNlcmZhdWx0X2NvdW50OworCXN0
cnVjdCBsaXN0X2hlYWQgdXNlcmZhdWx0X2xpbms7CisKKwlzdHJ1Y3QgbGlzdF9oZWFkIGJhdGNo
X3Bvb2xfbGluazsKKwlJOTE1X1NFTEZURVNUX0RFQ0xBUkUoc3RydWN0IGxpc3RfaGVhZCBzdF9s
aW5rKTsKKworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwkvKioKKwkgKiBIYXZlIHdlIHRha2Vu
IGEgcmVmZXJlbmNlIGZvciB0aGUgb2JqZWN0IGZvciBpbmNvbXBsZXRlIEdQVQorCSAqIGFjdGl2
aXR5PworCSAqLworI2RlZmluZSBJOTE1X0JPX0FDVElWRV9SRUYgMAorCisJLyoKKwkgKiBJcyB0
aGUgb2JqZWN0IHRvIGJlIG1hcHBlZCBhcyByZWFkLW9ubHkgdG8gdGhlIEdQVQorCSAqIE9ubHkg
aG9ub3VyZWQgaWYgaGFyZHdhcmUgaGFzIHJlbGV2YW50IHB0ZSBiaXQKKwkgKi8KKwl1bnNpZ25l
ZCBpbnQgY2FjaGVfbGV2ZWw6MzsKKwl1bnNpZ25lZCBpbnQgY2FjaGVfY29oZXJlbnQ6MjsKKyNk
ZWZpbmUgSTkxNV9CT19DQUNIRV9DT0hFUkVOVF9GT1JfUkVBRCBCSVQoMCkKKyNkZWZpbmUgSTkx
NV9CT19DQUNIRV9DT0hFUkVOVF9GT1JfV1JJVEUgQklUKDEpCisJdW5zaWduZWQgaW50IGNhY2hl
X2RpcnR5OjE7CisKKwkvKioKKwkgKiBAcmVhZF9kb21haW5zOiBSZWFkIG1lbW9yeSBkb21haW5z
LgorCSAqCisJICogVGhlc2UgbW9uaXRvciB3aGljaCBjYWNoZXMgY29udGFpbiByZWFkL3dyaXRl
IGRhdGEgcmVsYXRlZCB0byB0aGUKKwkgKiBvYmplY3QuIFdoZW4gdHJhbnNpdGlvbmluZyBmcm9t
IG9uZSBzZXQgb2YgZG9tYWlucyB0byBhbm90aGVyLAorCSAqIHRoZSBkcml2ZXIgaXMgY2FsbGVk
IHRvIGVuc3VyZSB0aGF0IGNhY2hlcyBhcmUgc3VpdGFibHkgZmx1c2hlZCBhbmQKKwkgKiBpbnZh
bGlkYXRlZC4KKwkgKi8KKwl1MTYgcmVhZF9kb21haW5zOworCisJLyoqCisJICogQHdyaXRlX2Rv
bWFpbjogQ29ycmVzcG9uZGluZyB1bmlxdWUgd3JpdGUgbWVtb3J5IGRvbWFpbi4KKwkgKi8KKwl1
MTYgd3JpdGVfZG9tYWluOworCisJYXRvbWljX3QgZnJvbnRidWZmZXJfYml0czsKKwl1bnNpZ25l
ZCBpbnQgZnJvbnRidWZmZXJfZ2d0dF9vcmlnaW47IC8qIHdyaXRlIG9uY2UgKi8KKwlzdHJ1Y3Qg
aTkxNV9hY3RpdmVfcmVxdWVzdCBmcm9udGJ1ZmZlcl93cml0ZTsKKworCS8qKiBDdXJyZW50IHRp
bGluZyBzdHJpZGUgZm9yIHRoZSBvYmplY3QsIGlmIGl0J3MgdGlsZWQuICovCisJdW5zaWduZWQg
aW50IHRpbGluZ19hbmRfc3RyaWRlOworI2RlZmluZSBGRU5DRV9NSU5JTVVNX1NUUklERSAxMjgg
LyogU2VlIGk5MTVfdGlsaW5nX29rKCkgKi8KKyNkZWZpbmUgVElMSU5HX01BU0sgKEZFTkNFX01J
TklNVU1fU1RSSURFIC0gMSkKKyNkZWZpbmUgU1RSSURFX01BU0sgKH5USUxJTkdfTUFTSykKKwor
CS8qKiBDb3VudCBvZiBWTUEgYWN0dWFsbHkgYm91bmQgYnkgdGhpcyBvYmplY3QgKi8KKwl1bnNp
Z25lZCBpbnQgYmluZF9jb3VudDsKKwl1bnNpZ25lZCBpbnQgYWN0aXZlX2NvdW50OworCS8qKiBD
b3VudCBvZiBob3cgbWFueSBnbG9iYWwgVk1BIGFyZSBjdXJyZW50bHkgcGlubmVkIGZvciB1c2Ug
YnkgSFcgKi8KKwl1bnNpZ25lZCBpbnQgcGluX2dsb2JhbDsKKworCXN0cnVjdCB7CisJCXN0cnVj
dCBtdXRleCBsb2NrOyAvKiBwcm90ZWN0cyB0aGUgcGFnZXMgYW5kIHRoZWlyIHVzZSAqLworCQlh
dG9taWNfdCBwYWdlc19waW5fY291bnQ7CisKKwkJc3RydWN0IHNnX3RhYmxlICpwYWdlczsKKwkJ
dm9pZCAqbWFwcGluZzsKKworCQkvKiBUT0RPOiB3aGFjayBzb21lIG9mIHRoaXMgaW50byB0aGUg
ZXJyb3Igc3RhdGUgKi8KKwkJc3RydWN0IGk5MTVfcGFnZV9zaXplcyB7CisJCQkvKioKKwkJCSAq
IFRoZSBzZyBtYXNrIG9mIHRoZSBwYWdlcyBzZ190YWJsZS4gaS5lIHRoZSBtYXNrIG9mCisJCQkg
KiBvZiB0aGUgbGVuZ3RocyBmb3IgZWFjaCBzZyBlbnRyeS4KKwkJCSAqLworCQkJdW5zaWduZWQg
aW50IHBoeXM7CisKKwkJCS8qKgorCQkJICogVGhlIGd0dCBwYWdlIHNpemVzIHdlIGFyZSBhbGxv
d2VkIHRvIHVzZSBnaXZlbiB0aGUKKwkJCSAqIHNnIG1hc2sgYW5kIHRoZSBzdXBwb3J0ZWQgcGFn
ZSBzaXplcy4gVGhpcyB3aWxsCisJCQkgKiBleHByZXNzIHRoZSBzbWFsbGVzdCB1bml0IHdlIGNh
biB1c2UgZm9yIHRoZSB3aG9sZQorCQkJICogb2JqZWN0LCBhcyB3ZWxsIGFzIHRoZSBsYXJnZXIg
c2l6ZXMgd2UgbWF5IGJlIGFibGUKKwkJCSAqIHRvIHVzZSBvcHBvcnR1bmlzdGljYWxseS4KKwkJ
CSAqLworCQkJdW5zaWduZWQgaW50IHNnOworCisJCQkvKioKKwkJCSAqIFRoZSBhY3R1YWwgZ3R0
IHBhZ2Ugc2l6ZSB1c2FnZS4gU2luY2Ugd2UgY2FuIGhhdmUKKwkJCSAqIG11bHRpcGxlIHZtYSBh
c3NvY2lhdGVkIHdpdGggdGhpcyBvYmplY3Qgd2UgbmVlZCB0bworCQkJICogcHJldmVudCBhbnkg
dHJhbXBsaW5nIG9mIHN0YXRlLCBoZW5jZSBhIGNvcHkgb2YgdGhpcworCQkJICogc3RydWN0IGFs
c28gbGl2ZXMgaW4gZWFjaCB2bWEsIHRoZXJlZm9yZSB0aGUgZ3R0CisJCQkgKiB2YWx1ZSBoZXJl
IHNob3VsZCBvbmx5IGJlIHJlYWQvd3JpdGUgdGhyb3VnaCB0aGUgdm1hLgorCQkJICovCisJCQl1
bnNpZ25lZCBpbnQgZ3R0OworCQl9IHBhZ2Vfc2l6ZXM7CisKKwkJSTkxNV9TRUxGVEVTVF9ERUNM
QVJFKHVuc2lnbmVkIGludCBwYWdlX21hc2spOworCisJCXN0cnVjdCBpOTE1X2dlbV9vYmplY3Rf
cGFnZV9pdGVyIHsKKwkJCXN0cnVjdCBzY2F0dGVybGlzdCAqc2dfcG9zOworCQkJdW5zaWduZWQg
aW50IHNnX2lkeDsgLyogaW4gcGFnZXMsIGJ1dCAzMmJpdCBlZWshICovCisKKwkJCXN0cnVjdCBy
YWRpeF90cmVlX3Jvb3QgcmFkaXg7CisJCQlzdHJ1Y3QgbXV0ZXggbG9jazsgLyogcHJvdGVjdHMg
dGhpcyBjYWNoZSAqLworCQl9IGdldF9wYWdlOworCisJCS8qKgorCQkgKiBFbGVtZW50IHdpdGhp
biBpOTE1LT5tbS51bmJvdW5kX2xpc3Qgb3IgaTkxNS0+bW0uYm91bmRfbGlzdCwKKwkJICogbG9j
a2VkIGJ5IGk5MTUtPm1tLm9ial9sb2NrLgorCQkgKi8KKwkJc3RydWN0IGxpc3RfaGVhZCBsaW5r
OworCisJCS8qKgorCQkgKiBBZHZpY2U6IGFyZSB0aGUgYmFja2luZyBwYWdlcyBwdXJnZWFibGU/
CisJCSAqLworCQl1bnNpZ25lZCBpbnQgbWFkdjoyOworCisJCS8qKgorCQkgKiBUaGlzIGlzIHNl
dCBpZiB0aGUgb2JqZWN0IGhhcyBiZWVuIHdyaXR0ZW4gdG8gc2luY2UgdGhlCisJCSAqIHBhZ2Vz
IHdlcmUgbGFzdCBhY3F1aXJlZC4KKwkJICovCisJCWJvb2wgZGlydHk6MTsKKworCQkvKioKKwkJ
ICogVGhpcyBpcyBzZXQgaWYgdGhlIG9iamVjdCBoYXMgYmVlbiBwaW5uZWQgZHVlIHRvIHVua25v
d24KKwkJICogc3dpenpsaW5nLgorCQkgKi8KKwkJYm9vbCBxdWlya2VkOjE7CisJfSBtbTsKKwor
CS8qKiBCcmVhZGNydW1iIG9mIGxhc3QgcmVuZGVyaW5nIHRvIHRoZSBidWZmZXIuCisJICogVGhl
cmUgY2FuIG9ubHkgYmUgb25lIHdyaXRlciwgYnV0IHdlIGFsbG93IGZvciBtdWx0aXBsZSByZWFk
ZXJzLgorCSAqIElmIHRoZXJlIGlzIGEgd3JpdGVyIHRoYXQgbmVjZXNzYXJpbHkgaW1wbGllcyB0
aGF0IGFsbCBvdGhlcgorCSAqIHJlYWQgcmVxdWVzdHMgYXJlIGNvbXBsZXRlIC0gYnV0IHdlIG1h
eSBvbmx5IGJlIGxhemlseSBjbGVhcmluZworCSAqIHRoZSByZWFkIHJlcXVlc3RzLiBBIHJlYWQg
cmVxdWVzdCBpcyBuYXR1cmFsbHkgdGhlIG1vc3QgcmVjZW50CisJICogcmVxdWVzdCBvbiBhIHJp
bmcsIHNvIHdlIG1heSBoYXZlIHR3byBkaWZmZXJlbnQgd3JpdGUgYW5kIHJlYWQKKwkgKiByZXF1
ZXN0cyBvbiBvbmUgcmluZyB3aGVyZSB0aGUgd3JpdGUgcmVxdWVzdCBpcyBvbGRlciB0aGFuIHRo
ZQorCSAqIHJlYWQgcmVxdWVzdC4gVGhpcyBhbGxvd3MgZm9yIHRoZSBDUFUgdG8gcmVhZCBmcm9t
IGFuIGFjdGl2ZQorCSAqIGJ1ZmZlciBieSBvbmx5IHdhaXRpbmcgZm9yIHRoZSB3cml0ZSB0byBj
b21wbGV0ZS4KKwkgKi8KKwlzdHJ1Y3QgcmVzZXJ2YXRpb25fb2JqZWN0ICpyZXN2OworCisJLyoq
IFJlZmVyZW5jZXMgZnJvbSBmcmFtZWJ1ZmZlcnMsIGxvY2tzIG91dCB0aWxpbmcgY2hhbmdlcy4g
Ki8KKwl1bnNpZ25lZCBpbnQgZnJhbWVidWZmZXJfcmVmZXJlbmNlczsKKworCS8qKiBSZWNvcmQg
b2YgYWRkcmVzcyBiaXQgMTcgb2YgZWFjaCBwYWdlIGF0IGxhc3QgdW5iaW5kLiAqLworCXVuc2ln
bmVkIGxvbmcgKmJpdF8xNzsKKworCXVuaW9uIHsKKwkJc3RydWN0IGk5MTVfZ2VtX3VzZXJwdHIg
eworCQkJdWludHB0cl90IHB0cjsKKworCQkJc3RydWN0IGk5MTVfbW1fc3RydWN0ICptbTsKKwkJ
CXN0cnVjdCBpOTE1X21tdV9vYmplY3QgKm1tdV9vYmplY3Q7CisJCQlzdHJ1Y3Qgd29ya19zdHJ1
Y3QgKndvcms7CisJCX0gdXNlcnB0cjsKKworCQl1bnNpZ25lZCBsb25nIHNjcmF0Y2g7CisKKwkJ
dm9pZCAqZ3Z0X2luZm87CisJfTsKKworCS8qKiBmb3IgcGh5cyBhbGxvY2F0ZWQgb2JqZWN0cyAq
LworCXN0cnVjdCBkcm1fZG1hX2hhbmRsZSAqcGh5c19oYW5kbGU7CisKKwlzdHJ1Y3QgcmVzZXJ2
YXRpb25fb2JqZWN0IF9fYnVpbHRpbl9yZXN2OworfTsKKworc3RhdGljIGlubGluZSBzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCAqCit0b19pbnRlbF9ibyhzdHJ1Y3QgZHJtX2dlbV9vYmplY3Qg
KmdlbSkKK3sKKwkvKiBBc3NlcnQgdGhhdCB0b19pbnRlbF9ibyhOVUxMKSA9PSBOVUxMICovCisJ
QlVJTERfQlVHX09OKG9mZnNldG9mKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0LCBiYXNlKSk7
CisKKwlyZXR1cm4gY29udGFpbmVyX29mKGdlbSwgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qs
IGJhc2UpOworfQorCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3R5cGVzLmgKaW5kZXggZjNmYzJlOGFjYzkwLi4yYzIzMjUwMWQ5NzMgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCkBAIC0yOSw2ICsyOSw3IEBA
CiAjZGVmaW5lIEk5MTVfQ01EX0hBU0hfT1JERVIgOQogCiBzdHJ1Y3QgZG1hX2ZlbmNlOworc3Ry
dWN0IGRybV9pOTE1X2dlbV9vYmplY3Q7CiBzdHJ1Y3QgZHJtX2k5MTVfcmVnX3RhYmxlOwogc3Ry
dWN0IGk5MTVfZ2VtX2NvbnRleHQ7CiBzdHJ1Y3QgaTkxNV9yZXF1ZXN0OwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmgKaW5kZXggMGE2ZWM2MTQ5NmYxLi4wYjllYzhiM2U1ZmEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaApAQCAtODEsNyArODEsNiBAQAogI2luY2x1ZGUgImk5MTVfZ2VtLmgiCiAjaW5j
bHVkZSAiaTkxNV9nZW1fY29udGV4dC5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2ZlbmNlX3JlZy5o
IgotI2luY2x1ZGUgImk5MTVfZ2VtX29iamVjdC5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2d0dC5o
IgogI2luY2x1ZGUgImk5MTVfZ3B1X2Vycm9yLmgiCiAjaW5jbHVkZSAiaTkxNV9yZXF1ZXN0Lmgi
CkBAIC0xMzYsNiArMTM1LDggQEAgYm9vbCBpOTE1X2Vycm9yX2luamVjdGVkKHZvaWQpOwogCV9f
aTkxNV9wcmludGsoaTkxNSwgaTkxNV9lcnJvcl9pbmplY3RlZCgpID8gS0VSTl9ERUJVRyA6IEtF
Uk5fRVJSLCBcCiAJCSAgICAgIGZtdCwgIyNfX1ZBX0FSR1NfXykKIAorc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3Q7CisKIGVudW0gaHBkX3BpbiB7CiAJSFBEX05PTkUgPSAwLAogCUhQRF9UViA9
IEhQRF9OT05FLCAgICAgLyogVFYgaXMga25vd24gdG8gYmUgdW5yZWxpYWJsZSAqLwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fYmF0Y2hfcG9vbC5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fYmF0Y2hfcG9vbC5oCmluZGV4IDU2OTQ3ZGFhYWY2NS4u
ZmVlZWVlYWE1NGQ4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9i
YXRjaF9wb29sLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fYmF0Y2hfcG9v
bC5oCkBAIC05LDYgKzksNyBAQAogCiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAorc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3Q7CiBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzOwogCiBzdHJ1Y3Qg
aTkxNV9nZW1fYmF0Y2hfcG9vbCB7CkBAIC0xOSw3ICsyMCw3IEBAIHN0cnVjdCBpOTE1X2dlbV9i
YXRjaF9wb29sIHsKIHZvaWQgaTkxNV9nZW1fYmF0Y2hfcG9vbF9pbml0KHN0cnVjdCBpOTE1X2dl
bV9iYXRjaF9wb29sICpwb29sLAogCQkJICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKTsKIHZvaWQgaTkxNV9nZW1fYmF0Y2hfcG9vbF9maW5pKHN0cnVjdCBpOTE1X2dlbV9iYXRj
aF9wb29sICpwb29sKTsKLXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0Kgorc3RydWN0IGRybV9p
OTE1X2dlbV9vYmplY3QgKgogaTkxNV9nZW1fYmF0Y2hfcG9vbF9nZXQoc3RydWN0IGk5MTVfZ2Vt
X2JhdGNoX3Bvb2wgKnBvb2wsIHNpemVfdCBzaXplKTsKIAogI2VuZGlmIC8qIEk5MTVfR0VNX0JB
VENIX1BPT0xfSCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1f
Z3R0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuaAppbmRleCAyZmFmYTA0
YzQ1ZWMuLjU5MzA3OWYzMGZiZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW1fZ3R0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmgKQEAg
LTYxLDYgKzYxLDcgQEAKIAogc3RydWN0IGRybV9pOTE1X2ZpbGVfcHJpdmF0ZTsKIHN0cnVjdCBk
cm1faTkxNV9mZW5jZV9yZWc7CitzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdDsKIHN0cnVjdCBp
OTE1X3ZtYTsKIAogdHlwZWRlZiB1MzIgZ2VuNl9wdGVfdDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtX29iamVjdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW1fb2JqZWN0LmgKaW5kZXggY2E5M2E0MGMwYzg3Li4zNjY2YjBjNWY2Y2EgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX29iamVjdC5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtX29iamVjdC5oCkBAIC0xLDMwOCArMSwxOSBAQAogLyoKLSAq
IENvcHlyaWdodCDCqSAyMDE2IEludGVsIENvcnBvcmF0aW9uCi0gKgotICogUGVybWlzc2lvbiBp
cyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5n
IGEKLSAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9u
IGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCi0gKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRo
b3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCi0gKiB0aGUgcmln
aHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3Vi
bGljZW5zZSwKLSAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBw
ZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQotICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRv
IHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKLSAqCi0gKiBUaGUgYWJv
dmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5n
IHRoZSBuZXh0Ci0gKiBwYXJhZ3JhcGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMg
b3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlCi0gKiBTb2Z0d2FyZS4KLSAqCi0gKiBUSEUg
U09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lO
RCwgRVhQUkVTUyBPUgotICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBU
SEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCi0gKiBGSVRORVNTIEZPUiBBIFBBUlRJ
Q1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKLSAq
IFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlN
LCBEQU1BR0VTIE9SIE9USEVSCi0gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9G
IENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORwotICogRlJPTSwgT1VUIE9GIE9S
IElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFM
SU5HUwotICogSU4gVEhFIFNPRlRXQVJFLgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1J
VAogICoKKyAqIENvcHlyaWdodCDCqSAyMDE2IEludGVsIENvcnBvcmF0aW9uCiAgKi8KIAogI2lm
bmRlZiBfX0k5MTVfR0VNX09CSkVDVF9IX18KICNkZWZpbmUgX19JOTE1X0dFTV9PQkpFQ1RfSF9f
CiAKLSNpbmNsdWRlIDxsaW51eC9yZXNlcnZhdGlvbi5oPgotCi0jaW5jbHVkZSA8ZHJtL2RybV92
bWFfbWFuYWdlci5oPgogI2luY2x1ZGUgPGRybS9kcm1fZ2VtLmg+CiAjaW5jbHVkZSA8ZHJtL2Ry
bV9maWxlLmg+CiAjaW5jbHVkZSA8ZHJtL2RybV9kZXZpY2UuaD4KIAogI2luY2x1ZGUgPGRybS9p
OTE1X2RybS5oPgogCi0jaW5jbHVkZSAiaTkxNV9yZXF1ZXN0LmgiCi0jaW5jbHVkZSAiaTkxNV9z
ZWxmdGVzdC5oIgotCi1zdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdDsKLQotLyoKLSAqIHN0cnVj
dCBpOTE1X2x1dF9oYW5kbGUgdHJhY2tzIHRoZSBmYXN0IGxvb2t1cHMgZnJvbSBoYW5kbGUgdG8g
dm1hIHVzZWQKLSAqIGZvciBleGVjYnVmLiBBbHRob3VnaCB3ZSB1c2UgYSByYWRpeHRyZWUgZm9y
IHRoYXQgbWFwcGluZywgaW4gb3JkZXIgdG8KLSAqIHJlbW92ZSB0aGVtIGFzIHRoZSBvYmplY3Qg
b3IgY29udGV4dCBpcyBjbG9zZWQsIHdlIG5lZWQgYSBzZWNvbmRhcnkgbGlzdAotICogYW5kIGEg
dHJhbnNsYXRpb24gZW50cnkgKGk5MTVfbHV0X2hhbmRsZSkuCi0gKi8KLXN0cnVjdCBpOTE1X2x1
dF9oYW5kbGUgewotCXN0cnVjdCBsaXN0X2hlYWQgb2JqX2xpbms7Ci0Jc3RydWN0IGxpc3RfaGVh
ZCBjdHhfbGluazsKLQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OwotCXUzMiBoYW5kbGU7
Ci19OwotCi1zdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdF9vcHMgewotCXVuc2lnbmVkIGludCBm
bGFnczsKLSNkZWZpbmUgSTkxNV9HRU1fT0JKRUNUX0hBU19TVFJVQ1RfUEFHRQlCSVQoMCkKLSNk
ZWZpbmUgSTkxNV9HRU1fT0JKRUNUX0lTX1NIUklOS0FCTEUJQklUKDEpCi0jZGVmaW5lIEk5MTVf
R0VNX09CSkVDVF9JU19QUk9YWQlCSVQoMikKLSNkZWZpbmUgSTkxNV9HRU1fT0JKRUNUX0FTWU5D
X0NBTkNFTAlCSVQoMykKLQotCS8qIEludGVyZmFjZSBiZXR3ZWVuIHRoZSBHRU0gb2JqZWN0IGFu
ZCBpdHMgYmFja2luZyBzdG9yYWdlLgotCSAqIGdldF9wYWdlcygpIGlzIGNhbGxlZCBvbmNlIHBy
aW9yIHRvIHRoZSB1c2Ugb2YgdGhlIGFzc29jaWF0ZWQgc2V0Ci0JICogb2YgcGFnZXMgYmVmb3Jl
IHRvIGJpbmRpbmcgdGhlbSBpbnRvIHRoZSBHVFQsIGFuZCBwdXRfcGFnZXMoKSBpcwotCSAqIGNh
bGxlZCBhZnRlciB3ZSBubyBsb25nZXIgbmVlZCB0aGVtLiBBcyB3ZSBleHBlY3QgdGhlcmUgdG8g
YmUKLQkgKiBhc3NvY2lhdGVkIGNvc3Qgd2l0aCBtaWdyYXRpbmcgcGFnZXMgYmV0d2VlbiB0aGUg
YmFja2luZyBzdG9yYWdlCi0JICogYW5kIG1ha2luZyB0aGVtIGF2YWlsYWJsZSBmb3IgdGhlIEdQ
VSAoZS5nLiBjbGZsdXNoKSwgd2UgbWF5IGhvbGQKLQkgKiBvbnRvIHRoZSBwYWdlcyBhZnRlciB0
aGV5IGFyZSBubyBsb25nZXIgcmVmZXJlbmNlZCBieSB0aGUgR1BVCi0JICogaW4gY2FzZSB0aGV5
IG1heSBiZSB1c2VkIGFnYWluIHNob3J0bHkgKGZvciBleGFtcGxlIG1pZ3JhdGluZyB0aGUKLQkg
KiBwYWdlcyB0byBhIGRpZmZlcmVudCBtZW1vcnkgZG9tYWluIHdpdGhpbiB0aGUgR1RUKS4gcHV0
X3BhZ2VzKCkKLQkgKiB3aWxsIHRoZXJlZm9yZSBtb3N0IGxpa2VseSBiZSBjYWxsZWQgd2hlbiB0
aGUgb2JqZWN0IGl0c2VsZiBpcwotCSAqIGJlaW5nIHJlbGVhc2VkIG9yIHVuZGVyIG1lbW9yeSBw
cmVzc3VyZSAod2hlcmUgd2UgYXR0ZW1wdCB0bwotCSAqIHJlYXAgcGFnZXMgZm9yIHRoZSBzaHJp
bmtlcikuCi0JICovCi0JaW50ICgqZ2V0X3BhZ2VzKShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqKTsKLQl2b2lkICgqcHV0X3BhZ2VzKShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqLCBz
dHJ1Y3Qgc2dfdGFibGUgKik7Ci0KLQlpbnQgKCpwd3JpdGUpKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICosCi0JCSAgICAgIGNvbnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fcHdyaXRlICopOwot
Ci0JaW50ICgqZG1hYnVmX2V4cG9ydCkoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKik7Ci0J
dm9pZCAoKnJlbGVhc2UpKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICopOwotfTsKLQotc3Ry
dWN0IGRybV9pOTE1X2dlbV9vYmplY3QgewotCXN0cnVjdCBkcm1fZ2VtX29iamVjdCBiYXNlOwot
Ci0JY29uc3Qgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Rfb3BzICpvcHM7Ci0KLQlzdHJ1Y3Qg
ewotCQkvKioKLQkJICogQHZtYS5sb2NrOiBwcm90ZWN0IHRoZSBsaXN0L3RyZWUgb2Ygdm1hcwot
CQkgKi8KLQkJc3BpbmxvY2tfdCBsb2NrOwotCi0JCS8qKgotCQkgKiBAdm1hLmxpc3Q6IExpc3Qg
b2YgVk1BcyBiYWNrZWQgYnkgdGhpcyBvYmplY3QKLQkJICoKLQkJICogVGhlIFZNQSBvbiB0aGlz
IGxpc3QgYXJlIG9yZGVyZWQgYnkgdHlwZSwgYWxsIEdHVFQgdm1hIGFyZQotCQkgKiBwbGFjZWQg
YXQgdGhlIGhlYWQgYW5kIGFsbCBwcEdUVCB2bWEgYXJlIHBsYWNlZCBhdCB0aGUgdGFpbC4KLQkJ
ICogVGhlIGRpZmZlcmVudCB0eXBlcyBvZiBHR1RUIHZtYSBhcmUgdW5vcmRlcmVkIGJldHdlZW4K
LQkJICogdGhlbXNlbHZlcywgdXNlIHRoZSBAdm1hLnRyZWUgKHdoaWNoIGhhcyBhIGRlZmluZWQg
b3JkZXIKLQkJICogYmV0d2VlbiBhbGwgVk1BKSB0byBxdWlja2x5IGZpbmQgYW4gZXhhY3QgbWF0
Y2guCi0JCSAqLwotCQlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7Ci0KLQkJLyoqCi0JCSAqIEB2bWEu
dHJlZTogT3JkZXJlZCB0cmVlIG9mIFZNQXMgYmFja2VkIGJ5IHRoaXMgb2JqZWN0Ci0JCSAqCi0J
CSAqIEFsbCBWTUEgY3JlYXRlZCBmb3IgdGhpcyBvYmplY3QgYXJlIHBsYWNlZCBpbiB0aGUgQHZt
YS50cmVlCi0JCSAqIGZvciBmYXN0IHJldHJpZXZhbCB2aWEgYSBiaW5hcnkgc2VhcmNoIGluCi0J
CSAqIGk5MTVfdm1hX2luc3RhbmNlKCkuIFRoZXkgYXJlIGFsc28gYWRkZWQgdG8gQHZtYS5saXN0
IGZvcgotCQkgKiBlYXN5IGl0ZXJhdGlvbi4KLQkJICovCi0JCXN0cnVjdCByYl9yb290IHRyZWU7
Ci0JfSB2bWE7Ci0KLQkvKioKLQkgKiBAbHV0X2xpc3Q6IExpc3Qgb2Ygdm1hIGxvb2t1cCBlbnRy
aWVzIGluIHVzZSBmb3IgdGhpcyBvYmplY3QuCi0JICoKLQkgKiBJZiB0aGlzIG9iamVjdCBpcyBj
bG9zZWQsIHdlIG5lZWQgdG8gcmVtb3ZlIGFsbCBvZiBpdHMgVk1BIGZyb20KLQkgKiB0aGUgZmFz
dCBsb29rdXAgaW5kZXggaW4gYXNzb2NpYXRlZCBjb250ZXh0czsgQGx1dF9saXN0IHByb3ZpZGVz
Ci0JICogdGhpcyB0cmFuc2xhdGlvbiBmcm9tIG9iamVjdCB0byBjb250ZXh0LT5oYW5kbGVzX3Zt
YS4KLQkgKi8KLQlzdHJ1Y3QgbGlzdF9oZWFkIGx1dF9saXN0OwotCi0JLyoqIFN0b2xlbiBtZW1v
cnkgZm9yIHRoaXMgb2JqZWN0LCBpbnN0ZWFkIG9mIGJlaW5nIGJhY2tlZCBieSBzaG1lbS4gKi8K
LQlzdHJ1Y3QgZHJtX21tX25vZGUgKnN0b2xlbjsKLQl1bmlvbiB7Ci0JCXN0cnVjdCByY3VfaGVh
ZCByY3U7Ci0JCXN0cnVjdCBsbGlzdF9ub2RlIGZyZWVkOwotCX07Ci0KLQkvKioKLQkgKiBXaGV0
aGVyIHRoZSBvYmplY3QgaXMgY3VycmVudGx5IGluIHRoZSBHR1RUIG1tYXAuCi0JICovCi0JdW5z
aWduZWQgaW50IHVzZXJmYXVsdF9jb3VudDsKLQlzdHJ1Y3QgbGlzdF9oZWFkIHVzZXJmYXVsdF9s
aW5rOwotCi0Jc3RydWN0IGxpc3RfaGVhZCBiYXRjaF9wb29sX2xpbms7Ci0JSTkxNV9TRUxGVEVT
VF9ERUNMQVJFKHN0cnVjdCBsaXN0X2hlYWQgc3RfbGluayk7Ci0KLQl1bnNpZ25lZCBsb25nIGZs
YWdzOwotCi0JLyoqCi0JICogSGF2ZSB3ZSB0YWtlbiBhIHJlZmVyZW5jZSBmb3IgdGhlIG9iamVj
dCBmb3IgaW5jb21wbGV0ZSBHUFUKLQkgKiBhY3Rpdml0eT8KLQkgKi8KLSNkZWZpbmUgSTkxNV9C
T19BQ1RJVkVfUkVGIDAKLQotCS8qCi0JICogSXMgdGhlIG9iamVjdCB0byBiZSBtYXBwZWQgYXMg
cmVhZC1vbmx5IHRvIHRoZSBHUFUKLQkgKiBPbmx5IGhvbm91cmVkIGlmIGhhcmR3YXJlIGhhcyBy
ZWxldmFudCBwdGUgYml0Ci0JICovCi0JdW5zaWduZWQgaW50IGNhY2hlX2xldmVsOjM7Ci0JdW5z
aWduZWQgaW50IGNhY2hlX2NvaGVyZW50OjI7Ci0jZGVmaW5lIEk5MTVfQk9fQ0FDSEVfQ09IRVJF
TlRfRk9SX1JFQUQgQklUKDApCi0jZGVmaW5lIEk5MTVfQk9fQ0FDSEVfQ09IRVJFTlRfRk9SX1dS
SVRFIEJJVCgxKQotCXVuc2lnbmVkIGludCBjYWNoZV9kaXJ0eToxOwotCi0JLyoqCi0JICogQHJl
YWRfZG9tYWluczogUmVhZCBtZW1vcnkgZG9tYWlucy4KLQkgKgotCSAqIFRoZXNlIG1vbml0b3Ig
d2hpY2ggY2FjaGVzIGNvbnRhaW4gcmVhZC93cml0ZSBkYXRhIHJlbGF0ZWQgdG8gdGhlCi0JICog
b2JqZWN0LiBXaGVuIHRyYW5zaXRpb25pbmcgZnJvbSBvbmUgc2V0IG9mIGRvbWFpbnMgdG8gYW5v
dGhlciwKLQkgKiB0aGUgZHJpdmVyIGlzIGNhbGxlZCB0byBlbnN1cmUgdGhhdCBjYWNoZXMgYXJl
IHN1aXRhYmx5IGZsdXNoZWQgYW5kCi0JICogaW52YWxpZGF0ZWQuCi0JICovCi0JdTE2IHJlYWRf
ZG9tYWluczsKLQotCS8qKgotCSAqIEB3cml0ZV9kb21haW46IENvcnJlc3BvbmRpbmcgdW5pcXVl
IHdyaXRlIG1lbW9yeSBkb21haW4uCi0JICovCi0JdTE2IHdyaXRlX2RvbWFpbjsKLQotCWF0b21p
Y190IGZyb250YnVmZmVyX2JpdHM7Ci0JdW5zaWduZWQgaW50IGZyb250YnVmZmVyX2dndHRfb3Jp
Z2luOyAvKiB3cml0ZSBvbmNlICovCi0Jc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgZnJvbnRi
dWZmZXJfd3JpdGU7Ci0KLQkvKiogQ3VycmVudCB0aWxpbmcgc3RyaWRlIGZvciB0aGUgb2JqZWN0
LCBpZiBpdCdzIHRpbGVkLiAqLwotCXVuc2lnbmVkIGludCB0aWxpbmdfYW5kX3N0cmlkZTsKLSNk
ZWZpbmUgRkVOQ0VfTUlOSU1VTV9TVFJJREUgMTI4IC8qIFNlZSBpOTE1X3RpbGluZ19vaygpICov
Ci0jZGVmaW5lIFRJTElOR19NQVNLIChGRU5DRV9NSU5JTVVNX1NUUklERS0xKQotI2RlZmluZSBT
VFJJREVfTUFTSyAoflRJTElOR19NQVNLKQotCi0JLyoqIENvdW50IG9mIFZNQSBhY3R1YWxseSBi
b3VuZCBieSB0aGlzIG9iamVjdCAqLwotCXVuc2lnbmVkIGludCBiaW5kX2NvdW50OwotCXVuc2ln
bmVkIGludCBhY3RpdmVfY291bnQ7Ci0JLyoqIENvdW50IG9mIGhvdyBtYW55IGdsb2JhbCBWTUEg
YXJlIGN1cnJlbnRseSBwaW5uZWQgZm9yIHVzZSBieSBIVyAqLwotCXVuc2lnbmVkIGludCBwaW5f
Z2xvYmFsOwotCi0Jc3RydWN0IHsKLQkJc3RydWN0IG11dGV4IGxvY2s7IC8qIHByb3RlY3RzIHRo
ZSBwYWdlcyBhbmQgdGhlaXIgdXNlICovCi0JCWF0b21pY190IHBhZ2VzX3Bpbl9jb3VudDsKLQot
CQlzdHJ1Y3Qgc2dfdGFibGUgKnBhZ2VzOwotCQl2b2lkICptYXBwaW5nOwotCi0JCS8qIFRPRE86
IHdoYWNrIHNvbWUgb2YgdGhpcyBpbnRvIHRoZSBlcnJvciBzdGF0ZSAqLwotCQlzdHJ1Y3QgaTkx
NV9wYWdlX3NpemVzIHsKLQkJCS8qKgotCQkJICogVGhlIHNnIG1hc2sgb2YgdGhlIHBhZ2VzIHNn
X3RhYmxlLiBpLmUgdGhlIG1hc2sgb2YKLQkJCSAqIG9mIHRoZSBsZW5ndGhzIGZvciBlYWNoIHNn
IGVudHJ5LgotCQkJICovCi0JCQl1bnNpZ25lZCBpbnQgcGh5czsKLQotCQkJLyoqCi0JCQkgKiBU
aGUgZ3R0IHBhZ2Ugc2l6ZXMgd2UgYXJlIGFsbG93ZWQgdG8gdXNlIGdpdmVuIHRoZQotCQkJICog
c2cgbWFzayBhbmQgdGhlIHN1cHBvcnRlZCBwYWdlIHNpemVzLiBUaGlzIHdpbGwKLQkJCSAqIGV4
cHJlc3MgdGhlIHNtYWxsZXN0IHVuaXQgd2UgY2FuIHVzZSBmb3IgdGhlIHdob2xlCi0JCQkgKiBv
YmplY3QsIGFzIHdlbGwgYXMgdGhlIGxhcmdlciBzaXplcyB3ZSBtYXkgYmUgYWJsZQotCQkJICog
dG8gdXNlIG9wcG9ydHVuaXN0aWNhbGx5LgotCQkJICovCi0JCQl1bnNpZ25lZCBpbnQgc2c7Ci0K
LQkJCS8qKgotCQkJICogVGhlIGFjdHVhbCBndHQgcGFnZSBzaXplIHVzYWdlLiBTaW5jZSB3ZSBj
YW4gaGF2ZQotCQkJICogbXVsdGlwbGUgdm1hIGFzc29jaWF0ZWQgd2l0aCB0aGlzIG9iamVjdCB3
ZSBuZWVkIHRvCi0JCQkgKiBwcmV2ZW50IGFueSB0cmFtcGxpbmcgb2Ygc3RhdGUsIGhlbmNlIGEg
Y29weSBvZiB0aGlzCi0JCQkgKiBzdHJ1Y3QgYWxzbyBsaXZlcyBpbiBlYWNoIHZtYSwgdGhlcmVm
b3JlIHRoZSBndHQKLQkJCSAqIHZhbHVlIGhlcmUgc2hvdWxkIG9ubHkgYmUgcmVhZC93cml0ZSB0
aHJvdWdoIHRoZSB2bWEuCi0JCQkgKi8KLQkJCXVuc2lnbmVkIGludCBndHQ7Ci0JCX0gcGFnZV9z
aXplczsKLQotCQlJOTE1X1NFTEZURVNUX0RFQ0xBUkUodW5zaWduZWQgaW50IHBhZ2VfbWFzayk7
Ci0KLQkJc3RydWN0IGk5MTVfZ2VtX29iamVjdF9wYWdlX2l0ZXIgewotCQkJc3RydWN0IHNjYXR0
ZXJsaXN0ICpzZ19wb3M7Ci0JCQl1bnNpZ25lZCBpbnQgc2dfaWR4OyAvKiBpbiBwYWdlcywgYnV0
IDMyYml0IGVlayEgKi8KLQotCQkJc3RydWN0IHJhZGl4X3RyZWVfcm9vdCByYWRpeDsKLQkJCXN0
cnVjdCBtdXRleCBsb2NrOyAvKiBwcm90ZWN0cyB0aGlzIGNhY2hlICovCi0JCX0gZ2V0X3BhZ2U7
Ci0KLQkJLyoqCi0JCSAqIEVsZW1lbnQgd2l0aGluIGk5MTUtPm1tLnVuYm91bmRfbGlzdCBvciBp
OTE1LT5tbS5ib3VuZF9saXN0LAotCQkgKiBsb2NrZWQgYnkgaTkxNS0+bW0ub2JqX2xvY2suCi0J
CSAqLwotCQlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Ci0KLQkJLyoqCi0JCSAqIEFkdmljZTogYXJl
IHRoZSBiYWNraW5nIHBhZ2VzIHB1cmdlYWJsZT8KLQkJICovCi0JCXVuc2lnbmVkIGludCBtYWR2
OjI7Ci0KLQkJLyoqCi0JCSAqIFRoaXMgaXMgc2V0IGlmIHRoZSBvYmplY3QgaGFzIGJlZW4gd3Jp
dHRlbiB0byBzaW5jZSB0aGUKLQkJICogcGFnZXMgd2VyZSBsYXN0IGFjcXVpcmVkLgotCQkgKi8K
LQkJYm9vbCBkaXJ0eToxOwotCi0JCS8qKgotCQkgKiBUaGlzIGlzIHNldCBpZiB0aGUgb2JqZWN0
IGhhcyBiZWVuIHBpbm5lZCBkdWUgdG8gdW5rbm93bgotCQkgKiBzd2l6emxpbmcuCi0JCSAqLwot
CQlib29sIHF1aXJrZWQ6MTsKLQl9IG1tOwotCi0JLyoqIEJyZWFkY3J1bWIgb2YgbGFzdCByZW5k
ZXJpbmcgdG8gdGhlIGJ1ZmZlci4KLQkgKiBUaGVyZSBjYW4gb25seSBiZSBvbmUgd3JpdGVyLCBi
dXQgd2UgYWxsb3cgZm9yIG11bHRpcGxlIHJlYWRlcnMuCi0JICogSWYgdGhlcmUgaXMgYSB3cml0
ZXIgdGhhdCBuZWNlc3NhcmlseSBpbXBsaWVzIHRoYXQgYWxsIG90aGVyCi0JICogcmVhZCByZXF1
ZXN0cyBhcmUgY29tcGxldGUgLSBidXQgd2UgbWF5IG9ubHkgYmUgbGF6aWx5IGNsZWFyaW5nCi0J
ICogdGhlIHJlYWQgcmVxdWVzdHMuIEEgcmVhZCByZXF1ZXN0IGlzIG5hdHVyYWxseSB0aGUgbW9z
dCByZWNlbnQKLQkgKiByZXF1ZXN0IG9uIGEgcmluZywgc28gd2UgbWF5IGhhdmUgdHdvIGRpZmZl
cmVudCB3cml0ZSBhbmQgcmVhZAotCSAqIHJlcXVlc3RzIG9uIG9uZSByaW5nIHdoZXJlIHRoZSB3
cml0ZSByZXF1ZXN0IGlzIG9sZGVyIHRoYW4gdGhlCi0JICogcmVhZCByZXF1ZXN0LiBUaGlzIGFs
bG93cyBmb3IgdGhlIENQVSB0byByZWFkIGZyb20gYW4gYWN0aXZlCi0JICogYnVmZmVyIGJ5IG9u
bHkgd2FpdGluZyBmb3IgdGhlIHdyaXRlIHRvIGNvbXBsZXRlLgotCSAqLwotCXN0cnVjdCByZXNl
cnZhdGlvbl9vYmplY3QgKnJlc3Y7Ci0KLQkvKiogUmVmZXJlbmNlcyBmcm9tIGZyYW1lYnVmZmVy
cywgbG9ja3Mgb3V0IHRpbGluZyBjaGFuZ2VzLiAqLwotCXVuc2lnbmVkIGludCBmcmFtZWJ1ZmZl
cl9yZWZlcmVuY2VzOwotCi0JLyoqIFJlY29yZCBvZiBhZGRyZXNzIGJpdCAxNyBvZiBlYWNoIHBh
Z2UgYXQgbGFzdCB1bmJpbmQuICovCi0JdW5zaWduZWQgbG9uZyAqYml0XzE3OwotCi0JdW5pb24g
ewotCQlzdHJ1Y3QgaTkxNV9nZW1fdXNlcnB0ciB7Ci0JCQl1aW50cHRyX3QgcHRyOwotCi0JCQlz
dHJ1Y3QgaTkxNV9tbV9zdHJ1Y3QgKm1tOwotCQkJc3RydWN0IGk5MTVfbW11X29iamVjdCAqbW11
X29iamVjdDsKLQkJCXN0cnVjdCB3b3JrX3N0cnVjdCAqd29yazsKLQkJfSB1c2VycHRyOwotCi0J
CXVuc2lnbmVkIGxvbmcgc2NyYXRjaDsKLQotCQl2b2lkICpndnRfaW5mbzsKLQl9OwotCi0JLyoq
IGZvciBwaHlzIGFsbG9jYXRlZCBvYmplY3RzICovCi0Jc3RydWN0IGRybV9kbWFfaGFuZGxlICpw
aHlzX2hhbmRsZTsKLQotCXN0cnVjdCByZXNlcnZhdGlvbl9vYmplY3QgX19idWlsdGluX3Jlc3Y7
Ci19OwotCi1zdGF0aWMgaW5saW5lIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoKLXRvX2lu
dGVsX2JvKHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqZ2VtKQotewotCS8qIEFzc2VydCB0aGF0IHRv
X2ludGVsX2JvKE5VTEwpID09IE5VTEwgKi8KLQlCVUlMRF9CVUdfT04ob2Zmc2V0b2Yoc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QsIGJhc2UpKTsKLQotCXJldHVybiBjb250YWluZXJfb2YoZ2Vt
LCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCwgYmFzZSk7Ci19CisjaW5jbHVkZSAiZ2VtL2k5
MTVfZ2VtX29iamVjdF90eXBlcy5oIgogCiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqaTkx
NV9nZW1fb2JqZWN0X2FsbG9jKHZvaWQpOwogdm9pZCBpOTE1X2dlbV9vYmplY3RfZnJlZShzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKTsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJ
bnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0BA817CADD
	for <lists+intel-gfx@lfdr.de>; Wed, 31 Jul 2019 19:48:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7C8458984E;
	Wed, 31 Jul 2019 17:48:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E227289805
 for <intel-gfx@lists.freedesktop.org>; Wed, 31 Jul 2019 17:48:45 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 31 Jul 2019 10:48:45 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,330,1559545200"; d="scan'208";a="256226054"
Received: from irvmail001.ir.intel.com ([163.33.26.43])
 by orsmga001.jf.intel.com with ESMTP; 31 Jul 2019 10:48:44 -0700
Received: from mwajdecz-MOBL1.ger.corp.intel.com
 (mwajdecz-mobl1.ger.corp.intel.com [172.28.174.50])
 by irvmail001.ir.intel.com (8.14.3/8.13.6/MailSET/Hub) with ESMTP id
 x6VHmg4u016470; Wed, 31 Jul 2019 18:48:43 +0100
From: Michal Wajdeczko <michal.wajdeczko@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 31 Jul 2019 17:48:31 +0000
Message-Id: <20190731174833.22080-2-michal.wajdeczko@intel.com>
X-Mailer: git-send-email 2.21.0.windows.1
In-Reply-To: <20190731174833.22080-1-michal.wajdeczko@intel.com>
References: <20190731174833.22080-1-michal.wajdeczko@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 1/3] drm/i915: Add i915 to
 i915_inject_probe_failure
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2l0aCBpOTE1IGFkZGVkIHRvIGk5MTVfaW5qZWN0X3Byb2JlX2ZhaWx1cmUgd2UgY2FuIHVzZSBk
ZWRpY2F0ZWQKcHJpbnRrIHdoZW4gaW5qZWN0aW5nIGFydGlmaWNpYWwgbG9hZCBmYWlsdXJlLgoK
QWxzbyBtYWtlIHRoaXMgZnVuY3Rpb24gbG9vayBsaWtlIG90aGVyIGk5MTUgZnVuY3Rpb25zIHRo
YXQgcmV0dXJuCmVycm9yIGNvZGUgYW5kIG1ha2UgaXQgbW9yZSBmbGV4aWJsZSB0byByZXR1cm4g
YW55IHByb3ZpZGVkIGVycm9yCmNvZGUgaW5zdGVhZCBvZiBwcmV2aW91c2x5IGFzc3VtZWQgLUVO
T0RFVi4KClNpZ25lZC1vZmYtYnk6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hhbC53YWpkZWN6a29A
aW50ZWwuY29tPgpDYzogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1
cmlvQGludGVsLmNvbT4KQ2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgotLS0KIC4uLi9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb25uZWN0b3IuYyAgICB8ICAy
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgMiAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAgICAgICAgICAgIHwgMjcgKysr
KysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAg
ICAgICAgIHwgMTIgKysrKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jICAg
ICAgICAgICAgICAgfCAxMCArKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5j
ICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3Z0LmMg
ICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5j
ICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93b3BjbS5jICAg
ICAgICAgICAgfCAgMiArLQogOSBmaWxlcyBjaGFuZ2VkLCAzMSBpbnNlcnRpb25zKCspLCAzMCBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Nvbm5lY3Rvci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb25u
ZWN0b3IuYwppbmRleCBkMDE2M2Q4NmM0MmEuLmNmODgyM2NlOTYwNiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb25uZWN0b3IuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Nvbm5lY3Rvci5jCkBAIC0xMTgsNyArMTE4LDcg
QEAgaW50IGludGVsX2Nvbm5lY3Rvcl9yZWdpc3RlcihzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29u
bmVjdG9yKQogCWlmIChyZXQpCiAJCWdvdG8gZXJyOwogCi0JaWYgKGk5MTVfaW5qZWN0X3Byb2Jl
X2ZhaWx1cmUoKSkgeworCWlmIChpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKHRvX2k5MTUoY29u
bmVjdG9yLT5kZXYpKSkgewogCQlyZXQgPSAtRUZBVUxUOwogCQlnb3RvIGVycl9iYWNrbGlnaHQ7
CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2Nz
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCA2NWNi
ZjFkOTExOGQuLjhiZDlhOWFkZjRhNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMKQEAgLTQyNiw3ICs0MjYsNyBAQCBpbnQgaW50ZWxfZW5naW5lc19pbml0X21t
aW8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJV0FSTl9PTihlbmdpbmVfbWFzayAm
CiAJCUdFTk1BU0soQklUU19QRVJfVFlQRShtYXNrKSAtIDEsIEk5MTVfTlVNX0VOR0lORVMpKTsK
IAotCWlmIChpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKCkpCisJaWYgKGk5MTVfaW5qZWN0X3By
b2JlX2ZhaWx1cmUoaTkxNSkpCiAJCXJldHVybiAtRU5PREVWOwogCiAJZm9yIChpID0gMDsgaSA8
IEFSUkFZX1NJWkUoaW50ZWxfZW5naW5lcyk7IGkrKykgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMK
aW5kZXggNzYxNzI2ODE4YTIyLi5jZGJjMzM0NzI2YjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
YwpAQCAtODMsMTkgKzgzLDIwIEBAIHN0YXRpYyBzdHJ1Y3QgZHJtX2RyaXZlciBkcml2ZXI7CiAj
aWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUcpCiBzdGF0aWMgdW5zaWduZWQgaW50
IGk5MTVfcHJvYmVfZmFpbF9jb3VudDsKIAotYm9vbCBfX2k5MTVfaW5qZWN0X3Byb2JlX2ZhaWx1
cmUoY29uc3QgY2hhciAqZnVuYywgaW50IGxpbmUpCitpbnQgX19pOTE1X2luamVjdF9sb2FkX2Vy
cm9yKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBpbnQgZXJyLAorCQkJICAgICBjb25z
dCBjaGFyICpmdW5jLCBpbnQgbGluZSkKIHsKIAlpZiAoaTkxNV9wcm9iZV9mYWlsX2NvdW50ID49
IGk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2ZhaWx1cmUpCi0JCXJldHVybiBmYWxzZTsKKwkJ
cmV0dXJuIDA7CiAKLQlpZiAoKytpOTE1X3Byb2JlX2ZhaWxfY291bnQgPT0gaTkxNV9tb2RwYXJh
bXMuaW5qZWN0X2xvYWRfZmFpbHVyZSkgewotCQlEUk1fSU5GTygiSW5qZWN0aW5nIGZhaWx1cmUg
YXQgY2hlY2twb2ludCAldSBbJXM6JWRdXG4iLAotCQkJIGk5MTVfbW9kcGFyYW1zLmluamVjdF9s
b2FkX2ZhaWx1cmUsIGZ1bmMsIGxpbmUpOwotCQlpOTE1X21vZHBhcmFtcy5pbmplY3RfbG9hZF9m
YWlsdXJlID0gMDsKLQkJcmV0dXJuIHRydWU7Ci0JfQorCWlmICgrK2k5MTVfcHJvYmVfZmFpbF9j
b3VudCA8IGk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2ZhaWx1cmUpCisJCXJldHVybiAwOwog
Ci0JcmV0dXJuIGZhbHNlOworCV9faTkxNV9wcmludGsoaTkxNSwgS0VSTl9JTkZPLAorCQkgICAg
ICAiSW5qZWN0aW5nIGZhaWx1cmUgJWQgYXQgY2hlY2twb2ludCAldSBbJXM6JWRdXG4iLAorCQkg
ICAgICBlcnIsIGk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2ZhaWx1cmUsIGZ1bmMsIGxpbmUp
OworCWk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2ZhaWx1cmUgPSAwOworCXJldHVybiBlcnI7
CiB9CiAKIGJvb2wgaTkxNV9lcnJvcl9pbmplY3RlZCh2b2lkKQpAQCAtNjg3LDcgKzY4OCw3IEBA
IHN0YXRpYyBpbnQgaTkxNV9kcml2ZXJfbW9kZXNldF9wcm9iZShzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2KQogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gZGV2X3ByaXYtPmRybS5wZGV2OwogCWludCBy
ZXQ7CiAKLQlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZSgpKQorCWlmIChpOTE1X2luamVj
dF9wcm9iZV9mYWlsdXJlKGRldl9wcml2KSkKIAkJcmV0dXJuIC1FTk9ERVY7CiAKIAlpZiAoSEFT
X0RJU1BMQVkoZGV2X3ByaXYpKSB7CkBAIC04OTQsNyArODk1LDcgQEAgc3RhdGljIGludCBpOTE1
X2RyaXZlcl9lYXJseV9wcm9iZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7
CiAJaW50IHJldCA9IDA7CiAKLQlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZSgpKQorCWlm
IChpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKGRldl9wcml2KSkKIAkJcmV0dXJuIC1FTk9ERVY7
CiAKIAlpbnRlbF9kZXZpY2VfaW5mb19zdWJwbGF0Zm9ybV9pbml0KGRldl9wcml2KTsKQEAgLTk4
NSw3ICs5ODYsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX21taW9fcHJvYmUoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCWludCByZXQ7CiAKLQlpZiAoaTkxNV9pbmpl
Y3RfcHJvYmVfZmFpbHVyZSgpKQorCWlmIChpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKGRldl9w
cml2KSkKIAkJcmV0dXJuIC1FTk9ERVY7CiAKIAlpZiAoaTkxNV9nZXRfYnJpZGdlX2RldihkZXZf
cHJpdikpCkBAIC0xNTMwLDcgKzE1MzEsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2h3X3By
b2JlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlzdHJ1Y3QgcGNpX2RldiAq
cGRldiA9IGRldl9wcml2LT5kcm0ucGRldjsKIAlpbnQgcmV0OwogCi0JaWYgKGk5MTVfaW5qZWN0
X3Byb2JlX2ZhaWx1cmUoKSkKKwlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZShkZXZfcHJp
dikpCiAJCXJldHVybiAtRU5PREVWOwogCiAJaW50ZWxfZGV2aWNlX2luZm9fcnVudGltZV9pbml0
KGRldl9wcml2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2Lmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDRmNDkyYzA1ZDA2NS4uYTky
ZmNkNWRmNzliIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTEyMiwxOSArMTIyLDIxIEBA
CiAKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVRykKIAotYm9vbCBfX2k5MTVf
aW5qZWN0X3Byb2JlX2ZhaWx1cmUoY29uc3QgY2hhciAqZnVuYywgaW50IGxpbmUpOwotI2RlZmlu
ZSBpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKCkgXAotCV9faTkxNV9pbmplY3RfcHJvYmVfZmFp
bHVyZShfX2Z1bmNfXywgX19MSU5FX18pCi0KK2ludCBfX2k5MTVfaW5qZWN0X2xvYWRfZXJyb3Io
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludCBlcnIsCisJCQkgICAgIGNvbnN0IGNo
YXIgKmZ1bmMsIGludCBsaW5lKTsKKyNkZWZpbmUgaTkxNV9pbmplY3RfbG9hZF9lcnJvcihfaTkx
NSwgX2VycikgXAorCV9faTkxNV9pbmplY3RfbG9hZF9lcnJvcigoX2k5MTUpLCAoX2VyciksIF9f
ZnVuY19fLCBfX0xJTkVfXykKIGJvb2wgaTkxNV9lcnJvcl9pbmplY3RlZCh2b2lkKTsKIAogI2Vs
c2UKIAotI2RlZmluZSBpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKCkgZmFsc2UKKyNkZWZpbmUg
aTkxNV9pbmplY3RfbG9hZF9lcnJvcihfZXJyKSAwCiAjZGVmaW5lIGk5MTVfZXJyb3JfaW5qZWN0
ZWQoKSBmYWxzZQogCiAjZW5kaWYKIAorI2RlZmluZSBpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJl
KGk5MTUpIGk5MTVfaW5qZWN0X2xvYWRfZXJyb3IoKGk5MTUpLCAtRU5PREVWKQorCiAjZGVmaW5l
IGk5MTVfcHJvYmVfZXJyb3IoaTkxNSwgZm10LCAuLi4pCQkJCSAgIFwKIAlfX2k5MTVfcHJpbnRr
KGk5MTUsIGk5MTVfZXJyb3JfaW5qZWN0ZWQoKSA/IEtFUk5fREVCVUcgOiBLRVJOX0VSUiwgXAog
CQkgICAgICBmbXQsICMjX19WQV9BUkdTX18pCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRleCA2
MmVlZmU4NjBiY2QuLmJiMmM5OTFiNDlkNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBAIC0x
NTIwLDE1ICsxNTIwLDEzIEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKIAlpZiAocmV0KQogCQlnb3RvIGVycl9ndDsKIAotCWlmIChpOTE1X2lu
amVjdF9wcm9iZV9mYWlsdXJlKCkpIHsKLQkJcmV0ID0gLUVOT0RFVjsKKwlyZXQgPSBpOTE1X2lu
amVjdF9sb2FkX2Vycm9yKGRldl9wcml2LCAtRU5PREVWKTsKKwlpZiAocmV0KQogCQlnb3RvIGVy
cl9ndDsKLQl9CiAKLQlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZSgpKSB7Ci0JCXJldCA9
IC1FSU87CisJcmV0ID0gaTkxNV9pbmplY3RfbG9hZF9lcnJvcihkZXZfcHJpdiwgLUVJTyk7CisJ
aWYgKHJldCkKIAkJZ290byBlcnJfZ3Q7Ci0JfQogCiAJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9w
dXQoJmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwogCW11dGV4X3VubG9jaygmZGV2
X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9wY2kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMKaW5kZXggYTdl
MWNkZTRhNmQ5Li4yMGU1NjJjZWQ4Y2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcGNpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wY2kuYwpAQCAtOTU5
LDcgKzk1OSw3IEBAIHN0YXRpYyBpbnQgaTkxNV9wY2lfcHJvYmUoc3RydWN0IHBjaV9kZXYgKnBk
ZXYsIGNvbnN0IHN0cnVjdCBwY2lfZGV2aWNlX2lkICplbnQpCiAJaWYgKGVycikKIAkJcmV0dXJu
IGVycjsKIAotCWlmIChpOTE1X2luamVjdF9wcm9iZV9mYWlsdXJlKCkpIHsKKwlpZiAoaTkxNV9p
bmplY3RfcHJvYmVfZmFpbHVyZSh0b19pOTE1KHBjaV9nZXRfZHJ2ZGF0YShwZGV2KSkpKSB7CiAJ
CWk5MTVfcGNpX3JlbW92ZShwZGV2KTsKIAkJcmV0dXJuIC1FTk9ERVY7CiAJfQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3Z0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9ndnQuYwppbmRleCBjNjZiMmQ4YTYyMTkuLjJiNmMwMTYzODdjMiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3Z0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfZ3Z0LmMKQEAgLTk1LDcgKzk1LDcgQEAgaW50IGludGVsX2d2dF9pbml0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAlpbnQgcmV0OwogCi0JaWYgKGk5
MTVfaW5qZWN0X3Byb2JlX2ZhaWx1cmUoKSkKKwlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVy
ZShkZXZfcHJpdikpCiAJCXJldHVybiAtRU5PREVWOwogCiAJaWYgKCFpOTE1X21vZHBhcmFtcy5l
bmFibGVfZ3Z0KSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91bmNv
cmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5jCmluZGV4IDQ3NWFiM2Q0
ZDkxZC4uODhlYjNiNWMyMjZkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF91bmNvcmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91bmNvcmUuYwpAQCAt
MTMzMSw3ICsxMzMxLDcgQEAgc3RhdGljIGludCBfX2Z3X2RvbWFpbl9pbml0KHN0cnVjdCBpbnRl
bF91bmNvcmUgKnVuY29yZSwKIAlHRU1fQlVHX09OKGRvbWFpbl9pZCA+PSBGV19ET01BSU5fSURf
Q09VTlQpOwogCUdFTV9CVUdfT04odW5jb3JlLT5md19kb21haW5bZG9tYWluX2lkXSk7CiAKLQlp
ZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZSgpKQorCWlmIChpOTE1X2luamVjdF9wcm9iZV9m
YWlsdXJlKHVuY29yZS0+aTkxNSkpCiAJCXJldHVybiAtRU5PTUVNOwogCiAJZCA9IGt6YWxsb2Mo
c2l6ZW9mKCpkKSwgR0ZQX0tFUk5FTCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF93b3BjbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd29wY20uYwppbmRl
eCBkOTk3M2MwYjAzODQuLjI5MTg4MTkzN2Q5NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfd29wY20uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93b3Bj
bS5jCkBAIC0xNzcsNyArMTc3LDcgQEAgaW50IGludGVsX3dvcGNtX2luaXQoc3RydWN0IGludGVs
X3dvcGNtICp3b3BjbSkKIAogCUdFTV9CVUdfT04oIXdvcGNtLT5zaXplKTsKIAotCWlmIChpOTE1
X2luamVjdF9wcm9iZV9mYWlsdXJlKCkpCisJaWYgKGk5MTVfaW5qZWN0X3Byb2JlX2ZhaWx1cmUo
aTkxNSkpCiAJCXJldHVybiAtRTJCSUc7CiAKIAlpZiAoZ3VjX2Z3X3NpemUgPj0gd29wY20tPnNp
emUpIHsKLS0gCjIuMTkuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0
b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50
ZWwtZ2Z4

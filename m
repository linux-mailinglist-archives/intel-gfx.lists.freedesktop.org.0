Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 7F60E48BA5
	for <lists+intel-gfx@lfdr.de>; Mon, 17 Jun 2019 20:13:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AD802893A8;
	Mon, 17 Jun 2019 18:13:35 +0000 (UTC)
X-Original-To: Intel-gfx@lists.freedesktop.org
Delivered-To: Intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AC3D38935B
 for <Intel-gfx@lists.freedesktop.org>; Mon, 17 Jun 2019 18:13:23 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 17 Jun 2019 11:13:23 -0700
X-ExtLoop1: 1
Received: from yyosef-mobl.ger.corp.intel.com (HELO localhost.localdomain)
 ([10.252.23.42])
 by fmsmga007.fm.intel.com with ESMTP; 17 Jun 2019 11:13:21 -0700
From: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
To: Intel-gfx@lists.freedesktop.org
Date: Mon, 17 Jun 2019 19:12:26 +0100
Message-Id: <20190617181236.7981-24-tvrtko.ursulin@linux.intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190617181236.7981-1-tvrtko.ursulin@linux.intel.com>
References: <20190617181236.7981-1-tvrtko.ursulin@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 23/33] drm/i915: Convert
 i915_gem_flush_ggtt_writes to intel_gt
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KCkhhdmluZyBp
bnRyb2R1Y2VkIHN0cnVjdCBpbnRlbF9ndCAobmFtZWQgdGhlIGFub255bW91cyBzdHJ1Y3R1cmUg
aW4gaTkxNSkKd2UgY2FuIHN0YXJ0IHVzaW5nIGl0IHRvIGNvbXBhcnRtZW50YWxpemUgb3VyIGNv
ZGUgYmV0dGVyLiBJdCBtYWtlcyBtb3JlCnNlbnNlIGxvZ2ljYWxseSB0byBoYXZlIHRoZSBjb2Rl
IGludGVybmFsbHkgbGlrZSB0aGlzIGFuZCBpdCB3aWxsIGFsc28KaGVscCB3aXRoIGZ1dHVyZSBz
cGxpdCBiZXR3ZWVuIGd0IGFuZCBkaXNwbGF5IGluIGk5MTUuCgp2MjoKICogS2VlcCBnZ3R0IGZs
dXNoIGJlZm9yZSBmYiBvYmogZmx1c2guIChDaHJpcykKClNpZ25lZC1vZmYtYnk6IFR2cnRrbyBV
cnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jICAgIHwgMTIgKysrLS0tCiAuLi4vZHJtL2k5MTUvZ2Vt
L3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMgICAgfCAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3QuYyAgICAgICAgICAgIHwgNDEgKysrKysrKysrKysrKysrKysrKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaCAgICAgICAgICAgIHwgIDIgKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgIHwgIDIgLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgICAgIHwgNDAgLS0tLS0tLS0tLS0tLS0t
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jICAgICAgICAgICAgICAgfCAgMyAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2d0dC5jIHwgIDIgKy0K
IDggZmlsZXMgY2hhbmdlZCwgNTQgaW5zZXJ0aW9ucygrKSwgNTEgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jCmluZGV4IGE0MDQ3YTU4NWM4
Yi4uZjU4ZDQ1YWUxMGQwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fb2JqZWN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29i
amVjdC5jCkBAIC0yMiw2ICsyMiw3IEBACiAgKgogICovCiAKKyNpbmNsdWRlICJndC9pbnRlbF9n
dC5oIgogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaTkxNV9nZW1fY2xmbHVzaC5o
IgogI2luY2x1ZGUgImk5MTVfZ2VtX2NvbnRleHQuaCIKQEAgLTM2Nyw3ICszNjgsNiBAQCB2b2lk
CiBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmosCiAJCQkJICAgdW5zaWduZWQgaW50IGZsdXNoX2RvbWFpbnMpCiB7Ci0Jc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShvYmotPmJhc2UuZGV2KTsK
IAlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKIAogCWFzc2VydF9vYmplY3RfaGVsZChvYmopOwpAQCAt
Mzc3LDE3ICszNzcsMTcgQEAgaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX3dyaXRlX2RvbWFpbihzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCiAJc3dpdGNoIChvYmotPndyaXRlX2RvbWFp
bikgewogCWNhc2UgSTkxNV9HRU1fRE9NQUlOX0dUVDoKLQkJaTkxNV9nZW1fZmx1c2hfZ2d0dF93
cml0ZXMoZGV2X3ByaXYpOwotCi0JCWludGVsX2ZiX29ial9mbHVzaChvYmosCi0JCQkJICAgZmJf
d3JpdGVfb3JpZ2luKG9iaiwgSTkxNV9HRU1fRE9NQUlOX0dUVCkpOwotCiAJCWZvcl9lYWNoX2dn
dHRfdm1hKHZtYSwgb2JqKSB7CiAJCQlpZiAodm1hLT5pb21hcCkKIAkJCQljb250aW51ZTsKIAor
CQkJaW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXModm1hLT52bS0+Z3QpOwogCQkJaTkxNV92bWFf
dW5zZXRfZ2d0dF93cml0ZSh2bWEpOworCQkJYnJlYWs7CiAJCX0KKworCQlpbnRlbF9mYl9vYmpf
Zmx1c2gob2JqLAorCQkJCSAgIGZiX3dyaXRlX29yaWdpbihvYmosIEk5MTVfR0VNX0RPTUFJTl9H
VFQpKTsKIAkJYnJlYWs7CiAKIAljYXNlIEk5MTVfR0VNX0RPTUFJTl9XQzoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMKaW5kZXggNWM4
MWY0YjQ4MTNhLi4yODEyZjdmYTI3ZmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jCkBAIC02LDYgKzYsNyBAQAogCiAjaW5jbHVk
ZSA8bGludXgvcHJpbWVfbnVtYmVycy5oPgogCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKICNp
bmNsdWRlICJndC9pbnRlbF9ndF9wbS5oIgogI2luY2x1ZGUgImh1Z2VfZ2VtX29iamVjdC5oIgog
I2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKQEAgLTE0Myw3ICsxNDQsNyBAQCBzdGF0aWMgaW50
IGNoZWNrX3BhcnRpYWxfbWFwcGluZyhzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAog
CQlpZiAob2Zmc2V0ID49IG9iai0+YmFzZS5zaXplKQogCQkJY29udGludWU7CiAKLQkJaTkxNV9n
ZW1fZmx1c2hfZ2d0dF93cml0ZXModG9faTkxNShvYmotPmJhc2UuZGV2KSk7CisJCWludGVsX2d0
X2ZsdXNoX2dndHRfd3JpdGVzKCZ0b19pOTE1KG9iai0+YmFzZS5kZXYpLT5ndCk7CiAKIAkJcCA9
IGk5MTVfZ2VtX29iamVjdF9nZXRfcGFnZShvYmosIG9mZnNldCA+PiBQQUdFX1NISUZUKTsKIAkJ
Y3B1ID0ga21hcChwKSArIG9mZnNldF9pbl9wYWdlKG9mZnNldCk7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3QuYwppbmRleCA2ZjZmNjFjYzE0MmQuLjI1MDBiZWYwNmFmNCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndC5jCkBAIC0xNTAsMyArMTUwLDQ0IEBAIHZvaWQgaW50ZWxfZ3RfY2hl
Y2tfYW5kX2NsZWFyX2ZhdWx0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCiAJaW50ZWxfZ3RfY2xl
YXJfZXJyb3JfcmVnaXN0ZXJzKGd0LCBBTExfRU5HSU5FUyk7CiB9CisKK3ZvaWQgaW50ZWxfZ3Rf
Zmx1c2hfZ2d0dF93cml0ZXMoc3RydWN0IGludGVsX2d0ICpndCkKK3sKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1OworCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwor
CisJLyoKKwkgKiBObyBhY3R1YWwgZmx1c2hpbmcgaXMgcmVxdWlyZWQgZm9yIHRoZSBHVFQgd3Jp
dGUgZG9tYWluIGZvciByZWFkcworCSAqIGZyb20gdGhlIEdUVCBkb21haW4uIFdyaXRlcyB0byBp
dCAiaW1tZWRpYXRlbHkiIGdvIHRvIG1haW4gbWVtb3J5CisJICogYXMgZmFyIGFzIHdlIGtub3cs
IHNvIHRoZXJlJ3Mgbm8gY2hpcHNldCBmbHVzaC4gSXQgYWxzbyBkb2Vzbid0CisJICogbGFuZCBp
biB0aGUgR1BVIHJlbmRlciBjYWNoZS4KKwkgKgorCSAqIEhvd2V2ZXIsIHdlIGRvIGhhdmUgdG8g
ZW5mb3JjZSB0aGUgb3JkZXIgc28gdGhhdCBhbGwgd3JpdGVzIHRocm91Z2gKKwkgKiB0aGUgR1RU
IGxhbmQgYmVmb3JlIGFueSB3cml0ZXMgdG8gdGhlIGRldmljZSwgc3VjaCBhcyB1cGRhdGVzIHRv
CisJICogdGhlIEdBVFQgaXRzZWxmLgorCSAqCisJICogV2UgYWxzbyBoYXZlIHRvIHdhaXQgYSBi
aXQgZm9yIHRoZSB3cml0ZXMgdG8gbGFuZCBmcm9tIHRoZSBHVFQuCisJICogQW4gdW5jYWNoZWQg
cmVhZCAoaS5lLiBtbWlvKSBzZWVtcyB0byBiZSBpZGVhbCBmb3IgdGhlIHJvdW5kLXRyaXAKKwkg
KiB0aW1pbmcuIFRoaXMgaXNzdWUgaGFzIG9ubHkgYmVlbiBvYnNlcnZlZCB3aGVuIHN3aXRjaGlu
ZyBxdWlja2x5CisJICogYmV0d2VlbiBHVFQgd3JpdGVzIGFuZCBDUFUgcmVhZHMgZnJvbSBpbnNp
ZGUgdGhlIGtlcm5lbCBvbiByZWNlbnQgaHcsCisJICogYW5kIGl0IGFwcGVhcnMgdG8gb25seSBh
ZmZlY3QgZGlzY3JldGUgR1RUIGJsb2NrcyAoaS5lLiBvbiBMTEMKKwkgKiBzeXN0ZW0gYWdlbnRz
IHdlIGNhbm5vdCByZXByb2R1Y2UgdGhpcyBiZWhhdmlvdXIsIHVudGlsIENhbm5vbmxha2UKKwkg
KiB0aGF0IHdhcyEpLgorCSAqLworCisJd21iKCk7CisKKwlpZiAoSU5URUxfSU5GTyhpOTE1KS0+
aGFzX2NvaGVyZW50X2dndHQpCisJCXJldHVybjsKKworCWk5MTVfZ2VtX2NoaXBzZXRfZmx1c2go
aTkxNSk7CisKKwl3aXRoX2ludGVsX3J1bnRpbWVfcG0oJmk5MTUtPnJ1bnRpbWVfcG0sIHdha2Vy
ZWYpIHsKKwkJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3QtPnVuY29yZTsKKworCQlz
cGluX2xvY2tfaXJxKCZ1bmNvcmUtPmxvY2spOworCQlpbnRlbF91bmNvcmVfcG9zdGluZ19yZWFk
X2Z3KHVuY29yZSwKKwkJCQkJICAgICBSSU5HX0hFQUQoUkVOREVSX1JJTkdfQkFTRSkpOworCQlz
cGluX3VubG9ja19pcnEoJnVuY29yZS0+bG9jayk7CisJfQorfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0LmgKaW5kZXggMTg0N2MxODliZDc4Li5kODk0YzExNzgxMTYgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3QuaApAQCAtMTgsNCArMTgsNiBAQCB2b2lkIGludGVsX2d0X2NoZWNrX2Fu
ZF9jbGVhcl9mYXVsdHMoc3RydWN0IGludGVsX2d0ICpndCk7CiB2b2lkIGludGVsX2d0X2NsZWFy
X2Vycm9yX3JlZ2lzdGVycyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQkJCSAgICBpbnRlbF9lbmdp
bmVfbWFza190IGVuZ2luZV9tYXNrKTsKIAordm9pZCBpbnRlbF9ndF9mbHVzaF9nZ3R0X3dyaXRl
cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKKwogI2VuZGlmIC8qIF9fSU5URUxfR1RfSF9fICovCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCAyYzRjOGVlNDEzM2IuLmQ5YzAyYmY0MjA1MiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0yNjAwLDggKzI2MDAsNiBAQCBpbnQgX19tdXN0X2No
ZWNrIGk5MTVfZ2VtX2V2aWN0X2Zvcl9ub2RlKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZt
LAogCQkJCQkgdW5zaWduZWQgaW50IGZsYWdzKTsKIGludCBpOTE1X2dlbV9ldmljdF92bShzdHJ1
Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSk7CiAKLXZvaWQgaTkxNV9nZW1fZmx1c2hfZ2d0dF93
cml0ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLQogLyogYmVsb25ncyBp
biBpOTE1X2dlbV9ndHQuaCAqLwogc3RhdGljIGlubGluZSB2b2lkIGk5MTVfZ2VtX2NoaXBzZXRf
Zmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtLmMKaW5kZXggYWM3NmFjNzgxYWZlLi43OWM3MThmMDUzY2QgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW0uYwpAQCAtMjMyLDQ2ICsyMzIsNiBAQCBpOTE1X2dlbV9jcmVhdGVfaW9jdGwoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJCSAgICAgICAmYXJncy0+c2l6ZSwg
JmFyZ3MtPmhhbmRsZSk7CiB9CiAKLXZvaWQgaTkxNV9nZW1fZmx1c2hfZ2d0dF93cml0ZXMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQotewotCWludGVsX3dha2VyZWZfdCB3YWtl
cmVmOwotCi0JLyoKLQkgKiBObyBhY3R1YWwgZmx1c2hpbmcgaXMgcmVxdWlyZWQgZm9yIHRoZSBH
VFQgd3JpdGUgZG9tYWluIGZvciByZWFkcwotCSAqIGZyb20gdGhlIEdUVCBkb21haW4uIFdyaXRl
cyB0byBpdCAiaW1tZWRpYXRlbHkiIGdvIHRvIG1haW4gbWVtb3J5Ci0JICogYXMgZmFyIGFzIHdl
IGtub3csIHNvIHRoZXJlJ3Mgbm8gY2hpcHNldCBmbHVzaC4gSXQgYWxzbyBkb2Vzbid0Ci0JICog
bGFuZCBpbiB0aGUgR1BVIHJlbmRlciBjYWNoZS4KLQkgKgotCSAqIEhvd2V2ZXIsIHdlIGRvIGhh
dmUgdG8gZW5mb3JjZSB0aGUgb3JkZXIgc28gdGhhdCBhbGwgd3JpdGVzIHRocm91Z2gKLQkgKiB0
aGUgR1RUIGxhbmQgYmVmb3JlIGFueSB3cml0ZXMgdG8gdGhlIGRldmljZSwgc3VjaCBhcyB1cGRh
dGVzIHRvCi0JICogdGhlIEdBVFQgaXRzZWxmLgotCSAqCi0JICogV2UgYWxzbyBoYXZlIHRvIHdh
aXQgYSBiaXQgZm9yIHRoZSB3cml0ZXMgdG8gbGFuZCBmcm9tIHRoZSBHVFQuCi0JICogQW4gdW5j
YWNoZWQgcmVhZCAoaS5lLiBtbWlvKSBzZWVtcyB0byBiZSBpZGVhbCBmb3IgdGhlIHJvdW5kLXRy
aXAKLQkgKiB0aW1pbmcuIFRoaXMgaXNzdWUgaGFzIG9ubHkgYmVlbiBvYnNlcnZlZCB3aGVuIHN3
aXRjaGluZyBxdWlja2x5Ci0JICogYmV0d2VlbiBHVFQgd3JpdGVzIGFuZCBDUFUgcmVhZHMgZnJv
bSBpbnNpZGUgdGhlIGtlcm5lbCBvbiByZWNlbnQgaHcsCi0JICogYW5kIGl0IGFwcGVhcnMgdG8g
b25seSBhZmZlY3QgZGlzY3JldGUgR1RUIGJsb2NrcyAoaS5lLiBvbiBMTEMKLQkgKiBzeXN0ZW0g
YWdlbnRzIHdlIGNhbm5vdCByZXByb2R1Y2UgdGhpcyBiZWhhdmlvdXIsIHVudGlsIENhbm5vbmxh
a2UKLQkgKiB0aGF0IHdhcyEpLgotCSAqLwotCi0Jd21iKCk7Ci0KLQlpZiAoSU5URUxfSU5GTyhk
ZXZfcHJpdiktPmhhc19jb2hlcmVudF9nZ3R0KQotCQlyZXR1cm47Ci0KLQlpOTE1X2dlbV9jaGlw
c2V0X2ZsdXNoKGRldl9wcml2KTsKLQotCXdpdGhfaW50ZWxfcnVudGltZV9wbSgmZGV2X3ByaXYt
PnJ1bnRpbWVfcG0sIHdha2VyZWYpIHsKLQkJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0g
JmRldl9wcml2LT51bmNvcmU7Ci0KLQkJc3Bpbl9sb2NrX2lycSgmdW5jb3JlLT5sb2NrKTsKLQkJ
aW50ZWxfdW5jb3JlX3Bvc3RpbmdfcmVhZF9mdyh1bmNvcmUsCi0JCQkJCSAgICAgUklOR19IRUFE
KFJFTkRFUl9SSU5HX0JBU0UpKTsKLQkJc3Bpbl91bmxvY2tfaXJxKCZ1bmNvcmUtPmxvY2spOwot
CX0KLX0KLQogc3RhdGljIGludAogc2htZW1fcHJlYWQoc3RydWN0IHBhZ2UgKnBhZ2UsIGludCBv
ZmZzZXQsIGludCBsZW4sIGNoYXIgX191c2VyICp1c2VyX2RhdGEsCiAJICAgIGJvb2wgbmVlZHNf
Y2xmbHVzaCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCmluZGV4IGIyOTVjNTMwODVlZS4uNTcxYzZk
ZGQ3ZWFmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKQEAgLTIzLDYgKzIzLDcgQEAKICAqLwog
CiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lLmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIK
IAogI2luY2x1ZGUgImk5MTVfdm1hLmgiCiAKQEAgLTQwOCw3ICs0MDksNyBAQCB2b2lkIGk5MTVf
dm1hX2ZsdXNoX3dyaXRlcyhzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIAlpZiAoIWk5MTVfdm1hX2hh
c19nZ3R0X3dyaXRlKHZtYSkpCiAJCXJldHVybjsKIAotCWk5MTVfZ2VtX2ZsdXNoX2dndHRfd3Jp
dGVzKHZtYS0+dm0tPmk5MTUpOworCWludGVsX2d0X2ZsdXNoX2dndHRfd3JpdGVzKHZtYS0+dm0t
Pmd0KTsKIAogCWk5MTVfdm1hX3Vuc2V0X2dndHRfd3JpdGUodm1hKTsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQuYwppbmRleCAxYTYwYjlmZTgyMjEu
LmQ5NTMxY2I1ZjIzNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3Rz
L2k5MTVfZ2VtX2d0dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1
X2dlbV9ndHQuYwpAQCAtMTE5NSw3ICsxMTk1LDcgQEAgc3RhdGljIGludCBpZ3RfZ2d0dF9wYWdl
KHZvaWQgKmFyZykKIAkJaW93cml0ZTMyKG4sIHZhZGRyICsgbik7CiAJCWlvX21hcHBpbmdfdW5t
YXBfYXRvbWljKHZhZGRyKTsKIAl9Ci0JaTkxNV9nZW1fZmx1c2hfZ2d0dF93cml0ZXMoaTkxNSk7
CisJaW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXMoZ2d0dC0+dm0uZ3QpOwogCiAJaTkxNV9yYW5k
b21fcmVvcmRlcihvcmRlciwgY291bnQsICZwcm5nKTsKIAlmb3IgKG4gPSAwOyBuIDwgY291bnQ7
IG4rKykgewotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVz
a3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9p
bnRlbC1nZng=

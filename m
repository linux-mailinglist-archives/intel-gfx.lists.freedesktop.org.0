Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 22F1A56E49
	for <lists+intel-gfx@lfdr.de>; Wed, 26 Jun 2019 18:04:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 59D676E489;
	Wed, 26 Jun 2019 16:04:02 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 996236E48B
 for <intel-gfx@lists.freedesktop.org>; Wed, 26 Jun 2019 16:04:00 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17033375-1500050 
 for multiple; Wed, 26 Jun 2019 16:45:53 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 26 Jun 2019 16:45:49 +0100
Message-Id: <20190626154549.10066-3-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190626154549.10066-1-chris@chris-wilson.co.uk>
References: <20190626154549.10066-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/3] drm/i915: Lift intel_engines_resume() to
 callers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: matthew.auld@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2luY2UgdGhlIHJlc2V0IHBhdGggd2FudHMgdG8gcmVjb3ZlciB0aGUgZW5naW5lcyBpdHNlbGYs
IGl0IG9ubHkgd2FudHMKdG8gcmVpbml0aWFsaXNlIHRoZSBoYXJkd2FyZSB1c2luZyBpOTE1X2dl
bV9pbml0X2h3KCkuIFB1bGwgdGhlIGNhbGwgdG8KaW50ZWxfZW5naW5lc19yZXN1bWUoKSB0byB0
aGUgbW9kdWxlIGluaXQvcmVzdW1lIHBhdGggc28gd2UgY2FuIGF2b2lkIGl0CmR1cmluZyByZXNl
dC4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jICAgIHwgIDcgKyst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYyB8IDI0IC0tLS0tLS0t
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaCB8ICAyIC0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMgICAgIHwgMjEgKysrKysrLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaCAgICAgfCAgMiArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyAgICAgfCAyMSArKysrKystCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbS5jICAgICAgICAgICB8IDcxICsrKysrKystLS0tLS0tLS0tLS0tLS0t
CiA3IGZpbGVzIGNoYW5nZWQsIDY1IGluc2VydGlvbnMoKyksIDgzIGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMKaW5kZXggNmI3MzBiZDRkNzJmLi40ZDc3
NDM3NmY1YjggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9w
bS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCkBAIC0yNTQs
MTQgKzI1NCwxNSBAQCB2b2lkIGk5MTVfZ2VtX3Jlc3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSkKIAlpOTE1X2dlbV9yZXN0b3JlX2d0dF9tYXBwaW5ncyhpOTE1KTsKIAlpOTE1X2dl
bV9yZXN0b3JlX2ZlbmNlcyhpOTE1KTsKIAorCWlmIChpOTE1X2dlbV9pbml0X2h3KGk5MTUpKQor
CQlnb3RvIGVycl93ZWRnZWQ7CisKIAkvKgogCSAqIEFzIHdlIGRpZG4ndCBmbHVzaCB0aGUga2Vy
bmVsIGNvbnRleHQgYmVmb3JlIHN1c3BlbmQsIHdlIGNhbm5vdAogCSAqIGd1YXJhbnRlZSB0aGF0
IHRoZSBjb250ZXh0IGltYWdlIGlzIGNvbXBsZXRlLiBTbyBsZXQncyBqdXN0IHJlc2V0CiAJICog
aXQgYW5kIHN0YXJ0IGFnYWluLgogCSAqLwotCWludGVsX2d0X3Jlc3VtZSgmaTkxNS0+Z3QpOwot
Ci0JaWYgKGk5MTVfZ2VtX2luaXRfaHcoaTkxNSkpCisJaWYgKGludGVsX2d0X3Jlc3VtZSgmaTkx
NS0+Z3QpKQogCQlnb3RvIGVycl93ZWRnZWQ7CiAKIAlpbnRlbF91Y19yZXN1bWUoaTkxNSk7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCmluZGV4IDUyNTNjMzgyMDM0
ZC4uODRlNDMyYWJlOGUwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
cG0uYwpAQCAtMTQyLDI3ICsxNDIsMyBAQCB2b2lkIGludGVsX2VuZ2luZV9pbml0X19wbShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJaW50ZWxfd2FrZXJlZl9pbml0KCZlbmdp
bmUtPndha2VyZWYpOwogfQotCi1pbnQgaW50ZWxfZW5naW5lc19yZXN1bWUoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpCi17Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwot
CWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOwotCWludCBlcnIgPSAwOwotCi0JaW50ZWxfZ3RfcG1f
Z2V0KCZpOTE1LT5ndCk7Ci0JZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwgaWQpIHsKLQkJ
aW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOwotCQllbmdpbmUtPnNlcmlhbCsrOyAvKiBrZXJu
ZWwgY29udGV4dCBsb3N0ICovCi0JCWVyciA9IGVuZ2luZS0+cmVzdW1lKGVuZ2luZSk7Ci0JCWlu
dGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKLQkJaWYgKGVycikgewotCQkJZGV2X2VycihpOTE1
LT5kcm0uZGV2LAotCQkJCSJGYWlsZWQgdG8gcmVzdGFydCAlcyAoJWQpXG4iLAotCQkJCWVuZ2lu
ZS0+bmFtZSwgZXJyKTsKLQkJCWJyZWFrOwotCQl9Ci0JfQotCWludGVsX2d0X3BtX3B1dCgmaTkx
NS0+Z3QpOwotCi0JcmV0dXJuIGVycjsKLX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX3BtLmgKaW5kZXggN2QwNTdjZGNkOTE5Li4wMTVhYzcyZDdhZDAgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5oCkBAIC0zMSw2ICszMSw0IEBAIHZvaWQg
aW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAogdm9p
ZCBpbnRlbF9lbmdpbmVfaW5pdF9fcG0oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsK
IAotaW50IGludGVsX2VuZ2luZXNfcmVzdW1lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
KTsKLQogI2VuZGlmIC8qIElOVEVMX0VOR0lORV9QTV9IICovCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3RfcG0uYwppbmRleCBlYzZiNjlkMDE0YjYuLjM2YmE4MGU2YTBiNyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jCkBAIC01LDYgKzUsNyBAQAogICovCiAKICNpbmNs
dWRlICJpOTE1X2Rydi5oIgorI2luY2x1ZGUgImludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUg
ImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfcG0uaCIKICNpbmNsdWRlICJpbnRlbF93
YWtlcmVmLmgiCkBAIC0xMjIsMTAgKzEyMywxMSBAQCB2b2lkIGludGVsX2d0X3Nhbml0aXplKHN0
cnVjdCBpbnRlbF9ndCAqZ3QsIGJvb2wgZm9yY2UpCiAJCWludGVsX2VuZ2luZV9yZXNldChlbmdp
bmUsIGZhbHNlKTsKIH0KIAotdm9pZCBpbnRlbF9ndF9yZXN1bWUoc3RydWN0IGludGVsX2d0ICpn
dCkKK2ludCBpbnRlbF9ndF9yZXN1bWUoc3RydWN0IGludGVsX2d0ICpndCkKIHsKIAlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisJaW50
IGVyciA9IDA7CiAKIAkvKgogCSAqIEFmdGVyIHJlc3VtZSwgd2UgbWF5IG5lZWQgdG8gcG9rZSBp
bnRvIHRoZSBwaW5uZWQga2VybmVsCkBAIC0xMzMsOSArMTM1LDEyIEBAIHZvaWQgaW50ZWxfZ3Rf
cmVzdW1lKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJICogT25seSB0aGUga2VybmVsIGNvbnRleHRz
IHNob3VsZCByZW1haW4gcGlubmVkIG92ZXIgc3VzcGVuZCwKIAkgKiBhbGxvd2luZyB1cyB0byBm
aXh1cCB0aGUgdXNlciBjb250ZXh0cyBvbiB0aGVpciBmaXJzdCBwaW4uCiAJICovCisJaW50ZWxf
Z3RfcG1fZ2V0KGd0KTsKIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndC0+aTkxNSwgaWQpIHsK
IAkJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCisJCWludGVsX2VuZ2luZV9wbV9nZXQoZW5n
aW5lKTsKKwogCQljZSA9IGVuZ2luZS0+a2VybmVsX2NvbnRleHQ7CiAJCWlmIChjZSkKIAkJCWNl
LT5vcHMtPnJlc2V0KGNlKTsKQEAgLTE0Myw1ICsxNDgsMTkgQEAgdm9pZCBpbnRlbF9ndF9yZXN1
bWUoc3RydWN0IGludGVsX2d0ICpndCkKIAkJY2UgPSBlbmdpbmUtPnByZWVtcHRfY29udGV4dDsK
IAkJaWYgKGNlKQogCQkJY2UtPm9wcy0+cmVzZXQoY2UpOworCisJCWVuZ2luZS0+c2VyaWFsKys7
IC8qIGtlcm5lbCBjb250ZXh0IGxvc3QgKi8KKwkJZXJyID0gZW5naW5lLT5yZXN1bWUoZW5naW5l
KTsKKworCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CisJCWlmIChlcnIpIHsKKwkJCWRl
dl9lcnIoZ3QtPmk5MTUtPmRybS5kZXYsCisJCQkJIkZhaWxlZCB0byByZXN0YXJ0ICVzICglZClc
biIsCisJCQkJZW5naW5lLT5uYW1lLCBlcnIpOworCQkJYnJlYWs7CisJCX0KIAl9CisJaW50ZWxf
Z3RfcG1fcHV0KGd0KTsKKworCXJldHVybiBlcnI7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfcG0uaAppbmRleCA0ZGJiOTJjZjU4ZDcuLmJhOTYwZTFmYzIwOSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5oCkBAIC0yMiw2ICsyMiw2IEBAIHZvaWQgaW50ZWxfZ3Rf
cG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogdm9pZCBpbnRlbF9ndF9wbV9pbml0X2Vhcmx5
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogCiB2b2lkIGludGVsX2d0X3Nhbml0aXplKHN0cnVjdCBp
bnRlbF9ndCAqZ3QsIGJvb2wgZm9yY2UpOwotdm9pZCBpbnRlbF9ndF9yZXN1bWUoc3RydWN0IGlu
dGVsX2d0ICpndCk7CitpbnQgaW50ZWxfZ3RfcmVzdW1lKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwog
CiAjZW5kaWYgLyogSU5URUxfR1RfUE1fSCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jl
c2V0LmMKaW5kZXggZTdjYmQ5Y2Y4NWMxLi5hZGZkYjkwODU4N2YgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmVzZXQuYwpAQCAtOTQ5LDYgKzk0OSwyMSBAQCBzdGF0aWMgaW50IGRvX3Jl
c2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCXJldHVybiBndF9yZXNldChpOTE1
LCBzdGFsbGVkX21hc2spOwogfQogCitzdGF0aWMgaW50IHJlc3VtZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51
bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisJaW50IHJldDsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdp
bmUsIGk5MTUsIGlkKSB7CisJCXJldCA9IGVuZ2luZS0+cmVzdW1lKGVuZ2luZSk7CisJCWlmIChy
ZXQpCisJCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOworfQorCiAvKioKICAqIGk5MTVf
cmVzZXQgLSByZXNldCBjaGlwIGFmdGVyIGEgaGFuZwogICogQGk5MTU6ICNkcm1faTkxNV9wcml2
YXRlIHRvIHJlc2V0CkBAIC0xMDIzLDkgKzEwMzgsMTMgQEAgdm9pZCBpOTE1X3Jlc2V0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCWlmIChyZXQpIHsKIAkJRFJNX0VSUk9SKCJGYWls
ZWQgdG8gaW5pdGlhbGlzZSBIVyBmb2xsb3dpbmcgcmVzZXQgKCVkKVxuIiwKIAkJCSAgcmV0KTsK
LQkJZ290byBlcnJvcjsKKwkJZ290byB0YWludDsKIAl9CiAKKwlyZXQgPSByZXN1bWUoaTkxNSk7
CisJaWYgKHJldCkKKwkJZ290byB0YWludDsKKwogCWk5MTVfcXVldWVfaGFuZ2NoZWNrKGk5MTUp
OwogCiBmaW5pc2g6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRleCBkZWVjYmUxMjhlNWIuLmI3
ZjI5MGI3N2Y4ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBAIC00Niw3ICs0Niw2IEBACiAj
aW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2lvY3Rscy5oIgogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9w
bS5oIgogI2luY2x1ZGUgImdlbS9pOTE1X2dlbWZzLmgiCi0jaW5jbHVkZSAiZ3QvaW50ZWxfZW5n
aW5lX3BtLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKICNpbmNsdWRlICJndC9pbnRlbF9n
dF9wbS5oIgogI2luY2x1ZGUgImd0L2ludGVsX21vY3MuaCIKQEAgLTExOTIsMTIgKzExOTEsMTcg
QEAgc3RhdGljIHZvaWQgaW5pdF91bnVzZWRfcmluZ3Moc3RydWN0IGludGVsX2d0ICpndCkKIAl9
CiB9CiAKLXN0YXRpYyBpbnQgaW5pdF9odyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoraW50IGk5MTVf
Z2VtX2luaXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0Jc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBndC0+aTkxNTsKLQlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1
bmNvcmUgPSBndC0+dW5jb3JlOworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZpOTE1
LT51bmNvcmU7CisJc3RydWN0IGludGVsX2d0ICpndCA9ICZpOTE1LT5ndDsKIAlpbnQgcmV0Owog
CisJQlVHX09OKCFpOTE1LT5rZXJuZWxfY29udGV4dCk7CisJcmV0ID0gaTkxNV90ZXJtaW5hbGx5
X3dlZGdlZChpOTE1KTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCiAJZ3QtPmxhc3RfaW5p
dF90aW1lID0ga3RpbWVfZ2V0KCk7CiAKIAkvKiBEb3VibGUgbGF5ZXIgc2VjdXJpdHkgYmxhbmtl
dCwgc2VlIGk5MTVfZ2VtX2luaXQoKSAqLwpAQCAtMTI0OCw1MSArMTI1MiwxMCBAQCBzdGF0aWMg
aW50IGluaXRfaHcoc3RydWN0IGludGVsX2d0ICpndCkKIAogCWludGVsX21vY3NfaW5pdF9sM2Nj
X3RhYmxlKGd0KTsKIAotCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KHVuY29yZSwgRk9SQ0VX
QUtFX0FMTCk7Ci0KLQlyZXR1cm4gMDsKLQotb3V0OgotCWludGVsX3VuY29yZV9mb3JjZXdha2Vf
cHV0KHVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7Ci0KLQlyZXR1cm4gcmV0OwotfQotCi1pbnQgaTkx
NV9nZW1faW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKLXsKLQlzdHJ1Y3Qg
aW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmaTkxNS0+dW5jb3JlOwotCWludCByZXQ7Ci0KLQlCVUdf
T04oIWk5MTUtPmtlcm5lbF9jb250ZXh0KTsKLQlyZXQgPSBpOTE1X3Rlcm1pbmFsbHlfd2VkZ2Vk
KGk5MTUpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQkvKiBEb3VibGUgbGF5ZXIgc2Vj
dXJpdHkgYmxhbmtldCwgc2VlIGk5MTVfZ2VtX2luaXQoKSAqLwotCWludGVsX3VuY29yZV9mb3Jj
ZXdha2VfZ2V0KHVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7Ci0KLQlyZXQgPSBpbml0X2h3KCZpOTE1
LT5ndCk7Ci0JaWYgKHJldCkKLQkJZ290byBlcnJfaW5pdDsKLQotCS8qIE9ubHkgd2hlbiB0aGUg
SFcgaXMgcmUtaW5pdGlhbGlzZWQsIGNhbiB3ZSByZXBsYXkgdGhlIHJlcXVlc3RzICovCi0JcmV0
ID0gaW50ZWxfZW5naW5lc19yZXN1bWUoaTkxNSk7Ci0JaWYgKHJldCkKLQkJZ290byBlcnJfZW5n
aW5lczsKLQotCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KHVuY29yZSwgRk9SQ0VXQUtFX0FM
TCk7Ci0KIAlpbnRlbF9lbmdpbmVzX3NldF9zY2hlZHVsZXJfY2FwcyhpOTE1KTsKIAotCXJldHVy
biAwOwotCi1lcnJfZW5naW5lczoKLQlpbnRlbF91Y19maW5pX2h3KGk5MTUpOwotZXJyX2luaXQ6
CitvdXQ6CiAJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQodW5jb3JlLCBGT1JDRVdBS0VfQUxM
KTsKLQotCWludGVsX2VuZ2luZXNfc2V0X3NjaGVkdWxlcl9jYXBzKGk5MTUpOwotCiAJcmV0dXJu
IHJldDsKIH0KIApAQCAtMTUyNCw2ICsxNDg3LDExIEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpZiAocmV0KQogCQlnb3RvIGVycl91Y19p
bml0OwogCisJLyogT25seSB3aGVuIHRoZSBIVyBpcyByZS1pbml0aWFsaXNlZCwgY2FuIHdlIHJl
cGxheSB0aGUgcmVxdWVzdHMgKi8KKwlyZXQgPSBpbnRlbF9ndF9yZXN1bWUoJmRldl9wcml2LT5n
dCk7CisJaWYgKHJldCkKKwkJZ290byBlcnJfaW5pdF9odzsKKwogCS8qCiAJICogRGVzcGl0ZSBp
dHMgbmFtZSBpbnRlbF9pbml0X2Nsb2NrX2dhdGluZyBhcHBsaWVzIGJvdGggZGlzcGxheQogCSAq
IGNsb2NrIGdhdGluZyB3b3JrYXJvdW5kczsgR1QgbW1pbyB3b3JrYXJvdW5kcyBhbmQgdGhlIG9j
Y2FzaW9uYWwKQEAgLTE1MzcsMjAgKzE1MDUsMjAgQEAgaW50IGk5MTVfZ2VtX2luaXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiAJcmV0ID0gaW50ZWxfZW5naW5lc192ZXJp
Znlfd29ya2Fyb3VuZHMoZGV2X3ByaXYpOwogCWlmIChyZXQpCi0JCWdvdG8gZXJyX2luaXRfaHc7
CisJCWdvdG8gZXJyX2d0OwogCiAJcmV0ID0gX19pbnRlbF9lbmdpbmVzX3JlY29yZF9kZWZhdWx0
cyhkZXZfcHJpdik7CiAJaWYgKHJldCkKLQkJZ290byBlcnJfaW5pdF9odzsKKwkJZ290byBlcnJf
Z3Q7CiAKIAlpZiAoaTkxNV9pbmplY3RfbG9hZF9mYWlsdXJlKCkpIHsKIAkJcmV0ID0gLUVOT0RF
VjsKLQkJZ290byBlcnJfaW5pdF9odzsKKwkJZ290byBlcnJfZ3Q7CiAJfQogCiAJaWYgKGk5MTVf
aW5qZWN0X2xvYWRfZmFpbHVyZSgpKSB7CiAJCXJldCA9IC1FSU87Ci0JCWdvdG8gZXJyX2luaXRf
aHc7CisJCWdvdG8gZXJyX2d0OwogCX0KIAogCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KCZk
ZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKQEAgLTE1NjQsNyArMTUzMiw3IEBAIGlu
dCBpOTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkgKiBI
VyBhcyBpcnJldmlzaWJseSB3ZWRnZWQsIGJ1dCBrZWVwIGVub3VnaCBzdGF0ZSBhcm91bmQgdGhh
dCB0aGUKIAkgKiBkcml2ZXIgZG9lc24ndCBleHBsb2RlIGR1cmluZyBydW50aW1lLgogCSAqLwot
ZXJyX2luaXRfaHc6CitlcnJfZ3Q6CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVj
dF9tdXRleCk7CiAKIAlpOTE1X2dlbV9zZXRfd2VkZ2VkKGRldl9wcml2KTsKQEAgLTE1NzQsNiAr
MTU0Miw3IEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAlpOTE1X2dlbV9kcmFpbl93b3JrcXVldWUoZGV2X3ByaXYpOwogCiAJbXV0ZXhfbG9j
aygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOworZXJyX2luaXRfaHc6CiAJaW50ZWxfdWNf
ZmluaV9odyhkZXZfcHJpdik7CiBlcnJfdWNfaW5pdDoKIAlpbnRlbF91Y19maW5pKGRldl9wcml2
KTsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwt
Z2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 47C70F91B7
	for <lists+intel-gfx@lfdr.de>; Tue, 12 Nov 2019 15:15:32 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 820E86EAE7;
	Tue, 12 Nov 2019 14:15:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id ECF7B6EAE7
 for <intel-gfx@lists.freedesktop.org>; Tue, 12 Nov 2019 14:15:29 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Nov 2019 06:15:29 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,296,1569308400"; d="scan'208";a="194326275"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga007.jf.intel.com with SMTP; 12 Nov 2019 06:15:27 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 12 Nov 2019 16:15:27 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 12 Nov 2019 16:15:01 +0200
Message-Id: <20191112141503.1116-9-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191112141503.1116-1-ville.syrjala@linux.intel.com>
References: <20191112141503.1116-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/10] drm/i915: s/intel_crtc/crtc/ in
 .crtc_enable() and .crtc_disable()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkdl
dCByaWQgb2YgdGhlIGhvcnJpYmxlIGFsaWFzaW5nIGRybV9jcnRjIGFuZCBpbnRlbF9jcnRjIHZh
cmlhYmxlcwppbiB0aGUgY3J0YyBlbmFibGUvZGlzYWJsZSBob29rcy4KClNpZ25lZC1vZmYtYnk6
IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgfCAxNDIgKysrKysrKysr
LS0tLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDY1IGluc2VydGlvbnMoKyksIDc3IGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5k
ZXggNmFmZGJmYmIzMjY0Li5iMDkxYjkyYTY3N2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC02NDYzLDEzICs2NDYzLDExIEBAIHN0YXRpYyB2
b2lkIGludGVsX2Rpc2FibGVfcHJpbWFyeV9wbGFuZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0CiBzdGF0aWMgdm9pZCBpcm9ubGFrZV9jcnRjX2VuYWJsZShzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJCQkJIHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlKQogewotCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IHBpcGVfY29uZmlnLT51
YXBpLmNydGM7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMtPmRldjsKLQlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7Ci0Jc3RydWN0IGludGVs
X2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKGNydGMpOwotCWVudW0gcGlwZSBwaXBl
ID0gaW50ZWxfY3J0Yy0+cGlwZTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVs
X2NydGMocGlwZV9jb25maWctPnVhcGkuY3J0Yyk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CisJZW51bSBwaXBlIHBpcGUgPSBj
cnRjLT5waXBlOwogCi0JaWYgKFdBUk5fT04oaW50ZWxfY3J0Yy0+YWN0aXZlKSkKKwlpZiAoV0FS
Tl9PTihjcnRjLT5hY3RpdmUpKQogCQlyZXR1cm47CiAKIAkvKgpAQCAtNjUwMSw5ICs2NDk5LDkg
QEAgc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKnBpcGVfY29uZmlnLAogCiAJaXJvbmxha2Vfc2V0X3BpcGVjb25mKHBpcGVfY29uZmlnKTsK
IAotCWludGVsX2NydGMtPmFjdGl2ZSA9IHRydWU7CisJY3J0Yy0+YWN0aXZlID0gdHJ1ZTsKIAot
CWludGVsX2VuY29kZXJzX3ByZV9lbmFibGUoc3RhdGUsIGludGVsX2NydGMpOworCWludGVsX2Vu
Y29kZXJzX3ByZV9lbmFibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKHBpcGVfY29uZmlnLT5oYXNf
cGNoX2VuY29kZXIpIHsKIAkJLyogTm90ZTogRkRJIFBMTCBlbmFibGluZyBfbXVzdF8gYmUgZG9u
ZSBiZWZvcmUgd2UgZW5hYmxlIHRoZQpAQCAtNjUyNyw3ICs2NTI1LDcgQEAgc3RhdGljIHZvaWQg
aXJvbmxha2VfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmln
LAogCWludGVsX2Rpc2FibGVfcHJpbWFyeV9wbGFuZShwaXBlX2NvbmZpZyk7CiAKIAlpZiAoZGV2
X3ByaXYtPmRpc3BsYXkuaW5pdGlhbF93YXRlcm1hcmtzKQotCQlkZXZfcHJpdi0+ZGlzcGxheS5p
bml0aWFsX3dhdGVybWFya3Moc3RhdGUsIGludGVsX2NydGMpOworCQlkZXZfcHJpdi0+ZGlzcGxh
eS5pbml0aWFsX3dhdGVybWFya3Moc3RhdGUsIGNydGMpOwogCWludGVsX2VuYWJsZV9waXBlKHBp
cGVfY29uZmlnKTsKIAogCWlmIChwaXBlX2NvbmZpZy0+aGFzX3BjaF9lbmNvZGVyKQpAQCAtNjUz
NSw3ICs2NTMzLDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0Y19lbmFibGUoc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnLAogCiAJaW50ZWxfY3J0Y192Ymxhbmtfb24ocGlw
ZV9jb25maWcpOwogCi0JaW50ZWxfZW5jb2RlcnNfZW5hYmxlKHN0YXRlLCBpbnRlbF9jcnRjKTsK
KwlpbnRlbF9lbmNvZGVyc19lbmFibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKEhBU19QQ0hfQ1BU
KGRldl9wcml2KSkKIAkJY3B0X3ZlcmlmeV9tb2Rlc2V0KGRldl9wcml2LCBwaXBlKTsKQEAgLTY1
OTYsMjIgKzY1OTQsMjEgQEAgc3RhdGljIHZvaWQgaWNsX3BpcGVfbWJ1c19lbmFibGUoc3RydWN0
IGludGVsX2NydGMgKmNydGMpCiBzdGF0aWMgdm9pZCBoYXN3ZWxsX2NydGNfZW5hYmxlKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAkJCQlzdHJ1Y3QgaW50ZWxfYXRvbWlj
X3N0YXRlICpzdGF0ZSkKIHsKLQlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBwaXBlX2NvbmZpZy0+
dWFwaS5jcnRjOwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
Y3J0Yy0+ZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2Ny
dGMoY3J0Yyk7Ci0JZW51bSBwaXBlIHBpcGUgPSBpbnRlbF9jcnRjLT5waXBlLCBoc3dfd29ya2Fy
b3VuZF9waXBlOworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhwaXBl
X2NvbmZpZy0+dWFwaS5jcnRjKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKKwllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGUs
IGhzd193b3JrYXJvdW5kX3BpcGU7CiAJZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVyID0g
cGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyOwogCWJvb2wgcHNsX2Nsa2dhdGVfd2E7CiAKLQlp
ZiAoV0FSTl9PTihpbnRlbF9jcnRjLT5hY3RpdmUpKQorCWlmIChXQVJOX09OKGNydGMtPmFjdGl2
ZSkpCiAJCXJldHVybjsKIAotCWludGVsX2VuY29kZXJzX3ByZV9wbGxfZW5hYmxlKHN0YXRlLCBp
bnRlbF9jcnRjKTsKKwlpbnRlbF9lbmNvZGVyc19wcmVfcGxsX2VuYWJsZShzdGF0ZSwgY3J0Yyk7
CiAKIAlpZiAocGlwZV9jb25maWctPnNoYXJlZF9kcGxsKQogCQlpbnRlbF9lbmFibGVfc2hhcmVk
X2RwbGwocGlwZV9jb25maWcpOwogCi0JaW50ZWxfZW5jb2RlcnNfcHJlX2VuYWJsZShzdGF0ZSwg
aW50ZWxfY3J0Yyk7CisJaW50ZWxfZW5jb2RlcnNfcHJlX2VuYWJsZShzdGF0ZSwgY3J0Yyk7CiAK
IAlpZiAoaW50ZWxfY3J0Y19oYXNfZHBfZW5jb2RlcihwaXBlX2NvbmZpZykpCiAJCWludGVsX2Rw
X3NldF9tX24ocGlwZV9jb25maWcsIE0xX04xKTsKQEAgLTY2NDEsNyArNjYzOCw3IEBAIHN0YXRp
YyB2b2lkIGhhc3dlbGxfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVf
Y29uZmlnLAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDkgfHwgSVNfQlJPQURXRUxMKGRl
dl9wcml2KSkKIAkJYmR3X3NldF9waXBlbWlzYyhwaXBlX2NvbmZpZyk7CiAKLQlpbnRlbF9jcnRj
LT5hY3RpdmUgPSB0cnVlOworCWNydGMtPmFjdGl2ZSA9IHRydWU7CiAKIAkvKiBEaXNwbGF5IFdB
ICMxMTgwOiBXYURpc2FibGVTY2FsYXJDbG9ja0dhdGluZzogZ2xrLCBjbmwgKi8KIAlwc2xfY2xr
Z2F0ZV93YSA9IChJU19HRU1JTklMQUtFKGRldl9wcml2KSB8fCBJU19DQU5OT05MQUtFKGRldl9w
cml2KSkgJiYKQEAgLTY2NjUsMTYgKzY2NjIsMTYgQEAgc3RhdGljIHZvaWQgaGFzd2VsbF9jcnRj
X2VuYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJCWludGVsX2Rp
c2FibGVfcHJpbWFyeV9wbGFuZShwaXBlX2NvbmZpZyk7CiAKIAlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSAxMSkKLQkJaWNsX3NldF9waXBlX2NoaWNrZW4oaW50ZWxfY3J0Yyk7CisJCWljbF9z
ZXRfcGlwZV9jaGlja2VuKGNydGMpOwogCiAJaWYgKCF0cmFuc2NvZGVyX2lzX2RzaShjcHVfdHJh
bnNjb2RlcikpCiAJCWludGVsX2RkaV9lbmFibGVfdHJhbnNjb2Rlcl9mdW5jKHBpcGVfY29uZmln
KTsKIAogCWlmIChkZXZfcHJpdi0+ZGlzcGxheS5pbml0aWFsX3dhdGVybWFya3MpCi0JCWRldl9w
cml2LT5kaXNwbGF5LmluaXRpYWxfd2F0ZXJtYXJrcyhzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJCWRl
dl9wcml2LT5kaXNwbGF5LmluaXRpYWxfd2F0ZXJtYXJrcyhzdGF0ZSwgY3J0Yyk7CiAKIAlpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkKLQkJaWNsX3BpcGVfbWJ1c19lbmFibGUoaW50ZWxf
Y3J0Yyk7CisJCWljbF9waXBlX21idXNfZW5hYmxlKGNydGMpOwogCiAJLyogWFhYOiBEbyB0aGUg
cGlwZSBhc3NlcnRpb25zIGF0IHRoZSByaWdodCBwbGFjZSBmb3IgQlhUIERTSS4gKi8KIAlpZiAo
IXRyYW5zY29kZXJfaXNfZHNpKGNwdV90cmFuc2NvZGVyKSkKQEAgLTY2ODgsNyArNjY4NSw3IEBA
IHN0YXRpYyB2b2lkIGhhc3dlbGxfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KnBpcGVfY29uZmlnLAogCiAJaW50ZWxfY3J0Y192Ymxhbmtfb24ocGlwZV9jb25maWcpOwogCi0J
aW50ZWxfZW5jb2RlcnNfZW5hYmxlKHN0YXRlLCBpbnRlbF9jcnRjKTsKKwlpbnRlbF9lbmNvZGVy
c19lbmFibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKHBzbF9jbGtnYXRlX3dhKSB7CiAJCWludGVs
X3dhaXRfZm9yX3ZibGFuayhkZXZfcHJpdiwgcGlwZSk7CkBAIC02NzIyLDExICs2NzE5LDkgQEAg
c3RhdGljIHZvaWQgaXJvbmxha2VfcGZpdF9kaXNhYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpvbGRfY3J0Y19zdGF0ZSkKIHN0YXRpYyB2b2lkIGlyb25sYWtlX2NydGNfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUsCiAJCQkJICBzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKLQlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBv
bGRfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjOwotCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRj
LT5kZXY7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYp
OwotCXN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsK
LQllbnVtIHBpcGUgcGlwZSA9IGludGVsX2NydGMtPnBpcGU7CisJc3RydWN0IGludGVsX2NydGMg
KmNydGMgPSB0b19pbnRlbF9jcnRjKG9sZF9jcnRjX3N0YXRlLT51YXBpLmNydGMpOworCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwor
CWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKIAogCS8qCiAJICogU29tZXRpbWVzIHNwdXJp
b3VzIENQVSBwaXBlIHVuZGVycnVucyBoYXBwZW4gd2hlbiB0aGUKQEAgLTY3MzYsMTggKzY3MzEs
MTggQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0Y19kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKIAlpbnRlbF9zZXRfY3B1X2ZpZm9fdW5kZXJydW5fcmVw
b3J0aW5nKGRldl9wcml2LCBwaXBlLCBmYWxzZSk7CiAJaW50ZWxfc2V0X3BjaF9maWZvX3VuZGVy
cnVuX3JlcG9ydGluZyhkZXZfcHJpdiwgcGlwZSwgZmFsc2UpOwogCi0JaW50ZWxfZW5jb2RlcnNf
ZGlzYWJsZShzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJaW50ZWxfZW5jb2RlcnNfZGlzYWJsZShzdGF0
ZSwgY3J0Yyk7CiAKLQlpbnRlbF9jcnRjX3ZibGFua19vZmYoaW50ZWxfY3J0Yyk7CisJaW50ZWxf
Y3J0Y192Ymxhbmtfb2ZmKGNydGMpOwogCiAJaW50ZWxfZGlzYWJsZV9waXBlKG9sZF9jcnRjX3N0
YXRlKTsKIAogCWlyb25sYWtlX3BmaXRfZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAKIAlpZiAo
b2xkX2NydGNfc3RhdGUtPmhhc19wY2hfZW5jb2RlcikKLQkJaXJvbmxha2VfZmRpX2Rpc2FibGUo
aW50ZWxfY3J0Yyk7CisJCWlyb25sYWtlX2ZkaV9kaXNhYmxlKGNydGMpOwogCi0JaW50ZWxfZW5j
b2RlcnNfcG9zdF9kaXNhYmxlKHN0YXRlLCBpbnRlbF9jcnRjKTsKKwlpbnRlbF9lbmNvZGVyc19w
b3N0X2Rpc2FibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKG9sZF9jcnRjX3N0YXRlLT5oYXNfcGNo
X2VuY29kZXIpIHsKIAkJaXJvbmxha2VfZGlzYWJsZV9wY2hfdHJhbnNjb2RlcihkZXZfcHJpdiwg
cGlwZSk7CkBAIC02NzcwLDcgKzY3NjUsNyBAQCBzdGF0aWMgdm9pZCBpcm9ubGFrZV9jcnRjX2Rp
c2FibGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlLAogCQkJSTkxNV9X
UklURShQQ0hfRFBMTF9TRUwsIHRlbXApOwogCQl9CiAKLQkJaXJvbmxha2VfZmRpX3BsbF9kaXNh
YmxlKGludGVsX2NydGMpOworCQlpcm9ubGFrZV9mZGlfcGxsX2Rpc2FibGUoY3J0Yyk7CiAJfQog
CiAJaW50ZWxfc2V0X2NwdV9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhkZXZfcHJpdiwgcGlwZSwg
dHJ1ZSk7CkBAIC02NzgwLDE0ICs2Nzc1LDEzIEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX2NydGNf
ZGlzYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUsCiBzdGF0aWMg
dm9pZCBoYXN3ZWxsX2NydGNfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2Ny
dGNfc3RhdGUsCiAJCQkJIHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewotCXN0
cnVjdCBkcm1fY3J0YyAqY3J0YyA9IG9sZF9jcnRjX3N0YXRlLT51YXBpLmNydGM7Ci0Jc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwotCXN0cnVj
dCBpbnRlbF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsKKwlzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMob2xkX2NydGNfc3RhdGUtPnVhcGkuY3J0
Yyk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5i
YXNlLmRldik7CiAJZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVyID0gb2xkX2NydGNfc3Rh
dGUtPmNwdV90cmFuc2NvZGVyOwogCi0JaW50ZWxfZW5jb2RlcnNfZGlzYWJsZShzdGF0ZSwgaW50
ZWxfY3J0Yyk7CisJaW50ZWxfZW5jb2RlcnNfZGlzYWJsZShzdGF0ZSwgY3J0Yyk7CiAKLQlpbnRl
bF9jcnRjX3ZibGFua19vZmYoaW50ZWxfY3J0Yyk7CisJaW50ZWxfY3J0Y192Ymxhbmtfb2ZmKGNy
dGMpOwogCiAJLyogWFhYOiBEbyB0aGUgcGlwZSBhc3NlcnRpb25zIGF0IHRoZSByaWdodCBwbGFj
ZSBmb3IgQlhUIERTSS4gKi8KIAlpZiAoIXRyYW5zY29kZXJfaXNfZHNpKGNwdV90cmFuc2NvZGVy
KSkKQEAgLTY4MDUsMTMgKzY3OTksMTMgQEAgc3RhdGljIHZvaWQgaGFzd2VsbF9jcnRjX2Rpc2Fi
bGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlLAogCWludGVsX2RzY19k
aXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDkp
Ci0JCXNreWxha2Vfc2NhbGVyX2Rpc2FibGUoaW50ZWxfY3J0Yyk7CisJCXNreWxha2Vfc2NhbGVy
X2Rpc2FibGUoY3J0Yyk7CiAJZWxzZQogCQlpcm9ubGFrZV9wZml0X2Rpc2FibGUob2xkX2NydGNf
c3RhdGUpOwogCi0JaW50ZWxfZW5jb2RlcnNfcG9zdF9kaXNhYmxlKHN0YXRlLCBpbnRlbF9jcnRj
KTsKKwlpbnRlbF9lbmNvZGVyc19wb3N0X2Rpc2FibGUoc3RhdGUsIGNydGMpOwogCi0JaW50ZWxf
ZW5jb2RlcnNfcG9zdF9wbGxfZGlzYWJsZShzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJaW50ZWxfZW5j
b2RlcnNfcG9zdF9wbGxfZGlzYWJsZShzdGF0ZSwgY3J0Yyk7CiB9CiAKIHN0YXRpYyB2b2lkIGk5
eHhfcGZpdF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
CkBAIC03MDE2LDEzICs3MDEwLDExIEBAIHN0YXRpYyB2b2lkIG1vZGVzZXRfcHV0X3Bvd2VyX2Rv
bWFpbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogc3RhdGljIHZvaWQgdmFs
bGV5dmlld19jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcs
CiAJCQkJICAgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiB7Ci0Jc3RydWN0IGRy
bV9jcnRjICpjcnRjID0gcGlwZV9jb25maWctPnVhcGkuY3J0YzsKLQlzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2ID0gY3J0Yy0+ZGV2OwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IHRvX2k5MTUoZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVs
X2NydGMoY3J0Yyk7Ci0JZW51bSBwaXBlIHBpcGUgPSBpbnRlbF9jcnRjLT5waXBlOworCXN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhwaXBlX2NvbmZpZy0+dWFwaS5jcnRj
KTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJh
c2UuZGV2KTsKKwllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CiAKLQlpZiAoV0FSTl9PTihp
bnRlbF9jcnRjLT5hY3RpdmUpKQorCWlmIChXQVJOX09OKGNydGMtPmFjdGl2ZSkpCiAJCXJldHVy
bjsKIAogCWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKHBpcGVfY29uZmlnKSkKQEAgLTcw
MzgsMjEgKzcwMzAsMjEgQEAgc3RhdGljIHZvaWQgdmFsbGV5dmlld19jcnRjX2VuYWJsZShzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAKIAlpOXh4X3NldF9waXBlY29uZihw
aXBlX2NvbmZpZyk7CiAKLQlpbnRlbF9jcnRjLT5hY3RpdmUgPSB0cnVlOworCWNydGMtPmFjdGl2
ZSA9IHRydWU7CiAKIAlpbnRlbF9zZXRfY3B1X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKGRldl9w
cml2LCBwaXBlLCB0cnVlKTsKIAotCWludGVsX2VuY29kZXJzX3ByZV9wbGxfZW5hYmxlKHN0YXRl
LCBpbnRlbF9jcnRjKTsKKwlpbnRlbF9lbmNvZGVyc19wcmVfcGxsX2VuYWJsZShzdGF0ZSwgY3J0
Yyk7CiAKIAlpZiAoSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpIHsKLQkJY2h2X3ByZXBhcmVfcGxs
KGludGVsX2NydGMsIHBpcGVfY29uZmlnKTsKLQkJY2h2X2VuYWJsZV9wbGwoaW50ZWxfY3J0Yywg
cGlwZV9jb25maWcpOworCQljaHZfcHJlcGFyZV9wbGwoY3J0YywgcGlwZV9jb25maWcpOworCQlj
aHZfZW5hYmxlX3BsbChjcnRjLCBwaXBlX2NvbmZpZyk7CiAJfSBlbHNlIHsKLQkJdmx2X3ByZXBh
cmVfcGxsKGludGVsX2NydGMsIHBpcGVfY29uZmlnKTsKLQkJdmx2X2VuYWJsZV9wbGwoaW50ZWxf
Y3J0YywgcGlwZV9jb25maWcpOworCQl2bHZfcHJlcGFyZV9wbGwoY3J0YywgcGlwZV9jb25maWcp
OworCQl2bHZfZW5hYmxlX3BsbChjcnRjLCBwaXBlX2NvbmZpZyk7CiAJfQogCi0JaW50ZWxfZW5j
b2RlcnNfcHJlX2VuYWJsZShzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJaW50ZWxfZW5jb2RlcnNfcHJl
X2VuYWJsZShzdGF0ZSwgY3J0Yyk7CiAKIAlpOXh4X3BmaXRfZW5hYmxlKHBpcGVfY29uZmlnKTsK
IApAQCAtNzA2MSwxMiArNzA1MywxMiBAQCBzdGF0aWMgdm9pZCB2YWxsZXl2aWV3X2NydGNfZW5h
YmxlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAkvKiB1cGRhdGUgRFNQ
Q05UUiB0byBjb25maWd1cmUgZ2FtbWEgZm9yIHBpcGUgYm90dG9tIGNvbG9yICovCiAJaW50ZWxf
ZGlzYWJsZV9wcmltYXJ5X3BsYW5lKHBpcGVfY29uZmlnKTsKIAotCWRldl9wcml2LT5kaXNwbGF5
LmluaXRpYWxfd2F0ZXJtYXJrcyhzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJZGV2X3ByaXYtPmRpc3Bs
YXkuaW5pdGlhbF93YXRlcm1hcmtzKHN0YXRlLCBjcnRjKTsKIAlpbnRlbF9lbmFibGVfcGlwZShw
aXBlX2NvbmZpZyk7CiAKIAlpbnRlbF9jcnRjX3ZibGFua19vbihwaXBlX2NvbmZpZyk7CiAKLQlp
bnRlbF9lbmNvZGVyc19lbmFibGUoc3RhdGUsIGludGVsX2NydGMpOworCWludGVsX2VuY29kZXJz
X2VuYWJsZShzdGF0ZSwgY3J0Yyk7CiB9CiAKIHN0YXRpYyB2b2lkIGk5eHhfc2V0X3BsbF9kaXZp
ZGVycyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKQEAgLTcwODEs
MTMgKzcwNzMsMTEgQEAgc3RhdGljIHZvaWQgaTl4eF9zZXRfcGxsX2RpdmlkZXJzKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogc3RhdGljIHZvaWQgaTl4eF9jcnRj
X2VuYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJCQkgICAgIHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewotCXN0cnVjdCBkcm1fY3J0YyAqY3J0
YyA9IHBpcGVfY29uZmlnLT51YXBpLmNydGM7Ci0Jc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNy
dGMtPmRldjsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRl
dik7Ci0Jc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKGNydGMp
OwotCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfY3J0Yy0+cGlwZTsKKwlzdHJ1Y3QgaW50ZWxfY3J0
YyAqY3J0YyA9IHRvX2ludGVsX2NydGMocGlwZV9jb25maWctPnVhcGkuY3J0Yyk7CisJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CisJ
ZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCi0JaWYgKFdBUk5fT04oaW50ZWxfY3J0Yy0+
YWN0aXZlKSkKKwlpZiAoV0FSTl9PTihjcnRjLT5hY3RpdmUpKQogCQlyZXR1cm47CiAKIAlpOXh4
X3NldF9wbGxfZGl2aWRlcnMocGlwZV9jb25maWcpOwpAQCAtNzEwMCwxNCArNzA5MCwxNCBAQCBz
dGF0aWMgdm9pZCBpOXh4X2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBl
X2NvbmZpZywKIAogCWk5eHhfc2V0X3BpcGVjb25mKHBpcGVfY29uZmlnKTsKIAotCWludGVsX2Ny
dGMtPmFjdGl2ZSA9IHRydWU7CisJY3J0Yy0+YWN0aXZlID0gdHJ1ZTsKIAogCWlmICghSVNfR0VO
KGRldl9wcml2LCAyKSkKIAkJaW50ZWxfc2V0X2NwdV9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhk
ZXZfcHJpdiwgcGlwZSwgdHJ1ZSk7CiAKLQlpbnRlbF9lbmNvZGVyc19wcmVfZW5hYmxlKHN0YXRl
LCBpbnRlbF9jcnRjKTsKKwlpbnRlbF9lbmNvZGVyc19wcmVfZW5hYmxlKHN0YXRlLCBjcnRjKTsK
IAotCWk5eHhfZW5hYmxlX3BsbChpbnRlbF9jcnRjLCBwaXBlX2NvbmZpZyk7CisJaTl4eF9lbmFi
bGVfcGxsKGNydGMsIHBpcGVfY29uZmlnKTsKIAogCWk5eHhfcGZpdF9lbmFibGUocGlwZV9jb25m
aWcpOwogCkBAIC03MTE3LDE0ICs3MTA3LDE0IEBAIHN0YXRpYyB2b2lkIGk5eHhfY3J0Y19lbmFi
bGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnLAogCWludGVsX2Rpc2FibGVf
cHJpbWFyeV9wbGFuZShwaXBlX2NvbmZpZyk7CiAKIAlpZiAoZGV2X3ByaXYtPmRpc3BsYXkuaW5p
dGlhbF93YXRlcm1hcmtzKQotCQlkZXZfcHJpdi0+ZGlzcGxheS5pbml0aWFsX3dhdGVybWFya3Mo
c3RhdGUsIGludGVsX2NydGMpOworCQlkZXZfcHJpdi0+ZGlzcGxheS5pbml0aWFsX3dhdGVybWFy
a3Moc3RhdGUsIGNydGMpOwogCWVsc2UKLQkJaW50ZWxfdXBkYXRlX3dhdGVybWFya3MoaW50ZWxf
Y3J0Yyk7CisJCWludGVsX3VwZGF0ZV93YXRlcm1hcmtzKGNydGMpOwogCWludGVsX2VuYWJsZV9w
aXBlKHBpcGVfY29uZmlnKTsKIAogCWludGVsX2NydGNfdmJsYW5rX29uKHBpcGVfY29uZmlnKTsK
IAotCWludGVsX2VuY29kZXJzX2VuYWJsZShzdGF0ZSwgaW50ZWxfY3J0Yyk7CisJaW50ZWxfZW5j
b2RlcnNfZW5hYmxlKHN0YXRlLCBjcnRjKTsKIH0KIAogc3RhdGljIHZvaWQgaTl4eF9wZml0X2Rp
c2FibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlKQpAQCAt
NzE0NSwxMSArNzEzNSw5IEBAIHN0YXRpYyB2b2lkIGk5eHhfcGZpdF9kaXNhYmxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSkKIHN0YXRpYyB2b2lkIGk5eHhf
Y3J0Y19kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKIAkJ
CSAgICAgIHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewotCXN0cnVjdCBkcm1f
Y3J0YyAqY3J0YyA9IG9sZF9jcnRjX3N0YXRlLT51YXBpLmNydGM7Ci0Jc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IGNydGMtPmRldjsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGRldik7Ci0Jc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRl
bF9jcnRjKGNydGMpOwotCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfY3J0Yy0+cGlwZTsKKwlzdHJ1
Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMob2xkX2NydGNfc3RhdGUtPnVhcGku
Y3J0Yyk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRj
LT5iYXNlLmRldik7CisJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCiAJLyoKIAkgKiBP
biBnZW4yIHBsYW5lcyBhcmUgZG91YmxlIGJ1ZmZlcmVkIGJ1dCB0aGUgcGlwZSBpc24ndCwgc28g
d2UgbXVzdApAQCAtNzE1OCwxNSArNzE0NiwxNSBAQCBzdGF0aWMgdm9pZCBpOXh4X2NydGNfZGlz
YWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUsCiAJaWYgKElTX0dF
TihkZXZfcHJpdiwgMikpCiAJCWludGVsX3dhaXRfZm9yX3ZibGFuayhkZXZfcHJpdiwgcGlwZSk7
CiAKLQlpbnRlbF9lbmNvZGVyc19kaXNhYmxlKHN0YXRlLCBpbnRlbF9jcnRjKTsKKwlpbnRlbF9l
bmNvZGVyc19kaXNhYmxlKHN0YXRlLCBjcnRjKTsKIAotCWludGVsX2NydGNfdmJsYW5rX29mZihp
bnRlbF9jcnRjKTsKKwlpbnRlbF9jcnRjX3ZibGFua19vZmYoY3J0Yyk7CiAKIAlpbnRlbF9kaXNh
YmxlX3BpcGUob2xkX2NydGNfc3RhdGUpOwogCiAJaTl4eF9wZml0X2Rpc2FibGUob2xkX2NydGNf
c3RhdGUpOwogCi0JaW50ZWxfZW5jb2RlcnNfcG9zdF9kaXNhYmxlKHN0YXRlLCBpbnRlbF9jcnRj
KTsKKwlpbnRlbF9lbmNvZGVyc19wb3N0X2Rpc2FibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKCFp
bnRlbF9jcnRjX2hhc190eXBlKG9sZF9jcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKSkgewog
CQlpZiAoSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCkBAIC03MTc3LDEzICs3MTY1LDEzIEBAIHN0
YXRpYyB2b2lkIGk5eHhfY3J0Y19kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRf
Y3J0Y19zdGF0ZSwKIAkJCWk5eHhfZGlzYWJsZV9wbGwob2xkX2NydGNfc3RhdGUpOwogCX0KIAot
CWludGVsX2VuY29kZXJzX3Bvc3RfcGxsX2Rpc2FibGUoc3RhdGUsIGludGVsX2NydGMpOworCWlu
dGVsX2VuY29kZXJzX3Bvc3RfcGxsX2Rpc2FibGUoc3RhdGUsIGNydGMpOwogCiAJaWYgKCFJU19H
RU4oZGV2X3ByaXYsIDIpKQogCQlpbnRlbF9zZXRfY3B1X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5n
KGRldl9wcml2LCBwaXBlLCBmYWxzZSk7CiAKIAlpZiAoIWRldl9wcml2LT5kaXNwbGF5LmluaXRp
YWxfd2F0ZXJtYXJrcykKLQkJaW50ZWxfdXBkYXRlX3dhdGVybWFya3MoaW50ZWxfY3J0Yyk7CisJ
CWludGVsX3VwZGF0ZV93YXRlcm1hcmtzKGNydGMpOwogCiAJLyogY2xvY2sgdGhlIHBpcGUgZG93
biB0byA2NDB4NDgwQDYwIHRvIHBvdGVudGlhbGx5IHNhdmUgcG93ZXIgKi8KIAlpZiAoSVNfSTgz
MChkZXZfcHJpdikpCi0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3Rp
bmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 62602F4FEE
	for <lists+intel-gfx@lfdr.de>; Fri,  8 Nov 2019 16:40:18 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 942BE6F9D0;
	Fri,  8 Nov 2019 15:40:16 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D2EB86F9D0
 for <intel-gfx@lists.freedesktop.org>; Fri,  8 Nov 2019 15:40:14 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 08 Nov 2019 07:40:13 -0800
X-IronPort-AV: E=Sophos;i="5.68,281,1569308400"; d="scan'208";a="196934800"
Received: from jnikula-mobl3.fi.intel.com (HELO localhost) ([10.237.66.161])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 08 Nov 2019 07:40:11 -0800
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  8 Nov 2019 17:39:49 +0200
Message-Id: <3e72da0b412354ed8be6719df55b0e0cc4caa61a.1573227240.git.jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1573227240.git.jani.nikula@intel.com>
References: <cover.1573227240.git.jani.nikula@intel.com>
MIME-Version: 1.0
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Subject: [Intel-gfx] [PATCH 2/9] drm/i915/bios: store child devices in a list
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXNpbmcgdGhlIGFycmF5IGlzIGdldHRpbmcgY2x1bXN5LiBNYWtlIHRoaW5ncyBhIGJpdCBtb3Jl
IGR5bmFtaWMuCgpSZW1vdmUgZWFybHkgcmV0dXJucyBvbiBub3QgaGF2aW5nIGNoaWxkIGRldmlj
ZXMgd2hlbiB0aGUgZW5kIHJlc3VsdAphZnRlciAiaXRlcmF0aW5nIiB0aGUgZW1wdHkgbGlzdCB3
b3VsZCBiZSB0aGUgc2FtZS4KCnYzOgotIHVzZSBsaXN0X2FkZF90YWlsIHRvIG5vdCByZXZlcnNl
IHRoZSBjaGlsZCBkZXZpY2UgbGlzdCAoVmlsbGUpCgp2MjoKLSBzdGljayB0byBwcmV2aW91cyBu
YW1pbmcgb2YgY2hpbGQgZGV2aWNlcyAoVmlsbGUpCi0gdXNlIGt6YWxsb2MsIGhhbmRsZSBmYWls
dXJlCi0gaW5pdGlhbGl6ZSBsaXN0IGhlYWQgZWFybGllciB0byBrZWVwIGludGVsX2Jpb3NfZHJp
dmVyX3JlbW92ZSgpIHNhZmUKCkNjOiBWaWxsZSBTeXJqYWxhIDx2aWxsZS5zeXJqYWxhQGxpbnV4
LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBs
aW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEphbmkgTmlrdWxhIDxqYW5pLm5pa3VsYUBp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMg
fCAxMjMgKysrKysrKysrKy0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
cnYuaCAgICAgICAgICAgfCAgIDMgKy0KIDIgZmlsZXMgY2hhbmdlZCwgNTggaW5zZXJ0aW9ucygr
KSwgNjggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9iaW9zLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jp
b3MuYwppbmRleCBjMTliMjM0YmViZTYuLjdjMGNhNzMzYmVmOCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKQEAgLTU4LDYgKzU4LDEyIEBACiAgKiB0aGF0Lgog
ICovCiAKKy8qIFdyYXBwZXIgZm9yIFZCVCBjaGlsZCBkZXZpY2UgY29uZmlnICovCitzdHJ1Y3Qg
ZGlzcGxheV9kZXZpY2VfZGF0YSB7CisJc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgY2hpbGQ7
CisJc3RydWN0IGxpc3RfaGVhZCBub2RlOworfTsKKwogI2RlZmluZQlTTEFWRV9BRERSMQkweDcw
CiAjZGVmaW5lCVNMQVZFX0FERFIyCTB4NzIKIApAQCAtNDQ5LDggKzQ1NSw5IEBAIHN0YXRpYyB2
b2lkCiBwYXJzZV9zZHZvX2RldmljZV9tYXBwaW5nKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwgdTggYmRiX3ZlcnNpb24pCiB7CiAJc3RydWN0IHNkdm9fZGV2aWNlX21hcHBpbmcg
Km1hcHBpbmc7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAJ
Y29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwotCWludCBpLCBjb3VudCA9
IDA7CisJaW50IGNvdW50ID0gMDsKIAogCS8qCiAJICogT25seSBwYXJzZSBTRFZPIG1hcHBpbmdz
IG9uIGdlbnMgdGhhdCBjb3VsZCBoYXZlIFNEVk8uIFRoaXMgaXNuJ3QKQEAgLTQ2MSw4ICs0Njgs
OCBAQCBwYXJzZV9zZHZvX2RldmljZV9tYXBwaW5nKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwgdTggYmRiX3ZlcnNpb24pCiAJCXJldHVybjsKIAl9CiAKLQlmb3IgKGkgPSAwLCBj
b3VudCA9IDA7IGkgPCBkZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9udW07IGkrKykgewotCQljaGls
ZCA9IGRldl9wcml2LT52YnQuY2hpbGRfZGV2ICsgaTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGRl
dmRhdGEsICZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcywgbm9kZSkgeworCQljaGlsZCA9
ICZkZXZkYXRhLT5jaGlsZDsKIAogCQlpZiAoY2hpbGQtPnNsYXZlX2FkZHIgIT0gU0xBVkVfQURE
UjEgJiYKIAkJICAgIGNoaWxkLT5zbGF2ZV9hZGRyICE9IFNMQVZFX0FERFIyKSB7CkBAIC0xNTcy
LDggKzE1NzksNyBAQCBzdGF0aWMgdm9pZCBwYXJzZV9kZGlfcG9ydChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCiAKIHN0YXRpYyB2b2lkIHBhcnNlX2RkaV9wb3J0cyhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHU4IGJkYl92ZXJzaW9uKQogewotCWNvbnN0IHN0
cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKLQlpbnQgaTsKKwljb25zdCBzdHJ1Y3Qg
ZGlzcGxheV9kZXZpY2VfZGF0YSAqZGV2ZGF0YTsKIAogCWlmICghSEFTX0RESShkZXZfcHJpdikg
JiYgIUlTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQogCQlyZXR1cm47CkBAIC0xNTgxLDExICsxNTg3
LDggQEAgc3RhdGljIHZvaWQgcGFyc2VfZGRpX3BvcnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwgdTggYmRiX3ZlcnNpb24pCiAJaWYgKGJkYl92ZXJzaW9uIDwgMTU1KQogCQly
ZXR1cm47CiAKLQlmb3IgKGkgPSAwOyBpIDwgZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtOyBp
KyspIHsKLQkJY2hpbGQgPSBkZXZfcHJpdi0+dmJ0LmNoaWxkX2RldiArIGk7Ci0KLQkJcGFyc2Vf
ZGRpX3BvcnQoZGV2X3ByaXYsIGNoaWxkLCBiZGJfdmVyc2lvbik7Ci0JfQorCWxpc3RfZm9yX2Vh
Y2hfZW50cnkoZGV2ZGF0YSwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZpY2VzLCBub2RlKQor
CQlwYXJzZV9kZGlfcG9ydChkZXZfcHJpdiwgJmRldmRhdGEtPmNoaWxkLCBiZGJfdmVyc2lvbik7
CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC0xNTkzLDggKzE1OTYsOSBAQCBwYXJzZV9nZW5lcmFsX2Rl
ZmluaXRpb25zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgY29uc3Qg
c3RydWN0IGJkYl9oZWFkZXIgKmJkYikKIHsKIAljb25zdCBzdHJ1Y3QgYmRiX2dlbmVyYWxfZGVm
aW5pdGlvbnMgKmRlZnM7CisJc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAJ
Y29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwotCWludCBpLCBjaGlsZF9k
ZXZpY2VfbnVtLCBjb3VudDsKKwlpbnQgaSwgY2hpbGRfZGV2aWNlX251bTsKIAl1OCBleHBlY3Rl
ZF9zaXplOwogCXUxNiBibG9ja19zaXplOwogCWludCBidXNfcGluOwpAQCAtMTY1MCwyNiArMTY1
NCw3IEBAIHBhcnNlX2dlbmVyYWxfZGVmaW5pdGlvbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogCiAJLyogZ2V0IHRoZSBudW1iZXIgb2YgY2hpbGQgZGV2aWNlICovCiAJY2hp
bGRfZGV2aWNlX251bSA9IChibG9ja19zaXplIC0gc2l6ZW9mKCpkZWZzKSkgLyBkZWZzLT5jaGls
ZF9kZXZfc2l6ZTsKLQljb3VudCA9IDA7Ci0JLyogZ2V0IHRoZSBudW1iZXIgb2YgY2hpbGQgZGV2
aWNlIHRoYXQgaXMgcHJlc2VudCAqLwotCWZvciAoaSA9IDA7IGkgPCBjaGlsZF9kZXZpY2VfbnVt
OyBpKyspIHsKLQkJY2hpbGQgPSBjaGlsZF9kZXZpY2VfcHRyKGRlZnMsIGkpOwotCQlpZiAoIWNo
aWxkLT5kZXZpY2VfdHlwZSkKLQkJCWNvbnRpbnVlOwotCQljb3VudCsrOwotCX0KLQlpZiAoIWNv
dW50KSB7Ci0JCURSTV9ERUJVR19LTVMoIm5vIGNoaWxkIGRldiBpcyBwYXJzZWQgZnJvbSBWQlRc
biIpOwotCQlyZXR1cm47Ci0JfQotCWRldl9wcml2LT52YnQuY2hpbGRfZGV2ID0ga2NhbGxvYyhj
b3VudCwgc2l6ZW9mKCpjaGlsZCksIEdGUF9LRVJORUwpOwotCWlmICghZGV2X3ByaXYtPnZidC5j
aGlsZF9kZXYpIHsKLQkJRFJNX0RFQlVHX0tNUygiTm8gbWVtb3J5IHNwYWNlIGZvciBjaGlsZCBk
ZXZpY2VcbiIpOwotCQlyZXR1cm47Ci0JfQogCi0JZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVt
ID0gY291bnQ7Ci0JY291bnQgPSAwOwogCWZvciAoaSA9IDA7IGkgPCBjaGlsZF9kZXZpY2VfbnVt
OyBpKyspIHsKIAkJY2hpbGQgPSBjaGlsZF9kZXZpY2VfcHRyKGRlZnMsIGkpOwogCQlpZiAoIWNo
aWxkLT5kZXZpY2VfdHlwZSkKQEAgLTE2NzgsMTUgKzE2NjMsMjMgQEAgcGFyc2VfZ2VuZXJhbF9k
ZWZpbml0aW9ucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCURSTV9ERUJV
R19LTVMoIkZvdW5kIFZCVCBjaGlsZCBkZXZpY2Ugd2l0aCB0eXBlIDB4JXhcbiIsCiAJCQkgICAg
ICBjaGlsZC0+ZGV2aWNlX3R5cGUpOwogCisJCWRldmRhdGEgPSBremFsbG9jKHNpemVvZigqZGV2
ZGF0YSksIEdGUF9LRVJORUwpOworCQlpZiAoIWRldmRhdGEpCisJCQlicmVhazsKKwogCQkvKgog
CQkgKiBDb3B5IGFzIG11Y2ggYXMgd2Uga25vdyAoc2l6ZW9mKSBhbmQgaXMgYXZhaWxhYmxlCi0J
CSAqIChjaGlsZF9kZXZfc2l6ZSkgb2YgdGhlIGNoaWxkIGRldmljZS4gQWNjZXNzaW5nIHRoZSBk
YXRhIG11c3QKLQkJICogZGVwZW5kIG9uIFZCVCB2ZXJzaW9uLgorCQkgKiAoY2hpbGRfZGV2X3Np
emUpIG9mIHRoZSBjaGlsZCBkZXZpY2UgY29uZmlnLiBBY2Nlc3NpbmcgdGhlCisJCSAqIGRhdGEg
bXVzdCBkZXBlbmQgb24gVkJUIHZlcnNpb24uCiAJCSAqLwotCQltZW1jcHkoZGV2X3ByaXYtPnZi
dC5jaGlsZF9kZXYgKyBjb3VudCwgY2hpbGQsCisJCW1lbWNweSgmZGV2ZGF0YS0+Y2hpbGQsIGNo
aWxkLAogCQkgICAgICAgbWluX3Qoc2l6ZV90LCBkZWZzLT5jaGlsZF9kZXZfc2l6ZSwgc2l6ZW9m
KCpjaGlsZCkpKTsKLQkJY291bnQrKzsKKworCQlsaXN0X2FkZF90YWlsKCZkZXZkYXRhLT5ub2Rl
LCAmZGV2X3ByaXYtPnZidC5kaXNwbGF5X2RldmljZXMpOwogCX0KKworCWlmIChsaXN0X2VtcHR5
KCZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcykpCisJCURSTV9ERUJVR19LTVMoIm5vIGNo
aWxkIGRldiBpcyBwYXJzZWQgZnJvbSBWQlRcbiIpOwogfQogCiAvKiBDb21tb24gZGVmYXVsdHMg
d2hpY2ggbWF5IGJlIG92ZXJyaWRkZW4gYnkgVkJULiAqLwpAQCAtMTgzNiw2ICsxODI5LDggQEAg
dm9pZCBpbnRlbF9iaW9zX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CWNvbnN0IHN0cnVjdCBiZGJfaGVhZGVyICpiZGI7CiAJdTggX19pb21lbSAqYmlvcyA9IE5VTEw7
CiAKKwlJTklUX0xJU1RfSEVBRCgmZGV2X3ByaXYtPnZidC5kaXNwbGF5X2RldmljZXMpOworCiAJ
aWYgKCFIQVNfRElTUExBWShkZXZfcHJpdikgfHwgIUlOVEVMX0RJU1BMQVlfRU5BQkxFRChkZXZf
cHJpdikpIHsKIAkJRFJNX0RFQlVHX0tNUygiU2tpcHBpbmcgVkJUIGluaXQgZHVlIHRvIGRpc2Fi
bGVkIGRpc3BsYXkuXG4iKTsKIAkJcmV0dXJuOwpAQCAtMTg5NSw5ICsxODkwLDEzIEBAIHZvaWQg
aW50ZWxfYmlvc19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKICAqLwog
dm9pZCBpbnRlbF9iaW9zX2RyaXZlcl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogewotCWtmcmVlKGRldl9wcml2LT52YnQuY2hpbGRfZGV2KTsKLQlkZXZfcHJpdi0+
dmJ0LmNoaWxkX2RldiA9IE5VTEw7Ci0JZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtID0gMDsK
KwlzdHJ1Y3QgZGlzcGxheV9kZXZpY2VfZGF0YSAqZGV2ZGF0YSwgKm47CisKKwlsaXN0X2Zvcl9l
YWNoX2VudHJ5X3NhZmUoZGV2ZGF0YSwgbiwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZpY2Vz
LCBub2RlKSB7CisJCWxpc3RfZGVsKCZkZXZkYXRhLT5ub2RlKTsKKwkJa2ZyZWUoZGV2ZGF0YSk7
CisJfQorCiAJa2ZyZWUoZGV2X3ByaXYtPnZidC5zZHZvX2x2ZHNfdmJ0X21vZGUpOwogCWRldl9w
cml2LT52YnQuc2R2b19sdmRzX3ZidF9tb2RlID0gTlVMTDsKIAlrZnJlZShkZXZfcHJpdi0+dmJ0
LmxmcF9sdmRzX3ZidF9tb2RlKTsKQEAgLTE5MjEsMTcgKzE5MjAsMTggQEAgdm9pZCBpbnRlbF9i
aW9zX2RyaXZlcl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogICov
CiBib29sIGludGVsX2Jpb3NfaXNfdHZfcHJlc2VudChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiB7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7
CiAJY29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwotCWludCBpOwogCiAJ
aWYgKCFkZXZfcHJpdi0+dmJ0LmludF90dl9zdXBwb3J0KQogCQlyZXR1cm4gZmFsc2U7CiAKLQlp
ZiAoIWRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bSkKKwlpZiAobGlzdF9lbXB0eSgmZGV2X3By
aXYtPnZidC5kaXNwbGF5X2RldmljZXMpKQogCQlyZXR1cm4gdHJ1ZTsKIAotCWZvciAoaSA9IDA7
IGkgPCBkZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9udW07IGkrKykgewotCQljaGlsZCA9IGRldl9w
cml2LT52YnQuY2hpbGRfZGV2ICsgaTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGRldmRhdGEsICZk
ZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcywgbm9kZSkgeworCQljaGlsZCA9ICZkZXZkYXRh
LT5jaGlsZDsKKwogCQkvKgogCQkgKiBJZiB0aGUgZGV2aWNlIHR5cGUgaXMgbm90IFRWLCBjb250
aW51ZS4KIAkJICovCkBAIC0xOTYzLDE0ICsxOTYzLDE0IEBAIGJvb2wgaW50ZWxfYmlvc19pc190
dl9wcmVzZW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKICAqLwogYm9vbCBp
bnRlbF9iaW9zX2lzX2x2ZHNfcHJlc2VudChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsIHU4ICppMmNfcGluKQogeworCWNvbnN0IHN0cnVjdCBkaXNwbGF5X2RldmljZV9kYXRhICpk
ZXZkYXRhOwogCWNvbnN0IHN0cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKLQlpbnQg
aTsKIAotCWlmICghZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtKQorCWlmIChsaXN0X2VtcHR5
KCZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcykpCiAJCXJldHVybiB0cnVlOwogCi0JZm9y
IChpID0gMDsgaSA8IGRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bTsgaSsrKSB7Ci0JCWNoaWxk
ID0gZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYgKyBpOworCWxpc3RfZm9yX2VhY2hfZW50cnkoZGV2
ZGF0YSwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZpY2VzLCBub2RlKSB7CisJCWNoaWxkID0g
JmRldmRhdGEtPmNoaWxkOwogCiAJCS8qIElmIHRoZSBkZXZpY2UgdHlwZSBpcyBub3QgTEZQLCBj
b250aW51ZS4KIAkJICogV2UgaGF2ZSB0byBjaGVjayBib3RoIHRoZSBuZXcgaWRlbnRpZmllcnMg
YXMgd2VsbCBhcyB0aGUKQEAgLTIwMTIsNiArMjAxMiw3IEBAIGJvb2wgaW50ZWxfYmlvc19pc19s
dmRzX3ByZXNlbnQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1OCAqaTJjX3Bp
bikKICAqLwogYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfcHJlc2VudChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogeworCWNvbnN0IHN0cnVjdCBkaXNw
bGF5X2RldmljZV9kYXRhICpkZXZkYXRhOwogCWNvbnN0IHN0cnVjdCBjaGlsZF9kZXZpY2VfY29u
ZmlnICpjaGlsZDsKIAlzdGF0aWMgY29uc3Qgc3RydWN0IHsKIAkJdTE2IGRwLCBoZG1pOwpAQCAt
MjAyMiw3ICsyMDIzLDYgQEAgYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfcHJlc2VudChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3IKIAkJW1BPUlRfRV0gPSB7
IERWT19QT1JUX0RQRSwgRFZPX1BPUlRfSERNSUUsIH0sCiAJCVtQT1JUX0ZdID0geyBEVk9fUE9S
VF9EUEYsIERWT19QT1JUX0hETUlGLCB9LAogCX07Ci0JaW50IGk7CiAKIAlpZiAoSEFTX0RESShk
ZXZfcHJpdikpIHsKIAkJY29uc3Qgc3RydWN0IGRkaV92YnRfcG9ydF9pbmZvICpwb3J0X2luZm8g
PQpAQCAtMjAzNywxMSArMjAzNyw4IEBAIGJvb2wgaW50ZWxfYmlvc19pc19wb3J0X3ByZXNlbnQo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9yCiAJaWYgKFdB
Uk5fT04ocG9ydCA9PSBQT1JUX0EpIHx8IHBvcnQgPj0gQVJSQVlfU0laRShwb3J0X21hcHBpbmcp
KQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoIWRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bSkK
LQkJcmV0dXJuIGZhbHNlOwotCi0JZm9yIChpID0gMDsgaSA8IGRldl9wcml2LT52YnQuY2hpbGRf
ZGV2X251bTsgaSsrKSB7Ci0JCWNoaWxkID0gZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYgKyBpOwor
CWxpc3RfZm9yX2VhY2hfZW50cnkoZGV2ZGF0YSwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZp
Y2VzLCBub2RlKSB7CisJCWNoaWxkID0gJmRldmRhdGEtPmNoaWxkOwogCiAJCWlmICgoY2hpbGQt
PmR2b19wb3J0ID09IHBvcnRfbWFwcGluZ1twb3J0XS5kcCB8fAogCQkgICAgIGNoaWxkLT5kdm9f
cG9ydCA9PSBwb3J0X21hcHBpbmdbcG9ydF0uaGRtaSkgJiYKQEAgLTIwNjIsNiArMjA1OSw3IEBA
IGJvb2wgaW50ZWxfYmlvc19pc19wb3J0X3ByZXNlbnQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCBlbnVtIHBvcnQgcG9yCiAgKi8KIGJvb2wgaW50ZWxfYmlvc19pc19wb3J0X2Vk
cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogewor
CWNvbnN0IHN0cnVjdCBkaXNwbGF5X2RldmljZV9kYXRhICpkZXZkYXRhOwogCWNvbnN0IHN0cnVj
dCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKIAlzdGF0aWMgY29uc3Qgc2hvcnQgcG9ydF9t
YXBwaW5nW10gPSB7CiAJCVtQT1JUX0JdID0gRFZPX1BPUlRfRFBCLApAQCAtMjA3MCwxNiArMjA2
OCwxMiBAQCBib29sIGludGVsX2Jpb3NfaXNfcG9ydF9lZHAoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAkJW1BPUlRfRV0gPSBEVk9fUE9SVF9EUEUs
CiAJCVtQT1JUX0ZdID0gRFZPX1BPUlRfRFBGLAogCX07Ci0JaW50IGk7CiAKIAlpZiAoSEFTX0RE
SShkZXZfcHJpdikpCiAJCXJldHVybiBkZXZfcHJpdi0+dmJ0LmRkaV9wb3J0X2luZm9bcG9ydF0u
c3VwcG9ydHNfZWRwOwogCi0JaWYgKCFkZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9udW0pCi0JCXJl
dHVybiBmYWxzZTsKLQotCWZvciAoaSA9IDA7IGkgPCBkZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9u
dW07IGkrKykgewotCQljaGlsZCA9IGRldl9wcml2LT52YnQuY2hpbGRfZGV2ICsgaTsKKwlsaXN0
X2Zvcl9lYWNoX2VudHJ5KGRldmRhdGEsICZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcywg
bm9kZSkgeworCQljaGlsZCA9ICZkZXZkYXRhLT5jaGlsZDsKIAogCQlpZiAoY2hpbGQtPmR2b19w
b3J0ID09IHBvcnRfbWFwcGluZ1twb3J0XSAmJgogCQkgICAgKGNoaWxkLT5kZXZpY2VfdHlwZSAm
IERFVklDRV9UWVBFX2VEUF9CSVRTKSA9PQpAQCAtMjEyOCwxMyArMjEyMiwxMCBAQCBzdGF0aWMg
Ym9vbCBjaGlsZF9kZXZfaXNfZHBfZHVhbF9tb2RlKGNvbnN0IHN0cnVjdCBjaGlsZF9kZXZpY2Vf
Y29uZmlnICpjaGlsZCwKIGJvb2wgaW50ZWxfYmlvc19pc19wb3J0X2RwX2R1YWxfbW9kZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkJICAgICBlbnVtIHBvcnQgcG9ydCkK
IHsKLQljb25zdCBzdHJ1Y3QgY2hpbGRfZGV2aWNlX2NvbmZpZyAqY2hpbGQ7Ci0JaW50IGk7CisJ
Y29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAKLQlmb3IgKGkgPSAw
OyBpIDwgZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtOyBpKyspIHsKLQkJY2hpbGQgPSBkZXZf
cHJpdi0+dmJ0LmNoaWxkX2RldiArIGk7Ci0KLQkJaWYgKGNoaWxkX2Rldl9pc19kcF9kdWFsX21v
ZGUoY2hpbGQsIHBvcnQpKQorCWxpc3RfZm9yX2VhY2hfZW50cnkoZGV2ZGF0YSwgJmRldl9wcml2
LT52YnQuZGlzcGxheV9kZXZpY2VzLCBub2RlKSB7CisJCWlmIChjaGlsZF9kZXZfaXNfZHBfZHVh
bF9tb2RlKCZkZXZkYXRhLT5jaGlsZCwgcG9ydCkpCiAJCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAg
LTIxNTEsMTIgKzIxNDIsMTIgQEAgYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfZHBfZHVhbF9tb2Rl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIGJvb2wgaW50ZWxfYmlvc19pc19k
c2lfcHJlc2VudChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICAg
ZW51bSBwb3J0ICpwb3J0KQogeworCWNvbnN0IHN0cnVjdCBkaXNwbGF5X2RldmljZV9kYXRhICpk
ZXZkYXRhOwogCWNvbnN0IHN0cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKIAl1OCBk
dm9fcG9ydDsKLQlpbnQgaTsKIAotCWZvciAoaSA9IDA7IGkgPCBkZXZfcHJpdi0+dmJ0LmNoaWxk
X2Rldl9udW07IGkrKykgewotCQljaGlsZCA9IGRldl9wcml2LT52YnQuY2hpbGRfZGV2ICsgaTsK
KwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGRldmRhdGEsICZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2
aWNlcywgbm9kZSkgeworCQljaGlsZCA9ICZkZXZkYXRhLT5jaGlsZDsKIAogCQlpZiAoIShjaGls
ZC0+ZGV2aWNlX3R5cGUgJiBERVZJQ0VfVFlQRV9NSVBJX09VVFBVVCkpCiAJCQljb250aW51ZTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDY3YmRmZTZkZTNmYS4uMmMwNjc0YTg2ZGQ4IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTcyMCw4ICs3MjAsNyBAQCBzdHJ1Y3QgaW50ZWxf
dmJ0X2RhdGEgewogCiAJaW50IGNydF9kZGNfcGluOwogCi0JaW50IGNoaWxkX2Rldl9udW07Ci0J
c3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkX2RldjsKKwlzdHJ1Y3QgbGlzdF9oZWFk
IGRpc3BsYXlfZGV2aWNlczsKIAogCXN0cnVjdCBkZGlfdmJ0X3BvcnRfaW5mbyBkZGlfcG9ydF9p
bmZvW0k5MTVfTUFYX1BPUlRTXTsKIAlzdHJ1Y3Qgc2R2b19kZXZpY2VfbWFwcGluZyBzZHZvX21h
cHBpbmdzWzJdOwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5m
by9pbnRlbC1nZng=

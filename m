Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D8FE22C3E0E
	for <lists+intel-gfx@lfdr.de>; Wed, 25 Nov 2020 11:40:50 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CF9956E90F;
	Wed, 25 Nov 2020 10:40:35 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl
 [IPv6:2a02:2308::216:3eff:fe92:dfa3])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 42BB06E8E5
 for <intel-gfx@lists.freedesktop.org>; Wed, 25 Nov 2020 10:40:28 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 25 Nov 2020 11:39:37 +0100
Message-Id: <20201125104011.606641-30-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.29.2.222.g5d2a92d10f8
In-Reply-To: <20201125104011.606641-1-maarten.lankhorst@linux.intel.com>
References: <20201125104011.606641-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v5 29/63] drm/i915: Defer pin calls in buffer
 pool until first use by caller.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgbmVlZCB0byB0YWtlIHRoZSBvYmogbG9jayB0byBwaW4gcGFnZXMsIHNvIHdhaXQgdW50aWwg
dGhlIGNhbGxlcnMKaGF2ZSBkb25lIHNvLCBiZWZvcmUgbWFraW5nIHRoZSBvYmplY3QgdW5zaHJp
bmthYmxlLgoKU2lnbmVkLW9mZi1ieTogTWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hv
cnN0QGxpbnV4LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IFRob21hcyBIZWxsc3Ryw7ZtIDx0aG9t
YXMuaGVsbHN0cm9tQGxpbnV4LmludGVsLmNvbT4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9leGVjYnVmZmVyLmMgICAgfCAgMiArCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9vYmplY3RfYmx0LmMgICAgfCAgNiArKysKIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Z3RfYnVmZmVyX3Bvb2wuYyAgICB8IDQ3ICsrKysrKysrKy0tLS0tLS0tLS0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaCAgICB8ICA1ICsrCiAuLi4vZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaCAgfCAgMSArCiA1IGZpbGVzIGNoYW5nZWQs
IDM1IGluc2VydGlvbnMoKyksIDI2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IDcxNGRhMGIwMjkxMi4uMGY5MTlk
YTY5ZWVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhl
Y2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMKQEAgLTEzNDMsNiArMTM0Myw3IEBAIHN0YXRpYyBpbnQgX19yZWxvY19ncHVfYWxsb2Mo
c3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCWVyciA9IFBUUl9FUlIoY21kKTsKIAkJZ290
byBlcnJfcG9vbDsKIAl9CisJaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2VkKHBvb2wpOwog
CiAJYmF0Y2ggPSBpOTE1X3ZtYV9pbnN0YW5jZShwb29sLT5vYmosIHZtYS0+dm0sIE5VTEwpOwog
CWlmIChJU19FUlIoYmF0Y2gpKSB7CkBAIC0yNjM1LDYgKzI2MzYsNyBAQCBzdGF0aWMgaW50IGVi
X3BhcnNlKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQllcnIgPSBQVFJfRVJSKHNoYWRv
dyk7CiAJCWdvdG8gZXJyOwogCX0KKwlpbnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX3VzZWQocG9v
bCk7CiAJaTkxNV9nZW1fb2JqZWN0X3NldF9yZWFkb25seShzaGFkb3ctPm9iaik7CiAJc2hhZG93
LT5wcml2YXRlID0gcG9vbDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX29iamVjdF9ibHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9vYmplY3RfYmx0LmMKaW5kZXggYWVlN2FkM2NjM2M2Li5lMGI4NzNjM2Y0NmEgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF9ibHQuYwpAQCAtNTQsNiAr
NTQsOSBAQCBzdHJ1Y3QgaTkxNV92bWEgKmludGVsX2VtaXRfdm1hX2ZpbGxfYmx0KHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBvdXRfcHV0Owog
CisJLyogd2UgcGlubmVkIHRoZSBwb29sLCBtYXJrIGl0IGFzIHN1Y2ggKi8KKwlpbnRlbF9ndF9i
dWZmZXJfcG9vbF9tYXJrX3VzZWQocG9vbCk7CisKIAljbWQgPSBpOTE1X2dlbV9vYmplY3RfcGlu
X21hcChwb29sLT5vYmosIEk5MTVfTUFQX1dDKTsKIAlpZiAoSVNfRVJSKGNtZCkpIHsKIAkJZXJy
ID0gUFRSX0VSUihjbWQpOwpAQCAtMjc2LDYgKzI3OSw5IEBAIHN0cnVjdCBpOTE1X3ZtYSAqaW50
ZWxfZW1pdF92bWFfY29weV9ibHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCWlmICh1bmxp
a2VseShlcnIpKQogCQlnb3RvIG91dF9wdXQ7CiAKKwkvKiB3ZSBwaW5uZWQgdGhlIHBvb2wsIG1h
cmsgaXQgYXMgc3VjaCAqLworCWludGVsX2d0X2J1ZmZlcl9wb29sX21hcmtfdXNlZChwb29sKTsK
KwogCWNtZCA9IGk5MTVfZ2VtX29iamVjdF9waW5fbWFwKHBvb2wtPm9iaiwgSTkxNV9NQVBfV0Mp
OwogCWlmIChJU19FUlIoY21kKSkgewogCQllcnIgPSBQVFJfRVJSKGNtZCk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbC5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuYwppbmRleCAxMDRjYjMwZThj
MTMuLjAzMDc1OTMwNTE5NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfYnVmZmVyX3Bvb2wuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dF9idWZmZXJfcG9vbC5jCkBAIC05OCwyOCArOTgsNiBAQCBzdGF0aWMgdm9pZCBwb29sX2ZyZWVf
d29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndyaykKIAkJCQkgICAgICByb3VuZF9qaWZmaWVzX3Vw
X3JlbGF0aXZlKEhaKSk7CiB9CiAKLXN0YXRpYyBpbnQgcG9vbF9hY3RpdmUoc3RydWN0IGk5MTVf
YWN0aXZlICpyZWYpCi17Ci0Jc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5vZGUg
PQotCQljb250YWluZXJfb2YocmVmLCB0eXBlb2YoKm5vZGUpLCBhY3RpdmUpOwotCXN0cnVjdCBk
bWFfcmVzdiAqcmVzdiA9IG5vZGUtPm9iai0+YmFzZS5yZXN2OwotCWludCBlcnI7Ci0KLQlpZiAo
ZG1hX3Jlc3ZfdHJ5bG9jayhyZXN2KSkgewotCQlkbWFfcmVzdl9hZGRfZXhjbF9mZW5jZShyZXN2
LCBOVUxMKTsKLQkJZG1hX3Jlc3ZfdW5sb2NrKHJlc3YpOwotCX0KLQotCWVyciA9IGk5MTVfZ2Vt
X29iamVjdF9waW5fcGFnZXMobm9kZS0+b2JqKTsKLQlpZiAoZXJyKQotCQlyZXR1cm4gZXJyOwot
Ci0JLyogSGlkZSB0aGlzIHBpbm5lZCBvYmplY3QgZnJvbSB0aGUgc2hyaW5rZXIgdW50aWwgcmV0
aXJlZCAqLwotCWk5MTVfZ2VtX29iamVjdF9tYWtlX3Vuc2hyaW5rYWJsZShub2RlLT5vYmopOwot
Ci0JcmV0dXJuIDA7Ci19Ci0KIF9faTkxNV9hY3RpdmVfY2FsbAogc3RhdGljIHZvaWQgcG9vbF9y
ZXRpcmUoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiB7CkBAIC0xMjksMTAgKzEwNywxMyBAQCBz
dGF0aWMgdm9pZCBwb29sX3JldGlyZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIAlzdHJ1Y3Qg
bGlzdF9oZWFkICpsaXN0ID0gYnVja2V0X2Zvcl9zaXplKHBvb2wsIG5vZGUtPm9iai0+YmFzZS5z
aXplKTsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCi0JaTkxNV9nZW1fb2JqZWN0X3VucGluX3Bh
Z2VzKG5vZGUtPm9iaik7CisJaWYgKG5vZGUtPnBpbm5lZCkgeworCQlpOTE1X2dlbV9vYmplY3Rf
dW5waW5fcGFnZXMobm9kZS0+b2JqKTsKIAotCS8qIFJldHVybiB0aGlzIG9iamVjdCB0byB0aGUg
c2hyaW5rZXIgcG9vbCAqLwotCWk5MTVfZ2VtX29iamVjdF9tYWtlX3B1cmdlYWJsZShub2RlLT5v
YmopOworCQkvKiBSZXR1cm4gdGhpcyBvYmplY3QgdG8gdGhlIHNocmlua2VyIHBvb2wgKi8KKwkJ
aTkxNV9nZW1fb2JqZWN0X21ha2VfcHVyZ2VhYmxlKG5vZGUtPm9iaik7CisJCW5vZGUtPnBpbm5l
ZCA9IGZhbHNlOworCX0KIAogCUdFTV9CVUdfT04obm9kZS0+YWdlKTsKIAlzcGluX2xvY2tfaXJx
c2F2ZSgmcG9vbC0+bG9jaywgZmxhZ3MpOwpAQCAtMTQ0LDYgKzEyNSwxOSBAQCBzdGF0aWMgdm9p
ZCBwb29sX3JldGlyZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIAkJCSAgICAgIHJvdW5kX2pp
ZmZpZXNfdXBfcmVsYXRpdmUoSFopKTsKIH0KIAordm9pZCBpbnRlbF9ndF9idWZmZXJfcG9vbF9t
YXJrX3VzZWQoc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5vZGUpCit7CisJYXNz
ZXJ0X29iamVjdF9oZWxkKG5vZGUtPm9iaik7CisKKwlpZiAobm9kZS0+cGlubmVkKQorCQlyZXR1
cm47CisKKwlfX2k5MTVfZ2VtX29iamVjdF9waW5fcGFnZXMobm9kZS0+b2JqKTsKKwkvKiBIaWRl
IHRoaXMgcGlubmVkIG9iamVjdCBmcm9tIHRoZSBzaHJpbmtlciB1bnRpbCByZXRpcmVkICovCisJ
aTkxNV9nZW1fb2JqZWN0X21ha2VfdW5zaHJpbmthYmxlKG5vZGUtPm9iaik7CisJbm9kZS0+cGlu
bmVkID0gdHJ1ZTsKK30KKwogc3RhdGljIHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2Rl
ICoKIG5vZGVfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbCAqcG9vbCwgc2l6ZV90
IHN6KQogewpAQCAtMTU4LDcgKzE1Miw4IEBAIG5vZGVfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndF9i
dWZmZXJfcG9vbCAqcG9vbCwgc2l6ZV90IHN6KQogCiAJbm9kZS0+YWdlID0gMDsKIAlub2RlLT5w
b29sID0gcG9vbDsKLQlpOTE1X2FjdGl2ZV9pbml0KCZub2RlLT5hY3RpdmUsIHBvb2xfYWN0aXZl
LCBwb29sX3JldGlyZSk7CisJbm9kZS0+cGlubmVkID0gZmFsc2U7CisJaTkxNV9hY3RpdmVfaW5p
dCgmbm9kZS0+YWN0aXZlLCBOVUxMLCBwb29sX3JldGlyZSk7CiAKIAlvYmogPSBpOTE1X2dlbV9v
YmplY3RfY3JlYXRlX2ludGVybmFsKGd0LT5pOTE1LCBzeik7CiAJaWYgKElTX0VSUihvYmopKSB7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9v
bC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaAppbmRl
eCA0MmNiYWMwMDNlOGEuLjk4NzhjZTlhMDdhYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbC5oCkBAIC0xNywxMCArMTcsMTUgQEAgc3RydWN0IGk5
MTVfcmVxdWVzdDsKIHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICoKIGludGVsX2d0
X2dldF9idWZmZXJfcG9vbChzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBzaXplX3Qgc2l6ZSk7CiAKK3Zv
aWQgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya191c2VkKHN0cnVjdCBpbnRlbF9ndF9idWZmZXJf
cG9vbF9ub2RlICpub2RlKTsKKwogc3RhdGljIGlubGluZSBpbnQKIGludGVsX2d0X2J1ZmZlcl9w
b29sX21hcmtfYWN0aXZlKHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlLAog
CQkJCSBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKKwkvKiBkaWQgd2UgY2FsbCBtYXJrX3Vz
ZWQ/ICovCisJR0VNX1dBUk5fT04oIW5vZGUtPnBpbm5lZCk7CisKIAlyZXR1cm4gaTkxNV9hY3Rp
dmVfYWRkX3JlcXVlc3QoJm5vZGUtPmFjdGl2ZSwgcnEpOwogfQogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbF90eXBlcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaAppbmRleCBiY2Yx
NjU4Yzk2MzMuLjA0MDE4MjVlODI5ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbF90eXBlcy5oCkBAIC0zMSw2ICszMSw3IEBAIHN0cnVj
dCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlIHsKIAkJc3RydWN0IHJjdV9oZWFkIHJjdTsKIAl9
OwogCXVuc2lnbmVkIGxvbmcgYWdlOworCWJvb2wgcGlubmVkOwogfTsKIAogI2VuZGlmIC8qIElO
VEVMX0dUX0JVRkZFUl9QT09MX1RZUEVTX0ggKi8KLS0gCjIuMjkuMi4yMjIuZzVkMmE5MmQxMGY4
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

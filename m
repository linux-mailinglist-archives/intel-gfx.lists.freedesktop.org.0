Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 7733819D03F
	for <lists+intel-gfx@lfdr.de>; Fri,  3 Apr 2020 08:32:53 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7BBAE6EAF2;
	Fri,  3 Apr 2020 06:32:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 82DD26EAF2
 for <intel-gfx@lists.freedesktop.org>; Fri,  3 Apr 2020 06:32:49 +0000 (UTC)
IronPort-SDR: 8GoOEcHGFMO0eLAyupzXWgV08s1HlrGRXIMTV8SoFsrBBfZOKZ4lGJoumn0juz4XVdedIX+3Bd
 dBCNojghlPuA==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 02 Apr 2020 23:32:48 -0700
IronPort-SDR: X3u1E93firWS10kf227sqlvc8z+6fLH5bbC+OP/kdQyUZm59pkDymzuflAODSDYyrauZndOh7a
 8P9i++w+Ky7g==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,338,1580803200"; d="scan'208";a="242731128"
Received: from unknown (HELO slisovsk-Lenovo-ideapad-720S-13IKB.fi.intel.com)
 ([10.237.72.89])
 by fmsmga008.fm.intel.com with ESMTP; 02 Apr 2020 23:32:46 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  3 Apr 2020 09:29:10 +0300
Message-Id: <20200403062910.12162-1-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200326183959.22903-1-stanislav.lisovskiy@intel.com>
References: <20200326183959.22903-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v21 06/10] drm/i915: Add proper SAGV support for
 TGL+
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TGV0J3MgcmVmYWN0b3IgdGhlIHdob2xlIFNBR1YgbG9naWMsIG1vdmluZwp0aGUgbWFpbiBjYWxj
dWxhdGlvbnMgZnJvbSBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YKdG8gaW50ZWxfY29tcHV0ZV9zYWd2
X21hc2ssIHdoaWNoIGFsc28gaGFuZGxlcwp0aGlzIGluIGEgdW5pZmllZCB3YXkgY2FsbGluZyBn
ZW4gc3BlY2lmaWMKZnVuY3Rpb25zIHRvIGV2YWx1YXRlIGlmIFNBR1YgaXMgYWxsb3dlZCBmb3IK
ZWFjaCBjcnRjLiBJZiBjcnRjIHNhZ3YgbWFzayBoYXZlIGJlZW4gY2hhbmdlZAp3ZSBzZXJpYWxp
emUgYWNjZXNzIGFuZCBtb2RpZnkgZ2xvYmFsIHN0YXRlLgoKaW50ZWxfY2FuX2VuYWJsZV9zYWd2
IG5vdyB1c2VzIGJ3X3N0YXRlIHdoaWNoCnN0b3JlcyBhbGwgaW5mb3JtYXRpb24gcmVsYXRlZCB0
byBTQUdWIGFuZAppcyBub3cgYSB0cml2aWFsIGhlbHBlci4KCnYyOgogICAgLSBSZXdvcmsgd2F0
ZXJtYXJrIGNhbGN1bGF0aW9uIGFsZ29yaXRobSB0bwogICAgICBhdHRlbXB0IHRvIGNhbGN1bGF0
ZSBMZXZlbCAwIHdhdGVybWFyawogICAgICB3aXRoIGFkZGVkIHNhZ3YgYmxvY2sgdGltZSBsYXRl
bmN5IGFuZAogICAgICBjaGVjayBpZiBpdCBmaXRzIGluIERCdWYgaW4gb3JkZXIgdG8KICAgICAg
ZGV0ZXJtaW5lIGlmIFNBR1YgY2FuIGJlIGVuYWJsZWQgYWxyZWFkeQogICAgICBhdCB0aGlzIHN0
YWdlLCBqdXN0IGFzIEJTcGVjIDQ5MzI1IHN0YXRlcy4KICAgICAgaWYgdGhhdCBmYWlscyByb2xs
YmFjayB0byB1c3VhbCBMZXZlbCAwCiAgICAgIGxhdGVuY3kgYW5kIGRpc2FibGUgU0FHVi4KICAg
IC0gUmVtb3ZlIHVubmVlZGVkIHRhYnMoSmFtZXMgQXVzbXVzKQoKdjM6IFJlYmFzZWQgdGhlIHBh
dGNoCgp2NDogLSBBZGRlZCBiYWNrIGludGVybGFjZWQgY2hlY2sgZm9yIEdlbjEyIGFuZAogICAg
ICBhZGRlZCBzZXBhcmF0ZSBmdW5jdGlvbiBmb3IgVEdMIFNBR1YgY2hlY2sKICAgICAgKHRoYW5r
cyB0byBKYW1lcyBBdXNtdXMgZm9yIHNwb3R0aW5nKQogICAgLSBSZW1vdmVkIHVubmVlZGVkIGdl
biBjaGVjawogICAgLSBFeHRyYWN0ZWQgR2VuMTIgU0FHViBkZWNpc2lvbiBtYWtpbmcgY29kZQog
ICAgICB0byBhIHNlcGFyYXRlIGZ1bmN0aW9uIGZyb20gc2tsX2NvbXB1dGVfd20KCnY1OiAtIEFk
ZGVkIFNBR1YgZ2xvYmFsIHN0YXRlIHRvIGRldl9wcml2LCBiZWNhdXNlCiAgICAgIHdlIG5lZWQg
dG8gdHJhY2sgYWxsIHBpcGVzLCBub3Qgb25seSB0aG9zZQogICAgICBpbiBhdG9taWMgc3RhdGUu
IEVhY2ggcGlwZSBoYXMgbm93IGNvcnJlc3BvbmRlbnQKICAgICAgYml0IG1hc2sgcmVmbGVjdGlu
Zywgd2hldGhlciBpdCBjYW4gdG9sZXJhdGUKICAgICAgU0FHViBvciBub3QodGhhbmtzIHRvIFZp
bGxlIFN5cmphbGEgZm9yIHN1Z2dlc3Rpb25zKS4KICAgIC0gTm93IHVzaW5nIGFjdGl2ZSBmbGFn
IGluc3RlYWQgb2YgZW5hYmxlIGluIGNyYwogICAgICB1c2FnZSBjaGVjay4KCnY2OiAtIEZpeGVk
IHJlYmFzZSBjb25mbGljdHMKCnY3OiAtIGttc19jdXJzb3JfbGVnYWN5IHNlZW1zIHRvIGdldCBi
cm9rZW4gYmVjYXVzZSBvZiBtdWx0aXBsZSBtZW1jcHkKICAgICAgY2FsbHMgd2hlbiBjb3B5aW5n
IGxldmVsIDAgd2F0ZXIgbWFya3MgZm9yIGVuYWJsZWQgU0FHViwgdG8KICAgICAgZml4IHRoaXMg
bm93IHNpbXBseSB1c2luZyB0aGF0IGZpZWxkIHJpZ2h0IGF3YXksIHdpdGhvdXQgY29weWluZywK
ICAgICAgZm9yIHRoYXQgaW50cm9kdWNlZCBhIG5ldyB3bV9sZXZlbCBhY2Nlc3NvciB3aGljaCBk
ZWNpZGVzIHdoaWNoCiAgICAgIHdtX2xldmVsIHRvIHJldHVybiBiYXNlZCBvbiBTQUdWIHN0YXRl
LgoKdjg6IC0gUHJvdGVjdCBjcnRjX3NhZ3ZfbWFzayBzYW1lIHdheSBhcyB3ZSBkbyBmb3Igb3Ro
ZXIgZ2xvYmFsIHN0YXRlCiAgICAgIGNoYW5nZXM6IGkuZSBjaGVjayBpZiBjaGFuZ2VzIGFyZSBu
ZWVkZWQsIHRoZW4gZ3JhYiBhbGwgY3J0YyBsb2NrcwogICAgICB0byBzZXJpYWxpemUgdGhlIGNo
YW5nZXMoVmlsbGUgU3lyasOkbMOkKQogICAgLSBBZGQgY3J0Y19zYWd2X21hc2sgY2FjaGluZyBp
biBvcmRlciB0byBhdm9pZCBuZWVkbGVzcyByZWNhbGN1bGF0aW9ucwogICAgICAoTWF0dGhldyBS
b3BlcikKICAgIC0gUHV0IGJhY2sgR2VuMTIgU0FHViBzd2l0Y2ggaW4gb3JkZXIgdG8gZ2V0IGl0
IGVuYWJsZWQgaW4gc2VwYXJhdGUKICAgICAgcGF0Y2goTWF0dGhldyBSb3BlcikKICAgIC0gUmVu
YW1lICpfc2V0X3NhZ3ZfbWFzayB0byAqX2NvbXB1dGVfc2Fndl9tYXNrKE1hdHRoZXcgUm9wZXIp
CiAgICAtIENoZWNrIGlmIHRoZXJlIGFyZSBubyBhY3RpdmUgcGlwZXMgaW4gaW50ZWxfY2FuX2Vu
YWJsZV9zYWd2CiAgICAgIGluc3RlYWQgb2YgcGxhdGZvcm0gc3BlY2lmaWMgZnVuY3Rpb25zKE1h
dHRoZXcgUm9wZXIpLCBzYW1lCiAgICAgIGZvciBpbnRlbF9oYXNfc2FndiBjaGVjay4KCnY5ICAt
IFN3aXRjaGVkIHRvIHU4IGZvciBjcnRjX3NhZ3ZfbWFzayhWaWxsZSBTeXJqw6Rsw6QpCiAgICAt
IGNydGNfc2Fndl9tYXNrIG5vdyBpcyBwaXBlX3NhZ3ZfbWFzayhWaWxsZSBTeXJqw6Rsw6QpCiAg
ICAtIEV4dHJhY3RlZCBzYWd2IGNoZWNraW5nIGxvZ2ljIGZyb20gc2tsL2ljbC90Z2xfY29tcHV0
ZV9zYWd2X21hc2sKICAgIC0gRXh0cmFjdGVkIHNrbF9wbGFuZV93bV9sZXZlbCBmdW5jdGlvbiBh
bmQgcGFzc2luZyBsYXRlbmN5IHRvCiAgICAgIHNlcGFyYXRlIHBhdGNoZXMoVmlsbGUgU3lyasOk
bMOkKQogICAgLSBSZW1vdmVkIHBhcnQgb2YgdW5uZWVkZWQgY29weS1wYXN0ZSBmcm9tIHRnbF9j
aGVja19waXBlX2ZpdHNfc2Fndl93bQogICAgICAoVmlsbGUgU3lyasOkbMOkKQogICAgLSBOb3cg
dXNpbmcgc2ltcGxlIGFzc2lnbm1lbnQgZm9yIHNhZ3Zfd20wIGFzIGl0IGNvbnRhaW5zIG9ubHkK
ICAgICAgcG9kIHR5cGVzIGFuZCBubyBwb2ludGVycyhWaWxsZSBTeXJqw6Rsw6QpCiAgICAtIEZp
eGVkIGludGVsX2Nhbl9lbmFibGVfc2FndiBub3QgdG8gZG8gZG91YmxlIGR1dHksIG5vdyBpdCBv
bmx5CiAgICAgIGNoZWNrIFNBR1YgYml0cyBieSBBTkRpbmcgdGhvc2UgYmV0d2VlbiBsb2NhbCBh
bmQgZ2xvYmFsIHN0YXRlLgogICAgICBUaGUgU0FHViBtYXNrcyBhcmUgbm93IGNvbXB1dGVkIGFm
dGVyIHdhdGVybWFya3MgYXJlIGF2YWlsYWJsZSwKICAgICAgaW4gb3JkZXIgdG8gYmUgYWJsZSB0
byBmaWd1cmUgb3V0IGlmIGRkYiByYW5nZXMgYXJlIGZpdHRpbmcgbmljZWx5LgogICAgICAoVmls
bGUgU3lyasOkbMOkKQogICAgLSBOb3cgaGF2aW5nIHV2X3NhZ3Zfd20wIGFuZCBzYWd2X3dtMCwg
b3RoZXJ3aXNlIHdlIGhhdmUgd3JvbmcgbG9naWMKICAgICAgd2hlbiB1c2luZyBza2xfcGxhbmVf
d21fbGV2ZWwgYWNjZXNzb3IsIGFzIHdlIGhhZCBwcmV2aW91c2x5IGZvcgogICAgICBHZW4xMSsg
Y29sb3IgcGxhbmUgYW5kIHJlZ3VsYXIgd20gbGV2ZWxzLCBzbyBwcm9iYWJseSBib3RoCiAgICAg
IGhhcyB0byBiZSByZWNhbGN1bGF0ZWQgd2l0aCBhZGRpdGlvbmFsIFNBR1YgYmxvY2sgdGltZSBm
b3IgTGV2ZWwgMC4KCnYxMDogLSBTdGFydGluZyB0byB1c2UgbmV3IGdsb2JhbCBzdGF0ZSBmb3Ig
c3RvcmluZyBwaXBlX3NhZ3ZfbWFzawoKdjExOiAtIEZpeGVkIHJlYmFzZSBjb25mbGljdCB3aXRo
IHJlY2VudCBkcm0tdGlwCiAgICAgLSBDaGVjayBpZiB3ZSByZWFsbHkgbmVlZCB0byByZWNhbGN1
bGF0ZSBTQUdWIG1hc2ssIG90aGVyd2lzZQogICAgICAgYmFpbCBvdXQgd2l0aG91dCBtYWtpbmcg
YW55IGNoYW5nZXMuCiAgICAgLSBVc2UgY2FjaGVkIFNBR1YgcmVzdWx0LCBpbnN0ZWFkIG9mIHJl
Y2FsY3VsYXRpbmcgaXQgZXZlcnl0aW1lLAogICAgICAgaWYgYndfc3RhdGUgaGFzbid0IGNoYW5n
ZWQuCgp2MTI6IC0gUmVtb3ZlZCBXQVJOIGZyb20gaW50ZWxfY2FuX2VuYWJsZV9zYWd2LCBpbiBz
b21lIG9mIHRoZSBjb21taXRzCiAgICAgICBpZiB3ZSBkb24ndCByZWNhbGN1bGF0ZWQgd2F0ZXJt
YXJrcywgYndfc3RhdGUgaXMgbm90IHJlY2FsY3VsYXRlZCwKICAgICAgIHRodXMgbGVhZGluZyB0
byBTQUdWIHN0YXRlIG5vdCByZWNhbGN1bGF0ZWQgYnkgdGhlIGNvbW1pdCBzdGF0ZSwKICAgICAg
IHdoaWNoIGlzIHN0aWxsIGNhbGxpbmcgaW50ZWxfY2FuX2VuYWJsZV9zYWd2IGZ1bmN0aW9uLiBG
aXggdGhhdAogICAgICAgYnkganVzdCBhbmFseXppbmcgdGhlIGN1cnJlbnQgZ2xvYmFsIGJ3X3N0
YXRlIG9iamVjdCAtIGJlY2F1c2UKICAgICAgIHdlIHNpbXBseSBoYXZlIG5vIG90aGVyIG9iamVj
dHMgcmVsYXRlZCB0byB0aGF0LgoKdjEzOiAtIFJlYmFzZWQsIGZpeGVkIHdhcm5pbmdzIHJlZ2Fy
ZGluZyBsb25nIGxpbmVzCiAgICAgLSBDaGFuZ2VkIGZ1bmN0aW9uIGNhbGwgc2l0ZXMgZnJvbSBp
bnRlbF9hdG9taWNfYncqIHRvCiAgICAgICBpbnRlbF93Yl8qIGFzIHdhcyBzdWdnZXN0ZWQuKEph
bmkgTmlrdWxhKQogICAgIC0gVGFrZW4gZGRiX3N0YXRlX2NoYW5nZWQgYW5kIGJ3X3N0YXRlX2No
YW5nZWQgaW50byB1c2UuCgp2MTQ6IC0gdG90YWxfYWZmZWN0ZWRfcGxhbmVzIGlzIG5vIGxvbmdl
ciBuZWVkZWQgdG8gY2hlY2sgZm9yIGRkYiBjaGFuZ2VzLAogICAgICAganVzdCBhcyBhY3RpdmVf
cGlwZV9jaGFuZ2VzLgoKdjE1OiAtIEZpeGVkIHN0dXBpZCBtaXN0YWtlIHdpdGggdW5pbml0aWFs
aXplZCBjcnRjIGluCiAgICAgICBza2xfY29tcHV0ZV9zYWd2X21hc2suCgp2MTY6IC0gQ29udmVy
dCBwaXBlX3NhZ3ZfbWFzayB0byBwaXBlX3NhZ3ZfcmVqZWN0IGFuZCBub3cgdXNpbmcgaW52ZXJ0
ZWQKICAgICAgIGZsYWcgdG8gaW5kaWNhdGUgU0FHViByZWFkaW5lc3MgZm9yIHRoZSBwaXBlKFZp
bGxlIFN5cmrDpGzDpCkKICAgICAtIEFkZGVkIHJldHVybiB2YWx1ZSB0byBpbnRlbF9jb21wdXRl
X3NhZ3ZfbWFzayB3aGljaCBjYWxsCiAgICAgICBpbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2Jh
bF9zdGF0ZSBpbiBvcmRlciB0byBwcm9wZXJseQogICAgICAgcHJvcGFnYXRlIEVERUFETENLIHRv
IGRybS4KICAgICAtIEJhc2VkIG9uIHRoZSBkaXNjdXNzaW9uIHdpdGggVmlsbGUsIHJlbW92ZWQg
YWN0aXZlX3BpcGVfY2hhbmdlcwogICAgICAgY2hlY2sgYW5kIGFsc28gdGhlcmUgc2VlbXMgdG8g
YmUgbm8gbmVlZCBmb3IgY2hlY2tpbmcKICAgICAgIGRkYl9zdGF0ZV9jaGFuZ2VzIGFzIHdlbGwu
CiAgICAgICBJbnN0ZWFkIHdlIGp1c3QgaXRlcmF0ZSB0aHJvdWdoIGNydGNzIGluIHN0YXRlIC0g
aGF2aW5nCiAgICAgICBjcnRjIGluIGEgc3RhdGUgYWxyZWFkeSBndWFyYW50ZWVzIHRoYXQgaXQg
aXMgYXQgbGVhc3QgcmVhZC1sb2NrZWQKICAgICAgIEhhdmluZyBhZGRpdGlvbmFsIGZsYWcgdG8g
Y2hlY2sgaWYgdGhlcmUgYWN0dWFsbHkgd2VyZSBzb21lIHBsYW5lCiAgICAgICB3bS9kZGIgY2hh
bmdlcyB3b3VsZCBiZSBwcm9iYWJseSBhZGRlZCBsYXRlciBhcyBhbiBvcHRpbWl6YXRpb24uCiAg
ICAgLSBXZSBjYW4ndCBnZXQgcGFyZW50IGF0b21pYyBzdGF0ZSBmcm9tIGNydGNfc3RhdGUgYXQg
Y29tbWl0IHN0YWdlCiAgICAgICAobmljZSBkcm0gZmVhdHVyZSksIGFsc28gcHJvcGFnYXRpbmcg
c3RhdGUgdGhyb3VnaCBmdW5jdGlvbiBjYWxsCiAgICAgICBjaGFpbiBzZWVtcyB0byBiZSBvdmVy
a2lsbCBhbmQgbm90IHBvc3NpYmxlKGN1cnNvciBsZWdhY3kgdXBkYXRlcykKICAgICAgIFF1ZXJ5
aW5nIGZvciBid19zdGF0ZSBvYmplY3QgZnJvbSBnbG9iYWwgc3RhdGUgaXMgbm90IHBvc3NpYmxl
IGFzCiAgICAgICBpdCBtaWdodCBnZXQgc3dhcHBlZCB3aXRoIG90aGVyIGdsb2JhbCBzdGF0ZS4K
ICAgICAgIFNvLi4uIGp1c3Qgc3RpY2tlZCBjYW5fc2FndiBib29sZWFuIGludG8gd20gY3J0YyBz
dGF0ZS4KCnYxNzogLSBTa2lwIGluYWN0aXZlIGNydGNzLCB3aGVuIGNoZWNraW5nIGZvciBTQUdW
LXJlYWRpbmVzcy4KCnYxODogLSBTd2l0Y2ggdG8gdXNlIGludGVsX2F0b21pY19jcnRjX3N0YXRl
X2Zvcl9lYWNoX3BsYW5lX3N0YXRlCiAgICAgICBpbnN0ZWFkIG9mIGZvcl9lYWNoX2ludGVsX3Bs
YW5lX29uX2NydGMgYW5kIGZpeGVkIHByZXZpb3VzCiAgICAgICBjb2RlLCB3aGljaCB3YXMgdXNp
bmcgb2xkIHBsYW5lIHN0YXRlLCB3aGljaCBjYXVzZWQgTlVMTCBwdHIKICAgICAgIGRlcmVmZXJl
bmNlLCBiYWNhdXNlIHRoYXQgY29kZSBpcyBub3cgY2FsbGVkIGJlZm9yZSB3ZSBzd2FwIHRoZQog
ICAgICAgc3RhdGUuCgp2MTk6IC0gVXNlIGludGVsX2F0b21pY19id18qIHBhdHRlcm4gYWdhaW4K
ICAgICAtIE9wdGltaXplZCBzYWd2IGNoZWNrcyBpbiB2ZXJpZnlfd21fc3RhdGUoVmlsbGUgU3ly
asOkbMOkKQogICAgIC0gRG8gaW50ZWxfY29tcHV0ZV9zYWd2X21hc2sgYWZ0ZXIgZGRiIGlzIGFs
bG9jYXRlZChWaWxsZSBTeXJqw6Rsw6QpLAogICAgICAgdXNpbmcgaXQncyByZXN1bHRzCiAgICAg
LSBVc2UgYndfc3RhdGUgaW4gaW50ZWxfY2FuX2VuYWJsZV9zYWd2CiAgICAgLSBVc2UgQ09MT1Jf
UExBTkUgZW51bSBpbnN0ZWFkIG9mIGJvb2xlYW4geXV2IG9yICIwIiwgIjEiIG1hZ2ljCiAgICAg
LSBFeHRyYWN0ZWQgc2FndiB3bTAgY2FsY3VsYXRpb24gaW50byBzZXBhcmF0ZSBza2xfY29tcHV0
ZV9zYWd2X3dtCiAgICAgICBmdW5jdGlvbihWaWxsZSBTeXJqw6Rsw6QpCgp2MjA6IC0gQWRkZWQg
Y2hlY2sgZm9yIE5VTEwgZm9yIGJ3X3N0YXRlIGluIGNvbW1pdF90YWlsCiAgICAgLSBSZW1vdmVk
IGxvbmcgY29tbWVudHMgYW5kIHdhcm5zKFZpbGxlKQogICAgIC0gRXh0cmFjdGVkIGlmIGxhZGRl
ciBmcm9tIGNvbXB1dGVfc2FndihWaWxsZSkKICAgICAtIFJlbW92ZWQgc29tZSBkZWJ1Z3MoVmls
bGUpCiAgICAgLSBFeHRyYWN0ZWQgc2Fndl93bTAgaW5pdCBmcm9tIHRoZSBsb29wIGluIHNrbF9w
aXBlX3dtX2dldF9od19zdGF0ZQogICAgICAgKFZpbGxlKQogICAgIC0gTm93IHByaW50aW5nIHNh
Z3Zfd20wIHNlcGFyYXRlbHkoVmlsbGUpCgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zz
a2l5IDxzdGFuaXNsYXYubGlzb3Zza2l5QGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8
dmlsbGUuc3lyamFsYUBpbnRlbC5jb20+CkNjOiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0Bp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oICAg
ICAgIHwgICA2ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5j
ICB8ICAyOCArKy0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAg
ICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAg
fCAxNzkgKysrKysrKysrKysrKysrKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5o
ICAgICAgICAgICAgICAgfCAgIDQgKy0KIDUgZmlsZXMgY2hhbmdlZCwgMTk2IGluc2VydGlvbnMo
KyksIDI0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfYncuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncu
aAppbmRleCBhYzAwNGQ2ZjQyNzYuLmQ2ZGY5MTA1ODIyMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfYncuaApAQCAtMTgsNiArMTgsMTIgQEAgc3RydWN0IGludGVsX2NydGNf
c3RhdGU7CiBzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgewogCXN0cnVjdCBpbnRlbF9nbG9iYWxfc3Rh
dGUgYmFzZTsKIAorCS8qCisJICogQ29udGFpbnMgYSBiaXQgbWFzaywgdXNlZCB0byBkZXRlcm1p
bmUsIHdoZXRoZXIgY29ycmVzcG9uZGVudAorCSAqIHBpcGUgYWxsb3dzIFNBR1Ygb3Igbm90Lgor
CSAqLworCXU4IHBpcGVfc2Fndl9yZWplY3Q7CisKIAl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlW0k5
MTVfTUFYX1BJUEVTXTsKIAl1OCBudW1fYWN0aXZlX3BsYW5lc1tJOTE1X01BWF9QSVBFU107CiB9
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBl
NjMwNDI5YWYyYzAuLmE2MDExNzdiMjFhYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE0MDA5LDcgKzE0MDA5LDkgQEAgc3RhdGljIHZvaWQg
dmVyaWZ5X3dtX3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQkvKiBXYXRlcm1hcmtz
ICovCiAJCWZvciAobGV2ZWwgPSAwOyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKIAkJ
CWlmIChza2xfd21fbGV2ZWxfZXF1YWxzKCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAotCQkJCQkJ
JnN3X3BsYW5lX3dtLT53bVtsZXZlbF0pKQorCQkJCQkJJnN3X3BsYW5lX3dtLT53bVtsZXZlbF0p
IHx8CisJCQkgICAgKGxldmVsID09IDAgJiYgc2tsX3dtX2xldmVsX2VxdWFscygmaHdfcGxhbmVf
d20tPndtW2xldmVsXSwKKwkJCQkJCQkgICAgICAgJnN3X3BsYW5lX3dtLT5zYWd2X3dtMCkpKQog
CQkJCWNvbnRpbnVlOwogCiAJCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLApAQCAtMTQwNjQsNyAr
MTQwNjYsOSBAQCBzdGF0aWMgdm9pZCB2ZXJpZnlfd21fc3RhdGUoc3RydWN0IGludGVsX2NydGMg
KmNydGMsCiAJCS8qIFdhdGVybWFya3MgKi8KIAkJZm9yIChsZXZlbCA9IDA7IGxldmVsIDw9IG1h
eF9sZXZlbDsgbGV2ZWwrKykgewogCQkJaWYgKHNrbF93bV9sZXZlbF9lcXVhbHMoJmh3X3BsYW5l
X3dtLT53bVtsZXZlbF0sCi0JCQkJCQkmc3dfcGxhbmVfd20tPndtW2xldmVsXSkpCisJCQkJCQkm
c3dfcGxhbmVfd20tPndtW2xldmVsXSkgfHwKKwkJCSAgICAobGV2ZWwgPT0gMCAmJiBza2xfd21f
bGV2ZWxfZXF1YWxzKCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAorCQkJCQkJCSAgICAgICAmc3df
cGxhbmVfd20tPnNhZ3Zfd20wKSkpCiAJCQkJY29udGludWU7CiAKIAkJCWRybV9lcnIoJmRldl9w
cml2LT5kcm0sCkBAIC0xNTUzNSw2ICsxNTUzOSw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21p
Y19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJY3J0Yy0+
Y29uZmlnID0gbmV3X2NydGNfc3RhdGU7CiAKIAlpZiAoc3RhdGUtPm1vZGVzZXQpIHsKKwogCQlk
cm1fYXRvbWljX2hlbHBlcl91cGRhdGVfbGVnYWN5X21vZGVzZXRfc3RhdGUoZGV2LCAmc3RhdGUt
PmJhc2UpOwogCiAJCWludGVsX3NldF9jZGNsa19wcmVfcGxhbmVfdXBkYXRlKHN0YXRlKTsKQEAg
LTE1NTQzLDggKzE1NTQ4LDEzIEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFp
bChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJICogU0tMIHdvcmthcm91bmQ6
IGJzcGVjIHJlY29tbWVuZHMgd2UgZGlzYWJsZSB0aGUgU0FHViB3aGVuIHdlCiAJCSAqIGhhdmUg
bW9yZSB0aGVuIG9uZSBwaXBlIGVuYWJsZWQKIAkJICovCi0JCWlmICghaW50ZWxfY2FuX2VuYWJs
ZV9zYWd2KHN0YXRlKSkKLQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7CisJCWlmIChJ
TlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEpIHsKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9id19zdGF0
ZSAqYndfc3RhdGUgPQorCQkJCWludGVsX2F0b21pY19nZXRfbmV3X2J3X3N0YXRlKHN0YXRlKTsK
KworCQkJaWYgKGJ3X3N0YXRlICYmICFpbnRlbF9jYW5fZW5hYmxlX3NhZ3YoYndfc3RhdGUpKQor
CQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7CisJCX0KIAogCQlpbnRlbF9tb2Rlc2V0
X3ZlcmlmeV9kaXNhYmxlZChkZXZfcHJpdiwgc3RhdGUpOwogCX0KQEAgLTE1NjQ0LDggKzE1NjU0
LDE0IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSkKIAlpZiAoc3RhdGUtPm1vZGVzZXQpCiAJCWludGVsX3Zlcmlm
eV9wbGFuZXMoc3RhdGUpOwogCi0JaWYgKHN0YXRlLT5tb2Rlc2V0ICYmIGludGVsX2Nhbl9lbmFi
bGVfc2FndihzdGF0ZSkpCi0JCWludGVsX2VuYWJsZV9zYWd2KGRldl9wcml2KTsKKwlpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA8IDExKSB7CisJCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAqYndfc3Rh
dGU7CisKKwkJYndfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X25ld19id19zdGF0ZShzdGF0ZSk7
CisKKwkJaWYgKGJ3X3N0YXRlICYmIHN0YXRlLT5tb2Rlc2V0ICYmIGludGVsX2Nhbl9lbmFibGVf
c2Fndihid19zdGF0ZSkpCisJCQlpbnRlbF9lbmFibGVfc2FndihkZXZfcHJpdik7CisJfQogCiAJ
ZHJtX2F0b21pY19oZWxwZXJfY29tbWl0X2h3X2RvbmUoJnN0YXRlLT5iYXNlKTsKIApkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRl
eCA1MjNlMDQ0NGIzNzMuLjUxZmE1YTc0NmE1ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAgLTY3OSw2ICs2NzksOCBAQCBz
dHJ1Y3Qgc2tsX3BsYW5lX3dtIHsKIAlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHdtWzhdOwogCXN0cnVj
dCBza2xfd21fbGV2ZWwgdXZfd21bOF07CiAJc3RydWN0IHNrbF93bV9sZXZlbCB0cmFuc193bTsK
KwlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHNhZ3Zfd20wOworCXN0cnVjdCBza2xfd21fbGV2ZWwgdXZf
c2Fndl93bTA7CiAJYm9vbCBpc19wbGFuYXI7CiB9OwogCkBAIC02ODksNiArNjkxLDcgQEAgZW51
bSBjb2xvcl9wbGFuZSB7CiAKIHN0cnVjdCBza2xfcGlwZV93bSB7CiAJc3RydWN0IHNrbF9wbGFu
ZV93bSBwbGFuZXNbSTkxNV9NQVhfUExBTkVTXTsKKwlib29sIGNhbl9zYWd2OwogfTsKIAogZW51
bSB2bHZfd21fbGV2ZWwgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKaW5kZXggMjdkNGQ2MjZjYjM0
Li45OTRjNmRjMGZhNGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Bt
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtNDMsNiArNDMsNyBA
QAogI2luY2x1ZGUgImk5MTVfZml4ZWQuaCIKICNpbmNsdWRlICJpOTE1X2lycS5oIgogI2luY2x1
ZGUgImk5MTVfdHJhY2UuaCIKKyNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2J3LmgiCiAjaW5jbHVk
ZSAiaW50ZWxfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9zaWRlYmFuZC5oIgogI2luY2x1ZGUgIi4u
Ly4uLy4uL3BsYXRmb3JtL3g4Ni9pbnRlbF9pcHMuaCIKQEAgLTM2MzQsNyArMzYzNSw3IEBAIHN0
YXRpYyBib29sIHNrbF9uZWVkc19tZW1vcnlfYndfd2Eoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCXJldHVybiBJU19HRU45X0JDKGRldl9wcml2KSB8fCBJU19CUk9YVE9OKGRl
dl9wcml2KTsKIH0KIAotc3RhdGljIGJvb2wKK2Jvb2wKIGludGVsX2hhc19zYWd2KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAkvKiBIQUNLISAqLwpAQCAtMzgyNCwyOSAr
MzgyNSw4OCBAQCBzdGF0aWMgYm9vbCBza2xfY3J0Y19jYW5fZW5hYmxlX3NhZ3YoY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJcmV0dXJuIGljbF9jcnRjX2Nhbl9l
bmFibGVfc2FndihjcnRjX3N0YXRlKTsKIH0KIAotYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yo
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCitzdGF0aWMgYm9vbAordGdsX2NydGNf
Y2FuX2VuYWJsZV9zYWd2KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KTsKKworYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YoY29uc3Qgc3RydWN0IGludGVsX2J3X3N0
YXRlICpid19zdGF0ZSkKK3sKKwlyZXR1cm4gYndfc3RhdGUtPnBpcGVfc2Fndl9yZWplY3QgPT0g
MDsKK30KKworYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Zfb25fcGlwZShjb25zdCBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShuZXdfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYp
OworCWJvb2wgcmVzOworCisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpCisJCXJlcyA9
IHRnbF9jcnRjX2Nhbl9lbmFibGVfc2FndihuZXdfY3J0Y19zdGF0ZSk7CisJZWxzZSBpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSAxMSkKKwkJcmVzID0gaWNsX2NydGNfY2FuX2VuYWJsZV9zYWd2
KG5ld19jcnRjX3N0YXRlKTsKKwllbHNlCisJCXJlcyA9IHNrbF9jcnRjX2Nhbl9lbmFibGVfc2Fn
dihuZXdfY3J0Y19zdGF0ZSk7CisKKwlyZXR1cm4gcmVzOworfQorCitzdGF0aWMgaW50IGludGVs
X2NvbXB1dGVfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2Uu
ZGV2KTsKKwlpbnQgcmV0OwogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjOwotCWNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpuZXdfY3J0Y19zdGF0ZTsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm5ld19id19zdGF0ZSA9
IE5VTEw7CisJY29uc3Qgc3RydWN0IGludGVsX2J3X3N0YXRlICpvbGRfYndfc3RhdGUgPSBOVUxM
OwogCWludCBpOworCWJvb2wgY2FuX3NhZ3Y7CiAKIAlpZiAoIWludGVsX2hhc19zYWd2KGRldl9w
cml2KSkKLQkJcmV0dXJuIGZhbHNlOworCQlyZXR1cm4gMDsKIAotCWZvcl9lYWNoX25ld19pbnRl
bF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBjcnRjX3N0YXRlLCBpKSB7Ci0JCWJvb2wgY2Fu
X3NhZ3Y7CisJZm9yX2VhY2hfbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUsIGNydGMsCisJ
CQkJCSBuZXdfY3J0Y19zdGF0ZSwgaSkgewogCi0JCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDExKQotCQkJY2FuX3NhZ3YgPSBpY2xfY3J0Y19jYW5fZW5hYmxlX3NhZ3YoY3J0Y19zdGF0ZSk7
CisJCW5ld19id19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfYndfc3RhdGUoc3RhdGUpOworCQlp
ZiAoSVNfRVJSKG5ld19id19zdGF0ZSkpCisJCQlyZXR1cm4gUFRSX0VSUihuZXdfYndfc3RhdGUp
OworCisJCW9sZF9id19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfb2xkX2J3X3N0YXRlKHN0YXRl
KTsKKworCQlpZiAoaW50ZWxfY2FuX2VuYWJsZV9zYWd2X29uX3BpcGUobmV3X2NydGNfc3RhdGUp
KQorCQkJbmV3X2J3X3N0YXRlLT5waXBlX3NhZ3ZfcmVqZWN0ICY9IH5CSVQoY3J0Yy0+cGlwZSk7
CiAJCWVsc2UKLQkJCWNhbl9zYWd2ID0gc2tsX2NydGNfY2FuX2VuYWJsZV9zYWd2KGNydGNfc3Rh
dGUpOworCQkJbmV3X2J3X3N0YXRlLT5waXBlX3NhZ3ZfcmVqZWN0IHw9IEJJVChjcnRjLT5waXBl
KTsKKwl9CiAKLQkJaWYgKCFjYW5fc2FndikKLQkJCXJldHVybiBmYWxzZTsKKwlpZiAoIW5ld19i
d19zdGF0ZSB8fCAhb2xkX2J3X3N0YXRlKQorCQlyZXR1cm4gMDsKKworCWNhbl9zYWd2ID0gbmV3
X2J3X3N0YXRlLT5waXBlX3NhZ3ZfcmVqZWN0ID09IDA7CisKKwlmb3JfZWFjaF9uZXdfaW50ZWxf
Y3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0YywKKwkJCQkJIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJ
CXN0cnVjdCBza2xfcGlwZV93bSAqcGlwZV93bSA9ICZuZXdfY3J0Y19zdGF0ZS0+d20uc2tsLm9w
dGltYWw7CisKKwkJLyoKKwkJICogRHVlIHRvIGRybSBsaW1pdGF0aW9uIGF0IGNvbW1pdCBzdGF0
ZSwgd2hlbgorCQkgKiBjaGFuZ2VzIGFyZSB3cml0dGVuIHRoZSB3aG9sZSBhdG9taWMgc3RhdGUg
aXMKKwkJICogemVyb2VkIGF3YXkgPT4gd2hpY2ggcHJldmVudHMgZnJvbSB1c2luZyBpdCwKKwkJ
ICogc28ganVzdCBzdGlja2luZyBpdCBpbnRvIHBpcGUgd20gc3RhdGUgZm9yCisJCSAqIGtlZXBp
bmcgaXQgc2ltcGxlIC0gYW55d2F5IHRoaXMgaXMgcmVsYXRlZCB0byB3bS4KKwkJICogUHJvcGVy
IHdheSBpbiBpZGVhbCB1bml2ZXJzZSB3b3VsZCBiZSBvZiBjb3Vyc2Ugbm90CisJCSAqIHRvIGxv
c2UgcGFyZW50IGF0b21pYyBzdGF0ZSBvYmplY3QgZnJvbSBjaGlsZCBjcnRjX3N0YXRlLAorCQkg
KiBhbmQgc3RpY2sgdG8gT09QIHByb2dyYW1taW5nIHByaW5jaXBsZXMsIHdoaWNoIGhhZCBiZWVu
CisJCSAqIHNjaWVudGlmaWNhbGx5IHByb3ZlbiB0byB3b3JrLgorCQkgKi8KKwkJcGlwZV93bS0+
Y2FuX3NhZ3YgPSBjYW5fc2FndjsKIAl9CiAKLQlyZXR1cm4gdHJ1ZTsKKwlpZiAobmV3X2J3X3N0
YXRlLT5waXBlX3NhZ3ZfcmVqZWN0ICE9IG9sZF9id19zdGF0ZS0+cGlwZV9zYWd2X3JlamVjdCkg
eworCQlyZXQgPSBpbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZSgmbmV3X2J3X3N0
YXRlLT5iYXNlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJcmV0dXJuIDA7
CiB9CiAKIC8qCkBAIC00NTc5LDEyICs0NjM5LDM5IEBAIHNrbF9wbGFuZV93bV9sZXZlbChjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgaW50IGxldmVsLAog
CQkgICBlbnVtIGNvbG9yX3BsYW5lIGNvbG9yX3BsYW5lKQogewotCWNvbnN0IHN0cnVjdCBza2xf
cGxhbmVfd20gKndtID0KLQkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFu
ZV9pZF07CisJY29uc3Qgc3RydWN0IHNrbF9waXBlX3dtICpwaXBlX3dtID0gJmNydGNfc3RhdGUt
PndtLnNrbC5vcHRpbWFsOworCWNvbnN0IHN0cnVjdCBza2xfcGxhbmVfd20gKndtID0gJnBpcGVf
d20tPnBsYW5lc1twbGFuZV9pZF07CisKKwlpZiAoIWxldmVsKSB7CisJCWlmIChwaXBlX3dtLT5j
YW5fc2FndikKKwkJCXJldHVybiBjb2xvcl9wbGFuZSA9PSBDT0xPUl9QTEFORV9ZID8gJndtLT5z
YWd2X3dtMCA6ICZ3bS0+dXZfc2Fndl93bTA7CisJfQogCiAJcmV0dXJuIGNvbG9yX3BsYW5lID09
IENPTE9SX1BMQU5FX1kgPyAmd20tPndtW2xldmVsXSA6ICZ3bS0+dXZfd21bbGV2ZWxdOwogfQog
CitzdGF0aWMgYm9vbAordGdsX2NydGNfY2FuX2VuYWJsZV9zYWd2KGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0g
dG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOworCWVudW0gcGxhbmVfaWQgcGxh
bmVfaWQ7CisKKwlpZiAoIWNydGNfc3RhdGUtPmh3LmFjdGl2ZSkKKwkJcmV0dXJuIHRydWU7CisK
Kwlmb3JfZWFjaF9wbGFuZV9pZF9vbl9jcnRjKGNydGMsIHBsYW5lX2lkKSB7CisJCWNvbnN0IHN0
cnVjdCBza2xfZGRiX2VudHJ5ICpwbGFuZV9hbGxvYyA9CisJCQkmY3J0Y19zdGF0ZS0+d20uc2ts
LnBsYW5lX2RkYl95W3BsYW5lX2lkXTsKKwkJY29uc3Qgc3RydWN0IHNrbF9wbGFuZV93bSAqd20g
PQorCQkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07CisKKwkJ
aWYgKHNrbF9kZGJfZW50cnlfc2l6ZShwbGFuZV9hbGxvYykgPCB3bS0+c2Fndl93bTAubWluX2Rk
Yl9hbGxvYykKKwkJCXJldHVybiBmYWxzZTsKKwl9CisKKwlyZXR1cm4gdHJ1ZTsKK30KKwogc3Rh
dGljIGludAogc2tsX2FsbG9jYXRlX3BpcGVfZGRiKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogewpAQCAtNTE2NiwxMCArNTI1MywxNyBAQCBzdGF0aWMgdm9pZCBza2xfY29t
cHV0ZV9wbGFuZV93bShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
IHN0YXRpYyB2b2lkCiBza2xfY29tcHV0ZV93bV9sZXZlbHMoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCBza2xfd21fcGFyYW1z
ICp3bV9wYXJhbXMsCi0JCSAgICAgIHN0cnVjdCBza2xfd21fbGV2ZWwgKmxldmVscykKKwkJICAg
ICAgc3RydWN0IHNrbF9wbGFuZV93bSAqcGxhbmVfd20sCisJCSAgICAgIGVudW0gY29sb3JfcGxh
bmUgY29sb3JfcGxhbmUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShjcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7CiAJaW50IGxldmVsLCBtYXhfbGV2
ZWwgPSBpbGtfd21fbWF4X2xldmVsKGRldl9wcml2KTsKKwkvKgorCSAqIENoZWNrIHdoaWNoIGtp
bmQgb2YgcGxhbmUgaXMgaXQgYW5kIGJhc2VkIG9uIHRoYXQgY2FsY3VsYXRlCisJICogY29ycmVz
cG9uZGVudCBXTSBsZXZlbHMuCisJICovCisJc3RydWN0IHNrbF93bV9sZXZlbCAqbGV2ZWxzID0g
Y29sb3JfcGxhbmUgPT0gQ09MT1JfUExBTkVfVVYgPworCQkJCSAgICAgIHBsYW5lX3dtLT51dl93
bSA6IHBsYW5lX3dtLT53bTsKIAlzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1bHRfcHJldiA9ICZs
ZXZlbHNbMF07CiAKIAlmb3IgKGxldmVsID0gMDsgbGV2ZWwgPD0gbWF4X2xldmVsOyBsZXZlbCsr
KSB7CkBAIC01MTgzLDYgKzUyNzcsNDAgQEAgc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCX0KIH0KIAorc3RhdGljIHZvaWQg
c2tsX2NvbXB1dGVfc2Fndl93bShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSwKKwkJCQljb25zdCBzdHJ1Y3Qgc2tsX3dtX3BhcmFtcyAqd21fcGFyYW1zLAorCQkJCXN0
cnVjdCBza2xfcGxhbmVfd20gKnBsYW5lX3dtLAorCQkJCWVudW0gY29sb3JfcGxhbmUgY29sb3Jf
cGxhbmUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShj
cnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7CisJc3RydWN0IHNrbF93bV9sZXZlbCAqc2Fndl93
bSA9IGNvbG9yX3BsYW5lID09IENPTE9SX1BMQU5FX1VWID8KKwkJCQkmcGxhbmVfd20tPnV2X3Nh
Z3Zfd20wIDogJnBsYW5lX3dtLT5zYWd2X3dtMDsKKwlzdHJ1Y3Qgc2tsX3dtX2xldmVsICpsZXZl
bHMgPSBjb2xvcl9wbGFuZSA9PSBDT0xPUl9QTEFORV9VViA/CisJCQkJcGxhbmVfd20tPnV2X3dt
IDogcGxhbmVfd20tPndtOworCisJLyoKKwkgKiBGb3IgR2VuMTIgaWYgaXQgaXMgYW4gTDAgd2Ug
bmVlZCB0byBhbHNvCisJICogY29uc2lkZXIgc2Fndl9ibG9ja190aW1lIHdoZW4gY2FsY3VsYXRp
bmcKKwkgKiBMMCB3YXRlcm1hcmsgLSB3ZSB3aWxsIG5lZWQgdGhhdCB3aGVuIG1ha2luZworCSAq
IGEgZGVjaXNpb24gd2hldGhlciBlbmFibGUgU0FHViBvciBub3QuCisJICogRm9yIG9sZGVyIGdl
bnMgd2UgYWdyZWVkIHRvIGNvcHkgTDAgdmFsdWUgZm9yCisJICogY29tcGF0aWJpbGl0eS4KKwkg
Ki8KKwlpZiAoKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpKSB7CisJCXUzMiBsYXRlbmN5ID0g
ZGV2X3ByaXYtPndtLnNrbF9sYXRlbmN5WzBdOworCisJCWxhdGVuY3kgKz0gZGV2X3ByaXYtPnNh
Z3ZfYmxvY2tfdGltZV91czsKKwkJc2tsX2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgMCwg
bGF0ZW5jeSwKKwkJCQkgICAgIHdtX3BhcmFtcywgJmxldmVsc1swXSwKKwkJCQkgICAgIHNhZ3Zf
d20pOworCQlEUk1fREVCVUdfS01TKCIlZCBMMCBibG9ja3MgcmVxdWlyZWQgZm9yIFNBR1YgdnMg
JWQgZm9yIG5vbi1TQUdWXG4iLAorCQkJICAgICAgc2Fndl93bS0+bWluX2RkYl9hbGxvYywgbGV2
ZWxzWzBdLm1pbl9kZGJfYWxsb2MpOworCX0gZWxzZSB7CisJCS8qIFNpbmNlIGFsbCBtZW1iZXJz
IGFyZSBQT0QgKi8KKwkJKnNhZ3Zfd20gPSBsZXZlbHNbMF07CisJfQorfQorCiBzdGF0aWMgdm9p
ZCBza2xfY29tcHV0ZV90cmFuc2l0aW9uX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAogCQkJCSAgICAgIGNvbnN0IHN0cnVjdCBza2xfd21fcGFyYW1zICp3cCwK
IAkJCQkgICAgICBzdHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSkKQEAgLTUyNjMsNyArNTM5MSw4IEBA
IHN0YXRpYyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtX3NpbmdsZShzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0Jc2tsX2NvbXB1
dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJhbXMsIHdtLT53bSk7CisJc2tsX2NvbXB1
dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJhbXMsIHdtLCBDT0xPUl9QTEFORV9ZKTsK
Kwlza2xfY29tcHV0ZV9zYWd2X3dtKGNydGNfc3RhdGUsICZ3bV9wYXJhbXMsIHdtLCBDT0xPUl9Q
TEFORV9ZKTsKIAlza2xfY29tcHV0ZV90cmFuc2l0aW9uX3dtKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtKTsKIAogCXJldHVybiAwOwpAQCAtNTI4NSw3ICs1NDE0LDggQEAgc3RhdGljIGludCBz
a2xfYnVpbGRfcGxhbmVfd21fdXYoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCXNrbF9jb21wdXRlX3dtX2xldmVscyhjcnRj
X3N0YXRlLCAmd21fcGFyYW1zLCB3bS0+dXZfd20pOworCXNrbF9jb21wdXRlX3dtX2xldmVscyhj
cnRjX3N0YXRlLCAmd21fcGFyYW1zLCB3bSwgQ09MT1JfUExBTkVfVVYpOworCXNrbF9jb21wdXRl
X3NhZ3Zfd20oY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20sIENPTE9SX1BMQU5FX1VWKTsKIAog
CXJldHVybiAwOwogfQpAQCAtNTY5OSw2ICs1ODI5LDE0IEBAIHNrbF9wcmludF93bV9jaGFuZ2Vz
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQkJCSAgICBuZXdfd20tPndtWzRd
Lm1pbl9kZGJfYWxsb2MsIG5ld193bS0+d21bNV0ubWluX2RkYl9hbGxvYywKIAkJCQkgICAgbmV3
X3dtLT53bVs2XS5taW5fZGRiX2FsbG9jLCBuZXdfd20tPndtWzddLm1pbl9kZGJfYWxsb2MsCiAJ
CQkJICAgIG5ld193bS0+dHJhbnNfd20ubWluX2RkYl9hbGxvYyk7CisKKwkJCWRybV9kYmdfa21z
KCZkZXZfcHJpdi0+ZHJtLAorCQkJCSAgICAiW1BMQU5FOiVkOiVzXSBzYWd2IHdtMCBtaW4gZGRi
ICU0ZCBibG9ja3MgJTRkIGxpbmVzICU0ZFxuIgorCQkJCSAgICAiLT4gbWluX2RkYiAlNGQgYmxv
Y2tzICU0ZCBsaW5lcyAlNGRcbiIsCisJCQkJICAgIHBsYW5lLT5iYXNlLmJhc2UuaWQsIHBsYW5l
LT5iYXNlLm5hbWUsIG9sZF93bS0+c2Fndl93bTAubWluX2RkYl9hbGxvYywKKwkJCQkgICAgb2xk
X3dtLT5zYWd2X3dtMC5wbGFuZV9yZXNfYiwgb2xkX3dtLT5zYWd2X3dtMC5wbGFuZV9yZXNfbCwK
KwkJCQkgICAgbmV3X3dtLT5zYWd2X3dtMC5taW5fZGRiX2FsbG9jLCBuZXdfd20tPnNhZ3Zfd20w
LnBsYW5lX3Jlc19iLAorCQkJCSAgICBuZXdfd20tPnNhZ3Zfd20wLnBsYW5lX3Jlc19sKTsKIAkJ
fQogCX0KIH0KQEAgLTU4NTksNiArNTk5NywxMCBAQCBza2xfY29tcHV0ZV93bShzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCisJcmV0
ID0gaW50ZWxfY29tcHV0ZV9zYWd2X21hc2soc3RhdGUpOworCWlmIChyZXQpCisJCXJldHVybiBy
ZXQ7CisKIAkvKgogCSAqIHNrbF9jb21wdXRlX2RkYigpIHdpbGwgaGF2ZSBhZGp1c3RlZCB0aGUg
ZmluYWwgd2F0ZXJtYXJrcwogCSAqIGJhc2VkIG9uIGhvdyBtdWNoIGRkYiBpcyBhdmFpbGFibGUu
IE5vdyB3ZSBjYW4gYWN0dWFsbHkKQEAgLTU5ODgsNiArNjEzMCw5IEBAIHZvaWQgc2tsX3BpcGVf
d21fZ2V0X2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQkJc2tsX3dtX2xldmVs
X2Zyb21fcmVnX3ZhbCh2YWwsICZ3bS0+d21bbGV2ZWxdKTsKIAkJfQogCisJCW1lbWNweSgmd20t
PnNhZ3Zfd20wLCAmd20tPndtWzBdLAorCQkgICAgICAgc2l6ZW9mKHN0cnVjdCBza2xfd21fbGV2
ZWwpKTsKKwogCQlpZiAocGxhbmVfaWQgIT0gUExBTkVfQ1VSU09SKQogCQkJdmFsID0gSTkxNV9S
RUFEKFBMQU5FX1dNX1RSQU5TKHBpcGUsIHBsYW5lX2lkKSk7CiAJCWVsc2UKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9wbS5oCmluZGV4IGQ2MGE4NTQyMWM1YS4uZTQxNjM3YjNhMDVkIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3BtLmgKQEAgLTksNiArOSw3IEBACiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAog
I2luY2x1ZGUgImk5MTVfcmVnLmgiCisjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9idy5oIgogCiBz
dHJ1Y3QgZHJtX2RldmljZTsKIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwpAQCAtNDEsNyArNDIs
OCBAQCB2b2lkIHNrbF9waXBlX3dtX2dldF9od19zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YywKIAkJCSAgICAgIHN0cnVjdCBza2xfcGlwZV93bSAqb3V0KTsKIHZvaWQgZzR4X3dtX3Nhbml0
aXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIHZsdl93bV9zYW5p
dGl6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotYm9vbCBpbnRlbF9jYW5f
ZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOworYm9vbCBpbnRl
bF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOworYm9vbCBpbnRl
bF9jYW5fZW5hYmxlX3NhZ3YoY29uc3Qgc3RydWN0IGludGVsX2J3X3N0YXRlICpid19zdGF0ZSk7
CiBpbnQgaW50ZWxfZW5hYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KTsKIGludCBpbnRlbF9kaXNhYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KTsKIGJvb2wgc2tsX3dtX2xldmVsX2VxdWFscyhjb25zdCBzdHJ1Y3Qgc2tsX3dtX2xldmVs
ICpsMSwKLS0gCjIuMjQuMS40ODUuZ2FkMDVhM2Q4ZTUKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C1BB7A050B
	for <lists+intel-gfx@lfdr.de>; Wed, 28 Aug 2019 16:33:59 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EFACE89CDD;
	Wed, 28 Aug 2019 14:33:54 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B3D1589CD9
 for <intel-gfx@lists.freedesktop.org>; Wed, 28 Aug 2019 14:33:47 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 28 Aug 2019 07:33:41 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,441,1559545200"; d="scan'208";a="380419430"
Received: from cmartin2-mobl3.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.252.38.61])
 by fmsmga005.fm.intel.com with ESMTP; 28 Aug 2019 07:33:40 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 28 Aug 2019 17:33:24 +0300
Message-Id: <20190828143327.7965-8-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190828143327.7965-1-lionel.g.landwerlin@intel.com>
References: <20190828143327.7965-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v11 07/10] drm/i915: add a new perf
 configuration execbuf parameter
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0aGUgYWJpbGl0eSB0byBkaXNwYXRjaCBhIHNldCBvZiBjb21tYW5kIGJ1ZmZlciB0
byB0aGUKaGFyZHdhcmUsIGVhY2ggd2l0aCBhIGRpZmZlcmVudCBPQSBjb25maWd1cmF0aW9uLiBU
byBhY2hpZXZlIHRoaXMsIHdlCnJldXNlIGEgY291cGxlIG9mIGZpZWxkcyBmcm9tIHRoZSBleGVj
YnVmMiBzdHJ1Y3QgKEkgQ0FOIEhBWgpleGVjYnVmMz8pIHRvIG5vdGlmeSB3aGF0IE9BIGNvbmZp
Z3VyYXRpb24gc2hvdWxkIGJlIHVzZWQgZm9yIGEgYmF0Y2gKYnVmZmVyLiBUaGlzIHJlcXVpcmVz
IHRoZSBwcm9jZXNzIG1ha2luZyB0aGUgZXhlY2J1ZiB3aXRoIHRoaXMgZmxhZyB0bwphbHNvIG93
biB0aGUgcGVyZiBmZCBhdCB0aGUgdGltZSBvZiBleGVjYnVmLgoKdjI6IEFkZCBhIGVtaXRfb2Ff
Y29uZmlnKCkgdmZ1bmMgaW4gdGhlIGludGVsX2VuZ2luZV9jcyAoQ2hyaXMpCiAgICBNb3ZlIG9h
X2NvbmZpZyB2bWEgdG8gYWN0aXZlIChDaHJpcykKCnYzOiBEb24ndCBkcm9wIHRoZSBsb2NrIGZv
ciBlbmdpbmUgbG9va3VwIChDaHJpcykKICAgIE1vdmUgT0EgY29uZmlnIHZtYSB0byBhY3RpdmUg
YmVmb3JlIHdyaXRpbmcgdGhlIHJpbmdidWZmZXIgKENocmlzKQoKdjQ6IFJldXNlIGk5MTVfdXNl
cl9leHRlbnNpb25fZm4KICAgIFNlcmlhbGl6ZSByZXF1ZXN0cyB3aXRoIE9BIGNvbmZpZyB1cGRh
dGVzCgp2NTogQ2hlY2sgdGhhdCB0aGUgY2hhaW5lZCBleHRlbnNpb24gaXMgb25seSBwcmVzZW50
IG9uY2UgKENocmlzKQogICAgVW5waW4gb2Ffdm1hIGluIG1haW4gcGF0aCAoQ2hyaXMpCgp2Njog
VXNlIEJJVF9VTEwgKENocmlzKQoKdjc6IEhvbGQgZHJtLnN0cnVjdF9tdXRleCB3aGVuIHNlcmlh
bGl6aW5nIHRoZSByZXF1ZXN0IHdpdGggT0EgY29uZmlnIChDaHJpcykKClNpZ25lZC1vZmYtYnk6
IExpb25lbCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KLS0tCiAu
Li4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgICAgfCAxMzMgKysrKysr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAg
ICAgfCAgIDQgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgg
IHwgICA5ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICAg
fCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyAgICB8
ICAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZXRwYXJhbS5jICAgICAgICAgIHwg
ICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jICAgICAgICAgICAgICB8ICAg
MiAtCiBpbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggICAgICAgICAgICAgICAgICAgfCAgMzkg
KysrKysKIDggZmlsZXMgY2hhbmdlZCwgMTk0IGluc2VydGlvbnMoKyksIDUgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZm
ZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKaW5k
ZXggNDZhZDhkOTY0MmQxLi5iZGVjZDg5M2NkNjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpAQCAtMjQsNiArMjQsNyBAQAogI2luY2x1ZGUg
Imk5MTVfZ2VtX2NsZmx1c2guaCIKICNpbmNsdWRlICJpOTE1X2dlbV9jb250ZXh0LmgiCiAjaW5j
bHVkZSAiaTkxNV9nZW1faW9jdGxzLmgiCisjaW5jbHVkZSAiaTkxNV9wZXJmLmgiCiAjaW5jbHVk
ZSAiaTkxNV90cmFjZS5oIgogI2luY2x1ZGUgImk5MTVfdXNlcl9leHRlbnNpb25zLmgiCiAKQEAg
LTI4NCw3ICsyODUsMTIgQEAgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciB7CiAJc3RydWN0IHsKIAkJ
dTY0IGZsYWdzOyAvKiogQXZhaWxhYmxlIGV4dGVuc2lvbnMgcGFyYW1ldGVycyAqLwogCQlzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0X3RpbWVsaW5lX2ZlbmNlcyB0aW1lbGluZV9m
ZW5jZXM7CisJCXN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9leHRfcGVyZiBwZXJmX2Nv
bmZpZzsKIAl9IGV4dGVuc2lvbnM7CisKKwlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZp
ZzsgLyoqIEhXIGNvbmZpZ3VyYXRpb24gZm9yIE9BLCBOVUxMIGlzIG5vdCBuZWVkZWQuICovCisJ
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9hX2JvOworCXN0cnVjdCBpOTE1X3ZtYSAqb2Ff
dm1hOwogfTsKIAogI2RlZmluZSBleGVjX2VudHJ5KEVCLCBWTUEpICgmKEVCKS0+ZXhlY1soVk1B
KS0+ZXhlY19mbGFncyAtIChFQiktPmZsYWdzXSkKQEAgLTExNTIsNiArMTE1OCw0MiBAQCBzdGF0
aWMgaW50IHJlbG9jX21vdmVfdG9fZ3B1KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3Qg
aTkxNV92bWEgKnZtYSkKIAlyZXR1cm4gZXJyOwogfQogCisKK3N0YXRpYyBpbnQKK2dldF9leGVj
YnVmX29hX2NvbmZpZyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKK3sKKwlzdHJ1Y3QgZmls
ZSAqcGVyZl9maWxlOworCWludCBlcnIgPSAwOworCisJZWItPm9hX2NvbmZpZyA9IE5VTEw7CisJ
ZWItPm9hX3ZtYSA9IE5VTEw7CisJZWItPm9hX2JvID0gTlVMTDsKKworCWlmICgoZWItPmV4dGVu
c2lvbnMuZmxhZ3MgJiBCSVRfVUxMKERSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGKSkg
PT0gMCkKKwkJcmV0dXJuIDA7CisKKwlwZXJmX2ZpbGUgPSBmZ2V0KGViLT5leHRlbnNpb25zLnBl
cmZfY29uZmlnLnBlcmZfZmQpOworCWlmICghcGVyZl9maWxlKSB7CisJCWVyciA9IC1FSU5WQUw7
CisJCWdvdG8gb3V0OworCX0KKworCWlmIChwZXJmX2ZpbGUtPnByaXZhdGVfZGF0YSAhPSBlYi0+
aTkxNS0+cGVyZi5leGNsdXNpdmVfc3RyZWFtKQorCQllcnIgPSAtRUlOVkFMOworCisJaWYgKCFl
cnIpIHsKKwkJZXJyID0gaTkxNV9wZXJmX2dldF9vYV9jb25maWdfYW5kX2JvKAorCQkJZWItPmk5
MTUtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbSwKKwkJCWViLT5leHRlbnNpb25zLnBlcmZfY29uZmln
Lm9hX2NvbmZpZywKKwkJCSZlYi0+b2FfY29uZmlnLCAmZWItPm9hX2JvKTsKKwl9CisKKwlmcHV0
KHBlcmZfZmlsZSk7CisKK291dDoKKwlyZXR1cm4gZXJyOworfQorCiBzdGF0aWMgaW50IF9fcmVs
b2NfZ3B1X2FsbG9jKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCQkJICAgICBzdHJ1Y3Qg
aTkxNV92bWEgKnZtYSwKIAkJCSAgICAgdW5zaWduZWQgaW50IGxlbikKQEAgLTIwNTEsNiArMjA5
Myw0MiBAQCBhZGRfdG9fY2xpZW50KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgZHJt
X2ZpbGUgKmZpbGUpCiAJc3Bpbl91bmxvY2soJmZpbGVfcHJpdi0+bW0ubG9jayk7CiB9CiAKK3N0
YXRpYyBpbnQgZWJfb2FfY29uZmlnKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQoreworCWlu
dCByZXQ7CisKKwlpZiAoIWViLT5vYV9jb25maWcpCisJCXJldHVybiAwOworCisJbG9ja2RlcF9h
c3NlcnRfaGVsZCgmZWItPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOyAvKiBvYV9jb25maWcgKi8K
KworCXJldCA9IGk5MTVfYWN0aXZlX3JlcXVlc3Rfc2V0KCZlYi0+ZW5naW5lLT5sYXN0X29hX2Nv
bmZpZywKKwkJCQkgICAgICBlYi0+cmVxdWVzdCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsK
KworCS8qCisJICogSWYgdGhlIGNvbmZpZyBoYXNuJ3QgY2hhbmdlZCwgc2tpcCByZWNvbmZpZ3Vy
aW5nIHRoZSBIVyAodGhpcyBpcworCSAqIHN1YmplY3QgdG8gYSBkZWxheSB3ZSB3YW50IHRvIGF2
b2lkIGhhcyBtdWNoIGFzIHBvc3NpYmxlKS4KKwkgKi8KKwlpZiAoZWItPm9hX2NvbmZpZyA9PSBl
Yi0+aTkxNS0+cGVyZi5leGNsdXNpdmVfc3RyZWFtLT5vYV9jb25maWcpCisJCXJldHVybiAwOwor
CisJcmV0ID0gaTkxNV92bWFfbW92ZV90b19hY3RpdmUoZWItPm9hX3ZtYSwgZWItPnJlcXVlc3Qs
IDApOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXQgPSBlYi0+ZW5naW5lLT5lbWl0
X2JiX3N0YXJ0KGViLT5yZXF1ZXN0LAorCQkJCQllYi0+b2Ffdm1hLT5ub2RlLnN0YXJ0LAorCQkJ
CQkwLCBJOTE1X0RJU1BBVENIX1NFQ1VSRSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKwor
CXN3YXAoZWItPm9hX2NvbmZpZywgZWItPmk5MTUtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbS0+b2Ff
Y29uZmlnKTsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGViX3N1Ym1pdChzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYikKIHsKIAlpbnQgZXJyOwpAQCAtMjA3Nyw2ICsyMTU1LDEwIEBA
IHN0YXRpYyBpbnQgZWJfc3VibWl0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQkJcmV0
dXJuIGVycjsKIAl9CiAKKwllcnIgPSBlYl9vYV9jb25maWcoZWIpOworCWlmIChlcnIpCisJCXJl
dHVybiBlcnI7CisKIAllcnIgPSBlYi0+ZW5naW5lLT5lbWl0X2JiX3N0YXJ0KGViLT5yZXF1ZXN0
LAogCQkJCQllYi0+YmF0Y2gtPm5vZGUuc3RhcnQgKwogCQkJCQllYi0+YmF0Y2hfc3RhcnRfb2Zm
c2V0LApAQCAtMjY0Myw4ICsyNzI1LDI1IEBAIHN0YXRpYyBpbnQgcGFyc2VfdGltZWxpbmVfZmVu
Y2VzKHN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIF9fdXNlciAqZXh0LCB2b2lkICpkCiAJcmV0
dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgcGFyc2VfcGVyZl9jb25maWcoc3RydWN0IGk5MTVfdXNl
cl9leHRlbnNpb24gX191c2VyICpleHQsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIgPSBkYXRhOworCisJaWYgKGViLT5leHRlbnNpb25zLmZsYWdzICYgQklUX1VM
TChEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRikpCisJCXJldHVybiAtRUlOVkFMOwor
CisJaWYgKGNvcHlfZnJvbV91c2VyKCZlYi0+ZXh0ZW5zaW9ucy5wZXJmX2NvbmZpZywgZXh0LAor
CQkJICAgc2l6ZW9mKGViLT5leHRlbnNpb25zLnBlcmZfY29uZmlnKSkpCisJCXJldHVybiAtRUZB
VUxUOworCisJZWItPmV4dGVuc2lvbnMuZmxhZ3MgfD0gQklUX1VMTChEUk1fSTkxNV9HRU1fRVhF
Q0JVRkZFUl9FWFRfUEVSRik7CisKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGNvbnN0IGk5MTVf
dXNlcl9leHRlbnNpb25fZm4gZXhlY2J1Zl9leHRlbnNpb25zW10gPSB7CiAgICAgICAgIFtEUk1f
STkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfVElNRUxJTkVfRkVOQ0VTXSA9IHBhcnNlX3RpbWVsaW5l
X2ZlbmNlcywKKyAgICAgICAgW0RSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGXSA9IHBh
cnNlX3BlcmZfY29uZmlnLAogfTsKIAogc3RhdGljIGludApAQCAtMjc1NSwxMCArMjg1NCwxNCBA
QCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCX0KIAl9
CiAKLQllcnIgPSBlYl9jcmVhdGUoJmViKTsKKwllcnIgPSBnZXRfZXhlY2J1Zl9vYV9jb25maWco
JmViKTsKIAlpZiAoZXJyKQogCQlnb3RvIGVycl9vdXRfZmVuY2U7CiAKKwllcnIgPSBlYl9jcmVh
dGUoJmViKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9vYV9jb25maWc7CisKIAlHRU1fQlVHX09O
KCFlYi5sdXRfc2l6ZSk7CiAKIAllcnIgPSBlYl9zZWxlY3RfY29udGV4dCgmZWIpOwpAQCAtMjc2
OSw2ICsyODcyLDEzIEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBlcnJfY29udGV4dDsKIAorCWlmIChl
Yi5leHRlbnNpb25zLmZsYWdzICYgQklUX1VMTChEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRf
UEVSRikpIHsKKwkJaWYgKCFpbnRlbF9lbmdpbmVfaGFzX29hKGViLmVuZ2luZSkpIHsKKwkJCWVy
ciA9IC1FTk9ERVY7CisJCQlnb3RvIGVycl9lbmdpbmU7CisJCX0KKwl9CisKIAllcnIgPSBpOTE1
X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShkZXYpOwogCWlmIChlcnIpCiAJCWdvdG8gZXJyX2Vu
Z2luZTsKQEAgLTI4ODksNiArMjk5OSwyMCBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiAJCX0KIAl9CiAKKwlpZiAoZWIuZXh0ZW5zaW9ucy5mbGFncyAm
IEJJVF9VTEwoRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJfRVhUX1BFUkYpKSB7CisJCWViLm9hX3Zt
YSA9IGk5MTVfdm1hX2luc3RhbmNlKGViLm9hX2JvLAorCQkJCQkgICAgICAmZWIuZW5naW5lLT5p
OTE1LT5nZ3R0LnZtLCBOVUxMKTsKKwkJaWYgKHVubGlrZWx5KElTX0VSUihlYi5vYV92bWEpKSkg
eworCQkJZXJyID0gUFRSX0VSUihlYi5vYV92bWEpOworCQkJZWIub2Ffdm1hID0gTlVMTDsKKwkJ
CWdvdG8gZXJyX3JlcXVlc3Q7CisJCX0KKworCQllcnIgPSBpOTE1X3ZtYV9waW4oZWIub2Ffdm1h
LCAwLCAwLCBQSU5fR0xPQkFMKTsKKwkJaWYgKGVycikKKwkJCWdvdG8gZXJyX3JlcXVlc3Q7CisJ
fQorCiAJLyoKIAkgKiBXaGlsc3QgdGhpcyByZXF1ZXN0IGV4aXN0cywgYmF0Y2hfb2JqIHdpbGwg
YmUgb24gdGhlCiAJICogYWN0aXZlX2xpc3QsIGFuZCBzbyB3aWxsIGhvbGQgdGhlIGFjdGl2ZSBy
ZWZlcmVuY2UuIE9ubHkgd2hlbiB0aGlzCkBAIC0yOTM1LDYgKzMwNTksMTMgQEAgaTkxNV9nZW1f
ZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWk5MTVfZ2VtX2NvbnRleHRf
cHV0KGViLmdlbV9jb250ZXh0KTsKIGVycl9kZXN0cm95OgogCWViX2Rlc3Ryb3koJmViKTsKK2Vy
cl9vYV9jb25maWc6CisJaWYgKGViLm9hX2NvbmZpZykgeworCQlpOTE1X2dlbV9vYmplY3RfcHV0
KGViLm9hX2JvKTsKKwkJaTkxNV9vYV9jb25maWdfcHV0KGViLm9hX2NvbmZpZyk7CisJfQorCWlm
IChlYi5vYV92bWEpCisJCWk5MTVfdm1hX3VucGluKGViLm9hX3ZtYSk7CiBlcnJfb3V0X2ZlbmNl
OgogCWlmIChvdXRfZmVuY2VfZmQgIT0gLTEpCiAJCXB1dF91bnVzZWRfZmQob3V0X2ZlbmNlX2Zk
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKaW5kZXggMTcwMDZk
NTBiNjNmLi5mNjUzNzVhMjY1MzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV9jcy5jCkBAIC03ODYsNiArNzg2LDEwIEBAIGludCBpbnRlbF9lbmdpbmVfaW5pdF9jb21t
b24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJZW5naW5lLT5lbWl0X2Zpbmlf
YnJlYWRjcnVtYl9kdyA9IHJldDsKIAorCisJSU5JVF9BQ1RJVkVfUkVRVUVTVCgmZW5naW5lLT5s
YXN0X29hX2NvbmZpZywKKwkJCSAgICAmZW5naW5lLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsK
KwogCXJldHVybiAwOwogCiBlcnJfdW5waW46CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2VuZ2luZV90eXBlcy5oCmluZGV4IDE1ZTAyY2I1OGE2Ny4uYzYyYmRiNDY0YTA2IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMzk5LDYg
KzM5OSw4IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgewogCXN0cnVjdCBpOTE1X3dhX2xpc3Qg
d2FfbGlzdDsKIAlzdHJ1Y3QgaTkxNV93YV9saXN0IHdoaXRlbGlzdDsKIAorCXN0cnVjdCBpOTE1
X2FjdGl2ZV9yZXF1ZXN0IGxhc3Rfb2FfY29uZmlnOworCiAJdTMyICAgICAgICAgICAgIGlycV9r
ZWVwX21hc2s7IC8qIGFsd2F5cyBrZWVwIHRoZXNlIGludGVycnVwdHMgKi8KIAl1MzIJCWlycV9l
bmFibGVfbWFzazsgLyogYml0bWFzayB0byBlbmFibGUgcmluZyBpbnRlcnJ1cHQgKi8KIAl2b2lk
CQkoKmlycV9lbmFibGUpKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CkBAIC00ODEs
NiArNDgzLDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7CiAjZGVmaW5lIEk5MTVfRU5HSU5F
X0hBU19TRU1BUEhPUkVTICAgQklUKDMpCiAjZGVmaW5lIEk5MTVfRU5HSU5FX05FRURTX0JSRUFE
Q1JVTUJfVEFTS0xFVCBCSVQoNCkKICNkZWZpbmUgSTkxNV9FTkdJTkVfSVNfVklSVFVBTCAgICAg
ICBCSVQoNSkKKyNkZWZpbmUgSTkxNV9FTkdJTkVfSEFTX09BICAgICAgICAgICBCSVQoNikKIAl1
bnNpZ25lZCBpbnQgZmxhZ3M7CiAKIAkvKgpAQCAtNTc2LDYgKzU3OSwxMiBAQCBpbnRlbF9lbmdp
bmVfaXNfdmlydHVhbChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJcmV0
dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9JU19WSVJUVUFMOwogfQogCitzdGF0aWMg
aW5saW5lIGJvb2wKK2ludGVsX2VuZ2luZV9oYXNfb2EoY29uc3Qgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQoreworCXJldHVybiBlbmdpbmUtPmZsYWdzICYgSTkxNV9FTkdJTkVfSEFT
X09BOworfQorCiAjZGVmaW5lIGluc3Rkb25lX2hhc19zbGljZShkZXZfcHJpdl9fXywgc3NldV9f
Xywgc2xpY2VfX18pIFwKIAkoKElTX0dFTihkZXZfcHJpdl9fXywgNykgPyAxIDogKChzc2V1X19f
KS0+c2xpY2VfbWFzaykpICYgQklUKHNsaWNlX19fKSkKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYwppbmRleCBhMTQxZTllMzdiZjcuLjcwOWIwOGY5NzNjNSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTMwODIsOCArMzA4MiwxMCBAQCBpbnQgaW50ZWxfZXhlY2xp
c3RzX3N1Ym1pc3Npb25fc2V0dXAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWxv
Z2ljYWxfcmluZ19kZWZhdWx0X3ZmdW5jcyhlbmdpbmUpOwogCWxvZ2ljYWxfcmluZ19kZWZhdWx0
X2lycXMoZW5naW5lKTsKIAotCWlmIChlbmdpbmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUykKKwlp
ZiAoZW5naW5lLT5jbGFzcyA9PSBSRU5ERVJfQ0xBU1MpIHsKIAkJcmNzX3N1Ym1pc3Npb25fb3Zl
cnJpZGUoZW5naW5lKTsKKwkJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfT0E7CisJ
fQogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9yaW5nYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVm
ZmVyLmMKaW5kZXggNjAxYzE2MjM5ZmRmLi42YjA2ZjY0ZmZhMjMgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKQEAgLTIyNTAsOCArMjI1MCwxMCBAQCBzdGF0
aWMgdm9pZCBzZXR1cF9yY3Moc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQllbmdp
bmUtPmlycV9lbmFibGVfbWFzayA9IEk5MTVfVVNFUl9JTlRFUlJVUFQ7CiAJfQogCi0JaWYgKElT
X0hBU1dFTEwoaTkxNSkpCisJaWYgKElTX0hBU1dFTEwoaTkxNSkpIHsKIAkJZW5naW5lLT5lbWl0
X2JiX3N0YXJ0ID0gaHN3X2VtaXRfYmJfc3RhcnQ7CisJCWVuZ2luZS0+ZmxhZ3MgfD0gSTkxNV9F
TkdJTkVfSEFTX09BOworCX0KIAogCWVuZ2luZS0+cmVzdW1lID0gcmNzX3Jlc3VtZTsKIH0KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2V0cGFyYW0uYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2V0cGFyYW0uYwppbmRleCBiZDQxY2M1Y2U5MDYuLjM5ZDRjMmMy
ZTBmNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZXRwYXJhbS5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2V0cGFyYW0uYwpAQCAtMTYxLDYgKzE2MSwx
MCBAQCBpbnQgaTkxNV9nZXRwYXJhbV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lk
ICpkYXRhLAogCWNhc2UgSTkxNV9QQVJBTV9QRVJGX1JFVklTSU9OOgogCQl2YWx1ZSA9IGk5MTVf
cGVyZl9pb2N0bF92ZXJzaW9uKCk7CiAJCWJyZWFrOworCWNhc2UgSTkxNV9QQVJBTV9IQVNfRVhF
Q19QRVJGX0NPTkZJRzoKKwkJLyogT2J2aW91c2x5IHJlcXVpcmVzIHBlcmYgc3VwcG9ydC4gKi8K
KwkJdmFsdWUgPSBpOTE1LT5wZXJmLmluaXRpYWxpemVkOworCQlicmVhazsKIAlkZWZhdWx0Ogog
CQlEUk1fREVCVUcoIlVua25vd24gcGFyYW1ldGVyICVkXG4iLCBwYXJhbS0+cGFyYW0pOwogCQly
ZXR1cm4gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVy
Zi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKaW5kZXggZGMzZjMxNzA3NjRi
Li5iOWU3NjM3OGIwYzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVy
Zi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCkBAIC0yNjY2LDggKzI2
NjYsNiBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0IGk5MTVfcGVyZl9z
dHJlYW0gKnN0cmVhbSwKIAlmcmVlX29hX2J1ZmZlcihzdHJlYW0pOwogCiBlcnJfb2FfYnVmX2Fs
bG9jOgotCWk5MTVfb2FfY29uZmlnX3B1dChzdHJlYW0tPm9hX2NvbmZpZyk7Ci0KIAlpbnRlbF91
bmNvcmVfZm9yY2V3YWtlX3B1dCgmZGV2X3ByaXYtPnVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7CiAJ
aW50ZWxfcnVudGltZV9wbV9wdXQoJmRldl9wcml2LT5ydW50aW1lX3BtLCBzdHJlYW0tPndha2Vy
ZWYpOwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggYi9pbmNsdWRl
L3VhcGkvZHJtL2k5MTVfZHJtLmgKaW5kZXggZTk4YzlhN2JhYTkxLi4zMTY2YzljYTg1ZjMgMTAw
NjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAorKysgYi9pbmNsdWRlL3VhcGkv
ZHJtL2k5MTVfZHJtLmgKQEAgLTYyNCw2ICs2MjQsMTYgQEAgdHlwZWRlZiBzdHJ1Y3QgZHJtX2k5
MTVfaXJxX3dhaXQgewogICovCiAjZGVmaW5lIEk5MTVfUEFSQU1fUEVSRl9SRVZJU0lPTgk1NQog
CisvKgorICogUmVxdWVzdCBhbiBpOTE1L3BlcmYgcGVyZm9ybWFuY2UgY29uZmlndXJhdGlvbiBj
aGFuZ2UgYmVmb3JlIHJ1bm5pbmcgdGhlCisgKiBjb21tYW5kcyBnaXZlbiBpbiBhbiBleGVjYnVm
LgorICoKKyAqIFBlcmZvcm1hbmNlIGNvbmZpZ3VyYXRpb24gSUQgYW5kIHRoZSBmaWxlIGRlc2Ny
aXB0b3Igb2YgdGhlIGk5MTUgcGVyZgorICogc3RyZWFtIGFyZSBnaXZlbiB0aHJvdWdoIGRybV9p
OTE1X2dlbV9leGVjYnVmZmVyX2V4dF9wZXJmLiBTZWUKKyAqIEk5MTVfRVhFQ19FWFQuCisgKi8K
KyNkZWZpbmUgSTkxNV9QQVJBTV9IQVNfRVhFQ19QRVJGX0NPTkZJRyA1NgorCiAvKiBNdXN0IGJl
IGtlcHQgY29tcGFjdCAtLSBubyBob2xlcyBhbmQgd2VsbCBkb2N1bWVudGVkICovCiAKIHR5cGVk
ZWYgc3RydWN0IGRybV9pOTE1X2dldHBhcmFtIHsKQEAgLTEwMjYsNiArMTAzNiwxMiBAQCBlbnVt
IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dCB7CiAJICovCiAJRFJNX0k5MTVfR0VNX0VYRUNC
VUZGRVJfRVhUX1RJTUVMSU5FX0ZFTkNFUyA9IDEsCiAKKwkvKioKKwkgKiBUaGlzIGlkZW50aWZp
ZXIgaXMgYXNzb2NpYXRlZCB3aXRoCisJICogZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfcGVyZl9l
eHQuCisJICovCisJRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJfRVhUX1BFUkYsCisKIAlEUk1fSTkx
NV9HRU1fRVhFQ0JVRkZFUl9FWFRfTUFYIC8qIG5vbi1BQkkgKi8KIH07CiAKQEAgLTEwNTYsNiAr
MTA3MiwyOSBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0X3RpbWVsaW5lX2Zl
bmNlcyB7CiAJX191NjQgdmFsdWVzX3B0cjsKIH07CiAKK3N0cnVjdCBkcm1faTkxNV9nZW1fZXhl
Y2J1ZmZlcl9leHRfcGVyZiB7CisJc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gYmFzZTsKKwor
CS8qKgorCSAqIFBlcmZvcm1hbmNlIGZpbGUgZGVzY3JpcHRvciByZXR1cm5lZCBieSBEUk1fSU9D
VExfSTkxNV9QRVJGX09QRU4uCisJICogVGhpcyBpcyB1c2VkIHRvIGlkZW50aWZ5IHRoYXQgdGhl
IGFwcGxpY2F0aW9uIHJlcXVlc3RpbmcgYSBIVworCSAqIHBlcmZvcm1hbmNlIGNvbmZpZ3VyYXRp
b24gY2hhbmdlIGFjdHVhbGx5IGhhcyBhIHJpZ2h0IHRvIGRvIHNvCisJICogYmVjYXVzZSBpdCBh
bHNvIGhhcyBhY2Nlc3MgdGhlIGk5MTUtcGVyZiBzdHJlYW0uCisJICovCisJX19zMzIgcGVyZl9m
ZDsKKworCS8qKgorCSAqIFVudXNlZCBmb3Igbm93LiBNdXN0IGJlIGNsZWFyZWQgdG8gemVyby4K
KwkgKi8KKwlfX3UzMiBwYWQ7CisKKwkvKioKKwkgKiBPQSBjb25maWd1cmF0aW9uIElEIHRvIHN3
aXRjaCB0byBiZWZvcmUgZXhlY3V0aW5nIHRoZSBjb21tYW5kcworCSAqIGFzc29jaWF0ZWQgdG8g
dGhlIGV4ZWNidWYuCisJICovCisJX191NjQgb2FfY29uZmlnOworfTsKKwogc3RydWN0IGRybV9p
OTE1X2dlbV9leGVjYnVmZmVyMiB7CiAJLyoqCiAJICogTGlzdCBvZiBnZW1fZXhlY19vYmplY3Qy
IHN0cnVjdHMKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRl
c2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8v
aW50ZWwtZ2Z4

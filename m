Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8513DBDBAF
	for <lists+intel-gfx@lfdr.de>; Wed, 25 Sep 2019 12:02:21 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 401E56EB73;
	Wed, 25 Sep 2019 10:02:19 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 750D46EB6E
 for <intel-gfx@lists.freedesktop.org>; Wed, 25 Sep 2019 10:01:57 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18609373-1500050 
 for multiple; Wed, 25 Sep 2019 11:01:45 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 25 Sep 2019 11:01:22 +0100
Message-Id: <20190925100137.17956-13-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190925100137.17956-1-chris@chris-wilson.co.uk>
References: <20190925100137.17956-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 12/27] drm/i915: Move request runtime management
 onto gt
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UmVxdWVzdHMgYXJlIHJ1biBmcm9tIHRoZSBndCBhbmQgYXJlIHRpZGVkIGludG8gdGhlIGd0IHJ1
bnRpbWUgcG93ZXIKbWFuYWdlbWVudCwgc28gcHVsbCB0aGUgcnVudGltZSByZXF1ZXN0IG1hbmFn
ZW1lbnQgdW5kZXIgZ3QvCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZSAgICAgICAg
ICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX21tYW4u
YyAgICAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyAg
ICAgICAgfCAgMjIgKy0tLQogLi4uL2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fY29u
dGV4dC5jIHwgICA1ICstCiAuLi4vZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFu
LmMgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMgICAgICAg
ICAgICB8ICAgMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jICAgICAg
ICAgfCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuYyAg
IHwgMTIzICsrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Z3RfcmVxdWVzdHMuaCAgIHwgIDI0ICsrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3R5cGVzLmggICAgICB8ICAxMSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRl
c3RfdGltZWxpbmUuYyAgIHwgICA4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVn
ZnMuYyAgICAgICAgICAgfCAgMTcgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5o
ICAgICAgICAgICAgICAgfCAgMTAgLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMg
ICAgICAgICAgICAgICB8ICAxNyAtLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2
aWN0LmMgICAgICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0
LmMgICAgICAgICAgIHwgICA1ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3Qu
YyAgICAgICAgICAgfCAgNjQgKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Jl
cXVlc3QuaCAgICAgICAgICAgfCAgIDcgKy0KIC4uLi9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2ln
dF9mbHVzaF90ZXN0LmMgICB8ICAgOSArLQogLi4uL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0
X2xpdmVfdGVzdC5jICAgIHwgICA1ICstCiAuLi4vZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2Nr
X2dlbV9kZXZpY2UuYyAgfCAgMTAgKy0KIDIxIGZpbGVzIGNoYW5nZWQsIDIxMSBpbnNlcnRpb25z
KCspLCAxNTQgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCmlu
ZGV4IDYzMTNlN2I0YmQ3OC4uY2JhMTk0NzBmZWI1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9NYWtlZmlsZQorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQpAQCAt
ODMsNiArODMsNyBAQCBndC15ICs9IFwKIAlndC9pbnRlbF9ndF9pcnEubyBcCiAJZ3QvaW50ZWxf
Z3RfcG0ubyBcCiAJZ3QvaW50ZWxfZ3RfcG1faXJxLm8gXAorCWd0L2ludGVsX2d0X3JlcXVlc3Rz
Lm8gXAogCWd0L2ludGVsX2hhbmdjaGVjay5vIFwKIAlndC9pbnRlbF9scmMubyBcCiAJZ3QvaW50
ZWxfcmVuZGVyc3RhdGUubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0v
aTkxNV9nZW1fbW1hbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX21tYW4u
YwppbmRleCA5Y2I1OWZlMWE3MzYuLjk2YzA5ZDQwYmI3YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX21tYW4uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vaTkxNV9nZW1fbW1hbi5jCkBAIC04LDYgKzgsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3Np
emVzLmg+CiAKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2luY2x1ZGUgImd0L2ludGVsX2d0
X3JlcXVlc3RzLmgiCiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfZ2Vt
X2d0dC5oIgpAQCAtNDIzLDYgKzQyNCw3IEBAIHZvaWQgaTkxNV9nZW1fb2JqZWN0X3JlbGVhc2Vf
bW1hcChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogc3RhdGljIGludCBjcmVhdGVf
bW1hcF9vZmZzZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7CisJc3RydWN0
IGludGVsX2d0ICpndCA9ICZpOTE1LT5ndDsKIAlpbnQgZXJyOwogCiAJZXJyID0gZHJtX2dlbV9j
cmVhdGVfbW1hcF9vZmZzZXQoJm9iai0+YmFzZSk7CkBAIC00MzEsNyArNDMzLDcgQEAgc3RhdGlj
IGludCBjcmVhdGVfbW1hcF9vZmZzZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikK
IAogCS8qIEF0dGVtcHQgdG8gcmVhcCBzb21lIG1tYXAgc3BhY2UgZnJvbSBkZWFkIG9iamVjdHMg
Ki8KIAlkbyB7Ci0JCWVyciA9IGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUoaTkxNSwgTUFYX1NDSEVE
VUxFX1RJTUVPVVQpOworCQllcnIgPSBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKGd0LCBNQVhfU0NI
RURVTEVfVElNRU9VVCk7CiAJCWlmIChlcnIpCiAJCQlicmVhazsKIApAQCAtNDQwLDcgKzQ0Miw3
IEBAIHN0YXRpYyBpbnQgY3JlYXRlX21tYXBfb2Zmc2V0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmopCiAJCWlmICghZXJyKQogCQkJYnJlYWs7CiAKLQl9IHdoaWxlIChmbHVzaF9kZWxh
eWVkX3dvcmsoJmk5MTUtPmdlbS5yZXRpcmVfd29yaykpOworCX0gd2hpbGUgKGZsdXNoX2RlbGF5
ZWRfd29yaygmZ3QtPnJlcXVlc3RzLnJldGlyZV93b3JrKSk7CiAKIAlyZXR1cm4gZXJyOwogfQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYwppbmRleCAwNGE5YTI3ZDY1OWQuLjFl
MTgwNDVlZTk4MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2Vt
X3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMKQEAgLTcs
MzEgKzcsMTggQEAKICNpbmNsdWRlICJnZW0vaTkxNV9nZW1fcG0uaCIKICNpbmNsdWRlICJndC9p
bnRlbF9ndC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0X3BtLmgiCisjaW5jbHVkZSAiZ3QvaW50
ZWxfZ3RfcmVxdWVzdHMuaCIKIAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaTkx
NV9nbG9iYWxzLmgiCiAKIHN0YXRpYyB2b2lkIGk5MTVfZ2VtX3Bhcmsoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUpCiB7Ci0JY2FuY2VsX2RlbGF5ZWRfd29yaygmaTkxNS0+Z2VtLnJldGly
ZV93b3JrKTsKLQogCWk5MTVfdm1hX3BhcmtlZChpOTE1KTsKIAogCWk5MTVfZ2xvYmFsc19wYXJr
KCk7CiB9CiAKLXN0YXRpYyB2b2lkIHJldGlyZV93b3JrX2hhbmRsZXIoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3b3JrKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0KLQkJY29udGFp
bmVyX29mKHdvcmssIHR5cGVvZigqaTkxNSksIGdlbS5yZXRpcmVfd29yay53b3JrKTsKLQotCWk5
MTVfcmV0aXJlX3JlcXVlc3RzKGk5MTUpOwotCi0JcXVldWVfZGVsYXllZF93b3JrKGk5MTUtPndx
LAotCQkJICAgJmk5MTUtPmdlbS5yZXRpcmVfd29yaywKLQkJCSAgIHJvdW5kX2ppZmZpZXNfdXBf
cmVsYXRpdmUoSFopKTsKLX0KLQogc3RhdGljIGludCBwbV9ub3RpZmllcihzdHJ1Y3Qgbm90aWZp
ZXJfYmxvY2sgKm5iLAogCQkgICAgICAgdW5zaWduZWQgbG9uZyBhY3Rpb24sCiAJCSAgICAgICB2
b2lkICpkYXRhKQpAQCAtNDIsOSArMjksNiBAQCBzdGF0aWMgaW50IHBtX25vdGlmaWVyKHN0cnVj
dCBub3RpZmllcl9ibG9jayAqbmIsCiAJc3dpdGNoIChhY3Rpb24pIHsKIAljYXNlIElOVEVMX0dU
X1VOUEFSSzoKIAkJaTkxNV9nbG9iYWxzX3VucGFyaygpOwotCQlxdWV1ZV9kZWxheWVkX3dvcmso
aTkxNS0+d3EsCi0JCQkJICAgJmk5MTUtPmdlbS5yZXRpcmVfd29yaywKLQkJCQkgICByb3VuZF9q
aWZmaWVzX3VwX3JlbGF0aXZlKEhaKSk7CiAJCWJyZWFrOwogCiAJY2FzZSBJTlRFTF9HVF9QQVJL
OgpAQCAtNTksNyArNDMsNyBAQCBzdGF0aWMgYm9vbCBzd2l0Y2hfdG9fa2VybmVsX2NvbnRleHRf
c3luYyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewogCWJvb2wgcmVzdWx0ID0gIWludGVsX2d0X2lz
X3dlZGdlZChndCk7CiAKLQlpZiAoaTkxNV9nZW1fd2FpdF9mb3JfaWRsZShndC0+aTkxNSwgSTkx
NV9HRU1fSURMRV9USU1FT1VUKSA9PSAtRVRJTUUpIHsKKwlpZiAoaW50ZWxfZ3Rfd2FpdF9mb3Jf
aWRsZShndCwgSTkxNV9HRU1fSURMRV9USU1FT1VUKSA9PSAtRVRJTUUpIHsKIAkJLyogWFhYIGhp
ZGUgd2FybmluZyBmcm9tIGdlbV9laW8gKi8KIAkJaWYgKGk5MTVfbW9kcGFyYW1zLnJlc2V0KSB7
CiAJCQlkZXZfZXJyKGd0LT5pOTE1LT5kcm0uZGV2LApAQCAtMjM5LDggKzIyMyw2IEBAIHZvaWQg
aTkxNV9nZW1fcmVzdW1lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCiB2b2lkIGk5
MTVfZ2VtX2luaXRfX3BtKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewotCUlOSVRf
REVMQVlFRF9XT1JLKCZpOTE1LT5nZW0ucmV0aXJlX3dvcmssIHJldGlyZV93b3JrX2hhbmRsZXIp
OwotCiAJaTkxNS0+Z2VtLnBtX25vdGlmaWVyLm5vdGlmaWVyX2NhbGwgPSBwbV9ub3RpZmllcjsK
IAlibG9ja2luZ19ub3RpZmllcl9jaGFpbl9yZWdpc3RlcigmaTkxNS0+Z3QucG1fbm90aWZpY2F0
aW9ucywKIAkJCQkJICZpOTE1LT5nZW0ucG1fbm90aWZpZXIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQuYwppbmRleCBiMjZm
NTUwZjg0MzAuLmIzOTIyNGVkMzgxNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTgsNiArOCw3IEBACiAKICNp
bmNsdWRlICJnZW0vaTkxNV9nZW1fcG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2lu
Y2x1ZGUgImd0L2ludGVsX2d0X3JlcXVlc3RzLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfcmVzZXQu
aCIKICNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCiAKQEAgLTMwNCw3ICszMDUsNyBAQCBjcmVh
dGVfdGVzdF9vYmplY3Qoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJaW50IGVycjsK
IAogCS8qIEtlZXAgaW4gR0VNJ3MgZ29vZCBncmFjZXMgKi8KLQlpOTE1X3JldGlyZV9yZXF1ZXN0
cyh2bS0+aTkxNSk7CisJaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzKHZtLT5ndCk7CiAKIAlzaXpl
ID0gbWluKHZtLT50b3RhbCAvIDIsIDEwMjR1bGwgKiBEV19QRVJfUEFHRSAqIFBBR0VfU0laRSk7
CiAJc2l6ZSA9IHJvdW5kX2Rvd24oc2l6ZSwgRFdfUEVSX1BBR0UgKiBQQUdFX1NJWkUpOwpAQCAt
OTIyLDcgKzkyMyw3IEBAIF9fc3NldV9maW5pc2goY29uc3QgY2hhciAqbmFtZSwKIAkJaWd0X3Nw
aW5uZXJfZW5kKHNwaW4pOwogCiAJaWYgKChmbGFncyAmIFRFU1RfSURMRSkgJiYgcmV0ID09IDAp
IHsKLQkJcmV0ID0gaTkxNV9nZW1fd2FpdF9mb3JfaWRsZShjZS0+ZW5naW5lLT5pOTE1LAorCQly
ZXQgPSBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKGNlLT5lbmdpbmUtPmd0LAogCQkJCQkgICAgIE1B
WF9TQ0hFRFVMRV9USU1FT1VUKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jCmluZGV4
IDRiYTZlZDVjODMxMy4uMWNkMjVjZmQwMjQ2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYwpAQCAtNTczLDcgKzU3Myw3IEBAIHN0
YXRpYyB2b2lkIGRpc2FibGVfcmV0aXJlX3dvcmtlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKIHsKIAlpOTE1X2dlbV9kcml2ZXJfdW5yZWdpc3Rlcl9fc2hyaW5rZXIoaTkxNSk7CiAJ
aW50ZWxfZ3RfcG1fZ2V0KCZpOTE1LT5ndCk7Ci0JY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZp
OTE1LT5nZW0ucmV0aXJlX3dvcmspOworCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmaTkxNS0+
Z3QucmVxdWVzdHMucmV0aXJlX3dvcmspOwogfQogCiBzdGF0aWMgdm9pZCByZXN0b3JlX3JldGly
ZV93b3JrZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3QuYwppbmRleCA5NWU2N2RiNTI2NjguLjM5ZmI2OTYwOWJlNCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndC5jCkBAIC02LDYgKzYsNyBAQAogI2luY2x1ZGUgImk5MTVfZHJ2Lmgi
CiAjaW5jbHVkZSAiaW50ZWxfZ3QuaCIKICNpbmNsdWRlICJpbnRlbF9ndF9wbS5oIgorI2luY2x1
ZGUgImludGVsX2d0X3JlcXVlc3RzLmgiCiAjaW5jbHVkZSAiaW50ZWxfbW9jcy5oIgogI2luY2x1
ZGUgImludGVsX3VuY29yZS5oIgogI2luY2x1ZGUgImludGVsX3BtLmgiCkBAIC0yMiw2ICsyMyw3
IEBAIHZvaWQgaW50ZWxfZ3RfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogCWludGVsX2d0X2luaXRfaGFuZ2NoZWNrKGd0KTsK
IAlpbnRlbF9ndF9pbml0X3Jlc2V0KGd0KTsKKwlpbnRlbF9ndF9pbml0X3JlcXVlc3RzKGd0KTsK
IAlpbnRlbF9ndF9wbV9pbml0X2Vhcmx5KGd0KTsKIAlpbnRlbF91Y19pbml0X2Vhcmx5KCZndC0+
dWMpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0u
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMKaW5kZXggMmNjZjhjYWNh
YTBhLi43YjEyZTlkYzZjMmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0X3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwpA
QCAtMTAsNiArMTAsNyBAQAogI2luY2x1ZGUgImludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUg
ImludGVsX2d0LmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcG0uaCIKKyNpbmNsdWRlICJpbnRlbF9n
dF9yZXF1ZXN0cy5oIgogI2luY2x1ZGUgImludGVsX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2Fr
ZXJlZi5oIgogCkBAIC00OCw2ICs0OSw3IEBAIHN0YXRpYyBpbnQgX19ndF91bnBhcmsoc3RydWN0
IGludGVsX3dha2VyZWYgKndmKQogCWk5MTVfcG11X2d0X3VucGFya2VkKGk5MTUpOwogCiAJaW50
ZWxfZ3RfcXVldWVfaGFuZ2NoZWNrKGd0KTsKKwlpbnRlbF9ndF91bnBhcmtfcmVxdWVzdHMoZ3Qp
OwogCiAJcG1fbm90aWZ5KGd0LCBJTlRFTF9HVF9VTlBBUkspOwogCkBAIC02Myw2ICs2NSw3IEBA
IHN0YXRpYyBpbnQgX19ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIAlHRU1fVFJB
Q0UoIlxuIik7CiAKIAlwbV9ub3RpZnkoZ3QsIElOVEVMX0dUX1BBUkspOworCWludGVsX2d0X3Bh
cmtfcmVxdWVzdHMoZ3QpOwogCiAJaTkxNV9wbXVfZ3RfcGFya2VkKGk5MTUpOwogCWlmIChJTlRF
TF9HRU4oaTkxNSkgPj0gNikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0X3JlcXVlc3RzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1
ZXN0cy5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uOGFlZDg5ZmQy
Y2RjCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
cmVxdWVzdHMuYwpAQCAtMCwwICsxLDEyMyBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorICov
CisKKyNpbmNsdWRlICJpOTE1X3JlcXVlc3QuaCIKKyNpbmNsdWRlICJpbnRlbF9ndC5oIgorI2lu
Y2x1ZGUgImludGVsX2d0X3BtLmgiCisjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVzdHMuaCIKKyNp
bmNsdWRlICJpbnRlbF90aW1lbGluZS5oIgorCitzdGF0aWMgdm9pZCByZXRpcmVfcmVxdWVzdHMo
c3RydWN0IGludGVsX3RpbWVsaW5lICp0bCkKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwg
KnJuOworCisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJxLCBybiwgJnRsLT5yZXF1ZXN0cywg
bGluaykKKwkJaWYgKCFpOTE1X3JlcXVlc3RfcmV0aXJlKHJxKSkKKwkJCWJyZWFrOworfQorCits
b25nIGludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KHN0cnVjdCBpbnRlbF9ndCAqZ3Qs
IGxvbmcgdGltZW91dCkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3RfdGltZWxpbmVzICp0aW1lbGluZXMg
PSAmZ3QtPnRpbWVsaW5lczsKKwlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsLCAqdG47CisJdW5z
aWduZWQgbG9uZyBhY3RpdmVfY291bnQgPSAwOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9v
bCBpbnRlcnJ1cHRpYmxlOworCUxJU1RfSEVBRChmcmVlKTsKKworCWludGVycnVwdGlibGUgPSB0
cnVlOworCWlmICh1bmxpa2VseSh0aW1lb3V0IDwgMCkpCisJCXRpbWVvdXQgPSAtdGltZW91dCwg
aW50ZXJydXB0aWJsZSA9IGZhbHNlOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJnRpbWVsaW5lcy0+
bG9jaywgZmxhZ3MpOworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZ0aW1lbGlu
ZXMtPmFjdGl2ZV9saXN0LCBsaW5rKSB7CisJCWlmICghbXV0ZXhfdHJ5bG9jaygmdGwtPm11dGV4
KSkKKwkJCWNvbnRpbnVlOworCisJCWludGVsX3RpbWVsaW5lX2dldCh0bCk7CisJCUdFTV9CVUdf
T04oIXRsLT5hY3RpdmVfY291bnQpOworCQl0bC0+YWN0aXZlX2NvdW50Kys7IC8qIHBpbiB0aGUg
bGlzdCBlbGVtZW50ICovCisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnRpbWVsaW5lcy0+bG9j
aywgZmxhZ3MpOworCisJCWlmICh0aW1lb3V0ID4gMCkgeworCQkJc3RydWN0IGRtYV9mZW5jZSAq
ZmVuY2U7CisKKwkJCWZlbmNlID0gaTkxNV9hY3RpdmVfZmVuY2VfZ2V0KCZ0bC0+bGFzdF9yZXF1
ZXN0KTsKKwkJCWlmIChmZW5jZSkgeworCQkJCXRpbWVvdXQgPSBkbWFfZmVuY2Vfd2FpdF90aW1l
b3V0KGZlbmNlLAorCQkJCQkJCQkgdHJ1ZSwKKwkJCQkJCQkJIHRpbWVvdXQpOworCQkJCWRtYV9m
ZW5jZV9wdXQoZmVuY2UpOworCQkJfQorCQl9CisKKwkJcmV0aXJlX3JlcXVlc3RzKHRsKTsKKwor
CQlzcGluX2xvY2tfaXJxc2F2ZSgmdGltZWxpbmVzLT5sb2NrLCBmbGFncyk7CisKKwkJLyogUmVz
dW1lIGl0ZXJhdGlvbiBhZnRlciBkcm9wcGluZyBsb2NrICovCisJCWxpc3Rfc2FmZV9yZXNldF9u
ZXh0KHRsLCB0biwgbGluayk7CisJCWlmICgtLXRsLT5hY3RpdmVfY291bnQpCisJCQlhY3RpdmVf
Y291bnQgKz0gISFyY3VfYWNjZXNzX3BvaW50ZXIodGwtPmxhc3RfcmVxdWVzdC5mZW5jZSk7CisJ
CWVsc2UKKwkJCWxpc3RfZGVsKCZ0bC0+bGluayk7CisKKwkJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0
ZXgpOworCisJCS8qIERlZmVyIHRoZSBmaW5hbCByZWxlYXNlIHRvIGFmdGVyIHRoZSBzcGlubG9j
ayAqLworCQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ0bC0+a3JlZi5yZWZjb3VudCkpIHsK
KwkJCUdFTV9CVUdfT04odGwtPmFjdGl2ZV9jb3VudCk7CisJCQlsaXN0X2FkZCgmdGwtPmxpbmss
ICZmcmVlKTsKKwkJfQorCX0KKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZ0aW1lbGluZXMtPmxv
Y2ssIGZsYWdzKTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZmcmVlLCBs
aW5rKQorCQlfX2ludGVsX3RpbWVsaW5lX2ZyZWUoJnRsLT5rcmVmKTsKKworCXJldHVybiBhY3Rp
dmVfY291bnQgPyB0aW1lb3V0IDogMDsKK30KKworaW50IGludGVsX2d0X3dhaXRfZm9yX2lkbGUo
c3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0KQoreworCS8qIElmIHRoZSBkZXZpY2Ug
aXMgYXNsZWVwLCB3ZSBoYXZlIG5vIHJlcXVlc3RzIG91dHN0YW5kaW5nICovCisJaWYgKCFpbnRl
bF9ndF9wbV9pc19hd2FrZShndCkpCisJCXJldHVybiAwOworCisJd2hpbGUgKCh0aW1lb3V0ID0g
aW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIHRpbWVvdXQpKSA+IDApIHsKKwkJ
Y29uZF9yZXNjaGVkKCk7CisJCWlmIChzaWduYWxfcGVuZGluZyhjdXJyZW50KSkKKwkJCXJldHVy
biAtRUlOVFI7CisJfQorCisJcmV0dXJuIHRpbWVvdXQ7Cit9CisKK3N0YXRpYyB2b2lkIHJldGly
ZV93b3JrX2hhbmRsZXIoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQoreworCXN0cnVjdCBpbnRl
bF9ndCAqZ3QgPQorCQljb250YWluZXJfb2Yod29yaywgdHlwZW9mKCpndCksIHJlcXVlc3RzLnJl
dGlyZV93b3JrLndvcmspOworCisJaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzKGd0KTsKKwlzY2hl
ZHVsZV9kZWxheWVkX3dvcmsoJmd0LT5yZXF1ZXN0cy5yZXRpcmVfd29yaywKKwkJCSAgICAgIHJv
dW5kX2ppZmZpZXNfdXBfcmVsYXRpdmUoSFopKTsKK30KKwordm9pZCBpbnRlbF9ndF9pbml0X3Jl
cXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJSU5JVF9ERUxBWUVEX1dPUksoJmd0LT5y
ZXF1ZXN0cy5yZXRpcmVfd29yaywgcmV0aXJlX3dvcmtfaGFuZGxlcik7Cit9CisKK3ZvaWQgaW50
ZWxfZ3RfcGFya19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCWNhbmNlbF9kZWxh
eWVkX3dvcmsoJmd0LT5yZXF1ZXN0cy5yZXRpcmVfd29yayk7Cit9CisKK3ZvaWQgaW50ZWxfZ3Rf
dW5wYXJrX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJc2NoZWR1bGVfZGVsYXll
ZF93b3JrKCZndC0+cmVxdWVzdHMucmV0aXJlX3dvcmssCisJCQkgICAgICByb3VuZF9qaWZmaWVz
X3VwX3JlbGF0aXZlKEhaKSk7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ndF9yZXF1ZXN0cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
cmVxdWVzdHMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmJkMzFj
YmNlNDdlMAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3JlcXVlc3RzLmgKQEAgLTAsMCArMSwyNCBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgor
ICovCisKKyNpZm5kZWYgSU5URUxfR1RfUkVRVUVTVFNfSAorI2RlZmluZSBJTlRFTF9HVF9SRVFV
RVNUU19ICisKK3N0cnVjdCBpbnRlbF9ndDsKKworbG9uZyBpbnRlbF9ndF9yZXRpcmVfcmVxdWVz
dHNfdGltZW91dChzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBsb25nIHRpbWVvdXQpOworc3RhdGljIGlu
bGluZSB2b2lkIGludGVsX2d0X3JldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQor
eworCWludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KGd0LCAwKTsKK30KKworaW50IGlu
dGVsX2d0X3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0KTsK
Kwordm9pZCBpbnRlbF9ndF9pbml0X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwordm9p
ZCBpbnRlbF9ndF9wYXJrX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwordm9pZCBpbnRl
bF9ndF91bnBhcmtfcmVxdWVzdHMoc3RydWN0IGludGVsX2d0ICpndCk7CisKKyNlbmRpZiAvKiBJ
TlRFTF9HVF9SRVFVRVNUU19IICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ndF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlw
ZXMuaAppbmRleCAzMDM5Y2VmNjRiMTEuLmY1MjQ5NDJjODJhYSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oCkBAIC00OSw2ICs0OSwxNyBAQCBzdHJ1Y3QgaW50ZWxf
Z3QgewogCQlzdHJ1Y3QgbGlzdF9oZWFkIGh3c3BfZnJlZV9saXN0OwogCX0gdGltZWxpbmVzOwog
CisJc3RydWN0IGludGVsX2d0X3JlcXVlc3RzIHsKKwkJLyoqCisJCSAqIFdlIGxlYXZlIHRoZSB1
c2VyIElSUSBvZmYgYXMgbXVjaCBhcyBwb3NzaWJsZSwKKwkJICogYnV0IHRoaXMgbWVhbnMgdGhh
dCByZXF1ZXN0cyB3aWxsIGZpbmlzaCBhbmQgbmV2ZXIKKwkJICogYmUgcmV0aXJlZCBvbmNlIHRo
ZSBzeXN0ZW0gZ29lcyBpZGxlLiBTZXQgYSB0aW1lciB0bworCQkgKiBmaXJlIHBlcmlvZGljYWxs
eSB3aGlsZSB0aGUgcmluZyBpcyBydW5uaW5nLiBXaGVuIGl0CisJCSAqIGZpcmVzLCBnbyByZXRp
cmUgcmVxdWVzdHMuCisJCSAqLworCQlzdHJ1Y3QgZGVsYXllZF93b3JrIHJldGlyZV93b3JrOwor
CX0gcmVxdWVzdHM7CisKIAlzdHJ1Y3QgaW50ZWxfd2FrZXJlZiB3YWtlcmVmOwogCWF0b21pY190
IHVzZXJfd2FrZXJlZjsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfdGltZWxpbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3RpbWVs
aW5lLmMKaW5kZXggMTZhYmZhYmYwOGM3Li5kNmRmNDBjZGM4YTYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3RpbWVsaW5lLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfdGltZWxpbmUuYwpAQCAtOCw2ICs4LDcgQEAKIAogI2luY2x1
ZGUgImludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUgImludGVsX2d0LmgiCisjaW5jbHVkZSAi
aW50ZWxfZ3RfcmVxdWVzdHMuaCIKIAogI2luY2x1ZGUgIi4uL3NlbGZ0ZXN0cy9pOTE1X3JhbmRv
bS5oIgogI2luY2x1ZGUgIi4uL2k5MTVfc2VsZnRlc3QuaCIKQEAgLTY0MSw2ICs2NDIsNyBAQCBz
dGF0aWMgaW50IGxpdmVfaHdzcF9hbHRlcm5hdGUodm9pZCAqYXJnKQogc3RhdGljIGludCBsaXZl
X2h3c3Bfd3JhcCh2b2lkICphcmcpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUg
PSBhcmc7CisJc3RydWN0IGludGVsX2d0ICpndCA9ICZpOTE1LT5ndDsKIAlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CiAJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bDsKIAllbnVtIGlu
dGVsX2VuZ2luZV9pZCBpZDsKQEAgLTY1MSw3ICs2NTMsNyBAQCBzdGF0aWMgaW50IGxpdmVfaHdz
cF93cmFwKHZvaWQgKmFyZykKIAkgKiBmb3JlaWduIEdQVSByZWZlcmVuY2VzLgogCSAqLwogCi0J
dGwgPSBpbnRlbF90aW1lbGluZV9jcmVhdGUoJmk5MTUtPmd0LCBOVUxMKTsKKwl0bCA9IGludGVs
X3RpbWVsaW5lX2NyZWF0ZShndCwgTlVMTCk7CiAJaWYgKElTX0VSUih0bCkpCiAJCXJldHVybiBQ
VFJfRVJSKHRsKTsKIApAQCAtNjYyLDcgKzY2NCw3IEBAIHN0YXRpYyBpbnQgbGl2ZV9od3NwX3dy
YXAodm9pZCAqYXJnKQogCWlmIChlcnIpCiAJCWdvdG8gb3V0X2ZyZWU7CiAKLQlmb3JfZWFjaF9l
bmdpbmUoZW5naW5lLCBpOTE1LCBpZCkgeworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LT5p
OTE1LCBpZCkgewogCQljb25zdCB1MzIgKmh3c3Bfc2Vxbm9bMl07CiAJCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxOwogCQl1MzIgc2Vxbm9bMl07CkBAIC03MzQsNyArNzM2LDcgQEAgc3RhdGljIGlu
dCBsaXZlX2h3c3Bfd3JhcCh2b2lkICphcmcpCiAJCQlnb3RvIG91dDsKIAkJfQogCi0JCWk5MTVf
cmV0aXJlX3JlcXVlc3RzKGk5MTUpOyAvKiByZWN5Y2xlIEhXU1AgKi8KKwkJaW50ZWxfZ3RfcmV0
aXJlX3JlcXVlc3RzKGd0KTsgLyogcmVjeWNsZSBIV1NQICovCiAJfQogCiBvdXQ6CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZGVidWdmcy5jCmluZGV4IDAzMzc2NDMyNjYwMS4uNWY5NzAzY2EzMTA0IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYwpAQCAtNDEsNiArNDEsNyBAQAogCiAjaW5j
bHVkZSAiZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndF9wbS5o
IgorI2luY2x1ZGUgImd0L2ludGVsX2d0X3JlcXVlc3RzLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxf
cmVzZXQuaCIKICNpbmNsdWRlICJndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oIgogCkBAIC0z
NjE4LDMzICszNjE5LDMzIEBAIHN0YXRpYyBpbnQKIGk5MTVfZHJvcF9jYWNoZXNfc2V0KHZvaWQg
KmRhdGEsIHU2NCB2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBkYXRh
OworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7CiAJaW50IHJldDsKIAogCURSTV9E
RUJVRygiRHJvcHBpbmcgY2FjaGVzOiAweCUwOGxseCBbMHglMDhsbHhdXG4iLAogCQkgIHZhbCwg
dmFsICYgRFJPUF9BTEwpOwogCiAJaWYgKHZhbCAmIERST1BfUkVTRVRfQUNUSVZFICYmCi0JICAg
IHdhaXRfZm9yKGludGVsX2VuZ2luZXNfYXJlX2lkbGUoJmk5MTUtPmd0KSwKLQkJICAgICBJOTE1
X0lETEVfRU5HSU5FU19USU1FT1VUKSkKLQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZCgmaTkxNS0+Z3Qp
OworCSAgICB3YWl0X2ZvcihpbnRlbF9lbmdpbmVzX2FyZV9pZGxlKGd0KSwgSTkxNV9JRExFX0VO
R0lORVNfVElNRU9VVCkpCisJCWludGVsX2d0X3NldF93ZWRnZWQoZ3QpOwogCiAJaWYgKHZhbCAm
IERST1BfUkVUSVJFKQotCQlpOTE1X3JldGlyZV9yZXF1ZXN0cyhpOTE1KTsKKwkJaW50ZWxfZ3Rf
cmV0aXJlX3JlcXVlc3RzKGd0KTsKIAogCWlmICh2YWwgJiAoRFJPUF9JRExFIHwgRFJPUF9BQ1RJ
VkUpKSB7Ci0JCXJldCA9IGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUoaTkxNSwgTUFYX1NDSEVEVUxF
X1RJTUVPVVQpOworCQlyZXQgPSBpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKGd0LCBNQVhfU0NIRURV
TEVfVElNRU9VVCk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KIAogCWlmICh2YWwg
JiBEUk9QX0lETEUpIHsKLQkJcmV0ID0gaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZSgmaTkxNS0+
Z3QpOworCQlyZXQgPSBpbnRlbF9ndF9wbV93YWl0X2Zvcl9pZGxlKGd0KTsKIAkJaWYgKHJldCkK
IAkJCXJldHVybiByZXQ7CiAJfQogCi0JaWYgKHZhbCAmIERST1BfUkVTRVRfQUNUSVZFICYmIGlu
dGVsX2d0X3Rlcm1pbmFsbHlfd2VkZ2VkKCZpOTE1LT5ndCkpCi0JCWludGVsX2d0X2hhbmRsZV9l
cnJvcigmaTkxNS0+Z3QsIEFMTF9FTkdJTkVTLCAwLCBOVUxMKTsKKwlpZiAodmFsICYgRFJPUF9S
RVNFVF9BQ1RJVkUgJiYgaW50ZWxfZ3RfdGVybWluYWxseV93ZWRnZWQoZ3QpKQorCQlpbnRlbF9n
dF9oYW5kbGVfZXJyb3IoZ3QsIEFMTF9FTkdJTkVTLCAwLCBOVUxMKTsKIAogCWZzX3JlY2xhaW1f
YWNxdWlyZShHRlBfS0VSTkVMKTsKIAlpZiAodmFsICYgRFJPUF9CT1VORCkKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCmluZGV4IDZlNWQ1ZTRjYTkxZC4uNGUwYzRiYTJkMjU3IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmgKQEAgLTE3MTcsMTUgKzE3MTcsNiBAQCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSB7CiAKIAlzdHJ1Y3QgewogCQlzdHJ1Y3Qgbm90aWZpZXJfYmxvY2sgcG1fbm90aWZpZXI7Ci0K
LQkJLyoqCi0JCSAqIFdlIGxlYXZlIHRoZSB1c2VyIElSUSBvZmYgYXMgbXVjaCBhcyBwb3NzaWJs
ZSwKLQkJICogYnV0IHRoaXMgbWVhbnMgdGhhdCByZXF1ZXN0cyB3aWxsIGZpbmlzaCBhbmQgbmV2
ZXIKLQkJICogYmUgcmV0aXJlZCBvbmNlIHRoZSBzeXN0ZW0gZ29lcyBpZGxlLiBTZXQgYSB0aW1l
ciB0bwotCQkgKiBmaXJlIHBlcmlvZGljYWxseSB3aGlsZSB0aGUgcmluZyBpcyBydW5uaW5nLiBX
aGVuIGl0Ci0JCSAqIGZpcmVzLCBnbyByZXRpcmUgcmVxdWVzdHMuCi0JCSAqLwotCQlzdHJ1Y3Qg
ZGVsYXllZF93b3JrIHJldGlyZV93b3JrOwogCX0gZ2VtOwogCiAJLyogRm9yIGk5NDVnbSB2Ymxh
bmsgaXJxIHZzLiBDMyB3b3JrYXJvdW5kICovCkBAIC0yMzI4LDcgKzIzMTksNiBAQCB2b2lkIGk5
MTVfZ2VtX2RyaXZlcl9yZWdpc3RlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7CiB2
b2lkIGk5MTVfZ2VtX2RyaXZlcl91bnJlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1KTsKIHZvaWQgaTkxNV9nZW1fZHJpdmVyX3JlbW92ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpOwogdm9pZCBpOTE1X2dlbV9kcml2ZXJfcmVsZWFzZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotaW50IGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBsb25nIHRpbWVvdXQpOwogdm9pZCBpOTE1X2dl
bV9zdXNwZW5kKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGk5MTVf
Z2VtX3N1c3BlbmRfbGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9p
ZCBpOTE1X2dlbV9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4IGFiMjM5NDQ1NzFmYS4uOWMyODc3NDQxNTQwIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAgLTg4MywyMyArODgzLDYgQEAgdm9pZCBpOTE1X2dlbV9y
dW50aW1lX3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQogfQogCi1p
bnQgaTkxNV9nZW1fd2FpdF9mb3JfaWRsZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwg
bG9uZyB0aW1lb3V0KQotewotCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7Ci0KLQkv
KiBJZiB0aGUgZGV2aWNlIGlzIGFzbGVlcCwgd2UgaGF2ZSBubyByZXF1ZXN0cyBvdXRzdGFuZGlu
ZyAqLwotCWlmICghaW50ZWxfZ3RfcG1faXNfYXdha2UoZ3QpKQotCQlyZXR1cm4gMDsKLQotCXdo
aWxlICgodGltZW91dCA9IGk5MTVfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoaTkxNSwgdGltZW91
dCkpID4gMCkgewotCQljb25kX3Jlc2NoZWQoKTsKLQkJaWYgKHNpZ25hbF9wZW5kaW5nKGN1cnJl
bnQpKQotCQkJcmV0dXJuIC1FSU5UUjsKLQl9Ci0KLQlyZXR1cm4gdGltZW91dDsKLX0KLQogc3Ry
dWN0IGk5MTVfdm1hICoKIGk5MTVfZ2VtX29iamVjdF9nZ3R0X3BpbihzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX29iamVjdCAqb2JqLAogCQkJIGNvbnN0IHN0cnVjdCBpOTE1X2dndHRfdmlldyAqdmlldywK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2aWN0LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmljdC5jCmluZGV4IDBhNDEyZjZkMDFkNy4uN2U2
MmMzMTAyOTBmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ldmlj
dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2aWN0LmMKQEAgLTI5LDYg
KzI5LDcgQEAKICNpbmNsdWRlIDxkcm0vaTkxNV9kcm0uaD4KIAogI2luY2x1ZGUgImdlbS9pOTE1
X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuaCIKIAogI2lu
Y2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaTkxNV90cmFjZS5oIgpAQCAtMzcsNyArMzgs
NyBAQCBJOTE1X1NFTEZURVNUX0RFQ0xBUkUoc3RhdGljIHN0cnVjdCBpZ3RfZXZpY3RfY3RsIHsK
IAlib29sIGZhaWxfaWZfYnVzeToxOwogfSBpZ3RfZXZpY3RfY3RsOykKIAotc3RhdGljIGludCBn
Z3R0X2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQorc3RhdGljIGludCBnZ3R0
X2ZsdXNoKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7CiAJLyoKIAkgKiBOb3QgZXZlcnl0aGluZyBp
biB0aGUgR0dUVCBpcyB0cmFja2VkIHZpYSB2bWEgKG90aGVyd2lzZSB3ZQpAQCAtNDYsNyArNDcs
NyBAQCBzdGF0aWMgaW50IGdndHRfZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUp
CiAJICogdGhlIGhvcGVzIHRoYXQgd2UgY2FuIHRoZW4gcmVtb3ZlIGNvbnRleHRzIGFuZCB0aGUg
bGlrZSBvbmx5CiAJICogYm91bmQgYnkgdGhlaXIgYWN0aXZlIHJlZmVyZW5jZS4KIAkgKi8KLQly
ZXR1cm4gaTkxNV9nZW1fd2FpdF9mb3JfaWRsZShpOTE1LCBNQVhfU0NIRURVTEVfVElNRU9VVCk7
CisJcmV0dXJuIGludGVsX2d0X3dhaXRfZm9yX2lkbGUoZ3QsIE1BWF9TQ0hFRFVMRV9USU1FT1VU
KTsKIH0KIAogc3RhdGljIGJvb2wKQEAgLTkyLDcgKzkzLDYgQEAgaTkxNV9nZW1fZXZpY3Rfc29t
ZXRoaW5nKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZtLAogCQkJIHU2NCBzdGFydCwgdTY0
IGVuZCwKIAkJCSB1bnNpZ25lZCBmbGFncykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB2bS0+aTkxNTsKIAlzdHJ1Y3QgZHJtX21tX3NjYW4gc2NhbjsKIAlzdHJ1Y3Qg
bGlzdF9oZWFkIGV2aWN0aW9uX2xpc3Q7CiAJc3RydWN0IGk5MTVfdm1hICp2bWEsICpuZXh0OwpA
QCAtMTI0LDcgKzEyNCw3IEBAIGk5MTVfZ2VtX2V2aWN0X3NvbWV0aGluZyhzdHJ1Y3QgaTkxNV9h
ZGRyZXNzX3NwYWNlICp2bSwKIAkJCQkgICAgbWluX3NpemUsIGFsaWdubWVudCwgY29sb3IsCiAJ
CQkJICAgIHN0YXJ0LCBlbmQsIG1vZGUpOwogCi0JaTkxNV9yZXRpcmVfcmVxdWVzdHModm0tPmk5
MTUpOworCWludGVsX2d0X3JldGlyZV9yZXF1ZXN0cyh2bS0+Z3QpOwogCiBzZWFyY2hfYWdhaW46
CiAJYWN0aXZlID0gTlVMTDsKQEAgLTE5Nyw3ICsxOTcsNyBAQCBpOTE1X2dlbV9ldmljdF9zb21l
dGhpbmcoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJaWYgKEk5MTVfU0VMRlRFU1Rf
T05MWShpZ3RfZXZpY3RfY3RsLmZhaWxfaWZfYnVzeSkpCiAJCXJldHVybiAtRUJVU1k7CiAKLQly
ZXQgPSBnZ3R0X2ZsdXNoKGRldl9wcml2KTsKKwlyZXQgPSBnZ3R0X2ZsdXNoKHZtLT5ndCk7CiAJ
aWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtMjcwLDcgKzI3MCw3IEBAIGludCBpOTE1X2dl
bV9ldmljdF9mb3Jfbm9kZShzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKIAkgKiBhIHN0
cmF5IHBpbiAocHJldmVudGluZyBldmljdGlvbikgdGhhdCBjYW4gb25seSBiZSByZXNvbHZlZCBi
eQogCSAqIHJldGlyaW5nLgogCSAqLwotCWk5MTVfcmV0aXJlX3JlcXVlc3RzKHZtLT5pOTE1KTsK
KwlpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHModm0tPmd0KTsKIAogCWlmIChpOTE1X3ZtX2hhc19j
YWNoZV9jb2xvcmluZyh2bSkpIHsKIAkJLyogRXhwYW5kIHNlYXJjaCB0byBjb3ZlciBuZWlnaGJv
dXJpbmcgZ3VhcmQgcGFnZXMgKG9yIGxhY2shKSAqLwpAQCAtMzcyLDcgKzM3Miw3IEBAIGludCBp
OTE1X2dlbV9ldmljdF92bShzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSkKIAkgKiBzd2l0
Y2ggb3RoZXJ3aXNlIGlzIGluZWZmZWN0aXZlLgogCSAqLwogCWlmIChpOTE1X2lzX2dndHQodm0p
KSB7Ci0JCXJldCA9IGdndHRfZmx1c2godm0tPmk5MTUpOworCQlyZXQgPSBnZ3R0X2ZsdXNoKHZt
LT5ndCk7CiAJCWlmIChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW1fZ3R0LmMKaW5kZXggMzBlZTAxNmFjMmJhLi4wZDA0MDUxNzc4N2IgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ2VtX2d0dC5jCkBAIC0zOCw2ICszOCw3IEBACiAKICNpbmNsdWRlICJkaXNw
bGF5L2ludGVsX2Zyb250YnVmZmVyLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKKyNpbmNs
dWRlICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgogCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKICNp
bmNsdWRlICJpOTE1X3NjYXR0ZXJsaXN0LmgiCkBAIC0yNTI5LDggKzI1MzAsOCBAQCB2b2lkIGk5
MTVfZ2VtX2d0dF9maW5pc2hfcGFnZXMoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwK
IAogCWlmICh1bmxpa2VseShnZ3R0LT5kb19pZGxlX21hcHMpKSB7CiAJCS8qIFhYWCBUaGlzIGRv
ZXMgbm90IHByZXZlbnQgbW9yZSByZXF1ZXN0cyBiZWluZyBzdWJtaXR0ZWQhICovCi0JCWlmIChp
OTE1X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KGRldl9wcml2LAotCQkJCQkJIC1NQVhfU0NIRURV
TEVfVElNRU9VVCkpIHsKKwkJaWYgKGludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0KGdn
dHQtPnZtLmd0LAorCQkJCQkJICAgICAtTUFYX1NDSEVEVUxFX1RJTUVPVVQpKSB7CiAJCQlEUk1f
RVJST1IoIkZhaWxlZCB0byB3YWl0IGZvciBpZGxlOyBWVCdkIG1heSBoYW5nLlxuIik7CiAJCQkv
KiBXYWl0IGEgYml0LCBpbiBob3BlcyBpdCBhdm9pZHMgdGhlIGhhbmcgKi8KIAkJCXVkZWxheSgx
MCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCmluZGV4IDUyZjdjNGU1YjY0NC4uNDM3
ZjlmYzYyODJlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3Qu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwpAQCAtMjE2LDcgKzIx
Niw3IEBAIHN0YXRpYyB2b2lkIHJlbW92ZV9mcm9tX2VuZ2luZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKIAlzcGluX3VubG9jaygmbG9ja2VkLT5hY3RpdmUubG9jayk7CiB9CiAKLXN0YXRpYyBi
b29sIGk5MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitib29sIGk5
MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CiAJaWYgKCFpOTE1
X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKIAkJcmV0dXJuIGZhbHNlOwpAQCAtMTUwOCw2OCArMTUw
OCw2IEBAIGxvbmcgaTkxNV9yZXF1ZXN0X3dhaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJ
cmV0dXJuIHRpbWVvdXQ7CiB9CiAKLWxvbmcgaTkxNV9yZXRpcmVfcmVxdWVzdHNfdGltZW91dChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgbG9uZyB0aW1lb3V0KQotewotCXN0cnVjdCBp
bnRlbF9ndF90aW1lbGluZXMgKnRpbWVsaW5lcyA9ICZpOTE1LT5ndC50aW1lbGluZXM7Ci0Jc3Ry
dWN0IGludGVsX3RpbWVsaW5lICp0bCwgKnRuOwotCXVuc2lnbmVkIGxvbmcgYWN0aXZlX2NvdW50
ID0gMDsKLQl1bnNpZ25lZCBsb25nIGZsYWdzOwotCWJvb2wgaW50ZXJydXB0aWJsZTsKLQlMSVNU
X0hFQUQoZnJlZSk7Ci0KLQlpbnRlcnJ1cHRpYmxlID0gdHJ1ZTsKLQlpZiAodGltZW91dCA8IDAp
Ci0JCXRpbWVvdXQgPSAtdGltZW91dCwgaW50ZXJydXB0aWJsZSA9IGZhbHNlOwotCi0Jc3Bpbl9s
b2NrX2lycXNhdmUoJnRpbWVsaW5lcy0+bG9jaywgZmxhZ3MpOwotCWxpc3RfZm9yX2VhY2hfZW50
cnlfc2FmZSh0bCwgdG4sICZ0aW1lbGluZXMtPmFjdGl2ZV9saXN0LCBsaW5rKSB7Ci0JCWlmICgh
bXV0ZXhfdHJ5bG9jaygmdGwtPm11dGV4KSkKLQkJCWNvbnRpbnVlOwotCi0JCWludGVsX3RpbWVs
aW5lX2dldCh0bCk7Ci0JCUdFTV9CVUdfT04oIXRsLT5hY3RpdmVfY291bnQpOwotCQl0bC0+YWN0
aXZlX2NvdW50Kys7IC8qIHBpbiB0aGUgbGlzdCBlbGVtZW50ICovCi0JCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJnRpbWVsaW5lcy0+bG9jaywgZmxhZ3MpOwotCi0JCWlmICh0aW1lb3V0ID4gMCkg
ewotCQkJc3RydWN0IGRtYV9mZW5jZSAqZmVuY2U7Ci0KLQkJCWZlbmNlID0gaTkxNV9hY3RpdmVf
ZmVuY2VfZ2V0KCZ0bC0+bGFzdF9yZXF1ZXN0KTsKLQkJCWlmIChmZW5jZSkgewotCQkJCXRpbWVv
dXQgPSBkbWFfZmVuY2Vfd2FpdF90aW1lb3V0KGZlbmNlLAotCQkJCQkJCQkgaW50ZXJydXB0aWJs
ZSwKLQkJCQkJCQkJIHRpbWVvdXQpOwotCQkJCWRtYV9mZW5jZV9wdXQoZmVuY2UpOwotCQkJfQot
CQl9Ci0KLQkJcmV0aXJlX3JlcXVlc3RzKHRsKTsKLQotCQlzcGluX2xvY2tfaXJxc2F2ZSgmdGlt
ZWxpbmVzLT5sb2NrLCBmbGFncyk7Ci0KLQkJLyogUmVzdW1lIGl0ZXJhdGlvbiBhZnRlciBkcm9w
cGluZyBsb2NrICovCi0JCWxpc3Rfc2FmZV9yZXNldF9uZXh0KHRsLCB0biwgbGluayk7Ci0JCWlm
ICgtLXRsLT5hY3RpdmVfY291bnQpCi0JCQlhY3RpdmVfY291bnQgKz0gISFyY3VfYWNjZXNzX3Bv
aW50ZXIodGwtPmxhc3RfcmVxdWVzdC5mZW5jZSk7Ci0JCWVsc2UKLQkJCWxpc3RfZGVsKCZ0bC0+
bGluayk7Ci0KLQkJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwotCi0JCS8qIERlZmVyIHRoZSBm
aW5hbCByZWxlYXNlIHRvIGFmdGVyIHRoZSBzcGlubG9jayAqLwotCQlpZiAocmVmY291bnRfZGVj
X2FuZF90ZXN0KCZ0bC0+a3JlZi5yZWZjb3VudCkpIHsKLQkJCUdFTV9CVUdfT04odGwtPmFjdGl2
ZV9jb3VudCk7Ci0JCQlsaXN0X2FkZCgmdGwtPmxpbmssICZmcmVlKTsKLQkJfQotCX0KLQlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZ0aW1lbGluZXMtPmxvY2ssIGZsYWdzKTsKLQotCWxpc3RfZm9y
X2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZmcmVlLCBsaW5rKQotCQlfX2ludGVsX3RpbWVsaW5l
X2ZyZWUoJnRsLT5rcmVmKTsKLQotCXJldHVybiBhY3RpdmVfY291bnQgPyB0aW1lb3V0IDogMDsK
LX0KLQogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQogI2luY2x1ZGUg
InNlbGZ0ZXN0cy9tb2NrX3JlcXVlc3QuYyIKICNpbmNsdWRlICJzZWxmdGVzdHMvaTkxNV9yZXF1
ZXN0LmMiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCmluZGV4IDI1NmIwNzE1MTgwZi4u
NmE5NTI0MmIyODBkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVl
c3QuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaApAQCAtMjUwLDYg
KzI1MCw3IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9yZXF1ZXN0X2NvbW1pdChzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KTsKIHZvaWQgX19pOTE1X3JlcXVlc3RfcXVldWUoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJCQkgIGNvbnN0IHN0cnVjdCBpOTE1X3NjaGVkX2F0dHIg
KmF0dHIpOwogCitib29sIGk5MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEpOwogdm9pZCBpOTE1X3JlcXVlc3RfcmV0aXJlX3VwdG8oc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEpOwogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBpOTE1X3JlcXVlc3QgKgpAQCAtNDU5LDEwICs0
NjAsNCBAQCBpOTE1X3JlcXVlc3RfYWN0aXZlX3RpbWVsaW5lKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQogCQkJCQkgbG9ja2RlcF9pc19oZWxkKCZycS0+ZW5naW5lLT5hY3RpdmUubG9jaykpOwog
fQogCi1sb25nIGk5MTVfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsIGxvbmcgdGltZW91dCk7Ci1zdGF0aWMgaW5saW5lIHZvaWQgaTkxNV9yZXRp
cmVfcmVxdWVzdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCi17Ci0JaTkxNV9yZXRp
cmVfcmVxdWVzdHNfdGltZW91dChpOTE1LCAwKTsKLX0KLQogI2VuZGlmIC8qIEk5MTVfUkVRVUVT
VF9IICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2Zs
dXNoX3Rlc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVz
dC5jCmluZGV4IGVkNDk2YmQ2ZDg0Zi4uN2IwOTM5ZTNmMDA3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYwpAQCAtNCw4ICs0LDggQEAKICAq
IENvcHlyaWdodCDCqSAyMDE4IEludGVsIENvcnBvcmF0aW9uCiAgKi8KIAotI2luY2x1ZGUgImdl
bS9pOTE1X2dlbV9jb250ZXh0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKKyNpbmNsdWRl
ICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgogCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKICNpbmNs
dWRlICJpOTE1X3NlbGZ0ZXN0LmgiCkBAIC0xNCwxMSArMTQsMTIgQEAKIAogaW50IGlndF9mbHVz
aF90ZXN0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewotCWludCByZXQgPSBpbnRl
bF9ndF9pc193ZWRnZWQoJmk5MTUtPmd0KSA/IC1FSU8gOiAwOworCXN0cnVjdCBpbnRlbF9ndCAq
Z3QgPSAmaTkxNS0+Z3Q7CisJaW50IHJldCA9IGludGVsX2d0X2lzX3dlZGdlZChndCkgPyAtRUlP
IDogMDsKIAogCWNvbmRfcmVzY2hlZCgpOwogCi0JaWYgKGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUo
aTkxNSwgSFogLyA1KSA9PSAtRVRJTUUpIHsKKwlpZiAoaW50ZWxfZ3Rfd2FpdF9mb3JfaWRsZShn
dCwgSFogLyA1KSA9PSAtRVRJTUUpIHsKIAkJcHJfZXJyKCIlcFMgdGltZWQgb3V0LCBjYW5jZWxs
aW5nIGFsbCBmdXJ0aGVyIHRlc3RpbmcuXG4iLAogCQkgICAgICAgX19idWlsdGluX3JldHVybl9h
ZGRyZXNzKDApKTsKIApAQCAtMjYsNyArMjcsNyBAQCBpbnQgaWd0X2ZsdXNoX3Rlc3Qoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCQkgIF9fYnVpbHRpbl9yZXR1cm5fYWRkcmVzcygw
KSk7CiAJCUdFTV9UUkFDRV9EVU1QKCk7CiAKLQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZCgmaTkxNS0+
Z3QpOworCQlpbnRlbF9ndF9zZXRfd2VkZ2VkKGd0KTsKIAkJcmV0ID0gLUVJTzsKIAl9CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2xpdmVfdGVzdC5jCmluZGV4IGVh
ZTkwZjk3ZGY2Yy4uODEwYjYwMTAwYzJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9zZWxmdGVzdHMvaWd0X2xpdmVfdGVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3Nl
bGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMKQEAgLTQsNyArNCw4IEBACiAgKiBDb3B5cmlnaHQgwqkg
MjAxOCBJbnRlbCBDb3Jwb3JhdGlvbgogICovCiAKLSNpbmNsdWRlICIuLi9pOTE1X2Rydi5oIgor
I2luY2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuaCIK
IAogI2luY2x1ZGUgIi4uL2k5MTVfc2VsZnRlc3QuaCIKICNpbmNsdWRlICJpZ3RfZmx1c2hfdGVz
dC5oIgpAQCAtMjMsNyArMjQsNyBAQCBpbnQgaWd0X2xpdmVfdGVzdF9iZWdpbihzdHJ1Y3QgaWd0
X2xpdmVfdGVzdCAqdCwKIAl0LT5mdW5jID0gZnVuYzsKIAl0LT5uYW1lID0gbmFtZTsKIAotCWVy
ciA9IGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUoaTkxNSwgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOwor
CWVyciA9IGludGVsX2d0X3dhaXRfZm9yX2lkbGUoJmk5MTUtPmd0LCBNQVhfU0NIRURVTEVfVElN
RU9VVCk7CiAJaWYgKGVycikgewogCQlwcl9lcnIoIiVzKCVzKTogZmFpbGVkIHRvIGlkbGUgYmVm
b3JlLCB3aXRoIGVycj0lZCEiLAogCQkgICAgICAgZnVuYywgbmFtZSwgZXJyKTsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYwppbmRleCA4N2Qz
NDE2N2JmODkuLmVmZTQwYzI5ZmNmMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
c2VsZnRlc3RzL21vY2tfZ2VtX2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3Nl
bGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYwpAQCAtMjYsNiArMjYsNyBAQAogI2luY2x1ZGUgPGxp
bnV4L3BtX3J1bnRpbWUuaD4KIAogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCisjaW5jbHVkZSAi
Z3QvaW50ZWxfZ3RfcmVxdWVzdHMuaCIKICNpbmNsdWRlICJndC9tb2NrX2VuZ2luZS5oIgogCiAj
aW5jbHVkZSAibW9ja19yZXF1ZXN0LmgiCkBAIC00NCw3ICs0NSw4IEBAIHZvaWQgbW9ja19kZXZp
Y2VfZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJZG8gewogCQlmb3JfZWFj
aF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkKIAkJCW1vY2tfZW5naW5lX2ZsdXNoKGVuZ2luZSk7
Ci0JfSB3aGlsZSAoaTkxNV9yZXRpcmVfcmVxdWVzdHNfdGltZW91dChpOTE1LCBNQVhfU0NIRURV
TEVfVElNRU9VVCkpOworCX0gd2hpbGUgKGludGVsX2d0X3JldGlyZV9yZXF1ZXN0c190aW1lb3V0
KCZpOTE1LT5ndCwKKwkJCQkJCSAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpKTsKIH0KIAogc3RhdGlj
IHZvaWQgbW9ja19kZXZpY2VfcmVsZWFzZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQpAQCAtOTgs
MTAgKzEwMCw2IEBAIHN0YXRpYyB2b2lkIHJlbGVhc2VfZGV2KHN0cnVjdCBkZXZpY2UgKmRldikK
IAlrZnJlZShwZGV2KTsKIH0KIAotc3RhdGljIHZvaWQgbW9ja19yZXRpcmVfd29ya19oYW5kbGVy
KHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKLXsKLX0KLQogc3RhdGljIGludCBwbV9kb21haW5f
cmVzdW1lKHN0cnVjdCBkZXZpY2UgKmRldikKIHsKIAlyZXR1cm4gcG1fZ2VuZXJpY19ydW50aW1l
X3Jlc3VtZShkZXYpOwpAQCAtMTgwLDggKzE3OCw2IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICptb2NrX2dlbV9kZXZpY2Uodm9pZCkKIAogCW1vY2tfaW5pdF9jb250ZXh0cyhpOTE1KTsKIAot
CUlOSVRfREVMQVlFRF9XT1JLKCZpOTE1LT5nZW0ucmV0aXJlX3dvcmssIG1vY2tfcmV0aXJlX3dv
cmtfaGFuZGxlcik7Ci0KIAlpOTE1LT5ndC5hd2FrZSA9IC0xOwogCiAJaW50ZWxfdGltZWxpbmVz
X2luaXQoaTkxNSk7Ci0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3Rp
bmZvL2ludGVsLWdmeA==

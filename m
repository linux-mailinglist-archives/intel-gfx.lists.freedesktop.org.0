Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 036025EFDA
	for <lists+intel-gfx@lfdr.de>; Thu,  4 Jul 2019 02:00:09 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DB6A56E21E;
	Thu,  4 Jul 2019 00:00:06 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3FFCD6E21E
 for <intel-gfx@lists.freedesktop.org>; Thu,  4 Jul 2019 00:00:05 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 03 Jul 2019 17:00:03 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,449,1557212400"; d="scan'208";a="339452972"
Received: from puneetya-mobl.amr.corp.intel.com (HELO
 ldmartin-desk1.intel.com) ([10.254.184.98])
 by orsmga005.jf.intel.com with ESMTP; 03 Jul 2019 17:00:03 -0700
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  3 Jul 2019 16:59:57 -0700
Message-Id: <20190704000000.20019-1-lucas.demarchi@intel.com>
X-Mailer: git-send-email 2.21.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/4] drm/i915: make new intel_tc.c use uncore
 accessors
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: /home/ldmartin/tmp/tgl-patches/0000-cover-letter.patch@freedesktop.org,
	Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TGV0J3MgbWFrZSB0aGUganVzdCBjcmVhdGVkIGludGVsX3RjLmMgYWxyZWFkeSBmb2xsb3cgdGhl
IHRyZW5kIG9mIHVzaW5nCmk5MTUgaW5zdGVhZCBvZiBkZXZfcHJpdiBhbmQgY2FsbGluZyB0aGUg
aW50ZWxfdW5jb3JlXyooKSBmdW5jdGlvbnMuCgpTaWduZWQtb2ZmLWJ5OiBMdWNhcyBEZSBNYXJj
aGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3RjLmMgfCA1NyArKysrKysrKysrKysrKy0tLS0tLS0tLS0tCiAxIGZpbGUg
Y2hhbmdlZCwgMzEgaW5zZXJ0aW9ucygrKSwgMjYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF90Yy5jCmluZGV4IDUzMTAzYTlhYThhNy4uMWE5ZGQzMmZiMGE1
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5jCkBAIC0yNCwxMSArMjQs
MTIgQEAgc3RhdGljIGNvbnN0IGNoYXIgKnRjX3BvcnRfbW9kZV9uYW1lKGVudW0gdGNfcG9ydF9t
b2RlIG1vZGUpCiAKIHUzMiBpbnRlbF90Y19wb3J0X2dldF9sYW5lX21hc2soc3RydWN0IGludGVs
X2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7Ci0JZW51bSB0Y19wb3J0
IHRjX3BvcnQgPSBpbnRlbF9wb3J0X3RvX3RjKGRldl9wcml2LCBkaWdfcG9ydC0+YmFzZS5wb3J0
KTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZGlnX3BvcnQtPmJh
c2UuYmFzZS5kZXYpOworCWVudW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50ZWxfcG9ydF90b190Yyhp
OTE1LCBkaWdfcG9ydC0+YmFzZS5wb3J0KTsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUg
PSAmaTkxNS0+dW5jb3JlOwogCXUzMiBsYW5lX21hc2s7CiAKLQlsYW5lX21hc2sgPSBJOTE1X1JF
QUQoUE9SVF9UWF9ERkxFWERQU1ApOworCWxhbmVfbWFzayA9IGludGVsX3VuY29yZV9yZWFkKHVu
Y29yZSwgUE9SVF9UWF9ERkxFWERQU1ApOwogCiAJV0FSTl9PTihsYW5lX21hc2sgPT0gMHhmZmZm
ZmZmZik7CiAKQEAgLTM4LDcgKzM5LDcgQEAgdTMyIGludGVsX3RjX3BvcnRfZ2V0X2xhbmVfbWFz
ayhzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkKIAogaW50IGludGVsX3RjX3Bv
cnRfZmlhX21heF9sYW5lX2NvdW50KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0
KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3Bv
cnQtPmJhc2UuYmFzZS5kZXYpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9f
aTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7
CiAJdTMyIGxhbmVfbWFzazsKIApAQCAtNDYsNyArNDcsNyBAQCBpbnQgaW50ZWxfdGNfcG9ydF9m
aWFfbWF4X2xhbmVfY291bnQoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiAJ
CXJldHVybiA0OwogCiAJbGFuZV9tYXNrID0gMDsKLQl3aXRoX2ludGVsX2Rpc3BsYXlfcG93ZXIo
ZGV2X3ByaXYsIFBPV0VSX0RPTUFJTl9ESVNQTEFZX0NPUkUsIHdha2VyZWYpCisJd2l0aF9pbnRl
bF9kaXNwbGF5X3Bvd2VyKGk5MTUsIFBPV0VSX0RPTUFJTl9ESVNQTEFZX0NPUkUsIHdha2VyZWYp
CiAJCWxhbmVfbWFzayA9IGludGVsX3RjX3BvcnRfZ2V0X2xhbmVfbWFzayhkaWdfcG9ydCk7CiAK
IAlzd2l0Y2ggKGxhbmVfbWFzaykgewpAQCAtODksMTIgKzkwLDEzIEBAIHN0YXRpYyB2b2lkIHRj
X3BvcnRfZml4dXBfbGVnYWN5X2ZsYWcoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3Bv
cnQsCiAKIHN0YXRpYyB1MzIgdGNfcG9ydF9saXZlX3N0YXR1c19tYXNrKHN0cnVjdCBpbnRlbF9k
aWdpdGFsX3BvcnQgKmRpZ19wb3J0KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOwotCWVudW0gdGNfcG9ydCB0
Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZGlnX3BvcnQtPmJhc2UucG9ydCk7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNl
LmJhc2UuZGV2KTsKKwllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoaTkx
NSwgZGlnX3BvcnQtPmJhc2UucG9ydCk7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0g
Jmk5MTUtPnVuY29yZTsKIAl1MzIgbWFzayA9IDA7CiAJdTMyIHZhbDsKIAotCXZhbCA9IEk5MTVf
UkVBRChQT1JUX1RYX0RGTEVYRFBTUCk7CisJdmFsID0gaW50ZWxfdW5jb3JlX3JlYWQodW5jb3Jl
LCBQT1JUX1RYX0RGTEVYRFBTUCk7CiAKIAlpZiAodmFsID09IDB4ZmZmZmZmZmYpIHsKIAkJRFJN
X0RFQlVHX0tNUygiUG9ydCAlczogUEhZIGluIFRDQ09MRCwgbm90aGluZyBjb25uZWN0ZWRcbiIs
CkBAIC0xMDcsNyArMTA5LDcgQEAgc3RhdGljIHUzMiB0Y19wb3J0X2xpdmVfc3RhdHVzX21hc2so
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiAJaWYgKHZhbCAmIFRDX0xJVkVf
U1RBVEVfVEModGNfcG9ydCkpCiAJCW1hc2sgfD0gQklUKFRDX1BPUlRfRFBfQUxUKTsKIAotCWlm
IChJOTE1X1JFQUQoU0RFSVNSKSAmIFNERV9UQ19IT1RQTFVHX0lDUCh0Y19wb3J0KSkKKwlpZiAo
aW50ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCBTREVJU1IpICYgU0RFX1RDX0hPVFBMVUdfSUNQKHRj
X3BvcnQpKQogCQltYXNrIHw9IEJJVChUQ19QT1JUX0xFR0FDWSk7CiAKIAkvKiBUaGUgc2luayBj
YW4gYmUgY29ubmVjdGVkIG9ubHkgaW4gYSBzaW5nbGUgbW9kZS4gKi8KQEAgLTExOSwxMSArMTIx
LDEyIEBAIHN0YXRpYyB1MzIgdGNfcG9ydF9saXZlX3N0YXR1c19tYXNrKHN0cnVjdCBpbnRlbF9k
aWdpdGFsX3BvcnQgKmRpZ19wb3J0KQogCiBzdGF0aWMgYm9vbCBpY2xfdGNfcGh5X3N0YXR1c19j
b21wbGV0ZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkKIHsKLQlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNlLmJhc2Uu
ZGV2KTsKLQllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYs
IGRpZ19wb3J0LT5iYXNlLnBvcnQpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0g
dG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7CisJZW51bSB0Y19wb3J0IHRjX3BvcnQg
PSBpbnRlbF9wb3J0X3RvX3RjKGk5MTUsIGRpZ19wb3J0LT5iYXNlLnBvcnQpOworCXN0cnVjdCBp
bnRlbF91bmNvcmUgKnVuY29yZSA9ICZpOTE1LT51bmNvcmU7CiAJdTMyIHZhbDsKIAotCXZhbCA9
IEk5MTVfUkVBRChQT1JUX1RYX0RGTEVYRFBQTVMpOworCXZhbCA9IGludGVsX3VuY29yZV9yZWFk
KHVuY29yZSwgUE9SVF9UWF9ERkxFWERQUE1TKTsKIAlpZiAodmFsID09IDB4ZmZmZmZmZmYpIHsK
IAkJRFJNX0RFQlVHX0tNUygiUG9ydCAlczogUEhZIGluIFRDQ09MRCwgYXNzdW1pbmcgbm90IGNv
bXBsZXRlXG4iLAogCQkJICAgICAgZGlnX3BvcnQtPnRjX3BvcnRfbmFtZSk7CkBAIC0xMzYsMTEg
KzEzOSwxMiBAQCBzdGF0aWMgYm9vbCBpY2xfdGNfcGh5X3N0YXR1c19jb21wbGV0ZShzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkKIHN0YXRpYyBib29sIGljbF90Y19waHlfc2V0
X3NhZmVfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCwKIAkJCQkgICAg
IGJvb2wgZW5hYmxlKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOwotCWVudW0gdGNfcG9ydCB0Y19wb3J0ID0g
aW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZGlnX3BvcnQtPmJhc2UucG9ydCk7CisJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNlLmJhc2UuZGV2
KTsKKwllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoaTkxNSwgZGlnX3Bv
cnQtPmJhc2UucG9ydCk7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJmk5MTUtPnVu
Y29yZTsKIAl1MzIgdmFsOwogCi0JdmFsID0gSTkxNV9SRUFEKFBPUlRfVFhfREZMRVhEUENTU1Mp
OworCXZhbCA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgUE9SVF9UWF9ERkxFWERQQ1NTUyk7
CiAJaWYgKHZhbCA9PSAweGZmZmZmZmZmKSB7CiAJCURSTV9ERUJVR19LTVMoIlBvcnQgJXM6IFBI
WSBpbiBUQ0NPTEQsIGNhbid0IHNldCBzYWZlLW1vZGUgdG8gJXNcbiIsCiAJCQkgICAgICBkaWdf
cG9ydC0+dGNfcG9ydF9uYW1lLApAQCAtMTUzLDcgKzE1Nyw3IEBAIHN0YXRpYyBib29sIGljbF90
Y19waHlfc2V0X3NhZmVfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCwK
IAlpZiAoIWVuYWJsZSkKIAkJdmFsIHw9IERQX1BIWV9NT0RFX1NUQVRVU19OT1RfU0FGRSh0Y19w
b3J0KTsKIAotCUk5MTVfV1JJVEUoUE9SVF9UWF9ERkxFWERQQ1NTUywgdmFsKTsKKwlpbnRlbF91
bmNvcmVfd3JpdGUodW5jb3JlLCBQT1JUX1RYX0RGTEVYRFBDU1NTLCB2YWwpOwogCiAJaWYgKGVu
YWJsZSAmJiB3YWl0X2ZvcighaWNsX3RjX3BoeV9zdGF0dXNfY29tcGxldGUoZGlnX3BvcnQpLCAx
MCkpCiAJCURSTV9ERUJVR19LTVMoIlBvcnQgJXM6IFBIWSBjb21wbGV0ZSBjbGVhciB0aW1lZCBv
dXRcbiIsCkBAIC0xNjQsMTEgKzE2OCwxMiBAQCBzdGF0aWMgYm9vbCBpY2xfdGNfcGh5X3NldF9z
YWZlX21vZGUoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQsCiAKIHN0YXRpYyBi
b29sIGljbF90Y19waHlfaXNfaW5fc2FmZV9tb2RlKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQg
KmRpZ19wb3J0KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOwotCWVudW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50
ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZGlnX3BvcnQtPmJhc2UucG9ydCk7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNlLmJhc2UuZGV2KTsK
KwllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoaTkxNSwgZGlnX3BvcnQt
PmJhc2UucG9ydCk7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJmk5MTUtPnVuY29y
ZTsKIAl1MzIgdmFsOwogCi0JdmFsID0gSTkxNV9SRUFEKFBPUlRfVFhfREZMRVhEUENTU1MpOwor
CXZhbCA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgUE9SVF9UWF9ERkxFWERQQ1NTUyk7CiAJ
aWYgKHZhbCA9PSAweGZmZmZmZmZmKSB7CiAJCURSTV9ERUJVR19LTVMoIlBvcnQgJXM6IFBIWSBp
biBUQ0NPTEQsIGFzc3VtZSBzYWZlIG1vZGVcbiIsCiAJCQkgICAgICBkaWdfcG9ydC0+dGNfcG9y
dF9uYW1lKTsKQEAgLTMxNywxMSArMzIyLDExIEBAIGludGVsX3RjX3BvcnRfZ2V0X3RhcmdldF9t
b2RlKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQogc3RhdGljIHZvaWQgaW50
ZWxfdGNfcG9ydF9yZXNldF9tb2RlKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0
LAogCQkJCSAgICAgaW50IHJlcXVpcmVkX2xhbmVzKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOworCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRl
dik7CiAJZW51bSB0Y19wb3J0X21vZGUgb2xkX3RjX21vZGUgPSBkaWdfcG9ydC0+dGNfbW9kZTsK
IAotCWludGVsX2Rpc3BsYXlfcG93ZXJfZmx1c2hfd29yayhkZXZfcHJpdik7Ci0JV0FSTl9PTihp
bnRlbF9kaXNwbGF5X3Bvd2VyX2lzX2VuYWJsZWQoZGV2X3ByaXYsCisJaW50ZWxfZGlzcGxheV9w
b3dlcl9mbHVzaF93b3JrKGk5MTUpOworCVdBUk5fT04oaW50ZWxfZGlzcGxheV9wb3dlcl9pc19l
bmFibGVkKGk5MTUsCiAJCQkJCSAgICAgICBpbnRlbF9hdXhfcG93ZXJfZG9tYWluKGRpZ19wb3J0
KSkpOwogCiAJaWNsX3RjX3BoeV9kaXNjb25uZWN0KGRpZ19wb3J0KTsKQEAgLTQwNCwxMCArNDA5
LDEwIEBAIGJvb2wgaW50ZWxfdGNfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2RpZ2l0YWxf
cG9ydCAqZGlnX3BvcnQpCiBzdGF0aWMgdm9pZCBfX2ludGVsX3RjX3BvcnRfbG9jayhzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCwKIAkJCQkgaW50IHJlcXVpcmVkX2xhbmVzKQog
ewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQt
PmJhc2UuYmFzZS5kZXYpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkx
NShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CiAK
LQl3YWtlcmVmID0gaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQoZGV2X3ByaXYsIFBPV0VSX0RPTUFJ
Tl9ESVNQTEFZX0NPUkUpOworCXdha2VyZWYgPSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldChpOTE1
LCBQT1dFUl9ET01BSU5fRElTUExBWV9DT1JFKTsKIAogCW11dGV4X2xvY2soJmRpZ19wb3J0LT50
Y19sb2NrKTsKIApAQCAtNDI2LDEyICs0MzEsMTIgQEAgdm9pZCBpbnRlbF90Y19wb3J0X2xvY2so
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiAKIHZvaWQgaW50ZWxfdGNfcG9y
dF91bmxvY2soc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiB7Ci0Jc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNl
LmRldik7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0
LT5iYXNlLmJhc2UuZGV2KTsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZiA9IGZldGNoX2FuZF96
ZXJvKCZkaWdfcG9ydC0+dGNfbG9ja193YWtlcmVmKTsKIAogCW11dGV4X3VubG9jaygmZGlnX3Bv
cnQtPnRjX2xvY2spOwogCi0JaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5bmMoZGV2X3ByaXYs
IFBPV0VSX0RPTUFJTl9ESVNQTEFZX0NPUkUsCisJaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5
bmMoaTkxNSwgUE9XRVJfRE9NQUlOX0RJU1BMQVlfQ09SRSwKIAkJCQkgICAgICB3YWtlcmVmKTsK
IH0KIAotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZng=

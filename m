Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 403EB15AD0C
	for <lists+intel-gfx@lfdr.de>; Wed, 12 Feb 2020 17:18:11 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 82F636F540;
	Wed, 12 Feb 2020 16:18:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3E1286F540
 for <intel-gfx@lists.freedesktop.org>; Wed, 12 Feb 2020 16:18:08 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Feb 2020 08:18:07 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,433,1574150400"; d="scan'208";a="251956779"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga002.jf.intel.com with SMTP; 12 Feb 2020 08:18:05 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 12 Feb 2020 18:18:01 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 12 Feb 2020 18:17:38 +0200
Message-Id: <20200212161738.28141-9-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200212161738.28141-1-ville.syrjala@linux.intel.com>
References: <20200212161738.28141-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 8/8] drm/i915: Have pfit calculations return
 an error code
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkNo
YW5nZSBpbnRlbF97Z21jaCxwY2h9X3BhbmVsX2ZpdHRpbmcoKSB0byByZXR1cm4gYSBub3JtYWwK
ZXJyb3IgdnMuIHN1Y2Nlc3MgaW50LiBXZSdsbCBuZWVkIHRoaXMgbGF0ZXIgdG8gdmFsaWRhdGUg
dGhhdAp0aGUgbWFyZ2luIHByb3BlcnRpZXMgYXJlbid0IG1pc2NvbmZpZ3VyZWQuCgpTaWduZWQt
b2ZmLWJ5OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgot
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jICAgICB8IDEwICsrKysr
KystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICB8IDEwICsr
KysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jICB8IDIy
ICsrKysrKysrKysrLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfbHZkcy5jICB8IDEzICsrKysrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcGFuZWwuYyB8IDE5ICsrKysrKysrKysrLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfcGFuZWwuaCB8ICA2ICsrKy0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS92bHZfZHNpLmMgICAgIHwgIDYgKysrKy0tCiA3IGZpbGVzIGNoYW5nZWQs
IDQ5IGluc2VydGlvbnMoKyksIDM3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pY2xfZHNpLmMKaW5kZXggZDUxNzhiZTQ4MjI2Li4zMTM0YjA0MzYwNDAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jCkBAIC0xNDIxLDEzICsxNDIxLDE3IEBAIHN0
YXRpYyBpbnQgZ2VuMTFfZHNpX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyLAogCQkJCQkJICAgYmFzZSk7CiAJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqaW50ZWxf
Y29ubmVjdG9yID0gaW50ZWxfZHNpLT5hdHRhY2hlZF9jb25uZWN0b3I7CiAJY29uc3Qgc3RydWN0
IGRybV9kaXNwbGF5X21vZGUgKmZpeGVkX21vZGUgPQotCQkJCQlpbnRlbF9jb25uZWN0b3ItPnBh
bmVsLmZpeGVkX21vZGU7CisJCWludGVsX2Nvbm5lY3Rvci0+cGFuZWwuZml4ZWRfbW9kZTsKIAlz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9Ci0JCQkJCSZwaXBlX2NvbmZp
Zy0+aHcuYWRqdXN0ZWRfbW9kZTsKKwkJJnBpcGVfY29uZmlnLT5ody5hZGp1c3RlZF9tb2RlOwor
CWludCByZXQ7CiAKIAlwaXBlX2NvbmZpZy0+b3V0cHV0X2Zvcm1hdCA9IElOVEVMX09VVFBVVF9G
T1JNQVRfUkdCOwogCWludGVsX2ZpeGVkX3BhbmVsX21vZGUoZml4ZWRfbW9kZSwgYWRqdXN0ZWRf
bW9kZSk7Ci0JaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUp
OworCisJcmV0ID0gaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3Rh
dGUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CiAKIAlhZGp1c3RlZF9tb2RlLT5mbGFncyA9
IDA7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwppbmRleCAwMzg0NWJk
N2Q5MjcuLmU4ZWJhY2IwNjZkYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYwpAQCAtMjMxNSw5ICsyMzE1LDcgQEAgaW50ZWxfZHBfeWNiY3I0MjBfY29uZmlnKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAljcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0ID0gSU5U
RUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMDsKIAotCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGNy
dGNfc3RhdGUsIGNvbm5fc3RhdGUpOwotCi0JcmV0dXJuIDA7CisJcmV0dXJuIGludGVsX3BjaF9w
YW5lbF9maXR0aW5nKGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOwogfQogCiBib29sIGludGVsX2Rw
X2xpbWl0ZWRfY29sb3JfcmFuZ2UoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCkBAIC0yNDA3LDkgKzI0MDUsMTEgQEAgaW50ZWxfZHBfY29tcHV0ZV9jb25maWcoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJICAgICAgIGFkanVzdGVkX21vZGUpOwog
CiAJCWlmIChIQVNfR01DSChkZXZfcHJpdikpCi0JCQlpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmco
cGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOworCQkJcmV0ID0gaW50ZWxfZ21jaF9wYW5lbF9maXR0
aW5nKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKIAkJZWxzZQotCQkJaW50ZWxfcGNoX3BhbmVs
X2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOworCQkJcmV0ID0gaW50ZWxfcGNoX3Bh
bmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOworCQlpZiAocmV0KQorCQkJcmV0
dXJuIHJldDsKIAl9CiAKIAlpZiAoYWRqdXN0ZWRfbW9kZS0+ZmxhZ3MgJiBEUk1fTU9ERV9GTEFH
X0RCTFNDQU4pCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2hkbWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCmluZGV4
IDVlNzhkOTkzY2U3Ny4uNTU5Y2FlZTBiYjI1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2hkbWkuYwpAQCAtMjI5NSwyMiArMjI5NSwyNSBAQCBzdGF0aWMgYm9vbCBoZG1p
X2RlZXBfY29sb3JfcG9zc2libGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyBib29sCitzdGF0aWMgaW50CiBpbnRl
bF9oZG1pX3ljYmNyNDIwX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKIAkJCSAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKQog
ewogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IgPSBjb25uX3N0YXRlLT5jb25uZWN0
b3I7CisJY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPQorCQkm
Y3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKKworCWlmICghZHJtX21vZGVfaXNfNDIwX29u
bHkoJmNvbm5lY3Rvci0+ZGlzcGxheV9pbmZvLCBhZGp1c3RlZF9tb2RlKSkKKwkJcmV0dXJuIDA7
CiAKIAlpZiAoIWNvbm5lY3Rvci0+eWNiY3JfNDIwX2FsbG93ZWQpIHsKIAkJRFJNX0VSUk9SKCJQ
bGF0Zm9ybSBkb2Vzbid0IHN1cHBvcnQgWUNCQ1I0MjAgb3V0cHV0XG4iKTsKLQkJcmV0dXJuIGZh
bHNlOworCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKIAljcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0
ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMDsKIAotCWludGVsX3BjaF9wYW5lbF9maXR0
aW5nKGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOwotCi0JcmV0dXJuIHRydWU7CisJcmV0dXJuIGlu
dGVsX3BjaF9wYW5lbF9maXR0aW5nKGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOwogfQogCiBzdGF0
aWMgaW50IGludGVsX2hkbWlfcG9ydF9jbG9jayhpbnQgY2xvY2ssIGludCBicGMpCkBAIC0yNDM1
LDEyICsyNDM4LDkgQEAgaW50IGludGVsX2hkbWlfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIsCiAJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVf
RkxBR19EQkxDTEspCiAJCXBpcGVfY29uZmlnLT5waXhlbF9tdWx0aXBsaWVyID0gMjsKIAotCWlm
IChkcm1fbW9kZV9pc180MjBfb25seSgmY29ubmVjdG9yLT5kaXNwbGF5X2luZm8sIGFkanVzdGVk
X21vZGUpKSB7Ci0JCWlmICghaW50ZWxfaGRtaV95Y2JjcjQyMF9jb25maWcocGlwZV9jb25maWcs
IGNvbm5fc3RhdGUpKSB7Ci0JCQlEUk1fRVJST1IoIkNhbid0IHN1cHBvcnQgWUNCQ1I0MjAgb3V0
cHV0XG4iKTsKLQkJCXJldHVybiAtRUlOVkFMOwotCQl9Ci0JfQorCXJldCA9IGludGVsX2hkbWlf
eWNiY3I0MjBfY29uZmlnKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKKwlpZiAocmV0KQorCQly
ZXR1cm4gcmV0OwogCiAJcGlwZV9jb25maWctPmxpbWl0ZWRfY29sb3JfcmFuZ2UgPQogCQlpbnRl
bF9oZG1pX2xpbWl0ZWRfY29sb3JfcmFuZ2UocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9sdmRzLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2x2ZHMuYwppbmRleCBlZWU2YmI2Y2E1M2Iu
LmZhOWU4MTlmZDI1OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9sdmRzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9sdmRz
LmMKQEAgLTM5NSw2ICszOTUsNyBAQCBzdGF0aWMgaW50IGludGVsX2x2ZHNfY29tcHV0ZV9jb25m
aWcoc3RydWN0IGludGVsX2VuY29kZXIgKmludGVsX2VuY29kZXIsCiAJc3RydWN0IGRybV9kaXNw
bGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmcGlwZV9jb25maWctPmh3LmFkanVzdGVkX21vZGU7
CiAJc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKHBpcGVfY29u
ZmlnLT51YXBpLmNydGMpOwogCXVuc2lnbmVkIGludCBsdmRzX2JwcDsKKwlpbnQgcmV0OwogCiAJ
LyogU2hvdWxkIG5ldmVyIGhhcHBlbiEhICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCA0
ICYmIGludGVsX2NydGMtPnBpcGUgPT0gMCkgewpAQCAtNDI3LDEzICs0MjgsMTUgQEAgc3RhdGlj
IGludCBpbnRlbF9sdmRzX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICppbnRl
bF9lbmNvZGVyLAogCWlmIChhZGp1c3RlZF9tb2RlLT5mbGFncyAmIERSTV9NT0RFX0ZMQUdfREJM
U0NBTikKIAkJcmV0dXJuIC1FSU5WQUw7CiAKLQlpZiAoSEFTX1BDSF9TUExJVChkZXZfcHJpdikp
IHsKKwlpZiAoSEFTX1BDSF9TUExJVChkZXZfcHJpdikpCiAJCXBpcGVfY29uZmlnLT5oYXNfcGNo
X2VuY29kZXIgPSB0cnVlOwogCi0JCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKHBpcGVfY29uZmln
LCBjb25uX3N0YXRlKTsKLQl9IGVsc2UgewotCQlpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcocGlw
ZV9jb25maWcsIGNvbm5fc3RhdGUpOwotCX0KKwlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQorCQly
ZXQgPSBpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOwor
CWVsc2UKKwkJcmV0ID0gaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5f
c3RhdGUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CiAKIAkvKgogCSAqIFhYWDogSXQgd291
bGQgYmUgbmljZSB0byBzdXBwb3J0IGxvd2VyIHJlZnJlc2ggcmF0ZXMgb24gdGhlCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmMKaW5kZXggMjk1YzA3Y2VjMTliLi45
NmU4ODBmY2Y2NjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfcGFuZWwuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVs
LmMKQEAgLTE3Niw5ICsxNzYsOCBAQCBpbnRlbF9wYW5lbF92YnRfZml4ZWRfbW9kZShzdHJ1Y3Qg
aW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiB9CiAKIC8qIGFkanVzdGVkX21vZGUgaGFzIGJl
ZW4gcHJlc2V0IHRvIGJlIHRoZSBwYW5lbCdzIGZpeGVkIG1vZGUgKi8KLXZvaWQKLWludGVsX3Bj
aF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAotCQkJ
Y29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCitpbnQgaW50ZWxf
cGNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJ
CQkgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCiB7CiAJ
Y29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPQogCQkmY3J0Y19z
dGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKQEAgLTE4OCw3ICsxODcsNyBAQCBpbnRlbF9wY2hfcGFu
ZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlpZiAoYWRq
dXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSA9PSBjcnRjX3N0YXRlLT5waXBlX3NyY193ICYmCiAJ
ICAgIGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkgPT0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNf
aCAmJgogCSAgICBjcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0ICE9IElOVEVMX09VVFBVVF9GT1JN
QVRfWUNCQ1I0MjApCi0JCXJldHVybjsKKwkJcmV0dXJuIDA7CiAKIAlzd2l0Y2ggKGNvbm5fc3Rh
dGUtPnNjYWxpbmdfbW9kZSkgewogCWNhc2UgRFJNX01PREVfU0NBTEVfQ0VOVEVSOgpAQCAtMjM5
LDEyICsyMzgsMTQgQEAgaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAKIAlkZWZhdWx0OgogCQlNSVNTSU5HX0NBU0UoY29ubl9zdGF0
ZS0+c2NhbGluZ19tb2RlKTsKLQkJcmV0dXJuOworCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKIAlk
cm1fcmVjdF9pbml0KCZjcnRjX3N0YXRlLT5wY2hfcGZpdC5kc3QsCiAJCSAgICAgIHgsIHksIHdp
ZHRoLCBoZWlnaHQpOwogCWNydGNfc3RhdGUtPnBjaF9wZml0LmVuYWJsZWQgPSB0cnVlOworCisJ
cmV0dXJuIDA7CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC0zODEsOCArMzgyLDggQEAgc3RhdGljIHZv
aWQgaTl4eF9zY2FsZV9hc3BlY3Qoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
CiAJfQogfQogCi12b2lkIGludGVsX2dtY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJCSAgICAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9y
X3N0YXRlICpjb25uX3N0YXRlKQoraW50IGludGVsX2dtY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCSAgICAgY29uc3Qgc3RydWN0IGRybV9j
b25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMg
PSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC00MzEsNyAr
NDMyLDcgQEAgdm9pZCBpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCU1JU1NJTkdfQ0FTRShj
b25uX3N0YXRlLT5zY2FsaW5nX21vZGUpOwotCQlyZXR1cm47CisJCXJldHVybiAtRUlOVkFMOwog
CX0KIAogCS8qIDk2NSsgd2FudHMgZnV6enkgZml0dGluZyAqLwpAQCAtNDUyLDYgKzQ1Myw4IEBA
IHZvaWQgaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlLAogCWNydGNfc3RhdGUtPmdtY2hfcGZpdC5jb250cm9sID0gcGZpdF9jb250cm9s
OwogCWNydGNfc3RhdGUtPmdtY2hfcGZpdC5wZ21fcmF0aW9zID0gcGZpdF9wZ21fcmF0aW9zOwog
CWNydGNfc3RhdGUtPmdtY2hfcGZpdC5sdmRzX2JvcmRlcl9iaXRzID0gYm9yZGVyOworCisJcmV0
dXJuIDA7CiB9CiAKIC8qKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9wYW5lbC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wYW5l
bC5oCmluZGV4IGUyZmExNTQzYTYxZi4uYTVjOTMyMzJlYjZmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5oCkBAIC0yNSwxMCArMjUsMTAgQEAgaW50IGludGVs
X3BhbmVsX2luaXQoc3RydWN0IGludGVsX3BhbmVsICpwYW5lbCwKIHZvaWQgaW50ZWxfcGFuZWxf
ZmluaShzdHJ1Y3QgaW50ZWxfcGFuZWwgKnBhbmVsKTsKIHZvaWQgaW50ZWxfZml4ZWRfcGFuZWxf
bW9kZShjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqZml4ZWRfbW9kZSwKIAkJCSAgICBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSk7Ci12b2lkIGludGVsX3BjaF9w
YW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAoraW50IGlu
dGVsX3BjaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
LAorCQkJICAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKTsK
K2ludCBpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCiAJCQkgICAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25u
X3N0YXRlKTsKLXZvaWQgaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAotCQkJICAgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jf
c3RhdGUgKmNvbm5fc3RhdGUpOwogdm9pZCBpbnRlbF9wYW5lbF9zZXRfYmFja2xpZ2h0X2FjcGko
Y29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUsCiAJCQkJICAgIHUz
MiBsZXZlbCwgdTMyIG1heCk7CiBpbnQgaW50ZWxfcGFuZWxfc2V0dXBfYmFja2xpZ2h0KHN0cnVj
dCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L3Zsdl9kc2kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvdmx2
X2RzaS5jCmluZGV4IDk3ZjcyZDMyMGQ4Ny4uNDg1ZjJiYmVjNTMwIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L3Zsdl9kc2kuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L3Zsdl9kc2kuYwpAQCAtMjc4LDkgKzI3OCwxMSBAQCBzdGF0aWMgaW50IGlu
dGVsX2RzaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJ
aW50ZWxfZml4ZWRfcGFuZWxfbW9kZShmaXhlZF9tb2RlLCBhZGp1c3RlZF9tb2RlKTsKIAogCQlp
ZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQotCQkJaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHBpcGVf
Y29uZmlnLCBjb25uX3N0YXRlKTsKKwkJCXJldCA9IGludGVsX2dtY2hfcGFuZWxfZml0dGluZyhw
aXBlX2NvbmZpZywgY29ubl9zdGF0ZSk7CiAJCWVsc2UKLQkJCWludGVsX3BjaF9wYW5lbF9maXR0
aW5nKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKKwkJCXJldCA9IGludGVsX3BjaF9wYW5lbF9m
aXR0aW5nKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiBy
ZXQ7CiAJfQogCiAJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVfRkxBR19EQkxT
Q0FOKQotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZngK

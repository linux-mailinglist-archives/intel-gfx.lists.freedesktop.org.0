Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 52D1919D05B
	for <lists+intel-gfx@lfdr.de>; Fri,  3 Apr 2020 08:41:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D86346EAF6;
	Fri,  3 Apr 2020 06:41:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 60B4E6EAF6
 for <intel-gfx@lists.freedesktop.org>; Fri,  3 Apr 2020 06:41:23 +0000 (UTC)
IronPort-SDR: +FJHhzUo72cKTNLyNvtwwn3W7H94q3EwRRibLofaFu6vcdCRkuq3ulv5McI/8pSA9xkhist9N2
 mPlpVWenvJCQ==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 02 Apr 2020 23:41:22 -0700
IronPort-SDR: 11qMhBRTuiGdQmsLC7ZDfjdIWDgG5Gj7opo848FSlUnTu6uYs6+YvBH/D1/5dmTIAHAbqQq6yq
 NjgwGQqNz5OA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,338,1580803200"; d="scan'208";a="242732318"
Received: from unknown (HELO slisovsk-Lenovo-ideapad-720S-13IKB.fi.intel.com)
 ([10.237.72.89])
 by fmsmga008.fm.intel.com with ESMTP; 02 Apr 2020 23:41:20 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  3 Apr 2020 09:37:45 +0300
Message-Id: <20200403063745.12529-1-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200326183657.22700-1-stanislav.lisovskiy@intel.com>
References: <20200326183657.22700-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v21 09/10] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KCnYxMDog
LSBGaXggQ0RDTEsgY29ycnVwdGlvbiwgYmVjYXVzZSBvZiBnbG9iYWwgc3RhdGUgZ2V0dGluZyBz
ZXJpYWxpemVkCiAgICAgICB3aXRob3V0IG1vZGVzZXQsIHdoaWNoIGNhdXNlZCBjb3B5aW5nIG9m
IG5vbi1jYWxjdWxhdGVkIGNkY2xrCiAgICAgICB0byBiZSBjb3BpZWQgdG8gZGV2X3ByaXYodGhh
bmtzIHRvIFZpbGxlIGZvciB0aGUgaGludCkuCgp2MTE6IC0gUmVtb3ZlIHVubmVlZGVkIGhlYWRl
cnMgYW5kIHNwYWNlcyhNYXR0aGV3IFJvcGVyKQogICAgIC0gUmVtb3ZlIHVubmVlZGVkIGludGVs
X3Fndl9pbmZvIHFpIHN0cnVjdCBmcm9tIGJ3IGNoZWNrIGFuZCB6ZXJvCiAgICAgICBvdXQgdGhl
IG5lZWRlZCBvbmUoTWF0dGhldyBSb3BlcikKICAgICAtIENoYW5nZWQgUUdWIGVycm9yIG1lc3Nh
Z2UgdG8gaGF2ZSBtb3JlIGNsZWFyIG1lYW5pbmcoTWF0dGhldyBSb3BlcikKICAgICAtIFVzZSBz
dGF0ZS0+bW9kZXNldF9zZXQgaW5zdGVhZCBvZiBhbnlfbXMoTWF0dGhldyBSb3BlcikKICAgICAt
IE1vdmVkIE5VTV9TQUdWX1BPSU5UUyBmcm9tIGk5MTVfcmVnLmggdG8gaTkxNV9kcnYuaCB3aGVy
ZSBpdCdzIHVzZWQKICAgICAtIEtlZXAgdXNpbmcgY3J0Y19zdGF0ZS0+aHcuYWN0aXZlIGluc3Rl
YWQgb2YgLmVuYWJsZShNYXR0aGV3IFJvcGVyKQogICAgIC0gTW92ZWQgdW5yZWxhdGVkIGNoYW5n
ZXMgdG8gb3RoZXIgcGF0Y2godXNpbmcgbGF0ZW5jeSBhcyBwYXJhbWV0ZXIKICAgICAgIGZvciBw
bGFuZSB3bSBjYWxjdWxhdGlvbiwgbW92ZWQgdG8gU0FHViByZWZhY3RvcmluZyBwYXRjaCkKCnYx
MjogLSBGaXggcmViYXNlIGNvbmZsaWN0IHdpdGggb3duIHRlbXBvcmFyeSBTQUdWL1FHViBmaXgu
CiAgICAgLSBSZW1vdmUgdW5uZWNlc3NhcnkgbWFzayBiZWluZyB6ZXJvIGNoZWNrIHdoZW4gdW5t
YXNraW5nCiAgICAgICBxZ3YgcG9pbnRzIGFzIHRoaXMgaXMgY29tcGxldGVseSBsZWdhbChNYXR0
IFJvcGVyKQogICAgIC0gQ2hlY2sgaWYgd2UgYXJlIHNldHRpbmcgdGhlIHNhbWUgbWFzayBhcyBh
bHJlYWR5IGJlaW5nIHNldAogICAgICAgaW4gaGFyZHdhcmUgdG8gcHJldmVudCBlcnJvciBmcm9t
IFBDb2RlLgogICAgIC0gRml4IGVycm9yIG1lc3NhZ2Ugd2hlbiByZXN0cmljdGluZy91bnJlc3Ry
aWN0aW5nIHFndiBwb2ludHMKICAgICAgIHRvICJtYXNrL3VubWFzayIgd2hpY2ggc291bmRzIG1v
cmUgYWNjdXJhdGUoTWF0dCBSb3BlcikKICAgICAtIE1vdmUgc2FndiBzdGF0dXMgc2V0dGluZyB0
byBpY2xfZ2V0X2J3X2luZm8gZnJvbSBhdG9taWMgY2hlY2sKICAgICAgIGFzIHRoaXMgc2hvdWxk
IGJlIGNhbGN1bGF0ZWQgb25seSBvbmNlLihNYXR0IFJvcGVyKQogICAgIC0gRWRpdGVkIGNvbW1l
bnRzIGZvciB0aGUgY2FzZSB3aGVuIHdlIGNhbid0IGVuYWJsZSBTQUdWIGFuZAogICAgICAgdXNl
IG9ubHkgMSBRR1YgcG9pbnQgd2l0aCBoaWdoZXN0IGJhbmR3aWR0aCB0byBiZSBtb3JlCiAgICAg
ICB1bmRlcnN0YW5kYWJsZS4oTWF0dCBSb3BlcikKCnYxMzogLSBNb3ZlZCBtYXhfZGF0YV9yYXRl
IGluIGJ3IGNoZWNrIHRvIGNsb3NlciBzY29wZShWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBDaGFu
Z2VkIGNvbW1lbnQgZm9yIHplcm8gbmV3X21hc2sgaW4gcWd2IHBvaW50cyBtYXNraW5nIGZ1bmN0
aW9uCiAgICAgICB0byBiZXR0ZXIgcmVmbGVjdCByZWFsaXR5KFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIFNpbXBsaWZpZWQgYml0IG1hc2sgb3BlcmF0aW9uIGluIHFndiBwb2ludHMgbWFza2luZyBm
dW5jdGlvbgogICAgICAgKFZpbGxlIFN5cmrDpGzDpCkKICAgICAtIE1vdmVkIGludGVsX3Fndl9w
b2ludHNfbWFzayBjbG9zZXIgdG8gZ2VuMTEgU0FHViBkaXNhYmxpbmcsCiAgICAgICBob3dldmVy
IHRoaXMgc3RpbGwgY2FuJ3QgYmUgdW5kZXIgbW9kZXNldCBjb25kaXRpb24oVmlsbGUgU3lyasOk
bMOkKQogICAgIC0gUGFja2VkIHFndl9wb2ludHNfbWFzayBhcyB1OCBhbmQgbW92ZWQgY2xvc2Vy
IHRvIHBpcGVfc2Fndl9tYXNrCiAgICAgICAoVmlsbGUgU3lyasOkbMOkKQogICAgIC0gRXh0cmFj
dGVkIFBDb2RlIGNoYW5nZXMgdG8gc2VwYXJhdGUgcGF0Y2guKFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIE5vdyB0cmVhdCBudW1fcGxhbmVzIDAgc2FtZSBhcyAxIHRvIGF2b2lkIGNvbmZ1c2lvbiBh
bmQKICAgICAgIHJldHVybmluZyBtYXhfYncgYXMgMCwgd2hpY2ggd291bGQgcHJldmVudCBjaG9v
c2luZyBRR1YKICAgICAgIHBvaW50IGhhdmluZyBtYXggYmFuZHdpZHRoIGluIGNhc2UgaWYgU0FH
ViBpcyBub3QgYWxsb3dlZCwKICAgICAgIGFzIHBlciBCU3BlYyhWaWxsZSBTeXJqw6Rsw6QpCiAg
ICAgLSBEbyB0aGUgYWN0dWFsIHFndl9wb2ludHNfbWFzayBzd2FwIGluIHRoZSBzYW1lIHBsYWNl
IGFzCiAgICAgICBhbGwgb3RoZXIgZ2xvYmFsIHN0YXRlIHBhcnRzIGxpa2UgY2RjbGsgYXJlIHN3
YXBwZWQuCiAgICAgICBJbiB0aGUgbmV4dCBwYXRjaCwgdGhpcyBhbGwgd2lsbCBiZSBtb3ZlZCB0
byBidyBzdGF0ZSBhcwogICAgICAgZ2xvYmFsIHN0YXRlLCBvbmNlIG5ldyBnbG9iYWwgc3RhdGUg
cGF0Y2ggc2VyaWVzIGZyb20gVmlsbGUKICAgICAgIGxhbmRzCgp2MTQ6IC0gTm93IHVzaW5nIGds
b2JhbCBzdGF0ZSB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHFndiBwb2ludHMKICAgICAtIEFkZGVk
IGdsb2JhbCBzdGF0ZSBsb2NraW5nIGJhY2ssIG90aGVyd2lzZSB3ZSBzZWVtIHRvIHJlYWQKICAg
ICAgIGJ3IHN0YXRlIGluIGEgd3Jvbmcgd2F5LgoKdjE1OiAtIEFkZGVkIFRPRE8gY29tbWVudCBm
b3IgbmVhciBhdG9taWMgZ2xvYmFsIHN0YXRlIGxvY2tpbmcgaW4KICAgICAgIGJ3IGNvZGUuCgp2
MTY6IC0gRml4ZWQgaW50ZWxfYXRvbWljX2J3XyogZnVuY3Rpb25zIHRvIGJlIGludGVsX2J3Xyog
YXMgZGlzY3Vzc2VkCiAgICAgICB3aXRoIEphbmkgTmlrdWxhLgogICAgIC0gVGFrZSBid19zdGF0
ZV9jaGFuZ2VkIGZsYWcgaW50byB1c2UuCgp2MTc6IC0gTW92ZWQgcWd2IHBvaW50IHJlbGF0ZWQg
bWFuaXB1bGF0aW9ucyBuZXh0IHRvIFNBR1YgY29kZSwgYXMKICAgICAgIHRob3NlIGFyZSBzZW1h
bnRpY2FsbHkgcmVsYXRlZChWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBSZW5hbWVkIHRob3NlIGlu
dG8gaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlCiAgICAgICAoVmlsbGUgU3ly
asOkbMOkKQoKdjE4OiAtIE1vdmUgc2FndiByZWxhdGVkIGNhbGxzIGZyb20gY29tbWl0IHRhaWwg
aW50bwogICAgICAgaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlKFZpbGxlIFN5
cmrDpGzDpCkKCnYxOTogLSBVc2UgaW50ZWxfYXRvbWljX2dldF9id18ob2xkKXwobmV3KV9zdGF0
ZSB3aGljaCBpcyBpbnRlbmRlZAogICAgICAgZm9yIGNvbW1pdCB0YWlsIHN0YWdlLgoKdjIwOiAt
IFJldHVybiBtYXggYmFuZHdpZHRoIGZvciAwIHBsYW5lcyhWaWxsZSkKICAgICAtIENvbnN0aWZ5
IG9sZF9id19zdGF0ZSBpbiBid19hdG9taWNfY2hlY2soVmlsbGUpCiAgICAgLSBSZW1vdmVkIHNv
bWUgZGVidWdzKFZpbGxlKQogICAgIC0gQWRkZWQgZGF0YSByYXRlIHRvIGRlYnVnIHByaW50IHdo
ZW4gbm8gUUdWIHBvaW50cyhWaWxsZSkKICAgICAtIFJlbW92ZWQgc29tZSBjb21tZW50cyhWaWxs
ZSkKClNpZ25lZC1vZmYtYnk6IFN0YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNr
aXlAaW50ZWwuY29tPgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGludGVsLmNv
bT4KQ2M6IEphbWVzIEF1c211cyA8amFtZXMuYXVzbXVzQGludGVsLmNvbT4KLS0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMgICAgICAgfCAxMzkgKysrKysrKysrKysr
Ky0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmggICAgICAgfCAg
IDkgKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAy
NCArLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAg
MyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAxMDcg
KysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmggICAgICAgICAg
ICAgICB8ICAgMiArCiA2IGZpbGVzIGNoYW5nZWQsIDIyOSBpbnNlcnRpb25zKCspLCA1NSBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2J3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMKaW5kZXggM2My
NzllMGFlMWQ3Li4zOWYzZWQ1MTAxMDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfYncuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2J3LmMKQEAgLTgsNiArOCw5IEBACiAjaW5jbHVkZSAiaW50ZWxfYncuaCIKICNpbmNsdWRl
ICJpbnRlbF9kaXNwbGF5X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfc2lkZWJhbmQuaCIKKyNp
bmNsdWRlICJpbnRlbF9hdG9taWMuaCIKKyNpbmNsdWRlICJpbnRlbF9wbS5oIgorCiAKIC8qIFBh
cmFtZXRlcnMgZm9yIFFjbGsgR2V5c2VydmlsbGUgKFFHVikgKi8KIHN0cnVjdCBpbnRlbF9xZ3Zf
cG9pbnQgewpAQCAtMTEzLDYgKzExNiwyNiBAQCBzdGF0aWMgaW50IGljbF9wY29kZV9yZWFkX3Fn
dl9wb2ludF9pbmZvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4g
MDsKIH0KIAoraW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2ludHNfbWFzaykKK3sKKwlpbnQgcmV0
OworCisJLyogYnNwZWMgc2F5cyB0byBrZWVwIHJldHJ5aW5nIGZvciBhdCBsZWFzdCAxIG1zICov
CisJcmV0ID0gc2tsX3Bjb2RlX3JlcXVlc3QoZGV2X3ByaXYsIElDTF9QQ09ERV9TQUdWX0RFX01F
TV9TU19DT05GSUcsCisJCQkJcG9pbnRzX21hc2ssCisJCQkJR0VOMTFfUENPREVfUE9JTlRTX1JF
U1RSSUNURURfTUFTSywKKwkJCQlHRU4xMV9QQ09ERV9QT0lOVFNfUkVTVFJJQ1RFRCwKKwkJCQkx
KTsKKworCWlmIChyZXQgPCAwKSB7CisJCURSTV9FUlJPUigiRmFpbGVkIHRvIGRpc2FibGUgcWd2
IHBvaW50cyAoJWQpXG4iLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOwor
fQorCiBzdGF0aWMgaW50IGljbF9nZXRfcWd2X3BvaW50cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfcWd2X2luZm8gKnFpKQogewpAQCAt
MjQwLDYgKzI2MywxNiBAQCBzdGF0aWMgaW50IGljbF9nZXRfYndfaW5mbyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGNvbnN0IHN0cnVjdCBpbnRlbAogCQkJYnJlYWs7CiAJfQog
CisJLyoKKwkgKiBJbiBjYXNlIGlmIFNBR1YgaXMgZGlzYWJsZWQgaW4gQklPUywgd2UgYWx3YXlz
IGdldCAxCisJICogU0FHViBwb2ludCwgYnV0IHdlIGNhbid0IHNlbmQgUENvZGUgY29tbWFuZHMg
dG8gcmVzdHJpY3QgaXQKKwkgKiBhcyBpdCB3aWxsIGZhaWwgYW5kIHBvaW50bGVzcyBhbnl3YXku
CisJICovCisJaWYgKHFpLm51bV9wb2ludHMgPT0gMSkKKwkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVz
ID0gSTkxNV9TQUdWX05PVF9DT05UUk9MTEVEOworCWVsc2UKKwkJZGV2X3ByaXYtPnNhZ3Zfc3Rh
dHVzID0gSTkxNV9TQUdWX0VOQUJMRUQ7CisKIAlyZXR1cm4gMDsKIH0KIApAQCAtMjQ4LDYgKzI4
MSwxMSBAQCBzdGF0aWMgdW5zaWduZWQgaW50IGljbF9tYXhfYncoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAogewogCWludCBpOwogCisJLyoKKwkgKiBMZXQncyByZXR1cm4gbWF4
IGJ3IGZvciAwIHBsYW5lcworCSAqLworCW51bV9wbGFuZXMgPSBtYXgoMSwgbnVtX3BsYW5lcyk7
CisKIAlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShkZXZfcHJpdi0+bWF4X2J3KTsgaSsrKSB7
CiAJCWNvbnN0IHN0cnVjdCBpbnRlbF9id19pbmZvICpiaSA9CiAJCQkmZGV2X3ByaXYtPm1heF9i
d1tpXTsKQEAgLTI3NywzNCArMzE1LDYgQEAgdm9pZCBpbnRlbF9id19pbml0X2h3KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaWNsX2dldF9id19pbmZvKGRldl9wcml2LCAm
aWNsX3NhX2luZm8pOwogfQogCi1zdGF0aWMgdW5zaWduZWQgaW50IGludGVsX21heF9kYXRhX3Jh
dGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCQlpbnQgbnVtX3BsYW5l
cykKLXsKLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkgewotCQkvKgotCQkgKiBBbnkg
YncgZ3JvdXAgaGFzIHNhbWUgYW1vdW50IG9mIFFHViBwb2ludHMKLQkJICovCi0JCWNvbnN0IHN0
cnVjdCBpbnRlbF9id19pbmZvICpiaSA9Ci0JCQkmZGV2X3ByaXYtPm1heF9id1swXTsKLQkJdW5z
aWduZWQgaW50IG1pbl9idyA9IFVJTlRfTUFYOwotCQlpbnQgaTsKLQotCQkvKgotCQkgKiBGSVhN
RSB3aXRoIFNBR1YgZGlzYWJsZWQgbWF5YmUgd2UgY2FuIGFzc3VtZQotCQkgKiBwb2ludCAxIHdp
bGwgYWx3YXlzIGJlIHVzZWQ/IFNlZW1zIHRvIG1hdGNoCi0JCSAqIHRoZSBiZWhhdmlvdXIgb2Jz
ZXJ2ZWQgaW4gdGhlIHdpbGQuCi0JCSAqLwotCQlmb3IgKGkgPSAwOyBpIDwgYmktPm51bV9xZ3Zf
cG9pbnRzOyBpKyspIHsKLQkJCXVuc2lnbmVkIGludCBidyA9IGljbF9tYXhfYncoZGV2X3ByaXYs
IG51bV9wbGFuZXMsIGkpOwotCi0JCQltaW5fYncgPSBtaW4oYncsIG1pbl9idyk7Ci0JCX0KLQkJ
cmV0dXJuIG1pbl9idzsKLQl9IGVsc2UgewotCQlyZXR1cm4gVUlOVF9NQVg7Ci0JfQotfQotCiBz
dGF0aWMgdW5zaWduZWQgaW50IGludGVsX2J3X2NydGNfbnVtX2FjdGl2ZV9wbGFuZXMoY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJLyoKQEAgLTQxOCwxMCAr
NDI4LDE1IEBAIGludCBpbnRlbF9id19hdG9taWNfY2hlY2soc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUpCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShzdGF0ZS0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19z
dGF0ZSwgKm9sZF9jcnRjX3N0YXRlOwogCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAqbmV3X2J3X3N0
YXRlID0gTlVMTDsKLQl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlOworCWNv
bnN0IHN0cnVjdCBpbnRlbF9id19zdGF0ZSAqb2xkX2J3X3N0YXRlID0gTlVMTDsKKwl1bnNpZ25l
ZCBpbnQgZGF0YV9yYXRlOwogCXVuc2lnbmVkIGludCBudW1fYWN0aXZlX3BsYW5lczsKIAlzdHJ1
Y3QgaW50ZWxfY3J0YyAqY3J0YzsKIAlpbnQgaSwgcmV0OworCXUzMiBhbGxvd2VkX3BvaW50cyA9
IDA7CisJdW5zaWduZWQgaW50IG1heF9id19wb2ludCA9IDAsIG1heF9idyA9IDA7CisJdW5zaWdu
ZWQgaW50IG51bV9xZ3ZfcG9pbnRzID0gZGV2X3ByaXYtPm1heF9id1swXS5udW1fcWd2X3BvaW50
czsKKwl1MzIgbWFzayA9ICgxIDw8IG51bV9xZ3ZfcG9pbnRzKSAtIDE7CiAKIAkvKiBGSVhNRSBl
YXJsaWVyIGdlbnMgbmVlZCBzb21lIGNoZWNrcyB0b28gKi8KIAlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA8IDExKQpAQCAtNDY4LDE5ICs0ODMsNzMgQEAgaW50IGludGVsX2J3X2F0b21pY19jaGVj
ayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJcmV0dXJuIHJldDsKIAogCWRh
dGFfcmF0ZSA9IGludGVsX2J3X2RhdGFfcmF0ZShkZXZfcHJpdiwgbmV3X2J3X3N0YXRlKTsKKwlk
YXRhX3JhdGUgPSBESVZfUk9VTkRfVVAoZGF0YV9yYXRlLCAxMDAwKTsKKwogCW51bV9hY3RpdmVf
cGxhbmVzID0gaW50ZWxfYndfbnVtX2FjdGl2ZV9wbGFuZXMoZGV2X3ByaXYsIG5ld19id19zdGF0
ZSk7CiAKLQltYXhfZGF0YV9yYXRlID0gaW50ZWxfbWF4X2RhdGFfcmF0ZShkZXZfcHJpdiwgbnVt
X2FjdGl2ZV9wbGFuZXMpOworCWZvciAoaSA9IDA7IGkgPCBudW1fcWd2X3BvaW50czsgaSsrKSB7
CisJCXVuc2lnbmVkIGludCBtYXhfZGF0YV9yYXRlOwogCi0JZGF0YV9yYXRlID0gRElWX1JPVU5E
X1VQKGRhdGFfcmF0ZSwgMTAwMCk7CisJCW1heF9kYXRhX3JhdGUgPSBpY2xfbWF4X2J3KGRldl9w
cml2LCBudW1fYWN0aXZlX3BsYW5lcywgaSk7CisJCS8qCisJCSAqIFdlIG5lZWQgdG8ga25vdyB3
aGljaCBxZ3YgcG9pbnQgZ2l2ZXMgdXMKKwkJICogbWF4aW11bSBiYW5kd2lkdGggaW4gb3JkZXIg
dG8gZGlzYWJsZSBTQUdWCisJCSAqIGlmIHdlIGZpbmQgdGhhdCB3ZSBleGNlZWQgU0FHViBibG9j
ayB0aW1lCisJCSAqIHdpdGggd2F0ZXJtYXJrcy4gQnkgdGhhdCBtb21lbnQgd2UgYWxyZWFkeQor
CQkgKiBoYXZlIHRob3NlLCBhcyBpdCBpcyBjYWxjdWxhdGVkIGVhcmxpZXIgaW4KKwkJICogaW50
ZWxfYXRvbWljX2NoZWNrLAorCQkgKi8KKwkJaWYgKG1heF9kYXRhX3JhdGUgPiBtYXhfYncpIHsK
KwkJCW1heF9id19wb2ludCA9IGk7CisJCQltYXhfYncgPSBtYXhfZGF0YV9yYXRlOworCQl9CisJ
CWlmIChtYXhfZGF0YV9yYXRlID49IGRhdGFfcmF0ZSkKKwkJCWFsbG93ZWRfcG9pbnRzIHw9IEJJ
VChpKTsKKwkJRFJNX0RFQlVHX0tNUygiUUdWIHBvaW50ICVkOiBtYXggYncgJWQgcmVxdWlyZWQg
JWRcbiIsCisJCQkgICAgICBpLCBtYXhfZGF0YV9yYXRlLCBkYXRhX3JhdGUpOworCX0KIAotCWlm
IChkYXRhX3JhdGUgPiBtYXhfZGF0YV9yYXRlKSB7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLAotCQkJICAgICJCYW5kd2lkdGggJXUgTUIvcyBleGNlZWRzIG1heCBhdmFpbGFibGUgJWQg
TUIvcyAoJWQgYWN0aXZlIHBsYW5lcylcbiIsCi0JCQkgICAgZGF0YV9yYXRlLCBtYXhfZGF0YV9y
YXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJLyoKKwkgKiBCU3BlYyBzdGF0ZXMgdGhhdCB3ZSBh
bHdheXMgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGFsbG93ZWQgcG9pbnQKKwkgKiBsZWZ0LCBz
byBpZiB3ZSBjb3VsZG4ndCAtIHNpbXBseSByZWplY3QgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIG9i
dmlvdXMKKwkgKiByZWFzb25zLgorCSAqLworCWlmIChhbGxvd2VkX3BvaW50cyA9PSAwKSB7CisJ
CURSTV9ERUJVR19LTVMoIk5vIFFHViBwb2ludHMgcHJvdmlkZSBzdWZmaWNpZW50IG1lbW9yeSIK
KwkJCSAgICAgICIgYmFuZHdpZHRoICVkIGZvciBkaXNwbGF5IGNvbmZpZ3VyYXRpb24uXG4iLCBk
YXRhX3JhdGUpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKKwkvKgorCSAqIExlYXZlIG9ubHkg
c2luZ2xlIHBvaW50IHdpdGggaGlnaGVzdCBiYW5kd2lkdGgsIGlmCisJICogd2UgY2FuJ3QgZW5h
YmxlIFNBR1YgZHVlIHRvIHRoZSBpbmNyZWFzZWQgbWVtb3J5IGxhdGVuY3kgaXQgbWF5CisJICog
Y2F1c2UuCisJICovCisJaWYgKCFpbnRlbF9jYW5fZW5hYmxlX3NhZ3YobmV3X2J3X3N0YXRlKSkg
eworCQlhbGxvd2VkX3BvaW50cyA9IEJJVChtYXhfYndfcG9pbnQpOworCQlEUk1fREVCVUdfS01T
KCJObyBTQUdWLCB1c2luZyBzaW5nbGUgUUdWIHBvaW50ICVkXG4iLAorCQkJICAgICAgbWF4X2J3
X3BvaW50KTsKKwl9CisJLyoKKwkgKiBXZSBzdG9yZSB0aGUgb25lcyB3aGljaCBuZWVkIHRvIGJl
IG1hc2tlZCBhcyB0aGF0IGlzIHdoYXQgUENvZGUKKwkgKiBhY3R1YWxseSBhY2NlcHRzIGFzIGEg
cGFyYW1ldGVyLgorCSAqLworCW5ld19id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrID0gKH5hbGxv
d2VkX3BvaW50cykgJiBtYXNrOworCisJb2xkX2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9v
bGRfYndfc3RhdGUoc3RhdGUpOworCWlmICghb2xkX2J3X3N0YXRlKQorCQlyZXR1cm4gLUVJTlZB
TDsKKworCS8qCisJICogSWYgdGhlIGFjdHVhbCBtYXNrIGhhZCBjaGFuZ2VkIHdlIG5lZWQgdG8g
bWFrZSBzdXJlIHRoYXQKKwkgKiB0aGUgY29tbWl0cyBhcmUgc2VyaWFsaXplZChpbiBjYXNlIHRo
aXMgaXMgYSBub21vZGVzZXQsIG5vbmJsb2NraW5nKQorCSAqLworCWlmIChuZXdfYndfc3RhdGUt
PnFndl9wb2ludHNfbWFzayAhPSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzaykgeworCQly
ZXQgPSBpbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZSgmbmV3X2J3X3N0YXRlLT5i
YXNlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCiAJcmV0dXJuIDA7CiB9CiAK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaAppbmRleCBkNmRmOTEwNTgyMjMu
LmVjYzA4NmUxZjMwZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9idy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaApA
QCAtMjQsNiArMjQsMTMgQEAgc3RydWN0IGludGVsX2J3X3N0YXRlIHsKIAkgKi8KIAl1OCBwaXBl
X3NhZ3ZfcmVqZWN0OwogCisJLyoKKwkgKiBDdXJyZW50IFFHViBwb2ludHMgbWFzaywgd2hpY2gg
cmVzdHJpY3RzCisJICogc29tZSBwYXJ0aWN1bGFyIFNBR1Ygc3RhdGVzLCBub3QgdG8gY29uZnVz
ZQorCSAqIHdpdGggcGlwZV9zYWd2X21hc2suCisJICovCisJdTggcWd2X3BvaW50c19tYXNrOwor
CiAJdW5zaWduZWQgaW50IGRhdGFfcmF0ZVtJOTE1X01BWF9QSVBFU107CiAJdTggbnVtX2FjdGl2
ZV9wbGFuZXNbSTkxNV9NQVhfUElQRVNdOwogfTsKQEAgLTQ0LDUgKzUxLDcgQEAgaW50IGludGVs
X2J3X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIGludCBpbnRlbF9i
d19hdG9taWNfY2hlY2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOwogdm9pZCBp
bnRlbF9id19jcnRjX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlLAogCQkJ
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CitpbnQgaWNsX3Bj
b2RlX3Jlc3RyaWN0X3Fndl9wb2ludHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LAorCQkJCSAgdTMyIHBvaW50c19tYXNrKTsKIAogI2VuZGlmIC8qIF9fSU5URUxfQldfSF9fICov
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IGE2
MDExNzdiMjFhYi4uNmEyOWQxNjczZGU0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTU1NDAsMjIgKzE1NTQwLDEyIEBAIHN0YXRpYyB2b2lk
IGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKIAogCWlmIChzdGF0ZS0+bW9kZXNldCkgewogCisJCWludGVsX3NhZ3ZfcHJlX3BsYW5lX3Vw
ZGF0ZShzdGF0ZSk7CisKIAkJZHJtX2F0b21pY19oZWxwZXJfdXBkYXRlX2xlZ2FjeV9tb2Rlc2V0
X3N0YXRlKGRldiwgJnN0YXRlLT5iYXNlKTsKIAogCQlpbnRlbF9zZXRfY2RjbGtfcHJlX3BsYW5l
X3VwZGF0ZShzdGF0ZSk7CiAKLQkJLyoKLQkJICogU0tMIHdvcmthcm91bmQ6IGJzcGVjIHJlY29t
bWVuZHMgd2UgZGlzYWJsZSB0aGUgU0FHViB3aGVuIHdlCi0JCSAqIGhhdmUgbW9yZSB0aGVuIG9u
ZSBwaXBlIGVuYWJsZWQKLQkJICovCi0JCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEpIHsK
LQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9id19zdGF0ZSAqYndfc3RhdGUgPQotCQkJCWludGVsX2F0
b21pY19nZXRfbmV3X2J3X3N0YXRlKHN0YXRlKTsKLQotCQkJaWYgKGJ3X3N0YXRlICYmICFpbnRl
bF9jYW5fZW5hYmxlX3NhZ3YoYndfc3RhdGUpKQotCQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZf
cHJpdik7Ci0JCX0KLQogCQlpbnRlbF9tb2Rlc2V0X3ZlcmlmeV9kaXNhYmxlZChkZXZfcHJpdiwg
c3RhdGUpOwogCX0KIApAQCAtMTU2NTEsMTYgKzE1NjQxLDEwIEBAIHN0YXRpYyB2b2lkIGludGVs
X2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlp
bnRlbF9jaGVja19jcHVfZmlmb191bmRlcnJ1bnMoZGV2X3ByaXYpOwogCWludGVsX2NoZWNrX3Bj
aF9maWZvX3VuZGVycnVucyhkZXZfcHJpdik7CiAKLQlpZiAoc3RhdGUtPm1vZGVzZXQpCisJaWYg
KHN0YXRlLT5tb2Rlc2V0KSB7CiAJCWludGVsX3ZlcmlmeV9wbGFuZXMoc3RhdGUpOwogCi0JaWYg
KElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkgewotCQlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3
X3N0YXRlOwotCi0JCWJ3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9uZXdfYndfc3RhdGUoc3Rh
dGUpOwotCi0JCWlmIChid19zdGF0ZSAmJiBzdGF0ZS0+bW9kZXNldCAmJiBpbnRlbF9jYW5fZW5h
YmxlX3NhZ3YoYndfc3RhdGUpKQotCQkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3ByaXYpOworCQlp
bnRlbF9zYWd2X3Bvc3RfcGxhbmVfdXBkYXRlKHN0YXRlKTsKIAl9CiAKIAlkcm1fYXRvbWljX2hl
bHBlcl9jb21taXRfaHdfZG9uZSgmc3RhdGUtPmJhc2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCA1MWZhNWE3NDZhNWYu
Ljg2NTUwMzhiYWZlNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAgLTY4OSw2ICs2ODksOSBAQCBlbnVtIGNvbG9yX3BsYW5l
IHsKIAlDT0xPUl9QTEFORV9VVgogfTsKIAorLyogQlNwZWMgcHJlY2lzZWx5IGRlZmluZXMgdGhp
cyAqLworI2RlZmluZSBOVU1fU0FHVl9QT0lOVFMgOAorCiBzdHJ1Y3Qgc2tsX3BpcGVfd20gewog
CXN0cnVjdCBza2xfcGxhbmVfd20gcGxhbmVzW0k5MTVfTUFYX1BMQU5FU107CiAJYm9vbCBjYW5f
c2FndjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4IDk5NGM2ZGMwZmE0Zi4uNjUxN2IzMmYx
YjIzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAgLTM3NTgsNiArMzc1OCwxMTMgQEAgaW50
ZWxfZGlzYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlyZXR1
cm4gMDsKIH0KIAordm9pZCBpbnRlbF9zYWd2X3ByZV9wbGFuZV91cGRhdGUoc3RydWN0IGludGVs
X2F0b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOworCWludCByZXQ7CisJc3RydWN0IGludGVs
X2J3X3N0YXRlICpuZXdfYndfc3RhdGUgPSBOVUxMOworCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAq
b2xkX2J3X3N0YXRlID0gTlVMTDsKKwl1MzIgbmV3X21hc2sgPSAwOworCisJLyoKKwkgKiBKdXN0
IHJldHVybiBpZiB3ZSBjYW4ndCBjb250cm9sIFNBR1Ygb3IgZG9uJ3QgaGF2ZSBpdC4KKwkgKiBU
aGlzIGlzIGRpZmZlcmVudCBmcm9tIHNpdHVhdGlvbiB3aGVuIHdlIGhhdmUgU0FHViBidXQganVz
dCBjYW4ndAorCSAqIGFmZm9yZCBpdCBkdWUgdG8gREJ1ZiBsaW1pdGF0aW9uIC0gaW4gY2FzZSBp
ZiBTQUdWIGlzIGNvbXBsZXRlbHkKKwkgKiBkaXNhYmxlZCBpbiBhIEJJT1MsIHdlIGFyZSBub3Qg
ZXZlbiBhbGxvd2VkIHRvIHNlbmQgYSBQQ29kZSByZXF1ZXN0LAorCSAqIGFzIGl0IHdpbGwgdGhy
b3cgYW4gZXJyb3IuIFNvIGhhdmUgdG8gY2hlY2sgaXQgaGVyZS4KKwkgKi8KKwlpZiAoIWludGVs
X2hhc19zYWd2KGRldl9wcml2KSkKKwkJcmV0dXJuOworCisJbmV3X2J3X3N0YXRlID0gaW50ZWxf
YXRvbWljX2dldF9uZXdfYndfc3RhdGUoc3RhdGUpOworCWlmICghbmV3X2J3X3N0YXRlKQorCQly
ZXR1cm47CisKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExICYmICFpbnRlbF9jYW5fZW5h
YmxlX3NhZ3YobmV3X2J3X3N0YXRlKSkgeworCQlpbnRlbF9kaXNhYmxlX3NhZ3YoZGV2X3ByaXYp
OworCQlyZXR1cm47CisJfQorCisJb2xkX2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9vbGRf
Yndfc3RhdGUoc3RhdGUpOworCWlmICghb2xkX2J3X3N0YXRlKQorCQlyZXR1cm47CisKKwkvKgor
CSAqIE5vdGhpbmcgdG8gbWFzaworCSAqLworCWlmIChuZXdfYndfc3RhdGUtPnFndl9wb2ludHNf
bWFzayA9PSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzaykKKwkJcmV0dXJuOworCisJbmV3
X21hc2sgPSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzayB8IG5ld19id19zdGF0ZS0+cWd2
X3BvaW50c19tYXNrOworCisJLyoKKwkgKiBJZiBuZXcgbWFzayBpcyB6ZXJvIC0gbWVhbnMgdGhl
cmUgaXMgbm90aGluZyB0byBtYXNrLAorCSAqIHdlIGNhbiBvbmx5IHVubWFzaywgd2hpY2ggc2hv
dWxkIGJlIGRvbmUgaW4gdW5tYXNrLgorCSAqLworCWlmICghbmV3X21hc2spCisJCXJldHVybjsK
KworCS8qCisJICogUmVzdHJpY3QgcmVxdWlyZWQgcWd2IHBvaW50cyBiZWZvcmUgdXBkYXRpbmcg
dGhlIGNvbmZpZ3VyYXRpb24uCisJICogQWNjb3JkaW5nIHRvIEJTcGVjIHdlIGNhbid0IG1hc2sg
YW5kIHVubWFzayBxZ3YgcG9pbnRzIGF0IHRoZSBzYW1lCisJICogdGltZS4gQWxzbyBtYXNraW5n
IHNob3VsZCBiZSBkb25lIGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbgorCSAqIGFu
ZCB1bm1hc2tpbmcgYWZ0ZXJ3YXJkcy4KKwkgKi8KKwlyZXQgPSBpY2xfcGNvZGVfcmVzdHJpY3Rf
cWd2X3BvaW50cyhkZXZfcHJpdiwgbmV3X21hc2spOworCWlmIChyZXQgPCAwKQorCQlkcm1fZXJy
KCZkZXZfcHJpdi0+ZHJtLCAiQ291bGQgbm90IG1hc2sgcmVxdWlyZWQgcWd2IHBvaW50cyglZClc
biIsIHJldCk7Cit9CisKK3ZvaWQgaW50ZWxfc2Fndl9wb3N0X3BsYW5lX3VwZGF0ZShzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRldik7CisJaW50IHJldDsKKwlzdHJ1Y3Qg
aW50ZWxfYndfc3RhdGUgKm5ld19id19zdGF0ZSA9IE5VTEw7CisJc3RydWN0IGludGVsX2J3X3N0
YXRlICpvbGRfYndfc3RhdGUgPSBOVUxMOworCXUzMiBuZXdfbWFzayA9IDA7CisKKwkvKgorCSAq
IEp1c3QgcmV0dXJuIGlmIHdlIGNhbid0IGNvbnRyb2wgU0FHViBvciBkb24ndCBoYXZlIGl0Lgor
CSAqIFRoaXMgaXMgZGlmZmVyZW50IGZyb20gc2l0dWF0aW9uIHdoZW4gd2UgaGF2ZSBTQUdWIGJ1
dCBqdXN0IGNhbid0CisJICogYWZmb3JkIGl0IGR1ZSB0byBEQnVmIGxpbWl0YXRpb24gLSBpbiBj
YXNlIGlmIFNBR1YgaXMgY29tcGxldGVseQorCSAqIGRpc2FibGVkIGluIGEgQklPUywgd2UgYXJl
IG5vdCBldmVuIGFsbG93ZWQgdG8gc2VuZCBhIFBDb2RlIHJlcXVlc3QsCisJICogYXMgaXQgd2ls
bCB0aHJvdyBhbiBlcnJvci4gU28gaGF2ZSB0byBjaGVjayBpdCBoZXJlLgorCSAqLworCWlmICgh
aW50ZWxfaGFzX3NhZ3YoZGV2X3ByaXYpKQorCQlyZXR1cm47CisKKwluZXdfYndfc3RhdGUgPSBp
bnRlbF9hdG9taWNfZ2V0X25ld19id19zdGF0ZShzdGF0ZSk7CisJaWYgKCFuZXdfYndfc3RhdGUp
CisJCXJldHVybjsKKworCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEgJiYgaW50ZWxfY2Fu
X2VuYWJsZV9zYWd2KG5ld19id19zdGF0ZSkpIHsKKwkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3By
aXYpOworCQlyZXR1cm47CisJfQorCisJb2xkX2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9v
bGRfYndfc3RhdGUoc3RhdGUpOworCWlmICghb2xkX2J3X3N0YXRlKQorCQlyZXR1cm47CisKKwkv
KgorCSAqIE5vdGhpbmcgdG8gdW5tYXNrCisJICovCisJaWYgKG5ld19id19zdGF0ZS0+cWd2X3Bv
aW50c19tYXNrID09IG9sZF9id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrKQorCQlyZXR1cm47CisK
KwluZXdfbWFzayA9IG5ld19id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrOworCisJLyoKKwkgKiBB
bGxvdyByZXF1aXJlZCBxZ3YgcG9pbnRzIGFmdGVyIHVwZGF0aW5nIHRoZSBjb25maWd1cmF0aW9u
LgorCSAqIEFjY29yZGluZyB0byBCU3BlYyB3ZSBjYW4ndCBtYXNrIGFuZCB1bm1hc2sgcWd2IHBv
aW50cyBhdCB0aGUgc2FtZQorCSAqIHRpbWUuIEFsc28gbWFza2luZyBzaG91bGQgYmUgZG9uZSBi
ZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24KKwkgKiBhbmQgdW5tYXNraW5nIGFmdGVy
d2FyZHMuCisJICovCisJcmV0ID0gaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fndl9wb2ludHMoZGV2X3By
aXYsIG5ld19tYXNrKTsKKwlpZiAocmV0IDwgMCkKKwkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwg
IkNvdWxkIG5vdCB1bm1hc2sgcmVxdWlyZWQgcWd2IHBvaW50cyglZClcbiIsIHJldCk7Cit9CisK
IHN0YXRpYyBib29sIGljbF9jcnRjX2Nhbl9lbmFibGVfc2Fndihjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNydGNfc3RhdGUtPnVhcGkuY3J0Yy0+ZGV2KTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9wbS5oCmluZGV4IGU0MTYzN2IzYTA1ZC4uZWJlYjI4ODc5ZDc4IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3BtLmgKQEAgLTQyLDYgKzQyLDggQEAgdm9pZCBza2xfcGlwZV93bV9nZXRfaHdfc3Rh
dGUoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJCQkgICAgICBzdHJ1Y3Qgc2tsX3BpcGVfd20g
Km91dCk7CiB2b2lkIGc0eF93bV9zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpOwogdm9pZCB2bHZfd21fc2FuaXRpemUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KTsKK3ZvaWQgaW50ZWxfc2Fndl9wcmVfcGxhbmVfdXBkYXRlKHN0cnVjdCBpbnRlbF9h
dG9taWNfc3RhdGUgKnN0YXRlKTsKK3ZvaWQgaW50ZWxfc2Fndl9wb3N0X3BsYW5lX3VwZGF0ZShz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7CiBib29sIGludGVsX2hhc19zYWd2KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBib29sIGludGVsX2Nhbl9lbmFibGVf
c2Fndihjb25zdCBzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlKTsKIGludCBpbnRlbF9l
bmFibGVfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotLSAKMi4yNC4x
LjQ4NS5nYWQwNWEzZDhlNQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0
b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50
ZWwtZ2Z4Cg==

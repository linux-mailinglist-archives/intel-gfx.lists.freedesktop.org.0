Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E6FE275922
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Jul 2019 22:51:23 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DACE56E82E;
	Thu, 25 Jul 2019 20:51:21 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8EBEB6E82E
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 20:51:20 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 25 Jul 2019 13:51:20 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,308,1559545200"; d="scan'208";a="170421586"
Received: from irvmail001.ir.intel.com ([163.33.26.43])
 by fmsmga008.fm.intel.com with ESMTP; 25 Jul 2019 13:51:19 -0700
Received: from mwajdecz-MOBL1.ger.corp.intel.com
 (mwajdecz-mobl1.ger.corp.intel.com [10.249.128.168])
 by irvmail001.ir.intel.com (8.14.3/8.13.6/MailSET/Hub) with ESMTP id
 x6PKpFOe004678; Thu, 25 Jul 2019 21:51:18 +0100
From: Michal Wajdeczko <michal.wajdeczko@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 25 Jul 2019 20:51:06 +0000
Message-Id: <20190725205106.36148-1-michal.wajdeczko@intel.com>
X-Mailer: git-send-email 2.21.0.windows.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/uc: Don't sanitize guc_log_level
 modparam
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgYXJlIGFscmVhZHkgc3RvcmluZyBydW50aW1lIHZhbHVlIG9mIGxvZyBsZXZlbCBpbiBwcml2
YXRlCmZpZWxkLCBzbyB0aGVyZSBpcyBubyBuZWVkIHRvIG1vZGlmeSBtb2RwYXJhbS4KClNpZ25l
ZC1vZmYtYnk6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hhbC53YWpkZWN6a29AaW50ZWwuY29tPgpD
YzogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVsLmNv
bT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfbG9nLmMgfCAyOSAr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jICAgICAg
fCA1MCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAyIGZpbGVzIGNoYW5nZWQsIDI4IGluc2VydGlv
bnMoKyksIDUxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3VjL2ludGVsX2d1Y19sb2cuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVs
X2d1Y19sb2cuYwppbmRleCA3N2ZkYTFlODVkM2IuLjM0NjBkZWNhMTJjOCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2xvZy5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19sb2cuYwpAQCAtNDQzLDYgKzQ0MywyOSBAQCBz
dGF0aWMgdm9pZCBndWNfbG9nX2NhcHR1cmVfbG9ncyhzdHJ1Y3QgaW50ZWxfZ3VjX2xvZyAqbG9n
KQogCQlndWNfYWN0aW9uX2ZsdXNoX2xvZ19jb21wbGV0ZShndWMpOwogfQogCitzdGF0aWMgdTMy
IF9fZ2V0X2RlZmF1bHRfbG9nX2xldmVsKHN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cpCit7CisJ
LyogQSBuZWdhdGl2ZSB2YWx1ZSBtZWFucyAidXNlIHBsYXRmb3JtL2NvbmZpZyBkZWZhdWx0IiAq
LworCWlmIChpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsIDwgMCkgeworCQlyZXR1cm4gKElT
X0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHKSB8fAorCQkJSVNfRU5BQkxFRChDT05GSUdf
RFJNX0k5MTVfREVCVUdfR0VNKSkgPworCQkJR1VDX0xPR19MRVZFTF9NQVggOiBHVUNfTE9HX0xF
VkVMX05PTl9WRVJCT1NFOworCX0KKworCWlmIChpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVs
ID4gR1VDX0xPR19MRVZFTF9NQVgpIHsKKwkJRFJNX1dBUk4oIkluY29tcGF0aWJsZSBvcHRpb24g
ZGV0ZWN0ZWQ6ICVzPSVkLCAlcyFcbiIsCisJCQkgImd1Y19sb2dfbGV2ZWwiLCBpOTE1X21vZHBh
cmFtcy5ndWNfbG9nX2xldmVsLAorCQkJICJ2ZXJib3NpdHkgdG9vIGhpZ2giKTsKKwkJcmV0dXJu
IChJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVRykgfHwKKwkJCUlTX0VOQUJMRUQoQ09O
RklHX0RSTV9JOTE1X0RFQlVHX0dFTSkpID8KKwkJCUdVQ19MT0dfTEVWRUxfTUFYIDogR1VDX0xP
R19MRVZFTF9ESVNBQkxFRDsKKwl9CisKKwlHRU1fQlVHX09OKGk5MTVfbW9kcGFyYW1zLmd1Y19s
b2dfbGV2ZWwgPCBHVUNfTE9HX0xFVkVMX0RJU0FCTEVEKTsKKwlHRU1fQlVHX09OKGk5MTVfbW9k
cGFyYW1zLmd1Y19sb2dfbGV2ZWwgPiBHVUNfTE9HX0xFVkVMX01BWCk7CisJcmV0dXJuIGk5MTVf
bW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWw7Cit9CisKIGludCBpbnRlbF9ndWNfbG9nX2NyZWF0ZShz
dHJ1Y3QgaW50ZWxfZ3VjX2xvZyAqbG9nKQogewogCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGxv
Z190b19ndWMobG9nKTsKQEAgLTQ4Miw3ICs1MDUsMTEgQEAgaW50IGludGVsX2d1Y19sb2dfY3Jl
YXRlKHN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cpCiAKIAlsb2ctPnZtYSA9IHZtYTsKIAotCWxv
Zy0+bGV2ZWwgPSBpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsOworCWxvZy0+bGV2ZWwgPSBf
X2dldF9kZWZhdWx0X2xvZ19sZXZlbChsb2cpOworCURSTV9ERUJVR19EUklWRVIoImd1Y19sb2df
bGV2ZWw9JWQgKCVzLCB2ZXJib3NlOiVzLCB2ZXJib3NpdHk6JWQpXG4iLAorCQkJIGxvZy0+bGV2
ZWwsIGVuYWJsZWRkaXNhYmxlZChsb2ctPmxldmVsKSwKKwkJCSB5ZXNubyhHVUNfTE9HX0xFVkVM
X0lTX1ZFUkJPU0UobG9nLT5sZXZlbCkpLAorCQkJIEdVQ19MT0dfTEVWRUxfVE9fVkVSQk9TSVRZ
KGxvZy0+bGV2ZWwpKTsKIAogCXJldHVybiAwOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfdWMuYwppbmRleCBiMTgxNWFiZWNmMzAuLjRhY2U0N2MwOTc4ZiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC91Yy9pbnRlbF91Yy5jCkBAIC03NCwyMyArNzQsNiBAQCBzdGF0aWMgaW50IF9fZ2V0
X3BsYXRmb3JtX2VuYWJsZV9ndWMoc3RydWN0IGludGVsX3VjICp1YykKIAlyZXR1cm4gZW5hYmxl
X2d1YzsKIH0KIAotc3RhdGljIGludCBfX2dldF9kZWZhdWx0X2d1Y19sb2dfbGV2ZWwoc3RydWN0
IGludGVsX3VjICp1YykKLXsKLQlpbnQgZ3VjX2xvZ19sZXZlbDsKLQotCWlmICghaW50ZWxfdWNf
Zndfc3VwcG9ydGVkKCZ1Yy0+Z3VjLmZ3KSB8fCAhaW50ZWxfdWNfaXNfdXNpbmdfZ3VjKHVjKSkK
LQkJZ3VjX2xvZ19sZXZlbCA9IEdVQ19MT0dfTEVWRUxfRElTQUJMRUQ7Ci0JZWxzZSBpZiAoSVNf
RU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUcpIHx8Ci0JCSBJU19FTkFCTEVEKENPTkZJR19E
Uk1fSTkxNV9ERUJVR19HRU0pKQotCQlndWNfbG9nX2xldmVsID0gR1VDX0xPR19MRVZFTF9NQVg7
Ci0JZWxzZQotCQlndWNfbG9nX2xldmVsID0gR1VDX0xPR19MRVZFTF9OT05fVkVSQk9TRTsKLQot
CS8qIEFueSBwbGF0Zm9ybSBzcGVjaWZpYyBmaW5lLXR1bmluZyBjYW4gYmUgZG9uZSBoZXJlICov
Ci0KLQlyZXR1cm4gZ3VjX2xvZ19sZXZlbDsKLX0KLQogLyoqCiAgKiBzYW5pdGl6ZV9vcHRpb25z
X2Vhcmx5IC0gc2FuaXRpemUgdUMgcmVsYXRlZCBtb2RwYXJhbSBvcHRpb25zCiAgKiBAdWM6IHRo
ZSBpbnRlbF91YyBzdHJ1Y3R1cmUKQEAgLTEwMCwxMyArODMsNiBAQCBzdGF0aWMgaW50IF9fZ2V0
X2RlZmF1bHRfZ3VjX2xvZ19sZXZlbChzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogICogbW9kcGFyYW0g
dmFyaWVzIGJldHdlZW4gcGxhdGZvcm1zIGFuZCBpdCBpcyBoYXJkY29kZWQgaW4gZHJpdmVyIGNv
ZGUuCiAgKiBBbnkgb3RoZXIgbW9kcGFyYW0gdmFsdWUgaXMgb25seSBtb25pdG9yZWQgYWdhaW5z
dCBhdmFpbGFiaWxpdHkgb2YgdGhlCiAgKiByZWxhdGVkIGhhcmR3YXJlIG9yIGZpcm13YXJlIGRl
ZmluaXRpb25zLgotICoKLSAqIEluIGNhc2Ugb2YgImd1Y19sb2dfbGV2ZWwiIG9wdGlvbiB0aGlz
IGZ1bmN0aW9uIHdpbGwgYXR0ZW1wdCB0byBtb2RpZnkKLSAqIGl0IG9ubHkgaWYgaXQgd2FzIGlu
aXRpYWxseSBzZXQgdG8gImF1dG8oLTEpIiBvciBpZiBpbml0aWFsIHZhbHVlIHdhcwotICogImVu
YWJsZSgxLi40KSIgb24gcGxhdGZvcm1zIHdpdGhvdXQgdGhlIEd1Qy4gRGVmYXVsdCB2YWx1ZSBm
b3IgdGhpcwotICogbW9kcGFyYW0gdmFyaWVzIGJldHdlZW4gcGxhdGZvcm1zIGFuZCBpcyB1c3Vh
bGx5IHNldCB0byAiZGlzYWJsZSgwKSIKLSAqIHVubGVzcyBHdUMgaXMgZW5hYmxlZCBvbiBnaXZl
biBwbGF0Zm9ybSBhbmQgdGhlIGRyaXZlciBpcyBjb21waWxlZCB3aXRoCi0gKiBkZWJ1ZyBjb25m
aWcgd2hlbiB0aGlzIG1vZHBhcmFtIHdpbGwgZGVmYXVsdCB0byAiZW5hYmxlKDEuLjQpIi4KICAq
Lwogc3RhdGljIHZvaWQgc2FuaXRpemVfb3B0aW9uc19lYXJseShzdHJ1Y3QgaW50ZWxfdWMgKnVj
KQogewpAQCAtMTQ5LDM0ICsxMjUsOCBAQCBzdGF0aWMgdm9pZCBzYW5pdGl6ZV9vcHRpb25zX2Vh
cmx5KHN0cnVjdCBpbnRlbF91YyAqdWMpCiAJCWk5MTVfbW9kcGFyYW1zLmVuYWJsZV9ndWMgJj0g
fkVOQUJMRV9HVUNfU1VCTUlTU0lPTjsKIAl9CiAKLQkvKiBBIG5lZ2F0aXZlIHZhbHVlIG1lYW5z
ICJ1c2UgcGxhdGZvcm0vY29uZmlnIGRlZmF1bHQiICovCi0JaWYgKGk5MTVfbW9kcGFyYW1zLmd1
Y19sb2dfbGV2ZWwgPCAwKQotCQlpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsID0KLQkJCV9f
Z2V0X2RlZmF1bHRfZ3VjX2xvZ19sZXZlbCh1Yyk7Ci0KLQlpZiAoaTkxNV9tb2RwYXJhbXMuZ3Vj
X2xvZ19sZXZlbCA+IDAgJiYgIWludGVsX3VjX2lzX3VzaW5nX2d1Yyh1YykpIHsKLQkJRFJNX1dB
Uk4oIkluY29tcGF0aWJsZSBvcHRpb24gZGV0ZWN0ZWQ6IGd1Y19sb2dfbGV2ZWw9JWQsICIKLQkJ
CSAiYnV0IEd1QyBpcyBub3QgZW5hYmxlZCFcbiIsCi0JCQkgaTkxNV9tb2RwYXJhbXMuZ3VjX2xv
Z19sZXZlbCk7Ci0JCWk5MTVfbW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWwgPSAwOwotCX0KLQotCWlm
IChpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsID4gR1VDX0xPR19MRVZFTF9NQVgpIHsKLQkJ
RFJNX1dBUk4oIkluY29tcGF0aWJsZSBvcHRpb24gZGV0ZWN0ZWQ6ICVzPSVkLCAlcyFcbiIsCi0J
CQkgImd1Y19sb2dfbGV2ZWwiLCBpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsLAotCQkJICJ2
ZXJib3NpdHkgdG9vIGhpZ2giKTsKLQkJaTkxNV9tb2RwYXJhbXMuZ3VjX2xvZ19sZXZlbCA9IEdV
Q19MT0dfTEVWRUxfTUFYOwotCX0KLQotCURSTV9ERUJVR19EUklWRVIoImd1Y19sb2dfbGV2ZWw9
JWQgKGVuYWJsZWQ6JXMsIHZlcmJvc2U6JXMsIHZlcmJvc2l0eTolZClcbiIsCi0JCQkgaTkxNV9t
b2RwYXJhbXMuZ3VjX2xvZ19sZXZlbCwKLQkJCSB5ZXNubyhpOTE1X21vZHBhcmFtcy5ndWNfbG9n
X2xldmVsKSwKLQkJCSB5ZXNubyhHVUNfTE9HX0xFVkVMX0lTX1ZFUkJPU0UoaTkxNV9tb2RwYXJh
bXMuZ3VjX2xvZ19sZXZlbCkpLAotCQkJIEdVQ19MT0dfTEVWRUxfVE9fVkVSQk9TSVRZKGk5MTVf
bW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWwpKTsKLQogCS8qIE1ha2Ugc3VyZSB0aGF0IHNhbml0aXph
dGlvbiB3YXMgZG9uZSAqLwogCUdFTV9CVUdfT04oaTkxNV9tb2RwYXJhbXMuZW5hYmxlX2d1YyA8
IDApOwotCUdFTV9CVUdfT04oaTkxNV9tb2RwYXJhbXMuZ3VjX2xvZ19sZXZlbCA8IDApOwogfQog
CiB2b2lkIGludGVsX3VjX2luaXRfZWFybHkoc3RydWN0IGludGVsX3VjICp1YykKLS0gCjIuMTku
MgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwt
Z2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8v
bGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

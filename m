Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 36B62E5F71
	for <lists+intel-gfx@lfdr.de>; Sat, 26 Oct 2019 22:20:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 27D8689F4F;
	Sat, 26 Oct 2019 20:20:38 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3811589F4F
 for <intel-gfx@lists.freedesktop.org>; Sat, 26 Oct 2019 20:20:36 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18977462-1500050 
 for <intel-gfx@lists.freedesktop.org>; Sat, 26 Oct 2019 21:20:33 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 26 Oct 2019 21:20:32 +0100
Message-Id: <20191026202032.4371-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc1
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915: Split memory_region initialisation into
 its own file
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UHVsbCB0aGUgbWVtb3J5IHJlZ2lvbiBib29ra2VlcGluZyBpbnRvIGl0cyBmaWxlLiBMZXQncyBz
dGFydCBjbGVhbiBhbmQKc2VlIGhvdyBsb25nIGl0IGxhc3RzIQoKU2lnbmVkLW9mZi1ieTogQ2hy
aXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBNYXR0aGV3IEF1bGQgPG1h
dHRoZXcuYXVsZEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNYXR0aGV3IEF1bGQgPG1hdHRoZXcu
YXVsZEBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAg
ICAgICAgICAgIHwgMTUgKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAg
ICAgICAgICAgICB8ICAzIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jICAg
ICAgICAgICB8IDYzIC0tLS0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX21lbW9yeV9yZWdpb24uYyAgICB8IDU2ICsrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9tZW1vcnlfcmVnaW9uLmggICAgfCAgMyArCiAuLi4vZ3B1L2RybS9p
OTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyAgfCAgOSArKy0KIDYgZmlsZXMgY2hhbmdl
ZCwgNzUgaW5zZXJ0aW9ucygrKSwgNzQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmMKaW5kZXggMzU1NTI2YTM1ZDU4Li4yMTI3M2I1MTZkYmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
cnYuYwpAQCAtNzYsNiArNzYsNyBAQAogI2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKICNpbmNsdWRl
ICJpOTE1X3ZncHUuaCIKICNpbmNsdWRlICJpbnRlbF9jc3IuaCIKKyNpbmNsdWRlICJpbnRlbF9t
ZW1vcnlfcmVnaW9uLmgiCiAjaW5jbHVkZSAiaW50ZWxfcG0uaCIKIAogc3RhdGljIHN0cnVjdCBk
cm1fZHJpdmVyIGRyaXZlcjsKQEAgLTExNzIsMTIgKzExNzMsMTYgQEAgc3RhdGljIGludCBpOTE1
X2RyaXZlcl9od19wcm9iZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJaWYg
KHJldCkKIAkJZ290byBlcnJfZ2d0dDsKIAorCXJldCA9IGludGVsX21lbW9yeV9yZWdpb25zX2h3
X3Byb2JlKGRldl9wcml2KTsKKwlpZiAocmV0KQorCQlnb3RvIGVycl9nZ3R0OworCiAJaW50ZWxf
Z3RfaW5pdF9od19lYXJseShkZXZfcHJpdik7CiAKIAlyZXQgPSBpOTE1X2dndHRfZW5hYmxlX2h3
KGRldl9wcml2KTsKIAlpZiAocmV0KSB7CiAJCURSTV9FUlJPUigiZmFpbGVkIHRvIGVuYWJsZSBH
R1RUXG4iKTsKLQkJZ290byBlcnJfZ2d0dDsKKwkJZ290byBlcnJfbWVtX3JlZ2lvbnM7CiAJfQog
CiAJcGNpX3NldF9tYXN0ZXIocGRldik7CkBAIC0xMTk0LDcgKzExOTksNyBAQCBzdGF0aWMgaW50
IGk5MTVfZHJpdmVyX2h3X3Byb2JlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikK
IAkJaWYgKHJldCkgewogCQkJRFJNX0VSUk9SKCJmYWlsZWQgdG8gc2V0IERNQSBtYXNrXG4iKTsK
IAotCQkJZ290byBlcnJfZ2d0dDsKKwkJCWdvdG8gZXJyX21lbV9yZWdpb25zOwogCQl9CiAJfQog
CkBAIC0xMjEyLDcgKzEyMTcsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2h3X3Byb2JlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaWYgKHJldCkgewogCQkJRFJNX0VS
Uk9SKCJmYWlsZWQgdG8gc2V0IERNQSBtYXNrXG4iKTsKIAotCQkJZ290byBlcnJfZ2d0dDsKKwkJ
CWdvdG8gZXJyX21lbV9yZWdpb25zOwogCQl9CiAJfQogCkBAIC0xMjY0LDYgKzEyNjksOCBAQCBz
dGF0aWMgaW50IGk5MTVfZHJpdmVyX2h3X3Byb2JlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAlpZiAocGRldi0+bXNpX2VuYWJsZWQpCiAJCXBjaV9kaXNhYmxlX21zaShwZGV2
KTsKIAlwbV9xb3NfcmVtb3ZlX3JlcXVlc3QoJmRldl9wcml2LT5wbV9xb3MpOworZXJyX21lbV9y
ZWdpb25zOgorCWludGVsX21lbW9yeV9yZWdpb25zX2RyaXZlcl9yZWxlYXNlKGRldl9wcml2KTsK
IGVycl9nZ3R0OgogCWk5MTVfZ2d0dF9kcml2ZXJfcmVsZWFzZShkZXZfcHJpdik7CiBlcnJfcGVy
ZjoKQEAgLTE1MTAsNiArMTUxNyw3IEBAIGludCBpOTE1X2RyaXZlcl9wcm9iZShzdHJ1Y3QgcGNp
X2RldiAqcGRldiwgY29uc3Qgc3RydWN0IHBjaV9kZXZpY2VfaWQgKmVudCkKIAogb3V0X2NsZWFu
dXBfaHc6CiAJaTkxNV9kcml2ZXJfaHdfcmVtb3ZlKGRldl9wcml2KTsKKwlpbnRlbF9tZW1vcnlf
cmVnaW9uc19kcml2ZXJfcmVsZWFzZShkZXZfcHJpdik7CiAJaTkxNV9nZ3R0X2RyaXZlcl9yZWxl
YXNlKGRldl9wcml2KTsKIG91dF9jbGVhbnVwX21taW86CiAJaTkxNV9kcml2ZXJfbW1pb19yZWxl
YXNlKGRldl9wcml2KTsKQEAgLTE1NjcsNiArMTU3NSw3IEBAIHN0YXRpYyB2b2lkIGk5MTVfZHJp
dmVyX3JlbGVhc2Uoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAogCWk5MTVfZ2VtX2RyaXZlcl9y
ZWxlYXNlKGRldl9wcml2KTsKIAorCWludGVsX21lbW9yeV9yZWdpb25zX2RyaXZlcl9yZWxlYXNl
KGRldl9wcml2KTsKIAlpOTE1X2dndHRfZHJpdmVyX3JlbGVhc2UoZGV2X3ByaXYpOwogCiAJaTkx
NV9kcml2ZXJfbW1pb19yZWxlYXNlKGRldl9wcml2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmlu
ZGV4IDk2ZmUwZThkNDY4YS4uYTIyZDk2OWNiMzUyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgK
QEAgLTE5MTYsOSArMTkxNiw2IEBAIGludCBfX211c3RfY2hlY2sgaTkxNV9nZW1fZXZpY3RfZm9y
X25vZGUoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJCQkJCSB1bnNpZ25lZCBpbnQg
ZmxhZ3MpOwogaW50IGk5MTVfZ2VtX2V2aWN0X3ZtKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2Ug
KnZtKTsKIAotdm9pZCBpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1KTsKLWludCBpOTE1X2dlbV9pbml0X21lbW9yeV9yZWdpb25zKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKLQogLyogaTkxNV9nZW1faW50ZXJuYWwuYyAq
Lwogc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKgogaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9p
bnRlcm5hbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZ2VtX2d0dC5jCmluZGV4IDNkM2E4ZGIxOGEwNy4uZWViYzdmZWU4MWUyIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYwpAQCAtMjc0NCw1OSArMjc0NCw2IEBAIGludCBpOTE1
X2luaXRfZ2d0dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlyZXR1cm4gMDsKIH0K
IAotdm9pZCBpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQotewotCWludCBpOwotCi0JZm9yIChpID0gMDsgaSA8IElOVEVMX1JFR0lP
Tl9VTktOT1dOOyBpKyspIHsKLQkJc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKnJlZ2lvbiA9
IGk5MTUtPm1tLnJlZ2lvbnNbaV07Ci0KLQkJaWYgKHJlZ2lvbikKLQkJCWludGVsX21lbW9yeV9y
ZWdpb25fcHV0KHJlZ2lvbik7Ci0JfQotfQotCi1pbnQgaTkxNV9nZW1faW5pdF9tZW1vcnlfcmVn
aW9ucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKLXsKLQlpbnQgZXJyLCBpOwotCi0J
Zm9yIChpID0gMDsgaSA8IElOVEVMX1JFR0lPTl9VTktOT1dOOyBpKyspIHsKLQkJc3RydWN0IGlu
dGVsX21lbW9yeV9yZWdpb24gKm1lbSA9IEVSUl9QVFIoLUVOT0RFVik7Ci0JCXUzMiB0eXBlOwot
Ci0JCWlmICghSEFTX1JFR0lPTihpOTE1LCBCSVQoaSkpKQotCQkJY29udGludWU7Ci0KLQkJdHlw
ZSA9IE1FTU9SWV9UWVBFX0ZST01fUkVHSU9OKGludGVsX3JlZ2lvbl9tYXBbaV0pOwotCQlzd2l0
Y2ggKHR5cGUpIHsKLQkJY2FzZSBJTlRFTF9NRU1PUllfU1lTVEVNOgotCQkJbWVtID0gaTkxNV9n
ZW1fc2htZW1fc2V0dXAoaTkxNSk7Ci0JCQlicmVhazsKLQkJY2FzZSBJTlRFTF9NRU1PUllfU1RP
TEVOOgotCQkJbWVtID0gaTkxNV9nZW1fc3RvbGVuX3NldHVwKGk5MTUpOwotCQkJYnJlYWs7Ci0J
CX0KLQotCQlpZiAoSVNfRVJSKG1lbSkpIHsKLQkJCWVyciA9IFBUUl9FUlIobWVtKTsKLQkJCURS
TV9FUlJPUigiRmFpbGVkIHRvIHNldHVwIHJlZ2lvbiglZCkgdHlwZT0lZFxuIiwgZXJyLCB0eXBl
KTsKLQkJCWdvdG8gb3V0X2NsZWFudXA7Ci0JCX0KLQotCQltZW0tPmlkID0gaW50ZWxfcmVnaW9u
X21hcFtpXTsKLQkJbWVtLT50eXBlID0gdHlwZTsKLQkJbWVtLT5pbnN0YW5jZSA9IE1FTU9SWV9J
TlNUQU5DRV9GUk9NX1JFR0lPTihpbnRlbF9yZWdpb25fbWFwW2ldKTsKLQotCQlpOTE1LT5tbS5y
ZWdpb25zW2ldID0gbWVtOwotCX0KLQotCXJldHVybiAwOwotCi1vdXRfY2xlYW51cDoKLQlpOTE1
X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKGk5MTUpOwotCXJldHVybiBlcnI7Ci19Ci0KIHN0
YXRpYyB2b2lkIGdndHRfY2xlYW51cF9odyhzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0KQogewogCXN0
cnVjdCBpOTE1X3ZtYSAqdm1hLCAqdm47CkBAIC0yODM0LDggKzI3ODEsNiBAQCB2b2lkIGk5MTVf
Z2d0dF9kcml2ZXJfcmVsZWFzZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlz
dHJ1Y3QgcGFnZXZlYyAqcHZlYzsKIAotCWk5MTVfZ2VtX2NsZWFudXBfbWVtb3J5X3JlZ2lvbnMo
aTkxNSk7Ci0KIAlmaW5pX2FsaWFzaW5nX3BwZ3R0KCZpOTE1LT5nZ3R0KTsKIAogCWdndHRfY2xl
YW51cF9odygmaTkxNS0+Z2d0dCk7CkBAIC0zMzExLDE1ICszMjU2LDcgQEAgaW50IGk5MTVfZ2d0
dF9pbml0X2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpZiAocmV0KQog
CQlyZXR1cm4gcmV0OwogCi0JcmV0ID0gaTkxNV9nZW1faW5pdF9tZW1vcnlfcmVnaW9ucyhkZXZf
cHJpdik7Ci0JaWYgKHJldCkKLQkJZ290byBvdXRfZ3R0X2NsZWFudXA7Ci0KIAlyZXR1cm4gMDsK
LQotb3V0X2d0dF9jbGVhbnVwOgotCWRldl9wcml2LT5nZ3R0LnZtLmNsZWFudXAoJmRldl9wcml2
LT5nZ3R0LnZtKTsKLQlyZXR1cm4gcmV0OwogfQogCiBpbnQgaTkxNV9nZ3R0X2VuYWJsZV9odyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9tZW1vcnlfcmVnaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9tZW1vcnlfcmVnaW9uLmMKaW5kZXggNzJmOThhMTExZGUxLi5hNjBmNzdmZjU4ZDQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX21lbW9yeV9yZWdpb24uYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9tZW1vcnlfcmVnaW9uLmMKQEAgLTIwNyw2ICsy
MDcsNjIgQEAgdm9pZCBpbnRlbF9tZW1vcnlfcmVnaW9uX3B1dChzdHJ1Y3QgaW50ZWxfbWVtb3J5
X3JlZ2lvbiAqbWVtKQogCWtyZWZfcHV0KCZtZW0tPmtyZWYsIF9faW50ZWxfbWVtb3J5X3JlZ2lv
bl9kZXN0cm95KTsKIH0KIAorLyogR2xvYmFsIG1lbW9yeSByZWdpb24gcmVnaXN0cmF0aW9uIC0t
IG9ubHkgc2xpZ2h0IGxheWVyIGludmVyc2lvbnMhICovCisKK2ludCBpbnRlbF9tZW1vcnlfcmVn
aW9uc19od19wcm9iZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlpbnQgZXJy
LCBpOworCisJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUoaTkxNS0+bW0ucmVnaW9ucyk7IGkr
KykgeworCQlzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtID0gRVJSX1BUUigtRU5PREVW
KTsKKwkJdTMyIHR5cGU7CisKKwkJaWYgKCFIQVNfUkVHSU9OKGk5MTUsIEJJVChpKSkpCisJCQlj
b250aW51ZTsKKworCQl0eXBlID0gTUVNT1JZX1RZUEVfRlJPTV9SRUdJT04oaW50ZWxfcmVnaW9u
X21hcFtpXSk7CisJCXN3aXRjaCAodHlwZSkgeworCQljYXNlIElOVEVMX01FTU9SWV9TWVNURU06
CisJCQltZW0gPSBpOTE1X2dlbV9zaG1lbV9zZXR1cChpOTE1KTsKKwkJCWJyZWFrOworCQljYXNl
IElOVEVMX01FTU9SWV9TVE9MRU46CisJCQltZW0gPSBpOTE1X2dlbV9zdG9sZW5fc2V0dXAoaTkx
NSk7CisJCQlicmVhazsKKwkJfQorCisJCWlmIChJU19FUlIobWVtKSkgeworCQkJZXJyID0gUFRS
X0VSUihtZW0pOworCQkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gc2V0dXAgcmVnaW9uKCVkKSB0eXBl
PSVkXG4iLCBlcnIsIHR5cGUpOworCQkJZ290byBvdXRfY2xlYW51cDsKKwkJfQorCisJCW1lbS0+
aWQgPSBpbnRlbF9yZWdpb25fbWFwW2ldOworCQltZW0tPnR5cGUgPSB0eXBlOworCQltZW0tPmlu
c3RhbmNlID0gTUVNT1JZX0lOU1RBTkNFX0ZST01fUkVHSU9OKGludGVsX3JlZ2lvbl9tYXBbaV0p
OworCisJCWk5MTUtPm1tLnJlZ2lvbnNbaV0gPSBtZW07CisJfQorCisJcmV0dXJuIDA7CisKK291
dF9jbGVhbnVwOgorCWludGVsX21lbW9yeV9yZWdpb25zX2RyaXZlcl9yZWxlYXNlKGk5MTUpOwor
CXJldHVybiBlcnI7Cit9CisKK3ZvaWQgaW50ZWxfbWVtb3J5X3JlZ2lvbnNfZHJpdmVyX3JlbGVh
c2Uoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCit7CisJaW50IGk7CisKKwlmb3IgKGkg
PSAwOyBpIDwgQVJSQVlfU0laRShpOTE1LT5tbS5yZWdpb25zKTsgaSsrKSB7CisJCXN0cnVjdCBp
bnRlbF9tZW1vcnlfcmVnaW9uICpyZWdpb24gPQorCQkJZmV0Y2hfYW5kX3plcm8oJmk5MTUtPm1t
LnJlZ2lvbnNbaV0pOworCisJCWlmIChyZWdpb24pCisJCQlpbnRlbF9tZW1vcnlfcmVnaW9uX3B1
dChyZWdpb24pOworCX0KK30KKwogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZU
RVNUKQogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pbnRlbF9tZW1vcnlfcmVnaW9uLmMiCiAjaW5jbHVk
ZSAic2VsZnRlc3RzL21vY2tfcmVnaW9uLmMiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9tZW1vcnlfcmVnaW9uLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9t
ZW1vcnlfcmVnaW9uLmgKaW5kZXggNDliMDU5YTJiZTcwLi4xOTkyMGMyNTZlZGUgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX21lbW9yeV9yZWdpb24uaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9tZW1vcnlfcmVnaW9uLmgKQEAgLTExNyw0ICsxMTcsNyBA
QCBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqCiBpbnRlbF9tZW1vcnlfcmVnaW9uX2dldChz
dHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtKTsKIHZvaWQgaW50ZWxfbWVtb3J5X3JlZ2lv
bl9wdXQoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSk7CiAKK2ludCBpbnRlbF9tZW1v
cnlfcmVnaW9uc19od19wcm9iZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7Cit2b2lk
IGludGVsX21lbW9yeV9yZWdpb25zX2RyaXZlcl9yZWxlYXNlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1KTsKKwogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9z
ZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVz
dHMvbW9ja19nZW1fZGV2aWNlLmMKaW5kZXggYzJmNTc3NWI2ZDU4Li5hMGRhNTk0NGRkMzMgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2Uu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMK
QEAgLTI4LDYgKzI4LDcgQEAKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUgImd0
L2ludGVsX2d0X3JlcXVlc3RzLmgiCiAjaW5jbHVkZSAiZ3QvbW9ja19lbmdpbmUuaCIKKyNpbmNs
dWRlICJpbnRlbF9tZW1vcnlfcmVnaW9uLmgiCiAKICNpbmNsdWRlICJtb2NrX3JlcXVlc3QuaCIK
ICNpbmNsdWRlICJtb2NrX2dlbV9kZXZpY2UuaCIKQEAgLTcyLDcgKzczLDcgQEAgc3RhdGljIHZv
aWQgbW9ja19kZXZpY2VfcmVsZWFzZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCW1vY2tfZmlu
aV9nZ3R0KCZpOTE1LT5nZ3R0KTsKIAlkZXN0cm95X3dvcmtxdWV1ZShpOTE1LT53cSk7CiAKLQlp
OTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKGk5MTUpOworCWludGVsX21lbW9yeV9yZWdp
b25zX2RyaXZlcl9yZWxlYXNlKGk5MTUpOwogCiAJZHJtX21vZGVfY29uZmlnX2NsZWFudXAoJmk5
MTUtPmRybSk7CiAKQEAgLTE2NCw2ICsxNjUsNyBAQCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
bW9ja19nZW1fZGV2aWNlKHZvaWQpCiAJCUk5MTVfR1RUX1BBR0VfU0laRV8yTTsKIAogCW1rd3Jp
dGVfZGV2aWNlX2luZm8oaTkxNSktPm1lbW9yeV9yZWdpb25zID0gUkVHSU9OX1NNRU07CisJaW50
ZWxfbWVtb3J5X3JlZ2lvbnNfaHdfcHJvYmUoaTkxNSk7CiAKIAltb2NrX3VuY29yZV9pbml0KCZp
OTE1LT51bmNvcmUsIGk5MTUpOwogCkBAIC0xOTgsMTAgKzIwMCw2IEBAIHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICptb2NrX2dlbV9kZXZpY2Uodm9pZCkKIAogCWludGVsX2VuZ2luZXNfZHJpdmVy
X3JlZ2lzdGVyKGk5MTUpOwogCi0JZXJyID0gaTkxNV9nZW1faW5pdF9tZW1vcnlfcmVnaW9ucyhp
OTE1KTsKLQlpZiAoZXJyKQotCQlnb3RvIGVycl9jb250ZXh0OwotCiAJcmV0dXJuIGk5MTU7CiAK
IGVycl9jb250ZXh0OgpAQCAtMjEyLDYgKzIxMCw3IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICptb2NrX2dlbV9kZXZpY2Uodm9pZCkKIAlpbnRlbF90aW1lbGluZXNfZmluaShpOTE1KTsKIAlk
ZXN0cm95X3dvcmtxdWV1ZShpOTE1LT53cSk7CiBlcnJfZHJ2OgorCWludGVsX21lbW9yeV9yZWdp
b25zX2RyaXZlcl9yZWxlYXNlKGk5MTUpOwogCWRybV9tb2RlX2NvbmZpZ19jbGVhbnVwKCZpOTE1
LT5kcm0pOwogCWRybV9kZXZfZmluaSgmaTkxNS0+ZHJtKTsKIHB1dF9kZXZpY2U6Ci0tIAoyLjI0
LjAucmMxCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

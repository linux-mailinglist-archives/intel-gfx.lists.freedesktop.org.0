Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 94D7C63B35
	for <lists+intel-gfx@lfdr.de>; Tue,  9 Jul 2019 20:39:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DD305894E0;
	Tue,  9 Jul 2019 18:39:46 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6C4F6894E0
 for <intel-gfx@lists.freedesktop.org>; Tue,  9 Jul 2019 18:39:45 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Jul 2019 11:39:44 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,471,1557212400"; d="scan'208";a="156261079"
Received: from mdroper-desk.fm.intel.com ([10.105.128.126])
 by orsmga007.jf.intel.com with ESMTP; 09 Jul 2019 11:39:44 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  9 Jul 2019 11:39:30 -0700
Message-Id: <20190709183934.445-2-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190709183934.445-1-matthew.d.roper@intel.com>
References: <20190709183934.445-1-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v6 1/5] drm/i915/gen11: Start distinguishing
 'phy' from 'port'
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T3VyIHBhc3QgRERJLWJhc2VkIEludGVsIHBsYXRmb3JtcyBoYXZlIGhhZCBhIGZpeGVkIERESTwt
PlBIWSBtYXBwaW5nLgpCZWNhdXNlIG9mIHRoaXMsIGJvdGggdGhlIGJzcGVjIGRvY3VtZW50YXRp
b24gYW5kIG91ciBpOTE1IGNvZGUgaGFzIHVzZWQKdGhlIHRlcm0gInBvcnQiIHdoZW4gdGFsa2lu
ZyBhYm91dCBlaXRoZXIgRERJJ3Mgb3IgUEhZJ3M7IGl0IHdhcyBhbHdheXMKZWFzeSB0byB0ZWxs
IHdoYXQgdGVybXMgbGlrZSAiUG9ydCBBIiB3ZXJlIHJlZmVycmluZyB0byBmcm9tIHRoZQpjb250
ZXh0LgoKVW5mb3J0dW5hdGVseSB0aGlzIGlzIHN0YXJ0aW5nIHRvIGJyZWFrIGRvd24gbm93IHRo
YXQgRUhMIGFsbG93cyBQSFktQQp0byBiZSBkcml2ZW4gYnkgZWl0aGVyIERESS1BIG9yIERESS1E
LiAgSXMgYSBzZXR1cCB3aXRoIERESS1EIGRyaXZpbmcKUEhZLUEgY29uc2lkZXJlZCAiUG9ydCBB
IiBvciAiUG9ydCBEPyIgIFRoZSBhbnN3ZXIgZGVwZW5kcyBvbiB3aGljaApyZWdpc3RlciB3ZSdy
ZSB3b3JraW5nIHdpdGgsIGFuZCBldmVuIHRoZSBic3BlYyBkb2Vzbid0IGRvIGEgZ3JlYXQgam9i
Cm9mIGNsYXJpZnlpbmcgdGhpcy4KCkxldCdzIHRyeSB0byBiZSBtb3JlIGV4cGxpY2l0IGFib3V0
IHdoZXRoZXIgd2UncmUgdGFsa2luZyBhYm91dCB0aGUgRERJCm9yIHRoZSBQSFkgb24gZ2VuMTEr
IGJ5IHVzaW5nICdwb3J0JyB0byByZWZlciB0byB0aGUgRERJIGFuZCBjcmVhdGluZyBhCm5ldyAn
ZW51bSBwaHknIG5hbWVzcGFjZSB0byByZWZlciB0byB0aGUgUEhZIGluIHVzZS4KClRoaXMgcGF0
Y2gganVzdCBhZGRzIHRoZSBuZXcgUEhZIG5hbWVzcGFjZSwgbmV3IHBoeS1iYXNlZCB2ZXJzaW9u
cyBvZgppbnRlbF9wb3J0X2lzXyooKSwgYW5kIGEgaGVscGVyIHRvIGNvbnZlcnQgYSBwb3J0IHRv
IGEgUEhZLgpUcmFuc2l0aW9uaW5nIHZhcmlvdXMgYXJlYXMgb2YgdGhlIGNvZGUgb3ZlciB0byB1
c2luZyB0aGUgUEhZIG5hbWVzcGFjZQp3aWxsIGJlIGRvbmUgaW4gc3Vic2VxdWVudCBwYXRjaGVz
IHRvIG1ha2UgcmV2aWV3IGVhc2llci4gIFdlJ2xsIHJlbW92ZQp0aGUgaW50ZWxfcG9ydF9pc18q
KCkgZnVuY3Rpb25zIGF0IHRoZSBlbmQgb2YgdGhlIHNlcmllcyB3aGVuIHdlCnRyYW5zaXRpb24g
YWxsIGNhbGxlcnMgb3ZlciB0byB1c2luZyB0aGUgUEhZLWJhc2VkIHZlcnNpb25zLgoKdjI6CiAt
IENvbnZlcnQgYSBmZXcgbW9yZSAncG9ydCcgdXNlcyB0byAncGh5LicgKFNwYXJzZSkKCnYzOgog
LSBTd2l0Y2ggRERJX0NMS19TRUwoKSBiYWNrIHRvICdwb3J0LicgKEpvc2UpCiAtIEFkZCBhIGNv
ZGUgY29tbWVudCBjbGFyaWZ5aW5nIHdoeSBEUENMS0FfQ0ZHQ1IwX0lDTCBuZWVkcyB0byB1c2Ug
UEhZCiAgIGZvciBpdHMgYml0IGRlZmluaXRpb25zLCBldmVuIHRob3VnaCB0aGUgcmVnaXN0ZXIg
ZGVzY3JpcHRpb24gaXMKICAgZ2l2ZW4gaW4gdGVybXMgb2YgRERJLgogLSBUbyBhdm9pZCBjb25m
dXNpb24sIHN3aXRjaCBDTkwncyBEUENMS0FfQ0ZHQ1IwIGRlZmluZXMgYmFjayB0byB1c2luZwog
ICBwb3J0IGFuZCBjcmVhdGUgc2VwYXJhdGUgSUNMKyBkZWZpbml0aW9ucyB0aGF0IHdvcmsgaW4g
dGVybXMgb2YgUEhZLgoKdjQ6CiAtIFJlYmFzZSBhbmQgcmVzb2x2ZSBjb25mbGljdHMgd2l0aCBJ
bXJlJ3MgVEMgc2VyaWVzLgogLSBUaGlzIHBhdGNoIG5vdyBqdXN0IGFkZHMgdGhlIG5hbWVzcGFj
ZSBhbmQgYSBmZXcgY29udmVuaWVuY2UKICAgZnVuY3Rpb25zOyB0aGUgaW1wb3J0YW50IGNoYW5n
ZXMgYXJlIG5vdyBzcGxpdCBvdXQgaW50byBzZXBhcmF0ZQogICBwYXRjaGVzIHRvIG1ha2UgcmV2
aWV3IGVhc2llci4KClN1Z2dlc3RlZC1ieTogVmlsbGUgU3lyamFsYSA8dmlsbGUuc3lyamFsYUBs
aW51eC5pbnRlbC5jb20+CkNjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGlu
dGVsLmNvbT4KQ2M6IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgpD
YzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KQ2M6IElt
cmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4KQ2M6IEphbmkgTmlrdWxhIDxqYW5pLm5pa3Vs
YUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHQgUm9wZXIgPG1hdHRoZXcuZC5yb3BlckBp
bnRlbC5jb20+ClJldmlld2VkLWJ5OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGlu
dXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5jIHwgMzIgKysrKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5oIHwgMTYgKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfZHJ2LmggICAgICAgICAgICAgfCAgMiArKwogMyBmaWxlcyBjaGFuZ2VkLCA0OSBp
bnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBmMDcwODE4MTViODAuLjQzY2FlZTZkM2MyZiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTY2ODUs
NiArNjY4NSwyMCBAQCBib29sIGludGVsX3BvcnRfaXNfY29tYm9waHkoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAlyZXR1cm4gZmFsc2U7CiB9CiAK
K2Jvb2wgaW50ZWxfcGh5X2lzX2NvbWJvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwgZW51bSBwaHkgcGh5KQoreworCWlmIChwaHkgPT0gUEhZX05PTkUpCisJCXJldHVybiBmYWxz
ZTsKKworCWlmIChJU19FTEtIQVJUTEFLRShkZXZfcHJpdikpCisJCXJldHVybiBwaHkgPD0gUEhZ
X0M7CisKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkKKwkJcmV0dXJuIHBoeSA8PSBQ
SFlfQjsKKworCXJldHVybiBmYWxzZTsKK30KKwogYm9vbCBpbnRlbF9wb3J0X2lzX3RjKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7CiAJaWYgKElO
VEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYgIUlTX0VMS0hBUlRMQUtFKGRldl9wcml2KSkKQEAg
LTY2OTMsOSArNjcwNywyNSBAQCBib29sIGludGVsX3BvcnRfaXNfdGMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAlyZXR1cm4gZmFsc2U7CiB9CiAK
K2Jvb2wgaW50ZWxfcGh5X2lzX3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwg
ZW51bSBwaHkgcGh5KQoreworCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExICYmICFJU19F
TEtIQVJUTEFLRShkZXZfcHJpdikpCisJCXJldHVybiBwaHkgPj0gUEhZX0MgJiYgcGh5IDw9IFBI
WV9GOworCisJcmV0dXJuIGZhbHNlOworfQorCitlbnVtIHBoeSBpbnRlbF9wb3J0X3RvX3BoeShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgZW51bSBwb3J0IHBvcnQpCit7CisJaWYgKElT
X0VMS0hBUlRMQUtFKGk5MTUpICYmIHBvcnQgPT0gUE9SVF9EKQorCQlyZXR1cm4gUEhZX0E7CisK
KwlyZXR1cm4gKGVudW0gcGh5KXBvcnQ7Cit9CisKIGVudW0gdGNfcG9ydCBpbnRlbF9wb3J0X3Rv
X3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7
Ci0JaWYgKCFpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSkKKwlpZiAoIWludGVsX3Bo
eV9pc190YyhkZXZfcHJpdiwgaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpKSkKIAkJ
cmV0dXJuIFBPUlRfVENfTk9ORTsKIAogCXJldHVybiBwb3J0IC0gUE9SVF9DOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAppbmRleCBkMjk2NTU2ZWQ4MmUu
LmQ1MzI4NWZiODgzZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmgKQEAgLTIyOCw2ICsyMjgsMjEgQEAgc3RydWN0IGludGVsX2xpbmtfbV9uIHsKIAl1
MzIgbGlua19uOwogfTsKIAorZW51bSBwaHkgeworCVBIWV9OT05FID0gLTEsCisKKwlQSFlfQSA9
IDAsCisJUEhZX0IsCisJUEhZX0MsCisJUEhZX0QsCisJUEhZX0UsCisJUEhZX0YsCisKKwlJOTE1
X01BWF9QSFlTCit9OworCisjZGVmaW5lIHBoeV9uYW1lKGEpICgoYSkgKyAnQScpCisKICNkZWZp
bmUgZm9yX2VhY2hfcGlwZShfX2Rldl9wcml2LCBfX3ApIFwKIAlmb3IgKChfX3ApID0gMDsgKF9f
cCkgPCBJTlRFTF9JTkZPKF9fZGV2X3ByaXYpLT5udW1fcGlwZXM7IChfX3ApKyspCiAKQEAgLTM1
Niw1ICszNzEsNiBAQCB2b2lkIGxwdF9kaXNhYmxlX2Nsa291dF9kcChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpOwogdTMyIGludGVsX3BsYW5lX2ZiX21heF9zdHJpZGUoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICAgICAgdTMyIHBpeGVsX2Zvcm1hdCwg
dTY0IG1vZGlmaWVyKTsKIGJvb2wgaW50ZWxfcGxhbmVfY2FuX3JlbWFwKGNvbnN0IHN0cnVjdCBp
bnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpOworZW51bSBwaHkgaW50ZWxfcG9ydF90b19w
aHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGVudW0gcG9ydCBwb3J0KTsKIAogI2Vu
ZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oCmluZGV4IDI0YzYzZWQ0NWM2Zi4uODE1YzI2YzBi
OThjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaApAQCAtMTQ5Myw3ICsxNDkzLDkgQEAgdm9p
ZCBpbnRlbF9lbmNvZGVyX2Rlc3Ryb3koc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKTsKIHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICoKIGludGVsX2VuY29kZXJfY3VycmVudF9tb2RlKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKTsKIGJvb2wgaW50ZWxfcG9ydF9pc19jb21ib3BoeShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KTsKK2Jvb2wg
aW50ZWxfcGh5X2lzX2NvbWJvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51
bSBwaHkgcGh5KTsKIGJvb2wgaW50ZWxfcG9ydF9pc190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KTsKK2Jvb2wgaW50ZWxfcGh5X2lzX3RjKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkgcGh5KTsKIGVudW0gdGNfcG9y
dCBpbnRlbF9wb3J0X3RvX3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJ
CSAgICAgIGVudW0gcG9ydCBwb3J0KTsKIGludCBpbnRlbF9nZXRfcGlwZV9mcm9tX2NydGNfaWRf
aW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKLS0gCjIuMjAuMQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

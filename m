Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 36C0C1AAF06
	for <lists+intel-gfx@lfdr.de>; Wed, 15 Apr 2020 19:03:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 27EDA6EA3B;
	Wed, 15 Apr 2020 17:03:25 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5B6E66EA3B
 for <intel-gfx@lists.freedesktop.org>; Wed, 15 Apr 2020 17:03:23 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from build.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 20908947-1500050 
 for <intel-gfx@lists.freedesktop.org>; Wed, 15 Apr 2020 18:03:20 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 15 Apr 2020 18:03:17 +0100
Message-Id: <20200415170318.16771-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 1/2] drm/i915/selftests: Exercise basic RPS
 interrupt generation
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2luY2Ugd2UgZGVwZW5kIHVwb24gUlBTIGdlbmVyYXRpbmcgaW50ZXJydXB0cyBhZnRlciBldmFs
dWF0aW9uCmludGVydmFscyB0byBkZXRlcm1pbmUgd2hlbiB0byB1cC9kb3duIGNsb2NrIHRoZSBH
UFUsIGl0IGlzIGltcGVyYXRpdmUKdGhhdCB3ZSBzdWNjZXNzZnVsbHkgZW5hYmxlIGludGVycnVw
dCBnZW5lcmF0aW9uISBWZXJpZnkgdGhhdCB3ZSBkbyBzZWUKYW4gaW50ZXJydXB0IGlmIHdlIGtl
ZXAgdGhlIEdQVSBidXN5IGZvciBhbiBlbnRpcmUgRUkuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBX
aWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9ycHMuYyAgICAgIHwgICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X2d0X3BtLmMgfCAgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
cnBzLmMgICB8IDIyMyArKysrKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfcnBzLmggICB8ICAxMSArKwogNCBmaWxlcyBjaGFuZ2VkLCAyNDAgaW5z
ZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X3Jwcy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
c2VsZnRlc3RfcnBzLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ycHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jwcy5jCmluZGV4IDg2MTEw
NDU4ZTJhNy4uZDE5MTYxYzdhM2Q4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ycHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ycHMuYwpA
QCAtMTkyMywzICsxOTIzLDcgQEAgYm9vbCBpOTE1X2dwdV90dXJib19kaXNhYmxlKHZvaWQpCiAJ
cmV0dXJuIHJldDsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGk5MTVfZ3B1X3R1cmJvX2Rpc2FibGUp
OworCisjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1QpCisjaW5jbHVkZSAi
c2VsZnRlc3RfcnBzLmMiCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2d0X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9n
dF9wbS5jCmluZGV4IDA5ZmY4ZTRmODhhZi4uYzUwYmI1MDJmZTAzIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9ndF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3NlbGZ0ZXN0X2d0X3BtLmMKQEAgLTcsNiArNyw3IEBACiAKICNpbmNsdWRlICJz
ZWxmdGVzdF9sbGMuaCIKICNpbmNsdWRlICJzZWxmdGVzdF9yYzYuaCIKKyNpbmNsdWRlICJzZWxm
dGVzdF9ycHMuaCIKIAogc3RhdGljIGludCBsaXZlX2d0X3Jlc3VtZSh2b2lkICphcmcpCiB7CkBA
IC01Miw2ICs1Myw3IEBAIGludCBpbnRlbF9ndF9wbV9saXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlzdGF0aWMgY29uc3Qgc3RydWN0IGk5MTVfc3VidGVz
dCB0ZXN0c1tdID0gewogCQlTVUJURVNUKGxpdmVfcmM2X21hbnVhbCksCisJCVNVQlRFU1QobGl2
ZV9ycHNfaW50ZXJydXB0KSwKIAkJU1VCVEVTVChsaXZlX2d0X3Jlc3VtZSksCiAJfTsKIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfcnBzLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9ycHMuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLjI2YWFkYzJhZTNiZQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3Jwcy5jCkBAIC0wLDAgKzEsMjIzIEBACisvLyBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCisvKgorICogQ29weXJpZ2h0IMKpIDIwMjAgSW50ZWwg
Q29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3BtLmgiCisjaW5jbHVk
ZSAiaW50ZWxfZ3RfcG0uaCIKKyNpbmNsdWRlICJpbnRlbF9yYzYuaCIKKyNpbmNsdWRlICJzZWxm
dGVzdF9ycHMuaCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuaCIKKyNpbmNs
dWRlICJzZWxmdGVzdHMvaWd0X3NwaW5uZXIuaCIKKworc3RhdGljIHZvaWQgZHVtbXlfcnBzX3dv
cmsoc3RydWN0IHdvcmtfc3RydWN0ICp3cmspCit7Cit9CisKK3N0YXRpYyBpbnQgX19ycHNfdXBf
aW50ZXJydXB0KHN0cnVjdCBpbnRlbF9ycHMgKnJwcywKKwkJCSAgICAgIHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSwKKwkJCSAgICAgIHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3BpbikKK3sK
KwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBlbmdpbmUtPnVuY29yZTsKKwlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycTsKKwl1MzIgdGltZW91dDsKKworCWlmICghaW50ZWxfZW5naW5lX2Nh
bl9zdG9yZV9kd29yZChlbmdpbmUpKQorCQlyZXR1cm4gMDsKKworCWludGVsX2d0X3BtX3dhaXRf
Zm9yX2lkbGUoZW5naW5lLT5ndCk7CisJR0VNX0JVR19PTihycHMtPmFjdGl2ZSk7CisKKwlycHMt
PnBtX2lpciA9IDA7CisJcnBzLT5jdXJfZnJlcSA9IHJwcy0+bWluX2ZyZXE7CisKKwlycSA9IGln
dF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KHNwaW4sIGVuZ2luZS0+a2VybmVsX2NvbnRleHQsIE1J
X05PT1ApOworCWlmIChJU19FUlIocnEpKQorCQlyZXR1cm4gUFRSX0VSUihycSk7CisKKwlpOTE1
X3JlcXVlc3RfZ2V0KHJxKTsKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKworCWlmICghaWd0X3dh
aXRfZm9yX3NwaW5uZXIoc3BpbiwgcnEpKSB7CisJCXByX2VycigiJXM6IFJQUyBzcGlubmVyIGRp
ZCBub3Qgc3RhcnRcbiIsCisJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQlpOTE1X3JlcXVlc3Rf
cHV0KHJxKTsKKwkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChlbmdpbmUtPmd0KTsKKwkJcmV0dXJuIC1F
SU87CisJfQorCisJaWYgKCFycHMtPmFjdGl2ZSkgeworCQlwcl9lcnIoIiVzOiBSUFMgbm90IGVu
YWJsZWQgb24gc3RhcnRpbmcgc3Bpbm5lclxuIiwKKwkJICAgICAgIGVuZ2luZS0+bmFtZSk7CisJ
CWlndF9zcGlubmVyX2VuZChzcGluKTsKKwkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisJCXJldHVy
biAtRUlOVkFMOworCX0KKworCWlmICghKHJwcy0+cG1fZXZlbnRzICYgR0VONl9QTV9SUF9VUF9U
SFJFU0hPTEQpKSB7CisJCXByX2VycigiJXM6IFJQUyBkaWQgbm90IHJlZ2lzdGVyIFVQIGludGVy
cnVwdFxuIiwKKwkJICAgICAgIGVuZ2luZS0+bmFtZSk7CisJCWk5MTVfcmVxdWVzdF9wdXQocnEp
OworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlpZiAocnBzLT5sYXN0X2ZyZXEgIT0gcnBzLT5t
aW5fZnJlcSkgeworCQlwcl9lcnIoIiVzOiBSUFMgZGlkIG5vdCBwcm9ncmFtIG1pbiBmcmVxdWVu
Y3lcbiIsCisJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsK
KwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJdGltZW91dCA9IGludGVsX3VuY29yZV9yZWFkKHVu
Y29yZSwgR0VONl9SUF9VUF9FSSk7CisJdGltZW91dCA9IEdUX1BNX0lOVEVSVkFMX1RPX1VTKGVu
Z2luZS0+aTkxNSwgdGltZW91dCk7CisKKwl1c2xlZXBfcmFuZ2UoMiAqIHRpbWVvdXQsIDMgKiB0
aW1lb3V0KTsKKwlHRU1fQlVHX09OKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKTsKKworCWln
dF9zcGlubmVyX2VuZChzcGluKTsKKwlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKworCWlmIChycHMt
PmN1cl9mcmVxICE9IHJwcy0+bWluX2ZyZXEpIHsKKwkJcHJfZXJyKCIlczogRnJlcXVlbmN5IHVu
ZXhwZWN0ZWRseSBjaGFuZ2VkIFt1cF0sIG5vdyAlZCFcbiIsCisJCSAgICAgICBlbmdpbmUtPm5h
bWUsIGludGVsX3Jwc19yZWFkX2FjdHVhbF9mcmVxdWVuY3kocnBzKSk7CisJCXJldHVybiAtRUlO
VkFMOworCX0KKworCWlmICghKHJwcy0+cG1faWlyICYgR0VONl9QTV9SUF9VUF9USFJFU0hPTEQp
KSB7CisJCXByX2VycigiJXM6IFVQIGludGVycnVwdCBub3QgcmVjb3JkZWQgZm9yIHNwaW5uZXIs
IHBtX2lpcjoleCwgcHJldl91cDoleCwgdXBfdGhyZXNob2xkOiV4LCB1cF9laToleFxuIiwKKwkJ
ICAgICAgIGVuZ2luZS0+bmFtZSwgcnBzLT5wbV9paXIsCisJCSAgICAgICBpbnRlbF91bmNvcmVf
cmVhZCh1bmNvcmUsIEdFTjZfUlBfUFJFVl9VUCksCisJCSAgICAgICBpbnRlbF91bmNvcmVfcmVh
ZCh1bmNvcmUsIEdFTjZfUlBfVVBfVEhSRVNIT0xEKSwKKwkJICAgICAgIGludGVsX3VuY29yZV9y
ZWFkKHVuY29yZSwgR0VONl9SUF9VUF9FSSkpOworCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlp
bnRlbF9ndF9wbV93YWl0X2Zvcl9pZGxlKGVuZ2luZS0+Z3QpOworCXJldHVybiAwOworfQorCitz
dGF0aWMgaW50IF9fcnBzX2Rvd25faW50ZXJydXB0KHN0cnVjdCBpbnRlbF9ycHMgKnJwcywKKwkJ
CQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJc3RydWN0IGludGVsX3VuY29y
ZSAqdW5jb3JlID0gZW5naW5lLT51bmNvcmU7CisJdTMyIHRpbWVvdXQ7CisKKwltdXRleF9sb2Nr
KCZycHMtPmxvY2spOworCUdFTV9CVUdfT04oIXJwcy0+YWN0aXZlKTsKKwlpbnRlbF9ycHNfc2V0
KHJwcywgcnBzLT5tYXhfZnJlcSk7CisJbXV0ZXhfdW5sb2NrKCZycHMtPmxvY2spOworCisJaWYg
KCEocnBzLT5wbV9ldmVudHMgJiBHRU42X1BNX1JQX0RPV05fVEhSRVNIT0xEKSkgeworCQlwcl9l
cnIoIiVzOiBSUFMgZGlkIG5vdCByZWdpc3RlciBET1dOIGludGVycnVwdFxuIiwKKwkJICAgICAg
IGVuZ2luZS0+bmFtZSk7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWlmIChycHMtPmxhc3Rf
ZnJlcSAhPSBycHMtPm1heF9mcmVxKSB7CisJCXByX2VycigiJXM6IFJQUyBkaWQgbm90IHByb2dy
YW0gbWF4IGZyZXF1ZW5jeVxuIiwKKwkJICAgICAgIGVuZ2luZS0+bmFtZSk7CisJCXJldHVybiAt
RUlOVkFMOworCX0KKworCXRpbWVvdXQgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjZf
UlBfRE9XTl9FSSk7CisJdGltZW91dCA9IEdUX1BNX0lOVEVSVkFMX1RPX1VTKGVuZ2luZS0+aTkx
NSwgdGltZW91dCk7CisKKwkvKiBGbHVzaCBhbnkgcHJldmlvdXMgRUkgKi8KKwl1c2xlZXBfcmFu
Z2UodGltZW91dCwgMiAqIHRpbWVvdXQpOworCisJLyogUmVzZXQgdGhlIGludGVycnVwdCBzdGF0
dXMgKi8KKwlycHNfZGlzYWJsZV9pbnRlcnJ1cHRzKHJwcyk7CisJR0VNX0JVR19PTihycHMtPnBt
X2lpcik7CisJcnBzX2VuYWJsZV9pbnRlcnJ1cHRzKHJwcyk7CisKKwkvKiBBbmQgdGhlbiB3YWl0
IGZvciB0aGUgdGltZW91dCwgZm9yIHJlYWwgdGhpcyB0aW1lICovCisJdXNsZWVwX3JhbmdlKDIg
KiB0aW1lb3V0LCAzICogdGltZW91dCk7CisKKwlpZiAocnBzLT5jdXJfZnJlcSAhPSBycHMtPm1h
eF9mcmVxKSB7CisJCXByX2VycigiJXM6IEZyZXF1ZW5jeSB1bmV4cGVjdGVkbHkgY2hhbmdlZCBb
ZG93bl0sIG5vdyAlZCFcbiIsCisJCSAgICAgICBlbmdpbmUtPm5hbWUsCisJCSAgICAgICBpbnRl
bF9ycHNfcmVhZF9hY3R1YWxfZnJlcXVlbmN5KHJwcykpOworCQlyZXR1cm4gLUVJTlZBTDsKKwl9
CisKKwlpZiAoIShycHMtPnBtX2lpciAmIChHRU42X1BNX1JQX0RPV05fVEhSRVNIT0xEIHwgR0VO
Nl9QTV9SUF9ET1dOX1RJTUVPVVQpKSkgeworCQlwcl9lcnIoIiVzOiBET1dOIGludGVycnVwdCBu
b3QgcmVjb3JkZWQgZm9yIGlkbGUsIHBtX2lpcjoleCwgcHJldl9kb3duOiV4LCBkb3duX3RocmVz
aG9sZDoleCwgZG93bl9laToleCBbcHJldl91cDoleCwgdXBfdGhyZXNob2xkOiV4LCB1cF9laTol
eF1cbiIsCisJCSAgICAgICBlbmdpbmUtPm5hbWUsIHJwcy0+cG1faWlyLAorCQkgICAgICAgaW50
ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCBHRU42X1JQX1BSRVZfRE9XTiksCisJCSAgICAgICBpbnRl
bF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjZfUlBfRE9XTl9USFJFU0hPTEQpLAorCQkgICAgICAg
aW50ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCBHRU42X1JQX0RPV05fRUkpLAorCQkgICAgICAgaW50
ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCBHRU42X1JQX1BSRVZfVVApLAorCQkgICAgICAgaW50ZWxf
dW5jb3JlX3JlYWQodW5jb3JlLCBHRU42X1JQX1VQX1RIUkVTSE9MRCksCisJCSAgICAgICBpbnRl
bF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjZfUlBfVVBfRUkpKTsKKwkJcmV0dXJuIC1FSU5WQUw7
CisJfQorCisJcmV0dXJuIDA7Cit9CisKK2ludCBsaXZlX3Jwc19pbnRlcnJ1cHQodm9pZCAqYXJn
KQoreworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CisJc3RydWN0IGludGVsX3JwcyAqcnBz
ID0gJmd0LT5ycHM7CisJdm9pZCAoKnNhdmVkX3dvcmspKHN0cnVjdCB3b3JrX3N0cnVjdCAqd3Jr
KTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVf
aWQgaWQ7CisJc3RydWN0IGlndF9zcGlubmVyIHNwaW47CisJdTMyIHBtX2V2ZW50czsKKwlpbnQg
ZXJyID0gMDsKKworCS8qCisJICogRmlyc3QsIGxldCdzIGNoZWNrIHdoZXRoZXIgb3Igbm90IHdl
IGFyZSByZWNlaXZpbmcgaW50ZXJydXB0cy4KKwkgKi8KKworCWlmICghcnBzLT5lbmFibGVkIHx8
IHJwcy0+bWF4X2ZyZXEgPD0gcnBzLT5taW5fZnJlcSkKKwkJcmV0dXJuIDA7CisKKwlpbnRlbF9n
dF9wbV9nZXQoZ3QpOworCXBtX2V2ZW50cyA9IHJwcy0+cG1fZXZlbnRzOworCWludGVsX2d0X3Bt
X3B1dChndCk7CisJaWYgKCFwbV9ldmVudHMpIHsKKwkJcHJfZXJyKCJObyBSUFMgUE0gZXZlbnRz
IHJlZ2lzdGVyZWQsIGJ1dCBSUFMgaXMgZW5hYmxlZD9cbiIpOworCQlyZXR1cm4gLUVOT0RFVjsK
Kwl9CisKKwlpZiAoaWd0X3NwaW5uZXJfaW5pdCgmc3BpbiwgZ3QpKQorCQlyZXR1cm4gLUVOT01F
TTsKKworCWludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoZ3QpOworCXNhdmVkX3dvcmsgPSBycHMt
PndvcmsuZnVuYzsKKwlycHMtPndvcmsuZnVuYyA9IGR1bW15X3Jwc193b3JrOworCisJZm9yX2Vh
Y2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7CisJCS8qIEtlZXAgdGhlIGVuZ2luZSBidXN5IHdp
dGggYSBzcGlubmVyOyBleHBlY3QgYW4gVVAhICovCisJCWlmIChwbV9ldmVudHMgJiBHRU42X1BN
X1JQX1VQX1RIUkVTSE9MRCkgeworCQkJZXJyID0gX19ycHNfdXBfaW50ZXJydXB0KHJwcywgZW5n
aW5lLCAmc3Bpbik7CisJCQlpZiAoZXJyKQorCQkJCWdvdG8gb3V0OworCQl9CisKKwkJLyogS2Vl
cCB0aGUgZW5naW5lIGF3YWtlIGJ1dCBpZGxlIGFuZCBjaGVjayBmb3IgRE9XTiAqLworCQlpZiAo
cG1fZXZlbnRzICYgR0VONl9QTV9SUF9ET1dOX1RIUkVTSE9MRCkgeworCQkJaW50ZWxfZW5naW5l
X3BtX2dldChlbmdpbmUpOworCQkJaW50ZWxfcmM2X2Rpc2FibGUoJmd0LT5yYzYpOworCisJCQll
cnIgPSBfX3Jwc19kb3duX2ludGVycnVwdChycHMsIGVuZ2luZSk7CisKKwkJCWludGVsX3JjNl9l
bmFibGUoJmd0LT5yYzYpOworCQkJaW50ZWxfZW5naW5lX3BtX3B1dChlbmdpbmUpOworCQkJaWYg
KGVycikKKwkJCQlnb3RvIG91dDsKKwkJfQorCX0KKworb3V0OgorCWlmIChpZ3RfZmx1c2hfdGVz
dChndC0+aTkxNSkpCisJCWVyciA9IC1FSU87CisKKwlpZ3Rfc3Bpbm5lcl9maW5pKCZzcGluKTsK
KworCWludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoZ3QpOworCXJwcy0+d29yay5mdW5jID0gc2F2
ZWRfd29yazsKKworCXJldHVybiBlcnI7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9ycHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0
X3Jwcy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uYWJiYTY2NDIw
OTk2Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
cnBzLmgKQEAgLTAsMCArMSwxMSBAQAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVCAq
LworLyoKKyAqIENvcHlyaWdodCDCqSAyMDIwIEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lm
bmRlZiBTRUxGVEVTVF9SUFNfSAorI2RlZmluZSBTRUxGVEVTVF9SUFNfSAorCitpbnQgbGl2ZV9y
cHNfaW50ZXJydXB0KHZvaWQgKmFyZyk7CisKKyNlbmRpZiAvKiBTRUxGVEVTVF9SUFNfSCAqLwot
LSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

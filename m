Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2EDA51A1771
	for <lists+intel-gfx@lfdr.de>; Tue,  7 Apr 2020 23:38:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 151B76E904;
	Tue,  7 Apr 2020 21:38:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6A62B6E905
 for <intel-gfx@lists.freedesktop.org>; Tue,  7 Apr 2020 21:38:28 +0000 (UTC)
IronPort-SDR: IM2CycniKoDZXhDHwCbgm8I2xRdY9YotToaWZvQQ0RCwFUpBYN8Tz2vauOn6YIqUQwDgZ60sge
 TfIRyvOmq4hA==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Apr 2020 14:38:26 -0700
IronPort-SDR: e8tHMrzAWL/9255TxKV5FaKNg92SrqqLTRHwOsLpGXkLDrnuhZbwezUOg1uS0jCFwY2DbBo1ud
 loOHaHIVy1fA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,356,1580803200"; d="scan'208";a="240081655"
Received: from mtadigot-mobl2.amr.corp.intel.com (HELO
 josouza-MOBL2.amr.corp.intel.com) ([10.135.56.68])
 by orsmga007.jf.intel.com with ESMTP; 07 Apr 2020 14:38:26 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  7 Apr 2020 14:39:58 -0700
Message-Id: <20200407214000.342933-6-jose.souza@intel.com>
X-Mailer: git-send-email 2.26.0
In-Reply-To: <20200407214000.342933-1-jose.souza@intel.com>
References: <20200407214000.342933-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 6/8] drm/i915/tc/tgl: Implement TC cold
 sequences
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Cooper Chiou <cooper.chiou@intel.com>,
 Kai-Heng Feng <kai.heng.feng@canonical.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VEMgcG9ydHMgY2FuIGVudGVyIGluIFRDQ09MRCB0byBzYXZlIHBvd2VyIGFuZCBpcyByZXF1aXJl
ZCB0byByZXF1ZXN0CnRvIFBDT0RFIHRvIGV4aXQgdGhpcyBzdGF0ZSBiZWZvcmUgdXNlIG9yIHJl
YWQgdG8gVEMgcmVnaXN0ZXJzLgoKRm9yIFRHTCB0aGVyZSBpcyBhIG5ldyBNQk9YIGNvbW1hbmQg
dG8gZG8gdGhhdCB3aXRoIGEgcGFyYW1ldGVyIHRvIGFzawpQQ09ERSB0byBleGl0IGFuZCBibG9j
ayBUQ0NPTEQgZW50cnkgb3IgdW5ibG9jayBUQ0NPTEQgZW50cnkuCgpTbyBhZGRpbmcgYSBuZXcg
cG93ZXIgZG9tYWluIHRvIHJldXNlIHRoZSByZWZjb3VudCBhbmQgb25seSBhbGxvdwpUQyBjb2xk
IHdoZW4gYWxsIFRDIHBvcnRzIGFyZSBub3QgaW4gdXNlLgoKdjI6Ci0gZml4ZWQgbWlzc2luZyBj
YXNlIGluIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluX3N0cigpCi0gbW92ZWQgdGdsX3RjX2Nv
bGRfcmVxdWVzdCB0byBpbnRlbF9kaXNwbGF5X3Bvd2VyLmMKLSByZW5hbWVkIFRHTF9UQ19DT0xE
X09GRiB0byBUR0xfVENfQ09MRF9PRkZfUE9XRVJfRE9NQUlOUwotIGFkZGVkIGFsbCBUQyBhbmQg
VEJUIGF1eCBwb3dlciBkb21haW5zIHRvClRHTF9UQ19DT0xEX09GRl9QT1dFUl9ET01BSU5TCgp2
MzoKLSBhZGRlZCBvbmUgbXNlYyBzbGVlcCB3aGVuIFBDT0RFIHJldHVybnMgLUVBR0FJTgotIGFk
ZGVkIHRpbWVvdXQgb2YgNW1zZWMgdG8gbm90IGxvb3AgZm9yZXZlciBpZgpzYW5keWJyaWRnZV9w
Y29kZV93cml0ZV90aW1lb3V0KCkga2VlcHMgcmV0dXJuaW5nIC1FQUdBSU4KCkJTcGVjOiA0OTI5
NApDYzogSW1yZSBEZWFrIDxpbXJlLmRlYWtAaW50ZWwuY29tPgpDYzogQ29vcGVyIENoaW91IDxj
b29wZXIuY2hpb3VAaW50ZWwuY29tPgpDYzogS2FpLUhlbmcgRmVuZyA8a2FpLmhlbmcuZmVuZ0Bj
YW5vbmljYWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3Nl
LnNvdXphQGludGVsLmNvbT4KLS0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3Bvd2VyLmMgICAgfCAxMDQgKysrKysrKysrKysrKysrKysrCiAuLi4vZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmggICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF90Yy5jICAgICAgIHwgIDE3ICsrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9yZWcuaCAgICAgICAgICAgICAgIHwgICA0ICsKIDQgZmlsZXMgY2hhbmdlZCwgMTIzIGlu
c2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYwppbmRleCA4MWI5NjhiOGMzOTcuLjBiZTY3
NTdmNzk3YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3Bvd2VyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3Bvd2VyLmMKQEAgLTE1MSw2ICsxNTEsOCBAQCBpbnRlbF9kaXNwbGF5X3Bvd2VyX2Rv
bWFpbl9zdHIoZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4pCiAJCXJldHVy
biAiR1RfSVJRIjsKIAljYXNlIFBPV0VSX0RPTUFJTl9EUExMX0RDX09GRjoKIAkJcmV0dXJuICJE
UExMX0RDX09GRiI7CisJY2FzZSBQT1dFUl9ET01BSU5fVENfQ09MRF9PRkY6CisJCXJldHVybiAi
VENfQ09MRF9PRkYiOwogCWRlZmF1bHQ6CiAJCU1JU1NJTkdfQ0FTRShkb21haW4pOwogCQlyZXR1
cm4gIj8iOwpAQCAtMjg2MCw2ICsyODYyLDIxIEBAIHZvaWQgaW50ZWxfZGlzcGxheV9wb3dlcl9w
dXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogI2RlZmluZSBUR0xfQVVYX0lf
VEJUNl9JT19QT1dFUl9ET01BSU5TICgJXAogCUJJVF9VTEwoUE9XRVJfRE9NQUlOX0FVWF9JX1RC
VCkpCiAKKyNkZWZpbmUgVEdMX1RDX0NPTERfT0ZGX1BPV0VSX0RPTUFJTlMgKAkJXAorCUJJVF9V
TEwoUE9XRVJfRE9NQUlOX0FVWF9EKQl8CVwKKwlCSVRfVUxMKFBPV0VSX0RPTUFJTl9BVVhfRSkJ
fAlcCisJQklUX1VMTChQT1dFUl9ET01BSU5fQVVYX0YpCXwJXAorCUJJVF9VTEwoUE9XRVJfRE9N
QUlOX0FVWF9HKQl8CVwKKwlCSVRfVUxMKFBPV0VSX0RPTUFJTl9BVVhfSCkJfAlcCisJQklUX1VM
TChQT1dFUl9ET01BSU5fQVVYX0kpCXwJXAorCUJJVF9VTEwoUE9XRVJfRE9NQUlOX0FVWF9EX1RC
VCkJfAlcCisJQklUX1VMTChQT1dFUl9ET01BSU5fQVVYX0VfVEJUKQl8CVwKKwlCSVRfVUxMKFBP
V0VSX0RPTUFJTl9BVVhfRl9UQlQpCXwJXAorCUJJVF9VTEwoUE9XRVJfRE9NQUlOX0FVWF9HX1RC
VCkJfAlcCisJQklUX1VMTChQT1dFUl9ET01BSU5fQVVYX0hfVEJUKQl8CVwKKwlCSVRfVUxMKFBP
V0VSX0RPTUFJTl9BVVhfSV9UQlQpCXwJXAorCUJJVF9VTEwoUE9XRVJfRE9NQUlOX1RDX0NPTERf
T0ZGKSkKKwogc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3Bvd2VyX3dlbGxfb3BzIGk5eHhfYWx3
YXlzX29uX3Bvd2VyX3dlbGxfb3BzID0gewogCS5zeW5jX2h3ID0gaTl4eF9wb3dlcl93ZWxsX3N5
bmNfaHdfbm9vcCwKIAkuZW5hYmxlID0gaTl4eF9hbHdheXNfb25fcG93ZXJfd2VsbF9ub29wLApA
QCAtMzk2Miw2ICszOTc5LDg3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaTkxNV9wb3dlcl93ZWxs
X2Rlc2MgZWhsX3Bvd2VyX3dlbGxzW10gPSB7CiAJfSwKIH07CiAKK3N0YXRpYyB2b2lkCit0Z2xf
dGNfY29sZF9yZXF1ZXN0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBib29sIGJsb2Nr
KQoreworCWNvbnN0IGt0aW1lX3QgdGltZW91dCA9IGt0aW1lX2FkZF9tcyhrdGltZV9nZXRfcmF3
KCksIDUpOworCXU4IHRyaWVzID0gMDsKKwlpbnQgcmV0OworCisJZG8geworCQl1MzIgbG93X3Zh
bCA9IDAsIGhpZ2hfdmFsOworCisJCWlmIChibG9jaykKKwkJCWhpZ2hfdmFsID0gVEdMX1BDT0RF
X0VYSVRfVENDT0xEX0RBVEFfSF9CTE9DS19SRVE7CisJCWVsc2UKKwkJCWhpZ2hfdmFsID0gVEdM
X1BDT0RFX0VYSVRfVENDT0xEX0RBVEFfSF9VTkJMT0NLX1JFUTsKKworCQkvKgorCQkgKiBTcGVj
IHN0YXRlcyB0aGF0IHdlIHNob3VsZCB0aW1lb3V0IHRoZSByZXF1ZXN0IGFmdGVyIDIwMHVzCisJ
CSAqIGJ1dCB0aGUgZnVuY3Rpb24gYmVsb3cgd2lsbCB0aW1lb3V0IGFmdGVyIDUwMHVzCisJCSAq
LworCQlyZXQgPSBzYW5keWJyaWRnZV9wY29kZV9yZWFkKGk5MTUsIFRHTF9QQ09ERV9UQ0NPTEQs
ICZsb3dfdmFsLAorCQkJCQkgICAgICZoaWdoX3ZhbCk7CisJCWlmIChyZXQgPT0gMCkgeworCQkJ
aWYgKGJsb2NrICYmCisJCQkgICAgKGxvd192YWwgJiBUR0xfUENPREVfRVhJVF9UQ0NPTERfREFU
QV9MX0VYSVRfRkFJTEVEKSkKKwkJCQlyZXQgPSAtRUlPOworCQkJZWxzZQorCQkJCWJyZWFrOwor
CQl9CisKKwkJaWYgKHJldCA9PSAtRUFHQUlOKQorCQkJbXNsZWVwKDEpOworCQllbHNlCisJCQl0
cmllcysrOworCX0gd2hpbGUgKHRyaWVzIDwgMyAmJiBrdGltZV9jb21wYXJlKHRpbWVvdXQsIGt0
aW1lX2dldF9yYXcoKSkgPiAwKTsKKworCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJUQyBjb2xk
ICVzYmxvY2sgJXNcbiIsIGJsb2NrID8gIiIgOiAidW4iLAorCQkgICAgcmV0ID8gImZhaWxlZCIg
OiAic3VjY2VlZGVkIik7Cit9CisKK3N0YXRpYyB2b2lkCit0Z2xfdGNfY29sZF9vZmZfcG93ZXJf
d2VsbF9lbmFibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCisJCQkJICBzdHJ1Y3Qg
aTkxNV9wb3dlcl93ZWxsICpwb3dlcl93ZWxsKQoreworCXRnbF90Y19jb2xkX3JlcXVlc3QoaTkx
NSwgdHJ1ZSk7Cit9CisKK3N0YXRpYyB2b2lkCit0Z2xfdGNfY29sZF9vZmZfcG93ZXJfd2VsbF9k
aXNhYmxlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAorCQkJCSAgIHN0cnVjdCBpOTE1
X3Bvd2VyX3dlbGwgKnBvd2VyX3dlbGwpCit7CisJdGdsX3RjX2NvbGRfcmVxdWVzdChpOTE1LCBm
YWxzZSk7Cit9CisKK3N0YXRpYyB2b2lkCit0Z2xfdGNfY29sZF9vZmZfcG93ZXJfd2VsbF9zeW5j
X2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAorCQkJCSAgIHN0cnVjdCBpOTE1X3Bv
d2VyX3dlbGwgKnBvd2VyX3dlbGwpCit7CisJaWYgKHBvd2VyX3dlbGwtPmNvdW50ID4gMCkKKwkJ
dGdsX3RjX2NvbGRfb2ZmX3Bvd2VyX3dlbGxfZW5hYmxlKGk5MTUsIHBvd2VyX3dlbGwpOworCWVs
c2UKKwkJdGdsX3RjX2NvbGRfb2ZmX3Bvd2VyX3dlbGxfZGlzYWJsZShpOTE1LCBwb3dlcl93ZWxs
KTsKK30KKworc3RhdGljIGJvb2wKK3RnbF90Y19jb2xkX29mZl9wb3dlcl93ZWxsX2lzX2VuYWJs
ZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgICAgIHN0cnVjdCBp
OTE1X3Bvd2VyX3dlbGwgKnBvd2VyX3dlbGwpCit7CisJLyoKKwkgKiBOb3QgdGhlIGNvcnJlY3Rs
eSBpbXBsZW1lbnRhdGlvbiBidXQgdGhlcmUgaXMgbm8gd2F5IHRvIGp1c3QgcmVhZCBpdAorCSAq
IGZyb20gUENPREUsIHNvIHJldHVybmluZyBjb3VudCB0byBhdm9pZCBzdGF0ZSBtaXNtYXRjaCBl
cnJvcnMKKwkgKi8KKwlyZXR1cm4gcG93ZXJfd2VsbC0+Y291bnQ7Cit9CisKK3N0YXRpYyBjb25z
dCBzdHJ1Y3QgaTkxNV9wb3dlcl93ZWxsX29wcyB0Z2xfdGNfY29sZF9vZmZfb3BzID0geworCS5z
eW5jX2h3ID0gdGdsX3RjX2NvbGRfb2ZmX3Bvd2VyX3dlbGxfc3luY19odywKKwkuZW5hYmxlID0g
dGdsX3RjX2NvbGRfb2ZmX3Bvd2VyX3dlbGxfZW5hYmxlLAorCS5kaXNhYmxlID0gdGdsX3RjX2Nv
bGRfb2ZmX3Bvd2VyX3dlbGxfZGlzYWJsZSwKKwkuaXNfZW5hYmxlZCA9IHRnbF90Y19jb2xkX29m
Zl9wb3dlcl93ZWxsX2lzX2VuYWJsZWQsCit9OworCiBzdGF0aWMgY29uc3Qgc3RydWN0IGk5MTVf
cG93ZXJfd2VsbF9kZXNjIHRnbF9wb3dlcl93ZWxsc1tdID0gewogCXsKIAkJLm5hbWUgPSAiYWx3
YXlzLW9uIiwKQEAgLTQyODksNiArNDM4NywxMiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGk5MTVf
cG93ZXJfd2VsbF9kZXNjIHRnbF9wb3dlcl93ZWxsc1tdID0gewogCQkJLmhzdy5pcnFfcGlwZV9t
YXNrID0gQklUKFBJUEVfRCksCiAJCX0sCiAJfSwKKwl7CisJCS5uYW1lID0gIlRDIGNvbGQgb2Zm
IiwKKwkJLmRvbWFpbnMgPSBUR0xfVENfQ09MRF9PRkZfUE9XRVJfRE9NQUlOUywKKwkJLm9wcyA9
ICZ0Z2xfdGNfY29sZF9vZmZfb3BzLAorCQkuaWQgPSBESVNQX1BXX0lEX05PTkUsCisJfSwKIH07
CiAKIHN0YXRpYyBpbnQKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGlzcGxheV9wb3dlci5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3Bvd2VyLmgKaW5kZXggZGE2NGE1ZWRhZTdhLi4wNzA0NTdlN2I5NDggMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5o
CkBAIC03Niw2ICs3Niw3IEBAIGVudW0gaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4gewogCVBP
V0VSX0RPTUFJTl9NT0RFU0VULAogCVBPV0VSX0RPTUFJTl9HVF9JUlEsCiAJUE9XRVJfRE9NQUlO
X0RQTExfRENfT0ZGLAorCVBPV0VSX0RPTUFJTl9UQ19DT0xEX09GRiwKIAlQT1dFUl9ET01BSU5f
SU5JVCwKIAogCVBPV0VSX0RPTUFJTl9OVU0sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3RjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3RjLmMKaW5kZXggNzQwNjFiZjliMmI5Li5hYjg3MTg2YjdlNGIgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfdGMuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMKQEAgLTUzLDE2ICs1MywyNyBAQCB0Y19wb3J0X2xv
YWRfZmlhX3BhcmFtcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAl9CiB9CiAKK3N0
YXRpYyBlbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluCit0Y19jb2xkX2dldF9wb3dlcl9k
b21haW4oc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCit7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNlLmJhc2UuZGV2KTsK
KworCWlmIChJTlRFTF9HRU4oaTkxNSkgPT0gMTEpCisJCXJldHVybiBpbnRlbF9sZWdhY3lfYXV4
X3RvX3Bvd2VyX2RvbWFpbihkaWdfcG9ydC0+YXV4X2NoKTsKKwllbHNlCisJCXJldHVybiBQT1dF
Ul9ET01BSU5fVENfQ09MRF9PRkY7Cit9CisKIHN0YXRpYyBpbnRlbF93YWtlcmVmX3QKIHRjX2Nv
bGRfYmxvY2soc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiB7CiAJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNlLmJhc2UuZGV2
KTsKIAllbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFpbjsKIAotCWlmIChJTlRF
TF9HRU4oaTkxNSkgIT0gMTEgfHwgIWRpZ19wb3J0LT50Y19sZWdhY3lfcG9ydCkKKwlpZiAoSU5U
RUxfR0VOKGk5MTUpID09IDExICYmICFkaWdfcG9ydC0+dGNfbGVnYWN5X3BvcnQpCiAJCXJldHVy
biAwOwogCi0JZG9tYWluID0gaW50ZWxfbGVnYWN5X2F1eF90b19wb3dlcl9kb21haW4oZGlnX3Bv
cnQtPmF1eF9jaCk7CisJZG9tYWluID0gdGNfY29sZF9nZXRfcG93ZXJfZG9tYWluKGRpZ19wb3J0
KTsKIAlyZXR1cm4gaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQoaTkxNSwgZG9tYWluKTsKIH0KIApA
QCAtODAsNyArOTEsNyBAQCB0Y19jb2xkX3VuYmxvY2soc3RydWN0IGludGVsX2RpZ2l0YWxfcG9y
dCAqZGlnX3BvcnQsIGludGVsX3dha2VyZWZfdCB3YWtlcmVmKQogCWlmICh3YWtlcmVmID09IDAp
CiAJCXJldHVybjsKIAotCWRvbWFpbiA9IGludGVsX2xlZ2FjeV9hdXhfdG9fcG93ZXJfZG9tYWlu
KGRpZ19wb3J0LT5hdXhfY2gpOworCWRvbWFpbiA9IHRjX2NvbGRfZ2V0X3Bvd2VyX2RvbWFpbihk
aWdfcG9ydCk7CiAJaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5bmMoaTkxNSwgZG9tYWluLCB3
YWtlcmVmKTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKaW5kZXggMDM4OWFmYTIzNjFmLi40
YWUxYjZkZmExOGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaApAQCAtOTExMSw2ICs5MTExLDEw
IEBAIGVudW0gewogI2RlZmluZSAgIElDTF9QQ09ERV9FWElUX1RDQ09MRAkJCTB4MTIKICNkZWZp
bmUgICBIU1dfUENPREVfREVfV1JJVEVfRlJFUV9SRVEJCTB4MTcKICNkZWZpbmUgICBESVNQTEFZ
X0lQU19DT05UUk9MCQkJMHgxOQorI2RlZmluZSAgIFRHTF9QQ09ERV9UQ0NPTEQJCQkweDI2Cisj
ZGVmaW5lICAgICBUR0xfUENPREVfRVhJVF9UQ0NPTERfREFUQV9MX0VYSVRfRkFJTEVECVJFR19C
SVQoMCkKKyNkZWZpbmUgICAgIFRHTF9QQ09ERV9FWElUX1RDQ09MRF9EQVRBX0hfQkxPQ0tfUkVR
CTAKKyNkZWZpbmUgICAgIFRHTF9QQ09ERV9FWElUX1RDQ09MRF9EQVRBX0hfVU5CTE9DS19SRVEJ
UkVHX0JJVCgwKQogICAgICAgICAgICAgLyogU2VlIGFsc28gSVBTX0NUTCAqLwogI2RlZmluZSAg
ICAgSVBTX1BDT0RFX0NPTlRST0wJCQkoMSA8PCAzMCkKICNkZWZpbmUgICBIU1dfUENPREVfRFlO
QU1JQ19EVVRZX0NZQ0xFX0NPTlRST0wJMHgxQQotLSAKMi4yNi4wCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0Cklu
dGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5v
cmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

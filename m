Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 843C28479F
	for <lists+intel-gfx@lfdr.de>; Wed,  7 Aug 2019 10:37:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F08FE89870;
	Wed,  7 Aug 2019 08:37:26 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 09C9389870
 for <intel-gfx@lists.freedesktop.org>; Wed,  7 Aug 2019 08:37:24 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17914069-1500050 
 for multiple; Wed, 07 Aug 2019 09:37:05 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  7 Aug 2019 09:37:02 +0100
Message-Id: <20190807083702.16349-3-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190807083702.16349-1-chris@chris-wilson.co.uk>
References: <20190807083702.16349-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/3] drm/i915: Defer final intel_wakeref_put to
 process context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgd2UgbmVlZCB0byBhY3F1aXJlIGEgbXV0ZXggdG8gc2VyaWFsaXNlIHRoZSBmaW5hbAppbnRl
bF93YWtlcmVmX3B1dCwgd2UgbmVlZCB0byBlbnN1cmUgdGhhdCB3ZSBhcmUgaW4gcHJvY2VzcyBj
b250ZXh0IGF0CnRoYXQgdGltZS4gSG93ZXZlciwgd2Ugd2FudCB0byBhbGxvdyBvcGVyYXRpb24g
b24gdGhlIGludGVsX3dha2VyZWYgZnJvbQppbnNpZGUgdGltZXIgYW5kIG90aGVyIGhhcmRpcnEg
Y29udGV4dCwgd2hpY2ggbWVhbnMgdGhhdCBuZWVkIHRvIGRlZmVyCnRoYXQgZmluYWwgcHV0IHRv
IGEgd29ya3F1ZXVlLgoKSW5zaWRlIHRoZSBmaW5hbCB3YWtlcmVmIHB1dHMsIHdlIGFyZSBzYWZl
IHRvIG9wZXJhdGUgaW4gYW55IGNvbnRleHQsIGFzCndlIGFyZSBzaW1wbHkgbWFya2luZyB1cCB0
aGUgSFcgYW5kIHN0YXRlIHRyYWNraW5nIGZvciB0aGUgcG90ZW50aWFsCnNsZWVwLiBJdCdzIG9u
bHkgdGhlIHNlcmlhbGlzYXRpb24gd2l0aCB0aGUgcG90ZW50aWFsIHNsZWVwaW5nIGdldHRpbmcK
dGhhdCByZXF1aXJlcyBjYXJlZnVsIHdhaXQgYXZvaWRhbmNlLiBUaGlzIGFsbG93cyB1cyB0byBy
ZXRhaW4gdGhlCmltbWVkaWF0ZSBwcm9jZXNzaW5nIGFzIGJlZm9yZSAod2Ugb25seSBuZWVkIHRv
IHNsZWVwIG92ZXIgdGhlIHNhbWUKcmFjZXMgYXMgdGhlIGN1cnJlbnQgbXV0ZXhfbG9jaykuCgp2
MjogQWRkIGEgc2VsZnRlc3QgdG8gZW5zdXJlIHdlIGV4ZXJjaXNlIHRoZSBjb2RlIHdoaWxlIGxv
Y2tkZXAgd2F0Y2hlcy4KdjM6IFRoYXQgdGVzdCB3YXMgZXh0cmVtZWx5IGxvdWQgYW5kIGNvbXBs
YWluZWQgYWJvdXQgbWFueSB0aGluZ3MhCgpCdWd6aWxsYTogaHR0cHM6Ly9idWdzLmZyZWVkZXNr
dG9wLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTExMjk1ClJlZmVyZW5jZXM6IGh0dHBzOi8vYnVncy5m
cmVlZGVza3RvcC5vcmcvc2hvd19idWcuY2dpP2lkPTExMTI0NQpSZWZlcmVuY2VzOiBodHRwczov
L2J1Z3MuZnJlZWRlc2t0b3Aub3JnL3Nob3dfYnVnLmNnaT9pZD0xMTEyNTYKRml4ZXM6IDE4Mzk4
OTA0Y2E5ZSAoImRybS9pOTE1OiBPbmx5IHJlY292ZXIgYWN0aXZlIGVuZ2luZXMiKQpGaXhlczog
NTFmYmQ4ZGU4N2RjICgiZHJtL2k5MTUvcG11OiBBdG9taWNhbGx5IGFjcXVpcmUgdGhlIGd0X3Bt
IHdha2VyZWYiKQpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNv
bi5jby51az4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+CkNj
OiBNaWthIEt1b3BwYWxhIDxtaWthLmt1b3BwYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyAgICAgICAgfCAxMyArLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jICAgICB8ICAxICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jICAgICB8IDM4ICsrKy0tLS0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmggICAgIHwgMTggKystLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYyAgICAgICAgIHwgMjggKysrLS0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaCAgICAgICAgIHwgMjIgKysrKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgICB8ICA0ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYyAgICAgfCAyOCArKysrKysr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuaCAgICAgfCAxNCArKysr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYyAgfCA4MyArKysr
KysrKysrKysrKysrKysrCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNz
aW9uLmMgfCAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICAg
ICAgIHwgIDQgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgICAg
IHwgMjYgKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmMgICAgICAg
ICAgfCA4MiArKysrKysrKysrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dh
a2VyZWYuaCAgICAgICAgICB8IDYyICsrKysrKysrKy0tLS0tCiAuLi4vZHJtL2k5MTUvc2VsZnRl
c3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCAgfCAgNSArLQogMTYgZmlsZXMgY2hhbmdlZCwgMzAx
IGluc2VydGlvbnMoKyksIDEzMSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYwogY3JlYXRlIG1vZGUgMTAwNjQ0
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5oCiBjcmVhdGUgbW9kZSAx
MDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX3BtLmMKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCmluZGV4IDcyOTIyNzAzYWY0OS4uMTdlMzYx
ODI0MWM1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYwpAQCAtMTMwLDcg
KzEzMCw5IEBAIHN0YXRpYyBib29sIHN3aXRjaF90b19rZXJuZWxfY29udGV4dF9zeW5jKHN0cnVj
dCBpbnRlbF9ndCAqZ3QpCiAJCX0KIAl9IHdoaWxlIChpOTE1X3JldGlyZV9yZXF1ZXN0cyhndC0+
aTkxNSkgJiYgcmVzdWx0KTsKIAotCUdFTV9CVUdfT04oZ3QtPmF3YWtlKTsKKwlpZiAoaW50ZWxf
Z3RfcG1fd2FpdF9mb3JfaWRsZShndCkpCisJCXJlc3VsdCA9IGZhbHNlOworCiAJcmV0dXJuIHJl
c3VsdDsKIH0KIApAQCAtMTYxLDEzICsxNjMsNiBAQCB2b2lkIGk5MTVfZ2VtX3N1c3BlbmQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIAltdXRleF91bmxvY2soJmk5MTUtPmRybS5z
dHJ1Y3RfbXV0ZXgpOwogCi0JLyoKLQkgKiBBc3NlcnQgdGhhdCB3ZSBzdWNjZXNzZnVsbHkgZmx1
c2hlZCBhbGwgdGhlIHdvcmsgYW5kCi0JICogcmVzZXQgdGhlIEdQVSBiYWNrIHRvIGl0cyBpZGxl
LCBsb3cgcG93ZXIgc3RhdGUuCi0JICovCi0JR0VNX0JVR19PTihpOTE1LT5ndC5hd2FrZSk7Ci0J
Zmx1c2hfd29yaygmaTkxNS0+Z2VtLmlkbGVfd29yayk7Ci0KIAljYW5jZWxfZGVsYXllZF93b3Jr
X3N5bmMoJmk5MTUtPmd0LmhhbmdjaGVjay53b3JrKTsKIAogCWk5MTVfZ2VtX2RyYWluX2ZyZWVk
X29iamVjdHMoaTkxNSk7CkBAIC0yNDQsOCArMjM5LDYgQEAgdm9pZCBpOTE1X2dlbV9yZXN1bWUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJR0VNX1RSQUNFKCJcbiIpOwogCi0J
V0FSTl9PTihpOTE1LT5ndC5hd2FrZSk7Ci0KIAltdXRleF9sb2NrKCZpOTE1LT5kcm0uc3RydWN0
X211dGV4KTsKIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldCgmaTkxNS0+dW5jb3JlLCBGT1JD
RVdBS0VfQUxMKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpp
bmRleCBkMzhjMTE0YjA5NjQuLmI1N2FkYzk3M2UyYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTE1NjgsNSArMTU2OCw2IEBAIGludGVsX2VuZ2luZV9m
aW5kX2FjdGl2ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIH0KIAog
I2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQorI2luY2x1ZGUgInNlbGZ0
ZXN0X2VuZ2luZS5jIgogI2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZV9jcy5jIgogI2VuZGlmCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCmluZGV4IDAzMzYyMDQ5ODhk
Ni4uNmIxNWUzMzM1ZGQ2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
cG0uYwpAQCAtMzcsMjggKzM3LDYgQEAgc3RhdGljIGludCBfX2VuZ2luZV91bnBhcmsoc3RydWN0
IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9w
bV9nZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWludGVsX3dha2VyZWZf
Z2V0KCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5l
X3VucGFyayk7Ci19Ci0KLXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQotewotCS8qCi0JICogV2UgYXJlIGNvbW1pdHRlZCBub3cgdG8gcGFya2lu
ZyB0aGlzIGVuZ2luZSwgbWFrZSBzdXJlIHRoZXJlCi0JICogd2lsbCBiZSBubyBtb3JlIGludGVy
cnVwdHMgYXJyaXZpbmcgbGF0ZXIgYW5kIHRoZSBlbmdpbmUKLQkgKiBpcyB0cnVseSBpZGxlLgot
CSAqLwotCWlmICh3YWl0X2ZvcihpbnRlbF9lbmdpbmVfaXNfaWRsZShlbmdpbmUpLCAxMCkpIHsK
LQkJc3RydWN0IGRybV9wcmludGVyIHAgPSBkcm1fZGVidWdfcHJpbnRlcihfX2Z1bmNfXyk7Ci0K
LQkJZGV2X2VycihlbmdpbmUtPmk5MTUtPmRybS5kZXYsCi0JCQkiJXMgaXMgbm90IGlkbGUgYmVm
b3JlIHBhcmtpbmdcbiIsCi0JCQllbmdpbmUtPm5hbWUpOwotCQlpbnRlbF9lbmdpbmVfZHVtcChl
bmdpbmUsICZwLCBOVUxMKTsKLQl9Ci19Ci0KIHN0YXRpYyBib29sIHN3aXRjaF90b19rZXJuZWxf
Y29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnE7CkBAIC0xMzYsMTIgKzExNCwxOCBAQCBzdGF0aWMgaW50IF9fZW5naW5lX3Bh
cmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVs
X2VuZ2luZV9wbV9wdXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWludGVs
X3dha2VyZWZfcHV0KCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYs
IF9fZW5naW5lX3BhcmspOwotfQorc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF93YWtlcmVmX29w
cyB3Zl9vcHMgPSB7CisJLmdldCA9IF9fZW5naW5lX3VucGFyaywKKwkucHV0ID0gX19lbmdpbmVf
cGFyaywKK307CiAKIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfX3BtKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIHsKLQlpbnRlbF93YWtlcmVmX2luaXQoJmVuZ2luZS0+d2FrZXJlZik7
CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVf
cG07CisKKwlpbnRlbF93YWtlcmVmX2luaXQoJmVuZ2luZS0+d2FrZXJlZiwgcnBtLCAmd2Zfb3Bz
KTsKIH0KKworI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQorI2luY2x1
ZGUgInNlbGZ0ZXN0X2VuZ2luZV9wbS5jIgorI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9wbS5oCmluZGV4IDAxNWFjNzJkN2FkMC4uNzM5YzUwZmVmY2VmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaApAQCAtMTAsMjQgKzEwLDI2
IEBACiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2Fr
ZXJlZi5oIgogCi1zdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKLQotdm9pZCBpbnRlbF9lbmdpbmVf
cG1fZ2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7Ci12b2lkIGludGVsX2VuZ2lu
ZV9wbV9wdXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKLQogc3RhdGljIGlubGlu
ZSBib29sCiBpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoY29uc3Qgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSgmZW5naW5l
LT53YWtlcmVmKTsKIH0KIAotc3RhdGljIGlubGluZSBib29sCi1pbnRlbF9lbmdpbmVfcG1fZ2V0
X2lmX2F3YWtlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRpYyBpbmxpbmUg
dm9pZCBpbnRlbF9lbmdpbmVfcG1fZ2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
K3sKKwlpbnRlbF93YWtlcmVmX2dldCgmZW5naW5lLT53YWtlcmVmKTsKK30KKworc3RhdGljIGlu
bGluZSBib29sIGludGVsX2VuZ2luZV9wbV9nZXRfaWZfYXdha2Uoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2dldF9pZl9hY3RpdmUoJmVu
Z2luZS0+d2FrZXJlZik7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9lbmdpbmVfcG1f
cHV0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpbnRlbF93YWtlcmVmX3B1
dCgmZW5naW5lLT53YWtlcmVmKTsKK30KIAogdm9pZCBpbnRlbF9lbmdpbmVfaW5pdF9fcG0oc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3BtLmMKaW5kZXggNmM4OTcwMjcxYTdmLi4xMzYzZTA2OWVjODMgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwpAQCAtMTcsNyArMTcsNyBAQCBzdGF0aWMgdm9pZCBwbV9u
b3RpZnkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludCBzdGF0ZSkKIAlibG9ja2lu
Z19ub3RpZmllcl9jYWxsX2NoYWluKCZpOTE1LT5ndC5wbV9ub3RpZmljYXRpb25zLCBzdGF0ZSwg
aTkxNSk7CiB9CiAKLXN0YXRpYyBpbnQgaW50ZWxfZ3RfdW5wYXJrKHN0cnVjdCBpbnRlbF93YWtl
cmVmICp3ZikKK3N0YXRpYyBpbnQgX19ndF91bnBhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndm
KQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBjb250YWluZXJfb2Yod2YsIHR5cGVvZigqZ3Qp
LCB3YWtlcmVmKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1OwpA
QCAtNTMsMTQgKzUzLDcgQEAgc3RhdGljIGludCBpbnRlbF9ndF91bnBhcmsoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2d0X3BtX2dldChzdHJ1
Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0gPSAmZ3Qt
Pmk5MTUtPnJ1bnRpbWVfcG07Ci0KLQlpbnRlbF93YWtlcmVmX2dldChycG0sICZndC0+d2FrZXJl
ZiwgaW50ZWxfZ3RfdW5wYXJrKTsKLX0KLQotc3RhdGljIGludCBpbnRlbF9ndF9wYXJrKHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyBpbnQgX19ndF9wYXJrKHN0cnVjdCBpbnRlbF93
YWtlcmVmICp3ZikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9CiAJCWNvbnRh
aW5lcl9vZih3ZiwgdHlwZW9mKCppOTE1KSwgZ3Qud2FrZXJlZik7CkBAIC03NCwyMiArNjcsMjUg
QEAgc3RhdGljIGludCBpbnRlbF9ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIAlp
ZiAoSU5URUxfR0VOKGk5MTUpID49IDYpCiAJCWdlbjZfcnBzX2lkbGUoaTkxNSk7CiAKKwkvKiBF
dmVyeXRoaW5nIHN3aXRjaGVkIG9mZiwgZmx1c2ggYW55IHJlc2lkdWFsIGludGVycnVwdCBqdXN0
IGluIGNhc2UgKi8KKwlpbnRlbF9zeW5jaHJvbml6ZV9pcnEoaTkxNSk7CisKIAlHRU1fQlVHX09O
KCF3YWtlcmVmKTsKIAlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChpOTE1LCBQT1dFUl9ET01BSU5f
R1RfSVJRLCB3YWtlcmVmKTsKIAogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2d0X3BtX3B1
dChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0g
PSAmZ3QtPmk5MTUtPnJ1bnRpbWVfcG07Ci0KLQlpbnRlbF93YWtlcmVmX3B1dChycG0sICZndC0+
d2FrZXJlZiwgaW50ZWxfZ3RfcGFyayk7Ci19CitzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX3dh
a2VyZWZfb3BzIHdmX29wcyA9IHsKKwkuZ2V0ID0gX19ndF91bnBhcmssCisJLnB1dCA9IF9fZ3Rf
cGFyaywKKwkuZmxhZ3MgPSBJTlRFTF9XQUtFUkVGX1BVVF9BU1lOQywKK307CiAKIHZvaWQgaW50
ZWxfZ3RfcG1faW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewotCWludGVsX3dha2Vy
ZWZfaW5pdCgmZ3QtPndha2VyZWYpOworCWludGVsX3dha2VyZWZfaW5pdCgmZ3QtPndha2VyZWYs
ICZndC0+aTkxNS0+cnVudGltZV9wbSwgJndmX29wcyk7CisKIAlCTE9DS0lOR19JTklUX05PVElG
SUVSX0hFQUQoJmd0LT5wbV9ub3RpZmljYXRpb25zKTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2d0X3BtLmgKaW5kZXggZThhMThkNGIyN2M5Li41NzYzM2Y1MzhkZGIgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaApAQCAtMTcsMTQgKzE3LDMyIEBAIGVudW0gewog
CUlOVEVMX0dUX1BBUkssCiB9OwogCi12b2lkIGludGVsX2d0X3BtX2dldChzdHJ1Y3QgaW50ZWxf
Z3QgKmd0KTsKLXZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOworc3Rh
dGljIGlubGluZSBib29sCitpbnRlbF9ndF9wbV9pc19hd2FrZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Z3QgKmd0KQoreworCXJldHVybiBpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSgmZ3QtPndha2VyZWYp
OworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3RfcG1fZ2V0KHN0cnVjdCBpbnRlbF9n
dCAqZ3QpCit7CisJaW50ZWxfd2FrZXJlZl9nZXQoJmd0LT53YWtlcmVmKTsKK30KIAogc3RhdGlj
IGlubGluZSBib29sIGludGVsX2d0X3BtX2dldF9pZl9hd2FrZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0
KQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2dldF9pZl9hY3RpdmUoJmd0LT53YWtlcmVmKTsK
IH0KIAorc3RhdGljIGlubGluZSB2b2lkIGludGVsX2d0X3BtX3B1dChzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0KQoreworCWludGVsX3dha2VyZWZfcHV0KCZndC0+d2FrZXJlZik7Cit9CisKK3N0YXRpYyBp
bmxpbmUgaW50IGludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX2d0ICpndCkK
K3sKKwlyZXR1cm4gaW50ZWxfd2FrZXJlZl93YWl0X2Zvcl9pZGxlKCZndC0+d2FrZXJlZik7Cit9
CisKIHZvaWQgaW50ZWxfZ3RfcG1faW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIAog
dm9pZCBpbnRlbF9ndF9zYW5pdGl6ZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBib29sIGZvcmNlKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXggMjMyZjQwZmNiNDkwLi4xYTAxMTY3
NTFkMTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0xMzksNiArMTM5LDcg
QEAKICNpbmNsdWRlICJpOTE1X3ZncHUuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG0uaCIK
ICNpbmNsdWRlICJpbnRlbF9ndC5oIgorI2luY2x1ZGUgImludGVsX2d0X3BtLmgiCiAjaW5jbHVk
ZSAiaW50ZWxfbHJjX3JlZy5oIgogI2luY2x1ZGUgImludGVsX21vY3MuaCIKICNpbmNsdWRlICJp
bnRlbF9yZXNldC5oIgpAQCAtNTU2LDYgKzU1Nyw3IEBAIGV4ZWNsaXN0c19zY2hlZHVsZV9pbihz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGlkeCkKIAkJaW50ZWxfY29udGV4dF9nZXQoY2Up
OwogCQljZS0+aW5mbGlnaHQgPSBycS0+ZW5naW5lOwogCisJCWludGVsX2d0X3BtX2dldChjZS0+
aW5mbGlnaHQtPmd0KTsKIAkJZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShycSwgSU5U
RUxfQ09OVEVYVF9TQ0hFRFVMRV9JTik7CiAJCWludGVsX2VuZ2luZV9jb250ZXh0X2luKGNlLT5p
bmZsaWdodCk7CiAJfQpAQCAtNTg4LDYgKzU5MCw3IEBAIGV4ZWNsaXN0c19zY2hlZHVsZV9vdXQo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJaWYgKCFpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2Nv
dW50KGNlKSkgewogCQlpbnRlbF9lbmdpbmVfY29udGV4dF9vdXQoY2UtPmluZmxpZ2h0KTsKIAkJ
ZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShycSwgSU5URUxfQ09OVEVYVF9TQ0hFRFVM
RV9PVVQpOworCQlpbnRlbF9ndF9wbV9wdXQoY2UtPmluZmxpZ2h0LT5ndCk7CiAKIAkJLyoKIAkJ
ICogSWYgdGhpcyBpcyBwYXJ0IG9mIGEgdmlydHVhbCBlbmdpbmUsIGl0cyBuZXh0IHJlcXVlc3Qg
bWF5CkBAIC0yNzE5LDcgKzI3MjIsNiBAQCBzdGF0aWMgdTMyICpnZW44X2VtaXRfZmluaV9icmVh
ZGNydW1iX3JjcyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNzKQogc3RhdGlj
IHZvaWQgZXhlY2xpc3RzX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewog
CWRlbF90aW1lcl9zeW5jKCZlbmdpbmUtPmV4ZWNsaXN0cy50aW1lcik7Ci0JaW50ZWxfZW5naW5l
X3BhcmsoZW5naW5lKTsKIH0KIAogdm9pZCBpbnRlbF9leGVjbGlzdHNfc2V0X2RlZmF1bHRfc3Vi
bWlzc2lvbihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAw
MDAwMDAwMC4uZjY1YjExOGUyNjFkCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmMKQEAgLTAsMCArMSwyOCBAQAorLyoKKyAqIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisgKgorICogQ29weXJpZ2h0IMKpIDIwMTggSW50
ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5oIgorI2luY2x1
ZGUgInNlbGZ0ZXN0X2VuZ2luZS5oIgorCitpbnQgaW50ZWxfZW5naW5lX2xpdmVfc2VsZnRlc3Rz
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQoreworCXN0YXRpYyBpbnQgKCogY29uc3Qg
dGVzdHNbXSkoc3RydWN0IGludGVsX2d0ICopID0geworCQlsaXZlX2VuZ2luZV9wbV9zZWxmdGVz
dHMsCisJCU5VTEwsCisJfTsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gJmk5MTUtPmd0OworCXR5
cGVvZigqdGVzdHMpICpmbjsKKworCWZvciAoZm4gPSB0ZXN0czsgKmZuOyBmbisrKSB7CisJCWlu
dCBlcnI7CisKKwkJZXJyID0gKCpmbikoZ3QpOworCQlpZiAoZXJyKQorCQkJcmV0dXJuIGVycjsK
Kwl9CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2VuZ2luZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5hYjMyZDA5ZWM1
YTEKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9l
bmdpbmUuaApAQCAtMCwwICsxLDE0IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorICov
CisKKyNpZm5kZWYgU0VMRlRFU1RfRU5HSU5FX0gKKyNkZWZpbmUgU0VMRlRFU1RfRU5HSU5FX0gK
Kworc3RydWN0IGludGVsX2d0OworCitpbnQgbGl2ZV9lbmdpbmVfcG1fc2VsZnRlc3RzKHN0cnVj
dCBpbnRlbF9ndCAqZ3QpOworCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfZW5naW5lX3BtLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAw
Li43NWMxOTc2MTI3MDUKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9lbmdpbmVfcG0uYwpAQCAtMCwwICsxLDgzIEBACisvKgorICogU1BEWC1MaWNl
bnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOCBJbnRlbCBD
b3Jwb3JhdGlvbgorICovCisKKyNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCisjaW5jbHVkZSAi
c2VsZnRlc3RfZW5naW5lLmgiCisjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9hdG9taWMuaCIKKwor
c3RhdGljIGludCBsaXZlX2VuZ2luZV9wbSh2b2lkICphcmcpCit7CisJc3RydWN0IGludGVsX2d0
ICpndCA9IGFyZzsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRl
bF9lbmdpbmVfaWQgaWQ7CisKKwkvKgorCSAqIENoZWNrIHdlIGNhbiBjYWxsIGludGVsX2VuZ2lu
ZV9wbV9wdXQgZnJvbSBhbnkgY29udGV4dC4gTm8KKwkgKiBmYWlsdXJlcyBhcmUgcmVwb3J0ZWQg
ZGlyZWN0bHksIGJ1dCBpZiB3ZSBtZXNzIHVwIGxvY2tkZXAgc2hvdWxkCisJICogdGVsbCB1cy4K
KwkgKi8KKwlpZiAoaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZShndCkpIHsKKwkJcHJfZXJyKCJV
bmFibGUgdG8gZmx1c2ggR1QgcG0gYmVmb3JlIHRlc3RcbiIpOworCQlyZXR1cm4gLUVCVVNZOwor
CX0KKworCUdFTV9CVUdfT04oaW50ZWxfZ3RfcG1faXNfYXdha2UoZ3QpKTsKKwlmb3JfZWFjaF9l
bmdpbmUoZW5naW5lLCBndC0+aTkxNSwgaWQpIHsKKwkJY29uc3QgdHlwZW9mKCppZ3RfYXRvbWlj
X3BoYXNlcykgKnA7CisKKwkJZm9yIChwID0gaWd0X2F0b21pY19waGFzZXM7IHAtPm5hbWU7IHAr
KykgeworCQkJLyoKKwkJCSAqIEFjcXVpc2l0aW9uIGlzIGFsd2F5cyBzeW5jaHJvbm91cywgZXhj
ZXB0IGlmIHdlCisJCQkgKiBrbm93IHRoYXQgdGhlIGVuZ2luZSBpcyBhbHJlYWR5IGF3YWxlLCBp
biB3aGljaAorCQkJICogd2Ugc2hvdWxkIHVzZSBpbnRlbF9lbmdpbmVfcG1fZ2V0X2lmX2F3YWtl
KCkgdG8KKwkJCSAqIGF0b21pY2FsbHkgZ3JhYiB0aGUgd2FrZXJlZi4KKwkJCSAqCisJCQkgKiBJ
biBwcmFjdGljZSwKKwkJCSAqICAgIGludGVsX2VuZ2luZV9wbV9nZXQoKTsKKwkJCSAqICAgIGlu
dGVsX2VuZ2luZV9wbV9wdXQoKTsKKwkJCSAqIG9jY3VycyBpbiBvbmUgdGhyZWFkLCB3aGlsZSBz
aW11bHRhbmVvdXNseQorCQkJICogICAgaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZSgpOwor
CQkJICogICAgaW50ZWxfZW5naW5lX3BtX3B1dCgpOworCQkJICogb2NjdXJzIGluIGF0b21pYyBj
b250ZXh0IGluIGFub3RoZXIuCisJCQkgKi8KKwkJCUdFTV9CVUdfT04oaW50ZWxfZW5naW5lX3Bt
X2lzX2F3YWtlKGVuZ2luZSkpOworCQkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOworCisJ
CQlwLT5jcml0aWNhbF9zZWN0aW9uX2JlZ2luKCk7CisJCQlpZiAoIWludGVsX2VuZ2luZV9wbV9n
ZXRfaWZfYXdha2UoZW5naW5lKSkKKwkJCQlwcl9lcnIoImludGVsX2VuZ2luZV9wbV9nZXRfaWZf
YXdha2UoJXMpIGZhaWxlZCB1bmRlciAlc1xuIiwKKwkJCQkgICAgICAgZW5naW5lLT5uYW1lLCBw
LT5uYW1lKTsKKwkJCWVsc2UKKwkJCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CisJCQlp
bnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CisJCQlwLT5jcml0aWNhbF9zZWN0aW9uX2VuZCgp
OworCisJCQkvKiBlbmdpbmUgd2FrZXJlZiBpcyBzeW5jIChpbnN0YW50KSAqLworCQkJaWYgKGlu
dGVsX2VuZ2luZV9wbV9pc19hd2FrZShlbmdpbmUpKSB7CisJCQkJcHJfZXJyKCIlcyBpcyBzdGls
bCBhd2FrZSBhZnRlciBmbHVzaGluZyBwbVxuIiwKKwkJCQkgICAgICAgZW5naW5lLT5uYW1lKTsK
KwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0KKworCQkJLyogZ3Qgd2FrZXJlZiBpcyBhc3luYyAo
ZGVmZXJyZWQgdG8gd29ya3F1ZXVlKSAqLworCQkJaWYgKGludGVsX2d0X3BtX3dhaXRfZm9yX2lk
bGUoZ3QpKSB7CisJCQkJcHJfZXJyKCJHVCBmYWlsZWQgdG8gaWRsZVxuIik7CisJCQkJcmV0dXJu
IC1FSU5WQUw7CisJCQl9CisJCX0KKwl9CisKKwlyZXR1cm4gMDsKK30KKworaW50IGxpdmVfZW5n
aW5lX3BtX3NlbGZ0ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0YXRpYyBjb25zdCBz
dHJ1Y3QgaTkxNV9zdWJ0ZXN0IHRlc3RzW10gPSB7CisJCVNVQlRFU1QobGl2ZV9lbmdpbmVfcG0p
LAorCX07CisKKwlyZXR1cm4gaW50ZWxfZ3RfbGl2ZV9zdWJ0ZXN0cyh0ZXN0cywgZ3QpOworfQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Np
b24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMK
aW5kZXggYTc4YmQ5OWJjNmNiLi5jOTExOWI5MGQ2YWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwpAQCAtMjksNiArMjksNyBAQAog
I2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVf
cG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2luY2x1ZGUgImd0L2ludGVsX2d0X3Bt
LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfbHJjX3JlZy5oIgogI2luY2x1ZGUgImludGVsX2d1Y19z
dWJtaXNzaW9uLmgiCiAKQEAgLTUzNyw2ICs1MzgsNyBAQCBzdGF0aWMgc3RydWN0IGk5MTVfcmVx
dWVzdCAqc2NoZWR1bGVfaW4oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGludCBpZHgpCiAJaWYg
KCFycS0+aHdfY29udGV4dC0+aW5mbGlnaHQpCiAJCXJxLT5od19jb250ZXh0LT5pbmZsaWdodCA9
IHJxLT5lbmdpbmU7CiAJaW50ZWxfY29udGV4dF9pbmZsaWdodF9pbmMocnEtPmh3X2NvbnRleHQp
OworCWludGVsX2d0X3BtX2dldChycS0+ZW5naW5lLT5ndCk7CiAKIAlyZXR1cm4gaTkxNV9yZXF1
ZXN0X2dldChycSk7CiB9CkBAIC01NDksNiArNTUxLDcgQEAgc3RhdGljIHZvaWQgc2NoZWR1bGVf
b3V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCWlmICghaW50ZWxfY29udGV4dF9pbmZsaWdo
dF9jb3VudChycS0+aHdfY29udGV4dCkpCiAJCXJxLT5od19jb250ZXh0LT5pbmZsaWdodCA9IE5V
TEw7CiAKKwlpbnRlbF9ndF9wbV9wdXQocnEtPmVuZ2luZS0+Z3QpOwogCWk5MTVfcmVxdWVzdF9w
dXQocnEpOwogfQogCkBAIC0xMDc2LDcgKzEwNzksNiBAQCBzdGF0aWMgdm9pZCBndWNfaW50ZXJy
dXB0c19yZWxlYXNlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAKIHN0YXRpYyB2b2lkIGd1Y19zdWJt
aXNzaW9uX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewotCWludGVsX2Vu
Z2luZV9wYXJrKGVuZ2luZSk7CiAJaW50ZWxfZW5naW5lX3VucGluX2JyZWFkY3J1bWJzX2lycShl
bmdpbmUpOwogCWVuZ2luZS0+ZmxhZ3MgJj0gfkk5MTVfRU5HSU5FX05FRURTX0JSRUFEQ1JVTUJf
VEFTS0xFVDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdm
cy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKaW5kZXggNjNiNTk5ZjU4
NGRiLi42OGE2YjAwMmM5YmEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZGVidWdmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCkBAIC0z
OSw2ICszOSw3IEBACiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9wc3IuaCIKIAogI2luY2x1ZGUg
ImdlbS9pOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIKICNp
bmNsdWRlICJndC9pbnRlbF9yZXNldC5oIgogI2luY2x1ZGUgImd0L3VjL2ludGVsX2d1Y19zdWJt
aXNzaW9uLmgiCiAKQEAgLTM2NjQsNiArMzY2NSw5IEBAIGk5MTVfZHJvcF9jYWNoZXNfc2V0KHZv
aWQgKmRhdGEsIHU2NCB2YWwpCiAJCQlpOTE1X3JldGlyZV9yZXF1ZXN0cyhpOTE1KTsKIAogCQlt
dXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJCWlmIChyZXQgPT0gMCAm
JiB2YWwgJiBEUk9QX0lETEUpCisJCQlyZXQgPSBpbnRlbF9ndF9wbV93YWl0X2Zvcl9pZGxlKCZp
OTE1LT5ndCk7CiAJfQogCiAJaWYgKHZhbCAmIERST1BfUkVTRVRfQUNUSVZFICYmIGludGVsX2d0
X3Rlcm1pbmFsbHlfd2VkZ2VkKCZpOTE1LT5ndCkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRl
eCA3ZWZmZjE0YjkxMzcuLmY2NzE5NzMzNmVlNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBA
IC04OTQsMTkgKzg5NCw2IEBAIHZvaWQgaTkxNV9nZW1fcnVudGltZV9zdXNwZW5kKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1KQogCX0KIH0KIAotc3RhdGljIGludCB3YWl0X2Zvcl9lbmdp
bmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCi17Ci0JaWYgKHdhaXRfZm9yKGludGVsX2VuZ2luZXNf
YXJlX2lkbGUoZ3QpLCBJOTE1X0lETEVfRU5HSU5FU19USU1FT1VUKSkgewotCQlkZXZfZXJyKGd0
LT5pOTE1LT5kcm0uZGV2LAotCQkJIkZhaWxlZCB0byBpZGxlIGVuZ2luZXMsIGRlY2xhcmluZyB3
ZWRnZWQhXG4iKTsKLQkJR0VNX1RSQUNFX0RVTVAoKTsKLQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChn
dCk7Ci0JCXJldHVybiAtRUlPOwotCX0KLQotCXJldHVybiAwOwotfQotCiBzdGF0aWMgbG9uZwog
d2FpdF9mb3JfdGltZWxpbmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkgICB1
bnNpZ25lZCBpbnQgZmxhZ3MsIGxvbmcgdGltZW91dCkKQEAgLTk1NCwyNyArOTQxLDIwIEBAIGlu
dCBpOTE1X2dlbV93YWl0X2Zvcl9pZGxlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAog
CQkJICAgdW5zaWduZWQgaW50IGZsYWdzLCBsb25nIHRpbWVvdXQpCiB7CiAJLyogSWYgdGhlIGRl
dmljZSBpcyBhc2xlZXAsIHdlIGhhdmUgbm8gcmVxdWVzdHMgb3V0c3RhbmRpbmcgKi8KLQlpZiAo
IVJFQURfT05DRShpOTE1LT5ndC5hd2FrZSkpCisJaWYgKCFpbnRlbF9ndF9wbV9pc19hd2FrZSgm
aTkxNS0+Z3QpKQogCQlyZXR1cm4gMDsKIAotCUdFTV9UUkFDRSgiZmxhZ3M9JXggKCVzKSwgdGlt
ZW91dD0lbGQlcywgYXdha2U/PSVzXG4iLAorCUdFTV9UUkFDRSgiZmxhZ3M9JXggKCVzKSwgdGlt
ZW91dD0lbGQlc1xuIiwKIAkJICBmbGFncywgZmxhZ3MgJiBJOTE1X1dBSVRfTE9DS0VEID8gImxv
Y2tlZCIgOiAidW5sb2NrZWQiLAotCQkgIHRpbWVvdXQsIHRpbWVvdXQgPT0gTUFYX1NDSEVEVUxF
X1RJTUVPVVQgPyAiIChmb3JldmVyKSIgOiAiIiwKLQkJICB5ZXNubyhpOTE1LT5ndC5hd2FrZSkp
OworCQkgIHRpbWVvdXQsIHRpbWVvdXQgPT0gTUFYX1NDSEVEVUxFX1RJTUVPVVQgPyAiIChmb3Jl
dmVyKSIgOiAiIik7CiAKIAl0aW1lb3V0ID0gd2FpdF9mb3JfdGltZWxpbmVzKGk5MTUsIGZsYWdz
LCB0aW1lb3V0KTsKIAlpZiAodGltZW91dCA8IDApCiAJCXJldHVybiB0aW1lb3V0OwogCiAJaWYg
KGZsYWdzICYgSTkxNV9XQUlUX0xPQ0tFRCkgewotCQlpbnQgZXJyOwotCiAJCWxvY2tkZXBfYXNz
ZXJ0X2hlbGQoJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCi0JCWVyciA9IHdhaXRfZm9yX2Vu
Z2luZXMoJmk5MTUtPmd0KTsKLQkJaWYgKGVycikKLQkJCXJldHVybiBlcnI7Ci0KIAkJaTkxNV9y
ZXRpcmVfcmVxdWVzdHMoaTkxNSk7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF93YWtlcmVmLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVm
LmMKaW5kZXggMDZiZDhiMjE1Y2MyLi5kNDQ0M2U4MWMxYzggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF93YWtlcmVmLmMKQEAgLTQsMjUgKzQsMjUgQEAKICAqIENvcHlyaWdodCDCqSAyMDE5IElu
dGVsIENvcnBvcmF0aW9uCiAgKi8KIAorI2luY2x1ZGUgPGxpbnV4L3dhaXRfYml0Lmg+CisKICNp
bmNsdWRlICJpbnRlbF9ydW50aW1lX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2FrZXJlZi5oIgog
Ci1zdGF0aWMgdm9pZCBycG1fZ2V0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sIHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyB2b2lkIHJwbV9nZXQoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKQogewotCXdmLT53YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXQocnBtKTsK
Kwl3Zi0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KHdmLT5ycG0pOwogfQogCi1zdGF0
aWMgdm9pZCBycG1fcHV0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sIHN0cnVjdCBpbnRl
bF93YWtlcmVmICp3ZikKK3N0YXRpYyB2b2lkIHJwbV9wdXQoc3RydWN0IGludGVsX3dha2VyZWYg
KndmKQogewogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmID0gZmV0Y2hfYW5kX3plcm8oJndmLT53
YWtlcmVmKTsKIAotCWludGVsX3J1bnRpbWVfcG1fcHV0KHJwbSwgd2FrZXJlZik7CisJaW50ZWxf
cnVudGltZV9wbV9wdXQod2YtPnJwbSwgd2FrZXJlZik7CiAJSU5URUxfV0FLRVJFRl9CVUdfT04o
IXdha2VyZWYpOwogfQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgaW50
ZWxfcnVudGltZV9wbSAqcnBtLAotCQkJICAgICAgc3RydWN0IGludGVsX3dha2VyZWYgKndmLAot
CQkJICAgICAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCitpbnQgX19pbnRl
bF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7CiAJLyoKIAkg
KiBUcmVhdCBnZXQvcHV0IGFzIGRpZmZlcmVudCBzdWJjbGFzc2VzLCBhcyB3ZSBtYXkgbmVlZCB0
byBydW4KQEAgLTM0LDExICszNCwxMSBAQCBpbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChz
dHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogCWlmICghYXRvbWljX3JlYWQoJndmLT5jb3Vu
dCkpIHsKIAkJaW50IGVycjsKIAotCQlycG1fZ2V0KHJwbSwgd2YpOworCQlycG1fZ2V0KHdmKTsK
IAotCQllcnIgPSBmbih3Zik7CisJCWVyciA9IHdmLT5vcHMtPmdldCh3Zik7CiAJCWlmICh1bmxp
a2VseShlcnIpKSB7Ci0JCQlycG1fcHV0KHJwbSwgd2YpOworCQkJcnBtX3B1dCh3Zik7CiAJCQlt
dXRleF91bmxvY2soJndmLT5tdXRleCk7CiAJCQlyZXR1cm4gZXJyOwogCQl9CkBAIC01MiwyNyAr
NTIsNjcgQEAgaW50IF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3Qoc3RydWN0IGludGVsX3J1bnRp
bWVfcG0gKnJwbSwKIAlyZXR1cm4gMDsKIH0KIAotaW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFz
dChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkJICAgICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCi0JCQkgICAgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKQor
c3RhdGljIHZvaWQgX19fX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmKQogewotCWludCBlcnI7CisJaWYgKCFhdG9taWNfZGVjX2FuZF90ZXN0KCZ3Zi0+Y291
bnQpKQorCQlnb3RvIHVubG9jazsKKworCWlmIChsaWtlbHkoIXdmLT5vcHMtPnB1dCh3ZikpKSB7
CisJCXJwbV9wdXQod2YpOworCQl3YWtlX3VwX3Zhcigmd2YtPndha2VyZWYpOworCX0gZWxzZSB7
CisJCS8qIG9wcy0+cHV0KCkgbXVzdCBzY2hlZHVsZSBpdHMgb3duIHJlbGVhc2Ugb24gZGVmZXJy
YWwgKi8KKwkJYXRvbWljX3NldF9yZWxlYXNlKCZ3Zi0+Y291bnQsIDEpOworCX0KIAotCWVyciA9
IGZuKHdmKTsKLQlpZiAobGlrZWx5KCFlcnIpKQotCQlycG1fcHV0KHJwbSwgd2YpOwotCWVsc2UK
LQkJYXRvbWljX2luYygmd2YtPmNvdW50KTsKK3VubG9jazoKIAltdXRleF91bmxvY2soJndmLT5t
dXRleCk7Cit9CisKK3ZvaWQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF93
YWtlcmVmICp3ZikKK3sKKwlJTlRFTF9XQUtFUkVGX0JVR19PTih3b3JrX3BlbmRpbmcoJndmLT53
b3JrKSk7CiAKLQlyZXR1cm4gZXJyOworCS8qIEFzc3VtZSB3ZSBhcmUgbm90IGluIHByb2Nlc3Mg
Y29udGV4dCBhbmQgc28gY2Fubm90IHNsZWVwLiAqLworCWlmICh3Zi0+b3BzLT5mbGFncyAmIElO
VEVMX1dBS0VSRUZfUFVUX0FTWU5DIHx8CisJICAgICFtdXRleF90cnlsb2NrKCZ3Zi0+bXV0ZXgp
KSB7CisJCXNjaGVkdWxlX3dvcmsoJndmLT53b3JrKTsKKwkJcmV0dXJuOworCX0KKworCV9fX19p
bnRlbF93YWtlcmVmX3B1dF9sYXN0KHdmKTsKIH0KIAotdm9pZCBfX2ludGVsX3dha2VyZWZfaW5p
dChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsIHN0cnVjdCBsb2NrX2NsYXNzX2tleSAqa2V5KQor
c3RhdGljIHZvaWQgX19pbnRlbF93YWtlcmVmX3B1dF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAq
d3JrKQogeworCXN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiA9IGNvbnRhaW5lcl9vZih3cmssIHR5
cGVvZigqd2YpLCB3b3JrKTsKKworCWlmIChhdG9taWNfYWRkX3VubGVzcygmd2YtPmNvdW50LCAt
MSwgMSkpCisJCXJldHVybjsKKworCW11dGV4X2xvY2soJndmLT5tdXRleCk7CisJX19fX2ludGVs
X3dha2VyZWZfcHV0X2xhc3Qod2YpOworfQorCit2b2lkIF9faW50ZWxfd2FrZXJlZl9pbml0KHN0
cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKKwkJCSAgc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJw
bSwKKwkJCSAgY29uc3Qgc3RydWN0IGludGVsX3dha2VyZWZfb3BzICpvcHMsCisJCQkgIHN0cnVj
dCBsb2NrX2NsYXNzX2tleSAqa2V5KQoreworCXdmLT5ycG0gPSBycG07CisJd2YtPm9wcyA9IG9w
czsKKwogCV9fbXV0ZXhfaW5pdCgmd2YtPm11dGV4LCAid2FrZXJlZiIsIGtleSk7CiAJYXRvbWlj
X3NldCgmd2YtPmNvdW50LCAwKTsKIAl3Zi0+d2FrZXJlZiA9IDA7CisKKwlJTklUX1dPUksoJndm
LT53b3JrLCBfX2ludGVsX3dha2VyZWZfcHV0X3dvcmspOworfQorCitpbnQgaW50ZWxfd2FrZXJl
Zl93YWl0X2Zvcl9pZGxlKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3sKKwlyZXR1cm4gd2Fp
dF92YXJfZXZlbnRfa2lsbGFibGUoJndmLT53YWtlcmVmLAorCQkJCSAgICAgICAhaW50ZWxfd2Fr
ZXJlZl9pc19hY3RpdmUod2YpKTsKIH0KIAogc3RhdGljIHZvaWQgd2FrZXJlZl9hdXRvX3RpbWVv
dXQoc3RydWN0IHRpbWVyX2xpc3QgKnQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF93YWtlcmVmLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmgK
aW5kZXggMWQ2ZjU5ODZlNGU1Li41MzVhM2ExMjg2NGIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF93YWtlcmVmLmgKQEAgLTgsMTAgKzgsMTIgQEAKICNkZWZpbmUgSU5URUxfV0FLRVJFRl9ICiAK
ICNpbmNsdWRlIDxsaW51eC9hdG9taWMuaD4KKyNpbmNsdWRlIDxsaW51eC9iaXRzLmg+CiAjaW5j
bHVkZSA8bGludXgvbXV0ZXguaD4KICNpbmNsdWRlIDxsaW51eC9yZWZjb3VudC5oPgogI2luY2x1
ZGUgPGxpbnV4L3N0YWNrZGVwb3QuaD4KICNpbmNsdWRlIDxsaW51eC90aW1lci5oPgorI2luY2x1
ZGUgPGxpbnV4L3dvcmtxdWV1ZS5oPgogCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVf
REVCVUcpCiAjZGVmaW5lIElOVEVMX1dBS0VSRUZfQlVHX09OKGV4cHIpIEJVR19PTihleHByKQpA
QCAtMjAsMjkgKzIyLDQyIEBACiAjZW5kaWYKIAogc3RydWN0IGludGVsX3J1bnRpbWVfcG07Citz
dHJ1Y3QgaW50ZWxfd2FrZXJlZjsKIAogdHlwZWRlZiBkZXBvdF9zdGFja19oYW5kbGVfdCBpbnRl
bF93YWtlcmVmX3Q7CiAKK3N0cnVjdCBpbnRlbF93YWtlcmVmX29wcyB7CisJaW50ICgqZ2V0KShz
dHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOworCWludCAoKnB1dCkoc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmKTsKKworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisjZGVmaW5lIElOVEVMX1dBS0VSRUZf
UFVUX0FTWU5DIEJJVCgwKQorfTsKKwogc3RydWN0IGludGVsX3dha2VyZWYgewogCWF0b21pY190
IGNvdW50OwogCXN0cnVjdCBtdXRleCBtdXRleDsKKwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVm
OworCisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbTsKKwljb25zdCBzdHJ1Y3QgaW50ZWxf
d2FrZXJlZl9vcHMgKm9wczsKKworCXN0cnVjdCB3b3JrX3N0cnVjdCB3b3JrOwogfTsKIAogdm9p
ZCBfX2ludGVsX3dha2VyZWZfaW5pdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCisJCQkgIHN0
cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCisJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF93YWtl
cmVmX29wcyAqb3BzLAogCQkJICBzdHJ1Y3QgbG9ja19jbGFzc19rZXkgKmtleSk7Ci0jZGVmaW5l
IGludGVsX3dha2VyZWZfaW5pdCh3ZikgZG8gewkJCQkJXAorI2RlZmluZSBpbnRlbF93YWtlcmVm
X2luaXQod2YsIHJwbSwgb3BzKSBkbyB7CQkJCVwKIAlzdGF0aWMgc3RydWN0IGxvY2tfY2xhc3Nf
a2V5IF9fa2V5OwkJCQlcCiAJCQkJCQkJCQlcCi0JX19pbnRlbF93YWtlcmVmX2luaXQoKHdmKSwg
Jl9fa2V5KTsJCQkJXAorCV9faW50ZWxfd2FrZXJlZl9pbml0KCh3ZiksIChycG0pLCAob3BzKSwg
Jl9fa2V5KTsJCVwKIH0gd2hpbGUgKDApCiAKLWludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0
KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCQkgICAgICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCi0JCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSk7
Ci1pbnQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpy
cG0sCi0JCQkgICAgIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKLQkJCSAgICAgaW50ICgqZm4p
KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpOworaW50IF9faW50ZWxfd2FrZXJlZl9nZXRfZmly
c3Qoc3RydWN0IGludGVsX3dha2VyZWYgKndmKTsKK3ZvaWQgX19pbnRlbF93YWtlcmVmX3B1dF9s
YXN0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3Zik7CiAKIC8qKgogICogaW50ZWxfd2FrZXJlZl9n
ZXQ6IEFjcXVpcmUgdGhlIHdha2VyZWYKQEAgLTYxLDEyICs3NiwxMCBAQCBpbnQgX19pbnRlbF93
YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAgKiBjb2RlIG90
aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBpbnQKLWludGVsX3dha2VyZWZfZ2V0KHN0cnVj
dCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCSAgc3RydWN0IGludGVsX3dha2VyZWYgKndmLAot
CQkgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKQoraW50ZWxfd2FrZXJlZl9n
ZXQoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogewogCWlmICh1bmxpa2VseSghYXRvbWljX2lu
Y19ub3RfemVybygmd2YtPmNvdW50KSkpCi0JCXJldHVybiBfX2ludGVsX3dha2VyZWZfZ2V0X2Zp
cnN0KHJwbSwgd2YsIGZuKTsKKwkJcmV0dXJuIF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3Qod2Yp
OwogCiAJcmV0dXJuIDA7CiB9CkBAIC0xMDIsMTYgKzExNSwxMiBAQCBpbnRlbF93YWtlcmVmX2dl
dF9pZl9hY3RpdmUoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogICogUmV0dXJuczogMCBpZiB0
aGUgd2FrZXJlZiB3YXMgcmVsZWFzZWQgc3VjY2Vzc2Z1bGx5LCBvciBhIG5lZ2F0aXZlIGVycm9y
CiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwotc3RhdGljIGlubGluZSBpbnQKLWludGVsX3dha2Vy
ZWZfcHV0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCSAgc3RydWN0IGludGVsX3dh
a2VyZWYgKndmLAotCQkgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKQorc3Rh
dGljIGlubGluZSB2b2lkCitpbnRlbF93YWtlcmVmX3B1dChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAq
d2YpCiB7CiAJSU5URUxfV0FLRVJFRl9CVUdfT04oYXRvbWljX3JlYWQoJndmLT5jb3VudCkgPD0g
MCk7Ci0JaWYgKGF0b21pY19kZWNfYW5kX211dGV4X2xvY2soJndmLT5jb3VudCwgJndmLT5tdXRl
eCkpCi0JCXJldHVybiBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3QocnBtLCB3ZiwgZm4pOwotCi0J
cmV0dXJuIDA7CisJaWYgKHVubGlrZWx5KCFhdG9taWNfYWRkX3VubGVzcygmd2YtPmNvdW50LCAt
MSwgMSkpKQorCQlfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qod2YpOwogfQogCiAvKioKQEAgLTE1
NCw2ICsxNjMsMTkgQEAgaW50ZWxfd2FrZXJlZl9pc19hY3RpdmUoY29uc3Qgc3RydWN0IGludGVs
X3dha2VyZWYgKndmKQogCXJldHVybiBSRUFEX09OQ0Uod2YtPndha2VyZWYpOwogfQogCisvKioK
KyAqIGludGVsX3dha2VyZWZfd2FpdF9mb3JfaWRsZTogV2FpdCB1bnRpbCB0aGUgd2FrZXJlZiBp
cyBpZGxlCisgKiBAd2Y6IHRoZSB3YWtlcmVmCisgKgorICogV2FpdCBmb3IgdGhlIGVhcmxpZXIg
YXN5bmNocm9ub3VzIHJlbGVhc2Ugb2YgdGhlIHdha2VyZWYuIE5vdGUKKyAqIHRoaXMgd2lsbCB3
YWl0IGZvciBhbnkgdGhpcmQgcGFydHkgYXMgd2VsbCwgc28gbWFrZSBzdXJlIHlvdSBvbmx5IHdh
aXQKKyAqIHdoZW4geW91IGhhdmUgY29udHJvbCBvdmVyIHRoZSB3YWtlcmVmIGFuZCB0cnVzdCBu
byBvbmUgZWxzZSBpcyBhY3F1aXJpbmcKKyAqIGl0LgorICoKKyAqIFJldHVybjogMCBvbiBzdWNj
ZXNzLCBlcnJvciBjb2RlIGlmIGtpbGxlZC4KKyAqLworaW50IGludGVsX3dha2VyZWZfd2FpdF9m
b3JfaWRsZShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOworCiBzdHJ1Y3QgaW50ZWxfd2FrZXJl
Zl9hdXRvIHsKIAlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtOwogCXN0cnVjdCB0aW1lcl9s
aXN0IHRpbWVyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5
MTVfbGl2ZV9zZWxmdGVzdHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1
X2xpdmVfc2VsZnRlc3RzLmgKaW5kZXggYTg0MWQzZjliZWRjLi4xY2NmMGY3MzFhYzAgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3Rz
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVz
dHMuaApAQCAtMTIsMTAgKzEyLDExIEBACiBzZWxmdGVzdChzYW5pdHljaGVjaywgaTkxNV9saXZl
X3Nhbml0eWNoZWNrKSAvKiBrZWVwIGZpcnN0IChpZ3Qgc2VsZmNoZWNrKSAqLwogc2VsZnRlc3Qo
dW5jb3JlLCBpbnRlbF91bmNvcmVfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdCh3b3JrYXJvdW5k
cywgaW50ZWxfd29ya2Fyb3VuZHNfbGl2ZV9zZWxmdGVzdHMpCi1zZWxmdGVzdCh0aW1lbGluZXMs
IGludGVsX3RpbWVsaW5lX2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ3RfZW5naW5lcywgaW50
ZWxfZW5naW5lX2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ3RfdGltZWxpbmVzLCBpbnRlbF90
aW1lbGluZV9saXZlX3NlbGZ0ZXN0cykKK3NlbGZ0ZXN0KGd0X2NvbnRleHRzLCBpbnRlbF9jb250
ZXh0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QocmVxdWVzdHMsIGk5MTVfcmVxdWVzdF9saXZl
X3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KGFjdGl2ZSwgaTkxNV9hY3RpdmVfbGl2ZV9zZWxmdGVzdHMp
Ci1zZWxmdGVzdChndF9jb250ZXh0cywgaW50ZWxfY29udGV4dF9saXZlX3NlbGZ0ZXN0cykKIHNl
bGZ0ZXN0KG9iamVjdHMsIGk5MTVfZ2VtX29iamVjdF9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0
KG1tYW4sIGk5MTVfZ2VtX21tYW5fbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChkbWFidWYsIGk5
MTVfZ2VtX2RtYWJ1Zl9saXZlX3NlbGZ0ZXN0cykKLS0gCjIuMjMuMC5yYzEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

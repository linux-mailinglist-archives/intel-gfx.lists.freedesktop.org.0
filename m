Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id EA8476C992
	for <lists+intel-gfx@lfdr.de>; Thu, 18 Jul 2019 09:00:46 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4C18A6E318;
	Thu, 18 Jul 2019 07:00:42 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F05746E31D
 for <intel-gfx@lists.freedesktop.org>; Thu, 18 Jul 2019 07:00:39 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17390388-1500050 
 for multiple; Thu, 18 Jul 2019 08:00:38 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 18 Jul 2019 08:00:16 +0100
Message-Id: <20190718070024.21781-12-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190718070024.21781-1-chris@chris-wilson.co.uk>
References: <20190718070024.21781-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 12/20] drm/i915: Only include active engines in
 the capture state
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2tpcCBwcmludGluZyBvdXQgaWRsZSBlbmdpbmVzIHRoYXQgZGlkIG5vdCBjb250cmlidXRlIHRv
IHRoZSBHUFUgaGFuZy4KQXMgdGhlIG51bWJlciBvZiBlbmdpbmVzIGdldHMgZXZlciBsYXJnZXIs
IHdlIGhhdmUgaW5jcmVhc2luZyBub2lzZSBpbgp0aGUgZXJyb3Igc3RhdGUgd2hlcmUgdHlwaWNh
bGx5IHRoZXJlIGlzIG9ubHkgb25lIGd1aWx0eSByZXF1ZXN0IG9uIG9uZQplbmdpbmUgdGhhdCB3
ZSBuZWVkIHRvIGluc3BlY3QuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNo
cmlzLXdpbHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJv
ci5jIHwgMjM1ICsrKysrKysrKysrLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dwdV9lcnJvci5oIHwgICA3ICstCiAyIGZpbGVzIGNoYW5nZWQsIDEwMiBpbnNlcnRp
b25zKCspLCAxNDAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9ncHVfZXJyb3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9y
LmMKaW5kZXggMTMxYTUyYzQyOGRlLi5iYWRiZmU4ZGM3ZTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9ncHVfZXJyb3IuYwpAQCAtNDksMjcgKzQ5LDYgQEAKICNkZWZpbmUgQUxMT1dfRkFJTCAo
R0ZQX0tFUk5FTCB8IF9fR0ZQX1JFVFJZX01BWUZBSUwgfCBfX0dGUF9OT1dBUk4pCiAjZGVmaW5l
IEFUT01JQ19NQVlGQUlMIChHRlBfQVRPTUlDIHwgX19HRlBfTk9XQVJOKQogCi1zdGF0aWMgaW5s
aW5lIGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKgotZW5naW5lX2xvb2t1cChjb25zdCBz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgdW5zaWduZWQgaW50IGlkKQotewotCWlmIChp
ZCA+PSBJOTE1X05VTV9FTkdJTkVTKQotCQlyZXR1cm4gTlVMTDsKLQotCXJldHVybiBpOTE1LT5l
bmdpbmVbaWRdOwotfQotCi1zdGF0aWMgaW5saW5lIGNvbnN0IGNoYXIgKgotX19lbmdpbmVfbmFt
ZShjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCi17Ci0JcmV0dXJuIGVuZ2lu
ZSA/IGVuZ2luZS0+bmFtZSA6ICIiOwotfQotCi1zdGF0aWMgY29uc3QgY2hhciAqCi1lbmdpbmVf
bmFtZShjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgdW5zaWduZWQgaW50IGlk
KQotewotCXJldHVybiBfX2VuZ2luZV9uYW1lKGVuZ2luZV9sb29rdXAoaTkxNSwgaWQpKTsKLX0K
LQogc3RhdGljIHZvaWQgX19zZ19zZXRfYnVmKHN0cnVjdCBzY2F0dGVybGlzdCAqc2csCiAJCQkg
dm9pZCAqYWRkciwgdW5zaWduZWQgaW50IGxlbiwgbG9mZl90IGl0KQogewpAQCAtNDU5LDcgKzQz
OCw3IEBAIHN0YXRpYyB2b2lkIGVycm9yX3ByaW50X2luc3Rkb25lKHN0cnVjdCBkcm1faTkxNV9l
cnJvcl9zdGF0ZV9idWYgKm0sCiAJZXJyX3ByaW50ZihtLCAiICBJTlNURE9ORTogMHglMDh4XG4i
LAogCQkgICBlZS0+aW5zdGRvbmUuaW5zdGRvbmUpOwogCi0JaWYgKGVlLT5lbmdpbmVfaWQgIT0g
UkNTMCB8fCBJTlRFTF9HRU4obS0+aTkxNSkgPD0gMykKKwlpZiAoZWUtPmVuZ2luZS0+Y2xhc3Mg
IT0gUkVOREVSX0NMQVNTIHx8IElOVEVMX0dFTihtLT5pOTE1KSA8PSAzKQogCQlyZXR1cm47CiAK
IAllcnJfcHJpbnRmKG0sICIgIFNDX0lOU1RET05FOiAweCUwOHhcbiIsCkBAIC01MTMsOCArNDky
LDcgQEAgc3RhdGljIHZvaWQgZXJyb3JfcHJpbnRfZW5naW5lKHN0cnVjdCBkcm1faTkxNV9lcnJv
cl9zdGF0ZV9idWYgKm0sCiB7CiAJaW50IG47CiAKLQllcnJfcHJpbnRmKG0sICIlcyBjb21tYW5k
IHN0cmVhbTpcbiIsCi0JCSAgIGVuZ2luZV9uYW1lKG0tPmk5MTUsIGVlLT5lbmdpbmVfaWQpKTsK
KwllcnJfcHJpbnRmKG0sICIlcyBjb21tYW5kIHN0cmVhbTpcbiIsIGVlLT5lbmdpbmUtPm5hbWUp
OwogCWVycl9wcmludGYobSwgIiAgSURMRT86ICVzXG4iLCB5ZXNubyhlZS0+aWRsZSkpOwogCWVy
cl9wcmludGYobSwgIiAgU1RBUlQ6IDB4JTA4eFxuIiwgZWUtPnN0YXJ0KTsKIAllcnJfcHJpbnRm
KG0sICIgIEhFQUQ6ICAweCUwOHggWzB4JTA4eF1cbiIsIGVlLT5oZWFkLCBlZS0+cnFfaGVhZCk7
CkBAIC01OTAsOSArNTY4LDkgQEAgdm9pZCBpOTE1X2Vycm9yX3ByaW50ZihzdHJ1Y3QgZHJtX2k5
MTVfZXJyb3Jfc3RhdGVfYnVmICplLCBjb25zdCBjaGFyICpmLCAuLi4pCiB9CiAKIHN0YXRpYyB2
b2lkIHByaW50X2Vycm9yX29iaihzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfc3RhdGVfYnVmICptLAot
CQkJICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCSAgICBjb25zdCBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkgICAgY29uc3QgY2hhciAqbmFtZSwKLQkJ
CSAgICBzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfb2JqZWN0ICpvYmopCisJCQkgICAgY29uc3Qgc3Ry
dWN0IGRybV9pOTE1X2Vycm9yX29iamVjdCAqb2JqKQogewogCWNoYXIgb3V0W0FTQ0lJODVfQlVG
U1pdOwogCWludCBwYWdlOwpAQCAtNjg5LDcgKzY2Nyw3IEBAIHN0YXRpYyB2b2lkIGVycl9mcmVl
X3NnbChzdHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnbCkKIHN0YXRpYyB2b2lkIF9fZXJyX3ByaW50X3Rv
X3NnbChzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfc3RhdGVfYnVmICptLAogCQkJICAgICAgIHN0cnVj
dCBpOTE1X2dwdV9zdGF0ZSAqZXJyb3IpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X2Vycm9yX29iamVj
dCAqb2JqOworCWNvbnN0IHN0cnVjdCBkcm1faTkxNV9lcnJvcl9lbmdpbmUgKmVlOwogCXN0cnVj
dCB0aW1lc3BlYzY0IHRzOwogCWludCBpLCBqOwogCkBAIC03MTMsMTUgKzY5MSwxMiBAQCBzdGF0
aWMgdm9pZCBfX2Vycl9wcmludF90b19zZ2woc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1
ZiAqbSwKIAkJICAgamlmZmllc190b19tc2VjcyhqaWZmaWVzIC0gZXJyb3ItPmNhcHR1cmUpLAog
CQkgICBqaWZmaWVzX3RvX21zZWNzKGVycm9yLT5jYXB0dXJlIC0gZXJyb3ItPmVwb2NoKSk7CiAK
LQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShlcnJvci0+ZW5naW5lKTsgaSsrKSB7Ci0JCWlm
ICghZXJyb3ItPmVuZ2luZVtpXS5jb250ZXh0LnBpZCkKLQkJCWNvbnRpbnVlOwotCisJZm9yIChl
ZSA9IGVycm9yLT5lbmdpbmU7IGVlOyBlZSA9IGVlLT5uZXh0KQogCQllcnJfcHJpbnRmKG0sICJB
Y3RpdmUgcHJvY2VzcyAob24gcmluZyAlcyk6ICVzIFslZF1cbiIsCi0JCQkgICBlbmdpbmVfbmFt
ZShtLT5pOTE1LCBpKSwKLQkJCSAgIGVycm9yLT5lbmdpbmVbaV0uY29udGV4dC5jb21tLAotCQkJ
ICAgZXJyb3ItPmVuZ2luZVtpXS5jb250ZXh0LnBpZCk7Ci0JfQorCQkJICAgZWUtPmVuZ2luZS0+
bmFtZSwKKwkJCSAgIGVlLT5jb250ZXh0LmNvbW0sCisJCQkgICBlZS0+Y29udGV4dC5waWQpOwor
CiAJZXJyX3ByaW50ZihtLCAiUmVzZXQgY291bnQ6ICV1XG4iLCBlcnJvci0+cmVzZXRfY291bnQp
OwogCWVycl9wcmludGYobSwgIlN1c3BlbmQgY291bnQ6ICV1XG4iLCBlcnJvci0+c3VzcGVuZF9j
b3VudCk7CiAJZXJyX3ByaW50ZihtLCAiUGxhdGZvcm06ICVzXG4iLCBpbnRlbF9wbGF0Zm9ybV9u
YW1lKGVycm9yLT5kZXZpY2VfaW5mby5wbGF0Zm9ybSkpOwpAQCAtNzcwLDE3ICs3NDUsMTUgQEAg
c3RhdGljIHZvaWQgX19lcnJfcHJpbnRfdG9fc2dsKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0
ZV9idWYgKm0sCiAJaWYgKElTX0dFTihtLT5pOTE1LCA3KSkKIAkJZXJyX3ByaW50ZihtLCAiRVJS
X0lOVDogMHglMDh4XG4iLCBlcnJvci0+ZXJyX2ludCk7CiAKLQlmb3IgKGkgPSAwOyBpIDwgQVJS
QVlfU0laRShlcnJvci0+ZW5naW5lKTsgaSsrKSB7Ci0JCWlmIChlcnJvci0+ZW5naW5lW2ldLmVu
Z2luZV9pZCAhPSAtMSkKLQkJCWVycm9yX3ByaW50X2VuZ2luZShtLCAmZXJyb3ItPmVuZ2luZVtp
XSwgZXJyb3ItPmVwb2NoKTsKLQl9CisJZm9yIChlZSA9IGVycm9yLT5lbmdpbmU7IGVlOyBlZSA9
IGVlLT5uZXh0KQorCQllcnJvcl9wcmludF9lbmdpbmUobSwgZWUsIGVycm9yLT5lcG9jaCk7CiAK
LQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShlcnJvci0+ZW5naW5lKTsgaSsrKSB7Ci0JCWNv
bnN0IHN0cnVjdCBkcm1faTkxNV9lcnJvcl9lbmdpbmUgKmVlID0gJmVycm9yLT5lbmdpbmVbaV07
CisJZm9yIChlZSA9IGVycm9yLT5lbmdpbmU7IGVlOyBlZSA9IGVlLT5uZXh0KSB7CisJCWNvbnN0
IHN0cnVjdCBkcm1faTkxNV9lcnJvcl9vYmplY3QgKm9iajsKIAogCQlvYmogPSBlZS0+YmF0Y2hi
dWZmZXI7CiAJCWlmIChvYmopIHsKLQkJCWVycl9wdXRzKG0sIG0tPmk5MTUtPmVuZ2luZVtpXS0+
bmFtZSk7CisJCQllcnJfcHV0cyhtLCBlZS0+ZW5naW5lLT5uYW1lKTsKIAkJCWlmIChlZS0+Y29u
dGV4dC5waWQpCiAJCQkJZXJyX3ByaW50ZihtLCAiIChzdWJtaXR0ZWQgYnkgJXMgWyVkXSkiLAog
CQkJCQkgICBlZS0+Y29udGV4dC5jb21tLApAQCAtNzg4LDE2ICs3NjEsMTUgQEAgc3RhdGljIHZv
aWQgX19lcnJfcHJpbnRfdG9fc2dsKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9idWYgKm0s
CiAJCQllcnJfcHJpbnRmKG0sICIgLS0tIGd0dF9vZmZzZXQgPSAweCUwOHggJTA4eFxuIiwKIAkJ
CQkgICB1cHBlcl8zMl9iaXRzKG9iai0+Z3R0X29mZnNldCksCiAJCQkJICAgbG93ZXJfMzJfYml0
cyhvYmotPmd0dF9vZmZzZXQpKTsKLQkJCXByaW50X2Vycm9yX29iaihtLCBtLT5pOTE1LT5lbmdp
bmVbaV0sIE5VTEwsIG9iaik7CisJCQlwcmludF9lcnJvcl9vYmoobSwgZWUtPmVuZ2luZSwgTlVM
TCwgb2JqKTsKIAkJfQogCiAJCWZvciAoaiA9IDA7IGogPCBlZS0+dXNlcl9ib19jb3VudDsgaisr
KQotCQkJcHJpbnRfZXJyb3Jfb2JqKG0sIG0tPmk5MTUtPmVuZ2luZVtpXSwKLQkJCQkJInVzZXIi
LCBlZS0+dXNlcl9ib1tqXSk7CisJCQlwcmludF9lcnJvcl9vYmoobSwgZWUtPmVuZ2luZSwgInVz
ZXIiLCBlZS0+dXNlcl9ib1tqXSk7CiAKIAkJaWYgKGVlLT5udW1fcmVxdWVzdHMpIHsKIAkJCWVy
cl9wcmludGYobSwgIiVzIC0tLSAlZCByZXF1ZXN0c1xuIiwKLQkJCQkgICBtLT5pOTE1LT5lbmdp
bmVbaV0tPm5hbWUsCisJCQkJICAgZWUtPmVuZ2luZS0+bmFtZSwKIAkJCQkgICBlZS0+bnVtX3Jl
cXVlc3RzKTsKIAkJCWZvciAoaiA9IDA7IGogPCBlZS0+bnVtX3JlcXVlc3RzOyBqKyspCiAJCQkJ
ZXJyb3JfcHJpbnRfcmVxdWVzdChtLCAiICIsCkBAIC04MDUsMjIgKzc3NywxMyBAQCBzdGF0aWMg
dm9pZCBfX2Vycl9wcmludF90b19zZ2woc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1ZiAq
bSwKIAkJCQkJCSAgICBlcnJvci0+ZXBvY2gpOwogCQl9CiAKLQkJcHJpbnRfZXJyb3Jfb2JqKG0s
IG0tPmk5MTUtPmVuZ2luZVtpXSwKLQkJCQkicmluZ2J1ZmZlciIsIGVlLT5yaW5nYnVmZmVyKTsK
LQotCQlwcmludF9lcnJvcl9vYmoobSwgbS0+aTkxNS0+ZW5naW5lW2ldLAotCQkJCSJIVyBTdGF0
dXMiLCBlZS0+aHdzX3BhZ2UpOwotCi0JCXByaW50X2Vycm9yX29iaihtLCBtLT5pOTE1LT5lbmdp
bmVbaV0sCi0JCQkJIkhXIGNvbnRleHQiLCBlZS0+Y3R4KTsKLQotCQlwcmludF9lcnJvcl9vYmoo
bSwgbS0+aTkxNS0+ZW5naW5lW2ldLAotCQkJCSJXQSBjb250ZXh0IiwgZWUtPndhX2N0eCk7Ci0K
LQkJcHJpbnRfZXJyb3Jfb2JqKG0sIG0tPmk5MTUtPmVuZ2luZVtpXSwKKwkJcHJpbnRfZXJyb3Jf
b2JqKG0sIGVlLT5lbmdpbmUsICJyaW5nYnVmZmVyIiwgZWUtPnJpbmdidWZmZXIpOworCQlwcmlu
dF9lcnJvcl9vYmoobSwgZWUtPmVuZ2luZSwgIkhXIFN0YXR1cyIsIGVlLT5od3NfcGFnZSk7CisJ
CXByaW50X2Vycm9yX29iaihtLCBlZS0+ZW5naW5lLCAiSFcgY29udGV4dCIsIGVlLT5jdHgpOwor
CQlwcmludF9lcnJvcl9vYmoobSwgZWUtPmVuZ2luZSwgIldBIGNvbnRleHQiLCBlZS0+d2FfY3R4
KTsKKwkJcHJpbnRfZXJyb3Jfb2JqKG0sIGVlLT5lbmdpbmUsCiAJCQkJIldBIGJhdGNoYnVmZmVy
IiwgZWUtPndhX2JhdGNoYnVmZmVyKTsKLQotCQlwcmludF9lcnJvcl9vYmoobSwgbS0+aTkxNS0+
ZW5naW5lW2ldLAorCQlwcmludF9lcnJvcl9vYmoobSwgZWUtPmVuZ2luZSwKIAkJCQkiTlVMTCBj
b250ZXh0IiwgZWUtPmRlZmF1bHRfc3RhdGUpOwogCX0KIApAQCAtOTY5LDEzICs5MzIsMTUgQEAg
dm9pZCBfX2k5MTVfZ3B1X3N0YXRlX2ZyZWUoc3RydWN0IGtyZWYgKmVycm9yX3JlZikKIHsKIAlz
dHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yID0KIAkJY29udGFpbmVyX29mKGVycm9yX3JlZiwg
dHlwZW9mKCplcnJvciksIHJlZik7Ci0JbG9uZyBpLCBqOworCWxvbmcgaTsKIAotCWZvciAoaSA9
IDA7IGkgPCBBUlJBWV9TSVpFKGVycm9yLT5lbmdpbmUpOyBpKyspIHsKLQkJc3RydWN0IGRybV9p
OTE1X2Vycm9yX2VuZ2luZSAqZWUgPSAmZXJyb3ItPmVuZ2luZVtpXTsKKwl3aGlsZSAoZXJyb3It
PmVuZ2luZSkgeworCQlzdHJ1Y3QgZHJtX2k5MTVfZXJyb3JfZW5naW5lICplZSA9IGVycm9yLT5l
bmdpbmU7CiAKLQkJZm9yIChqID0gMDsgaiA8IGVlLT51c2VyX2JvX2NvdW50OyBqKyspCi0JCQlp
OTE1X2Vycm9yX29iamVjdF9mcmVlKGVlLT51c2VyX2JvW2pdKTsKKwkJZXJyb3ItPmVuZ2luZSA9
IGVlLT5uZXh0OworCisJCWZvciAoaSA9IDA7IGkgPCBlZS0+dXNlcl9ib19jb3VudDsgaSsrKQor
CQkJaTkxNV9lcnJvcl9vYmplY3RfZnJlZShlZS0+dXNlcl9ib1tpXSk7CiAJCWtmcmVlKGVlLT51
c2VyX2JvKTsKIAogCQlpOTE1X2Vycm9yX29iamVjdF9mcmVlKGVlLT5iYXRjaGJ1ZmZlcik7CkBA
IC05ODYsNiArOTUxLDcgQEAgdm9pZCBfX2k5MTVfZ3B1X3N0YXRlX2ZyZWUoc3RydWN0IGtyZWYg
KmVycm9yX3JlZikKIAkJaTkxNV9lcnJvcl9vYmplY3RfZnJlZShlZS0+d2FfY3R4KTsKIAogCQlr
ZnJlZShlZS0+cmVxdWVzdHMpOworCQlrZnJlZShlZSk7CiAJfQogCiAJa2ZyZWUoZXJyb3ItPm92
ZXJsYXkpOwpAQCAtMTA2NSwyMyArMTAzMSwxNyBAQCBpOTE1X2Vycm9yX29iamVjdF9jcmVhdGUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAgKgogICogSXQncyBvbmx5IGEgc21hbGwg
c3RlcCBiZXR0ZXIgdGhhbiBhIHJhbmRvbSBudW1iZXIgaW4gaXRzIGN1cnJlbnQgZm9ybS4KICAq
Lwotc3RhdGljIHUzMiBpOTE1X2Vycm9yX2dlbmVyYXRlX2NvZGUoc3RydWN0IGk5MTVfZ3B1X3N0
YXRlICplcnJvciwKLQkJCQkgICAgaW50ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVfbWFzaykKK3N0
YXRpYyB1MzIgaTkxNV9lcnJvcl9nZW5lcmF0ZV9jb2RlKHN0cnVjdCBpOTE1X2dwdV9zdGF0ZSAq
ZXJyb3IpCiB7CisJY29uc3Qgc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUgPSBlcnJv
ci0+ZW5naW5lOworCiAJLyoKIAkgKiBJUEVIUiB3b3VsZCBiZSBhbiBpZGVhbCB3YXkgdG8gZGV0
ZWN0IGVycm9ycywgYXMgaXQncyB0aGUgZ3Jvc3MKIAkgKiBtZWFzdXJlIG9mICJ0aGUgY29tbWFu
ZCB0aGF0IGh1bmcuIiBIb3dldmVyLCBoYXMgc29tZSB2ZXJ5IGNvbW1vbgogCSAqIHN5bmNocm9u
aXphdGlvbiBjb21tYW5kcyB3aGljaCBhbG1vc3QgYWx3YXlzIGFwcGVhciBpbiB0aGUgY2FzZQog
CSAqIHN0cmljdGx5IGEgY2xpZW50IGJ1Zy4gVXNlIGluc3Rkb25lIHRvIGRpZmZlcmVudGlhdGUg
dGhvc2Ugc29tZS4KIAkgKi8KLQlpZiAoZW5naW5lX21hc2spIHsKLQkJc3RydWN0IGRybV9pOTE1
X2Vycm9yX2VuZ2luZSAqZWUgPQotCQkJJmVycm9yLT5lbmdpbmVbZmZzKGVuZ2luZV9tYXNrKV07
Ci0KLQkJcmV0dXJuIGVlLT5pcGVociBeIGVlLT5pbnN0ZG9uZS5pbnN0ZG9uZTsKLQl9Ci0KLQly
ZXR1cm4gMDsKKwlyZXR1cm4gZWUgPyBlZS0+aXBlaHIgXiBlZS0+aW5zdGRvbmUuaW5zdGRvbmUg
OiAwOwogfQogCiBzdGF0aWMgdm9pZCBnZW1fcmVjb3JkX2ZlbmNlcyhzdHJ1Y3QgaTkxNV9ncHVf
c3RhdGUgKmVycm9yKQpAQCAtMTM3NCw3NCArMTMzNCw3MCBAQCBzdGF0aWMgdm9pZAogZ2VtX3Jl
Y29yZF9yaW5ncyhzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yLCBzdHJ1Y3QgY29tcHJlc3Mg
KmNvbXByZXNzKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZXJyb3ItPmk5
MTU7Ci0JaW50IGk7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCXN0cnVjdCBk
cm1faTkxNV9lcnJvcl9lbmdpbmUgKmVlOworCisJZWUgPSBremFsbG9jKHNpemVvZigqZWUpLCBH
RlBfS0VSTkVMKTsKKwlpZiAoIWVlKQorCQlyZXR1cm47CiAKLQlmb3IgKGkgPSAwOyBpIDwgSTkx
NV9OVU1fRU5HSU5FUzsgaSsrKSB7Ci0JCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9
IGk5MTUtPmVuZ2luZVtpXTsKLQkJc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUgPSAm
ZXJyb3ItPmVuZ2luZVtpXTsKKwlmb3JfZWFjaF91c2VyX2VuZ2luZShlbmdpbmUsIGk5MTUpIHsK
IAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdDsKIAkJdW5zaWduZWQgbG9uZyBmbGFnczsK
IAotCQllZS0+ZW5naW5lX2lkID0gLTE7Ci0KLQkJaWYgKCFlbmdpbmUpCi0JCQljb250aW51ZTsK
LQotCQllZS0+ZW5naW5lX2lkID0gaTsKLQogCQkvKiBSZWZpbGwgb3VyIHBhZ2UgcG9vbCBiZWZv
cmUgZW50ZXJpbmcgYXRvbWljIHNlY3Rpb24gKi8KIAkJcG9vbF9yZWZpbGwoJmNvbXByZXNzLT5w
b29sLCBBTExPV19GQUlMKTsKIAotCQllcnJvcl9yZWNvcmRfZW5naW5lX3JlZ2lzdGVycyhlcnJv
ciwgZW5naW5lLCBlZSk7Ci0JCWVycm9yX3JlY29yZF9lbmdpbmVfZXhlY2xpc3RzKGVuZ2luZSwg
ZWUpOwotCiAJCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7
CiAJCXJlcXVlc3QgPSBpbnRlbF9lbmdpbmVfZmluZF9hY3RpdmVfcmVxdWVzdChlbmdpbmUpOwot
CQlpZiAocmVxdWVzdCkgewotCQkJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJlcXVl
c3QtPmdlbV9jb250ZXh0OwotCQkJc3RydWN0IGludGVsX3JpbmcgKnJpbmcgPSByZXF1ZXN0LT5y
aW5nOwotCi0JCQlyZWNvcmRfY29udGV4dCgmZWUtPmNvbnRleHQsIGN0eCk7CisJCWlmICghcmVx
dWVzdCkgeworCQkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywg
ZmxhZ3MpOworCQkJY29udGludWU7CisJCX0KIAotCQkJLyogV2UgbmVlZCB0byBjb3B5IHRoZXNl
IHRvIGFuIGFub255bW91cyBidWZmZXIKLQkJCSAqIGFzIHRoZSBzaW1wbGVzdCBtZXRob2QgdG8g
YXZvaWQgYmVpbmcgb3ZlcndyaXR0ZW4KLQkJCSAqIGJ5IHVzZXJzcGFjZS4KLQkJCSAqLwotCQkJ
ZWUtPmJhdGNoYnVmZmVyID0KLQkJCQlpOTE1X2Vycm9yX29iamVjdF9jcmVhdGUoaTkxNSwKLQkJ
CQkJCQkgcmVxdWVzdC0+YmF0Y2gsCi0JCQkJCQkJIGNvbXByZXNzKTsKKwkJcmVjb3JkX2NvbnRl
eHQoJmVlLT5jb250ZXh0LCByZXF1ZXN0LT5nZW1fY29udGV4dCk7CisJCWVycm9yLT5zaW11bGF0
ZWQgfD0KKwkJCWk5MTVfZ2VtX2NvbnRleHRfbm9fZXJyb3JfY2FwdHVyZShyZXF1ZXN0LT5nZW1f
Y29udGV4dCk7CiAKLQkJCWlmIChIQVNfQlJPS0VOX0NTX1RMQihpOTE1KSkKLQkJCQllZS0+d2Ff
YmF0Y2hidWZmZXIgPQotCQkJCSAgaTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCi0JCQkJ
CQkJICAgZW5naW5lLT5ndC0+c2NyYXRjaCwKLQkJCQkJCQkgICBjb21wcmVzcyk7Ci0JCQlyZXF1
ZXN0X3JlY29yZF91c2VyX2JvKHJlcXVlc3QsIGVlLCBjb21wcmVzcyk7CisJCS8qCisJCSAqIFdl
IG5lZWQgdG8gY29weSB0aGVzZSB0byBhbiBhbm9ueW1vdXMgYnVmZmVyCisJCSAqIGFzIHRoZSBz
aW1wbGVzdCBtZXRob2QgdG8gYXZvaWQgYmVpbmcgb3ZlcndyaXR0ZW4KKwkJICogYnkgdXNlcnNw
YWNlLgorCQkgKi8KKwkJZWUtPmJhdGNoYnVmZmVyID0KKwkJCWk5MTVfZXJyb3Jfb2JqZWN0X2Ny
ZWF0ZShpOTE1LAorCQkJCQkJIHJlcXVlc3QtPmJhdGNoLAorCQkJCQkJIGNvbXByZXNzKTsKIAot
CQkJZWUtPmN0eCA9CisJCWlmIChIQVNfQlJPS0VOX0NTX1RMQihpOTE1KSkKKwkJCWVlLT53YV9i
YXRjaGJ1ZmZlciA9CiAJCQkJaTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCi0JCQkJCQkJ
IHJlcXVlc3QtPmh3X2NvbnRleHQtPnN0YXRlLAorCQkJCQkJCSBlbmdpbmUtPmd0LT5zY3JhdGNo
LAogCQkJCQkJCSBjb21wcmVzcyk7CisJCXJlcXVlc3RfcmVjb3JkX3VzZXJfYm8ocmVxdWVzdCwg
ZWUsIGNvbXByZXNzKTsKIAotCQkJZXJyb3ItPnNpbXVsYXRlZCB8PQotCQkJCWk5MTVfZ2VtX2Nv
bnRleHRfbm9fZXJyb3JfY2FwdHVyZShjdHgpOworCQllZS0+Y3R4ID0KKwkJCWk5MTVfZXJyb3Jf
b2JqZWN0X2NyZWF0ZShpOTE1LAorCQkJCQkJIHJlcXVlc3QtPmh3X2NvbnRleHQtPnN0YXRlLAor
CQkJCQkJIGNvbXByZXNzKTsKIAotCQkJZWUtPnJxX2hlYWQgPSByZXF1ZXN0LT5oZWFkOwotCQkJ
ZWUtPnJxX3Bvc3QgPSByZXF1ZXN0LT5wb3N0Zml4OwotCQkJZWUtPnJxX3RhaWwgPSByZXF1ZXN0
LT50YWlsOworCQllZS0+cnFfaGVhZCA9IHJlcXVlc3QtPmhlYWQ7CisJCWVlLT5ycV9wb3N0ID0g
cmVxdWVzdC0+cG9zdGZpeDsKKwkJZWUtPnJxX3RhaWwgPSByZXF1ZXN0LT50YWlsOwogCi0JCQll
ZS0+Y3B1X3JpbmdfaGVhZCA9IHJpbmctPmhlYWQ7Ci0JCQllZS0+Y3B1X3JpbmdfdGFpbCA9IHJp
bmctPnRhaWw7Ci0JCQllZS0+cmluZ2J1ZmZlciA9Ci0JCQkJaTkxNV9lcnJvcl9vYmplY3RfY3Jl
YXRlKGk5MTUsCi0JCQkJCQkJIHJpbmctPnZtYSwKLQkJCQkJCQkgY29tcHJlc3MpOworCQllZS0+
Y3B1X3JpbmdfaGVhZCA9IHJlcXVlc3QtPnJpbmctPmhlYWQ7CisJCWVlLT5jcHVfcmluZ190YWls
ID0gcmVxdWVzdC0+cmluZy0+dGFpbDsKKwkJZWUtPnJpbmdidWZmZXIgPQorCQkJaTkxNV9lcnJv
cl9vYmplY3RfY3JlYXRlKGk5MTUsCisJCQkJCQkgcmVxdWVzdC0+cmluZy0+dm1hLAorCQkJCQkJ
IGNvbXByZXNzKTsKIAotCQkJZW5naW5lX3JlY29yZF9yZXF1ZXN0cyhlbmdpbmUsIHJlcXVlc3Qs
IGVlKTsKLQkJfQorCQllbmdpbmVfcmVjb3JkX3JlcXVlc3RzKGVuZ2luZSwgcmVxdWVzdCwgZWUp
OwogCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7
CiAKKwkJZXJyb3JfcmVjb3JkX2VuZ2luZV9yZWdpc3RlcnMoZXJyb3IsIGVuZ2luZSwgZWUpOwor
CQllcnJvcl9yZWNvcmRfZW5naW5lX2V4ZWNsaXN0cyhlbmdpbmUsIGVlKTsKKwogCQllZS0+aHdz
X3BhZ2UgPQogCQkJaTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCiAJCQkJCQkgZW5naW5l
LT5zdGF0dXNfcGFnZS52bWEsCkBAIC0xNDU0LDcgKzE0MTAsMTggQEAgZ2VtX3JlY29yZF9yaW5n
cyhzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yLCBzdHJ1Y3QgY29tcHJlc3MgKmNvbXByZXNz
KQogCiAJCWVlLT5kZWZhdWx0X3N0YXRlID0KIAkJCWNhcHR1cmVfb2JqZWN0KGk5MTUsIGVuZ2lu
ZS0+ZGVmYXVsdF9zdGF0ZSwgY29tcHJlc3MpOworCisJCWVlLT5lbmdpbmUgPSBlbmdpbmU7CisK
KwkJZWUtPm5leHQgPSBlcnJvci0+ZW5naW5lOworCQllcnJvci0+ZW5naW5lID0gZWU7CisKKwkJ
ZWUgPSBremFsbG9jKHNpemVvZigqZWUpLCBHRlBfS0VSTkVMKTsKKwkJaWYgKCFlZSkKKwkJCXJl
dHVybjsKIAl9CisKKwlrZnJlZShlZSk7CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC0xNTgzLDI0ICsx
NTUwLDE4IEBAIGVycm9yX21zZyhzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yLAogCSAgaW50
ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVzLCBjb25zdCBjaGFyICptc2cpCiB7CiAJaW50IGxlbjsK
LQlpbnQgaTsKLQotCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGVycm9yLT5lbmdpbmUpOyBp
KyspCi0JCWlmICghZXJyb3ItPmVuZ2luZVtpXS5jb250ZXh0LnBpZCkKLQkJCWVuZ2luZXMgJj0g
fkJJVChpKTsKIAogCWxlbiA9IHNjbnByaW50ZihlcnJvci0+ZXJyb3JfbXNnLCBzaXplb2YoZXJy
b3ItPmVycm9yX21zZyksCiAJCQkiR1BVIEhBTkc6IGVjb2RlICVkOiV4OjB4JTA4eCIsCiAJCQlJ
TlRFTF9HRU4oZXJyb3ItPmk5MTUpLCBlbmdpbmVzLAotCQkJaTkxNV9lcnJvcl9nZW5lcmF0ZV9j
b2RlKGVycm9yLCBlbmdpbmVzKSk7Ci0JaWYgKGVuZ2luZXMpIHsKKwkJCWk5MTVfZXJyb3JfZ2Vu
ZXJhdGVfY29kZShlcnJvcikpOworCWlmIChlcnJvci0+ZW5naW5lKSB7CiAJCS8qIEp1c3Qgc2hv
dyB0aGUgZmlyc3QgZXhlY3V0aW5nIHByb2Nlc3MsIG1vcmUgaXMgY29uZnVzaW5nICovCi0JCWkg
PSBfX2ZmcyhlbmdpbmVzKTsKIAkJbGVuICs9IHNjbnByaW50ZihlcnJvci0+ZXJyb3JfbXNnICsg
bGVuLAogCQkJCSBzaXplb2YoZXJyb3ItPmVycm9yX21zZykgLSBsZW4sCiAJCQkJICIsIGluICVz
IFslZF0iLAotCQkJCSBlcnJvci0+ZW5naW5lW2ldLmNvbnRleHQuY29tbSwKLQkJCQkgZXJyb3It
PmVuZ2luZVtpXS5jb250ZXh0LnBpZCk7CisJCQkJIGVycm9yLT5lbmdpbmUtPmNvbnRleHQuY29t
bSwKKwkJCQkgZXJyb3ItPmVuZ2luZS0+Y29udGV4dC5waWQpOwogCX0KIAlpZiAobXNnKQogCQls
ZW4gKz0gc2NucHJpbnRmKGVycm9yLT5lcnJvcl9tc2cgKyBsZW4sCkBAIC0xNjQxLDEyICsxNjAy
LDEwIEBAIHN0YXRpYyB2b2lkIGNhcHR1cmVfcGFyYW1zKHN0cnVjdCBpOTE1X2dwdV9zdGF0ZSAq
ZXJyb3IpCiAKIHN0YXRpYyB1bnNpZ25lZCBsb25nIGNhcHR1cmVfZmluZF9lcG9jaChjb25zdCBz
dHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yKQogeworCWNvbnN0IHN0cnVjdCBkcm1faTkxNV9l
cnJvcl9lbmdpbmUgKmVlOwogCXVuc2lnbmVkIGxvbmcgZXBvY2ggPSBlcnJvci0+Y2FwdHVyZTsK
LQlpbnQgaTsKLQotCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGVycm9yLT5lbmdpbmUpOyBp
KyspIHsKLQkJY29uc3Qgc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUgPSAmZXJyb3It
PmVuZ2luZVtpXTsKIAorCWZvciAoZWUgPSBlcnJvci0+ZW5naW5lOyBlZTsgZWUgPSBlZS0+bmV4
dCkgewogCQlpZiAoZWUtPmhhbmdjaGVja190aW1lc3RhbXAgJiYKIAkJICAgIHRpbWVfYmVmb3Jl
KGVlLT5oYW5nY2hlY2tfdGltZXN0YW1wLCBlcG9jaCkpCiAJCQllcG9jaCA9IGVlLT5oYW5nY2hl
Y2tfdGltZXN0YW1wOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVf
ZXJyb3IuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmgKaW5kZXggYTI0
YzM1MTA3ZDE2Li5kZjlmNTc3NjY2MjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZ3B1X2Vycm9yLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJy
b3IuaApAQCAtODEsNyArODEsOCBAQCBzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgewogCXN0cnVjdCBp
bnRlbF9kaXNwbGF5X2Vycm9yX3N0YXRlICpkaXNwbGF5OwogCiAJc3RydWN0IGRybV9pOTE1X2Vy
cm9yX2VuZ2luZSB7Ci0JCWludCBlbmdpbmVfaWQ7CisJCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKKwogCQkvKiBTb2Z0d2FyZSB0cmFja2VkIHN0YXRlICovCiAJCWJvb2wg
aWRsZTsKIAkJdW5zaWduZWQgbG9uZyBoYW5nY2hlY2tfdGltZXN0YW1wOwpAQCAtMTU4LDcgKzE1
OSw5IEBAIHN0cnVjdCBpOTE1X2dwdV9zdGF0ZSB7CiAJCQkJdTMyIHBwX2Rpcl9iYXNlOwogCQkJ
fTsKIAkJfSB2bV9pbmZvOwotCX0gZW5naW5lW0k5MTVfTlVNX0VOR0lORVNdOworCisJCXN0cnVj
dCBkcm1faTkxNV9lcnJvcl9lbmdpbmUgKm5leHQ7CisJfSAqZW5naW5lOwogCiAJc3RydWN0IHNj
YXR0ZXJsaXN0ICpzZ2wsICpmaXQ7CiB9OwotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVs
LWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

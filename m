Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 7AD9C42ED4
	for <lists+intel-gfx@lfdr.de>; Wed, 12 Jun 2019 20:38:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 926A28982A;
	Wed, 12 Jun 2019 18:38:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9CFFD8982A
 for <intel-gfx@lists.freedesktop.org>; Wed, 12 Jun 2019 18:38:12 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Jun 2019 11:38:12 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by fmsmga005.fm.intel.com with ESMTP; 12 Jun 2019 11:38:12 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 12 Jun 2019 11:37:43 -0700
Message-Id: <20190612183748.7693-5-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190612183748.7693-1-daniele.ceraolospurio@intel.com>
References: <20190612183748.7693-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 4/8] drm/i915: move and rename i915_runtime_pm
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXNzZXJ0cyBhc2lkZSwgYWxsIHRoZSBjb2RlIHdvcmtpbmcgb24gdGhpcyBzdHJ1Y3R1cmUgaXMg
aW4KaW50ZWxfcnVudGltZV9wbS5jIGFuZCB1c2VzIHRoZSBpbnRlbF8gcHJlZml4LCBzbyBtb3Zl
IHRoZQpzdHJ1Y3R1cmUgdG8gaW50ZWxfcnVudGltZV9wbS5oIGFuZCBhZG9wdCB0aGUgc2FtZSBw
cmVmaXguCgpTaW5jZSBhbGwgdGhlIGFzc2VydHMgYXJlIG5vdyB3b3JraW5nIG9uIHRoZSBydW50
aW1lX3BtIHN0cnVjdHVyZSwKYnJpbmcgdGhlbSBhY3Jvc3MgYXMgd2VsbC4KCnYyOiBkcm9wIHVu
bmVlZGVkIGluY2x1ZGUgKENocmlzKSwgZG9uJ3QgcmVuYW1lIGRlYnVnZnMsIHJlYmFzZQoKU2ln
bmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlv
QGludGVsLmNvbT4KQ2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgot
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgICAgICAgICB8ICAgNCArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgIHwgIDUyICstLS0tLS0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmggICAgICAgIHwgIDk3IC0tLS0tLS0tLS0tLS0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVudGltZV9wbS5jIHwgIDQyICsrKy0tLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3J1bnRpbWVfcG0uaCB8IDE0OSArKysrKysrKysr
KysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5oICAgICB8
ICAgNCArLQogNiBmaWxlcyBjaGFuZ2VkLCAxNzUgaW5zZXJ0aW9ucygrKSwgMTczIGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCmluZGV4IGFjZDcwZjAwYzg4Yi4uZmQ1NzAzMWRl
ZTQ3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKQEAgLTI4ODgsNyArMjg4OCw3IEBAIHN0YXRp
YyBpbnQgaW50ZWxfcnVudGltZV9zdXNwZW5kKHN0cnVjdCBkZXZpY2UgKmtkZXYpCiAJc3RydWN0
IHBjaV9kZXYgKnBkZXYgPSB0b19wY2lfZGV2KGtkZXYpOwogCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYgPSBwY2lfZ2V0X2RydmRhdGEocGRldik7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShkZXYpOwotCXN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSA9ICZk
ZXZfcHJpdi0+cnVudGltZV9wbTsKKwlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtID0gJmRl
dl9wcml2LT5ydW50aW1lX3BtOwogCWludCByZXQ7CiAKIAlpZiAoV0FSTl9PTl9PTkNFKCEoZGV2
X3ByaXYtPmd0X3BtLnJjNi5lbmFibGVkICYmIEhBU19SQzYoZGV2X3ByaXYpKSkpCkBAIC0yOTg3
LDcgKzI5ODcsNyBAQCBzdGF0aWMgaW50IGludGVsX3J1bnRpbWVfcmVzdW1lKHN0cnVjdCBkZXZp
Y2UgKmtkZXYpCiAJc3RydWN0IHBjaV9kZXYgKnBkZXYgPSB0b19wY2lfZGV2KGtkZXYpOwogCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBwY2lfZ2V0X2RydmRhdGEocGRldik7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwotCXN0cnVjdCBpOTE1X3J1
bnRpbWVfcG0gKnJwbSA9ICZkZXZfcHJpdi0+cnVudGltZV9wbTsKKwlzdHJ1Y3QgaW50ZWxfcnVu
dGltZV9wbSAqcnBtID0gJmRldl9wcml2LT5ydW50aW1lX3BtOwogCWludCByZXQgPSAwOwogCiAJ
aWYgKFdBUk5fT05fT05DRSghSEFTX1JVTlRJTUVfUE0oZGV2X3ByaXYpKSkKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCmluZGV4IDNlNzE4NjM2MmJiMC4uOTk2MGYyMzBjMDQ4IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmgKQEAgLTEwNDgsNTYgKzEwNDgsNiBAQCBzdHJ1Y3Qgc2tsX3dtX3BhcmFtcyB7
CiAJdTMyIGRidWZfYmxvY2tfc2l6ZTsKIH07CiAKLS8qCi0gKiBUaGlzIHN0cnVjdCBoZWxwcyB0
cmFja2luZyB0aGUgc3RhdGUgbmVlZGVkIGZvciBydW50aW1lIFBNLCB3aGljaCBwdXRzIHRoZQot
ICogZGV2aWNlIGluIFBDSSBEMyBzdGF0ZS4gTm90aWNlIHRoYXQgd2hlbiB0aGlzIGhhcHBlbnMs
IG5vdGhpbmcgb24gdGhlCi0gKiBncmFwaGljcyBkZXZpY2Ugd29ya3MsIGV2ZW4gcmVnaXN0ZXIg
YWNjZXNzLCBzbyB3ZSBkb24ndCBnZXQgaW50ZXJydXB0cyBub3IKLSAqIGFueXRoaW5nIGVsc2Uu
Ci0gKgotICogRXZlcnkgcGllY2Ugb2Ygb3VyIGNvZGUgdGhhdCBuZWVkcyB0byBhY3R1YWxseSB0
b3VjaCB0aGUgaGFyZHdhcmUgbmVlZHMgdG8KLSAqIGVpdGhlciBjYWxsIGludGVsX3J1bnRpbWVf
cG1fZ2V0IG9yIGNhbGwgaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQgd2l0aCB0aGUKLSAqIGFwcHJv
cHJpYXRlIHBvd2VyIGRvbWFpbi4KLSAqCi0gKiBPdXIgZHJpdmVyIHVzZXMgdGhlIGF1dG9zdXNw
ZW5kIGRlbGF5IGZlYXR1cmUsIHdoaWNoIG1lYW5zIHdlJ2xsIG9ubHkgcmVhbGx5Ci0gKiBzdXNw
ZW5kIGlmIHdlIHN0YXkgd2l0aCB6ZXJvIHJlZmNvdW50IGZvciBhIGNlcnRhaW4gYW1vdW50IG9m
IHRpbWUuIFRoZQotICogZGVmYXVsdCB2YWx1ZSBpcyBjdXJyZW50bHkgdmVyeSBjb25zZXJ2YXRp
dmUgKHNlZSBpbnRlbF9ydW50aW1lX3BtX2VuYWJsZSksIGJ1dAotICogaXQgY2FuIGJlIGNoYW5n
ZWQgd2l0aCB0aGUgc3RhbmRhcmQgcnVudGltZSBQTSBmaWxlcyBmcm9tIHN5c2ZzLgotICoKLSAq
IFRoZSBpcnFzX2Rpc2FibGVkIHZhcmlhYmxlIGJlY29tZXMgdHJ1ZSBleGFjdGx5IGFmdGVyIHdl
IGRpc2FibGUgdGhlIElSUXMgYW5kCi0gKiBnb2VzIGJhY2sgdG8gZmFsc2UgZXhhY3RseSBiZWZv
cmUgd2UgcmVlbmFibGUgdGhlIElSUXMuIFdlIHVzZSB0aGlzIHZhcmlhYmxlCi0gKiB0byBjaGVj
ayBpZiBzb21lb25lIGlzIHRyeWluZyB0byBlbmFibGUvZGlzYWJsZSBJUlFzIHdoaWxlIHRoZXkn
cmUgc3VwcG9zZWQKLSAqIHRvIGJlIGRpc2FibGVkLiBUaGlzIHNob3VsZG4ndCBoYXBwZW4gYW5k
IHdlJ2xsIHByaW50IHNvbWUgZXJyb3IgbWVzc2FnZXMgaW4KLSAqIGNhc2UgaXQgaGFwcGVucy4K
LSAqCi0gKiBGb3IgbW9yZSwgcmVhZCB0aGUgRG9jdW1lbnRhdGlvbi9wb3dlci9ydW50aW1lX3Bt
LnR4dC4KLSAqLwotc3RydWN0IGk5MTVfcnVudGltZV9wbSB7Ci0JYXRvbWljX3Qgd2FrZXJlZl9j
b3VudDsKLQlzdHJ1Y3QgZGV2aWNlICprZGV2OyAvKiBwb2ludHMgdG8gaTkxNS0+ZHJtLnBkZXYt
PmRldiAqLwotCWJvb2wgYXZhaWxhYmxlOwotCWJvb2wgc3VzcGVuZGVkOwotCWJvb2wgaXJxc19l
bmFibGVkOwotCi0jaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfUlVOVElNRV9Q
TSkKLQkvKgotCSAqIFRvIGFpZGUgZGV0ZWN0aW9uIG9mIHdha2VyZWYgbGVha3MgYW5kIGdlbmVy
YWwgbWlzdXNlLCB3ZQotCSAqIHRyYWNrIGFsbCB3YWtlcmVmIGhvbGRlcnMuIFdpdGggbWFudWFs
IG1hcmt1cCAoaS5lLiByZXR1cm5pbmcKLQkgKiBhIGNvb2tpZSB0byBlYWNoIHJwbV9nZXQgY2Fs
bGVyIHdoaWNoIHRoZXkgdGhlbiBzdXBwbHkgdG8gdGhlaXIKLQkgKiBwYWlyZWQgcnBtX3B1dCkg
d2UgY2FuIHJlbW92ZSBjb3JyZXNwb25kaW5nIHBhaXJzIG9mIGFuZCBrZWVwCi0JICogdGhlIGFy
cmF5IHRyaW1tZWQgdG8gYWN0aXZlIHdha2VyZWZzLgotCSAqLwotCXN0cnVjdCBpbnRlbF9ydW50
aW1lX3BtX2RlYnVnIHsKLQkJc3BpbmxvY2tfdCBsb2NrOwotCi0JCWRlcG90X3N0YWNrX2hhbmRs
ZV90IGxhc3RfYWNxdWlyZTsKLQkJZGVwb3Rfc3RhY2tfaGFuZGxlX3QgbGFzdF9yZWxlYXNlOwot
Ci0JCWRlcG90X3N0YWNrX2hhbmRsZV90ICpvd25lcnM7Ci0JCXVuc2lnbmVkIGxvbmcgY291bnQ7
Ci0JfSBkZWJ1ZzsKLSNlbmRpZgotfTsKLQogZW51bSBpbnRlbF9waXBlX2NyY19zb3VyY2Ugewog
CUlOVEVMX1BJUEVfQ1JDX1NPVVJDRV9OT05FLAogCUlOVEVMX1BJUEVfQ1JDX1NPVVJDRV9QTEFO
RTEsCkBAIC0xNzQ2LDcgKzE2OTYsNyBAQCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSB7CiAKIAlz
dHJ1Y3QgZHJtX3ByaXZhdGVfb2JqIGJ3X29iajsKIAotCXN0cnVjdCBpOTE1X3J1bnRpbWVfcG0g
cnVudGltZV9wbTsKKwlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSBydW50aW1lX3BtOwogCiAJc3Ry
dWN0IHsKIAkJYm9vbCBpbml0aWFsaXplZDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgKaW5kZXgg
NzBlZjliNzYyM2YwLi4xZDU4ZjdlYzVkODQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oCkBA
IC0xNjEzLDEwMSArMTYxMyw0IEBAIHVuc2lnbmVkIGludCBpOXh4X3BsYW5lX21heF9zdHJpZGUo
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAkJCQkgICB1bnNpZ25lZCBpbnQgcm90YXRpb24p
OwogaW50IGJkd19nZXRfcGlwZW1pc2NfYnBwKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKIAot
LyogaW50ZWxfcnVudGltZV9wbS5jICovCi0jZGVmaW5lIEJJVFNfUEVSX1dBS0VSRUYJXAotCUJJ
VFNfUEVSX1RZUEUoc3RydWN0X21lbWJlcihzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtLCB3YWtlcmVm
X2NvdW50KSkKLSNkZWZpbmUgSU5URUxfUlBNX1dBS0VMT0NLX1NISUZUCShCSVRTX1BFUl9XQUtF
UkVGIC8gMikKLSNkZWZpbmUgSU5URUxfUlBNX1dBS0VMT0NLX0JJQVMJCSgxIDw8IElOVEVMX1JQ
TV9XQUtFTE9DS19TSElGVCkKLSNkZWZpbmUgSU5URUxfUlBNX1JBV19XQUtFUkVGX01BU0sJKElO
VEVMX1JQTV9XQUtFTE9DS19CSUFTIC0gMSkKLQotc3RhdGljIGlubGluZSBpbnQKLWludGVsX3Jw
bV9yYXdfd2FrZXJlZl9jb3VudChpbnQgd2FrZXJlZl9jb3VudCkKLXsKLQlyZXR1cm4gd2FrZXJl
Zl9jb3VudCAmIElOVEVMX1JQTV9SQVdfV0FLRVJFRl9NQVNLOwotfQotCi1zdGF0aWMgaW5saW5l
IGludAotaW50ZWxfcnBtX3dha2Vsb2NrX2NvdW50KGludCB3YWtlcmVmX2NvdW50KQotewotCXJl
dHVybiB3YWtlcmVmX2NvdW50ID4+IElOVEVMX1JQTV9XQUtFTE9DS19TSElGVDsKLX0KLQotc3Rh
dGljIGlubGluZSB2b2lkCi1hc3NlcnRfcnBtX2RldmljZV9ub3Rfc3VzcGVuZGVkKHN0cnVjdCBp
OTE1X3J1bnRpbWVfcG0gKnJwbSkKLXsKLQlXQVJOX09OQ0UocnBtLT5zdXNwZW5kZWQsCi0JCSAg
IkRldmljZSBzdXNwZW5kZWQgZHVyaW5nIEhXIGFjY2Vzc1xuIik7Ci19Ci0KLXN0YXRpYyBpbmxp
bmUgdm9pZAotX19hc3NlcnRfcnBtX3Jhd193YWtlcmVmX2hlbGQoc3RydWN0IGk5MTVfcnVudGlt
ZV9wbSAqcnBtLCBpbnQgd2FrZXJlZl9jb3VudCkKLXsKLQlhc3NlcnRfcnBtX2RldmljZV9ub3Rf
c3VzcGVuZGVkKHJwbSk7Ci0JV0FSTl9PTkNFKCFpbnRlbF9ycG1fcmF3X3dha2VyZWZfY291bnQo
d2FrZXJlZl9jb3VudCksCi0JCSAgIlJQTSByYXctd2FrZXJlZiBub3QgaGVsZFxuIik7Ci19Ci0K
LXN0YXRpYyBpbmxpbmUgdm9pZAotX19hc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoc3RydWN0IGk5
MTVfcnVudGltZV9wbSAqcnBtLCBpbnQgd2FrZXJlZl9jb3VudCkKLXsKLQlfX2Fzc2VydF9ycG1f
cmF3X3dha2VyZWZfaGVsZChycG0sIHdha2VyZWZfY291bnQpOwotCVdBUk5fT05DRSghaW50ZWxf
cnBtX3dha2Vsb2NrX2NvdW50KHdha2VyZWZfY291bnQpLAotCQkgICJSUE0gd2FrZWxvY2sgcmVm
IG5vdCBoZWxkIGR1cmluZyBIVyBhY2Nlc3NcbiIpOwotfQotCi1zdGF0aWMgaW5saW5lIHZvaWQK
LWFzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0p
Ci17Ci0JX19hc3NlcnRfcnBtX3Jhd193YWtlcmVmX2hlbGQocnBtLCBhdG9taWNfcmVhZCgmcnBt
LT53YWtlcmVmX2NvdW50KSk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgdm9pZAotYXNzZXJ0X3JwbV93
YWtlbG9ja19oZWxkKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKLXsKLQlfX2Fzc2VydF9y
cG1fd2FrZWxvY2tfaGVsZChycG0sIGF0b21pY19yZWFkKCZycG0tPndha2VyZWZfY291bnQpKTsK
LX0KLQotLyoqCi0gKiBkaXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMgLSBkaXNhYmxlIHRoZSBS
UE0gYXNzZXJ0IGNoZWNrcwotICogQHJwbTogdGhlIGk5MTVfcnVudGltZV9wbSBzdHJ1Y3R1cmUK
LSAqCi0gKiBUaGlzIGZ1bmN0aW9uIGRpc2FibGUgYXNzZXJ0cyB0aGF0IGNoZWNrIGlmIHdlIGhv
bGQgYW4gUlBNIHdha2Vsb2NrCi0gKiByZWZlcmVuY2UsIHdoaWxlIGtlZXBpbmcgdGhlIGRldmlj
ZS1ub3Qtc3VzcGVuZGVkIGNoZWNrcyBzdGlsbCBlbmFibGVkLgotICogSXQncyBtZWFudCB0byBi
ZSB1c2VkIG9ubHkgaW4gc3BlY2lhbCBjaXJjdW1zdGFuY2VzIHdoZXJlIG91ciBydWxlIGFib3V0
Ci0gKiB0aGUgd2FrZWxvY2sgcmVmY291bnQgd3J0LiB0aGUgZGV2aWNlIHBvd2VyIHN0YXRlIGRv
ZXNuJ3QgaG9sZC4gQWNjb3JkaW5nCi0gKiB0byB0aGlzIHJ1bGUgYXQgYW55IHBvaW50IHdoZXJl
IHdlIGFjY2VzcyB0aGUgSFcgb3Igd2FudCB0byBrZWVwIHRoZSBIVyBpbgotICogYW4gYWN0aXZl
IHN0YXRlIHdlIG11c3QgaG9sZCBhbiBSUE0gd2FrZWxvY2sgcmVmZXJlbmNlIGFjcXVpcmVkIHZp
YSBvbmUgb2YKLSAqIHRoZSBpbnRlbF9ydW50aW1lX3BtX2dldCgpIGhlbHBlcnMuIEN1cnJlbnRs
eSB0aGVyZSBhcmUgYSBmZXcgc3BlY2lhbCBzcG90cwotICogd2hlcmUgdGhpcyBydWxlIGRvZXNu
J3QgaG9sZDogdGhlIElSUSBhbmQgc3VzcGVuZC9yZXN1bWUgaGFuZGxlcnMsIHRoZQotICogZm9y
Y2V3YWtlIHJlbGVhc2UgdGltZXIsIGFuZCB0aGUgR1BVIFJQUyBhbmQgaGFuZ2NoZWNrIHdvcmtz
LiBBbGwgb3RoZXIKLSAqIHVzZXJzIHNob3VsZCBhdm9pZCB1c2luZyB0aGlzIGZ1bmN0aW9uLgot
ICoKLSAqIEFueSBjYWxscyB0byB0aGlzIGZ1bmN0aW9uIG11c3QgaGF2ZSBhIHN5bW1ldHJpYyBj
YWxsIHRvCi0gKiBlbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygpLgotICovCi1zdGF0aWMgaW5s
aW5lIHZvaWQKLWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhzdHJ1Y3QgaTkxNV9ydW50aW1l
X3BtICpycG0pCi17Ci0JYXRvbWljX2FkZChJTlRFTF9SUE1fV0FLRUxPQ0tfQklBUyArIDEsCi0J
CSAgICZycG0tPndha2VyZWZfY291bnQpOwotfQotCi0vKioKLSAqIGVuYWJsZV9ycG1fd2FrZXJl
Zl9hc3NlcnRzIC0gcmUtZW5hYmxlIHRoZSBSUE0gYXNzZXJ0IGNoZWNrcwotICogQHJwbTogdGhl
IGk5MTVfcnVudGltZV9wbSBzdHJ1Y3R1cmUKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIHJlLWVuYWJs
ZXMgdGhlIFJQTSBhc3NlcnQgY2hlY2tzIGFmdGVyIGRpc2FibGluZyB0aGVtIHdpdGgKLSAqIGRp
c2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cy4gSXQncyBtZWFudCB0byBiZSB1c2VkIG9ubHkgaW4g
c3BlY2lhbAotICogY2lyY3Vtc3RhbmNlcyBvdGhlcndpc2UgaXRzIHVzZSBzaG91bGQgYmUgYXZv
aWRlZC4KLSAqCi0gKiBBbnkgY2FsbHMgdG8gdGhpcyBmdW5jdGlvbiBtdXN0IGhhdmUgYSBzeW1t
ZXRyaWMgY2FsbCB0bwotICogZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCkuCi0gKi8KLXN0
YXRpYyBpbmxpbmUgdm9pZAotZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoc3RydWN0IGk5MTVf
cnVudGltZV9wbSAqcnBtKQotewotCWF0b21pY19zdWIoSU5URUxfUlBNX1dBS0VMT0NLX0JJQVMg
KyAxLAotCQkgICAmcnBtLT53YWtlcmVmX2NvdW50KTsKLX0KLQogI2VuZGlmIC8qIF9fSU5URUxf
RFJWX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVudGlt
ZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVudGltZV9wbS5jCmluZGV4IGFl
NjBhZTFjOTcwZS4uMDdhYWEzZTA2NTg3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9ydW50aW1lX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVu
dGltZV9wbS5jCkBAIC03NSwxMyArNzUsMTMgQEAgc3RhdGljIHZvaWQgX19wcmludF9kZXBvdF9z
dGFjayhkZXBvdF9zdGFja19oYW5kbGVfdCBzdGFjaywKIAlzdGFja190cmFjZV9zbnByaW50KGJ1
Ziwgc3osIGVudHJpZXMsIG5yX2VudHJpZXMsIGluZGVudCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlu
aXRfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkK
K3N0YXRpYyB2b2lkIGluaXRfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVjdCBpbnRlbF9y
dW50aW1lX3BtICpycG0pCiB7CiAJc3Bpbl9sb2NrX2luaXQoJnJwbS0+ZGVidWcubG9jayk7CiB9
CiAKIHN0YXRpYyBub2lubGluZSBkZXBvdF9zdGFja19oYW5kbGVfdAotdHJhY2tfaW50ZWxfcnVu
dGltZV9wbV93YWtlcmVmKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKK3RyYWNrX2ludGVs
X3J1bnRpbWVfcG1fd2FrZXJlZihzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtKQogewogCWRl
cG90X3N0YWNrX2hhbmRsZV90IHN0YWNrLCAqc3RhY2tzOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7
CkBAIC0xMTMsNyArMTEzLDcgQEAgdHJhY2tfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVj
dCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKIAlyZXR1cm4gc3RhY2s7CiB9CiAKLXN0YXRpYyB2b2lk
IHVudHJhY2tfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0g
KnJwbSwKK3N0YXRpYyB2b2lkIHVudHJhY2tfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVj
dCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAJCQkJCSAgICAgZGVwb3Rfc3RhY2tfaGFuZGxlX3Qg
c3RhY2spCiB7CiAJdW5zaWduZWQgbG9uZyBmbGFncywgbjsKQEAgLTIzMyw3ICsyMzMsNyBAQCBk
dW1wX2FuZF9mcmVlX3dha2VyZWZfdHJhY2tpbmcoc3RydWN0IGludGVsX3J1bnRpbWVfcG1fZGVi
dWcgKmRlYnVnKQogfQogCiBzdGF0aWMgbm9pbmxpbmUgdm9pZAotX19pbnRlbF93YWtlcmVmX2Rl
Y19hbmRfY2hlY2tfdHJhY2tpbmcoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtKQorX19pbnRl
bF93YWtlcmVmX2RlY19hbmRfY2hlY2tfdHJhY2tpbmcoc3RydWN0IGludGVsX3J1bnRpbWVfcG0g
KnJwbSkKIHsKIAlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbV9kZWJ1ZyBkYmcgPSB7fTsKIAl1bnNp
Z25lZCBsb25nIGZsYWdzOwpAQCAtMjUwLDcgKzI1MCw3IEBAIF9faW50ZWxfd2FrZXJlZl9kZWNf
YW5kX2NoZWNrX3RyYWNraW5nKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKIH0KIAogc3Rh
dGljIG5vaW5saW5lIHZvaWQKLXVudHJhY2tfYWxsX2ludGVsX3J1bnRpbWVfcG1fd2FrZXJlZnMo
c3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtKQordW50cmFja19hbGxfaW50ZWxfcnVudGltZV9w
bV93YWtlcmVmcyhzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtKQogewogCXN0cnVjdCBpbnRl
bF9ydW50aW1lX3BtX2RlYnVnIGRiZyA9IHt9OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CkBAIC0y
NjgsNyArMjY4LDcgQEAgdm9pZCBwcmludF9pbnRlbF9ydW50aW1lX3BtX3dha2VyZWYoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJc3RydWN0IGludGVsX3J1bnRpbWVfcG1fZGVidWcg
ZGJnID0ge307CiAKIAlkbyB7Ci0JCXN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSA9ICZpOTE1
LT5ydW50aW1lX3BtOworCQlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtID0gJmk5MTUtPnJ1
bnRpbWVfcG07CiAJCXVuc2lnbmVkIGxvbmcgYWxsb2MgPSBkYmcuY291bnQ7CiAJCWRlcG90X3N0
YWNrX2hhbmRsZV90ICpzOwogCkBAIC0zMDIsMzYgKzMwMiwzNiBAQCB2b2lkIHByaW50X2ludGVs
X3J1bnRpbWVfcG1fd2FrZXJlZihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAogI2Vs
c2UKIAotc3RhdGljIHZvaWQgaW5pdF9pbnRlbF9ydW50aW1lX3BtX3dha2VyZWYoc3RydWN0IGk5
MTVfcnVudGltZV9wbSAqcnBtKQorc3RhdGljIHZvaWQgaW5pdF9pbnRlbF9ydW50aW1lX3BtX3dh
a2VyZWYoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSkKIHsKIH0KIAogc3RhdGljIGRlcG90
X3N0YWNrX2hhbmRsZV90Ci10cmFja19pbnRlbF9ydW50aW1lX3BtX3dha2VyZWYoc3RydWN0IGk5
MTVfcnVudGltZV9wbSAqcnBtKQordHJhY2tfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmKHN0cnVj
dCBpbnRlbF9ydW50aW1lX3BtICpycG0pCiB7CiAJcmV0dXJuIC0xOwogfQogCi1zdGF0aWMgdm9p
ZCB1bnRyYWNrX2ludGVsX3J1bnRpbWVfcG1fd2FrZXJlZihzdHJ1Y3QgaTkxNV9ydW50aW1lX3Bt
ICpycG0sCitzdGF0aWMgdm9pZCB1bnRyYWNrX2ludGVsX3J1bnRpbWVfcG1fd2FrZXJlZihzdHJ1
Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogCQkJCQkgICAgIGludGVsX3dha2VyZWZfdCB3cmVm
KQogewogfQogCiBzdGF0aWMgdm9pZAotX19pbnRlbF93YWtlcmVmX2RlY19hbmRfY2hlY2tfdHJh
Y2tpbmcoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtKQorX19pbnRlbF93YWtlcmVmX2RlY19h
bmRfY2hlY2tfdHJhY2tpbmcoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSkKIHsKIAlhdG9t
aWNfZGVjKCZycG0tPndha2VyZWZfY291bnQpOwogfQogCiBzdGF0aWMgdm9pZAotdW50cmFja19h
bGxfaW50ZWxfcnVudGltZV9wbV93YWtlcmVmcyhzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0p
Cit1bnRyYWNrX2FsbF9pbnRlbF9ydW50aW1lX3BtX3dha2VyZWZzKHN0cnVjdCBpbnRlbF9ydW50
aW1lX3BtICpycG0pCiB7CiB9CiAKICNlbmRpZgogCiBzdGF0aWMgdm9pZAotaW50ZWxfcnVudGlt
ZV9wbV9hY3F1aXJlKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSwgYm9vbCB3YWtlbG9jaykK
K2ludGVsX3J1bnRpbWVfcG1fYWNxdWlyZShzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLCBi
b29sIHdha2Vsb2NrKQogewogCWlmICh3YWtlbG9jaykgewogCQlhdG9taWNfYWRkKDEgKyBJTlRF
TF9SUE1fV0FLRUxPQ0tfQklBUywgJnJwbS0+d2FrZXJlZl9jb3VudCk7CkBAIC0zNDMsNyArMzQz
LDcgQEAgaW50ZWxfcnVudGltZV9wbV9hY3F1aXJlKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJw
bSwgYm9vbCB3YWtlbG9jaykKIH0KIAogc3RhdGljIHZvaWQKLWludGVsX3J1bnRpbWVfcG1fcmVs
ZWFzZShzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0sIGludCB3YWtlbG9jaykKK2ludGVsX3J1
bnRpbWVfcG1fcmVsZWFzZShzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLCBpbnQgd2FrZWxv
Y2spCiB7CiAJaWYgKHdha2Vsb2NrKSB7CiAJCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChycG0p
OwpAQCAtMzU1LDcgKzM1NSw3IEBAIGludGVsX3J1bnRpbWVfcG1fcmVsZWFzZShzdHJ1Y3QgaTkx
NV9ydW50aW1lX3BtICpycG0sIGludCB3YWtlbG9jaykKIAlfX2ludGVsX3dha2VyZWZfZGVjX2Fu
ZF9jaGVja190cmFja2luZyhycG0pOwogfQogCi1zdGF0aWMgaW50ZWxfd2FrZXJlZl90IF9faW50
ZWxfcnVudGltZV9wbV9nZXQoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtLAorc3RhdGljIGlu
dGVsX3dha2VyZWZfdCBfX2ludGVsX3J1bnRpbWVfcG1fZ2V0KHN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpycG0sCiAJCQkJCSAgICAgIGJvb2wgd2FrZWxvY2spCiB7CiAJaW50IHJldDsKQEAgLTQy
NCw3ICs0MjQsNyBAQCBpbnRlbF93YWtlcmVmX3QgaW50ZWxfcnVudGltZV9wbV9nZXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAgKi8KIGludGVsX3dha2VyZWZfdCBpbnRlbF9ydW50
aW1lX3BtX2dldF9pZl9pbl91c2Uoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0J
c3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07CisJc3RydWN0
IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZpOTE1LT5ydW50aW1lX3BtOwogCiAJaWYgKElTX0VO
QUJMRUQoQ09ORklHX1BNKSkgewogCQkvKgpAQCAtNDYzLDcgKzQ2Myw3IEBAIGludGVsX3dha2Vy
ZWZfdCBpbnRlbF9ydW50aW1lX3BtX2dldF9pZl9pbl91c2Uoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCiAgKi8KIGludGVsX3dha2VyZWZfdCBpbnRlbF9ydW50aW1lX3BtX2dldF9ub3Jl
c3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKLQlzdHJ1Y3QgaTkxNV9ydW50
aW1lX3BtICpycG0gPSAmaTkxNS0+cnVudGltZV9wbTsKKwlzdHJ1Y3QgaW50ZWxfcnVudGltZV9w
bSAqcnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07CiAKIAlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQo
cnBtKTsKIAlwbV9ydW50aW1lX2dldF9ub3Jlc3VtZShycG0tPmtkZXYpOwpAQCAtNDczLDcgKzQ3
Myw3IEBAIGludGVsX3dha2VyZWZfdCBpbnRlbF9ydW50aW1lX3BtX2dldF9ub3Jlc3VtZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlyZXR1cm4gdHJhY2tfaW50ZWxfcnVudGltZV9w
bV93YWtlcmVmKHJwbSk7CiB9CiAKLXN0YXRpYyB2b2lkIF9faW50ZWxfcnVudGltZV9wbV9wdXQo
c3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtLAorc3RhdGljIHZvaWQgX19pbnRlbF9ydW50aW1l
X3BtX3B1dChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogCQkJCSAgIGludGVsX3dha2Vy
ZWZfdCB3cmVmLAogCQkJCSAgIGJvb2wgd2FrZWxvY2spCiB7CkBAIC01NDcsNyArNTQ3LDcgQEAg
dm9pZCBpbnRlbF9ydW50aW1lX3BtX3B1dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwg
aW50ZWxfd2FrZXJlZl90IHdyZWYpCiAgKi8KIHZvaWQgaW50ZWxfcnVudGltZV9wbV9lbmFibGUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0Jc3RydWN0IGk5MTVfcnVudGltZV9w
bSAqcnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJw
bSA9ICZpOTE1LT5ydW50aW1lX3BtOwogCXN0cnVjdCBkZXZpY2UgKmtkZXYgPSBycG0tPmtkZXY7
CiAKIAkvKgpAQCAtNTg5LDcgKzU4OSw3IEBAIHZvaWQgaW50ZWxfcnVudGltZV9wbV9lbmFibGUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIHZvaWQgaW50ZWxfcnVudGltZV9wbV9k
aXNhYmxlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewotCXN0cnVjdCBpOTE1X3J1
bnRpbWVfcG0gKnJwbSA9ICZpOTE1LT5ydW50aW1lX3BtOworCXN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpycG0gPSAmaTkxNS0+cnVudGltZV9wbTsKIAlzdHJ1Y3QgZGV2aWNlICprZGV2ID0gcnBt
LT5rZGV2OwogCiAJLyogVHJhbnNmZXIgcnBtIG93bmVyc2hpcCBiYWNrIHRvIGNvcmUgKi8KQEAg
LTYwNCw3ICs2MDQsNyBAQCB2b2lkIGludGVsX3J1bnRpbWVfcG1fZGlzYWJsZShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogdm9pZCBpbnRlbF9ydW50aW1lX3BtX2NsZWFudXAoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0Jc3RydWN0IGk5MTVfcnVudGltZV9wbSAq
cnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9
ICZpOTE1LT5ydW50aW1lX3BtOwogCWludCBjb3VudCA9IGF0b21pY19yZWFkKCZycG0tPndha2Vy
ZWZfY291bnQpOwogCiAJV0FSTihjb3VudCwKQEAgLTYxNyw3ICs2MTcsNyBAQCB2b2lkIGludGVs
X3J1bnRpbWVfcG1fY2xlYW51cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogdm9p
ZCBpbnRlbF9ydW50aW1lX3BtX2luaXRfZWFybHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUpCiB7Ci0Jc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07
CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZpOTE1LT5ydW50aW1lX3BtOwogCXN0
cnVjdCBwY2lfZGV2ICpwZGV2ID0gaTkxNS0+ZHJtLnBkZXY7CiAJc3RydWN0IGRldmljZSAqa2Rl
diA9ICZwZGV2LT5kZXY7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X3J1bnRpbWVfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3J1bnRpbWVfcG0uaApp
bmRleCBhN2FjY2ViMTM0NzMuLjQwYzY1MzBhZjViYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcnVudGltZV9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3J1bnRpbWVfcG0uaApAQCAtMTEsNiArMTEsOSBAQAogI2luY2x1ZGUgImludGVsX2Rpc3Bs
YXkuaCIKICNpbmNsdWRlICJpbnRlbF93YWtlcmVmLmgiCiAKKyNpbmNsdWRlICJpOTE1X3V0aWxz
LmgiCisKK3N0cnVjdCBkZXZpY2U7CiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKIHN0cnVjdCBk
cm1fcHJpbnRlcjsKIApAQCAtMjAsNiArMjMsMTUyIEBAIGVudW0gaTkxNV9kcm1fc3VzcGVuZF9t
b2RlIHsKIAlJOTE1X0RSTV9TVVNQRU5EX0hJQkVSTkFURSwKIH07CiAKKy8qCisgKiBUaGlzIHN0
cnVjdCBoZWxwcyB0cmFja2luZyB0aGUgc3RhdGUgbmVlZGVkIGZvciBydW50aW1lIFBNLCB3aGlj
aCBwdXRzIHRoZQorICogZGV2aWNlIGluIFBDSSBEMyBzdGF0ZS4gTm90aWNlIHRoYXQgd2hlbiB0
aGlzIGhhcHBlbnMsIG5vdGhpbmcgb24gdGhlCisgKiBncmFwaGljcyBkZXZpY2Ugd29ya3MsIGV2
ZW4gcmVnaXN0ZXIgYWNjZXNzLCBzbyB3ZSBkb24ndCBnZXQgaW50ZXJydXB0cyBub3IKKyAqIGFu
eXRoaW5nIGVsc2UuCisgKgorICogRXZlcnkgcGllY2Ugb2Ygb3VyIGNvZGUgdGhhdCBuZWVkcyB0
byBhY3R1YWxseSB0b3VjaCB0aGUgaGFyZHdhcmUgbmVlZHMgdG8KKyAqIGVpdGhlciBjYWxsIGlu
dGVsX3J1bnRpbWVfcG1fZ2V0IG9yIGNhbGwgaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQgd2l0aCB0
aGUKKyAqIGFwcHJvcHJpYXRlIHBvd2VyIGRvbWFpbi4KKyAqCisgKiBPdXIgZHJpdmVyIHVzZXMg
dGhlIGF1dG9zdXNwZW5kIGRlbGF5IGZlYXR1cmUsIHdoaWNoIG1lYW5zIHdlJ2xsIG9ubHkgcmVh
bGx5CisgKiBzdXNwZW5kIGlmIHdlIHN0YXkgd2l0aCB6ZXJvIHJlZmNvdW50IGZvciBhIGNlcnRh
aW4gYW1vdW50IG9mIHRpbWUuIFRoZQorICogZGVmYXVsdCB2YWx1ZSBpcyBjdXJyZW50bHkgdmVy
eSBjb25zZXJ2YXRpdmUgKHNlZSBpbnRlbF9ydW50aW1lX3BtX2VuYWJsZSksIGJ1dAorICogaXQg
Y2FuIGJlIGNoYW5nZWQgd2l0aCB0aGUgc3RhbmRhcmQgcnVudGltZSBQTSBmaWxlcyBmcm9tIHN5
c2ZzLgorICoKKyAqIFRoZSBpcnFzX2Rpc2FibGVkIHZhcmlhYmxlIGJlY29tZXMgdHJ1ZSBleGFj
dGx5IGFmdGVyIHdlIGRpc2FibGUgdGhlIElSUXMgYW5kCisgKiBnb2VzIGJhY2sgdG8gZmFsc2Ug
ZXhhY3RseSBiZWZvcmUgd2UgcmVlbmFibGUgdGhlIElSUXMuIFdlIHVzZSB0aGlzIHZhcmlhYmxl
CisgKiB0byBjaGVjayBpZiBzb21lb25lIGlzIHRyeWluZyB0byBlbmFibGUvZGlzYWJsZSBJUlFz
IHdoaWxlIHRoZXkncmUgc3VwcG9zZWQKKyAqIHRvIGJlIGRpc2FibGVkLiBUaGlzIHNob3VsZG4n
dCBoYXBwZW4gYW5kIHdlJ2xsIHByaW50IHNvbWUgZXJyb3IgbWVzc2FnZXMgaW4KKyAqIGNhc2Ug
aXQgaGFwcGVucy4KKyAqCisgKiBGb3IgbW9yZSwgcmVhZCB0aGUgRG9jdW1lbnRhdGlvbi9wb3dl
ci9ydW50aW1lX3BtLnR4dC4KKyAqLworc3RydWN0IGludGVsX3J1bnRpbWVfcG0geworCWF0b21p
Y190IHdha2VyZWZfY291bnQ7CisJc3RydWN0IGRldmljZSAqa2RldjsgLyogcG9pbnRzIHRvIGk5
MTUtPmRybS5wZGV2LT5kZXYgKi8KKwlib29sIGF2YWlsYWJsZTsKKwlib29sIHN1c3BlbmRlZDsK
Kwlib29sIGlycXNfZW5hYmxlZDsKKworI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RF
QlVHX1JVTlRJTUVfUE0pCisJLyoKKwkgKiBUbyBhaWRlIGRldGVjdGlvbiBvZiB3YWtlcmVmIGxl
YWtzIGFuZCBnZW5lcmFsIG1pc3VzZSwgd2UKKwkgKiB0cmFjayBhbGwgd2FrZXJlZiBob2xkZXJz
LiBXaXRoIG1hbnVhbCBtYXJrdXAgKGkuZS4gcmV0dXJuaW5nCisJICogYSBjb29raWUgdG8gZWFj
aCBycG1fZ2V0IGNhbGxlciB3aGljaCB0aGV5IHRoZW4gc3VwcGx5IHRvIHRoZWlyCisJICogcGFp
cmVkIHJwbV9wdXQpIHdlIGNhbiByZW1vdmUgY29ycmVzcG9uZGluZyBwYWlycyBvZiBhbmQga2Vl
cAorCSAqIHRoZSBhcnJheSB0cmltbWVkIHRvIGFjdGl2ZSB3YWtlcmVmcy4KKwkgKi8KKwlzdHJ1
Y3QgaW50ZWxfcnVudGltZV9wbV9kZWJ1ZyB7CisJCXNwaW5sb2NrX3QgbG9jazsKKworCQlkZXBv
dF9zdGFja19oYW5kbGVfdCBsYXN0X2FjcXVpcmU7CisJCWRlcG90X3N0YWNrX2hhbmRsZV90IGxh
c3RfcmVsZWFzZTsKKworCQlkZXBvdF9zdGFja19oYW5kbGVfdCAqb3duZXJzOworCQl1bnNpZ25l
ZCBsb25nIGNvdW50OworCX0gZGVidWc7CisjZW5kaWYKK307CisKKyNkZWZpbmUgQklUU19QRVJf
V0FLRVJFRglcCisJQklUU19QRVJfVFlQRShzdHJ1Y3RfbWVtYmVyKHN0cnVjdCBpbnRlbF9ydW50
aW1lX3BtLCB3YWtlcmVmX2NvdW50KSkKKyNkZWZpbmUgSU5URUxfUlBNX1dBS0VMT0NLX1NISUZU
CShCSVRTX1BFUl9XQUtFUkVGIC8gMikKKyNkZWZpbmUgSU5URUxfUlBNX1dBS0VMT0NLX0JJQVMJ
CSgxIDw8IElOVEVMX1JQTV9XQUtFTE9DS19TSElGVCkKKyNkZWZpbmUgSU5URUxfUlBNX1JBV19X
QUtFUkVGX01BU0sJKElOVEVMX1JQTV9XQUtFTE9DS19CSUFTIC0gMSkKKworc3RhdGljIGlubGlu
ZSBpbnQKK2ludGVsX3JwbV9yYXdfd2FrZXJlZl9jb3VudChpbnQgd2FrZXJlZl9jb3VudCkKK3sK
KwlyZXR1cm4gd2FrZXJlZl9jb3VudCAmIElOVEVMX1JQTV9SQVdfV0FLRVJFRl9NQVNLOworfQor
CitzdGF0aWMgaW5saW5lIGludAoraW50ZWxfcnBtX3dha2Vsb2NrX2NvdW50KGludCB3YWtlcmVm
X2NvdW50KQoreworCXJldHVybiB3YWtlcmVmX2NvdW50ID4+IElOVEVMX1JQTV9XQUtFTE9DS19T
SElGVDsKK30KKworc3RhdGljIGlubGluZSB2b2lkCithc3NlcnRfcnBtX2RldmljZV9ub3Rfc3Vz
cGVuZGVkKHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0pCit7CisJV0FSTl9PTkNFKHJwbS0+
c3VzcGVuZGVkLAorCQkgICJEZXZpY2Ugc3VzcGVuZGVkIGR1cmluZyBIVyBhY2Nlc3NcbiIpOwor
fQorCitzdGF0aWMgaW5saW5lIHZvaWQKK19fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9oZWxkKHN0
cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sIGludCB3YWtlcmVmX2NvdW50KQoreworCWFzc2Vy
dF9ycG1fZGV2aWNlX25vdF9zdXNwZW5kZWQocnBtKTsKKwlXQVJOX09OQ0UoIWludGVsX3JwbV9y
YXdfd2FrZXJlZl9jb3VudCh3YWtlcmVmX2NvdW50KSwKKwkJICAiUlBNIHJhdy13YWtlcmVmIG5v
dCBoZWxkXG4iKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkCitfX2Fzc2VydF9ycG1fd2FrZWxv
Y2tfaGVsZChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLCBpbnQgd2FrZXJlZl9jb3VudCkK
K3sKKwlfX2Fzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChycG0sIHdha2VyZWZfY291bnQpOwor
CVdBUk5fT05DRSghaW50ZWxfcnBtX3dha2Vsb2NrX2NvdW50KHdha2VyZWZfY291bnQpLAorCQkg
ICJSUE0gd2FrZWxvY2sgcmVmIG5vdCBoZWxkIGR1cmluZyBIVyBhY2Nlc3NcbiIpOworfQorCitz
dGF0aWMgaW5saW5lIHZvaWQKK2Fzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChzdHJ1Y3QgaW50
ZWxfcnVudGltZV9wbSAqcnBtKQoreworCV9fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9oZWxkKHJw
bSwgYXRvbWljX3JlYWQoJnJwbS0+d2FrZXJlZl9jb3VudCkpOworfQorCitzdGF0aWMgaW5saW5l
IHZvaWQKK2Fzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAq
cnBtKQoreworCV9fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHJwbSwgYXRvbWljX3JlYWQoJnJw
bS0+d2FrZXJlZl9jb3VudCkpOworfQorCisvKioKKyAqIGRpc2FibGVfcnBtX3dha2VyZWZfYXNz
ZXJ0cyAtIGRpc2FibGUgdGhlIFJQTSBhc3NlcnQgY2hlY2tzCisgKiBAcnBtOiB0aGUgaW50ZWxf
cnVudGltZV9wbSBzdHJ1Y3R1cmUKKyAqCisgKiBUaGlzIGZ1bmN0aW9uIGRpc2FibGUgYXNzZXJ0
cyB0aGF0IGNoZWNrIGlmIHdlIGhvbGQgYW4gUlBNIHdha2Vsb2NrCisgKiByZWZlcmVuY2UsIHdo
aWxlIGtlZXBpbmcgdGhlIGRldmljZS1ub3Qtc3VzcGVuZGVkIGNoZWNrcyBzdGlsbCBlbmFibGVk
LgorICogSXQncyBtZWFudCB0byBiZSB1c2VkIG9ubHkgaW4gc3BlY2lhbCBjaXJjdW1zdGFuY2Vz
IHdoZXJlIG91ciBydWxlIGFib3V0CisgKiB0aGUgd2FrZWxvY2sgcmVmY291bnQgd3J0LiB0aGUg
ZGV2aWNlIHBvd2VyIHN0YXRlIGRvZXNuJ3QgaG9sZC4gQWNjb3JkaW5nCisgKiB0byB0aGlzIHJ1
bGUgYXQgYW55IHBvaW50IHdoZXJlIHdlIGFjY2VzcyB0aGUgSFcgb3Igd2FudCB0byBrZWVwIHRo
ZSBIVyBpbgorICogYW4gYWN0aXZlIHN0YXRlIHdlIG11c3QgaG9sZCBhbiBSUE0gd2FrZWxvY2sg
cmVmZXJlbmNlIGFjcXVpcmVkIHZpYSBvbmUgb2YKKyAqIHRoZSBpbnRlbF9ydW50aW1lX3BtX2dl
dCgpIGhlbHBlcnMuIEN1cnJlbnRseSB0aGVyZSBhcmUgYSBmZXcgc3BlY2lhbCBzcG90cworICog
d2hlcmUgdGhpcyBydWxlIGRvZXNuJ3QgaG9sZDogdGhlIElSUSBhbmQgc3VzcGVuZC9yZXN1bWUg
aGFuZGxlcnMsIHRoZQorICogZm9yY2V3YWtlIHJlbGVhc2UgdGltZXIsIGFuZCB0aGUgR1BVIFJQ
UyBhbmQgaGFuZ2NoZWNrIHdvcmtzLiBBbGwgb3RoZXIKKyAqIHVzZXJzIHNob3VsZCBhdm9pZCB1
c2luZyB0aGlzIGZ1bmN0aW9uLgorICoKKyAqIEFueSBjYWxscyB0byB0aGlzIGZ1bmN0aW9uIG11
c3QgaGF2ZSBhIHN5bW1ldHJpYyBjYWxsIHRvCisgKiBlbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0
cygpLgorICovCitzdGF0aWMgaW5saW5lIHZvaWQKK2Rpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0
cyhzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtKQoreworCWF0b21pY19hZGQoSU5URUxfUlBN
X1dBS0VMT0NLX0JJQVMgKyAxLAorCQkgICAmcnBtLT53YWtlcmVmX2NvdW50KTsKK30KKworLyoq
CisgKiBlbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyAtIHJlLWVuYWJsZSB0aGUgUlBNIGFzc2Vy
dCBjaGVja3MKKyAqIEBycG06IHRoZSBpbnRlbF9ydW50aW1lX3BtIHN0cnVjdHVyZQorICoKKyAq
IFRoaXMgZnVuY3Rpb24gcmUtZW5hYmxlcyB0aGUgUlBNIGFzc2VydCBjaGVja3MgYWZ0ZXIgZGlz
YWJsaW5nIHRoZW0gd2l0aAorICogZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzLiBJdCdzIG1l
YW50IHRvIGJlIHVzZWQgb25seSBpbiBzcGVjaWFsCisgKiBjaXJjdW1zdGFuY2VzIG90aGVyd2lz
ZSBpdHMgdXNlIHNob3VsZCBiZSBhdm9pZGVkLgorICoKKyAqIEFueSBjYWxscyB0byB0aGlzIGZ1
bmN0aW9uIG11c3QgaGF2ZSBhIHN5bW1ldHJpYyBjYWxsIHRvCisgKiBkaXNhYmxlX3JwbV93YWtl
cmVmX2Fzc2VydHMoKS4KKyAqLworc3RhdGljIGlubGluZSB2b2lkCitlbmFibGVfcnBtX3dha2Vy
ZWZfYXNzZXJ0cyhzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtKQoreworCWF0b21pY19zdWIo
SU5URUxfUlBNX1dBS0VMT0NLX0JJQVMgKyAxLAorCQkgICAmcnBtLT53YWtlcmVmX2NvdW50KTsK
K30KKwogdm9pZCBpbnRlbF9ydW50aW1lX3BtX2luaXRfZWFybHkoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfcnVudGltZV9wbV9lbmFibGUoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfcnVudGltZV9wbV9kaXNhYmxl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF91bmNvcmUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X3VuY29yZS5oCmluZGV4IGQ2YWYzZGU3MDEyMS4uODA0YTBmYWFjYzkxIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91bmNvcmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF91bmNvcmUuaApAQCAtMzMsNyArMzMsNyBAQAogI2luY2x1ZGUgImk5MTVfcmVn
LmgiCiAKIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwotc3RydWN0IGk5MTVfcnVudGltZV9wbTsK
K3N0cnVjdCBpbnRlbF9ydW50aW1lX3BtOwogc3RydWN0IGludGVsX3VuY29yZTsKIAogZW51bSBm
b3JjZXdha2VfZG9tYWluX2lkIHsKQEAgLTk3LDcgKzk3LDcgQEAgc3RydWN0IGludGVsX2ZvcmNl
d2FrZV9yYW5nZSB7CiBzdHJ1Y3QgaW50ZWxfdW5jb3JlIHsKIAl2b2lkIF9faW9tZW0gKnJlZ3M7
CiAKLQlzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG07CisJc3RydWN0IGludGVsX3J1bnRpbWVf
cG0gKnJwbTsKIAogCXNwaW5sb2NrX3QgbG9jazsgLyoqIGxvY2sgaXMgYWxzbyB0YWtlbiBpbiBp
cnEgY29udGV4dHMuICovCiAKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vaW50ZWwtZ2Z4

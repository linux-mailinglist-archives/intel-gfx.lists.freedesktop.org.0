Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 87E96177D8A
	for <lists+intel-gfx@lfdr.de>; Tue,  3 Mar 2020 18:33:37 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CAF406E92E;
	Tue,  3 Mar 2020 17:33:35 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B882C6E92E
 for <intel-gfx@lists.freedesktop.org>; Tue,  3 Mar 2020 17:33:34 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 03 Mar 2020 09:33:34 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,511,1574150400"; d="scan'208";a="233702061"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga008.jf.intel.com with SMTP; 03 Mar 2020 09:33:32 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 03 Mar 2020 19:33:31 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  3 Mar 2020 19:33:10 +0200
Message-Id: <20200303173313.28117-7-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200303173313.28117-1-ville.syrjala@linux.intel.com>
References: <20200303173313.28117-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 6/9] drm/i915: Clean up integer types in
 color code
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkEg
dmFyaWFibGUgY2FsbGVkICdpJyBoYXZpbmcgYW4gdW5zaWduZWQgdHlwZSBpcyBqdXN0IGxvb2tp
bmcgZm9yCnRyb3VibGUsIGFuZCB1c2luZyBhIHNpemVkIHR5cGUgZ2VuZXJhbGx5IG1ha2VzIG5v
IHNlbnNlIGVpdGhlci4KQ2hhbmdlIGFsbCBvZiB0aGVtIHRvIGp1c3QgcGxhaW4gb2xkIGludC4g
QW5kIGRvIHRoZSBzYW1lIGZvciBzb21lCidsdXRfc2l6ZScgdmFyaWFibGVzIHdoaWNoIGdlbmVy
YWxseSBwcm92aWRlIHRoZSBsb29wIGVuZCBjb2RpdGlvbgpmb3IgJ2knLgoKU2lnbmVkLW9mZi1i
eTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NvbG9yLmMgfCA0MyArKysrKysrKysr
LS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTkgaW5zZXJ0aW9ucygrKSwgMjQgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9j
b2xvci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb2xvci5jCmluZGV4
IGFiMjNiMjRlN2JlMy4uOTM0ZjAwODE3YzVjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2NvbG9yLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9jb2xvci5jCkBAIC03NDAsOSArNzQwLDggQEAgc3RhdGljIHZvaWQgZ2xrX2xv
YWRfZGVnYW1tYV9sdXQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVh
cGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShj
cnRjLT5iYXNlLmRldik7CiAJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwotCWNvbnN0IHUz
MiBsdXRfc2l6ZSA9IElOVEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5kZWdhbW1hX2x1dF9zaXpl
OworCWludCBpLCBsdXRfc2l6ZSA9IElOVEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5kZWdhbW1h
X2x1dF9zaXplOwogCWNvbnN0IHN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQgPSBjcnRjX3N0YXRl
LT5ody5kZWdhbW1hX2x1dC0+ZGF0YTsKLQl1MzIgaTsKIAogCS8qCiAJICogV2hlbiBzZXR0aW5n
IHRoZSBhdXRvLWluY3JlbWVudCBiaXQsIHRoZSBoYXJkd2FyZSBzZWVtcyB0bwpAQCAtNzgxLDgg
Kzc4MCw3IEBAIHN0YXRpYyB2b2lkIGdsa19sb2FkX2RlZ2FtbWFfbHV0X2xpbmVhcihjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0CiAJc3RydWN0IGludGVsX2NydGMgKmNy
dGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CiAJZW51bSBw
aXBlIHBpcGUgPSBjcnRjLT5waXBlOwotCWNvbnN0IHUzMiBsdXRfc2l6ZSA9IElOVEVMX0lORk8o
ZGV2X3ByaXYpLT5jb2xvci5kZWdhbW1hX2x1dF9zaXplOwotCXUzMiBpOworCWludCBpLCBsdXRf
c2l6ZSA9IElOVEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5kZWdhbW1hX2x1dF9zaXplOwogCiAJ
LyoKIAkgKiBXaGVuIHNldHRpbmcgdGhlIGF1dG8taW5jcmVtZW50IGJpdCwgdGhlIGhhcmR3YXJl
IHNlZW1zIHRvCkBAIC04NjcsNyArODY1LDcgQEAgaWNsX3Byb2dyYW1fZ2FtbWFfc3VwZXJmaW5l
X3NlZ21lbnQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJY29u
c3Qgc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1dCA9IGJsb2ItPmRhdGE7CiAJc3RydWN0IGludGVs
X2RzYiAqZHNiID0gaW50ZWxfZHNiX2dldChjcnRjKTsKIAllbnVtIHBpcGUgcGlwZSA9IGNydGMt
PnBpcGU7Ci0JdTMyIGk7CisJaW50IGk7CiAKIAkvKgogCSAqIFByb2dyYW0gU3VwZXIgRmluZSBz
ZWdtZW50IChsZXQncyBjYWxsIGl0IHNlZzEpLi4uCkBAIC05MDAsNyArODk4LDcgQEAgaWNsX3By
b2dyYW1fZ2FtbWFfbXVsdGlfc2VnbWVudChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSkKIAljb25zdCBzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqZW50cnk7CiAJc3RydWN0
IGludGVsX2RzYiAqZHNiID0gaW50ZWxfZHNiX2dldChjcnRjKTsKIAllbnVtIHBpcGUgcGlwZSA9
IGNydGMtPnBpcGU7Ci0JdTMyIGk7CisJaW50IGk7CiAKIAkvKgogCSAqIFByb2dyYW0gRmluZSBz
ZWdtZW50IChsZXQncyBjYWxsIGl0IHNlZzIpLi4uCkBAIC0xNjc1LDcgKzE2NzMsNyBAQCBib29s
IGludGVsX2NvbG9yX2x1dF9lcXVhbChzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2IxLAog
fQogCiAvKiBjb252ZXJ0IGh3IHZhbHVlIHdpdGggZ2l2ZW4gYml0X3ByZWNpc2lvbiB0byBsdXQg
cHJvcGVydHkgdmFsICovCi1zdGF0aWMgdTMyIGludGVsX2NvbG9yX2x1dF9wYWNrKHUzMiB2YWws
IHUzMiBiaXRfcHJlY2lzaW9uKQorc3RhdGljIHUzMiBpbnRlbF9jb2xvcl9sdXRfcGFjayh1MzIg
dmFsLCBpbnQgYml0X3ByZWNpc2lvbikKIHsKIAl1MzIgbWF4ID0gMHhmZmZmID4+ICgxNiAtIGJp
dF9wcmVjaXNpb24pOwogCkBAIC0xNjk1LDcgKzE2OTMsNyBAQCBpOXh4X3JlYWRfbHV0XzgoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJZW51bSBwaXBlIHBpcGUg
PSBjcnRjLT5waXBlOwogCXN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqYmxvYjsKIAlzdHJ1Y3Qg
ZHJtX2NvbG9yX2x1dCAqbHV0OwotCXUzMiBpLCB2YWw7CisJaW50IGk7CiAKIAlibG9iID0gZHJt
X3Byb3BlcnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAogCQkJCQlzaXplb2Yoc3RydWN0
IGRybV9jb2xvcl9sdXQpICogTEVHQUNZX0xVVF9MRU5HVEgsCkBAIC0xNzA2LDcgKzE3MDQsNyBA
QCBpOXh4X3JlYWRfbHV0XzgoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUpCiAJbHV0ID0gYmxvYi0+ZGF0YTsKIAogCWZvciAoaSA9IDA7IGkgPCBMRUdBQ1lfTFVUX0xF
TkdUSDsgaSsrKSB7Ci0JCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFBBTEVUVEUocGlw
ZSwgaSkpOworCQl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgUEFMRVRURShwaXBl
LCBpKSk7CiAKIAkJbHV0W2ldLnJlZCA9IGludGVsX2NvbG9yX2x1dF9wYWNrKFJFR19GSUVMRF9H
RVQoCiAJCQkJCQkJTEdDX1BBTEVUVEVfUkVEX01BU0ssIHZhbCksIDgpOwpAQCAtMTczMiwxMSAr
MTczMCwxMCBAQCBpOTY1X3JlYWRfbHV0XzEwcDYoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9j
cnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7Ci0JdTMyIGx1dF9zaXplID0gSU5URUxf
SU5GTyhkZXZfcHJpdiktPmNvbG9yLmdhbW1hX2x1dF9zaXplOworCWludCBpLCBsdXRfc2l6ZSA9
IElOVEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5nYW1tYV9sdXRfc2l6ZTsKIAllbnVtIHBpcGUg
cGlwZSA9IGNydGMtPnBpcGU7CiAJc3RydWN0IGRybV9wcm9wZXJ0eV9ibG9iICpibG9iOwogCXN0
cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQ7Ci0JdTMyIGksIHZhbDEsIHZhbDI7CiAKIAlibG9iID0g
ZHJtX3Byb3BlcnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAogCQkJCQlzaXplb2Yoc3Ry
dWN0IGRybV9jb2xvcl9sdXQpICogbHV0X3NpemUsCkBAIC0xNzQ3LDggKzE3NDQsOCBAQCBpOTY1
X3JlYWRfbHV0XzEwcDYoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
CiAJbHV0ID0gYmxvYi0+ZGF0YTsKIAogCWZvciAoaSA9IDA7IGkgPCBsdXRfc2l6ZSAtIDE7IGkr
KykgewotCQl2YWwxID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgUEFMRVRURShwaXBlLCAyICog
aSArIDApKTsKLQkJdmFsMiA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFBBTEVUVEUocGlwZSwg
MiAqIGkgKyAxKSk7CisJCXUzMiB2YWwxID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgUEFMRVRU
RShwaXBlLCAyICogaSArIDApKTsKKwkJdTMyIHZhbDIgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LCBQQUxFVFRFKHBpcGUsIDIgKiBpICsgMSkpOwogCiAJCWx1dFtpXS5yZWQgPSBSRUdfRklFTERf
R0VUKFBBTEVUVEVfUkVEX01BU0ssIHZhbDIpIDw8IDggfAogCQkJCQkJIFJFR19GSUVMRF9HRVQo
UEFMRVRURV9SRURfTUFTSywgdmFsMSk7CkBAIC0xNzg0LDExICsxNzgxLDEwIEBAIGNodl9yZWFk
X2NnbV9nYW1tYShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsK
IAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFw
aS5jcnRjKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNy
dGMtPmJhc2UuZGV2KTsKLQl1MzIgbHV0X3NpemUgPSBJTlRFTF9JTkZPKGRldl9wcml2KS0+Y29s
b3IuZ2FtbWFfbHV0X3NpemU7CisJaW50IGksIGx1dF9zaXplID0gSU5URUxfSU5GTyhkZXZfcHJp
diktPmNvbG9yLmdhbW1hX2x1dF9zaXplOwogCWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsK
IAlzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Jsb2IgKmJsb2I7CiAJc3RydWN0IGRybV9jb2xvcl9sdXQg
Kmx1dDsKLQl1MzIgaSwgdmFsOwogCiAJYmxvYiA9IGRybV9wcm9wZXJ0eV9jcmVhdGVfYmxvYigm
ZGV2X3ByaXYtPmRybSwKIAkJCQkJc2l6ZW9mKHN0cnVjdCBkcm1fY29sb3JfbHV0KSAqIGx1dF9z
aXplLApAQCAtMTc5OSw3ICsxNzk1LDggQEAgY2h2X3JlYWRfY2dtX2dhbW1hKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCWx1dCA9IGJsb2ItPmRhdGE7CiAKIAlm
b3IgKGkgPSAwOyBpIDwgbHV0X3NpemU7IGkrKykgewotCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRl
dl9wcml2LCBDR01fUElQRV9HQU1NQShwaXBlLCBpLCAwKSk7CisJCXUzMiB2YWwgPSBpbnRlbF9k
ZV9yZWFkKGRldl9wcml2LCBDR01fUElQRV9HQU1NQShwaXBlLCBpLCAwKSk7CisKIAkJbHV0W2ld
LmdyZWVuID0gaW50ZWxfY29sb3JfbHV0X3BhY2soUkVHX0ZJRUxEX0dFVCgKIAkJCQkJCQkgIENH
TV9QSVBFX0dBTU1BX0dSRUVOX01BU0ssIHZhbCksIDEwKTsKIAkJbHV0W2ldLmJsdWUgPSBpbnRl
bF9jb2xvcl9sdXRfcGFjayhSRUdfRklFTERfR0VUKApAQCAtMTgyOSw3ICsxODI2LDcgQEAgaWxr
X3JlYWRfbHV0XzgoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJ
ZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCXN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAq
YmxvYjsKIAlzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0OwotCXUzMiBpLCB2YWw7CisJaW50IGk7
CiAKIAlibG9iID0gZHJtX3Byb3BlcnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAogCQkJ
CQlzaXplb2Yoc3RydWN0IGRybV9jb2xvcl9sdXQpICogTEVHQUNZX0xVVF9MRU5HVEgsCkBAIC0x
ODQwLDcgKzE4MzcsNyBAQCBpbGtfcmVhZF9sdXRfOChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKIAlsdXQgPSBibG9iLT5kYXRhOwogCiAJZm9yIChpID0gMDsgaSA8
IExFR0FDWV9MVVRfTEVOR1RIOyBpKyspIHsKLQkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwgTEdDX1BBTEVUVEUocGlwZSwgaSkpOworCQl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwgTEdDX1BBTEVUVEUocGlwZSwgaSkpOwogCiAJCWx1dFtpXS5yZWQgPSBpbnRlbF9jb2xv
cl9sdXRfcGFjayhSRUdfRklFTERfR0VUKAogCQkJCQkJCUxHQ19QQUxFVFRFX1JFRF9NQVNLLCB2
YWwpLCA4KTsKQEAgLTE4NTgsMTEgKzE4NTUsMTAgQEAgaWxrX3JlYWRfbHV0XzEwKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwotCXUz
MiBsdXRfc2l6ZSA9IElOVEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5nYW1tYV9sdXRfc2l6ZTsK
KwlpbnQgaSwgbHV0X3NpemUgPSBJTlRFTF9JTkZPKGRldl9wcml2KS0+Y29sb3IuZ2FtbWFfbHV0
X3NpemU7CiAJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCXN0cnVjdCBkcm1fcHJvcGVy
dHlfYmxvYiAqYmxvYjsKIAlzdHJ1Y3QgZHJtX2NvbG9yX2x1dCAqbHV0OwotCXUzMiBpLCB2YWw7
CiAKIAlibG9iID0gZHJtX3Byb3BlcnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAogCQkJ
CQlzaXplb2Yoc3RydWN0IGRybV9jb2xvcl9sdXQpICogbHV0X3NpemUsCkBAIC0xODczLDcgKzE4
NjksNyBAQCBpbGtfcmVhZF9sdXRfMTAoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpCiAJbHV0ID0gYmxvYi0+ZGF0YTsKIAogCWZvciAoaSA9IDA7IGkgPCBsdXRfc2l6
ZTsgaSsrKSB7Ci0JCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFBSRUNfUEFMRVRURShw
aXBlLCBpKSk7CisJCXUzMiB2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBQUkVDX1BBTEVU
VEUocGlwZSwgaSkpOwogCiAJCWx1dFtpXS5yZWQgPSBpbnRlbF9jb2xvcl9sdXRfcGFjayhSRUdf
RklFTERfR0VUKAogCQkJCQkJCVBSRUNfUEFMRVRURV9SRURfTUFTSywgdmFsKSwgMTApOwpAQCAt
MTkwNSwxMSArMTkwMSwxMCBAQCBnbGtfcmVhZF9sdXRfMTAoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsIHUzMiBwcmVjX2luZGV4KQogewogCXN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwot
CWludCBod19sdXRfc2l6ZSA9IGl2Yl9sdXRfMTBfc2l6ZShwcmVjX2luZGV4KTsKKwlpbnQgaSwg
aHdfbHV0X3NpemUgPSBpdmJfbHV0XzEwX3NpemUocHJlY19pbmRleCk7CiAJZW51bSBwaXBlIHBp
cGUgPSBjcnRjLT5waXBlOwogCXN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqYmxvYjsKIAlzdHJ1
Y3QgZHJtX2NvbG9yX2x1dCAqbHV0OwotCXUzMiBpLCB2YWw7CiAKIAlibG9iID0gZHJtX3Byb3Bl
cnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAogCQkJCQlzaXplb2Yoc3RydWN0IGRybV9j
b2xvcl9sdXQpICogaHdfbHV0X3NpemUsCkBAIC0xOTIzLDcgKzE5MTgsNyBAQCBnbGtfcmVhZF9s
dXRfMTAoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsIHUzMiBwcmVj
X2luZGV4KQogCQkgICAgICAgcHJlY19pbmRleCB8IFBBTF9QUkVDX0FVVE9fSU5DUkVNRU5UKTsK
IAogCWZvciAoaSA9IDA7IGkgPCBod19sdXRfc2l6ZTsgaSsrKSB7Ci0JCXZhbCA9IGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsIFBSRUNfUEFMX0RBVEEocGlwZSkpOworCQl1MzIgdmFsID0gaW50ZWxf
ZGVfcmVhZChkZXZfcHJpdiwgUFJFQ19QQUxfREFUQShwaXBlKSk7CiAKIAkJbHV0W2ldLnJlZCA9
IGludGVsX2NvbG9yX2x1dF9wYWNrKFJFR19GSUVMRF9HRVQoCiAJCQkJCQkJUFJFQ19QQUxfREFU
QV9SRURfTUFTSywgdmFsKSwgMTApOwotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZngK

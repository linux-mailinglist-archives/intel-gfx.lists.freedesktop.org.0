Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 093B9607E1
	for <lists+intel-gfx@lfdr.de>; Fri,  5 Jul 2019 16:29:32 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 146EA6E4D6;
	Fri,  5 Jul 2019 14:29:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id ADCB66E4CE
 for <intel-gfx@lists.freedesktop.org>; Fri,  5 Jul 2019 14:29:26 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 05 Jul 2019 07:29:26 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,455,1557212400"; d="scan'208";a="363191491"
Received: from rosetta.fi.intel.com ([10.237.72.194])
 by fmsmga005.fm.intel.com with ESMTP; 05 Jul 2019 07:29:25 -0700
Received: by rosetta.fi.intel.com (Postfix, from userid 1000)
 id 79F5B840501; Fri,  5 Jul 2019 17:29:09 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  5 Jul 2019 17:29:08 +0300
Message-Id: <20190705142908.4921-4-mika.kuoppala@linux.intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190705142908.4921-1-mika.kuoppala@linux.intel.com>
References: <20190705142908.4921-1-mika.kuoppala@linux.intel.com>
Subject: [Intel-gfx] [PATCH 4/4] drm/i915/gtt: Introduce release_pd_entry
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QnkgZW5jYXBzdWxhdGluZyB0aGUgbG9ja2luZyB1cHBlciBsZXZlbCBhbmQgdXNlZCBjaGVjayBm
b3IgZW50cnkKaW50byBhIGhlbHBlciBmdW5jdGlvbiwgd2UgY2FuIHVzZSBpdCBpbiBhbGwgY2Fs
bHNpdGVzLgoKdjI6IGdldCByaWQgb2YgYXRvbWljX3JlYWRzIG9uIGxvd2VyIGxldmVsIGNsZWFy
cyAoQ2hyaXMpCgpDYzogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+ClNp
Z25lZC1vZmYtYnk6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29t
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jIHwgMTI1ICsrKysrKysr
KysrKystLS0tLS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA2MCBpbnNlcnRpb25zKCspLCA2
NSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bV9ndHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jCmluZGV4IDBhNTVi
MDkzMmM4Ni4uM2Q5NjEyYzc3NmRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2dlbV9ndHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYwpA
QCAtODEzLDYgKzgxMyw0MiBAQCBfX2NsZWFyX3BkX2VudHJ5KHN0cnVjdCBpOTE1X3BhZ2VfZGly
ZWN0b3J5ICogY29uc3QgcGQsCiAjZGVmaW5lIGNsZWFyX3BkX2VudHJ5KHBkLCBwZGUsIHRvKSBc
CiAJX19jbGVhcl9wZF9lbnRyeSgocGQpLCAocGRlKSwgcHhfYmFzZSh0byksIGdlbjhfcGRlX2Vu
Y29kZSkKIAorc3RhdGljIGJvb2wKK3JlbGVhc2VfcHRfZW50cnkoc3RydWN0IGk5MTVfcGFnZV9k
aXJlY3RvcnkgKiBjb25zdCBwZCwKKwkJIGNvbnN0IHVuc2lnbmVkIHNob3J0IHBkZSwKKwkJIHN0
cnVjdCBpOTE1X3BhZ2VfdGFibGUgKiBjb25zdCBwdCwKKwkJIHN0cnVjdCBpOTE1X3BhZ2VfdGFi
bGUgKiBjb25zdCBzY3JhdGNoKQoreworCWJvb2wgZnJlZSA9IGZhbHNlOworCisJc3Bpbl9sb2Nr
KCZwZC0+bG9jayk7CisJaWYgKGF0b21pY19kZWNfYW5kX3Rlc3QoJnB0LT51c2VkKSkgeworCQlj
bGVhcl9wZF9lbnRyeShwZCwgcGRlLCBzY3JhdGNoKTsKKwkJZnJlZSA9IHRydWU7CisJfQorCXNw
aW5fdW5sb2NrKCZwZC0+bG9jayk7CisKKwlyZXR1cm4gZnJlZTsKK30KKworc3RhdGljIGJvb2wK
K3JlbGVhc2VfcGRfZW50cnkoc3RydWN0IGk5MTVfcGFnZV9kaXJlY3RvcnkgKiBjb25zdCBwZCwK
KwkJIGNvbnN0IHVuc2lnbmVkIHNob3J0IHBkZSwKKwkJIHN0cnVjdCBpOTE1X3BhZ2VfZGlyZWN0
b3J5ICogY29uc3QgZW50cnksCisJCSBzdHJ1Y3QgaTkxNV9wYWdlX2RpcmVjdG9yeSAqIGNvbnN0
IHNjcmF0Y2gpCit7CisJYm9vbCBmcmVlID0gZmFsc2U7CisKKwlzcGluX2xvY2soJnBkLT5sb2Nr
KTsKKwlpZiAoYXRvbWljX2RlY19hbmRfdGVzdCgmZW50cnktPnVzZWQpKSB7CisJCWNsZWFyX3Bk
X2VudHJ5KHBkLCBwZGUsIHNjcmF0Y2gpOworCQlmcmVlID0gdHJ1ZTsKKwl9CisJc3Bpbl91bmxv
Y2soJnBkLT5sb2NrKTsKKworCXJldHVybiBmcmVlOworfQorCiAvKgogICogUERFIFRMQnMgYXJl
IGEgcGFpbiB0byBpbnZhbGlkYXRlIG9uIEdFTjgrLiBXaGVuIHdlIG1vZGlmeQogICogdGhlIHBh
Z2UgdGFibGUgc3RydWN0dXJlcywgd2UgbWFyayB0aGVtIGRpcnR5IHNvIHRoYXQKQEAgLTgyNywx
MSArODYzLDExIEBAIHN0YXRpYyB2b2lkIG1hcmtfdGxic19kaXJ0eShzdHJ1Y3QgaTkxNV9wcGd0
dCAqcHBndHQpCiAvKiBSZW1vdmVzIGVudHJpZXMgZnJvbSBhIHNpbmdsZSBwYWdlIHRhYmxlLCBy
ZWxlYXNpbmcgaXQgaWYgaXQncyBlbXB0eS4KICAqIENhbGxlciBjYW4gdXNlIHRoZSByZXR1cm4g
dmFsdWUgdG8gdXBkYXRlIGhpZ2hlci1sZXZlbCBlbnRyaWVzLgogICovCi1zdGF0aWMgYm9vbCBn
ZW44X3BwZ3R0X2NsZWFyX3B0KGNvbnN0IHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZtLAor
c3RhdGljIHZvaWQgZ2VuOF9wcGd0dF9jbGVhcl9wdChjb25zdCBzdHJ1Y3QgaTkxNV9hZGRyZXNz
X3NwYWNlICp2bSwKIAkJCQlzdHJ1Y3QgaTkxNV9wYWdlX3RhYmxlICpwdCwKIAkJCQl1NjQgc3Rh
cnQsIHU2NCBsZW5ndGgpCiB7Ci0JdW5zaWduZWQgaW50IG51bV9lbnRyaWVzID0gZ2VuOF9wdGVf
Y291bnQoc3RhcnQsIGxlbmd0aCk7CisJY29uc3QgdW5zaWduZWQgaW50IG51bV9lbnRyaWVzID0g
Z2VuOF9wdGVfY291bnQoc3RhcnQsIGxlbmd0aCk7CiAJZ2VuOF9wdGVfdCAqdmFkZHI7CiAKIAl2
YWRkciA9IGttYXBfYXRvbWljX3B4KHB0KTsKQEAgLTgzOSwxMCArODc1LDExIEBAIHN0YXRpYyBi
b29sIGdlbjhfcHBndHRfY2xlYXJfcHQoY29uc3Qgc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAq
dm0sCiAJa3VubWFwX2F0b21pYyh2YWRkcik7CiAKIAlHRU1fQlVHX09OKG51bV9lbnRyaWVzID4g
YXRvbWljX3JlYWQoJnB0LT51c2VkKSk7Ci0JcmV0dXJuICFhdG9taWNfc3ViX3JldHVybihudW1f
ZW50cmllcywgJnB0LT51c2VkKTsKKworCWF0b21pY19zdWIobnVtX2VudHJpZXMsICZwdC0+dXNl
ZCk7CiB9CiAKLXN0YXRpYyBib29sIGdlbjhfcHBndHRfY2xlYXJfcGQoc3RydWN0IGk5MTVfYWRk
cmVzc19zcGFjZSAqdm0sCitzdGF0aWMgdm9pZCBnZW44X3BwZ3R0X2NsZWFyX3BkKHN0cnVjdCBp
OTE1X2FkZHJlc3Nfc3BhY2UgKnZtLAogCQkJCXN0cnVjdCBpOTE1X3BhZ2VfZGlyZWN0b3J5ICpw
ZCwKIAkJCQl1NjQgc3RhcnQsIHU2NCBsZW5ndGgpCiB7CkBAIC04NTAsMzAgKzg4NywyMSBAQCBz
dGF0aWMgYm9vbCBnZW44X3BwZ3R0X2NsZWFyX3BkKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2Ug
KnZtLAogCXUzMiBwZGU7CiAKIAlnZW44X2Zvcl9lYWNoX3BkZShwdCwgcGQsIHN0YXJ0LCBsZW5n
dGgsIHBkZSkgewotCQlib29sIGZyZWUgPSBmYWxzZTsKLQogCQlHRU1fQlVHX09OKHB0ID09IHZt
LT5zY3JhdGNoX3B0KTsKIAotCQlpZiAoIWdlbjhfcHBndHRfY2xlYXJfcHQodm0sIHB0LCBzdGFy
dCwgbGVuZ3RoKSkKLQkJCWNvbnRpbnVlOworCQlhdG9taWNfaW5jKCZwdC0+dXNlZCk7CiAKLQkJ
c3Bpbl9sb2NrKCZwZC0+bG9jayk7Ci0JCWlmICghYXRvbWljX3JlYWQoJnB0LT51c2VkKSkgewot
CQkJY2xlYXJfcGRfZW50cnkocGQsIHBkZSwgdm0tPnNjcmF0Y2hfcHQpOwotCQkJZnJlZSA9IHRy
dWU7Ci0JCX0KLQkJc3Bpbl91bmxvY2soJnBkLT5sb2NrKTsKLQkJaWYgKGZyZWUpCisJCWdlbjhf
cHBndHRfY2xlYXJfcHQodm0sIHB0LCBzdGFydCwgbGVuZ3RoKTsKKworCQlpZiAocmVsZWFzZV9w
dF9lbnRyeShwZCwgcGRlLCBwdCwgdm0tPnNjcmF0Y2hfcHQpKQogCQkJZnJlZV9wdCh2bSwgcHQp
OwogCX0KLQotCXJldHVybiAhYXRvbWljX3JlYWQoJnBkLT51c2VkKTsKIH0KIAogLyogUmVtb3Zl
cyBlbnRyaWVzIGZyb20gYSBzaW5nbGUgcGFnZSBkaXIgcG9pbnRlciwgcmVsZWFzaW5nIGl0IGlm
IGl0J3MgZW1wdHkuCiAgKiBDYWxsZXIgY2FuIHVzZSB0aGUgcmV0dXJuIHZhbHVlIHRvIHVwZGF0
ZSBoaWdoZXItbGV2ZWwgZW50cmllcwogICovCi1zdGF0aWMgYm9vbCBnZW44X3BwZ3R0X2NsZWFy
X3BkcChzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKK3N0YXRpYyB2b2lkIGdlbjhfcHBn
dHRfY2xlYXJfcGRwKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZtLAogCQkJCSBzdHJ1Y3Qg
aTkxNV9wYWdlX2RpcmVjdG9yeSAqIGNvbnN0IHBkcCwKIAkJCQkgdTY0IHN0YXJ0LCB1NjQgbGVu
Z3RoKQogewpAQCAtODgxLDI0ICs5MDksMTUgQEAgc3RhdGljIGJvb2wgZ2VuOF9wcGd0dF9jbGVh
cl9wZHAoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJdW5zaWduZWQgaW50IHBkcGU7
CiAKIAlnZW44X2Zvcl9lYWNoX3BkcGUocGQsIHBkcCwgc3RhcnQsIGxlbmd0aCwgcGRwZSkgewot
CQlib29sIGZyZWUgPSBmYWxzZTsKLQogCQlHRU1fQlVHX09OKHBkID09IHZtLT5zY3JhdGNoX3Bk
KTsKIAotCQlpZiAoIWdlbjhfcHBndHRfY2xlYXJfcGQodm0sIHBkLCBzdGFydCwgbGVuZ3RoKSkK
LQkJCWNvbnRpbnVlOworCQlhdG9taWNfaW5jKCZwZC0+dXNlZCk7CiAKLQkJc3Bpbl9sb2NrKCZw
ZHAtPmxvY2spOwotCQlpZiAoIWF0b21pY19yZWFkKCZwZC0+dXNlZCkpIHsKLQkJCWNsZWFyX3Bk
X2VudHJ5KHBkcCwgcGRwZSwgdm0tPnNjcmF0Y2hfcGQpOwotCQkJZnJlZSA9IHRydWU7Ci0JCX0K
LQkJc3Bpbl91bmxvY2soJnBkcC0+bG9jayk7Ci0JCWlmIChmcmVlKQorCQlnZW44X3BwZ3R0X2Ns
ZWFyX3BkKHZtLCBwZCwgc3RhcnQsIGxlbmd0aCk7CisKKwkJaWYgKHJlbGVhc2VfcGRfZW50cnko
cGRwLCBwZHBlLCBwZCwgdm0tPnNjcmF0Y2hfcGQpKQogCQkJZnJlZV9wZCh2bSwgcGQpOwogCX0K
LQotCXJldHVybiAhYXRvbWljX3JlYWQoJnBkcC0+dXNlZCk7CiB9CiAKIHN0YXRpYyB2b2lkIGdl
bjhfcHBndHRfY2xlYXJfM2x2bChzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKQEAgLTky
MiwxOSArOTQxLDEzIEBAIHN0YXRpYyB2b2lkIGdlbjhfcHBndHRfY2xlYXJfNGx2bChzdHJ1Y3Qg
aTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKIAlHRU1fQlVHX09OKCFpOTE1X3ZtX2lzXzRsdmwodm0p
KTsKIAogCWdlbjhfZm9yX2VhY2hfcG1sNGUocGRwLCBwbWw0LCBzdGFydCwgbGVuZ3RoLCBwbWw0
ZSkgewotCQlib29sIGZyZWUgPSBmYWxzZTsKIAkJR0VNX0JVR19PTihwZHAgPT0gdm0tPnNjcmF0
Y2hfcGRwKTsKIAotCQlpZiAoIWdlbjhfcHBndHRfY2xlYXJfcGRwKHZtLCBwZHAsIHN0YXJ0LCBs
ZW5ndGgpKQotCQkJY29udGludWU7CisJCWF0b21pY19pbmMoJnBkcC0+dXNlZCk7CiAKLQkJc3Bp
bl9sb2NrKCZwbWw0LT5sb2NrKTsKLQkJaWYgKCFhdG9taWNfcmVhZCgmcGRwLT51c2VkKSkgewot
CQkJY2xlYXJfcGRfZW50cnkocG1sNCwgcG1sNGUsIHZtLT5zY3JhdGNoX3BkcCk7Ci0JCQlmcmVl
ID0gdHJ1ZTsKLQkJfQotCQlzcGluX3VubG9jaygmcG1sNC0+bG9jayk7Ci0JCWlmIChmcmVlKQor
CQlnZW44X3BwZ3R0X2NsZWFyX3BkcCh2bSwgcGRwLCBzdGFydCwgbGVuZ3RoKTsKKworCQlpZiAo
cmVsZWFzZV9wZF9lbnRyeShwbWw0LCBwbWw0ZSwgcGRwLCB2bS0+c2NyYXRjaF9wZHApKQogCQkJ
ZnJlZV9wZCh2bSwgcGRwKTsKIAl9CiB9CkBAIC0xNDU3LDE3ICsxNDcwLDggQEAgc3RhdGljIGlu
dCBnZW44X3BwZ3R0X2FsbG9jX3BkcChzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKIAln
b3RvIG91dDsKIAogdW53aW5kX3BkOgotCWlmIChhbGxvYykgewotCQlmcmVlX3BkKHZtLCBhbGxv
Yyk7Ci0JCWFsbG9jID0gTlVMTDsKLQl9Ci0Jc3Bpbl9sb2NrKCZwZHAtPmxvY2spOwotCWlmIChh
dG9taWNfZGVjX2FuZF90ZXN0KCZwZC0+dXNlZCkpIHsKLQkJR0VNX0JVR19PTihhbGxvYyk7Ci0J
CWFsbG9jID0gcGQ7IC8qIGRlZmVyIHRoZSBmcmVlIHRvIGFmdGVyIHRoZSBsb2NrICovCi0JCWNs
ZWFyX3BkX2VudHJ5KHBkcCwgcGRwZSwgdm0tPnNjcmF0Y2hfcGQpOwotCX0KLQlzcGluX3VubG9j
aygmcGRwLT5sb2NrKTsKKwlpZiAocmVsZWFzZV9wZF9lbnRyeShwZHAsIHBkcGUsIHBkLCB2bS0+
c2NyYXRjaF9wZCkpCisJCWZyZWVfcGQodm0sIHBkKTsKIHVud2luZDoKIAlnZW44X3BwZ3R0X2Ns
ZWFyX3BkcCh2bSwgcGRwLCBmcm9tLCBzdGFydCAtIGZyb20pOwogb3V0OgpAQCAtMTUzMCwxNyAr
MTUzNCw4IEBAIHN0YXRpYyBpbnQgZ2VuOF9wcGd0dF9hbGxvY180bHZsKHN0cnVjdCBpOTE1X2Fk
ZHJlc3Nfc3BhY2UgKnZtLAogCWdvdG8gb3V0OwogCiB1bndpbmRfcGRwOgotCWlmIChhbGxvYykg
ewotCQlmcmVlX3BkKHZtLCBhbGxvYyk7Ci0JCWFsbG9jID0gTlVMTDsKLQl9Ci0Jc3Bpbl9sb2Nr
KCZwbWw0LT5sb2NrKTsKLQlpZiAoYXRvbWljX2RlY19hbmRfdGVzdCgmcGRwLT51c2VkKSkgewot
CQlHRU1fQlVHX09OKGFsbG9jKTsKLQkJYWxsb2MgPSBwZHA7IC8qIGRlZmVyIHRoZSBmcmVlIHVu
dGlsIGFmdGVyIHRoZSBsb2NrICovCi0JCWNsZWFyX3BkX2VudHJ5KHBtbDQsIHBtbDRlLCB2bS0+
c2NyYXRjaF9wZHApOwotCX0KLQlzcGluX3VubG9jaygmcG1sNC0+bG9jayk7CisJaWYgKHJlbGVh
c2VfcGRfZW50cnkocG1sNCwgcG1sNGUsIHBkcCwgdm0tPnNjcmF0Y2hfcGRwKSkKKwkJZnJlZV9w
ZCh2bSwgcGRwKTsKIHVud2luZDoKIAlnZW44X3BwZ3R0X2NsZWFyXzRsdmwodm0sIGZyb20sIHN0
YXJ0IC0gZnJvbSk7CiBvdXQ6CkBAIC0xNTcyLDggKzE1NjcsOCBAQCBzdGF0aWMgaW50IGdlbjhf
cHJlYWxsb2NhdGVfdG9wX2xldmVsX3BkcChzdHJ1Y3QgaTkxNV9wcGd0dCAqcHBndHQpCiB1bndp
bmQ6CiAJc3RhcnQgLT0gZnJvbTsKIAlnZW44X2Zvcl9lYWNoX3BkcGUocGQsIHBkcCwgZnJvbSwg
c3RhcnQsIHBkcGUpIHsKLQkJY2xlYXJfcGRfZW50cnkocGRwLCBwZHBlLCB2bS0+c2NyYXRjaF9w
ZCk7Ci0JCWZyZWVfcGQodm0sIHBkKTsKKwkJaWYgKHJlbGVhc2VfcGRfZW50cnkocGRwLCBwZHBl
LCBwZCwgdm0tPnNjcmF0Y2hfcGQpKQorCQkJZnJlZV9wZCh2bSwgcGQpOwogCX0KIAlhdG9taWNf
c2V0KCZwZHAtPnVzZWQsIDApOwogCXJldHVybiAtRU5PTUVNOwotLSAKMi4xNy4xCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGlu
ZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

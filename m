Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id F32C43B0AC8
	for <lists+intel-gfx@lfdr.de>; Tue, 22 Jun 2021 18:55:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4D5996E1FB;
	Tue, 22 Jun 2021 16:55:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mail-wr1-x429.google.com (mail-wr1-x429.google.com
 [IPv6:2a00:1450:4864:20::429])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 165E76E7E6
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Jun 2021 16:55:22 +0000 (UTC)
Received: by mail-wr1-x429.google.com with SMTP id i94so24467065wri.4
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Jun 2021 09:55:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ffwll.ch; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=k6WOyWQYHcZ7BUOyWN1gPSydmhVc1/DqBcFiE+HEe3c=;
 b=DvJ2mB+nNf62O21HKZ+MLBNSken4ZZNVrHXVcvkbKhvDtQn47AevnpgqIJwVk9phbE
 9yZRGcKRCjEoRV7sFwapEulhpTiTegDk4E/Hm3L0znqAIrl3xJ0v6PZvcR3z1R7I7WGa
 J1EzEQ5aPGdlODEo3CvDe5s4znAANT75na+FA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=k6WOyWQYHcZ7BUOyWN1gPSydmhVc1/DqBcFiE+HEe3c=;
 b=Z15CMdC0pHK8u6VvQzrx1GpHQ0LA8oLzmStnot/G8gOKxyKj97RrbAzZaF8P4ICAam
 w0R6r7ai5RWE33tS8wUlXXT0NaotT9RvAoKXZ/kuS0w8XGdP9qyUOz3yVbJ3MqbxtLlk
 Ny1u1usfDagaYFJs9ytxqXrBQtRBi2LvPaALc6FMleLF40fDz2MUITNJFmNo6pjqmMql
 VIlxVsF+b3NpNlE+8gvzxnHYKloqjSpAKiTlMzqFHhBfPvTnYUSKuhvQSEEJXnngQc8i
 xBMJyc6tsz2K/vfBgk4vU/g79fvn8XSYytfEKQB7CHqNAQWmdDvxyZsqjXq/yfoSnMS7
 t3ZQ==
X-Gm-Message-State: AOAM533ahFnZ8CvejdYnY2qKKmF86k8hjYhFwlxXvF5Q0yuH+5JjS1oz
 4lTwOI6AxdZ8z2nJZEXP9EDhyQ==
X-Google-Smtp-Source: ABdhPJxLag78qCsFa/b5BVvFmLUEMcI5vppSvuJeSDaBFj9sXR4O8b3CKtm3wwfePubYh2rE1gy0Gw==
X-Received: by 2002:adf:d0c8:: with SMTP id z8mr6199658wrh.262.1624380920621; 
 Tue, 22 Jun 2021 09:55:20 -0700 (PDT)
Received: from phenom.ffwll.local ([2a02:168:57f4:0:efd0:b9e5:5ae6:c2fa])
 by smtp.gmail.com with ESMTPSA id l23sm3632342wmc.5.2021.06.22.09.55.19
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Tue, 22 Jun 2021 09:55:20 -0700 (PDT)
From: Daniel Vetter <daniel.vetter@ffwll.ch>
To: DRI Development <dri-devel@lists.freedesktop.org>
Date: Tue, 22 Jun 2021 18:54:59 +0200
Message-Id: <20210622165511.3169559-4-daniel.vetter@ffwll.ch>
X-Mailer: git-send-email 2.32.0.rc2
In-Reply-To: <20210622165511.3169559-1-daniel.vetter@ffwll.ch>
References: <20210622165511.3169559-1-daniel.vetter@ffwll.ch>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 03/15] dma-buf: Document dma-buf implicit
 fencing/resv fencing rules
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Rob Clark <robdclark@chromium.org>, Daniel Stone <daniels@collabora.com>,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 Daniel Vetter <daniel.vetter@intel.com>,
 Daniel Vetter <daniel.vetter@ffwll.ch>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 Kevin Wang <kevin1.wang@amd.com>, Sumit Semwal <sumit.semwal@linaro.org>,
 linaro-mm-sig@lists.linaro.org, Luben Tuikov <luben.tuikov@amd.com>,
 "Kristian H . Kristensen" <hoegsberg@google.com>,
 Chen Li <chenli@uniontech.com>, Bas Nieuwenhuizen <bas@basnieuwenhuizen.nl>,
 Alex Deucher <alexander.deucher@amd.com>, mesa-dev@lists.freedesktop.org,
 =?UTF-8?q?Michel=20D=C3=A4nzer?= <michel@daenzer.net>,
 Dennis Li <Dennis.Li@amd.com>, Deepak R Varma <mh12gx2825@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RG9jcyBmb3Igc3RydWN0IGRtYV9yZXN2IGFyZSBmYWlybHkgY2xlYXI6CgoiQSByZXNlcnZhdGlv
biBvYmplY3QgY2FuIGhhdmUgYXR0YWNoZWQgb25lIGV4Y2x1c2l2ZSBmZW5jZSAobm9ybWFsbHkK
YXNzb2NpYXRlZCB3aXRoIHdyaXRlIG9wZXJhdGlvbnMpIG9yIE4gc2hhcmVkIGZlbmNlcyAocmVh
ZApvcGVyYXRpb25zKS4iCgpodHRwczovL2RyaS5mcmVlZGVza3RvcC5vcmcvZG9jcy9kcm0vZHJp
dmVyLWFwaS9kbWEtYnVmLmh0bWwjcmVzZXJ2YXRpb24tb2JqZWN0cwoKRnVydGhlcm1vcmUgYSBy
ZXZpZXcgYWNyb3NzIGFsbCBvZiB1cHN0cmVhbS4KCkZpcnN0IG9mIHJlbmRlciBkcml2ZXJzIGFu
ZCBob3cgdGhleSBzZXQgaW1wbGljaXQgZmVuY2VzOgoKLSBub3V2ZWF1IGZvbGxvd3MgdGhpcyBj
b250cmFjdCwgc2VlIGluIHZhbGlkYXRlX2Zpbmlfbm9fdGlja2V0KCkKCgkJCW5vdXZlYXVfYm9f
ZmVuY2UobnZibywgZmVuY2UsICEhYi0+d3JpdGVfZG9tYWlucyk7CgogIGFuZCB0aGF0IGxhc3Qg
Ym9vbGVhbiBjb250cm9scyB3aGV0aGVyIHRoZSBleGNsdXNpdmUgb3Igc2hhcmVkIGZlbmNlCiAg
c2xvdCBpcyB1c2VkLgoKLSByYWRlb24gZm9sbG93cyB0aGlzIGNvbnRyYWN0IGJ5IHNldHRpbmcK
CgkJcC0+cmVsb2NzW2ldLnR2Lm51bV9zaGFyZWQgPSAhci0+d3JpdGVfZG9tYWluOwoKICBpbiBy
YWRlb25fY3NfcGFyc2VyX3JlbG9jcygpLCB3aGljaCBlbnN1cmVzIHRoYXQgdGhlIGNhbGwgdG8K
ICB0dG1fZXVfZmVuY2VfYnVmZmVyX29iamVjdHMoKSBpbiByYWRlb25fY3NfcGFyc2VyX2Zpbmko
KSB3aWxsIGRvIHRoZQogIHJpZ2h0IHRoaW5nLgoKLSB2bXdnZnggc2VlbXMgdG8gZm9sbG93IHRo
aXMgY29udHJhY3Qgd2l0aCB0aGUgc2hvdGd1biBhcHByb2FjaCBvZgogIGFsd2F5cyBzZXR0aW5n
IHR0bV92YWxfYnVmLT5udW1fc2hhcmVkID0gMCwgd2hpY2ggbWVhbnMKICB0dG1fZXVfZmVuY2Vf
YnVmZmVyX29iamVjdHMoKSB3aWxsIG9ubHkgdXNlIHRoZSBleGNsdXNpdmUgc2xvdC4KCi0gZXRu
YXZpdiBmb2xsb3dzIHRoaXMgY29udHJhY3QsIGFzIGNhbiBiZSB0cml2aWFsbHkgc2VlbiBieSBs
b29raW5nCiAgYXQgc3VibWl0X2F0dGFjaF9vYmplY3RfZmVuY2VzKCkKCi0gaTkxNSBpcyBhIGJp
dCBhIGNvbnZvbHV0ZWQgbWF6ZSB3aXRoIG11bHRpcGxlIHBhdGhzIGxlYWRpbmcgdG8KICBpOTE1
X3ZtYV9tb3ZlX3RvX2FjdGl2ZSgpLiBXaGljaCBzZXRzIHRoZSBleGNsdXNpdmUgZmxhZyBpZgog
IEVYRUNfT0JKRUNUX1dSSVRFIGlzIHNldC4gVGhpcyBjYW4gZWl0aGVyIGNvbWUgYXMgYSBidWZm
ZXIgZmxhZyBmb3IKICBzb2Z0cGluIG1vZGUsIG9yIHRocm91Z2ggdGhlIHdyaXRlX2RvbWFpbiB3
aGVuIHVzaW5nIHJlbG9jYXRpb25zLiBJdAogIGZvbGxvd3MgdGhpcyBjb250cmFjdC4KCi0gbGlt
YSBmb2xsb3dzIHRoaXMgY29udHJhY3QsIHNlZSBsaW1hX2dlbV9zdWJtaXQoKSB3aGljaCBzZXRz
IHRoZQogIGV4Y2x1c2l2ZSBmZW5jZSB3aGVuIHRoZSBMSU1BX1NVQk1JVF9CT19XUklURSBmbGFn
IGlzIHNldCBmb3IgdGhhdAogIGJvCgotIG1zbSBmb2xsb3dzIHRoaXMgY29udHJhY3QsIHNlZSBt
c21fZ3B1X3N1Ym1pdCgpIHdoaWNoIHNldHMgdGhlCiAgZXhjbHVzaXZlIGZsYWcgd2hlbiB0aGUg
TVNNX1NVQk1JVF9CT19XUklURSBpcyBzZXQgZm9yIHRoYXQgYnVmZmVyCgotIHBhbmZyb3N0IGZv
bGxvd3MgdGhpcyBjb250cmFjdCB3aXRoIHRoZSBzaG90Z3VuIGFwcHJvYWNoIG9mIGp1c3QKICBh
bHdheXMgc2V0dGluZyB0aGUgZXhjbHVzaXZlIGZlbmNlLCBzZWUKICBwYW5mcm9zdF9hdHRhY2hf
b2JqZWN0X2ZlbmNlcygpLiBCZW5lZml0cyBvZiBhIHNpbmdsZSBlbmdpbmUgSSBndWVzcwoKLSB2
M2QgZm9sbG93cyB0aGlzIGNvbnRyYWN0IHdpdGggdGhlIHNhbWUgc2hvdGd1biBhcHByb2FjaCBp
bgogIHYzZF9hdHRhY2hfZmVuY2VzX2FuZF91bmxvY2tfcmVzZXJ2YXRpb24oKSwgYnV0IGl0IGhh
cyBhdCBsZWFzdCBhbgogIFhYWCBjb21tZW50IHRoYXQgbWF5YmUgdGhpcyBzaG91bGQgYmUgaW1w
cm92ZWQKCi0gdjRjIHVzZXMgdGhlIHNhbWUgc2hvdGd1biBhcHByb2FjaCBvZiBhbHdheXMgc2V0
dGluZyBhbiBleGNsdXNpdmUKICBmZW5jZSwgc2VlIHZjNF91cGRhdGVfYm9fc2Vxbm9zKCkKCi0g
dmdlbSBhbHNvIGZvbGxvd3MgdGhpcyBjb250cmFjdCwgc2VlIHZnZW1fZmVuY2VfYXR0YWNoX2lv
Y3RsKCkgYW5kCiAgdGhlIFZHRU1fRkVOQ0VfV1JJVEUuIFRoaXMgaXMgdXNlZCBpbiBzb21lIGln
dHMgdG8gdmFsaWRhdGUgcHJpbWUKICBzaGFyaW5nIHdpdGggaTkxNS5rbyB3aXRob3V0IHRoZSBu
ZWVkIG9mIGEgMm5kIGdwdQoKLSB2cml0aW8gZm9sbG93cyB0aGlzIGNvbnRyYWN0IGFnYWluIHdp
dGggdGhlIHNob3RndW4gYXBwcm9hY2ggb2YKICBhbHdheXMgc2V0dGluZyBhbiBleGNsdXNpdmUg
ZmVuY2UsIHNlZSB2aXJ0aW9fZ3B1X2FycmF5X2FkZF9mZW5jZSgpCgpUaGlzIGNvdmVycyB0aGUg
c2V0dGluZyBvZiB0aGUgZXhjbHVzaXZlIGZlbmNlcyB3aGVuIHdyaXRpbmcuCgpTeW5jaHJvbml6
aW5nIGFnYWluc3QgdGhlIGV4Y2x1c2l2ZSBmZW5jZSBpcyBhIGxvdCBtb3JlIHRyaWNreSwgYW5k
IEkKb25seSBzcG90IGNoZWNrZWQgYSBmZXc6CgotIGk5MTUgZG9lcyBpdCwgd2l0aCB0aGUgb3B0
aW9uYWwgRVhFQ19PQkpFQ1RfQVNZTkMgdG8gc2tpcCBhbGwKICBpbXBsaWNpdCBkZXBlbmRlbmNp
ZXMgKHdoaWNoIGlzIHVzZWQgYnkgdnVsa2FuKQoKLSBldG5hdml2IGRvZXMgdGhpcy4gSW1wbGlj
aXQgZGVwZW5kZW5jaWVzIGFyZSBjb2xsZWN0ZWQgaW4KICBzdWJtaXRfZmVuY2Vfc3luYygpLCBh
Z2FpbiB3aXRoIGFuIG9wdC1vdXQgZmxhZwogIEVUTkFfU1VCTUlUX05PX0lNUExJQ0lULiBUaGVz
ZSBhcmUgdGhlbiBwaWNrZWQgdXAgaW4KICBldG5hdml2X3NjaGVkX2RlcGVuZGVuY3kgd2hpY2gg
aXMgdGhlCiAgZHJtX3NjaGVkX2JhY2tlbmRfb3BzLT5kZXBlbmRlbmN5IGNhbGxiYWNrLgoKLSB2
NGMgc2VlbXMgdG8gbm90IGRvIG11Y2ggaGVyZSwgbWF5YmUgZ2V0cyBhd2F5IHdpdGggaXQgYnkg
bm90IGhhdmluZwogIGEgc2NoZWR1bGVyIGFuZCBvbmx5IGEgc2luZ2xlIGVuZ2luZS4gU2luY2Ug
YWxsIG5ld2VyIGJyb2FkY29tIGNoaXBzIHRoYW4KICB0aGUgT0cgdmM0IHVzZSB2M2QgZm9yIHJl
bmRlcmluZywgd2hpY2ggZm9sbG93cyB0aGlzIGNvbnRyYWN0LCB0aGUKICBpbXBhY3Qgb2YgdGhp
cyBpc3N1ZSBpcyBmYWlybHkgc21hbGwuCgotIHYzZCBkb2VzIHRoaXMgdXNpbmcgdGhlIGRybV9n
ZW1fZmVuY2VfYXJyYXlfYWRkX2ltcGxpY2l0KCkgaGVscGVyLAogIHdoaWNoIHRoZW4gaXQncyBk
cm1fc2NoZWRfYmFja2VuZF9vcHMtPmRlcGVuZGVuY3kgY2FsbGJhY2sKICB2M2Rfam9iX2RlcGVu
ZGVuY3koKSBwaWNrcyB1cC4KCi0gcGFuZnJvc3QgaXMgbmljZSBoZXJlIGFuZCB0cmFja3MgdGhl
IGltcGxpY2l0IGZlbmNlcyBpbgogIHBhbmZyb3N0X2pvYi0+aW1wbGljaXRfZmVuY2VzLCB3aGlj
aCBhZ2FpbiB0aGUKICBkcm1fc2NoZWRfYmFja2VuZF9vcHMtPmRlcGVuZGVuY3kgY2FsbGJhY2sg
cGFuZnJvc3Rfam9iX2RlcGVuZGVuY3koKQogIHBpY2tzIHVwLiBJdCBpcyBtaWxkbHkgcXVlc3Rp
b25hYmxlIHRob3VnaCBzaW5jZSBpdCBvbmx5IHBpY2tzIHVwCiAgZXhjbHVzaXZlIGZlbmNlcyBp
biBwYW5mcm9zdF9hY3F1aXJlX29iamVjdF9mZW5jZXMoKSwgYnV0IG5vdCBidWdneQogIGluIHBy
YWN0aWNlIGJlY2F1c2UgaXQgYWxzbyBhbHdheXMgc2V0cyB0aGUgZXhjbHVzaXZlIGZlbmNlLiBJ
dAogIHNob3VsZCBwaWNrIHVwIGJvdGggc2V0cyBvZiBmZW5jZXMsIGp1c3QgaW4gY2FzZSB0aGVy
ZSdzIGV2ZXIgZ29pbmcKICB0byBiZSBhIDJuZCBncHUgaW4gYSBTb0Mgd2l0aCBhIG1hbGkgZ3B1
LiBPciBtYXliZSBhIG1hbGkgU29DIHdpdGggYQogIHBjaWUgcG9ydCBhbmQgYSByZWFsIGdwdSwg
d2hpY2ggbWlnaHQgYWN0dWFsbHkgaGFwcGVuIGV2ZW50dWFsbHkuIEEKICBidWcsIGJ1dCBlYXN5
IHRvIGZpeC4gU2hvdWxkIHByb2JhYmx5IHVzZSB0aGUKICBkcm1fZ2VtX2ZlbmNlX2FycmF5X2Fk
ZF9pbXBsaWNpdCgpIGhlbHBlci4KCi0gbGltYSBpcyBuaWNlIGFuIGVhc3ksIHVzZXMgZHJtX2dl
bV9mZW5jZV9hcnJheV9hZGRfaW1wbGljaXQoKSBhbmQKICB0aGUgc2FtZSBzY2hlbWEgYXMgdjNk
LgoKLSBtc20gaXMgbWlsZGx5IGVudGVydGFpbmluZy4gSXQgYWxzbyBzdXBwb3J0cyBNU01fU1VC
TUlUX05PX0lNUExJQ0lULAogIGJ1dCBiZWNhdXNlIGl0IGRvZXNuJ3QgdXNlIHRoZSBkcm0vc2No
ZWR1bGVyIGl0IGhhbmRsZXMgZmVuY2VzIGZyb20KICB0aGUgd3JvbmcgY29udGV4dCB3aXRoIGEg
c3luY2hyb25vdXMgZG1hX2ZlbmNlX3dhaXQuIFNlZQogIHN1Ym1pdF9mZW5jZV9zeW5jKCkgbGVh
ZGluZyB0byBtc21fZ2VtX3N5bmNfb2JqZWN0KCkuIEludmVzdGluZyBpbnRvCiAgYSBzY2hlZHVs
ZXIgbWlnaHQgYmUgYSBnb29kIGlkZWEuCgotIGFsbCB0aGUgcmVtYWluaW5nIGRyaXZlcnMgYXJl
IHR0bSBiYXNlZCwgd2hlcmUgSSBob3BlIHRoZXkgZG8KICBhcHByb3ByaWF0ZWx5IG9iZXkgaW1w
bGljaXQgZmVuY2VzIGFscmVhZHkuIEkgZGlkbid0IGRvIHRoZSBmdWxsCiAgYXVkaXQgdGhlcmUg
YmVjYXVzZSBhKSBub3QgZm9sbG93IHRoZSBjb250cmFjdCB3b3VsZCBjb25mdXNlIHR0bQogIHF1
aXRlIHdlbGwgYW5kIGIpIHJlYWRpbmcgbm9uLXN0YW5kYXJkIHNjaGVkdWxlciBhbmQgc3VibWl0
IGNvZGUKICB3aGljaCBpc24ndCBiYXNlZCBvbiBkcm0vc2NoZWR1bGVyIGlzIGEgcGFpbi4KCk9u
d2FyZHMgdG8gdGhlIGRpc3BsYXkgc2lkZS4KCi0gQW55IGRyaXZlciB1c2luZyB0aGUgZHJtX2dl
bV9wbGFuZV9oZWxwZXJfcHJlcGFyZV9mYigpIGhlbHBlciB3aWxsCiAgY29ycmVjdGx5LiBPdmVy
d2hlbG1pbmdseSBtb3N0IGRyaXZlcnMgZ2V0IHRoaXMgcmlnaHQsIGV4Y2VwdCBhIGZldwogIHRv
dGFsbHkgZG9udC4gSSdsbCBmb2xsb3cgdXAgd2l0aCBhIHBhdGNoIHRvIG1ha2UgdGhpcyB0aGUg
ZGVmYXVsdAogIGFuZCBhdm9pZCBhIGJ1bmNoIG9mIGJ1Z3MuCgotIEkgZGlkbid0IGF1ZGl0IHRo
ZSB0dG0gZHJpdmVycywgYnV0IGdpdmVuIHRoYXQgZG1hX3Jlc3Ygc3RhcnRlZAogIHRoZXJlIEkg
aG9wZSB0aGV5IGdldCB0aGlzIHJpZ2h0LgoKSW4gY29uY2x1c2lvbiB0aGlzIElTIHRoZSBjb250
cmFjdCwgYm90aCBhcyBkb2N1bWVudGVkIGFuZApvdmVyd2hlbG1pbmdseSBpbXBsZW1lbnRlZCwg
c3BlY2ljYWxseSBhcyBpbXBsZW1lbnRlZCBieSBhbGwgcmVuZGVyCmRyaXZlcnMgZXhjZXB0IGFt
ZGdwdS4KCkFtZGdwdSB0cmllZCB0byBmaXggdGhpcyBhbHJlYWR5IGluCgpjb21taXQgMDQ5YWNh
NDM2M2Q4YWY4N2NhYjhkNTNkZTU0MDE2MDJkYjNiOTk5OQpBdXRob3I6IENocmlzdGlhbiBLw7Zu
aWcgPGNocmlzdGlhbi5rb2VuaWdAYW1kLmNvbT4KRGF0ZTogICBXZWQgU2VwIDE5IDE2OjU0OjM1
IDIwMTggKzAyMDAKCiAgICBkcm0vYW1kZ3B1OiBmaXggdXNpbmcgc2hhcmVkIGZlbmNlIGZvciBl
eHBvcnRlZCBCT3MgdjIKCmJ1dCB0aGlzIGZpeCBmYWxscyBzaG9ydCBvbiBhIG51bWJlciBvZiBh
cmVhczoKCi0gSXQncyByYWN5LCBieSB0aGUgdGltZSB0aGUgYnVmZmVyIGlzIHNoYXJlZCBpdCBt
aWdodCBiZSB0b28gbGF0ZS4gVG8KICBtYWtlIHN1cmUgdGhlcmUncyBkZWZpbml0ZWx5IG5ldmVy
IGEgcHJvYmxlbSB3ZSBuZWVkIHRvIHNldCB0aGUKICBmZW5jZXMgY29ycmVjdGx5IGZvciBhbnkg
YnVmZmVyIHRoYXQncyBwb3RlbnRpYWxseSBleHBvcnRhYmxlLgoKLSBJdCdzIGJyZWFraW5nIHVh
cGksIGRtYS1idWYgZmRzIHN1cHBvcnQgcG9sbCgpIGFuZCBkaWZmZXJlbnRpdGlhdGUKICBiZXR3
ZWVuLCB3aGljaCB3YXMgaW50cm9kdWNlZCBpbgoKCWNvbW1pdCA5YjQ5NWE1ODg3OTk0YTZkNzRk
NWMyNjFkMDEyMDgzYTkyYjk0NzM4CglBdXRob3I6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVu
Lmxhbmtob3JzdEBjYW5vbmljYWwuY29tPgoJRGF0ZTogICBUdWUgSnVsIDEgMTI6NTc6NDMgMjAx
NCArMDIwMAoKCSAgICBkbWEtYnVmOiBhZGQgcG9sbCBzdXBwb3J0LCB2MwoKLSBDaHJpc3RpYW4g
S8O2bmlnIHdhbnRzIHRvIG5hY2sgbmV3IHVhcGkgYnVpbGRpbmcgZnVydGhlciBvbiB0aGlzCiAg
ZG1hX3Jlc3YgY29udHJhY3QgYmVjYXVzZSBpdCBicmVha3MgYW1kZ3B1LCBxdW90aW5nCgogICJZ
ZWFoLCBhbmQgdGhhdCBpcyBleGFjdGx5IHRoZSByZWFzb24gd2h5IEkgd2lsbCBOQUsgdGhpcyB1
QVBJIGNoYW5nZS4KCiAgIlRoaXMgZG9lc24ndCB3b3JrcyBmb3IgYW1kZ3B1IGF0IGFsbCBmb3Ig
dGhlIHJlYXNvbnMgb3V0bGluZWQgYWJvdmUuIgoKICBodHRwczovL2xvcmUua2VybmVsLm9yZy9k
cmktZGV2ZWwvZjJlYjY3NTEtMmY4Mi05YjIzLWY1N2UtNTQ4ZGU1YjcyOWRlQGdtYWlsLmNvbS8K
CiAgUmVqZWN0aW5nIG5ldyBkZXZlbG9wbWVudCBiZWNhdXNlIHlvdXIgb3duIGRyaXZlciBpcyBi
cm9rZW4gYW5kCiAgdmlvbGF0ZXMgZXN0YWJsaXNoZWQgY3Jvc3MgZHJpdmVyIGNvbnRyYWN0cyBh
bmQgdWFwaSBpcyByZWFsbHkgbm90CiAgaG93IHVwc3RyZWFtIHdvcmtzLgoKTm93IHRoaXMgcGF0
Y2ggd2lsbCBoYXZlIGEgc2V2ZXJlIHBlcmZvcm1hbmNlIGltcGFjdCBvbiBhbnl0aGluZyB0aGF0
CnJ1bnMgb24gbXVsdGlwbGUgZW5naW5lcy4gU28gd2UgY2FuJ3QganVzdCBtZXJnZSBpdCBvdXRy
aWdodCwgYnV0IG5lZWQKYSBiaXQgYSBwbGFuOgoKLSBhbWRncHUgbmVlZHMgYSBwcm9wZXIgdWFw
aSBmb3IgaGFuZGxpbmcgaW1wbGljaXQgZmVuY2luZy4gVGhlIGZ1bm55CiAgdGhpbmcgaXMgdGhh
dCB0byBkbyBpdCBjb3JyZWN0bHksIGltcGxpY2l0IGZlbmNpbmcgbXVzdCBiZSB0cmVhdGVkCiAg
YXMgYSB2ZXJ5IHN0cmFuZ2UgSVBDIG1lY2hhbmlzbSBmb3IgdHJhbnNwb3J0aW5nIGZlbmNlcywg
d2hlcmUgYm90aAogIHNldHRpbmcgdGhlIGZlbmNlIGFuZCBkZXBlbmRlbmN5IGludGVyY2VwdHMg
bXVzdCBiZSBoYW5kbGVkCiAgZXhwbGljaXRseS4gQ3VycmVudCBiZXN0IHByYWN0aWNlcyBpcyBh
IHBlci1ibyBmbGFnIHRvIGluZGljYXRlCiAgd3JpdGVzLCBhbmQgYSBwZXItYm8gZmxhZyB0byB0
byBza2lwIGltcGxpY2l0IGZlbmNpbmcgaW4gdGhlIENTCiAgaW9jdGwgYXMgYSBuZXcgY2h1bmsu
CgotIFNpbmNlIGFtZGdwdSBoYXMgYmVlbiBzaGlwcGluZyB3aXRoIGJyb2tlbiBiZWhhdmlvdXIg
d2UgbmVlZCBhbgogIG9wdC1vdXQgZmxhZyBmcm9tIHRoZSBidXRjaGVyZWQgaW1wbGljaXQgZmVu
Y2luZyBtb2RlbCB0byBlbmFibGUgdGhlCiAgcHJvcGVyIGV4cGxpY2l0IGltcGxpY2l0IGZlbmNp
bmcgbW9kZWwuCgotIGZvciBrZXJuZWwgbWVtb3J5IGZlbmNlcyBkdWUgdG8gYm8gbW92ZXMgYXQg
bGVhc3QgdGhlIGk5MTUgaWRlYSBpcwogIHRvIHVzZSB0dG1fYm8tPm1vdmluZy4gYW1kZ3B1IHBy
b2JhYmx5IG5lZWRzIHRoZSBzYW1lLgoKLSBzaW5jZSB0aGUgY3VycmVudCBwMnAgZG1hLWJ1ZiBp
bnRlcmZhY2UgYXNzdW1lcyB0aGUga2VybmVsIG1lbW9yeQogIGZlbmNlIGlzIGluIHRoZSBleGNs
dXNpdmUgZG1hX3Jlc3YgZmVuY2Ugc2xvdCB3ZSBuZWVkIHRvIGFkZCBhIG5ldwogIGZlbmNlIHNs
b3QgZm9yIGtlcm5lbCBmZW5jZXMsIHdoaWNoIG11c3QgbmV2ZXIgYmUgaWdub3JlZC4gU2luY2UK
ICBjdXJyZW50bHkgb25seSBhbWRncHUgc3VwcG9ydHMgdGhpcyB0aGVyZSdzIG5vIHJlYWwgcHJv
YmxlbSBoZXJlCiAgeWV0LCB1bnRpbCBhbWRncHUgZ2FpbnMgYSBOT19JTVBMSUNJVCBDUyBmbGFn
LgoKLSBOZXcgdXNlcnNwYWNlIG5lZWRzIHRvIHNoaXAgaW4gZW5vdWdoIGRlc2t0b3AgZGlzdHJv
cyBzbyB0aGF0IHVzZXJzCiAgd29udCBub3RpY2UgdGhlIHBlcmYgaW1wYWN0LiBJIHRoaW5rIHdl
IGNhbiBpZ25vcmUgTFRTIGRpc3Ryb3Mgd2hvCiAgdXBncmFkZSB0aGVpciBrZXJuZWxzIGJ1dCBu
b3QgdGhlaXIgbWVzYTNkIHNuYXBzaG90LgoKLSBUaGVuIHdoZW4gdGhpcyBpcyBhbGwgaW4gcGxh
Y2Ugd2UgY2FuIG1lcmdlIHRoaXMgcGF0Y2ggaGVyZS4KCldoYXQgaXMgbm90IGEgc29sdXRpb24g
dG8gdGhpcyBwcm9ibGVtIGhlcmUgaXMgdHJ5aW5nIHRvIG1ha2UgdGhlCmRtYV9yZXN2IHJ1bGVz
IGluIHRoZSBrZXJuZWwgbW9yZSBjbGV2ZXIuIFRoZSBmdW5kYW1lbnRhbCBpc3N1ZSBoZXJlCmlz
IHRoYXQgdGhlIGFtZGdwdSBDUyB1YXBpIGlzIHRoZSBsZWFzdCBleHByZXNzaXZlIG9uZSBhY3Jv
c3MgYWxsCmRyaXZlcnMgKG9ubHkgZXF1YWxsZWQgYnkgcGFuZnJvc3QsIHdoaWNoIGhhcyBhbiBh
Y3R1YWwgZXhjdXNlKSBieSBub3QKYWxsb3dpbmcgYW55IHVzZXJzcGFjZSBjb250cm9sIG92ZXIg
aG93IGltcGxpY2l0IHN5bmMgaXMgY29uZHVjdGVkLgoKVW50aWwgdGhpcyBpcyBmaXhlZCBpdCdz
IGNvbXBsZXRlbHkgcG9pbnRsZXNzIHRvIG1ha2UgdGhlIGtlcm5lbCBtb3JlCmNsZXZlciB0byBp
bXByb3ZlIGFtZGdwdSwgYmVjYXVzZSBhbGwgd2UncmUgZG9pbmcgaXMgcGFwZXJpbmcgb3Zlcgp0
aGlzIHVhcGkgZGVzaWduIGlzc3VlLiBhbWRncHUgbmVlZHMgdG8gYXR0YWluIHRoZSBzdGF0dXMg
cXVvCmVzdGFibGlzaGVkIGJ5IG90aGVyIGRyaXZlcnMgZmlyc3QsIG9uY2UgdGhhdCdzIGFjaGll
dmVkIHdlIGNhbiB0YWNrbGUKdGhlIHJlbWFpbmluZyBpc3N1ZXMgaW4gYSBjb25zaXN0ZW50IHdh
eSBhY3Jvc3MgZHJpdmVycy4KCnYyOiBCYXMgcG9pbnRlZCBtZSBhdCBBTURHUFVfR0VNX0NSRUFU
RV9FWFBMSUNJVF9TWU5DLCB3aGljaCBJCmVudGlyZWx5IG1pc3NlZC4KClRoaXMgaXMgZ3JlYXQg
YmVjYXVzZSBpdCBtZWFucyB0aGUgYW1kZ3B1IHNwZWNpZmljIHBpZWNlIGZvciBwcm9wZXIKaW1w
bGljaXQgZmVuY2UgaGFuZGxpbmcgZXhpc3RzIGFscmVhZHksIGFuZCB0aGF0IHNpbmNlIGEgd2hp
bGUuIFRoZQpvbmx5IHRoaW5nIHRoYXQncyBub3cgbWlzc2luZyBpcwotIGZpc2hpbmcgdGhlIGlt
cGxpY2l0IGZlbmNlcyBvdXQgb2YgYSBzaGFyZWQgb2JqZWN0IGF0IHRoZSByaWdodCB0aW1lCi0g
c2V0dGluZyB0aGUgZXhjbHVzaXZlIGltcGxpY2l0IGZlbmNlIHNsb3QgYXQgdGhlIHJpZ2h0IHRp
bWUuCgpKYXNvbiBoYXMgYSBwYXRjaCBzZXJpZXMgdG8gZmlsbCB0aGF0IGdhcCB3aXRoIGEgYnVu
Y2ggb2YgZ2VuZXJpYwppb2N0bCBvbiB0aGUgZG1hLWJ1ZiBmZDoKCmh0dHBzOi8vbG9yZS5rZXJu
ZWwub3JnL2RyaS1kZXZlbC8yMDIxMDUyMDE5MDAwNy41MzQwNDYtMS1qYXNvbkBqbGVrc3RyYW5k
Lm5ldC8KCnYzOiBTaW5jZSBDaHJpc3RpYW4gaGFzIGZpeGVkIGFtZGdwdSBub3cgaW4KCmNvbW1p
dCA4YzUwNWJkYzljOGI5NTUyMjNiMDU0ZTM0YTBiZTljM2Q4NDFjZDIwIChkcm0tbWlzYy9kcm0t
bWlzYy1uZXh0KQpBdXRob3I6IENocmlzdGlhbiBLw7ZuaWcgPGNocmlzdGlhbi5rb2VuaWdAYW1k
LmNvbT4KRGF0ZTogICBXZWQgSnVuIDkgMTM6NTE6MzYgMjAyMSArMDIwMAoKICAgIGRybS9hbWRn
cHU6IHJld29yayBkbWFfcmVzdiBoYW5kbGluZyB2MwoKVXNlIHRoZSBhdWRpdCBjb3ZlcmVkIGlu
IHRoaXMgY29tbWl0IG1lc3NhZ2UgYXMgdGhlIGV4Y3VzZSB0byB1cGRhdGUKdGhlIGRtYS1idWYg
ZG9jcyBhcm91bmQgZG1hX2J1Zi5yZXN2IHVzYWdlIGFjcm9zcyBkcml2ZXJzLgoKU2luY2UgZHlu
YW1pYyBpbXBvcnRlcnMgaGF2ZSBkaWZmZXJlbnQgcnVsZXMgYWxzbyBoYW1tZXIgdGhlc2UgaW4K
YWdhaW4gd2hpbGUgd2UncmUgYXQgaXQuCgpDYzogbWVzYS1kZXZAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCkNjOiBCYXMgTmlldXdlbmh1aXplbiA8YmFzQGJhc25pZXV3ZW5odWl6ZW4ubmw+CkNjOiBE
YXZlIEFpcmxpZSA8YWlybGllZEBnbWFpbC5jb20+CkNjOiBSb2IgQ2xhcmsgPHJvYmRjbGFya0Bj
aHJvbWl1bS5vcmc+CkNjOiBLcmlzdGlhbiBILiBLcmlzdGVuc2VuIDxob2Vnc2JlcmdAZ29vZ2xl
LmNvbT4KQ2M6IE1pY2hlbCBEw6RuemVyIDxtaWNoZWxAZGFlbnplci5uZXQ+CkNjOiBEYW5pZWwg
U3RvbmUgPGRhbmllbHNAY29sbGFib3JhLmNvbT4KQ2M6IFN1bWl0IFNlbXdhbCA8c3VtaXQuc2Vt
d2FsQGxpbmFyby5vcmc+CkNjOiAiQ2hyaXN0aWFuIEvDtm5pZyIgPGNocmlzdGlhbi5rb2VuaWdA
YW1kLmNvbT4KQ2M6IEFsZXggRGV1Y2hlciA8YWxleGFuZGVyLmRldWNoZXJAYW1kLmNvbT4KQ2M6
IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAZmZ3bGwuY2g+CkNjOiBEZWVwYWsgUiBWYXJt
YSA8bWgxMmd4MjgyNUBnbWFpbC5jb20+CkNjOiBDaGVuIExpIDxjaGVubGlAdW5pb250ZWNoLmNv
bT4KQ2M6IEtldmluIFdhbmcgPGtldmluMS53YW5nQGFtZC5jb20+CkNjOiBEZW5uaXMgTGkgPERl
bm5pcy5MaUBhbWQuY29tPgpDYzogTHViZW4gVHVpa292IDxsdWJlbi50dWlrb3ZAYW1kLmNvbT4K
Q2M6IGxpbmFyby1tbS1zaWdAbGlzdHMubGluYXJvLm9yZwpTaWduZWQtb2ZmLWJ5OiBEYW5pZWwg
VmV0dGVyIDxkYW5pZWwudmV0dGVyQGludGVsLmNvbT4KLS0tCiBpbmNsdWRlL2xpbnV4L2RtYS1i
dWYuaCB8IDM5ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogMSBmaWxl
IGNoYW5nZWQsIDM5IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2Rt
YS1idWYuaCBiL2luY2x1ZGUvbGludXgvZG1hLWJ1Zi5oCmluZGV4IDZkMThiOWU0NDhiOS4uNDgw
N2NlZmU4MWY1IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2RtYS1idWYuaAorKysgYi9pbmNs
dWRlL2xpbnV4L2RtYS1idWYuaApAQCAtMzg4LDYgKzM4OCw0NSBAQCBzdHJ1Y3QgZG1hX2J1ZiB7
CiAJICogQHJlc3Y6CiAJICoKIAkgKiBSZXNlcnZhdGlvbiBvYmplY3QgbGlua2VkIHRvIHRoaXMg
ZG1hLWJ1Zi4KKwkgKgorCSAqIElNUExJQ0lUIFNZTkNIUk9OSVpBVElPTiBSVUxFUzoKKwkgKgor
CSAqIERyaXZlcnMgd2hpY2ggc3VwcG9ydCBpbXBsaWNpdCBzeW5jaHJvbml6YXRpb24gb2YgYnVm
ZmVyIGFjY2VzcyBhcworCSAqIGUuZy4gZXhwb3NlZCBpbiBgSW1wbGljaXQgRmVuY2UgUG9sbCBT
dXBwb3J0YF8gc2hvdWxkIGZvbGxvdyB0aGUKKwkgKiBiZWxvdyBydWxlcy4KKwkgKgorCSAqIC0g
RHJpdmVycyBzaG91bGQgYWRkIGEgc2hhcmVkIGZlbmNlIHRocm91Z2gKKwkgKiAgIGRtYV9yZXN2
X2FkZF9zaGFyZWRfZmVuY2UoKSBmb3IgYW55dGhpbmcgdGhlIHVzZXJzcGFjZSBBUEkKKwkgKiAg
IGNvbnNpZGVycyBhIHJlYWQgYWNjZXNzLiBUaGlzIGhpZ2hseSBkZXBlbmRzIHVwb24gdGhlIEFQ
SSBhbmQKKwkgKiAgIHdpbmRvdyBzeXN0ZW06IEUuZy4gT3BlbkdMIGlzIGdlbmVyYWxseSBpbXBs
aWNpdGx5IHN5bmNocm9uaXplZCBvbgorCSAqICAgTGludXgsIGJ1dCBleHBsaWNpdGx5IHN5bmNo
cm9uaXplZCBvbiBBbmRyb2lkLiBXaGVyZWFzIFZ1bGthbiBpcworCSAqICAgZ2VuZXJhbGx5IGV4
cGxpY2l0bHkgc3luY2hyb25pemVkIGZvciBldmVyeXRoaW5nLCBhbmQgd2luZG93IHN5c3RlbQor
CSAqICAgYnVmZmVycyBoYXZlIGV4cGxpY2l0IEFQSSBjYWxscyAod2hpY2ggdGhlbiBuZWVkIHRv
IG1ha2Ugc3VyZSB0aGUKKwkgKiAgIGltcGxpY2l0IGZlbmNlcyBzdG9yZSBoZXJlIGluIEByZXN2
IGFyZSB1cGRhdGVkIGNvcnJlY3RseSkuCisJICoKKwkgKiAtIFNpbWlsYXJseSBkcml2ZXJzIHNo
b3VsZCBzZXQgdGhlIGV4Y2x1c2l2ZSBmZW5jZSB0aHJvdWdoCisJICogICBkbWFfcmVzdl9hZGRf
ZXhjbF9mZW5jZSgpIGZvciBhbnl0aGluZyB0aGUgdXNlcnNwYWNlIEFQSSBjb25zaWRlcnMKKwkg
KiAgIHdyaXRlIGFjY2Vzcy4KKwkgKgorCSAqIC0gRHJpdmVycyBtYXkganVzdCBhbHdheXMgc2V0
IHRoZSBleGNsdXNpdmUgZmVuY2UsIHNpbmNlIHRoYXQgb25seQorCSAqICAgY2F1c2VzIHVuZWNl
c3NhcmlseSBzeW5jaHJvbml6YXRpb24sIGJ1dCBubyBjb3JyZWN0bmVzcyBpc3N1ZXMuCisJICoK
KwkgKiAtIFNvbWUgZHJpdmVycyBvbmx5IGV4cG9zZSBhIHN5bmNocm9ub3VzIHVzZXJzcGFjZSBB
UEkgd2l0aCBubworCSAqICAgcGlwZWxpbmluZyBhY3Jvc3MgZHJpdmVycy4gVGhlc2UgZG8gbm90
IHNldCBhbnkgZmVuY2VzIGZvciB0aGVpcgorCSAqICAgYWNjZXNzLiBBbiBleGFtcGxlIGhlcmUg
aXMgdjRsLgorCSAqCisJICogRFlOQU1JQyBJTVBPUlRFUiBSVUxFUzoKKwkgKgorCSAqIER5bmFt
aWMgaW1wb3J0ZXJzLCBzZWUgZG1hX2J1Zl9hdHRhY2htZW50X2lzX2R5bmFtaWMoKSwgaGF2ZQor
CSAqIGFkZGl0aW9uYWwgY29uc3RyYWludHMgb24gaG93IHRoZXkgc2V0IHVwIGZlbmNlczoKKwkg
KgorCSAqIC0gRHluYW1pYyBpbXBvcnRlcnMgbXVzdCBvYmV5IHRoZSBleGNsdXNpdmUgZmVuY2Ug
YW5kIHdhaXQgZm9yIGl0IHRvCisJICogICBzaWduYWwgYmVmb3JlIGFsbG93aW5nIGFjY2VzcyB0
byB0aGUgYnVmZmVyJ3MgdW5kZXJseWluZyBzdG9yYWdlCisJICogICB0aHJvdWdoLgorCSAqCisJ
ICogLSBEeW5hbWljIGltcG9ydGVycyBzaG91bGQgc2V0IGZlbmNlcyBmb3IgYW55IGFjY2VzcyB0
aGF0IHRoZXkgY2FuJ3QKKwkgKiAgIGRpc2FibGUgaW1tZWRpYXRlbHkgZnJvbSB0aGVpciBAZG1h
X2J1Zl9hdHRhY2hfb3BzLm1vdmVfbm90aWZ5CisJICogICBjYWxsYmFjay4KIAkgKi8KIAlzdHJ1
Y3QgZG1hX3Jlc3YgKnJlc3Y7CiAKLS0gCjIuMzIuMC5yYzIKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwt
Z2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

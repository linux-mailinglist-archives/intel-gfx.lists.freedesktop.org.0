Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 403D7374882
	for <lists+intel-gfx@lfdr.de>; Wed,  5 May 2021 21:11:57 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AAC056E4FE;
	Wed,  5 May 2021 19:11:55 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4CDCF6E4FE
 for <intel-gfx@lists.freedesktop.org>; Wed,  5 May 2021 19:11:54 +0000 (UTC)
IronPort-SDR: 8jgDkBGeR0QcFGbhic4qQDPBmTLwSXVG2PzdbhFWfDM0Ns9iuUZODlRuMJusTwKwGqTbARGns/
 x+3tGTTLE79Q==
X-IronPort-AV: E=McAfee;i="6200,9189,9975"; a="177841618"
X-IronPort-AV: E=Sophos;i="5.82,276,1613462400"; d="scan'208";a="177841618"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by fmsmga106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 05 May 2021 12:11:42 -0700
IronPort-SDR: hM1Re0V7FjyVNT7lhHlFVXXMO181sWgQ7BtcUNSl4PSXCGSYoJaEIUOTxy1yDM2H+3IwEBZFFJ
 mKsTqa2eSZWA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.82,276,1613462400"; d="scan'208";a="458858280"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.171])
 by FMSMGA003.fm.intel.com with SMTP; 05 May 2021 12:11:40 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 05 May 2021 22:11:40 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  5 May 2021 22:11:40 +0300
Message-Id: <20210505191140.14215-1-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.3
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Nuke display error state
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkkg
ZG91YnQgYW55b25lIGhhcyB1c2VkIHRoZSBkaXNwbGF5IGVycm9yIHN0YXRlIHNpbmNlIENTIGZs
aXBzCndlbnQgdGhlIHdheSBvZiB0aGUgZG9kby4gSnVzdCBudWtlIGl0LgoKSXQgbWlnaHQgYmUg
c2VtaSBpbnRlcmVzdGluZyB0byBoYXZlIHNvbWV0aGluZyBsaWtlIHRoaXMgZm9yCkZJRk8gdW5k
ZXJydW5zIGFuZCB0aGUgbGlrZSwgYnV0IGFzIGl0IHN0YW5kcyB0aGlzIHdvdWxkbid0CnByb3Zp
ZGUgYSBzdWZmaWNpZW50IGFtb3VudCBvZiBpbmZvcm1hdGlvbi4gU28gd291bGQgbmVlZAphbiBl
eHRlbnNpdmUgcmV3cml0ZSBhbnl3YXkuCgpUaGUgbG9ja2xlc3MgcG93ZXIgd2VsbCBoYW5kbGlu
ZyBpcyBhbHNvIHJhY3ksIHNvIHRoaXMgY291bGQKanVzdCBiZSBjb250cmlidXRpbmcgbm9pc2Ug
dG8gdGVzdCByZXN1bHRzIGlmIHdlIGVuZCB1cAphY2Nlc3Npbmcgc29tZXRoaW5nIHdpdGggdGhl
IHJlbGV2YW50IHBvd2VyIHdlbGwgYWxyZWFkeQpkaXNhYmxlZC4KClNpZ25lZC1vZmYtYnk6IFZp
bGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgfCAyMDQgLS0tLS0tLS0tLS0t
LS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggfCAg
IDYgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyAgICAgICAgfCAgIDYg
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuaCAgICAgICAgfCAgIDIgLQog
NCBmaWxlcyBjaGFuZ2VkLCAyMTggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBmY2Q4MTIzZWRlOGUuLjJhZTMxYzQ3YjJh
OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAg
LTEyOTg4LDIwNyArMTI5ODgsMyBAQCB2b2lkIGludGVsX2Rpc3BsYXlfZHJpdmVyX3VucmVnaXN0
ZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJYWNwaV92aWRlb191bnJlZ2lzdGVy
KCk7CiAJaW50ZWxfb3ByZWdpb25fdW5yZWdpc3RlcihpOTE1KTsKIH0KLQotI2lmIElTX0VOQUJM
RUQoQ09ORklHX0RSTV9JOTE1X0NBUFRVUkVfRVJST1IpCi0KLXN0cnVjdCBpbnRlbF9kaXNwbGF5
X2Vycm9yX3N0YXRlIHsKLQotCXUzMiBwb3dlcl93ZWxsX2RyaXZlcjsKLQotCXN0cnVjdCBpbnRl
bF9jdXJzb3JfZXJyb3Jfc3RhdGUgewotCQl1MzIgY29udHJvbDsKLQkJdTMyIHBvc2l0aW9uOwot
CQl1MzIgYmFzZTsKLQkJdTMyIHNpemU7Ci0JfSBjdXJzb3JbSTkxNV9NQVhfUElQRVNdOwotCi0J
c3RydWN0IGludGVsX3BpcGVfZXJyb3Jfc3RhdGUgewotCQlib29sIHBvd2VyX2RvbWFpbl9vbjsK
LQkJdTMyIHNvdXJjZTsKLQkJdTMyIHN0YXQ7Ci0JfSBwaXBlW0k5MTVfTUFYX1BJUEVTXTsKLQot
CXN0cnVjdCBpbnRlbF9wbGFuZV9lcnJvcl9zdGF0ZSB7Ci0JCXUzMiBjb250cm9sOwotCQl1MzIg
c3RyaWRlOwotCQl1MzIgc2l6ZTsKLQkJdTMyIHBvczsKLQkJdTMyIGFkZHI7Ci0JCXUzMiBzdXJm
YWNlOwotCQl1MzIgdGlsZV9vZmZzZXQ7Ci0JfSBwbGFuZVtJOTE1X01BWF9QSVBFU107Ci0KLQlz
dHJ1Y3QgaW50ZWxfdHJhbnNjb2Rlcl9lcnJvcl9zdGF0ZSB7Ci0JCWJvb2wgYXZhaWxhYmxlOwot
CQlib29sIHBvd2VyX2RvbWFpbl9vbjsKLQkJZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVy
OwotCi0JCXUzMiBjb25mOwotCi0JCXUzMiBodG90YWw7Ci0JCXUzMiBoYmxhbms7Ci0JCXUzMiBo
c3luYzsKLQkJdTMyIHZ0b3RhbDsKLQkJdTMyIHZibGFuazsKLQkJdTMyIHZzeW5jOwotCX0gdHJh
bnNjb2Rlcls1XTsKLX07Ci0KLXN0cnVjdCBpbnRlbF9kaXNwbGF5X2Vycm9yX3N0YXRlICoKLWlu
dGVsX2Rpc3BsYXlfY2FwdHVyZV9lcnJvcl9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCi17Ci0Jc3RydWN0IGludGVsX2Rpc3BsYXlfZXJyb3Jfc3RhdGUgKmVycm9yOwot
CWludCB0cmFuc2NvZGVyc1tdID0gewotCQlUUkFOU0NPREVSX0EsCi0JCVRSQU5TQ09ERVJfQiwK
LQkJVFJBTlNDT0RFUl9DLAotCQlUUkFOU0NPREVSX0QsCi0JCVRSQU5TQ09ERVJfRURQLAotCX07
Ci0JaW50IGk7Ci0KLQlCVUlMRF9CVUdfT04oQVJSQVlfU0laRSh0cmFuc2NvZGVycykgIT0gQVJS
QVlfU0laRShlcnJvci0+dHJhbnNjb2RlcikpOwotCi0JaWYgKCFIQVNfRElTUExBWShkZXZfcHJp
dikpCi0JCXJldHVybiBOVUxMOwotCi0JZXJyb3IgPSBremFsbG9jKHNpemVvZigqZXJyb3IpLCBH
RlBfQVRPTUlDKTsKLQlpZiAoZXJyb3IgPT0gTlVMTCkKLQkJcmV0dXJuIE5VTEw7Ci0KLQlpZiAo
SVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURXRUxMKGRldl9wcml2KSkKLQkJZXJyb3It
PnBvd2VyX3dlbGxfZHJpdmVyID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkJCQkgSFNX
X1BXUl9XRUxMX0NUTDIpOwotCi0JZm9yX2VhY2hfcGlwZShkZXZfcHJpdiwgaSkgewotCQllcnJv
ci0+cGlwZVtpXS5wb3dlcl9kb21haW5fb24gPQotCQkJX19pbnRlbF9kaXNwbGF5X3Bvd2VyX2lz
X2VuYWJsZWQoZGV2X3ByaXYsCi0JCQkJCQkJIFBPV0VSX0RPTUFJTl9QSVBFKGkpKTsKLQkJaWYg
KCFlcnJvci0+cGlwZVtpXS5wb3dlcl9kb21haW5fb24pCi0JCQljb250aW51ZTsKLQotCQllcnJv
ci0+Y3Vyc29yW2ldLmNvbnRyb2wgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBDVVJDTlRSKGkp
KTsKLQkJZXJyb3ItPmN1cnNvcltpXS5wb3NpdGlvbiA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYs
IENVUlBPUyhpKSk7Ci0JCWVycm9yLT5jdXJzb3JbaV0uYmFzZSA9IGludGVsX2RlX3JlYWQoZGV2
X3ByaXYsIENVUkJBU0UoaSkpOwotCi0JCWVycm9yLT5wbGFuZVtpXS5jb250cm9sID0gaW50ZWxf
ZGVfcmVhZChkZXZfcHJpdiwgRFNQQ05UUihpKSk7Ci0JCWVycm9yLT5wbGFuZVtpXS5zdHJpZGUg
PSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBEU1BTVFJJREUoaSkpOwotCQlpZiAoRElTUExBWV9W
RVIoZGV2X3ByaXYpIDw9IDMpIHsKLQkJCWVycm9yLT5wbGFuZVtpXS5zaXplID0gaW50ZWxfZGVf
cmVhZChkZXZfcHJpdiwKLQkJCQkJCQkgICAgIERTUFNJWkUoaSkpOwotCQkJZXJyb3ItPnBsYW5l
W2ldLnBvcyA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAgIERTUFBPUyhpKSk7
Ci0JCX0KLQkJaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA8PSA3ICYmICFJU19IQVNXRUxMKGRl
dl9wcml2KSkKLQkJCWVycm9yLT5wbGFuZVtpXS5hZGRyID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwKLQkJCQkJCQkgICAgIERTUEFERFIoaSkpOwotCQlpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYp
ID49IDQpIHsKLQkJCWVycm9yLT5wbGFuZVtpXS5zdXJmYWNlID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwKLQkJCQkJCQkJRFNQU1VSRihpKSk7Ci0JCQllcnJvci0+cGxhbmVbaV0udGlsZV9vZmZz
ZXQgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCQkJCQkgICAgRFNQVElMRU9GRihpKSk7
Ci0JCX0KLQotCQllcnJvci0+cGlwZVtpXS5zb3VyY2UgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LCBQSVBFU1JDKGkpKTsKLQotCQlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQotCQkJZXJyb3ItPnBp
cGVbaV0uc3RhdCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAgIFBJUEVTVEFU
KGkpKTsKLQl9Ci0KLQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShlcnJvci0+dHJhbnNjb2Rl
cik7IGkrKykgewotCQllbnVtIHRyYW5zY29kZXIgY3B1X3RyYW5zY29kZXIgPSB0cmFuc2NvZGVy
c1tpXTsKLQotCQlpZiAoIUhBU19UUkFOU0NPREVSKGRldl9wcml2LCBjcHVfdHJhbnNjb2Rlcikp
Ci0JCQljb250aW51ZTsKLQotCQllcnJvci0+dHJhbnNjb2RlcltpXS5hdmFpbGFibGUgPSB0cnVl
OwotCQllcnJvci0+dHJhbnNjb2RlcltpXS5wb3dlcl9kb21haW5fb24gPQotCQkJX19pbnRlbF9k
aXNwbGF5X3Bvd2VyX2lzX2VuYWJsZWQoZGV2X3ByaXYsCi0JCQkJUE9XRVJfRE9NQUlOX1RSQU5T
Q09ERVIoY3B1X3RyYW5zY29kZXIpKTsKLQkJaWYgKCFlcnJvci0+dHJhbnNjb2RlcltpXS5wb3dl
cl9kb21haW5fb24pCi0JCQljb250aW51ZTsKLQotCQllcnJvci0+dHJhbnNjb2RlcltpXS5jcHVf
dHJhbnNjb2RlciA9IGNwdV90cmFuc2NvZGVyOwotCi0JCWVycm9yLT50cmFuc2NvZGVyW2ldLmNv
bmYgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCQkJCSAgUElQRUNPTkYoY3B1X3RyYW5z
Y29kZXIpKTsKLQkJZXJyb3ItPnRyYW5zY29kZXJbaV0uaHRvdGFsID0gaW50ZWxfZGVfcmVhZChk
ZXZfcHJpdiwKLQkJCQkJCQkgICAgSFRPVEFMKGNwdV90cmFuc2NvZGVyKSk7Ci0JCWVycm9yLT50
cmFuc2NvZGVyW2ldLmhibGFuayA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAg
IEhCTEFOSyhjcHVfdHJhbnNjb2RlcikpOwotCQllcnJvci0+dHJhbnNjb2RlcltpXS5oc3luYyA9
IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAgSFNZTkMoY3B1X3RyYW5zY29kZXIp
KTsKLQkJZXJyb3ItPnRyYW5zY29kZXJbaV0udnRvdGFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwKLQkJCQkJCQkgICAgVlRPVEFMKGNwdV90cmFuc2NvZGVyKSk7Ci0JCWVycm9yLT50cmFuc2Nv
ZGVyW2ldLnZibGFuayA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAgIFZCTEFO
SyhjcHVfdHJhbnNjb2RlcikpOwotCQllcnJvci0+dHJhbnNjb2RlcltpXS52c3luYyA9IGludGVs
X2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJCQkJICAgVlNZTkMoY3B1X3RyYW5zY29kZXIpKTsKLQl9
Ci0KLQlyZXR1cm4gZXJyb3I7Ci19Ci0KLSNkZWZpbmUgZXJyX3ByaW50ZihlLCAuLi4pIGk5MTVf
ZXJyb3JfcHJpbnRmKGUsIF9fVkFfQVJHU19fKQotCi12b2lkCi1pbnRlbF9kaXNwbGF5X3ByaW50
X2Vycm9yX3N0YXRlKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9idWYgKm0sCi0JCQkJc3Ry
dWN0IGludGVsX2Rpc3BsYXlfZXJyb3Jfc3RhdGUgKmVycm9yKQotewotCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IG0tPmk5MTU7Ci0JaW50IGk7Ci0KLQlpZiAoIWVycm9yKQot
CQlyZXR1cm47Ci0KLQllcnJfcHJpbnRmKG0sICJOdW0gUGlwZXM6ICVkXG4iLCBJTlRFTF9OVU1f
UElQRVMoZGV2X3ByaXYpKTsKLQlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURX
RUxMKGRldl9wcml2KSkKLQkJZXJyX3ByaW50ZihtLCAiUFdSX1dFTExfQ1RMMjogJTA4eFxuIiwK
LQkJCSAgIGVycm9yLT5wb3dlcl93ZWxsX2RyaXZlcik7Ci0JZm9yX2VhY2hfcGlwZShkZXZfcHJp
diwgaSkgewotCQllcnJfcHJpbnRmKG0sICJQaXBlIFslZF06XG4iLCBpKTsKLQkJZXJyX3ByaW50
ZihtLCAiICBQb3dlcjogJXNcbiIsCi0JCQkgICBvbm9mZihlcnJvci0+cGlwZVtpXS5wb3dlcl9k
b21haW5fb24pKTsKLQkJZXJyX3ByaW50ZihtLCAiICBTUkM6ICUwOHhcbiIsIGVycm9yLT5waXBl
W2ldLnNvdXJjZSk7Ci0JCWVycl9wcmludGYobSwgIiAgU1RBVDogJTA4eFxuIiwgZXJyb3ItPnBp
cGVbaV0uc3RhdCk7Ci0KLQkJZXJyX3ByaW50ZihtLCAiUGxhbmUgWyVkXTpcbiIsIGkpOwotCQll
cnJfcHJpbnRmKG0sICIgIENOVFI6ICUwOHhcbiIsIGVycm9yLT5wbGFuZVtpXS5jb250cm9sKTsK
LQkJZXJyX3ByaW50ZihtLCAiICBTVFJJREU6ICUwOHhcbiIsIGVycm9yLT5wbGFuZVtpXS5zdHJp
ZGUpOwotCQlpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpIDw9IDMpIHsKLQkJCWVycl9wcmludGYo
bSwgIiAgU0laRTogJTA4eFxuIiwgZXJyb3ItPnBsYW5lW2ldLnNpemUpOwotCQkJZXJyX3ByaW50
ZihtLCAiICBQT1M6ICUwOHhcbiIsIGVycm9yLT5wbGFuZVtpXS5wb3MpOwotCQl9Ci0JCWlmIChE
SVNQTEFZX1ZFUihkZXZfcHJpdikgPD0gNyAmJiAhSVNfSEFTV0VMTChkZXZfcHJpdikpCi0JCQll
cnJfcHJpbnRmKG0sICIgIEFERFI6ICUwOHhcbiIsIGVycm9yLT5wbGFuZVtpXS5hZGRyKTsKLQkJ
aWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSA0KSB7Ci0JCQllcnJfcHJpbnRmKG0sICIgIFNV
UkY6ICUwOHhcbiIsIGVycm9yLT5wbGFuZVtpXS5zdXJmYWNlKTsKLQkJCWVycl9wcmludGYobSwg
IiAgVElMRU9GRjogJTA4eFxuIiwgZXJyb3ItPnBsYW5lW2ldLnRpbGVfb2Zmc2V0KTsKLQkJfQot
Ci0JCWVycl9wcmludGYobSwgIkN1cnNvciBbJWRdOlxuIiwgaSk7Ci0JCWVycl9wcmludGYobSwg
IiAgQ05UUjogJTA4eFxuIiwgZXJyb3ItPmN1cnNvcltpXS5jb250cm9sKTsKLQkJZXJyX3ByaW50
ZihtLCAiICBQT1M6ICUwOHhcbiIsIGVycm9yLT5jdXJzb3JbaV0ucG9zaXRpb24pOwotCQllcnJf
cHJpbnRmKG0sICIgIEJBU0U6ICUwOHhcbiIsIGVycm9yLT5jdXJzb3JbaV0uYmFzZSk7Ci0JfQot
Ci0JZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUoZXJyb3ItPnRyYW5zY29kZXIpOyBpKyspIHsK
LQkJaWYgKCFlcnJvci0+dHJhbnNjb2RlcltpXS5hdmFpbGFibGUpCi0JCQljb250aW51ZTsKLQot
CQllcnJfcHJpbnRmKG0sICJDUFUgdHJhbnNjb2RlcjogJXNcbiIsCi0JCQkgICB0cmFuc2NvZGVy
X25hbWUoZXJyb3ItPnRyYW5zY29kZXJbaV0uY3B1X3RyYW5zY29kZXIpKTsKLQkJZXJyX3ByaW50
ZihtLCAiICBQb3dlcjogJXNcbiIsCi0JCQkgICBvbm9mZihlcnJvci0+dHJhbnNjb2RlcltpXS5w
b3dlcl9kb21haW5fb24pKTsKLQkJZXJyX3ByaW50ZihtLCAiICBDT05GOiAlMDh4XG4iLCBlcnJv
ci0+dHJhbnNjb2RlcltpXS5jb25mKTsKLQkJZXJyX3ByaW50ZihtLCAiICBIVE9UQUw6ICUwOHhc
biIsIGVycm9yLT50cmFuc2NvZGVyW2ldLmh0b3RhbCk7Ci0JCWVycl9wcmludGYobSwgIiAgSEJM
QU5LOiAlMDh4XG4iLCBlcnJvci0+dHJhbnNjb2RlcltpXS5oYmxhbmspOwotCQllcnJfcHJpbnRm
KG0sICIgIEhTWU5DOiAlMDh4XG4iLCBlcnJvci0+dHJhbnNjb2RlcltpXS5oc3luYyk7Ci0JCWVy
cl9wcmludGYobSwgIiAgVlRPVEFMOiAlMDh4XG4iLCBlcnJvci0+dHJhbnNjb2RlcltpXS52dG90
YWwpOwotCQllcnJfcHJpbnRmKG0sICIgIFZCTEFOSzogJTA4eFxuIiwgZXJyb3ItPnRyYW5zY29k
ZXJbaV0udmJsYW5rKTsKLQkJZXJyX3ByaW50ZihtLCAiICBWU1lOQzogJTA4eFxuIiwgZXJyb3It
PnRyYW5zY29kZXJbaV0udnN5bmMpOwotCX0KLX0KLQotI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCmluZGV4IGZjMGRmNGM2M2U4ZC4uM2UxMWNm
M2RmYTY1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
aApAQCAtMzcsNyArMzcsNiBAQCBzdHJ1Y3QgZHJtX2VuY29kZXI7CiBzdHJ1Y3QgZHJtX2ZpbGU7
CiBzdHJ1Y3QgZHJtX2Zvcm1hdF9pbmZvOwogc3RydWN0IGRybV9mcmFtZWJ1ZmZlcjsKLXN0cnVj
dCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9idWY7CiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdDsK
IHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwogc3RydWN0IGRybV9tb2RlX2ZiX2NtZDI7CkBAIC02
MTEsMTEgKzYxMCw2IEBAIHZvaWQgaWxrX3BmaXRfZGlzYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUpOwogaW50IGJkd19nZXRfcGlwZW1pc2NfYnBwKHN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKIHVuc2lnbmVkIGludCBpbnRlbF9wbGFuZV9mZW5jZV95
X29mZnNldChjb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKTsKIAot
c3RydWN0IGludGVsX2Rpc3BsYXlfZXJyb3Jfc3RhdGUgKgotaW50ZWxfZGlzcGxheV9jYXB0dXJl
X2Vycm9yX3N0YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Ci12b2lkIGlu
dGVsX2Rpc3BsYXlfcHJpbnRfZXJyb3Jfc3RhdGUoc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRl
X2J1ZiAqZSwKLQkJCQkgICAgIHN0cnVjdCBpbnRlbF9kaXNwbGF5X2Vycm9yX3N0YXRlICplcnJv
cik7Ci0KIGJvb2wKIGludGVsX2Zvcm1hdF9pbmZvX2lzX3l1dl9zZW1pcGxhbmFyKGNvbnN0IHN0
cnVjdCBkcm1fZm9ybWF0X2luZm8gKmluZm8sCiAJCQkJICAgIHU2NCBtb2RpZmllcik7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYwppbmRleCBiYjE4MWZlNWQ0N2UuLjk5Y2EyNDJl
YzEzYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCkBAIC0zNiw3ICszNiw2
IEBACiAKICNpbmNsdWRlIDxkcm0vZHJtX3ByaW50Lmg+CiAKLSNpbmNsdWRlICJkaXNwbGF5L2lu
dGVsX2F0b21pYy5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxfY3NyLmgiCiAjaW5jbHVkZSAi
ZGlzcGxheS9pbnRlbF9vdmVybGF5LmgiCiAKQEAgLTgwOCw5ICs4MDcsNiBAQCBzdGF0aWMgdm9p
ZCBfX2Vycl9wcmludF90b19zZ2woc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1ZiAqbSwK
IAlpZiAoZXJyb3ItPm92ZXJsYXkpCiAJCWludGVsX292ZXJsYXlfcHJpbnRfZXJyb3Jfc3RhdGUo
bSwgZXJyb3ItPm92ZXJsYXkpOwogCi0JaWYgKGVycm9yLT5kaXNwbGF5KQotCQlpbnRlbF9kaXNw
bGF5X3ByaW50X2Vycm9yX3N0YXRlKG0sIGVycm9yLT5kaXNwbGF5KTsKLQogCWVycl9wcmludF9j
YXBhYmlsaXRpZXMobSwgZXJyb3IpOwogCWVycl9wcmludF9wYXJhbXMobSwgJmVycm9yLT5wYXJh
bXMpOwogfQpAQCAtOTc0LDcgKzk3MCw2IEBAIHZvaWQgX19pOTE1X2dwdV9jb3JlZHVtcF9mcmVl
KHN0cnVjdCBrcmVmICplcnJvcl9yZWYpCiAJfQogCiAJa2ZyZWUoZXJyb3ItPm92ZXJsYXkpOwot
CWtmcmVlKGVycm9yLT5kaXNwbGF5KTsKIAogCWNsZWFudXBfcGFyYW1zKGVycm9yKTsKIApAQCAt
MTgyNiw3ICsxODIxLDYgQEAgaTkxNV9ncHVfY29yZWR1bXAoc3RydWN0IGludGVsX2d0ICpndCwg
aW50ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVfbWFzaykKIAl9CiAKIAllcnJvci0+b3ZlcmxheSA9
IGludGVsX292ZXJsYXlfY2FwdHVyZV9lcnJvcl9zdGF0ZShpOTE1KTsKLQllcnJvci0+ZGlzcGxh
eSA9IGludGVsX2Rpc3BsYXlfY2FwdHVyZV9lcnJvcl9zdGF0ZShpOTE1KTsKIAogCXJldHVybiBl
cnJvcjsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9y
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5oCmluZGV4IDE2YmM0MmRl
NGI4NC4uZWI0MzVmOWUwMjIwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dwdV9lcnJvci5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmgK
QEAgLTI5LDcgKzI5LDYgQEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CiBzdHJ1Y3QgaTkxNV92
bWFfY29tcHJlc3M7CiBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NhcHR1cmVfdm1hOwogc3RydWN0IGlu
dGVsX292ZXJsYXlfZXJyb3Jfc3RhdGU7Ci1zdHJ1Y3QgaW50ZWxfZGlzcGxheV9lcnJvcl9zdGF0
ZTsKIAogc3RydWN0IGk5MTVfdm1hX2NvcmVkdW1wIHsKIAlzdHJ1Y3QgaTkxNV92bWFfY29yZWR1
bXAgKm5leHQ7CkBAIC0xODIsNyArMTgxLDYgQEAgc3RydWN0IGk5MTVfZ3B1X2NvcmVkdW1wIHsK
IAlzdHJ1Y3QgaTkxNV9wYXJhbXMgcGFyYW1zOwogCiAJc3RydWN0IGludGVsX292ZXJsYXlfZXJy
b3Jfc3RhdGUgKm92ZXJsYXk7Ci0Jc3RydWN0IGludGVsX2Rpc3BsYXlfZXJyb3Jfc3RhdGUgKmRp
c3BsYXk7CiAKIAlzdHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnbCwgKmZpdDsKIH07Ci0tIAoyLjI2LjMK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

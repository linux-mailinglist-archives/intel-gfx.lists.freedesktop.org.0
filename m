Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AB6D82DA308
	for <lists+intel-gfx@lfdr.de>; Mon, 14 Dec 2020 23:11:07 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 196AD6E0C6;
	Mon, 14 Dec 2020 22:11:06 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 497AD6E0C6
 for <intel-gfx@lists.freedesktop.org>; Mon, 14 Dec 2020 22:11:05 +0000 (UTC)
IronPort-SDR: bf+Zz65JI6nFLGy4MwN21CKIQy9gkzjdSBiqk++yqE/skecwbb0xXJh+p4suHcxyftK+oN/oiO
 d2S4asqdXnvQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9835"; a="174932647"
X-IronPort-AV: E=Sophos;i="5.78,420,1599548400"; d="scan'208";a="174932647"
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 14 Dec 2020 14:11:04 -0800
IronPort-SDR: UC1Sz0JAReiMPSYIg6gX6jM3P8EZpwhzkJIzJ/ZoH4I+60OXxvrbmxt8LJprgUOSdIEciP8Gaa
 lRg0boR24RYA==
X-IronPort-AV: E=Sophos;i="5.78,420,1599548400"; d="scan'208";a="334572481"
Received: from dceraolo-mobl.amr.corp.intel.com (HELO [10.254.6.244])
 ([10.254.6.244])
 by fmsmga008-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 14 Dec 2020 14:11:03 -0800
To: Chris Wilson <chris@chris-wilson.co.uk>, intel-gfx@lists.freedesktop.org
References: <20201210011720.26649-1-chris@chris-wilson.co.uk>
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Message-ID: <267ac87a-6e4a-ac0e-0dfe-a9ea940db486@intel.com>
Date: Mon, 14 Dec 2020 14:11:01 -0800
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101
 Thunderbird/78.5.1
MIME-Version: 1.0
In-Reply-To: <20201210011720.26649-1-chris@chris-wilson.co.uk>
Content-Language: en-US
Subject: Re: [Intel-gfx] [PATCH] drm/i915/gt: Split logical ring contexts
 from execlist submission
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

PHNuaXA+Cgo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCj4gbmV3IGZpbGUgbW9kZSAx
MDA2NDQKPiBpbmRleCAwMDAwMDAwMDAwMDAuLjNkM2U0MDhhODdhOQo+IC0tLSAvZGV2L251bGwK
PiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuaAo+IEBAIC0wLDAgKzEs
MTE0IEBACj4gKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQgKi8KPiArLyoKPiArICog
Q29weXJpZ2h0IMKpIDIwMTQgSW50ZWwgQ29ycG9yYXRpb24KPiArICovCj4gKwo+ICsjaWZuZGVm
IF9fSU5URUxfTFJDX0hfXwo+ICsjZGVmaW5lIF9fSU5URUxfTFJDX0hfXwo+ICsKPiArI2luY2x1
ZGUgPGxpbnV4L3R5cGVzLmg+Cj4gKwo+ICsjaW5jbHVkZSAiaW50ZWxfY29udGV4dC5oIgo+ICsj
aW5jbHVkZSAiaW50ZWxfbHJjX3JlZy5oIgo+ICsKPiArc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3Q7Cj4gK3N0cnVjdCBpbnRlbF9lbmdpbmVfY3M7Cj4gK3N0cnVjdCBpbnRlbF9yaW5nOwo+ICsK
PiArLyogQXQgdGhlIHN0YXJ0IG9mIHRoZSBjb250ZXh0IGltYWdlIGlzIGl0cyBwZXItcHJvY2Vz
cyBIV1MgcGFnZSAqLwo+ICsjZGVmaW5lIExSQ19QUEhXU1BfUE4JKDApCj4gKyNkZWZpbmUgTFJD
X1BQSFdTUF9TWgkoMSkKPiArLyogQWZ0ZXIgdGhlIFBQSFdTUCB3ZSBoYXZlIHRoZSBsb2dpY2Fs
IHN0YXRlIGZvciB0aGUgY29udGV4dCAqLwo+ICsjZGVmaW5lIExSQ19TVEFURV9QTgkoTFJDX1BQ
SFdTUF9QTiArIExSQ19QUEhXU1BfU1opCj4gKyNkZWZpbmUgTFJDX1NUQVRFX09GRlNFVCAoTFJD
X1NUQVRFX1BOICogUEFHRV9TSVpFKQo+ICsKPiArLyogU3BhY2Ugd2l0aGluIFBQSFdTUCByZXNl
cnZlZCB0byBiZSB1c2VkIGFzIHNjcmF0Y2ggKi8KPiArI2RlZmluZSBMUkNfUFBIV1NQX1NDUkFU
Q0gJCTB4MzQKPiArI2RlZmluZSBMUkNfUFBIV1NQX1NDUkFUQ0hfQUREUgkJKExSQ19QUEhXU1Bf
U0NSQVRDSCAqIHNpemVvZih1MzIpKQo+ICsKPiAraW50IGxyY19pbml0X3dhX2N0eChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwo+ICt2b2lkIGxyY19maW5pX3dhX2N0eChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwo+ICsKPiAraW50IGxyY19hbGxvYyhzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCj4gKwkgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
Owo+ICt2b2lkIGxyY19yZXNldChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCj4gKwkgICAgICAg
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAo+ICsJICAgICAgIHUzMiBoZWFkLAo+ICsJ
ICAgICAgIGJvb2wgc2NydWIpOwo+ICsKPiArdm9pZCBscmNfaW5pdF9yZWdzKGNvbnN0IHN0cnVj
dCBpbnRlbF9jb250ZXh0ICpjZSwKPiArCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCj4gKwkJICAgY29uc3Qgc3RydWN0IGludGVsX3JpbmcgKnJpbmcsCj4gKwkJICAg
Ym9vbCBjbG9zZSk7Cj4gK3ZvaWQgbHJjX3VwZGF0ZV9yZWdzKGNvbnN0IHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSwKPiArCQkgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwKPiArCQkgICAgIHUzMiBoZWFkKTsKPiArdm9pZCBscmNfcmVzZXRfcmVncyhjb25zdCBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCj4gKwkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSk7Cj4gKwo+ICt2b2lkIGxyY19yZXN0b3JlX2RlZmF1bHRzKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSwKPiArCQkJICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwo+
ICsKPiArdm9pZCBscmNfdXBkYXRlX29mZnNldHMoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAo+
ICsJCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwo+ICsKPiArdm9pZCBscmNfY2hl
Y2tfcmVncyhjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCj4gKwkJICAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKPiArCQkgICAgY29uc3QgY2hhciAqd2hlbik7
Cj4gK3ZvaWQgbHJjX2NoZWNrX3JlZHpvbmUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKTsKPiAr
Cj4gK3N0YXRpYyBpbmxpbmUgdTMyIGxyY19nZXRfcnVudGltZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpCj4gK3sKPiArCS8qCj4gKwkgKiBXZSBjYW4gdXNlIGVpdGhlciBwcEhXU1Bb
MTZdIHdoaWNoIGlzIHJlY29yZGVkIGJlZm9yZSB0aGUgY29udGV4dAo+ICsJICogc3dpdGNoIChh
bmQgc28gZXhjbHVkZXMgdGhlIGNvc3Qgb2YgY29udGV4dCBzd2l0Y2hlcykgb3IgdXNlIHRoZQo+
ICsJICogdmFsdWUgZnJvbSB0aGUgY29udGV4dCBpbWFnZSBpdHNlbGYsIHdoaWNoIGlzIHNhdmVk
L3Jlc3RvcmVkIGVhcmxpZXIKPiArCSAqIGFuZCBzbyBpbmNsdWRlcyB0aGUgY29zdCBvZiB0aGUg
c2F2ZS4KPiArCSAqLwo+ICsJcmV0dXJuIFJFQURfT05DRShjZS0+bHJjX3JlZ19zdGF0ZVtDVFhf
VElNRVNUQU1QXSk7Cj4gK30KPiArCj4gKy8qCj4gKyAqIFRoZSBjb250ZXh0IGRlc2NyaXB0b3Ig
ZW5jb2RlcyB2YXJpb3VzIGF0dHJpYnV0ZXMgb2YgYSBjb250ZXh0LAo+ICsgKiBpbmNsdWRpbmcg
aXRzIEdUVCBhZGRyZXNzIGFuZCBzb21lIGZsYWdzLiBCZWNhdXNlIGl0J3MgZmFpcmx5Cj4gKyAq
IGV4cGVuc2l2ZSB0byBjYWxjdWxhdGUsIHdlJ2xsIGp1c3QgZG8gaXQgb25jZSBhbmQgY2FjaGUg
dGhlIHJlc3VsdCwKPiArICogd2hpY2ggcmVtYWlucyB2YWxpZCB1bnRpbCB0aGUgY29udGV4dCBp
cyB1bnBpbm5lZC4KPiArICoKPiArICogVGhpcyBpcyB3aGF0IGEgZGVzY3JpcHRvciBsb29rcyBs
aWtlLCBmcm9tIExTQiB0byBNU0I6Ogo+ICsgKgo+ICsgKiAgICAgIGJpdHMgIDAtMTE6ICAgIGZs
YWdzLCBHRU44X0NUWF8qIChjYWNoZWQgaW4gY3R4LT5kZXNjX3RlbXBsYXRlKQo+ICsgKiAgICAg
IGJpdHMgMTItMzE6ICAgIExSQ0EsIEdUVCBhZGRyZXNzIG9mICh0aGUgSFdTUCBvZikgdGhpcyBj
b250ZXh0Cj4gKyAqICAgICAgYml0cyAzMi01MjogICAgY3R4IElELCBhIGdsb2JhbGx5IHVuaXF1
ZSB0YWcgKGhpZ2hlc3QgYml0IHVzZWQgYnkgR3VDKQo+ICsgKiAgICAgIGJpdHMgNTMtNTQ6ICAg
IG1ieiwgcmVzZXJ2ZWQgZm9yIHVzZSBieSBoYXJkd2FyZQo+ICsgKiAgICAgIGJpdHMgNTUtNjM6
ICAgIGdyb3VwIElELCBjdXJyZW50bHkgdW51c2VkIGFuZCBzZXQgdG8gMAo+ICsgKgo+ICsgKiBT
dGFydGluZyBmcm9tIEdlbjExLCB0aGUgdXBwZXIgZHdvcmQgb2YgdGhlIGRlc2NyaXB0b3IgaGFz
IGEgbmV3IGZvcm1hdDoKPiArICoKPiArICogICAgICBiaXRzIDMyLTM2OiAgICByZXNlcnZlZAo+
ICsgKiAgICAgIGJpdHMgMzctNDc6ICAgIFNXIGNvbnRleHQgSUQKPiArICogICAgICBiaXRzIDQ4
OjUzOiAgICBlbmdpbmUgaW5zdGFuY2UKPiArICogICAgICBiaXQgNTQ6ICAgICAgICBtYnosIHJl
c2VydmVkIGZvciB1c2UgYnkgaGFyZHdhcmUKPiArICogICAgICBiaXRzIDU1LTYwOiAgICBTVyBj
b3VudGVyCj4gKyAqICAgICAgYml0cyA2MS02MzogICAgZW5naW5lIGNsYXNzCj4gKyAqCj4gKyAq
IGVuZ2luZSBpbmZvLCBTVyBjb250ZXh0IElEIGFuZCBTVyBjb3VudGVyIG5lZWQgdG8gZm9ybSBh
IHVuaXF1ZSBudW1iZXIKPiArICogKENvbnRleHQgSUQpIHBlciBscmMuCj4gKyAqLwo+ICtzdGF0
aWMgaW5saW5lIHUzMgo+ICtscmNfZGVzY3JpcHRvcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Us
IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKPiArewo+ICsJdTMyIGRlc2M7Cj4gKwo+
ICsJZGVzYyA9IElOVEVMX0xFR0FDWV8zMkJfQ09OVEVYVDsKPiArCWlmIChpOTE1X3ZtX2lzXzRs
dmwoY2UtPnZtKSkKPiArCQlkZXNjID0gSU5URUxfTEVHQUNZXzY0Ql9DT05URVhUOwo+ICsJZGVz
YyA8PD0gR0VOOF9DVFhfQUREUkVTU0lOR19NT0RFX1NISUZUOwo+ICsKPiArCWRlc2MgfD0gR0VO
OF9DVFhfVkFMSUQgfCBHRU44X0NUWF9QUklWSUxFR0U7Cj4gKwlpZiAoSVNfR0VOKGVuZ2luZS0+
aTkxNSwgOCkpCj4gKwkJZGVzYyB8PSBHRU44X0NUWF9MM0xMQ19DT0hFUkVOVDsKPiArCj4gKwly
ZXR1cm4gaTkxNV9nZ3R0X29mZnNldChjZS0+c3RhdGUpIHwgZGVzYzsKPiArfQpQZXJzb25hbCBw
cmVmZXJlbmNlOiBJJ2QgYXZvaWQgaGF2aW5nIHRoaXMgYXMgYSBzdGF0aWMgaW5saW5lIHRvIG5v
dCAKaGF2ZSBhIGRpcmVjdCBkZXBlbmRlbmN5IHRvIGk5MTVfZHJ2LmguIE1heWJlIHdlIGNhbiBz
cGxpdCB0aGlzIGluIDIgCnBhcnRzLCBhbiBpbml0IHBhcnQgd2hlcmUgd2Ugc2V0IGFsbCB0aGUg
ZmxhZ3MgYXQgY29udGV4dCBhbGxvYyB0aW1lIGFuZCAKYW4gdXBkYXRlIHBhcnQgd2hlcmUgd2Ug
cm13IHRoZSBhZGRyZXNzIGluLCBhbmQgb25seSBpbmxpbmUgdGhlIGxhdHRlcj8KCk5vdCBhIGJs
b2NrZXIsIGNhbiBiZSBkb25lIGFzIGEgZm9sbG93IHVwLgoKPiArCj4gKyNlbmRpZiAvKiBfX0lO
VEVMX0xSQ19IX18gKi8KCjxzbmlwPgoKPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9s
cmMuYwo+IG5ldyBmaWxlIG1vZGUgMTAwNjQ0Cj4gaW5kZXggMDAwMDAwMDAwMDAwLi41Nzc0NjI2
ZDNkMzQKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfbHJjLmMKPiBAQCAtMCwwICsxLDE4NjUgQEAKPiArLy8gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IE1JVAo+ICsvKgo+ICsgKiBDb3B5cmlnaHQgwqkgMjAxOCBJbnRlbCBDb3Jwb3JhdGlv
bgo+ICsgKi8KPiArCj4gKyNpbmNsdWRlIDxsaW51eC9wcmltZV9udW1iZXJzLmg+Cj4gKwo+ICsj
aW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5oIgo+ICsjaW5jbHVkZSAiZ3QvaW50
ZWxfZW5naW5lX3BtLmgiCj4gKyNpbmNsdWRlICJndC9pbnRlbF9yZXNldC5oIgo+ICsjaW5jbHVk
ZSAiZ3QvaW50ZWxfcmluZy5oIgo+ICsjaW5jbHVkZSAiZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0
YmVhdC5oIgo+ICsjaW5jbHVkZSAiZ3Qvc2htZW1fdXRpbHMuaCIKPiArCj4gKyNpbmNsdWRlICJp
OTE1X3NlbGZ0ZXN0LmgiCj4gKyNpbmNsdWRlICJzZWxmdGVzdHMvaTkxNV9yYW5kb20uaCIKPiAr
I2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5oIgo+ICsjaW5jbHVkZSAic2VsZnRl
c3RzL2lndF9saXZlX3Rlc3QuaCIKPiArI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3Rfc3Bpbm5lci5o
Igo+ICsjaW5jbHVkZSAic2VsZnRlc3RzL2xpYl9zd19mZW5jZS5oIgo+ICsKPiArI2luY2x1ZGUg
ImdlbS9zZWxmdGVzdHMvaWd0X2dlbV91dGlscy5oIgo+ICsjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0
cy9tb2NrX2NvbnRleHQuaCIKPiArCj4gKyNkZWZpbmUgQ1NfR1BSKGVuZ2luZSwgbikgKChlbmdp
bmUpLT5tbWlvX2Jhc2UgKyAweDYwMCArIChuKSAqIDQpCj4gKyNkZWZpbmUgTlVNX0dQUiAxNgo+
ICsjZGVmaW5lIE5VTV9HUFJfRFcgKE5VTV9HUFIgKiAyKSAvKiBlYWNoIEdQUiBpcyAyIGR3b3Jk
cyAqLwo+ICsKPiArc3RhdGljIHN0cnVjdCBpOTE1X3ZtYSAqY3JlYXRlX3NjcmF0Y2goc3RydWN0
IGludGVsX2d0ICpndCkKPiArewoKVGhlcmUgaXMgYWxyZWFkeSBzZXZlcmFsIGNvcGllcyBvZiB0
aGlzIGNyZWF0ZV9zY3JhdGNoKCkgaW4gdGhlIApzZWxmdGVzdHMgY29kZSAoZXhlY2xpc3RzLCBt
b2NzIGFuZCBub3cgbHJjKS4gRG8gd2Ugbm93IGhhdmUgZW5vdWdoIAp1c2FnZXMgdG8gbW92ZSBp
dCB0byBhIGNvbW1vbiBmaWxlPyBDYW4gYmUgZG9uZSBhcyBhIGZvbGxvdyB1cC4KCkFwYXJ0IGZy
b20gdGhlIG5pdHMsIHRoZSBzcGxpdCBsb29rcyBnb29kIHRvIG1lIGFuZCB0aGUgcmVuYW1lcyBh
cmUgCnJlYXNvbmFibGUuClRoZSBpc3N1ZSB3aXRoIHRoZSBkb2NzIGlzIGFjdHVhbGx5IGNhdXNl
ZCBieSB0aGUgcHJldmlvdXMgcGF0Y2ggdGhhdCAKcmVuYW1lZCBscmMuYyB0byBleGVjbGlzdHNf
c3VibWlzc2lvbi5jLCBzbyB3ZSBjYW4gZml4IHRoYXQgc2VwYXJhdGVseS4KClJldmlld2VkLWJ5
OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29t
PgoKRGFuaWVsZQoKPiArCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmo7Cj4gKwlzdHJ1
Y3QgaTkxNV92bWEgKnZtYTsKPiArCWludCBlcnI7Cj4gKwo+ICsJb2JqID0gaTkxNV9nZW1fb2Jq
ZWN0X2NyZWF0ZV9pbnRlcm5hbChndC0+aTkxNSwgUEFHRV9TSVpFKTsKPiArCWlmIChJU19FUlIo
b2JqKSkKPiArCQlyZXR1cm4gRVJSX0NBU1Qob2JqKTsKPiArCj4gKwlpOTE1X2dlbV9vYmplY3Rf
c2V0X2NhY2hlX2NvaGVyZW5jeShvYmosIEk5MTVfQ0FDSElOR19DQUNIRUQpOwo+ICsKPiArCXZt
YSA9IGk5MTVfdm1hX2luc3RhbmNlKG9iaiwgJmd0LT5nZ3R0LT52bSwgTlVMTCk7Cj4gKwlpZiAo
SVNfRVJSKHZtYSkpIHsKPiArCQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Cj4gKwkJcmV0dXJu
IHZtYTsKPiArCX0KPiArCj4gKwllcnIgPSBpOTE1X3ZtYV9waW4odm1hLCAwLCAwLCBQSU5fR0xP
QkFMKTsKPiArCWlmIChlcnIpIHsKPiArCQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Cj4gKwkJ
cmV0dXJuIEVSUl9QVFIoZXJyKTsKPiArCX0KPiArCj4gKwlyZXR1cm4gdm1hOwo+ICt9Cj4gKwo+
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

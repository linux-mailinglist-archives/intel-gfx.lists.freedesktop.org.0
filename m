Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id D7707AA18D
	for <lists+intel-gfx@lfdr.de>; Thu,  5 Sep 2019 13:35:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0CBE76E088;
	Thu,  5 Sep 2019 11:35:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 59F056E086
 for <intel-gfx@lists.freedesktop.org>; Thu,  5 Sep 2019 11:35:07 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 05 Sep 2019 04:35:06 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,470,1559545200"; d="scan'208";a="173914105"
Received: from rosetta.fi.intel.com ([10.237.72.194])
 by orsmga007.jf.intel.com with ESMTP; 05 Sep 2019 04:35:04 -0700
Received: by rosetta.fi.intel.com (Postfix, from userid 1000)
 id 07C058437A5; Thu,  5 Sep 2019 14:34:57 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  5 Sep 2019 14:34:55 +0300
Message-Id: <20190905113455.31703-1-mika.kuoppala@linux.intel.com>
X-Mailer: git-send-email 2.17.1
Subject: [Intel-gfx] [PATCH] drm/i915/tgl: Register state context definition
 for Gen12
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Michel Thierry <michel.thierry@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWljaGVsIFRoaWVycnkgPG1pY2hlbC50aGllcnJ5QGludGVsLmNvbT4KCkdlbjEyIGhh
cyBzdWJ0bGUgY2hhbmdlcyBpbiB0aGUgcmVnIHN0YXRlIGNvbnRleHQgb2Zmc2V0cyAoc29tZSBm
aWVsZHMKYXJlIGdvbmUsIHNvbWUgYXJlIGluIGEgZGlmZmVyZW50IGxvY2F0aW9uKSwgY29tcGFy
ZWQgdG8gcHJldmlvdXMgR2Vucy4KClRoZSBzaW1wbGVzdCBhcHByb2FjaCBzZWVtcyB0byBiZSBr
ZWVwaW5nIEdlbjEyIChhbmQgZnV0dXJlIHBsYXRmb3JtKQpjaGFuZ2VzIGFwYXJ0IGZyb20gdGhl
IHByZXZpb3VzIGdlbnMsIHdoaWxlIGtlZXBpbmcgdGhlIHJlZ2lzdGVycyB0aGF0CmFyZSBjb250
aWd1b3VzIGluIGZ1bmN0aW9ucyB3ZSBjYW4gcmV1c2UuCgp2MjogYWxpYXMsIHZpcnR1YWwgZW5n
aW5lLCBycGNzLCBwcnVuZSB1bnVzZWQgcmVncyAoTWlrYSkKCkJzcGVjOiA0NjI1NQpDYzogTWlj
aGFsIFdhamRlY3prbyA8bWljaGFsLndhamRlY3prb0BpbnRlbC5jb20+CkNjOiBEYW5pZWxlIENl
cmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpDYzogQ2hyaXMg
V2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBKb29uYXMgTGFodGluZW4gPGpv
b25hcy5sYWh0aW5lbkBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1pY2hlbCBUaGll
cnJ5IDxtaWNoZWwudGhpZXJyeUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEx1Y2FzIERlIE1h
cmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNaWthIEt1b3Bw
YWxhIDxtaWthLmt1b3BwYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9scmMuYyAgICAgfCAxOTQgKysrKysrKysrKysrKysrKystLS0tLS0tCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuaCAgICAgfCAgIDIgKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjX3JlZy5oIHwgICA3ICstCiAzIGZpbGVzIGNoYW5nZWQs
IDE0NiBpbnNlcnRpb25zKCspLCA1NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2xyYy5jCmluZGV4IDg3Yjc0NzNhNmRmYi4uZjQ0Yzc4YTgyOTE1IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtODEwLDYgKzgxMCw3IEBAIHN0YXRpYyB2b2lkIHZpcnR1
YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHModTMyICpyZWdzLAogCiAJLyogTXVzdCBtYXRjaCBl
eGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUoKSEgKi8KIAorCS8qIENvbW1vbiBwYXJ0ICovCiAJcmVn
c1tDVFhfQ09OVEVYVF9DT05UUk9MXSA9CiAJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ09O
VEVYVF9DT05UUk9MKGJhc2UpKTsKIAlyZWdzW0NUWF9SSU5HX0hFQURdID0gaTkxNV9tbWlvX3Jl
Z19vZmZzZXQoUklOR19IRUFEKGJhc2UpKTsKQEAgLTgyMCwxMyArODIxLDE2IEBAIHN0YXRpYyB2
b2lkIHZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHModTMyICpyZWdzLAogCXJlZ3NbQ1RY
X0JCX0hFQURfVV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCQUREUl9VRFcoYmFzZSkp
OwogCXJlZ3NbQ1RYX0JCX0hFQURfTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCQURE
UihiYXNlKSk7CiAJcmVnc1tDVFhfQkJfU1RBVEVdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklO
R19CQlNUQVRFKGJhc2UpKTsKKwogCXJlZ3NbQ1RYX1NFQ09ORF9CQl9IRUFEX1VdID0KIAkJaTkx
NV9tbWlvX3JlZ19vZmZzZXQoUklOR19TQkJBRERSX1VEVyhiYXNlKSk7CiAJcmVnc1tDVFhfU0VD
T05EX0JCX0hFQURfTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1NCQkFERFIoYmFzZSkp
OwogCXJlZ3NbQ1RYX1NFQ09ORF9CQl9TVEFURV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5H
X1NCQlNUQVRFKGJhc2UpKTsKIAorCS8qIFBQR1RUIHBhcnQgKi8KIAlyZWdzW0NUWF9DVFhfVElN
RVNUQU1QXSA9CiAJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQ1RYX1RJTUVTVEFNUChiYXNl
KSk7CisKIAlyZWdzW0NUWF9QRFAzX1VEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JJ
TkdfUERQX1VEVyhiYXNlLCAzKSk7CiAJcmVnc1tDVFhfUERQM19MRFddID0gaTkxNV9tbWlvX3Jl
Z19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFcoYmFzZSwgMykpOwogCXJlZ3NbQ1RYX1BEUDJfVURX
XSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfVURXKGJhc2UsIDIpKTsKQEAg
LTg0NCw4ICs4NDgsMTIgQEAgc3RhdGljIHZvaWQgdmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zm
c2V0cyh1MzIgKnJlZ3MsCiAJCXJlZ3NbQ1RYX0JCX1BFUl9DVFhfUFRSXSA9CiAJCQlpOTE1X21t
aW9fcmVnX29mZnNldChSSU5HX0JCX1BFUl9DVFhfUFRSKGJhc2UpKTsKIAotCQlyZWdzW0NUWF9S
X1BXUl9DTEtfU1RBVEVdID0KLQkJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUl9QV1JfQ0xL
X1NUQVRFKTsKKwkJaWYgKElOVEVMX0dFTihlbmdpbmUtPmk5MTUpIDwgMTEpCisJCQlyZWdzW0NU
WF9SX1BXUl9DTEtfU1RBVEVdID0KKwkJCQlpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JfUFdS
X0NMS19TVEFURSk7CisJCWVsc2UKKwkJCXJlZ3NbR0VOMTJfQ1RYX1JfUFdSX0NMS19TVEFURV0g
PQorCQkJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUl9QV1JfQ0xLX1NUQVRFKTsKIAl9CiB9
CiAKQEAgLTE3NDcsOCArMTc1NSwxMiBAQCBfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0YXRlKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAogCS8qIFJQQ1MgKi8KIAlpZiAoZW5naW5lLT5jbGFz
cyA9PSBSRU5ERVJfQ0xBU1MpIHsKLQkJcmVnc1tDVFhfUl9QV1JfQ0xLX1NUQVRFICsgMV0gPQot
CQkJaW50ZWxfc3NldV9tYWtlX3JwY3MoZW5naW5lLT5pOTE1LCAmY2UtPnNzZXUpOworCQljb25z
dCB1MzIgcnBjcyA9IGludGVsX3NzZXVfbWFrZV9ycGNzKGVuZ2luZS0+aTkxNSwgJmNlLT5zc2V1
KTsKKwkJY29uc3QgdTMyIG9mZnNldCA9IElOVEVMX0dFTihlbmdpbmUtPmk5MTUpIDwgMTEgPwor
CQkJQ1RYX1JfUFdSX0NMS19TVEFURSArIDEgOgorCQkJR0VOMTJfQ1RYX1JfUFdSX0NMS19TVEFU
RSArIDE7CisKKwkJcmVnc1tvZmZzZXRdID0gcnBjczsKIAogCQlpOTE1X29hX2luaXRfcmVnX3N0
YXRlKGVuZ2luZSwgY2UsIHJlZ3MpOwogCX0KQEAgLTMxMTYsMzUgKzMxMjgsMTMgQEAgc3RhdGlj
IHUzMiBpbnRlbF9scl9pbmRpcmVjdF9jdHhfb2Zmc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAlyZXR1cm4gaW5kaXJlY3RfY3R4X29mZnNldDsKIH0KIAotc3RhdGljIHN0cnVj
dCBpOTE1X3BwZ3R0ICp2bV9hbGlhcyhzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSkKLXsK
LQlpZiAoaTkxNV9pc19nZ3R0KHZtKSkKLQkJcmV0dXJuIGk5MTVfdm1fdG9fZ2d0dCh2bSktPmFs
aWFzOwotCWVsc2UKLQkJcmV0dXJuIGk5MTVfdm1fdG9fcHBndHQodm0pOwotfQogCi1zdGF0aWMg
dm9pZCBleGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUodTMyICpyZWdzLAotCQkJCSAgICAgc3RydWN0
IGludGVsX2NvbnRleHQgKmNlLAotCQkJCSAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lLAotCQkJCSAgICAgc3RydWN0IGludGVsX3JpbmcgKnJpbmcpCitzdGF0aWMgdm9pZCBpbml0
X2NvbW1vbl9yZWdfc3RhdGUodTMyICogY29uc3QgcmVncywKKwkJCQkgIHN0cnVjdCBpOTE1X3Bw
Z3R0ICogY29uc3QgcHBndHQsCisJCQkJICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
CisJCQkJICBzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKIHsKLQlzdHJ1Y3QgaTkxNV9wcGd0dCAq
cHBndHQgPSB2bV9hbGlhcyhjZS0+dm0pOwotCWJvb2wgcmNzID0gZW5naW5lLT5jbGFzcyA9PSBS
RU5ERVJfQ0xBU1M7Ci0JdTMyIGJhc2UgPSBlbmdpbmUtPm1taW9fYmFzZTsKLQotCS8qCi0JICog
QSBjb250ZXh0IGlzIGFjdHVhbGx5IGEgYmlnIGJhdGNoIGJ1ZmZlciB3aXRoIHNldmVyYWwKLQkg
KiBNSV9MT0FEX1JFR0lTVEVSX0lNTSBjb21tYW5kcyBmb2xsb3dlZCBieSAocmVnLCB2YWx1ZSkg
cGFpcnMuIFRoZQotCSAqIHZhbHVlcyB3ZSBhcmUgc2V0dGluZyBoZXJlIGFyZSBvbmx5IGZvciB0
aGUgZmlyc3QgY29udGV4dCByZXN0b3JlOgotCSAqIG9uIGEgc3Vic2VxdWVudCBzYXZlLCB0aGUg
R1BVIHdpbGwgcmVjcmVhdGUgdGhpcyBiYXRjaGJ1ZmZlciB3aXRoIG5ldwotCSAqIHZhbHVlcyAo
aW5jbHVkaW5nIGFsbCB0aGUgbWlzc2luZyBNSV9MT0FEX1JFR0lTVEVSX0lNTSBjb21tYW5kcyB0
aGF0Ci0JICogd2UgYXJlIG5vdCBpbml0aWFsaXppbmcgaGVyZSkuCi0JICoKLQkgKiBNdXN0IGtl
ZXAgY29uc2lzdGVudCB3aXRoIHZpcnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHMoKS4KLQkg
Ki8KLQlyZWdzW0NUWF9MUklfSEVBREVSXzBdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0ocmNzID8g
MTQgOiAxMSkgfAotCQkJCSBNSV9MUklfRk9SQ0VfUE9TVEVEOworCWNvbnN0IHUzMiBiYXNlID0g
ZW5naW5lLT5tbWlvX2Jhc2U7CiAKIAlDVFhfUkVHKHJlZ3MsIENUWF9DT05URVhUX0NPTlRST0ws
IFJJTkdfQ09OVEVYVF9DT05UUk9MKGJhc2UpLAogCQlfTUFTS0VEX0JJVF9ESVNBQkxFKENUWF9D
VFJMX0VOR0lORV9DVFhfUkVTVE9SRV9JTkhJQklUKSB8CkBAIC0zMTYyLDM4ICszMTUyLDQ0IEBA
IHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCiAJQ1RYX1JF
RyhyZWdzLCBDVFhfQkJfSEVBRF9VLCBSSU5HX0JCQUREUl9VRFcoYmFzZSksIDApOwogCUNUWF9S
RUcocmVncywgQ1RYX0JCX0hFQURfTCwgUklOR19CQkFERFIoYmFzZSksIDApOwogCUNUWF9SRUco
cmVncywgQ1RYX0JCX1NUQVRFLCBSSU5HX0JCU1RBVEUoYmFzZSksIFJJTkdfQkJfUFBHVFQpOwot
CUNUWF9SRUcocmVncywgQ1RYX1NFQ09ORF9CQl9IRUFEX1UsIFJJTkdfU0JCQUREUl9VRFcoYmFz
ZSksIDApOwotCUNUWF9SRUcocmVncywgQ1RYX1NFQ09ORF9CQl9IRUFEX0wsIFJJTkdfU0JCQURE
UihiYXNlKSwgMCk7Ci0JQ1RYX1JFRyhyZWdzLCBDVFhfU0VDT05EX0JCX1NUQVRFLCBSSU5HX1NC
QlNUQVRFKGJhc2UpLCAwKTsKLQlpZiAocmNzKSB7Ci0JCXN0cnVjdCBpOTE1X2N0eF93b3JrYXJv
dW5kcyAqd2FfY3R4ID0gJmVuZ2luZS0+d2FfY3R4OwotCi0JCUNUWF9SRUcocmVncywgQ1RYX1JD
U19JTkRJUkVDVF9DVFgsIFJJTkdfSU5ESVJFQ1RfQ1RYKGJhc2UpLCAwKTsKLQkJQ1RYX1JFRyhy
ZWdzLCBDVFhfUkNTX0lORElSRUNUX0NUWF9PRkZTRVQsCi0JCQlSSU5HX0lORElSRUNUX0NUWF9P
RkZTRVQoYmFzZSksIDApOwotCQlpZiAod2FfY3R4LT5pbmRpcmVjdF9jdHguc2l6ZSkgewotCQkJ
dTMyIGdndHRfb2Zmc2V0ID0gaTkxNV9nZ3R0X29mZnNldCh3YV9jdHgtPnZtYSk7Cit9CiAKLQkJ
CXJlZ3NbQ1RYX1JDU19JTkRJUkVDVF9DVFggKyAxXSA9Ci0JCQkJKGdndHRfb2Zmc2V0ICsgd2Ff
Y3R4LT5pbmRpcmVjdF9jdHgub2Zmc2V0KSB8Ci0JCQkJKHdhX2N0eC0+aW5kaXJlY3RfY3R4LnNp
emUgLyBDQUNIRUxJTkVfQllURVMpOworc3RhdGljIHZvaWQgaW5pdF93YV9iYl9yZWdfc3RhdGUo
dTMyICogY29uc3QgcmVncywKKwkJCQkgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAor
CQkJCSB1MzIgcG9zX2JiX3Blcl9jdHgpCit7CisJc3RydWN0IGk5MTVfY3R4X3dvcmthcm91bmRz
ICogY29uc3Qgd2FfY3R4ID0gJmVuZ2luZS0+d2FfY3R4OworCWNvbnN0IHUzMiBiYXNlID0gZW5n
aW5lLT5tbWlvX2Jhc2U7CisJY29uc3QgdTMyIHBvc19pbmRpcmVjdF9jdHggPSBwb3NfYmJfcGVy
X2N0eCArIDI7CisJY29uc3QgdTMyIHBvc19pbmRpcmVjdF9jdHhfb2Zmc2V0ID0gcG9zX2luZGly
ZWN0X2N0eCArIDI7CiAKLQkJCXJlZ3NbQ1RYX1JDU19JTkRJUkVDVF9DVFhfT0ZGU0VUICsgMV0g
PQotCQkJCWludGVsX2xyX2luZGlyZWN0X2N0eF9vZmZzZXQoZW5naW5lKSA8PCA2OwotCQl9CisJ
R0VNX0JVR19PTihlbmdpbmUtPmNsYXNzICE9IFJFTkRFUl9DTEFTUyk7CisJQ1RYX1JFRyhyZWdz
LCBwb3NfaW5kaXJlY3RfY3R4LCBSSU5HX0lORElSRUNUX0NUWChiYXNlKSwgMCk7CisJQ1RYX1JF
RyhyZWdzLCBwb3NfaW5kaXJlY3RfY3R4X29mZnNldCwKKwkJUklOR19JTkRJUkVDVF9DVFhfT0ZG
U0VUKGJhc2UpLCAwKTsKKwlpZiAod2FfY3R4LT5pbmRpcmVjdF9jdHguc2l6ZSkgeworCQljb25z
dCB1MzIgZ2d0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHdhX2N0eC0+dm1hKTsKIAotCQlD
VFhfUkVHKHJlZ3MsIENUWF9CQl9QRVJfQ1RYX1BUUiwgUklOR19CQl9QRVJfQ1RYX1BUUihiYXNl
KSwgMCk7Ci0JCWlmICh3YV9jdHgtPnBlcl9jdHguc2l6ZSkgewotCQkJdTMyIGdndHRfb2Zmc2V0
ID0gaTkxNV9nZ3R0X29mZnNldCh3YV9jdHgtPnZtYSk7CisJCXJlZ3NbcG9zX2luZGlyZWN0X2N0
eCArIDFdID0KKwkJCShnZ3R0X29mZnNldCArIHdhX2N0eC0+aW5kaXJlY3RfY3R4Lm9mZnNldCkg
fAorCQkJKHdhX2N0eC0+aW5kaXJlY3RfY3R4LnNpemUgLyBDQUNIRUxJTkVfQllURVMpOwogCi0J
CQlyZWdzW0NUWF9CQl9QRVJfQ1RYX1BUUiArIDFdID0KLQkJCQkoZ2d0dF9vZmZzZXQgKyB3YV9j
dHgtPnBlcl9jdHgub2Zmc2V0KSB8IDB4MDE7Ci0JCX0KKwkJcmVnc1twb3NfaW5kaXJlY3RfY3R4
X29mZnNldCArIDFdID0KKwkJCWludGVsX2xyX2luZGlyZWN0X2N0eF9vZmZzZXQoZW5naW5lKSA8
PCA2OwogCX0KIAotCXJlZ3NbQ1RYX0xSSV9IRUFERVJfMV0gPSBNSV9MT0FEX1JFR0lTVEVSX0lN
TSg5KSB8IE1JX0xSSV9GT1JDRV9QT1NURUQ7CisJQ1RYX1JFRyhyZWdzLCBwb3NfYmJfcGVyX2N0
eCwgUklOR19CQl9QRVJfQ1RYX1BUUihiYXNlKSwgMCk7CisJaWYgKHdhX2N0eC0+cGVyX2N0eC5z
aXplKSB7CisJCWNvbnN0IHUzMiBnZ3R0X29mZnNldCA9IGk5MTVfZ2d0dF9vZmZzZXQod2FfY3R4
LT52bWEpOwogCi0JQ1RYX1JFRyhyZWdzLCBDVFhfQ1RYX1RJTUVTVEFNUCwgUklOR19DVFhfVElN
RVNUQU1QKGJhc2UpLCAwKTsKKwkJcmVnc1twb3NfYmJfcGVyX2N0eCArIDFdID0KKwkJCShnZ3R0
X29mZnNldCArIHdhX2N0eC0+cGVyX2N0eC5vZmZzZXQpIHwgMHgwMTsKKwl9Cit9CisKK3N0YXRp
YyB2b2lkIGluaXRfcHBndHRfcmVnX3N0YXRlKHUzMiAqcmVncywgdTMyIGJhc2UsCisJCQkJIHN0
cnVjdCBpOTE1X3BwZ3R0ICpwcGd0dCkKK3sKIAkvKiBQRFAgdmFsdWVzIHdlbGwgYmUgYXNzaWdu
ZWQgbGF0ZXIgaWYgbmVlZGVkICovCiAJQ1RYX1JFRyhyZWdzLCBDVFhfUERQM19VRFcsIEdFTjhf
UklOR19QRFBfVURXKGJhc2UsIDMpLCAwKTsKIAlDVFhfUkVHKHJlZ3MsIENUWF9QRFAzX0xEVywg
R0VOOF9SSU5HX1BEUF9MRFcoYmFzZSwgMyksIDApOwpAQCAtMzIxNiw2ICszMjEyLDQwIEBAIHN0
YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCiAJCUFTU0lHTl9D
VFhfUERQKHBwZ3R0LCByZWdzLCAxKTsKIAkJQVNTSUdOX0NUWF9QRFAocHBndHQsIHJlZ3MsIDAp
OwogCX0KK30KKworc3RhdGljIHN0cnVjdCBpOTE1X3BwZ3R0ICp2bV9hbGlhcyhzdHJ1Y3QgaTkx
NV9hZGRyZXNzX3NwYWNlICp2bSkKK3sKKwlpZiAoaTkxNV9pc19nZ3R0KHZtKSkKKwkJcmV0dXJu
IGk5MTVfdm1fdG9fZ2d0dCh2bSktPmFsaWFzOworCWVsc2UKKwkJcmV0dXJuIGk5MTVfdm1fdG9f
cHBndHQodm0pOworfQorCitzdGF0aWMgdm9pZCBnZW44X2luaXRfcmVnX3N0YXRlKHUzMiAqIGNv
bnN0IHJlZ3MsCisJCQkJc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3sKKwlz
dHJ1Y3QgaTkxNV9wcGd0dCAqIGNvbnN0IHBwZ3R0ID0gdm1fYWxpYXMoY2UtPnZtKTsKKwljb25z
dCBib29sIHJjcyA9IGVuZ2luZS0+Y2xhc3MgPT0gUkVOREVSX0NMQVNTOworCWNvbnN0IHUzMiBi
YXNlID0gZW5naW5lLT5tbWlvX2Jhc2U7CisKKwlyZWdzW0NUWF9MUklfSEVBREVSXzBdID0gTUlf
TE9BRF9SRUdJU1RFUl9JTU0ocmNzID8gMTQgOiAxMSkgfAorCQkJCSBNSV9MUklfRk9SQ0VfUE9T
VEVEOworCisJaW5pdF9jb21tb25fcmVnX3N0YXRlKHJlZ3MsIHBwZ3R0LCBlbmdpbmUsIHJpbmcp
OworCUNUWF9SRUcocmVncywgQ1RYX1NFQ09ORF9CQl9IRUFEX1UsIFJJTkdfU0JCQUREUl9VRFco
YmFzZSksIDApOworCUNUWF9SRUcocmVncywgQ1RYX1NFQ09ORF9CQl9IRUFEX0wsIFJJTkdfU0JC
QUREUihiYXNlKSwgMCk7CisJQ1RYX1JFRyhyZWdzLCBDVFhfU0VDT05EX0JCX1NUQVRFLCBSSU5H
X1NCQlNUQVRFKGJhc2UpLCAwKTsKKwlpZiAocmNzKQorCQlpbml0X3dhX2JiX3JlZ19zdGF0ZShy
ZWdzLCBlbmdpbmUsIENUWF9CQl9QRVJfQ1RYX1BUUik7CisKKwlyZWdzW0NUWF9MUklfSEVBREVS
XzFdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oOSkgfCBNSV9MUklfRk9SQ0VfUE9TVEVEOworCisJ
Q1RYX1JFRyhyZWdzLCBDVFhfQ1RYX1RJTUVTVEFNUCwgUklOR19DVFhfVElNRVNUQU1QKGJhc2Up
LCAwKTsKKworCWluaXRfcHBndHRfcmVnX3N0YXRlKHJlZ3MsIGJhc2UsIHBwZ3R0KTsKIAogCWlm
IChyY3MpIHsKIAkJcmVnc1tDVFhfTFJJX0hFQURFUl8yXSA9IE1JX0xPQURfUkVHSVNURVJfSU1N
KDEpOwpAQCAtMzIyNyw2ICszMjU3LDU4IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3Jl
Z19zdGF0ZSh1MzIgKnJlZ3MsCiAJCXJlZ3NbQ1RYX0VORF0gfD0gQklUKDApOwogfQogCitzdGF0
aWMgdm9pZCBnZW4xMl9pbml0X3JlZ19zdGF0ZSh1MzIgKiBjb25zdCByZWdzLAorCQkJCSBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwKKwkJCQkgc3RydWN0IGludGVsX3JpbmcgKnJpbmcpCit7CisJc3RydWN0IGk5MTVfcHBndHQg
KiBjb25zdCBwcGd0dCA9IHZtX2FsaWFzKGNlLT52bSk7CisJY29uc3QgYm9vbCByY3MgPSBlbmdp
bmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUzsKKwljb25zdCB1MzIgYmFzZSA9IGVuZ2luZS0+bW1p
b19iYXNlOworCisJR0VNX0RFQlVHX0VYRUMoRFJNX0lORk9fT05DRSgiVXNpbmcgR0VOMTIgUmVn
aXN0ZXIgU3RhdGUgQ29udGV4dFxuIikpOworCisJcmVnc1tDVFhfTFJJX0hFQURFUl8wXSA9IE1J
X0xPQURfUkVHSVNURVJfSU1NKDEzKSB8CisJCU1JX0xSSV9GT1JDRV9QT1NURUQ7CisKKwlpbml0
X2NvbW1vbl9yZWdfc3RhdGUocmVncywgcHBndHQsIGVuZ2luZSwgcmluZyk7CisJaWYgKHJjcykK
KwkJaW5pdF93YV9iYl9yZWdfc3RhdGUocmVncywgZW5naW5lLCBHRU4xMl9DVFhfQkJfUEVSX0NU
WF9QVFIpOworCisJcmVnc1tDVFhfTFJJX0hFQURFUl8xXSA9IE1JX0xPQURfUkVHSVNURVJfSU1N
KDkpIHwKKwkJTUlfTFJJX0ZPUkNFX1BPU1RFRDsKKworCUNUWF9SRUcocmVncywgQ1RYX0NUWF9U
SU1FU1RBTVAsIFJJTkdfQ1RYX1RJTUVTVEFNUChiYXNlKSwgMCk7CisKKwlpbml0X3BwZ3R0X3Jl
Z19zdGF0ZShyZWdzLCBiYXNlLCBwcGd0dCk7CisKKwlpZiAocmNzKSB7CisJCXJlZ3NbR0VOMTJf
Q1RYX0xSSV9IRUFERVJfM10gPSBNSV9MT0FEX1JFR0lTVEVSX0lNTSgxKTsKKwkJQ1RYX1JFRyhy
ZWdzLCBHRU4xMl9DVFhfUl9QV1JfQ0xLX1NUQVRFLCBHRU44X1JfUFdSX0NMS19TVEFURSwKKwkJ
CTApOworCisJCS8qIFRPRE86IG9hX2luaXRfcmVnX3N0YXRlID8gKi8KKwl9Cit9CisKK3N0YXRp
YyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCisJCQkJICAgICBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsCisJCQkJICAgICBzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3sKKwkvKiBBIGNvbnRl
eHQgaXMgYWN0dWFsbHkgYSBiaWcgYmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAorCSAqIE1JX0xP
QURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIGZvbGxvd2VkIGJ5IChyZWcsIHZhbHVlKSBwYWlycy4g
VGhlCisJICogdmFsdWVzIHdlIGFyZSBzZXR0aW5nIGhlcmUgYXJlIG9ubHkgZm9yIHRoZSBmaXJz
dCBjb250ZXh0IHJlc3RvcmU6CisJICogb24gYSBzdWJzZXF1ZW50IHNhdmUsIHRoZSBHUFUgd2ls
bCByZWNyZWF0ZSB0aGlzIGJhdGNoYnVmZmVyIHdpdGggbmV3CisJICogdmFsdWVzIChpbmNsdWRp
bmcgYWxsIHRoZSBtaXNzaW5nIE1JX0xPQURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIHRoYXQKKwkg
KiB3ZSBhcmUgbm90IGluaXRpYWxpemluZyBoZXJlKS4KKwkgKi8KKwlpZiAoSU5URUxfR0VOKGVu
Z2luZS0+aTkxNSkgPj0gMTIpCisJCWdlbjEyX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBlbmdp
bmUsIHJpbmcpOworCWVsc2UKKwkJZ2VuOF9pbml0X3JlZ19zdGF0ZShyZWdzLCBjZSwgZW5naW5l
LCByaW5nKTsKK30KKwogc3RhdGljIGludAogcG9wdWxhdGVfbHJfY29udGV4dChzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCiAJCSAgICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29i
aiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKaW5kZXggZGMwMjUyZTA1ODllLi5hNGJk
ZTM4ZTM1ZDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCkBAIC00OSw2ICs0OSw4
IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3M7CiAKICNkZWZpbmUJICBFTF9DVFJMX0xPQUQJCQkJ
KDEgPDwgMCkKIAorI2RlZmluZSBHRU4xMl9FTkdJTkVfU0VNQVBIT1JFX1RPS0VOKGVuZ2luZSkJ
X01NSU8oKGVuZ2luZSktPm1taW9fYmFzZSArIDB4MmI0KQorCiAvKiBUaGUgZG9jcyBzcGVjaWZ5
IHRoYXQgdGhlIHdyaXRlIHBvaW50ZXIgd3JhcHMgYXJvdW5kIGFmdGVyIDVoLCAiQWZ0ZXIgc3Rh
dHVzCiAgKiBpcyB3cml0dGVuIG91dCB0byB0aGUgbGFzdCBhdmFpbGFibGUgc3RhdHVzIFFXIGF0
IG9mZnNldCA1aCwgdGhpcyBwb2ludGVyCiAgKiB3cmFwcyB0byAwLiIKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2xyY19yZWcuaAppbmRleCBiOGYyMGFkNzExNjkuLjhjYjY2NTU3NDRjZCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjX3JlZy5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaApAQCAtOSw3ICs5LDcgQEAK
IAogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAKLS8qIEdFTjgrIFJlZyBTdGF0ZSBDb250ZXh0
ICovCisvKiBHRU44IHRvIEdFTjExIFJlZyBTdGF0ZSBDb250ZXh0ICovCiAjZGVmaW5lIENUWF9M
UklfSEVBREVSXzAJCTB4MDEKICNkZWZpbmUgQ1RYX0NPTlRFWFRfQ09OVFJPTAkJMHgwMgogI2Rl
ZmluZSBDVFhfUklOR19IRUFECQkJMHgwNApAQCAtMzksNiArMzksMTEgQEAKICNkZWZpbmUgQ1RY
X1JfUFdSX0NMS19TVEFURQkJMHg0MgogI2RlZmluZSBDVFhfRU5ECQkJCTB4NDQKIAorLyogR0VO
MTIrIFJlZyBTdGF0ZSBDb250ZXh0ICovCisjZGVmaW5lIEdFTjEyX0NUWF9CQl9QRVJfQ1RYX1BU
UgkJMHgxMgorI2RlZmluZSBHRU4xMl9DVFhfTFJJX0hFQURFUl8zCQkJMHg0MQorI2RlZmluZSBH
RU4xMl9DVFhfUl9QV1JfQ0xLX1NUQVRFCQkweDQyCisKICNkZWZpbmUgQ1RYX1JFRyhyZWdfc3Rh
dGUsIHBvcywgcmVnLCB2YWwpIGRvIHsgXAogCXUzMiAqcmVnX3N0YXRlX18gPSAocmVnX3N0YXRl
KTsgXAogCWNvbnN0IHUzMiBwb3NfXyA9IChwb3MpOyBcCi0tIAoyLjE3LjEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

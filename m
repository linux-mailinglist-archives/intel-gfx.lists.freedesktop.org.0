Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6C524D9119
	for <lists+intel-gfx@lfdr.de>; Wed, 16 Oct 2019 14:37:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A6BA26E962;
	Wed, 16 Oct 2019 12:37:46 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B09766E95F
 for <intel-gfx@lists.freedesktop.org>; Wed, 16 Oct 2019 12:37:45 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 16 Oct 2019 05:37:45 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,303,1566889200"; d="scan'208";a="207898599"
Received: from fmsmsx104.amr.corp.intel.com ([10.18.124.202])
 by orsmga002.jf.intel.com with ESMTP; 16 Oct 2019 05:37:44 -0700
Received: from bgsmsx106.gar.corp.intel.com (10.223.43.196) by
 fmsmsx104.amr.corp.intel.com (10.18.124.202) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Wed, 16 Oct 2019 05:37:44 -0700
Received: from BGSMSX108.gar.corp.intel.com ([169.254.8.18]) by
 BGSMSX106.gar.corp.intel.com ([169.254.1.191]) with mapi id 14.03.0439.000;
 Wed, 16 Oct 2019 18:07:41 +0530
From: "Kulkarni, Vandita" <vandita.kulkarni@intel.com>
To: "C, Ramalingam" <ramalingam.c@intel.com>
Thread-Topic: [Intel-gfx] [RFC 7/7] drm/i915/dsi: Initiate frame request in
 cmd mode
Thread-Index: AQHVgoLdNtvFGDtL4UCOpwduF4nByadcs9gAgACDaEA=
Date: Wed, 16 Oct 2019 12:37:41 +0000
Message-ID: <57510F3E2013164E925CD03ED7512A3B80980D0F@BGSMSX108.gar.corp.intel.com>
References: <20191014110122.31923-1-vandita.kulkarni@intel.com>
 <20191014110122.31923-8-vandita.kulkarni@intel.com>
 <20191016101446.GC32730@intel.com>
In-Reply-To: <20191016101446.GC32730@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-titus-metadata-40: eyJDYXRlZ29yeUxhYmVscyI6IiIsIk1ldGFkYXRhIjp7Im5zIjoiaHR0cDpcL1wvd3d3LnRpdHVzLmNvbVwvbnNcL0ludGVsMyIsImlkIjoiY2JhZDIwZTQtMTA1Ny00Y2I0LTgyNTgtNDAzZmNjMTBlMmFhIiwicHJvcHMiOlt7Im4iOiJDVFBDbGFzc2lmaWNhdGlvbiIsInZhbHMiOlt7InZhbHVlIjoiQ1RQX05UIn1dfV19LCJTdWJqZWN0TGFiZWxzIjpbXSwiVE1DVmVyc2lvbiI6IjE3LjIuNS4xOCIsIlRydXN0ZWRMYWJlbEhhc2giOiJpOVZlcVwvNU1sXC9tSFpNd2tJanFPKzQ1enRIOG5wVnA2aUVFNDFOZHdGY0dNcVlKNEZ5cENEUlpaQ2Jua1RsbXUifQ==
x-ctpclassification: CTP_NT
dlp-product: dlpe-windows
dlp-version: 11.2.0.6
dlp-reaction: no-action
x-originating-ip: [10.223.10.10]
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [RFC 7/7] drm/i915/dsi: Initiate frame request in
 cmd mode
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Nikula, Jani" <jani.nikula@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

DQoNCj4gLS0tLS1PcmlnaW5hbCBNZXNzYWdlLS0tLS0NCj4gRnJvbTogQywgUmFtYWxpbmdhbSA8
cmFtYWxpbmdhbS5jQGludGVsLmNvbT4NCj4gU2VudDogV2VkbmVzZGF5LCBPY3RvYmVyIDE2LCAy
MDE5IDM6NDUgUE0NCj4gVG86IEt1bGthcm5pLCBWYW5kaXRhIDx2YW5kaXRhLmt1bGthcm5pQGlu
dGVsLmNvbT4NCj4gQ2M6IGludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmc7IE5pa3VsYSwg
SmFuaSA8amFuaS5uaWt1bGFAaW50ZWwuY29tPg0KPiBTdWJqZWN0OiBSZTogW0ludGVsLWdmeF0g
W1JGQyA3LzddIGRybS9pOTE1L2RzaTogSW5pdGlhdGUgZnJhbWUgcmVxdWVzdCBpbiBjbWQNCj4g
bW9kZQ0KPiANCj4gT24gMjAxOS0xMC0xNCBhdCAxNjozMToyMiArMDUzMCwgVmFuZGl0YSBLdWxr
YXJuaSB3cm90ZToNCj4gPiBJbiBURSBHYXRlIG1vZGUsIG9uIGV2ZXJ5IGZsaXAgd2UgbmVlZCB0
byBzZXQgdGhlIGZyYW1lIHVwZGF0ZSByZXF1ZXN0DQo+ID4gYml0LiBBZnRlciB0aGlzICBiaXQg
aXMgc2V0IHRyYW5zY29kZXIgaGFyZHdhcmUgd2lsbCBhdXRvbWF0aWNhbGx5DQo+ID4gc2VuZCB0
aGUgZnJhbWUgZGF0YSB0byB0aGUgcGFuZWwgd2hlbiBpdCByZWNlaXZlcyB0aGUgVEUgZXZlbnQu
DQo+ID4NCj4gPiBTaWduZWQtb2ZmLWJ5OiBWYW5kaXRhIEt1bGthcm5pIDx2YW5kaXRhLmt1bGth
cm5pQGludGVsLmNvbT4NCj4gPiAtLS0NCj4gPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pY2xfZHNpLmMgICAgICAgIHwgMjcgKysrKysrKysrKysrKysrKysrKw0KPiA+ICBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAxNiArKysrKysrKysrKw0K
PiA+ICAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgMyAr
KysNCj4gPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kc2kuaCAgICAgIHwg
IDMgKysrDQo+ID4gIDQgZmlsZXMgY2hhbmdlZCwgNDkgaW5zZXJ0aW9ucygrKQ0KPiA+DQo+ID4g
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jDQo+ID4g
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYw0KPiA+IGluZGV4IDg3Nzc0
NjQxNmU1Mi4uYzcyOTE3ZGRmOGU3IDEwMDY0NA0KPiA+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaWNsX2RzaS5jDQo+ID4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pY2xfZHNpLmMNCj4gPiBAQCAtOTAsNiArOTAsMzMgQEAgc3RydWN0IGludGVsX2VuY29k
ZXINCj4gKmdlbjExX2RzaV9maW5kX2NtZF9tb2RlX2VuY29kZXIoc3RydWN0IGludGVsX2NydGMg
KmNydGMpDQo+ID4gIAlyZXR1cm4gTlVMTDsNCj4gPiAgfQ0KPiA+DQo+ID4gK3ZvaWQgZ2VuMTFf
ZHNpX2NoZWNrX2ZyYW1lX3VwZGF0ZV9uZWVkZWQoc3RydWN0IGludGVsX2NydGMgKmludGVsX2Ny
dGMsDQo+ID4gKwkJCQkJIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQ0KPiAN
Cj4gPiArew0KPiA+ICsJc3RydWN0IGludGVsX2VuY29kZXIgKmludGVsX2VuY29kZXIgPSBOVUxM
Ow0KPiA+ICsNCj4gPiArCWludGVsX2VuY29kZXIgPSBnZW4xMV9kc2lfZmluZF9jbWRfbW9kZV9l
bmNvZGVyKGludGVsX2NydGMpOw0KPiA+ICsJaWYgKCFpbnRlbF9lbmNvZGVyKQ0KPiA+ICsJCXJl
dHVybjsNCj4gSW4gdGhpcyBmdW5jLCBpZiB5b3UgY291bGQgZmluZCBhIERTSSBlbmNvZGVyIHdp
dGggQ01EIG1vZGUsIHlvdSBzZXQgdGhlDQo+IGZsYWchPw0KWWVzLCB0aGUgcmVxdWlyZW1lbnQg
aXMgdG8gc2V0IHRoaXMgZnJhbWUgdXBkYXRlIGJpdCBvbiBldmVyeSBmbGlwLg0KTGlrZSBKYW5p
IGhhcyBjb21tZW50ZWQgb24gcGF0Y2ggNCB3aGVyZSB0aGlzIHBhcnNpbmcgZnVuY3Rpb24gaXMg
ZGVmaW5lZCwgd2lsbCBuZWVkIHRvIHJlY29uc2lkZXIgYW5kIHJlcGxhY2Ugd2l0aCBhIGJldHRl
ciBzb2x1dGlvbi4NCldvcmtpbmcgb24gaXQuIA0KDQpUaGFua3MsDQpWYW5kaXRhDQo+ID4gKw0K
PiA+ICsJLyogVEJEIFVzZSBiaXRzICB0byBzYXkgdXBkYXRlIG9uIHdoaWNoICBkc2kgcG9ydCBp
bnN0ZWFkIG9mIGEgYm9vbCAqLw0KPiA+ICsJY3J0Y19zdGF0ZS0+ZHNpX2ZyYW1lX3VwZGF0ZSA9
IHRydWU7IH0NCj4gPiArDQo+ID4gK3ZvaWQgZ2VuMTFfZHNpX2ZyYW1lX3VwZGF0ZShzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkgew0KPiA+ICsJc3RydWN0IGludGVsX2NydGMg
KmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPmJhc2UuY3J0Yyk7DQo+ID4gKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsN
Cj4gPiArCXUzMiB0bXA7DQo+ID4gKw0KPiA+ICsJLyogVEJEOiBhZGQgY2hlY2sgb24gcG9ydCAq
Lw0KPiA+ICsJaWYgKGNydGNfc3RhdGUtPmRzaV9mcmFtZV91cGRhdGUpIHsNCj4gPiArCQl0bXAg
PSBJOTE1X1JFQUQoSUNMX0RTSV9DTURfRlJNQ1RMKFBPUlRfQSkpOw0KPiA+ICsJCXRtcCB8PSBJ
Q0xfRlJBTUVfVVBEQVRFX1JFUVVFU1Q7DQo+ID4gKwkJSTkxNV9XUklURShJQ0xfRFNJX0NNRF9G
Uk1DVEwoUE9SVF9BKSwgdG1wKTsNCj4gPiArCX0NCj4gPiArfQ0KPiA+ICsNCj4gPiAgc3RhdGlj
IHZvaWQgd2FpdF9mb3JfY21kc19kaXNwYXRjaGVkX3RvX3BhbmVsKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyDQo+ID4gKmVuY29kZXIpICB7DQo+ID4gIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsgZGlmZg0KPiA+IC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gPiBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+ID4gaW5kZXggM2NmMzlmYzE1
M2IzLi5hOTAyYmIyYmYwNzUgMTAwNjQ0DQo+ID4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYw0KPiA+IEBAIC0xMTg1OCw2ICsxMTg1OCwxMSBAQCBzdGF0
aWMgaW50IGludGVsX2NydGNfYXRvbWljX2NoZWNrKHN0cnVjdA0KPiBkcm1fY3J0YyAqX2NydGMs
DQo+ID4gIAkJCQkJCQkgY3J0Y19zdGF0ZSk7DQo+ID4gIAl9DQo+ID4NCj4gPiArCWlmICgoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSAxMSkgJiYNCj4gPiArCQkoaW50ZWxfY3J0Y19oYXNfdHlwZShj
cnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKSkpIHsNCj4gUGxlYXNlIGNoZWNrIHRoaXMgYWxp
Z25tZW50IHRvbw0KPiANCj4gLVJhbQ0KPiA+ICsJCWdlbjExX2RzaV9jaGVja19mcmFtZV91cGRh
dGVfbmVlZGVkKGNydGMsIGNydGNfc3RhdGUpOw0KPiA+ICsJfQ0KPiA+ICsNCj4gPiAgCWlmIChI
QVNfSVBTKGRldl9wcml2KSkNCj4gPiAgCQljcnRjX3N0YXRlLT5pcHNfZW5hYmxlZCA9DQo+IGhz
d19jb21wdXRlX2lwc19jb25maWcoY3J0Y19zdGF0ZSk7DQo+ID4NCj4gPiBAQCAtMTM2MTgsNiAr
MTM2MjMsNyBAQCBzdGF0aWMgaW50IGludGVsX2F0b21pY19jaGVjayhzdHJ1Y3QNCj4gZHJtX2Rl
dmljZSAqZGV2LA0KPiA+ICAJaWYgKHJldCkNCj4gPiAgCQlnb3RvIGZhaWw7DQo+ID4NCj4gPiAr
DQo+ID4gIAlmb3JfZWFjaF9vbGRuZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0Yywg
b2xkX2NydGNfc3RhdGUsDQo+ID4gIAkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7DQo+ID4g
IAkJaWYgKCFuZWVkc19tb2Rlc2V0KG5ld19jcnRjX3N0YXRlKSAmJiBAQCAtMTQxMDgsNg0KPiAr
MTQxMTQsMTYgQEANCj4gPiBzdGF0aWMgdm9pZCBpbnRlbF9hdG9taWNfY29tbWl0X3RhaWwoc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpDQo+ID4gIAkJCWludGVsX2NvbG9yX2xvYWRf
bHV0cyhuZXdfY3J0Y19zdGF0ZSk7DQo+ID4gIAl9DQo+ID4NCj4gPiArCS8qDQo+ID4gKwkgKiBJ
bmNhc2Ugb2YgbWlwaSBkc2kgY29tbWFuZCBtb2RlLCB3ZSBuZWVkIHRvIHNldCBmcmFtZSB1cGRh
dGUNCj4gPiArCSAqIGZvciBldmVyeSBjb21taXQNCj4gPiArCSAqLw0KPiA+ICsJZm9yX2VhY2hf
bmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUsIGNydGMsIG5ld19jcnRjX3N0YXRlLCBpKSB7
DQo+ID4gKwkJaWYgKG5ld19jcnRjX3N0YXRlLT5iYXNlLmFjdGl2ZSAmJg0KPiA+ICsJCSAgICAh
bmVlZHNfbW9kZXNldChuZXdfY3J0Y19zdGF0ZSkgJiYNCj4gPiArCQkgICAgbmV3X2NydGNfc3Rh
dGUtPmRzaV9mcmFtZV91cGRhdGUpDQo+ID4gKwkJCWdlbjExX2RzaV9mcmFtZV91cGRhdGUobmV3
X2NydGNfc3RhdGUpOw0KPiA+ICsJfQ0KPiA+ICAJLyoNCj4gPiAgCSAqIE5vdyB0aGF0IHRoZSB2
YmxhbmsgaGFzIHBhc3NlZCwgd2UgY2FuIGdvIGFoZWFkIGFuZCBwcm9ncmFtDQo+IHRoZQ0KPiA+
ICAJICogb3B0aW1hbCB3YXRlcm1hcmtzIG9uIHBsYXRmb3JtcyB0aGF0IG5lZWQgdHdvLXN0ZXAg
d2F0ZXJtYXJrDQo+IGRpZmYNCj4gPiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheV90eXBlcy5oDQo+ID4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiA+IGluZGV4IDQwMzkwZDg1NTgxNS4uNjlkYTRl
YzQ1NjkxIDEwMDY0NA0KPiA+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV90eXBlcy5oDQo+ID4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgNCj4gPiBAQCAtOTkxLDYgKzk5MSw5IEBAIHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlIHsNCj4gPg0KPiA+ICAJLyogRm9yd2FyZCBFcnJvciBjb3JyZWN0aW9u
IFN0YXRlICovDQo+ID4gIAlib29sIGZlY19lbmFibGU7DQo+ID4gKw0KPiA+ICsJLyogZnJhbWUg
dXBkYXRlIGZvciBkc2kgY29tbWFuZCBtb2RlICovDQo+ID4gKwlib29sIGRzaV9mcmFtZV91cGRh
dGU7DQo+ID4gIH07DQo+ID4NCj4gPiAgc3RydWN0IGludGVsX2NydGMgew0KPiA+IGRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaS5oDQo+ID4gYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaS5oDQo+ID4gaW5kZXggMDcxZGFkN2Vl
MDRhLi5kOTM1MGI4NDIxMTUgMTAwNjQ0DQo+ID4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kc2kuaA0KPiA+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZHNpLmgNCj4gPiBAQCAtMjAzLDYgKzIwMyw5IEBAIHZvaWQgYnh0X2RzaV9yZXNl
dF9jbG9ja3Moc3RydWN0IGludGVsX2VuY29kZXINCj4gPiAqZW5jb2RlciwgZW51bSBwb3J0IHBv
cnQpOw0KPiA+DQo+ID4gIC8qIGljbF9kc2kuYyAqLw0KPiA+ICBzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZ2VuMTFfZHNpX2ZpbmRfY21kX21vZGVfZW5jb2RlcihzdHJ1Y3QNCj4gPiBpbnRlbF9jcnRj
ICpjcnRjKTsNCj4gPiArdm9pZCBnZW4xMV9kc2lfY2hlY2tfZnJhbWVfdXBkYXRlX25lZWRlZChz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywNCj4gPiArCQkJCQkgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpOw0KPiB2b2lkDQo+ID4gK2dlbjExX2RzaV9mcmFtZV91cGRhdGUoc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOw0KPiA+DQo+ID4gIC8qIGludGVsX2Rz
aV92YnQuYyAqLw0KPiA+ICBib29sIGludGVsX2RzaV92YnRfaW5pdChzdHJ1Y3QgaW50ZWxfZHNp
ICppbnRlbF9kc2ksIHUxNiBwYW5lbF9pZCk7DQo+ID4gLS0NCj4gPiAyLjIxLjAuNS5nYWViNTgy
YQ0KPiA+DQo+ID4gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18NCj4gPiBJbnRlbC1nZnggbWFpbGluZyBsaXN0DQo+ID4gSW50ZWwtZ2Z4QGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZw0KPiA+IGh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vaW50ZWwtZ2Z4DQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZng=

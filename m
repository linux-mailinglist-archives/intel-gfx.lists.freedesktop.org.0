Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8C09F265DE6
	for <lists+intel-gfx@lfdr.de>; Fri, 11 Sep 2020 12:31:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7E9FD6E9FC;
	Fri, 11 Sep 2020 10:31:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AE67F6E9FC;
 Fri, 11 Sep 2020 10:31:13 +0000 (UTC)
IronPort-SDR: VfUnqrnR4Bi/rr/NmWePchV0Bm00Urt3KJYKyl+Q5BKjp2YVXlkPHESd4Fvz4N0VrM9OQYcdfZ
 jo9NTq19uXTw==
X-IronPort-AV: E=McAfee;i="6000,8403,9740"; a="146463264"
X-IronPort-AV: E=Sophos;i="5.76,414,1592895600"; d="scan'208";a="146463264"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 11 Sep 2020 03:31:13 -0700
IronPort-SDR: ixYrhW6qjd2Ytg3OlR54NuTg0KI1s2+EVza7kYxTMA6/nH7dcew4KVwMPLamKlNPsJugOdZdu6
 vslbADg9/ZHQ==
X-IronPort-AV: E=Sophos;i="5.76,414,1592895600"; d="scan'208";a="334474773"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 11 Sep 2020 03:31:11 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: igt-dev@lists.freedesktop.org
Date: Fri, 11 Sep 2020 12:30:26 +0200
Message-Id: <20200911103039.4574-12-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200911103039.4574-1-janusz.krzysztofik@linux.intel.com>
References: <20200911103039.4574-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v6 11/24] tests/core_hotunplug: Recover
 from subtest failures
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Micha=C5=82=20Winiarski?= <michal.winiarski@intel.com>,
 intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3VidGVzdHMgbm93IGZvcmNpYmx5IGNhbGwgb3IgcmVxdWVzdCBpZ3RfYWJvcnQgb24gZmFpbHVy
ZXMgaW4gb3JkZXIgdG8KYXZvaWQgc2lsZW50bHkgbGVhdmluZyBhbiBleGVyY2lzZWQgZGV2aWNl
IGluIGFuIHVudXNhYmxlIHN0YXRlLgpIb3dldmVyLCBhIGZhaWx1cmUgaW5zaWRlIGEgc3VidGVz
dCBkb2Vzbid0IGFsd2F5cyBtZWFuIHRoZSBkZXZpY2UgaXMKbm8gbG9uZ2VyIHdvcmtpbmcgY29y
cmVjdGx5IGFuZCByZWJvb3QgaXMgbmVlZGVkLiAgT24gdGhlIG90aGVyIGhhbmQsCmlmIGEgc3Vi
dGVzdCBqdXN0IGZhaWxzIHdpdGhvdXQgYWJvcnRpbmcsIHRoYXQgZG9lc24ndCBtZWFuIGluIHR1
cm4gdGhlCmRldmljZSBpcyBoZWFsdGh5LiAgV2Ugc2hvdWxkIHN0aWxsIHBlcmZvcm0gYSBkZXZp
Y2UgaGVhbHRoIGNoZWNrCmluIHRoYXQgY2FzZSBiZWZvcmUgZGVjaWRpbmcgb24gbmV4dCBzdGVw
cy4KClJldXNlIHRoZSAnZmFpbHVyZScgc3RydWN0dXJlIGZpZWxkIGFzIGEgbWFyayB3aGljaCBp
cyBzZXQgYmVmb3JlIGVhY2gKY3JpdGljYWwgb3BlcmF0aW9uIGlzIGV4ZWN1dGVkIHRoYXQgbXVz
dCBiZSBmb2xsb3dlZCBieSBhIHN1Y2Nlc3NmdWwKaGVhbHRoIGNoZWNrIGluIG9yZGVyIHRvIGF2
b2lkIGFib3J0aW5nIHRoZSB0ZXN0LiAgVGhlbiwgZm9sbG93IGVhY2gKc3VidGVzdCB3aXRoIGl0
cyBpbmRpdmlkdWFsIGlndF9maXh0dXJlIHNlY3Rpb24sIGZyb20gd2hlcmUgZGV2aWNlIGZpbGUK
ZGVzY3JpcHRvcnMgcG90ZW50aWFsbHkgbGVmdCBvcGVuIGFyZSBjbG9zZWQsIGRldmljZSByZWRp
c2NvdmVyIG9yCmRyaXZlciByZWJpbmcgb3BlcmF0aW9uIGlzIHJ1biBhcyBuZWVkZWQsIGFuZCBm
aW5hbGx5IHRoZSBoZWFsdGggY2hlY2sKaXMgcnVuIGFnYWluIGlmIHRoZSBwcmVjZWRpbmcgaWd0
X3N1YnRlc3Qgc2VjdGlvbiBoYXMgZXhpdGVkIHdpdGggdGhlCm1hcmtlciBzZXQuCgp2MjogU3Rh
cnQgZWFjaCByZWNvdmVyeSBwaGFzZSBmcm9tIHVuY29uZGl0aW9uYWxseSBjbG9zaW5nIGZpbGUK
ICAgIGRlc2NyaXB0b3JzIHBvdGVudGlhbGx5IGxlZnQgb3BlbiBieSBhIHN1YnRlc3QgYmVmb3Jl
IGl0IGVudGVyZWQKICAgIGl0cyBjcml0aWNhbCBzZWN0aW9uLAogIC0gcmVwbGFjZSBpZ3RfcmVx
dWlyZSgpIHdpdGggJ2lmKCkgcmV0dXJuOycgY29uc3RydWN0IGluIHJlY292ZXIoKSB0bwogICAg
cmVkdWNlIG5vaXNlLAogIC0gcmVwbGFjZSAic3VidGVzdCBmYWlsdXJlIiBtZXNzYWdlIHVzZWQg
YXMgYSByZXF1ZXN0IGZvciBoZWFsdGhjaGVjawogICAgd2l0aCBhIG1vcmUgYXBwcm9wcmlhdGUg
Im5lZWQgaGVhbHRoY2hlY2siIGZvciBjbGFyaXR5LAogIC0gcmViYXNlIG9uIGN1cnJlbnQgdXBz
dHJlYW0gbWFzdGVyLgp2MzogUmVmcmVzaCwKICAtIG1vdmUgYnVzX3Jlc2NhbigpIGFuZCBkcml2
ZXJfYmluZCgpIGZ1bmN0aW9uIGNhbGxzIGJhY2sgZnJvbQogICAgaGVhYWx0aGNoZWNrKCkgdG8g
cmVjb3ZlcigpIHNvIGEgcHVyZSBoZWFsdGggY2hlY2sgY2FuIHN0aWxsIGJlCiAgICBjYWxsZWQg
ZnJvbSBhIHN1YnRlc3QgaWYgZXNzZW50aWFsLAogIC0gbW92ZSBmYWlsdXJlIG1hcmsgYXNzaWdu
bWVudHMgYmFjayBmcm9tIHN1YnRlc3RzIHRvIGhlbHBlcnMgZm9yCiAgICBtb3JlIGFkZXF1YXRl
IGFib3J0IHJlYXNvbiByZXBvcnRpbmcgYnV0IGNsZWFuIHRoZSBtYXJrIG9ubHkgb24KICAgIGhl
YWx0aCBjaGVjayBzdWNjZXNzLAogIC0gY2FsbCBjbGVhbnVwKCkgYWxzbyBmcm9tIHBvc3RfaGVh
bHRoY2hlY2soKSBpbiBvcmRlciB0byBjbG9zZSBhCiAgICBkZXZpY2UgZmlsZSBkZXNjcmlwdG9y
IHBvdGVudGlhbGx5IGxlZnQgb3BlbiBieSBhIGZhaWxlZCBoZWFsdGgKICAgIGNoZWNrLAogIC0g
cmV3b3JkIGNvbW1pdCBtZXNzYWdlIGFuZCB1cGRhdGUgZGVzY3JpcHRpb24uCnY0OiBDbG9zZSBl
eGVyY2lzZWQgZGV2aWNlIGZkIGJlZm9yZSBmYWlsaW5nIGEgaGVhbHRoIGNoZWNrIHJ1biwKICAt
IGRvbid0IGRyb3AgaGVhbHRoIGNoZWNrcyBmcm9tIHN1YnRlc3QgYm9kaWVzLCB0aGVpciByZXN1
bHRzIHNob3VsZAogICAgYWx3YXlzIG1hdHRlci4KdjU6IFJlZnJlc2guCgpTaWduZWQtb2ZmLWJ5
OiBKYW51c3ogS3J6eXN6dG9maWsgPGphbnVzei5rcnp5c3p0b2Zpa0BsaW51eC5pbnRlbC5jb20+
ClJldmlld2VkLWJ5OiBNaWNoYcWCIFdpbmlhcnNraSA8bWljaGFsLndpbmlhcnNraUBpbnRlbC5j
b20+ICMgdjEKLS0tCiB0ZXN0cy9jb3JlX2hvdHVucGx1Zy5jIHwgMTAwICsrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNzQgaW5zZXJ0aW9u
cygrKSwgMjYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvdGVzdHMvY29yZV9ob3R1bnBsdWcu
YyBiL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKaW5kZXggZDUxNTI2MDI5Li43ZmM2ZGY2ODggMTAw
NjQ0Ci0tLSBhL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKKysrIGIvdGVzdHMvY29yZV9ob3R1bnBs
dWcuYwpAQCAtNzgsMTIgKzc4LDE4IEBAIHN0YXRpYyBpbnQgbG9jYWxfY2xvc2UoaW50IGZkLCBj
b25zdCBjaGFyICp3YXJuaW5nKQogCiBzdGF0aWMgaW50IGNsb3NlX2RldmljZShpbnQgZmRfZHJt
LCBjb25zdCBjaGFyICp3aGVuLCBjb25zdCBjaGFyICp3aGljaCkKIHsKKwlpZiAoZmRfZHJtIDwg
MCkJLyogbm90IG9wZW4gLSByZXR1cm4gY3VycmVudCBzdGF0dXMgKi8KKwkJcmV0dXJuIGZkX2Ry
bTsKKwogCWlndF9kZWJ1ZygiJXNjbG9zaW5nICVzZGV2aWNlIGluc3RhbmNlXG4iLCB3aGVuLCB3
aGljaCk7CiAJcmV0dXJuIGxvY2FsX2Nsb3NlKGZkX2RybSwgIkRldmljZSBjbG9zZSBmYWlsZWQi
KTsKIH0KIAogc3RhdGljIGludCBjbG9zZV9zeXNmcyhpbnQgZmRfc3lzZnNfZGV2KQogeworCWlm
IChmZF9zeXNmc19kZXYgPCAwKQkvKiBub3Qgb3BlbiAtIHJldHVybiBjdXJyZW50IHN0YXR1cyAq
LworCQlyZXR1cm4gZmRfc3lzZnNfZGV2OworCiAJcmV0dXJuIGxvY2FsX2Nsb3NlKGZkX3N5c2Zz
X2RldiwgIkRldmljZSBzeXNmcyBub2RlIGNsb3NlIGZhaWxlZCIpOwogfQogCkBAIC0xMTcsMjQg
KzEyMywyMiBAQCBzdGF0aWMgdm9pZCBwcmVwYXJlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiBz
dGF0aWMgdm9pZCBkcml2ZXJfdW5iaW5kKHN0cnVjdCBob3R1bnBsdWcgKnByaXYsIGNvbnN0IGNo
YXIgKnByZWZpeCkKIHsKIAlpZ3RfZGVidWcoIiVzdW5iaW5kaW5nIHRoZSBkcml2ZXIgZnJvbSB0
aGUgZGV2aWNlXG4iLCBwcmVmaXgpOworCXByaXYtPmZhaWx1cmUgPSAiRHJpdmVyIHVuYmluZCBm
YWlsdXJlISI7CiAKLQlwcml2LT5mYWlsdXJlID0gIkRyaXZlciB1bmJpbmQgdGltZW91dCEiOwot
CWlndF9zZXRfdGltZW91dCg2MCwgcHJpdi0+ZmFpbHVyZSk7CisJaWd0X3NldF90aW1lb3V0KDYw
LCAiRHJpdmVyIHVuYmluZCB0aW1lb3V0ISIpOwogCWlndF9zeXNmc19zZXQocHJpdi0+ZmQuc3lz
ZnNfZHJ2LCAidW5iaW5kIiwgcHJpdi0+ZGV2X2J1c19hZGRyKTsKIAlpZ3RfcmVzZXRfdGltZW91
dCgpOwotCXByaXYtPmZhaWx1cmUgPSBOVUxMOwogfQogCiAvKiBSZS1iaW5kIHRoZSBkcml2ZXIg
dG8gdGhlIGRldmljZSAqLwogc3RhdGljIHZvaWQgZHJpdmVyX2JpbmQoc3RydWN0IGhvdHVucGx1
ZyAqcHJpdikKIHsKIAlpZ3RfZGVidWcoInJlYmluZGluZyB0aGUgZHJpdmVyIHRvIHRoZSBkZXZp
Y2VcbiIpOworCXByaXYtPmZhaWx1cmUgPSAiRHJpdmVyIHJlLWJpbmQgZmFpbHVyZSEiOwogCi0J
cHJpdi0+ZmFpbHVyZSA9ICJEcml2ZXIgcmUtYmluZCB0aW1lb3V0ISI7Ci0JaWd0X3NldF90aW1l
b3V0KDYwLCBwcml2LT5mYWlsdXJlKTsKKwlpZ3Rfc2V0X3RpbWVvdXQoNjAsICJEcml2ZXIgcmUt
YmluZCB0aW1lb3V0ISIpOwogCWlndF9zeXNmc19zZXQocHJpdi0+ZmQuc3lzZnNfZHJ2LCAiYmlu
ZCIsIHByaXYtPmRldl9idXNfYWRkcik7CiAJaWd0X3Jlc2V0X3RpbWVvdXQoKTsKLQlwcml2LT5m
YWlsdXJlID0gTlVMTDsKIH0KIAogLyogUmVtb3ZlICh2aXJ0dWFsbHkgdW5wbHVnKSB0aGUgZGV2
aWNlIGZyb20gaXRzIGJ1cyAqLwpAQCAtMTQ3LDEyICsxNTEsMTEgQEAgc3RhdGljIHZvaWQgZGV2
aWNlX3VucGx1ZyhzdHJ1Y3QgaG90dW5wbHVnICpwcml2LCBjb25zdCBjaGFyICpwcmVmaXgpCiAJ
aWd0X2Fzc2VydF9mZChwcml2LT5mZC5zeXNmc19kZXYpOwogCiAJaWd0X2RlYnVnKCIlc3VucGx1
Z2dpbmcgdGhlIGRldmljZVxuIiwgcHJlZml4KTsKKwlwcml2LT5mYWlsdXJlID0gIkRldmljZSB1
bnBsdWcgZmFpbHVyZSEiOwogCi0JcHJpdi0+ZmFpbHVyZSA9ICJEZXZpY2UgdW5wbHVnIHRpbWVv
dXQhIjsKLQlpZ3Rfc2V0X3RpbWVvdXQoNjAsIHByaXYtPmZhaWx1cmUpOworCWlndF9zZXRfdGlt
ZW91dCg2MCwgIkRldmljZSB1bnBsdWcgdGltZW91dCEiKTsKIAlpZ3Rfc3lzZnNfc2V0KHByaXYt
PmZkLnN5c2ZzX2RldiwgInJlbW92ZSIsICIxIik7CiAJaWd0X3Jlc2V0X3RpbWVvdXQoKTsKLQlw
cml2LT5mYWlsdXJlID0gTlVMTDsKIAogCXByaXYtPmZkLnN5c2ZzX2RldiA9IGNsb3NlX3N5c2Zz
KHByaXYtPmZkLnN5c2ZzX2Rldik7CiB9CkBAIC0xNjEsMTIgKzE2NCwxNyBAQCBzdGF0aWMgdm9p
ZCBkZXZpY2VfdW5wbHVnKHN0cnVjdCBob3R1bnBsdWcgKnByaXYsIGNvbnN0IGNoYXIgKnByZWZp
eCkKIHN0YXRpYyB2b2lkIGJ1c19yZXNjYW4oc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIHsKIAlp
Z3RfZGVidWcoInJlZGlzY292ZXJpbmcgdGhlIGRldmljZVxuIik7CisJcHJpdi0+ZmFpbHVyZSA9
ICJCdXMgcmVzY2FuIGZhaWx1cmUhIjsKIAotCXByaXYtPmZhaWx1cmUgPSAiQnVzIHJlc2NhbiB0
aW1lb3V0ISI7Ci0JaWd0X3NldF90aW1lb3V0KDYwLCBwcml2LT5mYWlsdXJlKTsKKwlpZ3Rfc2V0
X3RpbWVvdXQoNjAsICJCdXMgcmVzY2FuIHRpbWVvdXQhIik7CiAJaWd0X3N5c2ZzX3NldChwcml2
LT5mZC5zeXNmc19idXMsICIuLi9yZXNjYW4iLCAiMSIpOwogCWlndF9yZXNldF90aW1lb3V0KCk7
Ci0JcHJpdi0+ZmFpbHVyZSA9IE5VTEw7Cit9CisKK3N0YXRpYyB2b2lkIGNsZWFudXAoc3RydWN0
IGhvdHVucGx1ZyAqcHJpdikKK3sKKwlwcml2LT5mZC5kcm0gPSBjbG9zZV9kZXZpY2UocHJpdi0+
ZmQuZHJtLCAicG9zdCAiLCAiZmFpbGVkICIpOworCXByaXYtPmZkLnN5c2ZzX2RldiA9IGNsb3Nl
X3N5c2ZzKHByaXYtPmZkLnN5c2ZzX2Rldik7CiB9CiAKIHN0YXRpYyB2b2lkIGhlYWx0aGNoZWNr
KHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCkBAIC0xODAsMjUgKzE4OCw0NSBAQCBzdGF0aWMgdm9p
ZCBoZWFsdGhjaGVjayhzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogCiAJcHJpdi0+ZmFpbHVyZSA9
ICJEZXZpY2UgcmVvcGVuIGZhaWx1cmUhIjsKIAlmZF9kcm0gPSBsb2NhbF9kcm1fb3Blbl9kcml2
ZXIoInJlIiwgIiBmb3IgaGVhbHRoIGNoZWNrIik7Ci0JaWYgKGNsb3NlZCkJLyogc3RvcmUgZmQg
Zm9yIHBvc3RfaGVhbHRoY2hlY2sgaWYgbm90IGRpcnR5ICovCisJaWYgKGNsb3NlZCkJLyogc3Rv
cmUgZmQgZm9yIGNsZWFudXAgaWYgbm90IGRpcnR5ICovCiAJCXByaXYtPmZkLmRybSA9IGZkX2Ry
bTsKLQlwcml2LT5mYWlsdXJlID0gTlVMTDsKIAogCWlmIChpc19pOTE1X2RldmljZShmZF9kcm0p
KSB7CiAJCXByaXYtPmZhaWx1cmUgPSAiR0VNIGZhaWx1cmUiOwogCQlpZ3RfcmVxdWlyZV9nZW0o
ZmRfZHJtKTsKIAkJcHJpdi0+ZmFpbHVyZSA9IE5VTEw7CisJfSBlbHNlIHsKKwkJLyogbm8gZGV2
aWNlIHNwZWNpZmljIGhlYWx0aGNoZWNrLCByZWx5IG9uIHJlb3BlbiByZXN1bHQgKi8KKwkJcHJp
di0+ZmFpbHVyZSA9IE5VTEw7CiAJfQogCiAJZmRfZHJtID0gY2xvc2VfZGV2aWNlKGZkX2RybSwg
IiIsICJoZWFsdGggY2hlY2tlZCAiKTsKIAlpZiAoY2xvc2VkIHx8IGZkX2RybSA8IC0xKQkvKiB1
cGRhdGUgc3RhdHVzIGZvciBwb3N0X2hlYWx0aGNoZWNrICovCiAJCXByaXYtPmZkLmRybSA9IGZk
X2RybTsKKworCS8qIG5vdCBvbmx5IHJlcXVlc3QgaWd0X2Fib3J0IG9uIGZhaWx1cmUsIGFsc28g
ZmFpbCB0aGUgaGVhbHRoIGNoZWNrICovCisJaWd0X2ZhaWxfb25fZihwcml2LT5mYWlsdXJlLCAi
JXNcbiIsIHByaXYtPmZhaWx1cmUpOworfQorCitzdGF0aWMgdm9pZCByZWNvdmVyKHN0cnVjdCBo
b3R1bnBsdWcgKnByaXYpCit7CisJY2xlYW51cChwcml2KTsKKworCWlmIChmYWNjZXNzYXQocHJp
di0+ZmQuc3lzZnNfYnVzLCBwcml2LT5kZXZfYnVzX2FkZHIsIEZfT0ssIDApKQorCQlidXNfcmVz
Y2FuKHByaXYpOworCisJZWxzZSBpZiAoZmFjY2Vzc2F0KHByaXYtPmZkLnN5c2ZzX2RydiwgcHJp
di0+ZGV2X2J1c19hZGRyLCBGX09LLCAwKSkKKwkJZHJpdmVyX2JpbmQocHJpdik7CisKKwlpZiAo
cHJpdi0+ZmFpbHVyZSkKKwkJaGVhbHRoY2hlY2socHJpdik7CiB9CiAKIHN0YXRpYyB2b2lkIHBv
c3RfaGVhbHRoY2hlY2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIHsKIAlpZ3RfYWJvcnRfb25f
Zihwcml2LT5mYWlsdXJlLCAiJXNcbiIsIHByaXYtPmZhaWx1cmUpOwogCisJY2xlYW51cChwcml2
KTsKIAlpZ3RfcmVxdWlyZShwcml2LT5mZC5kcm0gPT0gLTEpOwogfQogCkBAIC0yOTcsMzAgKzMy
NSw1MCBAQCBpZ3RfbWFpbgogCQlwcmVwYXJlKCZwcml2KTsKIAl9CiAKLQlpZ3RfZGVzY3JpYmUo
IkNoZWNrIGlmIHRoZSBkcml2ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgZGV2aWNl
IGJlbGlldmVkIHRvIGJlIGNsb3NlZCIpOwotCWlndF9zdWJ0ZXN0KCJ1bmJpbmQtcmViaW5kIikK
LQkJdW5iaW5kX3JlYmluZCgmcHJpdik7CisJaWd0X3N1YnRlc3RfZ3JvdXAgeworCQlpZ3RfZGVz
Y3JpYmUoIkNoZWNrIGlmIHRoZSBkcml2ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEg
ZGV2aWNlIGJlbGlldmVkIHRvIGJlIGNsb3NlZCIpOworCQlpZ3Rfc3VidGVzdCgidW5iaW5kLXJl
YmluZCIpCisJCQl1bmJpbmRfcmViaW5kKCZwcml2KTsKKworCQlpZ3RfZml4dHVyZQorCQkJcmVj
b3ZlcigmcHJpdik7CisJfQogCiAJaWd0X2ZpeHR1cmUKIAkJcG9zdF9oZWFsdGhjaGVjaygmcHJp
dik7CiAKLQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIGEgZGV2aWNlIGJlbGlldmVkIHRvIGJlIGNs
b3NlZCBjYW4gYmUgY2xlYW5seSB1bnBsdWdnZWQiKTsKLQlpZ3Rfc3VidGVzdCgidW5wbHVnLXJl
c2NhbiIpCi0JCXVucGx1Z19yZXNjYW4oJnByaXYpOworCWlndF9zdWJ0ZXN0X2dyb3VwIHsKKwkJ
aWd0X2Rlc2NyaWJlKCJDaGVjayBpZiBhIGRldmljZSBiZWxpZXZlZCB0byBiZSBjbG9zZWQgY2Fu
IGJlIGNsZWFubHkgdW5wbHVnZ2VkIik7CisJCWlndF9zdWJ0ZXN0KCJ1bnBsdWctcmVzY2FuIikK
KwkJCXVucGx1Z19yZXNjYW4oJnByaXYpOworCisJCWlndF9maXh0dXJlCisJCQlyZWNvdmVyKCZw
cml2KTsKKwl9CiAKIAlpZ3RfZml4dHVyZQogCQlwb3N0X2hlYWx0aGNoZWNrKCZwcml2KTsKIAot
CWlndF9kZXNjcmliZSgiQ2hlY2sgaWYgdGhlIGRyaXZlciBjYW4gYmUgY2xlYW5seSB1bmJvdW5k
IGZyb20gYSBzdGlsbCBvcGVuIGRldmljZSwgdGhlbiByZWxlYXNlZCIpOwotCWlndF9zdWJ0ZXN0
KCJob3R1bmJpbmQtbGF0ZWNsb3NlIikKLQkJaG90dW5iaW5kX2xhdGVjbG9zZSgmcHJpdik7CisJ
aWd0X3N1YnRlc3RfZ3JvdXAgeworCQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIHRoZSBkcml2ZXIg
Y2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgc3RpbGwgb3BlbiBkZXZpY2UsIHRoZW4gcmVs
ZWFzZWQiKTsKKwkJaWd0X3N1YnRlc3QoImhvdHVuYmluZC1sYXRlY2xvc2UiKQorCQkJaG90dW5i
aW5kX2xhdGVjbG9zZSgmcHJpdik7CisKKwkJaWd0X2ZpeHR1cmUKKwkJCXJlY292ZXIoJnByaXYp
OworCX0KIAogCWlndF9maXh0dXJlCiAJCXBvc3RfaGVhbHRoY2hlY2soJnByaXYpOwogCi0JaWd0
X2Rlc2NyaWJlKCJDaGVjayBpZiBhIHN0aWxsIG9wZW4gZGV2aWNlIGNhbiBiZSBjbGVhbmx5IHVu
cGx1Z2dlZCwgdGhlbiByZWxlYXNlZCIpOwotCWlndF9zdWJ0ZXN0KCJob3R1bnBsdWctbGF0ZWNs
b3NlIikKLQkJaG90dW5wbHVnX2xhdGVjbG9zZSgmcHJpdik7CisJaWd0X3N1YnRlc3RfZ3JvdXAg
eworCQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIGEgc3RpbGwgb3BlbiBkZXZpY2UgY2FuIGJlIGNs
ZWFubHkgdW5wbHVnZ2VkLCB0aGVuIHJlbGVhc2VkIik7CisJCWlndF9zdWJ0ZXN0KCJob3R1bnBs
dWctbGF0ZWNsb3NlIikKKwkJCWhvdHVucGx1Z19sYXRlY2xvc2UoJnByaXYpOworCisJCWlndF9m
aXh0dXJlCisJCQlyZWNvdmVyKCZwcml2KTsKKwl9CiAKIAlpZ3RfZml4dHVyZSB7CiAJCXBvc3Rf
aGVhbHRoY2hlY2soJnByaXYpOwotLSAKMi4yMS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DD8D6181CF3
	for <lists+intel-gfx@lfdr.de>; Wed, 11 Mar 2020 16:54:34 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 972CA6E9AB;
	Wed, 11 Mar 2020 15:54:32 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9FBFF6E9AC
 for <intel-gfx@lists.freedesktop.org>; Wed, 11 Mar 2020 15:54:30 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 11 Mar 2020 08:54:30 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,541,1574150400"; d="scan'208";a="353911014"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga001.fm.intel.com with SMTP; 11 Mar 2020 08:54:28 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 11 Mar 2020 17:54:27 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 11 Mar 2020 17:54:21 +0200
Message-Id: <20200311155422.3043-3-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200311155422.3043-1-ville.syrjala@linux.intel.com>
References: <20200311155422.3043-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 2/3] drm/i915: Stash hpd status bits under
 dev_priv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCklu
c3RlYWQgb2YgY29uc3RuYW50bHkgaGF2aW5nIHRvIGZpZ3VyZSBvdXQgd2hpY2ggaHBkIHN0YXR1
cyBiaXQKYXJyYXkgdG8gdXNlIGxldCdzIHN0b3JlIHRoZW0gdW5kZXIgZGV2X3ByaXYuCgpTaG91
bGQgcGVyaGFwcyB0YWtlIHRoaXMgZnVydGhlciBhbmQgc3Rhc2ggZXZlbiBtb3JlIHN0dWZmIHRv
Cm1ha2UgdGhlIGhwZCBoYW5kbGluZyBtb3JlIGFic3RyYWN0IHlldC4KClNpZ25lZC1vZmYtYnk6
IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCB8ICAgMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2lycS5jIHwgMTk4ICsrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tCiAyIGZp
bGVzIGNoYW5nZWQsIDExMSBpbnNlcnRpb25zKCspLCA4OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuaAppbmRleCAxOTE5NWJkZTQ5MjEuLmI1YWZiYWJmNGMzYiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oCkBAIC0xNDksNiArMTQ5LDggQEAgZW51bSBocGRfcGluIHsKIHN0cnVj
dCBpOTE1X2hvdHBsdWcgewogCXN0cnVjdCBkZWxheWVkX3dvcmsgaG90cGx1Z193b3JrOwogCisJ
Y29uc3QgdTMyICpocGQsICpwY2hfaHBkOworCiAJc3RydWN0IHsKIAkJdW5zaWduZWQgbG9uZyBs
YXN0X2ppZmZpZXM7CiAJCWludCBjb3VudDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfaXJxLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jCmluZGV4IDlm
MDY1M2NmMDUxMC4uYjk1ZDk1MmJkNDdkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2lycS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKQEAgLTEy
NCw3ICsxMjQsNiBAQCBzdGF0aWMgY29uc3QgdTMyIGhwZF9zdGF0dXNfaTkxNVtIUERfTlVNX1BJ
TlNdID0gewogCVtIUERfUE9SVF9EXSA9IFBPUlREX0hPVFBMVUdfSU5UX1NUQVRVUywKIH07CiAK
LS8qIEJYVCBocGQgbGlzdCAqLwogc3RhdGljIGNvbnN0IHUzMiBocGRfYnh0W0hQRF9OVU1fUElO
U10gPSB7CiAJW0hQRF9QT1JUX0FdID0gQlhUX0RFX1BPUlRfSFBfRERJQSwKIAlbSFBEX1BPUlRf
Ql0gPSBCWFRfREVfUE9SVF9IUF9ERElCLApAQCAtMTY4LDYgKzE2Nyw0NCBAQCBzdGF0aWMgY29u
c3QgdTMyIGhwZF90Z3BbSFBEX05VTV9QSU5TXSA9IHsKIAlbSFBEX1BPUlRfSV0gPSBTREVfVENf
SE9UUExVR19JQ1AoUE9SVF9UQzYpLAogfTsKIAorc3RhdGljIHZvaWQgaW50ZWxfaHBkX2luaXRf
cGlucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCit7CisJc3RydWN0IGk5MTVf
aG90cGx1ZyAqaHBkID0gJmRldl9wcml2LT5ob3RwbHVnOworCisJaWYgKEhBU19HTUNIKGRldl9w
cml2KSkgeworCQlpZiAoSVNfRzRYKGRldl9wcml2KSB8fCBJU19WQUxMRVlWSUVXKGRldl9wcml2
KSB8fAorCQkgICAgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCisJCQlocGQtPmhwZCA9IGhwZF9z
dGF0dXNfZzR4OworCQllbHNlCisJCQlocGQtPmhwZCA9IGhwZF9zdGF0dXNfaTkxNTsKKwkJcmV0
dXJuOworCX0KKworCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKQorCQlocGQtPmhwZCA9
IGhwZF9nZW4xMjsKKwllbHNlIGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExKQorCQlocGQt
PmhwZCA9IGhwZF9nZW4xMTsKKwllbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2KSkKKwkJaHBk
LT5ocGQgPSBocGRfYnh0OworCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKKwkJ
aHBkLT5ocGQgPSBocGRfYmR3OworCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gNykK
KwkJaHBkLT5ocGQgPSBocGRfaXZiOworCWVsc2UKKwkJaHBkLT5ocGQgPSBocGRfaWxrOworCisJ
aWYgKEhBU19QQ0hfVEdQKGRldl9wcml2KSB8fCBIQVNfUENIX0pTUChkZXZfcHJpdikpCisJCWhw
ZC0+cGNoX2hwZCA9IGhwZF90Z3A7CisJZWxzZSBpZiAoSEFTX1BDSF9JQ1AoZGV2X3ByaXYpIHx8
IEhBU19QQ0hfTUNDKGRldl9wcml2KSkKKwkJaHBkLT5wY2hfaHBkID0gaHBkX2ljcDsKKwllbHNl
IGlmIChIQVNfUENIX1NQVChkZXZfcHJpdikpCisJCWhwZC0+cGNoX2hwZCA9IGhwZF9zcHQ7CisJ
ZWxzZSBpZiAoSEFTX1BDSF9MUFQoZGV2X3ByaXYpIHx8IEhBU19QQ0hfQ1BUKGRldl9wcml2KSkK
KwkJaHBkLT5wY2hfaHBkID0gaHBkX2NwdDsKKwllbHNlIGlmIChIQVNfUENIX0lCWChkZXZfcHJp
dikpCisJCWhwZC0+cGNoX2hwZCA9IGhwZF9pYng7Cit9CisKIHN0YXRpYyB2b2lkCiBpbnRlbF9o
YW5kbGVfdmJsYW5rKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaXBl
IHBpcGUpCiB7CkBAIC0xNTA0LDMzICsxNTQxLDI3IEBAIHN0YXRpYyB2b2lkIGk5eHhfaHBkX2ly
cV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgdTMyIGhv
dHBsdWdfc3RhdHVzKQogewogCXUzMiBwaW5fbWFzayA9IDAsIGxvbmdfbWFzayA9IDA7CisJdTMy
IGhvdHBsdWdfdHJpZ2dlcjsKIAotCWlmIChJU19HNFgoZGV2X3ByaXYpIHx8IElTX1ZBTExFWVZJ
RVcoZGV2X3ByaXYpIHx8Ci0JICAgIElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSB7Ci0JCXUzMiBo
b3RwbHVnX3RyaWdnZXIgPSBob3RwbHVnX3N0YXR1cyAmIEhPVFBMVUdfSU5UX1NUQVRVU19HNFg7
CisJaWYgKElTX0c0WChkZXZfcHJpdikgfHwKKwkgICAgSVNfVkFMTEVZVklFVyhkZXZfcHJpdikg
fHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCisJCWhvdHBsdWdfdHJpZ2dlciA9IGhvdHBsdWdf
c3RhdHVzICYgSE9UUExVR19JTlRfU1RBVFVTX0c0WDsKKwllbHNlCisJCWhvdHBsdWdfdHJpZ2dl
ciA9IGhvdHBsdWdfc3RhdHVzICYgSE9UUExVR19JTlRfU1RBVFVTX0k5MTU7CiAKLQkJaWYgKGhv
dHBsdWdfdHJpZ2dlcikgewotCQkJaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9wcml2LCAmcGluX21h
c2ssICZsb25nX21hc2ssCi0JCQkJCSAgIGhvdHBsdWdfdHJpZ2dlciwgaG90cGx1Z190cmlnZ2Vy
LAotCQkJCQkgICBocGRfc3RhdHVzX2c0eCwKLQkJCQkJICAgaTl4eF9wb3J0X2hvdHBsdWdfbG9u
Z19kZXRlY3QpOworCWlmIChob3RwbHVnX3RyaWdnZXIpIHsKKwkJaW50ZWxfZ2V0X2hwZF9waW5z
KGRldl9wcml2LCAmcGluX21hc2ssICZsb25nX21hc2ssCisJCQkJICAgaG90cGx1Z190cmlnZ2Vy
LCBob3RwbHVnX3RyaWdnZXIsCisJCQkJICAgZGV2X3ByaXYtPmhvdHBsdWcuaHBkLAorCQkJCSAg
IGk5eHhfcG9ydF9ob3RwbHVnX2xvbmdfZGV0ZWN0KTsKIAotCQkJaW50ZWxfaHBkX2lycV9oYW5k
bGVyKGRldl9wcml2LCBwaW5fbWFzaywgbG9uZ19tYXNrKTsKLQkJfQotCi0JCWlmIChob3RwbHVn
X3N0YXR1cyAmIERQX0FVWF9DSEFOTkVMX01BU0tfSU5UX1NUQVRVU19HNFgpCi0JCQlkcF9hdXhf
aXJxX2hhbmRsZXIoZGV2X3ByaXYpOwotCX0gZWxzZSB7Ci0JCXUzMiBob3RwbHVnX3RyaWdnZXIg
PSBob3RwbHVnX3N0YXR1cyAmIEhPVFBMVUdfSU5UX1NUQVRVU19JOTE1OwotCi0JCWlmIChob3Rw
bHVnX3RyaWdnZXIpIHsKLQkJCWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwgJnBpbl9tYXNr
LCAmbG9uZ19tYXNrLAotCQkJCQkgICBob3RwbHVnX3RyaWdnZXIsIGhvdHBsdWdfdHJpZ2dlciwK
LQkJCQkJICAgaHBkX3N0YXR1c19pOTE1LAotCQkJCQkgICBpOXh4X3BvcnRfaG90cGx1Z19sb25n
X2RldGVjdCk7Ci0JCQlpbnRlbF9ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIHBpbl9tYXNrLCBs
b25nX21hc2spOwotCQl9CisJCWludGVsX2hwZF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcGluX21h
c2ssIGxvbmdfbWFzayk7CiAJfQorCisJaWYgKChJU19HNFgoZGV2X3ByaXYpIHx8CisJICAgICBJ
U19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9wcml2KSkgJiYKKwkg
ICAgaG90cGx1Z19zdGF0dXMgJiBEUF9BVVhfQ0hBTk5FTF9NQVNLX0lOVF9TVEFUVVNfRzRYKQor
CQlkcF9hdXhfaXJxX2hhbmRsZXIoZGV2X3ByaXYpOwogfQogCiBzdGF0aWMgaXJxcmV0dXJuX3Qg
dmFsbGV5dmlld19pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCkBAIC0xNjk2LDggKzE3
MjcsNyBAQCBzdGF0aWMgaXJxcmV0dXJuX3QgY2hlcnJ5dmlld19pcnFfaGFuZGxlcihpbnQgaXJx
LCB2b2lkICphcmcpCiB9CiAKIHN0YXRpYyB2b2lkIGlieF9ocGRfaXJxX2hhbmRsZXIoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCXUzMiBob3RwbHVnX3RyaWdnZXIsCi0J
CQkJY29uc3QgdTMyIGhwZFtIUERfTlVNX1BJTlNdKQorCQkJCXUzMiBob3RwbHVnX3RyaWdnZXIp
CiB7CiAJdTMyIGRpZ19ob3RwbHVnX3JlZywgcGluX21hc2sgPSAwLCBsb25nX21hc2sgPSAwOwog
CkBAIC0xNzIwLDggKzE3NTAsOSBAQCBzdGF0aWMgdm9pZCBpYnhfaHBkX2lycV9oYW5kbGVyKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlpZiAoIWhvdHBsdWdfdHJpZ2dlcikK
IAkJcmV0dXJuOwogCi0JaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9wcml2LCAmcGluX21hc2ssICZs
b25nX21hc2ssIGhvdHBsdWdfdHJpZ2dlciwKLQkJCSAgIGRpZ19ob3RwbHVnX3JlZywgaHBkLAor
CWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwgJnBpbl9tYXNrLCAmbG9uZ19tYXNrLAorCQkJ
ICAgaG90cGx1Z190cmlnZ2VyLCBkaWdfaG90cGx1Z19yZWcsCisJCQkgICBkZXZfcHJpdi0+aG90
cGx1Zy5wY2hfaHBkLAogCQkJICAgcGNoX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdCk7CiAKIAlp
bnRlbF9ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIHBpbl9tYXNrLCBsb25nX21hc2spOwpAQCAt
MTczMiw3ICsxNzYzLDcgQEAgc3RhdGljIHZvaWQgaWJ4X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBjaF9paXIpCiAJZW51bSBwaXBlIHBpcGU7CiAJ
dTMyIGhvdHBsdWdfdHJpZ2dlciA9IHBjaF9paXIgJiBTREVfSE9UUExVR19NQVNLOwogCi0JaWJ4
X2hwZF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgaG90cGx1Z190cmlnZ2VyLCBocGRfaWJ4KTsKKwlp
YnhfaHBkX2lycV9oYW5kbGVyKGRldl9wcml2LCBob3RwbHVnX3RyaWdnZXIpOwogCiAJaWYgKHBj
aF9paXIgJiBTREVfQVVESU9fUE9XRVJfTUFTSykgewogCQlpbnQgcG9ydCA9IGZmcygocGNoX2lp
ciAmIFNERV9BVURJT19QT1dFUl9NQVNLKSA+PgpAQCAtMTgyMCw3ICsxODUxLDcgQEAgc3RhdGlj
IHZvaWQgY3B0X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwg
dTMyIHBjaF9paXIpCiAJZW51bSBwaXBlIHBpcGU7CiAJdTMyIGhvdHBsdWdfdHJpZ2dlciA9IHBj
aF9paXIgJiBTREVfSE9UUExVR19NQVNLX0NQVDsKIAotCWlieF9ocGRfaXJxX2hhbmRsZXIoZGV2
X3ByaXYsIGhvdHBsdWdfdHJpZ2dlciwgaHBkX2NwdCk7CisJaWJ4X2hwZF9pcnFfaGFuZGxlcihk
ZXZfcHJpdiwgaG90cGx1Z190cmlnZ2VyKTsKIAogCWlmIChwY2hfaWlyICYgU0RFX0FVRElPX1BP
V0VSX01BU0tfQ1BUKSB7CiAJCWludCBwb3J0ID0gZmZzKChwY2hfaWlyICYgU0RFX0FVRElPX1BP
V0VSX01BU0tfQ1BUKSA+PgpAQCAtMTg1NywyMiArMTg4OCwxOCBAQCBzdGF0aWMgdm9pZCBpY3Bf
aXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcGNoX2lp
cikKIAl1MzIgZGRpX2hvdHBsdWdfdHJpZ2dlciwgdGNfaG90cGx1Z190cmlnZ2VyOwogCXUzMiBw
aW5fbWFzayA9IDAsIGxvbmdfbWFzayA9IDA7CiAJYm9vbCAoKnRjX3BvcnRfaG90cGx1Z19sb25n
X2RldGVjdCkoZW51bSBocGRfcGluIHBpbiwgdTMyIHZhbCk7Ci0JY29uc3QgdTMyICpwaW5zOwog
CiAJaWYgKEhBU19QQ0hfVEdQKGRldl9wcml2KSkgewogCQlkZGlfaG90cGx1Z190cmlnZ2VyID0g
cGNoX2lpciAmIFNERV9ERElfTUFTS19UR1A7CiAJCXRjX2hvdHBsdWdfdHJpZ2dlciA9IHBjaF9p
aXIgJiBTREVfVENfTUFTS19UR1A7CiAJCXRjX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdCA9IHRn
cF90Y19wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3Q7Ci0JCXBpbnMgPSBocGRfdGdwOwogCX0gZWxz
ZSBpZiAoSEFTX1BDSF9KU1AoZGV2X3ByaXYpKSB7CiAJCWRkaV9ob3RwbHVnX3RyaWdnZXIgPSBw
Y2hfaWlyICYgU0RFX0RESV9NQVNLX1RHUDsKIAkJdGNfaG90cGx1Z190cmlnZ2VyID0gMDsKLQkJ
cGlucyA9IGhwZF90Z3A7CiAJfSBlbHNlIGlmIChIQVNfUENIX01DQyhkZXZfcHJpdikpIHsKIAkJ
ZGRpX2hvdHBsdWdfdHJpZ2dlciA9IHBjaF9paXIgJiBTREVfRERJX01BU0tfSUNQOwogCQl0Y19o
b3RwbHVnX3RyaWdnZXIgPSBwY2hfaWlyICYgU0RFX1RDX0hPVFBMVUdfSUNQKFBPUlRfVEMxKTsK
IAkJdGNfcG9ydF9ob3RwbHVnX2xvbmdfZGV0ZWN0ID0gaWNwX3RjX3BvcnRfaG90cGx1Z19sb25n
X2RldGVjdDsKLQkJcGlucyA9IGhwZF9pY3A7CiAJfSBlbHNlIHsKIAkJZHJtX1dBUk4oJmRldl9w
cml2LT5kcm0sICFIQVNfUENIX0lDUChkZXZfcHJpdiksCiAJCQkgIlVucmVjb2duaXplZCBQQ0gg
dHlwZSAweCV4XG4iLApAQCAtMTg4MSw3ICsxOTA4LDYgQEAgc3RhdGljIHZvaWQgaWNwX2lycV9o
YW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBjaF9paXIpCiAJ
CWRkaV9ob3RwbHVnX3RyaWdnZXIgPSBwY2hfaWlyICYgU0RFX0RESV9NQVNLX0lDUDsKIAkJdGNf
aG90cGx1Z190cmlnZ2VyID0gcGNoX2lpciAmIFNERV9UQ19NQVNLX0lDUDsKIAkJdGNfcG9ydF9o
b3RwbHVnX2xvbmdfZGV0ZWN0ID0gaWNwX3RjX3BvcnRfaG90cGx1Z19sb25nX2RldGVjdDsKLQkJ
cGlucyA9IGhwZF9pY3A7CiAJfQogCiAJaWYgKGRkaV9ob3RwbHVnX3RyaWdnZXIpIHsKQEAgLTE4
OTEsOCArMTkxNyw4IEBAIHN0YXRpYyB2b2lkIGljcF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBwY2hfaWlyKQogCQlJOTE1X1dSSVRFKFNIT1RQTFVH
X0NUTF9EREksIGRpZ19ob3RwbHVnX3JlZyk7CiAKIAkJaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9w
cml2LCAmcGluX21hc2ssICZsb25nX21hc2ssCi0JCQkJICAgZGRpX2hvdHBsdWdfdHJpZ2dlciwK
LQkJCQkgICBkaWdfaG90cGx1Z19yZWcsIHBpbnMsCisJCQkJICAgZGRpX2hvdHBsdWdfdHJpZ2dl
ciwgZGlnX2hvdHBsdWdfcmVnLAorCQkJCSAgIGRldl9wcml2LT5ob3RwbHVnLnBjaF9ocGQsCiAJ
CQkJICAgaWNwX2RkaV9wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3QpOwogCX0KIApAQCAtMTkwMyw4
ICsxOTI5LDggQEAgc3RhdGljIHZvaWQgaWNwX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwgdTMyIHBjaF9paXIpCiAJCUk5MTVfV1JJVEUoU0hPVFBMVUdfQ1RM
X1RDLCBkaWdfaG90cGx1Z19yZWcpOwogCiAJCWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwg
JnBpbl9tYXNrLCAmbG9uZ19tYXNrLAotCQkJCSAgIHRjX2hvdHBsdWdfdHJpZ2dlciwKLQkJCQkg
ICBkaWdfaG90cGx1Z19yZWcsIHBpbnMsCisJCQkJICAgdGNfaG90cGx1Z190cmlnZ2VyLCBkaWdf
aG90cGx1Z19yZWcsCisJCQkJICAgZGV2X3ByaXYtPmhvdHBsdWcucGNoX2hwZCwKIAkJCQkgICB0
Y19wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3QpOwogCX0KIApAQCAtMTkyOSw3ICsxOTU1LDggQEAg
c3RhdGljIHZvaWQgc3B0X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwgdTMyIHBjaF9paXIpCiAJCUk5MTVfV1JJVEUoUENIX1BPUlRfSE9UUExVRywgZGlnX2hv
dHBsdWdfcmVnKTsKIAogCQlpbnRlbF9nZXRfaHBkX3BpbnMoZGV2X3ByaXYsICZwaW5fbWFzaywg
JmxvbmdfbWFzaywKLQkJCQkgICBob3RwbHVnX3RyaWdnZXIsIGRpZ19ob3RwbHVnX3JlZywgaHBk
X3NwdCwKKwkJCQkgICBob3RwbHVnX3RyaWdnZXIsIGRpZ19ob3RwbHVnX3JlZywKKwkJCQkgICBk
ZXZfcHJpdi0+aG90cGx1Zy5wY2hfaHBkLAogCQkJCSAgIHNwdF9wb3J0X2hvdHBsdWdfbG9uZ19k
ZXRlY3QpOwogCX0KIApAQCAtMTk0MCw3ICsxOTY3LDggQEAgc3RhdGljIHZvaWQgc3B0X2lycV9o
YW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBjaF9paXIpCiAJ
CUk5MTVfV1JJVEUoUENIX1BPUlRfSE9UUExVRzIsIGRpZ19ob3RwbHVnX3JlZyk7CiAKIAkJaW50
ZWxfZ2V0X2hwZF9waW5zKGRldl9wcml2LCAmcGluX21hc2ssICZsb25nX21hc2ssCi0JCQkJICAg
aG90cGx1ZzJfdHJpZ2dlciwgZGlnX2hvdHBsdWdfcmVnLCBocGRfc3B0LAorCQkJCSAgIGhvdHBs
dWcyX3RyaWdnZXIsIGRpZ19ob3RwbHVnX3JlZywKKwkJCQkgICBkZXZfcHJpdi0+aG90cGx1Zy5w
Y2hfaHBkLAogCQkJCSAgIHNwdF9wb3J0X2hvdHBsdWcyX2xvbmdfZGV0ZWN0KTsKIAl9CiAKQEAg
LTE5NTIsMTYgKzE5ODAsMTYgQEAgc3RhdGljIHZvaWQgc3B0X2lycV9oYW5kbGVyKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBjaF9paXIpCiB9CiAKIHN0YXRpYyB2b2lk
IGlsa19ocGRfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAot
CQkJCXUzMiBob3RwbHVnX3RyaWdnZXIsCi0JCQkJY29uc3QgdTMyIGhwZFtIUERfTlVNX1BJTlNd
KQorCQkJCXUzMiBob3RwbHVnX3RyaWdnZXIpCiB7CiAJdTMyIGRpZ19ob3RwbHVnX3JlZywgcGlu
X21hc2sgPSAwLCBsb25nX21hc2sgPSAwOwogCiAJZGlnX2hvdHBsdWdfcmVnID0gSTkxNV9SRUFE
KERJR0lUQUxfUE9SVF9IT1RQTFVHX0NOVFJMKTsKIAlJOTE1X1dSSVRFKERJR0lUQUxfUE9SVF9I
T1RQTFVHX0NOVFJMLCBkaWdfaG90cGx1Z19yZWcpOwogCi0JaW50ZWxfZ2V0X2hwZF9waW5zKGRl
dl9wcml2LCAmcGluX21hc2ssICZsb25nX21hc2ssIGhvdHBsdWdfdHJpZ2dlciwKLQkJCSAgIGRp
Z19ob3RwbHVnX3JlZywgaHBkLAorCWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwgJnBpbl9t
YXNrLCAmbG9uZ19tYXNrLAorCQkJICAgaG90cGx1Z190cmlnZ2VyLCBkaWdfaG90cGx1Z19yZWcs
CisJCQkgICBkZXZfcHJpdi0+aG90cGx1Zy5ocGQsCiAJCQkgICBpbGtfcG9ydF9ob3RwbHVnX2xv
bmdfZGV0ZWN0KTsKIAogCWludGVsX2hwZF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcGluX21hc2ss
IGxvbmdfbWFzayk7CkBAIC0xOTc0LDcgKzIwMDIsNyBAQCBzdGF0aWMgdm9pZCBpbGtfZGlzcGxh
eV9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJdTMyIGhv
dHBsdWdfdHJpZ2dlciA9IGRlX2lpciAmIERFX0RQX0FfSE9UUExVRzsKIAogCWlmIChob3RwbHVn
X3RyaWdnZXIpCi0JCWlsa19ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIGhvdHBsdWdfdHJpZ2dl
ciwgaHBkX2lsayk7CisJCWlsa19ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIGhvdHBsdWdfdHJp
Z2dlcik7CiAKIAlpZiAoZGVfaWlyICYgREVfQVVYX0NIQU5ORUxfQSkKIAkJZHBfYXV4X2lycV9o
YW5kbGVyKGRldl9wcml2KTsKQEAgLTIwMjAsNyArMjA0OCw3IEBAIHN0YXRpYyB2b2lkIGl2Yl9k
aXNwbGF5X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAl1
MzIgaG90cGx1Z190cmlnZ2VyID0gZGVfaWlyICYgREVfRFBfQV9IT1RQTFVHX0lWQjsKIAogCWlm
IChob3RwbHVnX3RyaWdnZXIpCi0JCWlsa19ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIGhvdHBs
dWdfdHJpZ2dlciwgaHBkX2l2Yik7CisJCWlsa19ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIGhv
dHBsdWdfdHJpZ2dlcik7CiAKIAlpZiAoZGVfaWlyICYgREVfRVJSX0lOVF9JVkIpCiAJCWl2Yl9l
cnJfaW50X2hhbmRsZXIoZGV2X3ByaXYpOwpAQCAtMjEzMCwxNiArMjE1OCwxNiBAQCBzdGF0aWMg
aXJxcmV0dXJuX3QgaWxrX2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIH0KIAogc3Rh
dGljIHZvaWQgYnh0X2hwZF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCi0JCQkJdTMyIGhvdHBsdWdfdHJpZ2dlciwKLQkJCQljb25zdCB1MzIgaHBkW0hQRF9O
VU1fUElOU10pCisJCQkJdTMyIGhvdHBsdWdfdHJpZ2dlcikKIHsKIAl1MzIgZGlnX2hvdHBsdWdf
cmVnLCBwaW5fbWFzayA9IDAsIGxvbmdfbWFzayA9IDA7CiAKIAlkaWdfaG90cGx1Z19yZWcgPSBJ
OTE1X1JFQUQoUENIX1BPUlRfSE9UUExVRyk7CiAJSTkxNV9XUklURShQQ0hfUE9SVF9IT1RQTFVH
LCBkaWdfaG90cGx1Z19yZWcpOwogCi0JaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9wcml2LCAmcGlu
X21hc2ssICZsb25nX21hc2ssIGhvdHBsdWdfdHJpZ2dlciwKLQkJCSAgIGRpZ19ob3RwbHVnX3Jl
ZywgaHBkLAorCWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwgJnBpbl9tYXNrLCAmbG9uZ19t
YXNrLAorCQkJICAgaG90cGx1Z190cmlnZ2VyLCBkaWdfaG90cGx1Z19yZWcsCisJCQkgICBkZXZf
cHJpdi0+aG90cGx1Zy5ocGQsCiAJCQkgICBieHRfcG9ydF9ob3RwbHVnX2xvbmdfZGV0ZWN0KTsK
IAogCWludGVsX2hwZF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcGluX21hc2ssIGxvbmdfbWFzayk7
CkBAIC0yMTUxLDE1ICsyMTc5LDExIEBAIHN0YXRpYyB2b2lkIGdlbjExX2hwZF9pcnFfaGFuZGxl
cihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBpaXIpCiAJdTMyIHRyaWdn
ZXJfdGMgPSBpaXIgJiBHRU4xMV9ERV9UQ19IT1RQTFVHX01BU0s7CiAJdTMyIHRyaWdnZXJfdGJ0
ID0gaWlyICYgR0VOMTFfREVfVEJUX0hPVFBMVUdfTUFTSzsKIAlsb25nX3B1bHNlX2RldGVjdF9m
dW5jIGxvbmdfcHVsc2VfZGV0ZWN0OwotCWNvbnN0IHUzMiAqaHBkOwogCi0JaWYgKElOVEVMX0dF
TihkZXZfcHJpdikgPj0gMTIpIHsKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikKIAkJ
bG9uZ19wdWxzZV9kZXRlY3QgPSBnZW4xMl9wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3Q7Ci0JCWhw
ZCA9IGhwZF9nZW4xMjsKLQl9IGVsc2UgeworCWVsc2UKIAkJbG9uZ19wdWxzZV9kZXRlY3QgPSBn
ZW4xMV9wb3J0X2hvdHBsdWdfbG9uZ19kZXRlY3Q7Ci0JCWhwZCA9IGhwZF9nZW4xMTsKLQl9CiAK
IAlpZiAodHJpZ2dlcl90YykgewogCQl1MzIgZGlnX2hvdHBsdWdfcmVnOwpAQCAtMjE2Nyw4ICsy
MTkxLDEwIEBAIHN0YXRpYyB2b2lkIGdlbjExX2hwZF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBpaXIpCiAJCWRpZ19ob3RwbHVnX3JlZyA9IEk5MTVf
UkVBRChHRU4xMV9UQ19IT1RQTFVHX0NUTCk7CiAJCUk5MTVfV1JJVEUoR0VOMTFfVENfSE9UUExV
R19DVEwsIGRpZ19ob3RwbHVnX3JlZyk7CiAKLQkJaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9wcml2
LCAmcGluX21hc2ssICZsb25nX21hc2ssIHRyaWdnZXJfdGMsCi0JCQkJICAgZGlnX2hvdHBsdWdf
cmVnLCBocGQsIGxvbmdfcHVsc2VfZGV0ZWN0KTsKKwkJaW50ZWxfZ2V0X2hwZF9waW5zKGRldl9w
cml2LCAmcGluX21hc2ssICZsb25nX21hc2ssCisJCQkJICAgdHJpZ2dlcl90YywgZGlnX2hvdHBs
dWdfcmVnLAorCQkJCSAgIGRldl9wcml2LT5ob3RwbHVnLmhwZCwKKwkJCQkgICBsb25nX3B1bHNl
X2RldGVjdCk7CiAJfQogCiAJaWYgKHRyaWdnZXJfdGJ0KSB7CkBAIC0yMTc3LDggKzIyMDMsMTAg
QEAgc3RhdGljIHZvaWQgZ2VuMTFfaHBkX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwgdTMyIGlpcikKIAkJZGlnX2hvdHBsdWdfcmVnID0gSTkxNV9SRUFEKEdF
TjExX1RCVF9IT1RQTFVHX0NUTCk7CiAJCUk5MTVfV1JJVEUoR0VOMTFfVEJUX0hPVFBMVUdfQ1RM
LCBkaWdfaG90cGx1Z19yZWcpOwogCi0JCWludGVsX2dldF9ocGRfcGlucyhkZXZfcHJpdiwgJnBp
bl9tYXNrLCAmbG9uZ19tYXNrLCB0cmlnZ2VyX3RidCwKLQkJCQkgICBkaWdfaG90cGx1Z19yZWcs
IGhwZCwgbG9uZ19wdWxzZV9kZXRlY3QpOworCQlpbnRlbF9nZXRfaHBkX3BpbnMoZGV2X3ByaXYs
ICZwaW5fbWFzaywgJmxvbmdfbWFzaywKKwkJCQkgICB0cmlnZ2VyX3RidCwgZGlnX2hvdHBsdWdf
cmVnLAorCQkJCSAgIGRldl9wcml2LT5ob3RwbHVnLmhwZCwKKwkJCQkgICBsb25nX3B1bHNlX2Rl
dGVjdCk7CiAJfQogCiAJaWYgKHBpbl9tYXNrKQpAQCAtMjMwOSwxNSArMjMzNywxMyBAQCBnZW44
X2RlX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIG1h
c3Rlcl9jdGwpCiAJCQlpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpIHsKIAkJCQl0bXBfbWFzayA9
IGlpciAmIEJYVF9ERV9QT1JUX0hPVFBMVUdfTUFTSzsKIAkJCQlpZiAodG1wX21hc2spIHsKLQkJ
CQkJYnh0X2hwZF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgdG1wX21hc2ssCi0JCQkJCQkJICAgIGhw
ZF9ieHQpOworCQkJCQlieHRfaHBkX2lycV9oYW5kbGVyKGRldl9wcml2LCB0bXBfbWFzayk7CiAJ
CQkJCWZvdW5kID0gdHJ1ZTsKIAkJCQl9CiAJCQl9IGVsc2UgaWYgKElTX0JST0FEV0VMTChkZXZf
cHJpdikpIHsKIAkJCQl0bXBfbWFzayA9IGlpciAmIEdFTjhfUE9SVF9EUF9BX0hPVFBMVUc7CiAJ
CQkJaWYgKHRtcF9tYXNrKSB7Ci0JCQkJCWlsa19ocGRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsCi0J
CQkJCQkJICAgIHRtcF9tYXNrLCBocGRfYmR3KTsKKwkJCQkJaWxrX2hwZF9pcnFfaGFuZGxlcihk
ZXZfcHJpdiwgdG1wX21hc2spOwogCQkJCQlmb3VuZCA9IHRydWU7CiAJCQkJfQogCQkJfQpAQCAt
Mjk4OSwxMyArMzAxNSwxMiBAQCBzdGF0aWMgdm9pZCBpYnhfaHBkX2lycV9zZXR1cChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJdTMyIGhvdHBsdWdfaXJxcywgZW5hYmxl
ZF9pcnFzOwogCi0JaWYgKEhBU19QQ0hfSUJYKGRldl9wcml2KSkgeworCWlmIChIQVNfUENIX0lC
WChkZXZfcHJpdikpCiAJCWhvdHBsdWdfaXJxcyA9IFNERV9IT1RQTFVHX01BU0s7Ci0JCWVuYWJs
ZWRfaXJxcyA9IGludGVsX2hwZF9lbmFibGVkX2lycXMoZGV2X3ByaXYsIGhwZF9pYngpOwotCX0g
ZWxzZSB7CisJZWxzZQogCQlob3RwbHVnX2lycXMgPSBTREVfSE9UUExVR19NQVNLX0NQVDsKLQkJ
ZW5hYmxlZF9pcnFzID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJpdiwgaHBkX2NwdCk7
Ci0JfQorCisJZW5hYmxlZF9pcnFzID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJpdiwg
ZGV2X3ByaXYtPmhvdHBsdWcucGNoX2hwZCk7CiAKIAlpYnhfZGlzcGxheV9pbnRlcnJ1cHRfdXBk
YXRlKGRldl9wcml2LCBob3RwbHVnX2lycXMsIGVuYWJsZWRfaXJxcyk7CiAKQEAgLTMwMjEsMTMg
KzMwNDYsMTIgQEAgc3RhdGljIHZvaWQgaWNwX2hwZF9kZXRlY3Rpb25fc2V0dXAoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCiBzdGF0aWMgdm9pZCBpY3BfaHBkX2lycV9zZXR1
cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICB1MzIgc2RlX2Rk
aV9tYXNrLCB1MzIgc2RlX3RjX21hc2ssCi0JCQkgICAgICB1MzIgZGRpX2VuYWJsZV9tYXNrLCB1
MzIgdGNfZW5hYmxlX21hc2ssCi0JCQkgICAgICBjb25zdCB1MzIgKnBpbnMpCisJCQkgICAgICB1
MzIgZGRpX2VuYWJsZV9tYXNrLCB1MzIgdGNfZW5hYmxlX21hc2spCiB7CiAJdTMyIGhvdHBsdWdf
aXJxcywgZW5hYmxlZF9pcnFzOwogCiAJaG90cGx1Z19pcnFzID0gc2RlX2RkaV9tYXNrIHwgc2Rl
X3RjX21hc2s7Ci0JZW5hYmxlZF9pcnFzID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJp
diwgcGlucyk7CisJZW5hYmxlZF9pcnFzID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJp
diwgZGV2X3ByaXYtPmhvdHBsdWcucGNoX2hwZCk7CiAKIAlJOTE1X1dSSVRFKFNIUERfRklMVEVS
X0NOVCwgU0hQRF9GSUxURVJfQ05UXzUwMF9BREopOwogCkBAIC0zMDQ0LDggKzMwNjgsNyBAQCBz
dGF0aWMgdm9pZCBtY2NfaHBkX2lycV9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpCiB7CiAJaWNwX2hwZF9pcnFfc2V0dXAoZGV2X3ByaXYsCiAJCQkgIFNERV9ERElfTUFT
S19JQ1AsIFNERV9UQ19IT1RQTFVHX0lDUChQT1JUX1RDMSksCi0JCQkgIElDUF9ERElfSFBEX0VO
QUJMRV9NQVNLLCBJQ1BfVENfSFBEX0VOQUJMRShQT1JUX1RDMSksCi0JCQkgIGhwZF9pY3ApOwor
CQkJICBJQ1BfRERJX0hQRF9FTkFCTEVfTUFTSywgSUNQX1RDX0hQRF9FTkFCTEUoUE9SVF9UQzEp
KTsKIH0KIAogLyoKQEAgLTMwNTcsOCArMzA4MCw3IEBAIHN0YXRpYyB2b2lkIGpzcF9ocGRfaXJx
X3NldHVwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAlpY3BfaHBkX2ly
cV9zZXR1cChkZXZfcHJpdiwKIAkJCSAgU0RFX0RESV9NQVNLX1RHUCwgMCwKLQkJCSAgVEdQX0RE
SV9IUERfRU5BQkxFX01BU0ssIDAsCi0JCQkgIGhwZF90Z3ApOworCQkJICBUR1BfRERJX0hQRF9F
TkFCTEVfTUFTSywgMCk7CiB9CiAKIHN0YXRpYyB2b2lkIGdlbjExX2hwZF9kZXRlY3Rpb25fc2V0
dXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpAQCAtMzA4MywxMSArMzEwNSw5
IEBAIHN0YXRpYyB2b2lkIGdlbjExX2hwZF9kZXRlY3Rpb25fc2V0dXAoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogc3RhdGljIHZvaWQgZ2VuMTFfaHBkX2lycV9zZXR1cChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJdTMyIGhvdHBsdWdfaXJxcywgZW5h
YmxlZF9pcnFzOwotCWNvbnN0IHUzMiAqaHBkOwogCXUzMiB2YWw7CiAKLQlocGQgPSBJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDEyID8gaHBkX2dlbjEyIDogaHBkX2dlbjExOwotCWVuYWJsZWRfaXJx
cyA9IGludGVsX2hwZF9lbmFibGVkX2lycXMoZGV2X3ByaXYsIGhwZCk7CisJZW5hYmxlZF9pcnFz
ID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJpdiwgZGV2X3ByaXYtPmhvdHBsdWcuaHBk
KTsKIAlob3RwbHVnX2lycXMgPSBHRU4xMV9ERV9UQ19IT1RQTFVHX01BU0sgfCBHRU4xMV9ERV9U
QlRfSE9UUExVR19NQVNLOwogCiAJdmFsID0gSTkxNV9SRUFEKEdFTjExX0RFX0hQRF9JTVIpOwpA
QCAtMzA5OSwxMiArMzExOSwxMCBAQCBzdGF0aWMgdm9pZCBnZW4xMV9ocGRfaXJxX3NldHVwKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogCWlmIChJTlRFTF9QQ0hfVFlQRShk
ZXZfcHJpdikgPj0gUENIX1RHUCkKIAkJaWNwX2hwZF9pcnFfc2V0dXAoZGV2X3ByaXYsIFNERV9E
RElfTUFTS19UR1AsIFNERV9UQ19NQVNLX1RHUCwKLQkJCQkgIFRHUF9ERElfSFBEX0VOQUJMRV9N
QVNLLAotCQkJCSAgVEdQX1RDX0hQRF9FTkFCTEVfTUFTSywgaHBkX3RncCk7CisJCQkJICBUR1Bf
RERJX0hQRF9FTkFCTEVfTUFTSywgVEdQX1RDX0hQRF9FTkFCTEVfTUFTSyk7CiAJZWxzZSBpZiAo
SU5URUxfUENIX1RZUEUoZGV2X3ByaXYpID49IFBDSF9JQ1ApCiAJCWljcF9ocGRfaXJxX3NldHVw
KGRldl9wcml2LCBTREVfRERJX01BU0tfSUNQLCBTREVfVENfTUFTS19JQ1AsCi0JCQkJICBJQ1Bf
RERJX0hQRF9FTkFCTEVfTUFTSywKLQkJCQkgIElDUF9UQ19IUERfRU5BQkxFX01BU0ssIGhwZF9p
Y3ApOworCQkJCSAgSUNQX0RESV9IUERfRU5BQkxFX01BU0ssIElDUF9UQ19IUERfRU5BQkxFX01B
U0spOwogfQogCiBzdGF0aWMgdm9pZCBzcHRfaHBkX2RldGVjdGlvbl9zZXR1cChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCkBAIC0zMTQwLDcgKzMxNTgsNyBAQCBzdGF0aWMgdm9p
ZCBzcHRfaHBkX2lycV9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJ
CUk5MTVfV1JJVEUoU0hQRF9GSUxURVJfQ05ULCBTSFBEX0ZJTFRFUl9DTlRfNTAwX0FESik7CiAK
IAlob3RwbHVnX2lycXMgPSBTREVfSE9UUExVR19NQVNLX1NQVDsKLQllbmFibGVkX2lycXMgPSBp
bnRlbF9ocGRfZW5hYmxlZF9pcnFzKGRldl9wcml2LCBocGRfc3B0KTsKKwllbmFibGVkX2lycXMg
PSBpbnRlbF9ocGRfZW5hYmxlZF9pcnFzKGRldl9wcml2LCBkZXZfcHJpdi0+aG90cGx1Zy5wY2hf
aHBkKTsKIAogCWlieF9kaXNwbGF5X2ludGVycnVwdF91cGRhdGUoZGV2X3ByaXYsIGhvdHBsdWdf
aXJxcywgZW5hYmxlZF9pcnFzKTsKIApAQCAtMzE2OSwxNyArMzE4NywxNyBAQCBzdGF0aWMgdm9p
ZCBpbGtfaHBkX2lycV9zZXR1cChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAK
IAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA4KSB7CiAJCWhvdHBsdWdfaXJxcyA9IEdFTjhf
UE9SVF9EUF9BX0hPVFBMVUc7Ci0JCWVuYWJsZWRfaXJxcyA9IGludGVsX2hwZF9lbmFibGVkX2ly
cXMoZGV2X3ByaXYsIGhwZF9iZHcpOworCQllbmFibGVkX2lycXMgPSBpbnRlbF9ocGRfZW5hYmxl
ZF9pcnFzKGRldl9wcml2LCBkZXZfcHJpdi0+aG90cGx1Zy5ocGQpOwogCiAJCWJkd191cGRhdGVf
cG9ydF9pcnEoZGV2X3ByaXYsIGhvdHBsdWdfaXJxcywgZW5hYmxlZF9pcnFzKTsKIAl9IGVsc2Ug
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gNykgewogCQlob3RwbHVnX2lycXMgPSBERV9EUF9B
X0hPVFBMVUdfSVZCOwotCQllbmFibGVkX2lycXMgPSBpbnRlbF9ocGRfZW5hYmxlZF9pcnFzKGRl
dl9wcml2LCBocGRfaXZiKTsKKwkJZW5hYmxlZF9pcnFzID0gaW50ZWxfaHBkX2VuYWJsZWRfaXJx
cyhkZXZfcHJpdiwgZGV2X3ByaXYtPmhvdHBsdWcuaHBkKTsKIAogCQlpbGtfdXBkYXRlX2Rpc3Bs
YXlfaXJxKGRldl9wcml2LCBob3RwbHVnX2lycXMsIGVuYWJsZWRfaXJxcyk7CiAJfSBlbHNlIHsK
IAkJaG90cGx1Z19pcnFzID0gREVfRFBfQV9IT1RQTFVHOwotCQllbmFibGVkX2lycXMgPSBpbnRl
bF9ocGRfZW5hYmxlZF9pcnFzKGRldl9wcml2LCBocGRfaWxrKTsKKwkJZW5hYmxlZF9pcnFzID0g
aW50ZWxfaHBkX2VuYWJsZWRfaXJxcyhkZXZfcHJpdiwgZGV2X3ByaXYtPmhvdHBsdWcuaHBkKTsK
IAogCQlpbGtfdXBkYXRlX2Rpc3BsYXlfaXJxKGRldl9wcml2LCBob3RwbHVnX2lycXMsIGVuYWJs
ZWRfaXJxcyk7CiAJfQpAQCAtMzIzMCw3ICszMjQ4LDcgQEAgc3RhdGljIHZvaWQgYnh0X2hwZF9p
cnFfc2V0dXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXUzMiBob3Rw
bHVnX2lycXMsIGVuYWJsZWRfaXJxczsKIAotCWVuYWJsZWRfaXJxcyA9IGludGVsX2hwZF9lbmFi
bGVkX2lycXMoZGV2X3ByaXYsIGhwZF9ieHQpOworCWVuYWJsZWRfaXJxcyA9IGludGVsX2hwZF9l
bmFibGVkX2lycXMoZGV2X3ByaXYsIGRldl9wcml2LT5ob3RwbHVnLmhwZCk7CiAJaG90cGx1Z19p
cnFzID0gQlhUX0RFX1BPUlRfSE9UUExVR19NQVNLOwogCiAJYmR3X3VwZGF0ZV9wb3J0X2lycShk
ZXZfcHJpdiwgaG90cGx1Z19pcnFzLCBlbmFibGVkX2lycXMpOwpAQCAtMzkzNiw2ICszOTU0LDgg
QEAgdm9pZCBpbnRlbF9pcnFfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9ICZkZXZfcHJpdi0+ZHJtOwogCWludCBpOwogCisJ
aW50ZWxfaHBkX2luaXRfcGlucyhkZXZfcHJpdik7CisKIAlpbnRlbF9ocGRfaW5pdF93b3JrKGRl
dl9wcml2KTsKIAogCUlOSVRfV09SSygmZGV2X3ByaXYtPmwzX3Bhcml0eS5lcnJvcl93b3JrLCBp
dmJfcGFyaXR5X3dvcmspOwotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 491C137FF7
	for <lists+intel-gfx@lfdr.de>; Thu,  6 Jun 2019 23:52:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6CC03899DC;
	Thu,  6 Jun 2019 21:52:49 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5AEEC899D4
 for <intel-gfx@lists.freedesktop.org>; Thu,  6 Jun 2019 21:52:48 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 06 Jun 2019 14:52:48 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga002.jf.intel.com with ESMTP; 06 Jun 2019 14:52:48 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  6 Jun 2019 14:52:16 -0700
Message-Id: <20190606215218.34486-8-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190606215218.34486-1-daniele.ceraolospurio@intel.com>
References: <20190606215218.34486-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 7/8] drm/i915: introduce display_uncore
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QSBmb3JjZXdha2UtbGVzcyB1bmNvcmUgdG8gYmUgdXNlZCB0byBkZWNvdXBsZSBHVCBhY2Nlc3Nl
cyBmcm9tIGRpc3BsYXkKb25lcyB0byBhdm9pZCBzZXJpYWxpemluZyB0aGVtIHdoZW4gdGhlcmUg
aXMgbm8gbmVlZC4KCkFsbCB0aGUgdW5jb3JlIHN1c3BlbmQvcmVzdW1lIGZ1bmN0aW9ucyBhcmUg
Zm9yY2V3YWtlLXJlbGF0ZWQsIHNvIG5vCm5lZWQgdG8gY2FsbCB0aGVtIGZvciBkaXNwbGF5X3Vu
Y29yZS4KClNpZ25lZC1vZmYtYnk6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2Vy
YW9sb3NwdXJpb0BpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
YyAgICAgfCAxNCArKysrKysrKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
aCAgICAgfCAgNiArKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5jIHwg
MjMgKysrKysrKysrKysrKysrKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Vu
Y29yZS5oIHwgIDkgKysrKysrKystCiA0IGZpbGVzIGNoYW5nZWQsIDQxIGluc2VydGlvbnMoKyks
IDExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCmluZGV4IDAyNGYyNzBmNmYw
MC4uNjM1MDI0Y2FkMDA1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKQEAgLTg5Myw3ICs4OTMs
OCBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2luaXRfZWFybHkoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogCiAJaW50ZWxfZGV2aWNlX2luZm9fc3VicGxhdGZvcm1faW5pdChk
ZXZfcHJpdik7CiAKLQlpbnRlbF91bmNvcmVfaW5pdF9lYXJseSgmZGV2X3ByaXYtPnVuY29yZSk7
CisJaW50ZWxfdW5jb3JlX2luaXRfZWFybHkoJmRldl9wcml2LT51bmNvcmUsIDApOworCWludGVs
X3VuY29yZV9pbml0X2Vhcmx5KCZkZXZfcHJpdi0+ZGVfdW5jb3JlLCBVTkNPUkVfSVNfRElTUExB
WSk7CiAKIAlzcGluX2xvY2tfaW5pdCgmZGV2X3ByaXYtPmlycV9sb2NrKTsKIAlzcGluX2xvY2tf
aW5pdCgmZGV2X3ByaXYtPmdwdV9lcnJvci5sb2NrKTsKQEAgLTk5MSw2ICs5OTIsMTAgQEAgc3Rh
dGljIGludCBpOTE1X2RyaXZlcl9pbml0X21taW8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogCWlmIChyZXQgPCAwKQogCQlnb3RvIGVycl9icmlkZ2U7CiAKKwlyZXQgPSBpbnRl
bF91bmNvcmVfaW5pdF9tbWlvKCZkZXZfcHJpdi0+ZGVfdW5jb3JlKTsKKwlpZiAocmV0IDwgMCkK
KwkJZ290byBlcnJfdW5jb3JlOworCiAJLyogVHJ5IHRvIG1ha2Ugc3VyZSBNQ0hCQVIgaXMgZW5h
YmxlZCBiZWZvcmUgcG9raW5nIGF0IGl0ICovCiAJaW50ZWxfc2V0dXBfbWNoYmFyKGRldl9wcml2
KTsKIApAQCAtMTAwMCwxNCArMTAwNSwxNiBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2luaXRf
bW1pbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAlyZXQgPSBpbnRlbF9l
bmdpbmVzX2luaXRfbW1pbyhkZXZfcHJpdik7CiAJaWYgKHJldCkKLQkJZ290byBlcnJfdW5jb3Jl
OworCQlnb3RvIGVycl9tY2hiYXI7CiAKIAlpOTE1X2dlbV9pbml0X21taW8oZGV2X3ByaXYpOwog
CiAJcmV0dXJuIDA7CiAKLWVycl91bmNvcmU6CitlcnJfbWNoYmFyOgogCWludGVsX3RlYXJkb3du
X21jaGJhcihkZXZfcHJpdik7CisJaW50ZWxfdW5jb3JlX2ZpbmlfbW1pbygmZGV2X3ByaXYtPmRl
X3VuY29yZSk7CitlcnJfdW5jb3JlOgogCWludGVsX3VuY29yZV9maW5pX21taW8oJmRldl9wcml2
LT51bmNvcmUpOwogZXJyX2JyaWRnZToKIAlwY2lfZGV2X3B1dChkZXZfcHJpdi0+YnJpZGdlX2Rl
dik7CkBAIC0xMDIyLDYgKzEwMjksNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2luaXRfbW1p
byhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiBzdGF0aWMgdm9pZCBpOTE1X2Ry
aXZlcl9jbGVhbnVwX21taW8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewog
CWludGVsX3RlYXJkb3duX21jaGJhcihkZXZfcHJpdik7CisJaW50ZWxfdW5jb3JlX2ZpbmlfbW1p
bygmZGV2X3ByaXYtPmRlX3VuY29yZSk7CiAJaW50ZWxfdW5jb3JlX2ZpbmlfbW1pbygmZGV2X3By
aXYtPnVuY29yZSk7CiAJcGNpX2Rldl9wdXQoZGV2X3ByaXYtPmJyaWRnZV9kZXYpOwogfQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmgKaW5kZXggZGM2YjNlNGFmNTc1Li44N2RjYzdhZGRjNTMgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kcnYuaApAQCAtMTM5OCw2ICsxMzk4LDcgQEAgc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgewogCXJlc291cmNlX3NpemVfdCBzdG9sZW5fdXNhYmxlX3NpemU7CS8qIFRvdGFs
IHNpemUgbWludXMgcmVzZXJ2ZWQgcmFuZ2VzICovCiAKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlIHVu
Y29yZTsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlIGRlX3VuY29yZTsKIAlzdHJ1Y3QgaW50ZWxfdW5j
b3JlX21taW9fZGVidWcgbW1pb19kZWJ1ZzsKIAlhdG9taWNfdCB1c2VyX2ZvcmNld2FrZV9jb3Vu
dDsKIApAQCAtMjAxMyw3ICsyMDE0LDEwIEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmh1Y190b19pOTE1KHN0cnVjdCBpbnRlbF9odWMgKmh1YykKIAogc3RhdGljIGlu
bGluZSBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqdW5jb3JlX3RvX2k5MTUoc3RydWN0IGludGVs
X3VuY29yZSAqdW5jb3JlKQogewotCXJldHVybiBjb250YWluZXJfb2YodW5jb3JlLCBzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSwgdW5jb3JlKTsKKwlpZiAoaW50ZWxfdW5jb3JlX2lzX2Rpc3BsYXko
dW5jb3JlKSkKKwkJcmV0dXJuIGNvbnRhaW5lcl9vZih1bmNvcmUsIHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlLCBkZV91bmNvcmUpOworCWVsc2UKKwkJcmV0dXJuIGNvbnRhaW5lcl9vZih1bmNvcmUs
IHN0cnVjdCBkcm1faTkxNV9wcml2YXRlLCB1bmNvcmUpOwogfQogCiAvKiBTaW1wbGUgaXRlcmF0
b3Igb3ZlciBhbGwgaW5pdGlhbGlzZWQgZW5naW5lcyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfdW5jb3JlLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91
bmNvcmUuYwppbmRleCBjNDYwNDI2YjA1NjIuLjY0NDc5YTc0NmY1NiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdW5jb3JlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfdW5jb3JlLmMKQEAgLTU0OSw2ICs1NDksOSBAQCBzdGF0aWMgdm9pZCBfX2ludGVs
X3VuY29yZV9lYXJseV9zYW5pdGl6ZShzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUsCiAKIHZv
aWQgaW50ZWxfdW5jb3JlX3N1c3BlbmQoc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlKQogewor
CWlmICghaW50ZWxfdW5jb3JlX2lzX2Rpc3BsYXkodW5jb3JlKSkKKwkJcmV0dXJuOworCiAJaW9z
Zl9tYmlfcHVuaXRfYWNxdWlyZSgpOwogCWlvc2ZfbWJpX3VucmVnaXN0ZXJfcG1pY19idXNfYWNj
ZXNzX25vdGlmaWVyX3VubG9ja2VkKAogCQkmdW5jb3JlLT5wbWljX2J1c19hY2Nlc3NfbmIpOwpA
QCAtNTYwLDYgKzU2Myw5IEBAIHZvaWQgaW50ZWxfdW5jb3JlX3Jlc3VtZV9lYXJseShzdHJ1Y3Qg
aW50ZWxfdW5jb3JlICp1bmNvcmUpCiB7CiAJdW5zaWduZWQgaW50IHJlc3RvcmVfZm9yY2V3YWtl
OwogCisJaWYgKCFpbnRlbF91bmNvcmVfaXNfZGlzcGxheSh1bmNvcmUpKQorCQlyZXR1cm47CisK
IAlyZXN0b3JlX2ZvcmNld2FrZSA9IGZldGNoX2FuZF96ZXJvKCZ1bmNvcmUtPmZ3X2RvbWFpbnNf
c2F2ZWQpOwogCV9faW50ZWxfdW5jb3JlX2Vhcmx5X3Nhbml0aXplKHVuY29yZSwgcmVzdG9yZV9m
b3JjZXdha2UpOwogCkBAIC01NjgsNiArNTc0LDkgQEAgdm9pZCBpbnRlbF91bmNvcmVfcmVzdW1l
X2Vhcmx5KHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSkKIAogdm9pZCBpbnRlbF91bmNvcmVf
cnVudGltZV9yZXN1bWUoc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlKQogeworCWlmICghaW50
ZWxfdW5jb3JlX2lzX2Rpc3BsYXkodW5jb3JlKSkKKwkJcmV0dXJuOworCiAJaW9zZl9tYmlfcmVn
aXN0ZXJfcG1pY19idXNfYWNjZXNzX25vdGlmaWVyKCZ1bmNvcmUtPnBtaWNfYnVzX2FjY2Vzc19u
Yik7CiB9CiAKQEAgLTE1NTYsOSArMTU2NSwxMCBAQCBzdGF0aWMgdm9pZCB1bmNvcmVfbW1pb19j
bGVhbnVwKHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSkKIAlwY2lfaW91bm1hcChwZGV2LCB1
bmNvcmUtPnJlZ3MpOwogfQogCi12b2lkIGludGVsX3VuY29yZV9pbml0X2Vhcmx5KHN0cnVjdCBp
bnRlbF91bmNvcmUgKnVuY29yZSkKK3ZvaWQgaW50ZWxfdW5jb3JlX2luaXRfZWFybHkoc3RydWN0
IGludGVsX3VuY29yZSAqdW5jb3JlLCB1MzIgZmxhZ3MpCiB7CiAJc3Bpbl9sb2NrX2luaXQoJnVu
Y29yZS0+bG9jayk7CisJdW5jb3JlLT5mbGFncyA9IGZsYWdzOwogfQogCiBpbnQgaW50ZWxfdW5j
b3JlX2luaXRfbW1pbyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUpCkBAIC0xNTc1LDcgKzE1
ODUsOCBAQCBpbnQgaW50ZWxfdW5jb3JlX2luaXRfbW1pbyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1
bmNvcmUpCiAKIAlpOTE1X2NoZWNrX3ZncHUoaTkxNSk7CiAKLQlpZiAoSU5URUxfR0VOKGk5MTUp
ID4gNSAmJiAhaW50ZWxfdmdwdV9hY3RpdmUoaTkxNSkpCisJaWYgKElOVEVMX0dFTihpOTE1KSA+
IDUgJiYgIWludGVsX3ZncHVfYWN0aXZlKGk5MTUpICYmCisJICAgICFpbnRlbF91bmNvcmVfaXNf
ZGlzcGxheSh1bmNvcmUpKQogCQl1bmNvcmUtPmZsYWdzIHw9IFVOQ09SRV9IQVNfRk9SQ0VXQUtF
OwogCiAJcmV0ID0gaW50ZWxfdW5jb3JlX2Z3X2RvbWFpbnNfaW5pdCh1bmNvcmUpOwpAQCAtMTU4
Niw5ICsxNTk3LDYgQEAgaW50IGludGVsX3VuY29yZV9pbml0X21taW8oc3RydWN0IGludGVsX3Vu
Y29yZSAqdW5jb3JlKQogCiAJX19pbnRlbF91bmNvcmVfZWFybHlfc2FuaXRpemUodW5jb3JlLCAw
KTsKIAotCXVuY29yZS0+cG1pY19idXNfYWNjZXNzX25iLm5vdGlmaWVyX2NhbGwgPQotCQlpOTE1
X3BtaWNfYnVzX2FjY2Vzc19ub3RpZmllcjsKLQogCWlmICghaW50ZWxfdW5jb3JlX2hhc19mb3Jj
ZXdha2UodW5jb3JlKSkgewogCQlpZiAoSVNfR0VOKGk5MTUsIDUpKSB7CiAJCQlBU1NJR05fV1JJ
VEVfTU1JT19WRlVOQ1NfTk9fRlcodW5jb3JlLCBnZW41KTsKQEAgLTE2NDEsNyArMTY0OSwxMCBA
QCBpbnQgaW50ZWxfdW5jb3JlX2luaXRfbW1pbyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUp
CiAJaWYgKElTX0dFTl9SQU5HRShpOTE1LCA2LCA3KSkKIAkJdW5jb3JlLT5mbGFncyB8PSBVTkNP
UkVfSEFTX0ZJRk87CiAKLQlpb3NmX21iaV9yZWdpc3Rlcl9wbWljX2J1c19hY2Nlc3Nfbm90aWZp
ZXIoJnVuY29yZS0+cG1pY19idXNfYWNjZXNzX25iKTsKKwlpZiAoaW50ZWxfdW5jb3JlX2hhc19m
b3JjZXdha2UodW5jb3JlKSkgeworCQl1bmNvcmUtPnBtaWNfYnVzX2FjY2Vzc19uYi5ub3RpZmll
cl9jYWxsID0gaTkxNV9wbWljX2J1c19hY2Nlc3Nfbm90aWZpZXI7CisJCWlvc2ZfbWJpX3JlZ2lz
dGVyX3BtaWNfYnVzX2FjY2Vzc19ub3RpZmllcigmdW5jb3JlLT5wbWljX2J1c19hY2Nlc3NfbmIp
OworCX0KIAogCXJldHVybiAwOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfdW5jb3JlLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91bmNvcmUuaAppbmRl
eCAxZGUxZTg1MDUxMjQuLjA3ZTc5Y2I2Yzc1NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfdW5jb3JlLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdW5j
b3JlLmgKQEAgLTExOCw2ICsxMTgsNyBAQCBzdHJ1Y3QgaW50ZWxfdW5jb3JlIHsKICNkZWZpbmUg
VU5DT1JFX0hBU19GUEdBX0RCR19VTkNMQUlNRUQJQklUKDEpCiAjZGVmaW5lIFVOQ09SRV9IQVNf
REJHX1VOQ0xBSU1FRAlCSVQoMikKICNkZWZpbmUgVU5DT1JFX0hBU19GSUZPCQkJQklUKDMpCisj
ZGVmaW5lIFVOQ09SRV9JU19ESVNQTEFZCQlCSVQoNCkKIAogCWNvbnN0IHN0cnVjdCBpbnRlbF9m
b3JjZXdha2VfcmFuZ2UgKmZ3X2RvbWFpbnNfdGFibGU7CiAJdW5zaWduZWQgaW50IGZ3X2RvbWFp
bnNfdGFibGVfZW50cmllczsKQEAgLTE3NywxMiArMTc4LDE4IEBAIGludGVsX3VuY29yZV9oYXNf
Zmlmbyhjb25zdCBzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUpCiAJcmV0dXJuIHVuY29yZS0+
ZmxhZ3MgJiBVTkNPUkVfSEFTX0ZJRk87CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9vbAoraW50ZWxf
dW5jb3JlX2lzX2Rpc3BsYXkoY29uc3Qgc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlKQorewor
CXJldHVybiB1bmNvcmUtPmZsYWdzICYgVU5DT1JFX0lTX0RJU1BMQVk7Cit9CisKIHZvaWQKIGlu
dGVsX3VuY29yZV9tbWlvX2RlYnVnX2luaXRfZWFybHkoc3RydWN0IGludGVsX3VuY29yZV9tbWlv
X2RlYnVnICptbWlvX2RlYnVnKTsKIHZvaWQgaW50ZWxfdW5jb3JlX21taW9fZGVidWdfc3VzcGVu
ZChzdHJ1Y3QgaW50ZWxfdW5jb3JlX21taW9fZGVidWcgKm1taW9fZGVidWcpOwogdm9pZCBpbnRl
bF91bmNvcmVfbW1pb19kZWJ1Z19yZXN1bWUoc3RydWN0IGludGVsX3VuY29yZV9tbWlvX2RlYnVn
ICptbWlvX2RlYnVnKTsKIAotdm9pZCBpbnRlbF91bmNvcmVfaW5pdF9lYXJseShzdHJ1Y3QgaW50
ZWxfdW5jb3JlICp1bmNvcmUpOwordm9pZCBpbnRlbF91bmNvcmVfaW5pdF9lYXJseShzdHJ1Y3Qg
aW50ZWxfdW5jb3JlICp1bmNvcmUsIHUzMiBmbGFncyk7CiBpbnQgaW50ZWxfdW5jb3JlX2luaXRf
bW1pbyhzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUpOwogdm9pZCBpbnRlbF91bmNvcmVfZndf
ZG9tYWluX3BydW5lKHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSwKIAkJCQkgIGVudW0gZm9y
Y2V3YWtlX2RvbWFpbl9pZCBkb21haW5faWQpOwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0Cklu
dGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5v
cmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

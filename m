Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C3B091AAA69
	for <lists+intel-gfx@lfdr.de>; Wed, 15 Apr 2020 16:45:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2856F6E9ED;
	Wed, 15 Apr 2020 14:45:53 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A4DBF6E9ED
 for <intel-gfx@lists.freedesktop.org>; Wed, 15 Apr 2020 14:45:50 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from build.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 20907488-1500050 
 for multiple; Wed, 15 Apr 2020 15:45:14 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 15 Apr 2020 15:45:12 +0100
Message-Id: <20200415144512.29953-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/gt: Move the batch buffer pool from
 the engine to the gt
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Chris Wilson <chris@chris-wilson.co.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2luY2UgdGhlIGludHJvZHVjdGlvbiBvZiAnc29mdC1yYzYnLCB3ZSBhaW0gdG8gcGFyayB0aGUg
ZGV2aWNlIHF1aWNrbHkKYW5kIHRoYXQgcmVzdWx0cyBpbiBmcmVxdWVudCBpZGxpbmcgb2YgdGhl
IHdob2xlIGRldmljZS4gQ3VycmVudGx5IHVwb24KaWRsaW5nIHdlIGZyZWUgdGhlIGJhdGNoIGJ1
ZmZlciBwb29sLCBhbmQgc28gdGhpcyByZW5kZXJzIHRoZSBjYWNoZQppbmVmZmVjdGl2ZSBmb3Ig
bWFueSB3b3JrbG9hZHMuIElmIHdlIHdhbnQgdG8gaGF2ZSBhbiBlZmZlY3RpdmUgY2FjaGUgb2YK
cmVjZW50bHkgYWxsb2NhdGVkIGJ1ZmZlcnMgYXZhaWxhYmxlIGZvciByZXVzZSwgd2UgbmVlZCB0
byBkZWNvdXBsZSB0aGF0CmNhY2hlIGZyb20gdGhlIGVuZ2luZSBwb3dlcm1hbmFnZW1lbnQgYW5k
IG1ha2UgaXQgdGltZXIgYmFzZWQuIEFzIHRoZXJlCmlzIG5vIHJlYXNvbiB0aGVuIHRvIGtlZXAg
aXQgd2l0aGluIHRoZSBlbmdpbmUgKHdoZXJlIGl0IG9uY2UgbWFkZQpyZXRpcmVtZW50IG9yZGVy
IGVhc2llciB0byB0cmFjayksIHdlIGNhbiBtb3ZlIGl0IHVwIHRoZSBoaWVyYWNoeSB0byB0aGUK
b3duZXIgb2YgdGhlIG1lbW9yeSBhbGxvY2F0aW9ucy4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdp
bHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogTWFhcnRlbiBMYW5raG9yc3QgPG1h
YXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0
a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUg
ICAgICAgICAgICAgICAgIHwgICAyICstCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9j
bGllbnRfYmx0LmMgICAgfCAgIDEgLQogLi4uL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhl
Y2J1ZmZlci5jICAgIHwgIDIwICsrLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29i
amVjdF9ibHQuYyAgICB8ICAxOCArLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29i
amVjdF9ibHQuaCAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfY3MuYyAgICAgfCAgIDQgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3BtLmMgICAgIHwgICAyIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9w
b29sLmggICB8ICAzNCAtLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2lu
ZV90eXBlcy5oICB8ICAgOCAtLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyAg
ICAgICAgICAgIHwgICAzICsKIC4uLmxfZW5naW5lX3Bvb2wuYyA9PiBpbnRlbF9ndF9idWZmZXJf
cG9vbC5jfSB8IDEwNCArKysrKysrKysrKystLS0tLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfYnVmZmVyX3Bvb2wuaCAgICB8ICAzNyArKysrKysrCiAuLi5sX3R5cGVzLmggPT4gaW50
ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaH0gfCAgMTUgKystCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9ndF90eXBlcy5oICAgICAgfCAgMTEgKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L21vY2tfZW5naW5lLmMgICAgICAgICB8ICAgMiAtCiAxNSBmaWxlcyBjaGFuZ2VkLCAxNDgg
aW5zZXJ0aW9ucygrKSwgMTE0IGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAwNjQ0IGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wb29sLmgKIHJlbmFtZSBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC97aW50ZWxfZW5naW5lX3Bvb2wuYyA9PiBpbnRlbF9ndF9idWZmZXJfcG9v
bC5jfSAoNTUlKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0X2J1ZmZlcl9wb29sLmgKIHJlbmFtZSBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC97aW50
ZWxfZW5naW5lX3Bvb2xfdHlwZXMuaCA9PiBpbnRlbF9ndF9idWZmZXJfcG9vbF90eXBlcy5ofSAo
NTQlKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKaW5kZXggNDRjNTA2YjdlMTE3Li4xZTllYjI2OTEyYzMg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L01ha2VmaWxlCkBAIC04NiwxMSArODYsMTEgQEAgZ3QteSArPSBcCiAJZ3Qv
aW50ZWxfZW5naW5lX2NzLm8gXAogCWd0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQubyBcCiAJZ3Qv
aW50ZWxfZW5naW5lX3BtLm8gXAotCWd0L2ludGVsX2VuZ2luZV9wb29sLm8gXAogCWd0L2ludGVs
X2VuZ2luZV91c2VyLm8gXAogCWd0L2ludGVsX2dndHQubyBcCiAJZ3QvaW50ZWxfZ2d0dF9mZW5j
aW5nLm8gXAogCWd0L2ludGVsX2d0Lm8gXAorCWd0L2ludGVsX2d0X2J1ZmZlcl9wb29sLm8gXAog
CWd0L2ludGVsX2d0X2lycS5vIFwKIAlndC9pbnRlbF9ndF9wbS5vIFwKIAlndC9pbnRlbF9ndF9w
bV9pcnEubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1f
Y2xpZW50X2JsdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NsaWVudF9i
bHQuYwppbmRleCAwNTk4ZTUzODJhMWQuLjNhMTQ2YWEyNTkzYiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NsaWVudF9ibHQuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY2xpZW50X2JsdC5jCkBAIC02LDcgKzYsNiBAQAogI2lu
Y2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfY29udGV4dC5oIgogI2luY2x1
ZGUgImd0L2ludGVsX2VuZ2luZV9wbS5oIgotI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9wb29s
LmgiCiAjaW5jbHVkZSAiaTkxNV9nZW1fY2xpZW50X2JsdC5oIgogI2luY2x1ZGUgImk5MTVfZ2Vt
X29iamVjdF9ibHQuaCIKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX2V4ZWNidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9l
eGVjYnVmZmVyLmMKaW5kZXggNTE3ODk4YWE2MzRjLi4wNDI5MTZhZDM2MjkgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpAQCAtMTUsOCArMTUs
OCBAQAogCiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2lvY3Rscy5oIgogI2luY2x1ZGUgImd0L2lu
dGVsX2NvbnRleHQuaCIKLSNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG9vbC5oIgogI2luY2x1
ZGUgImd0L2ludGVsX2d0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaCIK
ICNpbmNsdWRlICJndC9pbnRlbF9ndF9wbS5oIgogI2luY2x1ZGUgImd0L2ludGVsX3JpbmcuaCIK
IApAQCAtMTE5NCwxMyArMTE5NCwxMyBAQCBzdGF0aWMgaW50IF9fcmVsb2NfZ3B1X2FsbG9jKHN0
cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCQkJICAgICB1bnNpZ25lZCBpbnQgbGVuKQogewog
CXN0cnVjdCByZWxvY19jYWNoZSAqY2FjaGUgPSAmZWItPnJlbG9jX2NhY2hlOwotCXN0cnVjdCBp
bnRlbF9lbmdpbmVfcG9vbF9ub2RlICpwb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9v
bF9ub2RlICpwb29sOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCXN0cnVjdCBpOTE1X3Zt
YSAqYmF0Y2g7CiAJdTMyICpjbWQ7CiAJaW50IGVycjsKIAotCXBvb2wgPSBpbnRlbF9lbmdpbmVf
Z2V0X3Bvb2woZWItPmVuZ2luZSwgUEFHRV9TSVpFKTsKKwlwb29sID0gaW50ZWxfZ3RfZ2V0X2J1
ZmZlcl9wb29sKGViLT5lbmdpbmUtPmd0LCBQQUdFX1NJWkUpOwogCWlmIChJU19FUlIocG9vbCkp
CiAJCXJldHVybiBQVFJfRVJSKHBvb2wpOwogCkBAIC0xMjI5LDcgKzEyMjksNyBAQCBzdGF0aWMg
aW50IF9fcmVsb2NfZ3B1X2FsbG9jKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCQlnb3Rv
IGVycl91bnBpbjsKIAl9CiAKLQllcnIgPSBpbnRlbF9lbmdpbmVfcG9vbF9tYXJrX2FjdGl2ZShw
b29sLCBycSk7CisJZXJyID0gaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbWFya19hY3RpdmUocG9vbCwg
cnEpOwogCWlmIChlcnIpCiAJCWdvdG8gZXJyX3JlcXVlc3Q7CiAKQEAgLTEyNzAsNyArMTI3MCw3
IEBAIHN0YXRpYyBpbnQgX19yZWxvY19ncHVfYWxsb2Moc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAq
ZWIsCiBlcnJfdW5tYXA6CiAJaTkxNV9nZW1fb2JqZWN0X3VucGluX21hcChwb29sLT5vYmopOwog
b3V0X3Bvb2w6Ci0JaW50ZWxfZW5naW5lX3Bvb2xfcHV0KHBvb2wpOworCWludGVsX2d0X2J1ZmZl
cl9wb29sX3B1dChwb29sKTsKIAlyZXR1cm4gZXJyOwogfQogCkBAIC0xODg3LDcgKzE4ODcsNyBA
QCBzdGF0aWMgaW50IGViX3BhcnNlX3BpcGVsaW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
LAogc3RhdGljIGludCBlYl9wYXJzZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGViLT5pOTE1OwotCXN0cnVjdCBpbnRlbF9l
bmdpbmVfcG9vbF9ub2RlICpwb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2Rl
ICpwb29sOwogCXN0cnVjdCBpOTE1X3ZtYSAqc2hhZG93LCAqdHJhbXBvbGluZTsKIAl1bnNpZ25l
ZCBpbnQgbGVuOwogCWludCBlcnI7CkBAIC0xOTEwLDcgKzE5MTAsNyBAQCBzdGF0aWMgaW50IGVi
X3BhcnNlKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQlsZW4gKz0gSTkxNV9DTURfUEFS
U0VSX1RSQU1QT0xJTkVfU0laRTsKIAl9CiAKLQlwb29sID0gaW50ZWxfZW5naW5lX2dldF9wb29s
KGViLT5lbmdpbmUsIGxlbik7CisJcG9vbCA9IGludGVsX2d0X2dldF9idWZmZXJfcG9vbChlYi0+
ZW5naW5lLT5ndCwgbGVuKTsKIAlpZiAoSVNfRVJSKHBvb2wpKQogCQlyZXR1cm4gUFRSX0VSUihw
b29sKTsKIApAQCAtMTk1OCw3ICsxOTU4LDcgQEAgc3RhdGljIGludCBlYl9wYXJzZShzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYikKIGVycl9zaGFkb3c6CiAJaTkxNV92bWFfdW5waW4oc2hhZG93
KTsKIGVycjoKLQlpbnRlbF9lbmdpbmVfcG9vbF9wdXQocG9vbCk7CisJaW50ZWxfZ3RfYnVmZmVy
X3Bvb2xfcHV0KHBvb2wpOwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTI2NDMsNyArMjY0Myw3IEBA
IGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkgKi8KIAll
Yi5yZXF1ZXN0LT5iYXRjaCA9IGJhdGNoOwogCWlmIChiYXRjaC0+cHJpdmF0ZSkKLQkJaW50ZWxf
ZW5naW5lX3Bvb2xfbWFya19hY3RpdmUoYmF0Y2gtPnByaXZhdGUsIGViLnJlcXVlc3QpOworCQlp
bnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX2FjdGl2ZShiYXRjaC0+cHJpdmF0ZSwgZWIucmVxdWVz
dCk7CiAKIAl0cmFjZV9pOTE1X3JlcXVlc3RfcXVldWUoZWIucmVxdWVzdCwgZWIuYmF0Y2hfZmxh
Z3MpOwogCWVyciA9IGViX3N1Ym1pdCgmZWIsIGJhdGNoKTsKQEAgLTI2NzIsNyArMjY3Miw3IEBA
IGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJaTkxNV92
bWFfdW5waW4oYmF0Y2gpOwogZXJyX3BhcnNlOgogCWlmIChiYXRjaC0+cHJpdmF0ZSkKLQkJaW50
ZWxfZW5naW5lX3Bvb2xfcHV0KGJhdGNoLT5wcml2YXRlKTsKKwkJaW50ZWxfZ3RfYnVmZmVyX3Bv
b2xfcHV0KGJhdGNoLT5wcml2YXRlKTsKIGVycl92bWE6CiAJaWYgKGViLnRyYW1wb2xpbmUpCiAJ
CWk5MTVfdm1hX3VucGluKGViLnRyYW1wb2xpbmUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF9ibHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmMKaW5kZXggZTAwNzkyMTU4ZjEzLi4yZmM3NzM3ZWY1
ZjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3Rf
Ymx0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF9ibHQu
YwpAQCAtNiw4ICs2LDggQEAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImd0L2lu
dGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG0uaCIKLSNpbmNsdWRl
ICJndC9pbnRlbF9lbmdpbmVfcG9vbC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCisjaW5j
bHVkZSAiZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaCIKICNpbmNsdWRlICJndC9pbnRlbF9yaW5n
LmgiCiAjaW5jbHVkZSAiaTkxNV9nZW1fY2xmbHVzaC5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX29i
amVjdF9ibHQuaCIKQEAgLTE4LDcgKzE4LDcgQEAgc3RydWN0IGk5MTVfdm1hICppbnRlbF9lbWl0
X3ZtYV9maWxsX2JsdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiB7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUgPSBjZS0+dm0tPmk5MTU7CiAJY29uc3QgdTMyIGJsb2NrX3NpemUg
PSBTWl84TTsgLyogfjFtcyBhdCA4R2lCL3MgcHJlZW1wdGlvbiBkZWxheSAqLwotCXN0cnVjdCBp
bnRlbF9lbmdpbmVfcG9vbF9ub2RlICpwb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9v
bF9ub2RlICpwb29sOwogCXN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2g7CiAJdTY0IG9mZnNldDsKIAl1
NjQgY291bnQ7CkBAIC0zMyw3ICszMyw3IEBAIHN0cnVjdCBpOTE1X3ZtYSAqaW50ZWxfZW1pdF92
bWFfZmlsbF9ibHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCWNvdW50ID0gZGl2X3U2NChy
b3VuZF91cCh2bWEtPnNpemUsIGJsb2NrX3NpemUpLCBibG9ja19zaXplKTsKIAlzaXplID0gKDEg
KyA4ICogY291bnQpICogc2l6ZW9mKHUzMik7CiAJc2l6ZSA9IHJvdW5kX3VwKHNpemUsIFBBR0Vf
U0laRSk7Ci0JcG9vbCA9IGludGVsX2VuZ2luZV9nZXRfcG9vbChjZS0+ZW5naW5lLCBzaXplKTsK
Kwlwb29sID0gaW50ZWxfZ3RfZ2V0X2J1ZmZlcl9wb29sKGNlLT5lbmdpbmUtPmd0LCBzaXplKTsK
IAlpZiAoSVNfRVJSKHBvb2wpKSB7CiAJCWVyciA9IFBUUl9FUlIocG9vbCk7CiAJCWdvdG8gb3V0
X3BtOwpAQCAtOTYsNyArOTYsNyBAQCBzdHJ1Y3QgaTkxNV92bWEgKmludGVsX2VtaXRfdm1hX2Zp
bGxfYmx0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAlyZXR1cm4gYmF0Y2g7CiAKIG91dF9w
dXQ6Ci0JaW50ZWxfZW5naW5lX3Bvb2xfcHV0KHBvb2wpOworCWludGVsX2d0X2J1ZmZlcl9wb29s
X3B1dChwb29sKTsKIG91dF9wbToKIAlpbnRlbF9lbmdpbmVfcG1fcHV0KGNlLT5lbmdpbmUpOwog
CXJldHVybiBFUlJfUFRSKGVycik7CkBAIC0xMTQsMTMgKzExNCwxMyBAQCBpbnQgaW50ZWxfZW1p
dF92bWFfbWFya19hY3RpdmUoc3RydWN0IGk5MTVfdm1hICp2bWEsIHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKQogCWlmICh1bmxpa2VseShlcnIpKQogCQlyZXR1cm4gZXJyOwogCi0JcmV0dXJuIGlu
dGVsX2VuZ2luZV9wb29sX21hcmtfYWN0aXZlKHZtYS0+cHJpdmF0ZSwgcnEpOworCXJldHVybiBp
bnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX2FjdGl2ZSh2bWEtPnByaXZhdGUsIHJxKTsKIH0KIAog
dm9pZCBpbnRlbF9lbWl0X3ZtYV9yZWxlYXNlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgc3Ry
dWN0IGk5MTVfdm1hICp2bWEpCiB7CiAJaTkxNV92bWFfdW5waW4odm1hKTsKLQlpbnRlbF9lbmdp
bmVfcG9vbF9wdXQodm1hLT5wcml2YXRlKTsKKwlpbnRlbF9ndF9idWZmZXJfcG9vbF9wdXQodm1h
LT5wcml2YXRlKTsKIAlpbnRlbF9lbmdpbmVfcG1fcHV0KGNlLT5lbmdpbmUpOwogfQogCkBAIC0y
MTMsNyArMjEzLDcgQEAgc3RydWN0IGk5MTVfdm1hICppbnRlbF9lbWl0X3ZtYV9jb3B5X2JsdChz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUgPSBjZS0+dm0tPmk5MTU7CiAJY29uc3QgdTMyIGJsb2NrX3NpemUgPSBTWl84TTsgLyogfjFt
cyBhdCA4R2lCL3MgcHJlZW1wdGlvbiBkZWxheSAqLwotCXN0cnVjdCBpbnRlbF9lbmdpbmVfcG9v
bF9ub2RlICpwb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpwb29sOwog
CXN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2g7CiAJdTY0IHNyY19vZmZzZXQsIGRzdF9vZmZzZXQ7CiAJ
dTY0IGNvdW50LCByZW07CkBAIC0yMjgsNyArMjI4LDcgQEAgc3RydWN0IGk5MTVfdm1hICppbnRl
bF9lbWl0X3ZtYV9jb3B5X2JsdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJY291bnQgPSBk
aXZfdTY0KHJvdW5kX3VwKGRzdC0+c2l6ZSwgYmxvY2tfc2l6ZSksIGJsb2NrX3NpemUpOwogCXNp
emUgPSAoMSArIDExICogY291bnQpICogc2l6ZW9mKHUzMik7CiAJc2l6ZSA9IHJvdW5kX3VwKHNp
emUsIFBBR0VfU0laRSk7Ci0JcG9vbCA9IGludGVsX2VuZ2luZV9nZXRfcG9vbChjZS0+ZW5naW5l
LCBzaXplKTsKKwlwb29sID0gaW50ZWxfZ3RfZ2V0X2J1ZmZlcl9wb29sKGNlLT5lbmdpbmUtPmd0
LCBzaXplKTsKIAlpZiAoSVNfRVJSKHBvb2wpKSB7CiAJCWVyciA9IFBUUl9FUlIocG9vbCk7CiAJ
CWdvdG8gb3V0X3BtOwpAQCAtMzA3LDcgKzMwNyw3IEBAIHN0cnVjdCBpOTE1X3ZtYSAqaW50ZWxf
ZW1pdF92bWFfY29weV9ibHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCXJldHVybiBiYXRj
aDsKIAogb3V0X3B1dDoKLQlpbnRlbF9lbmdpbmVfcG9vbF9wdXQocG9vbCk7CisJaW50ZWxfZ3Rf
YnVmZmVyX3Bvb2xfcHV0KHBvb2wpOwogb3V0X3BtOgogCWludGVsX2VuZ2luZV9wbV9wdXQoY2Ut
PmVuZ2luZSk7CiAJcmV0dXJuIEVSUl9QVFIoZXJyKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vaTkxNV9nZW1fb2JqZWN0X2JsdC5oCmluZGV4IDI0M2E0M2E4NzgyNC4uOGJjZDMzNmE5
MGRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0
X2JsdC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0
LmgKQEAgLTEwLDcgKzEwLDYgQEAKIAogI2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKICNp
bmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG0uaCIKLSNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVf
cG9vbC5oIgogI2luY2x1ZGUgImk5MTVfdm1hLmgiCiAKIHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2Nz
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCBiMWY4
NTI3ZjAyYzguLjQxNDFkYWNmNmFkOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMKQEAgLTMxLDcgKzMxLDYgQEAKICNpbmNsdWRlICJpbnRlbF9jb250ZXh0Lmgi
CiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lLmgiCiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3BtLmgi
Ci0jaW5jbHVkZSAiaW50ZWxfZW5naW5lX3Bvb2wuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
dXNlci5oIgogI2luY2x1ZGUgImludGVsX2d0LmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVz
dHMuaCIKQEAgLTYzMSw4ICs2MzAsNiBAQCBzdGF0aWMgaW50IGVuZ2luZV9zZXR1cF9jb21tb24o
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWludGVsX2VuZ2luZV9pbml0X19wbShl
bmdpbmUpOwogCWludGVsX2VuZ2luZV9pbml0X3JldGlyZShlbmdpbmUpOwogCi0JaW50ZWxfZW5n
aW5lX3Bvb2xfaW5pdCgmZW5naW5lLT5wb29sKTsKLQogCS8qIFVzZSB0aGUgd2hvbGUgZGV2aWNl
IGJ5IGRlZmF1bHQgKi8KIAllbmdpbmUtPnNzZXUgPQogCQlpbnRlbF9zc2V1X2Zyb21fZGV2aWNl
X2luZm8oJlJVTlRJTUVfSU5GTyhlbmdpbmUtPmk5MTUpLT5zc2V1KTsKQEAgLTgyOSw3ICs4MjYs
NiBAQCB2b2lkIGludGVsX2VuZ2luZV9jbGVhbnVwX2NvbW1vbihzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCiAJY2xlYW51cF9zdGF0dXNfcGFnZShlbmdpbmUpOwogCiAJaW50ZWxfZW5n
aW5lX2ZpbmlfcmV0aXJlKGVuZ2luZSk7Ci0JaW50ZWxfZW5naW5lX3Bvb2xfZmluaSgmZW5naW5l
LT5wb29sKTsKIAlpbnRlbF9lbmdpbmVfZmluaV9icmVhZGNydW1icyhlbmdpbmUpOwogCWludGVs
X2VuZ2luZV9jbGVhbnVwX2NtZF9wYXJzZXIoZW5naW5lKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfcG0uYwppbmRleCAzYmU2Nzk3NDFkMjIuLjM4ZmQxNjQwOTY2ZiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMKQEAgLTEwLDcgKzEw
LDYgQEAKICNpbmNsdWRlICJpbnRlbF9lbmdpbmUuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
aGVhcnRiZWF0LmgiCiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3BtLmgiCi0jaW5jbHVkZSAiaW50
ZWxfZW5naW5lX3Bvb2wuaCIKICNpbmNsdWRlICJpbnRlbF9ndC5oIgogI2luY2x1ZGUgImludGVs
X2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfcmM2LmgiCkBAIC0yNTUsNyArMjU0LDYgQEAgc3Rh
dGljIGludCBfX2VuZ2luZV9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIAogCWludGVs
X2VuZ2luZV9wYXJrX2hlYXJ0YmVhdChlbmdpbmUpOwogCWludGVsX2VuZ2luZV9kaXNhcm1fYnJl
YWRjcnVtYnMoZW5naW5lKTsKLQlpbnRlbF9lbmdpbmVfcG9vbF9wYXJrKCZlbmdpbmUtPnBvb2wp
OwogCiAJLyogTXVzdCBiZSByZXNldCB1cG9uIGlkbGluZywgb3Igd2UgbWF5IG1pc3MgdGhlIGJ1
c3kgd2FrZXVwLiAqLwogCUdFTV9CVUdfT04oZW5naW5lLT5leGVjbGlzdHMucXVldWVfcHJpb3Jp
dHlfaGludCAhPSBJTlRfTUlOKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9wb29sLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfcG9vbC5oCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAxYmQ4OWNhZGMzYjcuLjAw
MDAwMDAwMDAwMAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG9v
bC5oCisrKyAvZGV2L251bGwKQEAgLTEsMzQgKzAsMCBAQAotLyoKLSAqIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBNSVQKLSAqCi0gKiBDb3B5cmlnaHQgwqkgMjAxNC0yMDE4IEludGVsIENvcnBv
cmF0aW9uCi0gKi8KLQotI2lmbmRlZiBJTlRFTF9FTkdJTkVfUE9PTF9ICi0jZGVmaW5lIElOVEVM
X0VOR0lORV9QT09MX0gKLQotI2luY2x1ZGUgImludGVsX2VuZ2luZV9wb29sX3R5cGVzLmgiCi0j
aW5jbHVkZSAiaTkxNV9hY3RpdmUuaCIKLSNpbmNsdWRlICJpOTE1X3JlcXVlc3QuaCIKLQotc3Ry
dWN0IGludGVsX2VuZ2luZV9wb29sX25vZGUgKgotaW50ZWxfZW5naW5lX2dldF9wb29sKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgc2l6ZV90IHNpemUpOwotCi1zdGF0aWMgaW5saW5l
IGludAotaW50ZWxfZW5naW5lX3Bvb2xfbWFya19hY3RpdmUoc3RydWN0IGludGVsX2VuZ2luZV9w
b29sX25vZGUgKm5vZGUsCi0JCQkgICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKLXsKLQly
ZXR1cm4gaTkxNV9hY3RpdmVfYWRkX3JlcXVlc3QoJm5vZGUtPmFjdGl2ZSwgcnEpOwotfQotCi1z
dGF0aWMgaW5saW5lIHZvaWQKLWludGVsX2VuZ2luZV9wb29sX3B1dChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX3Bvb2xfbm9kZSAqbm9kZSkKLXsKLQlpOTE1X2FjdGl2ZV9yZWxlYXNlKCZub2RlLT5hY3Rp
dmUpOwotfQotCi12b2lkIGludGVsX2VuZ2luZV9wb29sX2luaXQoc3RydWN0IGludGVsX2VuZ2lu
ZV9wb29sICpwb29sKTsKLXZvaWQgaW50ZWxfZW5naW5lX3Bvb2xfcGFyayhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX3Bvb2wgKnBvb2wpOwotdm9pZCBpbnRlbF9lbmdpbmVfcG9vbF9maW5pKHN0cnVjdCBp
bnRlbF9lbmdpbmVfcG9vbCAqcG9vbCk7Ci0KLSNlbmRpZiAvKiBJTlRFTF9FTkdJTkVfUE9PTF9I
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlw
ZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmluZGV4
IDAxZDRiZDc4MWEyZi4uZjNjOWQzMDJlY2Y4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMjIsNyArMjIsNiBAQAogI2luY2x1ZGUgImk5MTVf
cG11LmgiCiAjaW5jbHVkZSAiaTkxNV9wcmlvbGlzdF90eXBlcy5oIgogI2luY2x1ZGUgImk5MTVf
c2VsZnRlc3QuaCIKLSNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG9vbF90eXBlcy5oIgogI2luY2x1
ZGUgImludGVsX3NzZXUuaCIKICNpbmNsdWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgogI2lu
Y2x1ZGUgImludGVsX3dha2VyZWYuaCIKQEAgLTQwMSwxMyArNDAwLDYgQEAgc3RydWN0IGludGVs
X2VuZ2luZV9jcyB7CiAJCXN0cnVjdCBpOTE1X3BtdV9zYW1wbGUgc2FtcGxlW0k5MTVfRU5HSU5F
X1NBTVBMRV9DT1VOVF07CiAJfSBwbXU7CiAKLQkvKgotCSAqIEEgcG9vbCBvZiBvYmplY3RzIHRv
IHVzZSBhcyBzaGFkb3cgY29waWVzIG9mIGNsaWVudCBiYXRjaCBidWZmZXJzCi0JICogd2hlbiB0
aGUgY29tbWFuZCBwYXJzZXIgaXMgZW5hYmxlZC4gUHJldmVudHMgdGhlIGNsaWVudCBmcm9tCi0J
ICogbW9kaWZ5aW5nIHRoZSBiYXRjaCBjb250ZW50cyBhZnRlciBzb2Z0d2FyZSBwYXJzaW5nLgot
CSAqLwotCXN0cnVjdCBpbnRlbF9lbmdpbmVfcG9vbCBwb29sOwotCiAJc3RydWN0IGludGVsX2h3
X3N0YXR1c19wYWdlIHN0YXR1c19wYWdlOwogCXN0cnVjdCBpOTE1X2N0eF93b3JrYXJvdW5kcyB3
YV9jdHg7CiAJc3RydWN0IGk5MTVfd2FfbGlzdCBjdHhfd2FfbGlzdDsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ndC5jCmluZGV4IDFjOTljYzcyMzA1YS4uOGFlMzdlYTM4Mzg5IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2d0LmMKQEAgLTcsNiArNyw3IEBACiAjaW5jbHVkZSAiaTkxNV9kcnYu
aCIKICNpbmNsdWRlICJpbnRlbF9jb250ZXh0LmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3QuaCIKKyNp
bmNsdWRlICJpbnRlbF9ndF9idWZmZXJfcG9vbC5oIgogI2luY2x1ZGUgImludGVsX2d0X3BtLmgi
CiAjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVzdHMuaCIKICNpbmNsdWRlICJpbnRlbF9tb2NzLmgi
CkBAIC0yNiw2ICsyNyw3IEBAIHZvaWQgaW50ZWxfZ3RfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxf
Z3QgKmd0LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlJTklUX0xJU1RfSEVBRCgm
Z3QtPmNsb3NlZF92bWEpOwogCXNwaW5fbG9ja19pbml0KCZndC0+Y2xvc2VkX2xvY2spOwogCisJ
aW50ZWxfZ3RfaW5pdF9idWZmZXJfcG9vbChndCk7CiAJaW50ZWxfZ3RfaW5pdF9yZXNldChndCk7
CiAJaW50ZWxfZ3RfaW5pdF9yZXF1ZXN0cyhndCk7CiAJaW50ZWxfZ3RfaW5pdF90aW1lbGluZXMo
Z3QpOwpAQCAtNjYyLDYgKzY2NCw3IEBAIHZvaWQgaW50ZWxfZ3RfZHJpdmVyX3JlbGVhc2Uoc3Ry
dWN0IGludGVsX2d0ICpndCkKIAogCWludGVsX2d0X3BtX2ZpbmkoZ3QpOwogCWludGVsX2d0X2Zp
bmlfc2NyYXRjaChndCk7CisJaW50ZWxfZ3RfZmluaV9idWZmZXJfcG9vbChndCk7CiB9CiAKIHZv
aWQgaW50ZWxfZ3RfZHJpdmVyX2xhdGVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3Bvb2wuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2J1ZmZlcl9wb29sLmMKc2ltaWxhcml0eSBp
bmRleCA1NSUKcmVuYW1lIGZyb20gZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3Bvb2wuYwpyZW5hbWUgdG8gZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVy
X3Bvb2wuYwppbmRleCAzOTcxODY4MTgzMDUuLjhkNGQ2NTZkZTAxYSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3Bvb2wuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbC5jCkBAIC04LDE1ICs4LDE1IEBACiAK
ICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZV9wbS5oIgotI2lu
Y2x1ZGUgImludGVsX2VuZ2luZV9wb29sLmgiCisjaW5jbHVkZSAiaW50ZWxfZ3RfYnVmZmVyX3Bv
b2wuaCIKIAotc3RhdGljIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnRvX2VuZ2luZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX3Bvb2wgKnBvb2wpCitzdGF0aWMgc3RydWN0IGludGVsX2d0ICp0b19ndChz
dHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wgKnBvb2wpCiB7Ci0JcmV0dXJuIGNvbnRhaW5lcl9v
Zihwb29sLCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzLCBwb29sKTsKKwlyZXR1cm4gY29udGFpbmVy
X29mKHBvb2wsIHN0cnVjdCBpbnRlbF9ndCwgYnVmZmVyX3Bvb2wpOwogfQogCiBzdGF0aWMgc3Ry
dWN0IGxpc3RfaGVhZCAqCi1idWNrZXRfZm9yX3NpemUoc3RydWN0IGludGVsX2VuZ2luZV9wb29s
ICpwb29sLCBzaXplX3Qgc3opCitidWNrZXRfZm9yX3NpemUoc3RydWN0IGludGVsX2d0X2J1ZmZl
cl9wb29sICpwb29sLCBzaXplX3Qgc3opCiB7CiAJaW50IG47CiAKQEAgLTMyLDE2ICszMiw1MCBA
QCBidWNrZXRfZm9yX3NpemUoc3RydWN0IGludGVsX2VuZ2luZV9wb29sICpwb29sLCBzaXplX3Qg
c3opCiAJcmV0dXJuICZwb29sLT5jYWNoZV9saXN0W25dOwogfQogCi1zdGF0aWMgdm9pZCBub2Rl
X2ZyZWUoc3RydWN0IGludGVsX2VuZ2luZV9wb29sX25vZGUgKm5vZGUpCitzdGF0aWMgdm9pZCBu
b2RlX2ZyZWUoc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5vZGUpCiB7CiAJaTkx
NV9nZW1fb2JqZWN0X3B1dChub2RlLT5vYmopOwogCWk5MTVfYWN0aXZlX2ZpbmkoJm5vZGUtPmFj
dGl2ZSk7CiAJa2ZyZWUobm9kZSk7CiB9CiAKK3N0YXRpYyB2b2lkIHBvb2xfZnJlZV93b3JrKHN0
cnVjdCB3b3JrX3N0cnVjdCAqd3JrKQoreworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbCAq
cG9vbCA9CisJCWNvbnRhaW5lcl9vZih3cmssIHR5cGVvZigqcG9vbCksIHdvcmsud29yayk7CisJ
c3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5vZGUsICpuZXh0OworCXVuc2lnbmVk
IGxvbmcgb2xkID0gamlmZmllcyAtIEhaOworCWJvb2wgYWN0aXZlID0gZmFsc2U7CisJTElTVF9I
RUFEKHN0YWxlKTsKKwlpbnQgbjsKKworCS8qIEZyZWUgYnVmZmVycyB0aGF0IGhhdmUgbm90IGJl
ZW4gdXNlZCBpbiB0aGUgcGFzdCBzZWNvbmQgKi8KKwlzcGluX2xvY2tfaXJxKCZwb29sLT5sb2Nr
KTsKKwlmb3IgKG4gPSAwOyBuIDwgQVJSQVlfU0laRShwb29sLT5jYWNoZV9saXN0KTsgbisrKSB7
CisJCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3QgPSAmcG9vbC0+Y2FjaGVfbGlzdFtuXTsKKworCQkv
KiBNb3N0IHJlY2VudCBhdCBoZWFkOyBvbGRlc3QgYXQgdGFpbCAqLworCQlsaXN0X2Zvcl9lYWNo
X2VudHJ5X3NhZmVfcmV2ZXJzZShub2RlLCBuZXh0LCBsaXN0LCBsaW5rKSB7CisJCQlpZiAodGlt
ZV9iZWZvcmUobm9kZS0+YWdlLCBvbGQpKQorCQkJCWJyZWFrOworCisJCQlsaXN0X21vdmUoJm5v
ZGUtPmxpbmssICZzdGFsZSk7CisJCX0KKwkJYWN0aXZlIHw9ICFsaXN0X2VtcHR5KGxpc3QpOwor
CX0KKwlzcGluX3VubG9ja19pcnEoJnBvb2wtPmxvY2spOworCisJbGlzdF9mb3JfZWFjaF9lbnRy
eV9zYWZlKG5vZGUsIG5leHQsICZzdGFsZSwgbGluaykKKwkJbm9kZV9mcmVlKG5vZGUpOworCisJ
aWYgKGFjdGl2ZSkKKwkJc2NoZWR1bGVfZGVsYXllZF93b3JrKCZwb29sLT53b3JrLAorCQkJCSAg
ICAgIHJvdW5kX2ppZmZpZXNfdXBfcmVsYXRpdmUoSFopKTsKK30KKwogc3RhdGljIGludCBwb29s
X2FjdGl2ZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIHsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5l
X3Bvb2xfbm9kZSAqbm9kZSA9CisJc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5v
ZGUgPQogCQljb250YWluZXJfb2YocmVmLCB0eXBlb2YoKm5vZGUpLCBhY3RpdmUpOwogCXN0cnVj
dCBkbWFfcmVzdiAqcmVzdiA9IG5vZGUtPm9iai0+YmFzZS5yZXN2OwogCWludCBlcnI7CkBAIC02
NCwyOSArOTgsMzEgQEAgc3RhdGljIGludCBwb29sX2FjdGl2ZShzdHJ1Y3QgaTkxNV9hY3RpdmUg
KnJlZikKIF9faTkxNV9hY3RpdmVfY2FsbAogc3RhdGljIHZvaWQgcG9vbF9yZXRpcmUoc3RydWN0
IGk5MTVfYWN0aXZlICpyZWYpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9wb29sX25vZGUgKm5v
ZGUgPQorCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlID0KIAkJY29udGFp
bmVyX29mKHJlZiwgdHlwZW9mKCpub2RlKSwgYWN0aXZlKTsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5l
X3Bvb2wgKnBvb2wgPSBub2RlLT5wb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbCAq
cG9vbCA9IG5vZGUtPnBvb2w7CiAJc3RydWN0IGxpc3RfaGVhZCAqbGlzdCA9IGJ1Y2tldF9mb3Jf
c2l6ZShwb29sLCBub2RlLT5vYmotPmJhc2Uuc2l6ZSk7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsK
IAotCUdFTV9CVUdfT04oIWludGVsX2VuZ2luZV9wbV9pc19hd2FrZSh0b19lbmdpbmUocG9vbCkp
KTsKLQogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhub2RlLT5vYmopOwogCiAJLyogUmV0
dXJuIHRoaXMgb2JqZWN0IHRvIHRoZSBzaHJpbmtlciBwb29sICovCiAJaTkxNV9nZW1fb2JqZWN0
X21ha2VfcHVyZ2VhYmxlKG5vZGUtPm9iaik7CiAKIAlzcGluX2xvY2tfaXJxc2F2ZSgmcG9vbC0+
bG9jaywgZmxhZ3MpOworCW5vZGUtPmFnZSA9IGppZmZpZXM7CiAJbGlzdF9hZGQoJm5vZGUtPmxp
bmssIGxpc3QpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnBvb2wtPmxvY2ssIGZsYWdzKTsK
KworCXNjaGVkdWxlX2RlbGF5ZWRfd29yaygmcG9vbC0+d29yaywKKwkJCSAgICAgIHJvdW5kX2pp
ZmZpZXNfdXBfcmVsYXRpdmUoSFopKTsKIH0KIAotc3RhdGljIHN0cnVjdCBpbnRlbF9lbmdpbmVf
cG9vbF9ub2RlICoKLW5vZGVfY3JlYXRlKHN0cnVjdCBpbnRlbF9lbmdpbmVfcG9vbCAqcG9vbCwg
c2l6ZV90IHN6KQorc3RhdGljIHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICoKK25v
ZGVfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbCAqcG9vbCwgc2l6ZV90IHN6KQog
ewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IHRvX2VuZ2luZShwb29sKTsKLQlz
dHJ1Y3QgaW50ZWxfZW5naW5lX3Bvb2xfbm9kZSAqbm9kZTsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0
ID0gdG9fZ3QocG9vbCk7CisJc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKm5vZGU7
CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKIAogCW5vZGUgPSBrbWFsbG9jKHNp
emVvZigqbm9kZSksCkBAIC05Nyw3ICsxMzMsNyBAQCBub2RlX2NyZWF0ZShzdHJ1Y3QgaW50ZWxf
ZW5naW5lX3Bvb2wgKnBvb2wsIHNpemVfdCBzeikKIAlub2RlLT5wb29sID0gcG9vbDsKIAlpOTE1
X2FjdGl2ZV9pbml0KCZub2RlLT5hY3RpdmUsIHBvb2xfYWN0aXZlLCBwb29sX3JldGlyZSk7CiAK
LQlvYmogPSBpOTE1X2dlbV9vYmplY3RfY3JlYXRlX2ludGVybmFsKGVuZ2luZS0+aTkxNSwgc3op
OworCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoZ3QtPmk5MTUsIHN6KTsK
IAlpZiAoSVNfRVJSKG9iaikpIHsKIAkJaTkxNV9hY3RpdmVfZmluaSgmbm9kZS0+YWN0aXZlKTsK
IAkJa2ZyZWUobm9kZSk7CkBAIC0xMTAsMjYgKzE0NiwxNSBAQCBub2RlX2NyZWF0ZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX3Bvb2wgKnBvb2wsIHNpemVfdCBzeikKIAlyZXR1cm4gbm9kZTsKIH0KIAot
c3RhdGljIHN0cnVjdCBpbnRlbF9lbmdpbmVfcG9vbCAqbG9va3VwX3Bvb2woc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQorc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKgor
aW50ZWxfZ3RfZ2V0X2J1ZmZlcl9wb29sKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIHNpemVfdCBzaXpl
KQogewotCWlmIChpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChlbmdpbmUpKQotCQllbmdpbmUgPSBp
bnRlbF92aXJ0dWFsX2VuZ2luZV9nZXRfc2libGluZyhlbmdpbmUsIDApOwotCi0JR0VNX0JVR19P
TighZW5naW5lKTsKLQlyZXR1cm4gJmVuZ2luZS0+cG9vbDsKLX0KLQotc3RydWN0IGludGVsX2Vu
Z2luZV9wb29sX25vZGUgKgotaW50ZWxfZW5naW5lX2dldF9wb29sKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwgc2l6ZV90IHNpemUpCi17Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9wb29s
ICpwb29sID0gbG9va3VwX3Bvb2woZW5naW5lKTsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX3Bvb2xf
bm9kZSAqbm9kZTsKKwlzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wgKnBvb2wgPSAmZ3QtPmJ1
ZmZlcl9wb29sOworCXN0cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlOwogCXN0
cnVjdCBsaXN0X2hlYWQgKmxpc3Q7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAlpbnQgcmV0Owog
Ci0JR0VNX0JVR19PTighaW50ZWxfZW5naW5lX3BtX2lzX2F3YWtlKHRvX2VuZ2luZShwb29sKSkp
OwotCiAJc2l6ZSA9IFBBR0VfQUxJR04oc2l6ZSk7CiAJbGlzdCA9IGJ1Y2tldF9mb3Jfc2l6ZShw
b29sLCBzaXplKTsKIApAQCAtMTU3LDM0ICsxODIsNDEgQEAgaW50ZWxfZW5naW5lX2dldF9wb29s
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgc2l6ZV90IHNpemUpCiAJcmV0dXJuIG5v
ZGU7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3Bvb2xfaW5pdChzdHJ1Y3QgaW50ZWxfZW5naW5l
X3Bvb2wgKnBvb2wpCit2b2lkIGludGVsX2d0X2luaXRfYnVmZmVyX3Bvb2woc3RydWN0IGludGVs
X2d0ICpndCkKIHsKKwlzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wgKnBvb2wgPSAmZ3QtPmJ1
ZmZlcl9wb29sOwogCWludCBuOwogCiAJc3Bpbl9sb2NrX2luaXQoJnBvb2wtPmxvY2spOwogCWZv
ciAobiA9IDA7IG4gPCBBUlJBWV9TSVpFKHBvb2wtPmNhY2hlX2xpc3QpOyBuKyspCiAJCUlOSVRf
TElTVF9IRUFEKCZwb29sLT5jYWNoZV9saXN0W25dKTsKKwlJTklUX0RFTEFZRURfV09SSygmcG9v
bC0+d29yaywgcG9vbF9mcmVlX3dvcmspOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9wb29sX3Bh
cmsoc3RydWN0IGludGVsX2VuZ2luZV9wb29sICpwb29sKQorc3RhdGljIHZvaWQgcG9vbF9mcmVl
X2Zpbmkoc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sICpwb29sKQogewogCWludCBuOwogCisJ
c3Bpbl9sb2NrX2lycSgmcG9vbC0+bG9jayk7CiAJZm9yIChuID0gMDsgbiA8IEFSUkFZX1NJWkUo
cG9vbC0+Y2FjaGVfbGlzdCk7IG4rKykgeworCQlzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xf
bm9kZSAqbm9kZSwgKm5leHQ7CiAJCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3QgPSAmcG9vbC0+Y2Fj
aGVfbGlzdFtuXTsKLQkJc3RydWN0IGludGVsX2VuZ2luZV9wb29sX25vZGUgKm5vZGUsICpubjsK
IAotCQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUobm9kZSwgbm4sIGxpc3QsIGxpbmspCisJCWxp
c3RfZm9yX2VhY2hfZW50cnlfc2FmZShub2RlLCBuZXh0LCBsaXN0LCBsaW5rKQogCQkJbm9kZV9m
cmVlKG5vZGUpOwotCiAJCUlOSVRfTElTVF9IRUFEKGxpc3QpOwogCX0KKwlzcGluX3VubG9ja19p
cnEoJnBvb2wtPmxvY2spOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9wb29sX2Zpbmkoc3RydWN0
IGludGVsX2VuZ2luZV9wb29sICpwb29sKQordm9pZCBpbnRlbF9ndF9maW5pX2J1ZmZlcl9wb29s
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7CisJc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sICpw
b29sID0gJmd0LT5idWZmZXJfcG9vbDsKIAlpbnQgbjsKIAorCWlmIChjYW5jZWxfZGVsYXllZF93
b3JrX3N5bmMoJnBvb2wtPndvcmspKQorCQlwb29sX2ZyZWVfZmluaShwb29sKTsKKwogCWZvciAo
biA9IDA7IG4gPCBBUlJBWV9TSVpFKHBvb2wtPmNhY2hlX2xpc3QpOyBuKyspCiAJCUdFTV9CVUdf
T04oIWxpc3RfZW1wdHkoJnBvb2wtPmNhY2hlX2xpc3Rbbl0pKTsKIH0KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2J1ZmZlcl9wb29sLmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAwMDAwMC4uMDc1NWI1YWRjNWIyCi0tLSAvZGV2L251bGwKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVyX3Bvb2wuaApAQCAtMCwwICsxLDM3
IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAorICoKKyAqIENvcHlyaWdo
dCDCqSAyMDE0LTIwMTggSW50ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaWZuZGVmIElOVEVMX0dU
X0JVRkZFUl9QT09MX0gKKyNkZWZpbmUgSU5URUxfR1RfQlVGRkVSX1BPT0xfSAorCisjaW5jbHVk
ZSA8bGludXgvdHlwZXMuaD4KKworI2luY2x1ZGUgImk5MTVfYWN0aXZlLmgiCisjaW5jbHVkZSAi
aW50ZWxfZ3RfYnVmZmVyX3Bvb2xfdHlwZXMuaCIKKworc3RydWN0IGludGVsX2d0Oworc3RydWN0
IGk5MTVfcmVxdWVzdDsKKworc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgKgoraW50
ZWxfZ3RfZ2V0X2J1ZmZlcl9wb29sKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIHNpemVfdCBzaXplKTsK
Kworc3RhdGljIGlubGluZSBpbnQKK2ludGVsX2d0X2J1ZmZlcl9wb29sX21hcmtfYWN0aXZlKHN0
cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbF9ub2RlICpub2RlLAorCQkJCSBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKK3sKKwlyZXR1cm4gaTkxNV9hY3RpdmVfYWRkX3JlcXVlc3QoJm5vZGUtPmFj
dGl2ZSwgcnEpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK2ludGVsX2d0X2J1ZmZlcl9wb29s
X3B1dChzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqbm9kZSkKK3sKKwlpOTE1X2Fj
dGl2ZV9yZWxlYXNlKCZub2RlLT5hY3RpdmUpOworfQorCit2b2lkIGludGVsX2d0X2luaXRfYnVm
ZmVyX3Bvb2woc3RydWN0IGludGVsX2d0ICpndCk7Cit2b2lkIGludGVsX2d0X2ZpbmlfYnVmZmVy
X3Bvb2woc3RydWN0IGludGVsX2d0ICpndCk7CisKKyNlbmRpZiAvKiBJTlRFTF9HVF9CVUZGRVJf
UE9PTF9IICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfcG9vbF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfYnVmZmVy
X3Bvb2xfdHlwZXMuaApzaW1pbGFyaXR5IGluZGV4IDU0JQpyZW5hbWUgZnJvbSBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG9vbF90eXBlcy5oCnJlbmFtZSB0byBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9idWZmZXJfcG9vbF90eXBlcy5oCmluZGV4IGUzMWVl
MzYxYjc2Zi4uZTI4YmRkYTc3MWVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfcG9vbF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2d0X2J1ZmZlcl9wb29sX3R5cGVzLmgKQEAgLTQsMjYgKzQsMjkgQEAKICAqIENvcHly
aWdodCDCqSAyMDE0LTIwMTggSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCi0jaWZuZGVmIElOVEVM
X0VOR0lORV9QT09MX1RZUEVTX0gKLSNkZWZpbmUgSU5URUxfRU5HSU5FX1BPT0xfVFlQRVNfSAor
I2lmbmRlZiBJTlRFTF9HVF9CVUZGRVJfUE9PTF9UWVBFU19ICisjZGVmaW5lIElOVEVMX0dUX0JV
RkZFUl9QT09MX1RZUEVTX0gKIAogI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KICNpbmNsdWRlIDxs
aW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3dvcmtxdWV1ZS5oPgogCiAjaW5jbHVk
ZSAiaTkxNV9hY3RpdmVfdHlwZXMuaCIKIAogc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Q7CiAK
LXN0cnVjdCBpbnRlbF9lbmdpbmVfcG9vbCB7CitzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2wg
ewogCXNwaW5sb2NrX3QgbG9jazsKIAlzdHJ1Y3QgbGlzdF9oZWFkIGNhY2hlX2xpc3RbNF07CisJ
c3RydWN0IGRlbGF5ZWRfd29yayB3b3JrOwogfTsKIAotc3RydWN0IGludGVsX2VuZ2luZV9wb29s
X25vZGUgeworc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sX25vZGUgewogCXN0cnVjdCBpOTE1
X2FjdGl2ZSBhY3RpdmU7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKIAlzdHJ1
Y3QgbGlzdF9oZWFkIGxpbms7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9wb29sICpwb29sOworCXN0
cnVjdCBpbnRlbF9ndF9idWZmZXJfcG9vbCAqcG9vbDsKKwl1bnNpZ25lZCBsb25nIGFnZTsKIH07
CiAKLSNlbmRpZiAvKiBJTlRFTF9FTkdJTkVfUE9PTF9UWVBFU19IICovCisjZW5kaWYgLyogSU5U
RUxfR1RfQlVGRkVSX1BPT0xfVFlQRVNfSCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3R5cGVzLmgKaW5kZXggOTY4OTBkZDEyYjVmLi4xMjc3YzRlM2E4MmUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaApAQCAtMTcsNiArMTcsNyBAQAogCiAjaW5j
bHVkZSAiaTkxNV92bWEuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfdHlwZXMuaCIKKyNpbmNs
dWRlICJpbnRlbF9ndF9idWZmZXJfcG9vbF90eXBlcy5oIgogI2luY2x1ZGUgImludGVsX2xsY190
eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3Jlc2V0X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxf
cmM2X3R5cGVzLmgiCkBAIC05Nyw2ICs5OCwxNiBAQCBzdHJ1Y3QgaW50ZWxfZ3QgewogCSAqIFJl
c2VydmVkIGZvciBleGNsdXNpdmUgdXNlIGJ5IHRoZSBrZXJuZWwuCiAJICovCiAJc3RydWN0IGk5
MTVfYWRkcmVzc19zcGFjZSAqdm07CisKKwkvKgorCSAqIEEgcG9vbCBvZiBvYmplY3RzIHRvIHVz
ZSBhcyBzaGFkb3cgY29waWVzIG9mIGNsaWVudCBiYXRjaCBidWZmZXJzCisJICogd2hlbiB0aGUg
Y29tbWFuZCBwYXJzZXIgaXMgZW5hYmxlZC4gUHJldmVudHMgdGhlIGNsaWVudCBmcm9tCisJICog
bW9kaWZ5aW5nIHRoZSBiYXRjaCBjb250ZW50cyBhZnRlciBzb2Z0d2FyZSBwYXJzaW5nLgorCSAq
CisJICogQnVmZmVycyBvbGRlciB0aGFuIDFzIGFyZSBwZXJpb2RpY2FsbHkgcmVhcGVkIGZyb20g
dGhlIHBvb2wsCisJICogb3IgbWF5IGJlIHJlY2xhaW1lZCBieSB0aGUgc2hyaW5rZXIgYmVmb3Jl
IHRoZW4uCisJICovCisJc3RydWN0IGludGVsX2d0X2J1ZmZlcl9wb29sIGJ1ZmZlcl9wb29sOwog
fTsKIAogZW51bSBpbnRlbF9ndF9zY3JhdGNoX2ZpZWxkIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9t
b2NrX2VuZ2luZS5jCmluZGV4IDRhNTNkZWQ3YzJkZC4uYjhkZDNjYmM4Njk2IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKQEAgLTI4LDcgKzI4LDYgQEAKICNpbmNsdWRlICJp
OTE1X2Rydi5oIgogI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJpbnRlbF9l
bmdpbmVfcG0uaCIKLSNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG9vbC5oIgogCiAjaW5jbHVkZSAi
bW9ja19lbmdpbmUuaCIKICNpbmNsdWRlICJzZWxmdGVzdHMvbW9ja19yZXF1ZXN0LmgiCkBAIC0z
MjgsNyArMzI3LDYgQEAgaW50IG1vY2tfZW5naW5lX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQogCWludGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cyhlbmdpbmUpOwogCWludGVs
X2VuZ2luZV9pbml0X19wbShlbmdpbmUpOwogCWludGVsX2VuZ2luZV9pbml0X3JldGlyZShlbmdp
bmUpOwotCWludGVsX2VuZ2luZV9wb29sX2luaXQoJmVuZ2luZS0+cG9vbCk7CiAKIAljZSA9IGNy
ZWF0ZV9rZXJuZWxfY29udGV4dChlbmdpbmUpOwogCWlmIChJU19FUlIoY2UpKQotLSAKMi4yMC4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

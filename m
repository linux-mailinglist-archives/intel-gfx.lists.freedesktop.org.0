Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BE4197BB3C
	for <lists+intel-gfx@lfdr.de>; Wed, 31 Jul 2019 10:11:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2D2FA8995F;
	Wed, 31 Jul 2019 08:11:40 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 336E38995F
 for <intel-gfx@lists.freedesktop.org>; Wed, 31 Jul 2019 08:11:38 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17752009-1500050 
 for multiple; Wed, 31 Jul 2019 09:11:27 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 31 Jul 2019 09:11:26 +0100
Message-Id: <20190731081126.9139-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc0
In-Reply-To: <20190730154853.19157-1-chris@chris-wilson.co.uk>
References: <20190730154853.19157-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3] drm/i915/selftests: Pass intel_context to
 igt_spinner
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGVhY2ggaWd0X3NwaW5uZXIgdG8gb25seSB1c2Ugb3VyIGludGVybmFsIHN0cnVjdHMsIGRlY291
cGxpbmcgdGhlCmludGVyZmFjZSBmcm9tIHRoZSBHRU0gY29udGV4dHMuIFRoaXMgbWFrZXMgaXQg
ZWFzaWVyIHRvIGF2b2lkCnJlcXVpcmluZyBjZS0+Z2VtX2NvbnRleHQgYmFjayByZWZlcmVuY2Vz
IGZvciBrZXJuZWxfY29udGV4dCB0aGF0IG1heQpoYXZlIHRoZW0gaW4gZnV0dXJlLgoKdjI6IExp
ZnQgZW5naW5lIGxvY2sgdG8gdmVyaWZ5X3dhKCkgY2FsbGVyLgp2MzogTGVzcyB0aGFuIHYyLCBi
dXQgbW9yZSBzbwoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxz
b24uY28udWs+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgot
LS0KIC4uLi9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQuYyB8ICA0MyAr
KystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyAgICAgICAgfCAx
MTUgKysrKysrKysrKy0tLS0tLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3dvcmth
cm91bmRzLmMgICAgfCAgMjggKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9p
Z3Rfc3Bpbm5lci5jICB8ICAyNSArKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMv
aWd0X3NwaW5uZXIuaCAgfCAgIDYgKy0KIDUgZmlsZXMgY2hhbmdlZCwgMTE3IGluc2VydGlvbnMo
KyksIDEwMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9zZWxmdGVzdHMvaTkxNV9nZW1fY29udGV4dC5jCmluZGV4IDdmOWY2NzAxYjMyYy4uYzI0NDMw
MzUyYTM4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5
MTVfZ2VtX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3Rz
L2k5MTVfZ2VtX2NvbnRleHQuYwpAQCAtODIxLDggKzgyMSw3IEBAIGVtaXRfcnBjc19xdWVyeShz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogI2RlZmluZSBURVNUX1JFU0VUCUJJVCgy
KQogCiBzdGF0aWMgaW50Ci1fX3NzZXVfcHJlcGFyZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSwKLQkgICAgICAgY29uc3QgY2hhciAqbmFtZSwKK19fc3NldV9wcmVwYXJlKGNvbnN0IGNo
YXIgKm5hbWUsCiAJICAgICAgIHVuc2lnbmVkIGludCBmbGFncywKIAkgICAgICAgc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlLAogCSAgICAgICBzdHJ1Y3QgaWd0X3NwaW5uZXIgKipzcGluKQpAQCAt
ODM4LDE0ICs4MzcsMTEgQEAgX19zc2V1X3ByZXBhcmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsCiAJaWYgKCEqc3BpbikKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQlyZXQgPSBpZ3Rfc3Bp
bm5lcl9pbml0KCpzcGluLCBpOTE1KTsKKwlyZXQgPSBpZ3Rfc3Bpbm5lcl9pbml0KCpzcGluLCBj
ZS0+ZW5naW5lLT5ndCk7CiAJaWYgKHJldCkKIAkJZ290byBlcnJfZnJlZTsKIAotCXJxID0gaWd0
X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoKnNwaW4sCi0JCQkJCWNlLT5nZW1fY29udGV4dCwKLQkJ
CQkJY2UtPmVuZ2luZSwKLQkJCQkJTUlfTk9PUCk7CisJcnEgPSBpZ3Rfc3Bpbm5lcl9jcmVhdGVf
cmVxdWVzdCgqc3BpbiwgY2UsIE1JX05PT1ApOwogCWlmIChJU19FUlIocnEpKSB7CiAJCXJldCA9
IFBUUl9FUlIocnEpOwogCQlnb3RvIGVycl9maW5pOwpAQCAtODcxLDggKzg2Nyw3IEBAIF9fc3Nl
dV9wcmVwYXJlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogfQogCiBzdGF0aWMgaW50
Ci1fX3JlYWRfc2xpY2VfY291bnQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCSAg
IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKK19fcmVhZF9zbGljZV9jb3VudChzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCiAJCSAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJ
CSAgIHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3BpbiwKIAkJICAgdTMyICpycGNzKQpAQCAtOTAxLDcg
Kzg5Niw3IEBAIF9fcmVhZF9zbGljZV9jb3VudChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKIAkJcmV0dXJuIHJldDsKIAl9CiAKLQlpZiAoSU5URUxfR0VOKGk5MTUpID49IDExKSB7CisJ
aWYgKElOVEVMX0dFTihjZS0+ZW5naW5lLT5pOTE1KSA+PSAxMSkgewogCQlzX21hc2sgPSBHRU4x
MV9SUENTX1NfQ05UX01BU0s7CiAJCXNfc2hpZnQgPSBHRU4xMV9SUENTX1NfQ05UX1NISUZUOwog
CX0gZWxzZSB7CkBAIC05NDQsOCArOTM5LDcgQEAgX19jaGVja19ycGNzKGNvbnN0IGNoYXIgKm5h
bWUsIHUzMiBycGNzLCBpbnQgc2xpY2VzLCB1bnNpZ25lZCBpbnQgZXhwZWN0ZWQsCiB9CiAKIHN0
YXRpYyBpbnQKLV9fc3NldV9maW5pc2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0J
ICAgICAgY29uc3QgY2hhciAqbmFtZSwKK19fc3NldV9maW5pc2goY29uc3QgY2hhciAqbmFtZSwK
IAkgICAgICB1bnNpZ25lZCBpbnQgZmxhZ3MsCiAJICAgICAgc3RydWN0IGludGVsX2NvbnRleHQg
KmNlLAogCSAgICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCkBAIC05NjIsMTQg
Kzk1NiwxMyBAQCBfX3NzZXVfZmluaXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAog
CQkJZ290byBvdXQ7CiAJfQogCi0JcmV0ID0gX19yZWFkX3NsaWNlX2NvdW50KGk5MTUsIGNlLCBv
YmosCisJcmV0ID0gX19yZWFkX3NsaWNlX2NvdW50KGNlLCBvYmosCiAJCQkJIGZsYWdzICYgVEVT
VF9SRVNFVCA/IE5VTEwgOiBzcGluLCAmcnBjcyk7CiAJcmV0ID0gX19jaGVja19ycGNzKG5hbWUs
IHJwY3MsIHJldCwgZXhwZWN0ZWQsICJDb250ZXh0IiwgIiEiKTsKIAlpZiAocmV0KQogCQlnb3Rv
IG91dDsKIAotCXJldCA9IF9fcmVhZF9zbGljZV9jb3VudChpOTE1LCBjZS0+ZW5naW5lLT5rZXJu
ZWxfY29udGV4dCwgb2JqLAotCQkJCSBOVUxMLCAmcnBjcyk7CisJcmV0ID0gX19yZWFkX3NsaWNl
X2NvdW50KGNlLT5lbmdpbmUtPmtlcm5lbF9jb250ZXh0LCBvYmosIE5VTEwsICZycGNzKTsKIAly
ZXQgPSBfX2NoZWNrX3JwY3MobmFtZSwgcnBjcywgcmV0LCBzbGljZXMsICJLZXJuZWwgY29udGV4
dCIsICIhIik7CiAKIG91dDoKQEAgLTk3NywxMSArOTcwLDEyIEBAIF9fc3NldV9maW5pc2goc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCWlndF9zcGlubmVyX2VuZChzcGluKTsKIAog
CWlmICgoZmxhZ3MgJiBURVNUX0lETEUpICYmIHJldCA9PSAwKSB7Ci0JCXJldCA9IGk5MTVfZ2Vt
X3dhaXRfZm9yX2lkbGUoaTkxNSwgMCwgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOworCQlyZXQgPSBp
OTE1X2dlbV93YWl0X2Zvcl9pZGxlKGNlLT5lbmdpbmUtPmk5MTUsCisJCQkJCSAgICAgMCwgTUFY
X1NDSEVEVUxFX1RJTUVPVVQpOwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIAotCQlyZXQg
PSBfX3JlYWRfc2xpY2VfY291bnQoaTkxNSwgY2UsIG9iaiwgTlVMTCwgJnJwY3MpOworCQlyZXQg
PSBfX3JlYWRfc2xpY2VfY291bnQoY2UsIG9iaiwgTlVMTCwgJnJwY3MpOwogCQlyZXQgPSBfX2No
ZWNrX3JwY3MobmFtZSwgcnBjcywgcmV0LCBleHBlY3RlZCwKIAkJCQkgICAiQ29udGV4dCIsICIg
YWZ0ZXIgaWRsZSEiKTsKIAl9CkBAIC05OTAsOCArOTg0LDcgQEAgX19zc2V1X2ZpbmlzaChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIH0KIAogc3RhdGljIGludAotX19zc2V1X3Rlc3Qo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JICAgIGNvbnN0IGNoYXIgKm5hbWUsCitf
X3NzZXVfdGVzdChjb25zdCBjaGFyICpuYW1lLAogCSAgICB1bnNpZ25lZCBpbnQgZmxhZ3MsCiAJ
ICAgIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkgICAgc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3QgKm9iaiwKQEAgLTEwMDAsNyArOTkzLDcgQEAgX19zc2V1X3Rlc3Qoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUsCiAJc3RydWN0IGlndF9zcGlubmVyICpzcGluID0gTlVMTDsKIAlp
bnQgcmV0OwogCi0JcmV0ID0gX19zc2V1X3ByZXBhcmUoaTkxNSwgbmFtZSwgZmxhZ3MsIGNlLCAm
c3Bpbik7CisJcmV0ID0gX19zc2V1X3ByZXBhcmUobmFtZSwgZmxhZ3MsIGNlLCAmc3Bpbik7CiAJ
aWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtMTAwOCw3ICsxMDAxLDcgQEAgX19zc2V1X3Rl
c3Qoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJaWYgKHJldCkKIAkJZ290byBvdXRf
c3BpbjsKIAotCXJldCA9IF9fc3NldV9maW5pc2goaTkxNSwgbmFtZSwgZmxhZ3MsIGNlLCBvYmos
CisJcmV0ID0gX19zc2V1X2ZpbmlzaChuYW1lLCBmbGFncywgY2UsIG9iaiwKIAkJCSAgICBod2Vp
Z2h0MzIoc3NldS5zbGljZV9tYXNrKSwgc3Bpbik7CiAKIG91dF9zcGluOgpAQCAtMTA4OCwyMiAr
MTA4MSwyMiBAQCBfX2lndF9jdHhfc3NldShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwK
IAkJZ290byBvdXRfY29udGV4dDsKIAogCS8qIEZpcnN0IHNldCB0aGUgZGVmYXVsdCBtYXNrLiAq
LwotCXJldCA9IF9fc3NldV90ZXN0KGk5MTUsIG5hbWUsIGZsYWdzLCBjZSwgb2JqLCBlbmdpbmUt
PnNzZXUpOworCXJldCA9IF9fc3NldV90ZXN0KG5hbWUsIGZsYWdzLCBjZSwgb2JqLCBlbmdpbmUt
PnNzZXUpOwogCWlmIChyZXQpCiAJCWdvdG8gb3V0X2ZhaWw7CiAKIAkvKiBUaGVuIHNldCBhIHBv
d2VyLWdhdGVkIGNvbmZpZ3VyYXRpb24uICovCi0JcmV0ID0gX19zc2V1X3Rlc3QoaTkxNSwgbmFt
ZSwgZmxhZ3MsIGNlLCBvYmosIHBnX3NzZXUpOworCXJldCA9IF9fc3NldV90ZXN0KG5hbWUsIGZs
YWdzLCBjZSwgb2JqLCBwZ19zc2V1KTsKIAlpZiAocmV0KQogCQlnb3RvIG91dF9mYWlsOwogCiAJ
LyogQmFjayB0byBkZWZhdWx0cy4gKi8KLQlyZXQgPSBfX3NzZXVfdGVzdChpOTE1LCBuYW1lLCBm
bGFncywgY2UsIG9iaiwgZW5naW5lLT5zc2V1KTsKKwlyZXQgPSBfX3NzZXVfdGVzdChuYW1lLCBm
bGFncywgY2UsIG9iaiwgZW5naW5lLT5zc2V1KTsKIAlpZiAocmV0KQogCQlnb3RvIG91dF9mYWls
OwogCiAJLyogT25lIGxhc3QgcG93ZXItZ2F0ZWQgY29uZmlndXJhdGlvbiBmb3IgdGhlIHJvYWQu
ICovCi0JcmV0ID0gX19zc2V1X3Rlc3QoaTkxNSwgbmFtZSwgZmxhZ3MsIGNlLCBvYmosIHBnX3Nz
ZXUpOworCXJldCA9IF9fc3NldV90ZXN0KG5hbWUsIGZsYWdzLCBjZSwgb2JqLCBwZ19zc2V1KTsK
IAlpZiAocmV0KQogCQlnb3RvIG91dF9mYWlsOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0
ZXN0X2xyYy5jCmluZGV4IDYwZjI3ZTUyZDI2Ny4uYjQwYjU3ZDJkYWFlIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwpAQCAtMjIsOSArMjIsOSBAQAogc3RhdGljIGludCBs
aXZlX3Nhbml0eWNoZWNrKHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSA9IGFyZzsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3RydWN0IGk5
MTVfZ2VtX2VuZ2luZXNfaXRlciBpdDsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4Owot
CWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAlz
dHJ1Y3QgaWd0X3NwaW5uZXIgc3BpbjsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKIAlpbnQg
ZXJyID0gLUVOT01FTTsKQEAgLTM1LDE3ICszNSwxNyBAQCBzdGF0aWMgaW50IGxpdmVfc2FuaXR5
Y2hlY2sodm9pZCAqYXJnKQogCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwog
CXdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldCgmaTkxNS0+cnVudGltZV9wbSk7CiAKLQlp
ZiAoaWd0X3NwaW5uZXJfaW5pdCgmc3BpbiwgaTkxNSkpCisJaWYgKGlndF9zcGlubmVyX2luaXQo
JnNwaW4sICZpOTE1LT5ndCkpCiAJCWdvdG8gZXJyX3VubG9jazsKIAogCWN0eCA9IGtlcm5lbF9j
b250ZXh0KGk5MTUpOwogCWlmICghY3R4KQogCQlnb3RvIGVycl9zcGluOwogCi0JZm9yX2VhY2hf
ZW5naW5lKGVuZ2luZSwgaTkxNSwgaWQpIHsKKwlmb3JfZWFjaF9nZW1fZW5naW5lKGNlLCBpOTE1
X2dlbV9jb250ZXh0X2xvY2tfZW5naW5lcyhjdHgpLCBpdCkgewogCQlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKIAotCQlycSA9IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluLCBjdHgs
IGVuZ2luZSwgTUlfTk9PUCk7CisJCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJnNw
aW4sIGNlLCBNSV9OT09QKTsKIAkJaWYgKElTX0VSUihycSkpIHsKIAkJCWVyciA9IFBUUl9FUlIo
cnEpOwogCQkJZ290byBlcnJfY3R4OwpAQCAtNjksNiArNjksNyBAQCBzdGF0aWMgaW50IGxpdmVf
c2FuaXR5Y2hlY2sodm9pZCAqYXJnKQogCiAJZXJyID0gMDsKIGVycl9jdHg6CisJaTkxNV9nZW1f
Y29udGV4dF91bmxvY2tfZW5naW5lcyhjdHgpOwogCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eCk7
CiBlcnJfc3BpbjoKIAlpZ3Rfc3Bpbm5lcl9maW5pKCZzcGluKTsKQEAgLTQ4MCw2ICs0ODEsMjQg
QEAgc3RhdGljIGludCBsaXZlX2J1c3l3YWl0X3ByZWVtcHQodm9pZCAqYXJnKQogCXJldHVybiBl
cnI7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKK3NwaW5uZXJfY3JlYXRlX3Jl
cXVlc3Qoc3RydWN0IGlndF9zcGlubmVyICpzcGluLAorCQkgICAgICAgc3RydWN0IGk5MTVfZ2Vt
X2NvbnRleHQgKmN0eCwKKwkJICAgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwK
KwkJICAgICAgIHUzMiBhcmIpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxOworCisJY2UgPSBpOTE1X2dlbV9jb250ZXh0X2dldF9lbmdpbmUo
Y3R4LCBlbmdpbmUtPmlkKTsKKwlpZiAoSVNfRVJSKGNlKSkKKwkJcmV0dXJuIEVSUl9DQVNUKGNl
KTsKKworCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3Qoc3BpbiwgY2UsIGFyYik7CisJ
aW50ZWxfY29udGV4dF9wdXQoY2UpOworCXJldHVybiBycTsKK30KKwogc3RhdGljIGludCBsaXZl
X3ByZWVtcHQodm9pZCAqYXJnKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0g
YXJnOwpAQCAtNDk5LDEwICs1MTgsMTAgQEAgc3RhdGljIGludCBsaXZlX3ByZWVtcHQodm9pZCAq
YXJnKQogCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCXdha2VyZWYgPSBp
bnRlbF9ydW50aW1lX3BtX2dldCgmaTkxNS0+cnVudGltZV9wbSk7CiAKLQlpZiAoaWd0X3NwaW5u
ZXJfaW5pdCgmc3Bpbl9oaSwgaTkxNSkpCisJaWYgKGlndF9zcGlubmVyX2luaXQoJnNwaW5faGks
ICZpOTE1LT5ndCkpCiAJCWdvdG8gZXJyX3VubG9jazsKIAotCWlmIChpZ3Rfc3Bpbm5lcl9pbml0
KCZzcGluX2xvLCBpOTE1KSkKKwlpZiAoaWd0X3NwaW5uZXJfaW5pdCgmc3Bpbl9sbywgJmk5MTUt
Pmd0KSkKIAkJZ290byBlcnJfc3Bpbl9oaTsKIAogCWN0eF9oaSA9IGtlcm5lbF9jb250ZXh0KGk5
MTUpOwpAQCAtNTI5LDggKzU0OCw4IEBAIHN0YXRpYyBpbnQgbGl2ZV9wcmVlbXB0KHZvaWQgKmFy
ZykKIAkJCWdvdG8gZXJyX2N0eF9sbzsKIAkJfQogCi0JCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRl
X3JlcXVlc3QoJnNwaW5fbG8sIGN0eF9sbywgZW5naW5lLAotCQkJCQkJTUlfQVJCX0NIRUNLKTsK
KwkJcnEgPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluX2xvLCBjdHhfbG8sIGVuZ2luZSwK
KwkJCQkJICAgIE1JX0FSQl9DSEVDSyk7CiAJCWlmIChJU19FUlIocnEpKSB7CiAJCQllcnIgPSBQ
VFJfRVJSKHJxKTsKIAkJCWdvdG8gZXJyX2N0eF9sbzsKQEAgLTU0NSw4ICs1NjQsOCBAQCBzdGF0
aWMgaW50IGxpdmVfcHJlZW1wdCh2b2lkICphcmcpCiAJCQlnb3RvIGVycl9jdHhfbG87CiAJCX0K
IAotCQlycSA9IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluX2hpLCBjdHhfaGksIGVu
Z2luZSwKLQkJCQkJCU1JX0FSQl9DSEVDSyk7CisJCXJxID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVz
dCgmc3Bpbl9oaSwgY3R4X2hpLCBlbmdpbmUsCisJCQkJCSAgICBNSV9BUkJfQ0hFQ0spOwogCQlp
ZiAoSVNfRVJSKHJxKSkgewogCQkJaWd0X3NwaW5uZXJfZW5kKCZzcGluX2xvKTsKIAkJCWVyciA9
IFBUUl9FUlIocnEpOwpAQCAtNjAzLDEwICs2MjIsMTAgQEAgc3RhdGljIGludCBsaXZlX2xhdGVf
cHJlZW1wdCh2b2lkICphcmcpCiAJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CiAJd2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZpOTE1LT5ydW50aW1lX3BtKTsKIAot
CWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZzcGluX2hpLCBpOTE1KSkKKwlpZiAoaWd0X3NwaW5uZXJf
aW5pdCgmc3Bpbl9oaSwgJmk5MTUtPmd0KSkKIAkJZ290byBlcnJfdW5sb2NrOwogCi0JaWYgKGln
dF9zcGlubmVyX2luaXQoJnNwaW5fbG8sIGk5MTUpKQorCWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZz
cGluX2xvLCAmaTkxNS0+Z3QpKQogCQlnb3RvIGVycl9zcGluX2hpOwogCiAJY3R4X2hpID0ga2Vy
bmVsX2NvbnRleHQoaTkxNSk7CkBAIC02MzIsOCArNjUxLDggQEAgc3RhdGljIGludCBsaXZlX2xh
dGVfcHJlZW1wdCh2b2lkICphcmcpCiAJCQlnb3RvIGVycl9jdHhfbG87CiAJCX0KIAotCQlycSA9
IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluX2xvLCBjdHhfbG8sIGVuZ2luZSwKLQkJ
CQkJCU1JX0FSQl9DSEVDSyk7CisJCXJxID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmc3Bpbl9s
bywgY3R4X2xvLCBlbmdpbmUsCisJCQkJCSAgICBNSV9BUkJfQ0hFQ0spOwogCQlpZiAoSVNfRVJS
KHJxKSkgewogCQkJZXJyID0gUFRSX0VSUihycSk7CiAJCQlnb3RvIGVycl9jdHhfbG87CkBAIC02
NDUsOCArNjY0LDggQEAgc3RhdGljIGludCBsaXZlX2xhdGVfcHJlZW1wdCh2b2lkICphcmcpCiAJ
CQlnb3RvIGVycl93ZWRnZWQ7CiAJCX0KIAotCQlycSA9IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1
ZXN0KCZzcGluX2hpLCBjdHhfaGksIGVuZ2luZSwKLQkJCQkJCU1JX05PT1ApOworCQlycSA9IHNw
aW5uZXJfY3JlYXRlX3JlcXVlc3QoJnNwaW5faGksIGN0eF9oaSwgZW5naW5lLAorCQkJCQkgICAg
TUlfTk9PUCk7CiAJCWlmIChJU19FUlIocnEpKSB7CiAJCQlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW5f
bG8pOwogCQkJZXJyID0gUFRSX0VSUihycSk7CkBAIC03MTEsNyArNzMwLDcgQEAgc3RhdGljIGlu
dCBwcmVlbXB0X2NsaWVudF9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCWlm
ICghYy0+Y3R4KQogCQlyZXR1cm4gLUVOT01FTTsKIAotCWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZj
LT5zcGluLCBpOTE1KSkKKwlpZiAoaWd0X3NwaW5uZXJfaW5pdCgmYy0+c3BpbiwgJmk5MTUtPmd0
KSkKIAkJZ290byBlcnJfY3R4OwogCiAJcmV0dXJuIDA7CkBAIC03NjEsOSArNzgwLDkgQEAgc3Rh
dGljIGludCBsaXZlX25vcHJlZW1wdCh2b2lkICphcmcpCiAKIAkJZW5naW5lLT5leGVjbGlzdHMu
cHJlZW1wdF9oYW5nLmNvdW50ID0gMDsKIAotCQlycV9hID0gaWd0X3NwaW5uZXJfY3JlYXRlX3Jl
cXVlc3QoJmEuc3BpbiwKLQkJCQkJCSAgYS5jdHgsIGVuZ2luZSwKLQkJCQkJCSAgTUlfQVJCX0NI
RUNLKTsKKwkJcnFfYSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmEuc3BpbiwKKwkJCQkJICAg
ICAgYS5jdHgsIGVuZ2luZSwKKwkJCQkJICAgICAgTUlfQVJCX0NIRUNLKTsKIAkJaWYgKElTX0VS
UihycV9hKSkgewogCQkJZXJyID0gUFRSX0VSUihycV9hKTsKIAkJCWdvdG8gZXJyX2NsaWVudF9i
OwpAQCAtNzc4LDkgKzc5Nyw5IEBAIHN0YXRpYyBpbnQgbGl2ZV9ub3ByZWVtcHQodm9pZCAqYXJn
KQogCQkJZ290byBlcnJfd2VkZ2VkOwogCQl9CiAKLQkJcnFfYiA9IGlndF9zcGlubmVyX2NyZWF0
ZV9yZXF1ZXN0KCZiLnNwaW4sCi0JCQkJCQkgIGIuY3R4LCBlbmdpbmUsCi0JCQkJCQkgIE1JX0FS
Ql9DSEVDSyk7CisJCXJxX2IgPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZiLnNwaW4sCisJCQkJ
CSAgICAgIGIuY3R4LCBlbmdpbmUsCisJCQkJCSAgICAgIE1JX0FSQl9DSEVDSyk7CiAJCWlmIChJ
U19FUlIocnFfYikpIHsKIAkJCWVyciA9IFBUUl9FUlIocnFfYik7CiAJCQlnb3RvIGVycl9jbGll
bnRfYjsKQEAgLTg4MCw5ICs4OTksOSBAQCBzdGF0aWMgaW50IGxpdmVfc3VwcHJlc3Nfc2VsZl9w
cmVlbXB0KHZvaWQgKmFyZykKIAogCQllbmdpbmUtPmV4ZWNsaXN0cy5wcmVlbXB0X2hhbmcuY291
bnQgPSAwOwogCi0JCXJxX2EgPSBpZ3Rfc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYS5zcGluLAot
CQkJCQkJICBhLmN0eCwgZW5naW5lLAotCQkJCQkJICBNSV9OT09QKTsKKwkJcnFfYSA9IHNwaW5u
ZXJfY3JlYXRlX3JlcXVlc3QoJmEuc3BpbiwKKwkJCQkJICAgICAgYS5jdHgsIGVuZ2luZSwKKwkJ
CQkJICAgICAgTUlfTk9PUCk7CiAJCWlmIChJU19FUlIocnFfYSkpIHsKIAkJCWVyciA9IFBUUl9F
UlIocnFfYSk7CiAJCQlnb3RvIGVycl9jbGllbnRfYjsKQEAgLTg5NSw5ICs5MTQsOSBAQCBzdGF0
aWMgaW50IGxpdmVfc3VwcHJlc3Nfc2VsZl9wcmVlbXB0KHZvaWQgKmFyZykKIAkJfQogCiAJCWZv
ciAoZGVwdGggPSAwOyBkZXB0aCA8IDg7IGRlcHRoKyspIHsKLQkJCXJxX2IgPSBpZ3Rfc3Bpbm5l
cl9jcmVhdGVfcmVxdWVzdCgmYi5zcGluLAotCQkJCQkJCSAgYi5jdHgsIGVuZ2luZSwKLQkJCQkJ
CQkgIE1JX05PT1ApOworCQkJcnFfYiA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmIuc3BpbiwK
KwkJCQkJCSAgICAgIGIuY3R4LCBlbmdpbmUsCisJCQkJCQkgICAgICBNSV9OT09QKTsKIAkJCWlm
IChJU19FUlIocnFfYikpIHsKIAkJCQllcnIgPSBQVFJfRVJSKHJxX2IpOwogCQkJCWdvdG8gZXJy
X2NsaWVudF9iOwpAQCAtMTA0OCw5ICsxMDY3LDkgQEAgc3RhdGljIGludCBsaXZlX3N1cHByZXNz
X3dhaXRfcHJlZW1wdCh2b2lkICphcmcpCiAJCQkJZ290byBlcnJfY2xpZW50XzM7CiAKIAkJCWZv
ciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGNsaWVudCk7IGkrKykgewotCQkJCXJxW2ldID0gaWd0
X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmNsaWVudFtpXS5zcGluLAotCQkJCQkJCQkgICBjbGll
bnRbaV0uY3R4LCBlbmdpbmUsCi0JCQkJCQkJCSAgIE1JX05PT1ApOworCQkJCXJxW2ldID0gc3Bp
bm5lcl9jcmVhdGVfcmVxdWVzdCgmY2xpZW50W2ldLnNwaW4sCisJCQkJCQkJICAgICAgIGNsaWVu
dFtpXS5jdHgsIGVuZ2luZSwKKwkJCQkJCQkgICAgICAgTUlfTk9PUCk7CiAJCQkJaWYgKElTX0VS
UihycVtpXSkpIHsKIAkJCQkJZXJyID0gUFRSX0VSUihycVtpXSk7CiAJCQkJCWdvdG8gZXJyX3dl
ZGdlZDsKQEAgLTExNTcsOSArMTE3Niw5IEBAIHN0YXRpYyBpbnQgbGl2ZV9jaGFpbl9wcmVlbXB0
KHZvaWQgKmFyZykKIAkJaWYgKCFpbnRlbF9lbmdpbmVfaGFzX3ByZWVtcHRpb24oZW5naW5lKSkK
IAkJCWNvbnRpbnVlOwogCi0JCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmxvLnNw
aW4sCi0JCQkJCQlsby5jdHgsIGVuZ2luZSwKLQkJCQkJCU1JX0FSQl9DSEVDSyk7CisJCXJxID0g
c3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmbG8uc3BpbiwKKwkJCQkJICAgIGxvLmN0eCwgZW5naW5l
LAorCQkJCQkgICAgTUlfQVJCX0NIRUNLKTsKIAkJaWYgKElTX0VSUihycSkpCiAJCQlnb3RvIGVy
cl93ZWRnZWQ7CiAJCWk5MTVfcmVxdWVzdF9hZGQocnEpOwpAQCAtMTE4MywxOCArMTIwMiwxOCBA
QCBzdGF0aWMgaW50IGxpdmVfY2hhaW5fcHJlZW1wdCh2b2lkICphcmcpCiAJCX0KIAogCQlmb3Jf
ZWFjaF9wcmltZV9udW1iZXJfZnJvbShjb3VudCwgMSwgcmluZ19zaXplKSB7Ci0JCQlycSA9IGln
dF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZoaS5zcGluLAotCQkJCQkJCWhpLmN0eCwgZW5naW5l
LAotCQkJCQkJCU1JX0FSQl9DSEVDSyk7CisJCQlycSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3Qo
JmhpLnNwaW4sCisJCQkJCQkgICAgaGkuY3R4LCBlbmdpbmUsCisJCQkJCQkgICAgTUlfQVJCX0NI
RUNLKTsKIAkJCWlmIChJU19FUlIocnEpKQogCQkJCWdvdG8gZXJyX3dlZGdlZDsKIAkJCWk5MTVf
cmVxdWVzdF9hZGQocnEpOwogCQkJaWYgKCFpZ3Rfd2FpdF9mb3Jfc3Bpbm5lcigmaGkuc3Bpbiwg
cnEpKQogCQkJCWdvdG8gZXJyX3dlZGdlZDsKIAotCQkJcnEgPSBpZ3Rfc3Bpbm5lcl9jcmVhdGVf
cmVxdWVzdCgmbG8uc3BpbiwKLQkJCQkJCQlsby5jdHgsIGVuZ2luZSwKLQkJCQkJCQlNSV9BUkJf
Q0hFQ0spOworCQkJcnEgPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZsby5zcGluLAorCQkJCQkJ
ICAgIGxvLmN0eCwgZW5naW5lLAorCQkJCQkJICAgIE1JX0FSQl9DSEVDSyk7CiAJCQlpZiAoSVNf
RVJSKHJxKSkKIAkJCQlnb3RvIGVycl93ZWRnZWQ7CiAJCQlpOTE1X3JlcXVlc3RfYWRkKHJxKTsK
QEAgLTEyODQsMTAgKzEzMDMsMTAgQEAgc3RhdGljIGludCBsaXZlX3ByZWVtcHRfaGFuZyh2b2lk
ICphcmcpCiAJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAJd2FrZXJlZiA9
IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZpOTE1LT5ydW50aW1lX3BtKTsKIAotCWlmIChpZ3Rfc3Bp
bm5lcl9pbml0KCZzcGluX2hpLCBpOTE1KSkKKwlpZiAoaWd0X3NwaW5uZXJfaW5pdCgmc3Bpbl9o
aSwgJmk5MTUtPmd0KSkKIAkJZ290byBlcnJfdW5sb2NrOwogCi0JaWYgKGlndF9zcGlubmVyX2lu
aXQoJnNwaW5fbG8sIGk5MTUpKQorCWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZzcGluX2xvLCAmaTkx
NS0+Z3QpKQogCQlnb3RvIGVycl9zcGluX2hpOwogCiAJY3R4X2hpID0ga2VybmVsX2NvbnRleHQo
aTkxNSk7CkBAIC0xMzA4LDggKzEzMjcsOCBAQCBzdGF0aWMgaW50IGxpdmVfcHJlZW1wdF9oYW5n
KHZvaWQgKmFyZykKIAkJaWYgKCFpbnRlbF9lbmdpbmVfaGFzX3ByZWVtcHRpb24oZW5naW5lKSkK
IAkJCWNvbnRpbnVlOwogCi0JCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJnNwaW5f
bG8sIGN0eF9sbywgZW5naW5lLAotCQkJCQkJTUlfQVJCX0NIRUNLKTsKKwkJcnEgPSBzcGlubmVy
X2NyZWF0ZV9yZXF1ZXN0KCZzcGluX2xvLCBjdHhfbG8sIGVuZ2luZSwKKwkJCQkJICAgIE1JX0FS
Ql9DSEVDSyk7CiAJCWlmIChJU19FUlIocnEpKSB7CiAJCQllcnIgPSBQVFJfRVJSKHJxKTsKIAkJ
CWdvdG8gZXJyX2N0eF9sbzsKQEAgLTEzMjQsOCArMTM0Myw4IEBAIHN0YXRpYyBpbnQgbGl2ZV9w
cmVlbXB0X2hhbmcodm9pZCAqYXJnKQogCQkJZ290byBlcnJfY3R4X2xvOwogCQl9CiAKLQkJcnEg
PSBpZ3Rfc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmc3Bpbl9oaSwgY3R4X2hpLCBlbmdpbmUsCi0J
CQkJCQlNSV9BUkJfQ0hFQ0spOworCQlycSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJnNwaW5f
aGksIGN0eF9oaSwgZW5naW5lLAorCQkJCQkgICAgTUlfQVJCX0NIRUNLKTsKIAkJaWYgKElTX0VS
UihycSkpIHsKIAkJCWlndF9zcGlubmVyX2VuZCgmc3Bpbl9sbyk7CiAJCQllcnIgPSBQVFJfRVJS
KHJxKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3dvcmth
cm91bmRzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF93b3JrYXJvdW5kcy5j
CmluZGV4IGFiMTQ3OTg1ZmE3NC4uOTk3ZGE5NDgyMWQ5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9zZWxmdGVzdF93b3JrYXJvdW5kcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3NlbGZ0ZXN0X3dvcmthcm91bmRzLmMKQEAgLTIzOCw2ICsyMzgsNyBAQCBzd2l0
Y2hfdG9fc2NyYXRjaF9jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJ
CSAgc3RydWN0IGlndF9zcGlubmVyICpzcGluKQogewogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0
ICpjdHg7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwogCWludCBlcnIgPSAwOwpAQCAtMjQ4LDEw
ICsyNDksMTQgQEAgc3dpdGNoX3RvX3NjcmF0Y2hfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsCiAKIAlHRU1fQlVHX09OKGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmFibGUo
Y3R4KSk7CiAKKwljZSA9IGk5MTVfZ2VtX2NvbnRleHRfZ2V0X2VuZ2luZShjdHgsIGVuZ2luZS0+
aWQpOworCUdFTV9CVUdfT04oSVNfRVJSKGNlKSk7CisKIAlycSA9IEVSUl9QVFIoLUVOT0RFVik7
CiAJd2l0aF9pbnRlbF9ydW50aW1lX3BtKCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sIHdha2Vy
ZWYpCi0JCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3Qoc3BpbiwgY3R4LCBlbmdpbmUs
IE1JX05PT1ApOworCQlycSA9IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KHNwaW4sIGNlLCBN
SV9OT09QKTsKIAorCWludGVsX2NvbnRleHRfcHV0KGNlKTsKIAlrZXJuZWxfY29udGV4dF9jbG9z
ZShjdHgpOwogCiAJaWYgKElTX0VSUihycSkpIHsKQEAgLTI5MSw3ICsyOTYsNyBAQCBzdGF0aWMg
aW50IGNoZWNrX3doaXRlbGlzdF9hY3Jvc3NfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLAogCWlmIChJU19FUlIoY3R4KSkKIAkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKIAotCWVy
ciA9IGlndF9zcGlubmVyX2luaXQoJnNwaW4sIGk5MTUpOworCWVyciA9IGlndF9zcGlubmVyX2lu
aXQoJnNwaW4sIGVuZ2luZS0+Z3QpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0X2N0eDsKIApAQCAt
MTA4Myw3ICsxMDg4LDcgQEAgdmVyaWZ5X3dhX2xpc3RzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0
ICpjdHgsIHN0cnVjdCB3YV9saXN0cyAqbGlzdHMsCiAKIAlvayAmPSB3YV9saXN0X3ZlcmlmeSgm
aTkxNS0+dW5jb3JlLCAmbGlzdHMtPmd0X3dhX2xpc3QsIHN0cik7CiAKLQlmb3JfZWFjaF9nZW1f
ZW5naW5lKGNlLCBpOTE1X2dlbV9jb250ZXh0X2xvY2tfZW5naW5lcyhjdHgpLCBpdCkgeworCWZv
cl9lYWNoX2dlbV9lbmdpbmUoY2UsIGk5MTVfZ2VtX2NvbnRleHRfZW5naW5lcyhjdHgpLCBpdCkg
ewogCQllbnVtIGludGVsX2VuZ2luZV9pZCBpZCA9IGNlLT5lbmdpbmUtPmlkOwogCiAJCW9rICY9
IGVuZ2luZV93YV9saXN0X3ZlcmlmeShjZSwKQEAgLTEwOTQsNyArMTA5OSw2IEBAIHZlcmlmeV93
YV9saXN0cyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LCBzdHJ1Y3Qgd2FfbGlzdHMgKmxp
c3RzLAogCQkJCQkgICAgJmxpc3RzLT5lbmdpbmVbaWRdLmN0eF93YV9saXN0LAogCQkJCQkgICAg
c3RyKSA9PSAwOwogCX0KLQlpOTE1X2dlbV9jb250ZXh0X3VubG9ja19lbmdpbmVzKGN0eCk7CiAK
IAlyZXR1cm4gb2s7CiB9CkBAIC0xMTE1LDYgKzExMTksOCBAQCBsaXZlX2dwdV9yZXNldF93b3Jr
YXJvdW5kcyh2b2lkICphcmcpCiAJaWYgKElTX0VSUihjdHgpKQogCQlyZXR1cm4gUFRSX0VSUihj
dHgpOwogCisJaTkxNV9nZW1fY29udGV4dF9sb2NrX2VuZ2luZXMoY3R4KTsKKwogCXByX2luZm8o
IlZlcmlmeWluZyBhZnRlciBHUFUgcmVzZXQuLi5cbiIpOwogCiAJaWd0X2dsb2JhbF9yZXNldF9s
b2NrKCZpOTE1LT5ndCk7CkBAIC0xMTMxLDYgKzExMzcsNyBAQCBsaXZlX2dwdV9yZXNldF93b3Jr
YXJvdW5kcyh2b2lkICphcmcpCiAJb2sgPSB2ZXJpZnlfd2FfbGlzdHMoY3R4LCAmbGlzdHMsICJh
ZnRlciByZXNldCIpOwogCiBvdXQ6CisJaTkxNV9nZW1fY29udGV4dF91bmxvY2tfZW5naW5lcyhj
dHgpOwogCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eCk7CiAJcmVmZXJlbmNlX2xpc3RzX2Zpbmko
aTkxNSwgJmxpc3RzKTsKIAlpbnRlbF9ydW50aW1lX3BtX3B1dCgmaTkxNS0+cnVudGltZV9wbSwg
d2FrZXJlZik7CkBAIC0xMTQzLDEwICsxMTUwLDEwIEBAIHN0YXRpYyBpbnQKIGxpdmVfZW5naW5l
X3Jlc2V0X3dvcmthcm91bmRzKHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSA9IGFyZzsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3RydWN0
IGk5MTVfZ2VtX2VuZ2luZXNfaXRlciBpdDsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4
OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAlzdHJ1Y3QgaWd0X3NwaW5uZXIgc3BpbjsK
LQllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKIAlp
bnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKIAlzdHJ1Y3Qgd2FfbGlzdHMgbGlzdHM7CkBAIC0xMTY0
LDcgKzExNzEsOCBAQCBsaXZlX2VuZ2luZV9yZXNldF93b3JrYXJvdW5kcyh2b2lkICphcmcpCiAK
IAlyZWZlcmVuY2VfbGlzdHNfaW5pdChpOTE1LCAmbGlzdHMpOwogCi0JZm9yX2VhY2hfZW5naW5l
KGVuZ2luZSwgaTkxNSwgaWQpIHsKKwlmb3JfZWFjaF9nZW1fZW5naW5lKGNlLCBpOTE1X2dlbV9j
b250ZXh0X2xvY2tfZW5naW5lcyhjdHgpLCBpdCkgeworCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUgPSBjZS0+ZW5naW5lOwogCQlib29sIG9rOwogCiAJCXByX2luZm8oIlZlcmlmeWlu
ZyBhZnRlciAlcyByZXNldC4uLlxuIiwgZW5naW5lLT5uYW1lKTsKQEAgLTExODMsMTEgKzExOTEs
MTEgQEAgbGl2ZV9lbmdpbmVfcmVzZXRfd29ya2Fyb3VuZHModm9pZCAqYXJnKQogCQkJZ290byBl
cnI7CiAJCX0KIAotCQlyZXQgPSBpZ3Rfc3Bpbm5lcl9pbml0KCZzcGluLCBpOTE1KTsKKwkJcmV0
ID0gaWd0X3NwaW5uZXJfaW5pdCgmc3BpbiwgZW5naW5lLT5ndCk7CiAJCWlmIChyZXQpCiAJCQln
b3RvIGVycjsKIAotCQlycSA9IGlndF9zcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluLCBjdHgs
IGVuZ2luZSwgTUlfTk9PUCk7CisJCXJxID0gaWd0X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJnNw
aW4sIGNlLCBNSV9OT09QKTsKIAkJaWYgKElTX0VSUihycSkpIHsKIAkJCXJldCA9IFBUUl9FUlIo
cnEpOwogCQkJaWd0X3NwaW5uZXJfZmluaSgmc3Bpbik7CkBAIC0xMjE0LDggKzEyMjIsOCBAQCBs
aXZlX2VuZ2luZV9yZXNldF93b3JrYXJvdW5kcyh2b2lkICphcmcpCiAJCQlnb3RvIGVycjsKIAkJ
fQogCX0KLQogZXJyOgorCWk5MTVfZ2VtX2NvbnRleHRfdW5sb2NrX2VuZ2luZXMoY3R4KTsKIAly
ZWZlcmVuY2VfbGlzdHNfZmluaShpOTE1LCAmbGlzdHMpOwogCWludGVsX3J1bnRpbWVfcG1fcHV0
KCZpOTE1LT5ydW50aW1lX3BtLCB3YWtlcmVmKTsKIAlpZ3RfZ2xvYmFsX3Jlc2V0X3VubG9jaygm
aTkxNS0+Z3QpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2ln
dF9zcGlubmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X3NwaW5uZXIu
YwppbmRleCA4OWI2NTUyYTY0OTcuLjQxYWNmMjA5ZmZkYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvc2VsZnRlc3RzL2lndF9zcGlubmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvc2VsZnRlc3RzL2lndF9zcGlubmVyLmMKQEAgLTksMjUgKzksMjQgQEAKIAogI2luY2x1
ZGUgImlndF9zcGlubmVyLmgiCiAKLWludCBpZ3Rfc3Bpbm5lcl9pbml0KHN0cnVjdCBpZ3Rfc3Bp
bm5lciAqc3Bpbiwgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCitpbnQgaWd0X3NwaW5u
ZXJfaW5pdChzdHJ1Y3QgaWd0X3NwaW5uZXIgKnNwaW4sIHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7
CiAJdW5zaWduZWQgaW50IG1vZGU7CiAJdm9pZCAqdmFkZHI7CiAJaW50IGVycjsKIAotCUdFTV9C
VUdfT04oSU5URUxfR0VOKGk5MTUpIDwgOCk7CisJR0VNX0JVR19PTihJTlRFTF9HRU4oZ3QtPmk5
MTUpIDwgOCk7CiAKIAltZW1zZXQoc3BpbiwgMCwgc2l6ZW9mKCpzcGluKSk7Ci0Jc3Bpbi0+aTkx
NSA9IGk5MTU7Ci0Jc3Bpbi0+Z3QgPSAmaTkxNS0+Z3Q7CisJc3Bpbi0+Z3QgPSBndDsKIAotCXNw
aW4tPmh3cyA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoaTkxNSwgUEFHRV9TSVpF
KTsKKwlzcGluLT5od3MgPSBpOTE1X2dlbV9vYmplY3RfY3JlYXRlX2ludGVybmFsKGd0LT5pOTE1
LCBQQUdFX1NJWkUpOwogCWlmIChJU19FUlIoc3Bpbi0+aHdzKSkgewogCQllcnIgPSBQVFJfRVJS
KHNwaW4tPmh3cyk7CiAJCWdvdG8gZXJyOwogCX0KIAotCXNwaW4tPm9iaiA9IGk5MTVfZ2VtX29i
amVjdF9jcmVhdGVfaW50ZXJuYWwoaTkxNSwgUEFHRV9TSVpFKTsKKwlzcGluLT5vYmogPSBpOTE1
X2dlbV9vYmplY3RfY3JlYXRlX2ludGVybmFsKGd0LT5pOTE1LCBQQUdFX1NJWkUpOwogCWlmIChJ
U19FUlIoc3Bpbi0+b2JqKSkgewogCQllcnIgPSBQVFJfRVJSKHNwaW4tPm9iaik7CiAJCWdvdG8g
ZXJyX2h3czsKQEAgLTQxLDcgKzQwLDcgQEAgaW50IGlndF9zcGlubmVyX2luaXQoc3RydWN0IGln
dF9zcGlubmVyICpzcGluLCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAl9CiAJc3Bp
bi0+c2Vxbm8gPSBtZW1zZXQodmFkZHIsIDB4ZmYsIFBBR0VfU0laRSk7CiAKLQltb2RlID0gaTkx
NV9jb2hlcmVudF9tYXBfdHlwZShpOTE1KTsKKwltb2RlID0gaTkxNV9jb2hlcmVudF9tYXBfdHlw
ZShndC0+aTkxNSk7CiAJdmFkZHIgPSBpOTE1X2dlbV9vYmplY3RfcGluX21hcChzcGluLT5vYmos
IG1vZGUpOwogCWlmIChJU19FUlIodmFkZHIpKSB7CiAJCWVyciA9IFBUUl9FUlIodmFkZHIpOwpA
QCAtODcsMjIgKzg2LDIyIEBAIHN0YXRpYyBpbnQgbW92ZV90b19hY3RpdmUoc3RydWN0IGk5MTVf
dm1hICp2bWEsCiAKIHN0cnVjdCBpOTE1X3JlcXVlc3QgKgogaWd0X3NwaW5uZXJfY3JlYXRlX3Jl
cXVlc3Qoc3RydWN0IGlndF9zcGlubmVyICpzcGluLAotCQkJICAgc3RydWN0IGk5MTVfZ2VtX2Nv
bnRleHQgKmN0eCwKLQkJCSAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCSAg
IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJCSAgIHUzMiBhcmJpdHJhdGlvbl9jb21tYW5k
KQogeworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGNlLT5lbmdpbmU7CiAJc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEgPSBOVUxMOwogCXN0cnVjdCBpOTE1X3ZtYSAqaHdzLCAqdm1h
OwogCXUzMiAqYmF0Y2g7CiAJaW50IGVycjsKIAotCXNwaW4tPmd0ID0gZW5naW5lLT5ndDsKKwlH
RU1fQlVHX09OKHNwaW4tPmd0ICE9IGNlLT52bS0+Z3QpOwogCi0Jdm1hID0gaTkxNV92bWFfaW5z
dGFuY2Uoc3Bpbi0+b2JqLCBjdHgtPnZtLCBOVUxMKTsKKwl2bWEgPSBpOTE1X3ZtYV9pbnN0YW5j
ZShzcGluLT5vYmosIGNlLT52bSwgTlVMTCk7CiAJaWYgKElTX0VSUih2bWEpKQogCQlyZXR1cm4g
RVJSX0NBU1Qodm1hKTsKIAotCWh3cyA9IGk5MTVfdm1hX2luc3RhbmNlKHNwaW4tPmh3cywgY3R4
LT52bSwgTlVMTCk7CisJaHdzID0gaTkxNV92bWFfaW5zdGFuY2Uoc3Bpbi0+aHdzLCBjZS0+dm0s
IE5VTEwpOwogCWlmIChJU19FUlIoaHdzKSkKIAkJcmV0dXJuIEVSUl9DQVNUKGh3cyk7CiAKQEAg
LTExNCw3ICsxMTMsNyBAQCBpZ3Rfc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdChzdHJ1Y3QgaWd0X3Nw
aW5uZXIgKnNwaW4sCiAJaWYgKGVycikKIAkJZ290byB1bnBpbl92bWE7CiAKLQlycSA9IGlndF9y
ZXF1ZXN0X2FsbG9jKGN0eCwgZW5naW5lKTsKKwlycSA9IGludGVsX2NvbnRleHRfY3JlYXRlX3Jl
cXVlc3QoY2UpOwogCWlmIChJU19FUlIocnEpKSB7CiAJCWVyciA9IFBUUl9FUlIocnEpOwogCQln
b3RvIHVucGluX2h3czsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9pZ3Rfc3Bpbm5lci5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2lndF9zcGlu
bmVyLmgKaW5kZXggMWJmYzM5ZWZhNzczLi5lYzYyYzllZjMyMGIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3Rfc3Bpbm5lci5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3Rfc3Bpbm5lci5oCkBAIC0xNyw3ICsxNyw2IEBACiBzdHJ1
Y3QgaW50ZWxfZ3Q7CiAKIHN0cnVjdCBpZ3Rfc3Bpbm5lciB7Ci0Jc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTU7CiAJc3RydWN0IGludGVsX2d0ICpndDsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqaHdzOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmo7CkBAIC0yNSwx
MyArMjQsMTIgQEAgc3RydWN0IGlndF9zcGlubmVyIHsKIAl2b2lkICpzZXFubzsKIH07CiAKLWlu
dCBpZ3Rfc3Bpbm5lcl9pbml0KHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3Bpbiwgc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpOworaW50IGlndF9zcGlubmVyX2luaXQoc3RydWN0IGlndF9zcGlu
bmVyICpzcGluLCBzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIHZvaWQgaWd0X3NwaW5uZXJfZmluaShz
dHJ1Y3QgaWd0X3NwaW5uZXIgKnNwaW4pOwogCiBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKIGlndF9z
cGlubmVyX2NyZWF0ZV9yZXF1ZXN0KHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3BpbiwKLQkJCSAgIHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCi0JCQkgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCisJCQkgICBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQkgICB1MzIgYXJi
aXRyYXRpb25fY29tbWFuZCk7CiB2b2lkIGlndF9zcGlubmVyX2VuZChzdHJ1Y3QgaWd0X3NwaW5u
ZXIgKnNwaW4pOwogCi0tIAoyLjIzLjAucmMwCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9pbnRlbC1nZng=

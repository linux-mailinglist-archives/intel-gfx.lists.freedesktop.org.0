Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 0210E5D744
	for <lists+intel-gfx@lfdr.de>; Tue,  2 Jul 2019 22:10:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6563389FEA;
	Tue,  2 Jul 2019 20:10:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7F92889FEA
 for <intel-gfx@lists.freedesktop.org>; Tue,  2 Jul 2019 20:10:22 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 02 Jul 2019 13:10:22 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,444,1557212400"; d="scan'208";a="157753227"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga008.jf.intel.com with ESMTP; 02 Jul 2019 13:10:22 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  2 Jul 2019 13:09:47 -0700
Message-Id: <20190702200947.26497-3-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190702200947.26497-1-daniele.ceraolospurio@intel.com>
References: <20190702200947.26497-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/3] drm/i915/uc: replace uc init/fini misc
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlICJtaXNjIiB0ZXJtaW5vbG9neSBkb2Vzbid0IGNsZWFybHkgZXhwbGFpbiB3aGF0IHdlIGlu
dGVuZCB0byBjb3ZlcgppbiB0aGlzIHBoYXNlLiBUaGUgb25seSB0aGluZyB3ZSBkbyBpbiB0aGVy
ZSBhcGFydCBmcm9tIEZXIGZldGNoIGlzCmluaXRpYWxpemluZyB0aGUgbG9nIHdvcmtxdWV1ZS4g
V2UgY2FuIG1vdmUgdGhlIGxhdHRlciB0byB0aGUKaW5pdF9lYXJseSBwaGFzZSBhbmQgcmVuYW1l
IHRoZSBmdW5jdGlvbiB0byBjbGFyaWZ5IHRoYXQgdGhleSBvbmx5CmZldGNoL3JlbGVhc2UgdGhl
IGJsb2JzLgoKU2lnbmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5j
ZXJhb2xvc3B1cmlvQGludGVsLmNvbT4KQ2M6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hhbC53YWpk
ZWN6a29AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgICAg
ICB8ICA3ICsrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgICAgICB8IDEyICsr
Ky0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3VjLmMgICAgIHwgNTcgKysrKy0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3VjLmggICAg
IHwgIDUgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmMgfCAzMiArKysr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmggfCAgMyAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVjLmMgICAgIHwgIDggLS0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVjLmggICAgIHwgIDYgLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF91Yy5jICAgICAgfCA1MCArKysrKysrKysrLS0tLS0tLS0tLS0tLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3VjLmggICAgICB8ICA2ICstLQogMTAgZmlsZXMgY2hhbmdl
ZCwgNzUgaW5zZXJ0aW9ucygrKSwgMTExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5jCmluZGV4IDc5NGM2ODE0YTZkMC4uMjBjYTAyMDhkZDk4IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZHJ2LmMKQEAgLTkzNCw3ICs5MzQsMTEgQEAgc3RhdGljIGludCBpOTE1X2RyaXZlcl9pbml0X2Vh
cmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpbnRlbF9kZXRlY3RfcGNo
KGRldl9wcml2KTsKIAogCWludGVsX3dvcGNtX2luaXRfZWFybHkoJmRldl9wcml2LT53b3BjbSk7
Ci0JaW50ZWxfdWNfaW5pdF9lYXJseShkZXZfcHJpdik7CisKKwlyZXQgPSBpbnRlbF91Y19pbml0
X2Vhcmx5KGRldl9wcml2KTsKKwlpZiAocmV0KQorCQlnb3RvIGVycl9nZW07CisKIAlpbnRlbF9w
bV9zZXR1cChkZXZfcHJpdik7CiAJaW50ZWxfaW5pdF9kcGlvKGRldl9wcml2KTsKIAlyZXQgPSBp
bnRlbF9wb3dlcl9kb21haW5zX2luaXQoZGV2X3ByaXYpOwpAQCAtOTUzLDYgKzk1Nyw3IEBAIHN0
YXRpYyBpbnQgaTkxNV9kcml2ZXJfaW5pdF9lYXJseShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiAKIGVycl91YzoKIAlpbnRlbF91Y19jbGVhbnVwX2Vhcmx5KGRldl9wcml2KTsK
K2Vycl9nZW06CiAJaTkxNV9nZW1fY2xlYW51cF9lYXJseShkZXZfcHJpdik7CiBlcnJfd29ya3F1
ZXVlczoKIAlpOTE1X3dvcmtxdWV1ZXNfY2xlYW51cChkZXZfcHJpdik7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW0uYwppbmRleCBiN2YyOTBiNzdmOGYuLjQ2YTc1ODQ0ZjMwMyAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2dlbS5jCkBAIC0xNDI5LDEzICsxNDI5LDExIEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0Owog
Ci0JcmV0ID0gaW50ZWxfdWNfaW5pdF9taXNjKGRldl9wcml2KTsKLQlpZiAocmV0KQotCQlyZXR1
cm4gcmV0OworCWludGVsX3VjX2ZldGNoX2Zpcm13YXJlcyhkZXZfcHJpdik7CiAKIAlyZXQgPSBp
bnRlbF93b3BjbV9pbml0KCZkZXZfcHJpdi0+d29wY20pOwogCWlmIChyZXQpCi0JCWdvdG8gZXJy
X3VjX21pc2M7CisJCWdvdG8gZXJyX3VjX2Z3OwogCiAJLyogVGhpcyBpcyBqdXN0IGEgc2VjdXJp
dHkgYmxhbmtldCB0byBwbGFjYXRlIGRyYWdvbnMuCiAJICogT24gc29tZSBzeXN0ZW1zLCB3ZSB2
ZXJ5IHNwb3JhZGljYWxseSBvYnNlcnZlIHRoYXQgdGhlIGZpcnN0IFRMQnMKQEAgLTE1NjEsOCAr
MTU1OSw4IEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1dCgmZGV2X3ByaXYtPnVuY29yZSwgRk9S
Q0VXQUtFX0FMTCk7CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVjdF9tdXRleCk7
CiAKLWVycl91Y19taXNjOgotCWludGVsX3VjX2ZpbmlfbWlzYyhkZXZfcHJpdik7CitlcnJfdWNf
Znc6CisJaW50ZWxfdWNfY2xlYW51cF9maXJtd2FyZXMoZGV2X3ByaXYpOwogCiAJaWYgKHJldCAh
PSAtRUlPKSB7CiAJCWk5MTVfZ2VtX2NsZWFudXBfdXNlcnB0cihkZXZfcHJpdik7CkBAIC0xNjI4
LDcgKzE2MjYsNyBAQCB2b2lkIGk5MTVfZ2VtX2Zpbmkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCiAJaW50ZWxfY2xlYW51cF9ndF9wb3dlcnNhdmUoZGV2X3ByaXYpOwogCi0J
aW50ZWxfdWNfZmluaV9taXNjKGRldl9wcml2KTsKKwlpbnRlbF91Y19jbGVhbnVwX2Zpcm13YXJl
cyhkZXZfcHJpdik7CiAJaTkxNV9nZW1fY2xlYW51cF91c2VycHRyKGRldl9wcml2KTsKIAlpbnRl
bF90aW1lbGluZXNfZmluaShkZXZfcHJpdik7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2d1Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3VjLmMKaW5k
ZXggNTAxYjc0ZjQ0Mzc0Li4wM2ZhZDRmZTNkOWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2d1Yy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Yy5j
CkBAIC03NCwxMyArNzQsMTYgQEAgdm9pZCBpbnRlbF9ndWNfaW5pdF9zZW5kX3JlZ3Moc3RydWN0
IGludGVsX2d1YyAqZ3VjKQogCWd1Yy0+c2VuZF9yZWdzLmZ3X2RvbWFpbnMgPSBmd19kb21haW5z
OwogfQogCi12b2lkIGludGVsX2d1Y19pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykK
K2ludCBpbnRlbF9ndWNfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBndWNfdG9faTkxNShndWMpOworCWludCByZXQ7
CiAKIAlpbnRlbF9ndWNfZndfaW5pdF9lYXJseShndWMpOwogCWludGVsX2d1Y19jdF9pbml0X2Vh
cmx5KCZndWMtPmN0KTsKLQlpbnRlbF9ndWNfbG9nX2luaXRfZWFybHkoJmd1Yy0+bG9nKTsKKwly
ZXQgPSBpbnRlbF9ndWNfbG9nX2luaXRfZWFybHkoJmd1Yy0+bG9nKTsKKwlpZiAocmV0KQorCQly
ZXR1cm4gcmV0OwogCiAJbXV0ZXhfaW5pdCgmZ3VjLT5zZW5kX211dGV4KTsKIAlzcGluX2xvY2tf
aW5pdCgmZ3VjLT5pcnFfbG9jayk7CkBAIC05Nyw1OSArMTAwLDEzIEBAIHZvaWQgaW50ZWxfZ3Vj
X2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCQlndWMtPmludGVycnVwdHMuZW5h
YmxlID0gZ2VuOV9lbmFibGVfZ3VjX2ludGVycnVwdHM7CiAJCWd1Yy0+aW50ZXJydXB0cy5kaXNh
YmxlID0gZ2VuOV9kaXNhYmxlX2d1Y19pbnRlcnJ1cHRzOwogCX0KLX0KLQotc3RhdGljIGludCBn
dWNfaW5pdF93cShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCi17Ci0JLyoKLQkgKiBHdUMgbG9nIGJ1
ZmZlciBmbHVzaCB3b3JrIGl0ZW0gaGFzIHRvIGRvIHJlZ2lzdGVyIGFjY2VzcyB0bwotCSAqIHNl
bmQgdGhlIGFjayB0byBHdUMgYW5kIHRoaXMgd29yayBpdGVtLCBpZiBub3Qgc3luY2VkIGJlZm9y
ZQotCSAqIHN1c3BlbmQsIGNhbiBwb3RlbnRpYWxseSBnZXQgZXhlY3V0ZWQgYWZ0ZXIgdGhlIEdG
WCBkZXZpY2UgaXMKLQkgKiBzdXNwZW5kZWQuCi0JICogQnkgbWFya2luZyB0aGUgV1EgYXMgZnJl
ZXphYmxlLCB3ZSBkb24ndCBoYXZlIHRvIGJvdGhlciBhYm91dAotCSAqIGZsdXNoaW5nIG9mIHRo
aXMgd29yayBpdGVtIGZyb20gdGhlIHN1c3BlbmQgaG9va3MsIHRoZSBwZW5kaW5nCi0JICogd29y
ayBpdGVtIGlmIGFueSB3aWxsIGJlIGVpdGhlciBleGVjdXRlZCBiZWZvcmUgdGhlIHN1c3BlbmQK
LQkgKiBvciBzY2hlZHVsZWQgbGF0ZXIgb24gcmVzdW1lLiBUaGlzIHdheSB0aGUgaGFuZGxpbmcg
b2Ygd29yawotCSAqIGl0ZW0gY2FuIGJlIGtlcHQgc2FtZSBiZXR3ZWVuIHN5c3RlbSBzdXNwZW5k
ICYgcnBtIHN1c3BlbmQuCi0JICovCi0JZ3VjLT5sb2cucmVsYXkuZmx1c2hfd3EgPQotCQlhbGxv
Y19vcmRlcmVkX3dvcmtxdWV1ZSgiaTkxNS1ndWNfbG9nIiwKLQkJCQkJV1FfSElHSFBSSSB8IFdR
X0ZSRUVaQUJMRSk7Ci0JaWYgKCFndWMtPmxvZy5yZWxheS5mbHVzaF93cSkgewotCQlEUk1fRVJS
T1IoIkNvdWxkbid0IGFsbG9jYXRlIHdvcmtxdWV1ZSBmb3IgR3VDIGxvZ1xuIik7Ci0JCXJldHVy
biAtRU5PTUVNOwotCX0KIAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBndWNfZmluaV93
cShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCi17Ci0Jc3RydWN0IHdvcmtxdWV1ZV9zdHJ1Y3QgKndx
OwotCi0Jd3EgPSBmZXRjaF9hbmRfemVybygmZ3VjLT5sb2cucmVsYXkuZmx1c2hfd3EpOwotCWlm
ICh3cSkKLQkJZGVzdHJveV93b3JrcXVldWUod3EpOwotfQotCi1pbnQgaW50ZWxfZ3VjX2luaXRf
bWlzYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit2b2lkIGludGVsX2d1Y19maW5pX2Vhcmx5KHN0
cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
IGd1Y190b19pOTE1KGd1Yyk7Ci0JaW50IHJldDsKLQotCXJldCA9IGd1Y19pbml0X3dxKGd1Yyk7
Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCWludGVsX3VjX2Z3X2ZldGNoKGk5MTUsICZn
dWMtPmZ3KTsKLQotCXJldHVybiAwOwotfQotCi12b2lkIGludGVsX2d1Y19maW5pX21pc2Moc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKQotewotCWludGVsX3VjX2Z3X2NsZWFudXBfZmV0Y2goJmd1Yy0+
ZncpOwotCWd1Y19maW5pX3dxKGd1Yyk7CisJaW50ZWxfZ3VjX2xvZ19maW5pX2Vhcmx5KCZndWMt
PmxvZyk7CiB9CiAKIHN0YXRpYyBpbnQgZ3VjX3NoYXJlZF9kYXRhX2NyZWF0ZShzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWMu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Yy5oCmluZGV4IGVjMTAzOGMxZjUwZS4u
MDQ1YTM2MDhiYWRlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWMuaApAQCAtMTUwLDEzICsxNTAs
MTIgQEAgc3RhdGljIGlubGluZSB1MzIgaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KHN0cnVjdCBpbnRl
bF9ndWMgKmd1YywKIAlyZXR1cm4gb2Zmc2V0OwogfQogCi12b2lkIGludGVsX2d1Y19pbml0X2Vh
cmx5KHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CitpbnQgaW50ZWxfZ3VjX2luaXRfZWFybHkoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKTsKK3ZvaWQgaW50ZWxfZ3VjX2ZpbmlfZWFybHkoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjKTsKIHZvaWQgaW50ZWxfZ3VjX2luaXRfc2VuZF9yZWdzKHN0cnVjdCBpbnRl
bF9ndWMgKmd1Yyk7CiB2b2lkIGludGVsX2d1Y19pbml0X3BhcmFtcyhzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMpOwotaW50IGludGVsX2d1Y19pbml0X21pc2Moc3RydWN0IGludGVsX2d1YyAqZ3VjKTsK
IGludCBpbnRlbF9ndWNfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRlbF9n
dWNfZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwotdm9pZCBpbnRlbF9ndWNfZmluaV9taXNj
KHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiBpbnQgaW50ZWxfZ3VjX3NlbmRfbm9wKHN0cnVjdCBp
bnRlbF9ndWMgKmd1YywgY29uc3QgdTMyICphY3Rpb24sIHUzMiBsZW4sCiAJCSAgICAgICB1MzIg
KnJlc3BvbnNlX2J1ZiwgdTMyIHJlc3BvbnNlX2J1Zl9zaXplKTsKIGludCBpbnRlbF9ndWNfc2Vu
ZF9tbWlvKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgY29uc3QgdTMyICphY3Rpb24sIHUzMiBsZW4s
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmMKaW5kZXggZTNiODNlY2I5MGI1Li40YjFj
N2E5ZjIzZTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Y19sb2cu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmMKQEAgLTM3NCwxMCAr
Mzc0LDQwIEBAIHN0YXRpYyB2b2lkIGd1Y19sb2dfdW5tYXAoc3RydWN0IGludGVsX2d1Y19sb2cg
KmxvZykKIAlsb2ctPnJlbGF5LmJ1Zl9hZGRyID0gTlVMTDsKIH0KIAotdm9pZCBpbnRlbF9ndWNf
bG9nX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1Y19sb2cgKmxvZykKK2ludCBpbnRlbF9ndWNf
bG9nX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1Y19sb2cgKmxvZykKIHsKIAltdXRleF9pbml0
KCZsb2ctPnJlbGF5LmxvY2spOwogCUlOSVRfV09SSygmbG9nLT5yZWxheS5mbHVzaF93b3JrLCBj
YXB0dXJlX2xvZ3Nfd29yayk7CisKKwkvKgorCSAqIEd1QyBsb2cgYnVmZmVyIGZsdXNoIHdvcmsg
aXRlbSBoYXMgdG8gZG8gcmVnaXN0ZXIgYWNjZXNzIHRvCisJICogc2VuZCB0aGUgYWNrIHRvIEd1
QyBhbmQgdGhpcyB3b3JrIGl0ZW0sIGlmIG5vdCBzeW5jZWQgYmVmb3JlCisJICogc3VzcGVuZCwg
Y2FuIHBvdGVudGlhbGx5IGdldCBleGVjdXRlZCBhZnRlciB0aGUgR0ZYIGRldmljZSBpcworCSAq
IHN1c3BlbmRlZC4KKwkgKiBCeSBtYXJraW5nIHRoZSBXUSBhcyBmcmVlemFibGUsIHdlIGRvbid0
IGhhdmUgdG8gYm90aGVyIGFib3V0CisJICogZmx1c2hpbmcgb2YgdGhpcyB3b3JrIGl0ZW0gZnJv
bSB0aGUgc3VzcGVuZCBob29rcywgdGhlIHBlbmRpbmcKKwkgKiB3b3JrIGl0ZW0gaWYgYW55IHdp
bGwgYmUgZWl0aGVyIGV4ZWN1dGVkIGJlZm9yZSB0aGUgc3VzcGVuZAorCSAqIG9yIHNjaGVkdWxl
ZCBsYXRlciBvbiByZXN1bWUuIFRoaXMgd2F5IHRoZSBoYW5kbGluZyBvZiB3b3JrCisJICogaXRl
bSBjYW4gYmUga2VwdCBzYW1lIGJldHdlZW4gc3lzdGVtIHN1c3BlbmQgJiBycG0gc3VzcGVuZC4K
KwkgKi8KKwlsb2ctPnJlbGF5LmZsdXNoX3dxID0KKwkJYWxsb2Nfb3JkZXJlZF93b3JrcXVldWUo
Imk5MTUtZ3VjX2xvZyIsCisJCQkJCVdRX0hJR0hQUkkgfCBXUV9GUkVFWkFCTEUpOworCWlmICgh
bG9nLT5yZWxheS5mbHVzaF93cSkgeworCQlEUk1fRVJST1IoIkNvdWxkbid0IGFsbG9jYXRlIHdv
cmtxdWV1ZSBmb3IgR3VDIGxvZ1xuIik7CisJCXJldHVybiAtRU5PTUVNOworCX0KKworCXJldHVy
biAwOworfQorCit2b2lkIGludGVsX2d1Y19sb2dfZmluaV9lYXJseShzdHJ1Y3QgaW50ZWxfZ3Vj
X2xvZyAqbG9nKQoreworCXN0cnVjdCB3b3JrcXVldWVfc3RydWN0ICp3cTsKKworCXdxID0gZmV0
Y2hfYW5kX3plcm8oJmxvZy0+cmVsYXkuZmx1c2hfd3EpOworCWlmICh3cSkKKwkJZGVzdHJveV93
b3JrcXVldWUod3EpOwogfQogCiBzdGF0aWMgaW50IGd1Y19sb2dfcmVsYXlfY3JlYXRlKHN0cnVj
dCBpbnRlbF9ndWNfbG9nICpsb2cpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9ndWNfbG9nLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfbG9nLmgKaW5k
ZXggN2JjNzYzZjEwYzAzLi44YjVlMmZjN2RmMjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2d1Y19sb2cuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9n
dWNfbG9nLmgKQEAgLTgwLDcgKzgwLDggQEAgc3RydWN0IGludGVsX2d1Y19sb2cgewogCX0gc3Rh
dHNbR1VDX01BWF9MT0dfQlVGRkVSXTsKIH07CiAKLXZvaWQgaW50ZWxfZ3VjX2xvZ19pbml0X2Vh
cmx5KHN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cpOworaW50IGludGVsX2d1Y19sb2dfaW5pdF9l
YXJseShzdHJ1Y3QgaW50ZWxfZ3VjX2xvZyAqbG9nKTsKK3ZvaWQgaW50ZWxfZ3VjX2xvZ19maW5p
X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cpOwogaW50IGludGVsX2d1Y19sb2dfY3Jl
YXRlKHN0cnVjdCBpbnRlbF9ndWNfbG9nICpsb2cpOwogdm9pZCBpbnRlbF9ndWNfbG9nX2Rlc3Ry
b3koc3RydWN0IGludGVsX2d1Y19sb2cgKmxvZyk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX2h1Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVjLmMK
aW5kZXggZmI2ZjY5M2QzY2FjLi4yYTQxZWU4OWExNmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX2h1Yy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2h1
Yy5jCkBAIC00NCwxNCArNDQsNiBAQCB2b2lkIGludGVsX2h1Y19pbml0X2Vhcmx5KHN0cnVjdCBp
bnRlbF9odWMgKmh1YykKIAl9CiB9CiAKLWludCBpbnRlbF9odWNfaW5pdF9taXNjKHN0cnVjdCBp
bnRlbF9odWMgKmh1YykKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGh1Y190
b19pOTE1KGh1Yyk7Ci0KLQlpbnRlbF91Y19md19mZXRjaChpOTE1LCAmaHVjLT5mdyk7Ci0JcmV0
dXJuIDA7Ci19Ci0KIHN0YXRpYyBpbnQgaW50ZWxfaHVjX3JzYV9kYXRhX2NyZWF0ZShzdHJ1Y3Qg
aW50ZWxfaHVjICpodWMpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBodWNf
dG9faTkxNShodWMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVj
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9odWMuaAppbmRleCAyYTZjOTRlNzlmMTcu
LjlmYTNkNDYyOWYyZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVj
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfaHVjLmgKQEAgLTQ1LDE3ICs0NSwx
MSBAQCBzdHJ1Y3QgaW50ZWxfaHVjIHsKIH07CiAKIHZvaWQgaW50ZWxfaHVjX2luaXRfZWFybHko
c3RydWN0IGludGVsX2h1YyAqaHVjKTsKLWludCBpbnRlbF9odWNfaW5pdF9taXNjKHN0cnVjdCBp
bnRlbF9odWMgKmh1Yyk7CiBpbnQgaW50ZWxfaHVjX2luaXQoc3RydWN0IGludGVsX2h1YyAqaHVj
KTsKIHZvaWQgaW50ZWxfaHVjX2Zpbmkoc3RydWN0IGludGVsX2h1YyAqaHVjKTsKIGludCBpbnRl
bF9odWNfYXV0aChzdHJ1Y3QgaW50ZWxfaHVjICpodWMpOwogaW50IGludGVsX2h1Y19jaGVja19z
dGF0dXMoc3RydWN0IGludGVsX2h1YyAqaHVjKTsKIAotc3RhdGljIGlubGluZSB2b2lkIGludGVs
X2h1Y19maW5pX21pc2Moc3RydWN0IGludGVsX2h1YyAqaHVjKQotewotCWludGVsX3VjX2Z3X2Ns
ZWFudXBfZmV0Y2goJmh1Yy0+ZncpOwotfQotCiBzdGF0aWMgaW5saW5lIGludCBpbnRlbF9odWNf
c2FuaXRpemUoc3RydWN0IGludGVsX2h1YyAqaHVjKQogewogCWludGVsX3VjX2Z3X3Nhbml0aXpl
KCZodWMtPmZ3KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VjLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91Yy5jCmluZGV4IGZkZjAwZjFlYmI1Ny4uYzNl
NjUyMzZjZmJhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91Yy5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VjLmMKQEAgLTE3MSwxNSArMTcxLDE5IEBA
IHN0YXRpYyB2b2lkIHNhbml0aXplX29wdGlvbnNfZWFybHkoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCiAJR0VNX0JVR19PTihpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsIDwgMCk7
CiB9CiAKLXZvaWQgaW50ZWxfdWNfaW5pdF9lYXJseShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKK2ludCBpbnRlbF91Y19pbml0X2Vhcmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1KQogewotCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZpOTE1LT5ndWM7Ci0Jc3RydWN0IGlu
dGVsX2h1YyAqaHVjID0gJmk5MTUtPmh1YzsKKwlpbnQgcmV0OworCisJcmV0ID0gaW50ZWxfZ3Vj
X2luaXRfZWFybHkoJmk5MTUtPmd1Yyk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKIAotCWlu
dGVsX2d1Y19pbml0X2Vhcmx5KGd1Yyk7Ci0JaW50ZWxfaHVjX2luaXRfZWFybHkoaHVjKTsKKwlp
bnRlbF9odWNfaW5pdF9lYXJseSgmaTkxNS0+aHVjKTsKIAogCXNhbml0aXplX29wdGlvbnNfZWFy
bHkoaTkxNSk7CisKKwlyZXR1cm4gMDsKIH0KIAogdm9pZCBpbnRlbF91Y19jbGVhbnVwX2Vhcmx5
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQpAQCAtMTg3LDYgKzE5MSw4IEBAIHZvaWQg
aW50ZWxfdWNfY2xlYW51cF9lYXJseShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkxNS0+Z3VjOwogCiAJZ3VjX2ZyZWVfbG9hZF9lcnJf
bG9nKGd1Yyk7CisKKwlpbnRlbF9ndWNfZmluaV9lYXJseShndWMpOwogfQogCiAvKioKQEAgLTM0
NSw0NCArMzUxLDI2IEBAIHN0YXRpYyB2b2lkIGd1Y19kaXNhYmxlX2NvbW11bmljYXRpb24oc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKQogCURSTV9JTkZPKCJHdUMgY29tbXVuaWNhdGlvbiBkaXNhYmxl
ZFxuIik7CiB9CiAKLWludCBpbnRlbF91Y19pbml0X21pc2Moc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCit2b2lkIGludGVsX3VjX2ZldGNoX2Zpcm13YXJlcyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkxNS0+Z3VjOwot
CXN0cnVjdCBpbnRlbF9odWMgKmh1YyA9ICZpOTE1LT5odWM7Ci0JaW50IHJldDsKLQogCWlmICgh
VVNFU19HVUMoaTkxNSkpCi0JCXJldHVybiAwOwotCi0JcmV0ID0gaW50ZWxfZ3VjX2luaXRfbWlz
YyhndWMpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7CisJCXJldHVybjsKIAotCWlmIChVU0VT
X0hVQyhpOTE1KSkgewotCQlyZXQgPSBpbnRlbF9odWNfaW5pdF9taXNjKGh1Yyk7Ci0JCWlmIChy
ZXQpCi0JCQlnb3RvIGVycl9ndWM7Ci0JfQorCWludGVsX3VjX2Z3X2ZldGNoKGk5MTUsICZpOTE1
LT5ndWMuZncpOwogCi0JcmV0dXJuIDA7Ci0KLWVycl9ndWM6Ci0JaW50ZWxfZ3VjX2ZpbmlfbWlz
YyhndWMpOwotCXJldHVybiByZXQ7CisJaWYgKFVTRVNfSFVDKGk5MTUpKQorCQlpbnRlbF91Y19m
d19mZXRjaChpOTE1LCAmaTkxNS0+aHVjLmZ3KTsKIH0KIAotdm9pZCBpbnRlbF91Y19maW5pX21p
c2Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCit2b2lkIGludGVsX3VjX2NsZWFudXBf
ZmlybXdhcmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewotCXN0cnVjdCBpbnRl
bF9ndWMgKmd1YyA9ICZpOTE1LT5ndWM7Ci0Jc3RydWN0IGludGVsX2h1YyAqaHVjID0gJmk5MTUt
Pmh1YzsKLQogCWlmICghVVNFU19HVUMoaTkxNSkpCiAJCXJldHVybjsKIAogCWlmIChVU0VTX0hV
QyhpOTE1KSkKLQkJaW50ZWxfaHVjX2ZpbmlfbWlzYyhodWMpOworCQlpbnRlbF91Y19md19jbGVh
bnVwX2ZldGNoKCZpOTE1LT5odWMuZncpOwogCi0JaW50ZWxfZ3VjX2ZpbmlfbWlzYyhndWMpOwor
CWludGVsX3VjX2Z3X2NsZWFudXBfZmV0Y2goJmk5MTUtPmd1Yy5mdyk7CiB9CiAKIGludCBpbnRl
bF91Y19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdWMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X3VjLmgKaW5kZXggM2VhMDZjODdkZmNkLi5jMzAyMjg5MGU2MDQgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3VjLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfdWMuaApAQCAtMjgsMTEgKzI4LDExIEBACiAjaW5jbHVkZSAiaW50ZWxfaHVjLmgiCiAjaW5j
bHVkZSAiaTkxNV9wYXJhbXMuaCIKIAotdm9pZCBpbnRlbF91Y19pbml0X2Vhcmx5KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CitpbnQgaW50ZWxfdWNfaW5pdF9lYXJseShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRlbF91Y19jbGVhbnVwX2Vh
cmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGludGVsX3VjX2lu
aXRfbW1pbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotaW50IGludGVsX3Vj
X2luaXRfbWlzYyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotdm9pZCBpbnRl
bF91Y19maW5pX21pc2Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKK3ZvaWQg
aW50ZWxfdWNfZmV0Y2hfZmlybXdhcmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dik7Cit2b2lkIGludGVsX3VjX2NsZWFudXBfZmlybXdhcmVzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdik7CiB2b2lkIGludGVsX3VjX3Nhbml0aXplKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdik7CiBpbnQgaW50ZWxfdWNfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRlbF91Y19maW5pX2h3KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdik7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

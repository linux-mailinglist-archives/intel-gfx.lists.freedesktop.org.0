Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8672CC3615
	for <lists+intel-gfx@lfdr.de>; Tue,  1 Oct 2019 15:44:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 871536E79F;
	Tue,  1 Oct 2019 13:44:02 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A3C246E79F
 for <intel-gfx@lists.freedesktop.org>; Tue,  1 Oct 2019 13:44:01 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 01 Oct 2019 06:44:01 -0700
X-IronPort-AV: E=Sophos;i="5.64,571,1559545200"; d="scan'208";a="181694632"
Received: from jnikula-mobl3.fi.intel.com (HELO localhost) ([10.237.66.161])
 by orsmga007-auth.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 01 Oct 2019 06:43:57 -0700
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  1 Oct 2019 16:43:53 +0300
Message-Id: <20191001134353.12028-1-jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Subject: [Intel-gfx] [PATCH] drm/i915/display: split out
 intel_vga_client.[ch]
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3BsaXQgb3V0IGNvZGUgcmVsYXRlZCB0byB2Z2EgY2xpZW50IGFuZCB2Z2Egc3dpdGNoZXJvbwpy
ZWdpc3Rlci91bnJlZ2lzdGVyIGFuZCBzdGF0ZSBoYW5kbGluZyBmcm9tIGk5MTVfZHJ2LmMgYW5k
CmludGVsX2Rpc3BsYXkuYy4KCkl0J3MgYSBiaXQgZGlmZmljdWx0IHRvIGRyYXcgdGhlIGxpbmUg
aG93IG11Y2ggdG8gbW92ZSB0byB0aGUgbmV3IGZpbGUKZnJvbSBpOTE1X2Rydi5jLCBidXQgaXQg
c2VlbWVkIHRvIG1lIGtlZXBpbmcgaTkxNV9zdXNwZW5kX3N3aXRjaGVyb28oKQphbmQgaTkxNV9y
ZXN1bWVfc3dpdGNoZXJvbygpIGluIHBsYWNlIHdhcyBjbGVhbmVzdC4KCk5vIGZ1bmN0aW9uYWwg
Y2hhbmdlcy4KCkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwu
Y29tPgpDYzogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+ClNpZ25lZC1v
ZmYtYnk6IEphbmkgTmlrdWxhIDxqYW5pLm5pa3VsYUBpbnRlbC5jb20+CgotLS0KCkl0J3MgYWxz
byBhIGJpdCBmdXp6eSBpZiB0aGlzIGlzIGEgc2Vuc2libGUgc3BsaXQgYW55d2F5LiBDb3VsZCBh
bHNvCm5hbWUgaXQgaW50ZWxfdmdhIGFuZCBtb3ZlIHRoZXNlIGZyb20gaW50ZWxfZGlzcGxheS5j
IHRoZXJlPwoKaTkxNV92Z2FjbnRybF9yZWcKaTkxNV9kaXNhYmxlX3ZnYQppOTE1X3JlZGlzYWJs
ZV92Z2EKaTkxNV9yZWRpc2FibGVfdmdhX3Bvd2VyX29uCi0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvTWFrZWZpbGUgICAgICAgICAgICAgICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgMjkgLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggIHwgICAxIC0KIC4uLi9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF92Z2FfY2xpZW50LmMgICB8IDE0MCArKysrKysrKysrKysrKysrKysKIC4uLi9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF92Z2FfY2xpZW50LmggICB8ICAxNCArKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAgICAgICAgICAgIHwgIDk0ICstLS0tLS0tLS0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgIHwgICAzICsK
IDcgZmlsZXMgY2hhbmdlZCwgMTY2IGluc2VydGlvbnMoKyksIDExOCBkZWxldGlvbnMoLSkKIGNy
ZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3ZnYV9j
bGllbnQuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfdmdhX2NsaWVudC5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFr
ZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQppbmRleCBlMDQ0NjNkODU0MDEu
LmNhNzcwNDYzZTAxZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKQEAgLTE4NCw3ICsxODQsOCBAQCBp
OTE1LXkgKz0gXAogCWRpc3BsYXkvaW50ZWxfcHNyLm8gXAogCWRpc3BsYXkvaW50ZWxfcXVpcmtz
Lm8gXAogCWRpc3BsYXkvaW50ZWxfc3ByaXRlLm8gXAotCWRpc3BsYXkvaW50ZWxfdGMubworCWRp
c3BsYXkvaW50ZWxfdGMubyBcCisJZGlzcGxheS9pbnRlbF92Z2FfY2xpZW50Lm8KIGk5MTUtJChD
T05GSUdfQUNQSSkgKz0gXAogCWRpc3BsYXkvaW50ZWxfYWNwaS5vIFwKIAlkaXNwbGF5L2ludGVs
X29wcmVnaW9uLm8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMKaW5kZXggZjEzMjhjMDhmNGFkLi42Mjc4ZDYyYmM4N2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0xNzE4OCwzNSArMTcxODgsNiBAQCB2
b2lkIGludGVsX21vZGVzZXRfZHJpdmVyX3JlbW92ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKIAlpbnRlbF9mYmNfY2xlYW51cF9jZmIoaTkxNSk7CiB9CiAKLS8qCi0gKiBzZXQgdmdh
IGRlY29kZSBzdGF0ZSAtIHRydWUgPT0gZW5hYmxlIFZHQSBkZWNvZGUKLSAqLwotaW50IGludGVs
X21vZGVzZXRfdmdhX3NldF9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IGJvb2wgc3RhdGUpCi17Ci0JdW5zaWduZWQgcmVnID0gSU5URUxfR0VOKGRldl9wcml2KSA+PSA2
ID8gU05CX0dNQ0hfQ1RSTCA6IElOVEVMX0dNQ0hfQ1RSTDsKLQl1MTYgZ21jaF9jdHJsOwotCi0J
aWYgKHBjaV9yZWFkX2NvbmZpZ193b3JkKGRldl9wcml2LT5icmlkZ2VfZGV2LCByZWcsICZnbWNo
X2N0cmwpKSB7Ci0JCURSTV9FUlJPUigiZmFpbGVkIHRvIHJlYWQgY29udHJvbCB3b3JkXG4iKTsK
LQkJcmV0dXJuIC1FSU87Ci0JfQotCi0JaWYgKCEhKGdtY2hfY3RybCAmIElOVEVMX0dNQ0hfVkdB
X0RJU0FCTEUpID09ICFzdGF0ZSkKLQkJcmV0dXJuIDA7Ci0KLQlpZiAoc3RhdGUpCi0JCWdtY2hf
Y3RybCAmPSB+SU5URUxfR01DSF9WR0FfRElTQUJMRTsKLQllbHNlCi0JCWdtY2hfY3RybCB8PSBJ
TlRFTF9HTUNIX1ZHQV9ESVNBQkxFOwotCi0JaWYgKHBjaV93cml0ZV9jb25maWdfd29yZChkZXZf
cHJpdi0+YnJpZGdlX2RldiwgcmVnLCBnbWNoX2N0cmwpKSB7Ci0JCURSTV9FUlJPUigiZmFpbGVk
IHRvIHdyaXRlIGNvbnRyb2wgd29yZFxuIik7Ci0JCXJldHVybiAtRUlPOwotCX0KLQotCXJldHVy
biAwOwotfQotCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfQ0FQVFVSRV9FUlJPUikK
IAogc3RydWN0IGludGVsX2Rpc3BsYXlfZXJyb3Jfc3RhdGUgewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAppbmRleCA0YjllMThlNWEyNjMuLmE3YjBkMTFh
MzMxNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmgK
QEAgLTU3OSw3ICs1NzksNiBAQCB2b2lkIGludGVsX2Rpc3BsYXlfcHJpbnRfZXJyb3Jfc3RhdGUo
c3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1ZiAqZSwKIHZvaWQgaW50ZWxfbW9kZXNldF9p
bml0X2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKIGludCBpbnRlbF9tb2Rlc2V0
X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwogdm9pZCBpbnRlbF9tb2Rlc2V0
X2RyaXZlcl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwotaW50IGludGVs
X21vZGVzZXRfdmdhX3NldF9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IGJvb2wgc3RhdGUpOwogdm9pZCBpbnRlbF9kaXNwbGF5X3Jlc3VtZShzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2KTsKIHZvaWQgaTkxNV9yZWRpc2FibGVfdmdhKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdik7CiB2b2lkIGk5MTVfcmVkaXNhYmxlX3ZnYV9wb3dlcl9vbihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF92Z2FfY2xpZW50LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX3ZnYV9jbGllbnQuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAw
MDAwMDAuLjA0ZWYxNDQzZjQwZQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfdmdhX2NsaWVudC5jCkBAIC0wLDAgKzEsMTQwIEBACisvLyBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwg
Q29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSA8bGludXgvcGNpLmg+CisjaW5jbHVkZSA8bGlu
dXgvdmdhX3N3aXRjaGVyb28uaD4KKyNpbmNsdWRlIDxsaW51eC92Z2FhcmIuaD4KKworI2luY2x1
ZGUgPGRybS9pOTE1X2RybS5oPgorCisjaW5jbHVkZSAiaTkxNV9kcnYuaCIKKyNpbmNsdWRlICJp
bnRlbF9hY3BpLmgiCisjaW5jbHVkZSAiaW50ZWxfdmdhX2NsaWVudC5oIgorCitzdGF0aWMgaW50
CitpbnRlbF92Z2FfY2xpZW50X3NldF9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwgYm9vbCBlbmFibGVfZGVjb2RlKQoreworCXVuc2lnbmVkIGludCByZWcgPSBJTlRFTF9HRU4o
aTkxNSkgPj0gNiA/IFNOQl9HTUNIX0NUUkwgOiBJTlRFTF9HTUNIX0NUUkw7CisJdTE2IGdtY2hf
Y3RybDsKKworCWlmIChwY2lfcmVhZF9jb25maWdfd29yZChpOTE1LT5icmlkZ2VfZGV2LCByZWcs
ICZnbWNoX2N0cmwpKSB7CisJCURSTV9FUlJPUigiZmFpbGVkIHRvIHJlYWQgY29udHJvbCB3b3Jk
XG4iKTsKKwkJcmV0dXJuIC1FSU87CisJfQorCisJaWYgKCEhKGdtY2hfY3RybCAmIElOVEVMX0dN
Q0hfVkdBX0RJU0FCTEUpID09ICFlbmFibGVfZGVjb2RlKQorCQlyZXR1cm4gMDsKKworCWlmIChl
bmFibGVfZGVjb2RlKQorCQlnbWNoX2N0cmwgJj0gfklOVEVMX0dNQ0hfVkdBX0RJU0FCTEU7CisJ
ZWxzZQorCQlnbWNoX2N0cmwgfD0gSU5URUxfR01DSF9WR0FfRElTQUJMRTsKKworCWlmIChwY2lf
d3JpdGVfY29uZmlnX3dvcmQoaTkxNS0+YnJpZGdlX2RldiwgcmVnLCBnbWNoX2N0cmwpKSB7CisJ
CURSTV9FUlJPUigiZmFpbGVkIHRvIHdyaXRlIGNvbnRyb2wgd29yZFxuIik7CisJCXJldHVybiAt
RUlPOworCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgdW5zaWduZWQgaW50CitpbnRlbF92
Z2FfY2xpZW50X3NldF9kZWNvZGUodm9pZCAqY29va2llLCBib29sIGVuYWJsZV9kZWNvZGUpCit7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBjb29raWU7CisKKwlpbnRlbF92Z2Ff
Y2xpZW50X3NldF9zdGF0ZShpOTE1LCBlbmFibGVfZGVjb2RlKTsKKworCWlmIChlbmFibGVfZGVj
b2RlKQorCQlyZXR1cm4gVkdBX1JTUkNfTEVHQUNZX0lPIHwgVkdBX1JTUkNfTEVHQUNZX01FTSB8
CisJCSAgICAgICBWR0FfUlNSQ19OT1JNQUxfSU8gfCBWR0FfUlNSQ19OT1JNQUxfTUVNOworCWVs
c2UKKwkJcmV0dXJuIFZHQV9SU1JDX05PUk1BTF9JTyB8IFZHQV9SU1JDX05PUk1BTF9NRU07Cit9
CisKK3N0YXRpYyBib29sIGludGVsX3ZnYV9zd2l0Y2hlcm9vX2Nhbl9zd2l0Y2goc3RydWN0IHBj
aV9kZXYgKnBkZXYpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBwZGV2X3Rv
X2k5MTUocGRldik7CisKKwkvKgorCSAqIEZJWE1FOiBvcGVuX2NvdW50IGlzIHByb3RlY3RlZCBi
eSBkcm1fZ2xvYmFsX211dGV4IGJ1dCB0aGF0IHdvdWxkCisJICogbGVhZCB0byBsb2NraW5nIGlu
dmVyc2lvbiB3aXRoIHRoZSBkcml2ZXIgbG9hZCBwYXRoLiBBbmQgdGhlIGFjY2VzcworCSAqIGhl
cmUgaXMgY29tcGxldGVseSByYWN5IGFueXdheS4gU28gZG9uJ3QgYm90aGVyIHdpdGggbG9ja2lu
ZyBmb3Igbm93LgorCSAqLworCXJldHVybiBpOTE1ICYmIGk5MTUtPmRybS5vcGVuX2NvdW50ID09
IDA7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsX3ZnYV9zd2l0Y2hlcm9vX3NldF9zdGF0ZShzdHJ1
Y3QgcGNpX2RldiAqcGRldiwKKwkJCQkJICAgZW51bSB2Z2Ffc3dpdGNoZXJvb19zdGF0ZSBzdGF0
ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHBkZXZfdG9faTkxNShwZGV2
KTsKKwlwbV9tZXNzYWdlX3QgcG1tID0geyAuZXZlbnQgPSBQTV9FVkVOVF9TVVNQRU5EIH07CisK
KwlpZiAoIWk5MTUpIHsKKwkJZGV2X2VycigmcGRldi0+ZGV2LCAiRFJNIG5vdCBpbml0aWFsaXpl
ZCwgYWJvcnRpbmcgc3dpdGNoLlxuIik7CisJCXJldHVybjsKKwl9CisKKwlpZiAoc3RhdGUgPT0g
VkdBX1NXSVRDSEVST09fT04pIHsKKwkJcHJfaW5mbygic3dpdGNoZWQgb25cbiIpOworCQlpOTE1
LT5kcm0uc3dpdGNoX3Bvd2VyX3N0YXRlID0gRFJNX1NXSVRDSF9QT1dFUl9DSEFOR0lORzsKKwkJ
LyogaTkxNSByZXN1bWUgaGFuZGxlciBkb2Vzbid0IHNldCB0byBEMCAqLworCQlwY2lfc2V0X3Bv
d2VyX3N0YXRlKHBkZXYsIFBDSV9EMCk7CisJCWk5MTVfcmVzdW1lX3N3aXRjaGVyb28oaTkxNSk7
CisJCWk5MTUtPmRybS5zd2l0Y2hfcG93ZXJfc3RhdGUgPSBEUk1fU1dJVENIX1BPV0VSX09OOwor
CX0gZWxzZSB7CisJCXByX2luZm8oInN3aXRjaGVkIG9mZlxuIik7CisJCWk5MTUtPmRybS5zd2l0
Y2hfcG93ZXJfc3RhdGUgPSBEUk1fU1dJVENIX1BPV0VSX0NIQU5HSU5HOworCQlpOTE1X3N1c3Bl
bmRfc3dpdGNoZXJvbyhpOTE1LCBwbW0pOworCQlpOTE1LT5kcm0uc3dpdGNoX3Bvd2VyX3N0YXRl
ID0gRFJNX1NXSVRDSF9QT1dFUl9PRkY7CisJfQorfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IHZn
YV9zd2l0Y2hlcm9vX2NsaWVudF9vcHMgaTkxNV9zd2l0Y2hlcm9vX29wcyA9IHsKKwkuc2V0X2dw
dV9zdGF0ZSA9IGludGVsX3ZnYV9zd2l0Y2hlcm9vX3NldF9zdGF0ZSwKKwkucmVwcm9iZSA9IE5V
TEwsCisJLmNhbl9zd2l0Y2ggPSBpbnRlbF92Z2Ffc3dpdGNoZXJvb19jYW5fc3dpdGNoLAorfTsK
KworaW50IGludGVsX3ZnYV9jbGllbnRfcmVnaXN0ZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUpCit7CisJc3RydWN0IHBjaV9kZXYgKnBkZXYgPSBpOTE1LT5kcm0ucGRldjsKKwlpbnQg
cmV0OworCisJLyoKKwkgKiBJZiB3ZSBoYXZlID4gMSBWR0EgY2FyZHMsIHRoZW4gd2UgbmVlZCB0
byBhcmJpdHJhdGUgYWNjZXNzIHRvIHRoZQorCSAqIGNvbW1vbiBWR0EgcmVzb3VyY2VzLgorCSAq
CisJICogSWYgd2UgYXJlIGEgc2Vjb25kYXJ5IGRpc3BsYXkgY29udHJvbGxlciAoIVBDSV9ESVNQ
TEFZX0NMQVNTX1ZHQSksCisJICogdGhlbiB3ZSBkbyBub3QgdGFrZSBwYXJ0IGluIFZHQSBhcmJp
dHJhdGlvbiBhbmQgdGhlCisJICogdmdhX2NsaWVudF9yZWdpc3RlcigpIGZhaWxzIHdpdGggLUVO
T0RFVi4KKwkgKi8KKwlyZXQgPSB2Z2FfY2xpZW50X3JlZ2lzdGVyKHBkZXYsIGk5MTUsIE5VTEws
IGludGVsX3ZnYV9jbGllbnRfc2V0X2RlY29kZSk7CisJaWYgKHJldCAmJiByZXQgIT0gLUVOT0RF
VikKKwkJZ290byBvdXQ7CisKKwlpbnRlbF9yZWdpc3Rlcl9kc21faGFuZGxlcigpOworCisJcmV0
ID0gdmdhX3N3aXRjaGVyb29fcmVnaXN0ZXJfY2xpZW50KHBkZXYsICZpOTE1X3N3aXRjaGVyb29f
b3BzLCBmYWxzZSk7CisJaWYgKHJldCkKKwkJZ290byBvdXRfdW5yZWdpc3RlcjsKKworCXJldHVy
biAwOworCitvdXRfdW5yZWdpc3RlcjoKKwlpbnRlbF91bnJlZ2lzdGVyX2RzbV9oYW5kbGVyKCk7
CisJdmdhX2NsaWVudF9yZWdpc3RlcihwZGV2LCBOVUxMLCBOVUxMLCBOVUxMKTsKK291dDoKKwly
ZXR1cm4gcmV0OworfQorCit2b2lkIGludGVsX3ZnYV9jbGllbnRfdW5yZWdpc3RlcihzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlzdHJ1Y3QgcGNpX2RldiAqcGRldiA9IGk5MTUt
PmRybS5wZGV2OworCisJdmdhX3N3aXRjaGVyb29fdW5yZWdpc3Rlcl9jbGllbnQocGRldik7CisJ
aW50ZWxfdW5yZWdpc3Rlcl9kc21faGFuZGxlcigpOworCXZnYV9jbGllbnRfcmVnaXN0ZXIocGRl
diwgTlVMTCwgTlVMTCwgTlVMTCk7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX3ZnYV9jbGllbnQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfdmdhX2NsaWVudC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAw
MDAwMC4uMzM0ZWI5MGEyZTRiCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF92Z2FfY2xpZW50LmgKQEAgLTAsMCArMSwxNCBAQAorLyogU1BEWC1M
aWNlbnNlLUlkZW50aWZpZXI6IE1JVCAqLworLyoKKyAqIENvcHlyaWdodCDCqSAyMDE5IEludGVs
IENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBfX0lOVEVMX1ZHQV9DTElFTlRfSF9fCisjZGVm
aW5lIF9fSU5URUxfVkdBX0NMSUVOVF9IX18KKworc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CisK
K2ludCBpbnRlbF92Z2FfY2xpZW50X3JlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1KTsKK3ZvaWQgaW50ZWxfdmdhX2NsaWVudF91bnJlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KTsKKworI2VuZGlmIC8qIF9fSU5URUxfVkdBX0NMSUVOVF9IX18gKi8KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2Rydi5jCmluZGV4IDkxYWFlNTZiNDI4MC4uYTM2MTMxYjE1YTZmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmMKQEAgLTM2LDcgKzM2LDYgQEAKICNpbmNsdWRlIDxsaW51eC9w
bV9ydW50aW1lLmg+CiAjaW5jbHVkZSA8bGludXgvcG5wLmg+CiAjaW5jbHVkZSA8bGludXgvc2xh
Yi5oPgotI2luY2x1ZGUgPGxpbnV4L3ZnYWFyYi5oPgogI2luY2x1ZGUgPGxpbnV4L3ZnYV9zd2l0
Y2hlcm9vLmg+CiAjaW5jbHVkZSA8bGludXgvdnQuaD4KICNpbmNsdWRlIDxhY3BpL3ZpZGVvLmg+
CkBAIC01OSw2ICs1OCw3IEBACiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9vdmVybGF5LmgiCiAj
aW5jbHVkZSAiZGlzcGxheS9pbnRlbF9waXBlX2NyYy5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50
ZWxfc3ByaXRlLmgiCisjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF92Z2FfY2xpZW50LmgiCiAKICNp
bmNsdWRlICJnZW0vaTkxNV9nZW1fY29udGV4dC5oIgogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9p
b2N0bHMuaCIKQEAgLTI2OSw2OSArMjY5LDggQEAgaW50ZWxfdGVhcmRvd25fbWNoYmFyKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJcmVsZWFzZV9yZXNvdXJjZSgmZGV2X3By
aXYtPm1jaF9yZXMpOwogfQogCi0vKiB0cnVlID0gZW5hYmxlIGRlY29kZSwgZmFsc2UgPSBkaXNh
YmxlIGRlY29kZXIgKi8KLXN0YXRpYyB1bnNpZ25lZCBpbnQgaTkxNV92Z2Ffc2V0X2RlY29kZSh2
b2lkICpjb29raWUsIGJvb2wgc3RhdGUpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gY29va2llOwotCi0JaW50ZWxfbW9kZXNldF92Z2Ffc2V0X3N0YXRlKGRldl9wcml2
LCBzdGF0ZSk7Ci0JaWYgKHN0YXRlKQotCQlyZXR1cm4gVkdBX1JTUkNfTEVHQUNZX0lPIHwgVkdB
X1JTUkNfTEVHQUNZX01FTSB8Ci0JCSAgICAgICBWR0FfUlNSQ19OT1JNQUxfSU8gfCBWR0FfUlNS
Q19OT1JNQUxfTUVNOwotCWVsc2UKLQkJcmV0dXJuIFZHQV9SU1JDX05PUk1BTF9JTyB8IFZHQV9S
U1JDX05PUk1BTF9NRU07Ci19Ci0KLXN0YXRpYyBpbnQgaTkxNV9yZXN1bWVfc3dpdGNoZXJvbyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7Ci1zdGF0aWMgaW50IGk5MTVfc3VzcGVuZF9z
d2l0Y2hlcm9vKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAotCQkJCSAgIHBtX21lc3Nh
Z2VfdCBzdGF0ZSk7Ci0KLXN0YXRpYyB2b2lkIGk5MTVfc3dpdGNoZXJvb19zZXRfc3RhdGUoc3Ry
dWN0IHBjaV9kZXYgKnBkZXYsIGVudW0gdmdhX3N3aXRjaGVyb29fc3RhdGUgc3RhdGUpCi17Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBwZGV2X3RvX2k5MTUocGRldik7Ci0JcG1f
bWVzc2FnZV90IHBtbSA9IHsgLmV2ZW50ID0gUE1fRVZFTlRfU1VTUEVORCB9OwotCi0JaWYgKCFp
OTE1KSB7Ci0JCWRldl9lcnIoJnBkZXYtPmRldiwgIkRSTSBub3QgaW5pdGlhbGl6ZWQsIGFib3J0
aW5nIHN3aXRjaC5cbiIpOwotCQlyZXR1cm47Ci0JfQotCi0JaWYgKHN0YXRlID09IFZHQV9TV0lU
Q0hFUk9PX09OKSB7Ci0JCXByX2luZm8oInN3aXRjaGVkIG9uXG4iKTsKLQkJaTkxNS0+ZHJtLnN3
aXRjaF9wb3dlcl9zdGF0ZSA9IERSTV9TV0lUQ0hfUE9XRVJfQ0hBTkdJTkc7Ci0JCS8qIGk5MTUg
cmVzdW1lIGhhbmRsZXIgZG9lc24ndCBzZXQgdG8gRDAgKi8KLQkJcGNpX3NldF9wb3dlcl9zdGF0
ZShwZGV2LCBQQ0lfRDApOwotCQlpOTE1X3Jlc3VtZV9zd2l0Y2hlcm9vKGk5MTUpOwotCQlpOTE1
LT5kcm0uc3dpdGNoX3Bvd2VyX3N0YXRlID0gRFJNX1NXSVRDSF9QT1dFUl9PTjsKLQl9IGVsc2Ug
ewotCQlwcl9pbmZvKCJzd2l0Y2hlZCBvZmZcbiIpOwotCQlpOTE1LT5kcm0uc3dpdGNoX3Bvd2Vy
X3N0YXRlID0gRFJNX1NXSVRDSF9QT1dFUl9DSEFOR0lORzsKLQkJaTkxNV9zdXNwZW5kX3N3aXRj
aGVyb28oaTkxNSwgcG1tKTsKLQkJaTkxNS0+ZHJtLnN3aXRjaF9wb3dlcl9zdGF0ZSA9IERSTV9T
V0lUQ0hfUE9XRVJfT0ZGOwotCX0KLX0KLQotc3RhdGljIGJvb2wgaTkxNV9zd2l0Y2hlcm9vX2Nh
bl9zd2l0Y2goc3RydWN0IHBjaV9kZXYgKnBkZXYpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUgPSBwZGV2X3RvX2k5MTUocGRldik7Ci0KLQkvKgotCSAqIEZJWE1FOiBvcGVuX2Nv
dW50IGlzIHByb3RlY3RlZCBieSBkcm1fZ2xvYmFsX211dGV4IGJ1dCB0aGF0IHdvdWxkIGxlYWQg
dG8KLQkgKiBsb2NraW5nIGludmVyc2lvbiB3aXRoIHRoZSBkcml2ZXIgbG9hZCBwYXRoLiBBbmQg
dGhlIGFjY2VzcyBoZXJlIGlzCi0JICogY29tcGxldGVseSByYWN5IGFueXdheS4gU28gZG9uJ3Qg
Ym90aGVyIHdpdGggbG9ja2luZyBmb3Igbm93LgotCSAqLwotCXJldHVybiBpOTE1ICYmIGk5MTUt
PmRybS5vcGVuX2NvdW50ID09IDA7Ci19Ci0KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgdmdhX3N3aXRj
aGVyb29fY2xpZW50X29wcyBpOTE1X3N3aXRjaGVyb29fb3BzID0gewotCS5zZXRfZ3B1X3N0YXRl
ID0gaTkxNV9zd2l0Y2hlcm9vX3NldF9zdGF0ZSwKLQkucmVwcm9iZSA9IE5VTEwsCi0JLmNhbl9z
d2l0Y2ggPSBpOTE1X3N3aXRjaGVyb29fY2FuX3N3aXRjaCwKLX07Ci0KIHN0YXRpYyBpbnQgaTkx
NV9kcml2ZXJfbW9kZXNldF9wcm9iZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsK
LQlzdHJ1Y3QgcGNpX2RldiAqcGRldiA9IGk5MTUtPmRybS5wZGV2OwogCWludCByZXQ7CiAKIAlp
ZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZShpOTE1KSkKQEAgLTM0NiwyMiArMjg1LDkgQEAg
c3RhdGljIGludCBpOTE1X2RyaXZlcl9tb2Rlc2V0X3Byb2JlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1KQogCiAJaW50ZWxfYmlvc19pbml0KGk5MTUpOwogCi0JLyogSWYgd2UgaGF2ZSA+
IDEgVkdBIGNhcmRzLCB0aGVuIHdlIG5lZWQgdG8gYXJiaXRyYXRlIGFjY2VzcwotCSAqIHRvIHRo
ZSBjb21tb24gVkdBIHJlc291cmNlcy4KLQkgKgotCSAqIElmIHdlIGFyZSBhIHNlY29uZGFyeSBk
aXNwbGF5IGNvbnRyb2xsZXIgKCFQQ0lfRElTUExBWV9DTEFTU19WR0EpLAotCSAqIHRoZW4gd2Ug
ZG8gbm90IHRha2UgcGFydCBpbiBWR0EgYXJiaXRyYXRpb24gYW5kIHRoZQotCSAqIHZnYV9jbGll
bnRfcmVnaXN0ZXIoKSBmYWlscyB3aXRoIC1FTk9ERVYuCi0JICovCi0JcmV0ID0gdmdhX2NsaWVu
dF9yZWdpc3RlcihwZGV2LCBpOTE1LCBOVUxMLCBpOTE1X3ZnYV9zZXRfZGVjb2RlKTsKLQlpZiAo
cmV0ICYmIHJldCAhPSAtRU5PREVWKQotCQlnb3RvIG91dDsKLQotCWludGVsX3JlZ2lzdGVyX2Rz
bV9oYW5kbGVyKCk7Ci0KLQlyZXQgPSB2Z2Ffc3dpdGNoZXJvb19yZWdpc3Rlcl9jbGllbnQocGRl
diwgJmk5MTVfc3dpdGNoZXJvb19vcHMsIGZhbHNlKTsKKwlyZXQgPSBpbnRlbF92Z2FfY2xpZW50
X3JlZ2lzdGVyKGk5MTUpOwogCWlmIChyZXQpCi0JCWdvdG8gY2xlYW51cF92Z2FfY2xpZW50Owor
CQlnb3RvIG91dDsKIAogCS8qIG11c3QgaGFwcGVuIGJlZm9yZSBpbnRlbF9wb3dlcl9kb21haW5z
X2luaXRfaHcoKSBvbiBWTFYvQ0hWICovCiAJaW50ZWxfdXBkYXRlX3Jhd2NsayhpOTE1KTsKQEAg
LTQxNCwyMyArMzQwLDE4IEBAIHN0YXRpYyBpbnQgaTkxNV9kcml2ZXJfbW9kZXNldF9wcm9iZShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIGNsZWFudXBfY3NyOgogCWludGVsX2Nzcl91
Y29kZV9maW5pKGk5MTUpOwogCWludGVsX3Bvd2VyX2RvbWFpbnNfZHJpdmVyX3JlbW92ZShpOTE1
KTsKLQl2Z2Ffc3dpdGNoZXJvb191bnJlZ2lzdGVyX2NsaWVudChwZGV2KTsKLWNsZWFudXBfdmdh
X2NsaWVudDoKLQl2Z2FfY2xpZW50X3JlZ2lzdGVyKHBkZXYsIE5VTEwsIE5VTEwsIE5VTEwpOwor
CWludGVsX3ZnYV9jbGllbnRfdW5yZWdpc3RlcihpOTE1KTsKIG91dDoKIAlyZXR1cm4gcmV0Owog
fQogCiBzdGF0aWMgdm9pZCBpOTE1X2RyaXZlcl9tb2Rlc2V0X3JlbW92ZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSkKIHsKLQlzdHJ1Y3QgcGNpX2RldiAqcGRldiA9IGk5MTUtPmRybS5w
ZGV2OwotCiAJaW50ZWxfbW9kZXNldF9kcml2ZXJfcmVtb3ZlKGk5MTUpOwogCiAJaW50ZWxfYmlv
c19kcml2ZXJfcmVtb3ZlKGk5MTUpOwogCi0JdmdhX3N3aXRjaGVyb29fdW5yZWdpc3Rlcl9jbGll
bnQocGRldik7Ci0JdmdhX2NsaWVudF9yZWdpc3RlcihwZGV2LCBOVUxMLCBOVUxMLCBOVUxMKTsK
KwlpbnRlbF92Z2FfY2xpZW50X3VucmVnaXN0ZXIoaTkxNSk7CiAKIAlpbnRlbF9jc3JfdWNvZGVf
ZmluaShpOTE1KTsKIH0KQEAgLTE4NDUsOCArMTc2Niw3IEBAIHN0YXRpYyBpbnQgaTkxNV9kcm1f
c3VzcGVuZF9sYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIGJvb2wgaGliZXJuYXRpb24pCiAJ
cmV0dXJuIHJldDsKIH0KIAotc3RhdGljIGludAotaTkxNV9zdXNwZW5kX3N3aXRjaGVyb28oc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHBtX21lc3NhZ2VfdCBzdGF0ZSkKK2ludCBpOTE1
X3N1c3BlbmRfc3dpdGNoZXJvbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgcG1fbWVz
c2FnZV90IHN0YXRlKQogewogCWludCBlcnJvcjsKIApAQCAtMjAxNCw3ICsxOTM0LDcgQEAgc3Rh
dGljIGludCBpOTE1X2RybV9yZXN1bWVfZWFybHkoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAly
ZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IGk5MTVfcmVzdW1lX3N3aXRjaGVyb28oc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCitpbnQgaTkxNV9yZXN1bWVfc3dpdGNoZXJvbyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlpbnQgcmV0OwogCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kcnYuaAppbmRleCAzMzdkODMwNjQxNmEuLjFiNjRhODhhNTRiOCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCkBAIC0yMjIzLDYgKzIyMjMsOSBAQCBleHRlcm4gY29uc3Qgc3RydWN0IGRldl9w
bV9vcHMgaTkxNV9wbV9vcHM7CiBpbnQgaTkxNV9kcml2ZXJfcHJvYmUoc3RydWN0IHBjaV9kZXYg
KnBkZXYsIGNvbnN0IHN0cnVjdCBwY2lfZGV2aWNlX2lkICplbnQpOwogdm9pZCBpOTE1X2RyaXZl
cl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwogCitpbnQgaTkxNV9zdXNw
ZW5kX3N3aXRjaGVyb28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHBtX21lc3NhZ2Vf
dCBzdGF0ZSk7CitpbnQgaTkxNV9yZXN1bWVfc3dpdGNoZXJvbyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSk7CisKIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfaGFuZ2NoZWNrKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiBpbnQgdmx2X2ZvcmNlX2dmeF9jbG9jayhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGJvb2wgb24pOwogCi0tIAoyLjIwLjEKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWls
aW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZy
ZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

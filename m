Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1FA6D7712D
	for <lists+intel-gfx@lfdr.de>; Fri, 26 Jul 2019 20:25:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 406A36ED05;
	Fri, 26 Jul 2019 18:25:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3F9956ED05
 for <intel-gfx@lists.freedesktop.org>; Fri, 26 Jul 2019 18:24:59 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17637173-1500050 
 for multiple; Fri, 26 Jul 2019 19:24:38 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 26 Jul 2019 19:24:37 +0100
Message-Id: <20190726182437.31335-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190725131447.27515-2-chris@chris-wilson.co.uk>
References: <20190725131447.27515-2-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2] drm/i915: Allow sharing the idle-barrier
 from other kernel requests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QnkgcGxhY2luZyBvdXIgaWRsZS1iYXJyaWVycyBpbiB0aGUgaTkxNV9hY3RpdmUgZmVuY2UgdHJl
ZSwgd2UgZXhwb3NlCnRob3NlIGZvciByZXVzZSBieSBvdGhlciBjb21wb25lbnRzIHRoYXQgYXJl
IGlzc3VpbmcgcmVxdWVzdHMgYWxvbmcgdGhlCmtlcm5lbF9jb250ZXh0LiBSZXVzaW5nIHRoZSBw
cm90by1iYXJyaWVyIGFjdGl2ZV9ub2RlIGlzIHBlcmZlY3RseSBmaW5lCmFzIHRoZSBuZXcgcmVx
dWVzdCBpbXBsaWVzIGEgY29udGV4dC1zd2l0Y2gsIGFuZCBzbyBhbiBvcHBvcnR1bmUgcG9pbnQK
dG8gcnVuIHRoZSBpZGxlLWJhcnJpZXIuIEhvd2V2ZXIsIHRoZSBwcm90by1iYXJyaWVyIGlzIG5v
dCBlcXVpdmFsZW50CnRvIGEgbm9ybWFsIGFjdGl2ZV9ub2RlIGFuZCBjYXJlIG11c3QgYmUgdGFr
ZW4gdG8gYXZvaWQgZGVyZWZlcmVuY2luZyB0aGUKRVJSX1BUUiB1c2VkIGFzIGl0cyByZXF1ZXN0
IG1hcmtlci4KClJlcG9ydGVkLWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdl
cmxpbkBpbnRlbC5jb20+CkZpeGVzOiBjZTQ3NmM4MGI4YmYgKCJkcm0vaTkxNTogS2VlcCBjb250
ZXh0cyBwaW5uZWQgdW50aWwgYWZ0ZXIgdGhlIG5leHQga2VybmVsIGNvbnRleHQgc3dpdGNoIikK
Rml4ZXM6IGE5ODc3ZGEyZDYyOSAoImRybS9pOTE1L29hOiBSZWNvbmZpZ3VyZSBjb250ZXh0cyBv
biB0aGUgZmx5IikKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxz
b24uY28udWs+CkNjOiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRl
bC5jb20+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYyAgICAgICB8ICA0MCArKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaCAgICAgICB8ICAxMyArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgICAgIHwgICAyICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMgICAgfCAzMTAgKysrKysr
KysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5jICAgICAgICAg
ICAgfCAyMTUgKysrKysrKysrLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5o
ICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlX3R5
cGVzLmggICAgICB8ICAgMiArLQogLi4uL2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2Vs
ZnRlc3RzLmggIHwgICAzICstCiA4IGZpbGVzIGNoYW5nZWQsIDUyNSBpbnNlcnRpb25zKCspLCA2
MiBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9jb250ZXh0LmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0
LmMKaW5kZXggZDY0YjQ1ZjdlYzZkLi4yMTFhYzY1NjhhNWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9jb250ZXh0LmMKQEAgLTE2MiwyMyArMTYyLDQxIEBAIHN0YXRpYyBpbnQgX19p
bnRlbF9jb250ZXh0X2FjdGl2ZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKmFjdGl2ZSkKIAlpZiAoZXJy
KQogCQlnb3RvIGVycl9yaW5nOwogCisJcmV0dXJuIDA7CisKK2Vycl9yaW5nOgorCWludGVsX3Jp
bmdfdW5waW4oY2UtPnJpbmcpOworZXJyX3B1dDoKKwlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisJ
cmV0dXJuIGVycjsKK30KKworaW50IGludGVsX2NvbnRleHRfYWN0aXZlX2FjcXVpcmUoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQoreworCWludCBlcnI7CisKKwllcnIgPSBpOTE1X2FjdGl2ZV9h
Y3F1aXJlKCZjZS0+YWN0aXZlKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCiAJLyogUHJl
YWxsb2NhdGUgdHJhY2tpbmcgbm9kZXMgKi8KIAlpZiAoIWk5MTVfZ2VtX2NvbnRleHRfaXNfa2Vy
bmVsKGNlLT5nZW1fY29udGV4dCkpIHsKIAkJZXJyID0gaTkxNV9hY3RpdmVfYWNxdWlyZV9wcmVh
bGxvY2F0ZV9iYXJyaWVyKCZjZS0+YWN0aXZlLAogCQkJCQkJCSAgICAgIGNlLT5lbmdpbmUpOwot
CQlpZiAoZXJyKQotCQkJZ290byBlcnJfc3RhdGU7CisJCWlmIChlcnIpIHsKKwkJCWk5MTVfYWN0
aXZlX3JlbGVhc2UoJmNlLT5hY3RpdmUpOworCQkJcmV0dXJuIGVycjsKKwkJfQogCX0KIAogCXJl
dHVybiAwOworfQogCi1lcnJfc3RhdGU6Ci0JX19jb250ZXh0X3VucGluX3N0YXRlKGNlLT5zdGF0
ZSk7Ci1lcnJfcmluZzoKLQlpbnRlbF9yaW5nX3VucGluKGNlLT5yaW5nKTsKLWVycl9wdXQ6Ci0J
aW50ZWxfY29udGV4dF9wdXQoY2UpOwotCXJldHVybiBlcnI7Cit2b2lkIGludGVsX2NvbnRleHRf
YWN0aXZlX3JlbGVhc2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCS8qIE5vZGVzIHBy
ZWFsbG9jYXRlZCBpbiBpbnRlbF9jb250ZXh0X2FjdGl2ZSgpICovCisJaTkxNV9hY3RpdmVfYWNx
dWlyZV9iYXJyaWVyKCZjZS0+YWN0aXZlKTsKKwlpOTE1X2FjdGl2ZV9yZWxlYXNlKCZjZS0+YWN0
aXZlKTsKIH0KIAogdm9pZApAQCAtMjk3LDMgKzMxNSw3IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KmludGVsX2NvbnRleHRfY3JlYXRlX3JlcXVlc3Qoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
CiAJcmV0dXJuIHJxOwogfQorCisjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRF
U1QpCisjaW5jbHVkZSAic2VsZnRlc3RfY29udGV4dC5jIgorI2VuZGlmCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKaW5kZXggMjNjN2U0YzBjZTdjLi4wN2Y5OTI0ZGU0OGYg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKQEAgLTEwNCwxNyArMTA0
LDggQEAgc3RhdGljIGlubGluZSB2b2lkIGludGVsX2NvbnRleHRfZXhpdChzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpCiAJCWNlLT5vcHMtPmV4aXQoY2UpOwogfQogCi1zdGF0aWMgaW5saW5lIGlu
dCBpbnRlbF9jb250ZXh0X2FjdGl2ZV9hY3F1aXJlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
LXsKLQlyZXR1cm4gaTkxNV9hY3RpdmVfYWNxdWlyZSgmY2UtPmFjdGl2ZSk7Ci19Ci0KLXN0YXRp
YyBpbmxpbmUgdm9pZCBpbnRlbF9jb250ZXh0X2FjdGl2ZV9yZWxlYXNlKHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSkKLXsKLQkvKiBOb2RlcyBwcmVhbGxvY2F0ZWQgaW4gaW50ZWxfY29udGV4dF9h
Y3RpdmUoKSAqLwotCWk5MTVfYWN0aXZlX2FjcXVpcmVfYmFycmllcigmY2UtPmFjdGl2ZSk7Ci0J
aTkxNV9hY3RpdmVfcmVsZWFzZSgmY2UtPmFjdGl2ZSk7Ci19CitpbnQgaW50ZWxfY29udGV4dF9h
Y3RpdmVfYWNxdWlyZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOwordm9pZCBpbnRlbF9jb250
ZXh0X2FjdGl2ZV9yZWxlYXNlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiAKIHN0YXRpYyBp
bmxpbmUgc3RydWN0IGludGVsX2NvbnRleHQgKmludGVsX2NvbnRleHRfZ2V0KHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2VuZ2luZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3Bt
LmMKaW5kZXggZTc0ZmJmMDRhNjhkLi5jZTU0MDkyNDc1ZGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCkBAIC05MCw3ICs5MCw3IEBAIHN0YXRpYyBib29sIHN3
aXRjaF90b19rZXJuZWxfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJ
LyogQ2hlY2sgYWdhaW4gb24gdGhlIG5leHQgcmV0aXJlbWVudC4gKi8KIAllbmdpbmUtPndha2Vy
ZWZfc2VyaWFsID0gZW5naW5lLT5zZXJpYWwgKyAxOwogCi0JaTkxNV9yZXF1ZXN0X2FkZF9iYXJy
aWVycyhycSk7CisJaTkxNV9yZXF1ZXN0X2FkZF9hY3RpdmVfYmFycmllcnMocnEpOwogCV9faTkx
NV9yZXF1ZXN0X2NvbW1pdChycSk7CiAKIAlyZXR1cm4gZmFsc2U7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAwLi5lM2I0NWZlNzQ3YWUKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKQEAgLTAsMCArMSwzMTAgQEAKKy8qCisgKiBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorICoKKyAqIENvcHlyaWdodCDCqSAyMDE5
IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKKyNp
bmNsdWRlICJpbnRlbF9ndC5oIgorCisjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRl
eHQuaCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuaCIKKyNpbmNsdWRlICJz
ZWxmdGVzdHMvbW9ja19kcm0uaCIKKworc3RhdGljIGludCByZXF1ZXN0X3N5bmMoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCit7CisJbG9uZyB0aW1lb3V0OworCWludCBlcnIgPSAwOworCisJaTkx
NV9yZXF1ZXN0X2dldChycSk7CisKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKwl0aW1lb3V0ID0g
aTkxNV9yZXF1ZXN0X3dhaXQocnEsIDAsIEhaIC8gMTApOworCWlmICh0aW1lb3V0IDwgMCkKKwkJ
ZXJyID0gdGltZW91dDsKKwllbHNlCisJCWk5MTVfcmVxdWVzdF9yZXRpcmVfdXB0byhycSk7CisK
KwlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyBpbnQg
Y29udGV4dF9zeW5jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxf
dGltZWxpbmUgKnRsID0gY2UtPnJpbmctPnRpbWVsaW5lOworCWludCBlcnIgPSAwOworCisJZG8g
eworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwkJbG9uZyB0aW1lb3V0OworCisJCXJjdV9y
ZWFkX2xvY2soKTsKKwkJcnEgPSByY3VfZGVyZWZlcmVuY2UodGwtPmxhc3RfcmVxdWVzdC5yZXF1
ZXN0KTsKKwkJaWYgKHJxKQorCQkJcnEgPSBpOTE1X3JlcXVlc3RfZ2V0X3JjdShycSk7CisJCXJj
dV9yZWFkX3VubG9jaygpOworCQlpZiAoIXJxKQorCQkJYnJlYWs7CisKKwkJdGltZW91dCA9IGk5
MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDEwKTsKKwkJaWYgKHRpbWVvdXQgPCAwKQorCQkJ
ZXJyID0gdGltZW91dDsKKwkJZWxzZQorCQkJaTkxNV9yZXF1ZXN0X3JldGlyZV91cHRvKHJxKTsK
KworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwl9IHdoaWxlICghZXJyKTsKKworCXJldHVybiBl
cnI7Cit9CisKK3N0YXRpYyBpbnQgX19saXZlX2FjdGl2ZV9jb250ZXh0KHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmZpeG1lKQor
eworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwlpbnQgcGFzczsKKwlpbnQgZXJyOworCisJ
LyoKKwkgKiBXZSBrZWVwIGFjdGl2ZSBjb250ZXh0cyBhbGl2ZSB1bnRpbCBhZnRlciBhIHN1YnNl
cXVlbnQgY29udGV4dAorCSAqIHN3aXRjaCBhcyB0aGUgZmluYWwgd3JpdGUgZnJvbSB0aGUgY29u
dGV4dC1zYXZlIHdpbGwgYmUgYWZ0ZXIKKwkgKiB3ZSByZXRpcmUgdGhlIGZpbmFsIHJlcXVlc3Qu
IFdlIHRyYWNrIHdoZW4gd2UgdW5waW4gdGhlIGNvbnRleHQsCisJICogdW5kZXIgdGhlIHByZXN1
bXB0aW9uIHRoYXQgdGhlIGZpbmFsIHBpbiBpcyBmcm9tIHRoZSBsYXN0IHJlcXVlc3QsCisJICog
YW5kIGluc3RlYWQgb2YgaW1tZWRpYXRlbHkgdW5waW5uaW5nIHRoZSBjb250ZXh0LCB3ZSBhZGQg
YSB0YXNrCisJICogdG8gdW5waW4gdGhlIGNvbnRleHQgZnJvbSB0aGUgbmV4dCBpZGxlLWJhcnJp
ZXIuCisJICoKKwkgKiBUaGlzIHRlc3QgbWFrZXMgc3VyZSB0aGF0IHRoZSBjb250ZXh0IGlzIGtl
cHQgYWxpdmUgdW50aWwgYQorCSAqIHN1YnNlcXVlbnQgaWRsZS1iYXJyaWVyIChlbWl0dGVkIHdo
ZW4gdGhlIGVuZ2luZSB3YWtlcmVmIGhpdHMgMAorCSAqIHdpdGggbm8gbW9yZSBvdXRzdGFuZGlu
ZyByZXF1ZXN0cykuCisJICovCisKKwlpZiAoaW50ZWxfZW5naW5lX3BtX2lzX2F3YWtlKGVuZ2lu
ZSkpIHsKKwkJcHJfZXJyKCIlcyBpcyBhd2FrZSBiZWZvcmUgc3RhcnRpbmcgJXMhXG4iLAorCQkg
ICAgICAgZW5naW5lLT5uYW1lLCBfX2Z1bmNfXyk7CisJCXJldHVybiAtRUlOVkFMOworCX0KKwor
CWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZml4bWUsIGVuZ2luZSk7CisJaWYgKCFjZSkKKwkJ
cmV0dXJuIC1FTk9NRU07CisKKwlmb3IgKHBhc3MgPSAwOyBwYXNzIDw9IDI7IHBhc3MrKykgewor
CQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCQlycSA9IGludGVsX2NvbnRleHRfY3JlYXRl
X3JlcXVlc3QoY2UpOworCQlpZiAoSVNfRVJSKHJxKSkgeworCQkJZXJyID0gUFRSX0VSUihycSk7
CisJCQlnb3RvIGVycjsKKwkJfQorCisJCWVyciA9IHJlcXVlc3Rfc3luYyhycSk7CisJCWlmIChl
cnIpCisJCQlnb3RvIGVycjsKKworCQkvKiBDb250ZXh0IHdpbGwgYmUga2VwdCBhY3RpdmUgdW50
aWwgYWZ0ZXIgYW4gaWRsZS1iYXJyaWVyLiAqLworCQlpZiAoaTkxNV9hY3RpdmVfaXNfaWRsZSgm
Y2UtPmFjdGl2ZSkpIHsKKwkJCXByX2VycigiY29udGV4dCBpcyBub3QgYWN0aXZlOyBleHBlY3Rl
ZCBpZGxlLWJhcnJpZXIgKCVzIHBhc3MgJWQpXG4iLAorCQkJICAgICAgIGVuZ2luZS0+bmFtZSwg
cGFzcyk7CisJCQllcnIgPSAtRUlOVkFMOworCQkJZ290byBlcnI7CisJCX0KKworCQlpZiAoIWlu
dGVsX2VuZ2luZV9wbV9pc19hd2FrZShlbmdpbmUpKSB7CisJCQlwcl9lcnIoIiVzIGlzIGFzbGVl
cCBiZWZvcmUgaWRsZS1iYXJyaWVyXG4iLAorCQkJICAgICAgIGVuZ2luZS0+bmFtZSk7CisJCQll
cnIgPSAtRUlOVkFMOworCQkJZ290byBlcnI7CisJCX0KKwl9CisKKwkvKiBOb3cgbWFrZSBzdXJl
IG91ciBpZGxlLWJhcnJpZXJzIGFyZSBmbHVzaGVkICovCisJZXJyID0gY29udGV4dF9zeW5jKGVu
Z2luZS0+a2VybmVsX2NvbnRleHQpOworCWlmIChlcnIpCisJCWdvdG8gZXJyOworCisJaWYgKCFp
OTE1X2FjdGl2ZV9pc19pZGxlKCZjZS0+YWN0aXZlKSkgeworCQlwcl9lcnIoImNvbnRleHQgaXMg
c3RpbGwgYWN0aXZlISIpOworCQllcnIgPSAtRUlOVkFMOworCX0KKworCWlmIChpbnRlbF9lbmdp
bmVfcG1faXNfYXdha2UoZW5naW5lKSkgeworCQlzdHJ1Y3QgZHJtX3ByaW50ZXIgcCA9IGRybV9k
ZWJ1Z19wcmludGVyKF9fZnVuY19fKTsKKworCQlpbnRlbF9lbmdpbmVfZHVtcChlbmdpbmUsICZw
LAorCQkJCSAgIiVzIGlzIHN0aWxsIGF3YWtlIGFmdGVyIGlkbGUtYmFycmllcnNcbiIsCisJCQkJ
ICBlbmdpbmUtPm5hbWUpOworCQlHRU1fVFJBQ0VfRFVNUCgpOworCisJCWVyciA9IC1FSU5WQUw7
CisJCWdvdG8gZXJyOworCX0KKworZXJyOgorCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwlyZXR1
cm4gZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfYWN0aXZlX2NvbnRleHQodm9pZCAqYXJnKQor
eworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lOworCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpmaXhtZTsKKwllbnVtIGludGVsX2Vu
Z2luZV9pZCBpZDsKKwlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGU7CisJaW50IGVyciA9IDA7CisKKwlm
aWxlID0gbW9ja19maWxlKGd0LT5pOTE1KTsKKwlpZiAoSVNfRVJSKGZpbGUpKQorCQlyZXR1cm4g
UFRSX0VSUihmaWxlKTsKKworCW11dGV4X2xvY2soJmd0LT5pOTE1LT5kcm0uc3RydWN0X211dGV4
KTsKKworCWZpeG1lID0gbGl2ZV9jb250ZXh0KGd0LT5pOTE1LCBmaWxlKTsKKwlpZiAoIWZpeG1l
KSB7CisJCWVyciA9IC1FTk9NRU07CisJCWdvdG8gdW5sb2NrOworCX0KKworCWZvcl9lYWNoX2Vu
Z2luZShlbmdpbmUsIGd0LT5pOTE1LCBpZCkgeworCQllcnIgPSBfX2xpdmVfYWN0aXZlX2NvbnRl
eHQoZW5naW5lLCBmaXhtZSk7CisJCWlmIChlcnIpCisJCQlicmVhazsKKworCQllcnIgPSBpZ3Rf
Zmx1c2hfdGVzdChndC0+aTkxNSwgSTkxNV9XQUlUX0xPQ0tFRCk7CisJCWlmIChlcnIpCisJCQli
cmVhazsKKwl9CisKK3VubG9jazoKKwltdXRleF91bmxvY2soJmd0LT5pOTE1LT5kcm0uc3RydWN0
X211dGV4KTsKKwltb2NrX2ZpbGVfZnJlZShndC0+aTkxNSwgZmlsZSk7CisJcmV0dXJuIGVycjsK
K30KKworc3RhdGljIGludCBfX3JlbW90ZV9zeW5jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwg
c3RydWN0IGludGVsX2NvbnRleHQgKnJlbW90ZSkKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cTsKKwlpbnQgZXJyOworCisJZXJyID0gaW50ZWxfY29udGV4dF9waW4ocmVtb3RlKTsKKwlpZiAo
ZXJyKQorCQlyZXR1cm4gZXJyOworCisJcnEgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0
KGNlKTsKKwlpZiAoSVNfRVJSKHJxKSkgeworCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJZ290byB1
bnBpbjsKKwl9CisKKwllcnIgPSBpbnRlbF9jb250ZXh0X3ByZXBhcmVfcmVtb3RlX3JlcXVlc3Qo
cmVtb3RlLCBycSk7CisJaWYgKGVycikgeworCQlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKwkJZ290
byB1bnBpbjsKKwl9CisKKwllcnIgPSByZXF1ZXN0X3N5bmMocnEpOworCit1bnBpbjoKKwlpbnRl
bF9jb250ZXh0X3VucGluKHJlbW90ZSk7CisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGludCBf
X2xpdmVfcmVtb3RlX2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJ
CSBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZml4bWUpCit7CisJc3RydWN0IGludGVsX2NvbnRl
eHQgKmxvY2FsLCAqcmVtb3RlOworCWludCBwYXNzOworCWludCBlcnI7CisKKwkvKgorCSAqIENo
ZWNrIHRoYXQgb3VyIGlkbGUgYmFycmllcnMgZG8gbm90IGludGVyZmVyZSB3aXRoIG5vcm1hbAor
CSAqIGFjdGl2aXR5IHRyYWNraW5nLiBJbiBwYXJ0aWN1bGFyLCBjaGVjayB0aGF0IG9wZXJhdGlu
ZworCSAqIG9uIHRoZSBjb250ZXh0IGltYWdlIHJlbW90ZWx5IChpbnRlbF9jb250ZXh0X3ByZXBh
cmVfcmVtb3RlX3JlcXVlc3QpCisJICogd2hpY2ggaW5zZXJ0cyBmb3JpZWduIGZlbmNlcyBpbnRv
IGludGVsX2NvbnRleHQuYWN0aXZlIGFyZSBub3QKKwkgKiBjbG9iYmVyZWQuCisJICovCisKKwly
ZW1vdGUgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShmaXhtZSwgZW5naW5lKTsKKwlpZiAoIXJlbW90
ZSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlsb2NhbCA9IGludGVsX2NvbnRleHRfY3JlYXRlKGZp
eG1lLCBlbmdpbmUpOworCWlmICghbG9jYWwpIHsKKwkJZXJyID0gLUVOT01FTTsKKwkJZ290byBl
cnJfcmVtb3RlOworCX0KKworCWZvciAocGFzcyA9IDA7IHBhc3MgPD0gMjsgcGFzcysrKSB7CisJ
CWVyciA9IF9fcmVtb3RlX3N5bmMobG9jYWwsIHJlbW90ZSk7CisJCWlmIChlcnIpCisJCQlicmVh
azsKKworCQllcnIgPSBfX3JlbW90ZV9zeW5jKGVuZ2luZS0+a2VybmVsX2NvbnRleHQsIHJlbW90
ZSk7CisJCWlmIChlcnIpCisJCQlicmVhazsKKworCQlpZiAoaTkxNV9hY3RpdmVfaXNfaWRsZSgm
cmVtb3RlLT5hY3RpdmUpKSB7CisJCQlwcl9lcnIoInJlbW90ZSBjb250ZXh0IGlzIG5vdCBhY3Rp
dmU7IGV4cGVjdGVkIGlkbGUtYmFycmllciAoJXMgcGFzcyAlZClcbiIsCisJCQkgICAgICAgZW5n
aW5lLT5uYW1lLCBwYXNzKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlicmVhazsKKwkJfQorCX0K
KworCWludGVsX2NvbnRleHRfcHV0KGxvY2FsKTsKK2Vycl9yZW1vdGU6CisJaW50ZWxfY29udGV4
dF9wdXQocmVtb3RlKTsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfcmVtb3Rl
X2NvbnRleHQodm9pZCAqYXJnKQoreworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CisJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpm
aXhtZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGU7
CisJaW50IGVyciA9IDA7CisKKwlmaWxlID0gbW9ja19maWxlKGd0LT5pOTE1KTsKKwlpZiAoSVNf
RVJSKGZpbGUpKQorCQlyZXR1cm4gUFRSX0VSUihmaWxlKTsKKworCW11dGV4X2xvY2soJmd0LT5p
OTE1LT5kcm0uc3RydWN0X211dGV4KTsKKworCWZpeG1lID0gbGl2ZV9jb250ZXh0KGd0LT5pOTE1
LCBmaWxlKTsKKwlpZiAoIWZpeG1lKSB7CisJCWVyciA9IC1FTk9NRU07CisJCWdvdG8gdW5sb2Nr
OworCX0KKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LT5pOTE1LCBpZCkgeworCQllcnIg
PSBfX2xpdmVfcmVtb3RlX2NvbnRleHQoZW5naW5lLCBmaXhtZSk7CisJCWlmIChlcnIpCisJCQli
cmVhazsKKworCQllcnIgPSBpZ3RfZmx1c2hfdGVzdChndC0+aTkxNSwgSTkxNV9XQUlUX0xPQ0tF
RCk7CisJCWlmIChlcnIpCisJCQlicmVhazsKKwl9CisKK3VubG9jazoKKwltdXRleF91bmxvY2so
Jmd0LT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwltb2NrX2ZpbGVfZnJlZShndC0+aTkxNSwg
ZmlsZSk7CisJcmV0dXJuIGVycjsKK30KKworaW50IGludGVsX2NvbnRleHRfbGl2ZV9zZWxmdGVz
dHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCit7CisJc3RhdGljIGNvbnN0IHN0cnVj
dCBpOTE1X3N1YnRlc3QgdGVzdHNbXSA9IHsKKwkJU1VCVEVTVChsaXZlX2FjdGl2ZV9jb250ZXh0
KSwKKwkJU1VCVEVTVChsaXZlX3JlbW90ZV9jb250ZXh0KSwKKwl9OworCXN0cnVjdCBpbnRlbF9n
dCAqZ3QgPSAmaTkxNS0+Z3Q7CisKKwlpZiAoaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkKKwkJcmV0
dXJuIDA7CisKKwlyZXR1cm4gaW50ZWxfZ3RfbGl2ZV9zdWJ0ZXN0cyh0ZXN0cywgZ3QpOworfQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmMKaW5kZXggZDMyZGI4YTRkYjVjLi5hMjMxOTUyNzBi
NjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYwpAQCAtMzMsNiArMzMsMzggQEAgc3Ry
dWN0IGFjdGl2ZV9ub2RlIHsKIAl1NjQgdGltZWxpbmU7CiB9OwogCitzdGF0aWMgaW5saW5lIHN0
cnVjdCBhY3RpdmVfbm9kZSAqCitub2RlX2Zyb21fYWN0aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZV9y
ZXF1ZXN0ICphY3RpdmUpCit7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihhY3RpdmUsIHN0cnVjdCBh
Y3RpdmVfbm9kZSwgYmFzZSk7Cit9CisKKyNkZWZpbmUgZ2V0X3ByZWFsbG9jYXRlZF9iYXJyaWVy
cyh4KSBsbGlzdF9kZWxfYWxsKCYoeCktPnByZWFsbG9jYXRlZF9iYXJyaWVycykKKworc3RhdGlj
IGlubGluZSBib29sIGlzX2JhcnJpZXIoY29uc3Qgc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3Qg
KmFjdGl2ZSkKK3sKKwlyZXR1cm4gSVNfRVJSKHJjdV9hY2Nlc3NfcG9pbnRlcihhY3RpdmUtPnJl
cXVlc3QpKTsKK30KKworc3RhdGljIGlubGluZSBzdHJ1Y3QgbGxpc3Rfbm9kZSAqYmFycmllcl90
b19sbChzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGUpCit7CisJR0VNX0JVR19PTighaXNfYmFycmll
cigmbm9kZS0+YmFzZSkpOworCXJldHVybiAoc3RydWN0IGxsaXN0X25vZGUgKikmbm9kZS0+YmFz
ZS5saW5rOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKgorYmFy
cmllcl90b19lbmdpbmUoc3RydWN0IGFjdGl2ZV9ub2RlICpub2RlKQoreworCUdFTV9CVUdfT04o
IWlzX2JhcnJpZXIoJm5vZGUtPmJhc2UpKTsKKwlyZXR1cm4gKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKilub2RlLT5iYXNlLmxpbmsucHJldjsKK30KKworc3RhdGljIGlubGluZSBzdHJ1Y3QgYWN0
aXZlX25vZGUgKmJhcnJpZXJfZnJvbV9sbChzdHJ1Y3QgbGxpc3Rfbm9kZSAqeCkKK3sKKwlyZXR1
cm4gY29udGFpbmVyX29mKChzdHJ1Y3QgbGlzdF9oZWFkICopeCwKKwkJCSAgICBzdHJ1Y3QgYWN0
aXZlX25vZGUsIGJhc2UubGluayk7Cit9CisKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkx
NV9ERUJVR19HRU0pICYmIElTX0VOQUJMRUQoQ09ORklHX0RFQlVHX09CSkVDVFMpCiAKIHN0YXRp
YyB2b2lkICphY3RpdmVfZGVidWdfaGludCh2b2lkICphZGRyKQpAQCAtMTI3LDcgKzE1OSw3IEBA
IGFjdGl2ZV9yZXRpcmUoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiBzdGF0aWMgdm9pZAogbm9k
ZV9yZXRpcmUoc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgKmJhc2UsIHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxKQogewotCWFjdGl2ZV9yZXRpcmUoY29udGFpbmVyX29mKGJhc2UsIHN0cnVjdCBh
Y3RpdmVfbm9kZSwgYmFzZSktPnJlZik7CisJYWN0aXZlX3JldGlyZShub2RlX2Zyb21fYWN0aXZl
KGJhc2UpLT5yZWYpOwogfQogCiBzdGF0aWMgc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgKgpA
QCAtMTg0LDYgKzIxNiw3IEBAIGFjdGl2ZV9pbnN0YW5jZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJl
ZiwgdTY0IGlkeCkKIAlyZWYtPmNhY2hlID0gbm9kZTsKIAltdXRleF91bmxvY2soJnJlZi0+bXV0
ZXgpOwogCisJQlVJTERfQlVHX09OKG9mZnNldG9mKHR5cGVvZigqbm9kZSksIGJhc2UpKTsKIAly
ZXR1cm4gJm5vZGUtPmJhc2U7CiB9CiAKQEAgLTIwMSwxMSArMjM0LDMzIEBAIHZvaWQgX19pOTE1
X2FjdGl2ZV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCXJlZi0+cmV0aXJl
ID0gcmV0aXJlOwogCXJlZi0+dHJlZSA9IFJCX1JPT1Q7CiAJcmVmLT5jYWNoZSA9IE5VTEw7Ci0J
aW5pdF9sbGlzdF9oZWFkKCZyZWYtPmJhcnJpZXJzKTsKKwlpbml0X2xsaXN0X2hlYWQoJnJlZi0+
cHJlYWxsb2NhdGVkX2JhcnJpZXJzKTsKIAlhdG9taWNfc2V0KCZyZWYtPmNvdW50LCAwKTsKIAlf
X211dGV4X2luaXQoJnJlZi0+bXV0ZXgsICJpOTE1X2FjdGl2ZSIsIGtleSk7CiB9CiAKK3N0YXRp
YyB2b2lkIF9fYWN0aXZlX2RlbF9iYXJyaWVyKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLAorCQkJ
CSBzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGUpCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lID0gYmFycmllcl90b19lbmdpbmUobm9kZSk7CisJc3RydWN0IGxsaXN0X25vZGUgKmhl
YWQgPSBOVUxMLCAqdGFpbCA9IE5VTEw7CisJc3RydWN0IGxsaXN0X25vZGUgKnBvcywgKm5leHQ7
CisKKwlHRU1fQlVHX09OKG5vZGUtPnRpbWVsaW5lICE9IGVuZ2luZS0+a2VybmVsX2NvbnRleHQt
PnJpbmctPnRpbWVsaW5lLT5mZW5jZV9jb250ZXh0KTsKKworCWxsaXN0X2Zvcl9lYWNoX3NhZmUo
cG9zLCBuZXh0LCBsbGlzdF9kZWxfYWxsKCZlbmdpbmUtPmJhcnJpZXJfdGFza3MpKSB7CisJCWlm
IChiYXJyaWVyX3RvX2xsKG5vZGUpID09IHBvcykKKwkJCWNvbnRpbnVlOworCisJCXBvcy0+bmV4
dCA9IGhlYWQ7CisJCWhlYWQgPSBwb3M7CisJCWlmICghdGFpbCkKKwkJCXRhaWwgPSBwb3M7CisJ
fQorCWlmIChoZWFkKQorCQlsbGlzdF9hZGRfYmF0Y2goaGVhZCwgdGFpbCwgJmVuZ2luZS0+YmFy
cmllcl90YXNrcyk7Cit9CisKIGludCBpOTE1X2FjdGl2ZV9yZWYoc3RydWN0IGk5MTVfYWN0aXZl
ICpyZWYsCiAJCSAgICB1NjQgdGltZWxpbmUsCiAJCSAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKQEAgLTIyNCw4ICsyNzksMTUgQEAgaW50IGk5MTVfYWN0aXZlX3JlZihzdHJ1Y3QgaTkxNV9h
Y3RpdmUgKnJlZiwKIAkJZ290byBvdXQ7CiAJfQogCi0JaWYgKCFpOTE1X2FjdGl2ZV9yZXF1ZXN0
X2lzc2V0KGFjdGl2ZSkpCi0JCWF0b21pY19pbmMoJnJlZi0+Y291bnQpOworCWlmIChpc19iYXJy
aWVyKGFjdGl2ZSkpIHsgLyogcHJvdG8tbm9kZSB1c2VkIGJ5IG91ciBpZGxlIGJhcnJpZXIgKi8K
KwkJX19hY3RpdmVfZGVsX2JhcnJpZXIocmVmLCBub2RlX2Zyb21fYWN0aXZlKGFjdGl2ZSkpOwor
CQlSQ1VfSU5JVF9QT0lOVEVSKGFjdGl2ZS0+cmVxdWVzdCwgTlVMTCk7CisJCUlOSVRfTElTVF9I
RUFEKCZhY3RpdmUtPmxpbmspOworCX0gZWxzZSB7CisJCWlmICghaTkxNV9hY3RpdmVfcmVxdWVz
dF9pc3NldChhY3RpdmUpKQorCQkJYXRvbWljX2luYygmcmVmLT5jb3VudCk7CisJfQorCUdFTV9C
VUdfT04oIWF0b21pY19yZWFkKCZyZWYtPmNvdW50KSk7CiAJX19pOTE1X2FjdGl2ZV9yZXF1ZXN0
X3NldChhY3RpdmUsIHJxKTsKIAogb3V0OgpAQCAtMzEyLDYgKzM3NCwxMSBAQCBpbnQgaTkxNV9h
Y3RpdmVfd2FpdChzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIAl9CiAKIAlyYnRyZWVfcG9zdG9y
ZGVyX2Zvcl9lYWNoX2VudHJ5X3NhZmUoaXQsIG4sICZyZWYtPnRyZWUsIG5vZGUpIHsKKwkJaWYg
KGlzX2JhcnJpZXIoJml0LT5iYXNlKSkgeyAvKiB1bmNvbm5lY3RlZCBpZGxlLWJhcnJpZXIgKi8K
KwkJCWVyciA9IC1FQlVTWTsKKwkJCWJyZWFrOworCQl9CisKIAkJZXJyID0gaTkxNV9hY3RpdmVf
cmVxdWVzdF9yZXRpcmUoJml0LT5iYXNlLCBCS0wocmVmKSk7CiAJCWlmIChlcnIpCiAJCQlicmVh
azsKQEAgLTM3NCw2ICs0NDEsNTggQEAgdm9pZCBpOTE1X2FjdGl2ZV9maW5pKHN0cnVjdCBpOTE1
X2FjdGl2ZSAqcmVmKQogfQogI2VuZGlmCiAKK3N0YXRpYyBzdHJ1Y3QgYWN0aXZlX25vZGUgKmlk
bGVfYmFycmllcihzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZiwgdTY0IGlkeCkKK3sKKwlzdHJ1Y3Qg
cmJfbm9kZSAqcHJldiwgKnA7CisKKwlpZiAoUkJfRU1QVFlfUk9PVCgmcmVmLT50cmVlKSkKKwkJ
cmV0dXJuIE5VTEw7CisKKwltdXRleF9sb2NrKCZyZWYtPm11dGV4KTsKKwlHRU1fQlVHX09OKGk5
MTVfYWN0aXZlX2lzX2lkbGUocmVmKSk7CisKKwlwcmV2ID0gTlVMTDsKKwlwID0gcmVmLT50cmVl
LnJiX25vZGU7CisJd2hpbGUgKHApIHsKKwkJc3RydWN0IGFjdGl2ZV9ub2RlICpub2RlID0KKwkJ
CXJiX2VudHJ5KHAsIHN0cnVjdCBhY3RpdmVfbm9kZSwgbm9kZSk7CisKKwkJaWYgKG5vZGUtPnRp
bWVsaW5lID09IGlkeCAmJgorCQkgICAgIWk5MTVfYWN0aXZlX3JlcXVlc3RfaXNzZXQoJm5vZGUt
PmJhc2UpKQorCQkJZ290byBtYXRjaDsKKworCQlwcmV2ID0gcDsKKwkJaWYgKG5vZGUtPnRpbWVs
aW5lIDwgaWR4KQorCQkJcCA9IHAtPnJiX3JpZ2h0OworCQllbHNlCisJCQlwID0gcC0+cmJfbGVm
dDsKKwl9CisKKwlmb3IgKHAgPSBwcmV2OyBwOyBwID0gcmJfbmV4dChwKSkgeworCQlzdHJ1Y3Qg
YWN0aXZlX25vZGUgKm5vZGUgPQorCQkJcmJfZW50cnkocCwgc3RydWN0IGFjdGl2ZV9ub2RlLCBu
b2RlKTsKKworCQlpZiAobm9kZS0+dGltZWxpbmUgPiBpZHgpCisJCQlicmVhazsKKworCQlpZiAo
bm9kZS0+dGltZWxpbmUgPCBpZHgpCisJCQljb250aW51ZTsKKworCQlpZiAoIWk5MTVfYWN0aXZl
X3JlcXVlc3RfaXNzZXQoJm5vZGUtPmJhc2UpKQorCQkJZ290byBtYXRjaDsKKworCX0KKwltdXRl
eF91bmxvY2soJnJlZi0+bXV0ZXgpOworCisJcmV0dXJuIE5VTEw7CisKK21hdGNoOgorCXJiX2Vy
YXNlKHAsICZyZWYtPnRyZWUpOworCW11dGV4X3VubG9jaygmcmVmLT5tdXRleCk7CisKKwlyZXR1
cm4gcmJfZW50cnkocCwgc3RydWN0IGFjdGl2ZV9ub2RlLCBub2RlKTsKK30KKwogaW50IGk5MTVf
YWN0aXZlX2FjcXVpcmVfcHJlYWxsb2NhdGVfYmFycmllcihzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJl
ZiwKIAkJCQkJICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKQEAgLTM4Miwz
OSArNTAxLDQ4IEBAIGludCBpOTE1X2FjdGl2ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIo
c3RydWN0IGk5MTVfYWN0aXZlICpyZWYsCiAJc3RydWN0IGxsaXN0X25vZGUgKnBvcywgKm5leHQ7
CiAJaW50IGVycjsKIAotCUdFTV9CVUdfT04oIW1hc2spOworCUdFTV9CVUdfT04oIWxsaXN0X2Vt
cHR5KCZyZWYtPnByZWFsbG9jYXRlZF9iYXJyaWVycykpOworCisJLyoKKwkgKiBQcmVhbGxvY2F0
ZSBhIG5vZGUgZm9yIGVhY2ggcGh5c2ljYWwgZW5naW5lIHN1cHBvcnRpbmcgdGhlIHRhcmdldAor
CSAqIGVuZ2luZSAocmVtZW1iZXIgdmlydHVhbCBlbmdpbmVzIGhhdmUgbW9yZSB0aGFuIG9uZSBz
aWJsaW5nKS4KKwkgKiBXZSBjYW4gdGhlbiB1c2UgdGhlIHByZWFsbG9jYXRlZCBub2RlcyBpbgor
CSAqIGk5MTVfYWN0aXZlX2FjcXVpcmVfYmFycmllcigpCisJICovCiAJZm9yX2VhY2hfZW5naW5l
X21hc2tlZChlbmdpbmUsIGk5MTUsIG1hc2ssIHRtcCkgewotCQlzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqa2N0eCA9IGVuZ2luZS0+a2VybmVsX2NvbnRleHQ7CisJCXU2NCBpZHggPSBlbmdpbmUtPmtl
cm5lbF9jb250ZXh0LT5yaW5nLT50aW1lbGluZS0+ZmVuY2VfY29udGV4dDsKIAkJc3RydWN0IGFj
dGl2ZV9ub2RlICpub2RlOwogCi0JCW5vZGUgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFi
X2NhY2hlLCBHRlBfS0VSTkVMKTsKLQkJaWYgKHVubGlrZWx5KCFub2RlKSkgewotCQkJZXJyID0g
LUVOT01FTTsKLQkJCWdvdG8gdW53aW5kOworCQlub2RlID0gaWRsZV9iYXJyaWVyKHJlZiwgaWR4
KTsKKwkJaWYgKCFub2RlKSB7CisJCQlub2RlID0ga21lbV9jYWNoZV9hbGxvYyhnbG9iYWwuc2xh
Yl9jYWNoZSwgR0ZQX0tFUk5FTCk7CisJCQlpZiAoIW5vZGUpIHsKKwkJCQllcnIgPSBFTk9NRU07
CisJCQkJZ290byB1bndpbmQ7CisJCQl9CisKKwkJCW5vZGUtPmJhc2UucmV0aXJlID0gbm9kZV9y
ZXRpcmU7CisJCQlub2RlLT50aW1lbGluZSA9IGlkeDsKKwkJCW5vZGUtPnJlZiA9IHJlZjsKIAkJ
fQogCi0JCWk5MTVfYWN0aXZlX3JlcXVlc3RfaW5pdCgmbm9kZS0+YmFzZSwKLQkJCQkJICh2b2lk
ICopZW5naW5lLCBub2RlX3JldGlyZSk7Ci0JCW5vZGUtPnRpbWVsaW5lID0ga2N0eC0+cmluZy0+
dGltZWxpbmUtPmZlbmNlX2NvbnRleHQ7Ci0JCW5vZGUtPnJlZiA9IHJlZjsKKwkJUkNVX0lOSVRf
UE9JTlRFUihub2RlLT5iYXNlLnJlcXVlc3QsIEVSUl9QVFIoLUVBR0FJTikpOworCQlub2RlLT5i
YXNlLmxpbmsucHJldiA9ICh2b2lkICopZW5naW5lOwogCQlhdG9taWNfaW5jKCZyZWYtPmNvdW50
KTsKIAorCQlsbGlzdF9hZGQoYmFycmllcl90b19sbChub2RlKSwgJnJlZi0+cHJlYWxsb2NhdGVk
X2JhcnJpZXJzKTsKIAkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOwotCQlsbGlzdF9hZGQo
KHN0cnVjdCBsbGlzdF9ub2RlICopJm5vZGUtPmJhc2UubGluaywKLQkJCSAgJnJlZi0+YmFycmll
cnMpOwogCX0KIAogCXJldHVybiAwOwogCiB1bndpbmQ6Ci0JbGxpc3RfZm9yX2VhY2hfc2FmZShw
b3MsIG5leHQsIGxsaXN0X2RlbF9hbGwoJnJlZi0+YmFycmllcnMpKSB7Ci0JCXN0cnVjdCBhY3Rp
dmVfbm9kZSAqbm9kZTsKKwlsbGlzdF9mb3JfZWFjaF9zYWZlKHBvcywgbmV4dCwgZ2V0X3ByZWFs
bG9jYXRlZF9iYXJyaWVycyhyZWYpKSB7CisJCXN0cnVjdCBhY3RpdmVfbm9kZSAqbm9kZSA9IGJh
cnJpZXJfZnJvbV9sbChwb3MpOwogCi0JCW5vZGUgPSBjb250YWluZXJfb2YoKHN0cnVjdCBsaXN0
X2hlYWQgKilwb3MsCi0JCQkJICAgIHR5cGVvZigqbm9kZSksIGJhc2UubGluayk7Ci0JCWVuZ2lu
ZSA9ICh2b2lkICopcmN1X2FjY2Vzc19wb2ludGVyKG5vZGUtPmJhc2UucmVxdWVzdCk7CisJCWF0
b21pY19kZWMoJnJlZi0+Y291bnQpOworCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGJhcnJpZXJfdG9f
ZW5naW5lKG5vZGUpKTsKIAotCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CiAJCWttZW1f
Y2FjaGVfZnJlZShnbG9iYWwuc2xhYl9jYWNoZSwgbm9kZSk7CiAJfQogCXJldHVybiBlcnI7CkBA
IC00MjYsMjUgKzU1NCwyNyBAQCB2b2lkIGk5MTVfYWN0aXZlX2FjcXVpcmVfYmFycmllcihzdHJ1
Y3QgaTkxNV9hY3RpdmUgKnJlZikKIAogCUdFTV9CVUdfT04oaTkxNV9hY3RpdmVfaXNfaWRsZShy
ZWYpKTsKIAorCS8qCisJICogVHJhbnNmZXIgdGhlIGxpc3Qgb2YgcHJlYWxsb2NhdGVkIGJhcnJp
ZXJzIGludG8gdGhlCisJICogaTkxNV9hY3RpdmUgcmJ0cmVlLCBidXQgb25seSBhcyBwcm90by1u
b2Rlcy4gVGhleSB3aWxsIGJlCisJICogcG9wdWxhdGVkIGJ5IGk5MTVfcmVxdWVzdF9hZGRfYWN0
aXZlX2JhcnJpZXIoKSB0byBwb2ludCB0byB0aGUKKwkgKiByZXF1ZXN0IHRoYXQgd2lsbCBldmVu
dHVhbGx5IHJlbGVhc2UgdGhlbS4KKwkgKi8KIAltdXRleF9sb2NrX25lc3RlZCgmcmVmLT5tdXRl
eCwgU0lOR0xFX0RFUFRIX05FU1RJTkcpOwotCWxsaXN0X2Zvcl9lYWNoX3NhZmUocG9zLCBuZXh0
LCBsbGlzdF9kZWxfYWxsKCZyZWYtPmJhcnJpZXJzKSkgewotCQlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmU7Ci0JCXN0cnVjdCBhY3RpdmVfbm9kZSAqbm9kZTsKKwlsbGlzdF9mb3JfZWFj
aF9zYWZlKHBvcywgbmV4dCwgZ2V0X3ByZWFsbG9jYXRlZF9iYXJyaWVycyhyZWYpKSB7CisJCXN0
cnVjdCBhY3RpdmVfbm9kZSAqbm9kZSA9IGJhcnJpZXJfZnJvbV9sbChwb3MpOworCQlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBiYXJyaWVyX3RvX2VuZ2luZShub2RlKTsKIAkJc3Ry
dWN0IHJiX25vZGUgKipwLCAqcGFyZW50OwogCi0JCW5vZGUgPSBjb250YWluZXJfb2YoKHN0cnVj
dCBsaXN0X2hlYWQgKilwb3MsCi0JCQkJICAgIHR5cGVvZigqbm9kZSksIGJhc2UubGluayk7Ci0K
LQkJZW5naW5lID0gKHZvaWQgKilyY3VfYWNjZXNzX3BvaW50ZXIobm9kZS0+YmFzZS5yZXF1ZXN0
KTsKLQkJUkNVX0lOSVRfUE9JTlRFUihub2RlLT5iYXNlLnJlcXVlc3QsIEVSUl9QVFIoLUVBR0FJ
TikpOwotCiAJCXBhcmVudCA9IE5VTEw7CiAJCXAgPSAmcmVmLT50cmVlLnJiX25vZGU7CiAJCXdo
aWxlICgqcCkgeworCQkJc3RydWN0IGFjdGl2ZV9ub2RlICppdDsKKwogCQkJcGFyZW50ID0gKnA7
Ci0JCQlpZiAocmJfZW50cnkocGFyZW50LAotCQkJCSAgICAgc3RydWN0IGFjdGl2ZV9ub2RlLAot
CQkJCSAgICAgbm9kZSktPnRpbWVsaW5lIDwgbm9kZS0+dGltZWxpbmUpCisKKwkJCWl0ID0gcmJf
ZW50cnkocGFyZW50LCBzdHJ1Y3QgYWN0aXZlX25vZGUsIG5vZGUpOworCQkJaWYgKGl0LT50aW1l
bGluZSA8IG5vZGUtPnRpbWVsaW5lKQogCQkJCXAgPSAmcGFyZW50LT5yYl9yaWdodDsKIAkJCWVs
c2UKIAkJCQlwID0gJnBhcmVudC0+cmJfbGVmdDsKQEAgLTQ1MiwyMCArNTgyLDI5IEBAIHZvaWQg
aTkxNV9hY3RpdmVfYWNxdWlyZV9iYXJyaWVyKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmKQogCQly
Yl9saW5rX25vZGUoJm5vZGUtPm5vZGUsIHBhcmVudCwgcCk7CiAJCXJiX2luc2VydF9jb2xvcigm
bm9kZS0+bm9kZSwgJnJlZi0+dHJlZSk7CiAKLQkJbGxpc3RfYWRkKChzdHJ1Y3QgbGxpc3Rfbm9k
ZSAqKSZub2RlLT5iYXNlLmxpbmssCi0JCQkgICZlbmdpbmUtPmJhcnJpZXJfdGFza3MpOworCQls
bGlzdF9hZGQoYmFycmllcl90b19sbChub2RlKSwgJmVuZ2luZS0+YmFycmllcl90YXNrcyk7CiAJ
CWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKIAl9CiAJbXV0ZXhfdW5sb2NrKCZyZWYtPm11
dGV4KTsKIH0KIAotdm9pZCBpOTE1X3JlcXVlc3RfYWRkX2JhcnJpZXJzKHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxKQordm9pZCBpOTE1X3JlcXVlc3RfYWRkX2FjdGl2ZV9iYXJyaWVycyhzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBy
cS0+ZW5naW5lOwogCXN0cnVjdCBsbGlzdF9ub2RlICpub2RlLCAqbmV4dDsKIAotCWxsaXN0X2Zv
cl9lYWNoX3NhZmUobm9kZSwgbmV4dCwgbGxpc3RfZGVsX2FsbCgmZW5naW5lLT5iYXJyaWVyX3Rh
c2tzKSkKKwlHRU1fQlVHX09OKGludGVsX2VuZ2luZV9pc192aXJ0dWFsKGVuZ2luZSkpOworCUdF
TV9CVUdfT04ocnEtPnRpbWVsaW5lICE9IGVuZ2luZS0+a2VybmVsX2NvbnRleHQtPnJpbmctPnRp
bWVsaW5lKTsKKworCS8qCisJICogQXR0YWNoIHRoZSBsaXN0IG9mIHByb3RvLWZlbmNlcyB0byB0
aGUgaW4tZmxpZ2h0IHJlcXVlc3Qgc3VjaAorCSAqIHRoYXQgdGhlIHBhcmVudCBpOTE1X2FjdGl2
ZSB3aWxsIGJlIHJlbGVhc2VkIHdoZW4gdGhpcyByZXF1ZXN0CisJICogaXMgcmV0aXJlZC4KKwkg
Ki8KKwlsbGlzdF9mb3JfZWFjaF9zYWZlKG5vZGUsIG5leHQsIGxsaXN0X2RlbF9hbGwoJmVuZ2lu
ZS0+YmFycmllcl90YXNrcykpIHsKKwkJUkNVX0lOSVRfUE9JTlRFUihiYXJyaWVyX2Zyb21fbGwo
bm9kZSktPmJhc2UucmVxdWVzdCwgcnEpOwogCQlsaXN0X2FkZF90YWlsKChzdHJ1Y3QgbGlzdF9o
ZWFkICopbm9kZSwgJnJxLT5hY3RpdmVfbGlzdCk7CisJfQogfQogCiBpbnQgaTkxNV9hY3RpdmVf
cmVxdWVzdF9zZXQoc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgKmFjdGl2ZSwKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2FjdGl2ZS5oCmluZGV4IGJhNjhiMDc3ZWM2Yy4uNTY2MzM2Yzk5ZWQ3IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmgKQEAgLTQxMyw2ICs0MTMsNiBAQCBzdGF0aWMgaW5s
aW5lIHZvaWQgaTkxNV9hY3RpdmVfZmluaShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikgeyB9CiBp
bnQgaTkxNV9hY3RpdmVfYWNxdWlyZV9wcmVhbGxvY2F0ZV9iYXJyaWVyKHN0cnVjdCBpOTE1X2Fj
dGl2ZSAqcmVmLAogCQkJCQkgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIHZv
aWQgaTkxNV9hY3RpdmVfYWNxdWlyZV9iYXJyaWVyKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmKTsK
LXZvaWQgaTkxNV9yZXF1ZXN0X2FkZF9iYXJyaWVycyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7
Cit2b2lkIGk5MTVfcmVxdWVzdF9hZGRfYWN0aXZlX2JhcnJpZXJzKHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKTsKIAogI2VuZGlmIC8qIF9JOTE1X0FDVElWRV9IXyAqLwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfYWN0aXZlX3R5cGVzLmgKaW5kZXggNzQ3NDNkZDBkNWYwLi5hZTNlZTQ0MWMxMTQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlX3R5cGVzLmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVfdHlwZXMuaApAQCAtNDIsNyArNDIs
NyBAQCBzdHJ1Y3QgaTkxNV9hY3RpdmUgewogCWludCAoKmFjdGl2ZSkoc3RydWN0IGk5MTVfYWN0
aXZlICpyZWYpOwogCXZvaWQgKCpyZXRpcmUpKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmKTsKIAot
CXN0cnVjdCBsbGlzdF9oZWFkIGJhcnJpZXJzOworCXN0cnVjdCBsbGlzdF9oZWFkIHByZWFsbG9j
YXRlZF9iYXJyaWVyczsKIH07CiAKICNlbmRpZiAvKiBfSTkxNV9BQ1RJVkVfVFlQRVNfSF8gKi8K
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2Vs
ZnRlc3RzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0
ZXN0cy5oCmluZGV4IDJiMzFhNGVlMGI0Yy4uYTg0MWQzZjliZWRjIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmgKQEAgLTE1
LDYgKzE1LDcgQEAgc2VsZnRlc3Qod29ya2Fyb3VuZHMsIGludGVsX3dvcmthcm91bmRzX2xpdmVf
c2VsZnRlc3RzKQogc2VsZnRlc3QodGltZWxpbmVzLCBpbnRlbF90aW1lbGluZV9saXZlX3NlbGZ0
ZXN0cykKIHNlbGZ0ZXN0KHJlcXVlc3RzLCBpOTE1X3JlcXVlc3RfbGl2ZV9zZWxmdGVzdHMpCiBz
ZWxmdGVzdChhY3RpdmUsIGk5MTVfYWN0aXZlX2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ3Rf
Y29udGV4dHMsIGludGVsX2NvbnRleHRfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChvYmplY3Rz
LCBpOTE1X2dlbV9vYmplY3RfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChtbWFuLCBpOTE1X2dl
bV9tbWFuX2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoZG1hYnVmLCBpOTE1X2dlbV9kbWFidWZf
bGl2ZV9zZWxmdGVzdHMpCkBAIC0yNCw3ICsyNSw3IEBAIHNlbGZ0ZXN0KGd0dCwgaTkxNV9nZW1f
Z3R0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoZ2VtLCBpOTE1X2dlbV9saXZlX3NlbGZ0ZXN0
cykKIHNlbGZ0ZXN0KGV2aWN0LCBpOTE1X2dlbV9ldmljdF9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0
ZXN0KGh1Z2VwYWdlcywgaTkxNV9nZW1faHVnZV9wYWdlX2xpdmVfc2VsZnRlc3RzKQotc2VsZnRl
c3QoY29udGV4dHMsIGk5MTVfZ2VtX2NvbnRleHRfbGl2ZV9zZWxmdGVzdHMpCitzZWxmdGVzdChn
ZW1fY29udGV4dHMsIGk5MTVfZ2VtX2NvbnRleHRfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChi
bHQsIGk5MTVfZ2VtX29iamVjdF9ibHRfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChjbGllbnQs
IGk5MTVfZ2VtX2NsaWVudF9ibHRfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChyZXNldCwgaW50
ZWxfcmVzZXRfbGl2ZV9zZWxmdGVzdHMpCi0tIAoyLjIyLjAKCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwt
Z2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 930D75EFE4
	for <lists+intel-gfx@lfdr.de>; Thu,  4 Jul 2019 02:02:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 721976E21E;
	Thu,  4 Jul 2019 00:02:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1C4076E21F
 for <intel-gfx@lists.freedesktop.org>; Thu,  4 Jul 2019 00:02:13 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 03 Jul 2019 17:02:12 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,449,1557212400"; d="scan'208";a="164494888"
Received: from mdroper-desk.fm.intel.com ([10.105.128.126])
 by fmsmga008.fm.intel.com with ESMTP; 03 Jul 2019 17:02:12 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  3 Jul 2019 17:02:11 -0700
Message-Id: <20190704000211.15771-1-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20190703233736.5816-5-matthew.d.roper@intel.com>
References: <20190703233736.5816-5-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v5 4/5] drm/i915: Transition port type checks to
 phy checks
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VHJhbnNpdGlvbiB0aGUgcmVtYWluaW5nIHVzZXMgb2YgaW50ZWxfcG9ydF9pc18qIG92ZXIgdG8g
dGhlIGVxdWl2YWxlbnQKaW50ZWxfcGh5X2lzXyogZnVuY3Rpb25zIGFuZCBkcm9wIHRoZSBwb3J0
IGZ1bmN0aW9ucy4KCnY1OiBGaXggYSBjYWxsIGluIGEgZGVidWcgZnVuY3Rpb24gdGhhdCdzIG9u
bHkgY2FsbGVkIHdoZW4KICAgIENPTkZJR19EUk1fSTkxNV9ERUJVR19SVU5USU1FX1BNIGlzIG9u
LiAgKENJKQoKQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29t
PgpDYzogTHVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IE1hdHQgUm9wZXIgPG1hdHRoZXcuZC5yb3BlckBpbnRlbC5jb20+Ci0tLQpUbyBhdm9p
ZCBjb25mbGljdHMgd2l0aCBpbi1mbGlnaHQgVEdMIHBhdGNoZXMsIHdlIG1heSB3YW50IHRvIGhv
bGQgb2ZmCm9uIG1lcmdpbmcgdGhpcyBvbmUgdW50aWwgVEdMIGxhbmRzPwoKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jICAgICB8ICA0ICstCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCA0OSArKysrKysrKysrKystLS0tLS0t
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAzOCArKysr
LS0tLS0tLS0tLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jICAg
IHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgICB8
IDE1ICsrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5j
IHwgMTEgKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oICAgICAgICAgICAg
ICB8ICAyIC0KIDcgZmlsZXMgY2hhbmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwgNjIgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9z
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYwppbmRleCAwYzk4
MDgxMzJkNjcuLjRmZGJiNWMzNWQ4NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9iaW9zLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9iaW9zLmMKQEAgLTI4LDYgKzI4LDcgQEAKICNpbmNsdWRlIDxkcm0vZHJtX2RwX2hlbHBl
ci5oPgogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCisjaW5jbHVkZSAiZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmgiCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9nbWJ1cy5oIgogCiAjaW5jbHVk
ZSAiaTkxNV9kcnYuaCIKQEAgLTE3MzMsMTIgKzE3MzQsMTMgQEAgaW5pdF92YnRfbWlzc2luZ19k
ZWZhdWx0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJZm9yIChwb3J0ID0g
UE9SVF9BOyBwb3J0IDwgSTkxNV9NQVhfUE9SVFM7IHBvcnQrKykgewogCQlzdHJ1Y3QgZGRpX3Zi
dF9wb3J0X2luZm8gKmluZm8gPQogCQkJJmRldl9wcml2LT52YnQuZGRpX3BvcnRfaW5mb1twb3J0
XTsKKwkJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwog
CiAJCS8qCiAJCSAqIFZCVCBoYXMgdGhlIFR5cGVDIG1vZGUgKG5hdGl2ZSxUQlQvVVNCKSBhbmQg
d2UgZG9uJ3Qgd2FudAogCQkgKiB0byBkZXRlY3QgaXQuCiAJCSAqLwotCQlpZiAoaW50ZWxfcG9y
dF9pc190YyhkZXZfcHJpdiwgcG9ydCkpCisJCWlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYs
IHBoeSkpCiAJCQljb250aW51ZTsKIAogCQlpbmZvLT5zdXBwb3J0c19kdmkgPSAocG9ydCAhPSBQ
T1JUX0EgJiYgcG9ydCAhPSBQT1JUX0UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGRpLmMKaW5kZXggNTBkZDlkNzMxNDU2Li4zN2M4Y2VjYjlhNmEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtODY4LDExICs4NjgsMTIgQEAgaWNsX2dl
dF9jb21ib19idWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQg
dHlwZSwgaW50IHJhdGUsCiBzdGF0aWMgaW50IGludGVsX2RkaV9oZG1pX2xldmVsKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7CiAJaW50IG5fZW50
cmllcywgbGV2ZWwsIGRlZmF1bHRfZW50cnk7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90
b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCiAJbGV2ZWwgPSBkZXZfcHJpdi0+dmJ0LmRkaV9wb3J0
X2luZm9bcG9ydF0uaGRtaV9sZXZlbF9zaGlmdDsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYp
ID49IDExKSB7Ci0JCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2LCBwb3J0KSkK
KwkJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkKIAkJCWljbF9nZXRfY29t
Ym9fYnVmX3RyYW5zKGRldl9wcml2LCBJTlRFTF9PVVRQVVRfSERNSSwKIAkJCQkJCTAsICZuX2Vu
dHJpZXMpOwogCQllbHNlCkBAIC0xNDg3LDkgKzE0ODgsMTAgQEAgc3RhdGljIHZvaWQgaWNsX2Rk
aV9jbG9ja19nZXQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3Ry
dWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwaXBlX2NvbmZpZy0+ZHBsbF9o
d19zdGF0ZTsKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5
ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCWludCBsaW5rX2Nsb2NrOwog
Ci0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7CisJaWYgKGlu
dGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgewogCQlsaW5rX2Nsb2NrID0gY25sX2Nh
bGNfd3JwbGxfbGluayhkZXZfcHJpdiwgcGxsX3N0YXRlKTsKIAl9IGVsc2UgewogCQllbnVtIGlu
dGVsX2RwbGxfaWQgcGxsX2lkID0gaW50ZWxfZ2V0X3NoYXJlZF9kcGxsX2lkKGRldl9wcml2LApA
QCAtMjA4Niw2ICsyMDg4LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dldF9wb3dlcl9kb21h
aW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0OworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRf
dG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAogCS8qCiAJICogVE9ETzogQWRkIHN1
cHBvcnQgZm9yIE1TVCBlbmNvZGVycy4gQXRtLCB0aGUgZm9sbG93aW5nIHNob3VsZCBuZXZlcgpA
QCAtMjEwMyw3ICsyMTA2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dldF9wb3dlcl9kb21h
aW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqIHBvcnRzLgogCSAqLwogCWlm
IChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKGNydGNfc3RhdGUpIHx8Ci0JICAgIGludGVsX3Bv
cnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCSAgICBpbnRlbF9waHlfaXNfdGMo
ZGV2X3ByaXYsIHBoeSkpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRldl9wcml2LAogCQkJ
CQlpbnRlbF9kZGlfbWFpbl9saW5rX2F1eF9kb21haW4oZGlnX3BvcnQpKTsKIApAQCAtMjIyOCwx
MCArMjIzMSwxMSBAQCB1OCBpbnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXIpCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVu
Y190b19pbnRlbF9kcCgmZW5jb2Rlci0+YmFzZSk7CiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVy
LT5wb3J0OworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0
KTsKIAlpbnQgbl9lbnRyaWVzOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpIHsK
LQkJaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKQorCQlpZiAoaW50
ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQogCQkJaWNsX2dldF9jb21ib19idWZfdHJh
bnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCiAJCQkJCQlpbnRlbF9kcC0+bGlua19yYXRlLCAm
bl9lbnRyaWVzKTsKIAkJZWxzZQpAQCAtMjY2NCw5ICsyNjY4LDkgQEAgc3RhdGljIHZvaWQgaWNs
X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJ
ICAgIGVudW0gaW50ZWxfb3V0cHV0X3R5cGUgdHlwZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKLQllbnVtIHBvcnQg
cG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHko
ZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCi0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHko
ZGV2X3ByaXYsIHBvcnQpKQorCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3ByaXYsIHBoeSkp
CiAJCWljbF9jb21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBsZXZlbCwgdHlw
ZSk7CiAJZWxzZQogCQlpY2xfbWdfcGh5X2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgbGlu
a19jbG9jaywgbGV2ZWwpOwpAQCAtMjcyOSwxMiArMjczMywxMyBAQCB1MzIgZGRpX3NpZ25hbF9s
ZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogc3RhdGljIGlubGluZQogdTMyIGlj
bF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LAotCQkJICAgICAgZW51bSBwb3J0IHBvcnQpCisJCQkgICAgICBlbnVtIHBoeSBwaHkpCiB7Ci0J
aWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7Ci0JCXJldHVybiBJ
Q0xfRFBDTEtBX0NGR0NSMF9ERElfQ0xLX09GRihwb3J0KTsKLQl9IGVsc2UgaWYgKGludGVsX3Bv
cnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKSB7Ci0JCWVudW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50
ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgcG9ydCk7CisJaWYgKGludGVsX3BoeV9pc19jb21ibyhk
ZXZfcHJpdiwgcGh5KSkgeworCQlyZXR1cm4gSUNMX0RQQ0xLQV9DRkdDUjBfRERJX0NMS19PRkYo
cGh5KTsKKwl9IGVsc2UgaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSkgeworCQll
bnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYsCisJCQkJCQkJ
KGVudW0gcG9ydClwaHkpOwogCiAJCXJldHVybiBJQ0xfRFBDTEtBX0NGR0NSMF9UQ19DTEtfT0ZG
KHRjX3BvcnQpOwogCX0KQEAgLTI4NzYsNiArMjg4MSw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2Rk
aV9jbGtfc2VsZWN0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwog
CWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9w
b3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAJdTMyIHZhbDsKIAljb25zdCBzdHJ1Y3QgaW50
ZWxfc2hhcmVkX2RwbGwgKnBsbCA9IGNydGNfc3RhdGUtPnNoYXJlZF9kcGxsOwogCkBAIC0yODg1
LDcgKzI4OTEsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfY2xrX3NlbGVjdChzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHBsbF9sb2NrKTsK
IAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExKSB7Ci0JCWlmICghaW50ZWxfcG9ydF9p
c19jb21ib3BoeShkZXZfcHJpdiwgcG9ydCkpCisJCWlmICghaW50ZWxfcGh5X2lzX2NvbWJvKGRl
dl9wcml2LCBwaHkpKQogCQkJSTkxNV9XUklURShERElfQ0xLX1NFTChwb3J0KSwKIAkJCQkgICBp
Y2xfcGxsX3RvX2RkaV9jbGtfc2VsKGVuY29kZXIsIGNydGNfc3RhdGUpKTsKIAl9IGVsc2UgaWYg
KElTX0NBTk5PTkxBS0UoZGV2X3ByaXYpKSB7CkBAIC0yOTI1LDkgKzI5MzEsMTAgQEAgc3RhdGlj
IHZvaWQgaW50ZWxfZGRpX2Nsa19kaXNhYmxlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rl
ci0+YmFzZS5kZXYpOwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBo
eSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAKIAlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA+PSAxMSkgewotCQlpZiAoIWludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2
X3ByaXYsIHBvcnQpKQorCQlpZiAoIWludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkK
IAkJCUk5MTVfV1JJVEUoRERJX0NMS19TRUwocG9ydCksIERESV9DTEtfU0VMX05PTkUpOwogCX0g
ZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKIAkJSTkxNV9XUklURShEUENMS0Ff
Q0ZHQ1IwLCBJOTE1X1JFQUQoRFBDTEtBX0NGR0NSMCkgfApAQCAtMzEzNCw3ICszMTQxLDcgQEAg
c3RhdGljIHZvaWQgaW50ZWxfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCiAKIAlpbnRlbF9kZGlfY2xrX3NlbGVjdChlbmNvZGVyLCBjcnRjX3N0YXRlKTsK
IAotCWlmICghaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkgfHwKKwlpZiAoIWludGVs
X3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSB8fAogCSAgICBkaWdfcG9ydC0+dGNfbW9kZSAhPSBU
Q19QT1JUX1RCVF9BTFQpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRldl9wcml2LAogCQkJ
CQlkaWdfcG9ydC0+ZGRpX2lvX3Bvd2VyX2RvbWFpbik7CkBAIC0zMTUyLDcgKzMxNTksNyBAQCBz
dGF0aWMgdm9pZCBpbnRlbF9kZGlfcHJlX2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKIAllbHNlCiAJCWludGVsX3ByZXBhcmVfZHBfZGRpX2J1ZmZlcnMoZW5jb2Rlciwg
Y3J0Y19zdGF0ZSk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgcG9y
dCkpIHsKKwlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKSB7CiAJCWJvb2wg
bGFuZV9yZXZlcnNhbCA9CiAJCQlkaWdfcG9ydC0+c2F2ZWRfcG9ydF9iaXRzICYgRERJX0JVRl9Q
T1JUX1JFVkVSU0FMOwogCkBAIC0zMzA0LDYgKzMzMTEsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9k
ZGlfcG9zdF9kaXNhYmxlX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHAgPSAmZGlnX3BvcnQtPmRwOwogCWJvb2wgaXNfbXN0ID0gaW50
ZWxfY3J0Y19oYXNfdHlwZShvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJICBJTlRFTF9PVVRQVVRfRFBf
TVNUKTsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rl
ci0+cG9ydCk7CiAKIAlpZiAoIWlzX21zdCkgewogCQlpbnRlbF9kZGlfZGlzYWJsZV9waXBlX2Ns
b2NrKG9sZF9jcnRjX3N0YXRlKTsKQEAgLTMzMTksNyArMzMyNyw3IEBAIHN0YXRpYyB2b2lkIGlu
dGVsX2RkaV9wb3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJ
aW50ZWxfZWRwX3BhbmVsX3ZkZF9vbihpbnRlbF9kcCk7CiAJaW50ZWxfZWRwX3BhbmVsX29mZihp
bnRlbF9kcCk7CiAKLQlpZiAoIWludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBv
cnQpIHx8CisJaWYgKCFpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkgfHwKIAkgICAgZGln
X3BvcnQtPnRjX21vZGUgIT0gVENfUE9SVF9UQlRfQUxUKQogCQlpbnRlbF9kaXNwbGF5X3Bvd2Vy
X3B1dF91bmNoZWNrZWQoZGV2X3ByaXYsCiAJCQkJCQkgIGRpZ19wb3J0LT5kZGlfaW9fcG93ZXJf
ZG9tYWluKTsKQEAgLTM2NjksOCArMzY3Nyw5IEBAIGludGVsX2RkaV9wcmVfcGxsX2VuYWJsZShz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxf
ZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgmZW5jb2Rlci0+YmFzZSk7
Ci0JYm9vbCBpc190Y19wb3J0ID0gaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+
cG9ydCk7CiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0OworCWVudW0gcGh5IHBoeSA9
IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsKKwlib29sIGlzX3RjX3BvcnQgPSBp
bnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSk7CiAKIAlpZiAoaXNfdGNfcG9ydCkKIAkJaW50
ZWxfdGNfcG9ydF9nZXRfbGluayhkaWdfcG9ydCwgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCk7CkBA
IC0zNzAwLDcgKzM3MDksOCBAQCBpbnRlbF9kZGlfcG9zdF9wbGxfZGlzYWJsZShzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9w
b3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgmZW5jb2Rlci0+YmFzZSk7Ci0JYm9vbCBp
c190Y19wb3J0ID0gaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CisJ
ZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQp
OworCWJvb2wgaXNfdGNfcG9ydCA9IGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KTsKIAog
CWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKGNydGNfc3RhdGUpIHx8IGlzX3RjX3BvcnQp
CiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfcHV0X3VuY2hlY2tlZChkZXZfcHJpdiwKQEAgLTQyMTQs
NiArNDIyNCw3IEBAIHZvaWQgaW50ZWxfZGRpX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAlzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXI7
CiAJYm9vbCBpbml0X2hkbWksIGluaXRfZHAsIGluaXRfbHNwY29uID0gZmFsc2U7CiAJZW51bSBw
aXBlIHBpcGU7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBv
cnQpOwogCiAJaW5pdF9oZG1pID0gcG9ydF9pbmZvLT5zdXBwb3J0c19kdmkgfHwgcG9ydF9pbmZv
LT5zdXBwb3J0c19oZG1pOwogCWluaXRfZHAgPSBwb3J0X2luZm8tPnN1cHBvcnRzX2RwOwpAQCAt
NDI3Nyw3ICs0Mjg4LDcgQEAgdm9pZCBpbnRlbF9kZGlfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogCWludGVsX2RpZ19wb3J0LT5tYXhfbGFu
ZXMgPSBpbnRlbF9kZGlfbWF4X2xhbmVzKGludGVsX2RpZ19wb3J0KTsKIAlpbnRlbF9kaWdfcG9y
dC0+YXV4X2NoID0gaW50ZWxfYmlvc19wb3J0X2F1eF9jaChkZXZfcHJpdiwgcG9ydCk7CiAKLQlp
ZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkpIHsKKwlpZiAoaW50ZWxfcGh5X2lz
X3RjKGRldl9wcml2LCBwaHkpKSB7CiAJCWJvb2wgaXNfbGVnYWN5ID0gIXBvcnRfaW5mby0+c3Vw
cG9ydHNfdHlwZWNfdXNiICYmCiAJCQkJICFwb3J0X2luZm8tPnN1cHBvcnRzX3RidDsKIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCA0YTg1YWJl
ZjkzZTcuLjU1MDUzMGNjMmQyNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmMKQEAgLTY2NDksMjAgKzY2NDksNiBAQCBzdGF0aWMgdm9pZCBpOXh4X3Bm
aXRfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCUk5
MTVfV1JJVEUoQkNMUlBBVChjcnRjLT5waXBlKSwgMCk7CiB9CiAKLWJvb2wgaW50ZWxfcG9ydF9p
c19jb21ib3BoeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBw
b3J0KQotewotCWlmIChwb3J0ID09IFBPUlRfTk9ORSkKLQkJcmV0dXJuIGZhbHNlOwotCi0JaWYg
KElTX0VMS0hBUlRMQUtFKGRldl9wcml2KSkKLQkJcmV0dXJuIHBvcnQgPD0gUE9SVF9DOwotCi0J
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCi0JCXJldHVybiBwb3J0IDw9IFBPUlRfQjsK
LQotCXJldHVybiBmYWxzZTsKLX0KLQogYm9vbCBpbnRlbF9waHlfaXNfY29tYm8oc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBoeSBwaHkpCiB7CiAJaWYgKHBoeSA9PSBQ
SFlfTk9ORSkKQEAgLTY2NzcsMTQgKzY2NjMsNiBAQCBib29sIGludGVsX3BoeV9pc19jb21ibyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGh5IHBoeSkKIAlyZXR1cm4g
ZmFsc2U7CiB9CiAKLWJvb2wgaW50ZWxfcG9ydF9pc190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQotewotCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYp
ID49IDExICYmICFJU19FTEtIQVJUTEFLRShkZXZfcHJpdikpCi0JCXJldHVybiBwb3J0ID49IFBP
UlRfQyAmJiBwb3J0IDw9IFBPUlRfRjsKLQotCXJldHVybiBmYWxzZTsKLX0KLQogYm9vbCBpbnRl
bF9waHlfaXNfdGMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBoeSBw
aHkpCiB7CiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYgIUlTX0VMS0hBUlRMQUtF
KGRldl9wcml2KSkKQEAgLTY3MzQsOCArNjcxMiw5IEBAIGVudW0gaW50ZWxfZGlzcGxheV9wb3dl
cl9kb21haW4KIGludGVsX2F1eF9wb3dlcl9kb21haW4oc3RydWN0IGludGVsX2RpZ2l0YWxfcG9y
dCAqZGlnX3BvcnQpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9y
dF90b19waHkoZGV2X3ByaXYsIGRpZ19wb3J0LT5iYXNlLnBvcnQpOwogCi0JaWYgKGludGVsX3Bv
cnRfaXNfdGMoZGV2X3ByaXYsIGRpZ19wb3J0LT5iYXNlLnBvcnQpICYmCisJaWYgKGludGVsX3Bo
eV9pc190YyhkZXZfcHJpdiwgcGh5KSAmJgogCSAgICBkaWdfcG9ydC0+dGNfbW9kZSA9PSBUQ19Q
T1JUX1RCVF9BTFQpIHsKIAkJc3dpdGNoIChkaWdfcG9ydC0+YXV4X2NoKSB7CiAJCWNhc2UgQVVY
X0NIX0M6CkBAIC0xMDA2OSwxNiArMTAwNDgsMTcgQEAgc3RhdGljIHZvaWQgaWNlbGFrZV9nZXRf
ZGRpX3BsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkJZW51bSBwb3J0
IHBvcnQsCiAJCQkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQogeworCWVu
dW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsKIAllbnVtIGlj
bF9wb3J0X2RwbGxfaWQgcG9ydF9kcGxsX2lkOwogCWVudW0gaW50ZWxfZHBsbF9pZCBpZDsKIAl1
MzIgdGVtcDsKIAotCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2LCBwb3J0KSkg
eworCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpIHsKIAkJdGVtcCA9IEk5
MTVfUkVBRChEUENMS0FfQ0ZHQ1IwX0lDTCkgJgotCQkgICAgICAgRFBDTEtBX0NGR0NSMF9ERElf
Q0xLX1NFTF9NQVNLKHBvcnQpOwotCQlpZCA9IHRlbXAgPj4gRFBDTEtBX0NGR0NSMF9ERElfQ0xL
X1NFTF9TSElGVChwb3J0KTsKKwkJCUlDTF9EUENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMX01BU0so
cGh5KTsKKwkJaWQgPSB0ZW1wID4+IElDTF9EUENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMX1NISUZU
KHBoeSk7CiAJCXBvcnRfZHBsbF9pZCA9IElDTF9QT1JUX0RQTExfREVGQVVMVDsKLQl9IGVsc2Ug
aWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKSB7CisJfSBlbHNlIGlmIChpbnRl
bF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpIHsKIAkJdTMyIGNsa19zZWwgPSBJOTE1X1JFQUQo
RERJX0NMS19TRUwocG9ydCkpICYgRERJX0NMS19TRUxfTUFTSzsKIAogCQlpZiAoY2xrX3NlbCA9
PSBERElfQ0xLX1NFTF9NRykgewpAQCAtMTY5MzUsOSArMTY5MTUsMTEgQEAgaW50ZWxfbW9kZXNl
dF9zZXR1cF9od19zdGF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCiAJLyogU2FuaXRpemUg
dGhlIFR5cGVDIHBvcnQgbW9kZSB1cGZyb250LCBlbmNvZGVycyBkZXBlbmQgb24gdGhpcyAqLwog
CWZvcl9lYWNoX2ludGVsX2VuY29kZXIoZGV2LCBlbmNvZGVyKSB7CisJCWVudW0gcGh5IHBoeSA9
IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKKwogCQkvKiBXZSBu
ZWVkIHRvIHNhbml0aXplIG9ubHkgdGhlIE1TVCBwcmltYXJ5IHBvcnQuICovCiAJCWlmIChlbmNv
ZGVyLT50eXBlICE9IElOVEVMX09VVFBVVF9EUF9NU1QgJiYKLQkJICAgIGludGVsX3BvcnRfaXNf
dGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCQkgICAgaW50ZWxfcGh5X2lzX3RjKGRldl9w
cml2LCBwaHkpKQogCQkJaW50ZWxfdGNfcG9ydF9zYW5pdGl6ZShlbmNfdG9fZGlnX3BvcnQoJmVu
Y29kZXItPmJhc2UpKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKaW5kZXggNjQ2MjdjMTE3YzMxLi44YWFiZmVhNzZkMzgg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9w
b3dlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9w
b3dlci5jCkBAIC00ODcsNyArNDg3LDkgQEAgc3RhdGljIHZvaWQgaWNsX3RjX3BvcnRfYXNzZXJ0
X3JlZl9oZWxkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlhdXhfY2ggPSBp
Y2xfdGNfcGh5X2F1eF9jaChkZXZfcHJpdiwgcG93ZXJfd2VsbCk7CiAKIAlmb3JfZWFjaF9pbnRl
bF9lbmNvZGVyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7Ci0JCWlmICghaW50ZWxfcG9ydF9p
c190YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpCisJCWVudW0gcGh5IHBoeSA9IGludGVsX3Bv
cnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKKworCQlpZiAoIWludGVsX3BoeV9p
c190YyhkZXZfcHJpdiwgcGh5KSkKIAkJCWNvbnRpbnVlOwogCiAJCS8qIFdlJ2xsIGNoZWNrIHRo
ZSBNU1QgcHJpbWFyeSBwb3J0ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rw
LmMKaW5kZXggOGY3MTg4ZDcxZDA4Li42NzYwM2EyNDdlOGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTI5Nyw5ICsyOTcsOSBAQCBzdGF0aWMgaW50IGljbF9t
YXhfc291cmNlX3JhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgaW50
ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRpZ19wb3J0LT5iYXNl
LmJhc2UuZGV2KTsKLQllbnVtIHBvcnQgcG9ydCA9IGRpZ19wb3J0LT5iYXNlLnBvcnQ7CisJZW51
bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIGRpZ19wb3J0LT5iYXNlLnBv
cnQpOwogCi0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpICYmCisJ
aWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSAmJgogCSAgICAhSVNfRUxLSEFS
VExBS0UoZGV2X3ByaXYpICYmCiAJICAgICFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKQogCQly
ZXR1cm4gNTQwMDAwOwpAQCAtMTE5Miw3ICsxMTkyLDggQEAgaW50ZWxfZHBfYXV4X3hmZXIoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
CiAJCQl0b19pOTE1KGludGVsX2RpZ19wb3J0LT5iYXNlLmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50
ZWxfdW5jb3JlICp1bmNvcmUgPSAmaTkxNS0+dW5jb3JlOwotCWJvb2wgaXNfdGNfcG9ydCA9IGlu
dGVsX3BvcnRfaXNfdGMoaTkxNSwgaW50ZWxfZGlnX3BvcnQtPmJhc2UucG9ydCk7CisJZW51bSBw
aHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoaTkxNSwgaW50ZWxfZGlnX3BvcnQtPmJhc2UucG9y
dCk7CisJYm9vbCBpc190Y19wb3J0ID0gaW50ZWxfcGh5X2lzX3RjKGk5MTUsIHBoeSk7CiAJaTkx
NV9yZWdfdCBjaF9jdGwsIGNoX2RhdGFbNV07CiAJdTMyIGF1eF9jbG9ja19kaXZpZGVyOwogCWVu
dW0gaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4gYXV4X2RvbWFpbiA9CkBAIC01MjExLDEwICs1
MjEyLDExIEBAIHN0YXRpYyBib29sIGljbF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0ID0gZW5jX3RvX2RpZ19wb3J0KCZlbmNvZGVyLT5iYXNlKTsKKwllbnVt
IHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAK
LQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpCisJ
aWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkKIAkJcmV0dXJuIGljbF9jb21i
b19wb3J0X2Nvbm5lY3RlZChkZXZfcHJpdiwgZGlnX3BvcnQpOwotCWVsc2UgaWYgKGludGVsX3Bv
cnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCWVsc2UgaWYgKGludGVsX3BoeV9p
c190YyhkZXZfcHJpdiwgcGh5KSkKIAkJcmV0dXJuIGludGVsX3RjX3BvcnRfY29ubmVjdGVkKGRp
Z19wb3J0KTsKIAllbHNlCiAJCU1JU1NJTkdfQ0FTRShlbmNvZGVyLT5ocGRfcGluKTsKQEAgLTcx
MTgsNiArNzEyMCw3IEBAIGludGVsX2RwX2luaXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdp
dGFsX3BvcnQgKmludGVsX2RpZ19wb3J0LAogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBpbnRl
bF9lbmNvZGVyLT5iYXNlLmRldjsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGRldik7CiAJZW51bSBwb3J0IHBvcnQgPSBpbnRlbF9lbmNvZGVyLT5wb3J0Owor
CWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsKIAlpbnQg
dHlwZTsKIAogCS8qIEluaXRpYWxpemUgdGhlIHdvcmsgZm9yIG1vZGVzZXQgaW4gY2FzZSBvZiBs
aW5rIHRyYWluIGZhaWx1cmUgKi8KQEAgLTcxNDQsNyArNzE0Nyw3IEBAIGludGVsX2RwX2luaXRf
Y29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0LAogCQkg
KiBDdXJyZW50bHkgd2UgZG9uJ3Qgc3VwcG9ydCBlRFAgb24gVHlwZUMgcG9ydHMsIGFsdGhvdWdo
IGluCiAJCSAqIHRoZW9yeSBpdCBjb3VsZCB3b3JrIG9uIFR5cGVDIGxlZ2FjeSBwb3J0cy4KIAkJ
ICovCi0JCVdBUk5fT04oaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkpOworCQlXQVJO
X09OKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSk7CiAJCXR5cGUgPSBEUk1fTU9ERV9D
T05ORUNUT1JfZURQOwogCX0gZWxzZSB7CiAJCXR5cGUgPSBEUk1fTU9ERV9DT05ORUNUT1JfRGlz
cGxheVBvcnQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RwbGxfbWdyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdy
LmMKaW5kZXggZjk1Mzk3MWU3YzNiLi5mODc4MmMyNGM0NDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmMKQEAgLTI1ODAsNyArMjU4MCw4IEBAIHN0
YXRpYyBib29sIGljbF9jYWxjX2RwbGxfc3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCiAJc3RydWN0IHNrbF93cnBsbF9wYXJhbXMgcGxsX3BhcmFtcyA9IHsgMCB9Owog
CWJvb2wgcmV0OwogCi0JaWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBv
cnQpKQorCWlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIGludGVsX3BvcnRfdG9fcGh5KGRl
dl9wcml2LAorCQkJCQkJCWVuY29kZXItPnBvcnQpKSkKIAkJcmV0ID0gaWNsX2NhbGNfdGJ0X3Bs
bChjcnRjX3N0YXRlLCAmcGxsX3BhcmFtcyk7CiAJZWxzZSBpZiAoaW50ZWxfY3J0Y19oYXNfdHlw
ZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfSERNSSkgfHwKIAkJIGludGVsX2NydGNfaGFzX3R5
cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0RTSSkpCkBAIC0yOTkzLDE0ICsyOTk0LDE0IEBA
IHN0YXRpYyBib29sIGljbF9nZXRfZHBsbHMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCiAJCQkgIHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsKLQllbnVt
IHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90
b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCi0JaWYgKGludGVsX3BvcnRfaXNfY29t
Ym9waHkoZGV2X3ByaXYsIHBvcnQpKQorCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3ByaXYs
IHBoeSkpCiAJCXJldHVybiBpY2xfZ2V0X2NvbWJvX3BoeV9kcGxsKHN0YXRlLCBjcnRjLCBlbmNv
ZGVyKTsKLQllbHNlIGlmIChpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSkKKwllbHNl
IGlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpCiAJCXJldHVybiBpY2xfZ2V0X3Rj
X3BoeV9kcGxscyhzdGF0ZSwgY3J0YywgZW5jb2Rlcik7CiAKLQlNSVNTSU5HX0NBU0UocG9ydCk7
CisJTUlTU0lOR19DQVNFKHBoeSk7CiAKIAlyZXR1cm4gZmFsc2U7CiB9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX2Rydi5oCmluZGV4IDgxNWMyNmMwYjk4Yy4uNzcwZjlmNmFhZDg0IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9kcnYuaApAQCAtMTQ5Miw5ICsxNDkyLDcgQEAgdm9pZCBpbnRlbF9wcHNfdW5sb2Nr
X3JlZ3Nfd2Eoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxf
ZW5jb2Rlcl9kZXN0cm95KHN0cnVjdCBkcm1fZW5jb2RlciAqZW5jb2Rlcik7CiBzdHJ1Y3QgZHJt
X2Rpc3BsYXlfbW9kZSAqCiBpbnRlbF9lbmNvZGVyX2N1cnJlbnRfbW9kZShzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2Rlcik7Ci1ib29sIGludGVsX3BvcnRfaXNfY29tYm9waHkoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCk7CiBib29sIGludGVsX3Bo
eV9pc19jb21ibyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGh5IHBo
eSk7Ci1ib29sIGludGVsX3BvcnRfaXNfdGMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LCBlbnVtIHBvcnQgcG9ydCk7CiBib29sIGludGVsX3BoeV9pc190YyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGh5IHBoeSk7CiBlbnVtIHRjX3BvcnQgaW50ZWxf
cG9ydF90b190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICBl
bnVtIHBvcnQgcG9ydCk7Ci0tIAoyLjE3LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeA==

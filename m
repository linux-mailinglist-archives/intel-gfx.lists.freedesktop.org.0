Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BBA6223EA32
	for <lists+intel-gfx@lfdr.de>; Fri,  7 Aug 2020 11:22:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BF4946E9A9;
	Fri,  7 Aug 2020 09:21:59 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DC5D06E9A2;
 Fri,  7 Aug 2020 09:21:55 +0000 (UTC)
IronPort-SDR: 1Z+EwaVv5YnMTodySGPjwALgBepasyYhQwxzQ+cmf5I/ckx3Fov+LsoFNVGQOeUWJsa2cgQaKC
 S0Kde5Jc2tIw==
X-IronPort-AV: E=McAfee;i="6000,8403,9705"; a="171106886"
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="171106886"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:21:55 -0700
IronPort-SDR: B5u7J7syRZxWHyPasrqBS/7BOa6MKWc9m2ELBDVy0nH2UgIlFsnj24xy8dV9UvwYbT3eqFumSX
 mRoUmrIKHdRg==
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="333492122"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga007-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:21:53 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: igt-dev@lists.freedesktop.org
Date: Fri,  7 Aug 2020 11:19:54 +0200
Message-Id: <20200807092002.32350-9-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
References: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v2 08/16] tests/core_hotunplug: Handle
 device close errors
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org,
 =?UTF-8?q?Micha=C5=82=20Winiarski?= <michal.winiarski@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIHRlc3Qgbm93IGlnbm9yZXMgZGV2aWNlIGNsb3NlIGVycm9ycy4gIFRob3NlIGVycm9ycyBh
cmUgYmVsaWV2ZWQgdG8KaGF2ZSBubyBpbmZsdWVuY2Ugb24gZGV2aWNlIGhlYWx0aCBzbyB0aGVy
ZSBpcyBubyBuZWVkIHRvIHByb2Nlc3MgdGhlbQp0aGUgc2FtZSB3YXkgYXMgd2UgbW9zdGx5IGRv
IG9uIGVycm9ycywgaS5lLiwgbm90aWZ5IENJIGFib3V0IGEgcHJvYmxlbQp2aWEgaWd0X2Fib3J0
LiAgSG93ZXZlciwgdGhvc2UgZXJyb3JzIG1heSBpbmRpY2F0ZSBpc3N1ZXMgd2l0aCB0aGUgdGVz
dAppdHNlbGYuICBNb3Jlb3ZlciwgaW1wYWN0IG9mIHRob3NlIGVycm9ycyBvbiBvcGVyYXRpb25z
IHBlcmZvcm1lZCBieQpzdWJ0ZXN0cywgbGlrZSBkcml2ZXIgdW5iaW5kIG9yIGRldmljZSByZW1v
dmUsIHNob3VsZCBiZSBwZXJjZWl2ZWQgYXMKdW5kZWZpbmVkLiAgVGhlbiwgd2Ugc2hvdWxkIGZh
aWwgYXMgc29vbiBhcyBhIGRldmljZSBvciBkZXZpY2Ugc3lzZnMKbm9kZSBjbG9zZSBlcnJvciBv
Y2N1cnMgYW5kIGFsc28gc2tpcCBzdWJzZXF1ZW50IHN1YnRlc3RzLiAgSG93ZXZlciwKb25jZSBh
IGRyaXZlciB1bmJpbmQgb3IgZGV2aWNlIHVucGx1ZyBvcGVyYXRpb24gaGFzIGJlZW4gYXR0ZW1w
dGVkIGJ5IGEKc3VidGVzdCwgd2UgY2FuJ3QganVzdCBmYWlsIHdpdGhvdXQgY2hlY2tpbmcgdGhl
IGRldmljZSBoZWFsdGguCgpXaGVuIGluIGEgc3VidGVzdCwgc3RvcmUgcmVzdWx0cyBvZiBkZXZp
Y2UgY2xvc2Ugb3BlcmF0aW9ucyBmb3IgZnV0dXJlCnJlZmVyZW5jZS4gIFJldXNlIGZpbGUgZGVz
Y3JpcHRvciBmaWVsZHMgb2YgdGhlIGhvdHVucGx1ZyBzdHJ1Y3R1cmUgZm9yCnRoYXQuICBVbmxl
c3MgaW4gYmV0d2VlbiBvZiBhIGRyaXZlciByZW1vdmUgb3IgZGV2aWNlIHVucGx1ZyBvcGVyYXRp
b24KYW5kIGEgc3VjY2Vzc2Z1bCBkZXZpY2UgaGVhbHRoIGNoZWNrLCBmYWlsIGN1cnJlbnQgdGVz
dCBzZWN0aW9uIHJpZ2h0CmFmdGVyIGEgZGV2aWNlIGNsb3NlIGVycm9yIG9jY3Vycywgd2FybiBv
dGhlcndpc2UuICBJZiBzdGlsbCBydW5uaW5nLApleGFtaW5lIGRldmljZSBmaWxlIGRlc2NyaXB0
b3IgZmllbGRzIGluIHN1YnNlcXVlbnQgaWd0X2ZpeHR1cmUKc2VjdGlvbnMgYW5kIHNraXAgb24g
ZXJyb3JzLgoKdjI6IEZpeCBhIHR5cG8gaW4gcG9zdF9oZWFsdGhjaGVjayBmdW5jdGlvbiBuYW1l
LAogIC0gcmViYXNlIG9uIGN1cnJlbnQgdXBzdHJlYW0gbWFzdGVyLgoKU2lnbmVkLW9mZi1ieTog
SmFudXN6IEtyenlzenRvZmlrIDxqYW51c3oua3J6eXN6dG9maWtAbGludXguaW50ZWwuY29tPgpS
ZXZpZXdlZC1ieTogTWljaGHFgiBXaW5pYXJza2kgPG1pY2hhbC53aW5pYXJza2lAaW50ZWwuY29t
PgotLS0KIHRlc3RzL2NvcmVfaG90dW5wbHVnLmMgfCA2MSArKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKy0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA0NyBpbnNlcnRpb25zKCspLCAx
NCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS90ZXN0cy9jb3JlX2hvdHVucGx1Zy5jIGIvdGVz
dHMvY29yZV9ob3R1bnBsdWcuYwppbmRleCA2MDcwYjdkOTUuLmZmYmEzMjU2OCAxMDA2NDQKLS0t
IGEvdGVzdHMvY29yZV9ob3R1bnBsdWcuYworKysgYi90ZXN0cy9jb3JlX2hvdHVucGx1Zy5jCkBA
IC00MywxMyArNDMsMjIgQEAgc3RydWN0IGhvdHVucGx1ZyB7CiAJCWludCBzeXNmc19kZXY7CiAJ
CWludCBzeXNmc19idXM7CiAJCWludCBzeXNmc19kcnY7Ci0JfSBmZDsKKwl9IGZkOwkvKiA+PSAw
OiB2YWxpZCBmZCwgPT0gLTE6IGNsb3NlZCwgPCAtMTogY2xvc2UgZmFpbGVkICovCiAJY29uc3Qg
Y2hhciAqZGV2X2J1c19hZGRyOwogCWNvbnN0IGNoYXIgKmZhaWx1cmU7CiB9OwogCiAvKiBIZWxw
ZXJzICovCiAKK3N0YXRpYyBpbnQgbG9jYWxfY2xvc2UoaW50IGZkKQoreworCWVycm5vID0gMDsK
KwlpZiAoY2xvc2UoZmQpKQkvKiBjbG9zZSBmYWlsdXJlIC0gcmV0dXJuIC1lcnJubyAobmV2ZXIg
LTEpICovCisJCXJldHVybiAtZXJybm87CisKKwlyZXR1cm4gLTE7CS8qIHN1Y2Nlc3MgLSByZXR1
cm4gJ2Nsb3NlZCcgKi8KK30KKwogc3RhdGljIHZvaWQgcHJlcGFyZV9mb3JfdW5iaW5kKHN0cnVj
dCBob3R1bnBsdWcgKnByaXYsIGNoYXIgKmJ1ZiwgaW50IGJ1ZmxlbikKIHsKIAlpbnQgbGVuOwpA
QCAtNjYsNyArNzUsOSBAQCBzdGF0aWMgdm9pZCBwcmVwYXJlX2Zvcl91bmJpbmQoc3RydWN0IGhv
dHVucGx1ZyAqcHJpdiwgY2hhciAqYnVmLCBpbnQgYnVmbGVuKQogCWlndF9hc3NlcnQocHJpdi0+
ZGV2X2J1c19hZGRyKyspOwogCiAJLyogc3lzZnNfZGV2IG5vIGxvbmdlciBuZWVkZWQgKi8KLQlj
bG9zZShwcml2LT5mZC5zeXNmc19kZXYpOworCXByaXYtPmZkLnN5c2ZzX2RldiA9IGxvY2FsX2Ns
b3NlKHByaXYtPmZkLnN5c2ZzX2Rldik7CisJaWd0X2Fzc2VydF9mKHByaXYtPmZkLnN5c2ZzX2Rl
diA9PSAtMSwKKwkJICAgICAiRGV2aWNlIHN5c2ZzIG5vZGUgY2xvc2UgZmFpbGVkXG4iKTsKIH0K
IAogc3RhdGljIHZvaWQgcHJlcGFyZShzdHJ1Y3QgaG90dW5wbHVnICpwcml2LCBjaGFyICpidWYs
IGludCBidWZsZW4pCkBAIC0xMjcsNyArMTM4LDkgQEAgc3RhdGljIHZvaWQgZGV2aWNlX3VucGx1
ZyhzdHJ1Y3QgaG90dW5wbHVnICpwcml2LCBjb25zdCBjaGFyICpwcmVmaXgpCiAJaWd0X3Jlc2V0
X3RpbWVvdXQoKTsKIAlwcml2LT5mYWlsdXJlID0gTlVMTDsKIAotCWNsb3NlKHByaXYtPmZkLnN5
c2ZzX2Rldik7CisJcHJpdi0+ZmQuc3lzZnNfZGV2ID0gbG9jYWxfY2xvc2UocHJpdi0+ZmQuc3lz
ZnNfZGV2KTsKKwlpZ3Rfd2Fybl9vbl9mKHByaXYtPmZkLnN5c2ZzX2RldiAhPSAtMSwKKwkJICAg
ICAgIkRldmljZSBzeXNmcyBub2RlIGNsb3NlIGZhaWxlZFxuIik7CiB9CiAKIC8qIFJlLWRpc2Nv
dmVyIHRoZSBkZXZpY2UgYnkgcmVzY2FubmluZyBpdHMgYnVzICovCkBAIC0xNDYsNiArMTU5LDcg
QEAgc3RhdGljIHZvaWQgYnVzX3Jlc2NhbihzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogCiBzdGF0
aWMgdm9pZCBoZWFsdGhjaGVjayhzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogeworCS8qIHByZXNl
cnZlIGVycm9yIGNvZGUgcG90ZW50aWFsbHkgc3RvcmVkIGJlZm9yZSBpbiBwcml2LT5mZC5kcm0g
Ki8KIAlpbnQgZmRfZHJtOwogCiAJLyogZGV2aWNlIG5hbWUgbWF5IGhhdmUgY2hhbmdlZCwgcmVi
dWlsZCBJR1QgZGV2aWNlIGxpc3QgKi8KQEAgLTE2MSw3ICsxNzUsMTkgQEAgc3RhdGljIHZvaWQg
aGVhbHRoY2hlY2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAkJcHJpdi0+ZmFpbHVyZSA9IE5V
TEw7CiAJfQogCi0JY2xvc2UoZmRfZHJtKTsKKwlmZF9kcm0gPSBsb2NhbF9jbG9zZShmZF9kcm0p
OworCWlmIChwcml2LT5mZC5kcm0gPT0gLTEpCisJCXByaXYtPmZkLmRybSA9IGZkX2RybTsKKwlp
Z3RfYXNzZXJ0X2YoZmRfZHJtID09IC0xLCAiRGV2aWNlIGNsb3NlIGZhaWxlZFxuIik7Cit9CisK
K3N0YXRpYyB2b2lkIHBvc3RfaGVhbHRoY2hlY2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKK3sK
KwlpZ3RfYWJvcnRfb25fZihwcml2LT5mYWlsdXJlLCAiJXNcbiIsIHByaXYtPmZhaWx1cmUpOwor
CisJaWd0X3JlcXVpcmVfZihwcml2LT5mZC5kcm0gPT0gLTEsICJEZXZpY2Ugbm90IGNsb3NlZCBw
cm9wZXJseVxuIik7CisJaWd0X3JlcXVpcmVfZihwcml2LT5mZC5zeXNmc19kZXYgPT0gLTEsCisJ
CSAgICAgICJEZXZpY2Ugc3lzZnMgbm9kZSBub3QgY2xvc2VkIHByb3Blcmx5XG4iKTsKIH0KIAog
c3RhdGljIHZvaWQgc2V0X2ZpbHRlcl9mcm9tX2RldmljZShpbnQgZmQpCkBAIC0xODgsNyArMjE0
LDggQEAgc3RhdGljIHZvaWQgdW5iaW5kX3JlYmluZChzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQog
CXByZXBhcmUocHJpdiwgYnVmLCBzaXplb2YoYnVmKSk7CiAKIAlpZ3RfZGVidWcoImNsb3Npbmcg
dGhlIGRldmljZVxuIik7Ci0JY2xvc2UocHJpdi0+ZmQuZHJtKTsKKwlwcml2LT5mZC5kcm0gPSBs
b2NhbF9jbG9zZShwcml2LT5mZC5kcm0pOworCWlndF9hc3NlcnRfZihwcml2LT5mZC5kcm0gPT0g
LTEsICJEZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsKIAogCWRyaXZlcl91bmJpbmQocHJpdiwgIiIp
OwogCkBAIC0yMDIsNyArMjI5LDggQEAgc3RhdGljIHZvaWQgdW5wbHVnX3Jlc2NhbihzdHJ1Y3Qg
aG90dW5wbHVnICpwcml2KQogCXByZXBhcmUocHJpdiwgTlVMTCwgMCk7CiAKIAlpZ3RfZGVidWco
ImNsb3NpbmcgdGhlIGRldmljZVxuIik7Ci0JY2xvc2UocHJpdi0+ZmQuZHJtKTsKKwlwcml2LT5m
ZC5kcm0gPSBsb2NhbF9jbG9zZShwcml2LT5mZC5kcm0pOworCWlndF9hc3NlcnRfZihwcml2LT5m
ZC5kcm0gPT0gLTEsICJEZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsKIAogCWRldmljZV91bnBsdWco
cHJpdiwgIiIpOwogCkBAIC0yMjIsNyArMjUwLDggQEAgc3RhdGljIHZvaWQgaG90dW5iaW5kX2xh
dGVjbG9zZShzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogCWRyaXZlcl9iaW5kKHByaXYpOwogCiAJ
aWd0X2RlYnVnKCJsYXRlIGNsb3NpbmcgdGhlIHVuYm91bmQgZGV2aWNlIGluc3RhbmNlXG4iKTsK
LQljbG9zZShwcml2LT5mZC5kcm0pOworCXByaXYtPmZkLmRybSA9IGxvY2FsX2Nsb3NlKHByaXYt
PmZkLmRybSk7CisJaWd0X3dhcm5fb25fZihwcml2LT5mZC5kcm0gIT0gLTEsICJEZXZpY2UgY2xv
c2UgZmFpbGVkXG4iKTsKIAogCWhlYWx0aGNoZWNrKHByaXYpOwogfQpAQCAtMjM2LDcgKzI2NSw4
IEBAIHN0YXRpYyB2b2lkIGhvdHVucGx1Z19sYXRlY2xvc2Uoc3RydWN0IGhvdHVucGx1ZyAqcHJp
dikKIAlidXNfcmVzY2FuKHByaXYpOwogCiAJaWd0X2RlYnVnKCJsYXRlIGNsb3NpbmcgdGhlIHJl
bW92ZWQgZGV2aWNlIGluc3RhbmNlXG4iKTsKLQljbG9zZShwcml2LT5mZC5kcm0pOworCXByaXYt
PmZkLmRybSA9IGxvY2FsX2Nsb3NlKHByaXYtPmZkLmRybSk7CisJaWd0X3dhcm5fb25fZihwcml2
LT5mZC5kcm0gIT0gLTEsICJEZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsKIAogCWhlYWx0aGNoZWNr
KHByaXYpOwogfQpAQCAtMjQ1LDcgKzI3NSwxMCBAQCBzdGF0aWMgdm9pZCBob3R1bnBsdWdfbGF0
ZWNsb3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiAKIGlndF9tYWluCiB7Ci0Jc3RydWN0IGhv
dHVucGx1ZyBwcml2ID0geyAuZmFpbHVyZSA9IE5VTEwsIH07CisJc3RydWN0IGhvdHVucGx1ZyBw
cml2ID0geworCQkuZmQJCT0geyAuZHJtID0gLTEsIC5zeXNmc19kZXYgPSAtMSwgfSwKKwkJLmZh
aWx1cmUJPSBOVUxMLAorCX07CiAKIAlpZ3RfZml4dHVyZSB7CiAJCWludCBmZF9kcm07CkBAIC0y
NjQsNyArMjk3LDcgQEAgaWd0X21haW4KIAkJLyogTWFrZSBzdXJlIHN1YnRlc3RzIGFsd2F5cyBy
ZW9wZW4gdGhlIHNhbWUgZGV2aWNlICovCiAJCXNldF9maWx0ZXJfZnJvbV9kZXZpY2UoZmRfZHJt
KTsKIAotCQljbG9zZShmZF9kcm0pOworCQlpZ3RfZmFpbF9vbl9mKGNsb3NlKGZkX2RybSksICJE
ZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsKIAl9CiAKIAlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIHRo
ZSBkcml2ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgZGV2aWNlIGJlbGlldmVkIHRv
IGJlIGNsb3NlZCIpOwpAQCAtMjcyLDI2ICszMDUsMjYgQEAgaWd0X21haW4KIAkJdW5iaW5kX3Jl
YmluZCgmcHJpdik7CiAKIAlpZ3RfZml4dHVyZQotCQlpZ3RfYWJvcnRfb25fZihwcml2LmZhaWx1
cmUsICIlc1xuIiwgcHJpdi5mYWlsdXJlKTsKKwkJcG9zdF9oZWFsdGhjaGVjaygmcHJpdik7CiAK
IAlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIGEgZGV2aWNlIGJlbGlldmVkIHRvIGJlIGNsb3NlZCBj
YW4gYmUgY2xlYW5seSB1bnBsdWdnZWQiKTsKIAlpZ3Rfc3VidGVzdCgidW5wbHVnLXJlc2NhbiIp
CiAJCXVucGx1Z19yZXNjYW4oJnByaXYpOwogCiAJaWd0X2ZpeHR1cmUKLQkJaWd0X2Fib3J0X29u
X2YocHJpdi5mYWlsdXJlLCAiJXNcbiIsIHByaXYuZmFpbHVyZSk7CisJCXBvc3RfaGVhbHRoY2hl
Y2soJnByaXYpOwogCiAJaWd0X2Rlc2NyaWJlKCJDaGVjayBpZiB0aGUgZHJpdmVyIGNhbiBiZSBj
bGVhbmx5IHVuYm91bmQgZnJvbSBhIHN0aWxsIG9wZW4gZGV2aWNlLCB0aGVuIHJlbGVhc2VkIik7
CiAJaWd0X3N1YnRlc3QoImhvdHVuYmluZC1sYXRlY2xvc2UiKQogCQlob3R1bmJpbmRfbGF0ZWNs
b3NlKCZwcml2KTsKIAogCWlndF9maXh0dXJlCi0JCWlndF9hYm9ydF9vbl9mKHByaXYuZmFpbHVy
ZSwgIiVzXG4iLCBwcml2LmZhaWx1cmUpOworCQlwb3N0X2hlYWx0aGNoZWNrKCZwcml2KTsKIAog
CWlndF9kZXNjcmliZSgiQ2hlY2sgaWYgYSBzdGlsbCBvcGVuIGRldmljZSBjYW4gYmUgY2xlYW5s
eSB1bnBsdWdnZWQsIHRoZW4gcmVsZWFzZWQiKTsKIAlpZ3Rfc3VidGVzdCgiaG90dW5wbHVnLWxh
dGVjbG9zZSIpCiAJCWhvdHVucGx1Z19sYXRlY2xvc2UoJnByaXYpOwogCiAJaWd0X2ZpeHR1cmUK
LQkJaWd0X2Fib3J0X29uX2YocHJpdi5mYWlsdXJlLCAiJXNcbiIsIHByaXYuZmFpbHVyZSk7CisJ
CXBvc3RfaGVhbHRoY2hlY2soJnByaXYpOwogfQotLSAKMi4yMS4xCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0Cklu
dGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5v
cmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 59E0355CC2
	for <lists+intel-gfx@lfdr.de>; Wed, 26 Jun 2019 02:04:17 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A54998912D;
	Wed, 26 Jun 2019 00:04:15 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 242D26E1D3
 for <intel-gfx@lists.freedesktop.org>; Wed, 26 Jun 2019 00:04:12 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 25 Jun 2019 17:04:12 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,417,1557212400"; d="scan'208";a="163767609"
Received: from mdroper-desk.fm.intel.com ([10.105.128.126])
 by fmsmga007.fm.intel.com with ESMTP; 25 Jun 2019 17:04:11 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 25 Jun 2019 17:03:51 -0700
Message-Id: <20190626000352.31926-5-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20190626000352.31926-1-matthew.d.roper@intel.com>
References: <20190626000352.31926-1-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 4/5] drm/i915/gen11: Start distinguishing
 'phy' from 'port'
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T3VyIHBhc3QgRERJLWJhc2VkIEludGVsIHBsYXRmb3JtcyBoYXZlIGhhZCBhIGZpeGVkIERESTwt
PlBIWSBtYXBwaW5nLgpCZWNhdXNlIG9mIHRoaXMsIGJvdGggdGhlIGJzcGVjIGRvY3VtZW50YXRp
b24gYW5kIG91ciBpOTE1IGNvZGUgaGFzIHVzZWQKdGhlIHRlcm0gInBvcnQiIHdoZW4gdGFsa2lu
ZyBhYm91dCBlaXRoZXIgRERJJ3Mgb3IgUEhZJ3M7IGl0IHdhcyBhbHdheXMKZWFzeSB0byB0ZWxs
IHdoYXQgdGVybXMgbGlrZSAiUG9ydCBBIiB3ZXJlIHJlZmVycmluZyB0byBmcm9tIHRoZQpjb250
ZXh0LgoKVW5mb3J0dW5hdGVseSB0aGlzIGlzIHN0YXJ0aW5nIHRvIGJyZWFrIGRvd24gbm93IHRo
YXQgRUhMIGFsbG93cyBQSFktQQp0byBiZSBkcml2ZW4gYnkgZWl0aGVyIERESS1BIG9yIERESS1E
LiAgSXMgYSBzZXR1cCB3aXRoIERESS1EIGRyaXZpbmcKUEhZLUEgY29uc2lkZXJlZCAiUG9ydCBB
IiBvciAiUG9ydCBEPyIgIFRoZSBhbnN3ZXIgZGVwZW5kcyBvbiB3aGljaApyZWdpc3RlciB3ZSdy
ZSB3b3JraW5nIHdpdGgsIGFuZCBldmVuIHRoZSBic3BlYyBkb2Vzbid0IGRvIGEgZ3JlYXQgam9i
Cm9mIGNsYXJpZnlpbmcgdGhpcy4KCkxldCdzIHRyeSB0byBiZSBtb3JlIGV4cGxpY2l0IGFib3V0
IHdoZXRoZXIgd2UncmUgdGFsa2luZyBhYm91dCB0aGUgRERJCm9yIHRoZSBQSFkgb24gZ2VuMTEr
IGJ5IHVzaW5nICdwb3J0JyB0byByZWZlciB0byB0aGUgRERJIGFuZCBjcmVhdGluZyBhCm5ldyAn
ZW51bSBwaHknIG5hbWVzcGFjZSB0byByZWZlciB0byB0aGUgUEhZIGluIHVzZS4KCkEgZmV3IGdl
bmVyYWwgbm90ZXM6CgogLSBJQ0xfUE9SVF9DT01QXyogYW5kIElDTF9QT1JUX0NMXyogYmVsb25n
IHRvIHRoZSBhY3R1YWwgY29tYm8gUEhZIHNvCiAgIHRoZXkgc2hvdWxkIGFsd2F5cyBiZSBwcm9n
cmFtbWVkIGFjY29yZGluZyB0byB0aGUgUEhZIGluIHVzZSwKICAgcmVnYXJkbGVzcyBvZiB3aGlj
aCBEREkgaXMgZHJpdmluZyBpdC4KCiAtIFRoZSBwaXBlIHBhcnQgb2YgdGhlIGhhcmR3YXJlIGV4
cGVjdHMgInBvcnQiIHRvIHJlZmVyIHRvIHRoZQogICBEREksIHNvIHJlZ2lzdGVycyBsaWtlIFRS
QU5TX0NMS19TRUwgYW5kIFRSQU5TX0RESV9GVU5DX0NUTCBzaG91bGQKICAgc2V0IGJpdHMgYWNj
b3JkaW5nIHRvIHRoZSBkZXNpcmVkIERESSAoZS5nLiwgRERJLUQpIHJhdGhlciB0aGFuIHRoZQog
ICBQSFkgKFBIWS1BKS4KCiAtIE5vbi1waXBlIHJlZ2lzdGVycyByZWZlciB0byB0aGUgUEhZLiAg
Tm90YWJseSwgRFBDTEtBX0NGR0NSMF9JQ0wKICAgbmVlZHMgdG8gc2V0IGJpdHMgYWNjb3JkaW5n
IHRvIHRoZSBQSFkgcmF0aGVyIHRoYW4gRERJLCBldmVuIHRob3VnaAogICB0aGUgYml0IGRlc2Ny
aXB0aW9ucyBpbiB0aGUgYnNwZWMgdXNlIHRoZSB0ZXJtICdEREkuJyAgQWxzbywgc2luY2UKICAg
dGhlIENOTCBEUENMS0FfQ0ZHQ1IwIGJpdCBkZWZpbmVzIGFyZSBzdGlsbCBwb3J0LWJhc2VkLCB3
ZSBjcmVhdGUKICAgc2VwYXJhdGUgSUNMLXNwZWNpZmljIGRlZmluZXMgdGhhdCBhY2NlcHQgdGhl
IFBIWSByYXRoZXIgdGhhbiB0cnlpbmcKICAgdG8gc2hhcmUgdGhlIHNhbWUgYml0IGRlZmluaXRp
b25zIGJldHdlZW4gQ05MIGFuZCBJQ0wuCgpNb3N0IG9mIHRoZSBjaGFuZ2VzIGhlcmUgYXJlIG9u
IHRoZSBjb21ibyBQSFkgc2lkZS4gIEkgZGlkbid0IHRvdWNoIG1vc3QKb2YgdGhlIFRDIHBvcnQg
Y29kZSB5ZXQsIHNvIGl0IHN0aWxsIHJlZmVycyB0byBldmVyeXRoaW5nIGFzIHBvcnRzLgpUaGF0
J3Mgb2theSBmb3Igbm93IHNpbmNlIHRoZXJlJ3Mgbm8gVEMgb24gRUhMLCBidXQgd2UnbGwgcHJv
YmFibHkgd2FudAp0byBzZXBhcmF0ZSBvdXQgdGhlIERESSB2cyBQSFkgdGVybWlub2xvZ3kgZm9y
IFRDIGluIHRoZSBmdXR1cmUgYXMgd2VsbAp0byBhdm9pZCBjb25mdXNpb24uCgp2MjoKIC0gQ29u
dmVydCBhIGZldyBtb3JlICdwb3J0JyB1c2VzIHRvICdwaHkuJyAoU3BhcnNlKQoKdjM6CiAtIFN3
aXRjaCBERElfQ0xLX1NFTCgpIGJhY2sgdG8gJ3BvcnQuJyAoSm9zZSkKIC0gQWRkIGEgY29kZSBj
b21tZW50IGNsYXJpZnlpbmcgd2h5IERQQ0xLQV9DRkdDUjBfSUNMIG5lZWRzIHRvIHVzZSBQSFkK
ICAgZm9yIGl0cyBiaXQgZGVmaW5pdGlvbnMsIGV2ZW4gdGhvdWdoIHRoZSByZWdpc3RlciBkZXNj
cmlwdGlvbiBpcwogICBnaXZlbiBpbiB0ZXJtcyBvZiBEREkuCiAtIFRvIGF2b2lkIGNvbmZ1c2lv
biwgc3dpdGNoIENOTCdzIERQQ0xLQV9DRkdDUjAgZGVmaW5lcyBiYWNrIHRvIHVzaW5nCiAgIHBv
cnQgYW5kIGNyZWF0ZSBzZXBhcmF0ZSBJQ0wrIGRlZmluaXRpb25zIHRoYXQgd29yayBpbiB0ZXJt
cyBvZiBQSFkuCgpTdWdnZXN0ZWQtYnk6IFZpbGxlIFN5cmphbGEgPHZpbGxlLnN5cmphbGFAbGlu
dXguaW50ZWwuY29tPgpDYzogSm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRl
bC5jb20+CkNjOiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KQ2M6
IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+CkNjOiBJbXJl
IERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+CkNjOiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFA
aW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0IFJvcGVyIDxtYXR0aGV3LmQucm9wZXJAaW50
ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jICAgICAg
ICB8ICAyNCArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jICAg
ICB8ICAgNCArLQogLi4uL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NvbWJvX3BoeS5jICAg
IHwgMTQzICsrKysrKysrKy0tLS0tLS0tLQogLi4uL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2NvbWJvX3BoeS5oICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RkaS5jICAgICAgfCAgOTAgKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAzMSArKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuaCAgfCAgMTYgKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHAuYyAgICAgICB8ICAxMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcGxsX21nci5jIHwgICA4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3JlZy5oICAgICAgICAgICAgICAgfCAgMTYgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X2Rydi5oICAgICAgICAgICAgICB8ICAgNCArLQogMTEgZmlsZXMgY2hhbmdlZCwgMjEwIGluc2Vy
dGlvbnMoKyksIDE0MSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ljbF9kc2kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaWNs
X2RzaS5jCmluZGV4IGI4NjczZGViZjkzMi4uNzliMWU3YzEzN2RmIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ljbF9kc2kuYwpAQCAtMzY1LDEwICszNjUsMTMgQEAgc3RhdGljIHZvaWQg
Z2VuMTFfZHNpX3Bvd2VyX3VwX2xhbmVzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFz
ZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9kc2kgKmludGVsX2RzaSA9IGVuY190b19pbnRlbF9kc2ko
JmVuY29kZXItPmJhc2UpOwogCWVudW0gcG9ydCBwb3J0OworCWVudW0gcGh5IHBoeTsKIAotCWZv
cl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpCi0JCWludGVsX2NvbWJvX3Bo
eV9wb3dlcl91cF9sYW5lcyhkZXZfcHJpdiwgcG9ydCwgdHJ1ZSwKKwlmb3JfZWFjaF9kc2lfcG9y
dChwb3J0LCBpbnRlbF9kc2ktPnBvcnRzKSB7CisJCXBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRl
dl9wcml2LCBwb3J0KTsKKwkJaW50ZWxfY29tYm9fcGh5X3Bvd2VyX3VwX2xhbmVzKGRldl9wcml2
LCBwaHksIHRydWUsCiAJCQkJCSAgICAgICBpbnRlbF9kc2ktPmxhbmVfY291bnQsIGZhbHNlKTsK
Kwl9CiB9CiAKIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9jb25maWdfcGh5X2xhbmVzX3NlcXVlbmNl
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQpAQCAtNTYwLDExICs1NjMsMTMgQEAgc3Rh
dGljIHZvaWQgZ2VuMTFfZHNpX2dhdGVfY2xvY2tzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyKQogCXN0cnVjdCBpbnRlbF9kc2kgKmludGVsX2RzaSA9IGVuY190b19pbnRlbF9kc2koJmVu
Y29kZXItPmJhc2UpOwogCXUzMiB0bXA7CiAJZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5
OwogCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPmRwbGxfbG9jayk7CiAJdG1wID0gSTkxNV9SRUFE
KERQQ0xLQV9DRkdDUjBfSUNMKTsKIAlmb3JfZWFjaF9kc2lfcG9ydChwb3J0LCBpbnRlbF9kc2kt
PnBvcnRzKSB7Ci0JCXRtcCB8PSBEUENMS0FfQ0ZHQ1IwX0RESV9DTEtfT0ZGKHBvcnQpOworCQlw
aHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CisJCXRtcCB8PSBJQ0xfRFBD
TEtBX0NGR0NSMF9ERElfQ0xLX09GRihwaHkpOwogCX0KIAogCUk5MTVfV1JJVEUoRFBDTEtBX0NG
R0NSMF9JQ0wsIHRtcCk7CkBAIC01NzcsMTEgKzU4MiwxMyBAQCBzdGF0aWMgdm9pZCBnZW4xMV9k
c2lfdW5nYXRlX2Nsb2NrcyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIAlzdHJ1Y3Qg
aW50ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVyLT5iYXNlKTsK
IAl1MzIgdG1wOwogCWVudW0gcG9ydCBwb3J0OworCWVudW0gcGh5IHBoeTsKIAogCW11dGV4X2xv
Y2soJmRldl9wcml2LT5kcGxsX2xvY2spOwogCXRtcCA9IEk5MTVfUkVBRChEUENMS0FfQ0ZHQ1Iw
X0lDTCk7CiAJZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQl0
bXAgJj0gfkRQQ0xLQV9DRkdDUjBfRERJX0NMS19PRkYocG9ydCk7CisJCXBoeSA9IGludGVsX3Bv
cnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsKKwkJdG1wICY9IH5JQ0xfRFBDTEtBX0NGR0NSMF9E
RElfQ0xLX09GRihwaHkpOwogCX0KIAogCUk5MTVfV1JJVEUoRFBDTEtBX0NGR0NSMF9JQ0wsIHRt
cCk7CkBAIC01OTUsMTkgKzYwMiwyMiBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfbWFwX3BsbChz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9k
c2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVyLT5iYXNlKTsKIAlzdHJ1Y3QgaW50ZWxfc2hh
cmVkX2RwbGwgKnBsbCA9IGNydGNfc3RhdGUtPnNoYXJlZF9kcGxsOwogCWVudW0gcG9ydCBwb3J0
OworCWVudW0gcGh5IHBoeTsKIAl1MzIgdmFsOwogCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPmRw
bGxfbG9jayk7CiAKIAl2YWwgPSBJOTE1X1JFQUQoRFBDTEtBX0NGR0NSMF9JQ0wpOwogCWZvcl9l
YWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJdmFsICY9IH5EUENMS0Ff
Q0ZHQ1IwX0RESV9DTEtfU0VMX01BU0socG9ydCk7Ci0JCXZhbCB8PSBEUENMS0FfQ0ZHQ1IwX0RE
SV9DTEtfU0VMKHBsbC0+aW5mby0+aWQsIHBvcnQpOworCQlwaHkgPSBpbnRlbF9wb3J0X3RvX3Bo
eShkZXZfcHJpdiwgcG9ydCk7CisJCXZhbCAmPSB+SUNMX0RQQ0xLQV9DRkdDUjBfRERJX0NMS19T
RUxfTUFTSyhwaHkpOworCQl2YWwgfD0gSUNMX0RQQ0xLQV9DRkdDUjBfRERJX0NMS19TRUwocGxs
LT5pbmZvLT5pZCwgcGh5KTsKIAl9CiAJSTkxNV9XUklURShEUENMS0FfQ0ZHQ1IwX0lDTCwgdmFs
KTsKIAogCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJdmFs
ICY9IH5EUENMS0FfQ0ZHQ1IwX0RESV9DTEtfT0ZGKHBvcnQpOworCQlwaHkgPSBpbnRlbF9wb3J0
X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CisJCXZhbCAmPSB+SUNMX0RQQ0xLQV9DRkdDUjBfRERJ
X0NMS19PRkYocGh5KTsKIAl9CiAJSTkxNV9XUklURShEUENMS0FfQ0ZHQ1IwX0lDTCwgdmFsKTsK
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYwppbmRleCAwYzk4MDgx
MzJkNjcuLjRmZGJiNWMzNWQ4NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9iaW9zLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9iaW9zLmMKQEAgLTI4LDYgKzI4LDcgQEAKICNpbmNsdWRlIDxkcm0vZHJtX2RwX2hlbHBlci5o
PgogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCisjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmgiCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9nbWJ1cy5oIgogCiAjaW5jbHVkZSAi
aTkxNV9kcnYuaCIKQEAgLTE3MzMsMTIgKzE3MzQsMTMgQEAgaW5pdF92YnRfbWlzc2luZ19kZWZh
dWx0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJZm9yIChwb3J0ID0gUE9S
VF9BOyBwb3J0IDwgSTkxNV9NQVhfUE9SVFM7IHBvcnQrKykgewogCQlzdHJ1Y3QgZGRpX3ZidF9w
b3J0X2luZm8gKmluZm8gPQogCQkJJmRldl9wcml2LT52YnQuZGRpX3BvcnRfaW5mb1twb3J0XTsK
KwkJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCiAJ
CS8qCiAJCSAqIFZCVCBoYXMgdGhlIFR5cGVDIG1vZGUgKG5hdGl2ZSxUQlQvVVNCKSBhbmQgd2Ug
ZG9uJ3Qgd2FudAogCQkgKiB0byBkZXRlY3QgaXQuCiAJCSAqLwotCQlpZiAoaW50ZWxfcG9ydF9p
c190YyhkZXZfcHJpdiwgcG9ydCkpCisJCWlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBo
eSkpCiAJCQljb250aW51ZTsKIAogCQlpbmZvLT5zdXBwb3J0c19kdmkgPSAocG9ydCAhPSBQT1JU
X0EgJiYgcG9ydCAhPSBQT1JUX0UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9jb21ib19waHkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfY29tYm9fcGh5LmMKaW5kZXggZDNkNTI0NDc2NWU2Li5hYzgyMThhMDQwYWIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY29tYm9fcGh5LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb21ib19waHkuYwpAQCAtNiwx
MyArNiwxMyBAQAogI2luY2x1ZGUgImludGVsX2NvbWJvX3BoeS5oIgogI2luY2x1ZGUgImludGVs
X2Rydi5oIgogCi0jZGVmaW5lIGZvcl9lYWNoX2NvbWJvX3BvcnQoX19kZXZfcHJpdiwgX19wb3J0
KSBcCi0JZm9yICgoX19wb3J0KSA9IFBPUlRfQTsgKF9fcG9ydCkgPCBJOTE1X01BWF9QT1JUUzsg
KF9fcG9ydCkrKykJXAotCQlmb3JfZWFjaF9pZihpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KF9fZGV2
X3ByaXYsIF9fcG9ydCkpCisjZGVmaW5lIGZvcl9lYWNoX2NvbWJvX3BoeShfX2Rldl9wcml2LCBf
X3BoeSkgXAorCWZvciAoKF9fcGh5KSA9IFBIWV9BOyAoX19waHkpIDwgSTkxNV9NQVhfUEhZUzsg
KF9fcGh5KSsrKQlcCisJCWZvcl9lYWNoX2lmKGludGVsX3BoeV9pc19jb21ibyhfX2Rldl9wcml2
LCBfX3BoeSkpCiAKLSNkZWZpbmUgZm9yX2VhY2hfY29tYm9fcG9ydF9yZXZlcnNlKF9fZGV2X3By
aXYsIF9fcG9ydCkgXAotCWZvciAoKF9fcG9ydCkgPSBJOTE1X01BWF9QT1JUUzsgKF9fcG9ydCkt
LSA+IFBPUlRfQTspIFwKLQkJZm9yX2VhY2hfaWYoaW50ZWxfcG9ydF9pc19jb21ib3BoeShfX2Rl
dl9wcml2LCBfX3BvcnQpKQorI2RlZmluZSBmb3JfZWFjaF9jb21ib19waHlfcmV2ZXJzZShfX2Rl
dl9wcml2LCBfX3BoeSkgXAorCWZvciAoKF9fcGh5KSA9IEk5MTVfTUFYX1BIWVM7IChfX3BoeSkt
LSA+IFBIWV9BOykgXAorCQlmb3JfZWFjaF9pZihpbnRlbF9waHlfaXNfY29tYm8oX19kZXZfcHJp
diwgX19waHkpKQogCiBlbnVtIHsKIAlQUk9DTU9OXzBfODVWX0RPVF8wLApAQCAtMzgsMTggKzM4
LDE3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgY25sX3Byb2Ntb24gewogfTsKIAogLyoKLSAqIENO
TCBoYXMganVzdCBvbmUgc2V0IG9mIHJlZ2lzdGVycywgd2hpbGUgSUNMIGhhcyB0d28gc2V0czog
b25lIGZvciBwb3J0IEEgYW5kCi0gKiB0aGUgb3RoZXIgZm9yIHBvcnQgQi4gVGhlIENOTCByZWdp
c3RlcnMgYXJlIGVxdWl2YWxlbnQgdG8gdGhlIElDTCBwb3J0IEEKLSAqIHJlZ2lzdGVycywgdGhh
dCdzIHdoeSB3ZSBjYWxsIHRoZSBJQ0wgbWFjcm9zIGV2ZW4gdGhvdWdoIHRoZSBmdW5jdGlvbiBo
YXMgQ05MCi0gKiBvbiBpdHMgbmFtZS4KKyAqIENOTCBoYXMganVzdCBvbmUgc2V0IG9mIHJlZ2lz
dGVycywgd2hpbGUgZ2VuMTEgaGFzIGEgc2V0IGZvciBlYWNoIGNvbWJvIFBIWS4KKyAqIFRoZSBD
TkwgcmVnaXN0ZXJzIGFyZSBlcXVpdmFsZW50IHRvIHRoZSBnZW4xMSBQSFkgQSByZWdpc3RlcnMs
IHRoYXQncyB3aHkgd2UKKyAqIGNhbGwgdGhlIElDTCBtYWNyb3MgZXZlbiB0aG91Z2ggdGhlIGZ1
bmN0aW9uIGhhcyBDTkwgb24gaXRzIG5hbWUuCiAgKi8KIHN0YXRpYyBjb25zdCBzdHJ1Y3QgY25s
X3Byb2Ntb24gKgotY25sX2dldF9wcm9jbW9uX3JlZl92YWx1ZXMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKK2NubF9nZXRfcHJvY21vbl9yZWZfdmFs
dWVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkgcGh5KQogewog
CWNvbnN0IHN0cnVjdCBjbmxfcHJvY21vbiAqcHJvY21vbjsKIAl1MzIgdmFsOwogCi0JdmFsID0g
STkxNV9SRUFEKElDTF9QT1JUX0NPTVBfRFczKHBvcnQpKTsKKwl2YWwgPSBJOTE1X1JFQUQoSUNM
X1BPUlRfQ09NUF9EVzMocGh5KSk7CiAJc3dpdGNoICh2YWwgJiAoUFJPQ0VTU19JTkZPX01BU0sg
fCBWT0xUQUdFX0lORk9fTUFTSykpIHsKIAlkZWZhdWx0OgogCQlNSVNTSU5HX0NBU0UodmFsKTsK
QEAgLTc1LDMyICs3NCwzMiBAQCBjbmxfZ2V0X3Byb2Ntb25fcmVmX3ZhbHVlcyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogfQogCiBzdGF0aWMgdm9p
ZCBjbmxfc2V0X3Byb2Ntb25fcmVmX3ZhbHVlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCi0JCQkJICAgICAgIGVudW0gcG9ydCBwb3J0KQorCQkJCSAgICAgICBlbnVtIHBoeSBw
aHkpCiB7CiAJY29uc3Qgc3RydWN0IGNubF9wcm9jbW9uICpwcm9jbW9uOwogCXUzMiB2YWw7CiAK
LQlwcm9jbW9uID0gY25sX2dldF9wcm9jbW9uX3JlZl92YWx1ZXMoZGV2X3ByaXYsIHBvcnQpOwor
CXByb2Ntb24gPSBjbmxfZ2V0X3Byb2Ntb25fcmVmX3ZhbHVlcyhkZXZfcHJpdiwgcGh5KTsKIAot
CXZhbCA9IEk5MTVfUkVBRChJQ0xfUE9SVF9DT01QX0RXMShwb3J0KSk7CisJdmFsID0gSTkxNV9S
RUFEKElDTF9QT1JUX0NPTVBfRFcxKHBoeSkpOwogCXZhbCAmPSB+KCgweGZmIDw8IDE2KSB8IDB4
ZmYpOwogCXZhbCB8PSBwcm9jbW9uLT5kdzE7Ci0JSTkxNV9XUklURShJQ0xfUE9SVF9DT01QX0RX
MShwb3J0KSwgdmFsKTsKKwlJOTE1X1dSSVRFKElDTF9QT1JUX0NPTVBfRFcxKHBoeSksIHZhbCk7
CiAKLQlJOTE1X1dSSVRFKElDTF9QT1JUX0NPTVBfRFc5KHBvcnQpLCBwcm9jbW9uLT5kdzkpOwot
CUk5MTVfV1JJVEUoSUNMX1BPUlRfQ09NUF9EVzEwKHBvcnQpLCBwcm9jbW9uLT5kdzEwKTsKKwlJ
OTE1X1dSSVRFKElDTF9QT1JUX0NPTVBfRFc5KHBoeSksIHByb2Ntb24tPmR3OSk7CisJSTkxNV9X
UklURShJQ0xfUE9SVF9DT01QX0RXMTAocGh5KSwgcHJvY21vbi0+ZHcxMCk7CiB9CiAKIHN0YXRp
YyBib29sIGNoZWNrX3BoeV9yZWcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAot
CQkJICBlbnVtIHBvcnQgcG9ydCwgaTkxNV9yZWdfdCByZWcsIHUzMiBtYXNrLAorCQkJICBlbnVt
IHBoeSBwaHksIGk5MTVfcmVnX3QgcmVnLCB1MzIgbWFzaywKIAkJCSAgdTMyIGV4cGVjdGVkX3Zh
bCkKIHsKIAl1MzIgdmFsID0gSTkxNV9SRUFEKHJlZyk7CiAKIAlpZiAoKHZhbCAmIG1hc2spICE9
IGV4cGVjdGVkX3ZhbCkgewotCQlEUk1fREVCVUdfRFJJVkVSKCJQb3J0ICVjIGNvbWJvIFBIWSBy
ZWcgJTA4eCBzdGF0ZSBtaXNtYXRjaDogIgorCQlEUk1fREVCVUdfRFJJVkVSKCJDb21ibyBQSFkg
JWMgcmVnICUwOHggc3RhdGUgbWlzbWF0Y2g6ICIKIAkJCQkgImN1cnJlbnQgJTA4eCBtYXNrICUw
OHggZXhwZWN0ZWQgJTA4eFxuIiwKLQkJCQkgcG9ydF9uYW1lKHBvcnQpLAorCQkJCSBwaHlfbmFt
ZShwaHkpLAogCQkJCSByZWcucmVnLCB2YWwsIG1hc2ssIGV4cGVjdGVkX3ZhbCk7CiAJCXJldHVy
biBmYWxzZTsKIAl9CkBAIC0xMDksMTggKzEwOCwxOCBAQCBzdGF0aWMgYm9vbCBjaGVja19waHlf
cmVnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIH0KIAogc3RhdGljIGJvb2wg
Y25sX3ZlcmlmeV9wcm9jbW9uX3JlZl92YWx1ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LAotCQkJCQkgIGVudW0gcG9ydCBwb3J0KQorCQkJCQkgIGVudW0gcGh5IHBoeSkKIHsK
IAljb25zdCBzdHJ1Y3QgY25sX3Byb2Ntb24gKnByb2Ntb247CiAJYm9vbCByZXQ7CiAKLQlwcm9j
bW9uID0gY25sX2dldF9wcm9jbW9uX3JlZl92YWx1ZXMoZGV2X3ByaXYsIHBvcnQpOworCXByb2Nt
b24gPSBjbmxfZ2V0X3Byb2Ntb25fcmVmX3ZhbHVlcyhkZXZfcHJpdiwgcGh5KTsKIAotCXJldCA9
IGNoZWNrX3BoeV9yZWcoZGV2X3ByaXYsIHBvcnQsIElDTF9QT1JUX0NPTVBfRFcxKHBvcnQpLAor
CXJldCA9IGNoZWNrX3BoeV9yZWcoZGV2X3ByaXYsIHBoeSwgSUNMX1BPUlRfQ09NUF9EVzEocGh5
KSwKIAkJCSAgICAoMHhmZiA8PCAxNikgfCAweGZmLCBwcm9jbW9uLT5kdzEpOwotCXJldCAmPSBj
aGVja19waHlfcmVnKGRldl9wcml2LCBwb3J0LCBJQ0xfUE9SVF9DT01QX0RXOShwb3J0KSwKKwly
ZXQgJj0gY2hlY2tfcGh5X3JlZyhkZXZfcHJpdiwgcGh5LCBJQ0xfUE9SVF9DT01QX0RXOShwaHkp
LAogCQkJICAgICAtMVUsIHByb2Ntb24tPmR3OSk7Ci0JcmV0ICY9IGNoZWNrX3BoeV9yZWcoZGV2
X3ByaXYsIHBvcnQsIElDTF9QT1JUX0NPTVBfRFcxMChwb3J0KSwKKwlyZXQgJj0gY2hlY2tfcGh5
X3JlZyhkZXZfcHJpdiwgcGh5LCBJQ0xfUE9SVF9DT01QX0RXMTAocGh5KSwKIAkJCSAgICAgLTFV
LCBwcm9jbW9uLT5kdzEwKTsKIAogCXJldHVybiByZXQ7CkBAIC0xMzQsMTUgKzEzMywxNSBAQCBz
dGF0aWMgYm9vbCBjbmxfY29tYm9fcGh5X2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCiBzdGF0aWMgYm9vbCBjbmxfY29tYm9fcGh5X3ZlcmlmeV9zdGF0ZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JZW51bSBwb3J0IHBvcnQgPSBQT1JU
X0E7CisJZW51bSBwaHkgcGh5ID0gUEhZX0E7CiAJYm9vbCByZXQ7CiAKIAlpZiAoIWNubF9jb21i
b19waHlfZW5hYmxlZChkZXZfcHJpdikpCiAJCXJldHVybiBmYWxzZTsKIAotCXJldCA9IGNubF92
ZXJpZnlfcHJvY21vbl9yZWZfdmFsdWVzKGRldl9wcml2LCBwb3J0KTsKKwlyZXQgPSBjbmxfdmVy
aWZ5X3Byb2Ntb25fcmVmX3ZhbHVlcyhkZXZfcHJpdiwgcGh5KTsKIAotCXJldCAmPSBjaGVja19w
aHlfcmVnKGRldl9wcml2LCBwb3J0LCBDTkxfUE9SVF9DTDFDTV9EVzUsCisJcmV0ICY9IGNoZWNr
X3BoeV9yZWcoZGV2X3ByaXYsIHBoeSwgQ05MX1BPUlRfQ0wxQ01fRFc1LAogCQkJICAgICBDTF9Q
T1dFUl9ET1dOX0VOQUJMRSwgQ0xfUE9XRVJfRE9XTl9FTkFCTEUpOwogCiAJcmV0dXJuIHJldDsK
QEAgLTE1Nyw3ICsxNTYsNyBAQCBzdGF0aWMgdm9pZCBjbmxfY29tYm9fcGh5c19pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlJOTE1X1dSSVRFKENISUNLRU5fTUlTQ18y
LCB2YWwpOwogCiAJLyogRHVtbXkgUE9SVF9BIHRvIGdldCB0aGUgY29ycmVjdCBDTkwgcmVnaXN0
ZXIgZnJvbSB0aGUgSUNMIG1hY3JvICovCi0JY25sX3NldF9wcm9jbW9uX3JlZl92YWx1ZXMoZGV2
X3ByaXYsIFBPUlRfQSk7CisJY25sX3NldF9wcm9jbW9uX3JlZl92YWx1ZXMoZGV2X3ByaXYsIFBI
WV9BKTsKIAogCXZhbCA9IEk5MTVfUkVBRChDTkxfUE9SVF9DT01QX0RXMCk7CiAJdmFsIHw9IENP
TVBfSU5JVDsKQEAgLTE4MSwzOSArMTgwLDM5IEBAIHN0YXRpYyB2b2lkIGNubF9jb21ib19waHlz
X3VuaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB9CiAKIHN0YXRpYyBi
b29sIGljbF9jb21ib19waHlfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCi0JCQkJICBlbnVtIHBvcnQgcG9ydCkKKwkJCQkgIGVudW0gcGh5IHBoeSkKIHsKIAkvKiBU
aGUgUEhZIEMgYWRkZWQgYnkgRUhMIGhhcyBubyBQSFlfTUlTQyByZWdpc3RlciAqLwotCWlmIChJ
U19FTEtIQVJUTEFLRShkZXZfcHJpdikgJiYgcG9ydCA9PSBQT1JUX0MpCi0JCXJldHVybiBJOTE1
X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzAocG9ydCkpICYgQ09NUF9JTklUOworCWlmIChJU19FTEtI
QVJUTEFLRShkZXZfcHJpdikgJiYgcGh5ID09IFBIWV9DKQorCQlyZXR1cm4gSTkxNV9SRUFEKElD
TF9QT1JUX0NPTVBfRFcwKHBoeSkpICYgQ09NUF9JTklUOwogCWVsc2UKLQkJcmV0dXJuICEoSTkx
NV9SRUFEKElDTF9QSFlfTUlTQyhwb3J0KSkgJgorCQlyZXR1cm4gIShJOTE1X1JFQUQoSUNMX1BI
WV9NSVNDKHBoeSkpICYKIAkJCSBJQ0xfUEhZX01JU0NfREVfSU9fQ09NUF9QV1JfRE9XTikgJiYK
LQkJCShJOTE1X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzAocG9ydCkpICYgQ09NUF9JTklUKTsKKwkJ
CShJOTE1X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzAocGh5KSkgJiBDT01QX0lOSVQpOwogfQogCiBz
dGF0aWMgYm9vbCBpY2xfY29tYm9fcGh5X3ZlcmlmeV9zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCi0JCQkJICAgICAgIGVudW0gcG9ydCBwb3J0KQorCQkJCSAgICAgICBl
bnVtIHBoeSBwaHkpCiB7CiAJYm9vbCByZXQ7CiAKLQlpZiAoIWljbF9jb21ib19waHlfZW5hYmxl
ZChkZXZfcHJpdiwgcG9ydCkpCisJaWYgKCFpY2xfY29tYm9fcGh5X2VuYWJsZWQoZGV2X3ByaXYs
IHBoeSkpCiAJCXJldHVybiBmYWxzZTsKIAotCXJldCA9IGNubF92ZXJpZnlfcHJvY21vbl9yZWZf
dmFsdWVzKGRldl9wcml2LCBwb3J0KTsKKwlyZXQgPSBjbmxfdmVyaWZ5X3Byb2Ntb25fcmVmX3Zh
bHVlcyhkZXZfcHJpdiwgcGh5KTsKIAotCWlmIChwb3J0ID09IFBPUlRfQSkKLQkJcmV0ICY9IGNo
ZWNrX3BoeV9yZWcoZGV2X3ByaXYsIHBvcnQsIElDTF9QT1JUX0NPTVBfRFc4KHBvcnQpLAorCWlm
IChwaHkgPT0gUEhZX0EpCisJCXJldCAmPSBjaGVja19waHlfcmVnKGRldl9wcml2LCBwaHksIElD
TF9QT1JUX0NPTVBfRFc4KHBoeSksCiAJCQkJICAgICBJUkVGR0VOLCBJUkVGR0VOKTsKIAotCXJl
dCAmPSBjaGVja19waHlfcmVnKGRldl9wcml2LCBwb3J0LCBJQ0xfUE9SVF9DTF9EVzUocG9ydCks
CisJcmV0ICY9IGNoZWNrX3BoeV9yZWcoZGV2X3ByaXYsIHBoeSwgSUNMX1BPUlRfQ0xfRFc1KHBo
eSksCiAJCQkgICAgIENMX1BPV0VSX0RPV05fRU5BQkxFLCBDTF9QT1dFUl9ET1dOX0VOQUJMRSk7
CiAKIAlyZXR1cm4gcmV0OwogfQogCiB2b2lkIGludGVsX2NvbWJvX3BoeV9wb3dlcl91cF9sYW5l
cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkJICAgIGVudW0gcG9ydCBw
b3J0LCBib29sIGlzX2RzaSwKKwkJCQkgICAgZW51bSBwaHkgcGh5LCBib29sIGlzX2RzaSwKIAkJ
CQkgICAgaW50IGxhbmVfY291bnQsIGJvb2wgbGFuZV9yZXZlcnNhbCkKIHsKIAl1OCBsYW5lX21h
c2s7CkBAIC0yNTgsMTAgKzI1NywxMCBAQCB2b2lkIGludGVsX2NvbWJvX3BoeV9wb3dlcl91cF9s
YW5lcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCX0KIAl9CiAKLQl2YWwg
PSBJOTE1X1JFQUQoSUNMX1BPUlRfQ0xfRFcxMChwb3J0KSk7CisJdmFsID0gSTkxNV9SRUFEKElD
TF9QT1JUX0NMX0RXMTAocGh5KSk7CiAJdmFsICY9IH5QV1JfRE9XTl9MTl9NQVNLOwogCXZhbCB8
PSBsYW5lX21hc2sgPDwgUFdSX0RPV05fTE5fU0hJRlQ7Ci0JSTkxNV9XUklURShJQ0xfUE9SVF9D
TF9EVzEwKHBvcnQpLCB2YWwpOworCUk5MTVfV1JJVEUoSUNMX1BPUlRfQ0xfRFcxMChwaHkpLCB2
YWwpOwogfQogCiBzdGF0aWMgdTMyIGVobF9jb21ib19waHlfYV9tdXgoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsIHUzMiB2YWwpCkBAIC0yOTIsMTQgKzI5MSwxNCBAQCBzdGF0aWMgdTMy
IGVobF9jb21ib19waHlfYV9tdXgoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHUzMiB2
YWwpCiAKIHN0YXRpYyB2b2lkIGljbF9jb21ib19waHlzX2luaXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogewotCWVudW0gcG9ydCBwb3J0OworCWVudW0gcGh5IHBoeTsKIAot
CWZvcl9lYWNoX2NvbWJvX3BvcnQoZGV2X3ByaXYsIHBvcnQpIHsKKwlmb3JfZWFjaF9jb21ib19w
aHkoZGV2X3ByaXYsIHBoeSkgewogCQl1MzIgdmFsOwogCi0JCWlmIChpY2xfY29tYm9fcGh5X3Zl
cmlmeV9zdGF0ZShkZXZfcHJpdiwgcG9ydCkpIHsKLQkJCURSTV9ERUJVR19EUklWRVIoIlBvcnQg
JWMgY29tYm8gUEhZIGFscmVhZHkgZW5hYmxlZCwgd29uJ3QgcmVwcm9ncmFtIGl0LlxuIiwKLQkJ
CQkJIHBvcnRfbmFtZShwb3J0KSk7CisJCWlmIChpY2xfY29tYm9fcGh5X3ZlcmlmeV9zdGF0ZShk
ZXZfcHJpdiwgcGh5KSkgeworCQkJRFJNX0RFQlVHX0RSSVZFUigiQ29tYm8gUEhZICVjIGFscmVh
ZHkgZW5hYmxlZCwgd29uJ3QgcmVwcm9ncmFtIGl0LlxuIiwKKwkJCQkJIHBoeV9uYW1lKHBoeSkp
OwogCQkJY29udGludWU7CiAJCX0KIApAQCAtMzA4LDcgKzMwNyw3IEBAIHN0YXRpYyB2b2lkIGlj
bF9jb21ib19waHlzX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkg
KiByZWdpc3RlciBmb3IgaXQgYW5kIG5vIG5lZWQgdG8gcHJvZ3JhbSB0aGUKIAkJICogREVfSU9f
Q09NUF9QV1JfRE9XTiBzZXR0aW5nIG9uIFBIWSBDLgogCQkgKi8KLQkJaWYgKElTX0VMS0hBUlRM
QUtFKGRldl9wcml2KSAmJiBwb3J0ID09IFBPUlRfQykKKwkJaWYgKElTX0VMS0hBUlRMQUtFKGRl
dl9wcml2KSAmJiBwaHkgPT0gUEhZX0MpCiAJCQlnb3RvIHNraXBfcGh5X21pc2M7CiAKIAkJLyoK
QEAgLTMxOSw1OSArMzE4LDU5IEBAIHN0YXRpYyB2b2lkIGljbF9jb21ib19waHlzX2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkgKiBiYXNlZCBvbiB3aGV0aGVyIG91
ciBWQlQgaW5kaWNhdGVzIHRoZSBwcmVzZW5jZSBvZiBhbnkKIAkJICogImludGVybmFsIiBjaGls
ZCBkZXZpY2VzLgogCQkgKi8KLQkJdmFsID0gSTkxNV9SRUFEKElDTF9QSFlfTUlTQyhwb3J0KSk7
Ci0JCWlmIChJU19FTEtIQVJUTEFLRShkZXZfcHJpdikgJiYgcG9ydCA9PSBQT1JUX0EpCisJCXZh
bCA9IEk5MTVfUkVBRChJQ0xfUEhZX01JU0MocGh5KSk7CisJCWlmIChJU19FTEtIQVJUTEFLRShk
ZXZfcHJpdikgJiYgcGh5ID09IFBIWV9BKQogCQkJdmFsID0gZWhsX2NvbWJvX3BoeV9hX211eChk
ZXZfcHJpdiwgdmFsKTsKIAkJdmFsICY9IH5JQ0xfUEhZX01JU0NfREVfSU9fQ09NUF9QV1JfRE9X
TjsKLQkJSTkxNV9XUklURShJQ0xfUEhZX01JU0MocG9ydCksIHZhbCk7CisJCUk5MTVfV1JJVEUo
SUNMX1BIWV9NSVNDKHBoeSksIHZhbCk7CiAKIHNraXBfcGh5X21pc2M6Ci0JCWNubF9zZXRfcHJv
Y21vbl9yZWZfdmFsdWVzKGRldl9wcml2LCBwb3J0KTsKKwkJY25sX3NldF9wcm9jbW9uX3JlZl92
YWx1ZXMoZGV2X3ByaXYsIHBoeSk7CiAKLQkJaWYgKHBvcnQgPT0gUE9SVF9BKSB7Ci0JCQl2YWwg
PSBJOTE1X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzgocG9ydCkpOworCQlpZiAocGh5ID09IFBIWV9B
KSB7CisJCQl2YWwgPSBJOTE1X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzgocGh5KSk7CiAJCQl2YWwg
fD0gSVJFRkdFTjsKLQkJCUk5MTVfV1JJVEUoSUNMX1BPUlRfQ09NUF9EVzgocG9ydCksIHZhbCk7
CisJCQlJOTE1X1dSSVRFKElDTF9QT1JUX0NPTVBfRFc4KHBoeSksIHZhbCk7CiAJCX0KIAotCQl2
YWwgPSBJOTE1X1JFQUQoSUNMX1BPUlRfQ09NUF9EVzAocG9ydCkpOworCQl2YWwgPSBJOTE1X1JF
QUQoSUNMX1BPUlRfQ09NUF9EVzAocGh5KSk7CiAJCXZhbCB8PSBDT01QX0lOSVQ7Ci0JCUk5MTVf
V1JJVEUoSUNMX1BPUlRfQ09NUF9EVzAocG9ydCksIHZhbCk7CisJCUk5MTVfV1JJVEUoSUNMX1BP
UlRfQ09NUF9EVzAocGh5KSwgdmFsKTsKIAotCQl2YWwgPSBJOTE1X1JFQUQoSUNMX1BPUlRfQ0xf
RFc1KHBvcnQpKTsKKwkJdmFsID0gSTkxNV9SRUFEKElDTF9QT1JUX0NMX0RXNShwaHkpKTsKIAkJ
dmFsIHw9IENMX1BPV0VSX0RPV05fRU5BQkxFOwotCQlJOTE1X1dSSVRFKElDTF9QT1JUX0NMX0RX
NShwb3J0KSwgdmFsKTsKKwkJSTkxNV9XUklURShJQ0xfUE9SVF9DTF9EVzUocGh5KSwgdmFsKTsK
IAl9CiB9CiAKIHN0YXRpYyB2b2lkIGljbF9jb21ib19waHlzX3VuaW5pdChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5
OwogCi0JZm9yX2VhY2hfY29tYm9fcG9ydF9yZXZlcnNlKGRldl9wcml2LCBwb3J0KSB7CisJZm9y
X2VhY2hfY29tYm9fcGh5X3JldmVyc2UoZGV2X3ByaXYsIHBoeSkgewogCQl1MzIgdmFsOwogCi0J
CWlmIChwb3J0ID09IFBPUlRfQSAmJgotCQkgICAgIWljbF9jb21ib19waHlfdmVyaWZ5X3N0YXRl
KGRldl9wcml2LCBwb3J0KSkKLQkJCURSTV9XQVJOKCJQb3J0ICVjIGNvbWJvIFBIWSBIVyBzdGF0
ZSBjaGFuZ2VkIHVuZXhwZWN0ZWRseVxuIiwKLQkJCQkgcG9ydF9uYW1lKHBvcnQpKTsKKwkJaWYg
KHBoeSA9PSBQSFlfQSAmJgorCQkgICAgIWljbF9jb21ib19waHlfdmVyaWZ5X3N0YXRlKGRldl9w
cml2LCBwaHkpKQorCQkJRFJNX1dBUk4oIkNvbWJvIFBIWSAlYyBIVyBzdGF0ZSBjaGFuZ2VkIHVu
ZXhwZWN0ZWRseVxuIiwKKwkJCQkgcGh5X25hbWUocGh5KSk7CiAKIAkJLyoKIAkJICogQWx0aG91
Z2ggRUhMIGFkZHMgYSBjb21ibyBQSFkgQywgdGhlcmUncyBubyBQSFlfTUlTQwogCQkgKiByZWdp
c3RlciBmb3IgaXQgYW5kIG5vIG5lZWQgdG8gcHJvZ3JhbSB0aGUKIAkJICogREVfSU9fQ09NUF9Q
V1JfRE9XTiBzZXR0aW5nIG9uIFBIWSBDLgogCQkgKi8KLQkJaWYgKElTX0VMS0hBUlRMQUtFKGRl
dl9wcml2KSAmJiBwb3J0ID09IFBPUlRfQykKKwkJaWYgKElTX0VMS0hBUlRMQUtFKGRldl9wcml2
KSAmJiBwaHkgPT0gUEhZX0MpCiAJCQlnb3RvIHNraXBfcGh5X21pc2M7CiAKLQkJdmFsID0gSTkx
NV9SRUFEKElDTF9QSFlfTUlTQyhwb3J0KSk7CisJCXZhbCA9IEk5MTVfUkVBRChJQ0xfUEhZX01J
U0MocGh5KSk7CiAJCXZhbCB8PSBJQ0xfUEhZX01JU0NfREVfSU9fQ09NUF9QV1JfRE9XTjsKLQkJ
STkxNV9XUklURShJQ0xfUEhZX01JU0MocG9ydCksIHZhbCk7CisJCUk5MTVfV1JJVEUoSUNMX1BI
WV9NSVNDKHBoeSksIHZhbCk7CiAKIHNraXBfcGh5X21pc2M6Ci0JCXZhbCA9IEk5MTVfUkVBRChJ
Q0xfUE9SVF9DT01QX0RXMChwb3J0KSk7CisJCXZhbCA9IEk5MTVfUkVBRChJQ0xfUE9SVF9DT01Q
X0RXMChwaHkpKTsKIAkJdmFsICY9IH5DT01QX0lOSVQ7Ci0JCUk5MTVfV1JJVEUoSUNMX1BPUlRf
Q09NUF9EVzAocG9ydCksIHZhbCk7CisJCUk5MTVfV1JJVEUoSUNMX1BPUlRfQ09NUF9EVzAocGh5
KSwgdmFsKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfY29tYm9fcGh5LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2NvbWJvX3BoeS5oCmluZGV4IGU2ZTE5NWE4M2IxOS4uODBhMTM4NmI0Yzg3IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NvbWJvX3BoeS5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY29tYm9fcGh5LmgKQEAgLTEwLDExICsx
MCwxMiBAQAogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCiBzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZTsKK2VudW0gcGh5OwogCiB2b2lkIGludGVsX2NvbWJvX3BoeV9pbml0KHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGludGVsX2NvbWJvX3BoeV91bmluaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfY29tYm9fcGh5X3Bv
d2VyX3VwX2xhbmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkgICAg
ZW51bSBwb3J0IHBvcnQsIGJvb2wgaXNfZHNpLAorCQkJCSAgICBlbnVtIHBoeSBwaHksIGJvb2wg
aXNfZHNpLAogCQkJCSAgICBpbnQgbGFuZV9jb3VudCwgYm9vbCBsYW5lX3JldmVyc2FsKTsKIAog
I2VuZGlmIC8qIF9fSU5URUxfQ09NQk9fUEhZX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggNTkzODA2ZDQ0YWQ0Li5lYTU2ZmI2ZDYzMmQgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtODY3LDExICs4NjcsMTIg
QEAgaWNsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCiBzdGF0aWMgaW50IGludGVsX2RkaV9oZG1pX2xldmVs
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7CiAJ
aW50IG5fZW50cmllcywgbGV2ZWwsIGRlZmF1bHRfZW50cnk7CisJZW51bSBwaHkgcGh5ID0gaW50
ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCiAJbGV2ZWwgPSBkZXZfcHJpdi0+dmJ0
LmRkaV9wb3J0X2luZm9bcG9ydF0uaGRtaV9sZXZlbF9zaGlmdDsKIAogCWlmIChJTlRFTF9HRU4o
ZGV2X3ByaXYpID49IDExKSB7Ci0JCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2
LCBwb3J0KSkKKwkJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkKIAkJCWlj
bF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2LCBJTlRFTF9PVVRQVVRfSERNSSwKIAkJCQkJ
CTAsICZuX2VudHJpZXMpOwogCQllbHNlCkBAIC0xNDg2LDkgKzE0ODcsMTAgQEAgc3RhdGljIHZv
aWQgaWNsX2RkaV9jbG9ja19nZXQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRl
dik7CiAJc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwaXBlX2NvbmZp
Zy0+ZHBsbF9od19zdGF0ZTsKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51
bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCWludCBsaW5r
X2Nsb2NrOwogCi0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7
CisJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgewogCQlsaW5rX2Nsb2Nr
ID0gY25sX2NhbGNfd3JwbGxfbGluayhkZXZfcHJpdiwgcGxsX3N0YXRlKTsKIAl9IGVsc2Ugewog
CQllbnVtIGludGVsX2RwbGxfaWQgcGxsX2lkID0gaW50ZWxfZ2V0X3NoYXJlZF9kcGxsX2lkKGRl
dl9wcml2LApAQCAtMjA4NSw2ICsyMDg3LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dldF9w
b3dlcl9kb21haW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwog
CXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0OworCWVudW0gcGh5IHBoeSA9IGlu
dGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAogCS8qCiAJICogVE9E
TzogQWRkIHN1cHBvcnQgZm9yIE1TVCBlbmNvZGVycy4gQXRtLCB0aGUgZm9sbG93aW5nIHNob3Vs
ZCBuZXZlcgpAQCAtMjEwMiw3ICsyMTA1LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dldF9w
b3dlcl9kb21haW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqIHBvcnRzLgog
CSAqLwogCWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKGNydGNfc3RhdGUpIHx8Ci0JICAg
IGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCSAgICBpbnRlbF9w
aHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRldl9w
cml2LAogCQkJCQlpbnRlbF9kZGlfbWFpbl9saW5rX2F1eF9kb21haW4oZGlnX3BvcnQpKTsKIApA
QCAtMjIyNywxMCArMjIzMCwxMSBAQCB1OCBpbnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCA9IGVuY190b19pbnRlbF9kcCgmZW5jb2Rlci0+YmFzZSk7CiAJZW51bSBwb3J0IHBvcnQg
PSBlbmNvZGVyLT5wb3J0OworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9w
cml2LCBwb3J0KTsKIAlpbnQgbl9lbnRyaWVzOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
Pj0gMTEpIHsKLQkJaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKQor
CQlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQogCQkJaWNsX2dldF9jb21i
b19idWZfdHJhbnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCiAJCQkJCQlpbnRlbF9kcC0+bGlu
a19yYXRlLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQpAQCAtMjY2Myw5ICsyNjY3LDkgQEAgc3RhdGlj
IHZvaWQgaWNsX2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCiAJCQkJICAgIGVudW0gaW50ZWxfb3V0cHV0X3R5cGUgdHlwZSkKIHsKIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKLQll
bnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9y
dF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCi0JaWYgKGludGVsX3BvcnRfaXNf
Y29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKQorCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3By
aXYsIHBoeSkpCiAJCWljbF9jb21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBs
ZXZlbCwgdHlwZSk7CiAJZWxzZQogCQlpY2xfbWdfcGh5X2RkaV92c3dpbmdfc2VxdWVuY2UoZW5j
b2RlciwgbGlua19jbG9jaywgbGV2ZWwpOwpAQCAtMjcyOCwxMiArMjczMiwxMyBAQCB1MzIgZGRp
X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogc3RhdGljIGlubGlu
ZQogdTMyIGljbF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAotCQkJICAgICAgZW51bSBwb3J0IHBvcnQpCisJCQkgICAgICBlbnVtIHBoeSBw
aHkpCiB7Ci0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7Ci0J
CXJldHVybiBJQ0xfRFBDTEtBX0NGR0NSMF9ERElfQ0xLX09GRihwb3J0KTsKLQl9IGVsc2UgaWYg
KGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKSB7Ci0JCWVudW0gdGNfcG9ydCB0Y19w
b3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgcG9ydCk7CisJaWYgKGludGVsX3BoeV9p
c19jb21ibyhkZXZfcHJpdiwgcGh5KSkgeworCQlyZXR1cm4gSUNMX0RQQ0xLQV9DRkdDUjBfRERJ
X0NMS19PRkYocGh5KTsKKwl9IGVsc2UgaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5
KSkgeworCQllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYs
CisJCQkJCQkJKGVudW0gcG9ydClwaHkpOwogCiAJCXJldHVybiBJQ0xfRFBDTEtBX0NGR0NSMF9U
Q19DTEtfT0ZGKHRjX3BvcnQpOwogCX0KQEAgLTI3NDYsMjIgKzI3NTEsMzIgQEAgc3RhdGljIHZv
aWQgaWNsX21hcF9wbGxzX3RvX3BvcnRzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAog
ewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+
YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsID0gY3J0Y19zdGF0ZS0+
c2hhcmVkX2RwbGw7Ci0JZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0OworCWVudW0gcGh5
IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAl1MzIg
dmFsOwogCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPmRwbGxfbG9jayk7CiAKIAl2YWwgPSBJOTE1
X1JFQUQoRFBDTEtBX0NGR0NSMF9JQ0wpOwotCVdBUk5fT04oKHZhbCAmIGljbF9kcGNsa2FfY2Zn
Y3IwX2Nsa19vZmYoZGV2X3ByaXYsIHBvcnQpKSA9PSAwKTsKKwlXQVJOX09OKCh2YWwgJiBpY2xf
ZHBjbGthX2NmZ2NyMF9jbGtfb2ZmKGRldl9wcml2LCBwaHkpKSA9PSAwKTsKIAotCWlmIChpbnRl
bF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2LCBwb3J0KSkgewotCQl2YWwgJj0gfkRQQ0xLQV9D
RkdDUjBfRERJX0NMS19TRUxfTUFTSyhwb3J0KTsKLQkJdmFsIHw9IERQQ0xLQV9DRkdDUjBfRERJ
X0NMS19TRUwocGxsLT5pbmZvLT5pZCwgcG9ydCk7CisJaWYgKGludGVsX3BoeV9pc19jb21ibyhk
ZXZfcHJpdiwgcGh5KSkgeworCQkvKgorCQkgKiBFdmVuIHRob3VnaCB0aGlzIHJlZ2lzdGVyIHJl
ZmVyZW5jZXMgRERJcywgbm90ZSB0aGF0IHdlCisJCSAqIHdhbnQgdG8gcGFzcyB0aGUgUEhZIHJh
dGhlciB0aGFuIHRoZSBwb3J0IChEREkpLiAgRm9yCisJCSAqIElDTCwgcG9ydD1waHkgaW4gYWxs
IGNhc2VzIHNvIGl0IGRvZXNuJ3QgbWF0dGVyLCBidXQgZm9yCisJCSAqIEVITCB0aGUgYnNwZWMg
bm90ZXMgdGhlIGZvbGxvd2luZzoKKwkJICoKKwkJICogICAiRERJRCBjbG9jayB0aWVkIHRvIERE
SUEgY2xvY2ssIHNvIERQQ0xLQV9DRkdDUjAgRERJQQorCQkgKiAgIENsb2NrIFNlbGVjdCBjaG9v
c2VzIHRoZSBQTEwgZm9yIGJvdGggRERJQSBhbmQgRERJRCBhbmQKKwkJICogICBkcml2ZXMgcG9y
dCBBIGluIGFsbCBjYXNlcy4iCisJCSAqLworCQl2YWwgJj0gfklDTF9EUENMS0FfQ0ZHQ1IwX0RE
SV9DTEtfU0VMX01BU0socGh5KTsKKwkJdmFsIHw9IElDTF9EUENMS0FfQ0ZHQ1IwX0RESV9DTEtf
U0VMKHBsbC0+aW5mby0+aWQsIHBoeSk7CiAJCUk5MTVfV1JJVEUoRFBDTEtBX0NGR0NSMF9JQ0ws
IHZhbCk7CiAJCVBPU1RJTkdfUkVBRChEUENMS0FfQ0ZHQ1IwX0lDTCk7CiAJfQogCi0JdmFsICY9
IH5pY2xfZHBjbGthX2NmZ2NyMF9jbGtfb2ZmKGRldl9wcml2LCBwb3J0KTsKKwl2YWwgJj0gfmlj
bF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoZGV2X3ByaXYsIHBoeSk7CiAJSTkxNV9XUklURShEUENM
S0FfQ0ZHQ1IwX0lDTCwgdmFsKTsKIAogCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRwbGxfbG9j
ayk7CkBAIC0yNzcwLDEzICsyNzg1LDEzIEBAIHN0YXRpYyB2b2lkIGljbF9tYXBfcGxsc190b19w
b3J0cyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHN0YXRpYyB2b2lkIGljbF91bm1h
cF9wbGxzX3RvX3BvcnRzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYp
OwotCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBwaHkgPSBpbnRl
bF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAJdTMyIHZhbDsKIAogCW11
dGV4X2xvY2soJmRldl9wcml2LT5kcGxsX2xvY2spOwogCiAJdmFsID0gSTkxNV9SRUFEKERQQ0xL
QV9DRkdDUjBfSUNMKTsKLQl2YWwgfD0gaWNsX2RwY2xrYV9jZmdjcjBfY2xrX29mZihkZXZfcHJp
diwgcG9ydCk7CisJdmFsIHw9IGljbF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoZGV2X3ByaXYsIHBo
eSk7CiAJSTkxNV9XUklURShEUENMS0FfQ0ZHQ1IwX0lDTCwgdmFsKTsKIAogCW11dGV4X3VubG9j
aygmZGV2X3ByaXYtPmRwbGxfbG9jayk7CkBAIC0yODM3LDkgKzI4NTIsMTEgQEAgdm9pZCBpY2xf
c2FuaXRpemVfZW5jb2Rlcl9wbGxfbWFwcGluZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
cikKIAogCXZhbCA9IEk5MTVfUkVBRChEUENMS0FfQ0ZHQ1IwX0lDTCk7CiAJZm9yX2VhY2hfcG9y
dF9tYXNrZWQocG9ydCwgcG9ydF9tYXNrKSB7CisJCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRf
dG9fcGh5KGRldl9wcml2LCBwb3J0KTsKKwogCQlib29sIGRkaV9jbGtfdW5nYXRlZCA9ICEodmFs
ICYKIAkJCQkJIGljbF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoZGV2X3ByaXYsCi0JCQkJCQkJCSAg
IHBvcnQpKTsKKwkJCQkJCQkJICAgcGh5KSk7CiAKIAkJaWYgKGRkaV9jbGtfbmVlZGVkID09IGRk
aV9jbGtfdW5nYXRlZCkKIAkJCWNvbnRpbnVlOwpAQCAtMjg1MSw5ICsyODY4LDkgQEAgdm9pZCBp
Y2xfc2FuaXRpemVfZW5jb2Rlcl9wbGxfbWFwcGluZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlcikKIAkJaWYgKFdBUk5fT04oZGRpX2Nsa19uZWVkZWQpKQogCQkJY29udGludWU7CiAKLQkJ
RFJNX05PVEUoIlBvcnQgJWMgaXMgZGlzYWJsZWQvaW4gRFNJIG1vZGUgd2l0aCBhbiB1bmdhdGVk
IERESSBjbG9jaywgZ2F0ZSBpdFxuIiwKLQkJCSBwb3J0X25hbWUocG9ydCkpOwotCQl2YWwgfD0g
aWNsX2RwY2xrYV9jZmdjcjBfY2xrX29mZihkZXZfcHJpdiwgcG9ydCk7CisJCURSTV9OT1RFKCJQ
SFkgJWMgaXMgZGlzYWJsZWQvaW4gRFNJIG1vZGUgd2l0aCBhbiB1bmdhdGVkIERESSBjbG9jaywg
Z2F0ZSBpdFxuIiwKKwkJCSBwaHlfbmFtZShwb3J0KSk7CisJCXZhbCB8PSBpY2xfZHBjbGthX2Nm
Z2NyMF9jbGtfb2ZmKGRldl9wcml2LCBwaHkpOwogCQlJOTE1X1dSSVRFKERQQ0xLQV9DRkdDUjBf
SUNMLCB2YWwpOwogCX0KIH0KQEAgLTI4NjMsNiArMjg4MCw3IEBAIHN0YXRpYyB2b2lkIGludGVs
X2RkaV9jbGtfc2VsZWN0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYp
OwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBwaHkgPSBpbnRl
bF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAJdTMyIHZhbDsKIAljb25zdCBzdHJ1Y3Qg
aW50ZWxfc2hhcmVkX2RwbGwgKnBsbCA9IGNydGNfc3RhdGUtPnNoYXJlZF9kcGxsOwogCkBAIC0y
ODcyLDcgKzI4OTAsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfY2xrX3NlbGVjdChzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHBsbF9sb2Nr
KTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExKSB7Ci0JCWlmICghaW50ZWxfcG9y
dF9pc19jb21ib3BoeShkZXZfcHJpdiwgcG9ydCkpCisJCWlmICghaW50ZWxfcGh5X2lzX2NvbWJv
KGRldl9wcml2LCBwaHkpKQogCQkJSTkxNV9XUklURShERElfQ0xLX1NFTChwb3J0KSwKIAkJCQkg
ICBpY2xfcGxsX3RvX2RkaV9jbGtfc2VsKGVuY29kZXIsIGNydGNfc3RhdGUpKTsKIAl9IGVsc2Ug
aWYgKElTX0NBTk5PTkxBS0UoZGV2X3ByaXYpKSB7CkBAIC0yOTEyLDkgKzI5MzAsMTAgQEAgc3Rh
dGljIHZvaWQgaW50ZWxfZGRpX2Nsa19kaXNhYmxlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5j
b2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVt
IHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAKIAlpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSAxMSkgewotCQlpZiAoIWludGVsX3BvcnRfaXNfY29tYm9waHko
ZGV2X3ByaXYsIHBvcnQpKQorCQlpZiAoIWludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5
KSkKIAkJCUk5MTVfV1JJVEUoRERJX0NMS19TRUwocG9ydCksIERESV9DTEtfU0VMX05PTkUpOwog
CX0gZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKIAkJSTkxNV9XUklURShEUENM
S0FfQ0ZHQ1IwLCBJOTE1X1JFQUQoRFBDTEtBX0NGR0NSMCkgfApAQCAtMzExMCw2ICszMTI5LDcg
QEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9k
cCgmZW5jb2Rlci0+YmFzZSk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5w
b3J0OworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsK
IAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgm
ZW5jb2Rlci0+YmFzZSk7CiAJYm9vbCBpc19tc3QgPSBpbnRlbF9jcnRjX2hhc190eXBlKGNydGNf
c3RhdGUsIElOVEVMX09VVFBVVF9EUF9NU1QpOwogCWludCBsZXZlbCA9IGludGVsX2RkaV9kcF9s
ZXZlbChpbnRlbF9kcCk7CkBAIC0zMTM4LDExICszMTU4LDExIEBAIHN0YXRpYyB2b2lkIGludGVs
X2RkaV9wcmVfZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWVsc2UK
IAkJaW50ZWxfcHJlcGFyZV9kcF9kZGlfYnVmZmVycyhlbmNvZGVyLCBjcnRjX3N0YXRlKTsKIAot
CWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2LCBwb3J0KSkgeworCWlmIChpbnRl
bF9waHlfaXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpIHsKIAkJYm9vbCBsYW5lX3JldmVyc2FsID0K
IAkJCWRpZ19wb3J0LT5zYXZlZF9wb3J0X2JpdHMgJiBERElfQlVGX1BPUlRfUkVWRVJTQUw7CiAK
LQkJaW50ZWxfY29tYm9fcGh5X3Bvd2VyX3VwX2xhbmVzKGRldl9wcml2LCBwb3J0LCBmYWxzZSwK
KwkJaW50ZWxfY29tYm9fcGh5X3Bvd2VyX3VwX2xhbmVzKGRldl9wcml2LCBwaHksIGZhbHNlLAog
CQkJCQkgICAgICAgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCwKIAkJCQkJICAgICAgIGxhbmVfcmV2
ZXJzYWwpOwogCX0KQEAgLTM2MzAsNyArMzY1MCw3IEBAIGludGVsX2RkaV9wcmVfcGxsX2VuYWJs
ZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29k
ZXItPnBvcnQ7CiAKIAlpZiAoaW50ZWxfY3J0Y19oYXNfZHBfZW5jb2RlcihjcnRjX3N0YXRlKSB8
fAotCSAgICBpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KSkKKwkgICAg
aW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9y
dCkpKQogCQlpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldChkZXZfcHJpdiwKIAkJCQkJaW50ZWxfZGRp
X21haW5fbGlua19hdXhfZG9tYWluKGRpZ19wb3J0KSk7CiAKQEAgLTM2NTYsOSArMzY3NiwxMCBA
QCBpbnRlbF9kZGlfcG9zdF9wbGxfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29k
ZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVu
Y190b19kaWdfcG9ydCgmZW5jb2Rlci0+YmFzZSk7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9y
dF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCiAJaWYgKGludGVsX2NydGNfaGFz
X2RwX2VuY29kZXIoY3J0Y19zdGF0ZSkgfHwKLQkgICAgaW50ZWxfcG9ydF9pc190YyhkZXZfcHJp
diwgZW5jb2Rlci0+cG9ydCkpCisJICAgIGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSkK
IAkJaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfdW5jaGVja2VkKGRldl9wcml2LAogCQkJCQkJICBp
bnRlbF9kZGlfbWFpbl9saW5rX2F1eF9kb21haW4oZGlnX3BvcnQpKTsKIH0KQEAgLTM5MzQsOCAr
Mzk1NSw5IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9lbmNvZGVyX3Jlc2V0KHN0cnVjdCBkcm1f
ZW5jb2RlciAqZHJtX2VuY29kZXIpCiB7CiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGln
X3BvcnQgPSBlbmNfdG9fZGlnX3BvcnQoZHJtX2VuY29kZXIpOwogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1ID0gdG9faTkxNShkcm1fZW5jb2Rlci0+ZGV2KTsKKwllbnVtIHBoeSBwaHkg
PSBpbnRlbF9wb3J0X3RvX3BoeShpOTE1LCBkaWdfcG9ydC0+YmFzZS5wb3J0KTsKIAotCWlmIChp
bnRlbF9wb3J0X2lzX3RjKGk5MTUsIGRpZ19wb3J0LT5iYXNlLnBvcnQpKQorCWlmIChpbnRlbF9w
aHlfaXNfdGMoaTkxNSwgcGh5KSkKIAkJaW50ZWxfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZCgmZGln
X3BvcnQtPmJhc2UpOwogCiAJaW50ZWxfZHBfZW5jb2Rlcl9yZXNldChkcm1fZW5jb2Rlcik7CkBA
IC0zOTQ1LDEwICszOTY3LDExIEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9lbmNvZGVyX2Rlc3Ry
b3koc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0ID0gZW5jX3RvX2RpZ19wb3J0KGVuY29kZXIpOwogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkxNShlbmNvZGVyLT5kZXYpOworCWVudW0gcGh5IHBo
eSA9IGludGVsX3BvcnRfdG9fcGh5KGk5MTUsIGRpZ19wb3J0LT5iYXNlLnBvcnQpOwogCiAJaW50
ZWxfZHBfZW5jb2Rlcl9mbHVzaF93b3JrKGVuY29kZXIpOwogCi0JaWYgKGludGVsX3BvcnRfaXNf
dGMoaTkxNSwgZGlnX3BvcnQtPmJhc2UucG9ydCkpCisJaWYgKGludGVsX3BoeV9pc190YyhpOTE1
LCBwaHkpKQogCQlpY2xfdGNfcGh5X2Rpc2Nvbm5lY3QoaTkxNSwgZGlnX3BvcnQpOwogCiAJZHJt
X2VuY29kZXJfY2xlYW51cChlbmNvZGVyKTsKQEAgLTQxOTgsNiArNDIyMSw3IEBAIHZvaWQgaW50
ZWxfZGRpX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQg
cG9ydCkKIAlzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXI7CiAJYm9vbCBpbml0X2hkbWksIGlu
aXRfZHAsIGluaXRfbHNwY29uID0gZmFsc2U7CiAJZW51bSBwaXBlIHBpcGU7CisJZW51bSBwaHkg
cGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCiAJaW5pdF9oZG1pID0g
cG9ydF9pbmZvLT5zdXBwb3J0c19kdmkgfHwgcG9ydF9pbmZvLT5zdXBwb3J0c19oZG1pOwogCWlu
aXRfZHAgPSBwb3J0X2luZm8tPnN1cHBvcnRzX2RwOwpAQCAtNDI2MSw3ICs0Mjg1LDcgQEAgdm9p
ZCBpbnRlbF9kZGlfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0g
cG9ydCBwb3J0KQogCWludGVsX2RpZ19wb3J0LT5tYXhfbGFuZXMgPSBpbnRlbF9kZGlfbWF4X2xh
bmVzKGludGVsX2RpZ19wb3J0KTsKIAlpbnRlbF9kaWdfcG9ydC0+YXV4X2NoID0gaW50ZWxfYmlv
c19wb3J0X2F1eF9jaChkZXZfcHJpdiwgcG9ydCk7CiAKLQlpbnRlbF9kaWdfcG9ydC0+dGNfbGVn
YWN5X3BvcnQgPSBpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSAmJgorCWludGVsX2Rp
Z19wb3J0LT50Y19sZWdhY3lfcG9ydCA9IGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSAm
JgogCQkJCQkgIXBvcnRfaW5mby0+c3VwcG9ydHNfdHlwZWNfdXNiICYmCiAJCQkJCSAhcG9ydF9p
bmZvLT5zdXBwb3J0c190YnQ7CiAKQEAgLTQzMjQsNyArNDM0OCw3IEBAIHZvaWQgaW50ZWxfZGRp
X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkK
IAogCWludGVsX2luZm9mcmFtZV9pbml0KGludGVsX2RpZ19wb3J0KTsKIAotCWlmIChpbnRlbF9w
b3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSkKKwlpZiAoaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2
LCBwaHkpKQogCQlpbnRlbF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKGludGVsX2VuY29kZXIpOwog
CiAJcmV0dXJuOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YwppbmRleCA4NTkyYTdkNDIyZGUuLmFmYmZlZjJmZmZkZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTY1NjAsMzEgKzY1NjAsMzkgQEAgc3Rh
dGljIHZvaWQgaTl4eF9wZml0X2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSkKIAlJOTE1X1dSSVRFKEJDTFJQQVQoY3J0Yy0+cGlwZSksIDApOwogfQogCi1i
b29sIGludGVsX3BvcnRfaXNfY29tYm9waHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LCBlbnVtIHBvcnQgcG9ydCkKK2Jvb2wgaW50ZWxfcGh5X2lzX2NvbWJvKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkgcGh5KQogewotCWlmIChwb3J0ID09IFBP
UlRfTk9ORSkKKwlpZiAocGh5ID09IFBIWV9OT05FKQogCQlyZXR1cm4gZmFsc2U7CiAKIAlpZiAo
SVNfRUxLSEFSVExBS0UoZGV2X3ByaXYpKQotCQlyZXR1cm4gcG9ydCA8PSBQT1JUX0M7CisJCXJl
dHVybiBwaHkgPD0gUEhZX0M7CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkKLQkJ
cmV0dXJuIHBvcnQgPD0gUE9SVF9COworCQlyZXR1cm4gcGh5IDw9IFBIWV9COwogCiAJcmV0dXJu
IGZhbHNlOwogfQogCi1ib29sIGludGVsX3BvcnRfaXNfdGMoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKK2Jvb2wgaW50ZWxfcGh5X2lzX3RjKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkgcGh5KQogewogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDExICYmICFJU19FTEtIQVJUTEFLRShkZXZfcHJpdikpCi0JCXJl
dHVybiBwb3J0ID49IFBPUlRfQyAmJiBwb3J0IDw9IFBPUlRfRjsKKwkJcmV0dXJuIHBoeSA+PSBQ
SFlfQyAmJiBwaHkgPD0gUEhZX0Y7CiAKIAlyZXR1cm4gZmFsc2U7CiB9CiAKK2VudW0gcGh5IGlu
dGVsX3BvcnRfdG9fcGh5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBlbnVtIHBvcnQg
cG9ydCkKK3sKKwlpZiAoSVNfRUxLSEFSVExBS0UoaTkxNSkgJiYgcG9ydCA9PSBQT1JUX0QpCisJ
CXJldHVybiBQSFlfQTsKKworCXJldHVybiAoZW51bSBwaHkpcG9ydDsKK30KKwogZW51bSB0Y19w
b3J0IGludGVsX3BvcnRfdG9fdGMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBl
bnVtIHBvcnQgcG9ydCkKIHsKLQlpZiAoIWludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQp
KQorCWlmICghaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBpbnRlbF9wb3J0X3RvX3BoeShkZXZf
cHJpdiwgcG9ydCkpKQogCQlyZXR1cm4gUE9SVF9UQ19OT05FOwogCiAJcmV0dXJuIHBvcnQgLSBQ
T1JUX0M7CkBAIC05OTM2LDE1ICs5OTQ0LDE2IEBAIHN0YXRpYyB2b2lkIGljZWxha2VfZ2V0X2Rk
aV9wbGwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJCWVudW0gcG9ydCBw
b3J0LAogCQkJCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZykKIHsKKwllbnVt
IHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAJZW51bSBpbnRl
bF9kcGxsX2lkIGlkOwogCXUzMiB0ZW1wOwogCiAJLyogVE9ETzogVEJUIHBsbCBub3QgaW1wbGVt
ZW50ZWQuICovCi0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7
CisJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgewogCQl0ZW1wID0gSTkx
NV9SRUFEKERQQ0xLQV9DRkdDUjBfSUNMKSAmCi0JCSAgICAgICBEUENMS0FfQ0ZHQ1IwX0RESV9D
TEtfU0VMX01BU0socG9ydCk7Ci0JCWlkID0gdGVtcCA+PiBEUENMS0FfQ0ZHQ1IwX0RESV9DTEtf
U0VMX1NISUZUKHBvcnQpOwotCX0gZWxzZSBpZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwg
cG9ydCkpIHsKKwkJICAgICAgIElDTF9EUENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMX01BU0socGh5
KTsKKwkJaWQgPSB0ZW1wID4+IElDTF9EUENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMX1NISUZUKHBo
eSk7CisJfSBlbHNlIGlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpIHsKIAkJaWQg
PSBpY2xfdGNfcG9ydF90b19wbGxfaWQoaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgcG9ydCkp
OwogCX0gZWxzZSB7CiAJCVdBUk4oMSwgIkludmFsaWQgcG9ydCAleFxuIiwgcG9ydCk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCmluZGV4IGVlNmI4MTk0
YTQ1OS4uZjg5YjBiNzc5ZjE4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXkuaApAQCAtMjI5LDYgKzIyOSwyMSBAQCBzdHJ1Y3QgaW50ZWxfbGlua19tX24g
ewogCXUzMiBsaW5rX247CiB9OwogCitlbnVtIHBoeSB7CisJUEhZX05PTkUgPSAtMSwKKworCVBI
WV9BID0gMCwKKwlQSFlfQiwKKwlQSFlfQywKKwlQSFlfRCwKKwlQSFlfRSwKKwlQSFlfRiwKKwor
CUk5MTVfTUFYX1BIWVMKK307CisKKyNkZWZpbmUgcGh5X25hbWUoYSkgKChhKSArICdBJykKKwog
I2RlZmluZSBmb3JfZWFjaF9waXBlKF9fZGV2X3ByaXYsIF9fcCkgXAogCWZvciAoKF9fcCkgPSAw
OyAoX19wKSA8IElOVEVMX0lORk8oX19kZXZfcHJpdiktPm51bV9waXBlczsgKF9fcCkrKykKIApA
QCAtMzU3LDUgKzM3Miw2IEBAIHZvaWQgbHB0X2Rpc2FibGVfY2xrb3V0X2RwKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB1MzIgaW50ZWxfcGxhbmVfZmJfbWF4X3N0cmlkZShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICB1MzIgcGl4ZWxfZm9y
bWF0LCB1NjQgbW9kaWZpZXIpOwogYm9vbCBpbnRlbF9wbGFuZV9jYW5fcmVtYXAoY29uc3Qgc3Ry
dWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSk7CitlbnVtIHBoeSBpbnRlbF9wb3J0
X3RvX3BoeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgZW51bSBwb3J0IHBvcnQpOwog
CiAjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwppbmRleCA0MzM2
ZGY0NmZlNzguLjU3NzUzODEzMmE4MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZHAuYwpAQCAtMzI5LDkgKzMyOSw5IEBAIHN0YXRpYyBpbnQgaWNsX21heF9zb3VyY2VfcmF0
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3Bv
cnQgKmRpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOwot
CWVudW0gcG9ydCBwb3J0ID0gZGlnX3BvcnQtPmJhc2UucG9ydDsKKwllbnVtIHBoeSBwaHkgPSBp
bnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZGlnX3BvcnQtPmJhc2UucG9ydCk7CiAKLQlpZiAo
aW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgcG9ydCkgJiYKKwlpZiAoaW50ZWxfcGh5
X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpICYmCiAJICAgICFJU19FTEtIQVJUTEFLRShkZXZfcHJp
dikgJiYKIAkgICAgIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCiAJCXJldHVybiA1NDAwMDA7
CkBAIC01NDI1LDEwICs1NDI1LDExIEBAIHN0YXRpYyBib29sIGljbF9kaWdpdGFsX3BvcnRfY29u
bmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVj
dCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZW5jX3RvX2RpZ19wb3J0KCZlbmNvZGVy
LT5iYXNlKTsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZW5j
b2Rlci0+cG9ydCk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgZW5j
b2Rlci0+cG9ydCkpCisJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkKIAkJ
cmV0dXJuIGljbF9jb21ib19wb3J0X2Nvbm5lY3RlZChkZXZfcHJpdiwgZGlnX3BvcnQpOwotCWVs
c2UgaWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCWVsc2Ug
aWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSkKIAkJcmV0dXJuIGljbF90Y19wb3J0
X2Nvbm5lY3RlZChkZXZfcHJpdiwgZGlnX3BvcnQpOwogCWVsc2UKIAkJTUlTU0lOR19DQVNFKGVu
Y29kZXItPmhwZF9waW4pOwpAQCAtNzMzMiw2ICs3MzMzLDcgQEAgaW50ZWxfZHBfaW5pdF9jb25u
ZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsCiAJc3RydWN0
IGRybV9kZXZpY2UgKmRldiA9IGludGVsX2VuY29kZXItPmJhc2UuZGV2OwogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAllbnVtIHBvcnQgcG9ydCA9
IGludGVsX2VuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHko
ZGV2X3ByaXYsIHBvcnQpOwogCWludCB0eXBlOwogCiAJLyogSW5pdGlhbGl6ZSB0aGUgd29yayBm
b3IgbW9kZXNldCBpbiBjYXNlIG9mIGxpbmsgdHJhaW4gZmFpbHVyZSAqLwpAQCAtNzM1OCw3ICs3
MzYwLDcgQEAgaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9y
dCAqaW50ZWxfZGlnX3BvcnQsCiAJCSAqIEN1cnJlbnRseSB3ZSBkb24ndCBzdXBwb3J0IGVEUCBv
biBUeXBlQyBwb3J0cywgYWx0aG91Z2ggaW4KIAkJICogdGhlb3J5IGl0IGNvdWxkIHdvcmsgb24g
VHlwZUMgbGVnYWN5IHBvcnRzLgogCQkgKi8KLQkJV0FSTl9PTihpbnRlbF9wb3J0X2lzX3RjKGRl
dl9wcml2LCBwb3J0KSk7CisJCVdBUk5fT04oaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBwaHkp
KTsKIAkJdHlwZSA9IERSTV9NT0RFX0NPTk5FQ1RPUl9lRFA7CiAJfSBlbHNlIHsKIAkJdHlwZSA9
IERSTV9NT0RFX0NPTk5FQ1RPUl9EaXNwbGF5UG9ydDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYwppbmRleCAyZDRlN2I5YTdiOWQuLjdiZjY5Nzg0ODA1
NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21n
ci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYwpA
QCAtMjUxMyw3ICsyNTEzLDggQEAgc3RhdGljIGJvb2wgaWNsX2NhbGNfZHBsbF9zdGF0ZShzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlzdHJ1Y3Qgc2tsX3dycGxsX3BhcmFt
cyBwbGxfcGFyYW1zID0geyAwIH07CiAJYm9vbCByZXQ7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc190
YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpCisJaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJp
diwgaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsCisJCQkJCQkJZW5jb2Rlci0+cG9ydCkpKQog
CQlyZXQgPSBpY2xfY2FsY190YnRfcGxsKGNydGNfc3RhdGUsICZwbGxfcGFyYW1zKTsKIAllbHNl
IGlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSB8
fAogCQkgaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKSkK
QEAgLTI4MDAsMTQgKzI4MDEsMTUgQEAgaWNsX2dldF9kcGxsKHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlLAogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19w
b3J0OwogCXN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAqcGxsOwogCWVudW0gcG9ydCBwb3J0ID0g
ZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJp
diwgcG9ydCk7CiAJZW51bSBpbnRlbF9kcGxsX2lkIG1pbiwgbWF4OwogCWJvb2wgcmV0OwogCi0J
aWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7CisJaWYgKGludGVs
X3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgewogCQltaW4gPSBEUExMX0lEX0lDTF9EUExM
MDsKIAkJbWF4ID0gRFBMTF9JRF9JQ0xfRFBMTDE7CiAJCXJldCA9IGljbF9jYWxjX2RwbGxfc3Rh
dGUoY3J0Y19zdGF0ZSwgZW5jb2Rlcik7Ci0JfSBlbHNlIGlmIChpbnRlbF9wb3J0X2lzX3RjKGRl
dl9wcml2LCBwb3J0KSkgeworCX0gZWxzZSBpZiAoaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBw
aHkpKSB7CiAJCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9EUF9NU1QpIHsKIAkJ
CXN0cnVjdCBpbnRlbF9kcF9tc3RfZW5jb2RlciAqbXN0X2VuY29kZXI7CiAKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3JlZy5oCmluZGV4IGM4MTRjYzFiM2FlNS4uNDNiYTA3OTQ5OGIyIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcmVnLmgKQEAgLTE3OTQsMTIgKzE3OTQsMTIgQEAgZW51bSBpOTE1X3Bvd2VyX3dlbGxf
aWQgewogI2RlZmluZSBfSUNMX0NPTUJPUEhZX0EJCQkweDE2MjAwMAogI2RlZmluZSBfSUNMX0NP
TUJPUEhZX0IJCQkweDZDMDAwCiAjZGVmaW5lIF9FSExfQ09NQk9QSFlfQwkJCTB4MTYwMDAwCi0j
ZGVmaW5lIF9JQ0xfQ09NQk9QSFkocG9ydCkJCV9QSUNLKHBvcnQsIF9JQ0xfQ09NQk9QSFlfQSwg
XAorI2RlZmluZSBfSUNMX0NPTUJPUEhZKHBoeSkJCV9QSUNLKHBoeSwgX0lDTF9DT01CT1BIWV9B
LCBcCiAJCQkJCSAgICAgIF9JQ0xfQ09NQk9QSFlfQiwgXAogCQkJCQkgICAgICBfRUhMX0NPTUJP
UEhZX0MpCiAKIC8qIENOTC9JQ0wgUG9ydCBDTF9EVyByZWdpc3RlcnMgKi8KLSNkZWZpbmUgX0lD
TF9QT1JUX0NMX0RXKGR3LCBwb3J0KQkoX0lDTF9DT01CT1BIWShwb3J0KSArIFwKKyNkZWZpbmUg
X0lDTF9QT1JUX0NMX0RXKGR3LCBwaHkpCShfSUNMX0NPTUJPUEhZKHBoeSkgKyBcCiAJCQkJCSA0
ICogKGR3KSkKIAogI2RlZmluZSBDTkxfUE9SVF9DTDFDTV9EVzUJCV9NTUlPKDB4MTYyMDE0KQpA
QCAtOTY4MCwxNyArOTY4MCwyMSBAQCBlbnVtIHNrbF9wb3dlcl9nYXRlIHsKICAqIENOTCBDbG9j
a3MKICAqLwogI2RlZmluZSBEUENMS0FfQ0ZHQ1IwCQkJCV9NTUlPKDB4NkMyMDApCi0jZGVmaW5l
IERQQ0xLQV9DRkdDUjBfSUNMCQkJX01NSU8oMHgxNjQyODApCiAjZGVmaW5lICBEUENMS0FfQ0ZH
Q1IwX0RESV9DTEtfT0ZGKHBvcnQpCSgxIDw8ICgocG9ydCkgPT0gIFBPUlRfRiA/IDIzIDogXAog
CQkJCQkJICAgICAgKHBvcnQpICsgMTApKQotI2RlZmluZSAgSUNMX0RQQ0xLQV9DRkdDUjBfRERJ
X0NMS19PRkYocG9ydCkgICAoMSA8PCAoKHBvcnQpICsgMTApKQotI2RlZmluZSAgSUNMX0RQQ0xL
QV9DRkdDUjBfVENfQ0xLX09GRih0Y19wb3J0KSAoMSA8PCAoKHRjX3BvcnQpID09IFBPUlRfVEM0
ID8gXAotCQkJCQkJICAgICAgMjEgOiAodGNfcG9ydCkgKyAxMikpCiAjZGVmaW5lICBEUENMS0Ff
Q0ZHQ1IwX0RESV9DTEtfU0VMX1NISUZUKHBvcnQpCSgocG9ydCkgPT0gUE9SVF9GID8gMjEgOiBc
CiAJCQkJCQkocG9ydCkgKiAyKQogI2RlZmluZSAgRFBDTEtBX0NGR0NSMF9ERElfQ0xLX1NFTF9N
QVNLKHBvcnQpCSgzIDw8IERQQ0xLQV9DRkdDUjBfRERJX0NMS19TRUxfU0hJRlQocG9ydCkpCiAj
ZGVmaW5lICBEUENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMKHBsbCwgcG9ydCkJKChwbGwpIDw8IERQ
Q0xLQV9DRkdDUjBfRERJX0NMS19TRUxfU0hJRlQocG9ydCkpCiAKKyNkZWZpbmUgRFBDTEtBX0NG
R0NSMF9JQ0wJCQlfTU1JTygweDE2NDI4MCkKKyNkZWZpbmUgIElDTF9EUENMS0FfQ0ZHQ1IwX0RE
SV9DTEtfT0ZGKHBoeSkJKDEgPDwgX1BJQ0socGh5LCAxMCwgMTEsIDI0KSkKKyNkZWZpbmUgIElD
TF9EUENMS0FfQ0ZHQ1IwX1RDX0NMS19PRkYodGNfcG9ydCkgKDEgPDwgKCh0Y19wb3J0KSA9PSBQ
T1JUX1RDNCA/IFwKKwkJCQkJCSAgICAgIDIxIDogKHRjX3BvcnQpICsgMTIpKQorI2RlZmluZSAg
SUNMX0RQQ0xLQV9DRkdDUjBfRERJX0NMS19TRUxfU0hJRlQocGh5KQkoKHBoeSkgKiAyKQorI2Rl
ZmluZSAgSUNMX0RQQ0xLQV9DRkdDUjBfRERJX0NMS19TRUxfTUFTSyhwaHkpCSgzIDw8IElDTF9E
UENMS0FfQ0ZHQ1IwX0RESV9DTEtfU0VMX1NISUZUKHBoeSkpCisjZGVmaW5lICBJQ0xfRFBDTEtB
X0NGR0NSMF9ERElfQ0xLX1NFTChwbGwsIHBoeSkJKChwbGwpIDw8IElDTF9EUENMS0FfQ0ZHQ1Iw
X0RESV9DTEtfU0VMX1NISUZUKHBoeSkpCisKIC8qIENOTCBQTEwgKi8KICNkZWZpbmUgRFBMTDBf
RU5BQkxFCQkweDQ2MDEwCiAjZGVmaW5lIERQTEwxX0VOQUJMRQkJMHg0NjAxNApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9kcnYuaAppbmRleCAxZDU4ZjdlYzVkODQuLjhjMTc0YmI3NjdiYSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfZHJ2LmgKQEAgLTE0NzMsOCArMTQ3Myw4IEBAIHZvaWQgaW50ZWxfcHBzX3Vu
bG9ja19yZWdzX3dhKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGlu
dGVsX2VuY29kZXJfZGVzdHJveShzdHJ1Y3QgZHJtX2VuY29kZXIgKmVuY29kZXIpOwogc3RydWN0
IGRybV9kaXNwbGF5X21vZGUgKgogaW50ZWxfZW5jb2Rlcl9jdXJyZW50X21vZGUoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIpOwotYm9vbCBpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpOwotYm9vbCBpbnRl
bF9wb3J0X2lzX3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0
IHBvcnQpOworYm9vbCBpbnRlbF9waHlfaXNfY29tYm8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCBlbnVtIHBoeSBwaHkpOworYm9vbCBpbnRlbF9waHlfaXNfdGMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBoeSBwaHkpOwogZW51bSB0Y19wb3J0IGlu
dGVsX3BvcnRfdG9fdGMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICAg
ICAgZW51bSBwb3J0IHBvcnQpOwogaW50IGludGVsX2dldF9waXBlX2Zyb21fY3J0Y19pZF9pb2N0
bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAotLSAKMi4xNy4yCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGlu
ZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

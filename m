Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 51CAD129970
	for <lists+intel-gfx@lfdr.de>; Mon, 23 Dec 2019 18:33:19 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 77EEF6E329;
	Mon, 23 Dec 2019 17:33:15 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 538F76E313
 for <intel-gfx@lists.freedesktop.org>; Mon, 23 Dec 2019 17:33:06 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 Dec 2019 09:33:05 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,348,1571727600"; d="scan'208";a="417324853"
Received: from ldmartin1-desk.jf.intel.com ([10.165.21.151])
 by fmsmga005.fm.intel.com with ESMTP; 23 Dec 2019 09:33:05 -0800
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 23 Dec 2019 09:32:42 -0800
Message-Id: <20191223173244.30742-9-lucas.demarchi@intel.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191223173244.30742-1-lucas.demarchi@intel.com>
References: <20191223173244.30742-1-lucas.demarchi@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 08/10] drm/i915: prefer 3-letter acronym for
 broadwell
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgYXJlIGN1cnJlbnRseSB1c2luZyBhIG1peCBvZiBwbGF0Zm9ybSBuYW1lIGFuZCBhY3Jvbnlt
IHRvIG5hbWUgdGhlCmZ1bmN0aW9ucy4gTGV0J3MgcHJlZmVyIHRoZSBhY3JvbnltIGFzIGl0IHNo
b3VsZCBiZSBjbGVhciB3aGF0IHBsYXRmb3JtCml0J3MgYWJvdXQgYW5kIGl0J3Mgc2hvcnRlciwg
c28gaXQgZG9lc24ndCBnbyBvdmVyIDgwIGNvbHVtbnMgaW4gYSBmZXcKY2FzZXMuIFRoaXMgY29u
dmVydHMgYnJvYWR3ZWxsIHRvIGJkdyB3aGVyZSBhcHByb3ByaWF0ZS4KClNpZ25lZC1vZmYtYnk6
IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgpBY2tlZC1ieTogSmFu
aSBOaWt1bGEgPGphbmkubmlrdWxhQGxpbnV4LmludGVsLmNvbT4KQWNrZWQtYnk6IFZpbGxlIFN5
cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMgfCA2ICsrKy0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHMuYyAgICAgICAgfCAyICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaGFuZGxlcnMuYyAgICAgICAgICAgICAgICB8IDggKysrKy0t
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jICAgICAgICAgICAgICAgIHwg
NiArKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmMgICAgICAg
ICAgIHwgNCArKy0tCiA1IGZpbGVzIGNoYW5nZWQsIDEzIGluc2VydGlvbnMoKyksIDEzIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
Zmlmb191bmRlcnJ1bi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZv
X3VuZGVycnVuLmMKaW5kZXggZDZlMGQwYmU4NDJlLi4xZjgwZjI3NWYzZjIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmlmb191bmRlcnJ1bi5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmlmb191bmRlcnJ1bi5jCkBAIC0x
ODAsOCArMTgwLDggQEAgc3RhdGljIHZvaWQgaXZ5YnJpZGdlX3NldF9maWZvX3VuZGVycnVuX3Jl
cG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCX0KIH0KIAotc3RhdGljIHZvaWQgYnJv
YWR3ZWxsX3NldF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LAotCQkJCQkJICBlbnVtIHBpcGUgcGlwZSwgYm9vbCBlbmFibGUpCitzdGF0aWMgdm9pZCBiZHdf
c2V0X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkJ
CSAgICBlbnVtIHBpcGUgcGlwZSwgYm9vbCBlbmFibGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCkBAIC0yNjgsNyArMjY4LDcgQEAgc3Rh
dGljIGJvb2wgX19pbnRlbF9zZXRfY3B1X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsCiAJZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCA3KSkKIAkJaXZ5YnJp
ZGdlX3NldF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhkZXYsIHBpcGUsIGVuYWJsZSwgb2xkKTsK
IAllbHNlIGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDgpCi0JCWJyb2Fkd2VsbF9zZXRfZmlm
b191bmRlcnJ1bl9yZXBvcnRpbmcoZGV2LCBwaXBlLCBlbmFibGUpOworCQliZHdfc2V0X2ZpZm9f
dW5kZXJydW5fcmVwb3J0aW5nKGRldiwgcGlwZSwgZW5hYmxlKTsKIAogCXJldHVybiBvbGQ7CiB9
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kcy5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHMuYwppbmRleCAxOTVj
Y2Y3ZGIyNzIuLjRlMjkyZDRiZjdiOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfd29ya2Fyb3VuZHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF93b3JrYXJvdW5kcy5jCkBAIC0yNTQsNyArMjU0LDcgQEAgc3RhdGljIHZvaWQgYmR3X2N0eF93
b3JrYXJvdW5kc19pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAogCS8qIFdh
RGlzYWJsZURvcENsb2NrR2F0aW5nOmJkdwogCSAqCi0JICogQWxzbyBzZWUgdGhlIHJlbGF0ZWQg
VUNHVENMMSB3cml0ZSBpbiBicm9hZHdlbGxfaW5pdF9jbG9ja19nYXRpbmcoKQorCSAqIEFsc28g
c2VlIHRoZSByZWxhdGVkIFVDR1RDTDEgd3JpdGUgaW4gYmR3X2luaXRfY2xvY2tfZ2F0aW5nKCkK
IAkgKiB0byBkaXNhYmxlIEVVVEMgY2xvY2sgZ2F0aW5nLgogCSAqLwogCVdBX1NFVF9CSVRfTUFT
S0VEKEdFTjdfUk9XX0NISUNLRU4yLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L2hhbmRsZXJzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaGFuZGxlcnMuYwppbmRl
eCAxMDQzZTZkNTY0ZGYuLjZkMjhkNzJlNmM3ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Z0L2hhbmRsZXJzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2hhbmRs
ZXJzLmMKQEAgLTI2OTEsNyArMjY5MSw3IEBAIHN0YXRpYyBpbnQgaW5pdF9nZW5lcmljX21taW9f
aW5mbyhzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQg
aW5pdF9icm9hZHdlbGxfbW1pb19pbmZvKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCkKK3N0YXRpYyBp
bnQgaW5pdF9iZHdfbW1pb19pbmZvKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCkKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBndnQtPmRldl9wcml2OwogCWludCByZXQ7CkBA
IC0zMzgwLDIwICszMzgwLDIwIEBAIGludCBpbnRlbF9ndnRfc2V0dXBfbW1pb19pbmZvKHN0cnVj
dCBpbnRlbF9ndnQgKmd2dCkKIAkJZ290byBlcnI7CiAKIAlpZiAoSVNfQlJPQURXRUxMKGRldl9w
cml2KSkgewotCQlyZXQgPSBpbml0X2Jyb2Fkd2VsbF9tbWlvX2luZm8oZ3Z0KTsKKwkJcmV0ID0g
aW5pdF9iZHdfbW1pb19pbmZvKGd2dCk7CiAJCWlmIChyZXQpCiAJCQlnb3RvIGVycjsKIAl9IGVs
c2UgaWYgKElTX1NLWUxBS0UoZGV2X3ByaXYpCiAJCXx8IElTX0tBQllMQUtFKGRldl9wcml2KQog
CQl8fCBJU19DT0ZGRUVMQUtFKGRldl9wcml2KSkgewotCQlyZXQgPSBpbml0X2Jyb2Fkd2VsbF9t
bWlvX2luZm8oZ3Z0KTsKKwkJcmV0ID0gaW5pdF9iZHdfbW1pb19pbmZvKGd2dCk7CiAJCWlmIChy
ZXQpCiAJCQlnb3RvIGVycjsKIAkJcmV0ID0gaW5pdF9za2xfbW1pb19pbmZvKGd2dCk7CiAJCWlm
IChyZXQpCiAJCQlnb3RvIGVycjsKIAl9IGVsc2UgaWYgKElTX0JST1hUT04oZGV2X3ByaXYpKSB7
Ci0JCXJldCA9IGluaXRfYnJvYWR3ZWxsX21taW9faW5mbyhndnQpOworCQlyZXQgPSBpbml0X2Jk
d19tbWlvX2luZm8oZ3Z0KTsKIAkJaWYgKHJldCkKIAkJCWdvdG8gZXJyOwogCQlyZXQgPSBpbml0
X3NrbF9tbWlvX2luZm8oZ3Z0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKaW5kZXgg
MDQwNzIyOTI1MWJjLi5jYjM0ZThjMzE1MTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZGVidWdmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdm
cy5jCkBAIC0zODE1LDggKzM4MTUsOCBAQCBzdGF0aWMgdm9pZCBnZW45X3NzZXVfZGV2aWNlX3N0
YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAjdW5kZWYgU1NfTUFYCiB9
CiAKLXN0YXRpYyB2b2lkIGJyb2Fkd2VsbF9zc2V1X2RldmljZV9zdGF0dXMoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCQkgc3RydWN0IHNzZXVfZGV2X2luZm8gKnNzZXUp
CitzdGF0aWMgdm9pZCBiZHdfc3NldV9kZXZpY2Vfc3RhdHVzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKKwkJCQkgICBzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSkKIHsKIAlj
b25zdCBzdHJ1Y3QgaW50ZWxfcnVudGltZV9pbmZvICppbmZvID0gUlVOVElNRV9JTkZPKGRldl9w
cml2KTsKIAl1MzIgc2xpY2VfaW5mbyA9IEk5MTVfUkVBRChHRU44X0dUX1NMSUNFX0lORk8pOwpA
QCAtMzkwMSw3ICszOTAxLDcgQEAgc3RhdGljIGludCBpOTE1X3NzZXVfc3RhdHVzKHN0cnVjdCBz
ZXFfZmlsZSAqbSwgdm9pZCAqdW51c2VkKQogCQlpZiAoSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikp
CiAJCQljaGVycnl2aWV3X3NzZXVfZGV2aWNlX3N0YXR1cyhkZXZfcHJpdiwgJnNzZXUpOwogCQll
bHNlIGlmIChJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQotCQkJYnJvYWR3ZWxsX3NzZXVfZGV2aWNl
X3N0YXR1cyhkZXZfcHJpdiwgJnNzZXUpOworCQkJYmR3X3NzZXVfZGV2aWNlX3N0YXR1cyhkZXZf
cHJpdiwgJnNzZXUpOwogCQllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDkpKQogCQkJZ2VuOV9z
c2V1X2RldmljZV9zdGF0dXMoZGV2X3ByaXYsICZzc2V1KTsKIAkJZWxzZSBpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X2RldmljZV9pbmZvLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5j
CmluZGV4IGNhN2E0MmUxZDc2OS4uZDg3YzMxNDQ0ZmE4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX2RldmljZV9pbmZvLmMKQEAgLTUxOSw3ICs1MTksNyBAQCBzdGF0aWMgdm9pZCBnZW45
X3NzZXVfaW5mb19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAl9CiB9
CiAKLXN0YXRpYyB2b2lkIGJyb2Fkd2VsbF9zc2V1X2luZm9faW5pdChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBiZHdfc3NldV9pbmZvX2luaXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXN0cnVjdCBzc2V1X2Rldl9pbmZvICpz
c2V1ID0gJlJVTlRJTUVfSU5GTyhkZXZfcHJpdiktPnNzZXU7CiAJaW50IHMsIHNzOwpAQCAtMTAy
NSw3ICsxMDI1LDcgQEAgdm9pZCBpbnRlbF9kZXZpY2VfaW5mb19ydW50aW1lX2luaXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCWVsc2UgaWYgKElTX0NIRVJSWVZJRVcoZGV2
X3ByaXYpKQogCQljaGVycnl2aWV3X3NzZXVfaW5mb19pbml0KGRldl9wcml2KTsKIAllbHNlIGlm
IChJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQotCQlicm9hZHdlbGxfc3NldV9pbmZvX2luaXQoZGV2
X3ByaXYpOworCQliZHdfc3NldV9pbmZvX2luaXQoZGV2X3ByaXYpOwogCWVsc2UgaWYgKElTX0dF
TihkZXZfcHJpdiwgOSkpCiAJCWdlbjlfc3NldV9pbmZvX2luaXQoZGV2X3ByaXYpOwogCWVsc2Ug
aWYgKElTX0dFTihkZXZfcHJpdiwgMTApKQotLSAKMi4yNC4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVs
LWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

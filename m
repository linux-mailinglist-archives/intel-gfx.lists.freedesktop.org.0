Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E02261288FD
	for <lists+intel-gfx@lfdr.de>; Sat, 21 Dec 2019 13:06:33 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8D4786E45D;
	Sat, 21 Dec 2019 12:06:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E8E766E457
 for <intel-gfx@lists.freedesktop.org>; Sat, 21 Dec 2019 12:06:24 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Dec 2019 04:06:24 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,338,1571727600"; d="scan'208";a="219065250"
Received: from ideak-desk.fi.intel.com ([10.237.72.183])
 by orsmga003.jf.intel.com with ESMTP; 21 Dec 2019 04:06:23 -0800
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 21 Dec 2019 14:05:41 +0200
Message-Id: <20191221120543.22816-9-imre.deak@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20191221120543.22816-1-imre.deak@intel.com>
References: <20191221120543.22816-1-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/10] drm/i915: Skip rotated offset adjustment
 for unsupported modifiers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogRGhpbmFrYXJhbiBQYW5kaXlhbiA8ZGhpbmFrYXJhbi5wYW5kaXlhbkBpbnRlbC5jb20+
CgpEdXJpbmcgZnJhbWVidWZmZXIgY3JlYXRpb24sIHdlIHByZS1jb21wdXRlIG9mZnNldHMgZm9y
IDkwLzI3MCBwbGFuZQpyb3RhdGlvbi4gSG93ZXZlciwgb25seSBZIGFuZCBZZiBtb2RpZmllcnMg
c3VwcG9ydCA5MC8yNzAgcm90YXRpb24uIFNvLApza2lwIHRoZSBjYWxjdWxhdGlvbnMgZm9yIG90
aGVyIG1vZGlmaWVycy4KClRvIGtlZXAgdGhlIGdlbSBidWZmZXIgc2l6ZSBjaGVjayBzdGlsbCB3
b3JraW5nIGZvciB0aWxlZCBwbGFuZXMsIGZhY3RvcgpvdXQgdGhlIGxvZ2ljIG5lZWRlZCBmb3Ig
cm90YXRpb24gc2V0dXAgYW5kIHNraXAgb25seSB0aGlzIHBhcnQgZm9yCnRpbGVkIHBsYW5lcyBv
dGhlciB0aGFuIFkvWWYuCgp2MjogQWRkIGEgYm91bmRzIGNoZWNrIFdBUk4gZm9yIHRoZSByb3Rh
dGlvbiBpbmZvIGFycmF5Lgp2MzogS2VlcCB0aGUgZ2VtIGJ1ZmZlciBzaXplIGNoZWNrIHdvcmtp
bmcgZm9yIHRpbGVkIHBsYW5lcy4KCkNjOiBNYXR0IFJvcGVyIDxtYXR0aGV3LmQucm9wZXJAaW50
ZWwuY29tPgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4KQ2M6IE1pa2EgS2Fob2xhIDxtaWthLmthaG9sYUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IERoaW5ha2FyYW4gUGFuZGl5YW4gPGRoaW5ha2FyYW4ucGFuZGl5YW5AaW50ZWwuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBJbXJlIERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBN
aWthIEthaG9sYSA8bWlrYS5rYWhvbGFAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgMTE4ICsrKysrKysrKysrKy0tLS0tLS0KIDEg
ZmlsZSBjaGFuZ2VkLCA3NyBpbnNlcnRpb25zKCspLCA0MSBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IGI1ZTQyYWQ0Mzdk
ZC4uNWVjNmI5MDY3MTM4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYwpAQCAtMjg3NSwxMiArMjg3NSw3MiBAQCBpbnRlbF9mYl9wbGFuZV9kaW1zKGlu
dCAqdywgaW50ICpoLCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwgaW50IGNvbG9yX3BsYW5l
KQogCSpoID0gZmItPmhlaWdodCAvIHZzdWI7CiB9CiAKKy8qCisgKiBTZXR1cCB0aGUgcm90YXRl
ZCB2aWV3IGZvciBhbiBGQiBwbGFuZSBhbmQgcmV0dXJuIHRoZSBzaXplIHRoZSBHVFQgbWFwcGlu
ZworICogcmVxdWlyZXMgZm9yIHRoaXMgdmlldy4KKyAqLworc3RhdGljIHUzMgorc2V0dXBfZmJf
cm90YXRpb24oaW50IHBsYW5lLCBjb25zdCBzdHJ1Y3QgaW50ZWxfcmVtYXBwZWRfcGxhbmVfaW5m
byAqcGxhbmVfaW5mbywKKwkJICB1MzIgZ3R0X29mZnNldF9yb3RhdGVkLCBpbnQgeCwgaW50IHks
CisJCSAgdW5zaWduZWQgaW50IHdpZHRoLCB1bnNpZ25lZCBpbnQgaGVpZ2h0LAorCQkgIHVuc2ln
bmVkIGludCB0aWxlX3NpemUsCisJCSAgdW5zaWduZWQgaW50IHRpbGVfd2lkdGgsIHVuc2lnbmVk
IGludCB0aWxlX2hlaWdodCwKKwkJICBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYikKK3sKKwlz
dHJ1Y3QgaW50ZWxfZnJhbWVidWZmZXIgKmludGVsX2ZiID0gdG9faW50ZWxfZnJhbWVidWZmZXIo
ZmIpOworCXN0cnVjdCBpbnRlbF9yb3RhdGlvbl9pbmZvICpyb3RfaW5mbyA9ICZpbnRlbF9mYi0+
cm90X2luZm87CisJdW5zaWduZWQgaW50IHBpdGNoX3RpbGVzOworCXN0cnVjdCBkcm1fcmVjdCBy
OworCisJLyogWSBvciBZZiBtb2RpZmllcnMgcmVxdWlyZWQgZm9yIDkwLzI3MCByb3RhdGlvbiAq
LworCWlmIChmYi0+bW9kaWZpZXIgIT0gSTkxNV9GT1JNQVRfTU9EX1lfVElMRUQgJiYKKwkgICAg
ZmItPm1vZGlmaWVyICE9IEk5MTVfRk9STUFUX01PRF9ZZl9USUxFRCkKKwkJcmV0dXJuIDA7CisK
KwlpZiAoV0FSTl9PTihwbGFuZSA+PSBBUlJBWV9TSVpFKHJvdF9pbmZvLT5wbGFuZSkpKQorCQly
ZXR1cm4gMDsKKworCXJvdF9pbmZvLT5wbGFuZVtwbGFuZV0gPSAqcGxhbmVfaW5mbzsKKworCWlu
dGVsX2ZiLT5yb3RhdGVkW3BsYW5lXS5waXRjaCA9IHBsYW5lX2luZm8tPmhlaWdodCAqIHRpbGVf
aGVpZ2h0OworCisJLyogcm90YXRlIHRoZSB4L3kgb2Zmc2V0cyB0byBtYXRjaCB0aGUgR1RUIHZp
ZXcgKi8KKwlkcm1fcmVjdF9pbml0KCZyLCB4LCB5LCB3aWR0aCwgaGVpZ2h0KTsKKwlkcm1fcmVj
dF9yb3RhdGUoJnIsCisJCQlwbGFuZV9pbmZvLT53aWR0aCAqIHRpbGVfd2lkdGgsCisJCQlwbGFu
ZV9pbmZvLT5oZWlnaHQgKiB0aWxlX2hlaWdodCwKKwkJCURSTV9NT0RFX1JPVEFURV8yNzApOwor
CXggPSByLngxOworCXkgPSByLnkxOworCisJLyogcm90YXRlIHRoZSB0aWxlIGRpbWVuc2lvbnMg
dG8gbWF0Y2ggdGhlIEdUVCB2aWV3ICovCisJcGl0Y2hfdGlsZXMgPSBpbnRlbF9mYi0+cm90YXRl
ZFtwbGFuZV0ucGl0Y2ggLyB0aWxlX2hlaWdodDsKKwlzd2FwKHRpbGVfd2lkdGgsIHRpbGVfaGVp
Z2h0KTsKKworCS8qCisJICogV2Ugb25seSBrZWVwIHRoZSB4L3kgb2Zmc2V0cywgc28gcHVzaCBh
bGwgb2YgdGhlCisJICogZ3R0IG9mZnNldCBpbnRvIHRoZSB4L3kgb2Zmc2V0cy4KKwkgKi8KKwlp
bnRlbF9hZGp1c3RfdGlsZV9vZmZzZXQoJngsICZ5LAorCQkJCSB0aWxlX3dpZHRoLCB0aWxlX2hl
aWdodCwKKwkJCQkgdGlsZV9zaXplLCBwaXRjaF90aWxlcywKKwkJCQkgZ3R0X29mZnNldF9yb3Rh
dGVkICogdGlsZV9zaXplLCAwKTsKKworCS8qCisJICogRmlyc3QgcGl4ZWwgb2YgdGhlIGZyYW1l
YnVmZmVyIGZyb20KKwkgKiB0aGUgc3RhcnQgb2YgdGhlIHJvdGF0ZWQgZ3R0IG1hcHBpbmcuCisJ
ICovCisJaW50ZWxfZmItPnJvdGF0ZWRbcGxhbmVdLnggPSB4OworCWludGVsX2ZiLT5yb3RhdGVk
W3BsYW5lXS55ID0geTsKKworCXJldHVybiBwbGFuZV9pbmZvLT53aWR0aCAqIHBsYW5lX2luZm8t
PmhlaWdodDsKK30KKwogc3RhdGljIGludAogaW50ZWxfZmlsbF9mYl9pbmZvKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJICAgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIp
CiB7CiAJc3RydWN0IGludGVsX2ZyYW1lYnVmZmVyICppbnRlbF9mYiA9IHRvX2ludGVsX2ZyYW1l
YnVmZmVyKGZiKTsKLQlzdHJ1Y3QgaW50ZWxfcm90YXRpb25faW5mbyAqcm90X2luZm8gPSAmaW50
ZWxfZmItPnJvdF9pbmZvOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPSBpbnRl
bF9mYl9vYmooZmIpOwogCXUzMiBndHRfb2Zmc2V0X3JvdGF0ZWQgPSAwOwogCXVuc2lnbmVkIGlu
dCBtYXhfc2l6ZSA9IDA7CkBAIC0yOTM4LDIyICsyOTk4LDIwIEBAIGludGVsX2ZpbGxfZmJfaW5m
byhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCW9mZnNldCAvPSB0aWxlX3Np
emU7CiAKIAkJaWYgKCFpc19zdXJmYWNlX2xpbmVhcihmYiwgaSkpIHsKKwkJCXN0cnVjdCBpbnRl
bF9yZW1hcHBlZF9wbGFuZV9pbmZvIHBsYW5lX2luZm87CiAJCQl1bnNpZ25lZCBpbnQgdGlsZV93
aWR0aCwgdGlsZV9oZWlnaHQ7Ci0JCQl1bnNpZ25lZCBpbnQgcGl0Y2hfdGlsZXM7Ci0JCQlzdHJ1
Y3QgZHJtX3JlY3QgcjsKIAogCQkJaW50ZWxfdGlsZV9kaW1zKGZiLCBpLCAmdGlsZV93aWR0aCwg
JnRpbGVfaGVpZ2h0KTsKIAotCQkJcm90X2luZm8tPnBsYW5lW2ldLm9mZnNldCA9IG9mZnNldDsK
LQkJCXJvdF9pbmZvLT5wbGFuZVtpXS5zdHJpZGUgPSBESVZfUk9VTkRfVVAoZmItPnBpdGNoZXNb
aV0sIHRpbGVfd2lkdGggKiBjcHApOwotCQkJcm90X2luZm8tPnBsYW5lW2ldLndpZHRoID0gRElW
X1JPVU5EX1VQKHggKyB3aWR0aCwgdGlsZV93aWR0aCk7Ci0JCQlyb3RfaW5mby0+cGxhbmVbaV0u
aGVpZ2h0ID0gRElWX1JPVU5EX1VQKHkgKyBoZWlnaHQsIHRpbGVfaGVpZ2h0KTsKLQotCQkJaW50
ZWxfZmItPnJvdGF0ZWRbaV0ucGl0Y2ggPQotCQkJCXJvdF9pbmZvLT5wbGFuZVtpXS5oZWlnaHQg
KiB0aWxlX2hlaWdodDsKKwkJCXBsYW5lX2luZm8ub2Zmc2V0ID0gb2Zmc2V0OworCQkJcGxhbmVf
aW5mby5zdHJpZGUgPSBESVZfUk9VTkRfVVAoZmItPnBpdGNoZXNbaV0sCisJCQkJCQkJIHRpbGVf
d2lkdGggKiBjcHApOworCQkJcGxhbmVfaW5mby53aWR0aCA9IERJVl9ST1VORF9VUCh4ICsgd2lk
dGgsIHRpbGVfd2lkdGgpOworCQkJcGxhbmVfaW5mby5oZWlnaHQgPSBESVZfUk9VTkRfVVAoeSAr
IGhlaWdodCwKKwkJCQkJCQkgdGlsZV9oZWlnaHQpOwogCiAJCQkvKiBob3cgbWFueSB0aWxlcyBk
b2VzIHRoaXMgcGxhbmUgbmVlZCAqLwotCQkJc2l6ZSA9IHJvdF9pbmZvLT5wbGFuZVtpXS5zdHJp
ZGUgKiByb3RfaW5mby0+cGxhbmVbaV0uaGVpZ2h0OworCQkJc2l6ZSA9IHBsYW5lX2luZm8uc3Ry
aWRlICogcGxhbmVfaW5mby5oZWlnaHQ7CiAJCQkvKgogCQkJICogSWYgdGhlIHBsYW5lIGlzbid0
IGhvcml6b250YWxseSB0aWxlIGFsaWduZWQsCiAJCQkgKiB3ZSBuZWVkIG9uZSBtb3JlIHRpbGUu
CkBAIC0yOTYxLDM2ICszMDE5LDEzIEBAIGludGVsX2ZpbGxfZmJfaW5mbyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQlpZiAoeCAhPSAwKQogCQkJCXNpemUrKzsKIAotCQkJ
Lyogcm90YXRlIHRoZSB4L3kgb2Zmc2V0cyB0byBtYXRjaCB0aGUgR1RUIHZpZXcgKi8KLQkJCWRy
bV9yZWN0X2luaXQoJnIsIHgsIHksIHdpZHRoLCBoZWlnaHQpOwotCQkJZHJtX3JlY3Rfcm90YXRl
KCZyLAotCQkJCQlyb3RfaW5mby0+cGxhbmVbaV0ud2lkdGggKiB0aWxlX3dpZHRoLAotCQkJCQly
b3RfaW5mby0+cGxhbmVbaV0uaGVpZ2h0ICogdGlsZV9oZWlnaHQsCi0JCQkJCURSTV9NT0RFX1JP
VEFURV8yNzApOwotCQkJeCA9IHIueDE7Ci0JCQl5ID0gci55MTsKLQotCQkJLyogcm90YXRlIHRo
ZSB0aWxlIGRpbWVuc2lvbnMgdG8gbWF0Y2ggdGhlIEdUVCB2aWV3ICovCi0JCQlwaXRjaF90aWxl
cyA9IGludGVsX2ZiLT5yb3RhdGVkW2ldLnBpdGNoIC8gdGlsZV9oZWlnaHQ7Ci0JCQlzd2FwKHRp
bGVfd2lkdGgsIHRpbGVfaGVpZ2h0KTsKLQotCQkJLyoKLQkJCSAqIFdlIG9ubHkga2VlcCB0aGUg
eC95IG9mZnNldHMsIHNvIHB1c2ggYWxsIG9mIHRoZQotCQkJICogZ3R0IG9mZnNldCBpbnRvIHRo
ZSB4L3kgb2Zmc2V0cy4KLQkJCSAqLwotCQkJaW50ZWxfYWRqdXN0X3RpbGVfb2Zmc2V0KCZ4LCAm
eSwKLQkJCQkJCSB0aWxlX3dpZHRoLCB0aWxlX2hlaWdodCwKLQkJCQkJCSB0aWxlX3NpemUsIHBp
dGNoX3RpbGVzLAotCQkJCQkJIGd0dF9vZmZzZXRfcm90YXRlZCAqIHRpbGVfc2l6ZSwgMCk7Ci0K
LQkJCWd0dF9vZmZzZXRfcm90YXRlZCArPSByb3RfaW5mby0+cGxhbmVbaV0ud2lkdGggKiByb3Rf
aW5mby0+cGxhbmVbaV0uaGVpZ2h0OwotCi0JCQkvKgotCQkJICogRmlyc3QgcGl4ZWwgb2YgdGhl
IGZyYW1lYnVmZmVyIGZyb20KLQkJCSAqIHRoZSBzdGFydCBvZiB0aGUgcm90YXRlZCBndHQgbWFw
cGluZy4KLQkJCSAqLwotCQkJaW50ZWxfZmItPnJvdGF0ZWRbaV0ueCA9IHg7Ci0JCQlpbnRlbF9m
Yi0+cm90YXRlZFtpXS55ID0geTsKKwkJCWd0dF9vZmZzZXRfcm90YXRlZCArPQorCQkJCXNldHVw
X2ZiX3JvdGF0aW9uKGksICZwbGFuZV9pbmZvLAorCQkJCQkJICBndHRfb2Zmc2V0X3JvdGF0ZWQs
CisJCQkJCQkgIHgsIHksIHdpZHRoLCBoZWlnaHQsCisJCQkJCQkgIHRpbGVfc2l6ZSwKKwkJCQkJ
CSAgdGlsZV93aWR0aCwgdGlsZV9oZWlnaHQsCisJCQkJCQkgIGZiKTsKIAkJfSBlbHNlIHsKIAkJ
CXNpemUgPSBESVZfUk9VTkRfVVAoKHkgKyBoZWlnaHQpICogZmItPnBpdGNoZXNbaV0gKwogCQkJ
CQkgICAgeCAqIGNwcCwgdGlsZV9zaXplKTsKQEAgLTMwNzQsNiArMzEwOSw3IEBAIGludGVsX3Bs
YW5lX3JlbWFwX2d0dChzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQogCQkJ
CQkJICAgICAgRFJNX01PREVfUk9UQVRFXzAsIHRpbGVfc2l6ZSk7CiAJCW9mZnNldCAvPSB0aWxl
X3NpemU7CiAKKwkJV0FSTl9PTihpID49IEFSUkFZX1NJWkUoaW5mby0+cGxhbmUpKTsKIAkJaW5m
by0+cGxhbmVbaV0ub2Zmc2V0ID0gb2Zmc2V0OwogCQlpbmZvLT5wbGFuZVtpXS5zdHJpZGUgPSBE
SVZfUk9VTkRfVVAoZmItPnBpdGNoZXNbaV0sCiAJCQkJCQkgICAgIHRpbGVfd2lkdGggKiBjcHAp
OwotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1n
ZngK

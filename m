Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C1F3939F13C
	for <lists+intel-gfx@lfdr.de>; Tue,  8 Jun 2021 10:45:17 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 984FE6EB3C;
	Tue,  8 Jun 2021 08:45:15 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1E6B96EB3C;
 Tue,  8 Jun 2021 08:45:14 +0000 (UTC)
IronPort-SDR: w/4OHnyu2y0vMkVnO1RDfCkheBMTRbCqeCFQEd+2dctQp8QsD80yqyqAK5E5jjLN9vx+3u6oDu
 F1lvxdhK84Jg==
X-IronPort-AV: E=McAfee;i="6200,9189,10008"; a="202943843"
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="202943843"
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jun 2021 01:45:13 -0700
IronPort-SDR: pDefVqBFfu8RQtDeywTZm0PGKY6giZSrsFTMkgmW8R8edzKN988cDt+5OVey6OAacf0sYO9syN
 4lEvqxQHYPgQ==
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="440382092"
Received: from mrahim1x-mobl.gar.corp.intel.com (HELO mwauld-desk1.intel.com)
 ([10.215.170.251])
 by orsmga007-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jun 2021 01:45:10 -0700
From: Matthew Auld <matthew.auld@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  8 Jun 2021 09:44:27 +0100
Message-Id: <20210608084428.142676-6-matthew.auld@intel.com>
X-Mailer: git-send-email 2.26.3
In-Reply-To: <20210608084428.142676-1-matthew.auld@intel.com>
References: <20210608084428.142676-1-matthew.auld@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 5/6] drm/i915/ttm: switch over to
 ttm_buddy_man
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>,
 dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TW92ZSBiYWNrIHRvIHRoZSBidWRkeSBhbGxvY2F0b3IgZm9yIG1hbmFnaW5nIGRldmljZSBsb2Nh
bCBtZW1vcnksIGFuZApyZXN0b3JlIHRoZSBsb3N0IG1vY2sgc2VsZnRlc3RzLiBLZWVwIGFyb3Vu
ZCB0aGUgcmFuZ2UgbWFuYWdlciByZWxhdGVkCmJpdHMsIHNpbmNlIHdlIGxpa2VseSBuZWVkIHRo
aXMgZm9yIG1hbmFnaW5nIHN0b2xlbiBhdCBzb21lIHBvaW50LiBGb3IKc3RvbGVuIHdlIGFsc28g
ZG9uJ3QgbmVlZCB0byByZXNlcnZlIGFueXRoaW5nIHNvIG5vIG5lZWQgdG8gc3VwcG9ydCBhCmdl
bmVyaWMgcmVzZXJ2ZSBpbnRlcmZhY2UuCgp2MihUaG9tYXMpOgogICAgLSBiby0+cGFnZV9hbGln
bm1lbnQgaXMgaW4gcGFnZSB1bml0cywgbm90IGJ5dGVzCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3
IEF1bGQgPG1hdHRoZXcuYXVsZEBpbnRlbC5jb20+CkNjOiBUaG9tYXMgSGVsbHN0csO2bSA8dGhv
bWFzLmhlbGxzdHJvbUBsaW51eC5pbnRlbC5jb20+ClJldmlld2VkLWJ5OiBUaG9tYXMgSGVsbHN0
csO2bSA8dGhvbWFzLmhlbGxzdHJvbUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3R0bS5jICAgICAgIHwgIDI2ICstLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfbWVtb3J5X3JlZ2lvbi5jICAgIHwgIDU1ICstLS0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfbWVtb3J5X3JlZ2lvbi5oICAgIHwgIDE3IC0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9yZWdpb25fdHRtLmMgICAgICAgfCAxMDAgKysrLS0tLS0tLS0KIC4u
Li9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfbWVtb3J5X3JlZ2lvbi5jICB8IDE3MCArKysrKysr
KysrKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX3JlZ2lvbi5j
ICB8ICAxNSArLQogNiBmaWxlcyBjaGFuZ2VkLCAxNjggaW5zZXJ0aW9ucygrKSwgMjE1IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV90
dG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV90dG0uYwppbmRleCBjNjEy
Mjc1YzM2YzkuLjViZjFkMTk0NWRkNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX3R0bS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV90dG0uYwpAQCAtMTgxLDExICsxODEsNyBAQCBzdGF0aWMgYm9vbCBpOTE1X3R0bV9ldmljdGlv
bl92YWx1YWJsZShzdHJ1Y3QgdHRtX2J1ZmZlcl9vYmplY3QgKmJvLAogCXN0cnVjdCBkcm1faTkx
NV9nZW1fb2JqZWN0ICpvYmogPSBpOTE1X3R0bV90b19nZW0oYm8pOwogCiAJLyogV2lsbCBkbyBm
b3Igbm93LiBPdXIgcGlubmVkIG9iamVjdHMgYXJlIHN0aWxsIG9uIFRUTSdzIExSVSBsaXN0cyAq
LwotCWlmICghaTkxNV9nZW1fb2JqZWN0X2V2aWN0YWJsZShvYmopKQotCQlyZXR1cm4gZmFsc2U7
Ci0KLQkvKiBUaGlzIGlzbid0IHZhbGlkIHdpdGggYSBidWRkeSBhbGxvY2F0b3IgKi8KLQlyZXR1
cm4gdHRtX2JvX2V2aWN0aW9uX3ZhbHVhYmxlKGJvLCBwbGFjZSk7CisJcmV0dXJuIGk5MTVfZ2Vt
X29iamVjdF9ldmljdGFibGUob2JqKTsKIH0KIAogc3RhdGljIHZvaWQgaTkxNV90dG1fZXZpY3Rf
ZmxhZ3Moc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywKQEAgLTMyOCwxMSArMzI0LDE1IEBA
IGk5MTVfdHRtX3Jlc291cmNlX2dldF9zdChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2Jq
LAogCXN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCAqYm8gPSBpOTE1X2dlbV90b190dG0ob2JqKTsK
IAlzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiA9CiAJCXR0bV9tYW5hZ2VyX3R5cGUo
Ym8tPmJkZXYsIHJlcy0+bWVtX3R5cGUpOworCXN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICpt
ciA9IG9iai0+bW0ucmVnaW9uOwogCiAJaWYgKG1hbi0+dXNlX3R0KQogCQlyZXR1cm4gaTkxNV90
dG1fdHRfZ2V0X3N0KGJvLT50dG0pOwogCi0JcmV0dXJuIGludGVsX3JlZ2lvbl90dG1fbm9kZV90
b19zdChvYmotPm1tLnJlZ2lvbiwgcmVzLT5tbV9ub2RlKTsKKwlpZiAobXItPmlzX3JhbmdlX21h
bmFnZXIpCisJCXJldHVybiBpbnRlbF9yZWdpb25fdHRtX25vZGVfdG9fc3QobXIsIHJlcyk7CisJ
ZWxzZQorCQlyZXR1cm4gaTkxNV9zZ19mcm9tX2J1ZGR5X3Jlc291cmNlKHJlcywgbXItPnJlZ2lv
bi5zdGFydCk7CiB9CiAKIHN0YXRpYyBpbnQgaTkxNV90dG1fbW92ZShzdHJ1Y3QgdHRtX2J1ZmZl
cl9vYmplY3QgKmJvLCBib29sIGV2aWN0LApAQCAtNjU3LDIwICs2NTcsOCBAQCBpbnQgX19pOTE1
X2dlbV90dG1fb2JqZWN0X2luaXQoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSwKIAlz
dGF0aWMgc3RydWN0IGxvY2tfY2xhc3Nfa2V5IGxvY2tfY2xhc3M7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUgPSBtZW0tPmk5MTU7CiAJZW51bSB0dG1fYm9fdHlwZSBib190eXBlOwot
CXNpemVfdCBhbGlnbm1lbnQgPSAwOwogCWludCByZXQ7CiAKLQkvKiBBZGp1c3QgYWxpZ25tZW50
IHRvIEdQVS0gYW5kIENQVSBodWdlIHBhZ2Ugc2l6ZXMuICovCi0KLQlpZiAobWVtLT5pc19yYW5n
ZV9tYW5hZ2VyKSB7Ci0JCWlmIChzaXplID49IFNaXzFHKQotCQkJYWxpZ25tZW50ID0gU1pfMUcg
Pj4gUEFHRV9TSElGVDsKLQkJZWxzZSBpZiAoc2l6ZSA+PSBTWl8yTSkKLQkJCWFsaWdubWVudCA9
IFNaXzJNID4+IFBBR0VfU0hJRlQ7Ci0JCWVsc2UgaWYgKHNpemUgPj0gU1pfNjRLKQotCQkJYWxp
Z25tZW50ID0gU1pfNjRLID4+IFBBR0VfU0hJRlQ7Ci0JfQotCiAJZHJtX2dlbV9wcml2YXRlX29i
amVjdF9pbml0KCZpOTE1LT5kcm0sICZvYmotPmJhc2UsIHNpemUpOwogCWk5MTVfZ2VtX29iamVj
dF9pbml0KG9iaiwgJmk5MTVfZ2VtX3R0bV9vYmpfb3BzLCAmbG9ja19jbGFzcywgZmxhZ3MpOwog
CWk5MTVfZ2VtX29iamVjdF9pbml0X21lbW9yeV9yZWdpb24ob2JqLCBtZW0pOwpAQCAtNjkyLDcg
KzY4MCw3IEBAIGludCBfX2k5MTVfZ2VtX3R0bV9vYmplY3RfaW5pdChzdHJ1Y3QgaW50ZWxfbWVt
b3J5X3JlZ2lvbiAqbWVtLAogCSAqLwogCW9iai0+YmFzZS52bWFfbm9kZS5kcml2ZXJfcHJpdmF0
ZSA9IGk5MTVfZ2VtX3RvX3R0bShvYmopOwogCXJldCA9IHR0bV9ib19pbml0KCZpOTE1LT5iZGV2
LCBpOTE1X2dlbV90b190dG0ob2JqKSwgc2l6ZSwKLQkJCSAgYm9fdHlwZSwgJmk5MTVfc3lzX3Bs
YWNlbWVudCwgYWxpZ25tZW50LAorCQkJICBib190eXBlLCAmaTkxNV9zeXNfcGxhY2VtZW50LCAx
LAogCQkJICB0cnVlLCBOVUxMLCBOVUxMLCBpOTE1X3R0bV9ib19kZXN0cm95KTsKIAogCWlmICgh
cmV0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfbWVtb3J5X3JlZ2lv
bi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfbWVtb3J5X3JlZ2lvbi5jCmluZGV4IDEy
ZmI1NDIzZmQ1ZS4uZGY1OWY4ODRkMzdjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9tZW1vcnlfcmVnaW9uLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
bWVtb3J5X3JlZ2lvbi5jCkBAIC01LDYgKzUsNyBAQAogCiAjaW5jbHVkZSAiaW50ZWxfbWVtb3J5
X3JlZ2lvbi5oIgogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiaTkxNV90dG1fYnVk
ZHlfbWFuYWdlci5oIgogCiBzdGF0aWMgY29uc3Qgc3RydWN0IHsKIAl1MTYgY2xhc3M7CkBAIC0y
OCwxMSArMjksNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHsKIAl9LAogfTsKIAotc3RydWN0IGlu
dGVsX3JlZ2lvbl9yZXNlcnZlIHsKLQlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7Ci0Jc3RydWN0IHR0
bV9yZXNvdXJjZSAqcmVzOwotfTsKLQogc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKgogaW50
ZWxfbWVtb3J5X3JlZ2lvbl9sb29rdXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJ
CQkgICB1MTYgY2xhc3MsIHUxNiBpbnN0YW5jZSkKQEAgLTYzLDI3ICs1OSw2IEBAIGludGVsX21l
bW9yeV9yZWdpb25fYnlfdHlwZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlyZXR1
cm4gTlVMTDsKIH0KIAotLyoqCi0gKiBpbnRlbF9tZW1vcnlfcmVnaW9uX3VucmVzZXJ2ZSAtIFVu
cmVzZXJ2ZSBhbGwgcHJldmlvdXNseSByZXNlcnZlZAotICogcmFuZ2VzCi0gKiBAbWVtOiBUaGUg
cmVnaW9uIGNvbnRhaW5pbmcgdGhlIHJlc2VydmVkIHJhbmdlcy4KLSAqLwotdm9pZCBpbnRlbF9t
ZW1vcnlfcmVnaW9uX3VucmVzZXJ2ZShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtKQot
ewotCXN0cnVjdCBpbnRlbF9yZWdpb25fcmVzZXJ2ZSAqcmVzZXJ2ZSwgKm5leHQ7Ci0KLQlpZiAo
IW1lbS0+cHJpdl9vcHMgfHwgIW1lbS0+cHJpdl9vcHMtPmZyZWUpCi0JCXJldHVybjsKLQotCW11
dGV4X2xvY2soJm1lbS0+bW1fbG9jayk7Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJlc2Vy
dmUsIG5leHQsICZtZW0tPnJlc2VydmVkLCBsaW5rKSB7Ci0JCWxpc3RfZGVsKCZyZXNlcnZlLT5s
aW5rKTsKLQkJbWVtLT5wcml2X29wcy0+ZnJlZShtZW0sIHJlc2VydmUtPnJlcyk7Ci0JCWtmcmVl
KHJlc2VydmUpOwotCX0KLQltdXRleF91bmxvY2soJm1lbS0+bW1fbG9jayk7Ci19Ci0KIC8qKgog
ICogaW50ZWxfbWVtb3J5X3JlZ2lvbl9yZXNlcnZlIC0gUmVzZXJ2ZSBhIG1lbW9yeSByYW5nZQog
ICogQG1lbTogVGhlIHJlZ2lvbiBmb3Igd2hpY2ggd2Ugd2FudCB0byByZXNlcnZlIGEgcmFuZ2Uu
CkBAIC05NiwyOCArNzEsMTEgQEAgaW50IGludGVsX21lbW9yeV9yZWdpb25fcmVzZXJ2ZShzdHJ1
Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAogCQkJCXJlc291cmNlX3NpemVfdCBvZmZzZXQs
CiAJCQkJcmVzb3VyY2Vfc2l6ZV90IHNpemUpCiB7Ci0JaW50IHJldDsKLQlzdHJ1Y3QgaW50ZWxf
cmVnaW9uX3Jlc2VydmUgKnJlc2VydmU7Ci0KLQlpZiAoIW1lbS0+cHJpdl9vcHMgfHwgIW1lbS0+
cHJpdl9vcHMtPnJlc2VydmUpCi0JCXJldHVybiAtRUlOVkFMOwotCi0JcmVzZXJ2ZSA9IGt6YWxs
b2Moc2l6ZW9mKCpyZXNlcnZlKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFyZXNlcnZlKQotCQlyZXR1
cm4gLUVOT01FTTsKKwlzdHJ1Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiA9IG1lbS0+cmVn
aW9uX3ByaXZhdGU7CiAKLQlyZXNlcnZlLT5yZXMgPSBtZW0tPnByaXZfb3BzLT5yZXNlcnZlKG1l
bSwgb2Zmc2V0LCBzaXplKTsKLQlpZiAoSVNfRVJSKHJlc2VydmUtPnJlcykpIHsKLQkJcmV0ID0g
UFRSX0VSUihyZXNlcnZlLT5yZXMpOwotCQlrZnJlZShyZXNlcnZlKTsKLQkJcmV0dXJuIHJldDsK
LQl9Ci0KLQltdXRleF9sb2NrKCZtZW0tPm1tX2xvY2spOwotCWxpc3RfYWRkX3RhaWwoJnJlc2Vy
dmUtPmxpbmssICZtZW0tPnJlc2VydmVkKTsKLQltdXRleF91bmxvY2soJm1lbS0+bW1fbG9jayk7
CisJR0VNX0JVR19PTihtZW0tPmlzX3JhbmdlX21hbmFnZXIpOwogCi0JcmV0dXJuIDA7CisJcmV0
dXJuIGk5MTVfdHRtX2J1ZGR5X21hbl9yZXNlcnZlKG1hbiwgb2Zmc2V0LCBzaXplKTsKIH0KIAog
c3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKgpAQCAtMTQ5LDkgKzEwNyw2IEBAIGludGVsX21l
bW9yeV9yZWdpb25fY3JlYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCiAJbXV0
ZXhfaW5pdCgmbWVtLT5vYmplY3RzLmxvY2spOwogCUlOSVRfTElTVF9IRUFEKCZtZW0tPm9iamVj
dHMubGlzdCk7Ci0JSU5JVF9MSVNUX0hFQUQoJm1lbS0+cmVzZXJ2ZWQpOwotCi0JbXV0ZXhfaW5p
dCgmbWVtLT5tbV9sb2NrKTsKIAogCWlmIChvcHMtPmluaXQpIHsKIAkJZXJyID0gb3BzLT5pbml0
KG1lbSk7CkBAIC0xODIsMTEgKzEzNyw5IEBAIHN0YXRpYyB2b2lkIF9faW50ZWxfbWVtb3J5X3Jl
Z2lvbl9kZXN0cm95KHN0cnVjdCBrcmVmICprcmVmKQogCXN0cnVjdCBpbnRlbF9tZW1vcnlfcmVn
aW9uICptZW0gPQogCQljb250YWluZXJfb2Yoa3JlZiwgdHlwZW9mKCptZW0pLCBrcmVmKTsKIAot
CWludGVsX21lbW9yeV9yZWdpb25fdW5yZXNlcnZlKG1lbSk7CiAJaWYgKG1lbS0+b3BzLT5yZWxl
YXNlKQogCQltZW0tPm9wcy0+cmVsZWFzZShtZW0pOwogCi0JbXV0ZXhfZGVzdHJveSgmbWVtLT5t
bV9sb2NrKTsKIAltdXRleF9kZXN0cm95KCZtZW0tPm9iamVjdHMubG9jayk7CiAJa2ZyZWUobWVt
KTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX21lbW9yeV9yZWdp
b24uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX21lbW9yeV9yZWdpb24uaAppbmRleCBj
N2U2MzVkNjJlMWEuLmIwNGZiMjI3MjZkOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfbWVtb3J5X3JlZ2lvbi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X21lbW9yeV9yZWdpb24uaApAQCAtNTksMTkgKzU5LDEwIEBAIHN0cnVjdCBpbnRlbF9tZW1vcnlf
cmVnaW9uX29wcyB7CiAJCQkgICB1bnNpZ25lZCBpbnQgZmxhZ3MpOwogfTsKIAotc3RydWN0IGlu
dGVsX21lbW9yeV9yZWdpb25fcHJpdmF0ZV9vcHMgewotCXN0cnVjdCB0dG1fcmVzb3VyY2UgKigq
cmVzZXJ2ZSkoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSwKLQkJCQkJcmVzb3VyY2Vf
c2l6ZV90IG9mZnNldCwKLQkJCQkJcmVzb3VyY2Vfc2l6ZV90IHNpemUpOwotCXZvaWQgKCpmcmVl
KShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAotCQkgICAgIHN0cnVjdCB0dG1fcmVz
b3VyY2UgKnJlcyk7Ci19OwotCiBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiB7CiAJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTU7CiAKIAljb25zdCBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3Jl
Z2lvbl9vcHMgKm9wczsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbl9wcml2YXRl
X29wcyAqcHJpdl9vcHM7CiAKIAlzdHJ1Y3QgaW9fbWFwcGluZyBpb21hcDsKIAlzdHJ1Y3QgcmVz
b3VyY2UgcmVnaW9uOwpAQCAtNzksOCArNzAsNiBAQCBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lv
biB7CiAJLyogRm9yIGZha2UgTE1FTSAqLwogCXN0cnVjdCBkcm1fbW1fbm9kZSBmYWtlX21hcHBh
YmxlOwogCi0Jc3RydWN0IG11dGV4IG1tX2xvY2s7Ci0KIAlzdHJ1Y3Qga3JlZiBrcmVmOwogCiAJ
cmVzb3VyY2Vfc2l6ZV90IGlvX3N0YXJ0OwpAQCAtOTQsOCArODMsNiBAQCBzdHJ1Y3QgaW50ZWxf
bWVtb3J5X3JlZ2lvbiB7CiAJY2hhciBuYW1lWzE2XTsKIAlib29sIHByaXZhdGU7IC8qIG5vdCBm
b3IgdXNlcnNwYWNlICovCiAKLQlzdHJ1Y3QgbGlzdF9oZWFkIHJlc2VydmVkOwotCiAJZG1hX2Fk
ZHJfdCByZW1hcF9hZGRyOwogCiAJc3RydWN0IHsKQEAgLTEwMyw4ICs5MCw2IEBAIHN0cnVjdCBp
bnRlbF9tZW1vcnlfcmVnaW9uIHsKIAkJc3RydWN0IGxpc3RfaGVhZCBsaXN0OwogCX0gb2JqZWN0
czsKIAotCXNpemVfdCBjaHVua19zaXplOwotCXVuc2lnbmVkIGludCBtYXhfb3JkZXI7CiAJYm9v
bCBpc19yYW5nZV9tYW5hZ2VyOwogCiAJdm9pZCAqcmVnaW9uX3ByaXZhdGU7CkBAIC0xMzgsOCAr
MTIzLDYgQEAgX19wcmludGYoMiwgMykgdm9pZAogaW50ZWxfbWVtb3J5X3JlZ2lvbl9zZXRfbmFt
ZShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAogCQkJICAgICBjb25zdCBjaGFyICpm
bXQsIC4uLik7CiAKLXZvaWQgaW50ZWxfbWVtb3J5X3JlZ2lvbl91bnJlc2VydmUoc3RydWN0IGlu
dGVsX21lbW9yeV9yZWdpb24gKm1lbSk7Ci0KIGludCBpbnRlbF9tZW1vcnlfcmVnaW9uX3Jlc2Vy
dmUoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSwKIAkJCQlyZXNvdXJjZV9zaXplX3Qg
b2Zmc2V0LAogCQkJCXJlc291cmNlX3NpemVfdCBzaXplKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3JlZ2lvbl90dG0uYwppbmRleCA1YTY2NGY2Y2M5M2YuLjIzYTEzMzZkMjMzNSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcmVnaW9uX3R0bS5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uYwpAQCAtOCw2ICs4LDcgQEAKIAogI2lu
Y2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaTkxNV9zY2F0dGVybGlzdC5oIgorI2luY2x1
ZGUgImk5MTVfdHRtX2J1ZGR5X21hbmFnZXIuaCIKIAogI2luY2x1ZGUgImludGVsX3JlZ2lvbl90
dG0uaCIKIApAQCAtNjcsNzIgKzY4LDE3IEBAIGludCBpbnRlbF9yZWdpb25fdG9fdHRtX3R5cGUo
Y29uc3Qgc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSkKIAlyZXR1cm4gdHlwZTsKIH0K
IAotc3RhdGljIHN0cnVjdCB0dG1fcmVzb3VyY2UgKgotaW50ZWxfcmVnaW9uX3R0bV9ub2RlX3Jl
c2VydmUoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSwKLQkJCSAgICAgIHJlc291cmNl
X3NpemVfdCBvZmZzZXQsCi0JCQkgICAgICByZXNvdXJjZV9zaXplX3Qgc2l6ZSkKLXsKLQlzdHJ1
Y3QgdHRtX3Jlc291cmNlX21hbmFnZXIgKm1hbiA9IG1lbS0+cmVnaW9uX3ByaXZhdGU7Ci0Jc3Ry
dWN0IHR0bV9wbGFjZSBwbGFjZSA9IHt9OwotCXN0cnVjdCB0dG1fYnVmZmVyX29iamVjdCBtb2Nr
X2JvID0ge307Ci0Jc3RydWN0IHR0bV9yZXNvdXJjZSAqcmVzOwotCWludCByZXQ7Ci0KLQkvKgot
CSAqIEhhdmluZyB0byB1c2UgYSBtb2NrX2JvIGlzIHVuZm9ydHVuYXRlIGJ1dCBzdGVtcyBmcm9t
IHNvbWUKLQkgKiBkcml2ZXJzIGhhdmluZyBwcml2YXRlIG1hbmFnZXJzIHRoYXQgaW5zaXN0IHRv
IGtub3cgd2hhdCB0aGUKLQkgKiBhbGxvY2F0ZSBtZW1vcnkgaXMgaW50ZW5kZWQgZm9yLCB1c2lu
ZyBpdCB0byBzZW5kIHByaXZhdGUKLQkgKiBkYXRhIHRvIHRoZSBtYW5hZ2VyLiBBbHNvIHJlY2Vu
dGx5IHRoZSBibyBoYXMgYmVlbiB1c2VkIHRvIHNlbmQKLQkgKiBhbGlnbm1lbnQgaW5mbyB0byB0
aGUgbWFuYWdlci4gQXNzdW1lIHRoYXQgYXBhcnQgZnJvbSB0aGUgbGF0dGVyLAotCSAqIG5vbmUg
b2YgdGhlIG1hbmFnZXJzIHdlIHVzZSB3aWxsIGV2ZXIgYWNjZXNzIHRoZSBidWZmZXIgb2JqZWN0
Ci0JICogbWVtYmVycywgaG9waW5nIHdlIGNhbiBwYXNzIHRoZSBhbGlnbm1lbnQgaW5mbyBpbiB0
aGUKLQkgKiBzdHJ1Y3QgdHRtX3BsYWNlIGluIHRoZSBmdXR1cmUuCi0JICovCi0KLQlwbGFjZS5m
cGZuID0gb2Zmc2V0ID4+IFBBR0VfU0hJRlQ7Ci0JcGxhY2UubHBmbiA9IHBsYWNlLmZwZm4gKyAo
c2l6ZSA+PiBQQUdFX1NISUZUKTsKLQltb2NrX2JvLmJhc2Uuc2l6ZSA9IHNpemU7Ci0JcmV0ID0g
bWFuLT5mdW5jLT5hbGxvYyhtYW4sICZtb2NrX2JvLCAmcGxhY2UsICZyZXMpOwotCWlmIChyZXQg
PT0gLUVOT1NQQykKLQkJcmV0ID0gLUVOWElPOwotCi0JcmV0dXJuIHJldCA/IEVSUl9QVFIocmV0
KSA6IHJlczsKLX0KLQotLyoqCi0gKiBpbnRlbF9yZWdpb25fdHRtX25vZGVfZnJlZSAtIEZyZWUg
YSBub2RlIGFsbG9jYXRlZCBmcm9tIGEgcmVzb3VyY2UgbWFuYWdlcgotICogQG1lbTogVGhlIHJl
Z2lvbiB0aGUgbm9kZSB3YXMgYWxsb2NhdGVkIGZyb20uCi0gKiBAbm9kZTogVGhlIG9wYXF1ZSBu
b2RlIHJlcHJlc2VudGluZyBhbiBhbGxvY2F0aW9uLgotICovCi12b2lkIGludGVsX3JlZ2lvbl90
dG1fbm9kZV9mcmVlKHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0sCi0JCQkJc3RydWN0
IHR0bV9yZXNvdXJjZSAqcmVzKQotewotCXN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFu
ID0gbWVtLT5yZWdpb25fcHJpdmF0ZTsKLQotCW1hbi0+ZnVuYy0+ZnJlZShtYW4sIHJlcyk7Ci19
Ci0KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbl9wcml2YXRlX29wcyBw
cml2X29wcyA9IHsKLQkucmVzZXJ2ZSA9IGludGVsX3JlZ2lvbl90dG1fbm9kZV9yZXNlcnZlLAot
CS5mcmVlID0gaW50ZWxfcmVnaW9uX3R0bV9ub2RlX2ZyZWUsCi19OwotCiBpbnQgaW50ZWxfcmVn
aW9uX3R0bV9pbml0KHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0pCiB7CiAJc3RydWN0
IHR0bV9kZXZpY2UgKmJkZXYgPSAmbWVtLT5pOTE1LT5iZGV2OwogCWludCBtZW1fdHlwZSA9IGlu
dGVsX3JlZ2lvbl90b190dG1fdHlwZShtZW0pOwogCWludCByZXQ7CiAKLQlyZXQgPSB0dG1fcmFu
Z2VfbWFuX2luaXQoYmRldiwgbWVtX3R5cGUsIGZhbHNlLAotCQkJCSByZXNvdXJjZV9zaXplKCZt
ZW0tPnJlZ2lvbikgPj4gUEFHRV9TSElGVCk7CisJcmV0ID0gaTkxNV90dG1fYnVkZHlfbWFuX2lu
aXQoYmRldiwgbWVtX3R5cGUsIGZhbHNlLAorCQkJCSAgICAgIHJlc291cmNlX3NpemUoJm1lbS0+
cmVnaW9uKSwgUEFHRV9TSVpFKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JbWVtLT5j
aHVua19zaXplID0gUEFHRV9TSVpFOwotCW1lbS0+bWF4X29yZGVyID0KLQkJZ2V0X29yZGVyKHJv
dW5kZG93bl9wb3dfb2ZfdHdvKHJlc291cmNlX3NpemUoJm1lbS0+cmVnaW9uKSkpOwotCW1lbS0+
aXNfcmFuZ2VfbWFuYWdlciA9IHRydWU7Ci0JbWVtLT5wcml2X29wcyA9ICZwcml2X29wczsKIAlt
ZW0tPnJlZ2lvbl9wcml2YXRlID0gdHRtX21hbmFnZXJfdHlwZShiZGV2LCBtZW1fdHlwZSk7CiAK
IAlyZXR1cm4gMDsKQEAgLTE1MCw4ICs5Niw4IEBAIHZvaWQgaW50ZWxfcmVnaW9uX3R0bV9maW5p
KHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0pCiB7CiAJaW50IHJldDsKIAotCXJldCA9
IHR0bV9yYW5nZV9tYW5fZmluaSgmbWVtLT5pOTE1LT5iZGV2LAotCQkJCSBpbnRlbF9yZWdpb25f
dG9fdHRtX3R5cGUobWVtKSk7CisJcmV0ID0gaTkxNV90dG1fYnVkZHlfbWFuX2ZpbmkoJm1lbS0+
aTkxNS0+YmRldiwKKwkJCQkgICAgICBpbnRlbF9yZWdpb25fdG9fdHRtX3R5cGUobWVtKSk7CiAJ
R0VNX1dBUk5fT04ocmV0KTsKIAltZW0tPnJlZ2lvbl9wcml2YXRlID0gTlVMTDsKIH0KQEAgLTIw
NiwyNSArMTUyLDMzIEBAIGludGVsX3JlZ2lvbl90dG1fbm9kZV9hbGxvYyhzdHJ1Y3QgaW50ZWxf
bWVtb3J5X3JlZ2lvbiAqbWVtLAogCXN0cnVjdCB0dG1fcmVzb3VyY2UgKnJlczsKIAlpbnQgcmV0
OwogCi0JLyoKLQkgKiBXZSBpZ25vcmUgdGhlIGZsYWdzIGZvciBub3cgc2luY2Ugd2UncmUgdXNp
bmcgdGhlIHJhbmdlCi0JICogbWFuYWdlciBhbmQgY29udGlnb3VzIGFuZCBtaW4gcGFnZSBzaXpl
IHdvdWxkIGJlIGZ1bGZpbGxlZAotCSAqIGJ5IGRlZmF1bHQgaWYgc2l6ZSBpcyBtaW4gcGFnZSBz
aXplIGFsaWduZWQuCi0JICovCiAJbW9ja19iby5iYXNlLnNpemUgPSBzaXplOwotCi0JaWYgKG1l
bS0+aXNfcmFuZ2VfbWFuYWdlcikgewotCQlpZiAoc2l6ZSA+PSBTWl8xRykKLQkJCW1vY2tfYm8u
cGFnZV9hbGlnbm1lbnQgPSBTWl8xRyA+PiBQQUdFX1NISUZUOwotCQllbHNlIGlmIChzaXplID49
IFNaXzJNKQotCQkJbW9ja19iby5wYWdlX2FsaWdubWVudCA9IFNaXzJNID4+IFBBR0VfU0hJRlQ7
Ci0JCWVsc2UgaWYgKHNpemUgPj0gU1pfNjRLKQotCQkJbW9ja19iby5wYWdlX2FsaWdubWVudCA9
IFNaXzY0SyA+PiBQQUdFX1NISUZUOwotCX0KKwltb2NrX2JvLnBhZ2VfYWxpZ25tZW50ID0gMTsK
KwlwbGFjZS5mbGFncyA9IGZsYWdzOwogCiAJcmV0ID0gbWFuLT5mdW5jLT5hbGxvYyhtYW4sICZt
b2NrX2JvLCAmcGxhY2UsICZyZXMpOwogCWlmIChyZXQgPT0gLUVOT1NQQykKIAkJcmV0ID0gLUVO
WElPOwogCXJldHVybiByZXQgPyBFUlJfUFRSKHJldCkgOiByZXM7CiB9CisKICNlbmRpZgorCisv
KioKKyAqIGludGVsX3JlZ2lvbl90dG1faW5pdCAtIEluaXRpYWxpemUgYSBtZW1vcnkgcmVnaW9u
IGZvciBUVE0uCisgKiBAbWVtOiBUaGUgcmVnaW9uIHRvIGluaXRpYWxpemUuCisgKgorICogVGhp
cyBmdW5jdGlvbiBpbml0aWFsaXplcyBhIHN1aXRhYmxlIFRUTSByZXNvdXJjZSBtYW5hZ2VyIGZv
ciB0aGUKKyAqIHJlZ2lvbiwgYW5kIGlmIGl0J3MgYSBMTUVNIHJlZ2lvbiB0eXBlLCBhdHRhY2hl
cyBpdCB0byB0aGUgVFRNCisgKiBkZXZpY2UuIE1PQ0sgcmVnaW9ucyBhcmUgTk9UIGF0dGFjaGVk
IHRvIHRoZSBUVE0gZGV2aWNlLCBzaW5jZSB3ZSBkb24ndAorICogaGF2ZSBvbmUgZm9yIHRoZSBt
b2NrIHNlbGZ0ZXN0cy4KKyAqCisgKiBSZXR1cm46IDAgb24gc3VjY2VzcywgbmVnYXRpdmUgZXJy
b3IgY29kZSBvbiBmYWlsdXJlLgorICovCit2b2lkIGludGVsX3JlZ2lvbl90dG1fbm9kZV9mcmVl
KHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0sCisJCQkJc3RydWN0IHR0bV9yZXNvdXJj
ZSAqcmVzKQoreworCXN0cnVjdCB0dG1fcmVzb3VyY2VfbWFuYWdlciAqbWFuID0gbWVtLT5yZWdp
b25fcHJpdmF0ZTsKKworCW1hbi0+ZnVuYy0+ZnJlZShtYW4sIHJlcyk7Cit9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfbWVtb3J5X3JlZ2lvbi5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2ludGVsX21lbW9yeV9yZWdpb24uYwppbmRl
eCBjODVkNTE2Yjg1Y2QuLmRjMjNkNjk5ZWNiNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvc2VsZnRlc3RzL2ludGVsX21lbW9yeV9yZWdpb24uYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfbWVtb3J5X3JlZ2lvbi5jCkBAIC0yMCw3ICsyMCw5IEBA
CiAjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9p
bnRlbF9lbmdpbmVfdXNlci5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCisjaW5jbHVkZSAi
aTkxNV9idWRkeS5oIgogI2luY2x1ZGUgImk5MTVfbWVtY3B5LmgiCisjaW5jbHVkZSAiaTkxNV90
dG1fYnVkZHlfbWFuYWdlci5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5o
IgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pOTE1X3JhbmRvbS5oIgogCkBAIC01NywxMCArNTksOSBA
QCBzdGF0aWMgaW50IGlndF9tb2NrX2ZpbGwodm9pZCAqYXJnKQogCUxJU1RfSEVBRChvYmplY3Rz
KTsKIAlpbnQgZXJyID0gMDsKIAotCXBhZ2Vfc2l6ZSA9IG1lbS0+Y2h1bmtfc2l6ZTsKKwlwYWdl
X3NpemUgPSBQQUdFX1NJWkU7CisJbWF4X3BhZ2VzID0gZGl2NjRfdTY0KHRvdGFsLCBwYWdlX3Np
emUpOwogCXJlbSA9IHRvdGFsOwotcmV0cnk6Ci0JbWF4X3BhZ2VzID0gZGl2NjRfdTY0KHJlbSwg
cGFnZV9zaXplKTsKIAogCWZvcl9lYWNoX3ByaW1lX251bWJlcl9mcm9tKHBhZ2VfbnVtLCAxLCBt
YXhfcGFnZXMpIHsKIAkJcmVzb3VyY2Vfc2l6ZV90IHNpemUgPSBwYWdlX251bSAqIHBhZ2Vfc2l6
ZTsKQEAgLTg2LDExICs4Nyw2IEBAIHN0YXRpYyBpbnQgaWd0X21vY2tfZmlsbCh2b2lkICphcmcp
CiAJCWVyciA9IDA7CiAJaWYgKGVyciA9PSAtRU5YSU8pIHsKIAkJaWYgKHBhZ2VfbnVtICogcGFn
ZV9zaXplIDw9IHJlbSkgewotCQkJaWYgKG1lbS0+aXNfcmFuZ2VfbWFuYWdlciAmJiBtYXhfcGFn
ZXMgPiAxKSB7Ci0JCQkJbWF4X3BhZ2VzID4+PSAxOwotCQkJCWdvdG8gcmV0cnk7Ci0JCQl9Ci0K
IAkJCXByX2VycigiJXMgZmFpbGVkLCBzcGFjZSBzdGlsbCBsZWZ0IGluIHJlZ2lvblxuIiwKIAkJ
CSAgICAgICBfX2Z1bmNfXyk7CiAJCQllcnIgPSAtRUlOVkFMOwpAQCAtMTU3LDYgKzE1Myw3IEBA
IHN0YXRpYyBib29sIGlzX2NvbnRpZ3VvdXMoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aikKIHN0YXRpYyBpbnQgaWd0X21vY2tfcmVzZXJ2ZSh2b2lkICphcmcpCiB7CiAJc3RydWN0IGlu
dGVsX21lbW9yeV9yZWdpb24gKm1lbSA9IGFyZzsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSA9IG1lbS0+aTkxNTsKIAlyZXNvdXJjZV9zaXplX3QgYXZhaWwgPSByZXNvdXJjZV9zaXpl
KCZtZW0tPnJlZ2lvbik7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKIAljb25z
dCB1MzIgY2h1bmtfc2l6ZSA9IFNaXzMyTTsKQEAgLTE2NiwxNiArMTYzLDE4IEBAIHN0YXRpYyBp
bnQgaWd0X21vY2tfcmVzZXJ2ZSh2b2lkICphcmcpCiAJTElTVF9IRUFEKG9iamVjdHMpOwogCWlu
dCBlcnIgPSAwOwogCi0JaWYgKCFsaXN0X2VtcHR5KCZtZW0tPnJlc2VydmVkKSkgewotCQlwcl9l
cnIoIiVzIHJlZ2lvbiByZXNlcnZlZCBsaXN0IGlzIG5vdCBlbXB0eVxuIiwgX19mdW5jX18pOwot
CQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KIAljb3VudCA9IGF2YWlsIC8gY2h1bmtfc2l6ZTsKIAlv
cmRlciA9IGk5MTVfcmFuZG9tX29yZGVyKGNvdW50LCAmcHJuZyk7CiAJaWYgKCFvcmRlcikKIAkJ
cmV0dXJuIDA7CiAKKwltZW0gPSBtb2NrX3JlZ2lvbl9jcmVhdGUoaTkxNSwgMCwgU1pfMkcsIEk5
MTVfR1RUX1BBR0VfU0laRV80SywgMCk7CisJaWYgKElTX0VSUihtZW0pKSB7CisJCXByX2Vycigi
ZmFpbGVkIHRvIGNyZWF0ZSBtZW1vcnkgcmVnaW9uXG4iKTsKKwkJZXJyID0gUFRSX0VSUihtZW0p
OworCQlnb3RvIG91dF9jbG9zZTsKKwl9CisKIAkvKiBSZXNlcnZlIGEgYnVuY2ggb2YgcmFuZ2Vz
IHdpdGhpbiB0aGUgcmVnaW9uICovCiAJZm9yIChpID0gMDsgaSA8IGNvdW50OyArK2kpIHsKIAkJ
dTY0IHN0YXJ0ID0gb3JkZXJbaV0gKiBjaHVua19zaXplOwpAQCAtMjA1LDE4ICsyMDQsMTIgQEAg
c3RhdGljIGludCBpZ3RfbW9ja19yZXNlcnZlKHZvaWQgKmFyZykKIAlkbyB7CiAJCXUzMiBzaXpl
ID0gaTkxNV9wcmFuZG9tX3UzMl9tYXhfc3RhdGUoY3VyX2F2YWlsLCAmcHJuZyk7CiAKLXJldHJ5
OgogCQlzaXplID0gbWF4X3QodTMyLCByb3VuZF91cChzaXplLCBQQUdFX1NJWkUpLCBQQUdFX1NJ
WkUpOwogCQlvYmogPSBpZ3Rfb2JqZWN0X2NyZWF0ZShtZW0sICZvYmplY3RzLCBzaXplLCAwKTsK
IAkJaWYgKElTX0VSUihvYmopKSB7Ci0JCQlpZiAoUFRSX0VSUihvYmopID09IC1FTlhJTykgewot
CQkJCWlmIChtZW0tPmlzX3JhbmdlX21hbmFnZXIgJiYKLQkJCQkgICAgc2l6ZSA+IG1lbS0+Y2h1
bmtfc2l6ZSkgewotCQkJCQlzaXplID4+PSAxOwotCQkJCQlnb3RvIHJldHJ5OwotCQkJCX0KKwkJ
CWlmIChQVFJfRVJSKG9iaikgPT0gLUVOWElPKQogCQkJCWJyZWFrOwotCQkJfQorCiAJCQllcnIg
PSBQVFJfRVJSKG9iaik7CiAJCQlnb3RvIG91dF9jbG9zZTsKIAkJfQpAQCAtMjMyLDcgKzIyNSw3
IEBAIHN0YXRpYyBpbnQgaWd0X21vY2tfcmVzZXJ2ZSh2b2lkICphcmcpCiBvdXRfY2xvc2U6CiAJ
a2ZyZWUob3JkZXIpOwogCWNsb3NlX29iamVjdHMobWVtLCAmb2JqZWN0cyk7Ci0JaW50ZWxfbWVt
b3J5X3JlZ2lvbl91bnJlc2VydmUobWVtKTsKKwlpbnRlbF9tZW1vcnlfcmVnaW9uX3B1dChtZW0p
OwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTI1Miw3ICsyNDUsNyBAQCBzdGF0aWMgaW50IGlndF9t
b2NrX2NvbnRpZ3VvdXModm9pZCAqYXJnKQogCXRvdGFsID0gcmVzb3VyY2Vfc2l6ZSgmbWVtLT5y
ZWdpb24pOwogCiAJLyogTWluIHNpemUgKi8KLQlvYmogPSBpZ3Rfb2JqZWN0X2NyZWF0ZShtZW0s
ICZvYmplY3RzLCBtZW0tPmNodW5rX3NpemUsCisJb2JqID0gaWd0X29iamVjdF9jcmVhdGUobWVt
LCAmb2JqZWN0cywgUEFHRV9TSVpFLAogCQkJCUk5MTVfQk9fQUxMT0NfQ09OVElHVU9VUyk7CiAJ
aWYgKElTX0VSUihvYmopKQogCQlyZXR1cm4gUFRSX0VSUihvYmopOwpAQCAtMzMzLDE3ICszMjYs
MTUgQEAgc3RhdGljIGludCBpZ3RfbW9ja19jb250aWd1b3VzKHZvaWQgKmFyZykKIAltaW4gPSB0
YXJnZXQ7CiAJdGFyZ2V0ID0gdG90YWwgPj4gMTsKIAotCWlmICghbWVtLT5pc19yYW5nZV9tYW5h
Z2VyKSB7Ci0JCS8qIE1ha2Ugc3VyZSB3ZSBjYW4gc3RpbGwgYWxsb2NhdGUgYWxsIHRoZSBmcmFn
bWVudGVkIHNwYWNlICovCi0JCW9iaiA9IGlndF9vYmplY3RfY3JlYXRlKG1lbSwgJm9iamVjdHMs
IHRhcmdldCwgMCk7Ci0JCWlmIChJU19FUlIob2JqKSkgewotCQkJZXJyID0gUFRSX0VSUihvYmop
OwotCQkJZ290byBlcnJfY2xvc2Vfb2JqZWN0czsKLQkJfQotCi0JCWlndF9vYmplY3RfcmVsZWFz
ZShvYmopOworCS8qIE1ha2Ugc3VyZSB3ZSBjYW4gc3RpbGwgYWxsb2NhdGUgYWxsIHRoZSBmcmFn
bWVudGVkIHNwYWNlICovCisJb2JqID0gaWd0X29iamVjdF9jcmVhdGUobWVtLCAmb2JqZWN0cywg
dGFyZ2V0LCAwKTsKKwlpZiAoSVNfRVJSKG9iaikpIHsKKwkJZXJyID0gUFRSX0VSUihvYmopOwor
CQlnb3RvIGVycl9jbG9zZV9vYmplY3RzOwogCX0KIAorCWlndF9vYmplY3RfcmVsZWFzZShvYmop
OworCiAJLyoKIAkgKiBFdmVuIHRob3VnaCB3ZSBoYXZlIGVub3VnaCBmcmVlIHNwYWNlLCB3ZSBk
b24ndCBoYXZlIGEgYmlnIGVub3VnaAogCSAqIGNvbnRpZ3VvdXMgYmxvY2suIE1ha2Ugc3VyZSB0
aGF0IGhvbGRzIHRydWUuCkBAIC0zNjIsNyArMzUzLDcgQEAgc3RhdGljIGludCBpZ3RfbW9ja19j
b250aWd1b3VzKHZvaWQgKmFyZykKIAkJfQogCiAJCXRhcmdldCA+Pj0gMTsKLQl9IHdoaWxlICh0
YXJnZXQgPj0gbWVtLT5jaHVua19zaXplKTsKKwl9IHdoaWxlICh0YXJnZXQgPj0gUEFHRV9TSVpF
KTsKIAogZXJyX2Nsb3NlX29iamVjdHM6CiAJbGlzdF9zcGxpY2VfdGFpbCgmaG9sZXMsICZvYmpl
Y3RzKTsKQEAgLTM3NCw3ICszNjUsOSBAQCBzdGF0aWMgaW50IGlndF9tb2NrX3NwbGludGVyZWRf
cmVnaW9uKHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtID0g
YXJnOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gbWVtLT5pOTE1OworCXN0cnVj
dCBpOTE1X3R0bV9idWRkeV9yZXNvdXJjZSAqcmVzOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmo7CisJc3RydWN0IGk5MTVfYnVkZHlfbW0gKm1tOwogCXVuc2lnbmVkIGludCBleHBl
Y3RlZF9vcmRlcjsKIAlMSVNUX0hFQUQob2JqZWN0cyk7CiAJdTY0IHNpemU7CkBAIC0zODIsNyAr
Mzc1LDcgQEAgc3RhdGljIGludCBpZ3RfbW9ja19zcGxpbnRlcmVkX3JlZ2lvbih2b2lkICphcmcp
CiAKIAkvKgogCSAqIFNhbml0eSBjaGVjayB3ZSBjYW4gc3RpbGwgYWxsb2NhdGUgZXZlcnl0aGlu
ZyBldmVuIGlmIHRoZQotCSAqIG1heF9vcmRlciAhPSBtbS5zaXplLiBpLmUgb3VyIHN0YXJ0aW5n
IGFkZHJlc3Mgc3BhY2Ugc2l6ZSBpcyBub3QgYQorCSAqIG1tLm1heF9vcmRlciAhPSBtbS5zaXpl
LiBpLmUgb3VyIHN0YXJ0aW5nIGFkZHJlc3Mgc3BhY2Ugc2l6ZSBpcyBub3QgYQogCSAqIHBvd2Vy
LW9mLXR3by4KIAkgKi8KIApAQCAtMzkxLDIwICszODQsMjkgQEAgc3RhdGljIGludCBpZ3RfbW9j
a19zcGxpbnRlcmVkX3JlZ2lvbih2b2lkICphcmcpCiAJaWYgKElTX0VSUihtZW0pKQogCQlyZXR1
cm4gUFRSX0VSUihtZW0pOwogCi0JZXhwZWN0ZWRfb3JkZXIgPSBnZXRfb3JkZXIocm91bmRkb3du
X3Bvd19vZl90d28oc2l6ZSkpOwotCWlmIChtZW0tPm1heF9vcmRlciAhPSBleHBlY3RlZF9vcmRl
cikgewotCQlwcl9lcnIoIiVzIG9yZGVyIG1pc21hdGNoKCV1ICE9ICV1KVxuIiwKLQkJICAgICAg
IF9fZnVuY19fLCBtZW0tPm1heF9vcmRlciwgZXhwZWN0ZWRfb3JkZXIpOwotCQllcnIgPSAtRUlO
VkFMOwotCQlnb3RvIG91dF9wdXQ7Ci0JfQotCiAJb2JqID0gaWd0X29iamVjdF9jcmVhdGUobWVt
LCAmb2JqZWN0cywgc2l6ZSwgMCk7CiAJaWYgKElTX0VSUihvYmopKSB7CiAJCWVyciA9IFBUUl9F
UlIob2JqKTsKIAkJZ290byBvdXRfY2xvc2U7CiAJfQogCisJcmVzID0gdG9fdHRtX2J1ZGR5X3Jl
c291cmNlKG9iai0+bW0uc3RfbW1fbm9kZSk7CisJbW0gPSByZXMtPm1tOworCWlmIChtbS0+c2l6
ZSAhPSBzaXplKSB7CisJCXByX2VycigiJXMgc2l6ZSBtaXNtYXRjaCglbGx1ICE9ICVsbHUpXG4i
LAorCQkgICAgICAgX19mdW5jX18sIG1tLT5zaXplLCBzaXplKTsKKwkJZXJyID0gLUVJTlZBTDsK
KwkJZ290byBvdXRfcHV0OworCX0KKworCWV4cGVjdGVkX29yZGVyID0gZ2V0X29yZGVyKHJvdW5k
ZG93bl9wb3dfb2ZfdHdvKHNpemUpKTsKKwlpZiAobW0tPm1heF9vcmRlciAhPSBleHBlY3RlZF9v
cmRlcikgeworCQlwcl9lcnIoIiVzIG9yZGVyIG1pc21hdGNoKCV1ICE9ICV1KVxuIiwKKwkJICAg
ICAgIF9fZnVuY19fLCBtbS0+bWF4X29yZGVyLCBleHBlY3RlZF9vcmRlcik7CisJCWVyciA9IC1F
SU5WQUw7CisJCWdvdG8gb3V0X3B1dDsKKwl9CisKIAljbG9zZV9vYmplY3RzKG1lbSwgJm9iamVj
dHMpOwogCiAJLyoKQEAgLTQxNSwxNSArNDE3LDEyIEBAIHN0YXRpYyBpbnQgaWd0X21vY2tfc3Bs
aW50ZXJlZF9yZWdpb24odm9pZCAqYXJnKQogCSAqIHN1cmUgdGhhdCBkb2VzIGluZGVlZCBob2xk
IHRydWUuCiAJICovCiAKLQlpZiAoIW1lbS0+aXNfcmFuZ2VfbWFuYWdlcikgewotCQlvYmogPSBp
Z3Rfb2JqZWN0X2NyZWF0ZShtZW0sICZvYmplY3RzLCBzaXplLAotCQkJCQlJOTE1X0JPX0FMTE9D
X0NPTlRJR1VPVVMpOwotCQlpZiAoIUlTX0VSUihvYmopKSB7Ci0JCQlwcl9lcnIoIiVzIHRvbyBs
YXJnZSBjb250aWd1b3VzIGFsbG9jYXRpb24gd2FzIG5vdCByZWplY3RlZFxuIiwKLQkJCSAgICAg
ICBfX2Z1bmNfXyk7Ci0JCQllcnIgPSAtRUlOVkFMOwotCQkJZ290byBvdXRfY2xvc2U7Ci0JCX0K
KwlvYmogPSBpZ3Rfb2JqZWN0X2NyZWF0ZShtZW0sICZvYmplY3RzLCBzaXplLCBJOTE1X0JPX0FM
TE9DX0NPTlRJR1VPVVMpOworCWlmICghSVNfRVJSKG9iaikpIHsKKwkJcHJfZXJyKCIlcyB0b28g
bGFyZ2UgY29udGlndW91cyBhbGxvY2F0aW9uIHdhcyBub3QgcmVqZWN0ZWRcbiIsCisJCSAgICAg
ICBfX2Z1bmNfXyk7CisJCWVyciA9IC1FSU5WQUw7CisJCWdvdG8gb3V0X2Nsb3NlOwogCX0KIAog
CW9iaiA9IGlndF9vYmplY3RfY3JlYXRlKG1lbSwgJm9iamVjdHMsIHJvdW5kZG93bl9wb3dfb2Zf
dHdvKHNpemUpLApAQCAtNDQyLDYgKzQ0MSw3NCBAQCBzdGF0aWMgaW50IGlndF9tb2NrX3NwbGlu
dGVyZWRfcmVnaW9uKHZvaWQgKmFyZykKIAlyZXR1cm4gZXJyOwogfQogCisjaWZuZGVmIFNaXzhH
CisjZGVmaW5lIFNaXzhHIEJJVF9VTEwoMzMpCisjZW5kaWYKKworc3RhdGljIGludCBpZ3RfbW9j
a19tYXhfc2VnbWVudCh2b2lkICphcmcpCit7CisJY29uc3QgdW5zaWduZWQgaW50IG1heF9zZWdt
ZW50ID0gaTkxNV9zZ19zZWdtZW50X3NpemUoKTsKKwlzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lv
biAqbWVtID0gYXJnOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gbWVtLT5pOTE1
OworCXN0cnVjdCBpOTE1X3R0bV9idWRkeV9yZXNvdXJjZSAqcmVzOworCXN0cnVjdCBkcm1faTkx
NV9nZW1fb2JqZWN0ICpvYmo7CisJc3RydWN0IGk5MTVfYnVkZHlfYmxvY2sgKmJsb2NrOworCXN0
cnVjdCBpOTE1X2J1ZGR5X21tICptbTsKKwlzdHJ1Y3QgbGlzdF9oZWFkICpibG9ja3M7CisJc3Ry
dWN0IHNjYXR0ZXJsaXN0ICpzZzsKKwlMSVNUX0hFQUQob2JqZWN0cyk7CisJdTY0IHNpemU7CisJ
aW50IGVyciA9IDA7CisKKwkvKgorCSAqIFdoaWxlIHdlIG1heSBjcmVhdGUgdmVyeSBsYXJnZSBj
b250aWd1b3VzIGJsb2Nrcywgd2UgbWF5IG5lZWQKKwkgKiB0byBicmVhayB0aG9zZSBkb3duIGZv
ciBjb25zdW1wdGlvbiBlbHNld2hlcmUuIEluIHBhcnRpY3VsYXIsCisJICogZG1hLW1hcHBpbmcg
d2l0aCBzY2F0dGVybGlzdCBlbGVtZW50cyBoYXZlIGFuIGltcGxpY2l0IGxpbWl0IG9mCisJICog
VUlOVF9NQVggb24gZWFjaCBlbGVtZW50LgorCSAqLworCisJc2l6ZSA9IFNaXzhHOworCW1lbSA9
IG1vY2tfcmVnaW9uX2NyZWF0ZShpOTE1LCAwLCBzaXplLCBQQUdFX1NJWkUsIDApOworCWlmIChJ
U19FUlIobWVtKSkKKwkJcmV0dXJuIFBUUl9FUlIobWVtKTsKKworCW9iaiA9IGlndF9vYmplY3Rf
Y3JlYXRlKG1lbSwgJm9iamVjdHMsIHNpemUsIDApOworCWlmIChJU19FUlIob2JqKSkgeworCQll
cnIgPSBQVFJfRVJSKG9iaik7CisJCWdvdG8gb3V0X3B1dDsKKwl9CisKKwlyZXMgPSB0b190dG1f
YnVkZHlfcmVzb3VyY2Uob2JqLT5tbS5zdF9tbV9ub2RlKTsKKwlibG9ja3MgPSAmcmVzLT5ibG9j
a3M7CisJbW0gPSByZXMtPm1tOworCXNpemUgPSAwOworCWxpc3RfZm9yX2VhY2hfZW50cnkoYmxv
Y2ssIGJsb2NrcywgbGluaykgeworCQlpZiAoaTkxNV9idWRkeV9ibG9ja19zaXplKG1tLCBibG9j
aykgPiBzaXplKQorCQkJc2l6ZSA9IGk5MTVfYnVkZHlfYmxvY2tfc2l6ZShtbSwgYmxvY2spOwor
CX0KKwlpZiAoc2l6ZSA8IG1heF9zZWdtZW50KSB7CisJCXByX2VycigiJXM6IEZhaWxlZCB0byBj
cmVhdGUgYSBodWdlIGNvbnRpZ3VvdXMgYmxvY2sgWz4gJXVdLCBsYXJnZXN0IGJsb2NrICVsbGRc
biIsCisJCSAgICAgICBfX2Z1bmNfXywgbWF4X3NlZ21lbnQsIHNpemUpOworCQllcnIgPSAtRUlO
VkFMOworCQlnb3RvIG91dF9jbG9zZTsKKwl9CisKKwlmb3IgKHNnID0gb2JqLT5tbS5wYWdlcy0+
c2dsOyBzZzsgc2cgPSBzZ19uZXh0KHNnKSkgeworCQlpZiAoc2ctPmxlbmd0aCA+IG1heF9zZWdt
ZW50KSB7CisJCQlwcl9lcnIoIiVzOiBDcmVhdGVkIGFuIG92ZXJzaXplZCBzY2F0dGVybGlzdCBl
bnRyeSwgJXUgPiAldVxuIiwKKwkJCSAgICAgICBfX2Z1bmNfXywgc2ctPmxlbmd0aCwgbWF4X3Nl
Z21lbnQpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gb3V0X2Nsb3NlOworCQl9CisJfQor
CitvdXRfY2xvc2U6CisJY2xvc2Vfb2JqZWN0cyhtZW0sICZvYmplY3RzKTsKK291dF9wdXQ6CisJ
aW50ZWxfbWVtb3J5X3JlZ2lvbl9wdXQobWVtKTsKKwlyZXR1cm4gZXJyOworfQorCiBzdGF0aWMg
aW50IGlndF9ncHVfd3JpdGVfZHcoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCQkJICAgIHN0
cnVjdCBpOTE1X3ZtYSAqdm1hLAogCQkJICAgIHUzMiBkd29yZCwKQEAgLTEwNDYsNiArMTExMyw3
IEBAIGludCBpbnRlbF9tZW1vcnlfcmVnaW9uX21vY2tfc2VsZnRlc3RzKHZvaWQpCiAJCVNVQlRF
U1QoaWd0X21vY2tfZmlsbCksCiAJCVNVQlRFU1QoaWd0X21vY2tfY29udGlndW91cyksCiAJCVNV
QlRFU1QoaWd0X21vY2tfc3BsaW50ZXJlZF9yZWdpb24pLAorCQlTVUJURVNUKGlndF9tb2NrX21h
eF9zZWdtZW50KSwKIAl9OwogCXN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW07CiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTU7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0
ZXN0cy9tb2NrX3JlZ2lvbi5jCmluZGV4IGVhZmM1YTA0OTc1Yy4uZDNlNGU2NTczY2I5IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYwpAQCAtMyw2ICsz
LDcgQEAKICAqIENvcHlyaWdodCDCqSAyMDE5LTIwMjEgSW50ZWwgQ29ycG9yYXRpb24KICAqLwog
CisjaW5jbHVkZSA8ZHJtL3R0bS90dG1fcGxhY2VtZW50Lmg+CiAjaW5jbHVkZSA8bGludXgvc2Nh
dHRlcmxpc3QuaD4KIAogI2luY2x1ZGUgPGRybS90dG0vdHRtX3BsYWNlbWVudC5oPgpAQCAtMjUs
MTAgKzI2LDExIEBAIHN0YXRpYyBpbnQgbW9ja19yZWdpb25fZ2V0X3BhZ2VzKHN0cnVjdCBkcm1f
aTkxNV9nZW1fb2JqZWN0ICpvYmopCiB7CiAJdW5zaWduZWQgaW50IGZsYWdzOwogCXN0cnVjdCBz
Z190YWJsZSAqcGFnZXM7CisJaW50IGVycjsKIAogCWZsYWdzID0gSTkxNV9BTExPQ19NSU5fUEFH
RV9TSVpFOwogCWlmIChvYmotPmZsYWdzICYgSTkxNV9CT19BTExPQ19DT05USUdVT1VTKQotCQlm
bGFncyB8PSBJOTE1X0FMTE9DX0NPTlRJR1VPVVM7CisJCWZsYWdzIHw9IFRUTV9QTF9GTEFHX0NP
TlRJR1VPVVM7CiAKIAlvYmotPm1tLnN0X21tX25vZGUgPSBpbnRlbF9yZWdpb25fdHRtX25vZGVf
YWxsb2Mob2JqLT5tbS5yZWdpb24sCiAJCQkJCQkJIG9iai0+YmFzZS5zaXplLApAQCAtMzYsMTUg
KzM4LDIwIEBAIHN0YXRpYyBpbnQgbW9ja19yZWdpb25fZ2V0X3BhZ2VzKHN0cnVjdCBkcm1faTkx
NV9nZW1fb2JqZWN0ICpvYmopCiAJaWYgKElTX0VSUihvYmotPm1tLnN0X21tX25vZGUpKQogCQly
ZXR1cm4gUFRSX0VSUihvYmotPm1tLnN0X21tX25vZGUpOwogCi0JcGFnZXMgPSBpbnRlbF9yZWdp
b25fdHRtX25vZGVfdG9fc3Qob2JqLT5tbS5yZWdpb24sIG9iai0+bW0uc3RfbW1fbm9kZSk7CisJ
cGFnZXMgPSBpOTE1X3NnX2Zyb21fYnVkZHlfcmVzb3VyY2Uob2JqLT5tbS5zdF9tbV9ub2RlLAor
CQkJCQkgICAgb2JqLT5tbS5yZWdpb24tPnJlZ2lvbi5zdGFydCk7CiAJaWYgKElTX0VSUihwYWdl
cykpIHsKLQkJaW50ZWxfcmVnaW9uX3R0bV9ub2RlX2ZyZWUob2JqLT5tbS5yZWdpb24sIG9iai0+
bW0uc3RfbW1fbm9kZSk7Ci0JCXJldHVybiBQVFJfRVJSKHBhZ2VzKTsKKwkJZXJyID0gUFRSX0VS
UihwYWdlcyk7CisJCWdvdG8gZXJyX2ZyZWVfbW1fbm9kZTsKIAl9CiAKIAlfX2k5MTVfZ2VtX29i
amVjdF9zZXRfcGFnZXMob2JqLCBwYWdlcywgaTkxNV9zZ19kbWFfc2l6ZXMocGFnZXMtPnNnbCkp
OwogCiAJcmV0dXJuIDA7CisKK2Vycl9mcmVlX21tX25vZGU6CisJaW50ZWxfcmVnaW9uX3R0bV9u
b2RlX2ZyZWUob2JqLT5tbS5yZWdpb24sIG9iai0+bW0uc3RfbW1fbm9kZSk7CisJcmV0dXJuIGVy
cjsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0X29wcyBtb2Nr
X3JlZ2lvbl9vYmpfb3BzID0gewotLSAKMi4yNi4zCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9pbnRlbC1nZngK

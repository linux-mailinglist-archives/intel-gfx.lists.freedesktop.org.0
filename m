Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 82BA93113D4
	for <lists+intel-gfx@lfdr.de>; Fri,  5 Feb 2021 22:47:37 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DBBC86F4F2;
	Fri,  5 Feb 2021 21:47:35 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9C3396F4F2
 for <intel-gfx@lists.freedesktop.org>; Fri,  5 Feb 2021 21:47:33 +0000 (UTC)
IronPort-SDR: qCbkMgJu8amTGfCmsQkM8ibpRv3hjeL4Yxt/eWuRETMOeCQ8+uW0iwYKO1v7KcOkOJvt+/8zLW
 SkqdIT5R4YxA==
X-IronPort-AV: E=McAfee;i="6000,8403,9886"; a="169167489"
X-IronPort-AV: E=Sophos;i="5.81,156,1610438400"; d="scan'208";a="169167489"
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 05 Feb 2021 13:47:33 -0800
IronPort-SDR: frZ/VWhDHefHixuV6hSQOk3bhgDxKO1cDkJUEdpyZBDH12jUmSIgwidMcGoToO9tuOaFCncoLc
 Fi12LmJzUwPA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.81,156,1610438400"; d="scan'208";a="434612902"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.171])
 by orsmga001.jf.intel.com with SMTP; 05 Feb 2021 13:47:31 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 05 Feb 2021 23:47:30 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  5 Feb 2021 23:46:33 +0200
Message-Id: <20210205214634.19341-15-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20210205214634.19341-1-ville.syrjala@linux.intel.com>
References: <20210205214634.19341-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 14/15] drm/i915: Relocate
 icl_sanitize_encoder_pll_mapping()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCk1v
dmUgaWNsX3Nhbml0aXplX2VuY29kZXJfcGxsX21hcHBpbmcoKSBvdXQgZnJvbSB0aGUgbWlkZGxl
Cm9mIHRoZSAue2VuYWJsZSxkaXNhYmxlfV9jbG9jaygpIGZ1bmN0aW9ucy4KClJldmlld2VkLWJ5
OiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jIHwgMTEyICsrKysrKysrKysr
LS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgNTYgaW5zZXJ0aW9ucygrKSwgNTYgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggOTY3
ODcxYzJiZjFlLi5kNGI5NDEwMTEwZmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kZGkuYwpAQCAtMTcxNSw2MiArMTcxNSw2IEBAIHN0YXRpYyB2b2lkIGljbF9kZGlfY29t
Ym9fZGlzYWJsZV9jbG9jayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIAkJCSAgICAg
ICBJQ0xfRFBDTEtBX0NGR0NSMF9ERElfQ0xLX09GRihwaHkpKTsKIH0KIAotdm9pZCBpY2xfc2Fu
aXRpemVfZW5jb2Rlcl9wbGxfbWFwcGluZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikK
LXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXIt
PmJhc2UuZGV2KTsKLQl1MzIgcG9ydF9tYXNrOwotCWJvb2wgZGRpX2Nsa19uZWVkZWQ7Ci0KLQkv
KgotCSAqIEluIGNhc2Ugb2YgRFAgTVNULCB3ZSBzYW5pdGl6ZSB0aGUgcHJpbWFyeSBlbmNvZGVy
IG9ubHksIG5vdCB0aGUKLQkgKiB2aXJ0dWFsIG9uZXMuCi0JICovCi0JaWYgKGVuY29kZXItPnR5
cGUgPT0gSU5URUxfT1VUUFVUX0RQX01TVCkKLQkJcmV0dXJuOwotCi0JaWYgKCFlbmNvZGVyLT5i
YXNlLmNydGMgJiYgaW50ZWxfZW5jb2Rlcl9pc19kcChlbmNvZGVyKSkgewotCQl1OCBwaXBlX21h
c2s7Ci0JCWJvb2wgaXNfbXN0OwotCi0JCWludGVsX2RkaV9nZXRfZW5jb2Rlcl9waXBlcyhlbmNv
ZGVyLCAmcGlwZV9tYXNrLCAmaXNfbXN0KTsKLQkJLyoKLQkJICogSW4gdGhlIHVubGlrZWx5IGNh
c2UgdGhhdCBCSU9TIGVuYWJsZXMgRFAgaW4gTVNUIG1vZGUsIGp1c3QKLQkJICogd2FybiBzaW5j
ZSBvdXIgTVNUIEhXIHJlYWRvdXQgaXMgaW5jb21wbGV0ZS4KLQkJICovCi0JCWlmIChkcm1fV0FS
Tl9PTigmZGV2X3ByaXYtPmRybSwgaXNfbXN0KSkKLQkJCXJldHVybjsKLQl9Ci0KLQlwb3J0X21h
c2sgPSBCSVQoZW5jb2Rlci0+cG9ydCk7Ci0JZGRpX2Nsa19uZWVkZWQgPSBlbmNvZGVyLT5iYXNl
LmNydGM7Ci0KLQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRFNJKSB7Ci0JCXN0
cnVjdCBpbnRlbF9lbmNvZGVyICpvdGhlcl9lbmNvZGVyOwotCi0JCXBvcnRfbWFzayA9IGludGVs
X2RzaV9lbmNvZGVyX3BvcnRzKGVuY29kZXIpOwotCQkvKgotCQkgKiBTYW5pdHkgY2hlY2sgdGhh
dCB3ZSBoYXZlbid0IGluY29ycmVjdGx5IHJlZ2lzdGVyZWQgYW5vdGhlcgotCQkgKiBlbmNvZGVy
IHVzaW5nIGFueSBvZiB0aGUgcG9ydHMgb2YgdGhpcyBEU0kgZW5jb2Rlci4KLQkJICovCi0JCWZv
cl9lYWNoX2ludGVsX2VuY29kZXIoJmRldl9wcml2LT5kcm0sIG90aGVyX2VuY29kZXIpIHsKLQkJ
CWlmIChvdGhlcl9lbmNvZGVyID09IGVuY29kZXIpCi0JCQkJY29udGludWU7Ci0KLQkJCWlmIChk
cm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwKLQkJCQkJcG9ydF9tYXNrICYgQklUKG90aGVyX2Vu
Y29kZXItPnBvcnQpKSkKLQkJCQlyZXR1cm47Ci0JCX0KLQkJLyoKLQkJICogRm9yIERTSSB3ZSBr
ZWVwIHRoZSBkZGkgY2xvY2tzIGdhdGVkCi0JCSAqIGV4Y2VwdCBkdXJpbmcgZW5hYmxlL2Rpc2Fi
bGUgc2VxdWVuY2UuCi0JCSAqLwotCQlkZGlfY2xrX25lZWRlZCA9IGZhbHNlOwotCX0KLQotCWlm
ICghZGRpX2Nsa19uZWVkZWQgJiYgZW5jb2Rlci0+ZGlzYWJsZV9jbG9jaykKLQkJZW5jb2Rlci0+
ZGlzYWJsZV9jbG9jayhlbmNvZGVyKTsKLX0KLQogc3RhdGljIHZvaWQganNsX2RkaV90Y19lbmFi
bGVfY2xvY2soc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJICAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewpAQCAtMTkzMSw2ICsxODc1LDYy
IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9kaXNhYmxlX2Nsb2NrKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyKQogCQllbmNvZGVyLT5kaXNhYmxlX2Nsb2NrKGVuY29kZXIpOwogfQogCit2
b2lkIGljbF9zYW5pdGl6ZV9lbmNvZGVyX3BsbF9tYXBwaW5nKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZW5jb2Rlci0+YmFzZS5kZXYpOworCXUzMiBwb3J0X21hc2s7CisJYm9vbCBkZGlfY2xrX25l
ZWRlZDsKKworCS8qCisJICogSW4gY2FzZSBvZiBEUCBNU1QsIHdlIHNhbml0aXplIHRoZSBwcmlt
YXJ5IGVuY29kZXIgb25seSwgbm90IHRoZQorCSAqIHZpcnR1YWwgb25lcy4KKwkgKi8KKwlpZiAo
ZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRFBfTVNUKQorCQlyZXR1cm47CisKKwlpZiAo
IWVuY29kZXItPmJhc2UuY3J0YyAmJiBpbnRlbF9lbmNvZGVyX2lzX2RwKGVuY29kZXIpKSB7CisJ
CXU4IHBpcGVfbWFzazsKKwkJYm9vbCBpc19tc3Q7CisKKwkJaW50ZWxfZGRpX2dldF9lbmNvZGVy
X3BpcGVzKGVuY29kZXIsICZwaXBlX21hc2ssICZpc19tc3QpOworCQkvKgorCQkgKiBJbiB0aGUg
dW5saWtlbHkgY2FzZSB0aGF0IEJJT1MgZW5hYmxlcyBEUCBpbiBNU1QgbW9kZSwganVzdAorCQkg
KiB3YXJuIHNpbmNlIG91ciBNU1QgSFcgcmVhZG91dCBpcyBpbmNvbXBsZXRlLgorCQkgKi8KKwkJ
aWYgKGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpc19tc3QpKQorCQkJcmV0dXJuOworCX0K
KworCXBvcnRfbWFzayA9IEJJVChlbmNvZGVyLT5wb3J0KTsKKwlkZGlfY2xrX25lZWRlZCA9IGVu
Y29kZXItPmJhc2UuY3J0YzsKKworCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9E
U0kpIHsKKwkJc3RydWN0IGludGVsX2VuY29kZXIgKm90aGVyX2VuY29kZXI7CisKKwkJcG9ydF9t
YXNrID0gaW50ZWxfZHNpX2VuY29kZXJfcG9ydHMoZW5jb2Rlcik7CisJCS8qCisJCSAqIFNhbml0
eSBjaGVjayB0aGF0IHdlIGhhdmVuJ3QgaW5jb3JyZWN0bHkgcmVnaXN0ZXJlZCBhbm90aGVyCisJ
CSAqIGVuY29kZXIgdXNpbmcgYW55IG9mIHRoZSBwb3J0cyBvZiB0aGlzIERTSSBlbmNvZGVyLgor
CQkgKi8KKwkJZm9yX2VhY2hfaW50ZWxfZW5jb2RlcigmZGV2X3ByaXYtPmRybSwgb3RoZXJfZW5j
b2RlcikgeworCQkJaWYgKG90aGVyX2VuY29kZXIgPT0gZW5jb2RlcikKKwkJCQljb250aW51ZTsK
KworCQkJaWYgKGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAorCQkJCQlwb3J0X21hc2sgJiBC
SVQob3RoZXJfZW5jb2Rlci0+cG9ydCkpKQorCQkJCXJldHVybjsKKwkJfQorCQkvKgorCQkgKiBG
b3IgRFNJIHdlIGtlZXAgdGhlIGRkaSBjbG9ja3MgZ2F0ZWQKKwkJICogZXhjZXB0IGR1cmluZyBl
bmFibGUvZGlzYWJsZSBzZXF1ZW5jZS4KKwkJICovCisJCWRkaV9jbGtfbmVlZGVkID0gZmFsc2U7
CisJfQorCisJaWYgKCFkZGlfY2xrX25lZWRlZCAmJiBlbmNvZGVyLT5kaXNhYmxlX2Nsb2NrKQor
CQllbmNvZGVyLT5kaXNhYmxlX2Nsb2NrKGVuY29kZXIpOworfQorCiBzdGF0aWMgdm9pZAogaWNs
X3Byb2dyYW1fbWdfZHBfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCwK
IAkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQotLSAK
Mi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

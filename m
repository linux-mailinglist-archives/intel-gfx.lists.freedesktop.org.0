Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id EEB3023EA2F
	for <lists+intel-gfx@lfdr.de>; Fri,  7 Aug 2020 11:22:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 475446E9A8;
	Fri,  7 Aug 2020 09:21:59 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BC30E6E9A6;
 Fri,  7 Aug 2020 09:21:57 +0000 (UTC)
IronPort-SDR: hpkL5KXHjDkZ/8YbLKvdUgH2tpjeYpkXruaFoVA9RndgNFDgN6YUStVvv6YbV7wJjaJJOD8+Mz
 0PIhQ+B+ahDQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9705"; a="171106895"
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="171106895"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:21:57 -0700
IronPort-SDR: H1PQUzWjxaGQQuYT42vymCiMcA8EfOYIk+OkpUlQlSxK7qykav1eO5IUVIyW2UyO0qEZnUsk3L
 vTHypIsTgMuw==
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="333492128"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga007-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:21:55 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: igt-dev@lists.freedesktop.org
Date: Fri,  7 Aug 2020 11:19:55 +0200
Message-Id: <20200807092002.32350-10-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
References: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v2 09/16] tests/core_hotunplug: Prepare
 invariant data once per test run
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org,
 =?UTF-8?q?Micha=C5=82=20Winiarski?= <michal.winiarski@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RWFjaCBzdWJ0ZXN0IG5vdyBjYWxscyBhIHByZXBhcmUoKSBoZWxwZXIgd2hpY2ggb3BlbnMgYSBj
b3VwbGUgb2YgZmlsZXMKcmVxdWlyZWQgYnkgdGhhdCBzdWJ0ZXN0LiAgVGhvc2UgZmlsZXMgYXJl
IHRoZW4gY2xvc2VkIGFmdGVyIHVzZSwKZWl0aGVyIGRpcmVjdGx5IGZyb20gdGhlIHN1YnRlc3Qg
Ym9keSwgb3IgaW5kaXJlY3RseSBmcm9tIGluc2lkZSBvbmUgb2YKaGVscGVyIGZ1bmN0aW9ucyBj
YWxsZWQgZHVyaW5nIHRoZSBzdWJ0ZXN0IGV4ZWN1dGlvbi4gIFRoYXQgYXBwcm9hY2gKbm90IG9u
bHkgbWFrZXMgbGlmZWN5Y2xlIG9mIGluZGl2aWR1YWwgZmlsZSBkZXNjcmlwdG9ycyBkaWZmaWN1
bHQgdG8KZm9sbG93IGJ1dCBhbHNvIHByZXZlbnRzIHVzIGZyb20gcmUtcnVubmluZyBoZWFsdGgg
Y2hlY2tzIG9uIHN1YnRlc3QKZmFpbHVyZXMgZnJvbSBmb2xsb3cgdXAgaWd0X2ZpeHR1cmUgc2Vj
dGlvbnMgc2luY2Ugd2UgbWF5IG5lZWQgdG8gcmV0cnkKYnVzIHJlc2NhbiBvciBkcml2ZXIgcmVi
aW5kIG9wZXJhdGlvbnMuCgpUd28gb2YgdGhvc2UgZmlsZXMgLSBkZXZpY2UgYnVzIGFuZCBkcml2
ZXIgc3lzZnMgbm9kZXMgLSBhcmUgbm90CmFmZmVjdGVkIG5vciBpbnRlcmZlcmUgd2l0aCBkcml2
ZXIgdW5iaW5kIC8gZGV2aWNlIHVucGx1ZyBvcGVyYXRpb25zCnBlcmZvcm1lZCBieSBzdWJ0ZXN0
cy4gIFRoZW4sIHRoZXJlIGlzIG5vdCBtdWNoIHNlbnNlIGluIGNsb3NpbmcgYW5kCnJlb3Blbmlu
ZyB0aG9zZSBub2Rlcy4gIE9wZW4gdGhlbSBvbmNlIGF0IHRoZSBiZWdpbm5pbmcgb2YgYSB0ZXN0
IHJ1biwKdGhlbiBjbG9zZSB0aGVtIGFzIGxhdGUgYXMgb24gdGVzdCBjb21wbGV0aW9uLgoKVGhl
IHByZXBhcmUoKSBoZWxwZXIgYWxzbyBwb3B1bGF0ZXMgYSBkZXZpY2UgYnVzIGFkZHJlc3Mgc3Ry
aW5nIHVzZWQgYnkKZHJpdmVyIHVuYmluZCAvIHJlYmluZCBvcGVyYXRpb25zLiAgU2luY2UgdGhl
IGJ1cyBhZGRyZXNzIG9mIGFuCmV4ZXJjaXNlZCBkZXZpY2UgbmV2ZXIgY2hhbmdlcywgYWxzbyBw
cmVwYXJlIHRoYXQgc3RyaW5nIG9ubHkgb25jZSBhdAp0aGUgYmVnaW5uaW5nIG9mIGEgdGVzdCBy
dW4uICBOb3RlIHRoYXQgaXQgaXMgdGhlIHNhbWUgYXMgdGhlIGxhc3QKY29tcG9uZW50IG9mIGEg
ZGV2aWNlIGZpbHRlciBzdHJpbmcgd2hpY2ggaXMgYWxyZWFkeSByZXNvbHZlZCBhbmQKaW5zdGFs
bGVkIGZyb20gYW4gaW5pdGlhbCBpZ3RfZml4dHVyZSBzZWN0aW9uIG9mIHRoZSB0ZXN0LiAgVGhl
biwKaW5pdGlhbGl6ZSB0aGUgZGV2aWNlIGJ1cyBhZGRyZXNzIGZpZWxkIG9mIGEgaG90dW5wbHVn
IHN0cnVjdHVyZQppbnN0YW5jZSB3aXRoIGEgcG9pbnRlciB0byB0aGUgcmVzcGVjdGl2ZSBzdWJz
dHJpbmcgb2YgdGhhdCBmaWx0ZXIKcmF0aGVyIHRoYW4gcmVzb2x2aW5nIGl0IGFnYWluIGZyb20g
dGhlIGRldmljZSBzeXNmcyBub2RlIHBhdGhuYW1lLgoKVGhlcmUgaXMgb25lIG1vcmUgc3lzZnMg
bm9kZSAtIGEgRFJNIGRldmljZSBub2RlIC0gbm93IG9wZW5lZCBieSB0aGUKcHJlcGFyZSgpIGhl
bHBlciBmb3Igc3VidGVzdHMgd2hpY2ggcGVyZm9ybSBkZXZpY2UgcmVtb3ZlIG9wZXJhdGlvbnMu
ClRoYXQgbm9kZSBjYW4ndCBiZSBvcGVuZWQgb25seSBvbmNlIGF0IHRoZSBiZWdpbm5pbmcgb2Yg
YSB0ZXN0IHJ1bgpiZWNhdXNlIGl0cyBvcGVuIGZpbGUgZGVzY3JpcHRvciBpcyBubyBsb25nZXIg
dXNhYmxlIGFzIHNvb24gYXMgYQpkcml2ZXIgdW5iaW5kIG9wZXJhdGlvbiBpcyBwZXJmb3JtZWQu
ICBPbiB0aGUgb3RoZXIgaGFuZCwgaXQgY2FuJ3QgYmUKb3BlbmVkIGVhc2lseSBmcm9tIGluc2lk
ZSBhIGRldmljZV9yZW1vdmUoKSBoZWxwZXIgc2luY2Ugc29tZSBzdWJ0ZXN0cwpqdXN0IGRvbid0
IG9wZW4gdGhlIGRldmljZSBzbyBpdHMgZmlsZSBkZXNjcmlwdG9yIHVzZWQgYnkKaWd0X3N5c2Zz
X29wZW4oKSBtYXkganVzdCBub3QgYmUgYXZhaWxhYmxlLiAgSG93ZXZlciwgbm90ZSB0aGF0IG9u
bHkgYQpQQ0kgc3lzZnMgbm9kZSBvZiB0aGUgZGV2aWNlLCBub3QgbmVjZXNzYXJpbHkgdGhlIERS
TSBvbmUsIGlzIGFjdHVhbGx5CnJlcXVpcmVkIGZvciBhIHN1Y2Nlc3NmdWwgZGV2aWNlIHJlbW92
ZSBvcGVyYXRpb24sIGFuZCB0aGF0IG5vZGUgY2FuIGJlCm9wZW5lZCBlYXNpbHkgZnJvbSBhIGJ1
cyBmaWxlIGRlc2NyaXB0b3IgdXNpbmcgYSBkZXZpY2UgYnVzIGFkZHJlc3MKc3RyaW5nLCBib3Ro
IGFscmVhZHkgYXZhaWxhYmxlLiAgVGhlbiwgY2hhbmdlIHRoZSBzZW1hbnRpY3Mgb2YgYQouZmQu
c3lzZnNfZGV2IGZpZWxkIG9mIHRoZSBob3R1bnBsdWcgc3RydWN0dXJlIGZyb20gRFJNIHRvIFBD
SSBkZXZpY2UKc3lzZnMgZmlsZSBkZXNjcmlwdG9yLCB0aGVuIGxldCB0aGUgZGV2aWNlX3JlbW92
ZSgpIGhlbHBlciBvcGVuIHRoZQpkZXZpY2UgUENJIG5vZGUgYnkgaXRzZWxmIGFuZCBzdG9yZSBp
dHMgZmlsZSBkZXNjcmlwdG9yIGluIHRoYXQgZmllbGQuCkFsc28sIGZvciBzdGlsbCBtb3JlIGVh
c3kgYWNjZXNzIHRvIHRoZSBkZXZpY2UgUENJIG5vZGUsIHVzZSBhCidzdWJzeXN0ZW0vZGV2aWNl
cycgc3Vibm9kZSBvZiB0aGUgUENJIGRldmljZSBhcyBpdHMgYnVzIHN5c2ZzIGxvY2F0aW9uCmlu
c3RlYWQgb2YganVzdCAnc3Vic3lzdGVtJywgdGhlbiBhZGp1c3QgYSByZWxhdGl2ZSBwYXRoIHRv
IHRoZSBidXMKJ3Jlc2NhbicgZnVuY3Rpb24gYWNjb3JkaW5nbHkuCgpBIHNpZGUgYmVuZWZpdCBv
ZiB1c2luZyB0aGUgUENJIGRldmljZSBzeXNmcyBub2RlLCBub3QgdGhlIERSTSBvbmUsCndoaWxl
IHJlbW92aW5nIHRoZSBkZXZpY2UgaXMgdGhhdCBhIGZ1dHVyZSBzdWJ0ZXN0IG1heSBub3cgZWFz
aWx5CnBlcmZvcm0gYm90aCBkcml2ZXIgdW5iaW5kIGFuZCBkZXZpY2UgcmVtb3ZlIG9wZXJhdGlv
bnMgaW4gYSByb3cuCgp2MjogUmViYXNlIG9uIGN1cnJlbnQgdXBzdHJlYW0gbWFzdGVyLgoKU3Vn
Z2VzdGVkLWJ5OiBNaWNoYcWCIFdpbmlhcnNraSA8bWljaGFsLndpbmlhcnNraUBpbnRlbC5jb20+
ClNpZ25lZC1vZmYtYnk6IEphbnVzeiBLcnp5c3p0b2ZpayA8amFudXN6LmtyenlzenRvZmlrQGxp
bnV4LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1pY2hhxYIgV2luaWFyc2tpIDxtaWNoYWwud2lu
aWFyc2tpQGludGVsLmNvbT4KLS0tCiB0ZXN0cy9jb3JlX2hvdHVucGx1Zy5jIHwgOTEgKysrKysr
KysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMzUg
aW5zZXJ0aW9ucygrKSwgNTYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvdGVzdHMvY29yZV9o
b3R1bnBsdWcuYyBiL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKaW5kZXggZmZiYTMyNTY4Li43MWFj
NGQxNjkgMTAwNjQ0Ci0tLSBhL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKKysrIGIvdGVzdHMvY29y
ZV9ob3R1bnBsdWcuYwpAQCAtNTksNDYgKzU5LDMzIEBAIHN0YXRpYyBpbnQgbG9jYWxfY2xvc2Uo
aW50IGZkKQogCXJldHVybiAtMTsJLyogc3VjY2VzcyAtIHJldHVybiAnY2xvc2VkJyAqLwogfQog
Ci1zdGF0aWMgdm9pZCBwcmVwYXJlX2Zvcl91bmJpbmQoc3RydWN0IGhvdHVucGx1ZyAqcHJpdiwg
Y2hhciAqYnVmLCBpbnQgYnVmbGVuKQorc3RhdGljIHZvaWQgcHJlcGFyZShzdHJ1Y3QgaG90dW5w
bHVnICpwcml2KQogewotCWludCBsZW47CisJY29uc3QgY2hhciAqZmlsdGVyID0gaWd0X2Rldmlj
ZV9maWx0ZXJfZ2V0KDApLCAqc3lzZnNfcGF0aDsKIAotCWlndF9hc3NlcnQoYnVmbGVuKTsKKwlp
Z3RfYXNzZXJ0KGZpbHRlcik7CiAKLQlwcml2LT5mZC5zeXNmc19kcnYgPSBvcGVuYXQocHJpdi0+
ZmQuc3lzZnNfZGV2LCAiZGV2aWNlL2RyaXZlciIsCi0JCQkJICAgIE9fRElSRUNUT1JZKTsKKwlw
cml2LT5kZXZfYnVzX2FkZHIgPSBzdHJyY2hyKGZpbHRlciwgJy8nKTsKKwlpZ3RfYXNzZXJ0KHBy
aXYtPmRldl9idXNfYWRkcisrKTsKKworCXN5c2ZzX3BhdGggPSBzdHJjaHIoZmlsdGVyLCAnOicp
OworCWlndF9hc3NlcnQoc3lzZnNfcGF0aCsrKTsKKworCXByaXYtPmZkLnN5c2ZzX2RldiA9IG9w
ZW4oc3lzZnNfcGF0aCwgT19ESVJFQ1RPUlkpOworCWlndF9hc3NlcnRfZmQocHJpdi0+ZmQuc3lz
ZnNfZGV2KTsKKworCXByaXYtPmZkLnN5c2ZzX2RydiA9IG9wZW5hdChwcml2LT5mZC5zeXNmc19k
ZXYsICJkcml2ZXIiLCBPX0RJUkVDVE9SWSk7CiAJaWd0X2Fzc2VydF9mZChwcml2LT5mZC5zeXNm
c19kcnYpOwogCi0JbGVuID0gcmVhZGxpbmthdChwcml2LT5mZC5zeXNmc19kZXYsICJkZXZpY2Ui
LCBidWYsIGJ1ZmxlbiAtIDEpOwotCWJ1ZltsZW5dID0gJ1wwJzsKLQlwcml2LT5kZXZfYnVzX2Fk
ZHIgPSBzdHJyY2hyKGJ1ZiwgJy8nKTsKLQlpZ3RfYXNzZXJ0KHByaXYtPmRldl9idXNfYWRkcisr
KTsKKwlwcml2LT5mZC5zeXNmc19idXMgPSBvcGVuYXQocHJpdi0+ZmQuc3lzZnNfZGV2LCAic3Vi
c3lzdGVtL2RldmljZXMiLAorCQkJCSAgICBPX0RJUkVDVE9SWSk7CisJaWd0X2Fzc2VydF9mZChw
cml2LT5mZC5zeXNmc19idXMpOwogCi0JLyogc3lzZnNfZGV2IG5vIGxvbmdlciBuZWVkZWQgKi8K
IAlwcml2LT5mZC5zeXNmc19kZXYgPSBsb2NhbF9jbG9zZShwcml2LT5mZC5zeXNmc19kZXYpOwog
CWlndF9hc3NlcnRfZihwcml2LT5mZC5zeXNmc19kZXYgPT0gLTEsCiAJCSAgICAgIkRldmljZSBz
eXNmcyBub2RlIGNsb3NlIGZhaWxlZFxuIik7CiB9CiAKLXN0YXRpYyB2b2lkIHByZXBhcmUoc3Ry
dWN0IGhvdHVucGx1ZyAqcHJpdiwgY2hhciAqYnVmLCBpbnQgYnVmbGVuKQotewotCWlndF9kZWJ1
Zygib3BlbmluZyBkZXZpY2VcbiIpOwotCXByaXYtPmZkLmRybSA9IF9fZHJtX29wZW5fZHJpdmVy
KERSSVZFUl9BTlkpOwotCWlndF9hc3NlcnRfZmQocHJpdi0+ZmQuZHJtKTsKLQotCXByaXYtPmZk
LnN5c2ZzX2RldiA9IGlndF9zeXNmc19vcGVuKHByaXYtPmZkLmRybSk7Ci0JaWd0X2Fzc2VydF9m
ZChwcml2LT5mZC5zeXNmc19kZXYpOwotCi0JaWYgKGJ1ZikgewotCQlwcmVwYXJlX2Zvcl91bmJp
bmQocHJpdiwgYnVmLCBidWZsZW4pOwotCX0gZWxzZSB7Ci0JCS8qIHByZXBhcmUgZm9yIGJ1cyBy
ZXNjYW4gKi8KLQkJcHJpdi0+ZmQuc3lzZnNfYnVzID0gb3BlbmF0KHByaXYtPmZkLnN5c2ZzX2Rl
diwKLQkJCQkJICAgICJkZXZpY2Uvc3Vic3lzdGVtIiwgT19ESVJFQ1RPUlkpOwotCQlpZ3RfYXNz
ZXJ0X2ZkKHByaXYtPmZkLnN5c2ZzX2J1cyk7Ci0JfQotfQotCiAvKiBVbmJpbmQgdGhlIGRyaXZl
ciBmcm9tIHRoZSBkZXZpY2UgKi8KIHN0YXRpYyB2b2lkIGRyaXZlcl91bmJpbmQoc3RydWN0IGhv
dHVucGx1ZyAqcHJpdiwgY29uc3QgY2hhciAqcHJlZml4KQogewpAQCAtMTA5LDggKzk2LDYgQEAg
c3RhdGljIHZvaWQgZHJpdmVyX3VuYmluZChzdHJ1Y3QgaG90dW5wbHVnICpwcml2LCBjb25zdCBj
aGFyICpwcmVmaXgpCiAJaWd0X3N5c2ZzX3NldChwcml2LT5mZC5zeXNmc19kcnYsICJ1bmJpbmQi
LCBwcml2LT5kZXZfYnVzX2FkZHIpOwogCWlndF9yZXNldF90aW1lb3V0KCk7CiAJcHJpdi0+ZmFp
bHVyZSA9IE5VTEw7Ci0KLQkvKiBkb24ndCBjbG9zZSBmZC5zeXNmc19kcnYsIGl0IHdpbGwgYmUg
dXNlZCBmb3IgZHJpdmVyIHJlYmluZGluZyAqLwogfQogCiAvKiBSZS1iaW5kIHRoZSBkcml2ZXIg
dG8gdGhlIGRldmljZSAqLwpAQCAtMTIzLDE4ICsxMDgsMjAgQEAgc3RhdGljIHZvaWQgZHJpdmVy
X2JpbmQoc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAlpZ3Rfc3lzZnNfc2V0KHByaXYtPmZkLnN5
c2ZzX2RydiwgImJpbmQiLCBwcml2LT5kZXZfYnVzX2FkZHIpOwogCWlndF9yZXNldF90aW1lb3V0
KCk7CiAJcHJpdi0+ZmFpbHVyZSA9IE5VTEw7Ci0KLQljbG9zZShwcml2LT5mZC5zeXNmc19kcnYp
OwogfQogCiAvKiBSZW1vdmUgKHZpcnR1YWxseSB1bnBsdWcpIHRoZSBkZXZpY2UgZnJvbSBpdHMg
YnVzICovCiBzdGF0aWMgdm9pZCBkZXZpY2VfdW5wbHVnKHN0cnVjdCBob3R1bnBsdWcgKnByaXYs
IGNvbnN0IGNoYXIgKnByZWZpeCkKIHsKKwlwcml2LT5mZC5zeXNmc19kZXYgPSBvcGVuYXQocHJp
di0+ZmQuc3lzZnNfYnVzLCBwcml2LT5kZXZfYnVzX2FkZHIsCisJCQkJICAgIE9fRElSRUNUT1JZ
KTsKKwlpZ3RfYXNzZXJ0X2ZkKHByaXYtPmZkLnN5c2ZzX2Rldik7CisKIAlpZ3RfZGVidWcoIiVz
dW5wbHVnZ2luZyB0aGUgZGV2aWNlXG4iLCBwcmVmaXgpOwogCiAJcHJpdi0+ZmFpbHVyZSA9ICJE
ZXZpY2UgdW5wbHVnIHRpbWVvdXQhIjsKIAlpZ3Rfc2V0X3RpbWVvdXQoNjAsIHByaXYtPmZhaWx1
cmUpOwotCWlndF9zeXNmc19zZXQocHJpdi0+ZmQuc3lzZnNfZGV2LCAiZGV2aWNlL3JlbW92ZSIs
ICIxIik7CisJaWd0X3N5c2ZzX3NldChwcml2LT5mZC5zeXNmc19kZXYsICJyZW1vdmUiLCAiMSIp
OwogCWlndF9yZXNldF90aW1lb3V0KCk7CiAJcHJpdi0+ZmFpbHVyZSA9IE5VTEw7CiAKQEAgLTE1
MCwxMSArMTM3LDkgQEAgc3RhdGljIHZvaWQgYnVzX3Jlc2NhbihzdHJ1Y3QgaG90dW5wbHVnICpw
cml2KQogCiAJcHJpdi0+ZmFpbHVyZSA9ICJCdXMgcmVzY2FuIHRpbWVvdXQhIjsKIAlpZ3Rfc2V0
X3RpbWVvdXQoNjAsIHByaXYtPmZhaWx1cmUpOwotCWlndF9zeXNmc19zZXQocHJpdi0+ZmQuc3lz
ZnNfYnVzLCAicmVzY2FuIiwgIjEiKTsKKwlpZ3Rfc3lzZnNfc2V0KHByaXYtPmZkLnN5c2ZzX2J1
cywgIi4uL3Jlc2NhbiIsICIxIik7CiAJaWd0X3Jlc2V0X3RpbWVvdXQoKTsKIAlwcml2LT5mYWls
dXJlID0gTlVMTDsKLQotCWNsb3NlKHByaXYtPmZkLnN5c2ZzX2J1cyk7CiB9CiAKIHN0YXRpYyB2
b2lkIGhlYWx0aGNoZWNrKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCkBAIC0yMDksMTQgKzE5NCw2
IEBAIHN0YXRpYyB2b2lkIHNldF9maWx0ZXJfZnJvbV9kZXZpY2UoaW50IGZkKQogCiBzdGF0aWMg
dm9pZCB1bmJpbmRfcmViaW5kKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiB7Ci0JY2hhciBidWZb
UEFUSF9NQVhdOwotCi0JcHJlcGFyZShwcml2LCBidWYsIHNpemVvZihidWYpKTsKLQotCWlndF9k
ZWJ1ZygiY2xvc2luZyB0aGUgZGV2aWNlXG4iKTsKLQlwcml2LT5mZC5kcm0gPSBsb2NhbF9jbG9z
ZShwcml2LT5mZC5kcm0pOwotCWlndF9hc3NlcnRfZihwcml2LT5mZC5kcm0gPT0gLTEsICJEZXZp
Y2UgY2xvc2UgZmFpbGVkXG4iKTsKLQogCWRyaXZlcl91bmJpbmQocHJpdiwgIiIpOwogCiAJZHJp
dmVyX2JpbmQocHJpdik7CkBAIC0yMjYsMTIgKzIwMyw2IEBAIHN0YXRpYyB2b2lkIHVuYmluZF9y
ZWJpbmQoc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAogc3RhdGljIHZvaWQgdW5wbHVnX3Jlc2Nh
bihzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogewotCXByZXBhcmUocHJpdiwgTlVMTCwgMCk7Ci0K
LQlpZ3RfZGVidWcoImNsb3NpbmcgdGhlIGRldmljZVxuIik7Ci0JcHJpdi0+ZmQuZHJtID0gbG9j
YWxfY2xvc2UocHJpdi0+ZmQuZHJtKTsKLQlpZ3RfYXNzZXJ0X2YocHJpdi0+ZmQuZHJtID09IC0x
LCAiRGV2aWNlIGNsb3NlIGZhaWxlZFxuIik7Ci0KIAlkZXZpY2VfdW5wbHVnKHByaXYsICIiKTsK
IAogCWJ1c19yZXNjYW4ocHJpdik7CkBAIC0yNDEsOSArMjEyLDkgQEAgc3RhdGljIHZvaWQgdW5w
bHVnX3Jlc2NhbihzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogCiBzdGF0aWMgdm9pZCBob3R1bmJp
bmRfbGF0ZWNsb3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiB7Ci0JY2hhciBidWZbUEFUSF9N
QVhdOwotCi0JcHJlcGFyZShwcml2LCBidWYsIHNpemVvZihidWYpKTsKKwlpZ3RfZGVidWcoIm9w
ZW5pbmcgZGV2aWNlXG4iKTsKKwlwcml2LT5mZC5kcm0gPSBfX2RybV9vcGVuX2RyaXZlcihEUklW
RVJfQU5ZKTsKKwlpZ3RfYXNzZXJ0X2ZkKHByaXYtPmZkLmRybSk7CiAKIAlkcml2ZXJfdW5iaW5k
KHByaXYsICJob3QgIik7CiAKQEAgLTI1OCw3ICsyMjksOSBAQCBzdGF0aWMgdm9pZCBob3R1bmJp
bmRfbGF0ZWNsb3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiAKIHN0YXRpYyB2b2lkIGhvdHVu
cGx1Z19sYXRlY2xvc2Uoc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIHsKLQlwcmVwYXJlKHByaXYs
IE5VTEwsIDApOworCWlndF9kZWJ1Zygib3BlbmluZyBkZXZpY2VcbiIpOworCXByaXYtPmZkLmRy
bSA9IF9fZHJtX29wZW5fZHJpdmVyKERSSVZFUl9BTlkpOworCWlndF9hc3NlcnRfZmQocHJpdi0+
ZmQuZHJtKTsKIAogCWRldmljZV91bnBsdWcocHJpdiwgImhvdCAiKTsKIApAQCAtMjk4LDYgKzI3
MSw4IEBAIGlndF9tYWluCiAJCXNldF9maWx0ZXJfZnJvbV9kZXZpY2UoZmRfZHJtKTsKIAogCQlp
Z3RfZmFpbF9vbl9mKGNsb3NlKGZkX2RybSksICJEZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsKKwor
CQlwcmVwYXJlKCZwcml2KTsKIAl9CiAKIAlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIHRoZSBkcml2
ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgZGV2aWNlIGJlbGlldmVkIHRvIGJlIGNs
b3NlZCIpOwpAQCAtMzI1LDYgKzMwMCwxMCBAQCBpZ3RfbWFpbgogCWlndF9zdWJ0ZXN0KCJob3R1
bnBsdWctbGF0ZWNsb3NlIikKIAkJaG90dW5wbHVnX2xhdGVjbG9zZSgmcHJpdik7CiAKLQlpZ3Rf
Zml4dHVyZQorCWlndF9maXh0dXJlIHsKIAkJcG9zdF9oZWFsdGhjaGVjaygmcHJpdik7CisKKwkJ
Y2xvc2UocHJpdi5mZC5zeXNmc19idXMpOworCQljbG9zZShwcml2LmZkLnN5c2ZzX2Rydik7CisJ
fQogfQotLSAKMi4yMS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZngK

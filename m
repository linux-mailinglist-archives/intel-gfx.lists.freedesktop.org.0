Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 67DFD125126
	for <lists+intel-gfx@lfdr.de>; Wed, 18 Dec 2019 19:59:23 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A3BD66EA4D;
	Wed, 18 Dec 2019 18:59:21 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 1C8D86EA4D
 for <intel-gfx@lists.freedesktop.org>; Wed, 18 Dec 2019 18:59:19 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Dec 2019 10:59:18 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,330,1571727600"; d="scan'208";a="298470963"
Received: from jsundar1-mobl1.amr.corp.intel.com (HELO
 josouza-MOBL.amr.corp.intel.com) ([10.254.71.190])
 by orsmga001.jf.intel.com with ESMTP; 18 Dec 2019 10:59:17 -0800
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 18 Dec 2019 10:59:06 -0800
Message-Id: <20191218185910.303540-2-jose.souza@intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20191218185910.303540-1-jose.souza@intel.com>
References: <20191218185910.303540-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 2/6] drm/i915/tgl: Select master transcoder
 for MST stream
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVEdMIHRoZSBibGVuZGluZyBvZiBhbGwgdGhlIHN0cmVhbXMgaGF2ZSBtb3ZlZCBmcm9tIERE
SSB0bwp0cmFuc2NvZGVyLCBzbyBub3cgZXZlcnkgdHJhbnNjb2RlciB3b3JraW5nIG92ZXIgdGhl
IHNhbWUgTVNUIHBvcnQgbXVzdApzZW5kIGl0cyBzdHJlYW0gdG8gYSBtYXN0ZXIgdHJhbnNjb2Rl
ciBhbmQgbWFzdGVyIHdpbGwgc2VuZCB0byBEREkKcmVzcGVjdGluZyB0aGUgdGltZSBzbG90cy4K
ClNvIGhlcmUgYWRkaW5nIGFsbCB0aGUgQ1JUQ3MgdGhhdCBzaGFyZXMgdGhlIHNhbWUgTVNUIHN0
cmVhbSBpZgpuZWVkZWQgYW5kIGNvbXB1dGluZyB0aGVpciBzdGF0ZSBhZ2FpbiwgaXQgd2lsbCBw
aWNrIHRoZSBsb3dlc3QKcGlwZS90cmFuc2NvZGVyIGFtb25nIHRoZSBvbmVzIGluIHRoZSBzYW1l
IHN0cmVhbSB0byBiZSBtYXN0ZXIuCgpNb3N0IG9mIHRoZSB0aW1lIHNrbF9jb21taXRfbW9kZXNl
dF9lbmFibGVzKCkgZW5hYmxlcyBwaXBlcyBpbiBhCmNyZXNjZW50IG9yZGVyIGJ1dCBkdWUgRERC
IG92ZXJsYXBwaW5nIGl0IG1pZ2h0IG5vdCBoYXBwZW4sIHRoaXMKc2NlbmFyaW9zIHdpbGwgYmUg
aGFuZGxlZCBpbiB0aGUgbmV4dCBwYXRjaC4KCnYyOgotIFVzaW5nIHJlY2VudGx5IGFkZGVkIGlu
dGVsX2NydGNfc3RhdGVfcmVzZXQoKSB0byBzZXQKbXN0X21hc3Rlcl90cmFuc2NvZGVyIHRvIGlu
dmFsaWQgdHJhbnNjb2RlciBmb3IgYWxsIG5vbiBnZW4xMiAmIE1TVApjb2RlIHBhdGhzCi0gU2V0
dGluZyBsb3dlc3QgcGlwZS90cmFuc2NvZGVyIGFzIG1hc3RlciwgcHJldmlvdXNseSBpdCB3YXMg
dGhlCmZpcnN0IG9uZSBidXQgc2V0dGluZyBhIHByZWRpY3RhYmxlIG9uZSB3aWxsIGhlbHAgaW4g
ZnV0dXJlIE1TVCBlCnBvcnQgc3luYyBpbnRlZ3JhdGlvbgotIE1vdmluZyB0byBpbnRlbCB0eXBl
IGFzIG11Y2ggYXMgd2UgY2FuCgp2MzoKLSBOb3cgaW50ZWxfZHBfbXN0X21hc3Rlcl90cmFuc19j
b21wdXRlKCkgcmV0dXJucyB0aGUgTVNUIG1hc3RlciB0cmFuc2NvZGVyCi0gUmVwbGFjZWQgc3Rk
Ym9vbC5oIGJ5IGxpbnV4L3R5cGVzLmgKLSBTa2lwIHRoZSBjb25uZWN0b3IgYmVpbmcgY2hlY2tl
ZCBpbgppbnRlbF9kcF9tc3RfYXRvbWljX21hc3Rlcl90cmFuc19jaGVjaygpCi0gVXNpbmcgcGlw
ZSBpbnN0ZWFkIG9mIHRyYW5zY29kZXIgdG8gY29tcHV0ZSBNU1QgbWFzdGVyCgp2NDoKLSByZW5h
bWVkIGNvbm5lY3Rvcl9zdGF0ZSB0byBjb25uX3N0YXRlCgpCU3BlYzogNTA0OTMKQlNwZWM6IDQ5
MTkwCkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgpD
YzogTHVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMgICB8ICAxNCArKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaCAgIHwgICA0ICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8ICAxNCArLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgIHwgIDEzICstCiAuLi4vZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgIDMgKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYyAgIHwgMTQzICsrKysrKysrKysrKysr
KystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuaCAgIHwgICA1
ICsKIDcgZmlsZXMgY2hhbmdlZCwgMTgzIGluc2VydGlvbnMoKyksIDEzIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5jCmluZGV4IGI3ZGRh
MThiNmYyOS4uMGViOTczZjY1OTc3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2F0b21pYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfYXRvbWljLmMKQEAgLTE5Miw2ICsxOTIsMjAgQEAgaW50ZWxfY29ubmVjdG9yX25lZWRz
X21vZGVzZXQoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCQkJCQkJCQkgICAg
bmV3X2Nvbm5fc3RhdGUtPmNydGMpKSk7CiB9CiAKK3N0cnVjdCBpbnRlbF9kaWdpdGFsX2Nvbm5l
Y3Rvcl9zdGF0ZSAqCitpbnRlbF9hdG9taWNfZ2V0X2RpZ2l0YWxfY29ubmVjdG9yX3N0YXRlKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAorCQkJCQkgc3RydWN0IGludGVsX2Nvbm5l
Y3RvciAqY29ubmVjdG9yKQoreworCXN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0
YXRlOworCisJY29ubl9zdGF0ZSA9IGRybV9hdG9taWNfZ2V0X2Nvbm5lY3Rvcl9zdGF0ZSgmc3Rh
dGUtPmJhc2UsCisJCQkJCQkgICAgJmNvbm5lY3Rvci0+YmFzZSk7CisJaWYgKElTX0VSUihjb25u
X3N0YXRlKSkKKwkJcmV0dXJuIEVSUl9DQVNUKGNvbm5fc3RhdGUpOworCisJcmV0dXJuIHRvX2lu
dGVsX2RpZ2l0YWxfY29ubmVjdG9yX3N0YXRlKGNvbm5fc3RhdGUpOworfQorCiAvKioKICAqIGlu
dGVsX2NydGNfZHVwbGljYXRlX3N0YXRlIC0gZHVwbGljYXRlIGNydGMgc3RhdGUKICAqIEBjcnRj
OiBkcm0gY3J0YwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9hdG9taWMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmgK
aW5kZXggYTdkMWE4NTc2YzQ4Li43NGM3NDlkYmZiNGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaApAQCAtMTcsNiArMTcsNyBAQCBzdHJ1Y3QgZHJtX2Rl
dmljZTsKIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwogc3RydWN0IGRybV9wcm9wZXJ0eTsKIHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGU7CitzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yOwogc3RydWN0
IGludGVsX2NydGM7CiBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZTsKIApAQCAtMzQsNiArMzUsOSBA
QCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqCiBpbnRlbF9kaWdpdGFsX2Nvbm5lY3Rvcl9k
dXBsaWNhdGVfc3RhdGUoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3Rvcik7CiBib29sIGlu
dGVsX2Nvbm5lY3Rvcl9uZWVkc19tb2Rlc2V0KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlLAogCQkJCSAgIHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IpOworc3RydWN0IGlu
dGVsX2RpZ2l0YWxfY29ubmVjdG9yX3N0YXRlICoKK2ludGVsX2F0b21pY19nZXRfZGlnaXRhbF9j
b25uZWN0b3Jfc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJCSBz
dHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpOwogCiBzdHJ1Y3QgZHJtX2NydGNfc3Rh
dGUgKmludGVsX2NydGNfZHVwbGljYXRlX3N0YXRlKHN0cnVjdCBkcm1fY3J0YyAqY3J0Yyk7CiB2
b2lkIGludGVsX2NydGNfZGVzdHJveV9zdGF0ZShzdHJ1Y3QgZHJtX2NydGMgKmNydGMsCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwppbmRleCBmYTQwYmE3Y2JjYWQuLjlk
OTllYzgyZDA3MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCkBA
IC0xODk5LDggKzE4OTksMTMgQEAgaW50ZWxfZGRpX3RyYW5zY29kZXJfZnVuY19yZWdfdmFsX2dl
dChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAkJdGVtcCB8PSBU
UkFOU19ERElfTU9ERV9TRUxFQ1RfRFBfTVNUOwogCQl0ZW1wIHw9IERESV9QT1JUX1dJRFRIKGNy
dGNfc3RhdGUtPmxhbmVfY291bnQpOwogCi0JCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEy
KQotCQkJdGVtcCB8PSBUUkFOU19ERElfTVNUX1RSQU5TUE9SVF9TRUxFQ1QoY3J0Y19zdGF0ZS0+
Y3B1X3RyYW5zY29kZXIpOworCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikgeworCQkJ
ZW51bSB0cmFuc2NvZGVyIG1hc3RlcjsKKworCQkJbWFzdGVyID0gY3J0Y19zdGF0ZS0+bXN0X21h
c3Rlcl90cmFuc2NvZGVyOworCQkJV0FSTl9PTihtYXN0ZXIgPT0gSU5WQUxJRF9UUkFOU0NPREVS
KTsKKwkJCXRlbXAgfD0gVFJBTlNfRERJX01TVF9UUkFOU1BPUlRfU0VMRUNUKG1hc3Rlcik7CisJ
CX0KIAl9IGVsc2UgewogCQl0ZW1wIHw9IFRSQU5TX0RESV9NT0RFX1NFTEVDVF9EUF9TU1Q7CiAJ
CXRlbXAgfD0gRERJX1BPUlRfV0lEVEgoY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCk7CkBAIC00NDAw
LDYgKzQ0MDUsMTEgQEAgdm9pZCBpbnRlbF9kZGlfZ2V0X2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlciwKIAkJcGlwZV9jb25maWctPm91dHB1dF90eXBlcyB8PSBCSVQoSU5URUxf
T1VUUFVUX0RQX01TVCk7CiAJCXBpcGVfY29uZmlnLT5sYW5lX2NvdW50ID0KIAkJCSgodGVtcCAm
IERESV9QT1JUX1dJRFRIX01BU0spID4+IERESV9QT1JUX1dJRFRIX1NISUZUKSArIDE7CisKKwkJ
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpCisJCQlwaXBlX2NvbmZpZy0+bXN0X21hc3Rl
cl90cmFuc2NvZGVyID0KKwkJCQkJUkVHX0ZJRUxEX0dFVChUUkFOU19ERElfTVNUX1RSQU5TUE9S
VF9TRUxFQ1RfTUFTSywgdGVtcCk7CisKIAkJaW50ZWxfZHBfZ2V0X21fbihpbnRlbF9jcnRjLCBw
aXBlX2NvbmZpZyk7CiAJCWJyZWFrOwogCWRlZmF1bHQ6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IDI1YmYwODQ0MjdiZi4uNTliM2JmZThiNzIx
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAt
NDYsNiArNDYsNyBAQAogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxfY3J0LmgiCiAjaW5jbHVkZSAi
ZGlzcGxheS9pbnRlbF9kZGkuaCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2RwLmgiCisjaW5j
bHVkZSAiZGlzcGxheS9pbnRlbF9kcF9tc3QuaCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2Rz
aS5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxfZHZvLmgiCiAjaW5jbHVkZSAiZGlzcGxheS9p
bnRlbF9nbWJ1cy5oIgpAQCAtMTE2MzAsNiArMTE2MzEsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9j
cnRjX3N0YXRlX3Jlc2V0KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCWNy
dGNfc3RhdGUtPmhzd193b3JrYXJvdW5kX3BpcGUgPSBJTlZBTElEX1BJUEU7CiAJY3J0Y19zdGF0
ZS0+b3V0cHV0X2Zvcm1hdCA9IElOVEVMX09VVFBVVF9GT1JNQVRfSU5WQUxJRDsKIAljcnRjX3N0
YXRlLT5zY2FsZXJfc3RhdGUuc2NhbGVyX2lkID0gLTE7CisJY3J0Y19zdGF0ZS0+bXN0X21hc3Rl
cl90cmFuc2NvZGVyID0gSU5WQUxJRF9UUkFOU0NPREVSOwogfQogCiAvKiBSZXR1cm5zIHRoZSBj
dXJyZW50bHkgcHJvZ3JhbW1lZCBtb2RlIG9mIHRoZSBnaXZlbiBlbmNvZGVyLiAqLwpAQCAtMTI0
NzcsNiArMTI0NzksOSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kdW1wX3BpcGVfY29uZmlnKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAkJCSAgICAgIHBpcGVfY29u
ZmlnLT5jc2NfbW9kZSwgcGlwZV9jb25maWctPmdhbW1hX21vZGUsCiAJCQkgICAgICBwaXBlX2Nv
bmZpZy0+Z2FtbWFfZW5hYmxlLCBwaXBlX2NvbmZpZy0+Y3NjX2VuYWJsZSk7CiAKKwlEUk1fREVC
VUdfS01TKCJNU1QgbWFzdGVyIHRyYW5zY29kZXI6ICVzXG4iLAorCQkgICAgICB0cmFuc2NvZGVy
X25hbWUocGlwZV9jb25maWctPm1zdF9tYXN0ZXJfdHJhbnNjb2RlcikpOworCiBkdW1wX3BsYW5l
czoKIAlpZiAoIXN0YXRlKQogCQlyZXR1cm47CkBAIC0xMjYxOCw2ICsxMjYyMyw3IEBAIGludGVs
X2NydGNfcHJlcGFyZV9jbGVhcmVkX3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlKQogCW1lbWNweShzYXZlZF9zdGF0ZS0+aWNsX3BvcnRfZHBsbHMsIGNydGNfc3RhdGUt
PmljbF9wb3J0X2RwbGxzLAogCSAgICAgICBzaXplb2Yoc2F2ZWRfc3RhdGUtPmljbF9wb3J0X2Rw
bGxzKSk7CiAJc2F2ZWRfc3RhdGUtPmNyY19lbmFibGVkID0gY3J0Y19zdGF0ZS0+Y3JjX2VuYWJs
ZWQ7CisJc2F2ZWRfc3RhdGUtPm1zdF9tYXN0ZXJfdHJhbnNjb2RlciA9IElOVkFMSURfVFJBTlND
T0RFUjsKIAlpZiAoSVNfRzRYKGRldl9wcml2KSB8fAogCSAgICBJU19WQUxMRVlWSUVXKGRldl9w
cml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9wcml2KSkKIAkJc2F2ZWRfc3RhdGUtPndtID0gY3J0
Y19zdGF0ZS0+d207CkBAIC0xMzI1Nyw2ICsxMzI2Myw4IEBAIGludGVsX3BpcGVfY29uZmlnX2Nv
bXBhcmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmN1cnJlbnRfY29uZmlnLAogCVBJ
UEVfQ09ORl9DSEVDS19JKGRzYy5kc2Nfc3BsaXQpOwogCVBJUEVfQ09ORl9DSEVDS19JKGRzYy5j
b21wcmVzc2VkX2JwcCk7CiAKKwlQSVBFX0NPTkZfQ0hFQ0tfSShtc3RfbWFzdGVyX3RyYW5zY29k
ZXIpOworCiAjdW5kZWYgUElQRV9DT05GX0NIRUNLX1gKICN1bmRlZiBQSVBFX0NPTkZfQ0hFQ0tf
SQogI3VuZGVmIFBJUEVfQ09ORl9DSEVDS19CT09MCkBAIC0xNDM0MSw3ICsxNDM0OSw3IEBAIHN0
YXRpYyB2b2lkIGludGVsX2NvbW1pdF9tb2Rlc2V0X2Rpc2FibGVzKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlKQogCXUzMiBoYW5kbGVkID0gMDsKIAlpbnQgaTsKIAotCS8qIE9ubHkg
ZGlzYWJsZSBwb3J0IHN5bmMgc2xhdmVzICovCisJLyogT25seSBkaXNhYmxlIHBvcnQgc3luYyBh
bmQgTVNUIHNsYXZlcyAqLwogCWZvcl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0
YXRlLCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7
CiAJCWlmICghbmVlZHNfbW9kZXNldChuZXdfY3J0Y19zdGF0ZSkpCkBAIC0xNDM1NSw3ICsxNDM2
Myw4IEBAIHN0YXRpYyB2b2lkIGludGVsX2NvbW1pdF9tb2Rlc2V0X2Rpc2FibGVzKHN0cnVjdCBp
bnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQkgKiBzbGF2ZSBDUlRDcyBhcmUgZGlzYWJsZWQg
Zmlyc3QgYW5kIHRoZW4gbWFzdGVyIENSVEMgc2luY2UKIAkJICogU2xhdmUgdmJsYW5rcyBhcmUg
bWFza2VkIHRpbGwgTWFzdGVyIFZibGFua3MuCiAJCSAqLwotCQlpZiAoIWlzX3RyYW5zX3BvcnRf
c3luY19zbGF2ZShvbGRfY3J0Y19zdGF0ZSkpCisJCWlmICghaXNfdHJhbnNfcG9ydF9zeW5jX3Ns
YXZlKG9sZF9jcnRjX3N0YXRlKSAmJgorCQkgICAgIWludGVsX2RwX21zdF9pc19zbGF2ZV90cmFu
cyhvbGRfY3J0Y19zdGF0ZSkpCiAJCQljb250aW51ZTsKIAogCQlpbnRlbF9wcmVfcGxhbmVfdXBk
YXRlKHN0YXRlLCBjcnRjKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5kZXggODNlYTA0MTQ5Yjc3Li42MzBhOTQ4OTJiN2IgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBl
cy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBl
cy5oCkBAIC0xMDU0LDYgKzEwNTQsOSBAQCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSB7CiAKIAkv
KiBCaXRtYXNrIHRvIGluZGljYXRlIHNsYXZlcyBhdHRhY2hlZCAqLwogCXU4IHN5bmNfbW9kZV9z
bGF2ZXNfbWFzazsKKworCS8qIE9ubHkgdmFsaWQgb24gVEdMKyAqLworCWVudW0gdHJhbnNjb2Rl
ciBtc3RfbWFzdGVyX3RyYW5zY29kZXI7CiB9OwogCiBzdHJ1Y3QgaW50ZWxfY3J0YyB7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYwppbmRleCA3YWEwOTc1YzMz
YjcuLjcxMDEzNzk4NGM3MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcF9tc3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RwX21zdC5jCkBAIC04Nyw2ICs4Nyw1NCBAQCBzdGF0aWMgaW50IGludGVsX2RwX21zdF9jb21w
dXRlX2xpbmtfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXJldHVybiAw
OwogfQogCisvKgorICogSXRlcmF0ZSBvdmVyIGFsbCBjb25uZWN0b3JzIGFuZCBzZXQgbXN0X21h
c3Rlcl90cmFuc2NvZGVyIHRvIHRoZSBzbWFsbGVzdAorICogdHJhbnNjb2RlciBpZCB0aGF0IHNo
YXJlcyB0aGUgc2FtZSBNU1QgY29ubmVjdG9yLgorICovCitzdGF0aWMgZW51bSB0cmFuc2NvZGVy
CitpbnRlbF9kcF9tc3RfbWFzdGVyX3RyYW5zX2NvbXB1dGUoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCisJCQkJICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJ
CQkgIHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uZWN0b3Jfc3RhdGUpCit7CisJc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSB0b19pbnRlbF9hdG9taWNfc3RhdGUoY3J0
Y19zdGF0ZS0+dWFwaS5zdGF0ZSk7CisJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9y
ID0gdG9faW50ZWxfY29ubmVjdG9yKGNvbm5lY3Rvcl9zdGF0ZS0+Y29ubmVjdG9yKTsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2
KTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9jb25uZWN0b3Jfc3RhdGUgKml0ZXJfY29ubmVjdG9y
X3N0YXRlOworCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKml0ZXJfY29ubmVjdG9yOworCWVudW0g
cGlwZSByZXQgPSBJOTE1X01BWF9QSVBFUzsKKwlpbnQgaTsKKworCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpIDwgMTIpCisJCXJldHVybiBJTlZBTElEX1RSQU5TQ09ERVI7CisKKwlmb3JfZWFjaF9u
ZXdfaW50ZWxfY29ubmVjdG9yX2luX3N0YXRlKHN0YXRlLCBpdGVyX2Nvbm5lY3RvciwKKwkJCQkJ
ICAgICAgaXRlcl9jb25uZWN0b3Jfc3RhdGUsIGkpIHsKKwkJc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKml0ZXJfY3J0Y19zdGF0ZTsKKwkJc3RydWN0IGludGVsX2NydGMgKml0ZXJfY3J0YzsKKwor
CQlpZiAoY29ubmVjdG9yLT5tc3RfcG9ydCAhPSBpdGVyX2Nvbm5lY3Rvci0+bXN0X3BvcnQgfHwK
KwkJICAgICFpdGVyX2Nvbm5lY3Rvcl9zdGF0ZS0+YmFzZS5jcnRjKQorCQkJY29udGludWU7CisK
KwkJaXRlcl9jcnRjID0gdG9faW50ZWxfY3J0YyhpdGVyX2Nvbm5lY3Rvcl9zdGF0ZS0+YmFzZS5j
cnRjKTsKKwkJaXRlcl9jcnRjX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9uZXdfY3J0Y19zdGF0
ZShzdGF0ZSwKKwkJCQkJCQkJICBpdGVyX2NydGMpOworCQlpZiAoIWl0ZXJfY3J0Y19zdGF0ZS0+
dWFwaS5hY3RpdmUpCisJCQljb250aW51ZTsKKworCQkvKgorCQkgKiBVc2luZyBjcnRjLT5waXBl
IGJlY2F1c2UgY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXIgaXMKKwkJICogY29tcHV0ZWQsIHNv
IG90aGVycyBwaXBlIGNwdV90cmFuc2NvZGVyIGNvdWxkIGhhdmUgYmVpbmcKKwkJICogY29tcHV0
ZWQgeWV0CisJCSAqLworCQlpZiAoaXRlcl9jcnRjLT5waXBlIDwgcmV0KQorCQkJcmV0ID0gaXRl
cl9jcnRjLT5waXBlOworCX0KKworCS8qIFNpbXBsZSBjYXN0IHdvcmtzIGJlY2F1c2UgVEdMIGRv
bid0IGhhdmUgYSBlRFAgdHJhbnNjb2RlciAqLworCXJldHVybiAoZW51bSB0cmFuc2NvZGVyKXJl
dDsKK30KKwogc3RhdGljIGludCBpbnRlbF9kcF9tc3RfY29tcHV0ZV9jb25maWcoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJICAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpwaXBlX2NvbmZpZywKIAkJCQkgICAgICAgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNv
bm5fc3RhdGUpCkBAIC0xNTQsMjQgKzIwMiw4OSBAQCBzdGF0aWMgaW50IGludGVsX2RwX21zdF9j
b21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCWludGVsX2Rk
aV9jb21wdXRlX21pbl92b2x0YWdlX2xldmVsKGRldl9wcml2LCBwaXBlX2NvbmZpZyk7CiAKKwlw
aXBlX2NvbmZpZy0+bXN0X21hc3Rlcl90cmFuc2NvZGVyID0gaW50ZWxfZHBfbXN0X21hc3Rlcl90
cmFuc19jb21wdXRlKGVuY29kZXIsCisJCQkJCQkJCQkgICAgICAgcGlwZV9jb25maWcsCisJCQkJ
CQkJCQkgICAgICAgY29ubl9zdGF0ZSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXJl
dHVybiAwOworfQorCisvKgorICogSWYgb25lIG9mIHRoZSBjb25uZWN0b3JzIGluIGEgTVNUIHN0
cmVhbSBuZWVkcyBhIG1vZGVzZXQsIG1hcmsgYWxsIENSVENzCisgKiB0aGF0IGhhdmUgYSBjb25u
ZWN0b3IgaW4gdGhlIHNhbWUgTVNUIHN0cmVhbSBhcyBtb2RlIGNoYW5nZWQsCisgKiBpbnRlbF9t
b2Rlc2V0X3BpcGVfY29uZmlnKCkraW50ZWxfY3J0Y19jaGVja19mYXN0c2V0KCkgd2lsbCB0YWtl
IHRvIGRvIGEKKyAqIGZhc3RzZXQgd2hlbiBwb3NzaWJsZS4KKyAqLworc3RhdGljIGludAoraW50
ZWxfZHBfbXN0X2F0b21pY19tYXN0ZXJfdHJhbnNfY2hlY2soc3RydWN0IGludGVsX2Nvbm5lY3Rv
ciAqY29ubmVjdG9yLAorCQkJCSAgICAgICBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRl
LT5iYXNlLmRldik7CisJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGNvbm5lY3Rvcl9s
aXN0X2l0ZXI7CisJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yX2l0ZXI7CisKKwlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDEyKQorCQlyZXR1cm4gIDA7CisKKwlpZiAoIWludGVs
X2Nvbm5lY3Rvcl9uZWVkc19tb2Rlc2V0KHN0YXRlLCAmY29ubmVjdG9yLT5iYXNlKSkKKwkJcmV0
dXJuIDA7CisKKwlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbigmZGV2X3ByaXYtPmRybSwg
JmNvbm5lY3Rvcl9saXN0X2l0ZXIpOworCWZvcl9lYWNoX2ludGVsX2Nvbm5lY3Rvcl9pdGVyKGNv
bm5lY3Rvcl9pdGVyLCAmY29ubmVjdG9yX2xpc3RfaXRlcikgeworCQlzdHJ1Y3QgaW50ZWxfZGln
aXRhbF9jb25uZWN0b3Jfc3RhdGUgKmNvbm5faXRlcl9zdGF0ZTsKKwkJc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGU7CisJCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjOworCisJCWlm
IChjb25uZWN0b3JfaXRlci0+bXN0X3BvcnQgIT0gY29ubmVjdG9yLT5tc3RfcG9ydCB8fAorCQkg
ICAgY29ubmVjdG9yX2l0ZXIgPT0gY29ubmVjdG9yKQorCQkJY29udGludWU7CisKKwkJY29ubl9p
dGVyX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9kaWdpdGFsX2Nvbm5lY3Rvcl9zdGF0ZShzdGF0
ZSwKKwkJCQkJCQkJCSAgIGNvbm5lY3Rvcl9pdGVyKTsKKwkJaWYgKElTX0VSUihjb25uX2l0ZXJf
c3RhdGUpKSB7CisJCQlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJmNvbm5lY3Rvcl9saXN0
X2l0ZXIpOworCQkJcmV0dXJuIFBUUl9FUlIoY29ubl9pdGVyX3N0YXRlKTsKKwkJfQorCisJCWlm
ICghY29ubl9pdGVyX3N0YXRlLT5iYXNlLmNydGMpCisJCQljb250aW51ZTsKKworCQljcnRjID0g
dG9faW50ZWxfY3J0Yyhjb25uX2l0ZXJfc3RhdGUtPmJhc2UuY3J0Yyk7CisJCWNydGNfc3RhdGUg
PSBpbnRlbF9hdG9taWNfZ2V0X2NydGNfc3RhdGUoJnN0YXRlLT5iYXNlLCBjcnRjKTsKKwkJaWYg
KElTX0VSUihjcnRjX3N0YXRlKSkgeworCQkJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZj
b25uZWN0b3JfbGlzdF9pdGVyKTsKKwkJCXJldHVybiBQVFJfRVJSKGNydGNfc3RhdGUpOworCQl9
CisKKwkJY3J0Y19zdGF0ZS0+dWFwaS5tb2RlX2NoYW5nZWQgPSB0cnVlOworCX0KKwlkcm1fY29u
bmVjdG9yX2xpc3RfaXRlcl9lbmQoJmNvbm5lY3Rvcl9saXN0X2l0ZXIpOworCiAJcmV0dXJuIDA7
CiB9CiAKIHN0YXRpYyBpbnQKIGludGVsX2RwX21zdF9hdG9taWNfY2hlY2soc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvciwKLQkJCSAgc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRl
KQorCQkJICBzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqX3N0YXRlKQogeworCXN0cnVjdCBpbnRl
bF9hdG9taWNfc3RhdGUgKnN0YXRlID0gdG9faW50ZWxfYXRvbWljX3N0YXRlKF9zdGF0ZSk7CiAJ
c3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKm5ld19jb25uX3N0YXRlID0KLQkJZHJtX2F0b21p
Y19nZXRfbmV3X2Nvbm5lY3Rvcl9zdGF0ZShzdGF0ZSwgY29ubmVjdG9yKTsKKwkJZHJtX2F0b21p
Y19nZXRfbmV3X2Nvbm5lY3Rvcl9zdGF0ZSgmc3RhdGUtPmJhc2UsIGNvbm5lY3Rvcik7CiAJc3Ry
dWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKm9sZF9jb25uX3N0YXRlID0KLQkJZHJtX2F0b21pY19n
ZXRfb2xkX2Nvbm5lY3Rvcl9zdGF0ZShzdGF0ZSwgY29ubmVjdG9yKTsKKwkJZHJtX2F0b21pY19n
ZXRfb2xkX2Nvbm5lY3Rvcl9zdGF0ZSgmc3RhdGUtPmJhc2UsIGNvbm5lY3Rvcik7CiAJc3RydWN0
IGludGVsX2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9yID0KIAkJdG9faW50ZWxfY29ubmVjdG9y
KGNvbm5lY3Rvcik7CiAJc3RydWN0IGRybV9jcnRjICpuZXdfY3J0YyA9IG5ld19jb25uX3N0YXRl
LT5jcnRjOwogCXN0cnVjdCBkcm1fZHBfbXN0X3RvcG9sb2d5X21nciAqbWdyOwogCWludCByZXQ7
CiAKLQlyZXQgPSBpbnRlbF9kaWdpdGFsX2Nvbm5lY3Rvcl9hdG9taWNfY2hlY2soY29ubmVjdG9y
LCBzdGF0ZSk7CisJcmV0ID0gaW50ZWxfZGlnaXRhbF9jb25uZWN0b3JfYXRvbWljX2NoZWNrKGNv
bm5lY3RvciwgJnN0YXRlLT5iYXNlKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJcmV0
ID0gaW50ZWxfZHBfbXN0X2F0b21pY19tYXN0ZXJfdHJhbnNfY2hlY2soaW50ZWxfY29ubmVjdG9y
LCBzdGF0ZSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtMTgyLDEyICsyOTUsOSBA
QCBpbnRlbF9kcF9tc3RfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0
b3IsCiAJICogY29ubmVjdG9yCiAJICovCiAJaWYgKG5ld19jcnRjKSB7Ci0JCXN0cnVjdCBpbnRl
bF9hdG9taWNfc3RhdGUgKmludGVsX3N0YXRlID0KLQkJCXRvX2ludGVsX2F0b21pY19zdGF0ZShz
dGF0ZSk7CiAJCXN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0Yyhu
ZXdfY3J0Yyk7CiAJCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0KLQkJCWlu
dGVsX2F0b21pY19nZXRfbmV3X2NydGNfc3RhdGUoaW50ZWxfc3RhdGUsCi0JCQkJCQkJaW50ZWxf
Y3J0Yyk7CisJCQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBpbnRlbF9j
cnRjKTsKIAogCQlpZiAoIWNydGNfc3RhdGUgfHwKIAkJICAgICFkcm1fYXRvbWljX2NydGNfbmVl
ZHNfbW9kZXNldCgmY3J0Y19zdGF0ZS0+dWFwaSkgfHwKQEAgLTE5Niw3ICszMDYsNyBAQCBpbnRl
bF9kcF9tc3RfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJ
fQogCiAJbWdyID0gJmVuY190b19tc3Qob2xkX2Nvbm5fc3RhdGUtPmJlc3RfZW5jb2RlciktPnBy
aW1hcnktPmRwLm1zdF9tZ3I7Ci0JcmV0ID0gZHJtX2RwX2F0b21pY19yZWxlYXNlX3ZjcGlfc2xv
dHMoc3RhdGUsIG1nciwKKwlyZXQgPSBkcm1fZHBfYXRvbWljX3JlbGVhc2VfdmNwaV9zbG90cygm
c3RhdGUtPmJhc2UsIG1nciwKIAkJCQkJICAgICAgIGludGVsX2Nvbm5lY3Rvci0+cG9ydCk7CiAK
IAlyZXR1cm4gcmV0OwpAQCAtMjQwLDYgKzM1MCw4IEBAIHN0YXRpYyB2b2lkIGludGVsX21zdF9w
b3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAKIAlpbnRlbF9k
cC0+YWN0aXZlX21zdF9saW5rcy0tOwogCWxhc3RfbXN0X3N0cmVhbSA9IGludGVsX2RwLT5hY3Rp
dmVfbXN0X2xpbmtzID09IDA7CisJV0FSTl9PTihJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyICYm
IGxhc3RfbXN0X3N0cmVhbSAmJgorCQkhaW50ZWxfZHBfbXN0X2lzX21hc3Rlcl90cmFucyhvbGRf
Y3J0Y19zdGF0ZSkpOwogCiAJaW50ZWxfY3J0Y192Ymxhbmtfb2ZmKG9sZF9jcnRjX3N0YXRlKTsK
IApAQCAtMzE3LDYgKzQyOSw4IEBAIHN0YXRpYyB2b2lkIGludGVsX21zdF9wcmVfZW5hYmxlX2Rw
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWNvbm5lY3Rvci0+ZW5jb2RlciA9IGVu
Y29kZXI7CiAJaW50ZWxfbXN0LT5jb25uZWN0b3IgPSBjb25uZWN0b3I7CiAJZmlyc3RfbXN0X3N0
cmVhbSA9IGludGVsX2RwLT5hY3RpdmVfbXN0X2xpbmtzID09IDA7CisJV0FSTl9PTihJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDEyICYmIGZpcnN0X21zdF9zdHJlYW0gJiYKKwkJIWludGVsX2RwX21z
dF9pc19tYXN0ZXJfdHJhbnMocGlwZV9jb25maWcpKTsKIAogCURSTV9ERUJVR19LTVMoImFjdGl2
ZSBsaW5rcyAlZFxuIiwgaW50ZWxfZHAtPmFjdGl2ZV9tc3RfbGlua3MpOwogCkBAIC03MjIsMyAr
ODM2LDE0IEBAIGludGVsX2RwX21zdF9lbmNvZGVyX2NsZWFudXAoc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQpCiAJZHJtX2RwX21zdF90b3BvbG9neV9tZ3JfZGVzdHJv
eSgmaW50ZWxfZHAtPm1zdF9tZ3IpOwogCS8qIGVuY29kZXJzIHdpbGwgZ2V0IGtpbGxlZCBieSBu
b3JtYWwgY2xlYW51cCAqLwogfQorCitib29sIGludGVsX2RwX21zdF9pc19tYXN0ZXJfdHJhbnMo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJcmV0dXJuIGNy
dGNfc3RhdGUtPm1zdF9tYXN0ZXJfdHJhbnNjb2RlciA9PSBjcnRjX3N0YXRlLT5jcHVfdHJhbnNj
b2RlcjsKK30KKworYm9vbCBpbnRlbF9kcF9tc3RfaXNfc2xhdmVfdHJhbnMoY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJcmV0dXJuIGNydGNfc3RhdGUtPm1z
dF9tYXN0ZXJfdHJhbnNjb2RlciAhPSBJTlZBTElEX1RSQU5TQ09ERVIgJiYKKwkgICAgICAgY3J0
Y19zdGF0ZS0+bXN0X21hc3Rlcl90cmFuc2NvZGVyICE9IGNydGNfc3RhdGUtPmNwdV90cmFuc2Nv
ZGVyOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
cF9tc3QuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbXN0LmgKaW5k
ZXggZjY2MGFkODBkYjA0Li44NTQ3MjRmNjhmMDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbXN0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcF9tc3QuaApAQCAtNiwxMCArNiwxNSBAQAogI2lmbmRlZiBfX0lOVEVM
X0RQX01TVF9IX18KICNkZWZpbmUgX19JTlRFTF9EUF9NU1RfSF9fCiAKKyNpbmNsdWRlIDxsaW51
eC90eXBlcy5oPgorCiBzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0Oworc3RydWN0IGludGVsX2Ny
dGNfc3RhdGU7CiAKIGludCBpbnRlbF9kcF9tc3RfZW5jb2Rlcl9pbml0KHN0cnVjdCBpbnRlbF9k
aWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0LCBpbnQgY29ubl9pZCk7CiB2b2lkIGludGVsX2Rw
X21zdF9lbmNvZGVyX2NsZWFudXAoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGln
X3BvcnQpOwogaW50IGludGVsX2RwX21zdF9lbmNvZGVyX2FjdGl2ZV9saW5rcyhzdHJ1Y3QgaW50
ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCk7Citib29sIGludGVsX2RwX21zdF9pc19t
YXN0ZXJfdHJhbnMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwor
Ym9vbCBpbnRlbF9kcF9tc3RfaXNfc2xhdmVfdHJhbnMoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpOwogCiAjZW5kaWYgLyogX19JTlRFTF9EUF9NU1RfSF9fICovCi0t
IAoyLjI0LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

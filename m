Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A966F5EFAA
	for <lists+intel-gfx@lfdr.de>; Thu,  4 Jul 2019 01:38:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1E0F16E21D;
	Wed,  3 Jul 2019 23:38:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3156A6E21D
 for <intel-gfx@lists.freedesktop.org>; Wed,  3 Jul 2019 23:38:08 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 03 Jul 2019 16:38:07 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,448,1557212400"; d="scan'208";a="154899229"
Received: from mdroper-desk.fm.intel.com ([10.105.128.126])
 by orsmga007.jf.intel.com with ESMTP; 03 Jul 2019 16:38:07 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  3 Jul 2019 16:37:35 -0700
Message-Id: <20190703233736.5816-5-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.17.2
In-Reply-To: <20190703233736.5816-1-matthew.d.roper@intel.com>
References: <20190703233736.5816-1-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 4/5] drm/i915: Transition port type checks to
 phy checks
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VHJhbnNpdGlvbiB0aGUgcmVtYWluaW5nIHVzZXMgb2YgaW50ZWxfcG9ydF9pc18qIG92ZXIgdG8g
dGhlIGVxdWl2YWxlbnQKaW50ZWxfcGh5X2lzXyogZnVuY3Rpb25zIGFuZCBkcm9wIHRoZSBwb3J0
IGZ1bmN0aW9ucy4KCkNjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVs
LmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dCBSb3BlciA8bWF0dGhldy5kLnJvcGVyQGludGVsLmNv
bT4KLS0tCldlIG1pZ2h0IHdhbnQgdG8gaG9sZCBvZmYgb24gbWVyZ2luZyB0aGlzIG9uZSB1bnRp
bCBhZnRlciBUR0wgbGFuZHMgdG8KYXZvaWQgdW5uZWNlc3NhcnkgY29uZmxpY3RzIHRoZXJlLgoK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jICAgICB8ICA0ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCA0OSArKysrKysr
KysrKystLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YyAgfCAzOCArKysrLS0tLS0tLS0tLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eV9wb3dlci5jICAgIHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYyAgICAgICB8IDE1ICsrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kcGxsX21nci5jIHwgMTEgKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5o
ICAgICAgICAgICAgICB8ICAyIC0KIDcgZmlsZXMgY2hhbmdlZCwgNjEgaW5zZXJ0aW9ucygrKSwg
NjIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9iaW9zLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3Mu
YwppbmRleCAwYzk4MDgxMzJkNjcuLjRmZGJiNWMzNWQ4NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKQEAgLTI4LDYgKzI4LDcgQEAKICNpbmNsdWRlIDxkcm0v
ZHJtX2RwX2hlbHBlci5oPgogI2luY2x1ZGUgPGRybS9pOTE1X2RybS5oPgogCisjaW5jbHVkZSAi
ZGlzcGxheS9pbnRlbF9kaXNwbGF5LmgiCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9nbWJ1cy5o
IgogCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKQEAgLTE3MzMsMTIgKzE3MzQsMTMgQEAgaW5pdF92
YnRfbWlzc2luZ19kZWZhdWx0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJ
Zm9yIChwb3J0ID0gUE9SVF9BOyBwb3J0IDwgSTkxNV9NQVhfUE9SVFM7IHBvcnQrKykgewogCQlz
dHJ1Y3QgZGRpX3ZidF9wb3J0X2luZm8gKmluZm8gPQogCQkJJmRldl9wcml2LT52YnQuZGRpX3Bv
cnRfaW5mb1twb3J0XTsKKwkJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3By
aXYsIHBvcnQpOwogCiAJCS8qCiAJCSAqIFZCVCBoYXMgdGhlIFR5cGVDIG1vZGUgKG5hdGl2ZSxU
QlQvVVNCKSBhbmQgd2UgZG9uJ3Qgd2FudAogCQkgKiB0byBkZXRlY3QgaXQuCiAJCSAqLwotCQlp
ZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkpCisJCWlmIChpbnRlbF9waHlfaXNf
dGMoZGV2X3ByaXYsIHBoeSkpCiAJCQljb250aW51ZTsKIAogCQlpbmZvLT5zdXBwb3J0c19kdmkg
PSAocG9ydCAhPSBQT1JUX0EgJiYgcG9ydCAhPSBQT1JUX0UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggNTBkZDlkNzMxNDU2Li4zN2M4Y2VjYjlhNmEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtODY4LDExICs4Njgs
MTIgQEAgaWNsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCiBzdGF0aWMgaW50IGludGVsX2RkaV9oZG1pX2xl
dmVsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7
CiAJaW50IG5fZW50cmllcywgbGV2ZWwsIGRlZmF1bHRfZW50cnk7CisJZW51bSBwaHkgcGh5ID0g
aW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCiAJbGV2ZWwgPSBkZXZfcHJpdi0+
dmJ0LmRkaV9wb3J0X2luZm9bcG9ydF0uaGRtaV9sZXZlbF9zaGlmdDsKIAogCWlmIChJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDExKSB7Ci0JCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9w
cml2LCBwb3J0KSkKKwkJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkKIAkJ
CWljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2LCBJTlRFTF9PVVRQVVRfSERNSSwKIAkJ
CQkJCTAsICZuX2VudHJpZXMpOwogCQllbHNlCkBAIC0xNDg3LDkgKzE0ODgsMTAgQEAgc3RhdGlj
IHZvaWQgaWNsX2RkaV9jbG9ja19nZXQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNl
LmRldik7CiAJc3RydWN0IGludGVsX2RwbGxfaHdfc3RhdGUgKnBsbF9zdGF0ZSA9ICZwaXBlX2Nv
bmZpZy0+ZHBsbF9od19zdGF0ZTsKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJ
ZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCWludCBs
aW5rX2Nsb2NrOwogCi0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQp
KSB7CisJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgewogCQlsaW5rX2Ns
b2NrID0gY25sX2NhbGNfd3JwbGxfbGluayhkZXZfcHJpdiwgcGxsX3N0YXRlKTsKIAl9IGVsc2Ug
ewogCQllbnVtIGludGVsX2RwbGxfaWQgcGxsX2lkID0gaW50ZWxfZ2V0X3NoYXJlZF9kcGxsX2lk
KGRldl9wcml2LApAQCAtMjA4Niw2ICsyMDg4LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dl
dF9wb3dlcl9kb21haW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYp
OwogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0OworCWVudW0gcGh5IHBoeSA9
IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAogCS8qCiAJICog
VE9ETzogQWRkIHN1cHBvcnQgZm9yIE1TVCBlbmNvZGVycy4gQXRtLCB0aGUgZm9sbG93aW5nIHNo
b3VsZCBuZXZlcgpAQCAtMjEwMyw3ICsyMTA2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2dl
dF9wb3dlcl9kb21haW5zKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqIHBvcnRz
LgogCSAqLwogCWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKGNydGNfc3RhdGUpIHx8Ci0J
ICAgIGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCSAgICBpbnRl
bF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRl
dl9wcml2LAogCQkJCQlpbnRlbF9kZGlfbWFpbl9saW5rX2F1eF9kb21haW4oZGlnX3BvcnQpKTsK
IApAQCAtMjIyOCwxMCArMjIzMSwxMSBAQCB1OCBpbnRlbF9kZGlfZHBfdm9sdGFnZV9tYXgoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCA9IGVuY190b19pbnRlbF9kcCgmZW5jb2Rlci0+YmFzZSk7CiAJZW51bSBwb3J0IHBv
cnQgPSBlbmNvZGVyLT5wb3J0OworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRl
dl9wcml2LCBwb3J0KTsKIAlpbnQgbl9lbnRyaWVzOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPj0gMTEpIHsKLQkJaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQp
KQorCQlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQogCQkJaWNsX2dldF9j
b21ib19idWZfdHJhbnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCiAJCQkJCQlpbnRlbF9kcC0+
bGlua19yYXRlLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQpAQCAtMjY2NCw5ICsyNjY4LDkgQEAgc3Rh
dGljIHZvaWQgaWNsX2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsCiAJCQkJICAgIGVudW0gaW50ZWxfb3V0cHV0X3R5cGUgdHlwZSkKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsK
LQllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxf
cG9ydF90b19waHkoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCi0JaWYgKGludGVsX3BvcnRf
aXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKQorCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2
X3ByaXYsIHBoeSkpCiAJCWljbF9jb21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVy
LCBsZXZlbCwgdHlwZSk7CiAJZWxzZQogCQlpY2xfbWdfcGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uo
ZW5jb2RlciwgbGlua19jbG9jaywgbGV2ZWwpOwpAQCAtMjcyOSwxMiArMjczMywxMyBAQCB1MzIg
ZGRpX3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogc3RhdGljIGlu
bGluZQogdTMyIGljbF9kcGNsa2FfY2ZnY3IwX2Nsa19vZmYoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAotCQkJICAgICAgZW51bSBwb3J0IHBvcnQpCisJCQkgICAgICBlbnVtIHBo
eSBwaHkpCiB7Ci0JaWYgKGludGVsX3BvcnRfaXNfY29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKSB7
Ci0JCXJldHVybiBJQ0xfRFBDTEtBX0NGR0NSMF9ERElfQ0xLX09GRihwb3J0KTsKLQl9IGVsc2Ug
aWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKSB7Ci0JCWVudW0gdGNfcG9ydCB0
Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgcG9ydCk7CisJaWYgKGludGVsX3Bo
eV9pc19jb21ibyhkZXZfcHJpdiwgcGh5KSkgeworCQlyZXR1cm4gSUNMX0RQQ0xLQV9DRkdDUjBf
RERJX0NMS19PRkYocGh5KTsKKwl9IGVsc2UgaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwg
cGh5KSkgeworCQllbnVtIHRjX3BvcnQgdGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3By
aXYsCisJCQkJCQkJKGVudW0gcG9ydClwaHkpOwogCiAJCXJldHVybiBJQ0xfRFBDTEtBX0NGR0NS
MF9UQ19DTEtfT0ZGKHRjX3BvcnQpOwogCX0KQEAgLTI4NzYsNiArMjg4MSw3IEBAIHN0YXRpYyB2
b2lkIGludGVsX2RkaV9jbGtfc2VsZWN0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAog
ewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+
YmFzZS5kZXYpOwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBw
aHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAJdTMyIHZhbDsKIAljb25z
dCBzdHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbCA9IGNydGNfc3RhdGUtPnNoYXJlZF9kcGxs
OwogCkBAIC0yODg1LDcgKzI4OTEsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfY2xrX3NlbGVj
dChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+
ZHBsbF9sb2NrKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExKSB7Ci0JCWlmICgh
aW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgcG9ydCkpCisJCWlmICghaW50ZWxfcGh5
X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQogCQkJSTkxNV9XUklURShERElfQ0xLX1NFTChwb3J0
KSwKIAkJCQkgICBpY2xfcGxsX3RvX2RkaV9jbGtfc2VsKGVuY29kZXIsIGNydGNfc3RhdGUpKTsK
IAl9IGVsc2UgaWYgKElTX0NBTk5PTkxBS0UoZGV2X3ByaXYpKSB7CkBAIC0yOTI1LDkgKzI5MzEs
MTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2Nsa19kaXNhYmxlKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9y
dDsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgcG9ydCk7CiAK
IAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkgewotCQlpZiAoIWludGVsX3BvcnRfaXNf
Y29tYm9waHkoZGV2X3ByaXYsIHBvcnQpKQorCQlpZiAoIWludGVsX3BoeV9pc19jb21ibyhkZXZf
cHJpdiwgcGh5KSkKIAkJCUk5MTVfV1JJVEUoRERJX0NMS19TRUwocG9ydCksIERESV9DTEtfU0VM
X05PTkUpOwogCX0gZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKIAkJSTkxNV9X
UklURShEUENMS0FfQ0ZHQ1IwLCBJOTE1X1JFQUQoRFBDTEtBX0NGR0NSMCkgfApAQCAtMzEzNCw3
ICszMTQxLDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiAKIAlpbnRlbF9kZGlfY2xrX3NlbGVjdChlbmNvZGVyLCBj
cnRjX3N0YXRlKTsKIAotCWlmICghaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkgfHwK
KwlpZiAoIWludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSB8fAogCSAgICBkaWdfcG9ydC0+
dGNfbW9kZSAhPSBUQ19QT1JUX1RCVF9BTFQpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRl
dl9wcml2LAogCQkJCQlkaWdfcG9ydC0+ZGRpX2lvX3Bvd2VyX2RvbWFpbik7CkBAIC0zMTUyLDcg
KzMxNTksNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfcHJlX2VuYWJsZV9kcChzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIAllbHNlCiAJCWludGVsX3ByZXBhcmVfZHBfZGRpX2J1ZmZl
cnMoZW5jb2RlciwgY3J0Y19zdGF0ZSk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShk
ZXZfcHJpdiwgcG9ydCkpIHsKKwlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkp
KSB7CiAJCWJvb2wgbGFuZV9yZXZlcnNhbCA9CiAJCQlkaWdfcG9ydC0+c2F2ZWRfcG9ydF9iaXRz
ICYgRERJX0JVRl9QT1JUX1JFVkVSU0FMOwogCkBAIC0zMzA0LDYgKzMzMTEsNyBAQCBzdGF0aWMg
dm9pZCBpbnRlbF9kZGlfcG9zdF9kaXNhYmxlX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSAmZGlnX3BvcnQtPmRwOwogCWJvb2wg
aXNfbXN0ID0gaW50ZWxfY3J0Y19oYXNfdHlwZShvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJICBJTlRF
TF9PVVRQVVRfRFBfTVNUKTsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZf
cHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAKIAlpZiAoIWlzX21zdCkgewogCQlpbnRlbF9kZGlfZGlz
YWJsZV9waXBlX2Nsb2NrKG9sZF9jcnRjX3N0YXRlKTsKQEAgLTMzMTksNyArMzMyNyw3IEBAIHN0
YXRpYyB2b2lkIGludGVsX2RkaV9wb3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCiAJaW50ZWxfZWRwX3BhbmVsX3ZkZF9vbihpbnRlbF9kcCk7CiAJaW50ZWxfZWRw
X3BhbmVsX29mZihpbnRlbF9kcCk7CiAKLQlpZiAoIWludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYs
IGVuY29kZXItPnBvcnQpIHx8CisJaWYgKCFpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkg
fHwKIAkgICAgZGlnX3BvcnQtPnRjX21vZGUgIT0gVENfUE9SVF9UQlRfQUxUKQogCQlpbnRlbF9k
aXNwbGF5X3Bvd2VyX3B1dF91bmNoZWNrZWQoZGV2X3ByaXYsCiAJCQkJCQkgIGRpZ19wb3J0LT5k
ZGlfaW9fcG93ZXJfZG9tYWluKTsKQEAgLTM2NjksOCArMzY3Nyw5IEBAIGludGVsX2RkaV9wcmVf
cGxsX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlz
dHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgmZW5j
b2Rlci0+YmFzZSk7Ci0JYm9vbCBpc190Y19wb3J0ID0gaW50ZWxfcG9ydF9pc190YyhkZXZfcHJp
diwgZW5jb2Rlci0+cG9ydCk7CiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0OworCWVu
dW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0KTsKKwlib29sIGlz
X3RjX3BvcnQgPSBpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSk7CiAKIAlpZiAoaXNfdGNf
cG9ydCkKIAkJaW50ZWxfdGNfcG9ydF9nZXRfbGluayhkaWdfcG9ydCwgY3J0Y19zdGF0ZS0+bGFu
ZV9jb3VudCk7CkBAIC0zNzAwLDcgKzM3MDksOCBAQCBpbnRlbF9kZGlfcG9zdF9wbGxfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50
ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgmZW5jb2Rlci0+YmFz
ZSk7Ci0JYm9vbCBpc190Y19wb3J0ID0gaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rl
ci0+cG9ydCk7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIGVu
Y29kZXItPnBvcnQpOworCWJvb2wgaXNfdGNfcG9ydCA9IGludGVsX3BoeV9pc190YyhkZXZfcHJp
diwgcGh5KTsKIAogCWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKGNydGNfc3RhdGUpIHx8
IGlzX3RjX3BvcnQpCiAJCWludGVsX2Rpc3BsYXlfcG93ZXJfcHV0X3VuY2hlY2tlZChkZXZfcHJp
diwKQEAgLTQyMTQsNiArNDIyNCw3IEBAIHZvaWQgaW50ZWxfZGRpX2luaXQoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAlzdHJ1Y3QgZHJtX2VuY29k
ZXIgKmVuY29kZXI7CiAJYm9vbCBpbml0X2hkbWksIGluaXRfZHAsIGluaXRfbHNwY29uID0gZmFs
c2U7CiAJZW51bSBwaXBlIHBpcGU7CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHko
ZGV2X3ByaXYsIHBvcnQpOwogCiAJaW5pdF9oZG1pID0gcG9ydF9pbmZvLT5zdXBwb3J0c19kdmkg
fHwgcG9ydF9pbmZvLT5zdXBwb3J0c19oZG1pOwogCWluaXRfZHAgPSBwb3J0X2luZm8tPnN1cHBv
cnRzX2RwOwpAQCAtNDI3Nyw3ICs0Mjg4LDcgQEAgdm9pZCBpbnRlbF9kZGlfaW5pdChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogCWludGVsX2RpZ19w
b3J0LT5tYXhfbGFuZXMgPSBpbnRlbF9kZGlfbWF4X2xhbmVzKGludGVsX2RpZ19wb3J0KTsKIAlp
bnRlbF9kaWdfcG9ydC0+YXV4X2NoID0gaW50ZWxfYmlvc19wb3J0X2F1eF9jaChkZXZfcHJpdiwg
cG9ydCk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkpIHsKKwlpZiAo
aW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBwaHkpKSB7CiAJCWJvb2wgaXNfbGVnYWN5ID0gIXBv
cnRfaW5mby0+c3VwcG9ydHNfdHlwZWNfdXNiICYmCiAJCQkJICFwb3J0X2luZm8tPnN1cHBvcnRz
X3RidDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpp
bmRleCA0YTg1YWJlZjkzZTcuLjU1MDUzMGNjMmQyNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTY2NDksMjAgKzY2NDksNiBAQCBzdGF0aWMg
dm9pZCBpOXh4X3BmaXRfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlKQogCUk5MTVfV1JJVEUoQkNMUlBBVChjcnRjLT5waXBlKSwgMCk7CiB9CiAKLWJvb2wg
aW50ZWxfcG9ydF9pc19jb21ib3BoeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IGVudW0gcG9ydCBwb3J0KQotewotCWlmIChwb3J0ID09IFBPUlRfTk9ORSkKLQkJcmV0dXJuIGZh
bHNlOwotCi0JaWYgKElTX0VMS0hBUlRMQUtFKGRldl9wcml2KSkKLQkJcmV0dXJuIHBvcnQgPD0g
UE9SVF9DOwotCi0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCi0JCXJldHVybiBwb3J0
IDw9IFBPUlRfQjsKLQotCXJldHVybiBmYWxzZTsKLX0KLQogYm9vbCBpbnRlbF9waHlfaXNfY29t
Ym8oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBoeSBwaHkpCiB7CiAJ
aWYgKHBoeSA9PSBQSFlfTk9ORSkKQEAgLTY2NzcsMTQgKzY2NjMsNiBAQCBib29sIGludGVsX3Bo
eV9pc19jb21ibyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGh5IHBo
eSkKIAlyZXR1cm4gZmFsc2U7CiB9CiAKLWJvb2wgaW50ZWxfcG9ydF9pc190YyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQotewotCWlmIChJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDExICYmICFJU19FTEtIQVJUTEFLRShkZXZfcHJpdikpCi0JCXJldHVy
biBwb3J0ID49IFBPUlRfQyAmJiBwb3J0IDw9IFBPUlRfRjsKLQotCXJldHVybiBmYWxzZTsKLX0K
LQogYm9vbCBpbnRlbF9waHlfaXNfdGMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LCBlbnVtIHBoeSBwaHkpCiB7CiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYgIUlT
X0VMS0hBUlRMQUtFKGRldl9wcml2KSkKQEAgLTY3MzQsOCArNjcxMiw5IEBAIGVudW0gaW50ZWxf
ZGlzcGxheV9wb3dlcl9kb21haW4KIGludGVsX2F1eF9wb3dlcl9kb21haW4oc3RydWN0IGludGVs
X2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShkaWdfcG9ydC0+YmFzZS5iYXNlLmRldik7CisJZW51bSBwaHkgcGh5
ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIGRpZ19wb3J0LT5iYXNlLnBvcnQpOwogCi0J
aWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGRpZ19wb3J0LT5iYXNlLnBvcnQpICYmCisJ
aWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSAmJgogCSAgICBkaWdfcG9ydC0+dGNf
bW9kZSA9PSBUQ19QT1JUX1RCVF9BTFQpIHsKIAkJc3dpdGNoIChkaWdfcG9ydC0+YXV4X2NoKSB7
CiAJCWNhc2UgQVVYX0NIX0M6CkBAIC0xMDA2OSwxNiArMTAwNDgsMTcgQEAgc3RhdGljIHZvaWQg
aWNlbGFrZV9nZXRfZGRpX3BsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJ
CQkJZW51bSBwb3J0IHBvcnQsCiAJCQkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29u
ZmlnKQogeworCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBwb3J0
KTsKIAllbnVtIGljbF9wb3J0X2RwbGxfaWQgcG9ydF9kcGxsX2lkOwogCWVudW0gaW50ZWxfZHBs
bF9pZCBpZDsKIAl1MzIgdGVtcDsKIAotCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9w
cml2LCBwb3J0KSkgeworCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3ByaXYsIHBoeSkpIHsK
IAkJdGVtcCA9IEk5MTVfUkVBRChEUENMS0FfQ0ZHQ1IwX0lDTCkgJgotCQkgICAgICAgRFBDTEtB
X0NGR0NSMF9ERElfQ0xLX1NFTF9NQVNLKHBvcnQpOwotCQlpZCA9IHRlbXAgPj4gRFBDTEtBX0NG
R0NSMF9ERElfQ0xLX1NFTF9TSElGVChwb3J0KTsKKwkJCUlDTF9EUENMS0FfQ0ZHQ1IwX0RESV9D
TEtfU0VMX01BU0socGh5KTsKKwkJaWQgPSB0ZW1wID4+IElDTF9EUENMS0FfQ0ZHQ1IwX0RESV9D
TEtfU0VMX1NISUZUKHBoeSk7CiAJCXBvcnRfZHBsbF9pZCA9IElDTF9QT1JUX0RQTExfREVGQVVM
VDsKLQl9IGVsc2UgaWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKSB7CisJfSBl
bHNlIGlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBoeSkpIHsKIAkJdTMyIGNsa19zZWwg
PSBJOTE1X1JFQUQoRERJX0NMS19TRUwocG9ydCkpICYgRERJX0NMS19TRUxfTUFTSzsKIAogCQlp
ZiAoY2xrX3NlbCA9PSBERElfQ0xLX1NFTF9NRykgewpAQCAtMTY5MzUsOSArMTY5MTUsMTEgQEAg
aW50ZWxfbW9kZXNldF9zZXR1cF9od19zdGF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCiAJ
LyogU2FuaXRpemUgdGhlIFR5cGVDIHBvcnQgbW9kZSB1cGZyb250LCBlbmNvZGVycyBkZXBlbmQg
b24gdGhpcyAqLwogCWZvcl9lYWNoX2ludGVsX2VuY29kZXIoZGV2LCBlbmNvZGVyKSB7CisJCWVu
dW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsK
KwogCQkvKiBXZSBuZWVkIHRvIHNhbml0aXplIG9ubHkgdGhlIE1TVCBwcmltYXJ5IHBvcnQuICov
CiAJCWlmIChlbmNvZGVyLT50eXBlICE9IElOVEVMX09VVFBVVF9EUF9NU1QgJiYKLQkJICAgIGlu
dGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpKQorCQkgICAgaW50ZWxfcGh5
X2lzX3RjKGRldl9wcml2LCBwaHkpKQogCQkJaW50ZWxfdGNfcG9ydF9zYW5pdGl6ZShlbmNfdG9f
ZGlnX3BvcnQoJmVuY29kZXItPmJhc2UpKTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKaW5kZXggNjQ2MjdjMTE3YzMxLi4w
ZjZlYTRkNmQxZWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV9wb3dlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV9wb3dlci5jCkBAIC00ODcsNyArNDg3LDkgQEAgc3RhdGljIHZvaWQgaWNsX3Rj
X3BvcnRfYXNzZXJ0X3JlZl9oZWxkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
IAlhdXhfY2ggPSBpY2xfdGNfcGh5X2F1eF9jaChkZXZfcHJpdiwgcG93ZXJfd2VsbCk7CiAKIAlm
b3JfZWFjaF9pbnRlbF9lbmNvZGVyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7Ci0JCWlmICgh
aW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpCisJCWVudW0gcGh5IHBo
eSA9IGludGVsX3BvcnRfdG9fcGh5KGVuY29kZXItPnBvcnQpOworCisJCWlmICghaW50ZWxfcGh5
X2lzX3RjKGRldl9wcml2LCBwaHkpKQogCQkJY29udGludWU7CiAKIAkJLyogV2UnbGwgY2hlY2sg
dGhlIE1TVCBwcmltYXJ5IHBvcnQgKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYwppbmRleCA4ZjcxODhkNzFkMDguLjY3NjAzYTI0N2U4YSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtMjk3LDkgKzI5Nyw5IEBAIHN0YXRpYyBpbnQgaWNs
X21heF9zb3VyY2VfcmF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJh
c2UuYmFzZS5kZXYpOwotCWVudW0gcG9ydCBwb3J0ID0gZGlnX3BvcnQtPmJhc2UucG9ydDsKKwll
bnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZGlnX3BvcnQtPmJhc2Uu
cG9ydCk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwgcG9ydCkgJiYK
KwlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpICYmCiAJICAgICFJU19FTEtI
QVJUTEFLRShkZXZfcHJpdikgJiYKIAkgICAgIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCiAJ
CXJldHVybiA1NDAwMDA7CkBAIC0xMTkyLDcgKzExOTIsOCBAQCBpbnRlbF9kcF9hdXhfeGZlcihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
ID0KIAkJCXRvX2k5MTUoaW50ZWxfZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYpOwogCXN0cnVjdCBp
bnRlbF91bmNvcmUgKnVuY29yZSA9ICZpOTE1LT51bmNvcmU7Ci0JYm9vbCBpc190Y19wb3J0ID0g
aW50ZWxfcG9ydF9pc190YyhpOTE1LCBpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0KTsKKwllbnVt
IHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShpOTE1LCBpbnRlbF9kaWdfcG9ydC0+YmFzZS5w
b3J0KTsKKwlib29sIGlzX3RjX3BvcnQgPSBpbnRlbF9waHlfaXNfdGMoaTkxNSwgcGh5KTsKIAlp
OTE1X3JlZ190IGNoX2N0bCwgY2hfZGF0YVs1XTsKIAl1MzIgYXV4X2Nsb2NrX2RpdmlkZXI7CiAJ
ZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBhdXhfZG9tYWluID0KQEAgLTUyMTEsMTAg
KzUyMTIsMTEgQEAgc3RhdGljIGJvb2wgaWNsX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqZGlnX3BvcnQgPSBlbmNfdG9fZGlnX3BvcnQoJmVuY29kZXItPmJhc2UpOworCWVu
dW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsK
IAotCWlmIChpbnRlbF9wb3J0X2lzX2NvbWJvcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KSkK
KwlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQogCQlyZXR1cm4gaWNsX2Nv
bWJvX3BvcnRfY29ubmVjdGVkKGRldl9wcml2LCBkaWdfcG9ydCk7Ci0JZWxzZSBpZiAoaW50ZWxf
cG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpCisJZWxzZSBpZiAoaW50ZWxfcGh5
X2lzX3RjKGRldl9wcml2LCBwaHkpKQogCQlyZXR1cm4gaW50ZWxfdGNfcG9ydF9jb25uZWN0ZWQo
ZGlnX3BvcnQpOwogCWVsc2UKIAkJTUlTU0lOR19DQVNFKGVuY29kZXItPmhwZF9waW4pOwpAQCAt
NzExOCw2ICs3MTIwLDcgQEAgaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2Rp
Z2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsCiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGlu
dGVsX2VuY29kZXItPmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoZGV2KTsKIAllbnVtIHBvcnQgcG9ydCA9IGludGVsX2VuY29kZXItPnBvcnQ7
CisJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2X3ByaXYsIHBvcnQpOwogCWlu
dCB0eXBlOwogCiAJLyogSW5pdGlhbGl6ZSB0aGUgd29yayBmb3IgbW9kZXNldCBpbiBjYXNlIG9m
IGxpbmsgdHJhaW4gZmFpbHVyZSAqLwpAQCAtNzE0NCw3ICs3MTQ3LDcgQEAgaW50ZWxfZHBfaW5p
dF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQsCiAJ
CSAqIEN1cnJlbnRseSB3ZSBkb24ndCBzdXBwb3J0IGVEUCBvbiBUeXBlQyBwb3J0cywgYWx0aG91
Z2ggaW4KIAkJICogdGhlb3J5IGl0IGNvdWxkIHdvcmsgb24gVHlwZUMgbGVnYWN5IHBvcnRzLgog
CQkgKi8KLQkJV0FSTl9PTihpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSk7CisJCVdB
Uk5fT04oaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBwaHkpKTsKIAkJdHlwZSA9IERSTV9NT0RF
X0NPTk5FQ1RPUl9lRFA7CiAJfSBlbHNlIHsKIAkJdHlwZSA9IERSTV9NT0RFX0NPTk5FQ1RPUl9E
aXNwbGF5UG9ydDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZHBsbF9tZ3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9t
Z3IuYwppbmRleCBmOTUzOTcxZTdjM2IuLmY4NzgyYzI0YzQ0NyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYwpAQCAtMjU4MCw3ICsyNTgwLDggQEAg
c3RhdGljIGJvb2wgaWNsX2NhbGNfZHBsbF9zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSwKIAlzdHJ1Y3Qgc2tsX3dycGxsX3BhcmFtcyBwbGxfcGFyYW1zID0geyAwIH07
CiAJYm9vbCByZXQ7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+
cG9ydCkpCisJaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgaW50ZWxfcG9ydF90b19waHko
ZGV2X3ByaXYsCisJCQkJCQkJZW5jb2Rlci0+cG9ydCkpKQogCQlyZXQgPSBpY2xfY2FsY190YnRf
cGxsKGNydGNfc3RhdGUsICZwbGxfcGFyYW1zKTsKIAllbHNlIGlmIChpbnRlbF9jcnRjX2hhc190
eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSB8fAogCQkgaW50ZWxfY3J0Y19oYXNf
dHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKSkKQEAgLTI5OTMsMTQgKzI5OTQsMTQg
QEAgc3RhdGljIGJvb2wgaWNsX2dldF9kcGxscyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKIAkJCSAgc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOwotCWVu
dW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0
X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19j
b21ib3BoeShkZXZfcHJpdiwgcG9ydCkpCisJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJp
diwgcGh5KSkKIAkJcmV0dXJuIGljbF9nZXRfY29tYm9fcGh5X2RwbGwoc3RhdGUsIGNydGMsIGVu
Y29kZXIpOwotCWVsc2UgaWYgKGludGVsX3BvcnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKQorCWVs
c2UgaWYgKGludGVsX3BoeV9pc190YyhkZXZfcHJpdiwgcGh5KSkKIAkJcmV0dXJuIGljbF9nZXRf
dGNfcGh5X2RwbGxzKHN0YXRlLCBjcnRjLCBlbmNvZGVyKTsKIAotCU1JU1NJTkdfQ0FTRShwb3J0
KTsKKwlNSVNTSU5HX0NBU0UocGh5KTsKIAogCXJldHVybiBmYWxzZTsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfZHJ2LmgKaW5kZXggODE1YzI2YzBiOThjLi43NzBmOWY2YWFkODQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2Rydi5oCkBAIC0xNDkyLDkgKzE0OTIsNyBAQCB2b2lkIGludGVsX3Bwc191bmxv
Y2tfcmVnc193YShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRl
bF9lbmNvZGVyX2Rlc3Ryb3koc3RydWN0IGRybV9lbmNvZGVyICplbmNvZGVyKTsKIHN0cnVjdCBk
cm1fZGlzcGxheV9tb2RlICoKIGludGVsX2VuY29kZXJfY3VycmVudF9tb2RlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyKTsKLWJvb2wgaW50ZWxfcG9ydF9pc19jb21ib3BoeShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KTsKIGJvb2wgaW50ZWxf
cGh5X2lzX2NvbWJvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkg
cGh5KTsKLWJvb2wgaW50ZWxfcG9ydF9pc190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIGVudW0gcG9ydCBwb3J0KTsKIGJvb2wgaW50ZWxfcGh5X2lzX3RjKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaHkgcGh5KTsKIGVudW0gdGNfcG9ydCBpbnRl
bF9wb3J0X3RvX3RjKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgICAg
IGVudW0gcG9ydCBwb3J0KTsKLS0gCjIuMTcuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5003D2407E0
	for <lists+intel-gfx@lfdr.de>; Mon, 10 Aug 2020 16:52:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 444AC6E442;
	Mon, 10 Aug 2020 14:52:55 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 423706E442
 for <intel-gfx@lists.freedesktop.org>; Mon, 10 Aug 2020 14:52:54 +0000 (UTC)
IronPort-SDR: mOS9sbeAMd7iS3vTldv4U/mKYFl/+WCnrLO/iOhOmRIgrmUVHko/W5tNTkbiS01/PqJ5Jk9MVd
 JDNQlXkzBMPg==
X-IronPort-AV: E=McAfee;i="6000,8403,9708"; a="238376811"
X-IronPort-AV: E=Sophos;i="5.75,457,1589266800"; d="scan'208";a="238376811"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 10 Aug 2020 07:52:53 -0700
IronPort-SDR: oyeaVPQQvMAxuFwz42y7m8d+yww/7sKSBspODAFcxCQ/5JV+/EtLAbsnCEfOyvuHPvMI1QX6l5
 mKSLVHDgJskg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.75,457,1589266800"; d="scan'208";a="494819248"
Received: from irsmsx602.ger.corp.intel.com ([163.33.146.8])
 by fmsmga005.fm.intel.com with ESMTP; 10 Aug 2020 07:52:53 -0700
Received: from irsmsx605.ger.corp.intel.com (163.33.146.138) by
 irsmsx602.ger.corp.intel.com (163.33.146.8) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.1713.5; Mon, 10 Aug 2020 15:52:52 +0100
Received: from irsmsx605.ger.corp.intel.com ([163.33.146.138]) by
 IRSMSX605.ger.corp.intel.com ([163.33.146.138]) with mapi id 15.01.1713.004;
 Mon, 10 Aug 2020 15:52:52 +0100
From: "Mun, Gwan-gyeong" <gwan-gyeong.mun@intel.com>
To: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>,
 "Souza, Jose" <jose.souza@intel.com>
Thread-Topic: [PATCH  v3 1/2] drm/i915: Initial implementation of PSR2
 selective fetch
Thread-Index: AQHWU+8REruwGQhsLEiKbQNYy0PipqkxkzYA
Date: Mon, 10 Aug 2020 14:52:52 +0000
Message-ID: <9bdd855a37115fb4ba488d84821de1157867826e.camel@intel.com>
References: <20200706234337.124814-1-jose.souza@intel.com>
In-Reply-To: <20200706234337.124814-1-jose.souza@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.237.66.162]
Content-ID: <F7556D7F25E1C1438398B9ABB8A3D4A0@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v3 1/2] drm/i915: Initial implementation of
 PSR2 selective fetch
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Pandiyan, Dhinakaran" <dhinakaran.pandiyan@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gTW9uLCAyMDIwLTA3LTA2IGF0IDE2OjQzIC0wNzAwLCBKb3PDqSBSb2JlcnRvIGRlIFNvdXph
IHdyb3RlOg0KPiBBbGwgR0VOMTIgcGxhdGZvcm1zIHN1cHBvcnRzIFBTUjIgc2VsZWN0aXZlIGZl
dGNoIGJ1dCBub3QgYWxsIEdFTjEyDQo+IHBsYXRmb3JtcyBzdXBwb3J0cyBQU1IyIGhhcmR3YXJl
IHRyYWNraW5nKGFrYSBSS0wpLg0KPiANCj4gVGhpcyBmZWF0dXJlIGNvbnNpc3RzIGluIHNvZnR3
YXJlIHByb2dyYW1taW5nIHJlZ2lzdGVycyB3aXRoIHRoZQ0KPiBkYW1hZ2VkIGFyZWEgb2YgZWFj
aCBwbGFuZSB0aGlzIHdheSBoYXJkd2FyZSB3aWxsIG9ubHkgZmV0Y2ggZnJvbQ0KPiBtZW1vcnkg
dGhvc2UgYXJlYXMgYW5kIHNlbnQgdGhlIFBTUjIgc2VsZWN0aXZlIHVwZGF0ZSBibG9ja3MgdG8N
Cj4gcGFuZWwsDQo+IHNhdmluZyBldmVuIG1vcmUgcG93ZXIuDQo+IA0KPiBCdXQgYXMgaW5pdGlh
bCBzdGVwIGl0IGlzIG9ubHkgZW5hYmxpbmcgdGhlIGZ1bGwgZnJhbWUgZmV0Y2ggYXQNCj4gZXZl
cnkgZmxpcCwgdGhlIGFjdHVhbCBzZWxlY3RpdmUgZmV0Y2ggcGFydCB3aWxsIGNvbWUgaW4gYSBm
dXR1cmUNCj4gcGF0Y2guDQo+IA0KPiBBbHNvIHRoaXMgaXMgb25seSBoYW5kbGluZyB0aGUgcGFn
ZSBmbGlwIHNpZGUsIGl0IGlzIHN0aWxsIGNvbXBsZXRlbHkNCj4gbWlzc2luZyBmcm9udGJ1ZmZl
ciBtb2RpZmljYXRpb25zLCB0aGF0IGlzIHdoeSB0aGUNCj4gZW5hYmxlX3BzcjJfc2VsX2ZldGNo
IHBhcmFtZXRlciB3YXMgYWRkZWQuDQo+IA0KPiB2MzoNCj4gLSBjYWxsaW5nIGludGVsX3BzcjJf
c2VsX2ZldGNoX3VwZGF0ZSgpIGR1cmluZyB0aGUgYXRvbWljIGNoZWNrIHBoYXNlDQo+IChWaWxs
ZSkNCj4gDQo+IEJTcGVjOiA1NTIyOQ0KPiBDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJq
YWxhQGxpbnV4LmludGVsLmNvbT4NCj4gQ2M6IEltcmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNv
bT4NCj4gQ2M6IEd3YW4tZ3llb25nIE11biA8Z3dhbi1neWVvbmcubXVuQGludGVsLmNvbT4NCj4g
Q2M6IFJvZHJpZ28gVml2aSA8cm9kcmlnby52aXZpQGludGVsLmNvbT4NCj4gQ2M6IERoaW5ha2Fy
YW4gUGFuZGl5YW4gPGRoaW5ha2FyYW4ucGFuZGl5YW5AaW50ZWwuY29tPg0KPiBTaWduZWQtb2Zm
LWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4NCj4gLS0t
DQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgNSAr
DQo+ICAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYyAgfCAgMyAr
DQo+ICAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgMyAr
DQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jICAgICAgfCA5NSAr
KysrKysrKysrKysrKysrLQ0KPiAtLQ0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9wc3IuaCAgICAgIHwgIDUgKw0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
aCAgICAgICAgICAgICAgIHwgIDIgKw0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJh
bXMuYyAgICAgICAgICAgIHwgIDUgKw0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJh
bXMuaCAgICAgICAgICAgIHwgIDEgKw0KPiAgOCBmaWxlcyBjaGFuZ2VkLCAxMDUgaW5zZXJ0aW9u
cygrKSwgMTQgZGVsZXRpb25zKC0pDQo+IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYw0KPiBpbmRleCBkZmY3YzE3ZjNkMmIuLmViNjRlMmFjNzcz
YSAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMNCj4gQEAgLTEyNzU5LDYgKzEyNzU5LDkgQEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2F0b21p
Y19jaGVjayhzdHJ1Y3QNCj4gaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwNCj4gIA0KPiAgCX0N
Cj4gIA0KPiArCWlmICghbW9kZV9jaGFuZ2VkKQ0KPiArCQlpbnRlbF9wc3IyX3NlbF9mZXRjaF91
cGRhdGUoc3RhdGUsIGNydGMpOw0KPiArDQo+ICAJcmV0dXJuIDA7DQo+ICB9DQo+ICANCj4gQEAg
LTE1MTM1LDYgKzE1MTM4LDggQEAgc3RhdGljIHZvaWQgY29tbWl0X3BpcGVfY29uZmlnKHN0cnVj
dA0KPiBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLA0KPiAgDQo+ICAJCWlmIChuZXdfY3J0Y19z
dGF0ZS0+dXBkYXRlX3BpcGUpDQo+ICAJCQlpbnRlbF9waXBlX2Zhc3RzZXQob2xkX2NydGNfc3Rh
dGUsDQo+IG5ld19jcnRjX3N0YXRlKTsNCj4gKw0KPiArCQlpbnRlbF9wc3IyX3Byb2dyYW1fdHJh
bnNfbWFuX3Rya19jdGwobmV3X2NydGNfc3RhdGUpOw0KPiAgCX0NCj4gIA0KPiAgCWlmIChkZXZf
cHJpdi0+ZGlzcGxheS5hdG9taWNfdXBkYXRlX3dhdGVybWFya3MpDQo+IGRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jDQo+IGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYw0KPiBp
bmRleCAzNjQ0NzUyY2M1ZWMuLjE1ZDk2MzE4M2JjZiAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYw0KPiArKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jDQo+IEBAIC00
MTcsNiArNDE3LDkgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFf
ZmlsZQ0KPiAqbSwgdm9pZCAqZGF0YSkNCj4gIAkJCXN1X2Jsb2NrcyA9IHN1X2Jsb2NrcyA+Pg0K
PiBQU1IyX1NVX1NUQVRVU19TSElGVChmcmFtZSk7DQo+ICAJCQlzZXFfcHJpbnRmKG0sICIlZFx0
JWRcbiIsIGZyYW1lLCBzdV9ibG9ja3MpOw0KPiAgCQl9DQo+ICsNCj4gKwkJc2VxX3ByaW50Ziht
LCAiUFNSMiBzZWxlY3RpdmUgZmV0Y2g6ICVzXG4iLA0KPiArCQkJICAgZW5hYmxlZGRpc2FibGVk
KHBzci0NCj4gPnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQpKTsNCj4gIAl9DQo+ICANCj4gIHVubG9j
azoNCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheV90eXBlcy5oDQo+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmgNCj4gaW5kZXggZThmODA5MTYxYzc1Li40MDNhNzYyMTRlNzEgMTAwNjQ0DQo+
IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5o
DQo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBl
cy5oDQo+IEBAIC05MzEsNiArOTMxLDcgQEAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgew0KPiAg
DQo+ICAJYm9vbCBoYXNfcHNyOw0KPiAgCWJvb2wgaGFzX3BzcjI7DQo+ICsJYm9vbCBlbmFibGVf
cHNyMl9zZWxfZmV0Y2g7DQo+ICAJdTMyIGRjM2NvX2V4aXRsaW5lOw0KPiAgDQo+ICAJLyoNCj4g
QEAgLTEwNzMsNiArMTA3NCw4IEBAIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlIHsNCj4gIA0KPiAg
CS8qIEZvciBEU0IgcmVsYXRlZCBpbmZvICovDQo+ICAJc3RydWN0IGludGVsX2RzYiAqZHNiOw0K
PiArDQo+ICsJdTMyIHBzcjJfbWFuX3RyYWNrX2N0bDsNCj4gIH07DQo+ICANCj4gIGVudW0gaW50
ZWxfcGlwZV9jcmNfc291cmNlIHsNCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfcHNyLmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3Bzci5jDQo+IGluZGV4IGJmOWUzMjBjNTQ3ZC4uZDMwYTM1NjBiNzk0IDEwMDY0NA0KPiAt
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jDQo+ICsrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMNCj4gQEAgLTU1Myw2ICs1NTMs
MTQgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjIoc3RydWN0IGludGVsX2RwDQo+ICpp
bnRlbF9kcCkNCj4gIAkJdmFsIHw9IEVEUF9QU1IyX0ZBU1RfV0FLRSg3KTsNCj4gIAl9DQo+ICAN
Cj4gKwlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkKQ0KPiArCQlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwNCj4gKwkJCSAgICAgICBQU1IyX01BTl9UUktfQ1RMKGRldl9w
cml2LQ0KPiA+cHNyLnRyYW5zY29kZXIpLA0KPiArCQkJICAgICAgIFBTUjJfTUFOX1RSS19DVExf
RU5BQkxFKTsNCj4gKwllbHNlIGlmIChIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYpKQ0KPiAr
CQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwNCj4gKwkJCSAgICAgICBQU1IyX01BTl9UUktfQ1RM
KGRldl9wcml2LQ0KPiA+cHNyLnRyYW5zY29kZXIpLCAwKTsNCj4gKw0KPiAgCS8qDQo+ICAJICog
UFNSMiBIVyBpcyBpbmNvcnJlY3RseSB1c2luZyBFRFBfUFNSX1RQMV9UUDNfU0VMIGFuZCBCU3Bl
Yw0KPiBpcw0KPiAgCSAqIHJlY29tbWVuZGluZyBrZWVwIHRoaXMgYml0IHVuc2V0IHdoaWxlIFBT
UjIgaXMgZW5hYmxlZC4NCj4gQEAgLTY2Myw2ICs2NzEsMzggQEAgdGdsX2RjM2NvX2V4aXRsaW5l
X2NvbXB1dGVfY29uZmlnKHN0cnVjdA0KPiBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICAJY3J0Y19z
dGF0ZS0+ZGMzY29fZXhpdGxpbmUgPSBjcnRjX3ZkaXNwbGF5IC0gZXhpdF9zY2FubGluZXM7DQo+
ICB9DQo+ICANCj4gK3N0YXRpYyBib29sIGludGVsX3BzcjJfc2VsX2ZldGNoX2NvbmZpZ192YWxp
ZChzdHJ1Y3QgaW50ZWxfZHANCj4gKmludGVsX2RwLA0KPiArCQkJCQkgICAgICBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZQ0KPiAqY3J0Y19zdGF0ZSkNCj4gK3sNCj4gKwlzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSA9DQo+IHRvX2ludGVsX2F0b21pY19zdGF0ZShjcnRjX3N0YXRlLT51
YXBpLnN0YXRlKTsNCj4gKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90
b19pOTE1KGludGVsX2RwKTsNCj4gKwlzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0
YXRlOw0KPiArCXN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmU7DQo+ICsJaW50IGk7DQo+ICsNCj4g
KwlpZiAoIWRldl9wcml2LT5wYXJhbXMuZW5hYmxlX3BzcjJfc2VsX2ZldGNoKSB7DQo+ICsJCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLA0KPiArCQkJICAgICJQU1IyIHNlbCBmZXRjaCBub3Qg
ZW5hYmxlZCwgZGlzYWJsZWQgYnkNCj4gcGFyYW1ldGVyXG4iKTsNCj4gKwkJcmV0dXJuIGZhbHNl
Ow0KPiArCX0NCj4gKw0KPiArCWlmIChjcnRjX3N0YXRlLT51YXBpLmFzeW5jX2ZsaXApIHsNCj4g
KwkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sDQo+ICsJCQkgICAgIlBTUjIgc2VsIGZldGNo
IG5vdCBlbmFibGVkLCBhc3luYyBmbGlwDQo+IGVuYWJsZWRcbiIpOw0KPiArCQlyZXR1cm4gZmFs
c2U7DQo+ICsJfQ0KPiArDQo+ICsJZm9yX2VhY2hfbmV3X2ludGVsX3BsYW5lX2luX3N0YXRlKHN0
YXRlLCBwbGFuZSwgcGxhbmVfc3RhdGUsIGkpDQo+IHsNCj4gKwkJaWYgKHBsYW5lX3N0YXRlLT51
YXBpLnJvdGF0aW9uICE9IERSTV9NT0RFX1JPVEFURV8wKSB7DQo+ICsJCQlkcm1fZGJnX2ttcygm
ZGV2X3ByaXYtPmRybSwNCj4gKwkJCQkgICAgIlBTUjIgc2VsIGZldGNoIG5vdCBlbmFibGVkLCBw
bGFuZQ0KPiByb3RhdGVkXG4iKTsNCj4gKwkJCXJldHVybiBmYWxzZTsNCj4gKwkJfQ0KPiArCX0N
Cj4gKw0KPiArCXJldHVybiBjcnRjX3N0YXRlLT5lbmFibGVfcHNyMl9zZWxfZmV0Y2ggPSB0cnVl
Ow0KPiArfQ0KPiArDQo+ICBzdGF0aWMgYm9vbCBpbnRlbF9wc3IyX2NvbmZpZ192YWxpZChzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLA0KPiAgCQkJCSAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZQ0KPiAqY3J0Y19zdGF0ZSkNCj4gIHsNCj4gQEAgLTczMiwyMiArNzcyLDE3IEBAIHN0YXRpYyBi
b29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdA0KPiBpbnRlbF9kcCAqaW50ZWxfZHAs
DQo+ICAJCXJldHVybiBmYWxzZTsNCj4gIAl9DQo+ICANCj4gLQkvKg0KPiAtCSAqIFNvbWUgcGxh
dGZvcm1zIGxhY2sgUFNSMiBIVyB0cmFja2luZyBhbmQgaW5zdGVhZCByZXF1aXJlDQo+IG1hbnVh
bA0KPiAtCSAqIHRyYWNraW5nIGJ5IHNvZnR3YXJlLiAgSW4gdGhpcyBjYXNlLCB0aGUgZHJpdmVy
IGlzIHJlcXVpcmVkDQo+IHRvIHRyYWNrDQo+IC0JICogdGhlIGFyZWFzIHRoYXQgbmVlZCB1cGRh
dGVzIGFuZCBwcm9ncmFtIGhhcmR3YXJlIHRvIHNlbmQNCj4gc2VsZWN0aXZlDQo+IC0JICogdXBk
YXRlcy4NCj4gLQkgKg0KPiAtCSAqIFNvIHVudGlsIHRoZSBzb2Z0d2FyZSB0cmFja2luZyBpcyBp
bXBsZW1lbnRlZCwgUFNSMiBuZWVkcyB0bw0KPiBiZQ0KPiAtCSAqIGRpc2FibGVkIGZvciBwbGF0
Zm9ybXMgd2l0aG91dCBQU1IyIEhXIHRyYWNraW5nLg0KPiAtCSAqLw0KPiAtCWlmICghSEFTX1BT
Ul9IV19UUkFDS0lORyhkZXZfcHJpdikpIHsNCj4gLQkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5k
cm0sDQo+IC0JCQkgICAgIk5vIFBTUjIgSFcgdHJhY2tpbmcgaW4gdGhlIHBsYXRmb3JtXG4iKTsN
Cj4gLQkJcmV0dXJuIGZhbHNlOw0KPiArCWlmIChIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYp
KSB7DQo+ICsJCWlmICghaW50ZWxfcHNyMl9zZWxfZmV0Y2hfY29uZmlnX3ZhbGlkKGludGVsX2Rw
LA0KPiBjcnRjX3N0YXRlKSAmJg0KPiArCQkgICAgIUhBU19QU1JfSFdfVFJBQ0tJTkcoZGV2X3By
aXYpKSB7DQo+ICsJCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwNCj4gKwkJCQkgICAgIlBT
UjIgbm90IGVuYWJsZWQsIHNlbGVjdGl2ZSBmZXRjaA0KPiBub3QgdmFsaWQgYW5kIG5vIEhXIHRy
YWNraW5nIGF2YWlsYWJsZVxuIik7DQo+ICsJCQlyZXR1cm4gZmFsc2U7DQo+ICsJCX0NCj4gIAl9
DQo+ICANCj4gLQlpZiAoY3J0Y19oZGlzcGxheSA+IHBzcl9tYXhfaCB8fCBjcnRjX3ZkaXNwbGF5
ID4gcHNyX21heF92KSB7DQo+ICsJaWYgKCFjcnRjX3N0YXRlLT5lbmFibGVfcHNyMl9zZWxfZmV0
Y2ggJiYNCj4gKwkgICAgKGNydGNfaGRpc3BsYXkgPiBwc3JfbWF4X2ggfHwgY3J0Y192ZGlzcGxh
eSA+IHBzcl9tYXhfdikpIHsNCj4gIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sDQo+ICAJ
CQkgICAgIlBTUjIgbm90IGVuYWJsZWQsIHJlc29sdXRpb24gJWR4JWQgPiBtYXgNCj4gc3VwcG9y
dGVkICVkeCVkXG4iLA0KPiAgCQkJICAgIGNydGNfaGRpc3BsYXksIGNydGNfdmRpc3BsYXksDQo+
IEBAIC04OTgsNiArOTMzLDExIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfc291cmNl
KHN0cnVjdA0KPiBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICAJCXZhbCB8PSBFWElUTElORV9FTkFC
TEU7DQo+ICAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFWElUTElORShjcHVfdHJhbnNjb2Rl
ciksDQo+IHZhbCk7DQo+ICAJfQ0KPiArDQo+ICsJaWYgKEhBU19QU1JfSFdfVFJBQ0tJTkcoZGV2
X3ByaXYpKQ0KPiArCQlpbnRlbF9kZV9ybXcoZGV2X3ByaXYsIENISUNLRU5fUEFSMV8xLA0KPiBJ
R05PUkVfUFNSMl9IV19UUkFDS0lORywNCj4gKwkJCSAgICAgZGV2X3ByaXYtPnBzci5wc3IyX3Nl
bF9mZXRjaF9lbmFibGVkID8NCj4gKwkJCSAgICAgSUdOT1JFX1BTUjJfSFdfVFJBQ0tJTkcgOiAw
KTsNCj4gIH0NCj4gIA0KPiAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUNCj4gKmRldl9wcml2LA0KPiBAQCAtOTE5LDYgKzk1OSw3IEBA
IHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdA0KPiBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwNCj4gIAkvKiBEQzUvREM2IHJlcXVpcmVzIGF0IGxlYXN0IDYgaWRs
ZSBmcmFtZXMgKi8NCj4gIAl2YWwgPSB1c2Vjc190b19qaWZmaWVzKGludGVsX2dldF9mcmFtZV90
aW1lX3VzKGNydGNfc3RhdGUpICoNCj4gNik7DQo+ICAJZGV2X3ByaXYtPnBzci5kYzNjb19leGl0
X2RlbGF5ID0gdmFsOw0KPiArCWRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA9
IGNydGNfc3RhdGUtDQo+ID5lbmFibGVfcHNyMl9zZWxfZmV0Y2g7DQo+ICANCj4gIAkvKg0KPiAg
CSAqIElmIGEgUFNSIGVycm9yIGhhcHBlbmVkIGFuZCB0aGUgZHJpdmVyIGlzIHJlbG9hZGVkLCB0
aGUNCj4gRURQX1BTUl9JSVINCj4gQEAgLTExMTUsNiArMTE1NiwzMiBAQCBzdGF0aWMgdm9pZCBw
c3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3QNCj4gZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpDQo+ICAJCWludGVsX3Bzcl9leGl0KGRldl9wcml2KTsNCj4gIH0NCj4gIA0KPiArdm9p
ZCBpbnRlbF9wc3IyX3Byb2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoY29uc3Qgc3RydWN0DQo+IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpDQo+ICt7DQo+ICsJc3RydWN0IGludGVsX2NydGMg
KmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7DQo+ICsJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7DQo+
ICsJc3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYtPnBzcjsNCj4gKw0KPiArCWlmICgh
SEFTX1BTUjJfU0VMX0ZFVENIKGRldl9wcml2KSB8fA0KPiArCSAgICAhY3J0Y19zdGF0ZS0+ZW5h
YmxlX3BzcjJfc2VsX2ZldGNoKQ0KPiArCQlyZXR1cm47DQo+ICsNCj4gKwlpbnRlbF9kZV93cml0
ZShkZXZfcHJpdiwgUFNSMl9NQU5fVFJLX0NUTChwc3ItPnRyYW5zY29kZXIpLA0KPiArCQkgICAg
ICAgY3J0Y19zdGF0ZS0+cHNyMl9tYW5fdHJhY2tfY3RsKTsNCj4gK30NCj4gKw0KPiArdm9pZCBp
bnRlbF9wc3IyX3NlbF9mZXRjaF91cGRhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsDQo+ICsJCQkJIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKQ0KPiArew0KPiArCXN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0NCj4gaW50ZWxfYXRvbWljX2dldF9uZXdfY3J0
Y19zdGF0ZShzdGF0ZSwgY3J0Yyk7DQo+ICsNCj4gKwlpZiAoIWNydGNfc3RhdGUtPmVuYWJsZV9w
c3IyX3NlbF9mZXRjaCkNCj4gKwkJcmV0dXJuOw0KPiArDQo+ICsJY3J0Y19zdGF0ZS0+cHNyMl9t
YW5fdHJhY2tfY3RsID0gUFNSMl9NQU5fVFJLX0NUTF9FTkFCTEUgfA0KPiArCQkJCQkgUFNSMl9N
QU5fVFJLX0NUTF9TRl9TSU5HTEVfRlVMDQo+IExfRlJBTUU7DQo+ICt9DQo+ICsNCj4gIC8qKg0K
PiAgICogaW50ZWxfcHNyX3VwZGF0ZSAtIFVwZGF0ZSBQU1Igc3RhdGUNCj4gICAqIEBpbnRlbF9k
cDogSW50ZWwgRFANCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfcHNyLmgNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5o
DQo+IGluZGV4IGI0NTE1MTg2ZDVmNC4uNmE4M2M4ZTY4MmU2IDEwMDY0NA0KPiAtLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oDQo+ICsrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgNCj4gQEAgLTEzLDYgKzEzLDggQEAgc3RydWN0
IGRybV9jb25uZWN0b3Jfc3RhdGU7DQo+ICBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsNCj4gIHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlOw0KPiAgc3RydWN0IGludGVsX2RwOw0KPiArc3RydWN0IGlu
dGVsX2NydGM7DQo+ICtzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlOw0KPiAgDQo+ICAjZGVmaW5l
IENBTl9QU1IoZGV2X3ByaXYpIChIQVNfUFNSKGRldl9wcml2KSAmJiBkZXZfcHJpdi0NCj4gPnBz
ci5zaW5rX3N1cHBvcnQpDQo+ICB2b2lkIGludGVsX3Bzcl9pbml0X2RwY2Qoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCk7DQo+IEBAIC00Myw1ICs0NSw4IEBAIHZvaWQgaW50ZWxfcHNyX2F0b21p
Y19jaGVjayhzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcg0KPiAqY29ubmVjdG9yLA0KPiAgCQkJICAgIHN0
cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpvbGRfc3RhdGUsDQo+ICAJCQkgICAgc3RydWN0IGRy
bV9jb25uZWN0b3Jfc3RhdGUgKm5ld19zdGF0ZSk7DQo+ICB2b2lkIGludGVsX3Bzcl9zZXRfZm9y
Y2VfbW9kZV9jaGFuZ2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOw0KPiArdm9pZCBpbnRl
bF9wc3IyX3NlbF9mZXRjaF91cGRhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUs
DQo+ICsJCQkJIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsNCj4gK3ZvaWQgaW50ZWxfcHNyMl9w
cm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKGNvbnN0IHN0cnVjdA0KPiBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlKTsNCj4gIA0KPiAgI2VuZGlmIC8qIF9fSU5URUxfUFNSX0hfXyAqLw0KPiBk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaA0KPiBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgNCj4gaW5kZXggMmMyZTg4ZDQ5ZjNlLi4xZjNmYmVjMmYy
MjggMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgNCj4gKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaA0KPiBAQCAtNTA1LDYgKzUwNSw3IEBA
IHN0cnVjdCBpOTE1X3BzciB7DQo+ICAJYm9vbCBsaW5rX3N0YW5kYnk7DQo+ICAJYm9vbCBjb2xv
cmltZXRyeV9zdXBwb3J0Ow0KPiAgCWJvb2wgcHNyMl9lbmFibGVkOw0KPiArCWJvb2wgcHNyMl9z
ZWxfZmV0Y2hfZW5hYmxlZDsNCj4gIAl1OCBzaW5rX3N5bmNfbGF0ZW5jeTsNCj4gIAlrdGltZV90
IGxhc3RfZW50cnlfYXR0ZW1wdDsNCj4gIAlrdGltZV90IGxhc3RfZXhpdDsNCj4gQEAgLTE2NTMs
NiArMTY1NCw3IEBAIElTX1NVQlBMQVRGT1JNKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
DQo+ICppOTE1LA0KPiAgI2RlZmluZSBIQVNfUFNSKGRldl9wcml2KQkJIChJTlRFTF9JTkZPKGRl
dl9wcml2KS0NCj4gPmRpc3BsYXkuaGFzX3BzcikNCj4gICNkZWZpbmUgSEFTX1BTUl9IV19UUkFD
S0lORyhkZXZfcHJpdikgXA0KPiAgCShJTlRFTF9JTkZPKGRldl9wcml2KS0+ZGlzcGxheS5oYXNf
cHNyX2h3X3RyYWNraW5nKQ0KPiArI2RlZmluZSBIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYp
CSAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikNCj4gICNkZWZpbmUgSEFTX1RSQU5TQ09ERVIo
ZGV2X3ByaXYsIHRyYW5zKQkgKChJTlRFTF9JTkZPKGRldl9wcml2KQ0KPiAtPmNwdV90cmFuc2Nv
ZGVyX21hc2sgJiBCSVQodHJhbnMpKSAhPSAwKQ0KPiAgDQo+ICAjZGVmaW5lIEhBU19SQzYoZGV2
X3ByaXYpCQkgKElOVEVMX0lORk8oZGV2X3ByaXYpLQ0KPiA+aGFzX3JjNikNCj4gZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmMNCj4gYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3BhcmFtcy5jDQo+IGluZGV4IDhkOGRiOWZmMGE0OC4uN2YxMzllYTRhOTBi
IDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BhcmFtcy5jDQo+ICsr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmMNCj4gQEAgLTEwMiw2ICsxMDIs
MTEgQEAgaTkxNV9wYXJhbV9uYW1lZChwc3Jfc2FmZXN0X3BhcmFtcywgYm9vbCwgMDQwMCwNCj4g
IAkiaXMgaGVscGZ1bCB0byBkZXRlY3QgaWYgUFNSIGlzc3VlcyBhcmUgcmVsYXRlZCB0byBiYWQg
dmFsdWVzDQo+IHNldCBpbiAiDQo+ICAJIiBWQlQuICgwPXVzZSBWQlQgcGFyYW1ldGVycywgMT11
c2Ugc2FmZXN0IHBhcmFtZXRlcnMpIik7DQo+ICANCj4gK2k5MTVfcGFyYW1fbmFtZWRfdW5zYWZl
KGVuYWJsZV9wc3IyX3NlbF9mZXRjaCwgYm9vbCwgMDQwMCwNCj4gKwkiRW5hYmxlIFBTUjIgc2Vs
ZWN0aXZlIGZldGNoICINCj4gKwkiKDA9ZGlzYWJsZWQsIDE9ZW5hYmxlZCkgIg0KPiArCSJEZWZh
dWx0OiAwIik7DQo+ICsNCj4gIGk5MTVfcGFyYW1fbmFtZWRfdW5zYWZlKGZvcmNlX3Byb2JlLCBj
aGFycCwgMDQwMCwNCj4gIAkiRm9yY2UgcHJvYmUgdGhlIGRyaXZlciBmb3Igc3BlY2lmaWVkIGRl
dmljZXMuICINCj4gIAkiU2VlIENPTkZJR19EUk1fSTkxNV9GT1JDRV9QUk9CRSBmb3IgZGV0YWls
cy4iKTsNCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmgN
Cj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BhcmFtcy5oDQo+IGluZGV4IDUzZmI1YmE4
ZmJlZC4uMzMwYzAzZTJiNGY3IDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3BhcmFtcy5oDQo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmgN
Cj4gQEAgLTU0LDYgKzU0LDcgQEAgc3RydWN0IGRybV9wcmludGVyOw0KPiAgCXBhcmFtKGludCwg
ZW5hYmxlX2ZiYywgLTEsIDA2MDApIFwNCj4gIAlwYXJhbShpbnQsIGVuYWJsZV9wc3IsIC0xLCAw
NjAwKSBcDQo+ICAJcGFyYW0oYm9vbCwgcHNyX3NhZmVzdF9wYXJhbXMsIGZhbHNlLCAwNjAwKSBc
DQo+ICsJcGFyYW0oYm9vbCwgZW5hYmxlX3BzcjJfc2VsX2ZldGNoLCBmYWxzZSwgMDYwMCkgXA0K
PiAgCXBhcmFtKGludCwgZGlzYWJsZV9wb3dlcl93ZWxsLCAtMSwgMDQwMCkgXA0KPiAgCXBhcmFt
KGludCwgZW5hYmxlX2lwcywgMSwgMDYwMCkgXA0KPiAgCXBhcmFtKGludCwgaW52ZXJ0X2JyaWdo
dG5lc3MsIDAsIDA2MDApIFwNCkFzIHBlciB0aGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBwb2ludCBv
ZiB2aWV3LCBpdCBsb29rcyBnb29kIHRvIG1lLg0KQnV0IHdoaWxlIHRoZSBtb3VzZSBwb2ludGVy
IG1vdmVzIG9uIHRoZSBzY3JlZW4sIHRoZSBtb3VzZSBwb2ludGVyDQptb3ZlbWVudCBzaG93ZWQg
c3R1dHRlcmluZyBtb3Rpb24uIA0KKCBnZG0sIHdlc3RvbiBhbmQgZ25vbWUtbXV0dGVyIG9uIFRH
TCkuDQpXaGVuIHRoZSBQU1IyIHNlbGVjdGl2ZSB1cGRhdGUgaXMgY29taW5nLCB3ZSBzaG91bGQg
Zml4IHRoaXMuDQpGb3Igbm93LCBpdCBpcyBub3QgZW5hYmxlZCBieSBkZWZhdWx0IChpdCBjYW4g
YmUgZW5hYmxlZCBieSBib290DQpwYXJhbWV0ZXIgKGk5MTUuZW5hYmxlX3BzcjJfc2VsX2ZldGNo
PTEpKSwNClJldmlld2VkLWJ5OiBHd2FuLWd5ZW9uZyBNdW4gPGd3YW4tZ3llb25nLm11bkBpbnRl
bC5jb20+DQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

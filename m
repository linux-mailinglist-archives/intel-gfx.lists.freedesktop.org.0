Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0A9D288A44
	for <lists+intel-gfx@lfdr.de>; Sat, 10 Aug 2019 11:30:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 695B7894DD;
	Sat, 10 Aug 2019 09:29:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BC97E894DD
 for <intel-gfx@lists.freedesktop.org>; Sat, 10 Aug 2019 09:29:57 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17951432-1500050 
 for multiple; Sat, 10 Aug 2019 10:29:47 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 10 Aug 2019 10:29:45 +0100
Message-Id: <20190810092945.2762-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190810091748.10972-2-chris@chris-wilson.co.uk>
References: <20190810091748.10972-2-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/blt: bump the size restriction
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Matthew Auld <matthew.auld@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWF0dGhldyBBdWxkIDxtYXR0aGV3LmF1bGRAaW50ZWwuY29tPgoKQXMgcG9pbnRlZCBv
dXQgYnkgQ2hyaXMsIHdpdGggb3VyIGN1cnJlbnQgYXBwcm9hY2ggd2UgYXJlIGFjdHVhbGx5Cmxp
bWl0ZWQgdG8gUzE2X01BWCAqIFBBR0VfU0laRSBmb3Igb3VyIHNpemUgd2hlbiB1c2luZyB0aGUg
Ymx0IHRvIGNsZWFyCnBhZ2VzLiBLZWVwaW5nIHRoaW5ncyBzaW1wbGUgdHJ5IHRvIGZpeCB0aGlz
IGJ5IHJlZHVjaW5nIHRoZSBjb3B5IHRvIGEKc2VxdWVuY2Ugb2YgUzE2X01BWCAqIFBBR0VfU0la
RSBibG9ja3MuCgpSZXBvcnRlZC1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24u
Y28udWs+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQXVsZCA8bWF0dGhldy5hdWxkQGludGVsLmNv
bT4KQ2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpSZXZpZXdlZC1i
eTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CltpY2tsZTogaGlkZSB0
aGUgZGV0YWlscyBvZiB0aGUgZW5naW5lIHBvb2wgaW5zaWRlIGVtaXRfdm1hXQpTaWduZWQtb2Zm
LWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KLS0tCiAuLi4vZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jbGllbnRfYmx0LmMgICAgfCAgMjEgKystCiAuLi4vZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmMgICAgfCAxNTMgKysrKysrKysrKysr
KystLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmggICAgfCAg
MTcgKy0KIC4uLi9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fY2xpZW50X2JsdC5jICB8ICAx
NiArLQogLi4uL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9vYmplY3RfYmx0LmMgIHwgIDIy
ICsrLQogNSBmaWxlcyBjaGFuZ2VkLCAxODAgaW5zZXJ0aW9ucygrKSwgNDkgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NsaWVudF9i
bHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jbGllbnRfYmx0LmMKaW5k
ZXggMDhhODRjOTQwZDhkLi5hYzE0Njc3ZGQ1MzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jbGllbnRfYmx0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2NsaWVudF9ibHQuYwpAQCAtNSw2ICs1LDggQEAKIAogI2luY2x1ZGUg
Imk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfY29udGV4dC5oIgorI2luY2x1ZGUgImd0
L2ludGVsX2VuZ2luZV9wbS5oIgorI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9wb29sLmgiCiAj
aW5jbHVkZSAiaTkxNV9nZW1fY2xpZW50X2JsdC5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX29iamVj
dF9ibHQuaCIKIApAQCAtMTU3LDYgKzE1OSw3IEBAIHN0YXRpYyB2b2lkIGNsZWFyX3BhZ2VzX3dv
cmtlcihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaiA9IHctPnNsZWV2ZS0+dm1hLT5vYmo7CiAJc3RydWN0IGk5MTVfdm1hICp2bWEgPSB3
LT5zbGVldmUtPnZtYTsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwlzdHJ1Y3QgaTkxNV92
bWEgKmJhdGNoOwogCWludCBlcnIgPSB3LT5kbWEuZXJyb3I7CiAKIAlpZiAodW5saWtlbHkoZXJy
KSkKQEAgLTE3NiwxMCArMTc5LDE2IEBAIHN0YXRpYyB2b2lkIGNsZWFyX3BhZ2VzX3dvcmtlcihz
dHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gb3V0
X3VubG9jazsKIAorCWJhdGNoID0gaW50ZWxfZW1pdF92bWFfZmlsbF9ibHQody0+Y2UsIHZtYSwg
dy0+dmFsdWUpOworCWlmIChJU19FUlIoYmF0Y2gpKSB7CisJCWVyciA9IFBUUl9FUlIoYmF0Y2gp
OworCQlnb3RvIG91dF91bnBpbjsKKwl9CisKIAlycSA9IGludGVsX2NvbnRleHRfY3JlYXRlX3Jl
cXVlc3Qody0+Y2UpOwogCWlmIChJU19FUlIocnEpKSB7CiAJCWVyciA9IFBUUl9FUlIocnEpOwot
CQlnb3RvIG91dF91bnBpbjsKKwkJZ290byBvdXRfYmF0Y2g7CiAJfQogCiAJLyogVGhlcmUncyBu
byB3YXkgdGhlIGZlbmNlIGhhcyBzaWduYWxsZWQgKi8KQEAgLTE4Nyw2ICsxOTYsMTAgQEAgc3Rh
dGljIHZvaWQgY2xlYXJfcGFnZXNfd29ya2VyKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAkJ
CQkgICBjbGVhcl9wYWdlc19kbWFfZmVuY2VfY2IpKQogCQlHRU1fQlVHX09OKDEpOwogCisJZXJy
ID0gaW50ZWxfZW1pdF92bWFfbWFya19hY3RpdmUoYmF0Y2gsIHJxKTsKKwlpZiAodW5saWtlbHko
ZXJyKSkKKwkJZ290byBvdXRfcmVxdWVzdDsKKwogCWlmICh3LT5jZS0+ZW5naW5lLT5lbWl0X2lu
aXRfYnJlYWRjcnVtYikgewogCQllcnIgPSB3LT5jZS0+ZW5naW5lLT5lbWl0X2luaXRfYnJlYWRj
cnVtYihycSk7CiAJCWlmICh1bmxpa2VseShlcnIpKQpAQCAtMjAyLDcgKzIxNSw5IEBAIHN0YXRp
YyB2b2lkIGNsZWFyX3BhZ2VzX3dvcmtlcihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJaWYg
KGVycikKIAkJZ290byBvdXRfcmVxdWVzdDsKIAotCWVyciA9IGludGVsX2VtaXRfdm1hX2ZpbGxf
Ymx0KHJxLCB2bWEsIHctPnZhbHVlKTsKKwllcnIgPSB3LT5jZS0+ZW5naW5lLT5lbWl0X2JiX3N0
YXJ0KHJxLAorCQkJCQkgICBiYXRjaC0+bm9kZS5zdGFydCwgYmF0Y2gtPm5vZGUuc2l6ZSwKKwkJ
CQkJICAgMCk7CiBvdXRfcmVxdWVzdDoKIAlpZiAodW5saWtlbHkoZXJyKSkgewogCQlpOTE1X3Jl
cXVlc3Rfc2tpcChycSwgZXJyKTsKQEAgLTIxMCw2ICsyMjUsOCBAQCBzdGF0aWMgdm9pZCBjbGVh
cl9wYWdlc193b3JrZXIoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogCX0KIAogCWk5MTVfcmVx
dWVzdF9hZGQocnEpOworb3V0X2JhdGNoOgorCWludGVsX2VtaXRfdm1hX3JlbGVhc2Uody0+Y2Us
IGJhdGNoKTsKIG91dF91bnBpbjoKIAlpOTE1X3ZtYV91bnBpbih2bWEpOwogb3V0X3VubG9jazoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X2JsdC5jCmluZGV4
IGZhOTBjMzhjOGIwNy4uZDNjMjYzOTU1OGQxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X2JsdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmMKQEAgLTUsNDIgKzUsMTE4IEBACiAKICNpbmNsdWRl
ICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKKyNpbmNsdWRlICJn
dC9pbnRlbF9lbmdpbmVfcG0uaCIKKyNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG9vbC5oIgor
I2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCiAjaW5jbHVkZSAiaTkxNV9nZW1fY2xmbHVzaC5oIgog
I2luY2x1ZGUgImk5MTVfZ2VtX29iamVjdF9ibHQuaCIKIAotaW50IGludGVsX2VtaXRfdm1hX2Zp
bGxfYmx0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAotCQkJICAgIHN0cnVjdCBpOTE1X3ZtYSAq
dm1hLAotCQkJICAgIHUzMiB2YWx1ZSkKK3N0cnVjdCBpOTE1X3ZtYSAqaW50ZWxfZW1pdF92bWFf
ZmlsbF9ibHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCQkgc3RydWN0IGk5MTVfdm1h
ICp2bWEsCisJCQkJCSB1MzIgdmFsdWUpCiB7Ci0JdTMyICpjczsKLQotCWNzID0gaW50ZWxfcmlu
Z19iZWdpbihycSwgOCk7Ci0JaWYgKElTX0VSUihjcykpCi0JCXJldHVybiBQVFJfRVJSKGNzKTsK
LQotCWlmIChJTlRFTF9HRU4ocnEtPmk5MTUpID49IDgpIHsKLQkJKmNzKysgPSBYWV9DT0xPUl9C
TFRfQ01EIHwgQkxUX1dSSVRFX1JHQkEgfCAoNyAtIDIpOwotCQkqY3MrKyA9IEJMVF9ERVBUSF8z
MiB8IEJMVF9ST1BfQ09MT1JfQ09QWSB8IFBBR0VfU0laRTsKLQkJKmNzKysgPSAwOwotCQkqY3Mr
KyA9IHZtYS0+c2l6ZSA+PiBQQUdFX1NISUZUIDw8IDE2IHwgUEFHRV9TSVpFIC8gNDsKLQkJKmNz
KysgPSBsb3dlcl8zMl9iaXRzKHZtYS0+bm9kZS5zdGFydCk7Ci0JCSpjcysrID0gdXBwZXJfMzJf
Yml0cyh2bWEtPm5vZGUuc3RhcnQpOwotCQkqY3MrKyA9IHZhbHVlOwotCQkqY3MrKyA9IE1JX05P
T1A7Ci0JfSBlbHNlIHsKLQkJKmNzKysgPSBYWV9DT0xPUl9CTFRfQ01EIHwgQkxUX1dSSVRFX1JH
QkEgfCAoNiAtIDIpOwotCQkqY3MrKyA9IEJMVF9ERVBUSF8zMiB8IEJMVF9ST1BfQ09MT1JfQ09Q
WSB8IFBBR0VfU0laRTsKLQkJKmNzKysgPSAwOwotCQkqY3MrKyA9IHZtYS0+c2l6ZSA+PiBQQUdF
X1NISUZUIDw8IDE2IHwgUEFHRV9TSVpFIC8gNDsKLQkJKmNzKysgPSB2bWEtPm5vZGUuc3RhcnQ7
Ci0JCSpjcysrID0gdmFsdWU7Ci0JCSpjcysrID0gTUlfTk9PUDsKLQkJKmNzKysgPSBNSV9OT09Q
OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gY2UtPnZtLT5pOTE1OworCWNvbnN0
IHUzMiBibG9ja19zaXplID0gUzE2X01BWCAqIFBBR0VfU0laRTsKKwlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX3Bvb2xfbm9kZSAqcG9vbDsKKwlzdHJ1Y3QgaTkxNV92bWEgKmJhdGNoOworCXU2NCBvZmZz
ZXQ7CisJdTY0IGNvdW50OworCXU2NCByZW07CisJdTMyIHNpemU7CisJdTMyICpjbWQ7CisJaW50
IGVycjsKKworCUdFTV9CVUdfT04oaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY2UtPmVuZ2luZSkp
OworCWludGVsX2VuZ2luZV9wbV9nZXQoY2UtPmVuZ2luZSk7CisKKwljb3VudCA9IGRpdl91NjQo
dm1hLT5zaXplLCBibG9ja19zaXplKTsKKwlzaXplID0gKDEgKyA4ICogY291bnQpICogc2l6ZW9m
KHUzMik7CisJc2l6ZSA9IHJvdW5kX3VwKHNpemUsIFBBR0VfU0laRSk7CisJcG9vbCA9IGludGVs
X2VuZ2luZV9wb29sX2dldCgmY2UtPmVuZ2luZS0+cG9vbCwgc2l6ZSk7CisJaWYgKElTX0VSUihw
b29sKSkKKwkJZ290byBvdXRfcG07CisKKwljbWQgPSBpOTE1X2dlbV9vYmplY3RfcGluX21hcChw
b29sLT5vYmosIEk5MTVfTUFQX1dDKTsKKwlpZiAoSVNfRVJSKGNtZCkpIHsKKwkJZXJyID0gUFRS
X0VSUihjbWQpOworCQlnb3RvIG91dF9wdXQ7CiAJfQogCi0JaW50ZWxfcmluZ19hZHZhbmNlKHJx
LCBjcyk7CisJcmVtID0gdm1hLT5zaXplOworCW9mZnNldCA9IHZtYS0+bm9kZS5zdGFydDsKKwor
CWRvIHsKKwkJdTMyIHNpemUgPSBtaW5fdCh1NjQsIHJlbSwgYmxvY2tfc2l6ZSk7CisKKwkJR0VN
X0JVR19PTihzaXplID4+IFBBR0VfU0hJRlQgPiBTMTZfTUFYKTsKKworCQlpZiAoSU5URUxfR0VO
KGk5MTUpID49IDgpIHsKKwkJCSpjbWQrKyA9IFhZX0NPTE9SX0JMVF9DTUQgfCBCTFRfV1JJVEVf
UkdCQSB8ICg3IC0gMik7CisJCQkqY21kKysgPSBCTFRfREVQVEhfMzIgfCBCTFRfUk9QX0NPTE9S
X0NPUFkgfCBQQUdFX1NJWkU7CisJCQkqY21kKysgPSAwOworCQkJKmNtZCsrID0gc2l6ZSA+PiBQ
QUdFX1NISUZUIDw8IDE2IHwgUEFHRV9TSVpFIC8gNDsKKwkJCSpjbWQrKyA9IGxvd2VyXzMyX2Jp
dHMob2Zmc2V0KTsKKwkJCSpjbWQrKyA9IHVwcGVyXzMyX2JpdHMob2Zmc2V0KTsKKwkJCSpjbWQr
KyA9IHZhbHVlOworCQl9IGVsc2UgeworCQkJKmNtZCsrID0gWFlfQ09MT1JfQkxUX0NNRCB8IEJM
VF9XUklURV9SR0JBIHwgKDYgLSAyKTsKKwkJCSpjbWQrKyA9IEJMVF9ERVBUSF8zMiB8IEJMVF9S
T1BfQ09MT1JfQ09QWSB8IFBBR0VfU0laRTsKKwkJCSpjbWQrKyA9IDA7CisJCQkqY21kKysgPSBz
aXplID4+IFBBR0VfU0hJRlQgPDwgMTYgfCBQQUdFX1NJWkUgLyA0OworCQkJKmNtZCsrID0gb2Zm
c2V0OworCQkJKmNtZCsrID0gdmFsdWU7CisJCX0KKworCQkvKiBBbGxvdyBvdXJzZWx2ZXMgdG8g
YmUgcHJlZW1wdGVkIGluIGJldHdlZW4gYmxvY2tzLiAqLworCQkqY21kKysgPSBNSV9BUkJfQ0hF
Q0s7CisKKwkJb2Zmc2V0ICs9IHNpemU7CisJCXJlbSAtPSBzaXplOworCX0gd2hpbGUgKHJlbSk7
CisKKwkqY21kID0gTUlfQkFUQ0hfQlVGRkVSX0VORDsKKwlpbnRlbF9ndF9jaGlwc2V0X2ZsdXNo
KGNlLT52bS0+Z3QpOworCisJaTkxNV9nZW1fb2JqZWN0X3VucGluX21hcChwb29sLT5vYmopOwor
CisJYmF0Y2ggPSBpOTE1X3ZtYV9pbnN0YW5jZShwb29sLT5vYmosIGNlLT52bSwgTlVMTCk7CisJ
aWYgKElTX0VSUihiYXRjaCkpIHsKKwkJZXJyID0gUFRSX0VSUihiYXRjaCk7CisJCWdvdG8gb3V0
X3B1dDsKKwl9CisKKwllcnIgPSBpOTE1X3ZtYV9waW4oYmF0Y2gsIDAsIDAsIFBJTl9VU0VSKTsK
KwlpZiAodW5saWtlbHkoZXJyKSkKKwkJZ290byBvdXRfcHV0OworCisJYmF0Y2gtPnByaXZhdGUg
PSBwb29sOworCXJldHVybiBiYXRjaDsKIAotCXJldHVybiAwOworb3V0X3B1dDoKKwlpbnRlbF9l
bmdpbmVfcG9vbF9wdXQocG9vbCk7CitvdXRfcG06CisJaW50ZWxfZW5naW5lX3BtX3B1dChjZS0+
ZW5naW5lKTsKKwlyZXR1cm4gRVJSX1BUUihlcnIpOworfQorCitpbnQgaW50ZWxfZW1pdF92bWFf
bWFya19hY3RpdmUoc3RydWN0IGk5MTVfdm1hICp2bWEsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQoreworCWludCBlcnI7CisKKwlpOTE1X3ZtYV9sb2NrKHZtYSk7CisJZXJyID0gaTkxNV92bWFf
bW92ZV90b19hY3RpdmUodm1hLCBycSwgMCk7CisJaTkxNV92bWFfdW5sb2NrKHZtYSk7CisJaWYg
KHVubGlrZWx5KGVycikpCisJCXJldHVybiBlcnI7CisKKwlyZXR1cm4gaW50ZWxfZW5naW5lX3Bv
b2xfbWFya19hY3RpdmUodm1hLT5wcml2YXRlLCBycSk7Cit9CisKK3ZvaWQgaW50ZWxfZW1pdF92
bWFfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpOTE1X3ZtYSAqdm1h
KQoreworCWk5MTVfdm1hX3VucGluKHZtYSk7CisJaW50ZWxfZW5naW5lX3Bvb2xfcHV0KHZtYS0+
cHJpdmF0ZSk7CisJaW50ZWxfZW5naW5lX3BtX3B1dChjZS0+ZW5naW5lKTsKIH0KIAogaW50IGk5
MTVfZ2VtX29iamVjdF9maWxsX2JsdChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLApA
QCAtNDgsNiArMTI0LDcgQEAgaW50IGk5MTVfZ2VtX29iamVjdF9maWxsX2JsdChzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCQkJICAgICB1MzIgdmFsdWUpCiB7CiAJc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnE7CisJc3RydWN0IGk5MTVfdm1hICpiYXRjaDsKIAlzdHJ1Y3QgaTkxNV92
bWEgKnZtYTsKIAlpbnQgZXJyOwogCkBAIC02NSwxMiArMTQyLDIyIEBAIGludCBpOTE1X2dlbV9v
YmplY3RfZmlsbF9ibHQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJaTkxNV9n
ZW1fb2JqZWN0X3VubG9jayhvYmopOwogCX0KIAorCWJhdGNoID0gaW50ZWxfZW1pdF92bWFfZmls
bF9ibHQoY2UsIHZtYSwgdmFsdWUpOworCWlmIChJU19FUlIoYmF0Y2gpKSB7CisJCWVyciA9IFBU
Ul9FUlIoYmF0Y2gpOworCQlnb3RvIG91dF91bnBpbjsKKwl9CisKIAlycSA9IGludGVsX2NvbnRl
eHRfY3JlYXRlX3JlcXVlc3QoY2UpOwogCWlmIChJU19FUlIocnEpKSB7CiAJCWVyciA9IFBUUl9F
UlIocnEpOwotCQlnb3RvIG91dF91bnBpbjsKKwkJZ290byBvdXRfYmF0Y2g7CiAJfQogCisJZXJy
ID0gaW50ZWxfZW1pdF92bWFfbWFya19hY3RpdmUoYmF0Y2gsIHJxKTsKKwlpZiAodW5saWtlbHko
ZXJyKSkKKwkJZ290byBvdXRfcmVxdWVzdDsKKwogCWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9v
YmplY3QocnEsIG9iaiwgdHJ1ZSk7CiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gb3V0X3Jl
cXVlc3Q7CkBAIC04NywxMiArMTc0LDE2IEBAIGludCBpOTE1X2dlbV9vYmplY3RfZmlsbF9ibHQo
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJ
Z290byBvdXRfcmVxdWVzdDsKIAotCWVyciA9IGludGVsX2VtaXRfdm1hX2ZpbGxfYmx0KHJxLCB2
bWEsIHZhbHVlKTsKKwllcnIgPSBjZS0+ZW5naW5lLT5lbWl0X2JiX3N0YXJ0KHJxLAorCQkJCQli
YXRjaC0+bm9kZS5zdGFydCwgYmF0Y2gtPm5vZGUuc2l6ZSwKKwkJCQkJMCk7CiBvdXRfcmVxdWVz
dDoKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJaTkxNV9yZXF1ZXN0X3NraXAocnEsIGVycik7CiAK
IAlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKK291dF9iYXRjaDoKKwlpbnRlbF9lbWl0X3ZtYV9yZWxl
YXNlKGNlLCBiYXRjaCk7CiBvdXRfdW5waW46CiAJaTkxNV92bWFfdW5waW4odm1hKTsKIAlyZXR1
cm4gZXJyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29i
amVjdF9ibHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0
LmgKaW5kZXggN2VjN2RlNmFjMGMwLi45NDQ4YjkxOTIxMzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfYmx0LmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF9ibHQuaApAQCAtOCwxNCArOCwxOSBAQAogCiAj
aW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAorI2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIK
KyNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG0uaCIKKyNpbmNsdWRlICJndC9pbnRlbF9lbmdp
bmVfcG9vbC5oIgorI2luY2x1ZGUgImk5MTVfdm1hLmgiCisKIHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0Owotc3RydWN0IGludGVsX2NvbnRleHQ7Ci1zdHJ1Y3QgaTkxNV9yZXF1ZXN0Owotc3Ry
dWN0IGk5MTVfdm1hOwogCi1pbnQgaW50ZWxfZW1pdF92bWFfZmlsbF9ibHQoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEsCi0JCQkgICAgc3RydWN0IGk5MTVfdm1hICp2bWEsCi0JCQkgICAgdTMyIHZh
bHVlKTsKK3N0cnVjdCBpOTE1X3ZtYSAqaW50ZWxfZW1pdF92bWFfZmlsbF9ibHQoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlLAorCQkJCQkgc3RydWN0IGk5MTVfdm1hICp2bWEsCisJCQkJCSB1MzIg
dmFsdWUpOworCitpbnQgaW50ZWxfZW1pdF92bWFfbWFya19hY3RpdmUoc3RydWN0IGk5MTVfdm1h
ICp2bWEsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKTsKK3ZvaWQgaW50ZWxfZW1pdF92bWFfcmVs
ZWFzZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpOTE1X3ZtYSAqdm1hKTsKIAog
aW50IGk5MTVfZ2VtX29iamVjdF9maWxsX2JsdChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqLAogCQkJICAgICBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NsaWVudF9ibHQuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fY2xpZW50X2JsdC5jCmlu
ZGV4IDI3NWMyODkyNjA2Ny4uZDg4MDRhODQ3OTQ1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NsaWVudF9ibHQuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NsaWVudF9ibHQuYwpAQCAtOSw2
ICs5LDcgQEAKIAogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5oIgogI2luY2x1
ZGUgInNlbGZ0ZXN0cy9tb2NrX2RybS5oIgorI2luY2x1ZGUgImh1Z2VfZ2VtX29iamVjdC5oIgog
I2luY2x1ZGUgIm1vY2tfY29udGV4dC5oIgogCiBzdGF0aWMgaW50IGlndF9jbGllbnRfZmlsbCh2
b2lkICphcmcpCkBAIC0yNCwxNSArMjUsMTkgQEAgc3RhdGljIGludCBpZ3RfY2xpZW50X2ZpbGwo
dm9pZCAqYXJnKQogCXByYW5kb21fc2VlZF9zdGF0ZSgmcHJuZywgaTkxNV9zZWxmdGVzdC5yYW5k
b21fc2VlZCk7CiAKIAlkbyB7Ci0JCXUzMiBzeiA9IHByYW5kb21fdTMyX3N0YXRlKCZwcm5nKSAl
IFNaXzMyTTsKKwkJY29uc3QgdTMyIG1heF9ibG9ja19zaXplID0gUzE2X01BWCAqIFBBR0VfU0la
RTsKKwkJdTMyIHN6ID0gbWluX3QodTY0LCBjZS0+dm0tPnRvdGFsID4+IDQsIHByYW5kb21fdTMy
X3N0YXRlKCZwcm5nKSk7CisJCXUzMiBwaHlzX3N6ID0gc3ogJSAobWF4X2Jsb2NrX3NpemUgKyAx
KTsKIAkJdTMyIHZhbCA9IHByYW5kb21fdTMyX3N0YXRlKCZwcm5nKTsKIAkJdTMyIGk7CiAKIAkJ
c3ogPSByb3VuZF91cChzeiwgUEFHRV9TSVpFKTsKKwkJcGh5c19zeiA9IHJvdW5kX3VwKHBoeXNf
c3osIFBBR0VfU0laRSk7CiAKLQkJcHJfZGVidWcoIiVzIHdpdGggc3o9JXgsIHZhbD0leFxuIiwg
X19mdW5jX18sIHN6LCB2YWwpOworCQlwcl9kZWJ1ZygiJXMgd2l0aCBwaHlzX3N6PSAleCwgc3o9
JXgsIHZhbD0leFxuIiwgX19mdW5jX18sCisJCQkgcGh5c19zeiwgc3osIHZhbCk7CiAKLQkJb2Jq
ID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9pbnRlcm5hbChpOTE1LCBzeik7CisJCW9iaiA9IGh1
Z2VfZ2VtX29iamVjdChpOTE1LCBwaHlzX3N6LCBzeik7CiAJCWlmIChJU19FUlIob2JqKSkgewog
CQkJZXJyID0gUFRSX0VSUihvYmopOwogCQkJZ290byBlcnJfZmx1c2g7CkBAIC01NCw3ICs1OSw4
IEBAIHN0YXRpYyBpbnQgaWd0X2NsaWVudF9maWxsKHZvaWQgKmFyZykKIAkJICogdmFsdWVzIGFm
dGVyIHdlIGRvIHRoZSBzZXRfdG9fY3B1X2RvbWFpbiBhbmQgcGljayBpdCB1cCBhcyBhCiAJCSAq
IHRlc3QgZmFpbHVyZS4KIAkJICovCi0JCW1lbXNldDMyKHZhZGRyLCB2YWwgXiAweGRlYWRiZWFm
LCBvYmotPmJhc2Uuc2l6ZSAvIHNpemVvZih1MzIpKTsKKwkJbWVtc2V0MzIodmFkZHIsIHZhbCBe
IDB4ZGVhZGJlYWYsCisJCQkgaHVnZV9nZW1fb2JqZWN0X3BoeXNfc2l6ZShvYmopIC8gc2l6ZW9m
KHUzMikpOwogCiAJCWlmICghKG9iai0+Y2FjaGVfY29oZXJlbnQgJiBJOTE1X0JPX0NBQ0hFX0NP
SEVSRU5UX0ZPUl9XUklURSkpCiAJCQlvYmotPmNhY2hlX2RpcnR5ID0gdHJ1ZTsKQEAgLTcxLDcg
Kzc3LDcgQEAgc3RhdGljIGludCBpZ3RfY2xpZW50X2ZpbGwodm9pZCAqYXJnKQogCQlpZiAoZXJy
KQogCQkJZ290byBlcnJfdW5waW47CiAKLQkJZm9yIChpID0gMDsgaSA8IG9iai0+YmFzZS5zaXpl
IC8gc2l6ZW9mKHUzMik7ICsraSkgeworCQlmb3IgKGkgPSAwOyBpIDwgaHVnZV9nZW1fb2JqZWN0
X3BoeXNfc2l6ZShvYmopIC8gc2l6ZW9mKHUzMik7ICsraSkgewogCQkJaWYgKHZhZGRyW2ldICE9
IHZhbCkgewogCQkJCXByX2VycigidmFkZHJbJXVdPSV4LCBleHBlY3RlZD0leFxuIiwgaSwKIAkJ
CQkgICAgICAgdmFkZHJbaV0sIHZhbCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX29iamVjdF9ibHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fb2JqZWN0X2JsdC5jCmluZGV4IDE5ODQzYWNjODRk
My4uYzZlMWVlYmU1M2Y1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2Vs
ZnRlc3RzL2k5MTVfZ2VtX29iamVjdF9ibHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX29iamVjdF9ibHQuYwpAQCAtOSw2ICs5LDcgQEAKIAogI2lu
Y2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0cy9t
b2NrX2RybS5oIgorI2luY2x1ZGUgImh1Z2VfZ2VtX29iamVjdC5oIgogI2luY2x1ZGUgIm1vY2tf
Y29udGV4dC5oIgogCiBzdGF0aWMgaW50IGlndF9maWxsX2JsdCh2b2lkICphcmcpCkBAIC0yMywx
NiArMjQsMjYgQEAgc3RhdGljIGludCBpZ3RfZmlsbF9ibHQodm9pZCAqYXJnKQogCiAJcHJhbmRv
bV9zZWVkX3N0YXRlKCZwcm5nLCBpOTE1X3NlbGZ0ZXN0LnJhbmRvbV9zZWVkKTsKIAorCS8qCisJ
ICogWFhYOiBuZWVkcyBzb21lIHRocmVhZHMgdG8gc2NhbGUgYWxsIHRoZXNlIHRlc3RzLCBhbHNv
IG1heWJlIHRocm93CisJICogaW4gc3VibWlzc2lvbiBmcm9tIGhpZ2hlciBwcmlvcml0eSBjb250
ZXh0IHRvIHNlZSBpZiB3ZSBhcmUKKwkgKiBwcmVlbXB0ZWQgZm9yIHZlcnkgbGFyZ2Ugb2JqZWN0
cy4uLgorCSAqLworCiAJZG8gewotCQl1MzIgc3ogPSBwcmFuZG9tX3UzMl9zdGF0ZSgmcHJuZykg
JSBTWl8zMk07CisJCWNvbnN0IHUzMiBtYXhfYmxvY2tfc2l6ZSA9IFMxNl9NQVggKiBQQUdFX1NJ
WkU7CisJCXUzMiBzeiA9IG1pbl90KHU2NCwgY2UtPnZtLT50b3RhbCA+PiA0LCBwcmFuZG9tX3Uz
Ml9zdGF0ZSgmcHJuZykpOworCQl1MzIgcGh5c19zeiA9IHN6ICUgKG1heF9ibG9ja19zaXplICsg
MSk7CiAJCXUzMiB2YWwgPSBwcmFuZG9tX3UzMl9zdGF0ZSgmcHJuZyk7CiAJCXUzMiBpOwogCiAJ
CXN6ID0gcm91bmRfdXAoc3osIFBBR0VfU0laRSk7CisJCXBoeXNfc3ogPSByb3VuZF91cChwaHlz
X3N6LCBQQUdFX1NJWkUpOwogCi0JCXByX2RlYnVnKCIlcyB3aXRoIHN6PSV4LCB2YWw9JXhcbiIs
IF9fZnVuY19fLCBzeiwgdmFsKTsKKwkJcHJfZGVidWcoIiVzIHdpdGggcGh5c19zej0gJXgsIHN6
PSV4LCB2YWw9JXhcbiIsIF9fZnVuY19fLAorCQkJIHBoeXNfc3osIHN6LCB2YWwpOwogCi0JCW9i
aiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoaTkxNSwgc3opOworCQlvYmogPSBo
dWdlX2dlbV9vYmplY3QoaTkxNSwgcGh5c19zeiwgc3opOwogCQlpZiAoSVNfRVJSKG9iaikpIHsK
IAkJCWVyciA9IFBUUl9FUlIob2JqKTsKIAkJCWdvdG8gZXJyX2ZsdXNoOwpAQCAtNDgsNyArNTks
OCBAQCBzdGF0aWMgaW50IGlndF9maWxsX2JsdCh2b2lkICphcmcpCiAJCSAqIE1ha2Ugc3VyZSB0
aGUgcG90ZW50aWFsbHkgYXN5bmMgY2xmbHVzaCBkb2VzIGl0cyBqb2IsIGlmCiAJCSAqIHJlcXVp
cmVkLgogCQkgKi8KLQkJbWVtc2V0MzIodmFkZHIsIHZhbCBeIDB4ZGVhZGJlYWYsIG9iai0+YmFz
ZS5zaXplIC8gc2l6ZW9mKHUzMikpOworCQltZW1zZXQzMih2YWRkciwgdmFsIF4gMHhkZWFkYmVh
ZiwKKwkJCSBodWdlX2dlbV9vYmplY3RfcGh5c19zaXplKG9iaikgLyBzaXplb2YodTMyKSk7CiAK
IAkJaWYgKCEob2JqLT5jYWNoZV9jb2hlcmVudCAmIEk5MTVfQk9fQ0FDSEVfQ09IRVJFTlRfRk9S
X1dSSVRFKSkKIAkJCW9iai0+Y2FjaGVfZGlydHkgPSB0cnVlOwpAQCAtNjUsNyArNzcsNyBAQCBz
dGF0aWMgaW50IGlndF9maWxsX2JsdCh2b2lkICphcmcpCiAJCWlmIChlcnIpCiAJCQlnb3RvIGVy
cl91bnBpbjsKIAotCQlmb3IgKGkgPSAwOyBpIDwgb2JqLT5iYXNlLnNpemUgLyBzaXplb2YodTMy
KTsgKytpKSB7CisJCWZvciAoaSA9IDA7IGkgPCBodWdlX2dlbV9vYmplY3RfcGh5c19zaXplKG9i
aikgLyBzaXplb2YodTMyKTsgKytpKSB7CiAJCQlpZiAodmFkZHJbaV0gIT0gdmFsKSB7CiAJCQkJ
cHJfZXJyKCJ2YWRkclsldV09JXgsIGV4cGVjdGVkPSV4XG4iLCBpLAogCQkJCSAgICAgICB2YWRk
cltpXSwgdmFsKTsKLS0gCjIuMjMuMC5yYzEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0065ACB936
	for <lists+intel-gfx@lfdr.de>; Fri,  4 Oct 2019 13:35:34 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 021816EB42;
	Fri,  4 Oct 2019 11:35:28 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl [141.105.120.124])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A6D556EB39
 for <intel-gfx@lists.freedesktop.org>; Fri,  4 Oct 2019 11:35:23 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  4 Oct 2019 13:35:05 +0200
Message-Id: <20191004113514.17064-16-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191004113514.17064-1-maarten.lankhorst@linux.intel.com>
References: <20191004113514.17064-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 15/24] drm/i915: Try to make bigjoiner work in
 atomic check, v2.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2hlbiB0aGUgY2xvY2sgaXMgaGlnaGVyIHRoYW4gdGhlIGRvdGNsb2NrLCB0cnkgd2l0aCAyIHBp
cGVzIGVuYWJsZWQuCklmIHdlIGNhbiBlbmFibGUgMiwgdGhlbiB3ZSB3aWxsIGdvIGludG8gYmln
IGpvaW5lciBtb2RlLCBhbmQgc3RlYWwKdGhlIGFkamFjZW50IGNydGMuCgpUaGlzIG9ubHkgbGlu
a3MgdGhlIGNydGMncyBpbiBzb2Z0d2FyZSwgbm8gaGFyZHdhcmUgb3IgcGxhbmUKcHJvZ3JhbW1p
bmcgaXMgZG9uZSB5ZXQuIEJsb2JzIGFyZSBhbHNvIGNvcGllZCBmcm9tIHRoZSBtYXN0ZXIncwpj
cnRjX3N0YXRlLCBzbyBpdCBkb2Vzbid0IGRlcGVuZCBhdCBjb21taXQgdGltZSBvbiB0aGUgb3Ro
ZXIKY3J0Y19zdGF0ZS4KCkNoYW5nZXMgc2luY2UgdjE6Ci0gUmVuYW1lIHBpcGUgdGltaW5ncyB0
byB0cmFuc2NvZGVyIHRpbWluZ3MsIGFzIHRoZXkgYXJlIG5vdyBkaWZmZXJlbnQuCgpTaWduZWQt
b2ZmLWJ5OiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwu
Y29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMgICB8
ICAxNSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaCAgIHwg
ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAy
MTggKysrKysrKysrKysrKysrKy0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3R5cGVzLmggICAgfCAgMTEgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuYyAgICAgICB8ICAyNSArLQogNSBmaWxlcyBjaGFuZ2VkLCAyMzQgaW5zZXJ0aW9ucygrKSwg
MzggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9hdG9taWMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRv
bWljLmMKaW5kZXggNDc4M2Q3ZmY0ZmNmLi5hNWIxMWJkOWRhNjggMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuYwpAQCAtMjI4LDI1ICsyMjgsMjYgQEAgdm9p
ZCBpbnRlbF9jcnRjX2ZyZWVfaHdfc3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUpCiAJaW50ZWxfY3J0Y19wdXRfY29sb3JfYmxvYnMoY3J0Y19zdGF0ZSk7CiB9CiAKLXZv
aWQgaW50ZWxfY3J0Y19jb3B5X2NvbG9yX2Jsb2JzKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQordm9pZCBpbnRlbF9jcnRjX2NvcHlfY29sb3JfYmxvYnMoc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpmcm9tX2NydGNfc3RhdGUpCiB7CiAJaW50ZWxfY3J0Y19wdXRfY29sb3JfYmxvYnMoY3J0
Y19zdGF0ZSk7CiAKLQlpZiAoY3J0Y19zdGF0ZS0+dWFwaS5kZWdhbW1hX2x1dCkKKwlpZiAoZnJv
bV9jcnRjX3N0YXRlLT51YXBpLmRlZ2FtbWFfbHV0KQogCQljcnRjX3N0YXRlLT5ody5kZWdhbW1h
X2x1dCA9Ci0JCQlkcm1fcHJvcGVydHlfYmxvYl9nZXQoY3J0Y19zdGF0ZS0+dWFwaS5kZWdhbW1h
X2x1dCk7CisJCQlkcm1fcHJvcGVydHlfYmxvYl9nZXQoZnJvbV9jcnRjX3N0YXRlLT51YXBpLmRl
Z2FtbWFfbHV0KTsKIAllbHNlCiAJCWNydGNfc3RhdGUtPmh3LmRlZ2FtbWFfbHV0ID0gTlVMTDsK
IAotCWlmIChjcnRjX3N0YXRlLT51YXBpLmdhbW1hX2x1dCkKKwlpZiAoZnJvbV9jcnRjX3N0YXRl
LT51YXBpLmdhbW1hX2x1dCkKIAkJY3J0Y19zdGF0ZS0+aHcuZ2FtbWFfbHV0ID0KLQkJCWRybV9w
cm9wZXJ0eV9ibG9iX2dldChjcnRjX3N0YXRlLT51YXBpLmdhbW1hX2x1dCk7CisJCQlkcm1fcHJv
cGVydHlfYmxvYl9nZXQoZnJvbV9jcnRjX3N0YXRlLT51YXBpLmdhbW1hX2x1dCk7CiAJZWxzZQog
CQljcnRjX3N0YXRlLT5ody5nYW1tYV9sdXQgPSBOVUxMOwogCi0JaWYgKGNydGNfc3RhdGUtPnVh
cGkuY3RtKQorCWlmIChmcm9tX2NydGNfc3RhdGUtPnVhcGkuY3RtKQogCQljcnRjX3N0YXRlLT5o
dy5jdG0gPQotCQkJZHJtX3Byb3BlcnR5X2Jsb2JfZ2V0KGNydGNfc3RhdGUtPnVhcGkuY3RtKTsK
KwkJCWRybV9wcm9wZXJ0eV9ibG9iX2dldChmcm9tX2NydGNfc3RhdGUtPnVhcGkuY3RtKTsKIAll
bHNlCiAJCWNydGNfc3RhdGUtPmh3LmN0bSA9IE5VTEw7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaAppbmRleCA0MmJlOTFlMDc3MmEuLjhkYTg0ZDY0YWEw
NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5oCkBAIC0z
Niw3ICszNiw4IEBAIHN0cnVjdCBkcm1fY3J0Y19zdGF0ZSAqaW50ZWxfY3J0Y19kdXBsaWNhdGVf
c3RhdGUoc3RydWN0IGRybV9jcnRjICpjcnRjKTsKIHZvaWQgaW50ZWxfY3J0Y19kZXN0cm95X3N0
YXRlKHN0cnVjdCBkcm1fY3J0YyAqY3J0YywKIAkJCSAgICAgICBzdHJ1Y3QgZHJtX2NydGNfc3Rh
dGUgKnN0YXRlKTsKIHZvaWQgaW50ZWxfY3J0Y19mcmVlX2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKLXZvaWQgaW50ZWxfY3J0Y19jb3B5X2NvbG9yX2Jsb2Jz
KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKK3ZvaWQgaW50ZWxfY3J0Y19j
b3B5X2NvbG9yX2Jsb2JzKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJ
CSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqZnJvbV9jcnRjX3N0YXRlKTsKIHN0cnVj
dCBkcm1fYXRvbWljX3N0YXRlICppbnRlbF9hdG9taWNfc3RhdGVfYWxsb2Moc3RydWN0IGRybV9k
ZXZpY2UgKmRldik7CiB2b2lkIGludGVsX2F0b21pY19zdGF0ZV9jbGVhcihzdHJ1Y3QgZHJtX2F0
b21pY19zdGF0ZSAqc3RhdGUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheS5jCmluZGV4IGNhYWI4Y2ZkZGNiZC4uYzJiM2M3YjZmMzliIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTIzLDcgKzEyMyw3
IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX3BjaF9jbG9ja19nZXQoc3RydWN0IGludGVsX2NydGMg
KmNydGMsCiBzdGF0aWMgaW50IGludGVsX2ZyYW1lYnVmZmVyX2luaXQoc3RydWN0IGludGVsX2Zy
YW1lYnVmZmVyICppZmIsCiAJCQkJICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAog
CQkJCSAgc3RydWN0IGRybV9tb2RlX2ZiX2NtZDIgKm1vZGVfY21kKTsKLXN0YXRpYyB2b2lkIGlu
dGVsX3NldF9waXBlX3RpbWluZ3MoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUpOworc3RhdGljIHZvaWQgaW50ZWxfc2V0X3RyYW5zY29kZXJfdGltaW5ncyhjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiBzdGF0aWMgdm9pZCBpbnRlbF9z
ZXRfcGlwZV9zcmNfc2l6ZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSk7CiBzdGF0aWMgdm9pZCBpbnRlbF9jcHVfdHJhbnNjb2Rlcl9zZXRfbV9uKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCQkgY29uc3Qgc3RydWN0IGludGVs
X2xpbmtfbV9uICptX24sCkBAIC02MzA4LDcgKzYzMDgsNyBAQCBzdGF0aWMgdm9pZCBpcm9ubGFr
ZV9jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJaWYg
KGludGVsX2NydGNfaGFzX2RwX2VuY29kZXIocGlwZV9jb25maWcpKQogCQlpbnRlbF9kcF9zZXRf
bV9uKHBpcGVfY29uZmlnLCBNMV9OMSk7CiAKLQlpbnRlbF9zZXRfcGlwZV90aW1pbmdzKHBpcGVf
Y29uZmlnKTsKKwlpbnRlbF9zZXRfdHJhbnNjb2Rlcl90aW1pbmdzKHBpcGVfY29uZmlnKTsKIAlp
bnRlbF9zZXRfcGlwZV9zcmNfc2l6ZShwaXBlX2NvbmZpZyk7CiAKIAlpZiAocGlwZV9jb25maWct
Pmhhc19wY2hfZW5jb2RlcikgewpAQCAtNjQzNSw3ICs2NDM1LDcgQEAgc3RhdGljIHZvaWQgaGFz
d2VsbF9jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJ
CWludGVsX2RwX3NldF9tX24ocGlwZV9jb25maWcsIE0xX04xKTsKIAogCWlmICghdHJhbnNjb2Rl
cl9pc19kc2koY3B1X3RyYW5zY29kZXIpKQotCQlpbnRlbF9zZXRfcGlwZV90aW1pbmdzKHBpcGVf
Y29uZmlnKTsKKwkJaW50ZWxfc2V0X3RyYW5zY29kZXJfdGltaW5ncyhwaXBlX2NvbmZpZyk7CiAK
IAlpbnRlbF9zZXRfcGlwZV9zcmNfc2l6ZShwaXBlX2NvbmZpZyk7CiAKQEAgLTY4MzgsNyArNjgz
OCw3IEBAIHN0YXRpYyB2b2lkIHZhbGxleXZpZXdfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKnBpcGVfY29uZmlnLAogCWlmIChpbnRlbF9jcnRjX2hhc19kcF9lbmNvZGVyKHBp
cGVfY29uZmlnKSkKIAkJaW50ZWxfZHBfc2V0X21fbihwaXBlX2NvbmZpZywgTTFfTjEpOwogCi0J
aW50ZWxfc2V0X3BpcGVfdGltaW5ncyhwaXBlX2NvbmZpZyk7CisJaW50ZWxfc2V0X3RyYW5zY29k
ZXJfdGltaW5ncyhwaXBlX2NvbmZpZyk7CiAJaW50ZWxfc2V0X3BpcGVfc3JjX3NpemUocGlwZV9j
b25maWcpOwogCiAJaWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpICYmIHBpcGUgPT0gUElQRV9C
KSB7CkBAIC02OTA2LDcgKzY5MDYsNyBAQCBzdGF0aWMgdm9pZCBpOXh4X2NydGNfZW5hYmxlKHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAlpZiAoaW50ZWxfY3J0Y19oYXNf
ZHBfZW5jb2RlcihwaXBlX2NvbmZpZykpCiAJCWludGVsX2RwX3NldF9tX24ocGlwZV9jb25maWcs
IE0xX04xKTsKIAotCWludGVsX3NldF9waXBlX3RpbWluZ3MocGlwZV9jb25maWcpOworCWludGVs
X3NldF90cmFuc2NvZGVyX3RpbWluZ3MocGlwZV9jb25maWcpOwogCWludGVsX3NldF9waXBlX3Ny
Y19zaXplKHBpcGVfY29uZmlnKTsKIAogCWk5eHhfc2V0X3BpcGVjb25mKHBpcGVfY29uZmlnKTsK
QEAgLTczOTYsNyArNzM5Niw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfY3J0Y19jb21wdXRlX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJCQkgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpwaXBlX2NvbmZpZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKLQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqYWRqdXN0ZWRfbW9kZSA9ICZwaXBlX2NvbmZpZy0+aHcuYWRqdXN0ZWRfbW9kZTsKKwlzdHJ1
Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9ICZwaXBlX2NvbmZpZy0+aHcuYWRq
dXN0ZWRfbW9kZTsKIAlpbnQgY2xvY2tfbGltaXQgPSBkZXZfcHJpdi0+bWF4X2RvdGNsa19mcmVx
OwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCA0KSB7CkBAIC03NDEzLDYgKzc0MTMsMjUg
QEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogCQl9CiAJfQogCisJLyoKKwkgKiBjb3B5IGh3IG1vZGUgdG8gdHJhbnNjb2RlciBt
b2RlLgorCSAqIFRoaXMgbWF0dGVycyBtb3N0bHkgZm9yIGJpZyBqb2luZXIsIHdoaWNoIHNwbGl0
cyB0aGUgbW9kZSBpbiBoYWxmLgorCSAqLworCXBpcGVfY29uZmlnLT5ody50cmFuc2NvZGVyX21v
ZGUgPSBwaXBlX2NvbmZpZy0+aHcuYWRqdXN0ZWRfbW9kZTsKKwlpZiAocGlwZV9jb25maWctPmJp
Z2pvaW5lcikgeworCQkvKiBNYWtlIHN1cmUgdGhlIGNydGMgY29uZmlnIGlzIGhhbHZlZCBob3Jp
em9udGFsbHkgKi8KKwkJYWRqdXN0ZWRfbW9kZS0+Y3J0Y19jbG9jayAvPSAyOworCQlhZGp1c3Rl
ZF9tb2RlLT5jcnRjX2hkaXNwbGF5IC89IDI7CisJCWFkanVzdGVkX21vZGUtPmNydGNfaGJsYW5r
X3N0YXJ0IC89IDI7CisJCWFkanVzdGVkX21vZGUtPmNydGNfaGJsYW5rX2VuZCAvPSAyOworCQlh
ZGp1c3RlZF9tb2RlLT5jcnRjX2hzeW5jX3N0YXJ0IC89IDI7CisJCWFkanVzdGVkX21vZGUtPmNy
dGNfaHN5bmNfZW5kIC89IDI7CisJCWFkanVzdGVkX21vZGUtPmNydGNfaHRvdGFsIC89IDI7CisJ
CWFkanVzdGVkX21vZGUtPmNydGNfaHNrZXcgLz0gMjsKKworCQlwaXBlX2NvbmZpZy0+cGlwZV9z
cmNfdyAvPSAyOworCX0KKwogCWlmIChhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrID4gY2xvY2tf
bGltaXQpIHsKIAkJRFJNX0RFQlVHX0tNUygicmVxdWVzdGVkIHBpeGVsIGNsb2NrICglZCBrSHop
IHRvbyBoaWdoIChtYXg6ICVkIGtIeiwgZG91YmxlIHdpZGU6ICVzKVxuIiwKIAkJCSAgICAgIGFk
anVzdGVkX21vZGUtPmNydGNfY2xvY2ssIGNsb2NrX2xpbWl0LApAQCAtODExNCwxMyArODEzMywx
MyBAQCBzdGF0aWMgdm9pZCBpOHh4X2NvbXB1dGVfZHBsbChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YywKIAljcnRjX3N0YXRlLT5kcGxsX2h3X3N0YXRlLmRwbGwgPSBkcGxsOwogfQogCi1zdGF0aWMg
dm9pZCBpbnRlbF9zZXRfcGlwZV90aW1pbmdzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlKQorc3RhdGljIHZvaWQgaW50ZWxfc2V0X3RyYW5zY29kZXJfdGltaW5ncyhj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50
ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2
KTsKIAllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CiAJZW51bSB0cmFuc2NvZGVyIGNwdV90
cmFuc2NvZGVyID0gY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXI7Ci0JY29uc3Qgc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRf
bW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9ICZj
cnRjX3N0YXRlLT5ody50cmFuc2NvZGVyX21vZGU7CiAJdTMyIGNydGNfdnRvdGFsLCBjcnRjX3Zi
bGFua19lbmQ7CiAJaW50IHZzeW5jc2hpZnQgPSAwOwogCkBAIC04MjA1LDggKzgyMjQsOCBAQCBz
dGF0aWMgYm9vbCBpbnRlbF9waXBlX2lzX2ludGVybGFjZWQoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJCXJldHVybiBJOTE1X1JFQUQoUElQRUNPTkYoY3B1X3Ry
YW5zY29kZXIpKSAmIFBJUEVDT05GX0lOVEVSTEFDRV9NQVNLOwogfQogCi1zdGF0aWMgdm9pZCBp
bnRlbF9nZXRfcGlwZV90aW1pbmdzKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAotCQkJCSAgIHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZykKK3N0YXRpYyB2b2lkIGludGVsX2dl
dF90cmFuc2NvZGVyX3RpbWluZ3Moc3RydWN0IGludGVsX2NydGMgKmNydGMsCisJCQkJCSBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGRybV9kZXZpY2Ug
KmRldiA9IGNydGMtPmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoZGV2KTsKQEAgLTg4MDksNyArODgyOCw3IEBAIHN0YXRpYyBib29sIGk5eHhf
Z2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCWlmIChJTlRFTF9HRU4o
ZGV2X3ByaXYpIDwgNCkKIAkJcGlwZV9jb25maWctPmRvdWJsZV93aWRlID0gdG1wICYgUElQRUNP
TkZfRE9VQkxFX1dJREU7CiAKLQlpbnRlbF9nZXRfcGlwZV90aW1pbmdzKGNydGMsIHBpcGVfY29u
ZmlnKTsKKwlpbnRlbF9nZXRfdHJhbnNjb2Rlcl90aW1pbmdzKGNydGMsIHBpcGVfY29uZmlnKTsK
IAlpbnRlbF9nZXRfcGlwZV9zcmNfc2l6ZShjcnRjLCBwaXBlX2NvbmZpZyk7CiAKIAlpOXh4X2dl
dF9wZml0X2NvbmZpZyhjcnRjLCBwaXBlX2NvbmZpZyk7CkBAIC0xMDA0NSw3ICsxMDA2NCw3IEBA
IHN0YXRpYyBib29sIGlyb25sYWtlX2dldF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YywKIAkJcGlwZV9jb25maWctPnBpeGVsX211bHRpcGxpZXIgPSAxOwogCX0KIAotCWludGVs
X2dldF9waXBlX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcpOworCWludGVsX2dldF90cmFuc2Nv
ZGVyX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcpOwogCWludGVsX2dldF9waXBlX3NyY19zaXpl
KGNydGMsIHBpcGVfY29uZmlnKTsKIAogCWlyb25sYWtlX2dldF9wZml0X2NvbmZpZyhjcnRjLCBw
aXBlX2NvbmZpZyk7CkBAIC0xMDQ0NSw3ICsxMDQ2NCw3IEBAIHN0YXRpYyBib29sIGhhc3dlbGxf
Z2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCWlmICghdHJhbnNjb2Rl
cl9pc19kc2kocGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyKSB8fAogCSAgICBJTlRFTF9HRU4o
ZGV2X3ByaXYpID49IDExKSB7CiAJCWhhc3dlbGxfZ2V0X2RkaV9wb3J0X3N0YXRlKGNydGMsIHBp
cGVfY29uZmlnKTsKLQkJaW50ZWxfZ2V0X3BpcGVfdGltaW5ncyhjcnRjLCBwaXBlX2NvbmZpZyk7
CisJCWludGVsX2dldF90cmFuc2NvZGVyX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcpOwogCX0K
IAogCWludGVsX2dldF9waXBlX3NyY19zaXplKGNydGMsIHBpcGVfY29uZmlnKTsKQEAgLTExODE0
LDYgKzExODMzLDcgQEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2F0b21pY19jaGVjayhzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAogCWlmIChtb2RlX2NoYW5nZWQgJiYgY3J0Y19z
dGF0ZS0+aHcuZW5hYmxlICYmCiAJICAgIGRldl9wcml2LT5kaXNwbGF5LmNydGNfY29tcHV0ZV9j
bG9jayAmJgorCSAgICAhY3J0Y19zdGF0ZS0+Ymlnam9pbmVyX3NsYXZlICYmCiAJICAgICFXQVJO
X09OKGNydGNfc3RhdGUtPnNoYXJlZF9kcGxsKSkgewogCQlyZXQgPSBkZXZfcHJpdi0+ZGlzcGxh
eS5jcnRjX2NvbXB1dGVfY2xvY2soY3J0YywgY3J0Y19zdGF0ZSk7CiAJCWlmIChyZXQpCkBAIC0x
MjI3OCw3ICsxMjI5OCw3IEBAIHN0YXRpYyB2b2lkIGNvcHlfdWFwaV90b19od19zdGF0ZShzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAljcnRjX3N0YXRlLT5ody5hY3RpdmUg
PSBjcnRjX3N0YXRlLT51YXBpLmFjdGl2ZTsKIAljcnRjX3N0YXRlLT5ody5tb2RlID0gY3J0Y19z
dGF0ZS0+dWFwaS5tb2RlOwogCWNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUgPSBjcnRjX3N0
YXRlLT51YXBpLmFkanVzdGVkX21vZGU7Ci0JaW50ZWxfY3J0Y19jb3B5X2NvbG9yX2Jsb2JzKGNy
dGNfc3RhdGUpOworCWludGVsX2NydGNfY29weV9jb2xvcl9ibG9icyhjcnRjX3N0YXRlLCBjcnRj
X3N0YXRlKTsKIH0KIAogc3RhdGljIHZvaWQgY29weV9od190b191YXBpX3N0YXRlKHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQpAQCAtMTIyODYsNyArMTIzMDYsNDggQEAgc3Rh
dGljIHZvaWQgY29weV9od190b191YXBpX3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogCWNydGNfc3RhdGUtPnVhcGkuZW5hYmxlID0gY3J0Y19zdGF0ZS0+aHcuZW5h
YmxlOwogCWNydGNfc3RhdGUtPnVhcGkuYWN0aXZlID0gY3J0Y19zdGF0ZS0+aHcuYWN0aXZlOwog
CWNydGNfc3RhdGUtPnVhcGkubW9kZSA9IGNydGNfc3RhdGUtPmh3Lm1vZGU7Ci0JY3J0Y19zdGF0
ZS0+dWFwaS5hZGp1c3RlZF9tb2RlID0gY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKKwlj
cnRjX3N0YXRlLT51YXBpLmFkanVzdGVkX21vZGUgPSBjcnRjX3N0YXRlLT5ody50cmFuc2NvZGVy
X21vZGU7Cit9CisKK3N0YXRpYyBpbnQKK2NvcHlfYmlnam9pbmVyX2NydGNfc3RhdGUoc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpmcm9tX2NydGNfc3RhdGUpCit7CisJc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KnNhdmVkX3N0YXRlOworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0Yyhj
cnRjX3N0YXRlLT51YXBpLmNydGMpOworCisJc2F2ZWRfc3RhdGUgPSBrbWVtZHVwKGZyb21fY3J0
Y19zdGF0ZSwgc2l6ZW9mKCpzYXZlZF9zdGF0ZSksIEdGUF9LRVJORUwpOworCWlmICghc2F2ZWRf
c3RhdGUpCisJCXJldHVybiAtRU5PTUVNOworCisJc2F2ZWRfc3RhdGUtPnVhcGkgPSBjcnRjX3N0
YXRlLT51YXBpOworCXNhdmVkX3N0YXRlLT5zY2FsZXJfc3RhdGUgPSBjcnRjX3N0YXRlLT5zY2Fs
ZXJfc3RhdGU7CisJc2F2ZWRfc3RhdGUtPnNoYXJlZF9kcGxsID0gY3J0Y19zdGF0ZS0+c2hhcmVk
X2RwbGw7CisJc2F2ZWRfc3RhdGUtPmRwbGxfaHdfc3RhdGUgPSBjcnRjX3N0YXRlLT5kcGxsX2h3
X3N0YXRlOworCXNhdmVkX3N0YXRlLT5jcmNfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmNyY19lbmFi
bGVkOworCisJaW50ZWxfY3J0Y19mcmVlX2h3X3N0YXRlKGNydGNfc3RhdGUpOworCW1lbWNweShj
cnRjX3N0YXRlLCBzYXZlZF9zdGF0ZSwgc2l6ZW9mKCpjcnRjX3N0YXRlKSk7CisJa2ZyZWUoc2F2
ZWRfc3RhdGUpOworCisJLyogUmUtaW5pdCBodyBzdGF0ZSAqLworCW1lbXNldCgmY3J0Y19zdGF0
ZS0+aHcsIDAsIHNpemVvZihzYXZlZF9zdGF0ZS0+aHcpKTsKKwljcnRjX3N0YXRlLT5ody5lbmFi
bGUgPSBmcm9tX2NydGNfc3RhdGUtPmh3LmVuYWJsZTsKKwljcnRjX3N0YXRlLT5ody5hY3RpdmUg
PSBmcm9tX2NydGNfc3RhdGUtPmh3LmFjdGl2ZTsKKwljcnRjX3N0YXRlLT5ody5tb2RlID0gZnJv
bV9jcnRjX3N0YXRlLT5ody5tb2RlOworCWNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUgPSBm
cm9tX2NydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGU7CisKKwkvKiBTb21lIGZpeHVwcyAqLwor
CWNydGNfc3RhdGUtPnVhcGkubW9kZV9jaGFuZ2VkID0gZnJvbV9jcnRjX3N0YXRlLT51YXBpLm1v
ZGVfY2hhbmdlZDsKKwljcnRjX3N0YXRlLT51YXBpLmNvbm5lY3RvcnNfY2hhbmdlZCA9IGZyb21f
Y3J0Y19zdGF0ZS0+dWFwaS5jb25uZWN0b3JzX2NoYW5nZWQ7CisJY3J0Y19zdGF0ZS0+dWFwaS5h
Y3RpdmVfY2hhbmdlZCA9IGZyb21fY3J0Y19zdGF0ZS0+dWFwaS5hY3RpdmVfY2hhbmdlZDsKKwlj
cnRjX3N0YXRlLT5udjEyX3BsYW5lcyA9IGNydGNfc3RhdGUtPmM4X3BsYW5lcyA9IGNydGNfc3Rh
dGUtPnVwZGF0ZV9wbGFuZXMgPSAwOworCWNydGNfc3RhdGUtPmJpZ2pvaW5lcl9saW5rZWRfY3J0
YyA9IHRvX2ludGVsX2NydGMoZnJvbV9jcnRjX3N0YXRlLT51YXBpLmNydGMpOworCWNydGNfc3Rh
dGUtPmJpZ2pvaW5lcl9zbGF2ZSA9IHRydWU7CisJY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXIg
PSAoZW51bSB0cmFuc2NvZGVyKWNydGMtPnBpcGU7CisJY3J0Y19zdGF0ZS0+aGFzX2F1ZGlvID0g
ZmFsc2U7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludApAQCAtMTI0NTksNyArMTI1MjAs
NyBAQCBpbnRlbF9tb2Rlc2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpw
aXBlX2NvbmZpZykKIAkJICAgICAgYmFzZV9icHAsIHBpcGVfY29uZmlnLT5waXBlX2JwcCwgcGlw
ZV9jb25maWctPmRpdGhlcik7CiAKIAkvKiB1YXBpIHdhbnRzIGEgY29weSBvZiB0aGUgYWRqdXN0
ZWRfbW9kZSBmb3IgdmJsYW5rIGJvb2trZWVwaW5nICovCi0JcGlwZV9jb25maWctPnVhcGkuYWRq
dXN0ZWRfbW9kZSA9IHBpcGVfY29uZmlnLT5ody5hZGp1c3RlZF9tb2RlOworCXBpcGVfY29uZmln
LT51YXBpLmFkanVzdGVkX21vZGUgPSBwaXBlX2NvbmZpZy0+aHcudHJhbnNjb2Rlcl9tb2RlOwog
CiAJcmV0dXJuIDA7CiB9CkBAIC0xMzYxMiw2ICsxMzY3MywxMDkgQEAgc3RhdGljIGludCBpbnRl
bF9hdG9taWNfY2hlY2tfY3J0Y3Moc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJ
cmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NoZWNrX2JpZ2pvaW5lcihz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRldik7CisJc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlLCAqbmV3X2NydGNfc3RhdGUsICpzbGF2ZV9jcnRj
X3N0YXRlLCAqbWFzdGVyX2NydGNfc3RhdGU7CisJc3RydWN0IGludGVsX2NydGMgKmNydGMsICpz
bGF2ZSwgKm1hc3RlcjsKKwlpbnQgaSwgcmV0ID0gMDsKKworCWlmIChJTlRFTF9HRU4oZGV2X3By
aXYpIDwgMTEpCisJCXJldHVybiAwOworCisJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5f
c3RhdGUoc3RhdGUsIGNydGMsIG9sZF9jcnRjX3N0YXRlLAorCQkJCQkgICAgbmV3X2NydGNfc3Rh
dGUsIGkpIHsKKwkJaWYgKCFvbGRfY3J0Y19zdGF0ZS0+Ymlnam9pbmVyX3NsYXZlKQorCQkJY29u
dGludWU7CisKKwkJaWYgKGNydGMtPnBpcGUgPT0gUElQRV9BKSB7CisJCQlEUk1fRVJST1IoIkJp
Z2pvaW5lciBzbGF2ZSBvbiBwaXBlIEE/XG4iKTsKKwkJCXJldHVybiAtRUlOVkFMOworCQl9CisK
KwkJLyogY3J0YyBzdGF5aW5nIGluIHNsYXZlIG1vZGU/ICovCisJCWlmICghbmV3X2NydGNfc3Rh
dGUtPnVhcGkuZW5hYmxlKQorCQkJY29udGludWU7CisKKwkJaWYgKG5lZWRzX21vZGVzZXQobmV3
X2NydGNfc3RhdGUpIHx8IG5ld19jcnRjX3N0YXRlLT51cGRhdGVfcGlwZSkgeworCQkJbWFzdGVy
ID0gb2xkX2NydGNfc3RhdGUtPmJpZ2pvaW5lcl9saW5rZWRfY3J0YzsKKwkJCW1hc3Rlcl9jcnRj
X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9jcnRjX3N0YXRlKCZzdGF0ZS0+YmFzZSwgbWFzdGVy
KTsKKwkJCWlmIChJU19FUlIobWFzdGVyX2NydGNfc3RhdGUpKQorCQkJCXJldHVybiBQVFJfRVJS
KG1hc3Rlcl9jcnRjX3N0YXRlKTsKKworCQkJLyoKKwkJCSAqIEZvcmNlIG1vZGVzZXQgb24gbWFz
dGVyLCB0byByZWNhbGN1bGF0ZSBiaWdqb2luZXIKKwkJCSAqIHN0YXRlLgorCQkJICoKKwkJCSAq
IElmIG1hc3Rlcl9jcnRjX3N0YXRlIHdhcyBub3QgcGFydCBvZiB0aGUgYXRvbWljIGNvbW1pdCwK
KwkJCSAqIHdlIHdpbGwgZmFpbCBiZWNhdXNlIHRoZSBtYXN0ZXIgd2FzIG5vdCBkZWNvbmZpZ3Vy
ZWQsCisJCQkgKiBidXQgYXQgbGVhc3QgZmFpbCBiZWxvdyB0byB1bmlmeSB0aGUgY2hlY2tzLgor
CQkJICovCisJCQltYXN0ZXJfY3J0Y19zdGF0ZS0+dWFwaS5tb2RlX2NoYW5nZWQgPSB0cnVlOwor
CisJCQlyZXQgPSBkcm1fYXRvbWljX2FkZF9hZmZlY3RlZF9wbGFuZXMoJnN0YXRlLT5iYXNlLCAm
Y3J0Yy0+YmFzZSk7CisJCQlpZiAocmV0KQorCQkJCXJldHVybiByZXQ7CisKKwkJCXJldCA9IGRy
bV9hdG9taWNfYWRkX2FmZmVjdGVkX2Nvbm5lY3RvcnMoJnN0YXRlLT5iYXNlLCAmY3J0Yy0+YmFz
ZSk7CisJCQlpZiAocmV0KQorCQkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKKwlmb3JfZWFjaF9v
bGRuZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0Yywgb2xkX2NydGNfc3RhdGUsCisJ
CQkJCSAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCQlpZiAoIW5ld19jcnRjX3N0YXRlLT51YXBp
LmVuYWJsZSB8fCAhbmV3X2NydGNfc3RhdGUtPmJpZ2pvaW5lcikgeworCQkJaWYgKCFvbGRfY3J0
Y19zdGF0ZS0+Ymlnam9pbmVyKQorCQkJCWNvbnRpbnVlOworCQl9CisKKwkJaWYgKCFuZWVkc19t
b2Rlc2V0KG5ld19jcnRjX3N0YXRlKSAmJiAhbmV3X2NydGNfc3RhdGUtPnVwZGF0ZV9waXBlKQor
CQkJY29udGludWU7CisKKwkJaWYgKG5ld19jcnRjX3N0YXRlLT5iaWdqb2luZXIgJiYgIW5ld19j
cnRjX3N0YXRlLT5iaWdqb2luZXJfc2xhdmUpIHsKKwkJCWlmICgxICsgY3J0Yy0+cGlwZSA+PSBJ
TlRFTF9OVU1fUElQRVMoZGV2X3ByaXYpKSB7CisJCQkJRFJNX0RFQlVHX0tNUygiQmlnIGpvaW5l
ciBjb25maWd1cmF0aW9uIHJlcXVpcmVzIENSVEMgKyAxIHRvIGJlIHVzZWQsIGRvZXNuJ3QgZXhp
c3RcbiIpOworCQkJCXJldHVybiAtRUlOVkFMOworCQkJfQorCisJCQlzbGF2ZSA9IG5ld19jcnRj
X3N0YXRlLT5iaWdqb2luZXJfbGlua2VkX2NydGMgPQorCQkJCWludGVsX2dldF9jcnRjX2Zvcl9w
aXBlKGRldl9wcml2LCBjcnRjLT5waXBlICsgMSk7CisJCQlzbGF2ZV9jcnRjX3N0YXRlID0gaW50
ZWxfYXRvbWljX2dldF9jcnRjX3N0YXRlKCZzdGF0ZS0+YmFzZSwgc2xhdmUpOworCQkJaWYgKElT
X0VSUihzbGF2ZV9jcnRjX3N0YXRlKSkKKwkJCQlyZXR1cm4gUFRSX0VSUihzbGF2ZV9jcnRjX3N0
YXRlKTsKKworCQkJaWYgKHNsYXZlX2NydGNfc3RhdGUtPnVhcGkuZW5hYmxlKSB7CisJCQkJRFJN
X0RFQlVHX0tNUygiW0NSVEM6JWQ6JXNdIEJpZyBqb2luZXIgY29uZmlndXJhdGlvbiByZXF1aXJl
cyB0aGlzIENSVEMgdG8gYmUgdW5jb25maWd1cmVkXG4iLAorCQkJCQkgICAgICBzbGF2ZS0+YmFz
ZS5iYXNlLmlkLCBzbGF2ZS0+YmFzZS5uYW1lKTsKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0g
ZWxzZSB7CisJCQkJRFJNX0RFQlVHX0tNUygiW0NSVEM6JWQ6JXNdIFVzZWQgYXMgc2xhdmUgZm9y
IGJpZyBqb2luZXJcbiIsCisJCQkJCSAgICAgIHNsYXZlLT5iYXNlLmJhc2UuaWQsIHNsYXZlLT5i
YXNlLm5hbWUpOworCQkJCXJldCA9IGNvcHlfYmlnam9pbmVyX2NydGNfc3RhdGUoc2xhdmVfY3J0
Y19zdGF0ZSwgbmV3X2NydGNfc3RhdGUpOworCQkJfQorCQl9IGVsc2UgeworCQkJbWFzdGVyID0g
bmV3X2NydGNfc3RhdGUtPmJpZ2pvaW5lcl9saW5rZWRfY3J0YzsKKwkJCWlmICghbWFzdGVyKQor
CQkJCWNvbnRpbnVlOworCisJCQltYXN0ZXJfY3J0Y19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRf
Y3J0Y19zdGF0ZSgmc3RhdGUtPmJhc2UsIG1hc3Rlcik7CisJCQlpZiAoSVNfRVJSKG1hc3Rlcl9j
cnRjX3N0YXRlKSkKKwkJCQlyZXR1cm4gUFRSX0VSUihtYXN0ZXJfY3J0Y19zdGF0ZSk7CisKKwkJ
CWlmICghbWFzdGVyX2NydGNfc3RhdGUtPnVhcGkuZW5hYmxlICYmICFuZXdfY3J0Y19zdGF0ZS0+
dWFwaS5lbmFibGUpIHsKKwkJCQlEUk1fREVCVUdfS01TKCJbQ1JUQzolZDolc10gRGlzYWJsaW5n
IHNsYXZlIGZyb20gYmlnIGpvaW5lclxuIiwKKwkJCQkJICAgICAgY3J0Yy0+YmFzZS5iYXNlLmlk
LCBjcnRjLT5iYXNlLm5hbWUpOworCQkJCXJldCA9IGNsZWFyX2ludGVsX2NydGNfc3RhdGUobmV3
X2NydGNfc3RhdGUpOworCQkJfQorCQl9CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCX0K
KworCXJldHVybiAwOworfQorCiAvKioKICAqIGludGVsX2F0b21pY19jaGVjayAtIHZhbGlkYXRl
IHN0YXRlIG9iamVjdAogICogQGRldjogZHJtIGRldmljZQpAQCAtMTM2NDIsMTYgKzEzODA2LDE5
IEBAIHN0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NoZWNrKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
CiAJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUsIGNydGMsIG9sZF9j
cnRjX3N0YXRlLAogCQkJCQkgICAgbmV3X2NydGNfc3RhdGUsIGkpIHsKIAkJaWYgKCFuZWVkc19t
b2Rlc2V0KG5ld19jcnRjX3N0YXRlKSkgewotCQkJaWYgKG5ld19jcnRjX3N0YXRlLT51YXBpLmNv
bG9yX21nbXRfY2hhbmdlZCkKLQkJCQlpbnRlbF9jcnRjX2NvcHlfY29sb3JfYmxvYnMobmV3X2Ny
dGNfc3RhdGUpOworCQkJaWYgKG5ld19jcnRjX3N0YXRlLT51YXBpLmNvbG9yX21nbXRfY2hhbmdl
ZCAmJgorCQkJICAgICFuZXdfY3J0Y19zdGF0ZS0+Ymlnam9pbmVyX3NsYXZlKQorCQkJCWludGVs
X2NydGNfY29weV9jb2xvcl9ibG9icyhuZXdfY3J0Y19zdGF0ZSwgbmV3X2NydGNfc3RhdGUpOwog
CQkJY29udGludWU7CiAJCX0KIAogCQlpZiAoIW5ld19jcnRjX3N0YXRlLT51YXBpLmVuYWJsZSkg
ewogCQkJYW55X21zID0gdHJ1ZTsKLQkJCWludGVsX2NydGNfZnJlZV9od19zdGF0ZShuZXdfY3J0
Y19zdGF0ZSk7Ci0JCQltZW1zZXQoJm5ld19jcnRjX3N0YXRlLT5odywgMCwKLQkJCSAgICAgICBz
aXplb2YobmV3X2NydGNfc3RhdGUtPmh3KSk7CisJCQlpZiAoIW5ld19jcnRjX3N0YXRlLT5iaWdq
b2luZXJfc2xhdmUpIHsKKwkJCQlpbnRlbF9jcnRjX2ZyZWVfaHdfc3RhdGUobmV3X2NydGNfc3Rh
dGUpOworCQkJCW1lbXNldCgmbmV3X2NydGNfc3RhdGUtPmh3LCAwLAorCQkJCSAgICAgIHNpemVv
ZihuZXdfY3J0Y19zdGF0ZS0+aHcpKTsKKwkJCX0KIAkJCWNvbnRpbnVlOwogCQl9CiAKQEAgLTEz
NjY1LDYgKzEzODMyLDEwIEBAIHN0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NoZWNrKHN0cnVjdCBk
cm1fZGV2aWNlICpkZXYsCiAJCQlhbnlfbXMgPSB0cnVlOwogCX0KIAorCXJldCA9IGludGVsX2F0
b21pY19jaGVja19iaWdqb2luZXIoc3RhdGUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisK
IAlyZXQgPSBkcm1fZHBfbXN0X2F0b21pY19jaGVjaygmc3RhdGUtPmJhc2UpOwogCWlmIChyZXQp
CiAJCWdvdG8gZmFpbDsKQEAgLTEzODYwLDcgKzE0MDMxLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxf
dXBkYXRlX2NydGMoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAKIAljb21taXRfcGlwZV9jb25m
aWcoc3RhdGUsIG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0Y19zdGF0ZSk7CiAKLQlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA+PSA5KQorCWlmIChuZXdfY3J0Y19zdGF0ZS0+Ymlnam9pbmVyKQorCQl7
LyogTm90IHN1cHBvcnRlZCB5ZXQgKi99CisJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+
PSA5KQogCQlza2xfdXBkYXRlX3BsYW5lc19vbl9jcnRjKHN0YXRlLCBjcnRjKTsKIAllbHNlCiAJ
CWk5eHhfdXBkYXRlX3BsYW5lc19vbl9jcnRjKHN0YXRlLCBjcnRjKTsKQEAgLTE2OTE1LDcgKzE3
MDg4LDYgQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNldF9yZWFkb3V0X2h3X3N0YXRlKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYpCiAJCX0KIAogCQlpbnRlbF9id19jcnRjX3VwZGF0ZShid19zdGF0
ZSwgY3J0Y19zdGF0ZSk7Ci0KIAkJY29weV9od190b191YXBpX3N0YXRlKGNydGNfc3RhdGUpOwog
CQlpbnRlbF9waXBlX2NvbmZpZ19zYW5pdHlfY2hlY2soZGV2X3ByaXYsIGNydGNfc3RhdGUpOwog
CX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5
cGVzLmgKaW5kZXggNjc2NDQ4MThlZmQyLi42Y2U4MjM5NDNhNjkgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC03OTEsNyAr
NzkxLDcgQEAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgewogCXN0cnVjdCB7CiAJCWJvb2wgYWN0
aXZlLCBlbmFibGU7CiAJCXN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqZGVnYW1tYV9sdXQsICpn
YW1tYV9sdXQsICpjdG07Ci0JCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlIG1vZGUsIGFkanVzdGVk
X21vZGU7CisJCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlIG1vZGUsIGFkanVzdGVkX21vZGUsIHRy
YW5zY29kZXJfbW9kZTsKIAl9IGh3OwogCiAJLyoqCkBAIC0xMDIyLDYgKzEwMjIsMTUgQEAgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgewogCS8qIGVuYWJsZSBwaXBlIGNzYz8gKi8KIAlib29sIGNz
Y19lbmFibGU7CiAKKwkvKiBlbmFibGUgcGlwZSBiaWcgam9pbmVyPyAqLworCWJvb2wgYmlnam9p
bmVyOworCisJLyogYmlnIGpvaW5lciBzbGF2ZSBjcnRjPyAqLworCWJvb2wgYmlnam9pbmVyX3Ns
YXZlOworCisJLyogbGlua2VkIGNydGMgZm9yIGJpZ2pvaW5lciwgZWl0aGVyIHNsYXZlIG9yIG1h
c3RlciAqLworCXN0cnVjdCBpbnRlbF9jcnRjICpiaWdqb2luZXJfbGlua2VkX2NydGM7CisKIAkv
KiBEaXNwbGF5IFN0cmVhbSBjb21wcmVzc2lvbiBzdGF0ZSAqLwogCXN0cnVjdCB7CiAJCWJvb2wg
Y29tcHJlc3Npb25fZW5hYmxlOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5j
CmluZGV4IDVjNzMyM2FmMDhiMy4uNjM3ZWU3ZDA2NTZhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcC5jCkBAIC0yMTA2LDYgKzIxMDYsMTkgQEAgc3RhdGljIGludCBpbnRl
bF9kcF9kc2NfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlwaXBl
X2NvbmZpZy0+cG9ydF9jbG9jayA9IGludGVsX2RwLT5jb21tb25fcmF0ZXNbbGltaXRzLT5tYXhf
Y2xvY2tdOwogCXBpcGVfY29uZmlnLT5sYW5lX2NvdW50ID0gbGltaXRzLT5tYXhfbGFuZV9jb3Vu
dDsKIAorCWlmIChhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrID4gaW50ZWxfZHBfZG93bnN0cmVh
bV9tYXhfZG90Y2xvY2soaW50ZWxfZHAsIGZhbHNlKSkgeworCQlpZiAoYWRqdXN0ZWRfbW9kZS0+
Y3J0Y19jbG9jayA+IGludGVsX2RwX2Rvd25zdHJlYW1fbWF4X2RvdGNsb2NrKGludGVsX2RwLCB0
cnVlKSkgeworCQkJRFJNX0RFQlVHX0tNUygiQ2xvY2sgcmF0ZSB0b28gaGlnaCBmb3IgYmlnIGpv
aW5lclxuIik7CisJCQlyZXR1cm4gLUVJTlZBTDsKKwkJfQorCQlpZiAoaW50ZWxfZHBfaXNfZWRw
KGludGVsX2RwKSkgeworCQkJRFJNX0RFQlVHX0tNUygiQ2Fubm90IHNwbGl0IGVEUCBzdHJlYW0g
aW4gYmlnam9pbmVyIGNvbmZpZ3VyYXRpb24uXG4iKTsKKwkJCXJldHVybiAtRUlOVkFMOworCQl9
CisJCXBpcGVfY29uZmlnLT5iaWdqb2luZXIgPSB0cnVlOworCQlEUk1fREVCVUdfS01TKCJVc2lu
ZyBiaWdqb2luZXIgY29uZmlndXJhdGlvblxuIik7CisJfQorCiAJaWYgKGludGVsX2RwX2lzX2Vk
cChpbnRlbF9kcCkpIHsKIAkJcGlwZV9jb25maWctPmRzY19wYXJhbXMuY29tcHJlc3NlZF9icHAg
PQogCQkJbWluX3QodTE2LCBkcm1fZWRwX2RzY19zaW5rX291dHB1dF9icHAoaW50ZWxfZHAtPmRz
Y19kcGNkKSA+PiA0LApAQCAtMjEyMywxMiArMjEzNiwxMiBAQCBzdGF0aWMgaW50IGludGVsX2Rw
X2RzY19jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJCQkJICAg
IHBpcGVfY29uZmlnLT5sYW5lX2NvdW50LAogCQkJCQkJICAgIGFkanVzdGVkX21vZGUtPmNydGNf
Y2xvY2ssCiAJCQkJCQkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheSwKLQkJCQkJCSAg
ICBmYWxzZSk7CisJCQkJCQkgICAgcGlwZV9jb25maWctPmJpZ2pvaW5lcik7CiAJCWRzY19kcF9z
bGljZV9jb3VudCA9CiAJCQlpbnRlbF9kcF9kc2NfZ2V0X3NsaWNlX2NvdW50KGludGVsX2RwLAog
CQkJCQkJICAgICBhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrLAogCQkJCQkJICAgICBhZGp1c3Rl
ZF9tb2RlLT5jcnRjX2hkaXNwbGF5LAotCQkJCQkJICAgICBmYWxzZSk7CisJCQkJCQkgICAgIHBp
cGVfY29uZmlnLT5iaWdqb2luZXIpOwogCQlpZiAoIWRzY19tYXhfb3V0cHV0X2JwcCB8fCAhZHNj
X2RwX3NsaWNlX2NvdW50KSB7CiAJCQlEUk1fREVCVUdfS01TKCJDb21wcmVzc2VkIEJQUC9TbGlj
ZSBDb3VudCBub3Qgc3VwcG9ydGVkXG4iKTsKIAkJCXJldHVybiAtRUlOVkFMOwpAQCAtMjE0Mywx
MyArMjE1NiwxMyBAQCBzdGF0aWMgaW50IGludGVsX2RwX2RzY19jb21wdXRlX2NvbmZpZyhzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCSAqIGlzIGdyZWF0ZXIgdGhhbiB0aGUgbWF4aW11bSBD
ZGNsb2NrIGFuZCBpZiBzbGljZSBjb3VudCBpcyBldmVuCiAJICogdGhlbiB3ZSBuZWVkIHRvIHVz
ZSAyIFZEU0MgaW5zdGFuY2VzLgogCSAqLwotCWlmIChhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2Nr
ID4gZGV2X3ByaXYtPm1heF9jZGNsa19mcmVxKSB7Ci0JCWlmIChwaXBlX2NvbmZpZy0+ZHNjX3Bh
cmFtcy5zbGljZV9jb3VudCA+IDEpIHsKLQkJCXBpcGVfY29uZmlnLT5kc2NfcGFyYW1zLmRzY19z
cGxpdCA9IHRydWU7Ci0JCX0gZWxzZSB7CisJaWYgKGFkanVzdGVkX21vZGUtPmNydGNfY2xvY2sg
PiBkZXZfcHJpdi0+bWF4X2NkY2xrX2ZyZXEgfHwgcGlwZV9jb25maWctPmJpZ2pvaW5lcikgewor
CQlpZiAocGlwZV9jb25maWctPmRzY19wYXJhbXMuc2xpY2VfY291bnQgPCAyKSB7CiAJCQlEUk1f
REVCVUdfS01TKCJDYW5ub3Qgc3BsaXQgc3RyZWFtIHRvIHVzZSAyIFZEU0MgaW5zdGFuY2VzXG4i
KTsKIAkJCXJldHVybiAtRUlOVkFMOwogCQl9CisKKwkJcGlwZV9jb25maWctPmRzY19wYXJhbXMu
ZHNjX3NwbGl0ID0gdHJ1ZTsKIAl9CiAKIAlyZXQgPSBpbnRlbF9kcF9jb21wdXRlX2RzY19wYXJh
bXMoaW50ZWxfZHAsIHBpcGVfY29uZmlnKTsKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRl
bC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 526213C2C5C
	for <lists+intel-gfx@lfdr.de>; Sat, 10 Jul 2021 03:21:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A43006EAB2;
	Sat, 10 Jul 2021 01:21:37 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 64BF66EAB2;
 Sat, 10 Jul 2021 01:21:36 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10040"; a="270916416"
X-IronPort-AV: E=Sophos;i="5.84,228,1620716400"; d="scan'208";a="270916416"
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 09 Jul 2021 18:21:33 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.84,228,1620716400"; d="scan'208";a="411439582"
Received: from vbelgaum-ubuntu.fm.intel.com ([10.1.27.27])
 by orsmga006.jf.intel.com with ESMTP; 09 Jul 2021 18:21:32 -0700
From: Vinay Belgaumkar <vinay.belgaumkar@intel.com>
To: intel-gfx@lists.freedesktop.org,
	dri-devel@lists.freedesktop.org
Date: Fri,  9 Jul 2021 18:20:11 -0700
Message-Id: <20210710012026.19705-2-vinay.belgaumkar@intel.com>
X-Mailer: git-send-email 2.25.0
In-Reply-To: <20210710012026.19705-1-vinay.belgaumkar@intel.com>
References: <20210710012026.19705-1-vinay.belgaumkar@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 01/16] drm/i915/guc: Squashed patch - DO NOT
 REVIEW
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Fernando Pacheco <fernando.pacheco@intel.com>,
 Rahul Kumar Singh <rahul.kumar.singh@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+CgpTcXVhc2hlZCBw
YXRjaGVzIG5lZWRlZCBmb3IgQ0kgdG8gZXhlY3V0ZS4gVGhlc2UKcGF0Y2hlcyBhcmUgYWxyZWFk
eSBpbiByZXZpZXcgaW4gYSBzZXBhcmF0ZQpzZXJpZXMgLSAgKERPIE5PVCBSRVZJRVcgV0lUSCBU
SElTIFNFUklFUykgLQoKaHR0cHM6Ly9wYXRjaHdvcmsuZnJlZWRlc2t0b3Aub3JnL3Nlcmllcy84
OTg0NC8KaHR0cHM6Ly9wYXRjaHdvcmsuZnJlZWRlc2t0b3Aub3JnL3Nlcmllcy85MTQxNy8KClNp
Z25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJt
L2k5MTUvZ3VjOiBJbXByb3ZlIGVycm9yIG1lc3NhZ2UgZm9yIHVuc29saWNpdGVkIENUIHJlc3Bv
bnNlCgpJbXByb3ZlIHRoZSBlcnJvciBtZXNzYWdlIHdoZW4gYSB1bnNvbGljaXRlZCBDVCByZXNw
b25zZSBpcyByZWNlaXZlZCBieQpwcmludGluZyBmZW5jZSB0aGF0IGNvdWxkbid0IGJlIGZvdW5k
LCB0aGUgbGFzdCBmZW5jZSwgYW5kIGFsbCByZXF1ZXN0cwp3aXRoIGEgcmVzcG9uc2Ugb3V0c3Rh
bmRpbmcuCgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVs
LmNvbT4KUmV2aWV3ZWQtYnk6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hhbC53YWpkZWN6a29AaW50
ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBJbmNyZWFzZSBzaXplIG9mIENUQiBidWZmZXJzCgpXaXRo
IHRoZSBpbnRyb2R1Y3Rpb24gb2Ygbm9uLWJsb2NraW5nIENUQnMgbW9yZSB0aGFuIG9uZSBDVEIg
Y2FuIGJlIGluCmZsaWdodCBhdCBhIHRpbWUuIEluY3JlYXNpbmcgdGhlIHNpemUgb2YgdGhlIENU
QnMgc2hvdWxkIHJlZHVjZSBob3cKb2Z0ZW4gc29mdHdhcmUgaGl0cyB0aGUgY2FzZSB3aGVyZSBu
byBzcGFjZSBpcyBhdmFpbGFibGUgaW4gdGhlIENUQgpidWZmZXIuCgpDYzogSm9obiBIYXJyaXNv
biA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9z
dCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNaWNoYWwgV2FqZGVjemtv
IDxtaWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogQWRkIG5vbiBibG9j
a2luZyBDVEIgc2VuZCBmdW5jdGlvbgoKQWRkIG5vbiBibG9ja2luZyBDVEIgc2VuZCBmdW5jdGlv
biwgaW50ZWxfZ3VjX3NlbmRfbmIuIEd1QyBzdWJtaXNzaW9uCndpbGwgc2VuZCBDVEJzIGluIHRo
ZSBjcml0aWNhbCBwYXRoIGFuZCBkb2VzIG5vdCBuZWVkIHRvIHdhaXQgZm9yIHRoZXNlCkNUQnMg
dG8gY29tcGxldGUgYmVmb3JlIG1vdmluZyBvbiwgaGVuY2UgdGhlIG5lZWQgZm9yIHRoaXMgbmV3
IGZ1bmN0aW9uLgoKVGhlIG5vbi1ibG9ja2luZyBDVEIgbm93IG11c3QgaGF2ZSBhIGZsb3cgY29u
dHJvbCBtZWNoYW5pc20gdG8gZW5zdXJlCnRoZSBidWZmZXIgaXNuJ3Qgb3ZlcnJ1bi4gQSBsYXp5
IHNwaW4gd2FpdCBpcyB1c2VkIGFzIHdlIGJlbGlldmUgdGhlCmZsb3cgY29udHJvbCBjb25kaXRp
b24gc2hvdWxkIGJlIHJhcmUgd2l0aCBhIHByb3Blcmx5IHNpemVkIGJ1ZmZlci4KClRoZSBmdW5j
dGlvbiwgaW50ZWxfZ3VjX3NlbmRfbmIsIGlzIGV4cG9ydGVkIGluIHRoaXMgcGF0Y2ggYnV0IHVu
dXNlZC4KU2V2ZXJhbCBwYXRjaGVzIGxhdGVyIGluIHRoZSBzZXJpZXMgbWFrZSB1c2Ugb2YgdGhp
cyBmdW5jdGlvbi4KCnYyOgogKE1pY2hhbCkKICAtIFVzZSBkZWZpbmUgZm9yIEgyRyByb29tIGNh
bGN1bGF0aW9ucwogIC0gTW92ZSBJTlRFTF9HVUNfU0VORF9OQiBkZWZpbmUKIChEYW5pZWwgVmV0
dGVyKQogIC0gVXNlIG1zbGVlcF9pbnRlcnJ1cHRpYmxlIHJhdGhlciB0aGFuIGNvbmRfcmVzY2hl
ZAp2MzoKIChNaWNoYWwpCiAgLSBNb3ZlIGluY2x1ZGVzIHRvIGZvbGxvd2luZyBwYXRjaAogIC0g
cy9JTlRFTF9HVUNfU0VORF9OQi9JTlRFTF9HVUNfQ1RfU0VORF9OQi9nCnY0OgogKEpvaG4gSCkK
ICAtIFVwZGF0ZSBjb21tZW50LCBhZGQgdHlwZSBsb2NhbCB2YXJpYWJsZQoKU2lnbmVkLW9mZi1i
eTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1i
eTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBK
b2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBB
ZGQgc3RhbGwgdGltZXIgdG8gbm9uIGJsb2NraW5nIENUQiBzZW5kIGZ1bmN0aW9uCgpJbXBsZW1l
bnQgYSBzdGFsbCB0aW1lciB3aGljaCBmYWlscyBIMkcgQ1RCcyBvbmNlIGEgcGVyaW9kIG9mIHRp
bWUKd2l0aCBubyBmb3J3YXJkIHByb2dyZXNzIGlzIHJlYWNoZWQgdG8gcHJldmVudCBkZWFkbG9j
ay4KCnYyOgogKE1pY2hhbCkKICAtIEltcHJvdmUgZXJyb3IgbWVzc2FnZSBpbiBjdF9kZWFkbG9j
aygpCiAgLSBTZXQgYnJva2VuIHdoZW4gY3RfZGVhZGxvY2soKSByZXR1cm5zIHRydWUKICAtIFJl
dHVybiAtRVBJUEUgb24gY3RfZGVhZGxvY2soKQp2MzoKIChNaWNoYWwpCiAgLSBBZGQgbXMgdG8g
c3RhbGwgdGltZXIgY29tbWVudAogKE1hdHRoZXcpCiAgLSBNb3ZlIGJyb2tlbiBjaGVjayB0byBp
bnRlbF9ndWNfY3Rfc2VuZCgpCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMu
SGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlv
IDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3
IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlz
b24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IE9wdGltaXplIENU
QiB3cml0ZXMgYW5kIHJlYWRzCgpDVEIgd3JpdGVzIGFyZSBub3cgaW4gdGhlIHBhdGggb2YgY29t
bWFuZCBzdWJtaXNzaW9uIGFuZCBzaG91bGQgYmUKb3B0aW1pemVkIGZvciBwZXJmb3JtYW5jZS4g
UmF0aGVyIHRoYW4gcmVhZGluZyBDVEIgZGVzY3JpcHRvciB2YWx1ZXMKKGUuZy4gaGVhZCwgdGFp
bCkgd2hpY2ggY291bGQgcmVzdWx0IGluIGFjY2Vzc2VzIGFjcm9zcyB0aGUgUENJZSBidXMsCnN0
b3JlIHNoYWRvdyBsb2NhbCBjb3BpZXMgYW5kIG9ubHkgcmVhZC93cml0ZSB0aGUgZGVzY3JpcHRv
ciB2YWx1ZXMgd2hlbgphYnNvbHV0ZWx5IG5lY2Vzc2FyeS4gQWxzbyBzdG9yZSB0aGUgY3VycmVu
dCBzcGFjZSBpbiB0aGUgZWFjaCBjaGFubmVsCmxvY2FsbHkuCgp2MjoKIChNaWNoYWwpCiAgLSBB
ZGQgYWRkaXRpb25hbCBzYW5pdHkgY2hlY2tzIGZvciBoZWFkIC8gdGFpbCBwb2ludGVycwogIC0g
VXNlIEdVQ19DVEJfSERSX0xFTiByYXRoZXIgdGhhbiBtYWdpYyAxCnYzOgogKE1pY2hhbCAvIEpv
aG4gSCkKICAtIERyb3AgcmVkdW5kYW50IGNoZWNrIG9mIGhlYWQgdmFsdWUKdjQ6CiAoSm9obiBI
KQogIC0gRHJvcCByZWR1bmRhbnQgY2hlY2tzIG9mIHRhaWwgLyBoZWFkIHZhbHVlcwp2NToKIChN
aWNoYWwpCiAgLSBBZGRyZXNzIG1vcmUgbml0cwp2NjoKIChNaWNoYWwpCiAgLSBBZGQgR0VNX0JV
R19PTiBzYW5pdHkgY2hlY2sgb24gY3RiLT5zcGFjZQoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJy
aXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBC
cm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNaWNoYWwgV2FqZGVj
emtvIDxtaWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogTW9kdWxlIGxv
YWQgZmFpbHVyZSB0ZXN0IGZvciBDVCBidWZmZXIgY3JlYXRpb24KCkFkZCBzZXZlcmFsIG1vZHVs
ZSBmYWlsdXJlIGxvYWQgaW5qZWN0IHBvaW50cyBpbiB0aGUgQ1QgYnVmZmVyIGNyZWF0aW9uCmNv
ZGUgcGF0aC4KClNpZ25lZC1vZmYtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJ
bnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50
ZWwuY29tPgpSZXZpZXdlZC1ieTogTWljaGFsIFdhamRlY3prbyA8bWljaGFsLndhamRlY3prb0Bp
bnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEFkZCBuZXcgR3VDIGludGVyZmFjZSBkZWZpbmVzIGFu
ZCBzdHJ1Y3R1cmVzCgpBZGQgbmV3IEd1QyBpbnRlcmZhY2UgZGVmaW5lcyBhbmQgc3RydWN0dXJl
cyB3aGlsZSBtYWludGFpbmluZyBvbGQgb25lcwppbiBwYXJhbGxlbC4KCkNjOiBKb2huIEhhcnJp
c29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJy
b3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEpvaG4gSGFycmlzb24g
PEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IFJlbW92ZSBHdUMgc3Rh
Z2UgZGVzY3JpcHRvciwgYWRkIExSQyBkZXNjcmlwdG9yCgpSZW1vdmUgb2xkIEd1QyBzdGFnZSBk
ZXNjcmlwdG9yLCBhZGQgTFJDIGRlc2NyaXB0b3Igd2hpY2ggd2lsbCBiZSB1c2VkCmJ5IHRoZSBu
ZXcgR3VDIGludGVyZmFjZSBpbXBsZW1lbnRlZCBpbiB0aGlzIHBhdGNoIHNlcmllcy4KCnYyOgog
KEpvaG4gSGFycmlzb24pCiAgLSBzL2xyYy9MUkMvZwoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4u
Yy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRo
ZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhh
cnJpc29uQEludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogQWRkIExSQyBkZXNjcmlwdG9yIGNvbnRl
eHQgbG9va3VwIGFycmF5CgpBZGQgTFJDIGRlc2NyaXB0b3IgY29udGV4dCBsb29rdXAgYXJyYXkg
d2hpY2ggY2FuIHJlc29sdmUgdGhlCmludGVsX2NvbnRleHQgZnJvbSB0aGUgTFJDIGRlc2NyaXB0
b3IgaW5kZXguIEluIGFkZGl0aW9uIHRvIGxvb2t1cCwgaXQKY2FuIGRldGVybWluZSBpbiB0aGUg
TFJDIGRlc2NyaXB0b3IgY29udGV4dCBpcyBjdXJyZW50bHkgcmVnaXN0ZXJlZCB3aXRoCnRoZSBH
dUMgYnkgY2hlY2tpbmcgaWYgYW4gZW50cnkgZm9yIGEgZGVzY3JpcHRvciBpbmRleCBpcyBwcmVz
ZW50LgpGdXR1cmUgcGF0Y2hlcyBpbiB0aGUgc2VyaWVzIHdpbGwgbWFrZSB1c2Ugb2YgdGhpcyBh
cnJheS4KCnYyOgogKE1pY2hhbCkKICAtICJsaW51eC94YXJyYXkuaCIgLT4gPGxpbnV4L3hhcnJh
eS5oPgogIC0gcy9scmMvTFJDCgpDYzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGlu
dGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRl
bC5jb20+ClJldmlld2VkLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwu
Y29tPgoKZHJtL2k5MTUvZ3VjOiBJbXBsZW1lbnQgR3VDIHN1Ym1pc3Npb24gdGFza2xldAoKSW1w
bGVtZW50IEd1QyBzdWJtaXNzaW9uIHRhc2tsZXQgZm9yIG5ldyBpbnRlcmZhY2UuIFRoZSBuZXcg
R3VDCmludGVyZmFjZSB1c2VzIEgyRyB0byBzdWJtaXQgY29udGV4dHMgdG8gdGhlIEd1Qy4gU2lu
Y2UgSDJHIHVzZSBhIHNpbmdsZQpjaGFubmVsLCBhIHNpbmdsZSB0YXNrbGV0IHN1Ym1pdHMgaXMg
dXNlZCBmb3IgdGhlIHN1Ym1pc3Npb24gcGF0aC4KCkFsc28gdGhlIHBlciBlbmdpbmUgaW50ZXJy
dXB0IGhhbmRsZXIgaGFzIGJlZW4gdXBkYXRlZCB0byBkaXNhYmxlIHRoZQpyZXNjaGVkdWxpbmcg
b2YgdGhlIHBoeXNpY2FsIGVuZ2luZSB0YXNrbGV0LCB3aGVuIHVzaW5nIEd1QyBzY2hlZHVsaW5n
LAphcyB0aGUgcGh5c2ljYWwgZW5naW5lIHRhc2tsZXQgaXMgbm8gbG9uZ2VyIHVzZWQuCgpJbiB0
aGlzIHBhdGNoIHRoZSBmaWVsZCwgZ3VjX2lkLCBoYXMgYmVlbiBhZGRlZCB0byBpbnRlbF9jb250
ZXh0IGFuZCBpcwpub3QgYXNzaWduZWQuIFBhdGNoZXMgbGF0ZXIgaW4gdGhlIHNlcmllcyB3aWxs
IGFzc2lnbiB0aGlzIHZhbHVlLgoKdjI6CiAoSm9obiBIYXJyaXNvbikKICAtIENsZWFuIHVwIHNv
bWUgY29tbWVudHMKCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29t
PgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4K
CmRybS9pOTE1L2d1YzogQWRkIGJ5cGFzcyB0YXNrbGV0IHN1Ym1pc3Npb24gcGF0aCB0byBHdUMK
CkFkZCBieXBhc3MgdGFza2xldCBzdWJtaXNzaW9uIHBhdGggdG8gR3VDLiBUaGUgdGFza2xldCBp
cyBvbmx5IHVzZWQgaWYgSDJHCmNoYW5uZWwgaGFzIGJhY2twcmVzdXJlLgoKU2lnbmVkLW9mZi1i
eTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBK
b2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBJ
bXBsZW1lbnQgR3VDIGNvbnRleHQgb3BlcmF0aW9ucyBmb3IgbmV3IGludGVmYWNlCgpJbXBsZW1l
bnQgR3VDIGNvbnRleHQgb3BlcmF0aW9ucyB3aGljaCBpbmNsdWRlcyBHdUMgc3BlY2lmaWMgb3Bl
cmF0aW9ucwphbGxvYywgcGluLCB1bnBpbiwgYW5kIGRlc3Ryb3kuCgp2MjoKIChEYW5pZWwgVmV0
dGVyKQogIC0gVXNlIG1zbGVlcF9pbnRlcnJ1cHRpYmxlIHJhdGhlciB0aGFuIGNvbmRfcmVzY2hl
ZCBpbiBidXN5IGxvb3AKIChNaWNoYWwpCiAgLSBSZW1vdmUgQysrIHN0eWxlIGNvbW1lbnQKClNp
Z25lZC1vZmYtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNp
Z25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJt
L2k5MTUvZ3VjOiBJbnNlcnQgZmVuY2Ugb24gY29udGV4dCB3aGVuIGRlcmVnaXN0ZXJpbmcKClNv
bWV0aW1lIGR1cmluZyBjb250ZXh0IHBpbm5pbmcgYSBjb250ZXh0IHdpdGggdGhlIHNhbWUgZ3Vj
X2lkIGlzCnJlZ2lzdGVyZWQgd2l0aCB0aGUgR3VDLiBJbiB0aGlzIGEgY2FzZSBkZXJlZ2lzdGVy
IG11c3QgYmUgYmVmb3JlIGJlZm9yZQp0aGUgY29udGV4dCBjYW4gYmUgcmVnaXN0ZXJlZC4gQSBm
ZW5jZSBpcyBpbnNlcnRlZCBvbiBhbGwgcmVxdWVzdHMgd2hpbGUKdGhlIGRlcmVnaXN0ZXIgaXMg
aW4gZmxpZ2h0LiBPbmNlIHRoZSBHMkggaXMgcmVjZWl2ZWQgaW5kaWNhdGluZyB0aGUKZGVyZWdp
c3RyYXRpb24gaXMgY29tcGxldGUgdGhlIGNvbnRleHQgaXMgcmVnaXN0ZXJlZCBhbmQgdGhlIGZl
bmNlIGlzCnJlbGVhc2VkLgoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4uYy5oYXJyaXNvbkBpbnRl
bC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwu
Y29tPgoKZHJtL2k5MTUvZ3VjOiBEZWZlciBjb250ZXh0IHVucGluIHVudGlsIHNjaGVkdWxpbmcg
aXMgZGlzYWJsZWQKCldpdGggR3VDIHNjaGVkdWxpbmcsIGl0IGlzbid0IHNhZmUgdG8gdW5waW4g
YSBjb250ZXh0IHdoaWxlIHNjaGVkdWxpbmcKaXMgZW5hYmxlZCBmb3IgdGhhdCBjb250ZXh0IGFz
IHRoZSBHdUMgbWF5IHRvdWNoIHNvbWUgb2YgdGhlIHBpbm5lZApzdGF0ZSAoZS5nLiBMUkMpLiBU
byBlbnN1cmUgc2NoZWR1bGluZyBpc24ndCBlbmFibGVkIHdoZW4gYW4gdW5waW4gaXMKZG9uZSwg
YSBjYWxsIGJhY2sgaXMgYWRkZWQgdG8gaW50ZWxfY29udGV4dF91bnBpbiB3aGVuIHBpbiBjb3Vu
dCA9PSAxCnRvIGRpc2FibGUgc2NoZWR1bGluZyBmb3IgdGhhdCBjb250ZXh0LiBXaGVuIHRoZSBy
ZXNwb25zZSBDVEIgaXMKcmVjZWl2ZWQgaXQgaXMgc2FmZSB0byBkbyB0aGUgZmluYWwgdW5waW4u
CgpGdXR1cmUgcGF0Y2hlcyBtYXkgYWRkIGEgaGV1cmlzdGljIC8gZGVsYXkgdG8gc2NoZWR1bGUg
dGhlIGRpc2FibGUKY2FsbCBiYWNrIHRvIGF2b2lkIHRocmFzaGluZyBvbiBzY2hlZHVsZSBlbmFi
bGUgLyBkaXNhYmxlLgoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5j
b20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29t
PgoKZHJtL2k5MTUvZ3VjOiBEaXNhYmxlIGVuZ2luZSBiYXJyaWVycyB3aXRoIEd1QyBkdXJpbmcg
dW5waW4KCkRpc2FibGUgZW5naW5lIGJhcnJpZXJzIGZvciB1bnBpbm5pbmcgd2l0aCBHdUMuIFRo
aXMgZmVhdHVyZSBpc24ndApuZWVkZWQgd2l0aCB0aGUgR3VDIGFzIGl0IGRpc2FibGVzIGNvbnRl
eHQgc2NoZWR1bGluZyBiZWZvcmUgdW5waW5uaW5nCndoaWNoIGd1YXJhbnRlZXMgdGhlIEhXIHdp
bGwgbm90IHJlZmVyZW5jZSB0aGUgY29udGV4dC4gSGVuY2UgaXQgaXMKbm90IG5lY2Vzc2FyeSB0
byBkZWZlciB1bnBpbm5pbmcgdW50aWwgYSBrZXJuZWwgY29udGV4dCByZXF1ZXN0CmNvbXBsZXRl
cyBvbiBlYWNoIGVuZ2luZSBpbiB0aGUgY29udGV4dCBlbmdpbmUgbWFzay4KCkNjOiBKb2huIEhh
cnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3
IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogRGFuaWVsZSBD
ZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVsLmNvbT4KCmRybS9pOTE1
L2d1YzogRXh0ZW5kIGRlcmVnaXN0cmF0aW9uIGZlbmNlIHRvIHNjaGVkdWxlIGRpc2FibGUKCkV4
dGVuZCB0aGUgZGVyZWdpc3RyYXRpb24gY29udGV4dCBmZW5jZSB0byBmZW5jZSB3aG5lIGEgR3VD
IGNvbnRleHQgaGFzCnNjaGVkdWxpbmcgZGlzYWJsZSBwZW5kaW5nLgoKQ2M6IEpvaG4gSGFycmlz
b24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJv
c3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTU6IERpc2FibGUgcHJlZW1wdCBi
dXN5d2FpdCB3aGVuIHVzaW5nIEd1QyBzY2hlZHVsaW5nCgpEaXNhYmxlIHByZWVtcHQgYnVzeXdh
aXQgd2hlbiB1c2luZyBHdUMgc2NoZWR1bGluZy4gVGhpcyBpc24ndCBuZWVkIGFzCnRoZSBHdUMg
Y29udHJvbCBwcmVlbXB0aW9uIHdoZW4gc2NoZWR1bGluZy4KCkNjOiBKb2huIEhhcnJpc29uIDxq
b2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxt
YXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogRW5zdXJlIHJlcXVlc3Qgb3Jk
ZXJpbmcgdmlhIGNvbXBsZXRpb24gZmVuY2VzCgpJZiB0d28gcmVxdWVzdHMgYXJlIG9uIHRoZSBz
YW1lIHJpbmcsIHRoZXkgYXJlIGV4cGxpY2l0bHkgb3JkZXJlZCBieSB0aGUKSFcuIFNvLCBhIHN1
Ym1pc3Npb24gZmVuY2UgaXMgc3VmZmljaWVudCB0byBlbnN1cmUgb3JkZXJpbmcgd2hlbiB1c2lu
Zwp0aGUgbmV3IEd1QyBzdWJtaXNzaW9uIGludGVyZmFjZS4gQ29udmVyc2VseSwgaWYgdHdvIHJl
cXVlc3RzIHNoYXJlIGEKdGltZWxpbmUgYW5kIGFyZSBvbiB0aGUgc2FtZSBwaHlzaWNhbCBlbmdp
bmUgYnV0IGRpZmZlcmVudCBjb250ZXh0IHRoaXMKZG9lc24ndCBlbnN1cmUgb3JkZXJpbmcgb24g
dGhlIG5ldyBHdUMgc3VibWlzc2lvbiBpbnRlcmZhY2UuIFNvLCBhCmNvbXBsZXRpb24gZmVuY2Ug
bmVlZHMgdG8gYmUgdXNlZCB0byBlbnN1cmUgb3JkZXJpbmcuCgpTaWduZWQtb2ZmLWJ5OiBKb2hu
IEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0
aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogRGlzYWJs
ZSBzZW1hcGhvcmVzIHdoZW4gdXNpbmcgR3VDIHNjaGVkdWxpbmcKClNlbWFwaG9yZXMgYXJlIGFu
IG9wdGltaXphdGlvbiBhbmQgbm90IHJlcXVpcmVkIGZvciBiYXNpYyBHdUMgc3VibWlzc2lvbgp0
byB3b3JrIHByb3Blcmx5LiBEaXNhYmxlIHVudGlsIHdlIGhhdmUgdGltZSB0byBkbyB0aGUgaW1w
bGVtZW50YXRpb24gdG8KZW5hYmxlIHNlbWFwaG9yZXMgYW5kIHR1bmUgdGhlbSBmb3IgcGVyZm9y
bWFuY2UuIEFsc28gbG9uZyBkaXJlY3Rpb24gaXMKanVzdCB0byBkZWxldGUgc2VtYXBob3JlcyBm
cm9tIHRoZSBpOTE1IHNvIGFub3RoZXIgcmVhc29uIHRvIG5vdCBlbmFibGUKdGhlc2UgZm9yIEd1
QyBzdWJtaXNzaW9uLgoKdjI6IFJld29yZCBjb21taXQgbWVzc2FnZQoKQ2M6IEpvaG4gSGFycmlz
b24gPGpvaG4uYy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJv
c3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBFbnN1cmUgRzJIIHJl
c3BvbnNlIGhhcyBzcGFjZSBpbiBidWZmZXIKCkVuc3VyZSBHMkggcmVzcG9uc2UgaGFzIHNwYWNl
IGluIHRoZSBidWZmZXIgYmVmb3JlIHNlbmRpbmcgSDJHIENUQiBhcwp0aGUgR3VDIGNhbid0IGhh
bmRsZSBhbnkgYmFja3ByZXNzdXJlIG9uIHRoZSBHMkggaW50ZXJmYWNlLgoKdjI6CiAoTWF0dGhl
dykKICAtIHMvSU5URUxfR1VDX1NFTkQvSU5URUxfR1VDX0NUX1NFTkQKdjM6CiAoTWF0dGhldykK
ICAtIEFkZCBHMkggY3JlZGl0IGFjY291bnRpbmcgdG8gYmxvY2tpbmcgcGF0aCwgYWRkIGcyaF9y
ZWxlYXNlX3NwYWNlCiAgICBoZWxwZXIKClNpZ25lZC1vZmYtYnk6IEpvaG4gSGFycmlzb24gPEpv
aG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1h
dHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBVcGRhdGUgaW50ZWxfZ3Rfd2Fp
dF9mb3JfaWRsZSB0byB3b3JrIHdpdGggR3VDCgpXaGVuIHJ1bm5pbmcgdGhlIEd1QyB0aGUgR1BV
IGNhbid0IGJlIGNvbnNpZGVyZWQgaWRsZSBpZiB0aGUgR3VDIHN0aWxsCmhhcyBjb250ZXh0cyBw
aW5uZWQuIEFzIHN1Y2gsIGEgY2FsbCBoYXMgYmVlbiBhZGRlZCBpbgppbnRlbF9ndF93YWl0X2Zv
cl9pZGxlIHRvIGlkbGUgdGhlIFVDIGFuZCBpbiB0dXJuIHRoZSBHdUMgYnkgd2FpdGluZyBmb3IK
dGhlIG51bWJlciBvZiB1bnBpbm5lZCBjb250ZXh0cyB0byBnbyB0byB6ZXJvLgoKdjI6IHJ0aW1l
b3V0IC0+IHJlbWFpbmluZ190aW1lb3V0CgpDYzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJp
c29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9z
dEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IFVwZGF0ZSBHdUMgZGVidWdmcyB0byBzdXBwb3J0
IG5ldyBHdUMKClVwZGF0ZSBHdUMgZGVidWdmcyB0byBzdXBwb3J0IHRoZSBuZXcgR3VDIHN0cnVj
dHVyZXMuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50
ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVs
LmNvbT4KCmRybS9pOTE1L2d1YzogQWRkIHNldmVyYWwgcmVxdWVzdCB0cmFjZSBwb2ludHMKCkFk
ZCB0cmFjZSBwb2ludHMgZm9yIHJlcXVlc3QgZGVwZW5kZW5jaWVzIGFuZCBHdUMgc3VibWl0LiBF
eHRlbmRlZApleGlzdGluZyByZXF1ZXN0IHRyYWNlIHBvaW50cyB0byBpbmNsdWRlIHN1Ym1pdCBm
ZW5jZSB2YWx1ZSwsIGd1Y19pZCwKYW5kIHJpbmcgdGFpbCB2YWx1ZS4KCkNjOiBKb2huIEhhcnJp
c29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJy
b3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1OiBBZGQgaW50ZWxfY29udGV4
dCB0cmFjaW5nCgpBZGQgaW50ZWxfY29udGV4dCB0cmFjaW5nLiBUaGVzZSB0cmFjZSBwb2ludHMg
YXJlIHBhcnRpY3VsYXIgaGVscGZ1bAp3aGVuIGRlYnVnZ2luZyB0aGUgR3VDIGZpcm13YXJlIGFu
ZCBjYW4gYmUgZW5hYmxlZCB2aWEKQ09ORklHX0RSTV9JOTE1X0xPV19MRVZFTF9UUkFDRVBPSU5U
UyBrZXJuZWwgY29uZmlnIG9wdGlvbi4KCkNjOiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlz
b25AaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0
QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogR3VDIHZpcnR1YWwgZW5naW5lcwoKSW1wbGVtZW50
IEd1QyB2aXJ0dWFsIGVuZ2luZXMuIFJhdGhlciBzaW1wbGUgaW1wbGVtZW50YXRpb24sIGJhc2lj
YWxseQpqdXN0IGFsbG9jYXRlIGFuIGVuZ2luZSwgc2V0dXAgY29udGV4dCBlbnRlciAvIGV4aXQg
ZnVuY3Rpb24gdG8gdmlydHVhbAplbmdpbmUgc3BlY2lmaWMgZnVuY3Rpb25zLCBzZXQgYWxsIG90
aGVyIHZhcmlhYmxlcyAvIGZ1bmN0aW9ucyB0byBndWMKdmVyc2lvbnMsIGFuZCBzZXQgdGhlIGVu
Z2luZSBtYXNrIHRvIHRoYXQgb2YgYWxsIHRoZSBzaWJsaW5ncy4KCnYyOiBVcGRhdGUgdG8gd29y
ayB3aXRoIHByb3RvLWN0eAoKQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2Vy
YW9sb3NwdXJpb0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRo
ZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTU6IFRyYWNrICdzZXJpYWwnIGNvdW50cyBmb3Ig
dmlydHVhbCBlbmdpbmVzCgpUaGUgc2VyaWFsIG51bWJlciB0cmFja2luZyBvZiBlbmdpbmVzIGhh
cHBlbnMgYXQgdGhlIGJhY2tlbmQgb2YKcmVxdWVzdCBzdWJtaXNzaW9uIGFuZCB3YXMgZXhwZWN0
aW5nIHRvIG9ubHkgYmUgZ2l2ZW4gcGh5c2ljYWwKZW5naW5lcy4gSG93ZXZlciwgaW4gR3VDIHN1
Ym1pc3Npb24gbW9kZSwgdGhlIGRlY29tcG9zaXRpb24gb2YgdmlydHVhbAp0byBwaHlzaWNhbCBl
bmdpbmVzIGRvZXMgbm90IGhhcHBlbiBpbiBpOTE1LiBJbnN0ZWFkLCByZXF1ZXN0cyBhcmUKc3Vi
bWl0dGVkIHRvIHRoZWlyIHZpcnR1YWwgZW5naW5lIG1hc2sgYWxsIHRoZSB3YXkgdGhyb3VnaCB0
byB0aGUKaGFyZHdhcmUgKGkuZS4gdG8gR3VDKS4gVGhpcyB3b3VsZCBtZWFuIHRoYXQgdGhlIGhl
YXJ0IGJlYXQgY29kZQp0aGlua3MgdGhlIHBoeXNpY2FsIGVuZ2luZXMgYXJlIGlkbGUgZHVlIHRv
IHRoZSBzZXJpYWwgbnVtYmVyIG5vdAppbmNyZW1lbnRpbmcuCgpUaGlzIHBhdGNoIHVwZGF0ZXMg
dGhlIHRyYWNraW5nIHRvIGRlY29tcG9zZSB2aXJ0dWFsIGVuZ2luZXMgaW50bwp0aGVpciBwaHlz
aWNhbCBjb25zdGl0dWVudHMgYW5kIHRyYWNrcyB0aGUgcmVxdWVzdCBhZ2FpbnN0IGVhY2guIFRo
aXMKaXMgbm90IGVudGlyZWx5IGFjY3VyYXRlIGFzIHRoZSBHdUMgd2lsbCBvbmx5IGJlIGlzc3Vp
bmcgdGhlIHJlcXVlc3QKdG8gb25lIHBoeXNpY2FsIGVuZ2luZS4gSG93ZXZlciwgaXQgaXMgdGhl
IGJlc3QgdGhhdCBpOTE1IGNhbiBkbyBnaXZlbgp0aGF0IGl0IGhhcyBubyBrbm93bGVkZ2Ugb2Yg
dGhlIEd1QydzIHNjaGVkdWxpbmcgZGVjaXNpb25zLgoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJy
aXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBC
cm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNTogSG9sZCByZWZlcmVuY2Ug
dG8gaW50ZWxfY29udGV4dCBvdmVyIGxpZmUgb2YgaTkxNV9yZXF1ZXN0CgpIb2xkIGEgcmVmZXJl
bmNlIHRvIHRoZSBpbnRlbF9jb250ZXh0IG92ZXIgbGlmZSBvZiBhbiBpOTE1X3JlcXVlc3QuCldp
dGhvdXQgdGhpcyBhbiBpOTE1X3JlcXVlc3QgY2FuIGV4aXN0IGFmdGVyIHRoZSBjb250ZXh0IGhh
cyBiZWVuCmRlc3Ryb3llZCAoZS5nLiByZXF1ZXN0IHJldGlyZWQsIGNvbnRleHQgY2xvc2VkLCBi
dXQgdXNlciBzcGFjZSBob2xkcyBhCnJlZmVyZW5jZSB0byB0aGUgcmVxdWVzdCBmcm9tIGFuIG91
dCBmZW5jZSkuIEluIHRoZSBjYXNlIG9mIEd1QwpzdWJtaXNzaW9uICsgdmlydHVhbCBlbmdpbmUs
IHRoZSBlbmdpbmUgdGhhdCB0aGUgcmVxdWVzdCByZWZlcmVuY2VzIGlzCmFsc28gZGVzdHJveWVk
IHdoaWNoIGNhbiB0cmlnZ2VyIGJhZCBwb2ludGVyIGRyZWYgaW4gZmVuY2Ugb3BzIChlLmcuCmk5
MTVfZmVuY2VfZ2V0X2RyaXZlcl9uYW1lKS4gV2UgY291bGQgbGlrZWx5IGNoYW5nZQppOTE1X2Zl
bmNlX2dldF9kcml2ZXJfbmFtZSB0byBhdm9pZCB0b3VjaGluZyB0aGUgZW5naW5lIGJ1dCBsZXQn
cyBqdXN0CmJlIHNhZmUgYW5kIGhvbGQgdGhlIGludGVsX2NvbnRleHQgcmVmZXJlbmNlLgoKU2ln
bmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0v
aTkxNS9ndWM6IERpc2FibGUgYm9uZGluZyBleHRlbnNpb24gd2l0aCBHdUMgc3VibWlzc2lvbgoK
VXBkYXRlIHRoZSBib25kaW5nIGV4dGVuc2lvbiB0byByZXR1cm4gLUVOT0RFViB3aGVuIHVzaW5n
IEd1QyBzdWJtaXNzaW9uCmFzIHRoaXMgZXh0ZW5zaW9uIGZ1bmRhbWVudGFsbHkgd2lsbCBub3Qg
d29yayB3aXRoIHRoZSBHdUMgc3VibWlzc2lvbgppbnRlcmZhY2UuCgpTaWduZWQtb2ZmLWJ5OiBN
YXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogRGly
ZWN0IGFsbCBicmVhZGNydW1icyBmb3IgYSBjbGFzcyB0byBzaW5nbGUgYnJlYWRjcnVtYnMKCldp
dGggR3VDIHZpcnR1YWwgZW5naW5lcyB0aGUgcGh5c2ljYWwgZW5naW5lIHdoaWNoIGEgcmVxdWVz
dCBleGVjdXRlcwphbmQgY29tcGxldGVzIG9uIGlzbid0IGtub3duIHRvIHRoZSBpOTE1LiBUaGVy
ZWZvcmUgd2UgY2FuJ3QgYXR0YWNoIGEKcmVxdWVzdCB0byBhIHBoeXNpY2FsIGVuZ2luZXMgYnJl
YWRjcnVtYnMuIFRvIHdvcmsgYXJvdW5kIHRoaXMgd2UgY3JlYXRlCmEgc2luZ2xlIGJyZWFkY3J1
bWJzIHBlciBlbmdpbmUgY2xhc3Mgd2hlbiB1c2luZyBHdUMgc3VibWlzc2lvbiBhbmQKZGlyZWN0
IGFsbCBwaHlzaWNhbCBlbmdpbmUgaW50ZXJydXB0cyB0byB0aGlzIGJyZWFkY3J1bWJzLgoKU2ln
bmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+CkNDOiBK
b2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJtL2k5MTU6IEFkZCBp
OTE1X3NjaGVkX2VuZ2luZSBkZXN0cm95IHZmdW5jCgpUaGlzIGhlbHAgdGhlIGJhY2tlbmRzIGNs
ZWFuIHVwIHdoZW4gdGhlIHNjaGVkdWxlIGVuZ2luZSBvYmplY3QgZ2V0cwpkZXN0cm95ZWQuCgpT
aWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRy
bS9pOTE1L2d1YzogUmVzZXQgaW1wbGVtZW50YXRpb24gZm9yIG5ldyBHdUMgaW50ZXJmYWNlCgpS
ZXNldCBpbXBsZW1lbnRhdGlvbiBmb3IgbmV3IEd1QyBpbnRlcmZhY2UuIFRoaXMgaXMgdGhlIGxl
Z2FjeSByZXNldAppbXBsZW1lbnRhdGlvbiB3aGljaCBpcyBjYWxsZWQgd2hlbiB0aGUgaTkxNSBv
d25zIHRoZSBlbmdpbmUgaGFuZyBjaGVjay4KRnV0dXJlIHBhdGNoZXMgd2lsbCBvZmZsb2FkIHRo
ZSBlbmdpbmUgaGFuZyBjaGVjayB0byBHdUMgYnV0IHdlIHdpbGwKY29udGludWUgdG8gbWFpbnRh
aW4gdGhpcyBsZWdhY3kgcGF0aCBhcyBhIGZhbGxiYWNrIGFuZCB0aGlzIGNvZGUgcGF0aAppcyBh
bHNvIHJlcXVpcmVkIGlmIHRoZSBHdUMgZGllcy4KCldpdGggdGhlIG5ldyBHdUMgaW50ZXJmYWNl
IGl0IGlzIG5vdCBwb3NzaWJsZSB0byByZXNldCBpbmRpdmlkdWFsCmVuZ2luZXMgLSBpdCBpcyBv
bmx5IHBvc3NpYmxlIHRvIHJlc2V0IHRoZSBHUFUgZW50aXJlbHkuIFRoaXMgcGF0Y2gKZm9yY2Vz
IGFuIGVudGlyZSBjaGlwIHJlc2V0IGlmIGFueSBlbmdpbmUgaGFuZ3MuCgp2MjoKIChNaWNoYWwp
CiAgLSBDaGVjayBmb3IgLUVQSVBFIHJhdGhlciB0aGFuIC1FSU8gKENUIGRlYWRsb2NrL2NvcnJ1
cHQgY2hlY2spCgpDYzogSm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4K
U2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpk
cm0vaTkxNTogUmVzZXQgR1BVIGltbWVkaWF0ZWx5IGlmIHN1Ym1pc3Npb24gaXMgZGlzYWJsZWQK
CklmIHN1Ym1pc3Npb24gaXMgZGlzYWJsZWQgYnkgdGhlIGJhY2tlbmQgZm9yIGFueSByZWFzb24s
IHJlc2V0IHRoZSBHUFUKaW1tZWRpYXRlbHkgaW4gdGhlIGhlYXJ0YmVhdCBjb2RlIGFzIHRoZSBi
YWNrZW5kIGNhbid0IGJlIHJlZW5hYmxlZAp1bnRpbCB0aGUgR1BVIGlzIHJlc2V0LgoKU2lnbmVk
LW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkx
NS9ndWM6IEFkZCBkaXNhYmxlIGludGVycnVwdHMgdG8gZ3VjIHNhbml0aXplCgpBZGQgZGlzYWJs
ZSBHdUMgaW50ZXJydXB0cyB0byBpbnRlbF9ndWNfc2FuaXRpemUoKS4gUGFydCBvZiB0aGlzCnJl
cXVpcmVzIG1vdmluZyB0aGUgZ3VjXypfaW50ZXJydXB0IHdyYXBwZXIgZnVuY3Rpb24gaW50byBo
ZWFkZXIgZmlsZQppbnRlbF9ndWMuaC4KClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1h
dHRoZXcuYnJvc3RAaW50ZWwuY29tPgpDYzogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVs
ZS5jZXJhb2xvc3B1cmlvQGludGVsLmNvbQoKZHJtL2k5MTUvZ3VjOiBTdXNwZW5kL3Jlc3VtZSBp
bXBsZW1lbnRhdGlvbiBmb3IgbmV3IGludGVyZmFjZQoKVGhlIG5ldyBHdUMgaW50ZXJmYWNlIGlu
dHJvZHVjZXMgYW4gTU1JTyBIMkcgY29tbWFuZCwKSU5URUxfR1VDX0FDVElPTl9SRVNFVF9DTElF
TlQsIHdoaWNoIGlzIHVzZWQgdG8gaW1wbGVtZW50IHN1c3BlbmQuIFRoaXMKTU1JTyB0ZWFycyBk
b3duIGFueSBhY3RpdmUgY29udGV4dHMgZ2VuZXJhdGluZyBhIGNvbnRleHQgcmVzZXQgRzJIIENU
Qgpmb3IgZWFjaC4gT25jZSB0aGF0IHN0ZXAgY29tcGxldGVzIHRoZSBHdUMgdGVhcnMgZG93biB0
aGUgQ1RCCmNoYW5uZWxzLiBJdCBpcyBzYWZlIHRvIHN1c3BlbmQgb25jZSB0aGlzIE1NSU8gSDJH
IGNvbW1hbmQgY29tcGxldGVzCmFuZCBhbGwgRzJIIENUQnMgaGF2ZSBiZWVuIHByb2Nlc3NlZC4g
SW4gcHJhY3RpY2UgdGhlIGk5MTUgd2lsbCBsaWtlbHkKbmV2ZXIgcmVjZWl2ZSBhIEcySCBhcyBz
dXNwZW5kIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBhZnRlciB0aGUgR1BVIGlzCmlkbGUuCgpSZXN1
bWUgaXMgaW1wbGVtZW50ZWQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIGJlZm9yZSAtIHNpbXBseSBy
ZWxvYWQgdGhlCkd1QyBmaXJtd2FyZSBhbmQgcmVpbml0aWFsaXplIGV2ZXJ5dGhpbmcgKGUuZy4g
Q1RCIGNoYW5uZWxzLCBjb250ZXh0cywKZXRjLi4pLgoKQ2M6IEpvaG4gSGFycmlzb24gPGpvaG4u
Yy5oYXJyaXNvbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRo
ZXcuYnJvc3RAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNaWNoYWwgV2FqZGVjemtvIDxtaWNo
YWwud2FqZGVjemtvQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogSGFuZGxlIGNvbnRleHQgcmVz
ZXQgbm90aWZpY2F0aW9uCgpHdUMgd2lsbCBpc3N1ZSBhIHJlc2V0IG9uIGRldGVjdGluZyBhbiBl
bmdpbmUgaGFuZyBhbmQgd2lsbCBub3RpZnkKdGhlIGRyaXZlciB2aWEgYSBHMkggbWVzc2FnZS4g
VGhlIGRyaXZlciB3aWxsIHNlcnZpY2UgdGhlIG5vdGlmaWNhdGlvbgpieSByZXNldHRpbmcgdGhl
IGd1aWx0eSBjb250ZXh0IHRvIGEgc2ltcGxlIHN0YXRlIG9yIGJhbm5pbmcgaXQKY29tcGxldGVs
eS4KCkNjOiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KQ2M6IEpvaG4g
SGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRo
ZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBIYW5kbGUg
ZW5naW5lIHJlc2V0IGZhaWx1cmUgbm90aWZpY2F0aW9uCgpHdUMgd2lsbCBub3RpZnkgdGhlIGRy
aXZlciwgdmlhIEcySCwgaWYgaXQgZmFpbHMgdG8KcmVzZXQgYW4gZW5naW5lLiBXZSByZWNvdmVy
IGJ5IHJlc29ydGluZyB0byBhIGZ1bGwgR1BVCnJlc2V0LgoKU2lnbmVkLW9mZi1ieTogTWF0dGhl
dyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEZlcm5hbmRv
IFBhY2hlY28gPGZlcm5hbmRvLnBhY2hlY29AaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBFbmFi
bGUgdGhlIHRpbWVyIGV4cGlyZWQgaW50ZXJydXB0IGZvciBHdUMKClRoZSBHdUMgY2FuIGltcGxl
bWVudCBleGVjdXRpb24gcXVuYXR1bXMsIGRldGVjdCBodW5nIGNvbnRleHRzIGFuZApvdGhlciBz
dWNoIHRoaW5ncyBidXQgaXQgcmVxdWlyZXMgdGhlIHRpbWVyIGV4cGlyZWQgaW50ZXJydXB0IHRv
IGRvIHNvLgoKU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRl
bC5jb20+CkNDOiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50ZWwuY29tPgoKZHJt
L2k5MTUvZ3VjOiBQcm92aWRlIG1taW8gbGlzdCB0byBiZSBzYXZlZC9yZXN0b3JlZCBvbiBlbmdp
bmUgcmVzZXQKClRoZSBkcml2ZXIgbXVzdCBwcm92aWRlIEd1QyB3aXRoIGEgbGlzdCBvZiBtbWlv
IHJlZ2lzdGVycwp0aGF0IHNob3VsZCBiZSBzYXZlZC9yZXN0b3JlZCBkdXJpbmcgYSBHdUMtYmFz
ZWQgZW5naW5lIHJlc2V0LgpVbmZvcnR1bmF0ZWx5LCB0aGUgbGlzdCBtdXN0IGJlIGR5bmFtaWNh
bGx5IGFsbG9jYXRlZCBhcyBpdHMgc2l6ZSBpcwp2YXJpYWJsZS4gVGhhdCBtZWFucyB0aGUgZHJp
dmVyIG11c3QgZ2VuZXJhdGUgdGhlIGxpc3QgdHdpY2UgLSBvbmNlIHRvCndvcmsgb3V0IHRoZSBz
aXplIGFuZCBhIHNlY29uZCB0aW1lIHRvIGFjdHVhbGx5IHNhdmUgaXQuCgp2MjoKIChBbGFuIC8g
Q0kpCiAgLSBHRU43X0dUX01PREUgLT4gR0VONl9HVF9NT0RFIHRvIGZpeCBXQSBzZWxmdGVzdCBm
YWlsdXJlCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25ASW50
ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBGZXJuYW5kbyBQYWNoZWNvIDxmZXJuYW5kby5wYWNoZWNv
QGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBp
bnRlbC5jb20+CkNjOiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVy
aW9AaW50ZWwuY29tPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNv
bT4KCmRybS9pOTE1L2d1YzogRG9uJ3QgY29tcGxhaW4gYWJvdXQgcmVzZXQgcmFjZXMKCkl0IGlz
IGltcG9zc2libGUgdG8gc2VhbCBhbGwgcmFjZSBjb25kaXRpb25zIG9mIHJlc2V0cyBvY2N1cnJp
bmcKY29uY3VycmVudCB0byBvdGhlciBvcGVyYXRpb25zLiBBdCBsZWFzdCwgbm90IHdpdGhvdXQg
aW50cm9kdWNpbmcKZXhjZXNpdmUgbXV0ZXggbG9ja2luZy4gSW5zdGVhZCwgZG9uJ3QgY29tcGxh
aW4gaWYgaXQgb2NjdXJzLiBJbgpwYXJ0aWN1bGFyLCBkb24ndCBjb21wbGFpbiBpZiB0cnlpbmcg
dG8gc2VuZCBhIEgyRyBkdXJpbmcgYSByZXNldC4KV2hhdGV2ZXIgdGhlIEgyRyB3YXMgYWJvdXQg
c2hvdWxkIGdldCByZWRvbmUgb25jZSB0aGUgcmVzZXQgaXMgb3Zlci4KClNpZ25lZC1vZmYtYnk6
IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogTWF0
dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEVuYWJs
ZSBHdUMgZW5naW5lIHJlc2V0CgpDbGVhciB0aGUgJ2Rpc2FibGUgcmVzZXRzJyBmbGFnIHRvIGFs
bG93IEd1QyB0byByZXNldCBodW5nIGNvbnRleHRzCihkZXRlY3RlZCB2aWEgcHJlLWVtcHRpb24g
dGltZW91dCkuCgpTaWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxKb2huLkMuSGFycmlzb25A
SW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGlu
dGVsLmNvbT4KUmV2aWV3ZWQtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwu
Y29tPgoKZHJtL2k5MTUvZ3VjOiBDYXB0dXJlIGVycm9yIHN0YXRlIG9uIGNvbnRleHQgcmVzZXQK
CldlIHJlY2VpdmUgbm90aWZpY2F0aW9uIG9mIGFuIGVuZ2luZSByZXNldCBmcm9tIEd1QyBhdCBp
dHMKY29tcGxldGlvbi4gTWVhbmluZyBHdUMgaGFzIHBvdGVudGlhbGx5IGNsZWFyZWQgYW55IEhX
IHN0YXRlCndlIG1heSBoYXZlIGJlZW4gaW50ZXJlc3RlZCBpbiBjYXB0dXJpbmcuIEd1QyByZXN1
bWVzIHNjaGVkdWxpbmcKb24gdGhlIGVuZ2luZSBwb3N0LXJlc2V0LCBhcyB0aGUgcmVzZXRzIGFy
ZSBtZWFudCB0byBiZSB0cmFuc3BhcmVudCwKZnVydGhlciBtdWRkbGluZyBvdXIgZXJyb3Igc3Rh
dGUuCgpUaGVyZSBpcyBvbmdvaW5nIHdvcmsgdG8gZGVmaW5lIGFuIEFQSSBmb3IgYSBHdUMgZGVi
dWcgc3RhdGUgZHVtcC4gVGhlCnN1Z2dlc3Rpb24gZm9yIG5vdyBpcyB0byBtYW51YWxseSBkaXNh
YmxlIEZXIGluaXRpYXRlZCByZXNldHMgaW4gY2FzZXMKd2hlcmUgZGVidWcgc3RhdGUgaXMgbmVl
ZGVkLgoKU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5j
b20+Cgpkcm0vaTkxNS9ndWM6IEZpeCBmb3IgZXJyb3IgY2FwdHVyZSBhZnRlciBmdWxsIEdQVSBy
ZXNldCB3aXRoIEd1QwoKSW4gdGhlIGNhc2Ugb2YgYSBmdWxsIEdQVSByZXNldCAoZS5nLiBiZWNh
dXNlIEd1QyBoYXMgZGllZCBvciBiZWNhdXNlCkd1QydzIGhhbmcgZGV0ZWN0aW9uIGhhcyBiZWVu
IGRpc2FibGVkKSwgdGhlIGRyaXZlciBjYW4ndCByZWx5IG9uIEd1QwpyZXBvcnRpbmcgdGhlIGd1
aWx0eSBjb250ZXh0LiBJbnN0ZWFkLCB0aGUgZHJpdmVyIG5lZWRzIHRvIHNjYW4gYWxsCmFjdGl2
ZSBjb250ZXh0cyBhbmQgZmluZCBvbmUgdGhhdCBpcyBjdXJyZW50bHkgZXhlY3V0aW5nLCBhcyBw
ZXIgdGhlCmV4ZWNsaXN0IG1vZGUgYmVoYXZpb3VyLiBJbiBHdUMgbW9kZSwgdGhpcyBzY2FuIGlz
IGRpZmZlcmVudCB0bwpleGVjbGlzdCBtb2RlIGFzIHRoZSBhY3RpdmUgcmVxdWVzdCBsaXN0IGlz
IGhhbmRsZWQgdmVyeSBkaWZmZXJlbnRseS4KClNpbWlsYXJseSwgdGhlIHJlcXVlc3Qgc3RhdGUg
ZHVtcCBpbiBkZWJ1Z2ZzIG5lZWRzIHRvIGJlIGhhbmRsZWQKZGlmZmVyZW50bHkgd2hlbiBpbiBH
dUMgc3VibWlzc2lvbiBtb2RlLgoKQWxzbyByZWZhY3R1cmVkIHNvbWUgb2YgdGhlIHJlcXVlc3Qg
c2Nhbm5pbmcgY29kZSB0byBhdm9pZCBkdXBsaWNhdGlvbgphY3Jvc3MgdGhlIG11bHRpcGxlIGNv
ZGUgcGF0aHMgdGhhdCBhcmUgbm93IHJlcGxpY2F0aW5nIGl0LgoKU2lnbmVkLW9mZi1ieTogSm9o
biBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0
dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEhvb2sg
R3VDIHNjaGVkdWxpbmcgcG9saWNpZXMgdXAKClVzZSB0aGUgb2ZmaWNpYWwgZHJpdmVyIGRlZmF1
bHQgc2NoZWR1bGluZyBwb2xpY2llcyBmb3IgY29uZmlndXJpbmcKdGhlIEd1QyBzY2hlZHVsZXIg
cmF0aGVyIHRoYW4gYSBidW5jaCBvZiBoYXJkY29kZWQgdmFsdWVzLgoKU2lnbmVkLW9mZi1ieTog
Sm9obiBIYXJyaXNvbiA8am9obi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTog
TWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+CkNjOiBKb3NlIFNvdXphIDxq
b3NlLnNvdXphQGludGVsLmNvbT4KCmRybS9pOTE1L2d1YzogQ29ubmVjdCByZXNldCBtb2RwYXJh
bSB1cGRhdGVzIHRvIEd1QyBwb2xpY3kgZmxhZ3MKCkNoYW5naW5nIHRoZSByZXNldCBtb2R1bGUg
cGFyYW1ldGVyIGhhcyBubyBlZmZlY3Qgb24gYSBydW5uaW5nIEd1Qy4KVGhlIGNvcnJlc3BvbmRp
bmcgZW50cnkgaW4gdGhlIEFEUyBtdXN0IGJlIHVwZGF0ZWQgYW5kIHRoZW4gdGhlIEd1QwppbmZv
cm1lZCB2aWEgYSBIb3N0Mkd1QyBtZXNzYWdlLgoKVGhlIG5ldyBkZWJ1Z2ZzIGludGVyZmFjZSB0
byBtb2R1bGUgcGFyYW1ldGVycyBhbGxvd3MgdGhpcyB0byBoYXBwZW4uCkhvd2V2ZXIsIGNvbm5l
Y3RpbmcgdGhlIHBhcmFtZXRlciBkYXRhIGFkZHJlc3MgYmFjayB0byBhbnl0aGluZyB1c2VmdWwK
aXMgbWVzc3kuIE9uZSBvcHRpb24gd291bGQgYmUgdG8gcGFzcyBhIG5ldyBwcml2YXRlIGRhdGEg
c3RydWN0dXJlCmFkZHJlc3MgdGhyb3VnaCBpbnN0ZWFkIG9mIGp1c3QgdGhlIHBhcmFtZXRlciBw
b2ludGVyLiBIb3dldmVyLCB0aGF0Cm1lYW5zIGhhdmluZyBhIG5ldyAoYW5kIGRpZmZlcmVudCkg
ZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggcGFyYW1ldGVyCmFuZCBhIG5ldyAoYW5kIGRpZmZlcmVu
dCkgd3JpdGUgZnVuY3Rpb24gZm9yIGVhY2ggcGFyYW1ldGVyLiBUaGlzCm1ldGhvZCBrZWVwcyBl
dmVyeXRoaW5nIGdlbmVyaWMgYnkgaW5zdGVhZCB1c2luZyBhIHN0cmluZyBsb29rdXAgb24KdGhl
IGRpcmVjdG9yeSBlbnRyeSBuYW1lLgoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8am9o
bi5jLmhhcnJpc29uQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0
dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IEluY2x1ZGUgc2NoZWR1bGluZyBw
b2xpY2llcyBpbiB0aGUgZGVidWdmcyBzdGF0ZSBkdW1wCgpBZGRlZCB0aGUgc2NoZWR1bGluZyBw
b2xpY3kgcGFyYW1ldGVycyB0byB0aGUgJ2d1Y19pbmZvJyBkZWJ1Z2ZzIHN0YXRlCmR1bXAuCgpT
aWduZWQtb2ZmLWJ5OiBKb2huIEhhcnJpc29uIDxqb2huLmMuaGFycmlzb25AaW50ZWwuY29tPgpT
aWduZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KUmV2
aWV3ZWQtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5
MTUvZ3VjOiBBZGQgZ29sZGVuIGNvbnRleHQgdG8gR3VDIEFEUwoKVGhlIG1lZGlhIHdhdGNoZG9n
IG1lY2hhbmlzbSBpbnZvbHZlcyBHdUMgZG9pbmcgYSBzaWxlbnQgcmVzZXQgYW5kCmNvbnRpbnVl
IG9mIHRoZSBodW5nIGNvbnRleHQuIFRoaXMgcmVxdWlyZXMgdGhlIGk5MTUgZHJpdmVyIHByb3Zp
ZGUgYQpnb2xkZW4gY29udGV4dCB0byBHdUMgaW4gdGhlIEFEUy4KClNpZ25lZC1vZmYtYnk6IEpv
aG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1h
dHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgoKZHJtL2k5MTUvZ3VjOiBJbXBs
ZW1lbnQgYmFubmVkIGNvbnRleHRzIGZvciBHdUMgc3VibWlzc2lvbgoKV2hlbiB1c2luZyBHdUMg
c3VibWlzc2lvbiwgaWYgYSBjb250ZXh0IGdldHMgYmFubmVkIGRpc2FibGUgc2NoZWR1bGluZwph
bmQgbWFyayBhbGwgaW5mbGlnaHQgcmVxdWVzdHMgYXMgY29tcGxldGUuCgpDYzogSm9obiBIYXJy
aXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBC
cm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5jb20+Cgpkcm0vaTkxNS9ndWM6IFN1cHBvcnQgcmVx
dWVzdCBjYW5jZWxsYXRpb24KClRoaXMgYWRkcyBHdUMgYmFja2VuZCBzdXBwb3J0IGZvciBpOTE1
X3JlcXVlc3RfY2FuY2VsKCksIHdoaWNoIGluIHR1cm4KbWFrZXMgQ09ORklHX0RSTV9JOTE1X1JF
UVVFU1RfVElNRU9VVCB3b3JrLgoKU2lnbmVkLW9mZi1ieTogTWF0dGhldyBCcm9zdCA8bWF0dGhl
dy5icm9zdEBpbnRlbC5jb20+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50
ZWwuY29tPgoKZHJtL2k5MTUvc2VsZnRlc3Q6IEJldHRlciBlcnJvciByZXBvcnRpbmcgZnJvbSBo
YW5nY2hlY2sgc2VsZnRlc3QKClRoZXJlIGFyZSBtYW55IHdheXMgaW4gd2hpY2ggdGhlIGhhbmdj
aGVjayBzZWxmdGVzdCBjYW4gZmFpbC4gVmVyeSBmZXcKb2YgdGhlbSBhY3R1YWxseSBwcmludGVk
IGFuIGVycm9yIG1lc3NhZ2UgdG8gc2F5IHdoYXQgaGFwcGVuZWQuIFNvLApmaWxsIGluIHRoZSBt
aXNzaW5nIG1lc3NhZ2VzLgoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhh
cnJpc29uQEludGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2Vy
YW9sb3NwdXJpb0BpbnRlbC5jb20+Cgpkcm0vaTkxNS9zZWxmdGVzdDogRml4IHdvcmthcm91bmRz
IHNlbGZ0ZXN0IGZvciBHdUMgc3VibWlzc2lvbgoKV2hlbiBHdUMgc3VibWlzc2lvbiBpcyBlbmFi
bGVkLCB0aGUgR3VDIGNvbnRyb2xzIGVuZ2luZSByZXNldHMuIFJhdGhlcgp0aGFuIGV4cGxpY2l0
bHkgdHJpZ2dlcmluZyBhIHJlc2V0LCB0aGUgZHJpdmVyIG11c3Qgc3VibWl0IGEgaGFuZ2luZwpj
b250ZXh0IHRvIEd1QyBhbmQgd2FpdCBmb3IgdGhlIHJlc2V0IHRvIG9jY3VyLgoKU2lnbmVkLW9m
Zi1ieTogUmFodWwgS3VtYXIgU2luZ2ggPHJhaHVsLmt1bWFyLnNpbmdoQGludGVsLmNvbT4KU2ln
bmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KQ2M6
IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+
CkNjOiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9pOTE1L3Nl
bGZ0ZXN0OiBGaXggTU9DUyBzZWxmdGVzdCBmb3IgR3VDIHN1Ym1pc3Npb24KCldoZW4gR3VDIHN1
Ym1pc3Npb24gaXMgZW5hYmxlZCwgdGhlIEd1QyBjb250cm9scyBlbmdpbmUgcmVzZXRzLiBSYXRo
ZXIKdGhhbiBleHBsaWNpdGx5IHRyaWdnZXJpbmcgYSByZXNldCwgdGhlIGRyaXZlciBtdXN0IHN1
Ym1pdCBhIGhhbmdpbmcKY29udGV4dCB0byBHdUMgYW5kIHdhaXQgZm9yIHRoZSByZXNldCB0byBv
Y2N1ci4KClNpZ25lZC1vZmYtYnk6IFJhaHVsIEt1bWFyIFNpbmdoIDxyYWh1bC5rdW1hci5zaW5n
aEBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNv
bkBJbnRlbC5jb20+CkNjOiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9z
cHVyaW9AaW50ZWwuY29tPgpDYzogTWF0dGhldyBCcm9zdCA8bWF0dGhldy5icm9zdEBpbnRlbC5j
b20+Cgpkcm0vaTkxNS9zZWxmdGVzdDogSW5jcmVhc2Ugc29tZSB0aW1lb3V0cyBpbiBsaXZlX3Jl
cXVlc3RzCgpSZXF1ZXN0cyBtYXkgdGFrZSBzbGlnaHRseSBsb25nZXIgd2l0aCBHdUMgc3VibWlz
c2lvbiwgbGV0J3MgaW5jcmVhc2UKdGhlIHRpbWVvdXRzIGluIGxpdmVfcmVxdWVzdHMuCgpTaWdu
ZWQtb2ZmLWJ5OiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4KCmRybS9p
OTE1L3NlbGZ0ZXN0OiBGaXggaGFuZ2NoZWNrIHNlbGYgdGVzdCBmb3IgR3VDIHN1Ym1pc3Npb24K
CldoZW4gR3VDIHN1Ym1pc3Npb24gaXMgZW5hYmxlZCwgdGhlIEd1QyBjb250cm9scyBlbmdpbmUg
cmVzZXRzLiBSYXRoZXIKdGhhbiBleHBsaWNpdGx5IHRyaWdnZXJpbmcgYSByZXNldCwgdGhlIGRy
aXZlciBtdXN0IHN1Ym1pdCBhIGhhbmdpbmcKY29udGV4dCB0byBHdUMgYW5kIHdhaXQgZm9yIHRo
ZSByZXNldCB0byBvY2N1ci4KCkNvbnZlcnNlbHksIG9uZSBvZiB0aGUgdGVzdHMgc3BlY2lmaWNh
bGx5IHNlbmRzIGhhbmdpbmcgYmF0Y2hlcyB0byB0aGUKZW5naW5lcyBidXQgd2FudHMgdGhlbSB0
byBzaXQgYXJvdW5kIHVudGlsIGEgbWFudWFsIHJlc2V0IG9mIHRoZSBmdWxsCkdUIChpbmNsdWRp
bmcgR3VDIGl0c2VsZikuIFRoYXQgbWVhbnMgZGlzYWJsaW5nIEd1QyBiYXNlZCBlbmdpbmUKcmVz
ZXRzIHRvIHByZXZlbnQgdGhvc2UgZnJvbSBraWxsaW5nIHRoZSBoYW5naW5nIGJhdGNoIHRvbyBz
b29uLiBTbywKYWRkIHN1cHBvcnQgdG8gdGhlIHNjaGVkdWxpbmcgcG9saWN5IGhlbHBlciBmb3Ig
ZGlzYWJsaW5nIHJlc2V0cyBhcwp3ZWxsIGFzIG1ha2luZyB0aGVtIHF1aWNrZXIhCgpJbiBHdUMg
c3VibWlzc2lvbiBtb2RlLCB0aGUgJ2lzIGVuZ2luZSBpZGxlJyB0ZXN0IGJhc2ljYWxseSB0dXJu
cyBpbnRvCidpcyBlbmdpbmUgUE0gd2FrZWxvY2sgaGVsZCcuIEluZGVwZW5kZW50bHksIHRoZXJl
IGlzIGEgaGVhcnRiZWF0CmRpc2FibGUgaGVscGVyIGZ1bmN0aW9uIHRoYXQgdGhlIHRlc3RzIHVz
ZS4gRm9yIHVuZXhwbGFpbmVkIHJlYXNvbnMsCnRoaXMgYWNxdWlyZXMgdGhlIGVuZ2luZSB3YWtl
bG9jayBiZWZvcmUgZGlzYWJsaW5nIHRoZSBoZWFydGJlYXQgYW5kCm9ubHkgcmVsZWFzZXMgaXQg
d2hlbiByZS1lbmFibGluZyB0aGUgaGVhcnRiZWF0LiBBcyBvbmUgb2YgdGhlIHRlc3RzCnRyaWVz
IHRvIGRvIGEgd2FpdCBmb3IgaWRsZSBpbiB0aGUgbWlkZGxlIG9mIGEgaGVhcnRiZWF0IGRpc2Fi
bGVkCnNlY3Rpb24sIGl0IGlzIHRoZXJlZm9yZSBndWFyYW50ZWVkIHRvIGFsd2F5cyBmYWlsLiBB
ZGRlZCBhICdub19wbScKdmFyaWFudCBvZiB0aGUgaGVhcnRiZWF0IGhlbHBlciB0aGF0IGFsbG93
cyB0aGUgZW5naW5lIHRvIGJlIGFzbGVlcAp3aGlsZSBhbHNvIGhhdmluZyBoZWFydGJlYXRzIGRp
c2FibGVkLgoKU2lnbmVkLW9mZi1ieTogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQElu
dGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJp
b0BpbnRlbC5jb20+CkNjOiBNYXR0aGV3IEJyb3N0IDxtYXR0aGV3LmJyb3N0QGludGVsLmNvbT4K
CmRybS9pOTE1L3NlbGZ0ZXN0OiBCdW1wIHNlbGZ0ZXN0IHRpbWVvdXRzIGZvciBoYW5nY2hlY2sK
ClNvbWUgdGVzdGluZyBlbnZpcm9ubWVudHMgYW5kIHNvbWUgaGVhdmllciB0ZXN0cyBhcmUgc2xv
d2VyIHRoYW4KcHJldmlvdXMgbGltaXRzIGFsbG93ZWQgZm9yLiBGb3IgZXhhbXBsZSwgaXQgY2Fu
IHRha2UgbXVsdGlwbGUgc2Vjb25kcwpmb3IgdGhlICdjb250ZXh0IGhhcyBiZWVuIHJlc2V0JyBu
b3RpZmljYXRpb24gaGFuZGxlciB0byByZWFjaCB0aGUKJ2tpbGwgdGhlIHJlcXVlc3RzJyBjb2Rl
IGluIHRoZSAnYWN0aXZlJyB2ZXJzaW9uIG9mIHRoZSAncmVzZXQKZW5naW5lcycgdGVzdC4gRHVy
aW5nIHdoaWNoIHRpbWUgdGhlIHNlbGZ0ZXN0IGdldHMgYm9yZWQsIGdpdmVzIHVwCndhaXRpbmcg
YW5kIGZhaWxzIHRoZSB0ZXN0LgoKVGhlcmUgaXMgYWxzbyBhbiBhc3luYyB0aHJlYWQgdGhhdCB0
aGUgc2VsZnRlc3QgdXNlcyB0byBwdW1wIHdvcmsKdGhyb3VnaCB0aGUgaGFyZHdhcmUgaW4gcGFy
YWxsZWwgdG8gdGhlIGNvbnRleHQgdGhhdCBpcyBtYXJrZWQgZm9yCnJlc2V0LiBUaGF0IGFsc28g
Y291bGQgZ2V0IGJvcmVkIHdhaXRpbmcgZm9yIGNvbXBsZXRpb25zIGFuZCBraWxsIHRoZQp0ZXN0
IG9mZi4KCkxhc3RseSwgdGhlIGZsdXNoIGF0IHRoZSBvZiB2YXJpb3VzIHRlc3Qgc2VjdGlvbnMg
Y2FuIGFsc28gc2VlCnRpbWVvdXRzIGR1ZSB0byB0aGUgbGFyZ2UgYW1vdW50IG9mIHdvcmsgYmFj
a2VkIHVwLiBUaGlzIGlzIGFsc28gdHJ1ZQpvZiB0aGUgbGl2ZV9od3NwX3JlYWQgdGVzdC4KClNp
Z25lZC1vZmYtYnk6IEpvaG4gSGFycmlzb24gPEpvaG4uQy5IYXJyaXNvbkBJbnRlbC5jb20+CkNj
OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29t
PgoKZHJtL2k5MTUvZ3VjOiBVbmJsb2NrIEd1QyBzdWJtaXNzaW9uIG9uIEdlbjExKwoKVW5ibG9j
ayBHdUMgc3VibWlzc2lvbiBvbiBHZW4xMSsgcGxhdGZvcm1zLgoKU2lnbmVkLW9mZi1ieTogTWlj
aGFsIFdhamRlY3prbyA8bWljaGFsLndhamRlY3prb0BpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+
ClNpZ25lZC1vZmYtYnk6IE1hdHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgot
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlICAgICAgICAgICAgICAgICB8ICAgIDEg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYyAgIHwgICAyMSAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaCAgIHwgICAgMSAr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jICAgICAgfCAgICAzICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9nZW44X2VuZ2luZV9jcy5jICAgICAgfCAgICA2ICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jICAgfCAgIDQxICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5oICAgfCAgIDE0ICst
CiAuLi4vZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzX3R5cGVzLmggfCAgICA3ICsK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYyAgICAgICB8ICAgNTAgKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaCAgICAgICB8ICAgNTAgKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaCB8ICAgNTQgKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggICAgICAgIHwgICA1NCArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAgIHwgIDE4MiArLQog
Li4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmMgIHwgICA3MSArLQog
Li4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmggIHwgICAgNCArCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCAgfCAgIDEyICstCiAu
Li4vZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uYyAgfCAgIDk1ICstCiAu
Li4vZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uaCAgfCAgICA0IC0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMgICAgICAgICAgICB8ICAgMjEgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaCAgICAgICAgICAgIHwgICAgMiArCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jICAgICAgICAgfCAgICA2ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0cy5jICAgfCAgIDIzICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0cy5oICAgfCAgICA5ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmNfcmVnLmggICAgICAgfCAgICAxIC0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgICAgICAgICB8ICAgNTAgKy0KIC4uLi9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9uLmMgICB8ICAgNDggKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcnBzLmMgICAgICAgICAgIHwgICAgNCArCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kcy5jICAgfCAgIDQ2ICstCiAuLi4vZ3B1
L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzX3R5cGVzLmggfCAgICAxICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMgICAgICAgICB8ICAgNDEgKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyAgICB8ICAgMTAgKwogLi4uL2RybS9p
OTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9oZWFydGJlYXQuYyAgIHwgICAyMiArCiAuLi4vZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5oICAgfCAgICAyICsKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2V4ZWNsaXN0cy5jICB8ICAgMTIgKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2hhbmdjaGVjay5jICB8ICAzMTQgKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X21vY3MuYyAgICAgICB8ICAgNTAgKy0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3Qvc2VsZnRlc3Rfd29ya2Fyb3VuZHMuYyAgICB8ICAxMzIgKy0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3QvdWMvYWJpL2d1Y19hY3Rpb25zX2FiaS5oICB8ICAgMTUgKwogLi4uL2d0L3VjL2Fi
aS9ndWNfY29tbXVuaWNhdGlvbl9jdGJfYWJpLmggICAgIHwgICAgMyArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmMgICAgICAgIHwgICA4MiArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmggICAgICAgIHwgIDEwOCArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Fkcy5jICAgIHwgIDQ2MCArKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19hZHMuaCAgICB8ICAgIDMgKwogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmMgICAgIHwgIDM2OCArKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19jdC5oICAgICB8ICAgMjggKy0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2RlYnVnZnMuYyAgICB8ICAgMjUgKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmggICB8ICAgODggKy0KIC4uLi9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYyB8IDI1MjcgKysrKysrKysrKysrKysr
LS0KIC4uLi9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCB8ICAgMTcg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmMgICAgICAgICB8ICAxMDIg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmggICAgICAgICB8ICAgMTEg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICAgICAgIHwgICAgMiAr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnNfcGFyYW1zLmMgICAgfCAgIDMxICsK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V2aWN0LmMgICAgICAgICB8ICAgIDEgKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyAgICAgICAgIHwgICAyNSArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCAgICAgICAgICAgICAgIHwgICAgMiArCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYyAgICAgICAgICAgfCAgMTY4ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCAgICAgICAgICAgfCAgIDIxICsKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgICAgICAgICB8ICAgIDkgKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmggICAgICAgICB8ICAgMTAgKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyX3R5cGVzLmggICB8ICAgMTAgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV90cmFjZS5oICAgICAgICAgICAgIHwgIDIwNyArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfcmVxdWVzdC5jIHwgICAgNCArLQogLi4u
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYyAgIHwgICAgMiArLQogLi4u
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2xpdmVfdGVzdC5jICAgIHwgICAgMiArLQogLi4u
L2k5MTUvc2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmMgIHwgICA4OSArCiAuLi4v
aTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBlcnMuaCAgfCAgIDM1ICsKIC4uLi9n
cHUvZHJtL2k5MTUvc2VsZnRlc3RzL21vY2tfZ2VtX2RldmljZS5jICB8ICAgIDMgKy0KIDY4IGZp
bGVzIGNoYW5nZWQsIDUwNDggaW5zZXJ0aW9ucygrKSwgODc0IGRlbGV0aW9ucygtKQogY3JlYXRl
IG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVs
ZXJfaGVscGVycy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvc2Vs
ZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9NYWtlZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCmluZGV4
IDEwYjNiYjYyMDdiYS4uYWI3Njc5OTU3NjIzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9NYWtlZmlsZQorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQpAQCAtMjgw
LDYgKzI4MCw3IEBAIGk5MTUtJChDT05GSUdfRFJNX0k5MTVfQ0FQVFVSRV9FUlJPUikgKz0gaTkx
NV9ncHVfZXJyb3IubwogaTkxNS0kKENPTkZJR19EUk1fSTkxNV9TRUxGVEVTVCkgKz0gXAogCWdl
bS9zZWxmdGVzdHMvaTkxNV9nZW1fY2xpZW50X2JsdC5vIFwKIAlnZW0vc2VsZnRlc3RzL2lndF9n
ZW1fdXRpbHMubyBcCisJc2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLm8gXAogCXNl
bGZ0ZXN0cy9pOTE1X3JhbmRvbS5vIFwKIAlzZWxmdGVzdHMvaTkxNV9zZWxmdGVzdC5vIFwKIAlz
ZWxmdGVzdHMvaWd0X2F0b21pYy5vIFwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9n
ZW1fY29udGV4dC5jCmluZGV4IDdkNmY1MmQ4YTgwMS4uZDg3YTRjNmRhNWJjIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTc0LDcgKzc0LDYgQEAK
ICNpbmNsdWRlICJndC9pbnRlbF9jb250ZXh0X3BhcmFtLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxf
ZW5naW5lX2hlYXJ0YmVhdC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV91c2VyLmgiCi0j
aW5jbHVkZSAiZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uaCIgLyogdmlydHVhbF9lbmdp
bmUgKi8KICNpbmNsdWRlICJndC9pbnRlbF9ncHVfY29tbWFuZHMuaCIKICNpbmNsdWRlICJndC9p
bnRlbF9yaW5nLmgiCiAKQEAgLTM2Myw5ICszNjIsNiBAQCBzZXRfcHJvdG9fY3R4X2VuZ2luZXNf
YmFsYW5jZShzdHJ1Y3QgaTkxNV91c2VyX2V4dGVuc2lvbiBfX3VzZXIgKmJhc2UsCiAJaWYgKCFI
QVNfRVhFQ0xJU1RTKGk5MTUpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAotCWlmIChpbnRlbF91Y191
c2VzX2d1Y19zdWJtaXNzaW9uKCZpOTE1LT5ndC51YykpCi0JCXJldHVybiAtRU5PREVWOyAvKiBu
b3QgaW1wbGVtZW50IHlldCAqLwotCiAJaWYgKGdldF91c2VyKGlkeCwgJmV4dC0+ZW5naW5lX2lu
ZGV4KSkKIAkJcmV0dXJuIC1FRkFVTFQ7CiAKQEAgLTQ5NSw2ICs0OTEsMTEgQEAgc2V0X3Byb3Rv
X2N0eF9lbmdpbmVzX2JvbmQoc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gX191c2VyICpiYXNl
LCB2b2lkICpkYXRhKQogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAKKwlpZiAoaW50ZWxfZW5naW5l
X3VzZXNfZ3VjKG1hc3RlcikpIHsKKwkJRFJNX0RFQlVHKCJib25kaW5nIGV4dGVuc2lvbiBub3Qg
c3VwcG9ydGVkIHdpdGggR3VDIHN1Ym1pc3Npb24iKTsKKwkJcmV0dXJuIC1FTk9ERVY7CisJfQor
CiAJaWYgKGdldF91c2VyKG51bV9ib25kcywgJmV4dC0+bnVtX2JvbmRzKSkKIAkJcmV0dXJuIC1F
RkFVTFQ7CiAKQEAgLTc5OSw3ICs4MDAsOCBAQCBzdGF0aWMgaW50IGludGVsX2NvbnRleHRfc2V0
X2dlbShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJfQogCiAJaWYgKGN0eC0+c2NoZWQucHJp
b3JpdHkgPj0gSTkxNV9QUklPUklUWV9OT1JNQUwgJiYKLQkgICAgaW50ZWxfZW5naW5lX2hhc190
aW1lc2xpY2VzKGNlLT5lbmdpbmUpKQorCSAgICBpbnRlbF9lbmdpbmVfaGFzX3RpbWVzbGljZXMo
Y2UtPmVuZ2luZSkgJiYKKwkgICAgaW50ZWxfZW5naW5lX2hhc19zZW1hcGhvcmVzKGNlLT5lbmdp
bmUpKQogCQlfX3NldF9iaXQoQ09OVEVYVF9VU0VfU0VNQVBIT1JFUywgJmNlLT5mbGFncyk7CiAK
IAlpZiAoSVNfQUNUSVZFKENPTkZJR19EUk1fSTkxNV9SRVFVRVNUX1RJTUVPVVQpICYmCkBAIC05
NDksOCArOTUxLDggQEAgc3RhdGljIHN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICp1c2VyX2VuZ2lu
ZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKIAkJCWJyZWFrOwogCiAJCWNhc2UgSTkx
NV9HRU1fRU5HSU5FX1RZUEVfQkFMQU5DRUQ6Ci0JCQljZSA9IGludGVsX2V4ZWNsaXN0c19jcmVh
dGVfdmlydHVhbChwZVtuXS5zaWJsaW5ncywKLQkJCQkJCQkgICAgcGVbbl0ubnVtX3NpYmxpbmdz
KTsKKwkJCWNlID0gaW50ZWxfZW5naW5lX2NyZWF0ZV92aXJ0dWFsKHBlW25dLnNpYmxpbmdzLAor
CQkJCQkJCSBwZVtuXS5udW1fc2libGluZ3MpOwogCQkJYnJlYWs7CiAKIAkJY2FzZSBJOTE1X0dF
TV9FTkdJTkVfVFlQRV9JTlZBTElEOgpAQCAtMTA4Miw3ICsxMDg0LDcgQEAgc3RhdGljIHZvaWQg
a2lsbF9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICplbmdpbmVzLCBib29sIGJhbikK
IAlmb3JfZWFjaF9nZW1fZW5naW5lKGNlLCBlbmdpbmVzLCBpdCkgewogCQlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CiAKLQkJaWYgKGJhbiAmJiBpbnRlbF9jb250ZXh0X3NldF9iYW5u
ZWQoY2UpKQorCQlpZiAoYmFuICYmIGludGVsX2NvbnRleHRfYmFuKGNlLCBOVUxMKSkKIAkJCWNv
bnRpbnVlOwogCiAJCS8qCkBAIC0xNzc4LDcgKzE3ODAsOCBAQCBzdGF0aWMgdm9pZCBfX2FwcGx5
X3ByaW9yaXR5KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgdm9pZCAqYXJnKQogCWlmICghaW50
ZWxfZW5naW5lX2hhc190aW1lc2xpY2VzKGNlLT5lbmdpbmUpKQogCQlyZXR1cm47CiAKLQlpZiAo
Y3R4LT5zY2hlZC5wcmlvcml0eSA+PSBJOTE1X1BSSU9SSVRZX05PUk1BTCkKKwlpZiAoY3R4LT5z
Y2hlZC5wcmlvcml0eSA+PSBJOTE1X1BSSU9SSVRZX05PUk1BTCAmJgorCSAgICBpbnRlbF9lbmdp
bmVfaGFzX3NlbWFwaG9yZXMoY2UtPmVuZ2luZSkpCiAJCWludGVsX2NvbnRleHRfc2V0X3VzZV9z
ZW1hcGhvcmVzKGNlKTsKIAllbHNlCiAJCWludGVsX2NvbnRleHRfY2xlYXJfdXNlX3NlbWFwaG9y
ZXMoY2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2Nv
bnRleHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgKaW5k
ZXggMjA0MTFkYjg0OTE0Li4yNjM5YzcxOWE3YTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2NvbnRleHQuaApAQCAtMTAsNiArMTAsNyBAQAogI2luY2x1ZGUgImk5MTVf
Z2VtX2NvbnRleHRfdHlwZXMuaCIKIAogI2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKKyNp
bmNsdWRlICJndC9pbnRlbF9lbmdpbmUuaCIKIAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5j
bHVkZSAiaTkxNV9nZW0uaCIKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5j
CmluZGV4IGE5MGY3OTZlODVjMC4uNmZmZmQ0ZDM3N2MyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9tbWFuLmMKQEAgLTY0NSw3ICs2NDUsOCBAQCBtbWFwX29mZnNldF9hdHRh
Y2goc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJZ290byBpbnNlcnQ7CiAKIAkv
KiBBdHRlbXB0IHRvIHJlYXAgc29tZSBtbWFwIHNwYWNlIGZyb20gZGVhZCBvYmplY3RzICovCi0J
ZXJyID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoJmk5MTUtPmd0LCBNQVhfU0NI
RURVTEVfVElNRU9VVCk7CisJZXJyID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQo
Jmk5MTUtPmd0LCBNQVhfU0NIRURVTEVfVElNRU9VVCwKKwkJCQkJICAgICAgIE5VTEwpOwogCWlm
IChlcnIpCiAJCWdvdG8gZXJyOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9nZW44X2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvZ2VuOF9lbmdpbmVf
Y3MuYwppbmRleCA4N2IwNjU3MmZkMmUuLmY3YWFlNTAyZWMzZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvZ2VuOF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9nZW44X2VuZ2luZV9jcy5jCkBAIC01MDYsNyArNTA2LDggQEAgZ2VuOF9lbWl0X2Zp
bmlfYnJlYWRjcnVtYl90YWlsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB1MzIgKmNzKQogCSpj
cysrID0gTUlfVVNFUl9JTlRFUlJVUFQ7CiAKIAkqY3MrKyA9IE1JX0FSQl9PTl9PRkYgfCBNSV9B
UkJfRU5BQkxFOwotCWlmIChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMocnEtPmVuZ2luZSkp
CisJaWYgKGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3JlcyhycS0+ZW5naW5lKSAmJgorCSAgICAh
aW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnEtPmVuZ2luZS0+Z3QtPnVjKSkKIAkJY3Mg
PSBlbWl0X3ByZWVtcHRfYnVzeXdhaXQocnEsIGNzKTsKIAogCXJxLT50YWlsID0gaW50ZWxfcmlu
Z19vZmZzZXQocnEsIGNzKTsKQEAgLTU5OCw3ICs1OTksOCBAQCBnZW4xMl9lbWl0X2ZpbmlfYnJl
YWRjcnVtYl90YWlsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB1MzIgKmNzKQogCSpjcysrID0g
TUlfVVNFUl9JTlRFUlJVUFQ7CiAKIAkqY3MrKyA9IE1JX0FSQl9PTl9PRkYgfCBNSV9BUkJfRU5B
QkxFOwotCWlmIChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMocnEtPmVuZ2luZSkpCisJaWYg
KGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3JlcyhycS0+ZW5naW5lKSAmJgorCSAgICAhaW50ZWxf
dWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnEtPmVuZ2luZS0+Z3QtPnVjKSkKIAkJY3MgPSBnZW4x
Ml9lbWl0X3ByZWVtcHRfYnVzeXdhaXQocnEsIGNzKTsKIAogCXJxLT50YWlsID0gaW50ZWxfcmlu
Z19vZmZzZXQocnEsIGNzKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2JyZWFkY3J1bWJzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNy
dW1icy5jCmluZGV4IDM4Y2M0Mjc4M2RmYi4uMjAwN2RjNmY2Yjk5IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMKQEAgLTE1LDI4ICsxNSwxNCBAQAogI2lu
Y2x1ZGUgImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVzdHMuaCIKIAot
c3RhdGljIGJvb2wgaXJxX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitz
dGF0aWMgYm9vbCBpcnFfZW5hYmxlKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKIHsKLQlp
ZiAoIWVuZ2luZS0+aXJxX2VuYWJsZSkKLQkJcmV0dXJuIGZhbHNlOwotCi0JLyogQ2FsbGVyIGRp
c2FibGVzIGludGVycnVwdHMgKi8KLQlzcGluX2xvY2soJmVuZ2luZS0+Z3QtPmlycV9sb2NrKTsK
LQllbmdpbmUtPmlycV9lbmFibGUoZW5naW5lKTsKLQlzcGluX3VubG9jaygmZW5naW5lLT5ndC0+
aXJxX2xvY2spOwotCi0JcmV0dXJuIHRydWU7CisJcmV0dXJuIGludGVsX2VuZ2luZV9pcnFfZW5h
YmxlKGItPmlycV9lbmdpbmUpOwogfQogCi1zdGF0aWMgdm9pZCBpcnFfZGlzYWJsZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitzdGF0aWMgdm9pZCBpcnFfZGlzYWJsZShzdHJ1Y3Qg
aW50ZWxfYnJlYWRjcnVtYnMgKmIpCiB7Ci0JaWYgKCFlbmdpbmUtPmlycV9kaXNhYmxlKQotCQly
ZXR1cm47Ci0KLQkvKiBDYWxsZXIgZGlzYWJsZXMgaW50ZXJydXB0cyAqLwotCXNwaW5fbG9jaygm
ZW5naW5lLT5ndC0+aXJxX2xvY2spOwotCWVuZ2luZS0+aXJxX2Rpc2FibGUoZW5naW5lKTsKLQlz
cGluX3VubG9jaygmZW5naW5lLT5ndC0+aXJxX2xvY2spOworCWludGVsX2VuZ2luZV9pcnFfZGlz
YWJsZShiLT5pcnFfZW5naW5lKTsKIH0KIAogc3RhdGljIHZvaWQgX19pbnRlbF9icmVhZGNydW1i
c19hcm1faXJxKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYikKQEAgLTU3LDcgKzQzLDcgQEAg
c3RhdGljIHZvaWQgX19pbnRlbF9icmVhZGNydW1ic19hcm1faXJxKHN0cnVjdCBpbnRlbF9icmVh
ZGNydW1icyAqYikKIAlXUklURV9PTkNFKGItPmlycV9hcm1lZCwgdHJ1ZSk7CiAKIAkvKiBSZXF1
ZXN0cyBtYXkgaGF2ZSBjb21wbGV0ZWQgYmVmb3JlIHdlIGNvdWxkIGVuYWJsZSB0aGUgaW50ZXJy
dXB0LiAqLwotCWlmICghYi0+aXJxX2VuYWJsZWQrKyAmJiBpcnFfZW5hYmxlKGItPmlycV9lbmdp
bmUpKQorCWlmICghYi0+aXJxX2VuYWJsZWQrKyAmJiBiLT5pcnFfZW5hYmxlKGIpKQogCQlpcnFf
d29ya19xdWV1ZSgmYi0+aXJxX3dvcmspOwogfQogCkBAIC03Niw3ICs2Miw3IEBAIHN0YXRpYyB2
b2lkIF9faW50ZWxfYnJlYWRjcnVtYnNfZGlzYXJtX2lycShzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVt
YnMgKmIpCiB7CiAJR0VNX0JVR19PTighYi0+aXJxX2VuYWJsZWQpOwogCWlmICghLS1iLT5pcnFf
ZW5hYmxlZCkKLQkJaXJxX2Rpc2FibGUoYi0+aXJxX2VuZ2luZSk7CisJCWItPmlycV9kaXNhYmxl
KGIpOwogCiAJV1JJVEVfT05DRShiLT5pcnFfYXJtZWQsIGZhbHNlKTsKIAlpbnRlbF9ndF9wbV9w
dXRfYXN5bmMoYi0+aXJxX2VuZ2luZS0+Z3QpOwpAQCAtMjgxLDcgKzI2Nyw3IEBAIGludGVsX2Jy
ZWFkY3J1bWJzX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICppcnFfZW5naW5lKQogCWlm
ICghYikKIAkJcmV0dXJuIE5VTEw7CiAKLQliLT5pcnFfZW5naW5lID0gaXJxX2VuZ2luZTsKKwlr
cmVmX2luaXQoJmItPnJlZik7CiAKIAlzcGluX2xvY2tfaW5pdCgmYi0+c2lnbmFsZXJzX2xvY2sp
OwogCUlOSVRfTElTVF9IRUFEKCZiLT5zaWduYWxlcnMpOwpAQCAtMjkwLDYgKzI3NiwxMCBAQCBp
bnRlbF9icmVhZGNydW1ic19jcmVhdGUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqaXJxX2VuZ2lu
ZSkKIAlzcGluX2xvY2tfaW5pdCgmYi0+aXJxX2xvY2spOwogCWluaXRfaXJxX3dvcmsoJmItPmly
cV93b3JrLCBzaWduYWxfaXJxX3dvcmspOwogCisJYi0+aXJxX2VuZ2luZSA9IGlycV9lbmdpbmU7
CisJYi0+aXJxX2VuYWJsZSA9IGlycV9lbmFibGU7CisJYi0+aXJxX2Rpc2FibGUgPSBpcnFfZGlz
YWJsZTsKKwogCXJldHVybiBiOwogfQogCkBAIC0zMDMsOSArMjkzLDkgQEAgdm9pZCBpbnRlbF9i
cmVhZGNydW1ic19yZXNldChzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpCiAJc3Bpbl9sb2Nr
X2lycXNhdmUoJmItPmlycV9sb2NrLCBmbGFncyk7CiAKIAlpZiAoYi0+aXJxX2VuYWJsZWQpCi0J
CWlycV9lbmFibGUoYi0+aXJxX2VuZ2luZSk7CisJCWItPmlycV9lbmFibGUoYik7CiAJZWxzZQot
CQlpcnFfZGlzYWJsZShiLT5pcnFfZW5naW5lKTsKKwkJYi0+aXJxX2Rpc2FibGUoYik7CiAKIAlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZiLT5pcnFfbG9jaywgZmxhZ3MpOwogfQpAQCAtMzI1LDEx
ICszMTUsMTQgQEAgdm9pZCBfX2ludGVsX2JyZWFkY3J1bWJzX3Bhcmsoc3RydWN0IGludGVsX2Jy
ZWFkY3J1bWJzICpiKQogCX0KIH0KIAotdm9pZCBpbnRlbF9icmVhZGNydW1ic19mcmVlKHN0cnVj
dCBpbnRlbF9icmVhZGNydW1icyAqYikKK3ZvaWQgaW50ZWxfYnJlYWRjcnVtYnNfZnJlZShzdHJ1
Y3Qga3JlZiAqa3JlZikKIHsKKwlzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIgPSBjb250YWlu
ZXJfb2Yoa3JlZiwgdHlwZW9mKCpiKSwgcmVmKTsKKwogCWlycV93b3JrX3N5bmMoJmItPmlycV93
b3JrKTsKIAlHRU1fQlVHX09OKCFsaXN0X2VtcHR5KCZiLT5zaWduYWxlcnMpKTsKIAlHRU1fQlVH
X09OKGItPmlycV9hcm1lZCk7CisKIAlrZnJlZShiKTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmgKaW5kZXggM2NlNWNlMjcwYjA0Li43MjEwNWI3NDY2
M2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJz
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaApAQCAt
MTcsNyArMTcsNyBAQCBzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnM7CiAKIHN0cnVjdCBpbnRlbF9i
cmVhZGNydW1icyAqCiBpbnRlbF9icmVhZGNydW1ic19jcmVhdGUoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqaXJxX2VuZ2luZSk7Ci12b2lkIGludGVsX2JyZWFkY3J1bWJzX2ZyZWUoc3RydWN0IGlu
dGVsX2JyZWFkY3J1bWJzICpiKTsKK3ZvaWQgaW50ZWxfYnJlYWRjcnVtYnNfZnJlZShzdHJ1Y3Qg
a3JlZiAqa3JlZik7CiAKIHZvaWQgaW50ZWxfYnJlYWRjcnVtYnNfcmVzZXQoc3RydWN0IGludGVs
X2JyZWFkY3J1bWJzICpiKTsKIHZvaWQgX19pbnRlbF9icmVhZGNydW1ic19wYXJrKHN0cnVjdCBp
bnRlbF9icmVhZGNydW1icyAqYik7CkBAIC00OCw0ICs0OCwxNiBAQCB2b2lkIGk5MTVfcmVxdWVz
dF9jYW5jZWxfYnJlYWRjcnVtYihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KTsKIHZvaWQg
aW50ZWxfY29udGV4dF9yZW1vdmVfYnJlYWRjcnVtYnMoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
LAogCQkJCSAgICAgIHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYik7CiAKK3N0YXRpYyBpbmxp
bmUgc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICoKK2ludGVsX2JyZWFkY3J1bWJzX2dldChzdHJ1
Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpCit7CisJa3JlZl9nZXQoJmItPnJlZik7CisJcmV0dXJu
IGI7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9icmVhZGNydW1ic19wdXQoc3RydWN0
IGludGVsX2JyZWFkY3J1bWJzICpiKQoreworCWtyZWZfcHV0KCZiLT5yZWYsIGludGVsX2JyZWFk
Y3J1bWJzX2ZyZWUpOworfQorCiAjZW5kaWYgLyogX19JTlRFTF9CUkVBRENSVU1CU19fICovCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1ic190eXBl
cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMuaApp
bmRleCAzYTA4NGNlOGZmNWUuLmE0ZTE0NjY4NGJlOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1ic190eXBlcy5oCkBAIC03LDEwICs3LDEzIEBACiAj
ZGVmaW5lIF9fSU5URUxfQlJFQURDUlVNQlNfVFlQRVNfXwogCiAjaW5jbHVkZSA8bGludXgvaXJx
X3dvcmsuaD4KKyNpbmNsdWRlIDxsaW51eC9rcmVmLmg+CiAjaW5jbHVkZSA8bGludXgvbGlzdC5o
PgogI2luY2x1ZGUgPGxpbnV4L3NwaW5sb2NrLmg+CiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4K
IAordHlwZWRlZiB1OCBpbnRlbF9lbmdpbmVfbWFza190OworCiAvKgogICogUmF0aGVyIHRoYW4g
aGF2ZSBldmVyeSBjbGllbnQgd2FpdCB1cG9uIGFsbCB1c2VyIGludGVycnVwdHMsCiAgKiB3aXRo
IHRoZSBoZXJkIHdha2luZyBhZnRlciBldmVyeSBpbnRlcnJ1cHQgYW5kIGVhY2ggZG9pbmcgdGhl
CkBAIC0yOSw2ICszMiw3IEBACiAgKiB0aGUgb3ZlcmhlYWQgb2Ygd2FraW5nIHRoYXQgY2xpZW50
IGlzIG11Y2ggcHJlZmVycmVkLgogICovCiBzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgeworCXN0
cnVjdCBrcmVmIHJlZjsKIAlhdG9taWNfdCBhY3RpdmU7CiAKIAlzcGlubG9ja190IHNpZ25hbGVy
c19sb2NrOyAvKiBwcm90ZWN0cyB0aGUgbGlzdCBvZiBzaWduYWxlcnMgKi8KQEAgLTQyLDcgKzQ2
LDEwIEBAIHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyB7CiAJYm9vbCBpcnFfYXJtZWQ7CiAKIAkv
KiBOb3QgYWxsIGJyZWFkY3J1bWJzIGFyZSBhdHRhY2hlZCB0byBwaHlzaWNhbCBIVyAqLworCWlu
dGVsX2VuZ2luZV9tYXNrX3QJZW5naW5lX21hc2s7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
aXJxX2VuZ2luZTsKKwlib29sCSgqaXJxX2VuYWJsZSkoc3RydWN0IGludGVsX2JyZWFkY3J1bWJz
ICpiKTsKKwl2b2lkCSgqaXJxX2Rpc2FibGUpKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYik7
CiB9OwogCiAjZW5kaWYgLyogX19JTlRFTF9CUkVBRENSVU1CU19UWVBFU19fICovCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKaW5kZXggYmQ2MzgxM2M4YTgwLi5iMWUzZDAw
ZmIxZjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKQEAgLTgsNiAr
OCw3IEBACiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfZ2xvYmFscy5o
IgorI2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKIAogI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIK
ICNpbmNsdWRlICJpbnRlbF9lbmdpbmUuaCIKQEAgLTI4LDYgKzI5LDcgQEAgc3RhdGljIHZvaWQg
cmN1X2NvbnRleHRfZnJlZShzdHJ1Y3QgcmN1X2hlYWQgKnJjdSkKIHsKIAlzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UgPSBjb250YWluZXJfb2YocmN1LCB0eXBlb2YoKmNlKSwgcmN1KTsKIAorCXRy
YWNlX2ludGVsX2NvbnRleHRfZnJlZShjZSk7CiAJa21lbV9jYWNoZV9mcmVlKGdsb2JhbC5zbGFi
X2NlLCBjZSk7CiB9CiAKQEAgLTQ2LDYgKzQ4LDcgQEAgaW50ZWxfY29udGV4dF9jcmVhdGUoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsK
IAogCWludGVsX2NvbnRleHRfaW5pdChjZSwgZW5naW5lKTsKKwl0cmFjZV9pbnRlbF9jb250ZXh0
X2NyZWF0ZShjZSk7CiAJcmV0dXJuIGNlOwogfQogCkBAIC04MCw3ICs4Myw3IEBAIHN0YXRpYyBp
bnQgaW50ZWxfY29udGV4dF9hY3RpdmVfYWNxdWlyZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
CiAKIAlfX2k5MTVfYWN0aXZlX2FjcXVpcmUoJmNlLT5hY3RpdmUpOwogCi0JaWYgKGludGVsX2Nv
bnRleHRfaXNfYmFycmllcihjZSkpCisJaWYgKGludGVsX2NvbnRleHRfaXNfYmFycmllcihjZSkg
fHwgaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGNlLT5lbmdpbmUpKQogCQlyZXR1cm4gMDsKIAogCS8q
IFByZWFsbG9jYXRlIHRyYWNraW5nIG5vZGVzICovCkBAIC0yNjgsNiArMjcxLDggQEAgaW50IF9f
aW50ZWxfY29udGV4dF9kb19waW5fd3coc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCiAJR0VN
X0JVR19PTighaW50ZWxfY29udGV4dF9pc19waW5uZWQoY2UpKTsgLyogbm8gb3ZlcmZsb3chICov
CiAKKwl0cmFjZV9pbnRlbF9jb250ZXh0X2RvX3BpbihjZSk7CisKIGVycl91bmxvY2s6CiAJbXV0
ZXhfdW5sb2NrKCZjZS0+cGluX211dGV4KTsKIGVycl9wb3N0X3VucGluOgpAQCAtMzA2LDkgKzMx
MSw5IEBAIGludCBfX2ludGVsX2NvbnRleHRfZG9fcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKIAlyZXR1cm4gZXJyOwogfQogCi12b2lkIGludGVsX2NvbnRleHRfdW5waW4oc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKQordm9pZCBfX2ludGVsX2NvbnRleHRfZG9fdW5waW4oc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlLCBpbnQgc3ViKQogewotCWlmICghYXRvbWljX2RlY19hbmRfdGVzdCgm
Y2UtPnBpbl9jb3VudCkpCisJaWYgKCFhdG9taWNfc3ViX2FuZF90ZXN0KHN1YiwgJmNlLT5waW5f
Y291bnQpKQogCQlyZXR1cm47CiAKIAlDRV9UUkFDRShjZSwgInVucGluXG4iKTsKQEAgLTMyMyw2
ICszMjgsNyBAQCB2b2lkIGludGVsX2NvbnRleHRfdW5waW4oc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQogCSAqLwogCWludGVsX2NvbnRleHRfZ2V0KGNlKTsKIAlpbnRlbF9jb250ZXh0X2FjdGl2
ZV9yZWxlYXNlKGNlKTsKKwl0cmFjZV9pbnRlbF9jb250ZXh0X2RvX3VucGluKGNlKTsKIAlpbnRl
bF9jb250ZXh0X3B1dChjZSk7CiB9CiAKQEAgLTM2MCw2ICszNjYsMTIgQEAgc3RhdGljIGludCBf
X2ludGVsX2NvbnRleHRfYWN0aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqYWN0aXZlKQogCXJldHVy
biAwOwogfQogCitzdGF0aWMgaW50IHN3X2ZlbmNlX2R1bW15X25vdGlmeShzdHJ1Y3QgaTkxNV9z
d19mZW5jZSAqc2YsCisJCQkJIGVudW0gaTkxNV9zd19mZW5jZV9ub3RpZnkgc3RhdGUpCit7CisJ
cmV0dXJuIE5PVElGWV9ET05FOworfQorCiB2b2lkCiBpbnRlbF9jb250ZXh0X2luaXQoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CkBA
IC0zODQsNiArMzk2LDE4IEBAIGludGVsX2NvbnRleHRfaW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UsIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCW11dGV4X2luaXQoJmNl
LT5waW5fbXV0ZXgpOwogCisJc3Bpbl9sb2NrX2luaXQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisJ
SU5JVF9MSVNUX0hFQUQoJmNlLT5ndWNfc3RhdGUuZmVuY2VzKTsKKworCXNwaW5fbG9ja19pbml0
KCZjZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlJTklUX0xJU1RfSEVBRCgmY2UtPmd1Y19hY3RpdmUu
cmVxdWVzdHMpOworCisJY2UtPmd1Y19pZCA9IEdVQ19JTlZBTElEX0xSQ19JRDsKKwlJTklUX0xJ
U1RfSEVBRCgmY2UtPmd1Y19pZF9saW5rKTsKKworCWk5MTVfc3dfZmVuY2VfaW5pdCgmY2UtPmd1
Y19ibG9ja2VkLCBzd19mZW5jZV9kdW1teV9ub3RpZnkpOworCWk5MTVfc3dfZmVuY2VfY29tbWl0
KCZjZS0+Z3VjX2Jsb2NrZWQpOworCiAJaTkxNV9hY3RpdmVfaW5pdCgmY2UtPmFjdGl2ZSwKIAkJ
CSBfX2ludGVsX2NvbnRleHRfYWN0aXZlLCBfX2ludGVsX2NvbnRleHRfcmV0aXJlLCAwKTsKIH0K
QEAgLTUwMCw2ICs1MjQsMjYgQEAgc3RydWN0IGk5MTVfcmVxdWVzdCAqaW50ZWxfY29udGV4dF9j
cmVhdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJuIHJxOwogfQog
CitzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICppbnRlbF9jb250ZXh0X2ZpbmRfYWN0aXZlX3JlcXVlc3Qo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAq
YWN0aXZlID0gTlVMTDsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJR0VNX0JVR19PTighaW50
ZWxfZW5naW5lX3VzZXNfZ3VjKGNlLT5lbmdpbmUpKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZj
ZS0+Z3VjX2FjdGl2ZS5sb2NrLCBmbGFncyk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9yZXZlcnNl
KHJxLCAmY2UtPmd1Y19hY3RpdmUucmVxdWVzdHMsCisJCQkJICAgIHNjaGVkLmxpbmspIHsKKwkJ
aWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQorCQkJYnJlYWs7CisKKwkJYWN0aXZlID0g
cnE7CisJfQorCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfYWN0aXZlLmxvY2ssIGZs
YWdzKTsKKworCXJldHVybiBhY3RpdmU7Cit9CisKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1f
STkxNV9TRUxGVEVTVCkKICNpbmNsdWRlICJzZWxmdGVzdF9jb250ZXh0LmMiCiAjZW5kaWYKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAppbmRleCBiMTBjYmU4ZmVlOTkuLjg3
NmJkYjA4MzAzYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29u
dGV4dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaApAQCAt
MTYsNiArMTYsNyBAQAogI2luY2x1ZGUgImludGVsX2VuZ2luZV90eXBlcy5oIgogI2luY2x1ZGUg
ImludGVsX3JpbmdfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgor
I2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKIAogI2RlZmluZSBDRV9UUkFDRShjZSwgZm10LCAuLi4p
IGRvIHsJCQkJCVwKIAljb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2VfXyA9IChjZSk7CQkJ
XApAQCAtNjksNiArNzAsMTMgQEAgaW50ZWxfY29udGV4dF9pc19waW5uZWQoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQogCXJldHVybiBhdG9taWNfcmVhZCgmY2UtPnBpbl9jb3VudCk7CiB9CiAK
K3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9jb250ZXh0X2NhbmNlbF9yZXF1ZXN0KHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSwKKwkJCQkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCUdF
TV9CVUdfT04oIWNlLT5vcHMtPmNhbmNlbF9yZXF1ZXN0KTsKKwlyZXR1cm4gY2UtPm9wcy0+Y2Fu
Y2VsX3JlcXVlc3QoY2UsIHJxKTsKK30KKwogLyoqCiAgKiBpbnRlbF9jb250ZXh0X3VubG9ja19w
aW5uZWQgLSBSZWxlYXNlcyB0aGUgZWFybGllciBsb2NraW5nIG9mICdwaW5uZWQnIHN0YXR1cwog
ICogQGNlIC0gdGhlIGNvbnRleHQKQEAgLTExMyw3ICsxMjEsMzIgQEAgc3RhdGljIGlubGluZSB2
b2lkIF9faW50ZWxfY29udGV4dF9waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCWF0b21p
Y19pbmMoJmNlLT5waW5fY291bnQpOwogfQogCi12b2lkIGludGVsX2NvbnRleHRfdW5waW4oc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlKTsKK3ZvaWQgX19pbnRlbF9jb250ZXh0X2RvX3VucGluKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgaW50IHN1Yik7CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBp
bnRlbF9jb250ZXh0X3NjaGVkX2Rpc2FibGVfdW5waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworCV9faW50ZWxfY29udGV4dF9kb191bnBpbihjZSwgMik7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBpbnRlbF9jb250ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sK
KwlpZiAoIWNlLT5vcHMtPnNjaGVkX2Rpc2FibGUpIHsKKwkJX19pbnRlbF9jb250ZXh0X2RvX3Vu
cGluKGNlLCAxKTsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBNb3ZlIG93bmVyc2hpcCBvZiB0aGlz
IHBpbiB0byB0aGUgc2NoZWR1bGluZyBkaXNhYmxlIHdoaWNoIGlzCisJCSAqIGFuIGFzeW5jIG9w
ZXJhdGlvbi4gV2hlbiB0aGF0IG9wZXJhdGlvbiBjb21wbGV0ZXMgdGhlIGFib3ZlCisJCSAqIGlu
dGVsX2NvbnRleHRfc2NoZWRfZGlzYWJsZV91bnBpbiBpcyBjYWxsZWQgcG90ZW50aWFsbHkKKwkJ
ICogdW5waW5uaW5nIHRoZSBjb250ZXh0LgorCQkgKi8KKwkJd2hpbGUgKCFhdG9taWNfYWRkX3Vu
bGVzcygmY2UtPnBpbl9jb3VudCwgLTEsIDEpKSB7CisJCQlpZiAoYXRvbWljX2NtcHhjaGcoJmNl
LT5waW5fY291bnQsIDEsIDIpID09IDEpIHsKKwkJCQljZS0+b3BzLT5zY2hlZF9kaXNhYmxlKGNl
KTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0KK30KIAogdm9pZCBpbnRlbF9jb250ZXh0X2Vu
dGVyX2VuZ2luZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogdm9pZCBpbnRlbF9jb250ZXh0
X2V4aXRfZW5naW5lKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CkBAIC0xNzUsNiArMjA4LDkg
QEAgaW50IGludGVsX2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UsCiAKIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmludGVsX2NvbnRleHRfY3JlYXRl
X3JlcXVlc3Qoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKTsKIAorc3RydWN0IGk5MTVfcmVxdWVz
dCAqCitpbnRlbF9jb250ZXh0X2ZpbmRfYWN0aXZlX3JlcXVlc3Qoc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlKTsKKwogc3RhdGljIGlubGluZSBib29sIGludGVsX2NvbnRleHRfaXNfYmFycmllcihj
b25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJcmV0dXJuIHRlc3RfYml0KENPTlRF
WFRfQkFSUklFUl9CSVQsICZjZS0+ZmxhZ3MpOwpAQCAtMjE1LDYgKzI1MSwxOCBAQCBzdGF0aWMg
aW5saW5lIGJvb2wgaW50ZWxfY29udGV4dF9zZXRfYmFubmVkKHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSkKIAlyZXR1cm4gdGVzdF9hbmRfc2V0X2JpdChDT05URVhUX0JBTk5FRCwgJmNlLT5mbGFn
cyk7CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF9jb250ZXh0X2JhbihzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCisJCQkJICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwli
b29sIHJldCA9IGludGVsX2NvbnRleHRfc2V0X2Jhbm5lZChjZSk7CisKKwl0cmFjZV9pbnRlbF9j
b250ZXh0X2JhbihjZSk7CisJaWYgKGNlLT5vcHMtPmJhbikKKwkJY2UtPm9wcy0+YmFuKGNlLCBy
cSk7CisKKwlyZXR1cm4gcmV0OworfQorCiBzdGF0aWMgaW5saW5lIGJvb2wKIGludGVsX2NvbnRl
eHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24oY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQogewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90
eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90eXBlcy5oCmlu
ZGV4IDkwMDI2YzE3NzEwNS4uMDA1YTY0ZjJhZmE3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfY29udGV4dF90eXBlcy5oCkBAIC0xMyw2ICsxMyw3IEBACiAjaW5jbHVkZSA8
bGludXgvdHlwZXMuaD4KIAogI2luY2x1ZGUgImk5MTVfYWN0aXZlX3R5cGVzLmgiCisjaW5jbHVk
ZSAiaTkxNV9zd19mZW5jZS5oIgogI2luY2x1ZGUgImk5MTVfdXRpbHMuaCIKICNpbmNsdWRlICJp
bnRlbF9lbmdpbmVfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9zc2V1LmgiCkBAIC0zNSwxNiAr
MzYsMjkgQEAgc3RydWN0IGludGVsX2NvbnRleHRfb3BzIHsKIAogCWludCAoKmFsbG9jKShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogCisJdm9pZCAoKmJhbikoc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7CisKIAlpbnQgKCpwcmVfcGluKShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpOTE1X2dlbV93d19jdHggKnd3LCB2b2lkICoq
dmFkZHIpOwogCWludCAoKnBpbikoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB2b2lkICp2YWRk
cik7CiAJdm9pZCAoKnVucGluKShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogCXZvaWQgKCpw
b3N0X3VucGluKShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogCisJdm9pZCAoKmNhbmNlbF9y
ZXF1ZXN0KShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkgICAgICAgc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEpOworCiAJdm9pZCAoKmVudGVyKShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
OwogCXZvaWQgKCpleGl0KShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogCisJdm9pZCAoKnNj
aGVkX2Rpc2FibGUpKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CisKIAl2b2lkICgqcmVzZXQp
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiAJdm9pZCAoKmRlc3Ryb3kpKHN0cnVjdCBrcmVm
ICprcmVmKTsKKworCS8qIHZpcnR1YWwgZW5naW5lL2NvbnRleHQgaW50ZXJmYWNlICovCisJc3Ry
dWN0IGludGVsX2NvbnRleHQgKigqY3JlYXRlX3ZpcnR1YWwpKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKiplbmdpbmUsCisJCQkJCQl1bnNpZ25lZCBpbnQgY291bnQpOworCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKigqZ2V0X3NpYmxpbmcpKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwK
KwkJCQkJICAgICAgIHVuc2lnbmVkIGludCBzaWJsaW5nKTsKIH07CiAKIHN0cnVjdCBpbnRlbF9j
b250ZXh0IHsKQEAgLTk2LDYgKzExMCw3IEBAIHN0cnVjdCBpbnRlbF9jb250ZXh0IHsKICNkZWZp
bmUgQ09OVEVYVF9CQU5ORUQJCQk2CiAjZGVmaW5lIENPTlRFWFRfRk9SQ0VfU0lOR0xFX1NVQk1J
U1NJT04JNwogI2RlZmluZSBDT05URVhUX05PUFJFRU1QVAkJOAorI2RlZmluZSBDT05URVhUX0xS
Q0FfRElSVFkJCTkKIAogCXN0cnVjdCB7CiAJCXU2NCB0aW1lb3V0X3VzOwpAQCAtMTM3LDYgKzE1
Miw0NSBAQCBzdHJ1Y3QgaW50ZWxfY29udGV4dCB7CiAJc3RydWN0IGludGVsX3NzZXUgc3NldTsK
IAogCXU4IHdhX2JiX3BhZ2U7IC8qIGlmIHNldCwgcGFnZSBudW0gcmVzZXJ2ZWQgZm9yIGNvbnRl
eHQgd29ya2Fyb3VuZHMgKi8KKworCXN0cnVjdCB7CisJCS8qKiBsb2NrOiBwcm90ZWN0cyBldmVy
eXRoaW5nIGluIGd1Y19zdGF0ZSAqLworCQlzcGlubG9ja190IGxvY2s7CisJCS8qKgorCQkgKiBz
Y2hlZF9zdGF0ZTogc2NoZWR1bGluZyBzdGF0ZSBvZiB0aGlzIGNvbnRleHQgdXNpbmcgR3VDCisJ
CSAqIHN1Ym1pc3Npb24KKwkJICovCisJCXU4IHNjaGVkX3N0YXRlOworCQkvKgorCQkgKiBmZW5j
ZXM6IG1haW50YWlucyBvZiBsaXN0IG9mIHJlcXVlc3RzIHRoYXQgaGF2ZSBhIHN1Ym1pdAorCQkg
KiBmZW5jZSByZWxhdGVkIHRvIEd1QyBzdWJtaXNzaW9uCisJCSAqLworCQlzdHJ1Y3QgbGlzdF9o
ZWFkIGZlbmNlczsKKwl9IGd1Y19zdGF0ZTsKKworCXN0cnVjdCB7CisJCS8qKiBsb2NrOiBwcm90
ZWN0cyBldmVyeXRoaW5nIGluIGd1Y19hY3RpdmUgKi8KKwkJc3BpbmxvY2tfdCBsb2NrOworCQkv
KiogcmVxdWVzdHM6IGFjdGl2ZSByZXF1ZXN0cyBvbiB0aGlzIGNvbnRleHQgKi8KKwkJc3RydWN0
IGxpc3RfaGVhZCByZXF1ZXN0czsKKwl9IGd1Y19hY3RpdmU7CisKKwkvKiBHdUMgc2NoZWR1bGlu
ZyBzdGF0ZSBmbGFncyB0aGF0IGRvIG5vdCByZXF1aXJlIGEgbG9jay4gKi8KKwlhdG9taWNfdCBn
dWNfc2NoZWRfc3RhdGVfbm9fbG9jazsKKworCS8qIEd1QyBMUkMgZGVzY3JpcHRvciBJRCAqLwor
CXUxNiBndWNfaWQ7CisKKwkvKiBHdUMgTFJDIGRlc2NyaXB0b3IgcmVmZXJlbmNlIGNvdW50ICov
CisJYXRvbWljX3QgZ3VjX2lkX3JlZjsKKworCS8qCisJICogR3VDIElEIGxpbmsgLSBpbiBsaXN0
IHdoZW4gdW5waW5uZWQgYnV0IGd1Y19pZCBzdGlsbCB2YWxpZCBpbiBHdUMKKwkgKi8KKwlzdHJ1
Y3QgbGlzdF9oZWFkIGd1Y19pZF9saW5rOworCisJLyogR3VDIGNvbnRleHQgYmxvY2tlZCBmZW5j
ZSAqLworCXN0cnVjdCBpOTE1X3N3X2ZlbmNlIGd1Y19ibG9ja2VkOwogfTsKIAogI2VuZGlmIC8q
IF9fSU5URUxfQ09OVEVYVF9UWVBFU19fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZS5oCmluZGV4IGY5MTFjMTIyNGFiMi4uMjMxMGNjZGE4MDU4IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmUuaApAQCAtMjEyLDYgKzIxMiw5IEBAIHZvaWQgaW50ZWxfZW5n
aW5lX2dldF9pbnN0ZG9uZShjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAK
IHZvaWQgaW50ZWxfZW5naW5lX2luaXRfZXhlY2xpc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSk7CiAKK2Jvb2wgaW50ZWxfZW5naW5lX2lycV9lbmFibGUoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKTsKK3ZvaWQgaW50ZWxfZW5naW5lX2lycV9kaXNhYmxlKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CisKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2ludGVsX2Vu
Z2luZV9yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJCWJvb2wgc3Rh
bGxlZCkKIHsKQEAgLTIzNywxMiArMjQwLDE1IEBAIF9fcHJpbnRmKDMsIDQpCiB2b2lkIGludGVs
X2VuZ2luZV9kdW1wKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJICAgICAgIHN0
cnVjdCBkcm1fcHJpbnRlciAqbSwKIAkJICAgICAgIGNvbnN0IGNoYXIgKmhlYWRlciwgLi4uKTsK
K3ZvaWQgaW50ZWxfZW5naW5lX2R1bXBfYWN0aXZlX3JlcXVlc3RzKHN0cnVjdCBsaXN0X2hlYWQg
KnJlcXVlc3RzLAorCQkJCSAgICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpodW5nX3JxLAorCQkJ
CSAgICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0pOwogCiBrdGltZV90IGludGVsX2VuZ2luZV9n
ZXRfYnVzeV90aW1lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCQkgICBrdGlt
ZV90ICpub3cpOwogCiBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKLWludGVsX2VuZ2luZV9maW5kX2Fj
dGl2ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CitpbnRlbF9lbmdp
bmVfZXhlY2xpc3RfZmluZF9odW5nX3JlcXVlc3Qoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKTsKIAogdTMyIGludGVsX2VuZ2luZV9jb250ZXh0X3NpemUoc3RydWN0IGludGVsX2d0ICpn
dCwgdTggY2xhc3MpOwogc3RydWN0IGludGVsX2NvbnRleHQgKgpAQCAtMjczLDEzICsyNzksNTcg
QEAgaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0X3Jlc2V0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0aW9uKGVuZ2lu
ZSk7CiB9CiAKK3N0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2VuZ2luZV9jcmVhdGVfdmly
dHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCisJCQkgICAgdW5zaWduZWQg
aW50IGNvdW50KTsKKworc3RhdGljIGlubGluZSBib29sCitpbnRlbF92aXJ0dWFsX2VuZ2luZV9o
YXNfaGVhcnRiZWF0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlp
ZiAoaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2luZSkpCisJCXJldHVybiBpbnRlbF9ndWNfdmly
dHVhbF9lbmdpbmVfaGFzX2hlYXJ0YmVhdChlbmdpbmUpOworCWVsc2UKKwkJR0VNX0JVR19PTigi
T25seSBzaG91bGQgYmUgY2FsbGVkIGluIEd1QyBzdWJtaXNzaW9uIik7CisKKwlyZXR1cm4gZmFs
c2U7Cit9CisKIHN0YXRpYyBpbmxpbmUgYm9vbAogaW50ZWxfZW5naW5lX2hhc19oZWFydGJlYXQo
Y29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCWlmICghSVNfQUNUSVZF
KENPTkZJR19EUk1fSTkxNV9IRUFSVEJFQVRfSU5URVJWQUwpKQogCQlyZXR1cm4gZmFsc2U7CiAK
LQlyZXR1cm4gUkVBRF9PTkNFKGVuZ2luZS0+cHJvcHMuaGVhcnRiZWF0X2ludGVydmFsX21zKTsK
KwlpZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5lKSkKKwkJcmV0dXJuIGludGVsX3Zp
cnR1YWxfZW5naW5lX2hhc19oZWFydGJlYXQoZW5naW5lKTsKKwllbHNlCisJCXJldHVybiBSRUFE
X09OQ0UoZW5naW5lLT5wcm9wcy5oZWFydGJlYXRfaW50ZXJ2YWxfbXMpOworfQorCitzdGF0aWMg
aW5saW5lIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKgoraW50ZWxfZW5naW5lX2dldF9zaWJsaW5n
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgdW5zaWduZWQgaW50IHNpYmxpbmcpCit7
CisJR0VNX0JVR19PTighaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5lKSk7CisJcmV0dXJu
IGVuZ2luZS0+Y29wcy0+Z2V0X3NpYmxpbmcoZW5naW5lLCBzaWJsaW5nKTsKK30KKworc3RhdGlj
IGlubGluZSB2b2lkCitpbnRlbF9lbmdpbmVfc2V0X2h1bmdfY29udGV4dChzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUsCisJCQkgICAgICBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
CisJZW5naW5lLT5odW5nX2NlID0gY2U7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAoraW50ZWxf
ZW5naW5lX2NsZWFyX2h1bmdfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
Cit7CisJaW50ZWxfZW5naW5lX3NldF9odW5nX2NvbnRleHQoZW5naW5lLCBOVUxMKTsKK30KKwor
c3RhdGljIGlubGluZSBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9lbmdpbmVfZ2V0X2h1
bmdfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJcmV0dXJuIGVu
Z2luZS0+aHVuZ19jZTsKIH0KIAogI2VuZGlmIC8qIF9JTlRFTF9SSU5HQlVGRkVSX0hfICovCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IGQ1NjE1NzNlZDk4
Yy4uNTFhMGQ4NjBkNTUxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
Y3MuYwpAQCAtNzM5LDcgKzczOSw3IEBAIHN0YXRpYyBpbnQgZW5naW5lX3NldHVwX2NvbW1vbihz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiBlcnJfY21kX3BhcnNlcjoKIAlpOTE1X3Nj
aGVkX2VuZ2luZV9wdXQoZW5naW5lLT5zY2hlZF9lbmdpbmUpOwogZXJyX3NjaGVkX2VuZ2luZToK
LQlpbnRlbF9icmVhZGNydW1ic19mcmVlKGVuZ2luZS0+YnJlYWRjcnVtYnMpOworCWludGVsX2Jy
ZWFkY3J1bWJzX3B1dChlbmdpbmUtPmJyZWFkY3J1bWJzKTsKIGVycl9zdGF0dXM6CiAJY2xlYW51
cF9zdGF0dXNfcGFnZShlbmdpbmUpOwogCXJldHVybiBlcnI7CkBAIC05NDgsNyArOTQ4LDcgQEAg
dm9pZCBpbnRlbF9lbmdpbmVfY2xlYW51cF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCUdFTV9CVUdfT04oIWxpc3RfZW1wdHkoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5y
ZXF1ZXN0cykpOwogCiAJaTkxNV9zY2hlZF9lbmdpbmVfcHV0KGVuZ2luZS0+c2NoZWRfZW5naW5l
KTsKLQlpbnRlbF9icmVhZGNydW1ic19mcmVlKGVuZ2luZS0+YnJlYWRjcnVtYnMpOworCWludGVs
X2JyZWFkY3J1bWJzX3B1dChlbmdpbmUtPmJyZWFkY3J1bWJzKTsKIAogCWludGVsX2VuZ2luZV9m
aW5pX3JldGlyZShlbmdpbmUpOwogCWludGVsX2VuZ2luZV9jbGVhbnVwX2NtZF9wYXJzZXIoZW5n
aW5lKTsKQEAgLTEyNjUsNiArMTI2NSwzMCBAQCBib29sIGludGVsX2VuZ2luZXNfYXJlX2lkbGUo
c3RydWN0IGludGVsX2d0ICpndCkKIAlyZXR1cm4gdHJ1ZTsKIH0KIAorYm9vbCBpbnRlbF9lbmdp
bmVfaXJxX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJaWYgKCFl
bmdpbmUtPmlycV9lbmFibGUpCisJCXJldHVybiBmYWxzZTsKKworCS8qIENhbGxlciBkaXNhYmxl
cyBpbnRlcnJ1cHRzICovCisJc3Bpbl9sb2NrKCZlbmdpbmUtPmd0LT5pcnFfbG9jayk7CisJZW5n
aW5lLT5pcnFfZW5hYmxlKGVuZ2luZSk7CisJc3Bpbl91bmxvY2soJmVuZ2luZS0+Z3QtPmlycV9s
b2NrKTsKKworCXJldHVybiB0cnVlOworfQorCit2b2lkIGludGVsX2VuZ2luZV9pcnFfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJaWYgKCFlbmdpbmUtPmlycV9k
aXNhYmxlKQorCQlyZXR1cm47CisKKwkvKiBDYWxsZXIgZGlzYWJsZXMgaW50ZXJydXB0cyAqLwor
CXNwaW5fbG9jaygmZW5naW5lLT5ndC0+aXJxX2xvY2spOworCWVuZ2luZS0+aXJxX2Rpc2FibGUo
ZW5naW5lKTsKKwlzcGluX3VubG9jaygmZW5naW5lLT5ndC0+aXJxX2xvY2spOworfQorCiB2b2lk
IGludGVsX2VuZ2luZXNfcmVzZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF9ndCAq
Z3QpCiB7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwpAQCAtMTYwMSw2ICsxNjI1
LDk3IEBAIHN0YXRpYyB2b2lkIHByaW50X3Byb3BlcnRpZXMoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLAogCQkJICAgcmVhZF91bCgmZW5naW5lLT5kZWZhdWx0cywgcC0+b2Zmc2V0KSk7
CiB9CiAKK3N0YXRpYyB2b2lkIGVuZ2luZV9kdW1wX3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEsIHN0cnVjdCBkcm1fcHJpbnRlciAqbSwgY29uc3QgY2hhciAqbXNnKQoreworCXN0cnVj
dCBpbnRlbF90aW1lbGluZSAqdGwgPSBnZXRfdGltZWxpbmUocnEpOworCisJaTkxNV9yZXF1ZXN0
X3Nob3cobSwgcnEsIG1zZywgMCk7CisKKwlkcm1fcHJpbnRmKG0sICJcdFx0cmluZy0+c3RhcnQ6
ICAweCUwOHhcbiIsCisJCSAgIGk5MTVfZ2d0dF9vZmZzZXQocnEtPnJpbmctPnZtYSkpOworCWRy
bV9wcmludGYobSwgIlx0XHRyaW5nLT5oZWFkOiAgIDB4JTA4eFxuIiwKKwkJICAgcnEtPnJpbmct
PmhlYWQpOworCWRybV9wcmludGYobSwgIlx0XHRyaW5nLT50YWlsOiAgIDB4JTA4eFxuIiwKKwkJ
ICAgcnEtPnJpbmctPnRhaWwpOworCWRybV9wcmludGYobSwgIlx0XHRyaW5nLT5lbWl0OiAgIDB4
JTA4eFxuIiwKKwkJICAgcnEtPnJpbmctPmVtaXQpOworCWRybV9wcmludGYobSwgIlx0XHRyaW5n
LT5zcGFjZTogIDB4JTA4eFxuIiwKKwkJICAgcnEtPnJpbmctPnNwYWNlKTsKKworCWlmICh0bCkg
eworCQlkcm1fcHJpbnRmKG0sICJcdFx0cmluZy0+aHdzcDogICAweCUwOHhcbiIsCisJCQkgICB0
bC0+aHdzcF9vZmZzZXQpOworCQlpbnRlbF90aW1lbGluZV9wdXQodGwpOworCX0KKworCXByaW50
X3JlcXVlc3RfcmluZyhtLCBycSk7CisKKwlpZiAocnEtPmNvbnRleHQtPmxyY19yZWdfc3RhdGUp
IHsKKwkJZHJtX3ByaW50ZihtLCAiTG9naWNhbCBSaW5nIENvbnRleHQ6XG4iKTsKKwkJaGV4ZHVt
cChtLCBycS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSwgUEFHRV9TSVpFKTsKKwl9Cit9CisKK3Zv
aWQgaW50ZWxfZW5naW5lX2R1bXBfYWN0aXZlX3JlcXVlc3RzKHN0cnVjdCBsaXN0X2hlYWQgKnJl
cXVlc3RzLAorCQkJCSAgICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpodW5nX3JxLAorCQkJCSAg
ICAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0pCit7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7
CisJY29uc3QgY2hhciAqbXNnOworCWVudW0gaTkxNV9yZXF1ZXN0X3N0YXRlIHN0YXRlOworCisJ
bGlzdF9mb3JfZWFjaF9lbnRyeShycSwgcmVxdWVzdHMsIHNjaGVkLmxpbmspIHsKKwkJaWYgKHJx
ID09IGh1bmdfcnEpCisJCQljb250aW51ZTsKKworCQlzdGF0ZSA9IGk5MTVfdGVzdF9yZXF1ZXN0
X3N0YXRlKHJxKTsKKwkJaWYgKHN0YXRlIDwgSTkxNV9SRVFVRVNUX1FVRVVFRCkKKwkJCWNvbnRp
bnVlOworCisJCWlmIChzdGF0ZSA9PSBJOTE1X1JFUVVFU1RfQUNUSVZFKQorCQkJbXNnID0gIlx0
XHRhY3RpdmUgb24gZW5naW5lIjsKKwkJZWxzZQorCQkJbXNnID0gIlx0XHRhY3RpdmUgaW4gcXVl
dWUiOworCisJCWVuZ2luZV9kdW1wX3JlcXVlc3QocnEsIG0sIG1zZyk7CisJfQorfQorCitzdGF0
aWMgdm9pZCBlbmdpbmVfZHVtcF9hY3RpdmVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLCBzdHJ1Y3QgZHJtX3ByaW50ZXIgKm0pCit7CisJc3RydWN0IGk5MTVfcmVxdWVz
dCAqaHVuZ19ycSA9IE5VTEw7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCWJvb2wgZ3Vj
OworCisJLyoKKwkgKiBObyBuZWVkIGZvciBhbiBlbmdpbmUtPmlycV9zZXFub19iYXJyaWVyKCkg
YmVmb3JlIHRoZSBzZXFubyByZWFkcy4KKwkgKiBUaGUgR1BVIGlzIHN0aWxsIHJ1bm5pbmcgc28g
cmVxdWVzdHMgYXJlIHN0aWxsIGV4ZWN1dGluZyBhbmQgYW55CisJICogaGFyZHdhcmUgcmVhZHMg
d2lsbCBiZSBvdXQgb2YgZGF0ZSBieSB0aGUgdGltZSB0aGV5IGFyZSByZXBvcnRlZC4KKwkgKiBC
dXQgdGhlIGludGVudGlvbiBoZXJlIGlzIGp1c3QgdG8gcmVwb3J0IGFuIGluc3RhbnRhbmVvdXMg
c25hcHNob3QKKwkgKiBzbyB0aGF0J3MgZmluZS4KKwkgKi8KKwlsb2NrZGVwX2Fzc2VydF9oZWxk
KCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisKKwlkcm1fcHJpbnRmKG0sICJcdFJlcXVl
c3RzOlxuIik7CisKKwlndWMgPSBpbnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZlbmdpbmUt
Pmd0LT51Yyk7CisJaWYgKGd1YykgeworCQljZSA9IGludGVsX2VuZ2luZV9nZXRfaHVuZ19jb250
ZXh0KGVuZ2luZSk7CisJCWlmIChjZSkKKwkJCWh1bmdfcnEgPSBpbnRlbF9jb250ZXh0X2ZpbmRf
YWN0aXZlX3JlcXVlc3QoY2UpOworCX0gZWxzZQorCQlodW5nX3JxID0gaW50ZWxfZW5naW5lX2V4
ZWNsaXN0X2ZpbmRfaHVuZ19yZXF1ZXN0KGVuZ2luZSk7CisKKwlpZiAoaHVuZ19ycSkKKwkJZW5n
aW5lX2R1bXBfcmVxdWVzdChodW5nX3JxLCBtLCAiXHRcdGh1bmciKTsKKworCWlmIChndWMpCisJ
CWludGVsX2d1Y19kdW1wX2FjdGl2ZV9yZXF1ZXN0cyhlbmdpbmUsIGh1bmdfcnEsIG0pOworCWVs
c2UKKwkJaW50ZWxfZW5naW5lX2R1bXBfYWN0aXZlX3JlcXVlc3RzKCZlbmdpbmUtPnNjaGVkX2Vu
Z2luZS0+cmVxdWVzdHMsCisJCQkJCQkgIGh1bmdfcnEsIG0pOworfQorCiB2b2lkIGludGVsX2Vu
Z2luZV9kdW1wKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJICAgICAgIHN0cnVj
dCBkcm1fcHJpbnRlciAqbSwKIAkJICAgICAgIGNvbnN0IGNoYXIgKmhlYWRlciwgLi4uKQpAQCAt
MTY0NSwzOSArMTc2MCw5IEBAIHZvaWQgaW50ZWxfZW5naW5lX2R1bXAoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lLAogCQkgICBpOTE1X3Jlc2V0X2NvdW50KGVycm9yKSk7CiAJcHJpbnRf
cHJvcGVydGllcyhlbmdpbmUsIG0pOwogCi0JZHJtX3ByaW50ZihtLCAiXHRSZXF1ZXN0czpcbiIp
OwotCiAJc3Bpbl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFn
cyk7Ci0JcnEgPSBpbnRlbF9lbmdpbmVfZmluZF9hY3RpdmVfcmVxdWVzdChlbmdpbmUpOwotCWlm
IChycSkgewotCQlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsID0gZ2V0X3RpbWVsaW5lKHJxKTsK
KwllbmdpbmVfZHVtcF9hY3RpdmVfcmVxdWVzdHMoZW5naW5lLCBtKTsKIAotCQlpOTE1X3JlcXVl
c3Rfc2hvdyhtLCBycSwgIlx0XHRhY3RpdmUgIiwgMCk7Ci0KLQkJZHJtX3ByaW50ZihtLCAiXHRc
dHJpbmctPnN0YXJ0OiAgMHglMDh4XG4iLAotCQkJICAgaTkxNV9nZ3R0X29mZnNldChycS0+cmlu
Zy0+dm1hKSk7Ci0JCWRybV9wcmludGYobSwgIlx0XHRyaW5nLT5oZWFkOiAgIDB4JTA4eFxuIiwK
LQkJCSAgIHJxLT5yaW5nLT5oZWFkKTsKLQkJZHJtX3ByaW50ZihtLCAiXHRcdHJpbmctPnRhaWw6
ICAgMHglMDh4XG4iLAotCQkJICAgcnEtPnJpbmctPnRhaWwpOwotCQlkcm1fcHJpbnRmKG0sICJc
dFx0cmluZy0+ZW1pdDogICAweCUwOHhcbiIsCi0JCQkgICBycS0+cmluZy0+ZW1pdCk7Ci0JCWRy
bV9wcmludGYobSwgIlx0XHRyaW5nLT5zcGFjZTogIDB4JTA4eFxuIiwKLQkJCSAgIHJxLT5yaW5n
LT5zcGFjZSk7Ci0KLQkJaWYgKHRsKSB7Ci0JCQlkcm1fcHJpbnRmKG0sICJcdFx0cmluZy0+aHdz
cDogICAweCUwOHhcbiIsCi0JCQkJICAgdGwtPmh3c3Bfb2Zmc2V0KTsKLQkJCWludGVsX3RpbWVs
aW5lX3B1dCh0bCk7Ci0JCX0KLQotCQlwcmludF9yZXF1ZXN0X3JpbmcobSwgcnEpOwotCi0JCWlm
IChycS0+Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSkgewotCQkJZHJtX3ByaW50ZihtLCAiTG9naWNh
bCBSaW5nIENvbnRleHQ6XG4iKTsKLQkJCWhleGR1bXAobSwgcnEtPmNvbnRleHQtPmxyY19yZWdf
c3RhdGUsIFBBR0VfU0laRSk7Ci0JCX0KLQl9CiAJZHJtX3ByaW50ZihtLCAiXHRPbiBob2xkPzog
JWx1XG4iLAogCQkgICBsaXN0X2NvdW50KCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+aG9sZCkpOwog
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFn
cyk7CkBAIC0xNzM3LDE4ICsxODIyLDMyIEBAIGt0aW1lX3QgaW50ZWxfZW5naW5lX2dldF9idXN5
X3RpbWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBrdGltZV90ICpub3cpCiAJcmV0
dXJuIHRvdGFsOwogfQogCi1zdGF0aWMgYm9vbCBtYXRjaF9yaW5nKHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKQorc3RydWN0IGludGVsX2NvbnRleHQgKgoraW50ZWxfZW5naW5lX2NyZWF0ZV92aXJ0
dWFsKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipzaWJsaW5ncywKKwkJCSAgICB1bnNpZ25lZCBp
bnQgY291bnQpCiB7Ci0JdTMyIHJpbmcgPSBFTkdJTkVfUkVBRChycS0+ZW5naW5lLCBSSU5HX1NU
QVJUKTsKKwlpZiAoY291bnQgPT0gMCkKKwkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CisKKwlp
ZiAoY291bnQgPT0gMSkKKwkJcmV0dXJuIGludGVsX2NvbnRleHRfY3JlYXRlKHNpYmxpbmdzWzBd
KTsKIAotCXJldHVybiByaW5nID09IGk5MTVfZ2d0dF9vZmZzZXQocnEtPnJpbmctPnZtYSk7CisJ
R0VNX0JVR19PTighc2libGluZ3NbMF0tPmNvcHMtPmNyZWF0ZV92aXJ0dWFsKTsKKwlyZXR1cm4g
c2libGluZ3NbMF0tPmNvcHMtPmNyZWF0ZV92aXJ0dWFsKHNpYmxpbmdzLCBjb3VudCk7CiB9CiAK
IHN0cnVjdCBpOTE1X3JlcXVlc3QgKgotaW50ZWxfZW5naW5lX2ZpbmRfYWN0aXZlX3JlcXVlc3Qo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoraW50ZWxfZW5naW5lX2V4ZWNsaXN0X2Zp
bmRfaHVuZ19yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCAqYWN0aXZlID0gTlVMTDsKIAorCS8qCisJICogVGhp
cyBzZWFyY2ggZG9lcyBub3Qgd29yayBpbiBHdUMgc3VibWlzc2lvbiBtb2RlLiBIb3dldmVyLCB0
aGUgR3VDCisJICogd2lsbCByZXBvcnQgdGhlIGhhbmdpbmcgY29udGV4dCBkaXJlY3RseSB0byB0
aGUgZHJpdmVyIGl0c2VsZi4gU28KKwkgKiB0aGUgZHJpdmVyIHNob3VsZCBuZXZlciBnZXQgaGVy
ZSB3aGVuIGluIEd1QyBtb2RlLgorCSAqLworCUdFTV9CVUdfT04oaW50ZWxfdWNfdXNlc19ndWNf
c3VibWlzc2lvbigmZW5naW5lLT5ndC0+dWMpKTsKKwogCS8qCiAJICogV2UgYXJlIGNhbGxlZCBi
eSB0aGUgZXJyb3IgY2FwdHVyZSwgcmVzZXQgYW5kIHRvIGR1bXAgZW5naW5lCiAJICogc3RhdGUg
YXQgcmFuZG9tIHBvaW50cyBpbiB0aW1lLiBJbiBwYXJ0aWN1bGFyLCBub3RlIHRoYXQgbmVpdGhl
ciBpcwpAQCAtMTc4MCwxNCArMTg3OSw3IEBAIGludGVsX2VuZ2luZV9maW5kX2FjdGl2ZV9yZXF1
ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCWxpc3RfZm9yX2VhY2hfZW50
cnkocmVxdWVzdCwgJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXF1ZXN0cywKIAkJCSAgICBzY2hl
ZC5saW5rKSB7Ci0JCWlmIChfX2k5MTVfcmVxdWVzdF9pc19jb21wbGV0ZShyZXF1ZXN0KSkKLQkJ
CWNvbnRpbnVlOwotCi0JCWlmICghX19pOTE1X3JlcXVlc3RfaGFzX3N0YXJ0ZWQocmVxdWVzdCkp
Ci0JCQljb250aW51ZTsKLQotCQkvKiBNb3JlIHRoYW4gb25lIHByZWVtcHRpYmxlIHJlcXVlc3Qg
bWF5IG1hdGNoISAqLwotCQlpZiAoIW1hdGNoX3JpbmcocmVxdWVzdCkpCisJCWlmIChpOTE1X3Rl
c3RfcmVxdWVzdF9zdGF0ZShyZXF1ZXN0KSAhPSBJOTE1X1JFUVVFU1RfQUNUSVZFKQogCQkJY29u
dGludWU7CiAKIAkJYWN0aXZlID0gcmVxdWVzdDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuYwppbmRleCBiNmEzMDVlNmE5NzQuLmYwNzY4ODI0
ZGU2ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2hl
YXJ0YmVhdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9oZWFy
dGJlYXQuYwpAQCAtNzAsMTIgKzcwLDM4IEBAIHN0YXRpYyB2b2lkIHNob3dfaGVhcnRiZWF0KGNv
bnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogewogCXN0cnVjdCBkcm1fcHJpbnRlciBwID0g
ZHJtX2RlYnVnX3ByaW50ZXIoImhlYXJ0YmVhdCIpOwogCi0JaW50ZWxfZW5naW5lX2R1bXAoZW5n
aW5lLCAmcCwKLQkJCSAgIiVzIGhlYXJ0YmVhdCB7c2Vxbm86JWxseDolbGxkLCBwcmlvOiVkfSBu
b3QgdGlja2luZ1xuIiwKLQkJCSAgZW5naW5lLT5uYW1lLAotCQkJICBycS0+ZmVuY2UuY29udGV4
dCwKLQkJCSAgcnEtPmZlbmNlLnNlcW5vLAotCQkJICBycS0+c2NoZWQuYXR0ci5wcmlvcml0eSk7
CisJaWYgKCFycSkgeworCQlpbnRlbF9lbmdpbmVfZHVtcChlbmdpbmUsICZwLAorCQkJCSAgIiVz
IGhlYXJ0YmVhdCBub3QgdGlja2luZ1xuIiwKKwkJCQkgIGVuZ2luZS0+bmFtZSk7CisJfSBlbHNl
IHsKKwkJaW50ZWxfZW5naW5lX2R1bXAoZW5naW5lLCAmcCwKKwkJCQkgICIlcyBoZWFydGJlYXQg
e3NlcW5vOiVsbHg6JWxsZCwgcHJpbzolZH0gbm90IHRpY2tpbmdcbiIsCisJCQkJICBlbmdpbmUt
Pm5hbWUsCisJCQkJICBycS0+ZmVuY2UuY29udGV4dCwKKwkJCQkgIHJxLT5mZW5jZS5zZXFubywK
KwkJCQkgIHJxLT5zY2hlZC5hdHRyLnByaW9yaXR5KTsKKwl9Cit9CisKK3N0YXRpYyB2b2lkCity
ZXNldF9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKK3sKKwlpZiAoSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfR0VN
KSkKKwkJc2hvd19oZWFydGJlYXQocnEsIGVuZ2luZSk7CisKKwlpZiAoaW50ZWxfZW5naW5lX3Vz
ZXNfZ3VjKGVuZ2luZSkpCisJCS8qCisJCSAqIEd1QyBpdHNlbGYgaXMgdG9hc3Qgb3IgR3VDJ3Mg
aGFuZyBkZXRlY3Rpb24KKwkJICogaXMgZGlzYWJsZWQuIEVpdGhlciB3YXksIG5lZWQgdG8gZmlu
ZCB0aGUKKwkJICogaGFuZyBjdWxwcml0IG1hbnVhbGx5LgorCQkgKi8KKwkJaW50ZWxfZ3VjX2Zp
bmRfaHVuZ19jb250ZXh0KGVuZ2luZSk7CisKKwlpbnRlbF9ndF9oYW5kbGVfZXJyb3IoZW5naW5l
LT5ndCwgZW5naW5lLT5tYXNrLAorCQkJICAgICAgSTkxNV9FUlJPUl9DQVBUVVJFLAorCQkJICAg
ICAgInN0b3BwZWQgaGVhcnRiZWF0IG9uICVzIiwKKwkJCSAgICAgIGVuZ2luZS0+bmFtZSk7CiB9
CiAKIHN0YXRpYyB2b2lkIGhlYXJ0YmVhdChzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndyaykKQEAgLTEw
Miw2ICsxMjgsMTEgQEAgc3RhdGljIHZvaWQgaGVhcnRiZWF0KHN0cnVjdCB3b3JrX3N0cnVjdCAq
d3JrKQogCWlmIChpbnRlbF9ndF9pc193ZWRnZWQoZW5naW5lLT5ndCkpCiAJCWdvdG8gb3V0Owog
CisJaWYgKGk5MTVfc2NoZWRfZW5naW5lX2Rpc2FibGVkKGVuZ2luZS0+c2NoZWRfZW5naW5lKSkg
eworCQlyZXNldF9lbmdpbmUoZW5naW5lLCBlbmdpbmUtPmhlYXJ0YmVhdC5zeXN0b2xlKTsKKwkJ
Z290byBvdXQ7CisJfQorCiAJaWYgKGVuZ2luZS0+aGVhcnRiZWF0LnN5c3RvbGUpIHsKIAkJbG9u
ZyBkZWxheSA9IFJFQURfT05DRShlbmdpbmUtPnByb3BzLmhlYXJ0YmVhdF9pbnRlcnZhbF9tcyk7
CiAKQEAgLTEzOSwxMyArMTcwLDcgQEAgc3RhdGljIHZvaWQgaGVhcnRiZWF0KHN0cnVjdCB3b3Jr
X3N0cnVjdCAqd3JrKQogCQkJZW5naW5lLT5zY2hlZF9lbmdpbmUtPnNjaGVkdWxlKHJxLCAmYXR0
cik7CiAJCQlsb2NhbF9iaF9lbmFibGUoKTsKIAkJfSBlbHNlIHsKLQkJCWlmIChJU19FTkFCTEVE
KENPTkZJR19EUk1fSTkxNV9ERUJVR19HRU0pKQotCQkJCXNob3dfaGVhcnRiZWF0KHJxLCBlbmdp
bmUpOwotCi0JCQlpbnRlbF9ndF9oYW5kbGVfZXJyb3IoZW5naW5lLT5ndCwgZW5naW5lLT5tYXNr
LAotCQkJCQkgICAgICBJOTE1X0VSUk9SX0NBUFRVUkUsCi0JCQkJCSAgICAgICJzdG9wcGVkIGhl
YXJ0YmVhdCBvbiAlcyIsCi0JCQkJCSAgICAgIGVuZ2luZS0+bmFtZSk7CisJCQlyZXNldF9lbmdp
bmUoZW5naW5lLCBycSk7CiAJCX0KIAogCQlycS0+ZW1pdHRlZF9qaWZmaWVzID0gamlmZmllczsK
QEAgLTE5NCw2ICsyMTksMjYgQEAgdm9pZCBpbnRlbF9lbmdpbmVfcGFya19oZWFydGJlYXQoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlpOTE1X3JlcXVlc3RfcHV0KGZldGNoX2Fu
ZF96ZXJvKCZlbmdpbmUtPmhlYXJ0YmVhdC5zeXN0b2xlKSk7CiB9CiAKK3ZvaWQgaW50ZWxfZ3Rf
dW5wYXJrX2hlYXJ0YmVhdHMoc3RydWN0IGludGVsX2d0ICpndCkKK3sKKwlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisKKwlmb3JfZWFj
aF9lbmdpbmUoZW5naW5lLCBndCwgaWQpCisJCWlmIChpbnRlbF9lbmdpbmVfcG1faXNfYXdha2Uo
ZW5naW5lKSkKKwkJCWludGVsX2VuZ2luZV91bnBhcmtfaGVhcnRiZWF0KGVuZ2luZSk7CisKK30K
Kwordm9pZCBpbnRlbF9ndF9wYXJrX2hlYXJ0YmVhdHMoc3RydWN0IGludGVsX2d0ICpndCkKK3sK
KwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQg
aWQ7CisKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndCwgaWQpCisJCWludGVsX2VuZ2luZV9w
YXJrX2hlYXJ0YmVhdChlbmdpbmUpOworfQorCiB2b2lkIGludGVsX2VuZ2luZV9pbml0X2hlYXJ0
YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJSU5JVF9ERUxBWUVEX1dP
UksoJmVuZ2luZS0+aGVhcnRiZWF0LndvcmssIGhlYXJ0YmVhdCk7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfaGVhcnRiZWF0LmgKaW5kZXggYTQ4OGVhM2U4NGEz
Li41ZGE2ZDgwOWE4N2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9oZWFydGJlYXQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
bmdpbmVfaGVhcnRiZWF0LmgKQEAgLTcsNiArNyw3IEBACiAjZGVmaW5lIElOVEVMX0VOR0lORV9I
RUFSVEJFQVRfSAogCiBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzOworc3RydWN0IGludGVsX2d0Owog
CiB2b2lkIGludGVsX2VuZ2luZV9pbml0X2hlYXJ0YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpOwogCkBAIC0xNiw2ICsxNyw5IEBAIGludCBpbnRlbF9lbmdpbmVfc2V0X2hlYXJ0
YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiB2b2lkIGludGVsX2VuZ2luZV9w
YXJrX2hlYXJ0YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogdm9pZCBpbnRl
bF9lbmdpbmVfdW5wYXJrX2hlYXJ0YmVhdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
OwogCit2b2lkIGludGVsX2d0X3BhcmtfaGVhcnRiZWF0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsK
K3ZvaWQgaW50ZWxfZ3RfdW5wYXJrX2hlYXJ0YmVhdHMoc3RydWN0IGludGVsX2d0ICpndCk7CisK
IGludCBpbnRlbF9lbmdpbmVfcHVsc2Uoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsK
IGludCBpbnRlbF9lbmdpbmVfZmx1c2hfYmFycmllcnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMu
aAppbmRleCAxY2I5YzNiNzBiMjkuLmUxOTM1YzY5ZjdkMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKQEAgLTY0LDcgKzY0LDYgQEAgc3RydWN0IGlu
dGVsX2d0Owogc3RydWN0IGludGVsX3Jpbmc7CiBzdHJ1Y3QgaW50ZWxfdW5jb3JlOwogCi10eXBl
ZGVmIHU4IGludGVsX2VuZ2luZV9tYXNrX3Q7CiAjZGVmaW5lIEFMTF9FTkdJTkVTICgoaW50ZWxf
ZW5naW5lX21hc2tfdCl+MHVsKQogCiBzdHJ1Y3QgaW50ZWxfaHdfc3RhdHVzX3BhZ2UgewpAQCAt
MzA0LDYgKzMwMyw4IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgewogCS8qIGtlZXAgYSByZXF1
ZXN0IGluIHJlc2VydmUgZm9yIGEgW3BtXSBiYXJyaWVyIHVuZGVyIG9vbSAqLwogCXN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJlcXVlc3RfcG9vbDsKIAorCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpodW5n
X2NlOworCiAJc3RydWN0IGxsaXN0X2hlYWQgYmFycmllcl90YXNrczsKIAogCXN0cnVjdCBpbnRl
bF9jb250ZXh0ICprZXJuZWxfY29udGV4dDsgLyogcGlubmVkICovCkBAIC0zODgsNiArMzg5LDgg
QEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7CiAJdm9pZAkJKCpwYXJrKShzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpOwogCXZvaWQJCSgqdW5wYXJrKShzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpOwogCisJdm9pZAkJKCpidW1wX3NlcmlhbCkoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKTsKKwogCXZvaWQJCSgqc2V0X2RlZmF1bHRfc3VibWlzc2lvbikoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAogCWNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0
X29wcyAqY29wczsKQEAgLTQxOCw2ICs0MjEsMTIgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAKIAl2b2lkCQkoKnJlbGVhc2UpKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAK
KwkvKgorCSAqIEFkZCAvIHJlbW92ZSByZXF1ZXN0IGZyb20gZW5naW5lIGFjdGl2ZSB0cmFja2lu
ZworCSAqLworCXZvaWQJCSgqYWRkX2FjdGl2ZV9yZXF1ZXN0KShzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSk7CisJdm9pZAkJKCpyZW1vdmVfYWN0aXZlX3JlcXVlc3QpKHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKTsKKwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzIGV4ZWNsaXN0czsKIAog
CS8qCkBAIC00MzksNiArNDQ4LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7CiAjZGVmaW5l
IEk5MTVfRU5HSU5FX0lTX1ZJUlRVQUwgICAgICAgQklUKDUpCiAjZGVmaW5lIEk5MTVfRU5HSU5F
X0hBU19SRUxBVElWRV9NTUlPIEJJVCg2KQogI2RlZmluZSBJOTE1X0VOR0lORV9SRVFVSVJFU19D
TURfUEFSU0VSIEJJVCg3KQorI2RlZmluZSBJOTE1X0VOR0lORV9XQU5UX0ZPUkNFRF9QUkVFTVBU
SU9OIEJJVCg4KQogCXVuc2lnbmVkIGludCBmbGFnczsKIAogCS8qCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uYwppbmRleCA1NmUy
NTA5MGRhNjcuLjhmNmRjMGZiNDlhNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZXhlY2xpc3RzX3N1Ym1pc3Npb24uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5jCkBAIC0xMTQsNiArMTE0LDcgQEAKICNp
bmNsdWRlICJnZW44X2VuZ2luZV9jcy5oIgogI2luY2x1ZGUgImludGVsX2JyZWFkY3J1bWJzLmgi
CiAjaW5jbHVkZSAiaW50ZWxfY29udGV4dC5oIgorI2luY2x1ZGUgImludGVsX2VuZ2luZV9oZWFy
dGJlYXQuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9l
bmdpbmVfc3RhdHMuaCIKICNpbmNsdWRlICJpbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5oIgpA
QCAtMTkzLDYgKzE5NCw5IEBAIHN0YXRpYyBzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnRvX3ZpcnR1
YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gY29udGFp
bmVyX29mKGVuZ2luZSwgc3RydWN0IHZpcnR1YWxfZW5naW5lLCBiYXNlKTsKIH0KIAorc3RhdGlj
IHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2lnbmVkIGludCBjb3VudCk7CisKIHN0YXRp
YyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKIF9fYWN0aXZlX3JlcXVlc3QoY29uc3Qgc3RydWN0IGlu
dGVsX3RpbWVsaW5lICogY29uc3QgdGwsCiAJCSBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKQEAg
LTI1MzMsMTEgKzI1MzcsMjYgQEAgc3RhdGljIGludCBleGVjbGlzdHNfY29udGV4dF9hbGxvYyhz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJuIGxyY19hbGxvYyhjZSwgY2UtPmVuZ2lu
ZSk7CiB9CiAKK3N0YXRpYyB2b2lkIGV4ZWNsaXN0c19jb250ZXh0X2NhbmNlbF9yZXF1ZXN0KHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCQkJICAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBOVUxMOworCisJaTkxNV9y
ZXF1ZXN0X2FjdGl2ZV9lbmdpbmUocnEsICZlbmdpbmUpOworCisJaWYgKGVuZ2luZSAmJiBpbnRl
bF9lbmdpbmVfcHVsc2UoZW5naW5lKSkKKwkJaW50ZWxfZ3RfaGFuZGxlX2Vycm9yKGVuZ2luZS0+
Z3QsIGVuZ2luZS0+bWFzaywgMCwKKwkJCQkgICAgICAicmVxdWVzdCBjYW5jZWxsYXRpb24gYnkg
JXMiLAorCQkJCSAgICAgIGN1cnJlbnQtPmNvbW0pOworfQorCiBzdGF0aWMgY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHRfb3BzIGV4ZWNsaXN0c19jb250ZXh0X29wcyA9IHsKIAkuZmxhZ3MgPSBD
T1BTX0hBU19JTkZMSUdIVCwKIAogCS5hbGxvYyA9IGV4ZWNsaXN0c19jb250ZXh0X2FsbG9jLAog
CisJLmNhbmNlbF9yZXF1ZXN0ID0gZXhlY2xpc3RzX2NvbnRleHRfY2FuY2VsX3JlcXVlc3QsCisK
IAkucHJlX3BpbiA9IGV4ZWNsaXN0c19jb250ZXh0X3ByZV9waW4sCiAJLnBpbiA9IGV4ZWNsaXN0
c19jb250ZXh0X3BpbiwKIAkudW5waW4gPSBscmNfdW5waW4sCkBAIC0yNTQ4LDYgKzI1NjcsOCBA
QCBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHRfb3BzIGV4ZWNsaXN0c19jb250ZXh0
X29wcyA9IHsKIAogCS5yZXNldCA9IGxyY19yZXNldCwKIAkuZGVzdHJveSA9IGxyY19kZXN0cm95
LAorCisJLmNyZWF0ZV92aXJ0dWFsID0gZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsLAogfTsKIAog
c3RhdGljIGludCBlbWl0X3BkcHMoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCkBAIC0zMTAxLDYg
KzMxMjIsNDIgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX3Bhcmsoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogCWNhbmNlbF90aW1lcigmZW5naW5lLT5leGVjbGlzdHMucHJlZW1wdCk7
CiB9CiAKK3N0YXRpYyB2b2lkIGFkZF90b19lbmdpbmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEp
Cit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2Nr
KTsKKwlsaXN0X21vdmVfdGFpbCgmcnEtPnNjaGVkLmxpbmssICZycS0+ZW5naW5lLT5zY2hlZF9l
bmdpbmUtPnJlcXVlc3RzKTsKK30KKworc3RhdGljIHZvaWQgcmVtb3ZlX2Zyb21fZW5naW5lKHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSwgKmxvY2tlZDsKKworCS8qCisJICogVmlydHVhbCBlbmdpbmVzIGNvbXBsaWNhdGUgYWNxdWly
aW5nIHRoZSBlbmdpbmUgdGltZWxpbmUgbG9jaywKKwkgKiBhcyB0aGVpciBycS0+ZW5naW5lIHBv
aW50ZXIgaXMgbm90IHN0YWJsZSB1bnRpbCB1bmRlciB0aGF0CisJICogZW5naW5lIGxvY2suIFRo
ZSBzaW1wbGUgcGxveSB3ZSB1c2UgaXMgdG8gdGFrZSB0aGUgbG9jayB0aGVuCisJICogY2hlY2sg
dGhhdCB0aGUgcnEgc3RpbGwgYmVsb25ncyB0byB0aGUgbmV3bHkgbG9ja2VkIGVuZ2luZS4KKwkg
Ki8KKwlsb2NrZWQgPSBSRUFEX09OQ0UocnEtPmVuZ2luZSk7CisJc3Bpbl9sb2NrX2lycSgmbG9j
a2VkLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCXdoaWxlICh1bmxpa2VseShsb2NrZWQgIT0gKGVu
Z2luZSA9IFJFQURfT05DRShycS0+ZW5naW5lKSkpKSB7CisJCXNwaW5fdW5sb2NrKCZsb2NrZWQt
PnNjaGVkX2VuZ2luZS0+bG9jayk7CisJCXNwaW5fbG9jaygmZW5naW5lLT5zY2hlZF9lbmdpbmUt
PmxvY2spOworCQlsb2NrZWQgPSBlbmdpbmU7CisJfQorCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hl
ZC5saW5rKTsKKworCWNsZWFyX2JpdChJOTE1X0ZFTkNFX0ZMQUdfUFFVRVVFLCAmcnEtPmZlbmNl
LmZsYWdzKTsKKwljbGVhcl9iaXQoSTkxNV9GRU5DRV9GTEFHX0hPTEQsICZycS0+ZmVuY2UuZmxh
Z3MpOworCisJLyogUHJldmVudCBmdXJ0aGVyIF9fYXdhaXRfZXhlY3V0aW9uKCkgcmVnaXN0ZXJp
bmcgYSBjYiwgdGhlbiBmbHVzaCAqLworCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFHX0FDVElWRSwg
JnJxLT5mZW5jZS5mbGFncyk7CisKKwlzcGluX3VubG9ja19pcnEoJmxvY2tlZC0+c2NoZWRfZW5n
aW5lLT5sb2NrKTsKKworCWk5MTVfcmVxdWVzdF9ub3RpZnlfZXhlY3V0ZV9jYl9pbW0ocnEpOwor
fQorCiBzdGF0aWMgYm9vbCBjYW5fcHJlZW1wdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiB7CiAJaWYgKEdSQVBISUNTX1ZFUihlbmdpbmUtPmk5MTUpID4gOCkKQEAgLTMxODYsNiAr
MzI0MywxMSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJbHJjX2Zpbmlfd2FfY3R4KGVuZ2luZSk7CiB9CiAKK3N0YXRpYyB2
b2lkIGV4ZWNsaXN0X2J1bXBfc2VyaWFsKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
K3sKKwllbmdpbmUtPnNlcmlhbCsrOworfQorCiBzdGF0aWMgdm9pZAogbG9naWNhbF9yaW5nX2Rl
ZmF1bHRfdmZ1bmNzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKQEAgLTMxOTUs
NiArMzI1Nyw5IEBAIGxvZ2ljYWxfcmluZ19kZWZhdWx0X3ZmdW5jcyhzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAKIAllbmdpbmUtPmNvcHMgPSAmZXhlY2xpc3RzX2NvbnRleHRfb3Bz
OwogCWVuZ2luZS0+cmVxdWVzdF9hbGxvYyA9IGV4ZWNsaXN0c19yZXF1ZXN0X2FsbG9jOworCWVu
Z2luZS0+YnVtcF9zZXJpYWwgPSBleGVjbGlzdF9idW1wX3NlcmlhbDsKKwllbmdpbmUtPmFkZF9h
Y3RpdmVfcmVxdWVzdCA9IGFkZF90b19lbmdpbmU7CisJZW5naW5lLT5yZW1vdmVfYWN0aXZlX3Jl
cXVlc3QgPSByZW1vdmVfZnJvbV9lbmdpbmU7CiAKIAllbmdpbmUtPnJlc2V0LnByZXBhcmUgPSBl
eGVjbGlzdHNfcmVzZXRfcHJlcGFyZTsKIAllbmdpbmUtPnJlc2V0LnJld2luZCA9IGV4ZWNsaXN0
c19yZXNldF9yZXdpbmQ7CkBAIC0zMzk2LDcgKzM0NjEsNyBAQCBzdGF0aWMgdm9pZCByY3Vfdmly
dHVhbF9jb250ZXh0X2Rlc3Ryb3koc3RydWN0IHdvcmtfc3RydWN0ICp3cmspCiAJaW50ZWxfY29u
dGV4dF9maW5pKCZ2ZS0+Y29udGV4dCk7CiAKIAlpZiAodmUtPmJhc2UuYnJlYWRjcnVtYnMpCi0J
CWludGVsX2JyZWFkY3J1bWJzX2ZyZWUodmUtPmJhc2UuYnJlYWRjcnVtYnMpOworCQlpbnRlbF9i
cmVhZGNydW1ic19wdXQodmUtPmJhc2UuYnJlYWRjcnVtYnMpOwogCWlmICh2ZS0+YmFzZS5zY2hl
ZF9lbmdpbmUpCiAJCWk5MTVfc2NoZWRfZW5naW5lX3B1dCh2ZS0+YmFzZS5zY2hlZF9lbmdpbmUp
OwogCWludGVsX2VuZ2luZV9mcmVlX3JlcXVlc3RfcG9vbCgmdmUtPmJhc2UpOwpAQCAtMzQ5Mywx
MSArMzU1OCwyNCBAQCBzdGF0aWMgdm9pZCB2aXJ0dWFsX2NvbnRleHRfZXhpdChzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCiAJCWludGVsX2VuZ2luZV9wbV9wdXQodmUtPnNpYmxpbmdzW25dKTsK
IH0KIAorc3RhdGljIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKgordmlydHVhbF9nZXRfc2libGlu
ZyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHVuc2lnbmVkIGludCBzaWJsaW5nKQor
eworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSB0b192aXJ0dWFsX2VuZ2luZShlbmdpbmUp
OworCisJaWYgKHNpYmxpbmcgPj0gdmUtPm51bV9zaWJsaW5ncykKKwkJcmV0dXJuIE5VTEw7CisK
KwlyZXR1cm4gdmUtPnNpYmxpbmdzW3NpYmxpbmddOworfQorCiBzdGF0aWMgY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHRfb3BzIHZpcnR1YWxfY29udGV4dF9vcHMgPSB7CiAJLmZsYWdzID0gQ09Q
U19IQVNfSU5GTElHSFQsCiAKIAkuYWxsb2MgPSB2aXJ0dWFsX2NvbnRleHRfYWxsb2MsCiAKKwku
Y2FuY2VsX3JlcXVlc3QgPSBleGVjbGlzdHNfY29udGV4dF9jYW5jZWxfcmVxdWVzdCwKKwogCS5w
cmVfcGluID0gdmlydHVhbF9jb250ZXh0X3ByZV9waW4sCiAJLnBpbiA9IHZpcnR1YWxfY29udGV4
dF9waW4sCiAJLnVucGluID0gbHJjX3VucGluLApAQCAtMzUwNyw2ICszNTg1LDggQEAgc3RhdGlj
IGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0X29wcyB2aXJ0dWFsX2NvbnRleHRfb3BzID0gewog
CS5leGl0ID0gdmlydHVhbF9jb250ZXh0X2V4aXQsCiAKIAkuZGVzdHJveSA9IHZpcnR1YWxfY29u
dGV4dF9kZXN0cm95LAorCisJLmdldF9zaWJsaW5nID0gdmlydHVhbF9nZXRfc2libGluZywKIH07
CiAKIHN0YXRpYyBpbnRlbF9lbmdpbmVfbWFza190IHZpcnR1YWxfc3VibWlzc2lvbl9tYXNrKHN0
cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUpCkBAIC0zNjU1LDIwICszNzM1LDEzIEBAIHN0YXRpYyB2
b2lkIHZpcnR1YWxfc3VibWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJc3Bp
bl91bmxvY2tfaXJxcmVzdG9yZSgmdmUtPmJhc2Uuc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7
CiB9CiAKLXN0cnVjdCBpbnRlbF9jb250ZXh0ICoKLWludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmly
dHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCi0JCQkgICAgICAgdW5zaWdu
ZWQgaW50IGNvdW50KQorc3RhdGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2V4ZWNsaXN0c19j
cmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2lnbmVk
IGludCBjb3VudCkKIHsKIAlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlOwogCXVuc2lnbmVkIGlu
dCBuOwogCWludCBlcnI7CiAKLQlpZiAoY291bnQgPT0gMCkKLQkJcmV0dXJuIEVSUl9QVFIoLUVJ
TlZBTCk7Ci0KLQlpZiAoY291bnQgPT0gMSkKLQkJcmV0dXJuIGludGVsX2NvbnRleHRfY3JlYXRl
KHNpYmxpbmdzWzBdKTsKLQogCXZlID0ga3phbGxvYyhzdHJ1Y3Rfc2l6ZSh2ZSwgc2libGluZ3Ms
IGNvdW50KSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCF2ZSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01F
TSk7CkBAIC0zNzgwLDYgKzM4NTMsOCBAQCBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLAogCQkJICJ2JWR4JWQiLCB2ZS0+YmFz
ZS5jbGFzcywgY291bnQpOwogCQl2ZS0+YmFzZS5jb250ZXh0X3NpemUgPSBzaWJsaW5nLT5jb250
ZXh0X3NpemU7CiAKKwkJdmUtPmJhc2UuYWRkX2FjdGl2ZV9yZXF1ZXN0ID0gc2libGluZy0+YWRk
X2FjdGl2ZV9yZXF1ZXN0OworCQl2ZS0+YmFzZS5yZW1vdmVfYWN0aXZlX3JlcXVlc3QgPSBzaWJs
aW5nLT5yZW1vdmVfYWN0aXZlX3JlcXVlc3Q7CiAJCXZlLT5iYXNlLmVtaXRfYmJfc3RhcnQgPSBz
aWJsaW5nLT5lbWl0X2JiX3N0YXJ0OwogCQl2ZS0+YmFzZS5lbWl0X2ZsdXNoID0gc2libGluZy0+
ZW1pdF9mbHVzaDsKIAkJdmUtPmJhc2UuZW1pdF9pbml0X2JyZWFkY3J1bWIgPSBzaWJsaW5nLT5l
bWl0X2luaXRfYnJlYWRjcnVtYjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbi5oCmluZGV4IGFkNGYzZTFhMGZkZS4uYTFhYTkyYzk4
M2E1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9leGVjbGlzdHNf
c3VibWlzc2lvbi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2V4ZWNsaXN0
c19zdWJtaXNzaW9uLmgKQEAgLTMyLDEwICszMiw2IEBAIHZvaWQgaW50ZWxfZXhlY2xpc3RzX3No
b3dfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJCQkJCWludCBp
bmRlbnQpLAogCQkJCSAgIHVuc2lnbmVkIGludCBtYXgpOwogCi1zdHJ1Y3QgaW50ZWxfY29udGV4
dCAqCi1pbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqKnNpYmxpbmdzLAotCQkJICAgICAgIHVuc2lnbmVkIGludCBjb3VudCk7Ci0KIGJvb2wKIGlu
dGVsX2VuZ2luZV9pbl9leGVjbGlzdHNfc3VibWlzc2lvbl9tb2RlKGNvbnN0IHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2d0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCmluZGV4
IGU3MTRlMjFjMGE0ZC4uY2VlYjUxN2JhMjU5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0
LmMKQEAgLTU4NSw2ICs1ODUsMjUgQEAgc3RhdGljIHZvaWQgX19pbnRlbF9ndF9kaXNhYmxlKHN0
cnVjdCBpbnRlbF9ndCAqZ3QpCiAJR0VNX0JVR19PTihpbnRlbF9ndF9wbV9pc19hd2FrZShndCkp
OwogfQogCitpbnQgaW50ZWxfZ3Rfd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBs
b25nIHRpbWVvdXQpCit7CisJbG9uZyByZW1haW5pbmdfdGltZW91dDsKKworCS8qIElmIHRoZSBk
ZXZpY2UgaXMgYXNsZWVwLCB3ZSBoYXZlIG5vIHJlcXVlc3RzIG91dHN0YW5kaW5nICovCisJaWYg
KCFpbnRlbF9ndF9wbV9pc19hd2FrZShndCkpCisJCXJldHVybiAwOworCisJd2hpbGUgKCh0aW1l
b3V0ID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIHRpbWVvdXQsCisJCQkJ
CQkJICAgJnJlbWFpbmluZ190aW1lb3V0KSkgPiAwKSB7CisJCWNvbmRfcmVzY2hlZCgpOworCQlp
ZiAoc2lnbmFsX3BlbmRpbmcoY3VycmVudCkpCisJCQlyZXR1cm4gLUVJTlRSOworCX0KKworCXJl
dHVybiB0aW1lb3V0ID8gdGltZW91dCA6IGludGVsX3VjX3dhaXRfZm9yX2lkbGUoJmd0LT51YywK
KwkJCQkJCQkgIHJlbWFpbmluZ190aW1lb3V0KTsKK30KKwogaW50IGludGVsX2d0X2luaXQoc3Ry
dWN0IGludGVsX2d0ICpndCkKIHsKIAlpbnQgZXJyOwpAQCAtNjM1LDYgKzY1NCw4IEBAIGludCBp
bnRlbF9ndF9pbml0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJaWYgKGVycikKIAkJZ290byBlcnJf
Z3Q7CiAKKwlpbnRlbF91Y19pbml0X2xhdGUoJmd0LT51Yyk7CisKIAllcnIgPSBpOTE1X2luamVj
dF9wcm9iZV9lcnJvcihndC0+aTkxNSwgLUVJTyk7CiAJaWYgKGVycikKIAkJZ290byBlcnJfZ3Q7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaAppbmRleCBlN2FhYmUwY2M1YmYuLjc0ZTc3MTg3
MWE5YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCkBAIC00OCw2ICs0OCw4IEBAIHZv
aWQgaW50ZWxfZ3RfZHJpdmVyX3JlbGVhc2Uoc3RydWN0IGludGVsX2d0ICpndCk7CiAKIHZvaWQg
aW50ZWxfZ3RfZHJpdmVyX2xhdGVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKIAoraW50
IGludGVsX2d0X3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0
KTsKKwogdm9pZCBpbnRlbF9ndF9jaGVja19hbmRfY2xlYXJfZmF1bHRzKHN0cnVjdCBpbnRlbF9n
dCAqZ3QpOwogdm9pZCBpbnRlbF9ndF9jbGVhcl9lcnJvcl9yZWdpc3RlcnMoc3RydWN0IGludGVs
X2d0ICpndCwKIAkJCQkgICAgaW50ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVfbWFzayk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwppbmRleCBhZWYzMDg0ZThiMTYuLjQ2M2E2YWU2
MDVhMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jCkBAIC0xNzQsOCArMTc0
LDYgQEAgc3RhdGljIHZvaWQgZ3Rfc2FuaXRpemUoc3RydWN0IGludGVsX2d0ICpndCwgYm9vbCBm
b3JjZSkKIAlpZiAoaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkKIAkJaW50ZWxfZ3RfdW5zZXRfd2Vk
Z2VkKGd0KTsKIAotCWludGVsX3VjX3Nhbml0aXplKCZndC0+dWMpOwotCiAJZm9yX2VhY2hfZW5n
aW5lKGVuZ2luZSwgZ3QsIGlkKQogCQlpZiAoZW5naW5lLT5yZXNldC5wcmVwYXJlKQogCQkJZW5n
aW5lLT5yZXNldC5wcmVwYXJlKGVuZ2luZSk7CkBAIC0xOTEsNiArMTg5LDggQEAgc3RhdGljIHZv
aWQgZ3Rfc2FuaXRpemUoc3RydWN0IGludGVsX2d0ICpndCwgYm9vbCBmb3JjZSkKIAkJCV9faW50
ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgZmFsc2UpOwogCX0KIAorCWludGVsX3VjX3Jlc2V0KCZn
dC0+dWMsIGZhbHNlKTsKKwogCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkKIAkJaWYg
KGVuZ2luZS0+cmVzZXQuZmluaXNoKQogCQkJZW5naW5lLT5yZXNldC5maW5pc2goZW5naW5lKTsK
QEAgLTI0Myw2ICsyNDMsOCBAQCBpbnQgaW50ZWxfZ3RfcmVzdW1lKHN0cnVjdCBpbnRlbF9ndCAq
Z3QpCiAJCWdvdG8gZXJyX3dlZGdlZDsKIAl9CiAKKwlpbnRlbF91Y19yZXNldF9maW5pc2goJmd0
LT51Yyk7CisKIAlpbnRlbF9ycHNfZW5hYmxlKCZndC0+cnBzKTsKIAlpbnRlbF9sbGNfZW5hYmxl
KCZndC0+bGxjKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Z3RfcmVxdWVzdHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3Rz
LmMKaW5kZXggNjQ3ZWNhOWQ4NjdhLi45YWU1ZWUyNTY4OTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3JlcXVlc3RzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuYwpAQCAtMTMsNiArMTMsOCBAQAogI2luY2x1ZGUg
ImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcmVxdWVzdHMuaCIKICNpbmNsdWRl
ICJpbnRlbF90aW1lbGluZS5oIgorI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIKKyNpbmNsdWRl
ICJ1Yy9pbnRlbF91Yy5oIgogCiBzdGF0aWMgYm9vbCByZXRpcmVfcmVxdWVzdHMoc3RydWN0IGlu
dGVsX3RpbWVsaW5lICp0bCkKIHsKQEAgLTEzMCw3ICsxMzIsOCBAQCB2b2lkIGludGVsX2VuZ2lu
ZV9maW5pX3JldGlyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJR0VNX0JVR19P
TihlbmdpbmUtPnJldGlyZSk7CiB9CiAKLWxvbmcgaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3Rp
bWVvdXQoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0KQorbG9uZyBpbnRlbF9ndF9y
ZXRpcmVfcmVxdWVzdHNfdGltZW91dChzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBsb25nIHRpbWVvdXQs
CisJCQkJICAgICAgbG9uZyAqcmVtYWluaW5nX3RpbWVvdXQpCiB7CiAJc3RydWN0IGludGVsX2d0
X3RpbWVsaW5lcyAqdGltZWxpbmVzID0gJmd0LT50aW1lbGluZXM7CiAJc3RydWN0IGludGVsX3Rp
bWVsaW5lICp0bCwgKnRuOwpAQCAtMTk1LDIyICsxOTgsMTAgQEAgb3V0X2FjdGl2ZToJc3Bpbl9s
b2NrKCZ0aW1lbGluZXMtPmxvY2spOwogCWlmIChmbHVzaF9zdWJtaXNzaW9uKGd0LCB0aW1lb3V0
KSkgLyogV2FpdCwgdGhlcmUncyBtb3JlISAqLwogCQlhY3RpdmVfY291bnQrKzsKIAotCXJldHVy
biBhY3RpdmVfY291bnQgPyB0aW1lb3V0IDogMDsKLX0KLQotaW50IGludGVsX2d0X3dhaXRfZm9y
X2lkbGUoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0KQotewotCS8qIElmIHRoZSBk
ZXZpY2UgaXMgYXNsZWVwLCB3ZSBoYXZlIG5vIHJlcXVlc3RzIG91dHN0YW5kaW5nICovCi0JaWYg
KCFpbnRlbF9ndF9wbV9pc19hd2FrZShndCkpCi0JCXJldHVybiAwOwotCi0Jd2hpbGUgKCh0aW1l
b3V0ID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIHRpbWVvdXQpKSA+IDAp
IHsKLQkJY29uZF9yZXNjaGVkKCk7Ci0JCWlmIChzaWduYWxfcGVuZGluZyhjdXJyZW50KSkKLQkJ
CXJldHVybiAtRUlOVFI7Ci0JfQorCWlmIChyZW1haW5pbmdfdGltZW91dCkKKwkJKnJlbWFpbmlu
Z190aW1lb3V0ID0gdGltZW91dDsKIAotCXJldHVybiB0aW1lb3V0OworCXJldHVybiBhY3RpdmVf
Y291bnQgPyB0aW1lb3V0IDogMDsKIH0KIAogc3RhdGljIHZvaWQgcmV0aXJlX3dvcmtfaGFuZGxl
cihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfcmVxdWVzdHMuaAppbmRleCBmY2MzMGE2ZTRmZTkuLjUxZGJlMGUzMjk0ZSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcmVxdWVzdHMuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9yZXF1ZXN0cy5oCkBAIC02LDE0ICs2LDE3
IEBACiAjaWZuZGVmIElOVEVMX0dUX1JFUVVFU1RTX0gKICNkZWZpbmUgSU5URUxfR1RfUkVRVUVT
VFNfSAogCisjaW5jbHVkZSA8c3RkZGVmLmg+CisKIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3M7CiBz
dHJ1Y3QgaW50ZWxfZ3Q7CiBzdHJ1Y3QgaW50ZWxfdGltZWxpbmU7CiAKLWxvbmcgaW50ZWxfZ3Rf
cmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoc3RydWN0IGludGVsX2d0ICpndCwgbG9uZyB0aW1lb3V0
KTsKK2xvbmcgaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoc3RydWN0IGludGVsX2d0
ICpndCwgbG9uZyB0aW1lb3V0LAorCQkJCSAgICAgIGxvbmcgKnJlbWFpbmluZ190aW1lb3V0KTsK
IHN0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHMoc3RydWN0IGludGVs
X2d0ICpndCkKIHsKLQlpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHNfdGltZW91dChndCwgMCk7CisJ
aW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIDAsIE5VTEwpOwogfQogCiB2b2lk
IGludGVsX2VuZ2luZV9pbml0X3JldGlyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
OwpAQCAtMjEsOCArMjQsNiBAQCB2b2lkIGludGVsX2VuZ2luZV9hZGRfcmV0aXJlKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCSAgICAgc3RydWN0IGludGVsX3RpbWVsaW5lICp0
bCk7CiB2b2lkIGludGVsX2VuZ2luZV9maW5pX3JldGlyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpOwogCi1pbnQgaW50ZWxfZ3Rfd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0LCBsb25nIHRpbWVvdXQpOwotCiB2b2lkIGludGVsX2d0X2luaXRfcmVxdWVzdHMoc3RydWN0
IGludGVsX2d0ICpndCk7CiB2b2lkIGludGVsX2d0X3BhcmtfcmVxdWVzdHMoc3RydWN0IGludGVs
X2d0ICpndCk7CiB2b2lkIGludGVsX2d0X3VucGFya19yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaAppbmRleCA0MWU1MzUw
YTdhMDUuLjQ5ZDQ4NTdhZDliNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjX3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19y
ZWcuaApAQCAtODcsNyArODcsNiBAQAogI2RlZmluZSBHRU4xMV9DU0JfV1JJVEVfUFRSX01BU0sJ
KEdFTjExX0NTQl9QVFJfTUFTSyA8PCAwKQogCiAjZGVmaW5lIE1BWF9DT05URVhUX0hXX0lECSgx
IDw8IDIxKSAvKiBleGNsdXNpdmUgKi8KLSNkZWZpbmUgTUFYX0dVQ19DT05URVhUX0hXX0lECSgx
IDw8IDIwKSAvKiBleGNsdXNpdmUgKi8KICNkZWZpbmUgR0VOMTFfTUFYX0NPTlRFWFRfSFdfSUQJ
KDEgPDwgMTEpIC8qIGV4Y2x1c2l2ZSAqLwogLyogaW4gR2VuMTIgSUQgMHg3RkYgaXMgcmVzZXJ2
ZWQgdG8gaW5kaWNhdGUgaWRsZSAqLwogI2RlZmluZSBHRU4xMl9NQVhfQ09OVEVYVF9IV19JRAko
R0VOMTFfTUFYX0NPTlRFWFRfSFdfSUQgLSAxKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfcmVzZXQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jl
c2V0LmMKaW5kZXggNzIyNTE2MzhkNGVhLi4zZWQ2OTRjYWI1YWYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmVzZXQuYwpAQCAtMjIsNyArMjIsNiBAQAogI2luY2x1ZGUgImludGVsX3Jl
c2V0LmgiCiAKICNpbmNsdWRlICJ1Yy9pbnRlbF9ndWMuaCIKLSNpbmNsdWRlICJ1Yy9pbnRlbF9n
dWNfc3VibWlzc2lvbi5oIgogCiAjZGVmaW5lIFJFU0VUX01BWF9SRVRSSUVTIDMKIApAQCAtMzks
MjEgKzM4LDYgQEAgc3RhdGljIHZvaWQgcm13X2NsZWFyX2Z3KHN0cnVjdCBpbnRlbF91bmNvcmUg
KnVuY29yZSwgaTkxNV9yZWdfdCByZWcsIHUzMiBjbHIpCiAJaW50ZWxfdW5jb3JlX3Jtd19mdyh1
bmNvcmUsIHJlZywgY2xyLCAwKTsKIH0KIAotc3RhdGljIHZvaWQgc2tpcF9jb250ZXh0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQotewotCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpodW5nX2N0eCA9
IHJxLT5jb250ZXh0OwotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeV9mcm9tX3JjdShycSwgJmh1bmdf
Y3R4LT50aW1lbGluZS0+cmVxdWVzdHMsIGxpbmspIHsKLQkJaWYgKCFpOTE1X3JlcXVlc3RfaXNf
YWN0aXZlKHJxKSkKLQkJCXJldHVybjsKLQotCQlpZiAocnEtPmNvbnRleHQgPT0gaHVuZ19jdHgp
IHsKLQkJCWk5MTVfcmVxdWVzdF9zZXRfZXJyb3Jfb25jZShycSwgLUVJTyk7Ci0JCQlfX2k5MTVf
cmVxdWVzdF9za2lwKHJxKTsKLQkJfQotCX0KLX0KLQogc3RhdGljIHZvaWQgY2xpZW50X21hcmtf
Z3VpbHR5KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsIGJvb2wgYmFubmVkKQogewogCXN0
cnVjdCBkcm1faTkxNV9maWxlX3ByaXZhdGUgKmZpbGVfcHJpdiA9IGN0eC0+ZmlsZV9wcml2OwpA
QCAtODgsMTAgKzcyLDggQEAgc3RhdGljIGJvb2wgbWFya19ndWlsdHkoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiAJYm9vbCBiYW5uZWQ7CiAJaW50IGk7CiAKLQlpZiAoaW50ZWxfY29udGV4dF9p
c19jbG9zZWQocnEtPmNvbnRleHQpKSB7Ci0JCWludGVsX2NvbnRleHRfc2V0X2Jhbm5lZChycS0+
Y29udGV4dCk7CisJaWYgKGludGVsX2NvbnRleHRfaXNfY2xvc2VkKHJxLT5jb250ZXh0KSkKIAkJ
cmV0dXJuIHRydWU7Ci0JfQogCiAJcmN1X3JlYWRfbG9jaygpOwogCWN0eCA9IHJjdV9kZXJlZmVy
ZW5jZShycS0+Y29udGV4dC0+Z2VtX2NvbnRleHQpOwpAQCAtMTIzLDExICsxMDUsOSBAQCBzdGF0
aWMgYm9vbCBtYXJrX2d1aWx0eShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAliYW5uZWQgPSAh
aTkxNV9nZW1fY29udGV4dF9pc19yZWNvdmVyYWJsZShjdHgpOwogCWlmICh0aW1lX2JlZm9yZShq
aWZmaWVzLCBwcmV2X2hhbmcgKyBDT05URVhUX0ZBU1RfSEFOR19KSUZGSUVTKSkKIAkJYmFubmVk
ID0gdHJ1ZTsKLQlpZiAoYmFubmVkKSB7CisJaWYgKGJhbm5lZCkKIAkJZHJtX2RiZygmY3R4LT5p
OTE1LT5kcm0sICJjb250ZXh0ICVzOiBndWlsdHkgJWQsIGJhbm5lZFxuIiwKIAkJCWN0eC0+bmFt
ZSwgYXRvbWljX3JlYWQoJmN0eC0+Z3VpbHR5X2NvdW50KSk7Ci0JCWludGVsX2NvbnRleHRfc2V0
X2Jhbm5lZChycS0+Y29udGV4dCk7Ci0JfQogCiAJY2xpZW50X21hcmtfZ3VpbHR5KGN0eCwgYmFu
bmVkKTsKIApAQCAtMTQ5LDYgKzEyOSw4IEBAIHN0YXRpYyB2b2lkIG1hcmtfaW5ub2NlbnQoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAKIHZvaWQgX19pOTE1X3JlcXVlc3RfcmVzZXQoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQogeworCWJvb2wgYmFubmVkID0gZmFsc2U7
CisKIAlSUV9UUkFDRShycSwgImd1aWx0eT8gJXNcbiIsIHllc25vKGd1aWx0eSkpOwogCUdFTV9C
VUdfT04oX19pOTE1X3JlcXVlc3RfaXNfY29tcGxldGUocnEpKTsKIApAQCAtMTU2LDEzICsxMzgs
MTUgQEAgdm9pZCBfX2k5MTVfcmVxdWVzdF9yZXNldChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwg
Ym9vbCBndWlsdHkpCiAJaWYgKGd1aWx0eSkgewogCQlpOTE1X3JlcXVlc3Rfc2V0X2Vycm9yX29u
Y2UocnEsIC1FSU8pOwogCQlfX2k5MTVfcmVxdWVzdF9za2lwKHJxKTsKLQkJaWYgKG1hcmtfZ3Vp
bHR5KHJxKSkKLQkJCXNraXBfY29udGV4dChycSk7CisJCWJhbm5lZCA9IG1hcmtfZ3VpbHR5KHJx
KTsKIAl9IGVsc2UgewogCQlpOTE1X3JlcXVlc3Rfc2V0X2Vycm9yX29uY2UocnEsIC1FQUdBSU4p
OwogCQltYXJrX2lubm9jZW50KHJxKTsKIAl9CiAJcmN1X3JlYWRfdW5sb2NrKCk7CisKKwlpZiAo
YmFubmVkKQorCQlpbnRlbF9jb250ZXh0X2JhbihycS0+Y29udGV4dCwgcnEpOwogfQogCiBzdGF0
aWMgYm9vbCBpOTE1X2luX3Jlc2V0KHN0cnVjdCBwY2lfZGV2ICpwZGV2KQpAQCAtODI2LDYgKzgx
MCw4IEBAIHN0YXRpYyBpbnQgZ3RfcmVzZXQoc3RydWN0IGludGVsX2d0ICpndCwgaW50ZWxfZW5n
aW5lX21hc2tfdCBzdGFsbGVkX21hc2spCiAJCV9faW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwg
c3RhbGxlZF9tYXNrICYgZW5naW5lLT5tYXNrKTsKIAlsb2NhbF9iaF9lbmFibGUoKTsKIAorCWlu
dGVsX3VjX3Jlc2V0KCZndC0+dWMsIHRydWUpOworCiAJaW50ZWxfZ2d0dF9yZXN0b3JlX2ZlbmNl
cyhndC0+Z2d0dCk7CiAKIAlyZXR1cm4gZXJyOwpAQCAtODUwLDYgKzgzNiw4IEBAIHN0YXRpYyB2
b2lkIHJlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBpbnRlbF9lbmdpbmVfbWFza190
IGF3YWtlKQogCQlpZiAoYXdha2UgJiBlbmdpbmUtPm1hc2spCiAJCQlpbnRlbF9lbmdpbmVfcG1f
cHV0KGVuZ2luZSk7CiAJfQorCisJaW50ZWxfdWNfcmVzZXRfZmluaXNoKCZndC0+dWMpOwogfQog
CiBzdGF0aWMgdm9pZCBub3Bfc3VibWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVx
dWVzdCkKQEAgLTkwMyw2ICs4OTEsNyBAQCBzdGF0aWMgdm9pZCBfX2ludGVsX2d0X3NldF93ZWRn
ZWQoc3RydWN0IGludGVsX2d0ICpndCkKIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndCwgaWQp
CiAJCWlmIChlbmdpbmUtPnJlc2V0LmNhbmNlbCkKIAkJCWVuZ2luZS0+cmVzZXQuY2FuY2VsKGVu
Z2luZSk7CisJaW50ZWxfdWNfY2FuY2VsX3JlcXVlc3RzKCZndC0+dWMpOwogCWxvY2FsX2JoX2Vu
YWJsZSgpOwogCiAJcmVzZXRfZmluaXNoKGd0LCBhd2FrZSk7CkBAIC0xMTkxLDYgKzExODAsOSBA
QCBpbnQgX19pbnRlbF9lbmdpbmVfcmVzZXRfYmgoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lLCBjb25zdCBjaGFyICptc2cpCiAJRU5HSU5FX1RSQUNFKGVuZ2luZSwgImZsYWdzPSVseFxu
IiwgZ3QtPnJlc2V0LmZsYWdzKTsKIAlHRU1fQlVHX09OKCF0ZXN0X2JpdChJOTE1X1JFU0VUX0VO
R0lORSArIGVuZ2luZS0+aWQsICZndC0+cmVzZXQuZmxhZ3MpKTsKIAorCWlmIChpbnRlbF9lbmdp
bmVfdXNlc19ndWMoZW5naW5lKSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKIAlpZiAoIWludGVsX2Vu
Z2luZV9wbV9nZXRfaWZfYXdha2UoZW5naW5lKSkKIAkJcmV0dXJuIDA7CiAKQEAgLTEyMDEsMTMg
KzExOTMsMTAgQEAgaW50IF9faW50ZWxfZW5naW5lX3Jlc2V0X2JoKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwgY29uc3QgY2hhciAqbXNnKQogCQkJICAgIlJlc2V0dGluZyAlcyBmb3Ig
JXNcbiIsIGVuZ2luZS0+bmFtZSwgbXNnKTsKIAlhdG9taWNfaW5jKCZlbmdpbmUtPmk5MTUtPmdw
dV9lcnJvci5yZXNldF9lbmdpbmVfY291bnRbZW5naW5lLT51YWJpX2NsYXNzXSk7CiAKLQlpZiAo
aW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2luZSkpCi0JCXJldCA9IGludGVsX2d1Y19yZXNldF9l
bmdpbmUoJmVuZ2luZS0+Z3QtPnVjLmd1YywgZW5naW5lKTsKLQllbHNlCi0JCXJldCA9IGludGVs
X2d0X3Jlc2V0X2VuZ2luZShlbmdpbmUpOworCXJldCA9IGludGVsX2d0X3Jlc2V0X2VuZ2luZShl
bmdpbmUpOwogCWlmIChyZXQpIHsKIAkJLyogSWYgd2UgZmFpbCBoZXJlLCB3ZSBleHBlY3QgdG8g
ZmFsbGJhY2sgdG8gYSBnbG9iYWwgcmVzZXQgKi8KLQkJRU5HSU5FX1RSQUNFKGVuZ2luZSwgIkZh
aWxlZCB0byByZXNldCwgZXJyOiAlZFxuIiwgcmV0KTsKKwkJRU5HSU5FX1RSQUNFKGVuZ2luZSwg
IkZhaWxlZCB0byByZXNldCAlcywgZXJyOiAlZFxuIiwgZW5naW5lLT5uYW1lLCByZXQpOwogCQln
b3RvIG91dDsKIAl9CiAKQEAgLTEzNDEsNyArMTMzMCw4IEBAIHZvaWQgaW50ZWxfZ3RfaGFuZGxl
X2Vycm9yKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJICogVHJ5IGVuZ2luZSByZXNldCB3aGVuIGF2
YWlsYWJsZS4gV2UgZmFsbCBiYWNrIHRvIGZ1bGwgcmVzZXQgaWYKIAkgKiBzaW5nbGUgcmVzZXQg
ZmFpbHMuCiAJICovCi0JaWYgKGludGVsX2hhc19yZXNldF9lbmdpbmUoZ3QpICYmICFpbnRlbF9n
dF9pc193ZWRnZWQoZ3QpKSB7CisJaWYgKCFpbnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZn
dC0+dWMpICYmCisJICAgIGludGVsX2hhc19yZXNldF9lbmdpbmUoZ3QpICYmICFpbnRlbF9ndF9p
c193ZWRnZWQoZ3QpKSB7CiAJCWxvY2FsX2JoX2Rpc2FibGUoKTsKIAkJZm9yX2VhY2hfZW5naW5l
X21hc2tlZChlbmdpbmUsIGd0LCBlbmdpbmVfbWFzaywgdG1wKSB7CiAJCQlCVUlMRF9CVUdfT04o
STkxNV9SRVNFVF9NT0RFU0VUID49IEk5MTVfUkVTRVRfRU5HSU5FKTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9uLmMKaW5kZXggNWM0ZDIwNGQwN2Nj
Li4wMzkzOWJlNDI5N2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X3Jpbmdfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdfc3VibWlzc2lvbi5jCkBAIC01ODYsOSArNTg2LDI5IEBAIHN0YXRpYyB2b2lkIHJpbmdfY29u
dGV4dF9yZXNldChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJY2xlYXJfYml0KENPTlRFWFRf
VkFMSURfQklULCAmY2UtPmZsYWdzKTsKIH0KIAorc3RhdGljIHZvaWQgcmluZ19jb250ZXh0X2Jh
bihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKworCWlmICghcnEgfHwg
IWk5MTVfcmVxdWVzdF9pc19hY3RpdmUocnEpKQorCQlyZXR1cm47CisKKwllbmdpbmUgPSBycS0+
ZW5naW5lOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2Nr
KTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X2NvbnRpbnVlKHJxLCAmZW5naW5lLT5zY2hlZF9lbmdp
bmUtPnJlcXVlc3RzLAorCQkJCSAgICAgc2NoZWQubGluaykKKwkJaWYgKHJxLT5jb250ZXh0ID09
IGNlKSB7CisJCQlpOTE1X3JlcXVlc3Rfc2V0X2Vycm9yX29uY2UocnEsIC1FSU8pOworCQkJX19p
OTE1X3JlcXVlc3Rfc2tpcChycSk7CisJCX0KK30KKwogc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRl
bF9jb250ZXh0X29wcyByaW5nX2NvbnRleHRfb3BzID0gewogCS5hbGxvYyA9IHJpbmdfY29udGV4
dF9hbGxvYywKIAorCS5iYW4gPSByaW5nX2NvbnRleHRfYmFuLAorCiAJLnByZV9waW4gPSByaW5n
X2NvbnRleHRfcHJlX3BpbiwKIAkucGluID0gcmluZ19jb250ZXh0X3BpbiwKIAkudW5waW4gPSBy
aW5nX2NvbnRleHRfdW5waW4sCkBAIC0xMDQ3LDYgKzEwNjcsMzAgQEAgc3RhdGljIHZvaWQgc2V0
dXBfaXJxKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAl9CiB9CiAKK3N0YXRpYyB2
b2lkIHJpbmdfYnVtcF9zZXJpYWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorewor
CWVuZ2luZS0+c2VyaWFsKys7Cit9CisKK3N0YXRpYyB2b2lkIGFkZF90b19lbmdpbmUoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPmVuZ2luZS0+
c2NoZWRfZW5naW5lLT5sb2NrKTsKKwlsaXN0X21vdmVfdGFpbCgmcnEtPnNjaGVkLmxpbmssICZy
cS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPnJlcXVlc3RzKTsKK30KKworc3RhdGljIHZvaWQgcmVt
b3ZlX2Zyb21fZW5naW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCXNwaW5fbG9ja19p
cnEoJnJxLT5lbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisJbGlzdF9kZWxfaW5pdCgmcnEt
PnNjaGVkLmxpbmspOworCisJLyogUHJldmVudCBmdXJ0aGVyIF9fYXdhaXRfZXhlY3V0aW9uKCkg
cmVnaXN0ZXJpbmcgYSBjYiwgdGhlbiBmbHVzaCAqLworCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFH
X0FDVElWRSwgJnJxLT5mZW5jZS5mbGFncyk7CisKKwlzcGluX3VubG9ja19pcnEoJnJxLT5lbmdp
bmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisKKwlpOTE1X3JlcXVlc3Rfbm90aWZ5X2V4ZWN1dGVf
Y2JfaW1tKHJxKTsKK30KKwogc3RhdGljIHZvaWQgc2V0dXBfY29tbW9uKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGVu
Z2luZS0+aTkxNTsKQEAgLTEwNjQsOCArMTEwOCwxMiBAQCBzdGF0aWMgdm9pZCBzZXR1cF9jb21t
b24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVuZ2luZS0+cmVzZXQuY2FuY2Vs
ID0gcmVzZXRfY2FuY2VsOwogCWVuZ2luZS0+cmVzZXQuZmluaXNoID0gcmVzZXRfZmluaXNoOwog
CisJZW5naW5lLT5hZGRfYWN0aXZlX3JlcXVlc3QgPSBhZGRfdG9fZW5naW5lOworCWVuZ2luZS0+
cmVtb3ZlX2FjdGl2ZV9yZXF1ZXN0ID0gcmVtb3ZlX2Zyb21fZW5naW5lOworCiAJZW5naW5lLT5j
b3BzID0gJnJpbmdfY29udGV4dF9vcHM7CiAJZW5naW5lLT5yZXF1ZXN0X2FsbG9jID0gcmluZ19y
ZXF1ZXN0X2FsbG9jOworCWVuZ2luZS0+YnVtcF9zZXJpYWwgPSByaW5nX2J1bXBfc2VyaWFsOwog
CiAJLyoKIAkgKiBVc2luZyBhIGdsb2JhbCBleGVjdXRpb24gdGltZWxpbmU7IHRoZSBwcmV2aW91
cyBmaW5hbCBicmVhZGNydW1iIGlzCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ycHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jwcy5jCmluZGV4
IDA2ZTlhOGVkNGUwMy4uMGM4ZTdmMmIwNmYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ycHMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9y
cHMuYwpAQCAtMTg3Nyw2ICsxODc3LDEwIEBAIHZvaWQgaW50ZWxfcnBzX2luaXQoc3RydWN0IGlu
dGVsX3JwcyAqcnBzKQogCiAJaWYgKEdSQVBISUNTX1ZFUihpOTE1KSA+PSA4ICYmIEdSQVBISUNT
X1ZFUihpOTE1KSA8IDExKQogCQlycHMtPnBtX2ludHJtc2tfbWJ6IHw9IEdFTjhfUE1JTlRSX0RJ
U0FCTEVfUkVESVJFQ1RfVE9fR1VDOworCisJLyogR3VDIG5lZWRzIEFSQVQgZXhwaXJlZCBpbnRl
cnJ1cHQgdW5tYXNrZWQgKi8KKwlpZiAoaW50ZWxfdWNfdXNlc19ndWNfc3VibWlzc2lvbigmcnBz
X3RvX2d0KHJwcyktPnVjKSkKKwkJcnBzLT5wbV9pbnRybXNrX21ieiB8PSBBUkFUX0VYUElSRURf
SU5UUk1TSzsKIH0KIAogdm9pZCBpbnRlbF9ycHNfc2FuaXRpemUoc3RydWN0IGludGVsX3JwcyAq
cnBzKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3Vu
ZHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMKaW5kZXgg
ZDlhNWE0NDVjZWVjLi4yMThhODQyZDg3NjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfd29ya2Fyb3VuZHMuYwpAQCAtMTUwLDEzICsxNTAsMTQgQEAgc3RhdGljIHZvaWQgX3dh
X2FkZChzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwsIGNvbnN0IHN0cnVjdCBpOTE1X3dhICp3YSkK
IH0KIAogc3RhdGljIHZvaWQgd2FfYWRkKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9y
ZWdfdCByZWcsCi0JCSAgIHUzMiBjbGVhciwgdTMyIHNldCwgdTMyIHJlYWRfbWFzaykKKwkJICAg
dTMyIGNsZWFyLCB1MzIgc2V0LCB1MzIgcmVhZF9tYXNrLCBib29sIG1hc2tlZF9yZWcpCiB7CiAJ
c3RydWN0IGk5MTVfd2Egd2EgPSB7CiAJCS5yZWcgID0gcmVnLAogCQkuY2xyICA9IGNsZWFyLAog
CQkuc2V0ICA9IHNldCwKIAkJLnJlYWQgPSByZWFkX21hc2ssCisJCS5tYXNrZWRfcmVnID0gbWFz
a2VkX3JlZywKIAl9OwogCiAJX3dhX2FkZCh3YWwsICZ3YSk7CkBAIC0xNjUsNyArMTY2LDcgQEAg
c3RhdGljIHZvaWQgd2FfYWRkKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9yZWdfdCBy
ZWcsCiBzdGF0aWMgdm9pZAogd2Ffd3JpdGVfY2xyX3NldChzdHJ1Y3QgaTkxNV93YV9saXN0ICp3
YWwsIGk5MTVfcmVnX3QgcmVnLCB1MzIgY2xlYXIsIHUzMiBzZXQpCiB7Ci0Jd2FfYWRkKHdhbCwg
cmVnLCBjbGVhciwgc2V0LCBjbGVhcik7CisJd2FfYWRkKHdhbCwgcmVnLCBjbGVhciwgc2V0LCBj
bGVhciwgZmFsc2UpOwogfQogCiBzdGF0aWMgdm9pZApAQCAtMjAwLDIwICsyMDEsMjAgQEAgd2Ff
d3JpdGVfY2xyKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwgaTkxNV9yZWdfdCByZWcsIHUzMiBj
bHIpCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2VuKHN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCwg
aTkxNV9yZWdfdCByZWcsIHUzMiB2YWwpCiB7Ci0Jd2FfYWRkKHdhbCwgcmVnLCAwLCBfTUFTS0VE
X0JJVF9FTkFCTEUodmFsKSwgdmFsKTsKKwl3YV9hZGQod2FsLCByZWcsIDAsIF9NQVNLRURfQklU
X0VOQUJMRSh2YWwpLCB2YWwsIHRydWUpOwogfQogCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2Rp
cyhzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwsIGk5MTVfcmVnX3QgcmVnLCB1MzIgdmFsKQogewot
CXdhX2FkZCh3YWwsIHJlZywgMCwgX01BU0tFRF9CSVRfRElTQUJMRSh2YWwpLCB2YWwpOworCXdh
X2FkZCh3YWwsIHJlZywgMCwgX01BU0tFRF9CSVRfRElTQUJMRSh2YWwpLCB2YWwsIHRydWUpOwog
fQogCiBzdGF0aWMgdm9pZAogd2FfbWFza2VkX2ZpZWxkX3NldChzdHJ1Y3QgaTkxNV93YV9saXN0
ICp3YWwsIGk5MTVfcmVnX3QgcmVnLAogCQkgICAgdTMyIG1hc2ssIHUzMiB2YWwpCiB7Ci0Jd2Ff
YWRkKHdhbCwgcmVnLCAwLCBfTUFTS0VEX0ZJRUxEKG1hc2ssIHZhbCksIG1hc2spOworCXdhX2Fk
ZCh3YWwsIHJlZywgMCwgX01BU0tFRF9GSUVMRChtYXNrLCB2YWwpLCBtYXNrLCB0cnVlKTsKIH0K
IAogc3RhdGljIHZvaWQgZ2VuNl9jdHhfd29ya2Fyb3VuZHNfaW5pdChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUsCkBAIC01ODMsMTAgKzU4NCwxMCBAQCBzdGF0aWMgdm9pZCBpY2xfY3R4
X3dvcmthcm91bmRzX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJICAg
ICBHRU4xMV9CTEVORF9FTUJfRklYX0RJU0FCTEVfSU5fUkNDKTsKIAogCS8qIFdhRW5hYmxlRmxv
YXRCbGVuZE9wdGltaXphdGlvbjppY2wgKi8KLQl3YV93cml0ZV9jbHJfc2V0KHdhbCwKLQkJCSBH
RU4xMF9DQUNIRV9NT0RFX1NTLAotCQkJIDAsIC8qIHdyaXRlLW9ubHksIHNvIHNraXAgdmFsaWRh
dGlvbiAqLwotCQkJIF9NQVNLRURfQklUX0VOQUJMRShGTE9BVF9CTEVORF9PUFRJTUlaQVRJT05f
RU5BQkxFKSk7CisJd2FfYWRkKHdhbCwgR0VOMTBfQ0FDSEVfTU9ERV9TUywgMCwKKwkgICAgICAg
X01BU0tFRF9CSVRfRU5BQkxFKEZMT0FUX0JMRU5EX09QVElNSVpBVElPTl9FTkFCTEUpLAorCSAg
ICAgICAwIC8qIHdyaXRlLW9ubHksIHNvIHNraXAgdmFsaWRhdGlvbiAqLywKKwkgICAgICAgdHJ1
ZSk7CiAKIAkvKiBXYURpc2FibGVHUEdQVU1pZFRocmVhZFByZWVtcHRpb246aWNsICovCiAJd2Ff
bWFza2VkX2ZpZWxkX3NldCh3YWwsIEdFTjhfQ1NfQ0hJQ0tFTjEsCkBAIC02MzEsNyArNjMyLDcg
QEAgc3RhdGljIHZvaWQgZ2VuMTJfY3R4X2d0X3R1bmluZ19pbml0KHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwKIAkgICAgICAgRkZfTU9ERTIsCiAJICAgICAgIEZGX01PREUyX1REU19U
SU1FUl9NQVNLLAogCSAgICAgICBGRl9NT0RFMl9URFNfVElNRVJfMTI4LAotCSAgICAgICAwKTsK
KwkgICAgICAgMCwgZmFsc2UpOwogfQogCiBzdGF0aWMgdm9pZCBnZW4xMl9jdHhfd29ya2Fyb3Vu
ZHNfaW5pdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCkBAIC02NjksNyArNjcwLDcg
QEAgc3RhdGljIHZvaWQgZ2VuMTJfY3R4X3dvcmthcm91bmRzX2luaXQoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lLAogCSAgICAgICBGRl9NT0RFMiwKIAkgICAgICAgRkZfTU9ERTJfR1Nf
VElNRVJfTUFTSywKIAkgICAgICAgRkZfTU9ERTJfR1NfVElNRVJfMjI0LAotCSAgICAgICAwKTsK
KwkgICAgICAgMCwgZmFsc2UpOwogfQogCiBzdGF0aWMgdm9pZCBkZzFfY3R4X3dvcmthcm91bmRz
X2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLApAQCAtODQwLDcgKzg0MSw3IEBA
IGhzd19ndF93b3JrYXJvdW5kc19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBz
dHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwpCiAJd2FfYWRkKHdhbCwKIAkgICAgICAgSFNXX1JPV19D
SElDS0VOMywgMCwKIAkgICAgICAgX01BU0tFRF9CSVRfRU5BQkxFKEhTV19ST1dfQ0hJQ0tFTjNf
TDNfR0xPQkFMX0FUT01JQ1NfRElTQUJMRSksCi0JCTAgLyogWFhYIGRvZXMgdGhpcyByZWcgZXhp
c3Q/ICovKTsKKwkgICAgICAgMCAvKiBYWFggZG9lcyB0aGlzIHJlZyBleGlzdD8gKi8sIHRydWUp
OwogCiAJLyogV2FWU1JlZkNvdW50RnVsbGZvcmNlTWlzc0Rpc2FibGU6aHN3ICovCiAJd2Ffd3Jp
dGVfY2xyKHdhbCwgR0VON19GRl9USFJFQURfTU9ERSwgR0VON19GRl9WU19SRUZfQ05UX0ZGTUUp
OwpAQCAtMTkyOSwxMCArMTkzMCwxMCBAQCByY3NfZW5naW5lX3dhX2luaXQoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lLCBzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwpCiAJCSAqIGRpc2Fi
bGUgYml0LCB3aGljaCB3ZSBkb24ndCB0b3VjaCBoZXJlLCBidXQgaXQncyBnb29kCiAJCSAqIHRv
IGtlZXAgaW4gbWluZCAoc2VlIDNEU1RBVEVfUFMgYW5kIDNEU1RBVEVfV00pLgogCQkgKi8KLQkJ
d2FfYWRkKHdhbCwgR0VON19HVF9NT0RFLCAwLAotCQkgICAgICAgX01BU0tFRF9GSUVMRChHRU42
X1dJWl9IQVNISU5HX01BU0ssCi0JCQkJICAgICBHRU42X1dJWl9IQVNISU5HXzE2eDQpLAotCQkg
ICAgICAgR0VONl9XSVpfSEFTSElOR18xNng0KTsKKwkJd2FfbWFza2VkX2ZpZWxkX3NldCh3YWws
CisJCQkJICAgIEdFTjdfR1RfTU9ERSwKKwkJCQkgICAgR0VONl9XSVpfSEFTSElOR19NQVNLLAor
CQkJCSAgICBHRU42X1dJWl9IQVNISU5HXzE2eDQpOwogCX0KIAogCWlmIChJU19HUkFQSElDU19W
RVIoaTkxNSwgNiwgNykpCkBAIC0xOTgyLDEwICsxOTgzLDEwIEBAIHJjc19lbmdpbmVfd2FfaW5p
dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBpOTE1X3dhX2xpc3QgKndh
bCkKIAkJICogZGlzYWJsZSBiaXQsIHdoaWNoIHdlIGRvbid0IHRvdWNoIGhlcmUsIGJ1dCBpdCdz
IGdvb2QKIAkJICogdG8ga2VlcCBpbiBtaW5kIChzZWUgM0RTVEFURV9QUyBhbmQgM0RTVEFURV9X
TSkuCiAJCSAqLwotCQl3YV9hZGQod2FsLAotCQkgICAgICAgR0VONl9HVF9NT0RFLCAwLAotCQkg
ICAgICAgX01BU0tFRF9GSUVMRChHRU42X1dJWl9IQVNISU5HX01BU0ssIEdFTjZfV0laX0hBU0hJ
TkdfMTZ4NCksCi0JCSAgICAgICBHRU42X1dJWl9IQVNISU5HXzE2eDQpOworCQl3YV9tYXNrZWRf
ZmllbGRfc2V0KHdhbCwKKwkJCQkgICAgR0VONl9HVF9NT0RFLAorCQkJCSAgICBHRU42X1dJWl9I
QVNISU5HX01BU0ssCisJCQkJICAgIEdFTjZfV0laX0hBU0hJTkdfMTZ4NCk7CiAKIAkJLyogV2FE
aXNhYmxlX1JlbmRlckNhY2hlX09wZXJhdGlvbmFsRmx1c2g6c25iICovCiAJCXdhX21hc2tlZF9k
aXMod2FsLCBDQUNIRV9NT0RFXzAsIFJDX09QX0ZMVVNIX0VOQUJMRSk7CkBAIC0yMDA2LDcgKzIw
MDcsNyBAQCByY3NfZW5naW5lX3dhX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCBzdHJ1Y3QgaTkxNV93YV9saXN0ICp3YWwpCiAJCXdhX2FkZCh3YWwsIE1JX01PREUsCiAJCSAg
ICAgICAwLCBfTUFTS0VEX0JJVF9FTkFCTEUoVlNfVElNRVJfRElTUEFUQ0gpLAogCQkgICAgICAg
LyogWFhYIGJpdCBkb2Vzbid0IHN0aWNrIG9uIEJyb2Fkd2F0ZXIgKi8KLQkJICAgICAgIElTX0k5
NjVHKGk5MTUpID8gMCA6IFZTX1RJTUVSX0RJU1BBVENIKTsKKwkJICAgICAgIElTX0k5NjVHKGk5
MTUpID8gMCA6IFZTX1RJTUVSX0RJU1BBVENILCB0cnVlKTsKIAogCWlmIChHUkFQSElDU19WRVIo
aTkxNSkgPT0gNCkKIAkJLyoKQEAgLTIwMjEsNyArMjAyMiw4IEBAIHJjc19lbmdpbmVfd2FfaW5p
dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBpOTE1X3dhX2xpc3QgKndh
bCkKIAkJICovCiAJCXdhX2FkZCh3YWwsIEVDT1NLUEQsCiAJCSAgICAgICAwLCBfTUFTS0VEX0JJ
VF9FTkFCTEUoRUNPX0NPTlNUQU5UX0JVRkZFUl9TUl9ESVNBQkxFKSwKLQkJICAgICAgIDAgLyog
WFhYIGJpdCBkb2Vzbid0IHN0aWNrIG9uIEJyb2Fkd2F0ZXIgKi8pOworCQkgICAgICAgMCAvKiBY
WFggYml0IGRvZXNuJ3Qgc3RpY2sgb24gQnJvYWR3YXRlciAqLywKKwkJICAgICAgIHRydWUpOwog
fQogCiBzdGF0aWMgdm9pZApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfd29ya2Fyb3VuZHNfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dv
cmthcm91bmRzX3R5cGVzLmgKaW5kZXggYzIxNDExMWVhMzY3Li4xZTg3MzY4MTc5NWQgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzX3R5cGVzLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHNfdHlwZXMuaApA
QCAtMTUsNiArMTUsNyBAQCBzdHJ1Y3QgaTkxNV93YSB7CiAJdTMyCQljbHI7CiAJdTMyCQlzZXQ7
CiAJdTMyCQlyZWFkOworCWJvb2wJCW1hc2tlZF9yZWc7CiB9OwogCiBzdHJ1Y3QgaTkxNV93YV9s
aXN0IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCmluZGV4IDY4OTcwMzk4ZTRl
Zi4uYzEyZmYzYTc1Y2U2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2Nr
X2VuZ2luZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKQEAg
LTIzNSw2ICsyMzUsMzUgQEAgc3RhdGljIHZvaWQgbW9ja19zdWJtaXRfcmVxdWVzdChzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+
aHdfbG9jaywgZmxhZ3MpOwogfQogCitzdGF0aWMgdm9pZCBtb2NrX2FkZF90b19lbmdpbmUoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPmVuZ2lu
ZS0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKwlsaXN0X21vdmVfdGFpbCgmcnEtPnNjaGVkLmxpbmss
ICZycS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPnJlcXVlc3RzKTsKK30KKworc3RhdGljIHZvaWQg
bW9ja19yZW1vdmVfZnJvbV9lbmdpbmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCAqbG9ja2VkOworCisJLyoKKwkgKiBWaXJ0dWFs
IGVuZ2luZXMgY29tcGxpY2F0ZSBhY3F1aXJpbmcgdGhlIGVuZ2luZSB0aW1lbGluZSBsb2NrLAor
CSAqIGFzIHRoZWlyIHJxLT5lbmdpbmUgcG9pbnRlciBpcyBub3Qgc3RhYmxlIHVudGlsIHVuZGVy
IHRoYXQKKwkgKiBlbmdpbmUgbG9jay4gVGhlIHNpbXBsZSBwbG95IHdlIHVzZSBpcyB0byB0YWtl
IHRoZSBsb2NrIHRoZW4KKwkgKiBjaGVjayB0aGF0IHRoZSBycSBzdGlsbCBiZWxvbmdzIHRvIHRo
ZSBuZXdseSBsb2NrZWQgZW5naW5lLgorCSAqLworCisJbG9ja2VkID0gUkVBRF9PTkNFKHJxLT5l
bmdpbmUpOworCXNwaW5fbG9ja19pcnEoJmxvY2tlZC0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKwl3
aGlsZSAodW5saWtlbHkobG9ja2VkICE9IChlbmdpbmUgPSBSRUFEX09OQ0UocnEtPmVuZ2luZSkp
KSkgeworCQlzcGluX3VubG9jaygmbG9ja2VkLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCQlzcGlu
X2xvY2soJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrKTsKKwkJbG9ja2VkID0gZW5naW5lOwor
CX0KKwlsaXN0X2RlbF9pbml0KCZycS0+c2NoZWQubGluayk7CisJc3Bpbl91bmxvY2tfaXJxKCZs
b2NrZWQtPnNjaGVkX2VuZ2luZS0+bG9jayk7Cit9CisKKwogc3RhdGljIHZvaWQgbW9ja19yZXNl
dF9wcmVwYXJlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIH0KQEAgLTI4NCw3
ICszMTMsNyBAQCBzdGF0aWMgdm9pZCBtb2NrX2VuZ2luZV9yZWxlYXNlKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKIAlHRU1fQlVHX09OKHRpbWVyX3BlbmRpbmcoJm1vY2stPmh3X2Rl
bGF5KSk7CiAKIAlpOTE1X3NjaGVkX2VuZ2luZV9wdXQoZW5naW5lLT5zY2hlZF9lbmdpbmUpOwot
CWludGVsX2JyZWFkY3J1bWJzX2ZyZWUoZW5naW5lLT5icmVhZGNydW1icyk7CisJaW50ZWxfYnJl
YWRjcnVtYnNfcHV0KGVuZ2luZS0+YnJlYWRjcnVtYnMpOwogCiAJaW50ZWxfY29udGV4dF91bnBp
bihlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKIAlpbnRlbF9jb250ZXh0X3B1dChlbmdpbmUtPmtl
cm5lbF9jb250ZXh0KTsKQEAgLTI5Miw2ICszMjEsMTEgQEAgc3RhdGljIHZvaWQgbW9ja19lbmdp
bmVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJaW50ZWxfZW5naW5l
X2ZpbmlfcmV0aXJlKGVuZ2luZSk7CiB9CiAKK3N0YXRpYyB2b2lkIG1vY2tfYnVtcF9zZXJpYWwo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCWVuZ2luZS0+c2VyaWFsKys7Cit9
CisKIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm1vY2tfZW5naW5lKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1LAogCQkJCSAgICBjb25zdCBjaGFyICpuYW1lLAogCQkJCSAgICBpbnQgaWQp
CkBAIC0zMTgsOSArMzUyLDEyIEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm1vY2tfZW5naW5l
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCiAJZW5naW5lLT5iYXNlLmNvcHMgPSAm
bW9ja19jb250ZXh0X29wczsKIAllbmdpbmUtPmJhc2UucmVxdWVzdF9hbGxvYyA9IG1vY2tfcmVx
dWVzdF9hbGxvYzsKKwllbmdpbmUtPmJhc2UuYnVtcF9zZXJpYWwgPSBtb2NrX2J1bXBfc2VyaWFs
OwogCWVuZ2luZS0+YmFzZS5lbWl0X2ZsdXNoID0gbW9ja19lbWl0X2ZsdXNoOwogCWVuZ2luZS0+
YmFzZS5lbWl0X2ZpbmlfYnJlYWRjcnVtYiA9IG1vY2tfZW1pdF9icmVhZGNydW1iOwogCWVuZ2lu
ZS0+YmFzZS5zdWJtaXRfcmVxdWVzdCA9IG1vY2tfc3VibWl0X3JlcXVlc3Q7CisJZW5naW5lLT5i
YXNlLmFkZF9hY3RpdmVfcmVxdWVzdCA9IG1vY2tfYWRkX3RvX2VuZ2luZTsKKwllbmdpbmUtPmJh
c2UucmVtb3ZlX2FjdGl2ZV9yZXF1ZXN0ID0gbW9ja19yZW1vdmVfZnJvbV9lbmdpbmU7CiAKIAll
bmdpbmUtPmJhc2UucmVzZXQucHJlcGFyZSA9IG1vY2tfcmVzZXRfcHJlcGFyZTsKIAllbmdpbmUt
PmJhc2UucmVzZXQucmV3aW5kID0gbW9ja19yZXNldF9yZXdpbmQ7CkBAIC0zNzAsNyArNDA3LDcg
QEAgaW50IG1vY2tfZW5naW5lX2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CXJldHVybiAwOwogCiBlcnJfYnJlYWRjcnVtYnM6Ci0JaW50ZWxfYnJlYWRjcnVtYnNfZnJlZShl
bmdpbmUtPmJyZWFkY3J1bWJzKTsKKwlpbnRlbF9icmVhZGNydW1ic19wdXQoZW5naW5lLT5icmVh
ZGNydW1icyk7CiBlcnJfc2NoZWR1bGU6CiAJaTkxNV9zY2hlZF9lbmdpbmVfcHV0KGVuZ2luZS0+
c2NoZWRfZW5naW5lKTsKIAlyZXR1cm4gLUVOT01FTTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2NvbnRleHQuYwppbmRleCAyNjY4NWI5MjcxNjkuLmZhN2I5OWE2NzFkZCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29udGV4dC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYwpAQCAtMjA5LDcgKzIw
OSwxMyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9hY3RpdmVfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJICogVGhpcyB0ZXN0IG1ha2VzIHN1cmUgdGhhdCB0aGUgY29udGV4
dCBpcyBrZXB0IGFsaXZlIHVudGlsIGEKIAkgKiBzdWJzZXF1ZW50IGlkbGUtYmFycmllciAoZW1p
dHRlZCB3aGVuIHRoZSBlbmdpbmUgd2FrZXJlZiBoaXRzIDAKIAkgKiB3aXRoIG5vIG1vcmUgb3V0
c3RhbmRpbmcgcmVxdWVzdHMpLgorCSAqCisJICogSW4gR3VDIHN1Ym1pc3Npb24gbW9kZSB3ZSBk
b24ndCB1c2UgaWRsZSBiYXJyaWVycyBhbmQgd2UgaW5zdGVhZAorCSAqIGdldCBhIG1lc3NhZ2Ug
ZnJvbSB0aGUgR3VDIHRvIHNpZ25hbCB0aGF0IGl0IGlzIHNhZmUgdG8gdW5waW4gdGhlCisJICog
Y29udGV4dCBmcm9tIG1lbW9yeS4KIAkgKi8KKwlpZiAoaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVu
Z2luZSkpCisJCXJldHVybiAwOwogCiAJaWYgKGludGVsX2VuZ2luZV9wbV9pc19hd2FrZShlbmdp
bmUpKSB7CiAJCXByX2VycigiJXMgaXMgYXdha2UgYmVmb3JlIHN0YXJ0aW5nICVzIVxuIiwKQEAg
LTM1Nyw3ICszNjMsMTEgQEAgc3RhdGljIGludCBfX2xpdmVfcmVtb3RlX2NvbnRleHQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCSAqIG9uIHRoZSBjb250ZXh0IGltYWdlIHJlbW90
ZWx5IChpbnRlbF9jb250ZXh0X3ByZXBhcmVfcmVtb3RlX3JlcXVlc3QpLAogCSAqIHdoaWNoIGlu
c2VydHMgZm9yZWlnbiBmZW5jZXMgaW50byBpbnRlbF9jb250ZXh0LmFjdGl2ZSwgZG9lcyBub3QK
IAkgKiBjbG9iYmVyIHRoZSBpZGxlLWJhcnJpZXIuCisJICoKKwkgKiBJbiBHdUMgc3VibWlzc2lv
biBtb2RlIHdlIGRvbid0IHVzZSBpZGxlIGJhcnJpZXJzLgogCSAqLworCWlmIChpbnRlbF9lbmdp
bmVfdXNlc19ndWMoZW5naW5lKSkKKwkJcmV0dXJuIDA7CiAKIAlpZiAoaW50ZWxfZW5naW5lX3Bt
X2lzX2F3YWtlKGVuZ2luZSkpIHsKIAkJcHJfZXJyKCIlcyBpcyBhd2FrZSBiZWZvcmUgc3RhcnRp
bmcgJXMhXG4iLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
ZW5naW5lX2hlYXJ0YmVhdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lX2hlYXJ0YmVhdC5jCmluZGV4IDQ4OTZlNGNjYWQ1MC4uMzE3ZWViZjA4NmMzIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5j
CkBAIC00MDUsMyArNDA1LDI1IEBAIHZvaWQgc3RfZW5naW5lX2hlYXJ0YmVhdF9lbmFibGUoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVuZ2luZS0+cHJvcHMuaGVhcnRiZWF0X2lu
dGVydmFsX21zID0KIAkJZW5naW5lLT5kZWZhdWx0cy5oZWFydGJlYXRfaW50ZXJ2YWxfbXM7CiB9
CisKK3ZvaWQgc3RfZW5naW5lX2hlYXJ0YmVhdF9kaXNhYmxlX25vX3BtKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKK3sKKwllbmdpbmUtPnByb3BzLmhlYXJ0YmVhdF9pbnRlcnZhbF9t
cyA9IDA7CisKKwkvKgorCSAqIFBhcmsgdGhlIGhlYXJ0YmVhdCBidXQgd2l0aG91dCBob2xkaW5n
IHRoZSBQTSBsb2NrIGFzIHRoYXQKKwkgKiBtYWtlcyB0aGUgZW5naW5lcyBhcHBlYXIgbm90LWlk
bGUuIE5vdGUgdGhhdCBpZi93aGVuIHVucGFyaworCSAqIGlzIGNhbGxlZCBkdWUgdG8gdGhlIFBN
IGxvY2sgYmVpbmcgYWNxdWlyZWQgbGF0ZXIgdGhlCisJICogaGVhcnRiZWF0IHN0aWxsIHdvbid0
IGJlIGVuYWJsZWQgYmVjYXVzZSBvZiB0aGUgYWJvdmUgPSAwLgorCSAqLworCWlmIChpbnRlbF9l
bmdpbmVfcG1fZ2V0X2lmX2F3YWtlKGVuZ2luZSkpIHsKKwkJaW50ZWxfZW5naW5lX3BhcmtfaGVh
cnRiZWF0KGVuZ2luZSk7CisJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKKwl9Cit9CisK
K3ZvaWQgc3RfZW5naW5lX2hlYXJ0YmVhdF9lbmFibGVfbm9fcG0oc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQoreworCWVuZ2luZS0+cHJvcHMuaGVhcnRiZWF0X2ludGVydmFsX21zID0K
KwkJZW5naW5lLT5kZWZhdWx0cy5oZWFydGJlYXRfaW50ZXJ2YWxfbXM7Cit9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmgKaW5kZXgg
Y2QyNzExM2Q1NDAwLi44MWRhMmNkOGU0MDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9oZWFydGJlYXQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmgKQEAgLTksNiArOSw4IEBACiBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzOwogCiB2b2lkIHN0X2VuZ2luZV9oZWFydGJlYXRfZGlzYWJsZShz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwordm9pZCBzdF9lbmdpbmVfaGVhcnRiZWF0
X2Rpc2FibGVfbm9fcG0oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIHZvaWQgc3Rf
ZW5naW5lX2hlYXJ0YmVhdF9lbmFibGUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsK
K3ZvaWQgc3RfZW5naW5lX2hlYXJ0YmVhdF9lbmFibGVfbm9fcG0oc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKTsKIAogI2VuZGlmIC8qIFNFTEZURVNUX0VOR0lORV9IRUFSVEJFQVRfSCAq
LwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZXhlY2xpc3Rz
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9leGVjbGlzdHMuYwppbmRleCA3
M2RkYzZlMTQ3MzAuLjU5Y2Y4YWZjNmQ2ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfZXhlY2xpc3RzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
c2VsZnRlc3RfZXhlY2xpc3RzLmMKQEAgLTM3MjcsNyArMzcyNyw3IEBAIHN0YXRpYyBpbnQgbm9w
X3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJR0VNX0JVR19PTighbmN0eCB8
fCBuY3R4ID4gQVJSQVlfU0laRSh2ZSkpOwogCiAJZm9yIChuID0gMDsgbiA8IG5jdHg7IG4rKykg
ewotCQl2ZVtuXSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNp
YmxpbmcpOworCQl2ZVtuXSA9IGludGVsX2VuZ2luZV9jcmVhdGVfdmlydHVhbChzaWJsaW5ncywg
bnNpYmxpbmcpOwogCQlpZiAoSVNfRVJSKHZlW25dKSkgewogCQkJZXJyID0gUFRSX0VSUih2ZVtu
XSk7CiAJCQluY3R4ID0gbjsKQEAgLTM5MjMsNyArMzkyMyw3IEBAIHN0YXRpYyBpbnQgbWFza192
aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCSAqIHJlc3RyaWN0IGl0IHRvIG91
ciBkZXNpcmVkIGVuZ2luZSB3aXRoaW4gdGhlIHZpcnR1YWwgZW5naW5lLgogCSAqLwogCi0JdmUg
PSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2libGluZ3MsIG5zaWJsaW5nKTsKKwl2
ZSA9IGludGVsX2VuZ2luZV9jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOwogCWlm
IChJU19FUlIodmUpKSB7CiAJCWVyciA9IFBUUl9FUlIodmUpOwogCQlnb3RvIG91dF9jbG9zZTsK
QEAgLTQwNTQsNyArNDA1NCw3IEBAIHN0YXRpYyBpbnQgc2xpY2Vpbl92aXJ0dWFsX2VuZ2luZShz
dHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKIAl9CiAKLQljZSA9
IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOworCWNl
ID0gaW50ZWxfZW5naW5lX2NyZWF0ZV92aXJ0dWFsKHNpYmxpbmdzLCBuc2libGluZyk7CiAJaWYg
KElTX0VSUihjZSkpIHsKIAkJZXJyID0gUFRSX0VSUihjZSk7CiAJCWdvdG8gb3V0OwpAQCAtNDEw
Niw3ICs0MTA2LDcgQEAgc3RhdGljIGludCBzbGljZW91dF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0LAogCiAJLyogWFhYIFdlIGRvIG5vdCBoYW5kbGUgb3ZlcnN1YnNjcmlwdGlv
biBhbmQgZmFpcm5lc3Mgd2l0aCBub3JtYWwgcnEgKi8KIAlmb3IgKG4gPSAwOyBuIDwgbnNpYmxp
bmc7IG4rKykgewotCQljZSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5n
cywgbnNpYmxpbmcpOworCQljZSA9IGludGVsX2VuZ2luZV9jcmVhdGVfdmlydHVhbChzaWJsaW5n
cywgbnNpYmxpbmcpOwogCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJZXJyID0gUFRSX0VSUihjZSk7
CiAJCQlnb3RvIG91dDsKQEAgLTQyMDgsNyArNDIwOCw3IEBAIHN0YXRpYyBpbnQgcHJlc2VydmVk
X3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJaWYgKGVycikKIAkJZ290byBv
dXRfc2NyYXRjaDsKIAotCXZlID0gaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHNpYmxp
bmdzLCBuc2libGluZyk7CisJdmUgPSBpbnRlbF9lbmdpbmVfY3JlYXRlX3ZpcnR1YWwoc2libGlu
Z3MsIG5zaWJsaW5nKTsKIAlpZiAoSVNfRVJSKHZlKSkgewogCQllcnIgPSBQVFJfRVJSKHZlKTsK
IAkJZ290byBvdXRfc2NyYXRjaDsKQEAgLTQzNDgsNyArNDM0OCw3IEBAIHN0YXRpYyBpbnQgcmVz
ZXRfdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVsX2d0ICpndCwKIAlpZiAoaWd0X3NwaW5uZXJf
aW5pdCgmc3BpbiwgZ3QpKQogCQlyZXR1cm4gLUVOT01FTTsKIAotCXZlID0gaW50ZWxfZXhlY2xp
c3RzX2NyZWF0ZV92aXJ0dWFsKHNpYmxpbmdzLCBuc2libGluZyk7CisJdmUgPSBpbnRlbF9lbmdp
bmVfY3JlYXRlX3ZpcnR1YWwoc2libGluZ3MsIG5zaWJsaW5nKTsKIAlpZiAoSVNfRVJSKHZlKSkg
ewogCQllcnIgPSBQVFJfRVJSKHZlKTsKIAkJZ290byBvdXRfc3BpbjsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2hhbmdjaGVjay5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfaGFuZ2NoZWNrLmMKaW5kZXggN2FlYTEwYWExZmI0Li5hOTNh
OWIwZDI1OGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2hh
bmdjaGVjay5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2hhbmdjaGVj
ay5jCkBAIC0xNyw2ICsxNyw4IEBACiAjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9mbHVzaF90ZXN0
LmgiCiAjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9yZXNldC5oIgogI2luY2x1ZGUgInNlbGZ0ZXN0
cy9pZ3RfYXRvbWljLmgiCisjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9zcGlubmVyLmgiCisjaW5j
bHVkZSAic2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgiCiAKICNpbmNsdWRlICJz
ZWxmdGVzdHMvbW9ja19kcm0uaCIKIApAQCAtMzc4LDYgKzM4MCw3IEBAIHN0YXRpYyBpbnQgaWd0
X3Jlc2V0X25vcCh2b2lkICphcmcpCiAJCQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2lu
ZSk7CiAJCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJCWVyciA9IFBUUl9FUlIoY2UpOworCQkJCXBy
X2VycigiWyVzXSBDcmVhdGUgY29udGV4dCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBl
cnIpOwogCQkJCWJyZWFrOwogCQkJfQogCkBAIC0zODcsNiArMzkwLDcgQEAgc3RhdGljIGludCBp
Z3RfcmVzZXRfbm9wKHZvaWQgKmFyZykKIAkJCQlycSA9IGludGVsX2NvbnRleHRfY3JlYXRlX3Jl
cXVlc3QoY2UpOwogCQkJCWlmIChJU19FUlIocnEpKSB7CiAJCQkJCWVyciA9IFBUUl9FUlIocnEp
OworCQkJCQlwcl9lcnIoIlslc10gQ3JlYXRlIHJlcXVlc3QgZmFpbGVkOiAlZCFcbiIsIGVuZ2lu
ZS0+bmFtZSwgZXJyKTsKIAkJCQkJYnJlYWs7CiAJCQkJfQogCkBAIC00MDEsMjQgKzQwNSwzMSBA
QCBzdGF0aWMgaW50IGlndF9yZXNldF9ub3Aodm9pZCAqYXJnKQogCQlpZ3RfZ2xvYmFsX3Jlc2V0
X3VubG9jayhndCk7CiAKIAkJaWYgKGludGVsX2d0X2lzX3dlZGdlZChndCkpIHsKKwkJCXByX2Vy
cigiWyVzXSBHVCBpcyB3ZWRnZWQhXG4iLCBlbmdpbmUtPm5hbWUpOwogCQkJZXJyID0gLUVJTzsK
IAkJCWJyZWFrOwogCQl9CiAKIAkJaWYgKGk5MTVfcmVzZXRfY291bnQoZ2xvYmFsKSAhPSByZXNl
dF9jb3VudCArICsrY291bnQpIHsKLQkJCXByX2VycigiRnVsbCBHUFUgcmVzZXQgbm90IHJlY29y
ZGVkIVxuIik7CisJCQlwcl9lcnIoIlslc10gUmVzZXQgbm90IHJlY29yZGVkOiAlZCB2cyAlZCAr
ICVkIVxuIiwKKwkJCSAgICAgICBlbmdpbmUtPm5hbWUsIGk5MTVfcmVzZXRfY291bnQoZ2xvYmFs
KSwgcmVzZXRfY291bnQsIGNvdW50KTsKIAkJCWVyciA9IC1FSU5WQUw7CiAJCQlicmVhazsKIAkJ
fQogCiAJCWVyciA9IGlndF9mbHVzaF90ZXN0KGd0LT5pOTE1KTsKLQkJaWYgKGVycikKKwkJaWYg
KGVycikgeworCQkJcHJfZXJyKCJbJXNdIEZsdXNoIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5h
bWUsIGVycik7CiAJCQlicmVhazsKKwkJfQogCX0gd2hpbGUgKHRpbWVfYmVmb3JlKGppZmZpZXMs
IGVuZF90aW1lKSk7CiAJcHJfaW5mbygiJXM6ICVkIHJlc2V0c1xuIiwgX19mdW5jX18sIGNvdW50
KTsKIAotCWlmIChpZ3RfZmx1c2hfdGVzdChndC0+aTkxNSkpCisJaWYgKGlndF9mbHVzaF90ZXN0
KGd0LT5pOTE1KSkgeworCQlwcl9lcnIoIlBvc3QgZmx1c2ggZmFpbGVkOiAlZCFcbiIsIGVycik7
CiAJCWVyciA9IC1FSU87CisJfQorCiAJcmV0dXJuIGVycjsKIH0KIApAQCAtNDQwLDkgKzQ1MSwx
OSBAQCBzdGF0aWMgaW50IGlndF9yZXNldF9ub3BfZW5naW5lKHZvaWQgKmFyZykKIAkJSUdUX1RJ
TUVPVVQoZW5kX3RpbWUpOwogCQlpbnQgZXJyOwogCisJCWlmIChpbnRlbF9lbmdpbmVfdXNlc19n
dWMoZW5naW5lKSkgeworCQkJLyogRW5naW5lIGxldmVsIHJlc2V0cyBhcmUgdHJpZ2dlcmVkIGJ5
IEd1QyB3aGVuIGEgaGFuZworCQkJICogaXMgZGV0ZWN0ZWQuIFRoZXkgY2FuJ3QgYmUgdHJpZ2dl
cmVkIGJ5IHRoZSBLTUQgYW55CisJCQkgKiBtb3JlLiBUaHVzIGEgbm9wIGJhdGNoIGNhbm5vdCBi
ZSB1c2VkIGFzIGEgcmVzZXQgdGVzdAorCQkJICovCisJCQljb250aW51ZTsKKwkJfQorCiAJCWNl
ID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZW5naW5lKTsKLQkJaWYgKElTX0VSUihjZSkpCisJCWlm
IChJU19FUlIoY2UpKSB7CisJCQlwcl9lcnIoIlslc10gQ3JlYXRlIGNvbnRleHQgZmFpbGVkOiAl
ZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCXJldHVybiBQVFJfRVJSKGNlKTsKKwkJfQog
CiAJCXJlc2V0X2NvdW50ID0gaTkxNV9yZXNldF9jb3VudChnbG9iYWwpOwogCQlyZXNldF9lbmdp
bmVfY291bnQgPSBpOTE1X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIGVuZ2luZSk7CkBAIC01
NDksOSArNTcwLDE1IEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X2ZhaWxfZW5naW5lKHZvaWQgKmFy
ZykKIAkJSUdUX1RJTUVPVVQoZW5kX3RpbWUpOwogCQlpbnQgZXJyOwogCisJCS8qIENhbid0IG1h
bnVhbGx5IGJyZWFrIHRoZSByZXNldCBpZiBpOTE1IGRvZXNuJ3QgcGVyZm9ybSBpdCAqLworCQlp
ZiAoaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2luZSkpCisJCQljb250aW51ZTsKKwogCQljZSA9
IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7Ci0JCWlmIChJU19FUlIoY2UpKQorCQlpZiAo
SVNfRVJSKGNlKSkgeworCQkJcHJfZXJyKCJbJXNdIENyZWF0ZSBjb250ZXh0IGZhaWxlZDogJWQh
XG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCQlyZXR1cm4gUFRSX0VSUihjZSk7CisJCX0KIAog
CQlzdF9lbmdpbmVfaGVhcnRiZWF0X2Rpc2FibGUoZW5naW5lKTsKIAkJc2V0X2JpdChJOTE1X1JF
U0VUX0VOR0lORSArIGlkLCAmZ3QtPnJlc2V0LmZsYWdzKTsKQEAgLTY4Niw4ICs3MTMsMTIgQEAg
c3RhdGljIGludCBfX2lndF9yZXNldF9lbmdpbmUoc3RydWN0IGludGVsX2d0ICpndCwgYm9vbCBh
Y3RpdmUpCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7CiAJCXVuc2lnbmVkIGlu
dCByZXNldF9jb3VudCwgcmVzZXRfZW5naW5lX2NvdW50OwogCQl1bnNpZ25lZCBsb25nIGNvdW50
OworCQlib29sIHVzaW5nX2d1YyA9IGludGVsX2VuZ2luZV91c2VzX2d1YyhlbmdpbmUpOwogCQlJ
R1RfVElNRU9VVChlbmRfdGltZSk7CiAKKwkJaWYgKHVzaW5nX2d1YyAmJiAhYWN0aXZlKQorCQkJ
Y29udGludWU7CisKIAkJaWYgKGFjdGl2ZSAmJiAhaW50ZWxfZW5naW5lX2Nhbl9zdG9yZV9kd29y
ZChlbmdpbmUpKQogCQkJY29udGludWU7CiAKQEAgLTcwNSwxMyArNzM2LDIzIEBAIHN0YXRpYyBp
bnQgX19pZ3RfcmVzZXRfZW5naW5lKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGJvb2wgYWN0aXZlKQog
CQlzZXRfYml0KEk5MTVfUkVTRVRfRU5HSU5FICsgaWQsICZndC0+cmVzZXQuZmxhZ3MpOwogCQlj
b3VudCA9IDA7CiAJCWRvIHsKLQkJCWlmIChhY3RpdmUpIHsKLQkJCQlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKKwkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gTlVMTDsKKwkJCXN0cnVjdCBp
bnRlbF9zZWxmdGVzdF9zYXZlZF9wb2xpY3kgc2F2ZWQ7CisJCQlpbnQgZXJyMjsKKworCQkJZXJy
ID0gaW50ZWxfc2VsZnRlc3RfbW9kaWZ5X3BvbGljeShlbmdpbmUsICZzYXZlZCwKKwkJCQkJCQkg
ICBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX0ZBU1RfUkVTRVQpOworCQkJaWYgKGVycikgewor
CQkJCXByX2VycigiWyVzXSBNb2RpZnkgcG9saWN5IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5h
bWUsIGVycik7CisJCQkJYnJlYWs7CisJCQl9CiAKKwkJCWlmIChhY3RpdmUpIHsKIAkJCQlycSA9
IGhhbmdfY3JlYXRlX3JlcXVlc3QoJmgsIGVuZ2luZSk7CiAJCQkJaWYgKElTX0VSUihycSkpIHsK
IAkJCQkJZXJyID0gUFRSX0VSUihycSk7Ci0JCQkJCWJyZWFrOworCQkJCQlwcl9lcnIoIlslc10g
Q3JlYXRlIGhhbmcgcmVxdWVzdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwor
CQkJCQlnb3RvIHJlc3RvcmU7CiAJCQkJfQogCiAJCQkJaTkxNV9yZXF1ZXN0X2dldChycSk7CkBA
IC03MjcsMzQgKzc2OCw1OCBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZShzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0LCBib29sIGFjdGl2ZSkKIAogCQkJCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsK
IAkJCQkJZXJyID0gLUVJTzsKLQkJCQkJYnJlYWs7CisJCQkJCWdvdG8gcmVzdG9yZTsKIAkJCQl9
CisJCQl9CiAKLQkJCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwkJCWlmICghdXNpbmdfZ3VjKSB7
CisJCQkJZXJyID0gaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgTlVMTCk7CisJCQkJaWYgKGVy
cikgeworCQkJCQlwcl9lcnIoImludGVsX2VuZ2luZV9yZXNldCglcykgZmFpbGVkLCBlcnI6JWRc
biIsCisJCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIGVycik7CisJCQkJCWdvdG8gc2tpcDsKKwkJ
CQl9CiAJCQl9CiAKLQkJCWVyciA9IGludGVsX2VuZ2luZV9yZXNldChlbmdpbmUsIE5VTEwpOwot
CQkJaWYgKGVycikgewotCQkJCXByX2VycigiaW50ZWxfZW5naW5lX3Jlc2V0KCVzKSBmYWlsZWQs
IGVycjolZFxuIiwKLQkJCQkgICAgICAgZW5naW5lLT5uYW1lLCBlcnIpOwotCQkJCWJyZWFrOwor
CQkJaWYgKHJxKSB7CisJCQkJLyogRW5zdXJlIHRoZSByZXNldCBoYXBwZW5zIGFuZCBraWxscyB0
aGUgZW5naW5lICovCisJCQkJZXJyID0gaW50ZWxfc2VsZnRlc3Rfd2FpdF9mb3JfcnEocnEpOwor
CQkJCWlmIChlcnIpCisJCQkJCXByX2VycigiWyVzXSBXYWl0IGZvciByZXF1ZXN0ICVsbGQ6JWxs
ZCBbMHglMDRYXSBmYWlsZWQ6ICVkIVxuIiwKKwkJCQkJICAgICAgIGVuZ2luZS0+bmFtZSwgcnEt
PmZlbmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubywgcnEtPmNvbnRleHQtPmd1Y19pZCwgZXJy
KTsKIAkJCX0KIAorc2tpcDoKKwkJCWlmIChycSkKKwkJCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsK
KwogCQkJaWYgKGk5MTVfcmVzZXRfY291bnQoZ2xvYmFsKSAhPSByZXNldF9jb3VudCkgewogCQkJ
CXByX2VycigiRnVsbCBHUFUgcmVzZXQgcmVjb3JkZWQhIChlbmdpbmUgcmVzZXQgZXhwZWN0ZWQp
XG4iKTsKIAkJCQllcnIgPSAtRUlOVkFMOwotCQkJCWJyZWFrOworCQkJCWdvdG8gcmVzdG9yZTsK
IAkJCX0KIAotCQkJaWYgKGk5MTVfcmVzZXRfZW5naW5lX2NvdW50KGdsb2JhbCwgZW5naW5lKSAh
PQotCQkJICAgICsrcmVzZXRfZW5naW5lX2NvdW50KSB7Ci0JCQkJcHJfZXJyKCIlcyBlbmdpbmUg
cmVzZXQgbm90IHJlY29yZGVkIVxuIiwKLQkJCQkgICAgICAgZW5naW5lLT5uYW1lKTsKLQkJCQll
cnIgPSAtRUlOVkFMOwotCQkJCWJyZWFrOworCQkJLyogR3VDIGJhc2VkIHJlc2V0cyBhcmUgbm90
IGxvZ2dlZCBwZXIgZW5naW5lICovCisJCQlpZiAoIXVzaW5nX2d1YykgeworCQkJCWlmIChpOTE1
X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIGVuZ2luZSkgIT0KKwkJCQkgICAgKytyZXNldF9l
bmdpbmVfY291bnQpIHsKKwkJCQkJcHJfZXJyKCIlcyBlbmdpbmUgcmVzZXQgbm90IHJlY29yZGVk
IVxuIiwKKwkJCQkJICAgICAgIGVuZ2luZS0+bmFtZSk7CisJCQkJCWVyciA9IC1FSU5WQUw7CisJ
CQkJCWdvdG8gcmVzdG9yZTsKKwkJCQl9CiAJCQl9CiAKIAkJCWNvdW50Kys7CisKK3Jlc3RvcmU6
CisJCQllcnIyID0gaW50ZWxfc2VsZnRlc3RfcmVzdG9yZV9wb2xpY3koZW5naW5lLCAmc2F2ZWQp
OworCQkJaWYgKGVycjIpCisJCQkJcHJfZXJyKCJbJXNdIFJlc3RvcmUgcG9saWN5IGZhaWxlZDog
JWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CisJCQlpZiAoZXJyID09IDApCisJCQkJZXJyID0g
ZXJyMjsKKwkJCWlmIChlcnIpCisJCQkJYnJlYWs7CiAJCX0gd2hpbGUgKHRpbWVfYmVmb3JlKGpp
ZmZpZXMsIGVuZF90aW1lKSk7CiAJCWNsZWFyX2JpdChJOTE1X1JFU0VUX0VOR0lORSArIGlkLCAm
Z3QtPnJlc2V0LmZsYWdzKTsKIAkJc3RfZW5naW5lX2hlYXJ0YmVhdF9lbmFibGUoZW5naW5lKTsK
QEAgLTc2NSwxMiArODMwLDE2IEBAIHN0YXRpYyBpbnQgX19pZ3RfcmVzZXRfZW5naW5lKHN0cnVj
dCBpbnRlbF9ndCAqZ3QsIGJvb2wgYWN0aXZlKQogCQkJYnJlYWs7CiAKIAkJZXJyID0gaWd0X2Zs
dXNoX3Rlc3QoZ3QtPmk5MTUpOwotCQlpZiAoZXJyKQorCQlpZiAoZXJyKSB7CisJCQlwcl9lcnIo
Ilslc10gRmx1c2ggZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCWJyZWFr
OworCQl9CiAJfQogCi0JaWYgKGludGVsX2d0X2lzX3dlZGdlZChndCkpCisJaWYgKGludGVsX2d0
X2lzX3dlZGdlZChndCkpIHsKKwkJcHJfZXJyKCJHVCBpcyB3ZWRnZWQhXG4iKTsKIAkJZXJyID0g
LUVJTzsKKwl9CiAKIAlpZiAoYWN0aXZlKQogCQloYW5nX2ZpbmkoJmgpOwpAQCAtODA3LDcgKzg3
Niw3IEBAIHN0YXRpYyBpbnQgYWN0aXZlX3JlcXVlc3RfcHV0KHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQogCWlmICghcnEpCiAJCXJldHVybiAwOwogCi0JaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJx
LCAwLCA1ICogSFopIDwgMCkgeworCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgMTAgKiBI
WikgPCAwKSB7CiAJCUdFTV9UUkFDRSgiJXMgdGltZWQgb3V0IHdhaXRpbmcgZm9yIGNvbXBsZXRp
b24gb2YgZmVuY2UgJWxseDolbGxkXG4iLAogCQkJICBycS0+ZW5naW5lLT5uYW1lLAogCQkJICBy
cS0+ZmVuY2UuY29udGV4dCwKQEAgLTgzNyw2ICs5MDYsNyBAQCBzdGF0aWMgaW50IGFjdGl2ZV9l
bmdpbmUodm9pZCAqZGF0YSkKIAkJY2VbY291bnRdID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZW5n
aW5lKTsKIAkJaWYgKElTX0VSUihjZVtjb3VudF0pKSB7CiAJCQllcnIgPSBQVFJfRVJSKGNlW2Nv
dW50XSk7CisJCQlwcl9lcnIoIlslc10gQ3JlYXRlIGNvbnRleHQgIyVsZCBmYWlsZWQ6ICVkIVxu
IiwgZW5naW5lLT5uYW1lLCBjb3VudCwgZXJyKTsKIAkJCXdoaWxlICgtLWNvdW50KQogCQkJCWlu
dGVsX2NvbnRleHRfcHV0KGNlW2NvdW50XSk7CiAJCQlyZXR1cm4gZXJyOwpAQCAtODUyLDYgKzky
Miw3IEBAIHN0YXRpYyBpbnQgYWN0aXZlX2VuZ2luZSh2b2lkICpkYXRhKQogCQluZXcgPSBpbnRl
bF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KGNlW2lkeF0pOwogCQlpZiAoSVNfRVJSKG5ldykpIHsK
IAkJCWVyciA9IFBUUl9FUlIobmV3KTsKKwkJCXByX2VycigiWyVzXSBDcmVhdGUgcmVxdWVzdCAj
JWQgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgaWR4LCBlcnIpOwogCQkJYnJlYWs7CiAJ
CX0KIApAQCAtODY3LDggKzkzOCwxMCBAQCBzdGF0aWMgaW50IGFjdGl2ZV9lbmdpbmUodm9pZCAq
ZGF0YSkKIAkJfQogCiAJCWVyciA9IGFjdGl2ZV9yZXF1ZXN0X3B1dChvbGQpOwotCQlpZiAoZXJy
KQorCQlpZiAoZXJyKSB7CisJCQlwcl9lcnIoIlslc10gUmVxdWVzdCBwdXQgZmFpbGVkOiAlZCFc
biIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCWJyZWFrOworCQl9CiAKIAkJY29uZF9yZXNjaGVk
KCk7CiAJfQpAQCAtODc2LDYgKzk0OSw5IEBAIHN0YXRpYyBpbnQgYWN0aXZlX2VuZ2luZSh2b2lk
ICpkYXRhKQogCWZvciAoY291bnQgPSAwOyBjb3VudCA8IEFSUkFZX1NJWkUocnEpOyBjb3VudCsr
KSB7CiAJCWludCBlcnJfXyA9IGFjdGl2ZV9yZXF1ZXN0X3B1dChycVtjb3VudF0pOwogCisJCWlm
IChlcnIpCisJCQlwcl9lcnIoIlslc10gUmVxdWVzdCBwdXQgIyVsZCBmYWlsZWQ6ICVkIVxuIiwg
ZW5naW5lLT5uYW1lLCBjb3VudCwgZXJyKTsKKwogCQkvKiBLZWVwIHRoZSBmaXJzdCBlcnJvciAq
LwogCQlpZiAoIWVycikKIAkJCWVyciA9IGVycl9fOwpAQCAtOTE2LDEwICs5OTIsMTMgQEAgc3Rh
dGljIGludCBfX2lndF9yZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCXN0cnVj
dCBhY3RpdmVfZW5naW5lIHRocmVhZHNbSTkxNV9OVU1fRU5HSU5FU10gPSB7fTsKIAkJdW5zaWdu
ZWQgbG9uZyBkZXZpY2UgPSBpOTE1X3Jlc2V0X2NvdW50KGdsb2JhbCk7CiAJCXVuc2lnbmVkIGxv
bmcgY291bnQgPSAwLCByZXBvcnRlZDsKKwkJYm9vbCB1c2luZ19ndWMgPSBpbnRlbF9lbmdpbmVf
dXNlc19ndWMoZW5naW5lKTsKIAkJSUdUX1RJTUVPVVQoZW5kX3RpbWUpOwogCi0JCWlmIChmbGFn
cyAmIFRFU1RfQUNUSVZFICYmCi0JCSAgICAhaW50ZWxfZW5naW5lX2Nhbl9zdG9yZV9kd29yZChl
bmdpbmUpKQorCQlpZiAoZmxhZ3MgJiBURVNUX0FDVElWRSkgeworCQkJaWYgKCFpbnRlbF9lbmdp
bmVfY2FuX3N0b3JlX2R3b3JkKGVuZ2luZSkpCisJCQkJY29udGludWU7CisJCX0gZWxzZSBpZiAo
dXNpbmdfZ3VjKQogCQkJY29udGludWU7CiAKIAkJaWYgKCF3YWl0X2Zvcl9pZGxlKGVuZ2luZSkp
IHsKQEAgLTk0OSw2ICsxMDI4LDcgQEAgc3RhdGljIGludCBfX2lndF9yZXNldF9lbmdpbmVzKHN0
cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQkJCSAgImlndC8lcyIsIG90aGVyLT5uYW1lKTsKIAkJCWlm
IChJU19FUlIodHNrKSkgewogCQkJCWVyciA9IFBUUl9FUlIodHNrKTsKKwkJCQlwcl9lcnIoIlsl
c10gVGhyZWFkIHNwYXduIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCQkJ
Z290byB1bndpbmQ7CiAJCQl9CiAKQEAgLTk1OCwxNiArMTAzOCwyNiBAQCBzdGF0aWMgaW50IF9f
aWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0IGludGVsX2d0ICpndCwKIAogCQl5aWVsZCgpOyAvKiBz
dGFydCBhbGwgdGhyZWFkcyBiZWZvcmUgd2UgYmVnaW4gKi8KIAotCQlzdF9lbmdpbmVfaGVhcnRi
ZWF0X2Rpc2FibGUoZW5naW5lKTsKKwkJc3RfZW5naW5lX2hlYXJ0YmVhdF9kaXNhYmxlX25vX3Bt
KGVuZ2luZSk7CiAJCXNldF9iaXQoSTkxNV9SRVNFVF9FTkdJTkUgKyBpZCwgJmd0LT5yZXNldC5m
bGFncyk7CiAJCWRvIHsKIAkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gTlVMTDsKKwkJCXN0
cnVjdCBpbnRlbF9zZWxmdGVzdF9zYXZlZF9wb2xpY3kgc2F2ZWQ7CisJCQlpbnQgZXJyMjsKKwor
CQkJZXJyID0gaW50ZWxfc2VsZnRlc3RfbW9kaWZ5X3BvbGljeShlbmdpbmUsICZzYXZlZCwKKwkJ
CQkJCQkgIFNFTEZURVNUX1NDSEVEVUxFUl9NT0RJRllfRkFTVF9SRVNFVCk7CisJCQlpZiAoZXJy
KSB7CisJCQkJcHJfZXJyKCJbJXNdIE1vZGlmeSBwb2xpY3kgZmFpbGVkOiAlZCFcbiIsIGVuZ2lu
ZS0+bmFtZSwgZXJyKTsKKwkJCQlicmVhazsKKwkJCX0KIAogCQkJaWYgKGZsYWdzICYgVEVTVF9B
Q1RJVkUpIHsKIAkJCQlycSA9IGhhbmdfY3JlYXRlX3JlcXVlc3QoJmgsIGVuZ2luZSk7CiAJCQkJ
aWYgKElTX0VSUihycSkpIHsKIAkJCQkJZXJyID0gUFRSX0VSUihycSk7Ci0JCQkJCWJyZWFrOwor
CQkJCQlwcl9lcnIoIlslc10gQ3JlYXRlIGhhbmcgcmVxdWVzdCBmYWlsZWQ6ICVkIVxuIiwgZW5n
aW5lLT5uYW1lLCBlcnIpOworCQkJCQlnb3RvIHJlc3RvcmU7CiAJCQkJfQogCiAJCQkJaTkxNV9y
ZXF1ZXN0X2dldChycSk7CkBAIC05ODMsMTUgKzEwNzMsMjcgQEAgc3RhdGljIGludCBfX2lndF9y
ZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAKIAkJCQkJaTkxNV9yZXF1ZXN0X3B1
dChycSk7CiAJCQkJCWVyciA9IC1FSU87Ci0JCQkJCWJyZWFrOworCQkJCQlnb3RvIHJlc3RvcmU7
CiAJCQkJfQorCQkJfSBlbHNlIHsKKwkJCQlpbnRlbF9lbmdpbmVfcG1fZ2V0KGVuZ2luZSk7CiAJ
CQl9CiAKLQkJCWVyciA9IGludGVsX2VuZ2luZV9yZXNldChlbmdpbmUsIE5VTEwpOwotCQkJaWYg
KGVycikgewotCQkJCXByX2VycigiaTkxNV9yZXNldF9lbmdpbmUoJXM6JXMpOiBmYWlsZWQsIGVy
cj0lZFxuIiwKLQkJCQkgICAgICAgZW5naW5lLT5uYW1lLCB0ZXN0X25hbWUsIGVycik7Ci0JCQkJ
YnJlYWs7CisJCQlpZiAoIXVzaW5nX2d1YykgeworCQkJCWVyciA9IGludGVsX2VuZ2luZV9yZXNl
dChlbmdpbmUsIE5VTEwpOworCQkJCWlmIChlcnIpIHsKKwkJCQkJcHJfZXJyKCJpOTE1X3Jlc2V0
X2VuZ2luZSglczolcyk6IGZhaWxlZCwgZXJyPSVkXG4iLAorCQkJCQkgICAgICAgZW5naW5lLT5u
YW1lLCB0ZXN0X25hbWUsIGVycik7CisJCQkJCWdvdG8gcmVzdG9yZTsKKwkJCQl9CisJCQl9CisK
KwkJCWlmIChycSkgeworCQkJCS8qIEVuc3VyZSB0aGUgcmVzZXQgaGFwcGVucyBhbmQga2lsbHMg
dGhlIGVuZ2luZSAqLworCQkJCWVyciA9IGludGVsX3NlbGZ0ZXN0X3dhaXRfZm9yX3JxKHJxKTsK
KwkJCQlpZiAoZXJyKQorCQkJCQlwcl9lcnIoIlslc10gV2FpdCBmb3IgcmVxdWVzdCAlbGxkOiVs
bGQgWzB4JTA0WF0gZmFpbGVkOiAlZCFcbiIsCisJCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIHJx
LT5mZW5jZS5jb250ZXh0LCBycS0+ZmVuY2Uuc2Vxbm8sIHJxLT5jb250ZXh0LT5ndWNfaWQsIGVy
cik7CiAJCQl9CiAKIAkJCWNvdW50Kys7CkBAIC05OTksMTYgKzExMDEsMTYgQEAgc3RhdGljIGlu
dCBfX2lndF9yZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQlpZiAocnEpIHsK
IAkJCQlpZiAocnEtPmZlbmNlLmVycm9yICE9IC1FSU8pIHsKIAkJCQkJcHJfZXJyKCJpOTE1X3Jl
c2V0X2VuZ2luZSglczolcyk6IgotCQkJCQkgICAgICAgIiBmYWlsZWQgdG8gcmVzZXQgcmVxdWVz
dCAlbGx4OiVsbGRcbiIsCisJCQkJCSAgICAgICAiIGZhaWxlZCB0byByZXNldCByZXF1ZXN0ICVs
bGQ6JWxsZCBbMHglMDRYXVxuIiwKIAkJCQkJICAgICAgIGVuZ2luZS0+bmFtZSwgdGVzdF9uYW1l
LAogCQkJCQkgICAgICAgcnEtPmZlbmNlLmNvbnRleHQsCi0JCQkJCSAgICAgICBycS0+ZmVuY2Uu
c2Vxbm8pOworCQkJCQkgICAgICAgcnEtPmZlbmNlLnNlcW5vLCBycS0+Y29udGV4dC0+Z3VjX2lk
KTsKIAkJCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiAKIAkJCQkJR0VNX1RSQUNFX0RVTVAoKTsK
IAkJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7CiAJCQkJCWVyciA9IC1FSU87Ci0JCQkJCWJy
ZWFrOworCQkJCQlnb3RvIHJlc3RvcmU7CiAJCQkJfQogCiAJCQkJaWYgKGk5MTVfcmVxdWVzdF93
YWl0KHJxLCAwLCBIWiAvIDUpIDwgMCkgewpAQCAtMTAyNywxMiArMTEyOSwxNSBAQCBzdGF0aWMg
aW50IF9faWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0IGludGVsX2d0ICpndCwKIAkJCQkJR0VNX1RS
QUNFX0RVTVAoKTsKIAkJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7CiAJCQkJCWVyciA9IC1F
SU87Ci0JCQkJCWJyZWFrOworCQkJCQlnb3RvIHJlc3RvcmU7CiAJCQkJfQogCiAJCQkJaTkxNV9y
ZXF1ZXN0X3B1dChycSk7CiAJCQl9CiAKKwkJCWlmICghKGZsYWdzICYgVEVTVF9BQ1RJVkUpKQor
CQkJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKKwogCQkJaWYgKCEoZmxhZ3MgJiBURVNU
X1NFTEYpICYmICF3YWl0X2Zvcl9pZGxlKGVuZ2luZSkpIHsKIAkJCQlzdHJ1Y3QgZHJtX3ByaW50
ZXIgcCA9CiAJCQkJCWRybV9pbmZvX3ByaW50ZXIoZ3QtPmk5MTUtPmRybS5kZXYpOwpAQCAtMTA0
NCwyMiArMTE0OSwzNCBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2VuZ2luZXMoc3RydWN0IGlu
dGVsX2d0ICpndCwKIAkJCQkJCSAgIiVzXG4iLCBlbmdpbmUtPm5hbWUpOwogCiAJCQkJZXJyID0g
LUVJTzsKLQkJCQlicmVhazsKKwkJCQlnb3RvIHJlc3RvcmU7CiAJCQl9CisKK3Jlc3RvcmU6CisJ
CQllcnIyID0gaW50ZWxfc2VsZnRlc3RfcmVzdG9yZV9wb2xpY3koZW5naW5lLCAmc2F2ZWQpOwor
CQkJaWYgKGVycjIpCisJCQkJcHJfZXJyKCJbJXNdIFJlc3RvcmUgcG9saWN5IGZhaWxlZDogJWQh
XG4iLCBlbmdpbmUtPm5hbWUsIGVycjIpOworCQkJaWYgKGVyciA9PSAwKQorCQkJCWVyciA9IGVy
cjI7CisJCQlpZiAoZXJyKQorCQkJCWJyZWFrOwogCQl9IHdoaWxlICh0aW1lX2JlZm9yZShqaWZm
aWVzLCBlbmRfdGltZSkpOwogCQljbGVhcl9iaXQoSTkxNV9SRVNFVF9FTkdJTkUgKyBpZCwgJmd0
LT5yZXNldC5mbGFncyk7Ci0JCXN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlKGVuZ2luZSk7CisJ
CXN0X2VuZ2luZV9oZWFydGJlYXRfZW5hYmxlX25vX3BtKGVuZ2luZSk7CiAKIAkJcHJfaW5mbygi
aTkxNV9yZXNldF9lbmdpbmUoJXM6JXMpOiAlbHUgcmVzZXRzXG4iLAogCQkJZW5naW5lLT5uYW1l
LCB0ZXN0X25hbWUsIGNvdW50KTsKIAotCQlyZXBvcnRlZCA9IGk5MTVfcmVzZXRfZW5naW5lX2Nv
dW50KGdsb2JhbCwgZW5naW5lKTsKLQkJcmVwb3J0ZWQgLT0gdGhyZWFkc1tlbmdpbmUtPmlkXS5y
ZXNldHM7Ci0JCWlmIChyZXBvcnRlZCAhPSBjb3VudCkgewotCQkJcHJfZXJyKCJpOTE1X3Jlc2V0
X2VuZ2luZSglczolcyk6IHJlc2V0ICVsdSB0aW1lcywgYnV0IHJlcG9ydGVkICVsdVxuIiwKLQkJ
CSAgICAgICBlbmdpbmUtPm5hbWUsIHRlc3RfbmFtZSwgY291bnQsIHJlcG9ydGVkKTsKLQkJCWlm
ICghZXJyKQotCQkJCWVyciA9IC1FSU5WQUw7CisJCS8qIEd1QyBiYXNlZCByZXNldHMgYXJlIG5v
dCBsb2dnZWQgcGVyIGVuZ2luZSAqLworCQlpZiAoIXVzaW5nX2d1YykgeworCQkJcmVwb3J0ZWQg
PSBpOTE1X3Jlc2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIGVuZ2luZSk7CisJCQlyZXBvcnRlZCAt
PSB0aHJlYWRzW2VuZ2luZS0+aWRdLnJlc2V0czsKKwkJCWlmIChyZXBvcnRlZCAhPSBjb3VudCkg
eworCQkJCXByX2VycigiaTkxNV9yZXNldF9lbmdpbmUoJXM6JXMpOiByZXNldCAlbHUgdGltZXMs
IGJ1dCByZXBvcnRlZCAlbHVcbiIsCisJCQkJICAgICAgIGVuZ2luZS0+bmFtZSwgdGVzdF9uYW1l
LCBjb3VudCwgcmVwb3J0ZWQpOworCQkJCWlmICghZXJyKQorCQkJCQllcnIgPSAtRUlOVkFMOwor
CQkJfQogCQl9CiAKIHVud2luZDoKQEAgLTEwNzgsMTUgKzExOTUsMTggQEAgc3RhdGljIGludCBf
X2lndF9yZXNldF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQl9CiAJCQlwdXRfdGFz
a19zdHJ1Y3QodGhyZWFkc1t0bXBdLnRhc2spOwogCi0JCQlpZiAob3RoZXItPnVhYmlfY2xhc3Mg
IT0gZW5naW5lLT51YWJpX2NsYXNzICYmCi0JCQkgICAgdGhyZWFkc1t0bXBdLnJlc2V0cyAhPQot
CQkJICAgIGk5MTVfcmVzZXRfZW5naW5lX2NvdW50KGdsb2JhbCwgb3RoZXIpKSB7Ci0JCQkJcHJf
ZXJyKCJJbm5vY2VudCBlbmdpbmUgJXMgd2FzIHJlc2V0IChjb3VudD0lbGQpXG4iLAotCQkJCSAg
ICAgICBvdGhlci0+bmFtZSwKLQkJCQkgICAgICAgaTkxNV9yZXNldF9lbmdpbmVfY291bnQoZ2xv
YmFsLCBvdGhlcikgLQotCQkJCSAgICAgICB0aHJlYWRzW3RtcF0ucmVzZXRzKTsKLQkJCQlpZiAo
IWVycikKLQkJCQkJZXJyID0gLUVJTlZBTDsKKwkJCS8qIEd1QyBiYXNlZCByZXNldHMgYXJlIG5v
dCBsb2dnZWQgcGVyIGVuZ2luZSAqLworCQkJaWYgKCF1c2luZ19ndWMpIHsKKwkJCQlpZiAob3Ro
ZXItPnVhYmlfY2xhc3MgIT0gZW5naW5lLT51YWJpX2NsYXNzICYmCisJCQkJICAgIHRocmVhZHNb
dG1wXS5yZXNldHMgIT0KKwkJCQkgICAgaTkxNV9yZXNldF9lbmdpbmVfY291bnQoZ2xvYmFsLCBv
dGhlcikpIHsKKwkJCQkJcHJfZXJyKCJJbm5vY2VudCBlbmdpbmUgJXMgd2FzIHJlc2V0IChjb3Vu
dD0lbGQpXG4iLAorCQkJCQkgICAgICAgb3RoZXItPm5hbWUsCisJCQkJCSAgICAgICBpOTE1X3Jl
c2V0X2VuZ2luZV9jb3VudChnbG9iYWwsIG90aGVyKSAtCisJCQkJCSAgICAgICB0aHJlYWRzW3Rt
cF0ucmVzZXRzKTsKKwkJCQkJaWYgKCFlcnIpCisJCQkJCQllcnIgPSAtRUlOVkFMOworCQkJCX0K
IAkJCX0KIAkJfQogCkBAIC0xMTAxLDggKzEyMjEsMTAgQEAgc3RhdGljIGludCBfX2lndF9yZXNl
dF9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQlicmVhazsKIAogCQllcnIgPSBpZ3Rf
Zmx1c2hfdGVzdChndC0+aTkxNSk7Ci0JCWlmIChlcnIpCisJCWlmIChlcnIpIHsKKwkJCXByX2Vy
cigiWyVzXSBGbHVzaCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQkJYnJl
YWs7CisJCX0KIAl9CiAKIAlpZiAoaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkKQEAgLTExODAsMTIg
KzEzMDIsMTUgQEAgc3RhdGljIGludCBpZ3RfcmVzZXRfd2FpdCh2b2lkICphcmcpCiAJaWd0X2ds
b2JhbF9yZXNldF9sb2NrKGd0KTsKIAogCWVyciA9IGhhbmdfaW5pdCgmaCwgZ3QpOwotCWlmIChl
cnIpCisJaWYgKGVycikgeworCQlwcl9lcnIoIlslc10gSGFuZyBpbml0IGZhaWxlZDogJWQhXG4i
LCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCWdvdG8gdW5sb2NrOworCX0KIAogCXJxID0gaGFuZ19j
cmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsKIAlpZiAoSVNfRVJSKHJxKSkgewogCQllcnIgPSBQ
VFJfRVJSKHJxKTsKKwkJcHJfZXJyKCJbJXNdIENyZWF0ZSBoYW5nIHJlcXVlc3QgZmFpbGVkOiAl
ZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJZ290byBmaW5pOwogCX0KIApAQCAtMTMxMCwx
MiArMTQzNSwxNSBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2V2aWN0X3ZtYShzdHJ1Y3QgaW50
ZWxfZ3QgKmd0LAogCS8qIENoZWNrIHRoYXQgd2UgY2FuIHJlY292ZXIgYW4gdW5iaW5kIHN0dWNr
IG9uIGEgaGFuZ2luZyByZXF1ZXN0ICovCiAKIAllcnIgPSBoYW5nX2luaXQoJmgsIGd0KTsKLQlp
ZiAoZXJyKQorCWlmIChlcnIpIHsKKwkJcHJfZXJyKCJbJXNdIEhhbmcgaW5pdCBmYWlsZWQ6ICVk
IVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlyZXR1cm4gZXJyOworCX0KIAogCW9iaiA9IGk5
MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoZ3QtPmk5MTUsIFNaXzFNKTsKIAlpZiAoSVNf
RVJSKG9iaikpIHsKIAkJZXJyID0gUFRSX0VSUihvYmopOworCQlwcl9lcnIoIlslc10gQ3JlYXRl
IG9iamVjdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlnb3RvIGZpbmk7
CiAJfQogCkBAIC0xMzMwLDEyICsxNDU4LDE0IEBAIHN0YXRpYyBpbnQgX19pZ3RfcmVzZXRfZXZp
Y3Rfdm1hKHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJYXJnLnZtYSA9IGk5MTVfdm1hX2luc3RhbmNl
KG9iaiwgdm0sIE5VTEwpOwogCWlmIChJU19FUlIoYXJnLnZtYSkpIHsKIAkJZXJyID0gUFRSX0VS
Uihhcmcudm1hKTsKKwkJcHJfZXJyKCJbJXNdIFZNQSBpbnN0YW5jZSBmYWlsZWQ6ICVkIVxuIiwg
ZW5naW5lLT5uYW1lLCBlcnIpOwogCQlnb3RvIG91dF9vYmo7CiAJfQogCiAJcnEgPSBoYW5nX2Ny
ZWF0ZV9yZXF1ZXN0KCZoLCBlbmdpbmUpOwogCWlmIChJU19FUlIocnEpKSB7CiAJCWVyciA9IFBU
Ul9FUlIocnEpOworCQlwcl9lcnIoIlslc10gQ3JlYXRlIGhhbmcgcmVxdWVzdCBmYWlsZWQ6ICVk
IVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlnb3RvIG91dF9vYmo7CiAJfQogCkBAIC0xMzQ3
LDYgKzE0NzcsNyBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2V2aWN0X3ZtYShzdHJ1Y3QgaW50
ZWxfZ3QgKmd0LAogCWVyciA9IGk5MTVfdm1hX3Bpbihhcmcudm1hLCAwLCAwLCBwaW5fZmxhZ3Mp
OwogCWlmIChlcnIpIHsKIAkJaTkxNV9yZXF1ZXN0X2FkZChycSk7CisJCXByX2VycigiWyVzXSBW
TUEgcGluIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCWdvdG8gb3V0X29i
ajsKIAl9CiAKQEAgLTEzNjMsOCArMTQ5NCwxNCBAQCBzdGF0aWMgaW50IF9faWd0X3Jlc2V0X2V2
aWN0X3ZtYShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCWk5MTVfdm1hX2xvY2soYXJnLnZtYSk7CiAJ
ZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X29iamVjdChycSwgYXJnLnZtYS0+b2JqLAogCQkJCQlm
bGFncyAmIEVYRUNfT0JKRUNUX1dSSVRFKTsKLQlpZiAoZXJyID09IDApCisJaWYgKGVyciA9PSAw
KSB7CiAJCWVyciA9IGk5MTVfdm1hX21vdmVfdG9fYWN0aXZlKGFyZy52bWEsIHJxLCBmbGFncyk7
CisJCWlmIChlcnIpCisJCQlwcl9lcnIoIlslc10gTW92ZSB0byBhY3RpdmUgZmFpbGVkOiAlZCFc
biIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKKwl9IGVsc2UgeworCQlwcl9lcnIoIlslc10gUmVxdWVz
dCBhd2FpdCBmYWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOworCX0KKwogCWk5MTVf
dm1hX3VubG9jayhhcmcudm1hKTsKIAogCWlmIChmbGFncyAmIEVYRUNfT0JKRUNUX05FRURTX0ZF
TkNFKQpAQCAtMTM5Miw2ICsxNTI5LDcgQEAgc3RhdGljIGludCBfX2lndF9yZXNldF9ldmljdF92
bWEoc3RydWN0IGludGVsX2d0ICpndCwKIAl0c2sgPSBrdGhyZWFkX3J1bihmbiwgJmFyZywgImln
dC9ldmljdF92bWEiKTsKIAlpZiAoSVNfRVJSKHRzaykpIHsKIAkJZXJyID0gUFRSX0VSUih0c2sp
OworCQlwcl9lcnIoIlslc10gVGhyZWFkIHNwYXduIGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5h
bWUsIGVycik7CiAJCXRzayA9IE5VTEw7CiAJCWdvdG8gb3V0X3Jlc2V0OwogCX0KQEAgLTE1MDgs
MTcgKzE2NDYsMjkgQEAgc3RhdGljIGludCBpZ3RfcmVzZXRfcXVldWUodm9pZCAqYXJnKQogCQln
b3RvIHVubG9jazsKIAogCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkgeworCQlzdHJ1
Y3QgaW50ZWxfc2VsZnRlc3Rfc2F2ZWRfcG9saWN5IHNhdmVkOwogCQlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpwcmV2OwogCQlJR1RfVElNRU9VVChlbmRfdGltZSk7CiAJCXVuc2lnbmVkIGludCBjb3Vu
dDsKKwkJYm9vbCB1c2luZ19ndWMgPSBpbnRlbF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKTsKIAog
CQlpZiAoIWludGVsX2VuZ2luZV9jYW5fc3RvcmVfZHdvcmQoZW5naW5lKSkKIAkJCWNvbnRpbnVl
OwogCisJCWlmICh1c2luZ19ndWMpIHsKKwkJCWVyciA9IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9w
b2xpY3koZW5naW5lLCAmc2F2ZWQsCisJCQkJCQkJICBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZ
X05PX0hBTkdDSEVDSyk7CisJCQlpZiAoZXJyKSB7CisJCQkJcHJfZXJyKCJbJXNdIE1vZGlmeSBw
b2xpY3kgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKKwkJCQlnb3RvIGZpbmk7
CisJCQl9CisJCX0KKwogCQlwcmV2ID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgmaCwgZW5naW5lKTsK
IAkJaWYgKElTX0VSUihwcmV2KSkgewogCQkJZXJyID0gUFRSX0VSUihwcmV2KTsKLQkJCWdvdG8g
ZmluaTsKKwkJCXByX2VycigiWyVzXSBDcmVhdGUgJ3ByZXYnIGhhbmcgcmVxdWVzdCBmYWlsZWQ6
ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOworCQkJZ290byByZXN0b3JlOwogCQl9CiAKIAkJ
aTkxNV9yZXF1ZXN0X2dldChwcmV2KTsKQEAgLTE1MzIsNyArMTY4Miw4IEBAIHN0YXRpYyBpbnQg
aWd0X3Jlc2V0X3F1ZXVlKHZvaWQgKmFyZykKIAkJCXJxID0gaGFuZ19jcmVhdGVfcmVxdWVzdCgm
aCwgZW5naW5lKTsKIAkJCWlmIChJU19FUlIocnEpKSB7CiAJCQkJZXJyID0gUFRSX0VSUihycSk7
Ci0JCQkJZ290byBmaW5pOworCQkJCXByX2VycigiWyVzXSBDcmVhdGUgaGFuZyByZXF1ZXN0IGZh
aWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CisJCQkJZ290byByZXN0b3JlOwogCQkJ
fQogCiAJCQlpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKQEAgLTE1NTcsNyArMTcwOCw3IEBAIHN0YXRp
YyBpbnQgaWd0X3Jlc2V0X3F1ZXVlKHZvaWQgKmFyZykKIAogCQkJCUdFTV9UUkFDRV9EVU1QKCk7
CiAJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7Ci0JCQkJZ290byBmaW5pOworCQkJCWdvdG8g
cmVzdG9yZTsKIAkJCX0KIAogCQkJaWYgKCF3YWl0X3VudGlsX3J1bm5pbmcoJmgsIHByZXYpKSB7
CkBAIC0xNTc1LDcgKzE3MjYsNyBAQCBzdGF0aWMgaW50IGlndF9yZXNldF9xdWV1ZSh2b2lkICph
cmcpCiAJCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7CiAKIAkJCQllcnIgPSAtRUlPOwotCQkJ
CWdvdG8gZmluaTsKKwkJCQlnb3RvIHJlc3RvcmU7CiAJCQl9CiAKIAkJCXJlc2V0X2NvdW50ID0g
ZmFrZV9oYW5nY2hlY2soZ3QsIEJJVChpZCkpOwpAQCAtMTU4Niw3ICsxNzM3LDcgQEAgc3RhdGlj
IGludCBpZ3RfcmVzZXRfcXVldWUodm9pZCAqYXJnKQogCQkJCWk5MTVfcmVxdWVzdF9wdXQocnEp
OwogCQkJCWk5MTVfcmVxdWVzdF9wdXQocHJldik7CiAJCQkJZXJyID0gLUVJTlZBTDsKLQkJCQln
b3RvIGZpbmk7CisJCQkJZ290byByZXN0b3JlOwogCQkJfQogCiAJCQlpZiAocnEtPmZlbmNlLmVy
cm9yKSB7CkBAIC0xNTk1LDcgKzE3NDYsNyBAQCBzdGF0aWMgaW50IGlndF9yZXNldF9xdWV1ZSh2
b2lkICphcmcpCiAJCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiAJCQkJaTkxNV9yZXF1ZXN0X3B1
dChwcmV2KTsKIAkJCQllcnIgPSAtRUlOVkFMOwotCQkJCWdvdG8gZmluaTsKKwkJCQlnb3RvIHJl
c3RvcmU7CiAJCQl9CiAKIAkJCWlmIChpOTE1X3Jlc2V0X2NvdW50KGdsb2JhbCkgPT0gcmVzZXRf
Y291bnQpIHsKQEAgLTE2MDMsNyArMTc1NCw3IEBAIHN0YXRpYyBpbnQgaWd0X3Jlc2V0X3F1ZXVl
KHZvaWQgKmFyZykKIAkJCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIAkJCQlpOTE1X3JlcXVlc3Rf
cHV0KHByZXYpOwogCQkJCWVyciA9IC1FSU5WQUw7Ci0JCQkJZ290byBmaW5pOworCQkJCWdvdG8g
cmVzdG9yZTsKIAkJCX0KIAogCQkJaTkxNV9yZXF1ZXN0X3B1dChwcmV2KTsKQEAgLTE2MTgsOSAr
MTc2OSwyMiBAQCBzdGF0aWMgaW50IGlndF9yZXNldF9xdWV1ZSh2b2lkICphcmcpCiAKIAkJaTkx
NV9yZXF1ZXN0X3B1dChwcmV2KTsKIAotCQllcnIgPSBpZ3RfZmx1c2hfdGVzdChndC0+aTkxNSk7
CityZXN0b3JlOgorCQlpZiAodXNpbmdfZ3VjKSB7CisJCQlpbnQgZXJyMiA9IGludGVsX3NlbGZ0
ZXN0X3Jlc3RvcmVfcG9saWN5KGVuZ2luZSwgJnNhdmVkKTsKKwkJCWlmIChlcnIyKQorCQkJCXBy
X2VycigiJXM6JWQ+IFslc10gUmVzdG9yZSBwb2xpY3kgZmFpbGVkOiAlZCFcbiIsIF9fZnVuY19f
LCBfX0xJTkVfXywgZW5naW5lLT5uYW1lLCBlcnIyKTsKKwkJCWlmIChlcnIgPT0gMCkKKwkJCQll
cnIgPSBlcnIyOworCQl9CiAJCWlmIChlcnIpCisJCQlnb3RvIGZpbmk7CisKKwkJZXJyID0gaWd0
X2ZsdXNoX3Rlc3QoZ3QtPmk5MTUpOworCQlpZiAoZXJyKSB7CisJCQlwcl9lcnIoIlslc10gRmx1
c2ggZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCWJyZWFrOworCQl9CiAJ
fQogCiBmaW5pOgpAQCAtMTY1MywxMiArMTgxNywxNSBAQCBzdGF0aWMgaW50IGlndF9oYW5kbGVf
ZXJyb3Iodm9pZCAqYXJnKQogCQlyZXR1cm4gMDsKIAogCWVyciA9IGhhbmdfaW5pdCgmaCwgZ3Qp
OwotCWlmIChlcnIpCisJaWYgKGVycikgeworCQlwcl9lcnIoIlslc10gSGFuZyBpbml0IGZhaWxl
ZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUsIGVycik7CiAJCXJldHVybiBlcnI7CisJfQogCiAJcnEg
PSBoYW5nX2NyZWF0ZV9yZXF1ZXN0KCZoLCBlbmdpbmUpOwogCWlmIChJU19FUlIocnEpKSB7CiAJ
CWVyciA9IFBUUl9FUlIocnEpOworCQlwcl9lcnIoIlslc10gQ3JlYXRlIGhhbmcgcmVxdWVzdCBm
YWlsZWQ6ICVkIVxuIiwgZW5naW5lLT5uYW1lLCBlcnIpOwogCQlnb3RvIGVycl9maW5pOwogCX0K
IApAQCAtMTc0MywxMiArMTkxMCwxNSBAQCBzdGF0aWMgaW50IGlndF9hdG9taWNfcmVzZXRfZW5n
aW5lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJcmV0dXJuIGVycjsKIAogCWVy
ciA9IGhhbmdfaW5pdCgmaCwgZW5naW5lLT5ndCk7Ci0JaWYgKGVycikKKwlpZiAoZXJyKSB7CisJ
CXByX2VycigiWyVzXSBIYW5nIGluaXQgZmFpbGVkOiAlZCFcbiIsIGVuZ2luZS0+bmFtZSwgZXJy
KTsKIAkJcmV0dXJuIGVycjsKKwl9CiAKIAlycSA9IGhhbmdfY3JlYXRlX3JlcXVlc3QoJmgsIGVu
Z2luZSk7CiAJaWYgKElTX0VSUihycSkpIHsKIAkJZXJyID0gUFRSX0VSUihycSk7CisJCXByX2Vy
cigiWyVzXSBDcmVhdGUgaGFuZyByZXF1ZXN0IGZhaWxlZDogJWQhXG4iLCBlbmdpbmUtPm5hbWUs
IGVycik7CiAJCWdvdG8gb3V0OwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfbW9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
bW9jcy5jCmluZGV4IDg3NjNiYmVjYTBmNy4uMTNkMjViZjJhOTRhIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9tb2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Qvc2VsZnRlc3RfbW9jcy5jCkBAIC0xMCw2ICsxMCw3IEBACiAjaW5jbHVkZSAiZ2Vt
L3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuaCIKICNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X3Jlc2V0
LmgiCiAjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9zcGlubmVyLmgiCisjaW5jbHVkZSAic2VsZnRl
c3RzL2ludGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgiCiAKIHN0cnVjdCBsaXZlX21vY3MgewogCXN0
cnVjdCBkcm1faTkxNV9tb2NzX3RhYmxlIHRhYmxlOwpAQCAtMzE4LDcgKzMxOSw4IEBAIHN0YXRp
YyBpbnQgbGl2ZV9tb2NzX2NsZWFuKHZvaWQgKmFyZykKIH0KIAogc3RhdGljIGludCBhY3RpdmVf
ZW5naW5lX3Jlc2V0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKLQkJCSAgICAgICBjb25zdCBj
aGFyICpyZWFzb24pCisJCQkgICAgICAgY29uc3QgY2hhciAqcmVhc29uLAorCQkJICAgICAgIGJv
b2wgdXNpbmdfZ3VjKQogewogCXN0cnVjdCBpZ3Rfc3Bpbm5lciBzcGluOwogCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxOwpAQCAtMzM1LDkgKzMzNywxMyBAQCBzdGF0aWMgaW50IGFjdGl2ZV9lbmdp
bmVfcmVzZXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCX0KIAogCWVyciA9IHJlcXVlc3Rf
YWRkX3NwaW4ocnEsICZzcGluKTsKLQlpZiAoZXJyID09IDApCisJaWYgKGVyciA9PSAwICYmICF1
c2luZ19ndWMpCiAJCWVyciA9IGludGVsX2VuZ2luZV9yZXNldChjZS0+ZW5naW5lLCByZWFzb24p
OwogCisJLyogRW5zdXJlIHRoZSByZXNldCBoYXBwZW5zIGFuZCBraWxscyB0aGUgZW5naW5lICov
CisJaWYgKGVyciA9PSAwKQorCQllcnIgPSBpbnRlbF9zZWxmdGVzdF93YWl0X2Zvcl9ycShycSk7
CisKIAlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW4pOwogCWlndF9zcGlubmVyX2ZpbmkoJnNwaW4pOwog
CkBAIC0zNDUsMjEgKzM1MSwyMyBAQCBzdGF0aWMgaW50IGFjdGl2ZV9lbmdpbmVfcmVzZXQoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLAogfQogCiBzdGF0aWMgaW50IF9fbGl2ZV9tb2NzX3Jlc2V0
KHN0cnVjdCBsaXZlX21vY3MgKm1vY3MsCi0JCQkgICAgIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKKwkJCSAgICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBib29sIHVzaW5nX2d1YykKIHsK
IAlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gY2UtPmVuZ2luZS0+Z3Q7CiAJaW50IGVycjsKIAogCWlm
IChpbnRlbF9oYXNfcmVzZXRfZW5naW5lKGd0KSkgewotCQllcnIgPSBpbnRlbF9lbmdpbmVfcmVz
ZXQoY2UtPmVuZ2luZSwgIm1vY3MiKTsKLQkJaWYgKGVycikKLQkJCXJldHVybiBlcnI7Ci0KLQkJ
ZXJyID0gY2hlY2tfbW9jc19lbmdpbmUobW9jcywgY2UpOwotCQlpZiAoZXJyKQotCQkJcmV0dXJu
IGVycjsKKwkJaWYgKCF1c2luZ19ndWMpIHsKKwkJCWVyciA9IGludGVsX2VuZ2luZV9yZXNldChj
ZS0+ZW5naW5lLCAibW9jcyIpOworCQkJaWYgKGVycikKKwkJCQlyZXR1cm4gZXJyOworCisJCQll
cnIgPSBjaGVja19tb2NzX2VuZ2luZShtb2NzLCBjZSk7CisJCQlpZiAoZXJyKQorCQkJCXJldHVy
biBlcnI7CisJCX0KIAotCQllcnIgPSBhY3RpdmVfZW5naW5lX3Jlc2V0KGNlLCAibW9jcyIpOwor
CQllcnIgPSBhY3RpdmVfZW5naW5lX3Jlc2V0KGNlLCAibW9jcyIsIHVzaW5nX2d1Yyk7CiAJCWlm
IChlcnIpCiAJCQlyZXR1cm4gZXJyOwogCkBAIC0zOTUsMTkgKzQwMywzMyBAQCBzdGF0aWMgaW50
IGxpdmVfbW9jc19yZXNldCh2b2lkICphcmcpCiAKIAlpZ3RfZ2xvYmFsX3Jlc2V0X2xvY2soZ3Qp
OwogCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkgeworCQlib29sIHVzaW5nX2d1YyA9
IGludGVsX2VuZ2luZV91c2VzX2d1YyhlbmdpbmUpOworCQlzdHJ1Y3QgaW50ZWxfc2VsZnRlc3Rf
c2F2ZWRfcG9saWN5IHNhdmVkOwogCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJCWludCBl
cnIyOworCisJCWVyciA9IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9wb2xpY3koZW5naW5lLCAmc2F2
ZWQsCisJCQkJCQkgICBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX0ZBU1RfUkVTRVQpOworCQlp
ZiAoZXJyKQorCQkJYnJlYWs7CiAKIAkJY2UgPSBtb2NzX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7
CiAJCWlmIChJU19FUlIoY2UpKSB7CiAJCQllcnIgPSBQVFJfRVJSKGNlKTsKLQkJCWJyZWFrOwor
CQkJZ290byByZXN0b3JlOwogCQl9CiAKIAkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOwot
CQllcnIgPSBfX2xpdmVfbW9jc19yZXNldCgmbW9jcywgY2UpOwotCQlpbnRlbF9lbmdpbmVfcG1f
cHV0KGVuZ2luZSk7CiAKKwkJZXJyID0gX19saXZlX21vY3NfcmVzZXQoJm1vY3MsIGNlLCB1c2lu
Z19ndWMpOworCisJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKIAkJaW50ZWxfY29udGV4
dF9wdXQoY2UpOworCityZXN0b3JlOgorCQllcnIyID0gaW50ZWxfc2VsZnRlc3RfcmVzdG9yZV9w
b2xpY3koZW5naW5lLCAmc2F2ZWQpOworCQlpZiAoZXJyID09IDApCisJCQllcnIgPSBlcnIyOwog
CQlpZiAoZXJyKQogCQkJYnJlYWs7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3Rfd29ya2Fyb3VuZHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X3dvcmthcm91bmRzLmMKaW5kZXggN2ViYzRlZGI4ZWNmLi5kODIwZjBiNDE2MzQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X3dvcmthcm91bmRzLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rfd29ya2Fyb3VuZHMuYwpAQCAt
MTIsNiArMTIsNyBAQAogI2luY2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5oIgogI2lu
Y2x1ZGUgInNlbGZ0ZXN0cy9pZ3RfcmVzZXQuaCIKICNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X3Nw
aW5uZXIuaCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBlcnMuaCIK
ICNpbmNsdWRlICJzZWxmdGVzdHMvbW9ja19kcm0uaCIKIAogI2luY2x1ZGUgImdlbS9zZWxmdGVz
dHMvaWd0X2dlbV91dGlscy5oIgpAQCAtMjYxLDI4ICsyNjIsMzQgQEAgc3RhdGljIGludCBkb19l
bmdpbmVfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXJldHVybiBpbnRl
bF9lbmdpbmVfcmVzZXQoZW5naW5lLCAibGl2ZV93b3JrYXJvdW5kcyIpOwogfQogCitzdGF0aWMg
aW50IGRvX2d1Y19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJLyog
Q3VycmVudGx5IGEgbm8tb3AgYXMgdGhlIHJlc2V0IGlzIGhhbmRsZWQgYnkgR3VDICovCisJcmV0
dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQKIHN3aXRjaF90b19zY3JhdGNoX2NvbnRleHQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAotCQkJICBzdHJ1Y3QgaWd0X3NwaW5uZXIgKnNwaW4p
CisJCQkgIHN0cnVjdCBpZ3Rfc3Bpbm5lciAqc3BpbiwKKwkJCSAgc3RydWN0IGk5MTVfcmVxdWVz
dCAqKnJxKQogewogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKLQlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKIAlpbnQgZXJyID0gMDsKIAogCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZW5n
aW5lKTsKIAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCi0JcnEgPSBp
Z3Rfc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdChzcGluLCBjZSwgTUlfTk9PUCk7CisJKnJxID0gaWd0
X3NwaW5uZXJfY3JlYXRlX3JlcXVlc3Qoc3BpbiwgY2UsIE1JX05PT1ApOwogCWludGVsX2NvbnRl
eHRfcHV0KGNlKTsKIAotCWlmIChJU19FUlIocnEpKSB7CisJaWYgKElTX0VSUigqcnEpKSB7CiAJ
CXNwaW4gPSBOVUxMOwotCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJZXJyID0gUFRSX0VSUigqcnEp
OwogCQlnb3RvIGVycjsKIAl9CiAKLQllcnIgPSByZXF1ZXN0X2FkZF9zcGluKHJxLCBzcGluKTsK
KwllcnIgPSByZXF1ZXN0X2FkZF9zcGluKCpycSwgc3Bpbik7CiBlcnI6CiAJaWYgKGVyciAmJiBz
cGluKQogCQlpZ3Rfc3Bpbm5lcl9lbmQoc3Bpbik7CkBAIC0yOTYsNiArMzAzLDcgQEAgc3RhdGlj
IGludCBjaGVja193aGl0ZWxpc3RfYWNyb3NzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSwKIHsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsICp0bXA7CiAJc3RydWN0IGln
dF9zcGlubmVyIHNwaW47CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAJaW50ZWxfd2FrZXJl
Zl90IHdha2VyZWY7CiAJaW50IGVycjsKIApAQCAtMzE2LDEzICszMjQsMjQgQEAgc3RhdGljIGlu
dCBjaGVja193aGl0ZWxpc3RfYWNyb3NzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKIAkJZ290byBvdXRfc3BpbjsKIAl9CiAKLQllcnIgPSBzd2l0Y2hfdG9fc2NyYXRjaF9j
b250ZXh0KGVuZ2luZSwgJnNwaW4pOworCWVyciA9IHN3aXRjaF90b19zY3JhdGNoX2NvbnRleHQo
ZW5naW5lLCAmc3BpbiwgJnJxKTsKIAlpZiAoZXJyKQogCQlnb3RvIG91dF9zcGluOwogCisJLyog
RW5zdXJlIHRoZSBzcGlubmVyIGhhc24ndCBhYm9ydGVkICovCisJaWYgKGk5MTVfcmVxdWVzdF9j
b21wbGV0ZWQocnEpKSB7CisJCXByX2VycigiJXMgc3Bpbm5lciBmYWlsZWQgdG8gc3RhcnRcbiIs
IG5hbWUpOworCQllcnIgPSAtRVRJTUVET1VUOworCQlnb3RvIG91dF9zcGluOworCX0KKwogCXdp
dGhfaW50ZWxfcnVudGltZV9wbShlbmdpbmUtPnVuY29yZS0+cnBtLCB3YWtlcmVmKQogCQllcnIg
PSByZXNldChlbmdpbmUpOwogCisJLyogRW5zdXJlIHRoZSByZXNldCBoYXBwZW5zIGFuZCBraWxs
cyB0aGUgZW5naW5lICovCisJaWYgKGVyciA9PSAwKQorCQllcnIgPSBpbnRlbF9zZWxmdGVzdF93
YWl0X2Zvcl9ycShycSk7CisKIAlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW4pOwogCiAJaWYgKGVycikg
ewpAQCAtNzg3LDkgKzgwNiwyNyBAQCBzdGF0aWMgaW50IGxpdmVfcmVzZXRfd2hpdGVsaXN0KHZv
aWQgKmFyZykKIAkJCWNvbnRpbnVlOwogCiAJCWlmIChpbnRlbF9oYXNfcmVzZXRfZW5naW5lKGd0
KSkgewotCQkJZXJyID0gY2hlY2tfd2hpdGVsaXN0X2Fjcm9zc19yZXNldChlbmdpbmUsCi0JCQkJ
CQkJICAgZG9fZW5naW5lX3Jlc2V0LAotCQkJCQkJCSAgICJlbmdpbmUiKTsKKwkJCWlmIChpbnRl
bF9lbmdpbmVfdXNlc19ndWMoZW5naW5lKSkgeworCQkJCXN0cnVjdCBpbnRlbF9zZWxmdGVzdF9z
YXZlZF9wb2xpY3kgc2F2ZWQ7CisJCQkJaW50IGVycjI7CisKKwkJCQllcnIgPSBpbnRlbF9zZWxm
dGVzdF9tb2RpZnlfcG9saWN5KGVuZ2luZSwgJnNhdmVkLAorCQkJCQkJCQkgICBTRUxGVEVTVF9T
Q0hFRFVMRVJfTU9ESUZZX0ZBU1RfUkVTRVQpOworCQkJCWlmKGVycikKKwkJCQkJZ290byBvdXQ7
CisKKwkJCQllcnIgPSBjaGVja193aGl0ZWxpc3RfYWNyb3NzX3Jlc2V0KGVuZ2luZSwKKwkJCQkJ
CQkJICAgZG9fZ3VjX3Jlc2V0LAorCQkJCQkJCQkgICAiZ3VjIik7CisKKwkJCQllcnIyID0gaW50
ZWxfc2VsZnRlc3RfcmVzdG9yZV9wb2xpY3koZW5naW5lLCAmc2F2ZWQpOworCQkJCWlmIChlcnIg
PT0gMCkKKwkJCQkJZXJyID0gZXJyMjsKKwkJCX0gZWxzZQorCQkJCWVyciA9IGNoZWNrX3doaXRl
bGlzdF9hY3Jvc3NfcmVzZXQoZW5naW5lLAorCQkJCQkJCQkgICBkb19lbmdpbmVfcmVzZXQsCisJ
CQkJCQkJCSAgICJlbmdpbmUiKTsKKwogCQkJaWYgKGVycikKIAkJCQlnb3RvIG91dDsKIAkJfQpA
QCAtMTIyNiwzMSArMTI2Myw0MiBAQCBsaXZlX2VuZ2luZV9yZXNldF93b3JrYXJvdW5kcyh2b2lk
ICphcmcpCiAJcmVmZXJlbmNlX2xpc3RzX2luaXQoZ3QsICZsaXN0cyk7CiAKIAlmb3JfZWFjaF9l
bmdpbmUoZW5naW5lLCBndCwgaWQpIHsKKwkJc3RydWN0IGludGVsX3NlbGZ0ZXN0X3NhdmVkX3Bv
bGljeSBzYXZlZDsKKwkJYm9vbCB1c2luZ19ndWMgPSBpbnRlbF9lbmdpbmVfdXNlc19ndWMoZW5n
aW5lKTsKIAkJYm9vbCBvazsKKwkJaW50IHJldDI7CiAKIAkJcHJfaW5mbygiVmVyaWZ5aW5nIGFm
dGVyICVzIHJlc2V0Li4uXG4iLCBlbmdpbmUtPm5hbWUpOworCQlyZXQgPSBpbnRlbF9zZWxmdGVz
dF9tb2RpZnlfcG9saWN5KGVuZ2luZSwgJnNhdmVkLAorCQkJCQkJICAgU0VMRlRFU1RfU0NIRURV
TEVSX01PRElGWV9GQVNUX1JFU0VUKTsKKwkJaWYgKHJldCkKKwkJCWJyZWFrOworCisKIAkJY2Ug
PSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJ
cmV0ID0gUFRSX0VSUihjZSk7Ci0JCQlicmVhazsKKwkJCWdvdG8gcmVzdG9yZTsKIAkJfQogCi0J
CW9rID0gdmVyaWZ5X3dhX2xpc3RzKGd0LCAmbGlzdHMsICJiZWZvcmUgcmVzZXQiKTsKLQkJaWYg
KCFvaykgewotCQkJcmV0ID0gLUVTUkNIOwotCQkJZ290byBlcnI7Ci0JCX0KKwkJaWYgKCF1c2lu
Z19ndWMpIHsKKwkJCW9rID0gdmVyaWZ5X3dhX2xpc3RzKGd0LCAmbGlzdHMsICJiZWZvcmUgcmVz
ZXQiKTsKKwkJCWlmICghb2spIHsKKwkJCQlyZXQgPSAtRVNSQ0g7CisJCQkJZ290byBlcnI7CisJ
CQl9CiAKLQkJcmV0ID0gaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgImxpdmVfd29ya2Fyb3Vu
ZHM6aWRsZSIpOwotCQlpZiAocmV0KSB7Ci0JCQlwcl9lcnIoIiVzOiBSZXNldCBmYWlsZWQgd2hp
bGUgaWRsZVxuIiwgZW5naW5lLT5uYW1lKTsKLQkJCWdvdG8gZXJyOwotCQl9CisJCQlyZXQgPSBp
bnRlbF9lbmdpbmVfcmVzZXQoZW5naW5lLCAibGl2ZV93b3JrYXJvdW5kczppZGxlIik7CisJCQlp
ZiAocmV0KSB7CisJCQkJcHJfZXJyKCIlczogUmVzZXQgZmFpbGVkIHdoaWxlIGlkbGVcbiIsIGVu
Z2luZS0+bmFtZSk7CisJCQkJZ290byBlcnI7CisJCQl9CiAKLQkJb2sgPSB2ZXJpZnlfd2FfbGlz
dHMoZ3QsICZsaXN0cywgImFmdGVyIGlkbGUgcmVzZXQiKTsKLQkJaWYgKCFvaykgewotCQkJcmV0
ID0gLUVTUkNIOwotCQkJZ290byBlcnI7CisJCQlvayA9IHZlcmlmeV93YV9saXN0cyhndCwgJmxp
c3RzLCAiYWZ0ZXIgaWRsZSByZXNldCIpOworCQkJaWYgKCFvaykgeworCQkJCXJldCA9IC1FU1JD
SDsKKwkJCQlnb3RvIGVycjsKKwkJCX0KIAkJfQogCiAJCXJldCA9IGlndF9zcGlubmVyX2luaXQo
JnNwaW4sIGVuZ2luZS0+Z3QpOwpAQCAtMTI3MSwyNSArMTMxOSw0MSBAQCBsaXZlX2VuZ2luZV9y
ZXNldF93b3JrYXJvdW5kcyh2b2lkICphcmcpCiAJCQlnb3RvIGVycjsKIAkJfQogCi0JCXJldCA9
IGludGVsX2VuZ2luZV9yZXNldChlbmdpbmUsICJsaXZlX3dvcmthcm91bmRzOmFjdGl2ZSIpOwot
CQlpZiAocmV0KSB7Ci0JCQlwcl9lcnIoIiVzOiBSZXNldCBmYWlsZWQgb24gYW4gYWN0aXZlIHNw
aW5uZXJcbiIsCi0JCQkgICAgICAgZW5naW5lLT5uYW1lKTsKLQkJCWlndF9zcGlubmVyX2Zpbmko
JnNwaW4pOwotCQkJZ290byBlcnI7CisJCS8qIEVuc3VyZSB0aGUgc3Bpbm5lciBoYXNuJ3QgYWJv
cnRlZCAqLworCQlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpIHsKKwkJCXJldCA9IC1F
VElNRURPVVQ7CisJCQlnb3RvIHNraXA7CisJCX0KKworCQlpZiAoIXVzaW5nX2d1YykgeworCQkJ
cmV0ID0gaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgImxpdmVfd29ya2Fyb3VuZHM6YWN0aXZl
Iik7CisJCQlpZiAocmV0KSB7CisJCQkJcHJfZXJyKCIlczogUmVzZXQgZmFpbGVkIG9uIGFuIGFj
dGl2ZSBzcGlubmVyXG4iLAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQkJCWlndF9zcGlu
bmVyX2ZpbmkoJnNwaW4pOworCQkJCWdvdG8gZXJyOworCQkJfQogCQl9CiAKKwkJLyogRW5zdXJl
IHRoZSByZXNldCBoYXBwZW5zIGFuZCBraWxscyB0aGUgZW5naW5lICovCisJCWlmIChyZXQgPT0g
MCkKKwkJCXJldCA9IGludGVsX3NlbGZ0ZXN0X3dhaXRfZm9yX3JxKHJxKTsKKworc2tpcDoKIAkJ
aWd0X3NwaW5uZXJfZW5kKCZzcGluKTsKIAkJaWd0X3NwaW5uZXJfZmluaSgmc3Bpbik7CiAKIAkJ
b2sgPSB2ZXJpZnlfd2FfbGlzdHMoZ3QsICZsaXN0cywgImFmdGVyIGJ1c3kgcmVzZXQiKTsKLQkJ
aWYgKCFvaykgeworCQlpZiAoIW9rKQogCQkJcmV0ID0gLUVTUkNIOwotCQkJZ290byBlcnI7Ci0J
CX0KIAogZXJyOgogCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisKK3Jlc3RvcmU6CisJCXJldDIg
PSBpbnRlbF9zZWxmdGVzdF9yZXN0b3JlX3BvbGljeShlbmdpbmUsICZzYXZlZCk7CisJCWlmIChy
ZXQgPT0gMCkKKwkJCXJldCA9IHJldDI7CiAJCWlmIChyZXQpCiAJCQlicmVhazsKIAl9CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmgKaW5kZXgg
MmQ2MTk4ZTYzZWJlLi41OTZjZjRiODE4ZTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3VjL2FiaS9ndWNfYWN0aW9uc19hYmkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC91Yy9hYmkvZ3VjX2FjdGlvbnNfYWJpLmgKQEAgLTEyNCwxMCArMTI0LDI1IEBAIGVudW0g
aW50ZWxfZ3VjX2FjdGlvbiB7CiAJSU5URUxfR1VDX0FDVElPTl9GT1JDRV9MT0dfQlVGRkVSX0ZM
VVNIID0gMHgzMDIsCiAJSU5URUxfR1VDX0FDVElPTl9FTlRFUl9TX1NUQVRFID0gMHg1MDEsCiAJ
SU5URUxfR1VDX0FDVElPTl9FWElUX1NfU1RBVEUgPSAweDUwMiwKKwlJTlRFTF9HVUNfQUNUSU9O
X0dMT0JBTF9TQ0hFRF9QT0xJQ1lfQ0hBTkdFID0gMHg1MDYsCisJSU5URUxfR1VDX0FDVElPTl9T
Q0hFRF9DT05URVhUID0gMHgxMDAwLAorCUlOVEVMX0dVQ19BQ1RJT05fU0NIRURfQ09OVEVYVF9N
T0RFX1NFVCA9IDB4MTAwMSwKKwlJTlRFTF9HVUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9E
T05FID0gMHgxMDAyLAorCUlOVEVMX0dVQ19BQ1RJT05fU0NIRURfRU5HSU5FX01PREVfU0VUID0g
MHgxMDAzLAorCUlOVEVMX0dVQ19BQ1RJT05fU0NIRURfRU5HSU5FX01PREVfRE9ORSA9IDB4MTAw
NCwKKwlJTlRFTF9HVUNfQUNUSU9OX1NFVF9DT05URVhUX1BSSU9SSVRZID0gMHgxMDA1LAorCUlO
VEVMX0dVQ19BQ1RJT05fU0VUX0NPTlRFWFRfRVhFQ1VUSU9OX1FVQU5UVU0gPSAweDEwMDYsCisJ
SU5URUxfR1VDX0FDVElPTl9TRVRfQ09OVEVYVF9QUkVFTVBUSU9OX1RJTUVPVVQgPSAweDEwMDcs
CisJSU5URUxfR1VDX0FDVElPTl9DT05URVhUX1JFU0VUX05PVElGSUNBVElPTiA9IDB4MTAwOCwK
KwlJTlRFTF9HVUNfQUNUSU9OX0VOR0lORV9GQUlMVVJFX05PVElGSUNBVElPTiA9IDB4MTAwOSwK
IAlJTlRFTF9HVUNfQUNUSU9OX1NMUENfUkVRVUVTVCA9IDB4MzAwMywKIAlJTlRFTF9HVUNfQUNU
SU9OX0FVVEhFTlRJQ0FURV9IVUMgPSAweDQwMDAsCisJSU5URUxfR1VDX0FDVElPTl9SRUdJU1RF
Ul9DT05URVhUID0gMHg0NTAyLAorCUlOVEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT05URVhU
ID0gMHg0NTAzLAogCUlOVEVMX0dVQ19BQ1RJT05fUkVHSVNURVJfQ09NTUFORF9UUkFOU1BPUlRf
QlVGRkVSID0gMHg0NTA1LAogCUlOVEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT01NQU5EX1RS
QU5TUE9SVF9CVUZGRVIgPSAweDQ1MDYsCisJSU5URUxfR1VDX0FDVElPTl9ERVJFR0lTVEVSX0NP
TlRFWFRfRE9ORSA9IDB4NDYwMCwKKwlJTlRFTF9HVUNfQUNUSU9OX1JFU0VUX0NMSUVOVCA9IDB4
NUIwMSwKIAlJTlRFTF9HVUNfQUNUSU9OX0xJTUlUCiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2NvbW11bmljYXRpb25fY3RiX2FiaS5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvYWJpL2d1Y19jb21tdW5pY2F0aW9uX2N0Yl9hYmkuaApp
bmRleCBlOTMzY2EwMmQwZWIuLjk5ZTFmYWQ1Y2EyMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvYWJpL2d1Y19jb21tdW5pY2F0aW9uX2N0Yl9hYmkuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9hYmkvZ3VjX2NvbW11bmljYXRpb25fY3RiX2FiaS5oCkBA
IC03OSw3ICs3OSw4IEBAIHN0YXRpY19hc3NlcnQoc2l6ZW9mKHN0cnVjdCBndWNfY3RfYnVmZmVy
X2Rlc2MpID09IDY0KTsKICAqICArLS0tKy0tLS0tLS0rLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCiAgKi8KIAotI2RlZmluZSBH
VUNfQ1RCX01TR19NSU5fTEVOCQkJMXUKKyNkZWZpbmUgR1VDX0NUQl9IRFJfTEVOCQkJCTF1Cisj
ZGVmaW5lIEdVQ19DVEJfTVNHX01JTl9MRU4JCQlHVUNfQ1RCX0hEUl9MRU4KICNkZWZpbmUgR1VD
X0NUQl9NU0dfTUFYX0xFTgkJCTI1NnUKICNkZWZpbmUgR1VDX0NUQl9NU0dfMF9GRU5DRQkJCSgw
eGZmZmYgPDwgMTYpCiAjZGVmaW5lIEdVQ19DVEJfTVNHXzBfRk9STUFUCQkJKDB4ZiA8PCAxMikK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmMKaW5kZXggNjY2MWRjYjAyMjM5Li45
NzkxMjhlMjgzNzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVs
X2d1Yy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5jCkBAIC0x
ODAsNiArMTgwLDExIEBAIHZvaWQgaW50ZWxfZ3VjX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1
YyAqZ3VjKQogCX0KIH0KIAordm9pZCBpbnRlbF9ndWNfaW5pdF9sYXRlKHN0cnVjdCBpbnRlbF9n
dWMgKmd1YykKK3sKKwlpbnRlbF9ndWNfYWRzX2luaXRfbGF0ZShndWMpOworfQorCiBzdGF0aWMg
dTMyIGd1Y19jdGxfZGVidWdfZmxhZ3Moc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewogCXUzMiBs
ZXZlbCA9IGludGVsX2d1Y19sb2dfZ2V0X2xldmVsKCZndWMtPmxvZyk7CkBAIC01MjQsNjUgKzUy
OSwzNSBAQCBpbnQgaW50ZWxfZ3VjX2F1dGhfaHVjKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMy
IHJzYV9vZmZzZXQpCiAgKi8KIGludCBpbnRlbF9ndWNfc3VzcGVuZChzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMpCiB7Ci0Jc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3VjX3RvX2d0KGd1Yykt
PnVuY29yZTsKIAlpbnQgcmV0OwotCXUzMiBzdGF0dXM7CiAJdTMyIGFjdGlvbltdID0gewotCQlJ
TlRFTF9HVUNfQUNUSU9OX0VOVEVSX1NfU1RBVEUsCi0JCUdVQ19QT1dFUl9EMSwgLyogYW55IHZh
bHVlIGdyZWF0ZXIgdGhhbiBHVUNfUE9XRVJfRDAgKi8KKwkJSU5URUxfR1VDX0FDVElPTl9SRVNF
VF9DTElFTlQsCiAJfTsKIAotCS8qCi0JICogSWYgR3VDIGNvbW11bmljYXRpb24gaXMgZW5hYmxl
ZCBidXQgc3VibWlzc2lvbiBpcyBub3Qgc3VwcG9ydGVkLAotCSAqIHdlIGRvIG5vdCBuZWVkIHRv
IHN1c3BlbmQgdGhlIEd1Qy4KLQkgKi8KLQlpZiAoIWludGVsX2d1Y19zdWJtaXNzaW9uX2lzX3Vz
ZWQoZ3VjKSB8fCAhaW50ZWxfZ3VjX2lzX3JlYWR5KGd1YykpCisJaWYgKCFpbnRlbF9ndWNfaXNf
cmVhZHkoZ3VjKSkKIAkJcmV0dXJuIDA7CiAKLQkvKgotCSAqIFRoZSBFTlRFUl9TX1NUQVRFIGFj
dGlvbiBxdWV1ZXMgdGhlIHNhdmUvcmVzdG9yZSBvcGVyYXRpb24gaW4gR3VDIEZXCi0JICogYW5k
IHRoZW4gcmV0dXJucywgc28gd2FpdGluZyBvbiB0aGUgSDJHIGlzIG5vdCBlbm91Z2ggdG8gZ3Vh
cmFudGVlCi0JICogR3VDIGlzIGRvbmUuIFdoZW4gYWxsIHRoZSBwcm9jZXNzaW5nIGlzIGRvbmUs
IEd1QyB3cml0ZXMKLQkgKiBJTlRFTF9HVUNfU0xFRVBfU1RBVEVfU1VDQ0VTUyB0byBzY3JhdGNo
IHJlZ2lzdGVyIDE0LCBzbyB3ZSBjYW4gcG9sbAotCSAqIG9uIHRoYXQuIE5vdGUgdGhhdCBHdUMg
ZG9lcyBub3QgZW5zdXJlIHRoYXQgdGhlIHZhbHVlIGluIHRoZSByZWdpc3RlcgotCSAqIGlzIGRp
ZmZlcmVudCBmcm9tIElOVEVMX0dVQ19TTEVFUF9TVEFURV9TVUNDRVNTIHdoaWxlIHRoZSBhY3Rp
b24gaXMKLQkgKiBpbiBwcm9ncmVzcyBzbyB3ZSBuZWVkIHRvIHRha2UgY2FyZSBvZiB0aGF0IG91
cnNlbHZlcyBhcyB3ZWxsLgotCSAqLwotCi0JaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgU09G
VF9TQ1JBVENIKDE0KSwKLQkJCSAgIElOVEVMX0dVQ19TTEVFUF9TVEFURV9JTlZBTElEX01BU0sp
OwotCi0JcmV0ID0gaW50ZWxfZ3VjX3NlbmQoZ3VjLCBhY3Rpb24sIEFSUkFZX1NJWkUoYWN0aW9u
KSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXJldCA9IF9faW50ZWxfd2FpdF9mb3Jf
cmVnaXN0ZXIodW5jb3JlLCBTT0ZUX1NDUkFUQ0goMTQpLAotCQkJCQlJTlRFTF9HVUNfU0xFRVBf
U1RBVEVfSU5WQUxJRF9NQVNLLAotCQkJCQkwLCAwLCAxMCwgJnN0YXR1cyk7Ci0JaWYgKHJldCkK
LQkJcmV0dXJuIHJldDsKLQotCWlmIChzdGF0dXMgIT0gSU5URUxfR1VDX1NMRUVQX1NUQVRFX1NV
Q0NFU1MpIHsKLQkJRFJNX0VSUk9SKCJHdUMgZmFpbGVkIHRvIGNoYW5nZSBzbGVlcCBzdGF0ZS4g
IgotCQkJICAiYWN0aW9uPTB4JXgsIGVycj0ldVxuIiwKLQkJCSAgYWN0aW9uWzBdLCBzdGF0dXMp
OwotCQlyZXR1cm4gLUVJTzsKKwlpZiAoaW50ZWxfZ3VjX3N1Ym1pc3Npb25faXNfdXNlZChndWMp
KSB7CisJCS8qCisJCSAqIFRoaXMgSDJHIE1NSU8gY29tbWFuZCB0ZWFycyBkb3duIHRoZSBHdUMg
aW4gdHdvIHN0ZXBzLiBGaXJzdCBpdCB3aWxsCisJCSAqIGdlbmVyYXRlIGEgRzJIIENUQiBmb3Ig
ZXZlcnkgYWN0aXZlIGNvbnRleHQgaW5kaWNhdGluZyBhIHJlc2V0LiBJbgorCQkgKiBwcmFjdGlj
ZSB0aGUgaTkxNSBzaG91bGRuJ3QgZXZlciBnZXQgYSBHMkggYXMgc3VzcGVuZCBzaG91bGQgb25s
eSBiZQorCQkgKiBjYWxsZWQgd2hlbiB0aGUgR1BVIGlzIGlkbGUuIE5leHQsIGl0IHRlYXJzIGRv
d24gdGhlIENUQnMgYW5kIHRoaXMKKwkJICogSDJHIE1NSU8gY29tbWFuZCBjb21wbGV0ZXMuCisJ
CSAqCisJCSAqIERvbid0IGFib3J0IG9uIGEgZmFpbHVyZSBjb2RlIGZyb20gdGhlIEd1Qy4gS2Vl
cCBnb2luZyBhbmQgZG8gdGhlCisJCSAqIGNsZWFuIHVwIGluIHNhbnRpemUoKSBhbmQgcmUtaW5p
dGlhbGlzYXRpb24gb24gcmVzdW1lIGFuZCBob3BlZnVsbHkKKwkJICogdGhlIGVycm9yIGhlcmUg
d29uJ3QgYmUgcHJvYmxlbWF0aWMuCisJCSAqLworCQlyZXQgPSBpbnRlbF9ndWNfc2VuZF9tbWlv
KGd1YywgYWN0aW9uLCBBUlJBWV9TSVpFKGFjdGlvbiksIE5VTEwsIDApOworCQlpZiAocmV0KQor
CQkJRFJNX0VSUk9SKCJHdUMgc3VzcGVuZDogUkVTRVRfQ0xJRU5UIGFjdGlvbiBmYWlsZWQgd2l0
aCBlcnJvciAlZCFcbiIsIHJldCk7CiAJfQogCi0JcmV0dXJuIDA7Ci19CisJLyogU2lnbmFsIHRo
YXQgdGhlIEd1QyBpc24ndCBydW5uaW5nLiAqLworCWludGVsX2d1Y19zYW5pdGl6ZShndWMpOwog
Ci0vKioKLSAqIGludGVsX2d1Y19yZXNldF9lbmdpbmUoKSAtIGFzayBHdUMgdG8gcmVzZXQgYW4g
ZW5naW5lCi0gKiBAZ3VjOglpbnRlbF9ndWMgc3RydWN0dXJlCi0gKiBAZW5naW5lOgllbmdpbmUg
dG8gYmUgcmVzZXQKLSAqLwotaW50IGludGVsX2d1Y19yZXNldF9lbmdpbmUoc3RydWN0IGludGVs
X2d1YyAqZ3VjLAotCQkJICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCS8q
IFhYWDogdG8gYmUgaW1wbGVtZW50ZWQgd2l0aCBzdWJtaXNzaW9uIGludGVyZmFjZSByZXdvcmsg
Ki8KLQotCXJldHVybiAtRU5PREVWOworCXJldHVybiAwOwogfQogCiAvKioKQEAgLTU5MSw3ICs1
NjYsMTIgQEAgaW50IGludGVsX2d1Y19yZXNldF9lbmdpbmUoc3RydWN0IGludGVsX2d1YyAqZ3Vj
LAogICovCiBpbnQgaW50ZWxfZ3VjX3Jlc3VtZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7Ci0J
LyogWFhYOiB0byBiZSBpbXBsZW1lbnRlZCB3aXRoIHN1Ym1pc3Npb24gaW50ZXJmYWNlIHJld29y
ayAqLworCS8qCisJICogTkI6IFRoaXMgZnVuY3Rpb24gY2FuIHN0aWxsIGJlIGNhbGxlZCBldmVu
IGlmIEd1QyBzdWJtaXNzaW9uIGlzCisJICogZGlzYWJsZWQsIGUuZy4gaWYgR3VDIGlzIGVuYWJs
ZWQgZm9yIEh1QyBhdXRoZW50aWNhdGlvbiBvbmx5LiBUaHVzLAorCSAqIGlmIGFueSBjb2RlIGlz
IGxhdGVyIGFkZGVkIGhlcmUsIGl0IG11c3QgYmUgc3VwcG9ydCBkb2luZyBub3RoaW5nCisJICog
aWYgc3VibWlzc2lvbiBpcyBkaXNhYmxlZCAoYXMgcGVyIGludGVsX2d1Y19zdXNwZW5kKS4KKwkg
Ki8KIAlyZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfZ3VjLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuaApp
bmRleCA0YWJjNTlmNmYzY2QuLjVkOTRjZjQ4MjUxNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfZ3VjLmgKQEAgLTYsNiArNiw5IEBACiAjaWZuZGVmIF9JTlRFTF9HVUNfSF8KICNk
ZWZpbmUgX0lOVEVMX0dVQ19IXwogCisjaW5jbHVkZSA8bGludXgveGFycmF5Lmg+CisjaW5jbHVk
ZSA8bGludXgvZGVsYXkuaD4KKwogI2luY2x1ZGUgImludGVsX3VuY29yZS5oIgogI2luY2x1ZGUg
ImludGVsX2d1Y19mdy5oIgogI2luY2x1ZGUgImludGVsX2d1Y19md2lmLmgiCkBAIC0yOCwyMyAr
MzEsNDMgQEAgc3RydWN0IGludGVsX2d1YyB7CiAJc3RydWN0IGludGVsX2d1Y19sb2cgbG9nOwog
CXN0cnVjdCBpbnRlbF9ndWNfY3QgY3Q7CiAKKwkvKiBHbG9iYWwgZW5naW5lIHVzZWQgdG8gc3Vi
bWl0IHJlcXVlc3RzIHRvIEd1QyAqLworCXN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRf
ZW5naW5lOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnN0YWxsZWRfcmVxdWVzdDsKKwogCS8qIGlu
dGVsX2d1Y19yZWN2IGludGVycnVwdCByZWxhdGVkIHN0YXRlICovCiAJc3BpbmxvY2tfdCBpcnFf
bG9jazsKIAl1bnNpZ25lZCBpbnQgbXNnX2VuYWJsZWRfbWFzazsKIAorCWF0b21pY190IG91dHN0
YW5kaW5nX3N1Ym1pc3Npb25fZzJoOworCiAJc3RydWN0IHsKIAkJdm9pZCAoKnJlc2V0KShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpOwogCQl2b2lkICgqZW5hYmxlKShzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpOwogCQl2b2lkICgqZGlzYWJsZSkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIAl9IGludGVy
cnVwdHM7CiAKKwkvKgorCSAqIGNvbnRleHRzX2xvY2sgcHJvdGVjdHMgdGhlIHBvb2wgb2YgZnJl
ZSBndWMgaWRzIGFuZCBhIGxpbmtlZCBsaXN0IG9mCisJICogZ3VjIGlkcyBhdmFpbGFibGUgdG8g
YmUgc3RvbGVuCisJICovCisJc3BpbmxvY2tfdCBjb250ZXh0c19sb2NrOworCXN0cnVjdCBpZGEg
Z3VjX2lkczsKKwlzdHJ1Y3QgbGlzdF9oZWFkIGd1Y19pZF9saXN0OworCisJYm9vbCBzdWJtaXNz
aW9uX3N1cHBvcnRlZDsKIAlib29sIHN1Ym1pc3Npb25fc2VsZWN0ZWQ7CiAKIAlzdHJ1Y3QgaTkx
NV92bWEgKmFkc192bWE7CiAJc3RydWN0IF9fZ3VjX2Fkc19ibG9iICphZHNfYmxvYjsKKwl1MzIg
YWRzX3JlZ3NldF9zaXplOworCXUzMiBhZHNfZ29sZGVuX2N0eHRfc2l6ZTsKIAotCXN0cnVjdCBp
OTE1X3ZtYSAqc3RhZ2VfZGVzY19wb29sOwotCXZvaWQgKnN0YWdlX2Rlc2NfcG9vbF92YWRkcjsK
KwlzdHJ1Y3QgaTkxNV92bWEgKmxyY19kZXNjX3Bvb2w7CisJdm9pZCAqbHJjX2Rlc2NfcG9vbF92
YWRkcjsKKworCS8qIGd1Y19pZCB0byBpbnRlbF9jb250ZXh0IGxvb2t1cCAqLworCXN0cnVjdCB4
YXJyYXkgY29udGV4dF9sb29rdXA7CiAKIAkvKiBDb250cm9sIHBhcmFtcyBmb3IgZncgaW5pdGlh
bGl6YXRpb24gKi8KIAl1MzIgcGFyYW1zW0dVQ19DVExfTUFYX0RXT1JEU107CkBAIC03NCw3ICs5
NywxNSBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9ndWMgKmxvZ190b19ndWMoc3RydWN0
IGludGVsX2d1Y19sb2cgKmxvZykKIHN0YXRpYwogaW5saW5lIGludCBpbnRlbF9ndWNfc2VuZChz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMsIGNvbnN0IHUzMiAqYWN0aW9uLCB1MzIgbGVuKQogewotCXJl
dHVybiBpbnRlbF9ndWNfY3Rfc2VuZCgmZ3VjLT5jdCwgYWN0aW9uLCBsZW4sIE5VTEwsIDApOwor
CXJldHVybiBpbnRlbF9ndWNfY3Rfc2VuZCgmZ3VjLT5jdCwgYWN0aW9uLCBsZW4sIE5VTEwsIDAs
IDApOworfQorCitzdGF0aWMKK2lubGluZSBpbnQgaW50ZWxfZ3VjX3NlbmRfbmIoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjLCBjb25zdCB1MzIgKmFjdGlvbiwgdTMyIGxlbiwKKwkJCSAgICAgdTMyIGcy
aF9sZW5fZHcpCit7CisJcmV0dXJuIGludGVsX2d1Y19jdF9zZW5kKCZndWMtPmN0LCBhY3Rpb24s
IGxlbiwgTlVMTCwgMCwKKwkJCQkgTUFLRV9TRU5EX0ZMQUdTKGcyaF9sZW5fZHcpKTsKIH0KIAog
c3RhdGljIGlubGluZSBpbnQKQEAgLTgyLDcgKzExMywzNiBAQCBpbnRlbF9ndWNfc2VuZF9hbmRf
cmVjZWl2ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIGNvbnN0IHUzMiAqYWN0aW9uLCB1MzIgbGVu
LAogCQkJICAgdTMyICpyZXNwb25zZV9idWYsIHUzMiByZXNwb25zZV9idWZfc2l6ZSkKIHsKIAly
ZXR1cm4gaW50ZWxfZ3VjX2N0X3NlbmQoJmd1Yy0+Y3QsIGFjdGlvbiwgbGVuLAotCQkJCSByZXNw
b25zZV9idWYsIHJlc3BvbnNlX2J1Zl9zaXplKTsKKwkJCQkgcmVzcG9uc2VfYnVmLCByZXNwb25z
ZV9idWZfc2l6ZSwgMCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IGludGVsX2d1Y19zZW5kX2J1
c3lfbG9vcChzdHJ1Y3QgaW50ZWxfZ3VjKiBndWMsCisJCQkJCSAgIGNvbnN0IHUzMiAqYWN0aW9u
LAorCQkJCQkgICB1MzIgbGVuLAorCQkJCQkgICB1MzIgZzJoX2xlbl9kdywKKwkJCQkJICAgYm9v
bCBsb29wKQoreworCWludCBlcnI7CisJdW5zaWduZWQgaW50IHNsZWVwX3BlcmlvZF9tcyA9IDE7
CisJYm9vbCBub3RfYXRvbWljID0gIWluX2F0b21pYygpICYmICFpcnFzX2Rpc2FibGVkKCk7CisK
KwkvKiBObyBzbGVlcGluZyB3aXRoIHNwaW4gbG9ja3MsIGp1c3QgYnVzeSBsb29wICovCisJbWln
aHRfc2xlZXBfaWYobG9vcCAmJiBub3RfYXRvbWljKTsKKworcmV0cnk6CisJZXJyID0gaW50ZWxf
Z3VjX3NlbmRfbmIoZ3VjLCBhY3Rpb24sIGxlbiwgZzJoX2xlbl9kdyk7CisJaWYgKHVubGlrZWx5
KGVyciA9PSAtRUJVU1kgJiYgbG9vcCkpIHsKKwkJaWYgKGxpa2VseShub3RfYXRvbWljKSkgewor
CQkJaWYgKG1zbGVlcF9pbnRlcnJ1cHRpYmxlKHNsZWVwX3BlcmlvZF9tcykpCisJCQkJcmV0dXJu
IC1FSU5UUjsKKwkJCXNsZWVwX3BlcmlvZF9tcyA9IHNsZWVwX3BlcmlvZF9tcyA8PCAxOworCQl9
IGVsc2UgeworCQkJY3B1X3JlbGF4KCk7CisJCX0KKwkJZ290byByZXRyeTsKKwl9CisKKwlyZXR1
cm4gZXJyOwogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3VjX3RvX2hvc3RfZXZlbnRf
aGFuZGxlcihzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCkBAIC0xMTgsNiArMTc4LDcgQEAgc3RhdGlj
IGlubGluZSB1MzIgaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywK
IH0KIAogdm9pZCBpbnRlbF9ndWNfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwor
dm9pZCBpbnRlbF9ndWNfaW5pdF9sYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiB2b2lkIGlu
dGVsX2d1Y19pbml0X3NlbmRfcmVncyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRl
bF9ndWNfd3JpdGVfcGFyYW1zKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiBpbnQgaW50ZWxfZ3Vj
X2luaXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKQEAgLTE2MCw5ICsyMjEsMjUgQEAgc3RhdGlj
IGlubGluZSBib29sIGludGVsX2d1Y19pc19yZWFkeShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJ
cmV0dXJuIGludGVsX2d1Y19pc19md19ydW5uaW5nKGd1YykgJiYgaW50ZWxfZ3VjX2N0X2VuYWJs
ZWQoJmd1Yy0+Y3QpOwogfQogCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3VjX3Jlc2V0X2lu
dGVycnVwdHMoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCWd1Yy0+aW50ZXJydXB0cy5yZXNl
dChndWMpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3VjX2VuYWJsZV9pbnRlcnJ1
cHRzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlndWMtPmludGVycnVwdHMuZW5hYmxlKGd1
Yyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9ndWNfZGlzYWJsZV9pbnRlcnJ1cHRz
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlndWMtPmludGVycnVwdHMuZGlzYWJsZShndWMp
OworfQorCiBzdGF0aWMgaW5saW5lIGludCBpbnRlbF9ndWNfc2FuaXRpemUoc3RydWN0IGludGVs
X2d1YyAqZ3VjKQogewogCWludGVsX3VjX2Z3X3Nhbml0aXplKCZndWMtPmZ3KTsKKwlpbnRlbF9n
dWNfZGlzYWJsZV9pbnRlcnJ1cHRzKGd1Yyk7CiAJaW50ZWxfZ3VjX2N0X3Nhbml0aXplKCZndWMt
PmN0KTsKIAlndWMtPm1taW9fbXNnID0gMDsKIApAQCAtMTgzLDggKzI2MCwyNyBAQCBzdGF0aWMg
aW5saW5lIHZvaWQgaW50ZWxfZ3VjX2Rpc2FibGVfbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yywg
dTMyIG1hc2spCiAJc3Bpbl91bmxvY2tfaXJxKCZndWMtPmlycV9sb2NrKTsKIH0KIAotaW50IGlu
dGVsX2d1Y19yZXNldF9lbmdpbmUoc3RydWN0IGludGVsX2d1YyAqZ3VjLAotCQkJICAgc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKK2ludCBpbnRlbF9ndWNfd2FpdF9mb3JfaWRsZShz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMsIGxvbmcgdGltZW91dCk7CisKK2ludCBpbnRlbF9ndWNfZGVy
ZWdpc3Rlcl9kb25lX3Byb2Nlc3NfbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkJICBj
b25zdCB1MzIgKm1zZywgdTMyIGxlbik7CitpbnQgaW50ZWxfZ3VjX3NjaGVkX2RvbmVfcHJvY2Vz
c19tc2coc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCSAgICAgY29uc3QgdTMyICptc2csIHUz
MiBsZW4pOworaW50IGludGVsX2d1Y19jb250ZXh0X3Jlc2V0X3Byb2Nlc3NfbXNnKHN0cnVjdCBp
bnRlbF9ndWMgKmd1YywKKwkJCQkJY29uc3QgdTMyICptc2csIHUzMiBsZW4pOworaW50IGludGVs
X2d1Y19lbmdpbmVfZmFpbHVyZV9wcm9jZXNzX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJ
CQkJCSBjb25zdCB1MzIgKm1zZywgdTMyIGxlbik7CisKK3ZvaWQgaW50ZWxfZ3VjX2ZpbmRfaHVu
Z19jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CisKK2ludCBpbnRlbF9n
dWNfZ2xvYmFsX3BvbGljaWVzX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOworCit2b2lk
IGludGVsX2d1Y19jb250ZXh0X2JhbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKTsKKwordm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9yZXNldF9wcmVw
YXJlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7Cit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX3Jl
c2V0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgYm9vbCBzdGFsbGVkKTsKK3ZvaWQgaW50ZWxfZ3Vj
X3N1Ym1pc3Npb25fcmVzZXRfZmluaXNoKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7Cit2b2lkIGlu
dGVsX2d1Y19zdWJtaXNzaW9uX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMp
OwogCiB2b2lkIGludGVsX2d1Y19sb2FkX3N0YXR1cyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0
cnVjdCBkcm1fcHJpbnRlciAqcCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3VjL2ludGVsX2d1Y19hZHMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVs
X2d1Y19hZHMuYwppbmRleCBiODIxNDU2NTJkNTcuLmRmYWVhZmM1MTJmYiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Fkcy5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19hZHMuYwpAQCAtMyw4ICszLDExIEBACiAgKiBD
b3B5cmlnaHQgwqkgMjAxNC0yMDE5IEludGVsIENvcnBvcmF0aW9uCiAgKi8KIAorI2luY2x1ZGUg
PGxpbnV4L2JzZWFyY2guaD4KKwogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCiAjaW5jbHVkZSAi
Z3QvaW50ZWxfbHJjLmgiCisjaW5jbHVkZSAiZ3Qvc2htZW1fdXRpbHMuaCIKICNpbmNsdWRlICJp
bnRlbF9ndWNfYWRzLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX2Z3aWYuaCIKICNpbmNsdWRlICJp
bnRlbF91Yy5oIgpAQCAtMjMsNiArMjYsMTUgQEAKICAqICAgICAgfCBndWNfcG9saWNpZXMgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwKICAqICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLSsKICAqICAgICAgfCBndWNfZ3Rfc3lzdGVtX2luZm8gICAgICAgICAg
ICAgICAgICAgIHwKKyAqICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLSsgPD09IHN0YXRpYworICogICAgICB8IGd1Y19tbWlvX3JlZ1tjb3VudEFdIChlbmdpbmUg
MC4wKSAgICAgfAorICogICAgICB8IGd1Y19tbWlvX3JlZ1tjb3VudEJdIChlbmdpbmUgMC4xKSAg
ICAgfAorICogICAgICB8IGd1Y19tbWlvX3JlZ1tjb3VudENdIChlbmdpbmUgMS4wKSAgICAgfAor
ICogICAgICB8ICAgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAorICogICAg
ICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyA8PT0gZHluYW1pYwor
ICogICAgICB8IHBhZGRpbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAorICogICAg
ICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyA8PT0gNEsgYWxpZ25l
ZAorICogICAgICB8IGdvbGRlbiBjb250ZXh0cyAgICAgICAgICAgICAgICAgICAgICAgfAogICog
ICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKwogICogICAgICB8
IHBhZGRpbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAogICogICAgICArLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKyA8PT0gNEsgYWxpZ25lZApAQCAtMzUs
MTYgKzQ3LDQ5IEBAIHN0cnVjdCBfX2d1Y19hZHNfYmxvYiB7CiAJc3RydWN0IGd1Y19hZHMgYWRz
OwogCXN0cnVjdCBndWNfcG9saWNpZXMgcG9saWNpZXM7CiAJc3RydWN0IGd1Y19ndF9zeXN0ZW1f
aW5mbyBzeXN0ZW1faW5mbzsKKwkvKiBGcm9tIGhlcmUgb24sIGxvY2F0aW9uIGlzIGR5bmFtaWMh
IFJlZmVyIHRvIGFib3ZlIGRpYWdyYW0uICovCisJc3RydWN0IGd1Y19tbWlvX3JlZyByZWdzZXRb
MF07CiB9IF9fcGFja2VkOwogCitzdGF0aWMgdTMyIGd1Y19hZHNfcmVnc2V0X3NpemUoc3RydWN0
IGludGVsX2d1YyAqZ3VjKQoreworCUdFTV9CVUdfT04oIWd1Yy0+YWRzX3JlZ3NldF9zaXplKTsK
KwlyZXR1cm4gZ3VjLT5hZHNfcmVnc2V0X3NpemU7Cit9CisKK3N0YXRpYyB1MzIgZ3VjX2Fkc19n
b2xkZW5fY3R4dF9zaXplKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlyZXR1cm4gUEFHRV9B
TElHTihndWMtPmFkc19nb2xkZW5fY3R4dF9zaXplKTsKK30KKwogc3RhdGljIHUzMiBndWNfYWRz
X3ByaXZhdGVfZGF0YV9zaXplKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKIAlyZXR1cm4gUEFH
RV9BTElHTihndWMtPmZ3LnByaXZhdGVfZGF0YV9zaXplKTsKIH0KIAorc3RhdGljIHUzMiBndWNf
YWRzX3JlZ3NldF9vZmZzZXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCXJldHVybiBvZmZz
ZXRvZihzdHJ1Y3QgX19ndWNfYWRzX2Jsb2IsIHJlZ3NldCk7Cit9CisKK3N0YXRpYyB1MzIgZ3Vj
X2Fkc19nb2xkZW5fY3R4dF9vZmZzZXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQoreworCXUzMiBv
ZmZzZXQ7CisKKwlvZmZzZXQgPSBndWNfYWRzX3JlZ3NldF9vZmZzZXQoZ3VjKSArCisJCSBndWNf
YWRzX3JlZ3NldF9zaXplKGd1Yyk7CisKKwlyZXR1cm4gUEFHRV9BTElHTihvZmZzZXQpOworfQor
CiBzdGF0aWMgdTMyIGd1Y19hZHNfcHJpdmF0ZV9kYXRhX29mZnNldChzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMpCiB7Ci0JcmV0dXJuIFBBR0VfQUxJR04oc2l6ZW9mKHN0cnVjdCBfX2d1Y19hZHNfYmxv
YikpOworCXUzMiBvZmZzZXQ7CisKKwlvZmZzZXQgPSBndWNfYWRzX2dvbGRlbl9jdHh0X29mZnNl
dChndWMpICsKKwkJIGd1Y19hZHNfZ29sZGVuX2N0eHRfc2l6ZShndWMpOworCisJcmV0dXJuIFBB
R0VfQUxJR04ob2Zmc2V0KTsKIH0KIAogc3RhdGljIHUzMiBndWNfYWRzX2Jsb2Jfc2l6ZShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpCkBAIC01MywxNSArOTgsNjcgQEAgc3RhdGljIHUzMiBndWNfYWRz
X2Jsb2Jfc2l6ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJICAgICAgIGd1Y19hZHNfcHJpdmF0
ZV9kYXRhX3NpemUoZ3VjKTsKIH0KIAotc3RhdGljIHZvaWQgZ3VjX3BvbGljaWVzX2luaXQoc3Ry
dWN0IGd1Y19wb2xpY2llcyAqcG9saWNpZXMpCitzdGF0aWMgdm9pZCBndWNfcG9saWNpZXNfaW5p
dChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBndWNfcG9saWNpZXMgKnBvbGljaWVzKQog
eworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3VjKTsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1OworCiAJcG9saWNpZXMtPmRwY19wcm9tb3RlX3Rp
bWUgPSBHTE9CQUxfUE9MSUNZX0RFRkFVTFRfRFBDX1BST01PVEVfVElNRV9VUzsKIAlwb2xpY2ll
cy0+bWF4X251bV93b3JrX2l0ZW1zID0gR0xPQkFMX1BPTElDWV9NQVhfTlVNX1dJOwotCS8qIERp
c2FibGUgYXV0b21hdGljIHJlc2V0cyBhcyBub3QgeWV0IHN1cHBvcnRlZC4gKi8KLQlwb2xpY2ll
cy0+Z2xvYmFsX2ZsYWdzID0gR0xPQkFMX1BPTElDWV9ESVNBQkxFX0VOR0lORV9SRVNFVDsKKwor
CXBvbGljaWVzLT5nbG9iYWxfZmxhZ3MgPSAwOworCWlmIChpOTE1LT5wYXJhbXMucmVzZXQgPCAy
KQorCQlwb2xpY2llcy0+Z2xvYmFsX2ZsYWdzIHw9IEdMT0JBTF9QT0xJQ1lfRElTQUJMRV9FTkdJ
TkVfUkVTRVQ7CisKIAlwb2xpY2llcy0+aXNfdmFsaWQgPSAxOwogfQogCit2b2lkIGludGVsX2d1
Y19sb2dfcG9saWN5X2luZm8oc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgZHJtX3ByaW50
ZXIgKmRwKQoreworCXN0cnVjdCBfX2d1Y19hZHNfYmxvYiAqYmxvYiA9IGd1Yy0+YWRzX2Jsb2I7
CisKKwlpZiAodW5saWtlbHkoIWJsb2IpKQorCQlyZXR1cm47CisKKwlkcm1fcHJpbnRmKGRwLCAi
R2xvYmFsIHNjaGVkdWxpbmcgcG9saWNpZXM6XG4iKTsKKwlkcm1fcHJpbnRmKGRwLCAiICBEUEMg
cHJvbW90ZSB0aW1lICAgPSAldVxuIiwgYmxvYi0+cG9saWNpZXMuZHBjX3Byb21vdGVfdGltZSk7
CisJZHJtX3ByaW50ZihkcCwgIiAgTWF4IG51bSB3b3JrIGl0ZW1zID0gJXVcbiIsIGJsb2ItPnBv
bGljaWVzLm1heF9udW1fd29ya19pdGVtcyk7CisJZHJtX3ByaW50ZihkcCwgIiAgRmxhZ3MgICAg
ICAgICAgICAgID0gJXVcbiIsIGJsb2ItPnBvbGljaWVzLmdsb2JhbF9mbGFncyk7Cit9CisKK3N0
YXRpYyBpbnQgZ3VjX2FjdGlvbl9wb2xpY2llc191cGRhdGUoc3RydWN0IGludGVsX2d1YyAqZ3Vj
LCB1MzIgcG9saWN5X29mZnNldCkKK3sKKwl1MzIgYWN0aW9uW10gPSB7CisJCUlOVEVMX0dVQ19B
Q1RJT05fR0xPQkFMX1NDSEVEX1BPTElDWV9DSEFOR0UsCisJCXBvbGljeV9vZmZzZXQKKwl9Owor
CisJcmV0dXJuIGludGVsX2d1Y19zZW5kX2J1c3lfbG9vcChndWMsIGFjdGlvbiwgQVJSQVlfU0la
RShhY3Rpb24pLCAwLCB0cnVlKTsKK30KKworaW50IGludGVsX2d1Y19nbG9iYWxfcG9saWNpZXNf
dXBkYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlzdHJ1Y3QgX19ndWNfYWRzX2Jsb2Ig
KmJsb2IgPSBndWMtPmFkc19ibG9iOworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3Qo
Z3VjKTsKKwlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKwlpbnQgcmV0OworCisJaWYgKCFibG9i
KQorCQlyZXR1cm4gLUVOT1RTVVBQOworCisJR0VNX0JVR19PTighYmxvYi0+YWRzLnNjaGVkdWxl
cl9wb2xpY2llcyk7CisKKwlndWNfcG9saWNpZXNfaW5pdChndWMsICZibG9iLT5wb2xpY2llcyk7
CisKKwlpZiAoIWludGVsX2d1Y19pc19yZWFkeShndWMpKQorCQlyZXR1cm4gMDsKKworCXdpdGhf
aW50ZWxfcnVudGltZV9wbSgmZ3QtPmk5MTUtPnJ1bnRpbWVfcG0sIHdha2VyZWYpCisJCXJldCA9
IGd1Y19hY3Rpb25fcG9saWNpZXNfdXBkYXRlKGd1YywgYmxvYi0+YWRzLnNjaGVkdWxlcl9wb2xp
Y2llcyk7CisKKwlyZXR1cm4gcmV0OworfQorCiBzdGF0aWMgdm9pZCBndWNfbWFwcGluZ190YWJs
ZV9pbml0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiAJCQkJICAgc3RydWN0IGd1Y19ndF9zeXN0ZW1f
aW5mbyAqc3lzdGVtX2luZm8pCiB7CkBAIC04NCw1MyArMTgxLDMyMSBAQCBzdGF0aWMgdm9pZCBn
dWNfbWFwcGluZ190YWJsZV9pbml0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsCiB9CiAKIC8qCi0gKiBU
aGUgZmlyc3QgODAgZHdvcmRzIG9mIHRoZSByZWdpc3RlciBzdGF0ZSBjb250ZXh0LCBjb250YWlu
aW5nIHRoZQotICogZXhlY2xpc3RzIGFuZCBwcGd0dCByZWdpc3RlcnMuCisgKiBUaGUgc2F2ZS9y
ZXN0b3JlIHJlZ2lzdGVyIGxpc3QgbXVzdCBiZSBwcmUtY2FsY3VsYXRlZCB0byBhIHRlbXBvcmFy
eQorICogYnVmZmVyIG9mIGRyaXZlciBkZWZpbmVkIHNpemUgYmVmb3JlIGl0IGNhbiBiZSBnZW5l
cmF0ZWQgaW4gcGxhY2UKKyAqIGluc2lkZSB0aGUgQURTLgogICovCi0jZGVmaW5lIExSX0hXX0NP
TlRFWFRfU0laRQkoODAgKiBzaXplb2YodTMyKSkKKyNkZWZpbmUgTUFYX01NSU9fUkVHUwkxMjgJ
LyogQXJiaXRyYXJ5IHNpemUsIGluY3JlYXNlIGFzIG5lZWRlZCAqLworc3RydWN0IHRlbXBfcmVn
c2V0IHsKKwlzdHJ1Y3QgZ3VjX21taW9fcmVnICpyZWdpc3RlcnM7CisJdTMyIHVzZWQ7CisJdTMy
IHNpemU7Cit9OwogCi1zdGF0aWMgdm9pZCBfX2d1Y19hZHNfaW5pdChzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMpCitzdGF0aWMgaW50IGd1Y19tbWlvX3JlZ19jbXAoY29uc3Qgdm9pZCAqYSwgY29uc3Qg
dm9pZCAqYikKK3sKKwljb25zdCBzdHJ1Y3QgZ3VjX21taW9fcmVnICpyYSA9IGE7CisJY29uc3Qg
c3RydWN0IGd1Y19tbWlvX3JlZyAqcmIgPSBiOworCisJcmV0dXJuIChpbnQpcmEtPm9mZnNldCAt
IChpbnQpcmItPm9mZnNldDsKK30KKworc3RhdGljIHZvaWQgZ3VjX21taW9fcmVnX2FkZChzdHJ1
Y3QgdGVtcF9yZWdzZXQgKnJlZ3NldCwKKwkJCSAgICAgdTMyIG9mZnNldCwgdTMyIGZsYWdzKQor
eworCXUzMiBjb3VudCA9IHJlZ3NldC0+dXNlZDsKKwlzdHJ1Y3QgZ3VjX21taW9fcmVnIHJlZyA9
IHsKKwkJLm9mZnNldCA9IG9mZnNldCwKKwkJLmZsYWdzID0gZmxhZ3MsCisJfTsKKwlzdHJ1Y3Qg
Z3VjX21taW9fcmVnICpzbG90OworCisJR0VNX0JVR19PTihjb3VudCA+PSByZWdzZXQtPnNpemUp
OworCisJLyoKKwkgKiBUaGUgbW1pbyBsaXN0IGlzIGJ1aWx0IHVzaW5nIHNlcGFyYXRlIGxpc3Rz
IHdpdGhpbiB0aGUgZHJpdmVyLgorCSAqIEl0J3MgcG9zc2libGUgdGhhdCBhdCBzb21lIHBvaW50
IHdlIG1heSBhdHRlbXB0IHRvIGFkZCB0aGUgc2FtZQorCSAqIHJlZ2lzdGVyIG1vcmUgdGhhbiBv
bmNlLiBEbyBub3QgY29uc2lkZXIgdGhpcyBhbiBlcnJvcjsgc2lsZW50bHkKKwkgKiBtb3ZlIG9u
IGlmIHRoZSByZWdpc3RlciBpcyBhbHJlYWR5IGluIHRoZSBsaXN0LgorCSAqLworCWlmIChic2Vh
cmNoKCZyZWcsIHJlZ3NldC0+cmVnaXN0ZXJzLCBjb3VudCwKKwkJICAgIHNpemVvZihyZWcpLCBn
dWNfbW1pb19yZWdfY21wKSkKKwkJcmV0dXJuOworCisJc2xvdCA9ICZyZWdzZXQtPnJlZ2lzdGVy
c1tjb3VudF07CisJcmVnc2V0LT51c2VkKys7CisJKnNsb3QgPSByZWc7CisKKwl3aGlsZSAoc2xv
dC0tID4gcmVnc2V0LT5yZWdpc3RlcnMpIHsKKwkJR0VNX0JVR19PTihzbG90WzBdLm9mZnNldCA9
PSBzbG90WzFdLm9mZnNldCk7CisJCWlmIChzbG90WzFdLm9mZnNldCA+IHNsb3RbMF0ub2Zmc2V0
KQorCQkJYnJlYWs7CisKKwkJc3dhcChzbG90WzFdLCBzbG90WzBdKTsKKwl9Cit9CisKKyNkZWZp
bmUgR1VDX01NSU9fUkVHX0FERChyZWdzZXQsIHJlZywgbWFza2VkKSBcCisJZ3VjX21taW9fcmVn
X2FkZChyZWdzZXQsIFwKKwkJCSBpOTE1X21taW9fcmVnX29mZnNldCgocmVnKSksIFwKKwkJCSAo
bWFza2VkKSA/IEdVQ19SRUdTRVRfTUFTS0VEIDogMCkKKworc3RhdGljIHZvaWQgZ3VjX21taW9f
cmVnc2V0X2luaXQoc3RydWN0IHRlbXBfcmVnc2V0ICpyZWdzZXQsCisJCQkJIHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwljb25zdCB1MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19i
YXNlOworCXN0cnVjdCBpOTE1X3dhX2xpc3QgKndhbCA9ICZlbmdpbmUtPndhX2xpc3Q7CisJc3Ry
dWN0IGk5MTVfd2EgKndhOworCXVuc2lnbmVkIGludCBpOworCisJcmVnc2V0LT51c2VkID0gMDsK
KworCUdVQ19NTUlPX1JFR19BREQocmVnc2V0LCBSSU5HX01PREVfR0VONyhiYXNlKSwgdHJ1ZSk7
CisJR1VDX01NSU9fUkVHX0FERChyZWdzZXQsIFJJTkdfSFdTX1BHQShiYXNlKSwgZmFsc2UpOwor
CUdVQ19NTUlPX1JFR19BREQocmVnc2V0LCBSSU5HX0lNUihiYXNlKSwgZmFsc2UpOworCisJZm9y
IChpID0gMCwgd2EgPSB3YWwtPmxpc3Q7IGkgPCB3YWwtPmNvdW50OyBpKyssIHdhKyspCisJCUdV
Q19NTUlPX1JFR19BREQocmVnc2V0LCB3YS0+cmVnLCB3YS0+bWFza2VkX3JlZyk7CisKKwkvKiBC
ZSBleHRyYSBwYXJhbm9pZCBhbmQgaW5jbHVkZSBhbGwgd2hpdGVsaXN0IHJlZ2lzdGVycy4gKi8K
Kwlmb3IgKGkgPSAwOyBpIDwgUklOR19NQVhfTk9OUFJJVl9TTE9UUzsgaSsrKQorCQlHVUNfTU1J
T19SRUdfQUREKHJlZ3NldCwKKwkJCQkgUklOR19GT1JDRV9UT19OT05QUklWKGJhc2UsIGkpLAor
CQkJCSBmYWxzZSk7CisKKwkvKiBhZGQgaW4gbG9jYWwgTU9DUyByZWdpc3RlcnMgKi8KKwlmb3Ig
KGkgPSAwOyBpIDwgR0VOOV9MTkNGQ01PQ1NfUkVHX0NPVU5UOyBpKyspCisJCUdVQ19NTUlPX1JF
R19BREQocmVnc2V0LCBHRU45X0xOQ0ZDTU9DUyhpKSwgZmFsc2UpOworfQorCitzdGF0aWMgaW50
IGd1Y19tbWlvX3JlZ19zdGF0ZV9xdWVyeShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJc3Ry
dWN0IGludGVsX2d0ICpndCA9IGd1Y190b19ndChndWMpOwotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1ID0gZ3QtPmk5MTU7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwor
CWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0cnVjdCB0ZW1wX3JlZ3NldCB0ZW1wX3NldDsK
Kwl1MzIgdG90YWw7CisKKwkvKgorCSAqIE5lZWQgdG8gYWN0dWFsbHkgYnVpbGQgdGhlIGxpc3Qg
aW4gb3JkZXIgdG8gZmlsdGVyIG91dAorCSAqIGR1cGxpY2F0ZXMgYW5kIG90aGVyIHN1Y2ggZGF0
YSBkZXBlbmRlbnQgY29uc3RydWN0aW9ucy4KKwkgKi8KKwl0ZW1wX3NldC5zaXplID0gTUFYX01N
SU9fUkVHUzsKKwl0ZW1wX3NldC5yZWdpc3RlcnMgPSBrbWFsbG9jX2FycmF5KHRlbXBfc2V0LnNp
emUsCisJCQkJCSAgc2l6ZW9mKCp0ZW1wX3NldC5yZWdpc3RlcnMpLAorCQkJCQkgIEdGUF9LRVJO
RUwpOworCWlmICghdGVtcF9zZXQucmVnaXN0ZXJzKQorCQlyZXR1cm4gLUVOT01FTTsKKworCXRv
dGFsID0gMDsKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndCwgaWQpIHsKKwkJZ3VjX21taW9f
cmVnc2V0X2luaXQoJnRlbXBfc2V0LCBlbmdpbmUpOworCQl0b3RhbCArPSB0ZW1wX3NldC51c2Vk
OworCX0KKworCWtmcmVlKHRlbXBfc2V0LnJlZ2lzdGVycyk7CisKKwlyZXR1cm4gdG90YWwgKiBz
aXplb2Yoc3RydWN0IGd1Y19tbWlvX3JlZyk7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19tbWlvX3Jl
Z19zdGF0ZV9pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkgICAgc3RydWN0IF9fZ3Vj
X2Fkc19ibG9iICpibG9iKQoreworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3Vj
KTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVf
aWQgaWQ7CisJc3RydWN0IHRlbXBfcmVnc2V0IHRlbXBfc2V0OworCXN0cnVjdCBndWNfbW1pb19y
ZWdfc2V0ICphZHNfcmVnX3NldDsKKwl1MzIgYWRkcl9nZ3R0LCBvZmZzZXQ7CisJdTggZ3VjX2Ns
YXNzOworCisJb2Zmc2V0ID0gZ3VjX2Fkc19yZWdzZXRfb2Zmc2V0KGd1Yyk7CisJYWRkcl9nZ3R0
ID0gaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KGd1YywgZ3VjLT5hZHNfdm1hKSArIG9mZnNldDsKKwl0
ZW1wX3NldC5yZWdpc3RlcnMgPSAoc3RydWN0IGd1Y19tbWlvX3JlZyAqKSAoKCh1OCAqKSBibG9i
KSArIG9mZnNldCk7CisJdGVtcF9zZXQuc2l6ZSA9IGd1Yy0+YWRzX3JlZ3NldF9zaXplIC8gc2l6
ZW9mKHRlbXBfc2V0LnJlZ2lzdGVyc1swXSk7CisKKwlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBn
dCwgaWQpIHsKKwkJLyogQ2xhc3MgaW5kZXggaXMgY2hlY2tlZCBpbiBjbGFzcyBjb252ZXJ0ZXIg
Ki8KKwkJR0VNX0JVR19PTihlbmdpbmUtPmluc3RhbmNlID49IEdVQ19NQVhfSU5TVEFOQ0VTX1BF
Ul9DTEFTUyk7CisKKwkJZ3VjX2NsYXNzID0gZW5naW5lX2NsYXNzX3RvX2d1Y19jbGFzcyhlbmdp
bmUtPmNsYXNzKTsKKwkJYWRzX3JlZ19zZXQgPSAmYmxvYi0+YWRzLnJlZ19zdGF0ZV9saXN0W2d1
Y19jbGFzc11bZW5naW5lLT5pbnN0YW5jZV07CisKKwkJZ3VjX21taW9fcmVnc2V0X2luaXQoJnRl
bXBfc2V0LCBlbmdpbmUpOworCQlpZiAoIXRlbXBfc2V0LnVzZWQpIHsKKwkJCWFkc19yZWdfc2V0
LT5hZGRyZXNzID0gMDsKKwkJCWFkc19yZWdfc2V0LT5jb3VudCA9IDA7CisJCQljb250aW51ZTsK
KwkJfQorCisJCWFkc19yZWdfc2V0LT5hZGRyZXNzID0gYWRkcl9nZ3R0OworCQlhZHNfcmVnX3Nl
dC0+Y291bnQgPSB0ZW1wX3NldC51c2VkOworCisJCXRlbXBfc2V0LnNpemUgLT0gdGVtcF9zZXQu
dXNlZDsKKwkJdGVtcF9zZXQucmVnaXN0ZXJzICs9IHRlbXBfc2V0LnVzZWQ7CisJCWFkZHJfZ2d0
dCArPSB0ZW1wX3NldC51c2VkICogc2l6ZW9mKHN0cnVjdCBndWNfbW1pb19yZWcpOworCX0KKwor
CUdFTV9CVUdfT04odGVtcF9zZXQuc2l6ZSk7Cit9CisKK3N0YXRpYyB2b2lkIGZpbGxfZW5naW5l
X2VuYWJsZV9tYXNrcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAorCQkJCSAgICAgc3RydWN0IGd1Y19n
dF9zeXN0ZW1faW5mbyAqaW5mbykKK3sKKwlpbmZvLT5lbmdpbmVfZW5hYmxlZF9tYXNrc1tHVUNf
UkVOREVSX0NMQVNTXSA9IDE7CisJaW5mby0+ZW5naW5lX2VuYWJsZWRfbWFza3NbR1VDX0JMSVRU
RVJfQ0xBU1NdID0gMTsKKwlpbmZvLT5lbmdpbmVfZW5hYmxlZF9tYXNrc1tHVUNfVklERU9fQ0xB
U1NdID0gVkRCT1hfTUFTSyhndCk7CisJaW5mby0+ZW5naW5lX2VuYWJsZWRfbWFza3NbR1VDX1ZJ
REVPRU5IQU5DRV9DTEFTU10gPSBWRUJPWF9NQVNLKGd0KTsKK30KKworLyogU2tpcCBleGVjbGlz
dCBhbmQgUFBHVFQgcmVnaXN0ZXJzICovCisjZGVmaW5lIExSX0hXX0NPTlRFWFRfU0laRSAgICAg
ICg4MCAqIHNpemVvZih1MzIpKQorI2RlZmluZSBTS0lQX1NJWkUgICAgICAgICAgICAgICAoTFJD
X1BQSFdTUF9TWiAqIFBBR0VfU0laRSArIExSX0hXX0NPTlRFWFRfU0laRSkKKworc3RhdGljIGlu
dCBndWNfcHJlcF9nb2xkZW5fY29udGV4dChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAg
c3RydWN0IF9fZ3VjX2Fkc19ibG9iICpibG9iKQoreworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBn
dWNfdG9fZ3QoZ3VjKTsKKwl1MzIgYWRkcl9nZ3R0LCBvZmZzZXQ7CisJdTMyIHRvdGFsX3NpemUg
PSAwLCBhbGxvY19zaXplLCByZWFsX3NpemU7CisJdTggZW5naW5lX2NsYXNzLCBndWNfY2xhc3M7
CisJc3RydWN0IGd1Y19ndF9zeXN0ZW1faW5mbyAqaW5mbywgbG9jYWxfaW5mbzsKKworCS8qCisJ
ICogUmVzZXJ2ZSB0aGUgbWVtb3J5IGZvciB0aGUgZ29sZGVuIGNvbnRleHRzIGFuZCBwb2ludCBH
dUMgYXQgaXQgYnV0CisJICogbGVhdmUgaXQgZW1wdHkgZm9yIG5vdy4gVGhlIGNvbnRleHQgZGF0
YSB3aWxsIGJlIGZpbGxlZCBpbiBsYXRlcgorCSAqIG9uY2UgdGhlcmUgaXMgc29tZXRoaW5nIGF2
YWlsYWJsZSB0byBwdXQgdGhlcmUuCisJICoKKwkgKiBOb3RlIHRoYXQgdGhlIEhXU1AgYW5kIHJp
bmcgY29udGV4dCBhcmUgbm90IGluY2x1ZGVkLgorCSAqCisJICogTm90ZSBhbHNvIHRoYXQgdGhl
IHN0b3JhZ2UgbXVzdCBiZSBwaW5uZWQgaW4gdGhlIEdHVFQsIHNvIHRoYXQgdGhlCisJICogYWRk
cmVzcyB3b24ndCBjaGFuZ2UgYWZ0ZXIgR3VDIGhhcyBiZWVuIHRvbGQgd2hlcmUgdG8gZmluZCBp
dC4gVGhlCisJICogR3VDIHdpbGwgYWxzbyB2YWxpZGF0ZSB0aGF0IHRoZSBMUkMgYmFzZSArIHNp
emUgZmFsbCB3aXRoaW4gdGhlCisJICogYWxsb3dlZCBHR1RUIHJhbmdlLgorCSAqLworCWlmIChi
bG9iKSB7CisJCW9mZnNldCA9IGd1Y19hZHNfZ29sZGVuX2N0eHRfb2Zmc2V0KGd1Yyk7CisJCWFk
ZHJfZ2d0dCA9IGludGVsX2d1Y19nZ3R0X29mZnNldChndWMsIGd1Yy0+YWRzX3ZtYSkgKyBvZmZz
ZXQ7CisJCWluZm8gPSAmYmxvYi0+c3lzdGVtX2luZm87CisJfSBlbHNlIHsKKwkJbWVtc2V0KCZs
b2NhbF9pbmZvLCAwLCBzaXplb2YobG9jYWxfaW5mbykpOworCQlpbmZvID0gJmxvY2FsX2luZm87
CisJCWZpbGxfZW5naW5lX2VuYWJsZV9tYXNrcyhndCwgaW5mbyk7CisJfQorCisJZm9yIChlbmdp
bmVfY2xhc3MgPSAwOyBlbmdpbmVfY2xhc3MgPD0gTUFYX0VOR0lORV9DTEFTUzsgKytlbmdpbmVf
Y2xhc3MpIHsKKwkJaWYgKGVuZ2luZV9jbGFzcyA9PSBPVEhFUl9DTEFTUykKKwkJCWNvbnRpbnVl
OworCisJCWd1Y19jbGFzcyA9IGVuZ2luZV9jbGFzc190b19ndWNfY2xhc3MoZW5naW5lX2NsYXNz
KTsKKworCQlpZiAoIWluZm8tPmVuZ2luZV9lbmFibGVkX21hc2tzW2d1Y19jbGFzc10pCisJCQlj
b250aW51ZTsKKworCQlyZWFsX3NpemUgPSBpbnRlbF9lbmdpbmVfY29udGV4dF9zaXplKGd0LCBl
bmdpbmVfY2xhc3MpOworCQlhbGxvY19zaXplID0gUEFHRV9BTElHTihyZWFsX3NpemUpOworCQl0
b3RhbF9zaXplICs9IGFsbG9jX3NpemU7CisKKwkJaWYgKCFibG9iKQorCQkJY29udGludWU7CisK
KwkJYmxvYi0+YWRzLmVuZ19zdGF0ZV9zaXplW2d1Y19jbGFzc10gPSByZWFsX3NpemU7CisJCWJs
b2ItPmFkcy5nb2xkZW5fY29udGV4dF9scmNhW2d1Y19jbGFzc10gPSBhZGRyX2dndHQ7CisJCWFk
ZHJfZ2d0dCArPSBhbGxvY19zaXplOworCX0KKworCWlmICghYmxvYikKKwkJcmV0dXJuIHRvdGFs
X3NpemU7CisKKwlHRU1fQlVHX09OKGd1Yy0+YWRzX2dvbGRlbl9jdHh0X3NpemUgIT0gdG90YWxf
c2l6ZSk7CisJcmV0dXJuIHRvdGFsX3NpemU7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICpmaW5kX2VuZ2luZV9zdGF0ZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCB1OCBlbmdpbmVf
Y2xhc3MpCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCWVudW0gaW50ZWxf
ZW5naW5lX2lkIGlkOworCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7CisJCWlm
IChlbmdpbmUtPmNsYXNzICE9IGVuZ2luZV9jbGFzcykKKwkJCWNvbnRpbnVlOworCisJCWlmICgh
ZW5naW5lLT5kZWZhdWx0X3N0YXRlKQorCQkJY29udGludWU7CisKKwkJcmV0dXJuIGVuZ2luZTsK
Kwl9CisKKwlyZXR1cm4gTlVMTDsKK30KKworc3RhdGljIHZvaWQgZ3VjX2luaXRfZ29sZGVuX2Nv
bnRleHQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQorewogCXN0cnVjdCBfX2d1Y19hZHNfYmxvYiAq
YmxvYiA9IGd1Yy0+YWRzX2Jsb2I7Ci0JY29uc3QgdTMyIHNraXBwZWRfc2l6ZSA9IExSQ19QUEhX
U1BfU1ogKiBQQUdFX1NJWkUgKyBMUl9IV19DT05URVhUX1NJWkU7Ci0JdTMyIGJhc2U7CisJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNf
dG9fZ3QoZ3VjKTsKKwl1MzIgYWRkcl9nZ3R0LCBvZmZzZXQ7CisJdTMyIHRvdGFsX3NpemUgPSAw
LCBhbGxvY19zaXplLCByZWFsX3NpemU7CiAJdTggZW5naW5lX2NsYXNzLCBndWNfY2xhc3M7CisJ
dTggKnB0cjsKIAotCS8qIEd1QyBzY2hlZHVsaW5nIHBvbGljaWVzICovCi0JZ3VjX3BvbGljaWVz
X2luaXQoJmJsb2ItPnBvbGljaWVzKTsKKwlpZiAoIWludGVsX3VjX3VzZXNfZ3VjX3N1Ym1pc3Np
b24oJmd0LT51YykpCisJCXJldHVybjsKKworCUdFTV9CVUdfT04oIWJsb2IpOwogCiAJLyoKLQkg
KiBHdUMgZXhwZWN0cyBhIHBlci1lbmdpbmUtY2xhc3MgY29udGV4dCBpbWFnZSBhbmQgc2l6ZQot
CSAqIChtaW51cyBod3NwIGFuZCByaW5nIGNvbnRleHQpLiBUaGUgY29udGV4dCBpbWFnZSB3aWxs
IGJlCi0JICogdXNlZCB0byByZWluaXRpYWxpemUgZW5naW5lcyBhZnRlciBhIHJlc2V0LiBJdCBt
dXN0IGV4aXN0Ci0JICogYW5kIGJlIHBpbm5lZCBpbiB0aGUgR0dUVCwgc28gdGhhdCB0aGUgYWRk
cmVzcyB3b24ndCBjaGFuZ2UgYWZ0ZXIKLQkgKiB3ZSBoYXZlIHRvbGQgR3VDIHdoZXJlIHRvIGZp
bmQgaXQuIFRoZSBjb250ZXh0IHNpemUgd2lsbCBiZSB1c2VkCi0JICogdG8gdmFsaWRhdGUgdGhh
dCB0aGUgTFJDIGJhc2UgKyBzaXplIGZhbGwgd2l0aGluIGFsbG93ZWQgR0dUVC4KKwkgKiBHbyBi
YWNrIGFuZCBmaWxsIGluIHRoZSBnb2xkZW4gY29udGV4dCBkYXRhIG5vdyB0aGF0IGl0IGlzCisJ
ICogYXZhaWxhYmxlLgogCSAqLworCW9mZnNldCA9IGd1Y19hZHNfZ29sZGVuX2N0eHRfb2Zmc2V0
KGd1Yyk7CisJYWRkcl9nZ3R0ID0gaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KGd1YywgZ3VjLT5hZHNf
dm1hKSArIG9mZnNldDsKKwlwdHIgPSAoKHU4ICopIGJsb2IpICsgb2Zmc2V0OworCiAJZm9yIChl
bmdpbmVfY2xhc3MgPSAwOyBlbmdpbmVfY2xhc3MgPD0gTUFYX0VOR0lORV9DTEFTUzsgKytlbmdp
bmVfY2xhc3MpIHsKIAkJaWYgKGVuZ2luZV9jbGFzcyA9PSBPVEhFUl9DTEFTUykKIAkJCWNvbnRp
bnVlOwogCiAJCWd1Y19jbGFzcyA9IGVuZ2luZV9jbGFzc190b19ndWNfY2xhc3MoZW5naW5lX2Ns
YXNzKTsKIAotCQkvKgotCQkgKiBUT0RPOiBTZXQgY29udGV4dCBwb2ludGVyIHRvIGRlZmF1bHQg
c3RhdGUgdG8gYWxsb3cKLQkJICogR3VDIHRvIHJlLWluaXQgZ3VpbHR5IGNvbnRleHRzIGFmdGVy
IGludGVybmFsIHJlc2V0LgotCQkgKi8KLQkJYmxvYi0+YWRzLmdvbGRlbl9jb250ZXh0X2xyY2Fb
Z3VjX2NsYXNzXSA9IDA7Ci0JCWJsb2ItPmFkcy5lbmdfc3RhdGVfc2l6ZVtndWNfY2xhc3NdID0K
LQkJCWludGVsX2VuZ2luZV9jb250ZXh0X3NpemUoZ3VjX3RvX2d0KGd1YyksCi0JCQkJCQkgIGVu
Z2luZV9jbGFzcykgLQotCQkJc2tpcHBlZF9zaXplOworCQlpZiAoIWJsb2ItPnN5c3RlbV9pbmZv
LmVuZ2luZV9lbmFibGVkX21hc2tzW2d1Y19jbGFzc10pCisJCQljb250aW51ZTsKKworCQlyZWFs
X3NpemUgPSBpbnRlbF9lbmdpbmVfY29udGV4dF9zaXplKGd0LCBlbmdpbmVfY2xhc3MpOworCQlh
bGxvY19zaXplID0gUEFHRV9BTElHTihyZWFsX3NpemUpOworCQl0b3RhbF9zaXplICs9IGFsbG9j
X3NpemU7CisKKwkJZW5naW5lID0gZmluZF9lbmdpbmVfc3RhdGUoZ3QsIGVuZ2luZV9jbGFzcyk7
CisJCWlmICghZW5naW5lKSB7CisJCQlkcm1fZXJyKCZndC0+aTkxNS0+ZHJtLCAiTm8gZW5naW5l
IHN0YXRlIHJlY29yZGVkIGZvciBjbGFzcyAlZCFcbiIsIGVuZ2luZV9jbGFzcyk7CisJCQlibG9i
LT5hZHMuZW5nX3N0YXRlX3NpemVbZ3VjX2NsYXNzXSA9IDA7CisJCQlibG9iLT5hZHMuZ29sZGVu
X2NvbnRleHRfbHJjYVtndWNfY2xhc3NdID0gMDsKKwkJCWNvbnRpbnVlOworCQl9CisKKwkJR0VN
X0JVR19PTihibG9iLT5hZHMuZW5nX3N0YXRlX3NpemVbZ3VjX2NsYXNzXSAhPSByZWFsX3NpemUp
OworCQlHRU1fQlVHX09OKGJsb2ItPmFkcy5nb2xkZW5fY29udGV4dF9scmNhW2d1Y19jbGFzc10g
IT0gYWRkcl9nZ3R0KTsKKwkJYWRkcl9nZ3R0ICs9IGFsbG9jX3NpemU7CisKKwkJc2htZW1fcmVh
ZChlbmdpbmUtPmRlZmF1bHRfc3RhdGUsIFNLSVBfU0laRSwgcHRyICsgU0tJUF9TSVpFLCByZWFs
X3NpemUpOworCQlwdHIgKz0gYWxsb2Nfc2l6ZTsKIAl9CiAKKwlHRU1fQlVHX09OKGd1Yy0+YWRz
X2dvbGRlbl9jdHh0X3NpemUgIT0gdG90YWxfc2l6ZSk7Cit9CisKK3N0YXRpYyB2b2lkIF9fZ3Vj
X2Fkc19pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0
ID0gZ3VjX3RvX2d0KGd1Yyk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBndC0+
aTkxNTsKKwlzdHJ1Y3QgX19ndWNfYWRzX2Jsb2IgKmJsb2IgPSBndWMtPmFkc19ibG9iOworCXUz
MiBiYXNlOworCisJLyogR3VDIHNjaGVkdWxpbmcgcG9saWNpZXMgKi8KKwlndWNfcG9saWNpZXNf
aW5pdChndWMsICZibG9iLT5wb2xpY2llcyk7CisKIAkvKiBTeXN0ZW0gaW5mbyAqLwotCWJsb2It
PnN5c3RlbV9pbmZvLmVuZ2luZV9lbmFibGVkX21hc2tzW0dVQ19SRU5ERVJfQ0xBU1NdID0gMTsK
LQlibG9iLT5zeXN0ZW1faW5mby5lbmdpbmVfZW5hYmxlZF9tYXNrc1tHVUNfQkxJVFRFUl9DTEFT
U10gPSAxOwotCWJsb2ItPnN5c3RlbV9pbmZvLmVuZ2luZV9lbmFibGVkX21hc2tzW0dVQ19WSURF
T19DTEFTU10gPSBWREJPWF9NQVNLKGd0KTsKLQlibG9iLT5zeXN0ZW1faW5mby5lbmdpbmVfZW5h
YmxlZF9tYXNrc1tHVUNfVklERU9FTkhBTkNFX0NMQVNTXSA9IFZFQk9YX01BU0soZ3QpOworCWZp
bGxfZW5naW5lX2VuYWJsZV9tYXNrcyhndCwgJmJsb2ItPnN5c3RlbV9pbmZvKTsKIAogCWJsb2It
PnN5c3RlbV9pbmZvLmdlbmVyaWNfZ3Rfc3lzaW5mb1tHVUNfR0VORVJJQ19HVF9TWVNJTkZPX1NM
SUNFX0VOQUJMRURdID0KIAkJaHdlaWdodDgoZ3QtPmluZm8uc3NldS5zbGljZV9tYXNrKTsKQEAg
LTE0NSw2ICs1MTAsOSBAQCBzdGF0aWMgdm9pZCBfX2d1Y19hZHNfaW5pdChzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMpCiAJCQkgR0VOMTJfRE9PUkJFTExTX1BFUl9TUUlESSkgKyAxOwogCX0KIAorCS8q
IEdvbGRlbiBjb250ZXh0cyBmb3IgcmUtaW5pdGlhbGlzaW5nIGFmdGVyIGEgd2F0Y2hkb2cgcmVz
ZXQgKi8KKwlndWNfcHJlcF9nb2xkZW5fY29udGV4dChndWMsIGJsb2IpOworCiAJZ3VjX21hcHBp
bmdfdGFibGVfaW5pdChndWNfdG9fZ3QoZ3VjKSwgJmJsb2ItPnN5c3RlbV9pbmZvKTsKIAogCWJh
c2UgPSBpbnRlbF9ndWNfZ2d0dF9vZmZzZXQoZ3VjLCBndWMtPmFkc192bWEpOwpAQCAtMTUzLDYg
KzUyMSw5IEBAIHN0YXRpYyB2b2lkIF9fZ3VjX2Fkc19pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1
YykKIAlibG9iLT5hZHMuc2NoZWR1bGVyX3BvbGljaWVzID0gYmFzZSArIHB0cl9vZmZzZXQoYmxv
YiwgcG9saWNpZXMpOwogCWJsb2ItPmFkcy5ndF9zeXN0ZW1faW5mbyA9IGJhc2UgKyBwdHJfb2Zm
c2V0KGJsb2IsIHN5c3RlbV9pbmZvKTsKIAorCS8qIE1NSU8gc2F2ZS9yZXN0b3JlIGxpc3QgKi8K
KwlndWNfbW1pb19yZWdfc3RhdGVfaW5pdChndWMsIGJsb2IpOworCiAJLyogUHJpdmF0ZSBEYXRh
ICovCiAJYmxvYi0+YWRzLnByaXZhdGVfZGF0YSA9IGJhc2UgKyBndWNfYWRzX3ByaXZhdGVfZGF0
YV9vZmZzZXQoZ3VjKTsKIApAQCAtMTczLDYgKzU0NCwxOSBAQCBpbnQgaW50ZWxfZ3VjX2Fkc19j
cmVhdGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCiAJR0VNX0JVR19PTihndWMtPmFkc192bWEp
OwogCisJLyogTmVlZCB0byBjYWxjdWxhdGUgdGhlIHJlZyBzdGF0ZSBzaXplIGR5bmFtaWNhbGx5
OiAqLworCXJldCA9IGd1Y19tbWlvX3JlZ19zdGF0ZV9xdWVyeShndWMpOworCWlmIChyZXQgPCAw
KQorCQlyZXR1cm4gcmV0OworCWd1Yy0+YWRzX3JlZ3NldF9zaXplID0gcmV0OworCisJLyogTGlr
ZXdpc2UgdGhlIGdvbGRlbiBjb250ZXh0czogKi8KKwlyZXQgPSBndWNfcHJlcF9nb2xkZW5fY29u
dGV4dChndWMsIE5VTEwpOworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCWd1Yy0+YWRz
X2dvbGRlbl9jdHh0X3NpemUgPSByZXQ7CisKKwkvKiBOb3cgdGhlIHRvdGFsIHNpemUgY2FuIGJl
IGRldGVybWluZWQ6ICovCiAJc2l6ZSA9IGd1Y19hZHNfYmxvYl9zaXplKGd1Yyk7CiAKIAlyZXQg
PSBpbnRlbF9ndWNfYWxsb2NhdGVfYW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3VjLT5hZHNfdm1h
LApAQCAtMTg1LDYgKzU2OSwxOCBAQCBpbnQgaW50ZWxfZ3VjX2Fkc19jcmVhdGUoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjKQogCXJldHVybiAwOwogfQogCit2b2lkIGludGVsX2d1Y19hZHNfaW5pdF9s
YXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwkvKgorCSAqIFRoZSBnb2xkZW4gY29udGV4
dCBzZXR1cCByZXF1aXJlcyB0aGUgc2F2ZWQgZW5naW5lIHN0YXRlIGZyb20KKwkgKiBfX2VuZ2lu
ZXNfcmVjb3JkX2RlZmF1bHRzKCkuIEhvd2V2ZXIsIHRoYXQgcmVxdWlyZXMgZW5naW5lcyB0byBi
ZQorCSAqIG9wZXJhdGlvbmFsIHdoaWNoIG1lYW5zIHRoZSBBRFMgbXVzdCBhbHJlYWR5IGhhdmUg
YmVlbiBjb25maWd1cmVkLgorCSAqIEZvcnR1bmF0ZWx5LCB0aGUgZ29sZGVuIGNvbnRleHQgc3Rh
dGUgaXMgbm90IG5lZWRlZCB1bnRpbCBhIGhhbmcKKwkgKiBvY2N1cnMsIHNvIGl0IGNhbiBiZSBm
aWxsZWQgaW4gZHVyaW5nIHRoaXMgbGF0ZSBpbml0IHBoYXNlLgorCSAqLworCWd1Y19pbml0X2dv
bGRlbl9jb250ZXh0KGd1Yyk7Cit9CisKIHZvaWQgaW50ZWxfZ3VjX2Fkc19kZXN0cm95KHN0cnVj
dCBpbnRlbF9ndWMgKmd1YykKIHsKIAlpOTE1X3ZtYV91bnBpbl9hbmRfcmVsZWFzZSgmZ3VjLT5h
ZHNfdm1hLCBJOTE1X1ZNQV9SRUxFQVNFX01BUCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfYWRzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91
Yy9pbnRlbF9ndWNfYWRzLmgKaW5kZXggYjAwZDNhZTExMTNhLi5kYWMwZGMzMmRhMzQgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19hZHMuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfYWRzLmgKQEAgLTcsOSArNywxMiBA
QAogI2RlZmluZSBfSU5URUxfR1VDX0FEU19IXwogCiBzdHJ1Y3QgaW50ZWxfZ3VjOworc3RydWN0
IGRybV9wcmludGVyOwogCiBpbnQgaW50ZWxfZ3VjX2Fkc19jcmVhdGUoc3RydWN0IGludGVsX2d1
YyAqZ3VjKTsKIHZvaWQgaW50ZWxfZ3VjX2Fkc19kZXN0cm95KHN0cnVjdCBpbnRlbF9ndWMgKmd1
Yyk7Cit2b2lkIGludGVsX2d1Y19hZHNfaW5pdF9sYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1Yyk7
CiB2b2lkIGludGVsX2d1Y19hZHNfcmVzZXQoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKK3ZvaWQg
aW50ZWxfZ3VjX2xvZ19wb2xpY3lfaW5mbyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBk
cm1fcHJpbnRlciAqcCk7CiAKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRl
bF9ndWNfY3QuYwppbmRleCA0MzQwOTA0NDUyOGUuLjE3MDQwOTEwN2I0YiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmMKQEAgLTMsNiArMywxMSBAQAogICogQ29w
eXJpZ2h0IMKpIDIwMTYtMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgogICovCiAKKyNpbmNsdWRlIDxs
aW51eC9jaXJjX2J1Zi5oPgorI2luY2x1ZGUgPGxpbnV4L2t0aW1lLmg+CisjaW5jbHVkZSA8bGlu
dXgvdGltZTY0Lmg+CisjaW5jbHVkZSA8bGludXgvdGltZWtlZXBpbmcuaD4KKwogI2luY2x1ZGUg
Imk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX2N0LmgiCiAjaW5jbHVkZSAiZ3QvaW50
ZWxfZ3QuaCIKQEAgLTU4LDExICs2MywxNyBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBkcm1fZGV2
aWNlICpjdF90b19kcm0oc3RydWN0IGludGVsX2d1Y19jdCAqY3QpCiAgKiAgICAgICstLS0tLS0t
LSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSstLS0tLS0r
CiAgKgogICogU2l6ZSBvZiBlYWNoIGBDVCBCdWZmZXJgXyBtdXN0IGJlIG11bHRpcGxlIG9mIDRL
LgotICogQXMgd2UgZG9uJ3QgZXhwZWN0IHRvbyBtYW55IG1lc3NhZ2VzLCBmb3Igbm93IHVzZSBt
aW5pbXVtIHNpemVzLgorICogV2UgZG9uJ3QgZXhwZWN0IHRvbyBtYW55IG1lc3NhZ2VzIGluIGZs
aWdodCBhdCBhbnkgdGltZSwgdW5sZXNzIHdlIGFyZQorICogdXNpbmcgdGhlIEd1QyBzdWJtaXNz
aW9uLiBJbiB0aGF0IGNhc2UgZWFjaCByZXF1ZXN0IHJlcXVpcmVzIGEgbWluaW11bQorICogMiBk
d29yZHMgd2hpY2ggZ2l2ZXMgdXMgYSBtYXhpbXVtIDI1NiBxdWV1ZSdkIHJlcXVlc3RzLiBIb3Bl
ZnVsbHkgdGhpcworICogZW5vdWdoIHNwYWNlIHRvIGF2b2lkIGJhY2twcmVzc3VyZSBvbiB0aGUg
ZHJpdmVyLiBXZSBpbmNyZWFzZSB0aGUgc2l6ZQorICogb2YgdGhlIHJlY2VpdmUgYnVmZmVyIChy
ZWxhdGl2ZSB0byB0aGUgc2VuZCkgdG8gZW5zdXJlIGEgRzJIIHJlc3BvbnNlCisgKiBDVEIgaGFz
IGEgbGFuZGluZyBzcG90LgogICovCiAjZGVmaW5lIENUQl9ERVNDX1NJWkUJCUFMSUdOKHNpemVv
ZihzdHJ1Y3QgZ3VjX2N0X2J1ZmZlcl9kZXNjKSwgU1pfMkspCiAjZGVmaW5lIENUQl9IMkdfQlVG
RkVSX1NJWkUJKFNaXzRLKQotI2RlZmluZSBDVEJfRzJIX0JVRkZFUl9TSVpFCShTWl80SykKKyNk
ZWZpbmUgQ1RCX0cySF9CVUZGRVJfU0laRQkoNCAqIENUQl9IMkdfQlVGRkVSX1NJWkUpCisjZGVm
aW5lIEcySF9ST09NX0JVRkZFUl9TSVpFCShQQUdFX1NJWkUpCiAKIHN0cnVjdCBjdF9yZXF1ZXN0
IHsKIAlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CkBAIC05OCw2ICsxMDksNyBAQCB2b2lkIGludGVs
X2d1Y19jdF9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0KQogCUlOSVRfTElTVF9I
RUFEKCZjdC0+cmVxdWVzdHMuaW5jb21pbmcpOwogCUlOSVRfV09SSygmY3QtPnJlcXVlc3RzLndv
cmtlciwgY3RfaW5jb21pbmdfcmVxdWVzdF93b3JrZXJfZnVuYyk7CiAJdGFza2xldF9zZXR1cCgm
Y3QtPnJlY2VpdmVfdGFza2xldCwgY3RfcmVjZWl2ZV90YXNrbGV0X2Z1bmMpOworCWluaXRfd2Fp
dHF1ZXVlX2hlYWQoJmN0LT53cSk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgY29uc3QgY2hhciAqZ3Vj
X2N0X2J1ZmZlcl90eXBlX3RvX3N0cih1MzIgdHlwZSkKQEAgLTExOSwxOSArMTMxLDI3IEBAIHN0
YXRpYyB2b2lkIGd1Y19jdF9idWZmZXJfZGVzY19pbml0KHN0cnVjdCBndWNfY3RfYnVmZmVyX2Rl
c2MgKmRlc2MpCiAKIHN0YXRpYyB2b2lkIGd1Y19jdF9idWZmZXJfcmVzZXQoc3RydWN0IGludGVs
X2d1Y19jdF9idWZmZXIgKmN0YikKIHsKKwl1MzIgc3BhY2U7CisKIAljdGItPmJyb2tlbiA9IGZh
bHNlOworCWN0Yi0+dGFpbCA9IDA7CisJY3RiLT5oZWFkID0gMDsKKwlzcGFjZSA9IENJUkNfU1BB
Q0UoY3RiLT50YWlsLCBjdGItPmhlYWQsIGN0Yi0+c2l6ZSkgLSBjdGItPnJlc3Zfc3BhY2U7CisJ
YXRvbWljX3NldCgmY3RiLT5zcGFjZSwgc3BhY2UpOworCiAJZ3VjX2N0X2J1ZmZlcl9kZXNjX2lu
aXQoY3RiLT5kZXNjKTsKIH0KIAogc3RhdGljIHZvaWQgZ3VjX2N0X2J1ZmZlcl9pbml0KHN0cnVj
dCBpbnRlbF9ndWNfY3RfYnVmZmVyICpjdGIsCiAJCQkgICAgICAgc3RydWN0IGd1Y19jdF9idWZm
ZXJfZGVzYyAqZGVzYywKLQkJCSAgICAgICB1MzIgKmNtZHMsIHUzMiBzaXplX2luX2J5dGVzKQor
CQkJICAgICAgIHUzMiAqY21kcywgdTMyIHNpemVfaW5fYnl0ZXMsIHUzMiByZXN2X3NwYWNlKQog
ewogCUdFTV9CVUdfT04oc2l6ZV9pbl9ieXRlcyAlIDQpOwogCiAJY3RiLT5kZXNjID0gZGVzYzsK
IAljdGItPmNtZHMgPSBjbWRzOwogCWN0Yi0+c2l6ZSA9IHNpemVfaW5fYnl0ZXMgLyA0OworCWN0
Yi0+cmVzdl9zcGFjZSA9IHJlc3Zfc3BhY2UgLyA0OwogCiAJZ3VjX2N0X2J1ZmZlcl9yZXNldChj
dGIpOwogfQpAQCAtMTYxLDYgKzE4MSwxMCBAQCBzdGF0aWMgaW50IGN0X3JlZ2lzdGVyX2J1ZmZl
cihzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgdTMyIHR5cGUsCiB7CiAJaW50IGVycjsKIAorCWVy
ciA9IGk5MTVfaW5qZWN0X3Byb2JlX2Vycm9yKGd1Y190b19ndChjdF90b19ndWMoY3QpKS0+aTkx
NSwgLUVOWElPKTsKKwlpZiAodW5saWtlbHkoZXJyKSkKKwkJcmV0dXJuIGVycjsKKwogCWVyciA9
IGd1Y19hY3Rpb25fcmVnaXN0ZXJfY3RfYnVmZmVyKGN0X3RvX2d1YyhjdCksIHR5cGUsCiAJCQkJ
CSAgICBkZXNjX2FkZHIsIGJ1ZmZfYWRkciwgc2l6ZSk7CiAJaWYgKHVubGlrZWx5KGVycikpCkBA
IC0yMDgsMTAgKzIzMiwxNSBAQCBpbnQgaW50ZWxfZ3VjX2N0X2luaXQoc3RydWN0IGludGVsX2d1
Y19jdCAqY3QpCiAJc3RydWN0IGd1Y19jdF9idWZmZXJfZGVzYyAqZGVzYzsKIAl1MzIgYmxvYl9z
aXplOwogCXUzMiBjbWRzX3NpemU7CisJdTMyIHJlc3Zfc3BhY2U7CiAJdm9pZCAqYmxvYjsKIAl1
MzIgKmNtZHM7CiAJaW50IGVycjsKIAorCWVyciA9IGk5MTVfaW5qZWN0X3Byb2JlX2Vycm9yKGd1
Y190b19ndChndWMpLT5pOTE1LCAtRU5YSU8pOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisK
IAlHRU1fQlVHX09OKGN0LT52bWEpOwogCiAJYmxvYl9zaXplID0gMiAqIENUQl9ERVNDX1NJWkUg
KyBDVEJfSDJHX0JVRkZFUl9TSVpFICsgQ1RCX0cySF9CVUZGRVJfU0laRTsKQEAgLTIyOCwxOSAr
MjU3LDIzIEBAIGludCBpbnRlbF9ndWNfY3RfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkK
IAlkZXNjID0gYmxvYjsKIAljbWRzID0gYmxvYiArIDIgKiBDVEJfREVTQ19TSVpFOwogCWNtZHNf
c2l6ZSA9IENUQl9IMkdfQlVGRkVSX1NJWkU7Ci0JQ1RfREVCVUcoY3QsICIlcyBkZXNjICUjdHgg
Y21kcyAlI3R4IHNpemUgJXVcbiIsICJzZW5kIiwKLQkJIHB0cmRpZmYoZGVzYywgYmxvYiksIHB0
cmRpZmYoY21kcywgYmxvYiksIGNtZHNfc2l6ZSk7CisJcmVzdl9zcGFjZSA9IDA7CisJQ1RfREVC
VUcoY3QsICIlcyBkZXNjICUjdHggY21kcyAlI3R4IHNpemUgJXUvJXVcbiIsICJzZW5kIiwKKwkJ
IHB0cmRpZmYoZGVzYywgYmxvYiksIHB0cmRpZmYoY21kcywgYmxvYiksIGNtZHNfc2l6ZSwKKwkJ
IHJlc3Zfc3BhY2UpOwogCi0JZ3VjX2N0X2J1ZmZlcl9pbml0KCZjdC0+Y3Ricy5zZW5kLCBkZXNj
LCBjbWRzLCBjbWRzX3NpemUpOworCWd1Y19jdF9idWZmZXJfaW5pdCgmY3QtPmN0YnMuc2VuZCwg
ZGVzYywgY21kcywgY21kc19zaXplLCByZXN2X3NwYWNlKTsKIAogCS8qIHN0b3JlIHBvaW50ZXJz
IHRvIGRlc2MgYW5kIGNtZHMgZm9yIHJlY3YgY3RiICovCiAJZGVzYyA9IGJsb2IgKyBDVEJfREVT
Q19TSVpFOwogCWNtZHMgPSBibG9iICsgMiAqIENUQl9ERVNDX1NJWkUgKyBDVEJfSDJHX0JVRkZF
Ul9TSVpFOwogCWNtZHNfc2l6ZSA9IENUQl9HMkhfQlVGRkVSX1NJWkU7Ci0JQ1RfREVCVUcoY3Qs
ICIlcyBkZXNjICUjdHggY21kcyAlI3R4IHNpemUgJXVcbiIsICJyZWN2IiwKLQkJIHB0cmRpZmYo
ZGVzYywgYmxvYiksIHB0cmRpZmYoY21kcywgYmxvYiksIGNtZHNfc2l6ZSk7CisJcmVzdl9zcGFj
ZSA9IEcySF9ST09NX0JVRkZFUl9TSVpFOworCUNUX0RFQlVHKGN0LCAiJXMgZGVzYyAlI3R4IGNt
ZHMgJSN0eCBzaXplICV1LyV1XG4iLCAicmVjdiIsCisJCSBwdHJkaWZmKGRlc2MsIGJsb2IpLCBw
dHJkaWZmKGNtZHMsIGJsb2IpLCBjbWRzX3NpemUsCisJCSByZXN2X3NwYWNlKTsKIAotCWd1Y19j
dF9idWZmZXJfaW5pdCgmY3QtPmN0YnMucmVjdiwgZGVzYywgY21kcywgY21kc19zaXplKTsKKwln
dWNfY3RfYnVmZmVyX2luaXQoJmN0LT5jdGJzLnJlY3YsIGRlc2MsIGNtZHMsIGNtZHNfc2l6ZSwg
cmVzdl9zcGFjZSk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTMwOSw2ICszNDIsNyBAQCBpbnQgaW50
ZWxfZ3VjX2N0X2VuYWJsZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkKIAkJZ290byBlcnJfZGVy
ZWdpc3RlcjsKIAogCWN0LT5lbmFibGVkID0gdHJ1ZTsKKwljdC0+c3RhbGxfdGltZSA9IEtUSU1F
X01BWDsKIAogCXJldHVybiAwOwogCkBAIC0zNjgsNDQgKzQwMiwzNyBAQCBzdGF0aWMgdm9pZCB3
cml0ZV9iYXJyaWVyKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0KQogc3RhdGljIGludCBjdF93cml0
ZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwKIAkJICAgIGNvbnN0IHUzMiAqYWN0aW9uLAogCQkg
ICAgdTMyIGxlbiAvKiBpbiBkd29yZHMgKi8sCi0JCSAgICB1MzIgZmVuY2UpCisJCSAgICB1MzIg
ZmVuY2UsIHUzMiBmbGFncykKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciAqY3RiID0g
JmN0LT5jdGJzLnNlbmQ7CiAJc3RydWN0IGd1Y19jdF9idWZmZXJfZGVzYyAqZGVzYyA9IGN0Yi0+
ZGVzYzsKLQl1MzIgaGVhZCA9IGRlc2MtPmhlYWQ7Ci0JdTMyIHRhaWwgPSBkZXNjLT50YWlsOwor
CXUzMiB0YWlsID0gY3RiLT50YWlsOwogCXUzMiBzaXplID0gY3RiLT5zaXplOwotCXUzMiB1c2Vk
OwogCXUzMiBoZWFkZXI7CiAJdTMyIGh4ZzsKKwl1MzIgdHlwZTsKIAl1MzIgKmNtZHMgPSBjdGIt
PmNtZHM7CiAJdW5zaWduZWQgaW50IGk7CiAKLQlpZiAodW5saWtlbHkoY3RiLT5icm9rZW4pKQot
CQlyZXR1cm4gLUVQSVBFOwotCiAJaWYgKHVubGlrZWx5KGRlc2MtPnN0YXR1cykpCiAJCWdvdG8g
Y29ycnVwdGVkOwogCi0JaWYgKHVubGlrZWx5KCh0YWlsIHwgaGVhZCkgPj0gc2l6ZSkpIHsKLQkJ
Q1RfRVJST1IoY3QsICJJbnZhbGlkIG9mZnNldHMgaGVhZD0ldSB0YWlsPSV1IChzaXplPSV1KVxu
IiwKLQkJCSBoZWFkLCB0YWlsLCBzaXplKTsKKwlHRU1fQlVHX09OKHRhaWwgPiBzaXplKTsKKwor
I2lmZGVmIENPTkZJR19EUk1fSTkxNV9ERUJVR19HVUMKKwlpZiAodW5saWtlbHkodGFpbCAhPSBS
RUFEX09OQ0UoZGVzYy0+dGFpbCkpKSB7CisJCUNUX0VSUk9SKGN0LCAiVGFpbCB3YXMgbW9kaWZp
ZWQgJXUgIT0gJXVcbiIsCisJCQkgZGVzYy0+dGFpbCwgdGFpbCk7CisJCWRlc2MtPnN0YXR1cyB8
PSBHVUNfQ1RCX1NUQVRVU19NSVNNQVRDSDsKKwkJZ290byBjb3JydXB0ZWQ7CisJfQorCWlmICh1
bmxpa2VseShSRUFEX09OQ0UoZGVzYy0+aGVhZCkgPj0gc2l6ZSkpIHsKKwkJQ1RfRVJST1IoY3Qs
ICJJbnZhbGlkIGhlYWQgb2Zmc2V0ICV1ID49ICV1KVxuIiwKKwkJCSBkZXNjLT5oZWFkLCBzaXpl
KTsKIAkJZGVzYy0+c3RhdHVzIHw9IEdVQ19DVEJfU1RBVFVTX09WRVJGTE9XOwogCQlnb3RvIGNv
cnJ1cHRlZDsKIAl9Ci0KLQkvKgotCSAqIHRhaWwgPT0gaGVhZCBjb25kaXRpb24gaW5kaWNhdGVz
IGVtcHR5LiBHdUMgRlcgZG9lcyBub3Qgc3VwcG9ydAotCSAqIHVzaW5nIHVwIHRoZSBlbnRpcmUg
YnVmZmVyIHRvIGdldCB0YWlsID09IGhlYWQgbWVhbmluZyBmdWxsLgotCSAqLwotCWlmICh0YWls
IDwgaGVhZCkKLQkJdXNlZCA9IChzaXplIC0gaGVhZCkgKyB0YWlsOwotCWVsc2UKLQkJdXNlZCA9
IHRhaWwgLSBoZWFkOwotCi0JLyogbWFrZSBzdXJlIHRoZXJlIGlzIGEgc3BhY2UgaW5jbHVkaW5n
IGV4dHJhIGR3IGZvciB0aGUgZmVuY2UgKi8KLQlpZiAodW5saWtlbHkodXNlZCArIGxlbiArIDEg
Pj0gc2l6ZSkpCi0JCXJldHVybiAtRU5PU1BDOworI2VuZGlmCiAKIAkvKgogCSAqIGR3MDogQ1Qg
aGVhZGVyIChpbmNsdWRpbmcgZmVuY2UpCkBAIC00MTYsOSArNDQzLDExIEBAIHN0YXRpYyBpbnQg
Y3Rfd3JpdGUoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsCiAJCSBGSUVMRF9QUkVQKEdVQ19DVEJf
TVNHXzBfTlVNX0RXT1JEUywgbGVuKSB8CiAJCSBGSUVMRF9QUkVQKEdVQ19DVEJfTVNHXzBfRkVO
Q0UsIGZlbmNlKTsKIAotCWh4ZyA9IEZJRUxEX1BSRVAoR1VDX0hYR19NU0dfMF9UWVBFLCBHVUNf
SFhHX1RZUEVfUkVRVUVTVCkgfAotCSAgICAgIEZJRUxEX1BSRVAoR1VDX0hYR19SRVFVRVNUX01T
R18wX0FDVElPTiB8Ci0JCQkgR1VDX0hYR19SRVFVRVNUX01TR18wX0RBVEEwLCBhY3Rpb25bMF0p
OworCXR5cGUgPSAoZmxhZ3MgJiBJTlRFTF9HVUNfQ1RfU0VORF9OQikgPyBHVUNfSFhHX1RZUEVf
RVZFTlQgOgorCQlHVUNfSFhHX1RZUEVfUkVRVUVTVDsKKwloeGcgPSBGSUVMRF9QUkVQKEdVQ19I
WEdfTVNHXzBfVFlQRSwgdHlwZSkgfAorCQlGSUVMRF9QUkVQKEdVQ19IWEdfRVZFTlRfTVNHXzBf
QUNUSU9OIHwKKwkJCSAgIEdVQ19IWEdfRVZFTlRfTVNHXzBfREFUQTAsIGFjdGlvblswXSk7CiAK
IAlDVF9ERUJVRyhjdCwgIndyaXRpbmcgKHRhaWwgJXUpICUqcGggJSpwaCAlKnBoXG4iLAogCQkg
dGFpbCwgNCwgJmhlYWRlciwgNCwgJmh4ZywgNCAqIChsZW4gLSAxKSwgJmFjdGlvblsxXSk7CkBA
IC00NDEsNiArNDcwLDExIEBAIHN0YXRpYyBpbnQgY3Rfd3JpdGUoc3RydWN0IGludGVsX2d1Y19j
dCAqY3QsCiAJICovCiAJd3JpdGVfYmFycmllcihjdCk7CiAKKwkvKiB1cGRhdGUgbG9jYWwgY29w
aWVzICovCisJY3RiLT50YWlsID0gdGFpbDsKKwlHRU1fQlVHX09OKGF0b21pY19yZWFkKCZjdGIt
PnNwYWNlKSA8IGxlbiArIEdVQ19DVEJfSERSX0xFTik7CisJYXRvbWljX3N1YihsZW4gKyBHVUNf
Q1RCX0hEUl9MRU4sICZjdGItPnNwYWNlKTsKKwogCS8qIG5vdyB1cGRhdGUgZGVzY3JpcHRvciAq
LwogCVdSSVRFX09OQ0UoZGVzYy0+dGFpbCwgdGFpbCk7CiAKQEAgLTQ1OCw3ICs0OTIsNyBAQCBz
dGF0aWMgaW50IGN0X3dyaXRlKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LAogICogQHJlcToJcG9p
bnRlciB0byBwZW5kaW5nIHJlcXVlc3QKICAqIEBzdGF0dXM6CXBsYWNlaG9sZGVyIGZvciBzdGF0
dXMKICAqCi0gKiBGb3IgZWFjaCBzZW50IHJlcXVlc3QsIEd1YyBzaGFsbCBzZW5kIGJhYyBDVCBy
ZXNwb25zZSBtZXNzYWdlLgorICogRm9yIGVhY2ggc2VudCByZXF1ZXN0LCBHdUMgc2hhbGwgc2Vu
ZCBiYWNrIENUIHJlc3BvbnNlIG1lc3NhZ2UuCiAgKiBPdXIgbWVzc2FnZSBoYW5kbGVyIHdpbGwg
dXBkYXRlIHN0YXR1cyBvZiB0cmFja2VkIHJlcXVlc3Qgb25jZQogICogcmVzcG9uc2UgbWVzc2Fn
ZSB3aXRoIGdpdmVuIGZlbmNlIGlzIHJlY2VpdmVkLiBXYWl0IGhlcmUgYW5kCiAgKiBjaGVjayBm
b3IgdmFsaWQgcmVzcG9uc2Ugc3RhdHVzIHZhbHVlLgpAQCAtNDc0LDE0ICs1MDgsMTggQEAgc3Rh
dGljIGludCB3YWl0X2Zvcl9jdF9yZXF1ZXN0X3VwZGF0ZShzdHJ1Y3QgY3RfcmVxdWVzdCAqcmVx
LCB1MzIgKnN0YXR1cykKIAkvKgogCSAqIEZhc3QgY29tbWFuZHMgc2hvdWxkIGNvbXBsZXRlIGlu
IGxlc3MgdGhhbiAxMHVzLCBzbyBzYW1wbGUgcXVpY2tseQogCSAqIHVwIHRvIHRoYXQgbGVuZ3Ro
IG9mIHRpbWUsIHRoZW4gc3dpdGNoIHRvIGEgc2xvd2VyIHNsZWVwLXdhaXQgbG9vcC4KLQkgKiBO
byBHdUMgY29tbWFuZCBzaG91bGQgZXZlciB0YWtlIGxvbmdlciB0aGFuIDEwbXMuCisJICogTm8g
R3VDIGNvbW1hbmQgc2hvdWxkIGV2ZXIgdGFrZSBsb25nZXIgdGhhbiAxMG1zIGJ1dCBtYW55IEd1
QworCSAqIGNvbW1hbmRzIGNhbiBiZSBpbmZsaWdodCBhdCB0aW1lLCBzbyB1c2UgYSAxcyB0aW1l
b3V0IG9uIHRoZSBzbG93ZXIKKwkgKiBzbGVlcC13YWl0IGxvb3AuCiAJICovCisjZGVmaW5lIEdV
Q19DVEJfUkVTUE9OU0VfVElNRU9VVF9TSE9SVF9NUyAxMAorI2RlZmluZSBHVUNfQ1RCX1JFU1BP
TlNFX1RJTUVPVVRfTE9OR19NUyAxMDAwCiAjZGVmaW5lIGRvbmUgXAogCShGSUVMRF9HRVQoR1VD
X0hYR19NU0dfMF9PUklHSU4sIFJFQURfT05DRShyZXEtPnN0YXR1cykpID09IFwKIAkgR1VDX0hY
R19PUklHSU5fR1VDKQotCWVyciA9IHdhaXRfZm9yX3VzKGRvbmUsIDEwKTsKKwllcnIgPSB3YWl0
X2Zvcl91cyhkb25lLCBHVUNfQ1RCX1JFU1BPTlNFX1RJTUVPVVRfU0hPUlRfTVMpOwogCWlmIChl
cnIpCi0JCWVyciA9IHdhaXRfZm9yKGRvbmUsIDEwKTsKKwkJZXJyID0gd2FpdF9mb3IoZG9uZSwg
R1VDX0NUQl9SRVNQT05TRV9USU1FT1VUX0xPTkdfTVMpOwogI3VuZGVmIGRvbmUKIAogCWlmICh1
bmxpa2VseShlcnIpKQpAQCAtNDkxLDYgKzUyOSwxMjggQEAgc3RhdGljIGludCB3YWl0X2Zvcl9j
dF9yZXF1ZXN0X3VwZGF0ZShzdHJ1Y3QgY3RfcmVxdWVzdCAqcmVxLCB1MzIgKnN0YXR1cykKIAly
ZXR1cm4gZXJyOwogfQogCisjZGVmaW5lIEdVQ19DVEJfVElNRU9VVF9NUwkxNTAwCitzdGF0aWMg
aW5saW5lIGJvb2wgY3RfZGVhZGxvY2tlZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkKK3sKKwls
b25nIHRpbWVvdXQgPSBHVUNfQ1RCX1RJTUVPVVRfTVM7CisJYm9vbCByZXQgPSBrdGltZV9tc19k
ZWx0YShrdGltZV9nZXQoKSwgY3QtPnN0YWxsX3RpbWUpID4gdGltZW91dDsKKworCWlmICh1bmxp
a2VseShyZXQpKSB7CisJCXN0cnVjdCBndWNfY3RfYnVmZmVyX2Rlc2MgKnNlbmQgPSBjdC0+Y3Ri
cy5zZW5kLmRlc2M7CisJCXN0cnVjdCBndWNfY3RfYnVmZmVyX2Rlc2MgKnJlY3YgPSBjdC0+Y3Ri
cy5zZW5kLmRlc2M7CisKKwkJQ1RfRVJST1IoY3QsICJDb21tdW5pY2F0aW9uIHN0YWxsZWQgZm9y
ICVsbGQgbXMsIGRlc2Mgc3RhdHVzPSUjeCwlI3hcbiIsCisJCQkga3RpbWVfbXNfZGVsdGEoa3Rp
bWVfZ2V0KCksIGN0LT5zdGFsbF90aW1lKSwKKwkJCSBzZW5kLT5zdGF0dXMsIHJlY3YtPnN0YXR1
cyk7CisJCWN0LT5jdGJzLnNlbmQuYnJva2VuID0gdHJ1ZTsKKwl9CisKKwlyZXR1cm4gcmV0Owor
fQorCitzdGF0aWMgaW5saW5lIGJvb2wgZzJoX2hhc19yb29tKHN0cnVjdCBpbnRlbF9ndWNfY3Qg
KmN0LCB1MzIgZzJoX2xlbl9kdykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciAqY3Ri
ID0gJmN0LT5jdGJzLnJlY3Y7CisKKwkvKgorCSAqIFdlIGxlYXZlIGEgY2VydGFpbiBhbW91bnQg
b2Ygc3BhY2UgaW4gdGhlIEcySCBDVEIgYnVmZmVyIGZvcgorCSAqIHVuZXhwZWN0ZWQgRzJIIENU
QnMgKGUuZy4gbG9nZ2luZywgZW5naW5lIGhhbmcsIGV0Yy4uLikKKwkgKi8KKwlyZXR1cm4gIWcy
aF9sZW5fZHcgfHwgYXRvbWljX3JlYWQoJmN0Yi0+c3BhY2UpID49IGcyaF9sZW5fZHc7Cit9CisK
K3N0YXRpYyBpbmxpbmUgdm9pZCBnMmhfcmVzZXJ2ZV9zcGFjZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0
ICpjdCwgdTMyIGcyaF9sZW5fZHcpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY3QtPmN0YnMu
c2VuZC5sb2NrKTsKKworCUdFTV9CVUdfT04oIWcyaF9oYXNfcm9vbShjdCwgZzJoX2xlbl9kdykp
OworCisJaWYgKGcyaF9sZW5fZHcpCisJCWF0b21pY19zdWIoZzJoX2xlbl9kdywgJmN0LT5jdGJz
LnJlY3Yuc3BhY2UpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgZzJoX3JlbGVhc2Vfc3BhY2Uo
c3RydWN0IGludGVsX2d1Y19jdCAqY3QsIHUzMiBnMmhfbGVuX2R3KQoreworCWF0b21pY19hZGQo
ZzJoX2xlbl9kdywgJmN0LT5jdGJzLnJlY3Yuc3BhY2UpOworfQorCitzdGF0aWMgaW5saW5lIGJv
b2wgaDJnX2hhc19yb29tKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LCB1MzIgbGVuX2R3KQorewor
CXN0cnVjdCBpbnRlbF9ndWNfY3RfYnVmZmVyICpjdGIgPSAmY3QtPmN0YnMuc2VuZDsKKwlzdHJ1
Y3QgZ3VjX2N0X2J1ZmZlcl9kZXNjICpkZXNjID0gY3RiLT5kZXNjOworCXUzMiBoZWFkOworCXUz
MiBzcGFjZTsKKworCWlmIChhdG9taWNfcmVhZCgmY3RiLT5zcGFjZSkgPj0gbGVuX2R3KQorCQly
ZXR1cm4gdHJ1ZTsKKworCWhlYWQgPSBSRUFEX09OQ0UoZGVzYy0+aGVhZCk7CisJaWYgKHVubGlr
ZWx5KGhlYWQgPiBjdGItPnNpemUpKSB7CisJCUNUX0VSUk9SKGN0LCAiSW52YWxpZCBoZWFkIG9m
ZnNldCAldSA+PSAldSlcbiIsCisJCQkgaGVhZCwgY3RiLT5zaXplKTsKKwkJZGVzYy0+c3RhdHVz
IHw9IEdVQ19DVEJfU1RBVFVTX09WRVJGTE9XOworCQljdGItPmJyb2tlbiA9IHRydWU7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwlzcGFjZSA9IENJUkNfU1BBQ0UoY3RiLT50YWlsLCBoZWFkLCBj
dGItPnNpemUpOworCWF0b21pY19zZXQoJmN0Yi0+c3BhY2UsIHNwYWNlKTsKKworCXJldHVybiBz
cGFjZSA+PSBsZW5fZHc7Cit9CisKK3N0YXRpYyBpbnQgaGFzX3Jvb21fbmIoc3RydWN0IGludGVs
X2d1Y19jdCAqY3QsIHUzMiBoMmdfZHcsIHUzMiBnMmhfZHcpCit7CisJbG9ja2RlcF9hc3NlcnRf
aGVsZCgmY3QtPmN0YnMuc2VuZC5sb2NrKTsKKworCWlmICh1bmxpa2VseSghaDJnX2hhc19yb29t
KGN0LCBoMmdfZHcpIHx8ICFnMmhfaGFzX3Jvb20oY3QsIGcyaF9kdykpKSB7CisJCWlmIChjdC0+
c3RhbGxfdGltZSA9PSBLVElNRV9NQVgpCisJCQljdC0+c3RhbGxfdGltZSA9IGt0aW1lX2dldCgp
OworCisJCWlmICh1bmxpa2VseShjdF9kZWFkbG9ja2VkKGN0KSkpCisJCQlyZXR1cm4gLUVQSVBF
OworCQllbHNlCisJCQlyZXR1cm4gLUVCVVNZOworCX0KKworCWN0LT5zdGFsbF90aW1lID0gS1RJ
TUVfTUFYOworCXJldHVybiAwOworfQorCisjZGVmaW5lIEcySF9MRU5fRFcoZikgXAorCUZJRUxE
X0dFVChJTlRFTF9HVUNfQ1RfU0VORF9HMkhfRFdfTUFTSywgZikgPyBcCisJRklFTERfR0VUKElO
VEVMX0dVQ19DVF9TRU5EX0cySF9EV19NQVNLLCBmKSArIEdVQ19DVEJfSFhHX01TR19NSU5fTEVO
IDogMAorc3RhdGljIGludCBjdF9zZW5kX25iKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LAorCQkg
ICAgICBjb25zdCB1MzIgKmFjdGlvbiwKKwkJICAgICAgdTMyIGxlbiwKKwkJICAgICAgdTMyIGZs
YWdzKQoreworCXN0cnVjdCBpbnRlbF9ndWNfY3RfYnVmZmVyICpjdGIgPSAmY3QtPmN0YnMuc2Vu
ZDsKKwl1bnNpZ25lZCBsb25nIHNwaW5fZmxhZ3M7CisJdTMyIGcyaF9sZW5fZHcgPSBHMkhfTEVO
X0RXKGZsYWdzKTsKKwl1MzIgZmVuY2U7CisJaW50IHJldDsKKworCXNwaW5fbG9ja19pcnFzYXZl
KCZjdGItPmxvY2ssIHNwaW5fZmxhZ3MpOworCisJcmV0ID0gaGFzX3Jvb21fbmIoY3QsIGxlbiAr
IEdVQ19DVEJfSERSX0xFTiwgZzJoX2xlbl9kdyk7CisJaWYgKHVubGlrZWx5KHJldCkpCisJCWdv
dG8gb3V0OworCisJZmVuY2UgPSBjdF9nZXRfbmV4dF9mZW5jZShjdCk7CisJcmV0ID0gY3Rfd3Jp
dGUoY3QsIGFjdGlvbiwgbGVuLCBmZW5jZSwgZmxhZ3MpOworCWlmICh1bmxpa2VseShyZXQpKQor
CQlnb3RvIG91dDsKKworCWcyaF9yZXNlcnZlX3NwYWNlKGN0LCBnMmhfbGVuX2R3KTsKKwlpbnRl
bF9ndWNfbm90aWZ5KGN0X3RvX2d1YyhjdCkpOworCitvdXQ6CisJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmY3RiLT5sb2NrLCBzcGluX2ZsYWdzKTsKKworCXJldHVybiByZXQ7Cit9CisKIHN0YXRp
YyBpbnQgY3Rfc2VuZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwKIAkJICAgY29uc3QgdTMyICph
Y3Rpb24sCiAJCSAgIHUzMiBsZW4sCkBAIC00OTgsOCArNjU4LDEwIEBAIHN0YXRpYyBpbnQgY3Rf
c2VuZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwKIAkJICAgdTMyIHJlc3BvbnNlX2J1Zl9zaXpl
LAogCQkgICB1MzIgKnN0YXR1cykKIHsKKwlzdHJ1Y3QgaW50ZWxfZ3VjX2N0X2J1ZmZlciAqY3Ri
ID0gJmN0LT5jdGJzLnNlbmQ7CiAJc3RydWN0IGN0X3JlcXVlc3QgcmVxdWVzdDsKIAl1bnNpZ25l
ZCBsb25nIGZsYWdzOworCXVuc2lnbmVkIGludCBzbGVlcF9wZXJpb2RfbXMgPSAxOwogCXUzMiBm
ZW5jZTsKIAlpbnQgZXJyOwogCkBAIC01MDcsOCArNjY5LDMzIEBAIHN0YXRpYyBpbnQgY3Rfc2Vu
ZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwKIAlHRU1fQlVHX09OKCFsZW4pOwogCUdFTV9CVUdf
T04obGVuICYgfkdVQ19DVF9NU0dfTEVOX01BU0spOwogCUdFTV9CVUdfT04oIXJlc3BvbnNlX2J1
ZiAmJiByZXNwb25zZV9idWZfc2l6ZSk7CisJbWlnaHRfc2xlZXAoKTsKKworCS8qCisJICogV2Ug
dXNlIGEgbGF6eSBzcGluIHdhaXQgbG9vcCBoZXJlIGFzIHdlIGJlbGlldmUgdGhhdCBpZiB0aGUg
Q1QKKwkgKiBidWZmZXJzIGFyZSBzaXplZCBjb3JyZWN0bHkgdGhlIGZsb3cgY29udHJvbCBjb25k
aXRpb24gc2hvdWxkIGJlCisJICogcmFyZS4gUmVzZXJ2aW5nIHRoZSBtYXhpbXVtIHNpemUgaW4g
dGhlIEcySCBjcmVkaXRzIGFzIHdlIGRvbid0IGtub3cKKwkgKiBob3cgYmlnIHRoZSByZXNwb25z
ZSBpcyBnb2luZyB0byBiZS4KKwkgKi8KK3JldHJ5OgorCXNwaW5fbG9ja19pcnFzYXZlKCZjdGIt
PmxvY2ssIGZsYWdzKTsKKwlpZiAodW5saWtlbHkoIWgyZ19oYXNfcm9vbShjdCwgbGVuICsgR1VD
X0NUQl9IRFJfTEVOKSB8fAorCQkgICAgICFnMmhfaGFzX3Jvb20oY3QsIEdVQ19DVEJfSFhHX01T
R19NQVhfTEVOKSkpIHsKKwkJaWYgKGN0LT5zdGFsbF90aW1lID09IEtUSU1FX01BWCkKKwkJCWN0
LT5zdGFsbF90aW1lID0ga3RpbWVfZ2V0KCk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmN0
Yi0+bG9jaywgZmxhZ3MpOworCisJCWlmICh1bmxpa2VseShjdF9kZWFkbG9ja2VkKGN0KSkpCisJ
CQlyZXR1cm4gLUVQSVBFOworCisJCWlmIChtc2xlZXBfaW50ZXJydXB0aWJsZShzbGVlcF9wZXJp
b2RfbXMpKQorCQkJcmV0dXJuIC1FSU5UUjsKKwkJc2xlZXBfcGVyaW9kX21zID0gc2xlZXBfcGVy
aW9kX21zIDw8IDE7CisKKwkJZ290byByZXRyeTsKKwl9CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgm
Y3QtPmN0YnMuc2VuZC5sb2NrLCBmbGFncyk7CisJY3QtPnN0YWxsX3RpbWUgPSBLVElNRV9NQVg7
CiAKIAlmZW5jZSA9IGN0X2dldF9uZXh0X2ZlbmNlKGN0KTsKIAlyZXF1ZXN0LmZlbmNlID0gZmVu
Y2U7CkBAIC01MjAsOSArNzA3LDEwIEBAIHN0YXRpYyBpbnQgY3Rfc2VuZChzdHJ1Y3QgaW50ZWxf
Z3VjX2N0ICpjdCwKIAlsaXN0X2FkZF90YWlsKCZyZXF1ZXN0LmxpbmssICZjdC0+cmVxdWVzdHMu
cGVuZGluZyk7CiAJc3Bpbl91bmxvY2soJmN0LT5yZXF1ZXN0cy5sb2NrKTsKIAotCWVyciA9IGN0
X3dyaXRlKGN0LCBhY3Rpb24sIGxlbiwgZmVuY2UpOworCWVyciA9IGN0X3dyaXRlKGN0LCBhY3Rp
b24sIGxlbiwgZmVuY2UsIDApOworCWcyaF9yZXNlcnZlX3NwYWNlKGN0LCBHVUNfQ1RCX0hYR19N
U0dfTUFYX0xFTik7CiAKLQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdC0+Y3Ricy5zZW5kLmxv
Y2ssIGZsYWdzKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjdGItPmxvY2ssIGZsYWdzKTsK
IAogCWlmICh1bmxpa2VseShlcnIpKQogCQlnb3RvIHVubGluazsKQEAgLTUzMCw2ICs3MTgsNyBA
QCBzdGF0aWMgaW50IGN0X3NlbmQoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsCiAJaW50ZWxfZ3Vj
X25vdGlmeShjdF90b19ndWMoY3QpKTsKIAogCWVyciA9IHdhaXRfZm9yX2N0X3JlcXVlc3RfdXBk
YXRlKCZyZXF1ZXN0LCBzdGF0dXMpOworCWcyaF9yZWxlYXNlX3NwYWNlKGN0LCBHVUNfQ1RCX0hY
R19NU0dfTUFYX0xFTik7CiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gdW5saW5rOwogCkBA
IC01NjIsMTYgKzc1MSwyNSBAQCBzdGF0aWMgaW50IGN0X3NlbmQoc3RydWN0IGludGVsX2d1Y19j
dCAqY3QsCiAgKiBDb21tYW5kIFRyYW5zcG9ydCAoQ1QpIGJ1ZmZlciBiYXNlZCBHdUMgc2VuZCBm
dW5jdGlvbi4KICAqLwogaW50IGludGVsX2d1Y19jdF9zZW5kKHN0cnVjdCBpbnRlbF9ndWNfY3Qg
KmN0LCBjb25zdCB1MzIgKmFjdGlvbiwgdTMyIGxlbiwKLQkJICAgICAgdTMyICpyZXNwb25zZV9i
dWYsIHUzMiByZXNwb25zZV9idWZfc2l6ZSkKKwkJICAgICAgdTMyICpyZXNwb25zZV9idWYsIHUz
MiByZXNwb25zZV9idWZfc2l6ZSwgdTMyIGZsYWdzKQogewogCXUzMiBzdGF0dXMgPSB+MDsgLyog
dW5kZWZpbmVkICovCiAJaW50IHJldDsKIAogCWlmICh1bmxpa2VseSghY3QtPmVuYWJsZWQpKSB7
Ci0JCVdBUk4oMSwgIlVuZXhwZWN0ZWQgc2VuZDogYWN0aW9uPSUjeFxuIiwgKmFjdGlvbik7CisJ
CXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGN0X3RvX2d1YyhjdCk7CisJCXN0cnVjdCBpbnRlbF91
YyAqdWMgPSBjb250YWluZXJfb2YoZ3VjLCBzdHJ1Y3QgaW50ZWxfdWMsIGd1Yyk7CisKKwkJV0FS
TighdWMtPnJlc2V0X2luX3Byb2dyZXNzLCAiVW5leHBlY3RlZCBzZW5kOiBhY3Rpb249JSN4XG4i
LCAqYWN0aW9uKTsKIAkJcmV0dXJuIC1FTk9ERVY7CiAJfQogCisJaWYgKHVubGlrZWx5KGN0LT5j
dGJzLnNlbmQuYnJva2VuKSkKKwkJcmV0dXJuIC1FUElQRTsKKworCWlmIChmbGFncyAmIElOVEVM
X0dVQ19DVF9TRU5EX05CKQorCQlyZXR1cm4gY3Rfc2VuZF9uYihjdCwgYWN0aW9uLCBsZW4sIGZs
YWdzKTsKKwogCXJldCA9IGN0X3NlbmQoY3QsIGFjdGlvbiwgbGVuLCByZXNwb25zZV9idWYsIHJl
c3BvbnNlX2J1Zl9zaXplLCAmc3RhdHVzKTsKIAlpZiAodW5saWtlbHkocmV0IDwgMCkpIHsKIAkJ
Q1RfRVJST1IoY3QsICJTZW5kaW5nIGFjdGlvbiAlI3ggZmFpbGVkIChlcnI9JWQgc3RhdHVzPSUj
WClcbiIsCkBAIC02MDcsOCArODA1LDggQEAgc3RhdGljIGludCBjdF9yZWFkKHN0cnVjdCBpbnRl
bF9ndWNfY3QgKmN0LCBzdHJ1Y3QgY3RfaW5jb21pbmdfbXNnICoqbXNnKQogewogCXN0cnVjdCBp
bnRlbF9ndWNfY3RfYnVmZmVyICpjdGIgPSAmY3QtPmN0YnMucmVjdjsKIAlzdHJ1Y3QgZ3VjX2N0
X2J1ZmZlcl9kZXNjICpkZXNjID0gY3RiLT5kZXNjOwotCXUzMiBoZWFkID0gZGVzYy0+aGVhZDsK
LQl1MzIgdGFpbCA9IGRlc2MtPnRhaWw7CisJdTMyIGhlYWQgPSBjdGItPmhlYWQ7CisJdTMyIHRh
aWwgPSBSRUFEX09OQ0UoZGVzYy0+dGFpbCk7CiAJdTMyIHNpemUgPSBjdGItPnNpemU7CiAJdTMy
ICpjbWRzID0gY3RiLT5jbWRzOwogCXMzMiBhdmFpbGFibGU7CkBAIC02MjIsOSArODIwLDE5IEBA
IHN0YXRpYyBpbnQgY3RfcmVhZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgc3RydWN0IGN0X2lu
Y29taW5nX21zZyAqKm1zZykKIAlpZiAodW5saWtlbHkoZGVzYy0+c3RhdHVzKSkKIAkJZ290byBj
b3JydXB0ZWQ7CiAKLQlpZiAodW5saWtlbHkoKHRhaWwgfCBoZWFkKSA+PSBzaXplKSkgewotCQlD
VF9FUlJPUihjdCwgIkludmFsaWQgb2Zmc2V0cyBoZWFkPSV1IHRhaWw9JXUgKHNpemU9JXUpXG4i
LAotCQkJIGhlYWQsIHRhaWwsIHNpemUpOworCUdFTV9CVUdfT04oaGVhZCA+IHNpemUpOworCisj
aWZkZWYgQ09ORklHX0RSTV9JOTE1X0RFQlVHX0dVQworCWlmICh1bmxpa2VseShoZWFkICE9IFJF
QURfT05DRShkZXNjLT5oZWFkKSkpIHsKKwkJQ1RfRVJST1IoY3QsICJIZWFkIHdhcyBtb2RpZmll
ZCAldSAhPSAldVxuIiwKKwkJCSBkZXNjLT5oZWFkLCBoZWFkKTsKKwkJZGVzYy0+c3RhdHVzIHw9
IEdVQ19DVEJfU1RBVFVTX01JU01BVENIOworCQlnb3RvIGNvcnJ1cHRlZDsKKwl9CisjZW5kaWYK
KwlpZiAodW5saWtlbHkodGFpbCA+PSBzaXplKSkgeworCQlDVF9FUlJPUihjdCwgIkludmFsaWQg
dGFpbCBvZmZzZXQgJXUgPj0gJXUpXG4iLAorCQkJIHRhaWwsIHNpemUpOwogCQlkZXNjLT5zdGF0
dXMgfD0gR1VDX0NUQl9TVEFUVVNfT1ZFUkZMT1c7CiAJCWdvdG8gY29ycnVwdGVkOwogCX0KQEAg
LTYzOSw3ICs4NDcsNyBAQCBzdGF0aWMgaW50IGN0X3JlYWQoc3RydWN0IGludGVsX2d1Y19jdCAq
Y3QsIHN0cnVjdCBjdF9pbmNvbWluZ19tc2cgKiptc2cpCiAJLyogYmV3YXJlIG9mIGJ1ZmZlciB3
cmFwIGNhc2UgKi8KIAlpZiAodW5saWtlbHkoYXZhaWxhYmxlIDwgMCkpCiAJCWF2YWlsYWJsZSAr
PSBzaXplOwotCUNUX0RFQlVHKGN0LCAiYXZhaWxhYmxlICVkICgldToldSlcbiIsIGF2YWlsYWJs
ZSwgaGVhZCwgdGFpbCk7CisJQ1RfREVCVUcoY3QsICJhdmFpbGFibGUgJWQgKCV1OiV1OiV1KVxu
IiwgYXZhaWxhYmxlLCBoZWFkLCB0YWlsLCBzaXplKTsKIAlHRU1fQlVHX09OKGF2YWlsYWJsZSA8
IDApOwogCiAJaGVhZGVyID0gY21kc1toZWFkXTsKQEAgLTY3Nyw2ICs4ODUsOSBAQCBzdGF0aWMg
aW50IGN0X3JlYWQoc3RydWN0IGludGVsX2d1Y19jdCAqY3QsIHN0cnVjdCBjdF9pbmNvbWluZ19t
c2cgKiptc2cpCiAJfQogCUNUX0RFQlVHKGN0LCAicmVjZWl2ZWQgJSpwaFxuIiwgNCAqIGxlbiwg
KCptc2cpLT5tc2cpOwogCisJLyogdXBkYXRlIGxvY2FsIGNvcGllcyAqLworCWN0Yi0+aGVhZCA9
IGhlYWQ7CisKIAkvKiBub3cgdXBkYXRlIGRlc2NyaXB0b3IgKi8KIAlXUklURV9PTkNFKGRlc2Mt
PmhlYWQsIGhlYWQpOwogCkBAIC03MjgsMTIgKzkzOSwxNiBAQCBzdGF0aWMgaW50IGN0X2hhbmRs
ZV9yZXNwb25zZShzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgc3RydWN0IGN0X2luY29taW5nX21z
ZyAqcgogCQlmb3VuZCA9IHRydWU7CiAJCWJyZWFrOwogCX0KLQlzcGluX3VubG9ja19pcnFyZXN0
b3JlKCZjdC0+cmVxdWVzdHMubG9jaywgZmxhZ3MpOwotCiAJaWYgKCFmb3VuZCkgewogCQlDVF9F
UlJPUihjdCwgIlVuc29saWNpdGVkIHJlc3BvbnNlIChmZW5jZSAldSlcbiIsIGZlbmNlKTsKLQkJ
cmV0dXJuIC1FTk9LRVk7CisJCUNUX0VSUk9SKGN0LCAiQ291bGQgbm90IGZpbmQgZmVuY2U9JXUs
IGxhc3RfZmVuY2U9JXVcbiIsIGZlbmNlLAorCQkJIGN0LT5yZXF1ZXN0cy5sYXN0X2ZlbmNlKTsK
KwkJbGlzdF9mb3JfZWFjaF9lbnRyeShyZXEsICZjdC0+cmVxdWVzdHMucGVuZGluZywgbGluaykK
KwkJCUNUX0VSUk9SKGN0LCAicmVxdWVzdCAldSBhd2FpdHMgcmVzcG9uc2VcbiIsCisJCQkJIHJl
cS0+ZmVuY2UpOworCQllcnIgPSAtRU5PS0VZOwogCX0KKwlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZjdC0+cmVxdWVzdHMubG9jaywgZmxhZ3MpOwogCiAJaWYgKHVubGlrZWx5KGVycikpCiAJCXJl
dHVybiBlcnI7CkBAIC03NjIsNiArOTc3LDE5IEBAIHN0YXRpYyBpbnQgY3RfcHJvY2Vzc19yZXF1
ZXN0KHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0LCBzdHJ1Y3QgY3RfaW5jb21pbmdfbXNnICpyCiAJ
Y2FzZSBJTlRFTF9HVUNfQUNUSU9OX0RFRkFVTFQ6CiAJCXJldCA9IGludGVsX2d1Y190b19ob3N0
X3Byb2Nlc3NfcmVjdl9tc2coZ3VjLCBwYXlsb2FkLCBsZW4pOwogCQlicmVhazsKKwljYXNlIElO
VEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT05URVhUX0RPTkU6CisJCXJldCA9IGludGVsX2d1
Y19kZXJlZ2lzdGVyX2RvbmVfcHJvY2Vzc19tc2coZ3VjLCBwYXlsb2FkLAorCQkJCQkJCSAgICBs
ZW4pOworCQlicmVhazsKKwljYXNlIElOVEVMX0dVQ19BQ1RJT05fU0NIRURfQ09OVEVYVF9NT0RF
X0RPTkU6CisJCXJldCA9IGludGVsX2d1Y19zY2hlZF9kb25lX3Byb2Nlc3NfbXNnKGd1YywgcGF5
bG9hZCwgbGVuKTsKKwkJYnJlYWs7CisJY2FzZSBJTlRFTF9HVUNfQUNUSU9OX0NPTlRFWFRfUkVT
RVRfTk9USUZJQ0FUSU9OOgorCQlyZXQgPSBpbnRlbF9ndWNfY29udGV4dF9yZXNldF9wcm9jZXNz
X21zZyhndWMsIHBheWxvYWQsIGxlbik7CisJCWJyZWFrOworCWNhc2UgSU5URUxfR1VDX0FDVElP
Tl9FTkdJTkVfRkFJTFVSRV9OT1RJRklDQVRJT046CisJCXJldCA9IGludGVsX2d1Y19lbmdpbmVf
ZmFpbHVyZV9wcm9jZXNzX21zZyhndWMsIHBheWxvYWQsIGxlbik7CisJCWJyZWFrOwogCWRlZmF1
bHQ6CiAJCXJldCA9IC1FT1BOT1RTVVBQOwogCQlicmVhazsKQEAgLTgxOSwxMCArMTA0NywyMiBA
QCBzdGF0aWMgdm9pZCBjdF9pbmNvbWluZ19yZXF1ZXN0X3dvcmtlcl9mdW5jKHN0cnVjdCB3b3Jr
X3N0cnVjdCAqdykKIHN0YXRpYyBpbnQgY3RfaGFuZGxlX2V2ZW50KHN0cnVjdCBpbnRlbF9ndWNf
Y3QgKmN0LCBzdHJ1Y3QgY3RfaW5jb21pbmdfbXNnICpyZXF1ZXN0KQogewogCWNvbnN0IHUzMiAq
aHhnID0gJnJlcXVlc3QtPm1zZ1tHVUNfQ1RCX01TR19NSU5fTEVOXTsKKwl1MzIgYWN0aW9uID0g
RklFTERfR0VUKEdVQ19IWEdfRVZFTlRfTVNHXzBfQUNUSU9OLCBoeGdbMF0pOwogCXVuc2lnbmVk
IGxvbmcgZmxhZ3M7CiAKIAlHRU1fQlVHX09OKEZJRUxEX0dFVChHVUNfSFhHX01TR18wX1RZUEUs
IGh4Z1swXSkgIT0gR1VDX0hYR19UWVBFX0VWRU5UKTsKIAorCS8qCisJICogQWRqdXN0aW5nIHRo
ZSBzcGFjZSBtdXN0IGJlIGRvbmUgaW4gSVJRIG9yIGRlYWRsb2NrIGNhbiBvY2N1ciBhcyB0aGUK
KwkgKiBDVEIgcHJvY2Vzc2luZyBpbiB0aGUgYmVsb3cgd29ya3F1ZXVlIGNhbiBzZW5kIENUQnMg
d2hpY2ggY3JlYXRlcyBhCisJICogY2lyY3VsYXIgZGVwZW5kZW5jeSBpZiB0aGUgc3BhY2Ugd2Fz
IHJldHVybmVkIHRoZXJlLgorCSAqLworCXN3aXRjaCAoYWN0aW9uKSB7CisJY2FzZSBJTlRFTF9H
VUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9ET05FOgorCWNhc2UgSU5URUxfR1VDX0FDVElP
Tl9ERVJFR0lTVEVSX0NPTlRFWFRfRE9ORToKKwkJZzJoX3JlbGVhc2Vfc3BhY2UoY3QsIHJlcXVl
c3QtPnNpemUpOworCX0KKwogCXNwaW5fbG9ja19pcnFzYXZlKCZjdC0+cmVxdWVzdHMubG9jaywg
ZmxhZ3MpOwogCWxpc3RfYWRkX3RhaWwoJnJlcXVlc3QtPmxpbmssICZjdC0+cmVxdWVzdHMuaW5j
b21pbmcpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmN0LT5yZXF1ZXN0cy5sb2NrLCBmbGFn
cyk7CkBAIC05NDAsMyArMTE4MCwyNSBAQCB2b2lkIGludGVsX2d1Y19jdF9ldmVudF9oYW5kbGVy
KHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0KQogCiAJY3RfdHJ5X3JlY2VpdmVfbWVzc2FnZShjdCk7
CiB9CisKK3ZvaWQgaW50ZWxfZ3VjX2xvZ19jdF9pbmZvKHN0cnVjdCBpbnRlbF9ndWNfY3QgKmN0
LAorCQkJICAgc3RydWN0IGRybV9wcmludGVyICpwKQoreworCWlmICghY3QtPmVuYWJsZWQpIHsK
KwkJZHJtX3B1dHMocCwgIkNUIGRpc2FibGVkXG4iKTsKKwkJcmV0dXJuOworCX0KKworCWRybV9w
cmludGYocCwgIkgyRyBTcGFjZTogJXVcbiIsCisJCSAgIGF0b21pY19yZWFkKCZjdC0+Y3Ricy5z
ZW5kLnNwYWNlKSAqIDQpOworCWRybV9wcmludGYocCwgIkhlYWQ6ICV1XG4iLAorCQkgICBjdC0+
Y3Ricy5zZW5kLmRlc2MtPmhlYWQpOworCWRybV9wcmludGYocCwgIlRhaWw6ICV1XG4iLAorCQkg
ICBjdC0+Y3Ricy5zZW5kLmRlc2MtPnRhaWwpOworCWRybV9wcmludGYocCwgIkcySCBTcGFjZTog
JXVcbiIsCisJCSAgIGF0b21pY19yZWFkKCZjdC0+Y3Ricy5yZWN2LnNwYWNlKSAqIDQpOworCWRy
bV9wcmludGYocCwgIkhlYWQ6ICV1XG4iLAorCQkgICBjdC0+Y3Ricy5yZWN2LmRlc2MtPmhlYWQp
OworCWRybV9wcmludGYocCwgIlRhaWw6ICV1XG4iLAorCQkgICBjdC0+Y3Ricy5yZWN2LmRlc2Mt
PnRhaWwpOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxf
Z3VjX2N0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfY3QuaAppbmRl
eCAxYWUyZGRlNmRiOTMuLjgyZjAyNDlhMTFkZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2N0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfZ3VjX2N0LmgKQEAgLTksMTEgKzksMTQgQEAKICNpbmNsdWRlIDxsaW51eC9pbnRl
cnJ1cHQuaD4KICNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgogI2luY2x1ZGUgPGxpbnV4L3dv
cmtxdWV1ZS5oPgorI2luY2x1ZGUgPGxpbnV4L2t0aW1lLmg+CisjaW5jbHVkZSA8bGludXgvd2Fp
dC5oPgogCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX2Z3aWYuaCIKIAogc3RydWN0IGk5MTVfdm1hOwog
c3RydWN0IGludGVsX2d1YzsKK3N0cnVjdCBkcm1fcHJpbnRlcjsKIAogLyoqCiAgKiBET0M6IENv
bW1hbmQgVHJhbnNwb3J0IChDVCkuCkBAIC0zMiw2ICszNSwxMCBAQCBzdHJ1Y3QgaW50ZWxfZ3Vj
OwogICogQGRlc2M6IHBvaW50ZXIgdG8gdGhlIGJ1ZmZlciBkZXNjcmlwdG9yCiAgKiBAY21kczog
cG9pbnRlciB0byB0aGUgY29tbWFuZHMgYnVmZmVyCiAgKiBAc2l6ZTogc2l6ZSBvZiB0aGUgY29t
bWFuZHMgYnVmZmVyIGluIGR3b3JkcworICogQHJlc3Zfc3BhY2U6IHJlc2VydmVkIHNwYWNlIGlu
IGJ1ZmZlciBpbiBkd29yZHMKKyAqIEBoZWFkOiBsb2NhbCBzaGFkb3cgY29weSBvZiBoZWFkIGlu
IGR3b3JkcworICogQHRhaWw6IGxvY2FsIHNoYWRvdyBjb3B5IG9mIHRhaWwgaW4gZHdvcmRzCisg
KiBAc3BhY2U6IGxvY2FsIHNoYWRvdyBjb3B5IG9mIHNwYWNlIGluIGR3b3JkcwogICogQGJyb2tl
bjogZmxhZyB0byBpbmRpY2F0ZSBpZiBkZXNjcmlwdG9yIGRhdGEgaXMgYnJva2VuCiAgKi8KIHN0
cnVjdCBpbnRlbF9ndWNfY3RfYnVmZmVyIHsKQEAgLTM5LDEwICs0NiwxMyBAQCBzdHJ1Y3QgaW50
ZWxfZ3VjX2N0X2J1ZmZlciB7CiAJc3RydWN0IGd1Y19jdF9idWZmZXJfZGVzYyAqZGVzYzsKIAl1
MzIgKmNtZHM7CiAJdTMyIHNpemU7CisJdTMyIHJlc3Zfc3BhY2U7CisJdTMyIHRhaWw7CisJdTMy
IGhlYWQ7CisJYXRvbWljX3Qgc3BhY2U7CiAJYm9vbCBicm9rZW47CiB9OwogCi0KIC8qKiBUb3At
bGV2ZWwgc3RydWN0dXJlIGZvciBDb21tYW5kIFRyYW5zcG9ydCByZWxhdGVkIGRhdGEKICAqCiAg
KiBJbmNsdWRlcyBhIHBhaXIgb2YgQ1QgYnVmZmVycyBmb3IgYmktZGlyZWN0aW9uYWwgY29tbXVu
aWNhdGlvbiBhbmQgdHJhY2tpbmcKQEAgLTYwLDYgKzcwLDkgQEAgc3RydWN0IGludGVsX2d1Y19j
dCB7CiAKIAlzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgcmVjZWl2ZV90YXNrbGV0OwogCisJLyoqIEB3
cTogd2FpdCBxdWV1ZSBmb3IgZzJoIGNoYW5lbmwgKi8KKwl3YWl0X3F1ZXVlX2hlYWRfdCB3cTsK
KwogCXN0cnVjdCB7CiAJCXUxNiBsYXN0X2ZlbmNlOyAvKiBsYXN0IGZlbmNlIHVzZWQgdG8gc2Vu
ZCByZXF1ZXN0ICovCiAKQEAgLTY5LDYgKzgyLDkgQEAgc3RydWN0IGludGVsX2d1Y19jdCB7CiAJ
CXN0cnVjdCBsaXN0X2hlYWQgaW5jb21pbmc7IC8qIGluY29taW5nIHJlcXVlc3RzICovCiAJCXN0
cnVjdCB3b3JrX3N0cnVjdCB3b3JrZXI7IC8qIGhhbmRsZXIgZm9yIGluY29taW5nIHJlcXVlc3Rz
ICovCiAJfSByZXF1ZXN0czsKKworCS8qKiBAc3RhbGxfdGltZTogdGltZSBvZiBmaXJzdCB0aW1l
IGEgQ1RCIHN1Ym1pc3Npb24gaXMgc3RhbGxlZCAqLworCWt0aW1lX3Qgc3RhbGxfdGltZTsKIH07
CiAKIHZvaWQgaW50ZWxfZ3VjX2N0X2luaXRfZWFybHkoc3RydWN0IGludGVsX2d1Y19jdCAqY3Qp
OwpAQCAtODcsOCArMTAzLDE2IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF9ndWNfY3RfZW5h
YmxlZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCkKIAlyZXR1cm4gY3QtPmVuYWJsZWQ7CiB9CiAK
KyNkZWZpbmUgSU5URUxfR1VDX0NUX1NFTkRfTkIJCUJJVCgzMSkKKyNkZWZpbmUgSU5URUxfR1VD
X0NUX1NFTkRfRzJIX0RXX1NISUZUCTAKKyNkZWZpbmUgSU5URUxfR1VDX0NUX1NFTkRfRzJIX0RX
X01BU0sJKDB4ZmYgPDwgSU5URUxfR1VDX0NUX1NFTkRfRzJIX0RXX1NISUZUKQorI2RlZmluZSBN
QUtFX1NFTkRfRkxBR1MobGVuKSBcCisJKHtHRU1fQlVHX09OKCFGSUVMRF9GSVQoSU5URUxfR1VD
X0NUX1NFTkRfRzJIX0RXX01BU0ssIGxlbikpOyBcCisJKEZJRUxEX1BSRVAoSU5URUxfR1VDX0NU
X1NFTkRfRzJIX0RXX01BU0ssIGxlbikgfCBJTlRFTF9HVUNfQ1RfU0VORF9OQik7fSkKIGludCBp
bnRlbF9ndWNfY3Rfc2VuZChzdHJ1Y3QgaW50ZWxfZ3VjX2N0ICpjdCwgY29uc3QgdTMyICphY3Rp
b24sIHUzMiBsZW4sCi0JCSAgICAgIHUzMiAqcmVzcG9uc2VfYnVmLCB1MzIgcmVzcG9uc2VfYnVm
X3NpemUpOworCQkgICAgICB1MzIgKnJlc3BvbnNlX2J1ZiwgdTMyIHJlc3BvbnNlX2J1Zl9zaXpl
LCB1MzIgZmxhZ3MpOwogdm9pZCBpbnRlbF9ndWNfY3RfZXZlbnRfaGFuZGxlcihzdHJ1Y3QgaW50
ZWxfZ3VjX2N0ICpjdCk7CiAKK3ZvaWQgaW50ZWxfZ3VjX2xvZ19jdF9pbmZvKHN0cnVjdCBpbnRl
bF9ndWNfY3QgKmN0LCBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOworCiAjZW5kaWYgLyogX0lOVEVM
X0dVQ19DVF9IXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfZ3VjX2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19k
ZWJ1Z2ZzLmMKaW5kZXggZmU3Y2I3YjI5YTFlLi45YTAzZmY1NmU2NTQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2RlYnVnZnMuYwpAQCAtOSw2ICs5LDkgQEAK
ICNpbmNsdWRlICJpbnRlbF9ndWMuaCIKICNpbmNsdWRlICJpbnRlbF9ndWNfZGVidWdmcy5oIgog
I2luY2x1ZGUgImludGVsX2d1Y19sb2dfZGVidWdmcy5oIgorI2luY2x1ZGUgImd0L3VjL2ludGVs
X2d1Y19jdC5oIgorI2luY2x1ZGUgImd0L3VjL2ludGVsX2d1Y19hZHMuaCIKKyNpbmNsdWRlICJn
dC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oIgogCiBzdGF0aWMgaW50IGd1Y19pbmZvX3Nob3co
c3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogewpAQCAtMjIsMTYgKzI1LDM2IEBAIHN0
YXRpYyBpbnQgZ3VjX2luZm9fc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiAJ
ZHJtX3B1dHMoJnAsICJcbiIpOwogCWludGVsX2d1Y19sb2dfaW5mbygmZ3VjLT5sb2csICZwKTsK
IAotCS8qIEFkZCBtb3JlIGFzIHJlcXVpcmVkIC4uLiAqLworCWlmICghaW50ZWxfZ3VjX3N1Ym1p
c3Npb25faXNfdXNlZChndWMpKQorCQlyZXR1cm4gMDsKKworCWludGVsX2d1Y19sb2dfY3RfaW5m
bygmZ3VjLT5jdCwgJnApOworCWludGVsX2d1Y19sb2dfc3VibWlzc2lvbl9pbmZvKGd1YywgJnAp
OworCWludGVsX2d1Y19sb2dfcG9saWN5X2luZm8oZ3VjLCAmcCk7CiAKIAlyZXR1cm4gMDsKIH0K
IERFRklORV9HVF9ERUJVR0ZTX0FUVFJJQlVURShndWNfaW5mbyk7CiAKK3N0YXRpYyBpbnQgZ3Vj
X3JlZ2lzdGVyZWRfY29udGV4dHNfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEp
Cit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gbS0+cHJpdmF0ZTsKKwlzdHJ1Y3QgZHJtX3By
aW50ZXIgcCA9IGRybV9zZXFfZmlsZV9wcmludGVyKG0pOworCisJaWYgKCFpbnRlbF9ndWNfc3Vi
bWlzc2lvbl9pc191c2VkKGd1YykpCisJCXJldHVybiAtRU5PREVWOworCisJaW50ZWxfZ3VjX2xv
Z19jb250ZXh0X2luZm8oZ3VjLCAmcCk7CisKKwlyZXR1cm4gMDsKK30KK0RFRklORV9HVF9ERUJV
R0ZTX0FUVFJJQlVURShndWNfcmVnaXN0ZXJlZF9jb250ZXh0cyk7CisKIHZvaWQgaW50ZWxfZ3Vj
X2RlYnVnZnNfcmVnaXN0ZXIoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgZGVudHJ5ICpy
b290KQogewogCXN0YXRpYyBjb25zdCBzdHJ1Y3QgZGVidWdmc19ndF9maWxlIGZpbGVzW10gPSB7
CiAJCXsgImd1Y19pbmZvIiwgJmd1Y19pbmZvX2ZvcHMsIE5VTEwgfSwKKwkJeyAiZ3VjX3JlZ2lz
dGVyZWRfY29udGV4dHMiLCAmZ3VjX3JlZ2lzdGVyZWRfY29udGV4dHNfZm9wcywgTlVMTCB9LAog
CX07CiAKIAlpZiAoIWludGVsX2d1Y19pc19zdXBwb3J0ZWQoZ3VjKSkKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZndpZi5oCmluZGV4IDYxN2VjNjAxNjQ4ZC4uOTRiYjFj
YTZmODg5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNf
ZndpZi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmgK
QEAgLTE3LDE0ICsxNywyMSBAQAogI2luY2x1ZGUgImFiaS9ndWNfY29tbXVuaWNhdGlvbl9jdGJf
YWJpLmgiCiAjaW5jbHVkZSAiYWJpL2d1Y19tZXNzYWdlc19hYmkuaCIKIAorLyogUGF5bG9hZCBs
ZW5ndGggb25seSBpLmUuIGRvbid0IGluY2x1ZGUgRzJIIGhlYWRlciBsZW5ndGggKi8KKyNkZWZp
bmUgRzJIX0xFTl9EV19TQ0hFRF9DT05URVhUX01PREVfU0VUCTIKKyNkZWZpbmUgRzJIX0xFTl9E
V19ERVJFR0lTVEVSX0NPTlRFWFQJCTEKKworI2RlZmluZSBHVUNfQ09OVEVYVF9ESVNBQkxFCQkw
CisjZGVmaW5lIEdVQ19DT05URVhUX0VOQUJMRQkJMQorCiAjZGVmaW5lIEdVQ19DTElFTlRfUFJJ
T1JJVFlfS01EX0hJR0gJMAogI2RlZmluZSBHVUNfQ0xJRU5UX1BSSU9SSVRZX0hJR0gJMQogI2Rl
ZmluZSBHVUNfQ0xJRU5UX1BSSU9SSVRZX0tNRF9OT1JNQUwJMgogI2RlZmluZSBHVUNfQ0xJRU5U
X1BSSU9SSVRZX05PUk1BTAkzCiAjZGVmaW5lIEdVQ19DTElFTlRfUFJJT1JJVFlfTlVNCQk0CiAK
LSNkZWZpbmUgR1VDX01BWF9TVEFHRV9ERVNDUklQVE9SUwkxMDI0Ci0jZGVmaW5lCUdVQ19JTlZB
TElEX1NUQUdFX0lECQlHVUNfTUFYX1NUQUdFX0RFU0NSSVBUT1JTCisjZGVmaW5lIEdVQ19NQVhf
TFJDX0RFU0NSSVBUT1JTCQk2NTUzNQorI2RlZmluZQlHVUNfSU5WQUxJRF9MUkNfSUQJCUdVQ19N
QVhfTFJDX0RFU0NSSVBUT1JTCiAKICNkZWZpbmUgR1VDX1JFTkRFUl9FTkdJTkUJCTAKICNkZWZp
bmUgR1VDX1ZJREVPX0VOR0lORQkJMQpAQCAtMTc1LDY2ICsxODIsMzkgQEAgc3RydWN0IGd1Y19w
cm9jZXNzX2Rlc2MgewogCXUzMiByZXNlcnZlZFszMF07CiB9IF9fcGFja2VkOwogCi0vKiBlbmdp
bmUgaWQgYW5kIGNvbnRleHQgaWQgaXMgcGFja2VkIGludG8gZ3VjX2V4ZWNsaXN0X2NvbnRleHQu
Y29udGV4dF9pZCovCi0jZGVmaW5lIEdVQ19FTENfQ1RYSURfT0ZGU0VUCQkwCi0jZGVmaW5lIEdV
Q19FTENfRU5HSU5FX09GRlNFVAkJMjkKKyNkZWZpbmUgQ09OVEVYVF9SRUdJU1RSQVRJT05fRkxB
R19LTUQJQklUKDApCiAKLS8qIFRoZSBleGVjbGlzdCBjb250ZXh0IGluY2x1ZGluZyBzb2Z0d2Fy
ZSBhbmQgSFcgaW5mb3JtYXRpb24gKi8KLXN0cnVjdCBndWNfZXhlY2xpc3RfY29udGV4dCB7Ci0J
dTMyIGNvbnRleHRfZGVzYzsKLQl1MzIgY29udGV4dF9pZDsKLQl1MzIgcmluZ19zdGF0dXM7Ci0J
dTMyIHJpbmdfbHJjYTsKLQl1MzIgcmluZ19iZWdpbjsKLQl1MzIgcmluZ19lbmQ7Ci0JdTMyIHJp
bmdfbmV4dF9mcmVlX2xvY2F0aW9uOwotCXUzMiByaW5nX2N1cnJlbnRfdGFpbF9wb2ludGVyX3Zh
bHVlOwotCXU4IGVuZ2luZV9zdGF0ZV9zdWJtaXRfdmFsdWU7Ci0JdTggZW5naW5lX3N0YXRlX3dh
aXRfdmFsdWU7Ci0JdTE2IHBhZ2VmYXVsdF9jb3VudDsKLQl1MTYgZW5naW5lX3N1Ym1pdF9xdWV1
ZV9jb3VudDsKLX0gX19wYWNrZWQ7CisjZGVmaW5lIENPTlRFWFRfUE9MSUNZX0RFRkFVTFRfRVhF
Q1VUSU9OX1FVQU5UVU1fVVMgMTAwMDAwMAorI2RlZmluZSBDT05URVhUX1BPTElDWV9ERUZBVUxU
X1BSRUVNUFRJT05fVElNRV9VUyA1MDAwMDAKKworLyogUHJlZW1wdCB0byBpZGxlIG9uIHF1YW50
dW0gZXhwaXJ5ICovCisjZGVmaW5lIENPTlRFWFRfUE9MSUNZX0ZMQUdfUFJFRU1QVF9UT19JRExF
CUJJVCgwKQogCiAvKgotICogVGhpcyBzdHJ1Y3R1cmUgZGVzY3JpYmVzIGEgc3RhZ2Ugc2V0IGFy
cmFuZ2VkIGZvciBhIHBhcnRpY3VsYXIgY29tbXVuaWNhdGlvbgotICogYmV0d2VlbiB1S2VybmVs
IChHdUMpIGFuZCBEcml2ZXIgKEtNRCkuIFRlY2huaWNhbGx5LCB0aGlzIGlzIGtub3duIGFzIGEK
LSAqICJHdUMgQ29udGV4dCBkZXNjcmlwdG9yIiBpbiB0aGUgc3BlY3MsIGJ1dCB3ZSB1c2UgdGhl
IHRlcm0gInN0YWdlIGRlc2NyaXB0b3IiCi0gKiB0byBhdm9pZCBjb25mdXNpb24gd2l0aCBhbGwg
dGhlIG90aGVyIHRoaW5ncyBhbHJlYWR5IG5hbWVkICJjb250ZXh0IiBpbiB0aGUKLSAqIGRyaXZl
ci4gQSBzdGF0aWMgcG9vbCBvZiB0aGVzZSBkZXNjcmlwdG9ycyBhcmUgc3RvcmVkIGluc2lkZSBh
IEdFTSBvYmplY3QKLSAqIChzdGFnZV9kZXNjX3Bvb2wpIHdoaWNoIGlzIGhlbGQgZm9yIHRoZSBl
bnRpcmUgbGlmZXRpbWUgb2Ygb3VyIGludGVyYWN0aW9uCi0gKiB3aXRoIHRoZSBHdUMsIGJlaW5n
IGFsbG9jYXRlZCBiZWZvcmUgdGhlIEd1QyBpcyBsb2FkZWQgd2l0aCBpdHMgZmlybXdhcmUuCisg
KiBHdUMgQ29udGV4dCByZWdpc3RyYXRpb24gZGVzY3JpcHRvci4KKyAqIEZJWE1FOiBUaGlzIGlz
IG9ubHkgcmVxdWlyZWQgdG8gZXhpc3QgZHVyaW5nIGNvbnRleHQgcmVnaXN0cmF0aW9uLgorICog
VGhlIGN1cnJlbnQgMToxIGJldHdlZW4gZ3VjX2xyY19kZXNjIGFuZCBMUkNzIGZvciB0aGUgbGlm
ZXRpbWUgb2YgdGhlIExSQworICogaXMgbm90IHJlcXVpcmVkLgogICovCi1zdHJ1Y3QgZ3VjX3N0
YWdlX2Rlc2MgewotCXUzMiBzY2hlZF9jb21tb25fYXJlYTsKLQl1MzIgc3RhZ2VfaWQ7Ci0JdTMy
IHBhc19pZDsKLQl1OCBlbmdpbmVzX3VzZWQ7Ci0JdTY0IGRiX3RyaWdnZXJfY3B1OwotCXUzMiBk
Yl90cmlnZ2VyX3VrOwotCXU2NCBkYl90cmlnZ2VyX3BoeTsKLQl1MTYgZGJfaWQ7Ci0KLQlzdHJ1
Y3QgZ3VjX2V4ZWNsaXN0X2NvbnRleHQgbHJjW0dVQ19NQVhfRU5HSU5FU19OVU1dOwotCi0JdTgg
YXR0cmlidXRlOwotCitzdHJ1Y3QgZ3VjX2xyY19kZXNjIHsKKwl1MzIgaHdfY29udGV4dF9kZXNj
OworCXUzMiBzbHBtX3BlcmZfbW9kZV9oaW50OwkvKiBTUExDIHYxIG9ubHkgKi8KKwl1MzIgc2xw
bV9mcmVxX2hpbnQ7CisJdTMyIGVuZ2luZV9zdWJtaXRfbWFzazsJCS8qIEluIGxvZ2ljYWwgc3Bh
Y2UgKi8KKwl1OCBlbmdpbmVfY2xhc3M7CisJdTggcmVzZXJ2ZWQwWzNdOwogCXUzMiBwcmlvcml0
eTsKLQotCXUzMiB3cV9zYW1wbGVkX3RhaWxfb2Zmc2V0OwotCXUzMiB3cV90b3RhbF9zdWJtaXRf
ZW5xdWV1ZXM7Ci0KIAl1MzIgcHJvY2Vzc19kZXNjOwogCXUzMiB3cV9hZGRyOwogCXUzMiB3cV9z
aXplOwotCi0JdTMyIGVuZ2luZV9wcmVzZW5jZTsKLQotCXU4IGVuZ2luZV9zdXNwZW5kZWQ7Ci0K
LQl1OCByZXNlcnZlZDBbM107Ci0JdTY0IHJlc2VydmVkMVsxXTsKLQotCXU2NCBkZXNjX3ByaXZh
dGU7CisJdTMyIGNvbnRleHRfZmxhZ3M7CQkvKiBDT05URVhUX1JFR0lTVFJBVElPTl8qICovCisJ
LyogVGltZSBmb3Igb25lIHdvcmtsb2FkIHRvIGV4ZWN1dGUuIChpbiBtaWNybyBzZWNvbmRzKSAq
LworCXUzMiBleGVjdXRpb25fcXVhbnR1bTsKKwkvKiBUaW1lIHRvIHdhaXQgZm9yIGEgcHJlZW1w
dGlvbiByZXF1ZXN0IHRvIGNvbXBsZXRlIGJlZm9yZSBpc3N1aW5nIGEKKwkgKiByZXNldC4gKGlu
IG1pY3JvIHNlY29uZHMpLiAqLworCXUzMiBwcmVlbXB0aW9uX3RpbWVvdXQ7CisJdTMyIHBvbGlj
eV9mbGFnczsJCS8qIENPTlRFWFRfUE9MSUNZXyogKi8KKwl1MzIgcmVzZXJ2ZWQxWzE5XTsKIH0g
X19wYWNrZWQ7CiAKICNkZWZpbmUgR1VDX1BPV0VSX1VOU1BFQ0lGSUVECTAKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCmluZGV4IGU5YzIz
N2IxODY5Mi4uOWMxMDJiZjBjOGUzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKQEAgLTEwLDEwICsxMCwxMyBAQAogI2luY2x1ZGUg
Imd0L2ludGVsX2JyZWFkY3J1bWJzLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfY29udGV4dC5oIgog
I2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9wbS5oIgorI2luY2x1ZGUgImd0L2ludGVsX2VuZ2lu
ZV9oZWFydGJlYXQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUgImd0L2lu
dGVsX2d0X2lycS5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0X3BtLmgiCisjaW5jbHVkZSAiZ3Qv
aW50ZWxfZ3RfcmVxdWVzdHMuaCIKICNpbmNsdWRlICJndC9pbnRlbF9scmMuaCIKKyNpbmNsdWRl
ICJndC9pbnRlbF9scmNfcmVnLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfbW9jcy5oIgogI2luY2x1
ZGUgImd0L2ludGVsX3JpbmcuaCIKIApAQCAtNTgsMjQ2ICs2MSw2ODEgQEAKICAqCiAgKi8KIAor
LyogR3VDIFZpcnR1YWwgRW5naW5lICovCitzdHJ1Y3QgZ3VjX3ZpcnR1YWxfZW5naW5lIHsKKwlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzIGJhc2U7CisJc3RydWN0IGludGVsX2NvbnRleHQgY29udGV4
dDsKK307CisKK3N0YXRpYyBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitndWNfY3JlYXRlX3ZpcnR1
YWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNpYmxpbmdzLCB1bnNpZ25lZCBpbnQgY291bnQp
OworCiAjZGVmaW5lIEdVQ19SRVFVRVNUX1NJWkUgNjQgLyogYnl0ZXMgKi8KIAotc3RhdGljIGlu
bGluZSBzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdG9fcHJpb2xpc3Qoc3RydWN0IHJiX25vZGUgKnJi
KQorLyoKKyAqIEJlbG93IGlzIGEgc2V0IG9mIGZ1bmN0aW9ucyB3aGljaCBjb250cm9sIHRoZSBH
dUMgc2NoZWR1bGluZyBzdGF0ZSB3aGljaCBkbworICogbm90IHJlcXVpcmUgYSBsb2NrIGFzIGFs
bCBzdGF0ZSB0cmFuc2l0aW9ucyBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiBpLmUuIEl0CisgKiBp
cyBub3QgcG9zc2libGUgZm9yIHRoZSBjb250ZXh0IHBpbm5pbmcgY29kZSBhbmQgc3VibWlzc2lv
biwgZm9yIHRoZSBzYW1lCisgKiBjb250ZXh0LCB0byBiZSBleGVjdXRpbmcgc2ltdWx0YW5lb3Vz
bHkuIFdlIHN0aWxsIG5lZWQgYW4gYXRvbWljIGFzIGl0IGlzCisgKiBwb3NzaWJsZSBmb3Igc29t
ZSBvZiB0aGUgYml0cyB0byBjaGFuZ2luZyBhdCB0aGUgc2FtZSB0aW1lIHRob3VnaC4KKyAqLwor
I2RlZmluZSBTQ0hFRF9TVEFURV9OT19MT0NLX0VOQUJMRUQJCQlCSVQoMCkKKyNkZWZpbmUgU0NI
RURfU1RBVEVfTk9fTE9DS19QRU5ESU5HX0VOQUJMRQkJQklUKDEpCisjZGVmaW5lIFNDSEVEX1NU
QVRFX05PX0xPQ0tfQkxPQ0tFRF9TSElGVAkJMgorI2RlZmluZSBTQ0hFRF9TVEFURV9OT19MT0NL
X0JMT0NLRUQgXAorCUJJVChTQ0hFRF9TVEFURV9OT19MT0NLX0JMT0NLRURfU0hJRlQpCisjZGVm
aW5lIFNDSEVEX1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9NQVNLIFwKKwkoMHhmZmZmIDw8IFNDSEVE
X1NUQVRFX05PX0xPQ0tfQkxPQ0tFRF9TSElGVCkKK3N0YXRpYyBpbmxpbmUgYm9vbCBjb250ZXh0
X2VuYWJsZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXJldHVybiByYl9lbnRyeShy
Yiwgc3RydWN0IGk5MTVfcHJpb2xpc3QsIG5vZGUpOworCXJldHVybiAoYXRvbWljX3JlYWQoJmNl
LT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jaykgJgorCQlTQ0hFRF9TVEFURV9OT19MT0NLX0VOQUJM
RUQpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfZW5hYmxlZChzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UpCit7CisJYXRvbWljX29yKFNDSEVEX1NUQVRFX05PX0xPQ0tfRU5B
QkxFRCwgJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7Cit9CisKK3N0YXRpYyBpbmxpbmUg
dm9pZCBjbHJfY29udGV4dF9lbmFibGVkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlh
dG9taWNfYW5kKCh1MzIpflNDSEVEX1NUQVRFX05PX0xPQ0tfRU5BQkxFRCwKKwkJICAgJmNlLT5n
dWNfc2NoZWRfc3RhdGVfbm9fbG9jayk7Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbCBjb250ZXh0
X3BlbmRpbmdfZW5hYmxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlyZXR1cm4gKGF0
b21pY19yZWFkKCZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spICYKKwkJU0NIRURfU1RBVEVf
Tk9fTE9DS19QRU5ESU5HX0VOQUJMRSk7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgZ3VjX3N0YWdlX2Rl
c2MgKl9fZ2V0X3N0YWdlX2Rlc2Moc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MzIgaWQpCitzdGF0
aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfcGVuZGluZ19lbmFibGUoc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQogewotCXN0cnVjdCBndWNfc3RhZ2VfZGVzYyAqYmFzZSA9IGd1Yy0+c3RhZ2Vf
ZGVzY19wb29sX3ZhZGRyOworCWF0b21pY19vcihTQ0hFRF9TVEFURV9OT19MT0NLX1BFTkRJTkdf
RU5BQkxFLAorCQkgICZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spOworfQogCi0JcmV0dXJu
ICZiYXNlW2lkXTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBjbHJfY29udGV4dF9wZW5kaW5nX2VuYWJs
ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJYXRvbWljX2FuZCgodTMyKX5TQ0hFRF9T
VEFURV9OT19MT0NLX1BFTkRJTkdfRU5BQkxFLAorCQkgICAmY2UtPmd1Y19zY2hlZF9zdGF0ZV9u
b19sb2NrKTsKIH0KIAotc3RhdGljIGludCBndWNfc3RhZ2VfZGVzY19wb29sX2NyZWF0ZShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpCitzdGF0aWMgaW5saW5lIHUzMiBjb250ZXh0X2Jsb2NrZWQoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXUzMiBzaXplID0gUEFHRV9BTElHTihzaXplb2Yo
c3RydWN0IGd1Y19zdGFnZV9kZXNjKSAqCi0JCQkgICAgICBHVUNfTUFYX1NUQUdFX0RFU0NSSVBU
T1JTKTsKKwlyZXR1cm4gKGF0b21pY19yZWFkKCZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2sp
ICYKKwkJU0NIRURfU1RBVEVfTk9fTE9DS19CTE9DS0VEX01BU0spID4+CisJCVNDSEVEX1NUQVRF
X05PX0xPQ0tfQkxPQ0tFRF9TSElGVDsKK30KIAotCXJldHVybiBpbnRlbF9ndWNfYWxsb2NhdGVf
YW5kX21hcF92bWEoZ3VjLCBzaXplLCAmZ3VjLT5zdGFnZV9kZXNjX3Bvb2wsCi0JCQkJCSAgICAg
ICZndWMtPnN0YWdlX2Rlc2NfcG9vbF92YWRkcik7CitzdGF0aWMgaW5saW5lIHZvaWQgaW5jcl9j
b250ZXh0X2Jsb2NrZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWxvY2tkZXBfYXNz
ZXJ0X2hlbGQoJmNlLT5lbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7CisJYXRvbWljX2FkZChT
Q0hFRF9TVEFURV9OT19MT0NLX0JMT0NLRUQsCisJCSAgICZjZS0+Z3VjX3NjaGVkX3N0YXRlX25v
X2xvY2spOwogfQogCi1zdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19wb29sX2Rlc3Ryb3koc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKQorc3RhdGljIGlubGluZSB2b2lkIGRlY3JfY29udGV4dF9ibG9j
a2VkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKLQlpOTE1X3ZtYV91bnBpbl9hbmRfcmVs
ZWFzZSgmZ3VjLT5zdGFnZV9kZXNjX3Bvb2wsIEk5MTVfVk1BX1JFTEVBU0VfTUFQKTsKKwlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZjZS0+ZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2spOworCWF0b21p
Y19zdWIoU0NIRURfU1RBVEVfTk9fTE9DS19CTE9DS0VELAorCQkgICAmY2UtPmd1Y19zY2hlZF9z
dGF0ZV9ub19sb2NrKTsKIH0KIAogLyoKLSAqIEluaXRpYWxpc2UvY2xlYXIgdGhlIHN0YWdlIGRl
c2NyaXB0b3Igc2hhcmVkIHdpdGggdGhlIEd1QyBmaXJtd2FyZS4KLSAqCi0gKiBUaGlzIGRlc2Ny
aXB0b3IgdGVsbHMgdGhlIEd1QyB3aGVyZSAoaW4gR0dUVCBzcGFjZSkgdG8gZmluZCB0aGUgaW1w
b3J0YW50Ci0gKiBkYXRhIHN0cnVjdHVyZXMgcmVsYXRlZCB0byB3b3JrIHN1Ym1pc3Npb24gKHBy
b2Nlc3MgZGVzY3JpcHRvciwgd3JpdGUgcXVldWUsCi0gKiBldGMpLgorICogQmVsb3cgaXMgYSBz
ZXQgb2YgZnVuY3Rpb25zIHdoaWNoIGNvbnRyb2wgdGhlIEd1QyBzY2hlZHVsaW5nIHN0YXRlIHdo
aWNoCisgKiByZXF1aXJlIGEgbG9jaywgYXNpZGUgZnJvbSB0aGUgc3BlY2lhbCBjYXNlIHdoZXJl
IHRoZSBmdW5jdGlvbnMgYXJlIGNhbGxlZAorICogZnJvbSBndWNfbHJjX2Rlc2NfcGluKCkuIElu
IHRoYXQgY2FzZSBpdCBpc24ndCBwb3NzaWJsZSBmb3IgYW55IG90aGVyIGNvZGUKKyAqIHBhdGgg
dG8gYmUgZXhlY3V0aW5nIG9uIHRoZSBjb250ZXh0LgogICovCi1zdGF0aWMgdm9pZCBndWNfc3Rh
Z2VfZGVzY19pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKKyNkZWZpbmUgU0NIRURfU1RBVEVf
V0FJVF9GT1JfREVSRUdJU1RFUl9UT19SRUdJU1RFUglCSVQoMCkKKyNkZWZpbmUgU0NIRURfU1RB
VEVfREVTVFJPWUVECQkJCUJJVCgxKQorI2RlZmluZSBTQ0hFRF9TVEFURV9QRU5ESU5HX0RJU0FC
TEUJCQlCSVQoMikKKyNkZWZpbmUgU0NIRURfU1RBVEVfQkFOTkVECQkJCUJJVCgzKQorc3RhdGlj
IGlubGluZSB2b2lkIGluaXRfc2NoZWRfc3RhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQor
eworCS8qIE9ubHkgc2hvdWxkIGJlIGNhbGxlZCBmcm9tIGd1Y19scmNfZGVzY19waW4oKSAqLwor
CWF0b21pY19zZXQoJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jaywgMCk7CisJY2UtPmd1Y19z
dGF0ZS5zY2hlZF9zdGF0ZSA9IDA7Cit9CisKK3N0YXRpYyBpbmxpbmUgYm9vbAorY29udGV4dF93
YWl0X2Zvcl9kZXJlZ2lzdGVyX3RvX3JlZ2lzdGVyKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
IHsKLQlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2M7CisJcmV0dXJuIChjZS0+Z3VjX3N0YXRl
LnNjaGVkX3N0YXRlICYKKwkJU0NIRURfU1RBVEVfV0FJVF9GT1JfREVSRUdJU1RFUl9UT19SRUdJ
U1RFUik7Cit9CiAKLQkvKiB3ZSBvbmx5IHVzZSAxIHN0YWdlIGRlc2MsIHNvIGhhcmRjb2RlIGl0
IHRvIDAgKi8KLQlkZXNjID0gX19nZXRfc3RhZ2VfZGVzYyhndWMsIDApOwotCW1lbXNldChkZXNj
LCAwLCBzaXplb2YoKmRlc2MpKTsKK3N0YXRpYyBpbmxpbmUgdm9pZAorc2V0X2NvbnRleHRfd2Fp
dF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
CisJLyogT25seSBzaG91bGQgYmUgY2FsbGVkIGZyb20gZ3VjX2xyY19kZXNjX3BpbigpIHdpdGhv
dXQgbG9jayAqLworCWNlLT5ndWNfc3RhdGUuc2NoZWRfc3RhdGUgfD0KKwkJU0NIRURfU1RBVEVf
V0FJVF9GT1JfREVSRUdJU1RFUl9UT19SRUdJU1RFUjsKK30KIAotCWRlc2MtPmF0dHJpYnV0ZSA9
IEdVQ19TVEFHRV9ERVNDX0FUVFJfQUNUSVZFIHwKLQkJCSAgR1VDX1NUQUdFX0RFU0NfQVRUUl9L
RVJORUw7CitzdGF0aWMgaW5saW5lIHZvaWQKK2Nscl9jb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0
ZXJfdG9fcmVnaXN0ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWxvY2tkZXBfYXNz
ZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisJY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0
ZSA9CisJCShjZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRlICYKKwkJIH5TQ0hFRF9TVEFURV9XQUlU
X0ZPUl9ERVJFR0lTVEVSX1RPX1JFR0lTVEVSKTsKK30KIAotCWRlc2MtPnN0YWdlX2lkID0gMDsK
LQlkZXNjLT5wcmlvcml0eSA9IEdVQ19DTElFTlRfUFJJT1JJVFlfS01EX05PUk1BTDsKK3N0YXRp
YyBpbmxpbmUgYm9vbAorY29udGV4dF9kZXN0cm95ZWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworCXJldHVybiAoY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSAmIFNDSEVEX1NUQVRFX0RF
U1RST1lFRCk7Cit9CiAKLQlkZXNjLT53cV9zaXplID0gR1VDX1dRX1NJWkU7CitzdGF0aWMgaW5s
aW5lIHZvaWQKK3NldF9jb250ZXh0X2Rlc3Ryb3llZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
Cit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY2UtPmd1Y19zdGF0ZS5sb2NrKTsKKwljZS0+Z3Vj
X3N0YXRlLnNjaGVkX3N0YXRlIHw9IFNDSEVEX1NUQVRFX0RFU1RST1lFRDsKIH0KIAotc3RhdGlj
IHZvaWQgZ3VjX3N0YWdlX2Rlc2NfZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCitzdGF0aWMg
aW5saW5lIGJvb2wgY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQogewotCXN0cnVjdCBndWNfc3RhZ2VfZGVzYyAqZGVzYzsKKwlyZXR1cm4gKGNlLT5ndWNf
c3RhdGUuc2NoZWRfc3RhdGUgJiBTQ0hFRF9TVEFURV9QRU5ESU5HX0RJU0FCTEUpOworfQogCi0J
ZGVzYyA9IF9fZ2V0X3N0YWdlX2Rlc2MoZ3VjLCAwKTsKLQltZW1zZXQoZGVzYywgMCwgc2l6ZW9m
KCpkZXNjKSk7CitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfcGVuZGluZ19kaXNhYmxl
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZjZS0+
Z3VjX3N0YXRlLmxvY2spOworCWNlLT5ndWNfc3RhdGUuc2NoZWRfc3RhdGUgfD0gU0NIRURfU1RB
VEVfUEVORElOR19ESVNBQkxFOwogfQogCi1zdGF0aWMgdm9pZCBndWNfYWRkX3JlcXVlc3Qoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3N0YXRpYyBpbmxp
bmUgdm9pZCBjbHJfY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQogewotCS8qIExlYXZpbmcgc3R1YiBhcyB0aGlzIGZ1bmN0aW9uIHdpbGwgYmUgdXNlZCBp
biBmdXR1cmUgcGF0Y2hlcyAqLworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUu
bG9jayk7CisJY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSA9CisJCShjZS0+Z3VjX3N0YXRlLnNj
aGVkX3N0YXRlICYgflNDSEVEX1NUQVRFX1BFTkRJTkdfRElTQUJMRSk7CiB9CiAKLS8qCi0gKiBX
aGVuIHdlJ3JlIGRvaW5nIHN1Ym1pc3Npb25zIHVzaW5nIHJlZ3VsYXIgZXhlY2xpc3RzIGJhY2tl
bmQsIHdyaXRpbmcgdG8KLSAqIEVMU1AgZnJvbSBDUFUgc2lkZSBpcyBlbm91Z2ggdG8gbWFrZSBz
dXJlIHRoYXQgd3JpdGVzIHRvIHJpbmdidWZmZXIgcGFnZXMKLSAqIHBpbm5lZCBpbiBtYXBwYWJs
ZSBhcGVydHVyZSBwb3J0aW9uIG9mIEdHVFQgYXJlIHZpc2libGUgdG8gY29tbWFuZCBzdHJlYW1l
ci4KLSAqIFdyaXRlcyBkb25lIGJ5IEd1QyBvbiBvdXIgYmVoYWxmIGFyZSBub3QgZ3VhcmFudGVl
aW5nIHN1Y2ggb3JkZXJpbmcsCi0gKiB0aGVyZWZvcmUsIHRvIGVuc3VyZSB0aGUgZmx1c2gsIHdl
J3JlIGlzc3VpbmcgYSBQT1NUSU5HIFJFQUQuCi0gKi8KLXN0YXRpYyB2b2lkIGZsdXNoX2dndHRf
d3JpdGVzKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQorc3RhdGljIGlubGluZSBib29sIGNvbnRleHRf
YmFubmVkKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKLQlpZiAoaTkxNV92bWFfaXNfbWFw
X2FuZF9mZW5jZWFibGUodm1hKSkKLQkJaW50ZWxfdW5jb3JlX3Bvc3RpbmdfcmVhZF9mdyh2bWEt
PnZtLT5ndC0+dW5jb3JlLAotCQkJCQkgICAgIEdVQ19TVEFUVVMpOworCXJldHVybiAoY2UtPmd1
Y19zdGF0ZS5zY2hlZF9zdGF0ZSAmIFNDSEVEX1NUQVRFX0JBTk5FRCk7CiB9CiAKLXN0YXRpYyB2
b2lkIGd1Y19zdWJtaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAotCQkgICAgICAg
c3RydWN0IGk5MTVfcmVxdWVzdCAqKm91dCwKLQkJICAgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KiplbmQpCitzdGF0aWMgaW5saW5lIHZvaWQgc2V0X2NvbnRleHRfYmFubmVkKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5ndC0+
dWMuZ3VjOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisJY2Ut
Pmd1Y19zdGF0ZS5zY2hlZF9zdGF0ZSB8PSBTQ0hFRF9TVEFURV9CQU5ORUQ7Cit9CiAKLQlkbyB7
Ci0JCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gKm91dCsrOworc3RhdGljIGlubGluZSB2b2lk
IGNscl9jb250ZXh0X2Jhbm5lZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJbG9ja2Rl
cF9hc3NlcnRfaGVsZCgmY2UtPmd1Y19zdGF0ZS5sb2NrKTsKKwljZS0+Z3VjX3N0YXRlLnNjaGVk
X3N0YXRlICY9IH5TQ0hFRF9TVEFURV9CQU5ORUQ7Cit9CiAKLQkJZmx1c2hfZ2d0dF93cml0ZXMo
cnEtPnJpbmctPnZtYSk7Ci0JCWd1Y19hZGRfcmVxdWVzdChndWMsIHJxKTsKLQl9IHdoaWxlIChv
dXQgIT0gZW5kKTsKK3N0YXRpYyBpbmxpbmUgYm9vbCBjb250ZXh0X2d1Y19pZF9pbnZhbGlkKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlyZXR1cm4gKGNlLT5ndWNfaWQgPT0gR1VDX0lO
VkFMSURfTFJDX0lEKTsKIH0KIAotc3RhdGljIGlubGluZSBpbnQgcnFfcHJpbyhjb25zdCBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3N0YXRpYyBpbmxpbmUgdm9pZCBzZXRfY29udGV4dF9ndWNf
aWRfaW52YWxpZChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7Ci0JcmV0dXJuIHJxLT5zY2hl
ZC5hdHRyLnByaW9yaXR5OworCWNlLT5ndWNfaWQgPSBHVUNfSU5WQUxJRF9MUkNfSUQ7Cit9CisK
K3N0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2d1YyAqY2VfdG9fZ3VjKHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSkKK3sKKwlyZXR1cm4gJmNlLT5lbmdpbmUtPmd0LT51Yy5ndWM7Cit9CisKK3N0
YXRpYyBpbmxpbmUgc3RydWN0IGk5MTVfcHJpb2xpc3QgKnRvX3ByaW9saXN0KHN0cnVjdCByYl9u
b2RlICpyYikKK3sKKwlyZXR1cm4gcmJfZW50cnkocmIsIHN0cnVjdCBpOTE1X3ByaW9saXN0LCBu
b2RlKTsKK30KKworc3RhdGljIHN0cnVjdCBndWNfbHJjX2Rlc2MgKl9fZ2V0X2xyY19kZXNjKHN0
cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMyIGluZGV4KQoreworCXN0cnVjdCBndWNfbHJjX2Rlc2Mg
KmJhc2UgPSBndWMtPmxyY19kZXNjX3Bvb2xfdmFkZHI7CisKKwlHRU1fQlVHX09OKGluZGV4ID49
IEdVQ19NQVhfTFJDX0RFU0NSSVBUT1JTKTsKKworCXJldHVybiAmYmFzZVtpbmRleF07Cit9CisK
K3N0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2NvbnRleHQgKl9fZ2V0X2NvbnRleHQoc3RydWN0
IGludGVsX2d1YyAqZ3VjLCB1MzIgaWQpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0g
eGFfbG9hZCgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgaWQpOworCisJR0VNX0JVR19PTihpZCA+PSBH
VUNfTUFYX0xSQ19ERVNDUklQVE9SUyk7CisKKwlyZXR1cm4gY2U7Cit9CisKK3N0YXRpYyBpbnQg
Z3VjX2xyY19kZXNjX3Bvb2xfY3JlYXRlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwl1MzIg
c2l6ZTsKKwlpbnQgcmV0OworCisJc2l6ZSA9IFBBR0VfQUxJR04oc2l6ZW9mKHN0cnVjdCBndWNf
bHJjX2Rlc2MpICoKKwkJCSAgR1VDX01BWF9MUkNfREVTQ1JJUFRPUlMpOworCXJldCA9IGludGVs
X2d1Y19hbGxvY2F0ZV9hbmRfbWFwX3ZtYShndWMsIHNpemUsICZndWMtPmxyY19kZXNjX3Bvb2ws
CisJCQkJCSAgICAgKHZvaWQgKiopJmd1Yy0+bHJjX2Rlc2NfcG9vbF92YWRkcik7CisJaWYgKHJl
dCkKKwkJcmV0dXJuIHJldDsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBndWNfbHJj
X2Rlc2NfcG9vbF9kZXN0cm95KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlndWMtPmxyY19k
ZXNjX3Bvb2xfdmFkZHIgPSBOVUxMOworCWk5MTVfdm1hX3VucGluX2FuZF9yZWxlYXNlKCZndWMt
PmxyY19kZXNjX3Bvb2wsIEk5MTVfVk1BX1JFTEVBU0VfTUFQKTsKK30KKworc3RhdGljIGlubGlu
ZSBib29sIGd1Y19zdWJtaXNzaW9uX2luaXRpYWxpemVkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykK
K3sKKwlyZXR1cm4gZ3VjLT5scmNfZGVzY19wb29sX3ZhZGRyICE9IE5VTEw7Cit9CisKK3N0YXRp
YyBpbmxpbmUgdm9pZCByZXNldF9scmNfZGVzYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBp
ZCkKK3sKKwlpZiAobGlrZWx5KGd1Y19zdWJtaXNzaW9uX2luaXRpYWxpemVkKGd1YykpKSB7CisJ
CXN0cnVjdCBndWNfbHJjX2Rlc2MgKmRlc2MgPSBfX2dldF9scmNfZGVzYyhndWMsIGlkKTsKKwkJ
dW5zaWduZWQgbG9uZyBmbGFnczsKKworCQltZW1zZXQoZGVzYywgMCwgc2l6ZW9mKCpkZXNjKSk7
CisKKwkJLyoKKwkJICogeGFycmF5IEFQSSBkb2Vzbid0IGhhdmUgeGFfZXJhc2VfaXJxc2F2ZSB3
cmFwcGVyLCBzbyBjYWxsaW5nCisJCSAqIHRoZSBsb3dlciBsZXZlbCBmdW5jdGlvbnMgZGlyZWN0
bHkuCisJCSAqLworCQl4YV9sb2NrX2lycXNhdmUoJmd1Yy0+Y29udGV4dF9sb29rdXAsIGZsYWdz
KTsKKwkJX194YV9lcmFzZSgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgaWQpOworCQl4YV91bmxvY2tf
aXJxcmVzdG9yZSgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgZmxhZ3MpOworCX0KK30KKworc3RhdGlj
IGlubGluZSBib29sIGxyY19kZXNjX3JlZ2lzdGVyZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1
MzIgaWQpCit7CisJcmV0dXJuIF9fZ2V0X2NvbnRleHQoZ3VjLCBpZCk7CiB9CiAKLXN0YXRpYyBz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzY2hlZHVsZV9pbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwg
aW50IGlkeCkKK3N0YXRpYyBpbmxpbmUgdm9pZCBzZXRfbHJjX2Rlc2NfcmVnaXN0ZXJlZChzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBpZCwKKwkJCQkJICAgc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKQogewotCXRyYWNlX2k5MTVfcmVxdWVzdF9pbihycSwgaWR4KTsKKwl1bnNpZ25lZCBsb25n
IGZsYWdzOwogCiAJLyoKLQkgKiBDdXJyZW50bHkgd2UgYXJlIG5vdCB0cmFja2luZyB0aGUgcnEt
PmNvbnRleHQgYmVpbmcgaW5mbGlnaHQKLQkgKiAoY2UtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZSku
IEl0IGlzIG9ubHkgdXNlZCBieSB0aGUgZXhlY2xpc3RzCi0JICogYmFja2VuZCBhdCB0aGUgbW9t
ZW50LCBhIHNpbWlsYXIgY291bnRpbmcgc3RyYXRlZ3kgd291bGQgYmUKLQkgKiByZXF1aXJlZCBp
ZiB3ZSBnZW5lcmFsaXNlIHRoZSBpbmZsaWdodCB0cmFja2luZy4KKwkgKiB4YXJyYXkgQVBJIGRv
ZXNuJ3QgaGF2ZSB4YV9zYXZlX2lycXNhdmUgd3JhcHBlciwgc28gY2FsbGluZyB0aGUKKwkgKiBs
b3dlciBsZXZlbCBmdW5jdGlvbnMgZGlyZWN0bHkuCiAJICovCisJeGFfbG9ja19pcnFzYXZlKCZn
dWMtPmNvbnRleHRfbG9va3VwLCBmbGFncyk7CisJX194YV9zdG9yZSgmZ3VjLT5jb250ZXh0X2xv
b2t1cCwgaWQsIGNlLCBHRlBfQVRPTUlDKTsKKwl4YV91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5j
b250ZXh0X2xvb2t1cCwgZmxhZ3MpOworfQorCitzdGF0aWMgaW50IGd1Y19zdWJtaXNzaW9uX2J1
c3lfbG9vcChzdHJ1Y3QgaW50ZWxfZ3VjKiBndWMsCisJCQkJICAgIGNvbnN0IHUzMiAqYWN0aW9u
LAorCQkJCSAgICB1MzIgbGVuLAorCQkJCSAgICB1MzIgZzJoX2xlbl9kdywKKwkJCQkgICAgYm9v
bCBsb29wKQoreworCWludCBlcnI7CisKKwllcnIgPSBpbnRlbF9ndWNfc2VuZF9idXN5X2xvb3Ao
Z3VjLCBhY3Rpb24sIGxlbiwgZzJoX2xlbl9kdywgbG9vcCk7CiAKLQlfX2ludGVsX2d0X3BtX2dl
dChycS0+ZW5naW5lLT5ndCk7Ci0JcmV0dXJuIGk5MTVfcmVxdWVzdF9nZXQocnEpOworCWlmICgh
ZXJyICYmIGcyaF9sZW5fZHcpCisJCWF0b21pY19pbmMoJmd1Yy0+b3V0c3RhbmRpbmdfc3VibWlz
c2lvbl9nMmgpOworCisJcmV0dXJuIGVycjsKIH0KIAotc3RhdGljIHZvaWQgc2NoZWR1bGVfb3V0
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoraW50IGludGVsX2d1Y193YWl0X2Zvcl9wZW5kaW5n
X21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAgYXRvbWljX3QgKndhaXRfdmFyLAor
CQkJCSAgIGJvb2wgaW50ZXJydXB0aWJsZSwKKwkJCQkgICBsb25nIHRpbWVvdXQpCiB7Ci0JdHJh
Y2VfaTkxNV9yZXF1ZXN0X291dChycSk7CisJY29uc3QgaW50IHN0YXRlID0gaW50ZXJydXB0aWJs
ZSA/CisJCVRBU0tfSU5URVJSVVBUSUJMRSA6IFRBU0tfVU5JTlRFUlJVUFRJQkxFOworCURFRklO
RV9XQUlUKHdhaXQpOworCisJbWlnaHRfc2xlZXAoKTsKKwlHRU1fQlVHX09OKHRpbWVvdXQgPCAw
KTsKKworCWlmICghYXRvbWljX3JlYWQod2FpdF92YXIpKQorCQlyZXR1cm4gMDsKKworCWlmICgh
dGltZW91dCkKKwkJcmV0dXJuIC1FVElNRTsKKworCWZvciAoOzspIHsKKwkJcHJlcGFyZV90b193
YWl0KCZndWMtPmN0LndxLCAmd2FpdCwgc3RhdGUpOwogCi0JaW50ZWxfZ3RfcG1fcHV0X2FzeW5j
KHJxLT5lbmdpbmUtPmd0KTsKLQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwkJaWYgKCFhdG9taWNf
cmVhZCh3YWl0X3ZhcikpCisJCQlicmVhazsKKworCQlpZiAoc2lnbmFsX3BlbmRpbmdfc3RhdGUo
c3RhdGUsIGN1cnJlbnQpKSB7CisJCQl0aW1lb3V0ID0gLUVSRVNUQVJUU1lTOworCQkJYnJlYWs7
CisJCX0KKworCQlpZiAoIXRpbWVvdXQpIHsKKwkJCXRpbWVvdXQgPSAtRVRJTUU7CisJCQlicmVh
azsKKwkJfQorCisJCXRpbWVvdXQgPSBpb19zY2hlZHVsZV90aW1lb3V0KHRpbWVvdXQpOworCX0K
KwlmaW5pc2hfd2FpdCgmZ3VjLT5jdC53cSwgJndhaXQpOworCisJcmV0dXJuICh0aW1lb3V0IDwg
MCkgPyB0aW1lb3V0IDogMDsKIH0KIAotc3RhdGljIHZvaWQgX19ndWNfZGVxdWV1ZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitpbnQgaW50ZWxfZ3VjX3dhaXRfZm9yX2lkbGUoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjLCBsb25nIHRpbWVvdXQpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2lu
ZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3Ry
dWN0IGk5MTVfc2NoZWRfZW5naW5lICogY29uc3Qgc2NoZWRfZW5naW5lID0gZW5naW5lLT5zY2hl
ZF9lbmdpbmU7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqKmZpcnN0ID0gZXhlY2xpc3RzLT5pbmZs
aWdodDsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqIGNvbnN0IGxhc3RfcG9ydCA9IGZpcnN0ICsg
ZXhlY2xpc3RzLT5wb3J0X21hc2s7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdCA9IGZpcnN0
WzBdOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKipwb3J0OwotCWJvb2wgc3VibWl0ID0gZmFsc2U7
Ci0Jc3RydWN0IHJiX25vZGUgKnJiOworCWJvb2wgaW50ZXJydXB0aWJsZSA9IHRydWU7CiAKLQls
b2NrZGVwX2Fzc2VydF9oZWxkKCZzY2hlZF9lbmdpbmUtPmxvY2spOworCWlmICh1bmxpa2VseSh0
aW1lb3V0IDwgMCkpCisJCXRpbWVvdXQgPSAtdGltZW91dCwgaW50ZXJydXB0aWJsZSA9IGZhbHNl
OwogCi0JaWYgKGxhc3QpIHsKLQkJaWYgKCorK2ZpcnN0KQotCQkJcmV0dXJuOworCXJldHVybiBp
bnRlbF9ndWNfd2FpdF9mb3JfcGVuZGluZ19tc2coZ3VjLCAmZ3VjLT5vdXRzdGFuZGluZ19zdWJt
aXNzaW9uX2cyaCwKKwkJCQkJICAgICAgaW50ZXJydXB0aWJsZSwgdGltZW91dCk7Cit9CisKK3N0
YXRpYyBpbnQgZ3VjX2xyY19kZXNjX3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wg
bG9vcCk7CiAKLQkJbGFzdCA9IE5VTEw7CitzdGF0aWMgaW50IGd1Y19hZGRfcmVxdWVzdChzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCWludCBlcnIg
PSAwOworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5jb250ZXh0OworCXUzMiBhY3Rp
b25bM107CisJaW50IGxlbiA9IDA7CisJdTMyIGcyaF9sZW5fZHcgPSAwOworCWJvb2wgZW5hYmxl
ZDsKKworCS8qCisJICogQ29ybmVyIGNhc2Ugd2hlcmUgcmVxdWVzdHMgd2VyZSBzaXR0aW5nIGlu
IHRoZSBwcmlvcml0eSBsaXN0IG9yIGEKKwkgKiByZXF1ZXN0IHJlc3VibWl0dGVkIGFmdGVyIHRo
ZSBjb250ZXh0IHdhcyBiYW5uZWQuCisJICovCisJaWYgKHVubGlrZWx5KGludGVsX2NvbnRleHRf
aXNfYmFubmVkKGNlKSkpIHsKKwkJaTkxNV9yZXF1ZXN0X3B1dChpOTE1X3JlcXVlc3RfbWFya19l
aW8ocnEpKTsKKwkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhjZS0+ZW5naW5lKTsK
KwkJZ290byBvdXQ7CiAJfQogCisJR0VNX0JVR19PTighYXRvbWljX3JlYWQoJmNlLT5ndWNfaWRf
cmVmKSk7CisJR0VNX0JVR19PTihjb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSk7CisKIAkvKgot
CSAqIFdlIHdyaXRlIGRpcmVjdGx5IGludG8gdGhlIGV4ZWNsaXN0cy0+aW5mbGlnaHQgcXVldWUg
YW5kIGRvbid0IHVzZQotCSAqIHRoZSBleGVjbGlzdHMtPnBlbmRpbmcgcXVldWUsIGFzIHdlIGRv
bid0IGhhdmUgYSBkaXN0aW5jdCBzd2l0Y2gKLQkgKiBldmVudC4KKwkgKiBDb3JuZXIgY2FzZSB3
aGVyZSB0aGUgR3VDIGZpcm13YXJlIHdhcyBibG93biBhd2F5IGFuZCByZWxvYWRlZCB3aGlsZQor
CSAqIHRoaXMgY29udGV4dCB3YXMgcGlubmVkLgogCSAqLwotCXBvcnQgPSBmaXJzdDsKKwlpZiAo
dW5saWtlbHkoIWxyY19kZXNjX3JlZ2lzdGVyZWQoZ3VjLCBjZS0+Z3VjX2lkKSkpIHsKKwkJZXJy
ID0gZ3VjX2xyY19kZXNjX3BpbihjZSwgZmFsc2UpOworCQlpZiAodW5saWtlbHkoZXJyKSkKKwkJ
CWdvdG8gb3V0OworCX0KKworCWlmICh1bmxpa2VseShjb250ZXh0X2Jsb2NrZWQoY2UpKSkKKwkJ
Z290byBvdXQ7CisKKwllbmFibGVkID0gY29udGV4dF9lbmFibGVkKGNlKTsKKworCWlmICghZW5h
YmxlZCkgeworCQlhY3Rpb25bbGVuKytdID0gSU5URUxfR1VDX0FDVElPTl9TQ0hFRF9DT05URVhU
X01PREVfU0VUOworCQlhY3Rpb25bbGVuKytdID0gY2UtPmd1Y19pZDsKKwkJYWN0aW9uW2xlbisr
XSA9IEdVQ19DT05URVhUX0VOQUJMRTsKKwkJc2V0X2NvbnRleHRfcGVuZGluZ19lbmFibGUoY2Up
OworCQlpbnRlbF9jb250ZXh0X2dldChjZSk7CisJCWcyaF9sZW5fZHcgPSBHMkhfTEVOX0RXX1ND
SEVEX0NPTlRFWFRfTU9ERV9TRVQ7CisJfSBlbHNlIHsKKwkJYWN0aW9uW2xlbisrXSA9IElOVEVM
X0dVQ19BQ1RJT05fU0NIRURfQ09OVEVYVDsKKwkJYWN0aW9uW2xlbisrXSA9IGNlLT5ndWNfaWQ7
CisJfQorCisJZXJyID0gaW50ZWxfZ3VjX3NlbmRfbmIoZ3VjLCBhY3Rpb24sIGxlbiwgZzJoX2xl
bl9kdyk7CisJaWYgKCFlbmFibGVkICYmICFlcnIpIHsKKwkJdHJhY2VfaW50ZWxfY29udGV4dF9z
Y2hlZF9lbmFibGUoY2UpOworCQlhdG9taWNfaW5jKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Np
b25fZzJoKTsKKwkJc2V0X2NvbnRleHRfZW5hYmxlZChjZSk7CisJfSBlbHNlIGlmICghZW5hYmxl
ZCkgeworCQljbHJfY29udGV4dF9wZW5kaW5nX2VuYWJsZShjZSk7CisJCWludGVsX2NvbnRleHRf
cHV0KGNlKTsKKwl9CisJaWYgKGxpa2VseSghZXJyKSkKKwkJdHJhY2VfaTkxNV9yZXF1ZXN0X2d1
Y19zdWJtaXQocnEpOworCitvdXQ6CisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGlubGluZSB2
b2lkIGd1Y19zZXRfbHJjX3RhaWwoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJcnEtPmNv
bnRleHQtPmxyY19yZWdfc3RhdGVbQ1RYX1JJTkdfVEFJTF0gPQorCQlpbnRlbF9yaW5nX3NldF90
YWlsKHJxLT5yaW5nLCBycS0+dGFpbCk7Cit9CisKK3N0YXRpYyBpbmxpbmUgaW50IHJxX3ByaW8o
Y29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJcmV0dXJuIHJxLT5zY2hlZC5hdHRy
LnByaW9yaXR5OworfQorCitzdGF0aWMgaW50IGd1Y19kZXF1ZXVlX29uZV9jb250ZXh0KHN0cnVj
dCBpbnRlbF9ndWMgKmd1YykKK3sKKwlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKiBjb25zdCBz
Y2hlZF9lbmdpbmUgPSBndWMtPnNjaGVkX2VuZ2luZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICps
YXN0ID0gTlVMTDsKKwlib29sIHN1Ym1pdCA9IGZhbHNlOworCXN0cnVjdCByYl9ub2RlICpyYjsK
KwlpbnQgcmV0OworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmc2NoZWRfZW5naW5lLT5sb2NrKTsK
KworCWlmIChndWMtPnN0YWxsZWRfcmVxdWVzdCkgeworCQlzdWJtaXQgPSB0cnVlOworCQlsYXN0
ID0gZ3VjLT5zdGFsbGVkX3JlcXVlc3Q7CisJCWdvdG8gcmVzdWJtaXQ7CisJfQorCiAJd2hpbGUg
KChyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmc2NoZWRfZW5naW5lLT5xdWV1ZSkpKSB7CiAJCXN0cnVj
dCBpOTE1X3ByaW9saXN0ICpwID0gdG9fcHJpb2xpc3QocmIpOwogCQlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSwgKnJuOwogCiAJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3RfY29uc3VtZShycSwg
cm4sIHApIHsKLQkJCWlmIChsYXN0ICYmIHJxLT5jb250ZXh0ICE9IGxhc3QtPmNvbnRleHQpIHsK
LQkJCQlpZiAocG9ydCA9PSBsYXN0X3BvcnQpCi0JCQkJCWdvdG8gZG9uZTsKLQotCQkJCSpwb3J0
ID0gc2NoZWR1bGVfaW4obGFzdCwKLQkJCQkJCSAgICBwb3J0IC0gZXhlY2xpc3RzLT5pbmZsaWdo
dCk7Ci0JCQkJcG9ydCsrOwotCQkJfQorCQkJaWYgKGxhc3QgJiYgcnEtPmNvbnRleHQgIT0gbGFz
dC0+Y29udGV4dCkKKwkJCQlnb3RvIGRvbmU7CiAKIAkJCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hl
ZC5saW5rKTsKKwogCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKLQkJCXN1Ym1pdCA9IHRy
dWU7CisKKwkJCXRyYWNlX2k5MTVfcmVxdWVzdF9pbihycSwgMCk7CiAJCQlsYXN0ID0gcnE7CisJ
CQlzdWJtaXQgPSB0cnVlOwogCQl9CiAKIAkJcmJfZXJhc2VfY2FjaGVkKCZwLT5ub2RlLCAmc2No
ZWRfZW5naW5lLT5xdWV1ZSk7CiAJCWk5MTVfcHJpb2xpc3RfZnJlZShwKTsKIAl9CiBkb25lOgot
CXNjaGVkX2VuZ2luZS0+cXVldWVfcHJpb3JpdHlfaGludCA9Ci0JCXJiID8gdG9fcHJpb2xpc3Qo
cmIpLT5wcmlvcml0eSA6IElOVF9NSU47CiAJaWYgKHN1Ym1pdCkgewotCQkqcG9ydCA9IHNjaGVk
dWxlX2luKGxhc3QsIHBvcnQgLSBleGVjbGlzdHMtPmluZmxpZ2h0KTsKLQkJKisrcG9ydCA9IE5V
TEw7Ci0JCWd1Y19zdWJtaXQoZW5naW5lLCBmaXJzdCwgcG9ydCk7CisJCWd1Y19zZXRfbHJjX3Rh
aWwobGFzdCk7CityZXN1Ym1pdDoKKwkJcmV0ID0gZ3VjX2FkZF9yZXF1ZXN0KGd1YywgbGFzdCk7
CisJCWlmICh1bmxpa2VseShyZXQgPT0gLUVQSVBFKSkKKwkJCWdvdG8gZGVhZGxrOworCQllbHNl
IGlmIChyZXQgPT0gLUVCVVNZKSB7CisJCQl0YXNrbGV0X3NjaGVkdWxlKCZzY2hlZF9lbmdpbmUt
PnRhc2tsZXQpOworCQkJZ3VjLT5zdGFsbGVkX3JlcXVlc3QgPSBsYXN0OworCQkJcmV0dXJuIGZh
bHNlOworCQl9CiAJfQotCWV4ZWNsaXN0cy0+YWN0aXZlID0gZXhlY2xpc3RzLT5pbmZsaWdodDsK
KworCWd1Yy0+c3RhbGxlZF9yZXF1ZXN0ID0gTlVMTDsKKwlyZXR1cm4gc3VibWl0OworCitkZWFk
bGs6CisJc2NoZWRfZW5naW5lLT50YXNrbGV0LmNhbGxiYWNrID0gTlVMTDsKKwl0YXNrbGV0X2Rp
c2FibGVfbm9zeW5jKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpOworCXJldHVybiBmYWxzZTsKIH0K
IAogc3RhdGljIHZvaWQgZ3VjX3N1Ym1pc3Npb25fdGFza2xldChzdHJ1Y3QgdGFza2xldF9zdHJ1
Y3QgKnQpCiB7CiAJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUgPQogCQlm
cm9tX3Rhc2tsZXQoc2NoZWRfZW5naW5lLCB0LCB0YXNrbGV0KTsKLQlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICogY29uc3QgZW5naW5lID0gc2NoZWRfZW5naW5lLT5wcml2YXRlX2RhdGE7Ci0Jc3Ry
dWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5l
eGVjbGlzdHM7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqKnBvcnQsICpycTsKIAl1bnNpZ25lZCBs
b25nIGZsYWdzOworCWJvb2wgbG9vcDsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdp
bmUtPmxvY2ssIGZsYWdzKTsKIAotCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPnNjaGVkX2Vu
Z2luZS0+bG9jaywgZmxhZ3MpOworCWRvIHsKKwkJbG9vcCA9IGd1Y19kZXF1ZXVlX29uZV9jb250
ZXh0KHNjaGVkX2VuZ2luZS0+cHJpdmF0ZV9kYXRhKTsKKwl9IHdoaWxlIChsb29wKTsKIAotCWZv
ciAocG9ydCA9IGV4ZWNsaXN0cy0+aW5mbGlnaHQ7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7Ci0J
CWlmICghaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCi0JCQlicmVhazsKKwlpOTE1X3NjaGVk
X2VuZ2luZV9yZXNldF9vbl9lbXB0eShzY2hlZF9lbmdpbmUpOwogCi0JCXNjaGVkdWxlX291dChy
cSk7Ci0JfQotCWlmIChwb3J0ICE9IGV4ZWNsaXN0cy0+aW5mbGlnaHQpIHsKLQkJaW50IGlkeCA9
IHBvcnQgLSBleGVjbGlzdHMtPmluZmxpZ2h0OwotCQlpbnQgcmVtID0gQVJSQVlfU0laRShleGVj
bGlzdHMtPmluZmxpZ2h0KSAtIGlkeDsKLQkJbWVtbW92ZShleGVjbGlzdHMtPmluZmxpZ2h0LCBw
b3J0LCByZW0gKiBzaXplb2YoKnBvcnQpKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hl
ZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKK30KKworc3RhdGljIHZvaWQgY3NfaXJxX2hhbmRsZXIo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCB1MTYgaWlyKQoreworCWlmIChpaXIgJiBH
VF9SRU5ERVJfVVNFUl9JTlRFUlJVUFQpCisJCWludGVsX2VuZ2luZV9zaWduYWxfYnJlYWRjcnVt
YnMoZW5naW5lKTsKK30KKworc3RhdGljIHZvaWQgX19ndWNfY29udGV4dF9kZXN0cm95KHN0cnVj
dCBpbnRlbF9jb250ZXh0ICpjZSk7CitzdGF0aWMgdm9pZCByZWxlYXNlX2d1Y19pZChzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CitzdGF0aWMgdm9pZCBn
dWNfc2lnbmFsX2NvbnRleHRfZmVuY2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKTsKK3N0YXRp
YyB2b2lkIGd1Y19jYW5jZWxfY29udGV4dF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UpOworc3RhdGljIHZvaWQgZ3VjX2Jsb2NrZWRfZmVuY2VfY29tcGxldGUoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKTsKKworc3RhdGljIHZvaWQgc2NydWJfZ3VjX2Rlc2NfZm9yX291dHN0YW5k
aW5nX2cyaChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQg
KmNlOworCXVuc2lnbmVkIGxvbmcgaW5kZXgsIGZsYWdzOworCWJvb2wgcGVuZGluZ19kaXNhYmxl
LCBwZW5kaW5nX2VuYWJsZSwgZGVyZWdpc3RlciwgZGVzdHJveWVkLCBiYW5uZWQ7CisKKwl4YV9m
b3JfZWFjaCgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgaW5kZXgsIGNlKSB7CisJCS8qIEZsdXNoIGNv
bnRleHQgKi8KKwkJc3Bpbl9sb2NrX2lycXNhdmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3Mp
OworCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsK
KworCQkvKgorCQkgKiBPbmNlIHdlIGFyZSBhdCB0aGlzIHBvaW50IHN1Ym1pc3Npb25fZGlzYWJs
ZWQoKSBpcyBndWFyYW50ZWVkCisJCSAqIHRvIHZpc2libGUgdG8gYWxsIGNhbGxlcnMgd2hvIHNl
dCB0aGUgYmVsb3cgZmxhZ3MgKHNlZSBhYm92ZQorCQkgKiBmbHVzaCBhbmQgZmx1c2hlcyBpbiBy
ZXNldF9wcmVwYXJlKS4gSWYgc3VibWlzc2lvbl9kaXNhYmxlZCgpCisJCSAqIGlzIHNldCwgdGhl
IGNhbGxlciBzaG91bGRuJ3Qgc2V0IHRoZXNlIGZsYWdzLgorCQkgKi8KKworCQlkZXN0cm95ZWQg
PSBjb250ZXh0X2Rlc3Ryb3llZChjZSk7CisJCXBlbmRpbmdfZW5hYmxlID0gY29udGV4dF9wZW5k
aW5nX2VuYWJsZShjZSk7CisJCXBlbmRpbmdfZGlzYWJsZSA9IGNvbnRleHRfcGVuZGluZ19kaXNh
YmxlKGNlKTsKKwkJZGVyZWdpc3RlciA9IGNvbnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19y
ZWdpc3RlcihjZSk7CisJCWJhbm5lZCA9IGNvbnRleHRfYmFubmVkKGNlKTsKKwkJaW5pdF9zY2hl
ZF9zdGF0ZShjZSk7CisKKwkJaWYgKHBlbmRpbmdfZW5hYmxlIHx8IGRlc3Ryb3llZCB8fCBkZXJl
Z2lzdGVyKSB7CisJCQlhdG9taWNfZGVjKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJo
KTsKKwkJCWlmIChkZXJlZ2lzdGVyKQorCQkJCWd1Y19zaWduYWxfY29udGV4dF9mZW5jZShjZSk7
CisJCQlpZiAoZGVzdHJveWVkKSB7CisJCQkJcmVsZWFzZV9ndWNfaWQoZ3VjLCBjZSk7CisJCQkJ
X19ndWNfY29udGV4dF9kZXN0cm95KGNlKTsKKwkJCX0KKwkJCWlmIChwZW5kaW5nX2VuYWJsZXx8
IGRlcmVnaXN0ZXIpCisJCQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQl9CisKKwkJLyogTm90
IG11dHVhbHkgZXhjbHVzaXZlIHdpdGggYWJvdmUgaWYgc3RhdGVtZW50LiAqLworCQlpZiAocGVu
ZGluZ19kaXNhYmxlKSB7CisJCQlndWNfc2lnbmFsX2NvbnRleHRfZmVuY2UoY2UpOworCQkJaWYg
KGJhbm5lZCkgeworCQkJCWd1Y19jYW5jZWxfY29udGV4dF9yZXF1ZXN0cyhjZSk7CisJCQkJaW50
ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhjZS0+ZW5naW5lKTsKKwkJCX0KKwkJCWludGVs
X2NvbnRleHRfc2NoZWRfZGlzYWJsZV91bnBpbihjZSk7CisJCQlhdG9taWNfZGVjKCZndWMtPm91
dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKTsKKwkJCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3Vj
X3N0YXRlLmxvY2ssIGZsYWdzKTsKKwkJCWd1Y19ibG9ja2VkX2ZlbmNlX2NvbXBsZXRlKGNlKTsK
KwkJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOwor
CisJCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisJCX0KIAl9Cit9CisKK3N0YXRpYyBpbmxpbmUg
Ym9vbAorc3VibWlzc2lvbl9kaXNhYmxlZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJc3Ry
dWN0IGk5MTVfc2NoZWRfZW5naW5lICogY29uc3Qgc2NoZWRfZW5naW5lID0gZ3VjLT5zY2hlZF9l
bmdpbmU7CiAKLQlfX2d1Y19kZXF1ZXVlKGVuZ2luZSk7CisJcmV0dXJuIHVubGlrZWx5KCFzY2hl
ZF9lbmdpbmUgfHwKKwkJCSFfX3Rhc2tsZXRfaXNfZW5hYmxlZCgmc2NoZWRfZW5naW5lLT50YXNr
bGV0KSk7Cit9CiAKLQlpOTE1X3NjaGVkX2VuZ2luZV9yZXNldF9vbl9lbXB0eShlbmdpbmUtPnNj
aGVkX2VuZ2luZSk7CitzdGF0aWMgdm9pZCBkaXNhYmxlX3N1Ym1pc3Npb24oc3RydWN0IGludGVs
X2d1YyAqZ3VjKQoreworCXN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2Vu
Z2luZSA9IGd1Yy0+c2NoZWRfZW5naW5lOwogCi0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5n
aW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwlpZiAoX190YXNrbGV0X2lzX2VuYWJs
ZWQoJnNjaGVkX2VuZ2luZS0+dGFza2xldCkpIHsKKwkJR0VNX0JVR19PTighZ3VjLT5jdC5lbmFi
bGVkKTsKKwkJX190YXNrbGV0X2Rpc2FibGVfc3luY19vbmNlKCZzY2hlZF9lbmdpbmUtPnRhc2ts
ZXQpOworCQlzY2hlZF9lbmdpbmUtPnRhc2tsZXQuY2FsbGJhY2sgPSBOVUxMOworCX0KIH0KIAot
c3RhdGljIHZvaWQgY3NfaXJxX2hhbmRsZXIoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCB1MTYgaWlyKQorc3RhdGljIHZvaWQgZW5hYmxlX3N1Ym1pc3Npb24oc3RydWN0IGludGVsX2d1
YyAqZ3VjKQogewotCWlmIChpaXIgJiBHVF9SRU5ERVJfVVNFUl9JTlRFUlJVUFQpIHsKLQkJaW50
ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhlbmdpbmUpOwotCQl0YXNrbGV0X2hpX3NjaGVk
dWxlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+dGFza2xldCk7CisJc3RydWN0IGk5MTVfc2NoZWRf
ZW5naW5lICogY29uc3Qgc2NoZWRfZW5naW5lID0gZ3VjLT5zY2hlZF9lbmdpbmU7CisJdW5zaWdu
ZWQgbG9uZyBmbGFnczsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZndWMtPnNjaGVkX2VuZ2luZS0+
bG9jaywgZmxhZ3MpOworCXNjaGVkX2VuZ2luZS0+dGFza2xldC5jYWxsYmFjayA9IGd1Y19zdWJt
aXNzaW9uX3Rhc2tsZXQ7CisJd21iKCk7CisJaWYgKCFfX3Rhc2tsZXRfaXNfZW5hYmxlZCgmc2No
ZWRfZW5naW5lLT50YXNrbGV0KSAmJgorCSAgICBfX3Rhc2tsZXRfZW5hYmxlKCZzY2hlZF9lbmdp
bmUtPnRhc2tsZXQpKSB7CisJCUdFTV9CVUdfT04oIWd1Yy0+Y3QuZW5hYmxlZCk7CisKKwkJLyog
QW5kIGtpY2sgaW4gY2FzZSB3ZSBtaXNzZWQgYSBuZXcgcmVxdWVzdCBzdWJtaXNzaW9uLiAqLwor
CQl0YXNrbGV0X2hpX3NjaGVkdWxlKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpOwogCX0KKwlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZndWMtPnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOwogfQog
Ci1zdGF0aWMgdm9pZCBndWNfcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCitzdGF0aWMgdm9pZCBndWNfZmx1c2hfc3VibWlzc2lvbnMoc3RydWN0IGludGVsX2d1
YyAqZ3VjKQogewotCUVOR0lORV9UUkFDRShlbmdpbmUsICJcbiIpOworCXN0cnVjdCBpOTE1X3Nj
aGVkX2VuZ2luZSAqIGNvbnN0IHNjaGVkX2VuZ2luZSA9IGd1Yy0+c2NoZWRfZW5naW5lOworCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmc2NoZWRfZW5naW5lLT5s
b2NrLCBmbGFncyk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmc2NoZWRfZW5naW5lLT5sb2Nr
LCBmbGFncyk7Cit9CisKK3ZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fcmVzZXRfcHJlcGFyZShz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJaW50IGk7CisKKwlpZiAodW5saWtlbHkoIWd1Y19z
dWJtaXNzaW9uX2luaXRpYWxpemVkKGd1YykpKQorCQkvKiBSZXNldCBjYWxsZWQgZHVyaW5nIGRy
aXZlciBsb2FkPyBHdUMgbm90IHlldCBpbml0aWFsaXNlZCEgKi8KKwkJcmV0dXJuOworCisJaW50
ZWxfZ3RfcGFya19oZWFydGJlYXRzKGd1Y190b19ndChndWMpKTsKKwlkaXNhYmxlX3N1Ym1pc3Np
b24oZ3VjKTsKKwlndWMtPmludGVycnVwdHMuZGlzYWJsZShndWMpOworCisJLyogRmx1c2ggSVJR
IGhhbmRsZXIgKi8KKwlzcGluX2xvY2tfaXJxKCZndWNfdG9fZ3QoZ3VjKS0+aXJxX2xvY2spOwor
CXNwaW5fdW5sb2NrX2lycSgmZ3VjX3RvX2d0KGd1YyktPmlycV9sb2NrKTsKKworCWd1Y19mbHVz
aF9zdWJtaXNzaW9ucyhndWMpOwogCiAJLyoKLQkgKiBQcmV2ZW50IHJlcXVlc3Qgc3VibWlzc2lv
biB0byB0aGUgaGFyZHdhcmUgdW50aWwgd2UgaGF2ZQotCSAqIGNvbXBsZXRlZCB0aGUgcmVzZXQg
aW4gaTkxNV9nZW1fcmVzZXRfZmluaXNoKCkuIElmIGEgcmVxdWVzdAotCSAqIGlzIGNvbXBsZXRl
ZCBieSBvbmUgZW5naW5lLCBpdCBtYXkgdGhlbiBxdWV1ZSBhIHJlcXVlc3QKLQkgKiB0byBhIHNl
Y29uZCB2aWEgaXRzIGV4ZWNsaXN0cy0+dGFza2xldCAqanVzdCogYXMgd2UgYXJlCi0JICogY2Fs
bGluZyBlbmdpbmUtPmluaXRfaHcoKSBhbmQgYWxzbyB3cml0aW5nIHRoZSBFTFNQLgotCSAqIFR1
cm5pbmcgb2ZmIHRoZSBleGVjbGlzdHMtPnRhc2tsZXQgdW50aWwgdGhlIHJlc2V0IGlzIG92ZXIK
LQkgKiBwcmV2ZW50cyB0aGUgcmFjZS4KLQkgKi8KLQlfX3Rhc2tsZXRfZGlzYWJsZV9zeW5jX29u
Y2UoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT50YXNrbGV0KTsKKwkgKiBIYW5kbGUgYW55IG91dHN0
YW5kaW5nIEcySHMgYmVmb3JlIHJlc2V0LiBDYWxsIElSUSBoYW5kbGVyIGRpcmVjdGx5CisJICog
ZWFjaCBwYXNzIGFzIGludGVycnVwdCBoYXZlIGJlZW4gZGlzYWJsZWQuIFdlIGFsd2F5cyBzY3J1
YiBmb3IKKwkgKiBvdXRzdGFuZGluZyBHMkggYXMgaXQgaXMgcG9zc2libGUgZm9yIG91dHN0YW5k
aW5nX3N1Ym1pc3Npb25fZzJoIHRvCisJICogYmUgaW5jcmVtZW50ZWQgYWZ0ZXIgdGhlIGNvbnRl
eHQgc3RhdGUgdXBkYXRlLgorIAkgKi8KKwlmb3IgKGkgPSAwOyBpIDwgNCAmJiBhdG9taWNfcmVh
ZCgmZ3VjLT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCk7ICsraSkgeworCQlpbnRlbF9ndWNf
dG9faG9zdF9ldmVudF9oYW5kbGVyKGd1Yyk7CisjZGVmaW5lIHdhaXRfZm9yX3Jlc2V0KGd1Yywg
d2FpdF92YXIpIFwKKwkJaW50ZWxfZ3VjX3dhaXRfZm9yX3BlbmRpbmdfbXNnKGd1Yywgd2FpdF92
YXIsIGZhbHNlLCAoSFogLyAyMCkpCisJCWRvIHsKKwkJCXdhaXRfZm9yX3Jlc2V0KGd1YywgJmd1
Yy0+b3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgpOworCQl9IHdoaWxlICghbGlzdF9lbXB0eSgm
Z3VjLT5jdC5yZXF1ZXN0cy5pbmNvbWluZykpOworCX0KKwlzY3J1Yl9ndWNfZGVzY19mb3Jfb3V0
c3RhbmRpbmdfZzJoKGd1Yyk7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoK
K2d1Y192aXJ0dWFsX2dldF9zaWJsaW5nKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnZlLCB1bnNp
Z25lZCBpbnQgc2libGluZykKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJ
aW50ZWxfZW5naW5lX21hc2tfdCB0bXAsIG1hc2sgPSB2ZS0+bWFzazsKKwl1bnNpZ25lZCBpbnQg
bnVtX3NpYmxpbmdzID0gMDsKKworCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQoZW5naW5lLCB2ZS0+
Z3QsIG1hc2ssIHRtcCkKKwkJaWYgKG51bV9zaWJsaW5ncysrID09IHNpYmxpbmcpCisJCQlyZXR1
cm4gZW5naW5lOworCisJcmV0dXJuIE5VTEw7Cit9CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqCitfX2NvbnRleHRfdG9fcGh5c2ljYWxfZW5naW5lKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBjZS0+
ZW5naW5lOworCisJaWYgKGludGVsX2VuZ2luZV9pc192aXJ0dWFsKGVuZ2luZSkpCisJCWVuZ2lu
ZSA9IGd1Y192aXJ0dWFsX2dldF9zaWJsaW5nKGVuZ2luZSwgMCk7CisKKwlyZXR1cm4gZW5naW5l
OwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfc3RhdGUoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlLAotCQkJICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKLQkJCSAgICB1MzIg
aGVhZCwKLQkJCSAgICBib29sIHNjcnViKQorc3RhdGljIHZvaWQgZ3VjX3Jlc2V0X3N0YXRlKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgdTMyIGhlYWQsIGJvb2wgc2NydWIpCiB7CisJc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gX19jb250ZXh0X3RvX3BoeXNpY2FsX2VuZ2luZShj
ZSk7CisKKwlpZiAoaW50ZWxfY29udGV4dF9pc19iYW5uZWQoY2UpKQorCQlyZXR1cm47CisKIAlH
RU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2lzX3Bpbm5lZChjZSkpOwogCiAJLyoKQEAgLTMxNSwz
NyArNzUzLDEzMSBAQCBzdGF0aWMgdm9pZCBndWNfcmVzZXRfc3RhdGUoc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlLAogCWxyY191cGRhdGVfcmVncyhjZSwgZW5naW5lLCBoZWFkKTsKIH0KIAotc3Rh
dGljIHZvaWQgZ3VjX3Jlc2V0X3Jld2luZChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
IGJvb2wgc3RhbGxlZCkKK3N0YXRpYyB2b2lkIGd1Y19yZXNldF9ub3Aoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29u
c3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwotCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxOworfQorCitzdGF0aWMgdm9pZCBndWNfcmV3aW5kX25vcChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKK3sKK30KKworc3RhdGljIHZvaWQKK19fdW53aW5k
X2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47CisJc3RydWN0IGxpc3RfaGVhZCAqcGw7CisJaW50IHBy
aW8gPSBJOTE1X1BSSU9SSVRZX0lOVkFMSUQ7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICog
Y29uc3Qgc2NoZWRfZW5naW5lID0KKwkJY2UtPmVuZ2luZS0+c2NoZWRfZW5naW5lOwogCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5zY2hlZF9lbmdp
bmUtPmxvY2ssIGZsYWdzKTsKKwlzcGluX2xvY2tfaXJxc2F2ZSgmc2NoZWRfZW5naW5lLT5sb2Nr
LCBmbGFncyk7CisJc3Bpbl9sb2NrKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlsaXN0X2Zvcl9l
YWNoX2VudHJ5X3NhZmUocnEsIHJuLAorCQkJCSAmY2UtPmd1Y19hY3RpdmUucmVxdWVzdHMsCisJ
CQkJIHNjaGVkLmxpbmspIHsKKwkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQorCQkJ
Y29udGludWU7CisKKwkJbGlzdF9kZWxfaW5pdCgmcnEtPnNjaGVkLmxpbmspOworCQlzcGluX3Vu
bG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7CisKKwkJX19pOTE1X3JlcXVlc3RfdW5zdWJtaXQo
cnEpOworCisJCS8qIFB1c2ggdGhlIHJlcXVlc3QgYmFjayBpbnRvIHRoZSBxdWV1ZSBmb3IgbGF0
ZXIgcmVzdWJtaXNzaW9uLiAqLworCQlHRU1fQlVHX09OKHJxX3ByaW8ocnEpID09IEk5MTVfUFJJ
T1JJVFlfSU5WQUxJRCk7CisJCWlmIChycV9wcmlvKHJxKSAhPSBwcmlvKSB7CisJCQlwcmlvID0g
cnFfcHJpbyhycSk7CisJCQlwbCA9IGk5MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0KHNjaGVkX2Vu
Z2luZSwgcHJpbyk7CisJCX0KKwkJR0VNX0JVR19PTihpOTE1X3NjaGVkX2VuZ2luZV9pc19lbXB0
eShzY2hlZF9lbmdpbmUpKTsKKworCQlsaXN0X2FkZF90YWlsKCZycS0+c2NoZWQubGluaywgcGwp
OworCQlzZXRfYml0KEk5MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZycS0+ZmVuY2UuZmxhZ3MpOwor
CisJCXNwaW5fbG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7CisJfQorCXNwaW5fdW5sb2NrKCZj
ZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hlZF9lbmdp
bmUtPmxvY2ssIGZsYWdzKTsKK30KKworc3RhdGljIHZvaWQgX19ndWNfcmVzZXRfY29udGV4dChz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgc3RhbGxlZCkKK3sKKwlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycTsKKwl1MzIgaGVhZDsKKworCWludGVsX2NvbnRleHRfZ2V0KGNlKTsKIAotCS8q
IFB1c2ggYmFjayBhbnkgaW5jb21wbGV0ZSByZXF1ZXN0cyBmb3IgcmVwbGF5IGFmdGVyIHRoZSBy
ZXNldC4gKi8KLQlycSA9IGV4ZWNsaXN0c191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhleGVj
bGlzdHMpOwotCWlmICghcnEpCi0JCWdvdG8gb3V0X3VubG9jazsKKwkvKgorCSAqIEd1QyB3aWxs
IGltcGxpY2l0bHkgbWFyayB0aGUgY29udGV4dCBhcyBub24tc2NoZWR1bGFibGUKKwkgKiB3aGVu
IGl0IHNlbmRzIHRoZSByZXNldCBub3RpZmljYXRpb24uIE1ha2Ugc3VyZSBvdXIgc3RhdGUKKwkg
KiByZWZsZWN0cyB0aGlzIGNoYW5nZS4gVGhlIGNvbnRleHQgd2lsbCBiZSBtYXJrZWQgZW5hYmxl
ZAorCSAqIG9uIHJlc3VibWlzc2lvbi4KKwkgKi8KKwljbHJfY29udGV4dF9lbmFibGVkKGNlKTsK
KworCXJxID0gaW50ZWxfY29udGV4dF9maW5kX2FjdGl2ZV9yZXF1ZXN0KGNlKTsKKwlpZiAoIXJx
KSB7CisJCWhlYWQgPSBjZS0+cmluZy0+dGFpbDsKKwkJc3RhbGxlZCA9IGZhbHNlOworCQlnb3Rv
IG91dF9yZXBsYXk7CisJfQogCiAJaWYgKCFpOTE1X3JlcXVlc3Rfc3RhcnRlZChycSkpCiAJCXN0
YWxsZWQgPSBmYWxzZTsKIAorCUdFTV9CVUdfT04oaTkxNV9hY3RpdmVfaXNfaWRsZSgmY2UtPmFj
dGl2ZSkpOworCWhlYWQgPSBpbnRlbF9yaW5nX3dyYXAoY2UtPnJpbmcsIHJxLT5oZWFkKTsKIAlf
X2k5MTVfcmVxdWVzdF9yZXNldChycSwgc3RhbGxlZCk7Ci0JZ3VjX3Jlc2V0X3N0YXRlKHJxLT5j
b250ZXh0LCBlbmdpbmUsIHJxLT5oZWFkLCBzdGFsbGVkKTsKIAotb3V0X3VubG9jazoKLQlzcGlu
X3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOwor
b3V0X3JlcGxheToKKwlndWNfcmVzZXRfc3RhdGUoY2UsIGhlYWQsIHN0YWxsZWQpOworCV9fdW53
aW5kX2luY29tcGxldGVfcmVxdWVzdHMoY2UpOworCWludGVsX2NvbnRleHRfcHV0KGNlKTsKK30K
Kwordm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9yZXNldChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMs
IGJvb2wgc3RhbGxlZCkKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJdW5zaWduZWQg
bG9uZyBpbmRleDsKKworCWlmICh1bmxpa2VseSghZ3VjX3N1Ym1pc3Npb25faW5pdGlhbGl6ZWQo
Z3VjKSkpCisJCS8qIFJlc2V0IGNhbGxlZCBkdXJpbmcgZHJpdmVyIGxvYWQ/IEd1QyBub3QgeWV0
IGluaXRpYWxpc2VkISAqLworCQlyZXR1cm47CisKKwl4YV9mb3JfZWFjaCgmZ3VjLT5jb250ZXh0
X2xvb2t1cCwgaW5kZXgsIGNlKQorCQlpZiAoaW50ZWxfY29udGV4dF9pc19waW5uZWQoY2UpKQor
CQkJX19ndWNfcmVzZXRfY29udGV4dChjZSwgc3RhbGxlZCk7CisKKwkvKiBHdUMgaXMgYmxvd24g
YXdheSwgZHJvcCBhbGwgcmVmZXJlbmNlcyB0byBjb250ZXh0cyAqLworCXhhX2Rlc3Ryb3koJmd1
Yy0+Y29udGV4dF9sb29rdXApOwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfY2FuY2VsKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRpYyB2b2lkIGd1Y19jYW5jZWxfY29u
dGV4dF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGk5MTVf
c2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUgPSBjZV90b19ndWMoY2UpLT5zY2hlZF9lbmdpbmU7
CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCS8q
IE1hcmsgYWxsIGV4ZWN1dGluZyByZXF1ZXN0cyBhcyBza2lwcGVkLiAqLworCXNwaW5fbG9ja19p
cnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwlzcGluX2xvY2soJmNlLT5ndWNf
YWN0aXZlLmxvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZjZS0+Z3VjX2FjdGl2ZS5y
ZXF1ZXN0cywgc2NoZWQubGluaykKKwkJaTkxNV9yZXF1ZXN0X3B1dChpOTE1X3JlcXVlc3RfbWFy
a19laW8ocnEpKTsKKwlzcGluX3VubG9jaygmY2UtPmd1Y19hY3RpdmUubG9jayk7CisJc3Bpbl91
bmxvY2tfaXJxcmVzdG9yZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7Cit9CisKK3N0YXRp
YyB2b2lkCitndWNfY2FuY2VsX3NjaGVkX2VuZ2luZV9yZXF1ZXN0cyhzdHJ1Y3QgaTkxNV9zY2hl
ZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSkKIHsKLQlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKiBj
b25zdCBzY2hlZF9lbmdpbmUgPSBlbmdpbmUtPnNjaGVkX2VuZ2luZTsKIAlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSwgKnJuOwogCXN0cnVjdCByYl9ub2RlICpyYjsKIAl1bnNpZ25lZCBsb25nIGZs
YWdzOwogCi0JRU5HSU5FX1RSQUNFKGVuZ2luZSwgIlxuIik7CisJLyogQ2FuIGJlIGNhbGxlZCBk
dXJpbmcgYm9vdCBpZiBHdUMgZmFpbHMgdG8gbG9hZCAqLworCWlmICghc2NoZWRfZW5naW5lKQor
CQlyZXR1cm47CiAKIAkvKgogCSAqIEJlZm9yZSB3ZSBjYWxsIGVuZ2luZS0+Y2FuY2VsX3JlcXVl
c3RzKCksIHdlIHNob3VsZCBoYXZlIGV4Y2x1c2l2ZQpAQCAtMzYzLDIxICs4OTUsMTYgQEAgc3Rh
dGljIHZvaWQgZ3VjX3Jlc2V0X2NhbmNlbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CiAJICovCiAJc3Bpbl9sb2NrX2lycXNhdmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOwog
Ci0JLyogTWFyayBhbGwgZXhlY3V0aW5nIHJlcXVlc3RzIGFzIHNraXBwZWQuICovCi0JbGlzdF9m
b3JfZWFjaF9lbnRyeShycSwgJnNjaGVkX2VuZ2luZS0+cmVxdWVzdHMsIHNjaGVkLmxpbmspIHsK
LQkJaTkxNV9yZXF1ZXN0X3NldF9lcnJvcl9vbmNlKHJxLCAtRUlPKTsKLQkJaTkxNV9yZXF1ZXN0
X21hcmtfY29tcGxldGUocnEpOwotCX0KLQogCS8qIEZsdXNoIHRoZSBxdWV1ZWQgcmVxdWVzdHMg
dG8gdGhlIHRpbWVsaW5lIGxpc3QgKGZvciByZXRpcmluZykuICovCiAJd2hpbGUgKChyYiA9IHJi
X2ZpcnN0X2NhY2hlZCgmc2NoZWRfZW5naW5lLT5xdWV1ZSkpKSB7CiAJCXN0cnVjdCBpOTE1X3By
aW9saXN0ICpwID0gdG9fcHJpb2xpc3QocmIpOwogCiAJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVl
c3RfY29uc3VtZShycSwgcm4sIHApIHsKIAkJCWxpc3RfZGVsX2luaXQoJnJxLT5zY2hlZC5saW5r
KTsKKwogCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKLQkJCWRtYV9mZW5jZV9zZXRfZXJy
b3IoJnJxLT5mZW5jZSwgLUVJTyk7Ci0JCQlpOTE1X3JlcXVlc3RfbWFya19jb21wbGV0ZShycSk7
CisKKwkJCWk5MTVfcmVxdWVzdF9wdXQoaTkxNV9yZXF1ZXN0X21hcmtfZWlvKHJxKSk7CiAJCX0K
IAogCQlyYl9lcmFzZV9jYWNoZWQoJnAtPm5vZGUsICZzY2hlZF9lbmdpbmUtPnF1ZXVlKTsKQEAg
LTM5MiwxNSArOTE5LDQxIEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldF9jYW5jZWwoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnNjaGVkX2Vu
Z2luZS0+bG9jaywgZmxhZ3MpOwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfZmluaXNoKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3ZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25f
Y2FuY2VsX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQlpZiAoX190YXNrbGV0
X2VuYWJsZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQpKQotCQkvKiBBbmQga2ljayBp
biBjYXNlIHdlIG1pc3NlZCBhIG5ldyByZXF1ZXN0IHN1Ym1pc3Npb24uICovCi0JCXRhc2tsZXRf
aGlfc2NoZWR1bGUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT50YXNrbGV0KTsKKwlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2U7CisJdW5zaWduZWQgbG9uZyBpbmRleDsKIAotCUVOR0lORV9UUkFDRShl
bmdpbmUsICJkZXB0aC0+JWRcbiIsCi0JCSAgICAgYXRvbWljX3JlYWQoJmVuZ2luZS0+c2NoZWRf
ZW5naW5lLT50YXNrbGV0LmNvdW50KSk7Ci19CisJeGFfZm9yX2VhY2goJmd1Yy0+Y29udGV4dF9s
b29rdXAsIGluZGV4LCBjZSkKKwkJaWYgKGludGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSkKKwkJ
CWd1Y19jYW5jZWxfY29udGV4dF9yZXF1ZXN0cyhjZSk7CisKKwlndWNfY2FuY2VsX3NjaGVkX2Vu
Z2luZV9yZXF1ZXN0cyhndWMtPnNjaGVkX2VuZ2luZSk7CisKKwkvKiBHdUMgaXMgYmxvd24gYXdh
eSwgZHJvcCBhbGwgcmVmZXJlbmNlcyB0byBjb250ZXh0cyAqLworCXhhX2Rlc3Ryb3koJmd1Yy0+
Y29udGV4dF9sb29rdXApOworfQorCit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX3Jlc2V0X2Zp
bmlzaChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJLyogUmVzZXQgY2FsbGVkIGR1cmluZyBk
cml2ZXIgbG9hZCBvciBkdXJpbmcgd2VkZ2U/ICovCisJaWYgKHVubGlrZWx5KCFndWNfc3VibWlz
c2lvbl9pbml0aWFsaXplZChndWMpIHx8CisJCSAgICAgdGVzdF9iaXQoSTkxNV9XRURHRUQsICZn
dWNfdG9fZ3QoZ3VjKS0+cmVzZXQuZmxhZ3MpKSkKKwkJcmV0dXJuOworCisJLyoKKwkgKiBUZWNo
bmljYWxseSBwb3NzaWJsZSBmb3IgZWl0aGVyIG9mIHRoZXNlIHZhbHVlcyB0byBiZSBub24temVy
byBoZXJlLAorCSAqIGJ1dCB2ZXJ5IHVubGlrZWx5ICsgaGFybWxlc3MuIFJlZ2FyZGxlc3MgbGV0
J3MgYWRkIGEgd2FybiBzbyB3ZSBjYW4KKwkgKiBzZWUgaW4gQ0kgaWYgdGhpcyBoYXBwZW5zIGZy
ZXF1ZW50bHkgLyBhIHByZWN1cnNvciB0byB0YWtpbmcgZG93biB0aGUKKwkgKiBtYWNoaW5lLgor
CSAqLworCUdFTV9XQVJOX09OKGF0b21pY19yZWFkKCZndWMtPm91dHN0YW5kaW5nX3N1Ym1pc3Np
b25fZzJoKSk7CisJYXRvbWljX3NldCgmZ3VjLT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCwg
MCk7CisKKwlpbnRlbF9ndWNfZ2xvYmFsX3BvbGljaWVzX3VwZGF0ZShndWMpOworCWVuYWJsZV9z
dWJtaXNzaW9uKGd1Yyk7CisJaW50ZWxfZ3RfdW5wYXJrX2hlYXJ0YmVhdHMoZ3VjX3RvX2d0KGd1
YykpOworfQogCiAvKgogICogU2V0IHVwIHRoZSBtZW1vcnkgcmVzb3VyY2VzIHRvIGJlIHNoYXJl
ZCB3aXRoIHRoZSBHdUMgKHZpYSB0aGUgR0dUVCkKQEAgLTQxMCw3MiArOTYzLDg5NSBAQCBpbnQg
aW50ZWxfZ3VjX3N1Ym1pc3Npb25faW5pdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJaW50
IHJldDsKIAotCWlmIChndWMtPnN0YWdlX2Rlc2NfcG9vbCkKKwlpZiAoZ3VjLT5scmNfZGVzY19w
b29sKQogCQlyZXR1cm4gMDsKIAotCXJldCA9IGd1Y19zdGFnZV9kZXNjX3Bvb2xfY3JlYXRlKGd1
Yyk7CisJcmV0ID0gZ3VjX2xyY19kZXNjX3Bvb2xfY3JlYXRlKGd1Yyk7CiAJaWYgKHJldCkKIAkJ
cmV0dXJuIHJldDsKIAkvKgogCSAqIEtlZXAgc3RhdGljIGFuYWx5c2VycyBoYXBweSwgbGV0IHRo
ZW0ga25vdyB0aGF0IHdlIGFsbG9jYXRlZCB0aGUKIAkgKiB2bWEgYWZ0ZXIgdGVzdGluZyB0aGF0
IGl0IGRpZG4ndCBleGlzdCBlYXJsaWVyLgogCSAqLwotCUdFTV9CVUdfT04oIWd1Yy0+c3RhZ2Vf
ZGVzY19wb29sKTsKKwlHRU1fQlVHX09OKCFndWMtPmxyY19kZXNjX3Bvb2wpOworCisJeGFfaW5p
dF9mbGFncygmZ3VjLT5jb250ZXh0X2xvb2t1cCwgWEFfRkxBR1NfTE9DS19JUlEpOworCisJc3Bp
bl9sb2NrX2luaXQoJmd1Yy0+Y29udGV4dHNfbG9jayk7CisJSU5JVF9MSVNUX0hFQUQoJmd1Yy0+
Z3VjX2lkX2xpc3QpOworCWlkYV9pbml0KCZndWMtPmd1Y19pZHMpOwogCiAJcmV0dXJuIDA7CiB9
CiAKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZmluaShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMp
CiB7Ci0JaWYgKGd1Yy0+c3RhZ2VfZGVzY19wb29sKSB7Ci0JCWd1Y19zdGFnZV9kZXNjX3Bvb2xf
ZGVzdHJveShndWMpOworCWlmICghZ3VjLT5scmNfZGVzY19wb29sKQorCQlyZXR1cm47CisKKwln
dWNfbHJjX2Rlc2NfcG9vbF9kZXN0cm95KGd1Yyk7CisJaTkxNV9zY2hlZF9lbmdpbmVfcHV0KGd1
Yy0+c2NoZWRfZW5naW5lKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIHF1ZXVlX3JlcXVlc3Qo
c3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUsCisJCQkJIHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxLAorCQkJCSBpbnQgcHJpbykKK3sKKwlHRU1fQlVHX09OKCFsaXN0X2VtcHR5
KCZycS0+c2NoZWQubGluaykpOworCWxpc3RfYWRkX3RhaWwoJnJxLT5zY2hlZC5saW5rLAorCQkg
ICAgICBpOTE1X3NjaGVkX2xvb2t1cF9wcmlvbGlzdChzY2hlZF9lbmdpbmUsIHByaW8pKTsKKwlz
ZXRfYml0KEk5MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZycS0+ZmVuY2UuZmxhZ3MpOworfQorCitz
dGF0aWMgaW50IGd1Y19ieXBhc3NfdGFza2xldF9zdWJtaXQoc3RydWN0IGludGVsX2d1YyAqZ3Vj
LAorCQkJCSAgICAgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJaW50IHJldDsKKworCV9f
aTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7CisKKwl0cmFjZV9pOTE1X3JlcXVlc3RfaW4ocnEsIDAp
OworCisJZ3VjX3NldF9scmNfdGFpbChycSk7CisJcmV0ID0gZ3VjX2FkZF9yZXF1ZXN0KGd1Yywg
cnEpOworCWlmIChyZXQgPT0gLUVCVVNZKQorCQlndWMtPnN0YWxsZWRfcmVxdWVzdCA9IHJxOwor
CisJaWYgKHVubGlrZWx5KHJldCA9PSAtRVBJUEUpKQorCQlkaXNhYmxlX3N1Ym1pc3Npb24oZ3Vj
KTsKKworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19zdWJtaXRfcmVxdWVzdChz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNj
aGVkX2VuZ2luZSA9IHJxLT5lbmdpbmUtPnNjaGVkX2VuZ2luZTsKKwlzdHJ1Y3QgaW50ZWxfZ3Vj
ICpndWMgPSAmcnEtPmVuZ2luZS0+Z3QtPnVjLmd1YzsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOwor
CisJLyogV2lsbCBiZSBjYWxsZWQgZnJvbSBpcnEtY29udGV4dCB3aGVuIHVzaW5nIGZvcmVpZ24g
ZmVuY2VzLiAqLworCXNwaW5fbG9ja19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdz
KTsKKworCWlmIChzdWJtaXNzaW9uX2Rpc2FibGVkKGd1YykgfHwgZ3VjLT5zdGFsbGVkX3JlcXVl
c3QgfHwKKwkgICAgIWk5MTVfc2NoZWRfZW5naW5lX2lzX2VtcHR5KHNjaGVkX2VuZ2luZSkpCisJ
CXF1ZXVlX3JlcXVlc3Qoc2NoZWRfZW5naW5lLCBycSwgcnFfcHJpbyhycSkpOworCWVsc2UgaWYg
KGd1Y19ieXBhc3NfdGFza2xldF9zdWJtaXQoZ3VjLCBycSkgPT0gLUVCVVNZKQorCQl0YXNrbGV0
X2hpX3NjaGVkdWxlKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpOworCisJc3Bpbl91bmxvY2tfaXJx
cmVzdG9yZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7Cit9CisKKyNkZWZpbmUgR1VDX0lE
X1NUQVJUCTY0CS8qIEZpcnN0IDY0IGd1Y19pZHMgcmVzZXJ2ZWQgKi8KK3N0YXRpYyBpbnQgbmV3
X2d1Y19pZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJcmV0dXJuIGlkYV9zaW1wbGVfZ2V0
KCZndWMtPmd1Y19pZHMsIEdVQ19JRF9TVEFSVCwKKwkJCSAgICAgIEdVQ19NQVhfTFJDX0RFU0NS
SVBUT1JTLCBHRlBfS0VSTkVMIHwKKwkJCSAgICAgIF9fR0ZQX1JFVFJZX01BWUZBSUwgfCBfX0dG
UF9OT1dBUk4pOworfQorCitzdGF0aWMgdm9pZCBfX3JlbGVhc2VfZ3VjX2lkKHN0cnVjdCBpbnRl
bF9ndWMgKmd1Yywgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWlmICghY29udGV4dF9n
dWNfaWRfaW52YWxpZChjZSkpIHsKKwkJaWRhX3NpbXBsZV9yZW1vdmUoJmd1Yy0+Z3VjX2lkcywg
Y2UtPmd1Y19pZCk7CisJCXJlc2V0X2xyY19kZXNjKGd1YywgY2UtPmd1Y19pZCk7CisJCXNldF9j
b250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKTsKKwl9CisJaWYgKCFsaXN0X2VtcHR5KCZjZS0+Z3Vj
X2lkX2xpbmspKQorCQlsaXN0X2RlbF9pbml0KCZjZS0+Z3VjX2lkX2xpbmspOworfQorCitzdGF0
aWMgdm9pZCByZWxlYXNlX2d1Y19pZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJc3Bpbl9sb2NrX2ly
cXNhdmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCV9fcmVsZWFzZV9ndWNfaWQoZ3Vj
LCBjZSk7CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250ZXh0c19sb2NrLCBmbGFn
cyk7Cit9CisKK3N0YXRpYyBpbnQgc3RlYWxfZ3VjX2lkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykK
K3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJaW50IGd1Y19pZDsKKworCWlmICghbGlz
dF9lbXB0eSgmZ3VjLT5ndWNfaWRfbGlzdCkpIHsKKwkJY2UgPSBsaXN0X2ZpcnN0X2VudHJ5KCZn
dWMtPmd1Y19pZF9saXN0LAorCQkJCSAgICAgIHN0cnVjdCBpbnRlbF9jb250ZXh0LAorCQkJCSAg
ICAgIGd1Y19pZF9saW5rKTsKKworCQlHRU1fQlVHX09OKGF0b21pY19yZWFkKCZjZS0+Z3VjX2lk
X3JlZikpOworCQlHRU1fQlVHX09OKGNvbnRleHRfZ3VjX2lkX2ludmFsaWQoY2UpKTsKKworCQls
aXN0X2RlbF9pbml0KCZjZS0+Z3VjX2lkX2xpbmspOworCQlndWNfaWQgPSBjZS0+Z3VjX2lkOwor
CQlzZXRfY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSk7CisJCXJldHVybiBndWNfaWQ7CisJfSBl
bHNlIHsKKwkJcmV0dXJuIC1FQUdBSU47CisJfQorfQorCitzdGF0aWMgaW50IGFzc2lnbl9ndWNf
aWQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MTYgKm91dCkKK3sKKwlpbnQgcmV0OworCisJcmV0
ID0gbmV3X2d1Y19pZChndWMpOworCWlmICh1bmxpa2VseShyZXQgPCAwKSkgeworCQlyZXQgPSBz
dGVhbF9ndWNfaWQoZ3VjKTsKKwkJaWYgKHJldCA8IDApCisJCQlyZXR1cm4gcmV0OworCX0KKwor
CSpvdXQgPSByZXQ7CisJcmV0dXJuIDA7Cit9CisKKyNkZWZpbmUgUElOX0dVQ19JRF9UUklFUwk0
CitzdGF0aWMgaW50IHBpbl9ndWNfaWQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCit7CisJaW50IHJldCA9IDA7CisJdW5zaWduZWQgbG9uZyBmbGFncywg
dHJpZXMgPSBQSU5fR1VDX0lEX1RSSUVTOworCisJR0VNX0JVR19PTihhdG9taWNfcmVhZCgmY2Ut
Pmd1Y19pZF9yZWYpKTsKKwordHJ5X2FnYWluOgorCXNwaW5fbG9ja19pcnFzYXZlKCZndWMtPmNv
bnRleHRzX2xvY2ssIGZsYWdzKTsKKworCWlmIChjb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSkg
eworCQlyZXQgPSBhc3NpZ25fZ3VjX2lkKGd1YywgJmNlLT5ndWNfaWQpOworCQlpZiAocmV0KQor
CQkJZ290byBvdXRfdW5sb2NrOworCQlyZXQgPSAxOwkvKiBJbmRpZGNhdGVzIG5ld2x5IGFzc2ln
bmVkIGd1Y19pZCAqLworCX0KKwlpZiAoIWxpc3RfZW1wdHkoJmNlLT5ndWNfaWRfbGluaykpCisJ
CWxpc3RfZGVsX2luaXQoJmNlLT5ndWNfaWRfbGluayk7CisJYXRvbWljX2luYygmY2UtPmd1Y19p
ZF9yZWYpOworCitvdXRfdW5sb2NrOgorCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmd1Yy0+Y29u
dGV4dHNfbG9jaywgZmxhZ3MpOworCisJLyoKKwkgKiAtRUFHQUlOIGluZGljYXRlcyBubyBndWNf
aWRzIGFyZSBhdmFpbGFibGUsIGxldCdzIHJldGlyZSBhbnkKKwkgKiBvdXRzdGFuZGluZyByZXF1
ZXN0cyB0byBzZWUgaWYgdGhhdCBmcmVlcyB1cCBhIGd1Y19pZC4gSWYgdGhlIGZpcnN0CisJICog
cmV0aXJlIGRpZG4ndCBoZWxwLCBpbnNlcnQgYSBzbGVlcCB3aXRoIHRoZSB0aW1lc2xpY2UgZHVy
YXRpb24gYmVmb3JlCisJICogYXR0ZW1wdGluZyB0byByZXRpcmUgbW9yZSByZXF1ZXN0cy4gRG91
YmxlIHRoZSBzbGVlcCBwZXJpb2QgZWFjaAorCSAqIHN1YnNlcXVlbnQgcGFzcyBiZWZvcmUgZmlu
YWxseSBnaXZpbmcgdXAuIFRoZSBzbGVlcCBwZXJpb2QgaGFzIG1heCBvZgorCSAqIDEwMG1zIGFu
ZCBtaW5pbXVtIG9mIDFtcy4KKwkgKi8KKwlpZiAocmV0ID09IC1FQUdBSU4gJiYgLS10cmllcykg
eworCQlpZiAoUElOX0dVQ19JRF9UUklFUyAtIHRyaWVzID4gMSkgeworCQkJdW5zaWduZWQgaW50
IHRpbWVzbGljZV9zaGlmdGVkID0KKwkJCQljZS0+ZW5naW5lLT5wcm9wcy50aW1lc2xpY2VfZHVy
YXRpb25fbXMgPDwKKwkJCQkoUElOX0dVQ19JRF9UUklFUyAtIHRyaWVzIC0gMik7CisJCQl1bnNp
Z25lZCBpbnQgbWF4ID0gbWluX3QodW5zaWduZWQgaW50LCAxMDAsCisJCQkJCQkgdGltZXNsaWNl
X3NoaWZ0ZWQpOworCisJCQltc2xlZXAobWF4X3QodW5zaWduZWQgaW50LCBtYXgsIDEpKTsKKwkJ
fQorCQlpbnRlbF9ndF9yZXRpcmVfcmVxdWVzdHMoZ3VjX3RvX2d0KGd1YykpOworCQlnb3RvIHRy
eV9hZ2FpbjsKKwl9CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgdm9pZCB1bnBpbl9ndWNf
aWQoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJ
dW5zaWduZWQgbG9uZyBmbGFnczsKKworCUdFTV9CVUdfT04oYXRvbWljX3JlYWQoJmNlLT5ndWNf
aWRfcmVmKSA8IDApOworCisJc3Bpbl9sb2NrX2lycXNhdmUoJmd1Yy0+Y29udGV4dHNfbG9jaywg
ZmxhZ3MpOworCWlmICghY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkgJiYgbGlzdF9lbXB0eSgm
Y2UtPmd1Y19pZF9saW5rKSAmJgorCSAgICAhYXRvbWljX3JlYWQoJmNlLT5ndWNfaWRfcmVmKSkK
KwkJbGlzdF9hZGRfdGFpbCgmY2UtPmd1Y19pZF9saW5rLCAmZ3VjLT5ndWNfaWRfbGlzdCk7CisJ
c3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZ3VjLT5jb250ZXh0c19sb2NrLCBmbGFncyk7Cit9CisK
K3N0YXRpYyBpbnQgX19ndWNfYWN0aW9uX3JlZ2lzdGVyX2NvbnRleHQoc3RydWN0IGludGVsX2d1
YyAqZ3VjLAorCQkJCQkgdTMyIGd1Y19pZCwKKwkJCQkJIHUzMiBvZmZzZXQsCisJCQkJCSBib29s
IGxvb3ApCit7CisJdTMyIGFjdGlvbltdID0geworCQlJTlRFTF9HVUNfQUNUSU9OX1JFR0lTVEVS
X0NPTlRFWFQsCisJCWd1Y19pZCwKKwkJb2Zmc2V0LAorCX07CisKKwlyZXR1cm4gZ3VjX3N1Ym1p
c3Npb25fYnVzeV9sb29wKGd1YywgYWN0aW9uLCBBUlJBWV9TSVpFKGFjdGlvbiksIDAsIGxvb3Ap
OworfQorCitzdGF0aWMgaW50IHJlZ2lzdGVyX2NvbnRleHQoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlLCBib29sIGxvb3ApCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2VfdG9fZ3VjKGNl
KTsKKwl1MzIgb2Zmc2V0ID0gaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KGd1YywgZ3VjLT5scmNfZGVz
Y19wb29sKSArCisJCWNlLT5ndWNfaWQgKiBzaXplb2Yoc3RydWN0IGd1Y19scmNfZGVzYyk7CisK
Kwl0cmFjZV9pbnRlbF9jb250ZXh0X3JlZ2lzdGVyKGNlKTsKKworCXJldHVybiBfX2d1Y19hY3Rp
b25fcmVnaXN0ZXJfY29udGV4dChndWMsIGNlLT5ndWNfaWQsIG9mZnNldCwgbG9vcCk7Cit9CisK
K3N0YXRpYyBpbnQgX19ndWNfYWN0aW9uX2RlcmVnaXN0ZXJfY29udGV4dChzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMsCisJCQkJCSAgIHUzMiBndWNfaWQsCisJCQkJCSAgIGJvb2wgbG9vcCkKK3sKKwl1
MzIgYWN0aW9uW10gPSB7CisJCUlOVEVMX0dVQ19BQ1RJT05fREVSRUdJU1RFUl9DT05URVhULAor
CQlndWNfaWQsCisJfTsKKworCXJldHVybiBndWNfc3VibWlzc2lvbl9idXN5X2xvb3AoZ3VjLCBh
Y3Rpb24sIEFSUkFZX1NJWkUoYWN0aW9uKSwKKwkJCQkJRzJIX0xFTl9EV19ERVJFR0lTVEVSX0NP
TlRFWFQsIGxvb3ApOworfQorCitzdGF0aWMgaW50IGRlcmVnaXN0ZXJfY29udGV4dChzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UsIHUzMiBndWNfaWQsIGJvb2wgbG9vcCkKK3sKKwlzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMgPSBjZV90b19ndWMoY2UpOworCisJdHJhY2VfaW50ZWxfY29udGV4dF9kZXJl
Z2lzdGVyKGNlKTsKKworCXJldHVybiBfX2d1Y19hY3Rpb25fZGVyZWdpc3Rlcl9jb250ZXh0KGd1
YywgZ3VjX2lkLCBsb29wKTsKK30KKworc3RhdGljIGludGVsX2VuZ2luZV9tYXNrX3QgYWRqdXN0
X2VuZ2luZV9tYXNrKHU4IGNsYXNzLCBpbnRlbF9lbmdpbmVfbWFza190IG1hc2spCit7CisJc3dp
dGNoIChjbGFzcykgeworCWNhc2UgUkVOREVSX0NMQVNTOgorCQlyZXR1cm4gbWFzayA+PiBSQ1Mw
OworCWNhc2UgVklERU9fRU5IQU5DRU1FTlRfQ0xBU1M6CisJCXJldHVybiBtYXNrID4+IFZFQ1Mw
OworCWNhc2UgVklERU9fREVDT0RFX0NMQVNTOgorCQlyZXR1cm4gbWFzayA+PiBWQ1MwOworCWNh
c2UgQ09QWV9FTkdJTkVfQ0xBU1M6CisJCXJldHVybiBtYXNrID4+IEJDUzA7CisJZGVmYXVsdDoK
KwkJR0VNX0JVR19PTigiSW52YWxpZCBDbGFzcyIpOworCQlyZXR1cm4gMDsKIAl9CiB9CiAKK3N0
YXRpYyB2b2lkIGd1Y19jb250ZXh0X3BvbGljeV9pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSwKKwkJCQkgICAgc3RydWN0IGd1Y19scmNfZGVzYyAqZGVzYykKK3sKKwlkZXNjLT5w
b2xpY3lfZmxhZ3MgPSAwOworCisJaWYgKGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9XQU5U
X0ZPUkNFRF9QUkVFTVBUSU9OKQorCQlkZXNjLT5wb2xpY3lfZmxhZ3MgfD0gQ09OVEVYVF9QT0xJ
Q1lfRkxBR19QUkVFTVBUX1RPX0lETEU7CisKKwkvKiBOQjogRm9yIGJvdGggb2YgdGhlc2UsIHpl
cm8gbWVhbnMgZGlzYWJsZWQuICovCisJZGVzYy0+ZXhlY3V0aW9uX3F1YW50dW0gPSBlbmdpbmUt
PnByb3BzLnRpbWVzbGljZV9kdXJhdGlvbl9tcyAqIDEwMDA7CisJZGVzYy0+cHJlZW1wdGlvbl90
aW1lb3V0ID0gZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMgKiAxMDAwOworfQorCitz
dGF0aWMgaW50IGd1Y19scmNfZGVzY19waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBib29s
IGxvb3ApCit7CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJ1bnRpbWVfcG0gPQorCQkmY2Ut
PmVuZ2luZS0+Z3QtPmk5MTUtPnJ1bnRpbWVfcG07CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lID0gY2UtPmVuZ2luZTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5n
dC0+dWMuZ3VjOworCXUzMiBkZXNjX2lkeCA9IGNlLT5ndWNfaWQ7CisJc3RydWN0IGd1Y19scmNf
ZGVzYyAqZGVzYzsKKwlib29sIGNvbnRleHRfcmVnaXN0ZXJlZDsKKwlpbnRlbF93YWtlcmVmX3Qg
d2FrZXJlZjsKKwlpbnQgcmV0ID0gMDsKKworCUdFTV9CVUdfT04oIWVuZ2luZS0+bWFzayk7CisK
KwkvKgorCSAqIEVuc3VyZSBMUkMgKyBDVCB2bWFzIGFyZSBpcyBzYW1lIHJlZ2lvbiBhcyB3cml0
ZSBiYXJyaWVyIGlzIGRvbmUKKwkgKiBiYXNlZCBvbiBDVCB2bWEgcmVnaW9uLgorCSAqLworCUdF
TV9CVUdfT04oaTkxNV9nZW1fb2JqZWN0X2lzX2xtZW0oZ3VjLT5jdC52bWEtPm9iaikgIT0KKwkJ
ICAgaTkxNV9nZW1fb2JqZWN0X2lzX2xtZW0oY2UtPnJpbmctPnZtYS0+b2JqKSk7CisKKwljb250
ZXh0X3JlZ2lzdGVyZWQgPSBscmNfZGVzY19yZWdpc3RlcmVkKGd1YywgZGVzY19pZHgpOworCisJ
cmVzZXRfbHJjX2Rlc2MoZ3VjLCBkZXNjX2lkeCk7CisJc2V0X2xyY19kZXNjX3JlZ2lzdGVyZWQo
Z3VjLCBkZXNjX2lkeCwgY2UpOworCisJZGVzYyA9IF9fZ2V0X2xyY19kZXNjKGd1YywgZGVzY19p
ZHgpOworCWRlc2MtPmVuZ2luZV9jbGFzcyA9IGVuZ2luZV9jbGFzc190b19ndWNfY2xhc3MoZW5n
aW5lLT5jbGFzcyk7CisJZGVzYy0+ZW5naW5lX3N1Ym1pdF9tYXNrID0gYWRqdXN0X2VuZ2luZV9t
YXNrKGVuZ2luZS0+Y2xhc3MsCisJCQkJCQkgICAgICBlbmdpbmUtPm1hc2spOworCWRlc2MtPmh3
X2NvbnRleHRfZGVzYyA9IGNlLT5scmMubHJjYTsKKwlkZXNjLT5wcmlvcml0eSA9IEdVQ19DTElF
TlRfUFJJT1JJVFlfS01EX05PUk1BTDsKKwlkZXNjLT5jb250ZXh0X2ZsYWdzID0gQ09OVEVYVF9S
RUdJU1RSQVRJT05fRkxBR19LTUQ7CisJZ3VjX2NvbnRleHRfcG9saWN5X2luaXQoZW5naW5lLCBk
ZXNjKTsKKwlpbml0X3NjaGVkX3N0YXRlKGNlKTsKKworCS8qCisJICogVGhlIGNvbnRleHRfbG9v
a3VwIHhhcnJheSBpcyB1c2VkIHRvIGRldGVybWluZSBpZiB0aGUgaGFyZHdhcmUKKwkgKiBjb250
ZXh0IGlzIGN1cnJlbnRseSByZWdpc3RlcmVkLiBUaGVyZSBhcmUgdHdvIGNhc2VzIGluIHdoaWNo
IGl0CisJICogY291bGQgYmUgcmVnaXNnZXJlZCBlaXRoZXIgdGhlIGd1Y19pZCBoYXMgYmVlbiBz
dG9sZSBmcm9tIGZyb20KKwkgKiBhbm90aGVyIGNvbnRleHQgb3IgdGhlIGxyYyBkZXNjcmlwdG9y
IGFkZHJlc3Mgb2YgdGhpcyBjb250ZXh0IGhhcworCSAqIGNoYW5nZWQuIEluIGVpdGhlciBjYXNl
IHRoZSBjb250ZXh0IG5lZWRzIHRvIGJlIGRlcmVnaXN0ZXJlZCB3aXRoIHRoZQorCSAqIEd1QyBi
ZWZvcmUgcmVnaXN0ZXJpbmcgdGhpcyBjb250ZXh0LgorCSAqLworCWlmIChjb250ZXh0X3JlZ2lz
dGVyZWQpIHsKKwkJdHJhY2VfaW50ZWxfY29udGV4dF9zdGVhbF9ndWNfaWQoY2UpOworCQlpZiAo
IWxvb3ApIHsKKwkJCXNldF9jb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9fcmVnaXN0ZXIo
Y2UpOworCQkJaW50ZWxfY29udGV4dF9nZXQoY2UpOworCQl9IGVsc2UgeworCQkJYm9vbCBkaXNh
YmxlZDsKKwkJCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwkJCS8qIFNlYWwgcmFjZSB3aXRoIFJl
c2V0ICovCisJCQlzcGluX2xvY2tfaXJxc2F2ZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7
CisJCQlkaXNhYmxlZCA9IHN1Ym1pc3Npb25fZGlzYWJsZWQoZ3VjKTsKKwkJCWlmIChsaWtlbHko
IWRpc2FibGVkKSkgeworCQkJCXNldF9jb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9fcmVn
aXN0ZXIoY2UpOworCQkJCWludGVsX2NvbnRleHRfZ2V0KGNlKTsKKwkJCX0KKwkJCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCQkJaWYgKHVubGlr
ZWx5KGRpc2FibGVkKSkgeworCQkJCXJlc2V0X2xyY19kZXNjKGd1YywgZGVzY19pZHgpOworCQkJ
CXJldHVybiAwOwkvKiBXaWxsIGdldCByZWdpc3RlcmVkIGxhdGVyICovCisJCQl9CisJCX0KKwor
CQkvKgorCQkgKiBJZiBzdGVhbGluZyB0aGUgZ3VjX2lkLCB0aGlzIGNlIGhhcyB0aGUgc2FtZSBn
dWNfaWQgYXMgdGhlCisJCSAqIGNvbnRleHQgd2hvcyBndWNfaWQgd2FzIHN0b2xlLgorCQkgKi8K
KwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpCisJCQlyZXQgPSBk
ZXJlZ2lzdGVyX2NvbnRleHQoY2UsIGNlLT5ndWNfaWQsIGxvb3ApOworCQlpZiAodW5saWtlbHko
cmV0ID09IC1FQlVTWSkpIHsKKwkJCWNscl9jb250ZXh0X3dhaXRfZm9yX2RlcmVnaXN0ZXJfdG9f
cmVnaXN0ZXIoY2UpOworCQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQl9IGVsc2UgaWYgKHVu
bGlrZWx5KHJldCA9PSAtRU5PREVWKSkKKwkJCXJldCA9IDA7CS8qIFdpbGwgZ2V0IHJlZ2lzdGVy
ZWQgbGF0ZXIgKi8KKwl9IGVsc2UgeworCQl3aXRoX2ludGVsX3J1bnRpbWVfcG0ocnVudGltZV9w
bSwgd2FrZXJlZikKKwkJCXJldCA9IHJlZ2lzdGVyX2NvbnRleHQoY2UsIGxvb3ApOworCQlpZiAo
dW5saWtlbHkocmV0ID09IC1FQlVTWSkpCisJCQlyZXNldF9scmNfZGVzYyhndWMsIGRlc2NfaWR4
KTsKKwkJZWxzZSBpZiAodW5saWtlbHkocmV0ID09IC1FTk9ERVYpKQorCQkJcmV0ID0gMDsJLyog
V2lsbCBnZXQgcmVnaXN0ZXJlZCBsYXRlciAqLworCX0KKworCXJldHVybiByZXQ7Cit9CisKK3N0
YXRpYyBpbnQgX19ndWNfY29udGV4dF9wcmVfcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwK
KwkJCQkgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSBzdHJ1Y3QgaTkxNV9n
ZW1fd3dfY3R4ICp3dywKKwkJCQkgdm9pZCAqKnZhZGRyKQoreworCXJldHVybiBscmNfcHJlX3Bp
bihjZSwgZW5naW5lLCB3dywgdmFkZHIpOworfQorCitzdGF0aWMgaW50IF9fZ3VjX2NvbnRleHRf
cGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCSAgICAgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lLAorCQkJICAgICB2b2lkICp2YWRkcikKK3sKKwlpZiAoaTkxNV9nZ3R0X29m
ZnNldChjZS0+c3RhdGUpICE9CisJICAgIChjZS0+bHJjLmxyY2EgJiBDVFhfR1RUX0FERFJFU1Nf
TUFTSykpCisJCXNldF9iaXQoQ09OVEVYVF9MUkNBX0RJUlRZLCAmY2UtPmZsYWdzKTsKKworCXJl
dHVybiBscmNfcGluKGNlLCBlbmdpbmUsIHZhZGRyKTsKK30KKworc3RhdGljIGludCBndWNfY29u
dGV4dF9wcmVfcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCSAgICAgICBzdHJ1Y3Qg
aTkxNV9nZW1fd3dfY3R4ICp3dywKKwkJCSAgICAgICB2b2lkICoqdmFkZHIpCit7CisJcmV0dXJu
IF9fZ3VjX2NvbnRleHRfcHJlX3BpbihjZSwgY2UtPmVuZ2luZSwgd3csIHZhZGRyKTsKK30KKwor
c3RhdGljIGludCBndWNfY29udGV4dF9waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB2b2lk
ICp2YWRkcikKK3sKKwlyZXR1cm4gX19ndWNfY29udGV4dF9waW4oY2UsIGNlLT5lbmdpbmUsIHZh
ZGRyKTsKK30KKworc3RhdGljIHZvaWQgZ3VjX2NvbnRleHRfdW5waW4oc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGNlX3RvX2d1YyhjZSk7CisK
Kwl1bnBpbl9ndWNfaWQoZ3VjLCBjZSk7CisJbHJjX3VucGluKGNlKTsKK30KKworc3RhdGljIHZv
aWQgZ3VjX2NvbnRleHRfcG9zdF91bnBpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJ
bHJjX3Bvc3RfdW5waW4oY2UpOworfQorCitzdGF0aWMgdm9pZCBfX2d1Y19jb250ZXh0X3NjaGVk
X2VuYWJsZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAgICAgIHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSkKK3sKKwl1MzIgYWN0aW9uW10gPSB7CisJCUlOVEVMX0dVQ19BQ1RJT05fU0NI
RURfQ09OVEVYVF9NT0RFX1NFVCwKKwkJY2UtPmd1Y19pZCwKKwkJR1VDX0NPTlRFWFRfRU5BQkxF
CisJfTsKKworCXRyYWNlX2ludGVsX2NvbnRleHRfc2NoZWRfZW5hYmxlKGNlKTsKKworCWd1Y19z
dWJtaXNzaW9uX2J1c3lfbG9vcChndWMsIGFjdGlvbiwgQVJSQVlfU0laRShhY3Rpb24pLAorCQkJ
CSBHMkhfTEVOX0RXX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQsIHRydWUpOworfQorCitzdGF0aWMg
dm9pZCBfX2d1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjLAor
CQkJCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJCXUxNiBndWNfaWQpCit7CisJdTMy
IGFjdGlvbltdID0geworCQlJTlRFTF9HVUNfQUNUSU9OX1NDSEVEX0NPTlRFWFRfTU9ERV9TRVQs
CisJCWd1Y19pZCwJLyogY2UtPmd1Y19pZCBub3Qgc3RhYmxlICovCisJCUdVQ19DT05URVhUX0RJ
U0FCTEUKKwl9OworCisJR0VNX0JVR19PTihndWNfaWQgPT0gR1VDX0lOVkFMSURfTFJDX0lEKTsK
KworCXRyYWNlX2ludGVsX2NvbnRleHRfc2NoZWRfZGlzYWJsZShjZSk7CisKKwlndWNfc3VibWlz
c2lvbl9idXN5X2xvb3AoZ3VjLCBhY3Rpb24sIEFSUkFZX1NJWkUoYWN0aW9uKSwKKwkJCQkgRzJI
X0xFTl9EV19TQ0hFRF9DT05URVhUX01PREVfU0VULCB0cnVlKTsKK30KKworc3RhdGljIHZvaWQg
Z3VjX2Jsb2NrZWRfZmVuY2VfY29tcGxldGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorewor
CWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmNlLT5ndWNfc3RhdGUubG9jayk7CisKKwlpZiAoIWk5MTVf
c3dfZmVuY2VfZG9uZSgmY2UtPmd1Y19ibG9ja2VkKSkKKwkJaTkxNV9zd19mZW5jZV9jb21wbGV0
ZSgmY2UtPmd1Y19ibG9ja2VkKTsKK30KKworc3RhdGljIHZvaWQgZ3VjX2Jsb2NrZWRfZmVuY2Vf
cmVpbml0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlsb2NrZGVwX2Fzc2VydF9oZWxk
KCZjZS0+Z3VjX3N0YXRlLmxvY2spOworCUdFTV9CVUdfT04oIWk5MTVfc3dfZmVuY2VfZG9uZSgm
Y2UtPmd1Y19ibG9ja2VkKSk7CisJaTkxNV9zd19mZW5jZV9maW5pKCZjZS0+Z3VjX2Jsb2NrZWQp
OworCWk5MTVfc3dfZmVuY2VfcmVpbml0KCZjZS0+Z3VjX2Jsb2NrZWQpOworCWk5MTVfc3dfZmVu
Y2VfYXdhaXQoJmNlLT5ndWNfYmxvY2tlZCk7CisJaTkxNV9zd19mZW5jZV9jb21taXQoJmNlLT5n
dWNfYmxvY2tlZCk7Cit9CisKK3N0YXRpYyB1MTYgcHJlcF9jb250ZXh0X3BlbmRpbmdfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY2Ut
Pmd1Y19zdGF0ZS5sb2NrKTsKKworCXNldF9jb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSk7CisJ
Y2xyX2NvbnRleHRfZW5hYmxlZChjZSk7CisJZ3VjX2Jsb2NrZWRfZmVuY2VfcmVpbml0KGNlKTsK
KwlpbnRlbF9jb250ZXh0X2dldChjZSk7CisKKwlyZXR1cm4gY2UtPmd1Y19pZDsKK30KKworc3Rh
dGljIHN0cnVjdCBpOTE1X3N3X2ZlbmNlICpndWNfY29udGV4dF9ibG9jayhzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2VfdG9fZ3VjKGNlKTsK
KwlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSA9IGNlLT5lbmdpbmUtPnNj
aGVkX2VuZ2luZTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCXN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpydW50aW1lX3BtID0gJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1lX3BtOworCWlu
dGVsX3dha2VyZWZfdCB3YWtlcmVmOworCXUxNiBndWNfaWQ7CisJYm9vbCBlbmFibGVkOworCisJ
c3Bpbl9sb2NrX2lycXNhdmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCWluY3JfY29u
dGV4dF9ibG9ja2VkKGNlKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hlZF9lbmdpbmUt
PmxvY2ssIGZsYWdzKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRlLmxvY2ss
IGZsYWdzKTsKKwllbmFibGVkID0gY29udGV4dF9lbmFibGVkKGNlKTsKKwlpZiAodW5saWtlbHko
IWVuYWJsZWQgfHwgc3VibWlzc2lvbl9kaXNhYmxlZChndWMpKSkgeworCQlpZiAoZW5hYmxlZCkK
KwkJCWNscl9jb250ZXh0X2VuYWJsZWQoY2UpOworCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZj
ZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKwkJcmV0dXJuICZjZS0+Z3VjX2Jsb2NrZWQ7CisJ
fQorCisJLyoKKwkgKiBXZSBhZGQgKzIgaGVyZSBhcyB0aGUgc2NoZWR1bGUgZGlzYWJsZSBjb21w
bGV0ZSBDVEIgaGFuZGxlciBjYWxscworCSAqIGludGVsX2NvbnRleHRfc2NoZWRfZGlzYWJsZV91
bnBpbiAoLTIgdG8gcGluX2NvdW50KS4KKwkgKi8KKwlhdG9taWNfYWRkKDIsICZjZS0+cGluX2Nv
dW50KTsKKworCWd1Y19pZCA9IHByZXBfY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2UpOworCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCisJd2l0
aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpCisJCV9fZ3VjX2NvbnRleHRf
c2NoZWRfZGlzYWJsZShndWMsIGNlLCBndWNfaWQpOworCisJcmV0dXJuICZjZS0+Z3VjX2Jsb2Nr
ZWQ7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19jb250ZXh0X3VuYmxvY2soc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGNlX3RvX2d1YyhjZSk7CisJ
c3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUgPSBjZS0+ZW5naW5lLT5zY2hl
ZF9lbmdpbmU7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlzdHJ1Y3QgaW50ZWxfcnVudGltZV9w
bSAqcnVudGltZV9wbSA9ICZjZS0+ZW5naW5lLT5ndC0+aTkxNS0+cnVudGltZV9wbTsKKwlpbnRl
bF93YWtlcmVmX3Qgd2FrZXJlZjsKKworCUdFTV9CVUdfT04oY29udGV4dF9lbmFibGVkKGNlKSk7
CisKKwlpZiAodW5saWtlbHkoY29udGV4dF9ibG9ja2VkKGNlKSA+IDEpKSB7CisJCXNwaW5fbG9j
a19pcnFzYXZlKCZzY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwkJaWYgKGxpa2VseShjb250
ZXh0X2Jsb2NrZWQoY2UpID4gMSkpCisJCQlnb3RvIGRlY3JlbWVudDsKKwkJc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmc2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJfQorCisJc3Bpbl9sb2Nr
X2lycXNhdmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCWlmICh1bmxpa2VseShzdWJt
aXNzaW9uX2Rpc2FibGVkKGd1YykgfHwKKwkJICAgICAhaW50ZWxfY29udGV4dF9pc19waW5uZWQo
Y2UpIHx8CisJCSAgICAgY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2UpIHx8CisJCSAgICAgY29u
dGV4dF9ibG9ja2VkKGNlKSA+IDEpKSB7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5n
dWNfc3RhdGUubG9jaywgZmxhZ3MpOworCQlnb3RvIG91dDsKKwl9CisKKwlzZXRfY29udGV4dF9w
ZW5kaW5nX2VuYWJsZShjZSk7CisJc2V0X2NvbnRleHRfZW5hYmxlZChjZSk7CisJaW50ZWxfY29u
dGV4dF9nZXQoY2UpOworCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9j
aywgZmxhZ3MpOworCisJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYp
CisJCV9fZ3VjX2NvbnRleHRfc2NoZWRfZW5hYmxlKGd1YywgY2UpOworCitvdXQ6CisJc3Bpbl9s
b2NrX2lycXNhdmUoJnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworZGVjcmVtZW50OgorCWRl
Y3JfY29udGV4dF9ibG9ja2VkKGNlKTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hlZF9l
bmdpbmUtPmxvY2ssIGZsYWdzKTsKK30KKworc3RhdGljIHZvaWQgZ3VjX2NvbnRleHRfY2FuY2Vs
X3JlcXVlc3Qoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkJCSAgICAgICBzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpycSkKK3sKKwlpZiAoaTkxNV9zd19mZW5jZV9zaWduYWxlZCgmcnEtPnN1Ym1p
dCkpIHsKKwkJc3RydWN0IGk5MTVfc3dfZmVuY2UgKmZlbmNlID0gZ3VjX2NvbnRleHRfYmxvY2so
Y2UpOworCisJCWk5MTVfc3dfZmVuY2Vfd2FpdChmZW5jZSk7CisJCWlmICghaTkxNV9yZXF1ZXN0
X2NvbXBsZXRlZChycSkpIHsKKwkJCV9faTkxNV9yZXF1ZXN0X3NraXAocnEpOworCQkJZ3VjX3Jl
c2V0X3N0YXRlKGNlLCBpbnRlbF9yaW5nX3dyYXAoY2UtPnJpbmcsIHJxLT5oZWFkKSwKKwkJCQkJ
dHJ1ZSk7CisJCX0KKwkJZ3VjX2NvbnRleHRfdW5ibG9jayhjZSk7CisJfQorfQorCitzdGF0aWMg
dm9pZCBfX2d1Y19jb250ZXh0X3NldF9wcmVlbXB0aW9uX3RpbWVvdXQoc3RydWN0IGludGVsX2d1
YyAqZ3VjLAorCQkJCQkJIHUxNiBndWNfaWQsCisJCQkJCQkgdTMyIHByZWVtcHRpb25fdGltZW91
dCkKK3sKKwl1MzIgYWN0aW9uIFtdID0geworCQlJTlRFTF9HVUNfQUNUSU9OX1NFVF9DT05URVhU
X1BSRUVNUFRJT05fVElNRU9VVCwKKwkJZ3VjX2lkLAorCQlwcmVlbXB0aW9uX3RpbWVvdXQKKwl9
OworCisJaW50ZWxfZ3VjX3NlbmRfYnVzeV9sb29wKGd1YywgYWN0aW9uLCBBUlJBWV9TSVpFKGFj
dGlvbiksIDAsIHRydWUpOworfQorCitzdGF0aWMgdm9pZCBndWNfY29udGV4dF9iYW4oc3RydWN0
IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKKwlzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMgPSBjZV90b19ndWMoY2UpOworCXN0cnVjdCBpbnRlbF9ydW50aW1lX3Bt
ICpydW50aW1lX3BtID0KKwkJJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1lX3BtOworCWlu
dGVsX3dha2VyZWZfdCB3YWtlcmVmOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlndWNfZmx1
c2hfc3VibWlzc2lvbnMoZ3VjKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRl
LmxvY2ssIGZsYWdzKTsKKwlzZXRfY29udGV4dF9iYW5uZWQoY2UpOworCisJaWYgKHN1Ym1pc3Np
b25fZGlzYWJsZWQoZ3VjKSB8fCAoIWNvbnRleHRfZW5hYmxlZChjZSkgJiYKKwkgICAgIWNvbnRl
eHRfcGVuZGluZ19kaXNhYmxlKGNlKSkpIHsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2Ut
Pmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisKKwkJZ3VjX2NhbmNlbF9jb250ZXh0X3JlcXVlc3Rz
KGNlKTsKKwkJaW50ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNydW1icyhjZS0+ZW5naW5lKTsKKwl9
IGVsc2UgaWYgKCFjb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSkpIHsKKwkJdTE2IGd1Y19pZDsK
KworCQkvKgorCQkgKiBXZSBhZGQgKzIgaGVyZSBhcyB0aGUgc2NoZWR1bGUgZGlzYWJsZSBjb21w
bGV0ZSBDVEIgaGFuZGxlcgorCQkgKiBjYWxscyBpbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2FibGVf
dW5waW4gKC0yIHRvIHBpbl9jb3VudCkuCisJCSAqLworCQlhdG9taWNfYWRkKDIsICZjZS0+cGlu
X2NvdW50KTsKKworCQlndWNfaWQgPSBwcmVwX2NvbnRleHRfcGVuZGluZ19kaXNhYmxlKGNlKTsK
KwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisK
KwkJLyoKKwkJICogSW4gYWRkaXRpb24gdG8gZGlzYWJsaW5nIHNjaGVkdWxpbmcsIHNldCB0aGUg
cHJlZW1wdGlvbgorCQkgKiB0aW1lb3V0IHRvIHRoZSBtaW5pbXVtIHZhbHVlICgxIHVzKSBzbyB0
aGUgYmFubmVkIGNvbnRleHQKKwkJICogZ2V0cyBraWNrZWQgb2ZmIHRoZSBIVyBBU0FQLgorCQkg
Ki8KKwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpIHsKKwkJCV9f
Z3VjX2NvbnRleHRfc2V0X3ByZWVtcHRpb25fdGltZW91dChndWMsIGd1Y19pZCwgMSk7CisJCQlf
X2d1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUoZ3VjLCBjZSwgZ3VjX2lkKTsKKwkJfQorCX0gZWxz
ZSB7CisJCWlmICghY29udGV4dF9ndWNfaWRfaW52YWxpZChjZSkpCisJCQl3aXRoX2ludGVsX3J1
bnRpbWVfcG0ocnVudGltZV9wbSwgd2FrZXJlZikKKwkJCQlfX2d1Y19jb250ZXh0X3NldF9wcmVl
bXB0aW9uX3RpbWVvdXQoZ3VjLAorCQkJCQkJCQkgICAgIGNlLT5ndWNfaWQsCisJCQkJCQkJCSAg
ICAgMSk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxh
Z3MpOworCX0KK30KKworc3RhdGljIHZvaWQgZ3VjX2NvbnRleHRfc2NoZWRfZGlzYWJsZShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gY2VfdG9f
Z3VjKGNlKTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCXN0cnVjdCBpbnRlbF9ydW50aW1lX3Bt
ICpydW50aW1lX3BtID0gJmNlLT5lbmdpbmUtPmd0LT5pOTE1LT5ydW50aW1lX3BtOworCWludGVs
X3dha2VyZWZfdCB3YWtlcmVmOworCXUxNiBndWNfaWQ7CisJYm9vbCBlbmFibGVkOworCisJaWYg
KHN1Ym1pc3Npb25fZGlzYWJsZWQoZ3VjKSB8fCBjb250ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSB8
fAorCSAgICAhbHJjX2Rlc2NfcmVnaXN0ZXJlZChndWMsIGNlLT5ndWNfaWQpKSB7CisJCWNscl9j
b250ZXh0X2VuYWJsZWQoY2UpOworCQlnb3RvIHVucGluOworCX0KKworCWlmICghY29udGV4dF9l
bmFibGVkKGNlKSkKKwkJZ290byB1bnBpbjsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3Vj
X3N0YXRlLmxvY2ssIGZsYWdzKTsKKworCS8qCisJICogV2UgaGF2ZSB0byBjaGVjayBpZiB0aGUg
Y29udGV4dCBpcyBkaXNhYmxlZCBieSBhbm90aGVyIHRocmVhZC4gV2UKKwkgKiBhbHNvIGhhdmUg
dG8gY2hlY2sgaWYgdGhlIGNvbnRleHQgaGFzIGJlZW4gcGlubmVkIGFnYWluIGFzIGFub3RoZXIK
KwkgKiBwaW4gb3BlcmF0aW9uIGlzIGFsbG93ZWQgdG8gcGFzcyB0aGlzIGZ1bmN0aW9uLiBDaGVj
a2luZyB0aGUgcGluCisJICogY291bnQgaGVyZSBzeW5jaHJvbml6ZXMgdGhpcyBmdW5jdGlvbiB3
aXRoIGd1Y19yZXF1ZXN0X2FsbG9jIGVuc3VyaW5nCisJICogYSByZXF1ZXN0IGRvZXNuJ3Qgc2xp
cCB0aHJvdWdoIHRoZSAnY29udGV4dF9wZW5kaW5nX2Rpc2FibGUnIGZlbmNlLgorCSAqLworCWVu
YWJsZWQgPSBjb250ZXh0X2VuYWJsZWQoY2UpOworCWlmICh1bmxpa2VseSghZW5hYmxlZCB8fCBz
dWJtaXNzaW9uX2Rpc2FibGVkKGd1YykpKSB7CisJCWlmIChlbmFibGVkKQorCQkJY2xyX2NvbnRl
eHRfZW5hYmxlZChjZSk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUu
bG9jaywgZmxhZ3MpOworCQlnb3RvIHVucGluOworCX0KKwlpZiAodW5saWtlbHkoYXRvbWljX2Fk
ZF91bmxlc3MoJmNlLT5waW5fY291bnQsIC0yLCAyKSkpIHsKKwkJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJCXJldHVybjsKKwl9CisJZ3VjX2lk
ID0gcHJlcF9jb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSk7CisKKwlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZjZS0+Z3VjX3N0YXRlLmxvY2ssIGZsYWdzKTsKKworCXdpdGhfaW50ZWxfcnVudGlt
ZV9wbShydW50aW1lX3BtLCB3YWtlcmVmKQorCQlfX2d1Y19jb250ZXh0X3NjaGVkX2Rpc2FibGUo
Z3VjLCBjZSwgZ3VjX2lkKTsKKworCXJldHVybjsKK3VucGluOgorCWludGVsX2NvbnRleHRfc2No
ZWRfZGlzYWJsZV91bnBpbihjZSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBndWNfbHJjX2Rl
c2NfdW5waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9ndWMg
Kmd1YyA9IGNlX3RvX2d1YyhjZSk7CisKKwlHRU1fQlVHX09OKCFscmNfZGVzY19yZWdpc3RlcmVk
KGd1YywgY2UtPmd1Y19pZCkpOworCUdFTV9CVUdfT04oY2UgIT0gX19nZXRfY29udGV4dChndWMs
IGNlLT5ndWNfaWQpKTsKKwlHRU1fQlVHX09OKGNvbnRleHRfZW5hYmxlZChjZSkpOworCisJZGVy
ZWdpc3Rlcl9jb250ZXh0KGNlLCBjZS0+Z3VjX2lkLCB0cnVlKTsKK30KKworc3RhdGljIHZvaWQg
X19ndWNfY29udGV4dF9kZXN0cm95KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlscmNf
ZmluaShjZSk7CisJaW50ZWxfY29udGV4dF9maW5pKGNlKTsKKworCWlmIChpbnRlbF9lbmdpbmVf
aXNfdmlydHVhbChjZS0+ZW5naW5lKSkgeworCQlzdHJ1Y3QgZ3VjX3ZpcnR1YWxfZW5naW5lICp2
ZSA9CisJCQljb250YWluZXJfb2YoY2UsIHR5cGVvZigqdmUpLCBjb250ZXh0KTsKKworCQlpZiAo
dmUtPmJhc2UuYnJlYWRjcnVtYnMpCisJCQlpbnRlbF9icmVhZGNydW1ic19wdXQodmUtPmJhc2Uu
YnJlYWRjcnVtYnMpOworCisJCWtmcmVlKHZlKTsKKwl9IGVsc2UgeworCQlpbnRlbF9jb250ZXh0
X2ZyZWUoY2UpOworCX0KK30KKworc3RhdGljIHZvaWQgZ3VjX2NvbnRleHRfZGVzdHJveShzdHJ1
Y3Qga3JlZiAqa3JlZikKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBjb250YWluZXJf
b2Yoa3JlZiwgdHlwZW9mKCpjZSksIHJlZik7CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJ1
bnRpbWVfcG0gPSAmY2UtPmVuZ2luZS0+Z3QtPmk5MTUtPnJ1bnRpbWVfcG07CisJc3RydWN0IGlu
dGVsX2d1YyAqZ3VjID0gJmNlLT5lbmdpbmUtPmd0LT51Yy5ndWM7CisJaW50ZWxfd2FrZXJlZl90
IHdha2VyZWY7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlib29sIGRpc2FibGVkOworCisJLyoK
KwkgKiBJZiB0aGUgZ3VjX2lkIGlzIGludmFsaWQgdGhpcyBjb250ZXh0IGhhcyBiZWVuIHN0b2xl
biBhbmQgd2UgY2FuIGZyZWUKKwkgKiBpdCBpbW1lZGlhdGVseS4gQWxzbyBjYW4gYmUgZnJlZWQg
aW1tZWRpYXRlbHkgaWYgdGhlIGNvbnRleHQgaXMgbm90CisJICogcmVnaXN0ZXJlZCB3aXRoIHRo
ZSBHdUMuCisJICovCisJaWYgKHN1Ym1pc3Npb25fZGlzYWJsZWQoZ3VjKSB8fAorCSAgICBjb250
ZXh0X2d1Y19pZF9pbnZhbGlkKGNlKSB8fAorCSAgICAhbHJjX2Rlc2NfcmVnaXN0ZXJlZChndWMs
IGNlLT5ndWNfaWQpKSB7CisJCXJlbGVhc2VfZ3VjX2lkKGd1YywgY2UpOworCQlfX2d1Y19jb250
ZXh0X2Rlc3Ryb3koY2UpOworCQlyZXR1cm47CisJfQorCisJLyoKKwkgKiBXZSBoYXZlIHRvIGFj
cXVpcmUgdGhlIGNvbnRleHQgc3BpbmxvY2sgYW5kIGNoZWNrIGd1Y19pZCBhZ2FpbiwgaWYgaXQK
KwkgKiBpcyB2YWxpZCBpdCBoYXNuJ3QgYmVlbiBzdG9sZW4gYW5kIG5lZWRzIHRvIGJlIGRlcmVn
aXN0ZXJlZC4gV2UKKwkgKiBkZWxldGUgdGhpcyBjb250ZXh0IGZyb20gdGhlIGxpc3Qgb2YgdW5w
aW5uZWQgZ3VjX2lkcyBhdmFpbGFibGUgdG8KKwkgKiBzdG9sZSB0byBzZWFsIGEgcmFjZSB3aXRo
IGd1Y19scmNfZGVzY19waW4oKS4gV2hlbiB0aGUgRzJIIENUQgorCSAqIHJldHVybnMgaW5kaWNh
dGluZyB0aGlzIGNvbnRleHQgaGFzIGJlZW4gZGVyZWdpc3RlcmVkIHRoZSBndWNfaWQgaXMKKwkg
KiByZXR1cm5lZCB0byB0aGUgcG9vbCBvZiBhdmFpbGFibGUgZ3VjX2lkcy4KKwkgKi8KKwlzcGlu
X2xvY2tfaXJxc2F2ZSgmZ3VjLT5jb250ZXh0c19sb2NrLCBmbGFncyk7CisJaWYgKGNvbnRleHRf
Z3VjX2lkX2ludmFsaWQoY2UpKSB7CisJCV9fcmVsZWFzZV9ndWNfaWQoZ3VjLCBjZSk7CisJCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCQlfX2d1
Y19jb250ZXh0X2Rlc3Ryb3koY2UpOworCQlyZXR1cm47CisJfQorCisJaWYgKCFsaXN0X2VtcHR5
KCZjZS0+Z3VjX2lkX2xpbmspKQorCQlsaXN0X2RlbF9pbml0KCZjZS0+Z3VjX2lkX2xpbmspOwor
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmd1Yy0+Y29udGV4dHNfbG9jaywgZmxhZ3MpOworCisJ
LyogU2VhbCByYWNlIHdpdGggUmVzZXQgKi8KKwlzcGluX2xvY2tfaXJxc2F2ZSgmY2UtPmd1Y19z
dGF0ZS5sb2NrLCBmbGFncyk7CisJZGlzYWJsZWQgPSBzdWJtaXNzaW9uX2Rpc2FibGVkKGd1Yyk7
CisJaWYgKGxpa2VseSghZGlzYWJsZWQpKQorCQlzZXRfY29udGV4dF9kZXN0cm95ZWQoY2UpOwor
CXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOworCWlm
ICh1bmxpa2VseShkaXNhYmxlZCkpIHsKKwkJcmVsZWFzZV9ndWNfaWQoZ3VjLCBjZSk7CisJCV9f
Z3VjX2NvbnRleHRfZGVzdHJveShjZSk7CisJCXJldHVybjsKKwl9CisKKwkvKgorCSAqIFdlIGRl
ZmVyIEd1QyBjb250ZXh0IGRlcmVnaXN0cmF0aW9uIHVudGlsIHRoZSBjb250ZXh0IGlzIGRlc3Ry
b3llZAorCSAqIGluIG9yZGVyIHRvIHNhdmUgb24gQ1RCcy4gV2l0aCB0aGlzIG9wdGltaXphdGlv
biBpZGVhbGx5IHdlIG9ubHkgbmVlZAorCSAqIDEgQ1RCIHRvIHJlZ2lzdGVyIHRoZSBjb250ZXh0
IGR1cmluZyB0aGUgZmlyc3QgcGluIGFuZCAxIENUQiB0bworCSAqIGRlcmVnaXN0ZXIgdGhlIGNv
bnRleHQgd2hlbiB0aGUgY29udGV4dCBpcyBkZXN0cm95ZWQuIFdpdGhvdXQgdGhpcworCSAqIG9w
dGltaXphdGlvbiwgYSBDVEIgd291bGQgYmUgbmVlZGVkIGV2ZXJ5IHBpbiAmIHVucGluLgorCSAq
CisJICogWFhYOiBOZWVkIHRvIGFjcWl1cmUgdGhlIHJ1bnRpbWUgd2FrZXJlZiBhcyB0aGlzIGNh
biBiZSB0cmlnZ2VyZWQKKwkgKiBmcm9tIGNvbnRleHRfZnJlZV93b3JrZXIgd2hlbiBub3QgcnVu
dGltZSB3YWtlcmVmIGlzIGhlbGQuCisJICogZ3VjX2xyY19kZXNjX3VucGluIHJlcXVpcmVzIHRo
ZSBydW50aW1lIGFzIGEgR3VDIHJlZ2lzdGVyIGlzIHdyaXR0ZW4KKwkgKiBpbiBIMkcgQ1RCIHRv
IGRlcmVnaXN0ZXIgdGhlIGNvbnRleHQuIEEgZnV0dXJlIHBhdGNoIG1heSBkZWZlciB0aGlzCisJ
ICogSDJHIENUQiBpZiB0aGUgcnVudGltZSB3YWtlcmVmIGlzIHplcm8uCisJICovCisJd2l0aF9p
bnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYpCisJCWd1Y19scmNfZGVzY191bnBp
bihjZSk7Cit9CisKIHN0YXRpYyBpbnQgZ3VjX2NvbnRleHRfYWxsb2Moc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQogewogCXJldHVybiBscmNfYWxsb2MoY2UsIGNlLT5lbmdpbmUpOwogfQogCi1z
dGF0aWMgaW50IGd1Y19jb250ZXh0X3ByZV9waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAot
CQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV93d19jdHggKnd3LAotCQkJICAgICAgIHZvaWQgKip2
YWRkcikKK3N0YXRpYyB2b2lkIGFkZF90b19jb250ZXh0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5jb250ZXh0OworCisJc3Bpbl9s
b2NrKCZjZS0+Z3VjX2FjdGl2ZS5sb2NrKTsKKwlsaXN0X21vdmVfdGFpbCgmcnEtPnNjaGVkLmxp
bmssICZjZS0+Z3VjX2FjdGl2ZS5yZXF1ZXN0cyk7CisJc3Bpbl91bmxvY2soJmNlLT5ndWNfYWN0
aXZlLmxvY2spOworfQorCitzdGF0aWMgdm9pZCByZW1vdmVfZnJvbV9jb250ZXh0KHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5jb250
ZXh0OworCisJc3Bpbl9sb2NrX2lycSgmY2UtPmd1Y19hY3RpdmUubG9jayk7CisKKwlsaXN0X2Rl
bF9pbml0KCZycS0+c2NoZWQubGluayk7CisJY2xlYXJfYml0KEk5MTVfRkVOQ0VfRkxBR19QUVVF
VUUsICZycS0+ZmVuY2UuZmxhZ3MpOworCisJLyogUHJldmVudCBmdXJ0aGVyIF9fYXdhaXRfZXhl
Y3V0aW9uKCkgcmVnaXN0ZXJpbmcgYSBjYiwgdGhlbiBmbHVzaCAqLworCXNldF9iaXQoSTkxNV9G
RU5DRV9GTEFHX0FDVElWRSwgJnJxLT5mZW5jZS5mbGFncyk7CisKKwlzcGluX3VubG9ja19pcnEo
JmNlLT5ndWNfYWN0aXZlLmxvY2spOworCisJYXRvbWljX2RlYygmY2UtPmd1Y19pZF9yZWYpOwor
CWk5MTVfcmVxdWVzdF9ub3RpZnlfZXhlY3V0ZV9jYl9pbW0ocnEpOworfQorCitzdGF0aWMgY29u
c3Qgc3RydWN0IGludGVsX2NvbnRleHRfb3BzIGd1Y19jb250ZXh0X29wcyA9IHsKKwkuYWxsb2Mg
PSBndWNfY29udGV4dF9hbGxvYywKKworCS5wcmVfcGluID0gZ3VjX2NvbnRleHRfcHJlX3BpbiwK
KwkucGluID0gZ3VjX2NvbnRleHRfcGluLAorCS51bnBpbiA9IGd1Y19jb250ZXh0X3VucGluLAor
CS5wb3N0X3VucGluID0gZ3VjX2NvbnRleHRfcG9zdF91bnBpbiwKKworCS5iYW4gPSBndWNfY29u
dGV4dF9iYW4sCisKKwkuY2FuY2VsX3JlcXVlc3QgPSBndWNfY29udGV4dF9jYW5jZWxfcmVxdWVz
dCwKKworCS5lbnRlciA9IGludGVsX2NvbnRleHRfZW50ZXJfZW5naW5lLAorCS5leGl0ID0gaW50
ZWxfY29udGV4dF9leGl0X2VuZ2luZSwKKworCS5zY2hlZF9kaXNhYmxlID0gZ3VjX2NvbnRleHRf
c2NoZWRfZGlzYWJsZSwKKworCS5yZXNldCA9IGxyY19yZXNldCwKKwkuZGVzdHJveSA9IGd1Y19j
b250ZXh0X2Rlc3Ryb3ksCisKKwkuY3JlYXRlX3ZpcnR1YWwgPSBndWNfY3JlYXRlX3ZpcnR1YWws
Cit9OworCitzdGF0aWMgdm9pZCBfX2d1Y19zaWduYWxfY29udGV4dF9mZW5jZShzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisKKwlsb2NrZGVw
X2Fzc2VydF9oZWxkKCZjZS0+Z3VjX3N0YXRlLmxvY2spOworCisJaWYgKCFsaXN0X2VtcHR5KCZj
ZS0+Z3VjX3N0YXRlLmZlbmNlcykpCisJCXRyYWNlX2ludGVsX2NvbnRleHRfZmVuY2VfcmVsZWFz
ZShjZSk7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAmY2UtPmd1Y19zdGF0ZS5mZW5jZXMs
IGd1Y19mZW5jZV9saW5rKQorCQlpOTE1X3N3X2ZlbmNlX2NvbXBsZXRlKCZycS0+c3VibWl0KTsK
KworCUlOSVRfTElTVF9IRUFEKCZjZS0+Z3VjX3N0YXRlLmZlbmNlcyk7Cit9CisKK3N0YXRpYyB2
b2lkIGd1Y19zaWduYWxfY29udGV4dF9mZW5jZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7
Ci0JcmV0dXJuIGxyY19wcmVfcGluKGNlLCBjZS0+ZW5naW5lLCB3dywgdmFkZHIpOworCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmY2UtPmd1Y19zdGF0ZS5sb2Nr
LCBmbGFncyk7CisJY2xyX2NvbnRleHRfd2FpdF9mb3JfZGVyZWdpc3Rlcl90b19yZWdpc3Rlcihj
ZSk7CisJX19ndWNfc2lnbmFsX2NvbnRleHRfZmVuY2UoY2UpOworCXNwaW5fdW5sb2NrX2lycXJl
c3RvcmUoJmNlLT5ndWNfc3RhdGUubG9jaywgZmxhZ3MpOwogfQogCi1zdGF0aWMgaW50IGd1Y19j
b250ZXh0X3BpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHZvaWQgKnZhZGRyKQorc3RhdGlj
IGJvb2wgY29udGV4dF9uZWVkc19yZWdpc3RlcihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJv
b2wgbmV3X2d1Y19pZCkKIHsKLQlyZXR1cm4gbHJjX3BpbihjZSwgY2UtPmVuZ2luZSwgdmFkZHIp
OworCXJldHVybiAobmV3X2d1Y19pZCB8fCB0ZXN0X2JpdChDT05URVhUX0xSQ0FfRElSVFksICZj
ZS0+ZmxhZ3MpIHx8CisJCSFscmNfZGVzY19yZWdpc3RlcmVkKGNlX3RvX2d1YyhjZSksIGNlLT5n
dWNfaWQpKSAmJgorCQkhc3VibWlzc2lvbl9kaXNhYmxlZChjZV90b19ndWMoY2UpKTsKIH0KIAot
c3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0X29wcyBndWNfY29udGV4dF9vcHMgPSB7
Ci0JLmFsbG9jID0gZ3VjX2NvbnRleHRfYWxsb2MsCi0KLQkucHJlX3BpbiA9IGd1Y19jb250ZXh0
X3ByZV9waW4sCi0JLnBpbiA9IGd1Y19jb250ZXh0X3BpbiwKLQkudW5waW4gPSBscmNfdW5waW4s
Ci0JLnBvc3RfdW5waW4gPSBscmNfcG9zdF91bnBpbiwKLQotCS5lbnRlciA9IGludGVsX2NvbnRl
eHRfZW50ZXJfZW5naW5lLAotCS5leGl0ID0gaW50ZWxfY29udGV4dF9leGl0X2VuZ2luZSwKLQot
CS5yZXNldCA9IGxyY19yZXNldCwKLQkuZGVzdHJveSA9IGxyY19kZXN0cm95LAotfTsKLQotc3Rh
dGljIGludCBndWNfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQor
c3RhdGljIGludCBndWNfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsK
KwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBycS0+Y29udGV4dDsKKwlzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMgPSBjZV90b19ndWMoY2UpOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAJaW50IHJl
dDsKIAotCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKHJlcXVlc3QtPmNvbnRl
eHQpKTsKKwlHRU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2lzX3Bpbm5lZChycS0+Y29udGV4dCkp
OwogCiAJLyoKIAkgKiBGbHVzaCBlbm91Z2ggc3BhY2UgdG8gcmVkdWNlIHRoZSBsaWtlbGlob29k
IG9mIHdhaXRpbmcgYWZ0ZXIKIAkgKiB3ZSBzdGFydCBidWlsZGluZyB0aGUgcmVxdWVzdCAtIGlu
IHdoaWNoIGNhc2Ugd2Ugd2lsbCBqdXN0CiAJICogaGF2ZSB0byByZXBlYXQgd29yay4KIAkgKi8K
LQlyZXF1ZXN0LT5yZXNlcnZlZF9zcGFjZSArPSBHVUNfUkVRVUVTVF9TSVpFOworCXJxLT5yZXNl
cnZlZF9zcGFjZSArPSBHVUNfUkVRVUVTVF9TSVpFOwogCiAJLyoKIAkgKiBOb3RlIHRoYXQgYWZ0
ZXIgdGhpcyBwb2ludCwgd2UgaGF2ZSBjb21taXR0ZWQgdG8gdXNpbmcKQEAgLTQ4Niw0MCArMTg2
MiwxOTkgQEAgc3RhdGljIGludCBndWNfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpyZXF1ZXN0KQogCSAqLwogCiAJLyogVW5jb25kaXRpb25hbGx5IGludmFsaWRhdGUgR1BVIGNh
Y2hlcyBhbmQgVExCcy4gKi8KLQlyZXQgPSByZXF1ZXN0LT5lbmdpbmUtPmVtaXRfZmx1c2gocmVx
dWVzdCwgRU1JVF9JTlZBTElEQVRFKTsKKwlyZXQgPSBycS0+ZW5naW5lLT5lbWl0X2ZsdXNoKHJx
LCBFTUlUX0lOVkFMSURBVEUpOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlyZXF1ZXN0
LT5yZXNlcnZlZF9zcGFjZSAtPSBHVUNfUkVRVUVTVF9TSVpFOworCXJxLT5yZXNlcnZlZF9zcGFj
ZSAtPSBHVUNfUkVRVUVTVF9TSVpFOworCisJLyoKKwkgKiBDYWxsIHBpbl9ndWNfaWQgaGVyZSBy
YXRoZXIgdGhhbiBpbiB0aGUgcGlubmluZyBzdGVwIGFzIHdpdGgKKwkgKiBkbWFfcmVzdiwgY29u
dGV4dHMgY2FuIGJlIHJlcGVhdGVkbHkgcGlubmVkIC8gdW5waW5uZWQgdHJhc2hpbmcgdGhlCisJ
ICogZ3VjX2lkcyBhbmQgY3JlYXRpbmcgaG9ycmlibGUgcmFjZSBjb25kaXRpb25zLiBUaGlzIGlz
IGVzcGVjaWFsbHkgYmFkCisJICogd2hlbiBndWNfaWRzIGFyZSBiZWluZyBzdG9sZW4gZHVlIHRv
IG92ZXIgc3Vic2NyaXB0aW9uLiBCeSB0aGUgdGltZQorCSAqIHRoaXMgZnVuY3Rpb24gaXMgcmVh
Y2hlZCwgaXQgaXMgZ3VhcmFudGVlZCB0aGF0IHRoZSBndWNfaWQgd2lsbCBiZQorCSAqIHBlcnNp
c3RlbnQgdW50aWwgdGhlIGdlbmVyYXRlZCByZXF1ZXN0IGlzIHJldGlyZWQuIFRodXMsIHNlYWxp
bmcgdGhlc2UKKwkgKiByYWNlIGNvbmRpdGlvbnMuIEl0IGlzIHN0aWxsIHNhZmUgdG8gZmFpbCBo
ZXJlIGlmIGd1Y19pZHMgYXJlCisJICogZXhoYXVzdGVkIGFuZCByZXR1cm4gLUVBR0FJTiB0byB0
aGUgdXNlciBpbmRpY2F0aW5nIHRoYXQgdGhleSBjYW4gdHJ5CisJICogYWdhaW4gaW4gdGhlIGZ1
dHVyZS4KKwkgKgorCSAqIFRoZXJlIGlzIG5vIG5lZWQgZm9yIGEgbG9jayBoZXJlIGFzIHRoZSB0
aW1lbGluZSBtdXRleCBlbnN1cmVzIGF0CisJICogbW9zdCBvbmUgY29udGV4dCBjYW4gYmUgZXhl
Y3V0aW5nIHRoaXMgY29kZSBwYXRoIGF0IG9uY2UuIFRoZQorCSAqIGd1Y19pZF9yZWYgaXMgaW5j
cmVtZW50ZWQgb25jZSBmb3IgZXZlcnkgcmVxdWVzdCBpbiBmbGlnaHQgYW5kCisJICogZGVjcmVt
ZW50ZWQgb24gZWFjaCByZXRpcmUuIFdoZW4gaXQgaXMgemVybywgYSBsb2NrIGFyb3VuZCB0aGUK
KwkgKiBpbmNyZW1lbnQgKGluIHBpbl9ndWNfaWQpIGlzIG5lZWRlZCB0byBzZWFsIGEgcmFjZSB3
aXRoIHVucGluX2d1Y19pZC4KKwkgKi8KKwlpZiAoYXRvbWljX2FkZF91bmxlc3MoJmNlLT5ndWNf
aWRfcmVmLCAxLCAwKSkKKwkJZ290byBvdXQ7CisKKwlyZXQgPSBwaW5fZ3VjX2lkKGd1YywgY2Up
OwkvKiByZXR1cm5zIDEgaWYgbmV3IGd1Y19pZCBhc3NpZ25lZCAqLworCWlmICh1bmxpa2VseShy
ZXQgPCAwKSkKKwkJcmV0dXJuIHJldDs7CisJaWYgKGNvbnRleHRfbmVlZHNfcmVnaXN0ZXIoY2Us
ICEhcmV0KSkgeworCQlyZXQgPSBndWNfbHJjX2Rlc2NfcGluKGNlLCB0cnVlKTsKKwkJaWYgKHVu
bGlrZWx5KHJldCkpIHsJLyogdW53aW5kICovCisJCQlpZiAocmV0ID09IC1FUElQRSkgeworCQkJ
CWRpc2FibGVfc3VibWlzc2lvbihndWMpOworCQkJCWdvdG8gb3V0OwkvKiBHUFUgd2lsbCBiZSBy
ZXNldCAqLworCQkJfQorCQkJYXRvbWljX2RlYygmY2UtPmd1Y19pZF9yZWYpOworCQkJdW5waW5f
Z3VjX2lkKGd1YywgY2UpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0KKworCWNsZWFyX2JpdChD
T05URVhUX0xSQ0FfRElSVFksICZjZS0+ZmxhZ3MpOworCitvdXQ6CisJLyoKKwkgKiBXZSBibG9j
ayBhbGwgcmVxdWVzdHMgb24gdGhpcyBjb250ZXh0IGlmIGEgRzJIIGlzIHBlbmRpbmcgZm9yIGEK
KwkgKiBzY2hlZHVsZSBkaXNhYmxlIG9yIGNvbnRleHQgZGVyZWdpc3RyYXRpb24gYXMgdGhlIEd1
QyB3aWxsIGZhaWwgYQorCSAqIHNjaGVkdWxlIGVuYWJsZSBvciBjb250ZXh0IHJlZ2lzdHJhdGlv
biBpZiBlaXRoZXIgRzJIIGlzIHBlbmRpbmcKKwkgKiByZXNwZWN0ZnVsbHkuIE9uY2UgYSBHMkgg
cmV0dXJucywgdGhlIGZlbmNlIGlzIHJlbGVhc2VkIHRoYXQgaXMKKwkgKiBibG9ja2luZyB0aGVz
ZSByZXF1ZXN0cyAoc2VlIGd1Y19zaWduYWxfY29udGV4dF9mZW5jZSkuCisJICoKKwkgKiBXZSBj
YW4gc2FmZWx5IGNoZWNrIHRoZSBiZWxvdyBmaWVsZHMgb3V0c2lkZSBvZiB0aGUgbG9jayBhcyBp
dCBpc24ndAorCSAqIHBvc3NpYmxlIGZvciB0aGVzZSBmaWVsZHMgdG8gdHJhbnNpdGlvbiBmcm9t
IGJlaW5nIGNsZWFyIHRvIHNldCBidXQKKwkgKiBjb252ZXJzZSBpcyBwb3NzaWJsZSwgaGVuY2Ug
dGhlIG5lZWQgZm9yIHRoZSBjaGVjayB3aXRoaW4gdGhlIGxvY2suCisJICovCisJaWYgKGxpa2Vs
eSghY29udGV4dF93YWl0X2Zvcl9kZXJlZ2lzdGVyX3RvX3JlZ2lzdGVyKGNlKSAmJgorCQkgICAh
Y29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2UpKSkKKwkJcmV0dXJuIDA7CisKKwlzcGluX2xvY2tf
aXJxc2F2ZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7CisJaWYgKGNvbnRleHRfd2FpdF9m
b3JfZGVyZWdpc3Rlcl90b19yZWdpc3RlcihjZSkgfHwKKwkgICAgY29udGV4dF9wZW5kaW5nX2Rp
c2FibGUoY2UpKSB7CisJCWk5MTVfc3dfZmVuY2VfYXdhaXQoJnJxLT5zdWJtaXQpOworCisJCWxp
c3RfYWRkX3RhaWwoJnJxLT5ndWNfZmVuY2VfbGluaywgJmNlLT5ndWNfc3RhdGUuZmVuY2VzKTsK
Kwl9CisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFncyk7
CisKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGlubGluZSB2b2lkIHF1ZXVlX3JlcXVlc3Qoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAotCQkJCSBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSwKLQkJCQkgaW50IHByaW8pCitzdGF0aWMgaW50IGd1Y192aXJ0dWFsX2NvbnRleHRfcHJlX3Bp
bihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCQkJICAgICAgIHN0cnVjdCBpOTE1X2dlbV93
d19jdHggKnd3LAorCQkJCSAgICAgICB2b2lkICoqdmFkZHIpCiB7Ci0JR0VNX0JVR19PTighbGlz
dF9lbXB0eSgmcnEtPnNjaGVkLmxpbmspKTsKLQlsaXN0X2FkZF90YWlsKCZycS0+c2NoZWQubGlu
aywKLQkJICAgICAgaTkxNV9zY2hlZF9sb29rdXBfcHJpb2xpc3QoZW5naW5lLT5zY2hlZF9lbmdp
bmUsIHByaW8pKTsKLQlzZXRfYml0KEk5MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZycS0+ZmVuY2Uu
ZmxhZ3MpOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGd1Y192aXJ0dWFsX2dl
dF9zaWJsaW5nKGNlLT5lbmdpbmUsIDApOworCisJcmV0dXJuIF9fZ3VjX2NvbnRleHRfcHJlX3Bp
bihjZSwgZW5naW5lLCB3dywgdmFkZHIpOwogfQogCi1zdGF0aWMgdm9pZCBndWNfc3VibWl0X3Jl
cXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgaW50IGd1Y192aXJ0dWFsX2Nv
bnRleHRfcGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgdm9pZCAqdmFkZHIpCiB7Ci0Jc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gcnEtPmVuZ2luZTsKLQl1bnNpZ25lZCBsb25n
IGZsYWdzOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGd1Y192aXJ0dWFsX2dl
dF9zaWJsaW5nKGNlLT5lbmdpbmUsIDApOwogCi0JLyogV2lsbCBiZSBjYWxsZWQgZnJvbSBpcnEt
Y29udGV4dCB3aGVuIHVzaW5nIGZvcmVpZ24gZmVuY2VzLiAqLwotCXNwaW5fbG9ja19pcnFzYXZl
KCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jaywgZmxhZ3MpOworCXJldHVybiBfX2d1Y19jb250
ZXh0X3BpbihjZSwgZW5naW5lLCB2YWRkcik7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y192aXJ0dWFs
X2NvbnRleHRfZW50ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWludGVsX2VuZ2lu
ZV9tYXNrX3QgdG1wLCBtYXNrID0gY2UtPmVuZ2luZS0+bWFzazsKKwlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmU7CisKKwlmb3JfZWFjaF9lbmdpbmVfbWFza2VkKGVuZ2luZSwgY2UtPmVu
Z2luZS0+Z3QsIG1hc2ssIHRtcCkKKwkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOworCisJ
aW50ZWxfdGltZWxpbmVfZW50ZXIoY2UtPnRpbWVsaW5lKTsKK30KKworc3RhdGljIHZvaWQgZ3Vj
X3ZpcnR1YWxfY29udGV4dF9leGl0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlpbnRl
bF9lbmdpbmVfbWFza190IHRtcCwgbWFzayA9IGNlLT5lbmdpbmUtPm1hc2s7CisJc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lOworCisJZm9yX2VhY2hfZW5naW5lX21hc2tlZChlbmdpbmUs
IGNlLT5lbmdpbmUtPmd0LCBtYXNrLCB0bXApCisJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5l
KTsKKworCWludGVsX3RpbWVsaW5lX2V4aXQoY2UtPnRpbWVsaW5lKTsKK30KKworc3RhdGljIGlu
dCBndWNfdmlydHVhbF9jb250ZXh0X2FsbG9jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sK
KwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBndWNfdmlydHVhbF9nZXRfc2libGlu
ZyhjZS0+ZW5naW5lLCAwKTsKKworCXJldHVybiBscmNfYWxsb2MoY2UsIGVuZ2luZSk7Cit9CisK
K3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dF9vcHMgdmlydHVhbF9ndWNfY29udGV4
dF9vcHMgPSB7CisJLmFsbG9jID0gZ3VjX3ZpcnR1YWxfY29udGV4dF9hbGxvYywKKworCS5wcmVf
cGluID0gZ3VjX3ZpcnR1YWxfY29udGV4dF9wcmVfcGluLAorCS5waW4gPSBndWNfdmlydHVhbF9j
b250ZXh0X3BpbiwKKwkudW5waW4gPSBndWNfY29udGV4dF91bnBpbiwKKwkucG9zdF91bnBpbiA9
IGd1Y19jb250ZXh0X3Bvc3RfdW5waW4sCisKKwkuYmFuID0gZ3VjX2NvbnRleHRfYmFuLAogCi0J
cXVldWVfcmVxdWVzdChlbmdpbmUsIHJxLCBycV9wcmlvKHJxKSk7CisJLmNhbmNlbF9yZXF1ZXN0
ID0gZ3VjX2NvbnRleHRfY2FuY2VsX3JlcXVlc3QsCiAKLQlHRU1fQlVHX09OKGk5MTVfc2NoZWRf
ZW5naW5lX2lzX2VtcHR5KGVuZ2luZS0+c2NoZWRfZW5naW5lKSk7Ci0JR0VNX0JVR19PTihsaXN0
X2VtcHR5KCZycS0+c2NoZWQubGluaykpOworCS5lbnRlciA9IGd1Y192aXJ0dWFsX2NvbnRleHRf
ZW50ZXIsCisJLmV4aXQgPSBndWNfdmlydHVhbF9jb250ZXh0X2V4aXQsCiAKLQl0YXNrbGV0X2hp
X3NjaGVkdWxlKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+dGFza2xldCk7CisJLnNjaGVkX2Rpc2Fi
bGUgPSBndWNfY29udGV4dF9zY2hlZF9kaXNhYmxlLAogCi0Jc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdzKTsKKwkuZGVzdHJveSA9IGd1Y19j
b250ZXh0X2Rlc3Ryb3ksCisKKwkuZ2V0X3NpYmxpbmcgPSBndWNfdmlydHVhbF9nZXRfc2libGlu
ZywKK307CisKK3N0YXRpYyBib29sCitndWNfaXJxX2VuYWJsZV9icmVhZGNydW1icyhzdHJ1Y3Qg
aW50ZWxfYnJlYWRjcnVtYnMgKmIpCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGlu
ZzsKKwlpbnRlbF9lbmdpbmVfbWFza190IHRtcCwgbWFzayA9IGItPmVuZ2luZV9tYXNrOworCWJv
b2wgcmVzdWx0ID0gZmFsc2U7CisKKwlmb3JfZWFjaF9lbmdpbmVfbWFza2VkKHNpYmxpbmcsIGIt
PmlycV9lbmdpbmUtPmd0LCBtYXNrLCB0bXApCisJCXJlc3VsdCB8PSBpbnRlbF9lbmdpbmVfaXJx
X2VuYWJsZShzaWJsaW5nKTsKKworCXJldHVybiByZXN1bHQ7Cit9CisKK3N0YXRpYyB2b2lkCitn
dWNfaXJxX2Rpc2FibGVfYnJlYWRjcnVtYnMoc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiKQor
eworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmc7CisJaW50ZWxfZW5naW5lX21hc2tf
dCB0bXAsIG1hc2sgPSBiLT5lbmdpbmVfbWFzazsKKworCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQo
c2libGluZywgYi0+aXJxX2VuZ2luZS0+Z3QsIG1hc2ssIHRtcCkKKwkJaW50ZWxfZW5naW5lX2ly
cV9kaXNhYmxlKHNpYmxpbmcpOworfQorCitzdGF0aWMgdm9pZCBndWNfaW5pdF9icmVhZGNydW1i
cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJaW50IGk7CisKKyAgICAgICAv
KgorICAgICAgICAqIEluIEd1QyBzdWJtaXNzaW9uIG1vZGUgd2UgZG8gbm90IGtub3cgd2hpY2gg
cGh5c2ljYWwgZW5naW5lIGEgcmVxdWVzdAorICAgICAgICAqIHdpbGwgYmUgc2NoZWR1bGVkIG9u
LCB0aGlzIGNyZWF0ZXMgYSBwcm9ibGVtIGJlY2F1c2UgdGhlIGJyZWFkY3J1bWIKKyAgICAgICAg
KiBpbnRlcnJ1cHQgaXMgcGVyIHBoeXNpY2FsIGVuZ2luZS4gVG8gd29yayBhcm91bmQgdGhpcyB3
ZSBhdHRhY2gKKyAgICAgICAgKiByZXF1ZXN0cyBhbmQgZGlyZWN0IGFsbCBicmVhZGNydW1iIGlu
dGVycnVwdHMgdG8gdGhlIGZpcnN0IGluc3RhbmNlCisgICAgICAgICogb2YgYW4gZW5naW5lIHBl
ciBjbGFzcy4gSW4gYWRkaXRpb24gYWxsIGJyZWFkY3J1bWIgaW50ZXJydXB0cyBhcmUKKwkqIGVu
YWJsZWQgLyBkaXNhYmxlZCBhY3Jvc3MgYW4gZW5naW5lIGNsYXNzIGluIHVuaXNvbi4KKyAgICAg
ICAgKi8KKwlmb3IgKGkgPSAwOyBpIDwgTUFYX0VOR0lORV9JTlNUQU5DRTsgKytpKSB7CisJCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmcgPQorCQkJZW5naW5lLT5ndC0+ZW5naW5lX2Ns
YXNzW2VuZ2luZS0+Y2xhc3NdW2ldOworCisJCWlmIChzaWJsaW5nKSB7CisJCQlpZiAoZW5naW5l
LT5icmVhZGNydW1icyAhPSBzaWJsaW5nLT5icmVhZGNydW1icykgeworCQkJCWludGVsX2JyZWFk
Y3J1bWJzX3B1dChlbmdpbmUtPmJyZWFkY3J1bWJzKTsKKwkJCQllbmdpbmUtPmJyZWFkY3J1bWJz
ID0KKwkJCQkJaW50ZWxfYnJlYWRjcnVtYnNfZ2V0KHNpYmxpbmctPmJyZWFkY3J1bWJzKTsKKwkJ
CX0KKwkJCWJyZWFrOworCQl9CisJfQorCisJaWYgKGVuZ2luZS0+YnJlYWRjcnVtYnMpIHsKKwkJ
ZW5naW5lLT5icmVhZGNydW1icy0+ZW5naW5lX21hc2sgfD0gZW5naW5lLT5tYXNrOworCQllbmdp
bmUtPmJyZWFkY3J1bWJzLT5pcnFfZW5hYmxlID0gZ3VjX2lycV9lbmFibGVfYnJlYWRjcnVtYnM7
CisJCWVuZ2luZS0+YnJlYWRjcnVtYnMtPmlycV9kaXNhYmxlID0gZ3VjX2lycV9kaXNhYmxlX2Jy
ZWFkY3J1bWJzOworCX0KIH0KIAogc3RhdGljIHZvaWQgc2FuaXRpemVfaHdzcChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCkBAIC01ODgsMjEgKzIxMjMsNzggQEAgc3RhdGljIGludCBn
dWNfcmVzdW1lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gMDsKIH0K
IAorc3RhdGljIGJvb2wgZ3VjX3NjaGVkX2VuZ2luZV9kaXNhYmxlZChzdHJ1Y3QgaTkxNV9zY2hl
ZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSkKK3sKKwlyZXR1cm4gIXNjaGVkX2VuZ2luZS0+dGFza2xl
dC5jYWxsYmFjazsKK30KKwogc3RhdGljIHZvaWQgZ3VjX3NldF9kZWZhdWx0X3N1Ym1pc3Npb24o
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCWVuZ2luZS0+c3VibWl0X3JlcXVl
c3QgPSBndWNfc3VibWl0X3JlcXVlc3Q7CiB9CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBndWNfa2Vy
bmVsX2NvbnRleHRfcGluKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkJICBzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCit7CisJaWYgKGNvbnRleHRfZ3VjX2lkX2ludmFsaWQoY2UpKQorCQlw
aW5fZ3VjX2lkKGd1YywgY2UpOworCWd1Y19scmNfZGVzY19waW4oY2UsIHRydWUpOworfQorCitz
dGF0aWMgaW5saW5lIHZvaWQgZ3VjX2luaXRfbHJjX21hcHBpbmcoc3RydWN0IGludGVsX2d1YyAq
Z3VjKQoreworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBndWNfdG9fZ3QoZ3VjKTsKKwlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisKKwkv
KiBtYWtlIHN1cmUgYWxsIGRlc2NyaXB0b3JzIGFyZSBjbGVhbi4uLiAqLworCXhhX2Rlc3Ryb3ko
Jmd1Yy0+Y29udGV4dF9sb29rdXApOworCisJLyoKKwkgKiBTb21lIGNvbnRleHRzIG1pZ2h0IGhh
dmUgYmVlbiBwaW5uZWQgYmVmb3JlIHdlIGVuYWJsZWQgR3VDCisJICogc3VibWlzc2lvbiwgc28g
d2UgbmVlZCB0byBhZGQgdGhlbSB0byB0aGUgR3VDIGJvb2tlZXBpbmcuCisJICogQWxzbywgYWZ0
ZXIgYSByZXNldCB0aGUgR3VDIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGluZm9ybWF0
aW9uCisJICogc2hhcmVkIHdpdGggR3VDIGlzIHByb3Blcmx5IHJlc2V0LiBUaGUga2VybmVsIGxy
Y3MgYXJlIG5vdCBhdHRhY2hlZAorCSAqIHRvIHRoZSBnZW1fY29udGV4dCwgc28gdGhleSBuZWVk
IHRvIGJlIGFkZGVkIHNlcGFyYXRlbHkuCisJICoKKwkgKiBOb3RlOiB3ZSBwdXJwb3NlbHkgZG8g
bm90IGNoZWNrIHRoZSBlcnJvciByZXR1cm4gb2YKKwkgKiBndWNfbHJjX2Rlc2NfcGluLCBiZWNh
dXNlIHRoYXQgZnVuY3Rpb24gY2FuIG9ubHkgZmFpbCBpbiB0d28gY2FzZXMuCisJICogT25lLCBp
ZiB0aGVyZSBhcmVuJ3QgZW5vdWdoIGZyZWUgSURzLCBidXQgd2UncmUgZ3VhcmFudGVlZCB0byBo
YXZlCisJICogZW5vdWdoIGhlcmUgKHdlJ3JlIGVpdGhlciBvbmx5IHBpbm5pbmcgYSBoYW5kZnVs
IG9mIGxyYyBvbiBmaXJzdCBib290CisJICogb3Igd2UncmUgcmUtcGlubmluZyBscmNzIHRoYXQg
d2VyZSBhbHJlYWR5IHBpbm5lZCBiZWZvcmUgdGhlIHJlc2V0KS4KKwkgKiBUd28sIGlmIHRoZSBH
dUMgaGFzIGRpZWQgYW5kIENUQnMgY2FuJ3QgbWFrZSBmb3J3YXJkIHByb2dyZXNzLgorCSAqIFBy
ZXN1bWFibHksIHRoZSBHdUMgc2hvdWxkIGJlIGFsaXZlIGFzIHRoaXMgZnVuY3Rpb24gaXMgY2Fs
bGVkIG9uCisJICogZHJpdmVyIGxvYWQgb3IgYWZ0ZXIgYSByZXNldC4gRXZlbiBpZiBpdCBpcyBk
ZWFkLCBhbm90aGVyIGZ1bGwgR1BVCisJICogcmVzZXQgd2lsbCBiZSB0cmlnZ2VyZWQgYW5kIHRo
aXMgZnVuY3Rpb24gd291bGQgYmUgY2FsbGVkIGFnYWluLgorCSAqLworCisJZm9yX2VhY2hfZW5n
aW5lKGVuZ2luZSwgZ3QsIGlkKQorCQlpZiAoZW5naW5lLT5rZXJuZWxfY29udGV4dCkKKwkJCWd1
Y19rZXJuZWxfY29udGV4dF9waW4oZ3VjLCBlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKK30KKwog
c3RhdGljIHZvaWQgZ3VjX3JlbGVhc2Uoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
ewogCWVuZ2luZS0+c2FuaXRpemUgPSBOVUxMOyAvKiBubyBsb25nZXIgaW4gY29udHJvbCwgbm90
aGluZyB0byBzYW5pdGl6ZSAqLwogCi0JdGFza2xldF9raWxsKCZlbmdpbmUtPnNjaGVkX2VuZ2lu
ZS0+dGFza2xldCk7Ci0KIAlpbnRlbF9lbmdpbmVfY2xlYW51cF9jb21tb24oZW5naW5lKTsKIAls
cmNfZmluaV93YV9jdHgoZW5naW5lKTsKIH0KIAorc3RhdGljIHZvaWQgZ3VjX2J1bXBfc2VyaWFs
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwllbmdpbmUtPnNlcmlhbCsrOwor
fQorCitzdGF0aWMgdm9pZCB2aXJ0dWFsX2d1Y19idW1wX3NlcmlhbChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZTsKKwlpbnRlbF9l
bmdpbmVfbWFza190IHRtcCwgbWFzayA9IGVuZ2luZS0+bWFzazsKKworCWZvcl9lYWNoX2VuZ2lu
ZV9tYXNrZWQoZSwgZW5naW5lLT5ndCwgbWFzaywgdG1wKQorCQllLT5zZXJpYWwrKzsKK30KKwog
c3RhdGljIHZvaWQgZ3VjX2RlZmF1bHRfdmZ1bmNzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKIHsKIAkvKiBEZWZhdWx0IHZmdW5jcyB3aGljaCBjYW4gYmUgb3ZlcnJpZGRlbiBieSBl
YWNoIGVuZ2luZS4gKi8KQEAgLTYxMSwxMyArMjIwMywxNiBAQCBzdGF0aWMgdm9pZCBndWNfZGVm
YXVsdF92ZnVuY3Moc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJZW5naW5lLT5j
b3BzID0gJmd1Y19jb250ZXh0X29wczsKIAllbmdpbmUtPnJlcXVlc3RfYWxsb2MgPSBndWNfcmVx
dWVzdF9hbGxvYzsKKwllbmdpbmUtPmJ1bXBfc2VyaWFsID0gZ3VjX2J1bXBfc2VyaWFsOworCWVu
Z2luZS0+YWRkX2FjdGl2ZV9yZXF1ZXN0ID0gYWRkX3RvX2NvbnRleHQ7CisJZW5naW5lLT5yZW1v
dmVfYWN0aXZlX3JlcXVlc3QgPSByZW1vdmVfZnJvbV9jb250ZXh0OwogCiAJZW5naW5lLT5zY2hl
ZF9lbmdpbmUtPnNjaGVkdWxlID0gaTkxNV9zY2hlZHVsZTsKIAotCWVuZ2luZS0+cmVzZXQucHJl
cGFyZSA9IGd1Y19yZXNldF9wcmVwYXJlOwotCWVuZ2luZS0+cmVzZXQucmV3aW5kID0gZ3VjX3Jl
c2V0X3Jld2luZDsKLQllbmdpbmUtPnJlc2V0LmNhbmNlbCA9IGd1Y19yZXNldF9jYW5jZWw7Ci0J
ZW5naW5lLT5yZXNldC5maW5pc2ggPSBndWNfcmVzZXRfZmluaXNoOworCWVuZ2luZS0+cmVzZXQu
cHJlcGFyZSA9IGd1Y19yZXNldF9ub3A7CisJZW5naW5lLT5yZXNldC5yZXdpbmQgPSBndWNfcmV3
aW5kX25vcDsKKwllbmdpbmUtPnJlc2V0LmNhbmNlbCA9IGd1Y19yZXNldF9ub3A7CisJZW5naW5l
LT5yZXNldC5maW5pc2ggPSBndWNfcmVzZXRfbm9wOwogCiAJZW5naW5lLT5lbWl0X2ZsdXNoID0g
Z2VuOF9lbWl0X2ZsdXNoX3hjczsKIAllbmdpbmUtPmVtaXRfaW5pdF9icmVhZGNydW1iID0gZ2Vu
OF9lbWl0X2luaXRfYnJlYWRjcnVtYjsKQEAgLTYyOSwxMyArMjIyNCwxMyBAQCBzdGF0aWMgdm9p
ZCBndWNfZGVmYXVsdF92ZnVuY3Moc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVu
Z2luZS0+c2V0X2RlZmF1bHRfc3VibWlzc2lvbiA9IGd1Y19zZXRfZGVmYXVsdF9zdWJtaXNzaW9u
OwogCiAJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfUFJFRU1QVElPTjsKKwllbmdp
bmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19USU1FU0xJQ0VTOwogCiAJLyoKIAkgKiBUT0RP
OiBHdUMgc3VwcG9ydHMgdGltZXNsaWNpbmcgYW5kIHNlbWFwaG9yZXMgYXMgd2VsbCwgYnV0IHRo
ZXkncmUKIAkgKiBoYW5kbGVkIGJ5IHRoZSBmaXJtd2FyZSBzbyBzb21lIG1pbm9yIHR3ZWFrcyBh
cmUgcmVxdWlyZWQgYmVmb3JlCiAJICogZW5hYmxpbmcuCiAJICoKLQkgKiBlbmdpbmUtPmZsYWdz
IHw9IEk5MTVfRU5HSU5FX0hBU19USU1FU0xJQ0VTOwogCSAqIGVuZ2luZS0+ZmxhZ3MgfD0gSTkx
NV9FTkdJTkVfSEFTX1NFTUFQSE9SRVM7CiAJICovCiAKQEAgLTY2Niw5ICsyMjYxLDIxIEBAIHN0
YXRpYyBpbmxpbmUgdm9pZCBndWNfZGVmYXVsdF9pcnFzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAlpbnRlbF9lbmdpbmVfc2V0X2lycV9oYW5kbGVyKGVuZ2luZSwgY3NfaXJxX2hh
bmRsZXIpOwogfQogCitzdGF0aWMgdm9pZCBndWNfc2NoZWRfZW5naW5lX2Rlc3Ryb3koc3RydWN0
IGtyZWYgKmtyZWYpCit7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUg
PQorCQljb250YWluZXJfb2Yoa3JlZiwgdHlwZW9mKCpzY2hlZF9lbmdpbmUpLCByZWYpOworCXN0
cnVjdCBpbnRlbF9ndWMgKmd1YyA9IHNjaGVkX2VuZ2luZS0+cHJpdmF0ZV9kYXRhOworCisJZ3Vj
LT5zY2hlZF9lbmdpbmUgPSBOVUxMOworCXRhc2tsZXRfa2lsbCgmc2NoZWRfZW5naW5lLT50YXNr
bGV0KTsgLyogZmx1c2ggdGhlIGNhbGxiYWNrICovCisJa2ZyZWUoc2NoZWRfZW5naW5lKTsKK30K
KwogaW50IGludGVsX2d1Y19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGVuZ2luZS0+aTkx
NTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5ndC0+dWMuZ3VjOwogCiAJLyoK
IAkgKiBUaGUgc2V0dXAgcmVsaWVzIG9uIHNldmVyYWwgYXNzdW1wdGlvbnMgKGUuZy4gaXJxcyBh
bHdheXMgZW5hYmxlZCkKQEAgLTY3NiwxMCArMjI4MywyNCBAQCBpbnQgaW50ZWxfZ3VjX3N1Ym1p
c3Npb25fc2V0dXAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCSAqLwogCUdFTV9C
VUdfT04oR1JBUEhJQ1NfVkVSKGk5MTUpIDwgMTEpOwogCi0JdGFza2xldF9zZXR1cCgmZW5naW5l
LT5zY2hlZF9lbmdpbmUtPnRhc2tsZXQsIGd1Y19zdWJtaXNzaW9uX3Rhc2tsZXQpOworCWlmICgh
Z3VjLT5zY2hlZF9lbmdpbmUpIHsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUgPSBpOTE1X3NjaGVkX2Vu
Z2luZV9jcmVhdGUoRU5HSU5FX1ZJUlRVQUwpOworCQlpZiAoIWd1Yy0+c2NoZWRfZW5naW5lKQor
CQkJcmV0dXJuIC1FTk9NRU07CisKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPnNjaGVkdWxlID0gaTkx
NV9zY2hlZHVsZTsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPmRpc2FibGVkID0gZ3VjX3NjaGVkX2Vu
Z2luZV9kaXNhYmxlZDsKKwkJZ3VjLT5zY2hlZF9lbmdpbmUtPnByaXZhdGVfZGF0YSA9IGd1YzsK
KwkJZ3VjLT5zY2hlZF9lbmdpbmUtPmRlc3Ryb3kgPSBndWNfc2NoZWRfZW5naW5lX2Rlc3Ryb3k7
CisJCXRhc2tsZXRfc2V0dXAoJmd1Yy0+c2NoZWRfZW5naW5lLT50YXNrbGV0LAorCQkJICAgICAg
Z3VjX3N1Ym1pc3Npb25fdGFza2xldCk7CisJfQorCWk5MTVfc2NoZWRfZW5naW5lX3B1dChlbmdp
bmUtPnNjaGVkX2VuZ2luZSk7CisJZW5naW5lLT5zY2hlZF9lbmdpbmUgPSBpOTE1X3NjaGVkX2Vu
Z2luZV9nZXQoZ3VjLT5zY2hlZF9lbmdpbmUpOwogCiAJZ3VjX2RlZmF1bHRfdmZ1bmNzKGVuZ2lu
ZSk7CiAJZ3VjX2RlZmF1bHRfaXJxcyhlbmdpbmUpOworCWd1Y19pbml0X2JyZWFkY3J1bWJzKGVu
Z2luZSk7CiAKIAlpZiAoZW5naW5lLT5jbGFzcyA9PSBSRU5ERVJfQ0xBU1MpCiAJCXJjc19zdWJt
aXNzaW9uX292ZXJyaWRlKGVuZ2luZSk7CkBAIC02OTUsNyArMjMxNiw3IEBAIGludCBpbnRlbF9n
dWNfc3VibWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIHZv
aWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZW5hYmxlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsK
LQlndWNfc3RhZ2VfZGVzY19pbml0KGd1Yyk7CisJZ3VjX2luaXRfbHJjX21hcHBpbmcoZ3VjKTsK
IH0KIAogdm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9kaXNhYmxlKHN0cnVjdCBpbnRlbF9ndWMg
Kmd1YykKQEAgLTcwNSw4ICsyMzI2LDEzIEBAIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZGlz
YWJsZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJR0VNX0JVR19PTihndC0+YXdha2UpOyAvKiBH
VCBzaG91bGQgYmUgcGFya2VkIGZpcnN0ICovCiAKIAkvKiBOb3RlOiBCeSB0aGUgdGltZSB3ZSdy
ZSBoZXJlLCBHdUMgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHJlc2V0ICovCit9CiAKLQlndWNfc3Rh
Z2VfZGVzY19maW5pKGd1Yyk7CitzdGF0aWMgYm9vbCBfX2d1Y19zdWJtaXNzaW9uX3N1cHBvcnRl
ZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCit7CisJLyogR3VDIHN1Ym1pc3Npb24gaXMgdW5hdmFp
bGFibGUgZm9yIHByZS1HZW4xMSAqLworCXJldHVybiBpbnRlbF9ndWNfaXNfc3VwcG9ydGVkKGd1
YykgJiYKKwkgICAgICAgR1JBUEhJQ1NfVkVSKGd1Y190b19ndChndWMpLT5pOTE1KSA+PSAxMTsK
IH0KIAogc3RhdGljIGJvb2wgX19ndWNfc3VibWlzc2lvbl9zZWxlY3RlZChzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMpCkBAIC03MjEsNSArMjM0Nyw0NjIgQEAgc3RhdGljIGJvb2wgX19ndWNfc3VibWlz
c2lvbl9zZWxlY3RlZChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAKIHZvaWQgaW50ZWxfZ3VjX3N1
Ym1pc3Npb25faW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CisJZ3VjLT5zdWJt
aXNzaW9uX3N1cHBvcnRlZCA9IF9fZ3VjX3N1Ym1pc3Npb25fc3VwcG9ydGVkKGd1Yyk7CiAJZ3Vj
LT5zdWJtaXNzaW9uX3NlbGVjdGVkID0gX19ndWNfc3VibWlzc2lvbl9zZWxlY3RlZChndWMpOwog
fQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2cyaF9jb250ZXh0X2xv
b2t1cChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBkZXNjX2lkeCkKK3sKKwlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2U7CisKKwlpZiAodW5saWtlbHkoZGVzY19pZHggPj0gR1VDX01BWF9MUkNf
REVTQ1JJUFRPUlMpKSB7CisJCWRybV9kYmcoJmd1Y190b19ndChndWMpLT5pOTE1LT5kcm0sCisJ
CQkiSW52YWxpZCBkZXNjX2lkeCAldSIsIGRlc2NfaWR4KTsKKwkJcmV0dXJuIE5VTEw7CisJfQor
CisJY2UgPSBfX2dldF9jb250ZXh0KGd1YywgZGVzY19pZHgpOworCWlmICh1bmxpa2VseSghY2Up
KSB7CisJCWRybV9kYmcoJmd1Y190b19ndChndWMpLT5pOTE1LT5kcm0sCisJCQkiQ29udGV4dCBp
cyBOVUxMLCBkZXNjX2lkeCAldSIsIGRlc2NfaWR4KTsKKwkJcmV0dXJuIE5VTEw7CisJfQorCisJ
cmV0dXJuIGNlOworfQorCitzdGF0aWMgdm9pZCBkZWNyX291dHN0YW5kaW5nX3N1Ym1pc3Npb25f
ZzJoKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3sKKwlpZiAoYXRvbWljX2RlY19hbmRfdGVzdCgm
Z3VjLT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCkpCisJCXdha2VfdXBfYWxsKCZndWMtPmN0
LndxKTsKK30KKworaW50IGludGVsX2d1Y19kZXJlZ2lzdGVyX2RvbmVfcHJvY2Vzc19tc2coc3Ry
dWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCQkgIGNvbnN0IHUzMiAqbXNnLAorCQkJCQkgIHUzMiBs
ZW4pCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCXUzMiBkZXNjX2lkeCA9IG1zZ1sw
XTsKKworCWlmICh1bmxpa2VseShsZW4gPCAxKSkgeworCQlkcm1fZGJnKCZndWNfdG9fZ3QoZ3Vj
KS0+aTkxNS0+ZHJtLCAiSW52YWxpZCBsZW5ndGggJXUiLCBsZW4pOworCQlyZXR1cm4gLUVQUk9U
TzsKKwl9CisKKwljZSA9IGcyaF9jb250ZXh0X2xvb2t1cChndWMsIGRlc2NfaWR4KTsKKwlpZiAo
dW5saWtlbHkoIWNlKSkKKwkJcmV0dXJuIC1FUFJPVE87CisKKwl0cmFjZV9pbnRlbF9jb250ZXh0
X2RlcmVnaXN0ZXJfZG9uZShjZSk7CisKKwlpZiAoY29udGV4dF93YWl0X2Zvcl9kZXJlZ2lzdGVy
X3RvX3JlZ2lzdGVyKGNlKSkgeworCQlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnVudGltZV9w
bSA9CisJCQkmY2UtPmVuZ2luZS0+Z3QtPmk5MTUtPnJ1bnRpbWVfcG07CisJCWludGVsX3dha2Vy
ZWZfdCB3YWtlcmVmOworCisJCS8qCisJCSAqIFByZXZpb3VzIG93bmVyIG9mIHRoaXMgZ3VjX2lk
IGhhcyBiZWVuIGRlcmVnaXN0ZXJlZCwgbm93IHNhZmUKKwkJICogcmVnaXN0ZXIgdGhpcyBjb250
ZXh0LgorCQkgKi8KKwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKHJ1bnRpbWVfcG0sIHdha2VyZWYp
CisJCQlyZWdpc3Rlcl9jb250ZXh0KGNlLCB0cnVlKTsKKwkJZ3VjX3NpZ25hbF9jb250ZXh0X2Zl
bmNlKGNlKTsKKwkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCX0gZWxzZSBpZiAoY29udGV4dF9k
ZXN0cm95ZWQoY2UpKSB7CisJCS8qIENvbnRleHQgaGFzIGJlZW4gZGVzdHJveWVkICovCisJCXJl
bGVhc2VfZ3VjX2lkKGd1YywgY2UpOworCQlfX2d1Y19jb250ZXh0X2Rlc3Ryb3koY2UpOworCX0K
KworCWRlY3Jfb3V0c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgoZ3VjKTsKKworCXJldHVybiAwOwor
fQorCitpbnQgaW50ZWxfZ3VjX3NjaGVkX2RvbmVfcHJvY2Vzc19tc2coc3RydWN0IGludGVsX2d1
YyAqZ3VjLAorCQkJCSAgICAgY29uc3QgdTMyICptc2csCisJCQkJICAgICB1MzIgbGVuKQorewor
CXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCXUzMiBk
ZXNjX2lkeCA9IG1zZ1swXTsKKworCWlmICh1bmxpa2VseShsZW4gPCAyKSkgeworCQlkcm1fZGJn
KCZndWNfdG9fZ3QoZ3VjKS0+aTkxNS0+ZHJtLCAiSW52YWxpZCBsZW5ndGggJXUiLCBsZW4pOwor
CQlyZXR1cm4gLUVQUk9UTzsKKwl9CisKKwljZSA9IGcyaF9jb250ZXh0X2xvb2t1cChndWMsIGRl
c2NfaWR4KTsKKwlpZiAodW5saWtlbHkoIWNlKSkKKwkJcmV0dXJuIC1FUFJPVE87CisKKwlpZiAo
dW5saWtlbHkoY29udGV4dF9kZXN0cm95ZWQoY2UpIHx8CisJCSAgICAgKCFjb250ZXh0X3BlbmRp
bmdfZW5hYmxlKGNlKSAmJgorCQkgICAgICFjb250ZXh0X3BlbmRpbmdfZGlzYWJsZShjZSkpKSkg
eworCQlkcm1fZGJnKCZndWNfdG9fZ3QoZ3VjKS0+aTkxNS0+ZHJtLAorCQkJIkJhZCBjb250ZXh0
IHNjaGVkX3N0YXRlIDB4JXgsIDB4JXgsIGRlc2NfaWR4ICV1IiwKKwkJCWF0b21pY19yZWFkKCZj
ZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spLAorCQkJY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0
ZSwgZGVzY19pZHgpOworCQlyZXR1cm4gLUVQUk9UTzsKKwl9CisKKwl0cmFjZV9pbnRlbF9jb250
ZXh0X3NjaGVkX2RvbmUoY2UpOworCisJaWYgKGNvbnRleHRfcGVuZGluZ19lbmFibGUoY2UpKSB7
CisJCWNscl9jb250ZXh0X3BlbmRpbmdfZW5hYmxlKGNlKTsKKwl9IGVsc2UgaWYgKGNvbnRleHRf
cGVuZGluZ19kaXNhYmxlKGNlKSkgeworCQlib29sIGJhbm5lZDsKKworCQkvKgorCQkgKiBVbnBp
biBtdXN0IGJlIGRvbmUgYmVmb3JlIF9fZ3VjX3NpZ25hbF9jb250ZXh0X2ZlbmNlLAorCQkgKiBv
dGhlcndpc2UgYSByYWNlIGV4aXN0cyBiZXR3ZWVuIHRoZSByZXF1ZXN0cyBnZXR0aW5nCisJCSAq
IHN1Ym1pdHRlZCArIHJldGlyZWQgYmVmb3JlIHRoaXMgdW5waW4gY29tcGxldGVzIHJlc3VsdGlu
ZyBpbgorCQkgKiB0aGUgcGluX2NvdW50IGdvaW5nIHRvIHplcm8gYW5kIHRoZSBjb250ZXh0IHN0
aWxsIGJlaW5nCisJCSAqIGVuYWJsZWQuCisJCSAqLworCQlpbnRlbF9jb250ZXh0X3NjaGVkX2Rp
c2FibGVfdW5waW4oY2UpOworCisJCXNwaW5fbG9ja19pcnFzYXZlKCZjZS0+Z3VjX3N0YXRlLmxv
Y2ssIGZsYWdzKTsKKwkJYmFubmVkID0gY29udGV4dF9iYW5uZWQoY2UpOworCQljbHJfY29udGV4
dF9iYW5uZWQoY2UpOworCQljbHJfY29udGV4dF9wZW5kaW5nX2Rpc2FibGUoY2UpOworCQlfX2d1
Y19zaWduYWxfY29udGV4dF9mZW5jZShjZSk7CisJCWd1Y19ibG9ja2VkX2ZlbmNlX2NvbXBsZXRl
KGNlKTsKKwkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmY2UtPmd1Y19zdGF0ZS5sb2NrLCBmbGFn
cyk7CisKKwkJaWYgKGJhbm5lZCkgeworCQkJZ3VjX2NhbmNlbF9jb250ZXh0X3JlcXVlc3RzKGNl
KTsKKwkJCWludGVsX2VuZ2luZV9zaWduYWxfYnJlYWRjcnVtYnMoY2UtPmVuZ2luZSk7CisJCX0K
Kwl9CisKKwlkZWNyX291dHN0YW5kaW5nX3N1Ym1pc3Npb25fZzJoKGd1Yyk7CisJaW50ZWxfY29u
dGV4dF9wdXQoY2UpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIGNhcHR1cmVfZXJy
b3Jfc3RhdGUoc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCXN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gZ3VjX3RvX2d0KGd1Yyk7CisJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBndC0+aTkxNTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUgPSBfX2NvbnRleHRfdG9fcGh5c2ljYWxfZW5naW5lKGNlKTsKKwlpbnRlbF93
YWtlcmVmX3Qgd2FrZXJlZjsKKworCWludGVsX2VuZ2luZV9zZXRfaHVuZ19jb250ZXh0KGVuZ2lu
ZSwgY2UpOworCXdpdGhfaW50ZWxfcnVudGltZV9wbSgmaTkxNS0+cnVudGltZV9wbSwgd2FrZXJl
ZikKKwkJaTkxNV9jYXB0dXJlX2Vycm9yX3N0YXRlKGd0LCBlbmdpbmUtPm1hc2spOworCWF0b21p
Y19pbmMoJmk5MTUtPmdwdV9lcnJvci5yZXNldF9lbmdpbmVfY291bnRbZW5naW5lLT51YWJpX2Ns
YXNzXSk7Cit9CisKK3N0YXRpYyB2b2lkIGd1Y19jb250ZXh0X3JlcGxheShzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UpCit7CisJc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUg
PSBjZS0+ZW5naW5lLT5zY2hlZF9lbmdpbmU7CisKKwlfX2d1Y19yZXNldF9jb250ZXh0KGNlLCB0
cnVlKTsKKwl0YXNrbGV0X2hpX3NjaGVkdWxlKCZzY2hlZF9lbmdpbmUtPnRhc2tsZXQpOworfQor
CitzdGF0aWMgdm9pZCBndWNfaGFuZGxlX2NvbnRleHRfcmVzZXQoc3RydWN0IGludGVsX2d1YyAq
Z3VjLAorCQkJCSAgICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXRyYWNlX2ludGVs
X2NvbnRleHRfcmVzZXQoY2UpOworCisJaWYgKGxpa2VseSghaW50ZWxfY29udGV4dF9pc19iYW5u
ZWQoY2UpKSkgeworCQljYXB0dXJlX2Vycm9yX3N0YXRlKGd1YywgY2UpOworCQlndWNfY29udGV4
dF9yZXBsYXkoY2UpOworCX0KK30KKworaW50IGludGVsX2d1Y19jb250ZXh0X3Jlc2V0X3Byb2Nl
c3NfbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQkJY29uc3QgdTMyICptc2csIHUzMiBs
ZW4pCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCWludCBkZXNjX2lkeCA9IG1zZ1sw
XTsKKworCWlmICh1bmxpa2VseShsZW4gIT0gMSkpIHsKKwkJZHJtX2RiZygmZ3VjX3RvX2d0KGd1
YyktPmk5MTUtPmRybSwgIkludmFsaWQgbGVuZ3RoICV1IiwgbGVuKTsKKwkJcmV0dXJuIC1FUFJP
VE87CisJfQorCisJY2UgPSBnMmhfY29udGV4dF9sb29rdXAoZ3VjLCBkZXNjX2lkeCk7CisJaWYg
KHVubGlrZWx5KCFjZSkpCisJCXJldHVybiAtRVBST1RPOworCisJZ3VjX2hhbmRsZV9jb250ZXh0
X3Jlc2V0KGd1YywgY2UpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICoKK2d1Y19sb29rdXBfZW5naW5lKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTgg
Z3VjX2NsYXNzLCB1OCBpbnN0YW5jZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gZ3VjX3Rv
X2d0KGd1Yyk7CisJdTggZW5naW5lX2NsYXNzID0gZ3VjX2NsYXNzX3RvX2VuZ2luZV9jbGFzcyhn
dWNfY2xhc3MpOworCisJLyogQ2xhc3MgaW5kZXggaXMgY2hlY2tlZCBpbiBjbGFzcyBjb252ZXJ0
ZXIgKi8KKwlHRU1fQlVHX09OKGluc3RhbmNlID4gTUFYX0VOR0lORV9JTlNUQU5DRSk7CisKKwly
ZXR1cm4gZ3QtPmVuZ2luZV9jbGFzc1tlbmdpbmVfY2xhc3NdW2luc3RhbmNlXTsKK30KKworaW50
IGludGVsX2d1Y19lbmdpbmVfZmFpbHVyZV9wcm9jZXNzX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMsCisJCQkJCSBjb25zdCB1MzIgKm1zZywgdTMyIGxlbikKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmU7CisJdTggZ3VjX2NsYXNzLCBpbnN0YW5jZTsKKwl1MzIgcmVhc29uOwor
CisJaWYgKHVubGlrZWx5KGxlbiAhPSAzKSkgeworCQlkcm1fZGJnKCZndWNfdG9fZ3QoZ3VjKS0+
aTkxNS0+ZHJtLCAiSW52YWxpZCBsZW5ndGggJXUiLCBsZW4pOworCQlyZXR1cm4gLUVQUk9UTzsK
Kwl9CisKKwlndWNfY2xhc3MgPSBtc2dbMF07CisJaW5zdGFuY2UgPSBtc2dbMV07CisJcmVhc29u
ID0gbXNnWzJdOworCisJZW5naW5lID0gZ3VjX2xvb2t1cF9lbmdpbmUoZ3VjLCBndWNfY2xhc3Ms
IGluc3RhbmNlKTsKKwlpZiAodW5saWtlbHkoIWVuZ2luZSkpIHsKKwkJZHJtX2RiZygmZ3VjX3Rv
X2d0KGd1YyktPmk5MTUtPmRybSwKKwkJCSJJbnZhbGlkIGVuZ2luZSAlZDolZCIsIGd1Y19jbGFz
cywgaW5zdGFuY2UpOworCQlyZXR1cm4gLUVQUk9UTzsKKwl9CisKKwlpbnRlbF9ndF9oYW5kbGVf
ZXJyb3IoZ3VjX3RvX2d0KGd1YyksIGVuZ2luZS0+bWFzaywKKwkJCSAgICAgIEk5MTVfRVJST1Jf
Q0FQVFVSRSwKKwkJCSAgICAgICJHdUMgZmFpbGVkIHRvIHJlc2V0ICVzIChyZWFzb249MHglMDh4
KVxuIiwKKwkJCSAgICAgIGVuZ2luZS0+bmFtZSwgcmVhc29uKTsKKworCXJldHVybiAwOworfQor
Cit2b2lkIGludGVsX2d1Y19maW5kX2h1bmdfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmVuZ2luZS0+Z3QtPnVjLmd1
YzsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7
CisJdW5zaWduZWQgbG9uZyBpbmRleDsKKworCS8qIFJlc2V0IGNhbGxlZCBkdXJpbmcgZHJpdmVy
IGxvYWQ/IEd1QyBub3QgeWV0IGluaXRpYWxpc2VkISAqLworCWlmICh1bmxpa2VseSghZ3VjX3N1
Ym1pc3Npb25faW5pdGlhbGl6ZWQoZ3VjKSkpCisJCXJldHVybjsKKworCXhhX2Zvcl9lYWNoKCZn
dWMtPmNvbnRleHRfbG9va3VwLCBpbmRleCwgY2UpIHsKKwkJaWYgKCFpbnRlbF9jb250ZXh0X2lz
X3Bpbm5lZChjZSkpCisJCQljb250aW51ZTsKKworCQlpZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1
YWwoY2UtPmVuZ2luZSkpIHsKKwkJCWlmICghKGNlLT5lbmdpbmUtPm1hc2sgJiBlbmdpbmUtPm1h
c2spKQorCQkJCWNvbnRpbnVlOworCQl9IGVsc2UgeworCQkJaWYgKGNlLT5lbmdpbmUgIT0gZW5n
aW5lKQorCQkJCWNvbnRpbnVlOworCQl9CisKKwkJbGlzdF9mb3JfZWFjaF9lbnRyeShycSwgJmNl
LT5ndWNfYWN0aXZlLnJlcXVlc3RzLCBzY2hlZC5saW5rKSB7CisJCQlpZiAoaTkxNV90ZXN0X3Jl
cXVlc3Rfc3RhdGUocnEpICE9IEk5MTVfUkVRVUVTVF9BQ1RJVkUpCisJCQkJY29udGludWU7CisK
KwkJCWludGVsX2VuZ2luZV9zZXRfaHVuZ19jb250ZXh0KGVuZ2luZSwgY2UpOworCisJCQkvKiBD
YW4gb25seSBjb3BlIHdpdGggb25lIGhhbmcgYXQgYSB0aW1lLi4uICovCisJCQlyZXR1cm47CisJ
CX0KKwl9Cit9CisKK3ZvaWQgaW50ZWxfZ3VjX2R1bXBfYWN0aXZlX3JlcXVlc3RzKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgICAgc3RydWN0IGk5MTVfcmVxdWVzdCAqaHVu
Z19ycSwKKwkJCQkgICAgc3RydWN0IGRybV9wcmludGVyICptKQoreworCXN0cnVjdCBpbnRlbF9n
dWMgKmd1YyA9ICZlbmdpbmUtPmd0LT51Yy5ndWM7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNl
OworCXVuc2lnbmVkIGxvbmcgaW5kZXg7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKworCS8qIFJl
c2V0IGNhbGxlZCBkdXJpbmcgZHJpdmVyIGxvYWQ/IEd1QyBub3QgeWV0IGluaXRpYWxpc2VkISAq
LworCWlmICh1bmxpa2VseSghZ3VjX3N1Ym1pc3Npb25faW5pdGlhbGl6ZWQoZ3VjKSkpCisJCXJl
dHVybjsKKworCXhhX2Zvcl9lYWNoKCZndWMtPmNvbnRleHRfbG9va3VwLCBpbmRleCwgY2UpIHsK
KwkJaWYgKCFpbnRlbF9jb250ZXh0X2lzX3Bpbm5lZChjZSkpCisJCQljb250aW51ZTsKKworCQlp
ZiAoaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY2UtPmVuZ2luZSkpIHsKKwkJCWlmICghKGNlLT5l
bmdpbmUtPm1hc2sgJiBlbmdpbmUtPm1hc2spKQorCQkJCWNvbnRpbnVlOworCQl9IGVsc2Ugewor
CQkJaWYgKGNlLT5lbmdpbmUgIT0gZW5naW5lKQorCQkJCWNvbnRpbnVlOworCQl9CisKKwkJc3Bp
bl9sb2NrX2lycXNhdmUoJmNlLT5ndWNfYWN0aXZlLmxvY2ssIGZsYWdzKTsKKwkJaW50ZWxfZW5n
aW5lX2R1bXBfYWN0aXZlX3JlcXVlc3RzKCZjZS0+Z3VjX2FjdGl2ZS5yZXF1ZXN0cywKKwkJCQkJ
CSAgaHVuZ19ycSwgbSk7CisJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmNlLT5ndWNfYWN0aXZl
LmxvY2ssIGZsYWdzKTsKKwl9Cit9CisKK3ZvaWQgaW50ZWxfZ3VjX2xvZ19zdWJtaXNzaW9uX2lu
Zm8oc3RydWN0IGludGVsX2d1YyAqZ3VjLAorCQkJCSAgIHN0cnVjdCBkcm1fcHJpbnRlciAqcCkK
K3sKKwlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSA9IGd1Yy0+c2NoZWRf
ZW5naW5lOworCXN0cnVjdCByYl9ub2RlICpyYjsKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworCisJ
aWYgKCFzY2hlZF9lbmdpbmUpCisJCXJldHVybjsKKworCWRybV9wcmludGYocCwgIkd1QyBOdW1i
ZXIgT3V0c3RhbmRpbmcgU3VibWlzc2lvbiBHMkg6ICV1XG4iLAorCQkgICBhdG9taWNfcmVhZCgm
Z3VjLT5vdXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCkpOworCWRybV9wcmludGYocCwgIkd1QyB0
YXNrbGV0IGNvdW50OiAldVxuXG4iLAorCQkgICBhdG9taWNfcmVhZCgmc2NoZWRfZW5naW5lLT50
YXNrbGV0LmNvdW50KSk7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmc2NoZWRfZW5naW5lLT5sb2Nr
LCBmbGFncyk7CisJZHJtX3ByaW50ZihwLCAiUmVxdWVzdHMgaW4gR3VDIHN1Ym1pdCB0YXNrbGV0
OlxuIik7CisJZm9yIChyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmc2NoZWRfZW5naW5lLT5xdWV1ZSk7
IHJiOyByYiA9IHJiX25leHQocmIpKSB7CisJCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwbCA9IHRv
X3ByaW9saXN0KHJiKTsKKwkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisKKwkJcHJpb2xpc3Rf
Zm9yX2VhY2hfcmVxdWVzdChycSwgcGwpCisJCQlkcm1fcHJpbnRmKHAsICJndWNfaWQ9JXUsIHNl
cW5vPSVsbHVcbiIsCisJCQkJICAgcnEtPmNvbnRleHQtPmd1Y19pZCwKKwkJCQkgICBycS0+ZmVu
Y2Uuc2Vxbm8pOworCX0KKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzY2hlZF9lbmdpbmUtPmxv
Y2ssIGZsYWdzKTsKKwlkcm1fcHJpbnRmKHAsICJcbiIpOworfQorCit2b2lkIGludGVsX2d1Y19s
b2dfY29udGV4dF9pbmZvKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywKKwkJCQlzdHJ1Y3QgZHJtX3By
aW50ZXIgKnApCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCXVuc2lnbmVkIGxvbmcg
aW5kZXg7CisKKwl4YV9mb3JfZWFjaCgmZ3VjLT5jb250ZXh0X2xvb2t1cCwgaW5kZXgsIGNlKSB7
CisJCWRybV9wcmludGYocCwgIkd1QyBscmMgZGVzY3JpcHRvciAldTpcbiIsIGNlLT5ndWNfaWQp
OworCQlkcm1fcHJpbnRmKHAsICJcdEhXIENvbnRleHQgRGVzYzogMHglMDh4XG4iLCBjZS0+bHJj
LmxyY2EpOworCQlkcm1fcHJpbnRmKHAsICJcdFx0TFJDIEhlYWQ6IEludGVybmFsICV1LCBNZW1v
cnkgJXVcbiIsCisJCQkgICBjZS0+cmluZy0+aGVhZCwKKwkJCSAgIGNlLT5scmNfcmVnX3N0YXRl
W0NUWF9SSU5HX0hFQURdKTsKKwkJZHJtX3ByaW50ZihwLCAiXHRcdExSQyBUYWlsOiBJbnRlcm5h
bCAldSwgTWVtb3J5ICV1XG4iLAorCQkJICAgY2UtPnJpbmctPnRhaWwsCisJCQkgICBjZS0+bHJj
X3JlZ19zdGF0ZVtDVFhfUklOR19UQUlMXSk7CisJCWRybV9wcmludGYocCwgIlx0XHRDb250ZXh0
IFBpbiBDb3VudDogJXVcbiIsCisJCQkgICBhdG9taWNfcmVhZCgmY2UtPnBpbl9jb3VudCkpOwor
CQlkcm1fcHJpbnRmKHAsICJcdFx0R3VDIElEIFJlZiBDb3VudDogJXVcbiIsCisJCQkgICBhdG9t
aWNfcmVhZCgmY2UtPmd1Y19pZF9yZWYpKTsKKwkJZHJtX3ByaW50ZihwLCAiXHRcdFNjaGVkdWxl
IFN0YXRlOiAweCV4LCAweCV4XG5cbiIsCisJCQkgICBjZS0+Z3VjX3N0YXRlLnNjaGVkX3N0YXRl
LAorCQkJICAgYXRvbWljX3JlYWQoJmNlLT5ndWNfc2NoZWRfc3RhdGVfbm9fbG9jaykpOworCX0K
K30KKworc3RhdGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2d1Y19jcmVhdGVfdmlydHVhbChz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsIHVuc2lnbmVkIGludCBjb3VudCkKK3sK
KwlzdHJ1Y3QgZ3VjX3ZpcnR1YWxfZW5naW5lICp2ZTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWM7
CisJdW5zaWduZWQgaW50IG47CisJaW50IGVycjsKKworCXZlID0ga3phbGxvYyhzaXplb2YoKnZl
KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCF2ZSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisK
KwlndWMgPSAmc2libGluZ3NbMF0tPmd0LT51Yy5ndWM7CisKKwl2ZS0+YmFzZS5pOTE1ID0gc2li
bGluZ3NbMF0tPmk5MTU7CisJdmUtPmJhc2UuZ3QgPSBzaWJsaW5nc1swXS0+Z3Q7CisJdmUtPmJh
c2UudW5jb3JlID0gc2libGluZ3NbMF0tPnVuY29yZTsKKwl2ZS0+YmFzZS5pZCA9IC0xOworCisJ
dmUtPmJhc2UudWFiaV9jbGFzcyA9IEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSUQ7CisJdmUtPmJh
c2UuaW5zdGFuY2UgPSBJOTE1X0VOR0lORV9DTEFTU19JTlZBTElEX1ZJUlRVQUw7CisJdmUtPmJh
c2UudWFiaV9pbnN0YW5jZSA9IEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSURfVklSVFVBTDsKKwl2
ZS0+YmFzZS5zYXR1cmF0ZWQgPSBBTExfRU5HSU5FUzsKKworCXNucHJpbnRmKHZlLT5iYXNlLm5h
bWUsIHNpemVvZih2ZS0+YmFzZS5uYW1lKSwgInZpcnR1YWwiKTsKKworCXZlLT5iYXNlLnNjaGVk
X2VuZ2luZSA9IGk5MTVfc2NoZWRfZW5naW5lX2dldChndWMtPnNjaGVkX2VuZ2luZSk7CisKKwl2
ZS0+YmFzZS5jb3BzID0gJnZpcnR1YWxfZ3VjX2NvbnRleHRfb3BzOworCXZlLT5iYXNlLnJlcXVl
c3RfYWxsb2MgPSBndWNfcmVxdWVzdF9hbGxvYzsKKwl2ZS0+YmFzZS5idW1wX3NlcmlhbCA9IHZp
cnR1YWxfZ3VjX2J1bXBfc2VyaWFsOworCisJdmUtPmJhc2Uuc3VibWl0X3JlcXVlc3QgPSBndWNf
c3VibWl0X3JlcXVlc3Q7CisKKwl2ZS0+YmFzZS5mbGFncyA9IEk5MTVfRU5HSU5FX0lTX1ZJUlRV
QUw7CisKKwlpbnRlbF9jb250ZXh0X2luaXQoJnZlLT5jb250ZXh0LCAmdmUtPmJhc2UpOworCisJ
Zm9yIChuID0gMDsgbiA8IGNvdW50OyBuKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
c2libGluZyA9IHNpYmxpbmdzW25dOworCisJCUdFTV9CVUdfT04oIWlzX3Bvd2VyX29mXzIoc2li
bGluZy0+bWFzaykpOworCQlpZiAoc2libGluZy0+bWFzayAmIHZlLT5iYXNlLm1hc2spIHsKKwkJ
CURSTV9ERUJVRygiZHVwbGljYXRlICVzIGVudHJ5IGluIGxvYWQgYmFsYW5jZXJcbiIsCisJCQkJ
ICBzaWJsaW5nLT5uYW1lKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlnb3RvIGVycl9wdXQ7CisJ
CX0KKworCQl2ZS0+YmFzZS5tYXNrIHw9IHNpYmxpbmctPm1hc2s7CisKKwkJaWYgKG4gIT0gMCAm
JiB2ZS0+YmFzZS5jbGFzcyAhPSBzaWJsaW5nLT5jbGFzcykgeworCQkJRFJNX0RFQlVHKCJpbnZh
bGlkIG1peGluZyBvZiBlbmdpbmUgY2xhc3MsIHNpYmxpbmcgJWQsIGFscmVhZHkgJWRcbiIsCisJ
CQkJICBzaWJsaW5nLT5jbGFzcywgdmUtPmJhc2UuY2xhc3MpOworCQkJZXJyID0gLUVJTlZBTDsK
KwkJCWdvdG8gZXJyX3B1dDsKKwkJfSBlbHNlIGlmIChuID09IDApIHsKKwkJCXZlLT5iYXNlLmNs
YXNzID0gc2libGluZy0+Y2xhc3M7CisJCQl2ZS0+YmFzZS51YWJpX2NsYXNzID0gc2libGluZy0+
dWFiaV9jbGFzczsKKwkJCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVvZih2ZS0+YmFzZS5u
YW1lKSwKKwkJCQkgInYlZHglZCIsIHZlLT5iYXNlLmNsYXNzLCBjb3VudCk7CisJCQl2ZS0+YmFz
ZS5jb250ZXh0X3NpemUgPSBzaWJsaW5nLT5jb250ZXh0X3NpemU7CisKKwkJCXZlLT5iYXNlLmFk
ZF9hY3RpdmVfcmVxdWVzdCA9CisJCQkJc2libGluZy0+YWRkX2FjdGl2ZV9yZXF1ZXN0OworCQkJ
dmUtPmJhc2UucmVtb3ZlX2FjdGl2ZV9yZXF1ZXN0ID0KKwkJCQlzaWJsaW5nLT5yZW1vdmVfYWN0
aXZlX3JlcXVlc3Q7CisJCQl2ZS0+YmFzZS5lbWl0X2JiX3N0YXJ0ID0gc2libGluZy0+ZW1pdF9i
Yl9zdGFydDsKKwkJCXZlLT5iYXNlLmVtaXRfZmx1c2ggPSBzaWJsaW5nLT5lbWl0X2ZsdXNoOwor
CQkJdmUtPmJhc2UuZW1pdF9pbml0X2JyZWFkY3J1bWIgPQorCQkJCXNpYmxpbmctPmVtaXRfaW5p
dF9icmVhZGNydW1iOworCQkJdmUtPmJhc2UuZW1pdF9maW5pX2JyZWFkY3J1bWIgPQorCQkJCXNp
YmxpbmctPmVtaXRfZmluaV9icmVhZGNydW1iOworCQkJdmUtPmJhc2UuZW1pdF9maW5pX2JyZWFk
Y3J1bWJfZHcgPQorCQkJCXNpYmxpbmctPmVtaXRfZmluaV9icmVhZGNydW1iX2R3OworCQkJdmUt
PmJhc2UuYnJlYWRjcnVtYnMgPQorCQkJCWludGVsX2JyZWFkY3J1bWJzX2dldChzaWJsaW5nLT5i
cmVhZGNydW1icyk7CisKKwkJCXZlLT5iYXNlLmZsYWdzIHw9IHNpYmxpbmctPmZsYWdzOworCisJ
CQl2ZS0+YmFzZS5wcm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMgPQorCQkJCXNpYmxpbmctPnBy
b3BzLnRpbWVzbGljZV9kdXJhdGlvbl9tczsKKwkJfQorCX0KKworCXJldHVybiAmdmUtPmNvbnRl
eHQ7CisKK2Vycl9wdXQ6CisJaW50ZWxfY29udGV4dF9wdXQoJnZlLT5jb250ZXh0KTsKKwlyZXR1
cm4gRVJSX1BUUihlcnIpOworfQorCisKKworYm9vbCBpbnRlbF9ndWNfdmlydHVhbF9lbmdpbmVf
aGFzX2hlYXJ0YmVhdChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICp2ZSkKK3sKKwlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJaW50ZWxfZW5naW5lX21hc2tfdCB0bXAsIG1h
c2sgPSB2ZS0+bWFzazsKKworCWZvcl9lYWNoX2VuZ2luZV9tYXNrZWQoZW5naW5lLCB2ZS0+Z3Qs
IG1hc2ssIHRtcCkKKwkJaWYgKFJFQURfT05DRShlbmdpbmUtPnByb3BzLmhlYXJ0YmVhdF9pbnRl
cnZhbF9tcykpCisJCQlyZXR1cm4gdHJ1ZTsKKworCXJldHVybiBmYWxzZTsKK30KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oCmluZGV4IDNm
NzAwNTAxODkzOS4uYmU3NjdlYjZmZjcxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmgKQEAgLTEwLDYgKzEwLDcgQEAKIAogI2luY2x1
ZGUgImludGVsX2d1Yy5oIgogCitzdHJ1Y3QgZHJtX3ByaW50ZXI7CiBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzOwogCiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2luaXRfZWFybHkoc3RydWN0IGlu
dGVsX2d1YyAqZ3VjKTsKQEAgLTIwLDExICsyMSwyMyBAQCB2b2lkIGludGVsX2d1Y19zdWJtaXNz
aW9uX2Zpbmkoc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIGludCBpbnRlbF9ndWNfcHJlZW1wdF93
b3JrX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRlbF9ndWNfcHJlZW1w
dF93b3JrX2Rlc3Ryb3koc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIGludCBpbnRlbF9ndWNfc3Vi
bWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwordm9pZCBpbnRl
bF9ndWNfbG9nX3N1Ym1pc3Npb25faW5mbyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAg
c3RydWN0IGRybV9wcmludGVyICpwKTsKK3ZvaWQgaW50ZWxfZ3VjX2xvZ19jb250ZXh0X2luZm8o
c3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOwordm9pZCBpbnRl
bF9ndWNfZHVtcF9hY3RpdmVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LAorCQkJCSAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpodW5nX3JxLAorCQkJCSAgICBzdHJ1Y3Qg
ZHJtX3ByaW50ZXIgKm0pOworCitib29sIGludGVsX2d1Y192aXJ0dWFsX2VuZ2luZV9oYXNfaGVh
cnRiZWF0KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnZlKTsKKworaW50IGludGVsX2d1
Y193YWl0X2Zvcl9wZW5kaW5nX21zZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsCisJCQkJICAgYXRv
bWljX3QgKndhaXRfdmFyLAorCQkJCSAgIGJvb2wgaW50ZXJydXB0aWJsZSwKKwkJCQkgICBsb25n
IHRpbWVvdXQpOwogCiBzdGF0aWMgaW5saW5lIGJvb2wgaW50ZWxfZ3VjX3N1Ym1pc3Npb25faXNf
c3VwcG9ydGVkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHsKLQkvKiBYWFg6IEd1QyBzdWJtaXNz
aW9uIGlzIHVuYXZhaWxhYmxlIGZvciBub3cgKi8KLQlyZXR1cm4gZmFsc2U7CisJcmV0dXJuIGd1
Yy0+c3VibWlzc2lvbl9zdXBwb3J0ZWQ7CiB9CiAKIHN0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF9n
dWNfc3VibWlzc2lvbl9pc193YW50ZWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3VjL2ludGVsX3VjLmMKaW5kZXggNmQ4YjkyMzMyMTRlLi42MWJlMGFhODE0OTIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYwpAQCAtMzQsOCArMzQsMTUgQEAg
c3RhdGljIHZvaWQgdWNfZXhwYW5kX2RlZmF1bHRfb3B0aW9ucyhzdHJ1Y3QgaW50ZWxfdWMgKnVj
KQogCQlyZXR1cm47CiAJfQogCi0JLyogRGVmYXVsdDogZW5hYmxlIEh1QyBhdXRoZW50aWNhdGlv
biBvbmx5ICovCi0JaTkxNS0+cGFyYW1zLmVuYWJsZV9ndWMgPSBFTkFCTEVfR1VDX0xPQURfSFVD
OworCS8qIEludGVybWVkaWF0ZSBwbGF0Zm9ybXMgYXJlIEh1QyBhdXRoZW50aWNhdGlvbiBvbmx5
ICovCisJaWYgKElTX0RHMShpOTE1KSB8fCBJU19BTERFUkxBS0VfUyhpOTE1KSkgeworCQlkcm1f
ZGJnKCZpOTE1LT5kcm0sICJEaXNhYmxpbmcgR3VDIG9ubHkgZHVlIHRvIG9sZCBwbGF0Zm9ybVxu
Iik7CisJCWk5MTUtPnBhcmFtcy5lbmFibGVfZ3VjID0gRU5BQkxFX0dVQ19MT0FEX0hVQzsKKwkJ
cmV0dXJuOworCX0KKworCS8qIERlZmF1bHQ6IGVuYWJsZSBIdUMgYXV0aGVudGljYXRpb24gYW5k
IEd1QyBzdWJtaXNzaW9uICovCisJaTkxNS0+cGFyYW1zLmVuYWJsZV9ndWMgPSBFTkFCTEVfR1VD
X0xPQURfSFVDIHwgRU5BQkxFX0dVQ19TVUJNSVNTSU9OOwogfQogCiAvKiBSZXNldCBHdUMgcHJv
dmlkaW5nIHVzIHdpdGggZnJlc2ggc3RhdGUgZm9yIGJvdGggR3VDIGFuZCBIdUMuCkBAIC0xMjAs
NiArMTI3LDExIEBAIHZvaWQgaW50ZWxfdWNfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfdWMgKnVj
KQogCQl1Yy0+b3BzID0gJnVjX29wc19vZmY7CiB9CiAKK3ZvaWQgaW50ZWxfdWNfaW5pdF9sYXRl
KHN0cnVjdCBpbnRlbF91YyAqdWMpCit7CisJaW50ZWxfZ3VjX2luaXRfbGF0ZSgmdWMtPmd1Yyk7
Cit9CisKIHZvaWQgaW50ZWxfdWNfZHJpdmVyX2xhdGVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfdWMg
KnVjKQogewogfQpAQCAtMjA3LDIxICsyMTksNiBAQCBzdGF0aWMgdm9pZCBndWNfaGFuZGxlX21t
aW9fbXNnKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAlzcGluX3VubG9ja19pcnEoJmd1Yy0+aXJx
X2xvY2spOwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVzZXRfaW50ZXJydXB0cyhzdHJ1Y3QgaW50
ZWxfZ3VjICpndWMpCi17Ci0JZ3VjLT5pbnRlcnJ1cHRzLnJlc2V0KGd1Yyk7Ci19Ci0KLXN0YXRp
YyB2b2lkIGd1Y19lbmFibGVfaW50ZXJydXB0cyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCi17Ci0J
Z3VjLT5pbnRlcnJ1cHRzLmVuYWJsZShndWMpOwotfQotCi1zdGF0aWMgdm9pZCBndWNfZGlzYWJs
ZV9pbnRlcnJ1cHRzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKLXsKLQlndWMtPmludGVycnVwdHMu
ZGlzYWJsZShndWMpOwotfQotCiBzdGF0aWMgaW50IGd1Y19lbmFibGVfY29tbXVuaWNhdGlvbihz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJc3RydWN0IGludGVsX2d0ICpndCA9IGd1Y190b19n
dChndWMpOwpAQCAtMjQyLDcgKzIzOSw3IEBAIHN0YXRpYyBpbnQgZ3VjX2VuYWJsZV9jb21tdW5p
Y2F0aW9uKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAlndWNfZ2V0X21taW9fbXNnKGd1Yyk7CiAJ
Z3VjX2hhbmRsZV9tbWlvX21zZyhndWMpOwogCi0JZ3VjX2VuYWJsZV9pbnRlcnJ1cHRzKGd1Yyk7
CisJaW50ZWxfZ3VjX2VuYWJsZV9pbnRlcnJ1cHRzKGd1Yyk7CiAKIAkvKiBjaGVjayBmb3IgQ1Qg
bWVzc2FnZXMgcmVjZWl2ZWQgYmVmb3JlIHdlIGVuYWJsZWQgaW50ZXJydXB0cyAqLwogCXNwaW5f
bG9ja19pcnEoJmd0LT5pcnFfbG9jayk7CkBAIC0yNjUsNyArMjYyLDcgQEAgc3RhdGljIHZvaWQg
Z3VjX2Rpc2FibGVfY29tbXVuaWNhdGlvbihzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJICovCiAJ
Z3VjX2NsZWFyX21taW9fbXNnKGd1Yyk7CiAKLQlndWNfZGlzYWJsZV9pbnRlcnJ1cHRzKGd1Yyk7
CisJaW50ZWxfZ3VjX2Rpc2FibGVfaW50ZXJydXB0cyhndWMpOwogCiAJaW50ZWxfZ3VjX2N0X2Rp
c2FibGUoJmd1Yy0+Y3QpOwogCkBAIC0zMjMsOSArMzIwLDYgQEAgc3RhdGljIGludCBfX3VjX2lu
aXQoc3RydWN0IGludGVsX3VjICp1YykKIAlpZiAoaTkxNV9pbmplY3RfcHJvYmVfZmFpbHVyZSh1
Y190b19ndCh1YyktPmk5MTUpKQogCQlyZXR1cm4gLUVOT01FTTsKIAotCS8qIFhYWDogR3VDIHN1
Ym1pc3Npb24gaXMgdW5hdmFpbGFibGUgZm9yIG5vdyAqLwotCUdFTV9CVUdfT04oaW50ZWxfdWNf
dXNlc19ndWNfc3VibWlzc2lvbih1YykpOwotCiAJcmV0ID0gaW50ZWxfZ3VjX2luaXQoZ3VjKTsK
IAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwpAQCAtNDYzLDcgKzQ1Nyw3IEBAIHN0YXRpYyBpbnQg
X191Y19pbml0X2h3KHN0cnVjdCBpbnRlbF91YyAqdWMpCiAJaWYgKHJldCkKIAkJZ290byBlcnJf
b3V0OwogCi0JZ3VjX3Jlc2V0X2ludGVycnVwdHMoZ3VjKTsKKwlpbnRlbF9ndWNfcmVzZXRfaW50
ZXJydXB0cyhndWMpOwogCiAJLyogV2FFbmFibGV1S2VybmVsSGVhZGVyVmFsaWRGaXg6c2tsICov
CiAJLyogV2FFbmFibGVHdUNCb290SGFzaENoZWNrTm90U2V0OnNrbCxieHQsa2JsICovCkBAIC01
NjUsMjMgKzU1OSw2NyBAQCB2b2lkIGludGVsX3VjX3Jlc2V0X3ByZXBhcmUoc3RydWN0IGludGVs
X3VjICp1YykKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsKIAotCWlmICgh
aW50ZWxfZ3VjX2lzX3JlYWR5KGd1YykpCisJdWMtPnJlc2V0X2luX3Byb2dyZXNzID0gdHJ1ZTsK
KworCS8qIE5vdGhpbmcgdG8gZG8gaWYgR3VDIGlzbid0IHN1cHBvcnRlZCAqLworCWlmICghaW50
ZWxfdWNfc3VwcG9ydHNfZ3VjKHVjKSkKIAkJcmV0dXJuOwogCisJLyogRmlybXdhcmUgZXhwZWN0
ZWQgdG8gYmUgcnVubmluZyB3aGVuIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkICovCisJaWYgKCFp
bnRlbF9ndWNfaXNfcmVhZHkoZ3VjKSkKKwkJZ290byBzYW5pdGl6ZTsKKworCWlmIChpbnRlbF91
Y191c2VzX2d1Y19zdWJtaXNzaW9uKHVjKSkKKwkJaW50ZWxfZ3VjX3N1Ym1pc3Npb25fcmVzZXRf
cHJlcGFyZShndWMpOworCitzYW5pdGl6ZToKIAlfX3VjX3Nhbml0aXplKHVjKTsKIH0KIAordm9p
ZCBpbnRlbF91Y19yZXNldChzdHJ1Y3QgaW50ZWxfdWMgKnVjLCBib29sIHN0YWxsZWQpCit7CisJ
c3RydWN0IGludGVsX2d1YyAqZ3VjID0gJnVjLT5ndWM7CisKKwkvKiBGaXJtd2FyZSBjYW4gbm90
IGJlIHJ1bm5pbmcgd2hlbiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCAgKi8KKwlpZiAoaW50ZWxf
dWNfdXNlc19ndWNfc3VibWlzc2lvbih1YykpCisJCWludGVsX2d1Y19zdWJtaXNzaW9uX3Jlc2V0
KGd1Yywgc3RhbGxlZCk7Cit9CisKK3ZvaWQgaW50ZWxfdWNfcmVzZXRfZmluaXNoKHN0cnVjdCBp
bnRlbF91YyAqdWMpCit7CisJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJnVjLT5ndWM7CisKKwl1
Yy0+cmVzZXRfaW5fcHJvZ3Jlc3MgPSBmYWxzZTsKKworCS8qIEZpcm13YXJlIGV4cGVjdGVkIHRv
IGJlIHJ1bm5pbmcgd2hlbiB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCAqLworCWlmIChpbnRlbF9n
dWNfaXNfZndfcnVubmluZyhndWMpICYmIGludGVsX3VjX3VzZXNfZ3VjX3N1Ym1pc3Npb24odWMp
KQorCQlpbnRlbF9ndWNfc3VibWlzc2lvbl9yZXNldF9maW5pc2goZ3VjKTsKK30KKwordm9pZCBp
bnRlbF91Y19jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX3VjICp1YykKK3sKKwlzdHJ1Y3Qg
aW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsKKworCS8qIEZpcm13YXJlIGNhbiBub3QgYmUgcnVu
bmluZyB3aGVuIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkICAqLworCWlmIChpbnRlbF91Y191c2Vz
X2d1Y19zdWJtaXNzaW9uKHVjKSkKKwkJaW50ZWxfZ3VjX3N1Ym1pc3Npb25fY2FuY2VsX3JlcXVl
c3RzKGd1Yyk7Cit9CisKIHZvaWQgaW50ZWxfdWNfcnVudGltZV9zdXNwZW5kKHN0cnVjdCBpbnRl
bF91YyAqdWMpCiB7CiAJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJnVjLT5ndWM7Ci0JaW50IGVy
cjsKIAogCWlmICghaW50ZWxfZ3VjX2lzX3JlYWR5KGd1YykpCiAJCXJldHVybjsKIAotCWVyciA9
IGludGVsX2d1Y19zdXNwZW5kKGd1Yyk7Ci0JaWYgKGVycikKLQkJRFJNX0RFQlVHX0RSSVZFUigi
RmFpbGVkIHRvIHN1c3BlbmQgR3VDLCBlcnI9JWQiLCBlcnIpOworCS8qCisJICogV2FpdCBmb3Ig
YW55IG91dHN0YW5kaW5nIENUQiBiZWZvcmUgdGVhcmluZyBkb3duIGNvbW11bmljYXRpb24gL3cg
dGhlCisJICogR3VDLgorCSAqLworI2RlZmluZSBPVVRTVEFORElOR19DVEJfVElNRU9VVF9QRVJJ
T0QJKEhaIC8gNSkKKwlpbnRlbF9ndWNfd2FpdF9mb3JfcGVuZGluZ19tc2coZ3VjLCAmZ3VjLT5v
dXRzdGFuZGluZ19zdWJtaXNzaW9uX2cyaCwKKwkJCQkgICAgICAgZmFsc2UsIE9VVFNUQU5ESU5H
X0NUQl9USU1FT1VUX1BFUklPRCk7CisJR0VNX1dBUk5fT04oYXRvbWljX3JlYWQoJmd1Yy0+b3V0
c3RhbmRpbmdfc3VibWlzc2lvbl9nMmgpKTsKIAogCWd1Y19kaXNhYmxlX2NvbW11bmljYXRpb24o
Z3VjKTsKIH0KQEAgLTU5MCwxMiArNjI4LDE2IEBAIHZvaWQgaW50ZWxfdWNfc3VzcGVuZChzdHJ1
Y3QgaW50ZWxfdWMgKnVjKQogewogCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZ1Yy0+Z3VjOwog
CWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCWludCBlcnI7CiAKIAlpZiAoIWludGVsX2d1Y19p
c19yZWFkeShndWMpKQogCQlyZXR1cm47CiAKLQl3aXRoX2ludGVsX3J1bnRpbWVfcG0odWNfdG9f
Z3QodWMpLT51bmNvcmUtPnJwbSwgd2FrZXJlZikKLQkJaW50ZWxfdWNfcnVudGltZV9zdXNwZW5k
KHVjKTsKKwl3aXRoX2ludGVsX3J1bnRpbWVfcG0oJnVjX3RvX2d0KHVjKS0+aTkxNS0+cnVudGlt
ZV9wbSwgd2FrZXJlZikgeworCQllcnIgPSBpbnRlbF9ndWNfc3VzcGVuZChndWMpOworCQlpZiAo
ZXJyKQorCQkJRFJNX0RFQlVHX0RSSVZFUigiRmFpbGVkIHRvIHN1c3BlbmQgR3VDLCBlcnI9JWQi
LCBlcnIpOworCX0KIH0KIAogc3RhdGljIGludCBfX3VjX3Jlc3VtZShzdHJ1Y3QgaW50ZWxfdWMg
KnVjLCBib29sIGVuYWJsZV9jb21tdW5pY2F0aW9uKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2lu
dGVsX3VjLmgKaW5kZXggOWM5NTRjNTg5ZWRmLi5lMmRhMmI2ZTc2ZTEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfdWMuaApAQCAtMzAsMTMgKzMwLDE5IEBAIHN0cnVjdCBpbnRlbF91
YyB7CiAKIAkvKiBTbmFwc2hvdCBvZiBHdUMgbG9nIGZyb20gbGFzdCBmYWlsZWQgbG9hZCAqLwog
CXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpsb2FkX2Vycl9sb2c7CisKKwlib29sIHJlc2V0
X2luX3Byb2dyZXNzOwogfTsKIAogdm9pZCBpbnRlbF91Y19pbml0X2Vhcmx5KHN0cnVjdCBpbnRl
bF91YyAqdWMpOwordm9pZCBpbnRlbF91Y19pbml0X2xhdGUoc3RydWN0IGludGVsX3VjICp1Yyk7
CiB2b2lkIGludGVsX3VjX2RyaXZlcl9sYXRlX3JlbGVhc2Uoc3RydWN0IGludGVsX3VjICp1Yyk7
CiB2b2lkIGludGVsX3VjX2RyaXZlcl9yZW1vdmUoc3RydWN0IGludGVsX3VjICp1Yyk7CiB2b2lk
IGludGVsX3VjX2luaXRfbW1pbyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsKIHZvaWQgaW50ZWxfdWNf
cmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsKK3ZvaWQgaW50ZWxfdWNfcmVzZXQo
c3RydWN0IGludGVsX3VjICp1YywgYm9vbCBzdGFsbGVkKTsKK3ZvaWQgaW50ZWxfdWNfcmVzZXRf
ZmluaXNoKHN0cnVjdCBpbnRlbF91YyAqdWMpOwordm9pZCBpbnRlbF91Y19jYW5jZWxfcmVxdWVz
dHMoc3RydWN0IGludGVsX3VjICp1Yyk7CiB2b2lkIGludGVsX3VjX3N1c3BlbmQoc3RydWN0IGlu
dGVsX3VjICp1Yyk7CiB2b2lkIGludGVsX3VjX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgaW50ZWxf
dWMgKnVjKTsKIGludCBpbnRlbF91Y19yZXN1bWUoc3RydWN0IGludGVsX3VjICp1Yyk7CkBAIC04
MSw2ICs4NywxMSBAQCB1Y19zdGF0ZV9jaGVja2VycyhndWMsIGd1Y19zdWJtaXNzaW9uKTsKICN1
bmRlZiB1Y19zdGF0ZV9jaGVja2VycwogI3VuZGVmIF9fdWNfc3RhdGVfY2hlY2tlcgogCitzdGF0
aWMgaW5saW5lIGludCBpbnRlbF91Y193YWl0X2Zvcl9pZGxlKHN0cnVjdCBpbnRlbF91YyAqdWMs
IGxvbmcgdGltZW91dCkKK3sKKwlyZXR1cm4gaW50ZWxfZ3VjX3dhaXRfZm9yX2lkbGUoJnVjLT5n
dWMsIHRpbWVvdXQpOworfQorCiAjZGVmaW5lIGludGVsX3VjX29wc19mdW5jdGlvbihfTkFNRSwg
X09QUywgX1RZUEUsIF9SRVQpIFwKIHN0YXRpYyBpbmxpbmUgX1RZUEUgaW50ZWxfdWNfIyNfTkFN
RShzdHJ1Y3QgaW50ZWxfdWMgKnVjKSBcCiB7IFwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2Zz
LmMKaW5kZXggY2M3NDU3NTFhYzUzLi5hOTA4NDc4OWRlZmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZGVidWdmcy5jCkBAIC0zNiw2ICszNiw3IEBACiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfY2xv
Y2tfdXRpbHMuaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUgImd0L2ludGVs
X2d0X3BtLmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKICNpbmNsdWRlICJndC9pbnRlbF9n
dF9yZXF1ZXN0cy5oIgogI2luY2x1ZGUgImd0L2ludGVsX3Jlc2V0LmgiCiAjaW5jbHVkZSAiZ3Qv
aW50ZWxfcmM2LmgiCkBAIC00OSw2ICs1MCw3IEBACiAjaW5jbHVkZSAiaTkxNV90cmFjZS5oIgog
I2luY2x1ZGUgImludGVsX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfc2lkZWJhbmQuaCIKKyNpbmNs
dWRlICJndC9pbnRlbF9scmNfcmVnLmgiCiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKm5vZGVfdG9faTkxNShzdHJ1Y3QgZHJtX2luZm9fbm9kZSAqbm9kZSkKIHsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmc19wYXJhbXMuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmc19wYXJhbXMuYwppbmRleCA0ZTJiMDc3Njky
Y2IuLjhlY2Q4YjQyZjA0OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
ZWJ1Z2ZzX3BhcmFtcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmc19w
YXJhbXMuYwpAQCAtNiw5ICs2LDIwIEBACiAjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CiAKICNp
bmNsdWRlICJpOTE1X2RlYnVnZnNfcGFyYW1zLmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIK
KyNpbmNsdWRlICJndC91Yy9pbnRlbF9ndWMuaCIKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2lu
Y2x1ZGUgImk5MTVfcGFyYW1zLmgiCiAKKyNkZWZpbmUgTUFUQ0hfREVCVUdGU19OT0RFX05BTUUo
X2ZpbGUsIF9uYW1lKQkoc3RyY21wKChfZmlsZSktPmZfcGF0aC5kZW50cnktPmRfbmFtZS5uYW1l
LCAoX25hbWUpKSA9PSAwKQorCisjZGVmaW5lIEdFVF9JOTE1KGk5MTUsIG5hbWUsIHB0cikJXAor
CWRvIHsJXAorCQlzdHJ1Y3QgaTkxNV9wYXJhbXMgKnBhcmFtczsJXAorCQlwYXJhbXMgPSBjb250
YWluZXJfb2YoKCh2b2lkICopIChwdHIpKSwgdHlwZW9mKCpwYXJhbXMpLCBuYW1lKTsJXAorCQko
aTkxNSkgPSBjb250YWluZXJfb2YocGFyYW1zLCB0eXBlb2YoKihpOTE1KSksIHBhcmFtcyk7CVwK
Kwl9IHdoaWxlKDApCisKIC8qIGludCBwYXJhbSAqLwogc3RhdGljIGludCBpOTE1X3BhcmFtX2lu
dF9zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIHsKQEAgLTI0LDYgKzM1LDE2
IEBAIHN0YXRpYyBpbnQgaTkxNV9wYXJhbV9pbnRfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBz
dHJ1Y3QgZmlsZSAqZmlsZSkKIAlyZXR1cm4gc2luZ2xlX29wZW4oZmlsZSwgaTkxNV9wYXJhbV9p
bnRfc2hvdywgaW5vZGUtPmlfcHJpdmF0ZSk7CiB9CiAKK3N0YXRpYyBpbnQgbm90aWZ5X2d1Yyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlpbnQgcmV0ID0gMDsKKworCWlmIChp
bnRlbF91Y191c2VzX2d1Y19zdWJtaXNzaW9uKCZpOTE1LT5ndC51YykpCisJCXJldCA9IGludGVs
X2d1Y19nbG9iYWxfcG9saWNpZXNfdXBkYXRlKCZpOTE1LT5ndC51Yy5ndWMpOworCisJcmV0dXJu
IHJldDsKK30KKwogc3RhdGljIHNzaXplX3QgaTkxNV9wYXJhbV9pbnRfd3JpdGUoc3RydWN0IGZp
bGUgKmZpbGUsCiAJCQkJICAgIGNvbnN0IGNoYXIgX191c2VyICp1YnVmLCBzaXplX3QgbGVuLAog
CQkJCSAgICBsb2ZmX3QgKm9mZnApCkBAIC04MSw4ICsxMDIsMTAgQEAgc3RhdGljIHNzaXplX3Qg
aTkxNV9wYXJhbV91aW50X3dyaXRlKHN0cnVjdCBmaWxlICpmaWxlLAogCQkJCSAgICAgY29uc3Qg
Y2hhciBfX3VzZXIgKnVidWYsIHNpemVfdCBsZW4sCiAJCQkJICAgICBsb2ZmX3QgKm9mZnApCiB7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTU7CiAJc3RydWN0IHNlcV9maWxlICptID0g
ZmlsZS0+cHJpdmF0ZV9kYXRhOwogCXVuc2lnbmVkIGludCAqdmFsdWUgPSBtLT5wcml2YXRlOwor
CXVuc2lnbmVkIGludCBvbGQgPSAqdmFsdWU7CiAJaW50IHJldDsKIAogCXJldCA9IGtzdHJ0b3Vp
bnRfZnJvbV91c2VyKHVidWYsIGxlbiwgMCwgdmFsdWUpOwpAQCAtOTUsNiArMTE4LDE0IEBAIHN0
YXRpYyBzc2l6ZV90IGk5MTVfcGFyYW1fdWludF93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwKIAkJ
CSp2YWx1ZSA9IGI7CiAJfQogCisJaWYgKCFyZXQgJiYgTUFUQ0hfREVCVUdGU19OT0RFX05BTUUo
ZmlsZSwgInJlc2V0IikpIHsKKwkJR0VUX0k5MTUoaTkxNSwgcmVzZXQsIHZhbHVlKTsKKworCQly
ZXQgPSBub3RpZnlfZ3VjKGk5MTUpOworCQlpZiAocmV0KQorCQkJKnZhbHVlID0gb2xkOworCX0K
KwogCXJldHVybiByZXQgPzogbGVuOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2dlbV9ldmljdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXZp
Y3QuYwppbmRleCA0ZDJkNTlhOTk0MmIuLjJiNzNkZGIxMWM2NiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXZpY3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbV9ldmljdC5jCkBAIC0yNyw2ICsyNyw3IEBACiAgKi8KIAogI2luY2x1ZGUgImdl
bS9pOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3QuaCIKICNpbmNsdWRl
ICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5oIgogCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCmluZGV4IGEyYzU4YjU0YTU5Mi4uMGYwOGJjZmJl
OTY0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKQEAgLTE0MjksMjAgKzE0
MjksMzcgQEAgY2FwdHVyZV9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAog
ewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY2FwdHVyZV92bWEgKmNhcHR1cmUgPSBOVUxMOwogCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY29yZWR1bXAgKmVlOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9
IE5VTEw7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAogCWVlID0gaW50ZWxfZW5naW5lX2NvcmVk
dW1wX2FsbG9jKGVuZ2luZSwgR0ZQX0tFUk5FTCk7CiAJaWYgKCFlZSkKIAkJcmV0dXJuIE5VTEw7
CiAKLQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssIGZsYWdz
KTsKLQlycSA9IGludGVsX2VuZ2luZV9maW5kX2FjdGl2ZV9yZXF1ZXN0KGVuZ2luZSk7CisJY2Ug
PSBpbnRlbF9lbmdpbmVfZ2V0X2h1bmdfY29udGV4dChlbmdpbmUpOworCWlmIChjZSkgeworCQlp
bnRlbF9lbmdpbmVfY2xlYXJfaHVuZ19jb250ZXh0KGVuZ2luZSk7CisJCXJxID0gaW50ZWxfY29u
dGV4dF9maW5kX2FjdGl2ZV9yZXF1ZXN0KGNlKTsKKwkJaWYgKCFycSB8fCAhaTkxNV9yZXF1ZXN0
X3N0YXJ0ZWQocnEpKQorCQkJZ290byBub19yZXF1ZXN0X2NhcHR1cmU7CisJfSBlbHNlIHsKKwkJ
LyoKKwkJICogR2V0dGluZyBoZXJlIHdpdGggR3VDIGVuYWJsZWQgbWVhbnMgaXQgaXMgYSBmb3Jj
ZWQgZXJyb3IgY2FwdHVyZQorCQkgKiB3aXRoIG5vIGFjdHVhbCBoYW5nLiBTbywgbm8gbmVlZCB0
byBhdHRlbXB0IHRoZSBleGVjbGlzdCBzZWFyY2guCisJCSAqLworCQlpZiAoIWludGVsX3VjX3Vz
ZXNfZ3VjX3N1Ym1pc3Npb24oJmVuZ2luZS0+Z3QtPnVjKSkgeworCQkJc3Bpbl9sb2NrX2lycXNh
dmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CisJCQlycSA9IGludGVsX2Vu
Z2luZV9leGVjbGlzdF9maW5kX2h1bmdfcmVxdWVzdChlbmdpbmUpOworCQkJc3Bpbl91bmxvY2tf
aXJxcmVzdG9yZSgmZW5naW5lLT5zY2hlZF9lbmdpbmUtPmxvY2ssCisJCQkJCSAgICAgICBmbGFn
cyk7CisJCX0KKwl9CiAJaWYgKHJxKQogCQljYXB0dXJlID0gaW50ZWxfZW5naW5lX2NvcmVkdW1w
X2FkZF9yZXF1ZXN0KGVlLCBycSwKIAkJCQkJCQkgICAgQVRPTUlDX01BWUZBSUwpOwotCXNwaW5f
dW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5sb2NrLCBmbGFncyk7CiAJ
aWYgKCFjYXB0dXJlKSB7Citub19yZXF1ZXN0X2NhcHR1cmU6CiAJCWtmcmVlKGVlKTsKIAkJcmV0
dXJuIE5VTEw7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKaW5kZXggZTkxNWVjMDM0Yzk4Li43
ZDllOTBhYTNlYzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaApAQCAtNDE0Miw2ICs0MTQyLDcg
QEAgZW51bSB7CiAJRkFVTFRfQU5EX0NPTlRJTlVFIC8qIFVuc3VwcG9ydGVkICovCiB9OwogCisj
ZGVmaW5lIENUWF9HVFRfQUREUkVTU19NQVNLIEdFTk1BU0soMzEsIDEyKQogI2RlZmluZSBHRU44
X0NUWF9WQUxJRCAoMSA8PCAwKQogI2RlZmluZSBHRU44X0NUWF9GT1JDRV9QRF9SRVNUT1JFICgx
IDw8IDEpCiAjZGVmaW5lIEdFTjhfQ1RYX0ZPUkNFX1JFU1RPUkUgKDEgPDwgMikKQEAgLTEyMjg3
LDYgKzEyMjg4LDcgQEAgZW51bSBza2xfcG93ZXJfZ2F0ZSB7CiAKIC8qIE1PQ1MgKE1lbW9yeSBP
YmplY3QgQ29udHJvbCBTdGF0ZSkgcmVnaXN0ZXJzICovCiAjZGVmaW5lIEdFTjlfTE5DRkNNT0NT
KGkpCV9NTUlPKDB4YjAyMCArIChpKSAqIDQpCS8qIEwzIENhY2hlIENvbnRyb2wgKi8KKyNkZWZp
bmUgR0VOOV9MTkNGQ01PQ1NfUkVHX0NPVU5UCTMyCiAKICNkZWZpbmUgX19HRU45X1JDUzBfTU9D
UzAJMHhjODAwCiAjZGVmaW5lIEdFTjlfR0ZYX01PQ1MoaSkJX01NSU8oX19HRU45X1JDUzBfTU9D
UzAgKyAoaSkgKiA0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1
ZXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwppbmRleCA4NmI0Yzlm
MjYxM2QuLmZkZTMyNzhkZDliNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZXF1ZXN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAg
LTEyNSwzOSArMTI1LDE3IEBAIHN0YXRpYyB2b2lkIGk5MTVfZmVuY2VfcmVsZWFzZShzdHJ1Y3Qg
ZG1hX2ZlbmNlICpmZW5jZSkKIAlpOTE1X3N3X2ZlbmNlX2ZpbmkoJnJxLT5zZW1hcGhvcmUpOwog
CiAJLyoKLQkgKiBLZWVwIG9uZSByZXF1ZXN0IG9uIGVhY2ggZW5naW5lIGZvciByZXNlcnZlZCB1
c2UgdW5kZXIgbWVtcHJlc3N1cmUKLQkgKgotCSAqIFdlIGRvIG5vdCBob2xkIGEgcmVmZXJlbmNl
IHRvIHRoZSBlbmdpbmUgaGVyZSBhbmQgc28gaGF2ZSB0byBiZQotCSAqIHZlcnkgY2FyZWZ1bCBp
biB3aGF0IHJxLT5lbmdpbmUgd2UgcG9rZS4gVGhlIHZpcnR1YWwgZW5naW5lIGlzCi0JICogcmVm
ZXJlbmNlZCB2aWEgdGhlIHJxLT5jb250ZXh0IGFuZCB3ZSByZWxlYXNlZCB0aGF0IHJlZiBkdXJp
bmcKLQkgKiBpOTE1X3JlcXVlc3RfcmV0aXJlKCksIGVyZ28gd2UgbXVzdCBub3QgZGVyZWZlcmVu
Y2UgYSB2aXJ0dWFsCi0JICogZW5naW5lIGhlcmUuIE5vdCB0aGF0IHdlIHdvdWxkIHdhbnQgdG8s
IGFzIHRoZSBvbmx5IGNvbnN1bWVyIG9mCi0JICogdGhlIHJlc2VydmVkIGVuZ2luZS0+cmVxdWVz
dF9wb29sIGlzIHRoZSBwb3dlciBtYW5hZ2VtZW50IHBhcmtpbmcsCi0JICogd2hpY2ggbXVzdC1u
b3QtZmFpbCwgYW5kIHRoYXQgaXMgb25seSBydW4gb24gdGhlIHBoeXNpY2FsIGVuZ2luZXMuCi0J
ICoKLQkgKiBTaW5jZSB0aGUgcmVxdWVzdCBtdXN0IGhhdmUgYmVlbiBleGVjdXRlZCB0byBiZSBo
YXZlIGNvbXBsZXRlZCwKLQkgKiB3ZSBrbm93IHRoYXQgaXQgd2lsbCBoYXZlIGJlZW4gcHJvY2Vz
c2VkIGJ5IHRoZSBIVyBhbmQgd2lsbAotCSAqIG5vdCBiZSB1bnN1Ym1pdHRlZCBhZ2Fpbiwgc28g
cnEtPmVuZ2luZSBhbmQgcnEtPmV4ZWN1dGlvbl9tYXNrCi0JICogYXQgdGhpcyBwb2ludCBpcyBz
dGFibGUuIHJxLT5leGVjdXRpb25fbWFzayB3aWxsIGJlIGEgc2luZ2xlCi0JICogYml0IGlmIHRo
ZSBsYXN0IGFuZCBfb25seV8gZW5naW5lIGl0IGNvdWxkIGV4ZWN1dGlvbiBvbiB3YXMgYQotCSAq
IHBoeXNpY2FsIGVuZ2luZSwgaWYgaXQncyBtdWx0aXBsZSBiaXRzIHRoZW4gaXQgc3RhcnRlZCBv
biBhbmQKLQkgKiBjb3VsZCBzdGlsbCBiZSBvbiBhIHZpcnR1YWwgZW5naW5lLiBUaHVzIGlmIHRo
ZSBtYXNrIGlzIG5vdCBhCi0JICogcG93ZXItb2YtdHdvIHdlIGFzc3VtZSB0aGF0IHJxLT5lbmdp
bmUgbWF5IHN0aWxsIGJlIGEgdmlydHVhbAotCSAqIGVuZ2luZSBhbmQgc28gYSBkYW5nbGluZyBp
bnZhbGlkIHBvaW50ZXIgdGhhdCB3ZSBjYW5ub3QgZGVyZWZlcmVuY2UKLQkgKgotCSAqIEZvciBl
eGFtcGxlLCBjb25zaWRlciB0aGUgZmxvdyBvZiBhIGJvbmRlZCByZXF1ZXN0IHRocm91Z2ggYSB2
aXJ0dWFsCi0JICogZW5naW5lLiBUaGUgcmVxdWVzdCBpcyBjcmVhdGVkIHdpdGggYSB3aWRlIGVu
Z2luZSBtYXNrIChhbGwgZW5naW5lcwotCSAqIHRoYXQgd2UgbWlnaHQgZXhlY3V0ZSBvbikuIE9u
IHByb2Nlc3NpbmcgdGhlIGJvbmQsIHRoZSByZXF1ZXN0IG1hc2sKLQkgKiBpcyByZWR1Y2VkIHRv
IG9uZSBvciBtb3JlIGVuZ2luZXMuIElmIHRoZSByZXF1ZXN0IGlzIHN1YnNlcXVlbnRseQotCSAq
IGJvdW5kIHRvIGEgc2luZ2xlIGVuZ2luZSwgaXQgd2lsbCB0aGVuIGJlIGNvbnN0cmFpbmVkIHRv
IG9ubHkKLQkgKiBleGVjdXRlIG9uIHRoYXQgZW5naW5lIGFuZCBuZXZlciByZXR1cm5lZCB0byB0
aGUgdmlydHVhbCBlbmdpbmUKLQkgKiBhZnRlciB0aW1lc2xpY2luZyBhd2F5LCBzZWUgX191bndp
bmRfaW5jb21wbGV0ZV9yZXF1ZXN0cygpLiBUaHVzIHdlCi0JICoga25vdyB0aGF0IGlmIHRoZSBy
cS0+ZXhlY3V0aW9uX21hc2sgaXMgYSBzaW5nbGUgYml0LCBycS0+ZW5naW5lCi0JICogY2FuIGJl
IGEgcGh5c2ljYWwgZW5naW5lIHdpdGggdGhlIGV4YWN0IGNvcnJlc3BvbmRpbmcgbWFzay4KKwkg
KiBLZWVwIG9uZSByZXF1ZXN0IG9uIGVhY2ggZW5naW5lIGZvciByZXNlcnZlZCB1c2UgdW5kZXIg
bWVtcHJlc3N1cmUsCisJICogZG8gbm90IHVzZSB3aXRoIHZpcnR1YWwgZW5naW5lcyBhcyB0aGlz
IHJlYWxseSBpcyBvbmx5IG5lZWRlZCBmb3IKKwkgKiBrZXJuZWwgY29udGV4dHMuCiAJICovCi0J
aWYgKGlzX3Bvd2VyX29mXzIocnEtPmV4ZWN1dGlvbl9tYXNrKSAmJgotCSAgICAhY21weGNoZygm
cnEtPmVuZ2luZS0+cmVxdWVzdF9wb29sLCBOVUxMLCBycSkpCisJaWYgKCFpbnRlbF9lbmdpbmVf
aXNfdmlydHVhbChycS0+ZW5naW5lKSAmJgorCSAgICAhY21weGNoZygmcnEtPmVuZ2luZS0+cmVx
dWVzdF9wb29sLCBOVUxMLCBycSkpIHsKKwkJaW50ZWxfY29udGV4dF9wdXQocnEtPmNvbnRleHQp
OwogCQlyZXR1cm47CisJfQorCisJaW50ZWxfY29udGV4dF9wdXQocnEtPmNvbnRleHQpOwogCiAJ
a21lbV9jYWNoZV9mcmVlKGdsb2JhbC5zbGFiX3JlcXVlc3RzLCBycSk7CiB9CkBAIC0yMDQsNyAr
MTgyLDcgQEAgc3RhdGljIGJvb2wgaXJxX3dvcmtfaW1tKHN0cnVjdCBpcnFfd29yayAqd3JrKQog
CXJldHVybiBmYWxzZTsKIH0KIAotc3RhdGljIHZvaWQgX19ub3RpZnlfZXhlY3V0ZV9jYl9pbW0o
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit2b2lkIGk5MTVfcmVxdWVzdF9ub3RpZnlfZXhlY3V0
ZV9jYl9pbW0oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CiAJX19ub3RpZnlfZXhlY3V0ZV9j
YihycSwgaXJxX3dvcmtfaW1tKTsKIH0KQEAgLTI3OCwzNyArMjU2LDYgQEAgaTkxNV9yZXF1ZXN0
X2FjdGl2ZV9lbmdpbmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJcmV0dXJuIHJldDsKIH0K
IAotCi1zdGF0aWMgdm9pZCByZW1vdmVfZnJvbV9lbmdpbmUoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEpCi17Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCAqbG9ja2VkOwotCi0JLyoK
LQkgKiBWaXJ0dWFsIGVuZ2luZXMgY29tcGxpY2F0ZSBhY3F1aXJpbmcgdGhlIGVuZ2luZSB0aW1l
bGluZSBsb2NrLAotCSAqIGFzIHRoZWlyIHJxLT5lbmdpbmUgcG9pbnRlciBpcyBub3Qgc3RhYmxl
IHVudGlsIHVuZGVyIHRoYXQKLQkgKiBlbmdpbmUgbG9jay4gVGhlIHNpbXBsZSBwbG95IHdlIHVz
ZSBpcyB0byB0YWtlIHRoZSBsb2NrIHRoZW4KLQkgKiBjaGVjayB0aGF0IHRoZSBycSBzdGlsbCBi
ZWxvbmdzIHRvIHRoZSBuZXdseSBsb2NrZWQgZW5naW5lLgotCSAqLwotCWxvY2tlZCA9IFJFQURf
T05DRShycS0+ZW5naW5lKTsKLQlzcGluX2xvY2tfaXJxKCZsb2NrZWQtPnNjaGVkX2VuZ2luZS0+
bG9jayk7Ci0Jd2hpbGUgKHVubGlrZWx5KGxvY2tlZCAhPSAoZW5naW5lID0gUkVBRF9PTkNFKHJx
LT5lbmdpbmUpKSkpIHsKLQkJc3Bpbl91bmxvY2soJmxvY2tlZC0+c2NoZWRfZW5naW5lLT5sb2Nr
KTsKLQkJc3Bpbl9sb2NrKCZlbmdpbmUtPnNjaGVkX2VuZ2luZS0+bG9jayk7Ci0JCWxvY2tlZCA9
IGVuZ2luZTsKLQl9Ci0JbGlzdF9kZWxfaW5pdCgmcnEtPnNjaGVkLmxpbmspOwotCi0JY2xlYXJf
Yml0KEk5MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZycS0+ZmVuY2UuZmxhZ3MpOwotCWNsZWFyX2Jp
dChJOTE1X0ZFTkNFX0ZMQUdfSE9MRCwgJnJxLT5mZW5jZS5mbGFncyk7Ci0KLQkvKiBQcmV2ZW50
IGZ1cnRoZXIgX19hd2FpdF9leGVjdXRpb24oKSByZWdpc3RlcmluZyBhIGNiLCB0aGVuIGZsdXNo
ICovCi0Jc2V0X2JpdChJOTE1X0ZFTkNFX0ZMQUdfQUNUSVZFLCAmcnEtPmZlbmNlLmZsYWdzKTsK
LQotCXNwaW5fdW5sb2NrX2lycSgmbG9ja2VkLT5zY2hlZF9lbmdpbmUtPmxvY2spOwotCi0JX19u
b3RpZnlfZXhlY3V0ZV9jYl9pbW0ocnEpOwotfQotCiBzdGF0aWMgdm9pZCBfX3JxX2luaXRfd2F0
Y2hkb2coc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CiAJcnEtPndhdGNoZG9nLnRpbWVyLmZ1
bmN0aW9uID0gTlVMTDsKQEAgLTQwNSw4ICszNTIsNyBAQCBib29sIGk5MTVfcmVxdWVzdF9yZXRp
cmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJICogYWZ0ZXIgcmVtb3ZpbmcgdGhlIGJyZWFk
Y3J1bWIgYW5kIHNpZ25hbGluZyBpdCwgc28gdGhhdCB3ZSBkbyBub3QKIAkgKiBpbmFkdmVydGVu
dGx5IGF0dGFjaCB0aGUgYnJlYWRjcnVtYiB0byBhIGNvbXBsZXRlZCByZXF1ZXN0LgogCSAqLwot
CWlmICghbGlzdF9lbXB0eSgmcnEtPnNjaGVkLmxpbmspKQotCQlyZW1vdmVfZnJvbV9lbmdpbmUo
cnEpOworCXJxLT5lbmdpbmUtPnJlbW92ZV9hY3RpdmVfcmVxdWVzdChycSk7CiAJR0VNX0JVR19P
TighbGxpc3RfZW1wdHkoJnJxLT5leGVjdXRlX2NiKSk7CiAKIAlfX2xpc3RfZGVsX2VudHJ5KCZy
cS0+bGluayk7IC8qIHBvaXNvbiBuZWl0aGVyIHByZXYvbmV4dCAoUkNVIHdhbGtzKSAqLwpAQCAt
NDMxLDYgKzM3Nyw3IEBAIHZvaWQgaTkxNV9yZXF1ZXN0X3JldGlyZV91cHRvKHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxKQogCiAJZG8gewogCQl0bXAgPSBsaXN0X2ZpcnN0X2VudHJ5KCZ0bC0+cmVx
dWVzdHMsIHR5cGVvZigqdG1wKSwgbGluayk7CisJCUdFTV9CVUdfT04oIWk5MTVfcmVxdWVzdF9j
b21wbGV0ZWQodG1wKSk7CiAJfSB3aGlsZSAoaTkxNV9yZXF1ZXN0X3JldGlyZSh0bXApICYmIHRt
cCAhPSBycSk7CiB9CiAKQEAgLTUzNiw3ICs0ODMsNyBAQCBfX2F3YWl0X2V4ZWN1dGlvbihzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAlpZiAobGxpc3RfYWRkKCZjYi0+d29yay5ub2RlLmxsaXN0
LCAmc2lnbmFsLT5leGVjdXRlX2NiKSkgewogCQlpZiAoaTkxNV9yZXF1ZXN0X2lzX2FjdGl2ZShz
aWduYWwpIHx8CiAJCSAgICBfX3JlcXVlc3RfaW5fZmxpZ2h0KHNpZ25hbCkpCi0JCQlfX25vdGlm
eV9leGVjdXRlX2NiX2ltbShzaWduYWwpOworCQkJaTkxNV9yZXF1ZXN0X25vdGlmeV9leGVjdXRl
X2NiX2ltbShzaWduYWwpOwogCX0KIAogCXJldHVybiAwOwpAQCAtNjY3LDExICs2MTQsMTMgQEAg
Ym9vbCBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkK
IAkJCQkgICAgIHJlcXVlc3QtPnJpbmctPnZhZGRyICsgcmVxdWVzdC0+cG9zdGZpeCk7CiAKIAl0
cmFjZV9pOTE1X3JlcXVlc3RfZXhlY3V0ZShyZXF1ZXN0KTsKLQllbmdpbmUtPnNlcmlhbCsrOwor
CWlmIChlbmdpbmUtPmJ1bXBfc2VyaWFsKQorCQllbmdpbmUtPmJ1bXBfc2VyaWFsKGVuZ2luZSk7
CisKIAlyZXN1bHQgPSB0cnVlOwogCiAJR0VNX0JVR19PTih0ZXN0X2JpdChJOTE1X0ZFTkNFX0ZM
QUdfQUNUSVZFLCAmcmVxdWVzdC0+ZmVuY2UuZmxhZ3MpKTsKLQlsaXN0X21vdmVfdGFpbCgmcmVx
dWVzdC0+c2NoZWQubGluaywgJmVuZ2luZS0+c2NoZWRfZW5naW5lLT5yZXF1ZXN0cyk7CisJZW5n
aW5lLT5hZGRfYWN0aXZlX3JlcXVlc3QocmVxdWVzdCk7CiBhY3RpdmU6CiAJY2xlYXJfYml0KEk5
MTVfRkVOQ0VfRkxBR19QUVVFVUUsICZyZXF1ZXN0LT5mZW5jZS5mbGFncyk7CiAJc2V0X2JpdChJ
OTE1X0ZFTkNFX0ZMQUdfQUNUSVZFLCAmcmVxdWVzdC0+ZmVuY2UuZmxhZ3MpOwpAQCAtNzU5LDE4
ICs3MDgsNiBAQCB2b2lkIGk5MTVfcmVxdWVzdF91bnN1Ym1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpyZXF1ZXN0KQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+c2NoZWRfZW5naW5l
LT5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyB2b2lkIF9fY2FuY2VsX3JlcXVlc3Qoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCi17Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0g
TlVMTDsKLQotCWk5MTVfcmVxdWVzdF9hY3RpdmVfZW5naW5lKHJxLCAmZW5naW5lKTsKLQotCWlm
IChlbmdpbmUgJiYgaW50ZWxfZW5naW5lX3B1bHNlKGVuZ2luZSkpCi0JCWludGVsX2d0X2hhbmRs
ZV9lcnJvcihlbmdpbmUtPmd0LCBlbmdpbmUtPm1hc2ssIDAsCi0JCQkJICAgICAgInJlcXVlc3Qg
Y2FuY2VsbGF0aW9uIGJ5ICVzIiwKLQkJCQkgICAgICBjdXJyZW50LT5jb21tKTsKLX0KLQogdm9p
ZCBpOTE1X3JlcXVlc3RfY2FuY2VsKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBpbnQgZXJyb3Ip
CiB7CiAJaWYgKCFpOTE1X3JlcXVlc3Rfc2V0X2Vycm9yX29uY2UocnEsIGVycm9yKSkKQEAgLTc3
OCw3ICs3MTUsNyBAQCB2b2lkIGk5MTVfcmVxdWVzdF9jYW5jZWwoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEsIGludCBlcnJvcikKIAogCXNldF9iaXQoSTkxNV9GRU5DRV9GTEFHX1NFTlRJTkVMLCAm
cnEtPmZlbmNlLmZsYWdzKTsKIAotCV9fY2FuY2VsX3JlcXVlc3QocnEpOworCWludGVsX2NvbnRl
eHRfY2FuY2VsX3JlcXVlc3QocnEtPmNvbnRleHQsIHJxKTsKIH0KIAogc3RhdGljIGludCBfX2k5
MTVfc3dfZmVuY2VfY2FsbApAQCAtOTUwLDcgKzg4NywxOCBAQCBfX2k5MTVfcmVxdWVzdF9jcmVh
dGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBfdCBnZnApCiAJCX0KIAl9CiAKLQlycS0+
Y29udGV4dCA9IGNlOworCS8qCisJICogSG9sZCBhIHJlZmVyZW5jZSB0byB0aGUgaW50ZWxfY29u
dGV4dCBvdmVyIGxpZmUgb2YgYW4gaTkxNV9yZXF1ZXN0LgorCSAqIFdpdGhvdXQgdGhpcyBhbiBp
OTE1X3JlcXVlc3QgY2FuIGV4aXN0IGFmdGVyIHRoZSBjb250ZXh0IGhhcyBiZWVuCisJICogZGVz
dHJveWVkIChlLmcuIHJlcXVlc3QgcmV0aXJlZCwgY29udGV4dCBjbG9zZWQsIGJ1dCB1c2VyIHNw
YWNlIGhvbGRzCisJICogYSByZWZlcmVuY2UgdG8gdGhlIHJlcXVlc3QgZnJvbSBhbiBvdXQgZmVu
Y2UpLiBJbiB0aGUgY2FzZSBvZiBHdUMKKwkgKiBzdWJtaXNzaW9uICsgdmlydHVhbCBlbmdpbmUs
IHRoZSBlbmdpbmUgdGhhdCB0aGUgcmVxdWVzdCByZWZlcmVuY2VzCisJICogaXMgYWxzbyBkZXN0
cm95ZWQgd2hpY2ggY2FuIHRyaWdnZXIgYmFkIHBvaW50ZXIgZHJlZiBpbiBmZW5jZSBvcHMKKwkg
KiAoZS5nLiBpOTE1X2ZlbmNlX2dldF9kcml2ZXJfbmFtZSkuIFdlIGNvdWxkIGxpa2VseSBjaGFu
Z2UgdGhlc2UKKwkgKiBmdW5jdGlvbnMgdG8gYXZvaWQgdG91Y2hpbmcgdGhlIGVuZ2luZSBidXQg
bGV0J3MganVzdCBiZSBzYWZlIGFuZAorCSAqIGhvbGQgdGhlIGludGVsX2NvbnRleHQgcmVmZXJl
bmNlLgorCSAqLworCXJxLT5jb250ZXh0ID0gaW50ZWxfY29udGV4dF9nZXQoY2UpOwogCXJxLT5l
bmdpbmUgPSBjZS0+ZW5naW5lOwogCXJxLT5yaW5nID0gY2UtPnJpbmc7CiAJcnEtPmV4ZWN1dGlv
bl9tYXNrID0gY2UtPmVuZ2luZS0+bWFzazsKQEAgLTEwMjcsNiArOTc1LDcgQEAgX19pOTE1X3Jl
cXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQogCUdFTV9C
VUdfT04oIWxpc3RfZW1wdHkoJnJxLT5zY2hlZC53YWl0ZXJzX2xpc3QpKTsKIAogZXJyX2ZyZWU6
CisJaW50ZWxfY29udGV4dF9wdXQoY2UpOwogCWttZW1fY2FjaGVfZnJlZShnbG9iYWwuc2xhYl9y
ZXF1ZXN0cywgcnEpOwogZXJyX3VucmVzZXJ2ZToKIAlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsK
QEAgLTEzMTcsNiArMTI2Niw5IEBAIF9faTkxNV9yZXF1ZXN0X2F3YWl0X2V4ZWN1dGlvbihzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICp0bywKIAkJCXJldHVybiBlcnI7CiAJfQogCisJdHJhY2VfaTkxNV9y
ZXF1ZXN0X2RlcF90byh0byk7CisJdHJhY2VfaTkxNV9yZXF1ZXN0X2RlcF9mcm9tKGZyb20pOwor
CiAJLyogQ291cGxlIHRoZSBkZXBlbmRlbmN5IHRyZWUgZm9yIFBJIG9uIHRoaXMgZXhwb3NlZCB0
by0+ZmVuY2UgKi8KIAlpZiAodG8tPmVuZ2luZS0+c2NoZWRfZW5naW5lLT5zY2hlZHVsZSkgewog
CQllcnIgPSBpOTE1X3NjaGVkX25vZGVfYWRkX2RlcGVuZGVuY3koJnRvLT5zY2hlZCwKQEAgLTEz
NzksNiArMTMzMSw5IEBAIGk5MTVfcmVxdWVzdF9hd2FpdF9leHRlcm5hbChzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSwgc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiAJcmV0dXJuIGVycjsKIH0KIAor
c3RhdGljIGludAoraTkxNV9yZXF1ZXN0X2F3YWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVz
dCAqdG8sIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmZyb20pOworCiBpbnQKIGk5MTVfcmVxdWVzdF9h
d2FpdF9leGVjdXRpb24oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJCQkgICAgIHN0cnVjdCBk
bWFfZmVuY2UgKmZlbmNlKQpAQCAtMTQ2NCw3ICsxNDE5LDggQEAgaTkxNV9yZXF1ZXN0X2F3YWl0
X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqdG8sIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmZy
b20pCiAJCQlyZXR1cm4gcmV0OwogCX0KIAotCWlmIChpc19wb3dlcl9vZl8yKHRvLT5leGVjdXRp
b25fbWFzayB8IFJFQURfT05DRShmcm9tLT5leGVjdXRpb25fbWFzaykpKQorCWlmICghaW50ZWxf
ZW5naW5lX3VzZXNfZ3VjKHRvLT5lbmdpbmUpICYmCisJICAgIGlzX3Bvd2VyX29mXzIodG8tPmV4
ZWN1dGlvbl9tYXNrIHwgUkVBRF9PTkNFKGZyb20tPmV4ZWN1dGlvbl9tYXNrKSkpCiAJCXJldCA9
IGF3YWl0X3JlcXVlc3Rfc3VibWl0KHRvLCBmcm9tKTsKIAllbHNlCiAJCXJldCA9IGVtaXRfc2Vt
YXBob3JlX3dhaXQodG8sIGZyb20sIEk5MTVfRkVOQ0VfR0ZQKTsKQEAgLTE2MjUsNiArMTU4MSw4
IEBAIF9faTkxNV9yZXF1ZXN0X2FkZF90b190aW1lbGluZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKIAlwcmV2ID0gdG9fcmVxdWVzdChfX2k5MTVfYWN0aXZlX2ZlbmNlX3NldCgmdGltZWxpbmUt
Pmxhc3RfcmVxdWVzdCwKIAkJCQkJCSAgJnJxLT5mZW5jZSkpOwogCWlmIChwcmV2ICYmICFfX2k5
MTVfcmVxdWVzdF9pc19jb21wbGV0ZShwcmV2KSkgeworCQlib29sIHVzZXNfZ3VjID0gaW50ZWxf
ZW5naW5lX3VzZXNfZ3VjKHJxLT5lbmdpbmUpOworCiAJCS8qCiAJCSAqIFRoZSByZXF1ZXN0cyBh
cmUgc3VwcG9zZWQgdG8gYmUga2VwdCBpbiBvcmRlci4gSG93ZXZlciwKIAkJICogd2UgbmVlZCB0
byBiZSB3YXJ5IGluIGNhc2UgdGhlIHRpbWVsaW5lLT5sYXN0X3JlcXVlc3QKQEAgLTE2MzUsNyAr
MTU5Myw4IEBAIF9faTkxNV9yZXF1ZXN0X2FkZF90b190aW1lbGluZShzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKIAkJCSAgIGk5MTVfc2Vxbm9fcGFzc2VkKHByZXYtPmZlbmNlLnNlcW5vLAogCQkJ
CQkgICAgIHJxLT5mZW5jZS5zZXFubykpOwogCi0JCWlmIChpc19wb3dlcl9vZl8yKFJFQURfT05D
RShwcmV2LT5lbmdpbmUpLT5tYXNrIHwgcnEtPmVuZ2luZS0+bWFzaykpCisJCWlmICgoIXVzZXNf
Z3VjICYmIGlzX3Bvd2VyX29mXzIoUkVBRF9PTkNFKHByZXYtPmVuZ2luZSktPm1hc2sgfCBycS0+
ZW5naW5lLT5tYXNrKSkgfHwKKwkJICAgICh1c2VzX2d1YyAmJiBwcmV2LT5jb250ZXh0ID09IHJx
LT5jb250ZXh0KSkKIAkJCWk5MTVfc3dfZmVuY2VfYXdhaXRfc3dfZmVuY2UoJnJxLT5zdWJtaXQs
CiAJCQkJCQkgICAgICZwcmV2LT5zdWJtaXQsCiAJCQkJCQkgICAgICZycS0+c3VibWl0cSk7CkBA
IC0yMDc2LDYgKzIwMzUsNDcgQEAgdm9pZCBpOTE1X3JlcXVlc3Rfc2hvdyhzdHJ1Y3QgZHJtX3By
aW50ZXIgKm0sCiAJCSAgIG5hbWUpOwogfQogCitzdGF0aWMgYm9vbCBlbmdpbmVfbWF0Y2hfcmlu
ZyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQoreworCXUzMiByaW5nID0gRU5HSU5FX1JFQUQoZW5naW5lLCBSSU5HX1NUQVJUKTsKKworCXJl
dHVybiByaW5nID09IGk5MTVfZ2d0dF9vZmZzZXQocnEtPnJpbmctPnZtYSk7Cit9CisKK3N0YXRp
YyBib29sIG1hdGNoX3Jpbmcoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lOworCWJvb2wgZm91bmQ7CisJaW50IGk7CisKKwlpZiAoIWlu
dGVsX2VuZ2luZV9pc192aXJ0dWFsKHJxLT5lbmdpbmUpKQorCQlyZXR1cm4gZW5naW5lX21hdGNo
X3JpbmcocnEtPmVuZ2luZSwgcnEpOworCisJZm91bmQgPSBmYWxzZTsKKwlpID0gMDsKKwl3aGls
ZSAoKGVuZ2luZSA9IGludGVsX2VuZ2luZV9nZXRfc2libGluZyhycS0+ZW5naW5lLCBpKyspKSkg
eworCQlmb3VuZCA9IGVuZ2luZV9tYXRjaF9yaW5nKGVuZ2luZSwgcnEpOworCQlpZiAoZm91bmQp
CisJCQlicmVhazsKKwl9CisKKwlyZXR1cm4gZm91bmQ7Cit9CisKK2VudW0gaTkxNV9yZXF1ZXN0
X3N0YXRlIGk5MTVfdGVzdF9yZXF1ZXN0X3N0YXRlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQor
eworCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKKwkJcmV0dXJuIEk5MTVfUkVRVUVT
VF9DT01QTEVURTsKKworCWlmICghaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpKQorCQlyZXR1cm4g
STkxNV9SRVFVRVNUX1BFTkRJTkc7CisKKwlpZiAobWF0Y2hfcmluZyhycSkpCisJCXJldHVybiBJ
OTE1X1JFUVVFU1RfQUNUSVZFOworCisJcmV0dXJuIEk5MTVfUkVRVUVTVF9RVUVVRUQ7Cit9CisK
ICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9TRUxGVEVTVCkKICNpbmNsdWRlICJzZWxm
dGVzdHMvbW9ja19yZXF1ZXN0LmMiCiAjaW5jbHVkZSAic2VsZnRlc3RzL2k5MTVfcmVxdWVzdC5j
IgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaAppbmRleCA1ZGViNjVlYzVmYTUuLmEzZDQ3
MjhlYTA2YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKQEAgLTI4NSw2ICsyODUs
MTQgQEAgc3RydWN0IGk5MTVfcmVxdWVzdCB7CiAJCXN0cnVjdCBocnRpbWVyIHRpbWVyOwogCX0g
d2F0Y2hkb2c7CiAKKwkvKgorCSAqIFJlcXVlc3RzIG1heSBuZWVkIHRvIGJlIHN0YWxsZWQgd2hl
biB1c2luZyBHdUMgc3VibWlzc2lvbiB3YWl0aW5nIGZvcgorCSAqIGNlcnRhaW4gR3VDIG9wZXJh
dGlvbnMgdG8gY29tcGxldGUuIElmIHRoYXQgaXMgdGhlIGNhc2UsIHN0YWxsZWQKKwkgKiByZXF1
ZXN0cyBhcmUgYWRkZWQgdG8gYSBwZXIgY29udGV4dCBsaXN0IG9mIHN0YWxsZWQgcmVxdWVzdHMu
IFRoZQorCSAqIGJlbG93IGxpc3RfaGVhZCBpcyB0aGUgbGluayBpbiB0aGF0IGxpc3QuCisJICov
CisJc3RydWN0IGxpc3RfaGVhZCBndWNfZmVuY2VfbGluazsKKwogCUk5MTVfU0VMRlRFU1RfREVD
TEFSRShzdHJ1Y3QgewogCQlzdHJ1Y3QgbGlzdF9oZWFkIGxpbms7CiAJCXVuc2lnbmVkIGxvbmcg
ZGVsYXk7CkBAIC02MzksNCArNjQ3LDE3IEBAIGJvb2wKIGk5MTVfcmVxdWVzdF9hY3RpdmVfZW5n
aW5lKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogCQkJICAgc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqKmFjdGl2ZSk7CiAKK3ZvaWQgaTkxNV9yZXF1ZXN0X25vdGlmeV9leGVjdXRlX2NiX2ltbShz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7CisKK2VudW0gaTkxNV9yZXF1ZXN0X3N0YXRlCit7CisJ
STkxNV9SRVFVRVNUX1VOS05PV04gPSAwLAorCUk5MTVfUkVRVUVTVF9DT01QTEVURSwKKwlJOTE1
X1JFUVVFU1RfUEVORElORywKKwlJOTE1X1JFUVVFU1RfUVVFVUVELAorCUk5MTVfUkVRVUVTVF9B
Q1RJVkUsCit9OworCitlbnVtIGk5MTVfcmVxdWVzdF9zdGF0ZSBpOTE1X3Rlc3RfcmVxdWVzdF9z
dGF0ZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7CisKICNlbmRpZiAvKiBJOTE1X1JFUVVFU1Rf
SCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKaW5kZXggM2E1OGE5MTMwMzA5
Li44NzY2YTg2NDM0NjkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2No
ZWR1bGVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwpAQCAt
NDMxLDcgKzQzMSw3IEBAIHZvaWQgaTkxNV9yZXF1ZXN0X3Nob3dfd2l0aF9zY2hlZHVsZShzdHJ1
Y3QgZHJtX3ByaW50ZXIgKm0sCiAJcmN1X3JlYWRfdW5sb2NrKCk7CiB9CiAKLXZvaWQgaTkxNV9z
Y2hlZF9lbmdpbmVfZnJlZShzdHJ1Y3Qga3JlZiAqa3JlZikKK3N0YXRpYyB2b2lkIGRlZmF1bHRf
ZGVzdHJveShzdHJ1Y3Qga3JlZiAqa3JlZikKIHsKIAlzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUg
KnNjaGVkX2VuZ2luZSA9CiAJCWNvbnRhaW5lcl9vZihrcmVmLCB0eXBlb2YoKnNjaGVkX2VuZ2lu
ZSksIHJlZik7CkBAIC00NDAsNiArNDQwLDExIEBAIHZvaWQgaTkxNV9zY2hlZF9lbmdpbmVfZnJl
ZShzdHJ1Y3Qga3JlZiAqa3JlZikKIAlrZnJlZShzY2hlZF9lbmdpbmUpOwogfQogCitzdGF0aWMg
Ym9vbCBkZWZhdWx0X2Rpc2FibGVkKHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5n
aW5lKQoreworCXJldHVybiBmYWxzZTsKK30KKwogc3RydWN0IGk5MTVfc2NoZWRfZW5naW5lICoK
IGk5MTVfc2NoZWRfZW5naW5lX2NyZWF0ZSh1bnNpZ25lZCBpbnQgc3ViY2xhc3MpCiB7CkBAIC00
NTMsNiArNDU4LDggQEAgaTkxNV9zY2hlZF9lbmdpbmVfY3JlYXRlKHVuc2lnbmVkIGludCBzdWJj
bGFzcykKIAogCXNjaGVkX2VuZ2luZS0+cXVldWUgPSBSQl9ST09UX0NBQ0hFRDsKIAlzY2hlZF9l
bmdpbmUtPnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOworCXNjaGVkX2VuZ2luZS0+ZGVz
dHJveSA9IGRlZmF1bHRfZGVzdHJveTsKKwlzY2hlZF9lbmdpbmUtPmRpc2FibGVkID0gZGVmYXVs
dF9kaXNhYmxlZDsKIAogCUlOSVRfTElTVF9IRUFEKCZzY2hlZF9lbmdpbmUtPnJlcXVlc3RzKTsK
IAlJTklUX0xJU1RfSEVBRCgmc2NoZWRfZW5naW5lLT5ob2xkKTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3NjaGVkdWxlci5oCmluZGV4IDY1MGFiOGUwZGI5Zi4uZjRkOTgxMWFkZTViIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmgKQEAgLTUxLDggKzUxLDYgQEAgc3RhdGljIGlu
bGluZSB2b2lkIGk5MTVfcHJpb2xpc3RfZnJlZShzdHJ1Y3QgaTkxNV9wcmlvbGlzdCAqcCkKIHN0
cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqCiBpOTE1X3NjaGVkX2VuZ2luZV9jcmVhdGUodW5zaWdu
ZWQgaW50IHN1YmNsYXNzKTsKIAotdm9pZCBpOTE1X3NjaGVkX2VuZ2luZV9mcmVlKHN0cnVjdCBr
cmVmICprcmVmKTsKLQogc3RhdGljIGlubGluZSBzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKgog
aTkxNV9zY2hlZF9lbmdpbmVfZ2V0KHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5n
aW5lKQogewpAQCAtNjMsNyArNjEsNyBAQCBpOTE1X3NjaGVkX2VuZ2luZV9nZXQoc3RydWN0IGk5
MTVfc2NoZWRfZW5naW5lICpzY2hlZF9lbmdpbmUpCiBzdGF0aWMgaW5saW5lIHZvaWQKIGk5MTVf
c2NoZWRfZW5naW5lX3B1dChzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgKnNjaGVkX2VuZ2luZSkK
IHsKLQlrcmVmX3B1dCgmc2NoZWRfZW5naW5lLT5yZWYsIGk5MTVfc2NoZWRfZW5naW5lX2ZyZWUp
OworCWtyZWZfcHV0KCZzY2hlZF9lbmdpbmUtPnJlZiwgc2NoZWRfZW5naW5lLT5kZXN0cm95KTsK
IH0KIAogc3RhdGljIGlubGluZSBib29sCkBAIC05OCw0ICs5NiwxMCBAQCB2b2lkIGk5MTVfcmVx
dWVzdF9zaG93X3dpdGhfc2NoZWR1bGUoc3RydWN0IGRybV9wcmludGVyICptLAogCQkJCSAgICAg
Y29uc3QgY2hhciAqcHJlZml4LAogCQkJCSAgICAgaW50IGluZGVudCk7CiAKK3N0YXRpYyBpbmxp
bmUgYm9vbAoraTkxNV9zY2hlZF9lbmdpbmVfZGlzYWJsZWQoc3RydWN0IGk5MTVfc2NoZWRfZW5n
aW5lICpzY2hlZF9lbmdpbmUpCit7CisJcmV0dXJuIHNjaGVkX2VuZ2luZS0+ZGlzYWJsZWQoc2No
ZWRfZW5naW5lKTsKK30KKwogI2VuZGlmIC8qIF9JOTE1X1NDSEVEVUxFUl9IXyAqLwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJfdHlwZXMuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyX3R5cGVzLmgKaW5kZXggNTkzNWMzMTUyYmRj
Li5lYWVmMjMzZTkwODAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2No
ZWR1bGVyX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXJf
dHlwZXMuaApAQCAtMTYzLDYgKzE2MywxNiBAQCBzdHJ1Y3QgaTkxNV9zY2hlZF9lbmdpbmUgewog
CSAqLwogCXZvaWQgKnByaXZhdGVfZGF0YTsKIAorCS8qKgorCSAqIEBkZXN0cm95OiBkZXN0cm95
IHNjaGVkdWxlIGVuZ2luZSAvIGNsZWFudXAgaW4gYmFja2VuZAorCSAqLworCXZvaWQJKCpkZXN0
cm95KShzdHJ1Y3Qga3JlZiAqa3JlZik7CisKKwkvKioKKwkgKiBAZGlzYWJsZWQ6IGNoZWNrIGlm
IGJhY2tlbmQgaGFzIGRpc2FibGVkIHN1Ym1pc3Npb24KKwkgKi8KKwlib29sCSgqZGlzYWJsZWQp
KHN0cnVjdCBpOTE1X3NjaGVkX2VuZ2luZSAqc2NoZWRfZW5naW5lKTsKKwogCS8qKgogCSAqIEBr
aWNrX2JhY2tlbmQ6IGtpY2sgYmFja2VuZCBhZnRlciBhIHJlcXVlc3QncyBwcmlvcml0eSBoYXMg
Y2hhbmdlZAogCSAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90cmFj
ZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90cmFjZS5oCmluZGV4IDY3NzhhZDJhMTRh
NC4uOTM3ZDM3MDZhZjliIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Ry
YWNlLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90cmFjZS5oCkBAIC03OTQsMzAg
Kzc5NCw1MCBAQCBERUNMQVJFX0VWRU5UX0NMQVNTKGk5MTVfcmVxdWVzdCwKIAkgICAgVFBfU1RS
VUNUX19lbnRyeSgKIAkJCSAgICAgX19maWVsZCh1MzIsIGRldikKIAkJCSAgICAgX19maWVsZCh1
NjQsIGN0eCkKKwkJCSAgICAgX19maWVsZCh1MzIsIGd1Y19pZCkKIAkJCSAgICAgX19maWVsZCh1
MTYsIGNsYXNzKQogCQkJICAgICBfX2ZpZWxkKHUxNiwgaW5zdGFuY2UpCiAJCQkgICAgIF9fZmll
bGQodTMyLCBzZXFubykKKwkJCSAgICAgX19maWVsZCh1MzIsIHRhaWwpCiAJCQkgICAgICksCiAK
IAkgICAgVFBfZmFzdF9hc3NpZ24oCiAJCQkgICBfX2VudHJ5LT5kZXYgPSBycS0+ZW5naW5lLT5p
OTE1LT5kcm0ucHJpbWFyeS0+aW5kZXg7CiAJCQkgICBfX2VudHJ5LT5jbGFzcyA9IHJxLT5lbmdp
bmUtPnVhYmlfY2xhc3M7CiAJCQkgICBfX2VudHJ5LT5pbnN0YW5jZSA9IHJxLT5lbmdpbmUtPnVh
YmlfaW5zdGFuY2U7CisJCQkgICBfX2VudHJ5LT5ndWNfaWQgPSBycS0+Y29udGV4dC0+Z3VjX2lk
OwogCQkJICAgX19lbnRyeS0+Y3R4ID0gcnEtPmZlbmNlLmNvbnRleHQ7CiAJCQkgICBfX2VudHJ5
LT5zZXFubyA9IHJxLT5mZW5jZS5zZXFubzsKKwkJCSAgIF9fZW50cnktPnRhaWwgPSBycS0+dGFp
bDsKIAkJCSAgICksCiAKLQkgICAgVFBfcHJpbnRrKCJkZXY9JXUsIGVuZ2luZT0ldToldSwgY3R4
PSVsbHUsIHNlcW5vPSV1IiwKKwkgICAgVFBfcHJpbnRrKCJkZXY9JXUsIGVuZ2luZT0ldToldSwg
Z3VjX2lkPSV1LCBjdHg9JWxsdSwgc2Vxbm89JXUsIHRhaWw9JXUiLAogCQkgICAgICBfX2VudHJ5
LT5kZXYsIF9fZW50cnktPmNsYXNzLCBfX2VudHJ5LT5pbnN0YW5jZSwKLQkJICAgICAgX19lbnRy
eS0+Y3R4LCBfX2VudHJ5LT5zZXFubykKKwkJICAgICAgX19lbnRyeS0+Z3VjX2lkLCBfX2VudHJ5
LT5jdHgsIF9fZW50cnktPnNlcW5vLAorCQkgICAgICBfX2VudHJ5LT50YWlsKQogKTsKIAogREVG
SU5FX0VWRU5UKGk5MTVfcmVxdWVzdCwgaTkxNV9yZXF1ZXN0X2FkZCwKLQkgICAgVFBfUFJPVE8o
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpLAotCSAgICBUUF9BUkdTKHJxKQorCSAgICAgVFBfUFJP
VE8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpLAorCSAgICAgVFBfQVJHUyhycSkKICk7CiAKICNp
ZiBkZWZpbmVkKENPTkZJR19EUk1fSTkxNV9MT1dfTEVWRUxfVFJBQ0VQT0lOVFMpCitERUZJTkVf
RVZFTlQoaTkxNV9yZXF1ZXN0LCBpOTE1X3JlcXVlc3RfZGVwX3RvLAorCSAgICAgVFBfUFJPVE8o
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpLAorCSAgICAgVFBfQVJHUyhycSkKKyk7CisKK0RFRklO
RV9FVkVOVChpOTE1X3JlcXVlc3QsIGk5MTVfcmVxdWVzdF9kZXBfZnJvbSwKKwkgICAgIFRQX1BS
T1RPKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKSwKKwkgICAgIFRQX0FSR1MocnEpCispOworCitE
RUZJTkVfRVZFTlQoaTkxNV9yZXF1ZXN0LCBpOTE1X3JlcXVlc3RfZ3VjX3N1Ym1pdCwKKwkgICAg
IFRQX1BST1RPKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKSwKKwkgICAgIFRQX0FSR1MocnEpCisp
OworCiBERUZJTkVfRVZFTlQoaTkxNV9yZXF1ZXN0LCBpOTE1X3JlcXVlc3Rfc3VibWl0LAogCSAg
ICAgVFBfUFJPVE8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpLAogCSAgICAgVFBfQVJHUyhycSkK
QEAgLTg4NSw4ICs5MDUsMTE3IEBAIFRSQUNFX0VWRU5UKGk5MTVfcmVxdWVzdF9vdXQsCiAJCQkg
ICAgICBfX2VudHJ5LT5jdHgsIF9fZW50cnktPnNlcW5vLCBfX2VudHJ5LT5jb21wbGV0ZWQpCiAp
OwogCitERUNMQVJFX0VWRU5UX0NMQVNTKGludGVsX2NvbnRleHQsCisJICAgIFRQX1BST1RPKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgIFRQX0FSR1MoY2UpLAorCisJICAgIFRQX1NU
UlVDVF9fZW50cnkoCisJCQkgICAgIF9fZmllbGQodTMyLCBndWNfaWQpCisJCQkgICAgIF9fZmll
bGQoaW50LCBwaW5fY291bnQpCisJCQkgICAgIF9fZmllbGQodTMyLCBzY2hlZF9zdGF0ZSkKKwkJ
CSAgICAgX19maWVsZCh1MzIsIGd1Y19zY2hlZF9zdGF0ZV9ub19sb2NrKQorCQkJICAgICApLAor
CisJICAgIFRQX2Zhc3RfYXNzaWduKAorCQkJICAgX19lbnRyeS0+Z3VjX2lkID0gY2UtPmd1Y19p
ZDsKKwkJCSAgIF9fZW50cnktPnBpbl9jb3VudCA9IGF0b21pY19yZWFkKCZjZS0+cGluX2NvdW50
KTsKKwkJCSAgIF9fZW50cnktPnNjaGVkX3N0YXRlID0gY2UtPmd1Y19zdGF0ZS5zY2hlZF9zdGF0
ZTsKKwkJCSAgIF9fZW50cnktPmd1Y19zY2hlZF9zdGF0ZV9ub19sb2NrID0KKwkJCSAgIGF0b21p
Y19yZWFkKCZjZS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spOworCQkJICAgKSwKKworCSAgICBU
UF9wcmludGsoImd1Y19pZD0lZCwgcGluX2NvdW50PSVkIHNjaGVkX3N0YXRlPTB4JXgsMHgleCIs
CisJCSAgICAgIF9fZW50cnktPmd1Y19pZCwgX19lbnRyeS0+cGluX2NvdW50LCBfX2VudHJ5LT5z
Y2hlZF9zdGF0ZSwKKwkJICAgICAgX19lbnRyeS0+Z3VjX3NjaGVkX3N0YXRlX25vX2xvY2spCisp
OworCitERUZJTkVfRVZFTlQoaW50ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9yZXNldCwKKwkg
ICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgICBUUF9BUkdTKGNl
KQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRleHRfYmFuLAor
CSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1Mo
Y2UpCispOworCitERUZJTkVfRVZFTlQoaW50ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9yZWdp
c3RlciwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAgICBU
UF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2NvbnRl
eHRfZGVyZWdpc3RlciwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSks
CisJICAgICBUUF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGlu
dGVsX2NvbnRleHRfZGVyZWdpc3Rlcl9kb25lLAorCSAgICAgVFBfUFJPVE8oc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZFTlQoaW50
ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9zY2hlZF9lbmFibGUsCisJICAgICBUUF9QUk9UTyhz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJHUyhjZSkKKyk7CisKK0RFRklO
RV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0X3NjaGVkX2Rpc2FibGUsCisJICAg
ICBUUF9QUk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJHUyhjZSkK
Kyk7CisKK0RFRklORV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0X3NjaGVkX2Rv
bmUsCisJICAgICBUUF9QUk9UTyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBf
QVJHUyhjZSkKKyk7CisKK0RFRklORV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0
X2NyZWF0ZSwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSksCisJICAg
ICBUUF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRleHQsIGludGVsX2Nv
bnRleHRfZmVuY2VfcmVsZWFzZSwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSksCisJICAgICBUUF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2NvbnRl
eHQsIGludGVsX2NvbnRleHRfZnJlZSwKKwkgICAgIFRQX1BST1RPKHN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSksCisJICAgICBUUF9BUkdTKGNlKQorKTsKKworREVGSU5FX0VWRU5UKGludGVsX2Nv
bnRleHQsIGludGVsX2NvbnRleHRfc3RlYWxfZ3VjX2lkLAorCSAgICAgVFBfUFJPVE8oc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOworCitERUZJTkVfRVZF
TlQoaW50ZWxfY29udGV4dCwgaW50ZWxfY29udGV4dF9kb19waW4sCisJICAgICBUUF9QUk9UTyhz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpLAorCSAgICAgVFBfQVJHUyhjZSkKKyk7CisKK0RFRklO
RV9FVkVOVChpbnRlbF9jb250ZXh0LCBpbnRlbF9jb250ZXh0X2RvX3VucGluLAorCSAgICAgVFBf
UFJPVE8oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKSwKKwkgICAgIFRQX0FSR1MoY2UpCispOwor
CiAjZWxzZQogI2lmICFkZWZpbmVkKFRSQUNFX0hFQURFUl9NVUxUSV9SRUFEKQorc3RhdGljIGlu
bGluZSB2b2lkCit0cmFjZV9pOTE1X3JlcXVlc3RfZGVwX3RvKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2k5MTVfcmVxdWVzdF9kZXBf
ZnJvbShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lk
Cit0cmFjZV9pOTE1X3JlcXVlc3RfZ3VjX3N1Ym1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkK
K3sKK30KKwogc3RhdGljIGlubGluZSB2b2lkCiB0cmFjZV9pOTE1X3JlcXVlc3Rfc3VibWl0KHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewpAQCAtOTA2LDYgKzEwMzUsNzYgQEAgc3RhdGljIGlu
bGluZSB2b2lkCiB0cmFjZV9pOTE1X3JlcXVlc3Rfb3V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogewogfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfcmVzZXQo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3Ry
YWNlX2ludGVsX2NvbnRleHRfYmFuKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKwor
c3RhdGljIGlubGluZSB2b2lkCit0cmFjZV9pbnRlbF9jb250ZXh0X3JlZ2lzdGVyKHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lkCit0cmFjZV9pbnRl
bF9jb250ZXh0X2RlcmVnaXN0ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworfQorCitz
dGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfZGVyZWdpc3Rlcl9kb25lKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lkCit0cmFj
ZV9pbnRlbF9jb250ZXh0X3NjaGVkX2VuYWJsZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAordHJhY2VfaW50ZWxfY29udGV4dF9zY2hlZF9kaXNh
YmxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lk
Cit0cmFjZV9pbnRlbF9jb250ZXh0X3NjaGVkX2RvbmUoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfY3JlYXRl
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lkCit0
cmFjZV9pbnRlbF9jb250ZXh0X2ZlbmNlX3JlbGVhc2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfZnJlZShz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAordHJh
Y2VfaW50ZWxfY29udGV4dF9zdGVhbF9ndWNfaWQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQor
eworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK3RyYWNlX2ludGVsX2NvbnRleHRfZG9fcGluKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30KKworc3RhdGljIGlubGluZSB2b2lkCit0cmFj
ZV9pbnRlbF9jb250ZXh0X2RvX3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKK30K
ICNlbmRpZgogI2VuZGlmCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0
ZXN0cy9pOTE1X3JlcXVlc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1
X3JlcXVlc3QuYwppbmRleCBiZDVjOTZhNzdiYTMuLmQ2NzcxMGQxMDYxNSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X3JlcXVlc3QuYwpAQCAtMTMxMyw3ICsxMzEz
LDcgQEAgc3RhdGljIGludCBfX2xpdmVfcGFyYWxsZWxfZW5naW5lMSh2b2lkICphcmcpCiAJCWk5
MTVfcmVxdWVzdF9hZGQocnEpOwogCiAJCWVyciA9IDA7Ci0JCWlmIChpOTE1X3JlcXVlc3Rfd2Fp
dChycSwgMCwgSFogLyA1KSA8IDApCisJCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgSFop
IDwgMCkKIAkJCWVyciA9IC1FVElNRTsKIAkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiAJCWlmIChl
cnIpCkBAIC0xNDE5LDcgKzE0MTksNyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9wYXJhbGxlbF9zcGlu
KHZvaWQgKmFyZykKIAl9CiAJaWd0X3NwaW5uZXJfZW5kKCZzcGluKTsKIAotCWlmIChlcnIgPT0g
MCAmJiBpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgSFogLyA1KSA8IDApCisJaWYgKGVyciA9PSAw
ICYmIGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWikgPCAwKQogCQllcnIgPSAtRUlPOwogCWk5
MTVfcmVxdWVzdF9wdXQocnEpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9z
ZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9pZ3RfZmx1c2hfdGVzdC5jCmluZGV4IDdiMDkzOWUzZjAwNy4uYTZjNzFmY2E2MWFhIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuYwpAQCAt
MTksNyArMTksNyBAQCBpbnQgaWd0X2ZsdXNoX3Rlc3Qoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUpCiAKIAljb25kX3Jlc2NoZWQoKTsKIAotCWlmIChpbnRlbF9ndF93YWl0X2Zvcl9pZGxl
KGd0LCBIWiAvIDUpID09IC1FVElNRSkgeworCWlmIChpbnRlbF9ndF93YWl0X2Zvcl9pZGxlKGd0
LCBIWikgPT0gLUVUSU1FKSB7CiAJCXByX2VycigiJXBTIHRpbWVkIG91dCwgY2FuY2VsbGluZyBh
bGwgZnVydGhlciB0ZXN0aW5nLlxuIiwKIAkJICAgICAgIF9fYnVpbHRpbl9yZXR1cm5fYWRkcmVz
cygwKSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3Rf
bGl2ZV90ZXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2xpdmVfdGVz
dC5jCmluZGV4IGMxMzAwMTBhNzAzMy4uMWM3MjE1NDJlMjc3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaWd0X2xpdmVfdGVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L3NlbGZ0ZXN0cy9pZ3RfbGl2ZV90ZXN0LmMKQEAgLTUsNyArNSw3IEBACiAgKi8K
IAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCi0jaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcmVxdWVzdHMu
aCIKKyNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogCiAjaW5jbHVkZSAiLi4vaTkxNV9zZWxmdGVz
dC5oIgogI2luY2x1ZGUgImlndF9mbHVzaF90ZXN0LmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBlcnMuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5jCm5ldyBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZWJkNmQ2OWIzMzE1Ci0tLSAvZGV2L251
bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2ludGVsX3NjaGVkdWxlcl9o
ZWxwZXJzLmMKQEAgLTAsMCArMSw4OSBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOCBJbnRlbCBDb3Jwb3JhdGlvbgorICovCisK
Ky8vI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV91c2VyLmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxf
Z3QuaCIKKyNpbmNsdWRlICJpOTE1X2Rydi5oIgorI2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIK
KworI2luY2x1ZGUgInNlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVscGVycy5oIgorCisjZGVm
aW5lIFJFRFVDRURfVElNRVNMSUNFCTUKKyNkZWZpbmUgUkVEVUNFRF9QUkVFTVBUCQkxMAorI2Rl
ZmluZSBXQUlUX0ZPUl9SRVNFVF9USU1FCTEwMDAwCisKK2ludCBpbnRlbF9zZWxmdGVzdF9tb2Rp
ZnlfcG9saWN5KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgc3RydWN0IGlu
dGVsX3NlbGZ0ZXN0X3NhdmVkX3BvbGljeSAqc2F2ZWQsCisJCQkJIHUzMiBtb2RpZnlfdHlwZSkK
KworeworCWludCBlcnI7CisKKwlzYXZlZC0+cmVzZXQgPSBlbmdpbmUtPmk5MTUtPnBhcmFtcy5y
ZXNldDsKKwlzYXZlZC0+ZmxhZ3MgPSBlbmdpbmUtPmZsYWdzOworCXNhdmVkLT50aW1lc2xpY2Ug
PSBlbmdpbmUtPnByb3BzLnRpbWVzbGljZV9kdXJhdGlvbl9tczsKKwlzYXZlZC0+cHJlZW1wdF90
aW1lb3V0ID0gZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXM7CisKKwlzd2l0Y2ggKG1v
ZGlmeV90eXBlKSB7CisJY2FzZSBTRUxGVEVTVF9TQ0hFRFVMRVJfTU9ESUZZX0ZBU1RfUkVTRVQ6
CisJCS8qCisJCSAqIEVuYWJsZSBmb3JjZSBwcmUtZW1wdGlvbiBvbiB0aW1lIHNsaWNlIGV4cGly
YXRpb24KKwkJICogdG9nZXRoZXIgd2l0aCBlbmdpbmUgcmVzZXQgb24gcHJlLWVtcHRpb24gdGlt
ZW91dC4KKwkJICogVGhpcyBpcyByZXF1aXJlZCB0byBtYWtlIHRoZSBHdUMgbm90aWNlIGFuZCBy
ZXNldAorCQkgKiB0aGUgc2luZ2xlIGhhbmdpbmcgY29udGV4dC4KKwkJICogQWxzbywgcmVkdWNl
IHRoZSBwcmVlbXB0aW9uIHRpbWVvdXQgdG8gc29tZXRoaW5nCisJCSAqIHNtYWxsIHRvIHNwZWVk
IHRoZSB0ZXN0IHVwLgorCQkgKi8KKwkJZW5naW5lLT5pOTE1LT5wYXJhbXMucmVzZXQgPSAyOwor
CQllbmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX1dBTlRfRk9SQ0VEX1BSRUVNUFRJT047CisJ
CWVuZ2luZS0+cHJvcHMudGltZXNsaWNlX2R1cmF0aW9uX21zID0gUkVEVUNFRF9USU1FU0xJQ0U7
CisJCWVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zID0gUkVEVUNFRF9QUkVFTVBUOwor
CQlicmVhazsKKworCWNhc2UgU0VMRlRFU1RfU0NIRURVTEVSX01PRElGWV9OT19IQU5HQ0hFQ0s6
CisJCWVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0X21zID0gMDsKKwkJYnJlYWs7CisKKwlk
ZWZhdWx0OgorCQlwcl9lcnIoIkludmFsaWQgc2NoZWR1bGVyIHBvbGljeSBtb2RpZmljYXRpb24g
dHlwZTogJWQhXG4iLCBtb2RpZnlfdHlwZSk7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWlm
ICghaW50ZWxfZW5naW5lX3VzZXNfZ3VjKGVuZ2luZSkpCisJCXJldHVybiAwOworCisJZXJyID0g
aW50ZWxfZ3VjX2dsb2JhbF9wb2xpY2llc191cGRhdGUoJmVuZ2luZS0+Z3QtPnVjLmd1Yyk7CisJ
aWYgKGVycikKKwkJaW50ZWxfc2VsZnRlc3RfcmVzdG9yZV9wb2xpY3koZW5naW5lLCBzYXZlZCk7
CisKKwlyZXR1cm4gZXJyOworfQorCitpbnQgaW50ZWxfc2VsZnRlc3RfcmVzdG9yZV9wb2xpY3ko
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSAgc3RydWN0IGludGVsX3NlbGZ0
ZXN0X3NhdmVkX3BvbGljeSAqc2F2ZWQpCit7CisJLyogUmVzdG9yZSB0aGUgb3JpZ2luYWwgcG9s
aWNpZXMgKi8KKwllbmdpbmUtPmk5MTUtPnBhcmFtcy5yZXNldCA9IHNhdmVkLT5yZXNldDsKKwll
bmdpbmUtPmZsYWdzID0gc2F2ZWQtPmZsYWdzOworCWVuZ2luZS0+cHJvcHMudGltZXNsaWNlX2R1
cmF0aW9uX21zID0gc2F2ZWQtPnRpbWVzbGljZTsKKwllbmdpbmUtPnByb3BzLnByZWVtcHRfdGlt
ZW91dF9tcyA9IHNhdmVkLT5wcmVlbXB0X3RpbWVvdXQ7CisKKwlpZiAoIWludGVsX2VuZ2luZV91
c2VzX2d1YyhlbmdpbmUpKQorCQlyZXR1cm4gMDsKKworCXJldHVybiBpbnRlbF9ndWNfZ2xvYmFs
X3BvbGljaWVzX3VwZGF0ZSgmZW5naW5lLT5ndC0+dWMuZ3VjKTsKK30KKworaW50IGludGVsX3Nl
bGZ0ZXN0X3dhaXRfZm9yX3JxKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCWxvbmcgcmV0
OworCisJcmV0ID0gaTkxNV9yZXF1ZXN0X3dhaXQocnEsIDAsIFdBSVRfRk9SX1JFU0VUX1RJTUUp
OworCWlmIChyZXQgPCAwKQorCQlyZXR1cm4gcmV0OworCisJcmV0dXJuIDA7Cit9CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaW50ZWxfc2NoZWR1bGVyX2hlbHBl
cnMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pbnRlbF9zY2hlZHVsZXJfaGVs
cGVycy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uMDUwYmM1YThi
YThiCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2lu
dGVsX3NjaGVkdWxlcl9oZWxwZXJzLmgKQEAgLTAsMCArMSwzNSBAQAorLyogU1BEWC1MaWNlbnNl
LUlkZW50aWZpZXI6IE1JVCAqLworLyoKKyAqIENvcHlyaWdodCDCqSAyMDE0LTIwMTkgSW50ZWwg
Q29ycG9yYXRpb24KKyAqLworCisjaWZuZGVmIF9JTlRFTF9TRUxGVEVTVF9TQ0hFRFVMRVJfSEVM
UEVSU19IXworI2RlZmluZSBfSU5URUxfU0VMRlRFU1RfU0NIRURVTEVSX0hFTFBFUlNfSF8KKwor
I2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKK3N0cnVjdCBpOTE1X3JlcXVlc3Q7CitzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzOworCitzdHJ1Y3QgaW50ZWxfc2VsZnRlc3Rfc2F2ZWRfcG9saWN5Cit7
CisJdTMyIGZsYWdzOworCXUzMiByZXNldDsKKwl1NjQgdGltZXNsaWNlOworCXU2NCBwcmVlbXB0
X3RpbWVvdXQ7Cit9OworCitlbnVtIHNlbGZ0ZXN0X3NjaGVkdWxlcl9tb2RpZnkKK3sKKwlTRUxG
VEVTVF9TQ0hFRFVMRVJfTU9ESUZZX05PX0hBTkdDSEVDSyA9IDAsCisJU0VMRlRFU1RfU0NIRURV
TEVSX01PRElGWV9GQVNUX1JFU0VULAorfTsKKworaW50IGludGVsX3NlbGZ0ZXN0X21vZGlmeV9w
b2xpY3koc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSBzdHJ1Y3QgaW50ZWxf
c2VsZnRlc3Rfc2F2ZWRfcG9saWN5ICpzYXZlZCwKKwkJCQkgZW51bSBzZWxmdGVzdF9zY2hlZHVs
ZXJfbW9kaWZ5IG1vZGlmeV90eXBlKTsKK2ludCBpbnRlbF9zZWxmdGVzdF9yZXN0b3JlX3BvbGlj
eShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJICBzdHJ1Y3QgaW50ZWxfc2Vs
ZnRlc3Rfc2F2ZWRfcG9saWN5ICpzYXZlZCk7CitpbnQgaW50ZWxfc2VsZnRlc3Rfd2FpdF9mb3Jf
cnEoIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKTsKKworI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMKaW5kZXggZDE4OWM0YmQ0YmVm
Li40ZjgxODAxNDY4ODggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9tb2NrX2dlbV9kZXZpY2UuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMv
bW9ja19nZW1fZGV2aWNlLmMKQEAgLTUyLDcgKzUyLDggQEAgdm9pZCBtb2NrX2RldmljZV9mbHVz
aChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlkbyB7CiAJCWZvcl9lYWNoX2VuZ2lu
ZShlbmdpbmUsIGd0LCBpZCkKIAkJCW1vY2tfZW5naW5lX2ZsdXNoKGVuZ2luZSk7Ci0JfSB3aGls
ZSAoaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIE1BWF9TQ0hFRFVMRV9USU1F
T1VUKSk7CisJfSB3aGlsZSAoaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQoZ3QsIE1B
WF9TQ0hFRFVMRV9USU1FT1VULAorCQkJCQkJICBOVUxMKSk7CiB9CiAKIHN0YXRpYyB2b2lkIG1v
Y2tfZGV2aWNlX3JlbGVhc2Uoc3RydWN0IGRybV9kZXZpY2UgKmRldikKLS0gCjIuMjUuMAoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

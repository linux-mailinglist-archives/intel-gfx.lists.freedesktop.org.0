Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 07E1F45EDF
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 15:48:01 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 52623898C4;
	Fri, 14 Jun 2019 13:47:59 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from bombadil.infradead.org (bombadil.infradead.org
 [IPv6:2607:7c80:54:e::133])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 925EB898C4;
 Fri, 14 Jun 2019 13:47:58 +0000 (UTC)
Received: from 213-225-9-13.nat.highway.a1.net ([213.225.9.13] helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hbmYT-0004pk-75; Fri, 14 Jun 2019 13:47:45 +0000
From: Christoph Hellwig <hch@lst.de>
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <maxime.ripard@bootlin.com>, Sean Paul <sean@poorly.run>,
 David Airlie <airlied@linux.ie>, Daniel Vetter <daniel@ffwll.ch>,
 Jani Nikula <jani.nikula@linux.intel.com>,
 Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
 Rodrigo Vivi <rodrigo.vivi@intel.com>, Ian Abbott <abbotti@mev.co.uk>,
 H Hartley Sweeten <hsweeten@visionengravers.com>
Date: Fri, 14 Jun 2019 15:47:14 +0200
Message-Id: <20190614134726.3827-5-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614134726.3827-1-hch@lst.de>
References: <20190614134726.3827-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; 
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=EZXX45MA5Kr/jRAVRE8+C8CWSuTwR7IM5YlBjilZCgk=; b=h+BXnX3J4b+gwgk8yPNC/LWr1d
 p0nnzOOFRXth82UzpFCB2ZuQda+YSnZqn1gWN/qSy0zb/PDbkxwFXXm4UiBO6y21DGjJKIpj+/E7T
 t81qzz/2oo9KHsBbfxcBTc0XdOWVcD8Me/I1N4dbHkRIHmscQ3E5EqrB++XzFTrpq2R8zML45F/Ps
 oaAmNvGeU78znGJDV3igN+bPWzpoiS+4Hp8Fqr+cK6dinRTkZnWt3NgNbOOp66Pzk7n5TbtG2mGCw
 5/Tp8vxU8u23qdHv/v9KZKGd58ml8mZRHwcNFbLAEjZXspFap861gPdI5rNvUFMPWJb+9Ka6ShI2/
 EDWZG46A==;
Subject: [Intel-gfx] [PATCH 04/16] drm: move drm_pci_{alloc,
 free} to drm_legacy
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: devel@driverdev.osuosl.org, linux-s390@vger.kernel.org,
 Intel Linux Wireless <linuxwifi@intel.com>, linux-rdma@vger.kernel.org,
 netdev@vger.kernel.org, intel-gfx@lists.freedesktop.org,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 iommu@lists.linux-foundation.org,
 "moderated list:ARM PORT" <linux-arm-kernel@lists.infradead.org>,
 linux-media@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlc2UgZnVuY3Rpb25zIGFyZSByYXRoZXIgYnJva2VuIGluIHRoYXQgdGhleSB0cnkgdG8gcGFz
cyBfX0dGUF9DT01QCnRvIGRtYV9hbGxvY19jb2hlcmVudCwgY2FsbCB2aXJ0X3RvX3BhZ2Ugb24g
dGhlIHJldHVybiB2YWx1ZSBhbmQKbWVzcyB3aXRoIFBhZ2VSZXNlcnZlZC4gIEFuZCBub3QgYWN0
dWFsbHkgdXNlZCBieSBhbnkgbW9kZXJuIGRyaXZlci4KClNpZ25lZC1vZmYtYnk6IENocmlzdG9w
aCBIZWxsd2lnIDxoY2hAbHN0LmRlPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9kcm1fYnVmcy5jIHwg
ODUgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0v
ZHJtX3BjaS5jICB8IDg5IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAy
IGZpbGVzIGNoYW5nZWQsIDg1IGluc2VydGlvbnMoKyksIDg5IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fYnVmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2RybV9i
dWZzLmMKaW5kZXggYmZjNDE5ZWQ5ZDZjLi43NDE4ODcyZDg3YzYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9kcm1fYnVmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9kcm1fYnVmcy5jCkBA
IC0zOCw2ICszOCw5MSBAQAogCiAjaW5jbHVkZSA8bGludXgvbm9zcGVjLmg+CiAKKy8qKgorICog
ZHJtX3BjaV9hbGxvYyAtIEFsbG9jYXRlIGEgUENJIGNvbnNpc3RlbnQgbWVtb3J5IGJsb2NrLCBm
b3IgRE1BLgorICogQGRldjogRFJNIGRldmljZQorICogQHNpemU6IHNpemUgb2YgYmxvY2sgdG8g
YWxsb2NhdGUKKyAqIEBhbGlnbjogYWxpZ25tZW50IG9mIGJsb2NrCisgKgorICogRklYTUU6IFRo
aXMgaXMgYSBuZWVkbGVzcyBhYnN0cmFjdGlvbiBvZiB0aGUgTGludXggZG1hLWFwaSBhbmQgc2hv
dWxkIGJlCisgKiByZW1vdmVkLgorICoKKyAqIFJldHVybjogQSBoYW5kbGUgdG8gdGhlIGFsbG9j
YXRlZCBtZW1vcnkgYmxvY2sgb24gc3VjY2VzcyBvciBOVUxMIG9uCisgKiBmYWlsdXJlLgorICov
Citkcm1fZG1hX2hhbmRsZV90ICpkcm1fcGNpX2FsbG9jKHN0cnVjdCBkcm1fZGV2aWNlICogZGV2
LCBzaXplX3Qgc2l6ZSwgc2l6ZV90IGFsaWduKQoreworCWRybV9kbWFfaGFuZGxlX3QgKmRtYWg7
CisJdW5zaWduZWQgbG9uZyBhZGRyOworCXNpemVfdCBzejsKKworCS8qIHBjaV9hbGxvY19jb25z
aXN0ZW50IG9ubHkgZ3VhcmFudGVlcyBhbGlnbm1lbnQgdG8gdGhlIHNtYWxsZXN0CisJICogUEFH
RV9TSVpFIG9yZGVyIHdoaWNoIGlzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB0aGUgcmVxdWVz
dGVkIHNpemUuCisJICogUmV0dXJuIE5VTEwgaGVyZSBmb3Igbm93IHRvIG1ha2Ugc3VyZSBub2Jv
ZHkgdHJpZXMgZm9yIGxhcmdlciBhbGlnbm1lbnQKKwkgKi8KKwlpZiAoYWxpZ24gPiBzaXplKQor
CQlyZXR1cm4gTlVMTDsKKworCWRtYWggPSBrbWFsbG9jKHNpemVvZihkcm1fZG1hX2hhbmRsZV90
KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFkbWFoKQorCQlyZXR1cm4gTlVMTDsKKworCWRtYWgtPnNp
emUgPSBzaXplOworCWRtYWgtPnZhZGRyID0gZG1hX2FsbG9jX2NvaGVyZW50KCZkZXYtPnBkZXYt
PmRldiwgc2l6ZSwKKwkJCQkJICZkbWFoLT5idXNhZGRyLAorCQkJCQkgR0ZQX0tFUk5FTCB8IF9f
R0ZQX0NPTVApOworCisJaWYgKGRtYWgtPnZhZGRyID09IE5VTEwpIHsKKwkJa2ZyZWUoZG1haCk7
CisJCXJldHVybiBOVUxMOworCX0KKworCS8qIFhYWCAtIElzIHZpcnRfdG9fcGFnZSgpIGxlZ2Fs
IGZvciBjb25zaXN0ZW50IG1lbT8gKi8KKwkvKiBSZXNlcnZlICovCisJZm9yIChhZGRyID0gKHVu
c2lnbmVkIGxvbmcpZG1haC0+dmFkZHIsIHN6ID0gc2l6ZTsKKwkgICAgIHN6ID4gMDsgYWRkciAr
PSBQQUdFX1NJWkUsIHN6IC09IFBBR0VfU0laRSkgeworCQlTZXRQYWdlUmVzZXJ2ZWQodmlydF90
b19wYWdlKCh2b2lkICopYWRkcikpOworCX0KKworCXJldHVybiBkbWFoOworfQorCisvKgorICog
RnJlZSBhIFBDSSBjb25zaXN0ZW50IG1lbW9yeSBibG9jayB3aXRob3V0IGZyZWVpbmcgaXRzIGRl
c2NyaXB0b3IuCisgKgorICogVGhpcyBmdW5jdGlvbiBpcyBmb3IgaW50ZXJuYWwgdXNlIGluIHRo
ZSBMaW51eC1zcGVjaWZpYyBEUk0gY29yZSBjb2RlLgorICovCit2b2lkIF9fZHJtX2xlZ2FjeV9w
Y2lfZnJlZShzdHJ1Y3QgZHJtX2RldmljZSAqIGRldiwgZHJtX2RtYV9oYW5kbGVfdCAqIGRtYWgp
Cit7CisJdW5zaWduZWQgbG9uZyBhZGRyOworCXNpemVfdCBzejsKKworCWlmIChkbWFoLT52YWRk
cikgeworCQkvKiBYWFggLSBJcyB2aXJ0X3RvX3BhZ2UoKSBsZWdhbCBmb3IgY29uc2lzdGVudCBt
ZW0/ICovCisJCS8qIFVucmVzZXJ2ZSAqLworCQlmb3IgKGFkZHIgPSAodW5zaWduZWQgbG9uZylk
bWFoLT52YWRkciwgc3ogPSBkbWFoLT5zaXplOworCQkgICAgIHN6ID4gMDsgYWRkciArPSBQQUdF
X1NJWkUsIHN6IC09IFBBR0VfU0laRSkgeworCQkJQ2xlYXJQYWdlUmVzZXJ2ZWQodmlydF90b19w
YWdlKCh2b2lkICopYWRkcikpOworCQl9CisJCWRtYV9mcmVlX2NvaGVyZW50KCZkZXYtPnBkZXYt
PmRldiwgZG1haC0+c2l6ZSwgZG1haC0+dmFkZHIsCisJCQkJICBkbWFoLT5idXNhZGRyKTsKKwl9
Cit9CisKKy8qKgorICogZHJtX3BjaV9mcmVlIC0gRnJlZSBhIFBDSSBjb25zaXN0ZW50IG1lbW9y
eSBibG9jaworICogQGRldjogRFJNIGRldmljZQorICogQGRtYWg6IGhhbmRsZSB0byBtZW1vcnkg
YmxvY2sKKyAqCisgKiBGSVhNRTogVGhpcyBpcyBhIG5lZWRsZXNzIGFic3RyYWN0aW9uIG9mIHRo
ZSBMaW51eCBkbWEtYXBpIGFuZCBzaG91bGQgYmUKKyAqIHJlbW92ZWQuCisgKi8KK3ZvaWQgZHJt
X3BjaV9mcmVlKHN0cnVjdCBkcm1fZGV2aWNlICogZGV2LCBkcm1fZG1hX2hhbmRsZV90ICogZG1h
aCkKK3sKKwlfX2RybV9sZWdhY3lfcGNpX2ZyZWUoZGV2LCBkbWFoKTsKKwlrZnJlZShkbWFoKTsK
K30KKwogc3RhdGljIHN0cnVjdCBkcm1fbWFwX2xpc3QgKmRybV9maW5kX21hdGNoaW5nX21hcChz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQkJCQkJICBzdHJ1Y3QgZHJtX2xvY2FsX21hcCAqbWFw
KQogewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2RybV9wY2kuYyBiL2RyaXZlcnMvZ3B1
L2RybS9kcm1fcGNpLmMKaW5kZXggNjkzNzQ4YWQ4Yjg4Li43N2EyMTVmMmE4ZTQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9kcm1fcGNpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2RybV9w
Y2kuYwpAQCAtMzEsOTUgKzMxLDYgQEAKICNpbmNsdWRlICJkcm1faW50ZXJuYWwuaCIKICNpbmNs
dWRlICJkcm1fbGVnYWN5LmgiCiAKLS8qKgotICogZHJtX3BjaV9hbGxvYyAtIEFsbG9jYXRlIGEg
UENJIGNvbnNpc3RlbnQgbWVtb3J5IGJsb2NrLCBmb3IgRE1BLgotICogQGRldjogRFJNIGRldmlj
ZQotICogQHNpemU6IHNpemUgb2YgYmxvY2sgdG8gYWxsb2NhdGUKLSAqIEBhbGlnbjogYWxpZ25t
ZW50IG9mIGJsb2NrCi0gKgotICogRklYTUU6IFRoaXMgaXMgYSBuZWVkbGVzcyBhYnN0cmFjdGlv
biBvZiB0aGUgTGludXggZG1hLWFwaSBhbmQgc2hvdWxkIGJlCi0gKiByZW1vdmVkLgotICoKLSAq
IFJldHVybjogQSBoYW5kbGUgdG8gdGhlIGFsbG9jYXRlZCBtZW1vcnkgYmxvY2sgb24gc3VjY2Vz
cyBvciBOVUxMIG9uCi0gKiBmYWlsdXJlLgotICovCi1kcm1fZG1hX2hhbmRsZV90ICpkcm1fcGNp
X2FsbG9jKHN0cnVjdCBkcm1fZGV2aWNlICogZGV2LCBzaXplX3Qgc2l6ZSwgc2l6ZV90IGFsaWdu
KQotewotCWRybV9kbWFfaGFuZGxlX3QgKmRtYWg7Ci0JdW5zaWduZWQgbG9uZyBhZGRyOwotCXNp
emVfdCBzejsKLQotCS8qIHBjaV9hbGxvY19jb25zaXN0ZW50IG9ubHkgZ3VhcmFudGVlcyBhbGln
bm1lbnQgdG8gdGhlIHNtYWxsZXN0Ci0JICogUEFHRV9TSVpFIG9yZGVyIHdoaWNoIGlzIGdyZWF0
ZXIgdGhhbiBvciBlcXVhbCB0byB0aGUgcmVxdWVzdGVkIHNpemUuCi0JICogUmV0dXJuIE5VTEwg
aGVyZSBmb3Igbm93IHRvIG1ha2Ugc3VyZSBub2JvZHkgdHJpZXMgZm9yIGxhcmdlciBhbGlnbm1l
bnQKLQkgKi8KLQlpZiAoYWxpZ24gPiBzaXplKQotCQlyZXR1cm4gTlVMTDsKLQotCWRtYWggPSBr
bWFsbG9jKHNpemVvZihkcm1fZG1hX2hhbmRsZV90KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFkbWFo
KQotCQlyZXR1cm4gTlVMTDsKLQotCWRtYWgtPnNpemUgPSBzaXplOwotCWRtYWgtPnZhZGRyID0g
ZG1hX2FsbG9jX2NvaGVyZW50KCZkZXYtPnBkZXYtPmRldiwgc2l6ZSwKLQkJCQkJICZkbWFoLT5i
dXNhZGRyLAotCQkJCQkgR0ZQX0tFUk5FTCB8IF9fR0ZQX0NPTVApOwotCi0JaWYgKGRtYWgtPnZh
ZGRyID09IE5VTEwpIHsKLQkJa2ZyZWUoZG1haCk7Ci0JCXJldHVybiBOVUxMOwotCX0KLQotCS8q
IFhYWCAtIElzIHZpcnRfdG9fcGFnZSgpIGxlZ2FsIGZvciBjb25zaXN0ZW50IG1lbT8gKi8KLQkv
KiBSZXNlcnZlICovCi0JZm9yIChhZGRyID0gKHVuc2lnbmVkIGxvbmcpZG1haC0+dmFkZHIsIHN6
ID0gc2l6ZTsKLQkgICAgIHN6ID4gMDsgYWRkciArPSBQQUdFX1NJWkUsIHN6IC09IFBBR0VfU0la
RSkgewotCQlTZXRQYWdlUmVzZXJ2ZWQodmlydF90b19wYWdlKCh2b2lkICopYWRkcikpOwotCX0K
LQotCXJldHVybiBkbWFoOwotfQotCi1FWFBPUlRfU1lNQk9MKGRybV9wY2lfYWxsb2MpOwotCi0v
KgotICogRnJlZSBhIFBDSSBjb25zaXN0ZW50IG1lbW9yeSBibG9jayB3aXRob3V0IGZyZWVpbmcg
aXRzIGRlc2NyaXB0b3IuCi0gKgotICogVGhpcyBmdW5jdGlvbiBpcyBmb3IgaW50ZXJuYWwgdXNl
IGluIHRoZSBMaW51eC1zcGVjaWZpYyBEUk0gY29yZSBjb2RlLgotICovCi12b2lkIF9fZHJtX2xl
Z2FjeV9wY2lfZnJlZShzdHJ1Y3QgZHJtX2RldmljZSAqIGRldiwgZHJtX2RtYV9oYW5kbGVfdCAq
IGRtYWgpCi17Ci0JdW5zaWduZWQgbG9uZyBhZGRyOwotCXNpemVfdCBzejsKLQotCWlmIChkbWFo
LT52YWRkcikgewotCQkvKiBYWFggLSBJcyB2aXJ0X3RvX3BhZ2UoKSBsZWdhbCBmb3IgY29uc2lz
dGVudCBtZW0/ICovCi0JCS8qIFVucmVzZXJ2ZSAqLwotCQlmb3IgKGFkZHIgPSAodW5zaWduZWQg
bG9uZylkbWFoLT52YWRkciwgc3ogPSBkbWFoLT5zaXplOwotCQkgICAgIHN6ID4gMDsgYWRkciAr
PSBQQUdFX1NJWkUsIHN6IC09IFBBR0VfU0laRSkgewotCQkJQ2xlYXJQYWdlUmVzZXJ2ZWQodmly
dF90b19wYWdlKCh2b2lkICopYWRkcikpOwotCQl9Ci0JCWRtYV9mcmVlX2NvaGVyZW50KCZkZXYt
PnBkZXYtPmRldiwgZG1haC0+c2l6ZSwgZG1haC0+dmFkZHIsCi0JCQkJICBkbWFoLT5idXNhZGRy
KTsKLQl9Ci19Ci0KLS8qKgotICogZHJtX3BjaV9mcmVlIC0gRnJlZSBhIFBDSSBjb25zaXN0ZW50
IG1lbW9yeSBibG9jawotICogQGRldjogRFJNIGRldmljZQotICogQGRtYWg6IGhhbmRsZSB0byBt
ZW1vcnkgYmxvY2sKLSAqCi0gKiBGSVhNRTogVGhpcyBpcyBhIG5lZWRsZXNzIGFic3RyYWN0aW9u
IG9mIHRoZSBMaW51eCBkbWEtYXBpIGFuZCBzaG91bGQgYmUKLSAqIHJlbW92ZWQuCi0gKi8KLXZv
aWQgZHJtX3BjaV9mcmVlKHN0cnVjdCBkcm1fZGV2aWNlICogZGV2LCBkcm1fZG1hX2hhbmRsZV90
ICogZG1haCkKLXsKLQlfX2RybV9sZWdhY3lfcGNpX2ZyZWUoZGV2LCBkbWFoKTsKLQlrZnJlZShk
bWFoKTsKLX0KLQotRVhQT1JUX1NZTUJPTChkcm1fcGNpX2ZyZWUpOwotCiAjaWZkZWYgQ09ORklH
X1BDSQogCiBzdGF0aWMgaW50IGRybV9nZXRfcGNpX2RvbWFpbihzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2KQotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZng=

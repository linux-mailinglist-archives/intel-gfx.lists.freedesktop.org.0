Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 28600397D6C
	for <lists+intel-gfx@lfdr.de>; Wed,  2 Jun 2021 02:00:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 79D016E2C0;
	Wed,  2 Jun 2021 00:00:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D70226E2C0
 for <intel-gfx@lists.freedesktop.org>; Wed,  2 Jun 2021 00:00:55 +0000 (UTC)
IronPort-SDR: VZx7UUBRuUpWESdbVvIVUMuhCYTSbJxkNT+E4vM7Z8Vjzv9J3z3yu9/g0zFHGHCRn/LcZaJ8SV
 M2bpItA748PA==
X-IronPort-AV: E=McAfee;i="6200,9189,10002"; a="203661802"
X-IronPort-AV: E=Sophos;i="5.83,241,1616482800"; d="scan'208";a="203661802"
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 01 Jun 2021 17:00:52 -0700
IronPort-SDR: Z5Bzps+k/3Uw2X4vRH1BjpF3GuV52C80BqnhkSJlORdufpS0ZGnDEZ9Qk7i8pvOtoWphJQLK3s
 aOK/un7EZbog==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.83,241,1616482800"; d="scan'208";a="617000673"
Received: from orsmsx605.amr.corp.intel.com ([10.22.229.18])
 by orsmga005.jf.intel.com with ESMTP; 01 Jun 2021 17:00:52 -0700
Received: from orsmsx611.amr.corp.intel.com (10.22.229.24) by
 ORSMSX605.amr.corp.intel.com (10.22.229.18) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.4; Tue, 1 Jun 2021 17:00:51 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX611.amr.corp.intel.com (10.22.229.24) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.4; Tue, 1 Jun 2021 17:00:51 -0700
Received: from orsmsx610.amr.corp.intel.com ([10.22.229.23]) by
 ORSMSX610.amr.corp.intel.com ([10.22.229.23]) with mapi id 15.01.2242.008;
 Tue, 1 Jun 2021 17:00:51 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "Mun, Gwan-gyeong" <gwan-gyeong.mun@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [PATCH v2 1/2] drm/i915/display: Introduce new
 intel_psr_pause/resume function
Thread-Index: AQHXVuRZZc1SEK00qUqvTAHdrenlNqsATTqA
Date: Wed, 2 Jun 2021 00:00:50 +0000
Message-ID: <addca74b12ea40d8bdf867001e1e3d9659dd0ec1.camel@intel.com>
References: <20210601124749.89989-1-gwan-gyeong.mun@intel.com>
In-Reply-To: <20210601124749.89989-1-gwan-gyeong.mun@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.1.200.100]
Content-ID: <BB4C668C21905141B38AFA469CCA9BBE@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v2 1/2] drm/i915/display: Introduce new
 intel_psr_pause/resume function
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QSBjYWxsIHRvIGludGVsX3Bzcl9mbHVzaCgpIHdpbGwgYWN0aXZlIFBTUiBiZXR3ZWVuIGludGVs
X3Bzcl9wYXVzZSgpIGFuZCBhIF9yZXN1bWUoKSBjYWxsLg0KDQpPbiBUdWUsIDIwMjEtMDYtMDEg
YXQgMTU6NDcgKzAzMDAsIEd3YW4tZ3llb25nIE11biB3cm90ZToNCj4gVGhpcyBpbnRyb2R1Y2Vz
IHRoZSBmb2xsb3dpbmcgZnVuY3Rpb24gdGhhdCBjYW4gZXhpdCBhbmQgYWN0aXZhdGUgYSBwc3IN
Cj4gc291cmNlIHdoZW4gaW50ZWxfcHNyIGlzIGFscmVhZHkgZW5hYmxlZC4NCj4gDQo+IC0gaW50
ZWxfcHNyX3BhdXNlKCk6IFBhdXNlIGN1cnJlbnQgUFNSLiBJdCBkZWFjdGl2YXRlcyBjdXJyZW50
IHBzciBzdGF0ZS4NCj4gLSBpbnRlbF9wc3JfcmVzdW1lKCk6IFJlc3VtZSBwYXVzZWQgUFNSLiBJ
dCBhY3RpdmF0ZXMgcGF1c2VkIHBzciBzdGF0ZS4NCj4gDQo+IHYyOiBBZGRyZXNzIEpvc2UncyBy
ZXZpZXcgY29tbWVudC4NCj4gICAtIFJlbW92ZSB1bm5lZWRlZCBjaGFuZ2VzIGFyb3VuZCB0aGUg
aW50ZWxfcHNyX2VuYWJsZSgpLg0KPiAgIC0gQWRkIGludGVsX3Bzcl9wb3N0X2V4aXQoKSB3aGlj
aCBwcm9jZXNzZXMgd2FpdGluZyB1bnRpbCBQU1IgaXMgaWRsZQ0KPiAgICAgYW5kIFdBIGZvciBT
ZWxlY3RpdmVGZXRjaC4NCj4gDQo+IENjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNv
dXphQGludGVsLmNvbT4NCj4gQ2M6IFN0YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNv
dnNraXlAaW50ZWwuY29tPg0KPiBDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxp
bnV4LmludGVsLmNvbT4NCj4gU2lnbmVkLW9mZi1ieTogR3dhbi1neWVvbmcgTXVuIDxnd2FuLWd5
ZW9uZy5tdW5AaW50ZWwuY29tPg0KPiBTaWduZWQtb2ZmLWJ5OiBNYXR0IFJvcGVyIDxtYXR0aGV3
LmQucm9wZXJAaW50ZWwuY29tPg0KPiAtLS0NCj4gIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAxICsNCj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcHNyLmMgICAgICB8IDg0ICsrKysrKysrKysrKysrKystLS0NCj4gIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmggICAgICB8ICAyICsNCj4gIDMgZmlsZXMg
Y2hhbmdlZCwgNzYgaW5zZXJ0aW9ucygrKSwgMTEgZGVsZXRpb25zKC0pDQo+IA0KPiBkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiBp
bmRleCBiOGQxZjcwMmQ4MDguLmVlN2NiZGQ3ZGI4NyAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgNCj4gKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgNCj4gQEAgLTE0ODIs
NiArMTQ4Miw3IEBAIHN0cnVjdCBpbnRlbF9wc3Igew0KPiAgCWJvb2wgc2lua19zdXBwb3J0Ow0K
PiAgCWJvb2wgc291cmNlX3N1cHBvcnQ7DQo+ICAJYm9vbCBlbmFibGVkOw0KPiArCWJvb2wgcGF1
c2VkOw0KPiAgCWVudW0gcGlwZSBwaXBlOw0KPiAgCWVudW0gdHJhbnNjb2RlciB0cmFuc2NvZGVy
Ow0KPiAgCWJvb2wgYWN0aXZlOw0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9wc3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
cHNyLmMNCj4gaW5kZXggMDAwZTFmZmU4YzA1Li40ZmY3MWU1MjljZDMgMTAwNjQ0DQo+IC0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMNCj4gKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYw0KPiBAQCAtMTExMyw2ICsxMTEzLDcg
QEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwNCj4gIAlpbnRlbF9wc3JfZW5hYmxlX3NpbmsoaW50ZWxfZHApOw0KPiAgCWludGVs
X3Bzcl9lbmFibGVfc291cmNlKGludGVsX2RwKTsNCj4gIAlpbnRlbF9kcC0+cHNyLmVuYWJsZWQg
PSB0cnVlOw0KPiArCWludGVsX2RwLT5wc3IucGF1c2VkID0gZmFsc2U7DQo+ICANCj4gIAlpbnRl
bF9wc3JfYWN0aXZhdGUoaW50ZWxfZHApOw0KPiAgfQ0KPiBAQCAtMTE4MiwyMiArMTE4MywxMiBA
QCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0K
PiAgCWludGVsX2RwLT5wc3IuYWN0aXZlID0gZmFsc2U7DQo+ICB9DQo+ICANCj4gLXN0YXRpYyB2
b2lkIGludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0K
PiArc3RhdGljIHZvaWQgaW50ZWxfcHNyX3Bvc3RfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQ0KDQpCZXR0ZXIgbmFtZSB3b3VsZCBiZTogaW50ZWxfcHNyX3dhaXRfZXhpdF9sb2NrZWQo
KSBhbmQgaXQgZG9uJ3QgbmVlZCB0byByZW1vdmUgV0EgMTQwODMzMDg0Ny4NCg0KPiAgew0KPiAg
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
Ow0KPiAgCWk5MTVfcmVnX3QgcHNyX3N0YXR1czsNCj4gIAl1MzIgcHNyX3N0YXR1c19tYXNrOw0K
PiAgDQo+IC0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmaW50ZWxfZHAtPnBzci5sb2NrKTsNCj4gLQ0K
PiAtCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQ0KPiAtCQlyZXR1cm47DQo+IC0NCj4gLQlk
cm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIkRpc2FibGluZyBQU1Ilc1xuIiwNCj4gLQkJICAg
IGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkID8gIjIiIDogIjEiKTsNCj4gLQ0KPiAtCWludGVs
X3Bzcl9leGl0KGludGVsX2RwKTsNCj4gLQ0KPiAgCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5h
YmxlZCkgew0KPiAgCQlwc3Jfc3RhdHVzID0gRURQX1BTUjJfU1RBVFVTKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2Rlcik7DQo+ICAJCXBzcl9zdGF0dXNfbWFzayA9IEVEUF9QU1IyX1NUQVRVU19TVEFU
RV9NQVNLOw0KPiBAQCAtMTIxNyw2ICsxMjA4LDIyIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9k
aXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0KPiAgCSAgICAgSVNfUktM
X1JFVklEKGRldl9wcml2LCBSS0xfUkVWSURfQTAsIFJLTF9SRVZJRF9BMCkpKQ0KPiAgCQlpbnRl
bF9kZV9ybXcoZGV2X3ByaXYsIENISUNLRU5fUEFSMV8xLA0KPiAgCQkJICAgICBESVNfUkFNX0JZ
UEFTU19QU1IyX01BTl9UUkFDSywgMCk7DQo+ICt9DQo+ICsNCj4gK3N0YXRpYyB2b2lkIGludGVs
X3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0KPiArew0KPiAr
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
Ow0KPiArDQo+ICsJbG9ja2RlcF9hc3NlcnRfaGVsZCgmaW50ZWxfZHAtPnBzci5sb2NrKTsNCj4g
Kw0KPiArCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQ0KPiArCQlyZXR1cm47DQo+ICsNCj4g
Kwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIkRpc2FibGluZyBQU1Ilc1xuIiwNCj4gKwkJ
ICAgIGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkID8gIjIiIDogIjEiKTsNCj4gKw0KPiArCWlu
dGVsX3Bzcl9leGl0KGludGVsX2RwKTsNCj4gKwlpbnRlbF9wc3JfcG9zdF9leGl0KGludGVsX2Rw
KTsNCj4gIA0KPiAgCS8qIERpc2FibGUgUFNSIG9uIFNpbmsgKi8NCj4gIAlkcm1fZHBfZHBjZF93
cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1BTUl9FTl9DRkcsIDApOw0KPiBAQCAtMTI1NCw2ICsx
MjYxLDYxIEBAIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwNCj4gIAljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmludGVsX2RwLT5wc3IuZGMzY29fd29y
ayk7DQo+ICB9DQo+ICANCj4gKy8qKg0KPiArICogaW50ZWxfcHNyX3BhdXNlIC0gUGF1c2UgUFNS
DQo+ICsgKiBAaW50ZWxfZHA6IEludGVsIERQDQo+ICsgKg0KPiArICogVGhpcyBmdW5jdGlvbiBu
ZWVkIHRvIGJlIGNhbGxlZCBhZnRlciBlbmFibGluZyBwc3IuDQo+ICsgKi8NCj4gK3ZvaWQgaW50
ZWxfcHNyX3BhdXNlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApDQo+ICt7DQo+ICsJc3RydWN0
IGludGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7DQo+ICsNCj4gKwlpZiAoIUNBTl9QU1Io
aW50ZWxfZHApKQ0KPiArCQlyZXR1cm47DQo+ICsNCj4gKwltdXRleF9sb2NrKCZwc3ItPmxvY2sp
Ow0KPiArDQo+ICsJaWYgKCFwc3ItPmFjdGl2ZSkgew0KPiArCQltdXRleF91bmxvY2soJnBzci0+
bG9jayk7DQo+ICsJCXJldHVybjsNCj4gKwl9DQo+ICsNCj4gKwlpbnRlbF9wc3JfZXhpdChpbnRl
bF9kcCk7DQo+ICsJaW50ZWxfcHNyX3Bvc3RfZXhpdChpbnRlbF9kcCk7DQo+ICsJcHNyLT5wYXVz
ZWQgPSB0cnVlOw0KPiArDQo+ICsJbXV0ZXhfdW5sb2NrKCZwc3ItPmxvY2spOw0KPiArDQo+ICsJ
Y2FuY2VsX3dvcmtfc3luYygmcHNyLT53b3JrKTsNCj4gKwljYW5jZWxfZGVsYXllZF93b3JrX3N5
bmMoJnBzci0+ZGMzY29fd29yayk7DQo+ICt9DQo+ICsNCj4gKy8qKg0KPiArICogaW50ZWxfcHNy
X3Jlc3VtZSAtIFJlc3VtZSBQU1INCj4gKyAqIEBpbnRlbF9kcDogSW50ZWwgRFANCj4gKyAqDQo+
ICsgKiBUaGlzIGZ1bmN0aW9uIG5lZWQgdG8gYmUgY2FsbGVkIGFmdGVyIHBhdXNpbmcgcHNyLg0K
PiArICovDQo+ICt2b2lkIGludGVsX3Bzcl9yZXN1bWUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkNCj4gK3sNCj4gKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsNCj4g
Kw0KPiArCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpDQo+ICsJCXJldHVybjsNCj4gKw0KPiArCW11
dGV4X2xvY2soJnBzci0+bG9jayk7DQo+ICsNCj4gKwlpZiAoIXBzci0+cGF1c2VkKQ0KPiArCQln
b3RvIHVubG9jazsNCj4gKw0KPiArCXBzci0+cGF1c2VkID0gZmFsc2U7DQo+ICsJaW50ZWxfcHNy
X2FjdGl2YXRlKGludGVsX2RwKTsNCj4gKw0KPiArdW5sb2NrOg0KPiArCW11dGV4X3VubG9jaygm
cHNyLT5sb2NrKTsNCj4gK30NCj4gKw0KPiAgc3RhdGljIHZvaWQgcHNyX2ZvcmNlX2h3X3RyYWNr
aW5nX2V4aXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkNCj4gIHsNCj4gIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsNCj4gZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmggYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oDQo+IGluZGV4IGUzZGI4NWU5N2Y0Yy4u
NjQxNTIxYjEwMWM4IDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX3Bzci5oDQo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
cHNyLmgNCj4gQEAgLTUxLDUgKzUxLDcgQEAgdm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVf
c2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsDQo+ICAJCQkJCWNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLA0KPiAgCQkJCQljb25zdCBzdHJ1Y3QgaW50
ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLA0KPiAgCQkJCQlpbnQgY29sb3JfcGxhbmUpOw0K
PiArdm9pZCBpbnRlbF9wc3JfcGF1c2Uoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7DQo+ICt2
b2lkIGludGVsX3Bzcl9yZXN1bWUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7DQo+ICANCj4g
ICNlbmRpZiAvKiBfX0lOVEVMX1BTUl9IX18gKi8NCg0KX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

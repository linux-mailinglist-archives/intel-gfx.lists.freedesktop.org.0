Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C45DB2E1BF8
	for <lists+intel-gfx@lfdr.de>; Wed, 23 Dec 2020 12:38:39 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DAA566E08C;
	Wed, 23 Dec 2020 11:38:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 54C2B6E08C
 for <intel-gfx@lists.freedesktop.org>; Wed, 23 Dec 2020 11:38:34 +0000 (UTC)
IronPort-SDR: as44d4a37Yo6LWW2fn3FFd01pQbXdfFmMQrnReDeHOXY7AnoJM1CgSJCeJakOE5YOednA+1HOB
 /GwQRPFmE13g==
X-IronPort-AV: E=McAfee;i="6000,8403,9843"; a="260735926"
X-IronPort-AV: E=Sophos;i="5.78,441,1599548400"; d="scan'208";a="260735926"
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 23 Dec 2020 03:38:32 -0800
IronPort-SDR: 4pooj9kvZrFSZcFTIx+iWWpJVcQtUiSs1TCvp+wAW/v+rlAVxWQIqNU6nofoOl2yPYnHJZglmR
 n4POoBmokrLw==
X-IronPort-AV: E=Sophos;i="5.78,441,1599548400"; d="scan'208";a="373946948"
Received: from helsinki.fi.intel.com ([10.237.66.162])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 23 Dec 2020 03:38:30 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 23 Dec 2020 13:38:02 +0200
Message-Id: <20201223113803.873717-1-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.25.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v8 1/2] drm/i915/display: Support PSR Multiple
 Instances
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQgaXMgYSBwcmVsaW1pbmFyeSB3b3JrIGZvciBzdXBwb3J0aW5nIG11bHRpcGxlIEVEUCBQU1Ig
YW5kCkRQIFBhbmVsUmVwbGF5LiBBbmQgaXQgcmVmYWN0b3JzIHNpbmdsZXRvbiBQU1IgdG8gTXVs
dGkgVHJhbnNjb2RlcgpzdXBwb3J0YWJsZSBQU1IuCkFuZCB0aGlzIG1vdmVzIGFuZCByZW5hbWVz
IHRoZSBpOTE1X3BzciBzdHJ1Y3R1cmUgb2YgZHJtX2k5MTVfcHJpdmF0ZSdzIHRvCmludGVsX2Rw
J3MgaW50ZWxfcHNyIHN0cnVjdHVyZS4KSXQgYWxzbyBjYXVzZXMgY2hhbmdlcyBpbiBQU1IgaW50
ZXJydXB0IGhhbmRsaW5nIHJvdXRpbmUgZm9yIHN1cHBvcnRpbmcKbXVsdGlwbGUgdHJhbnNjb2Rl
cnMuIEJ1dCBpdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIHNjZW5hcmlvIGFuZCB0aW1pbmcgb2YKZW5h
YmxpbmcgYW5kIGRpc2FibGluZyBQU1IuIEFuZCBpdCBub3Qgc3VwcG9ydCBtdWx0aXBsZSBwaXBl
cyB3aXRoCmEgc2luZ2xlIHRyYW5zY29kZXIgUFNSIGNhc2UgeWV0LgoKdjI6IEZpeCBpbmRlbnRh
dGlvbiBhbmQgYWRkIGNvbW1lbnRzCnYzOiBSZW1vdmUgQmxhbmsgbGluZQp2NDogUmViYXNlZAp2
NTogUmViYXNlZCBhbmQgQWRkcmVzc2VkIEFuc2h1bWFuJ3MgcmV2aWV3IGNvbW1lbnQuCiAgICAt
IE1vdmUgY2FsbGluZyBvZiBpbnRlbF9wc3JfaW5pdCgpIHRvIGludGVsX2RwX2luaXRfY29ubmVj
dG9yKCkKdjY6IEFkZHJlc3MgQW5zaHVtYW4ncyByZXZpZXcgY29tbWVudHMKICAgLSBSZW1vdmUg
d3JvbmcgY29tbWVudHMgYW5kIGFkZCBjb21tZW50cyBmb3IgYSBsaW1pdCBvZiBzdXBwb3J0aW5n
IG9mCiAgICAgYSBzaW5nbGUgcGlwZSBQU1IKdjc6IFVwZGF0ZSBpbnRlbF9wc3JfY29tcHV0ZV9j
b25maWcoKSBmb3Igc3VwcG9ydGluZyBtdWx0aXBsZSB0cmFuc2NvZGVyCiAgICBQU1Igb24gQkRX
Kwp2ODogQWRkcmVzcyBBbnNodW1hbidzIHJldmlldyBjb21tZW50cwogICAtIFJlcGxhY2UgRFJN
X0RFQlVHX0tNUyB3aXRoIGRybV9kYmdfa21zKCkgLyBEUk1fV0FSTiB3aXRoIGRybV93YXJuKCkK
djk6IEZpeCBjb21taXQgbWVzc2FnZQoKU2lnbmVkLW9mZi1ieTogR3dhbi1neWVvbmcgTXVuIDxn
d2FuLWd5ZW9uZy5tdW5AaW50ZWwuY29tPgpDYzogSm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9z
ZS5zb3V6YUBpbnRlbC5jb20+CkNjOiBKdWhhLVBla2thIEhlaWtraWxhIDxqdWhhcGVra2EuaGVp
a2tpbGFAZ21haWwuY29tPgpDYzogQW5zaHVtYW4gR3VwdGEgPGFuc2h1bWFuLmd1cHRhQGludGVs
LmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAg
fCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgIHwg
ICA0IC0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jICB8IDEx
MSArKy0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAg
MzggKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgICB8ICAy
MyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYyAgICAgIHwgNTc2
ICsrKysrKysrKystLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9w
c3IuaCAgICAgIHwgIDE0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nw
cml0ZS5jICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAg
ICAgICAgICB8ICAzOCAtLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyAgICAgICAg
ICAgICAgIHwgIDQ5ICstCiAxMCBmaWxlcyBjaGFuZ2VkLCA0ODUgaW5zZXJ0aW9ucygrKSwgMzc3
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGRpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCmlu
ZGV4IDY4NjMyMzZkZjFkMC4uNGI4N2Y3MmNiOWMwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKQEAgLTQzMjAsNyArNDMyMCwxMCBAQCBzdGF0aWMgdm9pZCBpbnRl
bF9kZGlfdXBkYXRlX3BpcGVfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAK
IAlpbnRlbF9kZGlfc2V0X2RwX21zYShjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKIAorCS8vVE9E
TzogbW92ZSBQU1IgcmVsYXRlZCBmdW5jdGlvbnMgaW50byBpbnRlbF9wc3JfdXBkYXRlKCkKKwlp
bnRlbF9wc3IyX3Byb2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoaW50ZWxfZHAsIGNydGNfc3RhdGUp
OwogCWludGVsX3Bzcl91cGRhdGUoaW50ZWxfZHAsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOwor
CiAJaW50ZWxfZHBfc2V0X2luZm9mcmFtZXMoZW5jb2RlciwgdHJ1ZSwgY3J0Y19zdGF0ZSwgY29u
bl9zdGF0ZSk7CiAJaW50ZWxfZWRwX2RycnNfdXBkYXRlKGludGVsX2RwLCBjcnRjX3N0YXRlKTsK
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCA3
ODQ1MmRlNWUxMmYuLmE3NTM2NDdiMGJjYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE1ODY5LDggKzE1ODY5LDYgQEAgc3RhdGljIHZvaWQg
Y29tbWl0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCiAJ
CWlmIChuZXdfY3J0Y19zdGF0ZS0+dXBkYXRlX3BpcGUpCiAJCQlpbnRlbF9waXBlX2Zhc3RzZXQo
b2xkX2NydGNfc3RhdGUsIG5ld19jcnRjX3N0YXRlKTsKLQotCQlpbnRlbF9wc3IyX3Byb2dyYW1f
dHJhbnNfbWFuX3Rya19jdGwobmV3X2NydGNfc3RhdGUpOwogCX0KIAogCWlmIChkZXZfcHJpdi0+
ZGlzcGxheS5hdG9taWNfdXBkYXRlX3dhdGVybWFya3MpCkBAIC0xNzgyOSw4ICsxNzgyNyw2IEBA
IHN0YXRpYyB2b2lkIGludGVsX3NldHVwX291dHB1dHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCQlpbnRlbF9kdm9faW5pdChkZXZfcHJpdik7CiAJfQogCi0JaW50ZWxfcHNy
X2luaXQoZGV2X3ByaXYpOwotCiAJZm9yX2VhY2hfaW50ZWxfZW5jb2RlcigmZGV2X3ByaXYtPmRy
bSwgZW5jb2RlcikgewogCQllbmNvZGVyLT5iYXNlLnBvc3NpYmxlX2NydGNzID0KIAkJCWludGVs
X2VuY29kZXJfcG9zc2libGVfY3J0Y3MoZW5jb2Rlcik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYwppbmRleCBjZDdlNTUxOWVl
N2QuLjA0MTA1MzE2N2Q3ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jCkBAIC0yNDksMTggKzI0OSwxNyBAQCBzdGF0aWMg
aW50IGk5MTVfcHNyX3Npbmtfc3RhdHVzX3Nob3coc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpk
YXRhKQogCQkic2luayBpbnRlcm5hbCBlcnJvciIsCiAJfTsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
ciAqY29ubmVjdG9yID0gbS0+cHJpdmF0ZTsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNvbm5lY3Rvci0+ZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwID0KIAkJaW50ZWxfYXR0YWNoZWRfZHAodG9faW50ZWxfY29ubmVjdG9yKGNvbm5lY3Rvcikp
OwogCWludCByZXQ7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpKSB7Ci0JCXNlcV9wdXRzKG0s
ICJQU1IgVW5zdXBwb3J0ZWRcbiIpOworCWlmIChjb25uZWN0b3ItPnN0YXR1cyAhPSBjb25uZWN0
b3Jfc3RhdHVzX2Nvbm5lY3RlZCkKIAkJcmV0dXJuIC1FTk9ERVY7Ci0JfQogCi0JaWYgKGNvbm5l
Y3Rvci0+c3RhdHVzICE9IGNvbm5lY3Rvcl9zdGF0dXNfY29ubmVjdGVkKQorCWlmICghQ0FOX1BT
UihpbnRlbF9kcCkpIHsKKwkJc2VxX3B1dHMobSwgIlBTUiBVbnN1cHBvcnRlZFxuIik7CiAJCXJl
dHVybiAtRU5PREVWOworCX0KIAogCXJldCA9IGRybV9kcF9kcGNkX3JlYWRiKCZpbnRlbF9kcC0+
YXV4LCBEUF9QU1JfU1RBVFVTLCAmdmFsKTsKIApAQCAtMjgwLDEyICsyNzksMTMgQEAgc3RhdGlj
IGludCBpOTE1X3Bzcl9zaW5rX3N0YXR1c19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAq
ZGF0YSkKIERFRklORV9TSE9XX0FUVFJJQlVURShpOTE1X3Bzcl9zaW5rX3N0YXR1cyk7CiAKIHN0
YXRpYyB2b2lkCi1wc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIHN0cnVjdCBzZXFfZmlsZSAqbSkKK3Bzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsIHN0cnVjdCBzZXFfZmlsZSAqbSkKIHsKIAl1MzIgdmFsLCBzdGF0dXNf
dmFsOwogCWNvbnN0IGNoYXIgKnN0YXR1cyA9ICJ1bmtub3duIjsKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAotCWlmIChkZXZfcHJp
di0+cHNyLnBzcjJfZW5hYmxlZCkgeworCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkg
ewogCQlzdGF0aWMgY29uc3QgY2hhciAqIGNvbnN0IGxpdmVfc3RhdHVzW10gPSB7CiAJCQkiSURM
RSIsCiAJCQkiQ0FQVFVSRSIsCkBAIC0zMDAsNyArMzAwLDcgQEAgcHNyX3NvdXJjZV9zdGF0dXMo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiAJ
CQkiVEdfT04iCiAJCX07CiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAg
IEVEUF9QU1IyX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQ
X1BTUjJfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQlzdGF0dXNfdmFsID0g
KHZhbCAmIEVEUF9QU1IyX1NUQVRVU19TVEFURV9NQVNLKSA+PgogCQkJICAgICAgRURQX1BTUjJf
U1RBVFVTX1NUQVRFX1NISUZUOwogCQlpZiAoc3RhdHVzX3ZhbCA8IEFSUkFZX1NJWkUobGl2ZV9z
dGF0dXMpKQpAQCAtMzE3LDcgKzMxNyw3IEBAIHBzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgc3RydWN0IHNlcV9maWxlICptKQogCQkJIlNSREVOVF9P
TiIsCiAJCX07CiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9Q
U1JfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX1NU
QVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJc3RhdHVzX3ZhbCA9ICh2YWwgJiBF
RFBfUFNSX1NUQVRVU19TVEFURV9NQVNLKSA+PgogCQkJICAgICAgRURQX1BTUl9TVEFUVVNfU1RB
VEVfU0hJRlQ7CiAJCWlmIChzdGF0dXNfdmFsIDwgQVJSQVlfU0laRShsaXZlX3N0YXR1cykpCkBA
IC0zMjcsMjEgKzMyNywxOCBAQCBwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsIHN0cnVjdCBzZXFfZmlsZSAqbSkKIAlzZXFfcHJpbnRmKG0sICJTb3Vy
Y2UgUFNSIHN0YXR1czogJXMgWzB4JTA4eF1cbiIsIHN0YXR1cywgdmFsKTsKIH0KIAotc3RhdGlj
IGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkK
K3N0YXRpYyBpbnQgaW50ZWxfcHNyX3N0YXR1cyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gbm9kZV90b19pOTE1KG0tPnByaXZhdGUpOwotCXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRl
dl9wcml2LT5wc3I7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9f
aTkxNShpbnRlbF9kcCk7CisJc3RydWN0IGludGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7
CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CiAJY29uc3QgY2hhciAqc3RhdHVzOwogCWJvb2wg
ZW5hYmxlZDsKIAl1MzIgdmFsOwogCi0JaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKLQkJcmV0dXJu
IC1FTk9ERVY7Ci0KIAlzZXFfcHJpbnRmKG0sICJTaW5rIHN1cHBvcnQ6ICVzIiwgeWVzbm8ocHNy
LT5zaW5rX3N1cHBvcnQpKTsKLQlpZiAocHNyLT5kcCkKLQkJc2VxX3ByaW50ZihtLCAiIFsweCUw
MnhdIiwgcHNyLT5kcC0+cHNyX2RwY2RbMF0pOworCWlmIChwc3ItPnNpbmtfc3VwcG9ydCkKKwkJ
c2VxX3ByaW50ZihtLCAiIFsweCUwMnhdIiwgaW50ZWxfZHAtPnBzcl9kcGNkWzBdKTsKIAlzZXFf
cHV0cyhtLCAiXG4iKTsKIAogCWlmICghcHNyLT5zaW5rX3N1cHBvcnQpCkBAIC0zNjUsMTYgKzM2
MiwxNiBAQCBzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICpt
LCB2b2lkICpkYXRhKQogCiAJaWYgKHBzci0+cHNyMl9lbmFibGVkKSB7CiAJCXZhbCA9IGludGVs
X2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1IyX0NUTChkZXZfcHJpdi0+cHNyLnRy
YW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
cikpOwogCQllbmFibGVkID0gdmFsICYgRURQX1BTUjJfRU5BQkxFOwogCX0gZWxzZSB7CiAJCXZh
bCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1JfQ1RMKGRldl9wcml2
LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRy
YW5zY29kZXIpKTsKIAkJZW5hYmxlZCA9IHZhbCAmIEVEUF9QU1JfRU5BQkxFOwogCX0KIAlzZXFf
cHJpbnRmKG0sICJTb3VyY2UgUFNSIGN0bDogJXMgWzB4JTA4eF1cbiIsCiAJCSAgIGVuYWJsZWRk
aXNhYmxlZChlbmFibGVkKSwgdmFsKTsKLQlwc3Jfc291cmNlX3N0YXR1cyhkZXZfcHJpdiwgbSk7
CisJcHNyX3NvdXJjZV9zdGF0dXMoaW50ZWxfZHAsIG0pOwogCXNlcV9wcmludGYobSwgIkJ1c3kg
ZnJvbnRidWZmZXIgYml0czogMHglMDh4XG4iLAogCQkgICBwc3ItPmJ1c3lfZnJvbnRidWZmZXJf
Yml0cyk7CiAKQEAgLTM4Myw3ICszODAsNyBAQCBzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0
dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCSAqLwogCWlmIChJU19IQVNXRUxM
KGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7CiAJCXZhbCA9IGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1JfUEVSRl9DTlQoZGV2X3ByaXYtPnBzci50
cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1JfUEVSRl9DTlQoaW50ZWxfZHAtPnBzci50cmFu
c2NvZGVyKSk7CiAJCXZhbCAmPSBFRFBfUFNSX1BFUkZfQ05UX01BU0s7CiAJCXNlcV9wcmludGYo
bSwgIlBlcmZvcm1hbmNlIGNvdW50ZXI6ICV1XG4iLCB2YWwpOwogCX0KQEAgLTQwNCw3ICs0MDEs
NyBAQCBzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2
b2lkICpkYXRhKQogCQkgKi8KIAkJZm9yIChmcmFtZSA9IDA7IGZyYW1lIDwgUFNSMl9TVV9TVEFU
VVNfRlJBTUVTOyBmcmFtZSArPSAzKSB7CiAJCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LAotCQkJCQkgICAgUFNSMl9TVV9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyLCBmcmFt
ZSkpOworCQkJCQkgICAgUFNSMl9TVV9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyLCBm
cmFtZSkpOwogCQkJc3VfZnJhbWVzX3ZhbFtmcmFtZSAvIDNdID0gdmFsOwogCQl9CiAKQEAgLTQz
MCwyMyArNDI3LDU3IEBAIHN0YXRpYyBpbnQgaTkxNV9lZHBfcHNyX3N0YXR1cyhzdHJ1Y3Qgc2Vx
X2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiAJcmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgaTkxNV9l
ZHBfcHNyX3N0YXR1cyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCit7CisJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gbm9kZV90b19pOTE1KG0tPnByaXZhdGUpOwor
CXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAgPSBOVUxMOworCisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKKwkJcmV0dXJuIC1FTk9ERVY7
CisKKwkvKiBGaW5kIHRoZSBmaXJzdCBFRFAgKi8KKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3By
aXYtPmRybSwgZW5jb2RlcikgeworCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRf
RURQKSB7CisJCQlpbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKwkJCWJyZWFr
OworCQl9CisJfQorCisJaWYgKCFpbnRlbF9kcCkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlyZXR1
cm4gaW50ZWxfcHNyX3N0YXR1cyhtLCBpbnRlbF9kcCk7Cit9CisKIHN0YXRpYyBpbnQKIGk5MTVf
ZWRwX3Bzcl9kZWJ1Z19zZXQodm9pZCAqZGF0YSwgdTY0IHZhbCkKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkYXRhOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwot
CWludCByZXQ7CisJaW50IHJldCA9IC1FTk9ERVY7CisJc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXI7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpKQotCQlyZXR1cm4gLUVOT0RFVjsKKwlp
ZiAoIUhBU19QU1IoZGV2X3ByaXYpKQorCQlyZXR1cm4gcmV0OwogCi0JZHJtX2RiZ19rbXMoJmRl
dl9wcml2LT5kcm0sICJTZXR0aW5nIFBTUiBkZWJ1ZyB0byAlbGx4XG4iLCB2YWwpOworCWZvcl9l
YWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJCXN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CiAKLQl3YWtlcmVmID0gaW50
ZWxfcnVudGltZV9wbV9nZXQoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKKwkJaWYgKCFDQU5fUFNS
KGludGVsX2RwKSkKKwkJCWNvbnRpbnVlOwogCi0JcmV0ID0gaW50ZWxfcHNyX2RlYnVnX3NldChk
ZXZfcHJpdiwgdmFsKTsKKwkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkg
eworCQkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJTZXR0aW5nIFBTUiBkZWJ1ZyB0byAl
bGx4XG4iLCB2YWwpOwogCi0JaW50ZWxfcnVudGltZV9wbV9wdXQoJmRldl9wcml2LT5ydW50aW1l
X3BtLCB3YWtlcmVmKTsKKwkJCXdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldCgmZGV2X3By
aXYtPnJ1bnRpbWVfcG0pOworCisJCQkvLyBUT0RPOiBzcGxpdCB0byBlYWNoIHRyYW5zY29kZXIn
cyBQU1IgZGVidWcgc3RhdGUKKwkJCXJldCA9IGludGVsX3Bzcl9kZWJ1Z19zZXQoaW50ZWxfZHAs
IHZhbCk7CisKKwkJCWludGVsX3J1bnRpbWVfcG1fcHV0KCZkZXZfcHJpdi0+cnVudGltZV9wbSwg
d2FrZXJlZik7CisJCX0KKwl9CiAKIAlyZXR1cm4gcmV0OwogfQpAQCAtNDU1LDEyICs0ODYsMjUg
QEAgc3RhdGljIGludAogaTkxNV9lZHBfcHNyX2RlYnVnX2dldCh2b2lkICpkYXRhLCB1NjQgKnZh
bCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkYXRhOworCXN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKKwlp
ZiAoIUhBU19QU1IoZGV2X3ByaXYpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAotCSp2YWwgPSBSRUFE
X09OQ0UoZGV2X3ByaXYtPnBzci5kZWJ1Zyk7Ci0JcmV0dXJuIDA7CisJZm9yX2VhY2hfaW50ZWxf
ZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAoIUNBTl9QU1IoaW50ZWxfZHAp
KQorCQkJY29udGludWU7CisKKwkJLy8gVE9ETzogc3BsaXQgdG8gZWFjaCB0cmFuc2NvZGVyJ3Mg
UFNSIGRlYnVnIHN0YXRlCisJCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFAp
IHsKKwkJCSp2YWwgPSBSRUFEX09OQ0UoaW50ZWxfZHAtPnBzci5kZWJ1Zyk7CisJCQlyZXR1cm4g
MDsKKwkJfQorCX0KKworCXJldHVybiAtRU5PREVWOwogfQogCiBERUZJTkVfU0lNUExFX0FUVFJJ
QlVURShpOTE1X2VkcF9wc3JfZGVidWdfZm9wcywKQEAgLTEyMzQsOSArMTI3OCw2IEBAIHN0YXRp
YyB2b2lkIGRycnNfc3RhdHVzX3Blcl9jcnRjKHN0cnVjdCBzZXFfZmlsZSAqbSwKIAkJLyogZGlz
YWJsZV9kcnJzKCkgd2lsbCBtYWtlIGRycnMtPmRwIE5VTEwgKi8KIAkJaWYgKCFkcnJzLT5kcCkg
ewogCQkJc2VxX3B1dHMobSwgIklkbGVuZXNzIERSUlM6IERpc2FibGVkXG4iKTsKLQkJCWlmIChk
ZXZfcHJpdi0+cHNyLmVuYWJsZWQpCi0JCQkJc2VxX3B1dHMobSwKLQkJCQkiXHRBcyBQU1IgaXMg
ZW5hYmxlZCwgRFJSUyBpcyBub3QgZW5hYmxlZFxuIik7CiAJCQltdXRleF91bmxvY2soJmRycnMt
Pm11dGV4KTsKIAkJCXJldHVybjsKIAkJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCA1YmM1YmZiYzQ1NTEuLjk4OTlmZGRm
NGM5OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmgKQEAgLTEzMzksNiArMTMzOSw0MiBAQCBzdHJ1Y3QgaW50ZWxfZHBfY29tcGxp
YW5jZSB7CiAJdTggdGVzdF9sYW5lX2NvdW50OwogfTsKIAorc3RydWN0IGludGVsX3BzciB7CisJ
LyogTXV0ZXggZm9yIFBTUiBzdGF0ZSBvZiB0aGUgdHJhbnNjb2RlciAqLworCXN0cnVjdCBtdXRl
eCBsb2NrOworCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSwkweDBmCisjZGVmaW5l
IEk5MTVfUFNSX0RFQlVHX0RFRkFVTFQJCTB4MDAKKyNkZWZpbmUgSTkxNV9QU1JfREVCVUdfRElT
QUJMRQkJMHgwMQorI2RlZmluZSBJOTE1X1BTUl9ERUJVR19FTkFCTEUJCTB4MDIKKyNkZWZpbmUg
STkxNV9QU1JfREVCVUdfRk9SQ0VfUFNSMQkweDAzCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0lS
UQkJMHgxMAorCisJdTMyIGRlYnVnOworCWJvb2wgc2lua19zdXBwb3J0OworCWJvb2wgZW5hYmxl
ZDsKKwllbnVtIHBpcGUgcGlwZTsKKwllbnVtIHRyYW5zY29kZXIgdHJhbnNjb2RlcjsKKwlib29s
IGFjdGl2ZTsKKwlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKKwl1bnNpZ25lZCBpbnQgYnVzeV9m
cm9udGJ1ZmZlcl9iaXRzOworCWJvb2wgc2lua19wc3IyX3N1cHBvcnQ7CisJYm9vbCBsaW5rX3N0
YW5kYnk7CisJYm9vbCBjb2xvcmltZXRyeV9zdXBwb3J0OworCWJvb2wgcHNyMl9lbmFibGVkOwor
CWJvb2wgcHNyMl9zZWxfZmV0Y2hfZW5hYmxlZDsKKwl1OCBzaW5rX3N5bmNfbGF0ZW5jeTsKKwlr
dGltZV90IGxhc3RfZW50cnlfYXR0ZW1wdDsKKwlrdGltZV90IGxhc3RfZXhpdDsKKwlib29sIHNp
bmtfbm90X3JlbGlhYmxlOworCWJvb2wgaXJxX2F1eF9lcnJvcjsKKwl1MTYgc3VfeF9ncmFudWxh
cml0eTsKKwlib29sIGRjM2NvX2VuYWJsZWQ7CisJdTMyIGRjM2NvX2V4aXRfZGVsYXk7CisJc3Ry
dWN0IGRlbGF5ZWRfd29yayBkYzNjb193b3JrOworCXN0cnVjdCBkcm1fZHBfdnNjX3NkcCB2c2M7
Cit9OworCiBzdHJ1Y3QgaW50ZWxfZHAgewogCWk5MTVfcmVnX3Qgb3V0cHV0X3JlZzsKIAl1MzIg
RFA7CkBAIC0xNDYwLDYgKzE0OTYsOCBAQCBzdHJ1Y3QgaW50ZWxfZHAgewogCiAJYm9vbCBob2Js
X2ZhaWxlZDsKIAlib29sIGhvYmxfYWN0aXZlOworCisJc3RydWN0IGludGVsX3BzciBwc3I7CiB9
OwogCiBlbnVtIGxzcGNvbl92ZW5kb3IgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kcC5jCmluZGV4IGIyYmMwYzhjMzljNy4uNTczMGNhZDdiNmFjIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCkBAIC0yNzAyLDEyICsyNzAyLDEwIEBAIHZvaWQgaW50
ZWxfZHBfY29tcHV0ZV9wc3JfdnNjX3NkcChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJ
CSAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUsCiAJCQkJICBz
dHJ1Y3QgZHJtX2RwX3ZzY19zZHAgKnZzYykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQogCXZzYy0+c2RwX3R5cGUgPSBEUF9T
RFBfVlNDOwogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSB7Ci0JCWlmIChkZXZf
cHJpdi0+cHNyLmNvbG9yaW1ldHJ5X3N1cHBvcnQgJiYKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3Iy
X2VuYWJsZWQpIHsKKwkJaWYgKGludGVsX2RwLT5wc3IuY29sb3JpbWV0cnlfc3VwcG9ydCAmJgog
CQkgICAgaW50ZWxfZHBfbmVlZHNfdnNjX3NkcChjcnRjX3N0YXRlLCBjb25uX3N0YXRlKSkgewog
CQkJLyogW1BTUjIsICtDb2xvcmltZXRyeV0gKi8KIAkJCWludGVsX2RwX2NvbXB1dGVfdnNjX2Nv
bG9yaW1ldHJ5KGNydGNfc3RhdGUsIGNvbm5fc3RhdGUsCkBAIC0zODQ0LDcgKzM4NDIsNyBAQCBi
b29sIGludGVsX2RwX2luaXRpYWxfZmFzdHNldF9jaGVjayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKIAkJcmV0dXJuIGZhbHNlOwogCX0KIAotCWlmIChDQU5fUFNSKGk5MTUpICYmIGlu
dGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpIHsKKwlpZiAoQ0FOX1BTUihpbnRlbF9kcCkgJiYgaW50
ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkgewogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiRm9y
Y2luZyBmdWxsIG1vZGVzZXQgdG8gY29tcHV0ZSBQU1Igc3RhdGVcbiIpOwogCQljcnRjX3N0YXRl
LT51YXBpLm1vZGVfY2hhbmdlZCA9IHRydWU7CiAJCXJldHVybiBmYWxzZTsKQEAgLTgwNzAsNiAr
ODA2OCwxNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9tb2Rlc2V0X3JldHJ5X3dvcmtfZm4oc3Ry
dWN0IHdvcmtfc3RydWN0ICp3b3JrKQogCWRybV9rbXNfaGVscGVyX2hvdHBsdWdfZXZlbnQoY29u
bmVjdG9yLT5kZXYpOwogfQogCitzdGF0aWMgdm9pZCBpbnRlbF9kcF91cGRhdGVfcGlwZShzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJCQkgc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCisJCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
LAorCQkJCSBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSkKK3sK
KwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwor
CisJaW50ZWxfcGFuZWxfdXBkYXRlX2JhY2tsaWdodChzdGF0ZSwgZW5jb2RlciwgY3J0Y19zdGF0
ZSwgY29ubl9zdGF0ZSk7CisJaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKGlu
dGVsX2RwLCBjcnRjX3N0YXRlKTsKK30KKwogYm9vbAogaW50ZWxfZHBfaW5pdF9jb25uZWN0b3Io
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQsCiAJCQlzdHJ1Y3QgaW50ZWxfY29u
bmVjdG9yICppbnRlbF9jb25uZWN0b3IpCkBAIC04MTg0LDYgKzgxOTMsOCBAQCBpbnRlbF9kcF9p
bml0X2Nvbm5lY3RvcihzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCwKIAkJCSAg
ICAgICAodGVtcCAmIH4weGYpIHwgMHhkKTsKIAl9CiAKKwlpbnRlbF9wc3JfaW5pdChpbnRlbF9k
cCk7CisKIAlyZXR1cm4gdHJ1ZTsKIAogZmFpbDoKQEAgLTgyMjUsNyArODIzNiw3IEBAIGJvb2wg
aW50ZWxfZHBfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJaW50ZWxf
ZW5jb2Rlci0+Z2V0X2NvbmZpZyA9IGludGVsX2RwX2dldF9jb25maWc7CiAJaW50ZWxfZW5jb2Rl
ci0+c3luY19zdGF0ZSA9IGludGVsX2RwX3N5bmNfc3RhdGU7CiAJaW50ZWxfZW5jb2Rlci0+aW5p
dGlhbF9mYXN0c2V0X2NoZWNrID0gaW50ZWxfZHBfaW5pdGlhbF9mYXN0c2V0X2NoZWNrOwotCWlu
dGVsX2VuY29kZXItPnVwZGF0ZV9waXBlID0gaW50ZWxfcGFuZWxfdXBkYXRlX2JhY2tsaWdodDsK
KwlpbnRlbF9lbmNvZGVyLT51cGRhdGVfcGlwZSA9IGludGVsX2RwX3VwZGF0ZV9waXBlOwogCWlu
dGVsX2VuY29kZXItPnN1c3BlbmQgPSBpbnRlbF9kcF9lbmNvZGVyX3N1c3BlbmQ7CiAJaW50ZWxf
ZW5jb2Rlci0+c2h1dGRvd24gPSBpbnRlbF9kcF9lbmNvZGVyX3NodXRkb3duOwogCWlmIChJU19D
SEVSUllWSUVXKGRldl9wcml2KSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9wc3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
cHNyLmMKaW5kZXggZDlhMzk1YzQ4NmQzLi5iYWRkZjYzNTQ3ZTcgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYwpAQCAtNzksMTEgKzc5LDEzIEBACiAgKiB1c2UgcGFn
ZSBmbGlwcy4KICAqLwogCi1zdGF0aWMgYm9vbCBwc3JfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCitzdGF0aWMgYm9vbCBwc3JfZ2xvYmFsX2VuYWJsZWQoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlzd2l0Y2ggKGk5MTUtPnBzci5kZWJ1ZyAmIEk5
MTVfUFNSX0RFQlVHX01PREVfTUFTSykgeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCisJc3dpdGNoIChpbnRlbF9kcC0+cHNyLmRl
YnVnICYgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLKSB7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19E
RUZBVUxUOgotCQlyZXR1cm4gaTkxNS0+cGFyYW1zLmVuYWJsZV9wc3I7CisJCXJldHVybiBkZXZf
cHJpdi0+cGFyYW1zLmVuYWJsZV9wc3I7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFOgog
CQlyZXR1cm4gZmFsc2U7CiAJZGVmYXVsdDoKQEAgLTkxLDkgKzkzLDkgQEAgc3RhdGljIGJvb2wg
cHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCX0KIH0K
IAotc3RhdGljIGJvb2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCitzdGF0aWMgYm9vbCBwc3IyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3dpdGNoIChkZXZfcHJpdi0+cHNyLmRlYnVnICYgSTkxNV9Q
U1JfREVCVUdfTU9ERV9NQVNLKSB7CisJc3dpdGNoIChpbnRlbF9kcC0+cHNyLmRlYnVnICYgSTkx
NV9QU1JfREVCVUdfTU9ERV9NQVNLKSB7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFOgog
CWNhc2UgSTkxNV9QU1JfREVCVUdfRk9SQ0VfUFNSMToKIAkJcmV0dXJuIGZhbHNlOwpAQCAtMTAy
LDExICsxMDQsMTIgQEAgc3RhdGljIGJvb2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJfQogfQogCi1zdGF0aWMgdm9pZCBwc3JfaXJxX2Nv
bnRyb2woc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgcHNy
X2lycV9jb250cm9sKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJZW51bSB0cmFuc2Nv
ZGVyIHRyYW5zX3NoaWZ0OwogCXUzMiBtYXNrLCB2YWw7CiAJaTkxNV9yZWdfdCBpbXJfcmVnOwor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
OwogCiAJLyoKIAkgKiBnZW4xMisgaGFzIHJlZ2lzdGVycyByZWxhdGl2ZSB0byB0cmFuc2NvZGVy
IGFuZCBvbmUgcGVyIHRyYW5zY29kZXIKQEAgLTExNSwxNCArMTE4LDE0IEBAIHN0YXRpYyB2b2lk
IHBzcl9pcnFfY29udHJvbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJICov
CiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpIHsKIAkJdHJhbnNfc2hpZnQgPSAwOwot
CQlpbXJfcmVnID0gVFJBTlNfUFNSX0lNUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCQlp
bXJfcmVnID0gVFJBTlNfUFNSX0lNUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCX0gZWxz
ZSB7Ci0JCXRyYW5zX3NoaWZ0ID0gZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyOworCQl0cmFuc19z
aGlmdCA9IGludGVsX2RwLT5wc3IudHJhbnNjb2RlcjsKIAkJaW1yX3JlZyA9IEVEUF9QU1JfSU1S
OwogCX0KIAogCW1hc2sgPSBFRFBfUFNSX0VSUk9SKHRyYW5zX3NoaWZ0KTsKLQlpZiAoZGV2X3By
aXYtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX0lSUSkKKwlpZiAoaW50ZWxfZHAtPnBzci5k
ZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX0lSUSkKIAkJbWFzayB8PSBFRFBfUFNSX1BPU1RfRVhJVCh0
cmFuc19zaGlmdCkgfAogCQkJRURQX1BTUl9QUkVfRU5UUlkodHJhbnNfc2hpZnQpOwogCkBAIC0x
NzEsMzAgKzE3NCwzMSBAQCBzdGF0aWMgdm9pZCBwc3JfZXZlbnRfcHJpbnQoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUsCiAJCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJcdFBTUiBkaXNh
YmxlZFxuIik7CiB9CiAKLXZvaWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBzcl9paXIpCit2b2lkIGludGVsX3Bzcl9pcnFfaGFu
ZGxlcihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1MzIgcHNyX2lpcikKIHsKLQllbnVtIHRy
YW5zY29kZXIgY3B1X3RyYW5zY29kZXIgPSBkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXI7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJ
ZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVyID0gaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
OwogCWVudW0gdHJhbnNjb2RlciB0cmFuc19zaGlmdDsKIAlpOTE1X3JlZ190IGltcl9yZWc7CiAJ
a3RpbWVfdCB0aW1lX25zID0gIGt0aW1lX2dldCgpOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPj0gMTIpIHsKIAkJdHJhbnNfc2hpZnQgPSAwOwotCQlpbXJfcmVnID0gVFJBTlNfUFNSX0lN
UihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCQlpbXJfcmVnID0gVFJBTlNfUFNSX0lNUihp
bnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCX0gZWxzZSB7Ci0JCXRyYW5zX3NoaWZ0ID0gZGV2
X3ByaXYtPnBzci50cmFuc2NvZGVyOworCQl0cmFuc19zaGlmdCA9IGludGVsX2RwLT5wc3IudHJh
bnNjb2RlcjsKIAkJaW1yX3JlZyA9IEVEUF9QU1JfSU1SOwogCX0KIAogCWlmIChwc3JfaWlyICYg
RURQX1BTUl9QUkVfRU5UUlkodHJhbnNfc2hpZnQpKSB7Ci0JCWRldl9wcml2LT5wc3IubGFzdF9l
bnRyeV9hdHRlbXB0ID0gdGltZV9uczsKKwkJaW50ZWxfZHAtPnBzci5sYXN0X2VudHJ5X2F0dGVt
cHQgPSB0aW1lX25zOwogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAiW3Ry
YW5zY29kZXIgJXNdIFBTUiBlbnRyeSBhdHRlbXB0IGluIDIgdmJsYW5rc1xuIiwKIAkJCSAgICB0
cmFuc2NvZGVyX25hbWUoY3B1X3RyYW5zY29kZXIpKTsKIAl9CiAKIAlpZiAocHNyX2lpciAmIEVE
UF9QU1JfUE9TVF9FWElUKHRyYW5zX3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxhc3RfZXhp
dCA9IHRpbWVfbnM7CisJCWludGVsX2RwLT5wc3IubGFzdF9leGl0ID0gdGltZV9uczsKIAkJZHJt
X2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCiAJCQkgICAgIlt0cmFuc2NvZGVyICVzXSBQU1IgZXhp
dCBjb21wbGV0ZWRcbiIsCiAJCQkgICAgdHJhbnNjb2Rlcl9uYW1lKGNwdV90cmFuc2NvZGVyKSk7
CkBAIC0yMDIsNyArMjA2LDcgQEAgdm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcHNyX2lpcikKIAkJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gOSkgewogCQkJdTMyIHZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCiAJ
CQkJCQlQU1JfRVZFTlQoY3B1X3RyYW5zY29kZXIpKTsKLQkJCWJvb2wgcHNyMl9lbmFibGVkID0g
ZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQ7CisJCQlib29sIHBzcjJfZW5hYmxlZCA9IGludGVs
X2RwLT5wc3IucHNyMl9lbmFibGVkOwogCiAJCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgUFNS
X0VWRU5UKGNwdV90cmFuc2NvZGVyKSwKIAkJCQkgICAgICAgdmFsKTsKQEAgLTIxNiw3ICsyMjAs
NyBAQCB2b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsIHUzMiBwc3JfaWlyKQogCQlkcm1fd2FybigmZGV2X3ByaXYtPmRybSwgIlt0cmFu
c2NvZGVyICVzXSBQU1IgYXV4IGVycm9yXG4iLAogCQkJIHRyYW5zY29kZXJfbmFtZShjcHVfdHJh
bnNjb2RlcikpOwogCi0JCWRldl9wcml2LT5wc3IuaXJxX2F1eF9lcnJvciA9IHRydWU7CisJCWlu
dGVsX2RwLT5wc3IuaXJxX2F1eF9lcnJvciA9IHRydWU7CiAKIAkJLyoKIAkJICogSWYgdGhpcyBp
bnRlcnJ1cHRpb24gaXMgbm90IG1hc2tlZCBpdCB3aWxsIGtlZXAKQEAgLTIzMCw3ICsyMzQsNyBA
QCB2b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIHUzMiBwc3JfaWlyKQogCQl2YWwgfD0gRURQX1BTUl9FUlJPUih0cmFuc19zaGlmdCk7
CiAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbXJfcmVnLCB2YWwpOwogCi0JCXNjaGVkdWxl
X3dvcmsoJmRldl9wcml2LT5wc3Iud29yayk7CisJCXNjaGVkdWxlX3dvcmsoJmludGVsX2RwLT5w
c3Iud29yayk7CiAJfQogfQogCkBAIC0yOTEsMTIgKzI5NSw2IEBAIHZvaWQgaW50ZWxfcHNyX2lu
aXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9CiAJCXRvX2k5MTUoZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNl
LmJhc2UuZGV2KTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLmRwKSB7Ci0JCWRybV93YXJuKCZkZXZf
cHJpdi0+ZHJtLAotCQkJICJNb3JlIHRoYW4gb25lIGVEUCBwYW5lbCBmb3VuZCwgUFNSIHN1cHBv
cnQgc2hvdWxkIGJlIGV4dGVuZGVkXG4iKTsKLQkJcmV0dXJuOwotCX0KLQogCWRybV9kcF9kcGNk
X3JlYWQoJmludGVsX2RwLT5hdXgsIERQX1BTUl9TVVBQT1JULCBpbnRlbF9kcC0+cHNyX2RwY2Qs
CiAJCQkgc2l6ZW9mKGludGVsX2RwLT5wc3JfZHBjZCkpOwogCkBAIC0zMTcsMTIgKzMxNSwxMCBA
QCB2b2lkIGludGVsX3Bzcl9pbml0X2RwY2Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJ
cmV0dXJuOwogCX0KIAotCWRldl9wcml2LT5wc3Iuc2lua19zdXBwb3J0ID0gdHJ1ZTsKLQlkZXZf
cHJpdi0+cHNyLnNpbmtfc3luY19sYXRlbmN5ID0KKwlpbnRlbF9kcC0+cHNyLnNpbmtfc3VwcG9y
dCA9IHRydWU7CisJaW50ZWxfZHAtPnBzci5zaW5rX3N5bmNfbGF0ZW5jeSA9CiAJCWludGVsX2Rw
X2dldF9zaW5rX3N5bmNfbGF0ZW5jeShpbnRlbF9kcCk7CiAKLQlkZXZfcHJpdi0+cHNyLmRwID0g
aW50ZWxfZHA7Ci0KIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5ICYmCiAJICAgIChpbnRl
bF9kcC0+cHNyX2RwY2RbMF0gPT0gRFBfUFNSMl9XSVRIX1lfQ09PUkRfSVNfU1VQUE9SVEVEKSkg
ewogCQlib29sIHlfcmVxID0gaW50ZWxfZHAtPnBzcl9kcGNkWzFdICYKQEAgLTM0MCwxNCArMzM2
LDE0IEBAIHZvaWQgaW50ZWxfcHNyX2luaXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQogCQkgKiBZLWNvb3JkaW5hdGUgcmVxdWlyZW1lbnQgcGFuZWxzIHdlIHdvdWxkIG5lZWQgdG8g
ZW5hYmxlCiAJCSAqIEdUQyBmaXJzdC4KIAkJICovCi0JCWRldl9wcml2LT5wc3Iuc2lua19wc3Iy
X3N1cHBvcnQgPSB5X3JlcSAmJiBhbHBtOworCQlpbnRlbF9kcC0+cHNyLnNpbmtfcHNyMl9zdXBw
b3J0ID0geV9yZXEgJiYgYWxwbTsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJQU1Iy
ICVzc3VwcG9ydGVkXG4iLAotCQkJICAgIGRldl9wcml2LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQg
PyAiIiA6ICJub3QgIik7CisJCQkgICAgaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCA/
ICIiIDogIm5vdCAiKTsKIAotCQlpZiAoZGV2X3ByaXYtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCkg
ewotCQkJZGV2X3ByaXYtPnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ID0KKwkJaWYgKGludGVsX2Rw
LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQpIHsKKwkJCWludGVsX2RwLT5wc3IuY29sb3JpbWV0cnlf
c3VwcG9ydCA9CiAJCQkJaW50ZWxfZHBfZ2V0X2NvbG9yaW1ldHJ5X3N0YXR1cyhpbnRlbF9kcCk7
Ci0JCQlkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkgPQorCQkJaW50ZWxfZHAtPnBzci5z
dV94X2dyYW51bGFyaXR5ID0KIAkJCQlpbnRlbF9kcF9nZXRfc3VfeF9ncmFudWxhcnRpeShpbnRl
bF9kcCk7CiAJCX0KIAl9CkBAIC0zNzMsNyArMzY5LDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bzcl9z
ZXR1cF9hdXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlCVUlMRF9CVUdfT04oc2l6ZW9m
KGF1eF9tc2cpID4gMjApOwogCWZvciAoaSA9IDA7IGkgPCBzaXplb2YoYXV4X21zZyk7IGkgKz0g
NCkKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgRURQX1BTUl9BVVhfREFU
QShkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCisJCQkgICAgICAgRURQX1BTUl9B
VVhfREFUQShpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCiAJCQkgICAgICAgaW50
ZWxfZHBfcGFja19hdXgoJmF1eF9tc2dbaV0sIHNpemVvZihhdXhfbXNnKSAtIGkpKTsKIAogCWF1
eF9jbG9ja19kaXZpZGVyID0gaW50ZWxfZHAtPmdldF9hdXhfY2xvY2tfZGl2aWRlcihpbnRlbF9k
cCwgMCk7CkBAIC0zODQsNyArMzgwLDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bzcl9zZXR1cF9hdXgo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogCS8qIFNlbGVjdCBvbmx5IHZhbGlkIGJpdHMg
Zm9yIFNSRF9BVVhfQ1RMICovCiAJYXV4X2N0bCAmPSBwc3JfYXV4X21hc2s7Ci0JaW50ZWxfZGVf
d3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQVVYX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIp
LAorCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0FVWF9DVEwoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKSwKIAkJICAgICAgIGF1eF9jdGwpOwogfQogCkBAIC0zOTQsMTQgKzM5MCwx
NCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3Npbmsoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKIAl1OCBkcGNkX3ZhbCA9IERQX1BTUl9FTkFCTEU7CiAKIAkvKiBFbmFibGUgQUxQ
TSBhdCBzaW5rIGZvciBwc3IyICovCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSB7
CisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CiAJCWRybV9kcF9kcGNkX3dyaXRl
YigmaW50ZWxfZHAtPmF1eCwgRFBfUkVDRUlWRVJfQUxQTV9DT05GSUcsCiAJCQkJICAgRFBfQUxQ
TV9FTkFCTEUgfAogCQkJCSAgIERQX0FMUE1fTE9DS19FUlJPUl9JUlFfSFBEX0VOQUJMRSk7CiAK
IAkJZHBjZF92YWwgfD0gRFBfUFNSX0VOQUJMRV9QU1IyIHwgRFBfUFNSX0lSUV9IUERfV0lUSF9D
UkNfRVJST1JTOwogCX0gZWxzZSB7Ci0JCWlmIChkZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRieSkK
KwkJaWYgKGludGVsX2RwLT5wc3IubGlua19zdGFuZGJ5KQogCQkJZHBjZF92YWwgfD0gRFBfUFNS
X01BSU5fTElOS19BQ1RJVkU7CiAKIAkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKQEAg
LTQ2NCw3ICs0NjAsNyBAQCBzdGF0aWMgdTggcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCkKIAkgKiBvZmYtYnktb25lIGlzc3VlIHRoYXQgSFcgaGFzIGlu
IHNvbWUgY2FzZXMuCiAJICovCiAJaWRsZV9mcmFtZXMgPSBtYXgoNiwgZGV2X3ByaXYtPnZidC5w
c3IuaWRsZV9mcmFtZXMpOwotCWlkbGVfZnJhbWVzID0gbWF4KGlkbGVfZnJhbWVzLCBkZXZfcHJp
di0+cHNyLnNpbmtfc3luY19sYXRlbmN5ICsgMSk7CisJaWRsZV9mcmFtZXMgPSBtYXgoaWRsZV9m
cmFtZXMsIGludGVsX2RwLT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgKyAxKTsKIAogCWlmIChkcm1f
V0FSTl9PTigmZGV2X3ByaXYtPmRybSwgaWRsZV9mcmFtZXMgPiAweGYpKQogCQlpZGxlX2ZyYW1l
cyA9IDB4ZjsKQEAgLTQ4NCw3ICs0ODAsNyBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0aXZhdGVfcHNy
MShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSkK
IAkJdmFsIHw9IEVEUF9QU1JfTUlOX0xJTktfRU5UUllfVElNRV84X0xJTkVTOwogCi0JaWYgKGRl
dl9wcml2LT5wc3IubGlua19zdGFuZGJ5KQorCWlmIChpbnRlbF9kcC0+cHNyLmxpbmtfc3RhbmRi
eSkKIAkJdmFsIHw9IEVEUF9QU1JfTElOS19TVEFOREJZOwogCiAJdmFsIHw9IGludGVsX3BzcjFf
Z2V0X3RwX3RpbWUoaW50ZWxfZHApOwpAQCAtNDkyLDkgKzQ4OCw5IEBAIHN0YXRpYyB2b2lkIGhz
d19hY3RpdmF0ZV9wc3IxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKElOVEVMX0dF
TihkZXZfcHJpdikgPj0gOCkKIAkJdmFsIHw9IEVEUF9QU1JfQ1JDX0VOQUJMRTsKIAotCXZhbCB8
PSAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFu
c2NvZGVyKSkgJgorCXZhbCB8PSAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwo
aW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSkgJgogCQlFRFBfUFNSX1JFU1RPUkVfUFNSX0FDVElW
RV9DVFhfTUFTSyk7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGRldl9w
cml2LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVE
UF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiB9CiAKIHN0YXRpYyB1
MzIgaW50ZWxfcHNyMl9nZXRfdHBfdGltZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQpAQCAt
NTI5LDcgKzUyNSw3IEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0ZV9wc3IyKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTAgfHwgSVNfR0VN
SU5JTEFLRShkZXZfcHJpdikpCiAJCXZhbCB8PSBFRFBfWV9DT09SRElOQVRFX0VOQUJMRTsKIAot
CXZhbCB8PSBFRFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoZGV2X3ByaXYtPnBzci5zaW5rX3N5bmNf
bGF0ZW5jeSArIDEpOworCXZhbCB8PSBFRFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoaW50ZWxfZHAt
PnBzci5zaW5rX3N5bmNfbGF0ZW5jeSArIDEpOwogCXZhbCB8PSBpbnRlbF9wc3IyX2dldF90cF90
aW1lKGludGVsX2RwKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CkBAIC01
NDgsNyArNTQ0LDcgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjIoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKIAkJdmFsIHw9IEVEUF9QU1IyX0ZBU1RfV0FLRSg3KTsKIAl9CiAKLQlp
ZiAoZGV2X3ByaXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkKSB7CisJaWYgKGludGVsX2Rw
LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCkgewogCQkvKiBXQSAxNDA4MzMwODQ3ICovCiAJ
CWlmIChJU19UR0xfRElTUF9SRVZJRChkZXZfcHJpdiwgVEdMX1JFVklEX0EwLCBUR0xfUkVWSURf
QTApIHx8CiAJCSAgICBJU19SS0xfUkVWSUQoZGV2X3ByaXYsIFJLTF9SRVZJRF9BMCwgUktMX1JF
VklEX0EwKSkKQEAgLTU1NywyMCArNTUzLDIwIEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0ZV9w
c3IyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCQkJICAgICBESVNfUkFNX0JZUEFTU19Q
U1IyX01BTl9UUkFDSyk7CiAKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAg
UFNSMl9NQU5fVFJLX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCQkJICAgICAgIFBT
UjJfTUFOX1RSS19DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwKIAkJCSAgICAgICBQU1Iy
X01BTl9UUktfQ1RMX0VOQUJMRSk7CiAJfSBlbHNlIGlmIChIQVNfUFNSMl9TRUxfRkVUQ0goZGV2
X3ByaXYpKSB7CiAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LAotCQkJICAgICAgIFBTUjJfTUFO
X1RSS19DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgMCk7CisJCQkgICAgICAgUFNSMl9N
QU5fVFJLX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAl9CiAKIAkvKgogCSAq
IFBTUjIgSFcgaXMgaW5jb3JyZWN0bHkgdXNpbmcgRURQX1BTUl9UUDFfVFAzX1NFTCBhbmQgQlNw
ZWMgaXMKIAkgKiByZWNvbW1lbmRpbmcga2VlcCB0aGlzIGJpdCB1bnNldCB3aGlsZSBQU1IyIGlz
IGVuYWJsZWQuCiAJICovCi0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGRl
dl9wcml2LT5wc3IudHJhbnNjb2RlciksIDApOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBF
RFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAotCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgdmFs
KTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CiB9CiAKIHN0YXRpYyBib29sCkBAIC01OTMsNTUgKzU4OSw1OCBA
QCBzdGF0aWMgdTMyIGludGVsX2dldF9mcmFtZV90aW1lX3VzKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjc3RhdGUpCiAJCQkgICAgZHJtX21vZGVfdnJlZnJlc2goJmNzdGF0ZS0+aHcu
YWRqdXN0ZWRfbW9kZSkpOwogfQogCi1zdGF0aWMgdm9pZCBwc3IyX3Byb2dyYW1faWRsZV9mcmFt
ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorc3RhdGljIHZvaWQgcHNyMl9w
cm9ncmFtX2lkbGVfZnJhbWVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCQkJICAgICB1
MzIgaWRsZV9mcmFtZXMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTMyIHZhbDsKIAogCWlkbGVfZnJhbWVzIDw8PSAgRURQ
X1BTUjJfSURMRV9GUkFNRV9TSElGVDsKLQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBF
RFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJdmFsID0gaW50ZWxfZGVf
cmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwog
CXZhbCAmPSB+RURQX1BTUjJfSURMRV9GUkFNRV9NQVNLOwogCXZhbCB8PSBpZGxlX2ZyYW1lczsK
LQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJh
bnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTChp
bnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfcHNy
Ml9lbmFibGVfZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGlj
IHZvaWQgdGdsX3BzcjJfZW5hYmxlX2RjM2NvKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7
Ci0JcHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVzKGRldl9wcml2LCAwKTsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKworCXBzcjJfcHJv
Z3JhbV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCwgMCk7CiAJaW50ZWxfZGlzcGxheV9wb3dlcl9zZXRf
dGFyZ2V0X2RjX3N0YXRlKGRldl9wcml2LCBEQ19TVEFURV9FTl9EQzNDTyk7CiB9CiAKLXN0YXRp
YyB2b2lkIHRnbF9wc3IyX2Rpc2FibGVfZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQorc3RhdGljIHZvaWQgdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogewotCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBkZXZfcHJpdi0+
cHNyLmRwOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOwogCiAJaW50ZWxfZGlzcGxheV9wb3dlcl9zZXRfdGFyZ2V0X2RjX3N0YXRlKGRl
dl9wcml2LCBEQ19TVEFURV9FTl9VUFRPX0RDNik7Ci0JcHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVz
KGRldl9wcml2LCBwc3JfY29tcHV0ZV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCkpOworCXBzcjJfcHJv
Z3JhbV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCwgcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMoaW50ZWxf
ZHApKTsKIH0KIAogc3RhdGljIHZvaWQgdGdsX2RjM2NvX2Rpc2FibGVfd29yayhzdHJ1Y3Qgd29y
a19zdHJ1Y3QgKndvcmspCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0K
LQkJY29udGFpbmVyX29mKHdvcmssIHR5cGVvZigqZGV2X3ByaXYpLCBwc3IuZGMzY29fd29yay53
b3JrKTsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0KKwkJY29udGFpbmVyX29mKHdvcmss
IHR5cGVvZigqaW50ZWxfZHApLCBwc3IuZGMzY29fd29yay53b3JrKTsKIAotCW11dGV4X2xvY2so
JmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsK
IAkvKiBJZiBkZWxheWVkIHdvcmsgaXMgcGVuZGluZywgaXQgaXMgbm90IGlkbGUgKi8KLQlpZiAo
ZGVsYXllZF93b3JrX3BlbmRpbmcoJmRldl9wcml2LT5wc3IuZGMzY29fd29yaykpCisJaWYgKGRl
bGF5ZWRfd29ya19wZW5kaW5nKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspKQogCQlnb3RvIHVu
bG9jazsKIAotCXRnbF9wc3IyX2Rpc2FibGVfZGMzY28oZGV2X3ByaXYpOworCXRnbF9wc3IyX2Rp
c2FibGVfZGMzY28oaW50ZWxfZHApOwogdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYt
PnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiB9CiAKLXN0
YXRpYyB2b2lkIHRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgdGdsX2Rpc2FsbG93X2RjM2NvX29uX3Bz
cjJfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCWlmICghZGV2X3ByaXYtPnBz
ci5kYzNjb19lbmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkKQogCQly
ZXR1cm47CiAKLQljYW5jZWxfZGVsYXllZF93b3JrKCZkZXZfcHJpdi0+cHNyLmRjM2NvX3dvcmsp
OworCWNhbmNlbF9kZWxheWVkX3dvcmsoJmludGVsX2RwLT5wc3IuZGMzY29fd29yayk7CiAJLyog
QmVmb3JlIFBTUjIgZXhpdCBkaXNhbGxvdyBkYzNjbyovCi0JdGdsX3BzcjJfZGlzYWJsZV9kYzNj
byhkZXZfcHJpdik7CisJdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhpbnRlbF9kcCk7CiB9CiAKIHN0
YXRpYyB2b2lkCkBAIC03MTQsNyArNzEzLDcgQEAgc3RhdGljIGJvb2wgaW50ZWxfcHNyMl9jb25m
aWdfdmFsaWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlpbnQgY3J0Y192ZGlzcGxheSA9
IGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUuY3J0Y192ZGlzcGxheTsKIAlpbnQgcHNyX21h
eF9oID0gMCwgcHNyX21heF92ID0gMCwgbWF4X2JwcCA9IDA7CiAKLQlpZiAoIWRldl9wcml2LT5w
c3Iuc2lua19wc3IyX3N1cHBvcnQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLnNpbmtfcHNyMl9zdXBw
b3J0KQogCQlyZXR1cm4gZmFsc2U7CiAKIAlpZiAoIXRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3By
aXYsIGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyKSkgewpAQCAtNzI0LDcgKzcyMyw3IEBAIHN0
YXRpYyBib29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsCiAJCXJldHVybiBmYWxzZTsKIAl9CiAKLQlpZiAoIXBzcjJfZ2xvYmFsX2VuYWJsZWQoZGV2
X3ByaXYpKSB7CisJaWYgKCFwc3IyX2dsb2JhbF9lbmFibGVkKGludGVsX2RwKSkgewogCQlkcm1f
ZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBTUjIgZGlzYWJsZWQgYnkgZmxhZ1xuIik7CiAJCXJl
dHVybiBmYWxzZTsKIAl9CkBAIC03NzMsMTAgKzc3MiwxMCBAQCBzdGF0aWMgYm9vbCBpbnRlbF9w
c3IyX2NvbmZpZ192YWxpZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCSAqIG9ubHkgbmVl
ZCB0byB2YWxpZGF0ZSB0aGUgU1UgYmxvY2sgd2lkdGggaXMgYSBtdWx0aXBsZSBvZgogCSAqIHgg
Z3JhbnVsYXJpdHkuCiAJICovCi0JaWYgKGNydGNfaGRpc3BsYXkgJSBkZXZfcHJpdi0+cHNyLnN1
X3hfZ3JhbnVsYXJpdHkpIHsKKwlpZiAoY3J0Y19oZGlzcGxheSAlIGludGVsX2RwLT5wc3Iuc3Vf
eF9ncmFudWxhcml0eSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAi
UFNSMiBub3QgZW5hYmxlZCwgaGRpc3BsYXkoJWQpIG5vdCBtdWx0aXBsZSBvZiAlZFxuIiwKLQkJ
CSAgICBjcnRjX2hkaXNwbGF5LCBkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkpOworCQkJ
ICAgIGNydGNfaGRpc3BsYXksIGludGVsX2RwLT5wc3Iuc3VfeF9ncmFudWxhcml0eSk7CiAJCXJl
dHVybiBmYWxzZTsKIAl9CiAKQEAgLTgxMSwzMCArODEwLDI1IEBAIHZvaWQgaW50ZWxfcHNyX2Nv
bXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCSZjcnRjX3N0YXRlLT5o
dy5hZGp1c3RlZF9tb2RlOwogCWludCBwc3Jfc2V0dXBfdGltZTsKIAotCWlmICghQ0FOX1BTUihk
ZXZfcHJpdikpCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCi0JaWYgKGlu
dGVsX2RwICE9IGRldl9wcml2LT5wc3IuZHApCi0JCXJldHVybjsKLQotCWlmICghcHNyX2dsb2Jh
bF9lbmFibGVkKGRldl9wcml2KSkgeworCWlmICghcHNyX2dsb2JhbF9lbmFibGVkKGludGVsX2Rw
KSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBTUiBkaXNhYmxlZCBieSBmbGFn
XG4iKTsKIAkJcmV0dXJuOwogCX0KIAogCS8qCiAJICogSFNXIHNwZWMgZXhwbGljaXRseSBzYXlz
IFBTUiBpcyB0aWVkIHRvIHBvcnQgQS4KLQkgKiBCRFcrIHBsYXRmb3JtcyBoYXZlIGEgaW5zdGFu
Y2Ugb2YgUFNSIHJlZ2lzdGVycyBwZXIgdHJhbnNjb2RlciBidXQKLQkgKiBmb3Igbm93IGl0IG9u
bHkgc3VwcG9ydHMgb25lIGluc3RhbmNlIG9mIFBTUiwgc28gbGV0cyBrZWVwIGl0Ci0JICogaGFy
ZGNvZGVkIHRvIFBPUlRfQQorCSAqIEJEVysgcGxhdGZvcm1zIGhhdmUgYSBpbnN0YW5jZSBvZiBQ
U1IgcmVnaXN0ZXJzIHBlciB0cmFuc2NvZGVyLgogCSAqLwotCWlmIChkaWdfcG9ydC0+YmFzZS5w
b3J0ICE9IFBPUlRfQSkgeworCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSAmJiBkaWdfcG9ydC0+
YmFzZS5wb3J0ICE9IFBPUlRfQSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJ
CSAgICAiUFNSIGNvbmRpdGlvbiBmYWlsZWQ6IFBvcnQgbm90IHN1cHBvcnRlZFxuIik7CiAJCXJl
dHVybjsKIAl9CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5zaW5rX25vdF9yZWxpYWJsZSkgeworCWlm
IChpbnRlbF9kcC0+cHNyLnNpbmtfbm90X3JlbGlhYmxlKSB7CiAJCWRybV9kYmdfa21zKCZkZXZf
cHJpdi0+ZHJtLAogCQkJICAgICJQU1Igc2luayBpbXBsZW1lbnRhdGlvbiBpcyBub3QgcmVsaWFi
bGVcbiIpOwogCQlyZXR1cm47CkBAIC04NzAsMjMgKzg2NCwyNCBAQCB2b2lkIGludGVsX3Bzcl9j
b21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogc3RhdGljIHZvaWQgaW50
ZWxfcHNyX2FjdGl2YXRlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJZW51bSB0
cmFuc2NvZGVyIHRyYW5zY29kZXIgPSBpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXI7CiAKLQlpZiAo
dHJhbnNjb2Rlcl9oYXNfcHNyMihkZXZfcHJpdiwgZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkK
KwlpZiAodHJhbnNjb2Rlcl9oYXNfcHNyMihkZXZfcHJpdiwgdHJhbnNjb2RlcikpCiAJCWRybV9X
QVJOX09OKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVE
UF9QU1IyX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKSAmIEVEUF9QU1IyX0VOQUJMRSk7
CisJCQkgICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKHRyYW5zY29kZXIp
KSAmIEVEUF9QU1IyX0VOQUJMRSk7CiAKIAlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwKLQkJ
ICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3IudHJh
bnNjb2RlcikpICYgRURQX1BTUl9FTkFCTEUpOwotCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJt
LCBkZXZfcHJpdi0+cHNyLmFjdGl2ZSk7Ci0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYt
PnBzci5sb2NrKTsKKwkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKHRy
YW5zY29kZXIpKSAmIEVEUF9QU1JfRU5BQkxFKTsKKwlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRy
bSwgaW50ZWxfZHAtPnBzci5hY3RpdmUpOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmludGVsX2Rw
LT5wc3IubG9jayk7CiAKIAkvKiBwc3IxIGFuZCBwc3IyIGFyZSBtdXR1YWxseSBleGNsdXNpdmUu
Ki8KLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpCisJaWYgKGludGVsX2RwLT5wc3Iu
cHNyMl9lbmFibGVkKQogCQloc3dfYWN0aXZhdGVfcHNyMihpbnRlbF9kcCk7CiAJZWxzZQogCQlo
c3dfYWN0aXZhdGVfcHNyMShpbnRlbF9kcCk7CiAKLQlkZXZfcHJpdi0+cHNyLmFjdGl2ZSA9IHRy
dWU7CisJaW50ZWxfZHAtPnBzci5hY3RpdmUgPSB0cnVlOwogfQogCiBzdGF0aWMgdm9pZCBpbnRl
bF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLApAQCAtOTAyLDcg
Kzg5Nyw3IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfc291cmNlKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCiAJaWYgKElTX0hBU1dFTEwoZGV2X3ByaXYpIHx8IElTX0JST0FEV0VM
TChkZXZfcHJpdikpCiAJCWhzd19wc3Jfc2V0dXBfYXV4KGludGVsX2RwKTsKIAotCWlmIChkZXZf
cHJpdi0+cHNyLnBzcjJfZW5hYmxlZCAmJiAoSVNfR0VOKGRldl9wcml2LCA5KSAmJgorCWlmIChp
bnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCAmJiAoSVNfR0VOKGRldl9wcml2LCA5KSAmJgogCQkJ
CQkgICAhSVNfR0VNSU5JTEFLRShkZXZfcHJpdikpKSB7CiAJCWk5MTVfcmVnX3QgcmVnID0gQ0hJ
Q0tFTl9UUkFOUyhjcHVfdHJhbnNjb2Rlcik7CiAJCXUzMiBjaGlja2VuID0gaW50ZWxfZGVfcmVh
ZChkZXZfcHJpdiwgcmVnKTsKQEAgLTkyNiwxMCArOTIxLDEwIEBAIHN0YXRpYyB2b2lkIGludGVs
X3Bzcl9lbmFibGVfc291cmNlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPCAxMSkKIAkJbWFzayB8PSBFRFBfUFNSX0RFQlVHX01BU0tfRElTUF9S
RUdfV1JJVEU7CiAKLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9ERUJVRyhkZXZf
cHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNS
X0RFQlVHKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksCiAJCSAgICAgICBtYXNrKTsKIAotCXBz
cl9pcnFfY29udHJvbChkZXZfcHJpdik7CisJcHNyX2lycV9jb250cm9sKGludGVsX2RwKTsKIAog
CWlmIChjcnRjX3N0YXRlLT5kYzNjb19leGl0bGluZSkgewogCQl1MzIgdmFsOwpAQCAtOTQ3LDMw
ICs5NDIsMzAgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2Uoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIAogCWlmIChIQVNfUFNSX0hXX1RSQUNLSU5HKGRldl9wcml2KSAm
JiBIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYpKQogCQlpbnRlbF9kZV9ybXcoZGV2X3ByaXYs
IENISUNLRU5fUEFSMV8xLCBJR05PUkVfUFNSMl9IV19UUkFDS0lORywKLQkJCSAgICAgZGV2X3By
aXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkID8KKwkJCSAgICAgaW50ZWxfZHAtPnBzci5w
c3IyX3NlbF9mZXRjaF9lbmFibGVkID8KIAkJCSAgICAgSUdOT1JFX1BTUjJfSFdfVFJBQ0tJTkcg
OiAwKTsKIH0KIAotc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9s
b2NrZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJCQkgICAgY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBkcm1fY29u
bmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKQogewotCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAg
PSBkZXZfcHJpdi0+cHNyLmRwOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19w
b3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwogCXN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyID0gJmRpZ19wb3J0LT5iYXNlOwogCXUzMiB2YWw7CiAKLQlkcm1fV0FSTl9PTigmZGV2
X3ByaXYtPmRybSwgZGV2X3ByaXYtPnBzci5lbmFibGVkKTsKKwlkcm1fV0FSTl9PTigmZGV2X3By
aXYtPmRybSwgaW50ZWxfZHAtPnBzci5lbmFibGVkKTsKIAotCWRldl9wcml2LT5wc3IucHNyMl9l
bmFibGVkID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7Ci0JZGV2X3ByaXYtPnBzci5idXN5X2Zyb250
YnVmZmVyX2JpdHMgPSAwOwotCWRldl9wcml2LT5wc3IucGlwZSA9IHRvX2ludGVsX2NydGMoY3J0
Y19zdGF0ZS0+dWFwaS5jcnRjKS0+cGlwZTsKLQlkZXZfcHJpdi0+cHNyLmRjM2NvX2VuYWJsZWQg
PSAhIWNydGNfc3RhdGUtPmRjM2NvX2V4aXRsaW5lOwotCWRldl9wcml2LT5wc3IudHJhbnNjb2Rl
ciA9IGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyOworCWludGVsX2RwLT5wc3IucHNyMl9lbmFi
bGVkID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7CisJaW50ZWxfZHAtPnBzci5idXN5X2Zyb250YnVm
ZmVyX2JpdHMgPSAwOworCWludGVsX2RwLT5wc3IucGlwZSA9IHRvX2ludGVsX2NydGMoY3J0Y19z
dGF0ZS0+dWFwaS5jcnRjKS0+cGlwZTsKKwlpbnRlbF9kcC0+cHNyLmRjM2NvX2VuYWJsZWQgPSAh
IWNydGNfc3RhdGUtPmRjM2NvX2V4aXRsaW5lOworCWludGVsX2RwLT5wc3IudHJhbnNjb2RlciA9
IGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyOwogCS8qIERDNS9EQzYgcmVxdWlyZXMgYXQgbGVh
c3QgNiBpZGxlIGZyYW1lcyAqLwogCXZhbCA9IHVzZWNzX3RvX2ppZmZpZXMoaW50ZWxfZ2V0X2Zy
YW1lX3RpbWVfdXMoY3J0Y19zdGF0ZSkgKiA2KTsKLQlkZXZfcHJpdi0+cHNyLmRjM2NvX2V4aXRf
ZGVsYXkgPSB2YWw7Ci0JZGV2X3ByaXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkID0gY3J0
Y19zdGF0ZS0+ZW5hYmxlX3BzcjJfc2VsX2ZldGNoOworCWludGVsX2RwLT5wc3IuZGMzY29fZXhp
dF9kZWxheSA9IHZhbDsKKwlpbnRlbF9kcC0+cHNyLnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQgPSBj
cnRjX3N0YXRlLT5lbmFibGVfcHNyMl9zZWxfZmV0Y2g7CiAKIAkvKgogCSAqIElmIGEgUFNSIGVy
cm9yIGhhcHBlbmVkIGFuZCB0aGUgZHJpdmVyIGlzIHJlbG9hZGVkLCB0aGUgRURQX1BTUl9JSVIK
QEAgLTk4MiwyNyArOTc3LDI3IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2Vk
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkgKi8KIAlpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMikgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJ
CSAgICBUUkFOU19QU1JfSUlSKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBU
UkFOU19QU1JfSUlSKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQl2YWwgJj0gRURQX1BT
Ul9FUlJPUigwKTsKIAl9IGVsc2UgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBF
RFBfUFNSX0lJUik7Ci0JCXZhbCAmPSBFRFBfUFNSX0VSUk9SKGRldl9wcml2LT5wc3IudHJhbnNj
b2Rlcik7CisJCXZhbCAmPSBFRFBfUFNSX0VSUk9SKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcik7
CiAJfQogCWlmICh2YWwpIHsKLQkJZGV2X3ByaXYtPnBzci5zaW5rX25vdF9yZWxpYWJsZSA9IHRy
dWU7CisJCWludGVsX2RwLT5wc3Iuc2lua19ub3RfcmVsaWFibGUgPSB0cnVlOwogCQlkcm1fZGJn
X2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAiUFNSIGludGVycnVwdGlvbiBlcnJvciBzZXQs
IG5vdCBlbmFibGluZyBQU1JcbiIpOwogCQlyZXR1cm47CiAJfQogCiAJZHJtX2RiZ19rbXMoJmRl
dl9wcml2LT5kcm0sICJFbmFibGluZyBQU1Ilc1xuIiwKLQkJICAgIGRldl9wcml2LT5wc3IucHNy
Ml9lbmFibGVkID8gIjIiIDogIjEiKTsKKwkJICAgIGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVk
ID8gIjIiIDogIjEiKTsKIAlpbnRlbF9kcF9jb21wdXRlX3Bzcl92c2Nfc2RwKGludGVsX2RwLCBj
cnRjX3N0YXRlLCBjb25uX3N0YXRlLAotCQkJCSAgICAgJmRldl9wcml2LT5wc3IudnNjKTsKLQlp
bnRlbF93cml0ZV9kcF92c2Nfc2RwKGVuY29kZXIsIGNydGNfc3RhdGUsICZkZXZfcHJpdi0+cHNy
LnZzYyk7CisJCQkJICAgICAmaW50ZWxfZHAtPnBzci52c2MpOworCWludGVsX3dyaXRlX2RwX3Zz
Y19zZHAoZW5jb2RlciwgY3J0Y19zdGF0ZSwgJmludGVsX2RwLT5wc3IudnNjKTsKIAlpbnRlbF9w
c3JfZW5hYmxlX3NpbmsoaW50ZWxfZHApOwogCWludGVsX3Bzcl9lbmFibGVfc291cmNlKGludGVs
X2RwLCBjcnRjX3N0YXRlKTsKLQlkZXZfcHJpdi0+cHNyLmVuYWJsZWQgPSB0cnVlOworCWludGVs
X2RwLT5wc3IuZW5hYmxlZCA9IHRydWU7CiAKIAlpbnRlbF9wc3JfYWN0aXZhdGUoaW50ZWxfZHAp
OwogfQpAQCAtMTAyMSw3ICsxMDE2LDcgQEAgdm9pZCBpbnRlbF9wc3JfZW5hYmxlKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8IGRl
dl9wcml2LT5wc3IuZHAgIT0gaW50ZWxfZHApCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKIAkJ
cmV0dXJuOwogCiAJaWYgKCFjcnRjX3N0YXRlLT5oYXNfcHNyKQpAQCAtMTAyOSw0NiArMTAyNCw0
NyBAQCB2b2lkIGludGVsX3Bzcl9lbmFibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAog
CWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBkZXZfcHJpdi0+ZHJycy5kcCk7CiAKLQltdXRl
eF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCWludGVsX3Bzcl9lbmFibGVfbG9ja2VkKGRl
dl9wcml2LCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKLQltdXRleF91bmxvY2soJmRldl9wcml2
LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlpbnRlbF9w
c3JfZW5hYmxlX2xvY2tlZChpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CisJbXV0
ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9w
c3JfZXhpdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBp
bnRlbF9wc3JfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXUzMiB2YWw7
CiAKLQlpZiAoIWRldl9wcml2LT5wc3IuYWN0aXZlKSB7Ci0JCWlmICh0cmFuc2NvZGVyX2hhc19w
c3IyKGRldl9wcml2LCBkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKSB7CisJaWYgKCFpbnRlbF9k
cC0+cHNyLmFjdGl2ZSkgeworCQlpZiAodHJhbnNjb2Rlcl9oYXNfcHNyMihkZXZfcHJpdiwgaW50
ZWxfZHAtPnBzci50cmFuc2NvZGVyKSkgewogCQkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwKLQkJCQkJICAgIEVEUF9QU1IyX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJ
CQkJICAgIEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJCWRybV9X
QVJOX09OKCZkZXZfcHJpdi0+ZHJtLCB2YWwgJiBFRFBfUFNSMl9FTkFCTEUpOwogCQl9CiAKIAkJ
dmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgRURQX1BTUl9DVEwoZGV2X3By
aXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2RlcikpOwogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgdmFsICYgRURQX1BT
Ul9FTkFCTEUpOwogCiAJCXJldHVybjsKIAl9CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2Vu
YWJsZWQpIHsKLQkJdGdsX2Rpc2FsbG93X2RjM2NvX29uX3BzcjJfZXhpdChkZXZfcHJpdik7CisJ
aWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCXRnbF9kaXNhbGxvd19kYzNjb19v
bl9wc3IyX2V4aXQoaW50ZWxfZHApOwogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAot
CQkJCSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAg
IEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZHJtX1dBUk5fT04o
JmRldl9wcml2LT5kcm0sICEodmFsICYgRURQX1BTUjJfRU5BQkxFKSk7CiAJCXZhbCAmPSB+RURQ
X1BTUjJfRU5BQkxFOwogCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwKLQkJCSAgICAgICBFRFBf
UFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKKwkJCSAgICAgICBFRFBf
UFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKIAl9IGVsc2UgewogCQl2
YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX0NUTChkZXZfcHJp
di0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50
cmFuc2NvZGVyKSk7CiAJCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCAhKHZhbCAmIEVEUF9Q
U1JfRU5BQkxFKSk7CiAJCXZhbCAmPSB+RURQX1BTUl9FTkFCTEU7CiAJCWludGVsX2RlX3dyaXRl
KGRldl9wcml2LAotCQkJICAgICAgIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2Rl
ciksIHZhbCk7CisJCQkgICAgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KSwgdmFsKTsKIAl9Ci0JZGV2X3ByaXYtPnBzci5hY3RpdmUgPSBmYWxzZTsKKwlpbnRlbF9kcC0+
cHNyLmFjdGl2ZSA9IGZhbHNlOwogfQogCiBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZV9s
b2NrZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKQEAgLTEwNzcsMjEgKzEwNzMsMjEgQEAg
c3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCiAJaTkxNV9yZWdfdCBwc3Jfc3RhdHVzOwogCXUzMiBwc3Jfc3RhdHVzX21hc2s7CiAK
LQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCWxvY2tkZXBfYXNz
ZXJ0X2hlbGQoJmludGVsX2RwLT5wc3IubG9jayk7CiAKLQlpZiAoIWRldl9wcml2LT5wc3IuZW5h
YmxlZCkKKwlpZiAoIWludGVsX2RwLT5wc3IuZW5hYmxlZCkKIAkJcmV0dXJuOwogCiAJZHJtX2Ri
Z19rbXMoJmRldl9wcml2LT5kcm0sICJEaXNhYmxpbmcgUFNSJXNcbiIsCi0JCSAgICBkZXZfcHJp
di0+cHNyLnBzcjJfZW5hYmxlZCA/ICIyIiA6ICIxIik7CisJCSAgICBpbnRlbF9kcC0+cHNyLnBz
cjJfZW5hYmxlZCA/ICIyIiA6ICIxIik7CiAKLQlpbnRlbF9wc3JfZXhpdChkZXZfcHJpdik7CisJ
aW50ZWxfcHNyX2V4aXQoaW50ZWxfZHApOwogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFi
bGVkKSB7Ci0JCXBzcl9zdGF0dXMgPSBFRFBfUFNSMl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFu
c2NvZGVyKTsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwkJcHNyX3N0YXR1
cyA9IEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCQlwc3Jfc3Rh
dHVzX21hc2sgPSBFRFBfUFNSMl9TVEFUVVNfU1RBVEVfTUFTSzsKIAl9IGVsc2UgewotCQlwc3Jf
c3RhdHVzID0gRURQX1BTUl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJcHNy
X3N0YXR1cyA9IEVEUF9QU1JfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcik7CiAJCXBz
cl9zdGF0dXNfbWFzayA9IEVEUF9QU1JfU1RBVFVTX1NUQVRFX01BU0s7CiAJfQogCkBAIC0xMTAx
LDcgKzEwOTcsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCkKIAkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwgIlRpbWVkIG91
dCB3YWl0aW5nIFBTUiBpZGxlIHN0YXRlXG4iKTsKIAogCS8qIFdBIDE0MDgzMzA4NDcgKi8KLQlp
ZiAoZGV2X3ByaXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkICYmCisJaWYgKGludGVsX2Rw
LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCAmJgogCSAgICAoSVNfVEdMX0RJU1BfUkVWSUQo
ZGV2X3ByaXYsIFRHTF9SRVZJRF9BMCwgVEdMX1JFVklEX0EwKSB8fAogCSAgICAgSVNfUktMX1JF
VklEKGRldl9wcml2LCBSS0xfUkVWSURfQTAsIFJLTF9SRVZJRF9BMCkpKQogCQlpbnRlbF9kZV9y
bXcoZGV2X3ByaXYsIENISUNLRU5fUEFSMV8xLApAQCAtMTExMCwxMCArMTEwNiwxMCBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAkvKiBEaXNhYmxlIFBTUiBvbiBTaW5rICovCiAJZHJtX2RwX2RwY2Rfd3JpdGViKCZpbnRl
bF9kcC0+YXV4LCBEUF9QU1JfRU5fQ0ZHLCAwKTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJf
ZW5hYmxlZCkKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpCiAJCWRybV9kcF9kcGNk
X3dyaXRlYigmaW50ZWxfZHAtPmF1eCwgRFBfUkVDRUlWRVJfQUxQTV9DT05GSUcsIDApOwogCi0J
ZGV2X3ByaXYtPnBzci5lbmFibGVkID0gZmFsc2U7CisJaW50ZWxfZHAtPnBzci5lbmFibGVkID0g
ZmFsc2U7CiB9CiAKIC8qKgpAQCAtMTEzMSwyMCArMTEyNywyMiBAQCB2b2lkIGludGVsX3Bzcl9k
aXNhYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJaWYgKCFvbGRfY3J0Y19zdGF0ZS0+
aGFzX3BzcikKIAkJcmV0dXJuOwogCi0JaWYgKGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCAh
Q0FOX1BTUihkZXZfcHJpdikpKQorCWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgIUNB
Tl9QU1IoaW50ZWxfZHApKSkKIAkJcmV0dXJuOwogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBz
ci5sb2NrKTsKKwltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJaW50ZWxfcHNy
X2Rpc2FibGVfbG9ja2VkKGludGVsX2RwKTsKIAotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBz
ci5sb2NrKTsKLQljYW5jZWxfd29ya19zeW5jKCZkZXZfcHJpdi0+cHNyLndvcmspOwotCWNhbmNl
bF9kZWxheWVkX3dvcmtfc3luYygmZGV2X3ByaXYtPnBzci5kYzNjb193b3JrKTsKKwltdXRleF91
bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJY2FuY2VsX3dvcmtfc3luYygmaW50ZWxfZHAt
PnBzci53b3JrKTsKKwljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmludGVsX2RwLT5wc3IuZGMz
Y29fd29yayk7CiB9CiAKLXN0YXRpYyB2b2lkIHBzcl9mb3JjZV9od190cmFja2luZ19leGl0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHBzcl9mb3JjZV9o
d190cmFja2luZ19leGl0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisKIAlpZiAo
SVNfVElHRVJMQUtFKGRldl9wcml2KSkKIAkJLyoKIAkJICogV3JpdGVzIHRvIENVUlNVUkZMSVZF
IGluIFRHTCBhcmUgY2F1c2luZyBJT01NVSBlcnJvcnMgYW5kCkBAIC0xMTU4LDcgKzExNTYsNyBA
QCBzdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiAJCSAqIFNvIHVzaW5nIHRoaXMgd29ya2Fyb3VuZCB1bnRpbCB0
aGlzIGlzc3VlIGlzIHJvb3QgY2F1c2VkCiAJCSAqIGFuZCBhIGJldHRlciBmaXggaXMgZm91bmQu
CiAJCSAqLwotCQlpbnRlbF9wc3JfZXhpdChkZXZfcHJpdik7CisJCWludGVsX3Bzcl9leGl0KGlu
dGVsX2RwKTsKIAllbHNlIGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDkpCiAJCS8qCiAJCSAq
IERpc3BsYXkgV0EgIzA4ODQ6IHNrbCsKQEAgLTExNjksMTMgKzExNjcsMTMgQEAgc3RhdGljIHZv
aWQgcHNyX2ZvcmNlX2h3X3RyYWNraW5nX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogCQkgKiBidXQgaXQgbWFrZXMgbW9yZSBzZW5zZSB3cml0ZSB0byB0aGUgY3VycmVu
dCBhY3RpdmUKIAkJICogcGlwZS4KIAkJICovCi0JCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBD
VVJTVVJGTElWRShkZXZfcHJpdi0+cHNyLnBpcGUpLCAwKTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2
X3ByaXYsIENVUlNVUkZMSVZFKGludGVsX2RwLT5wc3IucGlwZSksIDApOwogCWVsc2UKIAkJLyoK
IAkJICogQSB3cml0ZSB0byBDVVJTVVJGTElWRSBkbyBub3QgY2F1c2UgSFcgdHJhY2tpbmcgdG8g
ZXhpdCBQU1IKIAkJICogb24gb2xkZXIgZ2VucyBzbyBkb2luZyB0aGUgbWFudWFsIGV4aXQgaW5z
dGVhZC4KIAkJICovCi0JCWludGVsX3Bzcl9leGl0KGRldl9wcml2KTsKKwkJaW50ZWxfcHNyX2V4
aXQoaW50ZWxfZHApOwogfQogCiB2b2lkIGludGVsX3BzcjJfcHJvZ3JhbV9wbGFuZV9zZWxfZmV0
Y2goc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKQEAgLTEyMTUsMTEgKzEyMTMsMTEgQEAgdm9p
ZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAq
cGxhbmUsCiAJaW50ZWxfZGVfd3JpdGVfZncoZGV2X3ByaXYsIFBMQU5FX1NFTF9GRVRDSF9TSVpF
KHBpcGUsIHBsYW5lLT5pZCksIHZhbCk7CiB9CiAKLXZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3Ry
YW5zX21hbl90cmtfY3RsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KQordm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCwKKwkJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0
Y19zdGF0ZS0+dWFwaS5jcnRjKTsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZf
cHJpdi0+cHNyOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5
MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwog
CiAJaWYgKCFIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYpIHx8CiAJICAgICFjcnRjX3N0YXRl
LT5lbmFibGVfcHNyMl9zZWxfZmV0Y2gpCkBAIC0xMzM2LDEzICsxMzM0LDEzIEBAIHZvaWQgaW50
ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBjb25zdCBz
dHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgaTkx
NV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZp
bnRlbF9kcC0+cHNyOwogCWJvb2wgZW5hYmxlLCBwc3IyX2VuYWJsZTsKIAotCWlmICghQ0FOX1BT
UihkZXZfcHJpdikgfHwgUkVBRF9PTkNFKHBzci0+ZHApICE9IGludGVsX2RwKQorCWlmICghQ0FO
X1BTUihpbnRlbF9kcCkpCiAJCXJldHVybjsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3Iu
bG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWVuYWJsZSA9IGNy
dGNfc3RhdGUtPmhhc19wc3I7CiAJcHNyMl9lbmFibGUgPSBjcnRjX3N0YXRlLT5oYXNfcHNyMjsK
QEAgLTEzNTAsMTUgKzEzNDgsMTUgQEAgdm9pZCBpbnRlbF9wc3JfdXBkYXRlKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCiAJaWYgKGVuYWJsZSA9PSBwc3ItPmVuYWJsZWQgJiYgcHNyMl9lbmFi
bGUgPT0gcHNyLT5wc3IyX2VuYWJsZWQpIHsKIAkJLyogRm9yY2UgYSBQU1IgZXhpdCB3aGVuIGVu
YWJsaW5nIENSQyB0byBhdm9pZCBDUkMgdGltZW91dHMgKi8KIAkJaWYgKGNydGNfc3RhdGUtPmNy
Y19lbmFibGVkICYmIHBzci0+ZW5hYmxlZCkKLQkJCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0
KGRldl9wcml2KTsKKwkJCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0KGludGVsX2RwKTsKIAkJ
ZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDkgJiYgcHNyLT5lbmFibGVkKSB7CiAJCQkv
KgogCQkJICogQWN0aXZhdGUgUFNSIGFnYWluIGFmdGVyIGEgZm9yY2UgZXhpdCB3aGVuIGVuYWJs
aW5nCiAJCQkgKiBDUkMgaW4gb2xkZXIgZ2VucwogCQkJICovCi0JCQlpZiAoIWRldl9wcml2LT5w
c3IuYWN0aXZlICYmCi0JCQkgICAgIWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRz
KQotCQkJCXNjaGVkdWxlX3dvcmsoJmRldl9wcml2LT5wc3Iud29yayk7CisJCQlpZiAoIWludGVs
X2RwLT5wc3IuYWN0aXZlICYmCisJCQkgICAgIWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZl
cl9iaXRzKQorCQkJCXNjaGVkdWxlX3dvcmsoJmludGVsX2RwLT5wc3Iud29yayk7CiAJCX0KIAog
CQlnb3RvIHVubG9jazsKQEAgLTEzNjgsMzQgKzEzNjYsMjMgQEAgdm9pZCBpbnRlbF9wc3JfdXBk
YXRlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tl
ZChpbnRlbF9kcCk7CiAKIAlpZiAoZW5hYmxlKQotCQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChk
ZXZfcHJpdiwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CisJCWludGVsX3Bzcl9lbmFibGVfbG9j
a2VkKGludGVsX2RwLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKIAogdW5sb2NrOgotCW11dGV4
X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5w
c3IubG9jayk7CiB9CiAKIC8qKgotICogaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUgLSB3YWl0IGZv
ciBQU1IxIHRvIGlkbGUKLSAqIEBuZXdfY3J0Y19zdGF0ZTogbmV3IENSVEMgc3RhdGUKKyAqIHBz
cl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxlCisgKiBAaW50ZWxfZHA6IElu
dGVsIERQCiAgKiBAb3V0X3ZhbHVlOiBQU1Igc3RhdHVzIGluIGNhc2Ugb2YgZmFpbHVyZQogICoK
LSAqIFRoaXMgZnVuY3Rpb24gaXMgZXhwZWN0ZWQgdG8gYmUgY2FsbGVkIGZyb20gcGlwZV91cGRh
dGVfc3RhcnQoKSB3aGVyZSBpdCBpcwotICogbm90IGV4cGVjdGVkIHRvIHJhY2Ugd2l0aCBQU1Ig
ZW5hYmxlIG9yIGRpc2FibGUuCi0gKgogICogUmV0dXJuczogMCBvbiBzdWNjZXNzIG9yIC1FVElN
RU9VVCBpZiBQU1Igc3RhdHVzIGRvZXMgbm90IGlkbGUuCisgKgogICovCi1pbnQgaW50ZWxfcHNy
X3dhaXRfZm9yX2lkbGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0
YXRlLAotCQkJICAgIHUzMiAqb3V0X3ZhbHVlKQorc3RhdGljIGludCBwc3Jfd2FpdF9mb3JfaWRs
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1MzIgKm91dF92YWx1ZSkKIHsKLQlzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMobmV3X2NydGNfc3RhdGUtPnVhcGkuY3J0
Yyk7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5i
YXNlLmRldik7Ci0KLQlpZiAoIWRldl9wcml2LT5wc3IuZW5hYmxlZCB8fCAhbmV3X2NydGNfc3Rh
dGUtPmhhc19wc3IpCi0JCXJldHVybiAwOwotCi0JLyogRklYTUU6IFVwZGF0ZSB0aGlzIGZvciBQ
U1IyIGlmIHdlIG5lZWQgdG8gd2FpdCBmb3IgaWRsZSAqLwotCWlmIChSRUFEX09OQ0UoZGV2X3By
aXYtPnBzci5wc3IyX2VuYWJsZWQpKQotCQlyZXR1cm4gMDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCS8qCiAJICogRnJvbSBi
c3BlYzogUGFuZWwgU2VsZiBSZWZyZXNoIChCRFcrKQpAQCAtMTQwMywzMiArMTM5MCw2NCBAQCBp
bnQgaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
Km5ld19jcnRjX3N0YXRlLAogCSAqIGV4aXQgdHJhaW5pbmcgdGltZSArIDEuNSBtcyBvZiBhdXgg
Y2hhbm5lbCBoYW5kc2hha2UuIDUwIG1zIGlzCiAJICogZGVmZW5zaXZlIGVub3VnaCB0byBjb3Zl
ciBldmVyeXRoaW5nLgogCSAqLwotCiAJcmV0dXJuIF9faW50ZWxfd2FpdF9mb3JfcmVnaXN0ZXIo
JmRldl9wcml2LT51bmNvcmUsCi0JCQkJCSBFRFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRy
YW5zY29kZXIpLAorCQkJCQkgRURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KSwKIAkJCQkJIEVEUF9QU1JfU1RBVFVTX1NUQVRFX01BU0ssCiAJCQkJCSBFRFBfUFNSX1NUQVRV
U19TVEFURV9JRExFLCAyLCA1MCwKIAkJCQkJIG91dF92YWx1ZSk7CiB9CiAKLXN0YXRpYyBib29s
IF9fcHNyX3dhaXRfZm9yX2lkbGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKKy8qKgorICogaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUgLSB3YWl0IGZvciBQU1IxIHRv
IGlkbGUKKyAqIEBuZXdfY3J0Y19zdGF0ZTogbmV3IENSVEMgc3RhdGUKKyAqCisgKiBUaGlzIGZ1
bmN0aW9uIGlzIGV4cGVjdGVkIHRvIGJlIGNhbGxlZCBmcm9tIHBpcGVfdXBkYXRlX3N0YXJ0KCkg
d2hlcmUgaXQgaXMKKyAqIG5vdCBleHBlY3RlZCB0byByYWNlIHdpdGggUFNSIGVuYWJsZSBvciBk
aXNhYmxlLgorICovCit2b2lkIGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KG5ld19jcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7
CisJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7CisJdTMyIHBzcl9zdGF0dXM7CisKKwlp
ZiAoIW5ld19jcnRjX3N0YXRlLT5oYXNfcHNyKQorCQlyZXR1cm47CisKKwlmb3JfZWFjaF9pbnRl
bF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCisJCWlmIChlbmNvZGVyLT50eXBlICE9
IElOVEVMX09VVFBVVF9FRFApCisJCQljb250aW51ZTsKKworCQkvKiB3aGVuIHRoZSBQU1IxIGlz
IGVuYWJsZWQgKi8KKwkJaWYgKGludGVsX2RwLT5wc3IuZW5hYmxlZCAmJiAhaW50ZWxfZHAtPnBz
ci5wc3IyX2VuYWJsZWQpIHsKKwkJCWlmIChwc3Jfd2FpdF9mb3JfaWRsZShpbnRlbF9kcCwgJnBz
cl9zdGF0dXMpKQorCQkJCWRybV9lcnIoJmRldl9wcml2LT5kcm0sCisJCQkJCSJQU1IgaWRsZSB0
aW1lZCBvdXQgMHgleCwgYXRvbWljIHVwZGF0ZSBtYXkgZmFpbFxuIiwKKwkJCQkJcHNyX3N0YXR1
cyk7CisJCX0KKwl9Cit9CisKK3N0YXRpYyBib29sIF9fcHNyX3dhaXRfZm9yX2lkbGVfbG9ja2Vk
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJaTkxNV9yZWdfdCByZWc7CiAJdTMyIG1h
c2s7CiAJaW50IGVycjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90
b19pOTE1KGludGVsX2RwKTsKIAotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVkKQorCWlmICgh
aW50ZWxfZHAtPnBzci5lbmFibGVkKQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoZGV2X3ByaXYt
PnBzci5wc3IyX2VuYWJsZWQpIHsKLQkJcmVnID0gRURQX1BTUjJfU1RBVFVTKGRldl9wcml2LT5w
c3IudHJhbnNjb2Rlcik7CisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCXJl
ZyA9IEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCQltYXNrID0g
RURQX1BTUjJfU1RBVFVTX1NUQVRFX01BU0s7CiAJfSBlbHNlIHsKLQkJcmVnID0gRURQX1BTUl9T
VEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJcmVnID0gRURQX1BTUl9TVEFUVVMo
aW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJbWFzayA9IEVEUF9QU1JfU1RBVFVTX1NUQVRF
X01BU0s7CiAJfQogCi0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4
X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWVyciA9IGludGVsX2RlX3dhaXRfZm9y
X2NsZWFyKGRldl9wcml2LCByZWcsIG1hc2ssIDUwKTsKIAlpZiAoZXJyKQpAQCAtMTQzNiw4ICsx
NDU1LDggQEAgc3RhdGljIGJvb2wgX19wc3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkJIlRpbWVkIG91dCB3YWl0aW5nIGZvciBQU1Ig
SWRsZSBmb3IgcmUtZW5hYmxlXG4iKTsKIAogCS8qIEFmdGVyIHRoZSB1bmxvY2tlZCB3YWl0LCB2
ZXJpZnkgdGhhdCBQU1IgaXMgc3RpbGwgd2FudGVkISAqLwotCW11dGV4X2xvY2soJmRldl9wcml2
LT5wc3IubG9jayk7Ci0JcmV0dXJuIGVyciA9PSAwICYmIGRldl9wcml2LT5wc3IuZW5hYmxlZDsK
KwltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOworCXJldHVybiBlcnIgPT0gMCAmJiBp
bnRlbF9kcC0+cHNyLmVuYWJsZWQ7CiB9CiAKIHN0YXRpYyBpbnQgaW50ZWxfcHNyX2Zhc3RzZXRf
Zm9yY2Uoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpAQCAtMTUwMywxMSArMTUy
MiwxMiBAQCBzdGF0aWMgaW50IGludGVsX3Bzcl9mYXN0c2V0X2ZvcmNlKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdikKIAlyZXR1cm4gZXJyOwogfQogCi1pbnQgaW50ZWxfcHNyX2Rl
YnVnX3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHU2NCB2YWwpCitpbnQg
aW50ZWxfcHNyX2RlYnVnX3NldChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1NjQgdmFsKQog
ewogCWNvbnN0IHUzMiBtb2RlID0gdmFsICYgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLOwogCXUz
MiBvbGRfbW9kZTsKIAlpbnQgcmV0OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCiAJaWYgKHZhbCAmIH4oSTkxNV9QU1JfREVCVUdf
SVJRIHwgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLKSB8fAogCSAgICBtb2RlID4gSTkxNV9QU1Jf
REVCVUdfRk9SQ0VfUFNSMSkgewpAQCAtMTUxNSwyMSArMTUzNSwyMSBAQCBpbnQgaW50ZWxfcHNy
X2RlYnVnX3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHU2NCB2YWwpCiAJ
CXJldHVybiAtRUlOVkFMOwogCX0KIAotCXJldCA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgm
ZGV2X3ByaXYtPnBzci5sb2NrKTsKKwlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmlu
dGVsX2RwLT5wc3IubG9jayk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCW9sZF9tb2Rl
ID0gZGV2X3ByaXYtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSzsKLQlkZXZf
cHJpdi0+cHNyLmRlYnVnID0gdmFsOworCW9sZF9tb2RlID0gaW50ZWxfZHAtPnBzci5kZWJ1ZyAm
IEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSzsKKwlpbnRlbF9kcC0+cHNyLmRlYnVnID0gdmFsOwog
CiAJLyoKIAkgKiBEbyBpdCByaWdodCBhd2F5IGlmIGl0J3MgYWxyZWFkeSBlbmFibGVkLCBvdGhl
cndpc2UgaXQgd2lsbCBiZSBkb25lCiAJICogd2hlbiBlbmFibGluZyB0aGUgc291cmNlLgogCSAq
LwotCWlmIChkZXZfcHJpdi0+cHNyLmVuYWJsZWQpCi0JCXBzcl9pcnFfY29udHJvbChkZXZfcHJp
dik7CisJaWYgKGludGVsX2RwLT5wc3IuZW5hYmxlZCkKKwkJcHNyX2lycV9jb250cm9sKGludGVs
X2RwKTsKIAotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxv
Y2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKIAlpZiAob2xkX21vZGUgIT0gbW9kZSkKIAkJcmV0
ID0gaW50ZWxfcHNyX2Zhc3RzZXRfZm9yY2UoZGV2X3ByaXYpOwpAQCAtMTUzNywyOCArMTU1Nywy
OCBAQCBpbnQgaW50ZWxfcHNyX2RlYnVnX3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIHU2NCB2YWwpCiAJcmV0dXJuIHJldDsKIH0KIAotc3RhdGljIHZvaWQgaW50ZWxfcHNy
X2hhbmRsZV9pcnEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZv
aWQgaW50ZWxfcHNyX2hhbmRsZV9pcnEoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlz
dHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3Ig
KnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCi0JaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHBzci0+
ZHApOworCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChpbnRlbF9kcCk7CiAJcHNyLT5zaW5rX25v
dF9yZWxpYWJsZSA9IHRydWU7CiAJLyogbGV0J3MgbWFrZSBzdXJlIHRoYXQgc2luayBpcyBhd2Fr
ZW4gKi8KLQlkcm1fZHBfZHBjZF93cml0ZWIoJnBzci0+ZHAtPmF1eCwgRFBfU0VUX1BPV0VSLCBE
UF9TRVRfUE9XRVJfRDApOworCWRybV9kcF9kcGNkX3dyaXRlYigmaW50ZWxfZHAtPmF1eCwgRFBf
U0VUX1BPV0VSLCBEUF9TRVRfUE9XRVJfRDApOwogfQogCiBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jf
d29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0KLQkJY29udGFpbmVyX29mKHdvcmssIHR5cGVvZigqZGV2X3ByaXYpLCBw
c3Iud29yayk7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9CisJCWNvbnRhaW5lcl9vZih3
b3JrLCB0eXBlb2YoKmludGVsX2RwKSwgcHNyLndvcmspOwogCi0JbXV0ZXhfbG9jaygmZGV2X3By
aXYtPnBzci5sb2NrKTsKKwltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCi0JaWYg
KCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLmVuYWJsZWQpCiAJ
CWdvdG8gdW5sb2NrOwogCi0JaWYgKFJFQURfT05DRShkZXZfcHJpdi0+cHNyLmlycV9hdXhfZXJy
b3IpKQotCQlpbnRlbF9wc3JfaGFuZGxlX2lycShkZXZfcHJpdik7CisJaWYgKFJFQURfT05DRShp
bnRlbF9kcC0+cHNyLmlycV9hdXhfZXJyb3IpKQorCQlpbnRlbF9wc3JfaGFuZGxlX2lycShpbnRl
bF9kcCk7CiAKIAkvKgogCSAqIFdlIGhhdmUgdG8gbWFrZSBzdXJlIFBTUiBpcyByZWFkeSBmb3Ig
cmUtZW5hYmxlCkBAIC0xNTY2LDcgKzE1ODYsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jfd29y
ayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJICogUFNSIG1pZ2h0IHRha2Ugc29tZSB0aW1l
IHRvIGdldCBmdWxseSBkaXNhYmxlZAogCSAqIGFuZCBiZSByZWFkeSBmb3IgcmUtZW5hYmxlLgog
CSAqLwotCWlmICghX19wc3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoZGV2X3ByaXYpKQorCWlmICgh
X19wc3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoaW50ZWxfZHApKQogCQlnb3RvIHVubG9jazsKIAog
CS8qCkBAIC0xNTc0LDEyICsxNTk0LDEyIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93b3JrKHN0
cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAkgKiByZWNoZWNrLiBTaW5jZSBwc3JfZmx1c2ggZmly
c3QgY2xlYXJzIHRoaXMgYW5kIHRoZW4gcmVzY2hlZHVsZXMgd2UKIAkgKiB3b24ndCBldmVyIG1p
c3MgYSBmbHVzaCB3aGVuIGJhaWxpbmcgb3V0IGhlcmUuCiAJICovCi0JaWYgKGRldl9wcml2LT5w
c3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzIHx8IGRldl9wcml2LT5wc3IuYWN0aXZlKQorCWlmIChp
bnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyB8fCBpbnRlbF9kcC0+cHNyLmFjdGl2
ZSkKIAkJZ290byB1bmxvY2s7CiAKLQlpbnRlbF9wc3JfYWN0aXZhdGUoZGV2X3ByaXYtPnBzci5k
cCk7CisJaW50ZWxfcHNyX2FjdGl2YXRlKGludGVsX2RwKTsKIHVubG9jazoKLQltdXRleF91bmxv
Y2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOwogfQogCiAvKioKQEAgLTE1OTgsMjcgKzE2MTgsMzUgQEAgc3RhdGljIHZvaWQgaW50ZWxf
cHNyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogdm9pZCBpbnRlbF9wc3JfaW52YWxp
ZGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgIHVuc2lnbmVkIGZy
b250YnVmZmVyX2JpdHMsIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbikKIHsKLQlpZiAoIUNBTl9Q
U1IoZGV2X3ByaXYpKQotCQlyZXR1cm47CisJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7
CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcDsKIAotCWlmIChvcmlnaW4gPT0gT1JJR0lOX0ZM
SVApCi0JCXJldHVybjsKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2Rl
cikgewogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQlpZiAoIWRldl9wcml2
LT5wc3IuZW5hYmxlZCkgewotCQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0J
CXJldHVybjsKLQl9CisJCWludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCQlp
ZiAoZW5jb2Rlci0+dHlwZSAhPSBJTlRFTF9PVVRQVVRfRURQKQorCQkJY29udGludWU7CisJCWlm
ICghQ0FOX1BTUihpbnRlbF9kcCkpCisJCQljb250aW51ZTsKIAotCWZyb250YnVmZmVyX2JpdHMg
Jj0gSU5URUxfRlJPTlRCVUZGRVJfQUxMX01BU0soZGV2X3ByaXYtPnBzci5waXBlKTsKLQlkZXZf
cHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyB8PSBmcm9udGJ1ZmZlcl9iaXRzOworCQlp
ZiAob3JpZ2luID09IE9SSUdJTl9GTElQKQorCQkJY29udGludWU7CisKKwkJbXV0ZXhfbG9jaygm
aW50ZWxfZHAtPnBzci5sb2NrKTsKKwkJaWYgKCFpbnRlbF9kcC0+cHNyLmVuYWJsZWQpIHsKKwkJ
CW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwkJCWNvbnRpbnVlOworCQl9CiAK
LQlpZiAoZnJvbnRidWZmZXJfYml0cykKLQkJaW50ZWxfcHNyX2V4aXQoZGV2X3ByaXYpOworCQlm
cm9udGJ1ZmZlcl9iaXRzICY9IElOVEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGludGVsX2RwLT5w
c3IucGlwZSk7CisJCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzIHw9IGZyb250
YnVmZmVyX2JpdHM7CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci19CisJ
CWlmIChmcm9udGJ1ZmZlcl9iaXRzKQorCQkJaW50ZWxfcHNyX2V4aXQoaW50ZWxfZHApOwogCisJ
CW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwl9Cit9CiAvKgogICogV2hlbiB3
ZSB3aWxsIGJlIGNvbXBsZXRlbHkgcmVseSBvbiBQU1IyIFMvVyB0cmFja2luZyBpbiBmdXR1cmUs
CiAgKiBpbnRlbF9wc3JfZmx1c2goKSB3aWxsIGludmFsaWRhdGUgYW5kIGZsdXNoIHRoZSBQU1Ig
Zm9yIE9SSUdJTl9GTElQCkBAIC0xNjI2LDE1ICsxNjU0LDE1IEBAIHZvaWQgaW50ZWxfcHNyX2lu
dmFsaWRhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogICogYWNjb3JkaW5n
bHkgaW4gZnV0dXJlLgogICovCiBzdGF0aWMgdm9pZAotdGdsX2RjM2NvX2ZsdXNoKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJdW5zaWduZWQgaW50IGZyb250YnVmZmVyX2Jp
dHMsIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbikKK3RnbF9kYzNjb19mbHVzaChzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLCB1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0cywKKwkJZW51bSBm
Yl9vcF9vcmlnaW4gb3JpZ2luKQogewotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7
CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAotCWlmICghZGV2X3ByaXYtPnBz
ci5kYzNjb19lbmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkKQogCQln
b3RvIHVubG9jazsKIAotCWlmICghZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgfHwgIWRldl9w
cml2LT5wc3IuYWN0aXZlKQorCWlmICghaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQgfHwgIWlu
dGVsX2RwLT5wc3IuYWN0aXZlKQogCQlnb3RvIHVubG9jazsKIAogCS8qCkBAIC0xNjQyLDE1ICsx
NjcwLDE1IEBAIHRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCiAJICogd2hlbiBkZWxheWVkIHdvcmsgc2NoZWR1bGVzIHRoYXQgbWVhbnMgZGlzcGxheSBo
YXMgYmVlbiBpZGxlLgogCSAqLwogCWlmICghKGZyb250YnVmZmVyX2JpdHMgJgotCSAgICBJTlRF
TF9GUk9OVEJVRkZFUl9BTExfTUFTSyhkZXZfcHJpdi0+cHNyLnBpcGUpKSkKKwkgICAgSU5URUxf
RlJPTlRCVUZGRVJfQUxMX01BU0soaW50ZWxfZHAtPnBzci5waXBlKSkpCiAJCWdvdG8gdW5sb2Nr
OwogCi0JdGdsX3BzcjJfZW5hYmxlX2RjM2NvKGRldl9wcml2KTsKLQltb2RfZGVsYXllZF93b3Jr
KHN5c3RlbV93cSwgJmRldl9wcml2LT5wc3IuZGMzY29fd29yaywKLQkJCSBkZXZfcHJpdi0+cHNy
LmRjM2NvX2V4aXRfZGVsYXkpOworCXRnbF9wc3IyX2VuYWJsZV9kYzNjbyhpbnRlbF9kcCk7CisJ
bW9kX2RlbGF5ZWRfd29yayhzeXN0ZW1fd3EsICZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmssCisJ
CQkgaW50ZWxfZHAtPnBzci5kYzNjb19leGl0X2RlbGF5KTsKIAogdW5sb2NrOgotCW11dGV4X3Vu
bG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3Iu
bG9jayk7CiB9CiAKIC8qKgpAQCAtMTY2OSw0NSArMTY5Nyw1NCBAQCB0Z2xfZGMzY29fZmx1c2go
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogdm9pZCBpbnRlbF9wc3JfZmx1c2go
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkgICAgIHVuc2lnbmVkIGZyb250
YnVmZmVyX2JpdHMsIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbikKIHsKLQlpZiAoIUNBTl9QU1Io
ZGV2X3ByaXYpKQotCQlyZXR1cm47Ci0KLQlpZiAob3JpZ2luID09IE9SSUdJTl9GTElQKSB7Ci0J
CXRnbF9kYzNjb19mbHVzaChkZXZfcHJpdiwgZnJvbnRidWZmZXJfYml0cywgb3JpZ2luKTsKLQkJ
cmV0dXJuOwotCX0KLQotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JaWYgKCFk
ZXZfcHJpdi0+cHNyLmVuYWJsZWQpIHsKLQkJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxv
Y2spOwotCQlyZXR1cm47CisJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7CisJc3RydWN0
IGludGVsX2RwICppbnRlbF9kcDsKKworCWZvcl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJt
LCBlbmNvZGVyKSB7CisJCWludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCisJ
CWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFAgJiYgQ0FOX1BTUihpbnRlbF9k
cCkpIHsKKwkJCWlmIChvcmlnaW4gPT0gT1JJR0lOX0ZMSVApIHsKKwkJCQl0Z2xfZGMzY29fZmx1
c2goaW50ZWxfZHAsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdpbik7CisJCQkJY29udGludWU7CisJ
CQl9CisKKwkJCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCQlpZiAoIWludGVs
X2RwLT5wc3IuZW5hYmxlZCkgeworCQkJCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2Nr
KTsKKwkJCQljb250aW51ZTsKKwkJCX0KKworCQkJZnJvbnRidWZmZXJfYml0cyAmPSBJTlRFTF9G
Uk9OVEJVRkZFUl9BTExfTUFTSyhpbnRlbF9kcC0+cHNyLnBpcGUpOworCQkJaW50ZWxfZHAtPnBz
ci5idXN5X2Zyb250YnVmZmVyX2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7CisKKwkJCS8qIEJ5
IGRlZmluaXRpb24gZmx1c2ggPSBpbnZhbGlkYXRlICsgZmx1c2ggKi8KKwkJCWlmIChmcm9udGJ1
ZmZlcl9iaXRzKQorCQkJCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0KGludGVsX2RwKTsKKwor
CQkJaWYgKCFpbnRlbF9kcC0+cHNyLmFjdGl2ZSAmJiAhaW50ZWxfZHAtPnBzci5idXN5X2Zyb250
YnVmZmVyX2JpdHMpCisJCQkJc2NoZWR1bGVfd29yaygmaW50ZWxfZHAtPnBzci53b3JrKTsKKwkJ
CW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwkJfQogCX0KLQotCWZyb250YnVm
ZmVyX2JpdHMgJj0gSU5URUxfRlJPTlRCVUZGRVJfQUxMX01BU0soZGV2X3ByaXYtPnBzci5waXBl
KTsKLQlkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyAmPSB+ZnJvbnRidWZmZXJf
Yml0czsKLQotCS8qIEJ5IGRlZmluaXRpb24gZmx1c2ggPSBpbnZhbGlkYXRlICsgZmx1c2ggKi8K
LQlpZiAoZnJvbnRidWZmZXJfYml0cykKLQkJcHNyX2ZvcmNlX2h3X3RyYWNraW5nX2V4aXQoZGV2
X3ByaXYpOwotCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmFjdGl2ZSAmJiAhZGV2X3ByaXYtPnBzci5i
dXN5X2Zyb250YnVmZmVyX2JpdHMpCi0JCXNjaGVkdWxlX3dvcmsoJmRldl9wcml2LT5wc3Iud29y
ayk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwogfQogCiAvKioKICAqIGlu
dGVsX3Bzcl9pbml0IC0gSW5pdCBiYXNpYyBQU1Igd29yayBhbmQgbXV0ZXguCi0gKiBAZGV2X3By
aXY6IGk5MTUgZGV2aWNlIHByaXZhdGUKKyAqIEBpbnRlbF9kcDogSW50ZWwgRFAKICAqCi0gKiBU
aGlzIGZ1bmN0aW9uIGlzICBjYWxsZWQgb25seSBvbmNlIGF0IGRyaXZlciBsb2FkIHRvIGluaXRp
YWxpemUgYmFzaWMKLSAqIFBTUiBzdHVmZi4KKyAqIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFm
dGVyIHRoZSBpbml0aWFsaXppbmcgY29ubmVjdG9yLgorICogKHRoZSBpbml0aWFsaXppbmcgb2Yg
Y29ubmVjdG9yIHRyZWF0cyB0aGUgaGFuZGxpbmcgb2YgY29ubmVjdG9yIGNhcGFiaWxpdGllcykK
KyAqIEFuZCBpdCBpbml0aWFsaXplcyBiYXNpYyBQU1Igc3R1ZmYgZm9yIGVhY2ggRFAgRW5jb2Rl
ci4KICAqLwotdm9pZCBpbnRlbF9wc3JfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpCit2b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisKIAlpZiAoIUhBU19QU1IoZGV2X3ByaXYpKQogCQlyZXR1cm47CiAKLQlpZiAoIWRldl9w
cml2LT5wc3Iuc2lua19zdXBwb3J0KQorCWlmICghaW50ZWxfZHAtPnBzci5zaW5rX3N1cHBvcnQp
CiAJCXJldHVybjsKIAogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSkKQEAgLTE3MjUsMTQgKzE3
NjIsMTQgQEAgdm9pZCBpbnRlbF9wc3JfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpCiAJLyogU2V0IGxpbmtfc3RhbmRieSB4IGxpbmtfb2ZmIGRlZmF1bHRzICovCiAJaWYg
KElTX0hBU1dFTEwoZGV2X3ByaXYpIHx8IElTX0JST0FEV0VMTChkZXZfcHJpdikpCiAJCS8qIEhT
VyBhbmQgQkRXIHJlcXVpcmUgd29ya2Fyb3VuZHMgdGhhdCB3ZSBkb24ndCBpbXBsZW1lbnQuICov
Ci0JCWRldl9wcml2LT5wc3IubGlua19zdGFuZGJ5ID0gZmFsc2U7CisJCWludGVsX2RwLT5wc3Iu
bGlua19zdGFuZGJ5ID0gZmFsc2U7CiAJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDEy
KQogCQkvKiBGb3IgbmV3IHBsYXRmb3JtcyB1cCB0byBUR0wgbGV0J3MgcmVzcGVjdCBWQlQgYmFj
ayBhZ2FpbiAqLwotCQlkZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRieSA9IGRldl9wcml2LT52YnQu
cHNyLmZ1bGxfbGluazsKKwkJaW50ZWxfZHAtPnBzci5saW5rX3N0YW5kYnkgPSBkZXZfcHJpdi0+
dmJ0LnBzci5mdWxsX2xpbms7CiAKLQlJTklUX1dPUksoJmRldl9wcml2LT5wc3Iud29yaywgaW50
ZWxfcHNyX3dvcmspOwotCUlOSVRfREVMQVlFRF9XT1JLKCZkZXZfcHJpdi0+cHNyLmRjM2NvX3dv
cmssIHRnbF9kYzNjb19kaXNhYmxlX3dvcmspOwotCW11dGV4X2luaXQoJmRldl9wcml2LT5wc3Iu
bG9jayk7CisJSU5JVF9XT1JLKCZpbnRlbF9kcC0+cHNyLndvcmssIGludGVsX3Bzcl93b3JrKTsK
KwlJTklUX0RFTEFZRURfV09SSygmaW50ZWxfZHAtPnBzci5kYzNjb193b3JrLCB0Z2xfZGMzY29f
ZGlzYWJsZV93b3JrKTsKKwltdXRleF9pbml0KCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQogCiBz
dGF0aWMgaW50IHBzcl9nZXRfc3RhdHVzX2FuZF9lcnJvcl9zdGF0dXMoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwKQEAgLTE3NTgsNyArMTc5NSw3IEBAIHN0YXRpYyB2b2lkIHBzcl9hbHBtX2No
ZWNrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJc3RydWN0IGRybV9kcF9hdXgg
KmF1eCA9ICZpbnRlbF9kcC0+YXV4OwotCXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRldl9wcml2
LT5wc3I7CisJc3RydWN0IGludGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7CiAJdTggdmFs
OwogCWludCByOwogCkBAIC0xNzg1LDcgKzE4MjIsNyBAQCBzdGF0aWMgdm9pZCBwc3JfYWxwbV9j
aGVjayhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogc3RhdGljIHZvaWQgcHNyX2NhcGFiaWxp
dHlfY2hhbmdlZF9jaGVjayhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwotCXN0cnVj
dCBpOTE1X3BzciAqcHNyID0gJmRldl9wcml2LT5wc3I7CisJc3RydWN0IGludGVsX3BzciAqcHNy
ID0gJmludGVsX2RwLT5wc3I7CiAJdTggdmFsOwogCWludCByOwogCkBAIC0xODA5LDE4ICsxODQ2
LDE4IEBAIHN0YXRpYyB2b2lkIHBzcl9jYXBhYmlsaXR5X2NoYW5nZWRfY2hlY2soc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKIHZvaWQgaW50ZWxfcHNyX3Nob3J0X3B1bHNlKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYt
PnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsKIAl1OCBzdGF0
dXMsIGVycm9yX3N0YXR1czsKIAljb25zdCB1OCBlcnJvcnMgPSBEUF9QU1JfUkZCX1NUT1JBR0Vf
RVJST1IgfAogCQkJICBEUF9QU1JfVlNDX1NEUF9VTkNPUlJFQ1RBQkxFX0VSUk9SIHwKIAkJCSAg
RFBfUFNSX0xJTktfQ1JDX0VSUk9SOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSB8fCAhaW50
ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApIHx8ICFpbnRl
bF9kcF9pc19lZHAoaW50ZWxfZHApKQogCQlyZXR1cm47CiAKIAltdXRleF9sb2NrKCZwc3ItPmxv
Y2spOwogCi0JaWYgKCFwc3ItPmVuYWJsZWQgfHwgcHNyLT5kcCAhPSBpbnRlbF9kcCkKKwlpZiAo
IXBzci0+ZW5hYmxlZCkKIAkJZ290byBleGl0OwogCiAJaWYgKHBzcl9nZXRfc3RhdHVzX2FuZF9l
cnJvcl9zdGF0dXMoaW50ZWxfZHAsICZzdGF0dXMsICZlcnJvcl9zdGF0dXMpKSB7CkBAIC0xODYz
LDE1ICsxOTAwLDE0IEBAIHZvaWQgaW50ZWxfcHNyX3Nob3J0X3B1bHNlKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAKIGJvb2wgaW50ZWxfcHNyX2VuYWJsZWQoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19p
OTE1KGludGVsX2RwKTsKIAlib29sIHJldDsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwg
IWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSB8fCAh
aW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKIAkJcmV0dXJuIGZhbHNlOwogCi0JbXV0ZXhfbG9j
aygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQlyZXQgPSAoZGV2X3ByaXYtPnBzci5kcCA9PSBpbnRl
bF9kcCAmJiBkZXZfcHJpdi0+cHNyLmVuYWJsZWQpOwotCW11dGV4X3VubG9jaygmZGV2X3ByaXYt
PnBzci5sb2NrKTsKKwltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOworCXJldCA9IGlu
dGVsX2RwLT5wc3IuZW5hYmxlZDsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7
CiAKIAlyZXR1cm4gcmV0OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9wc3IuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNy
LmgKaW5kZXggMGE1MTc5NzhlOGFmLi4wM2ViMTk1NDdkMDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9wc3IuaApAQCAtMTgsNyArMTgsNyBAQCBzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlOwogc3RydWN0IGludGVsX3BsYW5lX3N0YXRlOwogc3RydWN0IGludGVsX3BsYW5l
OwogCi0jZGVmaW5lIENBTl9QU1IoZGV2X3ByaXYpIChIQVNfUFNSKGRldl9wcml2KSAmJiBkZXZf
cHJpdi0+cHNyLnNpbmtfc3VwcG9ydCkKKyNkZWZpbmUgQ0FOX1BTUihpbnRlbF9kcCkgKEhBU19Q
U1IoZHBfdG9faTkxNShpbnRlbF9kcCkpICYmIGludGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0KQog
dm9pZCBpbnRlbF9wc3JfaW5pdF9kcGNkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwogdm9p
ZCBpbnRlbF9wc3JfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCSAgICAgIGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLApAQCAtMjgsMjQgKzI4LDI0
IEBAIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIHZv
aWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgICAgY29uc3Qg
c3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpOwotaW50IGludGVsX3Bzcl9k
ZWJ1Z19zZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsdWUpOwor
aW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTY0IHZh
bHVlKTsKIHZvaWQgaW50ZWxfcHNyX2ludmFsaWRhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogCQkJICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLAogCQkJICBlbnVtIGZi
X29wX29yaWdpbiBvcmlnaW4pOwogdm9pZCBpbnRlbF9wc3JfZmx1c2goc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAogCQkgICAgIHVuc2lnbmVkIGZyb250YnVmZmVyX2JpdHMsCiAJ
CSAgICAgZW51bSBmYl9vcF9vcmlnaW4gb3JpZ2luKTsKLXZvaWQgaW50ZWxfcHNyX2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKK3ZvaWQgaW50ZWxfcHNyX2luaXQoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCk7CiB2b2lkIGludGVsX3Bzcl9jb21wdXRlX2NvbmZpZyhz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpOwotdm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcHNyX2lpcik7Cit2b2lkIGludGVsX3Bzcl9pcnFf
aGFuZGxlcihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1MzIgcHNyX2lpcik7CiB2b2lkIGlu
dGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLWludCBpbnRl
bF9wc3Jfd2FpdF9mb3JfaWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2Ny
dGNfc3RhdGUsCi0JCQkgICAgdTMyICpvdXRfdmFsdWUpOwordm9pZCBpbnRlbF9wc3Jfd2FpdF9m
b3JfaWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpOwog
Ym9vbCBpbnRlbF9wc3JfZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIGludCBp
bnRlbF9wc3IyX3NlbF9mZXRjaF91cGRhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCiAJCQkJc3RydWN0IGludGVsX2NydGMgKmNydGMpOwotdm9pZCBpbnRlbF9wc3IyX3Byb2dy
YW1fdHJhbnNfbWFuX3Rya19jdGwoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUpOwordm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSk7CiB2b2lkIGludGVsX3BzcjJfcHJvZ3JhbV9wbGFuZV9zZWxfZmV0Y2go
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAkJCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAq
cGxhbmVfc3RhdGUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3Nwcml0ZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUu
YwppbmRleCBiN2UyMDg4MTYwNzQuLjk0ODIzNGM2MDY0OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3Nwcml0ZS5jCkBAIC04NCw3ICs4NCw2IEBAIHZvaWQgaW50ZWxf
cGlwZV91cGRhdGVfc3RhcnQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRj
X3N0YXRlKQogCWJvb2wgbmVlZF92bHZfZHNpX3dhID0gKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYp
IHx8IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSAmJgogCQlpbnRlbF9jcnRjX2hhc190eXBlKG5l
d19jcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKTsKIAlERUZJTkVfV0FJVCh3YWl0KTsKLQl1
MzIgcHNyX3N0YXR1czsKIAogCWlmIChuZXdfY3J0Y19zdGF0ZS0+dWFwaS5hc3luY19mbGlwKQog
CQlyZXR1cm47CkBAIC0xMDksMTAgKzEwOCw3IEBAIHZvaWQgaW50ZWxfcGlwZV91cGRhdGVfc3Rh
cnQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlKQogCSAqIFZC
TCBpbnRlcnJ1cHRzIHdpbGwgc3RhcnQgdGhlIFBTUiBleGl0IGFuZCBwcmV2ZW50IGEgUFNSCiAJ
ICogcmUtZW50cnkgYXMgd2VsbC4KIAkgKi8KLQlpZiAoaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUo
bmV3X2NydGNfc3RhdGUsICZwc3Jfc3RhdHVzKSkKLQkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwK
LQkJCSJQU1IgaWRsZSB0aW1lZCBvdXQgMHgleCwgYXRvbWljIHVwZGF0ZSBtYXkgZmFpbFxuIiwK
LQkJCXBzcl9zdGF0dXMpOworCWludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKG5ld19jcnRjX3N0YXRl
KTsKIAogCWxvY2FsX2lycV9kaXNhYmxlKCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4
IDRhOGZmMmE4OTlhNS4uZGM3YTI0MTAzNmU2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAg
LTQ3NSw0MiArNDc1LDYgQEAgc3RydWN0IGk5MTVfZHJycyB7CiAJZW51bSBkcnJzX3N1cHBvcnRf
dHlwZSB0eXBlOwogfTsKIAotc3RydWN0IGk5MTVfcHNyIHsKLQlzdHJ1Y3QgbXV0ZXggbG9jazsK
LQotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0sJMHgwZgotI2RlZmluZSBJOTE1X1BT
Ul9ERUJVR19ERUZBVUxUCQkweDAwCi0jZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0RJU0FCTEUJCTB4
MDEKLSNkZWZpbmUgSTkxNV9QU1JfREVCVUdfRU5BQkxFCQkweDAyCi0jZGVmaW5lIEk5MTVfUFNS
X0RFQlVHX0ZPUkNFX1BTUjEJMHgwMwotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19JUlEJCTB4MTAK
LQotCXUzMiBkZWJ1ZzsKLQlib29sIHNpbmtfc3VwcG9ydDsKLQlib29sIGVuYWJsZWQ7Ci0Jc3Ry
dWN0IGludGVsX2RwICpkcDsKLQllbnVtIHBpcGUgcGlwZTsKLQllbnVtIHRyYW5zY29kZXIgdHJh
bnNjb2RlcjsKLQlib29sIGFjdGl2ZTsKLQlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKLQl1bnNp
Z25lZCBidXN5X2Zyb250YnVmZmVyX2JpdHM7Ci0JYm9vbCBzaW5rX3BzcjJfc3VwcG9ydDsKLQli
b29sIGxpbmtfc3RhbmRieTsKLQlib29sIGNvbG9yaW1ldHJ5X3N1cHBvcnQ7Ci0JYm9vbCBwc3Iy
X2VuYWJsZWQ7Ci0JYm9vbCBwc3IyX3NlbF9mZXRjaF9lbmFibGVkOwotCXU4IHNpbmtfc3luY19s
YXRlbmN5OwotCWt0aW1lX3QgbGFzdF9lbnRyeV9hdHRlbXB0OwotCWt0aW1lX3QgbGFzdF9leGl0
OwotCWJvb2wgc2lua19ub3RfcmVsaWFibGU7Ci0JYm9vbCBpcnFfYXV4X2Vycm9yOwotCXUxNiBz
dV94X2dyYW51bGFyaXR5OwotCWJvb2wgZGMzY29fZW5hYmxlZDsKLQl1MzIgZGMzY29fZXhpdF9k
ZWxheTsKLQlzdHJ1Y3QgZGVsYXllZF93b3JrIGRjM2NvX3dvcms7Ci0Jc3RydWN0IGRybV9kcF92
c2Nfc2RwIHZzYzsKLX07Ci0KICNkZWZpbmUgUVVJUktfTFZEU19TU0NfRElTQUJMRSAoMTw8MSkK
ICNkZWZpbmUgUVVJUktfSU5WRVJUX0JSSUdIVE5FU1MgKDE8PDIpCiAjZGVmaW5lIFFVSVJLX0JB
Q0tMSUdIVF9QUkVTRU5UICgxPDwzKQpAQCAtMTA0MSw4ICsxMDA1LDYgQEAgc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgewogCiAJc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyBwb3dlcl9kb21haW5z
OwogCi0Jc3RydWN0IGk5MTVfcHNyIHBzcjsKLQogCXN0cnVjdCBpOTE1X2dwdV9lcnJvciBncHVf
ZXJyb3I7CiAKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqdmx2X3BjdHg7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9pcnEuYwppbmRleCA0OTFmODI1MDBkNjguLjg1NDY3ODY1MjFiNSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2lycS5jCkBAIC0yMDQ0LDEwICsyMDQ0LDIyIEBAIHN0YXRpYyB2b2lkIGl2Yl9k
aXNwbGF5X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJ
aXZiX2Vycl9pbnRfaGFuZGxlcihkZXZfcHJpdik7CiAKIAlpZiAoZGVfaWlyICYgREVfRURQX1BT
Ul9JTlRfSFNXKSB7Ci0JCXUzMiBwc3JfaWlyID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRldl9wcml2
LT51bmNvcmUsIEVEUF9QU1JfSUlSKTsKKwkJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7
CiAKLQkJaW50ZWxfcHNyX2lycV9oYW5kbGVyKGRldl9wcml2LCBwc3JfaWlyKTsKLQkJaW50ZWxf
dW5jb3JlX3dyaXRlKCZkZXZfcHJpdi0+dW5jb3JlLCBFRFBfUFNSX0lJUiwgcHNyX2lpcik7CisJ
CWZvcl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJCQlzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCisJCQlpZiAo
ZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQICYmCisJCQkgICAgQ0FOX1BTUihpbnRl
bF9kcCkpIHsKKwkJCQl1MzIgcHNyX2lpciA9IGludGVsX3VuY29yZV9yZWFkKCZkZXZfcHJpdi0+
dW5jb3JlLAorCQkJCQkJCQlFRFBfUFNSX0lJUik7CisKKwkJCQlpbnRlbF9wc3JfaXJxX2hhbmRs
ZXIoaW50ZWxfZHAsIHBzcl9paXIpOworCQkJCWludGVsX3VuY29yZV93cml0ZSgmZGV2X3ByaXYt
PnVuY29yZSwKKwkJCQkJCSAgIEVEUF9QU1JfSUlSLCBwc3JfaWlyKTsKKwkJCQlicmVhazsKKwkJ
CX0KKwkJfQogCX0KIAogCWlmIChkZV9paXIgJiBERV9BVVhfQ0hBTk5FTF9BX0lWQikKQEAgLTIy
NTUsMjEgKzIyNjcsMzQgQEAgZ2VuOF9kZV9taXNjX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGlpcikKIAl9CiAKIAlpZiAoaWlyICYgR0VOOF9ERV9F
RFBfUFNSKSB7CisJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCQl1MzIgcHNyX2lp
cjsKIAkJaTkxNV9yZWdfdCBpaXJfcmVnOwogCi0JCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDEyKQotCQkJaWlyX3JlZyA9IFRSQU5TX1BTUl9JSVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVy
KTsKLQkJZWxzZQotCQkJaWlyX3JlZyA9IEVEUF9QU1JfSUlSOworCQlmb3JfZWFjaF9pbnRlbF9k
cCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKIAotCQlwc3JfaWlyID0gaW50ZWxfdW5jb3Jl
X3JlYWQoJmRldl9wcml2LT51bmNvcmUsIGlpcl9yZWcpOwotCQlpbnRlbF91bmNvcmVfd3JpdGUo
JmRldl9wcml2LT51bmNvcmUsIGlpcl9yZWcsIHBzcl9paXIpOworCQkJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTIgJiYgQ0FOX1BTUihpbnRlbF9kcCkpIHsKKwkJCQlpaXJfcmVnID0gVFJB
TlNfUFNSX0lJUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOworCQkJfSBlbHNlIGlmIChlbmNv
ZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFAgJiYKKwkJCQkgICBDQU5fUFNSKGludGVsX2Rw
KSkgeworCQkJCWlpcl9yZWcgPSBFRFBfUFNSX0lJUjsKKwkJCX0gZWxzZSB7CisJCQkJY29udGlu
dWU7CisJCQl9CisKKwkJCXBzcl9paXIgPSBpbnRlbF91bmNvcmVfcmVhZCgmZGV2X3ByaXYtPnVu
Y29yZSwgaWlyX3JlZyk7CisJCQlpbnRlbF91bmNvcmVfd3JpdGUoJmRldl9wcml2LT51bmNvcmUs
IGlpcl9yZWcsIHBzcl9paXIpOworCisJCQlpZiAocHNyX2lpcikKKwkJCQlmb3VuZCA9IHRydWU7
CiAKLQkJaWYgKHBzcl9paXIpCi0JCQlmb3VuZCA9IHRydWU7CisJCQlpbnRlbF9wc3JfaXJxX2hh
bmRsZXIoaW50ZWxfZHAsIHBzcl9paXIpOwogCi0JCWludGVsX3Bzcl9pcnFfaGFuZGxlcihkZXZf
cHJpdiwgcHNyX2lpcik7CisJCQkvKiBwcmlvciBHRU4xMiBvbmx5IGhhdmUgb25lIEVEUCBQU1Ig
Ki8KKwkJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTIpCisJCQkJYnJlYWs7CisJCX0KIAl9
CiAKIAlpZiAoIWZvdW5kKQotLSAKMi4yNS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9pbnRlbC1nZngK

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3FDB111393B
	for <lists+intel-gfx@lfdr.de>; Thu,  5 Dec 2019 02:22:59 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 381726E96D;
	Thu,  5 Dec 2019 01:22:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 50C1B6E971;
 Thu,  5 Dec 2019 01:22:55 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19464289-1500050 
 for multiple; Thu, 05 Dec 2019 01:22:37 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  5 Dec 2019 01:22:38 +0000
Message-Id: <20191205012238.214924-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t] i915/gem_exec_parse_blt: Fix COND_BBEND
 used by bb-start-(cmd|far)
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q29ycmVjdCB0aGUgQ09ORF9CQkVORCBpbnN0cnVjdGlvbiB0byBwZXJmb3JtIHRoZSBjb21wYXJl
IGFuZCBhcHBseSB0aGUKcmVsb2NhdGlvbiBzbyB0aGF0IGl0IGxvb2tzIGF0IHRoZSBjb3JyZWN0
IGFkZHJlc3MuIEluIHRoZSBwcm9jZXNzLApwcmVwYXJlIGZvciBwaXBlbGluZWQgZmFpbHVyZXMu
CgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4K
Q2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29tPgotLS0KIHRl
c3RzL2k5MTUvZ2VtX2V4ZWNfcGFyc2VfYmx0LmMgfCAxMTYgKysrKysrKysrKysrKysrKystLS0t
LS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA2MSBpbnNlcnRpb25zKCspLCA1NSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS90ZXN0cy9pOTE1L2dlbV9leGVjX3BhcnNlX2JsdC5jIGIvdGVz
dHMvaTkxNS9nZW1fZXhlY19wYXJzZV9ibHQuYwppbmRleCA1OGQxYjJiMzIuLjg1NGM1OTg2MyAx
MDA2NDQKLS0tIGEvdGVzdHMvaTkxNS9nZW1fZXhlY19wYXJzZV9ibHQuYworKysgYi90ZXN0cy9p
OTE1L2dlbV9leGVjX3BhcnNlX2JsdC5jCkBAIC0zMCw2ICszMCw3IEBACiAKICNpbmNsdWRlICJp
Z3QuaCIKICNpbmNsdWRlICJpOTE1L2dlbV9zdWJtaXNzaW9uLmgiCisjaW5jbHVkZSAic3dfc3lu
Yy5oIgogCiAvKiBUbyBoZWxwIGNyYWZ0IGNvbW1hbmRzIGtub3duIHRvIGJlIGludmFsaWQgYWNy
b3NzIGFsbCBlbmdpbmVzICovCiAjZGVmaW5lIElOU1RSX0NMSUVOVF9TSElGVAkyOQpAQCAtNTMs
NiArNTQsMzAgQEAKIAogI2RlZmluZSBIQU5ETEVfU0laRSAgNDA5NgogCitzdGF0aWMgaW50Citf
X2NoZWNrZWRfZXhlY2J1ZihpbnQgaTkxNSwgc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVy
MiAqZWIpCit7CisJaW50IGZlbmNlOworCWludCBlcnI7CisKKwlpZ3RfYXNzZXJ0KCEoZWItPmZs
YWdzICYgSTkxNV9FWEVDX0ZFTkNFX09VVCkpOworCWViLT5mbGFncyB8PSBJOTE1X0VYRUNfRkVO
Q0VfT1VUOworCWVyciA9IF9fZ2VtX2V4ZWNidWZfd3IoaTkxNSwgZWIpOworCWViLT5mbGFncyAm
PSB+STkxNV9FWEVDX0ZFTkNFX09VVDsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJZmVu
Y2UgPSBlYi0+cnN2ZDIgPj4gMzI7CisKKwlzeW5jX2ZlbmNlX3dhaXQoZmVuY2UsIC0xKTsKKwll
cnIgPSBzeW5jX2ZlbmNlX3N0YXR1cyhmZW5jZSk7CisJY2xvc2UoZmVuY2UpOworCWlmIChlcnIg
PCAwKQorCQlyZXR1cm4gZXJyOworCisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQKIF9fZXhl
Y19iYXRjaF9wYXRjaGVkKGludCBpOTE1LCBpbnQgZW5naW5lLAogCQkgICAgIHVpbnQzMl90IGNt
ZF9ibywgY29uc3QgdWludDMyX3QgKmNtZHMsIGludCBzaXplLApAQCAtODUsNyArMTEwLDcgQEAg
X19leGVjX2JhdGNoX3BhdGNoZWQoaW50IGk5MTUsIGludCBlbmdpbmUsCiAJZXhlY2J1Zi5iYXRj
aF9sZW4gPSBzaXplOwogCWV4ZWNidWYuZmxhZ3MgPSBlbmdpbmU7CiAKLQlyZXR1cm4gX19nZW1f
ZXhlY2J1ZihpOTE1LCAmZXhlY2J1Zik7CisJcmV0dXJuIF9fY2hlY2tlZF9leGVjYnVmKGk5MTUs
ICZleGVjYnVmKTsKIH0KIAogc3RhdGljIHZvaWQgZXhlY19iYXRjaF9wYXRjaGVkKGludCBpOTE1
LCBpbnQgZW5naW5lLApAQCAtMTI5LDcgKzE1NCw3IEBAIHN0YXRpYyBpbnQgX19leGVjX2JhdGNo
KGludCBpOTE1LCBpbnQgZW5naW5lLCB1aW50MzJfdCBjbWRfYm8sCiAJZXhlY2J1Zi5iYXRjaF9s
ZW4gPSBzaXplOwogCWV4ZWNidWYuZmxhZ3MgPSBlbmdpbmU7CiAKLQlyZXR1cm4gIF9fZ2VtX2V4
ZWNidWYoaTkxNSwgJmV4ZWNidWYpOworCXJldHVybiAgX19jaGVja2VkX2V4ZWNidWYoaTkxNSwg
JmV4ZWNidWYpOwogfQogCiAjaWYgMApAQCAtMTg4LDcgKzIxMyw3IEBAIHN0YXRpYyB2b2lkIGV4
ZWNfc3BsaXRfYmF0Y2goaW50IGk5MTUsIGludCBlbmdpbmUsIGNvbnN0IHVpbnQzMl90ICpjbWRz
LAogCQkgICAgICAweDgpOwogCWV4ZWNidWYuZmxhZ3MgPSBlbmdpbmU7CiAKLQlpZ3RfYXNzZXJ0
X2VxKF9fZ2VtX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpLCBleHBlY3RlZF9yZXQpOworCWlndF9h
c3NlcnRfZXEoX19jaGVja2VkX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpLCBleHBlY3RlZF9yZXQp
OwogCiAJZ2VtX2Nsb3NlKGk5MTUsIGNtZF9ibyk7CiB9CkBAIC0yNTEsNyArMjc2LDcgQEAgc3Rh
dGljIHZvaWQgZXhlY19iYXRjaF9jaGFpbmVkKGludCBpOTE1LCBpbnQgZW5naW5lLAogCWV4ZWNi
dWYuYmF0Y2hfbGVuID0gc2l6ZW9mKGZpcnN0X2xldmVsX2NtZHMpOwogCWV4ZWNidWYuZmxhZ3Mg
PSBlbmdpbmU7CiAKLQlyZXQgPSBfX2dlbV9leGVjYnVmKGk5MTUsICZleGVjYnVmKTsKKwlyZXQg
PSBfX2NoZWNrZWRfZXhlY2J1ZihpOTE1LCAmZXhlY2J1Zik7CiAJaWYgKGV4cGVjdGVkX3JldHVy
biAmJiByZXQgPT0gZXhwZWN0ZWRfcmV0dXJuKQogCQlnb3RvIG91dDsKIApAQCAtNDAyLDcgKzQy
Nyw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfYmJfc2VjdXJlKGNvbnN0IGludCBpOTE1LCBjb25zdCB1
aW50MzJfdCBoYW5kbGUpCiAJZXhlY2J1Zi5iYXRjaF9sZW4gPSBzaXplb2YoYmF0Y2hfc2VjdXJl
KTsKIAlleGVjYnVmLmZsYWdzID0gSTkxNV9FWEVDX0JMVDsKIAotCWlndF9hc3NlcnRfZXEoX19n
ZW1fZXhlY2J1ZihpOTE1LCAmZXhlY2J1ZiksIC1FQUNDRVMpOworCWlndF9hc3NlcnRfZXEoX19j
aGVja2VkX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpLCAtRUFDQ0VTKTsKIH0KIAogI2RlZmluZSBC
Ql9TVEFSVF9QQVJBTSAwCkBAIC00MTQsMTIgKzQzOSwxMCBAQCBzdGF0aWMgdm9pZCB0ZXN0X2Ji
X3N0YXJ0KGNvbnN0IGludCBpOTE1LCBjb25zdCB1aW50MzJfdCBoYW5kbGUsIGludCB0ZXN0KQog
ewogCXN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgZXhlY2J1ZjsKIAlzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX2V4ZWNfb2JqZWN0MiBvYmpbMl07Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9yZWxv
Y2F0aW9uX2VudHJ5IHJlbG9jWzNdOworCXN0cnVjdCBkcm1faTkxNV9nZW1fcmVsb2NhdGlvbl9l
bnRyeSByZWxvY1s0XTsKIAljb25zdCB1aW50MzJfdCB0YXJnZXRfYm8gPSBnZW1fY3JlYXRlKGk5
MTUsIDQwOTYpOwotCXVpbnQzMl90ICpkc3Q7Ci0JaW50IHJldDsKIAl1bnNpZ25lZCBpbnQganVt
cF9vZmYsIGZvb3Rlcl9wb3M7Ci0JY29uc3QgdWludDMyX3QgYmF0Y2hfaGVhZGVyW10gPSB7CisJ
dWludDMyX3QgYmF0Y2hbMTAyNF0gPSB7CiAJCU1JX05PT1AsCiAJCU1JX05PT1AsCiAJCU1JX05P
T1AsCkBAIC00MzIsMTAgKzQ1NSwxMSBAQCBzdGF0aWMgdm9pZCB0ZXN0X2JiX3N0YXJ0KGNvbnN0
IGludCBpOTE1LCBjb25zdCB1aW50MzJfdCBoYW5kbGUsIGludCB0ZXN0KQogCQk0LAogCQkwLAog
CQkyLAotCQlNSV9DT05EX0JBVENIX0JVRkZFUl9FTkQgfCAxLAorCQlNSV9DT05EX0JBVENIX0JV
RkZFUl9FTkQgfCBNSV9ET19DT01QQVJFIHwgMiwKIAkJMCwKIAkJMCwKLQkJMAorCQkwLAorCQlN
SV9BUkJfQ0hFQ0ssCiAJfTsKIAljb25zdCB1aW50MzJfdCBiYXRjaF9mb290ZXJbXSA9IHsKIAkJ
TUlfQkFUQ0hfQlVGRkVSX1NUQVJUIHwgTUlfQkFUQ0hfTk9OX1NFQ1VSRV9JOTY1IHwgMSwKQEAg
LTQ0MywxMyArNDY3LDEwIEBAIHN0YXRpYyB2b2lkIHRlc3RfYmJfc3RhcnQoY29uc3QgaW50IGk5
MTUsIGNvbnN0IHVpbnQzMl90IGhhbmRsZSwgaW50IHRlc3QpCiAJCTAsCiAJCU1JX0JBVENIX0JV
RkZFUl9FTkQsCiAJfTsKLQl1aW50MzJfdCBiYXRjaFsxMDI0XTsKKwl1aW50MzJfdCAqZHN0Owog
CiAJaWd0X3JlcXVpcmUoZ2VtX2Nhbl9zdG9yZV9kd29yZChpOTE1LCBJOTE1X0VYRUNfQkxUKSk7
CiAKLQltZW1zZXQoYmF0Y2gsIDAsIHNpemVvZihiYXRjaCkpOwotCW1lbWNweShiYXRjaCwgYmF0
Y2hfaGVhZGVyLCBzaXplb2YoYmF0Y2hfaGVhZGVyKSk7Ci0KIAlzd2l0Y2ggKHRlc3QpIHsKIAlj
YXNlIEJCX1NUQVJUX1BBUkFNOgogCQlqdW1wX29mZiA9IDUgKiBzaXplb2YodWludDMyX3QpOwpA
QCAtNDYwLDEyICs0ODEsMTMgQEAgc3RhdGljIHZvaWQgdGVzdF9iYl9zdGFydChjb25zdCBpbnQg
aTkxNSwgY29uc3QgdWludDMyX3QgaGFuZGxlLCBpbnQgdGVzdCkKIAkJYnJlYWs7CiAJZGVmYXVs
dDoKIAkJanVtcF9vZmYgPSAweGYwMGQwMDAwOworCQlicmVhazsKIAl9CiAKIAlpZiAodGVzdCA9
PSBCQl9TVEFSVF9GQVIpCi0JCWZvb3Rlcl9wb3MgPSAoc2l6ZW9mKGJhdGNoKSAtIHNpemVvZihi
YXRjaF9mb290ZXIpKTsKKwkJZm9vdGVyX3BvcyA9IHNpemVvZihiYXRjaCkgLSBzaXplb2YoYmF0
Y2hfZm9vdGVyKTsKIAllbHNlCi0JCWZvb3Rlcl9wb3MgPSBzaXplb2YoYmF0Y2hfaGVhZGVyKTsK
KwkJZm9vdGVyX3BvcyA9IDE3ICogc2l6ZW9mKHVpbnQzMl90KTsKIAogCW1lbWNweShiYXRjaCAr
IGZvb3Rlcl9wb3MgLyBzaXplb2YodWludDMyX3QpLAogCSAgICAgICBiYXRjaF9mb290ZXIsIHNp
emVvZihiYXRjaF9mb290ZXIpKTsKQEAgLTQ4MSwyNCArNTAzLDI4IEBAIHN0YXRpYyB2b2lkIHRl
c3RfYmJfc3RhcnQoY29uc3QgaW50IGk5MTUsIGNvbnN0IHVpbnQzMl90IGhhbmRsZSwgaW50IHRl
c3QpCiAJcmVsb2NbMF0uZGVsdGEgPSAwOwogCXJlbG9jWzBdLnJlYWRfZG9tYWlucyA9IEk5MTVf
R0VNX0RPTUFJTl9DT01NQU5EOwogCXJlbG9jWzBdLndyaXRlX2RvbWFpbiA9IEk5MTVfR0VNX0RP
TUFJTl9DT01NQU5EOwotCXJlbG9jWzBdLnByZXN1bWVkX29mZnNldCA9IC0xOwogCiAJcmVsb2Nb
MV0ub2Zmc2V0ID0gOSAqIHNpemVvZih1aW50MzJfdCk7CiAJcmVsb2NbMV0udGFyZ2V0X2hhbmRs
ZSA9IG9ialswXS5oYW5kbGU7CiAJcmVsb2NbMV0uZGVsdGEgPSAxICogc2l6ZW9mKHVpbnQzMl90
KTsKIAlyZWxvY1sxXS5yZWFkX2RvbWFpbnMgPSBJOTE1X0dFTV9ET01BSU5fQ09NTUFORDsKIAly
ZWxvY1sxXS53cml0ZV9kb21haW4gPSBJOTE1X0dFTV9ET01BSU5fQ09NTUFORDsKLQlyZWxvY1sx
XS5wcmVzdW1lZF9vZmZzZXQgPSAtMTsKIAotCXJlbG9jWzJdLm9mZnNldCA9IGZvb3Rlcl9wb3Mg
KyAxICogc2l6ZW9mKHVpbnQzMl90KTsKLQlyZWxvY1syXS50YXJnZXRfaGFuZGxlID0gb2JqWzFd
LmhhbmRsZTsKLQlyZWxvY1syXS5kZWx0YSA9IGp1bXBfb2ZmOworCXJlbG9jWzJdLm9mZnNldCA9
IDE0ICogc2l6ZW9mKHVpbnQzMl90KTsKKwlyZWxvY1syXS50YXJnZXRfaGFuZGxlID0gb2JqWzBd
LmhhbmRsZTsKKwlyZWxvY1syXS5kZWx0YSA9IDA7CiAJcmVsb2NbMl0ucmVhZF9kb21haW5zID0g
STkxNV9HRU1fRE9NQUlOX0NPTU1BTkQ7CiAJcmVsb2NbMl0ud3JpdGVfZG9tYWluID0gMDsKLQly
ZWxvY1syXS5wcmVzdW1lZF9vZmZzZXQgPSAtMTsKKworCXJlbG9jWzNdLm9mZnNldCA9IGZvb3Rl
cl9wb3MgKyAxICogc2l6ZW9mKHVpbnQzMl90KTsKKwlyZWxvY1szXS50YXJnZXRfaGFuZGxlID0g
b2JqWzFdLmhhbmRsZTsKKwlyZWxvY1szXS5kZWx0YSA9IGp1bXBfb2ZmOworCXJlbG9jWzNdLnJl
YWRfZG9tYWlucyA9IEk5MTVfR0VNX0RPTUFJTl9DT01NQU5EOworCXJlbG9jWzNdLndyaXRlX2Rv
bWFpbiA9IDA7CisJcmVsb2NbM10ucHJlc3VtZWRfb2Zmc2V0ID0gLTE7CiAKIAlvYmpbMV0ucmVs
b2NzX3B0ciA9IHRvX3VzZXJfcG9pbnRlcihyZWxvYyk7Ci0Jb2JqWzFdLnJlbG9jYXRpb25fY291
bnQgPSAzOworCW9ialsxXS5yZWxvY2F0aW9uX2NvdW50ID0gQVJSQVlfU0laRShyZWxvYyk7CiAK
IAltZW1zZXQoJmV4ZWNidWYsIDAsIHNpemVvZihleGVjYnVmKSk7CiAJZXhlY2J1Zi5idWZmZXJz
X3B0ciA9IHRvX3VzZXJfcG9pbnRlcihvYmopOwpAQCAtNTA2LDIxICs1MzIsMjAgQEAgc3RhdGlj
IHZvaWQgdGVzdF9iYl9zdGFydChjb25zdCBpbnQgaTkxNSwgY29uc3QgdWludDMyX3QgaGFuZGxl
LCBpbnQgdGVzdCkKIAlleGVjYnVmLmJhdGNoX2xlbiA9IHNpemVvZihiYXRjaCk7CiAJZXhlY2J1
Zi5mbGFncyA9IEk5MTVfRVhFQ19CTFQ7CiAKLQlkc3QgPSBnZW1fbW1hcF9fY3B1KGk5MTUsIG9i
alswXS5oYW5kbGUsIDAsIDQwOTYsCi0JCQkgICAgUFJPVF9SRUFEIHwgUFJPVF9XUklURSk7CisJ
ZHN0ID0gZ2VtX21tYXBfX3djKGk5MTUsIG9ialswXS5oYW5kbGUsIDAsIDQwOTYsIFBST1RfV1JJ
VEUpOwogCiAJaWd0X2Fzc2VydF9lcShkc3RbMF0sIDApOwogCWlndF9hc3NlcnRfZXEoZHN0WzFd
LCAwKTsKIAotCXJldCA9IF9fZ2VtX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpOwotCiAJc3dpdGNo
ICh0ZXN0KSB7CiAJY2FzZSBCQl9TVEFSVF9QQVJBTToKLQkJaWd0X2Fzc2VydF9lcShyZXQsIC1F
SU5WQUwpOworCWNhc2UgQkJfU1RBUlRfT1VUOgorCQlpZ3RfYXNzZXJ0X2VxKF9fY2hlY2tlZF9l
eGVjYnVmKGk5MTUsICZleGVjYnVmKSwgLUVJTlZBTCk7CiAJCWJyZWFrOworCiAJY2FzZSBCQl9T
VEFSVF9DTUQ6CiAJY2FzZSBCQl9TVEFSVF9GQVI6Ci0JCWlndF9hc3NlcnRfZXEocmV0LCAwKTsK
KwkJZ2VtX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpOwogCiAJCXdoaWxlIChSRUFEX09OQ0UoZHN0
WzBdKSA9PSAwKQogCQkgICAgICAgOwpAQCAtNTMxLDE5ICs1NTYsOCBAQCBzdGF0aWMgdm9pZCB0
ZXN0X2JiX3N0YXJ0KGNvbnN0IGludCBpOTE1LCBjb25zdCB1aW50MzJfdCBoYW5kbGUsIGludCB0
ZXN0KQogCQlpZ3RfYXNzZXJ0X2VxKGRzdFswXSwgMSk7CiAJCWlndF9hc3NlcnRfZXEoZHN0WzFd
LCAyKTsKIAotCQlpZ3RfaW5mbygidmFsdWVzIG5vdyAleCAleFxuIiwgZHN0WzBdLCBkc3RbMV0p
OwotCiAJCWRzdFswXSA9IDA7Ci0KLQkJaWd0X2luZm8oInZhbHVlcyBub3cgJXggJXhcbiIsIGRz
dFswXSwgZHN0WzFdKTsKLQotCQlpZ3RfYXNzZXJ0X2VxKGRzdFswXSwgMCk7Ci0JCWlndF9hc3Nl
cnRfZXEoZHN0WzFdLCAyKTsKLQotCQlicmVhazsKLQotCWNhc2UgQkJfU1RBUlRfT1VUOgotCQlp
Z3RfYXNzZXJ0X2VxKHJldCwgLUVJTlZBTCk7CisJCV9fc3luY19zeW5jaHJvbml6ZSgpOwogCQli
cmVhazsKIAl9CiAKQEAgLTg5Niw3ICs5MTAsNyBAQCBzdGF0aWMgdm9pZCB0ZXN0X3VuYWxpZ25l
ZF9qdW1wKGNvbnN0IGludCBpOTE1LCBjb25zdCB1aW50MzJfdCBoYW5kbGUpCiAJCW1lbWNweSgm
YmF0Y2hbMV0sICZvZmZzZXQsIHNpemVvZihvZmZzZXQpKTsKIAkJZ2VtX3dyaXRlKGk5MTUsIGhh
bmRsZSwgNDAwMCwgYmF0Y2gsIHNpemVvZihiYXRjaCkpOwogCi0JCWlndF9hc3NlcnRfZihfX2dl
bV9leGVjYnVmKGk5MTUsICZleGVjYnVmKSA9PSAtRUlOVkFMLAorCQlpZ3RfYXNzZXJ0X2YoX19j
aGVja2VkX2V4ZWNidWYoaTkxNSwgJmV4ZWNidWYpID09IC1FSU5WQUwsCiAJCQkgICAgICJ1bmFs
aWduZWQganVtcCBhY2NlcHRlZCB0byAlZDsgYmF0Y2g9JTA4eFxuIiwKIAkJCSAgICAgcmVsb2Mu
ZGVsdGEsIGJhdGNoW3JlbG9jLmRlbHRhIC8gNF0pOwogCX0KQEAgLTEwMzIsMTkgKzEwNDYsMTEg
QEAgaWd0X21haW4KIAlpZ3Rfc3VidGVzdCgidW5hbGlnbmVkLWp1bXAiKQogCQl0ZXN0X3VuYWxp
Z25lZF9qdW1wKGk5MTUsIGhhbmRsZSk7CiAKLQlpZ3Rfc3VidGVzdF9ncm91cCB7Ci0JCWlndF9o
YW5nX3QgaGFuZzsKLQotCQlpZ3RfZml4dHVyZSBpZ3RfYWxsb3dfaGFuZyhpOTE1LCAwLCAwKTsK
KwlpZ3Rfc3VidGVzdCgiYmItc3RhcnQtY21kIikKKwkJdGVzdF9iYl9zdGFydChpOTE1LCBoYW5k
bGUsIEJCX1NUQVJUX0NNRCk7CiAKLQkJaWd0X3N1YnRlc3QoImJiLXN0YXJ0LWNtZCIpCi0JCQl0
ZXN0X2JiX3N0YXJ0KGk5MTUsIGhhbmRsZSwgQkJfU1RBUlRfQ01EKTsKLQotCQlpZ3Rfc3VidGVz
dCgiYmItc3RhcnQtZmFyIikKLQkJCXRlc3RfYmJfc3RhcnQoaTkxNSwgaGFuZGxlLCBCQl9TVEFS
VF9GQVIpOwotCi0JCWlndF9maXh0dXJlIGlndF9kaXNhbGxvd19oYW5nKGk5MTUsIGhhbmcpOwot
CX0KKwlpZ3Rfc3VidGVzdCgiYmItc3RhcnQtZmFyIikKKwkJdGVzdF9iYl9zdGFydChpOTE1LCBo
YW5kbGUsIEJCX1NUQVJUX0ZBUik7CiAKIAlpZ3RfZml4dHVyZSB7CiAJCWlndF9zdG9wX2hhbmdf
ZGV0ZWN0b3IoKTsKLS0gCjIuMjQuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4

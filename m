Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8E3E7CE286
	for <lists+intel-gfx@lfdr.de>; Mon,  7 Oct 2019 15:03:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E2DE76E5D8;
	Mon,  7 Oct 2019 13:03:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CC0FB6E5D5
 for <intel-gfx@lists.freedesktop.org>; Mon,  7 Oct 2019 13:03:49 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18751742-1500050 
 for multiple; Mon, 07 Oct 2019 14:03:26 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  7 Oct 2019 14:03:25 +0100
Message-Id: <20191007130325.7340-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/perf: Wean ourselves off dev_priv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXNlIHRoZSBsb2NhbCB1bmNvcmUgYWNjZXNzb3JzIGZvciB0aGUgR1QgcmF0aGVyIHRoYW4gdXNp
bmcgdGhlIFtub3Qtc29dCm1hZ2ljIGdsb2JhbCBkZXZfcHJpdiBtbWlvIHJvdXRpbmVzLiBJbiB0
aGUgcHJvY2Vzcywgd2UgYWxzbyB0ZWFjaCB0aGUKcGVyZiBzdHJlYW0gdG8gdXNlIGJhY2twb2lu
dGVycyB0byB0aGUgaTkxNV9wZXJmIHJhdGhlciB0aGFuIGRpZ2dpbmcgaXQKb3V0IG9mIGRldl9w
cml2LgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28u
dWs+CkNjOiBVbWVzaCBOZXJsaWdlIFJhbWFwcGEgPHVtZXNoLm5lcmxpZ2UucmFtYXBwYUBpbnRl
bC5jb20+CkNjOiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgfCAgMjEgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jIHwgNzIxICsrKysrKysrKysrKysrKy0tLS0tLS0t
LS0tLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgMzY3IGluc2VydGlvbnMoKyksIDM3NSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCBiOWRjNGJlNGI2YTEuLjc3MjRiNjg2
YzllZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0xMDA3LDYgKzEwMDcsNyBAQCBzdHJ1
Y3QgaTkxNV9vYV9jb25maWcgewogCWF0b21pY190IHJlZl9jb3VudDsKIH07CiAKK3N0cnVjdCBp
OTE1X3BlcmY7CiBzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbTsKIAogLyoqCkBAIC0xMDc4LDkgKzEw
NzksMTQgQEAgc3RydWN0IGk5MTVfcGVyZl9zdHJlYW1fb3BzIHsKICAqLwogc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gewogCS8qKgotCSAqIEBkZXZfcHJpdjogaTkxNSBkcm0gZGV2aWNlCisJICog
QHBlcmY6IGk5MTVfcGVyZiBiYWNrcG9pbnRlcgogCSAqLwotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdjsKKwlzdHJ1Y3QgaTkxNV9wZXJmICpwZXJmOworCisJLyoqCisJICogQGd0
OiBpbnRlbF9ndCBjb250YWluZXIKKwkgKi8KKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0OwogCiAJLyoq
CiAJICogQGxpbms6IExpbmtzIHRoZSBzdHJlYW0gaW50byBgYCZkcm1faTkxNV9wcml2YXRlLT5z
dHJlYW1zYGAKQEAgLTEyMjAsMjAgKzEyMjYsMTkgQEAgc3RydWN0IGk5MTVfb2Ffb3BzIHsKIAkg
KiBAaXNfdmFsaWRfYl9jb3VudGVyX3JlZzogVmFsaWRhdGVzIHJlZ2lzdGVyJ3MgYWRkcmVzcyBm
b3IKIAkgKiBwcm9ncmFtbWluZyBib29sZWFuIGNvdW50ZXJzIGZvciBhIHBhcnRpY3VsYXIgcGxh
dGZvcm0uCiAJICovCi0JYm9vbCAoKmlzX3ZhbGlkX2JfY291bnRlcl9yZWcpKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkgICAgICAgdTMyIGFkZHIpOworCWJvb2wgKCpp
c192YWxpZF9iX2NvdW50ZXJfcmVnKShzdHJ1Y3QgaTkxNV9wZXJmICpwZXJmLCB1MzIgYWRkcik7
CiAKIAkvKioKIAkgKiBAaXNfdmFsaWRfbXV4X3JlZzogVmFsaWRhdGVzIHJlZ2lzdGVyJ3MgYWRk
cmVzcyBmb3IgcHJvZ3JhbW1pbmcgbXV4CiAJICogZm9yIGEgcGFydGljdWxhciBwbGF0Zm9ybS4K
IAkgKi8KLQlib29sICgqaXNfdmFsaWRfbXV4X3JlZykoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCB1MzIgYWRkcik7CisJYm9vbCAoKmlzX3ZhbGlkX211eF9yZWcpKHN0cnVjdCBp
OTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRyKTsKIAogCS8qKgogCSAqIEBpc192YWxpZF9mbGV4X3Jl
ZzogVmFsaWRhdGVzIHJlZ2lzdGVyJ3MgYWRkcmVzcyBmb3IgcHJvZ3JhbW1pbmcKIAkgKiBmbGV4
IEVVIGZpbHRlcmluZyBmb3IgYSBwYXJ0aWN1bGFyIHBsYXRmb3JtLgogCSAqLwotCWJvb2wgKCpp
c192YWxpZF9mbGV4X3JlZykoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIg
YWRkcik7CisJYm9vbCAoKmlzX3ZhbGlkX2ZsZXhfcmVnKShzdHJ1Y3QgaTkxNV9wZXJmICpwZXJm
LCB1MzIgYWRkcik7CiAKIAkvKioKIAkgKiBAZW5hYmxlX21ldHJpY19zZXQ6IFNlbGVjdHMgYW5k
IGFwcGxpZXMgYW55IE1VWCBjb25maWd1cmF0aW9uIHRvIHNldApAQCAtMTYzNSw4ICsxNjQwLDgg
QEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgewogCiAJc3RydWN0IGludGVsX3J1bnRpbWVfcG0g
cnVudGltZV9wbTsKIAotCXN0cnVjdCB7Ci0JCWJvb2wgaW5pdGlhbGl6ZWQ7CisJc3RydWN0IGk5
MTVfcGVyZiB7CisJCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1OwogCiAJCXN0cnVjdCBr
b2JqZWN0ICptZXRyaWNzX2tvYmo7CiAJCXN0cnVjdCBjdGxfdGFibGVfaGVhZGVyICpzeXNjdGxf
aGVhZGVyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwppbmRleCAyMzEzODhkMDZjODIuLmVmNWU0
OGViYWFhNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKQEAgLTM2Nyw4ICszNjcsNyBAQCBz
dHJ1Y3QgcGVyZl9vcGVuX3Byb3BlcnRpZXMgewogCiBzdGF0aWMgZW51bSBocnRpbWVyX3Jlc3Rh
cnQgb2FfcG9sbF9jaGVja190aW1lcl9jYihzdHJ1Y3QgaHJ0aW1lciAqaHJ0aW1lcik7CiAKLXN0
YXRpYyB2b2lkIGZyZWVfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKLQkJCSAgIHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnKQorc3RhdGljIHZvaWQg
ZnJlZV9vYV9jb25maWcoc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCiB7CiAJaWYg
KCFQVFJfRVJSKG9hX2NvbmZpZy0+ZmxleF9yZWdzKSkKIAkJa2ZyZWUob2FfY29uZmlnLT5mbGV4
X3JlZ3MpOwpAQCAtMzc5LDUzICszNzgsNTIgQEAgc3RhdGljIHZvaWQgZnJlZV9vYV9jb25maWco
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCWtmcmVlKG9hX2NvbmZpZyk7CiB9
CiAKLXN0YXRpYyB2b2lkIHB1dF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LAotCQkJICBzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZykKK3N0YXRpYyB2
b2lkIHB1dF9vYV9jb25maWcoc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCiB7CiAJ
aWYgKCFhdG9taWNfZGVjX2FuZF90ZXN0KCZvYV9jb25maWctPnJlZl9jb3VudCkpCiAJCXJldHVy
bjsKIAotCWZyZWVfb2FfY29uZmlnKGRldl9wcml2LCBvYV9jb25maWcpOworCWZyZWVfb2FfY29u
ZmlnKG9hX2NvbmZpZyk7CiB9CiAKLXN0YXRpYyBpbnQgZ2V0X29hX2NvbmZpZyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCitzdGF0aWMgaW50IGdldF9vYV9jb25maWcoc3RydWN0
IGk5MTVfcGVyZiAqcGVyZiwKIAkJCSBpbnQgbWV0cmljc19zZXQsCiAJCQkgc3RydWN0IGk5MTVf
b2FfY29uZmlnICoqb3V0X2NvbmZpZykKIHsKIAlpbnQgcmV0OwogCiAJaWYgKG1ldHJpY3Nfc2V0
ID09IDEpIHsKLQkJKm91dF9jb25maWcgPSAmZGV2X3ByaXYtPnBlcmYudGVzdF9jb25maWc7Ci0J
CWF0b21pY19pbmMoJmRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLnJlZl9jb3VudCk7CisJCSpv
dXRfY29uZmlnID0gJnBlcmYtPnRlc3RfY29uZmlnOworCQlhdG9taWNfaW5jKCZwZXJmLT50ZXN0
X2NvbmZpZy5yZWZfY291bnQpOwogCQlyZXR1cm4gMDsKIAl9CiAKLQlyZXQgPSBtdXRleF9sb2Nr
X2ludGVycnVwdGlibGUoJmRldl9wcml2LT5wZXJmLm1ldHJpY3NfbG9jayk7CisJcmV0ID0gbXV0
ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZwZXJmLT5tZXRyaWNzX2xvY2spOwogCWlmIChyZXQpCiAJ
CXJldHVybiByZXQ7CiAKLQkqb3V0X2NvbmZpZyA9IGlkcl9maW5kKCZkZXZfcHJpdi0+cGVyZi5t
ZXRyaWNzX2lkciwgbWV0cmljc19zZXQpOworCSpvdXRfY29uZmlnID0gaWRyX2ZpbmQoJnBlcmYt
Pm1ldHJpY3NfaWRyLCBtZXRyaWNzX3NldCk7CiAJaWYgKCEqb3V0X2NvbmZpZykKIAkJcmV0ID0g
LUVJTlZBTDsKIAllbHNlCiAJCWF0b21pY19pbmMoJigqb3V0X2NvbmZpZyktPnJlZl9jb3VudCk7
CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wZXJmLm1ldHJpY3NfbG9jayk7CisJbXV0ZXhf
dW5sb2NrKCZwZXJmLT5tZXRyaWNzX2xvY2spOwogCiAJcmV0dXJuIHJldDsKIH0KIAogc3RhdGlj
IHUzMiBnZW44X29hX2h3X3RhaWxfcmVhZChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFt
KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3By
aXY7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwog
Ci0JcmV0dXJuIEk5MTVfUkVBRChHRU44X09BVEFJTFBUUikgJiBHRU44X09BVEFJTFBUUl9NQVNL
OworCXJldHVybiBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjhfT0FUQUlMUFRSKSAmIEdF
TjhfT0FUQUlMUFRSX01BU0s7CiB9CiAKIHN0YXRpYyB1MzIgZ2VuN19vYV9od190YWlsX3JlYWQo
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRldl9wcml2OwotCXUzMiBvYXN0YXR1czEgPSBJOTE1
X1JFQUQoR0VON19PQVNUQVRVUzEpOworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IHN0
cmVhbS0+Z3QtPnVuY29yZTsKKwl1MzIgb2FzdGF0dXMxID0gaW50ZWxfdW5jb3JlX3JlYWQodW5j
b3JlLCBHRU43X09BU1RBVFVTMSk7CiAKIAlyZXR1cm4gb2FzdGF0dXMxICYgR0VON19PQVNUQVRV
UzFfVEFJTF9NQVNLOwogfQpAQCAtNDU2LDcgKzQ1NCw2IEBAIHN0YXRpYyB1MzIgZ2VuN19vYV9o
d190YWlsX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKICAqLwogc3RhdGlj
IGJvb2wgb2FfYnVmZmVyX2NoZWNrX3VubG9ja2VkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpz
dHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFtLT5k
ZXZfcHJpdjsKIAlpbnQgcmVwb3J0X3NpemUgPSBzdHJlYW0tPm9hX2J1ZmZlci5mb3JtYXRfc2l6
ZTsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCXVuc2lnbmVkIGludCBhZ2VkX2lkeDsKQEAgLTQ3
OSw3ICs0NzYsNyBAQCBzdGF0aWMgYm9vbCBvYV9idWZmZXJfY2hlY2tfdW5sb2NrZWQoc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlhZ2VkX3RhaWwgPSBzdHJlYW0tPm9hX2J1ZmZl
ci50YWlsc1thZ2VkX2lkeF0ub2Zmc2V0OwogCWFnaW5nX3RhaWwgPSBzdHJlYW0tPm9hX2J1ZmZl
ci50YWlsc1shYWdlZF9pZHhdLm9mZnNldDsKIAotCWh3X3RhaWwgPSBkZXZfcHJpdi0+cGVyZi5v
cHMub2FfaHdfdGFpbF9yZWFkKHN0cmVhbSk7CisJaHdfdGFpbCA9IHN0cmVhbS0+cGVyZi0+b3Bz
Lm9hX2h3X3RhaWxfcmVhZChzdHJlYW0pOwogCiAJLyogVGhlIHRhaWwgcG9pbnRlciBpbmNyZWFz
ZXMgaW4gNjQgYnl0ZSBpbmNyZW1lbnRzLAogCSAqIG5vdCBpbiByZXBvcnRfc2l6ZSBzdGVwcy4u
LgpAQCAtNjU1LDcgKzY1Miw3IEBAIHN0YXRpYyBpbnQgZ2VuOF9hcHBlbmRfb2FfcmVwb3J0cyhz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQkJCSAgc2l6ZV90IGNvdW50LAogCQkJ
CSAgc2l6ZV90ICpvZmZzZXQpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gc3RyZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJl
YW0tPmd0LT51bmNvcmU7CiAJaW50IHJlcG9ydF9zaXplID0gc3RyZWFtLT5vYV9idWZmZXIuZm9y
bWF0X3NpemU7CiAJdTggKm9hX2J1Zl9iYXNlID0gc3RyZWFtLT5vYV9idWZmZXIudmFkZHI7CiAJ
dTMyIGd0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHN0cmVhbS0+b2FfYnVmZmVyLnZtYSk7
CkBAIC03NDAsNyArNzM3LDcgQEAgc3RhdGljIGludCBnZW44X2FwcGVuZF9vYV9yZXBvcnRzKHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCXJlYXNvbiA9ICgocmVwb3J0MzJbMF0g
Pj4gT0FSRVBPUlRfUkVBU09OX1NISUZUKSAmCiAJCQkgIE9BUkVQT1JUX1JFQVNPTl9NQVNLKTsK
IAkJaWYgKHJlYXNvbiA9PSAwKSB7Ci0JCQlpZiAoX19yYXRlbGltaXQoJmRldl9wcml2LT5wZXJm
LnNwdXJpb3VzX3JlcG9ydF9ycykpCisJCQlpZiAoX19yYXRlbGltaXQoJnN0cmVhbS0+cGVyZi0+
c3B1cmlvdXNfcmVwb3J0X3JzKSkKIAkJCQlEUk1fTk9URSgiU2tpcHBpbmcgc3B1cmlvdXMsIGlu
dmFsaWQgT0EgcmVwb3J0XG4iKTsKIAkJCWNvbnRpbnVlOwogCQl9CkBAIC03NTUsNyArNzUyLDcg
QEAgc3RhdGljIGludCBnZW44X2FwcGVuZF9vYV9yZXBvcnRzKHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0sCiAJCSAqIE5vdGU6IHRoYXQgd2UgZG9uJ3QgY2xlYXIgdGhlIHZhbGlkX2N0
eF9iaXQgc28gdXNlcnNwYWNlIGNhbgogCQkgKiB1bmRlcnN0YW5kIHRoYXQgdGhlIElEIGhhcyBi
ZWVuIHNxdWFzaGVkIGJ5IHRoZSBrZXJuZWwuCiAJCSAqLwotCQlpZiAoIShyZXBvcnQzMlswXSAm
IGRldl9wcml2LT5wZXJmLmdlbjhfdmFsaWRfY3R4X2JpdCkpCisJCWlmICghKHJlcG9ydDMyWzBd
ICYgc3RyZWFtLT5wZXJmLT5nZW44X3ZhbGlkX2N0eF9iaXQpKQogCQkJY3R4X2lkID0gcmVwb3J0
MzJbMl0gPSBJTlZBTElEX0NUWF9JRDsKIAogCQkvKgpAQCAtNzg5LDcgKzc4Niw3IEBAIHN0YXRp
YyBpbnQgZ2VuOF9hcHBlbmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtLAogCQkgKiBzd2l0Y2hlcyBzaW5jZSBpdCdzIG5vdC11bmNvbW1vbiBmb3IgcGVyaW9kaWMg
c2FtcGxlcyB0bwogCQkgKiBpZGVudGlmeSBhIHN3aXRjaCBiZWZvcmUgYW55ICdjb250ZXh0IHN3
aXRjaCcgcmVwb3J0LgogCQkgKi8KLQkJaWYgKCFkZXZfcHJpdi0+cGVyZi5leGNsdXNpdmVfc3Ry
ZWFtLT5jdHggfHwKKwkJaWYgKCFzdHJlYW0tPnBlcmYtPmV4Y2x1c2l2ZV9zdHJlYW0tPmN0eCB8
fAogCQkgICAgc3RyZWFtLT5zcGVjaWZpY19jdHhfaWQgPT0gY3R4X2lkIHx8CiAJCSAgICBzdHJl
YW0tPm9hX2J1ZmZlci5sYXN0X2N0eF9pZCA9PSBzdHJlYW0tPnNwZWNpZmljX2N0eF9pZCB8fAog
CQkgICAgcmVhc29uICYgT0FSRVBPUlRfUkVBU09OX0NUWF9TV0lUQ0gpIHsKQEAgLTc5OCw3ICs3
OTUsNyBAQCBzdGF0aWMgaW50IGdlbjhfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSwKIAkJCSAqIFdoaWxlIGZpbHRlcmluZyBmb3IgYSBzaW5nbGUgY29u
dGV4dCB3ZSBhdm9pZAogCQkJICogbGVha2luZyB0aGUgSURzIG9mIG90aGVyIGNvbnRleHRzLgog
CQkJICovCi0JCQlpZiAoZGV2X3ByaXYtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbS0+Y3R4ICYmCisJ
CQlpZiAoc3RyZWFtLT5wZXJmLT5leGNsdXNpdmVfc3RyZWFtLT5jdHggJiYKIAkJCSAgICBzdHJl
YW0tPnNwZWNpZmljX2N0eF9pZCAhPSBjdHhfaWQpIHsKIAkJCQlyZXBvcnQzMlsyXSA9IElOVkFM
SURfQ1RYX0lEOwogCQkJfQpAQCAtODMwLDcgKzgyNyw4IEBAIHN0YXRpYyBpbnQgZ2VuOF9hcHBl
bmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQkgKi8KIAkJ
aGVhZCArPSBndHRfb2Zmc2V0OwogCi0JCUk5MTVfV1JJVEUoR0VOOF9PQUhFQURQVFIsIGhlYWQg
JiBHRU44X09BSEVBRFBUUl9NQVNLKTsKKwkJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VO
OF9PQUhFQURQVFIsCisJCQkJICAgaGVhZCAmIEdFTjhfT0FIRUFEUFRSX01BU0spOwogCQlzdHJl
YW0tPm9hX2J1ZmZlci5oZWFkID0gaGVhZDsKIAogCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZz
dHJlYW0tPm9hX2J1ZmZlci5wdHJfbG9jaywgZmxhZ3MpOwpAQCAtODY0LDE0ICs4NjIsMTQgQEAg
c3RhdGljIGludCBnZW44X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwK
IAkJCXNpemVfdCBjb3VudCwKIAkJCXNpemVfdCAqb2Zmc2V0KQogewotCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGludGVsX3Vu
Y29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwogCXUzMiBvYXN0YXR1czsKIAlpbnQg
cmV0OwogCiAJaWYgKFdBUk5fT04oIXN0cmVhbS0+b2FfYnVmZmVyLnZhZGRyKSkKIAkJcmV0dXJu
IC1FSU87CiAKLQlvYXN0YXR1cyA9IEk5MTVfUkVBRChHRU44X09BU1RBVFVTKTsKKwlvYXN0YXR1
cyA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgR0VOOF9PQVNUQVRVUyk7CiAKIAkvKgogCSAq
IFdlIHRyZWF0IE9BQlVGRkVSX09WRVJGTE9XIGFzIGEgc2lnbmlmaWNhbnQgZXJyb3I6CkBAIC04
OTYsMTQgKzg5NCwxNCBAQCBzdGF0aWMgaW50IGdlbjhfb2FfcmVhZChzdHJ1Y3QgaTkxNV9wZXJm
X3N0cmVhbSAqc3RyZWFtLAogCQlEUk1fREVCVUcoIk9BIGJ1ZmZlciBvdmVyZmxvdyAoZXhwb25l
bnQgPSAlZCk6IGZvcmNlIHJlc3RhcnRcbiIsCiAJCQkgIHN0cmVhbS0+cGVyaW9kX2V4cG9uZW50
KTsKIAotCQlkZXZfcHJpdi0+cGVyZi5vcHMub2FfZGlzYWJsZShzdHJlYW0pOwotCQlkZXZfcHJp
di0+cGVyZi5vcHMub2FfZW5hYmxlKHN0cmVhbSk7CisJCXN0cmVhbS0+cGVyZi0+b3BzLm9hX2Rp
c2FibGUoc3RyZWFtKTsKKwkJc3RyZWFtLT5wZXJmLT5vcHMub2FfZW5hYmxlKHN0cmVhbSk7CiAK
IAkJLyoKIAkJICogTm90ZTogLm9hX2VuYWJsZSgpIGlzIGV4cGVjdGVkIHRvIHJlLWluaXQgdGhl
IG9hYnVmZmVyIGFuZAogCQkgKiByZXNldCBHRU44X09BU1RBVFVTIGZvciB1cwogCQkgKi8KLQkJ
b2FzdGF0dXMgPSBJOTE1X1JFQUQoR0VOOF9PQVNUQVRVUyk7CisJCW9hc3RhdHVzID0gaW50ZWxf
dW5jb3JlX3JlYWQodW5jb3JlLCBHRU44X09BU1RBVFVTKTsKIAl9CiAKIAlpZiAob2FzdGF0dXMg
JiBHRU44X09BU1RBVFVTX1JFUE9SVF9MT1NUKSB7CkBAIC05MTEsOCArOTA5LDggQEAgc3RhdGlj
IGludCBnZW44X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJCQkg
ICAgICAgRFJNX0k5MTVfUEVSRl9SRUNPUkRfT0FfUkVQT1JUX0xPU1QpOwogCQlpZiAocmV0KQog
CQkJcmV0dXJuIHJldDsKLQkJSTkxNV9XUklURShHRU44X09BU1RBVFVTLAotCQkJICAgb2FzdGF0
dXMgJiB+R0VOOF9PQVNUQVRVU19SRVBPUlRfTE9TVCk7CisJCWludGVsX3VuY29yZV93cml0ZSh1
bmNvcmUsIEdFTjhfT0FTVEFUVVMsCisJCQkJICAgb2FzdGF0dXMgJiB+R0VOOF9PQVNUQVRVU19S
RVBPUlRfTE9TVCk7CiAJfQogCiAJcmV0dXJuIGdlbjhfYXBwZW5kX29hX3JlcG9ydHMoc3RyZWFt
LCBidWYsIGNvdW50LCBvZmZzZXQpOwpAQCAtOTQzLDcgKzk0MSw3IEBAIHN0YXRpYyBpbnQgZ2Vu
N19hcHBlbmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQkJ
CSAgc2l6ZV90IGNvdW50LAogCQkJCSAgc2l6ZV90ICpvZmZzZXQpCiB7Ci0Jc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaW50ZWxf
dW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPmd0LT51bmNvcmU7CiAJaW50IHJlcG9ydF9zaXplID0g
c3RyZWFtLT5vYV9idWZmZXIuZm9ybWF0X3NpemU7CiAJdTggKm9hX2J1Zl9iYXNlID0gc3RyZWFt
LT5vYV9idWZmZXIudmFkZHI7CiAJdTMyIGd0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHN0
cmVhbS0+b2FfYnVmZmVyLnZtYSk7CkBAIC0xMDE3LDcgKzEwMTUsNyBAQCBzdGF0aWMgaW50IGdl
bjdfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJ
ICogY29weWluZyBpdCB0byB1c2Vyc3BhY2UuLi4KIAkJICovCiAJCWlmIChyZXBvcnQzMlswXSA9
PSAwKSB7Ci0JCQlpZiAoX19yYXRlbGltaXQoJmRldl9wcml2LT5wZXJmLnNwdXJpb3VzX3JlcG9y
dF9ycykpCisJCQlpZiAoX19yYXRlbGltaXQoJnN0cmVhbS0+cGVyZi0+c3B1cmlvdXNfcmVwb3J0
X3JzKSkKIAkJCQlEUk1fTk9URSgiU2tpcHBpbmcgc3B1cmlvdXMsIGludmFsaWQgT0EgcmVwb3J0
XG4iKTsKIAkJCWNvbnRpbnVlOwogCQl9CkBAIC0xMDQzLDkgKzEwNDEsOSBAQCBzdGF0aWMgaW50
IGdlbjdfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwK
IAkJICovCiAJCWhlYWQgKz0gZ3R0X29mZnNldDsKIAotCQlJOTE1X1dSSVRFKEdFTjdfT0FTVEFU
VVMyLAotCQkJICAgKChoZWFkICYgR0VON19PQVNUQVRVUzJfSEVBRF9NQVNLKSB8Ci0JCQkgICAg
R0VON19PQVNUQVRVUzJfTUVNX1NFTEVDVF9HR1RUKSk7CisJCWludGVsX3VuY29yZV93cml0ZSh1
bmNvcmUsIEdFTjdfT0FTVEFUVVMyLAorCQkJCSAgIChoZWFkICYgR0VON19PQVNUQVRVUzJfSEVB
RF9NQVNLKSB8CisJCQkJICAgR0VON19PQVNUQVRVUzJfTUVNX1NFTEVDVF9HR1RUKTsKIAkJc3Ry
ZWFtLT5vYV9idWZmZXIuaGVhZCA9IGhlYWQ7CiAKIAkJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgm
c3RyZWFtLT5vYV9idWZmZXIucHRyX2xvY2ssIGZsYWdzKTsKQEAgLTEwNzUsMjEgKzEwNzMsMjEg
QEAgc3RhdGljIGludCBnZW43X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSwKIAkJCXNpemVfdCBjb3VudCwKIAkJCXNpemVfdCAqb2Zmc2V0KQogewotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGludGVs
X3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwogCXUzMiBvYXN0YXR1czE7CiAJ
aW50IHJldDsKIAogCWlmIChXQVJOX09OKCFzdHJlYW0tPm9hX2J1ZmZlci52YWRkcikpCiAJCXJl
dHVybiAtRUlPOwogCi0Jb2FzdGF0dXMxID0gSTkxNV9SRUFEKEdFTjdfT0FTVEFUVVMxKTsKKwlv
YXN0YXR1czEgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjdfT0FTVEFUVVMxKTsKIAog
CS8qIFhYWDogT24gSGFzd2VsbCB3ZSBkb24ndCBoYXZlIGEgc2FmZSB3YXkgdG8gY2xlYXIgb2Fz
dGF0dXMxCiAJICogYml0cyB3aGlsZSB0aGUgT0EgdW5pdCBpcyBlbmFibGVkICh3aGlsZSB0aGUg
dGFpbCBwb2ludGVyCiAJICogbWF5IGJlIHVwZGF0ZWQgYXN5bmNocm9ub3VzbHkpIHNvIHdlIGln
bm9yZSBzdGF0dXMgYml0cwogCSAqIHRoYXQgaGF2ZSBhbHJlYWR5IGJlZW4gcmVwb3J0ZWQgdG8g
dXNlcnNwYWNlLgogCSAqLwotCW9hc3RhdHVzMSAmPSB+ZGV2X3ByaXYtPnBlcmYuZ2VuN19sYXRj
aGVkX29hc3RhdHVzMTsKKwlvYXN0YXR1czEgJj0gfnN0cmVhbS0+cGVyZi0+Z2VuN19sYXRjaGVk
X29hc3RhdHVzMTsKIAogCS8qIFdlIHRyZWF0IE9BQlVGRkVSX09WRVJGTE9XIGFzIGEgc2lnbmlm
aWNhbnQgZXJyb3I6CiAJICoKQEAgLTExMjAsMTAgKzExMTgsMTAgQEAgc3RhdGljIGludCBnZW43
X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJRFJNX0RFQlVHKCJP
QSBidWZmZXIgb3ZlcmZsb3cgKGV4cG9uZW50ID0gJWQpOiBmb3JjZSByZXN0YXJ0XG4iLAogCQkJ
ICBzdHJlYW0tPnBlcmlvZF9leHBvbmVudCk7CiAKLQkJZGV2X3ByaXYtPnBlcmYub3BzLm9hX2Rp
c2FibGUoc3RyZWFtKTsKLQkJZGV2X3ByaXYtPnBlcmYub3BzLm9hX2VuYWJsZShzdHJlYW0pOwor
CQlzdHJlYW0tPnBlcmYtPm9wcy5vYV9kaXNhYmxlKHN0cmVhbSk7CisJCXN0cmVhbS0+cGVyZi0+
b3BzLm9hX2VuYWJsZShzdHJlYW0pOwogCi0JCW9hc3RhdHVzMSA9IEk5MTVfUkVBRChHRU43X09B
U1RBVFVTMSk7CisJCW9hc3RhdHVzMSA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgR0VON19P
QVNUQVRVUzEpOwogCX0KIAogCWlmICh1bmxpa2VseShvYXN0YXR1czEgJiBHRU43X09BU1RBVFVT
MV9SRVBPUlRfTE9TVCkpIHsKQEAgLTExMzEsNyArMTEyOSw3IEBAIHN0YXRpYyBpbnQgZ2VuN19v
YV9yZWFkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCQkJICAgICAgIERSTV9J
OTE1X1BFUkZfUkVDT1JEX09BX1JFUE9SVF9MT1NUKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiBy
ZXQ7Ci0JCWRldl9wcml2LT5wZXJmLmdlbjdfbGF0Y2hlZF9vYXN0YXR1czEgfD0KKwkJc3RyZWFt
LT5wZXJmLT5nZW43X2xhdGNoZWRfb2FzdGF0dXMxIHw9CiAJCQlHRU43X09BU1RBVFVTMV9SRVBP
UlRfTE9TVDsKIAl9CiAKQEAgLTExOTYsOSArMTE5NCw3IEBAIHN0YXRpYyBpbnQgaTkxNV9vYV9y
ZWFkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCQlzaXplX3QgY291bnQsCiAJ
CQlzaXplX3QgKm9mZnNldCkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSBzdHJlYW0tPmRldl9wcml2OwotCi0JcmV0dXJuIGRldl9wcml2LT5wZXJmLm9wcy5yZWFkKHN0
cmVhbSwgYnVmLCBjb3VudCwgb2Zmc2V0KTsKKwlyZXR1cm4gc3RyZWFtLT5wZXJmLT5vcHMucmVh
ZChzdHJlYW0sIGJ1ZiwgY291bnQsIG9mZnNldCk7CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqb2FfcGluX2NvbnRleHQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkK
QEAgLTEyMzksMTQgKzEyMzUsMTMgQEAgc3RhdGljIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpvYV9w
aW5fY29udGV4dChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogICovCiBzdGF0aWMg
aW50IG9hX2dldF9yZW5kZXJfY3R4X2lkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0p
CiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBzdHJlYW0tPmRldl9wcml2Owog
CXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAogCWNlID0gb2FfcGluX2NvbnRleHQoc3RyZWFt
KTsKIAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCi0Jc3dpdGNoIChJ
TlRFTF9HRU4oaTkxNSkpIHsKKwlzd2l0Y2ggKElOVEVMX0dFTihjZS0+ZW5naW5lLT5pOTE1KSkg
ewogCWNhc2UgNzogewogCQkvKgogCQkgKiBPbiBIYXN3ZWxsIHdlIGRvbid0IGRvIGFueSBwb3N0
IHByb2Nlc3Npbmcgb2YgdGhlIHJlcG9ydHMKQEAgLTEyNjAsNyArMTI1NSw3IEBAIHN0YXRpYyBp
bnQgb2FfZ2V0X3JlbmRlcl9jdHhfaWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkK
IAljYXNlIDg6CiAJY2FzZSA5OgogCWNhc2UgMTA6Ci0JCWlmIChVU0VTX0dVQ19TVUJNSVNTSU9O
KGk5MTUpKSB7CisJCWlmIChVU0VTX0dVQ19TVUJNSVNTSU9OKGNlLT5lbmdpbmUtPmk5MTUpKSB7
CiAJCQkvKgogCQkJICogV2hlbiB1c2luZyBHdUMsIHRoZSBjb250ZXh0IGRlc2NyaXB0b3Igd2Ug
d3JpdGUgaW4KIAkJCSAqIGk5MTUgaXMgcmVhZCBieSBHdUMgYW5kIHJld3JpdHRlbiBiZWZvcmUg
aXQncwpAQCAtMTI5Niw3ICsxMjkxLDcgQEAgc3RhdGljIGludCBvYV9nZXRfcmVuZGVyX2N0eF9p
ZChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCX0KIAogCWRlZmF1bHQ6Ci0JCU1J
U1NJTkdfQ0FTRShJTlRFTF9HRU4oaTkxNSkpOworCQlNSVNTSU5HX0NBU0UoSU5URUxfR0VOKGNl
LT5lbmdpbmUtPmk5MTUpKTsKIAl9CiAKIAljZS0+dGFnID0gc3RyZWFtLT5zcGVjaWZpY19jdHhf
aWRfbWFzazsKQEAgLTEzNDAsMzggKzEzMzUsMzggQEAgZnJlZV9vYV9idWZmZXIoc3RydWN0IGk5
MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAogc3RhdGljIHZvaWQgaTkxNV9vYV9zdHJlYW1fZGVz
dHJveShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewotCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGk5MTVfcGVy
ZiAqcGVyZiA9IHN0cmVhbS0+cGVyZjsKIAotCUJVR19PTihzdHJlYW0gIT0gZGV2X3ByaXYtPnBl
cmYuZXhjbHVzaXZlX3N0cmVhbSk7CisJQlVHX09OKHN0cmVhbSAhPSBwZXJmLT5leGNsdXNpdmVf
c3RyZWFtKTsKIAogCS8qCiAJICogVW5zZXQgZXhjbHVzaXZlX3N0cmVhbSBmaXJzdCwgaXQgd2ls
bCBiZSBjaGVja2VkIHdoaWxlIGRpc2FibGluZwogCSAqIHRoZSBtZXRyaWMgc2V0IG9uIGdlbjgr
LgogCSAqLwotCW11dGV4X2xvY2soJmRldl9wcml2LT5kcm0uc3RydWN0X211dGV4KTsKLQlkZXZf
cHJpdi0+cGVyZi5leGNsdXNpdmVfc3RyZWFtID0gTlVMTDsKLQlkZXZfcHJpdi0+cGVyZi5vcHMu
ZGlzYWJsZV9tZXRyaWNfc2V0KHN0cmVhbSk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJt
LnN0cnVjdF9tdXRleCk7CisJbXV0ZXhfbG9jaygmcGVyZi0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRl
eCk7CisJcGVyZi0+ZXhjbHVzaXZlX3N0cmVhbSA9IE5VTEw7CisJcGVyZi0+b3BzLmRpc2FibGVf
bWV0cmljX3NldChzdHJlYW0pOworCW11dGV4X3VubG9jaygmcGVyZi0+aTkxNS0+ZHJtLnN0cnVj
dF9tdXRleCk7CiAKIAlmcmVlX29hX2J1ZmZlcihzdHJlYW0pOwogCi0JaW50ZWxfdW5jb3JlX2Zv
cmNld2FrZV9wdXQoJmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCWludGVsX3J1
bnRpbWVfcG1fcHV0KCZkZXZfcHJpdi0+cnVudGltZV9wbSwgc3RyZWFtLT53YWtlcmVmKTsKKwlp
bnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1dChzdHJlYW0tPmd0LT51bmNvcmUsIEZPUkNFV0FLRV9B
TEwpOworCWludGVsX3J1bnRpbWVfcG1fcHV0KHN0cmVhbS0+Z3QtPnVuY29yZS0+cnBtLCBzdHJl
YW0tPndha2VyZWYpOwogCiAJaWYgKHN0cmVhbS0+Y3R4KQogCQlvYV9wdXRfcmVuZGVyX2N0eF9p
ZChzdHJlYW0pOwogCi0JcHV0X29hX2NvbmZpZyhkZXZfcHJpdiwgc3RyZWFtLT5vYV9jb25maWcp
OworCXB1dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOwogCi0JaWYgKGRldl9wcml2LT5w
ZXJmLnNwdXJpb3VzX3JlcG9ydF9ycy5taXNzZWQpIHsKKwlpZiAocGVyZi0+c3B1cmlvdXNfcmVw
b3J0X3JzLm1pc3NlZCkgewogCQlEUk1fTk9URSgiJWQgc3B1cmlvdXMgT0EgcmVwb3J0IG5vdGlj
ZXMgc3VwcHJlc3NlZCBkdWUgdG8gcmF0ZWxpbWl0aW5nXG4iLAotCQkJIGRldl9wcml2LT5wZXJm
LnNwdXJpb3VzX3JlcG9ydF9ycy5taXNzZWQpOworCQkJIHBlcmYtPnNwdXJpb3VzX3JlcG9ydF9y
cy5taXNzZWQpOwogCX0KIH0KIAogc3RhdGljIHZvaWQgZ2VuN19pbml0X29hX2J1ZmZlcihzdHJ1
Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5j
b3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwogCXUzMiBndHRfb2Zmc2V0ID0gaTkxNV9nZ3R0X29m
ZnNldChzdHJlYW0tPm9hX2J1ZmZlci52bWEpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKQEAg
LTEzODAsMTMgKzEzNzUsMTQgQEAgc3RhdGljIHZvaWQgZ2VuN19pbml0X29hX2J1ZmZlcihzdHJ1
Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCS8qIFByZS1EZXZCRFc6IE9BQlVGRkVSIG11
c3QgYmUgc2V0IHdpdGggY291bnRlcnMgb2ZmLAogCSAqIGJlZm9yZSBPQVNUQVRVUzEsIGJ1dCBh
ZnRlciBPQVNUQVRVUzIKIAkgKi8KLQlJOTE1X1dSSVRFKEdFTjdfT0FTVEFUVVMyLAotCQkgICBn
dHRfb2Zmc2V0IHwgR0VON19PQVNUQVRVUzJfTUVNX1NFTEVDVF9HR1RUKTsgLyogaGVhZCAqLwor
CWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjdfT0FTVEFUVVMyLCAvKiBoZWFkICovCisJ
CQkgICBndHRfb2Zmc2V0IHwgR0VON19PQVNUQVRVUzJfTUVNX1NFTEVDVF9HR1RUKTsKIAlzdHJl
YW0tPm9hX2J1ZmZlci5oZWFkID0gZ3R0X29mZnNldDsKIAotCUk5MTVfV1JJVEUoR0VON19PQUJV
RkZFUiwgZ3R0X29mZnNldCk7CisJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VON19PQUJV
RkZFUiwgZ3R0X29mZnNldCk7CiAKLQlJOTE1X1dSSVRFKEdFTjdfT0FTVEFUVVMxLCBndHRfb2Zm
c2V0IHwgT0FCVUZGRVJfU0laRV8xNk0pOyAvKiB0YWlsICovCisJaW50ZWxfdW5jb3JlX3dyaXRl
KHVuY29yZSwgR0VON19PQVNUQVRVUzEsIC8qIHRhaWwgKi8KKwkJCSAgIGd0dF9vZmZzZXQgfCBP
QUJVRkZFUl9TSVpFXzE2TSk7CiAKIAkvKiBNYXJrIHRoYXQgd2UgbmVlZCB1cGRhdGVkIHRhaWwg
cG9pbnRlcnMgdG8gcmVhZCBmcm9tLi4uICovCiAJc3RyZWFtLT5vYV9idWZmZXIudGFpbHNbMF0u
b2Zmc2V0ID0gSU5WQUxJRF9UQUlMX1BUUjsKQEAgLTEzOTgsNyArMTM5NCw3IEBAIHN0YXRpYyB2
b2lkIGdlbjdfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkK
IAkgKiBhbHJlYWR5IHNlZW4gc2luY2UgdGhleSBjYW4ndCBiZSBjbGVhcmVkIHdoaWxlIHBlcmlv
ZGljCiAJICogc2FtcGxpbmcgaXMgZW5hYmxlZC4KIAkgKi8KLQlkZXZfcHJpdi0+cGVyZi5nZW43
X2xhdGNoZWRfb2FzdGF0dXMxID0gMDsKKwlzdHJlYW0tPnBlcmYtPmdlbjdfbGF0Y2hlZF9vYXN0
YXR1czEgPSAwOwogCiAJLyogTkI6IGFsdGhvdWdoIHRoZSBPQSBidWZmZXIgd2lsbCBpbml0aWFs
bHkgYmUgYWxsb2NhdGVkCiAJICogemVyb2VkIHZpYSBzaG1mcyAoYW5kIHNvIHRoaXMgbWVtc2V0
IGlzIHJlZHVuZGFudCB3aGVuCkBAIC0xNDIxLDE3ICsxNDE3LDE3IEBAIHN0YXRpYyB2b2lkIGdl
bjdfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAogc3Rh
dGljIHZvaWQgZ2VuOF9pbml0X29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2
X3ByaXY7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3Jl
OwogCXUzMiBndHRfb2Zmc2V0ID0gaTkxNV9nZ3R0X29mZnNldChzdHJlYW0tPm9hX2J1ZmZlci52
bWEpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKIAlzcGluX2xvY2tfaXJxc2F2ZSgmc3RyZWFt
LT5vYV9idWZmZXIucHRyX2xvY2ssIGZsYWdzKTsKIAotCUk5MTVfV1JJVEUoR0VOOF9PQVNUQVRV
UywgMCk7Ci0JSTkxNV9XUklURShHRU44X09BSEVBRFBUUiwgZ3R0X29mZnNldCk7CisJaW50ZWxf
dW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOOF9PQVNUQVRVUywgMCk7CisJaW50ZWxfdW5jb3JlX3dy
aXRlKHVuY29yZSwgR0VOOF9PQUhFQURQVFIsIGd0dF9vZmZzZXQpOwogCXN0cmVhbS0+b2FfYnVm
ZmVyLmhlYWQgPSBndHRfb2Zmc2V0OwogCi0JSTkxNV9XUklURShHRU44X09BQlVGRkVSX1VEVywg
MCk7CisJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOOF9PQUJVRkZFUl9VRFcsIDApOwog
CiAJLyoKIAkgKiBQUk0gc2F5czoKQEAgLTE0NDEsOSArMTQzNyw5IEBAIHN0YXRpYyB2b2lkIGdl
bjhfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKiAg
dG8gZW5hYmxlIHByb3BlciBmdW5jdGlvbmFsaXR5IG9mIHRoZSBvdmVyZmxvdwogCSAqICBiaXQu
IgogCSAqLwotCUk5MTVfV1JJVEUoR0VOOF9PQUJVRkZFUiwgZ3R0X29mZnNldCB8CisJaW50ZWxf
dW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOOF9PQUJVRkZFUiwgZ3R0X29mZnNldCB8CiAJCSAgIE9B
QlVGRkVSX1NJWkVfMTZNIHwgR0VOOF9PQUJVRkZFUl9NRU1fU0VMRUNUX0dHVFQpOwotCUk5MTVf
V1JJVEUoR0VOOF9PQVRBSUxQVFIsIGd0dF9vZmZzZXQgJiBHRU44X09BVEFJTFBUUl9NQVNLKTsK
KwlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3JlLCBHRU44X09BVEFJTFBUUiwgZ3R0X29mZnNldCAm
IEdFTjhfT0FUQUlMUFRSX01BU0spOwogCiAJLyogTWFyayB0aGF0IHdlIG5lZWQgdXBkYXRlZCB0
YWlsIHBvaW50ZXJzIHRvIHJlYWQgZnJvbS4uLiAqLwogCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWxz
WzBdLm9mZnNldCA9IElOVkFMSURfVEFJTF9QVFI7CkBAIC0xNDgyLDcgKzE0NzgsNiBAQCBzdGF0
aWMgdm9pZCBnZW44X2luaXRfb2FfYnVmZmVyKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0pCiBzdGF0aWMgaW50IGFsbG9jX29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAq
c3RyZWFtKQogewogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpibzsKLQlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRldl9wcml2OwogCXN0cnVjdCBpOTE1
X3ZtYSAqdm1hOwogCWludCByZXQ7CiAKQEAgLTE0OTIsNyArMTQ4Nyw3IEBAIHN0YXRpYyBpbnQg
YWxsb2Nfb2FfYnVmZmVyKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJQlVJTERf
QlVHX09OX05PVF9QT1dFUl9PRl8yKE9BX0JVRkZFUl9TSVpFKTsKIAlCVUlMRF9CVUdfT04oT0Ff
QlVGRkVSX1NJWkUgPCBTWl8xMjhLIHx8IE9BX0JVRkZFUl9TSVpFID4gU1pfMTZNKTsKIAotCWJv
ID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9zaG1lbShkZXZfcHJpdiwgT0FfQlVGRkVSX1NJWkUp
OworCWJvID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9zaG1lbShzdHJlYW0tPnBlcmYtPmk5MTUs
IE9BX0JVRkZFUl9TSVpFKTsKIAlpZiAoSVNfRVJSKGJvKSkgewogCQlEUk1fRVJST1IoIkZhaWxl
ZCB0byBhbGxvY2F0ZSBPQSBidWZmZXJcbiIpOwogCQlyZXR1cm4gUFRSX0VSUihibyk7CkBAIC0x
NTMzLDcgKzE1MjgsNyBAQCBzdGF0aWMgaW50IGFsbG9jX29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSAqc3RyZWFtKQogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGNvbmZp
Z19vYV9yZWdzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKK3N0YXRpYyB2b2lk
IGNvbmZpZ19vYV9yZWdzKHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSwKIAkJCSAgIGNvbnN0
IHN0cnVjdCBpOTE1X29hX3JlZyAqcmVncywKIAkJCSAgIHUzMiBuX3JlZ3MpCiB7CkBAIC0xNTQy
LDcgKzE1MzcsNyBAQCBzdGF0aWMgdm9pZCBjb25maWdfb2FfcmVncyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCiAJZm9yIChpID0gMDsgaSA8IG5fcmVnczsgaSsrKSB7CiAJCWNv
bnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqcmVnID0gcmVncyArIGk7CiAKLQkJSTkxNV9XUklURShy
ZWctPmFkZHIsIHJlZy0+dmFsdWUpOworCQlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3JlLCByZWct
PmFkZHIsIHJlZy0+dmFsdWUpOwogCX0KIH0KIApAQCAtMTU3NSw3ICsxNTcwLDcgQEAgc3RhdGlj
IHZvaWQgZGVsYXlfYWZ0ZXJfbXV4KHZvaWQpCiAKIHN0YXRpYyBpbnQgaHN3X2VuYWJsZV9tZXRy
aWNfc2V0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaW50ZWxf
dW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPmd0LT51bmNvcmU7CiAJY29uc3Qgc3RydWN0IGk5MTVf
b2FfY29uZmlnICpvYV9jb25maWcgPSBzdHJlYW0tPm9hX2NvbmZpZzsKIAogCS8qCkBAIC0xNTg4
LDE1ICsxNTgzLDE1IEBAIHN0YXRpYyBpbnQgaHN3X2VuYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJICogY291bnQgdGhlIGV2ZW50cyBmcm9tIG5vbi1y
ZW5kZXIgZG9tYWluLiBVbml0IGxldmVsIGNsb2NrCiAJICogZ2F0aW5nIGZvciBSQ1Mgc2hvdWxk
IGFsc28gYmUgZGlzYWJsZWQuCiAJICovCi0JSTkxNV9XUklURShHRU43X01JU0NDUENUTCwgKEk5
MTVfUkVBRChHRU43X01JU0NDUENUTCkgJgotCQkJCSAgICB+R0VON19ET1BfQ0xPQ0tfR0FURV9F
TkFCTEUpKTsKLQlJOTE1X1dSSVRFKEdFTjZfVUNHQ1RMMSwgKEk5MTVfUkVBRChHRU42X1VDR0NU
TDEpIHwKLQkJCQkgIEdFTjZfQ1NVTklUX0NMT0NLX0dBVEVfRElTQUJMRSkpOworCWludGVsX3Vu
Y29yZV9ybXcodW5jb3JlLCBHRU43X01JU0NDUENUTCwKKwkJCSBHRU43X0RPUF9DTE9DS19HQVRF
X0VOQUJMRSwgMCk7CisJaW50ZWxfdW5jb3JlX3Jtdyh1bmNvcmUsIEdFTjZfVUNHQ1RMMSwKKwkJ
CSAwLCBHRU42X0NTVU5JVF9DTE9DS19HQVRFX0RJU0FCTEUpOwogCi0JY29uZmlnX29hX3JlZ3Mo
ZGV2X3ByaXYsIG9hX2NvbmZpZy0+bXV4X3JlZ3MsIG9hX2NvbmZpZy0+bXV4X3JlZ3NfbGVuKTsK
Kwljb25maWdfb2FfcmVncyh1bmNvcmUsIG9hX2NvbmZpZy0+bXV4X3JlZ3MsIG9hX2NvbmZpZy0+
bXV4X3JlZ3NfbGVuKTsKIAlkZWxheV9hZnRlcl9tdXgoKTsKIAotCWNvbmZpZ19vYV9yZWdzKGRl
dl9wcml2LCBvYV9jb25maWctPmJfY291bnRlcl9yZWdzLAorCWNvbmZpZ19vYV9yZWdzKHVuY29y
ZSwgb2FfY29uZmlnLT5iX2NvdW50ZXJfcmVncywKIAkJICAgICAgIG9hX2NvbmZpZy0+Yl9jb3Vu
dGVyX3JlZ3NfbGVuKTsKIAogCXJldHVybiAwOwpAQCAtMTYwNCwxNSArMTU5OSwxNCBAQCBzdGF0
aWMgaW50IGhzd19lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtKQogCiBzdGF0aWMgdm9pZCBoc3dfZGlzYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1X3Bl
cmZfc3RyZWFtICpzdHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gc3RyZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJl
YW0tPmd0LT51bmNvcmU7CiAKLQlJOTE1X1dSSVRFKEdFTjZfVUNHQ1RMMSwgKEk5MTVfUkVBRChH
RU42X1VDR0NUTDEpICYKLQkJCQkgIH5HRU42X0NTVU5JVF9DTE9DS19HQVRFX0RJU0FCTEUpKTsK
LQlJOTE1X1dSSVRFKEdFTjdfTUlTQ0NQQ1RMLCAoSTkxNV9SRUFEKEdFTjdfTUlTQ0NQQ1RMKSB8
Ci0JCQkJICAgIEdFTjdfRE9QX0NMT0NLX0dBVEVfRU5BQkxFKSk7CisJaW50ZWxfdW5jb3JlX3Jt
dyh1bmNvcmUsIEdFTjZfVUNHQ1RMMSwKKwkJCSBHRU42X0NTVU5JVF9DTE9DS19HQVRFX0RJU0FC
TEUsIDApOworCWludGVsX3VuY29yZV9ybXcodW5jb3JlLCBHRU43X01JU0NDUENUTCwKKwkJCSAw
LCBHRU43X0RPUF9DTE9DS19HQVRFX0VOQUJMRSk7CiAKLQlJOTE1X1dSSVRFKEdEVF9DSElDS0VO
X0JJVFMsIChJOTE1X1JFQUQoR0RUX0NISUNLRU5fQklUUykgJgotCQkJCSAgICAgIH5HVF9OT0Ff
RU5BQkxFKSk7CisJaW50ZWxfdW5jb3JlX3Jtdyh1bmNvcmUsIEdEVF9DSElDS0VOX0JJVFMsIEdU
X05PQV9FTkFCTEUsIDApOwogfQogCiBzdGF0aWMgdTMyIG9hX2NvbmZpZ19mbGV4X3JlZyhjb25z
dCBzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZywKQEAgLTE2NDcsOSArMTY0MSw4IEBA
IHN0YXRpYyB2b2lkCiBnZW44X3VwZGF0ZV9yZWdfc3RhdGVfdW5sb2NrZWQoY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHQgKmNlLAogCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBjZS0+ZW5n
aW5lLT5pOTE1OwotCXUzMiBjdHhfb2FjdHhjdHJsID0gaTkxNS0+cGVyZi5jdHhfb2FjdHhjdHJs
X29mZnNldDsKLQl1MzIgY3R4X2ZsZXhldTAgPSBpOTE1LT5wZXJmLmN0eF9mbGV4ZXUwX29mZnNl
dDsKKwl1MzIgY3R4X29hY3R4Y3RybCA9IHN0cmVhbS0+cGVyZi0+Y3R4X29hY3R4Y3RybF9vZmZz
ZXQ7CisJdTMyIGN0eF9mbGV4ZXUwID0gc3RyZWFtLT5wZXJmLT5jdHhfZmxleGV1MF9vZmZzZXQ7
CiAJLyogVGhlIE1NSU8gb2Zmc2V0cyBmb3IgRmxleCBFVSByZWdpc3RlcnMgYXJlbid0IGNvbnRp
Z3VvdXMgKi8KIAlpOTE1X3JlZ190IGZsZXhfcmVnc1tdID0gewogCQlFVV9QRVJGX0NOVEwwLApA
QCAtMTY3Miw3ICsxNjY1LDggQEAgZ2VuOF91cGRhdGVfcmVnX3N0YXRlX3VubG9ja2VkKGNvbnN0
IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJcmVnX3N0YXRlW2N0eF9mbGV4ZXUwICsgaSAq
IDIgKyAxXSA9CiAJCQlvYV9jb25maWdfZmxleF9yZWcoc3RyZWFtLT5vYV9jb25maWcsIGZsZXhf
cmVnc1tpXSk7CiAKLQlyZWdfc3RhdGVbQ1RYX1JfUFdSX0NMS19TVEFURV0gPSBpbnRlbF9zc2V1
X21ha2VfcnBjcyhpOTE1LCAmY2UtPnNzZXUpOworCXJlZ19zdGF0ZVtDVFhfUl9QV1JfQ0xLX1NU
QVRFXSA9CisJCWludGVsX3NzZXVfbWFrZV9ycGNzKGNlLT5lbmdpbmUtPmk5MTUsICZjZS0+c3Nl
dSk7CiB9CiAKIHN0cnVjdCBmbGV4IHsKQEAgLTE4MjcsOSArMTgyMSw5IEBAIHN0YXRpYyBpbnQg
Z2VuOF9jb25maWd1cmVfY29udGV4dChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogc3Rh
dGljIGludCBnZW44X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RydWN0IGk5MTVfcGVyZl9zdHJl
YW0gKnN0cmVhbSwKIAkJCQkgICAgICAgY29uc3Qgc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9j
b25maWcpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBzdHJlYW0tPmRldl9w
cml2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gc3RyZWFtLT5wZXJmLT5pOTE1
OwogCS8qIFRoZSBNTUlPIG9mZnNldHMgZm9yIEZsZXggRVUgcmVnaXN0ZXJzIGFyZW4ndCBjb250
aWd1b3VzICovCi0JY29uc3QgdTMyIGN0eF9mbGV4ZXUwID0gaTkxNS0+cGVyZi5jdHhfZmxleGV1
MF9vZmZzZXQ7CisJY29uc3QgdTMyIGN0eF9mbGV4ZXUwID0gc3RyZWFtLT5wZXJmLT5jdHhfZmxl
eGV1MF9vZmZzZXQ7CiAjZGVmaW5lIGN0eF9mbGV4ZXVOKE4pIChjdHhfZmxleGV1MCArIDIgKiAo
TikgKyAxKQogCXN0cnVjdCBmbGV4IHJlZ3NbXSA9IHsKIAkJewpAQCAtMTgzOCw3ICsxODMyLDcg
QEAgc3RhdGljIGludCBnZW44X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSwKIAkJfSwKIAkJewogCQkJR0VOOF9PQUNUWENPTlRST0wsCi0JCQlp
OTE1LT5wZXJmLmN0eF9vYWN0eGN0cmxfb2Zmc2V0ICsgMSwKKwkJCXN0cmVhbS0+cGVyZi0+Y3R4
X29hY3R4Y3RybF9vZmZzZXQgKyAxLAogCQkJKChzdHJlYW0tPnBlcmlvZF9leHBvbmVudCA8PCBH
RU44X09BX1RJTUVSX1BFUklPRF9TSElGVCkgfAogCQkJIChzdHJlYW0tPnBlcmlvZGljID8gR0VO
OF9PQV9USU1FUl9FTkFCTEUgOiAwKSB8CiAJCQkgR0VOOF9PQV9DT1VOVEVSX1JFU1VNRSkKQEAg
LTE5MjIsNyArMTkxNiw3IEBAIHN0YXRpYyBpbnQgZ2VuOF9jb25maWd1cmVfYWxsX2NvbnRleHRz
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAKIHN0YXRpYyBpbnQgZ2VuOF9lbmFi
bGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewotCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0
IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwogCWNvbnN0IHN0cnVj
dCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnID0gc3RyZWFtLT5vYV9jb25maWc7CiAJaW50IHJl
dDsKIApAQCAtMTk0OSwxMCArMTk0MywxMCBAQCBzdGF0aWMgaW50IGdlbjhfZW5hYmxlX21ldHJp
Y19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKiBiZSByZWFkIGJhY2sg
ZnJvbSBhdXRvbWF0aWNhbGx5IHRyaWdnZXJlZCByZXBvcnRzLCBhcyBwYXJ0IG9mIHRoZQogCSAq
IFJQVF9JRCBmaWVsZC4KIAkgKi8KLQlpZiAoSVNfR0VOX1JBTkdFKGRldl9wcml2LCA5LCAxMSkp
IHsKLQkJSTkxNV9XUklURShHRU44X09BX0RFQlVHLAotCQkJICAgX01BU0tFRF9CSVRfRU5BQkxF
KEdFTjlfT0FfREVCVUdfRElTQUJMRV9DTEtfUkFUSU9fUkVQT1JUUyB8Ci0JCQkJCSAgICAgIEdF
TjlfT0FfREVCVUdfSU5DTFVERV9DTEtfUkFUSU8pKTsKKwlpZiAoSVNfR0VOX1JBTkdFKHN0cmVh
bS0+cGVyZi0+aTkxNSwgOSwgMTEpKSB7CisJCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdF
TjhfT0FfREVCVUcsCisJCQkJICAgX01BU0tFRF9CSVRfRU5BQkxFKEdFTjlfT0FfREVCVUdfRElT
QUJMRV9DTEtfUkFUSU9fUkVQT1JUUyB8CisJCQkJCQkgICAgICBHRU45X09BX0RFQlVHX0lOQ0xV
REVfQ0xLX1JBVElPKSk7CiAJfQogCiAJLyoKQEAgLTE5NjQsMTAgKzE5NTgsMTAgQEAgc3RhdGlj
IGludCBnZW44X2VuYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0pCiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCWNvbmZpZ19vYV9yZWdzKGRldl9wcml2
LCBvYV9jb25maWctPm11eF9yZWdzLCBvYV9jb25maWctPm11eF9yZWdzX2xlbik7CisJY29uZmln
X29hX3JlZ3ModW5jb3JlLCBvYV9jb25maWctPm11eF9yZWdzLCBvYV9jb25maWctPm11eF9yZWdz
X2xlbik7CiAJZGVsYXlfYWZ0ZXJfbXV4KCk7CiAKLQljb25maWdfb2FfcmVncyhkZXZfcHJpdiwg
b2FfY29uZmlnLT5iX2NvdW50ZXJfcmVncywKKwljb25maWdfb2FfcmVncyh1bmNvcmUsIG9hX2Nv
bmZpZy0+Yl9jb3VudGVyX3JlZ3MsCiAJCSAgICAgICBvYV9jb25maWctPmJfY291bnRlcl9yZWdz
X2xlbik7CiAKIAlyZXR1cm4gMDsKQEAgLTE5NzUsMzAgKzE5NjksMjggQEAgc3RhdGljIGludCBn
ZW44X2VuYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAK
IHN0YXRpYyB2b2lkIGdlbjhfZGlzYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3Ry
ZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPmd0
LT51bmNvcmU7CiAKIAkvKiBSZXNldCBhbGwgY29udGV4dHMnIHNsaWNlcy9zdWJzbGljZXMgY29u
ZmlndXJhdGlvbnMuICovCiAJZ2VuOF9jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cmVhbSwgTlVM
TCk7CiAKLQlJOTE1X1dSSVRFKEdEVF9DSElDS0VOX0JJVFMsIChJOTE1X1JFQUQoR0RUX0NISUNL
RU5fQklUUykgJgotCQkJCSAgICAgIH5HVF9OT0FfRU5BQkxFKSk7CisJaW50ZWxfdW5jb3JlX3Jt
dyh1bmNvcmUsIEdEVF9DSElDS0VOX0JJVFMsIEdUX05PQV9FTkFCTEUsIDApOwogfQogCiBzdGF0
aWMgdm9pZCBnZW4xMF9kaXNhYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0g
KnN0cmVhbSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0t
PmRldl9wcml2OworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IHN0cmVhbS0+Z3QtPnVu
Y29yZTsKIAogCS8qIFJlc2V0IGFsbCBjb250ZXh0cycgc2xpY2VzL3N1YnNsaWNlcyBjb25maWd1
cmF0aW9ucy4gKi8KIAlnZW44X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RyZWFtLCBOVUxMKTsK
IAogCS8qIE1ha2Ugc3VyZSB3ZSBkaXNhYmxlIG5vYSB0byBzYXZlIHBvd2VyLiAqLwotCUk5MTVf
V1JJVEUoUlBNX0NPTkZJRzEsCi0JCSAgIEk5MTVfUkVBRChSUE1fQ09ORklHMSkgJiB+R0VOMTBf
R1RfTk9BX0VOQUJMRSk7CisJaW50ZWxfdW5jb3JlX3Jtdyh1bmNvcmUsIFJQTV9DT05GSUcxLCBH
RU4xMF9HVF9OT0FfRU5BQkxFLCAwKTsKIH0KIAogc3RhdGljIHZvaWQgZ2VuN19vYV9lbmFibGUo
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRldl9wcml2OworCXN0cnVjdCBpbnRlbF91bmNvcmUg
KnVuY29yZSA9IHN0cmVhbS0+Z3QtPnVuY29yZTsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Y3R4ID0gc3RyZWFtLT5jdHg7CiAJdTMyIGN0eF9pZCA9IHN0cmVhbS0+c3BlY2lmaWNfY3R4X2lk
OwogCWJvb2wgcGVyaW9kaWMgPSBzdHJlYW0tPnBlcmlvZGljOwpAQCAtMjAxNiwxOSArMjAwOCwx
OSBAQCBzdGF0aWMgdm9pZCBnZW43X29hX2VuYWJsZShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAq
c3RyZWFtKQogCSAqLwogCWdlbjdfaW5pdF9vYV9idWZmZXIoc3RyZWFtKTsKIAotCUk5MTVfV1JJ
VEUoR0VON19PQUNPTlRST0wsCi0JCSAgIChjdHhfaWQgJiBHRU43X09BQ09OVFJPTF9DVFhfTUFT
SykgfAotCQkgICAocGVyaW9kX2V4cG9uZW50IDw8Ci0JCSAgICBHRU43X09BQ09OVFJPTF9USU1F
Ul9QRVJJT0RfU0hJRlQpIHwKLQkJICAgKHBlcmlvZGljID8gR0VON19PQUNPTlRST0xfVElNRVJf
RU5BQkxFIDogMCkgfAotCQkgICAocmVwb3J0X2Zvcm1hdCA8PCBHRU43X09BQ09OVFJPTF9GT1JN
QVRfU0hJRlQpIHwKLQkJICAgKGN0eCA/IEdFTjdfT0FDT05UUk9MX1BFUl9DVFhfRU5BQkxFIDog
MCkgfAotCQkgICBHRU43X09BQ09OVFJPTF9FTkFCTEUpOworCWludGVsX3VuY29yZV93cml0ZSh1
bmNvcmUsIEdFTjdfT0FDT05UUk9MLAorCQkJICAgKGN0eF9pZCAmIEdFTjdfT0FDT05UUk9MX0NU
WF9NQVNLKSB8CisJCQkgICAocGVyaW9kX2V4cG9uZW50IDw8CisJCQkgICAgR0VON19PQUNPTlRS
T0xfVElNRVJfUEVSSU9EX1NISUZUKSB8CisJCQkgICAocGVyaW9kaWMgPyBHRU43X09BQ09OVFJP
TF9USU1FUl9FTkFCTEUgOiAwKSB8CisJCQkgICAocmVwb3J0X2Zvcm1hdCA8PCBHRU43X09BQ09O
VFJPTF9GT1JNQVRfU0hJRlQpIHwKKwkJCSAgIChjdHggPyBHRU43X09BQ09OVFJPTF9QRVJfQ1RY
X0VOQUJMRSA6IDApIHwKKwkJCSAgIEdFTjdfT0FDT05UUk9MX0VOQUJMRSk7CiB9CiAKIHN0YXRp
YyB2b2lkIGdlbjhfb2FfZW5hYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7
Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFtLT5kZXZfcHJpdjsK
KwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPmd0LT51bmNvcmU7CiAJdTMy
IHJlcG9ydF9mb3JtYXQgPSBzdHJlYW0tPm9hX2J1ZmZlci5mb3JtYXQ7CiAKIAkvKgpAQCAtMjA0
Nyw5ICsyMDM5LDkgQEAgc3RhdGljIHZvaWQgZ2VuOF9vYV9lbmFibGUoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSkKIAkgKiBmaWx0ZXJpbmcgYW5kIGluc3RlYWQgZmlsdGVyIG9uIHRo
ZSBjcHUgYmFzZWQgb24gdGhlIGNvbnRleHQtaWQKIAkgKiBmaWVsZCBvZiByZXBvcnRzCiAJICov
Ci0JSTkxNV9XUklURShHRU44X09BQ09OVFJPTCwgKHJlcG9ydF9mb3JtYXQgPDwKLQkJCQkgICAg
R0VOOF9PQV9SRVBPUlRfRk9STUFUX1NISUZUKSB8Ci0JCQkJICAgR0VOOF9PQV9DT1VOVEVSX0VO
QUJMRSk7CisJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOOF9PQUNPTlRST0wsCisJCQkg
ICAocmVwb3J0X2Zvcm1hdCA8PCBHRU44X09BX1JFUE9SVF9GT1JNQVRfU0hJRlQpIHwKKwkJCSAg
IEdFTjhfT0FfQ09VTlRFUl9FTkFCTEUpOwogfQogCiAvKioKQEAgLTIwNjMsOSArMjA1NSw3IEBA
IHN0YXRpYyB2b2lkIGdlbjhfb2FfZW5hYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0pCiAgKi8KIHN0YXRpYyB2b2lkIGk5MTVfb2Ffc3RyZWFtX2VuYWJsZShzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSAqc3RyZWFtKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHN0cmVhbS0+ZGV2X3ByaXY7Ci0KLQlkZXZfcHJpdi0+cGVyZi5vcHMub2FfZW5hYmxlKHN0
cmVhbSk7CisJc3RyZWFtLT5wZXJmLT5vcHMub2FfZW5hYmxlKHN0cmVhbSk7CiAKIAlpZiAoc3Ry
ZWFtLT5wZXJpb2RpYykKIAkJaHJ0aW1lcl9zdGFydCgmc3RyZWFtLT5wb2xsX2NoZWNrX3RpbWVy
LApAQCAtMjA3NSw3ICsyMDY1LDcgQEAgc3RhdGljIHZvaWQgaTkxNV9vYV9zdHJlYW1fZW5hYmxl
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAKIHN0YXRpYyB2b2lkIGdlbjdfb2Ff
ZGlzYWJsZShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewotCXN0cnVjdCBpbnRl
bF91bmNvcmUgKnVuY29yZSA9ICZzdHJlYW0tPmRldl9wcml2LT51bmNvcmU7CisJc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT5ndC0+dW5jb3JlOwogCiAJaW50ZWxfdW5jb3Jl
X3dyaXRlKHVuY29yZSwgR0VON19PQUNPTlRST0wsIDApOwogCWlmIChpbnRlbF93YWl0X2Zvcl9y
ZWdpc3Rlcih1bmNvcmUsCkBAIC0yMDg2LDcgKzIwNzYsNyBAQCBzdGF0aWMgdm9pZCBnZW43X29h
X2Rpc2FibGUoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAogc3RhdGljIHZvaWQg
Z2VuOF9vYV9kaXNhYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7Ci0Jc3Ry
dWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJnN0cmVhbS0+ZGV2X3ByaXYtPnVuY29yZTsKKwlz
dHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPmd0LT51bmNvcmU7CiAKIAlpbnRl
bF91bmNvcmVfd3JpdGUodW5jb3JlLCBHRU44X09BQ09OVFJPTCwgMCk7CiAJaWYgKGludGVsX3dh
aXRfZm9yX3JlZ2lzdGVyKHVuY29yZSwKQEAgLTIxMDUsOSArMjA5NSw3IEBAIHN0YXRpYyB2b2lk
IGdlbjhfb2FfZGlzYWJsZShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogICovCiBz
dGF0aWMgdm9pZCBpOTE1X29hX3N0cmVhbV9kaXNhYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
ICpzdHJlYW0pCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFt
LT5kZXZfcHJpdjsKLQotCWRldl9wcml2LT5wZXJmLm9wcy5vYV9kaXNhYmxlKHN0cmVhbSk7CisJ
c3RyZWFtLT5wZXJmLT5vcHMub2FfZGlzYWJsZShzdHJlYW0pOwogCiAJaWYgKHN0cmVhbS0+cGVy
aW9kaWMpCiAJCWhydGltZXJfY2FuY2VsKCZzdHJlYW0tPnBvbGxfY2hlY2tfdGltZXIpOwpAQCAt
MjE0NCw3ICsyMTMyLDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCQkgICAgICAgc3RydWN0IGRybV9pOTE1X3BlcmZf
b3Blbl9wYXJhbSAqcGFyYW0sCiAJCQkgICAgICAgc3RydWN0IHBlcmZfb3Blbl9wcm9wZXJ0aWVz
ICpwcm9wcykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0t
PmRldl9wcml2OworCXN0cnVjdCBpOTE1X3BlcmYgKnBlcmYgPSBzdHJlYW0tPnBlcmY7CiAJaW50
IGZvcm1hdF9zaXplOwogCWludCByZXQ7CiAKQEAgLTIxNTIsNyArMjE0MCw3IEBAIHN0YXRpYyBp
bnQgaTkxNV9vYV9zdHJlYW1faW5pdChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAog
CSAqIHJlYXNvbiB0aGVuIGRvbid0IGxldCB1c2Vyc3BhY2UgdHJ5IHRoZWlyIGx1Y2sgd2l0aCBj
b25maWcKIAkgKiBJRHMKIAkgKi8KLQlpZiAoIWRldl9wcml2LT5wZXJmLm1ldHJpY3Nfa29iaikg
eworCWlmICghcGVyZi0+bWV0cmljc19rb2JqKSB7CiAJCURSTV9ERUJVRygiT0EgbWV0cmljcyB3
ZXJlbid0IGFkdmVydGlzZWQgdmlhIHN5c2ZzXG4iKTsKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQpA
QCAtMjE2Miw3ICsyMTUwLDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVj
dCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCXJldHVybiAtRUlOVkFMOwogCX0KIAotCWlm
ICghZGV2X3ByaXYtPnBlcmYub3BzLmVuYWJsZV9tZXRyaWNfc2V0KSB7CisJaWYgKCFwZXJmLT5v
cHMuZW5hYmxlX21ldHJpY19zZXQpIHsKIAkJRFJNX0RFQlVHKCJPQSB1bml0IG5vdCBzdXBwb3J0
ZWRcbiIpOwogCQlyZXR1cm4gLUVOT0RFVjsKIAl9CkBAIC0yMTcxLDcgKzIxNTksNyBAQCBzdGF0
aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSwKIAkgKiBjb3VudGVyIHJlcG9ydHMgYW5kIG1hcnNoYWwgdG8gdGhlIGFwcHJvcHJpYXRlIGNs
aWVudAogCSAqIHdlIGN1cnJlbnRseSBvbmx5IGFsbG93IGV4Y2x1c2l2ZSBhY2Nlc3MKIAkgKi8K
LQlpZiAoZGV2X3ByaXYtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbSkgeworCWlmIChwZXJmLT5leGNs
dXNpdmVfc3RyZWFtKSB7CiAJCURSTV9ERUJVRygiT0EgdW5pdCBhbHJlYWR5IGluIHVzZVxuIik7
CiAJCXJldHVybiAtRUJVU1k7CiAJfQpAQCAtMjE4Myw3ICsyMTcxLDcgQEAgc3RhdGljIGludCBp
OTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAKIAlz
dHJlYW0tPnNhbXBsZV9zaXplID0gc2l6ZW9mKHN0cnVjdCBkcm1faTkxNV9wZXJmX3JlY29yZF9o
ZWFkZXIpOwogCi0JZm9ybWF0X3NpemUgPSBkZXZfcHJpdi0+cGVyZi5vYV9mb3JtYXRzW3Byb3Bz
LT5vYV9mb3JtYXRdLnNpemU7CisJZm9ybWF0X3NpemUgPSBwZXJmLT5vYV9mb3JtYXRzW3Byb3Bz
LT5vYV9mb3JtYXRdLnNpemU7CiAKIAlzdHJlYW0tPnNhbXBsZV9mbGFncyB8PSBTQU1QTEVfT0Ff
UkVQT1JUOwogCXN0cmVhbS0+c2FtcGxlX3NpemUgKz0gZm9ybWF0X3NpemU7CkBAIC0yMTkzLDcg
KzIxODEsNyBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSwKIAkJcmV0dXJuIC1FSU5WQUw7CiAKIAlzdHJlYW0tPm9hX2J1ZmZl
ci5mb3JtYXQgPQotCQlkZXZfcHJpdi0+cGVyZi5vYV9mb3JtYXRzW3Byb3BzLT5vYV9mb3JtYXRd
LmZvcm1hdDsKKwkJcGVyZi0+b2FfZm9ybWF0c1twcm9wcy0+b2FfZm9ybWF0XS5mb3JtYXQ7CiAK
IAlzdHJlYW0tPnBlcmlvZGljID0gcHJvcHMtPm9hX3BlcmlvZGljOwogCWlmIChzdHJlYW0tPnBl
cmlvZGljKQpAQCAtMjIwNyw3ICsyMTk1LDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9p
bml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCX0KIAl9CiAKLQlyZXQgPSBn
ZXRfb2FfY29uZmlnKGRldl9wcml2LCBwcm9wcy0+bWV0cmljc19zZXQsICZzdHJlYW0tPm9hX2Nv
bmZpZyk7CisJcmV0ID0gZ2V0X29hX2NvbmZpZyhwZXJmLCBwcm9wcy0+bWV0cmljc19zZXQsICZz
dHJlYW0tPm9hX2NvbmZpZyk7CiAJaWYgKHJldCkgewogCQlEUk1fREVCVUcoIkludmFsaWQgT0Eg
Y29uZmlnIGlkPSVpXG4iLCBwcm9wcy0+bWV0cmljc19zZXQpOwogCQlnb3RvIGVycl9jb25maWc7
CkBAIC0yMjI1LDI3ICsyMjEzLDI3IEBAIHN0YXRpYyBpbnQgaTkxNV9vYV9zdHJlYW1faW5pdChz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCSAqICAgSW4gb3VyIGNhc2Ugd2UgYXJl
IGV4cGVjdGluZyB0aGF0IHRha2luZyBwbSArIEZPUkNFV0FLRQogCSAqICAgcmVmZXJlbmNlcyB3
aWxsIGVmZmVjdGl2ZWx5IGRpc2FibGUgUkM2LgogCSAqLwotCXN0cmVhbS0+d2FrZXJlZiA9IGlu
dGVsX3J1bnRpbWVfcG1fZ2V0KCZkZXZfcHJpdi0+cnVudGltZV9wbSk7Ci0JaW50ZWxfdW5jb3Jl
X2ZvcmNld2FrZV9nZXQoJmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOworCXN0cmVh
bS0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KHN0cmVhbS0+Z3QtPnVuY29yZS0+cnBt
KTsKKwlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldChzdHJlYW0tPmd0LT51bmNvcmUsIEZPUkNF
V0FLRV9BTEwpOwogCiAJcmV0ID0gYWxsb2Nfb2FfYnVmZmVyKHN0cmVhbSk7CiAJaWYgKHJldCkK
IAkJZ290byBlcnJfb2FfYnVmX2FsbG9jOwogCi0JcmV0ID0gaTkxNV9tdXRleF9sb2NrX2ludGVy
cnVwdGlibGUoJmRldl9wcml2LT5kcm0pOworCXJldCA9IGk5MTVfbXV0ZXhfbG9ja19pbnRlcnJ1
cHRpYmxlKCZzdHJlYW0tPmd0LT5pOTE1LT5kcm0pOwogCWlmIChyZXQpCiAJCWdvdG8gZXJyX2xv
Y2s7CiAKIAlzdHJlYW0tPm9wcyA9ICZpOTE1X29hX3N0cmVhbV9vcHM7Ci0JZGV2X3ByaXYtPnBl
cmYuZXhjbHVzaXZlX3N0cmVhbSA9IHN0cmVhbTsKKwlwZXJmLT5leGNsdXNpdmVfc3RyZWFtID0g
c3RyZWFtOwogCi0JcmV0ID0gZGV2X3ByaXYtPnBlcmYub3BzLmVuYWJsZV9tZXRyaWNfc2V0KHN0
cmVhbSk7CisJcmV0ID0gcGVyZi0+b3BzLmVuYWJsZV9tZXRyaWNfc2V0KHN0cmVhbSk7CiAJaWYg
KHJldCkgewogCQlEUk1fREVCVUcoIlVuYWJsZSB0byBlbmFibGUgbWV0cmljIHNldFxuIik7CiAJ
CWdvdG8gZXJyX2VuYWJsZTsKIAl9CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5kcm0uc3Ry
dWN0X211dGV4KTsKKwltdXRleF91bmxvY2soJnN0cmVhbS0+Z3QtPmk5MTUtPmRybS5zdHJ1Y3Rf
bXV0ZXgpOwogCiAJaHJ0aW1lcl9pbml0KCZzdHJlYW0tPnBvbGxfY2hlY2tfdGltZXIsCiAJCSAg
ICAgQ0xPQ0tfTU9OT1RPTklDLCBIUlRJTUVSX01PREVfUkVMKTsKQEAgLTIyNTYsMTggKzIyNDQs
MTggQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0sCiAJcmV0dXJuIDA7CiAKIGVycl9lbmFibGU6Ci0JZGV2X3ByaXYtPnBlcmYu
ZXhjbHVzaXZlX3N0cmVhbSA9IE5VTEw7Ci0JZGV2X3ByaXYtPnBlcmYub3BzLmRpc2FibGVfbWV0
cmljX3NldChzdHJlYW0pOwotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0
ZXgpOworCXBlcmYtPmV4Y2x1c2l2ZV9zdHJlYW0gPSBOVUxMOworCXBlcmYtPm9wcy5kaXNhYmxl
X21ldHJpY19zZXQoc3RyZWFtKTsKKwltdXRleF91bmxvY2soJnN0cmVhbS0+Z3QtPmk5MTUtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOwogCiBlcnJfbG9jazoKIAlmcmVlX29hX2J1ZmZlcihzdHJlYW0pOwog
CiBlcnJfb2FfYnVmX2FsbG9jOgotCXB1dF9vYV9jb25maWcoZGV2X3ByaXYsIHN0cmVhbS0+b2Ff
Y29uZmlnKTsKKwlwdXRfb2FfY29uZmlnKHN0cmVhbS0+b2FfY29uZmlnKTsKIAotCWludGVsX3Vu
Y29yZV9mb3JjZXdha2VfcHV0KCZkZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKLQlp
bnRlbF9ydW50aW1lX3BtX3B1dCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0sIHN0cmVhbS0+d2FrZXJl
Zik7CisJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQoc3RyZWFtLT5ndC0+dW5jb3JlLCBGT1JD
RVdBS0VfQUxMKTsKKwlpbnRlbF9ydW50aW1lX3BtX3B1dChzdHJlYW0tPmd0LT51bmNvcmUtPnJw
bSwgc3RyZWFtLT53YWtlcmVmKTsKIAogZXJyX2NvbmZpZzoKIAlpZiAoc3RyZWFtLT5jdHgpCkBA
IC0yMzU5LDcgKzIzNDcsNyBAQCBzdGF0aWMgc3NpemVfdCBpOTE1X3BlcmZfcmVhZChzdHJ1Y3Qg
ZmlsZSAqZmlsZSwKIAkJCSAgICAgIGxvZmZfdCAqcHBvcykKIHsKIAlzdHJ1Y3QgaTkxNV9wZXJm
X3N0cmVhbSAqc3RyZWFtID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwotCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGk5MTVfcGVyZiAq
cGVyZiA9IHN0cmVhbS0+cGVyZjsKIAlzc2l6ZV90IHJldDsKIAogCS8qIFRvIGVuc3VyZSBpdCdz
IGhhbmRsZWQgY29uc2lzdGVudGx5IHdlIHNpbXBseSB0cmVhdCBhbGwgcmVhZHMgb2YgYQpAQCAt
MjM4MiwxNSArMjM3MCwxNSBAQCBzdGF0aWMgc3NpemVfdCBpOTE1X3BlcmZfcmVhZChzdHJ1Y3Qg
ZmlsZSAqZmlsZSwKIAkJCWlmIChyZXQpCiAJCQkJcmV0dXJuIHJldDsKIAotCQkJbXV0ZXhfbG9j
aygmZGV2X3ByaXYtPnBlcmYubG9jayk7CisJCQltdXRleF9sb2NrKCZwZXJmLT5sb2NrKTsKIAkJ
CXJldCA9IGk5MTVfcGVyZl9yZWFkX2xvY2tlZChzdHJlYW0sIGZpbGUsCiAJCQkJCQkgICAgYnVm
LCBjb3VudCwgcHBvcyk7Ci0JCQltdXRleF91bmxvY2soJmRldl9wcml2LT5wZXJmLmxvY2spOwor
CQkJbXV0ZXhfdW5sb2NrKCZwZXJmLT5sb2NrKTsKIAkJfSB3aGlsZSAocmV0ID09IC1FQUdBSU4p
OwogCX0gZWxzZSB7Ci0JCW11dGV4X2xvY2soJmRldl9wcml2LT5wZXJmLmxvY2spOworCQltdXRl
eF9sb2NrKCZwZXJmLT5sb2NrKTsKIAkJcmV0ID0gaTkxNV9wZXJmX3JlYWRfbG9ja2VkKHN0cmVh
bSwgZmlsZSwgYnVmLCBjb3VudCwgcHBvcyk7Ci0JCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBl
cmYubG9jayk7CisJCW11dGV4X3VubG9jaygmcGVyZi0+bG9jayk7CiAJfQogCiAJLyogV2UgYWxs
b3cgdGhlIHBvbGwgY2hlY2tpbmcgdG8gc29tZXRpbWVzIHJlcG9ydCBmYWxzZSBwb3NpdGl2ZSBF
UE9MTElOCkBAIC0yNDI4LDcgKzI0MTYsNiBAQCBzdGF0aWMgZW51bSBocnRpbWVyX3Jlc3RhcnQg
b2FfcG9sbF9jaGVja190aW1lcl9jYihzdHJ1Y3QgaHJ0aW1lciAqaHJ0aW1lcikKIAogLyoqCiAg
KiBpOTE1X3BlcmZfcG9sbF9sb2NrZWQgLSBwb2xsX3dhaXQoKSB3aXRoIGEgc3VpdGFibGUgd2Fp
dCBxdWV1ZSBmb3Igc3RyZWFtCi0gKiBAZGV2X3ByaXY6IGk5MTUgZGV2aWNlIGluc3RhbmNlCiAg
KiBAc3RyZWFtOiBBbiBpOTE1IHBlcmYgc3RyZWFtCiAgKiBAZmlsZTogQW4gaTkxNSBwZXJmIHN0
cmVhbSBmaWxlCiAgKiBAd2FpdDogcG9sbCgpIHN0YXRlIHRhYmxlCkBAIC0yNDM3LDE1ICsyNDI0
LDE0IEBAIHN0YXRpYyBlbnVtIGhydGltZXJfcmVzdGFydCBvYV9wb2xsX2NoZWNrX3RpbWVyX2Ni
KHN0cnVjdCBocnRpbWVyICpocnRpbWVyKQogICogJmk5MTVfcGVyZl9zdHJlYW1fb3BzLT5wb2xs
X3dhaXQgdG8gY2FsbCBwb2xsX3dhaXQoKSB3aXRoIGEgd2FpdCBxdWV1ZSB0aGF0CiAgKiB3aWxs
IGJlIHdva2VuIGZvciBuZXcgc3RyZWFtIGRhdGEuCiAgKgotICogTm90ZTogVGhlICZkcm1faTkx
NV9wcml2YXRlLT5wZXJmLmxvY2sgbXV0ZXggaGFzIGJlZW4gdGFrZW4gdG8gc2VyaWFsaXplCisg
KiBOb3RlOiBUaGUgJnBlcmYtPmxvY2sgbXV0ZXggaGFzIGJlZW4gdGFrZW4gdG8gc2VyaWFsaXpl
CiAgKiB3aXRoIGFueSBub24tZmlsZS1vcGVyYXRpb24gZHJpdmVyIGhvb2tzLgogICoKICAqIFJl
dHVybnM6IGFueSBwb2xsIGV2ZW50cyB0aGF0IGFyZSByZWFkeSB3aXRob3V0IHNsZWVwaW5nCiAg
Ki8KLXN0YXRpYyBfX3BvbGxfdCBpOTE1X3BlcmZfcG9sbF9sb2NrZWQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCQkgIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0sCi0JCQkJCSAgc3RydWN0IGZpbGUgKmZpbGUsCi0JCQkJCSAgcG9sbF90YWJsZSAqd2FpdCkK
K3N0YXRpYyBfX3BvbGxfdCBpOTE1X3BlcmZfcG9sbF9sb2NrZWQoc3RydWN0IGk5MTVfcGVyZl9z
dHJlYW0gKnN0cmVhbSwKKwkJCQkgICAgICBzdHJ1Y3QgZmlsZSAqZmlsZSwKKwkJCQkgICAgICBw
b2xsX3RhYmxlICp3YWl0KQogewogCV9fcG9sbF90IGV2ZW50cyA9IDA7CiAKQEAgLTI0NzksMTIg
KzI0NjUsMTIgQEAgc3RhdGljIF9fcG9sbF90IGk5MTVfcGVyZl9wb2xsX2xvY2tlZChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiBzdGF0aWMgX19wb2xsX3QgaTkxNV9wZXJmX3Bv
bGwoc3RydWN0IGZpbGUgKmZpbGUsIHBvbGxfdGFibGUgKndhaXQpCiB7CiAJc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gKnN0cmVhbSA9IGZpbGUtPnByaXZhdGVfZGF0YTsKLQlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRldl9wcml2OworCXN0cnVjdCBpOTE1X3Bl
cmYgKnBlcmYgPSBzdHJlYW0tPnBlcmY7CiAJX19wb2xsX3QgcmV0OwogCi0JbXV0ZXhfbG9jaygm
ZGV2X3ByaXYtPnBlcmYubG9jayk7Ci0JcmV0ID0gaTkxNV9wZXJmX3BvbGxfbG9ja2VkKGRldl9w
cml2LCBzdHJlYW0sIGZpbGUsIHdhaXQpOwotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBlcmYu
bG9jayk7CisJbXV0ZXhfbG9jaygmcGVyZi0+bG9jayk7CisJcmV0ID0gaTkxNV9wZXJmX3BvbGxf
bG9ja2VkKHN0cmVhbSwgZmlsZSwgd2FpdCk7CisJbXV0ZXhfdW5sb2NrKCZwZXJmLT5sb2NrKTsK
IAogCXJldHVybiByZXQ7CiB9CkBAIC0yNTQzLDcgKzI1MjksNyBAQCBzdGF0aWMgdm9pZCBpOTE1
X3BlcmZfZGlzYWJsZV9sb2NrZWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKICAq
IEBjbWQ6IHRoZSBpb2N0bCByZXF1ZXN0CiAgKiBAYXJnOiB0aGUgaW9jdGwgZGF0YQogICoKLSAq
IE5vdGU6IFRoZSAmZHJtX2k5MTVfcHJpdmF0ZS0+cGVyZi5sb2NrIG11dGV4IGhhcyBiZWVuIHRh
a2VuIHRvIHNlcmlhbGl6ZQorICogTm90ZTogVGhlICZwZXJmLT5sb2NrIG11dGV4IGhhcyBiZWVu
IHRha2VuIHRvIHNlcmlhbGl6ZQogICogd2l0aCBhbnkgbm9uLWZpbGUtb3BlcmF0aW9uIGRyaXZl
ciBob29rcy4KICAqCiAgKiBSZXR1cm5zOiB6ZXJvIG9uIHN1Y2Nlc3Mgb3IgYSBuZWdhdGl2ZSBl
cnJvciBjb2RlLiBSZXR1cm5zIC1FSU5WQUwgZm9yCkBAIC0yNTgxLDEyICsyNTY3LDEyIEBAIHN0
YXRpYyBsb25nIGk5MTVfcGVyZl9pb2N0bChzdHJ1Y3QgZmlsZSAqZmlsZSwKIAkJCSAgICB1bnNp
Z25lZCBsb25nIGFyZykKIHsKIAlzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtID0gZmls
ZS0+cHJpdmF0ZV9kYXRhOwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0
cmVhbS0+ZGV2X3ByaXY7CisJc3RydWN0IGk5MTVfcGVyZiAqcGVyZiA9IHN0cmVhbS0+cGVyZjsK
IAlsb25nIHJldDsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wZXJmLmxvY2spOworCW11dGV4
X2xvY2soJnBlcmYtPmxvY2spOwogCXJldCA9IGk5MTVfcGVyZl9pb2N0bF9sb2NrZWQoc3RyZWFt
LCBjbWQsIGFyZyk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5sb2NrKTsKKwltdXRl
eF91bmxvY2soJnBlcmYtPmxvY2spOwogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTI1OTgsNyArMjU4
NCw3IEBAIHN0YXRpYyBsb25nIGk5MTVfcGVyZl9pb2N0bChzdHJ1Y3QgZmlsZSAqZmlsZSwKICAq
IEZyZWVzIGFsbCByZXNvdXJjZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBnaXZlbiBpOTE1IHBlcmYg
QHN0cmVhbSwgZGlzYWJsaW5nCiAgKiBhbnkgYXNzb2NpYXRlZCBkYXRhIGNhcHR1cmUgaW4gdGhl
IHByb2Nlc3MuCiAgKgotICogTm90ZTogVGhlICZkcm1faTkxNV9wcml2YXRlLT5wZXJmLmxvY2sg
bXV0ZXggaGFzIGJlZW4gdGFrZW4gdG8gc2VyaWFsaXplCisgKiBOb3RlOiBUaGUgJnBlcmYtPmxv
Y2sgbXV0ZXggaGFzIGJlZW4gdGFrZW4gdG8gc2VyaWFsaXplCiAgKiB3aXRoIGFueSBub24tZmls
ZS1vcGVyYXRpb24gZHJpdmVyIGhvb2tzLgogICovCiBzdGF0aWMgdm9pZCBpOTE1X3BlcmZfZGVz
dHJveV9sb2NrZWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKQEAgLTI2MzEsMTQg
KzI2MTcsMTQgQEAgc3RhdGljIHZvaWQgaTkxNV9wZXJmX2Rlc3Ryb3lfbG9ja2VkKHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiBzdGF0aWMgaW50IGk5MTVfcGVyZl9yZWxlYXNlKHN0
cnVjdCBpbm9kZSAqaW5vZGUsIHN0cnVjdCBmaWxlICpmaWxlKQogewogCXN0cnVjdCBpOTE1X3Bl
cmZfc3RyZWFtICpzdHJlYW0gPSBmaWxlLT5wcml2YXRlX2RhdGE7Ci0Jc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gc3RyZWFtLT5kZXZfcHJpdjsKKwlzdHJ1Y3QgaTkxNV9wZXJm
ICpwZXJmID0gc3RyZWFtLT5wZXJmOwogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBlcmYubG9j
ayk7CisJbXV0ZXhfbG9jaygmcGVyZi0+bG9jayk7CiAJaTkxNV9wZXJmX2Rlc3Ryb3lfbG9ja2Vk
KHN0cmVhbSk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5sb2NrKTsKKwltdXRleF91
bmxvY2soJnBlcmYtPmxvY2spOwogCiAJLyogUmVsZWFzZSB0aGUgcmVmZXJlbmNlIHRoZSBwZXJm
IHN0cmVhbSBrZXB0IG9uIHRoZSBkcml2ZXIuICovCi0JZHJtX2Rldl9wdXQoJmRldl9wcml2LT5k
cm0pOworCWRybV9kZXZfcHV0KCZwZXJmLT5pOTE1LT5kcm0pOwogCiAJcmV0dXJuIDA7CiB9CkBA
IC0yNjYwLDcgKzI2NDYsNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBm
b3BzID0gewogCiAvKioKICAqIGk5MTVfcGVyZl9vcGVuX2lvY3RsX2xvY2tlZCAtIERSTSBpb2N0
bCgpIGZvciB1c2Vyc3BhY2UgdG8gb3BlbiBhIHN0cmVhbSBGRAotICogQGRldl9wcml2OiBpOTE1
IGRldmljZSBpbnN0YW5jZQorICogQHBlcmY6IGk5MTUgcGVyZiBpbnN0YW5jZQogICogQHBhcmFt
OiBUaGUgb3BlbiBwYXJhbWV0ZXJzIHBhc3NlZCB0byAnRFJNX0k5MTVfUEVSRl9PUEVOYAogICog
QHByb3BzOiBpbmRpdmlkdWFsbHkgdmFsaWRhdGVkIHU2NCBwcm9wZXJ0eSB2YWx1ZSBwYWlycwog
ICogQGZpbGU6IGRybSBmaWxlCkBAIC0yNjY4LDcgKzI2NTQsNyBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IGZpbGVfb3BlcmF0aW9ucyBmb3BzID0gewogICogU2VlIGk5MTVfcGVyZl9pb2N0bF9vcGVu
KCkgZm9yIGludGVyZmFjZSBkZXRhaWxzLgogICoKICAqIEltcGxlbWVudHMgZnVydGhlciBzdHJl
YW0gY29uZmlnIHZhbGlkYXRpb24gYW5kIHN0cmVhbSBpbml0aWFsaXphdGlvbiBvbgotICogYmVo
YWxmIG9mIGk5MTVfcGVyZl9vcGVuX2lvY3RsKCkgd2l0aCB0aGUgJmRybV9pOTE1X3ByaXZhdGUt
PnBlcmYubG9jayBtdXRleAorICogYmVoYWxmIG9mIGk5MTVfcGVyZl9vcGVuX2lvY3RsKCkgd2l0
aCB0aGUgJnBlcmYtPmxvY2sgbXV0ZXgKICAqIHRha2VuIHRvIHNlcmlhbGl6ZSB3aXRoIGFueSBu
b24tZmlsZS1vcGVyYXRpb24gZHJpdmVyIGhvb2tzLgogICoKICAqIE5vdGU6IGF0IHRoaXMgcG9p
bnQgdGhlIEBwcm9wcyBoYXZlIG9ubHkgYmVlbiB2YWxpZGF0ZWQgaW4gaXNvbGF0aW9uIGFuZApA
QCAtMjY4Myw3ICsyNjY5LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMg
Zm9wcyA9IHsKICAqIFJldHVybnM6IHplcm8gb24gc3VjY2VzcyBvciBhIG5lZ2F0aXZlIGVycm9y
IGNvZGUuCiAgKi8KIHN0YXRpYyBpbnQKLWk5MTVfcGVyZl9vcGVuX2lvY3RsX2xvY2tlZChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCitpOTE1X3BlcmZfb3Blbl9pb2N0bF9sb2Nr
ZWQoc3RydWN0IGk5MTVfcGVyZiAqcGVyZiwKIAkJCSAgICBzdHJ1Y3QgZHJtX2k5MTVfcGVyZl9v
cGVuX3BhcmFtICpwYXJhbSwKIAkJCSAgICBzdHJ1Y3QgcGVyZl9vcGVuX3Byb3BlcnRpZXMgKnBy
b3BzLAogCQkJICAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKQEAgLTI3MjIsNyArMjcwOCw3IEBA
IGk5MTVfcGVyZl9vcGVuX2lvY3RsX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJICogTUlfUkVQT1JUX1BFUkZfQ09VTlQgY29tbWFuZHMgYW5kIHNvIGNvbnNpZGVy
IGl0IGEgcHJpdmlsZWdlZCBvcCB0bwogCSAqIGVuYWJsZSB0aGUgT0EgdW5pdCBieSBkZWZhdWx0
LgogCSAqLwotCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSAmJiBzcGVjaWZpY19jdHgpCisJaWYg
KElTX0hBU1dFTEwocGVyZi0+aTkxNSkgJiYgc3BlY2lmaWNfY3R4KQogCQlwcml2aWxlZ2VkX29w
ID0gZmFsc2U7CiAKIAkvKiBTaW1pbGFyIHRvIHBlcmYncyBrZXJuZWwucGVyZl9wYXJhbm9pZF9j
cHUgc3lzY3RsIG9wdGlvbgpAQCAtMjc0Myw3ICsyNzI5LDggQEAgaTkxNV9wZXJmX29wZW5faW9j
dGxfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJZ290byBlcnJf
Y3R4OwogCX0KIAotCXN0cmVhbS0+ZGV2X3ByaXYgPSBkZXZfcHJpdjsKKwlzdHJlYW0tPnBlcmYg
PSBwZXJmOworCXN0cmVhbS0+Z3QgPSAmcGVyZi0+aTkxNS0+Z3Q7CiAJc3RyZWFtLT5jdHggPSBz
cGVjaWZpY19jdHg7CiAKIAlyZXQgPSBpOTE1X29hX3N0cmVhbV9pbml0KHN0cmVhbSwgcGFyYW0s
IHByb3BzKTsKQEAgLTI3NTksNyArMjc0Niw3IEBAIGk5MTVfcGVyZl9vcGVuX2lvY3RsX2xvY2tl
ZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCWdvdG8gZXJyX2ZsYWdzOwog
CX0KIAotCWxpc3RfYWRkKCZzdHJlYW0tPmxpbmssICZkZXZfcHJpdi0+cGVyZi5zdHJlYW1zKTsK
KwlsaXN0X2FkZCgmc3RyZWFtLT5saW5rLCAmcGVyZi0+c3RyZWFtcyk7CiAKIAlpZiAocGFyYW0t
PmZsYWdzICYgSTkxNV9QRVJGX0ZMQUdfRkRfQ0xPRVhFQykKIAkJZl9mbGFncyB8PSBPX0NMT0VY
RUM7CkBAIC0yNzc4LDcgKzI3NjUsNyBAQCBpOTE1X3BlcmZfb3Blbl9pb2N0bF9sb2NrZWQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCS8qIFRha2UgYSByZWZlcmVuY2Ugb24g
dGhlIGRyaXZlciB0aGF0IHdpbGwgYmUga2VwdCB3aXRoIHN0cmVhbV9mZAogCSAqIHVudGlsIGl0
cyByZWxlYXNlLgogCSAqLwotCWRybV9kZXZfZ2V0KCZkZXZfcHJpdi0+ZHJtKTsKKwlkcm1fZGV2
X2dldCgmcGVyZi0+aTkxNS0+ZHJtKTsKIAogCXJldHVybiBzdHJlYW1fZmQ7CiAKQEAgLTI3OTYs
MTUgKzI3ODMsMTUgQEAgaTkxNV9wZXJmX29wZW5faW9jdGxfbG9ja2VkKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdTY0IG9hX2V4
cG9uZW50X3RvX25zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IGV4cG9u
ZW50KQorc3RhdGljIHU2NCBvYV9leHBvbmVudF90b19ucyhzdHJ1Y3QgaTkxNV9wZXJmICpwZXJm
LCBpbnQgZXhwb25lbnQpCiB7CiAJcmV0dXJuIGRpdjY0X3U2NCgxMDAwMDAwMDAwVUxMICogKDJV
TEwgPDwgZXhwb25lbnQpLAotCQkJIDEwMDBVTEwgKiBSVU5USU1FX0lORk8oZGV2X3ByaXYpLT5j
c190aW1lc3RhbXBfZnJlcXVlbmN5X2toeik7CisJCQkgMTAwMFVMTCAqIFJVTlRJTUVfSU5GTyhw
ZXJmLT5pOTE1KS0+Y3NfdGltZXN0YW1wX2ZyZXF1ZW5jeV9raHopOwogfQogCiAvKioKICAqIHJl
YWRfcHJvcGVydGllc191bmxvY2tlZCAtIHZhbGlkYXRlICsgY29weSB1c2Vyc3BhY2Ugc3RyZWFt
IG9wZW4gcHJvcGVydGllcwotICogQGRldl9wcml2OiBpOTE1IGRldmljZSBpbnN0YW5jZQorICog
QHBlcmY6IGk5MTUgcGVyZiBpbnN0YW5jZQogICogQHVwcm9wczogVGhlIGFycmF5IG9mIHU2NCBr
ZXkgdmFsdWUgcGFpcnMgZ2l2ZW4gYnkgdXNlcnNwYWNlCiAgKiBAbl9wcm9wczogVGhlIG51bWJl
ciBvZiBrZXkgdmFsdWUgcGFpcnMgZXhwZWN0ZWQgaW4gQHVwcm9wcwogICogQHByb3BzOiBUaGUg
c3RyZWFtIGNvbmZpZ3VyYXRpb24gYnVpbHQgdXAgd2hpbGUgdmFsaWRhdGluZyBwcm9wZXJ0aWVz
CkBAIC0yODE3LDcgKzI4MDQsNyBAQCBzdGF0aWMgdTY0IG9hX2V4cG9uZW50X3RvX25zKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IGV4cG9uZW50KQogICogd2Ugc2hvdWxk
bid0IHZhbGlkYXRlIG9yIGFzc3VtZSBhbnl0aGluZyBhYm91dCBvcmRlcmluZyBoZXJlLiBUaGlz
IGRvZXNuJ3QKICAqIHJ1bGUgb3V0IGRlZmluaW5nIG5ldyBwcm9wZXJ0aWVzIHdpdGggb3JkZXJp
bmcgcmVxdWlyZW1lbnRzIGluIHRoZSBmdXR1cmUuCiAgKi8KLXN0YXRpYyBpbnQgcmVhZF9wcm9w
ZXJ0aWVzX3VubG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKK3N0YXRp
YyBpbnQgcmVhZF9wcm9wZXJ0aWVzX3VubG9ja2VkKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsCiAJ
CQkJICAgIHU2NCBfX3VzZXIgKnVwcm9wcywKIAkJCQkgICAgdTMyIG5fcHJvcHMsCiAJCQkJICAg
IHN0cnVjdCBwZXJmX29wZW5fcHJvcGVydGllcyAqcHJvcHMpCkBAIC0yODgzLDcgKzI4NzAsNyBA
QCBzdGF0aWMgaW50IHJlYWRfcHJvcGVydGllc191bmxvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCiAJCQkJCSAgdmFsdWUpOwogCQkJCXJldHVybiAtRUlOVkFMOwogCQkJ
fQotCQkJaWYgKCFkZXZfcHJpdi0+cGVyZi5vYV9mb3JtYXRzW3ZhbHVlXS5zaXplKSB7CisJCQlp
ZiAoIXBlcmYtPm9hX2Zvcm1hdHNbdmFsdWVdLnNpemUpIHsKIAkJCQlEUk1fREVCVUcoIlVuc3Vw
cG9ydGVkIE9BIHJlcG9ydCBmb3JtYXQgJWxsdVxuIiwKIAkJCQkJICB2YWx1ZSk7CiAJCQkJcmV0
dXJuIC1FSU5WQUw7CkBAIC0yOTA0LDcgKzI4OTEsNyBAQCBzdGF0aWMgaW50IHJlYWRfcHJvcGVy
dGllc191bmxvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgKi8K
IAogCQkJQlVJTERfQlVHX09OKHNpemVvZihvYV9wZXJpb2QpICE9IDgpOwotCQkJb2FfcGVyaW9k
ID0gb2FfZXhwb25lbnRfdG9fbnMoZGV2X3ByaXYsIHZhbHVlKTsKKwkJCW9hX3BlcmlvZCA9IG9h
X2V4cG9uZW50X3RvX25zKHBlcmYsIHZhbHVlKTsKIAogCQkJLyogVGhpcyBjaGVjayBpcyBwcmlt
YXJpbHkgdG8gZW5zdXJlIHRoYXQgb2FfcGVyaW9kIDw9CiAJCQkgKiBVSU5UMzJfTUFYIChiZWZv
cmUgcGFzc2luZyB0byBkb19kaXYgd2hpY2ggb25seQpAQCAtMjk1OCw3ICsyOTQ1LDcgQEAgc3Rh
dGljIGludCByZWFkX3Byb3BlcnRpZXNfdW5sb2NrZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogICogbXV0ZXggdG8gYXZvaWQgYW4gYXdrd2FyZCBsb2NrZGVwIHdpdGggbW1h
cF9zZW0uCiAgKgogICogTW9zdCBvZiB0aGUgaW1wbGVtZW50YXRpb24gZGV0YWlscyBhcmUgaGFu
ZGxlZCBieQotICogaTkxNV9wZXJmX29wZW5faW9jdGxfbG9ja2VkKCkgYWZ0ZXIgdGFraW5nIHRo
ZSAmZHJtX2k5MTVfcHJpdmF0ZS0+cGVyZi5sb2NrCisgKiBpOTE1X3BlcmZfb3Blbl9pb2N0bF9s
b2NrZWQoKSBhZnRlciB0YWtpbmcgdGhlICZwZXJmLT5sb2NrCiAgKiBtdXRleCBmb3Igc2VyaWFs
aXppbmcgd2l0aCBhbnkgbm9uLWZpbGUtb3BlcmF0aW9uIGRyaXZlciBob29rcy4KICAqCiAgKiBS
ZXR1cm46IEEgbmV3bHkgb3BlbmVkIGk5MTUgUGVyZiBzdHJlYW0gZmlsZSBkZXNjcmlwdG9yIG9y
IG5lZ2F0aXZlCkBAIC0yOTY3LDEzICsyOTU0LDEzIEBAIHN0YXRpYyBpbnQgcmVhZF9wcm9wZXJ0
aWVzX3VubG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIGludCBpOTE1
X3BlcmZfb3Blbl9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQkJ
IHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSBkZXYtPmRldl9wcml2YXRlOworCXN0cnVjdCBpOTE1X3BlcmYgKnBlcmYgPSAmdG9f
aTkxNShkZXYpLT5wZXJmOwogCXN0cnVjdCBkcm1faTkxNV9wZXJmX29wZW5fcGFyYW0gKnBhcmFt
ID0gZGF0YTsKIAlzdHJ1Y3QgcGVyZl9vcGVuX3Byb3BlcnRpZXMgcHJvcHM7CiAJdTMyIGtub3du
X29wZW5fZmxhZ3M7CiAJaW50IHJldDsKIAotCWlmICghZGV2X3ByaXYtPnBlcmYuaW5pdGlhbGl6
ZWQpIHsKKwlpZiAoIXBlcmYtPmk5MTUpIHsKIAkJRFJNX0RFQlVHKCJpOTE1IHBlcmYgaW50ZXJm
YWNlIG5vdCBhdmFpbGFibGUgZm9yIHRoaXMgc3lzdGVtXG4iKTsKIAkJcmV0dXJuIC1FTk9UU1VQ
UDsKIAl9CkBAIC0yOTg2LDEyNCArMjk3MywxMjcgQEAgaW50IGk5MTVfcGVyZl9vcGVuX2lvY3Rs
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCXJldHVybiAtRUlOVkFMOwog
CX0KIAotCXJldCA9IHJlYWRfcHJvcGVydGllc191bmxvY2tlZChkZXZfcHJpdiwKKwlyZXQgPSBy
ZWFkX3Byb3BlcnRpZXNfdW5sb2NrZWQocGVyZiwKIAkJCQkgICAgICAgdTY0X3RvX3VzZXJfcHRy
KHBhcmFtLT5wcm9wZXJ0aWVzX3B0ciksCiAJCQkJICAgICAgIHBhcmFtLT5udW1fcHJvcGVydGll
cywKIAkJCQkgICAgICAgJnByb3BzKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JbXV0
ZXhfbG9jaygmZGV2X3ByaXYtPnBlcmYubG9jayk7Ci0JcmV0ID0gaTkxNV9wZXJmX29wZW5faW9j
dGxfbG9ja2VkKGRldl9wcml2LCBwYXJhbSwgJnByb3BzLCBmaWxlKTsKLQltdXRleF91bmxvY2so
JmRldl9wcml2LT5wZXJmLmxvY2spOworCW11dGV4X2xvY2soJnBlcmYtPmxvY2spOworCXJldCA9
IGk5MTVfcGVyZl9vcGVuX2lvY3RsX2xvY2tlZChwZXJmLCBwYXJhbSwgJnByb3BzLCBmaWxlKTsK
KwltdXRleF91bmxvY2soJnBlcmYtPmxvY2spOwogCiAJcmV0dXJuIHJldDsKIH0KIAogLyoqCiAg
KiBpOTE1X3BlcmZfcmVnaXN0ZXIgLSBleHBvc2VzIGk5MTUtcGVyZiB0byB1c2Vyc3BhY2UKLSAq
IEBkZXZfcHJpdjogaTkxNSBkZXZpY2UgaW5zdGFuY2UKKyAqIEBpOTE1OiBpOTE1IGRldmljZSBp
bnN0YW5jZQogICoKICAqIEluIHBhcnRpY3VsYXIgT0EgbWV0cmljIHNldHMgYXJlIGFkdmVydGlz
ZWQgdW5kZXIgYSBzeXNmcyBtZXRyaWNzLwogICogZGlyZWN0b3J5IGFsbG93aW5nIHVzZXJzcGFj
ZSB0byBlbnVtZXJhdGUgdmFsaWQgSURzIHRoYXQgY2FuIGJlCiAgKiB1c2VkIHRvIG9wZW4gYW4g
aTkxNS1wZXJmIHN0cmVhbS4KICAqLwotdm9pZCBpOTE1X3BlcmZfcmVnaXN0ZXIoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQordm9pZCBpOTE1X3BlcmZfcmVnaXN0ZXIoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CisJc3RydWN0IGk5MTVfcGVyZiAqcGVyZiA9ICZp
OTE1LT5wZXJmOwogCWludCByZXQ7CiAKLQlpZiAoIWRldl9wcml2LT5wZXJmLmluaXRpYWxpemVk
KQorCWlmICghcGVyZi0+aTkxNSkKIAkJcmV0dXJuOwogCiAJLyogVG8gYmUgc3VyZSB3ZSdyZSBz
eW5jaHJvbml6ZWQgd2l0aCBhbiBhdHRlbXB0ZWQKIAkgKiBpOTE1X3BlcmZfb3Blbl9pb2N0bCgp
OyBjb25zaWRlcmluZyB0aGF0IHdlIHJlZ2lzdGVyIGFmdGVyCiAJICogYmVpbmcgZXhwb3NlZCB0
byB1c2Vyc3BhY2UuCiAJICovCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBlcmYubG9jayk7CisJ
bXV0ZXhfbG9jaygmcGVyZi0+bG9jayk7CiAKLQlkZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2tvYmog
PQorCXBlcmYtPm1ldHJpY3Nfa29iaiA9CiAJCWtvYmplY3RfY3JlYXRlX2FuZF9hZGQoIm1ldHJp
Y3MiLAotCQkJCSAgICAgICAmZGV2X3ByaXYtPmRybS5wcmltYXJ5LT5rZGV2LT5rb2JqKTsKLQlp
ZiAoIWRldl9wcml2LT5wZXJmLm1ldHJpY3Nfa29iaikKKwkJCQkgICAgICAgJmk5MTUtPmRybS5w
cmltYXJ5LT5rZGV2LT5rb2JqKTsKKwlpZiAoIXBlcmYtPm1ldHJpY3Nfa29iaikKIAkJZ290byBl
eGl0OwogCi0Jc3lzZnNfYXR0cl9pbml0KCZkZXZfcHJpdi0+cGVyZi50ZXN0X2NvbmZpZy5zeXNm
c19tZXRyaWNfaWQuYXR0cik7Ci0KLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkgewot
CQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19pY2woZGV2X3ByaXYpOwotCX0gZWxzZSBpZiAo
SVNfQ0FOTk9OTEFLRShkZXZfcHJpdikpIHsKLQkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdf
Y25sKGRldl9wcml2KTsKLQl9IGVsc2UgaWYgKElTX0NPRkZFRUxBS0UoZGV2X3ByaXYpKSB7Ci0J
CWlmIChJU19DRkxfR1QyKGRldl9wcml2KSkKLQkJCWk5MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmln
X2NmbGd0MihkZXZfcHJpdik7Ci0JCWlmIChJU19DRkxfR1QzKGRldl9wcml2KSkKLQkJCWk5MTVf
cGVyZl9sb2FkX3Rlc3RfY29uZmlnX2NmbGd0MyhkZXZfcHJpdik7Ci0JfSBlbHNlIGlmIChJU19H
RU1JTklMQUtFKGRldl9wcml2KSkgewotCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19nbGso
ZGV2X3ByaXYpOwotCX0gZWxzZSBpZiAoSVNfS0FCWUxBS0UoZGV2X3ByaXYpKSB7Ci0JCWlmIChJ
U19LQkxfR1QyKGRldl9wcml2KSkKLQkJCWk5MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmlnX2tibGd0
MihkZXZfcHJpdik7Ci0JCWVsc2UgaWYgKElTX0tCTF9HVDMoZGV2X3ByaXYpKQotCQkJaTkxNV9w
ZXJmX2xvYWRfdGVzdF9jb25maWdfa2JsZ3QzKGRldl9wcml2KTsKLQl9IGVsc2UgaWYgKElTX0JS
T1hUT04oZGV2X3ByaXYpKSB7Ci0JCWk5MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmlnX2J4dChkZXZf
cHJpdik7Ci0JfSBlbHNlIGlmIChJU19TS1lMQUtFKGRldl9wcml2KSkgewotCQlpZiAoSVNfU0tM
X0dUMihkZXZfcHJpdikpCi0JCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19za2xndDIoZGV2
X3ByaXYpOwotCQllbHNlIGlmIChJU19TS0xfR1QzKGRldl9wcml2KSkKLQkJCWk5MTVfcGVyZl9s
b2FkX3Rlc3RfY29uZmlnX3NrbGd0MyhkZXZfcHJpdik7Ci0JCWVsc2UgaWYgKElTX1NLTF9HVDQo
ZGV2X3ByaXYpKQotCQkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdfc2tsZ3Q0KGRldl9wcml2
KTsKLQl9IGVsc2UgaWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSB7Ci0JCWk5MTVfcGVyZl9s
b2FkX3Rlc3RfY29uZmlnX2NodihkZXZfcHJpdik7Ci0JfSBlbHNlIGlmIChJU19CUk9BRFdFTEwo
ZGV2X3ByaXYpKSB7Ci0JCWk5MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmlnX2JkdyhkZXZfcHJpdik7
Ci0JfSBlbHNlIGlmIChJU19IQVNXRUxMKGRldl9wcml2KSkgewotCQlpOTE1X3BlcmZfbG9hZF90
ZXN0X2NvbmZpZ19oc3coZGV2X3ByaXYpOwotfQotCi0JaWYgKGRldl9wcml2LT5wZXJmLnRlc3Rf
Y29uZmlnLmlkID09IDApCisJc3lzZnNfYXR0cl9pbml0KCZwZXJmLT50ZXN0X2NvbmZpZy5zeXNm
c19tZXRyaWNfaWQuYXR0cik7CisKKwlpZiAoSU5URUxfR0VOKGk5MTUpID49IDExKSB7CisJCWk5
MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmlnX2ljbChpOTE1KTsKKwl9IGVsc2UgaWYgKElTX0NBTk5P
TkxBS0UoaTkxNSkpIHsKKwkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdfY25sKGk5MTUpOwor
CX0gZWxzZSBpZiAoSVNfQ09GRkVFTEFLRShpOTE1KSkgeworCQlpZiAoSVNfQ0ZMX0dUMihpOTE1
KSkKKwkJCWk5MTVfcGVyZl9sb2FkX3Rlc3RfY29uZmlnX2NmbGd0MihpOTE1KTsKKwkJaWYgKElT
X0NGTF9HVDMoaTkxNSkpCisJCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19jZmxndDMoaTkx
NSk7CisJfSBlbHNlIGlmIChJU19HRU1JTklMQUtFKGk5MTUpKSB7CisJCWk5MTVfcGVyZl9sb2Fk
X3Rlc3RfY29uZmlnX2dsayhpOTE1KTsKKwl9IGVsc2UgaWYgKElTX0tBQllMQUtFKGk5MTUpKSB7
CisJCWlmIChJU19LQkxfR1QyKGk5MTUpKQorCQkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdf
a2JsZ3QyKGk5MTUpOworCQllbHNlIGlmIChJU19LQkxfR1QzKGk5MTUpKQorCQkJaTkxNV9wZXJm
X2xvYWRfdGVzdF9jb25maWdfa2JsZ3QzKGk5MTUpOworCX0gZWxzZSBpZiAoSVNfQlJPWFRPTihp
OTE1KSkgeworCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19ieHQoaTkxNSk7CisJfSBlbHNl
IGlmIChJU19TS1lMQUtFKGk5MTUpKSB7CisJCWlmIChJU19TS0xfR1QyKGk5MTUpKQorCQkJaTkx
NV9wZXJmX2xvYWRfdGVzdF9jb25maWdfc2tsZ3QyKGk5MTUpOworCQllbHNlIGlmIChJU19TS0xf
R1QzKGk5MTUpKQorCQkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdfc2tsZ3QzKGk5MTUpOwor
CQllbHNlIGlmIChJU19TS0xfR1Q0KGk5MTUpKQorCQkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25m
aWdfc2tsZ3Q0KGk5MTUpOworCX0gZWxzZSBpZiAoSVNfQ0hFUlJZVklFVyhpOTE1KSkgeworCQlp
OTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19jaHYoaTkxNSk7CisJfSBlbHNlIGlmIChJU19CUk9B
RFdFTEwoaTkxNSkpIHsKKwkJaTkxNV9wZXJmX2xvYWRfdGVzdF9jb25maWdfYmR3KGk5MTUpOwor
CX0gZWxzZSBpZiAoSVNfSEFTV0VMTChpOTE1KSkgeworCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2Nv
bmZpZ19oc3coaTkxNSk7CisJfQorCisJaWYgKHBlcmYtPnRlc3RfY29uZmlnLmlkID09IDApCiAJ
CWdvdG8gc3lzZnNfZXJyb3I7CiAKLQlyZXQgPSBzeXNmc19jcmVhdGVfZ3JvdXAoZGV2X3ByaXYt
PnBlcmYubWV0cmljc19rb2JqLAotCQkJCSAmZGV2X3ByaXYtPnBlcmYudGVzdF9jb25maWcuc3lz
ZnNfbWV0cmljKTsKKwlyZXQgPSBzeXNmc19jcmVhdGVfZ3JvdXAocGVyZi0+bWV0cmljc19rb2Jq
LAorCQkJCSAmcGVyZi0+dGVzdF9jb25maWcuc3lzZnNfbWV0cmljKTsKIAlpZiAocmV0KQogCQln
b3RvIHN5c2ZzX2Vycm9yOwogCi0JYXRvbWljX3NldCgmZGV2X3ByaXYtPnBlcmYudGVzdF9jb25m
aWcucmVmX2NvdW50LCAxKTsKKwlhdG9taWNfc2V0KCZwZXJmLT50ZXN0X2NvbmZpZy5yZWZfY291
bnQsIDEpOwogCiAJZ290byBleGl0OwogCiBzeXNmc19lcnJvcjoKLQlrb2JqZWN0X3B1dChkZXZf
cHJpdi0+cGVyZi5tZXRyaWNzX2tvYmopOwotCWRldl9wcml2LT5wZXJmLm1ldHJpY3Nfa29iaiA9
IE5VTEw7CisJa29iamVjdF9wdXQocGVyZi0+bWV0cmljc19rb2JqKTsKKwlwZXJmLT5tZXRyaWNz
X2tvYmogPSBOVUxMOwogCiBleGl0OgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBlcmYubG9j
ayk7CisJbXV0ZXhfdW5sb2NrKCZwZXJmLT5sb2NrKTsKIH0KIAogLyoqCiAgKiBpOTE1X3BlcmZf
dW5yZWdpc3RlciAtIGhpZGUgaTkxNS1wZXJmIGZyb20gdXNlcnNwYWNlCi0gKiBAZGV2X3ByaXY6
IGk5MTUgZGV2aWNlIGluc3RhbmNlCisgKiBAaTkxNTogaTkxNSBkZXZpY2UgaW5zdGFuY2UKICAq
CiAgKiBpOTE1LXBlcmYgc3RhdGUgY2xlYW51cCBpcyBzcGxpdCB1cCBpbnRvIGFuICd1bnJlZ2lz
dGVyJyBhbmQKICAqICdkZWluaXQnIHBoYXNlIHdoZXJlIHRoZSBpbnRlcmZhY2UgaXMgZmlyc3Qg
aGlkZGVuIGZyb20KICAqIHVzZXJzcGFjZSBieSBpOTE1X3BlcmZfdW5yZWdpc3RlcigpIGJlZm9y
ZSBjbGVhbmluZyB1cAogICogcmVtYWluaW5nIHN0YXRlIGluIGk5MTVfcGVyZl9maW5pKCkuCiAg
Ki8KLXZvaWQgaTkxNV9wZXJmX3VucmVnaXN0ZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQordm9pZCBpOTE1X3BlcmZfdW5yZWdpc3RlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSkKIHsKLQlpZiAoIWRldl9wcml2LT5wZXJmLm1ldHJpY3Nfa29iaikKKwlzdHJ1Y3Qg
aTkxNV9wZXJmICpwZXJmID0gJmk5MTUtPnBlcmY7CisKKwlpZiAoIXBlcmYtPm1ldHJpY3Nfa29i
aikKIAkJcmV0dXJuOwogCi0Jc3lzZnNfcmVtb3ZlX2dyb3VwKGRldl9wcml2LT5wZXJmLm1ldHJp
Y3Nfa29iaiwKLQkJCSAgICZkZXZfcHJpdi0+cGVyZi50ZXN0X2NvbmZpZy5zeXNmc19tZXRyaWMp
OworCXN5c2ZzX3JlbW92ZV9ncm91cChwZXJmLT5tZXRyaWNzX2tvYmosCisJCQkgICAmcGVyZi0+
dGVzdF9jb25maWcuc3lzZnNfbWV0cmljKTsKIAotCWtvYmplY3RfcHV0KGRldl9wcml2LT5wZXJm
Lm1ldHJpY3Nfa29iaik7Ci0JZGV2X3ByaXYtPnBlcmYubWV0cmljc19rb2JqID0gTlVMTDsKKwlr
b2JqZWN0X3B1dChwZXJmLT5tZXRyaWNzX2tvYmopOworCXBlcmYtPm1ldHJpY3Nfa29iaiA9IE5V
TEw7CiB9CiAKLXN0YXRpYyBib29sIGdlbjhfaXNfdmFsaWRfZmxleF9hZGRyKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGFkZHIpCitzdGF0aWMgYm9vbCBnZW44X2lzX3Zh
bGlkX2ZsZXhfYWRkcihzdHJ1Y3QgaTkxNV9wZXJmICpwZXJmLCB1MzIgYWRkcikKIHsKIAlzdGF0
aWMgY29uc3QgaTkxNV9yZWdfdCBmbGV4X2V1X3JlZ3NbXSA9IHsKIAkJRVVfUEVSRl9DTlRMMCwK
QEAgLTMxMjMsNyArMzExMyw3IEBAIHN0YXRpYyBib29sIGdlbjhfaXNfdmFsaWRfZmxleF9hZGRy
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGFkZHIpCiAJcmV0dXJuIGZh
bHNlOwogfQogCi1zdGF0aWMgYm9vbCBnZW43X2lzX3ZhbGlkX2JfY291bnRlcl9hZGRyKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGFkZHIpCitzdGF0aWMgYm9vbCBnZW43
X2lzX3ZhbGlkX2JfY291bnRlcl9hZGRyKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRy
KQogewogCXJldHVybiAoYWRkciA+PSBpOTE1X21taW9fcmVnX29mZnNldChPQVNUQVJUVFJJRzEp
ICYmCiAJCWFkZHIgPD0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoT0FTVEFSVFRSSUc4KSkgfHwKQEAg
LTMxMzMsNyArMzEyMyw3IEBAIHN0YXRpYyBib29sIGdlbjdfaXNfdmFsaWRfYl9jb3VudGVyX2Fk
ZHIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIKIAkJIGFkZHIgPD0gaTkx
NV9tbWlvX3JlZ19vZmZzZXQoT0FDRUM3XzEpKTsKIH0KIAotc3RhdGljIGJvb2wgZ2VuN19pc192
YWxpZF9tdXhfYWRkcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBhZGRy
KQorc3RhdGljIGJvb2wgZ2VuN19pc192YWxpZF9tdXhfYWRkcihzdHJ1Y3QgaTkxNV9wZXJmICpw
ZXJmLCB1MzIgYWRkcikKIHsKIAlyZXR1cm4gYWRkciA9PSBpOTE1X21taW9fcmVnX29mZnNldChI
QUxGX1NMSUNFX0NISUNLRU4yKSB8fAogCQkoYWRkciA+PSBpOTE1X21taW9fcmVnX29mZnNldChN
SUNST19CUDBfMCkgJiYKQEAgLTMxNDQsMzQgKzMxMzQsMzQgQEAgc3RhdGljIGJvb2wgZ2VuN19p
c192YWxpZF9tdXhfYWRkcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBh
ZGRyKQogCQkgYWRkciA8PSBpOTE1X21taW9fcmVnX29mZnNldChPQV9QRVJGTUFUUklYX0hJKSk7
CiB9CiAKLXN0YXRpYyBib29sIGdlbjhfaXNfdmFsaWRfbXV4X2FkZHIoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgYWRkcikKK3N0YXRpYyBib29sIGdlbjhfaXNfdmFsaWRf
bXV4X2FkZHIoc3RydWN0IGk5MTVfcGVyZiAqcGVyZiwgdTMyIGFkZHIpCiB7Ci0JcmV0dXJuIGdl
bjdfaXNfdmFsaWRfbXV4X2FkZHIoZGV2X3ByaXYsIGFkZHIpIHx8CisJcmV0dXJuIGdlbjdfaXNf
dmFsaWRfbXV4X2FkZHIocGVyZiwgYWRkcikgfHwKIAkJYWRkciA9PSBpOTE1X21taW9fcmVnX29m
ZnNldChXQUlUX0ZPUl9SQzZfRVhJVCkgfHwKIAkJKGFkZHIgPj0gaTkxNV9tbWlvX3JlZ19vZmZz
ZXQoUlBNX0NPTkZJRzApICYmCiAJCSBhZGRyIDw9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KE5PQV9D
T05GSUcoOCkpKTsKIH0KIAotc3RhdGljIGJvb2wgZ2VuMTBfaXNfdmFsaWRfbXV4X2FkZHIoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgYWRkcikKK3N0YXRpYyBib29sIGdl
bjEwX2lzX3ZhbGlkX211eF9hZGRyKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRyKQog
ewotCXJldHVybiBnZW44X2lzX3ZhbGlkX211eF9hZGRyKGRldl9wcml2LCBhZGRyKSB8fAorCXJl
dHVybiBnZW44X2lzX3ZhbGlkX211eF9hZGRyKHBlcmYsIGFkZHIpIHx8CiAJCWFkZHIgPT0gaTkx
NV9tbWlvX3JlZ19vZmZzZXQoR0VOMTBfTk9BX1dSSVRFX0hJR0gpIHx8CiAJCShhZGRyID49IGk5
MTVfbW1pb19yZWdfb2Zmc2V0KE9BX1BFUkZDTlQzX0xPKSAmJgogCQkgYWRkciA8PSBpOTE1X21t
aW9fcmVnX29mZnNldChPQV9QRVJGQ05UNF9ISSkpOwogfQogCi1zdGF0aWMgYm9vbCBoc3dfaXNf
dmFsaWRfbXV4X2FkZHIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgYWRk
cikKK3N0YXRpYyBib29sIGhzd19pc192YWxpZF9tdXhfYWRkcihzdHJ1Y3QgaTkxNV9wZXJmICpw
ZXJmLCB1MzIgYWRkcikKIHsKLQlyZXR1cm4gZ2VuN19pc192YWxpZF9tdXhfYWRkcihkZXZfcHJp
diwgYWRkcikgfHwKKwlyZXR1cm4gZ2VuN19pc192YWxpZF9tdXhfYWRkcihwZXJmLCBhZGRyKSB8
fAogCQkoYWRkciA+PSAweDI1MTAwICYmIGFkZHIgPD0gMHgyRkY5MCkgfHwKIAkJKGFkZHIgPj0g
aTkxNV9tbWlvX3JlZ19vZmZzZXQoSFNXX01CVklEMl9OT0EwKSAmJgogCQkgYWRkciA8PSBpOTE1
X21taW9fcmVnX29mZnNldChIU1dfTUJWSUQyX05PQTkpKSB8fAogCQlhZGRyID09IGk5MTVfbW1p
b19yZWdfb2Zmc2V0KEhTV19NQlZJRDJfTUlTUjApOwogfQogCi1zdGF0aWMgYm9vbCBjaHZfaXNf
dmFsaWRfbXV4X2FkZHIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgYWRk
cikKK3N0YXRpYyBib29sIGNodl9pc192YWxpZF9tdXhfYWRkcihzdHJ1Y3QgaTkxNV9wZXJmICpw
ZXJmLCB1MzIgYWRkcikKIHsKLQlyZXR1cm4gZ2VuN19pc192YWxpZF9tdXhfYWRkcihkZXZfcHJp
diwgYWRkcikgfHwKKwlyZXR1cm4gZ2VuN19pc192YWxpZF9tdXhfYWRkcihwZXJmLCBhZGRyKSB8
fAogCQkoYWRkciA+PSAweDE4MjMwMCAmJiBhZGRyIDw9IDB4MTgyM0E0KTsKIH0KIApAQCAtMzE5
NCw4ICszMTg0LDggQEAgc3RhdGljIHUzMiBtYXNrX3JlZ192YWx1ZSh1MzIgcmVnLCB1MzIgdmFs
KQogCXJldHVybiB2YWw7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV9vYV9yZWcgKmFsbG9jX29h
X3JlZ3Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCQkgYm9vbCAoKmlz
X3ZhbGlkKShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBhZGRyKSwKK3N0
YXRpYyBzdHJ1Y3QgaTkxNV9vYV9yZWcgKmFsbG9jX29hX3JlZ3Moc3RydWN0IGk5MTVfcGVyZiAq
cGVyZiwKKwkJCQkJIGJvb2wgKCppc192YWxpZCkoc3RydWN0IGk5MTVfcGVyZiAqcGVyZiwgdTMy
IGFkZHIpLAogCQkJCQkgdTMyIF9fdXNlciAqcmVncywKIAkJCQkJIHUzMiBuX3JlZ3MpCiB7CkBA
IC0zMjI1LDcgKzMyMTUsNyBAQCBzdGF0aWMgc3RydWN0IGk5MTVfb2FfcmVnICphbGxvY19vYV9y
ZWdzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJaWYgKGVycikKIAkJCWdv
dG8gYWRkcl9lcnI7CiAKLQkJaWYgKCFpc192YWxpZChkZXZfcHJpdiwgYWRkcikpIHsKKwkJaWYg
KCFpc192YWxpZChwZXJmLCBhZGRyKSkgewogCQkJRFJNX0RFQlVHKCJJbnZhbGlkIG9hX3JlZyBh
ZGRyZXNzOiAlWFxuIiwgYWRkcik7CiAJCQllcnIgPSAtRUlOVkFMOwogCQkJZ290byBhZGRyX2Vy
cjsKQEAgLTMyNTgsNyArMzI0OCw3IEBAIHN0YXRpYyBzc2l6ZV90IHNob3dfZHluYW1pY19pZChz
dHJ1Y3QgZGV2aWNlICpkZXYsCiAJcmV0dXJuIHNwcmludGYoYnVmLCAiJWRcbiIsIG9hX2NvbmZp
Zy0+aWQpOwogfQogCi1zdGF0aWMgaW50IGNyZWF0ZV9keW5hbWljX29hX3N5c2ZzX2VudHJ5KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKK3N0YXRpYyBpbnQgY3JlYXRlX2R5bmFt
aWNfb2Ffc3lzZnNfZW50cnkoc3RydWN0IGk5MTVfcGVyZiAqcGVyZiwKIAkJCQkJIHN0cnVjdCBp
OTE1X29hX2NvbmZpZyAqb2FfY29uZmlnKQogewogCXN5c2ZzX2F0dHJfaW5pdCgmb2FfY29uZmln
LT5zeXNmc19tZXRyaWNfaWQuYXR0cik7CkBAIC0zMjczLDcgKzMyNjMsNyBAQCBzdGF0aWMgaW50
IGNyZWF0ZV9keW5hbWljX29hX3N5c2ZzX2VudHJ5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAlvYV9jb25maWctPnN5c2ZzX21ldHJpYy5uYW1lID0gb2FfY29uZmlnLT51dWlk
OwogCW9hX2NvbmZpZy0+c3lzZnNfbWV0cmljLmF0dHJzID0gb2FfY29uZmlnLT5hdHRyczsKIAot
CXJldHVybiBzeXNmc19jcmVhdGVfZ3JvdXAoZGV2X3ByaXYtPnBlcmYubWV0cmljc19rb2JqLAor
CXJldHVybiBzeXNmc19jcmVhdGVfZ3JvdXAocGVyZi0+bWV0cmljc19rb2JqLAogCQkJCSAgJm9h
X2NvbmZpZy0+c3lzZnNfbWV0cmljKTsKIH0KIApAQCAtMzI5MywxNyArMzI4MywxNyBAQCBzdGF0
aWMgaW50IGNyZWF0ZV9keW5hbWljX29hX3N5c2ZzX2VudHJ5KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIGludCBpOTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQkJICAgICAgIHN0cnVjdCBkcm1fZmlsZSAqZmls
ZSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkZXYtPmRldl9wcml2
YXRlOworCXN0cnVjdCBpOTE1X3BlcmYgKnBlcmYgPSAmdG9faTkxNShkZXYpLT5wZXJmOwogCXN0
cnVjdCBkcm1faTkxNV9wZXJmX29hX2NvbmZpZyAqYXJncyA9IGRhdGE7CiAJc3RydWN0IGk5MTVf
b2FfY29uZmlnICpvYV9jb25maWcsICp0bXA7CiAJaW50IGVyciwgaWQ7CiAKLQlpZiAoIWRldl9w
cml2LT5wZXJmLmluaXRpYWxpemVkKSB7CisJaWYgKCFwZXJmLT5pOTE1KSB7CiAJCURSTV9ERUJV
RygiaTkxNSBwZXJmIGludGVyZmFjZSBub3QgYXZhaWxhYmxlIGZvciB0aGlzIHN5c3RlbVxuIik7
CiAJCXJldHVybiAtRU5PVFNVUFA7CiAJfQogCi0JaWYgKCFkZXZfcHJpdi0+cGVyZi5tZXRyaWNz
X2tvYmopIHsKKwlpZiAoIXBlcmYtPm1ldHJpY3Nfa29iaikgewogCQlEUk1fREVCVUcoIk9BIG1l
dHJpY3Mgd2VyZW4ndCBhZHZlcnRpc2VkIHZpYSBzeXNmc1xuIik7CiAJCXJldHVybiAtRUlOVkFM
OwogCX0KQEAgLTMzNDEsOCArMzMzMSw4IEBAIGludCBpOTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0
bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCiAJb2FfY29uZmlnLT5tdXhf
cmVnc19sZW4gPSBhcmdzLT5uX211eF9yZWdzOwogCW9hX2NvbmZpZy0+bXV4X3JlZ3MgPQotCQlh
bGxvY19vYV9yZWdzKGRldl9wcml2LAotCQkJICAgICAgZGV2X3ByaXYtPnBlcmYub3BzLmlzX3Zh
bGlkX211eF9yZWcsCisJCWFsbG9jX29hX3JlZ3MocGVyZiwKKwkJCSAgICAgIHBlcmYtPm9wcy5p
c192YWxpZF9tdXhfcmVnLAogCQkJICAgICAgdTY0X3RvX3VzZXJfcHRyKGFyZ3MtPm11eF9yZWdz
X3B0ciksCiAJCQkgICAgICBhcmdzLT5uX211eF9yZWdzKTsKIApAQCAtMzM1NCw4ICszMzQ0LDgg
QEAgaW50IGk5MTVfcGVyZl9hZGRfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
IHZvaWQgKmRhdGEsCiAKIAlvYV9jb25maWctPmJfY291bnRlcl9yZWdzX2xlbiA9IGFyZ3MtPm5f
Ym9vbGVhbl9yZWdzOwogCW9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3MgPQotCQlhbGxvY19vYV9y
ZWdzKGRldl9wcml2LAotCQkJICAgICAgZGV2X3ByaXYtPnBlcmYub3BzLmlzX3ZhbGlkX2JfY291
bnRlcl9yZWcsCisJCWFsbG9jX29hX3JlZ3MocGVyZiwKKwkJCSAgICAgIHBlcmYtPm9wcy5pc192
YWxpZF9iX2NvdW50ZXJfcmVnLAogCQkJICAgICAgdTY0X3RvX3VzZXJfcHRyKGFyZ3MtPmJvb2xl
YW5fcmVnc19wdHIpLAogCQkJICAgICAgYXJncy0+bl9ib29sZWFuX3JlZ3MpOwogCkBAIC0zMzY1
LDcgKzMzNTUsNyBAQCBpbnQgaTkxNV9wZXJmX2FkZF9jb25maWdfaW9jdGwoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJZ290byByZWdfZXJyOwogCX0KIAotCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpIDwgOCkgeworCWlmIChJTlRFTF9HRU4ocGVyZi0+aTkxNSkgPCA4KSB7
CiAJCWlmIChhcmdzLT5uX2ZsZXhfcmVncyAhPSAwKSB7CiAJCQllcnIgPSAtRUlOVkFMOwogCQkJ
Z290byByZWdfZXJyOwpAQCAtMzM3Myw4ICszMzYzLDggQEAgaW50IGk5MTVfcGVyZl9hZGRfY29u
ZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJfSBlbHNlIHsK
IAkJb2FfY29uZmlnLT5mbGV4X3JlZ3NfbGVuID0gYXJncy0+bl9mbGV4X3JlZ3M7CiAJCW9hX2Nv
bmZpZy0+ZmxleF9yZWdzID0KLQkJCWFsbG9jX29hX3JlZ3MoZGV2X3ByaXYsCi0JCQkJICAgICAg
ZGV2X3ByaXYtPnBlcmYub3BzLmlzX3ZhbGlkX2ZsZXhfcmVnLAorCQkJYWxsb2Nfb2FfcmVncyhw
ZXJmLAorCQkJCSAgICAgIHBlcmYtPm9wcy5pc192YWxpZF9mbGV4X3JlZywKIAkJCQkgICAgICB1
NjRfdG9fdXNlcl9wdHIoYXJncy0+ZmxleF9yZWdzX3B0ciksCiAJCQkJICAgICAgYXJncy0+bl9m
bGV4X3JlZ3MpOwogCkBAIC0zMzg1LDE0ICszMzc1LDE0IEBAIGludCBpOTE1X3BlcmZfYWRkX2Nv
bmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQl9CiAJfQog
Ci0JZXJyID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZkZXZfcHJpdi0+cGVyZi5tZXRyaWNz
X2xvY2spOworCWVyciA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmcGVyZi0+bWV0cmljc19s
b2NrKTsKIAlpZiAoZXJyKQogCQlnb3RvIHJlZ19lcnI7CiAKIAkvKiBXZSBzaG91bGRuJ3QgaGF2
ZSB0b28gbWFueSBjb25maWdzLCBzbyB0aGlzIGl0ZXJhdGlvbiBzaG91bGRuJ3QgYmUKIAkgKiB0
b28gY29zdGx5LgogCSAqLwotCWlkcl9mb3JfZWFjaF9lbnRyeSgmZGV2X3ByaXYtPnBlcmYubWV0
cmljc19pZHIsIHRtcCwgaWQpIHsKKwlpZHJfZm9yX2VhY2hfZW50cnkoJnBlcmYtPm1ldHJpY3Nf
aWRyLCB0bXAsIGlkKSB7CiAJCWlmICghc3RyY21wKHRtcC0+dXVpZCwgb2FfY29uZmlnLT51dWlk
KSkgewogCQkJRFJNX0RFQlVHKCJPQSBjb25maWcgYWxyZWFkeSBleGlzdHMgd2l0aCB0aGlzIHV1
aWRcbiIpOwogCQkJZXJyID0gLUVBRERSSU5VU0U7CkBAIC0zNDAwLDE0ICszMzkwLDE0IEBAIGlu
dCBpOTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lk
ICpkYXRhLAogCQl9CiAJfQogCi0JZXJyID0gY3JlYXRlX2R5bmFtaWNfb2Ffc3lzZnNfZW50cnko
ZGV2X3ByaXYsIG9hX2NvbmZpZyk7CisJZXJyID0gY3JlYXRlX2R5bmFtaWNfb2Ffc3lzZnNfZW50
cnkocGVyZiwgb2FfY29uZmlnKTsKIAlpZiAoZXJyKSB7CiAJCURSTV9ERUJVRygiRmFpbGVkIHRv
IGNyZWF0ZSBzeXNmcyBlbnRyeSBmb3IgT0EgY29uZmlnXG4iKTsKIAkJZ290byBzeXNmc19lcnI7
CiAJfQogCiAJLyogQ29uZmlnIGlkIDAgaXMgaW52YWxpZCwgaWQgMSBmb3Iga2VybmVsIHN0b3Jl
ZCB0ZXN0IGNvbmZpZy4gKi8KLQlvYV9jb25maWctPmlkID0gaWRyX2FsbG9jKCZkZXZfcHJpdi0+
cGVyZi5tZXRyaWNzX2lkciwKKwlvYV9jb25maWctPmlkID0gaWRyX2FsbG9jKCZwZXJmLT5tZXRy
aWNzX2lkciwKIAkJCQkgIG9hX2NvbmZpZywgMiwKIAkJCQkgIDAsIEdGUF9LRVJORUwpOwogCWlm
IChvYV9jb25maWctPmlkIDwgMCkgewpAQCAtMzQxNiwxNiArMzQwNiwxNiBAQCBpbnQgaTkxNV9w
ZXJmX2FkZF9jb25maWdfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwK
IAkJZ290byBzeXNmc19lcnI7CiAJfQogCi0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5t
ZXRyaWNzX2xvY2spOworCW11dGV4X3VubG9jaygmcGVyZi0+bWV0cmljc19sb2NrKTsKIAogCURS
TV9ERUJVRygiQWRkZWQgY29uZmlnICVzIGlkPSVpXG4iLCBvYV9jb25maWctPnV1aWQsIG9hX2Nv
bmZpZy0+aWQpOwogCiAJcmV0dXJuIG9hX2NvbmZpZy0+aWQ7CiAKIHN5c2ZzX2VycjoKLQltdXRl
eF91bmxvY2soJmRldl9wcml2LT5wZXJmLm1ldHJpY3NfbG9jayk7CisJbXV0ZXhfdW5sb2NrKCZw
ZXJmLT5tZXRyaWNzX2xvY2spOwogcmVnX2VycjoKLQlwdXRfb2FfY29uZmlnKGRldl9wcml2LCBv
YV9jb25maWcpOworCXB1dF9vYV9jb25maWcob2FfY29uZmlnKTsKIAlEUk1fREVCVUcoIkZhaWxl
ZCB0byBhZGQgbmV3IE9BIGNvbmZpZ1xuIik7CiAJcmV0dXJuIGVycjsKIH0KQEAgLTM0NDQsMTIg
KzM0MzQsMTIgQEAgaW50IGk5MTVfcGVyZl9hZGRfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsIHZvaWQgKmRhdGEsCiBpbnQgaTkxNV9wZXJmX3JlbW92ZV9jb25maWdfaW9jdGwo
c3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJCQkgIHN0cnVjdCBkcm1fZmls
ZSAqZmlsZSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkZXYtPmRl
dl9wcml2YXRlOworCXN0cnVjdCBpOTE1X3BlcmYgKnBlcmYgPSAmdG9faTkxNShkZXYpLT5wZXJm
OwogCXU2NCAqYXJnID0gZGF0YTsKIAlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZzsK
IAlpbnQgcmV0OwogCi0JaWYgKCFkZXZfcHJpdi0+cGVyZi5pbml0aWFsaXplZCkgeworCWlmICgh
cGVyZi0+aTkxNSkgewogCQlEUk1fREVCVUcoImk5MTUgcGVyZiBpbnRlcmZhY2Ugbm90IGF2YWls
YWJsZSBmb3IgdGhpcyBzeXN0ZW1cbiIpOwogCQlyZXR1cm4gLUVOT1RTVVBQOwogCX0KQEAgLTM0
NTksMTEgKzM0NDksMTEgQEAgaW50IGk5MTVfcGVyZl9yZW1vdmVfY29uZmlnX2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCXJldHVybiAtRUFDQ0VTOwogCX0KIAot
CXJldCA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmZGV2X3ByaXYtPnBlcmYubWV0cmljc19s
b2NrKTsKKwlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJnBlcmYtPm1ldHJpY3NfbG9j
ayk7CiAJaWYgKHJldCkKIAkJZ290byBsb2NrX2VycjsKIAotCW9hX2NvbmZpZyA9IGlkcl9maW5k
KCZkZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2lkciwgKmFyZyk7CisJb2FfY29uZmlnID0gaWRyX2Zp
bmQoJnBlcmYtPm1ldHJpY3NfaWRyLCAqYXJnKTsKIAlpZiAoIW9hX2NvbmZpZykgewogCQlEUk1f
REVCVUcoIkZhaWxlZCB0byByZW1vdmUgdW5rbm93biBPQSBjb25maWdcbiIpOwogCQlyZXQgPSAt
RU5PRU5UOwpAQCAtMzQ3MiwxNyArMzQ2MiwxNyBAQCBpbnQgaTkxNV9wZXJmX3JlbW92ZV9jb25m
aWdfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAogCUdFTV9CVUdf
T04oKmFyZyAhPSBvYV9jb25maWctPmlkKTsKIAotCXN5c2ZzX3JlbW92ZV9ncm91cChkZXZfcHJp
di0+cGVyZi5tZXRyaWNzX2tvYmosCisJc3lzZnNfcmVtb3ZlX2dyb3VwKHBlcmYtPm1ldHJpY3Nf
a29iaiwKIAkJCSAgICZvYV9jb25maWctPnN5c2ZzX21ldHJpYyk7CiAKLQlpZHJfcmVtb3ZlKCZk
ZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2lkciwgKmFyZyk7CisJaWRyX3JlbW92ZSgmcGVyZi0+bWV0
cmljc19pZHIsICphcmcpOwogCiAJRFJNX0RFQlVHKCJSZW1vdmVkIGNvbmZpZyAlcyBpZD0laVxu
Iiwgb2FfY29uZmlnLT51dWlkLCBvYV9jb25maWctPmlkKTsKIAotCXB1dF9vYV9jb25maWcoZGV2
X3ByaXYsIG9hX2NvbmZpZyk7CisJcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOwogCiBjb25maWdf
ZXJyOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBlcmYubWV0cmljc19sb2NrKTsKKwltdXRl
eF91bmxvY2soJnBlcmYtPm1ldHJpY3NfbG9jayk7CiBsb2NrX2VycjoKIAlyZXR1cm4gcmV0Owog
fQpAQCAtMzUzMSwxMDMgKzM1MjEsMTA0IEBAIHN0YXRpYyBzdHJ1Y3QgY3RsX3RhYmxlIGRldl9y
b290W10gPSB7CiAKIC8qKgogICogaTkxNV9wZXJmX2luaXQgLSBpbml0aWFsaXplIGk5MTUtcGVy
ZiBzdGF0ZSBvbiBtb2R1bGUgbG9hZAotICogQGRldl9wcml2OiBpOTE1IGRldmljZSBpbnN0YW5j
ZQorICogQGk5MTU6IGk5MTUgZGV2aWNlIGluc3RhbmNlCiAgKgogICogSW5pdGlhbGl6ZXMgaTkx
NS1wZXJmIHN0YXRlIHdpdGhvdXQgZXhwb3NpbmcgYW55dGhpbmcgdG8gdXNlcnNwYWNlLgogICoK
ICAqIE5vdGU6IGk5MTUtcGVyZiBpbml0aWFsaXphdGlvbiBpcyBzcGxpdCBpbnRvIGFuICdpbml0
JyBhbmQgJ3JlZ2lzdGVyJwogICogcGhhc2Ugd2l0aCB0aGUgaTkxNV9wZXJmX3JlZ2lzdGVyKCkg
ZXhwb3Npbmcgc3RhdGUgdG8gdXNlcnNwYWNlLgogICovCi12b2lkIGk5MTVfcGVyZl9pbml0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKLXsKLQlpZiAoSVNfSEFTV0VMTChkZXZf
cHJpdikpIHsKLQkJZGV2X3ByaXYtPnBlcmYub3BzLmlzX3ZhbGlkX2JfY291bnRlcl9yZWcgPQot
CQkJZ2VuN19pc192YWxpZF9iX2NvdW50ZXJfYWRkcjsKLQkJZGV2X3ByaXYtPnBlcmYub3BzLmlz
X3ZhbGlkX211eF9yZWcgPQotCQkJaHN3X2lzX3ZhbGlkX211eF9hZGRyOwotCQlkZXZfcHJpdi0+
cGVyZi5vcHMuaXNfdmFsaWRfZmxleF9yZWcgPSBOVUxMOwotCQlkZXZfcHJpdi0+cGVyZi5vcHMu
ZW5hYmxlX21ldHJpY19zZXQgPSBoc3dfZW5hYmxlX21ldHJpY19zZXQ7Ci0JCWRldl9wcml2LT5w
ZXJmLm9wcy5kaXNhYmxlX21ldHJpY19zZXQgPSBoc3dfZGlzYWJsZV9tZXRyaWNfc2V0OwotCQlk
ZXZfcHJpdi0+cGVyZi5vcHMub2FfZW5hYmxlID0gZ2VuN19vYV9lbmFibGU7Ci0JCWRldl9wcml2
LT5wZXJmLm9wcy5vYV9kaXNhYmxlID0gZ2VuN19vYV9kaXNhYmxlOwotCQlkZXZfcHJpdi0+cGVy
Zi5vcHMucmVhZCA9IGdlbjdfb2FfcmVhZDsKLQkJZGV2X3ByaXYtPnBlcmYub3BzLm9hX2h3X3Rh
aWxfcmVhZCA9Ci0JCQlnZW43X29hX2h3X3RhaWxfcmVhZDsKLQotCQlkZXZfcHJpdi0+cGVyZi5v
YV9mb3JtYXRzID0gaHN3X29hX2Zvcm1hdHM7Ci0JfSBlbHNlIGlmIChIQVNfTE9HSUNBTF9SSU5H
X0NPTlRFWFRTKGRldl9wcml2KSkgewordm9pZCBpOTE1X3BlcmZfaW5pdChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlzdHJ1Y3QgaTkxNV9wZXJmICpwZXJmID0gJmk5MTUtPnBl
cmY7CisKKwkvKiBYWFggY29uc3Qgc3RydWN0IGk5MTVfcGVyZl9vcHMhICovCisKKwlpZiAoSVNf
SEFTV0VMTChpOTE1KSkgeworCQlwZXJmLT5vcHMuaXNfdmFsaWRfYl9jb3VudGVyX3JlZyA9IGdl
bjdfaXNfdmFsaWRfYl9jb3VudGVyX2FkZHI7CisJCXBlcmYtPm9wcy5pc192YWxpZF9tdXhfcmVn
ID0gaHN3X2lzX3ZhbGlkX211eF9hZGRyOworCQlwZXJmLT5vcHMuaXNfdmFsaWRfZmxleF9yZWcg
PSBOVUxMOworCQlwZXJmLT5vcHMuZW5hYmxlX21ldHJpY19zZXQgPSBoc3dfZW5hYmxlX21ldHJp
Y19zZXQ7CisJCXBlcmYtPm9wcy5kaXNhYmxlX21ldHJpY19zZXQgPSBoc3dfZGlzYWJsZV9tZXRy
aWNfc2V0OworCQlwZXJmLT5vcHMub2FfZW5hYmxlID0gZ2VuN19vYV9lbmFibGU7CisJCXBlcmYt
Pm9wcy5vYV9kaXNhYmxlID0gZ2VuN19vYV9kaXNhYmxlOworCQlwZXJmLT5vcHMucmVhZCA9IGdl
bjdfb2FfcmVhZDsKKwkJcGVyZi0+b3BzLm9hX2h3X3RhaWxfcmVhZCA9IGdlbjdfb2FfaHdfdGFp
bF9yZWFkOworCisJCXBlcmYtPm9hX2Zvcm1hdHMgPSBoc3dfb2FfZm9ybWF0czsKKwl9IGVsc2Ug
aWYgKEhBU19MT0dJQ0FMX1JJTkdfQ09OVEVYVFMoaTkxNSkpIHsKIAkJLyogTm90ZTogdGhhdCBh
bHRob3VnaCB3ZSBjb3VsZCB0aGVvcmV0aWNhbGx5IGFsc28gc3VwcG9ydCB0aGUKIAkJICogbGVn
YWN5IHJpbmdidWZmZXIgbW9kZSBvbiBCRFcgKGFuZCBlYXJsaWVyIGl0ZXJhdGlvbnMgb2YKIAkJ
ICogdGhpcyBkcml2ZXIsIGJlZm9yZSB1cHN0cmVhbWluZyBkaWQgdGhpcykgaXQgZGlkbid0IHNl
ZW0KIAkJICogd29ydGggdGhlIGNvbXBsZXhpdHkgdG8gbWFpbnRhaW4gbm93IHRoYXQgQkRXKyBl
bmFibGUKIAkJICogZXhlY2xpc3QgbW9kZSBieSBkZWZhdWx0LgogCQkgKi8KLQkJZGV2X3ByaXYt
PnBlcmYub2FfZm9ybWF0cyA9IGdlbjhfcGx1c19vYV9mb3JtYXRzOworCQlwZXJmLT5vYV9mb3Jt
YXRzID0gZ2VuOF9wbHVzX29hX2Zvcm1hdHM7CiAKLQkJZGV2X3ByaXYtPnBlcmYub3BzLm9hX2Vu
YWJsZSA9IGdlbjhfb2FfZW5hYmxlOwotCQlkZXZfcHJpdi0+cGVyZi5vcHMub2FfZGlzYWJsZSA9
IGdlbjhfb2FfZGlzYWJsZTsKLQkJZGV2X3ByaXYtPnBlcmYub3BzLnJlYWQgPSBnZW44X29hX3Jl
YWQ7Ci0JCWRldl9wcml2LT5wZXJmLm9wcy5vYV9od190YWlsX3JlYWQgPSBnZW44X29hX2h3X3Rh
aWxfcmVhZDsKKwkJcGVyZi0+b3BzLm9hX2VuYWJsZSA9IGdlbjhfb2FfZW5hYmxlOworCQlwZXJm
LT5vcHMub2FfZGlzYWJsZSA9IGdlbjhfb2FfZGlzYWJsZTsKKwkJcGVyZi0+b3BzLnJlYWQgPSBn
ZW44X29hX3JlYWQ7CisJCXBlcmYtPm9wcy5vYV9od190YWlsX3JlYWQgPSBnZW44X29hX2h3X3Rh
aWxfcmVhZDsKIAotCQlpZiAoSVNfR0VOX1JBTkdFKGRldl9wcml2LCA4LCA5KSkgewotCQkJZGV2
X3ByaXYtPnBlcmYub3BzLmlzX3ZhbGlkX2JfY291bnRlcl9yZWcgPQorCQlpZiAoSVNfR0VOX1JB
TkdFKGk5MTUsIDgsIDkpKSB7CisJCQlwZXJmLT5vcHMuaXNfdmFsaWRfYl9jb3VudGVyX3JlZyA9
CiAJCQkJZ2VuN19pc192YWxpZF9iX2NvdW50ZXJfYWRkcjsKLQkJCWRldl9wcml2LT5wZXJmLm9w
cy5pc192YWxpZF9tdXhfcmVnID0KKwkJCXBlcmYtPm9wcy5pc192YWxpZF9tdXhfcmVnID0KIAkJ
CQlnZW44X2lzX3ZhbGlkX211eF9hZGRyOwotCQkJZGV2X3ByaXYtPnBlcmYub3BzLmlzX3ZhbGlk
X2ZsZXhfcmVnID0KKwkJCXBlcmYtPm9wcy5pc192YWxpZF9mbGV4X3JlZyA9CiAJCQkJZ2VuOF9p
c192YWxpZF9mbGV4X2FkZHI7CiAKLQkJCWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSkgewot
CQkJCWRldl9wcml2LT5wZXJmLm9wcy5pc192YWxpZF9tdXhfcmVnID0KKwkJCWlmIChJU19DSEVS
UllWSUVXKGk5MTUpKSB7CisJCQkJcGVyZi0+b3BzLmlzX3ZhbGlkX211eF9yZWcgPQogCQkJCQlj
aHZfaXNfdmFsaWRfbXV4X2FkZHI7CiAJCQl9CiAKLQkJCWRldl9wcml2LT5wZXJmLm9wcy5lbmFi
bGVfbWV0cmljX3NldCA9IGdlbjhfZW5hYmxlX21ldHJpY19zZXQ7Ci0JCQlkZXZfcHJpdi0+cGVy
Zi5vcHMuZGlzYWJsZV9tZXRyaWNfc2V0ID0gZ2VuOF9kaXNhYmxlX21ldHJpY19zZXQ7CisJCQlw
ZXJmLT5vcHMuZW5hYmxlX21ldHJpY19zZXQgPSBnZW44X2VuYWJsZV9tZXRyaWNfc2V0OworCQkJ
cGVyZi0+b3BzLmRpc2FibGVfbWV0cmljX3NldCA9IGdlbjhfZGlzYWJsZV9tZXRyaWNfc2V0Owog
Ci0JCQlpZiAoSVNfR0VOKGRldl9wcml2LCA4KSkgewotCQkJCWRldl9wcml2LT5wZXJmLmN0eF9v
YWN0eGN0cmxfb2Zmc2V0ID0gMHgxMjA7Ci0JCQkJZGV2X3ByaXYtPnBlcmYuY3R4X2ZsZXhldTBf
b2Zmc2V0ID0gMHgyY2U7CisJCQlpZiAoSVNfR0VOKGk5MTUsIDgpKSB7CisJCQkJcGVyZi0+Y3R4
X29hY3R4Y3RybF9vZmZzZXQgPSAweDEyMDsKKwkJCQlwZXJmLT5jdHhfZmxleGV1MF9vZmZzZXQg
PSAweDJjZTsKIAotCQkJCWRldl9wcml2LT5wZXJmLmdlbjhfdmFsaWRfY3R4X2JpdCA9IEJJVCgy
NSk7CisJCQkJcGVyZi0+Z2VuOF92YWxpZF9jdHhfYml0ID0gQklUKDI1KTsKIAkJCX0gZWxzZSB7
Ci0JCQkJZGV2X3ByaXYtPnBlcmYuY3R4X29hY3R4Y3RybF9vZmZzZXQgPSAweDEyODsKLQkJCQlk
ZXZfcHJpdi0+cGVyZi5jdHhfZmxleGV1MF9vZmZzZXQgPSAweDNkZTsKKwkJCQlwZXJmLT5jdHhf
b2FjdHhjdHJsX29mZnNldCA9IDB4MTI4OworCQkJCXBlcmYtPmN0eF9mbGV4ZXUwX29mZnNldCA9
IDB4M2RlOwogCi0JCQkJZGV2X3ByaXYtPnBlcmYuZ2VuOF92YWxpZF9jdHhfYml0ID0gQklUKDE2
KTsKKwkJCQlwZXJmLT5nZW44X3ZhbGlkX2N0eF9iaXQgPSBCSVQoMTYpOwogCQkJfQotCQl9IGVs
c2UgaWYgKElTX0dFTl9SQU5HRShkZXZfcHJpdiwgMTAsIDExKSkgewotCQkJZGV2X3ByaXYtPnBl
cmYub3BzLmlzX3ZhbGlkX2JfY291bnRlcl9yZWcgPQorCQl9IGVsc2UgaWYgKElTX0dFTl9SQU5H
RShpOTE1LCAxMCwgMTEpKSB7CisJCQlwZXJmLT5vcHMuaXNfdmFsaWRfYl9jb3VudGVyX3JlZyA9
CiAJCQkJZ2VuN19pc192YWxpZF9iX2NvdW50ZXJfYWRkcjsKLQkJCWRldl9wcml2LT5wZXJmLm9w
cy5pc192YWxpZF9tdXhfcmVnID0KKwkJCXBlcmYtPm9wcy5pc192YWxpZF9tdXhfcmVnID0KIAkJ
CQlnZW4xMF9pc192YWxpZF9tdXhfYWRkcjsKLQkJCWRldl9wcml2LT5wZXJmLm9wcy5pc192YWxp
ZF9mbGV4X3JlZyA9CisJCQlwZXJmLT5vcHMuaXNfdmFsaWRfZmxleF9yZWcgPQogCQkJCWdlbjhf
aXNfdmFsaWRfZmxleF9hZGRyOwogCi0JCQlkZXZfcHJpdi0+cGVyZi5vcHMuZW5hYmxlX21ldHJp
Y19zZXQgPSBnZW44X2VuYWJsZV9tZXRyaWNfc2V0OwotCQkJZGV2X3ByaXYtPnBlcmYub3BzLmRp
c2FibGVfbWV0cmljX3NldCA9IGdlbjEwX2Rpc2FibGVfbWV0cmljX3NldDsKKwkJCXBlcmYtPm9w
cy5lbmFibGVfbWV0cmljX3NldCA9IGdlbjhfZW5hYmxlX21ldHJpY19zZXQ7CisJCQlwZXJmLT5v
cHMuZGlzYWJsZV9tZXRyaWNfc2V0ID0gZ2VuMTBfZGlzYWJsZV9tZXRyaWNfc2V0OwogCi0JCQlp
ZiAoSVNfR0VOKGRldl9wcml2LCAxMCkpIHsKLQkJCQlkZXZfcHJpdi0+cGVyZi5jdHhfb2FjdHhj
dHJsX29mZnNldCA9IDB4MTI4OwotCQkJCWRldl9wcml2LT5wZXJmLmN0eF9mbGV4ZXUwX29mZnNl
dCA9IDB4M2RlOworCQkJaWYgKElTX0dFTihpOTE1LCAxMCkpIHsKKwkJCQlwZXJmLT5jdHhfb2Fj
dHhjdHJsX29mZnNldCA9IDB4MTI4OworCQkJCXBlcmYtPmN0eF9mbGV4ZXUwX29mZnNldCA9IDB4
M2RlOwogCQkJfSBlbHNlIHsKLQkJCQlkZXZfcHJpdi0+cGVyZi5jdHhfb2FjdHhjdHJsX29mZnNl
dCA9IDB4MTI0OwotCQkJCWRldl9wcml2LT5wZXJmLmN0eF9mbGV4ZXUwX29mZnNldCA9IDB4Nzhl
OworCQkJCXBlcmYtPmN0eF9vYWN0eGN0cmxfb2Zmc2V0ID0gMHgxMjQ7CisJCQkJcGVyZi0+Y3R4
X2ZsZXhldTBfb2Zmc2V0ID0gMHg3OGU7CiAJCQl9Ci0JCQlkZXZfcHJpdi0+cGVyZi5nZW44X3Zh
bGlkX2N0eF9iaXQgPSBCSVQoMTYpOworCQkJcGVyZi0+Z2VuOF92YWxpZF9jdHhfYml0ID0gQklU
KDE2KTsKIAkJfQogCX0KIAotCWlmIChkZXZfcHJpdi0+cGVyZi5vcHMuZW5hYmxlX21ldHJpY19z
ZXQpIHsKLQkJSU5JVF9MSVNUX0hFQUQoJmRldl9wcml2LT5wZXJmLnN0cmVhbXMpOwotCQltdXRl
eF9pbml0KCZkZXZfcHJpdi0+cGVyZi5sb2NrKTsKKwlpZiAocGVyZi0+b3BzLmVuYWJsZV9tZXRy
aWNfc2V0KSB7CisJCUlOSVRfTElTVF9IRUFEKCZwZXJmLT5zdHJlYW1zKTsKKwkJbXV0ZXhfaW5p
dCgmcGVyZi0+bG9jayk7CiAKIAkJb2Ffc2FtcGxlX3JhdGVfaGFyZF9saW1pdCA9IDEwMDAgKgot
CQkJKFJVTlRJTUVfSU5GTyhkZXZfcHJpdiktPmNzX3RpbWVzdGFtcF9mcmVxdWVuY3lfa2h6IC8g
Mik7Ci0JCWRldl9wcml2LT5wZXJmLnN5c2N0bF9oZWFkZXIgPSByZWdpc3Rlcl9zeXNjdGxfdGFi
bGUoZGV2X3Jvb3QpOworCQkJKFJVTlRJTUVfSU5GTyhpOTE1KS0+Y3NfdGltZXN0YW1wX2ZyZXF1
ZW5jeV9raHogLyAyKTsKKwkJcGVyZi0+c3lzY3RsX2hlYWRlciA9IHJlZ2lzdGVyX3N5c2N0bF90
YWJsZShkZXZfcm9vdCk7CiAKLQkJbXV0ZXhfaW5pdCgmZGV2X3ByaXYtPnBlcmYubWV0cmljc19s
b2NrKTsKLQkJaWRyX2luaXQoJmRldl9wcml2LT5wZXJmLm1ldHJpY3NfaWRyKTsKKwkJbXV0ZXhf
aW5pdCgmcGVyZi0+bWV0cmljc19sb2NrKTsKKwkJaWRyX2luaXQoJnBlcmYtPm1ldHJpY3NfaWRy
KTsKIAogCQkvKiBXZSBzZXQgdXAgc29tZSByYXRlbGltaXQgc3RhdGUgdG8gcG90ZW50aWFsbHkg
dGhyb3R0bGUgYW55CiAJCSAqIF9OT1RFUyBhYm91dCBzcHVyaW91cywgaW52YWxpZCBPQSByZXBv
cnRzIHdoaWNoIHdlIGRvbid0CkBAIC0zNjM5LDQ0ICszNjMwLDQwIEBAIHZvaWQgaTkxNV9wZXJm
X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkgKgogCQkgKiBVc2lu
ZyB0aGUgc2FtZSBsaW1pdGluZyBmYWN0b3JzIGFzIHByaW50a19yYXRlbGltaXQoKQogCQkgKi8K
LQkJcmF0ZWxpbWl0X3N0YXRlX2luaXQoJmRldl9wcml2LT5wZXJmLnNwdXJpb3VzX3JlcG9ydF9y
cywKLQkJCQkgICAgIDUgKiBIWiwgMTApOworCQlyYXRlbGltaXRfc3RhdGVfaW5pdCgmcGVyZi0+
c3B1cmlvdXNfcmVwb3J0X3JzLCA1ICogSFosIDEwKTsKIAkJLyogU2luY2Ugd2UgdXNlIGEgRFJN
X05PVEUgZm9yIHNwdXJpb3VzIHJlcG9ydHMgaXQgd291bGQgYmUKIAkJICogaW5jb25zaXN0ZW50
IHRvIGxldCBfX3JhdGVsaW1pdCgpIGF1dG9tYXRpY2FsbHkgcHJpbnQgYQogCQkgKiB3YXJuaW5n
IGZvciB0aHJvdHRsaW5nLgogCQkgKi8KLQkJcmF0ZWxpbWl0X3NldF9mbGFncygmZGV2X3ByaXYt
PnBlcmYuc3B1cmlvdXNfcmVwb3J0X3JzLAorCQlyYXRlbGltaXRfc2V0X2ZsYWdzKCZwZXJmLT5z
cHVyaW91c19yZXBvcnRfcnMsCiAJCQkJICAgIFJBVEVMSU1JVF9NU0dfT05fUkVMRUFTRSk7CiAK
LQkJZGV2X3ByaXYtPnBlcmYuaW5pdGlhbGl6ZWQgPSB0cnVlOworCQlwZXJmLT5pOTE1ID0gaTkx
NTsKIAl9CiB9CiAKIHN0YXRpYyBpbnQgZGVzdHJveV9jb25maWcoaW50IGlkLCB2b2lkICpwLCB2
b2lkICpkYXRhKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRhdGE7
Ci0Jc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcgPSBwOwotCi0JcHV0X29hX2NvbmZp
ZyhkZXZfcHJpdiwgb2FfY29uZmlnKTsKLQorCXB1dF9vYV9jb25maWcocCk7CiAJcmV0dXJuIDA7
CiB9CiAKIC8qKgogICogaTkxNV9wZXJmX2ZpbmkgLSBDb3VudGVyIHBhcnQgdG8gaTkxNV9wZXJm
X2luaXQoKQotICogQGRldl9wcml2OiBpOTE1IGRldmljZSBpbnN0YW5jZQorICogQGk5MTU6IGk5
MTUgZGV2aWNlIGluc3RhbmNlCiAgKi8KLXZvaWQgaTkxNV9wZXJmX2Zpbmkoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQordm9pZCBpOTE1X3BlcmZfZmluaShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSkKIHsKLQlpZiAoIWRldl9wcml2LT5wZXJmLmluaXRpYWxpemVkKQot
CQlyZXR1cm47CisJc3RydWN0IGk5MTVfcGVyZiAqcGVyZiA9ICZpOTE1LT5wZXJmOwogCi0JaWRy
X2Zvcl9lYWNoKCZkZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2lkciwgZGVzdHJveV9jb25maWcsIGRl
dl9wcml2KTsKLQlpZHJfZGVzdHJveSgmZGV2X3ByaXYtPnBlcmYubWV0cmljc19pZHIpOworCWlm
ICghcGVyZi0+aTkxNSkKKwkJcmV0dXJuOwogCi0JdW5yZWdpc3Rlcl9zeXNjdGxfdGFibGUoZGV2
X3ByaXYtPnBlcmYuc3lzY3RsX2hlYWRlcik7CisJaWRyX2Zvcl9lYWNoKCZwZXJmLT5tZXRyaWNz
X2lkciwgZGVzdHJveV9jb25maWcsIHBlcmYpOworCWlkcl9kZXN0cm95KCZwZXJmLT5tZXRyaWNz
X2lkcik7CiAKLQltZW1zZXQoJmRldl9wcml2LT5wZXJmLm9wcywgMCwgc2l6ZW9mKGRldl9wcml2
LT5wZXJmLm9wcykpOworCXVucmVnaXN0ZXJfc3lzY3RsX3RhYmxlKHBlcmYtPnN5c2N0bF9oZWFk
ZXIpOwogCi0JZGV2X3ByaXYtPnBlcmYuaW5pdGlhbGl6ZWQgPSBmYWxzZTsKKwltZW1zZXQoJnBl
cmYtPm9wcywgMCwgc2l6ZW9mKHBlcmYtPm9wcykpOworCXBlcmYtPmk5MTUgPSBOVUxMOwogfQot
LSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
XwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcK
aHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

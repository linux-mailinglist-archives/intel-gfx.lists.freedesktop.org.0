Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 165CC82DA1
	for <lists+intel-gfx@lfdr.de>; Tue,  6 Aug 2019 10:22:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5E01C6E32B;
	Tue,  6 Aug 2019 08:22:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4392C6E32A
 for <intel-gfx@lists.freedesktop.org>; Tue,  6 Aug 2019 08:22:32 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17900813-1500050 
 for multiple; Tue, 06 Aug 2019 09:22:18 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  6 Aug 2019 09:22:17 +0100
Message-Id: <20190806082217.11627-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190805203032.15747-1-chris@chris-wilson.co.uk>
References: <20190805203032.15747-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Defer final intel_wakeref_put to
 process context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgd2UgbmVlZCB0byBhY3F1aXJlIGEgbXV0ZXggdG8gc2VyaWFsaXNlIHRoZSBmaW5hbAppbnRl
bF93YWtlcmVmX3B1dCwgd2UgbmVlZCB0byBlbnN1cmUgdGhhdCB3ZSBhcmUgaW4gcHJvY2VzcyBj
b250ZXh0IGF0CnRoYXQgdGltZS4gSG93ZXZlciwgd2Ugd2FudCB0byBhbGxvdyBvcGVyYXRpb24g
b24gdGhlIGludGVsX3dha2VyZWYgZnJvbQppbnNpZGUgdGltZXIgYW5kIG90aGVyIGhhcmRpcnEg
Y29udGV4dCwgd2hpY2ggbWVhbnMgdGhhdCBuZWVkIHRvIGRlZmVyCnRoYXQgZmluYWwgcHV0IHRv
IGEgd29ya3F1ZXVlLgoKSW5zaWRlIHRoZSBmaW5hbCB3YWtlcmVmIHB1dHMsIHdlIGFyZSBzYWZl
IHRvIG9wZXJhdGUgaW4gYW55IGNvbnRleHQsIGFzCndlIGFyZSBzaW1wbHkgbWFya2luZyB1cCB0
aGUgSFcgYW5kIHN0YXRlIHRyYWNraW5nIGZvciB0aGUgcG90ZW50aWFsCnNsZWVwLiBJdCdzIG9u
bHkgdGhlIHNlcmlhbGlzYXRpb24gd2l0aCB0aGUgcG90ZW50aWFsIHNsZWVwaW5nIGdldHRpbmcK
dGhhdCByZXF1aXJlcyBjYXJlZnVsIHdhaXQgYXZvaWRhbmNlLiBUaGlzIGFsbG93cyB1cyB0byBy
ZXRhaW4gdGhlCmltbWVkaWF0ZSBwcm9jZXNzaW5nIGFzIGJlZm9yZSAod2Ugb25seSBuZWVkIHRv
IHNsZWVwIG92ZXIgdGhlIHNhbWUKcmFjZXMgYXMgdGhlIGN1cnJlbnQgbXV0ZXhfbG9jaykuCgp2
MjogQWRkIGEgc2VsZnRlc3QgdG8gZW5zdXJlIHdlIGV4ZXJjaXNlIHRoZSBjb2RlIHdoaWxlIGxv
Y2tkZXAgd2F0Y2hlcy4KdjM6IFRoYXQgdGVzdCB3YXMgZXh0cmVtZWx5IGxvdWQgYW5kIGNvbXBs
YWluZWQgYWJvdXQgbWFueSB0aGluZ3MhCgpCdWd6aWxsYTogaHR0cHM6Ly9idWdzLmZyZWVkZXNr
dG9wLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTExMjk1ClJlZmVyZW5jZXM6IGh0dHBzOi8vYnVncy5m
cmVlZGVza3RvcC5vcmcvc2hvd19idWcuY2dpP2lkPTExMTI0NQpGaXhlczogMTgzOTg5MDRjYTll
ICgiZHJtL2k5MTU6IE9ubHkgcmVjb3ZlciBhY3RpdmUgZW5naW5lcyIpCkZpeGVzOiA1MWZiZDhk
ZTg3ZGMgKCJkcm0vaTkxNS9wbXU6IEF0b21pY2FsbHkgYWNxdWlyZSB0aGUgZ3RfcG0gd2FrZXJl
ZiIpClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KQ2M6IE1pa2Eg
S3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29tPgotLS0KTm90ZSB0aGF0IGln
dCBpcyBtaXN1aW5nIERST1BfSURMRSBmcm9tIHBhcmFsbGVsIGZvcmtlZCBzdWJtaXNzaW9ucy4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyAgICAgICAgfCAxMyAr
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jICAgICB8ICAxICsK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jICAgICB8IDM4ICsrKy0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmggICAgIHwgMTgg
KystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYyAgICAgICAgIHwgMjgg
KysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaCAgICAgICAgIHwg
MjIgKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgICB8
ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYyAgICAgfCAy
OCArKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuaCAgICAg
fCAxNCArKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYyAg
fCA4MyArKysrKysrKysrKysrKysrKysrCiAuLi4vZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1
Y19zdWJtaXNzaW9uLmMgfCAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2Zz
LmMgICAgICAgICAgIHwgIDQgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAg
ICAgICAgICAgIHwgMjYgKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVm
LmMgICAgICAgICAgfCA4MiArKysrKysrKysrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3dha2VyZWYuaCAgICAgICAgICB8IDYyICsrKysrKysrKy0tLS0tCiAuLi4vZHJtL2k5
MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCAgfCAgNSArLQogMTYgZmlsZXMgY2hh
bmdlZCwgMzAxIGluc2VydGlvbnMoKyksIDEzMSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYwogY3JlYXRlIG1v
ZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5oCiBjcmVh
dGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX3Bt
LmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCmluZGV4IDcyOTIyNzAzYWY0
OS4uMTdlMzYxODI0MWM1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYwpA
QCAtMTMwLDcgKzEzMCw5IEBAIHN0YXRpYyBib29sIHN3aXRjaF90b19rZXJuZWxfY29udGV4dF9z
eW5jKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJCX0KIAl9IHdoaWxlIChpOTE1X3JldGlyZV9yZXF1
ZXN0cyhndC0+aTkxNSkgJiYgcmVzdWx0KTsKIAotCUdFTV9CVUdfT04oZ3QtPmF3YWtlKTsKKwlp
ZiAoaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZShndCkpCisJCXJlc3VsdCA9IGZhbHNlOworCiAJ
cmV0dXJuIHJlc3VsdDsKIH0KIApAQCAtMTYxLDEzICsxNjMsNiBAQCB2b2lkIGk5MTVfZ2VtX3N1
c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIAltdXRleF91bmxvY2soJmk5
MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCi0JLyoKLQkgKiBBc3NlcnQgdGhhdCB3ZSBzdWNjZXNz
ZnVsbHkgZmx1c2hlZCBhbGwgdGhlIHdvcmsgYW5kCi0JICogcmVzZXQgdGhlIEdQVSBiYWNrIHRv
IGl0cyBpZGxlLCBsb3cgcG93ZXIgc3RhdGUuCi0JICovCi0JR0VNX0JVR19PTihpOTE1LT5ndC5h
d2FrZSk7Ci0JZmx1c2hfd29yaygmaTkxNS0+Z2VtLmlkbGVfd29yayk7Ci0KIAljYW5jZWxfZGVs
YXllZF93b3JrX3N5bmMoJmk5MTUtPmd0LmhhbmdjaGVjay53b3JrKTsKIAogCWk5MTVfZ2VtX2Ry
YWluX2ZyZWVkX29iamVjdHMoaTkxNSk7CkBAIC0yNDQsOCArMjM5LDYgQEAgdm9pZCBpOTE1X2dl
bV9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJR0VNX1RSQUNFKCJc
biIpOwogCi0JV0FSTl9PTihpOTE1LT5ndC5hd2FrZSk7Ci0KIAltdXRleF9sb2NrKCZpOTE1LT5k
cm0uc3RydWN0X211dGV4KTsKIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldCgmaTkxNS0+dW5j
b3JlLCBGT1JDRVdBS0VfQUxMKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfY3MuYwppbmRleCBhOTFmMTU3MTdjYzEuLjQxNGIwZGJiM2EyMCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTE2NzIsNSArMTY3Miw2IEBAIGludGVs
X2VuZ2luZV9maW5kX2FjdGl2ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKIH0KIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQorI2luY2x1
ZGUgInNlbGZ0ZXN0X2VuZ2luZS5jIgogI2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZV9jcy5jIgog
I2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
cG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCmluZGV4IDAz
MzYyMDQ5ODhkNi4uNmIxNWUzMzM1ZGQ2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfcG0uYwpAQCAtMzcsMjggKzM3LDYgQEAgc3RhdGljIGludCBfX2VuZ2luZV91bnBh
cmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVs
X2VuZ2luZV9wbV9nZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWludGVs
X3dha2VyZWZfZ2V0KCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYs
IF9fZW5naW5lX3VucGFyayk7Ci19Ci0KLXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCS8qCi0JICogV2UgYXJlIGNvbW1pdHRlZCBub3cg
dG8gcGFya2luZyB0aGlzIGVuZ2luZSwgbWFrZSBzdXJlIHRoZXJlCi0JICogd2lsbCBiZSBubyBt
b3JlIGludGVycnVwdHMgYXJyaXZpbmcgbGF0ZXIgYW5kIHRoZSBlbmdpbmUKLQkgKiBpcyB0cnVs
eSBpZGxlLgotCSAqLwotCWlmICh3YWl0X2ZvcihpbnRlbF9lbmdpbmVfaXNfaWRsZShlbmdpbmUp
LCAxMCkpIHsKLQkJc3RydWN0IGRybV9wcmludGVyIHAgPSBkcm1fZGVidWdfcHJpbnRlcihfX2Z1
bmNfXyk7Ci0KLQkJZGV2X2VycihlbmdpbmUtPmk5MTUtPmRybS5kZXYsCi0JCQkiJXMgaXMgbm90
IGlkbGUgYmVmb3JlIHBhcmtpbmdcbiIsCi0JCQllbmdpbmUtPm5hbWUpOwotCQlpbnRlbF9lbmdp
bmVfZHVtcChlbmdpbmUsICZwLCBOVUxMKTsKLQl9Ci19Ci0KIHN0YXRpYyBib29sIHN3aXRjaF90
b19rZXJuZWxfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnE7CkBAIC0xMzYsMTIgKzExNCwxOCBAQCBzdGF0aWMgaW50IF9f
ZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12
b2lkIGludGVsX2VuZ2luZV9wbV9wdXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQot
ewotCWludGVsX3dha2VyZWZfcHV0KCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUt
Pndha2VyZWYsIF9fZW5naW5lX3BhcmspOwotfQorc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF93
YWtlcmVmX29wcyB3Zl9vcHMgPSB7CisJLmdldCA9IF9fZW5naW5lX3VucGFyaywKKwkucHV0ID0g
X19lbmdpbmVfcGFyaywKK307CiAKIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfX3BtKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlpbnRlbF93YWtlcmVmX2luaXQoJmVuZ2luZS0+
d2FrZXJlZik7CisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZlbmdpbmUtPmk5MTUt
PnJ1bnRpbWVfcG07CisKKwlpbnRlbF93YWtlcmVmX2luaXQoJmVuZ2luZS0+d2FrZXJlZiwgcnBt
LCAmd2Zfb3BzKTsKIH0KKworI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNU
KQorI2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZV9wbS5jIgorI2VuZGlmCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5oCmluZGV4IDAxNWFjNzJkN2FkMC4uNzM5YzUwZmVm
Y2VmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0u
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaApAQCAtMTAs
MjQgKzEwLDI2IEBACiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3R5cGVzLmgiCiAjaW5jbHVkZSAi
aW50ZWxfd2FrZXJlZi5oIgogCi1zdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKLQotdm9pZCBpbnRl
bF9lbmdpbmVfcG1fZ2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7Ci12b2lkIGlu
dGVsX2VuZ2luZV9wbV9wdXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKLQogc3Rh
dGljIGlubGluZSBib29sCiBpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoY29uc3Qgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2lzX2FjdGl2
ZSgmZW5naW5lLT53YWtlcmVmKTsKIH0KIAotc3RhdGljIGlubGluZSBib29sCi1pbnRlbF9lbmdp
bmVfcG1fZ2V0X2lmX2F3YWtlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRp
YyBpbmxpbmUgdm9pZCBpbnRlbF9lbmdpbmVfcG1fZ2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKK3sKKwlpbnRlbF93YWtlcmVmX2dldCgmZW5naW5lLT53YWtlcmVmKTsKK30KKwor
c3RhdGljIGlubGluZSBib29sIGludGVsX2VuZ2luZV9wbV9nZXRfaWZfYXdha2Uoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2dldF9pZl9h
Y3RpdmUoJmVuZ2luZS0+d2FrZXJlZik7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9l
bmdpbmVfcG1fcHV0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpbnRlbF93
YWtlcmVmX3B1dCgmZW5naW5lLT53YWtlcmVmKTsKK30KIAogdm9pZCBpbnRlbF9lbmdpbmVfaW5p
dF9fcG0oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2d0X3BtLmMKaW5kZXggNmM4OTcwMjcxYTdmLi4xMzYzZTA2OWVjODMgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwpAQCAtMTcsNyArMTcsNyBAQCBzdGF0aWMg
dm9pZCBwbV9ub3RpZnkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludCBzdGF0ZSkK
IAlibG9ja2luZ19ub3RpZmllcl9jYWxsX2NoYWluKCZpOTE1LT5ndC5wbV9ub3RpZmljYXRpb25z
LCBzdGF0ZSwgaTkxNSk7CiB9CiAKLXN0YXRpYyBpbnQgaW50ZWxfZ3RfdW5wYXJrKHN0cnVjdCBp
bnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyBpbnQgX19ndF91bnBhcmsoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBjb250YWluZXJfb2Yod2YsIHR5
cGVvZigqZ3QpLCB3YWtlcmVmKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGd0
LT5pOTE1OwpAQCAtNTMsMTQgKzUzLDcgQEAgc3RhdGljIGludCBpbnRlbF9ndF91bnBhcmsoc3Ry
dWN0IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2d0X3Bt
X2dldChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpy
cG0gPSAmZ3QtPmk5MTUtPnJ1bnRpbWVfcG07Ci0KLQlpbnRlbF93YWtlcmVmX2dldChycG0sICZn
dC0+d2FrZXJlZiwgaW50ZWxfZ3RfdW5wYXJrKTsKLX0KLQotc3RhdGljIGludCBpbnRlbF9ndF9w
YXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyBpbnQgX19ndF9wYXJrKHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9
CiAJCWNvbnRhaW5lcl9vZih3ZiwgdHlwZW9mKCppOTE1KSwgZ3Qud2FrZXJlZik7CkBAIC03NCwy
MiArNjcsMjUgQEAgc3RhdGljIGludCBpbnRlbF9ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVm
ICp3ZikKIAlpZiAoSU5URUxfR0VOKGk5MTUpID49IDYpCiAJCWdlbjZfcnBzX2lkbGUoaTkxNSk7
CiAKKwkvKiBFdmVyeXRoaW5nIHN3aXRjaGVkIG9mZiwgZmx1c2ggYW55IHJlc2lkdWFsIGludGVy
cnVwdCBqdXN0IGluIGNhc2UgKi8KKwlpbnRlbF9zeW5jaHJvbml6ZV9pcnEoaTkxNSk7CisKIAlH
RU1fQlVHX09OKCF3YWtlcmVmKTsKIAlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChpOTE1LCBQT1dF
Ul9ET01BSU5fR1RfSVJRLCB3YWtlcmVmKTsKIAogCXJldHVybiAwOwogfQogCi12b2lkIGludGVs
X2d0X3BtX3B1dChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtICpycG0gPSAmZ3QtPmk5MTUtPnJ1bnRpbWVfcG07Ci0KLQlpbnRlbF93YWtlcmVmX3B1dChy
cG0sICZndC0+d2FrZXJlZiwgaW50ZWxfZ3RfcGFyayk7Ci19CitzdGF0aWMgY29uc3Qgc3RydWN0
IGludGVsX3dha2VyZWZfb3BzIHdmX29wcyA9IHsKKwkuZ2V0ID0gX19ndF91bnBhcmssCisJLnB1
dCA9IF9fZ3RfcGFyaywKKwkuZmxhZ3MgPSBJTlRFTF9XQUtFUkVGX1BVVF9BU1lOQywKK307CiAK
IHZvaWQgaW50ZWxfZ3RfcG1faW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewotCWlu
dGVsX3dha2VyZWZfaW5pdCgmZ3QtPndha2VyZWYpOworCWludGVsX3dha2VyZWZfaW5pdCgmZ3Qt
Pndha2VyZWYsICZndC0+aTkxNS0+cnVudGltZV9wbSwgJndmX29wcyk7CisKIAlCTE9DS0lOR19J
TklUX05PVElGSUVSX0hFQUQoJmd0LT5wbV9ub3RpZmljYXRpb25zKTsKIH0KIApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2d0X3BtLmgKaW5kZXggZThhMThkNGIyN2M5Li41NzYzM2Y1MzhkZGIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaApAQCAtMTcsMTQgKzE3LDMyIEBA
IGVudW0gewogCUlOVEVMX0dUX1BBUkssCiB9OwogCi12b2lkIGludGVsX2d0X3BtX2dldChzdHJ1
Y3QgaW50ZWxfZ3QgKmd0KTsKLXZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAq
Z3QpOworc3RhdGljIGlubGluZSBib29sCitpbnRlbF9ndF9wbV9pc19hd2FrZShjb25zdCBzdHJ1
Y3QgaW50ZWxfZ3QgKmd0KQoreworCXJldHVybiBpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSgmZ3Qt
Pndha2VyZWYpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZ3RfcG1fZ2V0KHN0cnVj
dCBpbnRlbF9ndCAqZ3QpCit7CisJaW50ZWxfd2FrZXJlZl9nZXQoJmd0LT53YWtlcmVmKTsKK30K
IAogc3RhdGljIGlubGluZSBib29sIGludGVsX2d0X3BtX2dldF9pZl9hd2FrZShzdHJ1Y3QgaW50
ZWxfZ3QgKmd0KQogewogCXJldHVybiBpbnRlbF93YWtlcmVmX2dldF9pZl9hY3RpdmUoJmd0LT53
YWtlcmVmKTsKIH0KIAorc3RhdGljIGlubGluZSB2b2lkIGludGVsX2d0X3BtX3B1dChzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0KQoreworCWludGVsX3dha2VyZWZfcHV0KCZndC0+d2FrZXJlZik7Cit9CisK
K3N0YXRpYyBpbmxpbmUgaW50IGludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVs
X2d0ICpndCkKK3sKKwlyZXR1cm4gaW50ZWxfd2FrZXJlZl93YWl0X2Zvcl9pZGxlKCZndC0+d2Fr
ZXJlZik7Cit9CisKIHZvaWQgaW50ZWxfZ3RfcG1faW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0KTsKIAogdm9pZCBpbnRlbF9ndF9zYW5pdGl6ZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBib29s
IGZvcmNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXggMjMyZjQwZmNiNDkw
Li4xYTAxMTY3NTFkMTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0xMzks
NiArMTM5LDcgQEAKICNpbmNsdWRlICJpOTE1X3ZncHUuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdp
bmVfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9ndC5oIgorI2luY2x1ZGUgImludGVsX2d0X3BtLmgi
CiAjaW5jbHVkZSAiaW50ZWxfbHJjX3JlZy5oIgogI2luY2x1ZGUgImludGVsX21vY3MuaCIKICNp
bmNsdWRlICJpbnRlbF9yZXNldC5oIgpAQCAtNTU2LDYgKzU1Nyw3IEBAIGV4ZWNsaXN0c19zY2hl
ZHVsZV9pbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGlkeCkKIAkJaW50ZWxfY29udGV4
dF9nZXQoY2UpOwogCQljZS0+aW5mbGlnaHQgPSBycS0+ZW5naW5lOwogCisJCWludGVsX2d0X3Bt
X2dldChjZS0+aW5mbGlnaHQtPmd0KTsKIAkJZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5n
ZShycSwgSU5URUxfQ09OVEVYVF9TQ0hFRFVMRV9JTik7CiAJCWludGVsX2VuZ2luZV9jb250ZXh0
X2luKGNlLT5pbmZsaWdodCk7CiAJfQpAQCAtNTg4LDYgKzU5MCw3IEBAIGV4ZWNsaXN0c19zY2hl
ZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJaWYgKCFpbnRlbF9jb250ZXh0X2lu
ZmxpZ2h0X2NvdW50KGNlKSkgewogCQlpbnRlbF9lbmdpbmVfY29udGV4dF9vdXQoY2UtPmluZmxp
Z2h0KTsKIAkJZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShycSwgSU5URUxfQ09OVEVY
VF9TQ0hFRFVMRV9PVVQpOworCQlpbnRlbF9ndF9wbV9wdXQoY2UtPmluZmxpZ2h0LT5ndCk7CiAK
IAkJLyoKIAkJICogSWYgdGhpcyBpcyBwYXJ0IG9mIGEgdmlydHVhbCBlbmdpbmUsIGl0cyBuZXh0
IHJlcXVlc3QgbWF5CkBAIC0yNzE5LDcgKzI3MjIsNiBAQCBzdGF0aWMgdTMyICpnZW44X2VtaXRf
ZmluaV9icmVhZGNydW1iX3JjcyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNz
KQogc3RhdGljIHZvaWQgZXhlY2xpc3RzX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKQogewogCWRlbF90aW1lcl9zeW5jKCZlbmdpbmUtPmV4ZWNsaXN0cy50aW1lcik7Ci0JaW50
ZWxfZW5naW5lX3BhcmsoZW5naW5lKTsKIH0KIAogdm9pZCBpbnRlbF9leGVjbGlzdHNfc2V0X2Rl
ZmF1bHRfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAwMC4uZjY1YjExOGUyNjFkCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmMKQEAgLTAsMCArMSwyOCBAQAorLyoK
KyAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisgKgorICogQ29weXJpZ2h0IMKp
IDIwMTggSW50ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5o
IgorI2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZS5oIgorCitpbnQgaW50ZWxfZW5naW5lX2xpdmVf
c2VsZnRlc3RzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQoreworCXN0YXRpYyBpbnQg
KCogY29uc3QgdGVzdHNbXSkoc3RydWN0IGludGVsX2d0ICopID0geworCQlsaXZlX2VuZ2luZV9w
bV9zZWxmdGVzdHMsCisJCU5VTEwsCisJfTsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gJmk5MTUt
Pmd0OworCXR5cGVvZigqdGVzdHMpICpmbjsKKworCWZvciAoZm4gPSB0ZXN0czsgKmZuOyBmbisr
KSB7CisJCWludCBlcnI7CisKKwkJZXJyID0gKCpmbikoZ3QpOworCQlpZiAoZXJyKQorCQkJcmV0
dXJuIGVycjsKKwl9CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfZW5naW5lLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5h
YjMyZDA5ZWM1YTEKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9z
ZWxmdGVzdF9lbmdpbmUuaApAQCAtMCwwICsxLDE0IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlk
ZW50aWZpZXI6IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3Jh
dGlvbgorICovCisKKyNpZm5kZWYgU0VMRlRFU1RfRU5HSU5FX0gKKyNkZWZpbmUgU0VMRlRFU1Rf
RU5HSU5FX0gKKworc3RydWN0IGludGVsX2d0OworCitpbnQgbGl2ZV9lbmdpbmVfcG1fc2VsZnRl
c3RzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOworCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX3BtLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAwLi43NWMxOTc2MTI3MDUKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYwpAQCAtMCwwICsxLDgzIEBACisvKgorICog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAx
OCBJbnRlbCBDb3Jwb3JhdGlvbgorICovCisKKyNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCisj
aW5jbHVkZSAic2VsZnRlc3RfZW5naW5lLmgiCisjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9hdG9t
aWMuaCIKKworc3RhdGljIGludCBsaXZlX2VuZ2luZV9wbSh2b2lkICphcmcpCit7CisJc3RydWN0
IGludGVsX2d0ICpndCA9IGFyZzsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJ
ZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisKKwkvKgorCSAqIENoZWNrIHdlIGNhbiBjYWxsIGlu
dGVsX2VuZ2luZV9wbV9wdXQgZnJvbSBhbnkgY29udGV4dC4gTm8KKwkgKiBmYWlsdXJlcyBhcmUg
cmVwb3J0ZWQgZGlyZWN0bHksIGJ1dCBpZiB3ZSBtZXNzIHVwIGxvY2tkZXAgc2hvdWxkCisJICog
dGVsbCB1cy4KKwkgKi8KKwlpZiAoaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZShndCkpIHsKKwkJ
cHJfZXJyKCJVbmFibGUgdG8gZmx1c2ggR1QgcG0gYmVmb3JlIHRlc3RcbiIpOworCQlyZXR1cm4g
LUVCVVNZOworCX0KKworCUdFTV9CVUdfT04oaW50ZWxfZ3RfcG1faXNfYXdha2UoZ3QpKTsKKwlm
b3JfZWFjaF9lbmdpbmUoZW5naW5lLCBndC0+aTkxNSwgaWQpIHsKKwkJY29uc3QgdHlwZW9mKCpp
Z3RfYXRvbWljX3BoYXNlcykgKnA7CisKKwkJZm9yIChwID0gaWd0X2F0b21pY19waGFzZXM7IHAt
Pm5hbWU7IHArKykgeworCQkJLyoKKwkJCSAqIEFjcXVpc2l0aW9uIGlzIGFsd2F5cyBzeW5jaHJv
bm91cywgZXhjZXB0IGlmIHdlCisJCQkgKiBrbm93IHRoYXQgdGhlIGVuZ2luZSBpcyBhbHJlYWR5
IGF3YWxlLCBpbiB3aGljaAorCQkJICogd2Ugc2hvdWxkIHVzZSBpbnRlbF9lbmdpbmVfcG1fZ2V0
X2lmX2F3YWtlKCkgdG8KKwkJCSAqIGF0b21pY2FsbHkgZ3JhYiB0aGUgd2FrZXJlZi4KKwkJCSAq
CisJCQkgKiBJbiBwcmFjdGljZSwKKwkJCSAqICAgIGludGVsX2VuZ2luZV9wbV9nZXQoKTsKKwkJ
CSAqICAgIGludGVsX2VuZ2luZV9wbV9wdXQoKTsKKwkJCSAqIG9jY3VycyBpbiBvbmUgdGhyZWFk
LCB3aGlsZSBzaW11bHRhbmVvdXNseQorCQkJICogICAgaW50ZWxfZW5naW5lX3BtX2dldF9pZl9h
d2FrZSgpOworCQkJICogICAgaW50ZWxfZW5naW5lX3BtX3B1dCgpOworCQkJICogb2NjdXJzIGlu
IGF0b21pYyBjb250ZXh0IGluIGFub3RoZXIuCisJCQkgKi8KKwkJCUdFTV9CVUdfT04oaW50ZWxf
ZW5naW5lX3BtX2lzX2F3YWtlKGVuZ2luZSkpOworCQkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdp
bmUpOworCisJCQlwLT5jcml0aWNhbF9zZWN0aW9uX2JlZ2luKCk7CisJCQlpZiAoIWludGVsX2Vu
Z2luZV9wbV9nZXRfaWZfYXdha2UoZW5naW5lKSkKKwkJCQlwcl9lcnIoImludGVsX2VuZ2luZV9w
bV9nZXRfaWZfYXdha2UoJXMpIGZhaWxlZCB1bmRlciAlc1xuIiwKKwkJCQkgICAgICAgZW5naW5l
LT5uYW1lLCBwLT5uYW1lKTsKKwkJCWVsc2UKKwkJCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2lu
ZSk7CisJCQlpbnRlbF9lbmdpbmVfcG1fcHV0KGVuZ2luZSk7CisJCQlwLT5jcml0aWNhbF9zZWN0
aW9uX2VuZCgpOworCisJCQkvKiBlbmdpbmUgd2FrZXJlZiBpcyBzeW5jIChpbnN0YW50KSAqLwor
CQkJaWYgKGludGVsX2VuZ2luZV9wbV9pc19hd2FrZShlbmdpbmUpKSB7CisJCQkJcHJfZXJyKCIl
cyBpcyBzdGlsbCBhd2FrZSBhZnRlciBmbHVzaGluZyBwbVxuIiwKKwkJCQkgICAgICAgZW5naW5l
LT5uYW1lKTsKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0KKworCQkJLyogZ3Qgd2FrZXJlZiBp
cyBhc3luYyAoZGVmZXJyZWQgdG8gd29ya3F1ZXVlKSAqLworCQkJaWYgKGludGVsX2d0X3BtX3dh
aXRfZm9yX2lkbGUoZ3QpKSB7CisJCQkJcHJfZXJyKCJHVCBmYWlsZWQgdG8gaWRsZVxuIik7CisJ
CQkJcmV0dXJuIC1FSU5WQUw7CisJCQl9CisJCX0KKwl9CisKKwlyZXR1cm4gMDsKK30KKworaW50
IGxpdmVfZW5naW5lX3BtX3NlbGZ0ZXN0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0YXRp
YyBjb25zdCBzdHJ1Y3QgaTkxNV9zdWJ0ZXN0IHRlc3RzW10gPSB7CisJCVNVQlRFU1QobGl2ZV9l
bmdpbmVfcG0pLAorCX07CisKKwlyZXR1cm4gaW50ZWxfZ3RfbGl2ZV9zdWJ0ZXN0cyh0ZXN0cywg
Z3QpOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3Vj
X3N1Ym1pc3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJt
aXNzaW9uLmMKaW5kZXggNDEyODkyMDk2ZGFhLi40OTc4NmU3YTY0N2EgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwpAQCAtMjksNiAr
MjksNyBAQAogI2luY2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9pbnRl
bF9lbmdpbmVfcG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2luY2x1ZGUgImd0L2lu
dGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfbHJjX3JlZy5oIgogI2luY2x1ZGUgImlu
dGVsX2d1Y19zdWJtaXNzaW9uLmgiCiAKQEAgLTUzNyw2ICs1MzgsNyBAQCBzdGF0aWMgc3RydWN0
IGk5MTVfcmVxdWVzdCAqc2NoZWR1bGVfaW4oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGludCBp
ZHgpCiAJaWYgKCFycS0+aHdfY29udGV4dC0+aW5mbGlnaHQpCiAJCXJxLT5od19jb250ZXh0LT5p
bmZsaWdodCA9IHJxLT5lbmdpbmU7CiAJaW50ZWxfY29udGV4dF9pbmZsaWdodF9pbmMocnEtPmh3
X2NvbnRleHQpOworCWludGVsX2d0X3BtX2dldChycS0+ZW5naW5lLT5ndCk7CiAKIAlyZXR1cm4g
aTkxNV9yZXF1ZXN0X2dldChycSk7CiB9CkBAIC01NDksNiArNTUxLDcgQEAgc3RhdGljIHZvaWQg
c2NoZWR1bGVfb3V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCWlmICghaW50ZWxfY29udGV4
dF9pbmZsaWdodF9jb3VudChycS0+aHdfY29udGV4dCkpCiAJCXJxLT5od19jb250ZXh0LT5pbmZs
aWdodCA9IE5VTEw7CiAKKwlpbnRlbF9ndF9wbV9wdXQocnEtPmVuZ2luZS0+Z3QpOwogCWk5MTVf
cmVxdWVzdF9wdXQocnEpOwogfQogCkBAIC0xMDc2LDcgKzEwNzksNiBAQCBzdGF0aWMgdm9pZCBn
dWNfaW50ZXJydXB0c19yZWxlYXNlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAKIHN0YXRpYyB2b2lk
IGd1Y19zdWJtaXNzaW9uX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewot
CWludGVsX2VuZ2luZV9wYXJrKGVuZ2luZSk7CiAJaW50ZWxfZW5naW5lX3VucGluX2JyZWFkY3J1
bWJzX2lycShlbmdpbmUpOwogCWVuZ2luZS0+ZmxhZ3MgJj0gfkk5MTVfRU5HSU5FX05FRURTX0JS
RUFEQ1JVTUJfVEFTS0xFVDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZGVidWdmcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKaW5kZXgg
ODk1MzMzNmYyYWU1Li44ODZjMGI5NmNkZmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZGVidWdmcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdm
cy5jCkBAIC0zOSw2ICszOSw3IEBACiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9wc3IuaCIKIAog
I2luY2x1ZGUgImdlbS9pOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3Rf
cG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9yZXNldC5oIgogI2luY2x1ZGUgImd0L3VjL2ludGVs
X2d1Y19zdWJtaXNzaW9uLmgiCiAKQEAgLTM2NjksNiArMzY3MCw5IEBAIGk5MTVfZHJvcF9jYWNo
ZXNfc2V0KHZvaWQgKmRhdGEsIHU2NCB2YWwpCiAJCQlpOTE1X3JldGlyZV9yZXF1ZXN0cyhpOTE1
KTsKIAogCQltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJCWlmIChy
ZXQgPT0gMCAmJiB2YWwgJiBEUk9QX0lETEUpCisJCQlyZXQgPSBpbnRlbF9ndF9wbV93YWl0X2Zv
cl9pZGxlKCZpOTE1LT5ndCk7CiAJfQogCiAJaWYgKHZhbCAmIERST1BfUkVTRVRfQUNUSVZFICYm
IGludGVsX2d0X3Rlcm1pbmFsbHlfd2VkZ2VkKCZpOTE1LT5ndCkpCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9n
ZW0uYwppbmRleCBlYjM0ZjNlNWE3NGQuLjVlYWNlY2JkNzAwMiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5jCkBAIC04OTMsMTkgKzg5Myw2IEBAIHZvaWQgaTkxNV9nZW1fcnVudGltZV9zdXNwZW5k
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCX0KIH0KIAotc3RhdGljIGludCB3YWl0
X2Zvcl9lbmdpbmVzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCi17Ci0JaWYgKHdhaXRfZm9yKGludGVs
X2VuZ2luZXNfYXJlX2lkbGUoZ3QpLCBJOTE1X0lETEVfRU5HSU5FU19USU1FT1VUKSkgewotCQlk
ZXZfZXJyKGd0LT5pOTE1LT5kcm0uZGV2LAotCQkJIkZhaWxlZCB0byBpZGxlIGVuZ2luZXMsIGRl
Y2xhcmluZyB3ZWRnZWQhXG4iKTsKLQkJR0VNX1RSQUNFX0RVTVAoKTsKLQkJaW50ZWxfZ3Rfc2V0
X3dlZGdlZChndCk7Ci0JCXJldHVybiAtRUlPOwotCX0KLQotCXJldHVybiAwOwotfQotCiBzdGF0
aWMgbG9uZwogd2FpdF9mb3JfdGltZWxpbmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
LAogCQkgICB1bnNpZ25lZCBpbnQgZmxhZ3MsIGxvbmcgdGltZW91dCkKQEAgLTk1MywyNyArOTQw
LDIwIEBAIGludCBpOTE1X2dlbV93YWl0X2Zvcl9pZGxlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1LAogCQkJICAgdW5zaWduZWQgaW50IGZsYWdzLCBsb25nIHRpbWVvdXQpCiB7CiAJLyog
SWYgdGhlIGRldmljZSBpcyBhc2xlZXAsIHdlIGhhdmUgbm8gcmVxdWVzdHMgb3V0c3RhbmRpbmcg
Ki8KLQlpZiAoIVJFQURfT05DRShpOTE1LT5ndC5hd2FrZSkpCisJaWYgKCFpbnRlbF9ndF9wbV9p
c19hd2FrZSgmaTkxNS0+Z3QpKQogCQlyZXR1cm4gMDsKIAotCUdFTV9UUkFDRSgiZmxhZ3M9JXgg
KCVzKSwgdGltZW91dD0lbGQlcywgYXdha2U/PSVzXG4iLAorCUdFTV9UUkFDRSgiZmxhZ3M9JXgg
KCVzKSwgdGltZW91dD0lbGQlc1xuIiwKIAkJICBmbGFncywgZmxhZ3MgJiBJOTE1X1dBSVRfTE9D
S0VEID8gImxvY2tlZCIgOiAidW5sb2NrZWQiLAotCQkgIHRpbWVvdXQsIHRpbWVvdXQgPT0gTUFY
X1NDSEVEVUxFX1RJTUVPVVQgPyAiIChmb3JldmVyKSIgOiAiIiwKLQkJICB5ZXNubyhpOTE1LT5n
dC5hd2FrZSkpOworCQkgIHRpbWVvdXQsIHRpbWVvdXQgPT0gTUFYX1NDSEVEVUxFX1RJTUVPVVQg
PyAiIChmb3JldmVyKSIgOiAiIik7CiAKIAl0aW1lb3V0ID0gd2FpdF9mb3JfdGltZWxpbmVzKGk5
MTUsIGZsYWdzLCB0aW1lb3V0KTsKIAlpZiAodGltZW91dCA8IDApCiAJCXJldHVybiB0aW1lb3V0
OwogCiAJaWYgKGZsYWdzICYgSTkxNV9XQUlUX0xPQ0tFRCkgewotCQlpbnQgZXJyOwotCiAJCWxv
Y2tkZXBfYXNzZXJ0X2hlbGQoJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCi0JCWVyciA9IHdh
aXRfZm9yX2VuZ2luZXMoJmk5MTUtPmd0KTsKLQkJaWYgKGVycikKLQkJCXJldHVybiBlcnI7Ci0K
IAkJaTkxNV9yZXRpcmVfcmVxdWVzdHMoaTkxNSk7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF93YWtlcmVmLmMKaW5kZXggMDZiZDhiMjE1Y2MyLi5kNDQ0M2U4MWMxYzggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF93YWtlcmVmLmMKQEAgLTQsMjUgKzQsMjUgQEAKICAqIENvcHlyaWdodCDC
qSAyMDE5IEludGVsIENvcnBvcmF0aW9uCiAgKi8KIAorI2luY2x1ZGUgPGxpbnV4L3dhaXRfYml0
Lmg+CisKICNpbmNsdWRlICJpbnRlbF9ydW50aW1lX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2Fr
ZXJlZi5oIgogCi1zdGF0aWMgdm9pZCBycG1fZ2V0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpy
cG0sIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyB2b2lkIHJwbV9nZXQoc3RydWN0
IGludGVsX3dha2VyZWYgKndmKQogewotCXdmLT53YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9n
ZXQocnBtKTsKKwl3Zi0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KHdmLT5ycG0pOwog
fQogCi1zdGF0aWMgdm9pZCBycG1fcHV0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sIHN0
cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyB2b2lkIHJwbV9wdXQoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKQogewogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmID0gZmV0Y2hfYW5kX3pl
cm8oJndmLT53YWtlcmVmKTsKIAotCWludGVsX3J1bnRpbWVfcG1fcHV0KHJwbSwgd2FrZXJlZik7
CisJaW50ZWxfcnVudGltZV9wbV9wdXQod2YtPnJwbSwgd2FrZXJlZik7CiAJSU5URUxfV0FLRVJF
Rl9CVUdfT04oIXdha2VyZWYpOwogfQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChz
dHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkJICAgICAgc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmLAotCQkJICAgICAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCitp
bnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7
CiAJLyoKIAkgKiBUcmVhdCBnZXQvcHV0IGFzIGRpZmZlcmVudCBzdWJjbGFzc2VzLCBhcyB3ZSBt
YXkgbmVlZCB0byBydW4KQEAgLTM0LDExICszNCwxMSBAQCBpbnQgX19pbnRlbF93YWtlcmVmX2dl
dF9maXJzdChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogCWlmICghYXRvbWljX3JlYWQo
JndmLT5jb3VudCkpIHsKIAkJaW50IGVycjsKIAotCQlycG1fZ2V0KHJwbSwgd2YpOworCQlycG1f
Z2V0KHdmKTsKIAotCQllcnIgPSBmbih3Zik7CisJCWVyciA9IHdmLT5vcHMtPmdldCh3Zik7CiAJ
CWlmICh1bmxpa2VseShlcnIpKSB7Ci0JCQlycG1fcHV0KHJwbSwgd2YpOworCQkJcnBtX3B1dCh3
Zik7CiAJCQltdXRleF91bmxvY2soJndmLT5tdXRleCk7CiAJCQlyZXR1cm4gZXJyOwogCQl9CkBA
IC01MiwyNyArNTIsNjcgQEAgaW50IF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3Qoc3RydWN0IGlu
dGVsX3J1bnRpbWVfcG0gKnJwbSwKIAlyZXR1cm4gMDsKIH0KIAotaW50IF9faW50ZWxfd2FrZXJl
Zl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkJICAgICBzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YsCi0JCQkgICAgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJl
ZiAqd2YpKQorc3RhdGljIHZvaWQgX19fX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGlu
dGVsX3dha2VyZWYgKndmKQogewotCWludCBlcnI7CisJaWYgKCFhdG9taWNfZGVjX2FuZF90ZXN0
KCZ3Zi0+Y291bnQpKQorCQlnb3RvIHVubG9jazsKKworCWlmIChsaWtlbHkoIXdmLT5vcHMtPnB1
dCh3ZikpKSB7CisJCXJwbV9wdXQod2YpOworCQl3YWtlX3VwX3Zhcigmd2YtPndha2VyZWYpOwor
CX0gZWxzZSB7CisJCS8qIG9wcy0+cHV0KCkgbXVzdCBzY2hlZHVsZSBpdHMgb3duIHJlbGVhc2Ug
b24gZGVmZXJyYWwgKi8KKwkJYXRvbWljX3NldF9yZWxlYXNlKCZ3Zi0+Y291bnQsIDEpOworCX0K
IAotCWVyciA9IGZuKHdmKTsKLQlpZiAobGlrZWx5KCFlcnIpKQotCQlycG1fcHV0KHJwbSwgd2Yp
OwotCWVsc2UKLQkJYXRvbWljX2luYygmd2YtPmNvdW50KTsKK3VubG9jazoKIAltdXRleF91bmxv
Y2soJndmLT5tdXRleCk7Cit9CisKK3ZvaWQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKK3sKKwlJTlRFTF9XQUtFUkVGX0JVR19PTih3b3JrX3BlbmRp
bmcoJndmLT53b3JrKSk7CiAKLQlyZXR1cm4gZXJyOworCS8qIEFzc3VtZSB3ZSBhcmUgbm90IGlu
IHByb2Nlc3MgY29udGV4dCBhbmQgc28gY2Fubm90IHNsZWVwLiAqLworCWlmICh3Zi0+b3BzLT5m
bGFncyAmIElOVEVMX1dBS0VSRUZfUFVUX0FTWU5DIHx8CisJICAgICFtdXRleF90cnlsb2NrKCZ3
Zi0+bXV0ZXgpKSB7CisJCXNjaGVkdWxlX3dvcmsoJndmLT53b3JrKTsKKwkJcmV0dXJuOworCX0K
KworCV9fX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHdmKTsKIH0KIAotdm9pZCBfX2ludGVsX3dh
a2VyZWZfaW5pdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsIHN0cnVjdCBsb2NrX2NsYXNzX2tl
eSAqa2V5KQorc3RhdGljIHZvaWQgX19pbnRlbF93YWtlcmVmX3B1dF93b3JrKHN0cnVjdCB3b3Jr
X3N0cnVjdCAqd3JrKQogeworCXN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiA9IGNvbnRhaW5lcl9v
Zih3cmssIHR5cGVvZigqd2YpLCB3b3JrKTsKKworCWlmIChhdG9taWNfYWRkX3VubGVzcygmd2Yt
PmNvdW50LCAtMSwgMSkpCisJCXJldHVybjsKKworCW11dGV4X2xvY2soJndmLT5tdXRleCk7CisJ
X19fX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qod2YpOworfQorCit2b2lkIF9faW50ZWxfd2FrZXJl
Zl9pbml0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKKwkJCSAgc3RydWN0IGludGVsX3J1bnRp
bWVfcG0gKnJwbSwKKwkJCSAgY29uc3Qgc3RydWN0IGludGVsX3dha2VyZWZfb3BzICpvcHMsCisJ
CQkgIHN0cnVjdCBsb2NrX2NsYXNzX2tleSAqa2V5KQoreworCXdmLT5ycG0gPSBycG07CisJd2Yt
Pm9wcyA9IG9wczsKKwogCV9fbXV0ZXhfaW5pdCgmd2YtPm11dGV4LCAid2FrZXJlZiIsIGtleSk7
CiAJYXRvbWljX3NldCgmd2YtPmNvdW50LCAwKTsKIAl3Zi0+d2FrZXJlZiA9IDA7CisKKwlJTklU
X1dPUksoJndmLT53b3JrLCBfX2ludGVsX3dha2VyZWZfcHV0X3dvcmspOworfQorCitpbnQgaW50
ZWxfd2FrZXJlZl93YWl0X2Zvcl9pZGxlKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3sKKwly
ZXR1cm4gd2FpdF92YXJfZXZlbnRfa2lsbGFibGUoJndmLT53YWtlcmVmLAorCQkJCSAgICAgICAh
aW50ZWxfd2FrZXJlZl9pc19hY3RpdmUod2YpKTsKIH0KIAogc3RhdGljIHZvaWQgd2FrZXJlZl9h
dXRvX3RpbWVvdXQoc3RydWN0IHRpbWVyX2xpc3QgKnQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93
YWtlcmVmLmgKaW5kZXggMWQ2ZjU5ODZlNGU1Li41MzVhM2ExMjg2NGIgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF93YWtlcmVmLmgKQEAgLTgsMTAgKzgsMTIgQEAKICNkZWZpbmUgSU5URUxfV0FL
RVJFRl9ICiAKICNpbmNsdWRlIDxsaW51eC9hdG9taWMuaD4KKyNpbmNsdWRlIDxsaW51eC9iaXRz
Lmg+CiAjaW5jbHVkZSA8bGludXgvbXV0ZXguaD4KICNpbmNsdWRlIDxsaW51eC9yZWZjb3VudC5o
PgogI2luY2x1ZGUgPGxpbnV4L3N0YWNrZGVwb3QuaD4KICNpbmNsdWRlIDxsaW51eC90aW1lci5o
PgorI2luY2x1ZGUgPGxpbnV4L3dvcmtxdWV1ZS5oPgogCiAjaWYgSVNfRU5BQkxFRChDT05GSUdf
RFJNX0k5MTVfREVCVUcpCiAjZGVmaW5lIElOVEVMX1dBS0VSRUZfQlVHX09OKGV4cHIpIEJVR19P
TihleHByKQpAQCAtMjAsMjkgKzIyLDQyIEBACiAjZW5kaWYKIAogc3RydWN0IGludGVsX3J1bnRp
bWVfcG07CitzdHJ1Y3QgaW50ZWxfd2FrZXJlZjsKIAogdHlwZWRlZiBkZXBvdF9zdGFja19oYW5k
bGVfdCBpbnRlbF93YWtlcmVmX3Q7CiAKK3N0cnVjdCBpbnRlbF93YWtlcmVmX29wcyB7CisJaW50
ICgqZ2V0KShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOworCWludCAoKnB1dCkoc3RydWN0IGlu
dGVsX3dha2VyZWYgKndmKTsKKworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisjZGVmaW5lIElOVEVM
X1dBS0VSRUZfUFVUX0FTWU5DIEJJVCgwKQorfTsKKwogc3RydWN0IGludGVsX3dha2VyZWYgewog
CWF0b21pY190IGNvdW50OwogCXN0cnVjdCBtdXRleCBtdXRleDsKKwogCWludGVsX3dha2VyZWZf
dCB3YWtlcmVmOworCisJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbTsKKwljb25zdCBzdHJ1
Y3QgaW50ZWxfd2FrZXJlZl9vcHMgKm9wczsKKworCXN0cnVjdCB3b3JrX3N0cnVjdCB3b3JrOwog
fTsKIAogdm9pZCBfX2ludGVsX3dha2VyZWZfaW5pdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2Ys
CisJCQkgIHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCisJCQkgIGNvbnN0IHN0cnVjdCBp
bnRlbF93YWtlcmVmX29wcyAqb3BzLAogCQkJICBzdHJ1Y3QgbG9ja19jbGFzc19rZXkgKmtleSk7
Ci0jZGVmaW5lIGludGVsX3dha2VyZWZfaW5pdCh3ZikgZG8gewkJCQkJXAorI2RlZmluZSBpbnRl
bF93YWtlcmVmX2luaXQod2YsIHJwbSwgb3BzKSBkbyB7CQkJCVwKIAlzdGF0aWMgc3RydWN0IGxv
Y2tfY2xhc3Nfa2V5IF9fa2V5OwkJCQlcCiAJCQkJCQkJCQlcCi0JX19pbnRlbF93YWtlcmVmX2lu
aXQoKHdmKSwgJl9fa2V5KTsJCQkJXAorCV9faW50ZWxfd2FrZXJlZl9pbml0KCh3ZiksIChycG0p
LCAob3BzKSwgJl9fa2V5KTsJCVwKIH0gd2hpbGUgKDApCiAKLWludCBfX2ludGVsX3dha2VyZWZf
Z2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCQkgICAgICBzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YsCi0JCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmKSk7Ci1pbnQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9ydW50
aW1lX3BtICpycG0sCi0JCQkgICAgIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKLQkJCSAgICAg
aW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpOworaW50IF9faW50ZWxfd2FrZXJl
Zl9nZXRfZmlyc3Qoc3RydWN0IGludGVsX3dha2VyZWYgKndmKTsKK3ZvaWQgX19pbnRlbF93YWtl
cmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3Zik7CiAKIC8qKgogICogaW50ZWxf
d2FrZXJlZl9nZXQ6IEFjcXVpcmUgdGhlIHdha2VyZWYKQEAgLTYxLDEyICs3NiwxMCBAQCBpbnQg
X19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAg
KiBjb2RlIG90aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBpbnQKLWludGVsX3dha2VyZWZf
Z2V0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCSAgc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmLAotCQkgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKQoraW50ZWxf
d2FrZXJlZl9nZXQoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogewogCWlmICh1bmxpa2VseSgh
YXRvbWljX2luY19ub3RfemVybygmd2YtPmNvdW50KSkpCi0JCXJldHVybiBfX2ludGVsX3dha2Vy
ZWZfZ2V0X2ZpcnN0KHJwbSwgd2YsIGZuKTsKKwkJcmV0dXJuIF9faW50ZWxfd2FrZXJlZl9nZXRf
Zmlyc3Qod2YpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC0xMDIsMTYgKzExNSwxMiBAQCBpbnRlbF93
YWtlcmVmX2dldF9pZl9hY3RpdmUoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogICogUmV0dXJu
czogMCBpZiB0aGUgd2FrZXJlZiB3YXMgcmVsZWFzZWQgc3VjY2Vzc2Z1bGx5LCBvciBhIG5lZ2F0
aXZlIGVycm9yCiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwotc3RhdGljIGlubGluZSBpbnQKLWlu
dGVsX3dha2VyZWZfcHV0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCSAgc3RydWN0
IGludGVsX3dha2VyZWYgKndmLAotCQkgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAq
d2YpKQorc3RhdGljIGlubGluZSB2b2lkCitpbnRlbF93YWtlcmVmX3B1dChzdHJ1Y3QgaW50ZWxf
d2FrZXJlZiAqd2YpCiB7CiAJSU5URUxfV0FLRVJFRl9CVUdfT04oYXRvbWljX3JlYWQoJndmLT5j
b3VudCkgPD0gMCk7Ci0JaWYgKGF0b21pY19kZWNfYW5kX211dGV4X2xvY2soJndmLT5jb3VudCwg
JndmLT5tdXRleCkpCi0JCXJldHVybiBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3QocnBtLCB3Ziwg
Zm4pOwotCi0JcmV0dXJuIDA7CisJaWYgKHVubGlrZWx5KCFhdG9taWNfYWRkX3VubGVzcygmd2Yt
PmNvdW50LCAtMSwgMSkpKQorCQlfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qod2YpOwogfQogCiAv
KioKQEAgLTE1NCw2ICsxNjMsMTkgQEAgaW50ZWxfd2FrZXJlZl9pc19hY3RpdmUoY29uc3Qgc3Ry
dWN0IGludGVsX3dha2VyZWYgKndmKQogCXJldHVybiBSRUFEX09OQ0Uod2YtPndha2VyZWYpOwog
fQogCisvKioKKyAqIGludGVsX3dha2VyZWZfd2FpdF9mb3JfaWRsZTogV2FpdCB1bnRpbCB0aGUg
d2FrZXJlZiBpcyBpZGxlCisgKiBAd2Y6IHRoZSB3YWtlcmVmCisgKgorICogV2FpdCBmb3IgdGhl
IGVhcmxpZXIgYXN5bmNocm9ub3VzIHJlbGVhc2Ugb2YgdGhlIHdha2VyZWYuIE5vdGUKKyAqIHRo
aXMgd2lsbCB3YWl0IGZvciBhbnkgdGhpcmQgcGFydHkgYXMgd2VsbCwgc28gbWFrZSBzdXJlIHlv
dSBvbmx5IHdhaXQKKyAqIHdoZW4geW91IGhhdmUgY29udHJvbCBvdmVyIHRoZSB3YWtlcmVmIGFu
ZCB0cnVzdCBubyBvbmUgZWxzZSBpcyBhY3F1aXJpbmcKKyAqIGl0LgorICoKKyAqIFJldHVybjog
MCBvbiBzdWNjZXNzLCBlcnJvciBjb2RlIGlmIGtpbGxlZC4KKyAqLworaW50IGludGVsX3dha2Vy
ZWZfd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOworCiBzdHJ1Y3QgaW50
ZWxfd2FrZXJlZl9hdXRvIHsKIAlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtOwogCXN0cnVj
dCB0aW1lcl9saXN0IHRpbWVyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2Vs
ZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0
ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmgKaW5kZXggYTg0MWQzZjliZWRjLi4xY2NmMGY3MzFh
YzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVf
c2VsZnRlc3RzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2
ZV9zZWxmdGVzdHMuaApAQCAtMTIsMTAgKzEyLDExIEBACiBzZWxmdGVzdChzYW5pdHljaGVjaywg
aTkxNV9saXZlX3Nhbml0eWNoZWNrKSAvKiBrZWVwIGZpcnN0IChpZ3Qgc2VsZmNoZWNrKSAqLwog
c2VsZnRlc3QodW5jb3JlLCBpbnRlbF91bmNvcmVfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdCh3
b3JrYXJvdW5kcywgaW50ZWxfd29ya2Fyb3VuZHNfbGl2ZV9zZWxmdGVzdHMpCi1zZWxmdGVzdCh0
aW1lbGluZXMsIGludGVsX3RpbWVsaW5lX2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ3RfZW5n
aW5lcywgaW50ZWxfZW5naW5lX2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ3RfdGltZWxpbmVz
LCBpbnRlbF90aW1lbGluZV9saXZlX3NlbGZ0ZXN0cykKK3NlbGZ0ZXN0KGd0X2NvbnRleHRzLCBp
bnRlbF9jb250ZXh0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QocmVxdWVzdHMsIGk5MTVfcmVx
dWVzdF9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KGFjdGl2ZSwgaTkxNV9hY3RpdmVfbGl2ZV9z
ZWxmdGVzdHMpCi1zZWxmdGVzdChndF9jb250ZXh0cywgaW50ZWxfY29udGV4dF9saXZlX3NlbGZ0
ZXN0cykKIHNlbGZ0ZXN0KG9iamVjdHMsIGk5MTVfZ2VtX29iamVjdF9saXZlX3NlbGZ0ZXN0cykK
IHNlbGZ0ZXN0KG1tYW4sIGk5MTVfZ2VtX21tYW5fbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChk
bWFidWYsIGk5MTVfZ2VtX2RtYWJ1Zl9saXZlX3NlbGZ0ZXN0cykKLS0gCjIuMjMuMC5yYzEKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBt
YWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

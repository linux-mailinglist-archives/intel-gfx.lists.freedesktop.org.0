Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 952A12EF6AB
	for <lists+intel-gfx@lfdr.de>; Fri,  8 Jan 2021 18:44:44 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id ED94B6E854;
	Fri,  8 Jan 2021 17:44:42 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C133C6E854
 for <intel-gfx@lists.freedesktop.org>; Fri,  8 Jan 2021 17:44:41 +0000 (UTC)
IronPort-SDR: kFUaJA+z+gVmwPH8hIbCbnQc0rtWtMmxbHDBZKg5kuJKZ6x4hjb89MV3kVI1TIbG9RB1hbZOcJ
 /GKXsp1xL4VQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9858"; a="164708941"
X-IronPort-AV: E=Sophos;i="5.79,332,1602572400"; d="scan'208";a="164708941"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jan 2021 09:44:39 -0800
IronPort-SDR: n8p+GfChPXWJ1a8bPPk/S3Ta4LRISrbtRLcTNk2DbrjSCnnVwPs70H3cEa6CzUo9FF+itSbbL1
 jZsr42N2Rujw==
X-IronPort-AV: E=Sophos;i="5.79,332,1602572400"; d="scan'208";a="463451401"
Received: from rgwhiteh-mobl.ger.corp.intel.com (HELO localhost)
 ([10.213.205.160])
 by fmsmga001-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jan 2021 09:44:37 -0800
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  8 Jan 2021 19:44:09 +0200
Message-Id: <14cc59d5734432ad976cd49ff8efce8fa413e5b2.1610127741.git.jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1610127741.git.jani.nikula@intel.com>
References: <cover.1610127741.git.jani.nikula@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 01/17] drm/i915/pps: abstract panel power
 sequencer from intel_dp.c
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SW4gYSBsb25nIG92ZXJkdWUgcmVmYWN0b3JpbmcsIHNwbGl0IG91dCBhbGwgcGFuZWwgc2VxdWVu
Y2VyIGNvZGUgZnJvbQppbnRlbF9kcC5jIHRvIG5ldyBpbnRlbF9wcHMuW2NoXS4KClRoZSBmaXJz
dCBwYXJ0IGlzIG1vc3RseSBqdXN0IGNvZGUgbW92ZW1lbnQgYXMtaXMsIHdpdGhvdXQgY2xlYW51
cHMgb3IKZnVuY3Rpb25hbCBjaGFuZ2VzLgoKV2UgbmVlZCB0byBhZGQgYSB2bHZfZ2V0X2RwbGwo
KSBoZWxwZXIgdG8gZ2V0IGF0IHRoZSB2bHYvY2h2IGRwbGwgZnJvbQpwcHMgY29kZS4KCnYyOiBS
ZWJhc2UuCgpTaWduZWQtb2ZmLWJ5OiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFAaW50ZWwuY29t
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlICAgICAgICAgICAgICAgICB8ICAg
IDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyAgICAgIHwgICAg
MSArCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMgICAgfCAgICAy
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAgfCAxNDM2
ICstLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rw
LmggICAgICAgfCAgICA1ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bw
cy5jICAgICAgfCAxMzM0ICsrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9wcHMuaCAgICAgIHwgICA1MyArCiA3IGZpbGVzIGNoYW5nZWQsIDE0NDMgaW5z
ZXJ0aW9ucygrKSwgMTM4OSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bwcy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wcHMuaAoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUK
aW5kZXggNDA3NGQ4Y2IwZDZlLi44YTA0NDAzYTExYmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCkBA
IC0yNTEsNiArMjUxLDcgQEAgaTkxNS15ICs9IFwKIAlkaXNwbGF5L2ludGVsX2xzcGNvbi5vIFwK
IAlkaXNwbGF5L2ludGVsX2x2ZHMubyBcCiAJZGlzcGxheS9pbnRlbF9wYW5lbC5vIFwKKwlkaXNw
bGF5L2ludGVsX3Bwcy5vIFwKIAlkaXNwbGF5L2ludGVsX3Nkdm8ubyBcCiAJZGlzcGxheS9pbnRl
bF90di5vIFwKIAlkaXNwbGF5L2ludGVsX3Zkc2MubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kZGkuYwppbmRleCAzZGY2OTEzMzY5YmMuLmYwOWE1OTdiZjczMCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCkBAIC00Niw2ICs0Niw3IEBACiAj
aW5jbHVkZSAiaW50ZWxfaG90cGx1Zy5oIgogI2luY2x1ZGUgImludGVsX2xzcGNvbi5oIgogI2lu
Y2x1ZGUgImludGVsX3BhbmVsLmgiCisjaW5jbHVkZSAiaW50ZWxfcHBzLmgiCiAjaW5jbHVkZSAi
aW50ZWxfcHNyLmgiCiAjaW5jbHVkZSAiaW50ZWxfc3ByaXRlLmgiCiAjaW5jbHVkZSAiaW50ZWxf
dGMuaCIKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3Bvd2VyLmMKaW5kZXggZDUyMzc0ZjAxMzE2Li5hMTFiZDgyMTNkZjQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCkBAIC00LDcg
KzQsNiBAQAogICovCiAKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2NydC5oIgotI2luY2x1ZGUg
ImRpc3BsYXkvaW50ZWxfZHAuaCIKIAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAi
aTkxNV9pcnEuaCIKQEAgLTE2LDYgKzE1LDcgQEAKICNpbmNsdWRlICJpbnRlbF9kcGlvX3BoeS5o
IgogI2luY2x1ZGUgImludGVsX2hvdHBsdWcuaCIKICNpbmNsdWRlICJpbnRlbF9wbS5oIgorI2lu
Y2x1ZGUgImludGVsX3Bwcy5oIgogI2luY2x1ZGUgImludGVsX3NpZGViYW5kLmgiCiAjaW5jbHVk
ZSAiaW50ZWxfdGMuaCIKICNpbmNsdWRlICJpbnRlbF92Z2EuaCIKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHAuYwppbmRleCA0ZjE5MGE4MmQ0YWQuLjA3Mjc5YjEwODEyZSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtNTgsNiArNTgsNyBAQAog
I2luY2x1ZGUgImludGVsX2xzcGNvbi5oIgogI2luY2x1ZGUgImludGVsX2x2ZHMuaCIKICNpbmNs
dWRlICJpbnRlbF9wYW5lbC5oIgorI2luY2x1ZGUgImludGVsX3Bwcy5oIgogI2luY2x1ZGUgImlu
dGVsX3Bzci5oIgogI2luY2x1ZGUgImludGVsX3NpZGViYW5kLmgiCiAjaW5jbHVkZSAiaW50ZWxf
dGMuaCIKQEAgLTEyMSw2ICsxMjIsMTEgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcF9saW5rX2Rw
bGwgY2h2X2RwbGxbXSA9IHsKIAkJeyAucDEgPSA0LCAucDIgPSAxLCAubiA9IDEsIC5tMSA9IDIs
IC5tMiA9IDB4NmMwMDAwMCB9IH0sCiB9OwogCitjb25zdCBzdHJ1Y3QgZHBsbCAqdmx2X2dldF9k
cGxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQoreworCXJldHVybiBJU19DSEVSUllW
SUVXKGk5MTUpID8gJmNodl9kcGxsWzBdLmRwbGwgOiAmdmx2X2RwbGxbMF0uZHBsbDsKK30KKwog
LyogQ29uc3RhbnRzIGZvciBEUCBEU0MgY29uZmlndXJhdGlvbnMgKi8KIHN0YXRpYyBjb25zdCB1
OCB2YWxpZF9kc2NfYnBwW10gPSB7NiwgOCwgMTAsIDEyLCAxNX07CiAKQEAgLTE0NSwxMiArMTUx
LDYgQEAgYm9vbCBpbnRlbF9kcF9pc19lZHAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAog
c3RhdGljIHZvaWQgaW50ZWxfZHBfbGlua19kb3duKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19z
dGF0ZSk7Ci1zdGF0aWMgYm9vbCBlZHBfcGFuZWxfdmRkX29uKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApOwotc3RhdGljIHZvaWQgZWRwX3BhbmVsX3ZkZF9vZmYoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwgYm9vbCBzeW5jKTsKLXN0YXRpYyB2b2lkIHZsdl9pbml0X3BhbmVsX3Bvd2VyX3Nl
cXVlbmNlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKLQkJCQkJICAgY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwotc3RhdGljIHZvaWQgdmx2X3N0ZWFs
X3Bvd2VyX3NlcXVlbmNlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkJ
ICAgICAgZW51bSBwaXBlIHBpcGUpOwogc3RhdGljIHZvaWQgaW50ZWxfZHBfdW5zZXRfZWRpZChz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIAogLyogdXBkYXRlIHNpbmsgcmF0ZXMgZnJvbSBk
cGNkICovCkBAIC04NzcsNDQ3ICs4NzcsNiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF91bnBhY2tf
YXV4KHUzMiBzcmMsIHU4ICpkc3QsIGludCBkc3RfYnl0ZXMpCiAJCWRzdFtpXSA9IHNyYyA+PiAo
KDMtaSkgKiA4KTsKIH0KIAotc3RhdGljIHZvaWQKLWludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJf
c2VxdWVuY2VyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwotc3RhdGljIHZvaWQKLWludGVs
X2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lzdGVycyhzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAotCQkJCQkgICAgICBib29sIGZvcmNlX2Rpc2FibGVfdmRkKTsKLXN0YXRpYyB2
b2lkCi1pbnRlbF9kcF9wcHNfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLQotc3Rh
dGljIGludGVsX3dha2VyZWZfdAotcHBzX2xvY2soc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
LXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVs
X2RwKTsKLQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQotCS8qCi0JICogU2VlIGludGVsX3Bv
d2VyX3NlcXVlbmNlcl9yZXNldCgpIHdoeSB3ZSBuZWVkCi0JICogYSBwb3dlciBkb21haW4gcmVm
ZXJlbmNlIGhlcmUuCi0JICovCi0Jd2FrZXJlZiA9IGludGVsX2Rpc3BsYXlfcG93ZXJfZ2V0KGRl
dl9wcml2LCBQT1dFUl9ET01BSU5fRElTUExBWV9DT1JFKTsKLQltdXRleF9sb2NrKCZkZXZfcHJp
di0+cHBzX211dGV4KTsKLQotCXJldHVybiB3YWtlcmVmOwotfQotCi1zdGF0aWMgaW50ZWxfd2Fr
ZXJlZl90Ci1wcHNfdW5sb2NrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIGludGVsX3dha2Vy
ZWZfdCB3YWtlcmVmKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRw
X3RvX2k5MTUoaW50ZWxfZHApOwotCi0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHBzX211dGV4
KTsKLQlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChkZXZfcHJpdiwgUE9XRVJfRE9NQUlOX0RJU1BM
QVlfQ09SRSwgd2FrZXJlZik7Ci0JcmV0dXJuIDA7Ci19Ci0KLSNkZWZpbmUgd2l0aF9wcHNfbG9j
ayhkcCwgd2YpIFwKLQlmb3IgKCh3ZikgPSBwcHNfbG9jayhkcCk7ICh3Zik7ICh3ZikgPSBwcHNf
dW5sb2NrKChkcCksICh3ZikpKQotCi1zdGF0aWMgdm9pZAotdmx2X3Bvd2VyX3NlcXVlbmNlcl9r
aWNrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0Jc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRlbF9kcCk7Ci0JZW51bSBwaXBl
IHBpcGUgPSBpbnRlbF9kcC0+cHBzX3BpcGU7Ci0JYm9vbCBwbGxfZW5hYmxlZCwgcmVsZWFzZV9j
bF9vdmVycmlkZSA9IGZhbHNlOwotCWVudW0gZHBpb19waHkgcGh5ID0gRFBJT19QSFkocGlwZSk7
Ci0JZW51bSBkcGlvX2NoYW5uZWwgY2ggPSB2bHZfcGlwZV90b19jaGFubmVsKHBpcGUpOwotCXUz
MiBEUDsKLQotCWlmIChkcm1fV0FSTigmZGV2X3ByaXYtPmRybSwKLQkJICAgICBpbnRlbF9kZV9y
ZWFkKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZykgJiBEUF9QT1JUX0VOLAotCQkgICAg
ICJza2lwcGluZyBwaXBlICVjIHBvd2VyIHNlcXVlbmNlciBraWNrIGR1ZSB0byBbRU5DT0RFUjol
ZDolc10gYmVpbmcgYWN0aXZlXG4iLAotCQkgICAgIHBpcGVfbmFtZShwaXBlKSwgZGlnX3BvcnQt
PmJhc2UuYmFzZS5iYXNlLmlkLAotCQkgICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSkpCi0J
CXJldHVybjsKLQotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkgICAgImtpY2tpbmcg
cGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIFtFTkNPREVSOiVkOiVzXVxuIiwKLQkJICAgIHBp
cGVfbmFtZShwaXBlKSwgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAotCQkgICAgZGlnX3Bv
cnQtPmJhc2UuYmFzZS5uYW1lKTsKLQotCS8qIFByZXNlcnZlIHRoZSBCSU9TLWNvbXB1dGVkIGRl
dGVjdGVkIGJpdC4gVGhpcyBpcwotCSAqIHN1cHBvc2VkIHRvIGJlIHJlYWQtb25seS4KLQkgKi8K
LQlEUCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIGludGVsX2RwLT5vdXRwdXRfcmVnKSAmIERQ
X0RFVEVDVEVEOwotCURQIHw9IERQX1ZPTFRBR0VfMF80IHwgRFBfUFJFX0VNUEhBU0lTXzA7Ci0J
RFAgfD0gRFBfUE9SVF9XSURUSCgxKTsKLQlEUCB8PSBEUF9MSU5LX1RSQUlOX1BBVF8xOwotCi0J
aWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQotCQlEUCB8PSBEUF9QSVBFX1NFTF9DSFYocGlw
ZSk7Ci0JZWxzZQotCQlEUCB8PSBEUF9QSVBFX1NFTChwaXBlKTsKLQotCXBsbF9lbmFibGVkID0g
aW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRFBMTChwaXBlKSkgJiBEUExMX1ZDT19FTkFCTEU7Ci0K
LQkvKgotCSAqIFRoZSBEUExMIGZvciB0aGUgcGlwZSBtdXN0IGJlIGVuYWJsZWQgZm9yIHRoaXMg
dG8gd29yay4KLQkgKiBTbyBlbmFibGUgdGVtcG9yYXJpbHkgaXQgaWYgaXQncyBub3QgYWxyZWFk
eSBlbmFibGVkLgotCSAqLwotCWlmICghcGxsX2VuYWJsZWQpIHsKLQkJcmVsZWFzZV9jbF9vdmVy
cmlkZSA9IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpICYmCi0JCQkhY2h2X3BoeV9wb3dlcmdhdGVf
Y2goZGV2X3ByaXYsIHBoeSwgY2gsIHRydWUpOwotCi0JCWlmICh2bHZfZm9yY2VfcGxsX29uKGRl
dl9wcml2LCBwaXBlLCBJU19DSEVSUllWSUVXKGRldl9wcml2KSA/Ci0JCQkJICAgICAmY2h2X2Rw
bGxbMF0uZHBsbCA6ICZ2bHZfZHBsbFswXS5kcGxsKSkgewotCQkJZHJtX2VycigmZGV2X3ByaXYt
PmRybSwKLQkJCQkiRmFpbGVkIHRvIGZvcmNlIG9uIHBsbCBmb3IgcGlwZSAlYyFcbiIsCi0JCQkJ
cGlwZV9uYW1lKHBpcGUpKTsKLQkJCXJldHVybjsKLQkJfQotCX0KLQotCS8qCi0JICogU2ltaWxh
ciBtYWdpYyBhcyBpbiBpbnRlbF9kcF9lbmFibGVfcG9ydCgpLgotCSAqIFdlIF9tdXN0XyBkbyB0
aGlzIHBvcnQgZW5hYmxlICsgZGlzYWJsZSB0cmljawotCSAqIHRvIG1ha2UgdGhpcyBwb3dlciBz
ZXF1ZW5jZXIgbG9jayBvbnRvIHRoZSBwb3J0LgotCSAqIE90aGVyd2lzZSBldmVuIFZERCBmb3Jj
ZSBiaXQgd29uJ3Qgd29yay4KLQkgKi8KLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaW50ZWxf
ZHAtPm91dHB1dF9yZWcsIERQKTsKLQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIGlu
dGVsX2RwLT5vdXRwdXRfcmVnKTsKLQotCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9k
cC0+b3V0cHV0X3JlZywgRFAgfCBEUF9QT1JUX0VOKTsKLQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQo
ZGV2X3ByaXYsIGludGVsX2RwLT5vdXRwdXRfcmVnKTsKLQotCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZywgRFAgJiB+RFBfUE9SVF9FTik7Ci0JaW50ZWxfZGVf
cG9zdGluZ19yZWFkKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZyk7Ci0KLQlpZiAoIXBs
bF9lbmFibGVkKSB7Ci0JCXZsdl9mb3JjZV9wbGxfb2ZmKGRldl9wcml2LCBwaXBlKTsKLQotCQlp
ZiAocmVsZWFzZV9jbF9vdmVycmlkZSkKLQkJCWNodl9waHlfcG93ZXJnYXRlX2NoKGRldl9wcml2
LCBwaHksIGNoLCBmYWxzZSk7Ci0JfQotfQotCi1zdGF0aWMgZW51bSBwaXBlIHZsdl9maW5kX2Zy
ZWVfcHBzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKLXsKLQlzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlcjsKLQl1bnNpZ25lZCBpbnQgcGlwZXMgPSAoMSA8PCBQSVBFX0Ep
IHwgKDEgPDwgUElQRV9CKTsKLQotCS8qCi0JICogV2UgZG9uJ3QgaGF2ZSBwb3dlciBzZXF1ZW5j
ZXIgY3VycmVudGx5LgotCSAqIFBpY2sgb25lIHRoYXQncyBub3QgdXNlZCBieSBvdGhlciBwb3J0
cy4KLQkgKi8KLQlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2Rlcikgewot
CQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwot
Ci0JCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFApIHsKLQkJCWRybV9XQVJO
X09OKCZkZXZfcHJpdi0+ZHJtLAotCQkJCSAgICBpbnRlbF9kcC0+YWN0aXZlX3BpcGUgIT0gSU5W
QUxJRF9QSVBFICYmCi0JCQkJICAgIGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPQotCQkJCSAgICBp
bnRlbF9kcC0+cHBzX3BpcGUpOwotCi0JCQlpZiAoaW50ZWxfZHAtPnBwc19waXBlICE9IElOVkFM
SURfUElQRSkKLQkJCQlwaXBlcyAmPSB+KDEgPDwgaW50ZWxfZHAtPnBwc19waXBlKTsKLQkJfSBl
bHNlIHsKLQkJCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAotCQkJCSAgICBpbnRlbF9kcC0+
cHBzX3BpcGUgIT0gSU5WQUxJRF9QSVBFKTsKLQotCQkJaWYgKGludGVsX2RwLT5hY3RpdmVfcGlw
ZSAhPSBJTlZBTElEX1BJUEUpCi0JCQkJcGlwZXMgJj0gfigxIDw8IGludGVsX2RwLT5hY3RpdmVf
cGlwZSk7Ci0JCX0KLQl9Ci0KLQlpZiAocGlwZXMgPT0gMCkKLQkJcmV0dXJuIElOVkFMSURfUElQ
RTsKLQotCXJldHVybiBmZnMocGlwZXMpIC0gMTsKLX0KLQotc3RhdGljIGVudW0gcGlwZQotdmx2
X3Bvd2VyX3NlcXVlbmNlcl9waXBlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0Jc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0J
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRl
bF9kcCk7Ci0JZW51bSBwaXBlIHBpcGU7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJp
di0+cHBzX211dGV4KTsKLQotCS8qIFdlIHNob3VsZCBuZXZlciBsYW5kIGhlcmUgd2l0aCByZWd1
bGFyIERQIHBvcnRzICovCi0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFpbnRlbF9kcF9p
c19lZHAoaW50ZWxfZHApKTsKLQotCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9k
cC0+YWN0aXZlX3BpcGUgIT0gSU5WQUxJRF9QSVBFICYmCi0JCSAgICBpbnRlbF9kcC0+YWN0aXZl
X3BpcGUgIT0gaW50ZWxfZHAtPnBwc19waXBlKTsKLQotCWlmIChpbnRlbF9kcC0+cHBzX3BpcGUg
IT0gSU5WQUxJRF9QSVBFKQotCQlyZXR1cm4gaW50ZWxfZHAtPnBwc19waXBlOwotCi0JcGlwZSA9
IHZsdl9maW5kX2ZyZWVfcHBzKGRldl9wcml2KTsKLQotCS8qCi0JICogRGlkbid0IGZpbmQgb25l
LiBUaGlzIHNob3VsZCBub3QgaGFwcGVuIHNpbmNlIHRoZXJlCi0JICogYXJlIHR3byBwb3dlciBz
ZXF1ZW5jZXJzIGFuZCB1cCB0byB0d28gZURQIHBvcnRzLgotCSAqLwotCWlmIChkcm1fV0FSTl9P
TigmZGV2X3ByaXYtPmRybSwgcGlwZSA9PSBJTlZBTElEX1BJUEUpKQotCQlwaXBlID0gUElQRV9B
OwotCi0Jdmx2X3N0ZWFsX3Bvd2VyX3NlcXVlbmNlcihkZXZfcHJpdiwgcGlwZSk7Ci0JaW50ZWxf
ZHAtPnBwc19waXBlID0gcGlwZTsKLQotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkg
ICAgInBpY2tlZCBwaXBlICVjIHBvd2VyIHNlcXVlbmNlciBmb3IgW0VOQ09ERVI6JWQ6JXNdXG4i
LAotCQkgICAgcGlwZV9uYW1lKGludGVsX2RwLT5wcHNfcGlwZSksCi0JCSAgICBkaWdfcG9ydC0+
YmFzZS5iYXNlLmJhc2UuaWQsCi0JCSAgICBkaWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUpOwotCi0J
LyogaW5pdCBwb3dlciBzZXF1ZW5jZXIgb24gdGhpcyBwaXBlIGFuZCBwb3J0ICovCi0JaW50ZWxf
ZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXIoaW50ZWxfZHApOwotCWludGVsX2RwX2luaXRf
cGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lzdGVycyhpbnRlbF9kcCwgdHJ1ZSk7Ci0KLQkvKgot
CSAqIEV2ZW4gdmRkIGZvcmNlIGRvZXNuJ3Qgd29yayB1bnRpbCB3ZSd2ZSBtYWRlCi0JICogdGhl
IHBvd2VyIHNlcXVlbmNlciBsb2NrIGluIG9uIHRoZSBwb3J0LgotCSAqLwotCXZsdl9wb3dlcl9z
ZXF1ZW5jZXJfa2ljayhpbnRlbF9kcCk7Ci0KLQlyZXR1cm4gaW50ZWxfZHAtPnBwc19waXBlOwot
fQotCi1zdGF0aWMgaW50Ci1ieHRfcG93ZXJfc2VxdWVuY2VyX2lkeChzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOwotCWludCBiYWNrbGlnaHRfY29udHJvbGxlciA9IGRldl9wcml2LT52
YnQuYmFja2xpZ2h0LmNvbnRyb2xsZXI7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJp
di0+cHBzX211dGV4KTsKLQotCS8qIFdlIHNob3VsZCBuZXZlciBsYW5kIGhlcmUgd2l0aCByZWd1
bGFyIERQIHBvcnRzICovCi0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFpbnRlbF9kcF9p
c19lZHAoaW50ZWxfZHApKTsKLQotCWlmICghaW50ZWxfZHAtPnBwc19yZXNldCkKLQkJcmV0dXJu
IGJhY2tsaWdodF9jb250cm9sbGVyOwotCi0JaW50ZWxfZHAtPnBwc19yZXNldCA9IGZhbHNlOwot
Ci0JLyoKLQkgKiBPbmx5IHRoZSBIVyBuZWVkcyB0byBiZSByZXByb2dyYW1tZWQsIHRoZSBTVyBz
dGF0ZSBpcyBmaXhlZCBhbmQKLQkgKiBoYXMgYmVlbiBzZXR1cCBkdXJpbmcgY29ubmVjdG9yIGlu
aXQuCi0JICovCi0JaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXJfcmVnaXN0ZXJz
KGludGVsX2RwLCBmYWxzZSk7Ci0KLQlyZXR1cm4gYmFja2xpZ2h0X2NvbnRyb2xsZXI7Ci19Ci0K
LXR5cGVkZWYgYm9vbCAoKnZsdl9waXBlX2NoZWNrKShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsCi0JCQkgICAgICAgZW51bSBwaXBlIHBpcGUpOwotCi1zdGF0aWMgYm9vbCB2bHZf
cGlwZV9oYXNfcHBfb24oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJICAg
ICAgIGVudW0gcGlwZSBwaXBlKQotewotCXJldHVybiBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBQ
UF9TVEFUVVMocGlwZSkpICYgUFBfT047Ci19Ci0KLXN0YXRpYyBib29sIHZsdl9waXBlX2hhc192
ZGRfb24oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCWVudW0gcGlwZSBw
aXBlKQotewotCXJldHVybiBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBQUF9DT05UUk9MKHBpcGUp
KSAmIEVEUF9GT1JDRV9WREQ7Ci19Ci0KLXN0YXRpYyBib29sIHZsdl9waXBlX2FueShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkgZW51bSBwaXBlIHBpcGUpCi17Ci0JcmV0
dXJuIHRydWU7Ci19Ci0KLXN0YXRpYyBlbnVtIHBpcGUKLXZsdl9pbml0aWFsX3Bwc19waXBlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJICAgICBlbnVtIHBvcnQgcG9ydCwK
LQkJICAgICB2bHZfcGlwZV9jaGVjayBwaXBlX2NoZWNrKQotewotCWVudW0gcGlwZSBwaXBlOwot
Ci0JZm9yIChwaXBlID0gUElQRV9BOyBwaXBlIDw9IFBJUEVfQjsgcGlwZSsrKSB7Ci0JCXUzMiBw
b3J0X3NlbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFBQX09OX0RFTEFZUyhwaXBlKSkgJgot
CQkJUEFORUxfUE9SVF9TRUxFQ1RfTUFTSzsKLQotCQlpZiAocG9ydF9zZWwgIT0gUEFORUxfUE9S
VF9TRUxFQ1RfVkxWKHBvcnQpKQotCQkJY29udGludWU7Ci0KLQkJaWYgKCFwaXBlX2NoZWNrKGRl
dl9wcml2LCBwaXBlKSkKLQkJCWNvbnRpbnVlOwotCi0JCXJldHVybiBwaXBlOwotCX0KLQotCXJl
dHVybiBJTlZBTElEX1BJUEU7Ci19Ci0KLXN0YXRpYyB2b2lkCi12bHZfaW5pdGlhbF9wb3dlcl9z
ZXF1ZW5jZXJfc2V0dXAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsK
LQllbnVtIHBvcnQgcG9ydCA9IGRpZ19wb3J0LT5iYXNlLnBvcnQ7Ci0KLQlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKLQotCS8qIHRyeSB0byBmaW5kIGEgcGlwZSB3
aXRoIHRoaXMgcG9ydCBzZWxlY3RlZCAqLwotCS8qIGZpcnN0IHBpY2sgb25lIHdoZXJlIHRoZSBw
YW5lbCBpcyBvbiAqLwotCWludGVsX2RwLT5wcHNfcGlwZSA9IHZsdl9pbml0aWFsX3Bwc19waXBl
KGRldl9wcml2LCBwb3J0LAotCQkJCQkJICB2bHZfcGlwZV9oYXNfcHBfb24pOwotCS8qIGRpZG4n
dCBmaW5kIG9uZT8gcGljayBvbmUgd2hlcmUgdmRkIGlzIG9uICovCi0JaWYgKGludGVsX2RwLT5w
cHNfcGlwZSA9PSBJTlZBTElEX1BJUEUpCi0JCWludGVsX2RwLT5wcHNfcGlwZSA9IHZsdl9pbml0
aWFsX3Bwc19waXBlKGRldl9wcml2LCBwb3J0LAotCQkJCQkJCSAgdmx2X3BpcGVfaGFzX3ZkZF9v
bik7Ci0JLyogZGlkbid0IGZpbmQgb25lPyBwaWNrIG9uZSB3aXRoIGp1c3QgdGhlIGNvcnJlY3Qg
cG9ydCAqLwotCWlmIChpbnRlbF9kcC0+cHBzX3BpcGUgPT0gSU5WQUxJRF9QSVBFKQotCQlpbnRl
bF9kcC0+cHBzX3BpcGUgPSB2bHZfaW5pdGlhbF9wcHNfcGlwZShkZXZfcHJpdiwgcG9ydCwKLQkJ
CQkJCQkgIHZsdl9waXBlX2FueSk7Ci0KLQkvKiBkaWRuJ3QgZmluZCBvbmU/IGp1c3QgbGV0IHZs
dl9wb3dlcl9zZXF1ZW5jZXJfcGlwZSgpIHBpY2sgb25lIHdoZW4gbmVlZGVkICovCi0JaWYgKGlu
dGVsX2RwLT5wcHNfcGlwZSA9PSBJTlZBTElEX1BJUEUpIHsKLQkJZHJtX2RiZ19rbXMoJmRldl9w
cml2LT5kcm0sCi0JCQkgICAgIm5vIGluaXRpYWwgcG93ZXIgc2VxdWVuY2VyIGZvciBbRU5DT0RF
UjolZDolc11cbiIsCi0JCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAotCQkJICAg
IGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7Ci0JCXJldHVybjsKLQl9Ci0KLQlkcm1fZGJnX2tt
cygmZGV2X3ByaXYtPmRybSwKLQkJICAgICJpbml0aWFsIHBvd2VyIHNlcXVlbmNlciBmb3IgW0VO
Q09ERVI6JWQ6JXNdOiBwaXBlICVjXG4iLAotCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNl
LmlkLAotCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lLAotCQkgICAgcGlwZV9uYW1lKGlu
dGVsX2RwLT5wcHNfcGlwZSkpOwotCi0JaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5j
ZXIoaW50ZWxfZHApOwotCWludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lz
dGVycyhpbnRlbF9kcCwgZmFsc2UpOwotfQotCi12b2lkIGludGVsX3Bvd2VyX3NlcXVlbmNlcl9y
ZXNldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCi17Ci0Jc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXI7Ci0KLQlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sCi0J
CQkhKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpIHx8Ci0JCQkgIElTX0NIRVJSWVZJRVcoZGV2X3By
aXYpIHx8Ci0JCQkgIElTX0dFTjlfTFAoZGV2X3ByaXYpKSkpCi0JCXJldHVybjsKLQotCS8qCi0J
ICogV2UgY2FuJ3QgZ3JhYiBwcHNfbXV0ZXggaGVyZSBkdWUgdG8gZGVhZGxvY2sgd2l0aCBwb3dl
cl9kb21haW4KLQkgKiBtdXRleCB3aGVuIHBvd2VyX2RvbWFpbiBmdW5jdGlvbnMgYXJlIGNhbGxl
ZCB3aGlsZSBob2xkaW5nIHBwc19tdXRleC4KLQkgKiBUaGF0IGFsc28gbWVhbnMgdGhhdCBpbiBv
cmRlciB0byB1c2UgcHBzX3BpcGUgdGhlIGNvZGUgbmVlZHMgdG8KLQkgKiBob2xkIGJvdGggYSBw
b3dlciBkb21haW4gcmVmZXJlbmNlIGFuZCBwcHNfbXV0ZXgsIGFuZCB0aGUgcG93ZXIgZG9tYWlu
Ci0JICogcmVmZXJlbmNlIGdldC9wdXQgbXVzdCBiZSBkb25lIHdoaWxlIF9ub3RfIGhvbGRpbmcg
cHBzX211dGV4LgotCSAqIHBwc197bG9jayx1bmxvY2t9KCkgZG8gdGhlc2Ugc3RlcHMgaW4gdGhl
IGNvcnJlY3Qgb3JkZXIsIHNvIG9uZQotCSAqIHNob3VsZCB1c2UgdGhlbSBhbHdheXMuCi0JICov
Ci0KLQlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgewotCQlzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwotCi0JCWRy
bV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgIGludGVsX2RwLT5hY3RpdmVfcGlwZSAh
PSBJTlZBTElEX1BJUEUpOwotCi0JCWlmIChlbmNvZGVyLT50eXBlICE9IElOVEVMX09VVFBVVF9F
RFApCi0JCQljb250aW51ZTsKLQotCQlpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpCi0JCQlpbnRl
bF9kcC0+cHBzX3Jlc2V0ID0gdHJ1ZTsKLQkJZWxzZQotCQkJaW50ZWxfZHAtPnBwc19waXBlID0g
SU5WQUxJRF9QSVBFOwotCX0KLX0KLQotc3RydWN0IHBwc19yZWdpc3RlcnMgewotCWk5MTVfcmVn
X3QgcHBfY3RybDsKLQlpOTE1X3JlZ190IHBwX3N0YXQ7Ci0JaTkxNV9yZWdfdCBwcF9vbjsKLQlp
OTE1X3JlZ190IHBwX29mZjsKLQlpOTE1X3JlZ190IHBwX2RpdjsKLX07Ci0KLXN0YXRpYyB2b2lk
IGludGVsX3Bwc19nZXRfcmVnaXN0ZXJzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCi0JCQkJ
ICAgIHN0cnVjdCBwcHNfcmVnaXN0ZXJzICpyZWdzKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwotCWludCBwcHNfaWR4ID0gMDsK
LQotCW1lbXNldChyZWdzLCAwLCBzaXplb2YoKnJlZ3MpKTsKLQotCWlmIChJU19HRU45X0xQKGRl
dl9wcml2KSkKLQkJcHBzX2lkeCA9IGJ4dF9wb3dlcl9zZXF1ZW5jZXJfaWR4KGludGVsX2RwKTsK
LQllbHNlIGlmIChJU19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9w
cml2KSkKLQkJcHBzX2lkeCA9IHZsdl9wb3dlcl9zZXF1ZW5jZXJfcGlwZShpbnRlbF9kcCk7Ci0K
LQlyZWdzLT5wcF9jdHJsID0gUFBfQ09OVFJPTChwcHNfaWR4KTsKLQlyZWdzLT5wcF9zdGF0ID0g
UFBfU1RBVFVTKHBwc19pZHgpOwotCXJlZ3MtPnBwX29uID0gUFBfT05fREVMQVlTKHBwc19pZHgp
OwotCXJlZ3MtPnBwX29mZiA9IFBQX09GRl9ERUxBWVMocHBzX2lkeCk7Ci0KLQkvKiBDeWNsZSBk
ZWxheSBtb3ZlZCBmcm9tIFBQX0RJVklTT1IgdG8gUFBfQ09OVFJPTCAqLwotCWlmIChJU19HRU45
X0xQKGRldl9wcml2KSB8fCBJTlRFTF9QQ0hfVFlQRShkZXZfcHJpdikgPj0gUENIX0NOUCkKLQkJ
cmVncy0+cHBfZGl2ID0gSU5WQUxJRF9NTUlPX1JFRzsKLQllbHNlCi0JCXJlZ3MtPnBwX2RpdiA9
IFBQX0RJVklTT1IocHBzX2lkeCk7Ci19Ci0KLXN0YXRpYyBpOTE1X3JlZ190Ci1fcHBfY3RybF9y
ZWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlzdHJ1Y3QgcHBzX3JlZ2lzdGVycyBy
ZWdzOwotCi0JaW50ZWxfcHBzX2dldF9yZWdpc3RlcnMoaW50ZWxfZHAsICZyZWdzKTsKLQotCXJl
dHVybiByZWdzLnBwX2N0cmw7Ci19Ci0KLXN0YXRpYyBpOTE1X3JlZ190Ci1fcHBfc3RhdF9yZWco
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlzdHJ1Y3QgcHBzX3JlZ2lzdGVycyByZWdz
OwotCi0JaW50ZWxfcHBzX2dldF9yZWdpc3RlcnMoaW50ZWxfZHAsICZyZWdzKTsKLQotCXJldHVy
biByZWdzLnBwX3N0YXQ7Ci19Ci0KLXN0YXRpYyBib29sIGVkcF9oYXZlX3BhbmVsX3Bvd2VyKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZk
ZXZfcHJpdi0+cHBzX211dGV4KTsKLQotCWlmICgoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikgfHwg
SVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpICYmCi0JICAgIGludGVsX2RwLT5wcHNfcGlwZSA9PSBJ
TlZBTElEX1BJUEUpCi0JCXJldHVybiBmYWxzZTsKLQotCXJldHVybiAoaW50ZWxfZGVfcmVhZChk
ZXZfcHJpdiwgX3BwX3N0YXRfcmVnKGludGVsX2RwKSkgJiBQUF9PTikgIT0gMDsKLX0KLQotc3Rh
dGljIGJvb2wgZWRwX2hhdmVfcGFuZWxfdmRkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17
Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKLQotCWlm
ICgoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpICYm
Ci0JICAgIGludGVsX2RwLT5wcHNfcGlwZSA9PSBJTlZBTElEX1BJUEUpCi0JCXJldHVybiBmYWxz
ZTsKLQotCXJldHVybiBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBfcHBfY3RybF9yZWcoaW50ZWxf
ZHApKSAmIEVEUF9GT1JDRV9WREQ7Ci19Ci0KLXN0YXRpYyB2b2lkCi1pbnRlbF9kcF9jaGVja19l
ZHAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQotCWlmICghaW50ZWxfZHBfaXNf
ZWRwKGludGVsX2RwKSkKLQkJcmV0dXJuOwotCi0JaWYgKCFlZHBfaGF2ZV9wYW5lbF9wb3dlcihp
bnRlbF9kcCkgJiYgIWVkcF9oYXZlX3BhbmVsX3ZkZChpbnRlbF9kcCkpIHsKLQkJZHJtX1dBUk4o
JmRldl9wcml2LT5kcm0sIDEsCi0JCQkgImVEUCBwb3dlcmVkIG9mZiB3aGlsZSBhdHRlbXB0aW5n
IGF1eCBjaGFubmVsIGNvbW11bmljYXRpb24uXG4iKTsKLQkJZHJtX2RiZ19rbXMoJmRldl9wcml2
LT5kcm0sICJTdGF0dXMgMHglMDh4IENvbnRyb2wgMHglMDh4XG4iLAotCQkJICAgIGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsIF9wcF9zdGF0X3JlZyhpbnRlbF9kcCkpLAotCQkJICAgIGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsIF9wcF9jdHJsX3JlZyhpbnRlbF9kcCkpKTsKLQl9Ci19Ci0KIHN0YXRp
YyB1MzIKIGludGVsX2RwX2F1eF93YWl0X2RvbmUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
IHsKQEAgLTI5MzEsNDkxICsyNDkwLDY2IEBAIHN0YXRpYyB2b2lkIGludGVsX2RwX3ByZXBhcmUo
c3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJICogSUJYIFBDSCBhbmQgQ1BVIGFyZSB0
aGUgc2FtZSBmb3IgYWxtb3N0IGV2ZXJ5dGhpbmcsCiAJICogZXhjZXB0IHRoYXQgdGhlIENQVSBE
UCBQTEwgaXMgY29uZmlndXJlZCBpbiB0aGlzCiAJICogcmVnaXN0ZXIKLQkgKgotCSAqIENQVCBQ
Q0ggaXMgcXVpdGUgZGlmZmVyZW50LCBoYXZpbmcgbWFueSBiaXRzIG1vdmVkCi0JICogdG8gdGhl
IFRSQU5TX0RQX0NUTCByZWdpc3RlciBpbnN0ZWFkLiBUaGF0Ci0JICogY29uZmlndXJhdGlvbiBo
YXBwZW5zIChvZGRseSkgaW4gaWxrX3BjaF9lbmFibGUKLQkgKi8KLQotCS8qIFByZXNlcnZlIHRo
ZSBCSU9TLWNvbXB1dGVkIGRldGVjdGVkIGJpdC4gVGhpcyBpcwotCSAqIHN1cHBvc2VkIHRvIGJl
IHJlYWQtb25seS4KLQkgKi8KLQlpbnRlbF9kcC0+RFAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LCBpbnRlbF9kcC0+b3V0cHV0X3JlZykgJiBEUF9ERVRFQ1RFRDsKLQotCS8qIEhhbmRsZSBEUCBi
aXRzIGluIGNvbW1vbiBiZXR3ZWVuIGFsbCB0aHJlZSByZWdpc3RlciBmb3JtYXRzICovCi0JaW50
ZWxfZHAtPkRQIHw9IERQX1ZPTFRBR0VfMF80IHwgRFBfUFJFX0VNUEhBU0lTXzA7Ci0JaW50ZWxf
ZHAtPkRQIHw9IERQX1BPUlRfV0lEVEgocGlwZV9jb25maWctPmxhbmVfY291bnQpOwotCi0JLyog
U3BsaXQgb3V0IHRoZSBJQlgvQ1BVIHZzIENQVCBzZXR0aW5ncyAqLwotCi0JaWYgKElTX0lWWUJS
SURHRShkZXZfcHJpdikgJiYgcG9ydCA9PSBQT1JUX0EpIHsKLQkJaWYgKGFkanVzdGVkX21vZGUt
PmZsYWdzICYgRFJNX01PREVfRkxBR19QSFNZTkMpCi0JCQlpbnRlbF9kcC0+RFAgfD0gRFBfU1lO
Q19IU19ISUdIOwotCQlpZiAoYWRqdXN0ZWRfbW9kZS0+ZmxhZ3MgJiBEUk1fTU9ERV9GTEFHX1BW
U1lOQykKLQkJCWludGVsX2RwLT5EUCB8PSBEUF9TWU5DX1ZTX0hJR0g7Ci0JCWludGVsX2RwLT5E
UCB8PSBEUF9MSU5LX1RSQUlOX09GRl9DUFQ7Ci0KLQkJaWYgKGRybV9kcF9lbmhhbmNlZF9mcmFt
ZV9jYXAoaW50ZWxfZHAtPmRwY2QpKQotCQkJaW50ZWxfZHAtPkRQIHw9IERQX0VOSEFOQ0VEX0ZS
QU1JTkc7Ci0KLQkJaW50ZWxfZHAtPkRQIHw9IERQX1BJUEVfU0VMX0lWQihjcnRjLT5waXBlKTsK
LQl9IGVsc2UgaWYgKEhBU19QQ0hfQ1BUKGRldl9wcml2KSAmJiBwb3J0ICE9IFBPUlRfQSkgewot
CQl1MzIgdHJhbnNfZHA7Ci0KLQkJaW50ZWxfZHAtPkRQIHw9IERQX0xJTktfVFJBSU5fT0ZGX0NQ
VDsKLQotCQl0cmFuc19kcCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFRSQU5TX0RQX0NUTChj
cnRjLT5waXBlKSk7Ci0JCWlmIChkcm1fZHBfZW5oYW5jZWRfZnJhbWVfY2FwKGludGVsX2RwLT5k
cGNkKSkKLQkJCXRyYW5zX2RwIHw9IFRSQU5TX0RQX0VOSF9GUkFNSU5HOwotCQllbHNlCi0JCQl0
cmFuc19kcCAmPSB+VFJBTlNfRFBfRU5IX0ZSQU1JTkc7Ci0JCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LCBUUkFOU19EUF9DVEwoY3J0Yy0+cGlwZSksIHRyYW5zX2RwKTsKLQl9IGVsc2UgewotCQlp
ZiAoSVNfRzRYKGRldl9wcml2KSAmJiBwaXBlX2NvbmZpZy0+bGltaXRlZF9jb2xvcl9yYW5nZSkK
LQkJCWludGVsX2RwLT5EUCB8PSBEUF9DT0xPUl9SQU5HRV8xNl8yMzU7Ci0KLQkJaWYgKGFkanVz
dGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVfRkxBR19QSFNZTkMpCi0JCQlpbnRlbF9kcC0+RFAg
fD0gRFBfU1lOQ19IU19ISUdIOwotCQlpZiAoYWRqdXN0ZWRfbW9kZS0+ZmxhZ3MgJiBEUk1fTU9E
RV9GTEFHX1BWU1lOQykKLQkJCWludGVsX2RwLT5EUCB8PSBEUF9TWU5DX1ZTX0hJR0g7Ci0JCWlu
dGVsX2RwLT5EUCB8PSBEUF9MSU5LX1RSQUlOX09GRjsKLQotCQlpZiAoZHJtX2RwX2VuaGFuY2Vk
X2ZyYW1lX2NhcChpbnRlbF9kcC0+ZHBjZCkpCi0JCQlpbnRlbF9kcC0+RFAgfD0gRFBfRU5IQU5D
RURfRlJBTUlORzsKLQotCQlpZiAoSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCi0JCQlpbnRlbF9k
cC0+RFAgfD0gRFBfUElQRV9TRUxfQ0hWKGNydGMtPnBpcGUpOwotCQllbHNlCi0JCQlpbnRlbF9k
cC0+RFAgfD0gRFBfUElQRV9TRUwoY3J0Yy0+cGlwZSk7Ci0JfQotfQotCi0jZGVmaW5lIElETEVf
T05fTUFTSwkJKFBQX09OIHwgUFBfU0VRVUVOQ0VfTUFTSyB8IDAgICAgICAgICAgICAgICAgICAg
ICB8IFBQX1NFUVVFTkNFX1NUQVRFX01BU0spCi0jZGVmaW5lIElETEVfT05fVkFMVUUgICAJKFBQ
X09OIHwgUFBfU0VRVUVOQ0VfTk9ORSB8IDAgICAgICAgICAgICAgICAgICAgICB8IFBQX1NFUVVF
TkNFX1NUQVRFX09OX0lETEUpCi0KLSNkZWZpbmUgSURMRV9PRkZfTUFTSwkJKFBQX09OIHwgUFBf
U0VRVUVOQ0VfTUFTSyB8IDAgICAgICAgICAgICAgICAgICAgICB8IDApCi0jZGVmaW5lIElETEVf
T0ZGX1ZBTFVFCQkoMCAgICAgfCBQUF9TRVFVRU5DRV9OT05FIHwgMCAgICAgICAgICAgICAgICAg
ICAgIHwgMCkKLQotI2RlZmluZSBJRExFX0NZQ0xFX01BU0sJCShQUF9PTiB8IFBQX1NFUVVFTkNF
X01BU0sgfCBQUF9DWUNMRV9ERUxBWV9BQ1RJVkUgfCBQUF9TRVFVRU5DRV9TVEFURV9NQVNLKQot
I2RlZmluZSBJRExFX0NZQ0xFX1ZBTFVFCSgwICAgICB8IFBQX1NFUVVFTkNFX05PTkUgfCAwICAg
ICAgICAgICAgICAgICAgICAgfCBQUF9TRVFVRU5DRV9TVEFURV9PRkZfSURMRSkKLQotc3RhdGlj
IHZvaWQgaW50ZWxfcHBzX3ZlcmlmeV9zdGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsK
LQotc3RhdGljIHZvaWQgd2FpdF9wYW5lbF9zdGF0dXMoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKLQkJCQkgICAgICAgdTMyIG1hc2ssCi0JCQkJICAgICAgIHUzMiB2YWx1ZSkKLXsKLQlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlp
OTE1X3JlZ190IHBwX3N0YXRfcmVnLCBwcF9jdHJsX3JlZzsKLQotCWxvY2tkZXBfYXNzZXJ0X2hl
bGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOwotCi0JaW50ZWxfcHBzX3ZlcmlmeV9zdGF0ZShpbnRl
bF9kcCk7Ci0KLQlwcF9zdGF0X3JlZyA9IF9wcF9zdGF0X3JlZyhpbnRlbF9kcCk7Ci0JcHBfY3Ry
bF9yZWcgPSBfcHBfY3RybF9yZWcoaW50ZWxfZHApOwotCi0JZHJtX2RiZ19rbXMoJmRldl9wcml2
LT5kcm0sCi0JCSAgICAibWFzayAlMDh4IHZhbHVlICUwOHggc3RhdHVzICUwOHggY29udHJvbCAl
MDh4XG4iLAotCQkgICAgbWFzaywgdmFsdWUsCi0JCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2
LCBwcF9zdGF0X3JlZyksCi0JCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBwcF9jdHJsX3Jl
ZykpOwotCi0JaWYgKGludGVsX2RlX3dhaXRfZm9yX3JlZ2lzdGVyKGRldl9wcml2LCBwcF9zdGF0
X3JlZywKLQkJCQkgICAgICAgbWFzaywgdmFsdWUsIDUwMDApKQotCQlkcm1fZXJyKCZkZXZfcHJp
di0+ZHJtLAotCQkJIlBhbmVsIHN0YXR1cyB0aW1lb3V0OiBzdGF0dXMgJTA4eCBjb250cm9sICUw
OHhcbiIsCi0JCQlpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBwcF9zdGF0X3JlZyksCi0JCQlpbnRl
bF9kZV9yZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZykpOwotCi0JZHJtX2RiZ19rbXMoJmRldl9w
cml2LT5kcm0sICJXYWl0IGNvbXBsZXRlXG4iKTsKLX0KLQotc3RhdGljIHZvaWQgd2FpdF9wYW5l
bF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KLQlkcm1fZGJnX2ttcygmaTkxNS0+
ZHJtLCAiV2FpdCBmb3IgcGFuZWwgcG93ZXIgb25cbiIpOwotCXdhaXRfcGFuZWxfc3RhdHVzKGlu
dGVsX2RwLCBJRExFX09OX01BU0ssIElETEVfT05fVkFMVUUpOwotfQotCi1zdGF0aWMgdm9pZCB3
YWl0X3BhbmVsX29mZihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KLQlkcm1fZGJnX2tt
cygmaTkxNS0+ZHJtLCAiV2FpdCBmb3IgcGFuZWwgcG93ZXIgb2ZmIHRpbWVcbiIpOwotCXdhaXRf
cGFuZWxfc3RhdHVzKGludGVsX2RwLCBJRExFX09GRl9NQVNLLCBJRExFX09GRl9WQUxVRSk7Ci19
Ci0KLXN0YXRpYyB2b2lkIHdhaXRfcGFuZWxfcG93ZXJfY3ljbGUoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOwotCWt0aW1lX3QgcGFuZWxfcG93ZXJfb25fdGltZTsKLQlzNjQgcGFuZWxfcG93
ZXJfb2ZmX2R1cmF0aW9uOwotCi0JZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIldhaXQgZm9yIHBh
bmVsIHBvd2VyIGN5Y2xlXG4iKTsKLQotCS8qIHRha2UgdGhlIGRpZmZlcmVuY2Ugb2YgY3VycnJl
bnQgdGltZSBhbmQgcGFuZWwgcG93ZXIgb2ZmIHRpbWUKLQkgKiBhbmQgdGhlbiBtYWtlIHBhbmVs
IHdhaXQgZm9yIHQxMV90MTIgaWYgbmVlZGVkLiAqLwotCXBhbmVsX3Bvd2VyX29uX3RpbWUgPSBr
dGltZV9nZXRfYm9vdHRpbWUoKTsKLQlwYW5lbF9wb3dlcl9vZmZfZHVyYXRpb24gPSBrdGltZV9t
c19kZWx0YShwYW5lbF9wb3dlcl9vbl90aW1lLCBpbnRlbF9kcC0+cGFuZWxfcG93ZXJfb2ZmX3Rp
bWUpOwotCi0JLyogV2hlbiB3ZSBkaXNhYmxlIHRoZSBWREQgb3ZlcnJpZGUgYml0IGxhc3Qgd2Ug
aGF2ZSB0byBkbyB0aGUgbWFudWFsCi0JICogd2FpdC4gKi8KLQlpZiAocGFuZWxfcG93ZXJfb2Zm
X2R1cmF0aW9uIDwgKHM2NClpbnRlbF9kcC0+cGFuZWxfcG93ZXJfY3ljbGVfZGVsYXkpCi0JCXdh
aXRfcmVtYWluaW5nX21zX2Zyb21famlmZmllcyhqaWZmaWVzLAotCQkJCSAgICAgICBpbnRlbF9k
cC0+cGFuZWxfcG93ZXJfY3ljbGVfZGVsYXkgLSBwYW5lbF9wb3dlcl9vZmZfZHVyYXRpb24pOwot
Ci0Jd2FpdF9wYW5lbF9zdGF0dXMoaW50ZWxfZHAsIElETEVfQ1lDTEVfTUFTSywgSURMRV9DWUNM
RV9WQUxVRSk7Ci19Ci0KLXN0YXRpYyB2b2lkIHdhaXRfYmFja2xpZ2h0X29uKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCi17Ci0Jd2FpdF9yZW1haW5pbmdfbXNfZnJvbV9qaWZmaWVzKGludGVs
X2RwLT5sYXN0X3Bvd2VyX29uLAotCQkJCSAgICAgICBpbnRlbF9kcC0+YmFja2xpZ2h0X29uX2Rl
bGF5KTsKLX0KLQotc3RhdGljIHZvaWQgZWRwX3dhaXRfYmFja2xpZ2h0X29mZihzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQotewotCXdhaXRfcmVtYWluaW5nX21zX2Zyb21famlmZmllcyhpbnRl
bF9kcC0+bGFzdF9iYWNrbGlnaHRfb2ZmLAotCQkJCSAgICAgICBpbnRlbF9kcC0+YmFja2xpZ2h0
X29mZl9kZWxheSk7Ci19Ci0KLS8qIFJlYWQgdGhlIGN1cnJlbnQgcHBfY29udHJvbCB2YWx1ZSwg
dW5sb2NraW5nIHRoZSByZWdpc3RlciBpZiBpdAotICogaXMgbG9ja2VkCi0gKi8KLQotc3RhdGlj
ICB1MzIgaWxrX2dldF9wcF9jb250cm9sKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7
Ci0JdTMyIGNvbnRyb2w7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211
dGV4KTsKLQotCWNvbnRyb2wgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBfcHBfY3RybF9yZWco
aW50ZWxfZHApKTsKLQlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFIQVNfRERJKGRl
dl9wcml2KSAmJgotCQkJKGNvbnRyb2wgJiBQQU5FTF9VTkxPQ0tfTUFTSykgIT0gUEFORUxfVU5M
T0NLX1JFR1MpKSB7Ci0JCWNvbnRyb2wgJj0gflBBTkVMX1VOTE9DS19NQVNLOwotCQljb250cm9s
IHw9IFBBTkVMX1VOTE9DS19SRUdTOwotCX0KLQlyZXR1cm4gY29udHJvbDsKLX0KLQotLyoKLSAq
IE11c3QgYmUgcGFpcmVkIHdpdGggZWRwX3BhbmVsX3ZkZF9vZmYoKS4KLSAqIE11c3QgaG9sZCBw
cHNfbXV0ZXggYXJvdW5kIHRoZSB3aG9sZSBvbi9vZmYgc2VxdWVuY2UuCi0gKiBDYW4gYmUgbmVz
dGVkIHdpdGggaW50ZWxfZWRwX3BhbmVsX3ZkZF97b24sb2ZmfSgpIGNhbGxzLgotICovCi1zdGF0
aWMgYm9vbCBlZHBfcGFuZWxfdmRkX29uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0J
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7
Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChp
bnRlbF9kcCk7Ci0JdTMyIHBwOwotCWk5MTVfcmVnX3QgcHBfc3RhdF9yZWcsIHBwX2N0cmxfcmVn
OwotCWJvb2wgbmVlZF90b19kaXNhYmxlID0gIWludGVsX2RwLT53YW50X3BhbmVsX3ZkZDsKLQot
CWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOwotCi0JaWYgKCFpbnRl
bF9kcF9pc19lZHAoaW50ZWxfZHApKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQljYW5jZWxfZGVsYXll
ZF93b3JrKCZpbnRlbF9kcC0+cGFuZWxfdmRkX3dvcmspOwotCWludGVsX2RwLT53YW50X3BhbmVs
X3ZkZCA9IHRydWU7Ci0KLQlpZiAoZWRwX2hhdmVfcGFuZWxfdmRkKGludGVsX2RwKSkKLQkJcmV0
dXJuIG5lZWRfdG9fZGlzYWJsZTsKLQotCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpbnRl
bF9kcC0+dmRkX3dha2VyZWYpOwotCWludGVsX2RwLT52ZGRfd2FrZXJlZiA9IGludGVsX2Rpc3Bs
YXlfcG93ZXJfZ2V0KGRldl9wcml2LAotCQkJCQkJCWludGVsX2F1eF9wb3dlcl9kb21haW4oZGln
X3BvcnQpKTsKLQotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiVHVybmluZyBbRU5DT0RF
UjolZDolc10gVkREIG9uXG4iLAotCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAot
CQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKLQotCWlmICghZWRwX2hhdmVfcGFuZWxf
cG93ZXIoaW50ZWxfZHApKQotCQl3YWl0X3BhbmVsX3Bvd2VyX2N5Y2xlKGludGVsX2RwKTsKLQot
CXBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKLQlwcCB8PSBFRFBfRk9SQ0VfVkRE
OwotCi0JcHBfc3RhdF9yZWcgPSBfcHBfc3RhdF9yZWcoaW50ZWxfZHApOwotCXBwX2N0cmxfcmVn
ID0gX3BwX2N0cmxfcmVnKGludGVsX2RwKTsKLQotCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBw
cF9jdHJsX3JlZywgcHApOwotCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgcHBfY3Ry
bF9yZWcpOwotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiUFBfU1RBVFVTOiAweCUwOHgg
UFBfQ09OVFJPTDogMHglMDh4XG4iLAotCQkgICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgcHBf
c3RhdF9yZWcpLAotCQkgICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgcHBfY3RybF9yZWcpKTsK
LQkvKgotCSAqIElmIHRoZSBwYW5lbCB3YXNuJ3Qgb24sIGRlbGF5IGJlZm9yZSBhY2Nlc3Npbmcg
YXV4IGNoYW5uZWwKLQkgKi8KLQlpZiAoIWVkcF9oYXZlX3BhbmVsX3Bvd2VyKGludGVsX2RwKSkg
ewotCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKLQkJCSAgICAiW0VOQ09ERVI6JWQ6JXNd
IHBhbmVsIHBvd2VyIHdhc24ndCBlbmFibGVkXG4iLAotCQkJICAgIGRpZ19wb3J0LT5iYXNlLmJh
c2UuYmFzZS5pZCwKLQkJCSAgICBkaWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUpOwotCQltc2xlZXAo
aW50ZWxfZHAtPnBhbmVsX3Bvd2VyX3VwX2RlbGF5KTsKLQl9Ci0KLQlyZXR1cm4gbmVlZF90b19k
aXNhYmxlOwotfQotCi0vKgotICogTXVzdCBiZSBwYWlyZWQgd2l0aCBpbnRlbF9lZHBfcGFuZWxf
dmRkX29mZigpIG9yCi0gKiBpbnRlbF9lZHBfcGFuZWxfb2ZmKCkuCi0gKiBOZXN0ZWQgY2FsbHMg
dG8gdGhlc2UgZnVuY3Rpb25zIGFyZSBub3QgYWxsb3dlZCBzaW5jZQotICogd2UgZHJvcCB0aGUg
bG9jay4gQ2FsbGVyIG11c3QgdXNlIHNvbWUgaGlnaGVyIGxldmVsCi0gKiBsb2NraW5nIHRvIHBy
ZXZlbnQgbmVzdGVkIGNhbGxzIGZyb20gb3RoZXIgdGhyZWFkcy4KLSAqLwotdm9pZCBpbnRlbF9l
ZHBfcGFuZWxfdmRkX29uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCi17Ci0JaW50ZWxfd2Fr
ZXJlZl90IHdha2VyZWY7Ci0JYm9vbCB2ZGQ7Ci0KLQlpZiAoIWludGVsX2RwX2lzX2VkcChpbnRl
bF9kcCkpCi0JCXJldHVybjsKLQotCXZkZCA9IGZhbHNlOwotCXdpdGhfcHBzX2xvY2soaW50ZWxf
ZHAsIHdha2VyZWYpCi0JCXZkZCA9IGVkcF9wYW5lbF92ZGRfb24oaW50ZWxfZHApOwotCUk5MTVf
U1RBVEVfV0FSTighdmRkLCAiW0VOQ09ERVI6JWQ6JXNdIFZERCBhbHJlYWR5IHJlcXVlc3RlZCBv
blxuIiwKLQkJCWRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5iYXNlLmJhc2UuaWQsCi0J
CQlkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5uYW1lKTsKLX0KLQotc3RhdGlj
IHZvaWQgZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQot
ewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxf
ZHApOwotCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0KLQkJZHBfdG9fZGln
X3BvcnQoaW50ZWxfZHApOwotCXUzMiBwcDsKLQlpOTE1X3JlZ190IHBwX3N0YXRfcmVnLCBwcF9j
dHJsX3JlZzsKLQotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOwot
Ci0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT53YW50X3BhbmVsX3ZkZCk7
Ci0KLQlpZiAoIWVkcF9oYXZlX3BhbmVsX3ZkZChpbnRlbF9kcCkpCi0JCXJldHVybjsKLQotCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiVHVybmluZyBbRU5DT0RFUjolZDolc10gVkREIG9m
ZlxuIiwKLQkJICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwKLQkJICAgIGRpZ19wb3J0
LT5iYXNlLmJhc2UubmFtZSk7Ci0KLQlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7
Ci0JcHAgJj0gfkVEUF9GT1JDRV9WREQ7Ci0KLQlwcF9jdHJsX3JlZyA9IF9wcF9jdHJsX3JlZyhp
bnRlbF9kcCk7Ci0JcHBfc3RhdF9yZWcgPSBfcHBfc3RhdF9yZWcoaW50ZWxfZHApOwotCi0JaW50
ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7Ci0JaW50ZWxfZGVfcG9zdGlu
Z19yZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZyk7Ci0KLQkvKiBNYWtlIHN1cmUgc2VxdWVuY2Vy
IGlzIGlkbGUgYmVmb3JlIGFsbG93aW5nIHN1YnNlcXVlbnQgYWN0aXZpdHkgKi8KLQlkcm1fZGJn
X2ttcygmZGV2X3ByaXYtPmRybSwgIlBQX1NUQVRVUzogMHglMDh4IFBQX0NPTlRST0w6IDB4JTA4
eFxuIiwKLQkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHBwX3N0YXRfcmVnKSwKLQkJICAg
IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHBwX2N0cmxfcmVnKSk7Ci0KLQlpZiAoKHBwICYgUEFO
RUxfUE9XRVJfT04pID09IDApCi0JCWludGVsX2RwLT5wYW5lbF9wb3dlcl9vZmZfdGltZSA9IGt0
aW1lX2dldF9ib290dGltZSgpOwotCi0JaW50ZWxfZGlzcGxheV9wb3dlcl9wdXQoZGV2X3ByaXYs
Ci0JCQkJaW50ZWxfYXV4X3Bvd2VyX2RvbWFpbihkaWdfcG9ydCksCi0JCQkJZmV0Y2hfYW5kX3pl
cm8oJmludGVsX2RwLT52ZGRfd2FrZXJlZikpOwotfQotCi1zdGF0aWMgdm9pZCBlZHBfcGFuZWxf
dmRkX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICpfX3dvcmspCi17Ci0Jc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCA9Ci0JCWNvbnRhaW5lcl9vZih0b19kZWxheWVkX3dvcmsoX193b3JrKSwKLQkJ
CSAgICAgc3RydWN0IGludGVsX2RwLCBwYW5lbF92ZGRfd29yayk7Ci0JaW50ZWxfd2FrZXJlZl90
IHdha2VyZWY7Ci0KLQl3aXRoX3Bwc19sb2NrKGludGVsX2RwLCB3YWtlcmVmKSB7Ci0JCWlmICgh
aW50ZWxfZHAtPndhbnRfcGFuZWxfdmRkKQotCQkJZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhpbnRl
bF9kcCk7Ci0JfQotfQotCi1zdGF0aWMgdm9pZCBlZHBfcGFuZWxfdmRkX3NjaGVkdWxlX29mZihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXVuc2lnbmVkIGxvbmcgZGVsYXk7Ci0KLQkv
KgotCSAqIFF1ZXVlIHRoZSB0aW1lciB0byBmaXJlIGEgbG9uZyB0aW1lIGZyb20gbm93IChyZWxh
dGl2ZSB0byB0aGUgcG93ZXIKLQkgKiBkb3duIGRlbGF5KSB0byBrZWVwIHRoZSBwYW5lbCBwb3dl
ciB1cCBhY3Jvc3MgYSBzZXF1ZW5jZSBvZgotCSAqIG9wZXJhdGlvbnMuCi0JICovCi0JZGVsYXkg
PSBtc2Vjc190b19qaWZmaWVzKGludGVsX2RwLT5wYW5lbF9wb3dlcl9jeWNsZV9kZWxheSAqIDUp
OwotCXNjaGVkdWxlX2RlbGF5ZWRfd29yaygmaW50ZWxfZHAtPnBhbmVsX3ZkZF93b3JrLCBkZWxh
eSk7Ci19Ci0KLS8qCi0gKiBNdXN0IGJlIHBhaXJlZCB3aXRoIGVkcF9wYW5lbF92ZGRfb24oKS4K
LSAqIE11c3QgaG9sZCBwcHNfbXV0ZXggYXJvdW5kIHRoZSB3aG9sZSBvbi9vZmYgc2VxdWVuY2Uu
Ci0gKiBDYW4gYmUgbmVzdGVkIHdpdGggaW50ZWxfZWRwX3BhbmVsX3ZkZF97b24sb2ZmfSgpIGNh
bGxzLgotICovCi1zdGF0aWMgdm9pZCBlZHBfcGFuZWxfdmRkX29mZihzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLCBib29sIHN5bmMpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZf
cHJpdi0+cHBzX211dGV4KTsKLQotCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKLQkJ
cmV0dXJuOwotCi0JSTkxNV9TVEFURV9XQVJOKCFpbnRlbF9kcC0+d2FudF9wYW5lbF92ZGQsICJb
RU5DT0RFUjolZDolc10gVkREIG5vdCBmb3JjZWQgb24iLAotCQkJZHBfdG9fZGlnX3BvcnQoaW50
ZWxfZHApLT5iYXNlLmJhc2UuYmFzZS5pZCwKLQkJCWRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+
YmFzZS5iYXNlLm5hbWUpOwotCi0JaW50ZWxfZHAtPndhbnRfcGFuZWxfdmRkID0gZmFsc2U7Ci0K
LQlpZiAoc3luYykKLQkJZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhpbnRlbF9kcCk7Ci0JZWxzZQot
CQllZHBfcGFuZWxfdmRkX3NjaGVkdWxlX29mZihpbnRlbF9kcCk7Ci19Ci0KLXN0YXRpYyB2b2lk
IGVkcF9wYW5lbF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwotCXUzMiBwcDsK
LQlpOTE1X3JlZ190IHBwX2N0cmxfcmVnOwotCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3By
aXYtPnBwc19tdXRleCk7Ci0KLQlpZiAoIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCi0JCXJl
dHVybjsKLQotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiVHVybiBbRU5DT0RFUjolZDol
c10gcGFuZWwgcG93ZXIgb25cbiIsCi0JCSAgICBkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJh
c2UuYmFzZS5iYXNlLmlkLAotCQkgICAgZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJh
c2UubmFtZSk7Ci0KLQlpZiAoZHJtX1dBUk4oJmRldl9wcml2LT5kcm0sIGVkcF9oYXZlX3BhbmVs
X3Bvd2VyKGludGVsX2RwKSwKLQkJICAgICAiW0VOQ09ERVI6JWQ6JXNdIHBhbmVsIHBvd2VyIGFs
cmVhZHkgb25cbiIsCi0JCSAgICAgZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2Uu
YmFzZS5pZCwKLQkJICAgICBkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5uYW1l
KSkKLQkJcmV0dXJuOwotCi0Jd2FpdF9wYW5lbF9wb3dlcl9jeWNsZShpbnRlbF9kcCk7Ci0KLQlw
cF9jdHJsX3JlZyA9IF9wcF9jdHJsX3JlZyhpbnRlbF9kcCk7Ci0JcHAgPSBpbGtfZ2V0X3BwX2Nv
bnRyb2woaW50ZWxfZHApOwotCWlmIChJU19HRU4oZGV2X3ByaXYsIDUpKSB7Ci0JCS8qIElMSyB3
b3JrYXJvdW5kOiBkaXNhYmxlIHJlc2V0IGFyb3VuZCBwb3dlciBzZXF1ZW5jZSAqLwotCQlwcCAm
PSB+UEFORUxfUE9XRVJfUkVTRVQ7Ci0JCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBwcF9jdHJs
X3JlZywgcHApOwotCQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIHBwX2N0cmxfcmVn
KTsKLQl9Ci0KLQlwcCB8PSBQQU5FTF9QT1dFUl9PTjsKLQlpZiAoIUlTX0dFTihkZXZfcHJpdiwg
NSkpCi0JCXBwIHw9IFBBTkVMX1BPV0VSX1JFU0VUOwotCi0JaW50ZWxfZGVfd3JpdGUoZGV2X3By
aXYsIHBwX2N0cmxfcmVnLCBwcCk7Ci0JaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBw
cF9jdHJsX3JlZyk7Ci0KLQl3YWl0X3BhbmVsX29uKGludGVsX2RwKTsKLQlpbnRlbF9kcC0+bGFz
dF9wb3dlcl9vbiA9IGppZmZpZXM7Ci0KLQlpZiAoSVNfR0VOKGRldl9wcml2LCA1KSkgewotCQlw
cCB8PSBQQU5FTF9QT1dFUl9SRVNFVDsgLyogcmVzdG9yZSBwYW5lbCByZXNldCBiaXQgKi8KLQkJ
aW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7Ci0JCWludGVsX2RlX3Bv
c3RpbmdfcmVhZChkZXZfcHJpdiwgcHBfY3RybF9yZWcpOwotCX0KLX0KLQotdm9pZCBpbnRlbF9l
ZHBfcGFuZWxfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlpbnRlbF93YWtlcmVm
X3Qgd2FrZXJlZjsKLQotCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKLQkJcmV0dXJu
OwotCi0Jd2l0aF9wcHNfbG9jayhpbnRlbF9kcCwgd2FrZXJlZikKLQkJZWRwX3BhbmVsX29uKGlu
dGVsX2RwKTsKLX0KLQotCi1zdGF0aWMgdm9pZCBlZHBfcGFuZWxfb2ZmKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBf
dG9faTkxNShpbnRlbF9kcCk7Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQg
PSBkcF90b19kaWdfcG9ydChpbnRlbF9kcCk7Ci0JdTMyIHBwOwotCWk5MTVfcmVnX3QgcHBfY3Ry
bF9yZWc7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKLQot
CWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKLQkJcmV0dXJuOwotCi0JZHJtX2RiZ19r
bXMoJmRldl9wcml2LT5kcm0sICJUdXJuIFtFTkNPREVSOiVkOiVzXSBwYW5lbCBwb3dlciBvZmZc
biIsCi0JCSAgICBkaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJh
c2UubmFtZSk7Ci0KLQlkcm1fV0FSTigmZGV2X3ByaXYtPmRybSwgIWludGVsX2RwLT53YW50X3Bh
bmVsX3ZkZCwKLQkJICJOZWVkIFtFTkNPREVSOiVkOiVzXSBWREQgdG8gdHVybiBvZmYgcGFuZWxc
biIsCi0JCSBkaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJhc2Uu
bmFtZSk7Ci0KLQlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7Ci0JLyogV2UgbmVl
ZCB0byBzd2l0Y2ggb2ZmIHBhbmVsIHBvd2VyIF9hbmRfIGZvcmNlIHZkZCwgZm9yIG90aGVyd2lz
ZSBzb21lCi0JICogcGFuZWxzIGdldCB2ZXJ5IHVuaGFwcHkgYW5kIGNlYXNlIHRvIHdvcmsuICov
Ci0JcHAgJj0gfihQQU5FTF9QT1dFUl9PTiB8IFBBTkVMX1BPV0VSX1JFU0VUIHwgRURQX0ZPUkNF
X1ZERCB8Ci0JCUVEUF9CTENfRU5BQkxFKTsKLQotCXBwX2N0cmxfcmVnID0gX3BwX2N0cmxfcmVn
KGludGVsX2RwKTsKLQotCWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCA9IGZhbHNlOworCSAqCisJ
ICogQ1BUIFBDSCBpcyBxdWl0ZSBkaWZmZXJlbnQsIGhhdmluZyBtYW55IGJpdHMgbW92ZWQKKwkg
KiB0byB0aGUgVFJBTlNfRFBfQ1RMIHJlZ2lzdGVyIGluc3RlYWQuIFRoYXQKKwkgKiBjb25maWd1
cmF0aW9uIGhhcHBlbnMgKG9kZGx5KSBpbiBpbGtfcGNoX2VuYWJsZQorCSAqLwogCi0JaW50ZWxf
ZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7Ci0JaW50ZWxfZGVfcG9zdGluZ19y
ZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZyk7CisJLyogUHJlc2VydmUgdGhlIEJJT1MtY29tcHV0
ZWQgZGV0ZWN0ZWQgYml0LiBUaGlzIGlzCisJICogc3VwcG9zZWQgdG8gYmUgcmVhZC1vbmx5Lgor
CSAqLworCWludGVsX2RwLT5EUCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIGludGVsX2RwLT5v
dXRwdXRfcmVnKSAmIERQX0RFVEVDVEVEOwogCi0Jd2FpdF9wYW5lbF9vZmYoaW50ZWxfZHApOwot
CWludGVsX2RwLT5wYW5lbF9wb3dlcl9vZmZfdGltZSA9IGt0aW1lX2dldF9ib290dGltZSgpOwor
CS8qIEhhbmRsZSBEUCBiaXRzIGluIGNvbW1vbiBiZXR3ZWVuIGFsbCB0aHJlZSByZWdpc3RlciBm
b3JtYXRzICovCisJaW50ZWxfZHAtPkRQIHw9IERQX1ZPTFRBR0VfMF80IHwgRFBfUFJFX0VNUEhB
U0lTXzA7CisJaW50ZWxfZHAtPkRQIHw9IERQX1BPUlRfV0lEVEgocGlwZV9jb25maWctPmxhbmVf
Y291bnQpOwogCi0JLyogV2UgZ290IGEgcmVmZXJlbmNlIHdoZW4gd2UgZW5hYmxlZCB0aGUgVkRE
LiAqLwotCWludGVsX2Rpc3BsYXlfcG93ZXJfcHV0KGRldl9wcml2LAotCQkJCWludGVsX2F1eF9w
b3dlcl9kb21haW4oZGlnX3BvcnQpLAotCQkJCWZldGNoX2FuZF96ZXJvKCZpbnRlbF9kcC0+dmRk
X3dha2VyZWYpKTsKLX0KKwkvKiBTcGxpdCBvdXQgdGhlIElCWC9DUFUgdnMgQ1BUIHNldHRpbmdz
ICovCiAKLXZvaWQgaW50ZWxfZWRwX3BhbmVsX29mZihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQotewotCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCWlmIChJU19JVllCUklER0UoZGV2X3By
aXYpICYmIHBvcnQgPT0gUE9SVF9BKSB7CisJCWlmIChhZGp1c3RlZF9tb2RlLT5mbGFncyAmIERS
TV9NT0RFX0ZMQUdfUEhTWU5DKQorCQkJaW50ZWxfZHAtPkRQIHw9IERQX1NZTkNfSFNfSElHSDsK
KwkJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVfRkxBR19QVlNZTkMpCisJCQlp
bnRlbF9kcC0+RFAgfD0gRFBfU1lOQ19WU19ISUdIOworCQlpbnRlbF9kcC0+RFAgfD0gRFBfTElO
S19UUkFJTl9PRkZfQ1BUOwogCi0JaWYgKCFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKQotCQly
ZXR1cm47CisJCWlmIChkcm1fZHBfZW5oYW5jZWRfZnJhbWVfY2FwKGludGVsX2RwLT5kcGNkKSkK
KwkJCWludGVsX2RwLT5EUCB8PSBEUF9FTkhBTkNFRF9GUkFNSU5HOwogCi0Jd2l0aF9wcHNfbG9j
ayhpbnRlbF9kcCwgd2FrZXJlZikKLQkJZWRwX3BhbmVsX29mZihpbnRlbF9kcCk7Ci19CisJCWlu
dGVsX2RwLT5EUCB8PSBEUF9QSVBFX1NFTF9JVkIoY3J0Yy0+cGlwZSk7CisJfSBlbHNlIGlmIChI
QVNfUENIX0NQVChkZXZfcHJpdikgJiYgcG9ydCAhPSBQT1JUX0EpIHsKKwkJdTMyIHRyYW5zX2Rw
OwogCi0vKiBFbmFibGUgYmFja2xpZ2h0IGluIHRoZSBwYW5lbCBwb3dlciBjb250cm9sLiAqLwot
c3RhdGljIHZvaWQgX2ludGVsX2VkcF9iYWNrbGlnaHRfb24oc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1
KGludGVsX2RwKTsKLQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKwkJaW50ZWxfZHAtPkRQIHw9
IERQX0xJTktfVFJBSU5fT0ZGX0NQVDsKIAotCS8qCi0JICogSWYgd2UgZW5hYmxlIHRoZSBiYWNr
bGlnaHQgcmlnaHQgYXdheSBmb2xsb3dpbmcgYSBwYW5lbCBwb3dlcgotCSAqIG9uLCB3ZSBtYXkg
c2VlIHNsaWdodCBmbGlja2VyIGFzIHRoZSBwYW5lbCBzeW5jcyB3aXRoIHRoZSBlRFAKLQkgKiBs
aW5rLiAgU28gZGVsYXkgYSBiaXQgdG8gbWFrZSBzdXJlIHRoZSBpbWFnZSBpcyBzb2xpZCBiZWZv
cmUKLQkgKiBhbGxvd2luZyBpdCB0byBhcHBlYXIuCi0JICovCi0Jd2FpdF9iYWNrbGlnaHRfb24o
aW50ZWxfZHApOworCQl0cmFuc19kcCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFRSQU5TX0RQ
X0NUTChjcnRjLT5waXBlKSk7CisJCWlmIChkcm1fZHBfZW5oYW5jZWRfZnJhbWVfY2FwKGludGVs
X2RwLT5kcGNkKSkKKwkJCXRyYW5zX2RwIHw9IFRSQU5TX0RQX0VOSF9GUkFNSU5HOworCQllbHNl
CisJCQl0cmFuc19kcCAmPSB+VFJBTlNfRFBfRU5IX0ZSQU1JTkc7CisJCWludGVsX2RlX3dyaXRl
KGRldl9wcml2LCBUUkFOU19EUF9DVEwoY3J0Yy0+cGlwZSksIHRyYW5zX2RwKTsKKwl9IGVsc2Ug
eworCQlpZiAoSVNfRzRYKGRldl9wcml2KSAmJiBwaXBlX2NvbmZpZy0+bGltaXRlZF9jb2xvcl9y
YW5nZSkKKwkJCWludGVsX2RwLT5EUCB8PSBEUF9DT0xPUl9SQU5HRV8xNl8yMzU7CiAKLQl3aXRo
X3Bwc19sb2NrKGludGVsX2RwLCB3YWtlcmVmKSB7Ci0JCWk5MTVfcmVnX3QgcHBfY3RybF9yZWcg
PSBfcHBfY3RybF9yZWcoaW50ZWxfZHApOwotCQl1MzIgcHA7CisJCWlmIChhZGp1c3RlZF9tb2Rl
LT5mbGFncyAmIERSTV9NT0RFX0ZMQUdfUEhTWU5DKQorCQkJaW50ZWxfZHAtPkRQIHw9IERQX1NZ
TkNfSFNfSElHSDsKKwkJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVfRkxBR19Q
VlNZTkMpCisJCQlpbnRlbF9kcC0+RFAgfD0gRFBfU1lOQ19WU19ISUdIOworCQlpbnRlbF9kcC0+
RFAgfD0gRFBfTElOS19UUkFJTl9PRkY7CiAKLQkJcHAgPSBpbGtfZ2V0X3BwX2NvbnRyb2woaW50
ZWxfZHApOwotCQlwcCB8PSBFRFBfQkxDX0VOQUJMRTsKKwkJaWYgKGRybV9kcF9lbmhhbmNlZF9m
cmFtZV9jYXAoaW50ZWxfZHAtPmRwY2QpKQorCQkJaW50ZWxfZHAtPkRQIHw9IERQX0VOSEFOQ0VE
X0ZSQU1JTkc7CiAKLQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7
Ci0JCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgcHBfY3RybF9yZWcpOworCQlpZiAo
SVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCisJCQlpbnRlbF9kcC0+RFAgfD0gRFBfUElQRV9TRUxf
Q0hWKGNydGMtPnBpcGUpOworCQllbHNlCisJCQlpbnRlbF9kcC0+RFAgfD0gRFBfUElQRV9TRUwo
Y3J0Yy0+cGlwZSk7CiAJfQogfQogCisKIC8qIEVuYWJsZSBiYWNrbGlnaHQgUFdNIGFuZCBiYWNr
bGlnaHQgUFAgY29udHJvbC4gKi8KIHZvaWQgaW50ZWxfZWRwX2JhY2tsaWdodF9vbihjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICBjb25zdCBzdHJ1Y3Qg
ZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSkKQEAgLTM0MzIsMzAgKzI1NjYsNiBAQCB2
b2lkIGludGVsX2VkcF9iYWNrbGlnaHRfb24oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCiAJX2ludGVsX2VkcF9iYWNrbGlnaHRfb24oaW50ZWxfZHApOwogfQogCi0v
KiBEaXNhYmxlIGJhY2tsaWdodCBpbiB0aGUgcGFuZWwgcG93ZXIgY29udHJvbC4gKi8KLXN0YXRp
YyB2b2lkIF9pbnRlbF9lZHBfYmFja2xpZ2h0X29mZihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50
ZWxfZHApOwotCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwotCi0JaWYgKCFpbnRlbF9kcF9pc19l
ZHAoaW50ZWxfZHApKQotCQlyZXR1cm47Ci0KLQl3aXRoX3Bwc19sb2NrKGludGVsX2RwLCB3YWtl
cmVmKSB7Ci0JCWk5MTVfcmVnX3QgcHBfY3RybF9yZWcgPSBfcHBfY3RybF9yZWcoaW50ZWxfZHAp
OwotCQl1MzIgcHA7Ci0KLQkJcHAgPSBpbGtfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOwotCQlw
cCAmPSB+RURQX0JMQ19FTkFCTEU7Ci0KLQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0
cmxfcmVnLCBwcCk7Ci0JCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgcHBfY3RybF9y
ZWcpOwotCX0KLQotCWludGVsX2RwLT5sYXN0X2JhY2tsaWdodF9vZmYgPSBqaWZmaWVzOwotCWVk
cF93YWl0X2JhY2tsaWdodF9vZmYoaW50ZWxfZHApOwotfQotCiAvKiBEaXNhYmxlIGJhY2tsaWdo
dCBQUCBjb250cm9sIGFuZCBiYWNrbGlnaHQgUFdNLiAqLwogdm9pZCBpbnRlbF9lZHBfYmFja2xp
Z2h0X29mZihjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqb2xkX2Nvbm5fc3RhdGUp
CiB7CkBAIC0zNDcxLDMzICsyNTgxLDYgQEAgdm9pZCBpbnRlbF9lZHBfYmFja2xpZ2h0X29mZihj
b25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqb2xkX2Nvbm5fc3RhdGUpCiAJaW50ZWxf
cGFuZWxfZGlzYWJsZV9iYWNrbGlnaHQob2xkX2Nvbm5fc3RhdGUpOwogfQogCi0vKgotICogSG9v
ayBmb3IgY29udHJvbGxpbmcgdGhlIHBhbmVsIHBvd2VyIGNvbnRyb2wgYmFja2xpZ2h0IHRocm91
Z2ggdGhlIGJsX3Bvd2VyCi0gKiBzeXNmcyBhdHRyaWJ1dGUuIFRha2UgY2FyZSB0byBoYW5kbGUg
bXVsdGlwbGUgY2FsbHMuCi0gKi8KLXN0YXRpYyB2b2lkIGludGVsX2VkcF9iYWNrbGlnaHRfcG93
ZXIoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yLAotCQkJCSAgICAgIGJvb2wgZW5h
YmxlKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkxNShjb25uZWN0
b3ItPmJhc2UuZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gaW50ZWxfYXR0YWNo
ZWRfZHAoY29ubmVjdG9yKTsKLQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQlib29sIGlzX2Vu
YWJsZWQ7Ci0KLQlpc19lbmFibGVkID0gZmFsc2U7Ci0Jd2l0aF9wcHNfbG9jayhpbnRlbF9kcCwg
d2FrZXJlZikKLQkJaXNfZW5hYmxlZCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCkgJiBF
RFBfQkxDX0VOQUJMRTsKLQlpZiAoaXNfZW5hYmxlZCA9PSBlbmFibGUpCi0JCXJldHVybjsKLQot
CWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJwYW5lbCBwb3dlciBjb250cm9sIGJhY2tsaWdodCAl
c1xuIiwKLQkJICAgIGVuYWJsZSA/ICJlbmFibGUiIDogImRpc2FibGUiKTsKLQotCWlmIChlbmFi
bGUpCi0JCV9pbnRlbF9lZHBfYmFja2xpZ2h0X29uKGludGVsX2RwKTsKLQllbHNlCi0JCV9pbnRl
bF9lZHBfYmFja2xpZ2h0X29mZihpbnRlbF9kcCk7Ci19Ci0KIHN0YXRpYyB2b2lkIGFzc2VydF9k
cF9wb3J0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIGJvb2wgc3RhdGUpCiB7CiAJc3RydWN0
IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRlbF9kcCk7
CkBAIC00NDk4LDExMiArMzU4MSw2IEBAIHN0YXRpYyB2b2lkIGc0eF9wcmVfZW5hYmxlX2RwKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQlpbGtfZWRwX3BsbF9vbihpbnRlbF9k
cCwgcGlwZV9jb25maWcpOwogfQogCi1zdGF0aWMgdm9pZCB2bHZfZGV0YWNoX3Bvd2VyX3NlcXVl
bmNlcihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOwotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXYp
OwotCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfZHAtPnBwc19waXBlOwotCWk5MTVfcmVnX3QgcHBf
b25fcmVnID0gUFBfT05fREVMQVlTKHBpcGUpOwotCi0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5k
cm0sIGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPSBJTlZBTElEX1BJUEUpOwotCi0JaWYgKGRybV9X
QVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBwaXBlICE9IFBJUEVfQSAmJiBwaXBlICE9IFBJUEVfQikp
Ci0JCXJldHVybjsKLQotCWVkcF9wYW5lbF92ZGRfb2ZmX3N5bmMoaW50ZWxfZHApOwotCi0JLyoK
LQkgKiBWTFYgc2VlbXMgdG8gZ2V0IGNvbmZ1c2VkIHdoZW4gbXVsdGlwbGUgcG93ZXIgc2VxdWVu
Y2VycwotCSAqIGhhdmUgdGhlIHNhbWUgcG9ydCBzZWxlY3RlZCAoZXZlbiBpZiBvbmx5IG9uZSBo
YXMgcG93ZXIvdmRkCi0JICogZW5hYmxlZCkuIFRoZSBmYWlsdXJlIG1hbmlmZXN0cyBhcyB2bHZf
d2FpdF9wb3J0X3JlYWR5KCkgZmFpbGluZwotCSAqIENIViBvbiB0aGUgb3RoZXIgaGFuZCBkb2Vz
bid0IHNlZW0gdG8gbWluZCBoYXZpbmcgdGhlIHNhbWUgcG9ydAotCSAqIHNlbGVjdGVkIGluIG11
bHRpcGxlIHBvd2VyIHNlcXVlbmNlcnMsIGJ1dCBsZXQncyBjbGVhciB0aGUKLQkgKiBwb3J0IHNl
bGVjdCBhbHdheXMgd2hlbiBsb2dpY2FsbHkgZGlzY29ubmVjdGluZyBhIHBvd2VyIHNlcXVlbmNl
cgotCSAqIGZyb20gYSBwb3J0LgotCSAqLwotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAot
CQkgICAgImRldGFjaGluZyBwaXBlICVjIHBvd2VyIHNlcXVlbmNlciBmcm9tIFtFTkNPREVSOiVk
OiVzXVxuIiwKLQkJICAgIHBpcGVfbmFtZShwaXBlKSwgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNl
LmlkLAotCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKLQlpbnRlbF9kZV93cml0ZShk
ZXZfcHJpdiwgcHBfb25fcmVnLCAwKTsKLQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYs
IHBwX29uX3JlZyk7Ci0KLQlpbnRlbF9kcC0+cHBzX3BpcGUgPSBJTlZBTElEX1BJUEU7Ci19Ci0K
LXN0YXRpYyB2b2lkIHZsdl9zdGVhbF9wb3dlcl9zZXF1ZW5jZXIoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAotCQkJCSAgICAgIGVudW0gcGlwZSBwaXBlKQotewotCXN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyOwotCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYt
PnBwc19tdXRleCk7Ci0KLQlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2Rl
cikgewotCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29k
ZXIpOwotCi0JCWRybV9XQVJOKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9kcC0+YWN0aXZlX3BpcGUg
PT0gcGlwZSwKLQkJCSAic3RlYWxpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZnJvbSBhY3Rp
dmUgW0VOQ09ERVI6JWQ6JXNdXG4iLAotCQkJIHBpcGVfbmFtZShwaXBlKSwgZW5jb2Rlci0+YmFz
ZS5iYXNlLmlkLAotCQkJIGVuY29kZXItPmJhc2UubmFtZSk7Ci0KLQkJaWYgKGludGVsX2RwLT5w
cHNfcGlwZSAhPSBwaXBlKQotCQkJY29udGludWU7Ci0KLQkJZHJtX2RiZ19rbXMoJmRldl9wcml2
LT5kcm0sCi0JCQkgICAgInN0ZWFsaW5nIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZyb20gW0VO
Q09ERVI6JWQ6JXNdXG4iLAotCQkJICAgIHBpcGVfbmFtZShwaXBlKSwgZW5jb2Rlci0+YmFzZS5i
YXNlLmlkLAotCQkJICAgIGVuY29kZXItPmJhc2UubmFtZSk7Ci0KLQkJLyogbWFrZSBzdXJlIHZk
ZCBpcyBvZmYgYmVmb3JlIHdlIHN0ZWFsIGl0ICovCi0JCXZsdl9kZXRhY2hfcG93ZXJfc2VxdWVu
Y2VyKGludGVsX2RwKTsKLQl9Ci19Ci0KLXN0YXRpYyB2b2lkIHZsdl9pbml0X3BhbmVsX3Bvd2Vy
X3NlcXVlbmNlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKLQkJCQkJICAgY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCi17Ci0Jc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7Ci0Jc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKLQlzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsK
LQotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOwotCi0JZHJtX1dB
Uk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPSBJTlZBTElEX1BJ
UEUpOwotCi0JaWYgKGludGVsX2RwLT5wcHNfcGlwZSAhPSBJTlZBTElEX1BJUEUgJiYKLQkgICAg
aW50ZWxfZHAtPnBwc19waXBlICE9IGNydGMtPnBpcGUpIHsKLQkJLyoKLQkJICogSWYgYW5vdGhl
ciBwb3dlciBzZXF1ZW5jZXIgd2FzIGJlaW5nIHVzZWQgb24gdGhpcwotCQkgKiBwb3J0IHByZXZp
b3VzbHkgbWFrZSBzdXJlIHRvIHR1cm4gb2ZmIHZkZCB0aGVyZSB3aGlsZQotCQkgKiB3ZSBzdGls
bCBoYXZlIGNvbnRyb2wgb2YgaXQuCi0JCSAqLwotCQl2bHZfZGV0YWNoX3Bvd2VyX3NlcXVlbmNl
cihpbnRlbF9kcCk7Ci0JfQotCi0JLyoKLQkgKiBXZSBtYXkgYmUgc3RlYWxpbmcgdGhlIHBvd2Vy
Ci0JICogc2VxdWVuY2VyIGZyb20gYW5vdGhlciBwb3J0LgotCSAqLwotCXZsdl9zdGVhbF9wb3dl
cl9zZXF1ZW5jZXIoZGV2X3ByaXYsIGNydGMtPnBpcGUpOwotCi0JaW50ZWxfZHAtPmFjdGl2ZV9w
aXBlID0gY3J0Yy0+cGlwZTsKLQotCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKLQkJ
cmV0dXJuOwotCi0JLyogbm93IGl0J3MgYWxsIG91cnMgKi8KLQlpbnRlbF9kcC0+cHBzX3BpcGUg
PSBjcnRjLT5waXBlOwotCi0JZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCi0JCSAgICAiaW5p
dGlhbGl6aW5nIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZvciBbRU5DT0RFUjolZDolc11cbiIs
Ci0JCSAgICBwaXBlX25hbWUoaW50ZWxfZHAtPnBwc19waXBlKSwgZW5jb2Rlci0+YmFzZS5iYXNl
LmlkLAotCQkgICAgZW5jb2Rlci0+YmFzZS5uYW1lKTsKLQotCS8qIGluaXQgcG93ZXIgc2VxdWVu
Y2VyIG9uIHRoaXMgcGlwZSBhbmQgcG9ydCAqLwotCWludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJf
c2VxdWVuY2VyKGludGVsX2RwKTsKLQlpbnRlbF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNl
cl9yZWdpc3RlcnMoaW50ZWxfZHAsIHRydWUpOwotfQotCiBzdGF0aWMgdm9pZCB2bHZfcHJlX2Vu
YWJsZV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCSAgICAgIHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKnBpcGVfY29uZmlnLApAQCAtNzMyNCwzMSArNjMwMSw2IEBAIHZvaWQgaW50ZWxf
ZHBfZW5jb2Rlcl9zaHV0ZG93bihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqaW50ZWxfZW5jb2RlcikK
IAkJd2FpdF9wYW5lbF9wb3dlcl9jeWNsZShpbnRlbF9kcCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlu
dGVsX2VkcF9wYW5lbF92ZGRfc2FuaXRpemUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsK
LQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2Rw
KTsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0
KGludGVsX2RwKTsKLQotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgp
OwotCi0JaWYgKCFlZHBfaGF2ZV9wYW5lbF92ZGQoaW50ZWxfZHApKQotCQlyZXR1cm47Ci0KLQkv
KgotCSAqIFRoZSBWREQgYml0IG5lZWRzIGEgcG93ZXIgZG9tYWluIHJlZmVyZW5jZSwgc28gaWYg
dGhlIGJpdCBpcwotCSAqIGFscmVhZHkgZW5hYmxlZCB3aGVuIHdlIGJvb3Qgb3IgcmVzdW1lLCBn
cmFiIHRoaXMgcmVmZXJlbmNlIGFuZAotCSAqIHNjaGVkdWxlIGEgdmRkIG9mZiwgc28gd2UgZG9u
J3QgaG9sZCBvbiB0byB0aGUgcmVmZXJlbmNlCi0JICogaW5kZWZpbml0ZWx5LgotCSAqLwotCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkgICAgIlZERCBsZWZ0IG9uIGJ5IEJJT1MsIGFk
anVzdGluZyBzdGF0ZSB0cmFja2luZ1xuIik7Ci0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0s
IGludGVsX2RwLT52ZGRfd2FrZXJlZik7Ci0JaW50ZWxfZHAtPnZkZF93YWtlcmVmID0gaW50ZWxf
ZGlzcGxheV9wb3dlcl9nZXQoZGV2X3ByaXYsCi0JCQkJCQkJaW50ZWxfYXV4X3Bvd2VyX2RvbWFp
bihkaWdfcG9ydCkpOwotCi0JZWRwX3BhbmVsX3ZkZF9zY2hlZHVsZV9vZmYoaW50ZWxfZHApOwot
fQotCiBzdGF0aWMgZW51bSBwaXBlIHZsdl9hY3RpdmVfcGlwZShzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5
MTUoaW50ZWxfZHApOwpAQCAtNzU1NCwxOSArNjUwNiw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qg
ZHJtX2VuY29kZXJfZnVuY3MgaW50ZWxfZHBfZW5jX2Z1bmNzID0gewogCS5kZXN0cm95ID0gaW50
ZWxfZHBfZW5jb2Rlcl9kZXN0cm95LAogfTsKIAotc3RhdGljIGJvb2wgaW50ZWxfZWRwX2hhdmVf
cG93ZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlpbnRlbF93YWtlcmVmX3Qgd2Fr
ZXJlZjsKLQlib29sIGhhdmVfcG93ZXIgPSBmYWxzZTsKLQotCXdpdGhfcHBzX2xvY2soaW50ZWxf
ZHAsIHdha2VyZWYpIHsKLQkJaGF2ZV9wb3dlciA9IGVkcF9oYXZlX3BhbmVsX3Bvd2VyKGludGVs
X2RwKSAmJgotCQkJCQkJICBlZHBfaGF2ZV9wYW5lbF92ZGQoaW50ZWxfZHApOwotCX0KLQotCXJl
dHVybiBoYXZlX3Bvd2VyOwotfQotCiBlbnVtIGlycXJldHVybgogaW50ZWxfZHBfaHBkX3B1bHNl
KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0LCBib29sIGxvbmdfaHBkKQogewpA
QCAtNzY3MCwyNzcgKzY2MDksNiBAQCBpbnRlbF9kcF9hZGRfcHJvcGVydGllcyhzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLCBzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdAogCX0KIH0KIAot
c3RhdGljIHZvaWQgaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl90aW1lc3RhbXBzKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCi17Ci0JaW50ZWxfZHAtPnBhbmVsX3Bvd2VyX29mZl90aW1lID0g
a3RpbWVfZ2V0X2Jvb3R0aW1lKCk7Ci0JaW50ZWxfZHAtPmxhc3RfcG93ZXJfb24gPSBqaWZmaWVz
OwotCWludGVsX2RwLT5sYXN0X2JhY2tsaWdodF9vZmYgPSBqaWZmaWVzOwotfQotCi1zdGF0aWMg
dm9pZAotaW50ZWxfcHBzX3JlYWRvdXRfaHdfc3RhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwgc3RydWN0IGVkcF9wb3dlcl9zZXEgKnNlcSkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQl1MzIgcHBfb24sIHBwX29mZiwg
cHBfY3RsOwotCXN0cnVjdCBwcHNfcmVnaXN0ZXJzIHJlZ3M7Ci0KLQlpbnRlbF9wcHNfZ2V0X3Jl
Z2lzdGVycyhpbnRlbF9kcCwgJnJlZ3MpOwotCi0JcHBfY3RsID0gaWxrX2dldF9wcF9jb250cm9s
KGludGVsX2RwKTsKLQotCS8qIEVuc3VyZSBQUFMgaXMgdW5sb2NrZWQgKi8KLQlpZiAoIUhBU19E
REkoZGV2X3ByaXYpKQotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgcmVncy5wcF9jdHJsLCBw
cF9jdGwpOwotCi0JcHBfb24gPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdzLnBwX29uKTsK
LQlwcF9vZmYgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdzLnBwX29mZik7Ci0KLQkvKiBQ
dWxsIHRpbWluZyB2YWx1ZXMgb3V0IG9mIHJlZ2lzdGVycyAqLwotCXNlcS0+dDFfdDMgPSBSRUdf
RklFTERfR0VUKFBBTkVMX1BPV0VSX1VQX0RFTEFZX01BU0ssIHBwX29uKTsKLQlzZXEtPnQ4ID0g
UkVHX0ZJRUxEX0dFVChQQU5FTF9MSUdIVF9PTl9ERUxBWV9NQVNLLCBwcF9vbik7Ci0Jc2VxLT50
OSA9IFJFR19GSUVMRF9HRVQoUEFORUxfTElHSFRfT0ZGX0RFTEFZX01BU0ssIHBwX29mZik7Ci0J
c2VxLT50MTAgPSBSRUdfRklFTERfR0VUKFBBTkVMX1BPV0VSX0RPV05fREVMQVlfTUFTSywgcHBf
b2ZmKTsKLQotCWlmIChpOTE1X21taW9fcmVnX3ZhbGlkKHJlZ3MucHBfZGl2KSkgewotCQl1MzIg
cHBfZGl2OwotCi0JCXBwX2RpdiA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJlZ3MucHBfZGl2
KTsKLQotCQlzZXEtPnQxMV90MTIgPSBSRUdfRklFTERfR0VUKFBBTkVMX1BPV0VSX0NZQ0xFX0RF
TEFZX01BU0ssIHBwX2RpdikgKiAxMDAwOwotCX0gZWxzZSB7Ci0JCXNlcS0+dDExX3QxMiA9IFJF
R19GSUVMRF9HRVQoQlhUX1BPV0VSX0NZQ0xFX0RFTEFZX01BU0ssIHBwX2N0bCkgKiAxMDAwOwot
CX0KLX0KLQotc3RhdGljIHZvaWQKLWludGVsX3Bwc19kdW1wX3N0YXRlKGNvbnN0IGNoYXIgKnN0
YXRlX25hbWUsIGNvbnN0IHN0cnVjdCBlZHBfcG93ZXJfc2VxICpzZXEpCi17Ci0JRFJNX0RFQlVH
X0tNUygiJXMgdDFfdDMgJWQgdDggJWQgdDkgJWQgdDEwICVkIHQxMV90MTIgJWRcbiIsCi0JCSAg
ICAgIHN0YXRlX25hbWUsCi0JCSAgICAgIHNlcS0+dDFfdDMsIHNlcS0+dDgsIHNlcS0+dDksIHNl
cS0+dDEwLCBzZXEtPnQxMV90MTIpOwotfQotCi1zdGF0aWMgdm9pZAotaW50ZWxfcHBzX3Zlcmlm
eV9zdGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQotewotCXN0cnVjdCBlZHBfcG93ZXJf
c2VxIGh3OwotCXN0cnVjdCBlZHBfcG93ZXJfc2VxICpzdyA9ICZpbnRlbF9kcC0+cHBzX2RlbGF5
czsKLQotCWludGVsX3Bwc19yZWFkb3V0X2h3X3N0YXRlKGludGVsX2RwLCAmaHcpOwotCi0JaWYg
KGh3LnQxX3QzICE9IHN3LT50MV90MyB8fCBody50OCAhPSBzdy0+dDggfHwgaHcudDkgIT0gc3ct
PnQ5IHx8Ci0JICAgIGh3LnQxMCAhPSBzdy0+dDEwIHx8IGh3LnQxMV90MTIgIT0gc3ctPnQxMV90
MTIpIHsKLQkJRFJNX0VSUk9SKCJQUFMgc3RhdGUgbWlzbWF0Y2hcbiIpOwotCQlpbnRlbF9wcHNf
ZHVtcF9zdGF0ZSgic3ciLCBzdyk7Ci0JCWludGVsX3Bwc19kdW1wX3N0YXRlKCJodyIsICZodyk7
Ci0JfQotfQotCi1zdGF0aWMgdm9pZAotaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5j
ZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgZWRwX3Bvd2VyX3Nl
cSBjdXIsIHZidCwgc3BlYywKLQkJKmZpbmFsID0gJmludGVsX2RwLT5wcHNfZGVsYXlzOwotCi0J
bG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBwc19tdXRleCk7Ci0KLQkvKiBhbHJlYWR5
IGluaXRpYWxpemVkPyAqLwotCWlmIChmaW5hbC0+dDExX3QxMiAhPSAwKQotCQlyZXR1cm47Ci0K
LQlpbnRlbF9wcHNfcmVhZG91dF9od19zdGF0ZShpbnRlbF9kcCwgJmN1cik7Ci0KLQlpbnRlbF9w
cHNfZHVtcF9zdGF0ZSgiY3VyIiwgJmN1cik7Ci0KLQl2YnQgPSBkZXZfcHJpdi0+dmJ0LmVkcC5w
cHM7Ci0JLyogT24gVG9zaGliYSBTYXRlbGxpdGUgUDUwLUMtMThDIHN5c3RlbSB0aGUgVkJUIFQx
MiBkZWxheQotCSAqIG9mIDUwMG1zIGFwcGVhcnMgdG8gYmUgdG9vIHNob3J0LiBPY2Fzc2lvbmFs
bHkgdGhlIHBhbmVsCi0JICoganVzdCBmYWlscyB0byBwb3dlciBiYWNrIG9uLiBJbmNyZWFzaW5n
IHRoZSBkZWxheSB0byA4MDBtcwotCSAqIHNlZW1zIHN1ZmZpY2llbnQgdG8gYXZvaWQgdGhpcyBw
cm9ibGVtLgotCSAqLwotCWlmIChkZXZfcHJpdi0+cXVpcmtzICYgUVVJUktfSU5DUkVBU0VfVDEy
X0RFTEFZKSB7Ci0JCXZidC50MTFfdDEyID0gbWF4X3QodTE2LCB2YnQudDExX3QxMiwgMTMwMCAq
IDEwKTsKLQkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCi0JCQkgICAgIkluY3JlYXNpbmcg
VDEyIHBhbmVsIGRlbGF5IGFzIHBlciB0aGUgcXVpcmsgdG8gJWRcbiIsCi0JCQkgICAgdmJ0LnQx
MV90MTIpOwotCX0KLQkvKiBUMTFfVDEyIGRlbGF5IGlzIHNwZWNpYWwgYW5kIGFjdHVhbGx5IGlu
IHVuaXRzIG9mIDEwMG1zLCBidXQgemVybwotCSAqIGJhc2VkIGluIHRoZSBodyAoc28gd2UgbmVl
ZCB0byBhZGQgMTAwIG1zKS4gQnV0IHRoZSBzdyB2YnQKLQkgKiB0YWJsZSBtdWx0aXBsaWVzIGl0
IHdpdGggMTAwMCB0byBtYWtlIGl0IGluIHVuaXRzIG9mIDEwMHVzZWMsCi0JICogdG9vLiAqLwot
CXZidC50MTFfdDEyICs9IDEwMCAqIDEwOwotCi0JLyogVXBwZXIgbGltaXRzIGZyb20gZURQIDEu
MyBzcGVjLiBOb3RlIHRoYXQgd2UgdXNlIHRoZSBjbHVua3kgdW5pdHMgb2YKLQkgKiBvdXIgaHcg
aGVyZSwgd2hpY2ggYXJlIGFsbCBpbiAxMDB1c2VjLiAqLwotCXNwZWMudDFfdDMgPSAyMTAgKiAx
MDsKLQlzcGVjLnQ4ID0gNTAgKiAxMDsgLyogbm8gbGltaXQgZm9yIHQ4LCB1c2UgdDcgaW5zdGVh
ZCAqLwotCXNwZWMudDkgPSA1MCAqIDEwOyAvKiBubyBsaW1pdCBmb3IgdDksIG1ha2UgaXQgc3lt
bWV0cmljIHdpdGggdDggKi8KLQlzcGVjLnQxMCA9IDUwMCAqIDEwOwotCS8qIFRoaXMgb25lIGlz
IHNwZWNpYWwgYW5kIGFjdHVhbGx5IGluIHVuaXRzIG9mIDEwMG1zLCBidXQgemVybwotCSAqIGJh
c2VkIGluIHRoZSBodyAoc28gd2UgbmVlZCB0byBhZGQgMTAwIG1zKS4gQnV0IHRoZSBzdyB2YnQK
LQkgKiB0YWJsZSBtdWx0aXBsaWVzIGl0IHdpdGggMTAwMCB0byBtYWtlIGl0IGluIHVuaXRzIG9m
IDEwMHVzZWMsCi0JICogdG9vLiAqLwotCXNwZWMudDExX3QxMiA9ICg1MTAgKyAxMDApICogMTA7
Ci0KLQlpbnRlbF9wcHNfZHVtcF9zdGF0ZSgidmJ0IiwgJnZidCk7Ci0KLQkvKiBVc2UgdGhlIG1h
eCBvZiB0aGUgcmVnaXN0ZXIgc2V0dGluZ3MgYW5kIHZidC4gSWYgYm90aCBhcmUKLQkgKiB1bnNl
dCwgZmFsbCBiYWNrIHRvIHRoZSBzcGVjIGxpbWl0cy4gKi8KLSNkZWZpbmUgYXNzaWduX2ZpbmFs
KGZpZWxkKQlmaW5hbC0+ZmllbGQgPSAobWF4KGN1ci5maWVsZCwgdmJ0LmZpZWxkKSA9PSAwID8g
XAotCQkJCSAgICAgICBzcGVjLmZpZWxkIDogXAotCQkJCSAgICAgICBtYXgoY3VyLmZpZWxkLCB2
YnQuZmllbGQpKQotCWFzc2lnbl9maW5hbCh0MV90Myk7Ci0JYXNzaWduX2ZpbmFsKHQ4KTsKLQlh
c3NpZ25fZmluYWwodDkpOwotCWFzc2lnbl9maW5hbCh0MTApOwotCWFzc2lnbl9maW5hbCh0MTFf
dDEyKTsKLSN1bmRlZiBhc3NpZ25fZmluYWwKLQotI2RlZmluZSBnZXRfZGVsYXkoZmllbGQpCShE
SVZfUk9VTkRfVVAoZmluYWwtPmZpZWxkLCAxMCkpCi0JaW50ZWxfZHAtPnBhbmVsX3Bvd2VyX3Vw
X2RlbGF5ID0gZ2V0X2RlbGF5KHQxX3QzKTsKLQlpbnRlbF9kcC0+YmFja2xpZ2h0X29uX2RlbGF5
ID0gZ2V0X2RlbGF5KHQ4KTsKLQlpbnRlbF9kcC0+YmFja2xpZ2h0X29mZl9kZWxheSA9IGdldF9k
ZWxheSh0OSk7Ci0JaW50ZWxfZHAtPnBhbmVsX3Bvd2VyX2Rvd25fZGVsYXkgPSBnZXRfZGVsYXko
dDEwKTsKLQlpbnRlbF9kcC0+cGFuZWxfcG93ZXJfY3ljbGVfZGVsYXkgPSBnZXRfZGVsYXkodDEx
X3QxMik7Ci0jdW5kZWYgZ2V0X2RlbGF5Ci0KLQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwK
LQkJICAgICJwYW5lbCBwb3dlciB1cCBkZWxheSAlZCwgcG93ZXIgZG93biBkZWxheSAlZCwgcG93
ZXIgY3ljbGUgZGVsYXkgJWRcbiIsCi0JCSAgICBpbnRlbF9kcC0+cGFuZWxfcG93ZXJfdXBfZGVs
YXksCi0JCSAgICBpbnRlbF9kcC0+cGFuZWxfcG93ZXJfZG93bl9kZWxheSwKLQkJICAgIGludGVs
X2RwLT5wYW5lbF9wb3dlcl9jeWNsZV9kZWxheSk7Ci0KLQlkcm1fZGJnX2ttcygmZGV2X3ByaXYt
PmRybSwgImJhY2tsaWdodCBvbiBkZWxheSAlZCwgb2ZmIGRlbGF5ICVkXG4iLAotCQkgICAgaW50
ZWxfZHAtPmJhY2tsaWdodF9vbl9kZWxheSwKLQkJICAgIGludGVsX2RwLT5iYWNrbGlnaHRfb2Zm
X2RlbGF5KTsKLQotCS8qCi0JICogV2Ugb3ZlcnJpZGUgdGhlIEhXIGJhY2tsaWdodCBkZWxheXMg
dG8gMSBiZWNhdXNlIHdlIGRvIG1hbnVhbCB3YWl0cwotCSAqIG9uIHRoZW0uIEZvciBUOCwgZXZl
biBCU3BlYyByZWNvbW1lbmRzIGRvaW5nIGl0LiBGb3IgVDksIGlmIHdlCi0JICogZG9uJ3QgZG8g
dGhpcywgd2UnbGwgZW5kIHVwIHdhaXRpbmcgZm9yIHRoZSBiYWNrbGlnaHQgb2ZmIGRlbGF5Ci0J
ICogdHdpY2U6IG9uY2Ugd2hlbiB3ZSBkbyB0aGUgbWFudWFsIHNsZWVwLCBhbmQgb25jZSB3aGVu
IHdlIGRpc2FibGUKLQkgKiB0aGUgcGFuZWwgYW5kIHdhaXQgZm9yIHRoZSBQUF9TVEFUVVMgYml0
IHRvIGJlY29tZSB6ZXJvLgotCSAqLwotCWZpbmFsLT50OCA9IDE7Ci0JZmluYWwtPnQ5ID0gMTsK
LQotCS8qCi0JICogSFcgaGFzIG9ubHkgYSAxMDBtc2VjIGdyYW51bGFyaXR5IGZvciB0MTFfdDEy
IHNvIHJvdW5kIGl0IHVwCi0JICogYWNjb3JkaW5nbHkuCi0JICovCi0JZmluYWwtPnQxMV90MTIg
PSByb3VuZHVwKGZpbmFsLT50MTFfdDEyLCAxMDAgKiAxMCk7Ci19Ci0KLXN0YXRpYyB2b2lkCi1p
bnRlbF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcl9yZWdpc3RlcnMoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCwKLQkJCQkJICAgICAgYm9vbCBmb3JjZV9kaXNhYmxlX3ZkZCkKLXsKLQlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsK
LQl1MzIgcHBfb24sIHBwX29mZiwgcG9ydF9zZWwgPSAwOwotCWludCBkaXYgPSBSVU5USU1FX0lO
Rk8oZGV2X3ByaXYpLT5yYXdjbGtfZnJlcSAvIDEwMDA7Ci0Jc3RydWN0IHBwc19yZWdpc3RlcnMg
cmVnczsKLQllbnVtIHBvcnQgcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5w
b3J0OwotCWNvbnN0IHN0cnVjdCBlZHBfcG93ZXJfc2VxICpzZXEgPSAmaW50ZWxfZHAtPnBwc19k
ZWxheXM7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKLQot
CWludGVsX3Bwc19nZXRfcmVnaXN0ZXJzKGludGVsX2RwLCAmcmVncyk7Ci0KLQkvKgotCSAqIE9u
IHNvbWUgVkxWIG1hY2hpbmVzIHRoZSBCSU9TIGNhbiBsZWF2ZSB0aGUgVkRECi0JICogZW5hYmxl
ZCBldmVuIG9uIHBvd2VyIHNlcXVlbmNlcnMgd2hpY2ggYXJlbid0Ci0JICogaG9va2VkIHVwIHRv
IGFueSBwb3J0LiBUaGlzIHdvdWxkIG1lc3MgdXAgdGhlCi0JICogcG93ZXIgZG9tYWluIHRyYWNr
aW5nIHRoZSBmaXJzdCB0aW1lIHdlIHBpY2sKLQkgKiBvbmUgb2YgdGhlc2UgcG93ZXIgc2VxdWVu
Y2VycyBmb3IgdXNlIHNpbmNlCi0JICogZWRwX3BhbmVsX3ZkZF9vbigpIHdvdWxkIG5vdGljZSB0
aGF0IHRoZSBWREQgd2FzCi0JICogYWxyZWFkeSBvbiBhbmQgdGhlcmVmb3JlIHdvdWxkbid0IGdy
YWIgdGhlIHBvd2VyCi0JICogZG9tYWluIHJlZmVyZW5jZS4gRGlzYWJsZSBWREQgZmlyc3QgdG8g
YXZvaWQgdGhpcy4KLQkgKiBUaGlzIGFsc28gYXZvaWRzIHNwdXJpb3VzbHkgdHVybmluZyB0aGUg
VkREIG9uIGFzCi0JICogc29vbiBhcyB0aGUgbmV3IHBvd2VyIHNlcXVlbmNlciBnZXRzIGluaXRp
YWxpemVkLgotCSAqLwotCWlmIChmb3JjZV9kaXNhYmxlX3ZkZCkgewotCQl1MzIgcHAgPSBpbGtf
Z2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOwotCi0JCWRybV9XQVJOKCZkZXZfcHJpdi0+ZHJtLCBw
cCAmIFBBTkVMX1BPV0VSX09OLAotCQkJICJQYW5lbCBwb3dlciBhbHJlYWR5IG9uXG4iKTsKLQot
CQlpZiAocHAgJiBFRFBfRk9SQ0VfVkREKQotCQkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0s
Ci0JCQkJICAgICJWREQgYWxyZWFkeSBvbiwgZGlzYWJsaW5nIGZpcnN0XG4iKTsKLQotCQlwcCAm
PSB+RURQX0ZPUkNFX1ZERDsKLQotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgcmVncy5wcF9j
dHJsLCBwcCk7Ci0JfQotCi0JcHBfb24gPSBSRUdfRklFTERfUFJFUChQQU5FTF9QT1dFUl9VUF9E
RUxBWV9NQVNLLCBzZXEtPnQxX3QzKSB8Ci0JCVJFR19GSUVMRF9QUkVQKFBBTkVMX0xJR0hUX09O
X0RFTEFZX01BU0ssIHNlcS0+dDgpOwotCXBwX29mZiA9IFJFR19GSUVMRF9QUkVQKFBBTkVMX0xJ
R0hUX09GRl9ERUxBWV9NQVNLLCBzZXEtPnQ5KSB8Ci0JCVJFR19GSUVMRF9QUkVQKFBBTkVMX1BP
V0VSX0RPV05fREVMQVlfTUFTSywgc2VxLT50MTApOwotCi0JLyogSGFzd2VsbCBkb2Vzbid0IGhh
dmUgYW55IHBvcnQgc2VsZWN0aW9uIGJpdHMgZm9yIHRoZSBwYW5lbAotCSAqIHBvd2VyIHNlcXVl
bmNlciBhbnkgbW9yZS4gKi8KLQlpZiAoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikgfHwgSVNfQ0hF
UlJZVklFVyhkZXZfcHJpdikpIHsKLQkJcG9ydF9zZWwgPSBQQU5FTF9QT1JUX1NFTEVDVF9WTFYo
cG9ydCk7Ci0JfSBlbHNlIGlmIChIQVNfUENIX0lCWChkZXZfcHJpdikgfHwgSEFTX1BDSF9DUFQo
ZGV2X3ByaXYpKSB7Ci0JCXN3aXRjaCAocG9ydCkgewotCQljYXNlIFBPUlRfQToKLQkJCXBvcnRf
c2VsID0gUEFORUxfUE9SVF9TRUxFQ1RfRFBBOwotCQkJYnJlYWs7Ci0JCWNhc2UgUE9SVF9DOgot
CQkJcG9ydF9zZWwgPSBQQU5FTF9QT1JUX1NFTEVDVF9EUEM7Ci0JCQlicmVhazsKLQkJY2FzZSBQ
T1JUX0Q6Ci0JCQlwb3J0X3NlbCA9IFBBTkVMX1BPUlRfU0VMRUNUX0RQRDsKLQkJCWJyZWFrOwot
CQlkZWZhdWx0OgotCQkJTUlTU0lOR19DQVNFKHBvcnQpOwotCQkJYnJlYWs7Ci0JCX0KLQl9Ci0K
LQlwcF9vbiB8PSBwb3J0X3NlbDsKLQotCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWdzLnBw
X29uLCBwcF9vbik7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZ3MucHBfb2ZmLCBwcF9v
ZmYpOwotCi0JLyoKLQkgKiBDb21wdXRlIHRoZSBkaXZpc29yIGZvciB0aGUgcHAgY2xvY2ssIHNp
bXBseSBtYXRjaCB0aGUgQnNwZWMgZm9ybXVsYS4KLQkgKi8KLQlpZiAoaTkxNV9tbWlvX3JlZ192
YWxpZChyZWdzLnBwX2RpdikpIHsKLQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZ3MucHBf
ZGl2LAotCQkJICAgICAgIFJFR19GSUVMRF9QUkVQKFBQX1JFRkVSRU5DRV9ESVZJREVSX01BU0ss
ICgxMDAgKiBkaXYpIC8gMiAtIDEpIHwgUkVHX0ZJRUxEX1BSRVAoUEFORUxfUE9XRVJfQ1lDTEVf
REVMQVlfTUFTSywgRElWX1JPVU5EX1VQKHNlcS0+dDExX3QxMiwgMTAwMCkpKTsKLQl9IGVsc2Ug
ewotCQl1MzIgcHBfY3RsOwotCi0JCXBwX2N0bCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJl
Z3MucHBfY3RybCk7Ci0JCXBwX2N0bCAmPSB+QlhUX1BPV0VSX0NZQ0xFX0RFTEFZX01BU0s7Ci0J
CXBwX2N0bCB8PSBSRUdfRklFTERfUFJFUChCWFRfUE9XRVJfQ1lDTEVfREVMQVlfTUFTSywgRElW
X1JPVU5EX1VQKHNlcS0+dDExX3QxMiwgMTAwMCkpOwotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJp
diwgcmVncy5wcF9jdHJsLCBwcF9jdGwpOwotCX0KLQotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLAotCQkgICAgInBhbmVsIHBvd2VyIHNlcXVlbmNlciByZWdpc3RlciBzZXR0aW5nczogUFBf
T04gJSN4LCBQUF9PRkYgJSN4LCBQUF9ESVYgJSN4XG4iLAotCQkgICAgaW50ZWxfZGVfcmVhZChk
ZXZfcHJpdiwgcmVncy5wcF9vbiksCi0JCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdz
LnBwX29mZiksCi0JCSAgICBpOTE1X21taW9fcmVnX3ZhbGlkKHJlZ3MucHBfZGl2KSA/Ci0JCSAg
ICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdzLnBwX2RpdikgOgotCQkgICAgKGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsIHJlZ3MucHBfY3RybCkgJiBCWFRfUE9XRVJfQ1lDTEVfREVMQVlfTUFT
SykpOwotfQotCi1zdGF0aWMgdm9pZCBpbnRlbF9kcF9wcHNfaW5pdChzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOwotCi0JaWYgKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpIHx8IElTX0NI
RVJSWVZJRVcoZGV2X3ByaXYpKSB7Ci0JCXZsdl9pbml0aWFsX3Bvd2VyX3NlcXVlbmNlcl9zZXR1
cChpbnRlbF9kcCk7Ci0JfSBlbHNlIHsKLQkJaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1
ZW5jZXIoaW50ZWxfZHApOwotCQlpbnRlbF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcl9y
ZWdpc3RlcnMoaW50ZWxfZHAsIGZhbHNlKTsKLQl9Ci19Ci0KIC8qKgogICogaW50ZWxfZHBfc2V0
X2RycnNfc3RhdGUgLSBwcm9ncmFtIHJlZ2lzdGVycyBmb3IgUlIgc3dpdGNoIHRvIHRha2UgZWZm
ZWN0CiAgKiBAZGV2X3ByaXY6IGk5MTUgZGV2aWNlCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RwLmgKaW5kZXggNDI4MGEwOWZkOGZkLi5kMDdiY2RlZTk2MzkgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKQEAgLTcwLDE1ICs3MCwxMSBAQCBlbnVtIGly
cXJldHVybiBpbnRlbF9kcF9ocGRfcHVsc2Uoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGln
X3BvcnQsCiB2b2lkIGludGVsX2VkcF9iYWNrbGlnaHRfb24oY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jf
c3RhdGUgKmNvbm5fc3RhdGUpOwogdm9pZCBpbnRlbF9lZHBfYmFja2xpZ2h0X29mZihjb25zdCBz
dHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSk7Ci12b2lkIGludGVsX2VkcF9w
YW5lbF92ZGRfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Ci12b2lkIGludGVsX2VkcF9w
YW5lbF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLXZvaWQgaW50ZWxfZWRwX3BhbmVs
X29mZihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZvaWQgaW50ZWxfZHBfbXN0X3N1c3Bl
bmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfZHBfbXN0
X3Jlc3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogaW50IGludGVsX2Rw
X21heF9saW5rX3JhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBpbnQgaW50ZWxfZHBf
bWF4X2xhbmVfY291bnQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBpbnQgaW50ZWxfZHBf
cmF0ZV9zZWxlY3Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgaW50IHJhdGUpOwotdm9pZCBp
bnRlbF9wb3dlcl9zZXF1ZW5jZXJfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KTsKIHUzMiBpbnRlbF9kcF9wYWNrX2F1eChjb25zdCB1OCAqc3JjLCBpbnQgc3JjX2J5dGVz
KTsKIAogdm9pZCBpbnRlbF9lZHBfZHJyc19lbmFibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKQEAgLTE0NCw2ICsxNDAsNyBAQCBib29sIGludGVsX2RwX2luaXRpYWxfZmFzdHNldF9jaGVj
ayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkgICAgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpOwogdm9pZCBpbnRlbF9kcF9zeW5jX3N0YXRlKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlKTsKK2NvbnN0IHN0cnVjdCBkcGxsICp2bHZfZ2V0X2RwbGwoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpOwogCiB2b2lkIGludGVsX2RwX2NoZWNrX2ZybF90cmFpbmlu
ZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZvaWQgaW50ZWxfZHBfcGNvbl9kc2NfY29u
ZmlndXJlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bwcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9wcHMuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAu
LjgzYmQ4M2IzZTNjNAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfcHBzLmMKQEAgLTAsMCArMSwxMzM0IEBACisvLyBTUERYLUxpY2Vuc2UtSWRl
bnRpZmllcjogTUlUCisvKgorICogQ29weXJpZ2h0IMKpIDIwMjAgSW50ZWwgQ29ycG9yYXRpb24K
KyAqLworCisjaW5jbHVkZSAiaTkxNV9kcnYuaCIKKyNpbmNsdWRlICJpbnRlbF9kaXNwbGF5X3R5
cGVzLmgiCisjaW5jbHVkZSAiaW50ZWxfZHAuaCIKKyNpbmNsdWRlICJpbnRlbF9wcHMuaCIKKwor
c3RhdGljIHZvaWQgdmx2X3N0ZWFsX3Bvd2VyX3NlcXVlbmNlcihzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCisJCQkJICAgICAgZW51bSBwaXBlIHBpcGUpOworc3RhdGljIHZvaWQK
K2ludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApOworc3RhdGljIHZvaWQKK2ludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2Vy
X3JlZ2lzdGVycyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCQkgICAgICBib29sIGZv
cmNlX2Rpc2FibGVfdmRkKTsKKworaW50ZWxfd2FrZXJlZl90IHBwc19sb2NrKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwkvKgor
CSAqIFNlZSBpbnRlbF9wb3dlcl9zZXF1ZW5jZXJfcmVzZXQoKSB3aHkgd2UgbmVlZAorCSAqIGEg
cG93ZXIgZG9tYWluIHJlZmVyZW5jZSBoZXJlLgorCSAqLworCXdha2VyZWYgPSBpbnRlbF9kaXNw
bGF5X3Bvd2VyX2dldChkZXZfcHJpdiwgUE9XRVJfRE9NQUlOX0RJU1BMQVlfQ09SRSk7CisJbXV0
ZXhfbG9jaygmZGV2X3ByaXYtPnBwc19tdXRleCk7CisKKwlyZXR1cm4gd2FrZXJlZjsKK30KKwor
aW50ZWxfd2FrZXJlZl90IHBwc191bmxvY2soc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgaW50
ZWxfd2FrZXJlZl90IHdha2VyZWYpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisKKwltdXRleF91bmxvY2soJmRldl9wcml2LT5w
cHNfbXV0ZXgpOworCWludGVsX2Rpc3BsYXlfcG93ZXJfcHV0KGRldl9wcml2LCBQT1dFUl9ET01B
SU5fRElTUExBWV9DT1JFLCB3YWtlcmVmKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9p
ZAordmx2X3Bvd2VyX3NlcXVlbmNlcl9raWNrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9y
dChpbnRlbF9kcCk7CisJZW51bSBwaXBlIHBpcGUgPSBpbnRlbF9kcC0+cHBzX3BpcGU7CisJYm9v
bCBwbGxfZW5hYmxlZCwgcmVsZWFzZV9jbF9vdmVycmlkZSA9IGZhbHNlOworCWVudW0gZHBpb19w
aHkgcGh5ID0gRFBJT19QSFkocGlwZSk7CisJZW51bSBkcGlvX2NoYW5uZWwgY2ggPSB2bHZfcGlw
ZV90b19jaGFubmVsKHBpcGUpOworCXUzMiBEUDsKKworCWlmIChkcm1fV0FSTigmZGV2X3ByaXYt
PmRybSwKKwkJICAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3Jl
ZykgJiBEUF9QT1JUX0VOLAorCQkgICAgICJza2lwcGluZyBwaXBlICVjIHBvd2VyIHNlcXVlbmNl
ciBraWNrIGR1ZSB0byBbRU5DT0RFUjolZDolc10gYmVpbmcgYWN0aXZlXG4iLAorCQkgICAgIHBp
cGVfbmFtZShwaXBlKSwgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgICAgIGRpZ19w
b3J0LT5iYXNlLmJhc2UubmFtZSkpCisJCXJldHVybjsKKworCWRybV9kYmdfa21zKCZkZXZfcHJp
di0+ZHJtLAorCQkgICAgImtpY2tpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIFtFTkNP
REVSOiVkOiVzXVxuIiwKKwkJICAgIHBpcGVfbmFtZShwaXBlKSwgZGlnX3BvcnQtPmJhc2UuYmFz
ZS5iYXNlLmlkLAorCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKKworCS8qIFByZXNl
cnZlIHRoZSBCSU9TLWNvbXB1dGVkIGRldGVjdGVkIGJpdC4gVGhpcyBpcworCSAqIHN1cHBvc2Vk
IHRvIGJlIHJlYWQtb25seS4KKwkgKi8KKwlEUCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIGlu
dGVsX2RwLT5vdXRwdXRfcmVnKSAmIERQX0RFVEVDVEVEOworCURQIHw9IERQX1ZPTFRBR0VfMF80
IHwgRFBfUFJFX0VNUEhBU0lTXzA7CisJRFAgfD0gRFBfUE9SVF9XSURUSCgxKTsKKwlEUCB8PSBE
UF9MSU5LX1RSQUlOX1BBVF8xOworCisJaWYgKElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQorCQlE
UCB8PSBEUF9QSVBFX1NFTF9DSFYocGlwZSk7CisJZWxzZQorCQlEUCB8PSBEUF9QSVBFX1NFTChw
aXBlKTsKKworCXBsbF9lbmFibGVkID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRFBMTChwaXBl
KSkgJiBEUExMX1ZDT19FTkFCTEU7CisKKwkvKgorCSAqIFRoZSBEUExMIGZvciB0aGUgcGlwZSBt
dXN0IGJlIGVuYWJsZWQgZm9yIHRoaXMgdG8gd29yay4KKwkgKiBTbyBlbmFibGUgdGVtcG9yYXJp
bHkgaXQgaWYgaXQncyBub3QgYWxyZWFkeSBlbmFibGVkLgorCSAqLworCWlmICghcGxsX2VuYWJs
ZWQpIHsKKwkJcmVsZWFzZV9jbF9vdmVycmlkZSA9IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpICYm
CisJCQkhY2h2X3BoeV9wb3dlcmdhdGVfY2goZGV2X3ByaXYsIHBoeSwgY2gsIHRydWUpOworCisJ
CWlmICh2bHZfZm9yY2VfcGxsX29uKGRldl9wcml2LCBwaXBlLCB2bHZfZ2V0X2RwbGwoZGV2X3By
aXYpKSkgeworCQkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwKKwkJCQkiRmFpbGVkIHRvIGZvcmNl
IG9uIHBsbCBmb3IgcGlwZSAlYyFcbiIsCisJCQkJcGlwZV9uYW1lKHBpcGUpKTsKKwkJCXJldHVy
bjsKKwkJfQorCX0KKworCS8qCisJICogU2ltaWxhciBtYWdpYyBhcyBpbiBpbnRlbF9kcF9lbmFi
bGVfcG9ydCgpLgorCSAqIFdlIF9tdXN0XyBkbyB0aGlzIHBvcnQgZW5hYmxlICsgZGlzYWJsZSB0
cmljaworCSAqIHRvIG1ha2UgdGhpcyBwb3dlciBzZXF1ZW5jZXIgbG9jayBvbnRvIHRoZSBwb3J0
LgorCSAqIE90aGVyd2lzZSBldmVuIFZERCBmb3JjZSBiaXQgd29uJ3Qgd29yay4KKwkgKi8KKwlp
bnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaW50ZWxfZHAtPm91dHB1dF9yZWcsIERQKTsKKwlpbnRl
bF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIGludGVsX2RwLT5vdXRwdXRfcmVnKTsKKworCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZywgRFAgfCBEUF9QT1JU
X0VOKTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIGludGVsX2RwLT5vdXRwdXRf
cmVnKTsKKworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9kcC0+b3V0cHV0X3JlZywg
RFAgJiB+RFBfUE9SVF9FTik7CisJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBpbnRl
bF9kcC0+b3V0cHV0X3JlZyk7CisKKwlpZiAoIXBsbF9lbmFibGVkKSB7CisJCXZsdl9mb3JjZV9w
bGxfb2ZmKGRldl9wcml2LCBwaXBlKTsKKworCQlpZiAocmVsZWFzZV9jbF9vdmVycmlkZSkKKwkJ
CWNodl9waHlfcG93ZXJnYXRlX2NoKGRldl9wcml2LCBwaHksIGNoLCBmYWxzZSk7CisJfQorfQor
CitzdGF0aWMgZW51bSBwaXBlIHZsdl9maW5kX2ZyZWVfcHBzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwl1bnNp
Z25lZCBpbnQgcGlwZXMgPSAoMSA8PCBQSVBFX0EpIHwgKDEgPDwgUElQRV9CKTsKKworCS8qCisJ
ICogV2UgZG9uJ3QgaGF2ZSBwb3dlciBzZXF1ZW5jZXIgY3VycmVudGx5LgorCSAqIFBpY2sgb25l
IHRoYXQncyBub3QgdXNlZCBieSBvdGhlciBwb3J0cy4KKwkgKi8KKwlmb3JfZWFjaF9pbnRlbF9k
cCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
ID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCisJCWlmIChlbmNvZGVyLT50eXBlID09IElO
VEVMX09VVFBVVF9FRFApIHsKKwkJCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAorCQkJCSAg
ICBpbnRlbF9kcC0+YWN0aXZlX3BpcGUgIT0gSU5WQUxJRF9QSVBFICYmCisJCQkJICAgIGludGVs
X2RwLT5hY3RpdmVfcGlwZSAhPQorCQkJCSAgICBpbnRlbF9kcC0+cHBzX3BpcGUpOworCisJCQlp
ZiAoaW50ZWxfZHAtPnBwc19waXBlICE9IElOVkFMSURfUElQRSkKKwkJCQlwaXBlcyAmPSB+KDEg
PDwgaW50ZWxfZHAtPnBwc19waXBlKTsKKwkJfSBlbHNlIHsKKwkJCWRybV9XQVJOX09OKCZkZXZf
cHJpdi0+ZHJtLAorCQkJCSAgICBpbnRlbF9kcC0+cHBzX3BpcGUgIT0gSU5WQUxJRF9QSVBFKTsK
KworCQkJaWYgKGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPSBJTlZBTElEX1BJUEUpCisJCQkJcGlw
ZXMgJj0gfigxIDw8IGludGVsX2RwLT5hY3RpdmVfcGlwZSk7CisJCX0KKwl9CisKKwlpZiAocGlw
ZXMgPT0gMCkKKwkJcmV0dXJuIElOVkFMSURfUElQRTsKKworCXJldHVybiBmZnMocGlwZXMpIC0g
MTsKK30KKworc3RhdGljIGVudW0gcGlwZQordmx2X3Bvd2VyX3NlcXVlbmNlcl9waXBlKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAq
ZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRlbF9kcCk7CisJZW51bSBwaXBlIHBpcGU7CisK
Kwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKKworCS8qIFdlIHNo
b3VsZCBuZXZlciBsYW5kIGhlcmUgd2l0aCByZWd1bGFyIERQIHBvcnRzICovCisJZHJtX1dBUk5f
T04oJmRldl9wcml2LT5kcm0sICFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKTsKKworCWRybV9X
QVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9kcC0+YWN0aXZlX3BpcGUgIT0gSU5WQUxJRF9Q
SVBFICYmCisJCSAgICBpbnRlbF9kcC0+YWN0aXZlX3BpcGUgIT0gaW50ZWxfZHAtPnBwc19waXBl
KTsKKworCWlmIChpbnRlbF9kcC0+cHBzX3BpcGUgIT0gSU5WQUxJRF9QSVBFKQorCQlyZXR1cm4g
aW50ZWxfZHAtPnBwc19waXBlOworCisJcGlwZSA9IHZsdl9maW5kX2ZyZWVfcHBzKGRldl9wcml2
KTsKKworCS8qCisJICogRGlkbid0IGZpbmQgb25lLiBUaGlzIHNob3VsZCBub3QgaGFwcGVuIHNp
bmNlIHRoZXJlCisJICogYXJlIHR3byBwb3dlciBzZXF1ZW5jZXJzIGFuZCB1cCB0byB0d28gZURQ
IHBvcnRzLgorCSAqLworCWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgcGlwZSA9PSBJ
TlZBTElEX1BJUEUpKQorCQlwaXBlID0gUElQRV9BOworCisJdmx2X3N0ZWFsX3Bvd2VyX3NlcXVl
bmNlcihkZXZfcHJpdiwgcGlwZSk7CisJaW50ZWxfZHAtPnBwc19waXBlID0gcGlwZTsKKworCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAorCQkgICAgInBpY2tlZCBwaXBlICVjIHBvd2VyIHNl
cXVlbmNlciBmb3IgW0VOQ09ERVI6JWQ6JXNdXG4iLAorCQkgICAgcGlwZV9uYW1lKGludGVsX2Rw
LT5wcHNfcGlwZSksCisJCSAgICBkaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCSAgICBk
aWdfcG9ydC0+YmFzZS5iYXNlLm5hbWUpOworCisJLyogaW5pdCBwb3dlciBzZXF1ZW5jZXIgb24g
dGhpcyBwaXBlIGFuZCBwb3J0ICovCisJaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5j
ZXIoaW50ZWxfZHApOworCWludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lz
dGVycyhpbnRlbF9kcCwgdHJ1ZSk7CisKKwkvKgorCSAqIEV2ZW4gdmRkIGZvcmNlIGRvZXNuJ3Qg
d29yayB1bnRpbCB3ZSd2ZSBtYWRlCisJICogdGhlIHBvd2VyIHNlcXVlbmNlciBsb2NrIGluIG9u
IHRoZSBwb3J0LgorCSAqLworCXZsdl9wb3dlcl9zZXF1ZW5jZXJfa2ljayhpbnRlbF9kcCk7CisK
KwlyZXR1cm4gaW50ZWxfZHAtPnBwc19waXBlOworfQorCitzdGF0aWMgaW50CitieHRfcG93ZXJf
c2VxdWVuY2VyX2lkeChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWludCBiYWNr
bGlnaHRfY29udHJvbGxlciA9IGRldl9wcml2LT52YnQuYmFja2xpZ2h0LmNvbnRyb2xsZXI7CisK
Kwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKKworCS8qIFdlIHNo
b3VsZCBuZXZlciBsYW5kIGhlcmUgd2l0aCByZWd1bGFyIERQIHBvcnRzICovCisJZHJtX1dBUk5f
T04oJmRldl9wcml2LT5kcm0sICFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKTsKKworCWlmICgh
aW50ZWxfZHAtPnBwc19yZXNldCkKKwkJcmV0dXJuIGJhY2tsaWdodF9jb250cm9sbGVyOworCisJ
aW50ZWxfZHAtPnBwc19yZXNldCA9IGZhbHNlOworCisJLyoKKwkgKiBPbmx5IHRoZSBIVyBuZWVk
cyB0byBiZSByZXByb2dyYW1tZWQsIHRoZSBTVyBzdGF0ZSBpcyBmaXhlZCBhbmQKKwkgKiBoYXMg
YmVlbiBzZXR1cCBkdXJpbmcgY29ubmVjdG9yIGluaXQuCisJICovCisJaW50ZWxfZHBfaW5pdF9w
YW5lbF9wb3dlcl9zZXF1ZW5jZXJfcmVnaXN0ZXJzKGludGVsX2RwLCBmYWxzZSk7CisKKwlyZXR1
cm4gYmFja2xpZ2h0X2NvbnRyb2xsZXI7Cit9CisKK3R5cGVkZWYgYm9vbCAoKnZsdl9waXBlX2No
ZWNrKShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCisJCQkgICAgICAgZW51bSBw
aXBlIHBpcGUpOworCitzdGF0aWMgYm9vbCB2bHZfcGlwZV9oYXNfcHBfb24oc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJICAgICAgIGVudW0gcGlwZSBwaXBlKQoreworCXJl
dHVybiBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBQUF9TVEFUVVMocGlwZSkpICYgUFBfT047Cit9
CisKK3N0YXRpYyBib29sIHZsdl9waXBlX2hhc192ZGRfb24oc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAorCQkJCWVudW0gcGlwZSBwaXBlKQoreworCXJldHVybiBpbnRlbF9kZV9y
ZWFkKGRldl9wcml2LCBQUF9DT05UUk9MKHBpcGUpKSAmIEVEUF9GT1JDRV9WREQ7Cit9CisKK3N0
YXRpYyBib29sIHZsdl9waXBlX2FueShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CisJCQkgZW51bSBwaXBlIHBpcGUpCit7CisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRpYyBlbnVt
IHBpcGUKK3Zsdl9pbml0aWFsX3Bwc19waXBlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwKKwkJICAgICBlbnVtIHBvcnQgcG9ydCwKKwkJICAgICB2bHZfcGlwZV9jaGVjayBwaXBl
X2NoZWNrKQoreworCWVudW0gcGlwZSBwaXBlOworCisJZm9yIChwaXBlID0gUElQRV9BOyBwaXBl
IDw9IFBJUEVfQjsgcGlwZSsrKSB7CisJCXUzMiBwb3J0X3NlbCA9IGludGVsX2RlX3JlYWQoZGV2
X3ByaXYsIFBQX09OX0RFTEFZUyhwaXBlKSkgJgorCQkJUEFORUxfUE9SVF9TRUxFQ1RfTUFTSzsK
KworCQlpZiAocG9ydF9zZWwgIT0gUEFORUxfUE9SVF9TRUxFQ1RfVkxWKHBvcnQpKQorCQkJY29u
dGludWU7CisKKwkJaWYgKCFwaXBlX2NoZWNrKGRldl9wcml2LCBwaXBlKSkKKwkJCWNvbnRpbnVl
OworCisJCXJldHVybiBwaXBlOworCX0KKworCXJldHVybiBJTlZBTElEX1BJUEU7Cit9CisKK3N0
YXRpYyB2b2lkCit2bHZfaW5pdGlhbF9wb3dlcl9zZXF1ZW5jZXJfc2V0dXAoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBk
cF90b19pOTE1KGludGVsX2RwKTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9y
dCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKKwllbnVtIHBvcnQgcG9ydCA9IGRpZ19wb3J0
LT5iYXNlLnBvcnQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4
KTsKKworCS8qIHRyeSB0byBmaW5kIGEgcGlwZSB3aXRoIHRoaXMgcG9ydCBzZWxlY3RlZCAqLwor
CS8qIGZpcnN0IHBpY2sgb25lIHdoZXJlIHRoZSBwYW5lbCBpcyBvbiAqLworCWludGVsX2RwLT5w
cHNfcGlwZSA9IHZsdl9pbml0aWFsX3Bwc19waXBlKGRldl9wcml2LCBwb3J0LAorCQkJCQkJICB2
bHZfcGlwZV9oYXNfcHBfb24pOworCS8qIGRpZG4ndCBmaW5kIG9uZT8gcGljayBvbmUgd2hlcmUg
dmRkIGlzIG9uICovCisJaWYgKGludGVsX2RwLT5wcHNfcGlwZSA9PSBJTlZBTElEX1BJUEUpCisJ
CWludGVsX2RwLT5wcHNfcGlwZSA9IHZsdl9pbml0aWFsX3Bwc19waXBlKGRldl9wcml2LCBwb3J0
LAorCQkJCQkJCSAgdmx2X3BpcGVfaGFzX3ZkZF9vbik7CisJLyogZGlkbid0IGZpbmQgb25lPyBw
aWNrIG9uZSB3aXRoIGp1c3QgdGhlIGNvcnJlY3QgcG9ydCAqLworCWlmIChpbnRlbF9kcC0+cHBz
X3BpcGUgPT0gSU5WQUxJRF9QSVBFKQorCQlpbnRlbF9kcC0+cHBzX3BpcGUgPSB2bHZfaW5pdGlh
bF9wcHNfcGlwZShkZXZfcHJpdiwgcG9ydCwKKwkJCQkJCQkgIHZsdl9waXBlX2FueSk7CisKKwkv
KiBkaWRuJ3QgZmluZCBvbmU/IGp1c3QgbGV0IHZsdl9wb3dlcl9zZXF1ZW5jZXJfcGlwZSgpIHBp
Y2sgb25lIHdoZW4gbmVlZGVkICovCisJaWYgKGludGVsX2RwLT5wcHNfcGlwZSA9PSBJTlZBTElE
X1BJUEUpIHsKKwkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCisJCQkgICAgIm5vIGluaXRp
YWwgcG93ZXIgc2VxdWVuY2VyIGZvciBbRU5DT0RFUjolZDolc11cbiIsCisJCQkgICAgZGlnX3Bv
cnQtPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkJICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7
CisJCXJldHVybjsKKwl9CisKKwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKKwkJICAgICJp
bml0aWFsIHBvd2VyIHNlcXVlbmNlciBmb3IgW0VOQ09ERVI6JWQ6JXNdOiBwaXBlICVjXG4iLAor
CQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5iYXNlLmlkLAorCQkgICAgZGlnX3BvcnQtPmJhc2Uu
YmFzZS5uYW1lLAorCQkgICAgcGlwZV9uYW1lKGludGVsX2RwLT5wcHNfcGlwZSkpOworCisJaW50
ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXIoaW50ZWxfZHApOworCWludGVsX2RwX2lu
aXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyX3JlZ2lzdGVycyhpbnRlbF9kcCwgZmFsc2UpOworfQor
Cit2b2lkIGludGVsX3Bvd2VyX3NlcXVlbmNlcl9yZXNldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCit7CisJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7CisKKwlpZiAo
ZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sCisJCQkhKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYp
IHx8CisJCQkgIElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpIHx8CisJCQkgIElTX0dFTjlfTFAoZGV2
X3ByaXYpKSkpCisJCXJldHVybjsKKworCS8qCisJICogV2UgY2FuJ3QgZ3JhYiBwcHNfbXV0ZXgg
aGVyZSBkdWUgdG8gZGVhZGxvY2sgd2l0aCBwb3dlcl9kb21haW4KKwkgKiBtdXRleCB3aGVuIHBv
d2VyX2RvbWFpbiBmdW5jdGlvbnMgYXJlIGNhbGxlZCB3aGlsZSBob2xkaW5nIHBwc19tdXRleC4K
KwkgKiBUaGF0IGFsc28gbWVhbnMgdGhhdCBpbiBvcmRlciB0byB1c2UgcHBzX3BpcGUgdGhlIGNv
ZGUgbmVlZHMgdG8KKwkgKiBob2xkIGJvdGggYSBwb3dlciBkb21haW4gcmVmZXJlbmNlIGFuZCBw
cHNfbXV0ZXgsIGFuZCB0aGUgcG93ZXIgZG9tYWluCisJICogcmVmZXJlbmNlIGdldC9wdXQgbXVz
dCBiZSBkb25lIHdoaWxlIF9ub3RfIGhvbGRpbmcgcHBzX211dGV4LgorCSAqIHBwc197bG9jayx1
bmxvY2t9KCkgZG8gdGhlc2Ugc3RlcHMgaW4gdGhlIGNvcnJlY3Qgb3JkZXIsIHNvIG9uZQorCSAq
IHNob3VsZCB1c2UgdGhlbSBhbHdheXMuCisJICovCisKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2
X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5j
X3RvX2ludGVsX2RwKGVuY29kZXIpOworCisJCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAor
CQkJICAgIGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPSBJTlZBTElEX1BJUEUpOworCisJCWlmIChl
bmNvZGVyLT50eXBlICE9IElOVEVMX09VVFBVVF9FRFApCisJCQljb250aW51ZTsKKworCQlpZiAo
SVNfR0VOOV9MUChkZXZfcHJpdikpCisJCQlpbnRlbF9kcC0+cHBzX3Jlc2V0ID0gdHJ1ZTsKKwkJ
ZWxzZQorCQkJaW50ZWxfZHAtPnBwc19waXBlID0gSU5WQUxJRF9QSVBFOworCX0KK30KKworc3Ry
dWN0IHBwc19yZWdpc3RlcnMgeworCWk5MTVfcmVnX3QgcHBfY3RybDsKKwlpOTE1X3JlZ190IHBw
X3N0YXQ7CisJaTkxNV9yZWdfdCBwcF9vbjsKKwlpOTE1X3JlZ190IHBwX29mZjsKKwlpOTE1X3Jl
Z190IHBwX2RpdjsKK307CisKK3N0YXRpYyB2b2lkIGludGVsX3Bwc19nZXRfcmVnaXN0ZXJzKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICAgIHN0cnVjdCBwcHNfcmVnaXN0ZXJzICpy
ZWdzKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOworCWludCBwcHNfaWR4ID0gMDsKKworCW1lbXNldChyZWdzLCAwLCBzaXplb2Yo
KnJlZ3MpKTsKKworCWlmIChJU19HRU45X0xQKGRldl9wcml2KSkKKwkJcHBzX2lkeCA9IGJ4dF9w
b3dlcl9zZXF1ZW5jZXJfaWR4KGludGVsX2RwKTsKKwllbHNlIGlmIChJU19WQUxMRVlWSUVXKGRl
dl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9wcml2KSkKKwkJcHBzX2lkeCA9IHZsdl9wb3dl
cl9zZXF1ZW5jZXJfcGlwZShpbnRlbF9kcCk7CisKKwlyZWdzLT5wcF9jdHJsID0gUFBfQ09OVFJP
TChwcHNfaWR4KTsKKwlyZWdzLT5wcF9zdGF0ID0gUFBfU1RBVFVTKHBwc19pZHgpOworCXJlZ3Mt
PnBwX29uID0gUFBfT05fREVMQVlTKHBwc19pZHgpOworCXJlZ3MtPnBwX29mZiA9IFBQX09GRl9E
RUxBWVMocHBzX2lkeCk7CisKKwkvKiBDeWNsZSBkZWxheSBtb3ZlZCBmcm9tIFBQX0RJVklTT1Ig
dG8gUFBfQ09OVFJPTCAqLworCWlmIChJU19HRU45X0xQKGRldl9wcml2KSB8fCBJTlRFTF9QQ0hf
VFlQRShkZXZfcHJpdikgPj0gUENIX0NOUCkKKwkJcmVncy0+cHBfZGl2ID0gSU5WQUxJRF9NTUlP
X1JFRzsKKwllbHNlCisJCXJlZ3MtPnBwX2RpdiA9IFBQX0RJVklTT1IocHBzX2lkeCk7Cit9CisK
K3N0YXRpYyBpOTE1X3JlZ190CitfcHBfY3RybF9yZWcoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKK3sKKwlzdHJ1Y3QgcHBzX3JlZ2lzdGVycyByZWdzOworCisJaW50ZWxfcHBzX2dldF9yZWdp
c3RlcnMoaW50ZWxfZHAsICZyZWdzKTsKKworCXJldHVybiByZWdzLnBwX2N0cmw7Cit9CisKK3N0
YXRpYyBpOTE1X3JlZ190CitfcHBfc3RhdF9yZWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
K3sKKwlzdHJ1Y3QgcHBzX3JlZ2lzdGVycyByZWdzOworCisJaW50ZWxfcHBzX2dldF9yZWdpc3Rl
cnMoaW50ZWxfZHAsICZyZWdzKTsKKworCXJldHVybiByZWdzLnBwX3N0YXQ7Cit9CisKK3N0YXRp
YyBib29sIGVkcF9oYXZlX3BhbmVsX3Bvd2VyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKKworCWlm
ICgoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpICYm
CisJICAgIGludGVsX2RwLT5wcHNfcGlwZSA9PSBJTlZBTElEX1BJUEUpCisJCXJldHVybiBmYWxz
ZTsKKworCXJldHVybiAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgX3BwX3N0YXRfcmVnKGludGVs
X2RwKSkgJiBQUF9PTikgIT0gMDsKK30KKworc3RhdGljIGJvb2wgZWRwX2hhdmVfcGFuZWxfdmRk
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxk
KCZkZXZfcHJpdi0+cHBzX211dGV4KTsKKworCWlmICgoSVNfVkFMTEVZVklFVyhkZXZfcHJpdikg
fHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpICYmCisJICAgIGludGVsX2RwLT5wcHNfcGlwZSA9
PSBJTlZBTElEX1BJUEUpCisJCXJldHVybiBmYWxzZTsKKworCXJldHVybiBpbnRlbF9kZV9yZWFk
KGRldl9wcml2LCBfcHBfY3RybF9yZWcoaW50ZWxfZHApKSAmIEVEUF9GT1JDRV9WREQ7Cit9CisK
K3ZvaWQgaW50ZWxfZHBfY2hlY2tfZWRwKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7
CisKKwlpZiAoIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCisJCXJldHVybjsKKworCWlmICgh
ZWRwX2hhdmVfcGFuZWxfcG93ZXIoaW50ZWxfZHApICYmICFlZHBfaGF2ZV9wYW5lbF92ZGQoaW50
ZWxfZHApKSB7CisJCWRybV9XQVJOKCZkZXZfcHJpdi0+ZHJtLCAxLAorCQkJICJlRFAgcG93ZXJl
ZCBvZmYgd2hpbGUgYXR0ZW1wdGluZyBhdXggY2hhbm5lbCBjb21tdW5pY2F0aW9uLlxuIik7CisJ
CWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiU3RhdHVzIDB4JTA4eCBDb250cm9sIDB4JTA4
eFxuIiwKKwkJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBfcHBfc3RhdF9yZWcoaW50ZWxf
ZHApKSwKKwkJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBfcHBfY3RybF9yZWcoaW50ZWxf
ZHApKSk7CisJfQorfQorCisjZGVmaW5lIElETEVfT05fTUFTSwkJKFBQX09OIHwgUFBfU0VRVUVO
Q0VfTUFTSyB8IDAgICAgICAgICAgICAgICAgICAgICB8IFBQX1NFUVVFTkNFX1NUQVRFX01BU0sp
CisjZGVmaW5lIElETEVfT05fVkFMVUUgICAJKFBQX09OIHwgUFBfU0VRVUVOQ0VfTk9ORSB8IDAg
ICAgICAgICAgICAgICAgICAgICB8IFBQX1NFUVVFTkNFX1NUQVRFX09OX0lETEUpCisKKyNkZWZp
bmUgSURMRV9PRkZfTUFTSwkJKFBQX09OIHwgUFBfU0VRVUVOQ0VfTUFTSyB8IDAgICAgICAgICAg
ICAgICAgICAgICB8IDApCisjZGVmaW5lIElETEVfT0ZGX1ZBTFVFCQkoMCAgICAgfCBQUF9TRVFV
RU5DRV9OT05FIHwgMCAgICAgICAgICAgICAgICAgICAgIHwgMCkKKworI2RlZmluZSBJRExFX0NZ
Q0xFX01BU0sJCShQUF9PTiB8IFBQX1NFUVVFTkNFX01BU0sgfCBQUF9DWUNMRV9ERUxBWV9BQ1RJ
VkUgfCBQUF9TRVFVRU5DRV9TVEFURV9NQVNLKQorI2RlZmluZSBJRExFX0NZQ0xFX1ZBTFVFCSgw
ICAgICB8IFBQX1NFUVVFTkNFX05PTkUgfCAwICAgICAgICAgICAgICAgICAgICAgfCBQUF9TRVFV
RU5DRV9TVEFURV9PRkZfSURMRSkKKworc3RhdGljIHZvaWQgaW50ZWxfcHBzX3ZlcmlmeV9zdGF0
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKKworc3RhdGljIHZvaWQgd2FpdF9wYW5lbF9z
dGF0dXMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgICAgdTMyIG1hc2ssCisJ
CQkJICAgICAgIHUzMiB2YWx1ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwlpOTE1X3JlZ190IHBwX3N0YXRfcmVnLCBwcF9j
dHJsX3JlZzsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOwor
CisJaW50ZWxfcHBzX3ZlcmlmeV9zdGF0ZShpbnRlbF9kcCk7CisKKwlwcF9zdGF0X3JlZyA9IF9w
cF9zdGF0X3JlZyhpbnRlbF9kcCk7CisJcHBfY3RybF9yZWcgPSBfcHBfY3RybF9yZWcoaW50ZWxf
ZHApOworCisJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCisJCSAgICAibWFzayAlMDh4IHZh
bHVlICUwOHggc3RhdHVzICUwOHggY29udHJvbCAlMDh4XG4iLAorCQkgICAgbWFzaywgdmFsdWUs
CisJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBwcF9zdGF0X3JlZyksCisJCSAgICBpbnRl
bF9kZV9yZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZykpOworCisJaWYgKGludGVsX2RlX3dhaXRf
Zm9yX3JlZ2lzdGVyKGRldl9wcml2LCBwcF9zdGF0X3JlZywKKwkJCQkgICAgICAgbWFzaywgdmFs
dWUsIDUwMDApKQorCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLAorCQkJIlBhbmVsIHN0YXR1cyB0
aW1lb3V0OiBzdGF0dXMgJTA4eCBjb250cm9sICUwOHhcbiIsCisJCQlpbnRlbF9kZV9yZWFkKGRl
dl9wcml2LCBwcF9zdGF0X3JlZyksCisJCQlpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBwcF9jdHJs
X3JlZykpOworCisJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJXYWl0IGNvbXBsZXRlXG4i
KTsKK30KKworc3RhdGljIHZvaWQgd2FpdF9wYW5lbF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRl
bF9kcCk7CisKKwlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiV2FpdCBmb3IgcGFuZWwgcG93ZXIg
b25cbiIpOworCXdhaXRfcGFuZWxfc3RhdHVzKGludGVsX2RwLCBJRExFX09OX01BU0ssIElETEVf
T05fVkFMVUUpOworfQorCitzdGF0aWMgdm9pZCB3YWl0X3BhbmVsX29mZihzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZHBfdG9f
aTkxNShpbnRlbF9kcCk7CisKKwlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiV2FpdCBmb3IgcGFu
ZWwgcG93ZXIgb2ZmIHRpbWVcbiIpOworCXdhaXRfcGFuZWxfc3RhdHVzKGludGVsX2RwLCBJRExF
X09GRl9NQVNLLCBJRExFX09GRl9WQUxVRSk7Cit9CisKK3ZvaWQgd2FpdF9wYW5lbF9wb3dlcl9j
eWNsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJa3RpbWVfdCBwYW5lbF9wb3dlcl9v
bl90aW1lOworCXM2NCBwYW5lbF9wb3dlcl9vZmZfZHVyYXRpb247CisKKwlkcm1fZGJnX2ttcygm
aTkxNS0+ZHJtLCAiV2FpdCBmb3IgcGFuZWwgcG93ZXIgY3ljbGVcbiIpOworCisJLyogdGFrZSB0
aGUgZGlmZmVyZW5jZSBvZiBjdXJycmVudCB0aW1lIGFuZCBwYW5lbCBwb3dlciBvZmYgdGltZQor
CSAqIGFuZCB0aGVuIG1ha2UgcGFuZWwgd2FpdCBmb3IgdDExX3QxMiBpZiBuZWVkZWQuICovCisJ
cGFuZWxfcG93ZXJfb25fdGltZSA9IGt0aW1lX2dldF9ib290dGltZSgpOworCXBhbmVsX3Bvd2Vy
X29mZl9kdXJhdGlvbiA9IGt0aW1lX21zX2RlbHRhKHBhbmVsX3Bvd2VyX29uX3RpbWUsIGludGVs
X2RwLT5wYW5lbF9wb3dlcl9vZmZfdGltZSk7CisKKwkvKiBXaGVuIHdlIGRpc2FibGUgdGhlIFZE
RCBvdmVycmlkZSBiaXQgbGFzdCB3ZSBoYXZlIHRvIGRvIHRoZSBtYW51YWwKKwkgKiB3YWl0LiAq
LworCWlmIChwYW5lbF9wb3dlcl9vZmZfZHVyYXRpb24gPCAoczY0KWludGVsX2RwLT5wYW5lbF9w
b3dlcl9jeWNsZV9kZWxheSkKKwkJd2FpdF9yZW1haW5pbmdfbXNfZnJvbV9qaWZmaWVzKGppZmZp
ZXMsCisJCQkJICAgICAgIGludGVsX2RwLT5wYW5lbF9wb3dlcl9jeWNsZV9kZWxheSAtIHBhbmVs
X3Bvd2VyX29mZl9kdXJhdGlvbik7CisKKwl3YWl0X3BhbmVsX3N0YXR1cyhpbnRlbF9kcCwgSURM
RV9DWUNMRV9NQVNLLCBJRExFX0NZQ0xFX1ZBTFVFKTsKK30KKworc3RhdGljIHZvaWQgd2FpdF9i
YWNrbGlnaHRfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwl3YWl0X3JlbWFpbmlu
Z19tc19mcm9tX2ppZmZpZXMoaW50ZWxfZHAtPmxhc3RfcG93ZXJfb24sCisJCQkJICAgICAgIGlu
dGVsX2RwLT5iYWNrbGlnaHRfb25fZGVsYXkpOworfQorCitzdGF0aWMgdm9pZCBlZHBfd2FpdF9i
YWNrbGlnaHRfb2ZmKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJd2FpdF9yZW1haW5p
bmdfbXNfZnJvbV9qaWZmaWVzKGludGVsX2RwLT5sYXN0X2JhY2tsaWdodF9vZmYsCisJCQkJICAg
ICAgIGludGVsX2RwLT5iYWNrbGlnaHRfb2ZmX2RlbGF5KTsKK30KKworLyogUmVhZCB0aGUgY3Vy
cmVudCBwcF9jb250cm9sIHZhbHVlLCB1bmxvY2tpbmcgdGhlIHJlZ2lzdGVyIGlmIGl0CisgKiBp
cyBsb2NrZWQKKyAqLworCitzdGF0aWMgIHUzMiBpbGtfZ2V0X3BwX2NvbnRyb2woc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSBkcF90b19pOTE1KGludGVsX2RwKTsKKwl1MzIgY29udHJvbDsKKworCWxvY2tkZXBfYXNzZXJ0
X2hlbGQoJmRldl9wcml2LT5wcHNfbXV0ZXgpOworCisJY29udHJvbCA9IGludGVsX2RlX3JlYWQo
ZGV2X3ByaXYsIF9wcF9jdHJsX3JlZyhpbnRlbF9kcCkpOworCWlmIChkcm1fV0FSTl9PTigmZGV2
X3ByaXYtPmRybSwgIUhBU19EREkoZGV2X3ByaXYpICYmCisJCQkoY29udHJvbCAmIFBBTkVMX1VO
TE9DS19NQVNLKSAhPSBQQU5FTF9VTkxPQ0tfUkVHUykpIHsKKwkJY29udHJvbCAmPSB+UEFORUxf
VU5MT0NLX01BU0s7CisJCWNvbnRyb2wgfD0gUEFORUxfVU5MT0NLX1JFR1M7CisJfQorCXJldHVy
biBjb250cm9sOworfQorCisvKgorICogTXVzdCBiZSBwYWlyZWQgd2l0aCBlZHBfcGFuZWxfdmRk
X29mZigpLgorICogTXVzdCBob2xkIHBwc19tdXRleCBhcm91bmQgdGhlIHdob2xlIG9uL29mZiBz
ZXF1ZW5jZS4KKyAqIENhbiBiZSBuZXN0ZWQgd2l0aCBpbnRlbF9lZHBfcGFuZWxfdmRkX3tvbixv
ZmZ9KCkgY2FsbHMuCisgKi8KK2Jvb2wgZWRwX3BhbmVsX3ZkZF9vbihzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0g
ZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOworCXUzMiBwcDsKKwlpOTE1X3JlZ190IHBwX3N0YXRf
cmVnLCBwcF9jdHJsX3JlZzsKKwlib29sIG5lZWRfdG9fZGlzYWJsZSA9ICFpbnRlbF9kcC0+d2Fu
dF9wYW5lbF92ZGQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4
KTsKKworCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKKwkJcmV0dXJuIGZhbHNlOwor
CisJY2FuY2VsX2RlbGF5ZWRfd29yaygmaW50ZWxfZHAtPnBhbmVsX3ZkZF93b3JrKTsKKwlpbnRl
bF9kcC0+d2FudF9wYW5lbF92ZGQgPSB0cnVlOworCisJaWYgKGVkcF9oYXZlX3BhbmVsX3ZkZChp
bnRlbF9kcCkpCisJCXJldHVybiBuZWVkX3RvX2Rpc2FibGU7CisKKwlkcm1fV0FSTl9PTigmZGV2
X3ByaXYtPmRybSwgaW50ZWxfZHAtPnZkZF93YWtlcmVmKTsKKwlpbnRlbF9kcC0+dmRkX3dha2Vy
ZWYgPSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldChkZXZfcHJpdiwKKwkJCQkJCQlpbnRlbF9hdXhf
cG93ZXJfZG9tYWluKGRpZ19wb3J0KSk7CisKKwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwg
IlR1cm5pbmcgW0VOQ09ERVI6JWQ6JXNdIFZERCBvblxuIiwKKwkJICAgIGRpZ19wb3J0LT5iYXNl
LmJhc2UuYmFzZS5pZCwKKwkJICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CisKKwlpZiAo
IWVkcF9oYXZlX3BhbmVsX3Bvd2VyKGludGVsX2RwKSkKKwkJd2FpdF9wYW5lbF9wb3dlcl9jeWNs
ZShpbnRlbF9kcCk7CisKKwlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CisJcHAg
fD0gRURQX0ZPUkNFX1ZERDsKKworCXBwX3N0YXRfcmVnID0gX3BwX3N0YXRfcmVnKGludGVsX2Rw
KTsKKwlwcF9jdHJsX3JlZyA9IF9wcF9jdHJsX3JlZyhpbnRlbF9kcCk7CisKKwlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgcHBfY3RybF9yZWcsIHBwKTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQo
ZGV2X3ByaXYsIHBwX2N0cmxfcmVnKTsKKwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBQ
X1NUQVRVUzogMHglMDh4IFBQX0NPTlRST0w6IDB4JTA4eFxuIiwKKwkJICAgIGludGVsX2RlX3Jl
YWQoZGV2X3ByaXYsIHBwX3N0YXRfcmVnKSwKKwkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYs
IHBwX2N0cmxfcmVnKSk7CisJLyoKKwkgKiBJZiB0aGUgcGFuZWwgd2Fzbid0IG9uLCBkZWxheSBi
ZWZvcmUgYWNjZXNzaW5nIGF1eCBjaGFubmVsCisJICovCisJaWYgKCFlZHBfaGF2ZV9wYW5lbF9w
b3dlcihpbnRlbF9kcCkpIHsKKwkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCisJCQkgICAg
IltFTkNPREVSOiVkOiVzXSBwYW5lbCBwb3dlciB3YXNuJ3QgZW5hYmxlZFxuIiwKKwkJCSAgICBk
aWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5u
YW1lKTsKKwkJbXNsZWVwKGludGVsX2RwLT5wYW5lbF9wb3dlcl91cF9kZWxheSk7CisJfQorCisJ
cmV0dXJuIG5lZWRfdG9fZGlzYWJsZTsKK30KKworLyoKKyAqIE11c3QgYmUgcGFpcmVkIHdpdGgg
aW50ZWxfZWRwX3BhbmVsX3ZkZF9vZmYoKSBvcgorICogaW50ZWxfZWRwX3BhbmVsX29mZigpLgor
ICogTmVzdGVkIGNhbGxzIHRvIHRoZXNlIGZ1bmN0aW9ucyBhcmUgbm90IGFsbG93ZWQgc2luY2UK
KyAqIHdlIGRyb3AgdGhlIGxvY2suIENhbGxlciBtdXN0IHVzZSBzb21lIGhpZ2hlciBsZXZlbAor
ICogbG9ja2luZyB0byBwcmV2ZW50IG5lc3RlZCBjYWxscyBmcm9tIG90aGVyIHRocmVhZHMuCisg
Ki8KK3ZvaWQgaW50ZWxfZWRwX3BhbmVsX3ZkZF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQoreworCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOworCWJvb2wgdmRkOworCisJaWYgKCFpbnRl
bF9kcF9pc19lZHAoaW50ZWxfZHApKQorCQlyZXR1cm47CisKKwl2ZGQgPSBmYWxzZTsKKwl3aXRo
X3Bwc19sb2NrKGludGVsX2RwLCB3YWtlcmVmKQorCQl2ZGQgPSBlZHBfcGFuZWxfdmRkX29uKGlu
dGVsX2RwKTsKKwlJOTE1X1NUQVRFX1dBUk4oIXZkZCwgIltFTkNPREVSOiVkOiVzXSBWREQgYWxy
ZWFkeSByZXF1ZXN0ZWQgb25cbiIsCisJCQlkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2Uu
YmFzZS5iYXNlLmlkLAorCQkJZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2UubmFt
ZSk7Cit9CisKK3ZvaWQgZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5
MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0KKwkJ
ZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOworCXUzMiBwcDsKKwlpOTE1X3JlZ190IHBwX3N0YXRf
cmVnLCBwcF9jdHJsX3JlZzsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wcHNf
bXV0ZXgpOworCisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT53YW50X3Bh
bmVsX3ZkZCk7CisKKwlpZiAoIWVkcF9oYXZlX3BhbmVsX3ZkZChpbnRlbF9kcCkpCisJCXJldHVy
bjsKKworCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiVHVybmluZyBbRU5DT0RFUjolZDol
c10gVkREIG9mZlxuIiwKKwkJICAgIGRpZ19wb3J0LT5iYXNlLmJhc2UuYmFzZS5pZCwKKwkJICAg
IGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CisKKwlwcCA9IGlsa19nZXRfcHBfY29udHJvbChp
bnRlbF9kcCk7CisJcHAgJj0gfkVEUF9GT1JDRV9WREQ7CisKKwlwcF9jdHJsX3JlZyA9IF9wcF9j
dHJsX3JlZyhpbnRlbF9kcCk7CisJcHBfc3RhdF9yZWcgPSBfcHBfc3RhdF9yZWcoaW50ZWxfZHAp
OworCisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7CisJaW50ZWxf
ZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZyk7CisKKwkvKiBNYWtlIHN1cmUg
c2VxdWVuY2VyIGlzIGlkbGUgYmVmb3JlIGFsbG93aW5nIHN1YnNlcXVlbnQgYWN0aXZpdHkgKi8K
Kwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBQX1NUQVRVUzogMHglMDh4IFBQX0NPTlRS
T0w6IDB4JTA4eFxuIiwKKwkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHBwX3N0YXRfcmVn
KSwKKwkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHBwX2N0cmxfcmVnKSk7CisKKwlpZiAo
KHBwICYgUEFORUxfUE9XRVJfT04pID09IDApCisJCWludGVsX2RwLT5wYW5lbF9wb3dlcl9vZmZf
dGltZSA9IGt0aW1lX2dldF9ib290dGltZSgpOworCisJaW50ZWxfZGlzcGxheV9wb3dlcl9wdXQo
ZGV2X3ByaXYsCisJCQkJaW50ZWxfYXV4X3Bvd2VyX2RvbWFpbihkaWdfcG9ydCksCisJCQkJZmV0
Y2hfYW5kX3plcm8oJmludGVsX2RwLT52ZGRfd2FrZXJlZikpOworfQorCit2b2lkIGVkcF9wYW5l
bF92ZGRfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKl9fd29yaykKK3sKKwlzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwID0KKwkJY29udGFpbmVyX29mKHRvX2RlbGF5ZWRfd29yayhfX3dvcmspLAor
CQkJICAgICBzdHJ1Y3QgaW50ZWxfZHAsIHBhbmVsX3ZkZF93b3JrKTsKKwlpbnRlbF93YWtlcmVm
X3Qgd2FrZXJlZjsKKworCXdpdGhfcHBzX2xvY2soaW50ZWxfZHAsIHdha2VyZWYpIHsKKwkJaWYg
KCFpbnRlbF9kcC0+d2FudF9wYW5lbF92ZGQpCisJCQllZHBfcGFuZWxfdmRkX29mZl9zeW5jKGlu
dGVsX2RwKTsKKwl9Cit9CisKK3N0YXRpYyB2b2lkIGVkcF9wYW5lbF92ZGRfc2NoZWR1bGVfb2Zm
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJdW5zaWduZWQgbG9uZyBkZWxheTsKKwor
CS8qCisJICogUXVldWUgdGhlIHRpbWVyIHRvIGZpcmUgYSBsb25nIHRpbWUgZnJvbSBub3cgKHJl
bGF0aXZlIHRvIHRoZSBwb3dlcgorCSAqIGRvd24gZGVsYXkpIHRvIGtlZXAgdGhlIHBhbmVsIHBv
d2VyIHVwIGFjcm9zcyBhIHNlcXVlbmNlIG9mCisJICogb3BlcmF0aW9ucy4KKwkgKi8KKwlkZWxh
eSA9IG1zZWNzX3RvX2ppZmZpZXMoaW50ZWxfZHAtPnBhbmVsX3Bvd2VyX2N5Y2xlX2RlbGF5ICog
NSk7CisJc2NoZWR1bGVfZGVsYXllZF93b3JrKCZpbnRlbF9kcC0+cGFuZWxfdmRkX3dvcmssIGRl
bGF5KTsKK30KKworLyoKKyAqIE11c3QgYmUgcGFpcmVkIHdpdGggZWRwX3BhbmVsX3ZkZF9vbigp
LgorICogTXVzdCBob2xkIHBwc19tdXRleCBhcm91bmQgdGhlIHdob2xlIG9uL29mZiBzZXF1ZW5j
ZS4KKyAqIENhbiBiZSBuZXN0ZWQgd2l0aCBpbnRlbF9lZHBfcGFuZWxfdmRkX3tvbixvZmZ9KCkg
Y2FsbHMuCisgKi8KK3ZvaWQgZWRwX3BhbmVsX3ZkZF9vZmYoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwgYm9vbCBzeW5jKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYt
PnBwc19tdXRleCk7CisKKwlpZiAoIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCisJCXJldHVy
bjsKKworCUk5MTVfU1RBVEVfV0FSTighaW50ZWxfZHAtPndhbnRfcGFuZWxfdmRkLCAiW0VOQ09E
RVI6JWQ6JXNdIFZERCBub3QgZm9yY2VkIG9uIiwKKwkJCWRwX3RvX2RpZ19wb3J0KGludGVsX2Rw
KS0+YmFzZS5iYXNlLmJhc2UuaWQsCisJCQlkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2Uu
YmFzZS5uYW1lKTsKKworCWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCA9IGZhbHNlOworCisJaWYg
KHN5bmMpCisJCWVkcF9wYW5lbF92ZGRfb2ZmX3N5bmMoaW50ZWxfZHApOworCWVsc2UKKwkJZWRw
X3BhbmVsX3ZkZF9zY2hlZHVsZV9vZmYoaW50ZWxfZHApOworfQorCit2b2lkIGVkcF9wYW5lbF9v
bihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXUzMiBwcDsKKwlpOTE1X3JlZ190
IHBwX2N0cmxfcmVnOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBwc19tdXRl
eCk7CisKKwlpZiAoIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCisJCXJldHVybjsKKworCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiVHVybiBbRU5DT0RFUjolZDolc10gcGFuZWwgcG93
ZXIgb25cbiIsCisJCSAgICBkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5iYXNl
LmlkLAorCQkgICAgZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2UubmFtZSk7CisK
KwlpZiAoZHJtX1dBUk4oJmRldl9wcml2LT5kcm0sIGVkcF9oYXZlX3BhbmVsX3Bvd2VyKGludGVs
X2RwKSwKKwkJICAgICAiW0VOQ09ERVI6JWQ6JXNdIHBhbmVsIHBvd2VyIGFscmVhZHkgb25cbiIs
CisJCSAgICAgZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2UuYmFzZS5pZCwKKwkJ
ICAgICBkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5uYW1lKSkKKwkJcmV0dXJu
OworCisJd2FpdF9wYW5lbF9wb3dlcl9jeWNsZShpbnRlbF9kcCk7CisKKwlwcF9jdHJsX3JlZyA9
IF9wcF9jdHJsX3JlZyhpbnRlbF9kcCk7CisJcHAgPSBpbGtfZ2V0X3BwX2NvbnRyb2woaW50ZWxf
ZHApOworCWlmIChJU19HRU4oZGV2X3ByaXYsIDUpKSB7CisJCS8qIElMSyB3b3JrYXJvdW5kOiBk
aXNhYmxlIHJlc2V0IGFyb3VuZCBwb3dlciBzZXF1ZW5jZSAqLworCQlwcCAmPSB+UEFORUxfUE9X
RVJfUkVTRVQ7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBwcF9jdHJsX3JlZywgcHApOwor
CQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIHBwX2N0cmxfcmVnKTsKKwl9CisKKwlw
cCB8PSBQQU5FTF9QT1dFUl9PTjsKKwlpZiAoIUlTX0dFTihkZXZfcHJpdiwgNSkpCisJCXBwIHw9
IFBBTkVMX1BPV0VSX1JFU0VUOworCisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHBwX2N0cmxf
cmVnLCBwcCk7CisJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBwcF9jdHJsX3JlZyk7
CisKKwl3YWl0X3BhbmVsX29uKGludGVsX2RwKTsKKwlpbnRlbF9kcC0+bGFzdF9wb3dlcl9vbiA9
IGppZmZpZXM7CisKKwlpZiAoSVNfR0VOKGRldl9wcml2LCA1KSkgeworCQlwcCB8PSBQQU5FTF9Q
T1dFUl9SRVNFVDsgLyogcmVzdG9yZSBwYW5lbCByZXNldCBiaXQgKi8KKwkJaW50ZWxfZGVfd3Jp
dGUoZGV2X3ByaXYsIHBwX2N0cmxfcmVnLCBwcCk7CisJCWludGVsX2RlX3Bvc3RpbmdfcmVhZChk
ZXZfcHJpdiwgcHBfY3RybF9yZWcpOworCX0KK30KKwordm9pZCBpbnRlbF9lZHBfcGFuZWxfb24o
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsK
KworCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKKwkJcmV0dXJuOworCisJd2l0aF9w
cHNfbG9jayhpbnRlbF9kcCwgd2FrZXJlZikKKwkJZWRwX3BhbmVsX29uKGludGVsX2RwKTsKK30K
Kwordm9pZCBlZHBfcGFuZWxfb2ZmKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJ
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9ydChpbnRl
bF9kcCk7CisJdTMyIHBwOworCWk5MTVfcmVnX3QgcHBfY3RybF9yZWc7CisKKwlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZkZXZfcHJpdi0+cHBzX211dGV4KTsKKworCWlmICghaW50ZWxfZHBfaXNfZWRw
KGludGVsX2RwKSkKKwkJcmV0dXJuOworCisJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJU
dXJuIFtFTkNPREVSOiVkOiVzXSBwYW5lbCBwb3dlciBvZmZcbiIsCisJCSAgICBkaWdfcG9ydC0+
YmFzZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CisKKwlkcm1fV0FS
TigmZGV2X3ByaXYtPmRybSwgIWludGVsX2RwLT53YW50X3BhbmVsX3ZkZCwKKwkJICJOZWVkIFtF
TkNPREVSOiVkOiVzXSBWREQgdG8gdHVybiBvZmYgcGFuZWxcbiIsCisJCSBkaWdfcG9ydC0+YmFz
ZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CisKKwlwcCA9IGlsa19n
ZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CisJLyogV2UgbmVlZCB0byBzd2l0Y2ggb2ZmIHBhbmVs
IHBvd2VyIF9hbmRfIGZvcmNlIHZkZCwgZm9yIG90aGVyd2lzZSBzb21lCisJICogcGFuZWxzIGdl
dCB2ZXJ5IHVuaGFwcHkgYW5kIGNlYXNlIHRvIHdvcmsuICovCisJcHAgJj0gfihQQU5FTF9QT1dF
Ul9PTiB8IFBBTkVMX1BPV0VSX1JFU0VUIHwgRURQX0ZPUkNFX1ZERCB8CisJCUVEUF9CTENfRU5B
QkxFKTsKKworCXBwX2N0cmxfcmVnID0gX3BwX2N0cmxfcmVnKGludGVsX2RwKTsKKworCWludGVs
X2RwLT53YW50X3BhbmVsX3ZkZCA9IGZhbHNlOworCisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYs
IHBwX2N0cmxfcmVnLCBwcCk7CisJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBwcF9j
dHJsX3JlZyk7CisKKwl3YWl0X3BhbmVsX29mZihpbnRlbF9kcCk7CisJaW50ZWxfZHAtPnBhbmVs
X3Bvd2VyX29mZl90aW1lID0ga3RpbWVfZ2V0X2Jvb3R0aW1lKCk7CisKKwkvKiBXZSBnb3QgYSBy
ZWZlcmVuY2Ugd2hlbiB3ZSBlbmFibGVkIHRoZSBWREQuICovCisJaW50ZWxfZGlzcGxheV9wb3dl
cl9wdXQoZGV2X3ByaXYsCisJCQkJaW50ZWxfYXV4X3Bvd2VyX2RvbWFpbihkaWdfcG9ydCksCisJ
CQkJZmV0Y2hfYW5kX3plcm8oJmludGVsX2RwLT52ZGRfd2FrZXJlZikpOworfQorCit2b2lkIGlu
dGVsX2VkcF9wYW5lbF9vZmYoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwlpbnRlbF93
YWtlcmVmX3Qgd2FrZXJlZjsKKworCWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKKwkJ
cmV0dXJuOworCisJd2l0aF9wcHNfbG9jayhpbnRlbF9kcCwgd2FrZXJlZikKKwkJZWRwX3BhbmVs
X29mZihpbnRlbF9kcCk7Cit9CisKKy8qIEVuYWJsZSBiYWNrbGlnaHQgaW4gdGhlIHBhbmVsIHBv
d2VyIGNvbnRyb2wuICovCit2b2lkIF9pbnRlbF9lZHBfYmFja2xpZ2h0X29uKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwkvKgor
CSAqIElmIHdlIGVuYWJsZSB0aGUgYmFja2xpZ2h0IHJpZ2h0IGF3YXkgZm9sbG93aW5nIGEgcGFu
ZWwgcG93ZXIKKwkgKiBvbiwgd2UgbWF5IHNlZSBzbGlnaHQgZmxpY2tlciBhcyB0aGUgcGFuZWwg
c3luY3Mgd2l0aCB0aGUgZURQCisJICogbGluay4gIFNvIGRlbGF5IGEgYml0IHRvIG1ha2Ugc3Vy
ZSB0aGUgaW1hZ2UgaXMgc29saWQgYmVmb3JlCisJICogYWxsb3dpbmcgaXQgdG8gYXBwZWFyLgor
CSAqLworCXdhaXRfYmFja2xpZ2h0X29uKGludGVsX2RwKTsKKworCXdpdGhfcHBzX2xvY2soaW50
ZWxfZHAsIHdha2VyZWYpIHsKKwkJaTkxNV9yZWdfdCBwcF9jdHJsX3JlZyA9IF9wcF9jdHJsX3Jl
ZyhpbnRlbF9kcCk7CisJCXUzMiBwcDsKKworCQlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRl
bF9kcCk7CisJCXBwIHw9IEVEUF9CTENfRU5BQkxFOworCisJCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LCBwcF9jdHJsX3JlZywgcHApOworCQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYs
IHBwX2N0cmxfcmVnKTsKKwl9Cit9CisKKy8qIERpc2FibGUgYmFja2xpZ2h0IGluIHRoZSBwYW5l
bCBwb3dlciBjb250cm9sLiAqLwordm9pZCBfaW50ZWxfZWRwX2JhY2tsaWdodF9vZmYoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKwor
CWlmICghaW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKKwkJcmV0dXJuOworCisJd2l0aF9wcHNf
bG9jayhpbnRlbF9kcCwgd2FrZXJlZikgeworCQlpOTE1X3JlZ190IHBwX2N0cmxfcmVnID0gX3Bw
X2N0cmxfcmVnKGludGVsX2RwKTsKKwkJdTMyIHBwOworCisJCXBwID0gaWxrX2dldF9wcF9jb250
cm9sKGludGVsX2RwKTsKKwkJcHAgJj0gfkVEUF9CTENfRU5BQkxFOworCisJCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBwcF9jdHJsX3JlZywgcHApOworCQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQo
ZGV2X3ByaXYsIHBwX2N0cmxfcmVnKTsKKwl9CisKKwlpbnRlbF9kcC0+bGFzdF9iYWNrbGlnaHRf
b2ZmID0gamlmZmllczsKKwllZHBfd2FpdF9iYWNrbGlnaHRfb2ZmKGludGVsX2RwKTsKK30KKwor
LyoKKyAqIEhvb2sgZm9yIGNvbnRyb2xsaW5nIHRoZSBwYW5lbCBwb3dlciBjb250cm9sIGJhY2ts
aWdodCB0aHJvdWdoIHRoZSBibF9wb3dlcgorICogc3lzZnMgYXR0cmlidXRlLiBUYWtlIGNhcmUg
dG8gaGFuZGxlIG11bHRpcGxlIGNhbGxzLgorICovCit2b2lkIGludGVsX2VkcF9iYWNrbGlnaHRf
cG93ZXIoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yLCBib29sIGVuYWJsZSkKK3sK
KwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoY29ubmVjdG9yLT5iYXNl
LmRldik7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGludGVsX2F0dGFjaGVkX2RwKGNv
bm5lY3Rvcik7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisJYm9vbCBpc19lbmFibGVkOwor
CisJaXNfZW5hYmxlZCA9IGZhbHNlOworCXdpdGhfcHBzX2xvY2soaW50ZWxfZHAsIHdha2VyZWYp
CisJCWlzX2VuYWJsZWQgPSBpbGtfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApICYgRURQX0JMQ19F
TkFCTEU7CisJaWYgKGlzX2VuYWJsZWQgPT0gZW5hYmxlKQorCQlyZXR1cm47CisKKwlkcm1fZGJn
X2ttcygmaTkxNS0+ZHJtLCAicGFuZWwgcG93ZXIgY29udHJvbCBiYWNrbGlnaHQgJXNcbiIsCisJ
CSAgICBlbmFibGUgPyAiZW5hYmxlIiA6ICJkaXNhYmxlIik7CisKKwlpZiAoZW5hYmxlKQorCQlf
aW50ZWxfZWRwX2JhY2tsaWdodF9vbihpbnRlbF9kcCk7CisJZWxzZQorCQlfaW50ZWxfZWRwX2Jh
Y2tsaWdodF9vZmYoaW50ZWxfZHApOworfQorCitzdGF0aWMgdm9pZCB2bHZfZGV0YWNoX3Bvd2Vy
X3NlcXVlbmNlcihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBpbnRlbF9k
aWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOworCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGlnX3BvcnQtPmJhc2UuYmFz
ZS5kZXYpOworCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfZHAtPnBwc19waXBlOworCWk5MTVfcmVn
X3QgcHBfb25fcmVnID0gUFBfT05fREVMQVlTKHBpcGUpOworCisJZHJtX1dBUk5fT04oJmRldl9w
cml2LT5kcm0sIGludGVsX2RwLT5hY3RpdmVfcGlwZSAhPSBJTlZBTElEX1BJUEUpOworCisJaWYg
KGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBwaXBlICE9IFBJUEVfQSAmJiBwaXBlICE9IFBJ
UEVfQikpCisJCXJldHVybjsKKworCWVkcF9wYW5lbF92ZGRfb2ZmX3N5bmMoaW50ZWxfZHApOwor
CisJLyoKKwkgKiBWTFYgc2VlbXMgdG8gZ2V0IGNvbmZ1c2VkIHdoZW4gbXVsdGlwbGUgcG93ZXIg
c2VxdWVuY2VycworCSAqIGhhdmUgdGhlIHNhbWUgcG9ydCBzZWxlY3RlZCAoZXZlbiBpZiBvbmx5
IG9uZSBoYXMgcG93ZXIvdmRkCisJICogZW5hYmxlZCkuIFRoZSBmYWlsdXJlIG1hbmlmZXN0cyBh
cyB2bHZfd2FpdF9wb3J0X3JlYWR5KCkgZmFpbGluZworCSAqIENIViBvbiB0aGUgb3RoZXIgaGFu
ZCBkb2Vzbid0IHNlZW0gdG8gbWluZCBoYXZpbmcgdGhlIHNhbWUgcG9ydAorCSAqIHNlbGVjdGVk
IGluIG11bHRpcGxlIHBvd2VyIHNlcXVlbmNlcnMsIGJ1dCBsZXQncyBjbGVhciB0aGUKKwkgKiBw
b3J0IHNlbGVjdCBhbHdheXMgd2hlbiBsb2dpY2FsbHkgZGlzY29ubmVjdGluZyBhIHBvd2VyIHNl
cXVlbmNlcgorCSAqIGZyb20gYSBwb3J0LgorCSAqLworCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLAorCQkgICAgImRldGFjaGluZyBwaXBlICVjIHBvd2VyIHNlcXVlbmNlciBmcm9tIFtFTkNP
REVSOiVkOiVzXVxuIiwKKwkJICAgIHBpcGVfbmFtZShwaXBlKSwgZGlnX3BvcnQtPmJhc2UuYmFz
ZS5iYXNlLmlkLAorCQkgICAgZGlnX3BvcnQtPmJhc2UuYmFzZS5uYW1lKTsKKwlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgcHBfb25fcmVnLCAwKTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2
X3ByaXYsIHBwX29uX3JlZyk7CisKKwlpbnRlbF9kcC0+cHBzX3BpcGUgPSBJTlZBTElEX1BJUEU7
Cit9CisKK3N0YXRpYyB2b2lkIHZsdl9zdGVhbF9wb3dlcl9zZXF1ZW5jZXIoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgICAgIGVudW0gcGlwZSBwaXBlKQoreworCXN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2
X3ByaXYtPnBwc19tdXRleCk7CisKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwg
ZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2Rw
KGVuY29kZXIpOworCisJCWRybV9XQVJOKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9kcC0+YWN0aXZl
X3BpcGUgPT0gcGlwZSwKKwkJCSAic3RlYWxpbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZnJv
bSBhY3RpdmUgW0VOQ09ERVI6JWQ6JXNdXG4iLAorCQkJIHBpcGVfbmFtZShwaXBlKSwgZW5jb2Rl
ci0+YmFzZS5iYXNlLmlkLAorCQkJIGVuY29kZXItPmJhc2UubmFtZSk7CisKKwkJaWYgKGludGVs
X2RwLT5wcHNfcGlwZSAhPSBwaXBlKQorCQkJY29udGludWU7CisKKwkJZHJtX2RiZ19rbXMoJmRl
dl9wcml2LT5kcm0sCisJCQkgICAgInN0ZWFsaW5nIHBpcGUgJWMgcG93ZXIgc2VxdWVuY2VyIGZy
b20gW0VOQ09ERVI6JWQ6JXNdXG4iLAorCQkJICAgIHBpcGVfbmFtZShwaXBlKSwgZW5jb2Rlci0+
YmFzZS5iYXNlLmlkLAorCQkJICAgIGVuY29kZXItPmJhc2UubmFtZSk7CisKKwkJLyogbWFrZSBz
dXJlIHZkZCBpcyBvZmYgYmVmb3JlIHdlIHN0ZWFsIGl0ICovCisJCXZsdl9kZXRhY2hfcG93ZXJf
c2VxdWVuY2VyKGludGVsX2RwKTsKKwl9Cit9CisKK3ZvaWQgdmx2X2luaXRfcGFuZWxfcG93ZXJf
c2VxdWVuY2VyKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJCSAgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwlzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCXN0cnVjdCBp
bnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwor
CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBwc19tdXRleCk7CisKKwlkcm1fV0FS
Tl9PTigmZGV2X3ByaXYtPmRybSwgaW50ZWxfZHAtPmFjdGl2ZV9waXBlICE9IElOVkFMSURfUElQ
RSk7CisKKwlpZiAoaW50ZWxfZHAtPnBwc19waXBlICE9IElOVkFMSURfUElQRSAmJgorCSAgICBp
bnRlbF9kcC0+cHBzX3BpcGUgIT0gY3J0Yy0+cGlwZSkgeworCQkvKgorCQkgKiBJZiBhbm90aGVy
IHBvd2VyIHNlcXVlbmNlciB3YXMgYmVpbmcgdXNlZCBvbiB0aGlzCisJCSAqIHBvcnQgcHJldmlv
dXNseSBtYWtlIHN1cmUgdG8gdHVybiBvZmYgdmRkIHRoZXJlIHdoaWxlCisJCSAqIHdlIHN0aWxs
IGhhdmUgY29udHJvbCBvZiBpdC4KKwkJICovCisJCXZsdl9kZXRhY2hfcG93ZXJfc2VxdWVuY2Vy
KGludGVsX2RwKTsKKwl9CisKKwkvKgorCSAqIFdlIG1heSBiZSBzdGVhbGluZyB0aGUgcG93ZXIK
KwkgKiBzZXF1ZW5jZXIgZnJvbSBhbm90aGVyIHBvcnQuCisJICovCisJdmx2X3N0ZWFsX3Bvd2Vy
X3NlcXVlbmNlcihkZXZfcHJpdiwgY3J0Yy0+cGlwZSk7CisKKwlpbnRlbF9kcC0+YWN0aXZlX3Bp
cGUgPSBjcnRjLT5waXBlOworCisJaWYgKCFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKQorCQly
ZXR1cm47CisKKwkvKiBub3cgaXQncyBhbGwgb3VycyAqLworCWludGVsX2RwLT5wcHNfcGlwZSA9
IGNydGMtPnBpcGU7CisKKwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKKwkJICAgICJpbml0
aWFsaXppbmcgcGlwZSAlYyBwb3dlciBzZXF1ZW5jZXIgZm9yIFtFTkNPREVSOiVkOiVzXVxuIiwK
KwkJICAgIHBpcGVfbmFtZShpbnRlbF9kcC0+cHBzX3BpcGUpLCBlbmNvZGVyLT5iYXNlLmJhc2Uu
aWQsCisJCSAgICBlbmNvZGVyLT5iYXNlLm5hbWUpOworCisJLyogaW5pdCBwb3dlciBzZXF1ZW5j
ZXIgb24gdGhpcyBwaXBlIGFuZCBwb3J0ICovCisJaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9z
ZXF1ZW5jZXIoaW50ZWxfZHApOworCWludGVsX2RwX2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2Vy
X3JlZ2lzdGVycyhpbnRlbF9kcCwgdHJ1ZSk7Cit9CisKK3ZvaWQgaW50ZWxfZWRwX3BhbmVsX3Zk
ZF9zYW5pdGl6ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRl
bF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApOworCisJ
bG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBwc19tdXRleCk7CisKKwlpZiAoIWVkcF9o
YXZlX3BhbmVsX3ZkZChpbnRlbF9kcCkpCisJCXJldHVybjsKKworCS8qCisJICogVGhlIFZERCBi
aXQgbmVlZHMgYSBwb3dlciBkb21haW4gcmVmZXJlbmNlLCBzbyBpZiB0aGUgYml0IGlzCisJICog
YWxyZWFkeSBlbmFibGVkIHdoZW4gd2UgYm9vdCBvciByZXN1bWUsIGdyYWIgdGhpcyByZWZlcmVu
Y2UgYW5kCisJICogc2NoZWR1bGUgYSB2ZGQgb2ZmLCBzbyB3ZSBkb24ndCBob2xkIG9uIHRvIHRo
ZSByZWZlcmVuY2UKKwkgKiBpbmRlZmluaXRlbHkuCisJICovCisJZHJtX2RiZ19rbXMoJmRldl9w
cml2LT5kcm0sCisJCSAgICAiVkREIGxlZnQgb24gYnkgQklPUywgYWRqdXN0aW5nIHN0YXRlIHRy
YWNraW5nXG4iKTsKKwlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgaW50ZWxfZHAtPnZkZF93
YWtlcmVmKTsKKwlpbnRlbF9kcC0+dmRkX3dha2VyZWYgPSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dl
dChkZXZfcHJpdiwKKwkJCQkJCQlpbnRlbF9hdXhfcG93ZXJfZG9tYWluKGRpZ19wb3J0KSk7CisK
KwllZHBfcGFuZWxfdmRkX3NjaGVkdWxlX29mZihpbnRlbF9kcCk7Cit9CisKK2Jvb2wgaW50ZWxf
ZWRwX2hhdmVfcG93ZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3sKKwlpbnRlbF93YWtl
cmVmX3Qgd2FrZXJlZjsKKwlib29sIGhhdmVfcG93ZXIgPSBmYWxzZTsKKworCXdpdGhfcHBzX2xv
Y2soaW50ZWxfZHAsIHdha2VyZWYpIHsKKwkJaGF2ZV9wb3dlciA9IGVkcF9oYXZlX3BhbmVsX3Bv
d2VyKGludGVsX2RwKSAmJgorCQkJCQkJICBlZHBfaGF2ZV9wYW5lbF92ZGQoaW50ZWxfZHApOwor
CX0KKworCXJldHVybiBoYXZlX3Bvd2VyOworfQorCit2b2lkIGludGVsX2RwX2luaXRfcGFuZWxf
cG93ZXJfdGltZXN0YW1wcyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCWludGVsX2Rw
LT5wYW5lbF9wb3dlcl9vZmZfdGltZSA9IGt0aW1lX2dldF9ib290dGltZSgpOworCWludGVsX2Rw
LT5sYXN0X3Bvd2VyX29uID0gamlmZmllczsKKwlpbnRlbF9kcC0+bGFzdF9iYWNrbGlnaHRfb2Zm
ID0gamlmZmllczsKK30KKworc3RhdGljIHZvaWQKK2ludGVsX3Bwc19yZWFkb3V0X2h3X3N0YXRl
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHN0cnVjdCBlZHBfcG93ZXJfc2VxICpzZXEpCit7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisJdTMyIHBwX29uLCBwcF9vZmYsIHBwX2N0bDsKKwlzdHJ1Y3QgcHBzX3JlZ2lzdGVycyBy
ZWdzOworCisJaW50ZWxfcHBzX2dldF9yZWdpc3RlcnMoaW50ZWxfZHAsICZyZWdzKTsKKworCXBw
X2N0bCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CisKKwkvKiBFbnN1cmUgUFBTIGlz
IHVubG9ja2VkICovCisJaWYgKCFIQVNfRERJKGRldl9wcml2KSkKKwkJaW50ZWxfZGVfd3JpdGUo
ZGV2X3ByaXYsIHJlZ3MucHBfY3RybCwgcHBfY3RsKTsKKworCXBwX29uID0gaW50ZWxfZGVfcmVh
ZChkZXZfcHJpdiwgcmVncy5wcF9vbik7CisJcHBfb2ZmID0gaW50ZWxfZGVfcmVhZChkZXZfcHJp
diwgcmVncy5wcF9vZmYpOworCisJLyogUHVsbCB0aW1pbmcgdmFsdWVzIG91dCBvZiByZWdpc3Rl
cnMgKi8KKwlzZXEtPnQxX3QzID0gUkVHX0ZJRUxEX0dFVChQQU5FTF9QT1dFUl9VUF9ERUxBWV9N
QVNLLCBwcF9vbik7CisJc2VxLT50OCA9IFJFR19GSUVMRF9HRVQoUEFORUxfTElHSFRfT05fREVM
QVlfTUFTSywgcHBfb24pOworCXNlcS0+dDkgPSBSRUdfRklFTERfR0VUKFBBTkVMX0xJR0hUX09G
Rl9ERUxBWV9NQVNLLCBwcF9vZmYpOworCXNlcS0+dDEwID0gUkVHX0ZJRUxEX0dFVChQQU5FTF9Q
T1dFUl9ET1dOX0RFTEFZX01BU0ssIHBwX29mZik7CisKKwlpZiAoaTkxNV9tbWlvX3JlZ192YWxp
ZChyZWdzLnBwX2RpdikpIHsKKwkJdTMyIHBwX2RpdjsKKworCQlwcF9kaXYgPSBpbnRlbF9kZV9y
ZWFkKGRldl9wcml2LCByZWdzLnBwX2Rpdik7CisKKwkJc2VxLT50MTFfdDEyID0gUkVHX0ZJRUxE
X0dFVChQQU5FTF9QT1dFUl9DWUNMRV9ERUxBWV9NQVNLLCBwcF9kaXYpICogMTAwMDsKKwl9IGVs
c2UgeworCQlzZXEtPnQxMV90MTIgPSBSRUdfRklFTERfR0VUKEJYVF9QT1dFUl9DWUNMRV9ERUxB
WV9NQVNLLCBwcF9jdGwpICogMTAwMDsKKwl9Cit9CisKK3N0YXRpYyB2b2lkCitpbnRlbF9wcHNf
ZHVtcF9zdGF0ZShjb25zdCBjaGFyICpzdGF0ZV9uYW1lLCBjb25zdCBzdHJ1Y3QgZWRwX3Bvd2Vy
X3NlcSAqc2VxKQoreworCURSTV9ERUJVR19LTVMoIiVzIHQxX3QzICVkIHQ4ICVkIHQ5ICVkIHQx
MCAlZCB0MTFfdDEyICVkXG4iLAorCQkgICAgICBzdGF0ZV9uYW1lLAorCQkgICAgICBzZXEtPnQx
X3QzLCBzZXEtPnQ4LCBzZXEtPnQ5LCBzZXEtPnQxMCwgc2VxLT50MTFfdDEyKTsKK30KKworc3Rh
dGljIHZvaWQKK2ludGVsX3Bwc192ZXJpZnlfc3RhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKK3sKKwlzdHJ1Y3QgZWRwX3Bvd2VyX3NlcSBodzsKKwlzdHJ1Y3QgZWRwX3Bvd2VyX3NlcSAq
c3cgPSAmaW50ZWxfZHAtPnBwc19kZWxheXM7CisKKwlpbnRlbF9wcHNfcmVhZG91dF9od19zdGF0
ZShpbnRlbF9kcCwgJmh3KTsKKworCWlmIChody50MV90MyAhPSBzdy0+dDFfdDMgfHwgaHcudDgg
IT0gc3ctPnQ4IHx8IGh3LnQ5ICE9IHN3LT50OSB8fAorCSAgICBody50MTAgIT0gc3ctPnQxMCB8
fCBody50MTFfdDEyICE9IHN3LT50MTFfdDEyKSB7CisJCURSTV9FUlJPUigiUFBTIHN0YXRlIG1p
c21hdGNoXG4iKTsKKwkJaW50ZWxfcHBzX2R1bXBfc3RhdGUoInN3Iiwgc3cpOworCQlpbnRlbF9w
cHNfZHVtcF9zdGF0ZSgiaHciLCAmaHcpOworCX0KK30KKworc3RhdGljIHZvaWQKK2ludGVsX2Rw
X2luaXRfcGFuZWxfcG93ZXJfc2VxdWVuY2VyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCit7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisJc3RydWN0IGVkcF9wb3dlcl9zZXEgY3VyLCB2YnQsIHNwZWMsCisJCSpmaW5hbCA9ICZp
bnRlbF9kcC0+cHBzX2RlbGF5czsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5w
cHNfbXV0ZXgpOworCisJLyogYWxyZWFkeSBpbml0aWFsaXplZD8gKi8KKwlpZiAoZmluYWwtPnQx
MV90MTIgIT0gMCkKKwkJcmV0dXJuOworCisJaW50ZWxfcHBzX3JlYWRvdXRfaHdfc3RhdGUoaW50
ZWxfZHAsICZjdXIpOworCisJaW50ZWxfcHBzX2R1bXBfc3RhdGUoImN1ciIsICZjdXIpOworCisJ
dmJ0ID0gZGV2X3ByaXYtPnZidC5lZHAucHBzOworCS8qIE9uIFRvc2hpYmEgU2F0ZWxsaXRlIFA1
MC1DLTE4QyBzeXN0ZW0gdGhlIFZCVCBUMTIgZGVsYXkKKwkgKiBvZiA1MDBtcyBhcHBlYXJzIHRv
IGJlIHRvbyBzaG9ydC4gT2Nhc3Npb25hbGx5IHRoZSBwYW5lbAorCSAqIGp1c3QgZmFpbHMgdG8g
cG93ZXIgYmFjayBvbi4gSW5jcmVhc2luZyB0aGUgZGVsYXkgdG8gODAwbXMKKwkgKiBzZWVtcyBz
dWZmaWNpZW50IHRvIGF2b2lkIHRoaXMgcHJvYmxlbS4KKwkgKi8KKwlpZiAoZGV2X3ByaXYtPnF1
aXJrcyAmIFFVSVJLX0lOQ1JFQVNFX1QxMl9ERUxBWSkgeworCQl2YnQudDExX3QxMiA9IG1heF90
KHUxNiwgdmJ0LnQxMV90MTIsIDEzMDAgKiAxMCk7CisJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLAorCQkJICAgICJJbmNyZWFzaW5nIFQxMiBwYW5lbCBkZWxheSBhcyBwZXIgdGhlIHF1aXJr
IHRvICVkXG4iLAorCQkJICAgIHZidC50MTFfdDEyKTsKKwl9CisJLyogVDExX1QxMiBkZWxheSBp
cyBzcGVjaWFsIGFuZCBhY3R1YWxseSBpbiB1bml0cyBvZiAxMDBtcywgYnV0IHplcm8KKwkgKiBi
YXNlZCBpbiB0aGUgaHcgKHNvIHdlIG5lZWQgdG8gYWRkIDEwMCBtcykuIEJ1dCB0aGUgc3cgdmJ0
CisJICogdGFibGUgbXVsdGlwbGllcyBpdCB3aXRoIDEwMDAgdG8gbWFrZSBpdCBpbiB1bml0cyBv
ZiAxMDB1c2VjLAorCSAqIHRvby4gKi8KKwl2YnQudDExX3QxMiArPSAxMDAgKiAxMDsKKworCS8q
IFVwcGVyIGxpbWl0cyBmcm9tIGVEUCAxLjMgc3BlYy4gTm90ZSB0aGF0IHdlIHVzZSB0aGUgY2x1
bmt5IHVuaXRzIG9mCisJICogb3VyIGh3IGhlcmUsIHdoaWNoIGFyZSBhbGwgaW4gMTAwdXNlYy4g
Ki8KKwlzcGVjLnQxX3QzID0gMjEwICogMTA7CisJc3BlYy50OCA9IDUwICogMTA7IC8qIG5vIGxp
bWl0IGZvciB0OCwgdXNlIHQ3IGluc3RlYWQgKi8KKwlzcGVjLnQ5ID0gNTAgKiAxMDsgLyogbm8g
bGltaXQgZm9yIHQ5LCBtYWtlIGl0IHN5bW1ldHJpYyB3aXRoIHQ4ICovCisJc3BlYy50MTAgPSA1
MDAgKiAxMDsKKwkvKiBUaGlzIG9uZSBpcyBzcGVjaWFsIGFuZCBhY3R1YWxseSBpbiB1bml0cyBv
ZiAxMDBtcywgYnV0IHplcm8KKwkgKiBiYXNlZCBpbiB0aGUgaHcgKHNvIHdlIG5lZWQgdG8gYWRk
IDEwMCBtcykuIEJ1dCB0aGUgc3cgdmJ0CisJICogdGFibGUgbXVsdGlwbGllcyBpdCB3aXRoIDEw
MDAgdG8gbWFrZSBpdCBpbiB1bml0cyBvZiAxMDB1c2VjLAorCSAqIHRvby4gKi8KKwlzcGVjLnQx
MV90MTIgPSAoNTEwICsgMTAwKSAqIDEwOworCisJaW50ZWxfcHBzX2R1bXBfc3RhdGUoInZidCIs
ICZ2YnQpOworCisJLyogVXNlIHRoZSBtYXggb2YgdGhlIHJlZ2lzdGVyIHNldHRpbmdzIGFuZCB2
YnQuIElmIGJvdGggYXJlCisJICogdW5zZXQsIGZhbGwgYmFjayB0byB0aGUgc3BlYyBsaW1pdHMu
ICovCisjZGVmaW5lIGFzc2lnbl9maW5hbChmaWVsZCkJZmluYWwtPmZpZWxkID0gKG1heChjdXIu
ZmllbGQsIHZidC5maWVsZCkgPT0gMCA/IFwKKwkJCQkgICAgICAgc3BlYy5maWVsZCA6IFwKKwkJ
CQkgICAgICAgbWF4KGN1ci5maWVsZCwgdmJ0LmZpZWxkKSkKKwlhc3NpZ25fZmluYWwodDFfdDMp
OworCWFzc2lnbl9maW5hbCh0OCk7CisJYXNzaWduX2ZpbmFsKHQ5KTsKKwlhc3NpZ25fZmluYWwo
dDEwKTsKKwlhc3NpZ25fZmluYWwodDExX3QxMik7CisjdW5kZWYgYXNzaWduX2ZpbmFsCisKKyNk
ZWZpbmUgZ2V0X2RlbGF5KGZpZWxkKQkoRElWX1JPVU5EX1VQKGZpbmFsLT5maWVsZCwgMTApKQor
CWludGVsX2RwLT5wYW5lbF9wb3dlcl91cF9kZWxheSA9IGdldF9kZWxheSh0MV90Myk7CisJaW50
ZWxfZHAtPmJhY2tsaWdodF9vbl9kZWxheSA9IGdldF9kZWxheSh0OCk7CisJaW50ZWxfZHAtPmJh
Y2tsaWdodF9vZmZfZGVsYXkgPSBnZXRfZGVsYXkodDkpOworCWludGVsX2RwLT5wYW5lbF9wb3dl
cl9kb3duX2RlbGF5ID0gZ2V0X2RlbGF5KHQxMCk7CisJaW50ZWxfZHAtPnBhbmVsX3Bvd2VyX2N5
Y2xlX2RlbGF5ID0gZ2V0X2RlbGF5KHQxMV90MTIpOworI3VuZGVmIGdldF9kZWxheQorCisJZHJt
X2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCisJCSAgICAicGFuZWwgcG93ZXIgdXAgZGVsYXkgJWQs
IHBvd2VyIGRvd24gZGVsYXkgJWQsIHBvd2VyIGN5Y2xlIGRlbGF5ICVkXG4iLAorCQkgICAgaW50
ZWxfZHAtPnBhbmVsX3Bvd2VyX3VwX2RlbGF5LAorCQkgICAgaW50ZWxfZHAtPnBhbmVsX3Bvd2Vy
X2Rvd25fZGVsYXksCisJCSAgICBpbnRlbF9kcC0+cGFuZWxfcG93ZXJfY3ljbGVfZGVsYXkpOwor
CisJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJiYWNrbGlnaHQgb24gZGVsYXkgJWQsIG9m
ZiBkZWxheSAlZFxuIiwKKwkJICAgIGludGVsX2RwLT5iYWNrbGlnaHRfb25fZGVsYXksCisJCSAg
ICBpbnRlbF9kcC0+YmFja2xpZ2h0X29mZl9kZWxheSk7CisKKwkvKgorCSAqIFdlIG92ZXJyaWRl
IHRoZSBIVyBiYWNrbGlnaHQgZGVsYXlzIHRvIDEgYmVjYXVzZSB3ZSBkbyBtYW51YWwgd2FpdHMK
KwkgKiBvbiB0aGVtLiBGb3IgVDgsIGV2ZW4gQlNwZWMgcmVjb21tZW5kcyBkb2luZyBpdC4gRm9y
IFQ5LCBpZiB3ZQorCSAqIGRvbid0IGRvIHRoaXMsIHdlJ2xsIGVuZCB1cCB3YWl0aW5nIGZvciB0
aGUgYmFja2xpZ2h0IG9mZiBkZWxheQorCSAqIHR3aWNlOiBvbmNlIHdoZW4gd2UgZG8gdGhlIG1h
bnVhbCBzbGVlcCwgYW5kIG9uY2Ugd2hlbiB3ZSBkaXNhYmxlCisJICogdGhlIHBhbmVsIGFuZCB3
YWl0IGZvciB0aGUgUFBfU1RBVFVTIGJpdCB0byBiZWNvbWUgemVyby4KKwkgKi8KKwlmaW5hbC0+
dDggPSAxOworCWZpbmFsLT50OSA9IDE7CisKKwkvKgorCSAqIEhXIGhhcyBvbmx5IGEgMTAwbXNl
YyBncmFudWxhcml0eSBmb3IgdDExX3QxMiBzbyByb3VuZCBpdCB1cAorCSAqIGFjY29yZGluZ2x5
LgorCSAqLworCWZpbmFsLT50MTFfdDEyID0gcm91bmR1cChmaW5hbC0+dDExX3QxMiwgMTAwICog
MTApOworfQorCitzdGF0aWMgdm9pZAoraW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl9zZXF1ZW5j
ZXJfcmVnaXN0ZXJzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCSAgICAgIGJvb2wg
Zm9yY2VfZGlzYWJsZV92ZGQpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CisJdTMyIHBwX29uLCBwcF9vZmYsIHBvcnRfc2VsID0g
MDsKKwlpbnQgZGl2ID0gUlVOVElNRV9JTkZPKGRldl9wcml2KS0+cmF3Y2xrX2ZyZXEgLyAxMDAw
OworCXN0cnVjdCBwcHNfcmVnaXN0ZXJzIHJlZ3M7CisJZW51bSBwb3J0IHBvcnQgPSBkcF90b19k
aWdfcG9ydChpbnRlbF9kcCktPmJhc2UucG9ydDsKKwljb25zdCBzdHJ1Y3QgZWRwX3Bvd2VyX3Nl
cSAqc2VxID0gJmludGVsX2RwLT5wcHNfZGVsYXlzOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgm
ZGV2X3ByaXYtPnBwc19tdXRleCk7CisKKwlpbnRlbF9wcHNfZ2V0X3JlZ2lzdGVycyhpbnRlbF9k
cCwgJnJlZ3MpOworCisJLyoKKwkgKiBPbiBzb21lIFZMViBtYWNoaW5lcyB0aGUgQklPUyBjYW4g
bGVhdmUgdGhlIFZERAorCSAqIGVuYWJsZWQgZXZlbiBvbiBwb3dlciBzZXF1ZW5jZXJzIHdoaWNo
IGFyZW4ndAorCSAqIGhvb2tlZCB1cCB0byBhbnkgcG9ydC4gVGhpcyB3b3VsZCBtZXNzIHVwIHRo
ZQorCSAqIHBvd2VyIGRvbWFpbiB0cmFja2luZyB0aGUgZmlyc3QgdGltZSB3ZSBwaWNrCisJICog
b25lIG9mIHRoZXNlIHBvd2VyIHNlcXVlbmNlcnMgZm9yIHVzZSBzaW5jZQorCSAqIGVkcF9wYW5l
bF92ZGRfb24oKSB3b3VsZCBub3RpY2UgdGhhdCB0aGUgVkREIHdhcworCSAqIGFscmVhZHkgb24g
YW5kIHRoZXJlZm9yZSB3b3VsZG4ndCBncmFiIHRoZSBwb3dlcgorCSAqIGRvbWFpbiByZWZlcmVu
Y2UuIERpc2FibGUgVkREIGZpcnN0IHRvIGF2b2lkIHRoaXMuCisJICogVGhpcyBhbHNvIGF2b2lk
cyBzcHVyaW91c2x5IHR1cm5pbmcgdGhlIFZERCBvbiBhcworCSAqIHNvb24gYXMgdGhlIG5ldyBw
b3dlciBzZXF1ZW5jZXIgZ2V0cyBpbml0aWFsaXplZC4KKwkgKi8KKwlpZiAoZm9yY2VfZGlzYWJs
ZV92ZGQpIHsKKwkJdTMyIHBwID0gaWxrX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKKworCQlk
cm1fV0FSTigmZGV2X3ByaXYtPmRybSwgcHAgJiBQQU5FTF9QT1dFUl9PTiwKKwkJCSAiUGFuZWwg
cG93ZXIgYWxyZWFkeSBvblxuIik7CisKKwkJaWYgKHBwICYgRURQX0ZPUkNFX1ZERCkKKwkJCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAorCQkJCSAgICAiVkREIGFscmVhZHkgb24sIGRpc2Fi
bGluZyBmaXJzdFxuIik7CisKKwkJcHAgJj0gfkVEUF9GT1JDRV9WREQ7CisKKwkJaW50ZWxfZGVf
d3JpdGUoZGV2X3ByaXYsIHJlZ3MucHBfY3RybCwgcHApOworCX0KKworCXBwX29uID0gUkVHX0ZJ
RUxEX1BSRVAoUEFORUxfUE9XRVJfVVBfREVMQVlfTUFTSywgc2VxLT50MV90MykgfAorCQlSRUdf
RklFTERfUFJFUChQQU5FTF9MSUdIVF9PTl9ERUxBWV9NQVNLLCBzZXEtPnQ4KTsKKwlwcF9vZmYg
PSBSRUdfRklFTERfUFJFUChQQU5FTF9MSUdIVF9PRkZfREVMQVlfTUFTSywgc2VxLT50OSkgfAor
CQlSRUdfRklFTERfUFJFUChQQU5FTF9QT1dFUl9ET1dOX0RFTEFZX01BU0ssIHNlcS0+dDEwKTsK
KworCS8qIEhhc3dlbGwgZG9lc24ndCBoYXZlIGFueSBwb3J0IHNlbGVjdGlvbiBiaXRzIGZvciB0
aGUgcGFuZWwKKwkgKiBwb3dlciBzZXF1ZW5jZXIgYW55IG1vcmUuICovCisJaWYgKElTX1ZBTExF
WVZJRVcoZGV2X3ByaXYpIHx8IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSB7CisJCXBvcnRfc2Vs
ID0gUEFORUxfUE9SVF9TRUxFQ1RfVkxWKHBvcnQpOworCX0gZWxzZSBpZiAoSEFTX1BDSF9JQlgo
ZGV2X3ByaXYpIHx8IEhBU19QQ0hfQ1BUKGRldl9wcml2KSkgeworCQlzd2l0Y2ggKHBvcnQpIHsK
KwkJY2FzZSBQT1JUX0E6CisJCQlwb3J0X3NlbCA9IFBBTkVMX1BPUlRfU0VMRUNUX0RQQTsKKwkJ
CWJyZWFrOworCQljYXNlIFBPUlRfQzoKKwkJCXBvcnRfc2VsID0gUEFORUxfUE9SVF9TRUxFQ1Rf
RFBDOworCQkJYnJlYWs7CisJCWNhc2UgUE9SVF9EOgorCQkJcG9ydF9zZWwgPSBQQU5FTF9QT1JU
X1NFTEVDVF9EUEQ7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCU1JU1NJTkdfQ0FTRShwb3J0
KTsKKwkJCWJyZWFrOworCQl9CisJfQorCisJcHBfb24gfD0gcG9ydF9zZWw7CisKKwlpbnRlbF9k
ZV93cml0ZShkZXZfcHJpdiwgcmVncy5wcF9vbiwgcHBfb24pOworCWludGVsX2RlX3dyaXRlKGRl
dl9wcml2LCByZWdzLnBwX29mZiwgcHBfb2ZmKTsKKworCS8qCisJICogQ29tcHV0ZSB0aGUgZGl2
aXNvciBmb3IgdGhlIHBwIGNsb2NrLCBzaW1wbHkgbWF0Y2ggdGhlIEJzcGVjIGZvcm11bGEuCisJ
ICovCisJaWYgKGk5MTVfbW1pb19yZWdfdmFsaWQocmVncy5wcF9kaXYpKSB7CisJCWludGVsX2Rl
X3dyaXRlKGRldl9wcml2LCByZWdzLnBwX2RpdiwKKwkJCSAgICAgICBSRUdfRklFTERfUFJFUChQ
UF9SRUZFUkVOQ0VfRElWSURFUl9NQVNLLCAoMTAwICogZGl2KSAvIDIgLSAxKSB8IFJFR19GSUVM
RF9QUkVQKFBBTkVMX1BPV0VSX0NZQ0xFX0RFTEFZX01BU0ssIERJVl9ST1VORF9VUChzZXEtPnQx
MV90MTIsIDEwMDApKSk7CisJfSBlbHNlIHsKKwkJdTMyIHBwX2N0bDsKKworCQlwcF9jdGwgPSBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdzLnBwX2N0cmwpOworCQlwcF9jdGwgJj0gfkJYVF9Q
T1dFUl9DWUNMRV9ERUxBWV9NQVNLOworCQlwcF9jdGwgfD0gUkVHX0ZJRUxEX1BSRVAoQlhUX1BP
V0VSX0NZQ0xFX0RFTEFZX01BU0ssIERJVl9ST1VORF9VUChzZXEtPnQxMV90MTIsIDEwMDApKTsK
KwkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZ3MucHBfY3RybCwgcHBfY3RsKTsKKwl9CisK
Kwlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKKwkJICAgICJwYW5lbCBwb3dlciBzZXF1ZW5j
ZXIgcmVnaXN0ZXIgc2V0dGluZ3M6IFBQX09OICUjeCwgUFBfT0ZGICUjeCwgUFBfRElWICUjeFxu
IiwKKwkJICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJlZ3MucHBfb24pLAorCQkgICAgaW50
ZWxfZGVfcmVhZChkZXZfcHJpdiwgcmVncy5wcF9vZmYpLAorCQkgICAgaTkxNV9tbWlvX3JlZ192
YWxpZChyZWdzLnBwX2RpdikgPworCQkgICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgcmVncy5w
cF9kaXYpIDoKKwkJICAgIChpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWdzLnBwX2N0cmwpICYg
QlhUX1BPV0VSX0NZQ0xFX0RFTEFZX01BU0spKTsKK30KKwordm9pZCBpbnRlbF9kcF9wcHNfaW5p
dChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCisJaWYgKElTX1ZBTExFWVZJRVco
ZGV2X3ByaXYpIHx8IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKSB7CisJCXZsdl9pbml0aWFsX3Bv
d2VyX3NlcXVlbmNlcl9zZXR1cChpbnRlbF9kcCk7CisJfSBlbHNlIHsKKwkJaW50ZWxfZHBfaW5p
dF9wYW5lbF9wb3dlcl9zZXF1ZW5jZXIoaW50ZWxfZHApOworCQlpbnRlbF9kcF9pbml0X3BhbmVs
X3Bvd2VyX3NlcXVlbmNlcl9yZWdpc3RlcnMoaW50ZWxfZHAsIGZhbHNlKTsKKwl9Cit9CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bwcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wcHMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwMDAwMDAuLjc2ZDVjYzU2NTUwMQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHBzLmgKQEAgLTAsMCArMSw1MyBAQAorLyog
U1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVCAqLworLyoKKyAqIENvcHlyaWdodCDCqSAyMDIw
IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBfX0lOVEVMX1BQU19IX18KKyNkZWZp
bmUgX19JTlRFTF9QUFNfSF9fCisKKyNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorCisjaW5jbHVk
ZSAiaW50ZWxfd2FrZXJlZi5oIgorCitzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKK3N0cnVjdCBp
bnRlbF9jb25uZWN0b3I7CitzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZTsKK3N0cnVjdCBpbnRlbF9k
cDsKK3N0cnVjdCBpbnRlbF9lbmNvZGVyOworCitpbnRlbF93YWtlcmVmX3QgcHBzX2xvY2soc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCk7CitpbnRlbF93YWtlcmVmX3QgcHBzX3VubG9jayhzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZik7CisKKyNkZWZp
bmUgd2l0aF9wcHNfbG9jayhkcCwgd2YpCQkJCQkJXAorCWZvciAoKHdmKSA9IHBwc19sb2NrKGRw
KTsgKHdmKTsgKHdmKSA9IHBwc191bmxvY2soKGRwKSwgKHdmKSkpCisKK3ZvaWQgaW50ZWxfZHBf
Y2hlY2tfZWRwKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwordm9pZCBfaW50ZWxfZWRwX2Jh
Y2tsaWdodF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKK3ZvaWQgX2ludGVsX2VkcF9i
YWNrbGlnaHRfb2ZmKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwordm9pZCBpbnRlbF9lZHBf
YmFja2xpZ2h0X3Bvd2VyKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvciwgYm9vbCBl
bmFibGUpOworCitib29sIGVkcF9wYW5lbF92ZGRfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCk7Cit2b2lkIGVkcF9wYW5lbF92ZGRfb2ZmKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIGJv
b2wgc3luYyk7Cit2b2lkIGVkcF9wYW5lbF92ZGRfb2ZmX3N5bmMoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCk7Cit2b2lkIGVkcF9wYW5lbF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsK
K3ZvaWQgZWRwX3BhbmVsX29mZihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKK3ZvaWQgZWRw
X3BhbmVsX3ZkZF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqX193b3JrKTsKKwordm9pZCBpbnRl
bF9lZHBfcGFuZWxfdmRkX29uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwordm9pZCBpbnRl
bF9lZHBfcGFuZWxfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Cit2b2lkIGludGVsX2Vk
cF9wYW5lbF9vZmYoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Citib29sIGludGVsX2VkcF9o
YXZlX3Bvd2VyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOworCit2b2lkIGludGVsX2VkcF9w
YW5lbF92ZGRfc2FuaXRpemUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CisKK3ZvaWQgd2Fp
dF9wYW5lbF9wb3dlcl9jeWNsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKKwordm9pZCBp
bnRlbF9kcF9wcHNfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKK3ZvaWQgaW50ZWxf
cG93ZXJfc2VxdWVuY2VyX3Jlc2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKK3Zv
aWQgaW50ZWxfZHBfaW5pdF9wYW5lbF9wb3dlcl90aW1lc3RhbXBzKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApOworCit2b2lkIHZsdl9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcihzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpOworCisjZW5kaWYgLyogX19JTlRFTF9QUFNfSF9fICovCi0tIAoy
LjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCklu
dGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9D001E33AE
	for <lists+intel-gfx@lfdr.de>; Thu, 24 Oct 2019 15:14:13 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AAC7B6E3F0;
	Thu, 24 Oct 2019 13:14:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8BC1B6E3F3
 for <intel-gfx@lists.freedesktop.org>; Thu, 24 Oct 2019 13:13:59 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18949967-1500050 
 for multiple; Thu, 24 Oct 2019 14:13:46 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 24 Oct 2019 14:13:43 +0100
Message-Id: <20191024131343.16194-5-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191024131343.16194-1-chris@chris-wilson.co.uk>
References: <20191024131343.16194-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 5/5] drm/i915: No ce->gem_context for
 kernel_context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2aW5nIHdlYW5lZCBHVCBmcm9tIHJlcXVpcmluZyBjZS0+Z2VtX2NvbnRleHQsIHdlIGNhbiBz
dG9wIHJlZmVyZW5jaW5nCml0IGVudGlyZWx5LiBUaGlzIGFsc28gbWVhbnMgd2Ugbm8gbG9uZ2Vy
IGhhdmUgdG8gY3JlYXRlIHJhbmRvbSBhbmQKdW5uZWNlc3NhcnkgR0VNIGNvbnRleHRzIGZvciBp
bnRlcm5hbCB1c2UuIEdFTSBjb250ZXh0cyBhcmUgbm93IGVudGlyZWx5CmZvciB0cmFja2luZyBH
RU0gY2xpZW50cywgYW5kIGludGVsX2NvbnRleHQgdGhlIGV4ZWN1dGlvbiBlbnZpcm9ubWVudCBv
bgp0aGUgR1BVLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxz
b24uY28udWs+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQu
YyAgIHwgNTMgKysrKysrKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1f
Y29udGV4dC5oICAgfCAgMyAtCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMgICAgfCAgMyArLQogLi4uL2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fY29u
dGV4dC5jIHwgIDIgKy0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRl
eHQuYyB8IDExICsrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jICAg
ICAgIHwgMjYgKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0Lmgg
ICAgICAgfCAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMg
ICAgIHwgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAg
ICB8IDE1ICsrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oICAgICAgICAg
ICB8ICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jICAgICAgICAg
fCAgNiArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYyAgIHwg
IDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyAgICB8IDQ1
ICsrKy0tLS0tLS0KIC4uLi9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfaGVhcnRiZWF0LmMg
ICB8ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyAgICAgICAg
fCA4NSArKysrLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1
bGVyLmMgICAgICAgICAgfCAxNiArKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
ICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJy
b3IuYyAgICAgICAgIHwgIDggKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5j
ICAgICAgICAgICB8IDQ5ICsrKysrLS0tLS0tCiAxOSBmaWxlcyBjaGFuZ2VkLCAxMzIgaW5zZXJ0
aW9ucygrKSwgMjExIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fY29udGV4dC5jCmluZGV4IDVlYTk2MmMxOWYyMi4uMTMyYjM0MWE1MzgxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTE3MCw2ICsxNzAs
MjQgQEAgbG9va3VwX3VzZXJfZW5naW5lKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJ
cmV0dXJuIGk5MTVfZ2VtX2NvbnRleHRfZ2V0X2VuZ2luZShjdHgsIGlkeCk7CiB9CiAKK3N0YXRp
YyB2b2lkIGludGVsX2NvbnRleHRfc2V0X2dlbShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJ
CQkJICBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQoreworCWNlLT5nZW1fY29udGV4dCA9
IGN0eDsKKworCWlmIChjdHgtPnZtKSB7CisJCWk5MTVfdm1fcHV0KGNlLT52bSk7CisJCWNlLT52
bSA9IGk5MTVfdm1fZ2V0KGN0eC0+dm0pOworCX0KKworCWlmIChjdHgtPnRpbWVsaW5lKQorCQlj
ZS0+dGltZWxpbmUgPSBpbnRlbF90aW1lbGluZV9nZXQoY3R4LT50aW1lbGluZSk7CisKKwlpZiAo
Y3R4LT5zY2hlZC5wcmlvcml0eSA+PSBJOTE1X1BSSU9SSVRZX05PUk1BTCAmJgorCSAgICBpbnRl
bF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMoY2UtPmVuZ2luZSkpCisJCV9fc2V0X2JpdChDT05URVhU
X1VTRV9TRU1BUEhPUkVTLCAmY2UtPmZsYWdzKTsKK30KKwogc3RhdGljIHZvaWQgX19mcmVlX2Vu
Z2luZXMoc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXMgKmUsIHVuc2lnbmVkIGludCBjb3VudCkKIHsK
IAl3aGlsZSAoY291bnQtLSkgewpAQCAtMjEyLDEyICsyMzAsMTQgQEAgc3RhdGljIHN0cnVjdCBp
OTE1X2dlbV9lbmdpbmVzICpkZWZhdWx0X2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCkKIAkJR0VNX0JVR19PTihlbmdpbmUtPmxlZ2FjeV9pZHggPj0gSTkxNV9OVU1fRU5HSU5F
Uyk7CiAJCUdFTV9CVUdfT04oZS0+ZW5naW5lc1tlbmdpbmUtPmxlZ2FjeV9pZHhdKTsKIAotCQlj
ZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGN0eCwgZW5naW5lKTsKKwkJY2UgPSBpbnRlbF9jb250
ZXh0X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJX19mcmVlX2VuZ2lu
ZXMoZSwgZS0+bnVtX2VuZ2luZXMgKyAxKTsKIAkJCXJldHVybiBFUlJfQ0FTVChjZSk7CiAJCX0K
IAorCQlpbnRlbF9jb250ZXh0X3NldF9nZW0oY2UsIGN0eCk7CisKIAkJZS0+ZW5naW5lc1tlbmdp
bmUtPmxlZ2FjeV9pZHhdID0gY2U7CiAJCWUtPm51bV9lbmdpbmVzID0gbWF4KGUtPm51bV9lbmdp
bmVzLCBlbmdpbmUtPmxlZ2FjeV9pZHgpOwogCX0KQEAgLTYwNSwyMyArNjI1LDYgQEAgaTkxNV9n
ZW1fY3JlYXRlX2NvbnRleHQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHVuc2lnbmVk
IGludCBmbGFncykKIAlyZXR1cm4gY3R4OwogfQogCi1zdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Ci1pOTE1X2dlbV9jb250ZXh0X2NyZWF0ZV9rZXJuZWwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsIGludCBwcmlvKQotewotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7Ci0KLQlj
dHggPSBpOTE1X2dlbV9jcmVhdGVfY29udGV4dChpOTE1LCAwKTsKLQlpZiAoSVNfRVJSKGN0eCkp
Ci0JCXJldHVybiBjdHg7Ci0KLQlpOTE1X2dlbV9jb250ZXh0X2NsZWFyX2Jhbm5hYmxlKGN0eCk7
Ci0JY3R4LT5zY2hlZC5wcmlvcml0eSA9IEk5MTVfVVNFUl9QUklPUklUWShwcmlvKTsKLQotCUdF
TV9CVUdfT04oIWk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKGN0eCkpOwotCi0JcmV0dXJuIGN0
eDsKLX0KLQogc3RhdGljIHZvaWQgaW5pdF9jb250ZXh0cyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dHMgKmdjKQogewogCXNwaW5fbG9ja19pbml0KCZnYy0+bG9jayk7CkBAIC0xMzk0LDEyICsxMzk3
LDE0IEBAIHNldF9lbmdpbmVzX19sb2FkX2JhbGFuY2Uoc3RydWN0IGk5MTVfdXNlcl9leHRlbnNp
b24gX191c2VyICpiYXNlLCB2b2lkICpkYXRhKQogCQl9CiAJfQogCi0JY2UgPSBpbnRlbF9leGVj
bGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2V0LT5jdHgsIHNpYmxpbmdzLCBuKTsKKwljZSA9IGludGVs
X2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbik7CiAJaWYgKElTX0VSUihjZSkp
IHsKIAkJZXJyID0gUFRSX0VSUihjZSk7CiAJCWdvdG8gb3V0X3NpYmxpbmdzOwogCX0KIAorCWlu
dGVsX2NvbnRleHRfc2V0X2dlbShjZSwgc2V0LT5jdHgpOworCiAJaWYgKGNtcHhjaGcoJnNldC0+
ZW5naW5lcy0+ZW5naW5lc1tpZHhdLCBOVUxMLCBjZSkpIHsKIAkJaW50ZWxfY29udGV4dF9wdXQo
Y2UpOwogCQllcnIgPSAtRUVYSVNUOwpAQCAtMTU2OSwxMiArMTU3NCwxNCBAQCBzZXRfZW5naW5l
cyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCQkJcmV0dXJuIC1FTk9FTlQ7CiAJCX0K
IAotCQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGN0eCwgZW5naW5lKTsKKwkJY2UgPSBpbnRl
bF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAoSVNfRVJSKGNlKSkgewogCQkJX19mcmVl
X2VuZ2luZXMoc2V0LmVuZ2luZXMsIG4pOwogCQkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCQl9CiAK
KwkJaW50ZWxfY29udGV4dF9zZXRfZ2VtKGNlLCBjdHgpOworCiAJCXNldC5lbmdpbmVzLT5lbmdp
bmVzW25dID0gY2U7CiAJfQogCXNldC5lbmdpbmVzLT5udW1fZW5naW5lcyA9IG51bV9lbmdpbmVz
OwpAQCAtMTg2MSwxMyArMTg2OCwxNSBAQCBzdGF0aWMgaW50IGNsb25lX2VuZ2luZXMoc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgKmRzdCwKIAkJICovCiAJCWlmIChpbnRlbF9lbmdpbmVfaXNfdmly
dHVhbChlbmdpbmUpKQogCQkJY2xvbmUtPmVuZ2luZXNbbl0gPQotCQkJCWludGVsX2V4ZWNsaXN0
c19jbG9uZV92aXJ0dWFsKGRzdCwgZW5naW5lKTsKKwkJCQlpbnRlbF9leGVjbGlzdHNfY2xvbmVf
dmlydHVhbChlbmdpbmUpOwogCQllbHNlCi0JCQljbG9uZS0+ZW5naW5lc1tuXSA9IGludGVsX2Nv
bnRleHRfY3JlYXRlKGRzdCwgZW5naW5lKTsKKwkJCWNsb25lLT5lbmdpbmVzW25dID0gaW50ZWxf
Y29udGV4dF9jcmVhdGUoZW5naW5lKTsKIAkJaWYgKElTX0VSUl9PUl9OVUxMKGNsb25lLT5lbmdp
bmVzW25dKSkgewogCQkJX19mcmVlX2VuZ2luZXMoY2xvbmUsIG4pOwogCQkJZ290byBlcnJfdW5s
b2NrOwogCQl9CisKKwkJaW50ZWxfY29udGV4dF9zZXRfZ2VtKGNsb25lLT5lbmdpbmVzW25dLCBk
c3QpOwogCX0KIAljbG9uZS0+bnVtX2VuZ2luZXMgPSBuOwogCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaAppbmRleCAzODQ0YjFiMTQ4NDkuLjc4ZTc3YjUwOWQw
ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5oCkBAIC0x
MjQsOSArMTI0LDYgQEAgaW50IGk5MTVfZ2VtX2NvbnRleHRfc2V0cGFyYW1faW9jdGwoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIGludCBpOTE1X2dlbV9jb250ZXh0X3Jlc2V0
X3N0YXRzX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCQkJICAg
ICAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSk7CiAKLXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICoK
LWk5MTVfZ2VtX2NvbnRleHRfY3JlYXRlX2tlcm5lbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSwgaW50IHByaW8pOwotCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0
ICoKIGk5MTVfZ2VtX2NvbnRleHRfZ2V0KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCiB7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZl
ci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRl
eCA2ZGM4NmMxMjllZWUuLjRmNmI4NDdlYTAxMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCkBAIC0xMjYxLDggKzEyNjEsNyBAQCBzdGF0aWMg
dTMyICpyZWxvY19ncHUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCQkgKiBtZW1vcnkg
bG9jYXRpb24uCiAJCQkgKi8KIAkJCWlmIChjYWNoZS0+Z2VuID49IDEyKQotCQkJCWNlID0gaW50
ZWxfY29udGV4dF9jcmVhdGUoZWItPmNvbnRleHQtPmdlbV9jb250ZXh0LAotCQkJCQkJCSAgZWIt
PmVuZ2luZSk7CisJCQkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlYi0+ZW5naW5lKTsKIAkJ
CWVsc2UKIAkJCQljZSA9IGludGVsX2NvbnRleHRfZ2V0KGViLT5jb250ZXh0KTsKIAkJCWlmIChJ
U19FUlIoY2UpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0
cy9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3Rz
L2k5MTVfZ2VtX2NvbnRleHQuYwppbmRleCA4ZjcyZjE3M2RiMDMuLmVhY2U4YmVlOTYwNiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250
ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9j
b250ZXh0LmMKQEAgLTI4OCw3ICsyODgsNyBAQCBzdGF0aWMgaW50IGxpdmVfcGFyYWxsZWxfc3dp
dGNoKHZvaWQgKmFyZykKIAkJCWlmICghZGF0YVttXS5jZVswXSkKIAkJCQljb250aW51ZTsKIAot
CQkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShjdHgsIGRhdGFbbV0uY2VbMF0tPmVuZ2luZSk7
CisJCQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGRhdGFbbV0uY2VbMF0tPmVuZ2luZSk7CiAJ
CQlpZiAoSVNfRVJSKGNlKSkKIAkJCQlnb3RvIG91dDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19jb250ZXh0LmMKaW5kZXggNzRkZGQ2ODJjOWNkLi45
MTc5ZWQxNjhkZjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVz
dHMvbW9ja19jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0
cy9tb2NrX2NvbnRleHQuYwpAQCAtOTUsNyArOTUsMTYgQEAgbGl2ZV9jb250ZXh0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpCiBzdHJ1Y3QgaTkx
NV9nZW1fY29udGV4dCAqCiBrZXJuZWxfY29udGV4dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKIHsKLQlyZXR1cm4gaTkxNV9nZW1fY29udGV4dF9jcmVhdGVfa2VybmVsKGk5MTUsIEk5
MTVfUFJJT1JJVFlfTk9STUFMKTsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OworCisJ
Y3R4ID0gaTkxNV9nZW1fY3JlYXRlX2NvbnRleHQoaTkxNSwgMCk7CisJaWYgKElTX0VSUihjdHgp
KQorCQlyZXR1cm4gY3R4OworCisJR0VNX0JVR19PTighaTkxNV9nZW1fY29udGV4dF9pc19rZXJu
ZWwoY3R4KSk7CisJaTkxNV9nZW1fY29udGV4dF9jbGVhcl9iYW5uYWJsZShjdHgpOworCisJcmV0
dXJuIGN0eDsKIH0KIAogdm9pZCBrZXJuZWxfY29udGV4dF9jbG9zZShzdHJ1Y3QgaTkxNV9nZW1f
Y29udGV4dCAqY3R4KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Y29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCmluZGV4
IDdiMDRhM2NhMTliZC4uNDVhNzdlZjFhZGIzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dC5jCkBAIC0zMSw4ICszMSw3IEBAIHZvaWQgaW50ZWxfY29udGV4dF9mcmVlKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIH0KIAogc3RydWN0IGludGVsX2NvbnRleHQgKgotaW50
ZWxfY29udGV4dF9jcmVhdGUoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKLQkJICAgICBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitpbnRlbF9jb250ZXh0X2NyZWF0ZShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmNl
OwogCkBAIC00MCw3ICszOSw3IEBAIGludGVsX2NvbnRleHRfY3JlYXRlKHN0cnVjdCBpOTE1X2dl
bV9jb250ZXh0ICpjdHgsCiAJaWYgKCFjZSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAK
LQlpbnRlbF9jb250ZXh0X2luaXQoY2UsIGN0eCwgZW5naW5lKTsKKwlpbnRlbF9jb250ZXh0X2lu
aXQoY2UsIGVuZ2luZSk7CiAJcmV0dXJuIGNlOwogfQogCkBAIC0xOTUsNyArMTk0LDcgQEAgaW50
IGludGVsX2NvbnRleHRfYWN0aXZlX2FjcXVpcmUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
CQlyZXR1cm4gZXJyOwogCiAJLyogUHJlYWxsb2NhdGUgdHJhY2tpbmcgbm9kZXMgKi8KLQlpZiAo
IWk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKGNlLT5nZW1fY29udGV4dCkpIHsKKwlpZiAoY2Ut
PmdlbV9jb250ZXh0KSB7CiAJCWVyciA9IGk5MTVfYWN0aXZlX2FjcXVpcmVfcHJlYWxsb2NhdGVf
YmFycmllcigmY2UtPmFjdGl2ZSwKIAkJCQkJCQkgICAgICBjZS0+ZW5naW5lKTsKIAkJaWYgKGVy
cikgewpAQCAtMjE2LDM0ICsyMTUsMTkgQEAgdm9pZCBpbnRlbF9jb250ZXh0X2FjdGl2ZV9yZWxl
YXNlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAogdm9pZAogaW50ZWxfY29udGV4dF9pbml0
KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKLQkJICAgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCwKIAkJICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewotCXN0cnVjdCBp
OTE1X2FkZHJlc3Nfc3BhY2UgKnZtOwotCiAJR0VNX0JVR19PTighZW5naW5lLT5jb3BzKTsKIAog
CWtyZWZfaW5pdCgmY2UtPnJlZik7CiAKLQljZS0+Z2VtX2NvbnRleHQgPSBjdHg7Ci0JcmN1X3Jl
YWRfbG9jaygpOwotCXZtID0gcmN1X2RlcmVmZXJlbmNlKGN0eC0+dm0pOwotCWlmICh2bSkKLQkJ
Y2UtPnZtID0gaTkxNV92bV9nZXQodm0pOwotCWVsc2UKLQkJY2UtPnZtID0gaTkxNV92bV9nZXQo
JmVuZ2luZS0+Z3QtPmdndHQtPnZtKTsKLQlyY3VfcmVhZF91bmxvY2soKTsKLQlpZiAoY3R4LT50
aW1lbGluZSkKLQkJY2UtPnRpbWVsaW5lID0gaW50ZWxfdGltZWxpbmVfZ2V0KGN0eC0+dGltZWxp
bmUpOwotCWlmIChjdHgtPnNjaGVkLnByaW9yaXR5ID49IEk5MTVfUFJJT1JJVFlfTk9STUFMICYm
Ci0JICAgIGludGVsX2VuZ2luZV9oYXNfc2VtYXBob3JlcyhlbmdpbmUpKQotCQlfX3NldF9iaXQo
Q09OVEVYVF9VU0VfU0VNQVBIT1JFUywgJmNlLT5mbGFncyk7Ci0KIAljZS0+ZW5naW5lID0gZW5n
aW5lOwogCWNlLT5vcHMgPSBlbmdpbmUtPmNvcHM7CiAJY2UtPnNzZXUgPSBlbmdpbmUtPnNzZXU7
CiAJY2UtPnJpbmcgPSBfX2ludGVsX2NvbnRleHRfcmluZ19zaXplKFNaXzE2Syk7CiAKKwljZS0+
dm0gPSBpOTE1X3ZtX2dldCgmZW5naW5lLT5ndC0+Z2d0dC0+dm0pOworCiAJSU5JVF9MSVNUX0hF
QUQoJmNlLT5zaWduYWxfbGluayk7CiAJSU5JVF9MSVNUX0hFQUQoJmNlLT5zaWduYWxzKTsKIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCmluZGV4IGQ3YjY2N2EyNmUwOC4u
MTViYzQ2ZTFiMzA4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9j
b250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCkBA
IC0xOCwxMyArMTgsMTEgQEAKICNpbmNsdWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgogCiB2
b2lkIGludGVsX2NvbnRleHRfaW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCi0JCQlzdHJ1
Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCQkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKTsKIHZvaWQgaW50ZWxfY29udGV4dF9maW5pKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7
CiAKIHN0cnVjdCBpbnRlbF9jb250ZXh0ICoKLWludGVsX2NvbnRleHRfY3JlYXRlKHN0cnVjdCBp
OTE1X2dlbV9jb250ZXh0ICpjdHgsCi0JCSAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKTsKK2ludGVsX2NvbnRleHRfY3JlYXRlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSk7CiAKIHZvaWQgaW50ZWxfY29udGV4dF9mcmVlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKaW5kZXggZGI5NzM2
Y2IwNmU0Li4yMzFiZTY4ODgzYTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV9jcy5jCkBAIC03NTQsNyArNzU0LDcgQEAgY3JlYXRlX2tlcm5lbF9jb250ZXh0KHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CiAJ
aW50IGVycjsKIAotCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoTlVMTCwgZW5naW5lKTsKKwlj
ZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7CiAJaWYgKElTX0VSUihjZSkpCiAJCXJl
dHVybiBjZTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJj
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwppbmRleCA5OGQyMDY0NTk3
ZTEuLjg5ZmExYTYxZWNmMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTQz
MTUsOCArNDMxNSw3IEBAIHZpcnR1YWxfYm9uZF9leGVjdXRlKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxLCBzdHJ1Y3QgZG1hX2ZlbmNlICpzaWduYWwpCiB9CiAKIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICoKLWludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqY3R4LAotCQkJICAgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipzaWJsaW5ncywKK2lu
dGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2li
bGluZ3MsCiAJCQkgICAgICAgdW5zaWduZWQgaW50IGNvdW50KQogewogCXN0cnVjdCB2aXJ0dWFs
X2VuZ2luZSAqdmU7CkBAIC00MzI3LDEzICs0MzI2LDEzIEBAIGludGVsX2V4ZWNsaXN0c19jcmVh
dGVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCQlyZXR1cm4gRVJSX1BU
UigtRUlOVkFMKTsKIAogCWlmIChjb3VudCA9PSAxKQotCQlyZXR1cm4gaW50ZWxfY29udGV4dF9j
cmVhdGUoY3R4LCBzaWJsaW5nc1swXSk7CisJCXJldHVybiBpbnRlbF9jb250ZXh0X2NyZWF0ZShz
aWJsaW5nc1swXSk7CiAKIAl2ZSA9IGt6YWxsb2Moc3RydWN0X3NpemUodmUsIHNpYmxpbmdzLCBj
b3VudCksIEdGUF9LRVJORUwpOwogCWlmICghdmUpCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OwogCi0JdmUtPmJhc2UuaTkxNSA9IGN0eC0+aTkxNTsKKwl2ZS0+YmFzZS5pOTE1ID0gc2libGlu
Z3NbMF0tPmk5MTU7CiAJdmUtPmJhc2UuZ3QgPSBzaWJsaW5nc1swXS0+Z3Q7CiAJdmUtPmJhc2Uu
dW5jb3JlID0gc2libGluZ3NbMF0tPnVuY29yZTsKIAl2ZS0+YmFzZS5pZCA9IC0xOwpAQCAtNDM3
Niw3ICs0Mzc1LDcgQEAgaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHN0cnVjdCBpOTE1
X2dlbV9jb250ZXh0ICpjdHgsCiAJCSAgICAgdmlydHVhbF9zdWJtaXNzaW9uX3Rhc2tsZXQsCiAJ
CSAgICAgKHVuc2lnbmVkIGxvbmcpdmUpOwogCi0JaW50ZWxfY29udGV4dF9pbml0KCZ2ZS0+Y29u
dGV4dCwgY3R4LCAmdmUtPmJhc2UpOworCWludGVsX2NvbnRleHRfaW5pdCgmdmUtPmNvbnRleHQs
ICZ2ZS0+YmFzZSk7CiAKIAlmb3IgKG4gPSAwOyBuIDwgY291bnQ7IG4rKykgewogCQlzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICpzaWJsaW5nID0gc2libGluZ3Nbbl07CkBAIC00NDU3LDE0ICs0NDU2
LDEyIEBAIGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29u
dGV4dCAqY3R4LAogfQogCiBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCi1pbnRlbF9leGVjbGlzdHNf
Y2xvbmVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAotCQkJICAgICAgc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqc3JjKQoraW50ZWxfZXhlY2xpc3RzX2Nsb25lX3ZpcnR1YWwo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqc3JjKQogewogCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAq
c2UgPSB0b192aXJ0dWFsX2VuZ2luZShzcmMpOwogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpkc3Q7
CiAKLQlkc3QgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoY3R4LAotCQkJCQkgICAg
IHNlLT5zaWJsaW5ncywKKwlkc3QgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2Ut
PnNpYmxpbmdzLAogCQkJCQkgICAgIHNlLT5udW1fc2libGluZ3MpOwogCWlmIChJU19FUlIoZHN0
KSkKIAkJcmV0dXJuIGRzdDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2xyYy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKaW5kZXggOTlk
YzU3NmE0ZTI1Li41NjQ4NTE1MGRiYzMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5o
CkBAIC0xMjksMTMgKzEyOSwxMSBAQCB2b2lkIGludGVsX2V4ZWNsaXN0c19zaG93X3JlcXVlc3Rz
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCQkgICB1bnNpZ25lZCBpbnQgbWF4
KTsKIAogc3RydWN0IGludGVsX2NvbnRleHQgKgotaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0
dWFsKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCi0JCQkgICAgICAgc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqKnNpYmxpbmdzLAoraW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipzaWJsaW5ncywKIAkJCSAgICAgICB1bnNpZ25lZCBpbnQg
Y291bnQpOwogCiBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCi1pbnRlbF9leGVjbGlzdHNfY2xvbmVf
dmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAotCQkJICAgICAgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqc3JjKTsKK2ludGVsX2V4ZWNsaXN0c19jbG9uZV92aXJ0dWFsKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKnNyYyk7CiAKIGludCBpbnRlbF92aXJ0dWFsX2VuZ2luZV9hdHRh
Y2hfYm9uZChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJICAgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICptYXN0ZXIsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmVzZXQuYwppbmRleCBiNGMwYWQ0YTYwODEuLjk4ZTdiYmE1OTc5ZSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC04Niw2ICs4Niw5IEBAIHN0YXRpYyBib29sIG1hcmtf
Z3VpbHR5KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCWJvb2wgYmFubmVkOwogCWludCBpOwog
CisJaWYgKCFjdHgpCisJCXJldHVybiBmYWxzZTsKKwogCWF0b21pY19pbmMoJmN0eC0+Z3VpbHR5
X2NvdW50KTsKIAogCS8qIENvb2wgY29udGV4dHMgYXJlIHRvbyBjb29sIHRvIGJlIGJhbm5lZCEg
KFVzZWQgZm9yIHJlc2V0IHRlc3RpbmcuKSAqLwpAQCAtMTE1LDcgKzExOCw4IEBAIHN0YXRpYyBi
b29sIG1hcmtfZ3VpbHR5KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCiBzdGF0aWMgdm9pZCBt
YXJrX2lubm9jZW50KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCWF0b21pY19pbmMoJnJx
LT5jb250ZXh0LT5nZW1fY29udGV4dC0+YWN0aXZlX2NvdW50KTsKKwlpZiAocnEtPmNvbnRleHQt
PmdlbV9jb250ZXh0KQorCQlhdG9taWNfaW5jKCZycS0+Y29udGV4dC0+Z2VtX2NvbnRleHQtPmFj
dGl2ZV9jb3VudCk7CiB9CiAKIHZvaWQgX19pOTE1X3JlcXVlc3RfcmVzZXQoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9yaW5nX3N1Ym1pc3Npb24uYwppbmRleCAxYzJmM2MzYTg4NDAuLjZkZGZlOGE4NmRiZSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9u
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9uLmMK
QEAgLTE1NTgsNyArMTU1OCw3IEBAIHN0YXRpYyBpbnQgcmVtYXBfbDMoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiAJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJxLT5jb250ZXh0LT5n
ZW1fY29udGV4dDsKIAlpbnQgaSwgZXJyOwogCi0JaWYgKCFjdHgtPnJlbWFwX3NsaWNlKQorCWlm
ICghY3R4IHx8ICFjdHgtPnJlbWFwX3NsaWNlKQogCQlyZXR1cm4gMDsKIAogCWZvciAoaSA9IDA7
IGkgPCBNQVhfTDNfU0xJQ0VTOyBpKyspIHsKQEAgLTE2MDEsNyArMTYwMSw3IEBAIHN0YXRpYyBp
bnQgc3dpdGNoX2NvbnRleHQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJCSAqIGlzIHB1cmVs
eSB1c2VkIGZvciBmbHVzaGluZyB1c2VyIGNvbnRleHRzLgogCQkgKi8KIAkJaHdfZmxhZ3MgPSAw
OwotCQlpZiAoaTkxNV9nZW1fY29udGV4dF9pc19rZXJuZWwocnEtPmNvbnRleHQtPmdlbV9jb250
ZXh0KSkKKwkJaWYgKCFycS0+Y29udGV4dC0+Z2VtX2NvbnRleHQpCiAJCQlod19mbGFncyA9IE1J
X1JFU1RPUkVfSU5ISUJJVDsKIAogCQlyZXQgPSBtaV9zZXRfY29udGV4dChycSwgaHdfZmxhZ3Mp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29udGV4dC5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29udGV4dC5jCmluZGV4IGY2M2Ey
NmEzZTYyMC4uZmY2N2JjOTA5NjBlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9zZWxmdGVzdF9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRl
c3RfY29udGV4dC5jCkBAIC02NywxNSArNjcsMTQgQEAgc3RhdGljIGludCBjb250ZXh0X3N5bmMo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCXJldHVybiBlcnI7CiB9CiAKLXN0YXRpYyBpbnQg
X19saXZlX2NvbnRleHRfc2l6ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCi0JCQkg
ICAgICAgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmZpeG1lKQorc3RhdGljIGludCBfX2xpdmVf
Y29udGV4dF9zaXplKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2U7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAJdm9pZCAqdmFk
ZHI7CiAJaW50IGVycjsKIAotCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZml4bWUsIGVuZ2lu
ZSk7CisJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCWlmIChJU19FUlIoY2Up
KQogCQlyZXR1cm4gUFRSX0VSUihjZSk7CiAKQEAgLTE0Niw3ICsxNDUsNiBAQCBzdGF0aWMgaW50
IGxpdmVfY29udGV4dF9zaXplKHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0g
YXJnOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKLQlzdHJ1Y3QgaTkxNV9nZW1f
Y29udGV4dCAqZml4bWU7CiAJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CiAJaW50IGVyciA9IDA7
CiAKQEAgLTE1NSwxMCArMTUzLDYgQEAgc3RhdGljIGludCBsaXZlX2NvbnRleHRfc2l6ZSh2b2lk
ICphcmcpCiAJICogSFcgdHJpZXMgdG8gd3JpdGUgcGFzdCB0aGUgZW5kIG9mIG9uZS4KIAkgKi8K
IAotCWZpeG1lID0ga2VybmVsX2NvbnRleHQoZ3QtPmk5MTUpOwotCWlmIChJU19FUlIoZml4bWUp
KQotCQlyZXR1cm4gUFRSX0VSUihmaXhtZSk7Ci0KIAlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBn
dCwgaWQpIHsKIAkJc3RydWN0IHsKIAkJCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpzdGF0
ZTsKQEAgLTE4Myw3ICsxNzcsNyBAQCBzdGF0aWMgaW50IGxpdmVfY29udGV4dF9zaXplKHZvaWQg
KmFyZykKIAkJLyogT3ZlcmxhcHMgd2l0aCB0aGUgZXhlY2xpc3RzIHJlZHpvbmUgKi8KIAkJZW5n
aW5lLT5jb250ZXh0X3NpemUgKz0gSTkxNV9HVFRfUEFHRV9TSVpFOwogCi0JCWVyciA9IF9fbGl2
ZV9jb250ZXh0X3NpemUoZW5naW5lLCBmaXhtZSk7CisJCWVyciA9IF9fbGl2ZV9jb250ZXh0X3Np
emUoZW5naW5lKTsKIAogCQllbmdpbmUtPmNvbnRleHRfc2l6ZSAtPSBJOTE1X0dUVF9QQUdFX1NJ
WkU7CiAKQEAgLTE5NiwxMiArMTkwLDEwIEBAIHN0YXRpYyBpbnQgbGl2ZV9jb250ZXh0X3NpemUo
dm9pZCAqYXJnKQogCQkJYnJlYWs7CiAJfQogCi0Ja2VybmVsX2NvbnRleHRfY2xvc2UoZml4bWUp
OwogCXJldHVybiBlcnI7CiB9CiAKLXN0YXRpYyBpbnQgX19saXZlX2FjdGl2ZV9jb250ZXh0KHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKLQkJCQkgc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmZpeG1lKQorc3RhdGljIGludCBfX2xpdmVfYWN0aXZlX2NvbnRleHQoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAlpbnQg
cGFzczsKQEAgLTIyNiw3ICsyMTgsNyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9hY3RpdmVfY29udGV4
dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCXJldHVybiAtRUlOVkFMOwogCX0K
IAotCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZml4bWUsIGVuZ2luZSk7CisJY2UgPSBpbnRl
bF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCWlmIChJU19FUlIoY2UpKQogCQlyZXR1cm4gUFRS
X0VSUihjZSk7CiAKQEAgLTI5MCw3ICsyODIsNiBAQCBzdGF0aWMgaW50IGxpdmVfYWN0aXZlX2Nv
bnRleHQodm9pZCAqYXJnKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CiAJc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpmaXht
ZTsKIAllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKIAlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGU7CiAJ
aW50IGVyciA9IDA7CkBAIC0yOTksMTQgKzI5MCw4IEBAIHN0YXRpYyBpbnQgbGl2ZV9hY3RpdmVf
Y29udGV4dCh2b2lkICphcmcpCiAJaWYgKElTX0VSUihmaWxlKSkKIAkJcmV0dXJuIFBUUl9FUlIo
ZmlsZSk7CiAKLQlmaXhtZSA9IGxpdmVfY29udGV4dChndC0+aTkxNSwgZmlsZSk7Ci0JaWYgKElT
X0VSUihmaXhtZSkpIHsKLQkJZXJyID0gUFRSX0VSUihmaXhtZSk7Ci0JCWdvdG8gb3V0X2ZpbGU7
Ci0JfQotCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7Ci0JCWVyciA9IF9fbGl2
ZV9hY3RpdmVfY29udGV4dChlbmdpbmUsIGZpeG1lKTsKKwkJZXJyID0gX19saXZlX2FjdGl2ZV9j
b250ZXh0KGVuZ2luZSk7CiAJCWlmIChlcnIpCiAJCQlicmVhazsKIApAQCAtMzE1LDcgKzMwMCw2
IEBAIHN0YXRpYyBpbnQgbGl2ZV9hY3RpdmVfY29udGV4dCh2b2lkICphcmcpCiAJCQlicmVhazsK
IAl9CiAKLW91dF9maWxlOgogCW1vY2tfZmlsZV9mcmVlKGd0LT5pOTE1LCBmaWxlKTsKIAlyZXR1
cm4gZXJyOwogfQpAQCAtMzQ4LDggKzMzMiw3IEBAIHN0YXRpYyBpbnQgX19yZW1vdGVfc3luYyhz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpyZW1vdGUpCiAJ
cmV0dXJuIGVycjsKIH0KIAotc3RhdGljIGludCBfX2xpdmVfcmVtb3RlX2NvbnRleHQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAotCQkJCSBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Zml4bWUpCitzdGF0aWMgaW50IF9fbGl2ZV9yZW1vdGVfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmxvY2FsLCAqcmVtb3Rl
OwogCWludCBwYXNzOwpAQCAtMzYzLDExICszNDYsMTEgQEAgc3RhdGljIGludCBfX2xpdmVfcmVt
b3RlX2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCSAqIGNsb2JiZXIg
dGhlIGlkbGUtYmFycmllci4KIAkgKi8KIAotCXJlbW90ZSA9IGludGVsX2NvbnRleHRfY3JlYXRl
KGZpeG1lLCBlbmdpbmUpOworCXJlbW90ZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7
CiAJaWYgKElTX0VSUihyZW1vdGUpKQogCQlyZXR1cm4gUFRSX0VSUihyZW1vdGUpOwogCi0JbG9j
YWwgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShmaXhtZSwgZW5naW5lKTsKKwlsb2NhbCA9IGludGVs
X2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7CiAJaWYgKElTX0VSUihsb2NhbCkpIHsKIAkJZXJyID0g
UFRSX0VSUihsb2NhbCk7CiAJCWdvdG8gZXJyX3JlbW90ZTsKQEAgLTQwMCw3ICszODMsNiBAQCBz
dGF0aWMgaW50IGxpdmVfcmVtb3RlX2NvbnRleHQodm9pZCAqYXJnKQogewogCXN0cnVjdCBpbnRl
bF9ndCAqZ3QgPSBhcmc7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwotCXN0cnVj
dCBpOTE1X2dlbV9jb250ZXh0ICpmaXhtZTsKIAllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKIAlz
dHJ1Y3QgZHJtX2ZpbGUgKmZpbGU7CiAJaW50IGVyciA9IDA7CkBAIC00MDksMTQgKzM5MSw4IEBA
IHN0YXRpYyBpbnQgbGl2ZV9yZW1vdGVfY29udGV4dCh2b2lkICphcmcpCiAJaWYgKElTX0VSUihm
aWxlKSkKIAkJcmV0dXJuIFBUUl9FUlIoZmlsZSk7CiAKLQlmaXhtZSA9IGxpdmVfY29udGV4dChn
dC0+aTkxNSwgZmlsZSk7Ci0JaWYgKElTX0VSUihmaXhtZSkpIHsKLQkJZXJyID0gUFRSX0VSUihm
aXhtZSk7Ci0JCWdvdG8gb3V0X2ZpbGU7Ci0JfQotCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwg
Z3QsIGlkKSB7Ci0JCWVyciA9IF9fbGl2ZV9yZW1vdGVfY29udGV4dChlbmdpbmUsIGZpeG1lKTsK
KwkJZXJyID0gX19saXZlX3JlbW90ZV9jb250ZXh0KGVuZ2luZSk7CiAJCWlmIChlcnIpCiAJCQli
cmVhazsKIApAQCAtNDI1LDcgKzQwMSw2IEBAIHN0YXRpYyBpbnQgbGl2ZV9yZW1vdGVfY29udGV4
dCh2b2lkICphcmcpCiAJCQlicmVhazsKIAl9CiAKLW91dF9maWxlOgogCW1vY2tfZmlsZV9mcmVl
KGd0LT5pOTE1LCBmaWxlKTsKIAlyZXR1cm4gZXJyOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5jCmluZGV4IDc2OGYwMzJlNjU3
OC4uY2QzNmY0MWIwNjAwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxm
dGVzdF9lbmdpbmVfaGVhcnRiZWF0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfZW5naW5lX2hlYXJ0YmVhdC5jCkBAIC0xNjksOCArMTY5LDcgQEAgc3RhdGljIGludCBf
X2xpdmVfaGVhcnRiZWF0X2Zhc3Qoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWlu
dCBlcnI7CiAJaW50IGk7CiAKLQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZS0+a2Vy
bmVsX2NvbnRleHQtPmdlbV9jb250ZXh0LAotCQkJCSAgZW5naW5lKTsKKwljZSA9IGludGVsX2Nv
bnRleHRfY3JlYXRlKGVuZ2luZSk7CiAJaWYgKElTX0VSUihjZSkpCiAJCXJldHVybiBQVFJfRVJS
KGNlKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJj
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwppbmRleCA0ODkxZjAy
NDRmNjkuLmMwZWZhMDhhZWExYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
c2VsZnRlc3RfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJj
LmMKQEAgLTE0NCw3ICsxNDQsNyBAQCBzdGF0aWMgaW50IGxpdmVfdW5saXRlX3Jlc3RvcmUoc3Ry
dWN0IGludGVsX2d0ICpndCwgaW50IHByaW8pCiAJCWZvciAobiA9IDA7IG4gPCBBUlJBWV9TSVpF
KGNlKTsgbisrKSB7CiAJCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqdG1wOwogCi0JCQl0bXAgPSBp
bnRlbF9jb250ZXh0X2NyZWF0ZShjdHgsIGVuZ2luZSk7CisJCQl0bXAgPSBpbnRlbF9jb250ZXh0
X2NyZWF0ZShlbmdpbmUpOwogCQkJaWYgKElTX0VSUih0bXApKSB7CiAJCQkJZXJyID0gUFRSX0VS
Uih0bXApOwogCQkJCWdvdG8gZXJyX2NlOwpAQCAtMjM4MSwyNyArMjM4MSwxNyBAQCBzdGF0aWMg
aW50IG5vcF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogewogCUlHVF9USU1F
T1VUKGVuZF90aW1lKTsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0WzE2XTsKLQlzdHJ1
Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4WzE2XTsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqdmVb
MTZdOwogCXVuc2lnbmVkIGxvbmcgbiwgcHJpbWUsIG5jOwogCXN0cnVjdCBpZ3RfbGl2ZV90ZXN0
IHQ7CiAJa3RpbWVfdCB0aW1lc1syXSA9IHt9OwogCWludCBlcnI7CiAKLQlHRU1fQlVHX09OKCFu
Y3R4IHx8IG5jdHggPiBBUlJBWV9TSVpFKGN0eCkpOworCUdFTV9CVUdfT04oIW5jdHggfHwgbmN0
eCA+IEFSUkFZX1NJWkUodmUpKTsKIAogCWZvciAobiA9IDA7IG4gPCBuY3R4OyBuKyspIHsKLQkJ
Y3R4W25dID0ga2VybmVsX2NvbnRleHQoZ3QtPmk5MTUpOwotCQlpZiAoIWN0eFtuXSkgewotCQkJ
ZXJyID0gLUVOT01FTTsKLQkJCW5jdHggPSBuOwotCQkJZ290byBvdXQ7Ci0JCX0KLQotCQl2ZVtu
XSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChjdHhbbl0sCi0JCQkJCQkgICAgICAg
c2libGluZ3MsIG5zaWJsaW5nKTsKKwkJdmVbbl0gPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3Zp
cnR1YWwoc2libGluZ3MsIG5zaWJsaW5nKTsKIAkJaWYgKElTX0VSUih2ZVtuXSkpIHsKLQkJCWtl
cm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuXSk7CiAJCQllcnIgPSBQVFJfRVJSKHZlW25dKTsKIAkJ
CW5jdHggPSBuOwogCQkJZ290byBvdXQ7CkBAIC0yNDEwLDcgKzI0MDAsNiBAQCBzdGF0aWMgaW50
IG5vcF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQllcnIgPSBpbnRlbF9j
b250ZXh0X3Bpbih2ZVtuXSk7CiAJCWlmIChlcnIpIHsKIAkJCWludGVsX2NvbnRleHRfcHV0KHZl
W25dKTsKLQkJCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuXSk7CiAJCQluY3R4ID0gbjsKIAkJ
CWdvdG8gb3V0OwogCQl9CkBAIC0yNDkxLDcgKzI0ODAsNiBAQCBzdGF0aWMgaW50IG5vcF92aXJ0
dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCWZvciAobmMgPSAwOyBuYyA8IG5jdHg7
IG5jKyspIHsKIAkJaW50ZWxfY29udGV4dF91bnBpbih2ZVtuY10pOwogCQlpbnRlbF9jb250ZXh0
X3B1dCh2ZVtuY10pOwotCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbmNdKTsKIAl9CiAJcmV0
dXJuIGVycjsKIH0KQEAgLTI1NTAsNyArMjUzOCw2IEBAIHN0YXRpYyBpbnQgbWFza192aXJ0dWFs
X2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQkJICAgICAgIHVuc2lnbmVkIGludCBuc2li
bGluZykKIHsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0W01BWF9FTkdJTkVfSU5TVEFO
Q0UgKyAxXTsKLQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OwogCXN0cnVjdCBpbnRlbF9j
b250ZXh0ICp2ZTsKIAlzdHJ1Y3QgaWd0X2xpdmVfdGVzdCB0OwogCXVuc2lnbmVkIGludCBuOwpA
QCAtMjU2MSwxMSArMjU0OCw3IEBAIHN0YXRpYyBpbnQgbWFza192aXJ0dWFsX2VuZ2luZShzdHJ1
Y3QgaW50ZWxfZ3QgKmd0LAogCSAqIHJlc3RyaWN0IGl0IHRvIG91ciBkZXNpcmVkIGVuZ2luZSB3
aXRoaW4gdGhlIHZpcnR1YWwgZW5naW5lLgogCSAqLwogCi0JY3R4ID0ga2VybmVsX2NvbnRleHQo
Z3QtPmk5MTUpOwotCWlmICghY3R4KQotCQlyZXR1cm4gLUVOT01FTTsKLQotCXZlID0gaW50ZWxf
ZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKGN0eCwgc2libGluZ3MsIG5zaWJsaW5nKTsKKwl2ZSA9
IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOwogCWlm
IChJU19FUlIodmUpKSB7CiAJCWVyciA9IFBUUl9FUlIodmUpOwogCQlnb3RvIG91dF9jbG9zZTsK
QEAgLTI2MzMsNyArMjYxNiw2IEBAIHN0YXRpYyBpbnQgbWFza192aXJ0dWFsX2VuZ2luZShzdHJ1
Y3QgaW50ZWxfZ3QgKmd0LAogb3V0X3B1dDoKIAlpbnRlbF9jb250ZXh0X3B1dCh2ZSk7CiBvdXRf
Y2xvc2U6Ci0Ja2VybmVsX2NvbnRleHRfY2xvc2UoY3R4KTsKIAlyZXR1cm4gZXJyOwogfQogCkBA
IC0yNjczLDcgKzI2NTUsNiBAQCBzdGF0aWMgaW50IHByZXNlcnZlZF92aXJ0dWFsX2VuZ2luZShz
dHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCQkJCSAgICB1bnNpZ25lZCBpbnQgbnNpYmxpbmcpCiB7CiAJ
c3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdCA9IE5VTEw7Ci0Jc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmN0eDsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqdmU7CiAJc3RydWN0IGk5MTVfdm1hICpz
Y3JhdGNoOwogCXN0cnVjdCBpZ3RfbGl2ZV90ZXN0IHQ7CkBAIC0yNjgxLDE3ICsyNjYyLDExIEBA
IHN0YXRpYyBpbnQgcHJlc2VydmVkX3ZpcnR1YWxfZW5naW5lKHN0cnVjdCBpbnRlbF9ndCAqZ3Qs
CiAJaW50IGVyciA9IDA7CiAJdTMyICpjczsKIAotCWN0eCA9IGtlcm5lbF9jb250ZXh0KGd0LT5p
OTE1KTsKLQlpZiAoIWN0eCkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KIAlzY3JhdGNoID0gY3JlYXRl
X3NjcmF0Y2goc2libGluZ3NbMF0tPmd0KTsKLQlpZiAoSVNfRVJSKHNjcmF0Y2gpKSB7Ci0JCWVy
ciA9IFBUUl9FUlIoc2NyYXRjaCk7Ci0JCWdvdG8gb3V0X2Nsb3NlOwotCX0KKwlpZiAoSVNfRVJS
KHNjcmF0Y2gpKQorCQlyZXR1cm4gUFRSX0VSUihzY3JhdGNoKTsKIAotCXZlID0gaW50ZWxfZXhl
Y2xpc3RzX2NyZWF0ZV92aXJ0dWFsKGN0eCwgc2libGluZ3MsIG5zaWJsaW5nKTsKKwl2ZSA9IGlu
dGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzaWJsaW5ncywgbnNpYmxpbmcpOwogCWlmIChJ
U19FUlIodmUpKSB7CiAJCWVyciA9IFBUUl9FUlIodmUpOwogCQlnb3RvIG91dF9zY3JhdGNoOwpA
QCAtMjc3NCw4ICsyNzQ5LDYgQEAgc3RhdGljIGludCBwcmVzZXJ2ZWRfdmlydHVhbF9lbmdpbmUo
c3RydWN0IGludGVsX2d0ICpndCwKIAlpbnRlbF9jb250ZXh0X3B1dCh2ZSk7CiBvdXRfc2NyYXRj
aDoKIAlpOTE1X3ZtYV91bnBpbl9hbmRfcmVsZWFzZSgmc2NyYXRjaCwgMCk7Ci1vdXRfY2xvc2U6
Ci0Ja2VybmVsX2NvbnRleHRfY2xvc2UoY3R4KTsKIAlyZXR1cm4gZXJyOwogfQogCkBAIC0yODY5
LDkgKzI4NDIsNyBAQCBzdGF0aWMgaW50IGJvbmRfdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVs
X2d0ICpndCwKIAkJZm9yIChuID0gMDsgbiA8IG5zaWJsaW5nOyBuKyspIHsKIAkJCXN0cnVjdCBp
bnRlbF9jb250ZXh0ICp2ZTsKIAotCQkJdmUgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1
YWwoY3R4LAotCQkJCQkJCSAgICBzaWJsaW5ncywKLQkJCQkJCQkgICAgbnNpYmxpbmcpOworCQkJ
dmUgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc2libGluZ3MsIG5zaWJsaW5nKTsK
IAkJCWlmIChJU19FUlIodmUpKSB7CiAJCQkJZXJyID0gUFRSX0VSUih2ZSk7CiAJCQkJb25zdGFj
a19mZW5jZV9maW5pKCZmZW5jZSk7CkBAIC0zMTY1LDggKzMxMzYsNyBAQCBzdGF0aWMgaW50IGxp
dmVfbHJjX2xheW91dCh2b2lkICphcmcpCiAJcmV0dXJuIGVycjsKIH0KIAotc3RhdGljIGludCBf
X2xpdmVfbHJjX3N0YXRlKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpmaXhtZSwKLQkJCSAgICBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCitzdGF0aWMgaW50IF9fbGl2ZV9scmNfc3Rh
dGUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJICAgIHN0cnVjdCBpOTE1X3Zt
YSAqc2NyYXRjaCkKIHsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CkBAIC0zMTgxLDcgKzMx
NTEsNyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9scmNfc3RhdGUoc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmZpeG1lLAogCWludCBlcnI7CiAJaW50IG47CiAKLQljZSA9IGludGVsX2NvbnRleHRfY3Jl
YXRlKGZpeG1lLCBlbmdpbmUpOworCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZW5naW5lKTsK
IAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCkBAIC0zMjU1LDcgKzMy
MjUsNiBAQCBzdGF0aWMgaW50IGxpdmVfbHJjX3N0YXRlKHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0ID0gYXJnOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKLQlz
dHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZml4bWU7CiAJc3RydWN0IGk5MTVfdm1hICpzY3JhdGNo
OwogCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOwogCWludCBlcnIgPSAwOwpAQCAtMzI2NSwxOCAr
MzIzNCwxMiBAQCBzdGF0aWMgaW50IGxpdmVfbHJjX3N0YXRlKHZvaWQgKmFyZykKIAkgKiBpbnRl
bF9jb250ZXh0LgogCSAqLwogCi0JZml4bWUgPSBrZXJuZWxfY29udGV4dChndC0+aTkxNSk7Ci0J
aWYgKCFmaXhtZSkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KIAlzY3JhdGNoID0gY3JlYXRlX3NjcmF0
Y2goZ3QpOwotCWlmIChJU19FUlIoc2NyYXRjaCkpIHsKLQkJZXJyID0gUFRSX0VSUihzY3JhdGNo
KTsKLQkJZ290byBvdXRfY2xvc2U7Ci0JfQorCWlmIChJU19FUlIoc2NyYXRjaCkpCisJCXJldHVy
biBQVFJfRVJSKHNjcmF0Y2gpOwogCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7
Ci0JCWVyciA9IF9fbGl2ZV9scmNfc3RhdGUoZml4bWUsIGVuZ2luZSwgc2NyYXRjaCk7CisJCWVy
ciA9IF9fbGl2ZV9scmNfc3RhdGUoZW5naW5lLCBzY3JhdGNoKTsKIAkJaWYgKGVycikKIAkJCWJy
ZWFrOwogCX0KQEAgLTMyODUsOCArMzI0OCw2IEBAIHN0YXRpYyBpbnQgbGl2ZV9scmNfc3RhdGUo
dm9pZCAqYXJnKQogCQllcnIgPSAtRUlPOwogCiAJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2Uo
JnNjcmF0Y2gsIDApOwotb3V0X2Nsb3NlOgotCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGZpeG1lKTsK
IAlyZXR1cm4gZXJyOwogfQogCkBAIC0zMzE5LDggKzMyODAsNyBAQCBzdGF0aWMgaW50IGdwcl9t
YWtlX2RpcnR5KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gMDsKIH0K
IAotc3RhdGljIGludCBfX2xpdmVfZ3ByX2NsZWFyKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpm
aXhtZSwKLQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCitzdGF0aWMgaW50
IF9fbGl2ZV9ncHJfY2xlYXIoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJICAg
IHN0cnVjdCBpOTE1X3ZtYSAqc2NyYXRjaCkKIHsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7
CkBAIC0zMzM2LDcgKzMyOTYsNyBAQCBzdGF0aWMgaW50IF9fbGl2ZV9ncHJfY2xlYXIoc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgKmZpeG1lLAogCWlmIChlcnIpCiAJCXJldHVybiBlcnI7CiAKLQlj
ZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGZpeG1lLCBlbmdpbmUpOworCWNlID0gaW50ZWxfY29u
dGV4dF9jcmVhdGUoZW5naW5lKTsKIAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIo
Y2UpOwogCkBAIC0zMzk4LDcgKzMzNTgsNiBAQCBzdGF0aWMgaW50IGxpdmVfZ3ByX2NsZWFyKHZv
aWQgKmFyZykKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOwogCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZTsKLQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZml4bWU7CiAJc3Ry
dWN0IGk5MTVfdm1hICpzY3JhdGNoOwogCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOwogCWludCBl
cnIgPSAwOwpAQCAtMzQwOCwxOCArMzM2NywxMiBAQCBzdGF0aWMgaW50IGxpdmVfZ3ByX2NsZWFy
KHZvaWQgKmFyZykKIAkgKiB0byBhdm9pZCBsZWFraW5nIGFueSBpbmZvcm1hdGlvbiBmcm9tIHBy
ZXZpb3VzIGNvbnRleHRzLgogCSAqLwogCi0JZml4bWUgPSBrZXJuZWxfY29udGV4dChndC0+aTkx
NSk7Ci0JaWYgKCFmaXhtZSkKLQkJcmV0dXJuIC1FTk9NRU07Ci0KIAlzY3JhdGNoID0gY3JlYXRl
X3NjcmF0Y2goZ3QpOwotCWlmIChJU19FUlIoc2NyYXRjaCkpIHsKLQkJZXJyID0gUFRSX0VSUihz
Y3JhdGNoKTsKLQkJZ290byBvdXRfY2xvc2U7Ci0JfQorCWlmIChJU19FUlIoc2NyYXRjaCkpCisJ
CXJldHVybiBQVFJfRVJSKHNjcmF0Y2gpOwogCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3Qs
IGlkKSB7Ci0JCWVyciA9IF9fbGl2ZV9ncHJfY2xlYXIoZml4bWUsIGVuZ2luZSwgc2NyYXRjaCk7
CisJCWVyciA9IF9fbGl2ZV9ncHJfY2xlYXIoZW5naW5lLCBzY3JhdGNoKTsKIAkJaWYgKGVycikK
IAkJCWJyZWFrOwogCX0KQEAgLTM0MjgsOCArMzM4MSw2IEBAIHN0YXRpYyBpbnQgbGl2ZV9ncHJf
Y2xlYXIodm9pZCAqYXJnKQogCQllcnIgPSAtRUlPOwogCiAJaTkxNV92bWFfdW5waW5fYW5kX3Jl
bGVhc2UoJnNjcmF0Y2gsIDApOwotb3V0X2Nsb3NlOgotCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGZp
eG1lKTsKIAlyZXR1cm4gZXJyOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndnQvc2NoZWR1bGVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMK
aW5kZXggOTc2ZDY5NTAyMThlLi5mMDc4NWI5ZmUwMmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQv
c2NoZWR1bGVyLmMKQEAgLTM1LDEyICszNSwxMiBAQAogCiAjaW5jbHVkZSA8bGludXgva3RocmVh
ZC5oPgogCi0jaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaCIKICNpbmNsdWRlICJnZW0v
aTkxNV9nZW1fcG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9jb250ZXh0LmgiCiAjaW5jbHVkZSAi
Z3QvaW50ZWxfcmluZy5oIgogCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKKyNpbmNsdWRlICJpOTE1
X2dlbV9ndHQuaCIKICNpbmNsdWRlICJndnQuaCIKIAogI2RlZmluZSBSSU5HX0NUWF9PRkYoeCkg
XApAQCAtMTIyMCwxNiArMTIyMCwxNCBAQCBpbnQgaW50ZWxfdmdwdV9zZXR1cF9zdWJtaXNzaW9u
KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
ID0gdmdwdS0+Z3Z0LT5kZXZfcHJpdjsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9zdWJtaXNzaW9uICpz
ID0gJnZncHUtPnN1Ym1pc3Npb247CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwot
CXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7CiAJc3RydWN0IGk5MTVfcHBndHQgKnBwZ3R0
OwogCWVudW0gaW50ZWxfZW5naW5lX2lkIGk7CiAJaW50IHJldDsKIAotCWN0eCA9IGk5MTVfZ2Vt
X2NvbnRleHRfY3JlYXRlX2tlcm5lbChpOTE1LCBJOTE1X1BSSU9SSVRZX01BWCk7Ci0JaWYgKElT
X0VSUihjdHgpKQotCQlyZXR1cm4gUFRSX0VSUihjdHgpOworCXBwZ3R0ID0gaTkxNV9wcGd0dF9j
cmVhdGUoaTkxNSk7CisJaWYgKElTX0VSUihwcGd0dCkpCisJCXJldHVybiBQVFJfRVJSKHBwZ3R0
KTsKIAotCXBwZ3R0ID0gaTkxNV92bV90b19wcGd0dChpOTE1X2dlbV9jb250ZXh0X2dldF92bV9y
Y3UoY3R4KSk7CiAJaTkxNV9jb250ZXh0X3BwZ3R0X3Jvb3Rfc2F2ZShzLCBwcGd0dCk7CiAKIAlm
b3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpKSB7CkBAIC0xMjM4LDEyICsxMjM2LDE0IEBA
IGludCBpbnRlbF92Z3B1X3NldHVwX3N1Ym1pc3Npb24oc3RydWN0IGludGVsX3ZncHUgKnZncHUp
CiAJCUlOSVRfTElTVF9IRUFEKCZzLT53b3JrbG9hZF9xX2hlYWRbaV0pOwogCQlzLT5zaGFkb3db
aV0gPSBFUlJfUFRSKC1FSU5WQUwpOwogCi0JCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoY3R4
LCBlbmdpbmUpOworCQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7CiAJCWlmIChJ
U19FUlIoY2UpKSB7CiAJCQlyZXQgPSBQVFJfRVJSKGNlKTsKIAkJCWdvdG8gb3V0X3NoYWRvd19j
dHg7CiAJCX0KIAorCQlpOTE1X3ZtX3B1dChjZS0+dm0pOworCQljZS0+dm0gPSBpOTE1X3ZtX2dl
dCgmcHBndHQtPnZtKTsKIAkJaW50ZWxfY29udGV4dF9zZXRfc2luZ2xlX3N1Ym1pc3Npb24oY2Up
OwogCiAJCWlmICghVVNFU19HVUNfU1VCTUlTU0lPTihpOTE1KSkgeyAvKiBNYXggcmluZyBidWZm
ZXIgc2l6ZSAqLwpAQCAtMTI3OCw3ICsxMjc4LDYgQEAgaW50IGludGVsX3ZncHVfc2V0dXBfc3Vi
bWlzc2lvbihzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSkKIAliaXRtYXBfemVybyhzLT50bGJfaGFu
ZGxlX3BlbmRpbmcsIEk5MTVfTlVNX0VOR0lORVMpOwogCiAJaTkxNV92bV9wdXQoJnBwZ3R0LT52
bSk7Ci0JaTkxNV9nZW1fY29udGV4dF9wdXQoY3R4KTsKIAlyZXR1cm4gMDsKIAogb3V0X3NoYWRv
d19jdHg6CkBAIC0xMjkxLDcgKzEyOTAsNiBAQCBpbnQgaW50ZWxfdmdwdV9zZXR1cF9zdWJtaXNz
aW9uKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCQlpbnRlbF9jb250ZXh0X3B1dChzLT5zaGFk
b3dbaV0pOwogCX0KIAlpOTE1X3ZtX3B1dCgmcHBndHQtPnZtKTsKLQlpOTE1X2dlbV9jb250ZXh0
X3B1dChjdHgpOwogCXJldHVybiByZXQ7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4
IGM3YmY4ZDJlMTdhYy4uYjdlNzdiZjA2NWRiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAg
LTEwOTQsNyArMTA5NCw3IEBAIHN0YXRpYyBpbnQgX19pbnRlbF9lbmdpbmVzX3JlY29yZF9kZWZh
dWx0cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCQlHRU1fQlVHX09OKCFlbmdpbmUtPmtlcm5lbF9j
b250ZXh0KTsKIAkJZW5naW5lLT5zZXJpYWwrKzsgLyogZm9yY2UgdGhlIGtlcm5lbCBjb250ZXh0
IHN3aXRjaCAqLwogCi0JCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoTlVMTCwgZW5naW5lKTsK
KwkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAoSVNfRVJSKGNlKSkg
ewogCQkJZXJyID0gUFRSX0VSUihjZSk7CiAJCQlnb3RvIG91dDsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2dwdV9lcnJvci5jCmluZGV4IDUxMGYxMTdlNjNlNS4uNmFkZGQ2YjM4OWI5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKQEAgLTExNzksOSArMTE3OSwxMSBAQCBzdGF0
aWMgdm9pZCByZWNvcmRfcmVxdWVzdChjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0
LAogCWVycS0+aGVhZCA9IHJlcXVlc3QtPmhlYWQ7CiAJZXJxLT50YWlsID0gcmVxdWVzdC0+dGFp
bDsKIAotCXJjdV9yZWFkX2xvY2soKTsKLQllcnEtPnBpZCA9IGN0eCAmJiBjdHgtPnBpZCA/IHBp
ZF9ucihjdHgtPnBpZCkgOiAwOwotCXJjdV9yZWFkX3VubG9jaygpOworCWlmIChjdHgpIHsKKwkJ
cmN1X3JlYWRfbG9jaygpOworCQllcnEtPnBpZCA9IGN0eCAmJiBjdHgtPnBpZCA/IHBpZF9ucihj
dHgtPnBpZCkgOiAwOworCQlyY3VfcmVhZF91bmxvY2soKTsKKwl9CiB9CiAKIHN0YXRpYyB2b2lk
IGVuZ2luZV9yZWNvcmRfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwppbmRleCAxN2MwOWEyNzc4YTIuLmJhY2E5ZTdi
MTNkNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAgLTczLDcgKzczLDcgQEAg
c3RhdGljIGNvbnN0IGNoYXIgKmk5MTVfZmVuY2VfZ2V0X3RpbWVsaW5lX25hbWUoc3RydWN0IGRt
YV9mZW5jZSAqZmVuY2UpCiAJaWYgKHRlc3RfYml0KERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJ
VCwgJmZlbmNlLT5mbGFncykpCiAJCXJldHVybiAic2lnbmFsZWQiOwogCi0JcmV0dXJuIHRvX3Jl
cXVlc3QoZmVuY2UpLT5jb250ZXh0LT5nZW1fY29udGV4dC0+bmFtZSA/OiAiW2k5MTVdIjsKKwly
ZXR1cm4gdG9fcmVxdWVzdChmZW5jZSktPmNvbnRleHQgPyB0b19yZXF1ZXN0KGZlbmNlKS0+Y29u
dGV4dC0+Z2VtX2NvbnRleHQtPm5hbWUgOiAiW2k5MTVdIjsKIH0KIAogc3RhdGljIGJvb2wgaTkx
NV9mZW5jZV9zaWduYWxlZChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKQEAgLTEyMzQsMzIgKzEy
MzQsMzMgQEAgdm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQog
CiAJcHJldiA9IF9faTkxNV9yZXF1ZXN0X2NvbW1pdChycSk7CiAKLQlpZiAocnEtPmNvbnRleHQt
PmdlbV9jb250ZXh0KQorCWlmIChycS0+Y29udGV4dC0+Z2VtX2NvbnRleHQpIHsKIAkJYXR0ciA9
IHJxLT5jb250ZXh0LT5nZW1fY29udGV4dC0+c2NoZWQ7CiAKLQkvKgotCSAqIEJvb3N0IGFjdHVh
bCB3b3JrbG9hZHMgcGFzdCBzZW1hcGhvcmVzIQotCSAqCi0JICogV2l0aCBzZW1hcGhvcmVzIHdl
IHNwaW4gb24gb25lIGVuZ2luZSB3YWl0aW5nIGZvciBhbm90aGVyLAotCSAqIHNpbXBseSB0byBy
ZWR1Y2UgdGhlIGxhdGVuY3kgb2Ygc3RhcnRpbmcgb3VyIHdvcmsgd2hlbgotCSAqIHRoZSBzaWdu
YWxlciBjb21wbGV0ZXMuIEhvd2V2ZXIsIGlmIHRoZXJlIGlzIGFueSBvdGhlcgotCSAqIHdvcmsg
dGhhdCB3ZSBjb3VsZCBiZSBkb2luZyBvbiB0aGlzIGVuZ2luZSBpbnN0ZWFkLCB0aGF0Ci0JICog
aXMgYmV0dGVyIHV0aWxpc2F0aW9uIGFuZCB3aWxsIHJlZHVjZSB0aGUgb3ZlcmFsbCBkdXJhdGlv
bgotCSAqIG9mIHRoZSBjdXJyZW50IHdvcmsuIFRvIGF2b2lkIFBJIGJvb3N0aW5nIGEgc2VtYXBo
b3JlCi0JICogZmFyIGluIHRoZSBkaXN0YW5jZSBwYXN0IG92ZXIgdXNlZnVsIHdvcmssIHdlIGtl
ZXAgYSBoaXN0b3J5Ci0JICogb2YgYW55IHNlbWFwaG9yZSB1c2UgYWxvbmcgb3VyIGRlcGVuZGVu
Y3kgY2hhaW4uCi0JICovCi0JaWYgKCEocnEtPnNjaGVkLmZsYWdzICYgSTkxNV9TQ0hFRF9IQVNf
U0VNQVBIT1JFX0NIQUlOKSkKLQkJYXR0ci5wcmlvcml0eSB8PSBJOTE1X1BSSU9SSVRZX05PU0VN
QVBIT1JFOworCQkvKgorCQkgKiBCb29zdCBhY3R1YWwgd29ya2xvYWRzIHBhc3Qgc2VtYXBob3Jl
cyEKKwkJICoKKwkJICogV2l0aCBzZW1hcGhvcmVzIHdlIHNwaW4gb24gb25lIGVuZ2luZSB3YWl0
aW5nIGZvciBhbm90aGVyLAorCQkgKiBzaW1wbHkgdG8gcmVkdWNlIHRoZSBsYXRlbmN5IG9mIHN0
YXJ0aW5nIG91ciB3b3JrIHdoZW4KKwkJICogdGhlIHNpZ25hbGVyIGNvbXBsZXRlcy4gSG93ZXZl
ciwgaWYgdGhlcmUgaXMgYW55IG90aGVyCisJCSAqIHdvcmsgdGhhdCB3ZSBjb3VsZCBiZSBkb2lu
ZyBvbiB0aGlzIGVuZ2luZSBpbnN0ZWFkLCB0aGF0CisJCSAqIGlzIGJldHRlciB1dGlsaXNhdGlv
biBhbmQgd2lsbCByZWR1Y2UgdGhlIG92ZXJhbGwgZHVyYXRpb24KKwkJICogb2YgdGhlIGN1cnJl
bnQgd29yay4gVG8gYXZvaWQgUEkgYm9vc3RpbmcgYSBzZW1hcGhvcmUKKwkJICogZmFyIGluIHRo
ZSBkaXN0YW5jZSBwYXN0IG92ZXIgdXNlZnVsIHdvcmssIHdlIGtlZXAgYSBoaXN0b3J5CisJCSAq
IG9mIGFueSBzZW1hcGhvcmUgdXNlIGFsb25nIG91ciBkZXBlbmRlbmN5IGNoYWluLgorCQkgKi8K
KwkJaWYgKCEocnEtPnNjaGVkLmZsYWdzICYgSTkxNV9TQ0hFRF9IQVNfU0VNQVBIT1JFX0NIQUlO
KSkKKwkJCWF0dHIucHJpb3JpdHkgfD0gSTkxNV9QUklPUklUWV9OT1NFTUFQSE9SRTsKIAotCS8q
Ci0JICogQm9vc3QgcHJpb3JpdGllcyB0byBuZXcgY2xpZW50cyAobmV3IHJlcXVlc3QgZmxvd3Mp
LgotCSAqCi0JICogQWxsb3cgaW50ZXJhY3RpdmUvc3luY2hyb25vdXMgY2xpZW50cyB0byBqdW1w
IGFoZWFkIG9mCi0JICogdGhlIGJ1bGsgY2xpZW50cy4gKEZRX0NPREVMKQotCSAqLwotCWlmIChs
aXN0X2VtcHR5KCZycS0+c2NoZWQuc2lnbmFsZXJzX2xpc3QpKQotCQlhdHRyLnByaW9yaXR5IHw9
IEk5MTVfUFJJT1JJVFlfV0FJVDsKKwkJLyoKKwkJICogQm9vc3QgcHJpb3JpdGllcyB0byBuZXcg
Y2xpZW50cyAobmV3IHJlcXVlc3QgZmxvd3MpLgorCQkgKgorCQkgKiBBbGxvdyBpbnRlcmFjdGl2
ZS9zeW5jaHJvbm91cyBjbGllbnRzIHRvIGp1bXAgYWhlYWQgb2YKKwkJICogdGhlIGJ1bGsgY2xp
ZW50cy4gKEZRX0NPREVMKQorCQkgKi8KKwkJaWYgKGxpc3RfZW1wdHkoJnJxLT5zY2hlZC5zaWdu
YWxlcnNfbGlzdCkpCisJCQlhdHRyLnByaW9yaXR5IHw9IEk5MTVfUFJJT1JJVFlfV0FJVDsKKwl9
CiAKIAlsb2NhbF9iaF9kaXNhYmxlKCk7CiAJX19pOTE1X3JlcXVlc3RfcXVldWUocnEsICZhdHRy
KTsKLS0gCjIuMjQuMC5yYzAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4A0F485198
	for <lists+intel-gfx@lfdr.de>; Wed,  7 Aug 2019 19:00:56 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 963496E749;
	Wed,  7 Aug 2019 17:00:54 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8A72A6E745
 for <intel-gfx@lists.freedesktop.org>; Wed,  7 Aug 2019 17:00:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Aug 2019 10:00:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,358,1559545200"; d="scan'208";a="192951081"
Received: from irvmail001.ir.intel.com ([163.33.26.43])
 by fmsmga001.fm.intel.com with ESMTP; 07 Aug 2019 10:00:48 -0700
Received: from mwajdecz-MOBL1.ger.corp.intel.com
 (mwajdecz-mobl1.ger.corp.intel.com [172.28.174.50])
 by irvmail001.ir.intel.com (8.14.3/8.13.6/MailSET/Hub) with ESMTP id
 x77H0h7v010955; Wed, 7 Aug 2019 18:00:47 +0100
From: Michal Wajdeczko <michal.wajdeczko@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  7 Aug 2019 17:00:34 +0000
Message-Id: <20190807170034.8440-8-michal.wajdeczko@intel.com>
X-Mailer: git-send-email 2.21.0.windows.1
In-Reply-To: <20190807170034.8440-1-michal.wajdeczko@intel.com>
References: <20190807170034.8440-1-michal.wajdeczko@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 7/7] drm/i915/uc: Hardening firmware fetch
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SW5zZXJ0IGZldyBtb3JlIGZhaWx1cmUgcG9pbnRzIGludG8gZmlybXdhcmUgZmV0Y2ggcHJvY2Vk
dXJlIHRvIGNoZWNrCnVzZSBvZiB0aGUgd3JvbmcgYmxvYiBuYW1lIG9yIHVzZSBvZiB0aGUgbWlz
bWF0Y2hlZCBmaXJtd2FyZSB2ZXJzaW9ucy4KCkFsc28gdXBkYXRlIHNvbWUgbWVzc2FnZXMgKHJl
bW92ZSBwdHIsIGR1cGxpY2F0ZWQgaW5mb3MpIGFuZCBzdG9wCnRyZWF0aW5nIGFsbCBmZXRjaCBl
cnJvcnMgYXMgbWlzc2luZyBmaXJtd2FyZSBjYXNlLgoKU2lnbmVkLW9mZi1ieTogTWljaGFsIFdh
amRlY3prbyA8bWljaGFsLndhamRlY3prb0BpbnRlbC5jb20+CkNjOiBEYW5pZWxlIENlcmFvbG8g
U3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpDYzogQ2hyaXMgV2lsc29u
IDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfdWNfZncuYyB8IDEzNyArKysrKysrKysrKysrKysrLS0tLS0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaCB8ICAgMyArCiAyIGZpbGVzIGNoYW5nZWQs
IDk3IGluc2VydGlvbnMoKyksIDQzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF91Y19mdy5jCmluZGV4IDNhMzgwM2JmYTVhOC4uNGZhZmYxMDEwMzk4IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmMKQEAgLTE1MywyMCArMTUzLDIz
IEBAIHN0YXRpYyBjb25zdCBjaGFyICpfX292ZXJyaWRlX2h1Y19maXJtd2FyZV9wYXRoKHZvaWQp
CiAJcmV0dXJuICIiOwogfQogCi1zdGF0aWMgYm9vbAotX191Y19md19vdmVycmlkZShzdHJ1Y3Qg
aW50ZWxfdWNfZncgKnVjX2Z3KQorc3RhdGljIHZvaWQgX191Y19md191c2VyX292ZXJyaWRlKHN0
cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpCiB7CisJY29uc3QgY2hhciAqcGF0aCA9IE5VTEw7CisK
IAlzd2l0Y2ggKHVjX2Z3LT50eXBlKSB7CiAJY2FzZSBJTlRFTF9VQ19GV19UWVBFX0dVQzoKLQkJ
dWNfZnctPnBhdGggPSBfX292ZXJyaWRlX2d1Y19maXJtd2FyZV9wYXRoKCk7CisJCXBhdGggPSBf
X292ZXJyaWRlX2d1Y19maXJtd2FyZV9wYXRoKCk7CiAJCWJyZWFrOwogCWNhc2UgSU5URUxfVUNf
RldfVFlQRV9IVUM6Ci0JCXVjX2Z3LT5wYXRoID0gX19vdmVycmlkZV9odWNfZmlybXdhcmVfcGF0
aCgpOworCQlwYXRoID0gX19vdmVycmlkZV9odWNfZmlybXdhcmVfcGF0aCgpOwogCQlicmVhazsK
IAl9CiAKLQl1Y19mdy0+dXNlcl9vdmVycmlkZGVuID0gdWNfZnctPnBhdGg7Ci0JcmV0dXJuIHVj
X2Z3LT51c2VyX292ZXJyaWRkZW47CisJaWYgKHVubGlrZWx5KHBhdGgpKSB7CisJCXVjX2Z3LT5w
YXRoID0gcGF0aDsKKwkJdWNfZnctPnVzZXJfb3ZlcnJpZGRlbiA9IHRydWU7CisJfQogfQogCiAv
KioKQEAgLTE5NCw4ICsxOTcsMTAgQEAgdm9pZCBpbnRlbF91Y19md19pbml0X2Vhcmx5KHN0cnVj
dCBpbnRlbF91Y19mdyAqdWNfZncsCiAKIAl1Y19mdy0+dHlwZSA9IHR5cGU7CiAKLQlpZiAoc3Vw
cG9ydGVkICYmIGxpa2VseSghX191Y19md19vdmVycmlkZSh1Y19mdykpKQorCWlmIChzdXBwb3J0
ZWQpIHsKIAkJX191Y19md19hdXRvX3NlbGVjdCh1Y19mdywgcGxhdGZvcm0sIHJldik7CisJCV9f
dWNfZndfdXNlcl9vdmVycmlkZSh1Y19mdyk7CisJfQogCiAJaWYgKHVjX2Z3LT5wYXRoICYmICp1
Y19mdy0+cGF0aCkKIAkJdWNfZnctPnN0YXR1cyA9IElOVEVMX1VDX0ZJUk1XQVJFX1NFTEVDVEVE
OwpAQCAtMjAzLDYgKzIwOCw0MSBAQCB2b2lkIGludGVsX3VjX2Z3X2luaXRfZWFybHkoc3RydWN0
IGludGVsX3VjX2Z3ICp1Y19mdywKIAkJdWNfZnctPnN0YXR1cyA9IElOVEVMX1VDX0ZJUk1XQVJF
X05PVF9TVVBQT1JURUQ7CiB9CiAKK3N0YXRpYyB2b2lkIF9fZm9yY2VfZndfZmV0Y2hfZmFpbHVy
ZXMoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywKKwkJCQkgICAgICBzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwgYm9vbCB1c2VyKQoreworCWludCBlID0gdXNlciA/IC1FSU5WQUwgOiAt
RVNUQUxFOworCisJaWYgKGk5MTVfaW5qZWN0X2xvYWRfZXJyb3IoaTkxNSwgZSkpIHsKKwkJLyog
bm9uLWV4aXN0aW5nIGJsb2IgKi8KKwkJdWNfZnctPnBhdGggPSAiPGludmFsaWQ+IjsKKwkJdWNf
ZnctPnVzZXJfb3ZlcnJpZGRlbiA9IHVzZXI7CisJfSBlbHNlIGlmIChpOTE1X2luamVjdF9sb2Fk
X2Vycm9yKGk5MTUsIGUpKSB7CisJCS8qIHJlcXVpcmUgbmV4dCBtYWpvciB2ZXJzaW9uICovCisJ
CXVjX2Z3LT5tYWpvcl92ZXJfd2FudGVkICs9IDE7CisJCXVjX2Z3LT5taW5vcl92ZXJfd2FudGVk
ID0gMDsKKwkJdWNfZnctPnVzZXJfb3ZlcnJpZGRlbiA9IHVzZXI7CisJfSBlbHNlIGlmIChpOTE1
X2luamVjdF9sb2FkX2Vycm9yKGk5MTUsIGUpKSB7CisJCS8qIHJlcXVpcmUgbmV4dCBtaW5vciB2
ZXJzaW9uICovCisJCXVjX2Z3LT5taW5vcl92ZXJfd2FudGVkICs9IDE7CisJCXVjX2Z3LT51c2Vy
X292ZXJyaWRkZW4gPSB1c2VyOworCX0gZWxzZSBpZiAodWNfZnctPm1ham9yX3Zlcl93YW50ZWQg
JiYgaTkxNV9pbmplY3RfbG9hZF9lcnJvcihpOTE1LCBlKSkgeworCQkvKiByZXF1aXJlIHByZXYg
bWFqb3IgdmVyc2lvbiAqLworCQl1Y19mdy0+bWFqb3JfdmVyX3dhbnRlZCAtPSAxOworCQl1Y19m
dy0+bWlub3JfdmVyX3dhbnRlZCA9IDA7CisJCXVjX2Z3LT51c2VyX292ZXJyaWRkZW4gPSB1c2Vy
OworCX0gZWxzZSBpZiAodWNfZnctPm1pbm9yX3Zlcl93YW50ZWQgJiYgaTkxNV9pbmplY3RfbG9h
ZF9lcnJvcihpOTE1LCBlKSkgeworCQkvKiByZXF1aXJlIHByZXYgbWlub3IgdmVyc2lvbiAtIGhl
eSwgdGhpcyBzaG91bGQgd29yayEgKi8KKwkJdWNfZnctPm1pbm9yX3Zlcl93YW50ZWQgLT0gMTsK
KwkJdWNfZnctPnVzZXJfb3ZlcnJpZGRlbiA9IHVzZXI7CisJfSBlbHNlIGlmICh1c2VyICYmIGk5
MTVfaW5qZWN0X2xvYWRfZXJyb3IoaTkxNSwgZSkpIHsKKwkJLyogb2ZmaWNpYWxseSB1bnN1cHBv
cnRlZCBwbGF0Zm9ybSAqLworCQl1Y19mdy0+bWFqb3JfdmVyX3dhbnRlZCA9IDA7CisJCXVjX2Z3
LT5taW5vcl92ZXJfd2FudGVkID0gMDsKKwkJdWNfZnctPnVzZXJfb3ZlcnJpZGRlbiA9IHRydWU7
CisJfQorfQorCiAvKioKICAqIGludGVsX3VjX2Z3X2ZldGNoIC0gZmV0Y2ggdUMgZmlybXdhcmUK
ICAqIEB1Y19mdzogdUMgZmlybXdhcmUKQEAgLTIyMiwxNyArMjYyLDIyIEBAIGludCBpbnRlbF91
Y19md19mZXRjaChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKIAogCUdFTV9CVUdfT04oIWludGVsX3VjX2Z3X3N1cHBvcnRlZCh1Y19mdykp
OwogCisJZXJyID0gaTkxNV9pbmplY3RfbG9hZF9lcnJvcihpOTE1LCAtRU5YSU8pOworCWlmIChl
cnIpCisJCXJldHVybiBlcnI7CisKKwlfX2ZvcmNlX2Z3X2ZldGNoX2ZhaWx1cmVzKHVjX2Z3LCBp
OTE1LCB0cnVlKTsKKwlfX2ZvcmNlX2Z3X2ZldGNoX2ZhaWx1cmVzKHVjX2Z3LCBpOTE1LCBmYWxz
ZSk7CisKIAllcnIgPSByZXF1ZXN0X2Zpcm13YXJlKCZmdywgdWNfZnctPnBhdGgsIGk5MTUtPmRy
bS5kZXYpOwogCWlmIChlcnIpCiAJCWdvdG8gZmFpbDsKIAotCURSTV9ERUJVR19EUklWRVIoIiVz
IGZ3IHNpemUgJXp1IHB0ciAlcFxuIiwKLQkJCSBpbnRlbF91Y19md190eXBlX3JlcHIodWNfZnct
PnR5cGUpLCBmdy0+c2l6ZSwgZncpOwotCiAJLyogQ2hlY2sgdGhlIHNpemUgb2YgdGhlIGJsb2Ig
YmVmb3JlIGV4YW1pbmluZyBidWZmZXIgY29udGVudHMgKi8KLQlpZiAoZnctPnNpemUgPCBzaXpl
b2Yoc3RydWN0IHVjX2Nzc19oZWFkZXIpKSB7Ci0JCURSTV9XQVJOKCIlczogVW5leHBlY3RlZCBm
aXJtd2FyZSBzaXplICglenUsIG1pbiAlenUpXG4iLAotCQkJIGludGVsX3VjX2Z3X3R5cGVfcmVw
cih1Y19mdy0+dHlwZSksCisJaWYgKHVubGlrZWx5KGZ3LT5zaXplIDwgc2l6ZW9mKHN0cnVjdCB1
Y19jc3NfaGVhZGVyKSkpIHsKKwkJZGV2X3dhcm4oaTkxNS0+ZHJtLmRldiwKKwkJCSAiJXMgZmly
bXdhcmUgJXM6IGludmFsaWQgc2l6ZTogJXp1IDwgJXp1XG4iLAorCQkJIGludGVsX3VjX2Z3X3R5
cGVfcmVwcih1Y19mdy0+dHlwZSksIHVjX2Z3LT5wYXRoLAogCQkJIGZ3LT5zaXplLCBzaXplb2Yo
c3RydWN0IHVjX2Nzc19oZWFkZXIpKTsKIAkJZXJyID0gLUVOT0RBVEE7CiAJCWdvdG8gZmFpbDsK
QEAgLTI0MywxMCArMjg4LDEyIEBAIGludCBpbnRlbF91Y19md19mZXRjaChzdHJ1Y3QgaW50ZWxf
dWNfZncgKnVjX2Z3LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkvKiBDaGVjayBp
bnRlZ3JpdHkgb2Ygc2l6ZSB2YWx1ZXMgaW5zaWRlIENTUyBoZWFkZXIgKi8KIAlzaXplID0gKGNz
cy0+aGVhZGVyX3NpemVfZHcgLSBjc3MtPmtleV9zaXplX2R3IC0gY3NzLT5tb2R1bHVzX3NpemVf
ZHcgLQogCQljc3MtPmV4cG9uZW50X3NpemVfZHcpICogc2l6ZW9mKHUzMik7Ci0JaWYgKHNpemUg
IT0gc2l6ZW9mKHN0cnVjdCB1Y19jc3NfaGVhZGVyKSkgewotCQlEUk1fV0FSTigiJXM6IE1pc21h
dGNoZWQgZmlybXdhcmUgaGVhZGVyIGRlZmluaXRpb25cbiIsCi0JCQkgaW50ZWxfdWNfZndfdHlw
ZV9yZXByKHVjX2Z3LT50eXBlKSk7Ci0JCWVyciA9IC1FTk9FWEVDOworCWlmICh1bmxpa2VseShz
aXplICE9IHNpemVvZihzdHJ1Y3QgdWNfY3NzX2hlYWRlcikpKSB7CisJCWRldl93YXJuKGk5MTUt
PmRybS5kZXYsCisJCQkgIiVzIGZpcm13YXJlICVzOiB1bmV4cGVjdGVkIGhlYWRlciBzaXplOiAl
enUgIT0gJXp1XG4iLAorCQkJIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+dHlwZSksIHVj
X2Z3LT5wYXRoLAorCQkJIGZ3LT5zaXplLCBzaXplb2Yoc3RydWN0IHVjX2Nzc19oZWFkZXIpKTsK
KwkJZXJyID0gLUVQUk9UTzsKIAkJZ290byBmYWlsOwogCX0KIApAQCAtMjU0LDE5ICszMDEsMjMg
QEAgaW50IGludGVsX3VjX2Z3X2ZldGNoKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsIHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCXVjX2Z3LT51Y29kZV9zaXplID0gKGNzcy0+c2l6
ZV9kdyAtIGNzcy0+aGVhZGVyX3NpemVfZHcpICogc2l6ZW9mKHUzMik7CiAKIAkvKiBub3cgUlNB
ICovCi0JaWYgKGNzcy0+a2V5X3NpemVfZHcgIT0gVU9TX1JTQV9TQ1JBVENIX0NPVU5UKSB7Ci0J
CURSTV9XQVJOKCIlczogTWlzbWF0Y2hlZCBmaXJtd2FyZSBSU0Ega2V5IHNpemUgKCV1KVxuIiwK
LQkJCSBpbnRlbF91Y19md190eXBlX3JlcHIodWNfZnctPnR5cGUpLCBjc3MtPmtleV9zaXplX2R3
KTsKLQkJZXJyID0gLUVOT0VYRUM7CisJaWYgKHVubGlrZWx5KGNzcy0+a2V5X3NpemVfZHcgIT0g
VU9TX1JTQV9TQ1JBVENIX0NPVU5UKSkgeworCQlkZXZfd2FybihpOTE1LT5kcm0uZGV2LAorCQkJ
ICIlcyBmaXJtd2FyZSAlczogdW5leHBlY3RlZCBSU0Ega2V5IHNpemU6ICV1ICE9ICV1XG4iLAor
CQkJIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+dHlwZSksIHVjX2Z3LT5wYXRoLAorCQkJ
IGNzcy0+a2V5X3NpemVfZHcsIFVPU19SU0FfU0NSQVRDSF9DT1VOVCk7CisJCWVyciA9IC1FUFJP
VE87CiAJCWdvdG8gZmFpbDsKIAl9CiAJdWNfZnctPnJzYV9zaXplID0gY3NzLT5rZXlfc2l6ZV9k
dyAqIHNpemVvZih1MzIpOwogCiAJLyogQXQgbGVhc3QsIGl0IHNob3VsZCBoYXZlIGhlYWRlciwg
dUNvZGUgYW5kIFJTQS4gU2l6ZSBvZiBhbGwgdGhyZWUuICovCiAJc2l6ZSA9IHNpemVvZihzdHJ1
Y3QgdWNfY3NzX2hlYWRlcikgKyB1Y19mdy0+dWNvZGVfc2l6ZSArIHVjX2Z3LT5yc2Ffc2l6ZTsK
LQlpZiAoZnctPnNpemUgPCBzaXplKSB7Ci0JCURSTV9XQVJOKCIlczogVHJ1bmNhdGVkIGZpcm13
YXJlICglenUsIGV4cGVjdGVkICV6dSlcbiIsCi0JCQkgaW50ZWxfdWNfZndfdHlwZV9yZXByKHVj
X2Z3LT50eXBlKSwgZnctPnNpemUsIHNpemUpOworCWlmICh1bmxpa2VseShmdy0+c2l6ZSA8IHNp
emUpKSB7CisJCWRldl93YXJuKGk5MTUtPmRybS5kZXYsCisJCQkgIiVzIGZpcm13YXJlICVzOiBp
bnZhbGlkIHNpemU6ICV6dSA8ICV6dVxuIiwKKwkJCSBpbnRlbF91Y19md190eXBlX3JlcHIodWNf
ZnctPnR5cGUpLCB1Y19mdy0+cGF0aCwKKwkJCSBmdy0+c2l6ZSwgc2l6ZSk7CiAJCWVyciA9IC1F
Tk9FWEVDOwogCQlnb3RvIGZhaWw7CiAJfQpAQCAtMjkyLDI5ICszNDMsMjIgQEAgaW50IGludGVs
X3VjX2Z3X2ZldGNoKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsIHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogCQlicmVhazsKIAl9CiAKLQlEUk1fREVCVUdfRFJJVkVSKCIlcyBmdyB2
ZXJzaW9uICV1LiV1ICh3YW50ZWQgJXUuJXUpXG4iLAotCQkJIGludGVsX3VjX2Z3X3R5cGVfcmVw
cih1Y19mdy0+dHlwZSksCi0JCQkgdWNfZnctPm1ham9yX3Zlcl9mb3VuZCwgdWNfZnctPm1pbm9y
X3Zlcl9mb3VuZCwKLQkJCSB1Y19mdy0+bWFqb3JfdmVyX3dhbnRlZCwgdWNfZnctPm1pbm9yX3Zl
cl93YW50ZWQpOwotCi0JaWYgKHVjX2Z3LT5tYWpvcl92ZXJfd2FudGVkID09IDAgJiYgdWNfZnct
Pm1pbm9yX3Zlcl93YW50ZWQgPT0gMCkgewotCQlEUk1fTk9URSgiJXM6IFNraXBwaW5nIGZpcm13
YXJlIHZlcnNpb24gY2hlY2tcbiIsCi0JCQkgaW50ZWxfdWNfZndfdHlwZV9yZXByKHVjX2Z3LT50
eXBlKSk7Ci0JfSBlbHNlIGlmICh1Y19mdy0+bWFqb3JfdmVyX2ZvdW5kICE9IHVjX2Z3LT5tYWpv
cl92ZXJfd2FudGVkIHx8Ci0JCSAgIHVjX2Z3LT5taW5vcl92ZXJfZm91bmQgPCB1Y19mdy0+bWlu
b3JfdmVyX3dhbnRlZCkgewotCQlEUk1fTk9URSgiJXM6IFdyb25nIGZpcm13YXJlIHZlcnNpb24g
KCV1LiV1LCByZXF1aXJlZCAldS4ldSlcbiIsCi0JCQkgaW50ZWxfdWNfZndfdHlwZV9yZXByKHVj
X2Z3LT50eXBlKSwKKwlpZiAodWNfZnctPm1ham9yX3Zlcl9mb3VuZCAhPSB1Y19mdy0+bWFqb3Jf
dmVyX3dhbnRlZCB8fAorCSAgICB1Y19mdy0+bWlub3JfdmVyX2ZvdW5kIDwgdWNfZnctPm1pbm9y
X3Zlcl93YW50ZWQpIHsKKwkJZGV2X3dhcm4oaTkxNS0+ZHJtLmRldiwKKwkJCSAiJXMgZmlybXdh
cmUgJXM6IHVuZXhwZWN0ZWQgdmVyc2lvbjogJXUuJXUgIT0gJXUuJXVcbiIsCisJCQkgaW50ZWxf
dWNfZndfdHlwZV9yZXByKHVjX2Z3LT50eXBlKSwgdWNfZnctPnBhdGgsCiAJCQkgdWNfZnctPm1h
am9yX3Zlcl9mb3VuZCwgdWNfZnctPm1pbm9yX3Zlcl9mb3VuZCwKIAkJCSB1Y19mdy0+bWFqb3Jf
dmVyX3dhbnRlZCwgdWNfZnctPm1pbm9yX3Zlcl93YW50ZWQpOwotCQllcnIgPSAtRU5PRVhFQzsK
LQkJZ290byBmYWlsOworCQlpZiAoIWludGVsX3VjX2Z3X2lzX292ZXJyaWRkZW4odWNfZncpKSB7
CisJCQllcnIgPSAtRU5PRVhFQzsKKwkJCWdvdG8gZmFpbDsKKwkJfQogCX0KIAogCW9iaiA9IGk5
MTVfZ2VtX29iamVjdF9jcmVhdGVfc2htZW1fZnJvbV9kYXRhKGk5MTUsIGZ3LT5kYXRhLCBmdy0+
c2l6ZSk7CiAJaWYgKElTX0VSUihvYmopKSB7CiAJCWVyciA9IFBUUl9FUlIob2JqKTsKLQkJRFJN
X0RFQlVHX0RSSVZFUigiJXMgZncgb2JqZWN0X2NyZWF0ZSBlcnI9JWRcbiIsCi0JCQkJIGludGVs
X3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+dHlwZSksIGVycik7CiAJCWdvdG8gZmFpbDsKIAl9CiAK
QEAgLTMyMiwxNSArMzY2LDIyIEBAIGludCBpbnRlbF91Y19md19mZXRjaChzdHJ1Y3QgaW50ZWxf
dWNfZncgKnVjX2Z3LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAl1Y19mdy0+c2l6
ZSA9IGZ3LT5zaXplOwogCXVjX2Z3LT5zdGF0dXMgPSBJTlRFTF9VQ19GSVJNV0FSRV9BVkFJTEFC
TEU7CiAKKwlEUk1fREVWX0RFQlVHX0RSSVZFUihpOTE1LT5kcm0uZGV2LCAiJXMgZmlybXdhcmUg
JXM6ICVzXG4iLAorCQkJICAgICBpbnRlbF91Y19md190eXBlX3JlcHIodWNfZnctPnR5cGUpLCB1
Y19mdy0+cGF0aCwKKwkJCSAgICAgaW50ZWxfdWNfZndfc3RhdHVzX3JlcHIodWNfZnctPnN0YXR1
cykpOworCiAJcmVsZWFzZV9maXJtd2FyZShmdyk7CiAJcmV0dXJuIDA7CiAKIGZhaWw6Ci0JdWNf
ZnctPnN0YXR1cyA9IElOVEVMX1VDX0ZJUk1XQVJFX01JU1NJTkc7CisJaWYgKGVyciA9PSAtRU5P
RU5UKQorCQl1Y19mdy0+c3RhdHVzID0gSU5URUxfVUNfRklSTVdBUkVfTUlTU0lORzsKKwllbHNl
CisJCXVjX2Z3LT5zdGF0dXMgPSBJTlRFTF9VQ19GSVJNV0FSRV9FUlJPUjsKIAotCURSTV9XQVJO
KCIlczogRmFpbGVkIHRvIGZldGNoIGZpcm13YXJlICVzIChlcnJvciAlZClcbiIsCisJZGV2X2lu
Zm8oaTkxNS0+ZHJtLmRldiwgIiVzIGZpcm13YXJlICVzOiBmZXRjaCBmYWlsZWQgd2l0aCBlcnJv
ciAlZFxuIiwKIAkJIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+dHlwZSksIHVjX2Z3LT5w
YXRoLCBlcnIpOwotCURSTV9JTkZPKCIlczogRmlybXdhcmUgY2FuIGJlIGRvd25sb2FkZWQgZnJv
bSAlc1xuIiwKKwlkZXZfaW5mbyhpOTE1LT5kcm0uZGV2LCAiJXMgZmlybXdhcmUocykgY2FuIGJl
IGRvd25sb2FkZWQgZnJvbSAlc1xuIiwKIAkJIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+
dHlwZSksIElOVEVMX1VDX0ZJUk1XQVJFX1VSTCk7CiAKIAlyZWxlYXNlX2Zpcm13YXJlKGZ3KTsJ
CS8qIE9LIGV2ZW4gaWYgZncgaXMgTlVMTCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2lu
dGVsX3VjX2Z3LmgKaW5kZXggZmFlNDViYzE2YmM3Li4wZDIyZTczZGZmMTUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaApAQCAtNDIsNiArNDIsNyBAQCBlbnVtIGlu
dGVsX3VjX2Z3X3N0YXR1cyB7CiAJSU5URUxfVUNfRklSTVdBUkVfVU5JTklUSUFMSVpFRCA9IDAs
IC8qIHVzZWQgdG8gY2F0Y2ggY2hlY2tzIGRvbmUgdG9vIGVhcmx5ICovCiAJSU5URUxfVUNfRklS
TVdBUkVfU0VMRUNURUQsIC8qIHNlbGVjdGVkIHRoZSBibG9iIHdlIHdhbnQgdG8gbG9hZCAqLwog
CUlOVEVMX1VDX0ZJUk1XQVJFX01JU1NJTkcsIC8qIGJsb2Igbm90IGZvdW5kIG9uIHRoZSBzeXN0
ZW0gKi8KKwlJTlRFTF9VQ19GSVJNV0FSRV9FUlJPUiwgLyogaW52YWxpZCBmb3JtYXQgb3IgdmVy
c2lvbiAqLwogCUlOVEVMX1VDX0ZJUk1XQVJFX0FWQUlMQUJMRSwgLyogYmxvYiBmb3VuZCBhbmQg
Y29waWVkIGluIG1lbSAqLwogCUlOVEVMX1VDX0ZJUk1XQVJFX0ZBSUwsIC8qIGZhaWxlZCB0byB4
ZmVyIG9yIGluaXQvYXV0aCB0aGUgZncgKi8KIAlJTlRFTF9VQ19GSVJNV0FSRV9UUkFOU0ZFUlJF
RCwgLyogZG1hIHhmZXIgZG9uZSAqLwpAQCAtOTIsNiArOTMsOCBAQCBjb25zdCBjaGFyICppbnRl
bF91Y19md19zdGF0dXNfcmVwcihlbnVtIGludGVsX3VjX2Z3X3N0YXR1cyBzdGF0dXMpCiAJCXJl
dHVybiAiU0VMRUNURUQiOwogCWNhc2UgSU5URUxfVUNfRklSTVdBUkVfTUlTU0lORzoKIAkJcmV0
dXJuICJNSVNTSU5HIjsKKwljYXNlIElOVEVMX1VDX0ZJUk1XQVJFX0VSUk9SOgorCQlyZXR1cm4g
IkVSUk9SIjsKIAljYXNlIElOVEVMX1VDX0ZJUk1XQVJFX0FWQUlMQUJMRToKIAkJcmV0dXJuICJB
VkFJTEFCTEUiOwogCWNhc2UgSU5URUxfVUNfRklSTVdBUkVfRkFJTDoKLS0gCjIuMTkuMgoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

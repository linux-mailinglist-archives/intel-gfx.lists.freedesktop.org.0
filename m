Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4B90090FD5
	for <lists+intel-gfx@lfdr.de>; Sat, 17 Aug 2019 11:40:28 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4CEA76E9EC;
	Sat, 17 Aug 2019 09:40:20 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CD8006E4AB
 for <intel-gfx@lists.freedesktop.org>; Sat, 17 Aug 2019 09:40:06 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 17 Aug 2019 02:40:06 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,396,1559545200"; d="scan'208";a="376950844"
Received: from vidyashr-mobl1.amr.corp.intel.com (HELO
 ldmartin-desk1.intel.com) ([10.251.152.227])
 by fmsmga005.fm.intel.com with ESMTP; 17 Aug 2019 02:40:05 -0700
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 17 Aug 2019 02:38:56 -0700
Message-Id: <20190817093902.2171-35-lucas.demarchi@intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190817093902.2171-1-lucas.demarchi@intel.com>
References: <20190817093902.2171-1-lucas.demarchi@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 34/40] drm/i915/perf: add a parameter to
 control the size of OA buffer
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Matthew Auld <matthew.auld@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTGlvbmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgoK
VGhlIHdheSBvdXIgaGFyZHdhcmUgaXMgZGVzaWduZWQgZG9lc24ndCBzZWVtIHRvIGxldCB1cyB1
c2UgdGhlCk1JX1JFQ09SRF9QRVJGX0NPVU5UIGNvbW1hbmQgd2l0aG91dCBzZXR0aW5nIHVwIGEg
Y2lyY3VsYXIgYnVmZmVyLgoKSW4gdGhlIGNhc2Ugd2hlcmUgdGhlIHVzZXIgZGlkbid0IHJlcXVl
c3QgT0EgcmVwb3J0cyB0byBiZSBhdmFpbGFibGUKdGhyb3VnaCB0aGUgaTkxNSBwZXJmIHN0cmVh
bSwgd2UgY2FuIHNldCB0aGUgT0EgYnVmZmVyIHRvIHRoZSBtaW5pbXVtCnNpemUgdG8gYXZvaWQg
Y29uc3VtaW5nIG1lbW9yeSB3aGljaCB3b24ndCBiZSB1c2VkIGJ5IHRoZSBkcml2ZXIuCgpDYzog
Sm9vbmFzIExhaHRpbmVuIDxqb29uYXMubGFodGluZW5AbGludXguaW50ZWwuY29tPgpDYzogTWF0
dGhldyBBdWxkIDxtYXR0aGV3LmF1bGRAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBMaW9uZWwg
TGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jIHwgOTggKysrKysrKysrKysrKysrKysrKysrLS0tLS0t
LS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmggIHwgIDIgKwogaW5jbHVkZS91
YXBpL2RybS9pOTE1X2RybS5oICAgICAgfCAgNyArKysKIDMgZmlsZXMgY2hhbmdlZCwgNzQgaW5z
ZXJ0aW9ucygrKSwgMzMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9wZXJmLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwppbmRl
eCAyYzlmNDZlMTI2MjIuLjkzODZkOWM4MjkzMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9wZXJmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMK
QEAgLTIxNiwxMyArMjE2LDcgQEAKICNpbmNsdWRlICJvYS9pOTE1X29hX2NubC5oIgogI2luY2x1
ZGUgIm9hL2k5MTVfb2FfaWNsLmgiCiAKLS8qIEhXIHJlcXVpcmVzIHRoaXMgdG8gYmUgYSBwb3dl
ciBvZiB0d28sIGJldHdlZW4gMTI4ayBhbmQgMTZNLCB0aG91Z2ggZHJpdmVyCi0gKiBpcyBjdXJy
ZW50bHkgZ2VuZXJhbGx5IGRlc2lnbmVkIGFzc3VtaW5nIHRoZSBsYXJnZXN0IDE2TSBzaXplIGlz
IHVzZWQgc3VjaAotICogdGhhdCB0aGUgb3ZlcmZsb3cgY2FzZXMgYXJlIHVubGlrZWx5IGluIG5v
cm1hbCBvcGVyYXRpb24uCi0gKi8KLSNkZWZpbmUgT0FfQlVGRkVSX1NJWkUJCVNaXzE2TQotCi0j
ZGVmaW5lIE9BX1RBS0VOKHRhaWwsIGhlYWQpCSgodGFpbCAtIGhlYWQpICYgKE9BX0JVRkZFUl9T
SVpFIC0gMSkpCisjZGVmaW5lIE9BX1RBS0VOKHRhaWwsIGhlYWQpCSgoKHRhaWwpIC0gKGhlYWQp
KSAmIChzdHJlYW0tPm9hX2J1ZmZlci52bWEtPnNpemUgLSAxKSkKIAogLyoqCiAgKiBET0M6IE9B
IFRhaWwgUG9pbnRlciBSYWNlCkBAIC0zNDcsNiArMzQxLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVj
dCBpOTE1X29hX2Zvcm1hdCBnZW44X3BsdXNfb2FfZm9ybWF0c1tJOTE1X09BX0ZPUk1BVF9NQVhd
ID0gewogICogQG9hX2Zvcm1hdDogQW4gT0EgdW5pdCBIVyByZXBvcnQgZm9ybWF0CiAgKiBAb2Ff
cGVyaW9kaWM6IFdoZXRoZXIgdG8gZW5hYmxlIHBlcmlvZGljIE9BIHVuaXQgc2FtcGxpbmcKICAq
IEBvYV9wZXJpb2RfZXhwb25lbnQ6IFRoZSBPQSB1bml0IHNhbXBsaW5nIHBlcmlvZCBpcyBkZXJp
dmVkIGZyb20gdGhpcworICogQG9hX2J1ZmZlcl9zaXplX2V4cG9uZW50OiBUaGUgT0EgYnVmZmVy
IHNpemUgaXMgZGVyaXZlZCBmcm9tIHRoaXMKICAqCiAgKiBBcyByZWFkX3Byb3BlcnRpZXNfdW5s
b2NrZWQoKSBlbnVtZXJhdGVzIGFuZCB2YWxpZGF0ZXMgdGhlIHByb3BlcnRpZXMgZ2l2ZW4KICAq
IHRvIG9wZW4gYSBzdHJlYW0gb2YgbWV0cmljcyB0aGUgY29uZmlndXJhdGlvbiBpcyBidWlsdCB1
cCBpbiB0aGUgc3RydWN0dXJlCkBAIC0zNjMsNiArMzU4LDcgQEAgc3RydWN0IHBlcmZfb3Blbl9w
cm9wZXJ0aWVzIHsKIAlpbnQgb2FfZm9ybWF0OwogCWJvb2wgb2FfcGVyaW9kaWM7CiAJaW50IG9h
X3BlcmlvZF9leHBvbmVudDsKKwl1MzIgb2FfYnVmZmVyX3NpemVfZXhwb25lbnQ7CiB9OwogCiBz
dGF0aWMgZW51bSBocnRpbWVyX3Jlc3RhcnQgb2FfcG9sbF9jaGVja190aW1lcl9jYihzdHJ1Y3Qg
aHJ0aW1lciAqaHJ0aW1lcik7CkBAIC01MzEsNyArNTI3LDcgQEAgc3RhdGljIGJvb2wgb2FfYnVm
ZmVyX2NoZWNrX3VubG9ja2VkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJCSAq
IGNvdWxkIHB1dCB0aGUgdGFpbCBvdXQgb2YgYm91bmRzLi4uCiAJCSAqLwogCQlpZiAoaHdfdGFp
bCA+PSBndHRfb2Zmc2V0ICYmCi0JCSAgICBod190YWlsIDwgKGd0dF9vZmZzZXQgKyBPQV9CVUZG
RVJfU0laRSkpIHsKKwkJICAgIGh3X3RhaWwgPCAoZ3R0X29mZnNldCArIHN0cmVhbS0+b2FfYnVm
ZmVyLnZtYS0+c2l6ZSkpIHsKIAkJCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWxzWyFhZ2VkX2lkeF0u
b2Zmc2V0ID0KIAkJCQlhZ2luZ190YWlsID0gaHdfdGFpbDsKIAkJCXN0cmVhbS0+b2FfYnVmZmVy
LmFnaW5nX3RpbWVzdGFtcCA9IG5vdzsKQEAgLTY1OSw3ICs2NTUsNyBAQCBzdGF0aWMgaW50IGdl
bjhfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAlp
bnQgcmVwb3J0X3NpemUgPSBzdHJlYW0tPm9hX2J1ZmZlci5mb3JtYXRfc2l6ZTsKIAl1OCAqb2Ff
YnVmX2Jhc2UgPSBzdHJlYW0tPm9hX2J1ZmZlci52YWRkcjsKIAl1MzIgZ3R0X29mZnNldCA9IGk5
MTVfZ2d0dF9vZmZzZXQoc3RyZWFtLT5vYV9idWZmZXIudm1hKTsKLQl1MzIgbWFzayA9IChPQV9C
VUZGRVJfU0laRSAtIDEpOworCXUzMiBtYXNrID0gKHN0cmVhbS0+b2FfYnVmZmVyLnZtYS0+c2l6
ZSAtIDEpOwogCXNpemVfdCBzdGFydF9vZmZzZXQgPSAqb2Zmc2V0OwogCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CiAJdW5zaWduZWQgaW50IGFnZWRfdGFpbF9pZHg7CkBAIC02OTksOCArNjk1LDggQEAg
c3RhdGljIGludCBnZW44X2FwcGVuZF9vYV9yZXBvcnRzKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
ICpzdHJlYW0sCiAJICogb25seSBiZSBpbmNyZW1lbnRlZCBieSBtdWx0aXBsZXMgb2YgdGhlIHJl
cG9ydCBzaXplIChub3RhYmx5IGFsc28KIAkgKiBhbGwgYSBwb3dlciBvZiB0d28pLgogCSAqLwot
CWlmIChXQVJOX09OQ0UoaGVhZCA+IE9BX0JVRkZFUl9TSVpFIHx8IGhlYWQgJSByZXBvcnRfc2l6
ZSB8fAotCQkgICAgICB0YWlsID4gT0FfQlVGRkVSX1NJWkUgfHwgdGFpbCAlIHJlcG9ydF9zaXpl
LAorCWlmIChXQVJOX09OQ0UoaGVhZCA+IHN0cmVhbS0+b2FfYnVmZmVyLnZtYS0+c2l6ZSB8fCBo
ZWFkICUgcmVwb3J0X3NpemUgfHwKKwkJICAgICAgdGFpbCA+IHN0cmVhbS0+b2FfYnVmZmVyLnZt
YS0+c2l6ZSB8fCB0YWlsICUgcmVwb3J0X3NpemUsCiAJCSAgICAgICJJbmNvbnNpc3RlbnQgT0Eg
YnVmZmVyIHBvaW50ZXJzOiBoZWFkID0gJXUsIHRhaWwgPSAldVxuIiwKIAkJICAgICAgaGVhZCwg
dGFpbCkpCiAJCXJldHVybiAtRUlPOwpAQCAtNzIzLDcgKzcxOSw3IEBAIHN0YXRpYyBpbnQgZ2Vu
OF9hcHBlbmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQkg
KiBoZXJlIHdvdWxkIGltcGx5IGEgZHJpdmVyIGJ1ZyB0aGF0IHdvdWxkIHJlc3VsdAogCQkgKiBp
biBhbiBvdmVycnVuLgogCQkgKi8KLQkJaWYgKFdBUk5fT04oKE9BX0JVRkZFUl9TSVpFIC0gaGVh
ZCkgPCByZXBvcnRfc2l6ZSkpIHsKKwkJaWYgKFdBUk5fT04oKHN0cmVhbS0+b2FfYnVmZmVyLnZt
YS0+c2l6ZSAtIGhlYWQpIDwgcmVwb3J0X3NpemUpKSB7CiAJCQlEUk1fRVJST1IoIlNwdXJpb3Vz
IE9BIGhlYWQgcHRyOiBub24taW50ZWdyYWwgcmVwb3J0IG9mZnNldFxuIik7CiAJCQlicmVhazsK
IAkJfQpAQCAtODgxLDExICs4NzcsNiBAQCBzdGF0aWMgaW50IGdlbjhfb2FfcmVhZChzdHJ1Y3Qg
aTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCSAqIGF1dG9tYXRpY2FsbHkgdHJpZ2dlcmVkIHJl
cG9ydHMgaW4gdGhpcyBjb25kaXRpb24gYW5kIHNvIHdlCiAJICogaGF2ZSB0byBhc3N1bWUgdGhh
dCBvbGQgcmVwb3J0cyBhcmUgbm93IGJlaW5nIHRyYW1wbGVkCiAJICogb3Zlci4KLQkgKgotCSAq
IENvbnNpZGVyaW5nIGhvdyB3ZSBkb24ndCBjdXJyZW50bHkgZ2l2ZSB1c2Vyc3BhY2UgY29udHJv
bAotCSAqIG92ZXIgdGhlIE9BIGJ1ZmZlciBzaXplIGFuZCBhbHdheXMgY29uZmlndXJlIGEgbGFy
Z2UgMTZNQgotCSAqIGJ1ZmZlciwgdGhlbiBhIGJ1ZmZlciBvdmVyZmxvdyBkb2VzIGFueXdheSBs
aWtlbHkgaW5kaWNhdGUKLQkgKiB0aGF0IHNvbWV0aGluZyBoYXMgZ29uZSBxdWl0ZSBiYWRseSB3
cm9uZy4KIAkgKi8KIAlpZiAob2FzdGF0dXMgJiBHRU44X09BU1RBVFVTX09BQlVGRkVSX09WRVJG
TE9XKSB7CiAJCXJldCA9IGFwcGVuZF9vYV9zdGF0dXMoc3RyZWFtLCBidWYsIGNvdW50LCBvZmZz
ZXQsCkBAIC05NDcsNyArOTM4LDcgQEAgc3RhdGljIGludCBnZW43X2FwcGVuZF9vYV9yZXBvcnRz
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJaW50IHJlcG9ydF9zaXplID0gc3Ry
ZWFtLT5vYV9idWZmZXIuZm9ybWF0X3NpemU7CiAJdTggKm9hX2J1Zl9iYXNlID0gc3RyZWFtLT5v
YV9idWZmZXIudmFkZHI7CiAJdTMyIGd0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHN0cmVh
bS0+b2FfYnVmZmVyLnZtYSk7Ci0JdTMyIG1hc2sgPSAoT0FfQlVGRkVSX1NJWkUgLSAxKTsKKwl1
MzIgbWFzayA9IChzdHJlYW0tPm9hX2J1ZmZlci52bWEtPnNpemUgLSAxKTsKIAlzaXplX3Qgc3Rh
cnRfb2Zmc2V0ID0gKm9mZnNldDsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCXVuc2lnbmVkIGlu
dCBhZ2VkX3RhaWxfaWR4OwpAQCAtOTg0LDggKzk3NSw4IEBAIHN0YXRpYyBpbnQgZ2VuN19hcHBl
bmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCSAqIG9ubHkg
YmUgaW5jcmVtZW50ZWQgYnkgbXVsdGlwbGVzIG9mIHRoZSByZXBvcnQgc2l6ZSAobm90YWJseSBh
bHNvCiAJICogYWxsIGEgcG93ZXIgb2YgdHdvKS4KIAkgKi8KLQlpZiAoV0FSTl9PTkNFKGhlYWQg
PiBPQV9CVUZGRVJfU0laRSB8fCBoZWFkICUgcmVwb3J0X3NpemUgfHwKLQkJICAgICAgdGFpbCA+
IE9BX0JVRkZFUl9TSVpFIHx8IHRhaWwgJSByZXBvcnRfc2l6ZSwKKwlpZiAoV0FSTl9PTkNFKGhl
YWQgPiBzdHJlYW0tPm9hX2J1ZmZlci52bWEtPnNpemUgfHwgaGVhZCAlIHJlcG9ydF9zaXplIHx8
CisJCSAgICAgIHRhaWwgPiBzdHJlYW0tPm9hX2J1ZmZlci52bWEtPnNpemUgfHwgdGFpbCAlIHJl
cG9ydF9zaXplLAogCQkgICAgICAiSW5jb25zaXN0ZW50IE9BIGJ1ZmZlciBwb2ludGVyczogaGVh
ZCA9ICV1LCB0YWlsID0gJXVcbiIsCiAJCSAgICAgIGhlYWQsIHRhaWwpKQogCQlyZXR1cm4gLUVJ
TzsKQEAgLTEwMDUsNyArOTk2LDcgQEAgc3RhdGljIGludCBnZW43X2FwcGVuZF9vYV9yZXBvcnRz
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJCSAqIGhlcmUgd291bGQgaW1wbHkg
YSBkcml2ZXIgYnVnIHRoYXQgd291bGQgcmVzdWx0CiAJCSAqIGluIGFuIG92ZXJydW4uCiAJCSAq
LwotCQlpZiAoV0FSTl9PTigoT0FfQlVGRkVSX1NJWkUgLSBoZWFkKSA8IHJlcG9ydF9zaXplKSkg
eworCQlpZiAoV0FSTl9PTigoc3RyZWFtLT5vYV9idWZmZXIudm1hLT5zaXplIC0gaGVhZCkgPCBy
ZXBvcnRfc2l6ZSkpIHsKIAkJCURSTV9FUlJPUigiU3B1cmlvdXMgT0EgaGVhZCBwdHI6IG5vbi1p
bnRlZ3JhbCByZXBvcnQgb2Zmc2V0XG4iKTsKIAkJCWJyZWFrOwogCQl9CkBAIC0xNDA4LDcgKzEz
OTksOSBAQCBzdGF0aWMgdm9pZCBnZW43X2luaXRfb2FfYnVmZmVyKHN0cnVjdCBpOTE1X3BlcmZf
c3RyZWFtICpzdHJlYW0pCiAKIAlJOTE1X1dSSVRFKEdFTjdfT0FCVUZGRVIsIGd0dF9vZmZzZXQp
OwogCi0JSTkxNV9XUklURShHRU43X09BU1RBVFVTMSwgZ3R0X29mZnNldCB8IE9BQlVGRkVSX1NJ
WkVfMTZNKTsgLyogdGFpbCAqLworCUk5MTVfV1JJVEUoR0VON19PQVNUQVRVUzEsIGd0dF9vZmZz
ZXQgfAorCQkgICAoKHN0cmVhbS0+b2FfYnVmZmVyLnNpemVfZXhwb25lbnQgLSAxNykgPDwKKwkJ
ICAgIEdFTjdfT0FTVEFUVVMxX0JVRkZFUl9TSVpFX1NISUZUKSk7IC8qIHRhaWwgKi8KIAogCS8q
IE1hcmsgdGhhdCB3ZSBuZWVkIHVwZGF0ZWQgdGFpbCBwb2ludGVycyB0byByZWFkIGZyb20uLi4g
Ki8KIAlzdHJlYW0tPm9hX2J1ZmZlci50YWlsc1swXS5vZmZzZXQgPSBJTlZBTElEX1RBSUxfUFRS
OwpAQCAtMTQzMyw3ICsxNDI2LDcgQEAgc3RhdGljIHZvaWQgZ2VuN19pbml0X29hX2J1ZmZlcihz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCSAqIHRoZSBhc3N1bXB0aW9uIHRoYXQg
bmV3IHJlcG9ydHMgYXJlIGJlaW5nIHdyaXR0ZW4gdG8gemVyb2VkCiAJICogbWVtb3J5Li4uCiAJ
ICovCi0JbWVtc2V0KHN0cmVhbS0+b2FfYnVmZmVyLnZhZGRyLCAwLCBPQV9CVUZGRVJfU0laRSk7
CisJbWVtc2V0KHN0cmVhbS0+b2FfYnVmZmVyLnZhZGRyLCAwLCBzdHJlYW0tPm9hX2J1ZmZlci52
bWEtPnNpemUpOwogCiAJLyogTWF5YmUgbWFrZSAtPnBvbGxpbiBwZXItc3RyZWFtIHN0YXRlIGlm
IHdlIHN1cHBvcnQgbXVsdGlwbGUKIAkgKiBjb25jdXJyZW50IHN0cmVhbXMgaW4gdGhlIGZ1dHVy
ZS4KQEAgLTE0NjQsNyArMTQ1Nyw5IEBAIHN0YXRpYyB2b2lkIGdlbjhfaW5pdF9vYV9idWZmZXIo
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKiAgYml0LiIKIAkgKi8KIAlJOTE1
X1dSSVRFKEdFTjhfT0FCVUZGRVIsIGd0dF9vZmZzZXQgfAotCQkgICBPQUJVRkZFUl9TSVpFXzE2
TSB8IEdFTjhfT0FCVUZGRVJfTUVNX1NFTEVDVF9HR1RUKTsKKwkJICAgKChzdHJlYW0tPm9hX2J1
ZmZlci5zaXplX2V4cG9uZW50IC0gMTcpIDw8CisJCSAgICBHRU44X09BQlVGRkVSX0JVRkZFUl9T
SVpFX1NISUZUKSB8CisJCSAgIEdFTjhfT0FCVUZGRVJfTUVNX1NFTEVDVF9HR1RUKTsKIAlJOTE1
X1dSSVRFKEdFTjhfT0FUQUlMUFRSLCBndHRfb2Zmc2V0ICYgR0VOOF9PQVRBSUxQVFJfTUFTSyk7
CiAKIAkvKiBNYXJrIHRoYXQgd2UgbmVlZCB1cGRhdGVkIHRhaWwgcG9pbnRlcnMgdG8gcmVhZCBm
cm9tLi4uICovCkBAIC0xNDkyLDcgKzE0ODcsNyBAQCBzdGF0aWMgdm9pZCBnZW44X2luaXRfb2Ff
YnVmZmVyKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJICogdGhlIGFzc3VtcHRp
b24gdGhhdCBuZXcgcmVwb3J0cyBhcmUgYmVpbmcgd3JpdHRlbiB0byB6ZXJvZWQKIAkgKiBtZW1v
cnkuLi4KIAkgKi8KLQltZW1zZXQoc3RyZWFtLT5vYV9idWZmZXIudmFkZHIsIDAsIE9BX0JVRkZF
Ul9TSVpFKTsKKwltZW1zZXQoc3RyZWFtLT5vYV9idWZmZXIudmFkZHIsIDAsIHN0cmVhbS0+b2Ff
YnVmZmVyLnZtYS0+c2l6ZSk7CiAKIAkvKgogCSAqIE1heWJlIG1ha2UgLT5wb2xsaW4gcGVyLXN0
cmVhbSBzdGF0ZSBpZiB3ZSBzdXBwb3J0IG11bHRpcGxlCkBAIC0xNTAxLDI0ICsxNDk2LDI1IEBA
IHN0YXRpYyB2b2lkIGdlbjhfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0g
KnN0cmVhbSkKIAlzdHJlYW0tPnBvbGxpbiA9IGZhbHNlOwogfQogCi1zdGF0aWMgaW50IGFsbG9j
X29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQorc3RhdGljIGludCBh
bGxvY19vYV9idWZmZXIoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwgaW50IHNpemVf
ZXhwb25lbnQpCiB7CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKmJvOwogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7CiAJc3RydWN0IGk5
MTVfdm1hICp2bWE7CisJc2l6ZV90IHNpemUgPSAxVSA8PCBzaXplX2V4cG9uZW50OwogCWludCBy
ZXQ7CiAKIAlpZiAoV0FSTl9PTihzdHJlYW0tPm9hX2J1ZmZlci52bWEpKQogCQlyZXR1cm4gLUVO
T0RFVjsKIAorCWlmIChXQVJOX09OKHNpemUgPCBTWl8xMjhLIHx8IHNpemUgPiBTWl8xNk0pKQor
CQlyZXR1cm4gLUVJTlZBTDsKKwogCXJldCA9IGk5MTVfbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxl
KCZkZXZfcHJpdi0+ZHJtKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JQlVJTERfQlVH
X09OX05PVF9QT1dFUl9PRl8yKE9BX0JVRkZFUl9TSVpFKTsKLQlCVUlMRF9CVUdfT04oT0FfQlVG
RkVSX1NJWkUgPCBTWl8xMjhLIHx8IE9BX0JVRkZFUl9TSVpFID4gU1pfMTZNKTsKLQotCWJvID0g
aTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9zaG1lbShkZXZfcHJpdiwgT0FfQlVGRkVSX1NJWkUpOwor
CWJvID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9zaG1lbShkZXZfcHJpdiwgc2l6ZSk7CiAJaWYg
KElTX0VSUihibykpIHsKIAkJRFJNX0VSUk9SKCJGYWlsZWQgdG8gYWxsb2NhdGUgT0EgYnVmZmVy
XG4iKTsKIAkJcmV0ID0gUFRSX0VSUihibyk7CkBAIC0xNTM0LDYgKzE1MzAsNyBAQCBzdGF0aWMg
aW50IGFsbG9jX29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCQln
b3RvIGVycl91bnJlZjsKIAl9CiAJc3RyZWFtLT5vYV9idWZmZXIudm1hID0gdm1hOworCXN0cmVh
bS0+b2FfYnVmZmVyLnNpemVfZXhwb25lbnQgPSBzaXplX2V4cG9uZW50OwogCiAJc3RyZWFtLT5v
YV9idWZmZXIudmFkZHIgPQogCQlpOTE1X2dlbV9vYmplY3RfcGluX21hcChibywgSTkxNV9NQVBf
V0IpOwpAQCAtMTU0Miw5ICsxNTM5LDEwIEBAIHN0YXRpYyBpbnQgYWxsb2Nfb2FfYnVmZmVyKHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJCWdvdG8gZXJyX3VucGluOwogCX0KIAot
CURSTV9ERUJVR19EUklWRVIoIk9BIEJ1ZmZlciBpbml0aWFsaXplZCwgZ3R0IG9mZnNldCA9IDB4
JXgsIHZhZGRyID0gJXBcbiIsCisJRFJNX0RFQlVHX0RSSVZFUigiT0EgQnVmZmVyIGluaXRpYWxp
emVkLCBndHQgb2Zmc2V0ID0gMHgleCwgdmFkZHIgPSAlcCwgc2l6ZSA9ICVsbHVcbiIsCiAJCQkg
aTkxNV9nZ3R0X29mZnNldChzdHJlYW0tPm9hX2J1ZmZlci52bWEpLAotCQkJIHN0cmVhbS0+b2Ff
YnVmZmVyLnZhZGRyKTsKKwkJCSBzdHJlYW0tPm9hX2J1ZmZlci52YWRkciwKKwkJCSBzdHJlYW0t
Pm9hX2J1ZmZlci52bWEtPnNpemUpOwogCiAJZ290byB1bmxvY2s7CiAKQEAgLTIyNTEsNyArMjI0
OSw3IEBAIHN0YXRpYyBpbnQgaTkxNV9vYV9zdHJlYW1faW5pdChzdHJ1Y3QgaTkxNV9wZXJmX3N0
cmVhbSAqc3RyZWFtLAogCXN0cmVhbS0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZk
ZXZfcHJpdi0+cnVudGltZV9wbSk7CiAJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQoJmRldl9w
cml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwogCi0JcmV0ID0gYWxsb2Nfb2FfYnVmZmVyKHN0
cmVhbSk7CisJcmV0ID0gYWxsb2Nfb2FfYnVmZmVyKHN0cmVhbSwgcHJvcHMtPm9hX2J1ZmZlcl9z
aXplX2V4cG9uZW50KTsKIAlpZiAocmV0KQogCQlnb3RvIGVycl9vYV9idWZfYWxsb2M7CiAKQEAg
LTI4MjMsNiArMjgyMSwyNiBAQCBzdGF0aWMgdTY0IG9hX2V4cG9uZW50X3RvX25zKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50IGV4cG9uZW50KQogCQkJIDEwMDBVTEwgKiBS
VU5USU1FX0lORk8oZGV2X3ByaXYpLT5jc190aW1lc3RhbXBfZnJlcXVlbmN5X2toeik7CiB9CiAK
K3N0YXRpYyBpbnQKK3NlbGVjdF9vYV9idWZmZXJfZXhwb25lbnQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsCisJCQkgIHU2NCByZXF1ZXN0ZWRfc2l6ZSkKK3sKKwlpbnQgb3JkZXI7CisK
KwkvKgorCSAqIFdoZW4gbm8gc2l6ZSBpcyBzcGVjaWZpZWQsIHVzZSB0aGUgbGFyZ2VzdCBzaXpl
IHN1cHBvcnRlZCBieSBhbGwKKwkgKiBnZW5lcmF0aW9ucy4KKwkgKi8KKwlpZiAoIXJlcXVlc3Rl
ZF9zaXplKQorCQlyZXR1cm4gb3JkZXJfYmFzZV8yKFNaXzE2TSk7CisKKwlvcmRlciA9IG9yZGVy
X2Jhc2VfMihjbGFtcF90KHU2NCwgcmVxdWVzdGVkX3NpemUsIFNaXzEyOEssIFNaXzE2TSkpOwor
CWlmIChyZXF1ZXN0ZWRfc2l6ZSAhPSAoMVVMIDw8IG9yZGVyKSkKKwkJcmV0dXJuIC1FSU5WQUw7
CisKKwlyZXR1cm4gb3JkZXI7Cit9CisKIC8qKgogICogcmVhZF9wcm9wZXJ0aWVzX3VubG9ja2Vk
IC0gdmFsaWRhdGUgKyBjb3B5IHVzZXJzcGFjZSBzdHJlYW0gb3BlbiBwcm9wZXJ0aWVzCiAgKiBA
ZGV2X3ByaXY6IGk5MTUgZGV2aWNlIGluc3RhbmNlCkBAIC0yOTUwLDYgKzI5NjgsMTQgQEAgc3Rh
dGljIGludCByZWFkX3Byb3BlcnRpZXNfdW5sb2NrZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogCQkJcHJvcHMtPm9hX3BlcmlvZGljID0gdHJ1ZTsKIAkJCXByb3BzLT5vYV9w
ZXJpb2RfZXhwb25lbnQgPSB2YWx1ZTsKIAkJCWJyZWFrOworCQljYXNlIERSTV9JOTE1X1BFUkZf
UFJPUF9PQV9CVUZGRVJfU0laRToKKwkJCXJldCA9IHNlbGVjdF9vYV9idWZmZXJfZXhwb25lbnQo
ZGV2X3ByaXYsIHZhbHVlKTsKKwkJCWlmIChyZXQgPCAwKSB7CisJCQkJRFJNX0RFQlVHKCJPQSBi
dWZmZXIgc2l6ZSBpbnZhbGlkICVsbHVcbiIsIHZhbHVlKTsKKwkJCQlyZXR1cm4gcmV0OworCQkJ
fQorCQkJcHJvcHMtPm9hX2J1ZmZlcl9zaXplX2V4cG9uZW50ID0gcmV0OworCQkJYnJlYWs7CiAJ
CWNhc2UgRFJNX0k5MTVfUEVSRl9QUk9QX01BWDoKIAkJCU1JU1NJTkdfQ0FTRShpZCk7CiAJCQly
ZXR1cm4gLUVJTlZBTDsKQEAgLTI5NTgsNiArMjk4NCwxMiBAQCBzdGF0aWMgaW50IHJlYWRfcHJv
cGVydGllc191bmxvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCXVw
cm9wICs9IDI7CiAJfQogCisJLyogSWYgbm8gYnVmZmVyIHNpemUgd2FzIHJlcXVlc3RlZCwgc2Vs
ZWN0IHRoZSBkZWZhdWx0IG9uZS4gKi8KKwlpZiAoIXByb3BzLT5vYV9idWZmZXJfc2l6ZV9leHBv
bmVudCkgeworCQlwcm9wcy0+b2FfYnVmZmVyX3NpemVfZXhwb25lbnQgPQorCQkJc2VsZWN0X29h
X2J1ZmZlcl9leHBvbmVudChkZXZfcHJpdiwgMCk7CisJfQorCiAJcmV0dXJuIDA7CiB9CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3JlZy5oCmluZGV4IGZmZmFlZDBjYTNjZC4uMTg5Y2ZhMDY2Y2I2IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVnLmgKQEAgLTY1MSwxMiArNjUxLDE0IEBAIHN0YXRpYyBpbmxpbmUg
Ym9vbCBpOTE1X21taW9fcmVnX3ZhbGlkKGk5MTVfcmVnX3QgcmVnKQogI2RlZmluZSBHRU44X09B
QlVGRkVSX1VEVyBfTU1JTygweDIzYjQpCiAjZGVmaW5lIEdFTjhfT0FCVUZGRVIgX01NSU8oMHgy
YjE0KQogI2RlZmluZSAgR0VOOF9PQUJVRkZFUl9NRU1fU0VMRUNUX0dHVFQgICAgICAoMSA8PCAw
KSAgLyogMDogUFBHVFQsIDE6IEdHVFQgKi8KKyNkZWZpbmUgIEdFTjhfT0FCVUZGRVJfQlVGRkVS
X1NJWkVfU0hJRlQgICAgMwogCiAjZGVmaW5lIEdFTjdfT0FTVEFUVVMxIF9NTUlPKDB4MjM2NCkK
ICNkZWZpbmUgIEdFTjdfT0FTVEFUVVMxX1RBSUxfTUFTSwkgICAgMHhmZmZmZmZjMAogI2RlZmlu
ZSAgR0VON19PQVNUQVRVUzFfQ09VTlRFUl9PVkVSRkxPVyAgICAoMSA8PCAyKQogI2RlZmluZSAg
R0VON19PQVNUQVRVUzFfT0FCVUZGRVJfT1ZFUkZMT1cgICAoMSA8PCAxKQogI2RlZmluZSAgR0VO
N19PQVNUQVRVUzFfUkVQT1JUX0xPU1QJICAgICgxIDw8IDApCisjZGVmaW5lICBHRU43X09BU1RB
VFVTMV9CVUZGRVJfU0laRV9TSElGVCAgIDMKIAogI2RlZmluZSBHRU43X09BU1RBVFVTMiBfTU1J
TygweDIzNjgpCiAjZGVmaW5lICBHRU43X09BU1RBVFVTMl9IRUFEX01BU0sgICAgICAgICAgIDB4
ZmZmZmZmYzAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaCBiL2luY2x1
ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAppbmRleCA0NjlkYzUxMmNjYTMuLmY2NjJjNTM0ZGUwYSAx
MDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCisrKyBiL2luY2x1ZGUvdWFw
aS9kcm0vaTkxNV9kcm0uaApAQCAtMTg3Myw2ICsxODczLDEzIEBAIGVudW0gZHJtX2k5MTVfcGVy
Zl9wcm9wZXJ0eV9pZCB7CiAJICovCiAJRFJNX0k5MTVfUEVSRl9QUk9QX09BX0VYUE9ORU5ULAog
CisJLyoqCisJICogU3BlY2lmeSBhIGdsb2JhbCBPQSBidWZmZXIgc2l6ZSB0byBiZSBhbGxvY2F0
ZWQgaW4gYnl0ZXMuIFRoZSBzaXplCisJICogc3BlY2lmaWVkIG11c3QgYmUgc3VwcG9ydGVkIGJ5
IEhXIChjdXJyZW50bHkgc3VwcG9ydGVkIHNpemVzIGFyZQorCSAqIHBvd2VycyBvZiAyIHJhbmdp
bmcgZnJvbSAxMjhLYiB0byAxNk1iKS4KKwkgKi8KKwlEUk1fSTkxNV9QRVJGX1BST1BfT0FfQlVG
RkVSX1NJWkUsCisKIAlEUk1fSTkxNV9QRVJGX1BST1BfTUFYIC8qIG5vbi1BQkkgKi8KIH07CiAK
LS0gCjIuMjEuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
Cmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 604D3A97FD
	for <lists+intel-gfx@lfdr.de>; Thu,  5 Sep 2019 03:20:50 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6B098895E2;
	Thu,  5 Sep 2019 01:20:48 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7C086895E2
 for <intel-gfx@lists.freedesktop.org>; Thu,  5 Sep 2019 01:20:47 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Sep 2019 18:20:46 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,469,1559545200"; d="scan'208";a="199162717"
Received: from mdroper-desk.fm.intel.com ([10.105.128.12])
 by fmsmga001.fm.intel.com with ESMTP; 04 Sep 2019 18:20:46 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  4 Sep 2019 18:20:37 -0700
Message-Id: <20190905012037.7157-1-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Convert ICL-style DSI to use phy
 namespace
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SUNMKyBEU0kgb3V0cHV0cyBvcGVyYXRlIGEgYml0IGRpZmZlcmVudGx5IHRoYW4gRFAvSERNSS9l
RFAgYW5kIGFyZSBtb3JlCmNsb3NlbHkgdGllZCB0byB0aGUgUEhZIHRoYW4gdG8gdGhlIERESS4g
IFNpbmNlIHdlJ3ZlIHNlcGFyYXRlZCBQSFkncwpvdXQgaW50byB0aGVpciBvd24gbmFtZXNwYWNl
IGl0IG1ha2VzIHNlbnNlIHRvIG9wZXJhdGUgb24gJ2VudW0gcGh5Jwp0aHJvdWdob3V0IG1vc3Qg
b2YgdGhlIElDTCBEU0kgY29kZSByYXRoZXIgdGhhbiAnZW51bSBwb3J0JyB3aGljaCB3ZQpnZW5l
cmFsbHkgdXNlIHRvIHJlZmVyIHRvIHRoZSBEREkgdGhlc2UgZGF5cy4gIFBhcnQgb2YgdGhpcyB0
cmFuc2l0aW9uCmhhcyBhbHJlYWR5IGJlZW4gZG9uZSBhcyBwYXJ0IG9mIGNvbW1pdCBkYzg2N2Jj
N2Q4ODcgKCJkcm0vaTkxNS9nZW4xMToKQ29udmVydCBjb21ibyBQSFkgbG9naWMgdG8gdXNlIG5l
dyAnZW51bSBwaHknIG5hbWVzcGFjZSIpLCBhbHRob3VnaCB0aGF0CnBhdGNoIG9ubHkgbWlncmF0
ZWQgdGhlIHBhcnRzIG9mIHRoZSBjb2RlIHRoYXQgd2VyZSBzcGVjaWZpY2FsbHkKdXBkYXRpbmcg
dGhlIGNvbWJvIFBIWSByZWdpc3RlcnMgdGhlbXNlbHZlcy4gIE1vdmluZyB0aGUgcmVzdCBvZiB0
aGUKY29kZSBvdmVyIHRvIHRoZSBQSFkgbmFtZXNwYWNlIGFzIHdlbGwgd2lsbCBob3BlZnVsbHkg
bWFrZSB0aGluZ3MgbW9yZQpjb25zaXN0ZW50IGFuZCBsZXNzIGNvbmZ1c2luZy4KCk5vdGUgdGhh
dCB0aGUgY2hhbmdlIGhlcmUgaXMgcmVhbGx5IGp1c3QgYSBuYW1pbmcgY2hhbmdlLiAgT24gYWxs
IG9mIHRoZQpwbGF0Zm9ybXMgdGhhdCB0aGlzIGNvZGUgY3VycmVudGx5IGFwcGxpZXMgdG8sIHRo
ZSBEU0kgb3V0cHV0cyBhbHdheXMKaGF2ZSBwb3J0PT1waHkgc28gd2UncmUgc3RpbGwgcGFzc2lu
ZyB0aGUgc2FtZSBpbnRlZ2VyIHZhbHVlcyBhcm91bmQgbm8KbWF0dGVyIHdoaWNoIHR5cGUgb2Yg
ZW51bSB0aGV5IGJlbG9uZyB0by4uCgpDYzogSmFuaSBOaWt1bGEgPGphbmkubmlrdWxhQGxpbnV4
LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dCBSb3BlciA8bWF0dGhldy5kLnJvcGVyQGlu
dGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYyAgIHwg
MjM2ICsrKysrKysrKysrKy0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RzaS5oIHwgICA1ICstCiAyIGZpbGVzIGNoYW5nZWQsIDEyNiBpbnNlcnRpb25zKCsp
LCAxMTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pY2xfZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYwpp
bmRleCA2ZTM5OGMzM2E1MjQuLjVjZjMyMDMyZTc5NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pY2xfZHNpLmMKQEAgLTY1LDkgKzY1LDkgQEAgc3RhdGljIHZvaWQgd2FpdF9mb3JfcGF5
bG9hZF9jcmVkaXRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJRFJNX0VS
Uk9SKCJEU0kgcGF5bG9hZCBjcmVkaXRzIG5vdCByZWxlYXNlZFxuIik7CiB9CiAKLXN0YXRpYyBl
bnVtIHRyYW5zY29kZXIgZHNpX3BvcnRfdG9fdHJhbnNjb2RlcihlbnVtIHBvcnQgcG9ydCkKK3N0
YXRpYyBlbnVtIHRyYW5zY29kZXIgZHNpX3BoeV90b190cmFuc2NvZGVyKGVudW0gcGh5IHBoeSkK
IHsKLQlpZiAocG9ydCA9PSBQT1JUX0EpCisJaWYgKHBoeSA9PSBQSFlfQSkKIAkJcmV0dXJuIFRS
QU5TQ09ERVJfRFNJXzA7CiAJZWxzZQogCQlyZXR1cm4gVFJBTlNDT0RFUl9EU0lfMTsKQEAgLTc4
LDIwICs3OCwyMCBAQCBzdGF0aWMgdm9pZCB3YWl0X2Zvcl9jbWRzX2Rpc3BhdGNoZWRfdG9fcGFu
ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVs
X2RzaSAqaW50ZWxfZHNpID0gZW5jX3RvX2ludGVsX2RzaSgmZW5jb2Rlci0+YmFzZSk7CiAJc3Ry
dWN0IG1pcGlfZHNpX2RldmljZSAqZHNpOwotCWVudW0gcG9ydCBwb3J0OworCWVudW0gcGh5IHBo
eTsKIAllbnVtIHRyYW5zY29kZXIgZHNpX3RyYW5zOwogCWludCByZXQ7CiAKIAkvKiB3YWl0IGZv
ciBoZWFkZXIvcGF5bG9hZCBjcmVkaXRzIHRvIGJlIHJlbGVhc2VkICovCi0JZm9yX2VhY2hfZHNp
X3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90
b190cmFuc2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBo
eXMpIHsKKwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCXdhaXRf
Zm9yX2hlYWRlcl9jcmVkaXRzKGRldl9wcml2LCBkc2lfdHJhbnMpOwogCQl3YWl0X2Zvcl9wYXls
b2FkX2NyZWRpdHMoZGV2X3ByaXYsIGRzaV90cmFucyk7CiAJfQogCiAJLyogc2VuZCBub3AgRENT
IGNvbW1hbmQgKi8KLQlmb3JfZWFjaF9kc2lfcG9ydChwb3J0LCBpbnRlbF9kc2ktPnBvcnRzKSB7
Ci0JCWRzaSA9IGludGVsX2RzaS0+ZHNpX2hvc3RzW3BvcnRdLT5kZXZpY2U7CisJZm9yX2VhY2hf
ZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQlkc2kgPSBpbnRlbF9kc2ktPmRzaV9o
b3N0c1twaHldLT5kZXZpY2U7CiAJCWRzaS0+bW9kZV9mbGFncyB8PSBNSVBJX0RTSV9NT0RFX0xQ
TTsKIAkJZHNpLT5jaGFubmVsID0gMDsKIAkJcmV0ID0gbWlwaV9kc2lfZGNzX25vcChkc2kpOwpA
QCAtMTAwLDE0ICsxMDAsMTQgQEAgc3RhdGljIHZvaWQgd2FpdF9mb3JfY21kc19kaXNwYXRjaGVk
X3RvX3BhbmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogCX0KIAogCS8qIHdhaXQg
Zm9yIGhlYWRlciBjcmVkaXRzIHRvIGJlIHJlbGVhc2VkICovCi0JZm9yX2VhY2hfZHNpX3BvcnQo
cG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFu
c2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsK
KwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCXdhaXRfZm9yX2hl
YWRlcl9jcmVkaXRzKGRldl9wcml2LCBkc2lfdHJhbnMpOwogCX0KIAogCS8qIHdhaXQgZm9yIExQ
IFRYIGluIHByb2dyZXNzIGJpdCB0byBiZSBjbGVhcmVkICovCi0JZm9yX2VhY2hfZHNpX3BvcnQo
cG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFu
c2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsK
KwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCWlmICh3YWl0X2Zv
cl91cyghKEk5MTVfUkVBRChEU0lfTFBfTVNHKGRzaV90cmFucykpICYKIAkJCQkgIExQVFhfSU5f
UFJPR1JFU1MpLCAyMCkpCiAJCQlEUk1fRVJST1IoIkxQVFggYml0IG5vdCBjbGVhcmVkXG4iKTsK
QEAgLTExOSw3ICsxMTksNyBAQCBzdGF0aWMgYm9vbCBhZGRfcGF5bGRfdG9fcXVldWUoc3RydWN0
IGludGVsX2RzaV9ob3N0ICpob3N0LCBjb25zdCB1OCAqZGF0YSwKIHsKIAlzdHJ1Y3QgaW50ZWxf
ZHNpICppbnRlbF9kc2kgPSBob3N0LT5pbnRlbF9kc2k7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShpbnRlbF9kc2ktPmJhc2UuYmFzZS5kZXYpOwotCWVudW0g
dHJhbnNjb2RlciBkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKGhvc3QtPnBvcnQp
OworCWVudW0gdHJhbnNjb2RlciBkc2lfdHJhbnMgPSBkc2lfcGh5X3RvX3RyYW5zY29kZXIoaG9z
dC0+cGh5KTsKIAlpbnQgZnJlZV9jcmVkaXRzOwogCWludCBpLCBqOwogCkBAIC0xNDYsNyArMTQ2
LDcgQEAgc3RhdGljIGludCBkc2lfc2VuZF9wa3RfaGRyKHN0cnVjdCBpbnRlbF9kc2lfaG9zdCAq
aG9zdCwKIHsKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kgPSBob3N0LT5pbnRlbF9kc2k7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShpbnRlbF9kc2kt
PmJhc2UuYmFzZS5kZXYpOwotCWVudW0gdHJhbnNjb2RlciBkc2lfdHJhbnMgPSBkc2lfcG9ydF90
b190cmFuc2NvZGVyKGhvc3QtPnBvcnQpOworCWVudW0gdHJhbnNjb2RlciBkc2lfdHJhbnMgPSBk
c2lfcGh5X3RvX3RyYW5zY29kZXIoaG9zdC0+cGh5KTsKIAl1MzIgdG1wOwogCWludCBmcmVlX2Ny
ZWRpdHM7CiAKQEAgLTMwNSw3ICszMDUsNyBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfcHJvZ3Jh
bV9lc2NfY2xrX2RpdihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsK
IAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVy
LT5iYXNlKTsKLQllbnVtIHBvcnQgcG9ydDsKKwllbnVtIHBoeSBwaHk7CiAJdTMyIGJwcCA9IG1p
cGlfZHNpX3BpeGVsX2Zvcm1hdF90b19icHAoaW50ZWxfZHNpLT5waXhlbF9mb3JtYXQpOwogCXUz
MiBhZmVfY2xrX2toejsgLyogOFggQ2xvY2sgKi8KIAl1MzIgZXNjX2Nsa19kaXZfbTsKQEAgLTMx
NSwyOSArMzE1LDI5IEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9wcm9ncmFtX2VzY19jbGtfZGl2
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogCiAJZXNjX2Nsa19kaXZfbSA9IERJVl9S
T1VORF9VUChhZmVfY2xrX2toeiwgRFNJX01BWF9FU0NfQ0xLKTsKIAotCWZvcl9lYWNoX2RzaV9w
b3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJSTkxNV9XUklURShJQ0xfRFNJX0VTQ19D
TEtfRElWKHBvcnQpLAorCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsK
KwkJSTkxNV9XUklURShJQ0xfRFNJX0VTQ19DTEtfRElWKHBoeSksCiAJCQkgICBlc2NfY2xrX2Rp
dl9tICYgSUNMX0VTQ19DTEtfRElWX01BU0spOwotCQlQT1NUSU5HX1JFQUQoSUNMX0RTSV9FU0Nf
Q0xLX0RJVihwb3J0KSk7CisJCVBPU1RJTkdfUkVBRChJQ0xfRFNJX0VTQ19DTEtfRElWKHBoeSkp
OwogCX0KIAotCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJ
STkxNV9XUklURShJQ0xfRFBIWV9FU0NfQ0xLX0RJVihwb3J0KSwKKwlmb3JfZWFjaF9kc2lfcGh5
KHBoeSwgaW50ZWxfZHNpLT5waHlzKSB7CisJCUk5MTVfV1JJVEUoSUNMX0RQSFlfRVNDX0NMS19E
SVYocGh5KSwKIAkJCSAgIGVzY19jbGtfZGl2X20gJiBJQ0xfRVNDX0NMS19ESVZfTUFTSyk7Ci0J
CVBPU1RJTkdfUkVBRChJQ0xfRFBIWV9FU0NfQ0xLX0RJVihwb3J0KSk7CisJCVBPU1RJTkdfUkVB
RChJQ0xfRFBIWV9FU0NfQ0xLX0RJVihwaHkpKTsKIAl9CiB9CiAKIHN0YXRpYyB2b2lkIGdldF9k
c2lfaW9fcG93ZXJfZG9tYWlucyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJ
CQkJICAgICBzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kpCiB7Ci0JZW51bSBwb3J0IHBvcnQ7
CisJZW51bSBwaHkgcGh5OwogCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5w
b3J0cykgewotCQlXQVJOX09OKGludGVsX2RzaS0+aW9fd2FrZXJlZltwb3J0XSk7Ci0JCWludGVs
X2RzaS0+aW9fd2FrZXJlZltwb3J0XSA9CisJZm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2Rz
aS0+cGh5cykgeworCQlXQVJOX09OKGludGVsX2RzaS0+aW9fd2FrZXJlZltwaHldKTsKKwkJaW50
ZWxfZHNpLT5pb193YWtlcmVmW3BoeV0gPQogCQkJaW50ZWxfZGlzcGxheV9wb3dlcl9nZXQoZGV2
X3ByaXYsCi0JCQkJCQlwb3J0ID09IFBPUlRfQSA/CisJCQkJCQlwaHkgPT0gUEhZX0EgPwogCQkJ
CQkJUE9XRVJfRE9NQUlOX1BPUlRfRERJX0FfSU8gOgogCQkJCQkJUE9XRVJfRE9NQUlOX1BPUlRf
RERJX0JfSU8pOwogCX0KQEAgLTM0NywxMyArMzQ3LDEzIEBAIHN0YXRpYyB2b2lkIGdlbjExX2Rz
aV9lbmFibGVfaW9fcG93ZXIoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRl
dik7CiAJc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpID0gZW5jX3RvX2ludGVsX2RzaSgmZW5j
b2Rlci0+YmFzZSk7Ci0JZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5OwogCXUzMiB0bXA7
CiAKLQlmb3JfZWFjaF9kc2lfcG9ydChwb3J0LCBpbnRlbF9kc2ktPnBvcnRzKSB7Ci0JCXRtcCA9
IEk5MTVfUkVBRChJQ0xfRFNJX0lPX01PREVDVEwocG9ydCkpOworCWZvcl9lYWNoX2RzaV9waHko
cGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJdG1wID0gSTkxNV9SRUFEKElDTF9EU0lfSU9fTU9E
RUNUTChwaHkpKTsKIAkJdG1wIHw9IENPTUJPX1BIWV9NT0RFX0RTSTsKLQkJSTkxNV9XUklURShJ
Q0xfRFNJX0lPX01PREVDVEwocG9ydCksIHRtcCk7CisJCUk5MTVfV1JJVEUoSUNMX0RTSV9JT19N
T0RFQ1RMKHBoeSksIHRtcCk7CiAJfQogCiAJZ2V0X2RzaV9pb19wb3dlcl9kb21haW5zKGRldl9w
cml2LCBpbnRlbF9kc2kpOwpAQCAtNDc2LDE3ICs0NzYsMjQgQEAgc3RhdGljIHZvaWQgZ2VuMTFf
ZHNpX2VuYWJsZV9kZGlfYnVmZmVyKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5k
ZXYpOwogCXN0cnVjdCBpbnRlbF9kc2kgKmludGVsX2RzaSA9IGVuY190b19pbnRlbF9kc2koJmVu
Y29kZXItPmJhc2UpOwogCXUzMiB0bXA7Ci0JZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5
OwogCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQl0bXAg
PSBJOTE1X1JFQUQoRERJX0JVRl9DVEwocG9ydCkpOworCS8qCisJICogVGFrZSBub3RlOiBhbHRo
b3VnaCB3ZSB1c3VhbGx5IHVzZSAncG9ydCcgdG8gcmVmZXIgdG8gdGhlIERESSBvbgorCSAqIHBs
YXRmb3JtcyB3aGVyZSB0aGUgRERJIGlzIGRpc3RpbmN0IGZyb20gdGhlIFBIWSwgaXQncyBzdGls
bCBzYWZlIHRvCisJICogdXNlIHRoZSBwaHkgaW5kZXggaGVyZS4gIFRoZSBvbmx5IHBsYXRmb3Jt
IHRoYXQgaGFzIHBvcnQgIT0gcGh5CisJICogc2l0dWF0aW9ucyBpcyBFSEwgYW5kIERTSSBvbiBQ
SFktQSB0aGVyZSBhbHdheXMgdXNlcyBEREktQSwgbmV2ZXIKKwkgKiBEREktRC4KKwkgKi8KKwlm
b3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50ZWxfZHNpLT5waHlzKSB7CisJCXRtcCA9IEk5MTVfUkVB
RChERElfQlVGX0NUTChwaHkpKTsKIAkJdG1wIHw9IERESV9CVUZfQ1RMX0VOQUJMRTsKLQkJSTkx
NV9XUklURShERElfQlVGX0NUTChwb3J0KSwgdG1wKTsKKwkJSTkxNV9XUklURShERElfQlVGX0NU
TChwaHkpLCB0bXApOwogCi0JCWlmICh3YWl0X2Zvcl91cyghKEk5MTVfUkVBRChERElfQlVGX0NU
TChwb3J0KSkgJgorCQlpZiAod2FpdF9mb3JfdXMoIShJOTE1X1JFQUQoRERJX0JVRl9DVEwocGh5
KSkgJgogCQkJCSAgRERJX0JVRl9JU19JRExFKSwKIAkJCQkgIDUwMCkpCi0JCQlEUk1fRVJST1Io
IkRESSBwb3J0OiVjIGJ1ZmZlciBpZGxlXG4iLCBwb3J0X25hbWUocG9ydCkpOworCQkJRFJNX0VS
Uk9SKCJEREkgcG9ydDolYyBidWZmZXIgaWRsZVxuIiwgcGh5X25hbWUocGh5KSk7CiAJfQogfQog
CkBAIC00OTUsMzIgKzUwMiwzMSBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfc2V0dXBfZHBoeV90
aW1pbmdzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBp
bnRlbF9kc2kgKmludGVsX2RzaSA9IGVuY190b19pbnRlbF9kc2koJmVuY29kZXItPmJhc2UpOwog
CXUzMiB0bXA7Ci0JZW51bSBwb3J0IHBvcnQ7CiAJZW51bSBwaHkgcGh5OwogCiAJLyogUHJvZ3Jh
bSBULUlOSVQgbWFzdGVyIHJlZ2lzdGVycyAqLwotCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGlu
dGVsX2RzaS0+cG9ydHMpIHsKLQkJdG1wID0gSTkxNV9SRUFEKElDTF9EU0lfVF9JTklUX01BU1RF
Uihwb3J0KSk7CisJZm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQl0
bXAgPSBJOTE1X1JFQUQoSUNMX0RTSV9UX0lOSVRfTUFTVEVSKHBoeSkpOwogCQl0bXAgJj0gfk1B
U1RFUl9JTklUX1RJTUVSX01BU0s7CiAJCXRtcCB8PSBpbnRlbF9kc2ktPmluaXRfY291bnQ7Ci0J
CUk5MTVfV1JJVEUoSUNMX0RTSV9UX0lOSVRfTUFTVEVSKHBvcnQpLCB0bXApOworCQlJOTE1X1dS
SVRFKElDTF9EU0lfVF9JTklUX01BU1RFUihwaHkpLCB0bXApOwogCX0KIAogCS8qIFByb2dyYW0g
RFBIWSBjbG9jayBsYW5lcyB0aW1pbmdzICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50
ZWxfZHNpLT5wb3J0cykgewotCQlJOTE1X1dSSVRFKERQSFlfQ0xLX1RJTUlOR19QQVJBTShwb3J0
KSwgaW50ZWxfZHNpLT5kcGh5X3JlZyk7CisJZm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2Rz
aS0+cGh5cykgeworCQlJOTE1X1dSSVRFKERQSFlfQ0xLX1RJTUlOR19QQVJBTShwaHkpLCBpbnRl
bF9kc2ktPmRwaHlfcmVnKTsKIAogCQkvKiBzaGFkb3cgcmVnaXN0ZXIgaW5zaWRlIGRpc3BsYXkg
Y29yZSAqLwotCQlJOTE1X1dSSVRFKERTSV9DTEtfVElNSU5HX1BBUkFNKHBvcnQpLCBpbnRlbF9k
c2ktPmRwaHlfcmVnKTsKKwkJSTkxNV9XUklURShEU0lfQ0xLX1RJTUlOR19QQVJBTShwaHkpLCBp
bnRlbF9kc2ktPmRwaHlfcmVnKTsKIAl9CiAKIAkvKiBQcm9ncmFtIERQSFkgZGF0YSBsYW5lcyB0
aW1pbmdzICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewot
CQlJOTE1X1dSSVRFKERQSFlfREFUQV9USU1JTkdfUEFSQU0ocG9ydCksCisJZm9yX2VhY2hfZHNp
X3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQlJOTE1X1dSSVRFKERQSFlfREFUQV9USU1J
TkdfUEFSQU0ocGh5KSwKIAkJCSAgIGludGVsX2RzaS0+ZHBoeV9kYXRhX2xhbmVfcmVnKTsKIAog
CQkvKiBzaGFkb3cgcmVnaXN0ZXIgaW5zaWRlIGRpc3BsYXkgY29yZSAqLwotCQlJOTE1X1dSSVRF
KERTSV9EQVRBX1RJTUlOR19QQVJBTShwb3J0KSwKKwkJSTkxNV9XUklURShEU0lfREFUQV9USU1J
TkdfUEFSQU0ocGh5KSwKIAkJCSAgIGludGVsX2RzaS0+ZHBoeV9kYXRhX2xhbmVfcmVnKTsKIAl9
CiAKQEAgLTUzMiwxNyArNTM4LDE3IEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9zZXR1cF9kcGh5
X3RpbWluZ3Moc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJICovCiAJaWYgKElTX0dF
TihkZXZfcHJpdiwgMTEpKSB7CiAJCWlmIChpbnRlbF9kc2lfYml0cmF0ZShpbnRlbF9kc2kpIDw9
IDgwMDAwMCkgewotCQkJZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykg
ewotCQkJCXRtcCA9IEk5MTVfUkVBRChEUEhZX1RBX1RJTUlOR19QQVJBTShwb3J0KSk7CisJCQlm
b3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50ZWxfZHNpLT5waHlzKSB7CisJCQkJdG1wID0gSTkxNV9S
RUFEKERQSFlfVEFfVElNSU5HX1BBUkFNKHBoeSkpOwogCQkJCXRtcCAmPSB+VEFfU1VSRV9NQVNL
OwogCQkJCXRtcCB8PSBUQV9TVVJFX09WRVJSSURFIHwgVEFfU1VSRSgwKTsKLQkJCQlJOTE1X1dS
SVRFKERQSFlfVEFfVElNSU5HX1BBUkFNKHBvcnQpLCB0bXApOworCQkJCUk5MTVfV1JJVEUoRFBI
WV9UQV9USU1JTkdfUEFSQU0ocGh5KSwgdG1wKTsKIAogCQkJCS8qIHNoYWRvdyByZWdpc3RlciBp
bnNpZGUgZGlzcGxheSBjb3JlICovCi0JCQkJdG1wID0gSTkxNV9SRUFEKERTSV9UQV9USU1JTkdf
UEFSQU0ocG9ydCkpOworCQkJCXRtcCA9IEk5MTVfUkVBRChEU0lfVEFfVElNSU5HX1BBUkFNKHBo
eSkpOwogCQkJCXRtcCAmPSB+VEFfU1VSRV9NQVNLOwogCQkJCXRtcCB8PSBUQV9TVVJFX09WRVJS
SURFIHwgVEFfU1VSRSgwKTsKLQkJCQlJOTE1X1dSSVRFKERTSV9UQV9USU1JTkdfUEFSQU0ocG9y
dCksIHRtcCk7CisJCQkJSTkxNV9XUklURShEU0lfVEFfVElNSU5HX1BBUkFNKHBoeSksIHRtcCk7
CiAJCQl9CiAJCX0KIAl9CkBAIC02MjgsMTEgKzYzNCwxMSBAQCBnZW4xMV9kc2lfY29uZmlndXJl
X3RyYW5zY29kZXIoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVs
X2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKHBpcGVfY29uZmlnLT5iYXNlLmNydGMp
OwogCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfY3J0Yy0+cGlwZTsKIAl1MzIgdG1wOwotCWVudW0g
cG9ydCBwb3J0OworCWVudW0gcGh5IHBoeTsKIAllbnVtIHRyYW5zY29kZXIgZHNpX3RyYW5zOwog
Ci0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJh
bnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5
LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVy
KHBoeSk7CiAJCXRtcCA9IEk5MTVfUkVBRChEU0lfVFJBTlNfRlVOQ19DT05GKGRzaV90cmFucykp
OwogCiAJCWlmIChpbnRlbF9kc2ktPmVvdHBfcGt0KQpAQCAtNzExLDggKzcxNyw4IEBAIGdlbjEx
X2RzaV9jb25maWd1cmVfdHJhbnNjb2RlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
IAogCS8qIGVuYWJsZSBwb3J0IHN5bmMgbW9kZSBpZiBkdWFsIGxpbmsgKi8KIAlpZiAoaW50ZWxf
ZHNpLT5kdWFsX2xpbmspIHsKLQkJZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5w
b3J0cykgewotCQkJZHNpX3RyYW5zID0gZHNpX3BvcnRfdG9fdHJhbnNjb2Rlcihwb3J0KTsKKwkJ
Zm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQkJZHNpX3RyYW5zID0g
ZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCQl0bXAgPSBJOTE1X1JFQUQoVFJBTlNfRERJ
X0ZVTkNfQ1RMMihkc2lfdHJhbnMpKTsKIAkJCXRtcCB8PSBQT1JUX1NZTkNfTU9ERV9FTkFCTEU7
CiAJCQlJOTE1X1dSSVRFKFRSQU5TX0RESV9GVU5DX0NUTDIoZHNpX3RyYW5zKSwgdG1wKTsKQEAg
LTcyMiw4ICs3MjgsOCBAQCBnZW4xMV9kc2lfY29uZmlndXJlX3RyYW5zY29kZXIoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCWNvbmZpZ3VyZV9kdWFsX2xpbmtfbW9kZShlbmNvZGVy
LCBwaXBlX2NvbmZpZyk7CiAJfQogCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNp
LT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOwor
CWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5zID0g
ZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAKIAkJLyogc2VsZWN0IGRhdGEgbGFuZSB3aWR0
aCAqLwogCQl0bXAgPSBJOTE1X1JFQUQoVFJBTlNfRERJX0ZVTkNfQ1RMKGRzaV90cmFucykpOwpA
QCAtNzUzLDggKzc1OSw4IEBAIGdlbjExX2RzaV9jb25maWd1cmVfdHJhbnNjb2RlcihzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl9CiAKIAkvKiB3YWl0IGZvciBsaW5rIHJlYWR5ICov
Ci0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJh
bnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5
LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVy
KHBoeSk7CiAJCWlmICh3YWl0X2Zvcl91cygoSTkxNV9SRUFEKERTSV9UUkFOU19GVU5DX0NPTkYo
ZHNpX3RyYW5zKSkgJgogCQkJCUxJTktfUkVBRFkpLCAyNTAwKSkKIAkJCURSTV9FUlJPUigiRFNJ
IGxpbmsgbm90IHJlYWR5XG4iKTsKQEAgLTc2OSw3ICs3NzUsNyBAQCBnZW4xMV9kc2lfc2V0X3Ry
YW5zY29kZXJfdGltaW5ncyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlzdHJ1Y3Qg
aW50ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVyLT5iYXNlKTsK
IAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9CiAJCQkJCSZw
aXBlX2NvbmZpZy0+YmFzZS5hZGp1c3RlZF9tb2RlOwotCWVudW0gcG9ydCBwb3J0OworCWVudW0g
cGh5IHBoeTsKIAllbnVtIHRyYW5zY29kZXIgZHNpX3RyYW5zOwogCS8qIGhvcml6b250YWwgdGlt
aW5ncyAqLwogCXUxNiBodG90YWwsIGhhY3RpdmUsIGhzeW5jX3N0YXJ0LCBoc3luY19lbmQsIGhz
eW5jX3NpemU7CkBAIC04MDYsOCArODEyLDggQEAgZ2VuMTFfZHNpX3NldF90cmFuc2NvZGVyX3Rp
bWluZ3Moc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCURSTV9FUlJPUigiaGFjdGl2
ZSBwaXhlbHMgYXJlIG5vdCBtdWx0aXBsZSBvZiA0XG4iKTsKIAogCS8qIHByb2dyYW0gVFJBTlNf
SFRPVEFMIHJlZ2lzdGVyICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5w
b3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOworCWZv
cl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5zID0gZHNp
X3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCUk5MTVfV1JJVEUoSFRPVEFMKGRzaV90cmFucyks
CiAJCQkgICAoaGFjdGl2ZSAtIDEpIHwgKChodG90YWwgLSAxKSA8PCAxNikpOwogCX0KQEAgLTgy
OSwxNiArODM1LDE2IEBAIGdlbjExX2RzaV9zZXRfdHJhbnNjb2Rlcl90aW1pbmdzKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJaHN5bmNfZW5kIC89IDI7CiAJCX0KIAotCQlmb3Jf
ZWFjaF9kc2lfcG9ydChwb3J0LCBpbnRlbF9kc2ktPnBvcnRzKSB7Ci0JCQlkc2lfdHJhbnMgPSBk
c2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOworCQlmb3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50
ZWxfZHNpLT5waHlzKSB7CisJCQlkc2lfdHJhbnMgPSBkc2lfcGh5X3RvX3RyYW5zY29kZXIocGh5
KTsKIAkJCUk5MTVfV1JJVEUoSFNZTkMoZHNpX3RyYW5zKSwKIAkJCQkgICAoaHN5bmNfc3RhcnQg
LSAxKSB8ICgoaHN5bmNfZW5kIC0gMSkgPDwgMTYpKTsKIAkJfQogCX0KIAogCS8qIHByb2dyYW0g
VFJBTlNfVlRPVEFMIHJlZ2lzdGVyICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxf
ZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQp
OworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5z
ID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCS8qCiAJCSAqIEZJWE1FOiBQcm9ncmFt
aW5nIHRoaXMgYnkgYXNzdW1pbmcgcHJvZ3Jlc3NpdmUgbW9kZSwgc2luY2UKIAkJICogbm9uLWlu
dGVybGFjZWQgaW5mbyBmcm9tIFZCVCBpcyBub3Qgc2F2ZWQgaW5zaWRlCkBAIC04NTYsOCArODYy
LDggQEAgZ2VuMTFfZHNpX3NldF90cmFuc2NvZGVyX3RpbWluZ3Moc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJCURSTV9FUlJPUigidnN5bmNfc3RhcnQgbGVzcyB0aGFuIHZhY3RpdmVc
biIpOwogCiAJLyogcHJvZ3JhbSBUUkFOU19WU1lOQyByZWdpc3RlciAqLwotCWZvcl9lYWNoX2Rz
aV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJZHNpX3RyYW5zID0gZHNpX3BvcnRf
dG9fdHJhbnNjb2Rlcihwb3J0KTsKKwlmb3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50ZWxfZHNpLT5w
aHlzKSB7CisJCWRzaV90cmFucyA9IGRzaV9waHlfdG9fdHJhbnNjb2RlcihwaHkpOwogCQlJOTE1
X1dSSVRFKFZTWU5DKGRzaV90cmFucyksCiAJCQkgICAodnN5bmNfc3RhcnQgLSAxKSB8ICgodnN5
bmNfZW5kIC0gMSkgPDwgMTYpKTsKIAl9CkBAIC04NjgsMTUgKzg3NCwxNSBAQCBnZW4xMV9kc2lf
c2V0X3RyYW5zY29kZXJfdGltaW5ncyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkg
KiBpbmZvIGF2YWlsYWJsZSBhcyBkZXNjcmliZWQgYWJvdmUuCiAJICogcHJvZ3JhbSBUUkFOU19W
U1lOQ1NISUZUIHJlZ2lzdGVyCiAJICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxf
ZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQp
OworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5z
ID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCUk5MTVfV1JJVEUoVlNZTkNTSElGVChk
c2lfdHJhbnMpLCB2c3luY19zaGlmdCk7CiAJfQogCiAJLyogcHJvZ3JhbSBUUkFOU19WQkxBTksg
cmVnaXN0ZXIsIHNob3VsZCBiZSBzYW1lIGFzIHZ0b3RhbCBwcm9ncmFtbWVkICovCiAJaWYgKElO
VEVMX0dFTihkZXZfcHJpdikgPj0gMTIpIHsKLQkJZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50
ZWxfZHNpLT5wb3J0cykgewotCQkJZHNpX3RyYW5zID0gZHNpX3BvcnRfdG9fdHJhbnNjb2Rlcihw
b3J0KTsKKwkJZm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQkJZHNp
X3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCQlJOTE1X1dSSVRFKFZCTEFO
Syhkc2lfdHJhbnMpLAogCQkJCSAgICh2YWN0aXZlIC0gMSkgfCAoKHZ0b3RhbCAtIDEpIDw8IDE2
KSk7CiAJCX0KQEAgLTg4NywxMiArODkzLDEyIEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9lbmFi
bGVfdHJhbnNjb2RlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsK
IAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVy
LT5iYXNlKTsKLQllbnVtIHBvcnQgcG9ydDsKKwllbnVtIHBoeSBwaHk7CiAJZW51bSB0cmFuc2Nv
ZGVyIGRzaV90cmFuczsKIAl1MzIgdG1wOwogCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50
ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2NvZGVyKHBv
cnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJZHNpX3Ry
YW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCXRtcCA9IEk5MTVfUkVBRChQSVBF
Q09ORihkc2lfdHJhbnMpKTsKIAkJdG1wIHw9IFBJUEVDT05GX0VOQUJMRTsKIAkJSTkxNV9XUklU
RShQSVBFQ09ORihkc2lfdHJhbnMpLCB0bXApOwpAQCAtOTA4LDcgKzkxNCw3IEBAIHN0YXRpYyB2
b2lkIGdlbjExX2RzaV9zZXR1cF90aW1lb3V0cyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
cikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29k
ZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50
ZWxfZHNpKCZlbmNvZGVyLT5iYXNlKTsKLQllbnVtIHBvcnQgcG9ydDsKKwllbnVtIHBoeSBwaHk7
CiAJZW51bSB0cmFuc2NvZGVyIGRzaV90cmFuczsKIAl1MzIgdG1wLCBoc190eF90aW1lb3V0LCBs
cF9yeF90aW1lb3V0LCB0YV90aW1lb3V0LCBkaXZpc29yLCBtdWw7CiAKQEAgLTkyNiw4ICs5MzIs
OCBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfc2V0dXBfdGltZW91dHMoc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXIpCiAJbHBfcnhfdGltZW91dCA9IERJVl9ST1VORF9VUChpbnRlbF9kc2kt
PmxwX3J4X3RpbWVvdXQgKiBtdWwsIGRpdmlzb3IpOwogCXRhX3RpbWVvdXQgPSBESVZfUk9VTkRf
VVAoaW50ZWxfZHNpLT50dXJuX2FybmRfdmFsICogbXVsLCBkaXZpc29yKTsKIAotCWZvcl9lYWNo
X2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJZHNpX3RyYW5zID0gZHNpX3Bv
cnRfdG9fdHJhbnNjb2Rlcihwb3J0KTsKKwlmb3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50ZWxfZHNp
LT5waHlzKSB7CisJCWRzaV90cmFucyA9IGRzaV9waHlfdG9fdHJhbnNjb2RlcihwaHkpOwogCiAJ
CS8qIHByb2dyYW0gaHN0X3R4X3RpbWVvdXQgKi8KIAkJdG1wID0gSTkxNV9SRUFEKERTSV9IU1RY
X1RPKGRzaV90cmFucykpOwpAQCAtOTkwLDE0ICs5OTYsMTQgQEAgc3RhdGljIHZvaWQgZ2VuMTFf
ZHNpX3Bvd2VydXBfcGFuZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7
CiAJc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpID0gZW5jX3RvX2ludGVsX2RzaSgmZW5jb2Rl
ci0+YmFzZSk7CiAJc3RydWN0IG1pcGlfZHNpX2RldmljZSAqZHNpOwotCWVudW0gcG9ydCBwb3J0
OworCWVudW0gcGh5IHBoeTsKIAllbnVtIHRyYW5zY29kZXIgZHNpX3RyYW5zOwogCXUzMiB0bXA7
CiAJaW50IHJldDsKIAogCS8qIHNldCBtYXhpbXVtIHJldHVybiBwYWNrZXQgc2l6ZSAqLwotCWZv
cl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKLQkJZHNpX3RyYW5zID0g
ZHNpX3BvcnRfdG9fdHJhbnNjb2Rlcihwb3J0KTsKKwlmb3JfZWFjaF9kc2lfcGh5KHBoeSwgaW50
ZWxfZHNpLT5waHlzKSB7CisJCWRzaV90cmFucyA9IGRzaV9waHlfdG9fdHJhbnNjb2RlcihwaHkp
OwogCiAJCS8qCiAJCSAqIEZJWE1FOiBUaGlzIHVzZXMgdGhlIG51bWJlciBvZiBEVydzIGN1cnJl
bnRseSBpbiB0aGUgcGF5bG9hZApAQCAtMTAwNyw3ICsxMDEzLDcgQEAgc3RhdGljIHZvaWQgZ2Vu
MTFfZHNpX3Bvd2VydXBfcGFuZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJCXRt
cCAmPSBOVU1CRVJfUlhfUExPQURfRFdfTUFTSzsKIAkJLyogbXVsdGlwbHkgIk51bWJlciBSeCBQ
YXlsb2FkIERXIiBieSA0IHRvIGdldCBtYXggdmFsdWUgKi8KIAkJdG1wID0gdG1wICogNDsKLQkJ
ZHNpID0gaW50ZWxfZHNpLT5kc2lfaG9zdHNbcG9ydF0tPmRldmljZTsKKwkJZHNpID0gaW50ZWxf
ZHNpLT5kc2lfaG9zdHNbcGh5XS0+ZGV2aWNlOwogCQlyZXQgPSBtaXBpX2RzaV9zZXRfbWF4aW11
bV9yZXR1cm5fcGFja2V0X3NpemUoZHNpLCB0bXApOwogCQlpZiAocmV0IDwgMCkKIAkJCURSTV9F
UlJPUigiZXJyb3Igc2V0dGluZyBtYXggcmV0dXJuIHBrdCBzaXplJWRcbiIsIHRtcCk7CkBAIC0x
MDY1LDEyICsxMDcxLDEyIEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9kaXNhYmxlX3RyYW5zY29k
ZXIoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGlu
dGVsX2RzaSAqaW50ZWxfZHNpID0gZW5jX3RvX2ludGVsX2RzaSgmZW5jb2Rlci0+YmFzZSk7Ci0J
ZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5OwogCWVudW0gdHJhbnNjb2RlciBkc2lfdHJh
bnM7CiAJdTMyIHRtcDsKIAotCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9y
dHMpIHsKLQkJZHNpX3RyYW5zID0gZHNpX3BvcnRfdG9fdHJhbnNjb2Rlcihwb3J0KTsKKwlmb3Jf
ZWFjaF9kc2lfcGh5KHBoeSwgaW50ZWxfZHNpLT5waHlzKSB7CisJCWRzaV90cmFucyA9IGRzaV9w
aHlfdG9fdHJhbnNjb2RlcihwaHkpOwogCiAJCS8qIGRpc2FibGUgdHJhbnNjb2RlciAqLwogCQl0
bXAgPSBJOTE1X1JFQUQoUElQRUNPTkYoZHNpX3RyYW5zKSk7CkBAIC0xMTAwLDEzICsxMTA2LDEz
IEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9kZWNvbmZpZ3VyZV90cmFuY29kZXIoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2RzaSAqaW50
ZWxfZHNpID0gZW5jX3RvX2ludGVsX2RzaSgmZW5jb2Rlci0+YmFzZSk7Ci0JZW51bSBwb3J0IHBv
cnQ7CisJZW51bSBwaHkgcGh5OwogCWVudW0gdHJhbnNjb2RlciBkc2lfdHJhbnM7CiAJdTMyIHRt
cDsKIAogCS8qIHB1dCBkc2kgbGluayBpbiBVTFBTICovCi0JZm9yX2VhY2hfZHNpX3BvcnQocG9y
dCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9ydF90b190cmFuc2Nv
ZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJ
ZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCXRtcCA9IEk5MTVfUkVB
RChEU0lfTFBfTVNHKGRzaV90cmFucykpOwogCQl0bXAgfD0gTElOS19FTlRFUl9VTFBTOwogCQl0
bXAgJj0gfkxJTktfVUxQU19UWVBFX0xQMTE7CkBAIC0xMTE5LDggKzExMjUsOCBAQCBzdGF0aWMg
dm9pZCBnZW4xMV9kc2lfZGVjb25maWd1cmVfdHJhbmNvZGVyKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyKQogCX0KIAogCS8qIGRpc2FibGUgZGRpIGZ1bmN0aW9uICovCi0JZm9yX2VhY2hf
ZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBkc2lfcG9y
dF90b190cmFuc2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2kt
PnBoeXMpIHsKKwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7CiAJCXRt
cCA9IEk5MTVfUkVBRChUUkFOU19ERElfRlVOQ19DVEwoZHNpX3RyYW5zKSk7CiAJCXRtcCAmPSB+
VFJBTlNfRERJX0ZVTkNfRU5BQkxFOwogCQlJOTE1X1dSSVRFKFRSQU5TX0RESV9GVU5DX0NUTChk
c2lfdHJhbnMpLCB0bXApOwpAQCAtMTEyOCw4ICsxMTM0LDggQEAgc3RhdGljIHZvaWQgZ2VuMTFf
ZHNpX2RlY29uZmlndXJlX3RyYW5jb2RlcihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikK
IAogCS8qIGRpc2FibGUgcG9ydCBzeW5jIG1vZGUgaWYgZHVhbCBsaW5rICovCiAJaWYgKGludGVs
X2RzaS0+ZHVhbF9saW5rKSB7Ci0JCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+
cG9ydHMpIHsKLQkJCWRzaV90cmFucyA9IGRzaV9wb3J0X3RvX3RyYW5zY29kZXIocG9ydCk7CisJ
CWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJCWRzaV90cmFucyA9
IGRzaV9waHlfdG9fdHJhbnNjb2RlcihwaHkpOwogCQkJdG1wID0gSTkxNV9SRUFEKFRSQU5TX0RE
SV9GVU5DX0NUTDIoZHNpX3RyYW5zKSk7CiAJCQl0bXAgJj0gflBPUlRfU1lOQ19NT0RFX0VOQUJM
RTsKIAkJCUk5MTVfV1JJVEUoVFJBTlNfRERJX0ZVTkNfQ1RMMihkc2lfdHJhbnMpLCB0bXApOwpA
QCAtMTE0MiwxOSArMTE0OCwxOSBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfZGlzYWJsZV9wb3J0
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9k
c2kgKmludGVsX2RzaSA9IGVuY190b19pbnRlbF9kc2koJmVuY29kZXItPmJhc2UpOwogCXUzMiB0
bXA7Ci0JZW51bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5OwogCiAJZ2VuMTFfZHNpX3VuZ2F0
ZV9jbG9ja3MoZW5jb2Rlcik7Ci0JZm9yX2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5w
b3J0cykgewotCQl0bXAgPSBJOTE1X1JFQUQoRERJX0JVRl9DVEwocG9ydCkpOworCWZvcl9lYWNo
X2RzaV9waHkocGh5LCBpbnRlbF9kc2ktPnBoeXMpIHsKKwkJdG1wID0gSTkxNV9SRUFEKERESV9C
VUZfQ1RMKHBoeSkpOwogCQl0bXAgJj0gfkRESV9CVUZfQ1RMX0VOQUJMRTsKLQkJSTkxNV9XUklU
RShERElfQlVGX0NUTChwb3J0KSwgdG1wKTsKKwkJSTkxNV9XUklURShERElfQlVGX0NUTChwaHkp
LCB0bXApOwogCi0JCWlmICh3YWl0X2Zvcl91cygoSTkxNV9SRUFEKERESV9CVUZfQ1RMKHBvcnQp
KSAmCisJCWlmICh3YWl0X2Zvcl91cygoSTkxNV9SRUFEKERESV9CVUZfQ1RMKHBoeSkpICYKIAkJ
CQkgRERJX0JVRl9JU19JRExFKSwKIAkJCQkgOCkpCiAJCQlEUk1fRVJST1IoIkRESSBwb3J0OiVj
IGJ1ZmZlciBub3QgaWRsZVxuIiwKLQkJCQkgIHBvcnRfbmFtZShwb3J0KSk7CisJCQkJICBwaHlf
bmFtZShwaHkpKTsKIAl9CiAJZ2VuMTFfZHNpX2dhdGVfY2xvY2tzKGVuY29kZXIpOwogfQpAQCAt
MTE2MywyNSArMTE2OSwyNSBAQCBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfZGlzYWJsZV9pb19wb3dl
cihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50
ZWxfZHNpICppbnRlbF9kc2kgPSBlbmNfdG9faW50ZWxfZHNpKCZlbmNvZGVyLT5iYXNlKTsKLQll
bnVtIHBvcnQgcG9ydDsKKwllbnVtIHBoeSBwaHk7CiAJdTMyIHRtcDsKIAotCWZvcl9lYWNoX2Rz
aV9wb3J0KHBvcnQsIGludGVsX2RzaS0+cG9ydHMpIHsKKwlmb3JfZWFjaF9kc2lfcGh5KHBoeSwg
aW50ZWxfZHNpLT5waHlzKSB7CiAJCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwogCi0JCXdha2Vy
ZWYgPSBmZXRjaF9hbmRfemVybygmaW50ZWxfZHNpLT5pb193YWtlcmVmW3BvcnRdKTsKKwkJd2Fr
ZXJlZiA9IGZldGNoX2FuZF96ZXJvKCZpbnRlbF9kc2ktPmlvX3dha2VyZWZbcGh5XSk7CiAJCWlu
dGVsX2Rpc3BsYXlfcG93ZXJfcHV0KGRldl9wcml2LAotCQkJCQlwb3J0ID09IFBPUlRfQSA/CisJ
CQkJCXBoeSA9PSBQSFlfQSA/CiAJCQkJCVBPV0VSX0RPTUFJTl9QT1JUX0RESV9BX0lPIDoKIAkJ
CQkJUE9XRVJfRE9NQUlOX1BPUlRfRERJX0JfSU8sCiAJCQkJCXdha2VyZWYpOwogCX0KIAogCS8q
IHNldCBtb2RlIHRvIERESSAqLwotCWZvcl9lYWNoX2RzaV9wb3J0KHBvcnQsIGludGVsX2RzaS0+
cG9ydHMpIHsKLQkJdG1wID0gSTkxNV9SRUFEKElDTF9EU0lfSU9fTU9ERUNUTChwb3J0KSk7CisJ
Zm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgeworCQl0bXAgPSBJOTE1X1JF
QUQoSUNMX0RTSV9JT19NT0RFQ1RMKHBoeSkpOwogCQl0bXAgJj0gfkNPTUJPX1BIWV9NT0RFX0RT
STsKLQkJSTkxNV9XUklURShJQ0xfRFNJX0lPX01PREVDVEwocG9ydCksIHRtcCk7CisJCUk5MTVf
V1JJVEUoSUNMX0RTSV9JT19NT0RFQ1RMKHBoeSksIHRtcCk7CiAJfQogfQogCkBAIC0xMjc4LDcg
KzEyODQsNyBAQCBzdGF0aWMgaW50IGdlbjExX2RzaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlhZGp1c3RlZF9tb2RlLT5mbGFncyA9IDA7CiAKIAkvKiBE
dWFsIGxpbmsgZ29lcyB0byB0cmFuY29kZXIgRFNJJzAnICovCi0JaWYgKGludGVsX2RzaS0+cG9y
dHMgPT0gQklUKFBPUlRfQikpCisJaWYgKGludGVsX2RzaS0+cGh5cyA9PSBCSVQoUEhZX0IpKQog
CQlwaXBlX2NvbmZpZy0+Y3B1X3RyYW5zY29kZXIgPSBUUkFOU0NPREVSX0RTSV8xOwogCWVsc2UK
IAkJcGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyID0gVFJBTlNDT0RFUl9EU0lfMDsKQEAgLTEz
MDMsNyArMTMwOSw3IEBAIHN0YXRpYyBib29sIGdlbjExX2RzaV9nZXRfaHdfc3RhdGUoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVsX2RzaSAqaW50ZWxfZHNpID0g
ZW5jX3RvX2ludGVsX2RzaSgmZW5jb2Rlci0+YmFzZSk7CiAJZW51bSB0cmFuc2NvZGVyIGRzaV90
cmFuczsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQllbnVtIHBvcnQgcG9ydDsKKwllbnVt
IHBoeSBwaHk7CiAJYm9vbCByZXQgPSBmYWxzZTsKIAl1MzIgdG1wOwogCkBAIC0xMzEyLDggKzEz
MTgsOCBAQCBzdGF0aWMgYm9vbCBnZW4xMV9kc2lfZ2V0X2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyLAogCWlmICghd2FrZXJlZikKIAkJcmV0dXJuIGZhbHNlOwogCi0JZm9y
X2VhY2hfZHNpX3BvcnQocG9ydCwgaW50ZWxfZHNpLT5wb3J0cykgewotCQlkc2lfdHJhbnMgPSBk
c2lfcG9ydF90b190cmFuc2NvZGVyKHBvcnQpOworCWZvcl9lYWNoX2RzaV9waHkocGh5LCBpbnRl
bF9kc2ktPnBoeXMpIHsKKwkJZHNpX3RyYW5zID0gZHNpX3BoeV90b190cmFuc2NvZGVyKHBoeSk7
CiAJCXRtcCA9IEk5MTVfUkVBRChUUkFOU19ERElfRlVOQ19DVEwoZHNpX3RyYW5zKSk7CiAJCXN3
aXRjaCAodG1wICYgVFJBTlNfRERJX0VEUF9JTlBVVF9NQVNLKSB7CiAJCWNhc2UgVFJBTlNfRERJ
X0VEUF9JTlBVVF9BX09OOgpAQCAtMTU1Miw2ICsxNTU4LDcgQEAgdm9pZCBpY2xfZHNpX2luaXQo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCXN0cnVjdCBkcm1fY29ubmVjdG9y
ICpjb25uZWN0b3I7CiAJc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmZpeGVkX21vZGU7CiAJZW51
bSBwb3J0IHBvcnQ7CisJZW51bSBwaHkgcGh5OwogCiAJaWYgKCFpbnRlbF9iaW9zX2lzX2RzaV9w
cmVzZW50KGRldl9wcml2LCAmcG9ydCkpCiAJCXJldHVybjsKQEAgLTE2MTMsMjEgKzE2MjAsMjIg
QEAgdm9pZCBpY2xfZHNpX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CWludGVsX3BhbmVsX3NldHVwX2JhY2tsaWdodChjb25uZWN0b3IsIElOVkFMSURfUElQRSk7CiAK
IAlpZiAoZGV2X3ByaXYtPnZidC5kc2kuY29uZmlnLT5kdWFsX2xpbmspCi0JCWludGVsX2RzaS0+
cG9ydHMgPSBCSVQoUE9SVF9BKSB8IEJJVChQT1JUX0IpOworCQlpbnRlbF9kc2ktPnBoeXMgPSBC
SVQoUEhZX0EpIHwgQklUKFBIWV9CKTsKIAllbHNlCi0JCWludGVsX2RzaS0+cG9ydHMgPSBCSVQo
cG9ydCk7CisJCWludGVsX2RzaS0+cGh5cyA9IEJJVChwb3J0KTsgIC8qIHNpbmNlIHBvcnQ9PXBo
eSAqLwogCiAJaW50ZWxfZHNpLT5kY3NfYmFja2xpZ2h0X3BvcnRzID0gZGV2X3ByaXYtPnZidC5k
c2kuYmxfcG9ydHM7CiAJaW50ZWxfZHNpLT5kY3NfY2FiY19wb3J0cyA9IGRldl9wcml2LT52YnQu
ZHNpLmNhYmNfcG9ydHM7CiAKLQlmb3JfZWFjaF9kc2lfcG9ydChwb3J0LCBpbnRlbF9kc2ktPnBv
cnRzKSB7CisJZm9yX2VhY2hfZHNpX3BoeShwaHksIGludGVsX2RzaS0+cGh5cykgewogCQlzdHJ1
Y3QgaW50ZWxfZHNpX2hvc3QgKmhvc3Q7CiAKLQkJaG9zdCA9IGludGVsX2RzaV9ob3N0X2luaXQo
aW50ZWxfZHNpLCAmZ2VuMTFfZHNpX2hvc3Rfb3BzLCBwb3J0KTsKKwkJaG9zdCA9IGludGVsX2Rz
aV9ob3N0X2luaXQoaW50ZWxfZHNpLCAmZ2VuMTFfZHNpX2hvc3Rfb3BzLAorCQkJCQkgICAoZW51
bSBwb3J0KXBoeSk7CiAJCWlmICghaG9zdCkKIAkJCWdvdG8gZXJyOwogCi0JCWludGVsX2RzaS0+
ZHNpX2hvc3RzW3BvcnRdID0gaG9zdDsKKwkJaW50ZWxfZHNpLT5kc2lfaG9zdHNbcGh5XSA9IGhv
c3Q7CiAJfQogCiAJaWYgKCFpbnRlbF9kc2lfdmJ0X2luaXQoaW50ZWxfZHNpLCBNSVBJX0RTSV9H
RU5FUklDX1BBTkVMX0lEKSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kc2kuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNp
LmgKaW5kZXggYjE1YmU1ODE0NTk5Li41ZDA2MTBmYjg1YTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kc2kuaApAQCAtMTI1LDcgKzEyNSwxMCBAQCBzdHJ1Y3QgaW50ZWxf
ZHNpIHsKIHN0cnVjdCBpbnRlbF9kc2lfaG9zdCB7CiAJc3RydWN0IG1pcGlfZHNpX2hvc3QgYmFz
ZTsKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2k7Ci0JZW51bSBwb3J0IHBvcnQ7CisJdW5p
b24geworCQllbnVtIHBvcnQgcG9ydDsJCS8qIFZMViBEU0kgKi8KKwkJZW51bSBwaHkgcGh5OwkJ
LyogSUNMIERTSSAqLworCX07CiAKIAkvKiBvdXIgbGl0dGxlIGhhY2sgKi8KIAlzdHJ1Y3QgbWlw
aV9kc2lfZGV2aWNlICpkZXZpY2U7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 381D170D40
	for <lists+intel-gfx@lfdr.de>; Tue, 23 Jul 2019 01:21:32 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 592E689F47;
	Mon, 22 Jul 2019 23:21:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 16B4F89F4F
 for <intel-gfx@lists.freedesktop.org>; Mon, 22 Jul 2019 23:21:26 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 22 Jul 2019 16:21:25 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,296,1559545200"; d="scan'208";a="188709325"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by fmsmga001.fm.intel.com with ESMTP; 22 Jul 2019 16:21:25 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 22 Jul 2019 16:20:47 -0700
Message-Id: <20190722232048.9970-9-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190722232048.9970-1-daniele.ceraolospurio@intel.com>
References: <20190722232048.9970-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 8/9] drm/i915/uc: Plumb the gt through fw_upload
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIGd0IGlzIG91ciBuZXcgY2VudHJhbCBzdHJ1Y3R1cmUgZm9yIHVjLXJlbGF0ZWQgY29kZSwg
c28gd2UgY2FuIHVzZQp0aGF0IGluc3RlYWQgb2YganVtcGluZyBiYWNrIHRvIGk5MTUgdmlhIHRo
ZSBmdyBvYmplY3QuIFNpbmNlIHdlIGhhdmUgaXQKaW4gdGhlIHVwbG9hZCBmdW5jdGlvbiBpdCBp
cyBlYXN5IHRvIHBhc3MgaXQgdGhyb3VnaCB0aGUgbG93ZXIgbGV2ZWxzIG9mCnRoZSB4ZmVyIHBy
b2Nlc3MgaW5zdGVhZCBvZiBjb250aW51b3NseSBqdW1waW5nIHZpYSB1Y19mdy0+dWMtPmd0LCB3
aGljaAp3aWxsIGFsc28gbWFrZSB0aGluZ3MgYSBiaXQgY2xlYW5lciBmb3IgdGhlIG5leHQgcGF0
Y2guCgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFv
bG9zcHVyaW9AaW50ZWwuY29tPgpDYzogTWljaGFsIFdhamRlY3prbyA8bWljaGFsLndhamRlY3pr
b0BpbnRlbC5jb20+CkNjOiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZncuYyB8IDM1ICsrKysr
KysrKysrLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9odWNf
ZncuYyB8IDMyICsrKysrKysrLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfdWNfZncuYyAgfCAyOSArKysrKysrKysrLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5oICB8ICA4ICsrKystLQogNCBmaWxlcyBjaGFuZ2Vk
LCA0OCBpbnNlcnRpb25zKCspLCA1NiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZncuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3VjL2ludGVsX2d1Y19mdy5jCmluZGV4IDg0MzlhMWZjZmFhZS4uYzliZDU1ZTIzZWVjIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZncuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZncuYwpAQCAtNzMsMTAgKzcz
LDggQEAgdm9pZCBpbnRlbF9ndWNfZndfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMp
CiAJCQkgICBndWNfZndfYmxvYnMsIEFSUkFZX1NJWkUoZ3VjX2Z3X2Jsb2JzKSk7CiB9CiAKLXN0
YXRpYyB2b2lkIGd1Y19wcmVwYXJlX3hmZXIoc3RydWN0IGludGVsX2d1YyAqZ3VjKQorc3RhdGlj
IHZvaWQgZ3VjX3ByZXBhcmVfeGZlcihzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUpCiB7Ci0J
c3RydWN0IGludGVsX2d0ICpndCA9IGd1Y190b19ndChndWMpOwotCXN0cnVjdCBpbnRlbF91bmNv
cmUgKnVuY29yZSA9IGd0LT51bmNvcmU7CiAJdTMyIHNoaW1fZmxhZ3MgPSBHVUNfRElTQUJMRV9T
UkFNX0lOSVRfVE9fWkVST0VTIHwKIAkJCSBHVUNfRU5BQkxFX1JFQURfQ0FDSEVfTE9HSUMgfAog
CQkJIEdVQ19FTkFCTEVfTUlBX0NBQ0hJTkcgfApAQCAtODcsMTIgKzg1LDEyIEBAIHN0YXRpYyB2
b2lkIGd1Y19wcmVwYXJlX3hmZXIoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCS8qIE11c3QgcHJv
Z3JhbSB0aGlzIHJlZ2lzdGVyIGJlZm9yZSBsb2FkaW5nIHRoZSB1Y29kZSB3aXRoIERNQSAqLwog
CWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdVQ19TSElNX0NPTlRST0wsIHNoaW1fZmxhZ3Mp
OwogCi0JaWYgKElTX0dFTjlfTFAoZ3QtPmk5MTUpKQorCWlmIChJU19HRU45X0xQKHVuY29yZS0+
aTkxNSkpCiAJCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjlMUF9HVF9QTV9DT05GSUcs
IEdUX0RPT1JCRUxMX0VOQUJMRSk7CiAJZWxzZQogCQlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3Jl
LCBHRU45X0dUX1BNX0NPTkZJRywgR1RfRE9PUkJFTExfRU5BQkxFKTsKIAotCWlmIChJU19HRU4o
Z3QtPmk5MTUsIDkpKSB7CisJaWYgKElTX0dFTih1bmNvcmUtPmk5MTUsIDkpKSB7CiAJCS8qIERP
UCBDbG9jayBHYXRpbmcgRW5hYmxlIGZvciBHdUMgY2xvY2tzICovCiAJCWludGVsX3VuY29yZV9y
bXcodW5jb3JlLCBHRU43X01JU0NDUENUTCwKIAkJCQkgMCwgR0VOOF9ET1BfQ0xPQ0tfR0FURV9H
VUNfRU5BQkxFKTsKQEAgLTEwMywxMyArMTAxLDEzIEBAIHN0YXRpYyB2b2lkIGd1Y19wcmVwYXJl
X3hmZXIoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogfQogCiAvKiBDb3B5IFJTQSBzaWduYXR1cmUg
ZnJvbSB0aGUgZncgaW1hZ2UgdG8gSFcgZm9yIHZlcmlmaWNhdGlvbiAqLwotc3RhdGljIHZvaWQg
Z3VjX3hmZXJfcnNhKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKK3N0YXRpYyB2b2lkIGd1Y194ZmVy
X3JzYShzdHJ1Y3QgaW50ZWxfdWNfZncgKmd1Y19mdywKKwkJCSBzdHJ1Y3QgaW50ZWxfdW5jb3Jl
ICp1bmNvcmUpCiB7Ci0Jc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3VjX3RvX2d0KGd1
YyktPnVuY29yZTsKIAl1MzIgcnNhW1VPU19SU0FfU0NSQVRDSF9DT1VOVF07CiAJaW50IGk7CiAK
LQlpbnRlbF91Y19md19jb3B5X3JzYSgmZ3VjLT5mdywgcnNhLCBzaXplb2YocnNhKSk7CisJaW50
ZWxfdWNfZndfY29weV9yc2EoZ3VjX2Z3LCByc2EsIHNpemVvZihyc2EpKTsKIAogCWZvciAoaSA9
IDA7IGkgPCBVT1NfUlNBX1NDUkFUQ0hfQ09VTlQ7IGkrKykKIAkJaW50ZWxfdW5jb3JlX3dyaXRl
KHVuY29yZSwgVU9TX1JTQV9TQ1JBVENIKGkpLCByc2FbaV0pOwpAQCAtMTg0LDEwICsxODIsMTAg
QEAgc3RhdGljIGludCBndWNfd2FpdF91Y29kZShzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUp
CiAgKiB0cmFuc2ZlciBiZXR3ZWVuIEdUVCBsb2NhdGlvbnMuIFRoaXMgZnVuY3Rpb25hbGl0eSBp
cyBsZWZ0IG91dCBvZiB0aGUgQVBJCiAgKiBmb3Igbm93IGFzIHRoZXJlIGlzIG5vIG5lZWQgZm9y
IGl0LgogICovCi1zdGF0aWMgaW50IGd1Y194ZmVyX3Vjb2RlKHN0cnVjdCBpbnRlbF9ndWMgKmd1
YykKK3N0YXRpYyBpbnQgZ3VjX3hmZXJfdWNvZGUoc3RydWN0IGludGVsX3VjX2Z3ICpndWNfZncs
CisJCQkgIHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7Ci0Jc3RydWN0IGludGVsX3VuY29yZSAqdW5j
b3JlID0gZ3VjX3RvX2d0KGd1YyktPnVuY29yZTsKLQlzdHJ1Y3QgaW50ZWxfdWNfZncgKmd1Y19m
dyA9ICZndWMtPmZ3OworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IGd0LT51bmNvcmU7
CiAJdW5zaWduZWQgbG9uZyBvZmZzZXQ7CiAKIAkvKgpAQCAtMTk4LDcgKzE5Niw3IEBAIHN0YXRp
YyBpbnQgZ3VjX3hmZXJfdWNvZGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCQkJICAgZ3VjX2Z3
LT5oZWFkZXJfc2l6ZSArIGd1Y19mdy0+dWNvZGVfc2l6ZSk7CiAKIAkvKiBTZXQgdGhlIHNvdXJj
ZSBhZGRyZXNzIGZvciB0aGUgbmV3IGJsb2IgKi8KLQlvZmZzZXQgPSBpbnRlbF91Y19md19nZ3R0
X29mZnNldChndWNfZncpICsgZ3VjX2Z3LT5oZWFkZXJfb2Zmc2V0OworCW9mZnNldCA9IGludGVs
X3VjX2Z3X2dndHRfb2Zmc2V0KGd1Y19mdywgZ3QtPmdndHQpICsgZ3VjX2Z3LT5oZWFkZXJfb2Zm
c2V0OwogCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERNQV9BRERSXzBfTE9XLCBsb3dlcl8z
Ml9iaXRzKG9mZnNldCkpOwogCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIERNQV9BRERSXzBf
SElHSCwgdXBwZXJfMzJfYml0cyhvZmZzZXQpICYgMHhGRkZGKTsKIApAQCAtMjE4LDI2ICsyMTYs
MjUgQEAgc3RhdGljIGludCBndWNfeGZlcl91Y29kZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAv
KgogICogTG9hZCB0aGUgR3VDIGZpcm13YXJlIGJsb2IgaW50byB0aGUgTWludXRlSUEuCiAgKi8K
LXN0YXRpYyBpbnQgZ3VjX2Z3X3hmZXIoc3RydWN0IGludGVsX3VjX2Z3ICpndWNfZncpCitzdGF0
aWMgaW50IGd1Y19md194ZmVyKHN0cnVjdCBpbnRlbF91Y19mdyAqZ3VjX2Z3LCBzdHJ1Y3QgaW50
ZWxfZ3QgKmd0KQogewotCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9IGNvbnRhaW5lcl9vZihndWNf
ZncsIHN0cnVjdCBpbnRlbF9ndWMsIGZ3KTsKLQlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUg
PSBndWNfdG9fZ3QoZ3VjKS0+dW5jb3JlOworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9
IGd0LT51bmNvcmU7CiAJaW50IHJldDsKIAogCUdFTV9CVUdfT04oZ3VjX2Z3LT50eXBlICE9IElO
VEVMX1VDX0ZXX1RZUEVfR1VDKTsKIAogCWludGVsX3VuY29yZV9mb3JjZXdha2VfZ2V0KHVuY29y
ZSwgRk9SQ0VXQUtFX0FMTCk7CiAKLQlndWNfcHJlcGFyZV94ZmVyKGd1Yyk7CisJZ3VjX3ByZXBh
cmVfeGZlcih1bmNvcmUpOwogCiAJLyoKIAkgKiBOb3RlIHRoYXQgR3VDIG5lZWRzIHRoZSBDU1Mg
aGVhZGVyIHBsdXMgdUtlcm5lbCBjb2RlIHRvIGJlIGNvcGllZAogCSAqIGJ5IHRoZSBETUEgZW5n
aW5lIGluIG9uZSBvcGVyYXRpb24sIHdoZXJlYXMgdGhlIFJTQSBzaWduYXR1cmUgaXMKIAkgKiBs
b2FkZWQgdmlhIE1NSU8uCiAJICovCi0JZ3VjX3hmZXJfcnNhKGd1Yyk7CisJZ3VjX3hmZXJfcnNh
KGd1Y19mdywgdW5jb3JlKTsKIAotCXJldCA9IGd1Y194ZmVyX3Vjb2RlKGd1Yyk7CisJcmV0ID0g
Z3VjX3hmZXJfdWNvZGUoZ3VjX2Z3LCBndCk7CiAKIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1
dCh1bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwogCkBAIC0yNTgsNSArMjU1LDUgQEAgc3RhdGljIGlu
dCBndWNfZndfeGZlcihzdHJ1Y3QgaW50ZWxfdWNfZncgKmd1Y19mdykKICAqLwogaW50IGludGVs
X2d1Y19md191cGxvYWQoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewotCXJldHVybiBpbnRlbF91
Y19md191cGxvYWQoJmd1Yy0+ZncsIGd1Y19md194ZmVyKTsKKwlyZXR1cm4gaW50ZWxfdWNfZndf
dXBsb2FkKCZndWMtPmZ3LCBndWNfdG9fZ3QoZ3VjKSwgZ3VjX2Z3X3hmZXIpOwogfQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfaHVjX2Z3LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9odWNfZncuYwppbmRleCAwNmFhMjlmNWJmNDMuLjQx
ZTAzMjE0OWY3ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxf
aHVjX2Z3LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfaHVjX2Z3LmMK
QEAgLTYyLDEwICs2MiwxNyBAQCB2b2lkIGludGVsX2h1Y19md19pbml0X2Vhcmx5KHN0cnVjdCBp
bnRlbF9odWMgKmh1YykKIAkJCSAgIGh1Y19md19ibG9icywgQVJSQVlfU0laRShodWNfZndfYmxv
YnMpKTsKIH0KIAotc3RhdGljIGludCBodWNfeGZlcl91Y29kZShzdHJ1Y3QgaW50ZWxfaHVjICpo
dWMpCisvKioKKyAqIGh1Y19md194ZmVyKCkgLSBETUEncyB0aGUgZmlybXdhcmUKKyAqIEBodWNf
Znc6IHRoZSBmaXJtd2FyZSBkZXNjcmlwdG9yCisgKgorICogVHJhbnNmZXIgdGhlIGZpcm13YXJl
IGltYWdlIHRvIFJBTSBmb3IgZXhlY3V0aW9uIGJ5IHRoZSBtaWNyb2NvbnRyb2xsZXIuCisgKgor
ICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIG5vbi16ZXJvIG9uIGZhaWx1cmUKKyAqLworc3RhdGlj
IGludCBodWNfZndfeGZlcihzdHJ1Y3QgaW50ZWxfdWNfZncgKmh1Y19mdywgc3RydWN0IGludGVs
X2d0ICpndCkKIHsKLQlzdHJ1Y3QgaW50ZWxfdWNfZncgKmh1Y19mdyA9ICZodWMtPmZ3OwotCXN0
cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IGh1Y190b19ndChodWMpLT51bmNvcmU7CisJc3Ry
dWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZ3QtPnVuY29yZTsKIAl1bnNpZ25lZCBsb25nIG9m
ZnNldCA9IDA7CiAJdTMyIHNpemU7CiAJaW50IHJldDsKQEAgLTc1LDcgKzgyLDcgQEAgc3RhdGlj
IGludCBodWNfeGZlcl91Y29kZShzdHJ1Y3QgaW50ZWxfaHVjICpodWMpCiAJaW50ZWxfdW5jb3Jl
X2ZvcmNld2FrZV9nZXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKIAogCS8qIFNldCB0aGUgc291
cmNlIGFkZHJlc3MgZm9yIHRoZSB1Q29kZSAqLwotCW9mZnNldCA9IGludGVsX3VjX2Z3X2dndHRf
b2Zmc2V0KGh1Y19mdykgKworCW9mZnNldCA9IGludGVsX3VjX2Z3X2dndHRfb2Zmc2V0KGh1Y19m
dywgZ3QtPmdndHQpICsKIAkJIGh1Y19mdy0+aGVhZGVyX29mZnNldDsKIAlpbnRlbF91bmNvcmVf
d3JpdGUodW5jb3JlLCBETUFfQUREUl8wX0xPVywKIAkJCSAgIGxvd2VyXzMyX2JpdHMob2Zmc2V0
KSk7CkBAIC0xMDksMjEgKzExNiw2IEBAIHN0YXRpYyBpbnQgaHVjX3hmZXJfdWNvZGUoc3RydWN0
IGludGVsX2h1YyAqaHVjKQogCXJldHVybiByZXQ7CiB9CiAKLS8qKgotICogaHVjX2Z3X3hmZXIo
KSAtIERNQSdzIHRoZSBmaXJtd2FyZQotICogQGh1Y19mdzogdGhlIGZpcm13YXJlIGRlc2NyaXB0
b3IKLSAqCi0gKiBUcmFuc2ZlciB0aGUgZmlybXdhcmUgaW1hZ2UgdG8gUkFNIGZvciBleGVjdXRp
b24gYnkgdGhlIG1pY3JvY29udHJvbGxlci4KLSAqCi0gKiBSZXR1cm46IDAgb24gc3VjY2Vzcywg
bm9uLXplcm8gb24gZmFpbHVyZQotICovCi1zdGF0aWMgaW50IGh1Y19md194ZmVyKHN0cnVjdCBp
bnRlbF91Y19mdyAqaHVjX2Z3KQotewotCXN0cnVjdCBpbnRlbF9odWMgKmh1YyA9IGNvbnRhaW5l
cl9vZihodWNfZncsIHN0cnVjdCBpbnRlbF9odWMsIGZ3KTsKLQotCXJldHVybiBodWNfeGZlcl91
Y29kZShodWMpOwotfQotCiAvKioKICAqIGludGVsX2h1Y19md191cGxvYWQoKSAtIGxvYWQgSHVD
IHVDb2RlIHRvIGRldmljZQogICogQGh1YzogaW50ZWxfaHVjIHN0cnVjdHVyZQpAQCAtMTM4LDUg
KzEzMCw1IEBAIHN0YXRpYyBpbnQgaHVjX2Z3X3hmZXIoc3RydWN0IGludGVsX3VjX2Z3ICpodWNf
ZncpCiAgKi8KIGludCBpbnRlbF9odWNfZndfdXBsb2FkKHN0cnVjdCBpbnRlbF9odWMgKmh1YykK
IHsKLQlyZXR1cm4gaW50ZWxfdWNfZndfdXBsb2FkKCZodWMtPmZ3LCBodWNfZndfeGZlcik7CisJ
cmV0dXJuIGludGVsX3VjX2Z3X3VwbG9hZCgmaHVjLT5mdywgaHVjX3RvX2d0KGh1YyksIGh1Y19m
d194ZmVyKTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVs
X3VjX2Z3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jCmluZGV4
IDNiZjY4Mjg1NDkzYi4uYmI2ZmI2NGMzOTM2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Vj
L2ludGVsX3VjX2Z3LmMKQEAgLTIyNywxMiArMjI3LDEzIEBAIHZvaWQgaW50ZWxfdWNfZndfZmV0
Y2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCXJlbGVhc2VfZmlybXdhcmUo
ZncpOwkJLyogT0sgZXZlbiBpZiBmdyBpcyBOVUxMICovCiB9CiAKLXN0YXRpYyB2b2lkIGludGVs
X3VjX2Z3X2dndHRfYmluZChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KQorc3RhdGljIHZvaWQg
aW50ZWxfdWNfZndfZ2d0dF9iaW5kKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsCisJCQkJICBz
dHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmog
PSB1Y19mdy0+b2JqOwotCXN0cnVjdCBpOTE1X2dndHQgKmdndHQgPSAmdG9faTkxNShvYmotPmJh
c2UuZGV2KS0+Z2d0dDsKKwlzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0ID0gZ3QtPmdndHQ7CiAJc3Ry
dWN0IGk5MTVfdm1hIGR1bW15ID0gewotCQkubm9kZS5zdGFydCA9IGludGVsX3VjX2Z3X2dndHRf
b2Zmc2V0KHVjX2Z3KSwKKwkJLm5vZGUuc3RhcnQgPSBpbnRlbF91Y19md19nZ3R0X29mZnNldCh1
Y19mdywgZ2d0dCksCiAJCS5ub2RlLnNpemUgPSBvYmotPmJhc2Uuc2l6ZSwKIAkJLnBhZ2VzID0g
b2JqLT5tbS5wYWdlcywKIAkJLnZtID0gJmdndHQtPnZtLApAQCAtMjQ3LDExICsyNDgsMTIgQEAg
c3RhdGljIHZvaWQgaW50ZWxfdWNfZndfZ2d0dF9iaW5kKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNf
ZncpCiAJZ2d0dC0+dm0uaW5zZXJ0X2VudHJpZXMoJmdndHQtPnZtLCAmZHVtbXksIEk5MTVfQ0FD
SEVfTk9ORSwgMCk7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3VjX2Z3X2dndHRfdW5iaW5kKHN0
cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpCitzdGF0aWMgdm9pZCBpbnRlbF91Y19md19nZ3R0X3Vu
YmluZChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LAorCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZ3Qg
Kmd0KQogewogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPSB1Y19mdy0+b2JqOwot
CXN0cnVjdCBpOTE1X2dndHQgKmdndHQgPSAmdG9faTkxNShvYmotPmJhc2UuZGV2KS0+Z2d0dDsK
LQl1NjQgc3RhcnQgPSBpbnRlbF91Y19md19nZ3R0X29mZnNldCh1Y19mdyk7CisJc3RydWN0IGk5
MTVfZ2d0dCAqZ2d0dCA9IGd0LT5nZ3R0OworCXU2NCBzdGFydCA9IGludGVsX3VjX2Z3X2dndHRf
b2Zmc2V0KHVjX2Z3LCBnZ3R0KTsKIAogCWdndHQtPnZtLmNsZWFyX3JhbmdlKCZnZ3R0LT52bSwg
c3RhcnQsIG9iai0+YmFzZS5zaXplKTsKIH0KQEAgLTI1OSwxNCArMjYxLDE1IEBAIHN0YXRpYyB2
b2lkIGludGVsX3VjX2Z3X2dndHRfdW5iaW5kKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpCiAv
KioKICAqIGludGVsX3VjX2Z3X3VwbG9hZCAtIGxvYWQgdUMgZmlybXdhcmUgdXNpbmcgY3VzdG9t
IGxvYWRlcgogICogQHVjX2Z3OiB1QyBmaXJtd2FyZQorICogQGd0OiB0aGUgaW50ZWxfZ3Qgc3Ry
dWN0dXJlCiAgKiBAeGZlcjogY3VzdG9tIHVDIGZpcm13YXJlIGxvYWRlciBmdW5jdGlvbgogICoK
ICAqIExvYWRzIHVDIGZpcm13YXJlIHVzaW5nIGN1c3RvbSBsb2FkZXIgYW5kIHVwZGF0ZXMgaW50
ZXJuYWwgZmxhZ3MuCiAgKgogICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIG5vbi16ZXJvIG9uIGZh
aWx1cmUuCiAgKi8KLWludCBpbnRlbF91Y19md191cGxvYWQoc3RydWN0IGludGVsX3VjX2Z3ICp1
Y19mdywKLQkJICAgICAgIGludCAoKnhmZXIpKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpKQor
aW50IGludGVsX3VjX2Z3X3VwbG9hZChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCBzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0LAorCQkgICAgICAgaW50ICgqeGZlcikoc3RydWN0IGludGVsX3VjX2Z3ICp1
Y19mdywgc3RydWN0IGludGVsX2d0ICpndCkpCiB7CiAJaW50IGVycjsKIApAQCAtMjgwLDkgKzI4
Myw5IEBAIGludCBpbnRlbF91Y19md191cGxvYWQoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywK
IAkJcmV0dXJuIC1FTk9FWEVDOwogCiAJLyogQ2FsbCBjdXN0b20gbG9hZGVyICovCi0JaW50ZWxf
dWNfZndfZ2d0dF9iaW5kKHVjX2Z3KTsKLQllcnIgPSB4ZmVyKHVjX2Z3KTsKLQlpbnRlbF91Y19m
d19nZ3R0X3VuYmluZCh1Y19mdyk7CisJaW50ZWxfdWNfZndfZ2d0dF9iaW5kKHVjX2Z3LCBndCk7
CisJZXJyID0geGZlcih1Y19mdywgZ3QpOworCWludGVsX3VjX2Z3X2dndHRfdW5iaW5kKHVjX2Z3
LCBndCk7CiAJaWYgKGVycikKIAkJZ290byBmYWlsOwogCkBAIC0zMzQsMTAgKzMzNyw4IEBAIHZv
aWQgaW50ZWxfdWNfZndfZmluaShzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KQogCWk5MTVfZ2Vt
X29iamVjdF91bnBpbl9wYWdlcyh1Y19mdy0+b2JqKTsKIH0KIAotdTMyIGludGVsX3VjX2Z3X2dn
dHRfb2Zmc2V0KHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncpCit1MzIgaW50ZWxfdWNfZndfZ2d0
dF9vZmZzZXQoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywgc3RydWN0IGk5MTVfZ2d0dCAqZ2d0
dCkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUodWNfZnctPm9i
ai0+YmFzZS5kZXYpOwotCXN0cnVjdCBpOTE1X2dndHQgKmdndHQgPSAmaTkxNS0+Z2d0dDsKIAlz
dHJ1Y3QgZHJtX21tX25vZGUgKm5vZGUgPSAmZ2d0dC0+dWNfZnc7CiAKIAlHRU1fQlVHX09OKCFu
b2RlLT5hbGxvY2F0ZWQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMv
aW50ZWxfdWNfZncuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgK
aW5kZXggMTVjNzYwOTk1YzExLi40MDQzZGE2OWRiNjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvdWMvaW50ZWxfdWNfZncuaApAQCAtMzEsNiArMzEsOCBAQAogCiBzdHJ1Y3QgZHJtX3ByaW50
ZXI7CiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKK3N0cnVjdCBpbnRlbF9ndDsKK3N0cnVjdCBp
OTE1X2dndHQ7CiAKIC8qIEhvbWUgb2YgR3VDLCBIdUMgYW5kIERNQyBmaXJtd2FyZXMgKi8KICNk
ZWZpbmUgSU5URUxfVUNfRklSTVdBUkVfVVJMICJodHRwczovL2dpdC5rZXJuZWwub3JnL3B1Yi9z
Y20vbGludXgva2VybmVsL2dpdC9maXJtd2FyZS9saW51eC1maXJtd2FyZS5naXQvdHJlZS9pOTE1
IgpAQCAtMTk0LDExICsxOTYsMTEgQEAgdm9pZCBpbnRlbF91Y19md19zZWxlY3Qoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUsCiB2b2lkIGludGVsX3VjX2Z3X2ZldGNoKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1LAogCQkgICAgICAgc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdyk7
CiB2b2lkIGludGVsX3VjX2Z3X2NsZWFudXBfZmV0Y2goc3RydWN0IGludGVsX3VjX2Z3ICp1Y19m
dyk7Ci1pbnQgaW50ZWxfdWNfZndfdXBsb2FkKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsCi0J
CSAgICAgICBpbnQgKCp4ZmVyKShzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3KSk7CitpbnQgaW50
ZWxfdWNfZndfdXBsb2FkKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsIHN0cnVjdCBpbnRlbF9n
dCAqZ3QsCisJCSAgICAgICBpbnQgKCp4ZmVyKShzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCBz
dHJ1Y3QgaW50ZWxfZ3QgKmd0KSk7CiBpbnQgaW50ZWxfdWNfZndfaW5pdChzdHJ1Y3QgaW50ZWxf
dWNfZncgKnVjX2Z3KTsKIHZvaWQgaW50ZWxfdWNfZndfZmluaShzdHJ1Y3QgaW50ZWxfdWNfZncg
KnVjX2Z3KTsKLXUzMiBpbnRlbF91Y19md19nZ3R0X29mZnNldChzdHJ1Y3QgaW50ZWxfdWNfZncg
KnVjX2Z3KTsKK3UzMiBpbnRlbF91Y19md19nZ3R0X29mZnNldChzdHJ1Y3QgaW50ZWxfdWNfZncg
KnVjX2Z3LCBzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0KTsKIHZvaWQgaW50ZWxfdWNfZndfY29weV9y
c2Eoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywgdm9pZCAqZHN0LCB1MzIgbWF4X2xlbik7CiB2
b2lkIGludGVsX3VjX2Z3X2R1bXAoY29uc3Qgc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywgc3Ry
dWN0IGRybV9wcmludGVyICpwKTsKIAotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E11EC265DE2
	for <lists+intel-gfx@lfdr.de>; Fri, 11 Sep 2020 12:31:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 27AB489817;
	Fri, 11 Sep 2020 10:31:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 957106E9FC;
 Fri, 11 Sep 2020 10:31:07 +0000 (UTC)
IronPort-SDR: l0NSGrUoYXGR6jc085/17bx1KaeCZjgc6l/aBUbiupfPVHbEcZh+/FJw+LL8itWjAvY6LUwO4P
 71kVT41JrOqQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9740"; a="146463215"
X-IronPort-AV: E=Sophos;i="5.76,414,1592895600"; d="scan'208";a="146463215"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 11 Sep 2020 03:31:07 -0700
IronPort-SDR: p/14fP1O/Ee1+4cv6f00iOtO5A8aSVENG3tAqKN/fNnKy+FKayqovKLhYjhwW7W4S5HrIM6bo6
 tmBRJaJI2j7g==
X-IronPort-AV: E=Sophos;i="5.76,414,1592895600"; d="scan'208";a="334474754"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 11 Sep 2020 03:31:05 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: igt-dev@lists.freedesktop.org
Date: Fri, 11 Sep 2020 12:30:23 +0200
Message-Id: <20200911103039.4574-9-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200911103039.4574-1-janusz.krzysztofik@linux.intel.com>
References: <20200911103039.4574-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v6 08/24] tests/core_hotunplug: Handle
 device close errors
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Micha=C5=82=20Winiarski?= <michal.winiarski@intel.com>,
 intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIHRlc3Qgbm93IGlnbm9yZXMgZGV2aWNlIGNsb3NlIGVycm9ycy4gIFRob3NlIGVycm9ycyBh
cmUgYmVsaWV2ZWQgdG8KaGF2ZSBubyBpbmZsdWVuY2Ugb24gZGV2aWNlIGhlYWx0aCBzbyB0aGVy
ZSBpcyBubyBuZWVkIHRvIHByb2Nlc3MgdGhlbQp0aGUgc2FtZSB3YXkgYXMgd2UgbW9zdGx5IGRv
IG9uIGVycm9ycywgaS5lLiwgbm90aWZ5IENJIGFib3V0IGEgcHJvYmxlbQp2aWEgaWd0X2Fib3J0
LiAgSG93ZXZlciwgdGhvc2UgZXJyb3JzIG1heSBpbmRpY2F0ZSBpc3N1ZXMgd2l0aCB0aGUgdGVz
dAppdHNlbGYuICBNb3Jlb3ZlciwgaW1wYWN0IG9mIHRob3NlIGVycm9ycyBvbiBvcGVyYXRpb25z
IHBlcmZvcm1lZCBieQpzdWJ0ZXN0cywgbGlrZSBkcml2ZXIgdW5iaW5kIG9yIGRldmljZSByZW1v
dmUsIHNob3VsZCBiZSBwZXJjZWl2ZWQgYXMKdW5kZWZpbmVkLiAgVGhlbiwgd2Ugc2hvdWxkIGZh
aWwgYXMgc29vbiBhcyBhIGRldmljZSBvciBkZXZpY2Ugc3lzZnMKbm9kZSBjbG9zZSBlcnJvciBv
Y2N1cnMgaW4gYSBzdWJ0ZXN0IGFuZCBhbHNvIHNraXAgc3Vic2VxdWVudCBzdWJ0ZXN0cy4KSG93
ZXZlciwgb25jZSBhIGRyaXZlciB1bmJpbmQgb3IgZGV2aWNlIHVucGx1ZyBvcGVyYXRpb24gaGFz
IGJlZW4KYXR0ZW1wdGVkIGJ5IGEgc3VidGVzdCwgd2Ugd291bGQgc3RpbGwgbGlrZSB0byBjaGVj
ayB0aGUgZGV2aWNlIGhlYWx0aC4KCldoZW4gaW4gYSBzdWJ0ZXN0LCBzdG9yZSByZXN1bHRzIG9m
IGRldmljZSBjbG9zZSBvcGVyYXRpb25zIGZvciBmdXR1cmUKcmVmZXJlbmNlLiAgUmV1c2UgZmls
ZSBkZXNjcmlwdG9yIGZpZWxkcyBvZiB0aGUgaG90dW5wbHVnIHN0cnVjdHVyZSBmb3IKdGhhdC4g
IFVubGVzcyBpbiBiZXR3ZWVuIG9mIGEgZHJpdmVyIHJlbW92ZSBvciBkZXZpY2UgdW5wbHVnIG9w
ZXJhdGlvbgphbmQgYSBzdWNjZXNzZnVsIGRldmljZSBoZWFsdGggY2hlY2sgY29tcGxldGlvbiwg
ZmFpbCBjdXJyZW50IHRlc3QKc2VjdGlvbiByaWdodCBhZnRlciBhIGRldmljZSBjbG9zZSBlcnJv
ciBvY2N1cnMsIHdhcm4gb3RoZXJ3aXNlLiAgSWYKc3RpbGwgcnVubmluZywgZXhhbWluZSBkZXZp
Y2UgZmlsZSBkZXNjcmlwdG9yIGZpZWxkcyBpbiBzdWJzZXF1ZW50CmlndF9maXh0dXJlIHNlY3Rp
b25zIGFuZCBza2lwIG9uIGVycm9ycy4KCnYyOiBGaXggYSB0eXBvIGluIHBvc3RfaGVhbHRoY2hl
Y2sgZnVuY3Rpb24gbmFtZS4KdjM6IERvbid0IGZhaWwgb24gY2xvc2UgZXJyb3IgYWZ0ZXIgc3Vj
Y2Vzc2Z1bCBoZWFsdGggY2hlY2ssIHdhcm4gb25seSwKICAtIG1vdmUgZHVwbGljYXRlZCBkZXZp
Y2UgY2xvc2UgZXJyb3IgbWVzc2FnZXMgdG8gaGVscGVycy4KdjQ6IEFzc2VydCBkZXZpY2UgZmls
ZSBkZXNjcmlwdG9ycyBjbG9zZWQgY2xlYW5seSBvbiBzdGFydCBvZiBlYWNoCiAgICBzdWJ0ZXN0
Lgp2NTogVXBkYXRlIGRldmljZSBzdGF0dXMgb24gb3BlbiBmb3IgaGVhbHRoIGNoZWNrIGlmIG5v
dCB5ZXQgZGlydHksCiAgLSBtb3ZlIGRldmljZSBjbG9zZSBkZWJ1ZyBtZXNzYWdlcyB0byBoZWxw
ZXIuCgpTaWduZWQtb2ZmLWJ5OiBKYW51c3ogS3J6eXN6dG9maWsgPGphbnVzei5rcnp5c3p0b2Zp
a0BsaW51eC5pbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNaWNoYcWCIFdpbmlhcnNraSA8bWljaGFs
LndpbmlhcnNraUBpbnRlbC5jb20+ICMgdjEKLS0tCiB0ZXN0cy9jb3JlX2hvdHVucGx1Zy5jIHwg
NzYgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tCiAxIGZpbGUgY2hh
bmdlZCwgNTggaW5zZXJ0aW9ucygrKSwgMTggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvdGVz
dHMvY29yZV9ob3R1bnBsdWcuYyBiL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKaW5kZXggNWM5YzRk
OGJmLi41MWRlOTQyYmEgMTAwNjQ0Ci0tLSBhL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMKKysrIGIv
dGVzdHMvY29yZV9ob3R1bnBsdWcuYwpAQCAtNDMsNyArNDMsNyBAQCBzdHJ1Y3QgaG90dW5wbHVn
IHsKIAkJaW50IHN5c2ZzX2RldjsKIAkJaW50IHN5c2ZzX2J1czsKIAkJaW50IHN5c2ZzX2RydjsK
LQl9IGZkOworCX0gZmQ7CS8qID49IDA6IHZhbGlkIGZkLCA9PSAtMTogY2xvc2VkLCA8IC0xOiBj
bG9zZSBmYWlsZWQgKi8KIAljb25zdCBjaGFyICpkZXZfYnVzX2FkZHI7CiAJY29uc3QgY2hhciAq
ZmFpbHVyZTsKIH07CkBAIC02Nyw2ICs2NywyNiBAQCBzdGF0aWMgaW50IGxvY2FsX2RybV9vcGVu
X2RyaXZlcihjb25zdCBjaGFyICp3aGVuLCBjb25zdCBjaGFyICp3aHkpCiAJcmV0dXJuIGZkX2Ry
bTsKIH0KIAorc3RhdGljIGludCBsb2NhbF9jbG9zZShpbnQgZmQsIGNvbnN0IGNoYXIgKndhcm5p
bmcpCit7CisJZXJybm8gPSAwOworCWlmIChpZ3Rfd2Fybl9vbl9mKGNsb3NlKGZkKSwgIiVzXG4i
LCB3YXJuaW5nKSkKKwkJcmV0dXJuIC1lcnJubzsJLyogKG5ldmVyIC0xKSAqLworCisJcmV0dXJu
IC0xOwkvKiBzdWNjZXNzIC0gcmV0dXJuICdjbG9zZWQnICovCit9CisKK3N0YXRpYyBpbnQgY2xv
c2VfZGV2aWNlKGludCBmZF9kcm0sIGNvbnN0IGNoYXIgKndoZW4sIGNvbnN0IGNoYXIgKndoaWNo
KQoreworCWlndF9kZWJ1ZygiJXNjbG9zaW5nICVzZGV2aWNlIGluc3RhbmNlXG4iLCB3aGVuLCB3
aGljaCk7CisJcmV0dXJuIGxvY2FsX2Nsb3NlKGZkX2RybSwgIkRldmljZSBjbG9zZSBmYWlsZWQi
KTsKK30KKworc3RhdGljIGludCBjbG9zZV9zeXNmcyhpbnQgZmRfc3lzZnNfZGV2KQoreworCXJl
dHVybiBsb2NhbF9jbG9zZShmZF9zeXNmc19kZXYsICJEZXZpY2Ugc3lzZnMgbm9kZSBjbG9zZSBm
YWlsZWQiKTsKK30KKwogc3RhdGljIHZvaWQgcHJlcGFyZV9mb3JfdW5iaW5kKHN0cnVjdCBob3R1
bnBsdWcgKnByaXYsIGNoYXIgKmJ1ZiwgaW50IGJ1ZmxlbikKIHsKIAlpbnQgbGVuOwpAQCAtODMs
MTEgKzEwMywxNiBAQCBzdGF0aWMgdm9pZCBwcmVwYXJlX2Zvcl91bmJpbmQoc3RydWN0IGhvdHVu
cGx1ZyAqcHJpdiwgY2hhciAqYnVmLCBpbnQgYnVmbGVuKQogCWlndF9hc3NlcnQocHJpdi0+ZGV2
X2J1c19hZGRyKyspOwogCiAJLyogc3lzZnNfZGV2IG5vIGxvbmdlciBuZWVkZWQgKi8KLQljbG9z
ZShwcml2LT5mZC5zeXNmc19kZXYpOworCXByaXYtPmZkLnN5c2ZzX2RldiA9IGNsb3NlX3N5c2Zz
KHByaXYtPmZkLnN5c2ZzX2Rldik7CisJaWd0X2Fzc2VydF9lcShwcml2LT5mZC5zeXNmc19kZXYs
IC0xKTsKIH0KIAogc3RhdGljIHZvaWQgcHJlcGFyZShzdHJ1Y3QgaG90dW5wbHVnICpwcml2LCBj
aGFyICpidWYsIGludCBidWZsZW4pCiB7CisJLyogYXNzZXJ0IGRldmljZSBmaWxlIGRlc2NyaXB0
b3JzIGNsb3NlZCBjbGVhbmx5IG9uIHN1YnRlc3Qgc3RhcnQgKi8KKwlpZ3RfYXNzZXJ0X2VxKHBy
aXYtPmZkLmRybSwgLTEpOworCWlndF9hc3NlcnRfZXEocHJpdi0+ZmQuc3lzZnNfZGV2LCAtMSk7
CisKIAlwcml2LT5mZC5kcm0gPSBsb2NhbF9kcm1fb3Blbl9kcml2ZXIoIiIsICIgZm9yIHN1YnRl
c3QiKTsKIAogCXByaXYtPmZkLnN5c2ZzX2RldiA9IGlndF9zeXNmc19vcGVuKHByaXYtPmZkLmRy
bSk7CkBAIC0xNDIsNyArMTY3LDcgQEAgc3RhdGljIHZvaWQgZGV2aWNlX3VucGx1ZyhzdHJ1Y3Qg
aG90dW5wbHVnICpwcml2LCBjb25zdCBjaGFyICpwcmVmaXgpCiAJaWd0X3Jlc2V0X3RpbWVvdXQo
KTsKIAlwcml2LT5mYWlsdXJlID0gTlVMTDsKIAotCWNsb3NlKHByaXYtPmZkLnN5c2ZzX2Rldik7
CisJcHJpdi0+ZmQuc3lzZnNfZGV2ID0gY2xvc2Vfc3lzZnMocHJpdi0+ZmQuc3lzZnNfZGV2KTsK
IH0KIAogLyogUmUtZGlzY292ZXIgdGhlIGRldmljZSBieSByZXNjYW5uaW5nIGl0cyBidXMgKi8K
QEAgLTE2MSw2ICsxODYsOCBAQCBzdGF0aWMgdm9pZCBidXNfcmVzY2FuKHN0cnVjdCBob3R1bnBs
dWcgKnByaXYpCiAKIHN0YXRpYyB2b2lkIGhlYWx0aGNoZWNrKHN0cnVjdCBob3R1bnBsdWcgKnBy
aXYpCiB7CisJLyogcHJlc2VydmUgcG90ZW50aWFsbHkgZGlydHkgZGV2aWNlIHN0YXR1cyBzdG9y
ZWQgaW4gcHJpdi0+ZmQuZHJtICovCisJYm9vbCBjbG9zZWQgPSBwcml2LT5mZC5kcm0gPT0gLTE7
CiAJaW50IGZkX2RybTsKIAogCS8qIGRldmljZSBuYW1lIG1heSBoYXZlIGNoYW5nZWQsIHJlYnVp
bGQgSUdUIGRldmljZSBsaXN0ICovCkBAIC0xNjgsNiArMTk1LDggQEAgc3RhdGljIHZvaWQgaGVh
bHRoY2hlY2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAogCXByaXYtPmZhaWx1cmUgPSAiRGV2
aWNlIHJlb3BlbiBmYWlsdXJlISI7CiAJZmRfZHJtID0gbG9jYWxfZHJtX29wZW5fZHJpdmVyKCJy
ZSIsICIgZm9yIGhlYWx0aCBjaGVjayIpOworCWlmIChjbG9zZWQpCS8qIHN0b3JlIGZkIGZvciBw
b3N0X2hlYWx0aGNoZWNrIGlmIG5vdCBkaXJ0eSAqLworCQlwcml2LT5mZC5kcm0gPSBmZF9kcm07
CiAJcHJpdi0+ZmFpbHVyZSA9IE5VTEw7CiAKIAlpZiAoaXNfaTkxNV9kZXZpY2UoZmRfZHJtKSkg
ewpAQCAtMTc2LDcgKzIwNSwxNyBAQCBzdGF0aWMgdm9pZCBoZWFsdGhjaGVjayhzdHJ1Y3QgaG90
dW5wbHVnICpwcml2KQogCQlwcml2LT5mYWlsdXJlID0gTlVMTDsKIAl9CiAKLQljbG9zZShmZF9k
cm0pOworCWZkX2RybSA9IGNsb3NlX2RldmljZShmZF9kcm0sICIiLCAiaGVhbHRoIGNoZWNrZWQg
Iik7CisJaWYgKGNsb3NlZCB8fCBmZF9kcm0gPCAtMSkJLyogdXBkYXRlIHN0YXR1cyBmb3IgcG9z
dF9oZWFsdGhjaGVjayAqLworCQlwcml2LT5mZC5kcm0gPSBmZF9kcm07Cit9CisKK3N0YXRpYyB2
b2lkIHBvc3RfaGVhbHRoY2hlY2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKK3sKKwlpZ3RfYWJv
cnRfb25fZihwcml2LT5mYWlsdXJlLCAiJXNcbiIsIHByaXYtPmZhaWx1cmUpOworCisJaWd0X3Jl
cXVpcmUocHJpdi0+ZmQuZHJtID09IC0xKTsKKwlpZ3RfcmVxdWlyZShwcml2LT5mZC5zeXNmc19k
ZXYgPT0gLTEpOwogfQogCiBzdGF0aWMgdm9pZCBzZXRfZmlsdGVyX2Zyb21fZGV2aWNlKGludCBm
ZCkKQEAgLTIwMiw4ICsyNDEsOCBAQCBzdGF0aWMgdm9pZCB1bmJpbmRfcmViaW5kKHN0cnVjdCBo
b3R1bnBsdWcgKnByaXYpCiAKIAlwcmVwYXJlKHByaXYsIGJ1Ziwgc2l6ZW9mKGJ1ZikpOwogCi0J
aWd0X2RlYnVnKCJjbG9zaW5nIHRoZSBkZXZpY2VcbiIpOwotCWNsb3NlKHByaXYtPmZkLmRybSk7
CisJcHJpdi0+ZmQuZHJtID0gY2xvc2VfZGV2aWNlKHByaXYtPmZkLmRybSwgIiIsICJleGVyY2lz
ZWQgIik7CisJaWd0X2Fzc2VydF9lcShwcml2LT5mZC5kcm0sIC0xKTsKIAogCWRyaXZlcl91bmJp
bmQocHJpdiwgIiIpOwogCkBAIC0yMTYsOCArMjU1LDggQEAgc3RhdGljIHZvaWQgdW5wbHVnX3Jl
c2NhbihzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogewogCXByZXBhcmUocHJpdiwgTlVMTCwgMCk7
CiAKLQlpZ3RfZGVidWcoImNsb3NpbmcgdGhlIGRldmljZVxuIik7Ci0JY2xvc2UocHJpdi0+ZmQu
ZHJtKTsKKwlwcml2LT5mZC5kcm0gPSBjbG9zZV9kZXZpY2UocHJpdi0+ZmQuZHJtLCAiIiwgImV4
ZXJjaXNlZCAiKTsKKwlpZ3RfYXNzZXJ0X2VxKHByaXYtPmZkLmRybSwgLTEpOwogCiAJZGV2aWNl
X3VucGx1Zyhwcml2LCAiIik7CiAKQEAgLTIzNiw4ICsyNzUsNyBAQCBzdGF0aWMgdm9pZCBob3R1
bmJpbmRfbGF0ZWNsb3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiAKIAlkcml2ZXJfYmluZChw
cml2KTsKIAotCWlndF9kZWJ1ZygibGF0ZSBjbG9zaW5nIHRoZSB1bmJvdW5kIGRldmljZSBpbnN0
YW5jZVxuIik7Ci0JY2xvc2UocHJpdi0+ZmQuZHJtKTsKKwlwcml2LT5mZC5kcm0gPSBjbG9zZV9k
ZXZpY2UocHJpdi0+ZmQuZHJtLCAibGF0ZSAiLCAidW5ib3VuZCAiKTsKIAogCWhlYWx0aGNoZWNr
KHByaXYpOwogfQpAQCAtMjUwLDggKzI4OCw3IEBAIHN0YXRpYyB2b2lkIGhvdHVucGx1Z19sYXRl
Y2xvc2Uoc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAogCWJ1c19yZXNjYW4ocHJpdik7CiAKLQlp
Z3RfZGVidWcoImxhdGUgY2xvc2luZyB0aGUgcmVtb3ZlZCBkZXZpY2UgaW5zdGFuY2VcbiIpOwot
CWNsb3NlKHByaXYtPmZkLmRybSk7CisJcHJpdi0+ZmQuZHJtID0gY2xvc2VfZGV2aWNlKHByaXYt
PmZkLmRybSwgImxhdGUgIiwgInJlbW92ZWQgIik7CiAKIAloZWFsdGhjaGVjayhwcml2KTsKIH0K
QEAgLTI2MCw3ICsyOTcsMTAgQEAgc3RhdGljIHZvaWQgaG90dW5wbHVnX2xhdGVjbG9zZShzdHJ1
Y3QgaG90dW5wbHVnICpwcml2KQogCiBpZ3RfbWFpbgogewotCXN0cnVjdCBob3R1bnBsdWcgcHJp
diA9IHsgLmZhaWx1cmUgPSBOVUxMLCB9OworCXN0cnVjdCBob3R1bnBsdWcgcHJpdiA9IHsKKwkJ
LmZkCQk9IHsgLmRybSA9IC0xLCAuc3lzZnNfZGV2ID0gLTEsIH0sCisJCS5mYWlsdXJlCT0gTlVM
TCwKKwl9OwogCiAJaWd0X2ZpeHR1cmUgewogCQlpbnQgZmRfZHJtOwpAQCAtMjc2LDcgKzMxNiw3
IEBAIGlndF9tYWluCiAJCS8qIE1ha2Ugc3VyZSBzdWJ0ZXN0cyBhbHdheXMgcmVvcGVuIHRoZSBz
YW1lIGRldmljZSAqLwogCQlzZXRfZmlsdGVyX2Zyb21fZGV2aWNlKGZkX2RybSk7CiAKLQkJY2xv
c2UoZmRfZHJtKTsKKwkJaWd0X2Fzc2VydF9lcShjbG9zZV9kZXZpY2UoZmRfZHJtLCAiIiwgInNl
bGVjdGVkICIpLCAtMSk7CiAJfQogCiAJaWd0X2Rlc2NyaWJlKCJDaGVjayBpZiB0aGUgZHJpdmVy
IGNhbiBiZSBjbGVhbmx5IHVuYm91bmQgZnJvbSBhIGRldmljZSBiZWxpZXZlZCB0byBiZSBjbG9z
ZWQiKTsKQEAgLTI4NCwyNiArMzI0LDI2IEBAIGlndF9tYWluCiAJCXVuYmluZF9yZWJpbmQoJnBy
aXYpOwogCiAJaWd0X2ZpeHR1cmUKLQkJaWd0X2Fib3J0X29uX2YocHJpdi5mYWlsdXJlLCAiJXNc
biIsIHByaXYuZmFpbHVyZSk7CisJCXBvc3RfaGVhbHRoY2hlY2soJnByaXYpOwogCiAJaWd0X2Rl
c2NyaWJlKCJDaGVjayBpZiBhIGRldmljZSBiZWxpZXZlZCB0byBiZSBjbG9zZWQgY2FuIGJlIGNs
ZWFubHkgdW5wbHVnZ2VkIik7CiAJaWd0X3N1YnRlc3QoInVucGx1Zy1yZXNjYW4iKQogCQl1bnBs
dWdfcmVzY2FuKCZwcml2KTsKIAogCWlndF9maXh0dXJlCi0JCWlndF9hYm9ydF9vbl9mKHByaXYu
ZmFpbHVyZSwgIiVzXG4iLCBwcml2LmZhaWx1cmUpOworCQlwb3N0X2hlYWx0aGNoZWNrKCZwcml2
KTsKIAogCWlndF9kZXNjcmliZSgiQ2hlY2sgaWYgdGhlIGRyaXZlciBjYW4gYmUgY2xlYW5seSB1
bmJvdW5kIGZyb20gYSBzdGlsbCBvcGVuIGRldmljZSwgdGhlbiByZWxlYXNlZCIpOwogCWlndF9z
dWJ0ZXN0KCJob3R1bmJpbmQtbGF0ZWNsb3NlIikKIAkJaG90dW5iaW5kX2xhdGVjbG9zZSgmcHJp
dik7CiAKIAlpZ3RfZml4dHVyZQotCQlpZ3RfYWJvcnRfb25fZihwcml2LmZhaWx1cmUsICIlc1xu
IiwgcHJpdi5mYWlsdXJlKTsKKwkJcG9zdF9oZWFsdGhjaGVjaygmcHJpdik7CiAKIAlpZ3RfZGVz
Y3JpYmUoIkNoZWNrIGlmIGEgc3RpbGwgb3BlbiBkZXZpY2UgY2FuIGJlIGNsZWFubHkgdW5wbHVn
Z2VkLCB0aGVuIHJlbGVhc2VkIik7CiAJaWd0X3N1YnRlc3QoImhvdHVucGx1Zy1sYXRlY2xvc2Ui
KQogCQlob3R1bnBsdWdfbGF0ZWNsb3NlKCZwcml2KTsKIAogCWlndF9maXh0dXJlCi0JCWlndF9h
Ym9ydF9vbl9mKHByaXYuZmFpbHVyZSwgIiVzXG4iLCBwcml2LmZhaWx1cmUpOworCQlwb3N0X2hl
YWx0aGNoZWNrKCZwcml2KTsKIH0KLS0gCjIuMjEuMQoKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

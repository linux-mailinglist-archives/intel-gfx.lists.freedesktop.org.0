Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C1363109F3B
	for <lists+intel-gfx@lfdr.de>; Tue, 26 Nov 2019 14:23:36 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 245C16E3BB;
	Tue, 26 Nov 2019 13:23:35 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id ABE3C6E3BB
 for <intel-gfx@lists.freedesktop.org>; Tue, 26 Nov 2019 13:23:33 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19344423-1500050 
 for multiple; Tue, 26 Nov 2019 13:23:28 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 26 Nov 2019 13:23:23 +0000
Message-Id: <20191126132323.2672198-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/gem: Excise the per-batch whitelist
 from the context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T25lIGRvZXMgbm90IGxpZ2h0bHkgYWRkIGEgbmV3IGhpZGRlbiBzdHJ1Y3RfbXV0ZXggZGVwZW5k
ZW5jeSBkZWVwIHdpdGhpbgp0aGUgZXhlY2J1ZiBib3dlbHMhIFRoZSBpbW1lZGlhdGUgc3VzcGlj
aW9uIGluIHNlZWluZyB0aGUgd2hpdGVsaXN0CmNhY2hlZCBvbiB0aGUgY29udGV4dCwgaXMgdGhh
dCBpdCBpcyBpbnRlbmRlZCB0byBiZSBwcmVzZXJ2ZWQgYmV0d2VlbgpiYXRjaGVzLCBhcyB0aGUg
a2VybmVsIGlzIHF1aXRlIGFkZXB0IGF0IGNhY2hpbmcgc21hbGwgYWxsb2NhdGlvbnMKaXRzZWxm
LiBCdXQgbm8sIGl0J3Mgc29sZSBwdXJwb3NlIGlzIHRvIHNlcmlhbGlzZSBjb21tYW5kIHN1Ym1p
c3Npb24gaW4Kb3JkZXIgdG8gc2F2ZSBhIGttYWxsb2Mgb24gYSBzbG93LCBzbG93IHBhdGghCgpC
eSByZW1vdmluZyB0aGUgd2hpdGVsaXN0IGRlcGVuZGVuY3kgZnJvbSB0aGUgY29udGV4dCwgb3Vy
IGZyZWVkb20gdG8KY2hvcCB0aGUgYmlnIHN0cnVjdF9tdXRleCBpcyBncmVhdGx5IGF1Z21lbnRl
ZC4KCnYyOiBzL3NldF9iaXQvX19zZXRfYml0LyBhcyB0aGUgd2hpdGVsaXN0IHNoYWxsIG5ldmVy
IGJlIGFjY2Vzc2VkCmNvbmN1cnJlbnRseS4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1
bGluQGludGVsLmNvbT4KQ2M6IEpvb25hcyBMYWh0aW5lbiA8am9vbmFzLmxhaHRpbmVuQGxpbnV4
LmludGVsLmNvbT4KQ2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwu
Y29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgICB8
ICA1IC0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmggfCAg
NyAtLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMgICAgICAgIHwgNjUg
KysrKysrKy0tLS0tLS0tLS0tLQogMyBmaWxlcyBjaGFuZ2VkLCAyNSBpbnNlcnRpb25zKCspLCA1
MiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRl
eHQuYwppbmRleCBjOTRhYzgzODQwMWEuLmExNzllMTcwYzkzNiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCkBAIC0yNzUsOCArMjc1LDYgQEAgc3RhdGlj
IHZvaWQgaTkxNV9nZW1fY29udGV4dF9mcmVlKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgp
CiAJZnJlZV9lbmdpbmVzKHJjdV9hY2Nlc3NfcG9pbnRlcihjdHgtPmVuZ2luZXMpKTsKIAltdXRl
eF9kZXN0cm95KCZjdHgtPmVuZ2luZXNfbXV0ZXgpOwogCi0Ja2ZyZWUoY3R4LT5qdW1wX3doaXRl
bGlzdCk7Ci0KIAlpZiAoY3R4LT50aW1lbGluZSkKIAkJaW50ZWxfdGltZWxpbmVfcHV0KGN0eC0+
dGltZWxpbmUpOwogCkBAIC01ODQsOSArNTgyLDYgQEAgX19jcmVhdGVfY29udGV4dChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShjdHgt
PmhhbmdfdGltZXN0YW1wKTsgaSsrKQogCQljdHgtPmhhbmdfdGltZXN0YW1wW2ldID0gamlmZmll
cyAtIENPTlRFWFRfRkFTVF9IQU5HX0pJRkZJRVM7CiAKLQljdHgtPmp1bXBfd2hpdGVsaXN0ID0g
TlVMTDsKLQljdHgtPmp1bXBfd2hpdGVsaXN0X2NtZHMgPSAwOwotCiAJc3Bpbl9sb2NrKCZpOTE1
LT5nZW0uY29udGV4dHMubG9jayk7CiAJbGlzdF9hZGRfdGFpbCgmY3R4LT5saW5rLCAmaTkxNS0+
Z2VtLmNvbnRleHRzLmxpc3QpOwogCXNwaW5fdW5sb2NrKCZpOTE1LT5nZW0uY29udGV4dHMubG9j
ayk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4
dF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlw
ZXMuaAppbmRleCBjMDYwYmM0MjhmNDkuLjY5ZGY1NDU5YzM1MCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCkBAIC0xNjgsMTMgKzE2
OCw2IEBAIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0IHsKIAkgKi8KIAlzdHJ1Y3QgcmFkaXhfdHJl
ZV9yb290IGhhbmRsZXNfdm1hOwogCi0JLyoqIGp1bXBfd2hpdGVsaXN0OiBCaXQgYXJyYXkgZm9y
IHRyYWNraW5nIGNtZHMgZHVyaW5nIGNtZHBhcnNpbmcKLQkgKiAgR3VhcmRlZCBieSBzdHJ1Y3Rf
bXV0ZXgKLQkgKi8KLQl1bnNpZ25lZCBsb25nICpqdW1wX3doaXRlbGlzdDsKLQkvKioganVtcF93
aGl0ZWxpc3RfY21kczogTm8gb2YgY21kIHNsb3RzIGF2YWlsYWJsZSAqLwotCXUzMiBqdW1wX3do
aXRlbGlzdF9jbWRzOwotCiAJLyoqCiAJICogQG5hbWU6IGFyYml0cmFyeSBuYW1lLCB1c2VkIGZv
ciB1c2VyIGRlYnVnCiAJICoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Y21kX3BhcnNlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMKaW5k
ZXggZjI0MDk2ZTI3YmVmLi4xZDJhM2I2NTY2MDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfY21kX3BhcnNlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Y21kX3BhcnNlci5jCkBAIC0xMzEwLDEzICsxMzEwLDE0IEBAIHN0YXRpYyBpbnQgY2hlY2tfYmJz
dGFydChjb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCQkJIHUzMiAqY21kLCB1
MzIgb2Zmc2V0LCB1MzIgbGVuZ3RoLAogCQkJIHUzMiBiYXRjaF9sZW4sCiAJCQkgdTY0IGJhdGNo
X3N0YXJ0LAotCQkJIHU2NCBzaGFkb3dfYmF0Y2hfc3RhcnQpCisJCQkgdTY0IHNoYWRvd19iYXRj
aF9zdGFydCwKKwkJCSB1bnNpZ25lZCBsb25nICpqdW1wX3doaXRlbGlzdCkKIHsKIAl1NjQganVt
cF9vZmZzZXQsIGp1bXBfdGFyZ2V0OwogCXUzMiB0YXJnZXRfY21kX29mZnNldCwgdGFyZ2V0X2Nt
ZF9pbmRleDsKIAogCS8qIEZvciBpZ3QgY29tcGF0aWJpbGl0eSBvbiBvbGRlciBwbGF0Zm9ybXMg
Ki8KLQlpZiAoQ01EUEFSU0VSX1VTRVNfR0dUVChjdHgtPmk5MTUpKSB7CisJaWYgKCFqdW1wX3do
aXRlbGlzdCkgewogCQlEUk1fREVCVUcoIkNNRDogUmVqZWN0aW5nIEJCX1NUQVJUIGZvciBnZ3R0
IGJhc2VkIHN1Ym1pc3Npb25cbiIpOwogCQlyZXR1cm4gLUVBQ0NFUzsKIAl9CkBAIC0xMzUyLDEw
ICsxMzUzLDEwIEBAIHN0YXRpYyBpbnQgY2hlY2tfYmJzdGFydChjb25zdCBzdHJ1Y3QgaTkxNV9n
ZW1fY29udGV4dCAqY3R4LAogCWlmICh0YXJnZXRfY21kX2luZGV4ID09IG9mZnNldCkKIAkJcmV0
dXJuIDA7CiAKLQlpZiAoY3R4LT5qdW1wX3doaXRlbGlzdF9jbWRzIDw9IHRhcmdldF9jbWRfaW5k
ZXgpIHsKLQkJRFJNX0RFQlVHKCJDTUQ6IFJlamVjdGluZyBCQl9TVEFSVCAtIHRydW5jYXRlZCB3
aGl0ZWxpc3QgYXJyYXlcbiIpOwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9IGVsc2UgaWYgKCF0ZXN0
X2JpdCh0YXJnZXRfY21kX2luZGV4LCBjdHgtPmp1bXBfd2hpdGVsaXN0KSkgeworCWlmIChJU19F
UlIoanVtcF93aGl0ZWxpc3QpKQorCQlyZXR1cm4gUFRSX0VSUihqdW1wX3doaXRlbGlzdCk7CisK
KwlpZiAoIXRlc3RfYml0KHRhcmdldF9jbWRfaW5kZXgsIGp1bXBfd2hpdGVsaXN0KSkgewogCQlE
Uk1fREVCVUcoIkNNRDogQkJfU1RBUlQgdG8gMHglbGx4IG5vdCBhIHByZXZpb3VzbHkgZXhlY3V0
ZWQgY21kXG4iLAogCQkJICBqdW1wX3RhcmdldCk7CiAJCXJldHVybiAtRUlOVkFMOwpAQCAtMTM2
NCw0MCArMTM2NSwxOSBAQCBzdGF0aWMgaW50IGNoZWNrX2Jic3RhcnQoY29uc3Qgc3RydWN0IGk5
MTVfZ2VtX2NvbnRleHQgKmN0eCwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgaW5pdF93
aGl0ZWxpc3Qoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwgdTMyIGJhdGNoX2xlbikKK3N0
YXRpYyB1bnNpZ25lZCBsb25nICoKK2FsbG9jX3doaXRlbGlzdChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwgdTMyIGJhdGNoX2xlbikKIHsKLQljb25zdCB1MzIgYmF0Y2hfY21kcyA9IERJ
Vl9ST1VORF9VUChiYXRjaF9sZW4sIHNpemVvZih1MzIpKTsKLQljb25zdCB1MzIgZXhhY3Rfc2l6
ZSA9IEJJVFNfVE9fTE9OR1MoYmF0Y2hfY21kcyk7Ci0JdTMyIG5leHRfc2l6ZSA9IEJJVFNfVE9f
TE9OR1Mocm91bmR1cF9wb3dfb2ZfdHdvKGJhdGNoX2NtZHMpKTsKLQl1bnNpZ25lZCBsb25nICpu
ZXh0X3doaXRlbGlzdDsKLQotCWlmIChDTURQQVJTRVJfVVNFU19HR1RUKGN0eC0+aTkxNSkpCi0J
CXJldHVybjsKLQotCWlmIChiYXRjaF9jbWRzIDw9IGN0eC0+anVtcF93aGl0ZWxpc3RfY21kcykg
ewotCQliaXRtYXBfemVybyhjdHgtPmp1bXBfd2hpdGVsaXN0LCBiYXRjaF9jbWRzKTsKLQkJcmV0
dXJuOwotCX0KLQotYWdhaW46Ci0JbmV4dF93aGl0ZWxpc3QgPSBrY2FsbG9jKG5leHRfc2l6ZSwg
c2l6ZW9mKGxvbmcpLCBHRlBfS0VSTkVMKTsKLQlpZiAobmV4dF93aGl0ZWxpc3QpIHsKLQkJa2Zy
ZWUoY3R4LT5qdW1wX3doaXRlbGlzdCk7Ci0JCWN0eC0+anVtcF93aGl0ZWxpc3QgPSBuZXh0X3do
aXRlbGlzdDsKLQkJY3R4LT5qdW1wX3doaXRlbGlzdF9jbWRzID0KLQkJCW5leHRfc2l6ZSAqIEJJ
VFNfUEVSX0JZVEUgKiBzaXplb2YobG9uZyk7Ci0JCXJldHVybjsKLQl9CisJdW5zaWduZWQgbG9u
ZyAqam1wOwogCi0JaWYgKG5leHRfc2l6ZSA+IGV4YWN0X3NpemUpIHsKLQkJbmV4dF9zaXplID0g
ZXhhY3Rfc2l6ZTsKLQkJZ290byBhZ2FpbjsKLQl9CisJaWYgKENNRFBBUlNFUl9VU0VTX0dHVFQo
aTkxNSkpCisJCXJldHVybiBOVUxMOwogCi0JRFJNX0RFQlVHKCJDTUQ6IEZhaWxlZCB0byBleHRl
bmQgd2hpdGVsaXN0LiBCQl9TVEFSVCBtYXkgYmUgZGlzYWxsb3dlZFxuIik7Ci0JYml0bWFwX3pl
cm8oY3R4LT5qdW1wX3doaXRlbGlzdCwgY3R4LT5qdW1wX3doaXRlbGlzdF9jbWRzKTsKKwlqbXAg
PSBiaXRtYXBfemFsbG9jKERJVl9ST1VORF9VUChiYXRjaF9sZW4sIHNpemVvZih1MzIpKSwgR0ZQ
X0tFUk5FTCk7CisJaWYgKCFqbXApCisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwogCi0JcmV0
dXJuOworCXJldHVybiBqbXA7CiB9CiAKICNkZWZpbmUgTEVOR1RIX0JJQVMgMgpAQCAtMTQzMyw2
ICsxNDEzLDcgQEAgaW50IGludGVsX2VuZ2luZV9jbWRfcGFyc2VyKHN0cnVjdCBpOTE1X2dlbV9j
b250ZXh0ICpjdHgsCiAJc3RydWN0IGRybV9pOTE1X2NtZF9kZXNjcmlwdG9yIGRlZmF1bHRfZGVz
YyA9IG5vb3BfZGVzYzsKIAljb25zdCBzdHJ1Y3QgZHJtX2k5MTVfY21kX2Rlc2NyaXB0b3IgKmRl
c2MgPSAmZGVmYXVsdF9kZXNjOwogCWJvb2wgbmVlZHNfY2xmbHVzaF9hZnRlciA9IGZhbHNlOwor
CXVuc2lnbmVkIGxvbmcgKmp1bXBfd2hpdGVsaXN0OwogCWludCByZXQgPSAwOwogCiAJY21kID0g
Y29weV9iYXRjaChzaGFkb3dfYmF0Y2hfb2JqLCBiYXRjaF9vYmosCkBAIC0xNDQzLDcgKzE0MjQs
OCBAQCBpbnQgaW50ZWxfZW5naW5lX2NtZF9wYXJzZXIoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCwKIAkJcmV0dXJuIFBUUl9FUlIoY21kKTsKIAl9CiAKLQlpbml0X3doaXRlbGlzdChjdHgs
IGJhdGNoX2xlbik7CisJLyogRGVmZXIgZmFpbHVyZSB1bnRpbCBhdHRlbXB0ZWQgdXNlICovCisJ
anVtcF93aGl0ZWxpc3QgPSBhbGxvY193aGl0ZWxpc3QoY3R4LT5pOTE1LCBiYXRjaF9sZW4pOwog
CiAJLyoKIAkgKiBXZSB1c2UgdGhlIGJhdGNoIGxlbmd0aCBhcyBzaXplIGJlY2F1c2UgdGhlIHNo
YWRvdyBvYmplY3QgaXMgYXMKQEAgLTE0ODcsMTUgKzE0NjksMTYgQEAgaW50IGludGVsX2VuZ2lu
ZV9jbWRfcGFyc2VyKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJCWlmIChkZXNjLT5j
bWQudmFsdWUgPT0gTUlfQkFUQ0hfQlVGRkVSX1NUQVJUKSB7CiAJCQlyZXQgPSBjaGVja19iYnN0
YXJ0KGN0eCwgY21kLCBvZmZzZXQsIGxlbmd0aCwKIAkJCQkJICAgIGJhdGNoX2xlbiwgYmF0Y2hf
c3RhcnQsCi0JCQkJCSAgICBzaGFkb3dfYmF0Y2hfc3RhcnQpOworCQkJCQkgICAgc2hhZG93X2Jh
dGNoX3N0YXJ0LAorCQkJCQkgICAganVtcF93aGl0ZWxpc3QpOwogCiAJCQlpZiAocmV0KQogCQkJ
CWdvdG8gZXJyOwogCQkJYnJlYWs7CiAJCX0KIAotCQlpZiAoY3R4LT5qdW1wX3doaXRlbGlzdF9j
bWRzID4gb2Zmc2V0KQotCQkJc2V0X2JpdChvZmZzZXQsIGN0eC0+anVtcF93aGl0ZWxpc3QpOwor
CQlpZiAoIUlTX0VSUl9PUl9OVUxMKGp1bXBfd2hpdGVsaXN0KSkKKwkJCV9fc2V0X2JpdChvZmZz
ZXQsIGp1bXBfd2hpdGVsaXN0KTsKIAogCQljbWQgKz0gbGVuZ3RoOwogCQlvZmZzZXQgKz0gbGVu
Z3RoOwpAQCAtMTUxMyw2ICsxNDk2LDggQEAgaW50IGludGVsX2VuZ2luZV9jbWRfcGFyc2VyKHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJfQogCiBlcnI6CisJaWYgKCFJU19FUlJfT1Jf
TlVMTChqdW1wX3doaXRlbGlzdCkpCisJCWtmcmVlKGp1bXBfd2hpdGVsaXN0KTsKIAlpOTE1X2dl
bV9vYmplY3RfdW5waW5fbWFwKHNoYWRvd19iYXRjaF9vYmopOwogCXJldHVybiByZXQ7CiB9Ci0t
IAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 46932D2905
	for <lists+intel-gfx@lfdr.de>; Thu, 10 Oct 2019 14:09:59 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A0DB16EA8C;
	Thu, 10 Oct 2019 12:09:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5D78D6EA8C
 for <intel-gfx@lists.freedesktop.org>; Thu, 10 Oct 2019 12:09:56 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18790458-1500050 
 for multiple; Thu, 10 Oct 2019 13:08:55 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 10 Oct 2019 13:08:53 +0100
Message-Id: <20191010120854.28871-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/2] drm/i915/selftests: Check that registers
 are preserved between virtual engines
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TWFrZSBzdXJlIHRoYXQgd2UgY29weSBhY3Jvc3MgdGhlIHJlZ2lzdGVycyBmcm9tIG9uZSBlbmdp
bmUgdG8gdGhlIG5leHQsCmFzIHdlIGhvcCBhcm91bmQgYSB2aXJ0dWFsIGVuZ2luZS4KClNpZ25l
ZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZy
dGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyB8IDE4MCArKysrKysrKysrKysrKysrKysrKysrKysr
CiAxIGZpbGUgY2hhbmdlZCwgMTgwIGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2xyYy5jCmluZGV4IDE5OGNmMmY3NTRmNC4uYTY5MWU0MjljYTAxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwpAQCAtMTksNiArMTksMzMgQEAKICNpbmNs
dWRlICJnZW0vc2VsZnRlc3RzL2lndF9nZW1fdXRpbHMuaCIKICNpbmNsdWRlICJnZW0vc2VsZnRl
c3RzL21vY2tfY29udGV4dC5oIgogCitzdGF0aWMgc3RydWN0IGk5MTVfdm1hICpjcmVhdGVfc2Ny
YXRjaChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmo7CisJc3RydWN0IGk5MTVfdm1hICp2bWE7CisJaW50IGVycjsKKworCW9iaiA9IGk5MTVf
Z2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoZ3QtPmk5MTUsIFBBR0VfU0laRSk7CisJaWYgKElT
X0VSUihvYmopKQorCQlyZXR1cm4gRVJSX0NBU1Qob2JqKTsKKworCWk5MTVfZ2VtX29iamVjdF9z
ZXRfY2FjaGVfY29oZXJlbmN5KG9iaiwgSTkxNV9DQUNISU5HX0NBQ0hFRCk7CisKKwl2bWEgPSBp
OTE1X3ZtYV9pbnN0YW5jZShvYmosICZndC0+Z2d0dC0+dm0sIE5VTEwpOworCWlmIChJU19FUlIo
dm1hKSkgeworCQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7CisJCXJldHVybiB2bWE7CisJfQor
CisJZXJyID0gaTkxNV92bWFfcGluKHZtYSwgMCwgMCwgUElOX0dMT0JBTCk7CisJaWYgKGVycikg
eworCQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7CisJCXJldHVybiBFUlJfUFRSKGVycik7CisJ
fQorCisJcmV0dXJuIHZtYTsKK30KKwogc3RhdGljIGludCBsaXZlX3Nhbml0eWNoZWNrKHZvaWQg
KmFyZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGFyZzsKQEAgLTIwNzYs
NiArMjEwMywxNTggQEAgc3RhdGljIGludCBsaXZlX3ZpcnR1YWxfbWFzayh2b2lkICphcmcpCiAJ
cmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgcHJlc2VydmVkX3ZpcnR1YWxfZW5naW5lKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1LAorCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICoqc2libGluZ3MsCisJCQkJICAgIHVuc2lnbmVkIGludCBuc2libGluZykKK3sKKyNkZWZpbmUg
Q1NfR1BSKGVuZ2luZSwgbikgKChlbmdpbmUpLT5tbWlvX2Jhc2UgKyAweDYwMCArIChuKSAqIDQp
CisKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpsYXN0ID0gTlVMTDsKKwlzdHJ1Y3QgaTkxNV9nZW1f
Y29udGV4dCAqY3R4OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICp2ZTsKKwlzdHJ1Y3QgaTkxNV92
bWEgKnNjcmF0Y2g7CisJc3RydWN0IGlndF9saXZlX3Rlc3QgdDsKKwljb25zdCBpbnQgbnVtX2dw
ciA9IDE2ICogMjsgLyogZWFjaCBHUFIgaXMgMiBkd29yZHMgKi8KKwl1bnNpZ25lZCBpbnQgbjsK
KwlpbnQgZXJyID0gMDsKKworCWN0eCA9IGtlcm5lbF9jb250ZXh0KGk5MTUpOworCWlmICghY3R4
KQorCQlyZXR1cm4gLUVOT01FTTsKKworCXNjcmF0Y2ggPSBjcmVhdGVfc2NyYXRjaChzaWJsaW5n
c1swXS0+Z3QpOworCWlmIChJU19FUlIoc2NyYXRjaCkpIHsKKwkJZXJyID0gUFRSX0VSUihzY3Jh
dGNoKTsKKwkJZ290byBvdXRfY2xvc2U7CisJfQorCisJdmUgPSBpbnRlbF9leGVjbGlzdHNfY3Jl
YXRlX3ZpcnR1YWwoY3R4LCBzaWJsaW5ncywgbnNpYmxpbmcpOworCWlmIChJU19FUlIodmUpKSB7
CisJCWVyciA9IFBUUl9FUlIodmUpOworCQlnb3RvIG91dF9zY3JhdGNoOworCX0KKworCWVyciA9
IGludGVsX2NvbnRleHRfcGluKHZlKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dF9wdXQ7CisKKwll
cnIgPSBpZ3RfbGl2ZV90ZXN0X2JlZ2luKCZ0LCBpOTE1LCBfX2Z1bmNfXywgdmUtPmVuZ2luZS0+
bmFtZSk7CisJaWYgKGVycikKKwkJZ290byBvdXRfdW5waW47CisKKwlmb3IgKG4gPSAwOyBuIDwg
bnVtX2dwcjsgbisrKSB7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IHNpYmxp
bmdzW24gJSBuc2libGluZ107CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCQl1MzIgKmNz
OworCisJCXJxID0gaTkxNV9yZXF1ZXN0X2NyZWF0ZSh2ZSk7CisJCWlmIChJU19FUlIocnEpKSB7
CisJCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJCWdvdG8gb3V0X2VuZDsKKwkJfQorCisJCWk5MTVf
cmVxdWVzdF9wdXQobGFzdCk7CisJCWxhc3QgPSBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKKworCQlj
cyA9IGludGVsX3JpbmdfYmVnaW4ocnEsIDgpOworCQlpZiAoSVNfRVJSKGNzKSkgeworCQkJaTkx
NV9yZXF1ZXN0X2FkZChycSk7CisJCQllcnIgPSBQVFJfRVJSKGNzKTsKKwkJCWdvdG8gb3V0X2Vu
ZDsKKwkJfQorCisJCSpjcysrID0gTUlfU1RPUkVfUkVHSVNURVJfTUVNX0dFTjggfCBNSV9VU0Vf
R0dUVDsKKwkJKmNzKysgPSBDU19HUFIoZW5naW5lLCBuKTsKKwkJKmNzKysgPSBpOTE1X2dndHRf
b2Zmc2V0KHNjcmF0Y2gpICsgbiAqIHNpemVvZih1MzIpOworCQkqY3MrKyA9IDA7CisKKwkJKmNz
KysgPSBNSV9MT0FEX1JFR0lTVEVSX0lNTSgxKTsKKwkJKmNzKysgPSBDU19HUFIoZW5naW5lLCAo
biArIDEpICUgbnVtX2dwcik7CisJCSpjcysrID0gbiArIDE7CisKKwkJKmNzKysgPSBNSV9OT09Q
OworCQlpbnRlbF9yaW5nX2FkdmFuY2UocnEsIGNzKTsKKworCQkvKiBSZXN0cmljdCB0aGlzIHJl
cXVlc3QgdG8gcnVuIG9uIGEgcGFydGljdWxhciBlbmdpbmUgKi8KKwkJcnEtPmV4ZWN1dGlvbl9t
YXNrID0gZW5naW5lLT5tYXNrOworCQlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKwl9CisKKwlpZiAo
aTkxNV9yZXF1ZXN0X3dhaXQobGFzdCwgMCwgSFogLyA1KSA8IDApIHsKKwkJZXJyID0gLUVUSU1F
OworCX0gZWxzZSB7CisJCXUzMiAqbWFwID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9tYXAoc2NyYXRj
aC0+b2JqLCBJOTE1X01BUF9XQik7CisKKwkJZm9yIChuID0gMDsgbiA8IG51bV9ncHI7IG4rKykg
eworCQkJaWYgKG1hcFtuXSAhPSBuKSB7CisJCQkJcHJfZXJyKCJJbmNvcnJlY3QgdmFsdWVbJWRd
IGZvdW5kIGZvciBHUFJbJWRdXG4iLAorCQkJCSAgICAgICBtYXBbbl0sIG4pOworCQkJCWVyciA9
IC1FSU5WQUw7CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKworCQlpOTE1X2dlbV9vYmplY3RfdW5w
aW5fbWFwKHNjcmF0Y2gtPm9iaik7CisJfQorCitvdXRfZW5kOgorCWlmIChpZ3RfbGl2ZV90ZXN0
X2VuZCgmdCkpCisJCWVyciA9IC1FSU87CisJaTkxNV9yZXF1ZXN0X3B1dChsYXN0KTsKK291dF91
bnBpbjoKKwlpbnRlbF9jb250ZXh0X3VucGluKHZlKTsKK291dF9wdXQ6CisJaW50ZWxfY29udGV4
dF9wdXQodmUpOworb3V0X3NjcmF0Y2g6CisJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJnNj
cmF0Y2gsIDApOworb3V0X2Nsb3NlOgorCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eCk7CisJcmV0
dXJuIGVycjsKKworI3VuZGVmIENTX0dQUgorfQorCitzdGF0aWMgaW50IGxpdmVfdmlydHVhbF9w
cmVzZXJ2ZWQodm9pZCAqYXJnKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0g
YXJnOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmdzW01BWF9FTkdJTkVfSU5TVEFO
Q0UgKyAxXTsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gJmk5MTUtPmd0OworCXVuc2lnbmVkIGlu
dCBjbGFzcywgaW5zdDsKKworCS8qCisJICogQ2hlY2sgdGhhdCB0aGUgY29udGV4dCBpbWFnZSBy
ZXRhaW5zIG5vbi1wcml2aWxlZ2VkICh1c2VyKSByZWdpc3RlcnMKKwkgKiBmcm9tIG9uZSBlbmdp
bmUgdG8gdGhlIG5leHQuIEZvciB0aGlzIHdlIGNoZWNrIHRoYXQgdGhlIENTX0dQUgorCSAqIGFy
ZSBwcmVzZXJ2ZWQuCisJICovCisKKwlpZiAoVVNFU19HVUNfU1VCTUlTU0lPTihpOTE1KSkKKwkJ
cmV0dXJuIDA7CisKKwkvKiBBcyB3ZSB1c2UgQ1NfR1BSIHdlIGNhbm5vdCBydW4gYmVmb3JlIHRo
ZXkgZXhpc3RlZCBvbiBhbGwgZW5naW5lcy4gKi8KKwlpZiAoSU5URUxfR0VOKGk5MTUpIDwgOSkK
KwkJcmV0dXJuIDA7CisKKwlmb3IgKGNsYXNzID0gMDsgY2xhc3MgPD0gTUFYX0VOR0lORV9DTEFT
UzsgY2xhc3MrKykgeworCQlpbnQgbnNpYmxpbmcsIGVycjsKKworCQluc2libGluZyA9IDA7CisJ
CWZvciAoaW5zdCA9IDA7IGluc3QgPD0gTUFYX0VOR0lORV9JTlNUQU5DRTsgaW5zdCsrKSB7CisJ
CQlpZiAoIWd0LT5lbmdpbmVfY2xhc3NbY2xhc3NdW2luc3RdKQorCQkJCWNvbnRpbnVlOworCisJ
CQlzaWJsaW5nc1tuc2libGluZysrXSA9IGd0LT5lbmdpbmVfY2xhc3NbY2xhc3NdW2luc3RdOwor
CQl9CisJCWlmIChuc2libGluZyA8IDIpCisJCQljb250aW51ZTsKKworCQllcnIgPSBwcmVzZXJ2
ZWRfdmlydHVhbF9lbmdpbmUoaTkxNSwgc2libGluZ3MsIG5zaWJsaW5nKTsKKwkJaWYgKGVycikK
KwkJCXJldHVybiBlcnI7CisJfQorCisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyBpbnQgYm9uZF92
aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkJCSAgICAgICB1
bnNpZ25lZCBpbnQgY2xhc3MsCiAJCQkgICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKnNp
YmxpbmdzLApAQCAtMjI3Nyw2ICsyNDU2LDcgQEAgaW50IGludGVsX2V4ZWNsaXN0c19saXZlX3Nl
bGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJU1VCVEVTVChsaXZlX3By
ZWVtcHRfc21va2UpLAogCQlTVUJURVNUKGxpdmVfdmlydHVhbF9lbmdpbmUpLAogCQlTVUJURVNU
KGxpdmVfdmlydHVhbF9tYXNrKSwKKwkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfcHJlc2VydmVkKSwK
IAkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfYm9uZCksCiAJfTsKIAotLSAKMi4yMy4wCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGlu
ZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

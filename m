Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 14D1724A152
	for <lists+intel-gfx@lfdr.de>; Wed, 19 Aug 2020 16:09:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 77F8F6E3AC;
	Wed, 19 Aug 2020 14:09:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl [141.105.120.124])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 80BBC6E3AC
 for <intel-gfx@lists.freedesktop.org>; Wed, 19 Aug 2020 14:09:12 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 19 Aug 2020 16:08:52 +0200
Message-Id: <20200819140904.1708856-13-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20200819140904.1708856-1-maarten.lankhorst@linux.intel.com>
References: <20200819140904.1708856-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 12/24] drm/i915: Pin engine before pinning
 all objects, v5.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0byBsb2NrIGFsbCBnZW0gb2JqZWN0cywgaW5jbHVkaW5nIHRoZSBlbmdpbmUgY29u
dGV4dCBvYmplY3RzLApyZXdvcmsgdGhlIHRocm90dGxpbmcgdG8gZW5zdXJlIHRoYXQgd2UgY2Fu
IGRvIHRoaXMuIE5vdyB3ZSBvbmx5IHRocm90dGxlCm9uY2UsIGJ1dCBjYW4gdGFrZSBlYl9waW5f
ZW5naW5lIHdoaWxlIGFjcXVpcmluZyBvYmplY3RzLiBUaGlzIG1lYW5zIHdlCndpbGwgaGF2ZSB0
byBkcm9wIHRoZSBsb2NrIHRvIHdhaXQuIElmIHdlIGRvbid0IGhhdmUgdG8gdGhyb3R0bGUgd2Ug
Y2FuCnN0aWxsIHRha2UgdGhlIGZhc3RwYXRoLCBpZiBub3Qgd2Ugd2lsbCB0YWtlIHRoZSBzbG93
cGF0aCBhbmQgd2FpdCBmb3IKdGhlIHRocm90dGxlIHJlcXVlc3Qgd2hpbGUgdW5sb2NrZWQuCgpU
aGUgZW5naW5lIGhhcyB0byBiZSBwaW5uZWQgYXMgZmlyc3Qgc3RlcCwgb3RoZXJ3aXNlIGdwdSBy
ZWxvY2F0aW9ucwp3b24ndCB3b3JrLgoKQ2hhbmdlcyBzaW5jZSB2MToKLSBPbmx5IG5lZWQgdG8g
Z2V0IGEgdGhyb3R0bGVkIHJlcXVlc3QgaW4gdGhlIGZhc3RwYXRoLCBubyBuZWVkIGZvcgogIGEg
Z2xvYmFsIGZsYWcgYW55IG1vcmUuCi0gQWx3YXlzIGZyZWUgdGhlIHdhaXRlZCByZXF1ZXN0IGNv
cnJlY3RseS4KQ2hhbmdlcyBzaW5jZSB2MjoKLSBVc2UgaW50ZWxfZW5naW5lX3BtX2dldCgpL3B1
dCgpIHRvIGtlZWVwIGVuZ2luZSBwb29sIGFsaXZlIGR1cmluZwogIEVERUFETEsgaGFuZGxpbmcu
CkNoYW5nZXMgc2luY2UgdjM6Ci0gRml4IHNtYWxsIHJxIGxlYWsuCkNoYW5nZXMgc2luY2UgdjQ6
Ci0gVXNlIGEgc2luZ2xlIHJlbG9jX2NvbnRleHQsIGZvciBpbnRlbF9jb250ZXh0X3Bpbl93dygp
LgoKU2lnbmVkLW9mZi1ieTogTWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxp
bnV4LmludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IFRob21hcyBIZWxsc3Ryw7ZtIDx0aG9tYXMuaGVs
bHN0cm9tQGludGVsLmNvbT4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVj
YnVmZmVyLmMgICAgfCAyMTQgKysrKysrKysrKysrLS0tLS0tCiAuLi4vaTkxNS9nZW0vc2VsZnRl
c3RzL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyAgfCAgIDMgKwogMiBmaWxlcyBjaGFuZ2VkLCAxNTIg
aW5zZXJ0aW9ucygrKSwgNjUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKaW5kZXggMmNjYzU2NmY5MTU0Li5kM2M0NzM5MGVm
NTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIu
YwpAQCAtNTYsNyArNTYsOCBAQCBlbnVtIHsKICNkZWZpbmUgX19FWEVDX09CSkVDVF9SRVNFUlZF
RCAoX19FWEVDX09CSkVDVF9IQVNfUElOIHwgX19FWEVDX09CSkVDVF9IQVNfRkVOQ0UpCiAKICNk
ZWZpbmUgX19FWEVDX0hBU19SRUxPQwlCSVQoMzEpCi0jZGVmaW5lIF9fRVhFQ19JTlRFUk5BTF9G
TEFHUwkofjB1IDw8IDMxKQorI2RlZmluZSBfX0VYRUNfRU5HSU5FX1BJTk5FRAlCSVQoMzApCisj
ZGVmaW5lIF9fRVhFQ19JTlRFUk5BTF9GTEFHUwkofjB1IDw8IDMwKQogI2RlZmluZSBVUERBVEUJ
CQlQSU5fT0ZGU0VUX0ZJWEVECiAKICNkZWZpbmUgQkFUQ0hfT0ZGU0VUX0JJQVMgKDI1NioxMDI0
KQpAQCAtMjgxLDYgKzI4Miw3IEBAIHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgewogCX0gcmVsb2Nf
Y2FjaGU7CiAKIAlzdHJ1Y3QgaW50ZWxfZ3RfYnVmZmVyX3Bvb2xfbm9kZSAqcmVsb2NfcG9vbDsg
LyoqIHJlbG9jYXRpb24gcG9vbCBmb3IgLUVERUFETEsgaGFuZGxpbmcgKi8KKwlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqcmVsb2NfY29udGV4dDsKIAogCXU2NCBpbnZhbGlkX2ZsYWdzOyAvKiogU2V0
IG9mIGV4ZWNvYmouZmxhZ3MgdGhhdCBhcmUgaW52YWxpZCAqLwogCXUzMiBjb250ZXh0X2ZsYWdz
OyAvKiogU2V0IG9mIGV4ZWNvYmouZmxhZ3MgdG8gaW5zZXJ0IGZyb20gdGhlIGN0eCAqLwpAQCAt
MzAzLDYgKzMwNSw5IEBAIHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgewogfTsKIAogc3RhdGljIGlu
dCBlYl9wYXJzZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYik7CitzdGF0aWMgc3RydWN0IGk5
MTVfcmVxdWVzdCAqZWJfcGluX2VuZ2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwKKwkJ
CQkJICBib29sIHRocm90dGxlKTsKK3N0YXRpYyB2b2lkIGViX3VucGluX2VuZ2luZShzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYik7CiAKIHN0YXRpYyBpbmxpbmUgYm9vbCBlYl91c2VfY21kcGFy
c2VyKGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogewpAQCAtOTM1LDcgKzk0MCw3
IEBAIGViX2dldF92bWEoY29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHVuc2lnbmVk
IGxvbmcgaGFuZGxlKQogCX0KIH0KIAotc3RhdGljIHZvaWQgZWJfcmVsZWFzZV92bWFzKGNvbnN0
IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBib29sIGZpbmFsKQorc3RhdGljIHZvaWQgZWJf
cmVsZWFzZV92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBib29sIGZpbmFsKQogewog
CWNvbnN0IHVuc2lnbmVkIGludCBjb3VudCA9IGViLT5idWZmZXJfY291bnQ7CiAJdW5zaWduZWQg
aW50IGk7CkBAIC05NTIsNiArOTU3LDggQEAgc3RhdGljIHZvaWQgZWJfcmVsZWFzZV92bWFzKGNv
bnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBib29sIGZpbmFsKQogCQlpZiAoZmluYWwp
CiAJCQlpOTE1X3ZtYV9wdXQodm1hKTsKIAl9CisKKwllYl91bnBpbl9lbmdpbmUoZWIpOwogfQog
CiBzdGF0aWMgdm9pZCBlYl9kZXN0cm95KGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
KQpAQCAtMTI5MiwxOSArMTI5OSwyNiBAQCBzdGF0aWMgaW50IF9fcmVsb2NfZ3B1X2FsbG9jKHN0
cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCWlmIChlbmdpbmUgPT0gZWItPmNvbnRleHQtPmVu
Z2luZSkgewogCQlycSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUoZWItPmNvbnRleHQpOwogCX0gZWxz
ZSB7Ci0JCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwkJc3RydWN0IGludGVsX2NvbnRleHQg
KmNlID0gZWItPnJlbG9jX2NvbnRleHQ7CiAKLQkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShl
bmdpbmUpOwotCQlpZiAoSVNfRVJSKGNlKSkgewotCQkJZXJyID0gUFRSX0VSUihjZSk7Ci0JCQln
b3RvIGVycl91bnBpbjsKKwkJaWYgKCFjZSkgeworCQkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0
ZShlbmdpbmUpOworCQkJaWYgKElTX0VSUihjZSkpIHsKKwkJCQllcnIgPSBQVFJfRVJSKGNlKTsK
KwkJCQlnb3RvIGVycl91bnBpbjsKKwkJCX0KKworCQkJaTkxNV92bV9wdXQoY2UtPnZtKTsKKwkJ
CWNlLT52bSA9IGk5MTVfdm1fZ2V0KGViLT5jb250ZXh0LT52bSk7CisJCQllYi0+cmVsb2NfY29u
dGV4dCA9IGNlOwogCQl9CiAKLQkJaTkxNV92bV9wdXQoY2UtPnZtKTsKLQkJY2UtPnZtID0gaTkx
NV92bV9nZXQoZWItPmNvbnRleHQtPnZtKTsKKwkJZXJyID0gaW50ZWxfY29udGV4dF9waW4oY2Up
OworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfdW5waW47CiAKLQkJcnEgPSBpbnRlbF9jb250ZXh0
X2NyZWF0ZV9yZXF1ZXN0KGNlKTsKLQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQlycSA9IGk5
MTVfcmVxdWVzdF9jcmVhdGUoY2UpOworCQlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKIAl9CiAJ
aWYgKElTX0VSUihycSkpIHsKIAkJZXJyID0gUFRSX0VSUihycSk7CkBAIC0xODcxLDcgKzE4ODUs
OCBAQCBzdGF0aWMgaW50IGViX3ByZWZhdWx0X3JlbG9jYXRpb25zKGNvbnN0IHN0cnVjdCBpOTE1
X2V4ZWNidWZmZXIgKmViKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgbm9pbmxpbmUgaW50IGVi
X3JlbG9jYXRlX3BhcnNlX3Nsb3coc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCitzdGF0aWMg
bm9pbmxpbmUgaW50IGViX3JlbG9jYXRlX3BhcnNlX3Nsb3coc3RydWN0IGk5MTVfZXhlY2J1ZmZl
ciAqZWIsCisJCQkJCSAgIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCWJvb2wgaGF2ZV9j
b3B5ID0gZmFsc2U7CiAJc3RydWN0IGViX3ZtYSAqZXY7CkBAIC0xODg3LDYgKzE5MDIsMjEgQEAg
c3RhdGljIG5vaW5saW5lIGludCBlYl9yZWxvY2F0ZV9wYXJzZV9zbG93KHN0cnVjdCBpOTE1X2V4
ZWNidWZmZXIgKmViKQogCWViX3JlbGVhc2Vfdm1hcyhlYiwgZmFsc2UpOwogCWk5MTVfZ2VtX3d3
X2N0eF9maW5pKCZlYi0+d3cpOwogCisJaWYgKHJxKSB7CisJCS8qIG5vbmJsb2NraW5nIGlzIGFs
d2F5cyBmYWxzZSAqLworCQlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocnEsIEk5MTVfV0FJVF9JTlRF
UlJVUFRJQkxFLAorCQkJCSAgICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKSA8IDApIHsKKwkJCWk5
MTVfcmVxdWVzdF9wdXQocnEpOworCQkJcnEgPSBOVUxMOworCisJCQllcnIgPSAtRUlOVFI7CisJ
CQlnb3RvIGVycl9yZWxvY2s7CisJCX0KKworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwkJcnEg
PSBOVUxMOworCX0KKwogCS8qCiAJICogV2UgdGFrZSAzIHBhc3NlcyB0aHJvdWdoIHRoZSBzbG93
cGF0Y2guCiAJICoKQEAgLTE5MTAsMTQgKzE5NDAsMjUgQEAgc3RhdGljIG5vaW5saW5lIGludCBl
Yl9yZWxvY2F0ZV9wYXJzZV9zbG93KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQllcnIg
PSAwOwogCX0KIAotCWZsdXNoX3dvcmtxdWV1ZShlYi0+aTkxNS0+bW0udXNlcnB0cl93cSk7CisJ
aWYgKCFlcnIpCisJCWZsdXNoX3dvcmtxdWV1ZShlYi0+aTkxNS0+bW0udXNlcnB0cl93cSk7CiAK
K2Vycl9yZWxvY2s6CiAJaTkxNV9nZW1fd3dfY3R4X2luaXQoJmViLT53dywgdHJ1ZSk7CiAJaWYg
KGVycikKIAkJZ290byBvdXQ7CiAKIAkvKiByZWFjcXVpcmUgdGhlIG9iamVjdHMgKi8KIHJlcGVh
dF92YWxpZGF0ZToKKwlycSA9IGViX3Bpbl9lbmdpbmUoZWIsIGZhbHNlKTsKKwlpZiAoSVNfRVJS
KHJxKSkgeworCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJZ290byBlcnI7CisJfQorCisJLyogV2Ug
ZGlkbid0IHRocm90dGxlLCBzaG91bGQgYmUgTlVMTCAqLworCUdFTV9XQVJOX09OKHJxKTsKKwog
CWVyciA9IGViX3ZhbGlkYXRlX3ZtYXMoZWIpOwogCWlmIChlcnIpCiAJCWdvdG8gZXJyOwpAQCAt
MTk4OCwxNCArMjAyOSw0OSBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IGViX3JlbG9jYXRlX3BhcnNl
X3Nsb3coc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJCX0KIAl9CiAKKwlpZiAocnEpCisJ
CWk5MTVfcmVxdWVzdF9wdXQocnEpOworCiAJcmV0dXJuIGVycjsKIH0KIAogc3RhdGljIGludCBl
Yl9yZWxvY2F0ZV9wYXJzZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIHsKIAlpbnQgZXJy
OworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gTlVMTDsKKwlib29sIHRocm90dGxlID0gdHJ1
ZTsKIAogcmV0cnk6CisJcnEgPSBlYl9waW5fZW5naW5lKGViLCB0aHJvdHRsZSk7CisJaWYgKElT
X0VSUihycSkpIHsKKwkJZXJyID0gUFRSX0VSUihycSk7CisJCXJxID0gTlVMTDsKKwkJaWYgKGVy
ciAhPSAtRURFQURMSykKKwkJCXJldHVybiBlcnI7CisKKwkJZ290byBlcnI7CisJfQorCisJaWYg
KHJxKSB7CisJCWJvb2wgbm9uYmxvY2sgPSBlYi0+ZmlsZS0+ZmlscC0+Zl9mbGFncyAmIE9fTk9O
QkxPQ0s7CisKKwkJLyogTmVlZCB0byBkcm9wIGFsbCBsb2NrcyBub3cgZm9yIHRocm90dGxpbmcs
IHRha2Ugc2xvd3BhdGggKi8KKwkJZXJyID0gaTkxNV9yZXF1ZXN0X3dhaXQocnEsIEk5MTVfV0FJ
VF9JTlRFUlJVUFRJQkxFLCAwKTsKKwkJaWYgKGVyciA9PSAtRVRJTUUpIHsKKwkJCWlmIChub25i
bG9jaykgeworCQkJCWVyciA9IC1FV09VTERCTE9DSzsKKwkJCQlpOTE1X3JlcXVlc3RfcHV0KHJx
KTsKKwkJCQlnb3RvIGVycjsKKwkJCX0KKwkJCWdvdG8gc2xvdzsKKwkJfQorCQlpOTE1X3JlcXVl
c3RfcHV0KHJxKTsKKwkJcnEgPSBOVUxMOworCX0KKworCS8qIG9ubHkgdGhyb3R0bGUgb25jZSwg
ZXZlbiBpZiB3ZSBkaWRuJ3QgbmVlZCB0byB0aHJvdHRsZSAqLworCXRocm90dGxlID0gZmFsc2U7
CisKIAllcnIgPSBlYl92YWxpZGF0ZV92bWFzKGViKTsKIAlpZiAoZXJyID09IC1FQUdBSU4pCiAJ
CWdvdG8gc2xvdzsKQEAgLTIwMzIsNyArMjEwOCw3IEBAIHN0YXRpYyBpbnQgZWJfcmVsb2NhdGVf
cGFyc2Uoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJcmV0dXJuIGVycjsKIAogc2xvdzoK
LQllcnIgPSBlYl9yZWxvY2F0ZV9wYXJzZV9zbG93KGViKTsKKwllcnIgPSBlYl9yZWxvY2F0ZV9w
YXJzZV9zbG93KGViLCBycSk7CiAJaWYgKGVycikKIAkJLyoKIAkJICogSWYgdGhlIHVzZXIgZXhw
ZWN0cyB0aGUgZXhlY29iamVjdC5vZmZzZXQgYW5kCkBAIC0yNDg2LDcgKzI1NjIsNyBAQCBzdGF0
aWMgY29uc3QgZW51bSBpbnRlbF9lbmdpbmVfaWQgdXNlcl9yaW5nX21hcFtdID0gewogCVtJOTE1
X0VYRUNfVkVCT1hdCT0gVkVDUzAKIH07CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpl
Yl90aHJvdHRsZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCitzdGF0aWMgc3RydWN0IGk5MTVf
cmVxdWVzdCAqZWJfdGhyb3R0bGUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZyA9IGNlLT5yaW5n
OwogCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSBjZS0+dGltZWxpbmU7CkBAIC0yNTIwLDIy
ICsyNTk2LDE3IEBAIHN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICplYl90aHJvdHRsZShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJcmV0dXJuIGk5MTVfcmVxdWVzdF9nZXQocnEpOwogfQog
Ci1zdGF0aWMgaW50IF9fZWJfcGluX2VuZ2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwg
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmVi
X3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIGJvb2wgdGhyb3R0bGUpCiB7
CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZWItPmNvbnRleHQ7CiAJc3RydWN0IGludGVs
X3RpbWVsaW5lICp0bDsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSA9IE5VTEw7CiAJaW50IGVycjsKIAotCS8qCi0JICogQUJJOiBCZWZvcmUgdXNl
cnNwYWNlIGFjY2Vzc2VzIHRoZSBHUFUgKGUuZy4gZXhlY2J1ZmZlciksIHJlcG9ydAotCSAqIEVJ
TyBpZiB0aGUgR1BVIGlzIGFscmVhZHkgd2VkZ2VkLgotCSAqLwotCWVyciA9IGludGVsX2d0X3Rl
cm1pbmFsbHlfd2VkZ2VkKGNlLT5lbmdpbmUtPmd0KTsKLQlpZiAoZXJyKQotCQlyZXR1cm4gZXJy
OworCUdFTV9CVUdfT04oZWItPmFyZ3MtPmZsYWdzICYgX19FWEVDX0VOR0lORV9QSU5ORUQpOwog
CiAJaWYgKHVubGlrZWx5KGludGVsX2NvbnRleHRfaXNfYmFubmVkKGNlKSkpCi0JCXJldHVybiAt
RUlPOworCQlyZXR1cm4gRVJSX1BUUigtRUlPKTsKIAogCS8qCiAJICogUGlubmluZyB0aGUgY29u
dGV4dHMgbWF5IGdlbmVyYXRlIHJlcXVlc3RzIGluIG9yZGVyIHRvIGFjcXVpcmUKQEAgLTI1NDQs
NyArMjYxNSw3IEBAIHN0YXRpYyBpbnQgX19lYl9waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNi
dWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJICovCiAJZXJyID0gaW50ZWxf
Y29udGV4dF9waW4oY2UpOwogCWlmIChlcnIpCi0JCXJldHVybiBlcnI7CisJCXJldHVybiBFUlJf
UFRSKGVycik7CiAKIAkvKgogCSAqIFRha2UgYSBsb2NhbCB3YWtlcmVmIGZvciBwcmVwYXJpbmcg
dG8gZGlzcGF0Y2ggdGhlIGV4ZWNidWYgYXMKQEAgLTI1NTYsNDUgKzI2MjcsMTcgQEAgc3RhdGlj
IGludCBfX2ViX3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSkKIAkgKi8KIAl0bCA9IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9j
ayhjZSk7CiAJaWYgKElTX0VSUih0bCkpIHsKLQkJZXJyID0gUFRSX0VSUih0bCk7Ci0JCWdvdG8g
ZXJyX3VucGluOworCQlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwkJcmV0dXJuIEVSUl9DQVNU
KHRsKTsKIAl9CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsKLQlycSA9IGViX3Rocm90dGxl
KGNlKTsKLQorCWlmICh0aHJvdHRsZSkKKwkJcnEgPSBlYl90aHJvdHRsZShlYiwgY2UpOwogCWlu
dGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKHRsKTsKIAotCWlmIChycSkgewotCQlib29sIG5v
bmJsb2NrID0gZWItPmZpbGUtPmZpbHAtPmZfZmxhZ3MgJiBPX05PTkJMT0NLOwotCQlsb25nIHRp
bWVvdXQ7Ci0KLQkJdGltZW91dCA9IE1BWF9TQ0hFRFVMRV9USU1FT1VUOwotCQlpZiAobm9uYmxv
Y2spCi0JCQl0aW1lb3V0ID0gMDsKLQotCQl0aW1lb3V0ID0gaTkxNV9yZXF1ZXN0X3dhaXQocnEs
Ci0JCQkJCSAgICBJOTE1X1dBSVRfSU5URVJSVVBUSUJMRSwKLQkJCQkJICAgIHRpbWVvdXQpOwot
CQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKLQotCQlpZiAodGltZW91dCA8IDApIHsKLQkJCWVyciA9
IG5vbmJsb2NrID8gLUVXT1VMREJMT0NLIDogdGltZW91dDsKLQkJCWdvdG8gZXJyX2V4aXQ7Ci0J
CX0KLQl9Ci0KLQllYi0+ZW5naW5lID0gY2UtPmVuZ2luZTsKLQllYi0+Y29udGV4dCA9IGNlOwot
CXJldHVybiAwOwotCi1lcnJfZXhpdDoKLQltdXRleF9sb2NrKCZ0bC0+bXV0ZXgpOwotCWludGVs
X2NvbnRleHRfZXhpdChjZSk7Ci0JaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2sodGwpOwot
ZXJyX3VucGluOgotCWludGVsX2NvbnRleHRfdW5waW4oY2UpOwotCXJldHVybiBlcnI7CisJZWIt
PmFyZ3MtPmZsYWdzIHw9IF9fRVhFQ19FTkdJTkVfUElOTkVEOworCXJldHVybiBycTsKIH0KIAog
c3RhdGljIHZvaWQgZWJfdW5waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQpA
QCAtMjYwMiw2ICsyNjQ1LDExIEBAIHN0YXRpYyB2b2lkIGViX3VucGluX2VuZ2luZShzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYikKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBlYi0+Y29u
dGV4dDsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsID0gY2UtPnRpbWVsaW5lOwogCisJaWYg
KCEoZWItPmFyZ3MtPmZsYWdzICYgX19FWEVDX0VOR0lORV9QSU5ORUQpKQorCQlyZXR1cm47CisK
KwllYi0+YXJncy0+ZmxhZ3MgJj0gfl9fRVhFQ19FTkdJTkVfUElOTkVEOworCiAJbXV0ZXhfbG9j
aygmdGwtPm11dGV4KTsKIAlpbnRlbF9jb250ZXh0X2V4aXQoY2UpOwogCW11dGV4X3VubG9jaygm
dGwtPm11dGV4KTsKQEAgLTI2NTMsNyArMjcwMSw3IEBAIGViX3NlbGVjdF9sZWdhY3lfcmluZyhz
dHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIH0KIAogc3RhdGljIGludAotZWJfcGluX2VuZ2lu
ZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKK2ViX3NlbGVjdF9lbmdpbmUoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIpCiB7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCXVuc2ln
bmVkIGludCBpZHg7CkBAIC0yNjY4LDEyICsyNzE2LDQ1IEBAIGViX3Bpbl9lbmdpbmUoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJaWYgKElTX0VSUihjZSkpCiAJCXJldHVybiBQVFJfRVJS
KGNlKTsKIAotCWVyciA9IF9fZWJfcGluX2VuZ2luZShlYiwgY2UpOwotCWludGVsX2NvbnRleHRf
cHV0KGNlKTsKKwlpbnRlbF9ndF9wbV9nZXQoY2UtPmVuZ2luZS0+Z3QpOwogCisJaWYgKCF0ZXN0
X2JpdChDT05URVhUX0FMTE9DX0JJVCwgJmNlLT5mbGFncykpIHsKKwkJZXJyID0gaW50ZWxfY29u
dGV4dF9hbGxvY19zdGF0ZShjZSk7CisJCWlmIChlcnIpCisJCQlnb3RvIGVycjsKKwl9CisKKwkv
KgorCSAqIEFCSTogQmVmb3JlIHVzZXJzcGFjZSBhY2Nlc3NlcyB0aGUgR1BVIChlLmcuIGV4ZWNi
dWZmZXIpLCByZXBvcnQKKwkgKiBFSU8gaWYgdGhlIEdQVSBpcyBhbHJlYWR5IHdlZGdlZC4KKwkg
Ki8KKwllcnIgPSBpbnRlbF9ndF90ZXJtaW5hbGx5X3dlZGdlZChjZS0+ZW5naW5lLT5ndCk7CisJ
aWYgKGVycikKKwkJZ290byBlcnI7CisKKwllYi0+Y29udGV4dCA9IGNlOworCWViLT5lbmdpbmUg
PSBjZS0+ZW5naW5lOworCisJLyoKKwkgKiBNYWtlIHN1cmUgZW5naW5lIHBvb2wgc3RheXMgYWxp
dmUgZXZlbiBpZiB3ZSBjYWxsIGludGVsX2NvbnRleHRfcHV0CisJICogZHVyaW5nIHd3IGhhbmRs
aW5nLiBUaGUgcG9vbCBpcyBkZXN0cm95ZWQgd2hlbiBsYXN0IHBtIHJlZmVyZW5jZQorCSAqIGlz
IGRyb3BwZWQsIHdoaWNoIGJyZWFrcyBvdXIgLUVERUFETEsgaGFuZGxpbmcuCisJICovCisJcmV0
dXJuIGVycjsKKworZXJyOgorCWludGVsX2d0X3BtX3B1dChjZS0+ZW5naW5lLT5ndCk7CisJaW50
ZWxfY29udGV4dF9wdXQoY2UpOwogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyB2b2lkCitlYl9w
dXRfZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQoreworCWludGVsX2d0X3BtX3B1
dChlYi0+ZW5naW5lLT5ndCk7CisJaW50ZWxfY29udGV4dF9wdXQoZWItPmNvbnRleHQpOworfQor
CiBzdGF0aWMgdm9pZAogX19mcmVlX2ZlbmNlX2FycmF5KHN0cnVjdCBlYl9mZW5jZSAqZmVuY2Vz
LCB1bnNpZ25lZCBpbnQgbikKIHsKQEAgLTMwNTQsNiArMzEzNSw3IEBAIGk5MTVfZ2VtX2RvX2V4
ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAllYi52bWEgPSAoc3RydWN0IGViX3Zt
YSAqKShleGVjICsgYXJncy0+YnVmZmVyX2NvdW50ICsgMSk7CiAJZWIudm1hWzBdLnZtYSA9IE5V
TEw7CiAJZWIucmVsb2NfcG9vbCA9IGViLmJhdGNoX3Bvb2wgPSBOVUxMOworCWViLnJlbG9jX2Nv
bnRleHQgPSBOVUxMOwogCiAJZWIuaW52YWxpZF9mbGFncyA9IF9fRVhFQ19PQkpFQ1RfVU5LTk9X
Tl9GTEFHUzsKIAlyZWxvY19jYWNoZV9pbml0KCZlYi5yZWxvY19jYWNoZSwgZWIuaTkxNSk7CkBA
IC0zMTIyLDcgKzMyMDQsNyBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYsCiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gZXJyX2Rlc3Ryb3k7CiAKLQll
cnIgPSBlYl9waW5fZW5naW5lKCZlYik7CisJZXJyID0gZWJfc2VsZWN0X2VuZ2luZSgmZWIpOwog
CWlmICh1bmxpa2VseShlcnIpKQogCQlnb3RvIGVycl9jb250ZXh0OwogCkBAIC0zMjU5LDggKzMz
NDEsMTAgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAog
CQlpbnRlbF9ndF9idWZmZXJfcG9vbF9wdXQoZWIuYmF0Y2hfcG9vbCk7CiAJaWYgKGViLnJlbG9j
X3Bvb2wpCiAJCWludGVsX2d0X2J1ZmZlcl9wb29sX3B1dChlYi5yZWxvY19wb29sKTsKKwlpZiAo
ZWIucmVsb2NfY29udGV4dCkKKwkJaW50ZWxfY29udGV4dF9wdXQoZWIucmVsb2NfY29udGV4dCk7
CiBlcnJfZW5naW5lOgotCWViX3VucGluX2VuZ2luZSgmZWIpOworCWViX3B1dF9lbmdpbmUoJmVi
KTsKIGVycl9jb250ZXh0OgogCWk5MTVfZ2VtX2NvbnRleHRfcHV0KGViLmdlbV9jb250ZXh0KTsK
IGVycl9kZXN0cm95OgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0
ZXN0cy9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2Vs
ZnRlc3RzL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCBiYzA4YzAyYjU3NjcuLjU2MzgzOWNi
YWYxYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1
X2dlbV9leGVjYnVmZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0
cy9pOTE1X2dlbV9leGVjYnVmZmVyLmMKQEAgLTEzNSw2ICsxMzUsNyBAQCBzdGF0aWMgaW50IGln
dF9ncHVfcmVsb2Modm9pZCAqYXJnKQogCQkJZ290byBlcnJfcG07CiAJCX0KIAkJZWIucmVsb2Nf
cG9vbCA9IE5VTEw7CisJCWViLnJlbG9jX2NvbnRleHQgPSBOVUxMOwogCiAJCWk5MTVfZ2VtX3d3
X2N0eF9pbml0KCZlYi53dywgZmFsc2UpOwogcmV0cnk6CkBAIC0xNTMsNiArMTU0LDggQEAgc3Rh
dGljIGludCBpZ3RfZ3B1X3JlbG9jKHZvaWQgKmFyZykKIAogCQlpZiAoZWIucmVsb2NfcG9vbCkK
IAkJCWludGVsX2d0X2J1ZmZlcl9wb29sX3B1dChlYi5yZWxvY19wb29sKTsKKwkJaWYgKGViLnJl
bG9jX2NvbnRleHQpCisJCQlpbnRlbF9jb250ZXh0X3B1dChlYi5yZWxvY19jb250ZXh0KTsKIAog
CQlpbnRlbF9jb250ZXh0X3B1dChlYi5jb250ZXh0KTsKIGVycl9wbToKLS0gCjIuMjguMAoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

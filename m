Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6943C2842FE
	for <lists+intel-gfx@lfdr.de>; Tue,  6 Oct 2020 01:37:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 56AD56E1B2;
	Mon,  5 Oct 2020 23:37:44 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 238016E1A8
 for <intel-gfx@lists.freedesktop.org>; Mon,  5 Oct 2020 23:37:43 +0000 (UTC)
IronPort-SDR: L/AA75EvKx98XP+fEuEpYUfCxemGhVviazHccZfH/Q/0Y0tSPVBS0zYRa65c+OdfFBPJS1KTsK
 XXceqFNRFeJw==
X-IronPort-AV: E=McAfee;i="6000,8403,9765"; a="181711775"
X-IronPort-AV: E=Sophos;i="5.77,341,1596524400"; d="scan'208";a="181711775"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga101.fm.intel.com with ESMTP; 05 Oct 2020 16:27:30 -0700
IronPort-SDR: 9eQdQhp7sbiQ0kanodiqloWfb/JyfTT4zK2dKfe491GReIXqIu6VStrROv0qt5aqSk1wioeFaZ
 mJENJmdlhDVw==
X-IronPort-AV: E=Sophos;i="5.77,341,1596524400"; d="scan'208";a="310388791"
Received: from ideak-desk.fi.intel.com ([10.237.68.141])
 by orsmga003-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 05 Oct 2020 14:53:54 -0700
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  6 Oct 2020 00:53:11 +0300
Message-Id: <20201005215311.1475666-2-imre.deak@intel.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20201003001846.1271151-5-imre.deak@intel.com>
References: <20201003001846.1271151-5-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 4/5] drm/i915: Add an encoder hook to
 sanitize its state during init/resume
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXRtLCBpZiBhIGZ1bGwgbW9kZXNldCBpcyBwZXJmb3JtZWQgZHVyaW5nIHRoZSBpbml0aWFsIG1v
ZGVzZXQgdGhlIGxpbmsKdHJhaW5pbmcgd2lsbCBoYXBwZW4gd2l0aCB1bmluaXRpYWxpemVkIG1h
eCBEUCByYXRlIGFuZCBsYW5lIGNvdW50LiBNYWtlCnN1cmUgdGhlIGNvcnJlc3BvbmRpbmcgZW5j
b2RlciBzdGF0ZSBpcyBpbml0aWFsaXplZCBieSBhZGRpbmcgYW4gZW5jb2Rlcgpob29rIGNhbGxl
ZCBkdXJpbmcgZHJpdmVyIGluaXQgYW5kIHN5c3RlbSByZXN1bWUuCgpBIGJldHRlciBhbHRlcm5h
dGl2ZSB3b3VsZCBiZSB0byBzdG9yZSBhbGwgc3RhdGVzIGluIHRoZSBDUlRDIHN0YXRlIGFuZApt
YWtlIHRoaXMgc3RhdGUgYXZhaWxhYmxlIGZvciB0aGUgbGluayByZS10cmFpbmluZyBjb2RlLiBB
bHNvIGluc3RlYWQgb2YKdGhlIERQQ0QgcmVhZCBpbiB0aGUgaG9vayB0aGVyZSBzaG91bGQgYmUg
cmVhbGx5IGEgcHJvcGVyIHNpbmsgSFcKcmVhZG91dCBpbiBwbGFjZS4gQm90aCBvZiB0aGVzZSBy
ZXF1aXJlIGEgYmlnZ2VyIHJld29yaywgc28gZm9yIG5vdyBvcHRpbmcKZm9yIHRoaXMgbWluaW1h
bCBmaXggdG8gbWFrZSBhdCBsZWFzdCBmdWxsIGluaXRpYWwgbW9kZXNldHMgd29yay4KClRoZSBw
YXRjaCBpcyBiYXNlZCBvbgpodHRwczovL3BhdGNod29yay5mcmVlZGVza3RvcC5vcmcvcGF0Y2gv
MTAxNDczLz9zZXJpZXM9MTAzNTQmcmV2PTMKCnYyOiAoVmlsbGUpCi0gcy9zYW5pdGl6ZV9zdGF0
ZS9zeW5jX3N0YXRlLwotIE5vIHBvaW50IGluIGNhbGxpbmcgdGhlIGhvb2sgd2hlbiBDUlRDIGlz
IGRpc2FibGVkLCByZW1vdmUgdGhlIGNhbGwuCi0gTm8gcG9pbnQgaW4gY2FsbGluZyB0aGUgaG9v
ayBmb3IgTVNULCByZW1vdmUgaXQuCgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxh
QGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogSW1yZSBEZWFrIDxpbXJlLmRlYWtAaW50
ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAg
ICB8ICA4ICsrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMgIHwgIDIgKysKIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAg
ICB8ICA3ICsrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAg
ICAgfCAyOCArKysrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RwLmggICAgICAgfCAgMiArKwogNSBmaWxlcyBjaGFuZ2VkLCA0NyBpbnNlcnRpb25z
KCspCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGku
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggNGU1NGM1
NWVjOTlmLi42ZjdiZDY3NzMyZjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuYwpAQCAtNDU2NCw2ICs0NTY0LDEzIEBAIHZvaWQgaW50ZWxfZGRpX2dldF9jb25maWco
c3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaW50ZWxfcmVhZF9kcF9zZHAoZW5jb2Rl
ciwgcGlwZV9jb25maWcsIERQX1NEUF9WU0MpOwogfQogCitzdGF0aWMgdm9pZCBpbnRlbF9kZGlf
c3luY19zdGF0ZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJaWYgKGludGVsX2NydGNfaGFz
X2RwX2VuY29kZXIoY3J0Y19zdGF0ZSkpCisJCWludGVsX2RwX3N5bmNfc3RhdGUoZW5jb2Rlciwg
Y3J0Y19zdGF0ZSk7Cit9CisKIHN0YXRpYyBib29sIGludGVsX2RkaV9pbml0aWFsX2Zhc3RzZXRf
Y2hlY2soc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJCSAgICBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKQEAgLTUxODIsNiArNTE4OSw3IEBAIHZvaWQg
aW50ZWxfZGRpX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBv
cnQgcG9ydCkKIAllbmNvZGVyLT51cGRhdGVfcGlwZSA9IGludGVsX2RkaV91cGRhdGVfcGlwZTsK
IAllbmNvZGVyLT5nZXRfaHdfc3RhdGUgPSBpbnRlbF9kZGlfZ2V0X2h3X3N0YXRlOwogCWVuY29k
ZXItPmdldF9jb25maWcgPSBpbnRlbF9kZGlfZ2V0X2NvbmZpZzsKKwllbmNvZGVyLT5zeW5jX3N0
YXRlID0gaW50ZWxfZGRpX3N5bmNfc3RhdGU7CiAJZW5jb2Rlci0+aW5pdGlhbF9mYXN0c2V0X2No
ZWNrID0gaW50ZWxfZGRpX2luaXRpYWxfZmFzdHNldF9jaGVjazsKIAllbmNvZGVyLT5zdXNwZW5k
ID0gaW50ZWxfZHBfZW5jb2Rlcl9zdXNwZW5kOwogCWVuY29kZXItPmdldF9wb3dlcl9kb21haW5z
ID0gaW50ZWxfZGRpX2dldF9wb3dlcl9kb21haW5zOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCA3NTViODNkNDdmOWMuLjkwN2UxZDE1NTQ0MyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE4
NzIzLDYgKzE4NzIzLDggQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNldF9yZWFkb3V0X2h3X3N0
YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIAkJCWVuY29kZXItPmJhc2UuY3J0YyA9ICZj
cnRjLT5iYXNlOwogCQkJZW5jb2Rlci0+Z2V0X2NvbmZpZyhlbmNvZGVyLCBjcnRjX3N0YXRlKTsK
KwkJCWlmIChlbmNvZGVyLT5zeW5jX3N0YXRlKQorCQkJCWVuY29kZXItPnN5bmNfc3RhdGUoZW5j
b2RlciwgY3J0Y19zdGF0ZSk7CiAJCX0gZWxzZSB7CiAJCQllbmNvZGVyLT5iYXNlLmNydGMgPSBO
VUxMOwogCQl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheV90eXBlcy5oCmluZGV4IDUyOTdiMmYwOGZmOS4uNjVhZTIwNzA1NzZmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAt
MTg4LDYgKzE4OCwxMyBAQCBzdHJ1Y3QgaW50ZWxfZW5jb2RlciB7CiAJdm9pZCAoKmdldF9jb25m
aWcpKHN0cnVjdCBpbnRlbF9lbmNvZGVyICosCiAJCQkgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqcGlwZV9jb25maWcpOwogCisJLyoKKwkgKiBPcHRpb25hbCBob29rIGNhbGxlZCBkdXJpbmcg
aW5pdC9yZXN1bWUgdG8gc3luYyBhbnkgc3RhdGUKKwkgKiBzdG9yZWQgaW4gdGhlIGVuY29kZXIg
KGVnLiBEUCBsaW5rIHBhcmFtZXRlcnMpIHdydC4gdGhlIEhXIHN0YXRlLgorCSAqLworCXZvaWQg
KCpzeW5jX3N0YXRlKShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCSAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKKwogCS8qCiAJICogT3B0aW9u
YWwgaG9vaywgcmV0dXJuaW5nIHRydWUgaWYgdGhpcyBlbmNvZGVyIGFsbG93cyBhIGZhc3RzZXQK
IAkgKiBkdXJpbmcgdGhlIGluaXRpYWwgY29tbWl0LCBmYWxzZSBvdGhlcndpc2UuCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKaW5kZXggZGY1Mjc3YzJiOWJhLi41NDMyOGVi
YTQ3M2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTM3MDMs
NiArMzcwMywzMyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9nZXRfY29uZmlnKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogCX0KIH0KIAorc3RhdGljIGJvb2wKK2ludGVsX2RwX2dldF9k
cGNkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOworCisvKioKKyAqIGludGVsX2RwX3N5bmNf
c3RhdGUgLSBzeW5jIHRoZSBlbmNvZGVyIHN0YXRlIGR1cmluZyBpbml0L3Jlc3VtZQorICogQGVu
Y29kZXI6IGludGVsIGVuY29kZXIgdG8gc3luYworICogQGNydGNfc3RhdGU6IHN0YXRlIGZvciB0
aGUgQ1JUQyBjb25uZWN0ZWQgdG8gdGhlIGVuY29kZXIKKyAqCisgKiBTeW5jIGFueSBzdGF0ZSBz
dG9yZWQgaW4gdGhlIGVuY29kZXIgd3J0LiBIVyBzdGF0ZSBkdXJpbmcgZHJpdmVyIGluaXQKKyAq
IGFuZCBzeXN0ZW0gcmVzdW1lLgorICovCit2b2lkIGludGVsX2RwX3N5bmNfc3RhdGUoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCit7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19p
bnRlbF9kcChlbmNvZGVyKTsKKworCS8qCisJICogRG9uJ3QgY2xvYmJlciBEUENEIGlmIGl0J3Mg
YmVlbiBhbHJlYWR5IHJlYWQgb3V0IGR1cmluZyBvdXRwdXQKKwkgKiBzZXR1cCAoZURQKSBvciBk
ZXRlY3QuCisJICovCisJaWYgKCFtZW1jaHJfaW52KGludGVsX2RwLT5kcGNkLCAwLCBzaXplb2Yo
aW50ZWxfZHAtPmRwY2QpKSkKKwkJaW50ZWxfZHBfZ2V0X2RwY2QoaW50ZWxfZHApOworCisJaW50
ZWxfZHAtPm1heF9saW5rX2xhbmVfY291bnQgPSBpbnRlbF9kcF9tYXhfY29tbW9uX2xhbmVfY291
bnQoaW50ZWxfZHApOworCWludGVsX2RwLT5tYXhfbGlua19yYXRlID0gaW50ZWxfZHBfbWF4X2Nv
bW1vbl9yYXRlKGludGVsX2RwKTsKK30KKwogYm9vbCBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRf
Y2hlY2soc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJICAgIHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewpAQCAtODA5MCw2ICs4MTE3LDcgQEAgYm9vbCBp
bnRlbF9kcF9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlpbnRlbF9l
bmNvZGVyLT5jb21wdXRlX2NvbmZpZyA9IGludGVsX2RwX2NvbXB1dGVfY29uZmlnOwogCWludGVs
X2VuY29kZXItPmdldF9od19zdGF0ZSA9IGludGVsX2RwX2dldF9od19zdGF0ZTsKIAlpbnRlbF9l
bmNvZGVyLT5nZXRfY29uZmlnID0gaW50ZWxfZHBfZ2V0X2NvbmZpZzsKKwlpbnRlbF9lbmNvZGVy
LT5zeW5jX3N0YXRlID0gaW50ZWxfZHBfc3luY19zdGF0ZTsKIAlpbnRlbF9lbmNvZGVyLT5pbml0
aWFsX2Zhc3RzZXRfY2hlY2sgPSBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2s7CiAJaW50
ZWxfZW5jb2Rlci0+dXBkYXRlX3BpcGUgPSBpbnRlbF9wYW5lbF91cGRhdGVfYmFja2xpZ2h0Owog
CWludGVsX2VuY29kZXItPnN1c3BlbmQgPSBpbnRlbF9kcF9lbmNvZGVyX3N1c3BlbmQ7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmggYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKaW5kZXggOTc3NTg1YWVhM2M4Li42YzIw
MTM3N2ZkYzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHAuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKQEAgLTE0
Myw1ICsxNDMsNyBAQCBpbnQgaW50ZWxfZHBfaW5pdF9oZGNwKHN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0LAogCiBib29sIGludGVsX2RwX2luaXRpYWxfZmFzdHNldF9jaGVjayhz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkgICAgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpOwordm9pZCBpbnRlbF9kcF9zeW5jX3N0YXRlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAorCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKTsKIAogI2VuZGlmIC8qIF9fSU5URUxfRFBfSF9fICovCi0tIAoyLjI1LjEKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBt
YWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

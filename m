Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6EE0360D3E2
	for <lists+intel-gfx@lfdr.de>; Tue, 25 Oct 2022 20:46:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2737F10E08C;
	Tue, 25 Oct 2022 18:46:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 713E310E08C
 for <intel-gfx@lists.freedesktop.org>; Tue, 25 Oct 2022 18:46:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1666723597; x=1698259597;
 h=date:message-id:from:to:cc:subject:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=pClBDSYCrtAWAhevkTxjajngEQIkj89WGWN8JqHSZsE=;
 b=cSHaVSehCzmmYWd5h9KIYKaxgy8ifldp26/pozRGMcoa0TsVITPyJrlB
 bDs2ZrSsMfukoFDMfIvGy+el110p7zm6SI+uQgT2w2HY3lkUEc5Yn7U9s
 3SQ7W21iF6e496QoMhonn/Jk9hlVFLlbVME7ctVqtboXduVcK6oHJYqBI
 AU0VsWUyPLc5vHBE9ZhrNw07fJP+SqFzDUY2k8J0krLvwyh6fAuHTe0Gg
 MntFaSEPh7BNBhN2r5IJcYHn7QMcd8B7KIBuSSIvIDXJjxUtN8NV/8NvZ
 xlk9CgFnB0+kyrE6nO73enVg2RUGtMClqhFoOpDui9/FeYbG3vFqLdidR w==;
X-IronPort-AV: E=McAfee;i="6500,9779,10511"; a="306492907"
X-IronPort-AV: E=Sophos;i="5.95,212,1661842800"; d="scan'208";a="306492907"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by fmsmga104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 Oct 2022 11:46:36 -0700
X-IronPort-AV: E=McAfee;i="6500,9779,10511"; a="720970947"
X-IronPort-AV: E=Sophos;i="5.95,212,1661842800"; d="scan'208";a="720970947"
Received: from adixit-mobl.amr.corp.intel.com (HELO adixit-arch.intel.com)
 ([10.212.213.83])
 by fmsmga003-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 Oct 2022 11:46:36 -0700
Date: Tue, 25 Oct 2022 11:46:09 -0700
Message-ID: <87h6zrpwr2.wl-ashutosh.dixit@intel.com>
From: "Dixit, Ashutosh" <ashutosh.dixit@intel.com>
To: Jani Nikula <jani.nikula@linux.intel.com>
In-Reply-To: <87bkq0dlgm.fsf@intel.com>
References: <20221024210953.1572998-1-gwan-gyeong.mun@intel.com>	<87eduwdllr.fsf@intel.com>	<87bkq0dlgm.fsf@intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL-LB/10.8 EasyPG/1.0.0
 Emacs/28.2 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=ISO-8859-7
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Intel-gfx] [PATCH] drm/i915/hwmon: Fix a build error used with
 clang compiler
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

On Tue, 25 Oct 2022 07:30:49 -0700, Jani Nikula wrote:
>
> On Tue, 25 Oct 2022, Jani Nikula <jani.nikula@linux.intel.com> wrote:
> > On Tue, 25 Oct 2022, Gwan-gyeong Mun <gwan-gyeong.mun@intel.com> wrote:
> >> If a non-constant variable is used as the first argument of the FIELD_=
PREP
> >> macro, a build error occurs when using the clang compiler.
> >>
> >> Fix the following build error used with clang compiler:
> >>
> >> drivers/gpu/drm/i915/i915_hwmon.c:115:16: error: result of comparison =
of constant 18446744073709551615 with expression of type 'typeof (_Generic(=
(field_msk), char: (unsigned char)0, unsigned char: (unsigned char)0, signe=
d char: (unsigned char)0, unsigned short: (unsigned short)0, short: (unsign=
ed short)0, unsigned int: (unsigned int)0, int: (unsigned int)0, unsigned l=
ong: (unsigned long)0, long: (unsigned long)0, unsigned long long: (unsigne=
d long long)0, long long: (unsigned long long)0, default: (field_msk)))' (a=
ka 'unsigned int') is always false [-Werror,-Wtautological-constant-out-of-=
range-compare]
> >>         bits_to_set =3D FIELD_PREP(field_msk, nval);
> >>                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
> >> ./include/linux/bitfield.h:114:3: note: expanded from macro 'FIELD_PRE=
P'
> >>                 __BF_FIELD_CHECK(_mask, 0ULL, _val, "FIELD_PREP: ");  =
  \
> >>                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> >> ./include/linux/bitfield.h:71:53: note: expanded from macro '__BF_FIEL=
D_CHECK'
> >>                 BUILD_BUG_ON_MSG(__bf_cast_unsigned(_mask, _mask) >   =
  \
> >>                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~=
~~~
> >> ./include/linux/build_bug.h:39:58: note: expanded from macro 'BUILD_BU=
G_ON_MSG'
> >>                                     ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
> >> ./include/linux/compiler_types.h:357:22: note: expanded from macro 'co=
mpiletime_assert'
> >>         _compiletime_assert(condition, msg, __compiletime_assert_, __C=
OUNTER__)
> >>         ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~=
~~~~~~~~~
> >> ./include/linux/compiler_types.h:345:23: note: expanded from macro '_c=
ompiletime_assert'
> >>         __compiletime_assert(condition, msg, prefix, suffix)
> >>         ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> >> ./include/linux/compiler_types.h:337:9: note: expanded from macro '__c=
ompiletime_assert'
> >>                 if (!(condition))                                     =
  \
> >>
> >> Fixes: 99f55efb7911 ("drm/i915/hwmon: Power PL1 limit and TDP setting")
> >> Cc: Ashutosh Dixit <ashutosh.dixit@intel.com>
> >> Cc: Anshuman Gupta <anshuman.gupta@intel.com>
> >> Cc: Andi Shyti <andi.shyti@linux.intel.com>
> >> Signed-off-by: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
> >> ---
> >>  drivers/gpu/drm/i915/i915_hwmon.c | 12 +++---------
> >>  1 file changed, 3 insertions(+), 9 deletions(-)
> >>
> >> diff --git a/drivers/gpu/drm/i915/i915_hwmon.c b/drivers/gpu/drm/i915/=
i915_hwmon.c
> >> index 9e9781493025..782a621b1928 100644
> >> --- a/drivers/gpu/drm/i915/i915_hwmon.c
> >> +++ b/drivers/gpu/drm/i915/i915_hwmon.c
> >> @@ -101,21 +101,16 @@ hwm_field_read_and_scale(struct hwm_drvdata *dda=
t, i915_reg_t rgadr,
> >>
> >>  static void
> >>  hwm_field_scale_and_write(struct hwm_drvdata *ddat, i915_reg_t rgadr,
> >> -			  u32 field_msk, int nshift,
> >> -			  unsigned int scale_factor, long lval)
> >> +			  int nshift, unsigned int scale_factor, long lval)
> >>  {
> >>	u32 nval;
> >> -	u32 bits_to_clear;
> >> -	u32 bits_to_set;
> >>
> >>	/* Computation in 64-bits to avoid overflow. Round to nearest. */
> >>	nval =3D DIV_ROUND_CLOSEST_ULL((u64)lval << nshift, scale_factor);
> >>
> >> -	bits_to_clear =3D field_msk;
> >> -	bits_to_set =3D FIELD_PREP(field_msk, nval);
> >
> > Please just switch to REG_FIELD_PREP() and it should be fine.
>
> Actually, probably not, but please switch to it anyway. ;)

This is what happens with REG_FIELD_PREP(), that is why we went ahead with
FIELD_PREP(). So REG_FIELD_PREP is not an option.

  CC [M]  drivers/gpu/drm/i915/i915_hwmon.o
In file included from ./include/linux/bits.h:22,
                 from ./include/linux/bitops.h:6,
                 from ./include/linux/hwmon.h:15,
                 from drivers/gpu/drm/i915/i915_hwmon.c:6:
drivers/gpu/drm/i915/i915_hwmon.c: In function =A1hwm_field_scale_and_write=
=A2:
./include/linux/build_bug.h:16:51: error: negative width in bit-field =A1<a=
nonymous>=A2
   16 | #define BUILD_BUG_ON_ZERO(e) ((int)(sizeof(struct { int:(-!!(e)); }=
)))
      |                                                   ^
./drivers/gpu/drm/i915/i915_reg_defs.h:72:16: note: in expansion of macro =
=A1BUILD_BUG_ON_ZERO=A2
   72 |                BUILD_BUG_ON_ZERO(!__is_constexpr(__mask)) +        =
     \
      |                ^~~~~~~~~~~~~~~~~
drivers/gpu/drm/i915/i915_hwmon.c:115:23: note: in expansion of macro =A1RE=
G_FIELD_PREP=A2
  115 |         bits_to_set =3D REG_FIELD_PREP(field_msk, nval);
      |                       ^~~~~~~~~~~~~~
./include/linux/build_bug.h:16:51: error: bit-field =A1<anonymous>=A2 width=
 not an integer constant
   16 | #define BUILD_BUG_ON_ZERO(e) ((int)(sizeof(struct { int:(-!!(e)); }=
)))
      |                                                   ^
./drivers/gpu/drm/i915/i915_reg_defs.h:73:16: note: in expansion of macro =
=A1BUILD_BUG_ON_ZERO=A2
   73 |                BUILD_BUG_ON_ZERO((__mask) =3D=3D 0 || (__mask) > U3=
2_MAX) +         \
      |                ^~~~~~~~~~~~~~~~~
drivers/gpu/drm/i915/i915_hwmon.c:115:23: note: in expansion of macro =A1RE=
G_FIELD_PREP=A2
  115 |         bits_to_set =3D REG_FIELD_PREP(field_msk, nval);
      |                       ^~~~~~~~~~~~~~
./include/linux/build_bug.h:16:51: error: bit-field =A1<anonymous>=A2 width=
 not an integer constant
   16 | #define BUILD_BUG_ON_ZERO(e) ((int)(sizeof(struct { int:(-!!(e)); }=
)))
      |                                                   ^
./drivers/gpu/drm/i915/i915_reg_defs.h:74:16: note: in expansion of macro =
=A1BUILD_BUG_ON_ZERO=A2
   74 |                BUILD_BUG_ON_ZERO(!IS_POWER_OF_2((__mask) + (1ULL <<=
 __bf_shf(__mask)))) + \
      |                ^~~~~~~~~~~~~~~~~
drivers/gpu/drm/i915/i915_hwmon.c:115:23: note: in expansion of macro =A1RE=
G_FIELD_PREP=A2
  115 |         bits_to_set =3D REG_FIELD_PREP(field_msk, nval);
      |                       ^~~~~~~~~~~~~~
make[1]: *** [scripts/Makefile.build:250: drivers/gpu/drm/i915/i915_hwmon.o=
] Error 1
make: *** [Makefile:1992: drivers/gpu/drm/i915] Error 2

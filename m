Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6B6BC19197F
	for <lists+intel-gfx@lfdr.de>; Tue, 24 Mar 2020 19:55:05 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 30A736E514;
	Tue, 24 Mar 2020 18:55:00 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F40686E514
 for <intel-gfx@lists.freedesktop.org>; Tue, 24 Mar 2020 18:54:58 +0000 (UTC)
IronPort-SDR: 0MbbJ2c0vdZSSHDxMCtOzGEHqIuou+Tnw9E4rtlbl2ADKuj/AT0MC3rYo+92PYA9yOuqCKznAY
 vIE0/CtMd/tg==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 24 Mar 2020 11:54:58 -0700
IronPort-SDR: zYR8q1JxqGMebUE8T9m7YUwvmZ6RJ2osU6zqgFREq0NRwhlXiFHoptxnwuvTE0be9YT2HH8Cka
 kumQtZI81hiw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,301,1580803200"; d="scan'208";a="246817665"
Received: from unerlige-desk.jf.intel.com ([10.165.21.208])
 by orsmga003.jf.intel.com with ESMTP; 24 Mar 2020 11:54:57 -0700
From: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
To: intel-gfx@lists.freedesktop.org,
 Lionel G Landwerlin <lionel.g.landwerlin@intel.com>,
 Ashutosh Dixit <ashutosh.dixit@intel.com>
Date: Tue, 24 Mar 2020 11:54:55 -0700
Message-Id: <20200324185457.14635-2-umesh.nerlige.ramappa@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20200324185457.14635-1-umesh.nerlige.ramappa@intel.com>
References: <20200324185457.14635-1-umesh.nerlige.ramappa@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/3] drm/i915/perf: rework aging tail workaround
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTGlvbmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgoK
V2UncmUgYWJvdXQgdG8gaW50cm9kdWNlIGFuIG9wdGlvbnMgdG8gb3BlbiB0aGUgcGVyZiBzdHJl
YW0sIGdpdmluZwp0aGUgdXNlciBhYmlsaXR5IHRvIGNvbmZpZ3VyZSBob3cgb2Z0ZW4gaXQgd2Fu
dHMgdGhlIGtlcm5lbCB0byBwb2xsCnRoZSBPQSByZWdpc3RlcnMgZm9yIGF2YWlsYWJsZSBkYXRh
LgoKUmlnaHQgbm93IHRoZSB3b3JrYXJvdW5kIGFnYWluc3QgdGhlIE9BIHRhaWwgcG9pbnRlciBy
YWNlIGNvbmRpdGlvbgpyZXF1aXJlcyBhdCBsZWFzdCB0d2ljZSB0aGUgaW50ZXJuYWwga2VybmVs
IHBvbGxpbmcgdGltZXIgdG8gbWFrZSBhbnkKZGF0YSBhdmFpbGFibGUuCgpUaGlzIGNoYW5nZXMg
aW50cm9kdWNlIGNoZWNrcyBvbiB0aGUgT0EgZGF0YSB3cml0dGVuIGludG8gdGhlIGNpcmN1bGFy
CmJ1ZmZlciB0byBtYWtlIGFzIG11Y2ggZGF0YSBhcyBwb3NzaWJsZSBhdmFpbGFibGUgb24gdGhl
IGZpcnN0Cml0ZXJhdGlvbiBvZiB0aGUgcG9sbGluZyB0aW1lci4KCnYyOiBVc2UgT0FfVEFLRU4g
bWFjcm8gd2l0aG91dCB0aGUgZ3R0X29mZnNldCAoTGlvbmVsKQp2MzogKFVtZXNoKQotIFJlYmFz
ZQotIENoYW5nZSByZXBvcnQgdG8gcmVwb3J0MzIgZnJvbSBiZWxvdyByZXZpZXcKICBodHRwczov
L3BhdGNod29yay5mcmVlZGVza3RvcC5vcmcvcGF0Y2gvMzMwNzA0Lz9zZXJpZXM9NjY2OTcmcmV2
PTEKdjQ6IChBc2h1dG9zaCwgTGlvbmVsKQotIEZpeCBjaGVja3BhdGNoIGVycm9ycwotIEZpeCBh
Z2luZ190aW1lc3RhbXAgaW5pdGlhbGl6YXRpb24KLSBDaGVjayBmb3Igb25seSBvbmUgdmFsaWQg
bGFuZGVkIHJlcG9ydAotIEZpeCBjaGVjayBmb3IgdW5sYW5kZWQgcmVwb3J0CnY1OiAoQXNodXRv
c2gpCi0gRml4IGJ1ZyBpbiBhY2N1cmF0ZWx5IGRldGVybWluaW5nIGxhbmRlZCByZXBvcnQuCi0g
T3B0aW1pemUgdGhlIGNoZWNrIGZvciBsYW5kZWQgcmVwb3J0cyBieSBnb2luZyBhcyBmYXIgYXMg
dGhlCiAgcHJldmlvdXNseSBkZXRlcm1pbmVkIGFnZWQgdGFpbC4KClNpZ25lZC1vZmYtYnk6IExp
b25lbCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KU2lnbmVkLW9m
Zi1ieTogVW1lc2ggTmVybGlnZSBSYW1hcHBhIDx1bWVzaC5uZXJsaWdlLnJhbWFwcGFAaW50ZWwu
Y29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jICAgICAgIHwgMjA0ICsr
KysrKysrKystLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZl90
eXBlcy5oIHwgIDI4ICsrLS0KIDIgZmlsZXMgY2hhbmdlZCwgOTcgaW5zZXJ0aW9ucygrKSwgMTM1
IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVy
Zi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKaW5kZXggMzIyMmY2Y2Q4MjU1
Li40NTgzYWU5Yjc3YmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVy
Zi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCkBAIC0yMjMsMjYgKzIy
MywxNyBAQAogICoKICAqIEFsdGhvdWdoIHRoaXMgY2FuIGJlIG9ic2VydmVkIGV4cGxpY2l0bHkg
d2hpbGUgY29weWluZyByZXBvcnRzIHRvIHVzZXJzcGFjZQogICogYnkgY2hlY2tpbmcgZm9yIGEg
emVyb2VkIHJlcG9ydC1pZCBmaWVsZCBpbiB0YWlsIHJlcG9ydHMsIHdlIHdhbnQgdG8gYWNjb3Vu
dAotICogZm9yIHRoaXMgZWFybGllciwgYXMgcGFydCBvZiB0aGUgb2FfYnVmZmVyX2NoZWNrIHRv
IGF2b2lkIGxvdHMgb2YgcmVkdW5kYW50Ci0gKiByZWFkKCkgYXR0ZW1wdHMuCi0gKgotICogSW4g
ZWZmZWN0IHdlIGRlZmluZSBhIHRhaWwgcG9pbnRlciBmb3IgcmVhZGluZyB0aGF0IGxhZ3MgdGhl
IHJlYWwgdGFpbAotICogcG9pbnRlciBieSBhdCBsZWFzdCAlT0FfVEFJTF9NQVJHSU5fTlNFQyBu
YW5vc2Vjb25kcywgd2hpY2ggZ2l2ZXMgZW5vdWdoCi0gKiB0aW1lIGZvciB0aGUgY29ycmVzcG9u
ZGluZyByZXBvcnRzIHRvIGJlY29tZSB2aXNpYmxlIHRvIHRoZSBDUFUuCi0gKgotICogVG8gbWFu
YWdlIHRoaXMgd2UgYWN0dWFsbHkgdHJhY2sgdHdvIHRhaWwgcG9pbnRlcnM6Ci0gKiAgMSkgQW4g
J2FnaW5nJyB0YWlsIHdpdGggYW4gYXNzb2NpYXRlZCB0aW1lc3RhbXAgdGhhdCBpcyB0cmFja2Vk
IHVudGlsIHdlCi0gKiAgICAgY2FuIHRydXN0IHRoZSBjb3JyZXNwb25kaW5nIGRhdGEgaXMgdmlz
aWJsZSB0byB0aGUgQ1BVOyBhdCB3aGljaCBwb2ludAotICogICAgIGl0IGlzIGNvbnNpZGVyZWQg
J2FnZWQnLgotICogIDIpIEFuICdhZ2VkJyB0YWlsIHRoYXQgY2FuIGJlIHVzZWQgZm9yIHJlYWQo
KWluZy4KLSAqCi0gKiBUaGUgdHdvIHNlcGFyYXRlIHBvaW50ZXJzIGxldCB1cyBkZWNvdXBsZSBy
ZWFkKClzIGZyb20gdGFpbCBwb2ludGVyIGFnaW5nLgotICoKLSAqIFRoZSB0YWlsIHBvaW50ZXJz
IGFyZSBjaGVja2VkIGFuZCB1cGRhdGVkIGF0IGEgbGltaXRlZCByYXRlIHdpdGhpbiBhIGhydGlt
ZXIKLSAqIGNhbGxiYWNrICh0aGUgc2FtZSBjYWxsYmFjayB0aGF0IGlzIHVzZWQgZm9yIGRlbGl2
ZXJpbmcgRVBPTExJTiBldmVudHMpCi0gKgotICogSW5pdGlhbGx5IHRoZSB0YWlscyBhcmUgbWFy
a2VkIGludmFsaWQgd2l0aCAlSU5WQUxJRF9UQUlMX1BUUiB3aGljaAotICogaW5kaWNhdGVzIHRo
YXQgYW4gdXBkYXRlZCB0YWlsIHBvaW50ZXIgaXMgbmVlZGVkLgorICogZm9yIHRoaXMgZWFybGll
ciwgYXMgcGFydCBvZiB0aGUgb2FfYnVmZmVyX2NoZWNrX3VubG9ja2VkIHRvIGF2b2lkIGxvdHMg
b2YKKyAqIHJlZHVuZGFudCByZWFkKCkgYXR0ZW1wdHMuCisgKgorICogV2Ugd29ya2Fyb3VuZCB0
aGlzIGlzc3VlIGluIG9hX2J1ZmZlcl9jaGVja191bmxvY2tlZCgpIGJ5IHJlYWRpbmcgdGhlIHJl
cG9ydHMKKyAqIGluIHRoZSBPQSBidWZmZXIsIHN0YXJ0aW5nIGZyb20gdGhlIHRhaWwgcmVwb3J0
ZWQgYnkgdGhlIEhXIHVudGlsIHdlIGZpbmQgYQorICogcmVwb3J0IHdpdGggaXRzIGZpcnN0IDIg
ZHdvcmRzIG5vdCAwIG1lYW5pbmcgaXRzIHByZXZpb3VzIHJlcG9ydCBpcworICogY29tcGxldGVs
eSBpbiBtZW1vcnkgYW5kIHJlYWR5IHRvIGJlIHJlYWQuIFRob3NlIGR3b3JkcyBhcmUgYWxzbyBz
ZXQgdG8gMAorICogb25jZSByZWFkIGFuZCB0aGUgd2hvbGUgYnVmZmVyIGlzIGNsZWFyZWQgdXBv
biBPQSBidWZmZXIgaW5pdGlhbGl6YXRpb24uIFRoZQorICogZmlyc3QgZHdvcmQgaXMgdGhlIHJl
YXNvbiBmb3IgdGhpcyByZXBvcnQgd2hpbGUgdGhlIHNlY29uZCBpcyB0aGUgdGltZXN0YW1wLAor
ICogbWFraW5nIHRoZSBjaGFuY2VzIG9mIGhhdmluZyB0aG9zZSAyIGZpZWxkcyBhdCAwIGZhaXJs
eSB1bmxpa2VseS4gQSBtb3JlCisgKiBkZXRhaWxlZCBleHBsYW5hdGlvbiBpcyBhdmFpbGFibGUg
aW4gb2FfYnVmZmVyX2NoZWNrX3VubG9ja2VkKCkuCiAgKgogICogTW9zdCBvZiB0aGUgaW1wbGVt
ZW50YXRpb24gZGV0YWlscyBmb3IgdGhpcyB3b3JrYXJvdW5kIGFyZSBpbgogICogb2FfYnVmZmVy
X2NoZWNrX3VubG9ja2VkKCkgYW5kIF9hcHBlbmRfb2FfcmVwb3J0cygpCkBAIC00NTQsOCArNDQ1
LDggQEAgc3RhdGljIHUzMiBnZW43X29hX2h3X3RhaWxfcmVhZChzdHJ1Y3QgaTkxNV9wZXJmX3N0
cmVhbSAqc3RyZWFtKQogICogKFNlZSBkZXNjcmlwdGlvbiBvZiBPQV9UQUlMX01BUkdJTl9OU0VD
IGFib3ZlIGZvciBmdXJ0aGVyIGRldGFpbHMuKQogICoKICAqIEJlc2lkZXMgcmV0dXJuaW5nIHRy
dWUgd2hlbiB0aGVyZSBpcyBkYXRhIGF2YWlsYWJsZSB0byByZWFkKCkgdGhpcyBmdW5jdGlvbgot
ICogYWxzbyBoYXMgdGhlIHNpZGUgZWZmZWN0IG9mIHVwZGF0aW5nIHRoZSBvYV9idWZmZXIudGFp
bHNbXSwgLmFnaW5nX3RpbWVzdGFtcAotICogYW5kIC5hZ2VkX3RhaWxfaWR4IHN0YXRlIHVzZWQg
Zm9yIHJlYWRpbmcuCisgKiBhbHNvIHVwZGF0ZXMgdGhlIHRhaWwsIGFnaW5nX3RhaWwgYW5kIGFn
aW5nX3RpbWVzdGFtcCBpbiB0aGUgb2FfYnVmZmVyCisgKiBvYmplY3QuCiAgKgogICogTm90ZTog
SXQncyBzYWZlIHRvIHJlYWQgT0EgY29uZmlnIHN0YXRlIGhlcmUgdW5sb2NrZWQsIGFzc3VtaW5n
IHRoYXQgdGhpcyBpcwogICogb25seSBjYWxsZWQgd2hpbGUgdGhlIHN0cmVhbSBpcyBlbmFibGVk
LCB3aGlsZSB0aGUgZ2xvYmFsIE9BIGNvbmZpZ3VyYXRpb24KQEAgLTQ2NSwyOCArNDU2LDE4IEBA
IHN0YXRpYyB1MzIgZ2VuN19vYV9od190YWlsX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0g
KnN0cmVhbSkKICAqLwogc3RhdGljIGJvb2wgb2FfYnVmZmVyX2NoZWNrX3VubG9ja2VkKHN0cnVj
dCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7CisJdTMyIGd0dF9vZmZzZXQgPSBpOTE1X2dn
dHRfb2Zmc2V0KHN0cmVhbS0+b2FfYnVmZmVyLnZtYSk7CiAJaW50IHJlcG9ydF9zaXplID0gc3Ry
ZWFtLT5vYV9idWZmZXIuZm9ybWF0X3NpemU7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLQl1bnNp
Z25lZCBpbnQgYWdlZF9pZHg7Ci0JdTMyIGhlYWQsIGh3X3RhaWwsIGFnZWRfdGFpbCwgYWdpbmdf
dGFpbDsKKwl1MzIgaHdfdGFpbDsKIAl1NjQgbm93OwogCiAJLyogV2UgaGF2ZSB0byBjb25zaWRl
ciB0aGUgKHVubGlrZWx5KSBwb3NzaWJpbGl0eSB0aGF0IHJlYWQoKSBlcnJvcnMKLQkgKiBjb3Vs
ZCByZXN1bHQgaW4gYW4gT0EgYnVmZmVyIHJlc2V0IHdoaWNoIG1pZ2h0IHJlc2V0IHRoZSBoZWFk
LAotCSAqIHRhaWxzW10gYW5kIGFnZWRfdGFpbCBzdGF0ZS4KKwkgKiBjb3VsZCByZXN1bHQgaW4g
YW4gT0EgYnVmZmVyIHJlc2V0IHdoaWNoIG1pZ2h0IHJlc2V0IHRoZSBoZWFkIGFuZAorCSAqIHRh
aWwgc3RhdGUuCiAJICovCiAJc3Bpbl9sb2NrX2lycXNhdmUoJnN0cmVhbS0+b2FfYnVmZmVyLnB0
cl9sb2NrLCBmbGFncyk7CiAKLQkvKiBOQjogVGhlIGhlYWQgd2Ugb2JzZXJ2ZSBoZXJlIG1pZ2h0
IGVmZmVjdGl2ZWx5IGJlIGEgbGl0dGxlIG91dCBvZgotCSAqIGRhdGUgKGJldHdlZW4gaGVhZCBh
bmQgdGFpbHNbYWdlZF9pZHhdLm9mZnNldCBpZiB0aGVyZSBpcyBjdXJyZW50bHkKLQkgKiBhIHJl
YWQoKSBpbiBwcm9ncmVzcy4KLQkgKi8KLQloZWFkID0gc3RyZWFtLT5vYV9idWZmZXIuaGVhZDsK
LQotCWFnZWRfaWR4ID0gc3RyZWFtLT5vYV9idWZmZXIuYWdlZF90YWlsX2lkeDsKLQlhZ2VkX3Rh
aWwgPSBzdHJlYW0tPm9hX2J1ZmZlci50YWlsc1thZ2VkX2lkeF0ub2Zmc2V0OwotCWFnaW5nX3Rh
aWwgPSBzdHJlYW0tPm9hX2J1ZmZlci50YWlsc1shYWdlZF9pZHhdLm9mZnNldDsKLQogCWh3X3Rh
aWwgPSBzdHJlYW0tPnBlcmYtPm9wcy5vYV9od190YWlsX3JlYWQoc3RyZWFtKTsKIAogCS8qIFRo
ZSB0YWlsIHBvaW50ZXIgaW5jcmVhc2VzIGluIDY0IGJ5dGUgaW5jcmVtZW50cywKQEAgLTQ5Niw2
NCArNDc3LDYxIEBAIHN0YXRpYyBib29sIG9hX2J1ZmZlcl9jaGVja191bmxvY2tlZChzdHJ1Y3Qg
aTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCiAJbm93ID0ga3RpbWVfZ2V0X21vbm9fZmFzdF9u
cygpOwogCi0JLyogVXBkYXRlIHRoZSBhZ2VkIHRhaWwKLQkgKgotCSAqIEZsaXAgdGhlIHRhaWwg
cG9pbnRlciBhdmFpbGFibGUgZm9yIHJlYWQoKXMgb25jZSB0aGUgYWdpbmcgdGFpbCBpcwotCSAq
IG9sZCBlbm91Z2ggdG8gdHJ1c3QgdGhhdCB0aGUgY29ycmVzcG9uZGluZyBkYXRhIHdpbGwgYmUg
dmlzaWJsZSB0bwotCSAqIHRoZSBDUFUuLi4KLQkgKgotCSAqIERvIHRoaXMgYmVmb3JlIHVwZGF0
aW5nIHRoZSBhZ2luZyBwb2ludGVyIGluIGNhc2Ugd2UgbWF5IGJlIGFibGUgdG8KLQkgKiBpbW1l
ZGlhdGVseSBzdGFydCBhZ2luZyBhIG5ldyBwb2ludGVyIHRvbyAoaWYgbmV3IGRhdGEgaGFzIGJl
Y29tZQotCSAqIGF2YWlsYWJsZSkgd2l0aG91dCBuZWVkaW5nIHRvIHdhaXQgZm9yIGEgbGF0ZXIg
aHJ0aW1lciBjYWxsYmFjay4KLQkgKi8KLQlpZiAoYWdpbmdfdGFpbCAhPSBJTlZBTElEX1RBSUxf
UFRSICYmCi0JICAgICgobm93IC0gc3RyZWFtLT5vYV9idWZmZXIuYWdpbmdfdGltZXN0YW1wKSA+
Ci0JICAgICBPQV9UQUlMX01BUkdJTl9OU0VDKSkgewotCi0JCWFnZWRfaWR4IF49IDE7Ci0JCXN0
cmVhbS0+b2FfYnVmZmVyLmFnZWRfdGFpbF9pZHggPSBhZ2VkX2lkeDsKKwlpZiAoaHdfdGFpbCA9
PSBzdHJlYW0tPm9hX2J1ZmZlci5hZ2luZ190YWlsICYmCisJICAgIChub3cgLSBzdHJlYW0tPm9h
X2J1ZmZlci5hZ2luZ190aW1lc3RhbXApID4gT0FfVEFJTF9NQVJHSU5fTlNFQykgeworCQkvKiBJ
ZiB0aGUgSFcgdGFpbCBoYXNuJ3QgbW92ZSBzaW5jZSB0aGUgbGFzdCBjaGVjayBhbmQgdGhlIEhX
CisJCSAqIHRhaWwgaGFzIGJlZW4gYWdpbmcgZm9yIGxvbmcgZW5vdWdoLCBkZWNsYXJlIGl0IHRo
ZSBuZXcKKwkJICogdGFpbC4KKwkJICovCisJCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWwgPSBzdHJl
YW0tPm9hX2J1ZmZlci5hZ2luZ190YWlsOworCX0gZWxzZSB7CisJCXUzMiBoZWFkLCB0YWlsLCBh
Z2VkX3RhaWw7CiAKLQkJYWdlZF90YWlsID0gYWdpbmdfdGFpbDsKKwkJLyogTkI6IFRoZSBoZWFk
IHdlIG9ic2VydmUgaGVyZSBtaWdodCBlZmZlY3RpdmVseSBiZSBhIGxpdHRsZQorCQkgKiBvdXQg
b2YgZGF0ZS4gSWYgYSByZWFkKCkgaXMgaW4gcHJvZ3Jlc3MsIHRoZSBoZWFkIGNvdWxkIGJlCisJ
CSAqIGFueXdoZXJlIGJldHdlZW4gdGhpcyBoZWFkIGFuZCBzdHJlYW0tPm9hX2J1ZmZlci50YWls
LgorCQkgKi8KKwkJaGVhZCA9IHN0cmVhbS0+b2FfYnVmZmVyLmhlYWQgLSBndHRfb2Zmc2V0Owor
CQlhZ2VkX3RhaWwgPSBzdHJlYW0tPm9hX2J1ZmZlci50YWlsIC0gZ3R0X29mZnNldDsKKworCQlo
d190YWlsIC09IGd0dF9vZmZzZXQ7CisJCXRhaWwgPSBod190YWlsOworCisJCS8qIFdhbGsgdGhl
IHN0cmVhbSBiYWNrd2FyZCB1bnRpbCB3ZSBmaW5kIGEgcmVwb3J0IHdpdGggZHdvcmQgMAorCQkg
KiAmIDEgbm90IGF0IDAuIFNpbmNlIHRoZSBjaXJjdWxhciBidWZmZXIgcG9pbnRlcnMgcHJvZ3Jl
c3MgYnkKKwkJICogaW5jcmVtZW50cyBvZiA2NCBieXRlcyBhbmQgdGhhdCByZXBvcnRzIGNhbiBi
ZSB1cCB0byAyNTYKKwkJICogYnl0ZXMgbG9uZywgd2UgY2FuJ3QgdGVsbCB3aGV0aGVyIGEgcmVw
b3J0IGhhcyBmdWxseSBsYW5kZWQKKwkJICogaW4gbWVtb3J5IGJlZm9yZSB0aGUgZmlyc3QgMiBk
d29yZHMgb2YgdGhlIGZvbGxvd2luZyByZXBvcnQKKwkJICogaGF2ZSBlZmZlY3RpdmVseSBsYW5k
ZWQuCisJCSAqCisJCSAqIFRoaXMgaXMgYXNzdW1pbmcgdGhhdCB0aGUgd3JpdGVzIG9mIHRoZSBP
QSB1bml0IGxhbmQgaW4KKwkJICogbWVtb3J5IGluIHRoZSBvcmRlciB0aGV5IHdlcmUgd3JpdHRl
biB0by4KKwkJICogSWYgbm90IDogKOKVr8Kw4pahwrDvvInila/vuLUg4pS74pSB4pS7CisJCSAq
LworCQl3aGlsZSAoT0FfVEFLRU4odGFpbCwgYWdlZF90YWlsKSA+PSByZXBvcnRfc2l6ZSkgewor
CQkJdTMyICpyZXBvcnQzMiA9ICh2b2lkICopKHN0cmVhbS0+b2FfYnVmZmVyLnZhZGRyICsgdGFp
bCk7CiAKLQkJLyogTWFyayB0aGF0IHdlIG5lZWQgYSBuZXcgcG9pbnRlciB0byBzdGFydCBhZ2lu
Zy4uLiAqLwotCQlzdHJlYW0tPm9hX2J1ZmZlci50YWlsc1shYWdlZF9pZHhdLm9mZnNldCA9IElO
VkFMSURfVEFJTF9QVFI7Ci0JCWFnaW5nX3RhaWwgPSBJTlZBTElEX1RBSUxfUFRSOwotCX0KKwkJ
CWlmIChyZXBvcnQzMlswXSAhPSAwIHx8IHJlcG9ydDMyWzFdICE9IDApCisJCQkJYnJlYWs7CiAK
LQkvKiBVcGRhdGUgdGhlIGFnaW5nIHRhaWwKLQkgKgotCSAqIFdlIHRocm90dGxlIGFnaW5nIHRh
aWwgdXBkYXRlcyB1bnRpbCB3ZSBoYXZlIGEgbmV3IHRhaWwgdGhhdAotCSAqIHJlcHJlc2VudHMg
Pj0gb25lIHJlcG9ydCBtb3JlIGRhdGEgdGhhbiBpcyBhbHJlYWR5IGF2YWlsYWJsZSBmb3IKLQkg
KiByZWFkaW5nLiBUaGlzIGVuc3VyZXMgdGhlcmUgd2lsbCBiZSBlbm91Z2ggZGF0YSBmb3IgYSBz
dWNjZXNzZnVsCi0JICogcmVhZCBvbmNlIHRoaXMgbmV3IHBvaW50ZXIgaGFzIGFnZWQgYW5kIGVu
c3VyZXMgd2Ugd2lsbCBnaXZlIHRoZSBuZXcKLQkgKiBwb2ludGVyIHRpbWUgdG8gYWdlLgotCSAq
LwotCWlmIChhZ2luZ190YWlsID09IElOVkFMSURfVEFJTF9QVFIgJiYKLQkgICAgKGFnZWRfdGFp
bCA9PSBJTlZBTElEX1RBSUxfUFRSIHx8Ci0JICAgICBPQV9UQUtFTihod190YWlsLCBhZ2VkX3Rh
aWwpID49IHJlcG9ydF9zaXplKSkgewotCQlzdHJ1Y3QgaTkxNV92bWEgKnZtYSA9IHN0cmVhbS0+
b2FfYnVmZmVyLnZtYTsKLQkJdTMyIGd0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHZtYSk7
Ci0KLQkJLyogQmUgcGFyYW5vaWQgYW5kIGRvIGEgYm91bmRzIGNoZWNrIG9uIHRoZSBwb2ludGVy
IHJlYWQgYmFjawotCQkgKiBmcm9tIGhhcmR3YXJlLCBqdXN0IGluIGNhc2Ugc29tZSBzcHVyaW91
cyBoYXJkd2FyZSBjb25kaXRpb24KLQkJICogY291bGQgcHV0IHRoZSB0YWlsIG91dCBvZiBib3Vu
ZHMuLi4KLQkJICovCi0JCWlmIChod190YWlsID49IGd0dF9vZmZzZXQgJiYKLQkJICAgIGh3X3Rh
aWwgPCAoZ3R0X29mZnNldCArIE9BX0JVRkZFUl9TSVpFKSkgewotCQkJc3RyZWFtLT5vYV9idWZm
ZXIudGFpbHNbIWFnZWRfaWR4XS5vZmZzZXQgPQotCQkJCWFnaW5nX3RhaWwgPSBod190YWlsOwot
CQkJc3RyZWFtLT5vYV9idWZmZXIuYWdpbmdfdGltZXN0YW1wID0gbm93OwotCQl9IGVsc2Ugewot
CQkJZHJtX2Vycigmc3RyZWFtLT5wZXJmLT5pOTE1LT5kcm0sCi0JCQkJIklnbm9yaW5nIHNwdXJp
b3VzIG91dCBvZiByYW5nZSBPQSBidWZmZXIgdGFpbCBwb2ludGVyID0gJXhcbiIsCi0JCQkJaHdf
dGFpbCk7CisJCQl0YWlsID0gKHRhaWwgLSByZXBvcnRfc2l6ZSkgJiAoT0FfQlVGRkVSX1NJWkUg
LSAxKTsKIAkJfQorCisJCWlmIChPQV9UQUtFTihod190YWlsLCB0YWlsKSA+IHJlcG9ydF9zaXpl
ICYmCisJCSAgICBfX3JhdGVsaW1pdCgmc3RyZWFtLT5wZXJmLT50YWlsX3BvaW50ZXJfcmFjZSkp
CisJCQlEUk1fTk9URSgidW5sYW5kZWQgcmVwb3J0KHMpIGhlYWQ9MHgleCAiCisJCQkJICJ0YWls
PTB4JXggaHdfdGFpbD0weCV4XG4iLAorCQkJCSBoZWFkLCB0YWlsLCBod190YWlsKTsKKworCQlz
dHJlYW0tPm9hX2J1ZmZlci50YWlsID0gZ3R0X29mZnNldCArIHRhaWw7CisJCXN0cmVhbS0+b2Ff
YnVmZmVyLmFnaW5nX3RhaWwgPSBndHRfb2Zmc2V0ICsgaHdfdGFpbDsKKwkJc3RyZWFtLT5vYV9i
dWZmZXIuYWdpbmdfdGltZXN0YW1wID0gbm93OwogCX0KIAogCXNwaW5fdW5sb2NrX2lycXJlc3Rv
cmUoJnN0cmVhbS0+b2FfYnVmZmVyLnB0cl9sb2NrLCBmbGFncyk7CiAKLQlyZXR1cm4gYWdlZF90
YWlsID09IElOVkFMSURfVEFJTF9QVFIgPwotCQlmYWxzZSA6IE9BX1RBS0VOKGFnZWRfdGFpbCwg
aGVhZCkgPj0gcmVwb3J0X3NpemU7CisJcmV0dXJuIE9BX1RBS0VOKHN0cmVhbS0+b2FfYnVmZmVy
LnRhaWwgLSBndHRfb2Zmc2V0LAorCQkJc3RyZWFtLT5vYV9idWZmZXIuaGVhZCAtIGd0dF9vZmZz
ZXQpID49IHJlcG9ydF9zaXplOwogfQogCiAvKioKQEAgLTY3MSw3ICs2NDksNiBAQCBzdGF0aWMg
aW50IGdlbjhfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSwKIAl1MzIgbWFzayA9IChPQV9CVUZGRVJfU0laRSAtIDEpOwogCXNpemVfdCBzdGFydF9vZmZz
ZXQgPSAqb2Zmc2V0OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0JdW5zaWduZWQgaW50IGFnZWRf
dGFpbF9pZHg7CiAJdTMyIGhlYWQsIHRhaWw7CiAJdTMyIHRha2VuOwogCWludCByZXQgPSAwOwpA
QCAtNjgyLDE4ICs2NTksMTAgQEAgc3RhdGljIGludCBnZW44X2FwcGVuZF9vYV9yZXBvcnRzKHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJc3Bpbl9sb2NrX2lycXNhdmUoJnN0cmVh
bS0+b2FfYnVmZmVyLnB0cl9sb2NrLCBmbGFncyk7CiAKIAloZWFkID0gc3RyZWFtLT5vYV9idWZm
ZXIuaGVhZDsKLQlhZ2VkX3RhaWxfaWR4ID0gc3RyZWFtLT5vYV9idWZmZXIuYWdlZF90YWlsX2lk
eDsKLQl0YWlsID0gc3RyZWFtLT5vYV9idWZmZXIudGFpbHNbYWdlZF90YWlsX2lkeF0ub2Zmc2V0
OworCXRhaWwgPSBzdHJlYW0tPm9hX2J1ZmZlci50YWlsOwogCiAJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmc3RyZWFtLT5vYV9idWZmZXIucHRyX2xvY2ssIGZsYWdzKTsKIAotCS8qCi0JICogQW4g
aW52YWxpZCB0YWlsIHBvaW50ZXIgaGVyZSBtZWFucyB3ZSdyZSBzdGlsbCB3YWl0aW5nIGZvciB0
aGUgcG9sbAotCSAqIGhydGltZXIgY2FsbGJhY2sgdG8gZ2l2ZSB1cyBhIHBvaW50ZXIKLQkgKi8K
LQlpZiAodGFpbCA9PSBJTlZBTElEX1RBSUxfUFRSKQotCQlyZXR1cm4gLUVBR0FJTjsKLQogCS8q
CiAJICogTkI6IG9hX2J1ZmZlci5oZWFkL3RhaWwgaW5jbHVkZSB0aGUgZ3R0X29mZnNldCB3aGlj
aCB3ZSBkb24ndCB3YW50CiAJICogd2hpbGUgaW5kZXhpbmcgcmVsYXRpdmUgdG8gb2FfYnVmX2Jh
c2UuCkBAIC04MjcsMTMgKzc5NiwxMSBAQCBzdGF0aWMgaW50IGdlbjhfYXBwZW5kX29hX3JlcG9y
dHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJfQogCiAJCS8qCi0JCSAqIFRo
ZSBhYm92ZSByZWFzb24gZmllbGQgc2FuaXR5IGNoZWNrIGlzIGJhc2VkIG9uCi0JCSAqIHRoZSBh
c3N1bXB0aW9uIHRoYXQgdGhlIE9BIGJ1ZmZlciBpcyBpbml0aWFsbHkKLQkJICogemVyb2VkIGFu
ZCB3ZSByZXNldCB0aGUgZmllbGQgYWZ0ZXIgY29weWluZyBzbyB0aGUKLQkJICogY2hlY2sgaXMg
c3RpbGwgbWVhbmluZ2Z1bCBvbmNlIG9sZCByZXBvcnRzIHN0YXJ0Ci0JCSAqIGJlaW5nIG92ZXJ3
cml0dGVuLgorCQkgKiBDbGVhciBvdXQgdGhlIGZpcnN0IDIgZHdvcmQgYXMgYSBtZWFuIHRvIGRl
dGVjdCB1bmxhbmRlZAorCQkgKiByZXBvcnRzLgogCQkgKi8KIAkJcmVwb3J0MzJbMF0gPSAwOwor
CQlyZXBvcnQzMlsxXSA9IDA7CiAJfQogCiAJaWYgKHN0YXJ0X29mZnNldCAhPSAqb2Zmc2V0KSB7
CkBAIC05NzQsNyArOTQxLDYgQEAgc3RhdGljIGludCBnZW43X2FwcGVuZF9vYV9yZXBvcnRzKHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJdTMyIG1hc2sgPSAoT0FfQlVGRkVSX1NJ
WkUgLSAxKTsKIAlzaXplX3Qgc3RhcnRfb2Zmc2V0ID0gKm9mZnNldDsKIAl1bnNpZ25lZCBsb25n
IGZsYWdzOwotCXVuc2lnbmVkIGludCBhZ2VkX3RhaWxfaWR4OwogCXUzMiBoZWFkLCB0YWlsOwog
CXUzMiB0YWtlbjsKIAlpbnQgcmV0ID0gMDsKQEAgLTk4NSwxNyArOTUxLDEwIEBAIHN0YXRpYyBp
bnQgZ2VuN19hcHBlbmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFt
LAogCXNwaW5fbG9ja19pcnFzYXZlKCZzdHJlYW0tPm9hX2J1ZmZlci5wdHJfbG9jaywgZmxhZ3Mp
OwogCiAJaGVhZCA9IHN0cmVhbS0+b2FfYnVmZmVyLmhlYWQ7Ci0JYWdlZF90YWlsX2lkeCA9IHN0
cmVhbS0+b2FfYnVmZmVyLmFnZWRfdGFpbF9pZHg7Ci0JdGFpbCA9IHN0cmVhbS0+b2FfYnVmZmVy
LnRhaWxzW2FnZWRfdGFpbF9pZHhdLm9mZnNldDsKKwl0YWlsID0gc3RyZWFtLT5vYV9idWZmZXIu
dGFpbDsKIAogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnN0cmVhbS0+b2FfYnVmZmVyLnB0cl9s
b2NrLCBmbGFncyk7CiAKLQkvKiBBbiBpbnZhbGlkIHRhaWwgcG9pbnRlciBoZXJlIG1lYW5zIHdl
J3JlIHN0aWxsIHdhaXRpbmcgZm9yIHRoZSBwb2xsCi0JICogaHJ0aW1lciBjYWxsYmFjayB0byBn
aXZlIHVzIGEgcG9pbnRlcgotCSAqLwotCWlmICh0YWlsID09IElOVkFMSURfVEFJTF9QVFIpCi0J
CXJldHVybiAtRUFHQUlOOwotCiAJLyogTkI6IG9hX2J1ZmZlci5oZWFkL3RhaWwgaW5jbHVkZSB0
aGUgZ3R0X29mZnNldCB3aGljaCB3ZSBkb24ndCB3YW50CiAJICogd2hpbGUgaW5kZXhpbmcgcmVs
YXRpdmUgdG8gb2FfYnVmX2Jhc2UuCiAJICovCkBAIC0xMDUzLDEzICsxMDEyLDExIEBAIHN0YXRp
YyBpbnQgZ2VuN19hcHBlbmRfb2FfcmVwb3J0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtLAogCQlpZiAocmV0KQogCQkJYnJlYWs7CiAKLQkJLyogVGhlIGFib3ZlIHJlcG9ydC1pZCBm
aWVsZCBzYW5pdHkgY2hlY2sgaXMgYmFzZWQgb24KLQkJICogdGhlIGFzc3VtcHRpb24gdGhhdCB0
aGUgT0EgYnVmZmVyIGlzIGluaXRpYWxseQotCQkgKiB6ZXJvZWQgYW5kIHdlIHJlc2V0IHRoZSBm
aWVsZCBhZnRlciBjb3B5aW5nIHNvIHRoZQotCQkgKiBjaGVjayBpcyBzdGlsbCBtZWFuaW5nZnVs
IG9uY2Ugb2xkIHJlcG9ydHMgc3RhcnQKLQkJICogYmVpbmcgb3ZlcndyaXR0ZW4uCisJCS8qIENs
ZWFyIG91dCB0aGUgZmlyc3QgMiBkd29yZHMgYXMgYSBtZWFuIHRvIGRldGVjdCB1bmxhbmRlZAor
CQkgKiByZXBvcnRzLgogCQkgKi8KIAkJcmVwb3J0MzJbMF0gPSAwOworCQlyZXBvcnQzMlsxXSA9
IDA7CiAJfQogCiAJaWYgKHN0YXJ0X29mZnNldCAhPSAqb2Zmc2V0KSB7CkBAIC0xNDM4LDggKzEz
OTUsOCBAQCBzdGF0aWMgdm9pZCBnZW43X2luaXRfb2FfYnVmZmVyKHN0cnVjdCBpOTE1X3BlcmZf
c3RyZWFtICpzdHJlYW0pCiAJCQkgICBndHRfb2Zmc2V0IHwgT0FCVUZGRVJfU0laRV8xNk0pOwog
CiAJLyogTWFyayB0aGF0IHdlIG5lZWQgdXBkYXRlZCB0YWlsIHBvaW50ZXJzIHRvIHJlYWQgZnJv
bS4uLiAqLwotCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWxzWzBdLm9mZnNldCA9IElOVkFMSURfVEFJ
TF9QVFI7Ci0Jc3RyZWFtLT5vYV9idWZmZXIudGFpbHNbMV0ub2Zmc2V0ID0gSU5WQUxJRF9UQUlM
X1BUUjsKKwlzdHJlYW0tPm9hX2J1ZmZlci5hZ2luZ190YWlsID0gSU5WQUxJRF9UQUlMX1BUUjsK
KwlzdHJlYW0tPm9hX2J1ZmZlci50YWlsID0gZ3R0X29mZnNldDsKIAogCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJnN0cmVhbS0+b2FfYnVmZmVyLnB0cl9sb2NrLCBmbGFncyk7CiAKQEAgLTE0OTIs
OCArMTQ0OSw4IEBAIHN0YXRpYyB2b2lkIGdlbjhfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3JlLCBHRU44X09B
VEFJTFBUUiwgZ3R0X29mZnNldCAmIEdFTjhfT0FUQUlMUFRSX01BU0spOwogCiAJLyogTWFyayB0
aGF0IHdlIG5lZWQgdXBkYXRlZCB0YWlsIHBvaW50ZXJzIHRvIHJlYWQgZnJvbS4uLiAqLwotCXN0
cmVhbS0+b2FfYnVmZmVyLnRhaWxzWzBdLm9mZnNldCA9IElOVkFMSURfVEFJTF9QVFI7Ci0Jc3Ry
ZWFtLT5vYV9idWZmZXIudGFpbHNbMV0ub2Zmc2V0ID0gSU5WQUxJRF9UQUlMX1BUUjsKKwlzdHJl
YW0tPm9hX2J1ZmZlci5hZ2luZ190YWlsID0gSU5WQUxJRF9UQUlMX1BUUjsKKwlzdHJlYW0tPm9h
X2J1ZmZlci50YWlsID0gZ3R0X29mZnNldDsKIAogCS8qCiAJICogUmVzZXQgc3RhdGUgdXNlZCB0
byByZWNvZ25pc2UgY29udGV4dCBzd2l0Y2hlcywgYWZmZWN0aW5nIHdoaWNoCkBAIC0xNTQ4LDgg
KzE1MDUsOCBAQCBzdGF0aWMgdm9pZCBnZW4xMl9pbml0X29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSAqc3RyZWFtKQogCQkJICAgZ3R0X29mZnNldCAmIEdFTjEyX09BR19PQVRBSUxQ
VFJfTUFTSyk7CiAKIAkvKiBNYXJrIHRoYXQgd2UgbmVlZCB1cGRhdGVkIHRhaWwgcG9pbnRlcnMg
dG8gcmVhZCBmcm9tLi4uICovCi0Jc3RyZWFtLT5vYV9idWZmZXIudGFpbHNbMF0ub2Zmc2V0ID0g
SU5WQUxJRF9UQUlMX1BUUjsKLQlzdHJlYW0tPm9hX2J1ZmZlci50YWlsc1sxXS5vZmZzZXQgPSBJ
TlZBTElEX1RBSUxfUFRSOworCXN0cmVhbS0+b2FfYnVmZmVyLmFnaW5nX3RhaWwgPSBJTlZBTElE
X1RBSUxfUFRSOworCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWwgPSBndHRfb2Zmc2V0OwogCiAJLyoK
IAkgKiBSZXNldCBzdGF0ZSB1c2VkIHRvIHJlY29nbmlzZSBjb250ZXh0IHN3aXRjaGVzLCBhZmZl
Y3Rpbmcgd2hpY2gKQEAgLTQzOTgsNiArNDM1NSwxMSBAQCB2b2lkIGk5MTVfcGVyZl9pbml0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCQlyYXRlbGltaXRfc2V0X2ZsYWdzKCZwZXJm
LT5zcHVyaW91c19yZXBvcnRfcnMsCiAJCQkJICAgIFJBVEVMSU1JVF9NU0dfT05fUkVMRUFTRSk7
CiAKKwkJcmF0ZWxpbWl0X3N0YXRlX2luaXQoJnBlcmYtPnRhaWxfcG9pbnRlcl9yYWNlLAorCQkJ
CSAgICAgNSAqIEhaLCAxMCk7CisJCXJhdGVsaW1pdF9zZXRfZmxhZ3MoJnBlcmYtPnRhaWxfcG9p
bnRlcl9yYWNlLAorCQkJCSAgICBSQVRFTElNSVRfTVNHX09OX1JFTEVBU0UpOworCiAJCWF0b21p
YzY0X3NldCgmcGVyZi0+bm9hX3Byb2dyYW1taW5nX2RlbGF5LAogCQkJICAgICA1MDAgKiAxMDAw
IC8qIDUwMHVzICovKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9w
ZXJmX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmZfdHlwZXMuaAppbmRl
eCAzMjI4OWNiZGE2NDguLmMzYWIxODRjNjA0YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9w
ZXJmX3R5cGVzLmgKQEAgLTI3MywyMSArMjczLDEwIEBAIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
IHsKIAkJc3BpbmxvY2tfdCBwdHJfbG9jazsKIAogCQkvKioKLQkJICogQHRhaWxzOiBPbmUgJ2Fn
aW5nJyB0YWlsIHBvaW50ZXIgYW5kIG9uZSAnYWdlZCcgdGFpbCBwb2ludGVyIHJlYWR5IHRvCi0J
CSAqIHVzZWQgZm9yIHJlYWRpbmcuCi0JCSAqCi0JCSAqIEluaXRpYWwgdmFsdWVzIG9mIDB4ZmZm
ZmZmZmYgYXJlIGludmFsaWQgYW5kIGltcGx5IHRoYXQgYW4KLQkJICogdXBkYXRlIGlzIHJlcXVp
cmVkIChhbmQgc2hvdWxkIGJlIGlnbm9yZWQgYnkgYW4gYXR0ZW1wdGVkCi0JCSAqIHJlYWQpCisJ
CSAqIEBhZ2luZ190YWlsOiBUaGUgbGFzdCBIVyB0YWlsIHJlcG9ydGVkIGJ5IEhXLiBUaGUgZGF0
YQorCQkgKiBtaWdodCBub3QgaGF2ZSBtYWRlIGl0IHRvIG1lbW9yeSB5ZXQgdGhvdWdoLgogCQkg
Ki8KLQkJc3RydWN0IHsKLQkJCXUzMiBvZmZzZXQ7Ci0JCX0gdGFpbHNbMl07Ci0KLQkJLyoqCi0J
CSAqIEBhZ2VkX3RhaWxfaWR4OiBJbmRleCBmb3IgdGhlIGFnZWQgdGFpbCByZWFkeSB0byByZWFk
KCkgZGF0YSB1cCB0by4KLQkJICovCi0JCXVuc2lnbmVkIGludCBhZ2VkX3RhaWxfaWR4OworCQl1
MzIgYWdpbmdfdGFpbDsKIAogCQkvKioKIAkJICogQGFnaW5nX3RpbWVzdGFtcDogQSBtb25vdG9u
aWMgdGltZXN0YW1wIGZvciB3aGVuIHRoZSBjdXJyZW50IGFnaW5nIHRhaWwgcG9pbnRlcgpAQCAt
MzAzLDYgKzI5MiwxMSBAQCBzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSB7CiAJCSAqIE9BIGJ1ZmZl
ciBkYXRhIHRvIHVzZXJzcGFjZS4KIAkJICovCiAJCXUzMiBoZWFkOworCisJCS8qKgorCQkgKiBA
dGFpbDogVGhlIGxhc3QgdmVyaWZpZWQgdGFpbCB0aGF0IGNhbiBiZSByZWFkIGJ5IHVzZXJzcGFj
ZS4KKwkJICovCisJCXUzMiB0YWlsOwogCX0gb2FfYnVmZmVyOwogCiAJLyoqCkBAIC00MjAsNiAr
NDE0LDEyIEBAIHN0cnVjdCBpOTE1X3BlcmYgewogCSAqLwogCXN0cnVjdCByYXRlbGltaXRfc3Rh
dGUgc3B1cmlvdXNfcmVwb3J0X3JzOwogCisJLyoqCisJICogRm9yIHJhdGUgbGltaXRpbmcgYW55
IG5vdGlmaWNhdGlvbnMgb2YgdGFpbCBwb2ludGVyCisJICogcmFjZS4KKwkgKi8KKwlzdHJ1Y3Qg
cmF0ZWxpbWl0X3N0YXRlIHRhaWxfcG9pbnRlcl9yYWNlOworCiAJdTMyIGdlbjdfbGF0Y2hlZF9v
YXN0YXR1czE7CiAJdTMyIGN0eF9vYWN0eGN0cmxfb2Zmc2V0OwogCXUzMiBjdHhfZmxleGV1MF9v
ZmZzZXQ7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeAo=

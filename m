Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3AA89390D2F
	for <lists+intel-gfx@lfdr.de>; Wed, 26 May 2021 02:07:13 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2921D6EB81;
	Wed, 26 May 2021 00:07:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 91F156EB80
 for <intel-gfx@lists.freedesktop.org>; Wed, 26 May 2021 00:07:06 +0000 (UTC)
IronPort-SDR: zbCnbb6GRVSkt3nDyMGVfel65sm3x3YFC3jzKOc5Cxms4xmz7i3hVKo1hp3cJPLpRmMkYpGx9d
 ONqWFg/PpuTg==
X-IronPort-AV: E=McAfee;i="6200,9189,9995"; a="189459142"
X-IronPort-AV: E=Sophos;i="5.82,329,1613462400"; d="scan'208";a="189459142"
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by orsmga101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 May 2021 17:07:04 -0700
IronPort-SDR: 8tiUsSvyfSeUck8DqvM9uazkwzdAZsndE2HXFu7FFxTSIKVW3xDbrCibq5yIBaU8h3TLz/zmN9
 F7EQIO0gwpKA==
X-IronPort-AV: E=Sophos;i="5.82,329,1613462400"; d="scan'208";a="414231981"
Received: from mdroper-desk1.fm.intel.com ([10.1.27.168])
 by orsmga002-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 May 2021 17:07:04 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 25 May 2021 17:06:54 -0700
Message-Id: <20210526000656.3060314-2-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.25.4
In-Reply-To: <20210526000656.3060314-1-matthew.d.roper@intel.com>
References: <20210526000656.3060314-1-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 1/3] drm/i915/xelpd: Enhanced pipe underrun
 reporting
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

WEVfTFBEIGJyaW5ncyBlbmhhbmNlZCB1bmRlcnJ1biByZWNvdmVyeTogIHRoZSBoYXJkd2FyZSBj
YW4gc29tZXdoYXQKbWl0aWdhdGUgdW5kZXJydW5zIGJ5IHVzaW5nIGFuIGludGVycG9sYXRlZCBy
ZXBsYWNlbWVudCBwaXhlbCAoc29mdAp1bmRlcnJ1bikgb3IgdGhlIHByZXZpb3VzIHBpeGVsICho
YXJkIHVuZGVycnVuKS4gIEZ1cnRoZXJtb3JlLCB1bmRlcnJ1bnMKY2FuIG5vdyBiZSBjYXVzZWQg
ZG93bnN0cmVhbSBieSB0aGUgcG9ydCwgZXZlbiBpZiB0aGUgcGlwZSBpdHNlbGYgaXMKb3BlcmF0
aW5nIHByb3Blcmx5LiAgVGhlIGludGVycnVwdCByZWdpc3RlciBhbmQgUElQRV9TVEFUVVMgcmVn
aXN0ZXIKZ2l2ZSB1cyBleHRyYSBiaXRzIHRvIHJlY29nbml6ZSBoYXJkL3NvZnQgdW5kZXJydW5z
IGFuZCBkZXRlcm1pbmUKd2hldGhlciB0aGUgdW5kZXJydW4gd2FzIGNhdXNlZCBieSB0aGUgcG9y
dCwgc28gd2UnbGwgdXNlIHRoYXQKaW5mb3JtYXRpb24gdG8gcHJpbnQgc29tZSBtb3JlIGRlc2Ny
aXB0aXZlIGVycm9ycyB3aGVuIHVuZGVycnVucyBvY2N1ci4KCnYyOgogLSBLZWVwIElDTCdzIFBJ
UEVfU1RBVFVTIGRlZmluZWQgc2VwYXJhdGVseSBmcm9tIHRoZSBvbGQgR01DSCBwaXBlCiAgIHN0
YXR1cyByZWdpc3Rlci4gIChWaWxsZSkKIC0gT25seSByZWFkL2NsZWFyIHRoZSBQSVBFX1NUQVRV
UyByZWdpc3RlciBvbiBwbGF0Zm9ybXMgd2l0aAogICBkaXNwbGF5IHZlciA+PSAxMS4gKEx1Y2Fz
KQp2MzoKIC0gQWN0dWFsbHkgZW5hYmxlK3VubWFzayBhbGwgdGhlIG5ldyB1bmRlcnJ1biBpbnRl
cnJ1cHRzLCBjbGVhciBzdGFsZQogICBiaXRzIG91dCBmcm9tIFBJUEVfU1RBVFVTIGJlZm9yZSBl
bmFibGluZyB0aGUgaW50ZXJydXB0cywgcmVwb3J0IGFsbAogICBGSUZPIHVuZGVycnVucyBlcnJv
cnMgYXQgb25jZSwgcmVuYW1lIGEgYnVuY2ggb2Ygc3R1ZmYgdG8gdW5jb25mdXNlCiAgIHZzLiBQ
SVBFU1RBVC4gKFZpbGxlKQoKQnNwZWM6IDUwMzM1CkJzcGVjOiA1MDM2NgpDYzogTHVjYXMgRGUg
TWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZp
bGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYXR0IFJvcGVyIDxt
YXR0aGV3LmQucm9wZXJAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogU3RhbmlzbGF2IExpc292c2tp
eSA8c3RhbmlzbGF2Lmxpc292c2tpeUBpbnRlbC5jb20+Ci0tLQogLi4uL2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZmlmb191bmRlcnJ1bi5jICAgIHwgNTcgKysrKysrKysrKysrKysrKystLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyAgICAgICAgICAgICAgIHwgMTkgKysrKysrLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuaCAgICAgICAgICAgICAgIHwgIDEgKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCAgICAgICAgICAgICAgIHwgIDkgKysrCiA0IGZp
bGVzIGNoYW5nZWQsIDc3IGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2ZpZm9fdW5kZXJydW4uYwppbmRleCAz
MzE1YWExZDRkNWEuLmViODQxOTYwODQwZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMKQEAgLTE4NSwxNSArMTg1LDM0IEBAIHN0
YXRpYyB2b2lkIGl2Yl9zZXRfZmlmb191bmRlcnJ1bl9yZXBvcnRpbmcoc3RydWN0IGRybV9kZXZp
Y2UgKmRldiwKIAl9CiB9CiAKK3N0YXRpYyB1MzIKK2ljbF9waXBlX3N0YXR1c191bmRlcnJ1bl9t
YXNrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3sKKwl1MzIgbWFzayA9IFBJ
UEVfU1RBVFVTX1VOREVSUlVOOworCisJaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMykK
KwkJbWFzayB8PSBQSVBFX1NUQVRVU19TT0ZUX1VOREVSUlVOX1hFTFBEIHwKKwkJCVBJUEVfU1RB
VFVTX0hBUkRfVU5ERVJSVU5fWEVMUEQgfAorCQkJUElQRV9TVEFUVVNfUE9SVF9VTkRFUlJVTl9Y
RUxQRDsKKworCXJldHVybiBtYXNrOworfQorCiBzdGF0aWMgdm9pZCBiZHdfc2V0X2ZpZm9fdW5k
ZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCQkJCSAgICBlbnVtIHBp
cGUgcGlwZSwgYm9vbCBlbmFibGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShkZXYpOworCXUzMiBtYXNrID0gZ2VuOF9kZV9waXBlX3VuZGVycnVuX21h
c2soZGV2X3ByaXYpOwogCi0JaWYgKGVuYWJsZSkKLQkJYmR3X2VuYWJsZV9waXBlX2lycShkZXZf
cHJpdiwgcGlwZSwgR0VOOF9QSVBFX0ZJRk9fVU5ERVJSVU4pOwotCWVsc2UKLQkJYmR3X2Rpc2Fi
bGVfcGlwZV9pcnEoZGV2X3ByaXYsIHBpcGUsIEdFTjhfUElQRV9GSUZPX1VOREVSUlVOKTsKKwlp
ZiAoZW5hYmxlKSB7CisJCWlmIChESVNQTEFZX1ZFUihkZXZfcHJpdikgPj0gMTEpCisJCQlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwgSUNMX1BJUEVTVEFUVVMocGlwZSksCisJCQkJICAgICAgIGlj
bF9waXBlX3N0YXR1c191bmRlcnJ1bl9tYXNrKGRldl9wcml2KSk7CisKKwkJYmR3X2VuYWJsZV9w
aXBlX2lycShkZXZfcHJpdiwgcGlwZSwgbWFzayk7CisJfSBlbHNlIHsKKwkJYmR3X2Rpc2FibGVf
cGlwZV9pcnEoZGV2X3ByaXYsIHBpcGUsIG1hc2spOworCX0KIH0KIAogc3RhdGljIHZvaWQgaWJ4
X3NldF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LApAQCAt
MzczLDYgKzM5Miw3IEBAIHZvaWQgaW50ZWxfY3B1X2ZpZm9fdW5kZXJydW5faXJxX2hhbmRsZXIo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJCQkgZW51bSBwaXBlIHBpcGUp
CiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSBpbnRlbF9nZXRfY3J0Y19mb3JfcGlwZShk
ZXZfcHJpdiwgcGlwZSk7CisJdTMyIHVuZGVycnVucyA9IDA7CiAKIAkvKiBXZSBtYXkgYmUgY2Fs
bGVkIHRvbyBlYXJseSBpbiBpbml0LCB0aGFua3MgQklPUyEgKi8KIAlpZiAoY3J0YyA9PSBOVUxM
KQpAQCAtMzgzLDEwICs0MDMsMzUgQEAgdm9pZCBpbnRlbF9jcHVfZmlmb191bmRlcnJ1bl9pcnFf
aGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJICAgIGNydGMtPmNw
dV9maWZvX3VuZGVycnVuX2Rpc2FibGVkKQogCQlyZXR1cm47CiAKKwkvKgorCSAqIFN0YXJ0aW5n
IHdpdGggZGlzcGxheSB2ZXJzaW9uIDExLCB0aGUgUElQRV9TVEFUIHJlZ2lzdGVyIHJlY29yZHMK
KwkgKiB3aGV0aGVyIGFuIHVuZGVycnVuIGhhcyBoYXBwZW5lZCwgYW5kIG9uIFhFTFBEKywgaXQg
d2lsbCBhbHNvIHJlY29yZAorCSAqIHdoZXRoZXIgdGhlIHVuZGVycnVuIHdhcyBzb2Z0L2hhcmQg
YW5kIHdoZXRoZXIgaXQgd2FzIHRyaWdnZXJlZCBieQorCSAqIHRoZSBkb3duc3RyZWFtIHBvcnQg
bG9naWMuICBXZSBzaG91bGQgY2xlYXIgdGhlc2UgYml0cyAod2hpY2ggdXNlCisJICogd3JpdGUt
MS10by1jbGVhciBsb2dpYykgdG9vLgorCSAqCisJICogTm90ZSB0aGF0IGFsdGhvdWdoIHRoZSBJ
SVIgZ2l2ZXMgdXMgdGhlIHNhbWUgdW5kZXJydW4gYW5kIHNvZnQvaGFyZAorCSAqIGluZm9ybWF0
aW9uLCBQSVBFX1NUQVQgaXMgdGhlIG9ubHkgcGxhY2Ugd2UgY2FuIGZpbmQgb3V0IHdoZXRoZXIK
KwkgKiB0aGUgdW5kZXJydW4gd2FzIGNhdXNlZCBieSB0aGUgZG93bnN0cmVhbSBwb3J0LgorCSAq
LworCWlmIChESVNQTEFZX1ZFUihkZXZfcHJpdikgPj0gMTEpIHsKKwkJdW5kZXJydW5zID0gaW50
ZWxfZGVfcmVhZChkZXZfcHJpdiwgSUNMX1BJUEVTVEFUVVMocGlwZSkpICYKKwkJCWljbF9waXBl
X3N0YXR1c191bmRlcnJ1bl9tYXNrKGRldl9wcml2KTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2X3By
aXYsIElDTF9QSVBFU1RBVFVTKHBpcGUpLCB1bmRlcnJ1bnMpOworCX0KKwogCWlmIChpbnRlbF9z
ZXRfY3B1X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKGRldl9wcml2LCBwaXBlLCBmYWxzZSkpIHsK
IAkJdHJhY2VfaW50ZWxfY3B1X2ZpZm9fdW5kZXJydW4oZGV2X3ByaXYsIHBpcGUpOwotCQlkcm1f
ZXJyKCZkZXZfcHJpdi0+ZHJtLCAiQ1BVIHBpcGUgJWMgRklGTyB1bmRlcnJ1blxuIiwKLQkJCXBp
cGVfbmFtZShwaXBlKSk7CisKKwkJaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMSkKKwkJ
CWRybV9lcnIoJmRldl9wcml2LT5kcm0sICJDUFUgcGlwZSAlYyBGSUZPIHVuZGVycnVuOiAlcyVz
JXMlc1xuIiwKKwkJCQlwaXBlX25hbWUocGlwZSksCisJCQkJdW5kZXJydW5zICYgUElQRV9TVEFU
VVNfU09GVF9VTkRFUlJVTl9YRUxQRCA/ICJzb2Z0LCIgOiAiIiwKKwkJCQl1bmRlcnJ1bnMgJiBQ
SVBFX1NUQVRVU19IQVJEX1VOREVSUlVOX1hFTFBEID8gImhhcmQsIiA6ICIiLAorCQkJCXVuZGVy
cnVucyAmIFBJUEVfU1RBVFVTX1BPUlRfVU5ERVJSVU5fWEVMUEQgPyAicG9ydCwiIDogIiIsCisJ
CQkJdW5kZXJydW5zICYgUElQRV9TVEFUVVNfVU5ERVJSVU4gPyAidHJhbnNjb2RlciwiIDogIiIp
OworCQllbHNlCisJCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLCAiQ1BVIHBpcGUgJWMgRklGTyB1
bmRlcnJ1blxuIiwgcGlwZV9uYW1lKHBpcGUpKTsKIAl9CiAKIAlpbnRlbF9mYmNfaGFuZGxlX2Zp
Zm9fdW5kZXJydW5faXJxKGRldl9wcml2KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfaXJxLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jCmluZGV4IDlm
ZjUxMTg2Mjg0OC4uOTQ0NmEyNzU4YzNlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2lycS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKQEAgLTI0
MjUsNiArMjQyNSwxNyBAQCBzdGF0aWMgdTMyIGdlbjhfZGVfcGlwZV9mbGlwX2RvbmVfbWFzayhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJcmV0dXJuIEdFTjhfUElQRV9QUklNQVJZ
X0ZMSVBfRE9ORTsKIH0KIAordTMyIGdlbjhfZGVfcGlwZV91bmRlcnJ1bl9tYXNrKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3sKKwl1MzIgbWFzayA9IEdFTjhfUElQRV9GSUZP
X1VOREVSUlVOOworCisJaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMykKKwkJbWFzayB8
PSBYRUxQRF9QSVBFX1NPRlRfVU5ERVJSVU4gfAorCQkJWEVMUERfUElQRV9IQVJEX1VOREVSUlVO
OworCisJcmV0dXJuIG1hc2s7Cit9CisKIHN0YXRpYyBpcnFyZXR1cm5fdAogZ2VuOF9kZV9pcnFf
aGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBtYXN0ZXJfY3Rs
KQogewpAQCAtMjUzNiw3ICsyNTQ3LDcgQEAgZ2VuOF9kZV9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBtYXN0ZXJfY3RsKQogCQlpZiAoaWlyICYgR0VO
OF9QSVBFX0NEQ0xLX0NSQ19ET05FKQogCQkJaHN3X3BpcGVfY3JjX2lycV9oYW5kbGVyKGRldl9w
cml2LCBwaXBlKTsKIAotCQlpZiAoaWlyICYgR0VOOF9QSVBFX0ZJRk9fVU5ERVJSVU4pCisJCWlm
IChpaXIgJiBnZW44X2RlX3BpcGVfdW5kZXJydW5fbWFzayhkZXZfcHJpdikpCiAJCQlpbnRlbF9j
cHVfZmlmb191bmRlcnJ1bl9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcGlwZSk7CiAKIAkJZmF1bHRf
ZXJyb3JzID0gaWlyICYgZ2VuOF9kZV9waXBlX2ZhdWx0X21hc2soZGV2X3ByaXYpOwpAQCAtMzE3
Myw3ICszMTg0LDggQEAgdm9pZCBnZW44X2lycV9wb3dlcl93ZWxsX3Bvc3RfZW5hYmxlKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgICAgIHU4IHBpcGVfbWFzaykKIHsK
IAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSAmZGV2X3ByaXYtPnVuY29yZTsKLQl1MzIg
ZXh0cmFfaWVyID0gR0VOOF9QSVBFX1ZCTEFOSyB8IEdFTjhfUElQRV9GSUZPX1VOREVSUlVOIHwK
Kwl1MzIgZXh0cmFfaWVyID0gR0VOOF9QSVBFX1ZCTEFOSyB8CisJCWdlbjhfZGVfcGlwZV91bmRl
cnJ1bl9tYXNrKGRldl9wcml2KSB8CiAJCWdlbjhfZGVfcGlwZV9mbGlwX2RvbmVfbWFzayhkZXZf
cHJpdik7CiAJZW51bSBwaXBlIHBpcGU7CiAKQEAgLTM3NTcsNyArMzc2OSw4IEBAIHN0YXRpYyB2
b2lkIGdlbjhfZGVfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAl9CiAKIAlkZV9waXBlX2VuYWJsZXMgPSBkZV9waXBlX21hc2tlZCB8Ci0JCUdFTjhf
UElQRV9WQkxBTksgfCBHRU44X1BJUEVfRklGT19VTkRFUlJVTiB8CisJCUdFTjhfUElQRV9WQkxB
TksgfAorCQlnZW44X2RlX3BpcGVfdW5kZXJydW5fbWFzayhkZXZfcHJpdikgfAogCQlnZW44X2Rl
X3BpcGVfZmxpcF9kb25lX21hc2soZGV2X3ByaXYpOwogCiAJZGVfcG9ydF9lbmFibGVzID0gZGVf
cG9ydF9tYXNrZWQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuaAppbmRleCAyNWYyNWNkOTU4MTguLmRi
MzRkNWRiZTQwMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5oCkBAIC0xMDAsNiArMTAwLDcgQEAg
dm9pZCBnZW44X2lycV9wb3dlcl93ZWxsX3Bvc3RfZW5hYmxlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJCQkgICAgIHU4IHBpcGVfbWFzayk7CiB2b2lkIGdlbjhfaXJxX3Bv
d2VyX3dlbGxfcHJlX2Rpc2FibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAog
CQkJCSAgICAgdTggcGlwZV9tYXNrKTsKK3UzMiBnZW44X2RlX3BpcGVfdW5kZXJydW5fbWFzayhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogCiBib29sIGludGVsX2NydGNfZ2V0
X3ZibGFua190aW1lc3RhbXAoc3RydWN0IGRybV9jcnRjICpjcnRjLCBpbnQgKm1heF9lcnJvciwK
IAkJCQkgICAgIGt0aW1lX3QgKnZibGFua190aW1lLCBib29sIGluX3ZibGFua19pcnEpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfcmVnLmgKaW5kZXggNGRiZTc5MDA5YzBlLi42YzE5ZWU3YzIxZDkgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZWcuaApAQCAtNjE3NCw2ICs2MTc0LDEzIEBAIGVudW0gewogI2RlZmlu
ZSAgIFNLTF9CT1RUT01fQ09MT1JfQ1NDX0VOQUJMRQkoMSA8PCAzMCkKICNkZWZpbmUgU0tMX0JP
VFRPTV9DT0xPUihwaXBlKQkJX01NSU9fUElQRTIocGlwZSwgX1NLTF9CT1RUT01fQ09MT1JfQSkK
IAorI2RlZmluZSBfSUNMX1BJUEVfQV9TVEFUVVMJCQkweDcwMDU4CisjZGVmaW5lIElDTF9QSVBF
U1RBVFVTKHBpcGUpCQkJX01NSU9fUElQRTIocGlwZSwgX0lDTF9QSVBFX0FfU1RBVFVTKQorI2Rl
ZmluZSAgIFBJUEVfU1RBVFVTX1VOREVSUlVOCQkJCVJFR19CSVQoMzEpCisjZGVmaW5lICAgUElQ
RV9TVEFUVVNfU09GVF9VTkRFUlJVTl9YRUxQRAkJUkVHX0JJVCgyOCkKKyNkZWZpbmUgICBQSVBF
X1NUQVRVU19IQVJEX1VOREVSUlVOX1hFTFBECQlSRUdfQklUKDI3KQorI2RlZmluZSAgIFBJUEVf
U1RBVFVTX1BPUlRfVU5ERVJSVU5fWEVMUEQJCVJFR19CSVQoMjYpCisKICNkZWZpbmUgVkxWX0RQ
RkxJUFNUQVQJCQkJX01NSU8oVkxWX0RJU1BMQVlfQkFTRSArIDB4NzAwMjgpCiAjZGVmaW5lICAg
UElQRUJfTElORV9DT01QQVJFX0lOVF9FTgkJKDEgPDwgMjkpCiAjZGVmaW5lICAgUElQRUJfSExJ
TkVfSU5UX0VOCQkJKDEgPDwgMjgpCkBAIC03ODU1LDYgKzc4NjIsOCBAQCBlbnVtIHsKICNkZWZp
bmUgIEdFTjhfUElQRV9GSUZPX1VOREVSUlVOCSgxIDw8IDMxKQogI2RlZmluZSAgR0VOOF9QSVBF
X0NEQ0xLX0NSQ19FUlJPUgkoMSA8PCAyOSkKICNkZWZpbmUgIEdFTjhfUElQRV9DRENMS19DUkNf
RE9ORQkoMSA8PCAyOCkKKyNkZWZpbmUgIFhFTFBEX1BJUEVfU09GVF9VTkRFUlJVTgkoMSA8PCAy
MikKKyNkZWZpbmUgIFhFTFBEX1BJUEVfSEFSRF9VTkRFUlJVTgkoMSA8PCAyMSkKICNkZWZpbmUg
IEdFTjhfUElQRV9DVVJTT1JfRkFVTFQJCSgxIDw8IDEwKQogI2RlZmluZSAgR0VOOF9QSVBFX1NQ
UklURV9GQVVMVAkJKDEgPDwgOSkKICNkZWZpbmUgIEdFTjhfUElQRV9QUklNQVJZX0ZBVUxUCSgx
IDw8IDgpCi0tIAoyLjI1LjQKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeAo=

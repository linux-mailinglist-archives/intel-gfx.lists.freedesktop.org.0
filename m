Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9F6ED26F541
	for <lists+intel-gfx@lfdr.de>; Fri, 18 Sep 2020 07:02:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EC28F6ECA7;
	Fri, 18 Sep 2020 05:02:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D3B276ECA7
 for <intel-gfx@lists.freedesktop.org>; Fri, 18 Sep 2020 05:02:07 +0000 (UTC)
IronPort-SDR: faydvmrBHaNhOAoyQZQ/MGrOSDVLH7iTcFRwJunn7MB2XPYt5Z0UUZh85Pi1TQIBUc/uXJSXCb
 //gpgji2Y4OA==
X-IronPort-AV: E=McAfee;i="6000,8403,9747"; a="157254890"
X-IronPort-AV: E=Sophos;i="5.77,273,1596524400"; d="scan'208";a="157254890"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 17 Sep 2020 22:02:02 -0700
IronPort-SDR: URf05+vP2kiErTPqmq32cT/TjTEfRaTsanwFlLJAQbiyeiqX6CsVTGaV7S4+emVuSwt8qjLOs7
 7nCvkdn1/W6Q==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,273,1596524400"; d="scan'208";a="346866135"
Received: from fmsmsx604.amr.corp.intel.com ([10.18.126.84])
 by orsmga007.jf.intel.com with ESMTP; 17 Sep 2020 22:02:02 -0700
Received: from bgsmsx605.gar.corp.intel.com (10.67.234.7) by
 fmsmsx604.amr.corp.intel.com (10.18.126.84) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.1713.5; Thu, 17 Sep 2020 22:02:01 -0700
Received: from bgsmsx602.gar.corp.intel.com (10.109.78.81) by
 BGSMSX605.gar.corp.intel.com (10.67.234.7) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.1713.5; Fri, 18 Sep 2020 10:31:59 +0530
Received: from bgsmsx602.gar.corp.intel.com ([10.109.78.81]) by
 BGSMSX602.gar.corp.intel.com ([10.109.78.81]) with mapi id 15.01.1713.004;
 Fri, 18 Sep 2020 10:31:59 +0530
From: "Kulkarni, Vandita" <vandita.kulkarni@intel.com>
To: Ville Syrjala <ville.syrjala@linux.intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [Intel-gfx] [PATCH 2/3] drm/i915: Decouple intel_dp_{min,
 output}_bpp() from crtc_state
Thread-Index: AQHWjTu5eyz1yVpDREaoL+Ug/EFzJqlt1u0A
Date: Fri, 18 Sep 2020 05:01:59 +0000
Message-ID: <b357ae55ee5c49b0bf753d5be8abb8e6@intel.com>
References: <20200917214335.3569-1-ville.syrjala@linux.intel.com>
 <20200917214335.3569-2-ville.syrjala@linux.intel.com>
In-Reply-To: <20200917214335.3569-2-ville.syrjala@linux.intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
dlp-product: dlpe-windows
dlp-reaction: no-action
dlp-version: 11.5.1.3
x-originating-ip: [10.223.10.1]
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 2/3] drm/i915: Decouple intel_dp_{min,
 output}_bpp() from crtc_state
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

PiAtLS0tLU9yaWdpbmFsIE1lc3NhZ2UtLS0tLQ0KPiBGcm9tOiBJbnRlbC1nZnggPGludGVsLWdm
eC1ib3VuY2VzQGxpc3RzLmZyZWVkZXNrdG9wLm9yZz4gT24gQmVoYWxmIE9mIFZpbGxlDQo+IFN5
cmphbGENCj4gU2VudDogRnJpZGF5LCBTZXB0ZW1iZXIgMTgsIDIwMjAgMzoxNCBBTQ0KPiBUbzog
aW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KPiBTdWJqZWN0OiBbSW50ZWwtZ2Z4XSBb
UEFUQ0ggMi8zXSBkcm0vaTkxNTogRGVjb3VwbGUgaW50ZWxfZHBfe21pbiwNCj4gb3V0cHV0fV9i
cHAoKSBmcm9tIGNydGNfc3RhdGUNCj4gDQo+IEZyb206IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUu
c3lyamFsYUBsaW51eC5pbnRlbC5jb20+DQo+IA0KPiBQYXNzIHRoZSBvdXRwdXRfZm9ybWF0IGRp
cmVjdGx5IHRvIGludGVsX2RwX3ttaW4sb3V0cHV0fV9icHAoKSByYXRoZXIgdGhhbg0KPiBwYXNz
aW5nIGluIHRoZSBjcnRjX3N0YXRlIGFuZCBkaWdnaW5nIG91dCB0aGUgb3V0cHV0X2Zvcm1hdCBp
bnNpZGUgdGhlDQo+IGZ1bmN0aW9ucy4gVGhpcyB3aWxsIGFsbG93IHVzIHRvIHJldXNlIHRoZSBm
dW5jdGlvbnMgZm9yIG1vZGUgdmFsaWRhdGlvbg0KPiBwdXJwb3Nlcy4NCj4gDQo+IFNpZ25lZC1v
ZmYtYnk6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+DQoN
Ckxvb2tzIGdvb2QgdG8gbWUuDQpSZXZpZXdlZC1ieTogVmFuZGl0YSBLdWxrYXJuaSA8dmFuZGl0
YS5rdWxrYXJuaUBpbnRlbC5jb20+DQoNClRoYW5rcywNClZhbmRpdGENCj4gLS0tDQo+ICBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgIHwgMTUgKysrKysrKystLS0t
LS0tDQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmggICAgIHwgIDMg
KystDQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jIHwgIDIg
Ky0NCj4gIDMgZmlsZXMgY2hhbmdlZCwgMTEgaW5zZXJ0aW9ucygrKSwgOSBkZWxldGlvbnMoLSkN
Cj4gDQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rw
LmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMNCj4gaW5kZXgg
YWQ5YjhiMTZmYWRiLi5hYTQ4MDFhODEyM2QgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMNCj4gQEAgLTIxMTEsMTQgKzIxMTEsMTQgQEAgaW50ZWxfZHBfYWRq
dXN0X2NvbXBsaWFuY2VfY29uZmlnKHN0cnVjdA0KPiBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICAJ
fQ0KPiAgfQ0KPiANCj4gLXN0YXRpYyBpbnQgaW50ZWxfZHBfb3V0cHV0X2JwcChjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwgaW50DQo+IGJwcCkNCj4gK3N0YXRpYyBp
bnQgaW50ZWxfZHBfb3V0cHV0X2JwcChlbnVtIGludGVsX291dHB1dF9mb3JtYXQgb3V0cHV0X2Zv
cm1hdCwNCj4gK2ludCBicHApDQo+ICB7DQo+ICAJLyoNCj4gIAkgKiBicHAgdmFsdWUgd2FzIGFz
c3VtZWQgdG8gUkdCIGZvcm1hdC4gQW5kIFlDYkNyIDQ6MjowIG91dHB1dA0KPiAgCSAqIGZvcm1h
dCBvZiB0aGUgbnVtYmVyIG9mIGJ5dGVzIHBlciBwaXhlbCB3aWxsIGJlIGhhbGYgdGhlIG51bWJl
cg0KPiAgCSAqIG9mIGJ5dGVzIG9mIFJHQiBwaXhlbC4NCj4gIAkgKi8NCj4gLQlpZiAoY3J0Y19z
dGF0ZS0+b3V0cHV0X2Zvcm1hdCA9PQ0KPiBJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNSNDIwKQ0K
PiArCWlmIChvdXRwdXRfZm9ybWF0ID09IElOVEVMX09VVFBVVF9GT1JNQVRfWUNCQ1I0MjApDQo+
ICAJCWJwcCAvPSAyOw0KPiANCj4gIAlyZXR1cm4gYnBwOw0KPiBAQCAtMjEzNSw3ICsyMTM1LDcg
QEAgaW50ZWxfZHBfY29tcHV0ZV9saW5rX2NvbmZpZ193aWRlKHN0cnVjdA0KPiBpbnRlbF9kcCAq
aW50ZWxfZHAsDQo+ICAJaW50IG1vZGVfcmF0ZSwgbGlua19jbG9jaywgbGlua19hdmFpbDsNCj4g
DQo+ICAJZm9yIChicHAgPSBsaW1pdHMtPm1heF9icHA7IGJwcCA+PSBsaW1pdHMtPm1pbl9icHA7
IGJwcCAtPSAyICogMykgew0KPiAtCQlpbnQgb3V0cHV0X2JwcCA9IGludGVsX2RwX291dHB1dF9i
cHAocGlwZV9jb25maWcsIGJwcCk7DQo+ICsJCWludCBvdXRwdXRfYnBwID0gaW50ZWxfZHBfb3V0
cHV0X2JwcChwaXBlX2NvbmZpZy0NCj4gPm91dHB1dF9mb3JtYXQsDQo+ICticHApOw0KPiANCj4g
IAkJbW9kZV9yYXRlID0gaW50ZWxfZHBfbGlua19yZXF1aXJlZChhZGp1c3RlZF9tb2RlLQ0KPiA+
Y3J0Y19jbG9jaywNCj4gIAkJCQkJCSAgIG91dHB1dF9icHApOw0KPiBAQCAtMjM0Niw5ICsyMzQ2
LDkgQEAgc3RhdGljIGludCBpbnRlbF9kcF9kc2NfY29tcHV0ZV9jb25maWcoc3RydWN0DQo+IGlu
dGVsX2RwICppbnRlbF9kcCwNCj4gIAlyZXR1cm4gMDsNCj4gIH0NCj4gDQo+IC1pbnQgaW50ZWxf
ZHBfbWluX2JwcChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkNCj4g
K2ludCBpbnRlbF9kcF9taW5fYnBwKGVudW0gaW50ZWxfb3V0cHV0X2Zvcm1hdCBvdXRwdXRfZm9y
bWF0KQ0KPiAgew0KPiAtCWlmIChjcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0ID09IElOVEVMX09V
VFBVVF9GT1JNQVRfUkdCKQ0KPiArCWlmIChvdXRwdXRfZm9ybWF0ID09IElOVEVMX09VVFBVVF9G
T1JNQVRfUkdCKQ0KPiAgCQlyZXR1cm4gNiAqIDM7DQo+ICAJZWxzZQ0KPiAgCQlyZXR1cm4gOCAq
IDM7DQo+IEBAIC0yMzc5LDcgKzIzNzksNyBAQCBpbnRlbF9kcF9jb21wdXRlX2xpbmtfY29uZmln
KHN0cnVjdA0KPiBpbnRlbF9lbmNvZGVyICplbmNvZGVyLA0KPiAgCWxpbWl0cy5taW5fbGFuZV9j
b3VudCA9IDE7DQo+ICAJbGltaXRzLm1heF9sYW5lX2NvdW50ID0gaW50ZWxfZHBfbWF4X2xhbmVf
Y291bnQoaW50ZWxfZHApOw0KPiANCj4gLQlsaW1pdHMubWluX2JwcCA9IGludGVsX2RwX21pbl9i
cHAocGlwZV9jb25maWcpOw0KPiArCWxpbWl0cy5taW5fYnBwID0gaW50ZWxfZHBfbWluX2JwcChw
aXBlX2NvbmZpZy0+b3V0cHV0X2Zvcm1hdCk7DQo+ICAJbGltaXRzLm1heF9icHAgPSBpbnRlbF9k
cF9tYXhfYnBwKGludGVsX2RwLCBwaXBlX2NvbmZpZyk7DQo+IA0KPiAgCWlmIChpbnRlbF9kcF9p
c19lZHAoaW50ZWxfZHApKSB7DQo+IEBAIC0yNzY1LDcgKzI3NjUsOCBAQCBpbnRlbF9kcF9jb21w
dXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2Rlcg0KPiAqZW5jb2RlciwNCj4gIAlpZiAocGlw
ZV9jb25maWctPmRzYy5jb21wcmVzc2lvbl9lbmFibGUpDQo+ICAJCW91dHB1dF9icHAgPSBwaXBl
X2NvbmZpZy0+ZHNjLmNvbXByZXNzZWRfYnBwOw0KPiAgCWVsc2UNCj4gLQkJb3V0cHV0X2JwcCA9
IGludGVsX2RwX291dHB1dF9icHAocGlwZV9jb25maWcsDQo+IHBpcGVfY29uZmlnLT5waXBlX2Jw
cCk7DQo+ICsJCW91dHB1dF9icHAgPSBpbnRlbF9kcF9vdXRwdXRfYnBwKHBpcGVfY29uZmlnLQ0K
PiA+b3V0cHV0X2Zvcm1hdCwNCj4gKwkJCQkJCSBwaXBlX2NvbmZpZy0+cGlwZV9icHApOw0KPiAN
Cj4gIAlpbnRlbF9saW5rX2NvbXB1dGVfbV9uKG91dHB1dF9icHAsDQo+ICAJCQkgICAgICAgcGlw
ZV9jb25maWctPmxhbmVfY291bnQsDQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RwLmgNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwLmgNCj4gaW5kZXggMDhhMWMwYWE4Yjk0Li5hOTU4MGQxZGYzNWIgMTAwNjQ0DQo+IC0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaA0KPiArKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgNCj4gQEAgLTEwLDYgKzEwLDcgQEAN
Cj4gDQo+ICAjaW5jbHVkZSAiaTkxNV9yZWcuaCINCj4gDQo+ICtlbnVtIGludGVsX291dHB1dF9m
b3JtYXQ7DQo+ICBlbnVtIHBpcGU7DQo+ICBlbnVtIHBvcnQ7DQo+ICBzdHJ1Y3QgZHJtX2Nvbm5l
Y3Rvcl9zdGF0ZTsNCj4gQEAgLTM1LDcgKzM2LDcgQEAgdm9pZCBpbnRlbF9kcF9hZGp1c3RfY29t
cGxpYW5jZV9jb25maWcoc3RydWN0IGludGVsX2RwDQo+ICppbnRlbF9kcCwNCj4gIAkJCQkgICAg
ICAgc3RydWN0IGxpbmtfY29uZmlnX2xpbWl0cyAqbGltaXRzKTsgIGJvb2wNCj4gaW50ZWxfZHBf
bGltaXRlZF9jb2xvcl9yYW5nZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSwNCj4gIAkJCQkgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlDQo+ICpjb25u
X3N0YXRlKTsgLWludCBpbnRlbF9kcF9taW5fYnBwKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlDQo+ICpjcnRjX3N0YXRlKTsNCj4gK2ludCBpbnRlbF9kcF9taW5fYnBwKGVudW0gaW50ZWxf
b3V0cHV0X2Zvcm1hdCBvdXRwdXRfZm9ybWF0KTsNCj4gIGJvb2wgaW50ZWxfZHBfcG9ydF9lbmFi
bGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwNCj4gIAkJCSAgIGk5MTVfcmVn
X3QgZHBfcmVnLCBlbnVtIHBvcnQgcG9ydCwNCj4gIAkJCSAgIGVudW0gcGlwZSAqcGlwZSk7DQo+
IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5j
DQo+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYw0KPiBpbmRl
eCA2NGQ4ODU1MzllOTQuLjZhODc0Yjc3OWIxZiAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jDQo+IEBAIC0xMzAsNyArMTMwLDcgQEAgc3RhdGlj
IGludCBpbnRlbF9kcF9tc3RfY29tcHV0ZV9jb25maWcoc3RydWN0DQo+IGludGVsX2VuY29kZXIg
KmVuY29kZXIsDQo+ICAJbGltaXRzLm1pbl9sYW5lX2NvdW50ID0NCj4gIAlsaW1pdHMubWF4X2xh
bmVfY291bnQgPSBpbnRlbF9kcF9tYXhfbGFuZV9jb3VudChpbnRlbF9kcCk7DQo+IA0KPiAtCWxp
bWl0cy5taW5fYnBwID0gaW50ZWxfZHBfbWluX2JwcChwaXBlX2NvbmZpZyk7DQo+ICsJbGltaXRz
Lm1pbl9icHAgPSBpbnRlbF9kcF9taW5fYnBwKHBpcGVfY29uZmlnLT5vdXRwdXRfZm9ybWF0KTsN
Cj4gIAkvKg0KPiAgCSAqIEZJWE1FOiBJZiBhbGwgdGhlIHN0cmVhbXMgY2FuJ3QgZml0IGludG8g
dGhlIGxpbmsgd2l0aA0KPiAgCSAqIHRoZWlyIGN1cnJlbnQgcGlwZV9icHAgd2Ugc2hvdWxkIHJl
ZHVjZSBwaXBlX2JwcCBhY3Jvc3MNCj4gLS0NCj4gMi4yNi4yDQo+IA0KPiBfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KPiBJbnRlbC1nZnggbWFpbGluZyBs
aXN0DQo+IEludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcNCj4gaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngNCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QK
SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

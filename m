Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 502CE259BD
	for <lists+intel-gfx@lfdr.de>; Tue, 21 May 2019 23:11:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5A7E7895B9;
	Tue, 21 May 2019 21:11:43 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A4F32896EB
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 May 2019 21:11:41 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16633448-1500050 
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 May 2019 22:11:36 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 21 May 2019 22:11:30 +0100
Message-Id: <20190521211134.16117-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190521211134.16117-1-chris@chris-wilson.co.uk>
References: <20190521211134.16117-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 06/10] drm/i915: Load balancing across a virtual
 engine
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2aW5nIGFsbG93ZWQgdGhlIHVzZXIgdG8gZGVmaW5lIGEgc2V0IG9mIGVuZ2luZXMgdGhhdCB0
aGV5IHdpbGwgd2FudAp0byBvbmx5IHVzZSwgd2UgZ28gb25lIHN0ZXAgZnVydGhlciBhbmQgYWxs
b3cgdGhlbSB0byBiaW5kIHRob3NlIGVuZ2luZXMKaW50byBhIHNpbmdsZSB2aXJ0dWFsIGluc3Rh
bmNlLiBTdWJtaXR0aW5nIGEgYmF0Y2ggdG8gdGhlIHZpcnR1YWwgZW5naW5lCndpbGwgdGhlbiBm
b3J3YXJkIGl0IHRvIGFueSBvbmUgb2YgdGhlIHNldCBpbiBhIG1hbm5lciBhcyBiZXN0IHRvCmRp
c3RyaWJ1dGUgbG9hZC4gIFRoZSB2aXJ0dWFsIGVuZ2luZSBoYXMgYSBzaW5nbGUgdGltZWxpbmUg
YWNyb3NzIGFsbAplbmdpbmVzIChpdCBvcGVyYXRlcyBhcyBhIHNpbmdsZSBxdWV1ZSksIHNvIGl0
IGlzIG5vdCBhYmxlIHRvIGNvbmN1cnJlbnRseQpydW4gYmF0Y2hlcyBhY3Jvc3MgbXVsdGlwbGUg
ZW5naW5lcyBieSBpdHNlbGY7IHRoYXQgaXMgbGVmdCB1cCB0byB0aGUgdXNlcgp0byBzdWJtaXQg
bXVsdGlwbGUgY29uY3VycmVudCBiYXRjaGVzIHRvIG11bHRpcGxlIHF1ZXVlcy4gTXVsdGlwbGUg
dXNlcnMKd2lsbCBiZSBsb2FkIGJhbGFuY2VkIGFjcm9zcyB0aGUgc3lzdGVtLgoKVGhlIG1lY2hh
bmlzbSB1c2VkIGZvciBsb2FkIGJhbGFuY2luZyBpbiB0aGlzIHBhdGNoIGlzIGEgbGF0ZSBncmVl
ZHkKYmFsYW5jZXIuIFdoZW4gYSByZXF1ZXN0IGlzIHJlYWR5IGZvciBleGVjdXRpb24sIGl0IGlz
IGFkZGVkIHRvIGVhY2gKZW5naW5lJ3MgcXVldWUsIGFuZCB3aGVuIGFuIGVuZ2luZSBpcyByZWFk
eSBmb3IgaXRzIG5leHQgcmVxdWVzdCBpdApjbGFpbXMgaXQgZnJvbSB0aGUgdmlydHVhbCBlbmdp
bmUuIFRoZSBmaXJzdCBlbmdpbmUgdG8gZG8gc28sIHdpbnMsIGkuZS4KdGhlIHJlcXVlc3QgaXMg
ZXhlY3V0ZWQgYXQgdGhlIGVhcmxpZXN0IG9wcG9ydHVuaXR5IChpZGxlIG1vbWVudCkgaW4gdGhl
CnN5c3RlbS4KCkFzIG5vdCBhbGwgSFcgaXMgY3JlYXRlZCBlcXVhbCwgdGhlIHVzZXIgaXMgc3Rp
bGwgYWJsZSB0byBza2lwIHRoZQp2aXJ0dWFsIGVuZ2luZSBhbmQgZXhlY3V0ZSB0aGUgYmF0Y2gg
b24gYSBzcGVjaWZpYyBlbmdpbmUsIGFsbCB3aXRoaW4gdGhlCnNhbWUgcXVldWUuIEl0IHdpbGwg
dGhlbiBiZSBleGVjdXRlZCBpbiBvcmRlciBvbiB0aGUgY29ycmVjdCBlbmdpbmUsCndpdGggZXhl
Y3V0aW9uIG9uIG90aGVyIHZpcnR1YWwgZW5naW5lcyBiZWluZyBtb3ZlZCBhd2F5IGR1ZSB0byB0
aGUgbG9hZApkZXRlY3Rpb24uCgpBIGNvdXBsZSBvZiBhcmVhcyBmb3IgcG90ZW50aWFsIGltcHJv
dmVtZW50IGxlZnQhCgotIFRoZSB2aXJ0dWFsIGVuZ2luZSBhbHdheXMgdGFrZSBwcmlvcml0eSBv
dmVyIGVxdWFsLXByaW9yaXR5IHRhc2tzLgpNb3N0bHkgYnJva2VuIHVwIGJ5IGFwcGx5aW5nIEZR
X0NPREVMIHJ1bGVzIGZvciBwcmlvcml0aXNpbmcgbmV3IGNsaWVudHMsCmFuZCBob3BlZnVsbHkg
dGhlIHZpcnR1YWwgYW5kIHJlYWwgZW5naW5lcyBhcmUgbm90IHRoZW4gY29uZ2VzdGVkIChpLmUu
CmFsbCB3b3JrIGlzIHZpYSB2aXJ0dWFsIGVuZ2luZXMsIG9yIGFsbCB3b3JrIGlzIHRvIHRoZSBy
ZWFsIGVuZ2luZSkuCgotIFdlIHJlcXVpcmUgdGhlIGJyZWFkY3J1bWIgaXJxIGFyb3VuZCBldmVy
eSB2aXJ0dWFsIGVuZ2luZSByZXF1ZXN0LiBGb3IKbm9ybWFsIGVuZ2luZXMsIHdlIGVsaW1pbmF0
ZSB0aGUgbmVlZCBmb3IgdGhlIHNsb3cgcm91bmQgdHJpcCB2aWEKaW50ZXJydXB0IGJ5IHVzaW5n
IHRoZSBzdWJtaXQgZmVuY2UgYW5kIHF1ZXVlaW5nIGluIG9yZGVyLiBGb3IgdmlydHVhbAplbmdp
bmVzLCB3ZSBoYXZlIHRvIGFsbG93IGFueSBqb2IgdG8gdHJhbnNmZXIgdG8gYSBuZXcgcmluZywg
YW5kIGNhbm5vdApjb2FsZXNjZSB0aGUgc3VibWlzc2lvbnMsIHNvIHJlcXVpcmUgdGhlIGNvbXBs
ZXRpb24gZmVuY2UgaW5zdGVhZCwKZm9yY2luZyB0aGUgcGVyc2lzdGVudCB1c2Ugb2YgaW50ZXJy
dXB0cy4KCi0gV2Ugb25seSBkcmlwIGZlZWQgc2luZ2xlIHJlcXVlc3RzIHRocm91Z2ggZWFjaCB2
aXJ0dWFsIGVuZ2luZSBhbmQgb250bwp0aGUgcGh5c2ljYWwgZW5naW5lcywgZXZlbiBpZiB0aGVy
ZSB3YXMgZW5vdWdoIHdvcmsgdG8gZmlsbCBhbGwgRUxTUCwKbGVhdmluZyBzbWFsbCBzdGFsbHMg
d2l0aCBhbiBpZGxlIENTIGV2ZW50IGF0IHRoZSBlbmQgb2YgZXZlcnkgcmVxdWVzdC4KQ291bGQg
d2UgYmUgZ3JlZWR5IGFuZCBmaWxsIGJvdGggc2xvdHM/IEJlaW5nIGxhenkgaXMgdmlydHVvdXMg
Zm9yIGxvYWQKZGlzdHJpYnV0aW9uIG9uIGxlc3MtdGhhbi1mdWxsIHdvcmtsb2FkcyB0aG91Z2gu
CgpPdGhlciBhcmVhcyBvZiBpbXByb3ZlbWVudCBhcmUgbW9yZSBnZW5lcmFsLCBzdWNoIGFzIHJl
ZHVjaW5nIGxvY2sKY29udGVudGlvbiwgcmVkdWNpbmcgZGlzcGF0Y2ggb3ZlcmhlYWQsIGxvb2tp
bmcgYXQgZGlyZWN0IHN1Ym1pc3Npb24KcmF0aGVyIHRoYW4gYm91bmNpbmcgYXJvdW5kIHRhc2ts
ZXRzIGV0Yy4KCnNzZXU6IExpZnQgdGhlIHJlc3RyaWN0aW9uIHRvIGFsbG93IHNzZXUgdG8gYmUg
cmVjb25maWd1cmVkIG9uIHZpcnR1YWwKZW5naW5lcyBjb21wb3NlZCBvZiBSRU5ERVJfQ0xBU1Mg
KHJjcykuCgp2MjogbWFjcm9pemUgY2hlY2tfdXNlcl9tYnooKQp2MzogQ2FuY2VsIHZpcnR1YWwg
ZW5naW5lcyBvbiB3ZWRnaW5nCnY0OiBDb21tZW5jZSBjb21tZW50aW5nCnY1OiBSZXBsYWNlIDY0
YiBzaWJsaW5nX21hc2sgd2l0aCBhIGxpc3Qgb2YgY2xhc3M6aW5zdGFuY2UKdjY6IERyb3AgdGhl
IG9uZS1lbGVtZW50IGFycmF5IGluIHRoZSB1YWJpCnY3OiBBc3NlcnQgaXQgaXMgYW4gdmlydHVh
bCBlbmdpbmUgaW4gdG9fdmlydHVhbF9lbmdpbmUoKQp2ODogU2tpcCBvdmVyIGhvbGVzIGluIFtj
bGFzc11baW5zdF0gc28gd2UgY2FuIHNlbGZ0ZXN0IHdpdGggKHZjczAsIHZjczIpCgpMaW5rOiBo
dHRwczovL2dpdGh1Yi5jb20vaW50ZWwvbWVkaWEtZHJpdmVyL3B1bGwvMjgzClNpZ25lZC1vZmYt
Ynk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVy
c3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IFR2cnRrbyBVcnN1
bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX3R5cGVzLmggfCAgIDggKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjLmMgICAgICAgICAgfCA2ODAgKysrKysrKysrKysrKysrKysrLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmggICAgICAgICAgfCAgIDkgKwogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgICAgICAgfCAxODAgKysrKysKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ2VtLmggICAgICAgICAgICAgIHwgICA1ICsKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuYyAgICAgIHwgMTE2ICsrKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgICAgICAgIHwgIDE5ICstCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmggICB8ICAgMSArCiBpbmNsdWRlL3VhcGkvZHJtL2k5
MTVfZHJtLmggICAgICAgICAgICAgICAgICB8ICAzOSArKwogOSBmaWxlcyBjaGFuZ2VkLCAxMDI5
IGluc2VydGlvbnMoKyksIDI4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggZTM4MWMxYzczOTAyLi43YjQ3ZTAwZmEwODIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCkBAIC0y
MjcsNiArMjI3LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgewogCSAqIEBxdWV1
ZTogcXVldWUgb2YgcmVxdWVzdHMsIGluIHByaW9yaXR5IGxpc3RzCiAJICovCiAJc3RydWN0IHJi
X3Jvb3RfY2FjaGVkIHF1ZXVlOworCXN0cnVjdCByYl9yb290X2NhY2hlZCB2aXJ0dWFsOwogCiAJ
LyoqCiAJICogQGNzYl93cml0ZTogY29udHJvbCByZWdpc3RlciBmb3IgQ29udGV4dCBTd2l0Y2gg
YnVmZmVyCkBAIC00NDUsNiArNDQ2LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7CiAjZGVm
aW5lIEk5MTVfRU5HSU5FX0hBU19QUkVFTVBUSU9OICAgQklUKDIpCiAjZGVmaW5lIEk5MTVfRU5H
SU5FX0hBU19TRU1BUEhPUkVTICAgQklUKDMpCiAjZGVmaW5lIEk5MTVfRU5HSU5FX05FRURTX0JS
RUFEQ1JVTUJfVEFTS0xFVCBCSVQoNCkKKyNkZWZpbmUgSTkxNV9FTkdJTkVfSVNfVklSVFVBTCAg
ICAgICBCSVQoNSkKIAl1bnNpZ25lZCBpbnQgZmxhZ3M7CiAKIAkvKgpAQCAtNTM0LDYgKzUzNiwx
MiBAQCBpbnRlbF9lbmdpbmVfbmVlZHNfYnJlYWRjcnVtYl90YXNrbGV0KGNvbnN0IHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlyZXR1cm4gZW5naW5lLT5mbGFncyAmIEk5MTVfRU5H
SU5FX05FRURTX0JSRUFEQ1JVTUJfVEFTS0xFVDsKIH0KIAorc3RhdGljIGlubGluZSBib29sCitp
bnRlbF9lbmdpbmVfaXNfdmlydHVhbChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCit7CisJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9JU19WSVJUVUFMOwor
fQorCiAjZGVmaW5lIGluc3Rkb25lX3NsaWNlX21hc2soZGV2X3ByaXZfXykgXAogCShJU19HRU4o
ZGV2X3ByaXZfXywgNykgPyBcCiAJIDEgOiBSVU5USU1FX0lORk8oZGV2X3ByaXZfXyktPnNzZXUu
c2xpY2VfbWFzaykKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xy
Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXggZjI2M2E4Mzc0
MjczLi5hZmZhNWUyZGZjZTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0x
NjQsNiArMTY0LDQyIEBACiAjZGVmaW5lIFdBX1RBSUxfRFdPUkRTIDIKICNkZWZpbmUgV0FfVEFJ
TF9CWVRFUyAoc2l6ZW9mKHUzMikgKiBXQV9UQUlMX0RXT1JEUykKIAorc3RydWN0IHZpcnR1YWxf
ZW5naW5lIHsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzIGJhc2U7CisJc3RydWN0IGludGVsX2Nv
bnRleHQgY29udGV4dDsKKworCS8qCisJICogV2UgYWxsb3cgb25seSBhIHNpbmdsZSByZXF1ZXN0
IHRocm91Z2ggdGhlIHZpcnR1YWwgZW5naW5lIGF0IGEgdGltZQorCSAqIChlYWNoIHJlcXVlc3Qg
aW4gdGhlIHRpbWVsaW5lIHdhaXRzIGZvciB0aGUgY29tcGxldGlvbiBmZW5jZSBvZgorCSAqIHRo
ZSBwcmV2aW91cyBiZWZvcmUgYmVpbmcgc3VibWl0dGVkKS4gQnkgcmVzdHJpY3Rpbmcgb3Vyc2Vs
dmVzIHRvCisJICogb25seSBzdWJtaXR0aW5nIGEgc2luZ2xlIHJlcXVlc3QsIGVhY2ggcmVxdWVz
dCBpcyBwbGFjZWQgb24gdG8gYQorCSAqIHBoeXNpY2FsIHRvIG1heGltaXNlIGxvYWQgc3ByZWFk
aW5nIChieSB2aXJ0dWUgb2YgdGhlIGxhdGUgZ3JlZWR5CisJICogc2NoZWR1bGluZyAtLSBlYWNo
IHJlYWwgZW5naW5lIHRha2VzIHRoZSBuZXh0IGF2YWlsYWJsZSByZXF1ZXN0CisJICogdXBvbiBp
ZGxpbmcpLgorCSAqLworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Q7CisKKwkvKgorCSAq
IFdlIGtlZXAgYSByYnRyZWUgb2YgYXZhaWxhYmxlIHZpcnR1YWwgZW5naW5lcyBpbnNpZGUgZWFj
aCBwaHlzaWNhbAorCSAqIGVuZ2luZSwgc29ydGVkIGJ5IHByaW9yaXR5LiBIZXJlIHdlIHByZWFs
bG9jYXRlIHRoZSBub2RlcyB3ZSBuZWVkCisJICogZm9yIHRoZSB2aXJ0dWFsIGVuZ2luZSwgaW5k
ZXhlZCBieSBwaHlzaWNhbF9lbmdpbmUtPmlkLgorCSAqLworCXN0cnVjdCB2ZV9ub2RlIHsKKwkJ
c3RydWN0IHJiX25vZGUgcmI7CisJCWludCBwcmlvOworCX0gbm9kZXNbSTkxNV9OVU1fRU5HSU5F
U107CisKKwkvKiBBbmQgZmluYWxseSwgd2hpY2ggcGh5c2ljYWwgZW5naW5lcyB0aGlzIHZpcnR1
YWwgZW5naW5lIG1hcHMgb250by4gKi8KKwl1bnNpZ25lZCBpbnQgbnVtX3NpYmxpbmdzOworCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmdzWzBdOworfTsKKworc3RhdGljIHN0cnVjdCB2
aXJ0dWFsX2VuZ2luZSAqdG9fdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQoreworCUdFTV9CVUdfT04oIWludGVsX2VuZ2luZV9pc192aXJ0dWFsKGVuZ2luZSkp
OworCXJldHVybiBjb250YWluZXJfb2YoZW5naW5lLCBzdHJ1Y3QgdmlydHVhbF9lbmdpbmUsIGJh
c2UpOworfQorCiBzdGF0aWMgaW50IGV4ZWNsaXN0c19jb250ZXh0X2RlZmVycmVkX2FsbG9jKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJCQkJICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSk7CiBzdGF0aWMgdm9pZCBleGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUodTMyICpyZWdf
c3RhdGUsCkBAIC0yMTYsNyArMjUyLDggQEAgc3RhdGljIGludCBxdWV1ZV9wcmlvKGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiB9CiAKIHN0YXRpYyBpbmxp
bmUgYm9vbCBuZWVkX3ByZWVtcHQoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LAotCQkJCWNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQorCQkJCWNvbnN0IHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxLAorCQkJCXN0cnVjdCByYl9ub2RlICpyYikKIHsKIAlpbnQgbGFzdF9w
cmlvOwogCkBAIC0yNTEsNiArMjg4LDI1IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBuZWVkX3ByZWVt
cHQoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCSAgICBycV9wcmlvKGxp
c3RfbmV4dF9lbnRyeShycSwgbGluaykpID4gbGFzdF9wcmlvKQogCQlyZXR1cm4gdHJ1ZTsKIAor
CWlmIChyYikgeworCQlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0KKwkJCXJiX2VudHJ5KHJi
LCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5naW5lLT5pZF0ucmIpOworCQlib29sIHByZWVtcHQgPSBm
YWxzZTsKKworCQlpZiAoZW5naW5lID09IHZlLT5zaWJsaW5nc1swXSkgeyAvKiBvbmx5IHByZWVt
cHQgb25lIHNpYmxpbmcgKi8KKwkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKm5leHQ7CisKKwkJCXJj
dV9yZWFkX2xvY2soKTsKKwkJCW5leHQgPSBSRUFEX09OQ0UodmUtPnJlcXVlc3QpOworCQkJaWYg
KG5leHQpCisJCQkJcHJlZW1wdCA9IHJxX3ByaW8obmV4dCkgPiBsYXN0X3ByaW87CisJCQlyY3Vf
cmVhZF91bmxvY2soKTsKKwkJfQorCisJCWlmIChwcmVlbXB0KQorCQkJcmV0dXJuIHByZWVtcHQ7
CisJfQorCiAJLyoKIAkgKiBJZiB0aGUgaW5mbGlnaHQgY29udGV4dCBkaWQgbm90IHRyaWdnZXIg
dGhlIHByZWVtcHRpb24sIHRoZW4gbWF5YmUKIAkgKiBpdCB3YXMgdGhlIHNldCBvZiBxdWV1ZWQg
cmVxdWVzdHM/IFBpY2sgdGhlIGhpZ2hlc3QgcHJpb3JpdHkgaW4KQEAgLTM2OSw2ICs0MjUsOCBA
QCBfX3Vud2luZF9pbmNvbXBsZXRlX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmVfcmV2ZXJzZShycSwgcm4sCiAJCQkJCSAm
ZW5naW5lLT50aW1lbGluZS5yZXF1ZXN0cywKIAkJCQkJIGxpbmspIHsKKwkJc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqb3duZXI7CisKIAkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQog
CQkJYnJlYWs7CiAKQEAgLTM3NywxNiArNDM1LDI5IEBAIF9fdW53aW5kX2luY29tcGxldGVfcmVx
dWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJCUdFTV9CVUdfT04ocnEt
Pmh3X2NvbnRleHQtPmFjdGl2ZSk7CiAKLQkJR0VNX0JVR19PTihycV9wcmlvKHJxKSA9PSBJOTE1
X1BSSU9SSVRZX0lOVkFMSUQpOwotCQlpZiAocnFfcHJpbyhycSkgIT0gcHJpbykgewotCQkJcHJp
byA9IHJxX3ByaW8ocnEpOwotCQkJcGwgPSBpOTE1X3NjaGVkX2xvb2t1cF9wcmlvbGlzdChlbmdp
bmUsIHByaW8pOwotCQl9Ci0JCUdFTV9CVUdfT04oUkJfRU1QVFlfUk9PVCgmZW5naW5lLT5leGVj
bGlzdHMucXVldWUucmJfcm9vdCkpOwotCi0JCWxpc3RfYWRkKCZycS0+c2NoZWQubGluaywgcGwp
OworCQkvKgorCQkgKiBQdXNoIHRoZSByZXF1ZXN0IGJhY2sgaW50byB0aGUgcXVldWUgZm9yIGxh
dGVyIHJlc3VibWlzc2lvbi4KKwkJICogSWYgdGhpcyByZXF1ZXN0IGlzIG5vdCBuYXRpdmUgdG8g
dGhpcyBwaHlzaWNhbCBlbmdpbmUgKGkuZS4KKwkJICogaXQgY2FtZSBmcm9tIGEgdmlydHVhbCBz
b3VyY2UpLCBwdXNoIGl0IGJhY2sgb250byB0aGUgdmlydHVhbAorCQkgKiBlbmdpbmUgc28gdGhh
dCBpdCBjYW4gYmUgbW92ZWQgYWNyb3NzIG9udG8gYW5vdGhlciBwaHlzaWNhbAorCQkgKiBlbmdp
bmUgYXMgbG9hZCBkaWN0YXRlcy4KKwkJICovCisJCW93bmVyID0gcnEtPmh3X2NvbnRleHQtPmVu
Z2luZTsKKwkJaWYgKGxpa2VseShvd25lciA9PSBlbmdpbmUpKSB7CisJCQlHRU1fQlVHX09OKHJx
X3ByaW8ocnEpID09IEk5MTVfUFJJT1JJVFlfSU5WQUxJRCk7CisJCQlpZiAocnFfcHJpbyhycSkg
IT0gcHJpbykgeworCQkJCXByaW8gPSBycV9wcmlvKHJxKTsKKwkJCQlwbCA9IGk5MTVfc2NoZWRf
bG9va3VwX3ByaW9saXN0KGVuZ2luZSwgcHJpbyk7CisJCQl9CisJCQlHRU1fQlVHX09OKFJCX0VN
UFRZX1JPT1QoJmVuZ2luZS0+ZXhlY2xpc3RzLnF1ZXVlLnJiX3Jvb3QpKTsKIAotCQlhY3RpdmUg
PSBycTsKKwkJCWxpc3RfYWRkKCZycS0+c2NoZWQubGluaywgcGwpOworCQkJYWN0aXZlID0gcnE7
CisJCX0gZWxzZSB7CisJCQlycS0+ZW5naW5lID0gb3duZXI7CisJCQlvd25lci0+c3VibWl0X3Jl
cXVlc3QocnEpOworCQkJYWN0aXZlID0gTlVMTDsKKwkJfQogCX0KIAogCXJldHVybiBhY3RpdmU7
CkBAIC02MjIsNiArNjkzLDkwIEBAIHN0YXRpYyB2b2lkIGNvbXBsZXRlX3ByZWVtcHRfY29udGV4
dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQogCQkJCQkJICBleGVj
bGlzdHMpKTsKIH0KIAorc3RhdGljIHZvaWQgdmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0
cyh1MzIgKnJlZ3MsCisJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7
CisJdTMyIGJhc2UgPSBlbmdpbmUtPm1taW9fYmFzZTsKKworCS8qIE11c3QgbWF0Y2ggZXhlY2xp
c3RzX2luaXRfcmVnX3N0YXRlKCkhICovCisKKwlyZWdzW0NUWF9DT05URVhUX0NPTlRST0xdID0K
KwkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19DT05URVhUX0NPTlRST0woYmFzZSkpOworCXJl
Z3NbQ1RYX1JJTkdfSEVBRF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0hFQUQoYmFzZSkp
OworCXJlZ3NbQ1RYX1JJTkdfVEFJTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1RBSUwo
YmFzZSkpOworCXJlZ3NbQ1RYX1JJTkdfQlVGRkVSX1NUQVJUXSA9IGk5MTVfbW1pb19yZWdfb2Zm
c2V0KFJJTkdfU1RBUlQoYmFzZSkpOworCXJlZ3NbQ1RYX1JJTkdfQlVGRkVSX0NPTlRST0xdID0g
aTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19DVEwoYmFzZSkpOworCisJcmVnc1tDVFhfQkJfSEVB
RF9VXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQkJBRERSX1VEVyhiYXNlKSk7CisJcmVn
c1tDVFhfQkJfSEVBRF9MXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQkJBRERSKGJhc2Up
KTsKKwlyZWdzW0NUWF9CQl9TVEFURV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCU1RB
VEUoYmFzZSkpOworCXJlZ3NbQ1RYX1NFQ09ORF9CQl9IRUFEX1VdID0KKwkJaTkxNV9tbWlvX3Jl
Z19vZmZzZXQoUklOR19TQkJBRERSX1VEVyhiYXNlKSk7CisJcmVnc1tDVFhfU0VDT05EX0JCX0hF
QURfTF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1NCQkFERFIoYmFzZSkpOworCXJlZ3Nb
Q1RYX1NFQ09ORF9CQl9TVEFURV0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1NCQlNUQVRF
KGJhc2UpKTsKKworCXJlZ3NbQ1RYX0NUWF9USU1FU1RBTVBdID0KKwkJaTkxNV9tbWlvX3JlZ19v
ZmZzZXQoUklOR19DVFhfVElNRVNUQU1QKGJhc2UpKTsKKwlyZWdzW0NUWF9QRFAzX1VEV10gPSBp
OTE1X21taW9fcmVnX29mZnNldChHRU44X1JJTkdfUERQX1VEVyhiYXNlLCAzKSk7CisJcmVnc1tD
VFhfUERQM19MRFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFcoYmFz
ZSwgMykpOworCXJlZ3NbQ1RYX1BEUDJfVURXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhf
UklOR19QRFBfVURXKGJhc2UsIDIpKTsKKwlyZWdzW0NUWF9QRFAyX0xEV10gPSBpOTE1X21taW9f
cmVnX29mZnNldChHRU44X1JJTkdfUERQX0xEVyhiYXNlLCAyKSk7CisJcmVnc1tDVFhfUERQMV9V
RFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9VRFcoYmFzZSwgMSkpOwor
CXJlZ3NbQ1RYX1BEUDFfTERXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBf
TERXKGJhc2UsIDEpKTsKKwlyZWdzW0NUWF9QRFAwX1VEV10gPSBpOTE1X21taW9fcmVnX29mZnNl
dChHRU44X1JJTkdfUERQX1VEVyhiYXNlLCAwKSk7CisJcmVnc1tDVFhfUERQMF9MRFddID0gaTkx
NV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFcoYmFzZSwgMCkpOworCisJaWYgKGVu
Z2luZS0+Y2xhc3MgPT0gUkVOREVSX0NMQVNTKSB7CisJCXJlZ3NbQ1RYX1JDU19JTkRJUkVDVF9D
VFhdID0KKwkJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfSU5ESVJFQ1RfQ1RYKGJhc2UpKTsK
KwkJcmVnc1tDVFhfUkNTX0lORElSRUNUX0NUWF9PRkZTRVRdID0KKwkJCWk5MTVfbW1pb19yZWdf
b2Zmc2V0KFJJTkdfSU5ESVJFQ1RfQ1RYX09GRlNFVChiYXNlKSk7CisJCXJlZ3NbQ1RYX0JCX1BF
Ul9DVFhfUFRSXSA9CisJCQlpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0JCX1BFUl9DVFhfUFRS
KGJhc2UpKTsKKworCQlyZWdzW0NUWF9SX1BXUl9DTEtfU1RBVEVdID0KKwkJCWk5MTVfbW1pb19y
ZWdfb2Zmc2V0KEdFTjhfUl9QV1JfQ0xLX1NUQVRFKTsKKwl9Cit9CisKK3N0YXRpYyBib29sIHZp
cnR1YWxfbWF0Y2hlcyhjb25zdCBzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlLAorCQkJICAgIGNv
bnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAorCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKK3sKKwljb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICphY3Rp
dmU7CisKKwkvKgorCSAqIFdlIHRyYWNrIHdoZW4gdGhlIEhXIGhhcyBjb21wbGV0ZWQgc2F2aW5n
IHRoZSBjb250ZXh0IGltYWdlCisJICogKGkuZS4gd2hlbiB3ZSBoYXZlIHNlZW4gdGhlIGZpbmFs
IENTIGV2ZW50IHN3aXRjaGluZyBvdXQgb2YKKwkgKiB0aGUgY29udGV4dCkgYW5kIG11c3Qgbm90
IG92ZXJ3cml0ZSB0aGUgY29udGV4dCBpbWFnZSBiZWZvcmUKKwkgKiB0aGVuLiBUaGlzIHJlc3Ry
aWN0cyB1cyB0byBvbmx5IHVzaW5nIHRoZSBhY3RpdmUgZW5naW5lCisJICogd2hpbGUgdGhlIHBy
ZXZpb3VzIHZpcnR1YWxpemVkIHJlcXVlc3QgaXMgaW5mbGlnaHQgKHNvCisJICogd2UgcmV1c2Ug
dGhlIHJlZ2lzdGVyIG9mZnNldHMpLiBUaGlzIGlzIGEgdmVyeSBzbWFsbAorCSAqIGh5c3RlcnNp
cyBvbiB0aGUgZ3JlZWR5IHNlZWxjdGlvbiBhbGdvcml0aG0uCisJICovCisJYWN0aXZlID0gUkVB
RF9PTkNFKHZlLT5jb250ZXh0LmFjdGl2ZSk7CisJaWYgKGFjdGl2ZSAmJiBhY3RpdmUgIT0gZW5n
aW5lKQorCQlyZXR1cm4gZmFsc2U7CisKKwlyZXR1cm4gdHJ1ZTsKK30KKworc3RhdGljIHZvaWQg
dmlydHVhbF94ZmVyX2JyZWFkY3J1bWJzKHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUsCisJCQkJ
ICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqb2xkID0gdmUtPnNpYmxpbmdzWzBdOworCisJLyogQWxsIHVuYXR0YWNoZWQgKHJx
LT5lbmdpbmUgPT0gb2xkKSBtdXN0IGFscmVhZHkgYmUgY29tcGxldGVkICovCisKKwlzcGluX2xv
Y2soJm9sZC0+YnJlYWRjcnVtYnMuaXJxX2xvY2spOworCWlmICghbGlzdF9lbXB0eSgmdmUtPmNv
bnRleHQuc2lnbmFsX2xpbmspKSB7CisJCWxpc3RfbW92ZV90YWlsKCZ2ZS0+Y29udGV4dC5zaWdu
YWxfbGluaywKKwkJCSAgICAgICAmZW5naW5lLT5icmVhZGNydW1icy5zaWduYWxlcnMpOworCQlp
bnRlbF9lbmdpbmVfcXVldWVfYnJlYWRjcnVtYnMoZW5naW5lKTsKKwl9CisJc3Bpbl91bmxvY2so
Jm9sZC0+YnJlYWRjcnVtYnMuaXJxX2xvY2spOworfQorCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNf
ZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVs
X2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7
CkBAIC02NTQsNiArODA5LDI2IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1ZXVlKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkgKiBhbmQgY29udGV4dCBzd2l0Y2hlcykgc3Vi
bWlzc2lvbi4KIAkgKi8KIAorCWZvciAocmIgPSByYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+
dmlydHVhbCk7IHJiOyApIHsKKwkJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9CisJCQlyYl9l
bnRyeShyYiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2luZS0+aWRdLnJiKTsKKwkJc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEgPSBSRUFEX09OQ0UodmUtPnJlcXVlc3QpOworCisJCWlmICghcnEpIHsg
LyogbGF6aWx5IGNsZWFudXAgYWZ0ZXIgYW5vdGhlciBlbmdpbmUgaGFuZGxlZCBycSAqLworCQkJ
cmJfZXJhc2VfY2FjaGVkKHJiLCAmZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJCVJCX0NMRUFSX05P
REUocmIpOworCQkJcmIgPSByYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJ
CQljb250aW51ZTsKKwkJfQorCisJCWlmICghdmlydHVhbF9tYXRjaGVzKHZlLCBycSwgZW5naW5l
KSkgeworCQkJcmIgPSByYl9uZXh0KHJiKTsKKwkJCWNvbnRpbnVlOworCQl9CisKKwkJYnJlYWs7
CisJfQorCiAJaWYgKGxhc3QpIHsKIAkJLyoKIAkJICogRG9uJ3QgcmVzdWJtaXQgb3Igc3dpdGNo
IHVudGlsIGFsbCBvdXRzdGFuZGluZwpAQCAtNjc1LDcgKzg1MCw3IEBAIHN0YXRpYyB2b2lkIGV4
ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJaWYgKCFl
eGVjbGlzdHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9IV0FDSykpCiAJ
CQlyZXR1cm47CiAKLQkJaWYgKG5lZWRfcHJlZW1wdChlbmdpbmUsIGxhc3QpKSB7CisJCWlmIChu
ZWVkX3ByZWVtcHQoZW5naW5lLCBsYXN0LCByYikpIHsKIAkJCWluamVjdF9wcmVlbXB0X2NvbnRl
eHQoZW5naW5lKTsKIAkJCXJldHVybjsKIAkJfQpAQCAtNzE1LDYgKzg5MCw5MiBAQCBzdGF0aWMg
dm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJ
CWxhc3QtPnRhaWwgPSBsYXN0LT53YV90YWlsOwogCX0KIAorCXdoaWxlIChyYikgeyAvKiBYWFgg
dmlydHVhbCBpcyBhbHdheXMgdGFraW5nIHByZWNlZGVuY2UgKi8KKwkJc3RydWN0IHZpcnR1YWxf
ZW5naW5lICp2ZSA9CisJCQlyYl9lbnRyeShyYiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2luZS0+
aWRdLnJiKTsKKwkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisKKwkJc3Bpbl9sb2NrKCZ2ZS0+
YmFzZS50aW1lbGluZS5sb2NrKTsKKworCQlycSA9IHZlLT5yZXF1ZXN0OworCQlpZiAodW5saWtl
bHkoIXJxKSkgeyAvKiBsb3N0IHRoZSByYWNlIHRvIGEgc2libGluZyAqLworCQkJc3Bpbl91bmxv
Y2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2spOworCQkJcmJfZXJhc2VfY2FjaGVkKHJiLCAmZXhl
Y2xpc3RzLT52aXJ0dWFsKTsKKwkJCVJCX0NMRUFSX05PREUocmIpOworCQkJcmIgPSByYl9maXJz
dF9jYWNoZWQoJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQljb250aW51ZTsKKwkJfQorCisJCUdF
TV9CVUdfT04ocnEgIT0gdmUtPnJlcXVlc3QpOworCQlHRU1fQlVHX09OKHJxLT5lbmdpbmUgIT0g
JnZlLT5iYXNlKTsKKwkJR0VNX0JVR19PTihycS0+aHdfY29udGV4dCAhPSAmdmUtPmNvbnRleHQp
OworCisJCWlmIChycV9wcmlvKHJxKSA+PSBxdWV1ZV9wcmlvKGV4ZWNsaXN0cykpIHsKKwkJCWlm
ICghdmlydHVhbF9tYXRjaGVzKHZlLCBycSwgZW5naW5lKSkgeworCQkJCXNwaW5fdW5sb2NrKCZ2
ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJCQlyYiA9IHJiX25leHQocmIpOworCQkJCWNvbnRp
bnVlOworCQkJfQorCisJCQlpZiAobGFzdCAmJiAhY2FuX21lcmdlX3JxKGxhc3QsIHJxKSkgewor
CQkJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwkJCQlyZXR1cm47IC8q
IGxlYXZlIHRoaXMgcnEgZm9yIGFub3RoZXIgZW5naW5lICovCisJCQl9CisKKwkJCUdFTV9UUkFD
RSgiJXM6IHZpcnR1YWwgcnE9JWxseDolbGxkJXMsIG5ldyBlbmdpbmU/ICVzXG4iLAorCQkJCSAg
ZW5naW5lLT5uYW1lLAorCQkJCSAgcnEtPmZlbmNlLmNvbnRleHQsCisJCQkJICBycS0+ZmVuY2Uu
c2Vxbm8sCisJCQkJICBpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSA/ICIhIiA6CisJCQkJICBp
OTE1X3JlcXVlc3Rfc3RhcnRlZChycSkgPyAiKiIgOgorCQkJCSAgIiIsCisJCQkJICB5ZXNubyhl
bmdpbmUgIT0gdmUtPnNpYmxpbmdzWzBdKSk7CisKKwkJCXZlLT5yZXF1ZXN0ID0gTlVMTDsKKwkJ
CXZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50ID0gSU5UX01JTjsKKwkJCXJi
X2VyYXNlX2NhY2hlZChyYiwgJmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQlSQl9DTEVBUl9OT0RF
KHJiKTsKKworCQkJcnEtPmVuZ2luZSA9IGVuZ2luZTsKKworCQkJaWYgKGVuZ2luZSAhPSB2ZS0+
c2libGluZ3NbMF0pIHsKKwkJCQl1MzIgKnJlZ3MgPSB2ZS0+Y29udGV4dC5scmNfcmVnX3N0YXRl
OworCQkJCXVuc2lnbmVkIGludCBuOworCisJCQkJR0VNX0JVR19PTihSRUFEX09OQ0UodmUtPmNv
bnRleHQuYWN0aXZlKSk7CisJCQkJdmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cyhyZWdz
LCBlbmdpbmUpOworCisJCQkJaWYgKCFsaXN0X2VtcHR5KCZ2ZS0+Y29udGV4dC5zaWduYWxzKSkK
KwkJCQkJdmlydHVhbF94ZmVyX2JyZWFkY3J1bWJzKHZlLCBlbmdpbmUpOworCisJCQkJLyoKKwkJ
CQkgKiBNb3ZlIHRoZSBib3VuZCBlbmdpbmUgdG8gdGhlIHRvcCBvZiB0aGUgbGlzdAorCQkJCSAq
IGZvciBmdXR1cmUgZXhlY3V0aW9uLiBXZSB0aGVuIGtpY2sgdGhpcworCQkJCSAqIHRhc2tsZXQg
Zmlyc3QgYmVmb3JlIGNoZWNraW5nIG90aGVycywgc28gdGhhdAorCQkJCSAqIHdlIHByZWZlcmVu
dGlhbGx5IHJldXNlIHRoaXMgc2V0IG9mIGJvdW5kCisJCQkJICogcmVnaXN0ZXJzLgorCQkJCSAq
LworCQkJCWZvciAobiA9IDE7IG4gPCB2ZS0+bnVtX3NpYmxpbmdzOyBuKyspIHsKKwkJCQkJaWYg
KHZlLT5zaWJsaW5nc1tuXSA9PSBlbmdpbmUpIHsKKwkJCQkJCXN3YXAodmUtPnNpYmxpbmdzW25d
LAorCQkJCQkJICAgICB2ZS0+c2libGluZ3NbMF0pOworCQkJCQkJYnJlYWs7CisJCQkJCX0KKwkJ
CQl9CisKKwkJCQlHRU1fQlVHX09OKHZlLT5zaWJsaW5nc1swXSAhPSBlbmdpbmUpOworCQkJfQor
CisJCQlfX2k5MTVfcmVxdWVzdF9zdWJtaXQocnEpOworCQkJdHJhY2VfaTkxNV9yZXF1ZXN0X2lu
KHJxLCBwb3J0X2luZGV4KHBvcnQsIGV4ZWNsaXN0cykpOworCQkJc3VibWl0ID0gdHJ1ZTsKKwkJ
CWxhc3QgPSBycTsKKwkJfQorCisJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2Nr
KTsKKwkJYnJlYWs7CisJfQorCiAJd2hpbGUgKChyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xp
c3RzLT5xdWV1ZSkpKSB7CiAJCXN0cnVjdCBpOTE1X3ByaW9saXN0ICpwID0gdG9fcHJpb2xpc3Qo
cmIpOwogCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOwpAQCAtMTgzOCw2ICsyMDk5LDI1
IEBAIHN0YXRpYyB2b2lkIHJlc2V0X2NzYl9wb2ludGVycyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqZXhlY2xpc3RzKQogCQkJICAgICAgICZleGVjbGlzdHMtPmNzYl9zdGF0dXNbcmVz
ZXRfdmFsdWVdKTsKIH0KIAorc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmFjdGl2ZV9yZXF1
ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQoreworCWNvbnN0IHN0cnVjdCBsaXN0X2hlYWQg
KiBjb25zdCBsaXN0ID0gJnJxLT5lbmdpbmUtPnRpbWVsaW5lLnJlcXVlc3RzOworCWNvbnN0IHN0
cnVjdCBpbnRlbF9jb250ZXh0ICogY29uc3QgY29udGV4dCA9IHJxLT5od19jb250ZXh0OworCXN0
cnVjdCBpOTE1X3JlcXVlc3QgKmFjdGl2ZSA9IE5VTEw7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5
X2Zyb21fcmV2ZXJzZShycSwgbGlzdCwgbGluaykgeworCQlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBs
ZXRlZChycSkpCisJCQlicmVhazsKKworCQlpZiAocnEtPmh3X2NvbnRleHQgIT0gY29udGV4dCkK
KwkJCWJyZWFrOworCisJCWFjdGl2ZSA9IHJxOworCX0KKworCXJldHVybiBhY3RpdmU7Cit9CisK
IHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwgYm9vbCBzdGFsbGVkKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICog
Y29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwpAQCAtMTg1OCw3ICsyMTM4LDgg
QEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLCBib29sIHN0YWxsZWQpCiAJaWYgKCFwb3J0X2lzc2V0KGV4ZWNsaXN0cy0+cG9ydCkp
CiAJCWdvdG8gb3V0X2NsZWFyOwogCi0JY2UgPSBwb3J0X3JlcXVlc3QoZXhlY2xpc3RzLT5wb3J0
KS0+aHdfY29udGV4dDsKKwlycSA9IHBvcnRfcmVxdWVzdChleGVjbGlzdHMtPnBvcnQpOworCWNl
ID0gcnEtPmh3X2NvbnRleHQ7CiAKIAkvKgogCSAqIENhdGNoIHVwIHdpdGggYW55IG1pc3NlZCBj
b250ZXh0LXN3aXRjaCBpbnRlcnJ1cHRzLgpAQCAtMTg3MSwxNiArMjE1MiwxMCBAQCBzdGF0aWMg
dm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJv
b2wgc3RhbGxlZCkKIAkgKi8KIAlleGVjbGlzdHNfY2FuY2VsX3BvcnRfcmVxdWVzdHMoZXhlY2xp
c3RzKTsKIAotCS8qIFB1c2ggYmFjayBhbnkgaW5jb21wbGV0ZSByZXF1ZXN0cyBmb3IgcmVwbGF5
IGFmdGVyIHRoZSByZXNldC4gKi8KLQlycSA9IF9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMo
ZW5naW5lKTsKKwlycSA9IGFjdGl2ZV9yZXF1ZXN0KHJxKTsKIAlpZiAoIXJxKQogCQlnb3RvIG91
dF9yZXBsYXk7CiAKLQlpZiAocnEtPmh3X2NvbnRleHQgIT0gY2UpIHsgLyogY2F1Z2h0IGp1c3Qg
YmVmb3JlIGEgQ1MgZXZlbnQgKi8KLQkJcnEgPSBOVUxMOwotCQlnb3RvIG91dF9yZXBsYXk7Ci0J
fQotCiAJLyoKIAkgKiBJZiB0aGlzIHJlcXVlc3QgaGFzbid0IHN0YXJ0ZWQgeWV0LCBlLmcuIGl0
IGlzIHdhaXRpbmcgb24gYQogCSAqIHNlbWFwaG9yZSwgd2UgbmVlZCB0byBhdm9pZCBza2lwcGlu
ZyB0aGUgcmVxdWVzdCBvciBlbHNlIHdlCkBAIC0xOTI3LDEzICsyMjAyLDE2IEBAIHN0YXRpYyB2
b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9v
bCBzdGFsbGVkKQogCX0KIAlleGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUocmVncywgY2UsIGVuZ2lu
ZSwgY2UtPnJpbmcpOwogCi0JLyogUmVydW4gdGhlIHJlcXVlc3Q7IGl0cyBwYXlsb2FkIGhhcyBi
ZWVuIG5ldXRlcmVkIChpZiBndWlsdHkpLiAqLwogb3V0X3JlcGxheToKKwkvKiBSZXJ1biB0aGUg
cmVxdWVzdDsgaXRzIHBheWxvYWQgaGFzIGJlZW4gbmV1dGVyZWQgKGlmIGd1aWx0eSkuICovCiAJ
Y2UtPnJpbmctPmhlYWQgPQogCQlycSA/IGludGVsX3Jpbmdfd3JhcChjZS0+cmluZywgcnEtPmhl
YWQpIDogY2UtPnJpbmctPnRhaWw7CiAJaW50ZWxfcmluZ191cGRhdGVfc3BhY2UoY2UtPnJpbmcp
OwogCV9fZXhlY2xpc3RzX3VwZGF0ZV9yZWdfc3RhdGUoY2UsIGVuZ2luZSk7CiAKKwkvKiBQdXNo
IGJhY2sgYW55IGluY29tcGxldGUgcmVxdWVzdHMgZm9yIHJlcGxheSBhZnRlciB0aGUgcmVzZXQu
ICovCisJX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhlbmdpbmUpOworCiBvdXRfY2xlYXI6
CiAJZXhlY2xpc3RzX2NsZWFyX2FsbF9hY3RpdmUoZXhlY2xpc3RzKTsKIH0KQEAgLTIwMDcsNiAr
MjI4NSwyNiBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfY2FuY2VsX3JlcXVlc3RzKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJaTkxNV9wcmlvbGlzdF9mcmVlKHApOwogCX0KIAor
CS8qIENhbmNlbCBhbGwgYXR0YWNoZWQgdmlydHVhbCBlbmdpbmVzICovCisJd2hpbGUgKChyYiA9
IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT52aXJ0dWFsKSkpIHsKKwkJc3RydWN0IHZpcnR1
YWxfZW5naW5lICp2ZSA9CisJCQlyYl9lbnRyeShyYiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2lu
ZS0+aWRdLnJiKTsKKworCQlyYl9lcmFzZV9jYWNoZWQocmIsICZleGVjbGlzdHMtPnZpcnR1YWwp
OworCQlSQl9DTEVBUl9OT0RFKHJiKTsKKworCQlzcGluX2xvY2soJnZlLT5iYXNlLnRpbWVsaW5l
LmxvY2spOworCQlpZiAodmUtPnJlcXVlc3QpIHsKKwkJCXZlLT5yZXF1ZXN0LT5lbmdpbmUgPSBl
bmdpbmU7CisJCQlfX2k5MTVfcmVxdWVzdF9zdWJtaXQodmUtPnJlcXVlc3QpOworCQkJZG1hX2Zl
bmNlX3NldF9lcnJvcigmdmUtPnJlcXVlc3QtPmZlbmNlLCAtRUlPKTsKKwkJCWk5MTVfcmVxdWVz
dF9tYXJrX2NvbXBsZXRlKHZlLT5yZXF1ZXN0KTsKKwkJCXZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1
ZV9wcmlvcml0eV9oaW50ID0gSU5UX01JTjsKKwkJCXZlLT5yZXF1ZXN0ID0gTlVMTDsKKwkJfQor
CQlzcGluX3VubG9jaygmdmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJfQorCiAJLyogUmVtYWlu
aW5nIF91bnJlYWR5XyByZXF1ZXN0cyB3aWxsIGJlIG5vcCdlZCB3aGVuIHN1Ym1pdHRlZCAqLwog
CiAJZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50ID0gSU5UX01JTjsKQEAgLTI0OTEsMTIg
KzI3ODksMTUgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUzMiAqcmVn
cywKIAlib29sIHJjcyA9IGVuZ2luZS0+Y2xhc3MgPT0gUkVOREVSX0NMQVNTOwogCXUzMiBiYXNl
ID0gZW5naW5lLT5tbWlvX2Jhc2U7CiAKLQkvKiBBIGNvbnRleHQgaXMgYWN0dWFsbHkgYSBiaWcg
YmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAorCS8qCisJICogQSBjb250ZXh0IGlzIGFjdHVhbGx5
IGEgYmlnIGJhdGNoIGJ1ZmZlciB3aXRoIHNldmVyYWwKIAkgKiBNSV9MT0FEX1JFR0lTVEVSX0lN
TSBjb21tYW5kcyBmb2xsb3dlZCBieSAocmVnLCB2YWx1ZSkgcGFpcnMuIFRoZQogCSAqIHZhbHVl
cyB3ZSBhcmUgc2V0dGluZyBoZXJlIGFyZSBvbmx5IGZvciB0aGUgZmlyc3QgY29udGV4dCByZXN0
b3JlOgogCSAqIG9uIGEgc3Vic2VxdWVudCBzYXZlLCB0aGUgR1BVIHdpbGwgcmVjcmVhdGUgdGhp
cyBiYXRjaGJ1ZmZlciB3aXRoIG5ldwogCSAqIHZhbHVlcyAoaW5jbHVkaW5nIGFsbCB0aGUgbWlz
c2luZyBNSV9MT0FEX1JFR0lTVEVSX0lNTSBjb21tYW5kcyB0aGF0CiAJICogd2UgYXJlIG5vdCBp
bml0aWFsaXppbmcgaGVyZSkuCisJICoKKwkgKiBNdXN0IGtlZXAgY29uc2lzdGVudCB3aXRoIHZp
cnR1YWxfdXBkYXRlX3JlZ2lzdGVyX29mZnNldHMoKS4KIAkgKi8KIAlyZWdzW0NUWF9MUklfSEVB
REVSXzBdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0ocmNzID8gMTQgOiAxMSkgfAogCQkJCSBNSV9M
UklfRk9SQ0VfUE9TVEVEOwpAQCAtMjcxNSw2ICszMDE2LDMyMCBAQCBzdGF0aWMgaW50IGV4ZWNs
aXN0c19jb250ZXh0X2RlZmVycmVkX2FsbG9jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAly
ZXR1cm4gcmV0OwogfQogCitzdGF0aWMgdm9pZCB2aXJ0dWFsX2NvbnRleHRfZGVzdHJveShzdHJ1
Y3Qga3JlZiAqa3JlZikKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0KKwkJY29udGFp
bmVyX29mKGtyZWYsIHR5cGVvZigqdmUpLCBjb250ZXh0LnJlZik7CisJdW5zaWduZWQgaW50IG47
CisKKwlHRU1fQlVHX09OKHZlLT5yZXF1ZXN0KTsKKwlHRU1fQlVHX09OKHZlLT5jb250ZXh0LmFj
dGl2ZSk7CisKKwlmb3IgKG4gPSAwOyBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKSB7CisJCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmcgPSB2ZS0+c2libGluZ3Nbbl07CisJCXN0cnVj
dCByYl9ub2RlICpub2RlID0gJnZlLT5ub2Rlc1tzaWJsaW5nLT5pZF0ucmI7CisKKwkJaWYgKFJC
X0VNUFRZX05PREUobm9kZSkpCisJCQljb250aW51ZTsKKworCQlzcGluX2xvY2tfaXJxKCZzaWJs
aW5nLT50aW1lbGluZS5sb2NrKTsKKworCQkvKiBEZXRhY2htZW50IGlzIGxhemlseSBwZXJmb3Jt
ZWQgaW4gdGhlIGV4ZWNsaXN0cyB0YXNrbGV0ICovCisJCWlmICghUkJfRU1QVFlfTk9ERShub2Rl
KSkKKwkJCXJiX2VyYXNlX2NhY2hlZChub2RlLCAmc2libGluZy0+ZXhlY2xpc3RzLnZpcnR1YWwp
OworCisJCXNwaW5fdW5sb2NrX2lycSgmc2libGluZy0+dGltZWxpbmUubG9jayk7CisJfQorCUdF
TV9CVUdfT04oX190YXNrbGV0X2lzX3NjaGVkdWxlZCgmdmUtPmJhc2UuZXhlY2xpc3RzLnRhc2ts
ZXQpKTsKKworCWlmICh2ZS0+Y29udGV4dC5zdGF0ZSkKKwkJX19leGVjbGlzdHNfY29udGV4dF9m
aW5pKCZ2ZS0+Y29udGV4dCk7CisKKwlpOTE1X3RpbWVsaW5lX2ZpbmkoJnZlLT5iYXNlLnRpbWVs
aW5lKTsKKwlrZnJlZSh2ZSk7Cit9CisKK3N0YXRpYyB2b2lkIHZpcnR1YWxfZW5naW5lX2luaXRp
YWxfaGludChzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlKQoreworCWludCBzd3A7CisKKwkvKgor
CSAqIFBpY2sgYSByYW5kb20gc2libGluZyBvbiBzdGFydGluZyB0byBoZWxwIHNwcmVhZCB0aGUg
bG9hZCBhcm91bmQuCisJICoKKwkgKiBOZXcgY29udGV4dHMgYXJlIHR5cGljYWxseSBjcmVhdGVk
IHdpdGggZXhhY3RseSB0aGUgc2FtZSBvcmRlcgorCSAqIG9mIHNpYmxpbmdzLCBhbmQgb2Z0ZW4g
c3RhcnRlZCBpbiBiYXRjaGVzLiBEdWUgdG8gdGhlIHdheSB3ZSBpdGVyYXRlCisJICogdGhlIGFy
cmF5IG9mIHNpYmxpbmcgd2hlbiBzdWJtaXR0aW5nIHJlcXVlc3RzLCBzaWJsaW5nWzBdIGlzCisJ
ICogcHJpb3JpdGlzZWQgZm9yIGRlcXVldWluZy4gSWYgd2UgbWFrZSBzdXJlIHRoYXQgc2libGlu
Z1swXSBpcyBmYWlybHkKKwkgKiByYW5kb21pc2VkIGFjcm9zcyB0aGUgc3lzdGVtLCB3ZSBhbHNv
IGhlbHAgc3ByZWFkIHRoZSBsb2FkIGJ5IHRoZQorCSAqIGZpcnN0IGVuZ2luZSB3ZSBpbnNwZWN0
IGJlaW5nIGRpZmZlcmVudCBlYWNoIHRpbWUuCisJICoKKwkgKiBOQiBUaGlzIGRvZXMgbm90IGZv
cmNlIHVzIHRvIGV4ZWN1dGUgb24gdGhpcyBlbmdpbmUsIGl0IHdpbGwganVzdAorCSAqIHR5cGlj
YWxseSBiZSB0aGUgZmlyc3Qgd2UgaW5zcGVjdCBmb3Igc3VibWlzc2lvbi4KKwkgKi8KKwlzd3Ag
PSBwcmFuZG9tX3UzMl9tYXgodmUtPm51bV9zaWJsaW5ncyk7CisJaWYgKCFzd3ApCisJCXJldHVy
bjsKKworCXN3YXAodmUtPnNpYmxpbmdzW3N3cF0sIHZlLT5zaWJsaW5nc1swXSk7CisJdmlydHVh
bF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cyh2ZS0+Y29udGV4dC5scmNfcmVnX3N0YXRlLAorCQkJ
CQl2ZS0+c2libGluZ3NbMF0pOworfQorCitzdGF0aWMgaW50IHZpcnR1YWxfY29udGV4dF9waW4o
c3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUg
PSBjb250YWluZXJfb2YoY2UsIHR5cGVvZigqdmUpLCBjb250ZXh0KTsKKwlpbnQgZXJyOworCisJ
LyogTm90ZTogd2UgbXVzdCB1c2UgYSByZWFsIGVuZ2luZSBjbGFzcyBmb3Igc2V0dGluZyB1cCBy
ZWcgc3RhdGUgKi8KKwllcnIgPSBfX2V4ZWNsaXN0c19jb250ZXh0X3BpbihjZSwgdmUtPnNpYmxp
bmdzWzBdKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJdmlydHVhbF9lbmdpbmVfaW5p
dGlhbF9oaW50KHZlKTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgdmlydHVhbF9jb250
ZXh0X2VudGVyKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgdmlydHVhbF9l
bmdpbmUgKnZlID0gY29udGFpbmVyX29mKGNlLCB0eXBlb2YoKnZlKSwgY29udGV4dCk7CisJdW5z
aWduZWQgaW50IG47CisKKwlmb3IgKG4gPSAwOyBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKQor
CQlpbnRlbF9lbmdpbmVfcG1fZ2V0KHZlLT5zaWJsaW5nc1tuXSk7Cit9CisKK3N0YXRpYyB2b2lk
IHZpcnR1YWxfY29udGV4dF9leGl0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1
Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0gY29udGFpbmVyX29mKGNlLCB0eXBlb2YoKnZlKSwgY29u
dGV4dCk7CisJdW5zaWduZWQgaW50IG47CisKKwljZS0+c2F0dXJhdGVkID0gMDsKKwlmb3IgKG4g
PSAwOyBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKQorCQlpbnRlbF9lbmdpbmVfcG1fcHV0KHZl
LT5zaWJsaW5nc1tuXSk7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dF9v
cHMgdmlydHVhbF9jb250ZXh0X29wcyA9IHsKKwkucGluID0gdmlydHVhbF9jb250ZXh0X3BpbiwK
KwkudW5waW4gPSBleGVjbGlzdHNfY29udGV4dF91bnBpbiwKKworCS5lbnRlciA9IHZpcnR1YWxf
Y29udGV4dF9lbnRlciwKKwkuZXhpdCA9IHZpcnR1YWxfY29udGV4dF9leGl0LAorCisJLmRlc3Ry
b3kgPSB2aXJ0dWFsX2NvbnRleHRfZGVzdHJveSwKK307CisKK3N0YXRpYyB2b2lkIHZpcnR1YWxf
c3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKK3sKKwlzdHJ1Y3QgdmlydHVh
bF9lbmdpbmUgKiBjb25zdCB2ZSA9IChzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKilkYXRhOworCWNv
bnN0IGludCBwcmlvID0gdmUtPmJhc2UuZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQ7CisJ
dW5zaWduZWQgaW50IG47CisKKwlsb2NhbF9pcnFfZGlzYWJsZSgpOworCWZvciAobiA9IDA7IFJF
QURfT05DRSh2ZS0+cmVxdWVzdCkgJiYgbiA8IHZlLT5udW1fc2libGluZ3M7IG4rKykgeworCQlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpzaWJsaW5nID0gdmUtPnNpYmxpbmdzW25dOworCQlzdHJ1
Y3QgdmVfbm9kZSAqIGNvbnN0IG5vZGUgPSAmdmUtPm5vZGVzW3NpYmxpbmctPmlkXTsKKwkJc3Ry
dWN0IHJiX25vZGUgKipwYXJlbnQsICpyYjsKKwkJYm9vbCBmaXJzdDsKKworCQlzcGluX2xvY2so
JnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCisJCWlmICghUkJfRU1QVFlfTk9ERSgmbm9kZS0+
cmIpKSB7CisJCQkvKgorCQkJICogQ2hlYXQgYW5kIGF2b2lkIHJlYmFsYW5jaW5nIHRoZSB0cmVl
IGlmIHdlIGNhbgorCQkJICogcmV1c2UgdGhpcyBub2RlIGluIHNpdHUuCisJCQkgKi8KKwkJCWZp
cnN0ID0gcmJfZmlyc3RfY2FjaGVkKCZzaWJsaW5nLT5leGVjbGlzdHMudmlydHVhbCkgPT0KKwkJ
CQkmbm9kZS0+cmI7CisJCQlpZiAocHJpbyA9PSBub2RlLT5wcmlvIHx8IChwcmlvID4gbm9kZS0+
cHJpbyAmJiBmaXJzdCkpCisJCQkJZ290byBzdWJtaXRfZW5naW5lOworCisJCQlyYl9lcmFzZV9j
YWNoZWQoJm5vZGUtPnJiLCAmc2libGluZy0+ZXhlY2xpc3RzLnZpcnR1YWwpOworCQl9CisKKwkJ
cmIgPSBOVUxMOworCQlmaXJzdCA9IHRydWU7CisJCXBhcmVudCA9ICZzaWJsaW5nLT5leGVjbGlz
dHMudmlydHVhbC5yYl9yb290LnJiX25vZGU7CisJCXdoaWxlICgqcGFyZW50KSB7CisJCQlzdHJ1
Y3QgdmVfbm9kZSAqb3RoZXI7CisKKwkJCXJiID0gKnBhcmVudDsKKwkJCW90aGVyID0gcmJfZW50
cnkocmIsIHR5cGVvZigqb3RoZXIpLCByYik7CisJCQlpZiAocHJpbyA+IG90aGVyLT5wcmlvKSB7
CisJCQkJcGFyZW50ID0gJnJiLT5yYl9sZWZ0OworCQkJfSBlbHNlIHsKKwkJCQlwYXJlbnQgPSAm
cmItPnJiX3JpZ2h0OworCQkJCWZpcnN0ID0gZmFsc2U7CisJCQl9CisJCX0KKworCQlyYl9saW5r
X25vZGUoJm5vZGUtPnJiLCByYiwgcGFyZW50KTsKKwkJcmJfaW5zZXJ0X2NvbG9yX2NhY2hlZCgm
bm9kZS0+cmIsCisJCQkJICAgICAgICZzaWJsaW5nLT5leGVjbGlzdHMudmlydHVhbCwKKwkJCQkg
ICAgICAgZmlyc3QpOworCitzdWJtaXRfZW5naW5lOgorCQlHRU1fQlVHX09OKFJCX0VNUFRZX05P
REUoJm5vZGUtPnJiKSk7CisJCW5vZGUtPnByaW8gPSBwcmlvOworCQlpZiAoZmlyc3QgJiYgcHJp
byA+IHNpYmxpbmctPmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50KSB7CisJCQlzaWJsaW5n
LT5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IHByaW87CisJCQl0YXNrbGV0X2hpX3Nj
aGVkdWxlKCZzaWJsaW5nLT5leGVjbGlzdHMudGFza2xldCk7CisJCX0KKworCQlzcGluX3VubG9j
aygmc2libGluZy0+dGltZWxpbmUubG9jayk7CisJfQorCWxvY2FsX2lycV9lbmFibGUoKTsKK30K
Kworc3RhdGljIHZvaWQgdmlydHVhbF9zdWJtaXRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0gdG9fdmlydHVhbF9lbmdpbmUo
cnEtPmVuZ2luZSk7CisKKwlHRU1fVFJBQ0UoIiVzOiBycT0lbGx4OiVsbGRcbiIsCisJCSAgdmUt
PmJhc2UubmFtZSwKKwkJICBycS0+ZmVuY2UuY29udGV4dCwKKwkJICBycS0+ZmVuY2Uuc2Vxbm8p
OworCisJR0VNX0JVR19PTih2ZS0+YmFzZS5zdWJtaXRfcmVxdWVzdCAhPSB2aXJ0dWFsX3N1Ym1p
dF9yZXF1ZXN0KTsKKworCUdFTV9CVUdfT04odmUtPnJlcXVlc3QpOworCXZlLT5iYXNlLmV4ZWNs
aXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50ID0gcnFfcHJpbyhycSk7CisJV1JJVEVfT05DRSh2ZS0+
cmVxdWVzdCwgcnEpOworCisJdGFza2xldF9zY2hlZHVsZSgmdmUtPmJhc2UuZXhlY2xpc3RzLnRh
c2tsZXQpOworfQorCitzdHJ1Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9leGVjbGlzdHNfY3Jl
YXRlX3ZpcnR1YWwoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKKwkJCSAgICAgICBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCisJCQkgICAgICAgdW5zaWduZWQgaW50IGNv
dW50KQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmU7CisJdW5zaWduZWQgaW50IG47CisJ
aW50IGVycjsKKworCWlmIChjb3VudCA9PSAwKQorCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsK
KworCWlmIChjb3VudCA9PSAxKQorCQlyZXR1cm4gaW50ZWxfY29udGV4dF9jcmVhdGUoY3R4LCBz
aWJsaW5nc1swXSk7CisKKwl2ZSA9IGt6YWxsb2Moc3RydWN0X3NpemUodmUsIHNpYmxpbmdzLCBj
b3VudCksIEdGUF9LRVJORUwpOworCWlmICghdmUpCisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0p
OworCisJdmUtPmJhc2UuaTkxNSA9IGN0eC0+aTkxNTsKKwl2ZS0+YmFzZS5pZCA9IC0xOworCXZl
LT5iYXNlLmNsYXNzID0gT1RIRVJfQ0xBU1M7CisJdmUtPmJhc2UudWFiaV9jbGFzcyA9IEk5MTVf
RU5HSU5FX0NMQVNTX0lOVkFMSUQ7CisJdmUtPmJhc2UuaW5zdGFuY2UgPSBJOTE1X0VOR0lORV9D
TEFTU19JTlZBTElEX1ZJUlRVQUw7CisJdmUtPmJhc2UuZmxhZ3MgPSBJOTE1X0VOR0lORV9JU19W
SVJUVUFMOworCisJc25wcmludGYodmUtPmJhc2UubmFtZSwgc2l6ZW9mKHZlLT5iYXNlLm5hbWUp
LCAidmlydHVhbCIpOworCisJZXJyID0gaTkxNV90aW1lbGluZV9pbml0KGN0eC0+aTkxNSwgJnZl
LT5iYXNlLnRpbWVsaW5lLCBOVUxMKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9wdXQ7CisJaTkx
NV90aW1lbGluZV9zZXRfc3ViY2xhc3MoJnZlLT5iYXNlLnRpbWVsaW5lLCBUSU1FTElORV9WSVJU
VUFMKTsKKworCWludGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cygmdmUtPmJhc2UpOworCisJdmUt
PmJhc2UuY29wcyA9ICZ2aXJ0dWFsX2NvbnRleHRfb3BzOworCXZlLT5iYXNlLnJlcXVlc3RfYWxs
b2MgPSBleGVjbGlzdHNfcmVxdWVzdF9hbGxvYzsKKworCXZlLT5iYXNlLnNjaGVkdWxlID0gaTkx
NV9zY2hlZHVsZTsKKwl2ZS0+YmFzZS5zdWJtaXRfcmVxdWVzdCA9IHZpcnR1YWxfc3VibWl0X3Jl
cXVlc3Q7CisKKwl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9N
SU47CisJdGFza2xldF9pbml0KCZ2ZS0+YmFzZS5leGVjbGlzdHMudGFza2xldCwKKwkJICAgICB2
aXJ0dWFsX3N1Ym1pc3Npb25fdGFza2xldCwKKwkJICAgICAodW5zaWduZWQgbG9uZyl2ZSk7CisK
KwlpbnRlbF9jb250ZXh0X2luaXQoJnZlLT5jb250ZXh0LCBjdHgsICZ2ZS0+YmFzZSk7CisKKwlm
b3IgKG4gPSAwOyBuIDwgY291bnQ7IG4rKykgeworCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpz
aWJsaW5nID0gc2libGluZ3Nbbl07CisKKwkJR0VNX0JVR19PTighaXNfcG93ZXJfb2ZfMihzaWJs
aW5nLT5tYXNrKSk7CisJCWlmIChzaWJsaW5nLT5tYXNrICYgdmUtPmJhc2UubWFzaykgeworCQkJ
RFJNX0RFQlVHKCJkdXBsaWNhdGUgJXMgZW50cnkgaW4gbG9hZCBiYWxhbmNlclxuIiwKKwkJCQkg
IHNpYmxpbmctPm5hbWUpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gZXJyX3B1dDsKKwkJ
fQorCisJCS8qCisJCSAqIFRoZSB2aXJ0dWFsIGVuZ2luZSBpbXBsZW1lbnRhdGlvbiBpcyB0aWdo
dGx5IGNvdXBsZWQgdG8KKwkJICogdGhlIGV4ZWNsaXN0cyBiYWNrZW5kIC0tIHdlIHB1c2ggb3V0
IHJlcXVlc3QgZGlyZWN0bHkKKwkJICogaW50byBhIHRyZWUgaW5zaWRlIGVhY2ggcGh5c2ljYWwg
ZW5naW5lLiBXZSBjb3VsZCBzdXBwb3J0CisJCSAqIGxheWVyaW5nIGlmIHdlIGhhbmRsZSBjbG9u
aW5nIG9mIHRoZSByZXF1ZXN0cyBhbmQKKwkJICogc3VibWl0dGluZyBhIGNvcHkgaW50byBlYWNo
IGJhY2tlbmQuCisJCSAqLworCQlpZiAoc2libGluZy0+ZXhlY2xpc3RzLnRhc2tsZXQuZnVuYyAh
PQorCQkgICAgZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldCkgeworCQkJZXJyID0gLUVOT0RF
VjsKKwkJCWdvdG8gZXJyX3B1dDsKKwkJfQorCisJCUdFTV9CVUdfT04oUkJfRU1QVFlfTk9ERSgm
dmUtPm5vZGVzW3NpYmxpbmctPmlkXS5yYikpOworCQlSQl9DTEVBUl9OT0RFKCZ2ZS0+bm9kZXNb
c2libGluZy0+aWRdLnJiKTsKKworCQl2ZS0+c2libGluZ3NbdmUtPm51bV9zaWJsaW5ncysrXSA9
IHNpYmxpbmc7CisJCXZlLT5iYXNlLm1hc2sgfD0gc2libGluZy0+bWFzazsKKworCQkvKgorCQkg
KiBBbGwgcGh5c2ljYWwgZW5naW5lcyBtdXN0IGJlIGNvbXBhdGlibGUgZm9yIHRoZWlyIGVtaXNz
aW9uCisJCSAqIGZ1bmN0aW9ucyAoYXMgd2UgYnVpbGQgdGhlIGluc3RydWN0aW9ucyBkdXJpbmcg
cmVxdWVzdAorCQkgKiBjb25zdHJ1Y3Rpb24gYW5kIGRvIG5vdCBhbHRlciB0aGVtIGJlZm9yZSBz
dWJtaXNzaW9uCisJCSAqIG9uIHRoZSBwaHlzaWNhbCBlbmdpbmUpLiBXZSB1c2UgdGhlIGVuZ2lu
ZSBjbGFzcyBhcyBhIGd1aWRlCisJCSAqIGhlcmUsIGFsdGhvdWdoIHRoYXQgY291bGQgYmUgcmVm
aW5lZC4KKwkJICovCisJCWlmICh2ZS0+YmFzZS5jbGFzcyAhPSBPVEhFUl9DTEFTUykgeworCQkJ
aWYgKHZlLT5iYXNlLmNsYXNzICE9IHNpYmxpbmctPmNsYXNzKSB7CisJCQkJRFJNX0RFQlVHKCJp
bnZhbGlkIG1peGluZyBvZiBlbmdpbmUgY2xhc3MsIHNpYmxpbmcgJWQsIGFscmVhZHkgJWRcbiIs
CisJCQkJCSAgc2libGluZy0+Y2xhc3MsIHZlLT5iYXNlLmNsYXNzKTsKKwkJCQllcnIgPSAtRUlO
VkFMOworCQkJCWdvdG8gZXJyX3B1dDsKKwkJCX0KKwkJCWNvbnRpbnVlOworCQl9CisKKwkJdmUt
PmJhc2UuY2xhc3MgPSBzaWJsaW5nLT5jbGFzczsKKwkJdmUtPmJhc2UudWFiaV9jbGFzcyA9IHNp
YmxpbmctPnVhYmlfY2xhc3M7CisJCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVvZih2ZS0+
YmFzZS5uYW1lKSwKKwkJCSAidiVkeCVkIiwgdmUtPmJhc2UuY2xhc3MsIGNvdW50KTsKKwkJdmUt
PmJhc2UuY29udGV4dF9zaXplID0gc2libGluZy0+Y29udGV4dF9zaXplOworCisJCXZlLT5iYXNl
LmVtaXRfYmJfc3RhcnQgPSBzaWJsaW5nLT5lbWl0X2JiX3N0YXJ0OworCQl2ZS0+YmFzZS5lbWl0
X2ZsdXNoID0gc2libGluZy0+ZW1pdF9mbHVzaDsKKwkJdmUtPmJhc2UuZW1pdF9pbml0X2JyZWFk
Y3J1bWIgPSBzaWJsaW5nLT5lbWl0X2luaXRfYnJlYWRjcnVtYjsKKwkJdmUtPmJhc2UuZW1pdF9m
aW5pX2JyZWFkY3J1bWIgPSBzaWJsaW5nLT5lbWl0X2ZpbmlfYnJlYWRjcnVtYjsKKwkJdmUtPmJh
c2UuZW1pdF9maW5pX2JyZWFkY3J1bWJfZHcgPQorCQkJc2libGluZy0+ZW1pdF9maW5pX2JyZWFk
Y3J1bWJfZHc7CisJfQorCisJcmV0dXJuICZ2ZS0+Y29udGV4dDsKKworZXJyX3B1dDoKKwlpbnRl
bF9jb250ZXh0X3B1dCgmdmUtPmNvbnRleHQpOworCXJldHVybiBFUlJfUFRSKGVycik7Cit9CisK
K3N0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2V4ZWNsaXN0c19jbG9uZV92aXJ0dWFsKHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCQkgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICpzcmMpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICpzZSA9IHRvX3ZpcnR1YWxfZW5n
aW5lKHNyYyk7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmRzdDsKKworCWRzdCA9IGludGVsX2V4
ZWNsaXN0c19jcmVhdGVfdmlydHVhbChjdHgsCisJCQkJCSAgICAgc2UtPnNpYmxpbmdzLAorCQkJ
CQkgICAgIHNlLT5udW1fc2libGluZ3MpOworCWlmIChJU19FUlIoZHN0KSkKKwkJcmV0dXJuIGRz
dDsKKworCXJldHVybiBkc3Q7Cit9CisKIHZvaWQgaW50ZWxfZXhlY2xpc3RzX3Nob3dfcmVxdWVz
dHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJCSAgIHN0cnVjdCBkcm1fcHJp
bnRlciAqbSwKIAkJCQkgICB2b2lkICgqc2hvd19yZXF1ZXN0KShzdHJ1Y3QgZHJtX3ByaW50ZXIg
Km0sCkBAIC0yNzcyLDYgKzMzODcsMjkgQEAgdm9pZCBpbnRlbF9leGVjbGlzdHNfc2hvd19yZXF1
ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCXNob3dfcmVxdWVzdChtLCBs
YXN0LCAiXHRcdFEgIik7CiAJfQogCisJbGFzdCA9IE5VTEw7CisJY291bnQgPSAwOworCWZvciAo
cmIgPSByYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+dmlydHVhbCk7IHJiOyByYiA9IHJiX25l
eHQocmIpKSB7CisJCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIs
IHR5cGVvZigqdmUpLCBub2Rlc1tlbmdpbmUtPmlkXS5yYik7CisJCXN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKworCQlpZiAocnEpIHsKKwkJCWlmIChj
b3VudCsrIDwgbWF4IC0gMSkKKwkJCQlzaG93X3JlcXVlc3QobSwgcnEsICJcdFx0ViAiKTsKKwkJ
CWVsc2UKKwkJCQlsYXN0ID0gcnE7CisJCX0KKwl9CisJaWYgKGxhc3QpIHsKKwkJaWYgKGNvdW50
ID4gbWF4KSB7CisJCQlkcm1fcHJpbnRmKG0sCisJCQkJICAgIlx0XHQuLi5za2lwcGluZyAlZCB2
aXJ0dWFsIHJlcXVlc3RzLi4uXG4iLAorCQkJCSAgIGNvdW50IC0gbWF4KTsKKwkJfQorCQlzaG93
X3JlcXVlc3QobSwgbGFzdCwgIlx0XHRWICIpOworCX0KKwogCXNwaW5fdW5sb2NrX2lycXJlc3Rv
cmUoJmVuZ2luZS0+dGltZWxpbmUubG9jaywgZmxhZ3MpOwogfQogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2xyYy5oCmluZGV4IGEwZGM5MDdhNzI0OS4uNTUzMDYwNjA1MmU1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9scmMuaApAQCAtMTE0LDQgKzExNCwxMyBAQCB2b2lkIGludGVsX2V4
ZWNsaXN0c19zaG93X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJ
CQkJCQljb25zdCBjaGFyICpwcmVmaXgpLAogCQkJCSAgIHVuc2lnbmVkIGludCBtYXgpOwogCitz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc3Ry
dWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKKwkJCSAgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICoqc2libGluZ3MsCisJCQkgICAgICAgdW5zaWduZWQgaW50IGNvdW50KTsKKworc3RydWN0
IGludGVsX2NvbnRleHQgKgoraW50ZWxfZXhlY2xpc3RzX2Nsb25lX3ZpcnR1YWwoc3RydWN0IGk5
MTVfZ2VtX2NvbnRleHQgKmN0eCwKKwkJCSAgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNy
Yyk7CisKICNlbmRpZiAvKiBfSU5URUxfTFJDX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X2xyYy5jCmluZGV4IDViM2Q4ZTMzZjFjZi4uZjg4MDI3MWZiOWJhIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwpAQCAtMTMxMCw2ICsxMzEwLDE4NSBAQCBzdGF0
aWMgaW50IGxpdmVfcHJlZW1wdF9zbW9rZSh2b2lkICphcmcpCiAJcmV0dXJuIGVycjsKIH0KIAor
c3RhdGljIGludCBub3BfdmlydHVhbF9lbmdpbmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsCisJCQkgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCisJCQkgICAg
ICB1bnNpZ25lZCBpbnQgbnNpYmxpbmcsCisJCQkgICAgICB1bnNpZ25lZCBpbnQgbmN0eCwKKwkJ
CSAgICAgIHVuc2lnbmVkIGludCBmbGFncykKKyNkZWZpbmUgQ0hBSU4gQklUKDApCit7CisJSUdU
X1RJTUVPVVQoZW5kX3RpbWUpOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3RbMTZdOwor
CXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHhbMTZdOworCXN0cnVjdCBpbnRlbF9jb250ZXh0
ICp2ZVsxNl07CisJdW5zaWduZWQgbG9uZyBuLCBwcmltZSwgbmM7CisJc3RydWN0IGlndF9saXZl
X3Rlc3QgdDsKKwlrdGltZV90IHRpbWVzWzJdID0ge307CisJaW50IGVycjsKKworCUdFTV9CVUdf
T04oIW5jdHggfHwgbmN0eCA+IEFSUkFZX1NJWkUoY3R4KSk7CisKKwlmb3IgKG4gPSAwOyBuIDwg
bmN0eDsgbisrKSB7CisJCWN0eFtuXSA9IGtlcm5lbF9jb250ZXh0KGk5MTUpOworCQlpZiAoIWN0
eFtuXSkgeworCQkJZXJyID0gLUVOT01FTTsKKwkJCW5jdHggPSBuOworCQkJZ290byBvdXQ7CisJ
CX0KKworCQl2ZVtuXSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChjdHhbbl0sCisJ
CQkJCQkgICAgICAgc2libGluZ3MsIG5zaWJsaW5nKTsKKwkJaWYgKElTX0VSUih2ZVtuXSkpIHsK
KwkJCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuXSk7CisJCQllcnIgPSBQVFJfRVJSKHZlW25d
KTsKKwkJCW5jdHggPSBuOworCQkJZ290byBvdXQ7CisJCX0KKworCQllcnIgPSBpbnRlbF9jb250
ZXh0X3Bpbih2ZVtuXSk7CisJCWlmIChlcnIpIHsKKwkJCWludGVsX2NvbnRleHRfcHV0KHZlW25d
KTsKKwkJCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eFtuXSk7CisJCQluY3R4ID0gbjsKKwkJCWdv
dG8gb3V0OworCQl9CisJfQorCisJZXJyID0gaWd0X2xpdmVfdGVzdF9iZWdpbigmdCwgaTkxNSwg
X19mdW5jX18sIHZlWzBdLT5lbmdpbmUtPm5hbWUpOworCWlmIChlcnIpCisJCWdvdG8gb3V0Owor
CisJZm9yX2VhY2hfcHJpbWVfbnVtYmVyX2Zyb20ocHJpbWUsIDEsIDgxOTIpIHsKKwkJdGltZXNb
MV0gPSBrdGltZV9nZXRfcmF3KCk7CisKKwkJaWYgKGZsYWdzICYgQ0hBSU4pIHsKKwkJCWZvciAo
bmMgPSAwOyBuYyA8IG5jdHg7IG5jKyspIHsKKwkJCQlmb3IgKG4gPSAwOyBuIDwgcHJpbWU7IG4r
KykgeworCQkJCQlyZXF1ZXN0W25jXSA9CisJCQkJCQlpOTE1X3JlcXVlc3RfY3JlYXRlKHZlW25j
XSk7CisJCQkJCWlmIChJU19FUlIocmVxdWVzdFtuY10pKSB7CisJCQkJCQllcnIgPSBQVFJfRVJS
KHJlcXVlc3RbbmNdKTsKKwkJCQkJCWdvdG8gb3V0OworCQkJCQl9CisKKwkJCQkJaTkxNV9yZXF1
ZXN0X2FkZChyZXF1ZXN0W25jXSk7CisJCQkJfQorCQkJfQorCQl9IGVsc2UgeworCQkJZm9yIChu
ID0gMDsgbiA8IHByaW1lOyBuKyspIHsKKwkJCQlmb3IgKG5jID0gMDsgbmMgPCBuY3R4OyBuYysr
KSB7CisJCQkJCXJlcXVlc3RbbmNdID0KKwkJCQkJCWk5MTVfcmVxdWVzdF9jcmVhdGUodmVbbmNd
KTsKKwkJCQkJaWYgKElTX0VSUihyZXF1ZXN0W25jXSkpIHsKKwkJCQkJCWVyciA9IFBUUl9FUlIo
cmVxdWVzdFtuY10pOworCQkJCQkJZ290byBvdXQ7CisJCQkJCX0KKworCQkJCQlpOTE1X3JlcXVl
c3RfYWRkKHJlcXVlc3RbbmNdKTsKKwkJCQl9CisJCQl9CisJCX0KKworCQlmb3IgKG5jID0gMDsg
bmMgPCBuY3R4OyBuYysrKSB7CisJCQlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocmVxdWVzdFtuY10s
CisJCQkJCSAgICAgIEk5MTVfV0FJVF9MT0NLRUQsCisJCQkJCSAgICAgIEhaIC8gMTApIDwgMCkg
eworCQkJCXByX2VycigiJXMoJXMpOiB3YWl0IGZvciAlbGx4OiVsbGQgdGltZWQgb3V0XG4iLAor
CQkJCSAgICAgICBfX2Z1bmNfXywgdmVbMF0tPmVuZ2luZS0+bmFtZSwKKwkJCQkgICAgICAgcmVx
dWVzdFtuY10tPmZlbmNlLmNvbnRleHQsCisJCQkJICAgICAgIHJlcXVlc3RbbmNdLT5mZW5jZS5z
ZXFubyk7CisKKwkJCQlHRU1fVFJBQ0UoIiVzKCVzKSBmYWlsZWQgYXQgcmVxdWVzdCAlbGx4OiVs
bGRcbiIsCisJCQkJCSAgX19mdW5jX18sIHZlWzBdLT5lbmdpbmUtPm5hbWUsCisJCQkJCSAgcmVx
dWVzdFtuY10tPmZlbmNlLmNvbnRleHQsCisJCQkJCSAgcmVxdWVzdFtuY10tPmZlbmNlLnNlcW5v
KTsKKwkJCQlHRU1fVFJBQ0VfRFVNUCgpOworCQkJCWk5MTVfZ2VtX3NldF93ZWRnZWQoaTkxNSk7
CisJCQkJYnJlYWs7CisJCQl9CisJCX0KKworCQl0aW1lc1sxXSA9IGt0aW1lX3N1YihrdGltZV9n
ZXRfcmF3KCksIHRpbWVzWzFdKTsKKwkJaWYgKHByaW1lID09IDEpCisJCQl0aW1lc1swXSA9IHRp
bWVzWzFdOworCisJCWlmIChfX2lndF90aW1lb3V0KGVuZF90aW1lLCBOVUxMKSkKKwkJCWJyZWFr
OworCX0KKworCWVyciA9IGlndF9saXZlX3Rlc3RfZW5kKCZ0KTsKKwlpZiAoZXJyKQorCQlnb3Rv
IG91dDsKKworCXByX2luZm8oIlJlcXVlc3R4JWQgbGF0ZW5jaWVzIG9uICVzOiAxID0gJWxsdW5z
LCAlbHUgPSAlbGx1bnNcbiIsCisJCW5jdHgsIHZlWzBdLT5lbmdpbmUtPm5hbWUsIGt0aW1lX3Rv
X25zKHRpbWVzWzBdKSwKKwkJcHJpbWUsIGRpdjY0X3U2NChrdGltZV90b19ucyh0aW1lc1sxXSks
IHByaW1lKSk7CisKK291dDoKKwlpZiAoaWd0X2ZsdXNoX3Rlc3QoaTkxNSwgSTkxNV9XQUlUX0xP
Q0tFRCkpCisJCWVyciA9IC1FSU87CisKKwlmb3IgKG5jID0gMDsgbmMgPCBuY3R4OyBuYysrKSB7
CisJCWludGVsX2NvbnRleHRfdW5waW4odmVbbmNdKTsKKwkJaW50ZWxfY29udGV4dF9wdXQodmVb
bmNdKTsKKwkJa2VybmVsX2NvbnRleHRfY2xvc2UoY3R4W25jXSk7CisJfQorCXJldHVybiBlcnI7
Cit9CisKK3N0YXRpYyBpbnQgbGl2ZV92aXJ0dWFsX2VuZ2luZSh2b2lkICphcmcpCit7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CisJc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqc2libGluZ3NbTUFYX0VOR0lORV9JTlNUQU5DRSArIDFdOworCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwl1bnNpZ25lZCBpbnQg
Y2xhc3MsIGluc3Q7CisJaW50IGVyciA9IC1FTk9ERVY7CisKKwlpZiAoVVNFU19HVUNfU1VCTUlT
U0lPTihpOTE1KSkKKwkJcmV0dXJuIDA7CisKKwltdXRleF9sb2NrKCZpOTE1LT5kcm0uc3RydWN0
X211dGV4KTsKKworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGk5MTUsIGlkKSB7CisJCWVyciA9
IG5vcF92aXJ0dWFsX2VuZ2luZShpOTE1LCAmZW5naW5lLCAxLCAxLCAwKTsKKwkJaWYgKGVycikg
eworCQkJcHJfZXJyKCJGYWlsZWQgdG8gd3JhcCBlbmdpbmUgJXM6IGVycj0lZFxuIiwKKwkJCSAg
ICAgICBlbmdpbmUtPm5hbWUsIGVycik7CisJCQlnb3RvIG91dF91bmxvY2s7CisJCX0KKwl9CisK
Kwlmb3IgKGNsYXNzID0gMDsgY2xhc3MgPD0gTUFYX0VOR0lORV9DTEFTUzsgY2xhc3MrKykgewor
CQlpbnQgbnNpYmxpbmcsIG47CisKKwkJbnNpYmxpbmcgPSAwOworCQlmb3IgKGluc3QgPSAwOyBp
bnN0IDw9IE1BWF9FTkdJTkVfSU5TVEFOQ0U7IGluc3QrKykgeworCQkJaWYgKCFpOTE1LT5lbmdp
bmVfY2xhc3NbY2xhc3NdW2luc3RdKQorCQkJCWNvbnRpbnVlOworCisJCQlzaWJsaW5nc1tuc2li
bGluZysrXSA9IGk5MTUtPmVuZ2luZV9jbGFzc1tjbGFzc11baW5zdF07CisJCX0KKwkJaWYgKG5z
aWJsaW5nIDwgMikKKwkJCWNvbnRpbnVlOworCisJCWZvciAobiA9IDE7IG4gPD0gbnNpYmxpbmcg
KyAxOyBuKyspIHsKKwkJCWVyciA9IG5vcF92aXJ0dWFsX2VuZ2luZShpOTE1LCBzaWJsaW5ncywg
bnNpYmxpbmcsCisJCQkJCQkgbiwgMCk7CisJCQlpZiAoZXJyKQorCQkJCWdvdG8gb3V0X3VubG9j
azsKKwkJfQorCisJCWVyciA9IG5vcF92aXJ0dWFsX2VuZ2luZShpOTE1LCBzaWJsaW5ncywgbnNp
YmxpbmcsIG4sIENIQUlOKTsKKwkJaWYgKGVycikKKwkJCWdvdG8gb3V0X3VubG9jazsKKwl9CisK
K291dF91bmxvY2s6CisJbXV0ZXhfdW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwly
ZXR1cm4gZXJyOworfQorCiBpbnQgaW50ZWxfZXhlY2xpc3RzX2xpdmVfc2VsZnRlc3RzKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewogCXN0YXRpYyBjb25zdCBzdHJ1Y3QgaTkxNV9z
dWJ0ZXN0IHRlc3RzW10gPSB7CkBAIC0xMzIyLDYgKzE1MDEsNyBAQCBpbnQgaW50ZWxfZXhlY2xp
c3RzX2xpdmVfc2VsZnRlc3RzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCQlTVUJU
RVNUKGxpdmVfY2hhaW5fcHJlZW1wdCksCiAJCVNVQlRFU1QobGl2ZV9wcmVlbXB0X2hhbmcpLAog
CQlTVUJURVNUKGxpdmVfcHJlZW1wdF9zbW9rZSksCisJCVNVQlRFU1QobGl2ZV92aXJ0dWFsX2Vu
Z2luZSksCiAJfTsKIAogCWlmICghSEFTX0VYRUNMSVNUUyhpOTE1KSkKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5oCmluZGV4IDY3ZjhhNGE4MDdhMC4uZmU4MmQzNTcxMDcyIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtLmgKQEAgLTkxLDQgKzkxLDkgQEAgc3RhdGljIGlubGluZSBib29sIF9fdGFza2xldF9l
bmFibGUoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQogCXJldHVybiBhdG9taWNfZGVjX2FuZF90
ZXN0KCZ0LT5jb3VudCk7CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9vbCBfX3Rhc2tsZXRfaXNfc2No
ZWR1bGVkKHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKK3sKKwlyZXR1cm4gdGVzdF9iaXQoVEFT
S0xFVF9TVEFURV9TQ0hFRCwgJnQtPnN0YXRlKTsKK30KKwogI2VuZGlmIC8qIF9fSTkxNV9HRU1f
SF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0LmMKaW5kZXggMjQ3MzZm
Y2Q0NjNkLi42OGRiNmIyOGU2MDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250
ZXh0LmMKQEAgLTg2LDYgKzg2LDcgQEAKICAqLwogCiAjaW5jbHVkZSA8bGludXgvbG9nMi5oPgor
I2luY2x1ZGUgPGxpbnV4L25vc3BlYy5oPgogCiAjaW5jbHVkZSA8ZHJtL2k5MTVfZHJtLmg+CiAK
QEAgLTEyMTgsNyArMTIxOSw2IEBAIF9faW50ZWxfY29udGV4dF9yZWNvbmZpZ3VyZV9zc2V1KHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAlpbnQgcmV0OwogCiAJR0VNX0JVR19PTihJTlRFTF9H
RU4oY2UtPmdlbV9jb250ZXh0LT5pOTE1KSA8IDgpOwotCUdFTV9CVUdfT04oY2UtPmVuZ2luZS0+
aWQgIT0gUkNTMCk7CiAKIAlyZXQgPSBpbnRlbF9jb250ZXh0X2xvY2tfcGlubmVkKGNlKTsKIAlp
ZiAocmV0KQpAQCAtMTQxMiw3ICsxNDEyLDEwMCBAQCBzdHJ1Y3Qgc2V0X2VuZ2luZXMgewogCXN0
cnVjdCBpOTE1X2dlbV9lbmdpbmVzICplbmdpbmVzOwogfTsKIAorc3RhdGljIGludAorc2V0X2Vu
Z2luZXNfX2xvYWRfYmFsYW5jZShzdHJ1Y3QgaTkxNV91c2VyX2V4dGVuc2lvbiBfX3VzZXIgKmJh
c2UsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGk5MTVfY29udGV4dF9lbmdpbmVzX2xvYWRfYmFs
YW5jZSBfX3VzZXIgKmV4dCA9CisJCWNvbnRhaW5lcl9vZl91c2VyKGJhc2UsIHR5cGVvZigqZXh0
KSwgYmFzZSk7CisJY29uc3Qgc3RydWN0IHNldF9lbmdpbmVzICpzZXQgPSBkYXRhOworCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKnN0YWNrWzE2XTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoq
c2libGluZ3M7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCXUxNiBudW1fc2libGluZ3Ms
IGlkeDsKKwl1bnNpZ25lZCBpbnQgbjsKKwlpbnQgZXJyOworCisJaWYgKCFIQVNfRVhFQ0xJU1RT
KHNldC0+Y3R4LT5pOTE1KSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlpZiAoVVNFU19HVUNfU1VC
TUlTU0lPTihzZXQtPmN0eC0+aTkxNSkpCisJCXJldHVybiAtRU5PREVWOyAvKiBub3QgaW1wbGVt
ZW50IHlldCAqLworCisJaWYgKGdldF91c2VyKGlkeCwgJmV4dC0+ZW5naW5lX2luZGV4KSkKKwkJ
cmV0dXJuIC1FRkFVTFQ7CisKKwlpZiAoaWR4ID49IHNldC0+ZW5naW5lcy0+bnVtX2VuZ2luZXMp
IHsKKwkJRFJNX0RFQlVHKCJJbnZhbGlkIHBsYWNlbWVudCB2YWx1ZSwgJWQgPj0gJWRcbiIsCisJ
CQkgIGlkeCwgc2V0LT5lbmdpbmVzLT5udW1fZW5naW5lcyk7CisJCXJldHVybiAtRUlOVkFMOwor
CX0KKworCWlkeCA9IGFycmF5X2luZGV4X25vc3BlYyhpZHgsIHNldC0+ZW5naW5lcy0+bnVtX2Vu
Z2luZXMpOworCWlmIChzZXQtPmVuZ2luZXMtPmVuZ2luZXNbaWR4XSkgeworCQlEUk1fREVCVUco
IkludmFsaWQgcGxhY2VtZW50WyVkXSwgYWxyZWFkeSBvY2N1cGllZFxuIiwgaWR4KTsKKwkJcmV0
dXJuIC1FRVhJU1Q7CisJfQorCisJaWYgKGdldF91c2VyKG51bV9zaWJsaW5ncywgJmV4dC0+bnVt
X3NpYmxpbmdzKSkKKwkJcmV0dXJuIC1FRkFVTFQ7CisKKwllcnIgPSBjaGVja191c2VyX21ieigm
ZXh0LT5mbGFncyk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVyciA9IGNoZWNrX3Vz
ZXJfbWJ6KCZleHQtPm1iejY0KTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJc2libGlu
Z3MgPSBzdGFjazsKKwlpZiAobnVtX3NpYmxpbmdzID4gQVJSQVlfU0laRShzdGFjaykpIHsKKwkJ
c2libGluZ3MgPSBrbWFsbG9jX2FycmF5KG51bV9zaWJsaW5ncywKKwkJCQkJIHNpemVvZigqc2li
bGluZ3MpLAorCQkJCQkgR0ZQX0tFUk5FTCk7CisJCWlmICghc2libGluZ3MpCisJCQlyZXR1cm4g
LUVOT01FTTsKKwl9CisKKwlmb3IgKG4gPSAwOyBuIDwgbnVtX3NpYmxpbmdzOyBuKyspIHsKKwkJ
c3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGNpOworCisJCWlmIChjb3B5X2Zyb21f
dXNlcigmY2ksICZleHQtPmVuZ2luZXNbbl0sIHNpemVvZihjaSkpKSB7CisJCQllcnIgPSAtRUZB
VUxUOworCQkJZ290byBvdXRfc2libGluZ3M7CisJCX0KKworCQlzaWJsaW5nc1tuXSA9IGludGVs
X2VuZ2luZV9sb29rdXBfdXNlcihzZXQtPmN0eC0+aTkxNSwKKwkJCQkJCSAgICAgICBjaS5lbmdp
bmVfY2xhc3MsCisJCQkJCQkgICAgICAgY2kuZW5naW5lX2luc3RhbmNlKTsKKwkJaWYgKCFzaWJs
aW5nc1tuXSkgeworCQkJRFJNX0RFQlVHKCJJbnZhbGlkIHNpYmxpbmdbJWRdOiB7IGNsYXNzOiVk
LCBpbnN0OiVkIH1cbiIsCisJCQkJICBuLCBjaS5lbmdpbmVfY2xhc3MsIGNpLmVuZ2luZV9pbnN0
YW5jZSk7CisJCQllcnIgPSAtRUlOVkFMOworCQkJZ290byBvdXRfc2libGluZ3M7CisJCX0KKwl9
CisKKwljZSA9IGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzZXQtPmN0eCwgc2libGlu
Z3MsIG4pOworCWlmIChJU19FUlIoY2UpKSB7CisJCWVyciA9IFBUUl9FUlIoY2UpOworCQlnb3Rv
IG91dF9zaWJsaW5nczsKKwl9CisKKwlpZiAoY21weGNoZygmc2V0LT5lbmdpbmVzLT5lbmdpbmVz
W2lkeF0sIE5VTEwsIGNlKSkgeworCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisJCWVyciA9IC1F
RVhJU1Q7CisJCWdvdG8gb3V0X3NpYmxpbmdzOworCX0KKworb3V0X3NpYmxpbmdzOgorCWlmIChz
aWJsaW5ncyAhPSBzdGFjaykKKwkJa2ZyZWUoc2libGluZ3MpOworCisJcmV0dXJuIGVycjsKK30K
Kwogc3RhdGljIGNvbnN0IGk5MTVfdXNlcl9leHRlbnNpb25fZm4gc2V0X2VuZ2luZXNfX2V4dGVu
c2lvbnNbXSA9IHsKKwlbSTkxNV9DT05URVhUX0VOR0lORVNfRVhUX0xPQURfQkFMQU5DRV0gPSBz
ZXRfZW5naW5lc19fbG9hZF9iYWxhbmNlLAogfTsKIAogc3RhdGljIGludApAQCAtMTczNywxNCAr
MTgzMCwyOSBAQCBzdGF0aWMgaW50IGNsb25lX2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmRzdCwKIAogCWNsb25lLT5pOTE1ID0gZHN0LT5pOTE1OwogCWZvciAobiA9IDA7IG4gPCBl
LT5udW1fZW5naW5lczsgbisrKSB7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsK
KwogCQlpZiAoIWUtPmVuZ2luZXNbbl0pIHsKIAkJCWNsb25lLT5lbmdpbmVzW25dID0gTlVMTDsK
IAkJCWNvbnRpbnVlOwogCQl9CisJCWVuZ2luZSA9IGUtPmVuZ2luZXNbbl0tPmVuZ2luZTsKIAot
CQljbG9uZS0+ZW5naW5lc1tuXSA9Ci0JCQlpbnRlbF9jb250ZXh0X2NyZWF0ZShkc3QsIGUtPmVu
Z2luZXNbbl0tPmVuZ2luZSk7Ci0JCWlmICghY2xvbmUtPmVuZ2luZXNbbl0pIHsKKwkJLyoKKwkJ
ICogVmlydHVhbCBlbmdpbmVzIGFyZSBzaW5nbGV0b25zOyB0aGV5IGNhbiBvbmx5IGV4aXN0CisJ
CSAqIGluc2lkZSBhIHNpbmdsZSBjb250ZXh0LCBiZWNhdXNlIHRoZXkgZW1iZWQgdGhlaXIKKwkJ
ICogSFcgY29udGV4dC4uLiBBcyBlYWNoIHZpcnR1YWwgY29udGV4dCBpbXBsaWVzIGEgc2luZ2xl
CisJCSAqIHRpbWVsaW5lIChlYWNoIGVuZ2luZSBjYW4gb25seSBkZXF1ZXVlIGEgc2luZ2xlIHJl
cXVlc3QKKwkJICogYXQgYW55IHRpbWUpLCBpdCB3b3VsZCBiZSBzdXJwcmlzaW5nIGZvciB0d28g
Y29udGV4dHMKKwkJICogdG8gdXNlIHRoZSBzYW1lIGVuZ2luZS4gU28gbGV0J3MgY3JlYXRlIGEg
Y29weSBvZgorCQkgKiB0aGUgdmlydHVhbCBlbmdpbmUgaW5zdGVhZC4KKwkJICovCisJCWlmIChp
bnRlbF9lbmdpbmVfaXNfdmlydHVhbChlbmdpbmUpKQorCQkJY2xvbmUtPmVuZ2luZXNbbl0gPQor
CQkJCWludGVsX2V4ZWNsaXN0c19jbG9uZV92aXJ0dWFsKGRzdCwgZW5naW5lKTsKKwkJZWxzZQor
CQkJY2xvbmUtPmVuZ2luZXNbbl0gPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShkc3QsIGVuZ2luZSk7
CisJCWlmIChJU19FUlJfT1JfTlVMTChjbG9uZS0+ZW5naW5lc1tuXSkpIHsKIAkJCV9fZnJlZV9l
bmdpbmVzKGNsb25lLCBuKTsKIAkJCWdvdG8gZXJyX3VubG9jazsKIAkJfQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfc2NoZWR1bGVyLmMKaW5kZXggZDIxNWRjZGYwYjFlLi43OGNlYjU2ZDc4MDEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwpAQCAtMTUwLDE3ICsxNTAsMjYgQEAg
c2NoZWRfbG9ja19lbmdpbmUoY29uc3Qgc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9kZSwKIAkJ
ICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpsb2NrZWQsCiAJCSAgc3RydWN0IHNjaGVkX2NhY2hl
ICpjYWNoZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPSBub2RlX3RvX3Jl
cXVlc3Qobm9kZSktPmVuZ2luZTsKKwljb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IG5v
ZGVfdG9fcmVxdWVzdChub2RlKTsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAK
IAlHRU1fQlVHX09OKCFsb2NrZWQpOwogCi0JaWYgKGVuZ2luZSAhPSBsb2NrZWQpIHsKKwkvKgor
CSAqIFZpcnR1YWwgZW5naW5lcyBjb21wbGljYXRlIGFjcXVpcmluZyB0aGUgZW5naW5lIHRpbWVs
aW5lIGxvY2ssCisJICogYXMgdGhlaXIgcnEtPmVuZ2luZSBwb2ludGVyIGlzIG5vdCBzdGFibGUg
dW50aWwgdW5kZXIgdGhhdAorCSAqIGVuZ2luZSBsb2NrLiBUaGUgc2ltcGxlIHBsb3kgd2UgdXNl
IGlzIHRvIHRha2UgdGhlIGxvY2sgdGhlbgorCSAqIGNoZWNrIHRoYXQgdGhlIHJxIHN0aWxsIGJl
bG9uZ3MgdG8gdGhlIG5ld2x5IGxvY2tlZCBlbmdpbmUuCisJICovCisJd2hpbGUgKGxvY2tlZCAh
PSAoZW5naW5lID0gUkVBRF9PTkNFKHJxLT5lbmdpbmUpKSkgewogCQlzcGluX3VubG9jaygmbG9j
a2VkLT50aW1lbGluZS5sb2NrKTsKIAkJbWVtc2V0KGNhY2hlLCAwLCBzaXplb2YoKmNhY2hlKSk7
CiAJCXNwaW5fbG9jaygmZW5naW5lLT50aW1lbGluZS5sb2NrKTsKKwkJbG9ja2VkID0gZW5naW5l
OwogCX0KIAotCXJldHVybiBlbmdpbmU7CisJR0VNX0JVR19PTihsb2NrZWQgIT0gZW5naW5lKTsK
KwlyZXR1cm4gbG9ja2VkOwogfQogCiBzdGF0aWMgaW5saW5lIGludCBycV9wcmlvKGNvbnN0IHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQpAQCAtMjcyLDYgKzI4MSw3IEBAIHN0YXRpYyB2b2lkIF9f
aTkxNV9zY2hlZHVsZShzdHJ1Y3QgaTkxNV9zY2hlZF9ub2RlICpub2RlLAogCXNwaW5fbG9jaygm
ZW5naW5lLT50aW1lbGluZS5sb2NrKTsKIAogCS8qIEZpZm8gYW5kIGRlcHRoLWZpcnN0IHJlcGxh
Y2VtZW50IGVuc3VyZSBvdXIgZGVwcyBleGVjdXRlIGJlZm9yZSB1cyAqLworCWVuZ2luZSA9IHNj
aGVkX2xvY2tfZW5naW5lKG5vZGUsIGVuZ2luZSwgJmNhY2hlKTsKIAlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5X3NhZmVfcmV2ZXJzZShkZXAsIHAsICZkZnMsIGRmc19saW5rKSB7CiAJCUlOSVRfTElTVF9I
RUFEKCZkZXAtPmRmc19saW5rKTsKIApAQCAtMjgzLDggKzI5MywxMSBAQCBzdGF0aWMgdm9pZCBf
X2k5MTVfc2NoZWR1bGUoc3RydWN0IGk5MTVfc2NoZWRfbm9kZSAqbm9kZSwKIAkJaWYgKHByaW8g
PD0gbm9kZS0+YXR0ci5wcmlvcml0eSB8fCBub2RlX3NpZ25hbGVkKG5vZGUpKQogCQkJY29udGlu
dWU7CiAKKwkJR0VNX0JVR19PTihub2RlX3RvX3JlcXVlc3Qobm9kZSktPmVuZ2luZSAhPSBlbmdp
bmUpOworCiAJCW5vZGUtPmF0dHIucHJpb3JpdHkgPSBwcmlvOwogCQlpZiAoIWxpc3RfZW1wdHko
Jm5vZGUtPmxpbmspKSB7CisJCQlHRU1fQlVHX09OKGludGVsX2VuZ2luZV9pc192aXJ0dWFsKGVu
Z2luZSkpOwogCQkJaWYgKCFjYWNoZS5wcmlvbGlzdCkKIAkJCQljYWNoZS5wcmlvbGlzdCA9CiAJ
CQkJCWk5MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0KGVuZ2luZSwKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfdGltZWxpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfdGltZWxpbmVfdHlwZXMuaAppbmRleCA1MjU2YTBiNWM1ZjcuLjE2ODg3MDVmNGEy
YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGluZV90eXBlcy5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdGltZWxpbmVfdHlwZXMuaApAQCAtMjYs
NiArMjYsNyBAQCBzdHJ1Y3QgaTkxNV90aW1lbGluZSB7CiAJc3BpbmxvY2tfdCBsb2NrOwogI2Rl
ZmluZSBUSU1FTElORV9DTElFTlQgMCAvKiBkZWZhdWx0IHN1YmNsYXNzICovCiAjZGVmaW5lIFRJ
TUVMSU5FX0VOR0lORSAxCisjZGVmaW5lIFRJTUVMSU5FX1ZJUlRVQUwgMgogCXN0cnVjdCBtdXRl
eCBtdXRleDsgLyogcHJvdGVjdHMgdGhlIGZsb3cgb2YgcmVxdWVzdHMgKi8KIAogCXVuc2lnbmVk
IGludCBwaW5fY291bnQ7CmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgg
Yi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKaW5kZXggNjIzOTZkNTc1ZTI4Li5mOTc3MDk0
ODE2MWMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAorKysgYi9pbmNs
dWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKQEAgLTEzNyw2ICsxMzcsNyBAQCBzdHJ1Y3QgaTkxNV9l
bmdpbmVfY2xhc3NfaW5zdGFuY2UgewogCV9fdTE2IGVuZ2luZV9jbGFzczsgLyogc2VlIGVudW0g
ZHJtX2k5MTVfZ2VtX2VuZ2luZV9jbGFzcyAqLwogCV9fdTE2IGVuZ2luZV9pbnN0YW5jZTsKICNk
ZWZpbmUgSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9OT05FIC0xCisjZGVmaW5lIEk5MTVfRU5H
SU5FX0NMQVNTX0lOVkFMSURfVklSVFVBTCAtMgogfTsKIAogLyoqCkBAIC0xNjA4LDggKzE2MDks
NDYgQEAgc3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtX3NzZXUgewogCV9fdTMyIHJz
dmQ7CiB9OwogCisvKgorICogaTkxNV9jb250ZXh0X2VuZ2luZXNfbG9hZF9iYWxhbmNlOgorICoK
KyAqIEVuYWJsZSBsb2FkIGJhbGFuY2luZyBhY3Jvc3MgdGhpcyBzZXQgb2YgZW5naW5lcy4KKyAq
CisgKiBJbnRvIHRoZSBJOTE1X0VYRUNfREVGQVVMVCBzbG90IFswXSwgYSB2aXJ0dWFsIGVuZ2lu
ZSBpcyBjcmVhdGVkIHRoYXQgd2hlbgorICogdXNlZCB3aWxsIHByb3h5IHRoZSBleGVjYnVmZmVy
IHJlcXVlc3Qgb250byBvbmUgb2YgdGhlIHNldCBvZiBlbmdpbmVzCisgKiBpbiBzdWNoIGEgd2F5
IGFzIHRvIGRpc3RyaWJ1dGUgdGhlIGxvYWQgZXZlbmx5IGFjcm9zcyB0aGUgc2V0LgorICoKKyAq
IFRoZSBzZXQgb2YgZW5naW5lcyBtdXN0IGJlIGNvbXBhdGlibGUgKGUuZy4gdGhlIHNhbWUgSFcg
Y2xhc3MpIGFzIHRoZXkKKyAqIHdpbGwgc2hhcmUgdGhlIHNhbWUgbG9naWNhbCBHUFUgY29udGV4
dCBhbmQgcmluZy4KKyAqCisgKiBUbyBpbnRlcm1peCByZW5kZXJpbmcgd2l0aCB0aGUgdmlydHVh
bCBlbmdpbmUgYW5kIGRpcmVjdCByZW5kZXJpbmcgb250bworICogdGhlIGJhY2tpbmcgZW5naW5l
cyAoYnlwYXNzaW5nIHRoZSBsb2FkIGJhbGFuY2luZyBwcm94eSksIHRoZSBjb250ZXh0IG11c3QK
KyAqIGJlIGRlZmluZWQgdG8gdXNlIGEgc2luZ2xlIHRpbWVsaW5lIGZvciBhbGwgZW5naW5lcy4K
KyAqLworc3RydWN0IGk5MTVfY29udGV4dF9lbmdpbmVzX2xvYWRfYmFsYW5jZSB7CisJc3RydWN0
IGk5MTVfdXNlcl9leHRlbnNpb24gYmFzZTsKKworCV9fdTE2IGVuZ2luZV9pbmRleDsKKwlfX3Ux
NiBudW1fc2libGluZ3M7CisJX191MzIgZmxhZ3M7IC8qIGFsbCB1bmRlZmluZWQgZmxhZ3MgbXVz
dCBiZSB6ZXJvICovCisKKwlfX3U2NCBtYno2NDsgLyogcmVzZXJ2ZWQgZm9yIGZ1dHVyZSB1c2U7
IG11c3QgYmUgemVybyAqLworCisJc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGVu
Z2luZXNbMF07Cit9IF9fYXR0cmlidXRlX18oKHBhY2tlZCkpOworCisjZGVmaW5lIEk5MTVfREVG
SU5FX0NPTlRFWFRfRU5HSU5FU19MT0FEX0JBTEFOQ0UobmFtZV9fLCBOX18pIHN0cnVjdCB7IFwK
KwlzdHJ1Y3QgaTkxNV91c2VyX2V4dGVuc2lvbiBiYXNlOyBcCisJX191MTYgZW5naW5lX2luZGV4
OyBcCisJX191MTYgbnVtX3NpYmxpbmdzOyBcCisJX191MzIgZmxhZ3M7IFwKKwlfX3U2NCBtYno2
NDsgXAorCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSBlbmdpbmVzW05fX107IFwK
K30gX19hdHRyaWJ1dGVfXygocGFja2VkKSkgbmFtZV9fCisKIHN0cnVjdCBpOTE1X2NvbnRleHRf
cGFyYW1fZW5naW5lcyB7CiAJX191NjQgZXh0ZW5zaW9uczsgLyogbGlua2VkIGNoYWluIG9mIGV4
dGVuc2lvbiBibG9ja3MsIDAgdGVybWluYXRlcyAqLworI2RlZmluZSBJOTE1X0NPTlRFWFRfRU5H
SU5FU19FWFRfTE9BRF9CQUxBTkNFIDAgLyogc2VlIGk5MTVfY29udGV4dF9lbmdpbmVzX2xvYWRf
YmFsYW5jZSAqLwogCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSBlbmdpbmVzWzBd
OwogfSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKTsKIAotLSAKMi4yMC4xCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0
CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

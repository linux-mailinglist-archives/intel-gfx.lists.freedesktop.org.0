Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BF8B16C99D
	for <lists+intel-gfx@lfdr.de>; Thu, 18 Jul 2019 09:01:02 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E0D036E32A;
	Thu, 18 Jul 2019 07:01:00 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A0F586E31C
 for <intel-gfx@lists.freedesktop.org>; Thu, 18 Jul 2019 07:00:41 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17390387-1500050 
 for multiple; Thu, 18 Jul 2019 08:00:38 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 18 Jul 2019 08:00:15 +0100
Message-Id: <20190718070024.21781-11-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190718070024.21781-1-chris@chris-wilson.co.uk>
References: <20190718070024.21781-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 11/20] drm/i915: Rely on spinlock protection for
 GPU error capture
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VHJ1c3QgdGhhdCB3ZSBub3cgaGF2ZSBhZGVxdWF0ZSBwcm90ZWN0aW9uIG92ZXIgdGhlIGxvdyBs
ZXZlbCBzdHJ1Y3R1cmVzCnZpYSB0aGUgZW5naW5lLT5hY3RpdmUubG9jayB0byBhbGxvdyBvdXJz
ZWx2ZXMgdG8gY2FwdHVyZSB0aGUgR1BVIGVycm9yCnN0YXRlIHdpdGhvdXQgdGhlIGhlYXZ5IGhh
bW1lciBvZiBzdG9wX21hY2hpbmUoKS4gU2FkbHkgdGhpcyBkb2VzIG1lYW4KdGhhdCB3ZSBoYXZl
IHRvIGZvcmdvIHNvbWUgb2YgdGhlIGxlc3NlciB1c2VkIGluZm9ybWF0aW9uIChub3QgZGVyaXZl
ZApmcm9tIHRoZSBhY3RpdmUgc3RhdGUpIHRoYXQgaXMgbm90IGNvbnRyb2xsZWQgYnkgdGhlIGFj
dGl2ZSBsb2Nrcy4gVGhpcwppbmNsdWRlcyB0aGUgbGlzdCBvZiBidWZmZXJzIGluIHRoZSBwcEdU
VCBhbmQgcGlubmVkIGdsb2JhbGx5IGluIHRoZQpHR1RULiBPcmlnaW5hbGx5IHRoaXMgd2FzIHVz
ZWQgdG8gbWFudWFsbHkgdmVyaWZ5IHJlbG9jYXRpb25zLCBidXQKaGFzbid0IGJlZW4gcmVxdWly
ZWQgZm9yIHNvbWV0aW1lIGFuZCBtb2Rlcm4gbWVzYSBub3cgaGFzIHRoZSBoYWJpdCBvZgplbnN1
cmluZyB0aGF0IGFsbCBpbnRlcmVzdGluZyBidWZmZXJzIHdpdGhpbiBhIGJhdGNoIGFyZSBjYXB0
dXJlZCBpbiB0aGVpcgplbnRpcmV0eSAodGhhdCBhcmUgdGhlIGF1eGlsaWFyeSBzdGF0ZSBidWZm
ZXJzLCBidXQgbm90IHRoZSB0ZXh0dXJlcykuCgpBIHVzZWZ1bCBzaWRlLWVmZmVjdCBpcyB0aGF0
IHRoaXMgYWxsb3dzIHVzIHRvIHJlc3RvcmUgZXJyb3IgY2FwdHVyaW5nCmZvciBCcmFzd2VsbCBh
bmQgQnJveHRvbi4KCnYyOiBVc2UgcGFnZXZlYyBmb3IgYSB0eXBpY2FsIHJhbmRvbSBudW1iZXIK
ClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgot
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2d0dC5jICAgfCAgIDUgLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyB8IDQ5OSArKysrKysrKysrKy0tLS0tLS0t
LS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuaCB8ICAxNyAtCiAz
IGZpbGVzIGNoYW5nZWQsIDIwMyBpbnNlcnRpb25zKCspLCAzMTggZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYwppbmRleCA4ZjMzZDNlNTJiOWUuLjUwMGYzY2RjYzRi
MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMKQEAgLTI5NjYsMTEgKzI5NjYsNiBA
QCBzdGF0aWMgaW50IGdlbjhfZ21jaF9wcm9iZShzdHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0KQogCQln
Z3R0LT52bS5pbnNlcnRfcGFnZSAgICA9IGJ4dF92dGRfZ2d0dF9pbnNlcnRfcGFnZV9fQktMOwog
CQlpZiAoZ2d0dC0+dm0uY2xlYXJfcmFuZ2UgIT0gbm9wX2NsZWFyX3JhbmdlKQogCQkJZ2d0dC0+
dm0uY2xlYXJfcmFuZ2UgPSBieHRfdnRkX2dndHRfY2xlYXJfcmFuZ2VfX0JLTDsKLQotCQkvKiBQ
cmV2ZW50IHJlY3Vyc2l2ZWx5IGNhbGxpbmcgc3RvcF9tYWNoaW5lKCkgYW5kIGRlYWRsb2Nrcy4g
Ki8KLQkJZGV2X2luZm8oZGV2X3ByaXYtPmRybS5kZXYsCi0JCQkgIkRpc2FibGluZyBlcnJvciBj
YXB0dXJlIGZvciBWVC1kIHdvcmthcm91bmRcbiIpOwotCQlpOTE1X2Rpc2FibGVfZXJyb3Jfc3Rh
dGUoZGV2X3ByaXYsIC1FTk9ERVYpOwogCX0KIAogCWdndHQtPmludmFsaWRhdGUgPSBnZW42X2dn
dHRfaW52YWxpZGF0ZTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1
X2Vycm9yLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCmluZGV4IDI0
ODM1YmUzMDBiYy4uMTMxYTUyYzQyOGRlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dwdV9lcnJvci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vy
cm9yLmMKQEAgLTI5LDggKzI5LDggQEAKIAogI2luY2x1ZGUgPGxpbnV4L2FzY2lpODUuaD4KICNp
bmNsdWRlIDxsaW51eC9ubWkuaD4KKyNpbmNsdWRlIDxsaW51eC9wYWdldmVjLmg+CiAjaW5jbHVk
ZSA8bGludXgvc2NhdHRlcmxpc3QuaD4KLSNpbmNsdWRlIDxsaW51eC9zdG9wX21hY2hpbmUuaD4K
ICNpbmNsdWRlIDxsaW51eC91dHNuYW1lLmg+CiAjaW5jbHVkZSA8bGludXgvemxpYi5oPgogCkBA
IC00Niw2ICs0Niw5IEBACiAjaW5jbHVkZSAiaTkxNV9zY2F0dGVybGlzdC5oIgogI2luY2x1ZGUg
ImludGVsX2Nzci5oIgogCisjZGVmaW5lIEFMTE9XX0ZBSUwgKEdGUF9LRVJORUwgfCBfX0dGUF9S
RVRSWV9NQVlGQUlMIHwgX19HRlBfTk9XQVJOKQorI2RlZmluZSBBVE9NSUNfTUFZRkFJTCAoR0ZQ
X0FUT01JQyB8IF9fR0ZQX05PV0FSTikKKwogc3RhdGljIGlubGluZSBjb25zdCBzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICoKIGVuZ2luZV9sb29rdXAoY29uc3Qgc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUsIHVuc2lnbmVkIGludCBpZCkKIHsKQEAgLTY3LDI2ICs3MCw2IEBAIGVuZ2luZV9u
YW1lKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCB1bnNpZ25lZCBpbnQgaWQp
CiAJcmV0dXJuIF9fZW5naW5lX25hbWUoZW5naW5lX2xvb2t1cChpOTE1LCBpZCkpOwogfQogCi1z
dGF0aWMgY29uc3QgY2hhciAqdGlsaW5nX2ZsYWcoaW50IHRpbGluZykKLXsKLQlzd2l0Y2ggKHRp
bGluZykgewotCWRlZmF1bHQ6Ci0JY2FzZSBJOTE1X1RJTElOR19OT05FOiByZXR1cm4gIiI7Ci0J
Y2FzZSBJOTE1X1RJTElOR19YOiByZXR1cm4gIiBYIjsKLQljYXNlIEk5MTVfVElMSU5HX1k6IHJl
dHVybiAiIFkiOwotCX0KLX0KLQotc3RhdGljIGNvbnN0IGNoYXIgKmRpcnR5X2ZsYWcoaW50IGRp
cnR5KQotewotCXJldHVybiBkaXJ0eSA/ICIgZGlydHkiIDogIiI7Ci19Ci0KLXN0YXRpYyBjb25z
dCBjaGFyICpwdXJnZWFibGVfZmxhZyhpbnQgcHVyZ2VhYmxlKQotewotCXJldHVybiBwdXJnZWFi
bGUgPyAiIHB1cmdlYWJsZSIgOiAiIjsKLX0KLQogc3RhdGljIHZvaWQgX19zZ19zZXRfYnVmKHN0
cnVjdCBzY2F0dGVybGlzdCAqc2csCiAJCQkgdm9pZCAqYWRkciwgdW5zaWduZWQgaW50IGxlbiwg
bG9mZl90IGl0KQogewpAQCAtMTE0LDcgKzk3LDcgQEAgc3RhdGljIGJvb2wgX19pOTE1X2Vycm9y
X2dyb3coc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1ZiAqZSwgc2l6ZV90IGxlbikKIAlp
ZiAoZS0+Y3VyID09IGUtPmVuZCkgewogCQlzdHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnbDsKIAotCQlz
Z2wgPSAodHlwZW9mKHNnbCkpX19nZXRfZnJlZV9wYWdlKEdGUF9LRVJORUwpOworCQlzZ2wgPSAo
dHlwZW9mKHNnbCkpX19nZXRfZnJlZV9wYWdlKEFMTE9XX0ZBSUwpOwogCQlpZiAoIXNnbCkgewog
CQkJZS0+ZXJyID0gLUVOT01FTTsKIAkJCXJldHVybiBmYWxzZTsKQEAgLTEzNCw3ICsxMTcsNyBA
QCBzdGF0aWMgYm9vbCBfX2k5MTVfZXJyb3JfZ3JvdyhzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfc3Rh
dGVfYnVmICplLCBzaXplX3QgbGVuKQogCX0KIAogCWUtPnNpemUgPSBBTElHTihsZW4gKyAxLCBT
Wl82NEspOwotCWUtPmJ1ZiA9IGttYWxsb2MoZS0+c2l6ZSwgR0ZQX0tFUk5FTCB8IF9fR0ZQX05P
V0FSTiB8IF9fR0ZQX05PUkVUUlkpOworCWUtPmJ1ZiA9IGttYWxsb2MoZS0+c2l6ZSwgQUxMT1df
RkFJTCk7CiAJaWYgKCFlLT5idWYpIHsKIAkJZS0+c2l6ZSA9IFBBR0VfQUxJR04obGVuICsgMSk7
CiAJCWUtPmJ1ZiA9IGttYWxsb2MoZS0+c2l6ZSwgR0ZQX0tFUk5FTCk7CkBAIC0yMTEsNDcgKzE5
NCwxMjUgQEAgaTkxNV9lcnJvcl9wcmludGVyKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9i
dWYgKmUpCiAJcmV0dXJuIHA7CiB9CiAKKy8qIHNpbmdsZSB0aHJlYWRlZCBwYWdlIGFsbG9jYXRv
ciB3aXRoIGEgcmVzZXJ2ZWQgc3Rhc2ggZm9yIGVtZXJnZW5jaWVzICovCitzdGF0aWMgdm9pZCAq
X19hbGxvY19wYWdlKGdmcF90IGdmcCkKK3sKKwlyZXR1cm4gKHZvaWQgKilfX2dldF9mcmVlX3Bh
Z2UoZ2ZwKTsKK30KKworc3RhdGljIHZvaWQgcG9vbF9maW5pKHN0cnVjdCBwYWdldmVjICpwdikK
K3sKKwlwYWdldmVjX3JlbGVhc2UocHYpOworfQorCitzdGF0aWMgaW50IHBvb2xfcmVmaWxsKHN0
cnVjdCBwYWdldmVjICpwdiwgZ2ZwX3QgZ2ZwKQoreworCXdoaWxlIChwYWdldmVjX3NwYWNlKHB2
KSkgeworCQlzdHJ1Y3QgcGFnZSAqcDsKKworCQlwID0gYWxsb2NfcGFnZShnZnApOworCQlpZiAo
IXApCisJCQlyZXR1cm4gLUVOT01FTTsKKworCQlwYWdldmVjX2FkZChwdiwgcCk7CisJfQorCisJ
cmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgcG9vbF9pbml0KHN0cnVjdCBwYWdldmVjICpwdiwg
Z2ZwX3QgZ2ZwKQoreworCWludCBlcnI7CisKKwlwYWdldmVjX2luaXQocHYpOworCisJZXJyID0g
cG9vbF9yZWZpbGwocHYsIGdmcCk7CisJaWYgKGVycikKKwkJcG9vbF9maW5pKHB2KTsKKworCXJl
dHVybiBlcnI7Cit9CisKK3N0YXRpYyB2b2lkICpwb29sX2FsbG9jKHN0cnVjdCBwYWdldmVjICpw
diwgZ2ZwX3QgZ2ZwKQoreworCXZvaWQgKnB0cjsKKworCXB0ciA9IF9fYWxsb2NfcGFnZShnZnAp
OworCWlmIChwdHIpCisJCXJldHVybiBwdHI7CisKKwlpZiAoIXBhZ2V2ZWNfY291bnQocHYpKQor
CQlyZXR1cm4gTlVMTDsKKworCXJldHVybiBwYWdlX2FkZHJlc3MocHYtPnBhZ2VzWy0tcHYtPm5y
XSk7Cit9CisKK3N0YXRpYyB2b2lkIHBvb2xfZnJlZShzdHJ1Y3QgcGFnZXZlYyAqcHYsIHZvaWQg
KmFkZHIpCit7CisJc3RydWN0IHBhZ2UgKnAgPSB2aXJ0X3RvX3BhZ2UoYWRkcik7CisKKwlpZiAo
cGFnZXZlY19zcGFjZShwdikpIHsKKwkJcHYtPnBhZ2VzW3B2LT5ucisrXSA9IHA7CisJCXJldHVy
bjsKKwl9CisKKwlfX2ZyZWVfcGFnZXMocCwgMCk7Cit9CisKICNpZmRlZiBDT05GSUdfRFJNX0k5
MTVfQ09NUFJFU1NfRVJST1IKIAogc3RydWN0IGNvbXByZXNzIHsKKwlzdHJ1Y3QgcGFnZXZlYyBw
b29sOwogCXN0cnVjdCB6X3N0cmVhbV9zIHpzdHJlYW07CiAJdm9pZCAqdG1wOwogfTsKIAogc3Rh
dGljIGJvb2wgY29tcHJlc3NfaW5pdChzdHJ1Y3QgY29tcHJlc3MgKmMpCiB7Ci0Jc3RydWN0IHpf
c3RyZWFtX3MgKnpzdHJlYW0gPSBtZW1zZXQoJmMtPnpzdHJlYW0sIDAsIHNpemVvZihjLT56c3Ry
ZWFtKSk7CisJc3RydWN0IHpfc3RyZWFtX3MgKnpzdHJlYW0gPSAmYy0+enN0cmVhbTsKIAotCXpz
dHJlYW0tPndvcmtzcGFjZSA9Ci0JCWttYWxsb2MoemxpYl9kZWZsYXRlX3dvcmtzcGFjZXNpemUo
TUFYX1dCSVRTLCBNQVhfTUVNX0xFVkVMKSwKLQkJCUdGUF9BVE9NSUMgfCBfX0dGUF9OT1dBUk4p
OwotCWlmICghenN0cmVhbS0+d29ya3NwYWNlKQorCWlmIChwb29sX2luaXQoJmMtPnBvb2wsIEFM
TE9XX0ZBSUwpKQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoemxpYl9kZWZsYXRlSW5pdCh6c3Ry
ZWFtLCBaX0RFRkFVTFRfQ09NUFJFU1NJT04pICE9IFpfT0spIHsKLQkJa2ZyZWUoenN0cmVhbS0+
d29ya3NwYWNlKTsKKwl6c3RyZWFtLT53b3Jrc3BhY2UgPQorCQlrbWFsbG9jKHpsaWJfZGVmbGF0
ZV93b3Jrc3BhY2VzaXplKE1BWF9XQklUUywgTUFYX01FTV9MRVZFTCksCisJCQlBTExPV19GQUlM
KTsKKwlpZiAoIXpzdHJlYW0tPndvcmtzcGFjZSkgeworCQlwb29sX2ZpbmkoJmMtPnBvb2wpOwog
CQlyZXR1cm4gZmFsc2U7CiAJfQogCiAJYy0+dG1wID0gTlVMTDsKIAlpZiAoaTkxNV9oYXNfbWVt
Y3B5X2Zyb21fd2MoKSkKLQkJYy0+dG1wID0gKHZvaWQgKilfX2dldF9mcmVlX3BhZ2UoR0ZQX0FU
T01JQyB8IF9fR0ZQX05PV0FSTik7CisJCWMtPnRtcCA9IHBvb2xfYWxsb2MoJmMtPnBvb2wsIEFM
TE9XX0ZBSUwpOwogCiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyB2b2lkICpjb21wcmVzc19u
ZXh0X3BhZ2Uoc3RydWN0IGRybV9pOTE1X2Vycm9yX29iamVjdCAqZHN0KQorc3RhdGljIGJvb2wg
Y29tcHJlc3Nfc3RhcnQoc3RydWN0IGNvbXByZXNzICpjKQogewotCXVuc2lnbmVkIGxvbmcgcGFn
ZTsKKwlzdHJ1Y3Qgel9zdHJlYW1fcyAqenN0cmVhbSA9ICZjLT56c3RyZWFtOworCXZvaWQgKndv
cmtzcGFjZSA9IHpzdHJlYW0tPndvcmtzcGFjZTsKKworCW1lbXNldCh6c3RyZWFtLCAwLCBzaXpl
b2YoKnpzdHJlYW0pKTsKKwl6c3RyZWFtLT53b3Jrc3BhY2UgPSB3b3Jrc3BhY2U7CisKKwlyZXR1
cm4gemxpYl9kZWZsYXRlSW5pdCh6c3RyZWFtLCBaX0RFRkFVTFRfQ09NUFJFU1NJT04pID09IFpf
T0s7Cit9CisKK3N0YXRpYyB2b2lkICpjb21wcmVzc19uZXh0X3BhZ2Uoc3RydWN0IGNvbXByZXNz
ICpjLAorCQkJCXN0cnVjdCBkcm1faTkxNV9lcnJvcl9vYmplY3QgKmRzdCkKK3sKKwl2b2lkICpw
YWdlOwogCiAJaWYgKGRzdC0+cGFnZV9jb3VudCA+PSBkc3QtPm51bV9wYWdlcykKIAkJcmV0dXJu
IEVSUl9QVFIoLUVOT1NQQyk7CiAKLQlwYWdlID0gX19nZXRfZnJlZV9wYWdlKEdGUF9BVE9NSUMg
fCBfX0dGUF9OT1dBUk4pOworCXBhZ2UgPSBwb29sX2FsbG9jKCZjLT5wb29sLCBBVE9NSUNfTUFZ
RkFJTCk7CiAJaWYgKCFwYWdlKQogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKIAotCXJldHVy
biBkc3QtPnBhZ2VzW2RzdC0+cGFnZV9jb3VudCsrXSA9ICh2b2lkICopcGFnZTsKKwlyZXR1cm4g
ZHN0LT5wYWdlc1tkc3QtPnBhZ2VfY291bnQrK10gPSBwYWdlOwogfQogCiBzdGF0aWMgaW50IGNv
bXByZXNzX3BhZ2Uoc3RydWN0IGNvbXByZXNzICpjLApAQCAtMjY3LDcgKzMyOCw3IEBAIHN0YXRp
YyBpbnQgY29tcHJlc3NfcGFnZShzdHJ1Y3QgY29tcHJlc3MgKmMsCiAKIAlkbyB7CiAJCWlmICh6
c3RyZWFtLT5hdmFpbF9vdXQgPT0gMCkgewotCQkJenN0cmVhbS0+bmV4dF9vdXQgPSBjb21wcmVz
c19uZXh0X3BhZ2UoZHN0KTsKKwkJCXpzdHJlYW0tPm5leHRfb3V0ID0gY29tcHJlc3NfbmV4dF9w
YWdlKGMsIGRzdCk7CiAJCQlpZiAoSVNfRVJSKHpzdHJlYW0tPm5leHRfb3V0KSkKIAkJCQlyZXR1
cm4gUFRSX0VSUih6c3RyZWFtLT5uZXh0X291dCk7CiAKQEAgLTI5NSw3ICszNTYsNyBAQCBzdGF0
aWMgaW50IGNvbXByZXNzX2ZsdXNoKHN0cnVjdCBjb21wcmVzcyAqYywKIAlkbyB7CiAJCXN3aXRj
aCAoemxpYl9kZWZsYXRlKHpzdHJlYW0sIFpfRklOSVNIKSkgewogCQljYXNlIFpfT0s6IC8qIG1v
cmUgc3BhY2UgcmVxdWVzdGVkICovCi0JCQl6c3RyZWFtLT5uZXh0X291dCA9IGNvbXByZXNzX25l
eHRfcGFnZShkc3QpOworCQkJenN0cmVhbS0+bmV4dF9vdXQgPSBjb21wcmVzc19uZXh0X3BhZ2Uo
YywgZHN0KTsKIAkJCWlmIChJU19FUlIoenN0cmVhbS0+bmV4dF9vdXQpKQogCQkJCXJldHVybiBQ
VFJfRVJSKHpzdHJlYW0tPm5leHRfb3V0KTsKIApAQCAtMzE2LDE1ICszNzcsMTcgQEAgc3RhdGlj
IGludCBjb21wcmVzc19mbHVzaChzdHJ1Y3QgY29tcHJlc3MgKmMsCiAJcmV0dXJuIDA7CiB9CiAK
LXN0YXRpYyB2b2lkIGNvbXByZXNzX2Zpbmkoc3RydWN0IGNvbXByZXNzICpjLAotCQkJICBzdHJ1
Y3QgZHJtX2k5MTVfZXJyb3Jfb2JqZWN0ICpkc3QpCitzdGF0aWMgdm9pZCBjb21wcmVzc19maW5p
c2goc3RydWN0IGNvbXByZXNzICpjKQogewotCXN0cnVjdCB6X3N0cmVhbV9zICp6c3RyZWFtID0g
JmMtPnpzdHJlYW07CisJemxpYl9kZWZsYXRlRW5kKCZjLT56c3RyZWFtKTsKK30KIAotCXpsaWJf
ZGVmbGF0ZUVuZCh6c3RyZWFtKTsKLQlrZnJlZSh6c3RyZWFtLT53b3Jrc3BhY2UpOworc3RhdGlj
IHZvaWQgY29tcHJlc3NfZmluaShzdHJ1Y3QgY29tcHJlc3MgKmMpCit7CisJa2ZyZWUoYy0+enN0
cmVhbS53b3Jrc3BhY2UpOwogCWlmIChjLT50bXApCi0JCWZyZWVfcGFnZSgodW5zaWduZWQgbG9u
ZyljLT50bXApOworCQlwb29sX2ZyZWUoJmMtPnBvb2wsIGMtPnRtcCk7CisJcG9vbF9maW5pKCZj
LT5wb29sKTsKIH0KIAogc3RhdGljIHZvaWQgZXJyX2NvbXByZXNzaW9uX21hcmtlcihzdHJ1Y3Qg
ZHJtX2k5MTVfZXJyb3Jfc3RhdGVfYnVmICptKQpAQCAtMzM1LDkgKzM5OCwxNSBAQCBzdGF0aWMg
dm9pZCBlcnJfY29tcHJlc3Npb25fbWFya2VyKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9i
dWYgKm0pCiAjZWxzZQogCiBzdHJ1Y3QgY29tcHJlc3MgeworCXN0cnVjdCBwYWdldmVjIHBvb2w7
CiB9OwogCiBzdGF0aWMgYm9vbCBjb21wcmVzc19pbml0KHN0cnVjdCBjb21wcmVzcyAqYykKK3sK
KwlyZXR1cm4gcG9vbF9pbml0KCZjLT5wb29sLCBBTExPV19GQUlMKSA9PSAwOworfQorCitzdGF0
aWMgYm9vbCBjb21wcmVzc19zdGFydChzdHJ1Y3QgY29tcHJlc3MgKmMpCiB7CiAJcmV0dXJuIHRy
dWU7CiB9CkBAIC0zNDYsMTQgKzQxNSwxMiBAQCBzdGF0aWMgaW50IGNvbXByZXNzX3BhZ2Uoc3Ry
dWN0IGNvbXByZXNzICpjLAogCQkJIHZvaWQgKnNyYywKIAkJCSBzdHJ1Y3QgZHJtX2k5MTVfZXJy
b3Jfb2JqZWN0ICpkc3QpCiB7Ci0JdW5zaWduZWQgbG9uZyBwYWdlOwogCXZvaWQgKnB0cjsKIAot
CXBhZ2UgPSBfX2dldF9mcmVlX3BhZ2UoR0ZQX0FUT01JQyB8IF9fR0ZQX05PV0FSTik7Ci0JaWYg
KCFwYWdlKQorCXB0ciA9IHBvb2xfYWxsb2MoJmMtPnBvb2wsIEFUT01JQ19NQVlGQUlMKTsKKwlp
ZiAoIXB0cikKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQlwdHIgPSAodm9pZCAqKXBhZ2U7CiAJaWYg
KCFpOTE1X21lbWNweV9mcm9tX3djKHB0ciwgc3JjLCBQQUdFX1NJWkUpKQogCQltZW1jcHkocHRy
LCBzcmMsIFBBR0VfU0laRSk7CiAJZHN0LT5wYWdlc1tkc3QtPnBhZ2VfY291bnQrK10gPSBwdHI7
CkBAIC0zNjcsOSArNDM0LDEzIEBAIHN0YXRpYyBpbnQgY29tcHJlc3NfZmx1c2goc3RydWN0IGNv
bXByZXNzICpjLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBjb21wcmVzc19maW5pKHN0
cnVjdCBjb21wcmVzcyAqYywKLQkJCSAgc3RydWN0IGRybV9pOTE1X2Vycm9yX29iamVjdCAqZHN0
KQorc3RhdGljIHZvaWQgY29tcHJlc3NfZmluaXNoKHN0cnVjdCBjb21wcmVzcyAqYykKK3sKK30K
Kworc3RhdGljIHZvaWQgY29tcHJlc3NfZmluaShzdHJ1Y3QgY29tcHJlc3MgKmMpCiB7CisJcG9v
bF9maW5pKCZjLT5wb29sKTsKIH0KIAogc3RhdGljIHZvaWQgZXJyX2NvbXByZXNzaW9uX21hcmtl
cihzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfc3RhdGVfYnVmICptKQpAQCAtMzc5LDM2ICs0NTAsNiBA
QCBzdGF0aWMgdm9pZCBlcnJfY29tcHJlc3Npb25fbWFya2VyKHN0cnVjdCBkcm1faTkxNV9lcnJv
cl9zdGF0ZV9idWYgKm0pCiAKICNlbmRpZgogCi1zdGF0aWMgdm9pZCBwcmludF9lcnJvcl9idWZm
ZXJzKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9zdGF0ZV9idWYgKm0sCi0JCQkJY29uc3QgY2hhciAq
bmFtZSwKLQkJCQlzdHJ1Y3QgZHJtX2k5MTVfZXJyb3JfYnVmZmVyICplcnIsCi0JCQkJaW50IGNv
dW50KQotewotCWVycl9wcmludGYobSwgIiVzIFslZF06XG4iLCBuYW1lLCBjb3VudCk7Ci0KLQl3
aGlsZSAoY291bnQtLSkgewotCQllcnJfcHJpbnRmKG0sICIgICAgJTA4eF8lMDh4ICU4dSAlMDJ4
ICUwMngiLAotCQkJICAgdXBwZXJfMzJfYml0cyhlcnItPmd0dF9vZmZzZXQpLAotCQkJICAgbG93
ZXJfMzJfYml0cyhlcnItPmd0dF9vZmZzZXQpLAotCQkJICAgZXJyLT5zaXplLAotCQkJICAgZXJy
LT5yZWFkX2RvbWFpbnMsCi0JCQkgICBlcnItPndyaXRlX2RvbWFpbik7Ci0JCWVycl9wdXRzKG0s
IHRpbGluZ19mbGFnKGVyci0+dGlsaW5nKSk7Ci0JCWVycl9wdXRzKG0sIGRpcnR5X2ZsYWcoZXJy
LT5kaXJ0eSkpOwotCQllcnJfcHV0cyhtLCBwdXJnZWFibGVfZmxhZyhlcnItPnB1cmdlYWJsZSkp
OwotCQllcnJfcHV0cyhtLCBlcnItPnVzZXJwdHIgPyAiIHVzZXJwdHIiIDogIiIpOwotCQllcnJf
cHV0cyhtLCBpOTE1X2NhY2hlX2xldmVsX3N0cihtLT5pOTE1LCBlcnItPmNhY2hlX2xldmVsKSk7
Ci0KLQkJaWYgKGVyci0+bmFtZSkKLQkJCWVycl9wcmludGYobSwgIiAobmFtZTogJWQpIiwgZXJy
LT5uYW1lKTsKLQkJaWYgKGVyci0+ZmVuY2VfcmVnICE9IEk5MTVfRkVOQ0VfUkVHX05PTkUpCi0J
CQllcnJfcHJpbnRmKG0sICIgKGZlbmNlOiAlZCkiLCBlcnItPmZlbmNlX3JlZyk7Ci0KLQkJZXJy
X3B1dHMobSwgIlxuIik7Ci0JCWVycisrOwotCX0KLX0KLQogc3RhdGljIHZvaWQgZXJyb3JfcHJp
bnRfaW5zdGRvbmUoc3RydWN0IGRybV9pOTE1X2Vycm9yX3N0YXRlX2J1ZiAqbSwKIAkJCQkgY29u
c3Qgc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUpCiB7CkBAIC03MzQsMzMgKzc3NSw2
IEBAIHN0YXRpYyB2b2lkIF9fZXJyX3ByaW50X3RvX3NnbChzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jf
c3RhdGVfYnVmICptLAogCQkJZXJyb3JfcHJpbnRfZW5naW5lKG0sICZlcnJvci0+ZW5naW5lW2ld
LCBlcnJvci0+ZXBvY2gpOwogCX0KIAotCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGVycm9y
LT5hY3RpdmVfdm0pOyBpKyspIHsKLQkJY2hhciBidWZbMTI4XTsKLQkJaW50IGxlbiwgZmlyc3Qg
PSAxOwotCi0JCWlmICghZXJyb3ItPmFjdGl2ZV92bVtpXSkKLQkJCWJyZWFrOwotCi0JCWxlbiA9
IHNjbnByaW50ZihidWYsIHNpemVvZihidWYpLCAiQWN0aXZlICgiKTsKLQkJZm9yIChqID0gMDsg
aiA8IEFSUkFZX1NJWkUoZXJyb3ItPmVuZ2luZSk7IGorKykgewotCQkJaWYgKGVycm9yLT5lbmdp
bmVbal0udm0gIT0gZXJyb3ItPmFjdGl2ZV92bVtpXSkKLQkJCQljb250aW51ZTsKLQotCQkJbGVu
ICs9IHNjbnByaW50ZihidWYgKyBsZW4sIHNpemVvZihidWYpLCAiJXMlcyIsCi0JCQkJCSBmaXJz
dCA/ICIiIDogIiwgIiwKLQkJCQkJIG0tPmk5MTUtPmVuZ2luZVtqXS0+bmFtZSk7Ci0JCQlmaXJz
dCA9IDA7Ci0JCX0KLQkJc2NucHJpbnRmKGJ1ZiArIGxlbiwgc2l6ZW9mKGJ1ZiksICIpIik7Ci0J
CXByaW50X2Vycm9yX2J1ZmZlcnMobSwgYnVmLAotCQkJCSAgICBlcnJvci0+YWN0aXZlX2JvW2ld
LAotCQkJCSAgICBlcnJvci0+YWN0aXZlX2JvX2NvdW50W2ldKTsKLQl9Ci0KLQlwcmludF9lcnJv
cl9idWZmZXJzKG0sICJQaW5uZWQgKGdsb2JhbCkiLAotCQkJICAgIGVycm9yLT5waW5uZWRfYm8s
Ci0JCQkgICAgZXJyb3ItPnBpbm5lZF9ib19jb3VudCk7Ci0KIAlmb3IgKGkgPSAwOyBpIDwgQVJS
QVlfU0laRShlcnJvci0+ZW5naW5lKTsgaSsrKSB7CiAJCWNvbnN0IHN0cnVjdCBkcm1faTkxNV9l
cnJvcl9lbmdpbmUgKmVlID0gJmVycm9yLT5lbmdpbmVbaV07CiAKQEAgLTk3NCwxMCArOTg4LDYg
QEAgdm9pZCBfX2k5MTVfZ3B1X3N0YXRlX2ZyZWUoc3RydWN0IGtyZWYgKmVycm9yX3JlZikKIAkJ
a2ZyZWUoZWUtPnJlcXVlc3RzKTsKIAl9CiAKLQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShl
cnJvci0+YWN0aXZlX2JvKTsgaSsrKQotCQlrZnJlZShlcnJvci0+YWN0aXZlX2JvW2ldKTsKLQlr
ZnJlZShlcnJvci0+cGlubmVkX2JvKTsKLQogCWtmcmVlKGVycm9yLT5vdmVybGF5KTsKIAlrZnJl
ZShlcnJvci0+ZGlzcGxheSk7CiAKQEAgLTk5MCwxMiArMTAwMCwxMiBAQCB2b2lkIF9faTkxNV9n
cHVfc3RhdGVfZnJlZShzdHJ1Y3Qga3JlZiAqZXJyb3JfcmVmKQogCiBzdGF0aWMgc3RydWN0IGRy
bV9pOTE1X2Vycm9yX29iamVjdCAqCiBpOTE1X2Vycm9yX29iamVjdF9jcmVhdGUoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCQkgc3RydWN0IGk5MTVfdm1hICp2bWEpCisJCQkgc3Ry
dWN0IGk5MTVfdm1hICp2bWEsCisJCQkgc3RydWN0IGNvbXByZXNzICpjb21wcmVzcykKIHsKIAlz
dHJ1Y3QgaTkxNV9nZ3R0ICpnZ3R0ID0gJmk5MTUtPmdndHQ7CiAJY29uc3QgdTY0IHNsb3QgPSBn
Z3R0LT5lcnJvcl9jYXB0dXJlLnN0YXJ0OwogCXN0cnVjdCBkcm1faTkxNV9lcnJvcl9vYmplY3Qg
KmRzdDsKLQlzdHJ1Y3QgY29tcHJlc3MgY29tcHJlc3M7CiAJdW5zaWduZWQgbG9uZyBudW1fcGFn
ZXM7CiAJc3RydWN0IHNndF9pdGVyIGl0ZXI7CiAJZG1hX2FkZHJfdCBkbWE7CkBAIC0xMDA2LDIy
ICsxMDE2LDIxIEBAIGk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKIAogCW51bV9wYWdlcyA9IG1pbl90KHU2NCwgdm1hLT5zaXplLCB2bWEtPm9i
ai0+YmFzZS5zaXplKSA+PiBQQUdFX1NISUZUOwogCW51bV9wYWdlcyA9IERJVl9ST1VORF9VUCgx
MCAqIG51bV9wYWdlcywgOCk7IC8qIHdvcnN0Y2FzZSB6bGliIGdyb3d0aCAqLwotCWRzdCA9IGtt
YWxsb2Moc2l6ZW9mKCpkc3QpICsgbnVtX3BhZ2VzICogc2l6ZW9mKHUzMiAqKSwKLQkJICAgICAg
R0ZQX0FUT01JQyB8IF9fR0ZQX05PV0FSTik7CisJZHN0ID0ga21hbGxvYyhzaXplb2YoKmRzdCkg
KyBudW1fcGFnZXMgKiBzaXplb2YodTMyICopLCBBVE9NSUNfTUFZRkFJTCk7CiAJaWYgKCFkc3Qp
CiAJCXJldHVybiBOVUxMOwogCisJaWYgKCFjb21wcmVzc19zdGFydChjb21wcmVzcykpIHsKKwkJ
a2ZyZWUoZHN0KTsKKwkJcmV0dXJuIE5VTEw7CisJfQorCiAJZHN0LT5ndHRfb2Zmc2V0ID0gdm1h
LT5ub2RlLnN0YXJ0OwogCWRzdC0+Z3R0X3NpemUgPSB2bWEtPm5vZGUuc2l6ZTsKIAlkc3QtPm51
bV9wYWdlcyA9IG51bV9wYWdlczsKIAlkc3QtPnBhZ2VfY291bnQgPSAwOwogCWRzdC0+dW51c2Vk
ID0gMDsKIAotCWlmICghY29tcHJlc3NfaW5pdCgmY29tcHJlc3MpKSB7Ci0JCWtmcmVlKGRzdCk7
Ci0JCXJldHVybiBOVUxMOwotCX0KLQogCXJldCA9IC1FSU5WQUw7CiAJZm9yX2VhY2hfc2d0X2Rt
YShkbWEsIGl0ZXIsIHZtYS0+cGFnZXMpIHsKIAkJdm9pZCBfX2lvbWVtICpzOwpAQCAtMTAyOSw2
OSArMTAzOCwyMyBAQCBpOTE1X2Vycm9yX29iamVjdF9jcmVhdGUoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsCiAJCWdndHQtPnZtLmluc2VydF9wYWdlKCZnZ3R0LT52bSwgZG1hLCBzbG90
LCBJOTE1X0NBQ0hFX05PTkUsIDApOwogCiAJCXMgPSBpb19tYXBwaW5nX21hcF9hdG9taWNfd2Mo
JmdndHQtPmlvbWFwLCBzbG90KTsKLQkJcmV0ID0gY29tcHJlc3NfcGFnZSgmY29tcHJlc3MsICh2
b2lkICBfX2ZvcmNlICopcywgZHN0KTsKKwkJcmV0ID0gY29tcHJlc3NfcGFnZShjb21wcmVzcywg
KHZvaWQgIF9fZm9yY2UgKilzLCBkc3QpOwogCQlpb19tYXBwaW5nX3VubWFwX2F0b21pYyhzKTsK
IAkJaWYgKHJldCkKIAkJCWJyZWFrOwogCX0KIAotCWlmIChyZXQgfHwgY29tcHJlc3NfZmx1c2go
JmNvbXByZXNzLCBkc3QpKSB7CisJaWYgKHJldCB8fCBjb21wcmVzc19mbHVzaChjb21wcmVzcywg
ZHN0KSkgewogCQl3aGlsZSAoZHN0LT5wYWdlX2NvdW50LS0pCi0JCQlmcmVlX3BhZ2UoKHVuc2ln
bmVkIGxvbmcpZHN0LT5wYWdlc1tkc3QtPnBhZ2VfY291bnRdKTsKKwkJCXBvb2xfZnJlZSgmY29t
cHJlc3MtPnBvb2wsIGRzdC0+cGFnZXNbZHN0LT5wYWdlX2NvdW50XSk7CiAJCWtmcmVlKGRzdCk7
CiAJCWRzdCA9IE5VTEw7CiAJfQorCWNvbXByZXNzX2ZpbmlzaChjb21wcmVzcyk7CiAKLQljb21w
cmVzc19maW5pKCZjb21wcmVzcywgZHN0KTsKIAlyZXR1cm4gZHN0OwogfQogCi1zdGF0aWMgdm9p
ZCBjYXB0dXJlX2JvKHN0cnVjdCBkcm1faTkxNV9lcnJvcl9idWZmZXIgKmVyciwKLQkJICAgICAg
IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQotewotCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpv
YmogPSB2bWEtPm9iajsKLQotCWVyci0+c2l6ZSA9IG9iai0+YmFzZS5zaXplOwotCWVyci0+bmFt
ZSA9IG9iai0+YmFzZS5uYW1lOwotCi0JZXJyLT5ndHRfb2Zmc2V0ID0gdm1hLT5ub2RlLnN0YXJ0
OwotCWVyci0+cmVhZF9kb21haW5zID0gb2JqLT5yZWFkX2RvbWFpbnM7Ci0JZXJyLT53cml0ZV9k
b21haW4gPSBvYmotPndyaXRlX2RvbWFpbjsKLQllcnItPmZlbmNlX3JlZyA9IHZtYS0+ZmVuY2Ug
PyB2bWEtPmZlbmNlLT5pZCA6IC0xOwotCWVyci0+dGlsaW5nID0gaTkxNV9nZW1fb2JqZWN0X2dl
dF90aWxpbmcob2JqKTsKLQllcnItPmRpcnR5ID0gb2JqLT5tbS5kaXJ0eTsKLQllcnItPnB1cmdl
YWJsZSA9IG9iai0+bW0ubWFkdiAhPSBJOTE1X01BRFZfV0lMTE5FRUQ7Ci0JZXJyLT51c2VycHRy
ID0gb2JqLT51c2VycHRyLm1tICE9IE5VTEw7Ci0JZXJyLT5jYWNoZV9sZXZlbCA9IG9iai0+Y2Fj
aGVfbGV2ZWw7Ci19Ci0KLXN0YXRpYyB1MzIgY2FwdHVyZV9lcnJvcl9ibyhzdHJ1Y3QgZHJtX2k5
MTVfZXJyb3JfYnVmZmVyICplcnIsCi0JCQkgICAgaW50IGNvdW50LCBzdHJ1Y3QgbGlzdF9oZWFk
ICpoZWFkLAotCQkJICAgIHVuc2lnbmVkIGludCBmbGFncykKLSNkZWZpbmUgQUNUSVZFX09OTFkg
QklUKDApCi0jZGVmaW5lIFBJTk5FRF9PTkxZIEJJVCgxKQotewotCXN0cnVjdCBpOTE1X3ZtYSAq
dm1hOwotCWludCBpID0gMDsKLQotCWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCBoZWFkLCB2bV9s
aW5rKSB7Ci0JCWlmICghdm1hLT5vYmopCi0JCQljb250aW51ZTsKLQotCQlpZiAoZmxhZ3MgJiBB
Q1RJVkVfT05MWSAmJiAhaTkxNV92bWFfaXNfYWN0aXZlKHZtYSkpCi0JCQljb250aW51ZTsKLQot
CQlpZiAoZmxhZ3MgJiBQSU5ORURfT05MWSAmJiAhaTkxNV92bWFfaXNfcGlubmVkKHZtYSkpCi0J
CQljb250aW51ZTsKLQotCQljYXB0dXJlX2JvKGVycisrLCB2bWEpOwotCQlpZiAoKytpID09IGNv
dW50KQotCQkJYnJlYWs7Ci0JfQotCi0JcmV0dXJuIGk7Ci19Ci0KIC8qCiAgKiBHZW5lcmF0ZSBh
IHNlbWktdW5pcXVlIGVycm9yIGNvZGUuIFRoZSBjb2RlIGlzIG5vdCBtZWFudCB0byBoYXZlIG1l
YW5pbmcsIFRoZQogICogY29kZSdzIG9ubHkgcHVycG9zZSBpcyB0byB0cnkgdG8gcHJldmVudCBm
YWxzZSBkdXBsaWNhdGVkIGJ1ZyByZXBvcnRzIGJ5CkBAIC0xMjgxLDcgKzEyNDQsNyBAQCBzdGF0
aWMgdm9pZCBlbmdpbmVfcmVjb3JkX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKIAlpZiAoIWNvdW50KQogCQlyZXR1cm47CiAKLQllZS0+cmVxdWVzdHMgPSBrY2FsbG9j
KGNvdW50LCBzaXplb2YoKmVlLT5yZXF1ZXN0cyksIEdGUF9BVE9NSUMpOworCWVlLT5yZXF1ZXN0
cyA9IGtjYWxsb2MoY291bnQsIHNpemVvZigqZWUtPnJlcXVlc3RzKSwgQVRPTUlDX01BWUZBSUwp
OwogCWlmICghZWUtPnJlcXVlc3RzKQogCQlyZXR1cm47CiAKQEAgLTEzNDksOCArMTMxMiwxMCBA
QCBzdGF0aWMgdm9pZCByZWNvcmRfY29udGV4dChzdHJ1Y3QgZHJtX2k5MTVfZXJyb3JfY29udGV4
dCAqZSwKIAllLT5hY3RpdmUgPSBhdG9taWNfcmVhZCgmY3R4LT5hY3RpdmVfY291bnQpOwogfQog
Ci1zdGF0aWMgdm9pZCByZXF1ZXN0X3JlY29yZF91c2VyX2JvKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJlcXVlc3QsCi0JCQkJICAgc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUpCitzdGF0
aWMgdm9pZAorcmVxdWVzdF9yZWNvcmRfdXNlcl9ibyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1
ZXN0LAorCQkgICAgICAgc3RydWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUsCisJCSAgICAg
ICBzdHJ1Y3QgY29tcHJlc3MgKmNvbXByZXNzKQogewogCXN0cnVjdCBpOTE1X2NhcHR1cmVfbGlz
dCAqYzsKIAlzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jfb2JqZWN0ICoqYm87CkBAIC0xMzYyLDE4ICsx
MzI3LDIwIEBAIHN0YXRpYyB2b2lkIHJlcXVlc3RfcmVjb3JkX3VzZXJfYm8oc3RydWN0IGk5MTVf
cmVxdWVzdCAqcmVxdWVzdCwKIAlpZiAoIW1heCkKIAkJcmV0dXJuOwogCi0JYm8gPSBrbWFsbG9j
X2FycmF5KG1heCwgc2l6ZW9mKCpibyksIEdGUF9BVE9NSUMpOworCWJvID0ga21hbGxvY19hcnJh
eShtYXgsIHNpemVvZigqYm8pLCBBVE9NSUNfTUFZRkFJTCk7CiAJaWYgKCFibykgewogCQkvKiBJ
ZiB3ZSBjYW4ndCBjYXB0dXJlIGV2ZXJ5dGhpbmcsIHRyeSB0byBjYXB0dXJlIHNvbWV0aGluZy4g
Ki8KIAkJbWF4ID0gbWluX3QobG9uZywgbWF4LCBQQUdFX1NJWkUgLyBzaXplb2YoKmJvKSk7Ci0J
CWJvID0ga21hbGxvY19hcnJheShtYXgsIHNpemVvZigqYm8pLCBHRlBfQVRPTUlDKTsKKwkJYm8g
PSBrbWFsbG9jX2FycmF5KG1heCwgc2l6ZW9mKCpibyksIEFUT01JQ19NQVlGQUlMKTsKIAl9CiAJ
aWYgKCFibykKIAkJcmV0dXJuOwogCiAJY291bnQgPSAwOwogCWZvciAoYyA9IHJlcXVlc3QtPmNh
cHR1cmVfbGlzdDsgYzsgYyA9IGMtPm5leHQpIHsKLQkJYm9bY291bnRdID0gaTkxNV9lcnJvcl9v
YmplY3RfY3JlYXRlKHJlcXVlc3QtPmk5MTUsIGMtPnZtYSk7CisJCWJvW2NvdW50XSA9IGk5MTVf
ZXJyb3Jfb2JqZWN0X2NyZWF0ZShyZXF1ZXN0LT5pOTE1LAorCQkJCQkJICAgICBjLT52bWEsCisJ
CQkJCQkgICAgIGNvbXByZXNzKTsKIAkJaWYgKCFib1tjb3VudF0pCiAJCQlicmVhazsKIAkJaWYg
KCsrY291bnQgPT0gbWF4KQpAQCAtMTM4Niw3ICsxMzUzLDggQEAgc3RhdGljIHZvaWQgcmVxdWVz
dF9yZWNvcmRfdXNlcl9ibyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LAogCiBzdGF0aWMg
c3RydWN0IGRybV9pOTE1X2Vycm9yX29iamVjdCAqCiBjYXB0dXJlX29iamVjdChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JICAgICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmopCisJICAgICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCisJICAg
ICAgIHN0cnVjdCBjb21wcmVzcyAqY29tcHJlc3MpCiB7CiAJaWYgKG9iaiAmJiBpOTE1X2dlbV9v
YmplY3RfaGFzX3BhZ2VzKG9iaikpIHsKIAkJc3RydWN0IGk5MTVfdm1hIGZha2UgPSB7CkBAIC0x
Mzk2LDEzICsxMzY0LDE0IEBAIGNhcHR1cmVfb2JqZWN0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIAkJCS5vYmogPSBvYmosCiAJCX07CiAKLQkJcmV0dXJuIGk5MTVfZXJyb3Jf
b2JqZWN0X2NyZWF0ZShkZXZfcHJpdiwgJmZha2UpOworCQlyZXR1cm4gaTkxNV9lcnJvcl9vYmpl
Y3RfY3JlYXRlKGRldl9wcml2LCAmZmFrZSwgY29tcHJlc3MpOwogCX0gZWxzZSB7CiAJCXJldHVy
biBOVUxMOwogCX0KIH0KIAotc3RhdGljIHZvaWQgZ2VtX3JlY29yZF9yaW5ncyhzdHJ1Y3QgaTkx
NV9ncHVfc3RhdGUgKmVycm9yKQorc3RhdGljIHZvaWQKK2dlbV9yZWNvcmRfcmluZ3Moc3RydWN0
IGk5MTVfZ3B1X3N0YXRlICplcnJvciwgc3RydWN0IGNvbXByZXNzICpjb21wcmVzcykKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGVycm9yLT5pOTE1OwogCWludCBpOwpAQCAt
MTQyMCw2ICsxMzg5LDkgQEAgc3RhdGljIHZvaWQgZ2VtX3JlY29yZF9yaW5ncyhzdHJ1Y3QgaTkx
NV9ncHVfc3RhdGUgKmVycm9yKQogCiAJCWVlLT5lbmdpbmVfaWQgPSBpOwogCisJCS8qIFJlZmls
bCBvdXIgcGFnZSBwb29sIGJlZm9yZSBlbnRlcmluZyBhdG9taWMgc2VjdGlvbiAqLworCQlwb29s
X3JlZmlsbCgmY29tcHJlc3MtPnBvb2wsIEFMTE9XX0ZBSUwpOworCiAJCWVycm9yX3JlY29yZF9l
bmdpbmVfcmVnaXN0ZXJzKGVycm9yLCBlbmdpbmUsIGVlKTsKIAkJZXJyb3JfcmVjb3JkX2VuZ2lu
ZV9leGVjbGlzdHMoZW5naW5lLCBlZSk7CiAKQEAgLTE0MjksOCArMTQwMSw2IEBAIHN0YXRpYyB2
b2lkIGdlbV9yZWNvcmRfcmluZ3Moc3RydWN0IGk5MTVfZ3B1X3N0YXRlICplcnJvcikKIAkJCXN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHggPSByZXF1ZXN0LT5nZW1fY29udGV4dDsKIAkJCXN0
cnVjdCBpbnRlbF9yaW5nICpyaW5nID0gcmVxdWVzdC0+cmluZzsKIAotCQkJZWUtPnZtID0gcmVx
dWVzdC0+aHdfY29udGV4dC0+dm07Ci0KIAkJCXJlY29yZF9jb250ZXh0KCZlZS0+Y29udGV4dCwg
Y3R4KTsKIAogCQkJLyogV2UgbmVlZCB0byBjb3B5IHRoZXNlIHRvIGFuIGFub255bW91cyBidWZm
ZXIKQEAgLTE0MzgsMTcgKzE0MDgsMjEgQEAgc3RhdGljIHZvaWQgZ2VtX3JlY29yZF9yaW5ncyhz
dHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yKQogCQkJICogYnkgdXNlcnNwYWNlLgogCQkJICov
CiAJCQllZS0+YmF0Y2hidWZmZXIgPQotCQkJCWk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0ZShpOTE1
LCByZXF1ZXN0LT5iYXRjaCk7CisJCQkJaTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCisJ
CQkJCQkJIHJlcXVlc3QtPmJhdGNoLAorCQkJCQkJCSBjb21wcmVzcyk7CiAKIAkJCWlmIChIQVNf
QlJPS0VOX0NTX1RMQihpOTE1KSkKIAkJCQllZS0+d2FfYmF0Y2hidWZmZXIgPQogCQkJCSAgaTkx
NV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCi0JCQkJCQkJICAgZW5naW5lLT5ndC0+c2NyYXRj
aCk7Ci0JCQlyZXF1ZXN0X3JlY29yZF91c2VyX2JvKHJlcXVlc3QsIGVlKTsKKwkJCQkJCQkgICBl
bmdpbmUtPmd0LT5zY3JhdGNoLAorCQkJCQkJCSAgIGNvbXByZXNzKTsKKwkJCXJlcXVlc3RfcmVj
b3JkX3VzZXJfYm8ocmVxdWVzdCwgZWUsIGNvbXByZXNzKTsKIAogCQkJZWUtPmN0eCA9CiAJCQkJ
aTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsCi0JCQkJCQkJIHJlcXVlc3QtPmh3X2NvbnRl
eHQtPnN0YXRlKTsKKwkJCQkJCQkgcmVxdWVzdC0+aHdfY29udGV4dC0+c3RhdGUsCisJCQkJCQkJ
IGNvbXByZXNzKTsKIAogCQkJZXJyb3ItPnNpbXVsYXRlZCB8PQogCQkJCWk5MTVfZ2VtX2NvbnRl
eHRfbm9fZXJyb3JfY2FwdHVyZShjdHgpOwpAQCAtMTQ2MCw3ICsxNDM0LDkgQEAgc3RhdGljIHZv
aWQgZ2VtX3JlY29yZF9yaW5ncyhzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yKQogCQkJZWUt
PmNwdV9yaW5nX2hlYWQgPSByaW5nLT5oZWFkOwogCQkJZWUtPmNwdV9yaW5nX3RhaWwgPSByaW5n
LT50YWlsOwogCQkJZWUtPnJpbmdidWZmZXIgPQotCQkJCWk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0
ZShpOTE1LCByaW5nLT52bWEpOworCQkJCWk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0ZShpOTE1LAor
CQkJCQkJCSByaW5nLT52bWEsCisJCQkJCQkJIGNvbXByZXNzKTsKIAogCQkJZW5naW5lX3JlY29y
ZF9yZXF1ZXN0cyhlbmdpbmUsIHJlcXVlc3QsIGVlKTsKIAkJfQpAQCAtMTQ2OCw4OSArMTQ0NCwy
MSBAQCBzdGF0aWMgdm9pZCBnZW1fcmVjb3JkX3JpbmdzKHN0cnVjdCBpOTE1X2dwdV9zdGF0ZSAq
ZXJyb3IpCiAKIAkJZWUtPmh3c19wYWdlID0KIAkJCWk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0ZShp
OTE1LAotCQkJCQkJIGVuZ2luZS0+c3RhdHVzX3BhZ2Uudm1hKTsKLQotCQllZS0+d2FfY3R4ID0g
aTkxNV9lcnJvcl9vYmplY3RfY3JlYXRlKGk5MTUsIGVuZ2luZS0+d2FfY3R4LnZtYSk7Ci0KLQkJ
ZWUtPmRlZmF1bHRfc3RhdGUgPSBjYXB0dXJlX29iamVjdChpOTE1LCBlbmdpbmUtPmRlZmF1bHRf
c3RhdGUpOwotCX0KLX0KLQotc3RhdGljIHZvaWQgZ2VtX2NhcHR1cmVfdm0oc3RydWN0IGk5MTVf
Z3B1X3N0YXRlICplcnJvciwKLQkJCSAgIHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZtLAot
CQkJICAgaW50IGlkeCkKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfZXJyb3JfYnVmZmVyICphY3RpdmVf
Ym87Ci0Jc3RydWN0IGk5MTVfdm1hICp2bWE7Ci0JaW50IGNvdW50OwotCi0JY291bnQgPSAwOwot
CWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCAmdm0tPmJvdW5kX2xpc3QsIHZtX2xpbmspCi0JCWlm
IChpOTE1X3ZtYV9pc19hY3RpdmUodm1hKSkKLQkJCWNvdW50Kys7Ci0KLQlhY3RpdmVfYm8gPSBO
VUxMOwotCWlmIChjb3VudCkKLQkJYWN0aXZlX2JvID0ga2NhbGxvYyhjb3VudCwgc2l6ZW9mKCph
Y3RpdmVfYm8pLCBHRlBfQVRPTUlDKTsKLQlpZiAoYWN0aXZlX2JvKQotCQljb3VudCA9IGNhcHR1
cmVfZXJyb3JfYm8oYWN0aXZlX2JvLAotCQkJCQkgY291bnQsICZ2bS0+Ym91bmRfbGlzdCwKLQkJ
CQkJIEFDVElWRV9PTkxZKTsKLQllbHNlCi0JCWNvdW50ID0gMDsKKwkJCQkJCSBlbmdpbmUtPnN0
YXR1c19wYWdlLnZtYSwKKwkJCQkJCSBjb21wcmVzcyk7CiAKLQllcnJvci0+YWN0aXZlX3ZtW2lk
eF0gPSB2bTsKLQllcnJvci0+YWN0aXZlX2JvW2lkeF0gPSBhY3RpdmVfYm87Ci0JZXJyb3ItPmFj
dGl2ZV9ib19jb3VudFtpZHhdID0gY291bnQ7Ci19Ci0KLXN0YXRpYyB2b2lkIGNhcHR1cmVfYWN0
aXZlX2J1ZmZlcnMoc3RydWN0IGk5MTVfZ3B1X3N0YXRlICplcnJvcikKLXsKLQlpbnQgY250ID0g
MCwgaSwgajsKLQotCUJVSUxEX0JVR19PTihBUlJBWV9TSVpFKGVycm9yLT5lbmdpbmUpID4gQVJS
QVlfU0laRShlcnJvci0+YWN0aXZlX2JvKSk7Ci0JQlVJTERfQlVHX09OKEFSUkFZX1NJWkUoZXJy
b3ItPmFjdGl2ZV9ibykgIT0gQVJSQVlfU0laRShlcnJvci0+YWN0aXZlX3ZtKSk7Ci0JQlVJTERf
QlVHX09OKEFSUkFZX1NJWkUoZXJyb3ItPmFjdGl2ZV9ibykgIT0gQVJSQVlfU0laRShlcnJvci0+
YWN0aXZlX2JvX2NvdW50KSk7Ci0KLQkvKiBTY2FuIGVhY2ggZW5naW5lIGxvb2tpbmcgZm9yIHVu
aXF1ZSBhY3RpdmUgY29udGV4dHMvdm0gKi8KLQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShl
cnJvci0+ZW5naW5lKTsgaSsrKSB7Ci0JCXN0cnVjdCBkcm1faTkxNV9lcnJvcl9lbmdpbmUgKmVl
ID0gJmVycm9yLT5lbmdpbmVbaV07Ci0JCWJvb2wgZm91bmQ7Ci0KLQkJaWYgKCFlZS0+dm0pCi0J
CQljb250aW51ZTsKKwkJZWUtPndhX2N0eCA9CisJCQlpOTE1X2Vycm9yX29iamVjdF9jcmVhdGUo
aTkxNSwKKwkJCQkJCSBlbmdpbmUtPndhX2N0eC52bWEsCisJCQkJCQkgY29tcHJlc3MpOwogCi0J
CWZvdW5kID0gZmFsc2U7Ci0JCWZvciAoaiA9IDA7IGogPCBpICYmICFmb3VuZDsgaisrKQotCQkJ
Zm91bmQgPSBlcnJvci0+ZW5naW5lW2pdLnZtID09IGVlLT52bTsKLQkJaWYgKCFmb3VuZCkKLQkJ
CWdlbV9jYXB0dXJlX3ZtKGVycm9yLCBlZS0+dm0sIGNudCsrKTsKKwkJZWUtPmRlZmF1bHRfc3Rh
dGUgPQorCQkJY2FwdHVyZV9vYmplY3QoaTkxNSwgZW5naW5lLT5kZWZhdWx0X3N0YXRlLCBjb21w
cmVzcyk7CiAJfQogfQogCi1zdGF0aWMgdm9pZCBjYXB0dXJlX3Bpbm5lZF9idWZmZXJzKHN0cnVj
dCBpOTE1X2dwdV9zdGF0ZSAqZXJyb3IpCi17Ci0Jc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAq
dm0gPSAmZXJyb3ItPmk5MTUtPmdndHQudm07Ci0Jc3RydWN0IGRybV9pOTE1X2Vycm9yX2J1ZmZl
ciAqYm87Ci0Jc3RydWN0IGk5MTVfdm1hICp2bWE7Ci0JaW50IGNvdW50OwotCi0JY291bnQgPSAw
OwotCWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCAmdm0tPmJvdW5kX2xpc3QsIHZtX2xpbmspCi0J
CWNvdW50Kys7Ci0KLQlibyA9IE5VTEw7Ci0JaWYgKGNvdW50KQotCQlibyA9IGtjYWxsb2MoY291
bnQsIHNpemVvZigqYm8pLCBHRlBfQVRPTUlDKTsKLQlpZiAoIWJvKQotCQlyZXR1cm47Ci0KLQll
cnJvci0+cGlubmVkX2JvX2NvdW50ID0KLQkJY2FwdHVyZV9lcnJvcl9ibyhibywgY291bnQsICZ2
bS0+Ym91bmRfbGlzdCwgUElOTkVEX09OTFkpOwotCWVycm9yLT5waW5uZWRfYm8gPSBibzsKLX0K
LQotc3RhdGljIHZvaWQgY2FwdHVyZV91Y19zdGF0ZShzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVy
cm9yKQorc3RhdGljIHZvaWQKK2NhcHR1cmVfdWNfc3RhdGUoc3RydWN0IGk5MTVfZ3B1X3N0YXRl
ICplcnJvciwgc3RydWN0IGNvbXByZXNzICpjb21wcmVzcykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSA9IGVycm9yLT5pOTE1OwogCXN0cnVjdCBpOTE1X2Vycm9yX3VjICplcnJv
cl91YyA9ICZlcnJvci0+dWM7CkBAIC0xNTY3LDkgKzE0NzUsMTEgQEAgc3RhdGljIHZvaWQgY2Fw
dHVyZV91Y19zdGF0ZShzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVycm9yKQogCSAqIEFzIG1vZHBh
cmFtcyBhcmUgZ2VuZXJhbGx5IGFjY2VzaWJsZSBmcm9tIHRoZSB1c2Vyc3BhY2UgbWFrZQogCSAq
IGV4cGxpY2l0IGNvcGllcyBvZiB0aGUgZmlybXdhcmUgcGF0aHMuCiAJICovCi0JZXJyb3JfdWMt
Pmd1Y19mdy5wYXRoID0ga3N0cmR1cCh1Yy0+Z3VjLmZ3LnBhdGgsIEdGUF9BVE9NSUMpOwotCWVy
cm9yX3VjLT5odWNfZncucGF0aCA9IGtzdHJkdXAodWMtPmh1Yy5mdy5wYXRoLCBHRlBfQVRPTUlD
KTsKLQllcnJvcl91Yy0+Z3VjX2xvZyA9IGk5MTVfZXJyb3Jfb2JqZWN0X2NyZWF0ZShpOTE1LCB1
Yy0+Z3VjLmxvZy52bWEpOworCWVycm9yX3VjLT5ndWNfZncucGF0aCA9IGtzdHJkdXAodWMtPmd1
Yy5mdy5wYXRoLCBBTExPV19GQUlMKTsKKwllcnJvcl91Yy0+aHVjX2Z3LnBhdGggPSBrc3RyZHVw
KHVjLT5odWMuZncucGF0aCwgQUxMT1dfRkFJTCk7CisJZXJyb3JfdWMtPmd1Y19sb2cgPSBpOTE1
X2Vycm9yX29iamVjdF9jcmVhdGUoaTkxNSwKKwkJCQkJCSAgICAgdWMtPmd1Yy5sb2cudm1hLAor
CQkJCQkJICAgICBjb21wcmVzcyk7CiB9CiAKIC8qIENhcHR1cmUgYWxsIHJlZ2lzdGVycyB3aGlj
aCBkb24ndCBmaXQgaW50byBhbm90aGVyIGNhdGVnb3J5LiAqLwpAQCAtMTc1Myw1NiArMTY2Myw1
MyBAQCBzdGF0aWMgdm9pZCBjYXB0dXJlX2ZpbmlzaChzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgKmVy
cm9yKQogCWdndHQtPnZtLmNsZWFyX3JhbmdlKCZnZ3R0LT52bSwgc2xvdCwgUEFHRV9TSVpFKTsK
IH0KIAotc3RhdGljIGludCBjYXB0dXJlKHZvaWQgKmRhdGEpCi17Ci0Jc3RydWN0IGk5MTVfZ3B1
X3N0YXRlICplcnJvciA9IGRhdGE7Ci0KLQllcnJvci0+dGltZSA9IGt0aW1lX2dldF9yZWFsKCk7
Ci0JZXJyb3ItPmJvb3R0aW1lID0ga3RpbWVfZ2V0X2Jvb3R0aW1lKCk7Ci0JZXJyb3ItPnVwdGlt
ZSA9IGt0aW1lX3N1YihrdGltZV9nZXQoKSwKLQkJCQkgIGVycm9yLT5pOTE1LT5ndC5sYXN0X2lu
aXRfdGltZSk7Ci0JZXJyb3ItPmNhcHR1cmUgPSBqaWZmaWVzOwotCi0JY2FwdHVyZV9wYXJhbXMo
ZXJyb3IpOwotCWNhcHR1cmVfZ2VuX3N0YXRlKGVycm9yKTsKLQljYXB0dXJlX3VjX3N0YXRlKGVy
cm9yKTsKLQljYXB0dXJlX3JlZ19zdGF0ZShlcnJvcik7Ci0JZ2VtX3JlY29yZF9mZW5jZXMoZXJy
b3IpOwotCWdlbV9yZWNvcmRfcmluZ3MoZXJyb3IpOwotCWNhcHR1cmVfYWN0aXZlX2J1ZmZlcnMo
ZXJyb3IpOwotCWNhcHR1cmVfcGlubmVkX2J1ZmZlcnMoZXJyb3IpOwotCi0JZXJyb3ItPm92ZXJs
YXkgPSBpbnRlbF9vdmVybGF5X2NhcHR1cmVfZXJyb3Jfc3RhdGUoZXJyb3ItPmk5MTUpOwotCWVy
cm9yLT5kaXNwbGF5ID0gaW50ZWxfZGlzcGxheV9jYXB0dXJlX2Vycm9yX3N0YXRlKGVycm9yLT5p
OTE1KTsKLQotCWVycm9yLT5lcG9jaCA9IGNhcHR1cmVfZmluZF9lcG9jaChlcnJvcik7Ci0KLQlj
YXB0dXJlX2ZpbmlzaChlcnJvcik7Ci0JcmV0dXJuIDA7Ci19Ci0KICNkZWZpbmUgREFZX0FTX1NF
Q09ORFMoeCkgKDI0ICogNjAgKiA2MCAqICh4KSkKIAogc3RydWN0IGk5MTVfZ3B1X3N0YXRlICoK
IGk5MTVfY2FwdHVyZV9ncHVfc3RhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7
CiAJc3RydWN0IGk5MTVfZ3B1X3N0YXRlICplcnJvcjsKKwlzdHJ1Y3QgY29tcHJlc3MgY29tcHJl
c3M7CiAKIAkvKiBDaGVjayBpZiBHUFUgY2FwdHVyZSBoYXMgYmVlbiBkaXNhYmxlZCAqLwogCWVy
cm9yID0gUkVBRF9PTkNFKGk5MTUtPmdwdV9lcnJvci5maXJzdF9lcnJvcik7CiAJaWYgKElTX0VS
UihlcnJvcikpCiAJCXJldHVybiBlcnJvcjsKIAotCWVycm9yID0ga3phbGxvYyhzaXplb2YoKmVy
cm9yKSwgR0ZQX0FUT01JQyk7CisJZXJyb3IgPSBremFsbG9jKHNpemVvZigqZXJyb3IpLCBBTExP
V19GQUlMKTsKIAlpZiAoIWVycm9yKSB7CiAJCWk5MTVfZGlzYWJsZV9lcnJvcl9zdGF0ZShpOTE1
LCAtRU5PTUVNKTsKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAJfQogCisJaWYgKCFjb21w
cmVzc19pbml0KCZjb21wcmVzcykpIHsKKwkJa2ZyZWUoZXJyb3IpOworCQlpOTE1X2Rpc2FibGVf
ZXJyb3Jfc3RhdGUoaTkxNSwgLUVOT01FTSk7CisJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwor
CX0KKwogCWtyZWZfaW5pdCgmZXJyb3ItPnJlZik7CiAJZXJyb3ItPmk5MTUgPSBpOTE1OwogCi0J
c3RvcF9tYWNoaW5lKGNhcHR1cmUsIGVycm9yLCBOVUxMKTsKKwllcnJvci0+dGltZSA9IGt0aW1l
X2dldF9yZWFsKCk7CisJZXJyb3ItPmJvb3R0aW1lID0ga3RpbWVfZ2V0X2Jvb3R0aW1lKCk7CisJ
ZXJyb3ItPnVwdGltZSA9IGt0aW1lX3N1YihrdGltZV9nZXQoKSwgaTkxNS0+Z3QubGFzdF9pbml0
X3RpbWUpOworCWVycm9yLT5jYXB0dXJlID0gamlmZmllczsKKworCWNhcHR1cmVfcGFyYW1zKGVy
cm9yKTsKKwljYXB0dXJlX2dlbl9zdGF0ZShlcnJvcik7CisJY2FwdHVyZV91Y19zdGF0ZShlcnJv
ciwgJmNvbXByZXNzKTsKKwljYXB0dXJlX3JlZ19zdGF0ZShlcnJvcik7CisJZ2VtX3JlY29yZF9m
ZW5jZXMoZXJyb3IpOworCWdlbV9yZWNvcmRfcmluZ3MoZXJyb3IsICZjb21wcmVzcyk7CisKKwll
cnJvci0+b3ZlcmxheSA9IGludGVsX292ZXJsYXlfY2FwdHVyZV9lcnJvcl9zdGF0ZShpOTE1KTsK
KwllcnJvci0+ZGlzcGxheSA9IGludGVsX2Rpc3BsYXlfY2FwdHVyZV9lcnJvcl9zdGF0ZShpOTE1
KTsKKworCWVycm9yLT5lcG9jaCA9IGNhcHR1cmVfZmluZF9lcG9jaChlcnJvcik7CisKKwljYXB0
dXJlX2ZpbmlzaChlcnJvcik7CisJY29tcHJlc3NfZmluaSgmY29tcHJlc3MpOwogCiAJcmV0dXJu
IGVycm9yOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJy
b3IuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmgKaW5kZXggODVmMDZi
YzVkYTA1Li5hMjRjMzUxMDdkMTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ3B1X2Vycm9yLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3Iu
aApAQCAtODUsNyArODUsNiBAQCBzdHJ1Y3QgaTkxNV9ncHVfc3RhdGUgewogCQkvKiBTb2Z0d2Fy
ZSB0cmFja2VkIHN0YXRlICovCiAJCWJvb2wgaWRsZTsKIAkJdW5zaWduZWQgbG9uZyBoYW5nY2hl
Y2tfdGltZXN0YW1wOwotCQlzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bTsKIAkJaW50IG51
bV9yZXF1ZXN0czsKIAkJdTMyIHJlc2V0X2NvdW50OwogCkBAIC0xNjEsMjIgKzE2MCw2IEBAIHN0
cnVjdCBpOTE1X2dwdV9zdGF0ZSB7CiAJCX0gdm1faW5mbzsKIAl9IGVuZ2luZVtJOTE1X05VTV9F
TkdJTkVTXTsKIAotCXN0cnVjdCBkcm1faTkxNV9lcnJvcl9idWZmZXIgewotCQl1MzIgc2l6ZTsK
LQkJdTMyIG5hbWU7Ci0JCXU2NCBndHRfb2Zmc2V0OwotCQl1MzIgcmVhZF9kb21haW5zOwotCQl1
MzIgd3JpdGVfZG9tYWluOwotCQlzMzIgZmVuY2VfcmVnOkk5MTVfTUFYX05VTV9GRU5DRV9CSVRT
OwotCQl1MzIgdGlsaW5nOjI7Ci0JCXUzMiBkaXJ0eToxOwotCQl1MzIgcHVyZ2VhYmxlOjE7Ci0J
CXUzMiB1c2VycHRyOjE7Ci0JCXUzMiBjYWNoZV9sZXZlbDozOwotCX0gKmFjdGl2ZV9ib1tJOTE1
X05VTV9FTkdJTkVTXSwgKnBpbm5lZF9ibzsKLQl1MzIgYWN0aXZlX2JvX2NvdW50W0k5MTVfTlVN
X0VOR0lORVNdLCBwaW5uZWRfYm9fY291bnQ7Ci0Jc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAq
YWN0aXZlX3ZtW0k5MTVfTlVNX0VOR0lORVNdOwotCiAJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZ2ws
ICpmaXQ7CiB9OwogCi0tIAoyLjIyLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3Rp
bmZvL2ludGVsLWdmeA==

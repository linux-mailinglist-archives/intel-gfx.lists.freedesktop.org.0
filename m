Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7A6BA35E12
	for <lists+intel-gfx@lfdr.de>; Wed,  5 Jun 2019 15:39:12 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DD9D089998;
	Wed,  5 Jun 2019 13:39:10 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 373BE89996
 for <intel-gfx@lists.freedesktop.org>; Wed,  5 Jun 2019 13:39:10 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 05 Jun 2019 06:39:10 -0700
X-ExtLoop1: 1
Received: from mkopansk-mobl1.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.249.139.46])
 by fmsmga008.fm.intel.com with ESMTP; 05 Jun 2019 06:39:08 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  5 Jun 2019 16:38:49 +0300
Message-Id: <20190605133852.4493-6-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.21.0.392.gf8f6787159e
In-Reply-To: <20190605133852.4493-1-lionel.g.landwerlin@intel.com>
References: <20190605133852.4493-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 5/7] drm/i915: add a new perf configuration
 execbuf parameter
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0aGUgYWJpbGl0eSB0byBkaXNwYXRjaCBhIHNldCBvZiBjb21tYW5kIGJ1ZmZlciB0
byB0aGUKaGFyZHdhcmUsIGVhY2ggd2l0aCBhIGRpZmZlcmVudCBPQSBjb25maWd1cmF0aW9uLiBU
byBhY2hpZXZlIHRoaXMsIHdlCnJldXNlIGEgY291cGxlIG9mIGZpZWxkcyBmcm9tIHRoZSBleGVj
YnVmMiBzdHJ1Y3QgKEkgQ0FOIEhBWgpleGVjYnVmMz8pIHRvIG5vdGlmeSB3aGF0IE9BIGNvbmZp
Z3VyYXRpb24gc2hvdWxkIGJlIHVzZWQgZm9yIGEgYmF0Y2gKYnVmZmVyLiBUaGlzIHJlcXVpcmVz
IHRoZSBwcm9jZXNzIG1ha2luZyB0aGUgZXhlY2J1ZiB3aXRoIHRoaXMgZmxhZyB0bwphbHNvIG93
biB0aGUgcGVyZiBmZCBhdCB0aGUgdGltZSBvZiBleGVjYnVmLgoKdjI6IEFkZCBhIGVtaXRfb2Ff
Y29uZmlnKCkgdmZ1bmMgaW4gdGhlIGludGVsX2VuZ2luZV9jcyAoQ2hyaXMpCiAgICBNb3ZlIG9h
X2NvbmZpZyB2bWEgdG8gYWN0aXZlIChDaHJpcykKCnYzOiBEb24ndCBkcm9wIHRoZSBsb2NrIGZv
ciBlbmdpbmUgbG9va3VwIChDaHJpcykKICAgIE1vdmUgT0EgY29uZmlnIHZtYSB0byBhY3RpdmUg
YmVmb3JlIHdyaXRpbmcgdGhlIHJpbmdidWZmZXIgKENocmlzKQoKdjQ6IFJldXNlIGk5MTVfdXNl
cl9leHRlbnNpb25fZm4KICAgIFNlcmlhbGl6ZSByZXF1ZXN0cyB3aXRoIE9BIGNvbmZpZyB1cGRh
dGVzCgpTaWduZWQtb2ZmLWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxp
bkBpbnRlbC5jb20+Ci0tLQogLi4uL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZl
ci5jICAgIHwgMTMwICsrKysrKysrKysrKysrKysrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX2NzLmMgICAgIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2VuZ2luZV90eXBlcy5oICB8ICAgOSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfbHJjLmMgICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X3JpbmdidWZmZXIuYyAgICB8ICAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
YyAgICAgICAgICAgICAgIHwgICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2Lmgg
ICAgICAgICAgICAgICB8ICAxMCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMg
ICAgICAgICAgICAgIHwgIDI2ICsrLS0KIGluY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaCAgICAg
ICAgICAgICAgICAgICB8ICAzNyArKysrKwogOSBmaWxlcyBjaGFuZ2VkLCAyMDggaW5zZXJ0aW9u
cygrKSwgMTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9leGVjYnVmZmVyLmMKaW5kZXggODY4NjRlYzc2YThiLi5kYzdlNzY1ZWRmNGIgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpAQCAtMjgx
LDcgKzI4MSwxMSBAQCBzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyIHsKIAlzdHJ1Y3QgewogCQl1NjQg
ZmxhZ3M7IC8qKiBBdmFpbGFibGUgZXh0ZW5zaW9ucyBwYXJhbWV0ZXJzICovCiAJCXN0cnVjdCBk
cm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9leHRfdGltZWxpbmVfZmVuY2VzIHRpbWVsaW5lX2ZlbmNl
czsKKwkJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dF9wZXJmIHBlcmZfY29uZmln
OwogCX0gZXh0ZW5zaW9uczsKKworCXN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnOyAv
KiogSFcgY29uZmlndXJhdGlvbiBmb3IgT0EsIE5VTEwgaXMgbm90IG5lZWRlZC4gKi8KKwlzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2FfYm87CiB9OwogCiAjZGVmaW5lIGV4ZWNfZW50cnko
RUIsIFZNQSkgKCYoRUIpLT5leGVjWyhWTUEpLT5leGVjX2ZsYWdzIC0gKEVCKS0+ZmxhZ3NdKQpA
QCAtMTE5OSw2ICsxMjAzLDM0IEBAIHN0YXRpYyBpbnQgcmVsb2NfbW92ZV90b19ncHUoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEsIHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCXJldHVybiBlcnI7CiB9
CiAKKworc3RhdGljIGludAorZ2V0X2V4ZWNidWZfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKKwkJICAgICAgczMyIHBlcmZfZmQsIHU2NCBvYV9jb25maWdfaWQs
CisJCSAgICAgIHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqKm91dF9vYV9jb25maWcsCisJCSAgICAg
IHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoqb3V0X29hX29iaikKK3sKKwlzdHJ1Y3QgZmls
ZSAqcGVyZl9maWxlOworCWludCByZXQ7CisKKwlpZiAoIWRldl9wcml2LT5wZXJmLm9hLmV4Y2x1
c2l2ZV9zdHJlYW0pCisJCXJldHVybiAtRUlOVkFMOworCisJcGVyZl9maWxlID0gZmdldChwZXJm
X2ZkKTsKKwlpZiAoIXBlcmZfZmlsZSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAocGVyZl9m
aWxlLT5wcml2YXRlX2RhdGEgIT0gZGV2X3ByaXYtPnBlcmYub2EuZXhjbHVzaXZlX3N0cmVhbSkK
KwkJcmV0dXJuIC1FSU5WQUw7CisKKwlmcHV0KHBlcmZfZmlsZSk7CisKKwlyZXQgPSBpOTE1X3Bl
cmZfZ2V0X29hX2NvbmZpZyhkZXZfcHJpdiwgb2FfY29uZmlnX2lkLAorCQkJCSAgICAgIG91dF9v
YV9jb25maWcsIG91dF9vYV9vYmopOworCisJcmV0dXJuIHJldDsKK30KKwogc3RhdGljIGludCBf
X3JlbG9jX2dwdV9hbGxvYyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwKIAkJCSAgICAgc3Ry
dWN0IGk5MTVfdm1hICp2bWEsCiAJCQkgICAgIHVuc2lnbmVkIGludCBsZW4pCkBAIC0yMDYxLDYg
KzIwOTMsNjQgQEAgYWRkX3RvX2NsaWVudChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0
IGRybV9maWxlICpmaWxlKQogCWxpc3RfYWRkX3RhaWwoJnJxLT5jbGllbnRfbGluaywgJnJxLT5m
aWxlX3ByaXYtPm1tLnJlcXVlc3RfbGlzdCk7CiB9CiAKK3N0YXRpYyBpbnQgZWJfb2FfY29uZmln
KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQoreworCXN0cnVjdCBpOTE1X3ZtYSAqb2Ffdm1h
OworCWludCBlcnI7CisKKwlpZiAoIWViLT5vYV9jb25maWcpCisJCXJldHVybiAwOworCisJZXJy
ID0gaTkxNV9hY3RpdmVfcmVxdWVzdF9zZXQoJmViLT5lbmdpbmUtPmxhc3Rfb2FfY29uZmlnLAor
CQkJCSAgICAgIGViLT5yZXF1ZXN0KTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJLyoK
KwkgKiBJZiB0aGUgcGVyZiBzdHJlYW0gd2FzIG9wZW5lZCB3aXRoIGhvbGQgcHJlZW1wdGlvbiwg
ZmxhZyB0aGUKKwkgKiByZXF1ZXN0IHByb3Blcmx5IHNvIHRoYXQgdGhlIHByaW9yaXR5IG9mIHRo
ZSByZXF1ZXN0IGlzIGJ1bXBlZCBvbmNlCisJICogaXQgcmVhY2hlcyB0aGUgZXhlY2xpc3QgcG9y
dHMuCisJICovCisJaWYgKGViLT5pOTE1LT5wZXJmLm9hLmV4Y2x1c2l2ZV9zdHJlYW0tPmhvbGRf
cHJlZW1wdGlvbikKKwkJZWItPnJlcXVlc3QtPmhhc19wZXJmID0gdHJ1ZTsKKworCS8qCisJICog
SWYgdGhlIGNvbmZpZyBoYXNuJ3QgY2hhbmdlZCwgc2tpcCByZWNvbmZpZ3VyaW5nIHRoZSBIVyAo
dGhpcyBpcworCSAqIHN1YmplY3QgdG8gYSBkZWxheSB3ZSB3YW50IHRvIGF2b2lkIGhhcyBtdWNo
IGFzIHBvc3NpYmxlKS4KKwkgKi8KKwlpZiAoZWItPm9hX2NvbmZpZyA9PSBlYi0+aTkxNS0+cGVy
Zi5vYS5leGNsdXNpdmVfc3RyZWFtLT5vYV9jb25maWcpCisJCXJldHVybiAwOworCisJb2Ffdm1h
ID0gaTkxNV92bWFfaW5zdGFuY2UoZWItPm9hX2JvLAorCQkJCSAgICZlYi0+ZW5naW5lLT5pOTE1
LT5nZ3R0LnZtLCBOVUxMKTsKKwlpZiAodW5saWtlbHkoSVNfRVJSKG9hX3ZtYSkpKQorCQlyZXR1
cm4gUFRSX0VSUihvYV92bWEpOworCisJZXJyID0gaTkxNV92bWFfcGluKG9hX3ZtYSwgMCwgMCwg
UElOX0dMT0JBTCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVyciA9IGk5MTVfdm1h
X21vdmVfdG9fYWN0aXZlKG9hX3ZtYSwgZWItPnJlcXVlc3QsIDApOworCWlmIChlcnIpIHsKKwkJ
aTkxNV92bWFfdW5waW4ob2Ffdm1hKTsKKwkJcmV0dXJuIGVycjsKKwl9CisKKwllcnIgPSBlYi0+
ZW5naW5lLT5lbWl0X2JiX3N0YXJ0KGViLT5yZXF1ZXN0LAorCQkJCQlvYV92bWEtPm5vZGUuc3Rh
cnQsCisJCQkJCTAsIEk5MTVfRElTUEFUQ0hfU0VDVVJFKTsKKwlpZiAoZXJyKSB7CisJCWk5MTVf
dm1hX3VucGluKG9hX3ZtYSk7CisJCXJldHVybiBlcnI7CisJfQorCisJaTkxNV92bWFfdW5waW4o
b2Ffdm1hKTsKKworCXN3YXAoZWItPm9hX2NvbmZpZywgZWItPmk5MTUtPnBlcmYub2EuZXhjbHVz
aXZlX3N0cmVhbS0+b2FfY29uZmlnKTsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGVi
X3N1Ym1pdChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIHsKIAlpbnQgZXJyOwpAQCAtMjA4
Nyw2ICsyMTc3LDEwIEBAIHN0YXRpYyBpbnQgZWJfc3VibWl0KHN0cnVjdCBpOTE1X2V4ZWNidWZm
ZXIgKmViKQogCQkJcmV0dXJuIGVycjsKIAl9CiAKKwllcnIgPSBlYl9vYV9jb25maWcoZWIpOwor
CWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKIAllcnIgPSBlYi0+ZW5naW5lLT5lbWl0X2JiX3N0
YXJ0KGViLT5yZXF1ZXN0LAogCQkJCQllYi0+YmF0Y2gtPm5vZGUuc3RhcnQgKwogCQkJCQllYi0+
YmF0Y2hfc3RhcnRfb2Zmc2V0LApAQCAtMjUwOCw4ICsyNjAyLDIyIEBAIHN0YXRpYyBpbnQgcGFy
c2VfdGltZWxpbmVfZmVuY2VzKHN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIF9fdXNlciAqZXh0
LCB2b2lkICpkCiAJcmV0dXJuIDA7CiB9CiAKK3N0YXRpYyBpbnQgcGFyc2VfcGVyZl9jb25maWco
c3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24gX191c2VyICpleHQsIHZvaWQgKmRhdGEpCit7CisJ
c3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIgPSBkYXRhOworCisJaWYgKGNvcHlfZnJvbV91c2Vy
KCZlYi0+ZXh0ZW5zaW9ucy5wZXJmX2NvbmZpZywgZXh0LAorCQkJICAgc2l6ZW9mKGViLT5leHRl
bnNpb25zLnBlcmZfY29uZmlnKSkpCisJCXJldHVybiAtRUZBVUxUOworCisJZWItPmV4dGVuc2lv
bnMuZmxhZ3MgfD0gQklUKERSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGKTsKKworCXJl
dHVybiAwOworfQorCiBzdGF0aWMgY29uc3QgaTkxNV91c2VyX2V4dGVuc2lvbl9mbiBleGVjYnVm
X2V4dGVuc2lvbnNbXSA9IHsKICAgICAgICAgW0RSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9U
SU1FTElORV9GRU5DRVNdID0gcGFyc2VfdGltZWxpbmVfZmVuY2VzLAorICAgICAgICBbRFJNX0k5
MTVfR0VNX0VYRUNCVUZGRVJfRVhUX1BFUkZdID0gcGFyc2VfcGVyZl9jb25maWcsCiB9OwogCiBz
dGF0aWMgaW50CkBAIC0yNTYxLDYgKzI2NjksNyBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJZWIuYnVmZmVyX2NvdW50ID0gYXJncy0+YnVmZmVyX2Nv
dW50OwogCWViLmJhdGNoX3N0YXJ0X29mZnNldCA9IGFyZ3MtPmJhdGNoX3N0YXJ0X29mZnNldDsK
IAllYi5iYXRjaF9sZW4gPSBhcmdzLT5iYXRjaF9sZW47CisJZWIub2FfY29uZmlnID0gTlVMTDsK
IAogCWViLmJhdGNoX2ZsYWdzID0gMDsKIAlpZiAoYXJncy0+ZmxhZ3MgJiBJOTE1X0VYRUNfU0VD
VVJFKSB7CkBAIC0yNjM5LDkgKzI3NDgsMjMgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIpKQogCQlnb3RvIGVycl91bmxv
Y2s7CiAKKwlpZiAoZWIuZXh0ZW5zaW9ucy5mbGFncyAmIEJJVChEUk1fSTkxNV9HRU1fRVhFQ0JV
RkZFUl9FWFRfUEVSRikpIHsKKwkJaWYgKCFpbnRlbF9lbmdpbmVfaGFzX29hKGViLmVuZ2luZSkp
IHsKKwkJCWVyciA9IC1FTk9ERVY7CisJCQlnb3RvIGVycl9lbmdpbmU7CisJCX0KKworCQllcnIg
PSBnZXRfZXhlY2J1Zl9vYV9jb25maWcoZWIuaTkxNSwKKwkJCQkJICAgIGViLmV4dGVuc2lvbnMu
cGVyZl9jb25maWcucGVyZl9mZCwKKwkJCQkJICAgIGViLmV4dGVuc2lvbnMucGVyZl9jb25maWcu
b2FfY29uZmlnLAorCQkJCQkgICAgJmViLm9hX2NvbmZpZywgJmViLm9hX2JvKTsKKwkJaWYgKGVy
cikKKwkJCWdvdG8gZXJyX2VuZ2luZTsKKwl9CisKIAllcnIgPSBlYl93YWl0X2Zvcl9yaW5nKCZl
Yik7IC8qIG1heSB0ZW1wb3JhcmlseSBkcm9wIHN0cnVjdF9tdXRleCAqLwogCWlmICh1bmxpa2Vs
eShlcnIpKQotCQlnb3RvIGVycl9lbmdpbmU7CisJCWdvdG8gZXJyX29hOwogCiAJZXJyID0gZWJf
cmVsb2NhdGUoJmViKTsKIAlpZiAoZXJyKSB7CkBAIC0yNzk0LDYgKzI5MTcsMTEgQEAgaTkxNV9n
ZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogZXJyX3ZtYToKIAlpZiAo
ZWIuZXhlYykKIAkJZWJfcmVsZWFzZV92bWFzKCZlYik7CitlcnJfb2E6CisJaWYgKGViLm9hX2Nv
bmZpZykgeworCQlpOTE1X2dlbV9vYmplY3RfcHV0KGViLm9hX2JvKTsKKwkJaTkxNV9vYV9jb25m
aWdfcHV0KGViLm9hX2NvbmZpZyk7CisJfQogZXJyX2VuZ2luZToKIAllYl91bnBpbl9jb250ZXh0
KCZlYik7CiBlcnJfdW5sb2NrOgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
Y3MuYwppbmRleCA2YjgzODk0OGJhMjQuLjdiMmU4MWM3OTMwZCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTg0MCw2ICs4NDAsOCBAQCBpbnQgaW50ZWxf
ZW5naW5lX2luaXRfY29tbW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCWVu
Z2luZS0+c2V0X2RlZmF1bHRfc3VibWlzc2lvbihlbmdpbmUpOwogCisJSU5JVF9BQ1RJVkVfUkVR
VUVTVCgmZW5naW5lLT5sYXN0X29hX2NvbmZpZyk7CisKIAlyZXR1cm4gMDsKIAogZXJyX3VucGlu
OgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVz
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAppbmRleCAw
MTIyMzg2NDIzN2EuLjAyMTBhOTA1ZTYzNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3R5cGVzLmgKQEAgLTM2Myw2ICszNjMsOCBAQCBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzIHsKIAlzdHJ1Y3QgaTkxNV93YV9saXN0IHdhX2xpc3Q7CiAJc3RydWN0IGk5MTVfd2Ff
bGlzdCB3aGl0ZWxpc3Q7CiAKKwlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCBsYXN0X29hX2Nv
bmZpZzsKKwogCXUzMiAgICAgICAgICAgICBpcnFfa2VlcF9tYXNrOyAvKiBhbHdheXMga2VlcCB0
aGVzZSBpbnRlcnJ1cHRzICovCiAJdTMyCQlpcnFfZW5hYmxlX21hc2s7IC8qIGJpdG1hc2sgdG8g
ZW5hYmxlIHJpbmcgaW50ZXJydXB0ICovCiAJdm9pZAkJKCppcnFfZW5hYmxlKShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpOwpAQCAtNDU3LDYgKzQ1OSw3IEBAIHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgewogI2RlZmluZSBJOTE1X0VOR0lORV9IQVNfU0VNQVBIT1JFUyAgIEJJVCgzKQog
I2RlZmluZSBJOTE1X0VOR0lORV9ORUVEU19CUkVBRENSVU1CX1RBU0tMRVQgQklUKDQpCiAjZGVm
aW5lIEk5MTVfRU5HSU5FX0lTX1ZJUlRVQUwgICAgICAgQklUKDUpCisjZGVmaW5lIEk5MTVfRU5H
SU5FX0hBU19PQSAgICAgICAgICAgQklUKDYpCiAJdW5zaWduZWQgaW50IGZsYWdzOwogCiAJLyoK
QEAgLTU1Miw2ICs1NTUsMTIgQEAgaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY29uc3Qgc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXJldHVybiBlbmdpbmUtPmZsYWdzICYgSTkxNV9F
TkdJTkVfSVNfVklSVFVBTDsKIH0KIAorc3RhdGljIGlubGluZSBib29sCitpbnRlbF9lbmdpbmVf
aGFzX29hKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlyZXR1cm4g
ZW5naW5lLT5mbGFncyAmIEk5MTVfRU5HSU5FX0hBU19PQTsKK30KKwogI2RlZmluZSBpbnN0ZG9u
ZV9zbGljZV9tYXNrKGRldl9wcml2X18pIFwKIAkoSVNfR0VOKGRldl9wcml2X18sIDcpID8gXAog
CSAxIDogUlVOVElNRV9JTkZPKGRldl9wcml2X18pLT5zc2V1LnNsaWNlX21hc2spCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IGZlZDcwNDgwMmM1Ny4uZWQxOWY0ZTUzZDMxIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMjczMiw2ICsyNzMyLDcgQEAgaW50
IGludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAkJZW5naW5lLT5pbml0X2NvbnRleHQgPSBnZW44X2luaXRfcmNzX2NvbnRleHQ7
CiAJCWVuZ2luZS0+ZW1pdF9mbHVzaCA9IGdlbjhfZW1pdF9mbHVzaF9yZW5kZXI7CiAJCWVuZ2lu
ZS0+ZW1pdF9maW5pX2JyZWFkY3J1bWIgPSBnZW44X2VtaXRfZmluaV9icmVhZGNydW1iX3JjczsK
KwkJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfT0E7CiAJfQogCiAJcmV0dXJuIDA7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKaW5kZXggZmY1OGQ2
NThlM2UyLi45NzIxOTNjZmJmNDEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX3JpbmdidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9y
aW5nYnVmZmVyLmMKQEAgLTIyMTIsOCArMjIxMiwxMCBAQCBzdGF0aWMgdm9pZCBzZXR1cF9yY3Mo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQllbmdpbmUtPmlycV9lbmFibGVfbWFz
ayA9IEk5MTVfVVNFUl9JTlRFUlJVUFQ7CiAJfQogCi0JaWYgKElTX0hBU1dFTEwoaTkxNSkpCisJ
aWYgKElTX0hBU1dFTEwoaTkxNSkpIHsKIAkJZW5naW5lLT5lbWl0X2JiX3N0YXJ0ID0gaHN3X2Vt
aXRfYmJfc3RhcnQ7CisJCWVuZ2luZS0+ZmxhZ3MgfD0gSTkxNV9FTkdJTkVfSEFTX09BOworCX0K
IAogCWVuZ2luZS0+cmVzdW1lID0gcmNzX3Jlc3VtZTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5j
CmluZGV4IGE4NzI3OTFmOThiZC4uNzUwMjlkMWEzODAyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmMKQEAgLTQ3OCw2ICs0NzgsMTAgQEAgc3RhdGljIGludCBpOTE1X2dldHBhcmFtX2lvY3RsKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJY2FzZSBJOTE1X1BBUkFNX1BFUkZf
UkVWSVNJT046CiAJCXZhbHVlID0gMTsKIAkJYnJlYWs7CisJY2FzZSBJOTE1X1BBUkFNX0hBU19F
WEVDX1BFUkZfQ09ORklHOgorCQkvKiBPYnZpb3VzbHkgcmVxdWlyZXMgcGVyZiBzdXBwb3J0LiAq
LworCQl2YWx1ZSA9IGRldl9wcml2LT5wZXJmLmluaXRpYWxpemVkOworCQlicmVhazsKIAlkZWZh
dWx0OgogCQlEUk1fREVCVUcoIlVua25vd24gcGFyYW1ldGVyICVkXG4iLCBwYXJhbS0+cGFyYW0p
OwogCQlyZXR1cm4gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDgzYTMyZTlk
ODZiNS4uN2I4MmJiODVlNDVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTExNTYsNiAr
MTE1Niw4IEBAIHN0cnVjdCBpOTE1X29hX3JlZyB7CiB9OwogCiBzdHJ1Y3QgaTkxNV9vYV9jb25m
aWcgeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1OworCiAJY2hhciB1dWlkW1VVSURf
U1RSSU5HX0xFTiArIDFdOwogCWludCBpZDsKIApAQCAtMTE3NCw3ICsxMTc2LDcgQEAgc3RydWN0
IGk5MTVfb2FfY29uZmlnIHsKIAogCXN0cnVjdCBsaXN0X2hlYWQgdm1hX2xpbms7CiAKLQlhdG9t
aWNfdCByZWZfY291bnQ7CisJc3RydWN0IGtyZWYgcmVmOwogfTsKIAogc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW07CkBAIC0yNzI3LDYgKzI3MjksMTIgQEAgaW50IGk5MTVfcGVyZl9nZXRfb2FfY29u
ZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkJICAgIGludCBtZXRyaWNzX3Nl
dCwKIAkJCSAgICBzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKipvdXRfY29uZmlnLAogCQkJICAgIHN0
cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoqb3V0X29iaik7Cit2b2lkIGk5MTVfb2FfY29uZmln
X3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJlZik7CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X29h
X2NvbmZpZ19wdXQoc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCit7CisJa3JlZl9w
dXQoJm9hX2NvbmZpZy0+cmVmLCBpOTE1X29hX2NvbmZpZ19yZWxlYXNlKTsKK30KIAogLyogaTkx
NV9nZW1fZXZpY3QuYyAqLwogaW50IF9fbXVzdF9jaGVjayBpOTE1X2dlbV9ldmljdF9zb21ldGhp
bmcoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3BlcmYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5j
CmluZGV4IGUwMDcxZTQ0ZGUzZC4uNGU2OTI2NmJiYTYxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3BlcmYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Bl
cmYuYwpAQCAtMzY2LDEwICszNjYsMTEgQEAgc3RydWN0IHBlcmZfb3Blbl9wcm9wZXJ0aWVzIHsK
IAlpbnQgb2FfcGVyaW9kX2V4cG9uZW50OwogfTsKIAotc3RhdGljIHZvaWQgcHV0X29hX2NvbmZp
ZyhzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZykKK3ZvaWQgaTkxNV9vYV9jb25maWdf
cmVsZWFzZShzdHJ1Y3Qga3JlZiAqcmVmKQogewotCWlmICghYXRvbWljX2RlY19hbmRfdGVzdCgm
b2FfY29uZmlnLT5yZWZfY291bnQpKQotCQlyZXR1cm47CisJc3RydWN0IGk5MTVfb2FfY29uZmln
ICpvYV9jb25maWcgPSBjb250YWluZXJfb2YocmVmLCB0eXBlb2YoKm9hX2NvbmZpZyksIHJlZik7
CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZvYV9jb25maWctPmk5MTUtPnBlcmYubWV0cmljc19s
b2NrKTsKIAogCWlmIChvYV9jb25maWctPm9iaikgewogCQlsaXN0X2RlbCgmb2FfY29uZmlnLT52
bWFfbGluayk7CkBAIC00NzgsNyArNDc5LDcgQEAgaW50IGk5MTVfcGVyZl9nZXRfb2FfY29uZmln
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCX0KIAogCWlmIChvdXRfY29uZmlnKSB7
Ci0JCWF0b21pY19pbmMoJm9hX2NvbmZpZy0+cmVmX2NvdW50KTsKKwkJa3JlZl9nZXQoJm9hX2Nv
bmZpZy0+cmVmKTsKIAkJKm91dF9jb25maWcgPSBvYV9jb25maWc7CiAJfQogCkBAIC01MDAsNyAr
NTAxLDcgQEAgaW50IGk5MTVfcGVyZl9nZXRfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAogCiBlcnJfYnVmX2FsbG9jOgogCWlmIChvdXRfY29uZmlnKSB7Ci0JCXB1dF9v
YV9jb25maWcob2FfY29uZmlnKTsKKwkJaTkxNV9vYV9jb25maWdfcHV0KG9hX2NvbmZpZyk7CiAJ
CSpvdXRfY29uZmlnID0gTlVMTDsKIAl9CiB1bmxvY2s6CkBAIC0xNDc1LDcgKzE0NzYsNyBAQCBz
dGF0aWMgdm9pZCBpOTE1X29hX3N0cmVhbV9kZXN0cm95KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
ICpzdHJlYW0pCiAJaWYgKHN0cmVhbS0+Y3R4KQogCQlvYV9wdXRfcmVuZGVyX2N0eF9pZChzdHJl
YW0pOwogCi0JcHV0X29hX2NvbmZpZyhzdHJlYW0tPm9hX2NvbmZpZyk7CisJaTkxNV9vYV9jb25m
aWdfcHV0KHN0cmVhbS0+b2FfY29uZmlnKTsKIAogCWlmIChkZXZfcHJpdi0+cGVyZi5vYS5zcHVy
aW91c19yZXBvcnRfcnMubWlzc2VkKSB7CiAJCURSTV9OT1RFKCIlZCBzcHVyaW91cyBPQSByZXBv
cnQgbm90aWNlcyBzdXBwcmVzc2VkIGR1ZSB0byByYXRlbGltaXRpbmdcbiIsCkBAIC0yMjQzLDcg
KzIyNDQsNyBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSwKIAlmcmVlX29hX2J1ZmZlcihkZXZfcHJpdik7CiAKIGVycl9vYV9i
dWZfYWxsb2M6Ci0JcHV0X29hX2NvbmZpZyhzdHJlYW0tPm9hX2NvbmZpZyk7CisJaTkxNV9vYV9j
b25maWdfcHV0KHN0cmVhbS0+b2FfY29uZmlnKTsKIAogCWludGVsX3VuY29yZV9mb3JjZXdha2Vf
cHV0KCZkZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKIAlpbnRlbF9ydW50aW1lX3Bt
X3B1dChkZXZfcHJpdiwgc3RyZWFtLT53YWtlcmVmKTsKQEAgLTMwNTIsNyArMzA1Myw3IEBAIHZv
aWQgaTkxNV9wZXJmX3JlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikK
IAlpZiAocmV0KQogCQlnb3RvIHN5c2ZzX2Vycm9yOwogCi0JYXRvbWljX3NldCgmZGV2X3ByaXYt
PnBlcmYub2EudGVzdF9jb25maWcucmVmX2NvdW50LCAxKTsKKwlkZXZfcHJpdi0+cGVyZi5vYS50
ZXN0X2NvbmZpZy5pOTE1ID0gZGV2X3ByaXY7CiAKIAlnb3RvIGV4aXQ7CiAKQEAgLTMzMDcsNyAr
MzMwOCw4IEBAIGludCBpOTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB2b2lkICpkYXRhLAogCQlyZXR1cm4gLUVOT01FTTsKIAl9CiAKLQlhdG9taWNfc2V0
KCZvYV9jb25maWctPnJlZl9jb3VudCwgMSk7CisJb2FfY29uZmlnLT5pOTE1ID0gZGV2X3ByaXY7
CisJa3JlZl9pbml0KCZvYV9jb25maWctPnJlZik7CiAKIAlpZiAoIXV1aWRfaXNfdmFsaWQoYXJn
cy0+dXVpZCkpIHsKIAkJRFJNX0RFQlVHKCJJbnZhbGlkIHV1aWQgZm9ybWF0IGZvciBPQSBjb25m
aWdcbiIpOwpAQCAtMzQwNiw3ICszNDA4LDcgQEAgaW50IGk5MTVfcGVyZl9hZGRfY29uZmlnX2lv
Y3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiBzeXNmc19lcnI6CiAJbXV0
ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5tZXRyaWNzX2xvY2spOwogcmVnX2VycjoKLQlwdXRf
b2FfY29uZmlnKG9hX2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KG9hX2NvbmZpZyk7CiAJ
RFJNX0RFQlVHKCJGYWlsZWQgdG8gYWRkIG5ldyBPQSBjb25maWdcbiIpOwogCXJldHVybiBlcnI7
CiB9CkBAIC0zNDYwLDcgKzM0NjIsNyBAQCBpbnQgaTkxNV9wZXJmX3JlbW92ZV9jb25maWdfaW9j
dGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAogCURSTV9ERUJVRygiUmVt
b3ZlZCBjb25maWcgJXMgaWQ9JWlcbiIsIG9hX2NvbmZpZy0+dXVpZCwgb2FfY29uZmlnLT5pZCk7
CiAKLQlwdXRfb2FfY29uZmlnKG9hX2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KG9hX2Nv
bmZpZyk7CiAKIGNvbmZpZ19lcnI6CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cGVyZi5tZXRy
aWNzX2xvY2spOwpAQCAtMzYyMiw3ICszNjI0LDcgQEAgc3RhdGljIGludCBkZXN0cm95X2NvbmZp
ZyhpbnQgaWQsIHZvaWQgKnAsIHZvaWQgKmRhdGEpCiB7CiAJc3RydWN0IGk5MTVfb2FfY29uZmln
ICpvYV9jb25maWcgPSBwOwogCi0JcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOworCWk5MTVfb2Ff
Y29uZmlnX3B1dChvYV9jb25maWcpOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9pbmNs
dWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKaW5k
ZXggYjdmZTE5MTVlMzRkLi41OTM4YTczOTYzZmUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9k
cm0vaTkxNV9kcm0uaAorKysgYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKQEAgLTYyMyw2
ICs2MjMsMTYgQEAgdHlwZWRlZiBzdHJ1Y3QgZHJtX2k5MTVfaXJxX3dhaXQgewogICovCiAjZGVm
aW5lIEk5MTVfUEFSQU1fSEFTX0VYRUNfVElNRUxJTkVfRkVOQ0VTIDU1CiAKKy8qCisgKiBSZXF1
ZXN0IGFuIGk5MTUvcGVyZiBwZXJmb3JtYW5jZSBjb25maWd1cmF0aW9uIGNoYW5nZSBiZWZvcmUg
cnVubmluZyB0aGUKKyAqIGNvbW1hbmRzIGdpdmVuIGluIGFuIGV4ZWNidWYuCisgKgorICogUGVy
Zm9ybWFuY2UgY29uZmlndXJhdGlvbiBJRCBhbmQgdGhlIGZpbGUgZGVzY3JpcHRvciBvZiB0aGUg
aTkxNSBwZXJmCisgKiBzdHJlYW0gYXJlIGdpdmVuIHRocm91Z2ggZHJtX2k5MTVfZ2VtX2V4ZWNi
dWZmZXJfZXh0X3BlcmYuIFNlZQorICogSTkxNV9FWEVDX0VYVC4KKyAqLworI2RlZmluZSBJOTE1
X1BBUkFNX0hBU19FWEVDX1BFUkZfQ09ORklHIDU2CisKIC8qIE11c3QgYmUga2VwdCBjb21wYWN0
IC0tIG5vIGhvbGVzIGFuZCB3ZWxsIGRvY3VtZW50ZWQgKi8KIAogdHlwZWRlZiBzdHJ1Y3QgZHJt
X2k5MTVfZ2V0cGFyYW0gewpAQCAtMTAyNiw2ICsxMDM2LDEyIEBAIGVudW0gZHJtX2k5MTVfZ2Vt
X2V4ZWNidWZmZXJfZXh0IHsKIAkgKi8KIAlEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfVElN
RUxJTkVfRkVOQ0VTLAogCisJLyoqCisJICogVGhpcyBpZGVudGlmaWVyIGlzIGFzc29jaWF0ZWQg
d2l0aAorCSAqIGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX3BlcmZfZXh0LgorCSAqLworCURSTV9J
OTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGLAorCiAJRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJf
RVhUX01BWCAvKiBub24tQUJJICovCiB9OwogCkBAIC0xMDU0LDYgKzEwNzAsMjcgQEAgc3RydWN0
IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dF90aW1lbGluZV9mZW5jZXMgewogCV9fdTY0IHZh
bHVlc19wdHI7CiB9OwogCitzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0X3BlcmYg
eworCXN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIGJhc2U7CisKKwkvKioKKwkgKiBQZXJmb3Jt
YW5jZSBmaWxlIGRlc2NyaXB0b3IgcmV0dXJuZWQgYnkgRFJNX0lPQ1RMX0k5MTVfUEVSRl9PUEVO
LgorCSAqIFRoaXMgaXMgdXNlZCB0byBpZGVudGlmeSB0aGF0IHRoZSBhcHBsaWNhdGlvbgorCSAq
LworCV9fczMyIHBlcmZfZmQ7CisKKwkvKioKKwkgKiBVbnVzZWQgZm9yIG5vdy4gTXVzdCBiZSBj
bGVhcmVkIHRvIHplcm8uCisJICovCisJX191MzIgcGFkOworCisJLyoqCisJICogT0EgY29uZmln
dXJhdGlvbiBJRCB0byBzd2l0Y2ggdG8gYmVmb3JlIGV4ZWN1dGluZyB0aGUgY29tbWFuZHMKKwkg
KiBhc3NvY2lhdGVkIHRvIHRoZSBleGVjYnVmLgorCSAqLworCV9fdTY0IG9hX2NvbmZpZzsKK307
CisKIHN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgewogCS8qKgogCSAqIExpc3Qgb2Yg
Z2VtX2V4ZWNfb2JqZWN0MiBzdHJ1Y3RzCi0tIAoyLjIxLjAuMzkyLmdmOGY2Nzg3MTU5ZQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5C6833498F7
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Mar 2021 19:07:37 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 22ACC6EE08;
	Thu, 25 Mar 2021 18:07:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6EEE96EDDF
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Mar 2021 18:07:28 +0000 (UTC)
IronPort-SDR: pp5A5SSQQpKZ3z3WU92+SIdwwS/uUh86WLu4A7U5+lhHPDxheNFyxRwNmK2IGeSYNwVx6dvnjj
 5UL6NKbhLrRA==
X-IronPort-AV: E=McAfee;i="6000,8403,9934"; a="276113754"
X-IronPort-AV: E=Sophos;i="5.81,278,1610438400"; d="scan'208";a="276113754"
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 Mar 2021 11:07:28 -0700
IronPort-SDR: wyUgsu/41wUfQZUd1udOTgy7pCq9qGZJgiDuAcKbOC8n+f1euXyRCVcmjPKxhNFYlzQjD0qyiR
 tsf4mUq+xd4A==
X-IronPort-AV: E=Sophos;i="5.81,278,1610438400"; d="scan'208";a="453176537"
Received: from mdroper-desk1.fm.intel.com ([10.1.27.168])
 by orsmga001-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 25 Mar 2021 11:07:27 -0700
From: Matt Roper <matthew.d.roper@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 25 Mar 2021 11:06:36 -0700
Message-Id: <20210325180720.401410-7-matthew.d.roper@intel.com>
X-Mailer: git-send-email 2.25.4
In-Reply-To: <20210325180720.401410-1-matthew.d.roper@intel.com>
References: <20210325180720.401410-1-matthew.d.roper@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 06/50] drm/i915/xelpd: Handle new location of
 outputs D and E
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: me@freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIERESSBuYW1pbmcgdGVtcGxhdGUgZm9yIGRpc3BsYXkgdmVyc2lvbiAxMiB3ZW50IEEtQywg
VEMxLVRDNi4gIFdpdGgKWEVfTFBELCB0aGF0IG5hbWluZyBzY2hlbWUgZm9yIERESSdzIGhhcyBu
b3cgY2hhbmdlZCB0byBBLUUsIFRDMS1UQzQuCgpUaGUgWEVfTFBEIGRlc2lnbiBrZWVwcyB0aGUg
cmVnaXN0ZXIgb2Zmc2V0cyBhbmQgYml0ZmllbGRzIHJlbGF0aW5nIHRvCnRoZSBUQyBvdXRwdXRz
IGluIHRoZSBzYW1lIGxvY2F0aW9uIHRoZXkgd2VyZSBwcmV2aW91c2x5LiAgVGhlIG5ldyAiRCIK
YW5kICJFIiBvdXRwdXRzIG5vdyB0YWtlIHRoZSBsb2NhdGlvbnMgdGhhdCB3ZXJlIHByZXZpb3Vz
bHkgdXNlZCBieSBUQzUKYW5kIFRDNiBvdXRwdXRzLCBvciB3aGF0IHdlIHdvdWxkIGhhdmUgY29u
c2lkZXJlZCB0byBiZSBvdXRwdXRzICJIIiBhbmQKIkkiIHVuZGVyIHRoZSBsZWdhY3kgbGV0dGVy
aW5nIHNjaGVtZS4KCkZvciB0aGUgbW9zdCBwYXJ0IGV2ZXJ5dGhpbmcgd2lsbCBqdXN0IHdvcmsg
YXMgbG9uZyBhcyB3ZSBpbml0aWFsaXplIHRoZQpvdXRwdXQgd2l0aCB0aGUgcHJvcGVyICdlbnVt
IHBvcnQnIHZhbHVlLiAgSG93ZXZlciB3ZSBkbyBuZWVkIHRvIHRha2UKY2FyZSB0byBwaWNrIHRo
ZSBjb3JyZWN0IEFVWCBjaGFubmVsIHdoZW4gcGFyc2luZyB0aGUgVkJUIChlLmcuLCBhCnJlZmVy
ZW5jZSB0byAnQVVYIEQnIGlzIGFjdHVhbGx5IGFza2luZyB1cyB0byB1c2UgdGhlIDh0aCBhdXgg
Y2hhbm5lbCwKbm90IHRoZSBmb3VydGgpLiAgV2Ugc2hvdWxkIGFsc28gbWFrZSBzdXJlIHRoYXQg
b3VyIGVuY29kZXJzIGFuZCBhdXgKY2hhbm5lbHMgYXJlIG5hbWVkIGFwcHJvcHJpYXRlbHkgc28g
dGhhdCBpdCdzIGVhc2llciB0byBjb3JyZWxhdGUgZHJpdmVyCmRlYnVnIG1lc3NhZ2VzIHdpdGgg
dGhlIGJzcGVjIGluc3RydWN0aW9ucy4KCnYyOgogLSBVcGRhdGUgaGFuZGxpbmcgb2YgVEdMX1RS
QU5TX0NMS19TRUxfUE9SVC4gIChKb3NlKQoKQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpv
c2Uuc291emFAaW50ZWwuY29tPgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxp
bnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dCBSb3BlciA8bWF0dGhldy5kLnJvcGVy
QGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3Mu
YyAgICB8ICA4ICsrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRp
LmMgICAgIHwgMjUgKysrKysrKysrKysrKy0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgIDYgKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5oIHwgIDggKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcF9hdXguYyAgfCAxNCArKysrKysrLS0tLQogNSBmaWxlcyBjaGFuZ2Vk
LCA0NCBpbnNlcnRpb25zKCspLCAxNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfYmlvcy5jCmluZGV4IDNkMGMwMzViNWUzOC4uNjg0N2ZiNWFmZjRkIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYwpAQCAtMjg1Miw3ICsy
ODUyLDkgQEAgZW51bSBhdXhfY2ggaW50ZWxfYmlvc19wb3J0X2F1eF9jaChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKIAkJCWF1eF9jaCA9IEFVWF9DSF9DOwogCQlicmVhazsKIAljYXNl
IERQX0FVWF9EOgotCQlpZiAoSVNfQUxERVJMQUtFX1MoaTkxNSkpCisJCWlmIChESVNQTEFZX1ZF
UihpOTE1KSA+PSAxMykKKwkJCWF1eF9jaCA9IEFVWF9DSF9EX1hFTFBEOworCQllbHNlIGlmIChJ
U19BTERFUkxBS0VfUyhpOTE1KSkKIAkJCWF1eF9jaCA9IEFVWF9DSF9VU0JDMzsKIAkJZWxzZSBp
ZiAoSVNfREcxKGk5MTUpIHx8IElTX1JPQ0tFVExBS0UoaTkxNSkpCiAJCQlhdXhfY2ggPSBBVVhf
Q0hfVVNCQzI7CkBAIC0yODYwLDcgKzI4NjIsOSBAQCBlbnVtIGF1eF9jaCBpbnRlbF9iaW9zX3Bv
cnRfYXV4X2NoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkJYXV4X2NoID0gQVVY
X0NIX0Q7CiAJCWJyZWFrOwogCWNhc2UgRFBfQVVYX0U6Ci0JCWlmIChJU19BTERFUkxBS0VfUyhp
OTE1KSkKKwkJaWYgKERJU1BMQVlfVkVSKGk5MTUpID49IDEzKQorCQkJYXV4X2NoID0gQVVYX0NI
X0VfWEVMUEQ7CisJCWVsc2UgaWYgKElTX0FMREVSTEFLRV9TKGk5MTUpKQogCQkJYXV4X2NoID0g
QVVYX0NIX1VTQkM0OwogCQllbHNlCiAJCQlhdXhfY2ggPSBBVVhfQ0hfRTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCmluZGV4IDk1M2RlNDJlMjc3Yy4uOTMzYWY4NjEy
NTNlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKQEAgLTg1MCwx
OCArODUwLDE5IEBAIHZvaWQgaW50ZWxfZGRpX2VuYWJsZV9waXBlX2Nsb2NrKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50
ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwotCWVudW0gcG9ydCBwb3J0ID0g
ZW5jb2Rlci0+cG9ydDsKIAllbnVtIHRyYW5zY29kZXIgY3B1X3RyYW5zY29kZXIgPSBjcnRjX3N0
YXRlLT5jcHVfdHJhbnNjb2RlcjsKKwllbnVtIHBoeSBwaHkgPSBpbnRlbF9wb3J0X3RvX3BoeShk
ZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7CisJdTMyIHZhbDsKIAogCWlmIChjcHVfdHJhbnNjb2Rl
ciAhPSBUUkFOU0NPREVSX0VEUCkgewotCQlpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpID49IDEy
KQotCQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkJICAgICAgIFRSQU5TX0NMS19TRUwo
Y3B1X3RyYW5zY29kZXIpLAotCQkJCSAgICAgICBUR0xfVFJBTlNfQ0xLX1NFTF9QT1JUKHBvcnQp
KTsKKwkJaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMykKKwkJCXZhbCA9IFRHTF9UUkFO
U19DTEtfU0VMX1BPUlQocGh5KTsKKwkJZWxzZSBpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpID49
IDEyKQorCQkJdmFsID0gVEdMX1RSQU5TX0NMS19TRUxfUE9SVChlbmNvZGVyLT5wb3J0KTsKIAkJ
ZWxzZQotCQkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkJICAgICAgIFRSQU5TX0NMS19T
RUwoY3B1X3RyYW5zY29kZXIpLAotCQkJCSAgICAgICBUUkFOU19DTEtfU0VMX1BPUlQocG9ydCkp
OworCQkJdmFsID0gVFJBTlNfQ0xLX1NFTF9QT1JUKGVuY29kZXItPnBvcnQpOworCisJCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBUUkFOU19DTEtfU0VMKGNwdV90cmFuc2NvZGVyKSwgdmFsKTsK
IAl9CiB9CiAKQEAgLTQ0ODksNyArNDQ5MCwxMyBAQCB2b2lkIGludGVsX2RkaV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiAJZW5jb2RlciA9
ICZkaWdfcG9ydC0+YmFzZTsKIAllbmNvZGVyLT5kZXZkYXRhID0gZGV2ZGF0YTsKIAotCWlmIChE
SVNQTEFZX1ZFUihkZXZfcHJpdikgPj0gMTIpIHsKKwlpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYp
ID49IDEzICYmIHBvcnQgPj0gUE9SVF9EX1hFTFBEKSB7CisJCWRybV9lbmNvZGVyX2luaXQoJmRl
dl9wcml2LT5kcm0sICZlbmNvZGVyLT5iYXNlLCAmaW50ZWxfZGRpX2Z1bmNzLAorCQkJCSBEUk1f
TU9ERV9FTkNPREVSX1RNRFMsCisJCQkJICJEREkgJWMvUEhZICVjIiwKKwkJCQkgcG9ydF9uYW1l
KHBvcnQgLSBQT1JUX0RfWEVMUEQgKyBQT1JUX0QpLAorCQkJCSBwaHlfbmFtZShwaHkpKTsKKwl9
IGVsc2UgaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMikgewogCQllbnVtIHRjX3BvcnQg
dGNfcG9ydCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYsIHBvcnQpOwogCiAJCWRybV9lbmNv
ZGVyX2luaXQoJmRldl9wcml2LT5kcm0sICZlbmNvZGVyLT5iYXNlLCAmaW50ZWxfZGRpX2Z1bmNz
LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCAx
NzQ5MGQyOWRjMTMuLjAzZDFlMGVlZGFhOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTQyMDYsNyArNDIwNiwxMSBAQCBib29sIGludGVsX3Bo
eV9pc190YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGh5IHBoeSkK
IAogZW51bSBwaHkgaW50ZWxfcG9ydF90b19waHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsIGVudW0gcG9ydCBwb3J0KQogewotCWlmIChJU19BTERFUkxBS0VfUyhpOTE1KSAmJiBwb3J0
ID49IFBPUlRfVEMxKQorCWlmIChESVNQTEFZX1ZFUihpOTE1KSA+PSAxMyAmJiBwb3J0ID49IFBP
UlRfRF9YRUxQRCkKKwkJcmV0dXJuIFBIWV9EICsgcG9ydCAtIFBPUlRfRF9YRUxQRDsKKwllbHNl
IGlmIChESVNQTEFZX1ZFUihpOTE1KSA+PSAxMyAmJiBwb3J0ID49IFBPUlRfVEMxKQorCQlyZXR1
cm4gUEhZX0YgKyBwb3J0IC0gUE9SVF9UQzE7CisJZWxzZSBpZiAoSVNfQUxERVJMQUtFX1MoaTkx
NSkgJiYgcG9ydCA+PSBQT1JUX1RDMSkKIAkJcmV0dXJuIFBIWV9CICsgcG9ydCAtIFBPUlRfVEMx
OwogCWVsc2UgaWYgKChJU19ERzEoaTkxNSkgfHwgSVNfUk9DS0VUTEFLRShpOTE1KSkgJiYgcG9y
dCA+PSBQT1JUX1RDMSkKIAkJcmV0dXJuIFBIWV9DICsgcG9ydCAtIFBPUlRfVEMxOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAppbmRleCBmMDU2ZTE5Y2Y1
NTkuLjViMTk5NTM4NDBhYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmgKQEAgLTIxNyw2ICsyMTcsMTAgQEAgZW51bSBwb3J0IHsKIAlQT1JUX1RDNSwK
IAlQT1JUX1RDNiwKIAorCS8qIFhFX0xQRCByZXBvc2l0aW9ucyBEL0Ugb2Zmc2V0cyBhbmQgYml0
ZmllbGRzICovCisJUE9SVF9EX1hFTFBEID0gUE9SVF9UQzUsCisJUE9SVF9FX1hFTFBELAorCiAJ
STkxNV9NQVhfUE9SVFMKIH07CiAKQEAgLTMwMCw2ICszMDQsMTAgQEAgZW51bSBhdXhfY2ggewog
CUFVWF9DSF9VU0JDNCwKIAlBVVhfQ0hfVVNCQzUsCiAJQVVYX0NIX1VTQkM2LAorCisJLyogWEVf
TFBEIHJlcG9zaXRpb25zIEQvRSBvZmZzZXRzIGFuZCBiaXRmaWVsZHMgKi8KKwlBVVhfQ0hfRF9Y
RUxQRCA9IEFVWF9DSF9VU0JDNSwKKwlBVVhfQ0hfRV9YRUxQRCwKIH07CiAKICNkZWZpbmUgYXV4
X2NoX25hbWUoYSkgKChhKSArICdBJykKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHBfYXV4LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwX2F1eC5jCmluZGV4IDdlODNiYzJjYzM0YS4uODkzNzU2MTMyOWIxIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX2F1eC5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfYXV4LmMKQEAgLTYwNyw4ICs2MDcsOCBA
QCBzdGF0aWMgaTkxNV9yZWdfdCB0Z2xfYXV4X2N0bF9yZWcoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKIAljYXNlIEFVWF9DSF9VU0JDMjoKIAljYXNlIEFVWF9DSF9VU0JDMzoKIAljYXNlIEFV
WF9DSF9VU0JDNDoKLQljYXNlIEFVWF9DSF9VU0JDNToKLQljYXNlIEFVWF9DSF9VU0JDNjoKKwlj
YXNlIEFVWF9DSF9VU0JDNTogIC8qIGFrYSBBVVhfQ0hfRF9YRUxQRCAqLworCWNhc2UgQVVYX0NI
X1VTQkM2OiAgLyogYWthIEFVWF9DSF9FX1hFTFBEICovCiAJCXJldHVybiBEUF9BVVhfQ0hfQ1RM
KGF1eF9jaCk7CiAJZGVmYXVsdDoKIAkJTUlTU0lOR19DQVNFKGF1eF9jaCk7CkBAIC02MzAsOCAr
NjMwLDggQEAgc3RhdGljIGk5MTVfcmVnX3QgdGdsX2F1eF9kYXRhX3JlZyhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwLCBpbnQgaW5kZXgpCiAJY2FzZSBBVVhfQ0hfVVNCQzI6CiAJY2FzZSBBVVhf
Q0hfVVNCQzM6CiAJY2FzZSBBVVhfQ0hfVVNCQzQ6Ci0JY2FzZSBBVVhfQ0hfVVNCQzU6Ci0JY2Fz
ZSBBVVhfQ0hfVVNCQzY6CisJY2FzZSBBVVhfQ0hfVVNCQzU6ICAvKiBha2EgQVVYX0NIX0RfWEVM
UEQgKi8KKwljYXNlIEFVWF9DSF9VU0JDNjogIC8qIGFrYSBBVVhfQ0hfRV9YRUxQRCAqLwogCQly
ZXR1cm4gRFBfQVVYX0NIX0RBVEEoYXV4X2NoLCBpbmRleCk7CiAJZGVmYXVsdDoKIAkJTUlTU0lO
R19DQVNFKGF1eF9jaCk7CkBAIC02ODUsNyArNjg1LDExIEBAIHZvaWQgaW50ZWxfZHBfYXV4X2lu
aXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlkcm1fZHBfYXV4X2luaXQoJmludGVsX2Rw
LT5hdXgpOwogCiAJLyogRmFpbHVyZSB0byBhbGxvY2F0ZSBvdXIgcHJlZmVycmVkIG5hbWUgaXMg
bm90IGNyaXRpY2FsICovCi0JaWYgKERJU1BMQVlfVkVSKGRldl9wcml2KSA+PSAxMiAmJiBhdXhf
Y2ggPj0gQVVYX0NIX1VTQkMxKQorCWlmIChESVNQTEFZX1ZFUihkZXZfcHJpdikgPj0gMTMgJiYg
YXV4X2NoID49IEFVWF9DSF9EX1hFTFBEKQorCQlpbnRlbF9kcC0+YXV4Lm5hbWUgPSBrYXNwcmlu
dGYoR0ZQX0tFUk5FTCwgIkFVWCAlYy8lcyIsCisJCQkJCSAgICAgICBhdXhfY2hfbmFtZShhdXhf
Y2ggLSBBVVhfQ0hfRF9YRUxQRCArIEFVWF9DSF9EKSwKKwkJCQkJICAgICAgIGVuY29kZXItPmJh
c2UubmFtZSk7CisJZWxzZSBpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpID49IDEyICYmIGF1eF9j
aCA+PSBBVVhfQ0hfVVNCQzEpCiAJCWludGVsX2RwLT5hdXgubmFtZSA9IGthc3ByaW50ZihHRlBf
S0VSTkVMLCAiQVVYIFVTQkMlYy8lcyIsCiAJCQkJCSAgICAgICBhdXhfY2ggLSBBVVhfQ0hfVVNC
QzEgKyAnMScsCiAJCQkJCSAgICAgICBlbmNvZGVyLT5iYXNlLm5hbWUpOwotLSAKMi4yNS40Cgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

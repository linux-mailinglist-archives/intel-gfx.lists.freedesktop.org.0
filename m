Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 073E4103DFC
	for <lists+intel-gfx@lfdr.de>; Wed, 20 Nov 2019 16:07:35 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4C3D36E60D;
	Wed, 20 Nov 2019 15:07:33 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3A0746E60D
 for <intel-gfx@lists.freedesktop.org>; Wed, 20 Nov 2019 15:07:32 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Nov 2019 07:07:31 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,222,1571727600"; d="scan'208";a="406837320"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by fmsmga005.fm.intel.com with ESMTP; 20 Nov 2019 07:07:28 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 20 Nov 2019 17:05:01 +0200
Message-Id: <20191120150501.17518-1-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v8] drm/i915: Enable second dbuf slice for ICL
 and TGL
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWxzbyBpbXBsZW1lbnRlZCBhbGdvcml0aG0gZm9yIGNob29zaW5nIERCdWYgc2xpY2UgY29uZmln
dXJhdGlvbgpiYXNlZCBvbiBhY3RpdmUgcGlwZXMsIHBpcGUgcmF0aW8gYXMgc3RhdGVkIGluIEJT
cGVjIDEyNzE2LgoKTm93IHBpcGUgYWxsb2NhdGlvbiBzdGlsbCBzdGF5cyBwcm9wb3J0aW9uYWwg
dG8gcGlwZSB3aWR0aCBhcyBiZWZvcmUsCmhvd2V2ZXIgd2l0aGluIGFsbG93ZWQgREJ1ZiBzbGlj
ZSBmb3IgdGhpcyBwYXJ0aWN1bGFyIGNvbmZpZ3VyYXRpb24uCgp2MjogUmVtb3ZlIHVubmVlZGVk
IGNoZWNrIGZyb20gY29tbWl0IGFzIGRkYiBlbmFibGVkIHNsaWNlcyBtaWdodAogICAgbm93IGRp
ZmZlciBmcm9tIGh3IHN0YXRlLgoKdjM6IC0gQWRkZWQgbmV3IGZpZWxkICJzdXBwb3J0ZWRfc2xp
Y2VzIiB0byBkZGIgdG8gc2VwYXJhdGUgbWF4CiAgICAgIHN1cHBvcnRlZCBzbGljZXMgdnMgY3Vy
cmVudGx5IGVuYWJsZWQsIHRvIGF2b2lkIGNvbmZ1c2lvbi4KICAgIC0gUmVtb3ZlZCBvYnNvbGV0
ZSBjb21tZW50cyBhbmQgY29kZSByZWxhdGVkIHRvIERCdWYoTWF0dGhldyBSb3BlcikuCiAgICAt
IFNvbWUgY29kZSBzdHlsZSBhbmQgbG9uZyBsaW5lIHJlbW92YWwoTWF0dGhldyBSb3BlcikuCiAg
ICAtIEFkZGVkIFdBUk5fT04gdG8gbmV3IGRkYiByYW5nZSBvZmZzZXQgY2FsYyBmdW5jdGlvbihN
YXR0aGV3IFJvcGVyKS4KICAgIC0gUmVtb3ZlZCBwbGF0Zm9ybSBzcGVjaWZpYyBjYWxsIHRvIGNh
bGMgcGlwZSByYXRpbyBmcm9tIGRkYgogICAgICBhbGxvY2F0aW9uIGZ1bmN0aW9uIGFuZCBmaXhl
ZCB0aGUgcmV0dXJuIHZhbHVlKE1hdHRoZXcgUm9wZXIpCiAgICAtIFJlZmFjdG9yZWQgREJVRiBz
bGljZSBhbGxvY2F0aW9uIHRhYmxlIHRvIGltcHJvdmUgcmVhZGFiaWxpdHkKICAgIC0gQWRkZWQg
REJVRiBzbGljZSBhbGxvY2F0aW9uIGZvciBUR0wgYXMgd2VsbC4KICAgIC0gSUNMKGhvd2V2ZXIg
bm90IFRHTCkgc2VlbXMgdG8gdm9sdW50YXJpbHkgZW5hYmxlIHNlY29uZCBEQnVmIHNsaWNlCiAg
ICAgIGFmdGVyIHBtIHN1c3BlbmQvcmVzdW1lIGNhdXNpbmcgYSBtaXNtYXRjaCBmYWlsdXJlLCBi
ZWNhdXNlIHdlCiAgICAgIHVwZGF0ZSBEQnVmIHNsaWNlcyBvbmx5IGlmIHdlIGRvIGEgbW9kZXNl
dCwgaG93ZXZlciB0aGlzIGNoZWNrCiAgICAgIGlzIGRvbmUgYWx3YXlzLiBGaXhlZCBpdCB0byBi
ZSBkb25lIG9ubHkgd2hlbiBtb2Rlc2V0IGZvciBJQ0wuCgp2NDogLSBOb3cgZW5hYmxlZCBzbGlj
ZXMgaXMgbm90IGFjdHVhbGx5IGEgbnVtYmVyLCBidXQgYSBiaXRtYXNrLAogICAgICBiZWNhdXNl
IHdlIG1pZ2h0IG5lZWQgdG8gZW5hYmxlIHNlY29uZCBzbGljZSBvbmx5IGFuZCBudW1iZXIKICAg
ICAgb2Ygc2xpY2VzIHdvdWxkIHN0aWxsIDEgYW5kIHRoYXQgY3VycmVudCBjb2RlIGRvZXNuJ3Qg
YWxsb3cuCiAgICAtIFJlbW92ZSByZWR1bmRhbnQgZHVwbGljYXRlIGNvZGUgdG8gaGF2ZSBzb21l
IHVuaWZpZWQgd2F5IG9mCiAgICAgIGVuYWJsaW5nIGRidWYgc2xpY2VzIGluc3RlYWQgb2YgaGFy
ZGNvZGluZy4KCnY1OiAtIEZpeCBmYWlsaW5nIGdlbjlfYXNzZXJ0X2RidWZfZW5hYmxlZCBhcyBp
dCB3YXMgbmFpdmVseSB0aGlua2luZwogICAgICB0aGF0IHdlIGhhdmUgb25seSBvbmUgREJVRl9D
VEwgc2xpY2UuIE5vdyBhbm90aGVyIHZlcnNpb24gZm9yCiAgICAgIGdlbjExIHdpbGwgY2hlY2sg
Ym90aCBzbGljZXMgYXMgb25seSBzZWNvbmQgb25lIGNhbiBiZSBlbmFibGVkLAogICAgICB0byBr
ZWVwIENJIGhhcHB5LgoKdjY6IC0gUmVtb3ZlZCBlbmFibGVkIGRidWYgYXNzZXJ0aW9uIGNvbXBs
ZXRlbHkuIFByZXZpb3VzIGNvZGUKICAgICAgd2FzIGtlZXBpbmcgZGJ1ZiBlbmFibGVkLCBldmVu
KCEpIHdoZW4gX2RidWZfZGlzYWJsZSBpcyBjYWxsZWQuCiAgICAgIEN1cnJlbnRseSB3ZSBlbmFi
bGUvZGlzYWJsZSBkYnVmIHNsaWNlcyBiYXNlZCBvbiByZXF1cmVtZW50CiAgICAgIHNvIG5vIHBv
aW50IGluIGFzc2VydGluZyB0aGlzIGhlcmUuCiAgICAtIFJlbW92ZWQgdW5uZWNlc3NhcnkgbW9k
ZXNldCBjaGVjayBmcm9tIHZlcmlmeV93bV9zdGF0ZShNYXR0aGV3IFJvcGVyKQogICAgLSBTbGlj
ZXMgaW50ZXJzZWN0aW9uIGFmdGVyIHVuaW9uIGlzIHNhbWUKICAgICAgYXMgZmluYWwgcmVzdWx0
KE1hdHRoZXcgUm9wZXIpCiAgICAtIE1vdmVkIERCdWYgc2xpY2VzIHRvIGludGVsX2RldmljZV9p
bmZvKE1hdHRoZXcgUm9wZXIpCiAgICAtIFNvbWUgbWFjcm9zIGFkZGVkKE1hdHRoZXcgUm9wZXIp
CiAgICAtIGRkYiByYW5nZSBpcyBub3cgYWx3YXlzIGxlc3Mgb3IgZXF1YWwgdG8gZGRiIHNpemUg
LSBubyBuZWVkCiAgICAgIGZvciBhZGRpdGlvbmFsIGNoZWNrcyhwcmV2aW91c2x5IG5lZWRlZCBh
cyB3ZSBoYWQgc29tZQogICAgICBiYW5kd2lkdGggY2hlY2tzIGluIHRoZXJlIHdoaWNoIGNvdWxk
ICJzdWRkZW5seSIgcmV0dXJuCiAgICAgIGRkYl9zaXplIHNtYWxsZXIgdGhhbiBpdCBpcy4KCnY3
OiBNaW5vciBjb3N0ZW1pYyBjaGFuZ2VzOgogICAgLSBDaGFuZ2VkIGljbF9kYnVmX3NsaWNlc19y
ZXN0b3JlIG5hbWUgdG8gaWNsX3Byb2dyYW1fZGJ1Zl9zbGljZXMKICAgICAgYXMgaXQgbW9yZSBj
b3JyZXNwb25kcyB0byB0aGUgYWN0dWFsIGZ1bmN0aW9uYWxpdHkuCiAgICAtIFNvbWUgc2ltcGxp
ZmljYXRpb24gd2l0aCBzdXBwb3J0ZWQgc2xpY2VzIGZvciBCWFQgYW5kIEdMSwogICAgLSBza2xf
cGlwZV9kb3duc2NhbGVfYW1vdW50IC0+IGljbF9waXBlX2Rvd25zY2FsZV9hbW91bnQgYXMKICAg
ICAgdGhpcyBpcyBub3QgdXNlZCBmb3Igc2tsIGFueW1vcmUuCiAgICAtIENoYW5nZWQgREJ1ZiBz
bGljZSBhc3NpZ25tZW50IG9yZGVyIGZvciBUR0wgY2FzZQoKdjg6IEZpeCBjaGVja3BhdGNoL3Nw
YXJzZSB3YXJuaW5ncy4KClJldmlld2VkLWJ5OiBNYXR0aGV3IFJvcGVyIDxtYXR0aGV3LmQucm9w
ZXJAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zza2l5IDxzdGFuaXNs
YXYubGlzb3Zza2l5QGludGVsLmNvbT4KQ2M6IE1hdHRoZXcgUm9wZXIgPG1hdHRoZXcuZC5yb3Bl
ckBpbnRlbC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAaW50ZWwuY29t
PgpDYzogSmFtZXMgQXVzbXVzIDxqYW1lcy5hdXNtdXNAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAyNiArLQogLi4uL2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jICAgIHwgIDk4ICsrLS0tCiAuLi4vZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmggICAgfCAgIDIgKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAgICAgICAgICAgIHwgICA1ICsKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9wY2kuYyAgICAgICAgICAgICAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3JlZy5oICAgICAgICAgICAgICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmggICAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAzODQgKysrKysrKysrKysrKysrKy0tCiA5
IGZpbGVzIGNoYW5nZWQsIDQyOCBpbnNlcnRpb25zKCspLCAxMDQgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCAyM2YwMGE2
NTE3MzguLmVkNmViNzQ3MjM5MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmMKQEAgLTEzNDE4LDcgKzEzNDE4LDcgQEAgc3RhdGljIHZvaWQgdmVyaWZ5
X3dtX3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCiAJaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPj0gMTEgJiYKIAkgICAgaHctPmRkYi5lbmFibGVkX3NsaWNlcyAhPSBzd19kZGItPmVu
YWJsZWRfc2xpY2VzKQotCQlEUk1fRVJST1IoIm1pc21hdGNoIGluIERCVUYgU2xpY2VzIChleHBl
Y3RlZCAldSwgZ290ICV1KVxuIiwKKwkJRFJNX0VSUk9SKCJtaXNtYXRjaCBpbiBEQlVGIFNsaWNl
cyAoZXhwZWN0ZWQgJXgsIGdvdCAleClcbiIsCiAJCQkgIHN3X2RkYi0+ZW5hYmxlZF9zbGljZXMs
CiAJCQkgIGh3LT5kZGIuZW5hYmxlZF9zbGljZXMpOwogCkBAIC0xNDY1MCwxNSArMTQ2NTAsMjQg
QEAgc3RhdGljIHZvaWQgc2tsX2NvbW1pdF9tb2Rlc2V0X2VuYWJsZXMoc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUpCiAJdTggaHdfZW5hYmxlZF9zbGljZXMgPSBkZXZfcHJpdi0+d20u
c2tsX2h3LmRkYi5lbmFibGVkX3NsaWNlczsKIAl1OCByZXF1aXJlZF9zbGljZXMgPSBzdGF0ZS0+
d21fcmVzdWx0cy5kZGIuZW5hYmxlZF9zbGljZXM7CiAJc3RydWN0IHNrbF9kZGJfZW50cnkgZW50
cmllc1tJOTE1X01BWF9QSVBFU10gPSB7fTsKKwl1OCBzbGljZXNfdW5pb24gPSBod19lbmFibGVk
X3NsaWNlcyB8IHJlcXVpcmVkX3NsaWNlczsKKwl1OCBzbGljZXNfaW50ZXJzZWN0aW9uID0gcmVx
dWlyZWRfc2xpY2VzOwogCiAJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3Rh
dGUsIGNydGMsIG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0Y19zdGF0ZSwgaSkKIAkJLyogaWdub3Jl
IGFsbG9jYXRpb25zIGZvciBjcnRjJ3MgdGhhdCBoYXZlIGJlZW4gdHVybmVkIG9mZi4gKi8KIAkJ
aWYgKG5ld19jcnRjX3N0YXRlLT5ody5hY3RpdmUpCiAJCQllbnRyaWVzW2ldID0gb2xkX2NydGNf
c3RhdGUtPndtLnNrbC5kZGI7CiAKLQkvKiBJZiAybmQgREJ1ZiBzbGljZSByZXF1aXJlZCwgZW5h
YmxlIGl0IGhlcmUgKi8KLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSAmJiByZXF1aXJl
ZF9zbGljZXMgPiBod19lbmFibGVkX3NsaWNlcykKLQkJaWNsX2RidWZfc2xpY2VzX3VwZGF0ZShk
ZXZfcHJpdiwgcmVxdWlyZWRfc2xpY2VzKTsKKwlEUk1fREVCVUdfS01TKCJEQnVmIHJlcSBzbGlj
ZXMgJWQgaHcgc2xpY2VzICVkXG4iLAorCQkgICAgICByZXF1aXJlZF9zbGljZXMsIGh3X2VuYWJs
ZWRfc2xpY2VzKTsKKworCS8qCisJICogSWYgc29tZSBvdGhlciBEQnVmIHNsaWNlIHJlcXVpcmVk
LCBlbmFibGUgaXQgaGVyZSwKKwkgKiBhcyBoZXJlIHdlIG9ubHkgYWRkIG1vcmUgc2xpY2VzLCBi
dXQgbm90IHJlbW92ZSB0byBwcmV2ZW50CisJICogaXNzdWVzIGlmIHNvbWVib2R5IHN0aWxsIHVz
ZXMgdGhvc2UuCisJICovCisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYgcmVxdWly
ZWRfc2xpY2VzICE9IGh3X2VuYWJsZWRfc2xpY2VzKQorCQlpY2xfZGJ1Zl9zbGljZXNfdXBkYXRl
KGRldl9wcml2LCBzbGljZXNfdW5pb24pOwogCiAJLyoKIAkgKiBXaGVuZXZlciB0aGUgbnVtYmVy
IG9mIGFjdGl2ZSBwaXBlcyBjaGFuZ2VzLCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB3ZQpAQCAtMTQ3
MTcsOSArMTQ3MjYsMTIgQEAgc3RhdGljIHZvaWQgc2tsX2NvbW1pdF9tb2Rlc2V0X2VuYWJsZXMo
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCX0KIAl9IHdoaWxlIChwcm9ncmVz
cyk7CiAKLQkvKiBJZiAybmQgREJ1ZiBzbGljZSBpcyBubyBtb3JlIHJlcXVpcmVkIGRpc2FibGUg
aXQgKi8KLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSAmJiByZXF1aXJlZF9zbGljZXMg
PCBod19lbmFibGVkX3NsaWNlcykKLQkJaWNsX2RidWZfc2xpY2VzX3VwZGF0ZShkZXZfcHJpdiwg
cmVxdWlyZWRfc2xpY2VzKTsKKwkvKgorCSAqIElmIHNvbWUgb3RoZXIgREJ1ZiBzbGljZSBpcyBu
b3QgbmVlZGVkLCBkaXNhYmxlIGl0IGhlcmUsCisJICogYXMgaGVyZSB3ZSBvbmx5IHJlbW92ZSBz
bGljZXMsIHdoaWNoIGFyZSBub3QgbmVlZGVkIGFueW1vcmUuCisJICovCisJaWYgKElOVEVMX0dF
TihkZXZfcHJpdikgPj0gMTEgJiYgcmVxdWlyZWRfc2xpY2VzICE9IGh3X2VuYWJsZWRfc2xpY2Vz
KQorCQlpY2xfZGJ1Zl9zbGljZXNfdXBkYXRlKGRldl9wcml2LCBzbGljZXNfaW50ZXJzZWN0aW9u
KTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2hlbHBlcl9mcmVlX3N0YXRlKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKaW5kZXggY2UxYjY0ZjRkZDQ0Li5hNzhi
YzliNjE4NjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV9wb3dlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV9wb3dlci5jCkBAIC0xMDMxLDE1ICsxMDMxLDYgQEAgc3RhdGljIGJvb2wgZ2VuOV9k
Y19vZmZfcG93ZXJfd2VsbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAkJKEk5MTVfUkVBRChEQ19TVEFURV9FTikgJiBEQ19TVEFURV9FTl9VUFRPX0RDNV9EQzZf
TUFTSykgPT0gMCk7CiB9CiAKLXN0YXRpYyB2b2lkIGdlbjlfYXNzZXJ0X2RidWZfZW5hYmxlZChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCi17Ci0JdTMyIHRtcCA9IEk5MTVfUkVB
RChEQlVGX0NUTCk7Ci0KLQlXQVJOKCh0bXAgJiAoREJVRl9QT1dFUl9TVEFURSB8IERCVUZfUE9X
RVJfUkVRVUVTVCkpICE9Ci0JICAgICAoREJVRl9QT1dFUl9TVEFURSB8IERCVUZfUE9XRVJfUkVR
VUVTVCksCi0JICAgICAiVW5leHBlY3RlZCBEQnVmIHBvd2VyIHBvd2VyIHN0YXRlICgweCUwOHgp
XG4iLCB0bXApOwotfQotCiBzdGF0aWMgdm9pZCBnZW45X2Rpc2FibGVfZGNfc3RhdGVzKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAlzdHJ1Y3QgaW50ZWxfY2RjbGtfc3Rh
dGUgY2RjbGtfc3RhdGUgPSB7fTsKQEAgLTEwNTUsOCArMTA0Niw2IEBAIHN0YXRpYyB2b2lkIGdl
bjlfZGlzYWJsZV9kY19zdGF0ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CS8qIENhbid0IHJlYWQgb3V0IHZvbHRhZ2VfbGV2ZWwgc28gY2FuJ3QgdXNlIGludGVsX2NkY2xr
X2NoYW5nZWQoKSAqLwogCVdBUk5fT04oaW50ZWxfY2RjbGtfbmVlZHNfbW9kZXNldCgmZGV2X3By
aXYtPmNkY2xrLmh3LCAmY2RjbGtfc3RhdGUpKTsKIAotCWdlbjlfYXNzZXJ0X2RidWZfZW5hYmxl
ZChkZXZfcHJpdik7Ci0KIAlpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpCiAJCWJ4dF92ZXJpZnlf
ZGRpX3BoeV9wb3dlcl93ZWxscyhkZXZfcHJpdik7CiAKQEAgLTQyNTQsMzEgKzQyNDMsNTEgQEAg
c3RhdGljIHZvaWQgZ2VuOV9kYnVmX2Rpc2FibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogCWludGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LCBEQlVGX0NUTCwgZmFsc2Up
OwogfQogCi1zdGF0aWMgdTggaW50ZWxfZGJ1Zl9tYXhfc2xpY2VzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKK2ludCBpbnRlbF9kYnVmX21heF9zbGljZXMoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEp
Ci0JCXJldHVybiAxOwotCXJldHVybiAyOworCXJldHVybiBJTlRFTF9JTkZPKGRldl9wcml2KS0+
c3VwcG9ydGVkX3NsaWNlczsKK30KKwordm9pZCBpY2xfcHJvZ3JhbV9kYnVmX3NsaWNlcyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCit7CisJY29uc3QgdTggaHdfZW5hYmxlZF9z
bGljZXMgPSBkZXZfcHJpdi0+d20uc2tsX2h3LmRkYi5lbmFibGVkX3NsaWNlczsKKworCWljbF9k
YnVmX3NsaWNlc191cGRhdGUoZGV2X3ByaXYsIGh3X2VuYWJsZWRfc2xpY2VzKTsKIH0KIAogdm9p
ZCBpY2xfZGJ1Zl9zbGljZXNfdXBkYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAkJCSAgICB1OCByZXFfc2xpY2VzKQogewotCWNvbnN0IHU4IGh3X2VuYWJsZWRfc2xpY2Vz
ID0gZGV2X3ByaXYtPndtLnNrbF9ody5kZGIuZW5hYmxlZF9zbGljZXM7Ci0JYm9vbCByZXQ7CisJ
Ym9vbCByZXQgPSB0cnVlOworCWludCBpOworCWludCBtYXhfc2xpY2VzID0gaW50ZWxfZGJ1Zl9t
YXhfc2xpY2VzKGRldl9wcml2KTsKIAotCWlmIChyZXFfc2xpY2VzID4gaW50ZWxfZGJ1Zl9tYXhf
c2xpY2VzKGRldl9wcml2KSkgeworCWlmIChod2VpZ2h0OChyZXFfc2xpY2VzKSA+IGludGVsX2Ri
dWZfbWF4X3NsaWNlcyhkZXZfcHJpdikpIHsKIAkJRFJNX0VSUk9SKCJJbnZhbGlkIG51bWJlciBv
ZiBkYnVmIHNsaWNlcyByZXF1ZXN0ZWRcbiIpOwogCQlyZXR1cm47CiAJfQogCi0JaWYgKHJlcV9z
bGljZXMgPT0gaHdfZW5hYmxlZF9zbGljZXMgfHwgcmVxX3NsaWNlcyA9PSAwKQotCQlyZXR1cm47
CisJRFJNX0RFQlVHX0tNUygiVXBkYXRpbmcgZGJ1ZiBzbGljZXMgdG8gJXhcbiIsIHJlcV9zbGlj
ZXMpOwogCi0JaWYgKHJlcV9zbGljZXMgPiBod19lbmFibGVkX3NsaWNlcykKLQkJcmV0ID0gaW50
ZWxfZGJ1Zl9zbGljZV9zZXQoZGV2X3ByaXYsIERCVUZfQ1RMX1MyLCB0cnVlKTsKLQllbHNlCi0J
CXJldCA9IGludGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LCBEQlVGX0NUTF9TMiwgZmFsc2Up
OworCWZvciAoaSA9IDA7IGkgPCBtYXhfc2xpY2VzOyBpKyspIHsKKwkJaW50IHNsaWNlX2JpdCA9
IEJJVChpKTsKKwkJYm9vbCBzbGljZV9zZXQgPSAoc2xpY2VfYml0ICYgcmVxX3NsaWNlcykgIT0g
MDsKKworCQlzd2l0Y2ggKHNsaWNlX2JpdCkgeworCQljYXNlIERCVUZfUzFfQklUOgorCQkJcmV0
ID0gcmV0ICYmIGludGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LAorCQkJCQkJCSAgREJVRl9D
VExfUzEsCisJCQkJCQkJICBzbGljZV9zZXQpOworCQkJYnJlYWs7CisJCWNhc2UgREJVRl9TMl9C
SVQ6CisJCQlyZXQgPSByZXQgJiYgaW50ZWxfZGJ1Zl9zbGljZV9zZXQoZGV2X3ByaXYsCisJCQkJ
CQkJICBEQlVGX0NUTF9TMiwKKwkJCQkJCQkgIHNsaWNlX3NldCk7CisJCQlicmVhazsKKwkJZGVm
YXVsdDoKKwkJCU1JU1NJTkdfQ0FTRShzbGljZV9iaXQpOworCQl9CisJfQogCiAJaWYgKHJldCkK
IAkJZGV2X3ByaXYtPndtLnNrbF9ody5kZGIuZW5hYmxlZF9zbGljZXMgPSByZXFfc2xpY2VzOwpA
QCAtNDI4Niw0MCArNDI5NSwyMSBAQCB2b2lkIGljbF9kYnVmX3NsaWNlc191cGRhdGUoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCiBzdGF0aWMgdm9pZCBpY2xfZGJ1Zl9lbmFi
bGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCUk5MTVfV1JJVEUoREJV
Rl9DVExfUzEsIEk5MTVfUkVBRChEQlVGX0NUTF9TMSkgfCBEQlVGX1BPV0VSX1JFUVVFU1QpOwot
CUk5MTVfV1JJVEUoREJVRl9DVExfUzIsIEk5MTVfUkVBRChEQlVGX0NUTF9TMikgfCBEQlVGX1BP
V0VSX1JFUVVFU1QpOwotCVBPU1RJTkdfUkVBRChEQlVGX0NUTF9TMik7Ci0KLQl1ZGVsYXkoMTAp
OwotCi0JaWYgKCEoSTkxNV9SRUFEKERCVUZfQ1RMX1MxKSAmIERCVUZfUE9XRVJfU1RBVEUpIHx8
Ci0JICAgICEoSTkxNV9SRUFEKERCVUZfQ1RMX1MyKSAmIERCVUZfUE9XRVJfU1RBVEUpKQotCQlE
Uk1fRVJST1IoIkRCdWYgcG93ZXIgZW5hYmxlIHRpbWVvdXRcbiIpOwotCWVsc2UKLQkJLyoKLQkJ
ICogRklYTUU6IGZvciBub3cgcHJldGVuZCB0aGF0IHdlIG9ubHkgaGF2ZSAxIHNsaWNlLCBzZWUK
LQkJICogaW50ZWxfZW5hYmxlZF9kYnVmX3NsaWNlc19udW0oKS4KLQkJICovCi0JCWRldl9wcml2
LT53bS5za2xfaHcuZGRiLmVuYWJsZWRfc2xpY2VzID0gMTsKKwkvKgorCSAqIEp1c3QgcG93ZXIg
dXAgMSBzbGljZSwgd2Ugd2lsbAorCSAqIGZpZ3VyZSBvdXQgbGF0ZXIgd2hpY2ggc2xpY2VzIHdl
IGhhdmUgYW5kIHdoYXQgd2UgbmVlZC4KKwkgKi8KKwlkZXZfcHJpdi0+d20uc2tsX2h3LmRkYi5l
bmFibGVkX3NsaWNlcyA9IERCVUZfUzFfQklUOworCWljbF9wcm9ncmFtX2RidWZfc2xpY2VzKGRl
dl9wcml2KTsKIH0KIAogc3RhdGljIHZvaWQgaWNsX2RidWZfZGlzYWJsZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JSTkxNV9XUklURShEQlVGX0NUTF9TMSwgSTkxNV9S
RUFEKERCVUZfQ1RMX1MxKSAmIH5EQlVGX1BPV0VSX1JFUVVFU1QpOwotCUk5MTVfV1JJVEUoREJV
Rl9DVExfUzIsIEk5MTVfUkVBRChEQlVGX0NUTF9TMikgJiB+REJVRl9QT1dFUl9SRVFVRVNUKTsK
LQlQT1NUSU5HX1JFQUQoREJVRl9DVExfUzIpOwotCi0JdWRlbGF5KDEwKTsKLQotCWlmICgoSTkx
NV9SRUFEKERCVUZfQ1RMX1MxKSAmIERCVUZfUE9XRVJfU1RBVEUpIHx8Ci0JICAgIChJOTE1X1JF
QUQoREJVRl9DVExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkpCi0JCURSTV9FUlJPUigiREJ1ZiBw
b3dlciBkaXNhYmxlIHRpbWVvdXQhXG4iKTsKLQllbHNlCi0JCS8qCi0JCSAqIEZJWE1FOiBmb3Ig
bm93IHByZXRlbmQgdGhhdCB0aGUgZmlyc3Qgc2xpY2UgaXMgYWx3YXlzCi0JCSAqIGVuYWJsZWQs
IHNlZSBpbnRlbF9lbmFibGVkX2RidWZfc2xpY2VzX251bSgpLgotCQkgKi8KLQkJZGV2X3ByaXYt
PndtLnNrbF9ody5kZGIuZW5hYmxlZF9zbGljZXMgPSAxOworCS8qCisJICogRGlzYWJsZSBhbGwg
c2xpY2VzCisJICovCisJZGV2X3ByaXYtPndtLnNrbF9ody5kZGIuZW5hYmxlZF9zbGljZXMgPSAw
OworCWljbF9wcm9ncmFtX2RidWZfc2xpY2VzKGRldl9wcml2KTsKIH0KIAogc3RhdGljIHZvaWQg
aWNsX21idXNfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5oCmluZGV4
IDFkYTA0ZjNlMGZiMy4uYjcwNTdkNjhhZDc4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaApAQCAtMzExLDggKzMxMSwxMCBAQCBp
bnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF9hc3luYyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKIAlmb3IgKCh3ZikgPSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldCgoaTkxNSksIChkb21haW4p
KTsgKHdmKTsgXAogCSAgICAgaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5bmMoKGk5MTUpLCAo
ZG9tYWluKSwgKHdmKSksICh3ZikgPSAwKQogCitpbnQgaW50ZWxfZGJ1Zl9tYXhfc2xpY2VzKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGljbF9kYnVmX3NsaWNlc191
cGRhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICAgIHU4IHJlcV9z
bGljZXMpOwordm9pZCBpY2xfcHJvZ3JhbV9kYnVmX3NsaWNlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYpOwogCiB2b2lkIGNodl9waHlfcG93ZXJnYXRlX2xhbmVzKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJICAgICBib29sIG92ZXJyaWRlLCB1bnNpZ25lZCBp
bnQgbWFzayk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCA4ZDcwNDk3OTJkNjIuLmNjMmIy
ZTU1ZWE2NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC01MSw2ICs1MSw3IEBACiAjaW5j
bHVkZSAiZGlzcGxheS9pbnRlbF9idy5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxfY2RjbGsu
aCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCIKKyNpbmNsdWRlICJk
aXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX2Rw
LmgiCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9mYmRldi5oIgogI2luY2x1ZGUgImRpc3BsYXkv
aW50ZWxfaG90cGx1Zy5oIgpAQCAtMjU5MSw2ICsyNTkyLDEwIEBAIHN0YXRpYyBpbnQgaW50ZWxf
cnVudGltZV9yZXN1bWUoc3RydWN0IGRldmljZSAqa2RldikKIAlpZiAoSVNfVkFMTEVZVklFVyhk
ZXZfcHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCiAJCXJldCA9IHZsdl9yZXN1bWVf
cHJlcGFyZShkZXZfcHJpdiwgdHJ1ZSk7CiAKKwkvKiBXZWlyZCBoYWNrIHRvIGZpeCBJQ0wgaGFy
ZHdhcmUgYnVnLCBhcyBpdCByZXNldHMgREJVRiBzbGljZXMgcmVnICovCisJaWYgKElOVEVMX0dF
TihkZXZfcHJpdikgPT0gMTEpCisJCWljbF9wcm9ncmFtX2RidWZfc2xpY2VzKGRldl9wcml2KTsK
KwogCWludGVsX3VuY29yZV9ydW50aW1lX3Jlc3VtZSgmZGV2X3ByaXYtPnVuY29yZSk7CiAKIAlp
bnRlbF9ydW50aW1lX3BtX2VuYWJsZV9pbnRlcnJ1cHRzKGRldl9wcml2KTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCmluZGV4IGJiZjRkZmRmYThiYS4uM2I2NTdiMTYyYzU4IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmgKQEAgLTc5OSw3ICs3OTksNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgc2tsX2Rk
Yl9lbnRyeV9lcXVhbChjb25zdCBzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSAqZTEsCiB9CiAKIHN0cnVj
dCBza2xfZGRiX2FsbG9jYXRpb24gewotCXU4IGVuYWJsZWRfc2xpY2VzOyAvKiBHRU4xMSBoYXMg
Y29uZmlndXJhYmxlIDIgc2xpY2VzICovCisJdTggZW5hYmxlZF9zbGljZXM7ICAgLyogQml0bWFz
ayBvZiBjdXJyZW50bHkgZW5hYmxlZCBEQnVmIHNsaWNlcyAqLwogfTsKIAogc3RydWN0IHNrbF9k
ZGJfdmFsdWVzIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5jCmluZGV4IGRhM2U5YjU3NTJhYy4uYWEy
ZDk0MmRmYzZjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMKQEAgLTYxNCw3ICs2MTQsOCBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2RldmljZV9pbmZvIGludGVsX2NoZXJyeXZpZXdfaW5m
byA9IHsKIAkuaGFzX2d0X3VjID0gMSwgXAogCS5kaXNwbGF5Lmhhc19oZGNwID0gMSwgXAogCS5k
aXNwbGF5Lmhhc19pcGMgPSAxLCBcCi0JLmRkYl9zaXplID0gODk2CisJLmRkYl9zaXplID0gODk2
LCBcCisJLnN1cHBvcnRlZF9zbGljZXMgPSAxCiAKICNkZWZpbmUgU0tMX1BMQVRGT1JNIFwKIAlH
RU45X0ZFQVRVUkVTLCBcCkBAIC02NTAsNiArNjUxLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBp
bnRlbF9kZXZpY2VfaW5mbyBpbnRlbF9za3lsYWtlX2d0NF9pbmZvID0gewogCUdFTig5KSwgXAog
CS5pc19scCA9IDEsIFwKIAkuZGlzcGxheS5oYXNfaG90cGx1ZyA9IDEsIFwKKwkuc3VwcG9ydGVk
X3NsaWNlcyA9IDEsIFwKIAkuZW5naW5lX21hc2sgPSBCSVQoUkNTMCkgfCBCSVQoVkNTMCkgfCBC
SVQoQkNTMCkgfCBCSVQoVkVDUzApLCBcCiAJLnBpcGVfbWFzayA9IEJJVChQSVBFX0EpIHwgQklU
KFBJUEVfQikgfCBCSVQoUElQRV9DKSwgXAogCS5oYXNfNjRiaXRfcmVsb2MgPSAxLCBcCkBAIC03
MzcsNiArNzM5LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9kZXZpY2VfaW5mbyBpbnRl
bF9jb2ZmZWVsYWtlX2d0M19pbmZvID0gewogCUdFTjlfRkVBVFVSRVMsIFwKIAlHRU4oMTApLCBc
CiAJLmRkYl9zaXplID0gMTAyNCwgXAorCS5zdXBwb3J0ZWRfc2xpY2VzID0gMSwgXAogCS5kaXNw
bGF5Lmhhc19kc2MgPSAxLCBcCiAJLmhhc19jb2hlcmVudF9nZ3R0ID0gZmFsc2UsIFwKIAlHTEtf
Q09MT1JTCkBAIC03NzMsNiArNzc2LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9kZXZp
Y2VfaW5mbyBpbnRlbF9jYW5ub25sYWtlX2luZm8gPSB7CiAJfSwgXAogCUdFTigxMSksIFwKIAku
ZGRiX3NpemUgPSAyMDQ4LCBcCisJLnN1cHBvcnRlZF9zbGljZXMgPSAyLCBcCiAJLmhhc19sb2dp
Y2FsX3JpbmdfZWxzcSA9IDEsIFwKIAkuY29sb3IgPSB7IC5kZWdhbW1hX2x1dF9zaXplID0gMzMs
IC5nYW1tYV9sdXRfc2l6ZSA9IDI2MjE0NSB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfcmVnLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCmluZGV4
IDk0ZDBmNTkzZWViNy4uZTc4YmE4N2Y0YWMwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKQEAg
LTc3NTcsOSArNzc1NywxMSBAQCBlbnVtIHsKICNkZWZpbmUgRElTUF9BUkJfQ1RMMglfTU1JTygw
eDQ1MDA0KQogI2RlZmluZSAgRElTUF9EQVRBX1BBUlRJVElPTl81XzYJKDEgPDwgNikKICNkZWZp
bmUgIERJU1BfSVBDX0VOQUJMRQkJKDEgPDwgMykKLSNkZWZpbmUgREJVRl9DVEwJX01NSU8oMHg0
NTAwOCkKLSNkZWZpbmUgREJVRl9DVExfUzEJX01NSU8oMHg0NTAwOCkKLSNkZWZpbmUgREJVRl9D
VExfUzIJX01NSU8oMHg0NEZFOCkKKyNkZWZpbmUgREJVRl9TMV9CSVQJCQlCSVQoMCkKKyNkZWZp
bmUgREJVRl9TMl9CSVQJCQlCSVQoMSkKKyNkZWZpbmUgREJVRl9DVEwJCQlfTU1JTygweDQ1MDA4
KQorI2RlZmluZSBEQlVGX0NUTF9TMQkJCV9NTUlPKDB4NDUwMDgpCisjZGVmaW5lIERCVUZfQ1RM
X1MyCQkJX01NSU8oMHg0NEZFOCkKICNkZWZpbmUgIERCVUZfUE9XRVJfUkVRVUVTVAkJKDEgPDwg
MzEpCiAjZGVmaW5lICBEQlVGX1BPV0VSX1NUQVRFCQkoMSA8PCAzMCkKICNkZWZpbmUgR0VON19N
U0dfQ1RMCV9NTUlPKDB4NDUwMTApCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9kZXZpY2VfaW5mby5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2lu
Zm8uaAppbmRleCA0YmRmOGE2Y2ZiNDcuLmJhMzRlMWE1YzU5MSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9kZXZpY2VfaW5mby5oCkBAIC0xODAsNiArMTgwLDcgQEAgc3RydWN0IGludGVs
X2RldmljZV9pbmZvIHsKIAl9IGRpc3BsYXk7CiAKIAl1MTYgZGRiX3NpemU7IC8qIGluIGJsb2Nr
cyAqLworCXU4IHN1cHBvcnRlZF9zbGljZXM7IC8qIG51bWJlciBvZiBEQnVmIHNsaWNlcyAqLwog
CiAJLyogUmVnaXN0ZXIgb2Zmc2V0cyBmb3IgdGhlIHZhcmlvdXMgZGlzcGxheSBwaXBlcyBhbmQg
dHJhbnNjb2RlcnMgKi8KIAlpbnQgcGlwZV9vZmZzZXRzW0k5MTVfTUFYX1RSQU5TQ09ERVJTXTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4IDI4NzYwMmIxZTQyNi4uZmE3MzI1YjExMDI0IDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAgLTM1OTQsMjQgKzM1OTQsMjAgQEAgYm9vbCBpbGtf
ZGlzYWJsZV9scF93bShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXJldHVybiBfaWxrX2Rpc2Fi
bGVfbHBfd20oZGV2X3ByaXYsIFdNX0RJUlRZX0xQX0FMTCk7CiB9CiAKLXN0YXRpYyB1OCBpbnRl
bF9lbmFibGVkX2RidWZfc2xpY2VzX251bShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCitzdGF0aWMgdTggaW50ZWxfZW5hYmxlZF9kYnVmX3NsaWNlcyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JdTggZW5hYmxlZF9zbGljZXM7Ci0KLQkvKiBTbGljZSAx
IHdpbGwgYWx3YXlzIGJlIGVuYWJsZWQgKi8KLQllbmFibGVkX3NsaWNlcyA9IDE7CisJdTggZW5h
YmxlZF9zbGljZXMgPSAwOwogCiAJLyogR2VuIHByaW9yIHRvIEdFTjExIGhhdmUgb25seSBvbmUg
REJ1ZiBzbGljZSAqLwogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEpCi0JCXJldHVybiBl
bmFibGVkX3NsaWNlczsKKwkJcmV0dXJuIERCVUZfUzFfQklUOwogCi0JLyoKLQkgKiBGSVhNRTog
Zm9yIG5vdyB3ZSdsbCBvbmx5IGV2ZXIgdXNlIDEgc2xpY2U7IHByZXRlbmQgdGhhdCB3ZSBoYXZl
Ci0JICogb25seSB0aGF0IDEgc2xpY2UgZW5hYmxlZCB1bnRpbCB3ZSBoYXZlIGEgcHJvcGVyIHdh
eSBmb3Igb24tZGVtYW5kCi0JICogdG9nZ2xpbmcgb2YgdGhlIHNlY29uZCBzbGljZS4KLQkgKi8K
LQlpZiAoMCAmJiBJOTE1X1JFQUQoREJVRl9DVExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkKLQkJ
ZW5hYmxlZF9zbGljZXMrKzsKKwkvKiBDaGVjayBpZiBzZWNvbmQgREJ1ZiBzbGljZSBpcyBlbmFi
bGVkICovCisJaWYgKEk5MTVfUkVBRChEQlVGX0NUTF9TMSkgJiBEQlVGX1BPV0VSX1NUQVRFKQor
CQllbmFibGVkX3NsaWNlcyB8PSBEQlVGX1MxX0JJVDsKKworCWlmIChJOTE1X1JFQUQoREJVRl9D
VExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkKKwkJZW5hYmxlZF9zbGljZXMgfD0gREJVRl9TMl9C
SVQ7CiAKIAlyZXR1cm4gZW5hYmxlZF9zbGljZXM7CiB9CkBAIC0zODIwLDM2ICszODE2LDM4IEBA
IHN0YXRpYyB1MTYgaW50ZWxfZ2V0X2RkYl9zaXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAkJCSAgICAgIGNvbnN0IGludCBudW1fYWN0aXZlLAogCQkJICAgICAgc3RydWN0
IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiKQogewotCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9t
b2RlICphZGp1c3RlZF9tb2RlOwotCXU2NCB0b3RhbF9kYXRhX2J3OwogCXUxNiBkZGJfc2l6ZSA9
IElOVEVMX0lORk8oZGV2X3ByaXYpLT5kZGJfc2l6ZTsKLQogCVdBUk5fT04oZGRiX3NpemUgPT0g
MCk7CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQogCQlyZXR1cm4gZGRiX3NpemUg
LSA0OyAvKiA0IGJsb2NrcyBmb3IgYnlwYXNzIHBhdGggYWxsb2NhdGlvbiAqLwogCi0JYWRqdXN0
ZWRfbW9kZSA9ICZjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwotCXRvdGFsX2RhdGFfYncg
PSB0b3RhbF9kYXRhX3JhdGUgKiBkcm1fbW9kZV92cmVmcmVzaChhZGp1c3RlZF9tb2RlKTsKKwly
ZXR1cm4gZGRiX3NpemU7Cit9CiAKLQkvKgotCSAqIDEyR0IvcyBpcyBtYXhpbXVtIEJXIHN1cHBv
cnRlZCBieSBzaW5nbGUgREJ1ZiBzbGljZS4KLQkgKgotCSAqIEZJWE1FIGRidWYgc2xpY2UgY29k
ZSBpcyBicm9rZW46Ci0JICogLSBtdXN0IHdhaXQgZm9yIHBsYW5lcyB0byBzdG9wIHVzaW5nIHRo
ZSBzbGljZSBiZWZvcmUgcG93ZXJpbmcgaXQgb2ZmCi0JICogLSBwbGFuZSBzdHJhZGRsaW5nIGJv
dGggc2xpY2VzIGlzIGlsbGVnYWwgaW4gbXVsdGktcGlwZSBzY2VuYXJpb3MKLQkgKiAtIHNob3Vs
ZCB2YWxpZGF0ZSB3ZSBzdGF5IHdpdGhpbiB0aGUgaHcgYmFuZHdpZHRoIGxpbWl0cwotCSAqLwot
CWlmICgwICYmIChudW1fYWN0aXZlID4gMSB8fCB0b3RhbF9kYXRhX2J3ID49IEdCcHMoMTIpKSkg
ewotCQlkZGItPmVuYWJsZWRfc2xpY2VzID0gMjsKLQl9IGVsc2UgewotCQlkZGItPmVuYWJsZWRf
c2xpY2VzID0gMTsKLQkJZGRiX3NpemUgLz0gMjsKLQl9CisvKgorICogQ2FsY3VsYXRlIGluaXRp
YWwgREJ1ZiBzbGljZSBvZmZzZXQsIGJhc2VkIG9uIHNsaWNlIHNpemUKKyAqIGFuZCBtYXNrKGku
ZSBpZiBzbGljZSBzaXplIGlzIDEwMjQgYW5kIHNlY29uZCBzbGljZSBpcyBlbmFibGVkCisgKiBv
ZmZzZXQgd291bGQgYmUgMTAyNCkKKyAqLworc3RhdGljIHUzMiBza2xfZ2V0X2ZpcnN0X2RidWZf
c2xpY2Vfb2Zmc2V0KHUzMiBkYnVmX3NsaWNlX21hc2ssCisJCQkJCSAgIHUzMiBzbGljZV9zaXpl
LCB1MzIgZGRiX3NpemUpCit7CisJdTMyIG9mZnNldCA9IDA7CiAKLQlyZXR1cm4gZGRiX3NpemU7
CisJaWYgKCFkYnVmX3NsaWNlX21hc2spCisJCXJldHVybiAwOworCisJb2Zmc2V0ID0gKGZmcyhk
YnVmX3NsaWNlX21hc2spIC0gMSkgKiBzbGljZV9zaXplOworCisJV0FSTl9PTihvZmZzZXQgPj0g
ZGRiX3NpemUpOworCXJldHVybiBvZmZzZXQ7CiB9CiAKK3UzMiBpOTE1X2FsbG93ZWRfZGJ1Zl9t
YXNrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCSAgIGludCBwaXBlLCB1
MzIgYWN0aXZlX3BpcGVzLAorCQkJICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpOworCiBzdGF0aWMgdm9pZAogc2tsX2RkYl9nZXRfcGlwZV9hbGxvY2F0aW9uX2xp
bWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkJICAgY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCkBAIC0zODY1LDcgKzM4NjMsMTQgQEAg
c2tsX2RkYl9nZXRfcGlwZV9hbGxvY2F0aW9uX2xpbWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsCiAJdTMyIHBpcGVfd2lkdGggPSAwLCB0b3RhbF93aWR0aCA9IDAsIHdpZHRo
X2JlZm9yZV9waXBlID0gMDsKIAllbnVtIHBpcGUgZm9yX3BpcGUgPSB0b19pbnRlbF9jcnRjKGZv
cl9jcnRjKS0+cGlwZTsKIAl1MTYgZGRiX3NpemU7CisJdTMyIGRkYl9yYW5nZV9zaXplOwogCXUz
MiBpOworCXUzMiBkYnVmX3NsaWNlX21hc2s7CisJdTMyIGFjdGl2ZV9waXBlczsKKwl1MzIgb2Zm
c2V0OworCXUzMiBzbGljZV9zaXplOworCXUzMiB0b3RhbF9zbGljZV9tYXNrOworCXUzMiBzdGFy
dCwgZW5kOwogCiAJaWYgKFdBUk5fT04oIXN0YXRlKSB8fCAhY3J0Y19zdGF0ZS0+aHcuYWN0aXZl
KSB7CiAJCWFsbG9jLT5zdGFydCA9IDA7CkBAIC0zODc0LDE0ICszODc5LDIzIEBAIHNrbF9kZGJf
Z2V0X3BpcGVfYWxsb2NhdGlvbl9saW1pdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LAogCQlyZXR1cm47CiAJfQogCi0JaWYgKGludGVsX3N0YXRlLT5hY3RpdmVfcGlwZV9jaGFu
Z2VzKQorCWlmIChpbnRlbF9zdGF0ZS0+YWN0aXZlX3BpcGVfY2hhbmdlcykgewogCQkqbnVtX2Fj
dGl2ZSA9IGh3ZWlnaHQ4KGludGVsX3N0YXRlLT5hY3RpdmVfcGlwZXMpOwotCWVsc2UKKwkJYWN0
aXZlX3BpcGVzID0gaW50ZWxfc3RhdGUtPmFjdGl2ZV9waXBlczsKKwl9IGVsc2UgewogCQkqbnVt
X2FjdGl2ZSA9IGh3ZWlnaHQ4KGRldl9wcml2LT5hY3RpdmVfcGlwZXMpOworCQlhY3RpdmVfcGlw
ZXMgPSBkZXZfcHJpdi0+YWN0aXZlX3BpcGVzOworCX0KIAogCWRkYl9zaXplID0gaW50ZWxfZ2V0
X2RkYl9zaXplKGRldl9wcml2LCBjcnRjX3N0YXRlLCB0b3RhbF9kYXRhX3JhdGUsCiAJCQkJICAg
ICAgKm51bV9hY3RpdmUsIGRkYik7CiAKKwlEUk1fREVCVUdfS01TKCJHb3QgdG90YWwgZGRiIHNp
emUgJWRcbiIsIGRkYl9zaXplKTsKKworCXNsaWNlX3NpemUgPSBkZGJfc2l6ZSAvIElOVEVMX0lO
Rk8oZGV2X3ByaXYpLT5zdXBwb3J0ZWRfc2xpY2VzOworCisJRFJNX0RFQlVHX0tNUygiR290IERC
dWYgc2xpY2Ugc2l6ZSAlZFxuIiwgc2xpY2Vfc2l6ZSk7CisKIAkvKgogCSAqIElmIHRoZSBzdGF0
ZSBkb2Vzbid0IGNoYW5nZSB0aGUgYWN0aXZlIENSVEMncyBvciB0aGVyZSBpcyBubwogCSAqIG1v
ZGVzZXQgcmVxdWVzdCwgdGhlbiB0aGVyZSdzIG5vIG5lZWQgdG8gcmVjYWxjdWxhdGU7CkBAIC0z
ODk5LDIwICszOTEzLDY5IEBAIHNrbF9kZGJfZ2V0X3BpcGVfYWxsb2NhdGlvbl9saW1pdHMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQlyZXR1cm47CiAJfQogCisJLyoKKwkg
KiBHZXQgYWxsb3dlZCBEQnVmIHNsaWNlcyBmb3IgY29ycmVzcG9uZGVudCBwaXBlIGFuZCBwbGF0
Zm9ybS4KKwkgKi8KKwlkYnVmX3NsaWNlX21hc2sgPSBpOTE1X2FsbG93ZWRfZGJ1Zl9tYXNrKGRl
dl9wcml2LCBmb3JfcGlwZSwKKwkJCQkJCSBhY3RpdmVfcGlwZXMsIGNydGNfc3RhdGUpOworCisJ
RFJNX0RFQlVHX0tNUygiREJ1ZiBzbGljZSBtYXNrICV4IHBpcGUgJWQgYWN0aXZlIHBpcGVzICV4
XG4iLAorCQkgICAgICBkYnVmX3NsaWNlX21hc2ssCisJCSAgICAgIGZvcl9waXBlLCBhY3RpdmVf
cGlwZXMpOworCisJLyoKKwkgKiBGaWd1cmUgb3V0IGF0IHdoaWNoIERCdWYgc2xpY2Ugd2Ugc3Rh
cnQsIGkuZSBpZiB3ZSBzdGFydCBhdCBEYnVmIFMyCisJICogYW5kIHNsaWNlIHNpemUgaXMgMTAy
NCwgdGhlIG9mZnNldCB3b3VsZCBiZSAxMDI0CisJICovCisJb2Zmc2V0ID0gc2tsX2dldF9maXJz
dF9kYnVmX3NsaWNlX29mZnNldChkYnVmX3NsaWNlX21hc2ssCisJCQkJCQkgc2xpY2Vfc2l6ZSwg
ZGRiX3NpemUpOworCisJLyoKKwkgKiBGaWd1cmUgb3V0IHRvdGFsIHNpemUgb2YgYWxsb3dlZCBE
QnVmIHNsaWNlcywgd2hpY2ggaXMgYmFzaWNhbGx5CisJICogYSBudW1iZXIgb2YgYWxsb3dlZCBz
bGljZXMgZm9yIHRoYXQgcGlwZSBtdWx0aXBsaWVkIGJ5IHNsaWNlIHNpemUuCisJICogSW5zaWRl
IG9mIHRoaXMKKwkgKiByYW5nZSBkZGIgZW50cmllcyBhcmUgc3RpbGwgYWxsb2NhdGVkIGluIHBy
b3BvcnRpb24gdG8gZGlzcGxheSB3aWR0aC4KKwkgKi8KKwlkZGJfcmFuZ2Vfc2l6ZSA9IGh3ZWln
aHQ4KGRidWZfc2xpY2VfbWFzaykgKiBzbGljZV9zaXplOworCiAJLyoKIAkgKiBXYXRlcm1hcmsv
ZGRiIHJlcXVpcmVtZW50IGhpZ2hseSBkZXBlbmRzIHVwb24gd2lkdGggb2YgdGhlCiAJICogZnJh
bWVidWZmZXIsIFNvIGluc3RlYWQgb2YgYWxsb2NhdGluZyBEREIgZXF1YWxseSBhbW9uZyBwaXBl
cwogCSAqIGRpc3RyaWJ1dGUgRERCIGJhc2VkIG9uIHJlc29sdXRpb24vd2lkdGggb2YgdGhlIGRp
c3BsYXkuCiAJICovCisJdG90YWxfc2xpY2VfbWFzayA9IGRidWZfc2xpY2VfbWFzazsKIAlmb3Jf
ZWFjaF9uZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShpbnRlbF9zdGF0ZSwgY3J0YywgY3J0Y19zdGF0
ZSwgaSkgewogCQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9
CiAJCQkmY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKIAkJZW51bSBwaXBlIHBpcGUgPSBj
cnRjLT5waXBlOwogCQlpbnQgaGRpc3BsYXksIHZkaXNwbGF5OworCQl1MzIgcGlwZV9kYnVmX3Ns
aWNlX21hc2sgPSBpOTE1X2FsbG93ZWRfZGJ1Zl9tYXNrKGRldl9wcml2LAorCQkJCQkJCQkgIHBp
cGUsCisJCQkJCQkJCSAgYWN0aXZlX3BpcGVzLAorCQkJCQkJCQkgIGNydGNfc3RhdGUpOwogCiAJ
CWlmICghY3J0Y19zdGF0ZS0+aHcuZW5hYmxlKQogCQkJY29udGludWU7CiAKKwkJLyoKKwkJICog
QWNjb3JkaW5nIHRvIEJTcGVjIHBpcGUgY2FuIHNoYXJlIG9uZSBkYnVmIHNsaWNlIHdpdGggYW5v
dGhlcgorCQkgKiBwaXBlcyBvciBwaXBlIGNhbiB1c2UgbXVsdGlwbGUgZGJ1ZnMsIGluIGJvdGgg
Y2FzZXMgd2UKKwkJICogYWNjb3VudCBmb3Igb3RoZXIgcGlwZXMgb25seSBpZiB0aGV5IGhhdmUg
ZXhhY3RseSBzYW1lIG1hc2suCisJCSAqIEhvd2V2ZXIgd2UgbmVlZCB0byBhY2NvdW50IGhvdyBt
YW55IHNsaWNlcyB3ZSBzaG91bGQgZW5hYmxlCisJCSAqIGluIHRvdGFsLgorCQkgKi8KKwkJdG90
YWxfc2xpY2VfbWFzayB8PSBwaXBlX2RidWZfc2xpY2VfbWFzazsKKworCQkvKgorCQkgKiBEbyBu
b3QgYWNjb3VudCBwaXBlcyB1c2luZyBvdGhlciBzbGljZSBzZXRzCisJCSAqIGx1Y2tpbHkgYXMg
b2YgY3VycmVudCBCU3BlYyBzbGljZSBzZXRzIGRvIG5vdCBwYXJ0aWFsbHkKKwkJICogaW50ZXJz
ZWN0KHBpcGVzIHNoYXJlIGVpdGhlciBzYW1lIG9uZSBzbGljZSBvciBzYW1lIHNsaWNlIHNldAor
CQkgKiBpLmUgbm8gcGFydGlhbCBpbnRlcnNlY3Rpb24pLCBzbyBpdCBpcyBlbm91Z2ggdG8gY2hl
Y2sgZm9yCisJCSAqIGVxdWFsaXR5IGZvciBub3cuCisJCSAqLworCQlpZiAoZGJ1Zl9zbGljZV9t
YXNrICE9IHBpcGVfZGJ1Zl9zbGljZV9tYXNrKQorCQkJY29udGludWU7CisKIAkJZHJtX21vZGVf
Z2V0X2h2X3RpbWluZyhhZGp1c3RlZF9tb2RlLCAmaGRpc3BsYXksICZ2ZGlzcGxheSk7CiAJCXRv
dGFsX3dpZHRoICs9IGhkaXNwbGF5OwogCkBAIC0zOTIyLDggKzM5ODUsMTkgQEAgc2tsX2RkYl9n
ZXRfcGlwZV9hbGxvY2F0aW9uX2xpbWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsCiAJCQlwaXBlX3dpZHRoID0gaGRpc3BsYXk7CiAJfQogCi0JYWxsb2MtPnN0YXJ0ID0gZGRi
X3NpemUgKiB3aWR0aF9iZWZvcmVfcGlwZSAvIHRvdGFsX3dpZHRoOwotCWFsbG9jLT5lbmQgPSBk
ZGJfc2l6ZSAqICh3aWR0aF9iZWZvcmVfcGlwZSArIHBpcGVfd2lkdGgpIC8gdG90YWxfd2lkdGg7
CisJZGRiLT5lbmFibGVkX3NsaWNlcyA9IHRvdGFsX3NsaWNlX21hc2s7CisKKwlzdGFydCA9IGRk
Yl9yYW5nZV9zaXplICogd2lkdGhfYmVmb3JlX3BpcGUgLyB0b3RhbF93aWR0aDsKKwllbmQgPSBk
ZGJfcmFuZ2Vfc2l6ZSAqICh3aWR0aF9iZWZvcmVfcGlwZSArIHBpcGVfd2lkdGgpIC8gdG90YWxf
d2lkdGg7CisKKwlhbGxvYy0+c3RhcnQgPSBvZmZzZXQgKyBzdGFydDsKKwlhbGxvYy0+ZW5kID0g
b2Zmc2V0ICsgZW5kOworCisJRFJNX0RFQlVHX0tNUygiUGlwZSAlZCBkZGIgJWQtJWRcbiIsIGZv
cl9waXBlLAorCQkgICAgICBhbGxvYy0+c3RhcnQsIGFsbG9jLT5lbmQpOworCURSTV9ERUJVR19L
TVMoIkVuYWJsZWQgZGRiIHNsaWNlcyBtYXNrICV4IG51bSBzdXBwb3J0ZWQgJWRcbiIsCisJCSAg
ICAgIGRkYi0+ZW5hYmxlZF9zbGljZXMsCisJCSAgICAgIElOVEVMX0lORk8oZGV2X3ByaXYpLT5z
dXBwb3J0ZWRfc2xpY2VzKTsKIH0KIAogc3RhdGljIGludCBza2xfY29tcHV0ZV93bV9wYXJhbXMo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCkBAIC00MDQ0LDcgKzQx
MTgsOCBAQCB2b2lkIHNrbF9waXBlX2RkYl9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVsX2NydGMg
KmNydGMsCiB2b2lkIHNrbF9kZGJfZ2V0X2h3X3N0YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIAkJCSAgc3RydWN0IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiIC8qIG91dCAq
LykKIHsKLQlkZGItPmVuYWJsZWRfc2xpY2VzID0gaW50ZWxfZW5hYmxlZF9kYnVmX3NsaWNlc19u
dW0oZGV2X3ByaXYpOworCWRkYi0+ZW5hYmxlZF9zbGljZXMgPSBpbnRlbF9lbmFibGVkX2RidWZf
c2xpY2VzKGRldl9wcml2KTsKKwlEUk1fREVCVUdfS01TKCJHb3QgaHcgZGJ1ZiBzbGljZXMgbWFz
ayAleFxuIiwgZGRiLT5lbmFibGVkX3NsaWNlcyk7CiB9CiAKIC8qCkBAIC00MTcyLDYgKzQyNDcs
MjM5IEBAIHNrbF9nZXRfdG90YWxfcmVsYXRpdmVfZGF0YV9yYXRlKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAogCXJldHVybiB0b3RhbF9kYXRhX3JhdGU7CiB9CiAKK3N0YXRp
YyB1aW50X2ZpeGVkXzE2XzE2X3QKK2ljbF9waXBlX2Rvd25zY2FsZV9hbW91bnQoY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJdTMyIHNyY193LCBzcmNfaCwg
ZHN0X3csIGRzdF9oOworCXVpbnRfZml4ZWRfMTZfMTZfdCBmcF93X3JhdGlvLCBmcF9oX3JhdGlv
OworCXVpbnRfZml4ZWRfMTZfMTZfdCBkb3duc2NhbGVfaCwgZG93bnNjYWxlX3c7CisJY29uc3Qg
c3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmY3J0Y19zdGF0ZS0+aHcu
YWRqdXN0ZWRfbW9kZTsKKworCXNyY193ID0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfdzsKKwlzcmNf
aCA9IGNydGNfc3RhdGUtPnBpcGVfc3JjX2g7CisJZHN0X3cgPSBhZGp1c3RlZF9tb2RlLT5jcnRj
X2hkaXNwbGF5OworCWRzdF9oID0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheTsKKworCWZw
X3dfcmF0aW8gPSBkaXZfZml4ZWQxNihzcmNfdywgZHN0X3cpOworCWZwX2hfcmF0aW8gPSBkaXZf
Zml4ZWQxNihzcmNfaCwgZHN0X2gpOworCWRvd25zY2FsZV93ID0gbWF4X2ZpeGVkMTYoZnBfd19y
YXRpbywgdTMyX3RvX2ZpeGVkMTYoMSkpOworCWRvd25zY2FsZV9oID0gbWF4X2ZpeGVkMTYoZnBf
aF9yYXRpbywgdTMyX3RvX2ZpeGVkMTYoMSkpOworCisJcmV0dXJuIG11bF9maXhlZDE2KGRvd25z
Y2FsZV93LCBkb3duc2NhbGVfaCk7Cit9CisKK3N0YXRpYyB1aW50X2ZpeGVkXzE2XzE2X3QKK2lj
bF9nZXRfcGlwZV9yYXRpbyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSkKK3sKKwlzdHJ1Y3QgZHJtX3BsYW5lICpwbGFuZTsKKwljb25zdCBzdHJ1Y3QgZHJtX3BsYW5l
X3N0YXRlICpkcm1fcGxhbmVfc3RhdGU7CisJdWludF9maXhlZF8xNl8xNl90IHBpcGVfZG93bnNj
YWxlLCBwaXBlX3JhdGlvOworCXVpbnRfZml4ZWRfMTZfMTZfdCBtYXhfZG93bnNjYWxlID0gdTMy
X3RvX2ZpeGVkMTYoMSk7CisJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRj
KGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CisKKwlpZiAoIWNydGNfc3RhdGUtPnVhcGkuZW5hYmxl
KQorCQlyZXR1cm4gbWF4X2Rvd25zY2FsZTsKKworCWRybV9hdG9taWNfY3J0Y19zdGF0ZV9mb3Jf
ZWFjaF9wbGFuZV9zdGF0ZShwbGFuZSwgZHJtX3BsYW5lX3N0YXRlLCAmY3J0Y19zdGF0ZS0+dWFw
aSkgeworCQl1aW50X2ZpeGVkXzE2XzE2X3QgcGxhbmVfZG93bnNjYWxlOworCQljb25zdCBzdHJ1
Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlID0KKwkJCXRvX2ludGVsX3BsYW5lX3N0
YXRlKGRybV9wbGFuZV9zdGF0ZSk7CisKKwkJaWYgKCFpbnRlbF93bV9wbGFuZV92aXNpYmxlKGNy
dGNfc3RhdGUsIHBsYW5lX3N0YXRlKSkKKwkJCWNvbnRpbnVlOworCisJCXBsYW5lX2Rvd25zY2Fs
ZSA9IHNrbF9wbGFuZV9kb3duc2NhbGVfYW1vdW50KGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlKTsK
KworCQlEUk1fREVCVUdfS01TKCJQbGFuZSAlZCBkb3duc2NhbGUgYW1vdW50ICVkLiVkXG4iLAor
CQkJICAgICAgdG9faW50ZWxfcGxhbmUocGxhbmUpLT5pZCwKKwkJCSAgICAgIHBsYW5lX2Rvd25z
Y2FsZS52YWwgPj4gMTYsCisJCQkgICAgICBwbGFuZV9kb3duc2NhbGUudmFsICYgMHhmZmZmKTsK
KworCQltYXhfZG93bnNjYWxlID0gbWF4X2ZpeGVkMTYocGxhbmVfZG93bnNjYWxlLCBtYXhfZG93
bnNjYWxlKTsKKwl9CisKKwlwaXBlX2Rvd25zY2FsZSA9IGljbF9waXBlX2Rvd25zY2FsZV9hbW91
bnQoY3J0Y19zdGF0ZSk7CisKKwlEUk1fREVCVUdfS01TKCJQaXBlICVkIGRvd25zY2FsZSBhbW91
bnQgJWQuJWRcbiIsCisJCSAgICAgIGNydGMtPnBpcGUsIHBpcGVfZG93bnNjYWxlLnZhbCA+PiAx
NiwKKwkJICAgICAgcGlwZV9kb3duc2NhbGUudmFsICYgMHhmZmZmKTsKKworCXBpcGVfZG93bnNj
YWxlID0gbXVsX2ZpeGVkMTYocGlwZV9kb3duc2NhbGUsIG1heF9kb3duc2NhbGUpOworCisJLyoK
KwkgKiBDb252ZXJ0IHJlc3VsdCB0byBwZXJjZW50YWdlOiBnZXQgdGhlIGFjdHVhbCByYXRpbyBp
bnN0ZWFkIG9mIHJhdGUsCisJICogdGhlbiBtdWx0aXBseSBieSAxMDAgdG8gZ2V0IHBlcmNlbnRh
Z2UuCisJICovCisJcGlwZV9yYXRpbyA9IHUzMl90b19maXhlZDE2KDEwMCAqIGRpdl9yb3VuZF91
cF91MzJfZml4ZWQxNigxLCBwaXBlX2Rvd25zY2FsZSkpOworCisJRFJNX0RFQlVHX0tNUygiUGlw
ZSAlZCByYXRpbyAlZC4lZFxuIiwgY3J0Yy0+cGlwZSwKKwkJICAgICAgcGlwZV9yYXRpby52YWwg
Pj4gMTYsIHBpcGVfcmF0aW8udmFsICYgMHhmZmZmKTsKKworCXJldHVybiBwaXBlX3JhdGlvOwor
fQorCitzdHJ1Y3QgZGJ1Zl9zbGljZV9jb25mX2VudHJ5IHsKKwl1MzIgZGJ1Zl9tYXNrW0k5MTVf
TUFYX1BJUEVTXTsKKwl1MzIgYWN0aXZlX3BpcGVzOworfTsKKworI2RlZmluZSBJQ0xfUElQRV9B
X0RCVUZfU0xJQ0VTKGRidWYxKSAgXAorCXsgeyBkYnVmMSwgMCwgMCwgMCB9LCBCSVQoUElQRV9B
KSB9CisjZGVmaW5lIElDTF9QSVBFX0JfREJVRl9TTElDRVMoZGJ1ZjEpICBcCisJeyB7IDAsIGRi
dWYxLCAwLCAwIH0sIEJJVChQSVBFX0IpIH0KKyNkZWZpbmUgSUNMX1BJUEVfQ19EQlVGX1NMSUNF
UyhkYnVmMSkgIFwKKwl7IHsgMCwgMCwgZGJ1ZjEsIDAgfSwgQklUKFBJUEVfQykgfQorI2RlZmlu
ZSBJQ0xfUElQRV9EX0RCVUZfU0xJQ0VTKGRidWYxKSAgXAorCXsgeyAwLCAwLCAwLCBkYnVmMSB9
LCBCSVQoUElQRV9EKSB9CisjZGVmaW5lIElDTF9QSVBFX0FCX0RCVUZfU0xJQ0VTKGRidWYxLCBk
YnVmMikgICBcCisJeyB7IGRidWYxLCBkYnVmMiwgMCwgMCB9LCBCSVQoUElQRV9BKSB8IEJJVChQ
SVBFX0IpIH0KKyNkZWZpbmUgSUNMX1BJUEVfQkNfREJVRl9TTElDRVMoZGJ1ZjEsIGRidWYyKSAg
IFwKKwl7IHsgMCwgZGJ1ZjEsIGRidWYyLCAwIH0sIEJJVChQSVBFX0IpIHwgQklUKFBJUEVfQykg
fQorI2RlZmluZSBJQ0xfUElQRV9CRF9EQlVGX1NMSUNFUyhkYnVmMSwgZGJ1ZjIpICAgXAorCXsg
eyAwLCBkYnVmMSwgMCwgZGJ1ZjIgfSwgQklUKFBJUEVfQikgfCBCSVQoUElQRV9EKSB9CisjZGVm
aW5lIElDTF9QSVBFX0FDX0RCVUZfU0xJQ0VTKGRidWYxLCBkYnVmMikgICBcCisJeyB7IGRidWYx
LCAwLCBkYnVmMiwgMCB9LCBCSVQoUElQRV9BKSB8IEJJVChQSVBFX0MpIH0KKyNkZWZpbmUgSUNM
X1BJUEVfQURfREJVRl9TTElDRVMoZGJ1ZjEsIGRidWYyKSAgIFwKKwl7IHsgZGJ1ZjEsIDAsIDAs
IGRidWYyIH0sIEJJVChQSVBFX0EpIHwgQklUKFBJUEVfRCkgfQorI2RlZmluZSBJQ0xfUElQRV9D
RF9EQlVGX1NMSUNFUyhkYnVmMSwgZGJ1ZjIpICAgXAorCXsgeyAwLCAwLCBkYnVmMSwgZGJ1ZjIg
fSwgQklUKFBJUEVfQykgfCBCSVQoUElQRV9EKSB9CisjZGVmaW5lIElDTF9QSVBFX0FCQ19EQlVG
X1NMSUNFUyhkYnVmMSwgZGJ1ZjIsIGRidWYzKSAgXAorCXsgeyBkYnVmMSwgZGJ1ZjIsIGRidWYz
LCAwIH0sIEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikgfCBCSVQoUElQRV9DKSB9CisjZGVmaW5l
IElDTF9QSVBFX0FDRF9EQlVGX1NMSUNFUyhkYnVmMSwgZGJ1ZjIsIGRidWYzKSAgXAorCXsgeyBk
YnVmMSwgMCwgZGJ1ZjIsIGRidWYzIH0sIEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQykgfCBCSVQo
UElQRV9EKSB9CisjZGVmaW5lIElDTF9QSVBFX0JDRF9EQlVGX1NMSUNFUyhkYnVmMSwgZGJ1ZjIs
IGRidWYzKSAgXAorCXsgeyAwLCBkYnVmMSwgZGJ1ZjIsIGRidWYzIH0sIEJJVChQSVBFX0IpIHwg
QklUKFBJUEVfQykgfCBCSVQoUElQRV9EKSB9CisjZGVmaW5lIElDTF9QSVBFX0FCRF9EQlVGX1NM
SUNFUyhkYnVmMSwgZGJ1ZjIsIGRidWYzKSAgXAorCXsgeyBkYnVmMSwgZGJ1ZjIsIDAsIGRidWYz
IH0sIEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikgfCBCSVQoUElQRV9EKSB9CisjZGVmaW5lIElD
TF9QSVBFX0FCQ19EQlVGX1NMSUNFUyhkYnVmMSwgZGJ1ZjIsIGRidWYzKSAgXAorCXsgeyBkYnVm
MSwgZGJ1ZjIsIGRidWYzLCAwIH0sIEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikgfCBCSVQoUElQ
RV9DKSB9CisjZGVmaW5lIElDTF9QSVBFX0FCQ0RfREJVRl9TTElDRVMoZGJ1ZjEsIGRidWYyLCBk
YnVmMywgZGJ1ZjQpICBcCisJeyB7IGRidWYxLCBkYnVmMiwgZGJ1ZjMsIGRidWY0IH0sIEJJVChQ
SVBFX0EpIHwgQklUKFBJUEVfQikgfCBcCisJCQkJCSAgQklUKFBJUEVfQykgfCBCSVQoUElQRV9E
KSB9CisKKy8qCisgKiBUYWJsZSB0YWtlbiBmcm9tIEJzcGVjIDEyNzE2CisgKiBQaXBlcyBkbyBo
YXZlIHNvbWUgcHJlZmVycmVkIERCdWYgc2xpY2UgYWZmaW5pdHksCisgKiBwbHVzIHRoZXJlIGFy
ZSBzb21lIGhhcmRjb2RlZCByZXF1aXJlbWVudHMgb24gaG93CisgKiB0aG9zZSBzaG91bGQgYmUg
ZGlzdHJpYnV0ZWQgZm9yIG11bHRpcGlwZSBzY2VuYXJpb3MuCisgKiBGb3IgbW9yZSBEQnVmIHNs
aWNlcyBhbGdvcml0aG0gY2FuIGdldCBldmVuIG1vcmUgbWVzc3kKKyAqIGFuZCBsZXNzIHJlYWRh
YmxlLCBzbyBkZWNpZGVkIHRvIHVzZSBhIHRhYmxlIGFsbW9zdAorICogYXMgaXMgZnJvbSBCU3Bl
YyBpdHNlbGYgLSB0aGF0IHdheSBpdCBpcyBhdCBsZWFzdCBlYXNpZXIKKyAqIHRvIGNvbXBhcmUs
IGNoYW5nZSBhbmQgY2hlY2suCisgKi8KK3N0YXRpYyBzdHJ1Y3QgZGJ1Zl9zbGljZV9jb25mX2Vu
dHJ5IGljbF9hbGxvd2VkX2RidWZzW10gPSB7Cit7IHsgMCwgMCwgMCwgMCB9LCAwIH0sCitJQ0xf
UElQRV9BX0RCVUZfU0xJQ0VTKERCVUZfUzFfQklUIHwgREJVRl9TMl9CSVQpLCAgLyogcGlwZSBy
YXRpbyA8IDg4LjggKi8KK0lDTF9QSVBFX0FfREJVRl9TTElDRVMoREJVRl9TMV9CSVQpLCAgICAg
ICAgICAgICAgICAvKiBmb3IgcGlwZSByYXRpbyA+PSA4OC44ICovCitJQ0xfUElQRV9CX0RCVUZf
U0xJQ0VTKERCVUZfUzFfQklUIHwgREJVRl9TMl9CSVQpLCAgLyogcGlwZSByYXRpbyA8IDg4Ljgg
Ki8KK0lDTF9QSVBFX0JfREJVRl9TTElDRVMoREJVRl9TMV9CSVQpLCAgICAgICAgICAgICAgICAv
KiBmb3IgcGlwZSByYXRpbyA+PSA4OC44ICovCitJQ0xfUElQRV9DX0RCVUZfU0xJQ0VTKERCVUZf
UzFfQklUIHwgREJVRl9TMl9CSVQpLCAgLyogcGlwZSByYXRpbyA8IDg4LjggKi8KK0lDTF9QSVBF
X0NfREJVRl9TTElDRVMoREJVRl9TMl9CSVQpLCAgICAgICAgICAgICAgICAvKiBmb3IgcGlwZSBy
YXRpbyA+PSA4OC44ICovCitJQ0xfUElQRV9BQl9EQlVGX1NMSUNFUyhEQlVGX1MxX0JJVCwgREJV
Rl9TMl9CSVQpLAorSUNMX1BJUEVfQUNfREJVRl9TTElDRVMoREJVRl9TMV9CSVQsIERCVUZfUzJf
QklUKSwKK0lDTF9QSVBFX0JDX0RCVUZfU0xJQ0VTKERCVUZfUzFfQklULCBEQlVGX1MyX0JJVCks
CitJQ0xfUElQRV9BQkNfREJVRl9TTElDRVMoREJVRl9TMV9CSVQsIERCVUZfUzFfQklULCBEQlVG
X1MyX0JJVCksCit9OworCisvKgorICogVGFibGUgdGFrZW4gZnJvbSBCc3BlYyA0OTI1NQorICog
UGlwZXMgZG8gaGF2ZSBzb21lIHByZWZlcnJlZCBEQnVmIHNsaWNlIGFmZmluaXR5LAorICogcGx1
cyB0aGVyZSBhcmUgc29tZSBoYXJkY29kZWQgcmVxdWlyZW1lbnRzIG9uIGhvdworICogdGhvc2Ug
c2hvdWxkIGJlIGRpc3RyaWJ1dGVkIGZvciBtdWx0aXBpcGUgc2NlbmFyaW9zLgorICogRm9yIG1v
cmUgREJ1ZiBzbGljZXMgYWxnb3JpdGhtIGNhbiBnZXQgZXZlbiBtb3JlIG1lc3N5CisgKiBhbmQg
bGVzcyByZWFkYWJsZSwgc28gZGVjaWRlZCB0byB1c2UgYSB0YWJsZSBhbG1vc3QKKyAqIGFzIGlz
IGZyb20gQlNwZWMgaXRzZWxmIC0gdGhhdCB3YXkgaXQgaXMgYXQgbGVhc3QgZWFzaWVyCisgKiB0
byBjb21wYXJlLCBjaGFuZ2UgYW5kIGNoZWNrLgorICovCitzdGF0aWMgc3RydWN0IGRidWZfc2xp
Y2VfY29uZl9lbnRyeSB0Z2xfYWxsb3dlZF9kYnVmc1tdID0geworeyB7IDAsIDAsIDAsIDAgfSwg
MCB9LAorSUNMX1BJUEVfQV9EQlVGX1NMSUNFUyhEQlVGX1MxX0JJVCB8IERCVUZfUzJfQklUKSwK
K0lDTF9QSVBFX0JfREJVRl9TTElDRVMoREJVRl9TMV9CSVQgfCBEQlVGX1MyX0JJVCksCitJQ0xf
UElQRV9DX0RCVUZfU0xJQ0VTKERCVUZfUzFfQklUIHwgREJVRl9TMl9CSVQpLAorSUNMX1BJUEVf
RF9EQlVGX1NMSUNFUyhEQlVGX1MxX0JJVCB8IERCVUZfUzJfQklUKSwKK0lDTF9QSVBFX0FCX0RC
VUZfU0xJQ0VTKERCVUZfUzJfQklULCBEQlVGX1MxX0JJVCksCitJQ0xfUElQRV9BQ19EQlVGX1NM
SUNFUyhEQlVGX1MxX0JJVCwgREJVRl9TMl9CSVQpLAorSUNMX1BJUEVfQkNfREJVRl9TTElDRVMo
REJVRl9TMV9CSVQsIERCVUZfUzJfQklUKSwKK0lDTF9QSVBFX0FEX0RCVUZfU0xJQ0VTKERCVUZf
UzFfQklULCBEQlVGX1MyX0JJVCksCitJQ0xfUElQRV9CRF9EQlVGX1NMSUNFUyhEQlVGX1MxX0JJ
VCwgREJVRl9TMl9CSVQpLAorSUNMX1BJUEVfQ0RfREJVRl9TTElDRVMoREJVRl9TMV9CSVQsIERC
VUZfUzJfQklUKSwKK0lDTF9QSVBFX0FCRF9EQlVGX1NMSUNFUyhEQlVGX1MxX0JJVCwgREJVRl9T
MV9CSVQsIERCVUZfUzJfQklUKSwKK0lDTF9QSVBFX0FCQ19EQlVGX1NMSUNFUyhEQlVGX1MxX0JJ
VCwgREJVRl9TMV9CSVQsIERCVUZfUzJfQklUKSwKK0lDTF9QSVBFX0FDRF9EQlVGX1NMSUNFUyhE
QlVGX1MxX0JJVCwgREJVRl9TMl9CSVQsIERCVUZfUzJfQklUKSwKK0lDTF9QSVBFX0JDRF9EQlVG
X1NMSUNFUyhEQlVGX1MxX0JJVCwgREJVRl9TMl9CSVQsIERCVUZfUzJfQklUKSwKK0lDTF9QSVBF
X0FCQ0RfREJVRl9TTElDRVMoREJVRl9TMV9CSVQsIERCVUZfUzFfQklULCBEQlVGX1MyX0JJVCwg
REJVRl9TMl9CSVQpLAorfTsKKworLyoKKyAqIFRoaXMgZnVuY3Rpb24gZmluZHMgYW4gZW50cnkg
d2l0aCBzYW1lIGVuYWJsZWQgcGlwZSBjb25maWd1cmF0aW9uIGFuZAorICogcmV0dXJucyBjb3Jy
ZXNwb25kZW50IERCdWYgc2xpY2UgbWFzayBhcyBzdGF0ZWQgaW4gQlNwZWMgZm9yIHBhcnRpY3Vs
YXIKKyAqIHBsYXRmb3JtLgorICovCitzdGF0aWMgdTMyIGljbF9hbGxvd2VkX2RidWZfbWFzayhp
bnQgcGlwZSwKKwkJCQkgdTMyIGFjdGl2ZV9waXBlcywKKwkJCQkgY29uc3Qgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJaW50IGk7CisJdWludF9maXhlZF8xNl8xNl90
IHBpcGVfcmF0aW87CisKKwkvKgorCSAqIENhbGN1bGF0ZSBwaXBlIHJhdGlvIGFzIHN0YXRlZCBp
biBCU3BlYyAyODY5MgorCSAqLworCXBpcGVfcmF0aW8gPSBpY2xfZ2V0X3BpcGVfcmF0aW8oY3J0
Y19zdGF0ZSk7CisKKwlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShpY2xfYWxsb3dlZF9kYnVm
cyk7IGkrKykgeworCQlpZiAoaWNsX2FsbG93ZWRfZGJ1ZnNbaV0uYWN0aXZlX3BpcGVzID09IGFj
dGl2ZV9waXBlcykgeworCQkJaWYgKGh3ZWlnaHQzMihhY3RpdmVfcGlwZXMpID09IDEpIHsKKwkJ
CQkvKgorCQkJCSAqIEFjY29yZGluZyB0byBCU3BlYyAxMjcxNjogaWYgcmF0aW8gPj0gODguOAor
CQkJCSAqIGFsd2F5cyB1c2Ugc2luZ2xlIGRidWYgc2xpY2UuCisJCQkJICovCisJCQkJaWYgKHBp
cGVfcmF0aW8udmFsID49IGRpdl9maXhlZDE2KDg4OCwgMTApLnZhbCkKKwkJCQkJKytpOworCQkJ
fQorCQkJcmV0dXJuIGljbF9hbGxvd2VkX2RidWZzW2ldLmRidWZfbWFza1twaXBlXTsKKwkJfQor
CX0KKwlyZXR1cm4gMDsKK30KKworLyoKKyAqIFRoaXMgZnVuY3Rpb24gZmluZHMgYW4gZW50cnkg
d2l0aCBzYW1lIGVuYWJsZWQgcGlwZSBjb25maWd1cmF0aW9uIGFuZAorICogcmV0dXJucyBjb3Jy
ZXNwb25kZW50IERCdWYgc2xpY2UgbWFzayBhcyBzdGF0ZWQgaW4gQlNwZWMgZm9yIHBhcnRpY3Vs
YXIKKyAqIHBsYXRmb3JtLgorICovCitzdGF0aWMgdTMyIHRnbF9hbGxvd2VkX2RidWZfbWFzayhp
bnQgcGlwZSwKKwkJCQkgdTMyIGFjdGl2ZV9waXBlcywKKwkJCQkgY29uc3Qgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJaW50IGk7CisKKwlmb3IgKGkgPSAwOyBpIDwg
QVJSQVlfU0laRSh0Z2xfYWxsb3dlZF9kYnVmcyk7IGkrKykgeworCQlpZiAodGdsX2FsbG93ZWRf
ZGJ1ZnNbaV0uYWN0aXZlX3BpcGVzID09IGFjdGl2ZV9waXBlcykKKwkJCXJldHVybiB0Z2xfYWxs
b3dlZF9kYnVmc1tpXS5kYnVmX21hc2tbcGlwZV07CisJfQorCXJldHVybiAwOworfQorCit1MzIg
aTkxNV9hbGxvd2VkX2RidWZfbWFzayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CisJCQkgICBpbnQgcGlwZSwgdTMyIGFjdGl2ZV9waXBlcywKKwkJCSAgIGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCWlmIChJU19HRU4oZGV2X3ByaXYsIDEx
KSkKKwkJcmV0dXJuIGljbF9hbGxvd2VkX2RidWZfbWFzayhwaXBlLAorCQkJCQkgICAgIGFjdGl2
ZV9waXBlcywKKwkJCQkJICAgICBjcnRjX3N0YXRlKTsKKwllbHNlIGlmIChJU19HRU4oZGV2X3By
aXYsIDEyKSkKKwkJcmV0dXJuIHRnbF9hbGxvd2VkX2RidWZfbWFzayhwaXBlLAorCQkJCQkgICAg
IGFjdGl2ZV9waXBlcywKKwkJCQkJICAgICBjcnRjX3N0YXRlKTsKKwkvKgorCSAqIEZvciBhbnl0
aGluZyBlbHNlIGp1c3QgcmV0dXJuIG9uZSBzbGljZSB5ZXQuCisJICogU2hvdWxkIGJlIGV4dGVu
ZGVkIGZvciBvdGhlciBwbGF0Zm9ybXMuCisJICovCisJcmV0dXJuIERCVUZfUzFfQklUOworfQor
CiBzdGF0aWMgdTY0CiBpY2xfZ2V0X3RvdGFsX3JlbGF0aXZlX2RhdGFfcmF0ZShzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgdTY0ICpwbGFuZV9kYXRhX3JhdGUpCi0t
IAoyLjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CE814372B4
	for <lists+intel-gfx@lfdr.de>; Thu,  6 Jun 2019 13:23:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8BC9289272;
	Thu,  6 Jun 2019 11:23:25 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9E0EF89272
 for <intel-gfx@lists.freedesktop.org>; Thu,  6 Jun 2019 11:23:23 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16812470-1500050 
 for <intel-gfx@lists.freedesktop.org>; Thu, 06 Jun 2019 12:23:21 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  6 Jun 2019 12:23:20 +0100
Message-Id: <20190606112320.9704-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915: Move object close under its own lock
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXNlIGk5MTVfZ2VtX29iamVjdF9sb2NrKCkgdG8gZ3VhcmQgdGhlIExVVCBhbmQgYWN0aXZlIHJl
ZmVyZW5jZSB0bwphbGxvdyB1cyB0byBicmVhayBmcmVlIG9mIHN0cnVjdF9tdXRleCBmb3IgaGFu
ZGxpbmcgR0VNX0NMT1NFLgoKVGVzdGNhc2U6IGlndC9nZW1fY2xvc2VfcmFjZQpUZXN0Y2FzZTog
aWd0L2dlbV9leGVjX3BhcmFsbGVsClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNA
Y2hyaXMtd2lsc29uLmNvLnVrPgpSZXZpZXdlZC1ieTogTWF0dGhldyBBdWxkIDxtYXR0aGV3LmF1
bGRAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250
ZXh0LmMgICB8IDgwICsrKysrKysrKystLS0tLS0tLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX2NvbnRleHRfdHlwZXMuaCB8IDEyICstLQogLi4uL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fZXhlY2J1ZmZlci5jICAgIHwgMjUgKysrKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fb2JqZWN0LmMgICAgfCAzOCArKysrKy0tLS0KIC4uLi9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oICB8ICAxIC0KIC4uLi9ncHUvZHJtL2k5MTUvZ2Vt
L3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuYyB8ICAxIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmggICAgICAgICAgICAgICB8ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5jICAgICAgICAgICAgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bV9ndHQuYyAgICAgICAgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVs
aW5lLmMgICAgICAgICAgfCAxMyArLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMg
ICAgICAgICAgICAgICB8IDQ4ICsrKysrKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3ZtYS5oICAgICAgICAgICAgICAgfCAxNyArKy0tCiAuLi4vZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9tb2NrX2dlbV9kZXZpY2UuYyAgfCAgMSArCiAxMyBmaWxlcyBjaGFuZ2VkLCAxMzkgaW5zZXJ0
aW9ucygrKSwgMTAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fY29udGV4dC5jCmluZGV4IDA4NzIxZWY2MmU0ZS4uNmNhYzFjMTQ0Yzc5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTk1LDI0ICs5NSw0
NSBAQCB2b2lkIGk5MTVfbHV0X2hhbmRsZV9mcmVlKHN0cnVjdCBpOTE1X2x1dF9oYW5kbGUgKmx1
dCkKIAogc3RhdGljIHZvaWQgbHV0X2Nsb3NlKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgp
CiB7Ci0Jc3RydWN0IGk5MTVfbHV0X2hhbmRsZSAqbHV0LCAqbG47CiAJc3RydWN0IHJhZGl4X3Ry
ZWVfaXRlciBpdGVyOwogCXZvaWQgX19yY3UgKipzbG90OwogCi0JbGlzdF9mb3JfZWFjaF9lbnRy
eV9zYWZlKGx1dCwgbG4sICZjdHgtPmhhbmRsZXNfbGlzdCwgY3R4X2xpbmspIHsKLQkJbGlzdF9k
ZWwoJmx1dC0+b2JqX2xpbmspOwotCQlpOTE1X2x1dF9oYW5kbGVfZnJlZShsdXQpOwotCX0KLQlJ
TklUX0xJU1RfSEVBRCgmY3R4LT5oYW5kbGVzX2xpc3QpOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQo
JmN0eC0+bXV0ZXgpOwogCiAJcmN1X3JlYWRfbG9jaygpOwogCXJhZGl4X3RyZWVfZm9yX2VhY2hf
c2xvdChzbG90LCAmY3R4LT5oYW5kbGVzX3ZtYSwgJml0ZXIsIDApIHsKIAkJc3RydWN0IGk5MTVf
dm1hICp2bWEgPSByY3VfZGVyZWZlcmVuY2VfcmF3KCpzbG90KTsKKwkJc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiA9IHZtYS0+b2JqOworCQlzdHJ1Y3QgaTkxNV9sdXRfaGFuZGxlICps
dXQ7CisKKwkJaWYgKCFrcmVmX2dldF91bmxlc3NfemVybygmb2JqLT5iYXNlLnJlZmNvdW50KSkK
KwkJCWNvbnRpbnVlOwogCi0JCXJhZGl4X3RyZWVfaXRlcl9kZWxldGUoJmN0eC0+aGFuZGxlc192
bWEsICZpdGVyLCBzbG90KTsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7CisJCWk5MTVfZ2VtX29iamVj
dF9sb2NrKG9iaik7CisJCWxpc3RfZm9yX2VhY2hfZW50cnkobHV0LCAmb2JqLT5sdXRfbGlzdCwg
b2JqX2xpbmspIHsKKwkJCWlmIChsdXQtPmN0eCAhPSBjdHgpCisJCQkJY29udGludWU7CiAKLQkJ
dm1hLT5vcGVuX2NvdW50LS07Ci0JCWk5MTVfdm1hX3B1dCh2bWEpOworCQkJaWYgKGx1dC0+aGFu
ZGxlICE9IGl0ZXIuaW5kZXgpCisJCQkJY29udGludWU7CisKKwkJCWxpc3RfZGVsKCZsdXQtPm9i
al9saW5rKTsKKwkJCWJyZWFrOworCQl9CisJCWk5MTVfZ2VtX29iamVjdF91bmxvY2sob2JqKTsK
KwkJcmN1X3JlYWRfbG9jaygpOworCisJCWlmICgmbHV0LT5vYmpfbGluayAhPSAmb2JqLT5sdXRf
bGlzdCkgeworCQkJaTkxNV9sdXRfaGFuZGxlX2ZyZWUobHV0KTsKKwkJCXJhZGl4X3RyZWVfaXRl
cl9kZWxldGUoJmN0eC0+aGFuZGxlc192bWEsICZpdGVyLCBzbG90KTsKKwkJCWlmIChhdG9taWNf
ZGVjX2FuZF90ZXN0KCZ2bWEtPm9wZW5fY291bnQpICYmCisJCQkgICAgIWk5MTVfdm1hX2lzX2dn
dHQodm1hKSkKKwkJCQlpOTE1X3ZtYV9jbG9zZSh2bWEpOworCQkJaTkxNV9nZW1fb2JqZWN0X3B1
dChvYmopOworCQl9CisKKwkJaTkxNV9nZW1fb2JqZWN0X3B1dChvYmopOwogCX0KIAlyY3VfcmVh
ZF91bmxvY2soKTsKIH0KQEAgLTI1MCwxNSArMjcxLDkgQEAgc3RhdGljIHZvaWQgZnJlZV9lbmdp
bmVzKHN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICplKQogCV9fZnJlZV9lbmdpbmVzKGUsIGUtPm51
bV9lbmdpbmVzKTsKIH0KIAotc3RhdGljIHZvaWQgZnJlZV9lbmdpbmVzX3JjdShzdHJ1Y3Qgd29y
a19zdHJ1Y3QgKndyaykKK3N0YXRpYyB2b2lkIGZyZWVfZW5naW5lc19yY3Uoc3RydWN0IHJjdV9o
ZWFkICpyY3UpCiB7Ci0Jc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXMgKmUgPQotCQljb250YWluZXJf
b2Yod3JrLCBzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcywgcmN1LndvcmspOwotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1ID0gZS0+aTkxNTsKLQotCW11dGV4X2xvY2soJmk5MTUtPmRybS5z
dHJ1Y3RfbXV0ZXgpOwotCWZyZWVfZW5naW5lcyhlKTsKLQltdXRleF91bmxvY2soJmk5MTUtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOworCWZyZWVfZW5naW5lcyhjb250YWluZXJfb2YocmN1LCBzdHJ1Y3Qg
aTkxNV9nZW1fZW5naW5lcywgcmN1KSk7CiB9CiAKIHN0YXRpYyBzdHJ1Y3QgaTkxNV9nZW1fZW5n
aW5lcyAqZGVmYXVsdF9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCkBAIC0y
NzEsNyArMjg2LDcgQEAgc3RhdGljIHN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICpkZWZhdWx0X2Vu
Z2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAlpZiAoIWUpCiAJCXJldHVybiBF
UlJfUFRSKC1FTk9NRU0pOwogCi0JZS0+aTkxNSA9IGN0eC0+aTkxNTsKKwlpbml0X3JjdV9oZWFk
KCZlLT5yY3UpOwogCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGN0eC0+aTkxNSwgaWQpIHsKIAkJ
c3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCkBAIC0zNTksNyArMzc0LDEwIEBAIHZvaWQgaTkx
NV9nZW1fY29udGV4dF9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWYpCiAKIHN0YXRpYyB2b2lkIGNv
bnRleHRfY2xvc2Uoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIHsKKwltdXRleF9sb2Nr
KCZjdHgtPm11dGV4KTsKKwogCWk5MTVfZ2VtX2NvbnRleHRfc2V0X2Nsb3NlZChjdHgpOworCWN0
eC0+ZmlsZV9wcml2ID0gRVJSX1BUUigtRUJBREYpOwogCiAJLyoKIAkgKiBUaGlzIGNvbnRleHQg
d2lsbCBuZXZlciBhZ2FpbiBiZSBhc3NpbmdlZCB0byBIVywgc28gd2UgY2FuCkBAIC0zNzQsNyAr
MzkyLDcgQEAgc3RhdGljIHZvaWQgY29udGV4dF9jbG9zZShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqY3R4KQogCSAqLwogCWx1dF9jbG9zZShjdHgpOwogCi0JY3R4LT5maWxlX3ByaXYgPSBFUlJf
UFRSKC1FQkFERik7CisJbXV0ZXhfdW5sb2NrKCZjdHgtPm11dGV4KTsKIAlpOTE1X2dlbV9jb250
ZXh0X3B1dChjdHgpOwogfQogCkBAIC00MjksNyArNDQ3LDYgQEAgX19jcmVhdGVfY29udGV4dChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJUkNVX0lOSVRfUE9JTlRFUihjdHgt
PmVuZ2luZXMsIGUpOwogCiAJSU5JVF9SQURJWF9UUkVFKCZjdHgtPmhhbmRsZXNfdm1hLCBHRlBf
S0VSTkVMKTsKLQlJTklUX0xJU1RfSEVBRCgmY3R4LT5oYW5kbGVzX2xpc3QpOwogCUlOSVRfTElT
VF9IRUFEKCZjdHgtPmh3X2lkX2xpbmspOwogCiAJLyogTkI6IE1hcmsgYWxsIHNsaWNlcyBhcyBu
ZWVkaW5nIGEgcmVtYXAgc28gdGhhdCB3aGVuIHRoZSBjb250ZXh0IGZpcnN0CkBAIC03NzIsOSAr
Nzg5LDcgQEAgaW50IGk5MTVfZ2VtX2NvbnRleHRfb3BlbihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSwKIAlyZXR1cm4gMDsKIAogZXJyX2N0eDoKLQltdXRleF9sb2NrKCZpOTE1LT5kcm0u
c3RydWN0X211dGV4KTsKIAljb250ZXh0X2Nsb3NlKGN0eCk7Ci0JbXV0ZXhfdW5sb2NrKCZpOTE1
LT5kcm0uc3RydWN0X211dGV4KTsKIGVycjoKIAlpZHJfZGVzdHJveSgmZmlsZV9wcml2LT52bV9p
ZHIpOwogCWlkcl9kZXN0cm95KCZmaWxlX3ByaXYtPmNvbnRleHRfaWRyKTsKQEAgLTc4Nyw4ICs4
MDIsNiBAQCB2b2lkIGk5MTVfZ2VtX2NvbnRleHRfY2xvc2Uoc3RydWN0IGRybV9maWxlICpmaWxl
KQogewogCXN0cnVjdCBkcm1faTkxNV9maWxlX3ByaXZhdGUgKmZpbGVfcHJpdiA9IGZpbGUtPmRy
aXZlcl9wcml2OwogCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZmlsZV9wcml2LT5kZXZfcHJpdi0+
ZHJtLnN0cnVjdF9tdXRleCk7Ci0KIAlpZHJfZm9yX2VhY2goJmZpbGVfcHJpdi0+Y29udGV4dF9p
ZHIsIGNvbnRleHRfaWRyX2NsZWFudXAsIE5VTEwpOwogCWlkcl9kZXN0cm95KCZmaWxlX3ByaXYt
PmNvbnRleHRfaWRyKTsKIAltdXRleF9kZXN0cm95KCZmaWxlX3ByaXYtPmNvbnRleHRfaWRyX2xv
Y2spOwpAQCAtMTA5Myw3ICsxMTA2LDkgQEAgc3RhdGljIGludCBzZXRfcHBndHQoc3RydWN0IGRy
bV9pOTE1X2ZpbGVfcHJpdmF0ZSAqZmlsZV9wcml2LAogCQlnb3RvIHVubG9jazsKIAogCS8qIFRl
YXJkb3duIHRoZSBleGlzdGluZyBvYmo6dm1hIGNhY2hlLCBpdCB3aWxsIGhhdmUgdG8gYmUgcmVi
dWlsdC4gKi8KKwltdXRleF9sb2NrKCZjdHgtPm11dGV4KTsKIAlsdXRfY2xvc2UoY3R4KTsKKwlt
dXRleF91bmxvY2soJmN0eC0+bXV0ZXgpOwogCiAJb2xkID0gX19zZXRfcHBndHQoY3R4LCBwcGd0
dCk7CiAKQEAgLTE2MTIsNyArMTYyNyw3IEBAIHNldF9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9j
b250ZXh0ICpjdHgsCiAJaWYgKCFzZXQuZW5naW5lcykKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQlz
ZXQuZW5naW5lcy0+aTkxNSA9IGN0eC0+aTkxNTsKKwlpbml0X3JjdV9oZWFkKCZzZXQuZW5naW5l
cy0+cmN1KTsKIAlmb3IgKG4gPSAwOyBuIDwgbnVtX2VuZ2luZXM7IG4rKykgewogCQlzdHJ1Y3Qg
aTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFuY2UgY2k7CiAJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKQEAgLTE2NjYsOCArMTY4MSw3IEBAIHNldF9lbmdpbmVzKHN0cnVjdCBpOTE1X2dl
bV9jb250ZXh0ICpjdHgsCiAJcmN1X3N3YXBfcHJvdGVjdGVkKGN0eC0+ZW5naW5lcywgc2V0LmVu
Z2luZXMsIDEpOwogCW11dGV4X3VubG9jaygmY3R4LT5lbmdpbmVzX211dGV4KTsKIAotCUlOSVRf
UkNVX1dPUksoJnNldC5lbmdpbmVzLT5yY3UsIGZyZWVfZW5naW5lc19yY3UpOwotCXF1ZXVlX3Jj
dV93b3JrKHN5c3RlbV93cSwgJnNldC5lbmdpbmVzLT5yY3UpOworCWNhbGxfcmN1KCZzZXQuZW5n
aW5lcy0+cmN1LCBmcmVlX2VuZ2luZXNfcmN1KTsKIAogCXJldHVybiAwOwogfQpAQCAtMTY4Miw3
ICsxNjk2LDcgQEAgX19jb3B5X2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXMgKmUpCiAJ
aWYgKCFjb3B5KQogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKIAotCWNvcHktPmk5MTUgPSBl
LT5pOTE1OworCWluaXRfcmN1X2hlYWQoJmNvcHktPnJjdSk7CiAJZm9yIChuID0gMDsgbiA8IGUt
Pm51bV9lbmdpbmVzOyBuKyspIHsKIAkJaWYgKGUtPmVuZ2luZXNbbl0pCiAJCQljb3B5LT5lbmdp
bmVzW25dID0gaW50ZWxfY29udGV4dF9nZXQoZS0+ZW5naW5lc1tuXSk7CkBAIC0xNzY5LDggKzE3
ODMsNyBAQCBnZXRfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCWFyZ3Mt
PnNpemUgPSBzaXplOwogCiBlcnJfZnJlZToKLQlJTklUX1JDVV9XT1JLKCZlLT5yY3UsIGZyZWVf
ZW5naW5lc19yY3UpOwotCXF1ZXVlX3JjdV93b3JrKHN5c3RlbV93cSwgJmUtPnJjdSk7CisJZnJl
ZV9lbmdpbmVzKGUpOwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTE4OTEsNyArMTkwNCw3IEBAIHN0
YXRpYyBpbnQgY2xvbmVfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZHN0LAogCWlm
ICghY2xvbmUpCiAJCWdvdG8gZXJyX3VubG9jazsKIAotCWNsb25lLT5pOTE1ID0gZHN0LT5pOTE1
OworCWluaXRfcmN1X2hlYWQoJmNsb25lLT5yY3UpOwogCWZvciAobiA9IDA7IG4gPCBlLT5udW1f
ZW5naW5lczsgbisrKSB7CiAJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIApAQCAt
MjE2Myw5ICsyMTc2LDcgQEAgaW50IGk5MTVfZ2VtX2NvbnRleHRfY3JlYXRlX2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJcmV0dXJuIDA7CiAKIGVycl9jdHg6Ci0J
bXV0ZXhfbG9jaygmZGV2LT5zdHJ1Y3RfbXV0ZXgpOwogCWNvbnRleHRfY2xvc2UoZXh0X2RhdGEu
Y3R4KTsKLQltdXRleF91bmxvY2soJmRldi0+c3RydWN0X211dGV4KTsKIAlyZXR1cm4gcmV0Owog
fQogCkBAIC0yMTkwLDEwICsyMjAxLDcgQEAgaW50IGk5MTVfZ2VtX2NvbnRleHRfZGVzdHJveV9p
b2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCWlmICghY3R4KQogCQly
ZXR1cm4gLUVOT0VOVDsKIAotCW11dGV4X2xvY2soJmRldi0+c3RydWN0X211dGV4KTsKIAljb250
ZXh0X2Nsb3NlKGN0eCk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXYtPnN0cnVjdF9tdXRleCk7Ci0KIAly
ZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX2NvbnRleHRfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9j
b250ZXh0X3R5cGVzLmgKaW5kZXggZmI5NjVkZWQyNTA4Li4zZGI3NDQ4Yjk3MzIgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaApAQCAt
MzAsOCArMzAsNyBAQCBzdHJ1Y3QgaTkxNV90aW1lbGluZTsKIHN0cnVjdCBpbnRlbF9yaW5nOwog
CiBzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyB7Ci0Jc3RydWN0IHJjdV93b3JrIHJjdTsKLQlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNTsKKwlzdHJ1Y3QgcmN1X2hlYWQgcmN1OwogCXVuc2ln
bmVkIGludCBudW1fZW5naW5lczsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqZW5naW5lc1tdOwog
fTsKQEAgLTE5MiwxNyArMTkxLDEyIEBAIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0IHsKIAkvKiog
cmVtYXBfc2xpY2U6IEJpdG1hc2sgb2YgY2FjaGUgbGluZXMgdGhhdCBuZWVkIHJlbWFwcGluZyAq
LwogCXU4IHJlbWFwX3NsaWNlOwogCi0JLyoqIGhhbmRsZXNfdm1hOiByYnRyZWUgdG8gbG9vayB1
cCBvdXIgY29udGV4dCBzcGVjaWZpYyBvYmovdm1hIGZvcgorCS8qKgorCSAqIGhhbmRsZXNfdm1h
OiByYnRyZWUgdG8gbG9vayB1cCBvdXIgY29udGV4dCBzcGVjaWZpYyBvYmovdm1hIGZvcgogCSAq
IHRoZSB1c2VyIGhhbmRsZS4gKHVzZXIgaGFuZGxlcyBhcmUgcGVyIGZkLCBidXQgdGhlIGJpbmRp
bmcgaXMKIAkgKiBwZXIgdm0sIHdoaWNoIG1heSBiZSBvbmUgcGVyIGNvbnRleHQgb3Igc2hhcmVk
IHdpdGggdGhlIGdsb2JhbCBHVFQpCiAJICovCiAJc3RydWN0IHJhZGl4X3RyZWVfcm9vdCBoYW5k
bGVzX3ZtYTsKLQotCS8qKiBoYW5kbGVzX2xpc3Q6IHJldmVyc2UgbGlzdCBvZiBhbGwgdGhlIHJi
dHJlZSBlbnRyaWVzIGluIHVzZSBmb3IKLQkgKiB0aGlzIGNvbnRleHQsIHdoaWNoIGFsbG93cyB1
cyB0byBmcmVlIGFsbCB0aGUgYWxsb2NhdGlvbnMgb24KLQkgKiBjb250ZXh0IGNsb3NlLgotCSAq
LwotCXN0cnVjdCBsaXN0X2hlYWQgaGFuZGxlc19saXN0OwogfTsKIAogI2VuZGlmIC8qIF9fSTkx
NV9HRU1fQ09OVEVYVF9UWVBFU19IX18gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0v
aTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IGVkNTIyZmRmYmU3Zi4uMmM0ZjMyMjkzNjFkIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKQEAg
LTgwMSw5ICs4MDEsNiBAQCBzdGF0aWMgaW50IGViX2xvb2t1cF92bWFzKHN0cnVjdCBpOTE1X2V4
ZWNidWZmZXIgKmViKQogCXVuc2lnbmVkIGludCBpLCBiYXRjaDsKIAlpbnQgZXJyOwogCi0JaWYg
KHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfY2xvc2VkKGViLT5nZW1fY29udGV4dCkpKQot
CQlyZXR1cm4gLUVOT0VOVDsKLQogCWlmICh1bmxpa2VseShpOTE1X2dlbV9jb250ZXh0X2lzX2Jh
bm5lZChlYi0+Z2VtX2NvbnRleHQpKSkKIAkJcmV0dXJuIC1FSU87CiAKQEAgLTgxMiw2ICs4MDks
MTIgQEAgc3RhdGljIGludCBlYl9sb29rdXBfdm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
YikKIAogCWJhdGNoID0gZWJfYmF0Y2hfaW5kZXgoZWIpOwogCisJbXV0ZXhfbG9jaygmZWItPmdl
bV9jb250ZXh0LT5tdXRleCk7CisJaWYgKHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfY2xv
c2VkKGViLT5nZW1fY29udGV4dCkpKSB7CisJCWVyciA9IC1FTk9FTlQ7CisJCWdvdG8gZXJyX2N0
eDsKKwl9CisKIAlmb3IgKGkgPSAwOyBpIDwgZWItPmJ1ZmZlcl9jb3VudDsgaSsrKSB7CiAJCXUz
MiBoYW5kbGUgPSBlYi0+ZXhlY1tpXS5oYW5kbGU7CiAJCXN0cnVjdCBpOTE1X2x1dF9oYW5kbGUg
Kmx1dDsKQEAgLTg0NSwxMyArODQ4LDE1IEBAIHN0YXRpYyBpbnQgZWJfbG9va3VwX3ZtYXMoc3Ry
dWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJCQlnb3RvIGVycl9vYmo7CiAJCX0KIAotCQkvKiB0
cmFuc2ZlciByZWYgdG8gY3R4ICovCi0JCWlmICghdm1hLT5vcGVuX2NvdW50KyspCisJCS8qIHRy
YW5zZmVyIHJlZiB0byBsdXQgKi8KKwkJaWYgKCFhdG9taWNfZmV0Y2hfaW5jKCZ2bWEtPm9wZW5f
Y291bnQpKQogCQkJaTkxNV92bWFfcmVvcGVuKHZtYSk7Ci0JCWxpc3RfYWRkKCZsdXQtPm9ial9s
aW5rLCAmb2JqLT5sdXRfbGlzdCk7Ci0JCWxpc3RfYWRkKCZsdXQtPmN0eF9saW5rLCAmZWItPmdl
bV9jb250ZXh0LT5oYW5kbGVzX2xpc3QpOwotCQlsdXQtPmN0eCA9IGViLT5nZW1fY29udGV4dDsK
IAkJbHV0LT5oYW5kbGUgPSBoYW5kbGU7CisJCWx1dC0+Y3R4ID0gZWItPmdlbV9jb250ZXh0Owor
CisJCWk5MTVfZ2VtX29iamVjdF9sb2NrKG9iaik7CisJCWxpc3RfYWRkKCZsdXQtPm9ial9saW5r
LCAmb2JqLT5sdXRfbGlzdCk7CisJCWk5MTVfZ2VtX29iamVjdF91bmxvY2sob2JqKTsKIAogYWRk
X3ZtYToKIAkJZXJyID0gZWJfYWRkX3ZtYShlYiwgaSwgYmF0Y2gsIHZtYSk7CkBAIC04NjQsNiAr
ODY5LDggQEAgc3RhdGljIGludCBlYl9sb29rdXBfdm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVy
ICplYikKIAkJCSAgIGViX3ZtYV9taXNwbGFjZWQoJmViLT5leGVjW2ldLCB2bWEsIGViLT5mbGFn
c1tpXSkpOwogCX0KIAorCW11dGV4X3VubG9jaygmZWItPmdlbV9jb250ZXh0LT5tdXRleCk7CisK
IAllYi0+YXJncy0+ZmxhZ3MgfD0gX19FWEVDX1ZBTElEQVRFRDsKIAlyZXR1cm4gZWJfcmVzZXJ2
ZShlYik7CiAKQEAgLTg3MSw2ICs4NzgsOCBAQCBzdGF0aWMgaW50IGViX2xvb2t1cF92bWFzKHN0
cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKIGVy
cl92bWE6CiAJZWItPnZtYVtpXSA9IE5VTEw7CitlcnJfY3R4OgorCW11dGV4X3VubG9jaygmZWIt
PmdlbV9jb250ZXh0LT5tdXRleCk7CiAJcmV0dXJuIGVycjsKIH0KIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jCmluZGV4IGI4NDBjZjE3OWJiZS4uYTBiYzhmN2Fi
NzgwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jCkBAIC0x
MDUsMzkgKzEwNSw0NyBAQCB2b2lkIGk5MTVfZ2VtX29iamVjdF9zZXRfY2FjaGVfY29oZXJlbmN5
KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAKIHZvaWQgaTkxNV9nZW1fY2xvc2Vf
b2JqZWN0KHN0cnVjdCBkcm1fZ2VtX29iamVjdCAqZ2VtLCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUp
CiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGdlbS0+ZGV2KTsK
IAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdG9faW50ZWxfYm8oZ2VtKTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmcHJpdiA9IGZpbGUtPmRyaXZlcl9wcml2Owog
CXN0cnVjdCBpOTE1X2x1dF9oYW5kbGUgKmx1dCwgKmxuOworCUxJU1RfSEVBRChjbG9zZSk7CiAK
LQltdXRleF9sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKLQorCWk5MTVfZ2VtX29iamVj
dF9sb2NrKG9iaik7CiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGx1dCwgbG4sICZvYmotPmx1
dF9saXN0LCBvYmpfbGluaykgewogCQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gbHV0
LT5jdHg7Ci0JCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwogCi0JCUdFTV9CVUdfT04oY3R4LT5maWxl
X3ByaXYgPT0gRVJSX1BUUigtRUJBREYpKTsKIAkJaWYgKGN0eC0+ZmlsZV9wcml2ICE9IGZwcml2
KQogCQkJY29udGludWU7CiAKLQkJdm1hID0gcmFkaXhfdHJlZV9kZWxldGUoJmN0eC0+aGFuZGxl
c192bWEsIGx1dC0+aGFuZGxlKTsKLQkJR0VNX0JVR19PTih2bWEtPm9iaiAhPSBvYmopOworCQlp
OTE1X2dlbV9jb250ZXh0X2dldChjdHgpOworCQlsaXN0X21vdmUoJmx1dC0+b2JqX2xpbmssICZj
bG9zZSk7CisJfQorCWk5MTVfZ2VtX29iamVjdF91bmxvY2sob2JqKTsKIAotCQkvKiBXZSBhbGxv
dyB0aGUgcHJvY2VzcyB0byBoYXZlIG11bHRpcGxlIGhhbmRsZXMgdG8gdGhlIHNhbWUKKwlsaXN0
X2Zvcl9lYWNoX2VudHJ5X3NhZmUobHV0LCBsbiwgJmNsb3NlLCBvYmpfbGluaykgeworCQlzdHJ1
Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gbHV0LT5jdHg7CisJCXN0cnVjdCBpOTE1X3ZtYSAq
dm1hOworCisJCS8qCisJCSAqIFdlIGFsbG93IHRoZSBwcm9jZXNzIHRvIGhhdmUgbXVsdGlwbGUg
aGFuZGxlcyB0byB0aGUgc2FtZQogCQkgKiB2bWEsIGluIHRoZSBzYW1lIGZkIG5hbWVzcGFjZSwg
YnkgdmlydHVlIG9mIGZsaW5rL29wZW4uCiAJCSAqLwotCQlHRU1fQlVHX09OKCF2bWEtPm9wZW5f
Y291bnQpOwotCQlpZiAoIS0tdm1hLT5vcGVuX2NvdW50ICYmICFpOTE1X3ZtYV9pc19nZ3R0KHZt
YSkpCi0JCQlpOTE1X3ZtYV9jbG9zZSh2bWEpOwogCi0JCWxpc3RfZGVsKCZsdXQtPm9ial9saW5r
KTsKLQkJbGlzdF9kZWwoJmx1dC0+Y3R4X2xpbmspOworCQltdXRleF9sb2NrKCZjdHgtPm11dGV4
KTsKKwkJdm1hID0gcmFkaXhfdHJlZV9kZWxldGUoJmN0eC0+aGFuZGxlc192bWEsIGx1dC0+aGFu
ZGxlKTsKKwkJaWYgKHZtYSkgeworCQkJR0VNX0JVR19PTih2bWEtPm9iaiAhPSBvYmopOworCQkJ
R0VNX0JVR19PTighYXRvbWljX3JlYWQoJnZtYS0+b3Blbl9jb3VudCkpOworCQkJaWYgKGF0b21p
Y19kZWNfYW5kX3Rlc3QoJnZtYS0+b3Blbl9jb3VudCkgJiYKKwkJCSAgICAhaTkxNV92bWFfaXNf
Z2d0dCh2bWEpKQorCQkJCWk5MTVfdm1hX2Nsb3NlKHZtYSk7CisJCX0KKwkJbXV0ZXhfdW5sb2Nr
KCZjdHgtPm11dGV4KTsKIAorCQlpOTE1X2dlbV9jb250ZXh0X3B1dChsdXQtPmN0eCk7CiAJCWk5
MTVfbHV0X2hhbmRsZV9mcmVlKGx1dCk7CiAJCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKIAl9
Ci0KLQltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogfQogCiBzdGF0aWMg
Ym9vbCBkaXNjYXJkX2JhY2tpbmdfc3RvcmFnZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVj
dF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBl
cy5oCmluZGV4IDY3YTk5MmQ2ZWUwYy4uOWMxNjFiYTczNTU4IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCkBAIC0yNCw3ICsyNCw2IEBA
IHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0OwogICovCiBzdHJ1Y3QgaTkxNV9sdXRfaGFuZGxl
IHsKIAlzdHJ1Y3QgbGlzdF9oZWFkIG9ial9saW5rOwotCXN0cnVjdCBsaXN0X2hlYWQgY3R4X2xp
bms7CiAJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eDsKIAl1MzIgaGFuZGxlOwogfTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19jb250ZXh0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL21vY2tfY29udGV4dC5jCmlu
ZGV4IDY4ZDUwZGEwMzVlNi4uNjU3OGYyZjZjM2Y4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vc2VsZnRlc3RzL21vY2tfY29udGV4dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9zZWxmdGVzdHMvbW9ja19jb250ZXh0LmMKQEAgLTMwLDcgKzMwLDYgQEAgbW9j
a19jb250ZXh0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCVJDVV9JTklUX1BPSU5U
RVIoY3R4LT5lbmdpbmVzLCBlKTsKIAogCUlOSVRfUkFESVhfVFJFRSgmY3R4LT5oYW5kbGVzX3Zt
YSwgR0ZQX0tFUk5FTCk7Ci0JSU5JVF9MSVNUX0hFQUQoJmN0eC0+aGFuZGxlc19saXN0KTsKIAlJ
TklUX0xJU1RfSEVBRCgmY3R4LT5od19pZF9saW5rKTsKIAltdXRleF9pbml0KCZjdHgtPm11dGV4
KTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKaW5kZXggODliZjFlMzRmZWFhLi5kZmU0YjExZWU0
MjMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaApAQCAtMTg5OSwxMCArMTg5OSwxMiBAQCBzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSB7CiAJCX0gdGltZWxpbmVzOwogCiAJCXN0cnVjdCBsaXN0X2hl
YWQgYWN0aXZlX3JpbmdzOwotCQlzdHJ1Y3QgbGlzdF9oZWFkIGNsb3NlZF92bWE7CiAKIAkJc3Ry
dWN0IGludGVsX3dha2VyZWYgd2FrZXJlZjsKIAorCQlzdHJ1Y3QgbGlzdF9oZWFkIGNsb3NlZF92
bWE7CisJCXNwaW5sb2NrX3QgY2xvc2VkX2xvY2s7IC8qIGd1YXJkcyB0aGUgbGlzdCBvZiBjbG9z
ZWRfdm1hICovCisKIAkJLyoqCiAJCSAqIElzIHRoZSBHUFUgY3VycmVudGx5IGNvbnNpZGVyZWQg
aWRsZSwgb3IgYnVzeSBleGVjdXRpbmcKIAkJICogdXNlcnNwYWNlIHJlcXVlc3RzPyBXaGlsc3Qg
aWRsZSwgd2UgYWxsb3cgcnVudGltZSBwb3dlcgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKaW5kZXgg
NDczOWE2MzA3YzMyLi45ZjJlMjEzYzYwNDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwpAQCAt
MTc4NCw2ICsxNzg0LDcgQEAgaW50IGk5MTVfZ2VtX2luaXRfZWFybHkoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogCiAJSU5JVF9MSVNUX0hFQUQoJmRldl9wcml2LT5ndC5hY3Rp
dmVfcmluZ3MpOwogCUlOSVRfTElTVF9IRUFEKCZkZXZfcHJpdi0+Z3QuY2xvc2VkX3ZtYSk7CisJ
c3Bpbl9sb2NrX2luaXQoJmRldl9wcml2LT5ndC5jbG9zZWRfbG9jayk7CiAKIAlpOTE1X2dlbV9p
bml0X19tbShkZXZfcHJpdik7CiAJaTkxNV9nZW1faW5pdF9fcG0oZGV2X3ByaXYpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbV9ndHQuYwppbmRleCA1NmE0MzY4NTgwNDMuLjZmY2Y3MDJkN2VjMSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZ3R0LmMKQEAgLTIwNzQsNiArMjA3NCw3IEBAIHN0
YXRpYyBzdHJ1Y3QgaTkxNV92bWEgKnBkX3ZtYV9jcmVhdGUoc3RydWN0IGdlbjZfaHdfcHBndHQg
KnBwZ3R0LCBpbnQgc2l6ZSkKIAl2bWEtPmdndHRfdmlldy50eXBlID0gSTkxNV9HR1RUX1ZJRVdf
Uk9UQVRFRDsgLyogcHJldmVudCBmZW5jaW5nICovCiAKIAlJTklUX0xJU1RfSEVBRCgmdm1hLT5v
YmpfbGluayk7CisJSU5JVF9MSVNUX0hFQUQoJnZtYS0+Y2xvc2VkX2xpbmspOwogCiAJbXV0ZXhf
bG9jaygmdm1hLT52bS0+bXV0ZXgpOwogCWxpc3RfYWRkKCZ2bWEtPnZtX2xpbmssICZ2bWEtPnZt
LT51bmJvdW5kX2xpc3QpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90
aW1lbGluZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGluZS5jCmluZGV4IDVm
YmVhMDg5MmYzMy4uMDAwZTFhOWI2NzUwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3RpbWVsaW5lLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGlu
ZS5jCkBAIC02MSw3ICs2MSw3IEBAIGh3c3BfYWxsb2Moc3RydWN0IGk5MTVfdGltZWxpbmUgKnRp
bWVsaW5lLCB1bnNpZ25lZCBpbnQgKmNhY2hlbGluZSkKIAogCUJVSUxEX0JVR19PTihCSVRTX1BF
Ul9UWVBFKHU2NCkgKiBDQUNIRUxJTkVfQllURVMgPiBQQUdFX1NJWkUpOwogCi0Jc3Bpbl9sb2Nr
KCZndC0+aHdzcF9sb2NrKTsKKwlzcGluX2xvY2tfaXJxKCZndC0+aHdzcF9sb2NrKTsKIAogCS8q
IGh3c3BfZnJlZV9saXN0IG9ubHkgY29udGFpbnMgSFdTUCB0aGF0IGhhdmUgYXZhaWxhYmxlIGNh
Y2hlbGluZXMgKi8KIAlod3NwID0gbGlzdF9maXJzdF9lbnRyeV9vcl9udWxsKCZndC0+aHdzcF9m
cmVlX2xpc3QsCkBAIC02OSw3ICs2OSw3IEBAIGh3c3BfYWxsb2Moc3RydWN0IGk5MTVfdGltZWxp
bmUgKnRpbWVsaW5lLCB1bnNpZ25lZCBpbnQgKmNhY2hlbGluZSkKIAlpZiAoIWh3c3ApIHsKIAkJ
c3RydWN0IGk5MTVfdm1hICp2bWE7CiAKLQkJc3Bpbl91bmxvY2soJmd0LT5od3NwX2xvY2spOwor
CQlzcGluX3VubG9ja19pcnEoJmd0LT5od3NwX2xvY2spOwogCiAJCWh3c3AgPSBrbWFsbG9jKHNp
emVvZigqaHdzcCksIEdGUF9LRVJORUwpOwogCQlpZiAoIWh3c3ApCkBAIC04Niw3ICs4Niw3IEBA
IGh3c3BfYWxsb2Moc3RydWN0IGk5MTVfdGltZWxpbmUgKnRpbWVsaW5lLCB1bnNpZ25lZCBpbnQg
KmNhY2hlbGluZSkKIAkJaHdzcC0+ZnJlZV9iaXRtYXAgPSB+MHVsbDsKIAkJaHdzcC0+Z3QgPSBn
dDsKIAotCQlzcGluX2xvY2soJmd0LT5od3NwX2xvY2spOworCQlzcGluX2xvY2tfaXJxKCZndC0+
aHdzcF9sb2NrKTsKIAkJbGlzdF9hZGQoJmh3c3AtPmZyZWVfbGluaywgJmd0LT5od3NwX2ZyZWVf
bGlzdCk7CiAJfQogCkBAIC05Niw3ICs5Niw3IEBAIGh3c3BfYWxsb2Moc3RydWN0IGk5MTVfdGlt
ZWxpbmUgKnRpbWVsaW5lLCB1bnNpZ25lZCBpbnQgKmNhY2hlbGluZSkKIAlpZiAoIWh3c3AtPmZy
ZWVfYml0bWFwKQogCQlsaXN0X2RlbCgmaHdzcC0+ZnJlZV9saW5rKTsKIAotCXNwaW5fdW5sb2Nr
KCZndC0+aHdzcF9sb2NrKTsKKwlzcGluX3VubG9ja19pcnEoJmd0LT5od3NwX2xvY2spOwogCiAJ
R0VNX0JVR19PTihod3NwLT52bWEtPnByaXZhdGUgIT0gaHdzcCk7CiAJcmV0dXJuIGh3c3AtPnZt
YTsKQEAgLTEwNSw4ICsxMDUsOSBAQCBod3NwX2FsbG9jKHN0cnVjdCBpOTE1X3RpbWVsaW5lICp0
aW1lbGluZSwgdW5zaWduZWQgaW50ICpjYWNoZWxpbmUpCiBzdGF0aWMgdm9pZCBfX2lkbGVfaHdz
cF9mcmVlKHN0cnVjdCBpOTE1X3RpbWVsaW5lX2h3c3AgKmh3c3AsIGludCBjYWNoZWxpbmUpCiB7
CiAJc3RydWN0IGk5MTVfZ3RfdGltZWxpbmVzICpndCA9IGh3c3AtPmd0OworCXVuc2lnbmVkIGxv
bmcgZmxhZ3M7CiAKLQlzcGluX2xvY2soJmd0LT5od3NwX2xvY2spOworCXNwaW5fbG9ja19pcnFz
YXZlKCZndC0+aHdzcF9sb2NrLCBmbGFncyk7CiAKIAkvKiBBcyBhIGNhY2hlbGluZSBiZWNvbWVz
IGF2YWlsYWJsZSwgcHVibGlzaCB0aGUgSFdTUCBvbiB0aGUgZnJlZWxpc3QgKi8KIAlpZiAoIWh3
c3AtPmZyZWVfYml0bWFwKQpAQCAtMTIyLDcgKzEyMyw3IEBAIHN0YXRpYyB2b2lkIF9faWRsZV9o
d3NwX2ZyZWUoc3RydWN0IGk5MTVfdGltZWxpbmVfaHdzcCAqaHdzcCwgaW50IGNhY2hlbGluZSkK
IAkJa2ZyZWUoaHdzcCk7CiAJfQogCi0Jc3Bpbl91bmxvY2soJmd0LT5od3NwX2xvY2spOworCXNw
aW5fdW5sb2NrX2lycXJlc3RvcmUoJmd0LT5od3NwX2xvY2ssIGZsYWdzKTsKIH0KIAogc3RhdGlj
IHZvaWQgX19pZGxlX2NhY2hlbGluZV9mcmVlKHN0cnVjdCBpOTE1X3RpbWVsaW5lX2NhY2hlbGlu
ZSAqY2wpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYwppbmRleCBiN2ZiN2QyMTZmNzcuLmY2YWM4Mzk0
ZGE3NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCkBAIC0xMzEsOSArMTMxLDYgQEAgdm1hX2Ny
ZWF0ZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCWlmICh2bWEgPT0gTlVMTCkK
IAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAKLQlpOTE1X2FjdGl2ZV9pbml0KHZtLT5pOTE1
LCAmdm1hLT5hY3RpdmUsIF9faTkxNV92bWFfcmV0aXJlKTsKLQlJTklUX0FDVElWRV9SRVFVRVNU
KCZ2bWEtPmxhc3RfZmVuY2UpOwotCiAJdm1hLT52bSA9IHZtOwogCXZtYS0+b3BzID0gJnZtLT52
bWFfb3BzOwogCXZtYS0+b2JqID0gb2JqOwpAQCAtMTQxLDYgKzEzOCwxMSBAQCB2bWFfY3JlYXRl
KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJdm1hLT5zaXplID0gb2JqLT5iYXNl
LnNpemU7CiAJdm1hLT5kaXNwbGF5X2FsaWdubWVudCA9IEk5MTVfR1RUX01JTl9BTElHTk1FTlQ7
CiAKKwlpOTE1X2FjdGl2ZV9pbml0KHZtLT5pOTE1LCAmdm1hLT5hY3RpdmUsIF9faTkxNV92bWFf
cmV0aXJlKTsKKwlJTklUX0FDVElWRV9SRVFVRVNUKCZ2bWEtPmxhc3RfZmVuY2UpOworCisJSU5J
VF9MSVNUX0hFQUQoJnZtYS0+Y2xvc2VkX2xpbmspOworCiAJaWYgKHZpZXcgJiYgdmlldy0+dHlw
ZSAhPSBJOTE1X0dHVFRfVklFV19OT1JNQUwpIHsKIAkJdm1hLT5nZ3R0X3ZpZXcgPSAqdmlldzsK
IAkJaWYgKHZpZXctPnR5cGUgPT0gSTkxNV9HR1RUX1ZJRVdfUEFSVElBTCkgewpAQCAtNzg3LDEw
ICs3ODksMTAgQEAgaW50IF9faTkxNV92bWFfZG9fcGluKHN0cnVjdCBpOTE1X3ZtYSAqdm1hLAog
CiB2b2lkIGk5MTVfdm1hX2Nsb3NlKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogewotCWxvY2tkZXBf
YXNzZXJ0X2hlbGQoJnZtYS0+dm0tPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1ID0gdm1hLT52bS0+aTkxNTsKKwl1bnNpZ25lZCBsb25nIGZs
YWdzOwogCiAJR0VNX0JVR19PTihpOTE1X3ZtYV9pc19jbG9zZWQodm1hKSk7Ci0Jdm1hLT5mbGFn
cyB8PSBJOTE1X1ZNQV9DTE9TRUQ7CiAKIAkvKgogCSAqIFdlIGRlZmVyIGFjdHVhbGx5IGNsb3Np
bmcsIHVuYmluZGluZyBhbmQgZGVzdHJveWluZyB0aGUgVk1BIHVudGlsCkBAIC04MDQsMTcgKzgw
NiwyNiBAQCB2b2lkIGk5MTVfdm1hX2Nsb3NlKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCSAqIGNh
dXNpbmcgdXMgdG8gcmViaW5kIHRoZSBWTUEgb25jZSBtb3JlLiBUaGlzIGVuZHMgdXAgYmVpbmcg
YSBsb3QKIAkgKiBvZiB3YXN0ZWQgd29yayBmb3IgdGhlIHN0ZWFkeSBzdGF0ZS4KIAkgKi8KLQls
aXN0X2FkZF90YWlsKCZ2bWEtPmNsb3NlZF9saW5rLCAmdm1hLT52bS0+aTkxNS0+Z3QuY2xvc2Vk
X3ZtYSk7CisJc3Bpbl9sb2NrX2lycXNhdmUoJmk5MTUtPmd0LmNsb3NlZF9sb2NrLCBmbGFncyk7
CisJbGlzdF9hZGQoJnZtYS0+Y2xvc2VkX2xpbmssICZpOTE1LT5ndC5jbG9zZWRfdm1hKTsKKwlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZpOTE1LT5ndC5jbG9zZWRfbG9jaywgZmxhZ3MpOwogfQog
Ci12b2lkIGk5MTVfdm1hX3Jlb3BlbihzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKK3N0YXRpYyB2b2lk
IF9faTkxNV92bWFfcmVtb3ZlX2Nsb3NlZChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIHsKLQlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZ2bWEtPnZtLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHZtYS0+dm0tPmk5MTU7CiAKLQlpZiAodm1hLT5m
bGFncyAmIEk5MTVfVk1BX0NMT1NFRCkgewotCQl2bWEtPmZsYWdzICY9IH5JOTE1X1ZNQV9DTE9T
RUQ7Ci0JCWxpc3RfZGVsKCZ2bWEtPmNsb3NlZF9saW5rKTsKLQl9CisJaWYgKCFpOTE1X3ZtYV9p
c19jbG9zZWQodm1hKSkKKwkJcmV0dXJuOworCisJc3Bpbl9sb2NrX2lycSgmaTkxNS0+Z3QuY2xv
c2VkX2xvY2spOworCWxpc3RfZGVsX2luaXQoJnZtYS0+Y2xvc2VkX2xpbmspOworCXNwaW5fdW5s
b2NrX2lycSgmaTkxNS0+Z3QuY2xvc2VkX2xvY2spOworfQorCit2b2lkIGk5MTVfdm1hX3Jlb3Bl
bihzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKK3sKKwlfX2k5MTVfdm1hX3JlbW92ZV9jbG9zZWQodm1h
KTsKIH0KIAogc3RhdGljIHZvaWQgX19pOTE1X3ZtYV9kZXN0cm95KHN0cnVjdCBpOTE1X3ZtYSAq
dm1hKQpAQCAtODQ4LDggKzg1OSw3IEBAIHZvaWQgaTkxNV92bWFfZGVzdHJveShzdHJ1Y3QgaTkx
NV92bWEgKnZtYSkKIAogCUdFTV9CVUdfT04oaTkxNV92bWFfaXNfcGlubmVkKHZtYSkpOwogCi0J
aWYgKGk5MTVfdm1hX2lzX2Nsb3NlZCh2bWEpKQotCQlsaXN0X2RlbCgmdm1hLT5jbG9zZWRfbGlu
ayk7CisJX19pOTE1X3ZtYV9yZW1vdmVfY2xvc2VkKHZtYSk7CiAKIAlXQVJOX09OKGk5MTVfdm1h
X3VuYmluZCh2bWEpKTsKIAlHRU1fQlVHX09OKGk5MTVfdm1hX2lzX2FjdGl2ZSh2bWEpKTsKQEAg
LTg2MSwxMiArODcxLDE2IEBAIHZvaWQgaTkxNV92bWFfcGFya2VkKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogewogCXN0cnVjdCBpOTE1X3ZtYSAqdm1hLCAqbmV4dDsKIAorCXNwaW5f
bG9ja19pcnEoJmk5MTUtPmd0LmNsb3NlZF9sb2NrKTsKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3Nh
ZmUodm1hLCBuZXh0LCAmaTkxNS0+Z3QuY2xvc2VkX3ZtYSwgY2xvc2VkX2xpbmspIHsKLQkJR0VN
X0JVR19PTighaTkxNV92bWFfaXNfY2xvc2VkKHZtYSkpOworCQlsaXN0X2RlbF9pbml0KCZ2bWEt
PmNsb3NlZF9saW5rKTsKKwkJc3Bpbl91bmxvY2tfaXJxKCZpOTE1LT5ndC5jbG9zZWRfbG9jayk7
CisKIAkJaTkxNV92bWFfZGVzdHJveSh2bWEpOwotCX0KIAotCUdFTV9CVUdfT04oIWxpc3RfZW1w
dHkoJmk5MTUtPmd0LmNsb3NlZF92bWEpKTsKKwkJc3Bpbl9sb2NrX2lycSgmaTkxNS0+Z3QuY2xv
c2VkX2xvY2spOworCX0KKwlzcGluX3VubG9ja19pcnEoJmk5MTUtPmd0LmNsb3NlZF9sb2NrKTsK
IH0KIAogc3RhdGljIHZvaWQgX19pOTE1X3ZtYV9pb3VubWFwKHN0cnVjdCBpOTE1X3ZtYSAqdm1h
KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfdm1hLmgKaW5kZXggYmMxNTA4M2JkNDc5Li4wYzU3YWI0ZmVkNWQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuaApAQCAtNzEsNyArNzEsNyBAQCBzdHJ1Y3QgaTkxNV92
bWEgewogCSAqIGhhbmRsZXMgKGJ1dCBzYW1lIGZpbGUpIGZvciBleGVjYnVmLCBpLmUuIHRoZSBu
dW1iZXIgb2YgYWxpYXNlcwogCSAqIHRoYXQgZXhpc3QgaW4gdGhlIGN0eC0+aGFuZGxlX3ZtYXMg
TFVUIGZvciB0aGlzIHZtYS4KIAkgKi8KLQl1bnNpZ25lZCBpbnQgb3Blbl9jb3VudDsKKwlhdG9t
aWNfdCBvcGVuX2NvdW50OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAJLyoqCiAJICogSG93IG1h
bnkgdXNlcnMgaGF2ZSBwaW5uZWQgdGhpcyBvYmplY3QgaW4gR1RUIHNwYWNlLgpAQCAtMTA2LDEw
ICsxMDYsOSBAQCBzdHJ1Y3QgaTkxNV92bWEgewogCiAjZGVmaW5lIEk5MTVfVk1BX0dHVFQJCUJJ
VCgxMSkKICNkZWZpbmUgSTkxNV9WTUFfQ0FOX0ZFTkNFCUJJVCgxMikKLSNkZWZpbmUgSTkxNV9W
TUFfQ0xPU0VECQlCSVQoMTMpCi0jZGVmaW5lIEk5MTVfVk1BX1VTRVJGQVVMVF9CSVQJMTQKKyNk
ZWZpbmUgSTkxNV9WTUFfVVNFUkZBVUxUX0JJVAkxMwogI2RlZmluZSBJOTE1X1ZNQV9VU0VSRkFV
TFQJQklUKEk5MTVfVk1BX1VTRVJGQVVMVF9CSVQpCi0jZGVmaW5lIEk5MTVfVk1BX0dHVFRfV1JJ
VEUJQklUKDE1KQorI2RlZmluZSBJOTE1X1ZNQV9HR1RUX1dSSVRFCUJJVCgxNCkKIAogCXN0cnVj
dCBpOTE1X2FjdGl2ZSBhY3RpdmU7CiAJc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgbGFzdF9m
ZW5jZTsKQEAgLTE5MiwxMSArMTkxLDYgQEAgc3RhdGljIGlubGluZSBib29sIGk5MTVfdm1hX2lz
X21hcF9hbmRfZmVuY2VhYmxlKGNvbnN0IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCXJldHVybiB2
bWEtPmZsYWdzICYgSTkxNV9WTUFfQ0FOX0ZFTkNFOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wg
aTkxNV92bWFfaXNfY2xvc2VkKGNvbnN0IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQotewotCXJldHVy
biB2bWEtPmZsYWdzICYgSTkxNV9WTUFfQ0xPU0VEOwotfQotCiBzdGF0aWMgaW5saW5lIGJvb2wg
aTkxNV92bWFfc2V0X3VzZXJmYXVsdChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIHsKIAlHRU1fQlVH
X09OKCFpOTE1X3ZtYV9pc19tYXBfYW5kX2ZlbmNlYWJsZSh2bWEpKTsKQEAgLTIxMyw2ICsyMDcs
MTEgQEAgc3RhdGljIGlubGluZSBib29sIGk5MTVfdm1hX2hhc191c2VyZmF1bHQoY29uc3Qgc3Ry
dWN0IGk5MTVfdm1hICp2bWEpCiAJcmV0dXJuIHRlc3RfYml0KEk5MTVfVk1BX1VTRVJGQVVMVF9C
SVQsICZ2bWEtPmZsYWdzKTsKIH0KIAorc3RhdGljIGlubGluZSBib29sIGk5MTVfdm1hX2lzX2Ns
b3NlZChjb25zdCBzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKK3sKKwlyZXR1cm4gIWxpc3RfZW1wdHko
JnZtYS0+Y2xvc2VkX2xpbmspOworfQorCiBzdGF0aWMgaW5saW5lIHUzMiBpOTE1X2dndHRfb2Zm
c2V0KGNvbnN0IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogewogCUdFTV9CVUdfT04oIWk5MTVfdm1h
X2lzX2dndHQodm1hKSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVz
dHMvbW9ja19nZW1fZGV2aWNlLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9j
a19nZW1fZGV2aWNlLmMKaW5kZXggZTI1Yjc0YTI3ZjgzLi5iN2YzZmJiNGFlODkgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19nZW1fZGV2aWNlLmMKQEAgLTIw
Myw2ICsyMDMsNyBAQCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqbW9ja19nZW1fZGV2aWNlKHZv
aWQpCiAKIAlJTklUX0xJU1RfSEVBRCgmaTkxNS0+Z3QuYWN0aXZlX3JpbmdzKTsKIAlJTklUX0xJ
U1RfSEVBRCgmaTkxNS0+Z3QuY2xvc2VkX3ZtYSk7CisJc3Bpbl9sb2NrX2luaXQoJmk5MTUtPmd0
LmNsb3NlZF9sb2NrKTsKIAogCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwog
Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdm
eA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A12322DBDC2
	for <lists+intel-gfx@lfdr.de>; Wed, 16 Dec 2020 10:38:59 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AAB776E0D2;
	Wed, 16 Dec 2020 09:38:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 11F286E0D2
 for <intel-gfx@lists.freedesktop.org>; Wed, 16 Dec 2020 09:38:56 +0000 (UTC)
IronPort-SDR: 6b0J922gIxniVN9H/VxvKPvrmhY5yo+Aqzlbkc1xuG/9uJ1fPfcfDQ0zqvJHkHgYAEyVkBZa/y
 7AsDkiPK5SDQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9836"; a="174263499"
X-IronPort-AV: E=Sophos;i="5.78,424,1599548400"; d="scan'208";a="174263499"
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Dec 2020 01:38:55 -0800
IronPort-SDR: zcGlJGGc8Zf3FCmGlHPjGgKfmAAwZi1vHtkKN7eeh4ilLgDb2MGaieGg3r+J7lDQ98eKGUVSrD
 4wu5bF/wraVg==
X-IronPort-AV: E=Sophos;i="5.78,424,1599548400"; d="scan'208";a="368871870"
Received: from helsinki.fi.intel.com ([10.237.66.162])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Dec 2020 01:38:53 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 16 Dec 2020 11:38:24 +0200
Message-Id: <20201216093825.403689-1-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.25.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v6 1/2] drm/i915/display: Support PSR Multiple
 Transcoders
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQgaXMgYSBwcmVsaW1pbmFyeSB3b3JrIGZvciBzdXBwb3J0aW5nIG11bHRpcGxlIEVEUCBQU1Ig
YW5kCkRQIFBhbmVsUmVwbGF5LiBBbmQgaXQgcmVmYWN0b3JzIHNpbmdsZXRvbiBQU1IgdG8gTXVs
dGkgVHJhbnNjb2RlcgpzdXBwb3J0YWJsZSBQU1IuCkFuZCB0aGlzIG1vdmVzIGFuZCByZW5hbWVz
IHRoZSBpOTE1X3BzciBzdHJ1Y3R1cmUgb2YgZHJtX2k5MTVfcHJpdmF0ZSdzIHRvCmludGVsX2Rw
J3MgaW50ZWxfcHNyIHN0cnVjdHVyZS4KSXQgYWxzbyBjYXVzZXMgY2hhbmdlcyBpbiBQU1IgaW50
ZXJydXB0IGhhbmRsaW5nIHJvdXRpbmUgZm9yIHN1cHBvcnRpbmcKbXVsdGlwbGUgdHJhbnNjb2Rl
cnMuIEJ1dCBpdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIHNjZW5hcmlvIGFuZCB0aW1pbmcgb2YKZW5h
YmxpbmcgYW5kIGRpc2FibGluZyBQU1IuIEFuZCBpdCBub3Qgc3VwcG9ydCBtdWx0aXBsZSBwaXBl
cyB3aXRoCmEgc2luZ2xlIHRyYW5zY29kZXIgUFNSIGNhc2UgeWV0LgoKdjI6IEZpeCBpbmRlbnRh
dGlvbiBhbmQgYWRkIGNvbW1lbnRzCnYzOiBSZW1vdmUgQmxhbmsgbGluZQp2NDogUmViYXNlZAp2
NTogUmViYXNlZCBhbmQgQWRkcmVzc2VkIEFuc2h1bWFuJ3MgcmV2aWV3IGNvbW1lbnQuCiAgICAt
IE1vdmUgY2FsbGluZyBvZiBpbnRlbF9wc3JfaW5pdCgpIHRvIGludGVsX2RwX2luaXRfY29ubmVj
dG9yKCkKdjY6IEFkZHJlc3MgQW5zaHVtYW4ncyByZXZpZXcgY29tbWVudHMKICAgLSBSZW1vdmUg
d3JvbmcgY29tbWVudHMgYW5kIGFkZCBjb21tZW50cyBmb3IgYSBsaW1pdCBvZiBzdXBwb3J0aW5n
IG9mCiAgICAgYSBzaW5nbGUgcGlwZSBQU1IKClNpZ25lZC1vZmYtYnk6IEd3YW4tZ3llb25nIE11
biA8Z3dhbi1neWVvbmcubXVuQGludGVsLmNvbT4KQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEg
PGpvc2Uuc291emFAaW50ZWwuY29tPgpDYzogSnVoYS1QZWtrYSBIZWlra2lsYSA8anVoYXBla2th
LmhlaWtraWxhQGdtYWlsLmNvbT4KQ2M6IEFuc2h1bWFuIEd1cHRhIDxhbnNodW1hbi5ndXB0YUBp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyAg
ICAgIHwgICAzICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5j
ICB8ICAgNCAtCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYyAg
fCAxMTEgKystLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAg
IHwgIDM4ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAg
fCAgMjMgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMgICAgICB8
IDU4MiArKysrKysrKysrLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfcHNyLmggICAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9zcHJpdGUuYyAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAg
ICAgICAgICAgICAgfCAgMzggLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgICAg
ICAgICAgICAgICB8ICA0OSArLQogMTAgZmlsZXMgY2hhbmdlZCwgNDg4IGluc2VydGlvbnMoKyks
IDM4MCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGku
YwppbmRleCA2ODYzMjM2ZGYxZDAuLjRiODdmNzJjYjljMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaS5jCkBAIC00MzIwLDcgKzQzMjAsMTAgQEAgc3RhdGljIHZvaWQg
aW50ZWxfZGRpX3VwZGF0ZV9waXBlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRl
LAogCiAJaW50ZWxfZGRpX3NldF9kcF9tc2EoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAKKwkv
L1RPRE86IG1vdmUgUFNSIHJlbGF0ZWQgZnVuY3Rpb25zIGludG8gaW50ZWxfcHNyX3VwZGF0ZSgp
CisJaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKGludGVsX2RwLCBjcnRjX3N0
YXRlKTsKIAlpbnRlbF9wc3JfdXBkYXRlKGludGVsX2RwLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRl
KTsKKwogCWludGVsX2RwX3NldF9pbmZvZnJhbWVzKGVuY29kZXIsIHRydWUsIGNydGNfc3RhdGUs
IGNvbm5fc3RhdGUpOwogCWludGVsX2VkcF9kcnJzX3VwZGF0ZShpbnRlbF9kcCwgY3J0Y19zdGF0
ZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5k
ZXggNzg0NTJkZTVlMTJmLi5hNzUzNjQ3YjBiY2IgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0xNTg2OSw4ICsxNTg2OSw2IEBAIHN0YXRpYyB2
b2lkIGNvbW1pdF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwK
IAogCQlpZiAobmV3X2NydGNfc3RhdGUtPnVwZGF0ZV9waXBlKQogCQkJaW50ZWxfcGlwZV9mYXN0
c2V0KG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0Y19zdGF0ZSk7Ci0KLQkJaW50ZWxfcHNyMl9wcm9n
cmFtX3RyYW5zX21hbl90cmtfY3RsKG5ld19jcnRjX3N0YXRlKTsKIAl9CiAKIAlpZiAoZGV2X3By
aXYtPmRpc3BsYXkuYXRvbWljX3VwZGF0ZV93YXRlcm1hcmtzKQpAQCAtMTc4MjksOCArMTc4Mjcs
NiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9zZXR1cF9vdXRwdXRzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKIAkJaW50ZWxfZHZvX2luaXQoZGV2X3ByaXYpOwogCX0KIAotCWludGVs
X3Bzcl9pbml0KGRldl9wcml2KTsKLQogCWZvcl9lYWNoX2ludGVsX2VuY29kZXIoJmRldl9wcml2
LT5kcm0sIGVuY29kZXIpIHsKIAkJZW5jb2Rlci0+YmFzZS5wb3NzaWJsZV9jcnRjcyA9CiAJCQlp
bnRlbF9lbmNvZGVyX3Bvc3NpYmxlX2NydGNzKGVuY29kZXIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9kZWJ1Z2ZzLmMKaW5kZXggY2Q3ZTU1
MTllZTdkLi4wNDEwNTMxNjdkN2YgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYwpAQCAtMjQ5LDE4ICsyNDksMTcgQEAgc3Rh
dGljIGludCBpOTE1X3Bzcl9zaW5rX3N0YXR1c19zaG93KHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9p
ZCAqZGF0YSkKIAkJInNpbmsgaW50ZXJuYWwgZXJyb3IiLAogCX07CiAJc3RydWN0IGRybV9jb25u
ZWN0b3IgKmNvbm5lY3RvciA9IG0tPnByaXZhdGU7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShjb25uZWN0b3ItPmRldik7CiAJc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCA9CiAJCWludGVsX2F0dGFjaGVkX2RwKHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0
b3IpKTsKIAlpbnQgcmV0OwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkgewotCQlzZXFfcHV0
cyhtLCAiUFNSIFVuc3VwcG9ydGVkXG4iKTsKKwlpZiAoY29ubmVjdG9yLT5zdGF0dXMgIT0gY29u
bmVjdG9yX3N0YXR1c19jb25uZWN0ZWQpCiAJCXJldHVybiAtRU5PREVWOwotCX0KIAotCWlmIChj
b25uZWN0b3ItPnN0YXR1cyAhPSBjb25uZWN0b3Jfc3RhdHVzX2Nvbm5lY3RlZCkKKwlpZiAoIUNB
Tl9QU1IoaW50ZWxfZHApKSB7CisJCXNlcV9wdXRzKG0sICJQU1IgVW5zdXBwb3J0ZWRcbiIpOwog
CQlyZXR1cm4gLUVOT0RFVjsKKwl9CiAKIAlyZXQgPSBkcm1fZHBfZHBjZF9yZWFkYigmaW50ZWxf
ZHAtPmF1eCwgRFBfUFNSX1NUQVRVUywgJnZhbCk7CiAKQEAgLTI4MCwxMiArMjc5LDEzIEBAIHN0
YXRpYyBpbnQgaTkxNV9wc3Jfc2lua19zdGF0dXNfc2hvdyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZv
aWQgKmRhdGEpCiBERUZJTkVfU0hPV19BVFRSSUJVVEUoaTkxNV9wc3Jfc2lua19zdGF0dXMpOwog
CiBzdGF0aWMgdm9pZAotcHNyX3NvdXJjZV9zdGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCitwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiB7CiAJdTMyIHZhbCwgc3Rh
dHVzX3ZhbDsKIAljb25zdCBjaGFyICpzdGF0dXMgPSAidW5rbm93biI7CisJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKLQlpZiAoZGV2
X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJs
ZWQpIHsKIAkJc3RhdGljIGNvbnN0IGNoYXIgKiBjb25zdCBsaXZlX3N0YXR1c1tdID0gewogCQkJ
IklETEUiLAogCQkJIkNBUFRVUkUiLApAQCAtMzAwLDcgKzMwMCw3IEBAIHBzcl9zb3VyY2Vfc3Rh
dHVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgc3RydWN0IHNlcV9maWxlICpt
KQogCQkJIlRHX09OIgogCQl9OwogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJ
CSAgICBFRFBfUFNSMl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAg
IEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJc3RhdHVzX3Zh
bCA9ICh2YWwgJiBFRFBfUFNSMl9TVEFUVVNfU1RBVEVfTUFTSykgPj4KIAkJCSAgICAgIEVEUF9Q
U1IyX1NUQVRVU19TVEFURV9TSElGVDsKIAkJaWYgKHN0YXR1c192YWwgPCBBUlJBWV9TSVpFKGxp
dmVfc3RhdHVzKSkKQEAgLTMxNyw3ICszMTcsNyBAQCBwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHN0cnVjdCBzZXFfZmlsZSAqbSkKIAkJCSJTUkRF
TlRfT04iLAogCQl9OwogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBF
RFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BT
Ul9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCXN0YXR1c192YWwgPSAodmFs
ICYgRURQX1BTUl9TVEFUVVNfU1RBVEVfTUFTSykgPj4KIAkJCSAgICAgIEVEUF9QU1JfU1RBVFVT
X1NUQVRFX1NISUZUOwogCQlpZiAoc3RhdHVzX3ZhbCA8IEFSUkFZX1NJWkUobGl2ZV9zdGF0dXMp
KQpAQCAtMzI3LDIxICszMjcsMTggQEAgcHNyX3NvdXJjZV9zdGF0dXMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiAJc2VxX3ByaW50ZihtLCAi
U291cmNlIFBTUiBzdGF0dXM6ICVzIFsweCUwOHhdXG4iLCBzdGF0dXMsIHZhbCk7CiB9CiAKLXN0
YXRpYyBpbnQgaTkxNV9lZHBfcHNyX3N0YXR1cyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRh
dGEpCitzdGF0aWMgaW50IGludGVsX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCBzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9
ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRw
X3RvX2k5MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+
cHNyOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwogCWNvbnN0IGNoYXIgKnN0YXR1czsKIAli
b29sIGVuYWJsZWQ7CiAJdTMyIHZhbDsKIAotCWlmICghSEFTX1BTUihkZXZfcHJpdikpCi0JCXJl
dHVybiAtRU5PREVWOwotCiAJc2VxX3ByaW50ZihtLCAiU2luayBzdXBwb3J0OiAlcyIsIHllc25v
KHBzci0+c2lua19zdXBwb3J0KSk7Ci0JaWYgKHBzci0+ZHApCi0JCXNlcV9wcmludGYobSwgIiBb
MHglMDJ4XSIsIHBzci0+ZHAtPnBzcl9kcGNkWzBdKTsKKwlpZiAocHNyLT5zaW5rX3N1cHBvcnQp
CisJCXNlcV9wcmludGYobSwgIiBbMHglMDJ4XSIsIGludGVsX2RwLT5wc3JfZHBjZFswXSk7CiAJ
c2VxX3B1dHMobSwgIlxuIik7CiAKIAlpZiAoIXBzci0+c2lua19zdXBwb3J0KQpAQCAtMzY1LDE2
ICszNjIsMTYgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmls
ZSAqbSwgdm9pZCAqZGF0YSkKIAogCWlmIChwc3ItPnBzcjJfZW5hYmxlZCkgewogCQl2YWwgPSBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBz
ci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5z
Y29kZXIpKTsKIAkJZW5hYmxlZCA9IHZhbCAmIEVEUF9QU1IyX0VOQUJMRTsKIAl9IGVsc2Ugewog
CQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX0NUTChkZXZf
cHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKSk7CiAJCWVuYWJsZWQgPSB2YWwgJiBFRFBfUFNSX0VOQUJMRTsKIAl9CiAJ
c2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBjdGw6ICVzIFsweCUwOHhdXG4iLAogCQkgICBlbmFi
bGVkZGlzYWJsZWQoZW5hYmxlZCksIHZhbCk7Ci0JcHNyX3NvdXJjZV9zdGF0dXMoZGV2X3ByaXYs
IG0pOworCXBzcl9zb3VyY2Vfc3RhdHVzKGludGVsX2RwLCBtKTsKIAlzZXFfcHJpbnRmKG0sICJC
dXN5IGZyb250YnVmZmVyIGJpdHM6IDB4JTA4eFxuIiwKIAkJICAgcHNyLT5idXN5X2Zyb250YnVm
ZmVyX2JpdHMpOwogCkBAIC0zODMsNyArMzgwLDcgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jf
c3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkgKi8KIAlpZiAoSVNfSEFT
V0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURXRUxMKGRldl9wcml2KSkgewogCQl2YWwgPSBpbnRl
bF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX1BFUkZfQ05UKGRldl9wcml2LT5w
c3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX1BFUkZfQ05UKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2RlcikpOwogCQl2YWwgJj0gRURQX1BTUl9QRVJGX0NOVF9NQVNLOwogCQlzZXFfcHJp
bnRmKG0sICJQZXJmb3JtYW5jZSBjb3VudGVyOiAldVxuIiwgdmFsKTsKIAl9CkBAIC00MDQsNyAr
NDAxLDcgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAq
bSwgdm9pZCAqZGF0YSkKIAkJICovCiAJCWZvciAoZnJhbWUgPSAwOyBmcmFtZSA8IFBTUjJfU1Vf
U1RBVFVTX0ZSQU1FUzsgZnJhbWUgKz0gMykgewogCQkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwKLQkJCQkJICAgIFBTUjJfU1VfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlciwg
ZnJhbWUpKTsKKwkJCQkJICAgIFBTUjJfU1VfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
ciwgZnJhbWUpKTsKIAkJCXN1X2ZyYW1lc192YWxbZnJhbWUgLyAzXSA9IHZhbDsKIAkJfQogCkBA
IC00MzAsMjMgKzQyNyw1NyBAQCBzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0
IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IGk5
MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQoreworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRl
KTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwID0gTlVMTDsKKworCWlmICghSEFTX1BTUihkZXZfcHJpdikpCisJCXJldHVybiAtRU5P
REVWOworCisJLyogRmluZCB0aGUgZmlyc3QgRURQICovCisJZm9yX2VhY2hfaW50ZWxfZHAoJmRl
dl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VU
UFVUX0VEUCkgeworCQkJaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisJCQli
cmVhazsKKwkJfQorCX0KKworCWlmICghaW50ZWxfZHApCisJCXJldHVybiAtRU5PREVWOworCisJ
cmV0dXJuIGludGVsX3Bzcl9zdGF0dXMobSwgaW50ZWxfZHApOworfQorCiBzdGF0aWMgaW50CiBp
OTE1X2VkcF9wc3JfZGVidWdfc2V0KHZvaWQgKmRhdGEsIHU2NCB2YWwpCiB7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZGF0YTsKIAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJl
ZjsKLQlpbnQgcmV0OworCWludCByZXQgPSAtRU5PREVWOworCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKLQkJcmV0dXJuIC1FTk9ERVY7
CisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKKwkJcmV0dXJuIHJldDsKIAotCWRybV9kYmdfa21z
KCZkZXZfcHJpdi0+ZHJtLCAiU2V0dGluZyBQU1IgZGVidWcgdG8gJWxseFxuIiwgdmFsKTsKKwlm
b3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwogCi0Jd2FrZXJlZiA9
IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CisJCWlmICghQ0FO
X1BTUihpbnRlbF9kcCkpCisJCQljb250aW51ZTsKIAotCXJldCA9IGludGVsX3Bzcl9kZWJ1Z19z
ZXQoZGV2X3ByaXYsIHZhbCk7CisJCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9F
RFApIHsKKwkJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiU2V0dGluZyBQU1IgZGVidWcg
dG8gJWxseFxuIiwgdmFsKTsKIAotCWludGVsX3J1bnRpbWVfcG1fcHV0KCZkZXZfcHJpdi0+cnVu
dGltZV9wbSwgd2FrZXJlZik7CisJCQl3YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXQoJmRl
dl9wcml2LT5ydW50aW1lX3BtKTsKKworCQkJLy8gVE9ETzogc3BsaXQgdG8gZWFjaCB0cmFuc2Nv
ZGVyJ3MgUFNSIGRlYnVnIHN0YXRlCisJCQlyZXQgPSBpbnRlbF9wc3JfZGVidWdfc2V0KGludGVs
X2RwLCB2YWwpOworCisJCQlpbnRlbF9ydW50aW1lX3BtX3B1dCgmZGV2X3ByaXYtPnJ1bnRpbWVf
cG0sIHdha2VyZWYpOworCQl9CisJfQogCiAJcmV0dXJuIHJldDsKIH0KQEAgLTQ1NSwxMiArNDg2
LDI1IEBAIHN0YXRpYyBpbnQKIGk5MTVfZWRwX3Bzcl9kZWJ1Z19nZXQodm9pZCAqZGF0YSwgdTY0
ICp2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZGF0YTsKKwlz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikp
CisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKIAkJcmV0dXJuIC1FTk9ERVY7CiAKLQkqdmFsID0g
UkVBRF9PTkNFKGRldl9wcml2LT5wc3IuZGVidWcpOwotCXJldHVybiAwOworCWZvcl9lYWNoX2lu
dGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJCXN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisKKwkJaWYgKCFDQU5fUFNSKGludGVs
X2RwKSkKKwkJCWNvbnRpbnVlOworCisJCS8vIFRPRE86IHNwbGl0IHRvIGVhY2ggdHJhbnNjb2Rl
cidzIFBTUiBkZWJ1ZyBzdGF0ZQorCQlpZiAoZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRf
RURQKSB7CisJCQkqdmFsID0gUkVBRF9PTkNFKGludGVsX2RwLT5wc3IuZGVidWcpOworCQkJcmV0
dXJuIDA7CisJCX0KKwl9CisKKwlyZXR1cm4gLUVOT0RFVjsKIH0KIAogREVGSU5FX1NJTVBMRV9B
VFRSSUJVVEUoaTkxNV9lZHBfcHNyX2RlYnVnX2ZvcHMsCkBAIC0xMjM0LDkgKzEyNzgsNiBAQCBz
dGF0aWMgdm9pZCBkcnJzX3N0YXR1c19wZXJfY3J0YyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sCiAJCS8q
IGRpc2FibGVfZHJycygpIHdpbGwgbWFrZSBkcnJzLT5kcCBOVUxMICovCiAJCWlmICghZHJycy0+
ZHApIHsKIAkJCXNlcV9wdXRzKG0sICJJZGxlbmVzcyBEUlJTOiBEaXNhYmxlZFxuIik7Ci0JCQlp
ZiAoZGV2X3ByaXYtPnBzci5lbmFibGVkKQotCQkJCXNlcV9wdXRzKG0sCi0JCQkJIlx0QXMgUFNS
IGlzIGVuYWJsZWQsIERSUlMgaXMgbm90IGVuYWJsZWRcbiIpOwogCQkJbXV0ZXhfdW5sb2NrKCZk
cnJzLT5tdXRleCk7CiAJCQlyZXR1cm47CiAJCX0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5kZXggNWJjNWJmYmM0NTUxLi45ODk5
ZmRkZjRjOTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oCkBAIC0xMzM5LDYgKzEzMzksNDIgQEAgc3RydWN0IGludGVsX2RwX2Nv
bXBsaWFuY2UgewogCXU4IHRlc3RfbGFuZV9jb3VudDsKIH07CiAKK3N0cnVjdCBpbnRlbF9wc3Ig
eworCS8qIE11dGV4IGZvciBQU1Igc3RhdGUgb2YgdGhlIHRyYW5zY29kZXIgKi8KKwlzdHJ1Y3Qg
bXV0ZXggbG9jazsKKworI2RlZmluZSBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0sJMHgwZgorI2Rl
ZmluZSBJOTE1X1BTUl9ERUJVR19ERUZBVUxUCQkweDAwCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVH
X0RJU0FCTEUJCTB4MDEKKyNkZWZpbmUgSTkxNV9QU1JfREVCVUdfRU5BQkxFCQkweDAyCisjZGVm
aW5lIEk5MTVfUFNSX0RFQlVHX0ZPUkNFX1BTUjEJMHgwMworI2RlZmluZSBJOTE1X1BTUl9ERUJV
R19JUlEJCTB4MTAKKworCXUzMiBkZWJ1ZzsKKwlib29sIHNpbmtfc3VwcG9ydDsKKwlib29sIGVu
YWJsZWQ7CisJZW51bSBwaXBlIHBpcGU7CisJZW51bSB0cmFuc2NvZGVyIHRyYW5zY29kZXI7CisJ
Ym9vbCBhY3RpdmU7CisJc3RydWN0IHdvcmtfc3RydWN0IHdvcms7CisJdW5zaWduZWQgaW50IGJ1
c3lfZnJvbnRidWZmZXJfYml0czsKKwlib29sIHNpbmtfcHNyMl9zdXBwb3J0OworCWJvb2wgbGlu
a19zdGFuZGJ5OworCWJvb2wgY29sb3JpbWV0cnlfc3VwcG9ydDsKKwlib29sIHBzcjJfZW5hYmxl
ZDsKKwlib29sIHBzcjJfc2VsX2ZldGNoX2VuYWJsZWQ7CisJdTggc2lua19zeW5jX2xhdGVuY3k7
CisJa3RpbWVfdCBsYXN0X2VudHJ5X2F0dGVtcHQ7CisJa3RpbWVfdCBsYXN0X2V4aXQ7CisJYm9v
bCBzaW5rX25vdF9yZWxpYWJsZTsKKwlib29sIGlycV9hdXhfZXJyb3I7CisJdTE2IHN1X3hfZ3Jh
bnVsYXJpdHk7CisJYm9vbCBkYzNjb19lbmFibGVkOworCXUzMiBkYzNjb19leGl0X2RlbGF5Owor
CXN0cnVjdCBkZWxheWVkX3dvcmsgZGMzY29fd29yazsKKwlzdHJ1Y3QgZHJtX2RwX3ZzY19zZHAg
dnNjOworfTsKKwogc3RydWN0IGludGVsX2RwIHsKIAlpOTE1X3JlZ190IG91dHB1dF9yZWc7CiAJ
dTMyIERQOwpAQCAtMTQ2MCw2ICsxNDk2LDggQEAgc3RydWN0IGludGVsX2RwIHsKIAogCWJvb2wg
aG9ibF9mYWlsZWQ7CiAJYm9vbCBob2JsX2FjdGl2ZTsKKworCXN0cnVjdCBpbnRlbF9wc3IgcHNy
OwogfTsKIAogZW51bSBsc3Bjb25fdmVuZG9yIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZHAuYwppbmRleCBiMmJjMGM4YzM5YzcuLjU3MzBjYWQ3YjZhYyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtMjcwMiwxMiArMjcwMiwxMCBAQCB2b2lk
IGludGVsX2RwX2NvbXB1dGVfcHNyX3ZzY19zZHAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
IAkJCQkgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlLAogCQkJ
CSAgc3RydWN0IGRybV9kcF92c2Nfc2RwICp2c2MpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KIAl2c2MtPnNkcF90eXBlID0g
RFBfU0RQX1ZTQzsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkgewotCQlpZiAo
ZGV2X3ByaXYtPnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ICYmCisJaWYgKGludGVsX2RwLT5wc3Iu
cHNyMl9lbmFibGVkKSB7CisJCWlmIChpbnRlbF9kcC0+cHNyLmNvbG9yaW1ldHJ5X3N1cHBvcnQg
JiYKIAkJICAgIGludGVsX2RwX25lZWRzX3ZzY19zZHAoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkp
IHsKIAkJCS8qIFtQU1IyLCArQ29sb3JpbWV0cnldICovCiAJCQlpbnRlbF9kcF9jb21wdXRlX3Zz
Y19jb2xvcmltZXRyeShjcnRjX3N0YXRlLCBjb25uX3N0YXRlLApAQCAtMzg0NCw3ICszODQyLDcg
QEAgYm9vbCBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2soc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJCXJldHVybiBmYWxzZTsKIAl9CiAKLQlpZiAoQ0FOX1BTUihpOTE1KSAm
JiBpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKSB7CisJaWYgKENBTl9QU1IoaW50ZWxfZHApICYm
IGludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpIHsKIAkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwg
IkZvcmNpbmcgZnVsbCBtb2Rlc2V0IHRvIGNvbXB1dGUgUFNSIHN0YXRlXG4iKTsKIAkJY3J0Y19z
dGF0ZS0+dWFwaS5tb2RlX2NoYW5nZWQgPSB0cnVlOwogCQlyZXR1cm4gZmFsc2U7CkBAIC04MDcw
LDYgKzgwNjgsMTcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZHBfbW9kZXNldF9yZXRyeV93b3JrX2Zu
KHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAlkcm1fa21zX2hlbHBlcl9ob3RwbHVnX2V2ZW50
KGNvbm5lY3Rvci0+ZGV2KTsKIH0KIAorc3RhdGljIHZvaWQgaW50ZWxfZHBfdXBkYXRlX3BpcGUo
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJIHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyLAorCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSwKKwkJCQkgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUp
Cit7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVy
KTsKKworCWludGVsX3BhbmVsX3VwZGF0ZV9iYWNrbGlnaHQoc3RhdGUsIGVuY29kZXIsIGNydGNf
c3RhdGUsIGNvbm5fc3RhdGUpOworCWludGVsX3BzcjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0
bChpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7Cit9CisKIGJvb2wKIGludGVsX2RwX2luaXRfY29ubmVj
dG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0LAogCQkJc3RydWN0IGludGVs
X2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9yKQpAQCAtODE4NCw2ICs4MTkzLDggQEAgaW50ZWxf
ZHBfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQsCiAJ
CQkgICAgICAgKHRlbXAgJiB+MHhmKSB8IDB4ZCk7CiAJfQogCisJaW50ZWxfcHNyX2luaXQoaW50
ZWxfZHApOworCiAJcmV0dXJuIHRydWU7CiAKIGZhaWw6CkBAIC04MjI1LDcgKzgyMzYsNyBAQCBi
b29sIGludGVsX2RwX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCWlu
dGVsX2VuY29kZXItPmdldF9jb25maWcgPSBpbnRlbF9kcF9nZXRfY29uZmlnOwogCWludGVsX2Vu
Y29kZXItPnN5bmNfc3RhdGUgPSBpbnRlbF9kcF9zeW5jX3N0YXRlOwogCWludGVsX2VuY29kZXIt
PmluaXRpYWxfZmFzdHNldF9jaGVjayA9IGludGVsX2RwX2luaXRpYWxfZmFzdHNldF9jaGVjazsK
LQlpbnRlbF9lbmNvZGVyLT51cGRhdGVfcGlwZSA9IGludGVsX3BhbmVsX3VwZGF0ZV9iYWNrbGln
aHQ7CisJaW50ZWxfZW5jb2Rlci0+dXBkYXRlX3BpcGUgPSBpbnRlbF9kcF91cGRhdGVfcGlwZTsK
IAlpbnRlbF9lbmNvZGVyLT5zdXNwZW5kID0gaW50ZWxfZHBfZW5jb2Rlcl9zdXNwZW5kOwogCWlu
dGVsX2VuY29kZXItPnNodXRkb3duID0gaW50ZWxfZHBfZW5jb2Rlcl9zaHV0ZG93bjsKIAlpZiAo
SVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3Bzci5jCmluZGV4IGQ5YTM5NWM0ODZkMy4uZTRjM2Q4OTY2MjQ2IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMKQEAgLTc5LDExICs3OSwxMyBAQAogICogdXNl
IHBhZ2UgZmxpcHMuCiAgKi8KIAotc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KQorc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVk
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3dpdGNoIChpOTE1LT5wc3IuZGVidWcg
JiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0spIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKworCXN3aXRjaCAoaW50ZWxfZHAtPnBz
ci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSykgewogCWNhc2UgSTkxNV9QU1JfREVC
VUdfREVGQVVMVDoKLQkJcmV0dXJuIGk5MTUtPnBhcmFtcy5lbmFibGVfcHNyOworCQlyZXR1cm4g
ZGV2X3ByaXYtPnBhcmFtcy5lbmFibGVfcHNyOwogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJM
RToKIAkJcmV0dXJuIGZhbHNlOwogCWRlZmF1bHQ6CkBAIC05MSw5ICs5Myw5IEBAIHN0YXRpYyBi
b29sIHBzcl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAl9
CiB9CiAKLXN0YXRpYyBib29sIHBzcjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQorc3RhdGljIGJvb2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogewotCXN3aXRjaCAoZGV2X3ByaXYtPnBzci5kZWJ1ZyAmIEk5
MTVfUFNSX0RFQlVHX01PREVfTUFTSykgeworCXN3aXRjaCAoaW50ZWxfZHAtPnBzci5kZWJ1ZyAm
IEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSykgewogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJM
RToKIAljYXNlIEk5MTVfUFNSX0RFQlVHX0ZPUkNFX1BTUjE6CiAJCXJldHVybiBmYWxzZTsKQEAg
LTEwMiwxMSArMTA0LDEyIEBAIHN0YXRpYyBib29sIHBzcjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCX0KIH0KIAotc3RhdGljIHZvaWQgcHNyX2ly
cV9jb250cm9sKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lk
IHBzcl9pcnFfY29udHJvbChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCWVudW0gdHJh
bnNjb2RlciB0cmFuc19zaGlmdDsKIAl1MzIgbWFzaywgdmFsOwogCWk5MTVfcmVnX3QgaW1yX3Jl
ZzsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVs
X2RwKTsKIAogCS8qCiAJICogZ2VuMTIrIGhhcyByZWdpc3RlcnMgcmVsYXRpdmUgdG8gdHJhbnNj
b2RlciBhbmQgb25lIHBlciB0cmFuc2NvZGVyCkBAIC0xMTUsMTQgKzExOCwxNCBAQCBzdGF0aWMg
dm9pZCBwc3JfaXJxX2NvbnRyb2woc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
CSAqLwogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCXRyYW5zX3NoaWZ0ID0g
MDsKLQkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsK
KwkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9
IGVsc2UgewotCQl0cmFuc19zaGlmdCA9IGRldl9wcml2LT5wc3IudHJhbnNjb2RlcjsKKwkJdHJh
bnNfc2hpZnQgPSBpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXI7CiAJCWltcl9yZWcgPSBFRFBfUFNS
X0lNUjsKIAl9CiAKIAltYXNrID0gRURQX1BTUl9FUlJPUih0cmFuc19zaGlmdCk7Ci0JaWYgKGRl
dl9wcml2LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19JUlEpCisJaWYgKGludGVsX2RwLT5w
c3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19JUlEpCiAJCW1hc2sgfD0gRURQX1BTUl9QT1NUX0VY
SVQodHJhbnNfc2hpZnQpIHwKIAkJCUVEUF9QU1JfUFJFX0VOVFJZKHRyYW5zX3NoaWZ0KTsKIApA
QCAtMTcxLDM4ICsxNzQsMzcgQEAgc3RhdGljIHZvaWQgcHNyX2V2ZW50X3ByaW50KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1LAogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiXHRQU1Ig
ZGlzYWJsZWRcbiIpOwogfQogCi12b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBwc3JfaWlyKQordm9pZCBpbnRlbF9wc3JfaXJx
X2hhbmRsZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTMyIHBzcl9paXIpCiB7Ci0JZW51
bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVyID0gZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyOwor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
OworCWVudW0gdHJhbnNjb2RlciBjcHVfdHJhbnNjb2RlciA9IGludGVsX2RwLT5wc3IudHJhbnNj
b2RlcjsKIAllbnVtIHRyYW5zY29kZXIgdHJhbnNfc2hpZnQ7CiAJaTkxNV9yZWdfdCBpbXJfcmVn
OwogCWt0aW1lX3QgdGltZV9ucyA9ICBrdGltZV9nZXQoKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpID49IDEyKSB7CiAJCXRyYW5zX3NoaWZ0ID0gMDsKLQkJaW1yX3JlZyA9IFRSQU5TX1BT
Ul9JTVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJaW1yX3JlZyA9IFRSQU5TX1BTUl9J
TVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9IGVsc2UgewotCQl0cmFuc19zaGlmdCA9
IGRldl9wcml2LT5wc3IudHJhbnNjb2RlcjsKKwkJdHJhbnNfc2hpZnQgPSBpbnRlbF9kcC0+cHNy
LnRyYW5zY29kZXI7CiAJCWltcl9yZWcgPSBFRFBfUFNSX0lNUjsKIAl9CiAKIAlpZiAocHNyX2lp
ciAmIEVEUF9QU1JfUFJFX0VOVFJZKHRyYW5zX3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxh
c3RfZW50cnlfYXR0ZW1wdCA9IHRpbWVfbnM7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJt
LAotCQkJICAgICJbdHJhbnNjb2RlciAlc10gUFNSIGVudHJ5IGF0dGVtcHQgaW4gMiB2Ymxhbmtz
XG4iLAotCQkJICAgIHRyYW5zY29kZXJfbmFtZShjcHVfdHJhbnNjb2RlcikpOworCQlpbnRlbF9k
cC0+cHNyLmxhc3RfZW50cnlfYXR0ZW1wdCA9IHRpbWVfbnM7CisJCURSTV9ERUJVR19LTVMoIlt0
cmFuc2NvZGVyICVzXSBQU1IgZW50cnkgYXR0ZW1wdCBpbiAyIHZibGFua3NcbiIsCisJCQkgICAg
ICB0cmFuc2NvZGVyX25hbWUoY3B1X3RyYW5zY29kZXIpKTsKIAl9CiAKIAlpZiAocHNyX2lpciAm
IEVEUF9QU1JfUE9TVF9FWElUKHRyYW5zX3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxhc3Rf
ZXhpdCA9IHRpbWVfbnM7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJb
dHJhbnNjb2RlciAlc10gUFNSIGV4aXQgY29tcGxldGVkXG4iLAotCQkJICAgIHRyYW5zY29kZXJf
bmFtZShjcHVfdHJhbnNjb2RlcikpOworCQlpbnRlbF9kcC0+cHNyLmxhc3RfZXhpdCA9IHRpbWVf
bnM7CisJCURSTV9ERUJVR19LTVMoIlt0cmFuc2NvZGVyICVzXSBQU1IgZXhpdCBjb21wbGV0ZWRc
biIsCisJCQkgICAgICB0cmFuc2NvZGVyX25hbWUoY3B1X3RyYW5zY29kZXIpKTsKIAogCQlpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSA5KSB7CiAJCQl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChk
ZXZfcHJpdiwKIAkJCQkJCVBTUl9FVkVOVChjcHVfdHJhbnNjb2RlcikpOwotCQkJYm9vbCBwc3Iy
X2VuYWJsZWQgPSBkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZDsKKwkJCWJvb2wgcHNyMl9lbmFi
bGVkID0gaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQ7CiAKIAkJCWludGVsX2RlX3dyaXRlKGRl
dl9wcml2LCBQU1JfRVZFTlQoY3B1X3RyYW5zY29kZXIpLAogCQkJCSAgICAgICB2YWwpOwpAQCAt
MjEzLDEwICsyMTUsMTAgQEAgdm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LCB1MzIgcHNyX2lpcikKIAlpZiAocHNyX2lpciAmIEVEUF9Q
U1JfRVJST1IodHJhbnNfc2hpZnQpKSB7CiAJCXUzMiB2YWw7CiAKLQkJZHJtX3dhcm4oJmRldl9w
cml2LT5kcm0sICJbdHJhbnNjb2RlciAlc10gUFNSIGF1eCBlcnJvclxuIiwKKwkJRFJNX1dBUk4o
Ilt0cmFuc2NvZGVyICVzXSBQU1IgYXV4IGVycm9yXG4iLAogCQkJIHRyYW5zY29kZXJfbmFtZShj
cHVfdHJhbnNjb2RlcikpOwogCi0JCWRldl9wcml2LT5wc3IuaXJxX2F1eF9lcnJvciA9IHRydWU7
CisJCWludGVsX2RwLT5wc3IuaXJxX2F1eF9lcnJvciA9IHRydWU7CiAKIAkJLyoKIAkJICogSWYg
dGhpcyBpbnRlcnJ1cHRpb24gaXMgbm90IG1hc2tlZCBpdCB3aWxsIGtlZXAKQEAgLTIzMCw3ICsy
MzIsNyBAQCB2b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYsIHUzMiBwc3JfaWlyKQogCQl2YWwgfD0gRURQX1BTUl9FUlJPUih0cmFuc19z
aGlmdCk7CiAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbXJfcmVnLCB2YWwpOwogCi0JCXNj
aGVkdWxlX3dvcmsoJmRldl9wcml2LT5wc3Iud29yayk7CisJCXNjaGVkdWxlX3dvcmsoJmludGVs
X2RwLT5wc3Iud29yayk7CiAJfQogfQogCkBAIC0yOTEsMTIgKzI5Myw2IEBAIHZvaWQgaW50ZWxf
cHNyX2luaXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9CiAJCXRvX2k5MTUoZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHAp
LT5iYXNlLmJhc2UuZGV2KTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLmRwKSB7Ci0JCWRybV93YXJu
KCZkZXZfcHJpdi0+ZHJtLAotCQkJICJNb3JlIHRoYW4gb25lIGVEUCBwYW5lbCBmb3VuZCwgUFNS
IHN1cHBvcnQgc2hvdWxkIGJlIGV4dGVuZGVkXG4iKTsKLQkJcmV0dXJuOwotCX0KLQogCWRybV9k
cF9kcGNkX3JlYWQoJmludGVsX2RwLT5hdXgsIERQX1BTUl9TVVBQT1JULCBpbnRlbF9kcC0+cHNy
X2RwY2QsCiAJCQkgc2l6ZW9mKGludGVsX2RwLT5wc3JfZHBjZCkpOwogCkBAIC0zMTcsMTIgKzMx
MywxMCBAQCB2b2lkIGludGVsX3Bzcl9pbml0X2RwY2Qoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAkJcmV0dXJuOwogCX0KIAotCWRldl9wcml2LT5wc3Iuc2lua19zdXBwb3J0ID0gdHJ1ZTsK
LQlkZXZfcHJpdi0+cHNyLnNpbmtfc3luY19sYXRlbmN5ID0KKwlpbnRlbF9kcC0+cHNyLnNpbmtf
c3VwcG9ydCA9IHRydWU7CisJaW50ZWxfZHAtPnBzci5zaW5rX3N5bmNfbGF0ZW5jeSA9CiAJCWlu
dGVsX2RwX2dldF9zaW5rX3N5bmNfbGF0ZW5jeShpbnRlbF9kcCk7CiAKLQlkZXZfcHJpdi0+cHNy
LmRwID0gaW50ZWxfZHA7Ci0KIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5ICYmCiAJICAg
IChpbnRlbF9kcC0+cHNyX2RwY2RbMF0gPT0gRFBfUFNSMl9XSVRIX1lfQ09PUkRfSVNfU1VQUE9S
VEVEKSkgewogCQlib29sIHlfcmVxID0gaW50ZWxfZHAtPnBzcl9kcGNkWzFdICYKQEAgLTM0MCwx
NCArMzM0LDE0IEBAIHZvaWQgaW50ZWxfcHNyX2luaXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogCQkgKiBZLWNvb3JkaW5hdGUgcmVxdWlyZW1lbnQgcGFuZWxzIHdlIHdvdWxkIG5l
ZWQgdG8gZW5hYmxlCiAJCSAqIEdUQyBmaXJzdC4KIAkJICovCi0JCWRldl9wcml2LT5wc3Iuc2lu
a19wc3IyX3N1cHBvcnQgPSB5X3JlcSAmJiBhbHBtOworCQlpbnRlbF9kcC0+cHNyLnNpbmtfcHNy
Ml9zdXBwb3J0ID0geV9yZXEgJiYgYWxwbTsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0s
ICJQU1IyICVzc3VwcG9ydGVkXG4iLAotCQkJICAgIGRldl9wcml2LT5wc3Iuc2lua19wc3IyX3N1
cHBvcnQgPyAiIiA6ICJub3QgIik7CisJCQkgICAgaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3Vw
cG9ydCA/ICIiIDogIm5vdCAiKTsKIAotCQlpZiAoZGV2X3ByaXYtPnBzci5zaW5rX3BzcjJfc3Vw
cG9ydCkgewotCQkJZGV2X3ByaXYtPnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ID0KKwkJaWYgKGlu
dGVsX2RwLT5wc3Iuc2lua19wc3IyX3N1cHBvcnQpIHsKKwkJCWludGVsX2RwLT5wc3IuY29sb3Jp
bWV0cnlfc3VwcG9ydCA9CiAJCQkJaW50ZWxfZHBfZ2V0X2NvbG9yaW1ldHJ5X3N0YXR1cyhpbnRl
bF9kcCk7Ci0JCQlkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkgPQorCQkJaW50ZWxfZHAt
PnBzci5zdV94X2dyYW51bGFyaXR5ID0KIAkJCQlpbnRlbF9kcF9nZXRfc3VfeF9ncmFudWxhcnRp
eShpbnRlbF9kcCk7CiAJCX0KIAl9CkBAIC0zNzMsNyArMzY3LDcgQEAgc3RhdGljIHZvaWQgaHN3
X3Bzcl9zZXR1cF9hdXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlCVUlMRF9CVUdfT04o
c2l6ZW9mKGF1eF9tc2cpID4gMjApOwogCWZvciAoaSA9IDA7IGkgPCBzaXplb2YoYXV4X21zZyk7
IGkgKz0gNCkKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgRURQX1BTUl9B
VVhfREFUQShkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCisJCQkgICAgICAgRURQ
X1BTUl9BVVhfREFUQShpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCiAJCQkgICAg
ICAgaW50ZWxfZHBfcGFja19hdXgoJmF1eF9tc2dbaV0sIHNpemVvZihhdXhfbXNnKSAtIGkpKTsK
IAogCWF1eF9jbG9ja19kaXZpZGVyID0gaW50ZWxfZHAtPmdldF9hdXhfY2xvY2tfZGl2aWRlcihp
bnRlbF9kcCwgMCk7CkBAIC0zODQsNyArMzc4LDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bzcl9zZXR1
cF9hdXgoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogCS8qIFNlbGVjdCBvbmx5IHZhbGlk
IGJpdHMgZm9yIFNSRF9BVVhfQ1RMICovCiAJYXV4X2N0bCAmPSBwc3JfYXV4X21hc2s7Ci0JaW50
ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQVVYX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5z
Y29kZXIpLAorCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0FVWF9DVEwoaW50ZWxf
ZHAtPnBzci50cmFuc2NvZGVyKSwKIAkJICAgICAgIGF1eF9jdGwpOwogfQogCkBAIC0zOTQsMTQg
KzM4OCwxNCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3Npbmsoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKIAl1OCBkcGNkX3ZhbCA9IERQX1BTUl9FTkFCTEU7CiAKIAkvKiBFbmFi
bGUgQUxQTSBhdCBzaW5rIGZvciBwc3IyICovCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFi
bGVkKSB7CisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CiAJCWRybV9kcF9kcGNk
X3dyaXRlYigmaW50ZWxfZHAtPmF1eCwgRFBfUkVDRUlWRVJfQUxQTV9DT05GSUcsCiAJCQkJICAg
RFBfQUxQTV9FTkFCTEUgfAogCQkJCSAgIERQX0FMUE1fTE9DS19FUlJPUl9JUlFfSFBEX0VOQUJM
RSk7CiAKIAkJZHBjZF92YWwgfD0gRFBfUFNSX0VOQUJMRV9QU1IyIHwgRFBfUFNSX0lSUV9IUERf
V0lUSF9DUkNfRVJST1JTOwogCX0gZWxzZSB7Ci0JCWlmIChkZXZfcHJpdi0+cHNyLmxpbmtfc3Rh
bmRieSkKKwkJaWYgKGludGVsX2RwLT5wc3IubGlua19zdGFuZGJ5KQogCQkJZHBjZF92YWwgfD0g
RFBfUFNSX01BSU5fTElOS19BQ1RJVkU7CiAKIAkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0g
OCkKQEAgLTQ2NCw3ICs0NTgsNyBAQCBzdGF0aWMgdTggcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkgKiBvZmYtYnktb25lIGlzc3VlIHRoYXQgSFcg
aGFzIGluIHNvbWUgY2FzZXMuCiAJICovCiAJaWRsZV9mcmFtZXMgPSBtYXgoNiwgZGV2X3ByaXYt
PnZidC5wc3IuaWRsZV9mcmFtZXMpOwotCWlkbGVfZnJhbWVzID0gbWF4KGlkbGVfZnJhbWVzLCBk
ZXZfcHJpdi0+cHNyLnNpbmtfc3luY19sYXRlbmN5ICsgMSk7CisJaWRsZV9mcmFtZXMgPSBtYXgo
aWRsZV9mcmFtZXMsIGludGVsX2RwLT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgKyAxKTsKIAogCWlm
IChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgaWRsZV9mcmFtZXMgPiAweGYpKQogCQlpZGxl
X2ZyYW1lcyA9IDB4ZjsKQEAgLTQ4NCw3ICs0NzgsNyBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0aXZh
dGVfcHNyMShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWlmIChJU19IQVNXRUxMKGRldl9w
cml2KSkKIAkJdmFsIHw9IEVEUF9QU1JfTUlOX0xJTktfRU5UUllfVElNRV84X0xJTkVTOwogCi0J
aWYgKGRldl9wcml2LT5wc3IubGlua19zdGFuZGJ5KQorCWlmIChpbnRlbF9kcC0+cHNyLmxpbmtf
c3RhbmRieSkKIAkJdmFsIHw9IEVEUF9QU1JfTElOS19TVEFOREJZOwogCiAJdmFsIHw9IGludGVs
X3BzcjFfZ2V0X3RwX3RpbWUoaW50ZWxfZHApOwpAQCAtNDkyLDkgKzQ4Niw5IEBAIHN0YXRpYyB2
b2lkIGhzd19hY3RpdmF0ZV9wc3IxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKElO
VEVMX0dFTihkZXZfcHJpdikgPj0gOCkKIAkJdmFsIHw9IEVEUF9QU1JfQ1JDX0VOQUJMRTsKIAot
CXZhbCB8PSAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBz
ci50cmFuc2NvZGVyKSkgJgorCXZhbCB8PSAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BT
Ul9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSkgJgogCQlFRFBfUFNSX1JFU1RPUkVfUFNS
X0FDVElWRV9DVFhfTUFTSyk7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RM
KGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3By
aXYsIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiB9CiAKIHN0
YXRpYyB1MzIgaW50ZWxfcHNyMl9nZXRfdHBfdGltZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQpAQCAtNTI5LDcgKzUyMyw3IEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0ZV9wc3IyKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTAgfHwg
SVNfR0VNSU5JTEFLRShkZXZfcHJpdikpCiAJCXZhbCB8PSBFRFBfWV9DT09SRElOQVRFX0VOQUJM
RTsKIAotCXZhbCB8PSBFRFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoZGV2X3ByaXYtPnBzci5zaW5r
X3N5bmNfbGF0ZW5jeSArIDEpOworCXZhbCB8PSBFRFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoaW50
ZWxfZHAtPnBzci5zaW5rX3N5bmNfbGF0ZW5jeSArIDEpOwogCXZhbCB8PSBpbnRlbF9wc3IyX2dl
dF90cF90aW1lKGludGVsX2RwKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7
CkBAIC01NDgsNyArNTQyLDcgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjIoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCkKIAkJdmFsIHw9IEVEUF9QU1IyX0ZBU1RfV0FLRSg3KTsKIAl9
CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkKSB7CisJaWYgKGlu
dGVsX2RwLT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCkgewogCQkvKiBXQSAxNDA4MzMwODQ3
ICovCiAJCWlmIChJU19UR0xfRElTUF9SRVZJRChkZXZfcHJpdiwgVEdMX1JFVklEX0EwLCBUR0xf
UkVWSURfQTApIHx8CiAJCSAgICBJU19SS0xfUkVWSUQoZGV2X3ByaXYsIFJLTF9SRVZJRF9BMCwg
UktMX1JFVklEX0EwKSkKQEAgLTU1NywyMCArNTUxLDIwIEBAIHN0YXRpYyB2b2lkIGhzd19hY3Rp
dmF0ZV9wc3IyKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCQkJICAgICBESVNfUkFNX0JZ
UEFTU19QU1IyX01BTl9UUkFDSyk7CiAKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkg
ICAgICAgUFNSMl9NQU5fVFJLX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCQkJICAg
ICAgIFBTUjJfTUFOX1RSS19DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwKIAkJCSAgICAg
ICBQU1IyX01BTl9UUktfQ1RMX0VOQUJMRSk7CiAJfSBlbHNlIGlmIChIQVNfUFNSMl9TRUxfRkVU
Q0goZGV2X3ByaXYpKSB7CiAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LAotCQkJICAgICAgIFBT
UjJfTUFOX1RSS19DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgMCk7CisJCQkgICAgICAg
UFNSMl9NQU5fVFJLX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAl9CiAKIAkv
KgogCSAqIFBTUjIgSFcgaXMgaW5jb3JyZWN0bHkgdXNpbmcgRURQX1BTUl9UUDFfVFAzX1NFTCBh
bmQgQlNwZWMgaXMKIAkgKiByZWNvbW1lbmRpbmcga2VlcCB0aGlzIGJpdCB1bnNldCB3aGlsZSBQ
U1IyIGlzIGVuYWJsZWQuCiAJICovCi0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1Jf
Q1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIDApOworCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LCBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAotCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVy
KSwgdmFsKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2Rw
LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiB9CiAKIHN0YXRpYyBib29sCkBAIC01OTMsNTUgKzU4
Nyw1OCBAQCBzdGF0aWMgdTMyIGludGVsX2dldF9mcmFtZV90aW1lX3VzKGNvbnN0IHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjc3RhdGUpCiAJCQkgICAgZHJtX21vZGVfdnJlZnJlc2goJmNzdGF0
ZS0+aHcuYWRqdXN0ZWRfbW9kZSkpOwogfQogCi1zdGF0aWMgdm9pZCBwc3IyX3Byb2dyYW1faWRs
ZV9mcmFtZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorc3RhdGljIHZvaWQg
cHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCQkJ
ICAgICB1MzIgaWRsZV9mcmFtZXMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTMyIHZhbDsKIAogCWlkbGVfZnJhbWVzIDw8
PSAgRURQX1BTUjJfSURMRV9GUkFNRV9TSElGVDsKLQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9w
cml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJdmFsID0gaW50
ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
cikpOwogCXZhbCAmPSB+RURQX1BTUjJfSURMRV9GUkFNRV9NQVNLOwogCXZhbCB8PSBpZGxlX2Zy
YW1lczsKLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5w
c3IudHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1Iy
X0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogfQogCi1zdGF0aWMgdm9pZCB0
Z2xfcHNyMl9lbmFibGVfZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQor
c3RhdGljIHZvaWQgdGdsX3BzcjJfZW5hYmxlX2RjM2NvKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHApCiB7Ci0JcHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVzKGRldl9wcml2LCAwKTsKKwlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKworCXBz
cjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCwgMCk7CiAJaW50ZWxfZGlzcGxheV9wb3dl
cl9zZXRfdGFyZ2V0X2RjX3N0YXRlKGRldl9wcml2LCBEQ19TVEFURV9FTl9EQzNDTyk7CiB9CiAK
LXN0YXRpYyB2b2lkIHRnbF9wc3IyX2Rpc2FibGVfZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogewotCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBkZXZf
cHJpdi0+cHNyLmRwOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOwogCiAJaW50ZWxfZGlzcGxheV9wb3dlcl9zZXRfdGFyZ2V0X2RjX3N0
YXRlKGRldl9wcml2LCBEQ19TVEFURV9FTl9VUFRPX0RDNik7Ci0JcHNyMl9wcm9ncmFtX2lkbGVf
ZnJhbWVzKGRldl9wcml2LCBwc3JfY29tcHV0ZV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCkpOworCXBz
cjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCwgcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMo
aW50ZWxfZHApKTsKIH0KIAogc3RhdGljIHZvaWQgdGdsX2RjM2NvX2Rpc2FibGVfd29yayhzdHJ1
Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0KLQkJY29udGFpbmVyX29mKHdvcmssIHR5cGVvZigqZGV2X3ByaXYpLCBwc3IuZGMzY29f
d29yay53b3JrKTsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0KKwkJY29udGFpbmVyX29m
KHdvcmssIHR5cGVvZigqaW50ZWxfZHApLCBwc3IuZGMzY29fd29yay53b3JrKTsKIAotCW11dGV4
X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5s
b2NrKTsKIAkvKiBJZiBkZWxheWVkIHdvcmsgaXMgcGVuZGluZywgaXQgaXMgbm90IGlkbGUgKi8K
LQlpZiAoZGVsYXllZF93b3JrX3BlbmRpbmcoJmRldl9wcml2LT5wc3IuZGMzY29fd29yaykpCisJ
aWYgKGRlbGF5ZWRfd29ya19wZW5kaW5nKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspKQogCQln
b3RvIHVubG9jazsKIAotCXRnbF9wc3IyX2Rpc2FibGVfZGMzY28oZGV2X3ByaXYpOworCXRnbF9w
c3IyX2Rpc2FibGVfZGMzY28oaW50ZWxfZHApOwogdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2
X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiB9
CiAKLXN0YXRpYyB2b2lkIHRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgdGdsX2Rpc2FsbG93X2RjM2Nv
X29uX3BzcjJfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCWlmICghZGV2X3By
aXYtPnBzci5kYzNjb19lbmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVk
KQogCQlyZXR1cm47CiAKLQljYW5jZWxfZGVsYXllZF93b3JrKCZkZXZfcHJpdi0+cHNyLmRjM2Nv
X3dvcmspOworCWNhbmNlbF9kZWxheWVkX3dvcmsoJmludGVsX2RwLT5wc3IuZGMzY29fd29yayk7
CiAJLyogQmVmb3JlIFBTUjIgZXhpdCBkaXNhbGxvdyBkYzNjbyovCi0JdGdsX3BzcjJfZGlzYWJs
ZV9kYzNjbyhkZXZfcHJpdik7CisJdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhpbnRlbF9kcCk7CiB9
CiAKIHN0YXRpYyB2b2lkCkBAIC03MTQsNyArNzExLDcgQEAgc3RhdGljIGJvb2wgaW50ZWxfcHNy
Ml9jb25maWdfdmFsaWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlpbnQgY3J0Y192ZGlz
cGxheSA9IGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUuY3J0Y192ZGlzcGxheTsKIAlpbnQg
cHNyX21heF9oID0gMCwgcHNyX21heF92ID0gMCwgbWF4X2JwcCA9IDA7CiAKLQlpZiAoIWRldl9w
cml2LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLnNpbmtfcHNy
Ml9zdXBwb3J0KQogCQlyZXR1cm4gZmFsc2U7CiAKIAlpZiAoIXRyYW5zY29kZXJfaGFzX3BzcjIo
ZGV2X3ByaXYsIGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyKSkgewpAQCAtNzI0LDcgKzcyMSw3
IEBAIHN0YXRpYyBib29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsCiAJCXJldHVybiBmYWxzZTsKIAl9CiAKLQlpZiAoIXBzcjJfZ2xvYmFsX2VuYWJs
ZWQoZGV2X3ByaXYpKSB7CisJaWYgKCFwc3IyX2dsb2JhbF9lbmFibGVkKGludGVsX2RwKSkgewog
CQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBTUjIgZGlzYWJsZWQgYnkgZmxhZ1xuIik7
CiAJCXJldHVybiBmYWxzZTsKIAl9CkBAIC03NzMsMTAgKzc3MCwxMCBAQCBzdGF0aWMgYm9vbCBp
bnRlbF9wc3IyX2NvbmZpZ192YWxpZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCSAqIG9u
bHkgbmVlZCB0byB2YWxpZGF0ZSB0aGUgU1UgYmxvY2sgd2lkdGggaXMgYSBtdWx0aXBsZSBvZgog
CSAqIHggZ3JhbnVsYXJpdHkuCiAJICovCi0JaWYgKGNydGNfaGRpc3BsYXkgJSBkZXZfcHJpdi0+
cHNyLnN1X3hfZ3JhbnVsYXJpdHkpIHsKKwlpZiAoY3J0Y19oZGlzcGxheSAlIGludGVsX2RwLT5w
c3Iuc3VfeF9ncmFudWxhcml0eSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJ
CSAgICAiUFNSMiBub3QgZW5hYmxlZCwgaGRpc3BsYXkoJWQpIG5vdCBtdWx0aXBsZSBvZiAlZFxu
IiwKLQkJCSAgICBjcnRjX2hkaXNwbGF5LCBkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkp
OworCQkJICAgIGNydGNfaGRpc3BsYXksIGludGVsX2RwLT5wc3Iuc3VfeF9ncmFudWxhcml0eSk7
CiAJCXJldHVybiBmYWxzZTsKIAl9CiAKQEAgLTgxMSwxMyArODA4LDEwIEBAIHZvaWQgaW50ZWxf
cHNyX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCSZjcnRjX3N0
YXRlLT5ody5hZGp1c3RlZF9tb2RlOwogCWludCBwc3Jfc2V0dXBfdGltZTsKIAotCWlmICghQ0FO
X1BTUihkZXZfcHJpdikpCi0JCXJldHVybjsKLQotCWlmIChpbnRlbF9kcCAhPSBkZXZfcHJpdi0+
cHNyLmRwKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCiAJCXJldHVybjsKIAotCWlmICghcHNy
X2dsb2JhbF9lbmFibGVkKGRldl9wcml2KSkgeworCWlmICghcHNyX2dsb2JhbF9lbmFibGVkKGlu
dGVsX2RwKSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBTUiBkaXNhYmxlZCBi
eSBmbGFnXG4iKTsKIAkJcmV0dXJuOwogCX0KQEAgLTgzNCw3ICs4MjgsNyBAQCB2b2lkIGludGVs
X3Bzcl9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQlyZXR1cm47
CiAJfQogCi0JaWYgKGRldl9wcml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUpIHsKKwlpZiAoaW50
ZWxfZHAtPnBzci5zaW5rX25vdF9yZWxpYWJsZSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYt
PmRybSwKIAkJCSAgICAiUFNSIHNpbmsgaW1wbGVtZW50YXRpb24gaXMgbm90IHJlbGlhYmxlXG4i
KTsKIAkJcmV0dXJuOwpAQCAtODcwLDIzICs4NjQsMjQgQEAgdm9pZCBpbnRlbF9wc3JfY29tcHV0
ZV9jb25maWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIHN0YXRpYyB2b2lkIGludGVsX3Bz
cl9hY3RpdmF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWVudW0gdHJhbnNj
b2RlciB0cmFuc2NvZGVyID0gaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyOwogCi0JaWYgKHRyYW5z
Y29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpCisJaWYg
KHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIHRyYW5zY29kZXIpKQogCQlkcm1fV0FSTl9P
TigmZGV2X3ByaXYtPmRybSwKLQkJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNS
Ml9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkgJiBFRFBfUFNSMl9FTkFCTEUpOworCQkJ
ICAgIGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTCh0cmFuc2NvZGVyKSkgJiBF
RFBfUFNSMl9FTkFCTEUpOwogCiAJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sCi0JCSAgICBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29k
ZXIpKSAmIEVEUF9QU1JfRU5BQkxFKTsKLQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZGV2
X3ByaXYtPnBzci5hY3RpdmUpOwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wc3Iu
bG9jayk7CisJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSX0NUTCh0cmFuc2Nv
ZGVyKSkgJiBFRFBfUFNSX0VOQUJMRSk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGlu
dGVsX2RwLT5wc3IuYWN0aXZlKTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZpbnRlbF9kcC0+cHNy
LmxvY2spOwogCiAJLyogcHNyMSBhbmQgcHNyMiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiovCi0J
aWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKQorCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJf
ZW5hYmxlZCkKIAkJaHN3X2FjdGl2YXRlX3BzcjIoaW50ZWxfZHApOwogCWVsc2UKIAkJaHN3X2Fj
dGl2YXRlX3BzcjEoaW50ZWxfZHApOwogCi0JZGV2X3ByaXYtPnBzci5hY3RpdmUgPSB0cnVlOwor
CWludGVsX2RwLT5wc3IuYWN0aXZlID0gdHJ1ZTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNy
X2VuYWJsZV9zb3VyY2Uoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKQEAgLTkwMiw3ICs4OTcs
NyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2
X3ByaXYpKQogCQloc3dfcHNyX3NldHVwX2F1eChpbnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYt
PnBzci5wc3IyX2VuYWJsZWQgJiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKKwlpZiAoaW50ZWxf
ZHAtPnBzci5wc3IyX2VuYWJsZWQgJiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKIAkJCQkJICAg
IUlTX0dFTUlOSUxBS0UoZGV2X3ByaXYpKSkgewogCQlpOTE1X3JlZ190IHJlZyA9IENISUNLRU5f
VFJBTlMoY3B1X3RyYW5zY29kZXIpOwogCQl1MzIgY2hpY2tlbiA9IGludGVsX2RlX3JlYWQoZGV2
X3ByaXYsIHJlZyk7CkBAIC05MjYsMTAgKzkyMSwxMCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jf
ZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChJTlRFTF9HRU4o
ZGV2X3ByaXYpIDwgMTEpCiAJCW1hc2sgfD0gRURQX1BTUl9ERUJVR19NQVNLX0RJU1BfUkVHX1dS
SVRFOwogCi0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfREVCVUcoZGV2X3ByaXYt
PnBzci50cmFuc2NvZGVyKSwKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9ERUJV
RyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLAogCQkgICAgICAgbWFzayk7CiAKLQlwc3JfaXJx
X2NvbnRyb2woZGV2X3ByaXYpOworCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7CiAKIAlpZiAo
Y3J0Y19zdGF0ZS0+ZGMzY29fZXhpdGxpbmUpIHsKIAkJdTMyIHZhbDsKQEAgLTk0NywzMCArOTQy
LDMwIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfc291cmNlKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCiAKIAlpZiAoSEFTX1BTUl9IV19UUkFDS0lORyhkZXZfcHJpdikgJiYgSEFT
X1BTUjJfU0VMX0ZFVENIKGRldl9wcml2KSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElD
S0VOX1BBUjFfMSwgSUdOT1JFX1BTUjJfSFdfVFJBQ0tJTkcsCi0JCQkgICAgIGRldl9wcml2LT5w
c3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA/CisJCQkgICAgIGludGVsX2RwLT5wc3IucHNyMl9z
ZWxfZmV0Y2hfZW5hYmxlZCA/CiAJCQkgICAgIElHTk9SRV9QU1IyX0hXX1RSQUNLSU5HIDogMCk7
CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2Vk
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCSAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
cl9zdGF0ZSAqY29ubl9zdGF0ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZGV2
X3ByaXYtPnBzci5kcDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90
b19pOTE1KGludGVsX2RwKTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9
IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciA9ICZkaWdfcG9ydC0+YmFzZTsKIAl1MzIgdmFsOwogCi0JZHJtX1dBUk5fT04oJmRldl9wcml2
LT5kcm0sIGRldl9wcml2LT5wc3IuZW5hYmxlZCk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5k
cm0sIGludGVsX2RwLT5wc3IuZW5hYmxlZCk7CiAKLQlkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxl
ZCA9IGNydGNfc3RhdGUtPmhhc19wc3IyOwotCWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZl
cl9iaXRzID0gMDsKLQlkZXZfcHJpdi0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3Rh
dGUtPnVhcGkuY3J0YyktPnBpcGU7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19lbmFibGVkID0gISFj
cnRjX3N0YXRlLT5kYzNjb19leGl0bGluZTsKLQlkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIgPSBj
cnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcjsKKwlpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA9
IGNydGNfc3RhdGUtPmhhc19wc3IyOworCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9i
aXRzID0gMDsKKwlpbnRlbF9kcC0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUt
PnVhcGkuY3J0YyktPnBpcGU7CisJaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkID0gISFjcnRj
X3N0YXRlLT5kYzNjb19leGl0bGluZTsKKwlpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIgPSBjcnRj
X3N0YXRlLT5jcHVfdHJhbnNjb2RlcjsKIAkvKiBEQzUvREM2IHJlcXVpcmVzIGF0IGxlYXN0IDYg
aWRsZSBmcmFtZXMgKi8KIAl2YWwgPSB1c2Vjc190b19qaWZmaWVzKGludGVsX2dldF9mcmFtZV90
aW1lX3VzKGNydGNfc3RhdGUpICogNik7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19leGl0X2RlbGF5
ID0gdmFsOwotCWRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA9IGNydGNfc3Rh
dGUtPmVuYWJsZV9wc3IyX3NlbF9mZXRjaDsKKwlpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRfZGVs
YXkgPSB2YWw7CisJaW50ZWxfZHAtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkID0gY3J0Y19z
dGF0ZS0+ZW5hYmxlX3BzcjJfc2VsX2ZldGNoOwogCiAJLyoKIAkgKiBJZiBhIFBTUiBlcnJvciBo
YXBwZW5lZCBhbmQgdGhlIGRyaXZlciBpcyByZWxvYWRlZCwgdGhlIEVEUF9QU1JfSUlSCkBAIC05
ODIsMjcgKzk3NywyNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJICovCiAJaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPj0gMTIpIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAg
VFJBTlNfUFNSX0lJUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgVFJBTlNf
UFNSX0lJUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJdmFsICY9IEVEUF9QU1JfRVJS
T1IoMCk7CiAJfSBlbHNlIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BT
Ul9JSVIpOwotCQl2YWwgJj0gRURQX1BTUl9FUlJPUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIp
OworCQl2YWwgJj0gRURQX1BTUl9FUlJPUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCX0K
IAlpZiAodmFsKSB7Ci0JCWRldl9wcml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUgPSB0cnVlOwor
CQlpbnRlbF9kcC0+cHNyLnNpbmtfbm90X3JlbGlhYmxlID0gdHJ1ZTsKIAkJZHJtX2RiZ19rbXMo
JmRldl9wcml2LT5kcm0sCiAJCQkgICAgIlBTUiBpbnRlcnJ1cHRpb24gZXJyb3Igc2V0LCBub3Qg
ZW5hYmxpbmcgUFNSXG4iKTsKIAkJcmV0dXJuOwogCX0KIAogCWRybV9kYmdfa21zKCZkZXZfcHJp
di0+ZHJtLCAiRW5hYmxpbmcgUFNSJXNcbiIsCi0JCSAgICBkZXZfcHJpdi0+cHNyLnBzcjJfZW5h
YmxlZCA/ICIyIiA6ICIxIik7CisJCSAgICBpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA/ICIy
IiA6ICIxIik7CiAJaW50ZWxfZHBfY29tcHV0ZV9wc3JfdnNjX3NkcChpbnRlbF9kcCwgY3J0Y19z
dGF0ZSwgY29ubl9zdGF0ZSwKLQkJCQkgICAgICZkZXZfcHJpdi0+cHNyLnZzYyk7Ci0JaW50ZWxf
d3JpdGVfZHBfdnNjX3NkcChlbmNvZGVyLCBjcnRjX3N0YXRlLCAmZGV2X3ByaXYtPnBzci52c2Mp
OworCQkJCSAgICAgJmludGVsX2RwLT5wc3IudnNjKTsKKwlpbnRlbF93cml0ZV9kcF92c2Nfc2Rw
KGVuY29kZXIsIGNydGNfc3RhdGUsICZpbnRlbF9kcC0+cHNyLnZzYyk7CiAJaW50ZWxfcHNyX2Vu
YWJsZV9zaW5rKGludGVsX2RwKTsKIAlpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShpbnRlbF9kcCwg
Y3J0Y19zdGF0ZSk7Ci0JZGV2X3ByaXYtPnBzci5lbmFibGVkID0gdHJ1ZTsKKwlpbnRlbF9kcC0+
cHNyLmVuYWJsZWQgPSB0cnVlOwogCiAJaW50ZWxfcHNyX2FjdGl2YXRlKGludGVsX2RwKTsKIH0K
QEAgLTEwMjEsNyArMTAxNiw3IEBAIHZvaWQgaW50ZWxfcHNyX2VuYWJsZShzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwLAogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRw
X3RvX2k5MTUoaW50ZWxfZHApOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSB8fCBkZXZfcHJp
di0+cHNyLmRwICE9IGludGVsX2RwKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCiAJCXJldHVy
bjsKIAogCWlmICghY3J0Y19zdGF0ZS0+aGFzX3BzcikKQEAgLTEwMjksNDYgKzEwMjQsNDcgQEAg
dm9pZCBpbnRlbF9wc3JfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIAlkcm1f
V0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZGV2X3ByaXYtPmRycnMuZHApOwogCi0JbXV0ZXhfbG9j
aygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChkZXZfcHJp
diwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNy
LmxvY2spOworCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJaW50ZWxfcHNyX2Vu
YWJsZV9sb2NrZWQoaW50ZWxfZHAsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOworCW11dGV4X3Vu
bG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgaW50ZWxfcHNyX2V4
aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgaW50ZWxf
cHNyX2V4aXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAl1MzIgdmFsOwogCi0J
aWYgKCFkZXZfcHJpdi0+cHNyLmFjdGl2ZSkgewotCQlpZiAodHJhbnNjb2Rlcl9oYXNfcHNyMihk
ZXZfcHJpdiwgZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkgeworCWlmICghaW50ZWxfZHAtPnBz
ci5hY3RpdmUpIHsKKwkJaWYgKHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIGludGVsX2Rw
LT5wc3IudHJhbnNjb2RlcikpIHsKIAkJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0J
CQkJCSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJCSAg
ICBFRFBfUFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCQlkcm1fV0FSTl9P
TigmZGV2X3ByaXYtPmRybSwgdmFsICYgRURQX1BTUjJfRU5BQkxFKTsKIAkJfQogCiAJCXZhbCA9
IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5w
c3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5z
Y29kZXIpKTsKIAkJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIHZhbCAmIEVEUF9QU1JfRU5B
QkxFKTsKIAogCQlyZXR1cm47CiAJfQogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVk
KSB7Ci0JCXRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoZGV2X3ByaXYpOworCWlmIChp
bnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkgeworCQl0Z2xfZGlzYWxsb3dfZGMzY29fb25fcHNy
Ml9leGl0KGludGVsX2RwKTsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkg
ICAgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBf
UFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCWRybV9XQVJOX09OKCZkZXZf
cHJpdi0+ZHJtLCAhKHZhbCAmIEVEUF9QU1IyX0VOQUJMRSkpOwogCQl2YWwgJj0gfkVEUF9QU1Iy
X0VOQUJMRTsKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgRURQX1BTUjJf
Q1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CisJCQkgICAgICAgRURQX1BTUjJf
Q1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiAJfSBlbHNlIHsKIAkJdmFsID0g
aW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBz
ci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNj
b2RlcikpOwogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgISh2YWwgJiBFRFBfUFNSX0VO
QUJMRSkpOwogCQl2YWwgJj0gfkVEUF9QU1JfRU5BQkxFOwogCQlpbnRlbF9kZV93cml0ZShkZXZf
cHJpdiwKLQkJCSAgICAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCB2
YWwpOworCQkJICAgICAgIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZh
bCk7CiAJfQotCWRldl9wcml2LT5wc3IuYWN0aXZlID0gZmFsc2U7CisJaW50ZWxfZHAtPnBzci5h
Y3RpdmUgPSBmYWxzZTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2Vk
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCkBAIC0xMDc3LDIxICsxMDczLDIxIEBAIHN0YXRp
YyB2b2lkIGludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQogCWk5MTVfcmVnX3QgcHNyX3N0YXR1czsKIAl1MzIgcHNyX3N0YXR1c19tYXNrOwogCi0JbG9j
a2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwlsb2NrZGVwX2Fzc2VydF9o
ZWxkKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQp
CisJaWYgKCFpbnRlbF9kcC0+cHNyLmVuYWJsZWQpCiAJCXJldHVybjsKIAogCWRybV9kYmdfa21z
KCZkZXZfcHJpdi0+ZHJtLCAiRGlzYWJsaW5nIFBTUiVzXG4iLAotCQkgICAgZGV2X3ByaXYtPnBz
ci5wc3IyX2VuYWJsZWQgPyAiMiIgOiAiMSIpOworCQkgICAgaW50ZWxfZHAtPnBzci5wc3IyX2Vu
YWJsZWQgPyAiMiIgOiAiMSIpOwogCi0JaW50ZWxfcHNyX2V4aXQoZGV2X3ByaXYpOworCWludGVs
X3Bzcl9leGl0KGludGVsX2RwKTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkg
ewotCQlwc3Jfc3RhdHVzID0gRURQX1BTUjJfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rl
cik7CisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCXBzcl9zdGF0dXMgPSBF
RFBfUFNSMl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJcHNyX3N0YXR1c19t
YXNrID0gRURQX1BTUjJfU1RBVFVTX1NUQVRFX01BU0s7CiAJfSBlbHNlIHsKLQkJcHNyX3N0YXR1
cyA9IEVEUF9QU1JfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJCXBzcl9zdGF0
dXMgPSBFRFBfUFNSX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCQlwc3Jfc3Rh
dHVzX21hc2sgPSBFRFBfUFNSX1NUQVRVU19TVEFURV9NQVNLOwogCX0KIApAQCAtMTEwMSw3ICsx
MDk3LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHApCiAJCWRybV9lcnIoJmRldl9wcml2LT5kcm0sICJUaW1lZCBvdXQgd2Fp
dGluZyBQU1IgaWRsZSBzdGF0ZVxuIik7CiAKIAkvKiBXQSAxNDA4MzMwODQ3ICovCi0JaWYgKGRl
dl9wcml2LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCAmJgorCWlmIChpbnRlbF9kcC0+cHNy
LnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQgJiYKIAkgICAgKElTX1RHTF9ESVNQX1JFVklEKGRldl9w
cml2LCBUR0xfUkVWSURfQTAsIFRHTF9SRVZJRF9BMCkgfHwKIAkgICAgIElTX1JLTF9SRVZJRChk
ZXZfcHJpdiwgUktMX1JFVklEX0EwLCBSS0xfUkVWSURfQTApKSkKIAkJaW50ZWxfZGVfcm13KGRl
dl9wcml2LCBDSElDS0VOX1BBUjFfMSwKQEAgLTExMTAsMTAgKzExMDYsMTAgQEAgc3RhdGljIHZv
aWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJ
LyogRGlzYWJsZSBQU1Igb24gU2luayAqLwogCWRybV9kcF9kcGNkX3dyaXRlYigmaW50ZWxfZHAt
PmF1eCwgRFBfUFNSX0VOX0NGRywgMCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJs
ZWQpCisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKQogCQlkcm1fZHBfZHBjZF93cml0
ZWIoJmludGVsX2RwLT5hdXgsIERQX1JFQ0VJVkVSX0FMUE1fQ09ORklHLCAwKTsKIAotCWRldl9w
cml2LT5wc3IuZW5hYmxlZCA9IGZhbHNlOworCWludGVsX2RwLT5wc3IuZW5hYmxlZCA9IGZhbHNl
OwogfQogCiAvKioKQEAgLTExMzEsMjAgKzExMjcsMjIgQEAgdm9pZCBpbnRlbF9wc3JfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmICghb2xkX2NydGNfc3RhdGUtPmhhc19w
c3IpCiAJCXJldHVybjsKIAotCWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgIUNBTl9Q
U1IoZGV2X3ByaXYpKSkKKwlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFDQU5fUFNS
KGludGVsX2RwKSkpCiAJCXJldHVybjsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9j
ayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWludGVsX3Bzcl9kaXNh
YmxlX2xvY2tlZChpbnRlbF9kcCk7CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9j
ayk7Ci0JY2FuY2VsX3dvcmtfc3luYygmZGV2X3ByaXYtPnBzci53b3JrKTsKLQljYW5jZWxfZGVs
YXllZF93b3JrX3N5bmMoJmRldl9wcml2LT5wc3IuZGMzY29fd29yayk7CisJbXV0ZXhfdW5sb2Nr
KCZpbnRlbF9kcC0+cHNyLmxvY2spOworCWNhbmNlbF93b3JrX3N5bmMoJmludGVsX2RwLT5wc3Iu
d29yayk7CisJY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dv
cmspOwogfQogCi1zdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJh
Y2tpbmdfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCiAJaWYgKElTX1RJ
R0VSTEFLRShkZXZfcHJpdikpCiAJCS8qCiAJCSAqIFdyaXRlcyB0byBDVVJTVVJGTElWRSBpbiBU
R0wgYXJlIGNhdXNpbmcgSU9NTVUgZXJyb3JzIGFuZApAQCAtMTE1OCw3ICsxMTU2LDcgQEAgc3Rh
dGljIHZvaWQgcHNyX2ZvcmNlX2h3X3RyYWNraW5nX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQogCQkgKiBTbyB1c2luZyB0aGlzIHdvcmthcm91bmQgdW50aWwgdGhpcyBp
c3N1ZSBpcyByb290IGNhdXNlZAogCQkgKiBhbmQgYSBiZXR0ZXIgZml4IGlzIGZvdW5kLgogCQkg
Ki8KLQkJaW50ZWxfcHNyX2V4aXQoZGV2X3ByaXYpOworCQlpbnRlbF9wc3JfZXhpdChpbnRlbF9k
cCk7CiAJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQkvKgogCQkgKiBEaXNw
bGF5IFdBICMwODg0OiBza2wrCkBAIC0xMTY5LDEzICsxMTY3LDEzIEBAIHN0YXRpYyB2b2lkIHBz
cl9mb3JjZV9od190cmFja2luZ19leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dikKIAkJICogYnV0IGl0IG1ha2VzIG1vcmUgc2Vuc2Ugd3JpdGUgdG8gdGhlIGN1cnJlbnQgYWN0
aXZlCiAJCSAqIHBpcGUuCiAJCSAqLwotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgQ1VSU1VS
RkxJVkUoZGV2X3ByaXYtPnBzci5waXBlKSwgMCk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2
LCBDVVJTVVJGTElWRShpbnRlbF9kcC0+cHNyLnBpcGUpLCAwKTsKIAllbHNlCiAJCS8qCiAJCSAq
IEEgd3JpdGUgdG8gQ1VSU1VSRkxJVkUgZG8gbm90IGNhdXNlIEhXIHRyYWNraW5nIHRvIGV4aXQg
UFNSCiAJCSAqIG9uIG9sZGVyIGdlbnMgc28gZG9pbmcgdGhlIG1hbnVhbCBleGl0IGluc3RlYWQu
CiAJCSAqLwotCQlpbnRlbF9wc3JfZXhpdChkZXZfcHJpdik7CisJCWludGVsX3Bzcl9leGl0KGlu
dGVsX2RwKTsKIH0KIAogdm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0
cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCkBAIC0xMjE1LDExICsxMjEzLDExIEBAIHZvaWQgaW50
ZWxfcHNyMl9wcm9ncmFtX3BsYW5lX3NlbF9mZXRjaChzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5l
LAogCWludGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQTEFORV9TRUxfRkVUQ0hfU0laRShwaXBl
LCBwbGFuZS0+aWQpLCB2YWwpOwogfQogCi12b2lkIGludGVsX3BzcjJfcHJvZ3JhbV90cmFuc19t
YW5fdHJrX2N0bChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3Zv
aWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsCisJCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUpCiB7Ci0Jc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3Rh
dGUtPnVhcGkuY3J0Yyk7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShjcnRjLT5iYXNlLmRldik7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYt
PnBzcjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGlu
dGVsX2RwKTsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsKIAogCWlm
ICghSEFTX1BTUjJfU0VMX0ZFVENIKGRldl9wcml2KSB8fAogCSAgICAhY3J0Y19zdGF0ZS0+ZW5h
YmxlX3BzcjJfc2VsX2ZldGNoKQpAQCAtMTMzNiwxMyArMTMzNCwxMyBAQCB2b2lkIGludGVsX3Bz
cl91cGRhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJICAgICAgY29uc3Qgc3RydWN0
IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0Jc3RydWN0IGk5MTVfcHNy
ICpwc3IgPSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxf
ZHAtPnBzcjsKIAlib29sIGVuYWJsZSwgcHNyMl9lbmFibGU7CiAKLQlpZiAoIUNBTl9QU1IoZGV2
X3ByaXYpIHx8IFJFQURfT05DRShwc3ItPmRwKSAhPSBpbnRlbF9kcCkKKwlpZiAoIUNBTl9QU1Io
aW50ZWxfZHApKQogCQlyZXR1cm47CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2sp
OworCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKIAllbmFibGUgPSBjcnRjX3N0
YXRlLT5oYXNfcHNyOwogCXBzcjJfZW5hYmxlID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7CkBAIC0x
MzUwLDE1ICsxMzQ4LDE1IEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAogCWlmIChlbmFibGUgPT0gcHNyLT5lbmFibGVkICYmIHBzcjJfZW5hYmxlID09
IHBzci0+cHNyMl9lbmFibGVkKSB7CiAJCS8qIEZvcmNlIGEgUFNSIGV4aXQgd2hlbiBlbmFibGlu
ZyBDUkMgdG8gYXZvaWQgQ1JDIHRpbWVvdXRzICovCiAJCWlmIChjcnRjX3N0YXRlLT5jcmNfZW5h
YmxlZCAmJiBwc3ItPmVuYWJsZWQpCi0JCQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChkZXZf
cHJpdik7CisJCQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChpbnRlbF9kcCk7CiAJCWVsc2Ug
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCA5ICYmIHBzci0+ZW5hYmxlZCkgewogCQkJLyoKIAkJ
CSAqIEFjdGl2YXRlIFBTUiBhZ2FpbiBhZnRlciBhIGZvcmNlIGV4aXQgd2hlbiBlbmFibGluZwog
CQkJICogQ1JDIGluIG9sZGVyIGdlbnMKIAkJCSAqLwotCQkJaWYgKCFkZXZfcHJpdi0+cHNyLmFj
dGl2ZSAmJgotCQkJICAgICFkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKLQkJ
CQlzY2hlZHVsZV93b3JrKCZkZXZfcHJpdi0+cHNyLndvcmspOworCQkJaWYgKCFpbnRlbF9kcC0+
cHNyLmFjdGl2ZSAmJgorCQkJICAgICFpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0
cykKKwkJCQlzY2hlZHVsZV93b3JrKCZpbnRlbF9kcC0+cHNyLndvcmspOwogCQl9CiAKIAkJZ290
byB1bmxvY2s7CkBAIC0xMzY4LDM0ICsxMzY2LDIzIEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQlpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoaW50
ZWxfZHApOwogCiAJaWYgKGVuYWJsZSkKLQkJaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoZGV2X3By
aXYsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUpOworCQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChp
bnRlbF9kcCwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAKIHVubG9jazoKLQltdXRleF91bmxv
Y2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOwogfQogCiAvKioKLSAqIGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNS
MSB0byBpZGxlCi0gKiBAbmV3X2NydGNfc3RhdGU6IG5ldyBDUlRDIHN0YXRlCisgKiBwc3Jfd2Fp
dF9mb3JfaWRsZSAtIHdhaXQgZm9yIFBTUjEgdG8gaWRsZQorICogQGludGVsX2RwOiBJbnRlbCBE
UAogICogQG91dF92YWx1ZTogUFNSIHN0YXR1cyBpbiBjYXNlIG9mIGZhaWx1cmUKICAqCi0gKiBU
aGlzIGZ1bmN0aW9uIGlzIGV4cGVjdGVkIHRvIGJlIGNhbGxlZCBmcm9tIHBpcGVfdXBkYXRlX3N0
YXJ0KCkgd2hlcmUgaXQgaXMKLSAqIG5vdCBleHBlY3RlZCB0byByYWNlIHdpdGggUFNSIGVuYWJs
ZSBvciBkaXNhYmxlLgotICoKICAqIFJldHVybnM6IDAgb24gc3VjY2VzcyBvciAtRVRJTUVPVVQg
aWYgUFNSIHN0YXR1cyBkb2VzIG5vdCBpZGxlLgorICoKICAqLwotaW50IGludGVsX3Bzcl93YWl0
X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwK
LQkJCSAgICB1MzIgKm91dF92YWx1ZSkKK3N0YXRpYyBpbnQgcHNyX3dhaXRfZm9yX2lkbGUoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwgdTMyICpvdXRfdmFsdWUpCiB7Ci0Jc3RydWN0IGludGVs
X2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKG5ld19jcnRjX3N0YXRlLT51YXBpLmNydGMpOwot
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5k
ZXYpOwotCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQgfHwgIW5ld19jcnRjX3N0YXRlLT5o
YXNfcHNyKQotCQlyZXR1cm4gMDsKLQotCS8qIEZJWE1FOiBVcGRhdGUgdGhpcyBmb3IgUFNSMiBp
ZiB3ZSBuZWVkIHRvIHdhaXQgZm9yIGlkbGUgKi8KLQlpZiAoUkVBRF9PTkNFKGRldl9wcml2LT5w
c3IucHNyMl9lbmFibGVkKSkKLQkJcmV0dXJuIDA7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKIAkvKgogCSAqIEZyb20gYnNwZWM6
IFBhbmVsIFNlbGYgUmVmcmVzaCAoQkRXKykKQEAgLTE0MDMsMzIgKzEzOTAsNjQgQEAgaW50IGlu
dGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdf
Y3J0Y19zdGF0ZSwKIAkgKiBleGl0IHRyYWluaW5nIHRpbWUgKyAxLjUgbXMgb2YgYXV4IGNoYW5u
ZWwgaGFuZHNoYWtlLiA1MCBtcyBpcwogCSAqIGRlZmVuc2l2ZSBlbm91Z2ggdG8gY292ZXIgZXZl
cnl0aGluZy4KIAkgKi8KLQogCXJldHVybiBfX2ludGVsX3dhaXRfZm9yX3JlZ2lzdGVyKCZkZXZf
cHJpdi0+dW5jb3JlLAotCQkJCQkgRURQX1BTUl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2Nv
ZGVyKSwKKwkJCQkJIEVEUF9QU1JfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksCiAJ
CQkJCSBFRFBfUFNSX1NUQVRVU19TVEFURV9NQVNLLAogCQkJCQkgRURQX1BTUl9TVEFUVVNfU1RB
VEVfSURMRSwgMiwgNTAsCiAJCQkJCSBvdXRfdmFsdWUpOwogfQogCi1zdGF0aWMgYm9vbCBfX3Bz
cl93YWl0X2Zvcl9pZGxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CisvKioKKyAqIGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxl
CisgKiBAbmV3X2NydGNfc3RhdGU6IG5ldyBDUlRDIHN0YXRlCisgKgorICogVGhpcyBmdW5jdGlv
biBpcyBleHBlY3RlZCB0byBiZSBjYWxsZWQgZnJvbSBwaXBlX3VwZGF0ZV9zdGFydCgpIHdoZXJl
IGl0IGlzCisgKiBub3QgZXhwZWN0ZWQgdG8gcmFjZSB3aXRoIFBTUiBlbmFibGUgb3IgZGlzYWJs
ZS4KKyAqLwordm9pZCBpbnRlbF9wc3Jfd2FpdF9mb3JfaWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShuZXdfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOworCXN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXUzMiBwc3Jfc3RhdHVzOworCisJaWYgKCFu
ZXdfY3J0Y19zdGF0ZS0+aGFzX3BzcikKKwkJcmV0dXJuOworCisJZm9yX2VhY2hfaW50ZWxfZHAo
JmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9
IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAoZW5jb2Rlci0+dHlwZSAhPSBJTlRF
TF9PVVRQVVRfRURQKQorCQkJY29udGludWU7CisKKwkJLyogd2hlbiB0aGUgUFNSMSBpcyBlbmFi
bGVkICovCisJCWlmIChpbnRlbF9kcC0+cHNyLmVuYWJsZWQgJiYgIWludGVsX2RwLT5wc3IucHNy
Ml9lbmFibGVkKSB7CisJCQlpZiAocHNyX3dhaXRfZm9yX2lkbGUoaW50ZWxfZHAsICZwc3Jfc3Rh
dHVzKSkKKwkJCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLAorCQkJCQkiUFNSIGlkbGUgdGltZWQg
b3V0IDB4JXgsIGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCisJCQkJCXBzcl9zdGF0dXMpOwor
CQl9CisJfQorfQorCitzdGF0aWMgYm9vbCBfX3Bzcl93YWl0X2Zvcl9pZGxlX2xvY2tlZChzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCWk5MTVfcmVnX3QgcmVnOwogCXUzMiBtYXNrOwog
CWludCBlcnI7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkx
NShpbnRlbF9kcCk7CiAKLQlpZiAoIWRldl9wcml2LT5wc3IuZW5hYmxlZCkKKwlpZiAoIWludGVs
X2RwLT5wc3IuZW5hYmxlZCkKIAkJcmV0dXJuIGZhbHNlOwogCi0JaWYgKGRldl9wcml2LT5wc3Iu
cHNyMl9lbmFibGVkKSB7Ci0JCXJlZyA9IEVEUF9QU1IyX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRy
YW5zY29kZXIpOworCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkgeworCQlyZWcgPSBF
RFBfUFNSMl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJbWFzayA9IEVEUF9Q
U1IyX1NUQVRVU19TVEFURV9NQVNLOwogCX0gZWxzZSB7Ci0JCXJlZyA9IEVEUF9QU1JfU1RBVFVT
KGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJCXJlZyA9IEVEUF9QU1JfU1RBVFVTKGludGVs
X2RwLT5wc3IudHJhbnNjb2Rlcik7CiAJCW1hc2sgPSBFRFBfUFNSX1NUQVRVU19TVEFURV9NQVNL
OwogCX0KIAotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF91bmxv
Y2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKIAllcnIgPSBpbnRlbF9kZV93YWl0X2Zvcl9jbGVh
cihkZXZfcHJpdiwgcmVnLCBtYXNrLCA1MCk7CiAJaWYgKGVycikKQEAgLTE0MzYsOCArMTQ1NSw4
IEBAIHN0YXRpYyBib29sIF9fcHNyX3dhaXRfZm9yX2lkbGVfbG9ja2VkKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdikKIAkJCSJUaW1lZCBvdXQgd2FpdGluZyBmb3IgUFNSIElkbGUg
Zm9yIHJlLWVuYWJsZVxuIik7CiAKIAkvKiBBZnRlciB0aGUgdW5sb2NrZWQgd2FpdCwgdmVyaWZ5
IHRoYXQgUFNSIGlzIHN0aWxsIHdhbnRlZCEgKi8KLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNy
LmxvY2spOwotCXJldHVybiBlcnIgPT0gMCAmJiBkZXZfcHJpdi0+cHNyLmVuYWJsZWQ7CisJbXV0
ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlyZXR1cm4gZXJyID09IDAgJiYgaW50ZWxf
ZHAtPnBzci5lbmFibGVkOwogfQogCiBzdGF0aWMgaW50IGludGVsX3Bzcl9mYXN0c2V0X2ZvcmNl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKQEAgLTE1MDMsMTEgKzE1MjIsMTIg
QEAgc3RhdGljIGludCBpbnRlbF9wc3JfZmFzdHNldF9mb3JjZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYpCiAJcmV0dXJuIGVycjsKIH0KIAotaW50IGludGVsX3Bzcl9kZWJ1Z19z
ZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQoraW50IGludGVs
X3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTY0IHZhbCkKIHsKIAlj
b25zdCB1MzIgbW9kZSA9IHZhbCAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSzsKIAl1MzIgb2xk
X21vZGU7CiAJaW50IHJldDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBk
cF90b19pOTE1KGludGVsX2RwKTsKIAogCWlmICh2YWwgJiB+KEk5MTVfUFNSX0RFQlVHX0lSUSB8
IEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSykgfHwKIAkgICAgbW9kZSA+IEk5MTVfUFNSX0RFQlVH
X0ZPUkNFX1BTUjEpIHsKQEAgLTE1MTUsMjEgKzE1MzUsMjEgQEAgaW50IGludGVsX3Bzcl9kZWJ1
Z19zZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQogCQlyZXR1
cm4gLUVJTlZBTDsKIAl9CiAKLQlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmRldl9w
cml2LT5wc3IubG9jayk7CisJcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZpbnRlbF9k
cC0+cHNyLmxvY2spOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlvbGRfbW9kZSA9IGRl
dl9wcml2LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0s7Ci0JZGV2X3ByaXYt
PnBzci5kZWJ1ZyA9IHZhbDsKKwlvbGRfbW9kZSA9IGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1
X1BTUl9ERUJVR19NT0RFX01BU0s7CisJaW50ZWxfZHAtPnBzci5kZWJ1ZyA9IHZhbDsKIAogCS8q
CiAJICogRG8gaXQgcmlnaHQgYXdheSBpZiBpdCdzIGFscmVhZHkgZW5hYmxlZCwgb3RoZXJ3aXNl
IGl0IHdpbGwgYmUgZG9uZQogCSAqIHdoZW4gZW5hYmxpbmcgdGhlIHNvdXJjZS4KIAkgKi8KLQlp
ZiAoZGV2X3ByaXYtPnBzci5lbmFibGVkKQotCQlwc3JfaXJxX2NvbnRyb2woZGV2X3ByaXYpOwor
CWlmIChpbnRlbF9kcC0+cHNyLmVuYWJsZWQpCisJCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7
CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZp
bnRlbF9kcC0+cHNyLmxvY2spOwogCiAJaWYgKG9sZF9tb2RlICE9IG1vZGUpCiAJCXJldCA9IGlu
dGVsX3Bzcl9mYXN0c2V0X2ZvcmNlKGRldl9wcml2KTsKQEAgLTE1MzcsMjggKzE1NTcsMjggQEAg
aW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
LCB1NjQgdmFsKQogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3Bzcl9oYW5k
bGVfaXJxKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGlu
dGVsX3Bzcl9oYW5kbGVfaXJxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0
IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3Ig
PSAmaW50ZWxfZHAtPnBzcjsKIAotCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChwc3ItPmRwKTsK
KwlpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoaW50ZWxfZHApOwogCXBzci0+c2lua19ub3RfcmVs
aWFibGUgPSB0cnVlOwogCS8qIGxldCdzIG1ha2Ugc3VyZSB0aGF0IHNpbmsgaXMgYXdha2VuICov
Ci0JZHJtX2RwX2RwY2Rfd3JpdGViKCZwc3ItPmRwLT5hdXgsIERQX1NFVF9QT1dFUiwgRFBfU0VU
X1BPV0VSX0QwKTsKKwlkcm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1NFVF9Q
T1dFUiwgRFBfU0VUX1BPV0VSX0QwKTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmso
c3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9Ci0JCWNvbnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKmRldl9wcml2KSwgcHNyLndv
cmspOworCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPQorCQljb250YWluZXJfb2Yod29yaywg
dHlwZW9mKCppbnRlbF9kcCksIHBzci53b3JrKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5w
c3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAotCWlmICghZGV2
X3ByaXYtPnBzci5lbmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQogCQlnb3Rv
IHVubG9jazsKIAotCWlmIChSRUFEX09OQ0UoZGV2X3ByaXYtPnBzci5pcnFfYXV4X2Vycm9yKSkK
LQkJaW50ZWxfcHNyX2hhbmRsZV9pcnEoZGV2X3ByaXYpOworCWlmIChSRUFEX09OQ0UoaW50ZWxf
ZHAtPnBzci5pcnFfYXV4X2Vycm9yKSkKKwkJaW50ZWxfcHNyX2hhbmRsZV9pcnEoaW50ZWxfZHAp
OwogCiAJLyoKIAkgKiBXZSBoYXZlIHRvIG1ha2Ugc3VyZSBQU1IgaXMgcmVhZHkgZm9yIHJlLWVu
YWJsZQpAQCAtMTU2Niw3ICsxNTg2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3Ry
dWN0IHdvcmtfc3RydWN0ICp3b3JrKQogCSAqIFBTUiBtaWdodCB0YWtlIHNvbWUgdGltZSB0byBn
ZXQgZnVsbHkgZGlzYWJsZWQKIAkgKiBhbmQgYmUgcmVhZHkgZm9yIHJlLWVuYWJsZS4KIAkgKi8K
LQlpZiAoIV9fcHNyX3dhaXRfZm9yX2lkbGVfbG9ja2VkKGRldl9wcml2KSkKKwlpZiAoIV9fcHNy
X3dhaXRfZm9yX2lkbGVfbG9ja2VkKGludGVsX2RwKSkKIAkJZ290byB1bmxvY2s7CiAKIAkvKgpA
QCAtMTU3NCwxMiArMTU5NCwxMiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jfd29yayhzdHJ1Y3Qg
d29ya19zdHJ1Y3QgKndvcmspCiAJICogcmVjaGVjay4gU2luY2UgcHNyX2ZsdXNoIGZpcnN0IGNs
ZWFycyB0aGlzIGFuZCB0aGVuIHJlc2NoZWR1bGVzIHdlCiAJICogd29uJ3QgZXZlciBtaXNzIGEg
Zmx1c2ggd2hlbiBiYWlsaW5nIG91dCBoZXJlLgogCSAqLwotCWlmIChkZXZfcHJpdi0+cHNyLmJ1
c3lfZnJvbnRidWZmZXJfYml0cyB8fCBkZXZfcHJpdi0+cHNyLmFjdGl2ZSkKKwlpZiAoaW50ZWxf
ZHAtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMgfHwgaW50ZWxfZHAtPnBzci5hY3RpdmUpCiAJ
CWdvdG8gdW5sb2NrOwogCi0JaW50ZWxfcHNyX2FjdGl2YXRlKGRldl9wcml2LT5wc3IuZHApOwor
CWludGVsX3Bzcl9hY3RpdmF0ZShpbnRlbF9kcCk7CiB1bmxvY2s6Ci0JbXV0ZXhfdW5sb2NrKCZk
ZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsK
IH0KIAogLyoqCkBAIC0xNTk4LDI3ICsxNjE4LDM1IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93
b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIHZvaWQgaW50ZWxfcHNyX2ludmFsaWRhdGUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICB1bnNpZ25lZCBmcm9udGJ1
ZmZlcl9iaXRzLCBlbnVtIGZiX29wX29yaWdpbiBvcmlnaW4pCiB7Ci0JaWYgKCFDQU5fUFNSKGRl
dl9wcml2KSkKLQkJcmV0dXJuOworCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHA7CiAKLQlpZiAob3JpZ2luID09IE9SSUdJTl9GTElQKQot
CQlyZXR1cm47CisJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsK
IAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JaWYgKCFkZXZfcHJpdi0+cHNy
LmVuYWJsZWQpIHsKLQkJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCQlyZXR1
cm47Ci0JfQorCQlpbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKwkJaWYgKGVu
Y29kZXItPnR5cGUgIT0gSU5URUxfT1VUUFVUX0VEUCkKKwkJCWNvbnRpbnVlOworCQlpZiAoIUNB
Tl9QU1IoaW50ZWxfZHApKQorCQkJY29udGludWU7CiAKLQlmcm9udGJ1ZmZlcl9iaXRzICY9IElO
VEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGRldl9wcml2LT5wc3IucGlwZSk7Ci0JZGV2X3ByaXYt
PnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMgfD0gZnJvbnRidWZmZXJfYml0czsKKwkJaWYgKG9y
aWdpbiA9PSBPUklHSU5fRkxJUCkKKwkJCWNvbnRpbnVlOworCisJCW11dGV4X2xvY2soJmludGVs
X2RwLT5wc3IubG9jayk7CisJCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKSB7CisJCQltdXRl
eF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCQljb250aW51ZTsKKwkJfQogCi0JaWYg
KGZyb250YnVmZmVyX2JpdHMpCi0JCWludGVsX3Bzcl9leGl0KGRldl9wcml2KTsKKwkJZnJvbnRi
dWZmZXJfYml0cyAmPSBJTlRFTF9GUk9OVEJVRkZFUl9BTExfTUFTSyhpbnRlbF9kcC0+cHNyLnBp
cGUpOworCQlpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyB8PSBmcm9udGJ1ZmZl
cl9iaXRzOwogCi0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotfQorCQlpZiAo
ZnJvbnRidWZmZXJfYml0cykKKwkJCWludGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIAorCQltdXRl
eF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJfQorfQogLyoKICAqIFdoZW4gd2Ugd2ls
bCBiZSBjb21wbGV0ZWx5IHJlbHkgb24gUFNSMiBTL1cgdHJhY2tpbmcgaW4gZnV0dXJlLAogICog
aW50ZWxfcHNyX2ZsdXNoKCkgd2lsbCBpbnZhbGlkYXRlIGFuZCBmbHVzaCB0aGUgUFNSIGZvciBP
UklHSU5fRkxJUApAQCAtMTYyNiwxNSArMTY1NCwxNSBAQCB2b2lkIGludGVsX3Bzcl9pbnZhbGlk
YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKICAqIGFjY29yZGluZ2x5IGlu
IGZ1dHVyZS4KICAqLwogc3RhdGljIHZvaWQKLXRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCi0JCXVuc2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzLCBl
bnVtIGZiX29wX29yaWdpbiBvcmlnaW4pCit0Z2xfZGMzY29fZmx1c2goc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwgdW5zaWduZWQgaW50IGZyb250YnVmZmVyX2JpdHMsCisJCWVudW0gZmJfb3Bf
b3JpZ2luIG9yaWdpbikKIHsKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11
dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKLQlpZiAoIWRldl9wcml2LT5wc3IuZGMz
Y29fZW5hYmxlZCkKKwlpZiAoIWludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCkKIAkJZ290byB1
bmxvY2s7CiAKLQlpZiAoIWRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkIHx8ICFkZXZfcHJpdi0+
cHNyLmFjdGl2ZSkKKwlpZiAoIWludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkIHx8ICFpbnRlbF9k
cC0+cHNyLmFjdGl2ZSkKIAkJZ290byB1bmxvY2s7CiAKIAkvKgpAQCAtMTY0MiwxNSArMTY3MCwx
NSBAQCB0Z2xfZGMzY29fZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAog
CSAqIHdoZW4gZGVsYXllZCB3b3JrIHNjaGVkdWxlcyB0aGF0IG1lYW5zIGRpc3BsYXkgaGFzIGJl
ZW4gaWRsZS4KIAkgKi8KIAlpZiAoIShmcm9udGJ1ZmZlcl9iaXRzICYKLQkgICAgSU5URUxfRlJP
TlRCVUZGRVJfQUxMX01BU0soZGV2X3ByaXYtPnBzci5waXBlKSkpCisJICAgIElOVEVMX0ZST05U
QlVGRkVSX0FMTF9NQVNLKGludGVsX2RwLT5wc3IucGlwZSkpKQogCQlnb3RvIHVubG9jazsKIAot
CXRnbF9wc3IyX2VuYWJsZV9kYzNjbyhkZXZfcHJpdik7Ci0JbW9kX2RlbGF5ZWRfd29yayhzeXN0
ZW1fd3EsICZkZXZfcHJpdi0+cHNyLmRjM2NvX3dvcmssCi0JCQkgZGV2X3ByaXYtPnBzci5kYzNj
b19leGl0X2RlbGF5KTsKKwl0Z2xfcHNyMl9lbmFibGVfZGMzY28oaW50ZWxfZHApOworCW1vZF9k
ZWxheWVkX3dvcmsoc3lzdGVtX3dxLCAmaW50ZWxfZHAtPnBzci5kYzNjb193b3JrLAorCQkJIGlu
dGVsX2RwLT5wc3IuZGMzY29fZXhpdF9kZWxheSk7CiAKIHVubG9jazoKLQltdXRleF91bmxvY2so
JmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2sp
OwogfQogCiAvKioKQEAgLTE2NjksNDUgKzE2OTcsNTQgQEAgdGdsX2RjM2NvX2ZsdXNoKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIHZvaWQgaW50ZWxfcHNyX2ZsdXNoKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJICAgICB1bnNpZ25lZCBmcm9udGJ1ZmZl
cl9iaXRzLCBlbnVtIGZiX29wX29yaWdpbiBvcmlnaW4pCiB7Ci0JaWYgKCFDQU5fUFNSKGRldl9w
cml2KSkKLQkJcmV0dXJuOwotCi0JaWYgKG9yaWdpbiA9PSBPUklHSU5fRkxJUCkgewotCQl0Z2xf
ZGMzY29fZmx1c2goZGV2X3ByaXYsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdpbik7Ci0JCXJldHVy
bjsKLQl9Ci0KLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCWlmICghZGV2X3By
aXYtPnBzci5lbmFibGVkKSB7Ci0JCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsK
LQkJcmV0dXJuOworCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOworCXN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHA7CisKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5j
b2RlcikgeworCQlpbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAo
ZW5jb2Rlci0+dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQICYmIENBTl9QU1IoaW50ZWxfZHApKSB7
CisJCQlpZiAob3JpZ2luID09IE9SSUdJTl9GTElQKSB7CisJCQkJdGdsX2RjM2NvX2ZsdXNoKGlu
dGVsX2RwLCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOworCQkJCWNvbnRpbnVlOworCQkJfQor
CisJCQltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOworCQkJaWYgKCFpbnRlbF9kcC0+
cHNyLmVuYWJsZWQpIHsKKwkJCQltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJ
CQkJY29udGludWU7CisJCQl9CisKKwkJCWZyb250YnVmZmVyX2JpdHMgJj0gSU5URUxfRlJPTlRC
VUZGRVJfQUxMX01BU0soaW50ZWxfZHAtPnBzci5waXBlKTsKKwkJCWludGVsX2RwLT5wc3IuYnVz
eV9mcm9udGJ1ZmZlcl9iaXRzICY9IH5mcm9udGJ1ZmZlcl9iaXRzOworCisJCQkvKiBCeSBkZWZp
bml0aW9uIGZsdXNoID0gaW52YWxpZGF0ZSArIGZsdXNoICovCisJCQlpZiAoZnJvbnRidWZmZXJf
Yml0cykKKwkJCQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChpbnRlbF9kcCk7CisKKwkJCWlm
ICghaW50ZWxfZHAtPnBzci5hY3RpdmUgJiYgIWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZl
cl9iaXRzKQorCQkJCXNjaGVkdWxlX3dvcmsoJmludGVsX2RwLT5wc3Iud29yayk7CisJCQltdXRl
eF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCX0KIAl9Ci0KLQlmcm9udGJ1ZmZlcl9i
aXRzICY9IElOVEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGRldl9wcml2LT5wc3IucGlwZSk7Ci0J
ZGV2X3ByaXYtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7
Ci0KLQkvKiBCeSBkZWZpbml0aW9uIGZsdXNoID0gaW52YWxpZGF0ZSArIGZsdXNoICovCi0JaWYg
KGZyb250YnVmZmVyX2JpdHMpCi0JCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0KGRldl9wcml2
KTsKLQotCWlmICghZGV2X3ByaXYtPnBzci5hY3RpdmUgJiYgIWRldl9wcml2LT5wc3IuYnVzeV9m
cm9udGJ1ZmZlcl9iaXRzKQotCQlzY2hlZHVsZV93b3JrKCZkZXZfcHJpdi0+cHNyLndvcmspOwot
CW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKIH0KIAogLyoqCiAgKiBpbnRlbF9w
c3JfaW5pdCAtIEluaXQgYmFzaWMgUFNSIHdvcmsgYW5kIG11dGV4LgotICogQGRldl9wcml2OiBp
OTE1IGRldmljZSBwcml2YXRlCisgKiBAaW50ZWxfZHA6IEludGVsIERQCiAgKgotICogVGhpcyBm
dW5jdGlvbiBpcyAgY2FsbGVkIG9ubHkgb25jZSBhdCBkcml2ZXIgbG9hZCB0byBpbml0aWFsaXpl
IGJhc2ljCi0gKiBQU1Igc3R1ZmYuCisgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZnRlciB0
aGUgaW5pdGlhbGl6aW5nIGNvbm5lY3Rvci4KKyAqICh0aGUgaW5pdGlhbGl6aW5nIG9mIGNvbm5l
Y3RvciB0cmVhdHMgdGhlIGhhbmRsaW5nIG9mIGNvbm5lY3RvciBjYXBhYmlsaXRpZXMpCisgKiBB
bmQgaXQgaW5pdGlhbGl6ZXMgYmFzaWMgUFNSIHN0dWZmIGZvciBlYWNoIERQIEVuY29kZXIuCiAg
Ki8KLXZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQordm9pZCBpbnRlbF9wc3JfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwor
CiAJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKIAkJcmV0dXJuOwogCi0JaWYgKCFkZXZfcHJpdi0+
cHNyLnNpbmtfc3VwcG9ydCkKKwlpZiAoIWludGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0KQogCQly
ZXR1cm47CiAKIAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikpCkBAIC0xNzI1LDE0ICsxNzYyLDE0
IEBAIHZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogCS8qIFNldCBsaW5rX3N0YW5kYnkgeCBsaW5rX29mZiBkZWZhdWx0cyAqLwogCWlmIChJU19I
QVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQkvKiBIU1cgYW5k
IEJEVyByZXF1aXJlIHdvcmthcm91bmRzIHRoYXQgd2UgZG9uJ3QgaW1wbGVtZW50LiAqLwotCQlk
ZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRieSA9IGZhbHNlOworCQlpbnRlbF9kcC0+cHNyLmxpbmtf
c3RhbmRieSA9IGZhbHNlOwogCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMikKIAkJ
LyogRm9yIG5ldyBwbGF0Zm9ybXMgdXAgdG8gVEdMIGxldCdzIHJlc3BlY3QgVkJUIGJhY2sgYWdh
aW4gKi8KLQkJZGV2X3ByaXYtPnBzci5saW5rX3N0YW5kYnkgPSBkZXZfcHJpdi0+dmJ0LnBzci5m
dWxsX2xpbms7CisJCWludGVsX2RwLT5wc3IubGlua19zdGFuZGJ5ID0gZGV2X3ByaXYtPnZidC5w
c3IuZnVsbF9saW5rOwogCi0JSU5JVF9XT1JLKCZkZXZfcHJpdi0+cHNyLndvcmssIGludGVsX3Bz
cl93b3JrKTsKLQlJTklUX0RFTEFZRURfV09SSygmZGV2X3ByaXYtPnBzci5kYzNjb193b3JrLCB0
Z2xfZGMzY29fZGlzYWJsZV93b3JrKTsKLQltdXRleF9pbml0KCZkZXZfcHJpdi0+cHNyLmxvY2sp
OworCUlOSVRfV09SSygmaW50ZWxfZHAtPnBzci53b3JrLCBpbnRlbF9wc3Jfd29yayk7CisJSU5J
VF9ERUxBWUVEX1dPUksoJmludGVsX2RwLT5wc3IuZGMzY29fd29yaywgdGdsX2RjM2NvX2Rpc2Fi
bGVfd29yayk7CisJbXV0ZXhfaW5pdCgmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogc3RhdGlj
IGludCBwc3JfZ2V0X3N0YXR1c19hbmRfZXJyb3Jfc3RhdHVzKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsCkBAIC0xNzU4LDcgKzE3OTUsNyBAQCBzdGF0aWMgdm9pZCBwc3JfYWxwbV9jaGVjayhz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZHBfYXV4ICphdXgg
PSAmaW50ZWxfZHAtPmF1eDsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNy
OworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4IHZhbDsKIAlp
bnQgcjsKIApAQCAtMTc4NSw3ICsxODIyLDcgQEAgc3RhdGljIHZvaWQgcHNyX2FscG1fY2hlY2so
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHN0YXRpYyB2b2lkIHBzcl9jYXBhYmlsaXR5X2No
YW5nZWRfY2hlY2soc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgaTkx
NV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZp
bnRlbF9kcC0+cHNyOwogCXU4IHZhbDsKIAlpbnQgcjsKIApAQCAtMTgwOSwxOCArMTg0NiwxOCBA
QCBzdGF0aWMgdm9pZCBwc3JfY2FwYWJpbGl0eV9jaGFuZ2VkX2NoZWNrKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiB2b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3Rv
X2k5MTUoaW50ZWxfZHApOwotCXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRldl9wcml2LT5wc3I7
CisJc3RydWN0IGludGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7CiAJdTggc3RhdHVzLCBl
cnJvcl9zdGF0dXM7CiAJY29uc3QgdTggZXJyb3JzID0gRFBfUFNSX1JGQl9TVE9SQUdFX0VSUk9S
IHwKIAkJCSAgRFBfUFNSX1ZTQ19TRFBfVU5DT1JSRUNUQUJMRV9FUlJPUiB8CiAJCQkgIERQX1BT
Ul9MSU5LX0NSQ19FUlJPUjsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwgIWludGVsX2Rw
X2lzX2VkcChpbnRlbF9kcCkpCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSB8fCAhaW50ZWxfZHBf
aXNfZWRwKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCiAJbXV0ZXhfbG9jaygmcHNyLT5sb2NrKTsK
IAotCWlmICghcHNyLT5lbmFibGVkIHx8IHBzci0+ZHAgIT0gaW50ZWxfZHApCisJaWYgKCFwc3It
PmVuYWJsZWQpCiAJCWdvdG8gZXhpdDsKIAogCWlmIChwc3JfZ2V0X3N0YXR1c19hbmRfZXJyb3Jf
c3RhdHVzKGludGVsX2RwLCAmc3RhdHVzLCAmZXJyb3Jfc3RhdHVzKSkgewpAQCAtMTg2MywxNSAr
MTkwMCwxNCBAQCB2b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogCiBib29sIGludGVsX3Bzcl9lbmFibGVkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHApCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShp
bnRlbF9kcCk7CiAJYm9vbCByZXQ7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8ICFpbnRl
bF9kcF9pc19lZHAoaW50ZWxfZHApKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkgfHwgIWludGVs
X2RwX2lzX2VkcChpbnRlbF9kcCkpCiAJCXJldHVybiBmYWxzZTsKIAotCW11dGV4X2xvY2soJmRl
dl9wcml2LT5wc3IubG9jayk7Ci0JcmV0ID0gKGRldl9wcml2LT5wc3IuZHAgPT0gaW50ZWxfZHAg
JiYgZGV2X3ByaXYtPnBzci5lbmFibGVkKTsKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3Iu
bG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlyZXQgPSBpbnRlbF9k
cC0+cHNyLmVuYWJsZWQ7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJ
cmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfcHNyLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oCmlu
ZGV4IDBhNTE3OTc4ZThhZi4uMDNlYjE5NTQ3ZDA5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfcHNyLmgKQEAgLTE4LDcgKzE4LDcgQEAgc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZTsKIHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZTsKIHN0cnVjdCBpbnRlbF9wbGFuZTsKIAot
I2RlZmluZSBDQU5fUFNSKGRldl9wcml2KSAoSEFTX1BTUihkZXZfcHJpdikgJiYgZGV2X3ByaXYt
PnBzci5zaW5rX3N1cHBvcnQpCisjZGVmaW5lIENBTl9QU1IoaW50ZWxfZHApIChIQVNfUFNSKGRw
X3RvX2k5MTUoaW50ZWxfZHApKSAmJiBpbnRlbF9kcC0+cHNyLnNpbmtfc3VwcG9ydCkKIHZvaWQg
aW50ZWxfcHNyX2luaXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZvaWQgaW50
ZWxfcHNyX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKQEAgLTI4LDI0ICsyOCwyNCBAQCB2
b2lkIGludGVsX3Bzcl9kaXNhYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiB2b2lkIGlu
dGVsX3Bzcl91cGRhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJICAgICAgY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCSAgICAgIGNvbnN0IHN0cnVj
dCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKTsKLWludCBpbnRlbF9wc3JfZGVidWdf
c2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTY0IHZhbHVlKTsKK2ludCBp
bnRlbF9wc3JfZGVidWdfc2V0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHU2NCB2YWx1ZSk7
CiB2b2lkIGludGVsX3Bzcl9pbnZhbGlkYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwKIAkJCSAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0cywKIAkJCSAgZW51bSBmYl9vcF9v
cmlnaW4gb3JpZ2luKTsKIHZvaWQgaW50ZWxfcHNyX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJICAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLAogCQkgICAg
IGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbik7Ci12b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Cit2b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApOwogdm9pZCBpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKIAkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKTsKLXZvaWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwgdTMyIHBzcl9paXIpOwordm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRs
ZXIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTMyIHBzcl9paXIpOwogdm9pZCBpbnRlbF9w
c3Jfc2hvcnRfcHVsc2Uoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Ci1pbnQgaW50ZWxfcHNy
X3dhaXRfZm9yX2lkbGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0
YXRlLAotCQkJICAgIHUzMiAqb3V0X3ZhbHVlKTsKK3ZvaWQgaW50ZWxfcHNyX3dhaXRfZm9yX2lk
bGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlKTsKIGJvb2wg
aW50ZWxfcHNyX2VuYWJsZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CiBpbnQgaW50ZWxf
cHNyMl9zZWxfZmV0Y2hfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAog
CQkJCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKLXZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3Ry
YW5zX21hbl90cmtfY3RsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KTsKK3ZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCisJCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpOwogdm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVj
dCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAogCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5l
X3N0YXRlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9z
cHJpdGUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKaW5k
ZXggYjdlMjA4ODE2MDc0Li45NDgyMzRjNjA2NDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9zcHJpdGUuYwpAQCAtODQsNyArODQsNiBAQCB2b2lkIGludGVsX3BpcGVf
dXBkYXRlX3N0YXJ0KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0
ZSkKIAlib29sIG5lZWRfdmx2X2RzaV93YSA9IChJU19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJ
U19DSEVSUllWSUVXKGRldl9wcml2KSkgJiYKIAkJaW50ZWxfY3J0Y19oYXNfdHlwZShuZXdfY3J0
Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0RTSSk7CiAJREVGSU5FX1dBSVQod2FpdCk7Ci0JdTMyIHBz
cl9zdGF0dXM7CiAKIAlpZiAobmV3X2NydGNfc3RhdGUtPnVhcGkuYXN5bmNfZmxpcCkKIAkJcmV0
dXJuOwpAQCAtMTA5LDEwICsxMDgsNyBAQCB2b2lkIGludGVsX3BpcGVfdXBkYXRlX3N0YXJ0KGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSkKIAkgKiBWQkwgaW50
ZXJydXB0cyB3aWxsIHN0YXJ0IHRoZSBQU1IgZXhpdCBhbmQgcHJldmVudCBhIFBTUgogCSAqIHJl
LWVudHJ5IGFzIHdlbGwuCiAJICovCi0JaWYgKGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKG5ld19j
cnRjX3N0YXRlLCAmcHNyX3N0YXR1cykpCi0JCWRybV9lcnIoJmRldl9wcml2LT5kcm0sCi0JCQki
UFNSIGlkbGUgdGltZWQgb3V0IDB4JXgsIGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCi0JCQlw
c3Jfc3RhdHVzKTsKKwlpbnRlbF9wc3Jfd2FpdF9mb3JfaWRsZShuZXdfY3J0Y19zdGF0ZSk7CiAK
IAlsb2NhbF9pcnFfZGlzYWJsZSgpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCA1ZDA0
YjI4MmMwNjAuLmEyZTM5ZThhZGNiZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC00NzUs
NDIgKzQ3NSw2IEBAIHN0cnVjdCBpOTE1X2RycnMgewogCWVudW0gZHJyc19zdXBwb3J0X3R5cGUg
dHlwZTsKIH07CiAKLXN0cnVjdCBpOTE1X3BzciB7Ci0Jc3RydWN0IG11dGV4IGxvY2s7Ci0KLSNk
ZWZpbmUgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLCTB4MGYKLSNkZWZpbmUgSTkxNV9QU1JfREVC
VUdfREVGQVVMVAkJMHgwMAotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFCQkweDAxCi0j
ZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0VOQUJMRQkJMHgwMgotI2RlZmluZSBJOTE1X1BTUl9ERUJV
R19GT1JDRV9QU1IxCTB4MDMKLSNkZWZpbmUgSTkxNV9QU1JfREVCVUdfSVJRCQkweDEwCi0KLQl1
MzIgZGVidWc7Ci0JYm9vbCBzaW5rX3N1cHBvcnQ7Ci0JYm9vbCBlbmFibGVkOwotCXN0cnVjdCBp
bnRlbF9kcCAqZHA7Ci0JZW51bSBwaXBlIHBpcGU7Ci0JZW51bSB0cmFuc2NvZGVyIHRyYW5zY29k
ZXI7Ci0JYm9vbCBhY3RpdmU7Ci0Jc3RydWN0IHdvcmtfc3RydWN0IHdvcms7Ci0JdW5zaWduZWQg
YnVzeV9mcm9udGJ1ZmZlcl9iaXRzOwotCWJvb2wgc2lua19wc3IyX3N1cHBvcnQ7Ci0JYm9vbCBs
aW5rX3N0YW5kYnk7Ci0JYm9vbCBjb2xvcmltZXRyeV9zdXBwb3J0OwotCWJvb2wgcHNyMl9lbmFi
bGVkOwotCWJvb2wgcHNyMl9zZWxfZmV0Y2hfZW5hYmxlZDsKLQl1OCBzaW5rX3N5bmNfbGF0ZW5j
eTsKLQlrdGltZV90IGxhc3RfZW50cnlfYXR0ZW1wdDsKLQlrdGltZV90IGxhc3RfZXhpdDsKLQli
b29sIHNpbmtfbm90X3JlbGlhYmxlOwotCWJvb2wgaXJxX2F1eF9lcnJvcjsKLQl1MTYgc3VfeF9n
cmFudWxhcml0eTsKLQlib29sIGRjM2NvX2VuYWJsZWQ7Ci0JdTMyIGRjM2NvX2V4aXRfZGVsYXk7
Ci0Jc3RydWN0IGRlbGF5ZWRfd29yayBkYzNjb193b3JrOwotCXN0cnVjdCBkcm1fZHBfdnNjX3Nk
cCB2c2M7Ci19OwotCiAjZGVmaW5lIFFVSVJLX0xWRFNfU1NDX0RJU0FCTEUgKDE8PDEpCiAjZGVm
aW5lIFFVSVJLX0lOVkVSVF9CUklHSFRORVNTICgxPDwyKQogI2RlZmluZSBRVUlSS19CQUNLTElH
SFRfUFJFU0VOVCAoMTw8MykKQEAgLTEwNDEsOCArMTAwNSw2IEBAIHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlIHsKIAogCXN0cnVjdCBpOTE1X3Bvd2VyX2RvbWFpbnMgcG93ZXJfZG9tYWluczsKIAot
CXN0cnVjdCBpOTE1X3BzciBwc3I7Ci0KIAlzdHJ1Y3QgaTkxNV9ncHVfZXJyb3IgZ3B1X2Vycm9y
OwogCiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKnZsdl9wY3R4OwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfaXJxLmMKaW5kZXggNDkxZjgyNTAwZDY4Li44NTQ2Nzg2NTIxYjUgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9pcnEuYwpAQCAtMjA0NCwxMCArMjA0NCwyMiBAQCBzdGF0aWMgdm9pZCBpdmJfZGlzcGxh
eV9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCWl2Yl9l
cnJfaW50X2hhbmRsZXIoZGV2X3ByaXYpOwogCiAJaWYgKGRlX2lpciAmIERFX0VEUF9QU1JfSU5U
X0hTVykgewotCQl1MzIgcHNyX2lpciA9IGludGVsX3VuY29yZV9yZWFkKCZkZXZfcHJpdi0+dW5j
b3JlLCBFRFBfUFNSX0lJUik7CisJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0J
CWludGVsX3Bzcl9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcHNyX2lpcik7Ci0JCWludGVsX3VuY29y
ZV93cml0ZSgmZGV2X3ByaXYtPnVuY29yZSwgRURQX1BTUl9JSVIsIHBzcl9paXIpOworCQlmb3Jf
ZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQkJaWYgKGVuY29k
ZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCAmJgorCQkJICAgIENBTl9QU1IoaW50ZWxfZHAp
KSB7CisJCQkJdTMyIHBzcl9paXIgPSBpbnRlbF91bmNvcmVfcmVhZCgmZGV2X3ByaXYtPnVuY29y
ZSwKKwkJCQkJCQkJRURQX1BTUl9JSVIpOworCisJCQkJaW50ZWxfcHNyX2lycV9oYW5kbGVyKGlu
dGVsX2RwLCBwc3JfaWlyKTsKKwkJCQlpbnRlbF91bmNvcmVfd3JpdGUoJmRldl9wcml2LT51bmNv
cmUsCisJCQkJCQkgICBFRFBfUFNSX0lJUiwgcHNyX2lpcik7CisJCQkJYnJlYWs7CisJCQl9CisJ
CX0KIAl9CiAKIAlpZiAoZGVfaWlyICYgREVfQVVYX0NIQU5ORUxfQV9JVkIpCkBAIC0yMjU1LDIx
ICsyMjY3LDM0IEBAIGdlbjhfZGVfbWlzY19pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsIHUzMiBpaXIpCiAJfQogCiAJaWYgKGlpciAmIEdFTjhfREVfRURQX1BT
UikgeworCQlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAkJdTMyIHBzcl9paXI7CiAJ
CWk5MTVfcmVnX3QgaWlyX3JlZzsKIAotCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikK
LQkJCWlpcl9yZWcgPSBUUkFOU19QU1JfSUlSKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7Ci0J
CWVsc2UKLQkJCWlpcl9yZWcgPSBFRFBfUFNSX0lJUjsKKwkJZm9yX2VhY2hfaW50ZWxfZHAoJmRl
dl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBl
bmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CiAKLQkJcHNyX2lpciA9IGludGVsX3VuY29yZV9yZWFk
KCZkZXZfcHJpdi0+dW5jb3JlLCBpaXJfcmVnKTsKLQkJaW50ZWxfdW5jb3JlX3dyaXRlKCZkZXZf
cHJpdi0+dW5jb3JlLCBpaXJfcmVnLCBwc3JfaWlyKTsKKwkJCWlmIChJTlRFTF9HRU4oZGV2X3By
aXYpID49IDEyICYmIENBTl9QU1IoaW50ZWxfZHApKSB7CisJCQkJaWlyX3JlZyA9IFRSQU5TX1BT
Ul9JSVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKKwkJCX0gZWxzZSBpZiAoZW5jb2Rlci0+
dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQICYmCisJCQkJICAgQ0FOX1BTUihpbnRlbF9kcCkpIHsK
KwkJCQlpaXJfcmVnID0gRURQX1BTUl9JSVI7CisJCQl9IGVsc2UgeworCQkJCWNvbnRpbnVlOwor
CQkJfQorCisJCQlwc3JfaWlyID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRldl9wcml2LT51bmNvcmUs
IGlpcl9yZWcpOworCQkJaW50ZWxfdW5jb3JlX3dyaXRlKCZkZXZfcHJpdi0+dW5jb3JlLCBpaXJf
cmVnLCBwc3JfaWlyKTsKKworCQkJaWYgKHBzcl9paXIpCisJCQkJZm91bmQgPSB0cnVlOwogCi0J
CWlmIChwc3JfaWlyKQotCQkJZm91bmQgPSB0cnVlOworCQkJaW50ZWxfcHNyX2lycV9oYW5kbGVy
KGludGVsX2RwLCBwc3JfaWlyKTsKIAotCQlpbnRlbF9wc3JfaXJxX2hhbmRsZXIoZGV2X3ByaXYs
IHBzcl9paXIpOworCQkJLyogcHJpb3IgR0VOMTIgb25seSBoYXZlIG9uZSBFRFAgUFNSICovCisJ
CQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDEyKQorCQkJCWJyZWFrOworCQl9CiAJfQogCiAJ
aWYgKCFmb3VuZCkKLS0gCjIuMjUuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4Cg==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 41E9E106B66
	for <lists+intel-gfx@lfdr.de>; Fri, 22 Nov 2019 11:44:09 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6474E6F520;
	Fri, 22 Nov 2019 10:44:07 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CA8436F50F
 for <intel-gfx@lists.freedesktop.org>; Fri, 22 Nov 2019 10:44:05 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19298327-1500050 
 for multiple; Fri, 22 Nov 2019 10:43:51 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 22 Nov 2019 10:43:49 +0000
Message-Id: <20191122104349.630145-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191120093302.3723715-6-chris@chris-wilson.co.uk>
References: <20191120093302.3723715-6-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/selftests: Force bonded submission to
 overlap
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Qm9uZGVkIHJlcXVlc3Qgc3VibWlzc2lvbiBpcyBkZXNpZ25lZCB0byBhbGxvdyByZXF1ZXN0cyB0
byBleGVjdXRlIGluCnBhcmFsbGVsIGFzIGxhaWQgb3V0IGJ5IHRoZSB1c2VyLiBJZiB0aGUgbWFz
dGVyIHJlcXVlc3QgaXMgYWxyZWFkeQpmaW5pc2hlZCBiZWZvcmUgaXRzIGJvbmRlZCBwYWlyIGlz
IHN1Ym1pdHRlZCwgdGhlIHBhaXIgd2VyZSBub3QgZGVzdGluZWQKdG8gcnVuIGluIHBhcmFsbGVs
IGFuZCB3ZSBsb3NlIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbWFzdGVyIGVuZ2luZQp0byBk
aWN0YXRlIHNlbGVjdGlvbiBvZiB0aGUgc2Vjb25kYXJ5LiBJZiB0aGUgc2Vjb25kIHJlcXVlc3Qg
d2FzCnJlcXVpcmVkIHRvIGJlIHJ1biBvbiBhIHBhcnRpY3VsYXIgZW5naW5lIGluIGEgdmlydHVh
bCBzZXQsIHRoYXQgc2hvdWxkCmhhdmUgYmVlbiBzcGVjaWZpZWQsIHJhdGhlciB0aGFuIGxlZnQg
dG8gdGhlIHdoaW1zIG9mIGEgcmFuZG9tCnVuY29ubmVjdGVkIHJlcXVlc3RzIQoKSW4gdGhlIHNl
bGZ0ZXN0LCBJIG1hZGUgdGhlIG1pc3Rha2Ugb2Ygbm90IGVuc3VyaW5nIHRoZSBtYXN0ZXIgd291
bGQKb3ZlcmxhcCB3aXRoIGl0cyBib25kZWQgcGFpcnMsIG1lYW5pbmcgdGhhdCBpdCBjb3VsZCBp
bmRlZWQgY29tcGxldGUKYmVmb3JlIHdlIHN1Ym1pdHRlZCB0aGUgYm9uZHMuIFRob3NlIGJvbmRz
IHdlcmUgdGhlbiBmcmVlIHRvIHNlbGVjdCBhbnkKYXZhaWxhYmxlIGVuZ2luZSBpbiB0aGVpciB2
aXJ0dWFsIHNldCwgYW5kIG5vdCB0aGUgb25lIGV4cGVjdGVkIGJ5IHRoZQp0ZXN0LgoKU2lnbmVk
LW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBUdnJ0
a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jIHwgNjIgKysrKysrKysrKysrKysrKysrKysrKysrLS0K
IDEgZmlsZSBjaGFuZ2VkLCA1OSBpbnNlcnRpb25zKCspLCAzIGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKaW5kZXggMmJhZWVkZDU5NTNmLi5lMGVhOTMw
YmVlMTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCkBAIC0zMDgxLDE1
ICszMDgxLDYwIEBAIHN0YXRpYyBpbnQgYm9uZF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxf
Z3QgKmd0LAogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7CiAJc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnFbMTZdOwogCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0cnVjdCBpZ3Rfc3Bp
bm5lciBzcGluOwogCXVuc2lnbmVkIGxvbmcgbjsKIAlpbnQgZXJyOwogCisJLyoKKwkgKiBBIHNl
dCBvZiBib25kZWQgcmVxdWVzdHMgaXMgaW50ZW5kZWQgdG8gYmUgcnVuIGNvbmN1cnJlbnRseQor
CSAqIGFjcm9zcyBhIG51bWJlciBvZiBlbmdpbmVzLiBXZSB1c2Ugb25lIHJlcXVlc3QgcGVyLWVu
Z2luZQorCSAqIGFuZCBhIG1hZ2ljIGZlbmNlIHRvIHNjaGVkdWxlIGVhY2ggb2YgdGhlIGJvbmRl
ZCByZXF1ZXN0cworCSAqIGF0IHRoZSBzYW1lIHRpbWUuIEEgY29uc2VxdWVuY2Ugb2Ygb3VyIGN1
cnJlbnRseSBzY2hlZHVsZXIKKwkgKiBpcyB0aGF0IHdlIG9ubHkgbW92ZSByZXF1ZXN0cyB0byB0
aGUgSFcgcmVhZHkgcXVldWUgd2hlbgorCSAqIHRoZSByZXF1ZXN0IGJlY29tZXMgcmVhZHksIHRo
YXQgaXMgd2hlbiBhbGwgb2YgaXRzIHByZXJlcXVpc2l0ZQorCSAqIGZlbmNlcyBoYXZlIGJlZW4g
c2lnbmFsZWQuIEFzIG9uZSBvZiB0aG9zZSBmZW5jZXMgaXMgdGhlIG1hc3RlcgorCSAqIHN1Ym1p
dCBmZW5jZSwgdGhlcmUgaXMgYSBkZWxheSBvbiBhbGwgc2Vjb25kYXJ5IGZlbmNlcyBhcyB0aGUK
KwkgKiBIVyBtYXkgYmUgY3VycmVudGx5IGJ1c3kuIEVxdWFsbHksIGFzIGFsbCB0aGUgcmVxdWVz
dHMgYXJlCisJICogaW5kZXBlbmRlbnQsIHRoZXkgbWF5IGhhdmUgb3RoZXIgZmVuY2VzIHRoYXQg
ZGVsYXkgaW5kaXZpZHVhbAorCSAqIHJlcXVlc3Qgc3VibWlzc2lvbiB0byBIVy4gRXJnbywgd2Ug
ZG8gbm90IGd1YXJhbnRlZSB0aGF0CisJICogYWxsIHJlcXVlc3RzIGFyZSBpbW1lZGlhdGVseSBz
dWJtaXR0ZWQgdG8gSFcgYXQgdGhlIHNhbWUgdGltZSwKKwkgKiBqdXN0IHRoYXQgaWYgdGhlIHJ1
bGVzIGFyZSBhYmlkZWQgYnksIHRoZXkgYXJlIHJlYWR5IGF0IHRoZQorCSAqIHNhbWUgdGltZSBh
cyB0aGUgZmlyc3QgaXMgc3VibWl0dGVkLiBVc2Vyc3BhY2UgY2FuIGVtYmVkIHNlbWFwaG9yZXMK
KwkgKiBpbiBpdHMgYmF0Y2ggdG8gZW5zdXJlIHBhcmFsbGVsIGV4ZWN1dGlvbiBvZiBwaGFzZXMg
YXMgaXQgcmVxdWlyZXMuCisJICogVGhvdWdoIG5hdHVyYWxseSBpdCBnZXRzIHJlcXVlc3RlZCB0
aGF0IHBlcmhhcHMgdGhlIHNjaGVkdWxlciBzaG91bGQKKwkgKiB0YWtlIGNhcmUgb2YgcGFyYWxs
ZWwgZXhlY3V0aW9uLCBldmVuIGFjcm9zcyBwcmVlbXB0aW9uIGV2ZW50cworCSAqIG9uIGRpZmZl
cmVudCBIVy4gKFRoZSBwcm9wZXIgYW5zd2VyIGlzIG9mIGNvdXJzZSAibGFsYWxhbGEiLikKKwkg
KgorCSAqIFdpdGggdGhlIHN1Ym1pdC1mZW5jZSwgd2UgaGF2ZSBpZGVudGlmaWVkIHRocmVlIHBv
c3NpYmxlIHBoYXNlcworCSAqIG9mIHN5bmNocm9uaXNhdGlvbiBkZXBlbmRpbmcgb24gdGhlIG1h
c3RlciBmZW5jZTogcXVldWVkIChub3QKKwkgKiByZWFkeSksIHJlYWR5IG9yIGV4ZWN1dGluZywg
c2lnbmFsZWQuIFRoZSBmaXJzdCB0d28gYXJlIHF1aXRlCisJICogc2ltcGxlIGFuZCBjaGVja2Vk
IGJlbG93LiBIb3dldmVyLCB0aGUgc2lnbmFsZWQgbWFzdGVyIGZlbmNlCisJICogaGFuZGxpbmcg
aXMgY29udGVudGlvdXMuIEN1cnJlbnRseSB3ZSBkbyBub3QgZGlzdGluZ3Vpc2ggYmV0d2Vlbgor
CSAqIGEgc2lnbmFsZWQgZmVuY2UgYW5kIGFuIGV4cGlyZWQgZmVuY2UsIGFzIG9uY2Ugc2lnbmFs
ZWQgaXQgZG9lcworCSAqIG5vdCBjb252ZXkgYW55IGluZm9ybWF0aW9uIGFib3V0IHRoZSBwcmV2
aW91cyBleGVjdXRpb24sIGl0IG1heQorCSAqIGJlIGZyZWVkIGFuZCBoZW5jZSBjaGVja2luZyBs
YXRlciBpdCBtYXkgbm90IGV4aXN0IGF0IGFsbC4gRXJnbworCSAqIHdlIGN1cnJlbnRseSBkbyBu
b3QgYXBwbHkgdGhlIGJvbmRpbmcgY29uc3RyYWludCBmb3IgYW4gYWxyZWFkeQorCSAqIHNpZ25h
bGVkIGZlbmNlLCBhcyBvdXIgZXhwZWN0YXRpb24gaXMgdGhhdCBpdCBzaG91bGQgbm90IGNvbnN0
cmFpbgorCSAqIHRoZSBzZWNvbmRhcmllcyBhbmQgaXMgb3V0c2lkZSBvZiB0aGUgc2NvcGUgb2Yg
dGhlIGJvbmRlZCByZXF1ZXN0CisJICogQVBJIChpLmUuIGFsbCByZXF1ZXN0cyBhcmUgbWVhbnQg
dG8gYmUgcnVubmluZyBpbiBwYXJhbGxlbCkuIEFzCisJICogaXQgaW1wb3NlcyBubyBjb25zdHJh
aW50LCBhbmQgaXMgZWZmZWN0aXZlbHkgYSBuby1vcCwgd2UgZG8gbm90CisJICogY2hlY2sgYmVs
b3cgYXMgbm9ybWFsIGV4ZWN1dGlvbiBmbG93cyBhcmUgY2hlY2tlZCBleHRlbnNpdmVseSBhYm92
ZS4KKwkgKgorCSAqIFhYWCBJcyB0aGUgZGVnZW5lcmF0ZSBoYW5kbGluZyBvZiBzaWduYWxlZCBz
dWJtaXQgZmVuY2VzIHRoZQorCSAqIGV4cGVjdGVkIGJlaGF2aW91ciBmb3IgdXNlcnBhY2U/CisJ
ICovCisKIAlHRU1fQlVHX09OKG5zaWJsaW5nID49IEFSUkFZX1NJWkUocnEpIC0gMSk7CiAKLQlj
dHggPSBrZXJuZWxfY29udGV4dChndC0+aTkxNSk7Ci0JaWYgKCFjdHgpCisJaWYgKGlndF9zcGlu
bmVyX2luaXQoJnNwaW4sIGd0KSkKIAkJcmV0dXJuIC1FTk9NRU07CiAKKwljdHggPSBrZXJuZWxf
Y29udGV4dChndC0+aTkxNSk7CisJaWYgKCFjdHgpIHsKKwkJZXJyID0gLUVOT01FTTsKKwkJZ290
byBlcnJfc3BpbjsKKwl9CisKIAllcnIgPSAwOwogCXJxWzBdID0gRVJSX1BUUigtRU5PTUVNKTsK
IAlmb3JfZWFjaF9lbmdpbmUobWFzdGVyLCBndCwgaWQpIHsKQEAgLTMxMDAsNyArMzE0NSw3IEBA
IHN0YXRpYyBpbnQgYm9uZF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAogCiAJ
CW1lbXNldF9wKCh2b2lkICopcnEsIEVSUl9QVFIoLUVJTlZBTCksIEFSUkFZX1NJWkUocnEpKTsK
IAotCQlycVswXSA9IGlndF9yZXF1ZXN0X2FsbG9jKGN0eCwgbWFzdGVyKTsKKwkJcnFbMF0gPSBz
cGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZzcGluLCBjdHgsIG1hc3RlciwgTUlfTk9PUCk7CiAJCWlm
IChJU19FUlIocnFbMF0pKSB7CiAJCQllcnIgPSBQVFJfRVJSKHJxWzBdKTsKIAkJCWdvdG8gb3V0
OwpAQCAtMzExMywxMCArMzE1OCwxNyBAQCBzdGF0aWMgaW50IGJvbmRfdmlydHVhbF9lbmdpbmUo
c3RydWN0IGludGVsX2d0ICpndCwKIAkJCQkJCQkgICAgICAgJmZlbmNlLAogCQkJCQkJCSAgICAg
ICBHRlBfS0VSTkVMKTsKIAkJfQorCiAJCWk5MTVfcmVxdWVzdF9hZGQocnFbMF0pOwogCQlpZiAo
ZXJyIDwgMCkKIAkJCWdvdG8gb3V0OwogCisJCWlmICghKGZsYWdzICYgQk9ORF9TQ0hFRFVMRSkg
JiYKKwkJICAgICFpZ3Rfd2FpdF9mb3Jfc3Bpbm5lcigmc3BpbiwgcnFbMF0pKSB7CisJCQllcnIg
PSAtRUlPOworCQkJZ290byBvdXQ7CisJCX0KKwogCQlmb3IgKG4gPSAwOyBuIDwgbnNpYmxpbmc7
IG4rKykgewogCQkJc3RydWN0IGludGVsX2NvbnRleHQgKnZlOwogCkBAIC0zMTY0LDYgKzMyMTYs
OCBAQCBzdGF0aWMgaW50IGJvbmRfdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVsX2d0ICpndCwK
IAkJCX0KIAkJfQogCQlvbnN0YWNrX2ZlbmNlX2ZpbmkoJmZlbmNlKTsKKwkJaW50ZWxfZW5naW5l
X2ZsdXNoX3N1Ym1pc3Npb24obWFzdGVyKTsKKwkJaWd0X3NwaW5uZXJfZW5kKCZzcGluKTsKIAog
CQlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocnFbMF0sIDAsIEhaIC8gMTApIDwgMCkgewogCQkJcHJf
ZXJyKCJNYXN0ZXIgcmVxdWVzdCBkaWQgbm90IGV4ZWN1dGUgKG9uICVzKSFcbiIsCkBAIC0zMjAx
LDYgKzMyNTUsOCBAQCBzdGF0aWMgaW50IGJvbmRfdmlydHVhbF9lbmdpbmUoc3RydWN0IGludGVs
X2d0ICpndCwKIAkJZXJyID0gLUVJTzsKIAogCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eCk7Citl
cnJfc3BpbjoKKwlpZ3Rfc3Bpbm5lcl9maW5pKCZzcGluKTsKIAlyZXR1cm4gZXJyOwogfQogCi0t
IAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

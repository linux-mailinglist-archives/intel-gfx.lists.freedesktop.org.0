Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 717306520C
	for <lists+intel-gfx@lfdr.de>; Thu, 11 Jul 2019 08:52:47 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1E59689F2E;
	Thu, 11 Jul 2019 06:52:45 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0B76E89EA9
 for <intel-gfx@lists.freedesktop.org>; Thu, 11 Jul 2019 06:52:41 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17214651-1500050 
 for multiple; Thu, 11 Jul 2019 07:52:30 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 11 Jul 2019 07:52:13 +0100
Message-Id: <20190711065215.4004-16-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190711065215.4004-1-chris@chris-wilson.co.uk>
References: <20190711065215.4004-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 16/18] drm/i915: Extract intel_frontbuffer
 active tracking
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TW92ZSB0aGUgYWN0aXZlIHRyYWNraW5nIGZvciB0aGUgZnJvbnRidWZmZXIgb3BlcmF0aW9ucyBv
dXQgb2YgdGhlCmk5MTVfZ2VtX29iamVjdCBhbmQgaW50byBpdHMgb3duIGZpcnN0IGNsYXNzIChy
ZWZjb3VudGVkKSBvYmplY3QuIEluIHRoZQpwcm9jZXNzIG9mIGRldGFuZ2xpbmcsIHdlIHN3aXRj
aCBmcm9tIGxvdyBsZXZlbCByZXF1ZXN0IHRyYWNraW5nIHRvIHRoZQplYXNpZXIgaTkxNV9hY3Rp
dmUgLS0gd2l0aCB0aGUgcGxhbiB0aGF0IHRoaXMgYXZvaWRzIGFueSBwb3RlbnRpYWwKYXRvbWlj
IGNhbGxiYWNrcyBhcyB0aGUgZnJvbnRidWZmZXIgdHJhY2tpbmcgd2lzaGVzIHRvIHNsZWVwIGFz
IGl0CmZsdXNoZXMuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdp
bHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXkuYyAgfCAgNzAgKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmJk
ZXYuYyAgICB8ICA0MCArKy0KIC4uLi9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mcm9udGJ1
ZmZlci5jICB8IDI1NSArKysrKysrKysrKysrLS0tLS0KIC4uLi9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9mcm9udGJ1ZmZlci5oICB8ICA3MCArKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9vdmVybGF5LmMgIHwgICA4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fY2xmbHVzaC5jICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9kb21haW4uYyAgICB8ICAxNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX21tYW4uYyAgICAgIHwgICA0IC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9vYmplY3QuYyAgICB8ICAyNyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX29iamVjdC5oICAgIHwgICAyICstCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9vYmplY3RfdHlwZXMuaCAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVi
dWdmcy5jICAgICAgICAgICB8ICAgNSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5o
ICAgICAgICAgICAgICAgfCAgIDQgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAg
ICAgICAgICAgICAgIHwgIDQ3ICstLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMg
ICAgICAgICAgICAgICB8ICAgNiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2Lmgg
ICAgICAgICAgICAgIHwgICAxICsKIDE2IGZpbGVzIGNoYW5nZWQsIDMwNiBpbnNlcnRpb25zKCsp
LCAyNTcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYwppbmRleCAwMjg2Yjk3Y2FhMjIuLmVkMzUzMmU0YzhhZCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTMwNDksMTIgKzMwNDks
MTMgQEAgaW50ZWxfYWxsb2NfaW5pdGlhbF9wbGFuZV9vYmooc3RydWN0IGludGVsX2NydGMgKmNy
dGMsCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMtPmJhc2UuZGV2OwogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKLQlzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX29iamVjdCAqb2JqID0gTlVMTDsKIAlzdHJ1Y3QgZHJtX21vZGVfZmJfY21kMiBt
b2RlX2NtZCA9IHsgMCB9OwogCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gJnBsYW5lX2Nv
bmZpZy0+ZmItPmJhc2U7CiAJdTMyIGJhc2VfYWxpZ25lZCA9IHJvdW5kX2Rvd24ocGxhbmVfY29u
ZmlnLT5iYXNlLCBQQUdFX1NJWkUpOwogCXUzMiBzaXplX2FsaWduZWQgPSByb3VuZF91cChwbGFu
ZV9jb25maWctPmJhc2UgKyBwbGFuZV9jb25maWctPnNpemUsCiAJCQkJICAgIFBBR0VfU0laRSk7
CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKKwlib29sIHJldCA9IGZhbHNlOwog
CiAJc2l6ZV9hbGlnbmVkIC09IGJhc2VfYWxpZ25lZDsKIApAQCAtMzA5Niw3ICszMDk3LDcgQEAg
aW50ZWxfYWxsb2NfaW5pdGlhbF9wbGFuZV9vYmooc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJ
CWJyZWFrOwogCWRlZmF1bHQ6CiAJCU1JU1NJTkdfQ0FTRShwbGFuZV9jb25maWctPnRpbGluZyk7
Ci0JCXJldHVybiBmYWxzZTsKKwkJZ290byBvdXQ7CiAJfQogCiAJbW9kZV9jbWQucGl4ZWxfZm9y
bWF0ID0gZmItPmZvcm1hdC0+Zm9ybWF0OwpAQCAtMzEwOCwxNiArMzEwOSwxNSBAQCBpbnRlbF9h
bGxvY19pbml0aWFsX3BsYW5lX29iaihzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAogCWlmIChp
bnRlbF9mcmFtZWJ1ZmZlcl9pbml0KHRvX2ludGVsX2ZyYW1lYnVmZmVyKGZiKSwgb2JqLCAmbW9k
ZV9jbWQpKSB7CiAJCURSTV9ERUJVR19LTVMoImludGVsIGZiIGluaXQgZmFpbGVkXG4iKTsKLQkJ
Z290byBvdXRfdW5yZWZfb2JqOworCQlnb3RvIG91dDsKIAl9CiAKIAogCURSTV9ERUJVR19LTVMo
ImluaXRpYWwgcGxhbmUgZmIgb2JqICVwXG4iLCBvYmopOwotCXJldHVybiB0cnVlOwotCi1vdXRf
dW5yZWZfb2JqOgorCXJldCA9IHRydWU7CitvdXQ6CiAJaTkxNV9nZW1fb2JqZWN0X3B1dChvYmop
OwotCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gcmV0OwogfQogCiBzdGF0aWMgdm9pZApAQCAtMzE3
NCw2ICszMTc0LDEyIEBAIHN0YXRpYyB2b2lkIGludGVsX3BsYW5lX2Rpc2FibGVfbm9hdG9taWMo
c3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJaW50ZWxfZGlzYWJsZV9wbGFuZShwbGFuZSwgY3J0
Y19zdGF0ZSk7CiB9CiAKK3N0YXRpYyBzdHJ1Y3QgaW50ZWxfZnJvbnRidWZmZXIgKgordG9faW50
ZWxfZnJvbnRidWZmZXIoc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIpCit7CisJcmV0dXJuIGZi
ID8gdG9faW50ZWxfZnJhbWVidWZmZXIoZmIpLT5mcm9udGJ1ZmZlciA6IE5VTEw7Cit9CisKIHN0
YXRpYyB2b2lkCiBpbnRlbF9maW5kX2luaXRpYWxfcGxhbmVfb2JqKHN0cnVjdCBpbnRlbF9jcnRj
ICppbnRlbF9jcnRjLAogCQkJICAgICBzdHJ1Y3QgaW50ZWxfaW5pdGlhbF9wbGFuZV9jb25maWcg
KnBsYW5lX2NvbmZpZykKQEAgLTMxODEsNyArMzE4Nyw2IEBAIGludGVsX2ZpbmRfaW5pdGlhbF9w
bGFuZV9vYmooc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMsCiAJc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IGludGVsX2NydGMtPmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgZHJtX2NydGMgKmM7Ci0Jc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKIAlzdHJ1Y3QgZHJtX3BsYW5lICpwcmltYXJ5ID0g
aW50ZWxfY3J0Yy0+YmFzZS5wcmltYXJ5OwogCXN0cnVjdCBkcm1fcGxhbmVfc3RhdGUgKnBsYW5l
X3N0YXRlID0gcHJpbWFyeS0+c3RhdGU7CiAJc3RydWN0IGludGVsX3BsYW5lICppbnRlbF9wbGFu
ZSA9IHRvX2ludGVsX3BsYW5lKHByaW1hcnkpOwpAQCAtMzI1Nyw4ICszMjYyLDcgQEAgaW50ZWxf
ZmluZF9pbml0aWFsX3BsYW5lX29iaihzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YywKIAkJ
cmV0dXJuOwogCX0KIAotCW9iaiA9IGludGVsX2ZiX29iaihmYik7Ci0JaW50ZWxfZmJfb2JqX2Zs
dXNoKG9iaiwgT1JJR0lOX0RJUlRZRkIpOworCWludGVsX2Zyb250YnVmZmVyX2ZsdXNoKHRvX2lu
dGVsX2Zyb250YnVmZmVyKGZiKSwgT1JJR0lOX0RJUlRZRkIpOwogCiAJcGxhbmVfc3RhdGUtPnNy
Y194ID0gMDsKIAlwbGFuZV9zdGF0ZS0+c3JjX3kgPSAwOwpAQCAtMzI3MywxNCArMzI3NywxNCBA
QCBpbnRlbF9maW5kX2luaXRpYWxfcGxhbmVfb2JqKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9j
cnRjLAogCWludGVsX3N0YXRlLT5iYXNlLnNyYyA9IGRybV9wbGFuZV9zdGF0ZV9zcmMocGxhbmVf
c3RhdGUpOwogCWludGVsX3N0YXRlLT5iYXNlLmRzdCA9IGRybV9wbGFuZV9zdGF0ZV9kZXN0KHBs
YW5lX3N0YXRlKTsKIAotCWlmIChpOTE1X2dlbV9vYmplY3RfaXNfdGlsZWQob2JqKSkKKwlpZiAo
cGxhbmVfY29uZmlnLT50aWxpbmcpCiAJCWRldl9wcml2LT5wcmVzZXJ2ZV9iaW9zX3N3aXp6bGUg
PSB0cnVlOwogCiAJcGxhbmVfc3RhdGUtPmZiID0gZmI7CiAJcGxhbmVfc3RhdGUtPmNydGMgPSAm
aW50ZWxfY3J0Yy0+YmFzZTsKIAogCWF0b21pY19vcih0b19pbnRlbF9wbGFuZShwcmltYXJ5KS0+
ZnJvbnRidWZmZXJfYml0LAotCQkgICZvYmotPmZyb250YnVmZmVyX2JpdHMpOworCQkgICZ0b19p
bnRlbF9mcm9udGJ1ZmZlcihmYiktPmJpdHMpOwogfQogCiBzdGF0aWMgaW50IHNrbF9tYXhfcGxh
bmVfd2lkdGgoY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsCkBAIC0xNDEwOSw5ICsx
NDExMyw5IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY190cmFja19mYnMoc3RydWN0IGRybV9h
dG9taWNfc3RhdGUgKnN0YXRlKQogCWludCBpOwogCiAJZm9yX2VhY2hfb2xkbmV3X3BsYW5lX2lu
X3N0YXRlKHN0YXRlLCBwbGFuZSwgb2xkX3BsYW5lX3N0YXRlLCBuZXdfcGxhbmVfc3RhdGUsIGkp
Ci0JCWk5MTVfZ2VtX3RyYWNrX2ZiKGludGVsX2ZiX29iaihvbGRfcGxhbmVfc3RhdGUtPmZiKSwK
LQkJCQkgIGludGVsX2ZiX29iaihuZXdfcGxhbmVfc3RhdGUtPmZiKSwKLQkJCQkgIHRvX2ludGVs
X3BsYW5lKHBsYW5lKS0+ZnJvbnRidWZmZXJfYml0KTsKKwkJaW50ZWxfZnJvbnRidWZmZXJfdHJh
Y2sodG9faW50ZWxfZnJvbnRidWZmZXIob2xkX3BsYW5lX3N0YXRlLT5mYiksCisJCQkJCXRvX2lu
dGVsX2Zyb250YnVmZmVyKG5ld19wbGFuZV9zdGF0ZS0+ZmIpLAorCQkJCQl0b19pbnRlbF9wbGFu
ZShwbGFuZSktPmZyb250YnVmZmVyX2JpdCk7CiB9CiAKIC8qKgpAQCAtMTQ0MDksNyArMTQ0MTMs
NyBAQCBpbnRlbF9wcmVwYXJlX3BsYW5lX2ZiKHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lLAogCQly
ZXR1cm4gcmV0OwogCiAJZmJfb2JqX2J1bXBfcmVuZGVyX3ByaW9yaXR5KG9iaik7Ci0JaW50ZWxf
ZmJfb2JqX2ZsdXNoKG9iaiwgT1JJR0lOX0RJUlRZRkIpOworCWludGVsX2Zyb250YnVmZmVyX2Zs
dXNoKG9iai0+ZnJvbnRidWZmZXIsIE9SSUdJTl9ESVJUWUZCKTsKIAogCWlmICghbmV3X3N0YXRl
LT5mZW5jZSkgeyAvKiBpbXBsaWNpdCBmZW5jaW5nICovCiAJCXN0cnVjdCBkbWFfZmVuY2UgKmZl
bmNlOwpAQCAtMTQ2NzIsMTMgKzE0Njc2LDEyIEBAIGludGVsX2xlZ2FjeV9jdXJzb3JfdXBkYXRl
KHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lLAogCQkJICAgc3RydWN0IGRybV9tb2Rlc2V0X2FjcXVp
cmVfY3R4ICpjdHgpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShjcnRjLT5kZXYpOwotCWludCByZXQ7CiAJc3RydWN0IGRybV9wbGFuZV9zdGF0ZSAqb2xk
X3BsYW5lX3N0YXRlLCAqbmV3X3BsYW5lX3N0YXRlOwogCXN0cnVjdCBpbnRlbF9wbGFuZSAqaW50
ZWxfcGxhbmUgPSB0b19pbnRlbF9wbGFuZShwbGFuZSk7Ci0Jc3RydWN0IGRybV9mcmFtZWJ1ZmZl
ciAqb2xkX2ZiOwogCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0KIAkJdG9f
aW50ZWxfY3J0Y19zdGF0ZShjcnRjLT5zdGF0ZSk7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUg
Km5ld19jcnRjX3N0YXRlOworCWludCByZXQ7CiAKIAkvKgogCSAqIFdoZW4gY3J0YyBpcyBpbmFj
dGl2ZSBvciB0aGVyZSBpcyBhIG1vZGVzZXQgcGVuZGluZywKQEAgLTE0NzQ2LDExICsxNDc0OSwx
MCBAQCBpbnRlbF9sZWdhY3lfY3Vyc29yX3VwZGF0ZShzdHJ1Y3QgZHJtX3BsYW5lICpwbGFuZSwK
IAlpZiAocmV0KQogCQlnb3RvIG91dF91bmxvY2s7CiAKLQlpbnRlbF9mYl9vYmpfZmx1c2goaW50
ZWxfZmJfb2JqKGZiKSwgT1JJR0lOX0ZMSVApOwotCi0Jb2xkX2ZiID0gb2xkX3BsYW5lX3N0YXRl
LT5mYjsKLQlpOTE1X2dlbV90cmFja19mYihpbnRlbF9mYl9vYmoob2xkX2ZiKSwgaW50ZWxfZmJf
b2JqKGZiKSwKLQkJCSAgaW50ZWxfcGxhbmUtPmZyb250YnVmZmVyX2JpdCk7CisJaW50ZWxfZnJv
bnRidWZmZXJfZmx1c2godG9faW50ZWxfZnJvbnRidWZmZXIoZmIpLCBPUklHSU5fRkxJUCk7CisJ
aW50ZWxfZnJvbnRidWZmZXJfdHJhY2sodG9faW50ZWxfZnJvbnRidWZmZXIob2xkX3BsYW5lX3N0
YXRlLT5mYiksCisJCQkJdG9faW50ZWxfZnJvbnRidWZmZXIoZmIpLAorCQkJCWludGVsX3BsYW5l
LT5mcm9udGJ1ZmZlcl9iaXQpOwogCiAJLyogU3dhcCBwbGFuZSBzdGF0ZSAqLwogCXBsYW5lLT5z
dGF0ZSA9IG5ld19wbGFuZV9zdGF0ZTsKQEAgLTE1NTI1LDE1ICsxNTUyNyw5IEBAIHN0YXRpYyB2
b2lkIGludGVsX3NldHVwX291dHB1dHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogc3RhdGljIHZvaWQgaW50ZWxfdXNlcl9mcmFtZWJ1ZmZlcl9kZXN0cm95KHN0cnVjdCBkcm1f
ZnJhbWVidWZmZXIgKmZiKQogewogCXN0cnVjdCBpbnRlbF9mcmFtZWJ1ZmZlciAqaW50ZWxfZmIg
PSB0b19pbnRlbF9mcmFtZWJ1ZmZlcihmYik7Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaiA9IGludGVsX2ZiX29iaihmYik7CiAKIAlkcm1fZnJhbWVidWZmZXJfY2xlYW51cChmYik7
Ci0KLQlpOTE1X2dlbV9vYmplY3RfbG9jayhvYmopOwotCVdBUk5fT04oIW9iai0+ZnJhbWVidWZm
ZXJfcmVmZXJlbmNlcy0tKTsKLQlpOTE1X2dlbV9vYmplY3RfdW5sb2NrKG9iaik7Ci0KLQlpOTE1
X2dlbV9vYmplY3RfcHV0KG9iaik7CisJaW50ZWxfZnJvbnRidWZmZXJfcHV0KGludGVsX2ZiLT5m
cm9udGJ1ZmZlcik7CiAKIAlrZnJlZShpbnRlbF9mYik7CiB9CkBAIC0xNTU2MSw3ICsxNTU1Nyw3
IEBAIHN0YXRpYyBpbnQgaW50ZWxfdXNlcl9mcmFtZWJ1ZmZlcl9kaXJ0eShzdHJ1Y3QgZHJtX2Zy
YW1lYnVmZmVyICpmYiwKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gaW50ZWxf
ZmJfb2JqKGZiKTsKIAogCWk5MTVfZ2VtX29iamVjdF9mbHVzaF9pZl9kaXNwbGF5KG9iaik7Ci0J
aW50ZWxfZmJfb2JqX2ZsdXNoKG9iaiwgT1JJR0lOX0RJUlRZRkIpOworCWludGVsX2Zyb250YnVm
ZmVyX2ZsdXNoKHRvX2ludGVsX2Zyb250YnVmZmVyKGZiKSwgT1JJR0lOX0RJUlRZRkIpOwogCiAJ
cmV0dXJuIDA7CiB9CkBAIC0xNTU4Myw4ICsxNTU3OSwxMSBAQCBzdGF0aWMgaW50IGludGVsX2Zy
YW1lYnVmZmVyX2luaXQoc3RydWN0IGludGVsX2ZyYW1lYnVmZmVyICppbnRlbF9mYiwKIAlpbnQg
cmV0ID0gLUVJTlZBTDsKIAlpbnQgaTsKIAorCWludGVsX2ZiLT5mcm9udGJ1ZmZlciA9IGludGVs
X2Zyb250YnVmZmVyX2dldChvYmopOworCWlmICghaW50ZWxfZmItPmZyb250YnVmZmVyKQorCQly
ZXR1cm4gLUVOT01FTTsKKwogCWk5MTVfZ2VtX29iamVjdF9sb2NrKG9iaik7Ci0Jb2JqLT5mcmFt
ZWJ1ZmZlcl9yZWZlcmVuY2VzKys7CiAJdGlsaW5nID0gaTkxNV9nZW1fb2JqZWN0X2dldF90aWxp
bmcob2JqKTsKIAlzdHJpZGUgPSBpOTE1X2dlbV9vYmplY3RfZ2V0X3N0cmlkZShvYmopOwogCWk5
MTVfZ2VtX29iamVjdF91bmxvY2sob2JqKTsKQEAgLTE1NzAxLDkgKzE1NzAwLDcgQEAgc3RhdGlj
IGludCBpbnRlbF9mcmFtZWJ1ZmZlcl9pbml0KHN0cnVjdCBpbnRlbF9mcmFtZWJ1ZmZlciAqaW50
ZWxfZmIsCiAJcmV0dXJuIDA7CiAKIGVycjoKLQlpOTE1X2dlbV9vYmplY3RfbG9jayhvYmopOwot
CW9iai0+ZnJhbWVidWZmZXJfcmVmZXJlbmNlcy0tOwotCWk5MTVfZ2VtX29iamVjdF91bmxvY2so
b2JqKTsKKwlpbnRlbF9mcm9udGJ1ZmZlcl9wdXQoaW50ZWxfZmItPmZyb250YnVmZmVyKTsKIAly
ZXR1cm4gcmV0OwogfQogCkBAIC0xNTcyMSw4ICsxNTcxOCw3IEBAIGludGVsX3VzZXJfZnJhbWVi
dWZmZXJfY3JlYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCXJldHVybiBFUlJfUFRSKC1F
Tk9FTlQpOwogCiAJZmIgPSBpbnRlbF9mcmFtZWJ1ZmZlcl9jcmVhdGUob2JqLCAmbW9kZV9jbWQp
OwotCWlmIChJU19FUlIoZmIpKQotCQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7CisJaTkxNV9n
ZW1fb2JqZWN0X3B1dChvYmopOwogCiAJcmV0dXJuIGZiOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mYmRldi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9mYmRldi5jCmluZGV4IDFlZGQ0NGVlMzJiMi4uNGI1N2NkZDc2Njk5
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2ZiZGV2LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mYmRldi5jCkBAIC00Nywx
MyArNDcsMTQgQEAKICNpbmNsdWRlICJpbnRlbF9mYmRldi5oIgogI2luY2x1ZGUgImludGVsX2Zy
b250YnVmZmVyLmgiCiAKLXN0YXRpYyB2b2lkIGludGVsX2ZiZGV2X2ludmFsaWRhdGUoc3RydWN0
IGludGVsX2ZiZGV2ICppZmJkZXYpCitzdGF0aWMgc3RydWN0IGludGVsX2Zyb250YnVmZmVyICp0
b19mcm9udGJ1ZmZlcihzdHJ1Y3QgaW50ZWxfZmJkZXYgKmlmYmRldikKIHsKLQlzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX29iamVjdCAqb2JqID0gaW50ZWxfZmJfb2JqKCZpZmJkZXYtPmZiLT5iYXNlKTsK
LQl1bnNpZ25lZCBpbnQgb3JpZ2luID0KLQkJaWZiZGV2LT52bWFfZmxhZ3MgJiBQTEFORV9IQVNf
RkVOQ0UgPyBPUklHSU5fR1RUIDogT1JJR0lOX0NQVTsKKwlyZXR1cm4gaWZiZGV2LT5mYi0+ZnJv
bnRidWZmZXI7Cit9CiAKLQlpbnRlbF9mYl9vYmpfaW52YWxpZGF0ZShvYmosIG9yaWdpbik7Citz
dGF0aWMgdm9pZCBpbnRlbF9mYmRldl9pbnZhbGlkYXRlKHN0cnVjdCBpbnRlbF9mYmRldiAqaWZi
ZGV2KQoreworCWludGVsX2Zyb250YnVmZmVyX2ludmFsaWRhdGUodG9fZnJvbnRidWZmZXIoaWZi
ZGV2KSwgT1JJR0lOX0NQVSk7CiB9CiAKIHN0YXRpYyBpbnQgaW50ZWxfZmJkZXZfc2V0X3Bhcihz
dHJ1Y3QgZmJfaW5mbyAqaW5mbykKQEAgLTEyMCw3ICsxMjEsNyBAQCBzdGF0aWMgaW50IGludGVs
ZmJfYWxsb2Moc3RydWN0IGRybV9mYl9oZWxwZXIgKmhlbHBlciwKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CiAJc3RydWN0IGRybV9tb2RlX2ZiX2Nt
ZDIgbW9kZV9jbWQgPSB7fTsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwotCWlu
dCBzaXplLCByZXQ7CisJaW50IHNpemU7CiAKIAkvKiB3ZSBkb24ndCBkbyBwYWNrZWQgMjRicHAg
Ki8KIAlpZiAoc2l6ZXMtPnN1cmZhY2VfYnBwID09IDI0KQpAQCAtMTQ3LDI0ICsxNDgsMTYgQEAg
c3RhdGljIGludCBpbnRlbGZiX2FsbG9jKHN0cnVjdCBkcm1fZmJfaGVscGVyICpoZWxwZXIsCiAJ
CW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfc2htZW0oZGV2X3ByaXYsIHNpemUpOwogCWlm
IChJU19FUlIob2JqKSkgewogCQlEUk1fRVJST1IoImZhaWxlZCB0byBhbGxvY2F0ZSBmcmFtZWJ1
ZmZlclxuIik7Ci0JCXJldCA9IFBUUl9FUlIob2JqKTsKLQkJZ290byBlcnI7CisJCXJldHVybiBQ
VFJfRVJSKG9iaik7CiAJfQogCiAJZmIgPSBpbnRlbF9mcmFtZWJ1ZmZlcl9jcmVhdGUob2JqLCAm
bW9kZV9jbWQpOwotCWlmIChJU19FUlIoZmIpKSB7Ci0JCXJldCA9IFBUUl9FUlIoZmIpOwotCQln
b3RvIGVycl9vYmo7Ci0JfQorCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKKwlpZiAoSVNfRVJS
KGZiKSkKKwkJcmV0dXJuIFBUUl9FUlIoZmIpOwogCiAJaWZiZGV2LT5mYiA9IHRvX2ludGVsX2Zy
YW1lYnVmZmVyKGZiKTsKLQogCXJldHVybiAwOwotCi1lcnJfb2JqOgotCWk5MTVfZ2VtX29iamVj
dF9wdXQob2JqKTsKLWVycjoKLQlyZXR1cm4gcmV0OwogfQogCiBzdGF0aWMgaW50IGludGVsZmJf
Y3JlYXRlKHN0cnVjdCBkcm1fZmJfaGVscGVyICpoZWxwZXIsCkBAIC0xODAsNyArMTczLDYgQEAg
c3RhdGljIGludCBpbnRlbGZiX2NyZWF0ZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyLAog
CWNvbnN0IHN0cnVjdCBpOTE1X2dndHRfdmlldyB2aWV3ID0gewogCQkudHlwZSA9IEk5MTVfR0dU
VF9WSUVXX05PUk1BTCwKIAl9OwotCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiOwogCWludGVs
X3dha2VyZWZfdCB3YWtlcmVmOwogCXN0cnVjdCBmYl9pbmZvICppbmZvOwogCXN0cnVjdCBpOTE1
X3ZtYSAqdm1hOwpAQCAtMjI2LDggKzIxOCw3IEBAIHN0YXRpYyBpbnQgaW50ZWxmYl9jcmVhdGUo
c3RydWN0IGRybV9mYl9oZWxwZXIgKmhlbHBlciwKIAkJZ290byBvdXRfdW5sb2NrOwogCX0KIAot
CWZiID0gJmlmYmRldi0+ZmItPmJhc2U7Ci0JaW50ZWxfZmJfb2JqX2ZsdXNoKGludGVsX2ZiX29i
aihmYiksIE9SSUdJTl9ESVJUWUZCKTsKKwlpbnRlbF9mcm9udGJ1ZmZlcl9mbHVzaCh0b19mcm9u
dGJ1ZmZlcihpZmJkZXYpLCBPUklHSU5fRElSVFlGQik7CiAKIAlpbmZvID0gZHJtX2ZiX2hlbHBl
cl9hbGxvY19mYmkoaGVscGVyKTsKIAlpZiAoSVNfRVJSKGluZm8pKSB7CkBAIC0yMzYsNyArMjI3
LDcgQEAgc3RhdGljIGludCBpbnRlbGZiX2NyZWF0ZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVs
cGVyLAogCQlnb3RvIG91dF91bnBpbjsKIAl9CiAKLQlpZmJkZXYtPmhlbHBlci5mYiA9IGZiOwor
CWlmYmRldi0+aGVscGVyLmZiID0gJmlmYmRldi0+ZmItPmJhc2U7CiAKIAlpbmZvLT5mYm9wcyA9
ICZpbnRlbGZiX29wczsKIApAQCAtMjYyLDEzICsyNTMsMTQgQEAgc3RhdGljIGludCBpbnRlbGZi
X2NyZWF0ZShzdHJ1Y3QgZHJtX2ZiX2hlbHBlciAqaGVscGVyLAogCSAqIElmIHRoZSBvYmplY3Qg
aXMgc3RvbGVuIGhvd2V2ZXIsIGl0IHdpbGwgYmUgZnVsbCBvZiB3aGF0ZXZlcgogCSAqIGdhcmJh
Z2Ugd2FzIGxlZnQgaW4gdGhlcmUuCiAJICovCi0JaWYgKGludGVsX2ZiX29iaihmYiktPnN0b2xl
biAmJiAhcHJlYWxsb2MpCisJaWYgKHZtYS0+b2JqLT5zdG9sZW4gJiYgIXByZWFsbG9jKQogCQlt
ZW1zZXRfaW8oaW5mby0+c2NyZWVuX2Jhc2UsIDAsIGluZm8tPnNjcmVlbl9zaXplKTsKIAogCS8q
IFVzZSBkZWZhdWx0IHNjcmF0Y2ggcGl4bWFwIChpbmZvLT5waXhtYXAuZmxhZ3MgPSBGQl9QSVhN
QVBfU1lTVEVNKSAqLwogCiAJRFJNX0RFQlVHX0tNUygiYWxsb2NhdGVkICVkeCVkIGZiOiAweCUw
OHhcbiIsCi0JCSAgICAgIGZiLT53aWR0aCwgZmItPmhlaWdodCwgaTkxNV9nZ3R0X29mZnNldCh2
bWEpKTsKKwkJICAgICAgaWZiZGV2LT5mYi0+YmFzZS53aWR0aCwgaWZiZGV2LT5mYi0+YmFzZS5o
ZWlnaHQsCisJCSAgICAgIGk5MTVfZ2d0dF9vZmZzZXQodm1hKSk7CiAJaWZiZGV2LT52bWEgPSB2
bWE7CiAJaWZiZGV2LT52bWFfZmxhZ3MgPSBmbGFnczsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mcm9udGJ1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9mcm9udGJ1ZmZlci5jCmluZGV4IDQ0MjczYzEwY2VhNS4uZDEx
MDMxODExYTQ4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Zyb250YnVmZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9m
cm9udGJ1ZmZlci5jCkBAIC0zMCwxMSArMzAsMTEgQEAKICAqIE1hbnkgZmVhdHVyZXMgcmVxdWly
ZSB1cyB0byB0cmFjayBjaGFuZ2VzIHRvIHRoZSBjdXJyZW50bHkgYWN0aXZlCiAgKiBmcm9udGJ1
ZmZlciwgZXNwZWNpYWxseSByZW5kZXJpbmcgdGFyZ2V0ZWQgYXQgdGhlIGZyb250YnVmZmVyLgog
ICoKLSAqIFRvIGJlIGFibGUgdG8gZG8gc28gR0VNIHRyYWNrcyBmcm9udGJ1ZmZlcnMgdXNpbmcg
YSBiaXRtYXNrIGZvciBhbGwgcG9zc2libGUKLSAqIGZyb250YnVmZmVyIHNsb3RzIHRocm91Z2gg
aTkxNV9nZW1fdHJhY2tfZmIoKS4gVGhlIGZ1bmN0aW9uIGluIHRoaXMgZmlsZSBhcmUKLSAqIHRo
ZW4gY2FsbGVkIHdoZW4gdGhlIGNvbnRlbnRzIG9mIHRoZSBmcm9udGJ1ZmZlciBhcmUgaW52YWxp
ZGF0ZWQsIHdoZW4KLSAqIGZyb250YnVmZmVyIHJlbmRlcmluZyBoYXMgc3RvcHBlZCBhZ2FpbiB0
byBmbHVzaCBvdXQgYWxsIHRoZSBjaGFuZ2VzIGFuZCB3aGVuCi0gKiB0aGUgZnJvbnRidWZmZXIg
aXMgZXhjaGFuZ2VkIHdpdGggYSBmbGlwLiBTdWJzeXN0ZW1zIGludGVyZXN0ZWQgaW4KKyAqIFRv
IGJlIGFibGUgdG8gZG8gc28gd2UgdHJhY2sgZnJvbnRidWZmZXJzIHVzaW5nIGEgYml0bWFzayBm
b3IgYWxsIHBvc3NpYmxlCisgKiBmcm9udGJ1ZmZlciBzbG90cyB0aHJvdWdoIGludGVsX2Zyb250
YnVmZmVyX3RyYWNrKCkuIFRoZSBmdW5jdGlvbnMgaW4gdGhpcworICogZmlsZSBhcmUgdGhlbiBj
YWxsZWQgd2hlbiB0aGUgY29udGVudHMgb2YgdGhlIGZyb250YnVmZmVyIGFyZSBpbnZhbGlkYXRl
ZCwKKyAqIHdoZW4gZnJvbnRidWZmZXIgcmVuZGVyaW5nIGhhcyBzdG9wcGVkIGFnYWluIHRvIGZs
dXNoIG91dCBhbGwgdGhlIGNoYW5nZXMKKyAqIGFuZCB3aGVuIHRoZSBmcm9udGJ1ZmZlciBpcyBl
eGNoYW5nZWQgd2l0aCBhIGZsaXAuIFN1YnN5c3RlbXMgaW50ZXJlc3RlZCBpbgogICogZnJvbnRi
dWZmZXIgY2hhbmdlcyAoZS5nLiBQU1IsIEZCQywgRFJSUykgc2hvdWxkIGRpcmVjdGx5IHB1dCB0
aGVpciBjYWxsYmFja3MKICAqIGludG8gdGhlIHJlbGV2YW50IHBsYWNlcyBhbmQgZmlsdGVyIGZv
ciB0aGUgZnJvbnRidWZmZXIgc2xvdHMgdGhhdCB0aGV5IGFyZQogICogaW50ZXJlc3RlZCBpbnQu
CkBAIC02MywyOCArNjMsOSBAQAogI2luY2x1ZGUgImludGVsX2Zyb250YnVmZmVyLmgiCiAjaW5j
bHVkZSAiaW50ZWxfcHNyLmgiCiAKLXZvaWQgX19pbnRlbF9mYl9vYmpfaW52YWxpZGF0ZShzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAotCQkJICAgICAgIGVudW0gZmJfb3Bfb3JpZ2lu
IG9yaWdpbiwKLQkJCSAgICAgICB1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0cykKLXsKLQlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KG9iai0+YmFzZS5kZXYp
OwotCi0JaWYgKG9yaWdpbiA9PSBPUklHSU5fQ1MpIHsKLQkJc3Bpbl9sb2NrKCZkZXZfcHJpdi0+
ZmJfdHJhY2tpbmcubG9jayk7Ci0JCWRldl9wcml2LT5mYl90cmFja2luZy5idXN5X2JpdHMgfD0g
ZnJvbnRidWZmZXJfYml0czsKLQkJZGV2X3ByaXYtPmZiX3RyYWNraW5nLmZsaXBfYml0cyAmPSB+
ZnJvbnRidWZmZXJfYml0czsKLQkJc3Bpbl91bmxvY2soJmRldl9wcml2LT5mYl90cmFja2luZy5s
b2NrKTsKLQl9Ci0KLQltaWdodF9zbGVlcCgpOwotCWludGVsX3Bzcl9pbnZhbGlkYXRlKGRldl9w
cml2LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOwotCWludGVsX2VkcF9kcnJzX2ludmFsaWRh
dGUoZGV2X3ByaXYsIGZyb250YnVmZmVyX2JpdHMpOwotCWludGVsX2ZiY19pbnZhbGlkYXRlKGRl
dl9wcml2LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOwotfQotCiAvKioKLSAqIGludGVsX2Zy
b250YnVmZmVyX2ZsdXNoIC0gZmx1c2ggZnJvbnRidWZmZXIKLSAqIEBkZXZfcHJpdjogaTkxNSBk
ZXZpY2UKKyAqIGZyb250YnVmZmVyX2ZsdXNoIC0gZmx1c2ggZnJvbnRidWZmZXIKKyAqIEBpOTE1
OiBpOTE1IGRldmljZQogICogQGZyb250YnVmZmVyX2JpdHM6IGZyb250YnVmZmVyIHBsYW5lIHRy
YWNraW5nIGJpdHMKICAqIEBvcmlnaW46IHdoaWNoIG9wZXJhdGlvbiBjYXVzZWQgdGhlIGZsdXNo
CiAgKgpAQCAtOTQsNDUgKzc1LDI3IEBAIHZvaWQgX19pbnRlbF9mYl9vYmpfaW52YWxpZGF0ZShz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogICoKICAqIENhbiBiZSBjYWxsZWQgd2l0
aG91dCBhbnkgbG9ja3MgaGVsZC4KICAqLwotc3RhdGljIHZvaWQgaW50ZWxfZnJvbnRidWZmZXJf
Zmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCSAgICB1bnNpZ25l
ZCBmcm9udGJ1ZmZlcl9iaXRzLAotCQkJCSAgICBlbnVtIGZiX29wX29yaWdpbiBvcmlnaW4pCitz
dGF0aWMgdm9pZCBmcm9udGJ1ZmZlcl9mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKKwkJCSAgICAgIHVuc2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzLAorCQkJICAgICAgZW51
bSBmYl9vcF9vcmlnaW4gb3JpZ2luKQogewogCS8qIERlbGF5IGZsdXNoaW5nIHdoZW4gcmluZ3Mg
YXJlIHN0aWxsIGJ1c3kuKi8KLQlzcGluX2xvY2soJmRldl9wcml2LT5mYl90cmFja2luZy5sb2Nr
KTsKLQlmcm9udGJ1ZmZlcl9iaXRzICY9IH5kZXZfcHJpdi0+ZmJfdHJhY2tpbmcuYnVzeV9iaXRz
OwotCXNwaW5fdW5sb2NrKCZkZXZfcHJpdi0+ZmJfdHJhY2tpbmcubG9jayk7CisJc3Bpbl9sb2Nr
KCZpOTE1LT5mYl90cmFja2luZy5sb2NrKTsKKwlmcm9udGJ1ZmZlcl9iaXRzICY9IH5pOTE1LT5m
Yl90cmFja2luZy5idXN5X2JpdHM7CisJc3Bpbl91bmxvY2soJmk5MTUtPmZiX3RyYWNraW5nLmxv
Y2spOwogCiAJaWYgKCFmcm9udGJ1ZmZlcl9iaXRzKQogCQlyZXR1cm47CiAKIAltaWdodF9zbGVl
cCgpOwotCWludGVsX2VkcF9kcnJzX2ZsdXNoKGRldl9wcml2LCBmcm9udGJ1ZmZlcl9iaXRzKTsK
LQlpbnRlbF9wc3JfZmx1c2goZGV2X3ByaXYsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdpbik7Ci0J
aW50ZWxfZmJjX2ZsdXNoKGRldl9wcml2LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOwotfQot
Ci12b2lkIF9faW50ZWxfZmJfb2JqX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpv
YmosCi0JCQkgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbiwKLQkJCSAgdW5zaWduZWQgaW50IGZy
b250YnVmZmVyX2JpdHMpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShvYmotPmJhc2UuZGV2KTsKLQotCWlmIChvcmlnaW4gPT0gT1JJR0lOX0NTKSB7Ci0J
CXNwaW5fbG9jaygmZGV2X3ByaXYtPmZiX3RyYWNraW5nLmxvY2spOwotCQkvKiBGaWx0ZXIgb3V0
IG5ldyBiaXRzIHNpbmNlIHJlbmRlcmluZyBzdGFydGVkLiAqLwotCQlmcm9udGJ1ZmZlcl9iaXRz
ICY9IGRldl9wcml2LT5mYl90cmFja2luZy5idXN5X2JpdHM7Ci0JCWRldl9wcml2LT5mYl90cmFj
a2luZy5idXN5X2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7Ci0JCXNwaW5fdW5sb2NrKCZkZXZf
cHJpdi0+ZmJfdHJhY2tpbmcubG9jayk7Ci0JfQotCi0JaWYgKGZyb250YnVmZmVyX2JpdHMpCi0J
CWludGVsX2Zyb250YnVmZmVyX2ZsdXNoKGRldl9wcml2LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmln
aW4pOworCWludGVsX2VkcF9kcnJzX2ZsdXNoKGk5MTUsIGZyb250YnVmZmVyX2JpdHMpOworCWlu
dGVsX3Bzcl9mbHVzaChpOTE1LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOworCWludGVsX2Zi
Y19mbHVzaChpOTE1LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOwogfQogCiAvKioKICAqIGlu
dGVsX2Zyb250YnVmZmVyX2ZsaXBfcHJlcGFyZSAtIHByZXBhcmUgYXN5bmNocm9ub3VzIGZyb250
YnVmZmVyIGZsaXAKLSAqIEBkZXZfcHJpdjogaTkxNSBkZXZpY2UKKyAqIEBpOTE1OiBpOTE1IGRl
dmljZQogICogQGZyb250YnVmZmVyX2JpdHM6IGZyb250YnVmZmVyIHBsYW5lIHRyYWNraW5nIGJp
dHMKICAqCiAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgY2FsbGVkIGFmdGVyIHNjaGVkdWxpbmcgYSBm
bGlwIG9uIEBvYmouIFRoZSBhY3R1YWwKQEAgLTE0MiwxOSArMTA1LDE5IEBAIHZvaWQgX19pbnRl
bF9mYl9vYmpfZmx1c2goc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKICAqCiAgKiBD
YW4gYmUgY2FsbGVkIHdpdGhvdXQgYW55IGxvY2tzIGhlbGQuCiAgKi8KLXZvaWQgaW50ZWxfZnJv
bnRidWZmZXJfZmxpcF9wcmVwYXJlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
K3ZvaWQgaW50ZWxfZnJvbnRidWZmZXJfZmxpcF9wcmVwYXJlKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAogCQkJCSAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzKQogewotCXNwaW5f
bG9jaygmZGV2X3ByaXYtPmZiX3RyYWNraW5nLmxvY2spOwotCWRldl9wcml2LT5mYl90cmFja2lu
Zy5mbGlwX2JpdHMgfD0gZnJvbnRidWZmZXJfYml0czsKKwlzcGluX2xvY2soJmk5MTUtPmZiX3Ry
YWNraW5nLmxvY2spOworCWk5MTUtPmZiX3RyYWNraW5nLmZsaXBfYml0cyB8PSBmcm9udGJ1ZmZl
cl9iaXRzOwogCS8qIFJlbW92ZSBzdGFsZSBidXN5IGJpdHMgZHVlIHRvIHRoZSBvbGQgYnVmZmVy
LiAqLwotCWRldl9wcml2LT5mYl90cmFja2luZy5idXN5X2JpdHMgJj0gfmZyb250YnVmZmVyX2Jp
dHM7Ci0Jc3Bpbl91bmxvY2soJmRldl9wcml2LT5mYl90cmFja2luZy5sb2NrKTsKKwlpOTE1LT5m
Yl90cmFja2luZy5idXN5X2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7CisJc3Bpbl91bmxvY2so
Jmk5MTUtPmZiX3RyYWNraW5nLmxvY2spOwogfQogCiAvKioKICAqIGludGVsX2Zyb250YnVmZmVy
X2ZsaXBfY29tcGxldGUgLSBjb21wbGV0ZSBhc3luY2hyb25vdXMgZnJvbnRidWZmZXIgZmxpcAot
ICogQGRldl9wcml2OiBpOTE1IGRldmljZQorICogQGk5MTU6IGk5MTUgZGV2aWNlCiAgKiBAZnJv
bnRidWZmZXJfYml0czogZnJvbnRidWZmZXIgcGxhbmUgdHJhY2tpbmcgYml0cwogICoKICAqIFRo
aXMgZnVuY3Rpb24gZ2V0cyBjYWxsZWQgYWZ0ZXIgdGhlIGZsaXAgaGFzIGJlZW4gbGF0Y2hlZCBh
bmQgd2lsbCBjb21wbGV0ZQpAQCAtMTYyLDIzICsxMjUsMjIgQEAgdm9pZCBpbnRlbF9mcm9udGJ1
ZmZlcl9mbGlwX3ByZXBhcmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogICoK
ICAqIENhbiBiZSBjYWxsZWQgd2l0aG91dCBhbnkgbG9ja3MgaGVsZC4KICAqLwotdm9pZCBpbnRl
bF9mcm9udGJ1ZmZlcl9mbGlwX2NvbXBsZXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwKK3ZvaWQgaW50ZWxfZnJvbnRidWZmZXJfZmxpcF9jb21wbGV0ZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKIAkJCQkgICAgIHVuc2lnbmVkIGZyb250YnVmZmVyX2JpdHMpCiB7
Ci0Jc3Bpbl9sb2NrKCZkZXZfcHJpdi0+ZmJfdHJhY2tpbmcubG9jayk7CisJc3Bpbl9sb2NrKCZp
OTE1LT5mYl90cmFja2luZy5sb2NrKTsKIAkvKiBNYXNrIGFueSBjYW5jZWxsZWQgZmxpcHMuICov
Ci0JZnJvbnRidWZmZXJfYml0cyAmPSBkZXZfcHJpdi0+ZmJfdHJhY2tpbmcuZmxpcF9iaXRzOwot
CWRldl9wcml2LT5mYl90cmFja2luZy5mbGlwX2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7Ci0J
c3Bpbl91bmxvY2soJmRldl9wcml2LT5mYl90cmFja2luZy5sb2NrKTsKKwlmcm9udGJ1ZmZlcl9i
aXRzICY9IGk5MTUtPmZiX3RyYWNraW5nLmZsaXBfYml0czsKKwlpOTE1LT5mYl90cmFja2luZy5m
bGlwX2JpdHMgJj0gfmZyb250YnVmZmVyX2JpdHM7CisJc3Bpbl91bmxvY2soJmk5MTUtPmZiX3Ry
YWNraW5nLmxvY2spOwogCiAJaWYgKGZyb250YnVmZmVyX2JpdHMpCi0JCWludGVsX2Zyb250YnVm
ZmVyX2ZsdXNoKGRldl9wcml2LAotCQkJCQlmcm9udGJ1ZmZlcl9iaXRzLCBPUklHSU5fRkxJUCk7
CisJCWZyb250YnVmZmVyX2ZsdXNoKGk5MTUsIGZyb250YnVmZmVyX2JpdHMsIE9SSUdJTl9GTElQ
KTsKIH0KIAogLyoqCiAgKiBpbnRlbF9mcm9udGJ1ZmZlcl9mbGlwIC0gc3luY2hyb25vdXMgZnJv
bnRidWZmZXIgZmxpcAotICogQGRldl9wcml2OiBpOTE1IGRldmljZQorICogQGk5MTU6IGk5MTUg
ZGV2aWNlCiAgKiBAZnJvbnRidWZmZXJfYml0czogZnJvbnRidWZmZXIgcGxhbmUgdHJhY2tpbmcg
Yml0cwogICoKICAqIFRoaXMgZnVuY3Rpb24gZ2V0cyBjYWxsZWQgYWZ0ZXIgc2NoZWR1bGluZyBh
IGZsaXAgb24gQG9iai4gVGhpcyBpcyBmb3IKQEAgLTE4NywxMyArMTQ5LDE2MCBAQCB2b2lkIGlu
dGVsX2Zyb250YnVmZmVyX2ZsaXBfY29tcGxldGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LAogICoKICAqIENhbiBiZSBjYWxsZWQgd2l0aG91dCBhbnkgbG9ja3MgaGVsZC4KICAq
Lwotdm9pZCBpbnRlbF9mcm9udGJ1ZmZlcl9mbGlwKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKK3ZvaWQgaW50ZWxfZnJvbnRidWZmZXJfZmxpcChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKIAkJCSAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzKQogewotCXNwaW5f
bG9jaygmZGV2X3ByaXYtPmZiX3RyYWNraW5nLmxvY2spOworCXNwaW5fbG9jaygmaTkxNS0+ZmJf
dHJhY2tpbmcubG9jayk7CiAJLyogUmVtb3ZlIHN0YWxlIGJ1c3kgYml0cyBkdWUgdG8gdGhlIG9s
ZCBidWZmZXIuICovCi0JZGV2X3ByaXYtPmZiX3RyYWNraW5nLmJ1c3lfYml0cyAmPSB+ZnJvbnRi
dWZmZXJfYml0czsKLQlzcGluX3VubG9jaygmZGV2X3ByaXYtPmZiX3RyYWNraW5nLmxvY2spOwor
CWk5MTUtPmZiX3RyYWNraW5nLmJ1c3lfYml0cyAmPSB+ZnJvbnRidWZmZXJfYml0czsKKwlzcGlu
X3VubG9jaygmaTkxNS0+ZmJfdHJhY2tpbmcubG9jayk7CiAKLQlpbnRlbF9mcm9udGJ1ZmZlcl9m
bHVzaChkZXZfcHJpdiwgZnJvbnRidWZmZXJfYml0cywgT1JJR0lOX0ZMSVApOworCWZyb250YnVm
ZmVyX2ZsdXNoKGk5MTUsIGZyb250YnVmZmVyX2JpdHMsIE9SSUdJTl9GTElQKTsKK30KKwordm9p
ZCBfX2ludGVsX2ZiX2ludmFsaWRhdGUoc3RydWN0IGludGVsX2Zyb250YnVmZmVyICpmcm9udCwK
KwkJCSAgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbiwKKwkJCSAgIHVuc2lnbmVkIGludCBmcm9u
dGJ1ZmZlcl9iaXRzKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkx
NShmcm9udC0+b2JqLT5iYXNlLmRldik7CisKKwlpZiAob3JpZ2luID09IE9SSUdJTl9DUykgewor
CQlzcGluX2xvY2soJmk5MTUtPmZiX3RyYWNraW5nLmxvY2spOworCQlpOTE1LT5mYl90cmFja2lu
Zy5idXN5X2JpdHMgfD0gZnJvbnRidWZmZXJfYml0czsKKwkJaTkxNS0+ZmJfdHJhY2tpbmcuZmxp
cF9iaXRzICY9IH5mcm9udGJ1ZmZlcl9iaXRzOworCQlzcGluX3VubG9jaygmaTkxNS0+ZmJfdHJh
Y2tpbmcubG9jayk7CisJfQorCisJbWlnaHRfc2xlZXAoKTsKKwlpbnRlbF9wc3JfaW52YWxpZGF0
ZShpOTE1LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOworCWludGVsX2VkcF9kcnJzX2ludmFs
aWRhdGUoaTkxNSwgZnJvbnRidWZmZXJfYml0cyk7CisJaW50ZWxfZmJjX2ludmFsaWRhdGUoaTkx
NSwgZnJvbnRidWZmZXJfYml0cywgb3JpZ2luKTsKK30KKwordm9pZCBfX2ludGVsX2ZiX2ZsdXNo
KHN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAqZnJvbnQsCisJCSAgICAgIGVudW0gZmJfb3Bfb3Jp
Z2luIG9yaWdpbiwKKwkJICAgICAgdW5zaWduZWQgaW50IGZyb250YnVmZmVyX2JpdHMpCit7CisJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1KGZyb250LT5vYmotPmJhc2Uu
ZGV2KTsKKworCWlmIChvcmlnaW4gPT0gT1JJR0lOX0NTKSB7CisJCXNwaW5fbG9jaygmaTkxNS0+
ZmJfdHJhY2tpbmcubG9jayk7CisJCS8qIEZpbHRlciBvdXQgbmV3IGJpdHMgc2luY2UgcmVuZGVy
aW5nIHN0YXJ0ZWQuICovCisJCWZyb250YnVmZmVyX2JpdHMgJj0gaTkxNS0+ZmJfdHJhY2tpbmcu
YnVzeV9iaXRzOworCQlpOTE1LT5mYl90cmFja2luZy5idXN5X2JpdHMgJj0gfmZyb250YnVmZmVy
X2JpdHM7CisJCXNwaW5fdW5sb2NrKCZpOTE1LT5mYl90cmFja2luZy5sb2NrKTsKKwl9CisKKwlp
ZiAoZnJvbnRidWZmZXJfYml0cykKKwkJZnJvbnRidWZmZXJfZmx1c2goaTkxNSwgZnJvbnRidWZm
ZXJfYml0cywgb3JpZ2luKTsKK30KKworc3RhdGljIGludCBmcm9udGJ1ZmZlcl9hY3RpdmUoc3Ry
dWN0IGk5MTVfYWN0aXZlICpyZWYpCit7CisJc3RydWN0IGludGVsX2Zyb250YnVmZmVyICpmcm9u
dCA9CisJCWNvbnRhaW5lcl9vZihyZWYsIHR5cGVvZigqZnJvbnQpLCB3cml0ZSk7CisKKwlrcmVm
X2dldCgmZnJvbnQtPnJlZik7CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIGZyb250YnVm
ZmVyX3JldGlyZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKK3sKKwlzdHJ1Y3QgaW50ZWxfZnJv
bnRidWZmZXIgKmZyb250ID0KKwkJY29udGFpbmVyX29mKHJlZiwgdHlwZW9mKCpmcm9udCksIHdy
aXRlKTsKKworCWludGVsX2Zyb250YnVmZmVyX2ZsdXNoKGZyb250LCBPUklHSU5fQ1MpOworCWlu
dGVsX2Zyb250YnVmZmVyX3B1dChmcm9udCk7Cit9CisKK3N0YXRpYyB2b2lkIGZyb250YnVmZmVy
X3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJlZikKKwlfX3JlbGVhc2VzKCZ0b19pOTE1KGZyb250LT5v
YmotPmJhc2UuZGV2KS0+ZmJfdHJhY2tpbmcubG9jaykKK3sKKwlzdHJ1Y3QgaW50ZWxfZnJvbnRi
dWZmZXIgKmZyb250ID0KKwkJY29udGFpbmVyX29mKHJlZiwgdHlwZW9mKCpmcm9udCksIHJlZik7
CisKKwlmcm9udC0+b2JqLT5mcm9udGJ1ZmZlciA9IE5VTEw7CisJc3Bpbl91bmxvY2soJnRvX2k5
MTUoZnJvbnQtPm9iai0+YmFzZS5kZXYpLT5mYl90cmFja2luZy5sb2NrKTsKKworCWk5MTVfZ2Vt
X29iamVjdF9wdXQoZnJvbnQtPm9iaik7CisJa2ZyZWUoZnJvbnQpOworfQorCitzdHJ1Y3QgaW50
ZWxfZnJvbnRidWZmZXIgKgoraW50ZWxfZnJvbnRidWZmZXJfZ2V0KHN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0ICpvYmopCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19p
OTE1KG9iai0+YmFzZS5kZXYpOworCXN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAqZnJvbnQ7CisK
KwlzcGluX2xvY2soJmk5MTUtPmZiX3RyYWNraW5nLmxvY2spOworCWZyb250ID0gb2JqLT5mcm9u
dGJ1ZmZlcjsKKwlpZiAoZnJvbnQpCisJCWtyZWZfZ2V0KCZmcm9udC0+cmVmKTsKKwlzcGluX3Vu
bG9jaygmaTkxNS0+ZmJfdHJhY2tpbmcubG9jayk7CisJaWYgKGZyb250KQorCQlyZXR1cm4gZnJv
bnQ7CisKKwlmcm9udCA9IGttYWxsb2Moc2l6ZW9mKCpmcm9udCksIEdGUF9LRVJORUwpOworCWlm
ICghZnJvbnQpCisJCXJldHVybiBOVUxMOworCisJZnJvbnQtPm9iaiA9IG9iajsKKwlrcmVmX2lu
aXQoJmZyb250LT5yZWYpOworCWF0b21pY19zZXQoJmZyb250LT5iaXRzLCAwKTsKKwlpOTE1X2Fj
dGl2ZV9pbml0KGk5MTUsICZmcm9udC0+d3JpdGUsCisJCQkgZnJvbnRidWZmZXJfYWN0aXZlLCBm
cm9udGJ1ZmZlcl9yZXRpcmUpOworCisJc3Bpbl9sb2NrKCZpOTE1LT5mYl90cmFja2luZy5sb2Nr
KTsKKwlpZiAob2JqLT5mcm9udGJ1ZmZlcikgeworCQlrZnJlZShmcm9udCk7CisJCWZyb250ID0g
b2JqLT5mcm9udGJ1ZmZlcjsKKwkJa3JlZl9nZXQoJmZyb250LT5yZWYpOworCX0gZWxzZSB7CisJ
CWk5MTVfZ2VtX29iamVjdF9nZXQob2JqKTsKKwkJb2JqLT5mcm9udGJ1ZmZlciA9IGZyb250Owor
CX0KKwlzcGluX3VubG9jaygmaTkxNS0+ZmJfdHJhY2tpbmcubG9jayk7CisKKwlyZXR1cm4gZnJv
bnQ7Cit9CisKK3ZvaWQgaW50ZWxfZnJvbnRidWZmZXJfcHV0KHN0cnVjdCBpbnRlbF9mcm9udGJ1
ZmZlciAqZnJvbnQpCit7CisJa3JlZl9wdXRfbG9jaygmZnJvbnQtPnJlZiwKKwkJICAgICAgZnJv
bnRidWZmZXJfcmVsZWFzZSwKKwkJICAgICAgJnRvX2k5MTUoZnJvbnQtPm9iai0+YmFzZS5kZXYp
LT5mYl90cmFja2luZy5sb2NrKTsKK30KKworLyoqCisgKiBpbnRlbF9mcm9udGJ1ZmZlcl90cmFj
ayAtIHVwZGF0ZSBmcm9udGJ1ZmZlciB0cmFja2luZworICogQG9sZDogY3VycmVudCBidWZmZXIg
Zm9yIHRoZSBmcm9udGJ1ZmZlciBzbG90cworICogQG5ldzogbmV3IGJ1ZmZlciBmb3IgdGhlIGZy
b250YnVmZmVyIHNsb3RzCisgKiBAZnJvbnRidWZmZXJfYml0czogYml0bWFzayBvZiBmcm9udGJ1
ZmZlciBzbG90cworICoKKyAqIFRoaXMgdXBkYXRlcyB0aGUgZnJvbnRidWZmZXIgdHJhY2tpbmcg
Yml0cyBAZnJvbnRidWZmZXJfYml0cyBieSBjbGVhcmluZyB0aGVtCisgKiBmcm9tIEBvbGQgYW5k
IHNldHRpbmcgdGhlbSBpbiBAbmV3LiBCb3RoIEBvbGQgYW5kIEBuZXcgY2FuIGJlIE5VTEwuCisg
Ki8KK3ZvaWQgaW50ZWxfZnJvbnRidWZmZXJfdHJhY2soc3RydWN0IGludGVsX2Zyb250YnVmZmVy
ICpvbGQsCisJCQkgICAgIHN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAqbmV3LAorCQkJICAgICB1
bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0cykKK3sKKwkvKgorCSAqIENvbnRyb2wgb2YgaW5k
aXZpZHVhbCBiaXRzIHdpdGhpbiB0aGUgbWFzayBhcmUgZ3VhcmRlZCBieQorCSAqIHRoZSBvd25p
bmcgcGxhbmUtPm11dGV4LCBpLmUuIHdlIGNhbiBuZXZlciBzZWUgY29uY3VycmVudAorCSAqIG1h
bmlwdWxhdGlvbiBvZiBpbmRpdmlkdWFsIGJpdHMuIEJ1dCBzaW5jZSB0aGUgYml0ZmllbGQgYXMg
YSB3aG9sZQorCSAqIGlzIHVwZGF0ZWQgdXNpbmcgUk1XLCB3ZSBuZWVkIHRvIHVzZSBhdG9taWNz
IGluIG9yZGVyIHRvIHVwZGF0ZQorCSAqIHRoZSBiaXRzLgorCSAqLworCUJVSUxEX0JVR19PTihJ
TlRFTF9GUk9OVEJVRkZFUl9CSVRTX1BFUl9QSVBFICogSTkxNV9NQVhfUElQRVMgPgorCQkgICAg
IEJJVFNfUEVSX1RZUEUoYXRvbWljX3QpKTsKKworCWlmIChvbGQpIHsKKwkJV0FSTl9PTighKGF0
b21pY19yZWFkKCZvbGQtPmJpdHMpICYgZnJvbnRidWZmZXJfYml0cykpOworCQlhdG9taWNfYW5k
bm90KGZyb250YnVmZmVyX2JpdHMsICZvbGQtPmJpdHMpOworCX0KKworCWlmIChuZXcpIHsKKwkJ
V0FSTl9PTihhdG9taWNfcmVhZCgmbmV3LT5iaXRzKSAmIGZyb250YnVmZmVyX2JpdHMpOworCQlh
dG9taWNfb3IoZnJvbnRidWZmZXJfYml0cywgJm5ldy0+Yml0cyk7CisJfQogfQpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mcm9udGJ1ZmZlci5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9mcm9udGJ1ZmZlci5oCmluZGV4IDU3Mjcz
MjBjODA4NC4uYWRjNjRkNjFhNGE1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Zyb250YnVmZmVyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9mcm9udGJ1ZmZlci5oCkBAIC0yNCw3ICsyNCwxMCBAQAogI2lmbmRlZiBfX0lO
VEVMX0ZST05UQlVGRkVSX0hfXwogI2RlZmluZSBfX0lOVEVMX0ZST05UQlVGRkVSX0hfXwogCi0j
aW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX29iamVjdC5oIgorI2luY2x1ZGUgPGxpbnV4L2F0b21pYy5o
PgorI2luY2x1ZGUgPGxpbnV4L2tyZWYuaD4KKworI2luY2x1ZGUgImk5MTVfYWN0aXZlLmgiCiAK
IHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwogc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Q7CkBA
IC0zNywyMyArNDAsMzAgQEAgZW51bSBmYl9vcF9vcmlnaW4gewogCU9SSUdJTl9ESVJUWUZCLAog
fTsKIAotdm9pZCBpbnRlbF9mcm9udGJ1ZmZlcl9mbGlwX3ByZXBhcmUoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAorc3RydWN0IGludGVsX2Zyb250YnVmZmVyIHsKKwlzdHJ1Y3Qg
a3JlZiByZWY7CisJYXRvbWljX3QgYml0czsKKwlzdHJ1Y3QgaTkxNV9hY3RpdmUgd3JpdGU7CisJ
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKK307CisKK3ZvaWQgaW50ZWxfZnJvbnRi
dWZmZXJfZmxpcF9wcmVwYXJlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkJCSAg
ICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzKTsKLXZvaWQgaW50ZWxfZnJvbnRidWZmZXJfZmxp
cF9jb21wbGV0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCit2b2lkIGludGVs
X2Zyb250YnVmZmVyX2ZsaXBfY29tcGxldGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUs
CiAJCQkJICAgICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzKTsKLXZvaWQgaW50ZWxfZnJvbnRi
dWZmZXJfZmxpcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCit2b2lkIGludGVs
X2Zyb250YnVmZmVyX2ZsaXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCQkgICAg
dW5zaWduZWQgZnJvbnRidWZmZXJfYml0cyk7CiAKLXZvaWQgX19pbnRlbF9mYl9vYmpfaW52YWxp
ZGF0ZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAotCQkJICAgICAgIGVudW0gZmJf
b3Bfb3JpZ2luIG9yaWdpbiwKLQkJCSAgICAgICB1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0
cyk7Ci12b2lkIF9faW50ZWxfZmJfb2JqX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmosCi0JCQkgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbiwKLQkJCSAgdW5zaWduZWQgaW50
IGZyb250YnVmZmVyX2JpdHMpOworc3RydWN0IGludGVsX2Zyb250YnVmZmVyICoKK2ludGVsX2Zy
b250YnVmZmVyX2dldChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKTsKKwordm9pZCBf
X2ludGVsX2ZiX2ludmFsaWRhdGUoc3RydWN0IGludGVsX2Zyb250YnVmZmVyICpmcm9udCwKKwkJ
CSAgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbiwKKwkJCSAgIHVuc2lnbmVkIGludCBmcm9udGJ1
ZmZlcl9iaXRzKTsKIAogLyoqCi0gKiBpbnRlbF9mYl9vYmpfaW52YWxpZGF0ZSAtIGludmFsaWRh
dGUgZnJvbnRidWZmZXIgb2JqZWN0Ci0gKiBAb2JqOiBHRU0gb2JqZWN0IHRvIGludmFsaWRhdGUK
KyAqIGludGVsX2Zyb250YnVmZmVyX2ludmFsaWRhdGUgLSBpbnZhbGlkYXRlIGZyb250YnVmZmVy
IG9iamVjdAorICogQGZyb250OiBHRU0gb2JqZWN0IHRvIGludmFsaWRhdGUKICAqIEBvcmlnaW46
IHdoaWNoIG9wZXJhdGlvbiBjYXVzZWQgdGhlIGludmFsaWRhdGlvbgogICoKICAqIFRoaXMgZnVu
Y3Rpb24gZ2V0cyBjYWxsZWQgZXZlcnkgdGltZSByZW5kZXJpbmcgb24gdGhlIGdpdmVuIG9iamVj
dCBzdGFydHMgYW5kCkBAIC02MiwzNyArNzIsNTMgQEAgdm9pZCBfX2ludGVsX2ZiX29ial9mbHVz
aChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogICogdW50aWwgdGhlIHJlbmRlcmlu
ZyBjb21wbGV0ZXMgb3IgYSBmbGlwIG9uIHRoaXMgZnJvbnRidWZmZXIgcGxhbmUgaXMKICAqIHNj
aGVkdWxlZC4KICAqLwotc3RhdGljIGlubGluZSBib29sIGludGVsX2ZiX29ial9pbnZhbGlkYXRl
KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCi0JCQkJCSAgIGVudW0gZmJfb3Bfb3Jp
Z2luIG9yaWdpbikKK3N0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF9mcm9udGJ1ZmZlcl9pbnZhbGlk
YXRlKHN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAqZnJvbnQsCisJCQkJCQllbnVtIGZiX29wX29y
aWdpbiBvcmlnaW4pCiB7CiAJdW5zaWduZWQgaW50IGZyb250YnVmZmVyX2JpdHM7CiAKLQlmcm9u
dGJ1ZmZlcl9iaXRzID0gYXRvbWljX3JlYWQoJm9iai0+ZnJvbnRidWZmZXJfYml0cyk7CisJaWYg
KCFmcm9udCkKKwkJcmV0dXJuIGZhbHNlOworCisJZnJvbnRidWZmZXJfYml0cyA9IGF0b21pY19y
ZWFkKCZmcm9udC0+Yml0cyk7CiAJaWYgKCFmcm9udGJ1ZmZlcl9iaXRzKQogCQlyZXR1cm4gZmFs
c2U7CiAKLQlfX2ludGVsX2ZiX29ial9pbnZhbGlkYXRlKG9iaiwgb3JpZ2luLCBmcm9udGJ1ZmZl
cl9iaXRzKTsKKwlfX2ludGVsX2ZiX2ludmFsaWRhdGUoZnJvbnQsIG9yaWdpbiwgZnJvbnRidWZm
ZXJfYml0cyk7CiAJcmV0dXJuIHRydWU7CiB9CiAKK3ZvaWQgX19pbnRlbF9mYl9mbHVzaChzdHJ1
Y3QgaW50ZWxfZnJvbnRidWZmZXIgKmZyb250LAorCQkgICAgICBlbnVtIGZiX29wX29yaWdpbiBv
cmlnaW4sCisJCSAgICAgIHVuc2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzKTsKKwogLyoqCi0g
KiBpbnRlbF9mYl9vYmpfZmx1c2ggLSBmbHVzaCBmcm9udGJ1ZmZlciBvYmplY3QKLSAqIEBvYmo6
IEdFTSBvYmplY3QgdG8gZmx1c2gKKyAqIGludGVsX2Zyb250YnVmZmVyX2ZsdXNoIC0gZmx1c2gg
ZnJvbnRidWZmZXIgb2JqZWN0CisgKiBAZnJvbnQ6IEdFTSBvYmplY3QgdG8gZmx1c2gKICAqIEBv
cmlnaW46IHdoaWNoIG9wZXJhdGlvbiBjYXVzZWQgdGhlIGZsdXNoCiAgKgogICogVGhpcyBmdW5j
dGlvbiBnZXRzIGNhbGxlZCBldmVyeSB0aW1lIHJlbmRlcmluZyBvbiB0aGUgZ2l2ZW4gb2JqZWN0
IGhhcwogICogY29tcGxldGVkIGFuZCBmcm9udGJ1ZmZlciBjYWNoaW5nIGNhbiBiZSBzdGFydGVk
IGFnYWluLgogICovCi1zdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZmJfb2JqX2ZsdXNoKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCi0JCQkJICAgICAgZW51bSBmYl9vcF9vcmlnaW4g
b3JpZ2luKQorc3RhdGljIGlubGluZSB2b2lkIGludGVsX2Zyb250YnVmZmVyX2ZsdXNoKHN0cnVj
dCBpbnRlbF9mcm9udGJ1ZmZlciAqZnJvbnQsCisJCQkJCSAgIGVudW0gZmJfb3Bfb3JpZ2luIG9y
aWdpbikKIHsKIAl1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0czsKIAotCWZyb250YnVmZmVy
X2JpdHMgPSBhdG9taWNfcmVhZCgmb2JqLT5mcm9udGJ1ZmZlcl9iaXRzKTsKKwlpZiAoIWZyb250
KQorCQlyZXR1cm47CisKKwlmcm9udGJ1ZmZlcl9iaXRzID0gYXRvbWljX3JlYWQoJmZyb250LT5i
aXRzKTsKIAlpZiAoIWZyb250YnVmZmVyX2JpdHMpCiAJCXJldHVybjsKIAotCV9faW50ZWxfZmJf
b2JqX2ZsdXNoKG9iaiwgb3JpZ2luLCBmcm9udGJ1ZmZlcl9iaXRzKTsKKwlfX2ludGVsX2ZiX2Zs
dXNoKGZyb250LCBvcmlnaW4sIGZyb250YnVmZmVyX2JpdHMpOwogfQogCit2b2lkIGludGVsX2Zy
b250YnVmZmVyX3RyYWNrKHN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAqb2xkLAorCQkJICAgICBz
dHJ1Y3QgaW50ZWxfZnJvbnRidWZmZXIgKm5ldywKKwkJCSAgICAgdW5zaWduZWQgaW50IGZyb250
YnVmZmVyX2JpdHMpOworCit2b2lkIGludGVsX2Zyb250YnVmZmVyX3B1dChzdHJ1Y3QgaW50ZWxf
ZnJvbnRidWZmZXIgKmZyb250KTsKKwogI2VuZGlmIC8qIF9fSU5URUxfRlJPTlRCVUZGRVJfSF9f
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX292ZXJs
YXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfb3ZlcmxheS5jCmluZGV4
IDliM2Y0ZjY2NDRmMy4uMWExNWZhMzQyMDVjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX292ZXJsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX292ZXJsYXkuYwpAQCAtMjgxLDkgKzI4MSw5IEBAIHN0YXRpYyB2b2lkIGlu
dGVsX292ZXJsYXlfZmxpcF9wcmVwYXJlKHN0cnVjdCBpbnRlbF9vdmVybGF5ICpvdmVybGF5LAog
CiAJV0FSTl9PTihvdmVybGF5LT5vbGRfdm1hKTsKIAotCWk5MTVfZ2VtX3RyYWNrX2ZiKG92ZXJs
YXktPnZtYSA/IG92ZXJsYXktPnZtYS0+b2JqIDogTlVMTCwKLQkJCSAgdm1hID8gdm1hLT5vYmog
OiBOVUxMLAotCQkJICBJTlRFTF9GUk9OVEJVRkZFUl9PVkVSTEFZKHBpcGUpKTsKKwlpbnRlbF9m
cm9udGJ1ZmZlcl90cmFjayhvdmVybGF5LT52bWEgPyBvdmVybGF5LT52bWEtPm9iai0+ZnJvbnRi
dWZmZXIgOiBOVUxMLAorCQkJCXZtYSA/IHZtYS0+b2JqLT5mcm9udGJ1ZmZlciA6IE5VTEwsCisJ
CQkJSU5URUxfRlJPTlRCVUZGRVJfT1ZFUkxBWShwaXBlKSk7CiAKIAlpbnRlbF9mcm9udGJ1ZmZl
cl9mbGlwX3ByZXBhcmUob3ZlcmxheS0+aTkxNSwKIAkJCQkgICAgICAgSU5URUxfRlJPTlRCVUZG
RVJfT1ZFUkxBWShwaXBlKSk7CkBAIC03NjgsNyArNzY4LDcgQEAgc3RhdGljIGludCBpbnRlbF9v
dmVybGF5X2RvX3B1dF9pbWFnZShzdHJ1Y3QgaW50ZWxfb3ZlcmxheSAqb3ZlcmxheSwKIAkJcmV0
ID0gUFRSX0VSUih2bWEpOwogCQlnb3RvIG91dF9waW5fc2VjdGlvbjsKIAl9Ci0JaW50ZWxfZmJf
b2JqX2ZsdXNoKG5ld19ibywgT1JJR0lOX0RJUlRZRkIpOworCWludGVsX2Zyb250YnVmZmVyX2Zs
dXNoKG5ld19iby0+ZnJvbnRidWZmZXIsIE9SSUdJTl9ESVJUWUZCKTsKIAogCXJldCA9IGk5MTVf
dm1hX3B1dF9mZW5jZSh2bWEpOwogCWlmIChyZXQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fY2xmbHVzaC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX2NsZmx1c2guYwppbmRleCA1Mjk1Mjg1ZDU4NDMuLmE2NWQ0MDFmODkxYyAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NsZmx1c2guYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY2xmbHVzaC5jCkBAIC00OCw3ICs0
OCw3IEBAIHN0YXRpYyB2b2lkIF9faTkxNV9kb19jbGZsdXNoKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmopCiB7CiAJR0VNX0JVR19PTighaTkxNV9nZW1fb2JqZWN0X2hhc19wYWdlcyhv
YmopKTsKIAlkcm1fY2xmbHVzaF9zZyhvYmotPm1tLnBhZ2VzKTsKLQlpbnRlbF9mYl9vYmpfZmx1
c2gob2JqLCBPUklHSU5fQ1BVKTsKKwlpbnRlbF9mcm9udGJ1ZmZlcl9mbHVzaChvYmotPmZyb250
YnVmZmVyLCBPUklHSU5fQ1BVKTsKIH0KIAogc3RhdGljIHZvaWQgaTkxNV9jbGZsdXNoX3dvcmso
c3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2RvbWFpbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX2RvbWFpbi5jCmluZGV4IDJlM2NlMmE2OTY1My4uYTFhZmMyNjkwZTllIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZG9tYWluLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2RvbWFpbi5jCkBAIC01NTEsMTMgKzU1MSw2IEBA
IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqb2JqLCBib29sIHdyaXRlKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW5saW5lIGVu
dW0gZmJfb3Bfb3JpZ2luCi1mYl93cml0ZV9vcmlnaW4oc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaiwgdW5zaWduZWQgaW50IGRvbWFpbikKLXsKLQlyZXR1cm4gKGRvbWFpbiA9PSBJOTE1
X0dFTV9ET01BSU5fR1RUID8KLQkJb2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdpbiA6IE9SSUdJ
Tl9DUFUpOwotfQotCiAvKioKICAqIENhbGxlZCB3aGVuIHVzZXIgc3BhY2UgcHJlcGFyZXMgdG8g
dXNlIGFuIG9iamVjdCB3aXRoIHRoZSBDUFUsIGVpdGhlcgogICogdGhyb3VnaCB0aGUgbW1hcCBp
b2N0bCdzIG1hcHBpbmcgb3IgYSBHVFQgbWFwcGluZy4KQEAgLTY2MSw5ICs2NTQsOCBAQCBpOTE1
X2dlbV9zZXRfZG9tYWluX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEs
CiAKIAlpOTE1X2dlbV9vYmplY3RfdW5sb2NrKG9iaik7CiAKLQlpZiAod3JpdGVfZG9tYWluICE9
IDApCi0JCWludGVsX2ZiX29ial9pbnZhbGlkYXRlKG9iaiwKLQkJCQkJZmJfd3JpdGVfb3JpZ2lu
KG9iaiwgd3JpdGVfZG9tYWluKSk7CisJaWYgKHdyaXRlX2RvbWFpbikKKwkJaW50ZWxfZnJvbnRi
dWZmZXJfaW52YWxpZGF0ZShvYmotPmZyb250YnVmZmVyLCBPUklHSU5fQ1BVKTsKIAogb3V0X3Vu
cGluOgogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmopOwpAQCAtNzgzLDcgKzc3NSw3
IEBAIGludCBpOTE1X2dlbV9vYmplY3RfcHJlcGFyZV93cml0ZShzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqLAogCX0KIAogb3V0OgotCWludGVsX2ZiX29ial9pbnZhbGlkYXRlKG9iaiwg
T1JJR0lOX0NQVSk7CisJaW50ZWxfZnJvbnRidWZmZXJfaW52YWxpZGF0ZShvYmotPmZyb250YnVm
ZmVyLCBPUklHSU5fQ1BVKTsKIAlvYmotPm1tLmRpcnR5ID0gdHJ1ZTsKIAkvKiByZXR1cm4gd2l0
aCB0aGUgcGFnZXMgcGlubmVkICovCiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX21tYW4uYwppbmRleCAzOTE2MjFlZTNjYmIuLmJjYzUzYzJiNGY2OSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX21tYW4uYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jCkBAIC05OSw5ICs5OSw2IEBAIGk5
MTVfZ2VtX21tYXBfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJ
dXBfd3JpdGUoJm1tLT5tbWFwX3NlbSk7CiAJCWlmIChJU19FUlJfVkFMVUUoYWRkcikpCiAJCQln
b3RvIGVycjsKLQotCQkvKiBUaGlzIG1heSByYWNlLCBidXQgdGhhdCdzIG9rLCBpdCBvbmx5IGdl
dHMgc2V0ICovCi0JCVdSSVRFX09OQ0Uob2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdpbiwgT1JJ
R0lOX0NQVSk7CiAJfQogCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKIApAQCAtMjgxLDcgKzI3
OCw2IEBAIHZtX2ZhdWx0X3QgaTkxNV9nZW1fZmF1bHQoc3RydWN0IHZtX2ZhdWx0ICp2bWYpCiAJ
CSAqIFVzZXJzcGFjZSBpcyBub3cgd3JpdGluZyB0aHJvdWdoIGFuIHVudHJhY2tlZCBWTUEsIGFi
YW5kb24KIAkJICogYWxsIGhvcGUgdGhhdCB0aGUgaGFyZHdhcmUgaXMgYWJsZSB0byB0cmFjayBm
dXR1cmUgd3JpdGVzLgogCQkgKi8KLQkJb2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdpbiA9IE9S
SUdJTl9DUFU7CiAKIAkJdm1hID0gaTkxNV9nZW1fb2JqZWN0X2dndHRfcGluKG9iaiwgJnZpZXcs
IDAsIDAsIGZsYWdzKTsKIAkJaWYgKElTX0VSUih2bWEpICYmICF2aWV3LnR5cGUpIHsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYwppbmRleCBhZGVkOTUzNzUwOTYu
LjNiOWM2MWYwNjQ2ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX29iamVjdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmpl
Y3QuYwpAQCAtNDUsMTYgKzQ1LDYgQEAgdm9pZCBpOTE1X2dlbV9vYmplY3RfZnJlZShzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogCXJldHVybiBrbWVtX2NhY2hlX2ZyZWUoZ2xvYmFs
LnNsYWJfb2JqZWN0cywgb2JqKTsKIH0KIAotc3RhdGljIHZvaWQKLWZyb250YnVmZmVyX3JldGly
ZShzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCAqYWN0aXZlLAotCQkgICBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpyZXF1ZXN0KQotewotCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPQot
CQljb250YWluZXJfb2YoYWN0aXZlLCB0eXBlb2YoKm9iaiksIGZyb250YnVmZmVyX3dyaXRlKTsK
LQotCWludGVsX2ZiX29ial9mbHVzaChvYmosIE9SSUdJTl9DUyk7Ci19Ci0KIHZvaWQgaTkxNV9n
ZW1fb2JqZWN0X2luaXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJCSAgY29u
c3Qgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Rfb3BzICpvcHMpCiB7CkBAIC02OSwxMCArNTks
NiBAQCB2b2lkIGk5MTVfZ2VtX29iamVjdF9pbml0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmosCiAKIAlvYmotPm9wcyA9IG9wczsKIAotCW9iai0+ZnJvbnRidWZmZXJfZ2d0dF9vcmln
aW4gPSBPUklHSU5fR1RUOwotCWk5MTVfYWN0aXZlX3JlcXVlc3RfaW5pdCgmb2JqLT5mcm9udGJ1
ZmZlcl93cml0ZSwKLQkJCQkgTlVMTCwgZnJvbnRidWZmZXJfcmV0aXJlKTsKLQogCW9iai0+bW0u
bWFkdiA9IEk5MTVfTUFEVl9XSUxMTkVFRDsKIAlJTklUX1JBRElYX1RSRUUoJm9iai0+bW0uZ2V0
X3BhZ2UucmFkaXgsIEdGUF9LRVJORUwgfCBfX0dGUF9OT1dBUk4pOwogCW11dGV4X2luaXQoJm9i
ai0+bW0uZ2V0X3BhZ2UubG9jayk7CkBAIC0xODQsNyArMTcwLDYgQEAgc3RhdGljIHZvaWQgX19p
OTE1X2dlbV9mcmVlX29iamVjdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAKIAkJ
R0VNX0JVR19PTihhdG9taWNfcmVhZCgmb2JqLT5iaW5kX2NvdW50KSk7CiAJCUdFTV9CVUdfT04o
b2JqLT51c2VyZmF1bHRfY291bnQpOwotCQlHRU1fQlVHX09OKGF0b21pY19yZWFkKCZvYmotPmZy
b250YnVmZmVyX2JpdHMpKTsKIAkJR0VNX0JVR19PTighbGlzdF9lbXB0eSgmb2JqLT5sdXRfbGlz
dCkpOwogCiAJCWF0b21pY19zZXQoJm9iai0+bW0ucGFnZXNfcGluX2NvdW50LCAwKTsKQEAgLTI1
Nyw2ICsyNDIsOCBAQCB2b2lkIGk5MTVfZ2VtX2ZyZWVfb2JqZWN0KHN0cnVjdCBkcm1fZ2VtX29i
amVjdCAqZ2VtX29iaikKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdG9faW50
ZWxfYm8oZ2VtX29iaik7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0b19pOTE1
KG9iai0+YmFzZS5kZXYpOwogCisJR0VNX0JVR19PTihpOTE1X2dlbV9vYmplY3RfaXNfZnJhbWVi
dWZmZXIob2JqKSk7CisKIAkvKgogCSAqIEJlZm9yZSB3ZSBmcmVlIHRoZSBvYmplY3QsIG1ha2Ug
c3VyZSBhbnkgcHVyZSBSQ1Utb25seQogCSAqIHJlYWQtc2lkZSBjcml0aWNhbCBzZWN0aW9ucyBh
cmUgY29tcGxldGUsIGUuZy4KQEAgLTI5NSwxMyArMjgyLDYgQEAgdm9pZCBpOTE1X2dlbV9mcmVl
X29iamVjdChzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKmdlbV9vYmopCiAJCXF1ZXVlX3dvcmsoaTkx
NS0+d3EsICZpOTE1LT5tbS5mcmVlX3dvcmspOwogfQogCi1zdGF0aWMgaW5saW5lIGVudW0gZmJf
b3Bfb3JpZ2luCi1mYl93cml0ZV9vcmlnaW4oc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aiwgdW5zaWduZWQgaW50IGRvbWFpbikKLXsKLQlyZXR1cm4gKGRvbWFpbiA9PSBJOTE1X0dFTV9E
T01BSU5fR1RUID8KLQkJb2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdpbiA6IE9SSUdJTl9DUFUp
OwotfQotCiBzdGF0aWMgYm9vbCBncHVfd3JpdGVfbmVlZHNfY2xmbHVzaChzdHJ1Y3QgZHJtX2k5
MTVfZ2VtX29iamVjdCAqb2JqKQogewogCXJldHVybiAhKG9iai0+Y2FjaGVfbGV2ZWwgPT0gSTkx
NV9DQUNIRV9OT05FIHx8CkBAIC0zMjQsOCArMzA0LDcgQEAgaTkxNV9nZW1fb2JqZWN0X2ZsdXNo
X3dyaXRlX2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCQlmb3JfZWFj
aF9nZ3R0X3ZtYSh2bWEsIG9iaikKIAkJCWludGVsX2d0X2ZsdXNoX2dndHRfd3JpdGVzKHZtYS0+
dm0tPmd0KTsKIAotCQlpbnRlbF9mYl9vYmpfZmx1c2gob2JqLAotCQkJCSAgIGZiX3dyaXRlX29y
aWdpbihvYmosIEk5MTVfR0VNX0RPTUFJTl9HVFQpKTsKKwkJaW50ZWxfZnJvbnRidWZmZXJfZmx1
c2gob2JqLT5mcm9udGJ1ZmZlciwgT1JJR0lOX0NQVSk7CiAKIAkJZm9yX2VhY2hfZ2d0dF92bWEo
dm1hLCBvYmopIHsKIAkJCWlmICh2bWEtPmlvbWFwKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX29iamVjdC5oCmluZGV4IDIwNzU0YzE1NDEyYS4uYjMzNDA2NDdhYjdmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCkBAIC0xNjEsNyArMTYx
LDcgQEAgaTkxNV9nZW1fb2JqZWN0X25lZWRzX2FzeW5jX2NhbmNlbChjb25zdCBzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX29iamVjdCAqb2JqKQogc3RhdGljIGlubGluZSBib29sCiBpOTE1X2dlbV9vYmpl
Y3RfaXNfZnJhbWVidWZmZXIoY29uc3Qgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikK
IHsKLQlyZXR1cm4gUkVBRF9PTkNFKG9iai0+ZnJhbWVidWZmZXJfcmVmZXJlbmNlcyk7CisJcmV0
dXJuIFJFQURfT05DRShvYmotPmZyb250YnVmZmVyKTsKIH0KIAogc3RhdGljIGlubGluZSB1bnNp
Z25lZCBpbnQKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9v
YmplY3RfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3Rf
dHlwZXMuaAppbmRleCBkNDc0YzZhYzQxMDAuLmVkZTBlYjQyMThhOCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfdHlwZXMuaApAQCAtMTMsNiArMTMs
NyBAQAogI2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKIAogc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3Q7CitzdHJ1Y3QgaW50ZWxfZnJvbmJ1ZmZlcjsKIAogLyoKICAqIHN0cnVjdCBpOTE1X2x1
dF9oYW5kbGUgdHJhY2tzIHRoZSBmYXN0IGxvb2t1cHMgZnJvbSBoYW5kbGUgdG8gdm1hIHVzZWQK
QEAgLTE0MSw5ICsxNDIsNyBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCB7CiAJICovCiAJ
dTE2IHdyaXRlX2RvbWFpbjsKIAotCWF0b21pY190IGZyb250YnVmZmVyX2JpdHM7Ci0JdW5zaWdu
ZWQgaW50IGZyb250YnVmZmVyX2dndHRfb3JpZ2luOyAvKiB3cml0ZSBvbmNlICovCi0Jc3RydWN0
IGk5MTVfYWN0aXZlX3JlcXVlc3QgZnJvbnRidWZmZXJfd3JpdGU7CisJc3RydWN0IGludGVsX2Zy
b250YnVmZmVyICpmcm9udGJ1ZmZlcjsKIAogCS8qKiBDdXJyZW50IHRpbGluZyBzdHJpZGUgZm9y
IHRoZSBvYmplY3QsIGlmIGl0J3MgdGlsZWQuICovCiAJdW5zaWduZWQgaW50IHRpbGluZ19hbmRf
c3RyaWRlOwpAQCAtMjI0LDkgKzIyMyw2IEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0IHsK
IAkJYm9vbCBxdWlya2VkOjE7CiAJfSBtbTsKIAotCS8qKiBSZWZlcmVuY2VzIGZyb20gZnJhbWVi
dWZmZXJzLCBsb2NrcyBvdXQgdGlsaW5nIGNoYW5nZXMuICovCi0JdW5zaWduZWQgaW50IGZyYW1l
YnVmZmVyX3JlZmVyZW5jZXM7Ci0KIAkvKiogUmVjb3JkIG9mIGFkZHJlc3MgYml0IDE3IG9mIGVh
Y2ggcGFnZSBhdCBsYXN0IHVuYmluZC4gKi8KIAl1bnNpZ25lZCBsb25nICpiaXRfMTc7CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKaW5kZXggMmMyZDJhMDE4NTNhLi5iYzVhZjJkMjkw
OWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCkBAIC0xMzYsNyArMTM2LDYgQEAg
ZGVzY3JpYmVfb2JqKHN0cnVjdCBzZXFfZmlsZSAqbSwgc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaikKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KG9i
ai0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAlzdHJ1Y3Qg
aTkxNV92bWEgKnZtYTsKLQl1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0czsKIAlpbnQgcGlu
X2NvdW50ID0gMDsKIAogCXNlcV9wcmludGYobSwgIiVwSzogJWMlYyVjJWMgJTh6ZEtpQiAlMDJ4
ICUwMnggJXMlcyVzIiwKQEAgLTIyNiwxMCArMjI1LDYgQEAgZGVzY3JpYmVfb2JqKHN0cnVjdCBz
ZXFfZmlsZSAqbSwgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIAllbmdpbmUgPSBp
OTE1X2dlbV9vYmplY3RfbGFzdF93cml0ZV9lbmdpbmUob2JqKTsKIAlpZiAoZW5naW5lKQogCQlz
ZXFfcHJpbnRmKG0sICIgKCVzKSIsIGVuZ2luZS0+bmFtZSk7Ci0KLQlmcm9udGJ1ZmZlcl9iaXRz
ID0gYXRvbWljX3JlYWQoJm9iai0+ZnJvbnRidWZmZXJfYml0cyk7Ci0JaWYgKGZyb250YnVmZmVy
X2JpdHMpCi0JCXNlcV9wcmludGYobSwgIiAoZnJvbnRidWZmZXI6IDB4JTAzeCkiLCBmcm9udGJ1
ZmZlcl9iaXRzKTsKIH0KIAogc3RydWN0IGZpbGVfc3RhdHMgewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmgKaW5kZXggZjk4NzhjYmVmNGQ5Li42NGQ4ZGU0ZDc3MTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
cnYuaApAQCAtMjUwNCwxMCArMjUwNCw2IEBAIGludCBpOTE1X2dlbV9tbWFwX2d0dChzdHJ1Y3Qg
ZHJtX2ZpbGUgKmZpbGVfcHJpdiwgc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJICAgICAgdTMy
IGhhbmRsZSwgdTY0ICpvZmZzZXQpOwogaW50IGk5MTVfZ2VtX21tYXBfZ3R0X3ZlcnNpb24odm9p
ZCk7CiAKLXZvaWQgaTkxNV9nZW1fdHJhY2tfZmIoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9sZCwKLQkJICAgICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpuZXcsCi0JCSAgICAg
ICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzKTsKLQogaW50IF9fbXVzdF9jaGVjayBpOTE1X2dl
bV9zZXRfZ2xvYmFsX3NlcW5vKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHUzMiBzZXFubyk7CiAK
IHN0YXRpYyBpbmxpbmUgYm9vbCBfX2k5MTVfd2VkZ2VkKHN0cnVjdCBpOTE1X2dwdV9lcnJvciAq
ZXJyb3IpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRleCBiNmYzYmFhNzRkYTQuLmM0MmYyMTQ2
Njc1YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBAIC0xMzgsMTcgKzEzOCwxOSBAQCBpOTE1
X2dlbV9waHlzX3B3cml0ZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCXZvaWQg
KnZhZGRyID0gb2JqLT5waHlzX2hhbmRsZS0+dmFkZHIgKyBhcmdzLT5vZmZzZXQ7CiAJY2hhciBf
X3VzZXIgKnVzZXJfZGF0YSA9IHU2NF90b191c2VyX3B0cihhcmdzLT5kYXRhX3B0cik7CiAKLQkv
KiBXZSBtYW51YWxseSBjb250cm9sIHRoZSBkb21haW4gaGVyZSBhbmQgcHJldGVuZCB0aGF0IGl0
CisJLyoKKwkgKiBXZSBtYW51YWxseSBjb250cm9sIHRoZSBkb21haW4gaGVyZSBhbmQgcHJldGVu
ZCB0aGF0IGl0CiAJICogcmVtYWlucyBjb2hlcmVudCBpLmUuIGluIHRoZSBHVFQgZG9tYWluLCBs
aWtlIHNobWVtX3B3cml0ZS4KIAkgKi8KLQlpbnRlbF9mYl9vYmpfaW52YWxpZGF0ZShvYmosIE9S
SUdJTl9DUFUpOworCWludGVsX2Zyb250YnVmZmVyX2ludmFsaWRhdGUob2JqLT5mcm9udGJ1ZmZl
ciwgT1JJR0lOX0NQVSk7CisKIAlpZiAoY29weV9mcm9tX3VzZXIodmFkZHIsIHVzZXJfZGF0YSwg
YXJncy0+c2l6ZSkpCiAJCXJldHVybiAtRUZBVUxUOwogCiAJZHJtX2NsZmx1c2hfdmlydF9yYW5n
ZSh2YWRkciwgYXJncy0+c2l6ZSk7CiAJaW50ZWxfZ3RfY2hpcHNldF9mbHVzaCgmdG9faTkxNShv
YmotPmJhc2UuZGV2KS0+Z3QpOwogCi0JaW50ZWxfZmJfb2JqX2ZsdXNoKG9iaiwgT1JJR0lOX0NQ
VSk7CisJaW50ZWxfZnJvbnRidWZmZXJfZmx1c2gob2JqLT5mcm9udGJ1ZmZlciwgT1JJR0lOX0NQ
VSk7CiAJcmV0dXJuIDA7CiB9CiAKQEAgLTU5Niw3ICs1OTgsNyBAQCBpOTE1X2dlbV9ndHRfcHdy
aXRlX2Zhc3Qoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJZ290byBvdXRfdW5w
aW47CiAJfQogCi0JaW50ZWxfZmJfb2JqX2ludmFsaWRhdGUob2JqLCBPUklHSU5fQ1BVKTsKKwlp
bnRlbF9mcm9udGJ1ZmZlcl9pbnZhbGlkYXRlKG9iai0+ZnJvbnRidWZmZXIsIE9SSUdJTl9DUFUp
OwogCiAJdXNlcl9kYXRhID0gdTY0X3RvX3VzZXJfcHRyKGFyZ3MtPmRhdGFfcHRyKTsKIAlvZmZz
ZXQgPSBhcmdzLT5vZmZzZXQ7CkBAIC02MzcsNyArNjM5LDcgQEAgaTkxNV9nZW1fZ3R0X3B3cml0
ZV9mYXN0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCXVzZXJfZGF0YSArPSBw
YWdlX2xlbmd0aDsKIAkJb2Zmc2V0ICs9IHBhZ2VfbGVuZ3RoOwogCX0KLQlpbnRlbF9mYl9vYmpf
Zmx1c2gob2JqLCBPUklHSU5fQ1BVKTsKKwlpbnRlbF9mcm9udGJ1ZmZlcl9mbHVzaChvYmotPmZy
b250YnVmZmVyLCBPUklHSU5fQ1BVKTsKIAogCWk5MTVfZ2VtX29iamVjdF91bmxvY2tfZmVuY2Uo
b2JqLCBmZW5jZSk7CiBvdXRfdW5waW46CkBAIC03MzAsNyArNzMyLDcgQEAgaTkxNV9nZW1fc2ht
ZW1fcHdyaXRlKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCW9mZnNldCA9IDA7
CiAJfQogCi0JaW50ZWxfZmJfb2JqX2ZsdXNoKG9iaiwgT1JJR0lOX0NQVSk7CisJaW50ZWxfZnJv
bnRidWZmZXJfZmx1c2gob2JqLT5mcm9udGJ1ZmZlciwgT1JJR0lOX0NQVSk7CiAJaTkxNV9nZW1f
b2JqZWN0X3VubG9ja19mZW5jZShvYmosIGZlbmNlKTsKIAogCXJldHVybiByZXQ7CkBAIC0xNzgz
LDM5ICsxNzg1LDYgQEAgaW50IGk5MTVfZ2VtX29wZW4oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKIAlyZXR1cm4gcmV0OwogfQogCi0vKioKLSAq
IGk5MTVfZ2VtX3RyYWNrX2ZiIC0gdXBkYXRlIGZyb250YnVmZmVyIHRyYWNraW5nCi0gKiBAb2xk
OiBjdXJyZW50IEdFTSBidWZmZXIgZm9yIHRoZSBmcm9udGJ1ZmZlciBzbG90cwotICogQG5ldzog
bmV3IEdFTSBidWZmZXIgZm9yIHRoZSBmcm9udGJ1ZmZlciBzbG90cwotICogQGZyb250YnVmZmVy
X2JpdHM6IGJpdG1hc2sgb2YgZnJvbnRidWZmZXIgc2xvdHMKLSAqCi0gKiBUaGlzIHVwZGF0ZXMg
dGhlIGZyb250YnVmZmVyIHRyYWNraW5nIGJpdHMgQGZyb250YnVmZmVyX2JpdHMgYnkgY2xlYXJp
bmcgdGhlbQotICogZnJvbSBAb2xkIGFuZCBzZXR0aW5nIHRoZW0gaW4gQG5ldy4gQm90aCBAb2xk
IGFuZCBAbmV3IGNhbiBiZSBOVUxMLgotICovCi12b2lkIGk5MTVfZ2VtX3RyYWNrX2ZiKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvbGQsCi0JCSAgICAgICBzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqbmV3LAotCQkgICAgICAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0cykKLXsKLQkv
KiBDb250cm9sIG9mIGluZGl2aWR1YWwgYml0cyB3aXRoaW4gdGhlIG1hc2sgYXJlIGd1YXJkZWQg
YnkKLQkgKiB0aGUgb3duaW5nIHBsYW5lLT5tdXRleCwgaS5lLiB3ZSBjYW4gbmV2ZXIgc2VlIGNv
bmN1cnJlbnQKLQkgKiBtYW5pcHVsYXRpb24gb2YgaW5kaXZpZHVhbCBiaXRzLiBCdXQgc2luY2Ug
dGhlIGJpdGZpZWxkIGFzIGEgd2hvbGUKLQkgKiBpcyB1cGRhdGVkIHVzaW5nIFJNVywgd2UgbmVl
ZCB0byB1c2UgYXRvbWljcyBpbiBvcmRlciB0byB1cGRhdGUKLQkgKiB0aGUgYml0cy4KLQkgKi8K
LQlCVUlMRF9CVUdfT04oSU5URUxfRlJPTlRCVUZGRVJfQklUU19QRVJfUElQRSAqIEk5MTVfTUFY
X1BJUEVTID4KLQkJICAgICBCSVRTX1BFUl9UWVBFKGF0b21pY190KSk7Ci0KLQlpZiAob2xkKSB7
Ci0JCVdBUk5fT04oIShhdG9taWNfcmVhZCgmb2xkLT5mcm9udGJ1ZmZlcl9iaXRzKSAmIGZyb250
YnVmZmVyX2JpdHMpKTsKLQkJYXRvbWljX2FuZG5vdChmcm9udGJ1ZmZlcl9iaXRzLCAmb2xkLT5m
cm9udGJ1ZmZlcl9iaXRzKTsKLQl9Ci0KLQlpZiAobmV3KSB7Ci0JCVdBUk5fT04oYXRvbWljX3Jl
YWQoJm5ldy0+ZnJvbnRidWZmZXJfYml0cykgJiBmcm9udGJ1ZmZlcl9iaXRzKTsKLQkJYXRvbWlj
X29yKGZyb250YnVmZmVyX2JpdHMsICZuZXctPmZyb250YnVmZmVyX2JpdHMpOwotCX0KLX0KLQog
I2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQogI2luY2x1ZGUgInNlbGZ0
ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyIKICNpbmNsdWRlICJzZWxmdGVzdHMvaTkxNV9nZW0uYyIK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3ZtYS5jCmluZGV4IGY0YmM1YmUzY2ZlNS4uNDBmZDA4YWI0N2RjIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKQEAgLTkyNyw4ICs5MjcsMTAgQEAgaW50IGk5MTVfdm1h
X21vdmVfdG9fYWN0aXZlKHN0cnVjdCBpOTE1X3ZtYSAqdm1hLAogCWlmIChmbGFncyAmIEVYRUNf
T0JKRUNUX1dSSVRFKSB7CiAJCW9iai0+d3JpdGVfZG9tYWluID0gSTkxNV9HRU1fRE9NQUlOX1JF
TkRFUjsKIAotCQlpZiAoaW50ZWxfZmJfb2JqX2ludmFsaWRhdGUob2JqLCBPUklHSU5fQ1MpKQot
CQkJX19pOTE1X2FjdGl2ZV9yZXF1ZXN0X3NldCgmb2JqLT5mcm9udGJ1ZmZlcl93cml0ZSwgcnEp
OworCQlpZiAoaW50ZWxfZnJvbnRidWZmZXJfaW52YWxpZGF0ZShvYmotPmZyb250YnVmZmVyLCBP
UklHSU5fQ1MpKQorCQkJaTkxNV9hY3RpdmVfcmVmKCZvYmotPmZyb250YnVmZmVyLT53cml0ZSwK
KwkJCQkJcnEtPmZlbmNlLmNvbnRleHQsCisJCQkJCXJxKTsKIAogCQlvYmotPnJlYWRfZG9tYWlu
cyA9IDA7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2Lmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcnYuaAppbmRleCA3NzBmOWY2YWFkODQuLmY3
MzE3OWRlNjFhMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgKQEAgLTY5LDYgKzY5LDcgQEAg
ZW51bSBpbnRlbF9vdXRwdXRfdHlwZSB7CiAKIHN0cnVjdCBpbnRlbF9mcmFtZWJ1ZmZlciB7CiAJ
c3RydWN0IGRybV9mcmFtZWJ1ZmZlciBiYXNlOworCXN0cnVjdCBpbnRlbF9mcm9udGJ1ZmZlciAq
ZnJvbnRidWZmZXI7CiAJc3RydWN0IGludGVsX3JvdGF0aW9uX2luZm8gcm90X2luZm87CiAKIAkv
KiBmb3IgZWFjaCBwbGFuZSBpbiB0aGUgbm9ybWFsIEdUVCB2aWV3ICovCi0tIAoyLjIyLjAKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBt
YWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

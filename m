Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 279A5286895
	for <lists+intel-gfx@lfdr.de>; Wed,  7 Oct 2020 21:49:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8D2456E9A5;
	Wed,  7 Oct 2020 19:49:16 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E4FE36E9A5
 for <intel-gfx@lists.freedesktop.org>; Wed,  7 Oct 2020 19:49:14 +0000 (UTC)
IronPort-SDR: r7HGfY/JAC6Pmitl9inR04ejCzATU6iYat/yOYiFJ/kcRVLLKFKzxQyOTOMc2kcnSXY3d0V69k
 vWhUYWq63aNA==
X-IronPort-AV: E=McAfee;i="6000,8403,9767"; a="226703816"
X-IronPort-AV: E=Sophos;i="5.77,348,1596524400"; d="scan'208";a="226703816"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Oct 2020 12:22:44 -0700
IronPort-SDR: +OqlXC3+WEM9Pyy97YqGH3S/+D3gKwHUTy0B9fWAlX9wduYv1ZG4s/i9TbtDbidKqV+QbCaSxy
 kIqeF6NaTnyw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,348,1596524400"; d="scan'208";a="354129856"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by FMSMGA003.fm.intel.com with SMTP; 07 Oct 2020 12:22:41 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 07 Oct 2020 22:22:41 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  7 Oct 2020 22:22:41 +0300
Message-Id: <20201007192241.10241-1-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201006185809.4655-1-ville.syrjala@linux.intel.com>
References: <20201006185809.4655-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 1/3] drm/i915: Reorder hpd init vs. display
 resume
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkN1
cnJlbnRseSB3ZSBjYWxsIC5ocGRfaXJxX3NldHVwKCkgZGlyZWN0bHkganVzdCBiZWZvcmUgZGlz
cGxheQpyZXN1bWUsIGFuZCBmb2xsb3cgaXQgd2l0aCBhbm90aGVyIGNhbGwgdmlhIGludGVsX2hw
ZF9pbml0KCkKanVzdCBhZnRlcndhcmRzLiBBc3N1bWluZyB0aGUgaHBkIHBpbnMgYXJlIG1hcmtl
ZCBhcyBlbmFibGVkCmR1cmluZyB0aGUgb3Blbi1jb2RlZCBjYWxsIHRoZXNlIHR3byB0aGluZ3Mg
ZG8gZXhhY3RseSB0aGUKc2FtZSB0aGluZyAoaWUuIGVuYWJsZSBIUEQgaW50ZXJydXB0cykuIFdo
aWNoIGV2ZW4gbWFrZXMgc2Vuc2UKc2luY2Ugd2UgZGVmaW5pdGVseSBuZWVkIHdvcmtpbmcgSFBE
IGludGVycnVwdHMgZm9yIE1TVCBzaWRlYmFuZApkdXJpbmcgdGhlIGRpc3BsYXkgcmVzdW1lLgoK
U28gbGV0J3MgbnVrZSB0aGUgb3Blbi1jb2RlZCBjYWxsIGFuZCBtb3ZlIHRoZSBpbnRlbF9ocGRf
aW5pdCgpCmNhbGwgZWFybGllci4gSG93ZXZlciB3ZSBuZWVkIHRvIGxlYXZlIHRoZSBwb2xsX2lu
aXRfd29yayBzdHVmZgpiZWhpbmQgYWZ0ZXIgdGhlIGRpc3BsYXkgcmVzdW1lIGFzIHRoYXQgd2ls
bCB0cmlnZ2VyIGRpc3BsYXkKZGV0ZWN0aW9uIHdoaWxlIHdlJ3JlIHJlc3VtaW5nLiBXZSBkb24n
dCB3YW50IHRoYXQgdHJhbXBsaW5nIG92ZXIKdGhlIGRpc3BsYXkgcmVzdW1lIHByb2Nlc3MuIFRv
IG1ha2UgdGhpcyBhIGJpdCBtb3JlIHN5bW1ldHJpYwp3ZSB0dXJuIHRoaXMgaW50byBhIGludGVs
X2hwZF9wb2xsX3tlbmFibGUsZGlzYWJsZX0oKSBwYWlyLgpTbyB3ZSBlbmQgdXAgd2l0aCB0aGUg
Zm9sbG93aW5nIHRyYW5zZm9ybWF0aW9uOgppbnRlbF9ocGRfcG9sbF9pbml0KCkgLT4gaW50ZWxf
aHBkX3BvbGxfZW5hYmxlKCkKbG9uZSBpbnRlbF9ocGRfaW5pdCgpIC0+IGludGVsX2hwZF9pbml0
KCkraW50ZWxfaHBkX3BvbGxfZGlzYWJsZSgpCi5ocGRfaXJxX3NldHVwKCkrcmVzdW1lK2ludGVs
X2hwZF9pbml0KCkgLT4gaW50ZWxfaHBkX2luaXQoKStyZXN1bWUraW50ZWxfaHBkX3BvbGxfZGlz
YWJsZSgpCgpJZiB3ZSByZWFsbHkgd291bGQgbGlrZSB0byBwcmV2ZW50IGFsbCAqbG9uZyogSFBE
IHByb2Nlc3NpbmcgZHVyaW5nCmRpc3BsYXkgcmVzdW1lIHdlJ2QgbmVlZCBzb21lIGtpbmQgb2Yg
c29mdHdhcmUgbWVjaGFuaXNtIHRvIHNpbXBseQppZ25vcmUgYWxsIGxvbmcgSFBEcy4gQ3VycmVu
dGx5IHdlIGFwcGVhciB0byBoYXZlIHRoYXQganVzdCBmb3IKZmJkZXYgdmlhIGlmYmRldi0+aHBk
X3N1c3BlbmRlZC4gU2luY2Ugd2UgYXJlbid0IGV4cGxvZGluZyBsZWZ0IGFuZApyaWdodCBhbGwg
dGhlIHRpbWUgSSBndWVzcyB0aGF0J3MgbW9zdGx5IHN1ZmZpY2llbnQuCgpGb3IgYSBiaXQgb2Yg
aGlzdG9yeSBvbiB0aGlzLCB3ZSBmaXJzdCBnb3QgYSBtZWNoYW5pc20gdG8gYmxvY2sKaG90cGx1
ZyBwcm9jZXNzaW5nIGR1cmluZyBzdXNwZW5kIGluIGNvbW1pdCAxNTIzOTA5OWQ3YTcgKCJkcm0v
aTkxNToKZW5hYmxlIGlycXMgZWFybGllciB3aGVuIHJlc3VtaW5nIikgb24gYWNjb3VudCBvZiBt
b3ZpbmcgdGhlIGlycSBlbmFibGUKZWFybGllci4gVGhpcyB0aGVuIGdvdCByZW1vdmVkIGluIGNv
bW1pdCA1MGMzZGM5NzBhMDkgKCJkcm0vZmItaGVscGVyOgpGaXggaHBkIHZzLiBpbml0aWFsIGNv
bmZpZyByYWNlcyIpIGJlY2F1c2UgdGhlIGZkZXYgaW5pdGlhbCBjb25maWcKZ290IHB1c2hlZCB0
byBhIGxhdGVyIHBvaW50LiBUaGUgc2Vjb25kIGFkLWhvYyBocGRfaXJxX3NldHVwKCkgZm9yCnJl
c3VtZSB3YXMgYWRkZWQgaW4gY29tbWl0IDBlMzJiMzljZWVkNiAoImRybS9pOTE1OiBhZGQgRFAg
MS4yIE1TVApzdXBwb3J0ICh2MC43KSIpIHRvIGJlIGFibGUgdG8gZG8gTVNUIHNpZGViYW5kIGR1
cmluZyB0aGUgcmVzdW1lLgpBbmQgZmluYWxseSB3ZSBnb3QgYSBwYXJ0aWFsIHJlc3VycmVjdGlv
biBvZiB0aGUgaHBkIGJsb2NraW5nCm1lY2hhbmlzbSBpbiBjb21taXQgZThhOGZlZGQ1N2ZkICgi
ZHJtL2k5MTU6IEJsb2NrIGZiZGV2IEhQRApwcm9jZXNzaW5nIGR1cmluZyBzdXNwZW5kIiksIGJ1
dCB0aGlzIHRpbWUgaXQgb25seSBwcmV2ZW50IGZiZGV2CmZyb20gaGFuZGxpbmcgaHBkIHdoaWxl
IHJlc3VtaW5nLgoKdjI6IExlYXZlIHRoZSBwb2xsX2luaXRfd29yayBiZWhpbmQKCkNjOiBMeXVk
ZSBQYXVsIDxseXVkZUByZWRoYXQuY29tPgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJqw6Rsw6Qg
PHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICA5ICsrLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfcG93ZXIuYyAgICB8ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2hvdHBsdWcuYyAgfCA0MiArKysrKysrKysrKysrKy0tLS0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuaCAgfCAgMyArLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuYyAgICAgICAgICAgICAgIHwgMjMgKysrKy0tLS0tLQogNSBm
aWxlcyBjaGFuZ2VkLCA0NiBpbnNlcnRpb25zKCspLCAzNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IDkwN2UxZDE1NTQ0
My4uMGQ1NjA3YWU5N2M0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYwpAQCAtNTAzNiwxOCArNTAzNiwxNSBAQCB2b2lkIGludGVsX2ZpbmlzaF9yZXNl
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWludGVsX3Bwc191bmxvY2tf
cmVnc193YShkZXZfcHJpdik7CiAJCWludGVsX21vZGVzZXRfaW5pdF9odyhkZXZfcHJpdik7CiAJ
CWludGVsX2luaXRfY2xvY2tfZ2F0aW5nKGRldl9wcml2KTsKLQotCQlzcGluX2xvY2tfaXJxKCZk
ZXZfcHJpdi0+aXJxX2xvY2spOwotCQlpZiAoZGV2X3ByaXYtPmRpc3BsYXkuaHBkX2lycV9zZXR1
cCkKLQkJCWRldl9wcml2LT5kaXNwbGF5LmhwZF9pcnFfc2V0dXAoZGV2X3ByaXYpOwotCQlzcGlu
X3VubG9ja19pcnEoJmRldl9wcml2LT5pcnFfbG9jayk7CisJCWludGVsX2hwZF9pbml0KGRldl9w
cml2KTsKKwkJaW50ZWxfaHBkX3BvbGxfZGlzYWJsZShkZXZfcHJpdik7CiAKIAkJcmV0ID0gX19p
bnRlbF9kaXNwbGF5X3Jlc3VtZShkZXYsIHN0YXRlLCBjdHgpOwogCQlpZiAocmV0KQogCQkJZHJt
X2VycigmZGV2X3ByaXYtPmRybSwKIAkJCQkiUmVzdG9yaW5nIG9sZCBzdGF0ZSBmYWlsZWQgd2l0
aCAlaVxuIiwgcmV0KTsKIAotCQlpbnRlbF9ocGRfaW5pdChkZXZfcHJpdik7CisJCWludGVsX2hw
ZF9wb2xsX2Rpc2FibGUoZGV2X3ByaXYpOwogCX0KIAogCWRybV9hdG9taWNfc3RhdGVfcHV0KHN0
YXRlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3Bvd2VyLmMKaW5kZXggNzI3N2U1OGIwMWYxLi4yMGRkYzU0Mjk4Y2IgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCkBAIC0xNDI0
LDYgKzE0MjQsNyBAQCBzdGF0aWMgdm9pZCB2bHZfZGlzcGxheV9wb3dlcl93ZWxsX2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQlyZXR1cm47CiAKIAlpbnRlbF9ocGRf
aW5pdChkZXZfcHJpdik7CisJaW50ZWxfaHBkX3BvbGxfZGlzYWJsZShkZXZfcHJpdik7CiAKIAkv
KiBSZS1lbmFibGUgdGhlIEFEUEEsIGlmIHdlIGhhdmUgb25lICovCiAJZm9yX2VhY2hfaW50ZWxf
ZW5jb2RlcigmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgewpAQCAtMTQ0OSw3ICsxNDUwLDcgQEAg
c3RhdGljIHZvaWQgdmx2X2Rpc3BsYXlfcG93ZXJfd2VsbF9kZWluaXQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogCiAJLyogUHJldmVudCB1cyBmcm9tIHJlLWVuYWJsaW5nIHBv
bGxpbmcgb24gYWNjaWRlbnQgaW4gbGF0ZSBzdXNwZW5kICovCiAJaWYgKCFkZXZfcHJpdi0+ZHJt
LmRldi0+cG93ZXIuaXNfc3VzcGVuZGVkKQotCQlpbnRlbF9ocGRfcG9sbF9pbml0KGRldl9wcml2
KTsKKwkJaW50ZWxfaHBkX3BvbGxfZW5hYmxlKGRldl9wcml2KTsKIH0KIAogc3RhdGljIHZvaWQg
dmx2X2Rpc3BsYXlfcG93ZXJfd2VsbF9lbmFibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9o
b3RwbHVnLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuYwpp
bmRleCA1YzU4YzFlZDY0OTMuLjMwYmQ0Yzg2ZDE0NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9ob3RwbHVnLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9ob3RwbHVnLmMKQEAgLTU4NCw3ICs1ODQsNyBAQCB2b2lkIGludGVs
X2hwZF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAgKiBU
aGlzIGlzIGEgc2VwYXJhdGUgc3RlcCBmcm9tIGludGVycnVwdCBlbmFibGluZyB0byBzaW1wbGlm
eSB0aGUgbG9ja2luZyBydWxlcwogICogaW4gdGhlIGRyaXZlciBsb2FkIGFuZCByZXN1bWUgY29k
ZS4KICAqCi0gKiBBbHNvIHNlZTogaW50ZWxfaHBkX3BvbGxfaW5pdCgpLCB3aGljaCBlbmFibGVz
IGNvbm5lY3RvciBwb2xsaW5nCisgKiBBbHNvIHNlZTogaW50ZWxfaHBkX3BvbGxfZW5hYmxlKCkg
YW5kIGludGVsX2hwZF9wb2xsX2Rpc2FibGUoKS4KICAqLwogdm9pZCBpbnRlbF9ocGRfaW5pdChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CkBAIC01OTUsOSArNTk1LDYgQEAg
dm9pZCBpbnRlbF9ocGRfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJ
CWRldl9wcml2LT5ob3RwbHVnLnN0YXRzW2ldLnN0YXRlID0gSFBEX0VOQUJMRUQ7CiAJfQogCi0J
V1JJVEVfT05DRShkZXZfcHJpdi0+aG90cGx1Zy5wb2xsX2VuYWJsZWQsIGZhbHNlKTsKLQlzY2hl
ZHVsZV93b3JrKCZkZXZfcHJpdi0+aG90cGx1Zy5wb2xsX2luaXRfd29yayk7Ci0KIAkvKgogCSAq
IEludGVycnVwdCBzZXR1cCBpcyBhbHJlYWR5IGd1YXJhbnRlZWQgdG8gYmUgc2luZ2xlLXRocmVh
ZGVkLCB0aGlzIGlzCiAJICoganVzdCB0byBtYWtlIHRoZSBhc3NlcnRfc3Bpbl9sb2NrZWQgY2hl
Y2tzIGhhcHB5LgpAQCAtNjU0LDEyICs2NTEsMTIgQEAgc3RhdGljIHZvaWQgaTkxNV9ocGRfcG9s
bF9pbml0X3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogfQogCiAvKioKLSAqIGludGVs
X2hwZF9wb2xsX2luaXQgLSBlbmFibGVzL2Rpc2FibGVzIHBvbGxpbmcgZm9yIGNvbm5lY3RvcnMg
d2l0aCBocGQKKyAqIGludGVsX2hwZF9wb2xsX2VuYWJsZSAtIGVuYWJsZSBwb2xsaW5nIGZvciBj
b25uZWN0b3JzIHdpdGggaHBkCiAgKiBAZGV2X3ByaXY6IGk5MTUgZGV2aWNlIGluc3RhbmNlCiAg
KgotICogVGhpcyBmdW5jdGlvbiBlbmFibGVzIHBvbGxpbmcgZm9yIGFsbCBjb25uZWN0b3JzLCBy
ZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3IKLSAqIG5vdCB0aGV5IHN1cHBvcnQgaG90cGx1ZyBkZXRl
Y3Rpb24uIFVuZGVyIGNlcnRhaW4gY29uZGl0aW9ucyBIUEQgbWF5IG5vdCBiZQotICogZnVuY3Rp
b25hbC4gT24gbW9zdCBJbnRlbCBHUFVzLCB0aGlzIGhhcHBlbnMgd2hlbiB3ZSBlbnRlciBydW50
aW1lIHN1c3BlbmQuCisgKiBUaGlzIGZ1bmN0aW9uIGVuYWJsZXMgcG9sbGluZyBmb3IgYWxsIGNv
bm5lY3RvcnMgd2hpY2ggc3VwcG9ydCBIUEQuCisgKiBVbmRlciBjZXJ0YWluIGNvbmRpdGlvbnMg
SFBEIG1heSBub3QgYmUgZnVuY3Rpb25hbC4gT24gbW9zdCBJbnRlbCBHUFVzLAorICogdGhpcyBo
YXBwZW5zIHdoZW4gd2UgZW50ZXIgcnVudGltZSBzdXNwZW5kLgogICogT24gVmFsbGV5dmlldyBh
bmQgQ2hlcnJ5dmlldyBzeXN0ZW1zLCB0aGlzIGFsc28gaGFwcGVucyB3aGVuIHdlIHNodXQgb2Zm
IGFsbAogICogb2YgdGhlIHBvd2Vyd2VsbHMuCiAgKgpAQCAtNjY3LDkgKzY2NCw5IEBAIHN0YXRp
YyB2b2lkIGk5MTVfaHBkX3BvbGxfaW5pdF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykK
ICAqIGRldi0+bW9kZV9jb25maWcubXV0ZXgsIHdlIGRvIHRoZSBhY3R1YWwgaG90cGx1ZyBlbmFi
bGluZyBpbiBhIHNlcGVyYXRlCiAgKiB3b3JrZXIuCiAgKgotICogQWxzbyBzZWU6IGludGVsX2hw
ZF9pbml0KCksIHdoaWNoIHJlc3RvcmVzIGhwZCBoYW5kbGluZy4KKyAqIEFsc28gc2VlOiBpbnRl
bF9ocGRfaW5pdCgpIGFuZCBpbnRlbF9ocGRfcG9sbF9kaXNhYmxlKCkuCiAgKi8KLXZvaWQgaW50
ZWxfaHBkX3BvbGxfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCit2b2lk
IGludGVsX2hwZF9wb2xsX2VuYWJsZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiB7CiAJV1JJVEVfT05DRShkZXZfcHJpdi0+aG90cGx1Zy5wb2xsX2VuYWJsZWQsIHRydWUpOwog
CkBAIC02ODIsNiArNjc5LDMxIEBAIHZvaWQgaW50ZWxfaHBkX3BvbGxfaW5pdChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJc2NoZWR1bGVfd29yaygmZGV2X3ByaXYtPmhvdHBs
dWcucG9sbF9pbml0X3dvcmspOwogfQogCisvKioKKyAqIGludGVsX2hwZF9wb2xsX2Rpc2FibGUg
LSBkaXNhYmxlIHBvbGxpbmcgZm9yIGNvbm5lY3RvcnMgd2l0aCBocGQKKyAqIEBkZXZfcHJpdjog
aTkxNSBkZXZpY2UgaW5zdGFuY2UKKyAqCisgKiBUaGlzIGZ1bmN0aW9uIGRpc2FibGVzIHBvbGxp
bmcgZm9yIGFsbCBjb25uZWN0b3JzIHdoaWNoIHN1cHBvcnQgSFBELgorICogVW5kZXIgY2VydGFp
biBjb25kaXRpb25zIEhQRCBtYXkgbm90IGJlIGZ1bmN0aW9uYWwuIE9uIG1vc3QgSW50ZWwgR1BV
cywKKyAqIHRoaXMgaGFwcGVucyB3aGVuIHdlIGVudGVyIHJ1bnRpbWUgc3VzcGVuZC4KKyAqIE9u
IFZhbGxleXZpZXcgYW5kIENoZXJyeXZpZXcgc3lzdGVtcywgdGhpcyBhbHNvIGhhcHBlbnMgd2hl
biB3ZSBzaHV0IG9mZiBhbGwKKyAqIG9mIHRoZSBwb3dlcndlbGxzLgorICoKKyAqIFNpbmNlIHRo
aXMgZnVuY3Rpb24gY2FuIGdldCBjYWxsZWQgaW4gY29udGV4dHMgd2hlcmUgd2UncmUgYWxyZWFk
eSBob2xkaW5nCisgKiBkZXYtPm1vZGVfY29uZmlnLm11dGV4LCB3ZSBkbyB0aGUgYWN0dWFsIGhv
dHBsdWcgZW5hYmxpbmcgaW4gYSBzZXBlcmF0ZQorICogd29ya2VyLgorICoKKyAqIEFsc28gdXNl
ZCBkdXJpbmcgZHJpdmVyIGluaXQgdG8gaW5pdGlhbGl6ZSBjb25uZWN0b3ItPnBvbGxlZAorICog
YXBwcm9wcmlhdGVseSBmb3IgYWxsIGNvbm5lY3RvcnMuCisgKgorICogQWxzbyBzZWU6IGludGVs
X2hwZF9pbml0KCkgYW5kIGludGVsX2hwZF9wb2xsX2VuYWJsZSgpLgorICovCit2b2lkIGludGVs
X2hwZF9wb2xsX2Rpc2FibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorewor
CVdSSVRFX09OQ0UoZGV2X3ByaXYtPmhvdHBsdWcucG9sbF9lbmFibGVkLCBmYWxzZSk7CisJc2No
ZWR1bGVfd29yaygmZGV2X3ByaXYtPmhvdHBsdWcucG9sbF9pbml0X3dvcmspOworfQorCiB2b2lk
IGludGVsX2hwZF9pbml0X3dvcmsoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQog
ewogCUlOSVRfREVMQVlFRF9XT1JLKCZkZXZfcHJpdi0+aG90cGx1Zy5ob3RwbHVnX3dvcmssCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hvdHBsdWcuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5oCmluZGV4IGE3MDRk
N2M5NGQxNi4uYjg3ZTk1ZDYwNmU2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2hvdHBsdWcuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2hvdHBsdWcuaApAQCAtMTQsNyArMTQsOCBAQCBzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9w
b3J0Owogc3RydWN0IGludGVsX2VuY29kZXI7CiBlbnVtIHBvcnQ7CiAKLXZvaWQgaW50ZWxfaHBk
X3BvbGxfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwordm9pZCBpbnRl
bF9ocGRfcG9sbF9lbmFibGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKK3Zv
aWQgaW50ZWxfaHBkX3BvbGxfZGlzYWJsZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpOwogZW51bSBpbnRlbF9ob3RwbHVnX3N0YXRlIGludGVsX2VuY29kZXJfaG90cGx1ZyhzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkJICAgICAgIHN0cnVjdCBpbnRlbF9jb25u
ZWN0b3IgKmNvbm5lY3Rvcik7CiB2b2lkIGludGVsX2hwZF9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCBlYmMx
NTA2NmQxMDguLjNmYzdiOTk2ZmM0OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC0xMjI2
LDI2ICsxMjI2LDE1IEBAIHN0YXRpYyBpbnQgaTkxNV9kcm1fcmVzdW1lKHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYpCiAKIAlpbnRlbF9tb2Rlc2V0X2luaXRfaHcoZGV2X3ByaXYpOwogCWludGVsX2lu
aXRfY2xvY2tfZ2F0aW5nKGRldl9wcml2KTsKKwlpbnRlbF9ocGRfaW5pdChkZXZfcHJpdik7CiAK
LQlzcGluX2xvY2tfaXJxKCZkZXZfcHJpdi0+aXJxX2xvY2spOwotCWlmIChkZXZfcHJpdi0+ZGlz
cGxheS5ocGRfaXJxX3NldHVwKQotCQlkZXZfcHJpdi0+ZGlzcGxheS5ocGRfaXJxX3NldHVwKGRl
dl9wcml2KTsKLQlzcGluX3VubG9ja19pcnEoJmRldl9wcml2LT5pcnFfbG9jayk7Ci0KKwkvKiBN
U1Qgc2lkZWJhbmQgcmVxdWlyZXMgSFBEIGludGVycnVwdHMgZW5hYmxlZCAqLwogCWludGVsX2Rw
X21zdF9yZXN1bWUoZGV2X3ByaXYpOwotCiAJaW50ZWxfZGlzcGxheV9yZXN1bWUoZGV2KTsKIAor
CWludGVsX2hwZF9wb2xsX2Rpc2FibGUoZGV2X3ByaXYpOwogCWRybV9rbXNfaGVscGVyX3BvbGxf
ZW5hYmxlKGRldik7CiAKLQkvKgotCSAqIC4uLiBidXQgYWxzbyBuZWVkIHRvIG1ha2Ugc3VyZSB0
aGF0IGhvdHBsdWcgcHJvY2Vzc2luZwotCSAqIGRvZXNuJ3QgY2F1c2UgaGF2b2MuIExpa2UgaW4g
dGhlIGRyaXZlciBsb2FkIGNvZGUgd2UgZG9uJ3QKLQkgKiBib3RoZXIgd2l0aCB0aGUgdGlueSBy
YWNlIGhlcmUgd2hlcmUgd2UgbWlnaHQgbG9zZSBob3RwbHVnCi0JICogbm90aWZpY2F0aW9ucy4K
LQkgKiAqLwotCWludGVsX2hwZF9pbml0KGRldl9wcml2KTsKLQogCWludGVsX29wcmVnaW9uX3Jl
c3VtZShkZXZfcHJpdik7CiAKIAlpbnRlbF9mYmRldl9zZXRfc3VzcGVuZChkZXYsIEZCSU5GT19T
VEFURV9SVU5OSU5HLCBmYWxzZSk7CkBAIC0xNTU3LDcgKzE1NDYsNyBAQCBzdGF0aWMgaW50IGlu
dGVsX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZGV2aWNlICprZGV2KQogCWFzc2VydF9mb3JjZXdh
a2VzX2luYWN0aXZlKCZkZXZfcHJpdi0+dW5jb3JlKTsKIAogCWlmICghSVNfVkFMTEVZVklFVyhk
ZXZfcHJpdikgJiYgIUlTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQotCQlpbnRlbF9ocGRfcG9sbF9p
bml0KGRldl9wcml2KTsKKwkJaW50ZWxfaHBkX3BvbGxfZW5hYmxlKGRldl9wcml2KTsKIAogCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiRGV2aWNlIHN1c3BlbmRlZFxuIik7CiAJcmV0dXJu
IDA7CkBAIC0xNjAyLDggKzE1OTEsMTAgQEAgc3RhdGljIGludCBpbnRlbF9ydW50aW1lX3Jlc3Vt
ZShzdHJ1Y3QgZGV2aWNlICprZGV2KQogCSAqIHBvd2VyIHdlbGwsIHNvIGhwZCBpcyByZWluaXRp
YWxpemVkIGZyb20gdGhlcmUuIEZvcgogCSAqIGV2ZXJ5b25lIGVsc2UgZG8gaXQgaGVyZS4KIAkg
Ki8KLQlpZiAoIUlTX1ZBTExFWVZJRVcoZGV2X3ByaXYpICYmICFJU19DSEVSUllWSUVXKGRldl9w
cml2KSkKKwlpZiAoIUlTX1ZBTExFWVZJRVcoZGV2X3ByaXYpICYmICFJU19DSEVSUllWSUVXKGRl
dl9wcml2KSkgewogCQlpbnRlbF9ocGRfaW5pdChkZXZfcHJpdik7CisJCWludGVsX2hwZF9wb2xs
X2Rpc2FibGUoZGV2X3ByaXYpOworCX0KIAogCWludGVsX2VuYWJsZV9pcGMoZGV2X3ByaXYpOwog
Ci0tIAoyLjI2LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdm
eAo=

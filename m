Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 28738DC3FD
	for <lists+intel-gfx@lfdr.de>; Fri, 18 Oct 2019 13:30:25 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 720086E11C;
	Fri, 18 Oct 2019 11:30:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9B2956EB1F
 for <intel-gfx@lists.freedesktop.org>; Fri, 18 Oct 2019 11:30:16 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Oct 2019 04:30:16 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,311,1566889200"; d="scan'208";a="348052339"
Received: from unknown (HELO
 genxfsim-Shark-Bay-Client-platform.iind.intel.com) ([10.223.34.144])
 by orsmga004.jf.intel.com with ESMTP; 18 Oct 2019 04:30:14 -0700
From: Swati Sharma <swati2.sharma@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 18 Oct 2019 16:51:33 +0530
Message-Id: <20191018112134.4886-2-swati2.sharma@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191018112134.4886-1-swati2.sharma@intel.com>
References: <20191018112134.4886-1-swati2.sharma@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/2] [v7] drm/i915/color: Extract icl_read_luts()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yIGljbCssIGhhdmUgaHcgcmVhZCBvdXQgdG8gY3JlYXRlIGh3IGJsb2Igb2YgZ2FtbWEKbHV0
IHZhbHVlcy4gaWNsKyBwbGF0Zm9ybXMgc3VwcG9ydHMgbXVsdGkgc2VnbWVudGVkIGdhbW1hCm1v
ZGUgYnkgZGVmYXVsdCwgYWRkIGh3IGx1dCBjcmVhdGlvbiBmb3IgdGhpcyBtb2RlLgoKVGhpcyB3
aWxsIGJlIHVzZWQgdG8gdmFsaWRhdGUgZ2FtbWEgcHJvZ3JhbW1pbmcgdXNpbmcgZHNiCihkaXNw
bGF5IHN0YXRlIGJ1ZmZlcikgd2hpY2ggaXMgYSB0Z2wgc3BlY2lmaWMgZmVhdHVyZS4KCk1ham9y
IGNoYW5nZSBkb25lLXJlbW92YWwgb2YgcmVhZG91dHMgb2YgY29hcnNlIGFuZCBmaW5lIHNlZ21l
bnRzCmJlY2F1c2UgUEFMX1BSRUNfREFUQSByZWdpc3RlciBpc24ndCBnaXZpbmcgcHJvcG9lciB2
YWx1ZXMuClN0YXRlIGNoZWNrZXIgbGltaXRlZCBvbmx5IHRvICJmaW5lIHNlZ21lbnQiCgp2Mjog
LXJlYWRvdXQgY29kZSBmb3IgbXVsdGlzZWdtZW50ZWQgZ2FtbWEgaGFzIHRvIGNvbWUKICAgICB1
cCB3aXRoIHNvbWUgaW50ZXJtZWRpYXRlIGVudHJpZXMgdGhhdCBhcmVuJ3QgcHJlc2VydmVkCiAg
ICAgaW4gaGFyZHdhcmUgKEphbmkgTikKICAgIC1saW5lYXIgaW50ZXJwb2xhdGlvbiAoVmlsbGUp
CiAgICAtbW92ZWQgY29tbW9uIGNvZGUgdG8gY2hlY2sgZ2FtbWFfZW5hYmxlIHRvIHNwZWNpZmlj
IGZ1bmNzLAogICAgIHNpbmNlIGljbCBkb2Vzbid0IHN1cHBvcnQgdGhhdAp2MzogLXVzZSB1MTYg
aW5zdGVhZCBvZiBfX3UxNiBbSmFuaSBOXQogICAgLXVzZWQgc2luZ2xlIGx1dCBbSmFuaSBOXQog
ICAgLWltcHJvdmVkIGFuZCBtb3JlIHJlYWRhYmxlIGZvciBsb29wcyBbSmFuaSBOXQogICAgLXJl
YWQgdmFsdWVzIGRpcmVjdGx5IHRvIGFjdHVhbCBsb2NhdGlvbnMgYW5kIHRoZW4gZmlsbCBnYXBz
IFtKYW5pIE5dCiAgICAtbW92ZWQgY2xlYW5pbmcgdG8gcGF0Y2ggMSBbSmFuaSBOXQogICAgLXJl
bmFtZWQgaWNsX3JlYWRfbHV0X211bHRpX3NlZygpIHRvIGljbF9yZWFkX2x1dF9tdWx0aV9zZWdt
ZW50IHRvCiAgICAgbWFrZSBpdCBzaW1pbGFyIHRvIGljbF9sb2FkX2x1dHMoKQogICAgLXJlbmFt
ZWQgaWNsX2NvbXB1dGVfaW50ZXJwb2xhdGVkX2dhbW1hX2Jsb2IoKSB0bwogICAgIGljbF9jb21w
dXRlX2ludGVycG9sYXRlZF9nYW1tYV9sdXRfdmFsdWVzKCkgbW9yZSBzZW5zaWJsZSwgSSBndWVz
cwp2NDogLXJlbW92ZWQgaW50ZXJwb2xhdGVkIGZ1bmMgZm9yIGNyZWF0aW5nIGdhbW1hIGx1dCB2
YWx1ZXMKICAgIC1yZW1vdmVkIHJlYWRvdXRzIG9mIGZpbmUgYW5kIGNvYXJzZSBzZWdtZW50cywg
ZmFpbHVyZSB0byByZWFkIFBBTF9QUkVDX0RBVEEKICAgICBjb3JyZWN0bHkKdjU6IC1hZGRlZCBn
YW1tYV9lbmFibGUgY2hlY2sgaW5zaWRlIHJlYWRfbHV0cygpCnY2OiAtcmVuYW1lZCBpbnRlbF9j
b2xvcl9sdXRfZW50cnlfZXF1YWwoKSB0byBpbnRlbF9jb2xvcl9sdXRfZW50cmllc19lcXVhbCgp
IFtWaWxsZV0KICAgIC1jaGFuZ2VkIGlmLWVsc2UgdG8gc3dpdGNoIFtWaWxsZV0KICAgIC1yZW1v
dmVkIGludGVsX2NvbG9yX2x1dF9lbnRyeV9tdWx0aV9lcXVhbCgpIFtWaWxsZV0Kdjc6IC1jaGVj
a3BhdGNoIHdhcm5pbmdzCgpTaWduZWQtb2ZmLWJ5OiBTd2F0aSBTaGFybWEgPHN3YXRpMi5zaGFy
bWFAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY29s
b3IuYyB8IDExMyArKysrKysrKysrKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfcmVnLmggICAgICAgICAgICB8ICAgNiArKwogMiBmaWxlcyBjaGFuZ2VkLCAxMDEgaW5zZXJ0
aW9ucygrKSwgMTggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9jb2xvci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9jb2xvci5jCmluZGV4IGZhNDRlYjczZDA4OC4uOTI2YWY4NmE3NWQ1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NvbG9yLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jb2xvci5jCkBAIC04MTIsNyArODEyLDcgQEAg
aWNsX2xvYWRfZ2NtYXgoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUs
CiAJc3RydWN0IGludGVsX2RzYiAqZHNiID0gaW50ZWxfZHNiX2dldChjcnRjKTsKIAllbnVtIHBp
cGUgcGlwZSA9IGNydGMtPnBpcGU7CiAKLQkvKiBGaXhtZTogTFVUIGVudHJpZXMgYXJlIDE2IGJp
dCBvbmx5LCBzbyB3ZSBjYW4gcHJvZyAweEZGRkYgbWF4ICovCisJLyogRklYTUUgTFVUIGVudHJp
ZXMgYXJlIDE2IGJpdCBvbmx5LCBzbyB3ZSBjYW4gcHJvZyAweEZGRkYgbWF4ICovCiAJaW50ZWxf
ZHNiX3JlZ193cml0ZShkc2IsIFBSRUNfUEFMX0dDX01BWChwaXBlLCAwKSwgY29sb3ItPnJlZCk7
CiAJaW50ZWxfZHNiX3JlZ193cml0ZShkc2IsIFBSRUNfUEFMX0dDX01BWChwaXBlLCAxKSwgY29s
b3ItPmdyZWVuKTsKIAlpbnRlbF9kc2JfcmVnX3dyaXRlKGRzYiwgUFJFQ19QQUxfR0NfTUFYKHBp
cGUsIDIpLCBjb2xvci0+Ymx1ZSk7CkBAIC0xNDc3LDYgKzE0NzcsMjQgQEAgc3RhdGljIGludCBn
bGtfZ2FtbWFfcHJlY2lzaW9uKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogCX0KIH0KIAorc3RhdGljIGludCBpY2xfZ2FtbWFfcHJlY2lzaW9uKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCWlmICgoY3J0Y19zdGF0ZS0+Z2Ft
bWFfbW9kZSAmIFBPU1RfQ1NDX0dBTU1BX0VOQUJMRSkgPT0gMCkKKwkJcmV0dXJuIDA7CisKKwlz
d2l0Y2ggKGNydGNfc3RhdGUtPmdhbW1hX21vZGUgJiBHQU1NQV9NT0RFX01PREVfTUFTSykgewor
CWNhc2UgR0FNTUFfTU9ERV9NT0RFXzhCSVQ6CisJCXJldHVybiA4OworCWNhc2UgR0FNTUFfTU9E
RV9NT0RFXzEwQklUOgorCQlyZXR1cm4gMTA7CisJY2FzZSBHQU1NQV9NT0RFX01PREVfMTJCSVRf
TVVMVElfU0VHTUVOVEVEOgorCQlyZXR1cm4gMTY7CisJZGVmYXVsdDoKKwkJTUlTU0lOR19DQVNF
KGNydGNfc3RhdGUtPmdhbW1hX21vZGUpOworCQlyZXR1cm4gMDsKKwl9Cit9CisKIGludCBpbnRl
bF9jb2xvcl9nZXRfZ2FtbWFfYml0X3ByZWNpc2lvbihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVs
X2NydGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKQEAgLTE0ODgsNyArMTUwNiw5IEBAIGludCBp
bnRlbF9jb2xvcl9nZXRfZ2FtbWFfYml0X3ByZWNpc2lvbihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0CiAJCWVsc2UKIAkJCXJldHVybiBpOXh4X2dhbW1hX3ByZWNpc2lv
bihjcnRjX3N0YXRlKTsKIAl9IGVsc2UgewotCQlpZiAoSVNfQ0FOTk9OTEFLRShkZXZfcHJpdikg
fHwgSVNfR0VNSU5JTEFLRShkZXZfcHJpdikpCisJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDExKQorCQkJcmV0dXJuIGljbF9nYW1tYV9wcmVjaXNpb24oY3J0Y19zdGF0ZSk7CisJCWVsc2Ug
aWYgKElTX0NBTk5PTkxBS0UoZGV2X3ByaXYpIHx8IElTX0dFTUlOSUxBS0UoZGV2X3ByaXYpKQog
CQkJcmV0dXJuIGdsa19nYW1tYV9wcmVjaXNpb24oY3J0Y19zdGF0ZSk7CiAJCWVsc2UgaWYgKElT
X0lST05MQUtFKGRldl9wcml2KSkKIAkJCXJldHVybiBpbGtfZ2FtbWFfcHJlY2lzaW9uKGNydGNf
c3RhdGUpOwpAQCAtMTUwNSw5ICsxNTI1LDkgQEAgc3RhdGljIGJvb2wgZXJyX2NoZWNrKHN0cnVj
dCBkcm1fY29sb3JfbHV0ICpsdXQxLAogCQkoKGFicygobG9uZylsdXQyLT5ncmVlbiAtIGx1dDEt
PmdyZWVuKSkgPD0gZXJyKTsKIH0KIAotc3RhdGljIGJvb2wgaW50ZWxfY29sb3JfbHV0X2VudHJ5
X2VxdWFsKHN0cnVjdCBkcm1fY29sb3JfbHV0ICpsdXQxLAotCQkJCQlzdHJ1Y3QgZHJtX2NvbG9y
X2x1dCAqbHV0MiwKLQkJCQkJaW50IGx1dF9zaXplLCB1MzIgZXJyKQorc3RhdGljIGJvb2wgaW50
ZWxfY29sb3JfbHV0X2VudHJpZXNfZXF1YWwoc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1dDEsCisJ
CQkJCSAgc3RydWN0IGRybV9jb2xvcl9sdXQgKmx1dDIsCisJCQkJCSAgaW50IGx1dF9zaXplLCB1
MzIgZXJyKQogewogCWludCBpOwogCkBAIC0xNTM3LDE2ICsxNTU3LDggQEAgYm9vbCBpbnRlbF9j
b2xvcl9sdXRfZXF1YWwoc3RydWN0IGRybV9wcm9wZXJ0eV9ibG9iICpibG9iMSwKIAlsdXRfc2l6
ZTIgPSBkcm1fY29sb3JfbHV0X3NpemUoYmxvYjIpOwogCiAJLyogY2hlY2sgc3cgYW5kIGh3IGx1
dCBzaXplICovCi0Jc3dpdGNoIChnYW1tYV9tb2RlKSB7Ci0JY2FzZSBHQU1NQV9NT0RFX01PREVf
OEJJVDoKLQljYXNlIEdBTU1BX01PREVfTU9ERV8xMEJJVDoKLQkJaWYgKGx1dF9zaXplMSAhPSBs
dXRfc2l6ZTIpCi0JCQlyZXR1cm4gZmFsc2U7Ci0JCWJyZWFrOwotCWRlZmF1bHQ6Ci0JCU1JU1NJ
TkdfQ0FTRShnYW1tYV9tb2RlKTsKLQkJCXJldHVybiBmYWxzZTsKLQl9CisJaWYgKGx1dF9zaXpl
MSAhPSBsdXRfc2l6ZTIpCisJCXJldHVybiBmYWxzZTsKIAogCWx1dDEgPSBibG9iMS0+ZGF0YTsK
IAlsdXQyID0gYmxvYjItPmRhdGE7CkBAIC0xNTU0LDExICsxNTY2LDE2IEBAIGJvb2wgaW50ZWxf
Y29sb3JfbHV0X2VxdWFsKHN0cnVjdCBkcm1fcHJvcGVydHlfYmxvYiAqYmxvYjEsCiAJZXJyID0g
MHhmZmZmID4+IGJpdF9wcmVjaXNpb247CiAKIAkvKiBjaGVjayBzdyBhbmQgaHcgbHV0IGVudHJ5
IHRvIGJlIGVxdWFsICovCi0Jc3dpdGNoIChnYW1tYV9tb2RlKSB7CisJc3dpdGNoIChnYW1tYV9t
b2RlICYgR0FNTUFfTU9ERV9NT0RFX01BU0spIHsKIAljYXNlIEdBTU1BX01PREVfTU9ERV84QklU
OgogCWNhc2UgR0FNTUFfTU9ERV9NT0RFXzEwQklUOgotCQlpZiAoIWludGVsX2NvbG9yX2x1dF9l
bnRyeV9lcXVhbChsdXQxLCBsdXQyLAotCQkJCQkJIGx1dF9zaXplMiwgZXJyKSkKKwkJaWYgKCFp
bnRlbF9jb2xvcl9sdXRfZW50cmllc19lcXVhbChsdXQxLCBsdXQyLAorCQkJCQkJICAgbHV0X3Np
emUyLCBlcnIpKQorCQkJcmV0dXJuIGZhbHNlOworCQlicmVhazsKKwljYXNlIEdBTU1BX01PREVf
TU9ERV8xMkJJVF9NVUxUSV9TRUdNRU5URUQ6CisJCWlmICghaW50ZWxfY29sb3JfbHV0X2VudHJp
ZXNfZXF1YWwobHV0MSwgbHV0MiwKKwkJCQkJCSAgIDksIGVycikpCiAJCQlyZXR1cm4gZmFsc2U7
CiAJCWJyZWFrOwogCWRlZmF1bHQ6CkBAIC0xODE1LDYgKzE4MzIsNjUgQEAgc3RhdGljIHZvaWQg
Z2xrX3JlYWRfbHV0cyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAkJY3J0
Y19zdGF0ZS0+YmFzZS5nYW1tYV9sdXQgPSBnbGtfcmVhZF9sdXRfMTAoY3J0Y19zdGF0ZSwgUEFM
X1BSRUNfSU5ERVhfVkFMVUUoMCkpOwogfQogCitzdGF0aWMgc3RydWN0IGRybV9wcm9wZXJ0eV9i
bG9iICoKK2ljbF9yZWFkX2x1dF9tdWx0aV9zZWdtZW50KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlKQoreworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50
ZWxfY3J0YyhjcnRjX3N0YXRlLT5iYXNlLmNydGMpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOworCWludCBsdXRfc2l6ZSA9IElO
VEVMX0lORk8oZGV2X3ByaXYpLT5jb2xvci5nYW1tYV9sdXRfc2l6ZTsKKwllbnVtIHBpcGUgcGlw
ZSA9IGNydGMtPnBpcGU7CisJc3RydWN0IGRybV9wcm9wZXJ0eV9ibG9iICpibG9iOworCXN0cnVj
dCBkcm1fY29sb3JfbHV0ICpibG9iX2RhdGE7CisJdTMyIGksIHZhbDEsIHZhbDI7CisKKwlibG9i
ID0gZHJtX3Byb3BlcnR5X2NyZWF0ZV9ibG9iKCZkZXZfcHJpdi0+ZHJtLAorCQkJCQlzaXplb2Yo
c3RydWN0IGRybV9jb2xvcl9sdXQpICogbHV0X3NpemUsCisJCQkJCU5VTEwpOworCWlmIChJU19F
UlIoYmxvYikpCisJCXJldHVybiBOVUxMOworCisJYmxvYl9kYXRhID0gYmxvYi0+ZGF0YTsKKwor
CUk5MTVfV1JJVEUoUFJFQ19QQUxfTVVMVElfU0VHX0lOREVYKHBpcGUpLCBQQUxfUFJFQ19BVVRP
X0lOQ1JFTUVOVCk7CisKKwlmb3IgKGkgPSAwOyBpIDwgOTsgaSsrKSB7CisJCXZhbDEgPSBJOTE1
X1JFQUQoUFJFQ19QQUxfTVVMVElfU0VHX0RBVEEocGlwZSkpOworCQl2YWwyID0gSTkxNV9SRUFE
KFBSRUNfUEFMX01VTFRJX1NFR19EQVRBKHBpcGUpKTsKKworCQlibG9iX2RhdGFbaV0ucmVkID0g
UkVHX0ZJRUxEX0dFVChQQUxfUFJFQ19NVUxUSV9TRUdfUkVEX1VEV19NQVNLLCB2YWwyKSA8PCA2
IHwKKwkJCQkgICBSRUdfRklFTERfR0VUKFBBTF9QUkVDX01VTFRJX1NFR19SRURfTERXX01BU0ss
IHZhbDEpOworCQlibG9iX2RhdGFbaV0uZ3JlZW4gPSBSRUdfRklFTERfR0VUKFBBTF9QUkVDX01V
TFRJX1NFR19HUkVFTl9VRFdfTUFTSywgdmFsMikgPDwgNiB8CisJCQkJICAgICBSRUdfRklFTERf
R0VUKFBBTF9QUkVDX01VTFRJX1NFR19HUkVFTl9MRFdfTUFTSywgdmFsMSk7CisJCWJsb2JfZGF0
YVtpXS5ibHVlID0gUkVHX0ZJRUxEX0dFVChQQUxfUFJFQ19NVUxUSV9TRUdfQkxVRV9VRFdfTUFT
SywgdmFsMikgPDwgNiB8CisJCQkJICAgIFJFR19GSUVMRF9HRVQoUEFMX1BSRUNfTVVMVElfU0VH
X0JMVUVfTERXX01BU0ssIHZhbDEpOworCX0KKworCS8qCisJICogRklYTUUgcmVhZG91dHMgZnJv
bSBQQUxfUFJFQ19EQVRBIHJlZ2lzdGVyIGFyZW4ndCBnaXZpbmcKKwkgKiBjb3JyZWN0IHZhbHVl
cyBpbiB0aGUgY2FzZSBvZiBmaW5lIGFuZCBjb2Fyc2Ugc2VnbWVudHMuCisJICogUmVzdHJpY3Rp
bmcgcmVhZG91dHMgb25seSBmb3Igc3VwZXIgZmluZSBzZWdtZW50IGFzIG9mIG5vdy4KKwkgKi8K
KworCXJldHVybiBibG9iOworfQorCitzdGF0aWMgdm9pZCBpY2xfcmVhZF9sdXRzKHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCWlmICgoY3J0Y19zdGF0ZS0+Z2FtbWFf
bW9kZSAmIFBPU1RfQ1NDX0dBTU1BX0VOQUJMRSkgPT0gMCkKKwkJcmV0dXJuOworCisJc3dpdGNo
IChjcnRjX3N0YXRlLT5nYW1tYV9tb2RlICYgR0FNTUFfTU9ERV9NT0RFX01BU0spIHsKKwljYXNl
IEdBTU1BX01PREVfTU9ERV84QklUOgorCQljcnRjX3N0YXRlLT5iYXNlLmdhbW1hX2x1dCA9IGk5
eHhfcmVhZF9sdXRfOChjcnRjX3N0YXRlKTsKKwkJYnJlYWs7CisJY2FzZSBHQU1NQV9NT0RFX01P
REVfMTJCSVRfTVVMVElfU0VHTUVOVEVEOgorCQljcnRjX3N0YXRlLT5iYXNlLmdhbW1hX2x1dCA9
IGljbF9yZWFkX2x1dF9tdWx0aV9zZWdtZW50KGNydGNfc3RhdGUpOworCQlicmVhazsKKwlkZWZh
dWx0OgorCQljcnRjX3N0YXRlLT5iYXNlLmdhbW1hX2x1dCA9IGdsa19yZWFkX2x1dF8xMChjcnRj
X3N0YXRlLCBQQUxfUFJFQ19JTkRFWF9WQUxVRSgwKSk7CisJfQorfQorCiB2b2lkIGludGVsX2Nv
bG9yX2luaXQoc3RydWN0IGludGVsX2NydGMgKmNydGMpCiB7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC0xODU4LDYgKzE5
MzQsNyBAQCB2b2lkIGludGVsX2NvbG9yX2luaXQoc3RydWN0IGludGVsX2NydGMgKmNydGMpCiAK
IAkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpIHsKIAkJCWRldl9wcml2LT5kaXNwbGF5
LmxvYWRfbHV0cyA9IGljbF9sb2FkX2x1dHM7CisJCQlkZXZfcHJpdi0+ZGlzcGxheS5yZWFkX2x1
dHMgPSBpY2xfcmVhZF9sdXRzOwogCQl9IGVsc2UgaWYgKElTX0NBTk5PTkxBS0UoZGV2X3ByaXYp
IHx8IElTX0dFTUlOSUxBS0UoZGV2X3ByaXYpKSB7CiAJCQlkZXZfcHJpdi0+ZGlzcGxheS5sb2Fk
X2x1dHMgPSBnbGtfbG9hZF9sdXRzOwogCQkJZGV2X3ByaXYtPmRpc3BsYXkucmVhZF9sdXRzID0g
Z2xrX3JlYWRfbHV0czsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVn
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCmluZGV4IDFkYzA2N2ZjNTdhYi4u
MDZiNjM5OGI3ZDYyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKQEAgLTEwNTg0LDYgKzEwNTg0
LDEyIEBAIGVudW0gc2tsX3Bvd2VyX2dhdGUgewogCiAjZGVmaW5lIF9QQUxfUFJFQ19NVUxUSV9T
RUdfREFUQV9BCTB4NEE0MEMKICNkZWZpbmUgX1BBTF9QUkVDX01VTFRJX1NFR19EQVRBX0IJMHg0
QUMwQworI2RlZmluZSAgUEFMX1BSRUNfTVVMVElfU0VHX1JFRF9MRFdfTUFTSyAgIFJFR19HRU5N
QVNLKDI5LCAyNCkKKyNkZWZpbmUgIFBBTF9QUkVDX01VTFRJX1NFR19SRURfVURXX01BU0sgICBS
RUdfR0VOTUFTSygyOSwgMjApCisjZGVmaW5lICBQQUxfUFJFQ19NVUxUSV9TRUdfR1JFRU5fTERX
X01BU0sgUkVHX0dFTk1BU0soMTksIDE0KQorI2RlZmluZSAgUEFMX1BSRUNfTVVMVElfU0VHX0dS
RUVOX1VEV19NQVNLIFJFR19HRU5NQVNLKDE5LCAxMCkKKyNkZWZpbmUgIFBBTF9QUkVDX01VTFRJ
X1NFR19CTFVFX0xEV19NQVNLICBSRUdfR0VOTUFTSyg5LCA0KQorI2RlZmluZSAgUEFMX1BSRUNf
TVVMVElfU0VHX0JMVUVfVURXX01BU0sgIFJFR19HRU5NQVNLKDksIDApCiAKICNkZWZpbmUgUFJF
Q19QQUxfTVVMVElfU0VHX0lOREVYKHBpcGUpCV9NTUlPX1BJUEUocGlwZSwgXAogCQkJCQlfUEFM
X1BSRUNfTVVMVElfU0VHX0lOREVYX0EsIFwKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRl
bC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

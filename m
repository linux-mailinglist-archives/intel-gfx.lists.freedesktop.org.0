Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id A4327DE011
	for <lists+intel-gfx@lfdr.de>; Sun, 20 Oct 2019 20:41:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7CB1C89338;
	Sun, 20 Oct 2019 18:41:46 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3AFE689338
 for <intel-gfx@lists.freedesktop.org>; Sun, 20 Oct 2019 18:41:44 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18905243-1500050 
 for <intel-gfx@lists.freedesktop.org>; Sun, 20 Oct 2019 19:41:42 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sun, 20 Oct 2019 19:41:39 +0100
Message-Id: <20191020184139.9145-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915: Extract GT ring management
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogQW5kaSBTaHl0aSA8YW5kaS5zaHl0aUBpbnRlbC5jb20+CgpBbHRob3VnaCB0aGUgcmlu
ZyBtYW5hZ2VtZW50IGlzIG11Y2ggc21hbGxlciBjb21wYXJlZCB0byB0aGUgb3RoZXIgR1QKcG93
ZXIgbWFuYWdlbWVudCBmdW5jdGlvbnMsIGNvbnRpbnVlIHRoZSB0aGVtZSBvZiBleHRyYWN0aW5n
IGl0IG91dCBvZgp0aGUgaHVnZSBpbnRlbF9wbS5jIGZvciBtYWludGVuYW5jZS4KCkJhc2VkIG9u
IGEgcGF0Y2ggYnkgQ2hyaXMgV2lsc29uLgoKU2lnbmVkLW9mZi1ieTogQW5kaSBTaHl0aSA8YW5k
aS5zaHl0aUBpbnRlbC5jb20+CkNjOiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5j
by51az4KUmV2aWV3ZWQtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlICAgICAgICAgICAgIHwgICAxICsK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3R5cGVzLmggIHwgICAyICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xsYy5jICAgICAgIHwgMTYxICsrKysrKysrKysrKysr
KysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xsYy5oICAgICAgIHwgIDE1
ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9sbGNfdHlwZXMuaCB8ICAxMyArKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZ3RfcG0uYyAgfCAgIDkgKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xsYy5jICAgIHwgIDc4ICsrKysrKysrKysrCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9sbGMuaCAgICB8ICAxNCArKwogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgfCAgIDUgLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uYyAgICAgICAgICAgfCAxMTkgKy0tLS0tLS0tLS0tLS0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaCAgICAgICAgICAgfCAgIDIgKy0KIDExIGZpbGVz
IGNoYW5nZWQsIDI5OSBpbnNlcnRpb25zKCspLCAxMjAgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbGxjLmMKIGNyZWF0ZSBtb2Rl
IDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9sbGMuaAogY3JlYXRlIG1vZGUg
MTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xsY190eXBlcy5oCiBjcmVhdGUg
bW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbGxjLmMKIGNyZWF0
ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9sbGMuaAoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvTWFrZWZpbGUKaW5kZXggZTc5MWQ5MzIzYjUxLi5hMTZhMmRhZWY5NzcgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L01ha2VmaWxlCkBAIC04Nyw2ICs4Nyw3IEBAIGd0LXkgKz0gXAogCWd0L2ludGVsX2d0X3Bt
X2lycS5vIFwKIAlndC9pbnRlbF9ndF9yZXF1ZXN0cy5vIFwKIAlndC9pbnRlbF9oYW5nY2hlY2su
byBcCisJZ3QvaW50ZWxfbGxjLm8gXAogCWd0L2ludGVsX2xyYy5vIFwKIAlndC9pbnRlbF9yYzYu
byBcCiAJZ3QvaW50ZWxfcmVuZGVyc3RhdGUubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfdHlwZXMuaAppbmRleCBiZTRiMjYzNjIxYzguLmFlNGFhZjc1YWM3OCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oCkBAIC0xNyw2ICsxNyw3IEBACiAKICNp
bmNsdWRlICJpOTE1X3ZtYS5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZV90eXBlcy5oIgorI2lu
Y2x1ZGUgImludGVsX2xsY190eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3Jlc2V0X3R5cGVzLmgi
CiAjaW5jbHVkZSAiaW50ZWxfcmM2X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2FrZXJlZi5o
IgpAQCAtNzksNiArODAsNyBAQCBzdHJ1Y3QgaW50ZWxfZ3QgewogCSAqLwogCWludGVsX3dha2Vy
ZWZfdCBhd2FrZTsKIAorCXN0cnVjdCBpbnRlbF9sbGMgbGxjOwogCXN0cnVjdCBpbnRlbF9yYzYg
cmM2OwogCiAJc3RydWN0IGJsb2NraW5nX25vdGlmaWVyX2hlYWQgcG1fbm90aWZpY2F0aW9uczsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xsYy5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbGxjLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMDAwMDAwLi4yZWIyNGUwNDQ0N2YKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9sbGMuYwpAQCAtMCwwICsxLDE2MSBAQAorLyoKKyAqIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBD
b3Jwb3JhdGlvbgorICovCisKKyNpbmNsdWRlIDxsaW51eC9jcHVmcmVxLmg+CisKKyNpbmNsdWRl
ICJpOTE1X2Rydi5oIgorI2luY2x1ZGUgImludGVsX2d0LmgiCisjaW5jbHVkZSAiaW50ZWxfbGxj
LmgiCisjaW5jbHVkZSAiaW50ZWxfc2lkZWJhbmQuaCIKKworc3RhdGljIHN0cnVjdCBpbnRlbF9n
dCAqbGxjX3RvX2d0KHN0cnVjdCBpbnRlbF9sbGMgKmxsYykKK3sKKwlyZXR1cm4gY29udGFpbmVy
X29mKGxsYywgc3RydWN0IGludGVsX2d0LCBsbGMpOworfQorCitzdGF0aWMgdW5zaWduZWQgaW50
IGNwdV9tYXhfTUh6KHZvaWQpCit7CisJc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3k7CisJ
dW5zaWduZWQgaW50IG1heF9raHo7CisKKwlwb2xpY3kgPSBjcHVmcmVxX2NwdV9nZXQoMCk7CisJ
aWYgKHBvbGljeSkgeworCQltYXhfa2h6ID0gcG9saWN5LT5jcHVpbmZvLm1heF9mcmVxOworCQlj
cHVmcmVxX2NwdV9wdXQocG9saWN5KTsKKwl9IGVsc2UgeworCQkvKgorCQkgKiBEZWZhdWx0IHRv
IG1lYXN1cmVkIGZyZXEgaWYgbm9uZSBmb3VuZCwgUENVIHdpbGwgZW5zdXJlIHdlCisJCSAqIGRv
bid0IGdvIG92ZXIKKwkJICovCisJCW1heF9raHogPSB0c2Nfa2h6OworCX0KKworCXJldHVybiBt
YXhfa2h6IC8gMTAwMDsKK30KKworc3RydWN0IGlhX2NvbnN0YW50cyB7CisJdW5zaWduZWQgaW50
IG1pbl9ncHVfZnJlcTsKKwl1bnNpZ25lZCBpbnQgbWF4X2dwdV9mcmVxOworCisJdW5zaWduZWQg
aW50IG1pbl9yaW5nX2ZyZXE7CisJdW5zaWduZWQgaW50IG1heF9pYV9mcmVxOworfTsKKworc3Rh
dGljIGJvb2wgZ2V0X2lhX2NvbnN0YW50cyhzdHJ1Y3QgaW50ZWxfbGxjICpsbGMsCisJCQkgICAg
IHN0cnVjdCBpYV9jb25zdGFudHMgKmNvbnN0cykKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSA9IGxsY190b19ndChsbGMpLT5pOTE1OworCXN0cnVjdCBpbnRlbF9ycHMgKnJwcyA9
ICZpOTE1LT5ndF9wbS5ycHM7CisKKwlpZiAocnBzLT5tYXhfZnJlcSA8PSBycHMtPm1pbl9mcmVx
KQorCQlyZXR1cm4gZmFsc2U7CisKKwljb25zdHMtPm1heF9pYV9mcmVxID0gY3B1X21heF9NSHoo
KTsKKworCWNvbnN0cy0+bWluX3JpbmdfZnJlcSA9CisJCWludGVsX3VuY29yZV9yZWFkKGxsY190
b19ndChsbGMpLT51bmNvcmUsIERDTEspICYgMHhmOworCS8qIGNvbnZlcnQgRERSIGZyZXF1ZW5j
eSBmcm9tIHVuaXRzIG9mIDI2Ni42TUh6IHRvIGJhbmR3aWR0aCAqLworCWNvbnN0cy0+bWluX3Jp
bmdfZnJlcSA9IG11bHRfZnJhYyhjb25zdHMtPm1pbl9yaW5nX2ZyZXEsIDgsIDMpOworCisJY29u
c3RzLT5taW5fZ3B1X2ZyZXEgPSBycHMtPm1pbl9mcmVxOworCWNvbnN0cy0+bWF4X2dwdV9mcmVx
ID0gcnBzLT5tYXhfZnJlcTsKKwlpZiAoSU5URUxfR0VOKGk5MTUpID49IDkpIHsKKwkJLyogQ29u
dmVydCBHVCBmcmVxdWVuY3kgdG8gNTAgSFogdW5pdHMgKi8KKwkJY29uc3RzLT5taW5fZ3B1X2Zy
ZXEgLz0gR0VOOV9GUkVRX1NDQUxFUjsKKwkJY29uc3RzLT5tYXhfZ3B1X2ZyZXEgLz0gR0VOOV9G
UkVRX1NDQUxFUjsKKwl9CisKKwlyZXR1cm4gdHJ1ZTsKK30KKworc3RhdGljIHZvaWQgY2FsY19p
YV9mcmVxKHN0cnVjdCBpbnRlbF9sbGMgKmxsYywKKwkJCSB1bnNpZ25lZCBpbnQgZ3B1X2ZyZXEs
CisJCQkgY29uc3Qgc3RydWN0IGlhX2NvbnN0YW50cyAqY29uc3RzLAorCQkJIHVuc2lnbmVkIGlu
dCAqb3V0X2lhX2ZyZXEsCisJCQkgdW5zaWduZWQgaW50ICpvdXRfcmluZ19mcmVxKQoreworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gbGxjX3RvX2d0KGxsYyktPmk5MTU7CisJY29u
c3QgaW50IGRpZmYgPSBjb25zdHMtPm1heF9ncHVfZnJlcSAtIGdwdV9mcmVxOworCXVuc2lnbmVk
IGludCBpYV9mcmVxID0gMCwgcmluZ19mcmVxID0gMDsKKworCWlmIChJTlRFTF9HRU4oaTkxNSkg
Pj0gOSkgeworCQkvKgorCQkgKiByaW5nX2ZyZXEgPSAyICogR1QuIHJpbmdfZnJlcSBpcyBpbiAx
MDBNSHogdW5pdHMKKwkJICogTm8gZmxvb3IgcmVxdWlyZWQgZm9yIHJpbmcgZnJlcXVlbmN5IG9u
IFNLTC4KKwkJICovCisJCXJpbmdfZnJlcSA9IGdwdV9mcmVxOworCX0gZWxzZSBpZiAoSU5URUxf
R0VOKGk5MTUpID49IDgpIHsKKwkJLyogbWF4KDIgKiBHVCwgRERSKS4gTkI6IEdUIGlzIDUwTUh6
IHVuaXRzICovCisJCXJpbmdfZnJlcSA9IG1heChjb25zdHMtPm1pbl9yaW5nX2ZyZXEsIGdwdV9m
cmVxKTsKKwl9IGVsc2UgaWYgKElTX0hBU1dFTEwoaTkxNSkpIHsKKwkJcmluZ19mcmVxID0gbXVs
dF9mcmFjKGdwdV9mcmVxLCA1LCA0KTsKKwkJcmluZ19mcmVxID0gbWF4KGNvbnN0cy0+bWluX3Jp
bmdfZnJlcSwgcmluZ19mcmVxKTsKKwkJLyogbGVhdmUgaWFfZnJlcSBhcyB0aGUgZGVmYXVsdCwg
Y2hvc2VuIGJ5IGNwdWZyZXEgKi8KKwl9IGVsc2UgeworCQljb25zdCBpbnQgbWluX2ZyZXEgPSAx
NTsKKwkJY29uc3QgaW50IHNjYWxlID0gMTgwOworCisJCS8qCisJCSAqIE9uIG9sZGVyIHByb2Nl
c3NvcnMsIHRoZXJlIGlzIG5vIHNlcGFyYXRlIHJpbmcKKwkJICogY2xvY2sgZG9tYWluLCBzbyBp
biBvcmRlciB0byBib29zdCB0aGUgYmFuZHdpZHRoCisJCSAqIG9mIHRoZSByaW5nLCB3ZSBuZWVk
IHRvIHVwY2xvY2sgdGhlIENQVSAoaWFfZnJlcSkuCisJCSAqCisJCSAqIEZvciBHUFUgZnJlcXVl
bmNpZXMgbGVzcyB0aGFuIDc1ME1IeiwKKwkJICoganVzdCB1c2UgdGhlIGxvd2VzdCByaW5nIGZy
ZXEuCisJCSAqLworCQlpZiAoZ3B1X2ZyZXEgPCBtaW5fZnJlcSkKKwkJCWlhX2ZyZXEgPSA4MDA7
CisJCWVsc2UKKwkJCWlhX2ZyZXEgPSBjb25zdHMtPm1heF9pYV9mcmVxIC0gZGlmZiAqIHNjYWxl
IC8gMjsKKwkJaWFfZnJlcSA9IERJVl9ST1VORF9DTE9TRVNUKGlhX2ZyZXEsIDEwMCk7CisJfQor
CisJKm91dF9pYV9mcmVxID0gaWFfZnJlcTsKKwkqb3V0X3JpbmdfZnJlcSA9IHJpbmdfZnJlcTsK
K30KKworc3RhdGljIHZvaWQgZ2VuNl91cGRhdGVfcmluZ19mcmVxKHN0cnVjdCBpbnRlbF9sbGMg
KmxsYykKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGxsY190b19ndChsbGMp
LT5pOTE1OworCXN0cnVjdCBpYV9jb25zdGFudHMgY29uc3RzOworCXVuc2lnbmVkIGludCBncHVf
ZnJlcTsKKworCWlmICghZ2V0X2lhX2NvbnN0YW50cyhsbGMsICZjb25zdHMpKQorCQlyZXR1cm47
CisKKwkvKgorCSAqIEZvciBlYWNoIHBvdGVudGlhbCBHUFUgZnJlcXVlbmN5LCBsb2FkIGEgcmlu
ZyBmcmVxdWVuY3kgd2UnZCBsaWtlCisJICogdG8gdXNlIGZvciBtZW1vcnkgYWNjZXNzLiAgV2Ug
ZG8gdGhpcyBieSBzcGVjaWZ5aW5nIHRoZSBJQSBmcmVxdWVuY3kKKwkgKiB0aGUgUENVIHNob3Vs
ZCB1c2UgYXMgYSByZWZlcmVuY2UgdG8gZGV0ZXJtaW5lIHRoZSByaW5nIGZyZXF1ZW5jeS4KKwkg
Ki8KKwlmb3IgKGdwdV9mcmVxID0gY29uc3RzLm1heF9ncHVfZnJlcTsKKwkgICAgIGdwdV9mcmVx
ID49IGNvbnN0cy5taW5fZ3B1X2ZyZXE7CisJICAgICBncHVfZnJlcS0tKSB7CisJCXVuc2lnbmVk
IGludCBpYV9mcmVxLCByaW5nX2ZyZXE7CisKKwkJY2FsY19pYV9mcmVxKGxsYywgZ3B1X2ZyZXEs
ICZjb25zdHMsICZpYV9mcmVxLCAmcmluZ19mcmVxKTsKKwkJc2FuZHlicmlkZ2VfcGNvZGVfd3Jp
dGUoaTkxNSwKKwkJCQkJR0VONl9QQ09ERV9XUklURV9NSU5fRlJFUV9UQUJMRSwKKwkJCQkJaWFf
ZnJlcSA8PCBHRU42X1BDT0RFX0ZSRVFfSUFfUkFUSU9fU0hJRlQgfAorCQkJCQlyaW5nX2ZyZXEg
PDwgR0VONl9QQ09ERV9GUkVRX1JJTkdfUkFUSU9fU0hJRlQgfAorCQkJCQlncHVfZnJlcSk7CisJ
fQorfQorCit2b2lkIGludGVsX2xsY19lbmFibGUoc3RydWN0IGludGVsX2xsYyAqbGxjKQorewor
CWlmIChIQVNfTExDKGxsY190b19ndChsbGMpLT5pOTE1KSkKKwkJZ2VuNl91cGRhdGVfcmluZ19m
cmVxKGxsYyk7Cit9CisKK3ZvaWQgaW50ZWxfbGxjX2Rpc2FibGUoc3RydWN0IGludGVsX2xsYyAq
bGxjKQoreworCS8qIEN1cnJlbnRseSB0aGVyZSBpcyBubyBIVyBjb25maWd1cmF0aW9uIHRvIGJl
IGRvbmUgdG8gZGlzYWJsZS4gKi8KK30KKworI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1
X1NFTEZURVNUKQorI2luY2x1ZGUgInNlbGZ0ZXN0X2xsYy5jIgorI2VuZGlmCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9sbGMuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2xsYy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAw
MC4uZWYwOWE4OTBkMmI3Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfbGxjLmgKQEAgLTAsMCArMSwxNSBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgor
ICovCisKKyNpZm5kZWYgSU5URUxfTExDX0gKKyNkZWZpbmUgSU5URUxfTExDX0gKKworc3RydWN0
IGludGVsX2xsYzsKKwordm9pZCBpbnRlbF9sbGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9sbGMgKmxs
Yyk7Cit2b2lkIGludGVsX2xsY19kaXNhYmxlKHN0cnVjdCBpbnRlbF9sbGMgKmxsYyk7CisKKyNl
bmRpZiAvKiBJTlRFTF9MTENfSCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfbGxjX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9sbGNf
dHlwZXMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmVjYWQ0Njg3
YjkzMAotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xs
Y190eXBlcy5oCkBAIC0wLDAgKzEsMTMgQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmll
cjogTUlUCisgKgorICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KKyAqLwor
CisjaWZuZGVmIElOVEVMX0xMQ19UWVBFU19ICisjZGVmaW5lIElOVEVMX0xMQ19UWVBFU19ICisK
K3N0cnVjdCBpbnRlbF9sbGMgeworfTsKKworI2VuZGlmIC8qIElOVEVMX0xMQ19UWVBFU19IICov
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9ndF9wbS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZ3RfcG0uYwppbmRleCA4Nzk4NWJkNDY0
MjMuLjVkNDI5MDM3Y2RhZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfZ3RfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9ndF9w
bS5jCkBAIC01LDYgKzUsOCBAQAogICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRp
b24KICAqLwogCisjaW5jbHVkZSAic2VsZnRlc3RfbGxjLmgiCisKIHN0YXRpYyBpbnQgbGl2ZV9n
dF9yZXN1bWUodm9pZCAqYXJnKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CkBAIC0z
Miw2ICszNCwxMyBAQCBzdGF0aWMgaW50IGxpdmVfZ3RfcmVzdW1lKHZvaWQgKmFyZykKIAkJCWVy
ciA9IC1FSU5WQUw7CiAJCQlicmVhazsKIAkJfQorCisJCWVyciA9IHN0X2xsY192ZXJpZnkoJmd0
LT5sbGMpOworCQlpZiAoZXJyKSB7CisJCQlwcl9lcnIoImxsYyBzdGF0ZSBub3QgcmVzdG9yZWQg
dXBvbiByZXN1bWUhXG4iKTsKKwkJCWludGVsX2d0X3NldF93ZWRnZWRfb25faW5pdChndCk7CisJ
CQlicmVhazsKKwkJfQogCX0gd2hpbGUgKCFfX2lndF90aW1lb3V0KGVuZF90aW1lLCBOVUxMKSk7
CiAKIAlyZXR1cm4gZXJyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2Vs
ZnRlc3RfbGxjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9sbGMuYwpuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjU0OWQxMTE4ZTE4YgotLS0gL2Rl
di9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xsYy5jCkBAIC0w
LDAgKzEsNzggQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCisgKgorICog
Q29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaW5jbHVkZSAiaW50
ZWxfcG0uaCIgLyogaW50ZWxfZ3B1X2ZyZXEoKSAqLworI2luY2x1ZGUgInNlbGZ0ZXN0X2xsYy5o
IgorCitzdGF0aWMgaW50IGdlbjZfdmVyaWZ5X3JpbmdfZnJlcShzdHJ1Y3QgaW50ZWxfbGxjICps
bGMpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBsbGNfdG9fZ3QobGxjKS0+
aTkxNTsKKwlzdHJ1Y3QgaWFfY29uc3RhbnRzIGNvbnN0czsKKwlpbnRlbF93YWtlcmVmX3Qgd2Fr
ZXJlZjsKKwl1bnNpZ25lZCBpbnQgZ3B1X2ZyZXE7CisJaW50IGVycjsKKworCXdha2VyZWYgPSBp
bnRlbF9ydW50aW1lX3BtX2dldChsbGNfdG9fZ3QobGxjKS0+dW5jb3JlLT5ycG0pOworCisJaWYg
KCFnZXRfaWFfY29uc3RhbnRzKGxsYywgJmNvbnN0cykpIHsKKwkJZXJyID0gLUVOT0RFVjsKKwkJ
Z290byBvdXRfcnBtOworCX0KKworCWZvciAoZ3B1X2ZyZXEgPSBjb25zdHMubWluX2dwdV9mcmVx
OworCSAgICAgZ3B1X2ZyZXEgPD0gY29uc3RzLm1heF9ncHVfZnJlcTsKKwkgICAgIGdwdV9mcmVx
KyspIHsKKwkJdW5zaWduZWQgaW50IGlhX2ZyZXEsIHJpbmdfZnJlcSwgZm91bmQ7CisJCXUzMiB2
YWw7CisKKwkJY2FsY19pYV9mcmVxKGxsYywgZ3B1X2ZyZXEsICZjb25zdHMsICZpYV9mcmVxLCAm
cmluZ19mcmVxKTsKKworCQl2YWwgPSBncHVfZnJlcTsKKwkJaWYgKHNhbmR5YnJpZGdlX3Bjb2Rl
X3JlYWQoaTkxNSwKKwkJCQkJICAgR0VONl9QQ09ERV9SRUFEX01JTl9GUkVRX1RBQkxFLAorCQkJ
CQkgICAmdmFsLCBOVUxMKSkgeworCQkJcHJfZXJyKCJGYWlsZWQgdG8gcmVhZCBmcmVxIHRhYmxl
WyVkXSwgcmFuZ2UgWyVkLCAlZF1cbiIsCisJCQkgICAgICAgZ3B1X2ZyZXEsIGNvbnN0cy5taW5f
Z3B1X2ZyZXEsIGNvbnN0cy5tYXhfZ3B1X2ZyZXEpOworCQkJZXJyID0gLUVOWElPOworCQkJYnJl
YWs7CisJCX0KKworCQlmb3VuZCA9ICh2YWwgPj4gMCkgJiAweGZmOworCQlpZiAoZm91bmQgIT0g
aWFfZnJlcSkgeworCQkJcHJfZXJyKCJNaW4gZnJlcSB0YWJsZSglZC9bJWQsICVkXSk6JWRNSHog
ZGlkIG5vdCBtYXRjaCBleHBlY3RlZCBDUFUgZnJlcSwgZm91bmQgJWQsIGV4cGVjdGVkICVkXG4i
LAorCQkJICAgICAgIGdwdV9mcmVxLCBjb25zdHMubWluX2dwdV9mcmVxLCBjb25zdHMubWF4X2dw
dV9mcmVxLAorCQkJICAgICAgIGludGVsX2dwdV9mcmVxKGk5MTUsIGdwdV9mcmVxICogKElOVEVM
X0dFTihpOTE1KSA+PSA5ID8gR0VOOV9GUkVRX1NDQUxFUiA6IDEpKSwKKwkJCSAgICAgICBmb3Vu
ZCwgaWFfZnJlcSk7CisJCQllcnIgPSAtRUlOVkFMOworCQkJYnJlYWs7CisJCX0KKworCQlmb3Vu
ZCA9ICh2YWwgPj4gOCkgJiAweGZmOworCQlpZiAoZm91bmQgIT0gcmluZ19mcmVxKSB7CisJCQlw
cl9lcnIoIk1pbiBmcmVxIHRhYmxlKCVkL1slZCwgJWRdKTolZE1IeiBkaWQgbm90IG1hdGNoIGV4
cGVjdGVkIHJpbmcgZnJlcSwgZm91bmQgJWQsIGV4cGVjdGVkICVkXG4iLAorCQkJICAgICAgIGdw
dV9mcmVxLCBjb25zdHMubWluX2dwdV9mcmVxLCBjb25zdHMubWF4X2dwdV9mcmVxLAorCQkJICAg
ICAgIGludGVsX2dwdV9mcmVxKGk5MTUsIGdwdV9mcmVxICogKElOVEVMX0dFTihpOTE1KSA+PSA5
ID8gR0VOOV9GUkVRX1NDQUxFUiA6IDEpKSwKKworCQkJICAgICAgIGZvdW5kLCByaW5nX2ZyZXEp
OworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWJyZWFrOworCQl9CisJfQorCitvdXRfcnBtOgorCWlu
dGVsX3J1bnRpbWVfcG1fcHV0KGxsY190b19ndChsbGMpLT51bmNvcmUtPnJwbSwgd2FrZXJlZik7
CisJcmV0dXJuIGVycjsKK30KKworaW50IHN0X2xsY192ZXJpZnkoc3RydWN0IGludGVsX2xsYyAq
bGxjKQoreworCWludCBlcnIgPSAwOworCisJaWYgKEhBU19MTEMobGxjX3RvX2d0KGxsYyktPmk5
MTUpKQorCQllcnIgPSBnZW42X3ZlcmlmeV9yaW5nX2ZyZXEobGxjKTsKKworCXJldHVybiBlcnI7
Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9sbGMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xsYy5oCm5ldyBmaWxlIG1vZGUgMTAw
NjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uODczZjg5NmU3MmYyCi0tLSAvZGV2L251bGwKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbGxjLmgKQEAgLTAsMCArMSwxNCBAQAor
LyoKKyAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkg
MjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorICovCisKKyNpZm5kZWYgU0VMRlRFU1RfTExDX0gKKyNk
ZWZpbmUgU0VMRlRFU1RfTExDX0gKKworc3RydWN0IGludGVsX2xsYzsKKworaW50IHN0X2xsY192
ZXJpZnkoc3RydWN0IGludGVsX2xsYyAqbGxjKTsKKworI2VuZGlmIC8qIFNFTEZURVNUX0xMQ19I
ICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCBkYjNjM2EwMjVhMDMuLjE2Yjg1YzdmN2Yy
MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC02MDUsMTMgKzYwNSw4IEBAIHN0cnVjdCBp
bnRlbF9ycHMgewogCXN0cnVjdCBpbnRlbF9ycHNfZWkgZWk7CiB9OwogCi1zdHJ1Y3QgaW50ZWxf
bGxjX3BzdGF0ZSB7Ci0JYm9vbCBlbmFibGVkOwotfTsKLQogc3RydWN0IGludGVsX2dlbjZfcG93
ZXJfbWdtdCB7CiAJc3RydWN0IGludGVsX3JwcyBycHM7Ci0Jc3RydWN0IGludGVsX2xsY19wc3Rh
dGUgbGxjX3BzdGF0ZTsKIH07CiAKIC8qIGRlZmluZWQgaW50ZWxfcG0uYyAqLwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3BtLmMKaW5kZXggMmI3MWQ1MmE0ZWRlLi4wNGU3OWQzOTkwNzUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfcG0uYwpAQCAtMzgsNiArMzgsOCBAQAogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxf
ZmJjLmgiCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9zcHJpdGUuaCIKIAorI2luY2x1ZGUgImd0
L2ludGVsX2xsYy5oIgorCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKICNpbmNsdWRlICJpOTE1X2ly
cS5oIgogI2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKQEAgLTcwMzAsOTMgKzcwMzIsNiBAQCBzdGF0
aWMgdm9pZCBnZW42X2VuYWJsZV9ycHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KCZkZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdB
S0VfQUxMKTsKIH0KIAotc3RhdGljIHZvaWQgZ2VuNl91cGRhdGVfcmluZ19mcmVxKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKLXsKLQlzdHJ1Y3QgaW50ZWxfcnBzICpycHMgPSAm
ZGV2X3ByaXYtPmd0X3BtLnJwczsKLQljb25zdCBpbnQgbWluX2ZyZXEgPSAxNTsKLQljb25zdCBp
bnQgc2NhbGluZ19mYWN0b3IgPSAxODA7Ci0JdW5zaWduZWQgaW50IGdwdV9mcmVxOwotCXVuc2ln
bmVkIGludCBtYXhfaWFfZnJlcSwgbWluX3JpbmdfZnJlcTsKLQl1bnNpZ25lZCBpbnQgbWF4X2dw
dV9mcmVxLCBtaW5fZ3B1X2ZyZXE7Ci0Jc3RydWN0IGNwdWZyZXFfcG9saWN5ICpwb2xpY3k7Ci0K
LQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycHMtPmxvY2spOwotCi0JaWYgKHJwcy0+bWF4X2ZyZXEg
PD0gcnBzLT5taW5fZnJlcSkKLQkJcmV0dXJuOwotCi0JcG9saWN5ID0gY3B1ZnJlcV9jcHVfZ2V0
KDApOwotCWlmIChwb2xpY3kpIHsKLQkJbWF4X2lhX2ZyZXEgPSBwb2xpY3ktPmNwdWluZm8ubWF4
X2ZyZXE7Ci0JCWNwdWZyZXFfY3B1X3B1dChwb2xpY3kpOwotCX0gZWxzZSB7Ci0JCS8qCi0JCSAq
IERlZmF1bHQgdG8gbWVhc3VyZWQgZnJlcSBpZiBub25lIGZvdW5kLCBQQ1Ugd2lsbCBlbnN1cmUg
d2UKLQkJICogZG9uJ3QgZ28gb3ZlcgotCQkgKi8KLQkJbWF4X2lhX2ZyZXEgPSB0c2Nfa2h6Owot
CX0KLQotCS8qIENvbnZlcnQgZnJvbSBrSHogdG8gTUh6ICovCi0JbWF4X2lhX2ZyZXEgLz0gMTAw
MDsKLQotCW1pbl9yaW5nX2ZyZXEgPSBJOTE1X1JFQUQoRENMSykgJiAweGY7Ci0JLyogY29udmVy
dCBERFIgZnJlcXVlbmN5IGZyb20gdW5pdHMgb2YgMjY2LjZNSHogdG8gYmFuZHdpZHRoICovCi0J
bWluX3JpbmdfZnJlcSA9IG11bHRfZnJhYyhtaW5fcmluZ19mcmVxLCA4LCAzKTsKLQotCW1pbl9n
cHVfZnJlcSA9IHJwcy0+bWluX2ZyZXE7Ci0JbWF4X2dwdV9mcmVxID0gcnBzLT5tYXhfZnJlcTsK
LQlpZiAoSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMCkg
ewotCQkvKiBDb252ZXJ0IEdUIGZyZXF1ZW5jeSB0byA1MCBIWiB1bml0cyAqLwotCQltaW5fZ3B1
X2ZyZXEgLz0gR0VOOV9GUkVRX1NDQUxFUjsKLQkJbWF4X2dwdV9mcmVxIC89IEdFTjlfRlJFUV9T
Q0FMRVI7Ci0JfQotCi0JLyoKLQkgKiBGb3IgZWFjaCBwb3RlbnRpYWwgR1BVIGZyZXF1ZW5jeSwg
bG9hZCBhIHJpbmcgZnJlcXVlbmN5IHdlJ2QgbGlrZQotCSAqIHRvIHVzZSBmb3IgbWVtb3J5IGFj
Y2Vzcy4gIFdlIGRvIHRoaXMgYnkgc3BlY2lmeWluZyB0aGUgSUEgZnJlcXVlbmN5Ci0JICogdGhl
IFBDVSBzaG91bGQgdXNlIGFzIGEgcmVmZXJlbmNlIHRvIGRldGVybWluZSB0aGUgcmluZyBmcmVx
dWVuY3kuCi0JICovCi0JZm9yIChncHVfZnJlcSA9IG1heF9ncHVfZnJlcTsgZ3B1X2ZyZXEgPj0g
bWluX2dwdV9mcmVxOyBncHVfZnJlcS0tKSB7Ci0JCWNvbnN0IGludCBkaWZmID0gbWF4X2dwdV9m
cmVxIC0gZ3B1X2ZyZXE7Ci0JCXVuc2lnbmVkIGludCBpYV9mcmVxID0gMCwgcmluZ19mcmVxID0g
MDsKLQotCQlpZiAoSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+
PSAxMCkgewotCQkJLyoKLQkJCSAqIHJpbmdfZnJlcSA9IDIgKiBHVC4gcmluZ19mcmVxIGlzIGlu
IDEwME1IeiB1bml0cwotCQkJICogTm8gZmxvb3IgcmVxdWlyZWQgZm9yIHJpbmcgZnJlcXVlbmN5
IG9uIFNLTC4KLQkJCSAqLwotCQkJcmluZ19mcmVxID0gZ3B1X2ZyZXE7Ci0JCX0gZWxzZSBpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA+PSA4KSB7Ci0JCQkvKiBtYXgoMiAqIEdULCBERFIpLiBOQjog
R1QgaXMgNTBNSHogdW5pdHMgKi8KLQkJCXJpbmdfZnJlcSA9IG1heChtaW5fcmluZ19mcmVxLCBn
cHVfZnJlcSk7Ci0JCX0gZWxzZSBpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikpIHsKLQkJCXJpbmdf
ZnJlcSA9IG11bHRfZnJhYyhncHVfZnJlcSwgNSwgNCk7Ci0JCQlyaW5nX2ZyZXEgPSBtYXgobWlu
X3JpbmdfZnJlcSwgcmluZ19mcmVxKTsKLQkJCS8qIGxlYXZlIGlhX2ZyZXEgYXMgdGhlIGRlZmF1
bHQsIGNob3NlbiBieSBjcHVmcmVxICovCi0JCX0gZWxzZSB7Ci0JCQkvKiBPbiBvbGRlciBwcm9j
ZXNzb3JzLCB0aGVyZSBpcyBubyBzZXBhcmF0ZSByaW5nCi0JCQkgKiBjbG9jayBkb21haW4sIHNv
IGluIG9yZGVyIHRvIGJvb3N0IHRoZSBiYW5kd2lkdGgKLQkJCSAqIG9mIHRoZSByaW5nLCB3ZSBu
ZWVkIHRvIHVwY2xvY2sgdGhlIENQVSAoaWFfZnJlcSkuCi0JCQkgKgotCQkJICogRm9yIEdQVSBm
cmVxdWVuY2llcyBsZXNzIHRoYW4gNzUwTUh6LAotCQkJICoganVzdCB1c2UgdGhlIGxvd2VzdCBy
aW5nIGZyZXEuCi0JCQkgKi8KLQkJCWlmIChncHVfZnJlcSA8IG1pbl9mcmVxKQotCQkJCWlhX2Zy
ZXEgPSA4MDA7Ci0JCQllbHNlCi0JCQkJaWFfZnJlcSA9IG1heF9pYV9mcmVxIC0gKChkaWZmICog
c2NhbGluZ19mYWN0b3IpIC8gMik7Ci0JCQlpYV9mcmVxID0gRElWX1JPVU5EX0NMT1NFU1QoaWFf
ZnJlcSwgMTAwKTsKLQkJfQotCi0JCXNhbmR5YnJpZGdlX3Bjb2RlX3dyaXRlKGRldl9wcml2LAot
CQkJCQlHRU42X1BDT0RFX1dSSVRFX01JTl9GUkVRX1RBQkxFLAotCQkJCQlpYV9mcmVxIDw8IEdF
TjZfUENPREVfRlJFUV9JQV9SQVRJT19TSElGVCB8Ci0JCQkJCXJpbmdfZnJlcSA8PCBHRU42X1BD
T0RFX0ZSRVFfUklOR19SQVRJT19TSElGVCB8Ci0JCQkJCWdwdV9mcmVxKTsKLQl9Ci19Ci0KIHN0
YXRpYyBpbnQgY2hlcnJ5dmlld19ycHNfbWF4X2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogewogCXUzMiB2YWwsIHJwMDsKQEAgLTc5NjUsMTggKzc4ODAsNiBAQCB2b2lk
IGludGVsX3Nhbml0aXplX2d0X3Bvd2Vyc2F2ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpCiAJCWdlbjZfcmVzZXRfcnBzX2ludGVycnVwdHMoZGV2X3ByaXYpOwogfQogCi1zdGF0
aWMgaW5saW5lIHZvaWQgaW50ZWxfZGlzYWJsZV9sbGNfcHN0YXRlKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQotewotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmk5MTUtPmd0X3BtLnJwcy5s
b2NrKTsKLQotCWlmICghaTkxNS0+Z3RfcG0ubGxjX3BzdGF0ZS5lbmFibGVkKQotCQlyZXR1cm47
Ci0KLQkvKiBDdXJyZW50bHkgdGhlcmUgaXMgbm8gSFcgY29uZmlndXJhdGlvbiB0byBiZSBkb25l
IHRvIGRpc2FibGUuICovCi0KLQlpOTE1LT5ndF9wbS5sbGNfcHN0YXRlLmVuYWJsZWQgPSBmYWxz
ZTsKLX0KLQogc3RhdGljIHZvaWQgaW50ZWxfZGlzYWJsZV9ycHMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogewogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5ndF9w
bS5ycHMubG9jayk7CkBAIC04MDA0LDIzICs3OTA3LDExIEBAIHZvaWQgaW50ZWxfZGlzYWJsZV9n
dF9wb3dlcnNhdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiAJaW50ZWxf
ZGlzYWJsZV9ycHMoZGV2X3ByaXYpOwogCWlmIChIQVNfTExDKGRldl9wcml2KSkKLQkJaW50ZWxf
ZGlzYWJsZV9sbGNfcHN0YXRlKGRldl9wcml2KTsKKwkJaW50ZWxfbGxjX2Rpc2FibGUoJmRldl9w
cml2LT5ndC5sbGMpOwogCiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+Z3RfcG0ucnBzLmxvY2sp
OwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfZW5hYmxlX2xsY19wc3RhdGUoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCi17Ci0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmaTkxNS0+
Z3RfcG0ucnBzLmxvY2spOwotCi0JaWYgKGk5MTUtPmd0X3BtLmxsY19wc3RhdGUuZW5hYmxlZCkK
LQkJcmV0dXJuOwotCi0JZ2VuNl91cGRhdGVfcmluZ19mcmVxKGk5MTUpOwotCi0JaTkxNS0+Z3Rf
cG0ubGxjX3BzdGF0ZS5lbmFibGVkID0gdHJ1ZTsKLX0KLQogc3RhdGljIHZvaWQgaW50ZWxfZW5h
YmxlX3JwcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJc3RydWN0IGlu
dGVsX3JwcyAqcnBzID0gJmRldl9wcml2LT5ndF9wbS5ycHM7CkBAIC04MDY0LDggKzc5NTUsOCBA
QCB2b2lkIGludGVsX2VuYWJsZV9ndF9wb3dlcnNhdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCiAJaWYgKEhBU19SUFMoZGV2X3ByaXYpKQogCQlpbnRlbF9lbmFibGVfcnBz
KGRldl9wcml2KTsKLQlpZiAoSEFTX0xMQyhkZXZfcHJpdikpCi0JCWludGVsX2VuYWJsZV9sbGNf
cHN0YXRlKGRldl9wcml2KTsKKworCWludGVsX2xsY19lbmFibGUoJmRldl9wcml2LT5ndC5sbGMp
OwogCiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+Z3RfcG0ucnBzLmxvY2spOwogfQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX3BtLmgKaW5kZXggOTNkMTkyZDA2MTBhLi4xYTVkMmU0MjEwZDYgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfcG0uaApAQCAtMzIsOSArMzIsOSBAQCB2b2lkIGludGVsX3BtX3NldHVwKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGludGVsX2dwdV9pcHNfaW5p
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRlbF9ncHVfaXBz
X3RlYXJkb3duKHZvaWQpOwogdm9pZCBpbnRlbF9pbml0X2d0X3Bvd2Vyc2F2ZShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwordm9pZCBpbnRlbF9kaXNhYmxlX2d0X3Bvd2Vyc2F2
ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpbnRlbF9zYW5pdGl6
ZV9ndF9wb3dlcnNhdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQg
aW50ZWxfZW5hYmxlX2d0X3Bvd2Vyc2F2ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpOwotdm9pZCBpbnRlbF9kaXNhYmxlX2d0X3Bvd2Vyc2F2ZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBnZW42X3Jwc19idXN5KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdik7CiB2b2lkIGdlbjZfcnBzX2lkbGUoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KTsKIHZvaWQgZ2VuNl9ycHNfYm9vc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEpOwotLSAKMi4yNC4wLnJjMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRl
c2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8v
aW50ZWwtZ2Z4

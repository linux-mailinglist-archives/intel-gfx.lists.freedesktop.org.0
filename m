Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 26AAA24A151
	for <lists+intel-gfx@lfdr.de>; Wed, 19 Aug 2020 16:09:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 08E606E3F5;
	Wed, 19 Aug 2020 14:09:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl [141.105.120.124])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3ECD06E3CB
 for <intel-gfx@lists.freedesktop.org>; Wed, 19 Aug 2020 14:09:12 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 19 Aug 2020 16:08:49 +0200
Message-Id: <20200819140904.1708856-10-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20200819140904.1708856-1-maarten.lankhorst@linux.intel.com>
References: <20200819140904.1708856-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 09/24] drm/i915: Use ww locking in
 intel_renderstate.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0byBzdGFydCB1c2luZyB3dyBsb2NraW5nIGluIGludGVsX2NvbnRleHRfcGluLCBm
b3IgdGhpcwp3ZSBuZWVkIHRvIGxvY2sgbXVsdGlwbGUgb2JqZWN0cywgYW5kIHRoZSBzaW5nbGUg
aTkxNV9nZW1fb2JqZWN0X2xvY2sKaXMgbm90IGVub3VnaC4KCkNvbnZlcnQgdG8gdXNpbmcgd3ct
d2FpdGluZywgYW5kIG1ha2Ugc3VyZSB3ZSBhbHdheXMgcGluIGludGVsX2NvbnRleHRfc3RhdGUs
CmV2ZW4gaWYgd2UgZG9uJ3QgaGF2ZSBhIHJlbmRlcnN0YXRlIG9iamVjdC4KClNpZ25lZC1vZmYt
Ynk6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVuLmxhbmtob3JzdEBsaW51eC5pbnRlbC5jb20+
ClJldmlld2VkLWJ5OiBUaG9tYXMgSGVsbHN0csO2bSA8dGhvbWFzLmhlbGxzdHJvbUBpbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyAgICAgICAgICB8IDIx
ICsrKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVuZGVyc3RhdGUuYyB8IDcz
ICsrKysrKysrKysrKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVu
ZGVyc3RhdGUuaCB8ICA5ICsrLQogMyBmaWxlcyBjaGFuZ2VkLCA3MSBpbnNlcnRpb25zKCspLCAz
MiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYwppbmRleCBlMDc1NWYx
YTkwNGIuLjg2OTRkZGJkYWM0YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCkBAIC00
MDYsMjEgKzQwNiwyMCBAQCBzdGF0aWMgaW50IF9fZW5naW5lc19yZWNvcmRfZGVmYXVsdHMoc3Ry
dWN0IGludGVsX2d0ICpndCkKIAkJLyogV2UgbXVzdCBiZSBhYmxlIHRvIHN3aXRjaCB0byBzb21l
dGhpbmchICovCiAJCUdFTV9CVUdfT04oIWVuZ2luZS0+a2VybmVsX2NvbnRleHQpOwogCi0JCWVy
ciA9IGludGVsX3JlbmRlcnN0YXRlX2luaXQoJnNvLCBlbmdpbmUpOwotCQlpZiAoZXJyKQotCQkJ
Z290byBvdXQ7Ci0KIAkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwogCQlpZiAo
SVNfRVJSKGNlKSkgewogCQkJZXJyID0gUFRSX0VSUihjZSk7CiAJCQlnb3RvIG91dDsKIAkJfQog
Ci0JCXJxID0gaW50ZWxfY29udGV4dF9jcmVhdGVfcmVxdWVzdChjZSk7CisJCWVyciA9IGludGVs
X3JlbmRlcnN0YXRlX2luaXQoJnNvLCBjZSk7CisJCWlmIChlcnIpCisJCQlnb3RvIGVycjsKKwor
CQlycSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUoY2UpOwogCQlpZiAoSVNfRVJSKHJxKSkgewogCQkJ
ZXJyID0gUFRSX0VSUihycSk7Ci0JCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7Ci0JCQlnb3RvIG91
dDsKKwkJCWdvdG8gZXJyX2Zpbmk7CiAJCX0KIAogCQllcnIgPSBpbnRlbF9lbmdpbmVfZW1pdF9j
dHhfd2EocnEpOwpAQCAtNDM0LDkgKzQzMywxMyBAQCBzdGF0aWMgaW50IF9fZW5naW5lc19yZWNv
cmRfZGVmYXVsdHMoc3RydWN0IGludGVsX2d0ICpndCkKIGVycl9ycToKIAkJcmVxdWVzdHNbaWRd
ID0gaTkxNV9yZXF1ZXN0X2dldChycSk7CiAJCWk5MTVfcmVxdWVzdF9hZGQocnEpOwotCQlpbnRl
bF9yZW5kZXJzdGF0ZV9maW5pKCZzbyk7Ci0JCWlmIChlcnIpCitlcnJfZmluaToKKwkJaW50ZWxf
cmVuZGVyc3RhdGVfZmluaSgmc28sIGNlKTsKK2VycjoKKwkJaWYgKGVycikgeworCQkJaW50ZWxf
Y29udGV4dF9wdXQoY2UpOwogCQkJZ290byBvdXQ7CisJCX0KIAl9CiAKIAkvKiBGbHVzaCB0aGUg
ZGVmYXVsdCBjb250ZXh0IGltYWdlIHRvIG1lbW9yeSwgYW5kIGVuYWJsZSBwb3dlcnNhdmluZy4g
Ki8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JlbmRlcnN0YXRl
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZW5kZXJzdGF0ZS5jCmluZGV4IDFi
ZmFkNTg5YzYzYi4uNTE2NGRlMDQwNDlkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9yZW5kZXJzdGF0ZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX3JlbmRlcnN0YXRlLmMKQEAgLTI3LDYgKzI3LDcgQEAKIAogI2luY2x1ZGUgImk5MTVfZHJ2
LmgiCiAjaW5jbHVkZSAiaW50ZWxfcmVuZGVyc3RhdGUuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9j
b250ZXh0LmgiCiAjaW5jbHVkZSAiaW50ZWxfcmluZy5oIgogCiBzdGF0aWMgY29uc3Qgc3RydWN0
IGludGVsX3JlbmRlcnN0YXRlX3JvZGF0YSAqCkBAIC0xNTcsMzMgKzE1OCw0NyBAQCBzdGF0aWMg
aW50IHJlbmRlcl9zdGF0ZV9zZXR1cChzdHJ1Y3QgaW50ZWxfcmVuZGVyc3RhdGUgKnNvLAogI3Vu
ZGVmIE9VVF9CQVRDSAogCiBpbnQgaW50ZWxfcmVuZGVyc3RhdGVfaW5pdChzdHJ1Y3QgaW50ZWxf
cmVuZGVyc3RhdGUgKnNvLAotCQkJICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQor
CQkJICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmo7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0gY2UtPmVuZ2lu
ZTsKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gTlVMTDsKIAlpbnQgZXJyOwog
CiAJbWVtc2V0KHNvLCAwLCBzaXplb2YoKnNvKSk7CiAKIAlzby0+cm9kYXRhID0gcmVuZGVyX3N0
YXRlX2dldF9yb2RhdGEoZW5naW5lKTsKLQlpZiAoIXNvLT5yb2RhdGEpCi0JCXJldHVybiAwOwor
CWlmIChzby0+cm9kYXRhKSB7CisJCWlmIChzby0+cm9kYXRhLT5iYXRjaF9pdGVtcyAqIDQgPiBQ
QUdFX1NJWkUpCisJCQlyZXR1cm4gLUVJTlZBTDsKKworCQlvYmogPSBpOTE1X2dlbV9vYmplY3Rf
Y3JlYXRlX2ludGVybmFsKGVuZ2luZS0+aTkxNSwgUEFHRV9TSVpFKTsKKwkJaWYgKElTX0VSUihv
YmopKQorCQkJcmV0dXJuIFBUUl9FUlIob2JqKTsKKworCQlzby0+dm1hID0gaTkxNV92bWFfaW5z
dGFuY2Uob2JqLCAmZW5naW5lLT5ndC0+Z2d0dC0+dm0sIE5VTEwpOworCQlpZiAoSVNfRVJSKHNv
LT52bWEpKSB7CisJCQllcnIgPSBQVFJfRVJSKHNvLT52bWEpOworCQkJZ290byBlcnJfb2JqOwor
CQl9CisJfQogCi0JaWYgKHNvLT5yb2RhdGEtPmJhdGNoX2l0ZW1zICogNCA+IFBBR0VfU0laRSkK
LQkJcmV0dXJuIC1FSU5WQUw7CisJaTkxNV9nZW1fd3dfY3R4X2luaXQoJnNvLT53dywgdHJ1ZSk7
CityZXRyeToKKwllcnIgPSBpbnRlbF9jb250ZXh0X3BpbihjZSk7CisJaWYgKGVycikKKwkJZ290
byBlcnJfZmluaTsKIAotCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfaW50ZXJuYWwoZW5n
aW5lLT5pOTE1LCBQQUdFX1NJWkUpOwotCWlmIChJU19FUlIob2JqKSkKLQkJcmV0dXJuIFBUUl9F
UlIob2JqKTsKKwkvKiByZXR1cm4gZWFybHkgaWYgdGhlcmUncyBub3RoaW5nIHRvIHNldHVwICov
CisJaWYgKCFlcnIgJiYgIXNvLT5yb2RhdGEpCisJCXJldHVybiAwOwogCi0Jc28tPnZtYSA9IGk5
MTVfdm1hX2luc3RhbmNlKG9iaiwgJmVuZ2luZS0+Z3QtPmdndHQtPnZtLCBOVUxMKTsKLQlpZiAo
SVNfRVJSKHNvLT52bWEpKSB7Ci0JCWVyciA9IFBUUl9FUlIoc28tPnZtYSk7Ci0JCWdvdG8gZXJy
X29iajsKLQl9CisJZXJyID0gaTkxNV9nZW1fb2JqZWN0X2xvY2soc28tPnZtYS0+b2JqLCAmc28t
Pnd3KTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9jb250ZXh0OwogCiAJZXJyID0gaTkxNV92bWFf
cGluKHNvLT52bWEsIDAsIDAsIFBJTl9HTE9CQUwgfCBQSU5fSElHSCk7CiAJaWYgKGVycikKLQkJ
Z290byBlcnJfb2JqOworCQlnb3RvIGVycl9jb250ZXh0OwogCiAJZXJyID0gcmVuZGVyX3N0YXRl
X3NldHVwKHNvLCBlbmdpbmUtPmk5MTUpOwogCWlmIChlcnIpCkBAIC0xOTMsOCArMjA4LDE4IEBA
IGludCBpbnRlbF9yZW5kZXJzdGF0ZV9pbml0KHN0cnVjdCBpbnRlbF9yZW5kZXJzdGF0ZSAqc28s
CiAKIGVycl91bnBpbjoKIAlpOTE1X3ZtYV91bnBpbihzby0+dm1hKTsKK2Vycl9jb250ZXh0Ogor
CWludGVsX2NvbnRleHRfdW5waW4oY2UpOworZXJyX2Zpbmk6CisJaWYgKGVyciA9PSAtRURFQURM
SykgeworCQllcnIgPSBpOTE1X2dlbV93d19jdHhfYmFja29mZigmc28tPnd3KTsKKwkJaWYgKCFl
cnIpCisJCQlnb3RvIHJldHJ5OworCX0KKwlpOTE1X2dlbV93d19jdHhfZmluaSgmc28tPnd3KTsK
IGVycl9vYmo6Ci0JaTkxNV9nZW1fb2JqZWN0X3B1dChvYmopOworCWlmIChvYmopCisJCWk5MTVf
Z2VtX29iamVjdF9wdXQob2JqKTsKIAlzby0+dm1hID0gTlVMTDsKIAlyZXR1cm4gZXJyOwogfQpA
QCAtMjA4LDExICsyMzMsOSBAQCBpbnQgaW50ZWxfcmVuZGVyc3RhdGVfZW1pdChzdHJ1Y3QgaW50
ZWxfcmVuZGVyc3RhdGUgKnNvLAogCWlmICghc28tPnZtYSkKIAkJcmV0dXJuIDA7CiAKLQlpOTE1
X3ZtYV9sb2NrKHNvLT52bWEpOwogCWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9vYmplY3QocnEs
IHNvLT52bWEtPm9iaiwgZmFsc2UpOwogCWlmIChlcnIgPT0gMCkKIAkJZXJyID0gaTkxNV92bWFf
bW92ZV90b19hY3RpdmUoc28tPnZtYSwgcnEsIDApOwotCWk5MTVfdm1hX3VubG9jayhzby0+dm1h
KTsKIAlpZiAoZXJyKQogCQlyZXR1cm4gZXJyOwogCkBAIC0yMzMsNyArMjU2LDE3IEBAIGludCBp
bnRlbF9yZW5kZXJzdGF0ZV9lbWl0KHN0cnVjdCBpbnRlbF9yZW5kZXJzdGF0ZSAqc28sCiAJcmV0
dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfcmVuZGVyc3RhdGVfZmluaShzdHJ1Y3QgaW50ZWxfcmVu
ZGVyc3RhdGUgKnNvKQordm9pZCBpbnRlbF9yZW5kZXJzdGF0ZV9maW5pKHN0cnVjdCBpbnRlbF9y
ZW5kZXJzdGF0ZSAqc28sCisJCQkgICAgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCWk5
MTVfdm1hX3VucGluX2FuZF9yZWxlYXNlKCZzby0+dm1hLCAwKTsKKwlpZiAoc28tPnZtYSkgewor
CQlpOTE1X3ZtYV91bnBpbihzby0+dm1hKTsKKwkJaTkxNV92bWFfY2xvc2Uoc28tPnZtYSk7CisJ
fQorCisJaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJaTkxNV9nZW1fd3dfY3R4X2ZpbmkoJnNv
LT53dyk7CisKKwlpZiAoc28tPnZtYSkKKwkJaTkxNV9nZW1fb2JqZWN0X3B1dChzby0+dm1hLT5v
YmopOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVuZGVy
c3RhdGUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JlbmRlcnN0YXRlLmgKaW5k
ZXggNTcwMGJlNjlhMDVhLi43MTNhYTFlODZjODAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX3JlbmRlcnN0YXRlLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfcmVuZGVyc3RhdGUuaApAQCAtMjUsOSArMjUsMTAgQEAKICNkZWZpbmUgX0lOVEVM
X1JFTkRFUlNUQVRFX0hfCiAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgorI2luY2x1ZGUgImk5
MTVfZ2VtLmgiCiAKIHN0cnVjdCBpOTE1X3JlcXVlc3Q7Ci1zdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
Oworc3RydWN0IGludGVsX2NvbnRleHQ7CiBzdHJ1Y3QgaTkxNV92bWE7CiAKIHN0cnVjdCBpbnRl
bF9yZW5kZXJzdGF0ZV9yb2RhdGEgewpAQCAtNDksNiArNTAsNyBAQCBleHRlcm4gY29uc3Qgc3Ry
dWN0IGludGVsX3JlbmRlcnN0YXRlX3JvZGF0YSBnZW44X251bGxfc3RhdGU7CiBleHRlcm4gY29u
c3Qgc3RydWN0IGludGVsX3JlbmRlcnN0YXRlX3JvZGF0YSBnZW45X251bGxfc3RhdGU7CiAKIHN0
cnVjdCBpbnRlbF9yZW5kZXJzdGF0ZSB7CisJc3RydWN0IGk5MTVfZ2VtX3d3X2N0eCB3dzsKIAlj
b25zdCBzdHJ1Y3QgaW50ZWxfcmVuZGVyc3RhdGVfcm9kYXRhICpyb2RhdGE7CiAJc3RydWN0IGk5
MTVfdm1hICp2bWE7CiAJdTMyIGJhdGNoX29mZnNldDsKQEAgLTU4LDkgKzYwLDEwIEBAIHN0cnVj
dCBpbnRlbF9yZW5kZXJzdGF0ZSB7CiB9OwogCiBpbnQgaW50ZWxfcmVuZGVyc3RhdGVfaW5pdChz
dHJ1Y3QgaW50ZWxfcmVuZGVyc3RhdGUgKnNvLAotCQkJICAgc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKTsKKwkJCSAgIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiBpbnQgaW50ZWxf
cmVuZGVyc3RhdGVfZW1pdChzdHJ1Y3QgaW50ZWxfcmVuZGVyc3RhdGUgKnNvLAogCQkJICAgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpOwotdm9pZCBpbnRlbF9yZW5kZXJzdGF0ZV9maW5pKHN0cnVj
dCBpbnRlbF9yZW5kZXJzdGF0ZSAqc28pOwordm9pZCBpbnRlbF9yZW5kZXJzdGF0ZV9maW5pKHN0
cnVjdCBpbnRlbF9yZW5kZXJzdGF0ZSAqc28sCisJCQkgICAgc3RydWN0IGludGVsX2NvbnRleHQg
KmNlKTsKIAogI2VuZGlmIC8qIF9JTlRFTF9SRU5ERVJTVEFURV9IXyAqLwotLSAKMi4yOC4wCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

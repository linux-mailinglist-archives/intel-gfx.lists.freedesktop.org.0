Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 36F28100EBE
	for <lists+intel-gfx@lfdr.de>; Mon, 18 Nov 2019 23:24:45 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 846796E83F;
	Mon, 18 Nov 2019 22:24:43 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 61F6F6E841
 for <intel-gfx@lists.freedesktop.org>; Mon, 18 Nov 2019 22:24:39 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Nov 2019 14:24:33 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,321,1569308400"; d="scan'208";a="406244343"
Received: from orsosgc001.ra.intel.com ([10.23.184.150])
 by fmsmga005.fm.intel.com with ESMTP; 18 Nov 2019 14:24:33 -0800
From: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
To: intel-gfx@lists.freedesktop.org,
 Lionel G Landwerlin <lionel.g.landwerlin@intel.com>,
 Chris Wilson <chris.p.wilson@intel.com>
Date: Mon, 18 Nov 2019 14:24:32 -0800
Message-Id: <20191118222432.65399-2-umesh.nerlige.ramappa@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191118222432.65399-1-umesh.nerlige.ramappa@intel.com>
References: <20191118222432.65399-1-umesh.nerlige.ramappa@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 2/2] drm/i915/perf: Configure OAR for
 specific context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

R2VuMTIgc3VwcG9ydHMgc2F2aW5nL3Jlc3RvcmluZyByZW5kZXIgY291bnRlcnMgcGVyIGNvbnRl
eHQuIEFwcGx5IE9BUgpjb25maWd1cmF0aW9uIG9ubHkgZm9yIHRoZSBjb250ZXh0IHRoYXQgaXMg
cGFzc2VkIGluIHRvIHBlcmYuCgp2MjoKLSBGaXggT0FDVFhDT05UUk9MIHZhbHVlIHRvIG9ubHkg
c3RvcC9yZXN1bWUgY291bnRlcnMuCi0gUmVtb3ZlIGdlbjEyX3VwZGF0ZV9yZWdfc3RhdGVfdW5s
b2NrZWQgYXMgcG93ZXIgc3RhdGUgaXMgYWxyZWFkeQogIGFwcGxpZWQgYnkgdGhlIGNhbGxlci4K
CnYzOiAoTGlvbmVsKQotIE1vdmUgcmVnaXN0ZXIgaW5pdGlhbGl6YXRpb24gaW50byB0aGUgYXJy
YXkKLSBBc3N1bWUgYSB2YWxpZCBvYV9jb25maWcgaW4gZW5hYmxlX21ldHJpY19zZXQKClNpZ25l
ZC1vZmYtYnk6IFVtZXNoIE5lcmxpZ2UgUmFtYXBwYSA8dW1lc2gubmVybGlnZS5yYW1hcHBhQGlu
dGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyB8IDE5OSArKysr
KysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTEyIGluc2VydGlv
bnMoKyksIDg3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcGVyZi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKaW5kZXggY2E1
ODUwMmE2N2Q4Li5lYTkxMTk2MWZkOGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcGVyZi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCkBAIC0y
MDgwLDIwICsyMDgwLDEyIEBAIGdlbjhfdXBkYXRlX3JlZ19zdGF0ZV91bmxvY2tlZChjb25zdCBz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJdTMyICpyZWdfc3RhdGUgPSBjZS0+bHJjX3JlZ19z
dGF0ZTsKIAlpbnQgaTsKIAotCWlmIChJU19HRU4oc3RyZWFtLT5wZXJmLT5pOTE1LCAxMikpIHsK
LQkJdTMyIGZvcm1hdCA9IHN0cmVhbS0+b2FfYnVmZmVyLmZvcm1hdDsKKwlyZWdfc3RhdGVbY3R4
X29hY3R4Y3RybCArIDFdID0KKwkJKHN0cmVhbS0+cGVyaW9kX2V4cG9uZW50IDw8IEdFTjhfT0Ff
VElNRVJfUEVSSU9EX1NISUZUKSB8CisJCShzdHJlYW0tPnBlcmlvZGljID8gR0VOOF9PQV9USU1F
Ul9FTkFCTEUgOiAwKSB8CisJCUdFTjhfT0FfQ09VTlRFUl9SRVNVTUU7CiAKLQkJcmVnX3N0YXRl
W2N0eF9vYWN0eGN0cmwgKyAxXSA9Ci0JCQkoZm9ybWF0IDw8IEdFTjEyX09BUl9PQUNPTlRST0xf
Q09VTlRFUl9GT1JNQVRfU0hJRlQpIHwKLQkJCShzdHJlYW0tPm9hX2NvbmZpZyA/IEdFTjEyX09B
Ul9PQUNPTlRST0xfQ09VTlRFUl9FTkFCTEUgOiAwKTsKLQl9IGVsc2UgewotCQlyZWdfc3RhdGVb
Y3R4X29hY3R4Y3RybCArIDFdID0KLQkJCShzdHJlYW0tPnBlcmlvZF9leHBvbmVudCA8PCBHRU44
X09BX1RJTUVSX1BFUklPRF9TSElGVCkgfAotCQkJKHN0cmVhbS0+cGVyaW9kaWMgPyBHRU44X09B
X1RJTUVSX0VOQUJMRSA6IDApIHwKLQkJCUdFTjhfT0FfQ09VTlRFUl9SRVNVTUU7Ci0JfQotCi0J
Zm9yIChpID0gMDsgISFjdHhfZmxleGV1MCAmJiBpIDwgQVJSQVlfU0laRShmbGV4X3JlZ3MpOyBp
KyspCisJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUoZmxleF9yZWdzKTsgaSsrKQogCQlyZWdf
c3RhdGVbY3R4X2ZsZXhldTAgKyBpICogMiArIDFdID0KIAkJCW9hX2NvbmZpZ19mbGV4X3JlZyhz
dHJlYW0tPm9hX2NvbmZpZywgZmxleF9yZWdzW2ldKTsKIApAQCAtMjIyNiwzNCArMjIxOCw1MSBA
QCBzdGF0aWMgaW50IGdlbjhfY29uZmlndXJlX2NvbnRleHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmN0eCwKIAlyZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgaW50IGdlbjEyX2VtaXRfb2FyX2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGJvb2wgZW5hYmxlKQorc3RhdGljIGludCBn
ZW4xMl9jb25maWd1cmVfb2FyX2NvbnRleHQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSwgYm9vbCBlbmFibGUpCiB7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0JdTMyICpjczsK
LQlpbnQgZXJyID0gMDsKLQotCXJxID0gaTkxNV9yZXF1ZXN0X2NyZWF0ZShjZSk7Ci0JaWYgKElT
X0VSUihycSkpCi0JCXJldHVybiBQVFJfRVJSKHJxKTsKLQotCWNzID0gaW50ZWxfcmluZ19iZWdp
bihycSwgNCk7Ci0JaWYgKElTX0VSUihjcykpIHsKLQkJZXJyID0gUFRSX0VSUihjcyk7Ci0JCWdv
dG8gb3V0OwotCX0KLQotCSpjcysrID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oMSk7Ci0JKmNzKysg
PSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0NPTlRFWFRfQ09OVFJPTChjZS0+ZW5naW5lLT5t
bWlvX2Jhc2UpKTsKLQkqY3MrKyA9IF9NQVNLRURfRklFTEQoR0VOMTJfQ1RYX0NUUkxfT0FSX0NP
TlRFWFRfRU5BQkxFLAotCQkJICAgICAgZW5hYmxlID8gR0VOMTJfQ1RYX0NUUkxfT0FSX0NPTlRF
WFRfRU5BQkxFIDogMCk7Ci0JKmNzKysgPSBNSV9OT09QOworCWludCBlcnI7CisJc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlID0gc3RyZWFtLT5waW5uZWRfY3R4OworCXUzMiBmb3JtYXQgPSBzdHJl
YW0tPm9hX2J1ZmZlci5mb3JtYXQ7CisJc3RydWN0IGZsZXggcmVnc19jb250ZXh0W10gPSB7CisJ
CXsKKwkJCUdFTjhfT0FDVFhDT05UUk9MLAorCQkJc3RyZWFtLT5wZXJmLT5jdHhfb2FjdHhjdHJs
X29mZnNldCArIDEsCisJCQllbmFibGUgPyBHRU44X09BX0NPVU5URVJfUkVTVU1FIDogMCwKKwkJ
fSwKKwl9OworCS8qIE9mZnNldHMgaW4gcmVnc19scmkgYXJlIG5vdCB1c2VkIHNpbmNlIHRoaXMg
Y29uZmlndXJhdGlvbiBpcyBvbmx5CisJICogYXBwbGllZCB1c2luZyBMUkkuIEluaXRpYWxpemUg
dGhlIGNvcnJlY3Qgb2Zmc2V0cyBmb3IgcG9zdGVyaXR5LgorCSAqLworI2RlZmluZSBHRU4xMl9P
QVJfT0FDT05UUk9MX09GRlNFVCAweDVCMAorCXN0cnVjdCBmbGV4IHJlZ3NfbHJpW10gPSB7CisJ
CXsKKwkJCUdFTjEyX09BUl9PQUNPTlRST0wsCisJCQlHRU4xMl9PQVJfT0FDT05UUk9MX09GRlNF
VCArIDEsCisJCQkoZm9ybWF0IDw8IEdFTjEyX09BUl9PQUNPTlRST0xfQ09VTlRFUl9GT1JNQVRf
U0hJRlQpIHwKKwkJCShlbmFibGUgPyBHRU4xMl9PQVJfT0FDT05UUk9MX0NPVU5URVJfRU5BQkxF
IDogMCkKKwkJfSwKKwkJeworCQkJUklOR19DT05URVhUX0NPTlRST0woY2UtPmVuZ2luZS0+bW1p
b19iYXNlKSwKKwkJCUNUWF9DT05URVhUX0NPTlRST0wsCisJCQlfTUFTS0VEX0ZJRUxEKEdFTjEy
X0NUWF9DVFJMX09BUl9DT05URVhUX0VOQUJMRSwKKwkJCQkgICAgICBlbmFibGUgPworCQkJCSAg
ICAgIEdFTjEyX0NUWF9DVFJMX09BUl9DT05URVhUX0VOQUJMRSA6CisJCQkJICAgICAgMCkKKwkJ
fSwKKwl9OwogCi0JaW50ZWxfcmluZ19hZHZhbmNlKHJxLCBjcyk7CisJLyogTW9kaWZ5IHRoZSBj
b250ZXh0IGltYWdlIG9mIHBpbm5lZCBjb250ZXh0IHdpdGggcmVnc19jb250ZXh0Ki8KKwllcnIg
PSBpbnRlbF9jb250ZXh0X2xvY2tfcGlubmVkKGNlKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJy
OwogCi1vdXQ6Ci0JaTkxNV9yZXF1ZXN0X2FkZChycSk7CisJZXJyID0gZ2VuOF9tb2RpZnlfY29u
dGV4dChjZSwgcmVnc19jb250ZXh0LCBBUlJBWV9TSVpFKHJlZ3NfY29udGV4dCkpOworCWludGVs
X2NvbnRleHRfdW5sb2NrX3Bpbm5lZChjZSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKIAot
CXJldHVybiBlcnI7CisJLyogQXBwbHkgcmVnc19scmkgdXNpbmcgTFJJIHdpdGggcGlubmVkIGNv
bnRleHQgKi8KKwlyZXR1cm4gZ2VuOF9tb2RpZnlfc2VsZihjZSwgcmVnc19scmksIEFSUkFZX1NJ
WkUocmVnc19scmkpKTsKIH0KIAogLyoKQEAgLTIyNzksNTMgKzIyODgsMTYgQEAgc3RhdGljIGlu
dCBnZW4xMl9lbWl0X29hcl9jb25maWcoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBib29sIGVu
YWJsZSkKICAqICAgcGVyLWNvbnRleHQgT0Egc3RhdGUuCiAgKgogICogTm90ZTogaXQncyBvbmx5
IHRoZSBSQ1MvUmVuZGVyIGNvbnRleHQgdGhhdCBoYXMgYW55IE9BIHN0YXRlLgorICogTm90ZTog
dGhlIGZpcnN0IGZsZXggcmVnaXN0ZXIgcGFzc2VkIG11c3QgYWx3YXlzIGJlIFJfUFdSX0NMS19T
VEFURQogICovCi1zdGF0aWMgaW50IGxyY19jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCi0JCQkJICAgICAgY29uc3Qgc3RydWN0IGk5MTVfb2Ff
Y29uZmlnICpvYV9jb25maWcpCitzdGF0aWMgaW50IG9hX2NvbmZpZ3VyZV9hbGxfY29udGV4dHMo
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKKwkJCQkgICAgIHN0cnVjdCBmbGV4ICpy
ZWdzLAorCQkJCSAgICAgc2l6ZV90IG51bV9yZWdzKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1ID0gc3RyZWFtLT5wZXJmLT5pOTE1OwotCS8qIFRoZSBNTUlPIG9mZnNldHMgZm9y
IEZsZXggRVUgcmVnaXN0ZXJzIGFyZW4ndCBjb250aWd1b3VzICovCi0JY29uc3QgdTMyIGN0eF9m
bGV4ZXUwID0gc3RyZWFtLT5wZXJmLT5jdHhfZmxleGV1MF9vZmZzZXQ7Ci0jZGVmaW5lIGN0eF9m
bGV4ZXVOKE4pIChjdHhfZmxleGV1MCArIDIgKiAoTikgKyAxKQotCXN0cnVjdCBmbGV4IHJlZ3Nb
XSA9IHsKLQkJewotCQkJR0VOOF9SX1BXUl9DTEtfU1RBVEUsCi0JCQlDVFhfUl9QV1JfQ0xLX1NU
QVRFLAotCQl9LAotCQl7Ci0JCQlJU19HRU4oaTkxNSwgMTIpID8KLQkJCUdFTjEyX09BUl9PQUNP
TlRST0wgOiBHRU44X09BQ1RYQ09OVFJPTCwKLQkJCXN0cmVhbS0+cGVyZi0+Y3R4X29hY3R4Y3Ry
bF9vZmZzZXQgKyAxLAotCQl9LAotCQl7IEVVX1BFUkZfQ05UTDAsIGN0eF9mbGV4ZXVOKDApIH0s
Ci0JCXsgRVVfUEVSRl9DTlRMMSwgY3R4X2ZsZXhldU4oMSkgfSwKLQkJeyBFVV9QRVJGX0NOVEwy
LCBjdHhfZmxleGV1TigyKSB9LAotCQl7IEVVX1BFUkZfQ05UTDMsIGN0eF9mbGV4ZXVOKDMpIH0s
Ci0JCXsgRVVfUEVSRl9DTlRMNCwgY3R4X2ZsZXhldU4oNCkgfSwKLQkJeyBFVV9QRVJGX0NOVEw1
LCBjdHhfZmxleGV1Tig1KSB9LAotCQl7IEVVX1BFUkZfQ05UTDYsIGN0eF9mbGV4ZXVOKDYpIH0s
Ci0JfTsKLSN1bmRlZiBjdHhfZmxleGV1TgogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZTsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LCAqY247Ci0Jc2l6ZV90IGFycmF5X3Np
emUgPSBJU19HRU4oaTkxNSwgMTIpID8gMiA6IEFSUkFZX1NJWkUocmVncyk7Ci0JaW50IGksIGVy
cjsKLQotCWlmIChJU19HRU4oaTkxNSwgMTIpKSB7Ci0JCXUzMiBmb3JtYXQgPSBzdHJlYW0tPm9h
X2J1ZmZlci5mb3JtYXQ7Ci0KLQkJcmVnc1sxXS52YWx1ZSA9Ci0JCQkoZm9ybWF0IDw8IEdFTjEy
X09BUl9PQUNPTlRST0xfQ09VTlRFUl9GT1JNQVRfU0hJRlQpIHwKLQkJCShvYV9jb25maWcgPyBH
RU4xMl9PQVJfT0FDT05UUk9MX0NPVU5URVJfRU5BQkxFIDogMCk7Ci0JfSBlbHNlIHsKLQkJcmVn
c1sxXS52YWx1ZSA9Ci0JCQkoc3RyZWFtLT5wZXJpb2RfZXhwb25lbnQgPDwgR0VOOF9PQV9USU1F
Ul9QRVJJT0RfU0hJRlQpIHwKLQkJCShzdHJlYW0tPnBlcmlvZGljID8gR0VOOF9PQV9USU1FUl9F
TkFCTEUgOiAwKSB8Ci0JCQlHRU44X09BX0NPVU5URVJfUkVTVU1FOwotCX0KLQotCWZvciAoaSA9
IDI7ICEhY3R4X2ZsZXhldTAgJiYgaSA8IGFycmF5X3NpemU7IGkrKykKLQkJcmVnc1tpXS52YWx1
ZSA9IG9hX2NvbmZpZ19mbGV4X3JlZyhvYV9jb25maWcsIHJlZ3NbaV0ucmVnKTsKKwlpbnQgZXJy
OwogCiAJbG9ja2RlcF9hc3NlcnRfaGVsZCgmc3RyZWFtLT5wZXJmLT5sb2NrKTsKIApAQCAtMjM1
NSw3ICsyMzI3LDcgQEAgc3RhdGljIGludCBscmNfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJ1
Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCiAJCXNwaW5fdW5sb2NrKCZpOTE1LT5nZW0u
Y29udGV4dHMubG9jayk7CiAKLQkJZXJyID0gZ2VuOF9jb25maWd1cmVfY29udGV4dChjdHgsIHJl
Z3MsIGFycmF5X3NpemUpOworCQllcnIgPSBnZW44X2NvbmZpZ3VyZV9jb250ZXh0KGN0eCwgcmVn
cywgbnVtX3JlZ3MpOwogCQlpZiAoZXJyKSB7CiAJCQlpOTE1X2dlbV9jb250ZXh0X3B1dChjdHgp
OwogCQkJcmV0dXJuIGVycjsKQEAgLTIzODAsNyArMjM1Miw3IEBAIHN0YXRpYyBpbnQgbHJjX2Nv
bmZpZ3VyZV9hbGxfY29udGV4dHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAog
CQlyZWdzWzBdLnZhbHVlID0gaW50ZWxfc3NldV9tYWtlX3JwY3MoaTkxNSwgJmNlLT5zc2V1KTsK
IAotCQllcnIgPSBnZW44X21vZGlmeV9zZWxmKGNlLCByZWdzLCBhcnJheV9zaXplKTsKKwkJZXJy
ID0gZ2VuOF9tb2RpZnlfc2VsZihjZSwgcmVncywgbnVtX3JlZ3MpOwogCQlpZiAoZXJyKQogCQkJ
cmV0dXJuIGVycjsKIAl9CkBAIC0yMzg4LDYgKzIzNjAsNTYgQEAgc3RhdGljIGludCBscmNfY29u
ZmlndXJlX2FsbF9jb250ZXh0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCXJl
dHVybiAwOwogfQogCitzdGF0aWMgaW50IGdlbjEyX2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3Ry
dWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKKwkJCQkJY29uc3Qgc3RydWN0IGk5MTVfb2Ff
Y29uZmlnICpvYV9jb25maWcpCit7CisJc3RydWN0IGZsZXggcmVnc1tdID0geworCQl7CisJCQlH
RU44X1JfUFdSX0NMS19TVEFURSwKKwkJCUNUWF9SX1BXUl9DTEtfU1RBVEUsCisJCX0sCisJfTsK
KworCXJldHVybiBvYV9jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cmVhbSwgcmVncywgQVJSQVlf
U0laRShyZWdzKSk7Cit9CisKK3N0YXRpYyBpbnQgbHJjX2NvbmZpZ3VyZV9hbGxfY29udGV4dHMo
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKKwkJCQkgICAgICBjb25zdCBzdHJ1Y3Qg
aTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZykKK3sKKwkvKiBUaGUgTU1JTyBvZmZzZXRzIGZvciBG
bGV4IEVVIHJlZ2lzdGVycyBhcmVuJ3QgY29udGlndW91cyAqLworCWNvbnN0IHUzMiBjdHhfZmxl
eGV1MCA9IHN0cmVhbS0+cGVyZi0+Y3R4X2ZsZXhldTBfb2Zmc2V0OworI2RlZmluZSBjdHhfZmxl
eGV1TihOKSAoY3R4X2ZsZXhldTAgKyAyICogKE4pICsgMSkKKwlzdHJ1Y3QgZmxleCByZWdzW10g
PSB7CisJCXsKKwkJCUdFTjhfUl9QV1JfQ0xLX1NUQVRFLAorCQkJQ1RYX1JfUFdSX0NMS19TVEFU
RSwKKwkJfSwKKwkJeworCQkJR0VOOF9PQUNUWENPTlRST0wsCisJCQlzdHJlYW0tPnBlcmYtPmN0
eF9vYWN0eGN0cmxfb2Zmc2V0ICsgMSwKKwkJfSwKKwkJeyBFVV9QRVJGX0NOVEwwLCBjdHhfZmxl
eGV1TigwKSB9LAorCQl7IEVVX1BFUkZfQ05UTDEsIGN0eF9mbGV4ZXVOKDEpIH0sCisJCXsgRVVf
UEVSRl9DTlRMMiwgY3R4X2ZsZXhldU4oMikgfSwKKwkJeyBFVV9QRVJGX0NOVEwzLCBjdHhfZmxl
eGV1TigzKSB9LAorCQl7IEVVX1BFUkZfQ05UTDQsIGN0eF9mbGV4ZXVOKDQpIH0sCisJCXsgRVVf
UEVSRl9DTlRMNSwgY3R4X2ZsZXhldU4oNSkgfSwKKwkJeyBFVV9QRVJGX0NOVEw2LCBjdHhfZmxl
eGV1Tig2KSB9LAorCX07CisjdW5kZWYgY3R4X2ZsZXhldU4KKwlpbnQgaTsKKworCXJlZ3NbMV0u
dmFsdWUgPQorCQkoc3RyZWFtLT5wZXJpb2RfZXhwb25lbnQgPDwgR0VOOF9PQV9USU1FUl9QRVJJ
T0RfU0hJRlQpIHwKKwkJKHN0cmVhbS0+cGVyaW9kaWMgPyBHRU44X09BX1RJTUVSX0VOQUJMRSA6
IDApIHwKKwkJR0VOOF9PQV9DT1VOVEVSX1JFU1VNRTsKKworCWZvciAoaSA9IDI7IGkgPCBBUlJB
WV9TSVpFKHJlZ3MpOyBpKyspCisJCXJlZ3NbaV0udmFsdWUgPSBvYV9jb25maWdfZmxleF9yZWco
b2FfY29uZmlnLCByZWdzW2ldLnJlZyk7CisKKwlyZXR1cm4gb2FfY29uZmlndXJlX2FsbF9jb250
ZXh0cyhzdHJlYW0sIHJlZ3MsIEFSUkFZX1NJWkUocmVncykpOworfQorCiBzdGF0aWMgaW50IGdl
bjhfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHsK
IAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPnVuY29yZTsKQEAgLTI0NzEs
NyArMjQ5Myw3IEBAIHN0YXRpYyBpbnQgZ2VuMTJfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5
MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKiB0byBtYWtlIHN1cmUgYWxsIHNsaWNlcy9zdWJz
bGljZXMgYXJlIE9OIGJlZm9yZSB3cml0aW5nIHRvIE5PQQogCSAqIHJlZ2lzdGVycy4KIAkgKi8K
LQlyZXQgPSBscmNfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJlYW0sIG9hX2NvbmZpZyk7CisJ
cmV0ID0gZ2VuMTJfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJlYW0sIG9hX2NvbmZpZyk7CiAJ
aWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIApAQCAtMjQ4MSw4ICsyNTAzLDcgQEAgc3RhdGljIGlu
dCBnZW4xMl9lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFt
KQogCSAqIHJlcXVlc3RlZCB0aGlzLgogCSAqLwogCWlmIChzdHJlYW0tPmN0eCkgewotCQlyZXQg
PSBnZW4xMl9lbWl0X29hcl9jb25maWcoc3RyZWFtLT5waW5uZWRfY3R4LAotCQkJCQkgICAgb2Ff
Y29uZmlnICE9IE5VTEwpOworCQlyZXQgPSBnZW4xMl9jb25maWd1cmVfb2FyX2NvbnRleHQoc3Ry
ZWFtLCB0cnVlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAJfQpAQCAtMjUxNiwxMSAr
MjUzNywxMSBAQCBzdGF0aWMgdm9pZCBnZW4xMl9kaXNhYmxlX21ldHJpY19zZXQoc3RydWN0IGk5
MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBz
dHJlYW0tPnVuY29yZTsKIAogCS8qIFJlc2V0IGFsbCBjb250ZXh0cycgc2xpY2VzL3N1YnNsaWNl
cyBjb25maWd1cmF0aW9ucy4gKi8KLQlscmNfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJlYW0s
IE5VTEwpOworCWdlbjEyX2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RyZWFtLCBOVUxMKTsKIAog
CS8qIGRpc2FibGUgdGhlIGNvbnRleHQgc2F2ZS9yZXN0b3JlIG9yIE9BUiBjb3VudGVycyAqLwog
CWlmIChzdHJlYW0tPmN0eCkKLQkJZ2VuMTJfZW1pdF9vYXJfY29uZmlnKHN0cmVhbS0+cGlubmVk
X2N0eCwgZmFsc2UpOworCQlnZW4xMl9jb25maWd1cmVfb2FyX2NvbnRleHQoc3RyZWFtLCBmYWxz
ZSk7CiAKIAkvKiBNYWtlIHN1cmUgd2UgZGlzYWJsZSBub2EgdG8gc2F2ZSBwb3dlci4gKi8KIAlp
bnRlbF91bmNvcmVfcm13KHVuY29yZSwgUlBNX0NPTkZJRzEsIEdFTjEwX0dUX05PQV9FTkFCTEUs
IDApOwpAQCAtMjg2Miw3ICsyODgzLDExIEBAIHZvaWQgaTkxNV9vYV9pbml0X3JlZ19zdGF0ZShj
b25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCXJldHVybjsKIAogCXN0cmVhbSA9IGVu
Z2luZS0+aTkxNS0+cGVyZi5leGNsdXNpdmVfc3RyZWFtOwotCWlmIChzdHJlYW0pCisJLyoKKwkg
KiBGb3IgZ2VuMTIsIG9ubHkgQ1RYX1JfUFdSX0NMS19TVEFURSBuZWVkcyB1cGRhdGUsIGJ1dCB0
aGUgY2FsbGVyCisJICogaXMgYWxyZWFkeSBkb2luZyB0aGF0LCBzbyBub3RoaW5nIHRvIGJlIGRv
bmUgZm9yIGdlbjEyIGhlcmUuCisJICovCisJaWYgKHN0cmVhbSAmJiBJTlRFTF9HRU4oc3RyZWFt
LT5wZXJmLT5pOTE1KSA8IDEyKQogCQlnZW44X3VwZGF0ZV9yZWdfc3RhdGVfdW5sb2NrZWQoY2Us
IHN0cmVhbSk7CiB9CiAKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vaW50ZWwtZ2Z4

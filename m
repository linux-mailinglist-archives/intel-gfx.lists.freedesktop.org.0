Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 743601A377F
	for <lists+intel-gfx@lfdr.de>; Thu,  9 Apr 2020 17:51:32 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BAD3E6EBFE;
	Thu,  9 Apr 2020 15:51:30 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CA2316EC02
 for <intel-gfx@lists.freedesktop.org>; Thu,  9 Apr 2020 15:51:29 +0000 (UTC)
IronPort-SDR: e9myeq2fozNpJRx1DodezepUrchApCKFFMgpzdX1NnsnoqocowMYgyTRhLWDnyI2e5Q1qv10JV
 Z556Kkivv04Q==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 09 Apr 2020 08:51:29 -0700
IronPort-SDR: GsWt61XgU9dPJUS4k4SjoyMK3wQGhC950oT/EQuDc4xTauXjQBI8Vzd3PWgAnSnx04L+keRyev
 bl/PHwXw9yIA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.72,363,1580803200"; d="scan'208";a="257857231"
Received: from unknown (HELO slisovsk-Lenovo-ideapad-720S-13IKB.fi.intel.com)
 ([10.237.72.89])
 by orsmga008.jf.intel.com with ESMTP; 09 Apr 2020 08:51:27 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  9 Apr 2020 18:47:29 +0300
Message-Id: <20200409154730.18568-13-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200409154730.18568-1-stanislav.lisovskiy@intel.com>
References: <20200409154730.18568-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v22 12/13] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KCnYxMDog
LSBGaXggQ0RDTEsgY29ycnVwdGlvbiwgYmVjYXVzZSBvZiBnbG9iYWwgc3RhdGUgZ2V0dGluZyBz
ZXJpYWxpemVkCiAgICAgICB3aXRob3V0IG1vZGVzZXQsIHdoaWNoIGNhdXNlZCBjb3B5aW5nIG9m
IG5vbi1jYWxjdWxhdGVkIGNkY2xrCiAgICAgICB0byBiZSBjb3BpZWQgdG8gZGV2X3ByaXYodGhh
bmtzIHRvIFZpbGxlIGZvciB0aGUgaGludCkuCgp2MTE6IC0gUmVtb3ZlIHVubmVlZGVkIGhlYWRl
cnMgYW5kIHNwYWNlcyhNYXR0aGV3IFJvcGVyKQogICAgIC0gUmVtb3ZlIHVubmVlZGVkIGludGVs
X3Fndl9pbmZvIHFpIHN0cnVjdCBmcm9tIGJ3IGNoZWNrIGFuZCB6ZXJvCiAgICAgICBvdXQgdGhl
IG5lZWRlZCBvbmUoTWF0dGhldyBSb3BlcikKICAgICAtIENoYW5nZWQgUUdWIGVycm9yIG1lc3Nh
Z2UgdG8gaGF2ZSBtb3JlIGNsZWFyIG1lYW5pbmcoTWF0dGhldyBSb3BlcikKICAgICAtIFVzZSBz
dGF0ZS0+bW9kZXNldF9zZXQgaW5zdGVhZCBvZiBhbnlfbXMoTWF0dGhldyBSb3BlcikKICAgICAt
IE1vdmVkIE5VTV9TQUdWX1BPSU5UUyBmcm9tIGk5MTVfcmVnLmggdG8gaTkxNV9kcnYuaCB3aGVy
ZSBpdCdzIHVzZWQKICAgICAtIEtlZXAgdXNpbmcgY3J0Y19zdGF0ZS0+aHcuYWN0aXZlIGluc3Rl
YWQgb2YgLmVuYWJsZShNYXR0aGV3IFJvcGVyKQogICAgIC0gTW92ZWQgdW5yZWxhdGVkIGNoYW5n
ZXMgdG8gb3RoZXIgcGF0Y2godXNpbmcgbGF0ZW5jeSBhcyBwYXJhbWV0ZXIKICAgICAgIGZvciBw
bGFuZSB3bSBjYWxjdWxhdGlvbiwgbW92ZWQgdG8gU0FHViByZWZhY3RvcmluZyBwYXRjaCkKCnYx
MjogLSBGaXggcmViYXNlIGNvbmZsaWN0IHdpdGggb3duIHRlbXBvcmFyeSBTQUdWL1FHViBmaXgu
CiAgICAgLSBSZW1vdmUgdW5uZWNlc3NhcnkgbWFzayBiZWluZyB6ZXJvIGNoZWNrIHdoZW4gdW5t
YXNraW5nCiAgICAgICBxZ3YgcG9pbnRzIGFzIHRoaXMgaXMgY29tcGxldGVseSBsZWdhbChNYXR0
IFJvcGVyKQogICAgIC0gQ2hlY2sgaWYgd2UgYXJlIHNldHRpbmcgdGhlIHNhbWUgbWFzayBhcyBh
bHJlYWR5IGJlaW5nIHNldAogICAgICAgaW4gaGFyZHdhcmUgdG8gcHJldmVudCBlcnJvciBmcm9t
IFBDb2RlLgogICAgIC0gRml4IGVycm9yIG1lc3NhZ2Ugd2hlbiByZXN0cmljdGluZy91bnJlc3Ry
aWN0aW5nIHFndiBwb2ludHMKICAgICAgIHRvICJtYXNrL3VubWFzayIgd2hpY2ggc291bmRzIG1v
cmUgYWNjdXJhdGUoTWF0dCBSb3BlcikKICAgICAtIE1vdmUgc2FndiBzdGF0dXMgc2V0dGluZyB0
byBpY2xfZ2V0X2J3X2luZm8gZnJvbSBhdG9taWMgY2hlY2sKICAgICAgIGFzIHRoaXMgc2hvdWxk
IGJlIGNhbGN1bGF0ZWQgb25seSBvbmNlLihNYXR0IFJvcGVyKQogICAgIC0gRWRpdGVkIGNvbW1l
bnRzIGZvciB0aGUgY2FzZSB3aGVuIHdlIGNhbid0IGVuYWJsZSBTQUdWIGFuZAogICAgICAgdXNl
IG9ubHkgMSBRR1YgcG9pbnQgd2l0aCBoaWdoZXN0IGJhbmR3aWR0aCB0byBiZSBtb3JlCiAgICAg
ICB1bmRlcnN0YW5kYWJsZS4oTWF0dCBSb3BlcikKCnYxMzogLSBNb3ZlZCBtYXhfZGF0YV9yYXRl
IGluIGJ3IGNoZWNrIHRvIGNsb3NlciBzY29wZShWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBDaGFu
Z2VkIGNvbW1lbnQgZm9yIHplcm8gbmV3X21hc2sgaW4gcWd2IHBvaW50cyBtYXNraW5nIGZ1bmN0
aW9uCiAgICAgICB0byBiZXR0ZXIgcmVmbGVjdCByZWFsaXR5KFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIFNpbXBsaWZpZWQgYml0IG1hc2sgb3BlcmF0aW9uIGluIHFndiBwb2ludHMgbWFza2luZyBm
dW5jdGlvbgogICAgICAgKFZpbGxlIFN5cmrDpGzDpCkKICAgICAtIE1vdmVkIGludGVsX3Fndl9w
b2ludHNfbWFzayBjbG9zZXIgdG8gZ2VuMTEgU0FHViBkaXNhYmxpbmcsCiAgICAgICBob3dldmVy
IHRoaXMgc3RpbGwgY2FuJ3QgYmUgdW5kZXIgbW9kZXNldCBjb25kaXRpb24oVmlsbGUgU3lyasOk
bMOkKQogICAgIC0gUGFja2VkIHFndl9wb2ludHNfbWFzayBhcyB1OCBhbmQgbW92ZWQgY2xvc2Vy
IHRvIHBpcGVfc2Fndl9tYXNrCiAgICAgICAoVmlsbGUgU3lyasOkbMOkKQogICAgIC0gRXh0cmFj
dGVkIFBDb2RlIGNoYW5nZXMgdG8gc2VwYXJhdGUgcGF0Y2guKFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIE5vdyB0cmVhdCBudW1fcGxhbmVzIDAgc2FtZSBhcyAxIHRvIGF2b2lkIGNvbmZ1c2lvbiBh
bmQKICAgICAgIHJldHVybmluZyBtYXhfYncgYXMgMCwgd2hpY2ggd291bGQgcHJldmVudCBjaG9v
c2luZyBRR1YKICAgICAgIHBvaW50IGhhdmluZyBtYXggYmFuZHdpZHRoIGluIGNhc2UgaWYgU0FH
ViBpcyBub3QgYWxsb3dlZCwKICAgICAgIGFzIHBlciBCU3BlYyhWaWxsZSBTeXJqw6Rsw6QpCiAg
ICAgLSBEbyB0aGUgYWN0dWFsIHFndl9wb2ludHNfbWFzayBzd2FwIGluIHRoZSBzYW1lIHBsYWNl
IGFzCiAgICAgICBhbGwgb3RoZXIgZ2xvYmFsIHN0YXRlIHBhcnRzIGxpa2UgY2RjbGsgYXJlIHN3
YXBwZWQuCiAgICAgICBJbiB0aGUgbmV4dCBwYXRjaCwgdGhpcyBhbGwgd2lsbCBiZSBtb3ZlZCB0
byBidyBzdGF0ZSBhcwogICAgICAgZ2xvYmFsIHN0YXRlLCBvbmNlIG5ldyBnbG9iYWwgc3RhdGUg
cGF0Y2ggc2VyaWVzIGZyb20gVmlsbGUKICAgICAgIGxhbmRzCgp2MTQ6IC0gTm93IHVzaW5nIGds
b2JhbCBzdGF0ZSB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHFndiBwb2ludHMKICAgICAtIEFkZGVk
IGdsb2JhbCBzdGF0ZSBsb2NraW5nIGJhY2ssIG90aGVyd2lzZSB3ZSBzZWVtIHRvIHJlYWQKICAg
ICAgIGJ3IHN0YXRlIGluIGEgd3Jvbmcgd2F5LgoKdjE1OiAtIEFkZGVkIFRPRE8gY29tbWVudCBm
b3IgbmVhciBhdG9taWMgZ2xvYmFsIHN0YXRlIGxvY2tpbmcgaW4KICAgICAgIGJ3IGNvZGUuCgp2
MTY6IC0gRml4ZWQgaW50ZWxfYXRvbWljX2J3XyogZnVuY3Rpb25zIHRvIGJlIGludGVsX2J3Xyog
YXMgZGlzY3Vzc2VkCiAgICAgICB3aXRoIEphbmkgTmlrdWxhLgogICAgIC0gVGFrZSBid19zdGF0
ZV9jaGFuZ2VkIGZsYWcgaW50byB1c2UuCgp2MTc6IC0gTW92ZWQgcWd2IHBvaW50IHJlbGF0ZWQg
bWFuaXB1bGF0aW9ucyBuZXh0IHRvIFNBR1YgY29kZSwgYXMKICAgICAgIHRob3NlIGFyZSBzZW1h
bnRpY2FsbHkgcmVsYXRlZChWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBSZW5hbWVkIHRob3NlIGlu
dG8gaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlCiAgICAgICAoVmlsbGUgU3ly
asOkbMOkKQoKdjE4OiAtIE1vdmUgc2FndiByZWxhdGVkIGNhbGxzIGZyb20gY29tbWl0IHRhaWwg
aW50bwogICAgICAgaW50ZWxfc2Fndl8ocHJlKXwocG9zdClfcGxhbmVfdXBkYXRlKFZpbGxlIFN5
cmrDpGzDpCkKCnYxOTogLSBVc2UgaW50ZWxfYXRvbWljX2dldF9id18ob2xkKXwobmV3KV9zdGF0
ZSB3aGljaCBpcyBpbnRlbmRlZAogICAgICAgZm9yIGNvbW1pdCB0YWlsIHN0YWdlLgoKdjIwOiAt
IFJldHVybiBtYXggYmFuZHdpZHRoIGZvciAwIHBsYW5lcyhWaWxsZSkKICAgICAtIENvbnN0aWZ5
IG9sZF9id19zdGF0ZSBpbiBid19hdG9taWNfY2hlY2soVmlsbGUpCiAgICAgLSBSZW1vdmVkIHNv
bWUgZGVidWdzKFZpbGxlKQogICAgIC0gQWRkZWQgZGF0YSByYXRlIHRvIGRlYnVnIHByaW50IHdo
ZW4gbm8gUUdWIHBvaW50cyhWaWxsZSkKICAgICAtIFJlbW92ZWQgc29tZSBjb21tZW50cyhWaWxs
ZSkKCi12MjEgLSBGaXhlZCByZWJhc2UgY29uZmxpY3QKClNpZ25lZC1vZmYtYnk6IFN0YW5pc2xh
diBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNraXlAaW50ZWwuY29tPgpDYzogVmlsbGUgU3ly
asOkbMOkIDx2aWxsZS5zeXJqYWxhQGludGVsLmNvbT4KQ2M6IEphbWVzIEF1c211cyA8amFtZXMu
YXVzbXVzQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2J3LmMgICAgICAgfCAxMzkgKysrKysrKysrKysrKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2J3LmggICAgICAgfCAgIDkgKysKIC4uLi9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9wbS5jICAgICAgICAgICAgICAgfCAgNjEgKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX3BtLmggICAgICAgICAgICAgICB8ICAgMiArCiA1IGZpbGVzIGNoYW5nZWQsIDE3
NyBpbnNlcnRpb25zKCspLCAzNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2J3LmMKaW5kZXggZjc5MzI5N2VmOTQ2Li5jOGUwY2RiMDZkNjQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMKQEAgLTgsNiArOCw5IEBACiAjaW5jbHVk
ZSAiaW50ZWxfYncuaCIKICNpbmNsdWRlICJpbnRlbF9kaXNwbGF5X3R5cGVzLmgiCiAjaW5jbHVk
ZSAiaW50ZWxfc2lkZWJhbmQuaCIKKyNpbmNsdWRlICJpbnRlbF9hdG9taWMuaCIKKyNpbmNsdWRl
ICJpbnRlbF9wbS5oIgorCiAKIC8qIFBhcmFtZXRlcnMgZm9yIFFjbGsgR2V5c2VydmlsbGUgKFFH
VikgKi8KIHN0cnVjdCBpbnRlbF9xZ3ZfcG9pbnQgewpAQCAtMTEzLDYgKzExNiwyNiBAQCBzdGF0
aWMgaW50IGljbF9wY29kZV9yZWFkX3Fndl9wb2ludF9pbmZvKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4gMDsKIH0KIAoraW50IGljbF9wY29kZV9yZXN0cmljdF9x
Z3ZfcG9pbnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBw
b2ludHNfbWFzaykKK3sKKwlpbnQgcmV0OworCisJLyogYnNwZWMgc2F5cyB0byBrZWVwIHJldHJ5
aW5nIGZvciBhdCBsZWFzdCAxIG1zICovCisJcmV0ID0gc2tsX3Bjb2RlX3JlcXVlc3QoZGV2X3By
aXYsIElDTF9QQ09ERV9TQUdWX0RFX01FTV9TU19DT05GSUcsCisJCQkJcG9pbnRzX21hc2ssCisJ
CQkJR0VOMTFfUENPREVfUE9JTlRTX1JFU1RSSUNURURfTUFTSywKKwkJCQlHRU4xMV9QQ09ERV9Q
T0lOVFNfUkVTVFJJQ1RFRCwKKwkJCQkxKTsKKworCWlmIChyZXQgPCAwKSB7CisJCURSTV9FUlJP
UigiRmFpbGVkIHRvIGRpc2FibGUgcWd2IHBvaW50cyAoJWQpXG4iLCByZXQpOworCQlyZXR1cm4g
cmV0OworCX0KKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGljbF9nZXRfcWd2X3BvaW50
cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICBzdHJ1Y3QgaW50
ZWxfcWd2X2luZm8gKnFpKQogewpAQCAtMjQwLDYgKzI2MywxNiBAQCBzdGF0aWMgaW50IGljbF9n
ZXRfYndfaW5mbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGNvbnN0IHN0cnVj
dCBpbnRlbAogCQkJYnJlYWs7CiAJfQogCisJLyoKKwkgKiBJbiBjYXNlIGlmIFNBR1YgaXMgZGlz
YWJsZWQgaW4gQklPUywgd2UgYWx3YXlzIGdldCAxCisJICogU0FHViBwb2ludCwgYnV0IHdlIGNh
bid0IHNlbmQgUENvZGUgY29tbWFuZHMgdG8gcmVzdHJpY3QgaXQKKwkgKiBhcyBpdCB3aWxsIGZh
aWwgYW5kIHBvaW50bGVzcyBhbnl3YXkuCisJICovCisJaWYgKHFpLm51bV9wb2ludHMgPT0gMSkK
KwkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX05PVF9DT05UUk9MTEVEOworCWVs
c2UKKwkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX0VOQUJMRUQ7CisKIAlyZXR1
cm4gMDsKIH0KIApAQCAtMjQ4LDYgKzI4MSwxMSBAQCBzdGF0aWMgdW5zaWduZWQgaW50IGljbF9t
YXhfYncoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogewogCWludCBpOwogCisJ
LyoKKwkgKiBMZXQncyByZXR1cm4gbWF4IGJ3IGZvciAwIHBsYW5lcworCSAqLworCW51bV9wbGFu
ZXMgPSBtYXgoMSwgbnVtX3BsYW5lcyk7CisKIAlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShk
ZXZfcHJpdi0+bWF4X2J3KTsgaSsrKSB7CiAJCWNvbnN0IHN0cnVjdCBpbnRlbF9id19pbmZvICpi
aSA9CiAJCQkmZGV2X3ByaXYtPm1heF9id1tpXTsKQEAgLTI3NywzNCArMzE1LDYgQEAgdm9pZCBp
bnRlbF9id19pbml0X2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaWNs
X2dldF9id19pbmZvKGRldl9wcml2LCAmaWNsX3NhX2luZm8pOwogfQogCi1zdGF0aWMgdW5zaWdu
ZWQgaW50IGludGVsX21heF9kYXRhX3JhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LAotCQkJCQlpbnQgbnVtX3BsYW5lcykKLXsKLQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+
PSAxMSkgewotCQkvKgotCQkgKiBBbnkgYncgZ3JvdXAgaGFzIHNhbWUgYW1vdW50IG9mIFFHViBw
b2ludHMKLQkJICovCi0JCWNvbnN0IHN0cnVjdCBpbnRlbF9id19pbmZvICpiaSA9Ci0JCQkmZGV2
X3ByaXYtPm1heF9id1swXTsKLQkJdW5zaWduZWQgaW50IG1pbl9idyA9IFVJTlRfTUFYOwotCQlp
bnQgaTsKLQotCQkvKgotCQkgKiBGSVhNRSB3aXRoIFNBR1YgZGlzYWJsZWQgbWF5YmUgd2UgY2Fu
IGFzc3VtZQotCQkgKiBwb2ludCAxIHdpbGwgYWx3YXlzIGJlIHVzZWQ/IFNlZW1zIHRvIG1hdGNo
Ci0JCSAqIHRoZSBiZWhhdmlvdXIgb2JzZXJ2ZWQgaW4gdGhlIHdpbGQuCi0JCSAqLwotCQlmb3Ig
KGkgPSAwOyBpIDwgYmktPm51bV9xZ3ZfcG9pbnRzOyBpKyspIHsKLQkJCXVuc2lnbmVkIGludCBi
dyA9IGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9wbGFuZXMsIGkpOwotCi0JCQltaW5fYncgPSBt
aW4oYncsIG1pbl9idyk7Ci0JCX0KLQkJcmV0dXJuIG1pbl9idzsKLQl9IGVsc2UgewotCQlyZXR1
cm4gVUlOVF9NQVg7Ci0JfQotfQotCiBzdGF0aWMgdW5zaWduZWQgaW50IGludGVsX2J3X2NydGNf
bnVtX2FjdGl2ZV9wbGFuZXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUpCiB7CiAJLyoKQEAgLTQxOSwxMCArNDI5LDE1IEBAIGludCBpbnRlbF9id19hdG9taWNfY2hl
Y2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwgKm9sZF9jcnRjX3N0YXRlOwogCXN0cnVjdCBp
bnRlbF9id19zdGF0ZSAqbmV3X2J3X3N0YXRlID0gTlVMTDsKLQl1bnNpZ25lZCBpbnQgZGF0YV9y
YXRlLCBtYXhfZGF0YV9yYXRlOworCWNvbnN0IHN0cnVjdCBpbnRlbF9id19zdGF0ZSAqb2xkX2J3
X3N0YXRlID0gTlVMTDsKKwl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlOwogCXVuc2lnbmVkIGludCBu
dW1fYWN0aXZlX3BsYW5lczsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKIAlpbnQgaSwgcmV0
OworCXUzMiBhbGxvd2VkX3BvaW50cyA9IDA7CisJdW5zaWduZWQgaW50IG1heF9id19wb2ludCA9
IDAsIG1heF9idyA9IDA7CisJdW5zaWduZWQgaW50IG51bV9xZ3ZfcG9pbnRzID0gZGV2X3ByaXYt
Pm1heF9id1swXS5udW1fcWd2X3BvaW50czsKKwl1MzIgbWFzayA9ICgxIDw8IG51bV9xZ3ZfcG9p
bnRzKSAtIDE7CiAKIAkvKiBGSVhNRSBlYXJsaWVyIGdlbnMgbmVlZCBzb21lIGNoZWNrcyB0b28g
Ki8KIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQpAQCAtNDY5LDE5ICs0ODQsNzMgQEAg
aW50IGludGVsX2J3X2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKIAkJcmV0dXJuIHJldDsKIAogCWRhdGFfcmF0ZSA9IGludGVsX2J3X2RhdGFfcmF0ZShkZXZf
cHJpdiwgbmV3X2J3X3N0YXRlKTsKKwlkYXRhX3JhdGUgPSBESVZfUk9VTkRfVVAoZGF0YV9yYXRl
LCAxMDAwKTsKKwogCW51bV9hY3RpdmVfcGxhbmVzID0gaW50ZWxfYndfbnVtX2FjdGl2ZV9wbGFu
ZXMoZGV2X3ByaXYsIG5ld19id19zdGF0ZSk7CiAKLQltYXhfZGF0YV9yYXRlID0gaW50ZWxfbWF4
X2RhdGFfcmF0ZShkZXZfcHJpdiwgbnVtX2FjdGl2ZV9wbGFuZXMpOworCWZvciAoaSA9IDA7IGkg
PCBudW1fcWd2X3BvaW50czsgaSsrKSB7CisJCXVuc2lnbmVkIGludCBtYXhfZGF0YV9yYXRlOwog
Ci0JZGF0YV9yYXRlID0gRElWX1JPVU5EX1VQKGRhdGFfcmF0ZSwgMTAwMCk7CisJCW1heF9kYXRh
X3JhdGUgPSBpY2xfbWF4X2J3KGRldl9wcml2LCBudW1fYWN0aXZlX3BsYW5lcywgaSk7CisJCS8q
CisJCSAqIFdlIG5lZWQgdG8ga25vdyB3aGljaCBxZ3YgcG9pbnQgZ2l2ZXMgdXMKKwkJICogbWF4
aW11bSBiYW5kd2lkdGggaW4gb3JkZXIgdG8gZGlzYWJsZSBTQUdWCisJCSAqIGlmIHdlIGZpbmQg
dGhhdCB3ZSBleGNlZWQgU0FHViBibG9jayB0aW1lCisJCSAqIHdpdGggd2F0ZXJtYXJrcy4gQnkg
dGhhdCBtb21lbnQgd2UgYWxyZWFkeQorCQkgKiBoYXZlIHRob3NlLCBhcyBpdCBpcyBjYWxjdWxh
dGVkIGVhcmxpZXIgaW4KKwkJICogaW50ZWxfYXRvbWljX2NoZWNrLAorCQkgKi8KKwkJaWYgKG1h
eF9kYXRhX3JhdGUgPiBtYXhfYncpIHsKKwkJCW1heF9id19wb2ludCA9IGk7CisJCQltYXhfYncg
PSBtYXhfZGF0YV9yYXRlOworCQl9CisJCWlmIChtYXhfZGF0YV9yYXRlID49IGRhdGFfcmF0ZSkK
KwkJCWFsbG93ZWRfcG9pbnRzIHw9IEJJVChpKTsKKwkJRFJNX0RFQlVHX0tNUygiUUdWIHBvaW50
ICVkOiBtYXggYncgJWQgcmVxdWlyZWQgJWRcbiIsCisJCQkgICAgICBpLCBtYXhfZGF0YV9yYXRl
LCBkYXRhX3JhdGUpOworCX0KIAotCWlmIChkYXRhX3JhdGUgPiBtYXhfZGF0YV9yYXRlKSB7Ci0J
CWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJCYW5kd2lkdGggJXUgTUIvcyBl
eGNlZWRzIG1heCBhdmFpbGFibGUgJWQgTUIvcyAoJWQgYWN0aXZlIHBsYW5lcylcbiIsCi0JCQkg
ICAgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJLyoKKwkg
KiBCU3BlYyBzdGF0ZXMgdGhhdCB3ZSBhbHdheXMgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGFs
bG93ZWQgcG9pbnQKKwkgKiBsZWZ0LCBzbyBpZiB3ZSBjb3VsZG4ndCAtIHNpbXBseSByZWplY3Qg
dGhlIGNvbmZpZ3VyYXRpb24gZm9yIG9idmlvdXMKKwkgKiByZWFzb25zLgorCSAqLworCWlmIChh
bGxvd2VkX3BvaW50cyA9PSAwKSB7CisJCURSTV9ERUJVR19LTVMoIk5vIFFHViBwb2ludHMgcHJv
dmlkZSBzdWZmaWNpZW50IG1lbW9yeSIKKwkJCSAgICAgICIgYmFuZHdpZHRoICVkIGZvciBkaXNw
bGF5IGNvbmZpZ3VyYXRpb24uXG4iLCBkYXRhX3JhdGUpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9
CiAKKwkvKgorCSAqIExlYXZlIG9ubHkgc2luZ2xlIHBvaW50IHdpdGggaGlnaGVzdCBiYW5kd2lk
dGgsIGlmCisJICogd2UgY2FuJ3QgZW5hYmxlIFNBR1YgZHVlIHRvIHRoZSBpbmNyZWFzZWQgbWVt
b3J5IGxhdGVuY3kgaXQgbWF5CisJICogY2F1c2UuCisJICovCisJaWYgKCFpbnRlbF9jYW5fZW5h
YmxlX3NhZ3YobmV3X2J3X3N0YXRlKSkgeworCQlhbGxvd2VkX3BvaW50cyA9IEJJVChtYXhfYndf
cG9pbnQpOworCQlEUk1fREVCVUdfS01TKCJObyBTQUdWLCB1c2luZyBzaW5nbGUgUUdWIHBvaW50
ICVkXG4iLAorCQkJICAgICAgbWF4X2J3X3BvaW50KTsKKwl9CisJLyoKKwkgKiBXZSBzdG9yZSB0
aGUgb25lcyB3aGljaCBuZWVkIHRvIGJlIG1hc2tlZCBhcyB0aGF0IGlzIHdoYXQgUENvZGUKKwkg
KiBhY3R1YWxseSBhY2NlcHRzIGFzIGEgcGFyYW1ldGVyLgorCSAqLworCW5ld19id19zdGF0ZS0+
cWd2X3BvaW50c19tYXNrID0gKH5hbGxvd2VkX3BvaW50cykgJiBtYXNrOworCisJb2xkX2J3X3N0
YXRlID0gaW50ZWxfYXRvbWljX2dldF9vbGRfYndfc3RhdGUoc3RhdGUpOworCWlmICghb2xkX2J3
X3N0YXRlKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCS8qCisJICogSWYgdGhlIGFjdHVhbCBtYXNr
IGhhZCBjaGFuZ2VkIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXQKKwkgKiB0aGUgY29tbWl0cyBh
cmUgc2VyaWFsaXplZChpbiBjYXNlIHRoaXMgaXMgYSBub21vZGVzZXQsIG5vbmJsb2NraW5nKQor
CSAqLworCWlmIChuZXdfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzayAhPSBvbGRfYndfc3RhdGUt
PnFndl9wb2ludHNfbWFzaykgeworCQlyZXQgPSBpbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2Jh
bF9zdGF0ZSgmbmV3X2J3X3N0YXRlLT5iYXNlKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7
CisJfQorCiAJcmV0dXJuIDA7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfYncuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
YncuaAppbmRleCBkNmRmOTEwNTgyMjMuLmVjYzA4NmUxZjMwZiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfYncuaApAQCAtMjQsNiArMjQsMTMgQEAgc3RydWN0IGludGVsX2J3
X3N0YXRlIHsKIAkgKi8KIAl1OCBwaXBlX3NhZ3ZfcmVqZWN0OwogCisJLyoKKwkgKiBDdXJyZW50
IFFHViBwb2ludHMgbWFzaywgd2hpY2ggcmVzdHJpY3RzCisJICogc29tZSBwYXJ0aWN1bGFyIFNB
R1Ygc3RhdGVzLCBub3QgdG8gY29uZnVzZQorCSAqIHdpdGggcGlwZV9zYWd2X21hc2suCisJICov
CisJdTggcWd2X3BvaW50c19tYXNrOworCiAJdW5zaWduZWQgaW50IGRhdGFfcmF0ZVtJOTE1X01B
WF9QSVBFU107CiAJdTggbnVtX2FjdGl2ZV9wbGFuZXNbSTkxNV9NQVhfUElQRVNdOwogfTsKQEAg
LTQ0LDUgKzUxLDcgQEAgaW50IGludGVsX2J3X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KTsKIGludCBpbnRlbF9id19hdG9taWNfY2hlY2soc3RydWN0IGludGVsX2F0b21p
Y19zdGF0ZSAqc3RhdGUpOwogdm9pZCBpbnRlbF9id19jcnRjX3VwZGF0ZShzdHJ1Y3QgaW50ZWxf
Yndfc3RhdGUgKmJ3X3N0YXRlLAogCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSk7CitpbnQgaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fndl9wb2ludHMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgdTMyIHBvaW50c19tYXNrKTsKIAogI2Vu
ZGlmIC8qIF9fSU5URUxfQldfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IDM3ZTEzYzk4YWMxMC4uZTYwN2VjNWMx
Y2M1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXlfdHlwZXMuaApAQCAtNjk4LDYgKzY5OCw5IEBAIGVudW0gY29sb3JfcGxhbmUgewogCUNPTE9S
X1BMQU5FX1VWCiB9OwogCisvKiBCU3BlYyBwcmVjaXNlbHkgZGVmaW5lcyB0aGlzICovCisjZGVm
aW5lIE5VTV9TQUdWX1BPSU5UUyA4CisKIHN0cnVjdCBza2xfcGlwZV93bSB7CiAJc3RydWN0IHNr
bF9wbGFuZV93bSBwbGFuZXNbSTkxNV9NQVhfUExBTkVTXTsKIAlib29sIGNhbl9zYWd2OwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX3BtLmMKaW5kZXggZGNjMzEyNjcwYTk0Li4yMzg3OTMyNDNmZDkgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtMzc2MSw3ICszNzYxLDEwIEBAIGludGVsX2Rpc2FibGVf
c2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB2b2lkIGludGVsX3NhZ3Zf
cHJlX3BsYW5lX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRl
dik7CisJaW50IHJldDsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm5ld19id19zdGF0
ZSA9IE5VTEw7CisJY29uc3Qgc3RydWN0IGludGVsX2J3X3N0YXRlICpvbGRfYndfc3RhdGUgPSBO
VUxMOworCXUzMiBuZXdfbWFzayA9IDA7CiAKIAkvKgogCSAqIEp1c3QgcmV0dXJuIGlmIHdlIGNh
bid0IGNvbnRyb2wgU0FHViBvciBkb24ndCBoYXZlIGl0LgpAQCAtMzc3NywxNiArMzc4MCw0OCBA
QCB2b2lkIGludGVsX3NhZ3ZfcHJlX3BsYW5lX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0
YXRlICpzdGF0ZSkKIAlpZiAoIW5ld19id19zdGF0ZSkKIAkJcmV0dXJuOwogCi0JaWYgKCFpbnRl
bF9jYW5fZW5hYmxlX3NhZ3YobmV3X2J3X3N0YXRlKSkgeworCWlmIChJTlRFTF9HRU4oZGV2X3By
aXYpIDwgMTEgJiYgIWludGVsX2Nhbl9lbmFibGVfc2FndihuZXdfYndfc3RhdGUpKSB7CiAJCWlu
dGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7CiAJCXJldHVybjsKIAl9CisKKwlvbGRfYndfc3Rh
dGUgPSBpbnRlbF9hdG9taWNfZ2V0X29sZF9id19zdGF0ZShzdGF0ZSk7CisJaWYgKCFvbGRfYndf
c3RhdGUpCisJCXJldHVybjsKKworCS8qCisJICogTm90aGluZyB0byBtYXNrCisJICovCisJaWYg
KG5ld19id19zdGF0ZS0+cWd2X3BvaW50c19tYXNrID09IG9sZF9id19zdGF0ZS0+cWd2X3BvaW50
c19tYXNrKQorCQlyZXR1cm47CisKKwluZXdfbWFzayA9IG9sZF9id19zdGF0ZS0+cWd2X3BvaW50
c19tYXNrIHwgbmV3X2J3X3N0YXRlLT5xZ3ZfcG9pbnRzX21hc2s7CisKKwkvKgorCSAqIElmIG5l
dyBtYXNrIGlzIHplcm8gLSBtZWFucyB0aGVyZSBpcyBub3RoaW5nIHRvIG1hc2ssCisJICogd2Ug
Y2FuIG9ubHkgdW5tYXNrLCB3aGljaCBzaG91bGQgYmUgZG9uZSBpbiB1bm1hc2suCisJICovCisJ
aWYgKCFuZXdfbWFzaykKKwkJcmV0dXJuOworCisJLyoKKwkgKiBSZXN0cmljdCByZXF1aXJlZCBx
Z3YgcG9pbnRzIGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbi4KKwkgKiBBY2NvcmRp
bmcgdG8gQlNwZWMgd2UgY2FuJ3QgbWFzayBhbmQgdW5tYXNrIHFndiBwb2ludHMgYXQgdGhlIHNh
bWUKKwkgKiB0aW1lLiBBbHNvIG1hc2tpbmcgc2hvdWxkIGJlIGRvbmUgYmVmb3JlIHVwZGF0aW5n
IHRoZSBjb25maWd1cmF0aW9uCisJICogYW5kIHVubWFza2luZyBhZnRlcndhcmRzLgorCSAqLwor
CXJldCA9IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKGRldl9wcml2LCBuZXdfbWFzayk7
CisJaWYgKHJldCA8IDApCisJCWRybV9lcnIoJmRldl9wcml2LT5kcm0sICJDb3VsZCBub3QgbWFz
ayByZXF1aXJlZCBxZ3YgcG9pbnRzKCVkKVxuIiwgcmV0KTsKIH0KIAogdm9pZCBpbnRlbF9zYWd2
X3Bvc3RfcGxhbmVfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2Uu
ZGV2KTsKKwlpbnQgcmV0OwogCWNvbnN0IHN0cnVjdCBpbnRlbF9id19zdGF0ZSAqbmV3X2J3X3N0
YXRlID0gTlVMTDsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm9sZF9id19zdGF0ZSA9
IE5VTEw7CisJdTMyIG5ld19tYXNrID0gMDsKIAogCS8qCiAJICogSnVzdCByZXR1cm4gaWYgd2Ug
Y2FuJ3QgY29udHJvbCBTQUdWIG9yIGRvbid0IGhhdmUgaXQuCkBAIC0zODAyLDEwICszODM3LDMy
IEBAIHZvaWQgaW50ZWxfc2Fndl9wb3N0X3BsYW5lX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWlj
X3N0YXRlICpzdGF0ZSkKIAlpZiAoIW5ld19id19zdGF0ZSkKIAkJcmV0dXJuOwogCi0JaWYgKGlu
dGVsX2Nhbl9lbmFibGVfc2FndihuZXdfYndfc3RhdGUpKSB7CisJaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPCAxMSAmJiBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YobmV3X2J3X3N0YXRlKSkgewogCQlp
bnRlbF9lbmFibGVfc2FndihkZXZfcHJpdik7CiAJCXJldHVybjsKIAl9CisKKwlvbGRfYndfc3Rh
dGUgPSBpbnRlbF9hdG9taWNfZ2V0X29sZF9id19zdGF0ZShzdGF0ZSk7CisJaWYgKCFvbGRfYndf
c3RhdGUpCisJCXJldHVybjsKKworCS8qCisJICogTm90aGluZyB0byB1bm1hc2sKKwkgKi8KKwlp
ZiAobmV3X2J3X3N0YXRlLT5xZ3ZfcG9pbnRzX21hc2sgPT0gb2xkX2J3X3N0YXRlLT5xZ3ZfcG9p
bnRzX21hc2spCisJCXJldHVybjsKKworCW5ld19tYXNrID0gbmV3X2J3X3N0YXRlLT5xZ3ZfcG9p
bnRzX21hc2s7CisKKwkvKgorCSAqIEFsbG93IHJlcXVpcmVkIHFndiBwb2ludHMgYWZ0ZXIgdXBk
YXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24uCisJICogQWNjb3JkaW5nIHRvIEJTcGVjIHdlIGNhbid0
IG1hc2sgYW5kIHVubWFzayBxZ3YgcG9pbnRzIGF0IHRoZSBzYW1lCisJICogdGltZS4gQWxzbyBt
YXNraW5nIHNob3VsZCBiZSBkb25lIGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbgor
CSAqIGFuZCB1bm1hc2tpbmcgYWZ0ZXJ3YXJkcy4KKwkgKi8KKwlyZXQgPSBpY2xfcGNvZGVfcmVz
dHJpY3RfcWd2X3BvaW50cyhkZXZfcHJpdiwgbmV3X21hc2spOworCWlmIChyZXQgPCAwKQorCQlk
cm1fZXJyKCZkZXZfcHJpdi0+ZHJtLCAiQ291bGQgbm90IHVubWFzayByZXF1aXJlZCBxZ3YgcG9p
bnRzKCVkKVxuIiwgcmV0KTsKIH0KIAogc3RhdGljIGJvb2wgaW50ZWxfY3J0Y19jYW5fZW5hYmxl
X3NhZ3YoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfcG0uaAppbmRleCBhYmVmYzQyMDVkMGIuLmY0OTliZWQyMjVlZSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9wbS5oCkBAIC00Miw2ICs0Miw4IEBAIHZvaWQgc2tsX3BpcGVfd21fZ2V0X2h3
X3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQkJICAgICAgc3RydWN0IHNrbF9waXBl
X3dtICpvdXQpOwogdm9pZCBnNHhfd21fc2FuaXRpemUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KTsKIHZvaWQgdmx2X3dtX3Nhbml0aXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdik7Cit2b2lkIGludGVsX3NhZ3ZfcHJlX3BsYW5lX3VwZGF0ZShzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7Cit2b2lkIGludGVsX3NhZ3ZfcG9zdF9wbGFuZV91cGRh
dGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOwogYm9vbCBpbnRlbF9oYXNfc2Fn
dihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogYm9vbCBpbnRlbF9jYW5fZW5h
YmxlX3NhZ3YoY29uc3Qgc3RydWN0IGludGVsX2J3X3N0YXRlICpid19zdGF0ZSk7CiBpbnQgaW50
ZWxfZW5hYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLS0gCjIu
MjQuMS40ODUuZ2FkMDVhM2Q4ZTUKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZv
L2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6C9C066322
	for <lists+intel-gfx@lfdr.de>; Fri, 12 Jul 2019 02:53:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2EE106E2A3;
	Fri, 12 Jul 2019 00:53:48 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 49F9B6E2A3
 for <intel-gfx@lists.freedesktop.org>; Fri, 12 Jul 2019 00:53:46 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 11 Jul 2019 17:53:45 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,480,1557212400"; d="scan'208";a="365454376"
Received: from josouza-mobl.jf.intel.com (HELO josouza-MOBL.intel.com)
 ([10.24.9.133])
 by fmsmga006.fm.intel.com with ESMTP; 11 Jul 2019 17:53:45 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 11 Jul 2019 17:53:43 -0700
Message-Id: <20190712005343.24571-2-jose.souza@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190712005343.24571-1-jose.souza@intel.com>
References: <20190712005343.24571-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v5 2/2] drm/i915: Enable hotplug retry
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UmlnaHQgbm93IHdlIGFyZSBhd2FyZSBvZiB0d28gY2FzZXMgdGhhdCBuZWVkcyBhbm90aGVyIGhv
dHBsdWcgcmV0cnk6Ci0gVW5wb3dlcmVkIHR5cGUtYyBkb25nbGVzCi0gSERNSSBzbG93IHVucGx1
ZwoKQm90aCBoYXZlIGEgY29tcGxldGUgZXhwbGFuYXRpb24gaW4gdGhlIGNvZGUgdG8gc2NoZWR1
bGUgYW5vdGhlciBydW4Kb2YgdGhlIGhvdHBsdWcgaGFuZGxlci4KCkl0IGNvdWxkIGhhdmUgbW9y
ZSBjaGVja3MgdG8ganVzdCB0cmlnZ2VyIHRoZSByZXRyeSBpbiB0aG9zZSB0d28Kc3BlY2lmaWMg
Y2FzZXMgYnV0IHdoeSB3b3VsZCBzaW5rIHNpZ25hbCBhIGxvbmcgcHVsc2UgaWYgdGhlcmUgaXMK
bm8gY2hhbmdlPyBBbHNvIHRoZSBkcmF3YmFjayBvZiBydW5uaW5nIHRoZSBob3RwbHVnIGhhbmRs
ZXIgYWdhaW4KaXMgcmVhbGx5IGxvdyBhbmQgdGhhdCBjb3VsZCBmaXggYW5vdGhlciBjYXNlcyB0
aGF0IHdlIGFyZSBub3QKYXdhcmUuCgpBbHNvIHJldHJ5aW5nIGZvciBvbGQgRFAgcG9ydHMobm9u
LURESSkgdG8gbWFrZSBpdCBjb25zaXN0ZW50IGFuZCBub3QKY2F1c2UgQ0kgZmFpbHVyZXMgaWYg
dGhvc2Ugc3lzdGVtcyBhcmUgY29ubmVjdGVkIHRvIGNoYW1lbGl1bSBib2FyZHMKdGhhdCB3aWxs
IGJlIHVzZWQgdG8gc2ltdWxhdGUgdGhlIGlzc3VlcyByZXBvcnRlZCBpbiBoZXJlLgoKdjI6IEFs
c28gcmV0cnlpbmcgZm9yIG9sZCBEUCBwb3J0cyhub24tRERJKShJbXJlKQoKdjQ6IFJlbmFtZWQg
SU5URUxfSE9UUExVR19OT0NIQU5HRSB0byBJTlRFTF9IT1RQTFVHX1VOQ0hBTkdFRCB0byBrZWVw
Cml0IGNvbnNpc3RlbnQoUm9kcmlnbykKClRlc3RlZC1ieTogVGltbyBBYWx0b25lbiA8dGphYWx0
b25AdWJ1bnR1LmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5p
bnRlbC5jb20+CkNjOiBJbXJlIERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+CkNjOiBKYW5pIE5p
a3VsYSA8amFuaS5uaWt1bGFAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSW1yZSBEZWFrIDxpbXJl
LmRlYWtAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxq
b3NlLnNvdXphQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RkaS5jICB8IDIxICsrKysrKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMgICB8ICA3ICsrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9oZG1pLmMgfCAyOCArKysrKysrKysrKysrKysrKysrKysrLQogMyBmaWxlcyBj
aGFuZ2VkLCA1NSBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggYzg5ZDBjNzU0M2RjLi4xOGJjMGYyNjkwYzkg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtNDA3NSw2ICs0
MDc1LDcgQEAgaW50ZWxfZGRpX2hvdHBsdWcoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIs
CiAJCSAgc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCQkgIGJvb2wgaXJxX3Jl
Y2VpdmVkKQogeworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0gZW5jX3Rv
X2RpZ19wb3J0KCZlbmNvZGVyLT5iYXNlKTsKIAlzdHJ1Y3QgZHJtX21vZGVzZXRfYWNxdWlyZV9j
dHggY3R4OwogCWVudW0gaW50ZWxfaG90cGx1Z19zdGF0ZSBzdGF0ZTsKIAlpbnQgcmV0OwpAQCAt
NDEwMSw2ICs0MTAyLDI2IEBAIGludGVsX2RkaV9ob3RwbHVnKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCWRybV9tb2Rlc2V0X2FjcXVpcmVfZmluaSgmY3R4KTsKIAlXQVJOKHJldCwg
IkFjcXVpcmluZyBtb2Rlc2V0IGxvY2tzIGZhaWxlZCB3aXRoICVpXG4iLCByZXQpOwogCisJLyoK
KwkgKiBVbnBvd2VyZWQgdHlwZS1jIGRvbmdsZXMgY2FuIHRha2Ugc29tZSB0aW1lIHRvIGJvb3Qg
YW5kIGJlCisJICogcmVzcG9uc2libGUsIHNvIGhlcmUgZ2l2aW5nIHNvbWUgdGltZSB0byB0aG9z
ZSBkb25nbGVzIHRvIHBvd2VyIHVwCisJICogYW5kIHRoZW4gcmV0cnlpbmcgdGhlIHByb2JlLgor
CSAqCisJICogT24gbWFueSBwbGF0Zm9ybXMgdGhlIEhETUkgbGl2ZSBzdGF0ZSBzaWduYWwgaXMg
a25vd24gdG8gYmUKKwkgKiB1bnJlbGlhYmxlLCBzbyB3ZSBjYW4ndCB1c2UgaXQgdG8gZGV0ZWN0
IGlmIGEgc2luayBpcyBjb25uZWN0ZWQgb3IKKwkgKiBub3QuIEluc3RlYWQgd2UgZGV0ZWN0IGlm
IGl0J3MgY29ubmVjdGVkIGJhc2VkIG9uIHdoZXRoZXIgd2UgY2FuCisJICogcmVhZCB0aGUgRURJ
RCBvciBub3QuIFRoYXQgaW4gdHVybiBoYXMgYSBwcm9ibGVtIGR1cmluZyBkaXNjb25uZWN0LAor
CSAqIHNpbmNlIHRoZSBIUEQgaW50ZXJydXB0IG1heSBiZSByYWlzZWQgYmVmb3JlIHRoZSBEREMg
bGluZXMgZ2V0CisJICogZGlzY29ubmVjdGVkIChkdWUgdG8gaG93IHRoZSByZXF1aXJlZCBsZW5n
dGggb2YgRERDIHZzLiBIUEQKKwkgKiBjb25uZWN0b3IgcGlucyBhcmUgc3BlY2lmaWVkKSBhbmQg
c28gd2UnbGwgc3RpbGwgYmUgYWJsZSB0byBnZXQgYQorCSAqIHZhbGlkIEVESUQuIFRvIHNvbHZl
IHRoaXMgc2NoZWR1bGUgYW5vdGhlciBkZXRlY3Rpb24gY3ljbGUgaWYgdGhpcworCSAqIHRpbWUg
YXJvdW5kIHdlIGRpZG4ndCBkZXRlY3QgYW55IGNoYW5nZSBpbiB0aGUgc2luaydzIGNvbm5lY3Rp
b24KKwkgKiBzdGF0dXMuCisJICovCisJaWYgKHN0YXRlID09IElOVEVMX0hPVFBMVUdfVU5DSEFO
R0VEICYmIGlycV9yZWNlaXZlZCAmJgorCSAgICAhZGlnX3BvcnQtPmRwLmlzX21zdCkKKwkJc3Rh
dGUgPSBJTlRFTF9IT1RQTFVHX1JFVFJZOworCiAJcmV0dXJuIHN0YXRlOwogfQogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKaW5kZXggYTg3MGVjYWI3OGE3Li5iMmFjMTli
NzRlODUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTQ4ODQs
NiArNDg4NCwxMyBAQCBpbnRlbF9kcF9ob3RwbHVnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCWRybV9tb2Rlc2V0X2FjcXVpcmVfZmluaSgmY3R4KTsKIAlXQVJOKHJldCwgIkFjcXVp
cmluZyBtb2Rlc2V0IGxvY2tzIGZhaWxlZCB3aXRoICVpXG4iLCByZXQpOwogCisJLyoKKwkgKiBL
ZWVwaW5nIGl0IGNvbnNpc3RlbnQgd2l0aCBpbnRlbF9kZGlfaG90cGx1ZygpIGFuZAorCSAqIGlu
dGVsX2hkbWlfaG90cGx1ZygpLgorCSAqLworCWlmIChzdGF0ZSA9PSBJTlRFTF9IT1RQTFVHX1VO
Q0hBTkdFRCAmJiBpcnFfcmVjZWl2ZWQpCisJCXN0YXRlID0gSU5URUxfSE9UUExVR19SRVRSWTsK
KwogCXJldHVybiBzdGF0ZTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9oZG1pLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2hkbWkuYwppbmRleCA3N2FmMGRmZDkzY2UuLmE4YTNiNzNkNjk3YyAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKQEAgLTMxMjUsNiArMzEyNSwzMiBAQCB2b2lk
IGludGVsX2hkbWlfaW5pdF9jb25uZWN0b3Ioc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50
ZWxfZGlnX3BvcnQsCiAJCURSTV9ERUJVR19LTVMoIkNFQyBub3RpZmllciBnZXQgZmFpbGVkXG4i
KTsKIH0KIAorc3RhdGljIGVudW0gaW50ZWxfaG90cGx1Z19zdGF0ZQoraW50ZWxfaGRtaV9ob3Rw
bHVnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkgICBzdHJ1Y3QgaW50ZWxfY29u
bmVjdG9yICpjb25uZWN0b3IsIGJvb2wgaXJxX3JlY2VpdmVkKQoreworCWVudW0gaW50ZWxfaG90
cGx1Z19zdGF0ZSBzdGF0ZTsKKworCXN0YXRlID0gaW50ZWxfZW5jb2Rlcl9ob3RwbHVnKGVuY29k
ZXIsIGNvbm5lY3RvciwgaXJxX3JlY2VpdmVkKTsKKworCS8qCisJICogT24gbWFueSBwbGF0Zm9y
bXMgdGhlIEhETUkgbGl2ZSBzdGF0ZSBzaWduYWwgaXMga25vd24gdG8gYmUKKwkgKiB1bnJlbGlh
YmxlLCBzbyB3ZSBjYW4ndCB1c2UgaXQgdG8gZGV0ZWN0IGlmIGEgc2luayBpcyBjb25uZWN0ZWQg
b3IKKwkgKiBub3QuIEluc3RlYWQgd2UgZGV0ZWN0IGlmIGl0J3MgY29ubmVjdGVkIGJhc2VkIG9u
IHdoZXRoZXIgd2UgY2FuCisJICogcmVhZCB0aGUgRURJRCBvciBub3QuIFRoYXQgaW4gdHVybiBo
YXMgYSBwcm9ibGVtIGR1cmluZyBkaXNjb25uZWN0LAorCSAqIHNpbmNlIHRoZSBIUEQgaW50ZXJy
dXB0IG1heSBiZSByYWlzZWQgYmVmb3JlIHRoZSBEREMgbGluZXMgZ2V0CisJICogZGlzY29ubmVj
dGVkIChkdWUgdG8gaG93IHRoZSByZXF1aXJlZCBsZW5ndGggb2YgRERDIHZzLiBIUEQKKwkgKiBj
b25uZWN0b3IgcGlucyBhcmUgc3BlY2lmaWVkKSBhbmQgc28gd2UnbGwgc3RpbGwgYmUgYWJsZSB0
byBnZXQgYQorCSAqIHZhbGlkIEVESUQuIFRvIHNvbHZlIHRoaXMgc2NoZWR1bGUgYW5vdGhlciBk
ZXRlY3Rpb24gY3ljbGUgaWYgdGhpcworCSAqIHRpbWUgYXJvdW5kIHdlIGRpZG4ndCBkZXRlY3Qg
YW55IGNoYW5nZSBpbiB0aGUgc2luaydzIGNvbm5lY3Rpb24KKwkgKiBzdGF0dXMuCisJICovCisJ
aWYgKHN0YXRlID09IElOVEVMX0hPVFBMVUdfVU5DSEFOR0VEICYmIGlycV9yZWNlaXZlZCkKKwkJ
c3RhdGUgPSBJTlRFTF9IT1RQTFVHX1JFVFJZOworCisJcmV0dXJuIHN0YXRlOworfQorCiB2b2lk
IGludGVsX2hkbWlfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCSAg
ICAgaTkxNV9yZWdfdCBoZG1pX3JlZywgZW51bSBwb3J0IHBvcnQpCiB7CkBAIC0zMTQ4LDcgKzMx
NzQsNyBAQCB2b2lkIGludGVsX2hkbWlfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJCQkgJmludGVsX2hkbWlfZW5jX2Z1bmNzLCBEUk1fTU9ERV9FTkNPREVSX1RNRFMs
CiAJCQkgIkhETUkgJWMiLCBwb3J0X25hbWUocG9ydCkpOwogCi0JaW50ZWxfZW5jb2Rlci0+aG90
cGx1ZyA9IGludGVsX2VuY29kZXJfaG90cGx1ZzsKKwlpbnRlbF9lbmNvZGVyLT5ob3RwbHVnID0g
aW50ZWxfaGRtaV9ob3RwbHVnOwogCWludGVsX2VuY29kZXItPmNvbXB1dGVfY29uZmlnID0gaW50
ZWxfaGRtaV9jb21wdXRlX2NvbmZpZzsKIAlpZiAoSEFTX1BDSF9TUExJVChkZXZfcHJpdikpIHsK
IAkJaW50ZWxfZW5jb2Rlci0+ZGlzYWJsZSA9IHBjaF9kaXNhYmxlX2hkbWk7Ci0tIAoyLjIyLjAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

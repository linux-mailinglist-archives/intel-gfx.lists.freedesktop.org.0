Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DA2EB21064
	for <lists+intel-gfx@lfdr.de>; Thu, 16 May 2019 23:57:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 58F28897E7;
	Thu, 16 May 2019 21:57:21 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6E1E5897E7
 for <intel-gfx@lists.freedesktop.org>; Thu, 16 May 2019 21:57:19 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 16 May 2019 14:57:19 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga001.jf.intel.com with ESMTP; 16 May 2019 14:57:19 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 16 May 2019 14:56:30 -0700
Message-Id: <20190516215634.16675-4-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190516215634.16675-1-daniele.ceraolospurio@intel.com>
References: <20190516215634.16675-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 3/7] drm/i915: make enable/disable rpm assert
 function use the rpm structure
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2l0aCB0aGlzIGFsbCB0aGUgcnBtIGFzc2VydC1yZWxhdGVkIGZ1bmN0aW9ucyBjb25zaXN0ZW50
bHkgd29yayBvbgp0aGUgaTkxNV9ydW50aW1lX3BtIHN0cnVjdHVyZQoKU2lnbmVkLW9mZi1ieTog
RGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVsLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jICAgICB8IDQ0ICsrKysrKysrKysr
KysrKy0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jICAgICB8
IDMyICsrKysrKysrKystLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2
LmggICAgfCAxMiArKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3VjLmMgICAg
fCAgNCArLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5jIHwgMTIgKysrKy0t
LS0KIDUgZmlsZXMgY2hhbmdlZCwgNTMgaW5zZXJ0aW9ucygrKSwgNTEgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmMKaW5kZXggMmM3YTQzMThkMTNjLi44YjllNWIwNDJlNzAgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuYwpAQCAtMTg4NCw3ICsxODg0LDcgQEAgaW50IGk5MTVfZHJp
dmVyX2xvYWQoc3RydWN0IHBjaV9kZXYgKnBkZXYsIGNvbnN0IHN0cnVjdCBwY2lfZGV2aWNlX2lk
ICplbnQpCiAJaWYgKHJldCA8IDApCiAJCWdvdG8gb3V0X3BjaV9kaXNhYmxlOwogCi0JZGlzYWJs
ZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwlkaXNhYmxlX3JwbV93YWtlcmVmX2Fz
c2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAogCXJldCA9IGk5MTVfZHJpdmVyX2luaXRf
bW1pbyhkZXZfcHJpdik7CiAJaWYgKHJldCA8IDApCkBAIC0xOTAwLDcgKzE5MDAsNyBAQCBpbnQg
aTkxNV9kcml2ZXJfbG9hZChzdHJ1Y3QgcGNpX2RldiAqcGRldiwgY29uc3Qgc3RydWN0IHBjaV9k
ZXZpY2VfaWQgKmVudCkKIAogCWk5MTVfZHJpdmVyX3JlZ2lzdGVyKGRldl9wcml2KTsKIAotCWVu
YWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwllbmFibGVfcnBtX3dha2VyZWZf
YXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJaTkxNV93ZWxjb21lX21lc3NhZ2Vz
KGRldl9wcml2KTsKIApAQCAtMTkxMSw3ICsxOTExLDcgQEAgaW50IGk5MTVfZHJpdmVyX2xvYWQo
c3RydWN0IHBjaV9kZXYgKnBkZXYsIGNvbnN0IHN0cnVjdCBwY2lfZGV2aWNlX2lkICplbnQpCiBv
dXRfY2xlYW51cF9tbWlvOgogCWk5MTVfZHJpdmVyX2NsZWFudXBfbW1pbyhkZXZfcHJpdik7CiBv
dXRfcnVudGltZV9wbV9wdXQ6Ci0JZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYp
OworCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAJ
aTkxNV9kcml2ZXJfY2xlYW51cF9lYXJseShkZXZfcHJpdik7CiBvdXRfcGNpX2Rpc2FibGU6CiAJ
cGNpX2Rpc2FibGVfZGV2aWNlKHBkZXYpOwpAQCAtMTkyNiw3ICsxOTI2LDcgQEAgdm9pZCBpOTE1
X2RyaXZlcl91bmxvYWQoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CiAJc3RydWN0IHBjaV9kZXYgKnBkZXYg
PSBkZXZfcHJpdi0+ZHJtLnBkZXY7CiAKLQlkaXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2
X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVf
cG0pOwogCiAJaTkxNV9kcml2ZXJfdW5yZWdpc3RlcihkZXZfcHJpdik7CiAKQEAgLTE5NjYsNyAr
MTk2Niw3IEBAIHZvaWQgaTkxNV9kcml2ZXJfdW5sb2FkKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYp
CiAJaTkxNV9kcml2ZXJfY2xlYW51cF9odyhkZXZfcHJpdik7CiAJaTkxNV9kcml2ZXJfY2xlYW51
cF9tbWlvKGRldl9wcml2KTsKIAotCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2
KTsKKwllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwog
CWludGVsX3J1bnRpbWVfcG1fY2xlYW51cChkZXZfcHJpdik7CiB9CiAKQEAgLTIwNjYsNyArMjA2
Niw3IEBAIHN0YXRpYyBpbnQgaTkxNV9kcm1fc3VzcGVuZChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
KQogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gZGV2X3ByaXYtPmRybS5wZGV2OwogCXBjaV9wb3dl
cl90IG9wcmVnaW9uX3RhcmdldF9zdGF0ZTsKIAotCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0
cyhkZXZfcHJpdik7CisJZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVu
dGltZV9wbSk7CiAKIAkvKiBXZSBkbyBhIGxvdCBvZiBwb2tpbmcgaW4gYSBsb3Qgb2YgcmVnaXN0
ZXJzLCBtYWtlIHN1cmUgdGhleSB3b3JrCiAJICogcHJvcGVybHkuICovCkBAIC0yMTAwLDcgKzIx
MDAsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJtX3N1c3BlbmQoc3RydWN0IGRybV9kZXZpY2UgKmRl
dikKIAogCWludGVsX2Nzcl91Y29kZV9zdXNwZW5kKGRldl9wcml2KTsKIAotCWVuYWJsZV9ycG1f
d2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygm
ZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJcmV0dXJuIDA7CiB9CkBAIC0yMTIzLDcgKzIxMjMs
NyBAQCBzdGF0aWMgaW50IGk5MTVfZHJtX3N1c3BlbmRfbGF0ZShzdHJ1Y3QgZHJtX2RldmljZSAq
ZGV2LCBib29sIGhpYmVybmF0aW9uKQogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gZGV2X3ByaXYt
PmRybS5wZGV2OwogCWludCByZXQ7CiAKLQlkaXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2
X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVf
cG0pOwogCiAJaTkxNV9nZW1fc3VzcGVuZF9sYXRlKGRldl9wcml2KTsKIApAQCAtMjE2NCw3ICsy
MTY0LDcgQEAgc3RhdGljIGludCBpOTE1X2RybV9zdXNwZW5kX2xhdGUoc3RydWN0IGRybV9kZXZp
Y2UgKmRldiwgYm9vbCBoaWJlcm5hdGlvbikKIAkJcGNpX3NldF9wb3dlcl9zdGF0ZShwZGV2LCBQ
Q0lfRDNob3QpOwogCiBvdXQ6Ci0JZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYp
OworCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAJ
aWYgKCFkZXZfcHJpdi0+dW5jb3JlLnVzZXJfZm9yY2V3YWtlLmNvdW50KQogCQlpbnRlbF9ydW50
aW1lX3BtX2NsZWFudXAoZGV2X3ByaXYpOwogCkBAIC0yMjAwLDcgKzIyMDAsNyBAQCBzdGF0aWMg
aW50IGk5MTVfZHJtX3Jlc3VtZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAlpbnQgcmV0OwogCi0JZGlz
YWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwlkaXNhYmxlX3JwbV93YWtlcmVm
X2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAlpbnRlbF9zYW5pdGl6ZV9ndF9wb3dl
cnNhdmUoZGV2X3ByaXYpOwogCiAJaTkxNV9nZW1fc2FuaXRpemUoZGV2X3ByaXYpOwpAQCAtMjI2
MCw3ICsyMjYwLDcgQEAgc3RhdGljIGludCBpOTE1X2RybV9yZXN1bWUoc3RydWN0IGRybV9kZXZp
Y2UgKmRldikKIAogCWludGVsX3Bvd2VyX2RvbWFpbnNfZW5hYmxlKGRldl9wcml2KTsKIAotCWVu
YWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwllbmFibGVfcnBtX3dha2VyZWZf
YXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJcmV0dXJuIDA7CiB9CkBAIC0yMzE1
LDcgKzIzMTUsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJtX3Jlc3VtZV9lYXJseShzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2KQogCiAJcGNpX3NldF9tYXN0ZXIocGRldik7CiAKLQlkaXNhYmxlX3JwbV93
YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygm
ZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJaWYgKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpIHx8
IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQogCQlyZXQgPSB2bHZfcmVzdW1lX3ByZXBhcmUoZGV2
X3ByaXYsIGZhbHNlKTsKQEAgLTIzNDAsNyArMjM0MCw3IEBAIHN0YXRpYyBpbnQgaTkxNV9kcm1f
cmVzdW1lX2Vhcmx5KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIAlpbnRlbF9ndF9zYW5pdGl6
ZShkZXZfcHJpdiwgdHJ1ZSk7CiAKLQllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJp
dik7CisJZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsK
IAogCXJldHVybiByZXQ7CiB9CkBAIC0yODczLDYgKzI4NzMsNyBAQCBzdGF0aWMgaW50IGludGVs
X3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZGV2aWNlICprZGV2KQogCXN0cnVjdCBwY2lfZGV2ICpw
ZGV2ID0gdG9fcGNpX2RldihrZGV2KTsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gcGNpX2dl
dF9kcnZkYXRhKHBkZXYpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoZGV2KTsKKwlzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0gPSAmZGV2X3ByaXYtPnJ1
bnRpbWVfcG07CiAJaW50IHJldDsKIAogCWlmIChXQVJOX09OX09OQ0UoIShkZXZfcHJpdi0+Z3Rf
cG0ucmM2LmVuYWJsZWQgJiYgSEFTX1JDNihkZXZfcHJpdikpKSkKQEAgLTI4ODMsNyArMjg4NCw3
IEBAIHN0YXRpYyBpbnQgaW50ZWxfcnVudGltZV9zdXNwZW5kKHN0cnVjdCBkZXZpY2UgKmtkZXYp
CiAKIAlEUk1fREVCVUdfS01TKCJTdXNwZW5kaW5nIGRldmljZVxuIik7CiAKLQlkaXNhYmxlX3Jw
bV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0
cyhycG0pOwogCiAJLyoKIAkgKiBXZSBhcmUgc2FmZSBoZXJlIGFnYWluc3QgcmUtZmF1bHRzLCBz
aW5jZSB0aGUgZmF1bHQgaGFuZGxlciB0YWtlcwpAQCAtMjkyMSwxOCArMjkyMiwxOCBAQCBzdGF0
aWMgaW50IGludGVsX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZGV2aWNlICprZGV2KQogCQlpOTE1
X2dlbV9pbml0X3N3aXp6bGluZyhkZXZfcHJpdik7CiAJCWk5MTVfZ2VtX3Jlc3RvcmVfZmVuY2Vz
KGRldl9wcml2KTsKIAotCQllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJ
CWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKHJwbSk7CiAKIAkJcmV0dXJuIHJldDsKIAl9CiAK
LQllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJZW5hYmxlX3JwbV93YWtl
cmVmX2Fzc2VydHMocnBtKTsKIAlpbnRlbF9ydW50aW1lX3BtX2NsZWFudXAoZGV2X3ByaXYpOwog
CiAJaWYgKGludGVsX3VuY29yZV9hcm1fdW5jbGFpbWVkX21taW9fZGV0ZWN0aW9uKCZkZXZfcHJp
di0+dW5jb3JlKSkKIAkJRFJNX0VSUk9SKCJVbmNsYWltZWQgYWNjZXNzIGRldGVjdGVkIHByaW9y
IHRvIHN1c3BlbmRpbmdcbiIpOwogCi0JZGV2X3ByaXYtPnJ1bnRpbWVfcG0uc3VzcGVuZGVkID0g
dHJ1ZTsKKwlycG0tPnN1c3BlbmRlZCA9IHRydWU7CiAKIAkvKgogCSAqIEZJWE1FOiBXZSByZWFs
bHkgc2hvdWxkIGZpbmQgYSBkb2N1bWVudCB0aGF0IHJlZmVyZW5jZXMgdGhlIGFyZ3VtZW50cwpA
QCAtMjk3MSw2ICsyOTcyLDcgQEAgc3RhdGljIGludCBpbnRlbF9ydW50aW1lX3Jlc3VtZShzdHJ1
Y3QgZGV2aWNlICprZGV2KQogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gdG9fcGNpX2RldihrZGV2
KTsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gcGNpX2dldF9kcnZkYXRhKHBkZXYpOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlzdHJ1Y3Qg
aTkxNV9ydW50aW1lX3BtICpycG0gPSAmZGV2X3ByaXYtPnJ1bnRpbWVfcG07CiAJaW50IHJldCA9
IDA7CiAKIAlpZiAoV0FSTl9PTl9PTkNFKCFIQVNfUlVOVElNRV9QTShkZXZfcHJpdikpKQpAQCAt
Mjk3OCwxMSArMjk4MCwxMSBAQCBzdGF0aWMgaW50IGludGVsX3J1bnRpbWVfcmVzdW1lKHN0cnVj
dCBkZXZpY2UgKmtkZXYpCiAKIAlEUk1fREVCVUdfS01TKCJSZXN1bWluZyBkZXZpY2VcbiIpOwog
Ci0JV0FSTl9PTl9PTkNFKGF0b21pY19yZWFkKCZkZXZfcHJpdi0+cnVudGltZV9wbS53YWtlcmVm
X2NvdW50KSk7Ci0JZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwlXQVJO
X09OX09OQ0UoYXRvbWljX3JlYWQoJnJwbS0+d2FrZXJlZl9jb3VudCkpOworCWRpc2FibGVfcnBt
X3dha2VyZWZfYXNzZXJ0cyhycG0pOwogCiAJaW50ZWxfb3ByZWdpb25fbm90aWZ5X2FkYXB0ZXIo
ZGV2X3ByaXYsIFBDSV9EMCk7Ci0JZGV2X3ByaXYtPnJ1bnRpbWVfcG0uc3VzcGVuZGVkID0gZmFs
c2U7CisJcnBtLT5zdXNwZW5kZWQgPSBmYWxzZTsKIAlpZiAoaW50ZWxfdW5jb3JlX3VuY2xhaW1l
ZF9tbWlvKCZkZXZfcHJpdi0+dW5jb3JlKSkKIAkJRFJNX0RFQlVHX0RSSVZFUigiVW5jbGFpbWVk
IGFjY2VzcyBkdXJpbmcgc3VzcGVuZCwgYmlvcz9cbiIpOwogCkBAIC0zMDMyLDcgKzMwMzQsNyBA
QCBzdGF0aWMgaW50IGludGVsX3J1bnRpbWVfcmVzdW1lKHN0cnVjdCBkZXZpY2UgKmtkZXYpCiAK
IAlpbnRlbF9lbmFibGVfaXBjKGRldl9wcml2KTsKIAotCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3Nl
cnRzKGRldl9wcml2KTsKKwllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhycG0pOwogCiAJaWYg
KHJldCkKIAkJRFJNX0VSUk9SKCJSdW50aW1lIHJlc3VtZSBmYWlsZWQsIGRpc2FibGluZyBpdCAo
JWQpXG4iLCByZXQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKaW5kZXggMzJmNTZkZDY4YWM5Li4w
MDhjZDUyMDIwMjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYwpAQCAtMjE0MCw3ICsyMTQwLDcg
QEAgc3RhdGljIGlycXJldHVybl90IHZhbGxleXZpZXdfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9p
ZCAqYXJnKQogCQlyZXR1cm4gSVJRX05PTkU7CiAKIAkvKiBJUlFzIGFyZSBzeW5jZWQgZHVyaW5n
IHJ1bnRpbWVfc3VzcGVuZCwgd2UgZG9uJ3QgcmVxdWlyZSBhIHdha2VyZWYgKi8KLQlkaXNhYmxl
X3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNz
ZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJZG8gewogCQl1MzIgaWlyLCBndF9paXIs
IHBtX2lpcjsKQEAgLTIyMTEsNyArMjIxMSw3IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCB2YWxsZXl2
aWV3X2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIAkJdmFsbGV5dmlld19waXBlc3Rh
dF9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcGlwZV9zdGF0cyk7CiAJfSB3aGlsZSAoMCk7CiAKLQll
bmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJZW5hYmxlX3JwbV93YWtlcmVm
X2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAogCXJldHVybiByZXQ7CiB9CkBAIC0y
MjI2LDcgKzIyMjYsNyBAQCBzdGF0aWMgaXJxcmV0dXJuX3QgY2hlcnJ5dmlld19pcnFfaGFuZGxl
cihpbnQgaXJxLCB2b2lkICphcmcpCiAJCXJldHVybiBJUlFfTk9ORTsKIAogCS8qIElSUXMgYXJl
IHN5bmNlZCBkdXJpbmcgcnVudGltZV9zdXNwZW5kLCB3ZSBkb24ndCByZXF1aXJlIGEgd2FrZXJl
ZiAqLwotCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJZGlzYWJsZV9y
cG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAKIAlkbyB7CiAJCXUz
MiBtYXN0ZXJfY3RsLCBpaXI7CkBAIC0yMjkyLDcgKzIyOTIsNyBAQCBzdGF0aWMgaXJxcmV0dXJu
X3QgY2hlcnJ5dmlld19pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiAJCXZhbGxleXZp
ZXdfcGlwZXN0YXRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIHBpcGVfc3RhdHMpOwogCX0gd2hpbGUg
KDApOwogCi0JZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYpOworCWVuYWJsZV9y
cG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAKIAlyZXR1cm4gcmV0
OwogfQpAQCAtMjY0Niw3ICsyNjQ2LDcgQEAgc3RhdGljIGlycXJldHVybl90IGlyb25sYWtlX2ly
cV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIAkJcmV0dXJuIElSUV9OT05FOwogCiAJLyog
SVJRcyBhcmUgc3luY2VkIGR1cmluZyBydW50aW1lX3N1c3BlbmQsIHdlIGRvbid0IHJlcXVpcmUg
YSB3YWtlcmVmICovCi0JZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwlk
aXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAogCS8q
IGRpc2FibGUgbWFzdGVyIGludGVycnVwdCBiZWZvcmUgY2xlYXJpbmcgaWlyICAqLwogCWRlX2ll
ciA9IEk5MTVfUkVBRChERUlFUik7CkBAIC0yNjk4LDcgKzI2OTgsNyBAQCBzdGF0aWMgaXJxcmV0
dXJuX3QgaXJvbmxha2VfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKQogCQlJOTE1X1dS
SVRFKFNERUlFUiwgc2RlX2llcik7CiAKIAkvKiBJUlFzIGFyZSBzeW5jZWQgZHVyaW5nIHJ1bnRp
bWVfc3VzcGVuZCwgd2UgZG9uJ3QgcmVxdWlyZSBhIHdha2VyZWYgKi8KLQllbmFibGVfcnBtX3dh
a2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRl
dl9wcml2LT5ydW50aW1lX3BtKTsKIAogCXJldHVybiByZXQ7CiB9CkBAIC0yOTY1LDkgKzI5NjUs
OSBAQCBzdGF0aWMgaXJxcmV0dXJuX3QgZ2VuOF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICph
cmcpCiAKIAkvKiBJUlFzIGFyZSBzeW5jZWQgZHVyaW5nIHJ1bnRpbWVfc3VzcGVuZCwgd2UgZG9u
J3QgcmVxdWlyZSBhIHdha2VyZWYgKi8KIAlpZiAobWFzdGVyX2N0bCAmIH5HRU44X0dUX0lSUVMp
IHsKLQkJZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwkJZGlzYWJsZV9y
cG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAJCWdlbjhfZGVfaXJx
X2hhbmRsZXIoZGV2X3ByaXYsIG1hc3Rlcl9jdGwpOwotCQllbmFibGVfcnBtX3dha2VyZWZfYXNz
ZXJ0cyhkZXZfcHJpdik7CisJCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+
cnVudGltZV9wbSk7CiAJfQogCiAJZ2VuOF9tYXN0ZXJfaW50cl9lbmFibGUocmVncyk7CkBAIC0z
MTYzLDEzICszMTYzLDEzIEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBnZW4xMV9pcnFfaGFuZGxlcihp
bnQgaXJxLCB2b2lkICphcmcpCiAJaWYgKG1hc3Rlcl9jdGwgJiBHRU4xMV9ESVNQTEFZX0lSUSkg
ewogCQljb25zdCB1MzIgZGlzcF9jdGwgPSByYXdfcmVnX3JlYWQocmVncywgR0VOMTFfRElTUExB
WV9JTlRfQ1RMKTsKIAotCQlkaXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoaTkxNSk7CisJCWRp
c2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygmaTkxNS0+cnVudGltZV9wbSk7CiAJCS8qCiAJCSAq
IEdFTjExX0RJU1BMQVlfSU5UX0NUTCBoYXMgc2FtZSBmb3JtYXQgYXMgR0VOOF9NQVNURVJfSVJR
CiAJCSAqIGZvciB0aGUgZGlzcGxheSByZWxhdGVkIGJpdHMuCiAJCSAqLwogCQlnZW44X2RlX2ly
cV9oYW5kbGVyKGk5MTUsIGRpc3BfY3RsKTsKLQkJZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMo
aTkxNSk7CisJCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZpOTE1LT5ydW50aW1lX3BtKTsK
IAl9CiAKIAlndV9taXNjX2lpciA9IGdlbjExX2d1X21pc2NfaXJxX2FjayhpOTE1LCBtYXN0ZXJf
Y3RsKTsKQEAgLTQzODQsNyArNDM4NCw3IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBpOHh4X2lycV9o
YW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIAkJcmV0dXJuIElSUV9OT05FOwogCiAJLyogSVJR
cyBhcmUgc3luY2VkIGR1cmluZyBydW50aW1lX3N1c3BlbmQsIHdlIGRvbid0IHJlcXVpcmUgYSB3
YWtlcmVmICovCi0JZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwlkaXNh
YmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAogCWRvIHsK
IAkJdTMyIHBpcGVfc3RhdHNbSTkxNV9NQVhfUElQRVNdID0ge307CkBAIC00NDE1LDcgKzQ0MTUs
NyBAQCBzdGF0aWMgaXJxcmV0dXJuX3QgaTh4eF9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICph
cmcpCiAJCWk4eHhfcGlwZXN0YXRfaXJxX2hhbmRsZXIoZGV2X3ByaXYsIGlpciwgcGlwZV9zdGF0
cyk7CiAJfSB3aGlsZSAoMCk7CiAKLQllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZfcHJp
dik7CisJZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRldl9wcml2LT5ydW50aW1lX3BtKTsK
IAogCXJldHVybiByZXQ7CiB9CkBAIC00NDg5LDcgKzQ0ODksNyBAQCBzdGF0aWMgaXJxcmV0dXJu
X3QgaTkxNV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCiAJCXJldHVybiBJUlFfTk9O
RTsKIAogCS8qIElSUXMgYXJlIHN5bmNlZCBkdXJpbmcgcnVudGltZV9zdXNwZW5kLCB3ZSBkb24n
dCByZXF1aXJlIGEgd2FrZXJlZiAqLwotCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhkZXZf
cHJpdik7CisJZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+cnVudGltZV9w
bSk7CiAKIAlkbyB7CiAJCXUzMiBwaXBlX3N0YXRzW0k5MTVfTUFYX1BJUEVTXSA9IHt9OwpAQCAt
NDUyOCw3ICs0NTI4LDcgQEAgc3RhdGljIGlycXJldHVybl90IGk5MTVfaXJxX2hhbmRsZXIoaW50
IGlycSwgdm9pZCAqYXJnKQogCQlpOTE1X3BpcGVzdGF0X2lycV9oYW5kbGVyKGRldl9wcml2LCBp
aXIsIHBpcGVfc3RhdHMpOwogCX0gd2hpbGUgKDApOwogCi0JZW5hYmxlX3JwbV93YWtlcmVmX2Fz
c2VydHMoZGV2X3ByaXYpOworCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCZkZXZfcHJpdi0+
cnVudGltZV9wbSk7CiAKIAlyZXR1cm4gcmV0OwogfQpAQCAtNDYzNyw3ICs0NjM3LDcgQEAgc3Rh
dGljIGlycXJldHVybl90IGk5NjVfaXJxX2hhbmRsZXIoaW50IGlycSwgdm9pZCAqYXJnKQogCQly
ZXR1cm4gSVJRX05PTkU7CiAKIAkvKiBJUlFzIGFyZSBzeW5jZWQgZHVyaW5nIHJ1bnRpbWVfc3Vz
cGVuZCwgd2UgZG9uJ3QgcmVxdWlyZSBhIHdha2VyZWYgKi8KLQlkaXNhYmxlX3JwbV93YWtlcmVm
X2Fzc2VydHMoZGV2X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygmZGV2X3By
aXYtPnJ1bnRpbWVfcG0pOwogCiAJZG8gewogCQl1MzIgcGlwZV9zdGF0c1tJOTE1X01BWF9QSVBF
U10gPSB7fTsKQEAgLTQ2NzgsNyArNDY3OCw3IEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBpOTY1X2ly
cV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIAkJaTk2NV9waXBlc3RhdF9pcnFfaGFuZGxl
cihkZXZfcHJpdiwgaWlyLCBwaXBlX3N0YXRzKTsKIAl9IHdoaWxlICgwKTsKIAotCWVuYWJsZV9y
cG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsKKwllbmFibGVfcnBtX3dha2VyZWZfYXNzZXJ0
cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJcmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfZHJ2LmgKaW5kZXggMTNmY2I1ZDU5ZDlkLi42OTc2ZDkyYjBiZDggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2Rydi5oCkBAIC0xNjc1LDcgKzE2NzUsNyBAQCBhc3NlcnRfcnBtX3dha2Vsb2Nr
X2hlbGQoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtKQogCiAvKioKICAqIGRpc2FibGVfcnBt
X3dha2VyZWZfYXNzZXJ0cyAtIGRpc2FibGUgdGhlIFJQTSBhc3NlcnQgY2hlY2tzCi0gKiBAaTkx
NTogaTkxNSBkZXZpY2UgaW5zdGFuY2UKKyAqIEBycG06IHRoZSBpOTE1X3J1bnRpbWVfcG0gc3Ry
dWN0dXJlCiAgKgogICogVGhpcyBmdW5jdGlvbiBkaXNhYmxlIGFzc2VydHMgdGhhdCBjaGVjayBp
ZiB3ZSBob2xkIGFuIFJQTSB3YWtlbG9jawogICogcmVmZXJlbmNlLCB3aGlsZSBrZWVwaW5nIHRo
ZSBkZXZpY2Utbm90LXN1c3BlbmRlZCBjaGVja3Mgc3RpbGwgZW5hYmxlZC4KQEAgLTE2OTIsMTUg
KzE2OTIsMTUgQEAgYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHN0cnVjdCBpOTE1X3J1bnRpbWVf
cG0gKnJwbSkKICAqIGVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKCkuCiAgKi8KIHN0YXRpYyBp
bmxpbmUgdm9pZAotZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQorZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKHN0cnVjdCBpOTE1X3J1
bnRpbWVfcG0gKnJwbSkKIHsKIAlhdG9taWNfYWRkKElOVEVMX1JQTV9XQUtFTE9DS19CSUFTICsg
MSwKLQkJICAgJmk5MTUtPnJ1bnRpbWVfcG0ud2FrZXJlZl9jb3VudCk7CisJCSAgICZycG0tPndh
a2VyZWZfY291bnQpOwogfQogCiAvKioKICAqIGVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzIC0g
cmUtZW5hYmxlIHRoZSBSUE0gYXNzZXJ0IGNoZWNrcwotICogQGk5MTU6IGk5MTUgZGV2aWNlIGlu
c3RhbmNlCisgKiBAcnBtOiB0aGUgaTkxNV9ydW50aW1lX3BtIHN0cnVjdHVyZQogICoKICAqIFRo
aXMgZnVuY3Rpb24gcmUtZW5hYmxlcyB0aGUgUlBNIGFzc2VydCBjaGVja3MgYWZ0ZXIgZGlzYWJs
aW5nIHRoZW0gd2l0aAogICogZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzLiBJdCdzIG1lYW50
IHRvIGJlIHVzZWQgb25seSBpbiBzcGVjaWFsCkBAIC0xNzEwLDEwICsxNzEwLDEwIEBAIGRpc2Fi
bGVfcnBtX3dha2VyZWZfYXNzZXJ0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKICAq
IGRpc2FibGVfcnBtX3dha2VyZWZfYXNzZXJ0cygpLgogICovCiBzdGF0aWMgaW5saW5lIHZvaWQK
LWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
KQorZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBt
KQogewogCWF0b21pY19zdWIoSU5URUxfUlBNX1dBS0VMT0NLX0JJQVMgKyAxLAotCQkgICAmaTkx
NS0+cnVudGltZV9wbS53YWtlcmVmX2NvdW50KTsKKwkJICAgJnJwbS0+d2FrZXJlZl9jb3VudCk7
CiB9CiAKICNlbmRpZiAvKiBfX0lOVEVMX0RSVl9IX18gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX2d1Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3Vj
LmMKaW5kZXggYzRhYzI5MzA5ZmNjLi44NDk4NjNhNjc1Y2EgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX2d1Yy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X2d1Yy5jCkBAIC00ODQsMTMgKzQ4NCwxMyBAQCB2b2lkIGludGVsX2d1Y190b19ob3N0X2V2ZW50
X2hhbmRsZXJfbW1pbyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiAJICogY291bGQgaGFwcGVuIHRo
YXQgR3VDIHNldHMgdGhlIGJpdCBmb3IgMm5kIGludGVycnVwdCBidXQgSG9zdAogCSAqIGNsZWFy
cyBvdXQgdGhlIGJpdCBvbiBoYW5kbGluZyB0aGUgMXN0IGludGVycnVwdC4KIAkgKi8KLQlkaXNh
YmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2X3ByaXYpOworCWRpc2FibGVfcnBtX3dha2VyZWZf
YXNzZXJ0cygmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCXNwaW5fbG9jaygmZ3VjLT5pcnFfbG9j
ayk7CiAJdmFsID0gSTkxNV9SRUFEKFNPRlRfU0NSQVRDSCgxNSkpOwogCW1zZyA9IHZhbCAmIGd1
Yy0+bXNnX2VuYWJsZWRfbWFzazsKIAlJOTE1X1dSSVRFKFNPRlRfU0NSQVRDSCgxNSksIHZhbCAm
IH5tc2cpOwogCXNwaW5fdW5sb2NrKCZndWMtPmlycV9sb2NrKTsKLQllbmFibGVfcnBtX3dha2Vy
ZWZfYXNzZXJ0cyhkZXZfcHJpdik7CisJZW5hYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoJmRldl9w
cml2LT5ydW50aW1lX3BtKTsKIAogCWludGVsX2d1Y190b19ob3N0X3Byb2Nlc3NfcmVjdl9tc2co
Z3VjLCAmbXNnLCAxKTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X3VuY29yZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdW5jb3JlLmMKaW5kZXggMzAw
Mjg3MmI0YTg4Li5hNWI3ZTk5ZWI1ZTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3VuY29yZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5j
CkBAIC0xNDYxLDggKzE0NjEsOCBAQCBzdGF0aWMgdm9pZCBpbnRlbF91bmNvcmVfZndfZG9tYWlu
c19pbml0KHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSkKIHN0YXRpYyBpbnQgaTkxNV9wbWlj
X2J1c19hY2Nlc3Nfbm90aWZpZXIoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICpuYiwKIAkJCQkJIHVu
c2lnbmVkIGxvbmcgYWN0aW9uLCB2b2lkICpkYXRhKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IGNvbnRhaW5lcl9vZihuYiwKLQkJCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlLCB1bmNvcmUucG1pY19idXNfYWNjZXNzX25iKTsKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1
bmNvcmUgPSBjb250YWluZXJfb2YobmIsCisJCQlzdHJ1Y3QgaW50ZWxfdW5jb3JlLCBwbWljX2J1
c19hY2Nlc3NfbmIpOwogCiAJc3dpdGNoIChhY3Rpb24pIHsKIAljYXNlIE1CSV9QTUlDX0JVU19B
Q0NFU1NfQkVHSU46CkBAIC0xNDc5LDEyICsxNDc5LDEyIEBAIHN0YXRpYyBpbnQgaTkxNV9wbWlj
X2J1c19hY2Nlc3Nfbm90aWZpZXIoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICpuYiwKIAkJICogd2Fr
ZSByZWZlcmVuY2UgLT4gZGlzYWJsZSB3YWtlcmVmIGFzc2VydHMgZm9yIHRoZSB0aW1lIG9mCiAJ
CSAqIHRoZSBhY2Nlc3MuCiAJCSAqLwotCQlkaXNhYmxlX3JwbV93YWtlcmVmX2Fzc2VydHMoZGV2
X3ByaXYpOwotCQlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldCgmZGV2X3ByaXYtPnVuY29yZSwg
Rk9SQ0VXQUtFX0FMTCk7Ci0JCWVuYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKGRldl9wcml2KTsK
KwkJZGlzYWJsZV9ycG1fd2FrZXJlZl9hc3NlcnRzKHVuY29yZS0+cnBtKTsKKwkJaW50ZWxfdW5j
b3JlX2ZvcmNld2FrZV9nZXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKKwkJZW5hYmxlX3JwbV93
YWtlcmVmX2Fzc2VydHModW5jb3JlLT5ycG0pOwogCQlicmVhazsKIAljYXNlIE1CSV9QTUlDX0JV
U19BQ0NFU1NfRU5EOgotCQlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1dCgmZGV2X3ByaXYtPnVu
Y29yZSwgRk9SQ0VXQUtFX0FMTCk7CisJCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KHVuY29y
ZSwgRk9SQ0VXQUtFX0FMTCk7CiAJCWJyZWFrOwogCX0KIAotLSAKMi4yMC4xCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBs
aXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

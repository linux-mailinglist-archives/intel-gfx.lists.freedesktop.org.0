Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0011531EA20
	for <lists+intel-gfx@lfdr.de>; Thu, 18 Feb 2021 14:02:09 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4F8796E837;
	Thu, 18 Feb 2021 13:02:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A06AB6E837
 for <intel-gfx@lists.freedesktop.org>; Thu, 18 Feb 2021 13:02:07 +0000 (UTC)
IronPort-SDR: Tvtd4Si/1moZkort5ieKfh3ghiNQovK3MbBXL3YOixRki0foV1HzTcQ/BWErzoO81rBZq5TzsN
 YaHKNVcSszkQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9898"; a="171164811"
X-IronPort-AV: E=Sophos;i="5.81,187,1610438400"; d="scan'208";a="171164811"
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 18 Feb 2021 05:02:06 -0800
IronPort-SDR: YP9fw2DsQYxMePYJ8qsYYvDBQrhFvbbmkIG56B9mGtWkKimmfm0z+2bZ26cUFQxy06nfNbOfEW
 4P6NnLyEmxOg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.81,187,1610438400"; d="scan'208";a="364827492"
Received: from orsmsx601.amr.corp.intel.com ([10.22.229.14])
 by orsmga006.jf.intel.com with ESMTP; 18 Feb 2021 05:02:06 -0800
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX601.amr.corp.intel.com (10.22.229.14) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2106.2; Thu, 18 Feb 2021 05:02:05 -0800
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2106.2; Thu, 18 Feb 2021 05:02:05 -0800
Received: from orsmsx610.amr.corp.intel.com ([10.22.229.23]) by
 ORSMSX610.amr.corp.intel.com ([10.22.229.23]) with mapi id 15.01.2106.002;
 Thu, 18 Feb 2021 05:02:05 -0800
From: "Souza, Jose" <jose.souza@intel.com>
To: "ville.syrjala@linux.intel.com" <ville.syrjala@linux.intel.com>
Thread-Topic: [Intel-gfx] [PATCH] drm/i915: Nuke INTEL_OUTPUT_FORMAT_INVALID
Thread-Index: AQHW+/zHVFY3b0oDhEm5wwVk6viMOapdJOwAgABcloCAAPmcAA==
Date: Thu, 18 Feb 2021 13:02:05 +0000
Message-ID: <aeea93fcec5ca6527c3fb1860c9d7fb2cc5da26c.camel@intel.com>
References: <20210205202322.27608-1-ville.syrjala@linux.intel.com>
 <3dd3591dad1839f9f0396e09a68e0a834743d901.camel@intel.com>
 <YC2UT0fD9Iiecgz5@intel.com>
In-Reply-To: <YC2UT0fD9Iiecgz5@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.1.200.100]
Content-ID: <E52BD65259CE7248AD753D98AB8FBB63@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH] drm/i915: Nuke INTEL_OUTPUT_FORMAT_INVALID
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVGh1LCAyMDIxLTAyLTE4IGF0IDAwOjEwICswMjAwLCBWaWxsZSBTeXJqw6Rsw6Qgd3JvdGU6
DQo+IE9uIFdlZCwgRmViIDE3LCAyMDIxIGF0IDA0OjM3OjIwUE0gKzAwMDAsIFNvdXphLCBKb3Nl
IHdyb3RlOg0KPiA+IE9uIEZyaSwgMjAyMS0wMi0wNSBhdCAyMjoyMyArMDIwMCwgVmlsbGUgU3ly
amFsYSB3cm90ZToNCj4gPiA+IEZyb206IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBs
aW51eC5pbnRlbC5jb20+DQo+ID4gPiANCj4gPiA+IFdlIHRlbmQgdG8gdXNlIG91dHB1dF9mb3Jt
YXQhPVJHQiBhcyBhIHNob3J0aGFuZCBmb3IgWUNiQ3IsIGJ1dA0KPiA+ID4gdGhpcyBmYWlscyBp
ZiB3ZSBoYXZlIGEgZGlzYWJsZWQgY3J0YyB3aGVyZSBvdXRwdXRfZm9ybWF0PT1JTlZBTElELg0K
PiA+ID4gV2UncmUgbm93IGdldHRpbmcgc29tZSBmYWlsIGZyb20gaW50ZWxfY29sb3JfY2hlY2so
KSB3aGVuIHdlIGhhdmU6DQo+ID4gPiDCoGh3LmVuYWJsZT09ZmFsc2UNCj4gPiA+IMKgaHcuY3Rt
IT1OVUxMDQo+ID4gPiDCoG91dHB1dF9mb3JtYXQ9PUlOVkFMSUQNCj4gPiA+IA0KPiA+ID4gTGV0
J3MgYXZvaWQgdGhhdCBieSB0aHJvd2luZyBJTlRFTF9PVVRQVVRfRk9STUFUX0lOVkFMSUQgdG8g
dGhlDQo+ID4gPiBkdW1wc3RlciwgYW5kIHRodXMgZXZlcnl0aGluZyBkZWZhdWx0cyB0byBSR0Ig
d2hlbiB0aGUgY3J0Yw0KPiA+ID4gaXMgZGlzYWJsZWQuDQo+ID4gPiANCj4gPiA+IFRoaXMgZG9l
cyBiZWcgdGhlIGRlZXBlciBxdWVzdGlvbiBvZiBob3cgbXVjaCBvZiB0aGUgc3RhdGUNCj4gPiA+
IHNob3VsZCB3ZSBpbiBmYWN0IGJlIHZhbGlkYXRpbmcgd2hlbiBody91YXBpLmVuYWJsZT09ZmFs
c2UuDQo+ID4gPiBBbmQgc2hvdWxkIHdlIGV2ZW4gYmUgZG9pbmcgdGhlIHVhcGktPmh3IGNvcHkg
d2hlbg0KPiA+ID4gdWFwaS5lbmFibGU9PWZhbHNlPyBTbyBmYXIgSSd2ZSBub3QgYmVlbiBhYmxl
IHRvIGNvbWUgdXAgd2l0aA0KPiA+ID4gc2F0aXNmYWN0b3J5IGFuc3dlcnMgZm9yIG15c2VsZiwg
c28gSSdtIHB1dHRpbmcgaXQgb2ZmIGZvciB0aGUNCj4gPiA+IG1vbWVudC4NCj4gPiA+IA0KPiA+
ID4gQ2M6IExlZSBTaGF3biBDIDxzaGF3bi5jLmxlZUBpbnRlbC5jb20+DQo+ID4gPiBGaXhlczog
MGFhNWMzODM1YzhhICgiZHJtL2k5MTU6IHN1cHBvcnQgdHdvIENTQyBtb2R1bGUgb24gZ2VuMTEg
YW5kIGxhdGVyIikNCj4gPiA+IENsb3NlczogaHR0cHM6Ly9naXRsYWIuZnJlZWRlc2t0b3Aub3Jn
L2RybS9pbnRlbC8tL2lzc3Vlcy8yOTY0DQo+ID4gPiBTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJq
w6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPg0KPiA+ID4gLS0tDQo+ID4gPiDC
oGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY3J0Yy5jICAgICAgICAgIHwgMSAt
DQo+ID4gPiDCoGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICAg
ICAgIHwgMyArLS0NCj4gPiA+IMKgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmggfCAxIC0NCj4gPiA+IMKgMyBmaWxlcyBjaGFuZ2VkLCAxIGluc2VydGlv
bigrKSwgNCBkZWxldGlvbnMoLSkNCj4gPiA+IA0KPiA+ID4gZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY3J0Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9jcnRjLmMNCj4gPiA+IGluZGV4IDU3YjBhM2ViZTkwOC4uOGU3N2NhN2Rk
ZjExIDEwMDY0NA0KPiA+ID4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9jcnRjLmMNCj4gPiA+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
Y3J0Yy5jDQo+ID4gPiBAQCAtMTA5LDcgKzEwOSw2IEBAIHZvaWQgaW50ZWxfY3J0Y19zdGF0ZV9y
ZXNldChzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwNCj4gDQo+IHZvaWQgaW50
ZWxfY3J0Y19zdGF0ZV9yZXNldChzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwN
Cj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqBzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykNCj4gew0KPiDCoMKgwqDCoMKgwqDCoMKgbWVtc2V0
KGNydGNfc3RhdGUsIDAsIHNpemVvZigqY3J0Y19zdGF0ZSkpOw0KPiAuLi4NCj4gDQo+ID4gPiDC
oAljcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlciA9IElOVkFMSURfVFJBTlNDT0RFUjsNCj4gPiA+
IMKgCWNydGNfc3RhdGUtPm1hc3Rlcl90cmFuc2NvZGVyID0gSU5WQUxJRF9UUkFOU0NPREVSOw0K
PiA+ID4gwqAJY3J0Y19zdGF0ZS0+aHN3X3dvcmthcm91bmRfcGlwZSA9IElOVkFMSURfUElQRTsN
Cj4gPiA+IC0JY3J0Y19zdGF0ZS0+b3V0cHV0X2Zvcm1hdCA9IElOVEVMX09VVFBVVF9GT1JNQVRf
SU5WQUxJRDsNCj4gPiANCj4gPiBNaXNzaW5nIHNldCBvdXRwdXRfZm9ybWF0IHRvIElOVEVMX09V
VFBVVF9GT1JNQVRfUkdCLCBrbWFsbG9jKCkgZG9uJ3Qgc2V0IG1lbW9yeSBhbGxvY2F0ZWQgdG8g
emVybyBhbmQgSU5URUxfT1VUUFVUX0ZPUk1BVF9JTlZBTElEIHdhcyB0aGUgaW5kZXggMCBhbmQN
Cj4gPiB3ZSB3ZXJlIHNldHRpbmcgaXQgZHVyaW5nIGludGVsX2NydGNfc3RhdGVfcmVzZXQoKSBz
byB3ZSBzaG91bGQgbm93IHNldCBpdCB0byBJTlRFTF9PVVRQVVRfRk9STUFUX1JHQi4NCj4gPiBo
dHRwczovL3d3dy5rZXJuZWwub3JnL2RvYy9odG1sZG9jcy9rZXJuZWwtYXBpL21tLmh0bWwNCj4g
DQo+IGllLiB3ZSB6ZXJvIG91dCB0aGUgd2hvbGUgdGhpbmcuIFRoZSByZWFzb24gd2h5IHRoZSBl
eHBsaWNpdCBhc3NpZ25tZW50DQo+IHdhcyBoZXJlIEkgc3VwcG9zZSBpcyB0aGF0IEkgaGFkIGFz
c3VtZWQgSU5URUxfT1VUUFVUX0ZPUk1BVF9JTlZBTElEPT0tMSwNCj4gd2hpY2ggaXMgdGhlIGNh
c2UgZm9yIElOVkFMSURfVFJBTlNDT0RFUi9QSVBFL2V0Yy4NCg0KQWggb2theSwgbWlzc2VkIHRo
ZSBtZW1zZXQoKS4NCg0KUmV2aWV3ZWQtYnk6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uu
c291emFAaW50ZWwuY29tPg0KDQo+IA0KPiA+IA0KPiA+IFdpdGggdGhhdCBmaXhlZDoNCj4gPiAN
Cj4gPiBSZXZpZXdlZC1ieTogSm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRl
bC5jb20+DQo+ID4gDQo+ID4gPiDCoAljcnRjX3N0YXRlLT5zY2FsZXJfc3RhdGUuc2NhbGVyX2lk
ID0gLTE7DQo+ID4gPiDCoAljcnRjX3N0YXRlLT5tc3RfbWFzdGVyX3RyYW5zY29kZXIgPSBJTlZB
TElEX1RSQU5TQ09ERVI7DQo+ID4gPiDCoH0NCj4gPiA+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+ID4gPiBpbmRleCA5MmMxNGYzZjBhYmYuLjQ2ZDAw
OTMxODdmOCAxMDA2NDQNCj4gPiA+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGlzcGxheS5jDQo+ID4gPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYw0KPiA+ID4gQEAgLTEwMjIwLDcgKzEwMjIwLDYgQEAgc3RhdGljIHZv
aWQgc25wcmludGZfb3V0cHV0X3R5cGVzKGNoYXIgKmJ1Ziwgc2l6ZV90IGxlbiwNCj4gPiA+IMKg
fQ0KPiA+ID4gwqANCj4gPiA+IA0KPiA+ID4gDQo+ID4gPiANCj4gPiA+IMKgc3RhdGljIGNvbnN0
IGNoYXIgKiBjb25zdCBvdXRwdXRfZm9ybWF0X3N0cltdID0gew0KPiA+ID4gLQlbSU5URUxfT1VU
UFVUX0ZPUk1BVF9JTlZBTElEXSA9ICJJbnZhbGlkIiwNCj4gPiA+IMKgCVtJTlRFTF9PVVRQVVRf
Rk9STUFUX1JHQl0gPSAiUkdCIiwNCj4gPiA+IMKgCVtJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNS
NDIwXSA9ICJZQ0JDUjQ6MjowIiwNCj4gPiA+IMKgCVtJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNS
NDQ0XSA9ICJZQ0JDUjQ6NDo0IiwNCj4gPiA+IEBAIC0xMDIyOSw3ICsxMDIyOCw3IEBAIHN0YXRp
YyBjb25zdCBjaGFyICogY29uc3Qgb3V0cHV0X2Zvcm1hdF9zdHJbXSA9IHsNCj4gPiA+IMKgc3Rh
dGljIGNvbnN0IGNoYXIgKm91dHB1dF9mb3JtYXRzKGVudW0gaW50ZWxfb3V0cHV0X2Zvcm1hdCBm
b3JtYXQpDQo+ID4gPiDCoHsNCj4gPiA+IMKgCWlmIChmb3JtYXQgPj0gQVJSQVlfU0laRShvdXRw
dXRfZm9ybWF0X3N0cikpDQo+ID4gPiAtCQlmb3JtYXQgPSBJTlRFTF9PVVRQVVRfRk9STUFUX0lO
VkFMSUQ7DQo+ID4gPiArCQlyZXR1cm4gImludmFsaWQiOw0KPiA+ID4gwqAJcmV0dXJuIG91dHB1
dF9mb3JtYXRfc3RyW2Zvcm1hdF07DQo+ID4gPiDCoH0NCj4gPiA+IMKgDQo+ID4gPiANCj4gPiA+
IA0KPiA+ID4gDQo+ID4gPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiA+ID4gaW5kZXggMzA3ZmY0Yjc3MWY0Li5iM2FjMzlmZWE2
ZjAgMTAwNjQ0DQo+ID4gPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaA0KPiA+ID4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgNCj4gPiA+IEBAIC04MzAsNyArODMwLDYgQEAgc3RydWN0
IGludGVsX2NydGNfd21fc3RhdGUgew0KPiA+ID4gwqB9Ow0KPiA+ID4gwqANCj4gPiA+IA0KPiA+
ID4gDQo+ID4gPiANCj4gPiA+IMKgZW51bSBpbnRlbF9vdXRwdXRfZm9ybWF0IHsNCj4gPiA+IC0J
SU5URUxfT1VUUFVUX0ZPUk1BVF9JTlZBTElELA0KPiA+ID4gwqAJSU5URUxfT1VUUFVUX0ZPUk1B
VF9SR0IsDQo+ID4gPiDCoAlJTlRFTF9PVVRQVVRfRk9STUFUX1lDQkNSNDIwLA0KPiA+ID4gwqAJ
SU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQ0NCwNCj4gPiANCj4gDQoNCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QK
SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C99FF1155A9
	for <lists+intel-gfx@lfdr.de>; Fri,  6 Dec 2019 17:43:28 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id ACCB76FA5A;
	Fri,  6 Dec 2019 16:43:26 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl [141.105.120.124])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B22AB6FA5F
 for <intel-gfx@lists.freedesktop.org>; Fri,  6 Dec 2019 16:43:20 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  6 Dec 2019 17:43:14 +0100
Message-Id: <20191206164317.2489743-3-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191206164317.2489743-1-maarten.lankhorst@linux.intel.com>
References: <20191206164317.2489743-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/5] drm/i915/gem: Extract transient execbuf
 flags from i915_vma
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CgpGb3Igb3VyIGNv
bnZlbmllbmNlLCBhbmQgdG8gYXZvaWQgZnJlcXVlbnQgYWxsb2NhdGlvbnMsIHdlIHBsYWNlZCBz
b21lCmxpc3RzIHdlIHVzZSBmb3IgZXhlY2J1ZiBpbnNpZGUgdGhlIGNvbW1vbiBpOTE1X3ZtYSBz
dHJ1Y3QuIEFzIHdlIGxvb2sKdG8gcGFyYWxsZWxpc2UgZXhlY2J1Ziwgc3VjaCBmaWVsZHMgZ3Vh
cmRlZCBieSB0aGUgc3RydWN0X211dGV4IEJLTCBtdXN0CmJlIHB1bGxlZCB1bmRlciBsb2NhbCBj
b250cm9sLiBJbnN0ZWFkIG9mIHVzaW5nIHRoZSBpOTE1X3ZtYSBhcyBvdXIKcHJpbWFyeSBtZWFu
cyBvZiB0cmFja2luZyB0aGUgdXNlcidzIGxpc3Qgb2Ygb2JqZWN0cyBhbmQgdGhlaXIgdmlydHVh
bAptYXBwaW5ncywgd2UgdXNlIGEgbG9jYWwgZWJfdm1hIHdpdGggdGhlIHNhbWUgbGlzdHMgYXMg
YmVmb3JlIChqdXN0IG5vdwpsb2NhbCBub3QgZ2xvYmFsKS4KClRoaXMgc2hvdWxkIGFsbG93IHVz
IHRvIG9ubHkgcGVyZm9ybSB0aGUgbG9va3VwIG9mIHZtYSB1c2VkIGZvcgpleGVjdXRpb24gb25j
ZSBkdXJpbmcgdGhlIGV4ZWNidWYgaW9jdGwsIGFzIGN1cnJlbnRseSB3ZSBuZWVkIHRvIHJlbW92
ZQpvdXIgc2VjcmV0cyBmcm9tIGluc2lkZSBpOTE1X3ZtYSBldmVyeXRpbWUgd2UgZHJvcCB0aGUg
c3RydWN0X211dGV4IGFzCmFub3RoZXIgZXhlY2J1ZiBtYXkgdXNlIHRoZSBzaGFyZWQgbG9jYXRp
b25zLgoKT25jZSB1c2VyIHZpc2libGUgY29uc2VxdWVuY2UgaXMgdGhhdCB3ZSBjYW4gcmVtb3Zl
IHRoZSByZXF1aXJlbWVudCB0aGF0CnRoZSBleGVjb2JqW10gYmUgdW5pcXVlLCBhbmQgb25seSBy
ZXF1aXJlIHRoYXQgdGhleSBkbyBub3QgY29uZmxpY3QKKGkuZS4geW91IGNhbm5vdCBzb2Z0cGlu
IHRoZSBzYW1lIG9iamVjdCBpbnRvIHR3byBsb2NhdGlvbnMuLi4gaG1tLCB3ZQpjb3VsZCBhbGxv
dyB0aGF0IGlmIHRydWx5IHJlcXVpcmVkLCBidXQgYXRtIHdlIG9ubHkgYWxsb3cgb25lIHZtYSBw
ZXIKcHBHVFQgcGVyIG9iamVjdC4pCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlz
QGNocmlzLXdpbHNvbi5jby51az4KQ2M6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVuLmxhbmto
b3JzdEBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hYXJ0ZW4gTGFua2hvcnN0IDxt
YWFydGVuLmxhbmtob3JzdEBsaW51eC5pbnRlbC5jb20+Ckxpbms6IGh0dHBzOi8vcGF0Y2h3b3Jr
LmZyZWVkZXNrdG9wLm9yZy9wYXRjaC9tc2dpZC8yMDE5MTIwMzEyMTMxNi4yOTcyMjU3LTItY2hy
aXNAY2hyaXMtd2lsc29uLmNvLnVrCi0tLQogLi4uL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1f
ZXhlY2J1ZmZlci5jICAgIHwgMjc0ICsrKysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV92bWEuaCAgICAgICAgICAgICAgIHwgIDExIC0KIDIgZmlsZXMgY2hhbmdlZCwg
MTMxIGluc2VydGlvbnMoKyksIDE1NCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCAzNDA0NGM2MjAzYTUuLjUwYmE0
OTMzYTdhZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4
ZWNidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1
ZmZlci5jCkBAIC0yNyw2ICsyNywxOSBAQAogI2luY2x1ZGUgImk5MTVfZ2VtX2lvY3Rscy5oIgog
I2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKIAorc3RydWN0IGViX3ZtYSB7CisJc3RydWN0IGk5MTVf
dm1hICp2bWE7CisJdW5zaWduZWQgaW50IGZsYWdzOworCisJLyoqIFRoaXMgdm1hJ3MgcGxhY2Ug
aW4gdGhlIGV4ZWNidWYgcmVzZXJ2YXRpb24gbGlzdCAqLworCXN0cnVjdCBkcm1faTkxNV9nZW1f
ZXhlY19vYmplY3QyICpleGVjOworCXN0cnVjdCBsaXN0X2hlYWQgYmluZF9saW5rOworCXN0cnVj
dCBsaXN0X2hlYWQgcmVsb2NfbGluazsKKworCXN0cnVjdCBobGlzdF9ub2RlIG5vZGU7CisJdTMy
IGhhbmRsZTsKK307CisKIGVudW0gewogCUZPUkNFX0NQVV9SRUxPQyA9IDEsCiAJRk9SQ0VfR1RU
X1JFTE9DLApAQCAtMjE5LDE1ICsyMzIsMTQgQEAgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciB7CiAJ
c3RydWN0IGRybV9maWxlICpmaWxlOyAvKiogcGVyLWZpbGUgbG9va3VwIHRhYmxlcyBhbmQgbGlt
aXRzICovCiAJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyMiAqYXJnczsgLyoqIGlvY3Rs
IHBhcmFtZXRlcnMgKi8KIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNfb2JqZWN0MiAqZXhlYzsg
LyoqIGlvY3RsIGV4ZWNvYmpbXSAqLwotCXN0cnVjdCBpOTE1X3ZtYSAqKnZtYTsKLQl1bnNpZ25l
ZCBpbnQgKmZsYWdzOworCXN0cnVjdCBlYl92bWEgKnZtYTsKIAogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsgLyoqIGVuZ2luZSB0byBxdWV1ZSB0aGUgcmVxdWVzdCB0byAqLwogCXN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjb250ZXh0OyAvKiBsb2dpY2FsIHN0YXRlIGZvciB0aGUgcmVx
dWVzdCAqLwogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpnZW1fY29udGV4dDsgLyoqIGNhbGxl
cidzIGNvbnRleHQgKi8KIAogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Q7IC8qKiBvdXIg
cmVxdWVzdCB0byBidWlsZCAqLwotCXN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2g7IC8qKiBpZGVudGl0
eSBvZiB0aGUgYmF0Y2ggb2JqL3ZtYSAqLworCXN0cnVjdCBlYl92bWEgKmJhdGNoOyAvKiogaWRl
bnRpdHkgb2YgdGhlIGJhdGNoIG9iai92bWEgKi8KIAogCS8qKiBhY3R1YWwgc2l6ZSBvZiBleGVj
b2JqW10gYXMgd2UgbWF5IGV4dGVuZCBpdCBmb3IgdGhlIGNtZHBhcnNlciAqLwogCXVuc2lnbmVk
IGludCBidWZmZXJfY291bnQ7CkBAIC0yNzQsOCArMjg2LDYgQEAgc3RydWN0IGk5MTVfZXhlY2J1
ZmZlciB7CiAJc3RydWN0IGhsaXN0X2hlYWQgKmJ1Y2tldHM7IC8qKiBodCBmb3IgcmVsb2NhdGlv
biBoYW5kbGVzICovCiB9OwogCi0jZGVmaW5lIGV4ZWNfZW50cnkoRUIsIFZNQSkgKCYoRUIpLT5l
eGVjWyhWTUEpLT5leGVjX2ZsYWdzIC0gKEVCKS0+ZmxhZ3NdKQotCiAvKgogICogVXNlZCB0byBj
b252ZXJ0IGFueSBhZGRyZXNzIHRvIGNhbm9uaWNhbCBmb3JtLgogICogU3RhcnRpbmcgZnJvbSBn
ZW44LCBzb21lIGNvbW1hbmRzIChlLmcuIFNUQVRFX0JBU0VfQUREUkVTUywKQEAgLTM4MSw5ICsz
OTEsOSBAQCBlYl92bWFfbWlzcGxhY2VkKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY19v
YmplY3QyICplbnRyeSwKIHN0YXRpYyBpbmxpbmUgYm9vbAogZWJfcGluX3ZtYShzdHJ1Y3QgaTkx
NV9leGVjYnVmZmVyICplYiwKIAkgICBjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNfb2Jq
ZWN0MiAqZW50cnksCi0JICAgc3RydWN0IGk5MTVfdm1hICp2bWEpCisJICAgc3RydWN0IGViX3Zt
YSAqZXYpCiB7Ci0JdW5zaWduZWQgaW50IGV4ZWNfZmxhZ3MgPSAqdm1hLT5leGVjX2ZsYWdzOwor
CXN0cnVjdCBpOTE1X3ZtYSAqdm1hID0gZXYtPnZtYTsKIAl1NjQgcGluX2ZsYWdzOwogCiAJaWYg
KHZtYS0+bm9kZS5zaXplKQpAQCAtMzkyLDI0ICs0MDIsMjQgQEAgZWJfcGluX3ZtYShzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYiwKIAkJcGluX2ZsYWdzID0gZW50cnktPm9mZnNldCAmIFBJTl9P
RkZTRVRfTUFTSzsKIAogCXBpbl9mbGFncyB8PSBQSU5fVVNFUiB8IFBJTl9OT0VWSUNUIHwgUElO
X09GRlNFVF9GSVhFRDsKLQlpZiAodW5saWtlbHkoZXhlY19mbGFncyAmIEVYRUNfT0JKRUNUX05F
RURTX0dUVCkpCisJaWYgKHVubGlrZWx5KGV2LT5mbGFncyAmIEVYRUNfT0JKRUNUX05FRURTX0dU
VCkpCiAJCXBpbl9mbGFncyB8PSBQSU5fR0xPQkFMOwogCiAJaWYgKHVubGlrZWx5KGk5MTVfdm1h
X3Bpbih2bWEsIDAsIDAsIHBpbl9mbGFncykpKQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAodW5s
aWtlbHkoZXhlY19mbGFncyAmIEVYRUNfT0JKRUNUX05FRURTX0ZFTkNFKSkgeworCWlmICh1bmxp
a2VseShldi0+ZmxhZ3MgJiBFWEVDX09CSkVDVF9ORUVEU19GRU5DRSkpIHsKIAkJaWYgKHVubGlr
ZWx5KGk5MTVfdm1hX3Bpbl9mZW5jZSh2bWEpKSkgewogCQkJaTkxNV92bWFfdW5waW4odm1hKTsK
IAkJCXJldHVybiBmYWxzZTsKIAkJfQogCiAJCWlmICh2bWEtPmZlbmNlKQotCQkJZXhlY19mbGFn
cyB8PSBfX0VYRUNfT0JKRUNUX0hBU19GRU5DRTsKKwkJCWV2LT5mbGFncyB8PSBfX0VYRUNfT0JK
RUNUX0hBU19GRU5DRTsKIAl9CiAKLQkqdm1hLT5leGVjX2ZsYWdzID0gZXhlY19mbGFncyB8IF9f
RVhFQ19PQkpFQ1RfSEFTX1BJTjsKLQlyZXR1cm4gIWViX3ZtYV9taXNwbGFjZWQoZW50cnksIHZt
YSwgZXhlY19mbGFncyk7CisJZXYtPmZsYWdzIHw9IF9fRVhFQ19PQkpFQ1RfSEFTX1BJTjsKKwly
ZXR1cm4gIWViX3ZtYV9taXNwbGFjZWQoZW50cnksIHZtYSwgZXYtPmZsYWdzKTsKIH0KIAogc3Rh
dGljIGlubGluZSB2b2lkIF9fZWJfdW5yZXNlcnZlX3ZtYShzdHJ1Y3QgaTkxNV92bWEgKnZtYSwg
dW5zaWduZWQgaW50IGZsYWdzKQpAQCAtNDIzLDEzICs0MzMsMTMgQEAgc3RhdGljIGlubGluZSB2
b2lkIF9fZWJfdW5yZXNlcnZlX3ZtYShzdHJ1Y3QgaTkxNV92bWEgKnZtYSwgdW5zaWduZWQgaW50
IGZsYWdzKQogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQKLWViX3VucmVzZXJ2ZV92bWEoc3RydWN0
IGk5MTVfdm1hICp2bWEsIHVuc2lnbmVkIGludCAqZmxhZ3MpCitlYl91bnJlc2VydmVfdm1hKHN0
cnVjdCBlYl92bWEgKmV2KQogewotCWlmICghKCpmbGFncyAmIF9fRVhFQ19PQkpFQ1RfSEFTX1BJ
TikpCisJaWYgKCEoZXYtPmZsYWdzICYgX19FWEVDX09CSkVDVF9IQVNfUElOKSkKIAkJcmV0dXJu
OwogCi0JX19lYl91bnJlc2VydmVfdm1hKHZtYSwgKmZsYWdzKTsKLQkqZmxhZ3MgJj0gfl9fRVhF
Q19PQkpFQ1RfUkVTRVJWRUQ7CisJX19lYl91bnJlc2VydmVfdm1hKGV2LT52bWEsIGV2LT5mbGFn
cyk7CisJZXYtPmZsYWdzICY9IH5fX0VYRUNfT0JKRUNUX1JFU0VSVkVEOwogfQogCiBzdGF0aWMg
aW50CkBAIC00NTksMTIgKzQ2OSw2IEBAIGViX3ZhbGlkYXRlX3ZtYShzdHJ1Y3QgaTkxNV9leGVj
YnVmZmVyICplYiwKIAkJZW50cnktPnBhZF90b19zaXplID0gMDsKIAl9CiAKLQlpZiAodW5saWtl
bHkodm1hLT5leGVjX2ZsYWdzKSkgewotCQlEUk1fREVCVUcoIk9iamVjdCBbaGFuZGxlICVkLCBp
bmRleCAlZF0gYXBwZWFycyBtb3JlIHRoYW4gb25jZSBpbiBvYmplY3QgbGlzdFxuIiwKLQkJCSAg
ZW50cnktPmhhbmRsZSwgKGludCkoZW50cnkgLSBlYi0+ZXhlYykpOwotCQlyZXR1cm4gLUVJTlZB
TDsKLQl9Ci0KIAkvKgogCSAqIEZyb20gZHJtX21tIHBlcnNwZWN0aXZlIGFkZHJlc3Mgc3BhY2Ug
aXMgY29udGludW91cywKIAkgKiBzbyBmcm9tIHRoaXMgcG9pbnQgd2UncmUgYWx3YXlzIHVzaW5n
IG5vbi1jYW5vbmljYWwKQEAgLTQ5Myw2ICs0OTcsNyBAQCBlYl9hZGRfdm1hKHN0cnVjdCBpOTE1
X2V4ZWNidWZmZXIgKmViLAogCSAgIHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogewogCXN0cnVjdCBk
cm1faTkxNV9nZW1fZXhlY19vYmplY3QyICplbnRyeSA9ICZlYi0+ZXhlY1tpXTsKKwlzdHJ1Y3Qg
ZWJfdm1hICpldiA9ICZlYi0+dm1hW2ldOwogCWludCBlcnI7CiAKIAlHRU1fQlVHX09OKGk5MTVf
dm1hX2lzX2Nsb3NlZCh2bWEpKTsKQEAgLTUwMywyNSArNTA4LDE5IEBAIGViX2FkZF92bWEoc3Ry
dWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCQlyZXR1cm4gZXJyOwogCX0KIAorCWV2LT52bWEg
PSB2bWE7CisJZXYtPmV4ZWMgPSBlbnRyeTsKKwlldi0+ZmxhZ3MgPSBlbnRyeS0+ZmxhZ3M7CisK
IAlpZiAoZWItPmx1dF9zaXplID4gMCkgewotCQl2bWEtPmV4ZWNfaGFuZGxlID0gZW50cnktPmhh
bmRsZTsKLQkJaGxpc3RfYWRkX2hlYWQoJnZtYS0+ZXhlY19ub2RlLAorCQlldi0+aGFuZGxlID0g
ZW50cnktPmhhbmRsZTsKKwkJaGxpc3RfYWRkX2hlYWQoJmV2LT5ub2RlLAogCQkJICAgICAgICZl
Yi0+YnVja2V0c1toYXNoXzMyKGVudHJ5LT5oYW5kbGUsCiAJCQkJCQkgICAgZWItPmx1dF9zaXpl
KV0pOwogCX0KIAogCWlmIChlbnRyeS0+cmVsb2NhdGlvbl9jb3VudCkKLQkJbGlzdF9hZGRfdGFp
bCgmdm1hLT5yZWxvY19saW5rLCAmZWItPnJlbG9jcyk7Ci0KLQkvKgotCSAqIFN0YXNoIGEgcG9p
bnRlciBmcm9tIHRoZSB2bWEgdG8gZXhlY29iaiwgc28gd2UgY2FuIHF1ZXJ5IGl0cyBmbGFncywK
LQkgKiBzaXplLCBhbGlnbm1lbnQgZXRjIGFzIHByb3ZpZGVkIGJ5IHRoZSB1c2VyLiBBbHNvIHdl
IHN0YXNoIGEgcG9pbnRlcgotCSAqIHRvIHRoZSB2bWEgaW5zaWRlIHRoZSBleGVjb2JqIHNvIHRo
YXQgd2UgY2FuIHVzZSBhIGRpcmVjdCBsb29rdXAKLQkgKiB0byBmaW5kIHRoZSByaWdodCB0YXJn
ZXQgVk1BIHdoZW4gZG9pbmcgcmVsb2NhdGlvbnMuCi0JICovCi0JZWItPnZtYVtpXSA9IHZtYTsK
LQllYi0+ZmxhZ3NbaV0gPSBlbnRyeS0+ZmxhZ3M7Ci0Jdm1hLT5leGVjX2ZsYWdzID0gJmViLT5m
bGFnc1tpXTsKKwkJbGlzdF9hZGRfdGFpbCgmZXYtPnJlbG9jX2xpbmssICZlYi0+cmVsb2NzKTsK
IAogCS8qCiAJICogU05BIGlzIGRvaW5nIGZhbmN5IHRyaWNrcyB3aXRoIGNvbXByZXNzaW5nIGJh
dGNoIGJ1ZmZlcnMsIHdoaWNoIGxlYWRzCkBAIC01MzQsMjggKzUzMywyNiBAQCBlYl9hZGRfdm1h
KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCSAqLwogCWlmIChpID09IGJhdGNoX2lkeCkg
ewogCQlpZiAoZW50cnktPnJlbG9jYXRpb25fY291bnQgJiYKLQkJICAgICEoZWItPmZsYWdzW2ld
ICYgRVhFQ19PQkpFQ1RfUElOTkVEKSkKLQkJCWViLT5mbGFnc1tpXSB8PSBfX0VYRUNfT0JKRUNU
X05FRURTX0JJQVM7CisJCSAgICAhKGV2LT5mbGFncyAmIEVYRUNfT0JKRUNUX1BJTk5FRCkpCisJ
CQlldi0+ZmxhZ3MgfD0gX19FWEVDX09CSkVDVF9ORUVEU19CSUFTOwogCQlpZiAoZWItPnJlbG9j
X2NhY2hlLmhhc19mZW5jZSkKLQkJCWViLT5mbGFnc1tpXSB8PSBFWEVDX09CSkVDVF9ORUVEU19G
RU5DRTsKKwkJCWV2LT5mbGFncyB8PSBFWEVDX09CSkVDVF9ORUVEU19GRU5DRTsKIAotCQllYi0+
YmF0Y2ggPSB2bWE7CisJCWViLT5iYXRjaCA9IGV2OwogCX0KIAogCWVyciA9IDA7Ci0JaWYgKGVi
X3Bpbl92bWEoZWIsIGVudHJ5LCB2bWEpKSB7CisJaWYgKGViX3Bpbl92bWEoZWIsIGVudHJ5LCBl
dikpIHsKIAkJaWYgKGVudHJ5LT5vZmZzZXQgIT0gdm1hLT5ub2RlLnN0YXJ0KSB7CiAJCQllbnRy
eS0+b2Zmc2V0ID0gdm1hLT5ub2RlLnN0YXJ0IHwgVVBEQVRFOwogCQkJZWItPmFyZ3MtPmZsYWdz
IHw9IF9fRVhFQ19IQVNfUkVMT0M7CiAJCX0KIAl9IGVsc2UgewotCQllYl91bnJlc2VydmVfdm1h
KHZtYSwgdm1hLT5leGVjX2ZsYWdzKTsKKwkJZWJfdW5yZXNlcnZlX3ZtYShldik7CiAKLQkJbGlz
dF9hZGRfdGFpbCgmdm1hLT5leGVjX2xpbmssICZlYi0+dW5ib3VuZCk7CisJCWxpc3RfYWRkX3Rh
aWwoJmV2LT5iaW5kX2xpbmssICZlYi0+dW5ib3VuZCk7CiAJCWlmIChkcm1fbW1fbm9kZV9hbGxv
Y2F0ZWQoJnZtYS0+bm9kZSkpCiAJCQllcnIgPSBpOTE1X3ZtYV91bmJpbmQodm1hKTsKLQkJaWYg
KHVubGlrZWx5KGVycikpCi0JCQl2bWEtPmV4ZWNfZmxhZ3MgPSBOVUxMOwogCX0KIAlyZXR1cm4g
ZXJyOwogfQpAQCAtNTc3LDExICs1NzQsMTEgQEAgc3RhdGljIGlubGluZSBpbnQgdXNlX2NwdV9y
ZWxvYyhjb25zdCBzdHJ1Y3QgcmVsb2NfY2FjaGUgKmNhY2hlLAogCQlvYmotPmNhY2hlX2xldmVs
ICE9IEk5MTVfQ0FDSEVfTk9ORSk7CiB9CiAKLXN0YXRpYyBpbnQgZWJfcmVzZXJ2ZV92bWEoY29u
c3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCi0JCQkgIHN0cnVjdCBpOTE1X3ZtYSAqdm1h
KQorc3RhdGljIGludCBlYl9yZXNlcnZlX3ZtYShjb25zdCBzdHJ1Y3QgaTkxNV9leGVjYnVmZmVy
ICplYiwgc3RydWN0IGViX3ZtYSAqZXYpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9leGVjX29i
amVjdDIgKmVudHJ5ID0gZXhlY19lbnRyeShlYiwgdm1hKTsKLQl1bnNpZ25lZCBpbnQgZXhlY19m
bGFncyA9ICp2bWEtPmV4ZWNfZmxhZ3M7CisJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjX29iamVj
dDIgKmVudHJ5ID0gZXYtPmV4ZWM7CisJdW5zaWduZWQgaW50IGV4ZWNfZmxhZ3MgPSBldi0+Zmxh
Z3M7CisJc3RydWN0IGk5MTVfdm1hICp2bWEgPSBldi0+dm1hOwogCXU2NCBwaW5fZmxhZ3M7CiAJ
aW50IGVycjsKIApAQCAtNjI4LDggKzYyNSw4IEBAIHN0YXRpYyBpbnQgZWJfcmVzZXJ2ZV92bWEo
Y29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCQlleGVjX2ZsYWdzIHw9IF9fRVhF
Q19PQkpFQ1RfSEFTX0ZFTkNFOwogCX0KIAotCSp2bWEtPmV4ZWNfZmxhZ3MgPSBleGVjX2ZsYWdz
IHwgX19FWEVDX09CSkVDVF9IQVNfUElOOwotCUdFTV9CVUdfT04oZWJfdm1hX21pc3BsYWNlZChl
bnRyeSwgdm1hLCBleGVjX2ZsYWdzKSk7CisJZXYtPmZsYWdzID0gZXhlY19mbGFncyB8IF9fRVhF
Q19PQkpFQ1RfSEFTX1BJTjsKKwlHRU1fQlVHX09OKGViX3ZtYV9taXNwbGFjZWQoZW50cnksIHZt
YSwgZXYtPmZsYWdzKSk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTYzOCw3ICs2MzUsNyBAQCBzdGF0
aWMgaW50IGViX3Jlc2VydmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiB7CiAJY29uc3Qg
dW5zaWduZWQgaW50IGNvdW50ID0gZWItPmJ1ZmZlcl9jb3VudDsKIAlzdHJ1Y3QgbGlzdF9oZWFk
IGxhc3Q7Ci0Jc3RydWN0IGk5MTVfdm1hICp2bWE7CisJc3RydWN0IGViX3ZtYSAqZXY7CiAJdW5z
aWduZWQgaW50IGksIHBhc3M7CiAJaW50IGVycjsKIApAQCAtNjU5LDggKzY1Niw4IEBAIHN0YXRp
YyBpbnQgZWJfcmVzZXJ2ZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAlwYXNzID0gMDsK
IAllcnIgPSAwOwogCWRvIHsKLQkJbGlzdF9mb3JfZWFjaF9lbnRyeSh2bWEsICZlYi0+dW5ib3Vu
ZCwgZXhlY19saW5rKSB7Ci0JCQllcnIgPSBlYl9yZXNlcnZlX3ZtYShlYiwgdm1hKTsKKwkJbGlz
dF9mb3JfZWFjaF9lbnRyeShldiwgJmViLT51bmJvdW5kLCBiaW5kX2xpbmspIHsKKwkJCWVyciA9
IGViX3Jlc2VydmVfdm1hKGViLCBldik7CiAJCQlpZiAoZXJyKQogCQkJCWJyZWFrOwogCQl9CkBA
IC02NzEsMjYgKzY2OCwyNiBAQCBzdGF0aWMgaW50IGViX3Jlc2VydmUoc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIpCiAJCUlOSVRfTElTVF9IRUFEKCZlYi0+dW5ib3VuZCk7CiAJCUlOSVRfTElT
VF9IRUFEKCZsYXN0KTsKIAkJZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKLQkJCXVuc2ln
bmVkIGludCBmbGFncyA9IGViLT5mbGFnc1tpXTsKLQkJCXN0cnVjdCBpOTE1X3ZtYSAqdm1hID0g
ZWItPnZtYVtpXTsKKwkJCXN0cnVjdCBlYl92bWEgKmV2ID0gJmViLT52bWFbaV07CisJCQl1bnNp
Z25lZCBpbnQgZmxhZ3MgPSBldi0+ZmxhZ3M7CiAKIAkJCWlmIChmbGFncyAmIEVYRUNfT0JKRUNU
X1BJTk5FRCAmJgogCQkJICAgIGZsYWdzICYgX19FWEVDX09CSkVDVF9IQVNfUElOKQogCQkJCWNv
bnRpbnVlOwogCi0JCQllYl91bnJlc2VydmVfdm1hKHZtYSwgJmViLT5mbGFnc1tpXSk7CisJCQll
Yl91bnJlc2VydmVfdm1hKGV2KTsKIAogCQkJaWYgKGZsYWdzICYgRVhFQ19PQkpFQ1RfUElOTkVE
KQogCQkJCS8qIFBpbm5lZCBtdXN0IGhhdmUgdGhlaXIgc2xvdCAqLwotCQkJCWxpc3RfYWRkKCZ2
bWEtPmV4ZWNfbGluaywgJmViLT51bmJvdW5kKTsKKwkJCQlsaXN0X2FkZCgmZXYtPmJpbmRfbGlu
aywgJmViLT51bmJvdW5kKTsKIAkJCWVsc2UgaWYgKGZsYWdzICYgX19FWEVDX09CSkVDVF9ORUVE
U19NQVApCiAJCQkJLyogTWFwIHJlcXVpcmUgdGhlIGxvd2VzdCAyNTZNaUIgKGFwZXJ0dXJlKSAq
LwotCQkJCWxpc3RfYWRkX3RhaWwoJnZtYS0+ZXhlY19saW5rLCAmZWItPnVuYm91bmQpOworCQkJ
CWxpc3RfYWRkX3RhaWwoJmV2LT5iaW5kX2xpbmssICZlYi0+dW5ib3VuZCk7CiAJCQllbHNlIGlm
ICghKGZsYWdzICYgRVhFQ19PQkpFQ1RfU1VQUE9SVFNfNDhCX0FERFJFU1MpKQogCQkJCS8qIFBy
aW9yaXRpc2UgNEdpQiByZWdpb24gZm9yIHJlc3RyaWN0ZWQgYm8gKi8KLQkJCQlsaXN0X2FkZCgm
dm1hLT5leGVjX2xpbmssICZsYXN0KTsKKwkJCQlsaXN0X2FkZCgmZXYtPmJpbmRfbGluaywgJmxh
c3QpOwogCQkJZWxzZQotCQkJCWxpc3RfYWRkX3RhaWwoJnZtYS0+ZXhlY19saW5rLCAmbGFzdCk7
CisJCQkJbGlzdF9hZGRfdGFpbCgmZXYtPmJpbmRfbGluaywgJmxhc3QpOwogCQl9CiAJCWxpc3Rf
c3BsaWNlX3RhaWwoJmxhc3QsICZlYi0+dW5ib3VuZCk7CiAKQEAgLTgwOSwxMCArODA2LDggQEAg
c3RhdGljIGludCBlYl9sb29rdXBfdm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAkJ
aWYgKHVubGlrZWx5KGVycikpCiAJCQlnb3RvIGVycl92bWE7CiAKLQkJR0VNX0JVR19PTih2bWEg
IT0gZWItPnZtYVtpXSk7Ci0JCUdFTV9CVUdfT04odm1hLT5leGVjX2ZsYWdzICE9ICZlYi0+Zmxh
Z3NbaV0pOwogCQlHRU1fQlVHX09OKGRybV9tbV9ub2RlX2FsbG9jYXRlZCgmdm1hLT5ub2RlKSAm
JgotCQkJICAgZWJfdm1hX21pc3BsYWNlZCgmZWItPmV4ZWNbaV0sIHZtYSwgZWItPmZsYWdzW2ld
KSk7CisJCQkgICBlYl92bWFfbWlzcGxhY2VkKCZlYi0+ZXhlY1tpXSwgdm1hLCBlYi0+dm1hW2ld
LmZsYWdzKSk7CiAJfQogCiAJbXV0ZXhfdW5sb2NrKCZlYi0+Z2VtX2NvbnRleHQtPm11dGV4KTsK
QEAgLTgyMywyNyArODE4LDI3IEBAIHN0YXRpYyBpbnQgZWJfbG9va3VwX3ZtYXMoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIpCiBlcnJfb2JqOgogCWk5MTVfZ2VtX29iamVjdF9wdXQob2JqKTsK
IGVycl92bWE6Ci0JZWItPnZtYVtpXSA9IE5VTEw7CisJZWItPnZtYVtpXS52bWEgPSBOVUxMOwog
ZXJyX2N0eDoKIAltdXRleF91bmxvY2soJmViLT5nZW1fY29udGV4dC0+bXV0ZXgpOwogCXJldHVy
biBlcnI7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV92bWEgKgorc3RhdGljIHN0cnVjdCBlYl92
bWEgKgogZWJfZ2V0X3ZtYShjb25zdCBzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgdW5zaWdu
ZWQgbG9uZyBoYW5kbGUpCiB7CiAJaWYgKGViLT5sdXRfc2l6ZSA8IDApIHsKIAkJaWYgKGhhbmRs
ZSA+PSAtZWItPmx1dF9zaXplKQogCQkJcmV0dXJuIE5VTEw7Ci0JCXJldHVybiBlYi0+dm1hW2hh
bmRsZV07CisJCXJldHVybiAmZWItPnZtYVtoYW5kbGVdOwogCX0gZWxzZSB7CiAJCXN0cnVjdCBo
bGlzdF9oZWFkICpoZWFkOwotCQlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKKwkJc3RydWN0IGViX3Zt
YSAqZXY7CiAKIAkJaGVhZCA9ICZlYi0+YnVja2V0c1toYXNoXzMyKGhhbmRsZSwgZWItPmx1dF9z
aXplKV07Ci0JCWhsaXN0X2Zvcl9lYWNoX2VudHJ5KHZtYSwgaGVhZCwgZXhlY19ub2RlKSB7Ci0J
CQlpZiAodm1hLT5leGVjX2hhbmRsZSA9PSBoYW5kbGUpCi0JCQkJcmV0dXJuIHZtYTsKKwkJaGxp
c3RfZm9yX2VhY2hfZW50cnkoZXYsIGhlYWQsIG5vZGUpIHsKKwkJCWlmIChldi0+aGFuZGxlID09
IGhhbmRsZSkKKwkJCQlyZXR1cm4gZXY7CiAJCX0KIAkJcmV0dXJuIE5VTEw7CiAJfQpAQCAtODU1
LDIwICs4NTAsMTggQEAgc3RhdGljIHZvaWQgZWJfcmVsZWFzZV92bWFzKGNvbnN0IHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViKQogCXVuc2lnbmVkIGludCBpOwogCiAJZm9yIChpID0gMDsgaSA8
IGNvdW50OyBpKyspIHsKLQkJc3RydWN0IGk5MTVfdm1hICp2bWEgPSBlYi0+dm1hW2ldOwotCQl1
bnNpZ25lZCBpbnQgZmxhZ3MgPSBlYi0+ZmxhZ3NbaV07CisJCXN0cnVjdCBlYl92bWEgKmV2ID0g
JmViLT52bWFbaV07CisJCXN0cnVjdCBpOTE1X3ZtYSAqdm1hID0gZXYtPnZtYTsKIAogCQlpZiAo
IXZtYSkKIAkJCWJyZWFrOwogCi0JCUdFTV9CVUdfT04odm1hLT5leGVjX2ZsYWdzICE9ICZlYi0+
ZmxhZ3NbaV0pOwotCQl2bWEtPmV4ZWNfZmxhZ3MgPSBOVUxMOwotCQllYi0+dm1hW2ldID0gTlVM
TDsKKwkJZWItPnZtYVtpXS52bWEgPSBOVUxMOwogCi0JCWlmIChmbGFncyAmIF9fRVhFQ19PQkpF
Q1RfSEFTX1BJTikKLQkJCV9fZWJfdW5yZXNlcnZlX3ZtYSh2bWEsIGZsYWdzKTsKKwkJaWYgKGV2
LT5mbGFncyAmIF9fRVhFQ19PQkpFQ1RfSEFTX1BJTikKKwkJCV9fZWJfdW5yZXNlcnZlX3ZtYSh2
bWEsIGV2LT5mbGFncyk7CiAKLQkJaWYgKGZsYWdzICYgX19FWEVDX09CSkVDVF9IQVNfUkVGKQor
CQlpZiAoZXYtPmZsYWdzICYgX19FWEVDX09CSkVDVF9IQVNfUkVGKQogCQkJaTkxNV92bWFfcHV0
KHZtYSk7CiAJfQogfQpAQCAtMTM1MSwxMCArMTM0NCwxMCBAQCByZWxvY2F0ZV9lbnRyeShzdHJ1
Y3QgaTkxNV92bWEgKnZtYSwKIAogc3RhdGljIHU2NAogZWJfcmVsb2NhdGVfZW50cnkoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsCi0JCSAgc3RydWN0IGk5MTVfdm1hICp2bWEsCisJCSAgc3Ry
dWN0IGViX3ZtYSAqZXYsCiAJCSAgY29uc3Qgc3RydWN0IGRybV9pOTE1X2dlbV9yZWxvY2F0aW9u
X2VudHJ5ICpyZWxvYykKIHsKLQlzdHJ1Y3QgaTkxNV92bWEgKnRhcmdldDsKKwlzdHJ1Y3QgZWJf
dm1hICp0YXJnZXQ7CiAJaW50IGVycjsKIAogCS8qIHdlJ3ZlIGFscmVhZHkgaG9sZCBhIHJlZmVy
ZW5jZSB0byBhbGwgdmFsaWQgb2JqZWN0cyAqLwpAQCAtMTM4Niw3ICsxMzc5LDcgQEAgZWJfcmVs
b2NhdGVfZW50cnkoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJfQogCiAJaWYgKHJlbG9j
LT53cml0ZV9kb21haW4pIHsKLQkJKnRhcmdldC0+ZXhlY19mbGFncyB8PSBFWEVDX09CSkVDVF9X
UklURTsKKwkJdGFyZ2V0LT5mbGFncyB8PSBFWEVDX09CSkVDVF9XUklURTsKIAogCQkvKgogCQkg
KiBTYW5keWJyaWRnZSBQUEdUVCBlcnJhdGE6IFdlIG5lZWQgYSBnbG9iYWwgZ3R0IG1hcHBpbmcK
QEAgLTEzOTYsNyArMTM4OSw4IEBAIGViX3JlbG9jYXRlX2VudHJ5KHN0cnVjdCBpOTE1X2V4ZWNi
dWZmZXIgKmViLAogCQkgKi8KIAkJaWYgKHJlbG9jLT53cml0ZV9kb21haW4gPT0gSTkxNV9HRU1f
RE9NQUlOX0lOU1RSVUNUSU9OICYmCiAJCSAgICBJU19HRU4oZWItPmk5MTUsIDYpKSB7Ci0JCQll
cnIgPSBpOTE1X3ZtYV9iaW5kKHRhcmdldCwgdGFyZ2V0LT5vYmotPmNhY2hlX2xldmVsLAorCQkJ
ZXJyID0gaTkxNV92bWFfYmluZCh0YXJnZXQtPnZtYSwKKwkJCQkJICAgIHRhcmdldC0+dm1hLT5v
YmotPmNhY2hlX2xldmVsLAogCQkJCQkgICAgUElOX0dMT0JBTCwgTlVMTCk7CiAJCQlpZiAoV0FS
Tl9PTkNFKGVyciwKIAkJCQkgICAgICAiVW5leHBlY3RlZCBmYWlsdXJlIHRvIGJpbmQgdGFyZ2V0
IFZNQSEiKSkKQEAgLTE0MDksMTcgKzE0MDMsMTcgQEAgZWJfcmVsb2NhdGVfZW50cnkoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJICogbW9yZSB3b3JrIG5lZWRzIHRvIGJlIGRvbmUuCiAJ
ICovCiAJaWYgKCFEQkdfRk9SQ0VfUkVMT0MgJiYKLQkgICAgZ2VuOF9jYW5vbmljYWxfYWRkcih0
YXJnZXQtPm5vZGUuc3RhcnQpID09IHJlbG9jLT5wcmVzdW1lZF9vZmZzZXQpCisJICAgIGdlbjhf
Y2Fub25pY2FsX2FkZHIodGFyZ2V0LT52bWEtPm5vZGUuc3RhcnQpID09IHJlbG9jLT5wcmVzdW1l
ZF9vZmZzZXQpCiAJCXJldHVybiAwOwogCiAJLyogQ2hlY2sgdGhhdCB0aGUgcmVsb2NhdGlvbiBh
ZGRyZXNzIGlzIHZhbGlkLi4uICovCiAJaWYgKHVubGlrZWx5KHJlbG9jLT5vZmZzZXQgPgotCQkg
ICAgIHZtYS0+c2l6ZSAtIChlYi0+cmVsb2NfY2FjaGUudXNlXzY0Yml0X3JlbG9jID8gOCA6IDQp
KSkgeworCQkgICAgIGV2LT52bWEtPnNpemUgLSAoZWItPnJlbG9jX2NhY2hlLnVzZV82NGJpdF9y
ZWxvYyA/IDggOiA0KSkpIHsKIAkJRFJNX0RFQlVHKCJSZWxvY2F0aW9uIGJleW9uZCBvYmplY3Qg
Ym91bmRzOiAiCiAJCQkgICJ0YXJnZXQgJWQgb2Zmc2V0ICVkIHNpemUgJWQuXG4iLAogCQkJICBy
ZWxvYy0+dGFyZ2V0X2hhbmRsZSwKIAkJCSAgKGludClyZWxvYy0+b2Zmc2V0LAotCQkJICAoaW50
KXZtYS0+c2l6ZSk7CisJCQkgIChpbnQpZXYtPnZtYS0+c2l6ZSk7CiAJCXJldHVybiAtRUlOVkFM
OwogCX0KIAlpZiAodW5saWtlbHkocmVsb2MtPm9mZnNldCAmIDMpKSB7CkBAIC0xNDM4LDE4ICsx
NDMyLDE4IEBAIGViX3JlbG9jYXRlX2VudHJ5KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAog
CSAqIGRvIHJlbG9jYXRpb25zIHdlIGFyZSBhbHJlYWR5IHN0YWxsaW5nLCBkaXNhYmxlIHRoZSB1
c2VyJ3Mgb3B0CiAJICogb3V0IG9mIG91ciBzeW5jaHJvbmlzYXRpb24uCiAJICovCi0JKnZtYS0+
ZXhlY19mbGFncyAmPSB+RVhFQ19PQkpFQ1RfQVNZTkM7CisJZXYtPmZsYWdzICY9IH5FWEVDX09C
SkVDVF9BU1lOQzsKIAogCS8qIGFuZCB1cGRhdGUgdGhlIHVzZXIncyByZWxvY2F0aW9uIGVudHJ5
ICovCi0JcmV0dXJuIHJlbG9jYXRlX2VudHJ5KHZtYSwgcmVsb2MsIGViLCB0YXJnZXQpOworCXJl
dHVybiByZWxvY2F0ZV9lbnRyeShldi0+dm1hLCByZWxvYywgZWIsIHRhcmdldC0+dm1hKTsKIH0K
IAotc3RhdGljIGludCBlYl9yZWxvY2F0ZV92bWEoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIs
IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQorc3RhdGljIGludCBlYl9yZWxvY2F0ZV92bWEoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBlYl92bWEgKmV2KQogewogI2RlZmluZSBOX1JF
TE9DKHgpICgoeCkgLyBzaXplb2Yoc3RydWN0IGRybV9pOTE1X2dlbV9yZWxvY2F0aW9uX2VudHJ5
KSkKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX3JlbG9jYXRpb25fZW50cnkgc3RhY2tbTl9SRUxPQyg1
MTIpXTsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX3JlbG9jYXRpb25fZW50cnkgX191c2VyICp1cmVs
b2NzOwotCWNvbnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY19vYmplY3QyICplbnRyeSA9IGV4
ZWNfZW50cnkoZWIsIHZtYSk7CisJY29uc3Qgc3RydWN0IGRybV9pOTE1X2dlbV9leGVjX29iamVj
dDIgKmVudHJ5ID0gZXYtPmV4ZWM7CiAJdW5zaWduZWQgaW50IHJlbWFpbjsKIAogCXVyZWxvY3Mg
PSB1NjRfdG9fdXNlcl9wdHIoZW50cnktPnJlbG9jc19wdHIpOwpAQCAtMTQ4OSw3ICsxNDgzLDcg
QEAgc3RhdGljIGludCBlYl9yZWxvY2F0ZV92bWEoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIs
IHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCiAJCXJlbWFpbiAtPSBjb3VudDsKIAkJZG8gewotCQkJ
dTY0IG9mZnNldCA9IGViX3JlbG9jYXRlX2VudHJ5KGViLCB2bWEsIHIpOworCQkJdTY0IG9mZnNl
dCA9IGViX3JlbG9jYXRlX2VudHJ5KGViLCBldiwgcik7CiAKIAkJCWlmIChsaWtlbHkob2Zmc2V0
ID09IDApKSB7CiAJCQl9IGVsc2UgaWYgKChzNjQpb2Zmc2V0IDwgMCkgewpAQCAtMTUzMiwxNiAr
MTUyNiwxNiBAQCBzdGF0aWMgaW50IGViX3JlbG9jYXRlX3ZtYShzdHJ1Y3QgaTkxNV9leGVjYnVm
ZmVyICplYiwgc3RydWN0IGk5MTVfdm1hICp2bWEpCiB9CiAKIHN0YXRpYyBpbnQKLWViX3JlbG9j
YXRlX3ZtYV9zbG93KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaTkxNV92bWEg
KnZtYSkKK2ViX3JlbG9jYXRlX3ZtYV9zbG93KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBz
dHJ1Y3QgZWJfdm1hICpldikKIHsKLQljb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNfb2Jq
ZWN0MiAqZW50cnkgPSBleGVjX2VudHJ5KGViLCB2bWEpOworCWNvbnN0IHN0cnVjdCBkcm1faTkx
NV9nZW1fZXhlY19vYmplY3QyICplbnRyeSA9IGV2LT5leGVjOwogCXN0cnVjdCBkcm1faTkxNV9n
ZW1fcmVsb2NhdGlvbl9lbnRyeSAqcmVsb2NzID0KIAkJdTY0X3RvX3B0cih0eXBlb2YoKnJlbG9j
cyksIGVudHJ5LT5yZWxvY3NfcHRyKTsKIAl1bnNpZ25lZCBpbnQgaTsKIAlpbnQgZXJyOwogCiAJ
Zm9yIChpID0gMDsgaSA8IGVudHJ5LT5yZWxvY2F0aW9uX2NvdW50OyBpKyspIHsKLQkJdTY0IG9m
ZnNldCA9IGViX3JlbG9jYXRlX2VudHJ5KGViLCB2bWEsICZyZWxvY3NbaV0pOworCQl1NjQgb2Zm
c2V0ID0gZWJfcmVsb2NhdGVfZW50cnkoZWIsIGV2LCAmcmVsb2NzW2ldKTsKIAogCQlpZiAoKHM2
NClvZmZzZXQgPCAwKSB7CiAJCQllcnIgPSAoaW50KW9mZnNldDsKQEAgLTE2ODUsNyArMTY3OSw3
IEBAIHN0YXRpYyBub2lubGluZSBpbnQgZWJfcmVsb2NhdGVfc2xvdyhzdHJ1Y3QgaTkxNV9leGVj
YnVmZmVyICplYikKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gJmViLT5pOTE1LT5kcm07
CiAJYm9vbCBoYXZlX2NvcHkgPSBmYWxzZTsKLQlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKKwlzdHJ1
Y3QgZWJfdm1hICpldjsKIAlpbnQgZXJyID0gMDsKIAogcmVwZWF0OgpAQCAtMTc0MSwxNSArMTcz
NSwxNSBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IGViX3JlbG9jYXRlX3Nsb3coc3RydWN0IGk5MTVf
ZXhlY2J1ZmZlciAqZWIpCiAKIAlHRU1fQlVHX09OKCFlYi0+YmF0Y2gpOwogCi0JbGlzdF9mb3Jf
ZWFjaF9lbnRyeSh2bWEsICZlYi0+cmVsb2NzLCByZWxvY19saW5rKSB7CisJbGlzdF9mb3JfZWFj
aF9lbnRyeShldiwgJmViLT5yZWxvY3MsIHJlbG9jX2xpbmspIHsKIAkJaWYgKCFoYXZlX2NvcHkp
IHsKIAkJCXBhZ2VmYXVsdF9kaXNhYmxlKCk7Ci0JCQllcnIgPSBlYl9yZWxvY2F0ZV92bWEoZWIs
IHZtYSk7CisJCQllcnIgPSBlYl9yZWxvY2F0ZV92bWEoZWIsIGV2KTsKIAkJCXBhZ2VmYXVsdF9l
bmFibGUoKTsKIAkJCWlmIChlcnIpCiAJCQkJZ290byByZXBlYXQ7CiAJCX0gZWxzZSB7Ci0JCQll
cnIgPSBlYl9yZWxvY2F0ZV92bWFfc2xvdyhlYiwgdm1hKTsKKwkJCWVyciA9IGViX3JlbG9jYXRl
X3ZtYV9zbG93KGViLCBldik7CiAJCQlpZiAoZXJyKQogCQkJCWdvdG8gZXJyOwogCQl9CkBAIC0x
Nzk0LDEwICsxNzg4LDEwIEBAIHN0YXRpYyBpbnQgZWJfcmVsb2NhdGUoc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIpCiAKIAkvKiBUaGUgb2JqZWN0cyBhcmUgaW4gdGhlaXIgZmluYWwgbG9jYXRp
b25zLCBhcHBseSB0aGUgcmVsb2NhdGlvbnMuICovCiAJaWYgKGViLT5hcmdzLT5mbGFncyAmIF9f
RVhFQ19IQVNfUkVMT0MpIHsKLQkJc3RydWN0IGk5MTVfdm1hICp2bWE7CisJCXN0cnVjdCBlYl92
bWEgKmV2OwogCi0JCWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCAmZWItPnJlbG9jcywgcmVsb2Nf
bGluaykgewotCQkJaWYgKGViX3JlbG9jYXRlX3ZtYShlYiwgdm1hKSkKKwkJbGlzdF9mb3JfZWFj
aF9lbnRyeShldiwgJmViLT5yZWxvY3MsIHJlbG9jX2xpbmspIHsKKwkJCWlmIChlYl9yZWxvY2F0
ZV92bWEoZWIsIGV2KSkKIAkJCQlnb3RvIHNsb3c7CiAJCX0KIAl9CkBAIC0xODE4LDM5ICsxODEy
LDM0IEBAIHN0YXRpYyBpbnQgZWJfbW92ZV90b19ncHUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAq
ZWIpCiAJd3dfYWNxdWlyZV9pbml0KCZhY3F1aXJlLCAmcmVzZXJ2YXRpb25fd3dfY2xhc3MpOwog
CiAJZm9yIChpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKLQkJc3RydWN0IGk5MTVfdm1hICp2bWEg
PSBlYi0+dm1hW2ldOworCQlzdHJ1Y3QgZWJfdm1hICpldiA9ICZlYi0+dm1hW2ldOworCQlzdHJ1
Y3QgaTkxNV92bWEgKnZtYSA9IGV2LT52bWE7CiAKIAkJZXJyID0gd3dfbXV0ZXhfbG9ja19pbnRl
cnJ1cHRpYmxlKCZ2bWEtPnJlc3YtPmxvY2ssICZhY3F1aXJlKTsKLQkJaWYgKCFlcnIpCi0JCQlj
b250aW51ZTsKLQotCQlHRU1fQlVHX09OKGVyciA9PSAtRUFMUkVBRFkpOyAvKiBObyBkdXBsaWNh
dGUgdm1hICovCi0KIAkJaWYgKGVyciA9PSAtRURFQURMSykgewogCQkJR0VNX0JVR19PTihpID09
IDApOwogCQkJZG8gewogCQkJCWludCBqID0gaSAtIDE7CiAKLQkJCQl3d19tdXRleF91bmxvY2so
JmViLT52bWFbal0tPnJlc3YtPmxvY2spOworCQkJCXd3X211dGV4X3VubG9jaygmZWItPnZtYVtq
XS52bWEtPnJlc3YtPmxvY2spOwogCi0JCQkJc3dhcChlYi0+ZmxhZ3NbaV0sIGViLT5mbGFnc1tq
XSk7CiAJCQkJc3dhcChlYi0+dm1hW2ldLCAgZWItPnZtYVtqXSk7Ci0JCQkJZWItPnZtYVtpXS0+
ZXhlY19mbGFncyA9ICZlYi0+ZmxhZ3NbaV07CiAJCQl9IHdoaWxlICgtLWkpOwotCQkJR0VNX0JV
R19PTih2bWEgIT0gZWItPnZtYVswXSk7Ci0JCQl2bWEtPmV4ZWNfZmxhZ3MgPSAmZWItPmZsYWdz
WzBdOwogCiAJCQllcnIgPSB3d19tdXRleF9sb2NrX3Nsb3dfaW50ZXJydXB0aWJsZSgmdm1hLT5y
ZXN2LT5sb2NrLAogCQkJCQkJCSAgICAgICAmYWNxdWlyZSk7CiAJCX0KKwkJaWYgKGVyciA9PSAt
RUFMUkVBRFkpCisJCQllcnIgPSAwOwogCQlpZiAoZXJyKQogCQkJYnJlYWs7CiAJfQogCXd3X2Fj
cXVpcmVfZG9uZSgmYWNxdWlyZSk7CiAKIAl3aGlsZSAoaS0tKSB7Ci0JCXVuc2lnbmVkIGludCBm
bGFncyA9IGViLT5mbGFnc1tpXTsKLQkJc3RydWN0IGk5MTVfdm1hICp2bWEgPSBlYi0+dm1hW2ld
OworCQlzdHJ1Y3QgZWJfdm1hICpldiA9ICZlYi0+dm1hW2ldOworCQlzdHJ1Y3QgaTkxNV92bWEg
KnZtYSA9IGV2LT52bWE7CisJCXVuc2lnbmVkIGludCBmbGFncyA9IGV2LT5mbGFnczsKIAkJc3Ry
dWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiA9IHZtYS0+b2JqOwogCiAJCWFzc2VydF92bWFf
aGVsZCh2bWEpOwpAQCAtMTg5NCwxMCArMTg4MywxMCBAQCBzdGF0aWMgaW50IGViX21vdmVfdG9f
Z3B1KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQlpOTE1X3ZtYV91bmxvY2sodm1hKTsK
IAogCQlfX2ViX3VucmVzZXJ2ZV92bWEodm1hLCBmbGFncyk7Ci0JCXZtYS0+ZXhlY19mbGFncyA9
IE5VTEw7Ci0KIAkJaWYgKHVubGlrZWx5KGZsYWdzICYgX19FWEVDX09CSkVDVF9IQVNfUkVGKSkK
IAkJCWk5MTVfdm1hX3B1dCh2bWEpOworCisJCWV2LT52bWEgPSBOVUxMOwogCX0KIAl3d19hY3F1
aXJlX2ZpbmkoJmFjcXVpcmUpOwogCkBAIC0yMDE3LDEzICsyMDA2LDEzIEBAIHN0YXRpYyBzdHJ1
Y3QgaTkxNV92bWEgKmViX3BhcnNlKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCWlmIChJ
U19FUlIodm1hKSkKIAkJZ290byBlcnI7CiAKLQliYXRjaF9zdGFydCA9IGdlbjhfY2Fub25pY2Fs
X2FkZHIoZWItPmJhdGNoLT5ub2RlLnN0YXJ0KSArCisJYmF0Y2hfc3RhcnQgPSBnZW44X2Nhbm9u
aWNhbF9hZGRyKGViLT5iYXRjaC0+dm1hLT5ub2RlLnN0YXJ0KSArCiAJCSAgICAgIGViLT5iYXRj
aF9zdGFydF9vZmZzZXQ7CiAKIAlzaGFkb3dfYmF0Y2hfc3RhcnQgPSBnZW44X2Nhbm9uaWNhbF9h
ZGRyKHZtYS0+bm9kZS5zdGFydCk7CiAKIAllcnIgPSBpbnRlbF9lbmdpbmVfY21kX3BhcnNlcihl
Yi0+ZW5naW5lLAotCQkJCSAgICAgIGViLT5iYXRjaC0+b2JqLAorCQkJCSAgICAgIGViLT5iYXRj
aC0+dm1hLT5vYmosCiAJCQkJICAgICAgYmF0Y2hfc3RhcnQsCiAJCQkJICAgICAgZWItPmJhdGNo
X3N0YXJ0X29mZnNldCwKIAkJCQkgICAgICBlYi0+YmF0Y2hfbGVuLApAQCAtMjA0NywxNCArMjAz
NiwxMiBAQCBzdGF0aWMgc3RydWN0IGk5MTVfdm1hICplYl9wYXJzZShzdHJ1Y3QgaTkxNV9leGVj
YnVmZmVyICplYikKIAkJZ290byBlcnI7CiAJfQogCi0JZWItPnZtYVtlYi0+YnVmZmVyX2NvdW50
XSA9IGk5MTVfdm1hX2dldCh2bWEpOwotCWViLT5mbGFnc1tlYi0+YnVmZmVyX2NvdW50XSA9CisJ
ZWItPnZtYVtlYi0+YnVmZmVyX2NvdW50XS52bWEgPSBpOTE1X3ZtYV9nZXQodm1hKTsKKwllYi0+
dm1hW2ViLT5idWZmZXJfY291bnRdLmZsYWdzID0KIAkJX19FWEVDX09CSkVDVF9IQVNfUElOIHwg
X19FWEVDX09CSkVDVF9IQVNfUkVGOwotCXZtYS0+ZXhlY19mbGFncyA9ICZlYi0+ZmxhZ3NbZWIt
PmJ1ZmZlcl9jb3VudF07Ci0JZWItPmJ1ZmZlcl9jb3VudCsrOworCWViLT5iYXRjaCA9ICZlYi0+
dm1hW2ViLT5idWZmZXJfY291bnQrK107CiAKIAllYi0+YmF0Y2hfc3RhcnRfb2Zmc2V0ID0gMDsK
LQllYi0+YmF0Y2ggPSB2bWE7CiAKIAlpZiAoaTkxNV92bWFfaXNfZ2d0dCh2bWEpKQogCQllYi0+
YmF0Y2hfZmxhZ3MgfD0gSTkxNV9ESVNQQVRDSF9TRUNVUkU7CkBAIC0yMDgxLDcgKzIwNjgsNyBA
QCBhZGRfdG9fY2xpZW50KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgZHJtX2ZpbGUg
KmZpbGUpCiAJc3Bpbl91bmxvY2soJmZpbGVfcHJpdi0+bW0ubG9jayk7CiB9CiAKLXN0YXRpYyBp
bnQgZWJfc3VibWl0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQorc3RhdGljIGludCBlYl9z
dWJtaXQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2gp
CiB7CiAJaW50IGVycjsKIApAQCAtMjEwOCw3ICsyMDk1LDcgQEAgc3RhdGljIGludCBlYl9zdWJt
aXQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJfQogCiAJZXJyID0gZWItPmVuZ2luZS0+
ZW1pdF9iYl9zdGFydChlYi0+cmVxdWVzdCwKLQkJCQkJZWItPmJhdGNoLT5ub2RlLnN0YXJ0ICsK
KwkJCQkJYmF0Y2gtPm5vZGUuc3RhcnQgKwogCQkJCQllYi0+YmF0Y2hfc3RhcnRfb2Zmc2V0LAog
CQkJCQllYi0+YmF0Y2hfbGVuLAogCQkJCQllYi0+YmF0Y2hfZmxhZ3MpOwpAQCAtMjQ3Miw2ICsy
NDU5LDcgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAog
CXN0cnVjdCBkbWFfZmVuY2UgKmluX2ZlbmNlID0gTlVMTDsKIAlzdHJ1Y3QgZG1hX2ZlbmNlICpl
eGVjX2ZlbmNlID0gTlVMTDsKIAlzdHJ1Y3Qgc3luY19maWxlICpvdXRfZmVuY2UgPSBOVUxMOwor
CXN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2g7CiAJaW50IG91dF9mZW5jZV9mZCA9IC0xOwogCWludCBl
cnI7CiAKQEAgLTI0ODYsOSArMjQ3NCw4IEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwKIAkJYXJncy0+ZmxhZ3MgfD0gX19FWEVDX0hBU19SRUxPQzsKIAog
CWViLmV4ZWMgPSBleGVjOwotCWViLnZtYSA9IChzdHJ1Y3QgaTkxNV92bWEgKiopKGV4ZWMgKyBh
cmdzLT5idWZmZXJfY291bnQgKyAxKTsKLQllYi52bWFbMF0gPSBOVUxMOwotCWViLmZsYWdzID0g
KHVuc2lnbmVkIGludCAqKShlYi52bWEgKyBhcmdzLT5idWZmZXJfY291bnQgKyAxKTsKKwllYi52
bWEgPSAoc3RydWN0IGViX3ZtYSAqKShleGVjICsgYXJncy0+YnVmZmVyX2NvdW50ICsgMSk7CisJ
ZWIudm1hWzBdLnZtYSA9IE5VTEw7CiAKIAllYi5pbnZhbGlkX2ZsYWdzID0gX19FWEVDX09CSkVD
VF9VTktOT1dOX0ZMQUdTOwogCXJlbG9jX2NhY2hlX2luaXQoJmViLnJlbG9jX2NhY2hlLCBlYi5p
OTE1KTsKQEAgLTI1NzIsMjAgKzI1NTksMjMgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1
Y3QgZHJtX2RldmljZSAqZGV2LAogCQlnb3RvIGVycl92bWE7CiAJfQogCi0JaWYgKHVubGlrZWx5
KCplYi5iYXRjaC0+ZXhlY19mbGFncyAmIEVYRUNfT0JKRUNUX1dSSVRFKSkgeworCWlmICh1bmxp
a2VseShlYi5iYXRjaC0+ZmxhZ3MgJiBFWEVDX09CSkVDVF9XUklURSkpIHsKIAkJRFJNX0RFQlVH
KCJBdHRlbXB0aW5nIHRvIHVzZSBzZWxmLW1vZGlmeWluZyBiYXRjaCBidWZmZXJcbiIpOwogCQll
cnIgPSAtRUlOVkFMOwogCQlnb3RvIGVycl92bWE7CiAJfQotCWlmIChlYi5iYXRjaF9zdGFydF9v
ZmZzZXQgPiBlYi5iYXRjaC0+c2l6ZSB8fAotCSAgICBlYi5iYXRjaF9sZW4gPiBlYi5iYXRjaC0+
c2l6ZSAtIGViLmJhdGNoX3N0YXJ0X29mZnNldCkgeworCisJYmF0Y2ggPSBlYi5iYXRjaC0+dm1h
OworCWlmIChyYW5nZV9vdmVyZmxvd3NfdCh1NjQsCisJCQkgICAgICBlYi5iYXRjaF9zdGFydF9v
ZmZzZXQsIGViLmJhdGNoX2xlbiwKKwkJCSAgICAgIGJhdGNoLT5zaXplKSkgewogCQlEUk1fREVC
VUcoIkF0dGVtcHRpbmcgdG8gdXNlIG91dC1vZi1ib3VuZHMgYmF0Y2hcbiIpOwogCQllcnIgPSAt
RUlOVkFMOwogCQlnb3RvIGVycl92bWE7CiAJfQogCiAJaWYgKGViLmJhdGNoX2xlbiA9PSAwKQot
CQllYi5iYXRjaF9sZW4gPSBlYi5iYXRjaC0+c2l6ZSAtIGViLmJhdGNoX3N0YXJ0X29mZnNldDsK
KwkJZWIuYmF0Y2hfbGVuID0gZWIuYmF0Y2gtPnZtYS0+c2l6ZSAtIGViLmJhdGNoX3N0YXJ0X29m
ZnNldDsKIAogCWlmIChlYl91c2VfY21kcGFyc2VyKCZlYikpIHsKIAkJc3RydWN0IGk5MTVfdm1h
ICp2bWE7CkBAIC0yNjE0LDEzICsyNjA0LDEzIEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwKIAkJICogICBmaXR0aW5nIGR1ZSB0byBmcmFnbWVudGF0aW9u
LgogCQkgKiBTbyB0aGlzIGlzIGFjdHVhbGx5IHNhZmUuCiAJCSAqLwotCQl2bWEgPSBpOTE1X2dl
bV9vYmplY3RfZ2d0dF9waW4oZWIuYmF0Y2gtPm9iaiwgTlVMTCwgMCwgMCwgMCk7CisJCXZtYSA9
IGk5MTVfZ2VtX29iamVjdF9nZ3R0X3BpbihiYXRjaC0+b2JqLCBOVUxMLCAwLCAwLCAwKTsKIAkJ
aWYgKElTX0VSUih2bWEpKSB7CiAJCQllcnIgPSBQVFJfRVJSKHZtYSk7CiAJCQlnb3RvIGVycl92
bWE7CiAJCX0KIAotCQllYi5iYXRjaCA9IHZtYTsKKwkJYmF0Y2ggPSB2bWE7CiAJfQogCiAJLyog
QWxsIEdQVSByZWxvY2F0aW9uIGJhdGNoZXMgbXVzdCBiZSBzdWJtaXR0ZWQgcHJpb3IgdG8gdGhl
IHVzZXIgcnEgKi8KQEAgLTI2NjcsMTIgKzI2NTcsMTIgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZl
cihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCSAqIGluYWN0aXZlX2xpc3QgYW5kIGxvc2UgaXRz
IGFjdGl2ZSByZWZlcmVuY2UuIEhlbmNlIHdlIGRvIG5vdCBuZWVkCiAJICogdG8gZXhwbGljaXRs
eSBob2xkIGFub3RoZXIgcmVmZXJlbmNlIGhlcmUuCiAJICovCi0JZWIucmVxdWVzdC0+YmF0Y2gg
PSBlYi5iYXRjaDsKLQlpZiAoZWIuYmF0Y2gtPnByaXZhdGUpCi0JCWludGVsX2VuZ2luZV9wb29s
X21hcmtfYWN0aXZlKGViLmJhdGNoLT5wcml2YXRlLCBlYi5yZXF1ZXN0KTsKKwllYi5yZXF1ZXN0
LT5iYXRjaCA9IGJhdGNoOworCWlmIChiYXRjaC0+cHJpdmF0ZSkKKwkJaW50ZWxfZW5naW5lX3Bv
b2xfbWFya19hY3RpdmUoYmF0Y2gtPnByaXZhdGUsIGViLnJlcXVlc3QpOwogCiAJdHJhY2VfaTkx
NV9yZXF1ZXN0X3F1ZXVlKGViLnJlcXVlc3QsIGViLmJhdGNoX2ZsYWdzKTsKLQllcnIgPSBlYl9z
dWJtaXQoJmViKTsKKwllcnIgPSBlYl9zdWJtaXQoJmViLCBiYXRjaCk7CiBlcnJfcmVxdWVzdDoK
IAlhZGRfdG9fY2xpZW50KGViLnJlcXVlc3QsIGZpbGUpOwogCWk5MTVfcmVxdWVzdF9hZGQoZWIu
cmVxdWVzdCk7CkBAIC0yNjkzLDkgKzI2ODMsOSBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAKIGVycl9iYXRjaF91bnBpbjoKIAlpZiAoZWIuYmF0Y2hf
ZmxhZ3MgJiBJOTE1X0RJU1BBVENIX1NFQ1VSRSkKLQkJaTkxNV92bWFfdW5waW4oZWIuYmF0Y2gp
OwotCWlmIChlYi5iYXRjaC0+cHJpdmF0ZSkKLQkJaW50ZWxfZW5naW5lX3Bvb2xfcHV0KGViLmJh
dGNoLT5wcml2YXRlKTsKKwkJaTkxNV92bWFfdW5waW4oYmF0Y2gpOworCWlmIChiYXRjaC0+cHJp
dmF0ZSkKKwkJaW50ZWxfZW5naW5lX3Bvb2xfcHV0KGJhdGNoLT5wcml2YXRlKTsKIGVycl92bWE6
CiAJaWYgKGViLmV4ZWMpCiAJCWViX3JlbGVhc2Vfdm1hcygmZWIpOwpAQCAtMjcxOCw5ICsyNzA4
LDcgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCiBz
dGF0aWMgc2l6ZV90IGViX2VsZW1lbnRfc2l6ZSh2b2lkKQogewotCXJldHVybiAoc2l6ZW9mKHN0
cnVjdCBkcm1faTkxNV9nZW1fZXhlY19vYmplY3QyKSArCi0JCXNpemVvZihzdHJ1Y3QgaTkxNV92
bWEgKikgKwotCQlzaXplb2YodW5zaWduZWQgaW50KSk7CisJcmV0dXJuIHNpemVvZihzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX2V4ZWNfb2JqZWN0MikgKyBzaXplb2Yoc3RydWN0IGViX3ZtYSk7CiB9CiAK
IHN0YXRpYyBib29sIGNoZWNrX2J1ZmZlcl9jb3VudChzaXplX3QgY291bnQpCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV92bWEuaAppbmRleCAwZTBiNjFjMjQ1NTEuLmIzY2Y3NGY5NDA1MCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3ZtYS5oCkBAIC0xNTAsMjEgKzE1MCwxMCBAQCBzdHJ1Y3QgaTkxNV92bWEgewogCXN0
cnVjdCByYl9ub2RlIG9ial9ub2RlOwogCXN0cnVjdCBobGlzdF9ub2RlIG9ial9oYXNoOwogCi0J
LyoqIFRoaXMgdm1hJ3MgcGxhY2UgaW4gdGhlIGV4ZWNidWYgcmVzZXJ2YXRpb24gbGlzdCAqLwot
CXN0cnVjdCBsaXN0X2hlYWQgZXhlY19saW5rOwotCXN0cnVjdCBsaXN0X2hlYWQgcmVsb2NfbGlu
azsKLQogCS8qKiBUaGlzIHZtYSdzIHBsYWNlIGluIHRoZSBldmljdGlvbiBsaXN0ICovCiAJc3Ry
dWN0IGxpc3RfaGVhZCBldmljdF9saW5rOwogCiAJc3RydWN0IGxpc3RfaGVhZCBjbG9zZWRfbGlu
azsKLQotCS8qKgotCSAqIFVzZWQgZm9yIHBlcmZvcm1pbmcgcmVsb2NhdGlvbnMgZHVyaW5nIGV4
ZWNidWZmZXIgaW5zZXJ0aW9uLgotCSAqLwotCXVuc2lnbmVkIGludCAqZXhlY19mbGFnczsKLQlz
dHJ1Y3QgaGxpc3Rfbm9kZSBleGVjX25vZGU7Ci0JdTMyIGV4ZWNfaGFuZGxlOwogfTsKIAogc3Ry
dWN0IGk5MTVfdm1hICoKLS0gCjIuMjQuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vaW50ZWwtZ2Z4

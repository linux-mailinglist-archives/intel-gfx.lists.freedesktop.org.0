Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3D803771A1
	for <lists+intel-gfx@lfdr.de>; Fri, 26 Jul 2019 20:52:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9D9116EE2D;
	Fri, 26 Jul 2019 18:51:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 683046EE2D
 for <intel-gfx@lists.freedesktop.org>; Fri, 26 Jul 2019 18:51:57 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Jul 2019 11:51:57 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,311,1559545200"; d="scan'208";a="161390659"
Received: from dceraolo-linux.fm.intel.com (HELO [10.1.27.145]) ([10.1.27.145])
 by orsmga007.jf.intel.com with ESMTP; 26 Jul 2019 11:51:56 -0700
To: Lucas De Marchi <lucas.demarchi@intel.com>, intel-gfx@lists.freedesktop.org
References: <20190726001208.6971-1-lucas.demarchi@intel.com>
 <20190726001208.6971-4-lucas.demarchi@intel.com>
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Message-ID: <1a96cb55-d745-24f2-9d02-02746061a589@intel.com>
Date: Fri, 26 Jul 2019 11:51:42 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <20190726001208.6971-4-lucas.demarchi@intel.com>
Content-Language: en-US
Subject: Re: [Intel-gfx] [PATCH 3/4] drm/i915/tgl: Tigerlake only has global
 MOCS registers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Michel Thierry <michel.thierry@intel.com>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

CgpPbiA3LzI1LzE5IDU6MTIgUE0sIEx1Y2FzIERlIE1hcmNoaSB3cm90ZToKPiBGcm9tOiBNaWNo
ZWwgVGhpZXJyeSA8bWljaGVsLnRoaWVycnlAaW50ZWwuY29tPgo+IAo+IFVudGlsIEljZWxha2Us
IGVhY2ggZW5naW5lIGhhZCBpdHMgb3duIHNldCBvZiA2NCBNT0NTIHJlZ2lzdGVycy4gSW4KPiBv
cmRlciB0byBzaW1wbGlmeSwgVGlnZXJsYWtlIG1vdmVzIHRvIG9ubHkgNjQgR2xvYmFsIE1PQ1Mg
cmVnaXN0ZXJzLAo+IHdoaWNoIGFyZSBubyBsb25nZXIgcGFydCBvZiB0aGUgZW5naW5lIGNvbnRl
eHQuIFNpbmNlIHRoZXNlIHJlZ2lzdGVycwo+IGFyZSBub3cgZ2xvYmFsLCB0aGV5IGFsc28gb25s
eSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIG9uY2UuCj4gCj4gIEZyb20gR2VuMTIgb253YXJkcywg
TU9DUyBtdXN0IHNwZWNpZnkgdGhlIHRhcmdldCBjYWNoZSAoMzoyKSBhbmQgTFJVCj4gbWFuYWdl
bWVudCAoNTo0KSBmaWVsZHMgYW5kIGNhbm5vdCBiZSBwcm9ncmFtbWVkIHRvICd1c2UgdGhlIHZh
bHVlIGZyb20KPiBQcml2YXRlIFBBVCcsIGJlY2F1c2UgdGhlc2UgZmllbGRzIGFyZSBubyBsb25n
ZXIgcGFydCBvZiB0aGUgUFBBVC4gQWxzbwo+IGNhY2hlYWJpbGl0eSBjb250cm9sICgxOjApIGZp
ZWxkIGhhcyBjaGFuZ2VkLCAwMCBubyBsb25nZXIgbWVhbnMgJ3VzZQo+IGNvbnRyb2xzIGZyb20g
cGFnZSB0YWJsZScsIGJ1dCB1bmNhY2hlYWJsZSAoVUMpLgo+IAo+IHYyOiBNb3ZlIHRoZSBjaGFu
Z2VzIHRvIHRoZSBmYXVsdCByZWdpc3RlcnMgdG8gYSBzZXBhcmF0ZSBjb21taXQgLSB0aGUgb2xk
IG9uZXMKPiAgICAgIG92ZXJsYXAgd2l0aCB0aGUgcmFuZ2UgdXNlZCBieSB0aGUgbmV3IGdsb2Jh
bCBNT0NTIChyZXF1ZXN0ZWQgYnkKPiAgICAgIERhbmllbGUpCj4gCj4gQ2M6IERhbmllbGUgQ2Vy
YW9sbyBTcHVyaW8gPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+Cj4gQ2M6IFRvbWFz
eiBMaXMgPHRvbWFzei5saXNAaW50ZWwuY29tPgo+IFNpZ25lZC1vZmYtYnk6IE1pY2hlbCBUaGll
cnJ5IDxtaWNoZWwudGhpZXJyeUBpbnRlbC5jb20+Cj4gU2lnbmVkLW9mZi1ieTogVHZydGtvIFVy
c3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KPiBTaWduZWQtb2ZmLWJ5OiBMdWNhcyBE
ZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KPiAtLS0KPiAgIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX21vY3MuYyAgICAgfCA0NyArKysrKysrKysrKysrKysrKysrKysr
KysKPiAgIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3MuaCAgICAgfCAgMSArCj4g
ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgIHwgIDIgKwo+ICAgZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICB8ICAxICsKPiAgIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMgICAgfCAgNiArKy0KPiAgIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcGNpLmMgICAgICAgICAgfCAgMyArLQo+ICAgZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9yZWcuaCAgICAgICAgICB8ICAyICsKPiAgIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX2RldmljZV9pbmZvLmggfCAgMSArCj4gICA4IGZpbGVzIGNoYW5nZWQsIDYwIGluc2Vy
dGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCj4gCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX21vY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21v
Y3MuYwo+IGluZGV4IGNhMzcwYzc0ODdmOS4uOTM5OWMwZWMwOGYxIDEwMDY0NAo+IC0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3MuYwo+ICsrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX21vY3MuYwo+IEBAIC0zNzcsNiArMzc3LDEwIEBAIHZvaWQgaW50ZWxf
bW9jc19pbml0X2VuZ2luZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCj4gICAJdW5z
aWduZWQgaW50IGluZGV4Owo+ICAgCXUzMiB1bnVzZWRfdmFsdWU7Cj4gICAKPiArCS8qIFBsYXRm
b3JtcyB3aXRoIGdsb2JhbCBNT0NTIGRvIG5vdCBuZWVkIHBlci1lbmdpbmUgaW5pdGlhbGl6YXRp
b24uICovCj4gKwlpZiAoSEFTX0dMT0JBTF9NT0NTX1JFR0lTVEVSUyhndC0+aTkxNSkpCj4gKwkJ
cmV0dXJuOwo+ICsKPiAgIAkvKiBDYWxsZWQgdW5kZXIgYSBibGFua2V0IGZvcmNld2FrZSAqLwo+
ICAgCWFzc2VydF9mb3JjZXdha2VzX2FjdGl2ZSh1bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwo+ICAg
Cj4gQEAgLTQwMSw2ICs0MDUsNDYgQEAgdm9pZCBpbnRlbF9tb2NzX2luaXRfZW5naW5lKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKPiAgIAkJCQkgICAgICB1bnVzZWRfdmFsdWUpOwo+
ICAgfQo+ICAgCj4gKy8qKgo+ICsgKiBpbnRlbF9tb2NzX2luaXRfZ2xvYmFsKCkgLSBwcm9ncmFt
IHRoZSBnbG9iYWwgbW9jcyByZWdpc3RlcnMKPiArICogZ3Q6ICAgICAgcG9pbnRlciB0byBzdHJ1
Y3QgaW50ZWxfZ3QKPiArICoKPiArICogVGhpcyBmdW5jdGlvbiBpbml0aWFsaXplcyB0aGUgTU9D
UyBnbG9iYWwgcmVnaXN0ZXJzLgo+ICsgKi8KPiArdm9pZCBpbnRlbF9tb2NzX2luaXRfZ2xvYmFs
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCj4gK3sKPiArCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29y
ZSA9IGd0LT51bmNvcmU7Cj4gKwlzdHJ1Y3QgZHJtX2k5MTVfbW9jc190YWJsZSB0YWJsZTsKPiAr
CXVuc2lnbmVkIGludCBpbmRleDsKPiArCj4gKwlpZiAoIUhBU19HTE9CQUxfTU9DU19SRUdJU1RF
UlMoZ3QtPmk5MTUpKQo+ICsJCXJldHVybjsKPiArCj4gKwlpZiAoIWdldF9tb2NzX3NldHRpbmdz
KGd0LCAmdGFibGUpKQo+ICsJCXJldHVybjsKPiArCj4gKwlpZiAoR0VNX0RFQlVHX1dBUk5fT04o
dGFibGUuc2l6ZSA+IHRhYmxlLm5fZW50cmllcykpCj4gKwkJcmV0dXJuOwo+ICsKPiArCWZvciAo
aW5kZXggPSAwOyBpbmRleCA8IHRhYmxlLnNpemU7IGluZGV4KyspCj4gKwkJaW50ZWxfdW5jb3Jl
X3dyaXRlKHVuY29yZSwKPiArCQkJCSAgIEdFTjEyX0dMT0JBTF9NT0NTKGluZGV4KSwKPiArCQkJ
CSAgIHRhYmxlLnRhYmxlW2luZGV4XS5jb250cm9sX3ZhbHVlKTsKPiArCj4gKwkvKgo+ICsJICog
T2ssIG5vdyBzZXQgdGhlIHVudXNlZCBlbnRyaWVzIHRvIHVuY2FjaGVkLiBUaGVzZSBlbnRyaWVz
Cj4gKwkgKiBhcmUgb2ZmaWNpYWxseSB1bmRlZmluZWQgYW5kIG5vIGNvbnRyYWN0IGZvciB0aGUg
Y29udGVudHMKPiArCSAqIGFuZCBzZXR0aW5ncyBpcyBnaXZlbiBmb3IgdGhlc2UgZW50cmllcy4K
PiArCSAqCj4gKwkgKiBFbnRyeSAwIGluIHRoZSB0YWJsZSBpcyB1bmNhY2hlZCAtIHNvIHdlIGFy
ZSBqdXN0IHdyaXRpbmcKPiArCSAqIHRoYXQgdmFsdWUgdG8gYWxsIHRoZSB1c2VkIGVudHJpZXMu
Cj4gKwkgKi8KPiArCWZvciAoOyBpbmRleCA8IHRhYmxlLm5fZW50cmllczsgaW5kZXgrKykKPiAr
CQlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3JlLAo+ICsJCQkJICAgR0VOMTJfR0xPQkFMX01PQ1Mo
aW5kZXgpLAo+ICsJCQkJICAgdGFibGUudGFibGVbMF0uY29udHJvbF92YWx1ZSkgPiArfQoKSWYg
d2UgZW5kIHVwIHNldHRpbmcgZW50cnkgMCB0byB6ZXJvIHRoZW4gdGhlIHZhbHVlIGhlcmUgd2Ug
c2hvdWxkIApwcm9iYWJseSB1c2UgYSBkaWZmZXJlbnQgZW50cnkgKG9yIGp1c3Qgc2F5IHdlJ3Jl
IHNldHRpbmcgZXZlcnl0aGluZyB0byAKdGhlIGludmFsaWQgZW50cnkpLgoKPiArCj4gICAvKioK
PiAgICAqIGVtaXRfbW9jc19jb250cm9sX3RhYmxlKCkgLSBlbWl0IHRoZSBtb2NzIGNvbnRyb2wg
dGFibGUKPiAgICAqIEBycToJUmVxdWVzdCB0byBzZXQgdXAgdGhlIE1PQ1MgdGFibGUgZm9yLgo+
IEBAIC02MDQsNiArNjQ4LDkgQEAgaW50IGludGVsX3Jjc19jb250ZXh0X2luaXRfbW9jcyhzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKPiAgIAlzdHJ1Y3QgZHJtX2k5MTVfbW9jc190YWJsZSB0Owo+
ICAgCWludCByZXQ7Cj4gICAKPiArCWlmIChIQVNfR0xPQkFMX01PQ1NfUkVHSVNURVJTKHJxLT5p
OTE1KSkKPiArCQlyZXR1cm4gMDsKPiArCj4gICAJaWYgKGdldF9tb2NzX3NldHRpbmdzKHJxLT5l
bmdpbmUtPmd0LCAmdCkpIHsKPiAgIAkJLyogUHJvZ3JhbSB0aGUgUkNTIGNvbnRyb2wgcmVnaXN0
ZXJzICovCj4gICAJCXJldCA9IGVtaXRfbW9jc19jb250cm9sX3RhYmxlKHJxLCAmdCk7Cj4gZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3MuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3MuaAo+IGluZGV4IDhiOTgxM2U2ZjlhYy4uYWEzYTJk
ZjA3YzgyIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3Mu
aAo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX21vY3MuaAo+IEBAIC01Niw2
ICs1Niw3IEBAIHN0cnVjdCBpbnRlbF9ndDsKPiAgIAo+ICAgaW50IGludGVsX3Jjc19jb250ZXh0
X2luaXRfbW9jcyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSk7Cj4gICB2b2lkIGludGVsX21vY3Nf
aW5pdF9sM2NjX3RhYmxlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwo+ICt2b2lkIGludGVsX21vY3Nf
aW5pdF9nbG9iYWwoc3RydWN0IGludGVsX2d0ICpndCk7Cj4gICB2b2lkIGludGVsX21vY3NfaW5p
dF9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKPiAgIAo+ICAgI2VuZGlm
Cj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCj4gaW5kZXggNTlkNGExMTQ2MDM5Li5hOTUwOWJkZWIy
ZmEgMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAo+ICsrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKPiBAQCAtMjI4MCw2ICsyMjgwLDggQEAg
SVNfU1VCUExBVEZPUk0oY29uc3Qgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCj4gICAK
PiAgICNkZWZpbmUgSEFTX1BPT0xFRF9FVShkZXZfcHJpdikJKElOVEVMX0lORk8oZGV2X3ByaXYp
LT5oYXNfcG9vbGVkX2V1KQo+ICAgCj4gKyNkZWZpbmUgSEFTX0dMT0JBTF9NT0NTX1JFR0lTVEVS
UyhkZXZfcHJpdikJKElOVEVMX0lORk8oZGV2X3ByaXYpLT5oYXNfZ2xvYmFsX21vY3MpCj4gKwo+
ICAgI2RlZmluZSBJTlRFTF9QQ0hfREVWSUNFX0lEX01BU0sJCTB4ZmY4MAo+ICAgI2RlZmluZSBJ
TlRFTF9QQ0hfSUJYX0RFVklDRV9JRF9UWVBFCQkweDNiMDAKPiAgICNkZWZpbmUgSU5URUxfUENI
X0NQVF9ERVZJQ0VfSURfVFlQRQkJMHgxYzAwCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCj4gaW5k
ZXggMDFkZDBkMWQ5YmY2Li4zMjMyMTg4NTRiOTQgMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9nZW0uYwo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2Vt
LmMKPiBAQCAtMTI1Miw2ICsxMjUyLDcgQEAgaW50IGk5MTVfZ2VtX2luaXRfaHcoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCj4gICAJCWdvdG8gb3V0Owo+ICAgCX0KPiAgIAo+ICsJaW50
ZWxfbW9jc19pbml0X2dsb2JhbChndCk7Cj4gICAJaW50ZWxfbW9jc19pbml0X2wzY2NfdGFibGUo
Z3QpOwo+ICAgCj4gICAJaW50ZWxfZW5naW5lc19zZXRfc2NoZWR1bGVyX2NhcHMoaTkxNSk7Cj4g
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCj4gaW5kZXggNDFhMTRmNDBhOGM3Li4x
NDZiZTFjZTVhYjggMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVf
ZXJyb3IuYwo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKPiBA
QCAtMTUyNCw4ICsxNTI0LDEwIEBAIHN0YXRpYyB2b2lkIGNhcHR1cmVfcmVnX3N0YXRlKHN0cnVj
dCBpOTE1X2dwdV9zdGF0ZSAqZXJyb3IpCj4gICAKPiAgIAlpZiAoSU5URUxfR0VOKGk5MTUpID49
IDYpIHsKPiAgIAkJZXJyb3ItPmRlcnJtciA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgREVS
Uk1SKTsKPiAtCQllcnJvci0+ZXJyb3IgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEVSUk9S
X0dFTjYpOwo+IC0JCWVycm9yLT5kb25lX3JlZyA9IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwg
RE9ORV9SRUcpOwo+ICsJCWlmIChJTlRFTF9HRU4oaTkxNSkgPCAxMikgewo+ICsJCQllcnJvci0+
ZXJyb3IgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEVSUk9SX0dFTjYpOwo+ICsJCQllcnJv
ci0+ZG9uZV9yZWcgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIERPTkVfUkVHKTsKPiArCQl9
CgpBcG9sb2dpZXMgZm9yIG1pc3NpbmcgdGhpcyBpbiB0aGUgcHJldmlvdXMgcmV2aWV3LCBidXQg
dGhpcyBsb29rcyBsaWtlIAppdCBjb3VsZCBiZSBzcGxpdCBvdXQgYXMgd2VsbCwgd2l0aCBhbiBl
eHBsYW5hdGlvbiB0aGF0IHRoZSByZWdpc3RlcnMgCmhhdmUgYmVlbiByZW1vdmVkIG9uIGdlbjEy
LiBXZSBzaG91bGQgcHJvYmFibHkgYWxzbyBzdG9wIHByaW50aW5nIHRoZW0gCmluIHRoZSBlcnJv
ciBzdGF0ZS4KCkRhbmllbGUKCj4gICAJfQo+ICAgCj4gICAJaWYgKElOVEVMX0dFTihpOTE1KSA+
PSA1KQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wY2kuYwo+IGluZGV4IGJkOTIxMWIzZDc2ZS4uYTdlMWNk
ZTRhNmQ5IDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGNpLmMKPiAr
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5jCj4gQEAgLTc4Myw3ICs3ODMsOCBA
QCBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX2RldmljZV9pbmZvIGludGVsX2Vsa2hhcnRsYWtl
X2luZm8gPSB7Cj4gICAJCVtUUkFOU0NPREVSX0RdID0gVFJBTlNDT0RFUl9EX09GRlNFVCwgXAo+
ICAgCQlbVFJBTlNDT0RFUl9EU0lfMF0gPSBUUkFOU0NPREVSX0RTSTBfT0ZGU0VULCBcCj4gICAJ
CVtUUkFOU0NPREVSX0RTSV8xXSA9IFRSQU5TQ09ERVJfRFNJMV9PRkZTRVQsIFwKPiAtCX0KPiAr
CX0sIFwKPiArCS5oYXNfZ2xvYmFsX21vY3MgPSAxCj4gICAKPiAgIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgaW50ZWxfZGV2aWNlX2luZm8gaW50ZWxfdGlnZXJsYWtlXzEyX2luZm8gPSB7Cj4gICAJR0VO
MTJfRkVBVFVSRVMsCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVn
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCj4gaW5kZXggMTllNzJmMGM3M2Q4
Li4zYmI4M2UxNDY2MWMgMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZWcuaAo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKPiBAQCAtMTEyMTAs
NiArMTEyMTAsOCBAQCBlbnVtIHNrbF9wb3dlcl9nYXRlIHsKPiAgICNkZWZpbmUgICBQTUZMVVNI
X0dBUEwzVU5CTE9DSwkJKDEgPDwgMjEpCj4gICAjZGVmaW5lICAgUE1GTFVTSERPTkVfTE5FQkxL
CQkoMSA8PCAyMikKPiAgIAo+ICsjZGVmaW5lIEdFTjEyX0dMT0JBTF9NT0NTKGkpCV9NTUlPKDB4
NDAwMCArIChpKSAqIDQpIC8qIEdsb2JhbCBNT0NTIHJlZ3MgKi8KPiArCj4gICAvKiBnYW10IHJl
Z3MgKi8KPiAgICNkZWZpbmUgR0VOOF9MM19MUkFfMV9HUEdQVSBfTU1JTygweDRkZDQpCj4gICAj
ZGVmaW5lICAgR0VOOF9MM19MUkFfMV9HUEdQVV9ERUZBVUxUX1ZBTFVFX0JEVyAgMHg2N0YxNDI3
RiAvKiBtYXgvbWluIGZvciBMUkExLzIgKi8KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rl
dmljZV9pbmZvLmgKPiBpbmRleCA0ZjU4ZThkNzFiNjcuLjkyZTBjMmUwOTU0YyAxMDA2NDQKPiAt
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5oCj4gKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uaAo+IEBAIC0xMTIsNiArMTEyLDcg
QEAgZW51bSBpbnRlbF9wcGd0dF90eXBlIHsKPiAgIAlmdW5jKGdwdV9yZXNldF9jbG9iYmVyc19k
aXNwbGF5KTsgXAo+ICAgCWZ1bmMoaGFzX3Jlc2V0X2VuZ2luZSk7IFwKPiAgIAlmdW5jKGhhc19m
cGdhX2RiZyk7IFwKPiArCWZ1bmMoaGFzX2dsb2JhbF9tb2NzKTsgXAo+ICAgCWZ1bmMoaGFzX2d0
X3VjKTsgXAo+ICAgCWZ1bmMoaGFzX2wzX2RwZik7IFwKPiAgIAlmdW5jKGhhc19sbGMpOyBcCj4g
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

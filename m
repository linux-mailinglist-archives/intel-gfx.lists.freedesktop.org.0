Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DD7313990B
	for <lists+intel-gfx@lfdr.de>; Sat,  8 Jun 2019 00:39:40 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 05F048919A;
	Fri,  7 Jun 2019 22:39:39 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 43F528919A
 for <intel-gfx@lists.freedesktop.org>; Fri,  7 Jun 2019 22:39:38 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Jun 2019 15:39:37 -0700
X-ExtLoop1: 1
Received: from fmsmsx103.amr.corp.intel.com ([10.18.124.201])
 by orsmga001.jf.intel.com with ESMTP; 07 Jun 2019 15:39:37 -0700
Received: from FMSMSX109.amr.corp.intel.com (10.18.116.9) by
 FMSMSX103.amr.corp.intel.com (10.18.124.201) with Microsoft SMTP Server (TLS)
 id 14.3.408.0; Fri, 7 Jun 2019 15:39:37 -0700
Received: from fmsmsx117.amr.corp.intel.com ([169.254.3.248]) by
 FMSMSX109.amr.corp.intel.com ([169.254.15.58]) with mapi id 14.03.0415.000;
 Fri, 7 Jun 2019 15:39:36 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>,
 "Deak, Imre" <imre.deak@intel.com>
Thread-Topic: [PATCH 13/23] drm/i915: Fix the TypeC port mode sanitization
 during loading/resume
Thread-Index: AQHVGuYg9kP0VuhaMkqLx6k1jSQjsaaRQ0+A
Date: Fri, 7 Jun 2019 22:39:36 +0000
Message-ID: <25b091ad328d00ee23159438fd4c7336f826fc10.camel@intel.com>
References: <20190604145826.16424-1-imre.deak@intel.com>
 <20190604145826.16424-14-imre.deak@intel.com>
In-Reply-To: <20190604145826.16424-14-imre.deak@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.24.8.212]
Content-ID: <3684645F7356C1419BF5DE14CFEF07FA@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 13/23] drm/i915: Fix the TypeC port mode
 sanitization during loading/resume
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Zanoni, Paulo R" <paulo.r.zanoni@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVHVlLCAyMDE5LTA2LTA0IGF0IDE3OjU4ICswMzAwLCBJbXJlIERlYWsgd3JvdGU6DQo+IEZv
ciB1c2luZyB0aGUgY29ycmVjdCBBVVggcG93ZXIgZG9tYWlucyB3ZSBoYXZlIHRvIHNhbml0aXpl
IHRoZSBUeXBlQw0KPiBwb3J0IG1vZGUgZWFybHksIHNvIG1vdmUgdGhhdCBiZWZvcmUgZW5jb2Rl
ciBzYW5pdGl6YXRpb24uIFRvIGRvIHRoaXMNCj4gcHJvcGVybHkgcmVhZCBvdXQgdGhlIGFjdHVh
bCBwb3J0IG1vZGUgaW5zdGVhZCBvZiBqdXN0IHJlbHlpbmcgb24gdGhlDQo+IFZCVCBsZWdhY3kg
cG9ydCBmbGFnICh3aGljaCBjYW4gYmUgaW5jb3JyZWN0KS4NCj4gDQo+IFdlIGFsc28gdmVyaWZ5
IHRoYXQgdGhlIFBIWSBpcyBjb25uZWN0ZWQgYXMgZXhwZWN0ZWQgaWYgdGhlIHBvcnQgaXMNCj4g
YWN0aXZlLiBJbiBjYXNlIHRoZSBwb3J0IGlzIGluYWN0aXZlIHdlIGNvbm5lY3QgdGhlIFBIWSBp
biBjYXNlIG9mIGENCj4gbGVnYWN5IHBvcnQgLSBhcyB3ZSBkaWQgc28gZmFyLiBUaGUgUEhZIHdp
bGwgYmUgY29ubmVjdGVkIGR1cmluZw0KPiBkZXRlY3Rpb24gZm9yIERQLWFsdCBtb2RlIC0gYXMg
aXQgd2FzIGRvbmUgc28gZmFyLiBGb3IgVEJULWFsdCBtb2RlDQo+IG5vdGhpbmcgbmVlZHMgdG8g
YmUgZG9uZSB0byBjb25uZWN0IHRoZSBQSFkuDQo+IA0KPiBDYzogSm9zw6kgUm9iZXJ0byBkZSBT
b3V6YSA8am9zZS5zb3V6YUBpbnRlbC5jb20+DQo+IENjOiBSb2RyaWdvIFZpdmkgPHJvZHJpZ28u
dml2aUBpbnRlbC5jb20+DQo+IENjOiBQYXVsbyBaYW5vbmkgPHBhdWxvLnIuemFub25pQGludGVs
LmNvbT4NCj4gQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5j
b20+DQo+IFNpZ25lZC1vZmYtYnk6IEltcmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4NCj4g
LS0tDQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZGkuYyAgICAgfCAxNiArLS0tLS0N
Cj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rpc3BsYXkuYyB8IDEwICsrKysNCj4gIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RwX21zdC5oICB8ICA4ICsrLQ0KPiAgZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfdGMuYyAgICAgIHwgODMNCj4gKysrKysrKysrKysrKysrKysrKysr
KysrKysrKw0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdGMuaCAgICAgIHwgIDIgKw0K
PiAgNSBmaWxlcyBjaGFuZ2VkLCAxMDMgaW5zZXJ0aW9ucygrKSwgMTYgZGVsZXRpb25zKC0pDQo+
IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGRpLmMNCj4gYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZGkuYw0KPiBpbmRleCBkMjM2ODM5YmVlMTkuLjJi
YzNiNGYyYzlhNSAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGRp
LmMNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGRpLmMNCj4gQEAgLTM5MTgs
MTcgKzM5MTgsNiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kZGlfZW5jb2Rlcl9zdXNwZW5kKHN0cnVj
dA0KPiBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQ0KPiAgCQlpY2xfdGNfcGh5X2Rpc2Nvbm5lY3Qo
ZGlnX3BvcnQpOw0KPiAgfQ0KPiAgDQo+IC1zdGF0aWMgdm9pZCBpbnRlbF9kZGlfZW5jb2Rlcl9y
ZXNldChzdHJ1Y3QgZHJtX2VuY29kZXIgKmRybV9lbmNvZGVyKQ0KPiAtew0KPiAtCXN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0ID0NCj4gZW5jX3RvX2RpZ19wb3J0KGRybV9lbmNv
ZGVyKTsNCj4gLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZHJtX2Vu
Y29kZXItPmRldik7DQo+IC0NCj4gLQlpZiAoaW50ZWxfcG9ydF9pc190YyhpOTE1LCBkaWdfcG9y
dC0+YmFzZS5wb3J0KSkNCj4gLQkJaW50ZWxfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZCgmZGlnX3Bv
cnQtPmJhc2UpOw0KPiAtDQo+IC0JaW50ZWxfZHBfZW5jb2Rlcl9yZXNldChkcm1fZW5jb2Rlcik7
DQo+IC19DQo+IC0NCj4gIHN0YXRpYyB2b2lkIGludGVsX2RkaV9lbmNvZGVyX2Rlc3Ryb3koc3Ry
dWN0IGRybV9lbmNvZGVyICplbmNvZGVyKQ0KPiAgew0KPiAgCXN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0ID0gZW5jX3RvX2RpZ19wb3J0KGVuY29kZXIpOw0KPiBAQCAtMzk0NCw3
ICszOTMzLDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX2VuY29kZXJfZGVzdHJveShzdHJ1Y3QN
Cj4gZHJtX2VuY29kZXIgKmVuY29kZXIpDQo+ICB9DQo+ICANCj4gIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgZHJtX2VuY29kZXJfZnVuY3MgaW50ZWxfZGRpX2Z1bmNzID0gew0KPiAtCS5yZXNldCA9IGlu
dGVsX2RkaV9lbmNvZGVyX3Jlc2V0LA0KPiArCS5yZXNldCA9IGludGVsX2RwX2VuY29kZXJfcmVz
ZXQsDQo+ICAJLmRlc3Ryb3kgPSBpbnRlbF9kZGlfZW5jb2Rlcl9kZXN0cm95LA0KPiAgfTsNCj4g
IA0KPiBAQCAtNDMwOSw5ICs0Mjk4LDYgQEAgdm9pZCBpbnRlbF9kZGlfaW5pdChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZQ0KPiAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3J0KQ0KPiAgDQo+ICAJaW50
ZWxfaW5mb2ZyYW1lX2luaXQoaW50ZWxfZGlnX3BvcnQpOw0KPiAgDQo+IC0JaWYgKGludGVsX3Bv
cnRfaXNfdGMoZGV2X3ByaXYsIHBvcnQpKQ0KPiAtCQlpbnRlbF9kaWdpdGFsX3BvcnRfY29ubmVj
dGVkKGludGVsX2VuY29kZXIpOw0KPiAtDQo+ICAJcmV0dXJuOw0KPiAgDQo+ICBlcnI6DQo+IGRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMNCj4gYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMNCj4gaW5kZXggMGU0MjVhNmVlYmYzLi45
MWQxOGNkMDM3MWMgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rp
c3BsYXkuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMNCj4g
QEAgLTc1LDYgKzc1LDcgQEANCj4gICNpbmNsdWRlICJpbnRlbF9zZHZvLmgiDQo+ICAjaW5jbHVk
ZSAiaW50ZWxfc2lkZWJhbmQuaCINCj4gICNpbmNsdWRlICJpbnRlbF9zcHJpdGUuaCINCj4gKyNp
bmNsdWRlICJpbnRlbF90Yy5oIg0KPiAgI2luY2x1ZGUgImludGVsX3R2LmgiDQo+ICAjaW5jbHVk
ZSAiaW50ZWxfdmRzYy5oIg0KPiAgDQo+IEBAIC0xNjY4Myw2ICsxNjY4NCwxNSBAQCBpbnRlbF9t
b2Rlc2V0X3NldHVwX2h3X3N0YXRlKHN0cnVjdA0KPiBkcm1fZGV2aWNlICpkZXYsDQo+ICAJaW50
ZWxfbW9kZXNldF9yZWFkb3V0X2h3X3N0YXRlKGRldik7DQo+ICANCj4gIAkvKiBIVyBzdGF0ZSBp
cyByZWFkIG91dCwgbm93IHdlIG5lZWQgdG8gc2FuaXRpemUgdGhpcyBtZXNzLiAqLw0KPiArDQo+
ICsJLyogU2FuaXRpemUgdGhlIFR5cGVDIHBvcnQgbW9kZSB1cGZyb250LCBlbmNvZGVycyBkZXBl
bmQgb24NCj4gdGhpcyAqLw0KPiArCWZvcl9lYWNoX2ludGVsX2VuY29kZXIoZGV2LCBlbmNvZGVy
KSB7DQo+ICsJCS8qIFdlIG5lZWQgdG8gc2FuaXRpemUgb25seSB0aGUgTVNUIHByaW1hcnkgcG9y
dC4gKi8NCj4gKwkJaWYgKGVuY29kZXItPnR5cGUgIT0gSU5URUxfT1VUUFVUX0RQX01TVCAmJg0K
PiArCQkgICAgaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCkpDQo+ICsJ
CQlpbnRlbF90Y19wb3J0X3Nhbml0aXplKGVuY190b19kaWdfcG9ydCgmZW5jb2Rlcg0KPiAtPmJh
c2UpKTsNCj4gKwl9DQo+ICsNCj4gIAlnZXRfZW5jb2Rlcl9wb3dlcl9kb21haW5zKGRldl9wcml2
KTsNCj4gIA0KPiAgCWlmIChIQVNfUENIX0lCWChkZXZfcHJpdikpDQo+IGRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcF9tc3QuaA0KPiBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2RwX21zdC5oDQo+IGluZGV4IDE0NzBjNmUwNTE0Yi4uNjc1NGMyMTEyMDVhIDEw
MDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcF9tc3QuaA0KPiArKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kcF9tc3QuaA0KPiBAQCAtNiw5ICs2LDE1IEBA
DQo+ICAjaWZuZGVmIF9fSU5URUxfRFBfTVNUX0hfXw0KPiAgI2RlZmluZSBfX0lOVEVMX0RQX01T
VF9IX18NCj4gIA0KPiAtc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydDsNCj4gKyNpbmNsdWRlICJp
bnRlbF9kcnYuaCINCj4gIA0KPiAgaW50IGludGVsX2RwX21zdF9lbmNvZGVyX2luaXQoc3RydWN0
IGludGVsX2RpZ2l0YWxfcG9ydA0KPiAqaW50ZWxfZGlnX3BvcnQsIGludCBjb25uX2lkKTsNCj4g
IHZvaWQgaW50ZWxfZHBfbXN0X2VuY29kZXJfY2xlYW51cChzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9w
b3J0DQo+ICppbnRlbF9kaWdfcG9ydCk7DQo+ICtzdGF0aWMgaW5saW5lIGludA0KPiAraW50ZWxf
ZHBfbXN0X2VuY29kZXJfYWN0aXZlX2xpbmtzKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQNCj4g
KmludGVsX2RpZ19wb3J0KQ0KPiArew0KPiArCXJldHVybiBpbnRlbF9kaWdfcG9ydC0+ZHAuYWN0
aXZlX21zdF9saW5rczsNCj4gK30NCj4gKw0KPiAgDQo+ICAjZW5kaWYgLyogX19JTlRFTF9EUF9N
U1RfSF9fICovDQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF90Yy5j
DQo+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdGMuYw0KPiBpbmRleCA5ODMyZTJkZGI5
MmUuLjllYmYyNWQ3OTMxYyAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfdGMuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF90Yy5jDQo+IEBAIC0z
LDYgKzMsNyBAQA0KPiAgICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24NCj4g
ICAqLw0KPiAgI2luY2x1ZGUgImludGVsX2Rpc3BsYXkuaCINCj4gKyNpbmNsdWRlICJpbnRlbF9k
cF9tc3QuaCINCj4gICNpbmNsdWRlICJpOTE1X2Rydi5oIg0KPiAgI2luY2x1ZGUgImludGVsX3Rj
LmgiDQo+ICANCj4gQEAgLTE2Nyw2ICsxNjgsMTUgQEAgc3RhdGljIGJvb2wgaWNsX3RjX3BoeV9z
ZXRfc2FmZV9tb2RlKHN0cnVjdA0KPiBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0LA0KPiAg
CXJldHVybiB0cnVlOw0KPiAgfQ0KPiAgDQo+ICtzdGF0aWMgYm9vbCBpY2xfdGNfcGh5X2lzX2lu
X3NhZmVfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0DQo+ICpkaWdfcG9ydCkNCj4gK3sN
Cj4gKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRpZ19wb3J0
LQ0KPiA+YmFzZS5iYXNlLmRldik7DQo+ICsJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRlbF9w
b3J0X3RvX3RjKGRldl9wcml2LCBkaWdfcG9ydC0NCj4gPmJhc2UucG9ydCk7DQo+ICsNCj4gKwly
ZXR1cm4gIShJOTE1X1JFQUQoUE9SVF9UWF9ERkxFWERQQ1NTUykgJg0KPiArCQkgRFBfUEhZX01P
REVfU1RBVFVTX05PVF9TQUZFKHRjX3BvcnQpKTsNCj4gK30NCj4gKw0KPiAgLyoNCj4gICAqIFRo
aXMgZnVuY3Rpb24gaW1wbGVtZW50cyB0aGUgZmlyc3QgcGFydCBvZiB0aGUgQ29ubmVjdCBGbG93
DQo+IGRlc2NyaWJlZCBieSBvdXINCj4gICAqIHNwZWNpZmljYXRpb24sIEdlbjExIFR5cGVDIFBy
b2dyYW1taW5nIGNoYXB0ZXIuIFRoZSByZXN0IG9mIHRoZQ0KPiBmbG93IChyZWFkaW5nDQo+IEBA
IC0yNTAsNiArMjYwLDQ5IEBAIHZvaWQgaWNsX3RjX3BoeV9kaXNjb25uZWN0KHN0cnVjdA0KPiBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQ0KPiAgCX0NCj4gIH0NCj4gIA0KPiArc3RhdGlj
IGJvb2wgaWNsX3RjX3BoeV9pc19jb25uZWN0ZWQoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydA0K
PiAqZGlnX3BvcnQpDQo+ICt7DQo+ICsJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShkaWdfcG9ydC0NCj4gPmJhc2UuYmFzZS5kZXYpOw0KPiArCWVudW0gdGNfcG9y
dCB0Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZGlnX3BvcnQtDQo+ID5iYXNl
LnBvcnQpOw0KPiArDQo+ICsJaWYgKCFpY2xfdGNfcGh5X3N0YXR1c19jb21wbGV0ZShkaWdfcG9y
dCkpIHsNCj4gKwkJRFJNX0RFQlVHX0tNUygiUG9ydCAlczogUEhZIHN0YXR1cyBub3QgY29tcGxl
dGVcbiIsDQo+ICsJCQkgICAgICB0Y19wb3J0X25hbWUoZGV2X3ByaXYsIHRjX3BvcnQpKTsNCj4g
KwkJcmV0dXJuIGRpZ19wb3J0LT50Y19tb2RlID09IFRDX1BPUlRfVEJUX0FMVDsNCj4gKwl9DQo+
ICsNCj4gKwlpZiAoaWNsX3RjX3BoeV9pc19pbl9zYWZlX21vZGUoZGlnX3BvcnQpKSB7DQo+ICsJ
CURSTV9ERUJVR19LTVMoIlBvcnQgJXM6IFBIWSBzdGlsbCBpbiBzYWZlIG1vZGVcbiIsDQo+ICsJ
CQkgICAgICB0Y19wb3J0X25hbWUoZGV2X3ByaXYsIHRjX3BvcnQpKTsNCj4gKw0KPiArCQlyZXR1
cm4gZmFsc2U7DQo+ICsJfQ0KPiArDQo+ICsJcmV0dXJuIGRpZ19wb3J0LT50Y19tb2RlID09IFRD
X1BPUlRfRFBfQUxUIHx8DQo+ICsJICAgICAgIGRpZ19wb3J0LT50Y19tb2RlID09IFRDX1BPUlRf
TEVHQUNZOw0KPiArfQ0KPiArDQo+ICtzdGF0aWMgZW51bSB0Y19wb3J0X21vZGUNCj4gK2ludGVs
X3RjX3BvcnRfZ2V0X2N1cnJlbnRfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCkNCj4gK3sNCj4gKwl1MzIgbGl2ZV9zdGF0dXNfbWFzayA9IHRjX3BvcnRfbGl2ZV9zdGF0
dXNfbWFzayhkaWdfcG9ydCk7DQo+ICsJYm9vbCBpbl9zYWZlX21vZGUgPSBpY2xfdGNfcGh5X2lz
X2luX3NhZmVfbW9kZShkaWdfcG9ydCk7DQo+ICsJZW51bSB0Y19wb3J0X21vZGUgbW9kZTsNCj4g
Kw0KPiArCWlmIChpbl9zYWZlX21vZGUgfHwNCj4gV0FSTl9PTighaWNsX3RjX3BoeV9zdGF0dXNf
Y29tcGxldGUoZGlnX3BvcnQpKSkNCj4gKwkJcmV0dXJuIFRDX1BPUlRfVEJUX0FMVDsNCj4gKw0K
PiArCW1vZGUgPSBkaWdfcG9ydC0+dGNfbGVnYWN5X3BvcnQgPyBUQ19QT1JUX0xFR0FDWSA6DQo+
IFRDX1BPUlRfRFBfQUxUOw0KPiArCWlmIChsaXZlX3N0YXR1c19tYXNrKSB7DQo+ICsJCWVudW0g
dGNfcG9ydF9tb2RlIGxpdmVfbW9kZSA9IGZscyhsaXZlX3N0YXR1c19tYXNrKSAtDQo+IDE7DQo+
ICsNCj4gKwkJaWYgKCFXQVJOX09OKGxpdmVfbW9kZSA9PSBUQ19QT1JUX1RCVF9BTFQpKQ0KPiAr
CQkJbW9kZSA9IGxpdmVfbW9kZTsNCj4gKwl9DQo+ICsNCj4gKwlyZXR1cm4gbW9kZTsNCj4gK30N
Cj4gKw0KPiAgc3RhdGljIGVudW0gdGNfcG9ydF9tb2RlDQo+ICBpbnRlbF90Y19wb3J0X2dldF90
YXJnZXRfbW9kZShzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkNCj4gIHsNCj4g
QEAgLTI3OCw2ICszMzEsMzYgQEAgc3RhdGljIHZvaWQgaW50ZWxfdGNfcG9ydF9yZXNldF9tb2Rl
KHN0cnVjdA0KPiBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQ0KPiAgCQkgICAgICB0Y19w
b3J0X21vZGVfbmFtZShkaWdfcG9ydC0+dGNfbW9kZSkpOw0KPiAgfQ0KPiAgDQo+ICt2b2lkIGlu
dGVsX3RjX3BvcnRfc2FuaXRpemUoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQp
DQo+ICt7DQo+ICsJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShk
aWdfcG9ydC0NCj4gPmJhc2UuYmFzZS5kZXYpOw0KPiArCXN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyID0gJmRpZ19wb3J0LT5iYXNlOw0KPiArCWVudW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50
ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZW5jb2Rlci0NCj4gPnBvcnQpOw0KPiArCWludCBhY3Rp
dmVfbGlua3MgPSAwOw0KPiArDQo+ICsJZGlnX3BvcnQtPnRjX21vZGUgPSBpbnRlbF90Y19wb3J0
X2dldF9jdXJyZW50X21vZGUoZGlnX3BvcnQpOw0KPiArCWlmIChkaWdfcG9ydC0+ZHAuaXNfbXN0
KQ0KPiArCQlhY3RpdmVfbGlua3MgPQ0KPiBpbnRlbF9kcF9tc3RfZW5jb2Rlcl9hY3RpdmVfbGlu
a3MoZGlnX3BvcnQpOw0KPiArCWVsc2UgaWYgKGVuY29kZXItPmJhc2UuY3J0YykNCj4gKwkJYWN0
aXZlX2xpbmtzID0gdG9faW50ZWxfY3J0YyhlbmNvZGVyLT5iYXNlLmNydGMpLQ0KPiA+YWN0aXZl
Ow0KPiArDQo+ICsJaWYgKGFjdGl2ZV9saW5rcykgew0KPiArCQlpZiAoIWljbF90Y19waHlfaXNf
Y29ubmVjdGVkKGRpZ19wb3J0KSkNCj4gKwkJCURSTV9ERUJVR19EUklWRVIoIlBvcnQgJXM6IFBI
WSBkaXNjb25uZWN0ZWQNCj4gd2l0aCAlZCBhY3RpdmUgbGluayhzKVxuIiwNCj4gKwkJCQkJIHRj
X3BvcnRfbmFtZShkZXZfcHJpdiwNCj4gdGNfcG9ydCksDQo+ICsJCQkJCSBhY3RpdmVfbGlua3Mp
Ow0KPiArCQlnb3RvIG91dDsNCg0KQW5kIHRoZW4gcHJvYmUgc2VxdWVuY2VzIHdpbGwgdGFrZSBj
YXJlIG9mIGNhbGwNCmludGVsX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoKSB0byByZXNldCBUQyBz
dGF0ZS4gDQoNCj4gKwl9DQo+ICsNCj4gKwlpZiAoZGlnX3BvcnQtPnRjX2xlZ2FjeV9wb3J0KQ0K
PiArCQlpY2xfdGNfcGh5X2Nvbm5lY3QoZGlnX3BvcnQpOw0KPiArDQo+ICtvdXQ6DQo+ICsJRFJN
X0RFQlVHX0RSSVZFUigiUG9ydCAlczogc2FuaXRpemUgbW9kZSAoJXMpXG4iLA0KPiArCQkJIHRj
X3BvcnRfbmFtZShkZXZfcHJpdiwgdGNfcG9ydCksDQo+ICsJCQkgdGNfcG9ydF9tb2RlX25hbWUo
ZGlnX3BvcnQtPnRjX21vZGUpKTsNCg0KU2hvdWxkIGJlOg0KDQpEUk1fREVCVUdfRFJJVkVSKCkN
Cg0KSSBndWVzcyBJIG1pc3NlZCB0aGlzIG9uIHByZXZpb3VzIHBhdGNoZXMgdG9vLg0KDQoNCldp
dGggdGhhdDoNClJldmlld2VkLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXph
QGludGVsLmNvbT4NCg0KDQo+ICt9DQo+ICsNCj4gIHN0YXRpYyBib29sDQo+ICBpbnRlbF90Y19w
b3J0X25lZWRzX3Jlc2V0KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQ0KPiAg
ew0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdGMuaA0KPiBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3RjLmgNCj4gaW5kZXggZTkzN2Y1MzI2OTU5Li4xMGYw
ZjBkODFlZTQgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3RjLmgN
Cj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfdGMuaA0KPiBAQCAtMTEsNCArMTEs
NiBAQCBib29sIGludGVsX3RjX3BvcnRfY29ubmVjdGVkKHN0cnVjdA0KPiBpbnRlbF9kaWdpdGFs
X3BvcnQgKmRpZ19wb3J0KTsNCj4gIHUzMiBpbnRlbF90Y19wb3J0X2dldF9sYW5lX2luZm8oc3Ry
dWN0IGludGVsX2RpZ2l0YWxfcG9ydA0KPiAqZGlnX3BvcnQpOw0KPiAgaW50IGludGVsX3RjX3Bv
cnRfZmlhX21heF9sYW5lX2NvdW50KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQNCj4gKmRpZ19w
b3J0KTsNCj4gIA0KPiArdm9pZCBpbnRlbF90Y19wb3J0X3Nhbml0aXplKHN0cnVjdCBpbnRlbF9k
aWdpdGFsX3BvcnQgKmRpZ19wb3J0KTsNCj4gKw0KPiAgI2VuZGlmIC8qIF9fSU5URUxfVENfSF9f
ICovDQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRl
bC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

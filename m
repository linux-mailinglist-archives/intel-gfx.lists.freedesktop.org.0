Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E9E92288D0
	for <lists+intel-gfx@lfdr.de>; Thu, 23 May 2019 21:41:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0B56089856;
	Thu, 23 May 2019 19:41:26 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D8C2989856
 for <intel-gfx@lists.freedesktop.org>; Thu, 23 May 2019 19:41:24 +0000 (UTC)
X-Amp-Result: UNSCANNABLE
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 May 2019 12:41:24 -0700
X-ExtLoop1: 1
Received: from ldmartin-desk.jf.intel.com (HELO
 ldmartin-desk.amr.corp.intel.com) ([10.24.10.143])
 by fmsmga001.fm.intel.com with ESMTP; 23 May 2019 12:41:23 -0700
Date: Thu, 23 May 2019 12:41:23 -0700
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: Rodrigo Vivi <rodrigo.vivi@intel.com>
Message-ID: <20190523194123.wi6wijlpvkipagdz@ldmartin-desk.amr.corp.intel.com>
References: <20190523082420.10352-1-lucas.demarchi@intel.com>
 <20190523082420.10352-9-lucas.demarchi@intel.com>
 <20190523185846.GU4441@intel.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20190523185846.GU4441@intel.com>
User-Agent: NeoMutt/20180716
Subject: Re: [Intel-gfx] [PATCH 09/10] drm/i915/dmc: protect against reading
 random memory
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVGh1LCBNYXkgMjMsIDIwMTkgYXQgMTE6NTg6NDZBTSAtMDcwMCwgUm9kcmlnbyBWaXZpIHdy
b3RlOgo+T24gVGh1LCBNYXkgMjMsIDIwMTkgYXQgMDE6MjQ6MTlBTSAtMDcwMCwgTHVjYXMgRGUg
TWFyY2hpIHdyb3RlOgo+PiBXaGlsZSBsb2FkaW5nIHRoZSBETUMgZmlybXdhcmUgd2Ugd2VyZSBk
b3VibGUgY2hlY2tpbmcgdGhlIGhlYWRlcnMgbWFkZQo+PiBzZW5zZSwgYnV0IGluIG5vIHBsYWNl
IHdlIGNoZWNrZWQgdGhhdCB3ZSB3ZXJlIGFjdHVhbGx5IHJlYWRpbmcgbWVtb3J5Cj4+IHdlIHdl
cmUgc3VwcG9zZWQgdG8uIFRoaXMgY291bGQgYmUgd3JvbmcgaW4gY2FzZSB0aGUgZmlybXdhcmUg
ZmlsZSBpcwo+PiB0cnVuY2F0ZWQuCj4+Cj4+IEJlZm9yZSBwYXJzaW5nIGFueSBwYXJ0IG9mIHRo
ZSBmaXJtd2FyZSwgdmFsaWRhdGUgdGhlIGlucHV0IGZpcnN0Lgo+Pgo+PiBTaWduZWQtb2ZmLWJ5
OiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KPgo+SSB3b25kZXIg
aWYgdGhpcyBwYXRjaCBzaG91bGQgYmUgdGhlIGZpcnN0IG9uZSBvbiB0aGUgc2VyaWVzCj5mb3Ig
ZWFzeSBiYWNrcG9ydCBpZiBuZWVkZWQuCgp5ZWFoLCB0b28gYmFkIEkgb25seSBub3RpY2VkIGFm
dGVyIGRvaW5nIHRoZSBmaXJzdCBvbmVzLgpUaGlzIHBhdGNoIGFzIHRoZSBmaXJzdCBvbmUgd2ls
bCBiZSB2ZXJ5IGRpZmZlcmVudCwgYnV0IEkgYWdyZWUgdGhhdCBpcwp3aGF0IEkgbmVlZCB0byBk
by4KCj5NYXliZSBjYzogU3RhYmxlPwoKeWVwLiBJIHdpbGwgd2FpdCBhIGxpdHRsZSBtb3JlIG9u
IHJldmlldyBhbmQgc2VuZCBhIG5ldyB2ZXJzaW9uIHdpdGgKb3JkZXIgc3dhcHBlZC4KCj4KPlJl
dmlld2VkLWJ5OiBSb2RyaWdvIFZpdmkgPHJvZHJpZ28udml2aUBpbnRlbC5jb20+Cgp0aGFua3MK
THVjYXMgRGUgTWFyY2hpCgo+Cj4+IC0tLQo+PiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
Y3NyLmMgfCA3MSArKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLQo+PiAgMSBmaWxlIGNo
YW5nZWQsIDUzIGluc2VydGlvbnMoKyksIDE4IGRlbGV0aW9ucygtKQo+Pgo+PiBkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfY3NyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9jc3IuYwo+PiBpbmRleCA3ZmYwOGRlODNjYzYuLmI3MTgxY2E2YzhmNSAxMDA2NDQK
Pj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfY3NyLmMKPj4gKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfY3NyLmMKPj4gQEAgLTM2MCw3ICszNjAsOCBAQCBzdGF0aWMg
dTMyIGZpbmRfZG1jX2Z3X29mZnNldChjb25zdCBzdHJ1Y3QgaW50ZWxfZndfaW5mbyAqZndfaW5m
bywKPj4gIH0KPj4KPj4gIHN0YXRpYyB1MzIgcGFyc2VfY3NyX2Z3X2RtYyhzdHJ1Y3QgaW50ZWxf
Y3NyICpjc3IsCj4+IC0JCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2RtY19oZWFkZXJfYmFzZSAq
ZG1jX2hlYWRlcikKPj4gKwkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfZG1jX2hlYWRlcl9iYXNl
ICpkbWNfaGVhZGVyLAo+PiArCQkJICAgIHNpemVfdCByZW1fc2l6ZSkKPj4gIHsKPj4gIAl1bnNp
Z25lZCBpbnQgaGVhZGVyX2xlbl9ieXRlcywgZG1jX2hlYWRlcl9zaXplLCBwYXlsb2FkX3NpemUs
IGk7Cj4+ICAJY29uc3QgdTMyICptbWlvYWRkciwgKm1taW9kYXRhOwo+PiBAQCAtMzc1LDYgKzM3
Niw5IEBAIHN0YXRpYyB1MzIgcGFyc2VfY3NyX2Z3X2RtYyhzdHJ1Y3QgaW50ZWxfY3NyICpjc3Is
Cj4+ICAJCWNvbnN0IHN0cnVjdCBpbnRlbF9kbWNfaGVhZGVyX3YzICp2MyA9Cj4+ICAJCQkoY29u
c3Qgc3RydWN0IGludGVsX2RtY19oZWFkZXJfdjMgKilkbWNfaGVhZGVyOwo+Pgo+PiArCQlpZiAo
cmVtX3NpemUgPCBzaXplb2Yoc3RydWN0IGludGVsX2RtY19oZWFkZXJfdjMpKQo+PiArCQkJZ290
byBlcnJvcl90cnVuY2F0ZWQ7Cj4+ICsKPj4gIAkJbW1pb2FkZHIgPSB2My0+bW1pb2FkZHI7Cj4+
ICAJCW1taW9kYXRhID0gdjMtPm1taW9kYXRhOwo+PiAgCQltbWlvX2NvdW50ID0gdjMtPm1taW9f
Y291bnQ7Cj4+IEBAIC0zODYsNiArMzkwLDkgQEAgc3RhdGljIHUzMiBwYXJzZV9jc3JfZndfZG1j
KHN0cnVjdCBpbnRlbF9jc3IgKmNzciwKPj4gIAkJY29uc3Qgc3RydWN0IGludGVsX2RtY19oZWFk
ZXJfdjEgKnYxID0KPj4gIAkJCShjb25zdCBzdHJ1Y3QgaW50ZWxfZG1jX2hlYWRlcl92MSAqKWRt
Y19oZWFkZXI7Cj4+Cj4+ICsJCWlmIChyZW1fc2l6ZSA8IHNpemVvZihzdHJ1Y3QgaW50ZWxfZG1j
X2hlYWRlcl92MSkpCj4+ICsJCQlnb3RvIGVycm9yX3RydW5jYXRlZDsKPj4gKwo+PiAgCQltbWlv
YWRkciA9IHYxLT5tbWlvYWRkcjsKPj4gIAkJbW1pb2RhdGEgPSB2MS0+bW1pb2RhdGE7Cj4+ICAJ
CW1taW9fY291bnQgPSB2MS0+bW1pb19jb3VudDsKPj4gQEAgLTQwNCw2ICs0MTEsOCBAQCBzdGF0
aWMgdTMyIHBhcnNlX2Nzcl9md19kbWMoc3RydWN0IGludGVsX2NzciAqY3NyLAo+PiAgCQlyZXR1
cm4gMDsKPj4gIAl9Cj4+Cj4+ICsJcmVtX3NpemUgLT0gaGVhZGVyX2xlbl9ieXRlczsKPj4gKwo+
PiAgCS8qIENhY2hlIHRoZSBkbWMgaGVhZGVyIGluZm8uICovCj4+ICAJaWYgKG1taW9fY291bnQg
PiBtbWlvX2NvdW50X21heCkgewo+PiAgCQlEUk1fRVJST1IoIkRNQyBmaXJtd2FyZSBoYXMgd3Jv
bmcgbW1pbyBjb3VudCAldVxuIiwgbW1pb19jb3VudCk7Cj4+IEBAIC00MjQsNiArNDMzLDkgQEAg
c3RhdGljIHUzMiBwYXJzZV9jc3JfZndfZG1jKHN0cnVjdCBpbnRlbF9jc3IgKmNzciwKPj4KPj4g
IAkvKiBmd19zaXplIGlzIGluIGR3b3Jkcywgc28gbXVsdGlwbGllZCBieSA0IHRvIGNvbnZlcnQg
aW50byBieXRlcy4gKi8KPj4gIAlwYXlsb2FkX3NpemUgPSBkbWNfaGVhZGVyLT5md19zaXplICog
NDsKPj4gKwlpZiAocmVtX3NpemUgPCBwYXlsb2FkX3NpemUpCj4+ICsJCWdvdG8gZXJyb3JfdHJ1
bmNhdGVkOwo+PiArCj4+ICAJaWYgKHBheWxvYWRfc2l6ZSA+IGNzci0+bWF4X2Z3X3NpemUpIHsK
Pj4gIAkJRFJNX0VSUk9SKCJETUMgRlcgdG9vIGJpZyAoJXUgYnl0ZXMpXG4iLCBwYXlsb2FkX3Np
emUpOwo+PiAgCQlyZXR1cm4gMDsKPj4gQEAgLTQ0MCwxNiArNDUyLDI1IEBAIHN0YXRpYyB1MzIg
cGFyc2VfY3NyX2Z3X2RtYyhzdHJ1Y3QgaW50ZWxfY3NyICpjc3IsCj4+ICAJbWVtY3B5KGNzci0+
ZG1jX3BheWxvYWQsIHBheWxvYWQsIHBheWxvYWRfc2l6ZSk7Cj4+Cj4+ICAJcmV0dXJuIGhlYWRl
cl9sZW5fYnl0ZXMgKyBwYXlsb2FkX3NpemU7Cj4+ICsKPj4gK2Vycm9yX3RydW5jYXRlZDoKPj4g
KwlEUk1fRVJST1IoIlRydW5jYXRlZCBETUMgZmlybXdhcmUsIHJlZnVzaW5nLlxuIik7Cj4+ICsJ
cmV0dXJuIDA7Cj4+ICB9Cj4+Cj4+ICBzdGF0aWMgdTMyCj4+ICBwYXJzZV9jc3JfZndfcGFja2Fn
ZShzdHJ1Y3QgaW50ZWxfY3NyICpjc3IsCj4+ICAJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX3Bh
Y2thZ2VfaGVhZGVyICpwYWNrYWdlX2hlYWRlciwKPj4gLQkJICAgICBjb25zdCBzdHJ1Y3Qgc3Rl
cHBpbmdfaW5mbyAqc2kpCj4+ICsJCSAgICAgY29uc3Qgc3RydWN0IHN0ZXBwaW5nX2luZm8gKnNp
LAo+PiArCQkgICAgIHNpemVfdCByZW1fc2l6ZSkKPj4gIHsKPj4gLQl1MzIgbnVtX2VudHJpZXMs
IG1heF9lbnRyaWVzLCBkbWNfb2Zmc2V0LCByOwo+PiArCXUzMiBwYWNrYWdlX3NpemUgPSBzaXpl
b2Yoc3RydWN0IGludGVsX3BhY2thZ2VfaGVhZGVyKTsKPj4gKwl1MzIgbnVtX2VudHJpZXMsIG1h
eF9lbnRyaWVzLCBkbWNfb2Zmc2V0Owo+PiAgCWNvbnN0IHN0cnVjdCBpbnRlbF9md19pbmZvICpm
d19pbmZvOwo+Pgo+PiArCWlmIChyZW1fc2l6ZSA8IHBhY2thZ2Vfc2l6ZSkKPj4gKwkJZ290byBl
cnJvcl90cnVuY2F0ZWQ7Cj4+ICsKPj4gIAlpZiAocGFja2FnZV9oZWFkZXItPmhlYWRlcl92ZXIg
PT0gMSkgewo+PiAgCQltYXhfZW50cmllcyA9IFBBQ0tBR0VfTUFYX0ZXX0lORk9fRU5UUklFUzsK
Pj4gIAl9IGVsc2UgaWYgKHBhY2thZ2VfaGVhZGVyLT5oZWFkZXJfdmVyID09IDIpIHsKPj4gQEAg
LTQ2MCwxMSArNDgxLDE3IEBAIHBhcnNlX2Nzcl9md19wYWNrYWdlKHN0cnVjdCBpbnRlbF9jc3Ig
KmNzciwKPj4gIAkJcmV0dXJuIDA7Cj4+ICAJfQo+Pgo+PiAtCWlmIChwYWNrYWdlX2hlYWRlci0+
aGVhZGVyX2xlbiAqIDQgIT0KPj4gLQkgICAgc2l6ZW9mKHN0cnVjdCBpbnRlbF9wYWNrYWdlX2hl
YWRlcikgKwo+PiAtCSAgICBtYXhfZW50cmllcyAqIHNpemVvZihzdHJ1Y3QgaW50ZWxfZndfaW5m
bykpIHsKPj4gKwkvKgo+PiArCSAqIFdlIHNob3VsZCBhbHdheXMgaGF2ZSBzcGFjZSBmb3IgbWF4
X2VudHJpZXMsCj4+ICsJICogZXZlbiBpZiBub3QgYWxsIGFyZSB1c2VkCj4+ICsJICovCj4+ICsJ
cGFja2FnZV9zaXplICs9IG1heF9lbnRyaWVzICogc2l6ZW9mKHN0cnVjdCBpbnRlbF9md19pbmZv
KTsKPj4gKwlpZiAocmVtX3NpemUgPCBwYWNrYWdlX3NpemUpCj4+ICsJCWdvdG8gZXJyb3JfdHJ1
bmNhdGVkOwo+PiArCj4+ICsJaWYgKHBhY2thZ2VfaGVhZGVyLT5oZWFkZXJfbGVuICogNCAhPSBw
YWNrYWdlX3NpemUpIHsKPj4gIAkJRFJNX0VSUk9SKCJETUMgZmlybXdhcmUgaGFzIHdyb25nIHBh
Y2thZ2UgaGVhZGVyIGxlbmd0aCAiCj4+IC0JCQkgICIoJXUgYnl0ZXMpXG4iLCBwYWNrYWdlX2hl
YWRlci0+aGVhZGVyX2xlbiAqIDQpOwo+PiArCQkJICAiKCV1IGJ5dGVzKVxuIiwgcGFja2FnZV9z
aXplKTsKPj4gIAkJcmV0dXJuIDA7Cj4+ICAJfQo+Pgo+PiBAQCAtNDgxLDIxICs1MDgsMjQgQEAg
cGFyc2VfY3NyX2Z3X3BhY2thZ2Uoc3RydWN0IGludGVsX2NzciAqY3NyLAo+PiAgCQlyZXR1cm4g
MDsKPj4gIAl9Cj4+Cj4+IC0JciA9IHNpemVvZihzdHJ1Y3QgaW50ZWxfcGFja2FnZV9oZWFkZXIp
Owo+PiAtCj4+IC0JLyogd2UgYWx3YXlzIGhhdmUgc3BhY2UgZm9yIG1heF9lbnRyaWVzLCBldmVu
IGlmIG5vdCBhbGwgYXJlIHVzZWQgKi8KPj4gLQlyICs9IG1heF9lbnRyaWVzICogc2l6ZW9mKHN0
cnVjdCBpbnRlbF9md19pbmZvKTsKPj4gLQo+PiAgCS8qIGRtY19vZmZzZXQgaXMgaW4gZHdvcmRz
ICovCj4+IC0JciArPSBkbWNfb2Zmc2V0ICogNDsKPj4gKwlyZXR1cm4gcGFja2FnZV9zaXplICsg
ZG1jX29mZnNldCAqIDQ7Cj4+Cj4+IC0JcmV0dXJuIHI7Cj4+ICtlcnJvcl90cnVuY2F0ZWQ6Cj4+
ICsJRFJNX0VSUk9SKCJUcnVuY2F0ZWQgRE1DIGZpcm13YXJlLCByZWZ1c2luZy5cbiIpOwo+PiAr
CXJldHVybiAwOwo+PiAgfQo+Pgo+PiAgLyogUmV0dXJuIG51bWJlciBvZiBieXRlcyBwYXJzZWQg
b3IgMCBvbiBlcnJvciAqLwo+PiAgc3RhdGljIHUzMiBwYXJzZV9jc3JfZndfY3NzKHN0cnVjdCBp
bnRlbF9jc3IgKmNzciwKPj4gLQkJCSAgICBzdHJ1Y3QgaW50ZWxfY3NzX2hlYWRlciAqY3NzX2hl
YWRlcikKPj4gKwkJCSAgICBzdHJ1Y3QgaW50ZWxfY3NzX2hlYWRlciAqY3NzX2hlYWRlciwKPj4g
KwkJCSAgICBzaXplX3QgcmVtX3NpemUpCj4+ICB7Cj4+ICsJaWYgKHJlbV9zaXplIDwgc2l6ZW9m
KHN0cnVjdCBpbnRlbF9jc3NfaGVhZGVyKSkgewo+PiArCQlEUk1fRVJST1IoIlRydW5jYXRlZCBE
TUMgZmlybXdhcmUsIHJlZnVzaW5nLlxuIik7Cj4+ICsJCXJldHVybiAwOwo+PiArCX0KPj4gKwo+
PiAgCWlmIChzaXplb2Yoc3RydWN0IGludGVsX2Nzc19oZWFkZXIpICE9Cj4+ICAJICAgIChjc3Nf
aGVhZGVyLT5oZWFkZXJfbGVuICogNCkpIHsKPj4gIAkJRFJNX0VSUk9SKCJETUMgZmlybXdhcmUg
aGFzIHdyb25nIENTUyBoZWFkZXIgbGVuZ3RoICIKPj4gQEAgLTUzMCwyOSArNTYwLDM0IEBAIHN0
YXRpYyB2b2lkIHBhcnNlX2Nzcl9mdyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
Cj4+ICAJY29uc3Qgc3RydWN0IHN0ZXBwaW5nX2luZm8gKnNpID0gaW50ZWxfZ2V0X3N0ZXBwaW5n
X2luZm8oZGV2X3ByaXYpOwo+PiAgCXUzMiByZWFkY291bnQgPSAwOwo+PiAgCXUzMiByOwo+PiAr
CXNpemVfdCByZW1fc2l6ZTsKPj4KPj4gIAlpZiAoIWZ3KQo+PiAgCQlyZXR1cm47Cj4+Cj4+ICsJ
cmVtX3NpemUgPSBmdy0+c2l6ZTsKPj4gKwo+PiAgCS8qIEV4dHJhY3QgQ1NTIEhlYWRlciBpbmZv
cm1hdGlvbiovCj4+ICAJY3NzX2hlYWRlciA9IChzdHJ1Y3QgaW50ZWxfY3NzX2hlYWRlciAqKWZ3
LT5kYXRhOwo+PiAtCXIgPSBwYXJzZV9jc3JfZndfY3NzKGNzciwgY3NzX2hlYWRlcik7Cj4+ICsJ
ciA9IHBhcnNlX2Nzcl9md19jc3MoY3NyLCBjc3NfaGVhZGVyLCByZW1fc2l6ZSk7Cj4+ICAJaWYg
KCFyKQo+PiAgCQlyZXR1cm47Cj4+Cj4+ICsJcmVtX3NpemUgLT0gcjsKPj4gIAlyZWFkY291bnQg
Kz0gcjsKPj4KPj4gIAkvKiBFeHRyYWN0IFBhY2thZ2UgSGVhZGVyIGluZm9ybWF0aW9uKi8KPj4g
IAlwYWNrYWdlX2hlYWRlciA9IChzdHJ1Y3QgaW50ZWxfcGFja2FnZV9oZWFkZXIgKikmZnctPmRh
dGFbcmVhZGNvdW50XTsKPj4gLQlyID0gcGFyc2VfY3NyX2Z3X3BhY2thZ2UoY3NyLCBwYWNrYWdl
X2hlYWRlciwgc2kpOwo+PiArCXIgPSBwYXJzZV9jc3JfZndfcGFja2FnZShjc3IsIHBhY2thZ2Vf
aGVhZGVyLCBzaSwgcmVtX3NpemUpOwo+PiAgCWlmICghcikKPj4gIAkJcmV0dXJuOwo+Pgo+PiAr
CXJlbV9zaXplIC09IHI7Cj4+ICAJcmVhZGNvdW50ICs9IHI7Cj4+Cj4+ICAJLyogRXh0cmFjdCBk
bWNfaGVhZGVyIGluZm9ybWF0aW9uLiAqLwo+PiAgCWRtY19oZWFkZXIgPSAoc3RydWN0IGludGVs
X2RtY19oZWFkZXJfYmFzZSAqKSZmdy0+ZGF0YVtyZWFkY291bnRdOwo+PiAtCXBhcnNlX2Nzcl9m
d19kbWMoY3NyLCBkbWNfaGVhZGVyKTsKPj4gKwlwYXJzZV9jc3JfZndfZG1jKGNzciwgZG1jX2hl
YWRlciwgcmVtX3NpemUpOwo+PiAgfQo+Pgo+PiAgc3RhdGljIHZvaWQgaW50ZWxfY3NyX3J1bnRp
bWVfcG1fZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKPj4gLS0KPj4gMi4y
MS4wCj4+Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCklu
dGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 006886E2B30
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Apr 2023 22:39:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3A02610E23D;
	Fri, 14 Apr 2023 20:39:16 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 8F9B410E20D;
 Fri, 14 Apr 2023 20:39:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1681504754; x=1713040754;
 h=date:message-id:from:to:cc:subject:in-reply-to:
 references:mime-version;
 bh=f3dI84lB5OsmsCmzPWMM0uXZglj5KI2zEtPpoKGYneo=;
 b=Qkyff0KB4s4q/fkqhvyX4GNtgYJAoL/hMO2RGvcm2fRxF/K83GULk6gS
 hrEhjEmaSiBYWgrQKnUeQyAKu0zD0WOwymprr88nafBRcKM7MfZqNit5d
 u7CxYuQm++UruIapqP0Wrb00fwiA2ZEsNCqHT9s5jm5KYEU06CQjHID6q
 sOfQxFJD6+8P0RSHpLUoOZwzepRJ3Nq7jmMywv6qZpiV/yNR2vwBRhLsd
 Vvvq+/H6SG5RMaJy0qmzXBJSSNLVZ3QIJ85yG3NjTZLRIv4O9IfRL6wVZ
 MNVNc/QQmFZg/JnmBiBgOMabahfeKWkDq8DxCDbiUOv+dSzAnYRCp0Ph4 w==;
X-IronPort-AV: E=McAfee;i="6600,9927,10680"; a="409776152"
X-IronPort-AV: E=Sophos;i="5.99,197,1677571200"; d="scan'208";a="409776152"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 14 Apr 2023 13:39:07 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10680"; a="833686435"
X-IronPort-AV: E=Sophos;i="5.99,197,1677571200"; d="scan'208";a="833686435"
Received: from adixit-mobl.amr.corp.intel.com (HELO adixit-arch.intel.com)
 ([10.209.100.250])
 by fmsmga001-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 14 Apr 2023 13:39:06 -0700
Date: Fri, 14 Apr 2023 13:25:59 -0700
Message-ID: <87ildyqkh4.wl-ashutosh.dixit@intel.com>
From: "Dixit, Ashutosh" <ashutosh.dixit@intel.com>
To: Vinay Belgaumkar <vinay.belgaumkar@intel.com>
In-Reply-To: <20230414191639.2565389-3-vinay.belgaumkar@intel.com>
References: <20230414191639.2565389-1-vinay.belgaumkar@intel.com>	<20230414191639.2565389-3-vinay.belgaumkar@intel.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL-LB/10.8 EasyPG/1.0.0
 Emacs/28.2 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Subject: Re: [Intel-gfx] [igt-dev] [PATCH i-g-t 2/4] lib: Make SLPC helper
 function per GT
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org, intel-gfx@lists.freedesktop.org
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

On Fri, 14 Apr 2023 12:16:37 -0700, Vinay Belgaumkar wrote:
>

Hi Vinay,

> Use default of 0 where GT id is not being used.
>
> v2: Add a helper for GT 0 (Ashutosh)
>
> Signed-off-by: Vinay Belgaumkar <vinay.belgaumkar@intel.com>
> ---
>  lib/igt_pm.c | 36 ++++++++++++++++++++++++++----------
>  lib/igt_pm.h |  3 ++-
>  2 files changed, 28 insertions(+), 11 deletions(-)
>
> diff --git a/lib/igt_pm.c b/lib/igt_pm.c
> index 704acf7d..8a30bb3b 100644
> --- a/lib/igt_pm.c
> +++ b/lib/igt_pm.c
> @@ -1329,21 +1329,37 @@ void igt_pm_print_pci_card_runtime_status(void)
>	}
>  }
>
> -bool i915_is_slpc_enabled(int fd)
> +/**
> + * i915_is_slpc_enabled_gt:
> + * @drm_fd: DRM file descriptor
> + * @gt: GT id
> + * Check if SLPC is enabled on a GT
> + */
> +bool i915_is_slpc_enabled_gt(int drm_fd, int gt)
>  {
> -	int debugfs_fd = igt_debugfs_dir(fd);
> -	char buf[4096] = {};
> -	int len;
> +	int debugfs_fd;
> +	char buf[256] = {};

Shouldn't this be 4096 as before?

>
> -	igt_require(debugfs_fd != -1);
> +	debugfs_fd = igt_debugfs_gt_open(drm_fd, gt, "uc/guc_slpc_info", O_RDONLY);
> +
> +	/* if guc_slpc_info not present then return false */
> +	if (debugfs_fd < 0)
> +		return false;

I think this should just be:

	igt_require_fd(debugfs_fd);

Basically we cannot determine if SLPC is enabled or not if say debugfs is
not mounted, so it's not correct return false from here.

> +	read(debugfs_fd, buf, sizeof(buf)-1);
>
> -	len = igt_debugfs_simple_read(debugfs_fd, "gt/uc/guc_slpc_info", buf, sizeof(buf));
>	close(debugfs_fd);
>
> -	if (len < 0)
> -		return false;
> -	else
> -		return strstr(buf, "SLPC state: running");
> +	return strstr(buf, "SLPC state: running");
> +}
> +
> +/**
> + * i915_is_slpc_enabled:
> + * @drm_fd: DRM file descriptor
> + * Check if SLPC is enabled on GT 0

Hmm, not sure why we are not using the i915_for_each_gt() loop here since
that is the correct way of doing it.

At the min let's remove the GT 0 in the comment above. This function
doesn't check for GT0, it checks if "slpc is enabled for the device". We
can check only on GT0 if we are certain that checking on GT0 is sufficient,
that is if SLPC is disabled on GT0 it's disabled for the device. But then
someone can ask the question in that case why are we exposing slpc_enabled
for each gt from the kernel rather than at the device level.

In any case for now let's change the above comment to:

"Check if SLPC is enabled" or ""Check if SLPC is enabled for the i915
device".

With the above comments addressed this is:

Reviewed-by: Ashutosh Dixit <ashutosh.dixit@intel.com>

Also, why is igt@i915_pm_rps@basic-api still skipping on DG2/ATSM in
pre-merge CI even after this series?

Thanks.
--
Ashutosh


> + */
> +bool i915_is_slpc_enabled(int drm_fd)
> +{
> +	return i915_is_slpc_enabled_gt(drm_fd, 0);
>  }

>
>  int igt_pm_get_runtime_suspended_time(struct pci_device *pci_dev)
> diff --git a/lib/igt_pm.h b/lib/igt_pm.h
> index d0d6d673..448cf42d 100644
> --- a/lib/igt_pm.h
> +++ b/lib/igt_pm.h
> @@ -84,7 +84,8 @@ void igt_pm_set_d3cold_allowed(struct igt_device_card *card, const char *val);
>  void igt_pm_setup_pci_card_runtime_pm(struct pci_device *pci_dev);
>  void igt_pm_restore_pci_card_runtime_pm(void);
>  void igt_pm_print_pci_card_runtime_status(void);
> -bool i915_is_slpc_enabled(int fd);
> +bool i915_is_slpc_enabled_gt(int drm_fd, int gt);
> +bool i915_is_slpc_enabled(int drm_fd);
>  int igt_pm_get_runtime_suspended_time(struct pci_device *pci_dev);
>  int igt_pm_get_runtime_usage(struct pci_device *pci_dev);
>
> --
> 2.38.1
>

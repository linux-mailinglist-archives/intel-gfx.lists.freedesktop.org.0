Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5118146281
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 17:18:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A05AC89A72;
	Fri, 14 Jun 2019 15:18:14 +0000 (UTC)
X-Original-To: Intel-gfx@lists.freedesktop.org
Delivered-To: Intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3D34589A72
 for <Intel-gfx@lists.freedesktop.org>; Fri, 14 Jun 2019 15:18:11 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 14 Jun 2019 08:18:11 -0700
X-ExtLoop1: 1
Received: from yyosef-mobl.ger.corp.intel.com (HELO localhost.localdomain)
 ([10.252.23.42])
 by orsmga004.jf.intel.com with ESMTP; 14 Jun 2019 08:18:09 -0700
From: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
To: Intel-gfx@lists.freedesktop.org
Date: Fri, 14 Jun 2019 16:17:21 +0100
Message-Id: <20190614151731.17608-22-tvrtko.ursulin@linux.intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614151731.17608-1-tvrtko.ursulin@linux.intel.com>
References: <20190614151731.17608-1-tvrtko.ursulin@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 21/31] drm/i915: Convert
 i915_gem_flush_ggtt_writes to intel_gt
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KCkhhdmluZyBp
bnRyb2R1Y2VkIHN0cnVjdCBpbnRlbF9ndCAobmFtZWQgdGhlIGFub255bW91cyBzdHJ1Y3R1cmUg
aW4gaTkxNSkKd2UgY2FuIHN0YXJ0IHVzaW5nIGl0IHRvIGNvbXBhcnRtZW50YWxpemUgb3VyIGNv
ZGUgYmV0dGVyLiBJdCBtYWtlcyBtb3JlCnNlbnNlIGxvZ2ljYWxseSB0byBoYXZlIHRoZSBjb2Rl
IGludGVybmFsbHkgbGlrZSB0aGlzIGFuZCBpdCB3aWxsIGFsc28KaGVscCB3aXRoIGZ1dHVyZSBz
cGxpdCBiZXR3ZWVuIGd0IGFuZCBkaXNwbGF5IGluIGk5MTUuCgpTaWduZWQtb2ZmLWJ5OiBUdnJ0
a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYyAgICB8ICA1ICstLQogLi4uL2RybS9pOTE1L2dl
bS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jICAgIHwgIDMgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2d0LmMgICAgICAgICAgICB8IDQxICsrKysrKysrKysrKysrKysrKysKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmggICAgICAgICAgICB8ICAyICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAyIC0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgICAgICAgICAgICAgICB8IDQwIC0tLS0tLS0tLS0tLS0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYyAgICAgICAgICAgICAgIHwgIDMg
Ky0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQuYyB8ICAyICst
CiA4IGZpbGVzIGNoYW5nZWQsIDUwIGluc2VydGlvbnMoKyksIDQ4IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYwppbmRleCAzNmI3NmM2YTBh
OWQuLmEzZDhiZmIwMWViOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX29iamVjdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9v
YmplY3QuYwpAQCAtMjIsNiArMjIsNyBAQAogICoKICAqLwogCisjaW5jbHVkZSAiZ3QvaW50ZWxf
Z3QuaCIKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2NsZmx1c2gu
aCIKICNpbmNsdWRlICJpOTE1X2dlbV9jb250ZXh0LmgiCkBAIC0zNjcsNyArMzY4LDYgQEAgdm9p
ZAogaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX3dyaXRlX2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqLAogCQkJCSAgIHVuc2lnbmVkIGludCBmbHVzaF9kb21haW5zKQogewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7
CiAJc3RydWN0IGk5MTVfdm1hICp2bWE7CiAKIAlhc3NlcnRfb2JqZWN0X2hlbGQob2JqKTsKQEAg
LTM3Nyw4ICszNzcsNiBAQCBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAKIAlzd2l0Y2ggKG9iai0+d3JpdGVfZG9tYWlu
KSB7CiAJY2FzZSBJOTE1X0dFTV9ET01BSU5fR1RUOgotCQlpOTE1X2dlbV9mbHVzaF9nZ3R0X3dy
aXRlcyhkZXZfcHJpdik7Ci0KIAkJaW50ZWxfZmJfb2JqX2ZsdXNoKG9iaiwKIAkJCQkgICBmYl93
cml0ZV9vcmlnaW4ob2JqLCBJOTE1X0dFTV9ET01BSU5fR1RUKSk7CiAKQEAgLTM4Niw2ICszODQs
NyBAQCBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0ICpvYmosCiAJCQlpZiAodm1hLT5pb21hcCkKIAkJCQljb250aW51ZTsKIAorCQkJ
aW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXModm1hLT52bS0+Z3QpOwogCQkJaTkxNV92bWFfdW5z
ZXRfZ2d0dF93cml0ZSh2bWEpOwogCQl9CiAJCWJyZWFrOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYwppbmRleCBiOTI4MDk0MTg3Mjku
LmI0NmQ1Nzk2N2JmYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0
ZXN0cy9pOTE1X2dlbV9tbWFuLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0
ZXN0cy9pOTE1X2dlbV9tbWFuLmMKQEAgLTYsNiArNiw3IEBACiAKICNpbmNsdWRlIDxsaW51eC9w
cmltZV9udW1iZXJzLmg+CiAKKyNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUgImd0
L2ludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaHVnZV9nZW1fb2JqZWN0LmgiCiAjaW5jbHVkZSAi
aTkxNV9zZWxmdGVzdC5oIgpAQCAtMTQzLDcgKzE0NCw3IEBAIHN0YXRpYyBpbnQgY2hlY2tfcGFy
dGlhbF9tYXBwaW5nKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCWlmIChvZmZz
ZXQgPj0gb2JqLT5iYXNlLnNpemUpCiAJCQljb250aW51ZTsKIAotCQlpOTE1X2dlbV9mbHVzaF9n
Z3R0X3dyaXRlcyh0b19pOTE1KG9iai0+YmFzZS5kZXYpKTsKKwkJaW50ZWxfZ3RfZmx1c2hfZ2d0
dF93cml0ZXMoJnRvX2k5MTUob2JqLT5iYXNlLmRldiktPmd0KTsKIAogCQlwID0gaTkxNV9nZW1f
b2JqZWN0X2dldF9wYWdlKG9iaiwgb2Zmc2V0ID4+IFBBR0VfU0hJRlQpOwogCQljcHUgPSBrbWFw
KHApICsgb2Zmc2V0X2luX3BhZ2Uob2Zmc2V0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2d0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5j
CmluZGV4IGQ1ZWUzNDg3ZTE4MC4uOTU1NTAzNTA0OTQ0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0LmMKQEAgLTE0NywzICsxNDcsNDQgQEAgdm9pZCBpbnRlbF9ndF9jaGVja19hbmRfY2xl
YXJfZmF1bHRzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAKIAlpbnRlbF9ndF9jbGVhcl9lcnJvcl9y
ZWdpc3RlcnMoZ3QsIEFMTF9FTkdJTkVTKTsKIH0KKwordm9pZCBpbnRlbF9ndF9mbHVzaF9nZ3R0
X3dyaXRlcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1ID0gZ3QtPmk5MTU7CisJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwkvKgorCSAq
IE5vIGFjdHVhbCBmbHVzaGluZyBpcyByZXF1aXJlZCBmb3IgdGhlIEdUVCB3cml0ZSBkb21haW4g
Zm9yIHJlYWRzCisJICogZnJvbSB0aGUgR1RUIGRvbWFpbi4gV3JpdGVzIHRvIGl0ICJpbW1lZGlh
dGVseSIgZ28gdG8gbWFpbiBtZW1vcnkKKwkgKiBhcyBmYXIgYXMgd2Uga25vdywgc28gdGhlcmUn
cyBubyBjaGlwc2V0IGZsdXNoLiBJdCBhbHNvIGRvZXNuJ3QKKwkgKiBsYW5kIGluIHRoZSBHUFUg
cmVuZGVyIGNhY2hlLgorCSAqCisJICogSG93ZXZlciwgd2UgZG8gaGF2ZSB0byBlbmZvcmNlIHRo
ZSBvcmRlciBzbyB0aGF0IGFsbCB3cml0ZXMgdGhyb3VnaAorCSAqIHRoZSBHVFQgbGFuZCBiZWZv
cmUgYW55IHdyaXRlcyB0byB0aGUgZGV2aWNlLCBzdWNoIGFzIHVwZGF0ZXMgdG8KKwkgKiB0aGUg
R0FUVCBpdHNlbGYuCisJICoKKwkgKiBXZSBhbHNvIGhhdmUgdG8gd2FpdCBhIGJpdCBmb3IgdGhl
IHdyaXRlcyB0byBsYW5kIGZyb20gdGhlIEdUVC4KKwkgKiBBbiB1bmNhY2hlZCByZWFkIChpLmUu
IG1taW8pIHNlZW1zIHRvIGJlIGlkZWFsIGZvciB0aGUgcm91bmQtdHJpcAorCSAqIHRpbWluZy4g
VGhpcyBpc3N1ZSBoYXMgb25seSBiZWVuIG9ic2VydmVkIHdoZW4gc3dpdGNoaW5nIHF1aWNrbHkK
KwkgKiBiZXR3ZWVuIEdUVCB3cml0ZXMgYW5kIENQVSByZWFkcyBmcm9tIGluc2lkZSB0aGUga2Vy
bmVsIG9uIHJlY2VudCBodywKKwkgKiBhbmQgaXQgYXBwZWFycyB0byBvbmx5IGFmZmVjdCBkaXNj
cmV0ZSBHVFQgYmxvY2tzIChpLmUuIG9uIExMQworCSAqIHN5c3RlbSBhZ2VudHMgd2UgY2Fubm90
IHJlcHJvZHVjZSB0aGlzIGJlaGF2aW91ciwgdW50aWwgQ2Fubm9ubGFrZQorCSAqIHRoYXQgd2Fz
ISkuCisJICovCisKKwl3bWIoKTsKKworCWlmIChJTlRFTF9JTkZPKGk5MTUpLT5oYXNfY29oZXJl
bnRfZ2d0dCkKKwkJcmV0dXJuOworCisJaTkxNV9nZW1fY2hpcHNldF9mbHVzaChpOTE1KTsKKwor
CXdpdGhfaW50ZWxfcnVudGltZV9wbShpOTE1LCB3YWtlcmVmKSB7CisJCXN0cnVjdCBpbnRlbF91
bmNvcmUgKnVuY29yZSA9IGd0LT51bmNvcmU7CisKKwkJc3Bpbl9sb2NrX2lycSgmdW5jb3JlLT5s
b2NrKTsKKwkJaW50ZWxfdW5jb3JlX3Bvc3RpbmdfcmVhZF9mdyh1bmNvcmUsCisJCQkJCSAgICAg
UklOR19IRUFEKFJFTkRFUl9SSU5HX0JBU0UpKTsKKwkJc3Bpbl91bmxvY2tfaXJxKCZ1bmNvcmUt
PmxvY2spOworCX0KK30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCmluZGV4IGQ0ZjU4NTE1
MTUyNy4uMDUxZDcwNjlkYjU1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9ndC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmgKQEAgLTE4
LDQgKzE4LDYgQEAgdm9pZCBpbnRlbF9ndF9jaGVja19hbmRfY2xlYXJfZmF1bHRzKHN0cnVjdCBp
bnRlbF9ndCAqZ3QpOwogdm9pZCBpbnRlbF9ndF9jbGVhcl9lcnJvcl9yZWdpc3RlcnMoc3RydWN0
IGludGVsX2d0ICpndCwKIAkJCQkgICAgaW50ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVfbWFzayk7
CiAKK3ZvaWQgaW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXMoc3RydWN0IGludGVsX2d0ICpndCk7
CisKICNlbmRpZiAvKiBfX0lOVEVMX0dUX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKaW5k
ZXggMWViMjAzZmRlZTYwLi40OTg3YTA0OGIzZDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaApA
QCAtMjY0OCw4ICsyNjQ4LDYgQEAgaW50IF9fbXVzdF9jaGVjayBpOTE1X2dlbV9ldmljdF9mb3Jf
bm9kZShzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICp2bSwKIAkJCQkJIHVuc2lnbmVkIGludCBm
bGFncyk7CiBpbnQgaTkxNV9nZW1fZXZpY3Rfdm0oc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAq
dm0pOwogCi12b2lkIGk5MTVfZ2VtX2ZsdXNoX2dndHRfd3JpdGVzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdik7Ci0KIC8qIGJlbG9uZ3MgaW4gaTkxNV9nZW1fZ3R0LmggKi8KIHN0
YXRpYyBpbmxpbmUgdm9pZCBpOTE1X2dlbV9jaGlwc2V0X2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4IGI3Zjg4ZTJi
ZDdkZi4uNGY5YWFjNjJhOGE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAgLTIzMyw0NiAr
MjMzLDYgQEAgaTkxNV9nZW1fY3JlYXRlX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZv
aWQgKmRhdGEsCiAJCQkgICAgICAgJmFyZ3MtPnNpemUsICZhcmdzLT5oYW5kbGUpOwogfQogCi12
b2lkIGk5MTVfZ2VtX2ZsdXNoX2dndHRfd3JpdGVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKLXsKLQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQotCS8qCi0JICogTm8gYWN0
dWFsIGZsdXNoaW5nIGlzIHJlcXVpcmVkIGZvciB0aGUgR1RUIHdyaXRlIGRvbWFpbiBmb3IgcmVh
ZHMKLQkgKiBmcm9tIHRoZSBHVFQgZG9tYWluLiBXcml0ZXMgdG8gaXQgImltbWVkaWF0ZWx5IiBn
byB0byBtYWluIG1lbW9yeQotCSAqIGFzIGZhciBhcyB3ZSBrbm93LCBzbyB0aGVyZSdzIG5vIGNo
aXBzZXQgZmx1c2guIEl0IGFsc28gZG9lc24ndAotCSAqIGxhbmQgaW4gdGhlIEdQVSByZW5kZXIg
Y2FjaGUuCi0JICoKLQkgKiBIb3dldmVyLCB3ZSBkbyBoYXZlIHRvIGVuZm9yY2UgdGhlIG9yZGVy
IHNvIHRoYXQgYWxsIHdyaXRlcyB0aHJvdWdoCi0JICogdGhlIEdUVCBsYW5kIGJlZm9yZSBhbnkg
d3JpdGVzIHRvIHRoZSBkZXZpY2UsIHN1Y2ggYXMgdXBkYXRlcyB0bwotCSAqIHRoZSBHQVRUIGl0
c2VsZi4KLQkgKgotCSAqIFdlIGFsc28gaGF2ZSB0byB3YWl0IGEgYml0IGZvciB0aGUgd3JpdGVz
IHRvIGxhbmQgZnJvbSB0aGUgR1RULgotCSAqIEFuIHVuY2FjaGVkIHJlYWQgKGkuZS4gbW1pbykg
c2VlbXMgdG8gYmUgaWRlYWwgZm9yIHRoZSByb3VuZC10cmlwCi0JICogdGltaW5nLiBUaGlzIGlz
c3VlIGhhcyBvbmx5IGJlZW4gb2JzZXJ2ZWQgd2hlbiBzd2l0Y2hpbmcgcXVpY2tseQotCSAqIGJl
dHdlZW4gR1RUIHdyaXRlcyBhbmQgQ1BVIHJlYWRzIGZyb20gaW5zaWRlIHRoZSBrZXJuZWwgb24g
cmVjZW50IGh3LAotCSAqIGFuZCBpdCBhcHBlYXJzIHRvIG9ubHkgYWZmZWN0IGRpc2NyZXRlIEdU
VCBibG9ja3MgKGkuZS4gb24gTExDCi0JICogc3lzdGVtIGFnZW50cyB3ZSBjYW5ub3QgcmVwcm9k
dWNlIHRoaXMgYmVoYXZpb3VyLCB1bnRpbCBDYW5ub25sYWtlCi0JICogdGhhdCB3YXMhKS4KLQkg
Ki8KLQotCXdtYigpOwotCi0JaWYgKElOVEVMX0lORk8oZGV2X3ByaXYpLT5oYXNfY29oZXJlbnRf
Z2d0dCkKLQkJcmV0dXJuOwotCi0JaTkxNV9nZW1fY2hpcHNldF9mbHVzaChkZXZfcHJpdik7Ci0K
LQl3aXRoX2ludGVsX3J1bnRpbWVfcG0oZGV2X3ByaXYsIHdha2VyZWYpIHsKLQkJc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlID0gJmRldl9wcml2LT51bmNvcmU7Ci0KLQkJc3Bpbl9sb2NrX2ly
cSgmdW5jb3JlLT5sb2NrKTsKLQkJaW50ZWxfdW5jb3JlX3Bvc3RpbmdfcmVhZF9mdyh1bmNvcmUs
Ci0JCQkJCSAgICAgUklOR19IRUFEKFJFTkRFUl9SSU5HX0JBU0UpKTsKLQkJc3Bpbl91bmxvY2tf
aXJxKCZ1bmNvcmUtPmxvY2spOwotCX0KLX0KLQogc3RhdGljIGludAogc2htZW1fcHJlYWQoc3Ry
dWN0IHBhZ2UgKnBhZ2UsIGludCBvZmZzZXQsIGludCBsZW4sIGNoYXIgX191c2VyICp1c2VyX2Rh
dGEsCiAJICAgIGJvb2wgbmVlZHNfY2xmbHVzaCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfdm1hLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCmluZGV4
IGNiMzQxZTRhY2Y5OS4uNGY0Njk1YzM1MWFmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3ZtYS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKQEAg
LTIzLDYgKzIzLDcgQEAKICAqLwogCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lLmgiCisjaW5j
bHVkZSAiZ3QvaW50ZWxfZ3QuaCIKIAogI2luY2x1ZGUgImk5MTVfdm1hLmgiCiAKQEAgLTQwOCw3
ICs0MDksNyBAQCB2b2lkIGk5MTVfdm1hX2ZsdXNoX3dyaXRlcyhzdHJ1Y3QgaTkxNV92bWEgKnZt
YSkKIAlpZiAoIWk5MTVfdm1hX2hhc19nZ3R0X3dyaXRlKHZtYSkpCiAJCXJldHVybjsKIAotCWk5
MTVfZ2VtX2ZsdXNoX2dndHRfd3JpdGVzKHZtYS0+dm0tPmk5MTUpOworCWludGVsX2d0X2ZsdXNo
X2dndHRfd3JpdGVzKHZtYS0+dm0tPmd0KTsKIAogCWk5MTVfdm1hX3Vuc2V0X2dndHRfd3JpdGUo
dm1hKTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1
X2dlbV9ndHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQu
YwppbmRleCAyMDkzZDA4YTc1NjkuLmE2N2YwZTliNGQ1ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2d0dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9ndHQuYwpAQCAtMTE5NSw3ICsxMTk1LDcgQEAgc3Rh
dGljIGludCBpZ3RfZ2d0dF9wYWdlKHZvaWQgKmFyZykKIAkJaW93cml0ZTMyKG4sIHZhZGRyICsg
bik7CiAJCWlvX21hcHBpbmdfdW5tYXBfYXRvbWljKHZhZGRyKTsKIAl9Ci0JaTkxNV9nZW1fZmx1
c2hfZ2d0dF93cml0ZXMoaTkxNSk7CisJaW50ZWxfZ3RfZmx1c2hfZ2d0dF93cml0ZXMoZ2d0dC0+
dm0uZ3QpOwogCiAJaTkxNV9yYW5kb21fcmVvcmRlcihvcmRlciwgY291bnQsICZwcm5nKTsKIAlm
b3IgKG4gPSAwOyBuIDwgY291bnQ7IG4rKykgewotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0Cklu
dGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5v
cmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

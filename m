Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DE6A25011F
	for <lists+intel-gfx@lfdr.de>; Mon, 24 Jun 2019 07:43:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 755D3898D9;
	Mon, 24 Jun 2019 05:43:37 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A598C898FD
 for <intel-gfx@lists.freedesktop.org>; Mon, 24 Jun 2019 05:43:35 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17000421-1500050 
 for multiple; Mon, 24 Jun 2019 06:43:22 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 24 Jun 2019 06:43:14 +0100
Message-Id: <20190624054315.18910-18-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190624054315.18910-1-chris@chris-wilson.co.uk>
References: <20190624054315.18910-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 18/19] drm/i915: Protect request retirement with
 timeline->mutex
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yZ28gdGhlIHN0cnVjdF9tdXRleCByZXF1aXJlbWVudCBmb3IgcmVxdWVzdCByZXRpcmVtZW50
IGFzIHdlIGhhdmUKYmVlbiB0cmFuc2l0aW9uaW5nIG92ZXIgdG8gb25seSB1c2luZyB0aGUgdGlt
ZWxpbmUtPm11dGV4IGZvcgpjb250cm9sbGluZyB0aGUgbGlmZXRpbWUgb2YgYSByZXF1ZXN0IG9u
IHRoYXQgdGltZWxpbmUuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMgICAgfCAxOTIgKysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmggICAgICAgfCAgMjUgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3R5cGVzLmggIHwgICAyIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0LmMgICAgICAgICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndF90eXBlcy5oICAgICAgfCAgIDIgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmluZ2J1ZmZlci5jICAgIHwgIDExICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2Vu
Z2luZS5jICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0
LmMgICAgICAgICAgIHwgMTQ5ICsrKysrKystLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3JlcXVlc3QuaCAgICAgICAgICAgfCAgIDMgLQogMTAgZmlsZXMgY2hhbmdlZCwgMTk5IGlu
c2VydGlvbnMoKyksIDE4OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCBmNDNlYWFhNWRiNWYuLjgwYzljNTdhMzAy
ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZm
ZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5j
CkBAIC03MzksNjMgKzczOSw2IEBAIHN0YXRpYyBpbnQgZWJfc2VsZWN0X2NvbnRleHQoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpfX2ViX3dhaXRfZm9yX3Jpbmcoc3RydWN0IGludGVsX3JpbmcgKnJpbmcpCi17
Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0KLQkvKgotCSAqIENvbXBsZXRlbHkgdW5zY2ll
bnRpZmljIGZpbmdlci1pbi10aGUtYWlyIGVzdGltYXRlcyBmb3Igc3VpdGFibGUKLQkgKiBtYXhp
bXVtIHVzZXIgcmVxdWVzdCBzaXplICh0byBhdm9pZCBibG9ja2luZykgYW5kIHRoZW4gYmFja29m
Zi4KLQkgKi8KLQlpZiAoaW50ZWxfcmluZ191cGRhdGVfc3BhY2UocmluZykgPj0gUEFHRV9TSVpF
KQotCQlyZXR1cm4gTlVMTDsKLQotCS8qCi0JICogRmluZCBhIHJlcXVlc3QgdGhhdCBhZnRlciB3
YWl0aW5nIHVwb24sIHRoZXJlIHdpbGwgYmUgYXQgbGVhc3QgaGFsZgotCSAqIHRoZSByaW5nIGF2
YWlsYWJsZS4gVGhlIGh5c3RlcmVzaXMgYWxsb3dzIHVzIHRvIGNvbXBldGUgZm9yIHRoZQotCSAq
IHNoYXJlZCByaW5nIGFuZCBzaG91bGQgbWVhbiB0aGF0IHdlIHNsZWVwIGxlc3Mgb2Z0ZW4gcHJp
b3IgdG8KLQkgKiBjbGFpbWluZyBvdXIgcmVzb3VyY2VzLCBidXQgbm90IHNvIGxvbmcgdGhhdCB0
aGUgcmluZyBjb21wbGV0ZWx5Ci0JICogZHJhaW5zIGJlZm9yZSB3ZSBjYW4gc3VibWl0IG91ciBu
ZXh0IHJlcXVlc3QuCi0JICovCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShycSwgJnJpbmctPnJlcXVl
c3RfbGlzdCwgcmluZ19saW5rKSB7Ci0JCWlmIChfX2ludGVsX3Jpbmdfc3BhY2UocnEtPnBvc3Rm
aXgsCi0JCQkJICAgICAgIHJpbmctPmVtaXQsIHJpbmctPnNpemUpID4gcmluZy0+c2l6ZSAvIDIp
Ci0JCQlicmVhazsKLQl9Ci0JaWYgKCZycS0+cmluZ19saW5rID09ICZyaW5nLT5yZXF1ZXN0X2xp
c3QpCi0JCXJldHVybiBOVUxMOyAvKiB3ZWlyZCwgd2Ugd2lsbCBjaGVjayBhZ2FpbiBsYXRlciBm
b3IgcmVhbCAqLwotCi0JcmV0dXJuIGk5MTVfcmVxdWVzdF9nZXQocnEpOwotfQotCi1zdGF0aWMg
aW50IGViX3dhaXRfZm9yX3JpbmcoY29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCi17
Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0JaW50IHJldCA9IDA7Ci0KLQkvKgotCSAqIEFw
cGx5IGEgbGlnaHQgYW1vdW50IG9mIGJhY2twcmVzc3VyZSB0byBwcmV2ZW50IGV4Y2Vzc2l2ZSBo
b2dzCi0JICogZnJvbSBibG9ja2luZyB3YWl0aW5nIGZvciBzcGFjZSB3aGlsc3QgaG9sZGluZyBz
dHJ1Y3RfbXV0ZXggYW5kCi0JICoga2VlcGluZyBhbGwgb2YgdGhlaXIgcmVzb3VyY2VzIHBpbm5l
ZC4KLQkgKi8KLQotCXJxID0gX19lYl93YWl0X2Zvcl9yaW5nKGViLT5jb250ZXh0LT5yaW5nKTsK
LQlpZiAocnEpIHsKLQkJbXV0ZXhfdW5sb2NrKCZlYi0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
Ci0KLQkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLAotCQkJCSAgICAgIEk5MTVfV0FJVF9JTlRF
UlJVUFRJQkxFLAotCQkJCSAgICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKSA8IDApCi0JCQlyZXQg
PSAtRUlOVFI7Ci0KLQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7Ci0KLQkJbXV0ZXhfbG9jaygmZWIt
Pmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0KIHN0YXRp
YyBpbnQgZWJfbG9va3VwX3ZtYXMoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiB7CiAJc3Ry
dWN0IHJhZGl4X3RyZWVfcm9vdCAqaGFuZGxlc192bWEgPSAmZWItPmdlbV9jb250ZXh0LT5oYW5k
bGVzX3ZtYTsKQEAgLTIxMjIsMTAgKzIwNjUsNzUgQEAgc3RhdGljIGNvbnN0IGVudW0gaW50ZWxf
ZW5naW5lX2lkIHVzZXJfcmluZ19tYXBbXSA9IHsKIAlbSTkxNV9FWEVDX1ZFQk9YXQk9IFZFQ1Mw
CiB9OwogCi1zdGF0aWMgaW50IGViX3Bpbl9jb250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIg
KmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVz
dCAqZWJfdGhyb3R0bGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRl
bF9yaW5nICpyaW5nID0gY2UtPnJpbmc7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IHJp
bmctPnRpbWVsaW5lOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJLyoKKwkgKiBDb21w
bGV0ZWx5IHVuc2NpZW50aWZpYyBmaW5nZXItaW4tdGhlLWFpciBlc3RpbWF0ZXMgZm9yIHN1aXRh
YmxlCisJICogbWF4aW11bSB1c2VyIHJlcXVlc3Qgc2l6ZSAodG8gYXZvaWQgYmxvY2tpbmcpIGFu
ZCB0aGVuIGJhY2tvZmYuCisJICovCisJaWYgKGludGVsX3JpbmdfdXBkYXRlX3NwYWNlKHJpbmcp
ID49IFBBR0VfU0laRSkKKwkJcmV0dXJuIE5VTEw7CisKKwkvKgorCSAqIEZpbmQgYSByZXF1ZXN0
IHRoYXQgYWZ0ZXIgd2FpdGluZyB1cG9uLCB0aGVyZSB3aWxsIGJlIGF0IGxlYXN0IGhhbGYKKwkg
KiB0aGUgcmluZyBhdmFpbGFibGUuIFRoZSBoeXN0ZXJlc2lzIGFsbG93cyB1cyB0byBjb21wZXRl
IGZvciB0aGUKKwkgKiBzaGFyZWQgcmluZyBhbmQgc2hvdWxkIG1lYW4gdGhhdCB3ZSBzbGVlcCBs
ZXNzIG9mdGVuIHByaW9yIHRvCisJICogY2xhaW1pbmcgb3VyIHJlc291cmNlcywgYnV0IG5vdCBz
byBsb25nIHRoYXQgdGhlIHJpbmcgY29tcGxldGVseQorCSAqIGRyYWlucyBiZWZvcmUgd2UgY2Fu
IHN1Ym1pdCBvdXIgbmV4dCByZXF1ZXN0LgorCSAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkocnEs
ICZ0bC0+cmVxdWVzdHMsIGxpbmspIHsKKwkJaWYgKHJxLT5yaW5nICE9IHJpbmcpCisJCQljb250
aW51ZTsKKworCQlpZiAoX19pbnRlbF9yaW5nX3NwYWNlKHJxLT5wb3N0Zml4LAorCQkJCSAgICAg
ICByaW5nLT5lbWl0LCByaW5nLT5zaXplKSA+IHJpbmctPnNpemUgLyAyKQorCQkJYnJlYWs7CisJ
fQorCWlmICgmcnEtPmxpbmsgPT0gJnRsLT5yZXF1ZXN0cykKKwkJcmV0dXJuIE5VTEw7IC8qIHdl
aXJkLCB3ZSB3aWxsIGNoZWNrIGFnYWluIGxhdGVyIGZvciByZWFsICovCisKKwlyZXR1cm4gaTkx
NV9yZXF1ZXN0X2dldChycSk7Cit9CisKK3N0YXRpYyBpbnQKK19fZWJfcGluX2NvbnRleHQoc3Ry
dWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKIAlp
bnQgZXJyOwogCisJaWYgKGxpa2VseShhdG9taWNfaW5jX25vdF96ZXJvKCZjZS0+cGluX2NvdW50
KSkpCisJCXJldHVybiAwOworCisJZXJyID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZlYi0+
aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVy
ciA9IF9faW50ZWxfY29udGV4dF9kb19waW4oY2UpOworCW11dGV4X3VubG9jaygmZWItPmk5MTUt
PmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIHZvaWQKK19f
ZWJfdW5waW5fY29udGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgc3RydWN0IGludGVs
X2NvbnRleHQgKmNlKQoreworCWlmIChsaWtlbHkoYXRvbWljX2FkZF91bmxlc3MoJmNlLT5waW5f
Y291bnQsIC0xLCAxKSkpCisJCXJldHVybjsKKworCW11dGV4X2xvY2soJmViLT5pOTE1LT5kcm0u
c3RydWN0X211dGV4KTsKKwlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwltdXRleF91bmxvY2so
JmViLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKK30KKworc3RhdGljIGludCBfX2ViX3Bpbl9l
bmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsOworCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxOworCWludCBlcnI7CisKIAkvKgogCSAqIEFCSTogQmVmb3JlIHVzZXJzcGFjZSBhY2Nlc3Nl
cyB0aGUgR1BVIChlLmcuIGV4ZWNidWZmZXIpLCByZXBvcnQKIAkgKiBFSU8gaWYgdGhlIEdQVSBp
cyBhbHJlYWR5IHdlZGdlZC4KQEAgLTIxMzksNyArMjE0Nyw3IEBAIHN0YXRpYyBpbnQgZWJfcGlu
X2NvbnRleHQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSkKIAkgKiBHR1RUIHNwYWNlLCBzbyBkbyB0aGlzIGZpcnN0IGJlZm9yZSB3ZSByZXNlcnZl
IGEgc2Vxbm8gZm9yCiAJICogb3Vyc2VsdmVzLgogCSAqLwotCWVyciA9IGludGVsX2NvbnRleHRf
cGluKGNlKTsKKwllcnIgPSBfX2ViX3Bpbl9jb250ZXh0KGViLCBjZSk7CiAJaWYgKGVycikKIAkJ
cmV0dXJuIGVycjsKIApAQCAtMjE1MCwyOSArMjE1OCw1MiBAQCBzdGF0aWMgaW50IGViX3Bpbl9j
b250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UpCiAJICogd2FrZXJlZiB0aGF0IHdlIGhvbGQgdW50aWwgdGhlIEdQVSBoYXMgYmVlbiBpZGxl
IGZvciBhdCBsZWFzdAogCSAqIDEwMG1zLgogCSAqLwotCWVyciA9IGludGVsX2NvbnRleHRfdGlt
ZWxpbmVfbG9jayhjZSk7Ci0JaWYgKGVycikKKwl0bCA9IGludGVsX2NvbnRleHRfdGltZWxpbmVf
bG9jayhjZSk7CisJaWYgKElTX0VSUih0bCkpIHsKKwkJZXJyID0gUFRSX0VSUih0bCk7CiAJCWdv
dG8gZXJyX3VucGluOworCX0KIAogCWludGVsX2NvbnRleHRfZW50ZXIoY2UpOwotCWludGVsX2Nv
bnRleHRfdGltZWxpbmVfdW5sb2NrKGNlKTsKKwlycSA9IGViX3Rocm90dGxlKGNlKTsKKworCWlu
dGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKHRsKTsKKworCWlmIChycSkgeworCQlpZiAoaTkx
NV9yZXF1ZXN0X3dhaXQocnEsCisJCQkJICAgICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUsCisJ
CQkJICAgICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpIDwgMCkgeworCQkJaTkxNV9yZXF1ZXN0X3B1
dChycSk7CisJCQllcnIgPSAtRUlOVFI7CisJCQlnb3RvIGVycl9leGl0OworCQl9CisKKwkJaTkx
NV9yZXF1ZXN0X3B1dChycSk7CisJfQogCiAJZWItPmVuZ2luZSA9IGNlLT5lbmdpbmU7CiAJZWIt
PmNvbnRleHQgPSBjZTsKIAlyZXR1cm4gMDsKIAorZXJyX2V4aXQ6CisJbXV0ZXhfbG9jaygmdGwt
Pm11dGV4KTsKKwlpbnRlbF9jb250ZXh0X2V4aXQoY2UpOworCWludGVsX2NvbnRleHRfdGltZWxp
bmVfdW5sb2NrKHRsKTsKIGVycl91bnBpbjoKLQlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwlf
X2ViX3VucGluX2NvbnRleHQoZWIsIGNlKTsKIAlyZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgdm9p
ZCBlYl91bnBpbl9jb250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQorc3RhdGljIHZv
aWQgZWJfdW5waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogewotCV9faW50
ZWxfY29udGV4dF90aW1lbGluZV9sb2NrKGViLT5jb250ZXh0KTsKLQlpbnRlbF9jb250ZXh0X2V4
aXQoZWItPmNvbnRleHQpOwotCWludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKGViLT5jb250
ZXh0KTsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBlYi0+Y29udGV4dDsKKwlzdHJ1Y3Qg
aW50ZWxfdGltZWxpbmUgKnRsID0gY2UtPnJpbmctPnRpbWVsaW5lOworCisJbXV0ZXhfbG9jaygm
dGwtPm11dGV4KTsKKwlpbnRlbF9jb250ZXh0X2V4aXQoY2UpOworCWludGVsX2NvbnRleHRfdGlt
ZWxpbmVfdW5sb2NrKHRsKTsKIAotCWludGVsX2NvbnRleHRfdW5waW4oZWItPmNvbnRleHQpOwor
CV9fZWJfdW5waW5fY29udGV4dChlYiwgY2UpOwogfQogCiBzdGF0aWMgdW5zaWduZWQgaW50CkBA
IC0yMjE3LDkgKzIyNDgsOSBAQCBlYl9zZWxlY3RfbGVnYWN5X3Jpbmcoc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIsCiB9CiAKIHN0YXRpYyBpbnQKLWViX3NlbGVjdF9lbmdpbmUoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIsCi0JCSBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCi0JCSBzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXIyICphcmdzKQorZWJfcGluX2VuZ2luZShzdHJ1Y3QgaTkx
NV9leGVjYnVmZmVyICplYiwKKwkgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCisJICAgICAg
c3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyMiAqYXJncykKIHsKIAlzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2U7CiAJdW5zaWduZWQgaW50IGlkeDsKQEAgLTIyMzQsNyArMjI2NSw3IEBAIGVi
X3NlbGVjdF9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJaWYgKElTX0VSUihj
ZSkpCiAJCXJldHVybiBQVFJfRVJSKGNlKTsKIAotCWVyciA9IGViX3Bpbl9jb250ZXh0KGViLCBj
ZSk7CisJZXJyID0gX19lYl9waW5fZW5naW5lKGViLCBjZSk7CiAJaW50ZWxfY29udGV4dF9wdXQo
Y2UpOwogCiAJcmV0dXJuIGVycjsKQEAgLTI0NTIsMTYgKzI0ODMsMTIgQEAgaTkxNV9nZW1fZG9f
ZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIpKQog
CQlnb3RvIGVycl9kZXN0cm95OwogCi0JZXJyID0gaTkxNV9tdXRleF9sb2NrX2ludGVycnVwdGli
bGUoZGV2KTsKLQlpZiAoZXJyKQotCQlnb3RvIGVycl9jb250ZXh0OwotCi0JZXJyID0gZWJfc2Vs
ZWN0X2VuZ2luZSgmZWIsIGZpbGUsIGFyZ3MpOworCWVyciA9IGViX3Bpbl9lbmdpbmUoJmViLCBm
aWxlLCBhcmdzKTsKIAlpZiAodW5saWtlbHkoZXJyKSkKLQkJZ290byBlcnJfdW5sb2NrOworCQln
b3RvIGVycl9jb250ZXh0OwogCi0JZXJyID0gZWJfd2FpdF9mb3JfcmluZygmZWIpOyAvKiBtYXkg
dGVtcG9yYXJpbHkgZHJvcCBzdHJ1Y3RfbXV0ZXggKi8KLQlpZiAodW5saWtlbHkoZXJyKSkKKwll
cnIgPSBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShkZXYpOworCWlmIChlcnIpCiAJCWdv
dG8gZXJyX2VuZ2luZTsKIAogCWVyciA9IGViX3JlbG9jYXRlKCZlYik7CkBAIC0yNjE1LDEwICsy
NjQyLDkgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAog
ZXJyX3ZtYToKIAlpZiAoZWIuZXhlYykKIAkJZWJfcmVsZWFzZV92bWFzKCZlYik7Ci1lcnJfZW5n
aW5lOgotCWViX3VucGluX2NvbnRleHQoJmViKTsKLWVycl91bmxvY2s6CiAJbXV0ZXhfdW5sb2Nr
KCZkZXYtPnN0cnVjdF9tdXRleCk7CitlcnJfZW5naW5lOgorCWViX3VucGluX2VuZ2luZSgmZWIp
OwogZXJyX2NvbnRleHQ6CiAJaTkxNV9nZW1fY29udGV4dF9wdXQoZWIuZ2VtX2NvbnRleHQpOwog
ZXJyX2Rlc3Ryb3k6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9j
b250ZXh0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKaW5kZXgg
MDY1YmE0YWM0ZTg3Li4zOGI2MGNiZjI1OTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2NvbnRleHQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9jb250ZXh0LmgKQEAgLTEyLDYgKzEyLDcgQEAKICNpbmNsdWRlICJpOTE1X2FjdGl2ZS5oIgog
I2luY2x1ZGUgImludGVsX2NvbnRleHRfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVf
dHlwZXMuaCIKKyNpbmNsdWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgogCiB2b2lkIGludGVs
X2NvbnRleHRfaW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQlzdHJ1Y3QgaTkxNV9n
ZW1fY29udGV4dCAqY3R4LApAQCAtMTI2LDI0ICsxMjcsMjQgQEAgc3RhdGljIGlubGluZSB2b2lk
IGludGVsX2NvbnRleHRfcHV0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAlrcmVmX3B1dCgm
Y2UtPnJlZiwgY2UtPm9wcy0+ZGVzdHJveSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZAotX19p
bnRlbF9jb250ZXh0X3RpbWVsaW5lX2xvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQotCV9f
YWNxdWlyZXMoJmNlLT5yaW5nLT50aW1lbGluZS0+bXV0ZXgpCi17Ci0JbXV0ZXhfbG9jaygmY2Ut
PnJpbmctPnRpbWVsaW5lLT5tdXRleCk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgaW50IF9fbXVzdF9j
aGVjaworc3RhdGljIGlubGluZSBzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKl9fbXVzdF9jaGVjawog
aW50ZWxfY29udGV4dF90aW1lbGluZV9sb2NrKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAlf
X2FjcXVpcmVzKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KQogewotCXJldHVybiBtdXRleF9s
b2NrX2ludGVycnVwdGlibGUoJmNlLT5yaW5nLT50aW1lbGluZS0+bXV0ZXgpOworCXN0cnVjdCBp
bnRlbF90aW1lbGluZSAqdGwgPSBjZS0+cmluZy0+dGltZWxpbmU7CisJaW50IGVycjsKKworCWVy
ciA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmdGwtPm11dGV4KTsKKwlpZiAoZXJyKQorCQly
ZXR1cm4gRVJSX1BUUihlcnIpOworCisJcmV0dXJuIHRsOwogfQogCi1zdGF0aWMgaW5saW5lIHZv
aWQgaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQotCV9fcmVsZWFzZXMoJmNlLT5yaW5nLT50aW1lbGluZS0+bXV0ZXgpCitzdGF0aWMgaW5saW5l
IHZvaWQgaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2soc3RydWN0IGludGVsX3RpbWVsaW5l
ICp0bCkKKwlfX3JlbGVhc2VzKCZ0bC0+bXV0ZXgpCiB7Ci0JbXV0ZXhfdW5sb2NrKCZjZS0+cmlu
Zy0+dGltZWxpbmUtPm11dGV4KTsKKwltdXRleF91bmxvY2soJnRsLT5tdXRleCk7CiB9CiAKIHN0
cnVjdCBpOTE1X3JlcXVlc3QgKmludGVsX2NvbnRleHRfY3JlYXRlX3JlcXVlc3Qoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2Nz
LmMKaW5kZXggZDE1MDhmMGI0Yzg0Li5iMjdmYzU1NWZlMDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCkBAIC03NDUsNyArNzQ1LDYgQEAgc3RhdGljIGludCBt
ZWFzdXJlX2JyZWFkY3J1bWJfZHcoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJ
CWVuZ2luZS0+c3RhdHVzX3BhZ2Uudm1hKSkKIAkJZ290byBvdXRfZnJhbWU7CiAKLQlJTklUX0xJ
U1RfSEVBRCgmZnJhbWUtPnJpbmcucmVxdWVzdF9saXN0KTsKIAlmcmFtZS0+cmluZy50aW1lbGlu
ZSA9ICZmcmFtZS0+dGltZWxpbmU7CiAJZnJhbWUtPnJpbmcudmFkZHIgPSBmcmFtZS0+Y3M7CiAJ
ZnJhbWUtPnJpbmcuc2l6ZSA9IHNpemVvZihmcmFtZS0+Y3MpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAppbmRleCA3ZTA1NjExNDM0NGUuLjBkZGU3ZTA0
YjEwMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5
cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgK
QEAgLTY5LDggKzY5LDYgQEAgc3RydWN0IGludGVsX3JpbmcgewogCXZvaWQgKnZhZGRyOwogCiAJ
c3RydWN0IGludGVsX3RpbWVsaW5lICp0aW1lbGluZTsKLQlzdHJ1Y3QgbGlzdF9oZWFkIHJlcXVl
c3RfbGlzdDsKLQlzdHJ1Y3QgbGlzdF9oZWFkIGFjdGl2ZV9saW5rOwogCiAJLyoKIAkgKiBBcyB3
ZSBoYXZlIHR3byB0eXBlcyBvZiByaW5ncywgb25lIGdsb2JhbCB0byB0aGUgZW5naW5lIHVzZWQK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCmluZGV4IDhjY2E2YjIyYjM4Ni4uNDZkMjRkOWQ2
MmFjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKQEAgLTE0LDcgKzE0LDYgQEAgdm9p
ZCBpbnRlbF9ndF9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KQogCWd0LT5pOTE1ID0gaTkxNTsKIAlndC0+dW5jb3JlID0gJmk5MTUt
PnVuY29yZTsKIAotCUlOSVRfTElTVF9IRUFEKCZndC0+YWN0aXZlX3JpbmdzKTsKIAlJTklUX0xJ
U1RfSEVBRCgmZ3QtPmNsb3NlZF92bWEpOwogCiAJc3Bpbl9sb2NrX2luaXQoJmd0LT5jbG9zZWRf
bG9jayk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF90eXBl
cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaAppbmRleCBjZmQ0
MWU2YzU0ZTEuLmY0M2VhODMwYjFlOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dF90eXBlcy5oCkBAIC0zNCw4ICszNCw2IEBAIHN0cnVjdCBpbnRlbF9ndCB7CiAJCXN0cnVjdCBs
aXN0X2hlYWQgaHdzcF9mcmVlX2xpc3Q7CiAJfSB0aW1lbGluZXM7CiAKLQlzdHJ1Y3QgbGlzdF9o
ZWFkIGFjdGl2ZV9yaW5nczsKLQogCXN0cnVjdCBpbnRlbF93YWtlcmVmIHdha2VyZWY7CiAKIAlz
dHJ1Y3QgbGlzdF9oZWFkIGNsb3NlZF92bWE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9yaW5nYnVmZmVyLmMKaW5kZXggZjA5NDQwNmRjYzU2Li5hMTY1ZTg4NTViNTYgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKQEAgLTEyOTAsNyArMTI5MCw2
IEBAIGludGVsX2VuZ2luZV9jcmVhdGVfcmluZyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUsCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwogCiAJa3JlZl9pbml0KCZyaW5nLT5yZWYp
OwotCUlOSVRfTElTVF9IRUFEKCZyaW5nLT5yZXF1ZXN0X2xpc3QpOwogCXJpbmctPnRpbWVsaW5l
ID0gaW50ZWxfdGltZWxpbmVfZ2V0KHRpbWVsaW5lKTsKIAogCXJpbmctPnNpemUgPSBzaXplOwpA
QCAtMTgxNCwyMSArMTgxMywyNSBAQCBzdGF0aWMgaW50IHJpbmdfcmVxdWVzdF9hbGxvYyhzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCiBzdGF0aWMgbm9pbmxpbmUgaW50IHdhaXRfZm9y
X3NwYWNlKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nLCB1bnNpZ25lZCBpbnQgYnl0ZXMpCiB7CisJ
c3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IHJpbmctPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnRhcmdldDsKIAlsb25nIHRpbWVvdXQ7CiAKIAlpZiAoaW50ZWxfcmluZ191cGRh
dGVfc3BhY2UocmluZykgPj0gYnl0ZXMpCiAJCXJldHVybiAwOwogCi0JR0VNX0JVR19PTihsaXN0
X2VtcHR5KCZyaW5nLT5yZXF1ZXN0X2xpc3QpKTsKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5KHRhcmdl
dCwgJnJpbmctPnJlcXVlc3RfbGlzdCwgcmluZ19saW5rKSB7CisJR0VNX0JVR19PTihsaXN0X2Vt
cHR5KCZ0bC0+cmVxdWVzdHMpKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHRhcmdldCwgJnRsLT5y
ZXF1ZXN0cywgbGluaykgeworCQlpZiAodGFyZ2V0LT5yaW5nICE9IHJpbmcpCisJCQljb250aW51
ZTsKKwogCQkvKiBXb3VsZCBjb21wbGV0aW9uIG9mIHRoaXMgcmVxdWVzdCBmcmVlIGVub3VnaCBz
cGFjZT8gKi8KIAkJaWYgKGJ5dGVzIDw9IF9faW50ZWxfcmluZ19zcGFjZSh0YXJnZXQtPnBvc3Rm
aXgsCiAJCQkJCQlyaW5nLT5lbWl0LCByaW5nLT5zaXplKSkKIAkJCWJyZWFrOwogCX0KIAotCWlm
IChXQVJOX09OKCZ0YXJnZXQtPnJpbmdfbGluayA9PSAmcmluZy0+cmVxdWVzdF9saXN0KSkKKwlp
ZiAoR0VNX1dBUk5fT04oJnRhcmdldC0+bGluayA9PSAmdGwtPnJlcXVlc3RzKSkKIAkJcmV0dXJu
IC1FTk9TUEM7CiAKIAl0aW1lb3V0ID0gaTkxNV9yZXF1ZXN0X3dhaXQodGFyZ2V0LApkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKaW5kZXggYTQ4YjM2ZDMxZTY1Li41YmNiNDYxYjgz
NzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwpAQCAtNjgsNyArNjgsNiBA
QCBzdGF0aWMgc3RydWN0IGludGVsX3JpbmcgKm1vY2tfcmluZyhzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCiAJcmluZy0+YmFzZS50aW1lbGluZSA9ICZyaW5nLT50aW1lbGluZTsKIAlh
dG9taWNfc2V0KCZyaW5nLT5iYXNlLnBpbl9jb3VudCwgMSk7CiAKLQlJTklUX0xJU1RfSEVBRCgm
cmluZy0+YmFzZS5yZXF1ZXN0X2xpc3QpOwogCWludGVsX3JpbmdfdXBkYXRlX3NwYWNlKCZyaW5n
LT5iYXNlKTsKIAogCXJldHVybiAmcmluZy0+YmFzZTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1
ZXN0LmMKaW5kZXggNWZmODdjNGEwY2Q1Li43OGY3OWNiNDdlNWYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcmVxdWVzdC5jCkBAIC0xODAsNDAgKzE4MCw2IEBAIGk5MTVfcmVxdWVzdF9yZW1vdmVf
ZnJvbV9jbGllbnQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAlzcGluX3VubG9jaygm
ZmlsZV9wcml2LT5tbS5sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgYWR2YW5jZV9yaW5nKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCi17Ci0Jc3RydWN0IGludGVsX3JpbmcgKnJpbmcgPSBy
ZXF1ZXN0LT5yaW5nOwotCXVuc2lnbmVkIGludCB0YWlsOwotCi0JLyoKLQkgKiBXZSBrbm93IHRo
ZSBHUFUgbXVzdCBoYXZlIHJlYWQgdGhlIHJlcXVlc3QgdG8gaGF2ZQotCSAqIHNlbnQgdXMgdGhl
IHNlcW5vICsgaW50ZXJydXB0LCBzbyB1c2UgdGhlIHBvc2l0aW9uCi0JICogb2YgdGFpbCBvZiB0
aGUgcmVxdWVzdCB0byB1cGRhdGUgdGhlIGxhc3Qga25vd24gcG9zaXRpb24KLQkgKiBvZiB0aGUg
R1BVIGhlYWQuCi0JICoKLQkgKiBOb3RlIHRoaXMgcmVxdWlyZXMgdGhhdCB3ZSBhcmUgYWx3YXlz
IGNhbGxlZCBpbiByZXF1ZXN0Ci0JICogY29tcGxldGlvbiBvcmRlci4KLQkgKi8KLQlHRU1fQlVH
X09OKCFsaXN0X2lzX2ZpcnN0KCZyZXF1ZXN0LT5yaW5nX2xpbmssICZyaW5nLT5yZXF1ZXN0X2xp
c3QpKTsKLQlpZiAobGlzdF9pc19sYXN0KCZyZXF1ZXN0LT5yaW5nX2xpbmssICZyaW5nLT5yZXF1
ZXN0X2xpc3QpKSB7Ci0JCS8qCi0JCSAqIFdlIG1heSByYWNlIGhlcmUgd2l0aCBleGVjbGlzdHMg
cmVzdWJtaXR0aW5nIHRoaXMgcmVxdWVzdAotCQkgKiBhcyB3ZSByZXRpcmUgaXQuIFRoZSByZXN1
Ym1pc3Npb24gd2lsbCBtb3ZlIHRoZSByaW5nLT50YWlsCi0JCSAqIGZvcndhcmRzICh0byByZXF1
ZXN0LT53YV90YWlsKS4gV2UgZWl0aGVyIHJlYWQgdGhlCi0JCSAqIGN1cnJlbnQgdmFsdWUgdGhh
dCB3YXMgd3JpdHRlbiB0byBodywgb3IgdGhlIHZhbHVlIHRoYXQKLQkJICogaXMganVzdCBhYm91
dCB0byBiZS4gRWl0aGVyIHdvcmtzLCBpZiB3ZSBtaXNzIHRoZSBsYXN0IHR3bwotCQkgKiBub29w
cyAtIHRoZXkgYXJlIHNhZmUgdG8gYmUgcmVwbGF5ZWQgb24gYSByZXNldC4KLQkJICovCi0JCXRh
aWwgPSBSRUFEX09OQ0UocmVxdWVzdC0+dGFpbCk7Ci0JCWxpc3RfZGVsKCZyaW5nLT5hY3RpdmVf
bGluayk7Ci0JfSBlbHNlIHsKLQkJdGFpbCA9IHJlcXVlc3QtPnBvc3RmaXg7Ci0JfQotCWxpc3Rf
ZGVsX2luaXQoJnJlcXVlc3QtPnJpbmdfbGluayk7Ci0KLQlyaW5nLT5oZWFkID0gdGFpbDsKLX0K
LQogc3RhdGljIHZvaWQgZnJlZV9jYXB0dXJlX2xpc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVx
dWVzdCkKIHsKIAlzdHJ1Y3QgaTkxNV9jYXB0dXJlX2xpc3QgKmNhcHR1cmU7CkBAIC0yMzEsNyAr
MTk3LDcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCAqYWN0aXZlLCAqbmV4dDsK
IAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJxLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwls
b2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11dGV4KTsKIAlpZiAoIWk5MTVfcmVx
dWVzdF9jb21wbGV0ZWQocnEpKQogCQlyZXR1cm4gZmFsc2U7CiAKQEAgLTI0Myw3ICsyMDksMTYg
QEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKIAlHRU1fQlVHX09OKCFpOTE1X3N3X2ZlbmNlX3NpZ25hbGVkKCZycS0+c3VibWl0KSk7CiAJ
dHJhY2VfaTkxNV9yZXF1ZXN0X3JldGlyZShycSk7CiAKLQlhZHZhbmNlX3JpbmcocnEpOworCS8q
CisJICogV2Uga25vdyB0aGUgR1BVIG11c3QgaGF2ZSByZWFkIHRoZSByZXF1ZXN0IHRvIGhhdmUK
KwkgKiBzZW50IHVzIHRoZSBzZXFubyArIGludGVycnVwdCwgc28gdXNlIHRoZSBwb3NpdGlvbgor
CSAqIG9mIHRhaWwgb2YgdGhlIHJlcXVlc3QgdG8gdXBkYXRlIHRoZSBsYXN0IGtub3duIHBvc2l0
aW9uCisJICogb2YgdGhlIEdQVSBoZWFkLgorCSAqCisJICogTm90ZSB0aGlzIHJlcXVpcmVzIHRo
YXQgd2UgYXJlIGFsd2F5cyBjYWxsZWQgaW4gcmVxdWVzdAorCSAqIGNvbXBsZXRpb24gb3JkZXIu
CisJICovCisJcnEtPnJpbmctPmhlYWQgPSBycS0+cG9zdGZpeDsKIAogCS8qCiAJICogV2FsayB0
aHJvdWdoIHRoZSBhY3RpdmUgbGlzdCwgY2FsbGluZyByZXRpcmUgb24gZWFjaC4gVGhpcyBhbGxv
d3MKQEAgLTMyMCw3ICsyOTUsNyBAQCBzdGF0aWMgYm9vbCBpOTE1X3JlcXVlc3RfcmV0aXJlKHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCiB2b2lkIGk5MTVfcmVxdWVzdF9yZXRpcmVfdXB0byhz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZyA9IHJx
LT5yaW5nOworCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqIGNvbnN0IHRsID0gcnEtPnRpbWVsaW5l
OwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnRtcDsKIAogCUdFTV9UUkFDRSgiJXMgZmVuY2UgJWxs
eDolbGxkLCBjdXJyZW50ICVkXG4iLApAQCAtMzI4LDE1ICszMDMsMTEgQEAgdm9pZCBpOTE1X3Jl
cXVlc3RfcmV0aXJlX3VwdG8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJCSAgcnEtPmZlbmNl
LmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubywKIAkJICBod3NwX3NlcW5vKHJxKSk7CiAKLQlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZycS0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisJbG9ja2RlcF9h
c3NlcnRfaGVsZCgmdGwtPm11dGV4KTsKIAlHRU1fQlVHX09OKCFpOTE1X3JlcXVlc3RfY29tcGxl
dGVkKHJxKSk7CiAKLQlpZiAobGlzdF9lbXB0eSgmcnEtPnJpbmdfbGluaykpCi0JCXJldHVybjsK
LQogCWRvIHsKLQkJdG1wID0gbGlzdF9maXJzdF9lbnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LAot
CQkJCSAgICAgICB0eXBlb2YoKnRtcCksIHJpbmdfbGluayk7CisJCXRtcCA9IGxpc3RfZmlyc3Rf
ZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCp0bXApLCBsaW5rKTsKIAl9IHdoaWxlIChpOTE1
X3JlcXVlc3RfcmV0aXJlKHRtcCkgJiYgdG1wICE9IHJxKTsKIH0KIApAQCAtNTYzLDI5ICs1MzQs
MjggQEAgc2VtYXBob3JlX25vdGlmeShzdHJ1Y3QgaTkxNV9zd19mZW5jZSAqZmVuY2UsIGVudW0g
aTkxNV9zd19mZW5jZV9ub3RpZnkgc3RhdGUpCiAJcmV0dXJuIE5PVElGWV9ET05FOwogfQogCi1z
dGF0aWMgdm9pZCByaW5nX3JldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykK
K3N0YXRpYyB2b2lkIHJldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsKQog
ewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5
X3NhZmUocnEsIHJuLCAmcmluZy0+cmVxdWVzdF9saXN0LCByaW5nX2xpbmspCisJbGlzdF9mb3Jf
ZWFjaF9lbnRyeV9zYWZlKHJxLCBybiwgJnRsLT5yZXF1ZXN0cywgbGluaykKIAkJaWYgKCFpOTE1
X3JlcXVlc3RfcmV0aXJlKHJxKSkKIAkJCWJyZWFrOwogfQogCiBzdGF0aWMgbm9pbmxpbmUgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqCi1yZXF1ZXN0X2FsbG9jX3Nsb3coc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlLCBnZnBfdCBnZnApCityZXF1ZXN0X2FsbG9jX3Nsb3coc3RydWN0IGludGVsX3RpbWVs
aW5lICp0bCwgZ2ZwX3QgZ2ZwKQogewotCXN0cnVjdCBpbnRlbF9yaW5nICpyaW5nID0gY2UtPnJp
bmc7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAKLQlpZiAobGlzdF9lbXB0eSgmcmluZy0+
cmVxdWVzdF9saXN0KSkKKwlpZiAobGlzdF9lbXB0eSgmdGwtPnJlcXVlc3RzKSkKIAkJZ290byBv
dXQ7CiAKIAlpZiAoIWdmcGZsYWdzX2FsbG93X2Jsb2NraW5nKGdmcCkpCiAJCWdvdG8gb3V0Owog
CiAJLyogTW92ZSBvdXIgb2xkZXN0IHJlcXVlc3QgdG8gdGhlIHNsYWItY2FjaGUgKGlmIG5vdCBp
biB1c2UhKSAqLwotCXJxID0gbGlzdF9maXJzdF9lbnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LCB0
eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKKwlycSA9IGxpc3RfZmlyc3RfZW50cnkoJnRsLT5yZXF1
ZXN0cywgdHlwZW9mKCpycSksIGxpbmspOwogCWk5MTVfcmVxdWVzdF9yZXRpcmUocnEpOwogCiAJ
cnEgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3RzLApAQCAtNTk0LDExICs1
NjQsMTEgQEAgcmVxdWVzdF9hbGxvY19zbG93KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgZ2Zw
X3QgZ2ZwKQogCQlyZXR1cm4gcnE7CiAKIAkvKiBSYXRlbGltaXQgb3Vyc2VsdmVzIHRvIHByZXZl
bnQgb29tIGZyb20gbWFsaWNpb3VzIGNsaWVudHMgKi8KLQlycSA9IGxpc3RfbGFzdF9lbnRyeSgm
cmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKKwlycSA9IGxpc3Rf
bGFzdF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnJxKSwgbGluayk7CiAJY29uZF9zeW5j
aHJvbml6ZV9yY3UocnEtPnJjdXN0YXRlKTsKIAogCS8qIFJldGlyZSBvdXIgb2xkIHJlcXVlc3Rz
IGluIHRoZSBob3BlIHRoYXQgd2UgZnJlZSBzb21lICovCi0JcmluZ19yZXRpcmVfcmVxdWVzdHMo
cmluZyk7CisJcmV0aXJlX3JlcXVlc3RzKHRsKTsKIAogb3V0OgogCXJldHVybiBrbWVtX2NhY2hl
X2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3RzLCBnZnApOwpAQCAtNjQ5LDcgKzYxOSw3IEBAIF9f
aTkxNV9yZXF1ZXN0X2NyZWF0ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGdmcF90IGdmcCkK
IAlycSA9IGttZW1fY2FjaGVfYWxsb2MoZ2xvYmFsLnNsYWJfcmVxdWVzdHMsCiAJCQkgICAgICBn
ZnAgfCBfX0dGUF9SRVRSWV9NQVlGQUlMIHwgX19HRlBfTk9XQVJOKTsKIAlpZiAodW5saWtlbHko
IXJxKSkgewotCQlycSA9IHJlcXVlc3RfYWxsb2Nfc2xvdyhjZSwgZ2ZwKTsKKwkJcnEgPSByZXF1
ZXN0X2FsbG9jX3Nsb3codGwsIGdmcCk7CiAJCWlmICghcnEpIHsKIAkJCXJldCA9IC1FTk9NRU07
CiAJCQlnb3RvIGVycl91bnJlc2VydmU7CkBAIC03NDEsMTUgKzcxMSwxNSBAQCBzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICoKIGk5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCWludCBlcnI7CisJc3RydWN0IGludGVs
X3RpbWVsaW5lICp0bDsKIAotCWVyciA9IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7
Ci0JaWYgKGVycikKLQkJcmV0dXJuIEVSUl9QVFIoZXJyKTsKKwl0bCA9IGludGVsX2NvbnRleHRf
dGltZWxpbmVfbG9jayhjZSk7CisJaWYgKElTX0VSUih0bCkpCisJCXJldHVybiBFUlJfQ0FTVCh0
bCk7CiAKIAkvKiBNb3ZlIG91ciBvbGRlc3QgcmVxdWVzdCB0byB0aGUgc2xhYi1jYWNoZSAoaWYg
bm90IGluIHVzZSEpICovCi0JcnEgPSBsaXN0X2ZpcnN0X2VudHJ5KCZjZS0+cmluZy0+cmVxdWVz
dF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKLQlpZiAoIWxpc3RfaXNfbGFzdCgmcnEt
PnJpbmdfbGluaywgJmNlLT5yaW5nLT5yZXF1ZXN0X2xpc3QpKQorCXJxID0gbGlzdF9maXJzdF9l
bnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnJxKSwgbGluayk7CisJaWYgKCFsaXN0X2lzX2xh
c3QoJnJxLT5saW5rLCAmdGwtPnJlcXVlc3RzKSkKIAkJaTkxNV9yZXF1ZXN0X3JldGlyZShycSk7
CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsKQEAgLTc1OSwyMiArNzI5LDIyIEBAIGk5MTVf
cmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCQlnb3RvIGVycl91bmxv
Y2s7CiAKIAkvKiBDaGVjayB0aGF0IHdlIGRvIG5vdCBpbnRlcnJ1cHQgb3Vyc2VsdmVzIHdpdGgg
YSBuZXcgcmVxdWVzdCAqLwotCXJxLT5jb29raWUgPSBsb2NrZGVwX3Bpbl9sb2NrKCZjZS0+cmlu
Zy0+dGltZWxpbmUtPm11dGV4KTsKKwlycS0+Y29va2llID0gbG9ja2RlcF9waW5fbG9jaygmdGwt
Pm11dGV4KTsKIAogCXJldHVybiBycTsKIAogZXJyX3VubG9jazoKLQlpbnRlbF9jb250ZXh0X3Rp
bWVsaW5lX3VubG9jayhjZSk7CisJaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2sodGwpOwog
CXJldHVybiBycTsKIH0KIAogc3RhdGljIGludAogaTkxNV9yZXF1ZXN0X2F3YWl0X3N0YXJ0KHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzaWduYWwpCiB7Ci0J
aWYgKGxpc3RfaXNfZmlyc3QoJnNpZ25hbC0+cmluZ19saW5rLCAmc2lnbmFsLT5yaW5nLT5yZXF1
ZXN0X2xpc3QpKQorCWlmIChsaXN0X2lzX2ZpcnN0KCZzaWduYWwtPmxpbmssICZzaWduYWwtPnJp
bmctPnRpbWVsaW5lLT5yZXF1ZXN0cykpCiAJCXJldHVybiAwOwogCi0Jc2lnbmFsID0gbGlzdF9w
cmV2X2VudHJ5KHNpZ25hbCwgcmluZ19saW5rKTsKKwlzaWduYWwgPSBsaXN0X3ByZXZfZW50cnko
c2lnbmFsLCBsaW5rKTsKIAlpZiAoaW50ZWxfdGltZWxpbmVfc3luY19pc19sYXRlcihycS0+dGlt
ZWxpbmUsICZzaWduYWwtPmZlbmNlKSkKIAkJcmV0dXJuIDA7CiAKQEAgLTExNjcsNiArMTEzNyw3
IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9yZXF1ZXN0X2NvbW1pdChzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpycSkKIAkgKi8KIAlHRU1fQlVHX09OKHJxLT5yZXNlcnZlZF9zcGFjZSA+IHJp
bmctPnNwYWNlKTsKIAlycS0+cmVzZXJ2ZWRfc3BhY2UgPSAwOworCXJxLT5lbWl0dGVkX2ppZmZp
ZXMgPSBqaWZmaWVzOwogCiAJLyoKIAkgKiBSZWNvcmQgdGhlIHBvc2l0aW9uIG9mIHRoZSBzdGFy
dCBvZiB0aGUgYnJlYWRjcnVtYiBzbyB0aGF0CkBAIC0xMTgwLDExICsxMTUxLDYgQEAgc3RydWN0
IGk5MTVfcmVxdWVzdCAqX19pOTE1X3JlcXVlc3RfY29tbWl0KHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQogCiAJcHJldiA9IF9faTkxNV9yZXF1ZXN0X2FkZF90b190aW1lbGluZShycSk7CiAKLQls
aXN0X2FkZF90YWlsKCZycS0+cmluZ19saW5rLCAmcmluZy0+cmVxdWVzdF9saXN0KTsKLQlpZiAo
bGlzdF9pc19maXJzdCgmcnEtPnJpbmdfbGluaywgJnJpbmctPnJlcXVlc3RfbGlzdCkpCi0JCWxp
c3RfYWRkKCZyaW5nLT5hY3RpdmVfbGluaywgJnJxLT5pOTE1LT5ndC5hY3RpdmVfcmluZ3MpOwot
CXJxLT5lbWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwotCiAJLyoKIAkgKiBMZXQgdGhlIGJhY2tl
bmQga25vdyBhIG5ldyByZXF1ZXN0IGhhcyBhcnJpdmVkIHRoYXQgbWF5IG5lZWQKIAkgKiB0byBh
ZGp1c3QgdGhlIGV4aXN0aW5nIGV4ZWN1dGlvbiBzY2hlZHVsZSBkdWUgdG8gYSBoaWdoIHByaW9y
aXR5CkBAIC0xMjM3LDEwICsxMjAzLDExIEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9y
ZXF1ZXN0X2NvbW1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogdm9pZCBpOTE1X3JlcXVl
c3RfYWRkKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogeworCXN0cnVjdCBpbnRlbF90aW1lbGlu
ZSAqIGNvbnN0IHRsID0gcnEtPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnByZXY7
CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11dGV4KTsKLQlsb2NrZGVw
X3VucGluX2xvY2soJnJxLT50aW1lbGluZS0+bXV0ZXgsIHJxLT5jb29raWUpOworCWxvY2tkZXBf
YXNzZXJ0X2hlbGQoJnRsLT5tdXRleCk7CisJbG9ja2RlcF91bnBpbl9sb2NrKCZ0bC0+bXV0ZXgs
IHJxLT5jb29raWUpOwogCiAJdHJhY2VfaTkxNV9yZXF1ZXN0X2FkZChycSk7CiAKQEAgLTEyNjMs
MTAgKzEyMzAsMTAgQEAgdm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQogCSAqIHdvcmsgb24gYmVoYWxmIG9mIG90aGVycyAtLSBidXQgaW5zdGVhZCB3ZSBzaG91
bGQgYmVuZWZpdCBmcm9tCiAJICogaW1wcm92ZWQgcmVzb3VyY2UgbWFuYWdlbWVudC4gKFdlbGws
IHRoYXQncyB0aGUgdGhlb3J5IGF0IGxlYXN0LikKIAkgKi8KLQlpZiAocHJldiAmJiBpOTE1X3Jl
cXVlc3RfY29tcGxldGVkKHByZXYpKQorCWlmIChwcmV2ICYmIGk5MTVfcmVxdWVzdF9jb21wbGV0
ZWQocHJldikgJiYgcHJldi0+dGltZWxpbmUgPT0gdGwpCiAJCWk5MTVfcmVxdWVzdF9yZXRpcmVf
dXB0byhwcmV2KTsKIAotCW11dGV4X3VubG9jaygmcnEtPnRpbWVsaW5lLT5tdXRleCk7CisJbXV0
ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogfQogCiBzdGF0aWMgdW5zaWduZWQgbG9uZyBsb2NhbF9j
bG9ja191cyh1bnNpZ25lZCBpbnQgKmNwdSkKQEAgLTE0ODcsMTggKzE0NTQsNDIgQEAgbG9uZyBp
OTE1X3JlcXVlc3Rfd2FpdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAogYm9vbCBpOTE1X3Jl
dGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKLQlzdHJ1Y3Qg
aW50ZWxfcmluZyAqcmluZywgKnRtcDsKKwlzdHJ1Y3QgaW50ZWxfZ3RfdGltZWxpbmVzICp0aW1l
bGluZXMgPSAmaTkxNS0+Z3QudGltZWxpbmVzOworCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGws
ICp0bjsKKwlMSVNUX0hFQUQoZnJlZSk7CisKKwlzcGluX2xvY2soJnRpbWVsaW5lcy0+bG9jayk7
CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHRsLCB0biwgJnRpbWVsaW5lcy0+YWN0aXZlX2xp
c3QsIGxpbmspIHsKKwkJaWYgKCFtdXRleF90cnlsb2NrKCZ0bC0+bXV0ZXgpKQorCQkJY29udGlu
dWU7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwkJ
aW50ZWxfdGltZWxpbmVfZ2V0KHRsKTsKKwkJR0VNX0JVR19PTighdGwtPmFjdGl2ZV9jb3VudCk7
CisJCXRsLT5hY3RpdmVfY291bnQrKzsgLyogcGluIHRoZSBsaXN0IGVsZW1lbnQgKi8KKwkJc3Bp
bl91bmxvY2soJnRpbWVsaW5lcy0+bG9jayk7CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUo
cmluZywgdG1wLAotCQkJCSAmaTkxNS0+Z3QuYWN0aXZlX3JpbmdzLCBhY3RpdmVfbGluaykgewot
CQlpbnRlbF9yaW5nX2dldChyaW5nKTsgLyogbGFzdCBycSBob2xkcyByZWZlcmVuY2UhICovCi0J
CXJpbmdfcmV0aXJlX3JlcXVlc3RzKHJpbmcpOwotCQlpbnRlbF9yaW5nX3B1dChyaW5nKTsKKwkJ
cmV0aXJlX3JlcXVlc3RzKHRsKTsKKwkJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOworCisJCXNw
aW5fbG9jaygmdGltZWxpbmVzLT5sb2NrKTsKKworCQkvKiBSZXN0YXJ0IGl0ZXJhdGlvbiBhZnRl
ciBkcm9wcGluZyBsb2NrICovCisJCWxpc3Rfc2FmZV9yZXNldF9uZXh0KHRsLCB0biwgbGluayk7
CisJCWlmICghLS10bC0+YWN0aXZlX2NvdW50KQorCQkJbGlzdF9kZWwoJnRsLT5saW5rKTsKKwor
CQkvKiBEZWZlciB0aGUgZmluYWwgcmVsZWFzZSB0byBhZnRlciB0aGUgc3BpbmxvY2sgKi8KKwkJ
aWYgKHJlZmNvdW50X2RlY19hbmRfdGVzdCgmdGwtPmtyZWYucmVmY291bnQpKSB7CisJCQlHRU1f
QlVHX09OKHRsLT5hY3RpdmVfY291bnQpOworCQkJbGlzdF9hZGQoJnRsLT5saW5rLCAmZnJlZSk7
CisJCX0KIAl9CisJc3Bpbl91bmxvY2soJnRpbWVsaW5lcy0+bG9jayk7CisKKwlsaXN0X2Zvcl9l
YWNoX2VudHJ5X3NhZmUodGwsIHRuLCAmZnJlZSwgbGluaykKKwkJX19pbnRlbF90aW1lbGluZV9m
cmVlKCZ0bC0+a3JlZik7CiAKLQlyZXR1cm4gIWxpc3RfZW1wdHkoJmk5MTUtPmd0LmFjdGl2ZV9y
aW5ncyk7CisJcmV0dXJuICFsaXN0X2VtcHR5KCZ0aW1lbGluZXMtPmFjdGl2ZV9saXN0KTsKIH0K
IAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3JlcXVlc3QuaAppbmRleCBiNThjZWVmOTJlMjAuLmE2YjFlNWY0Mzk0OSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKQEAgLTIyMSw5ICsyMjEsNiBAQCBzdHJ1Y3QgaTkx
NV9yZXF1ZXN0IHsKIAkvKiogdGltZWxpbmUtPnJlcXVlc3QgZW50cnkgZm9yIHRoaXMgcmVxdWVz
dCAqLwogCXN0cnVjdCBsaXN0X2hlYWQgbGluazsKIAotCS8qKiByaW5nLT5yZXF1ZXN0X2xpc3Qg
ZW50cnkgZm9yIHRoaXMgcmVxdWVzdCAqLwotCXN0cnVjdCBsaXN0X2hlYWQgcmluZ19saW5rOwot
CiAJc3RydWN0IGRybV9pOTE1X2ZpbGVfcHJpdmF0ZSAqZmlsZV9wcml2OwogCS8qKiBmaWxlX3By
aXYgbGlzdCBlbnRyeSBmb3IgdGhpcyByZXF1ZXN0ICovCiAJc3RydWN0IGxpc3RfaGVhZCBjbGll
bnRfbGluazsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRl
c2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8v
aW50ZWwtZ2Z4

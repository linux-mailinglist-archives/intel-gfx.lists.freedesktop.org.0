Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7A05663371
	for <lists+intel-gfx@lfdr.de>; Tue,  9 Jul 2019 11:32:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 040336E054;
	Tue,  9 Jul 2019 09:32:42 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D9F306E054
 for <intel-gfx@lists.freedesktop.org>; Tue,  9 Jul 2019 09:32:40 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Jul 2019 02:32:40 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,470,1557212400"; d="scan'208";a="185876222"
Received: from unknown (HELO delly.ger.corp.intel.com) ([10.252.37.9])
 by fmsmga001.fm.intel.com with ESMTP; 09 Jul 2019 02:32:39 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  9 Jul 2019 12:32:05 +0300
Message-Id: <20190709093208.20470-10-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.21.0.392.gf8f6787159e
In-Reply-To: <20190709093208.20470-1-lionel.g.landwerlin@intel.com>
References: <20190709093208.20470-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v7 09/12] drm/i915: add a new perf configuration
 execbuf parameter
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0aGUgYWJpbGl0eSB0byBkaXNwYXRjaCBhIHNldCBvZiBjb21tYW5kIGJ1ZmZlciB0
byB0aGUKaGFyZHdhcmUsIGVhY2ggd2l0aCBhIGRpZmZlcmVudCBPQSBjb25maWd1cmF0aW9uLiBU
byBhY2hpZXZlIHRoaXMsIHdlCnJldXNlIGEgY291cGxlIG9mIGZpZWxkcyBmcm9tIHRoZSBleGVj
YnVmMiBzdHJ1Y3QgKEkgQ0FOIEhBWgpleGVjYnVmMz8pIHRvIG5vdGlmeSB3aGF0IE9BIGNvbmZp
Z3VyYXRpb24gc2hvdWxkIGJlIHVzZWQgZm9yIGEgYmF0Y2gKYnVmZmVyLiBUaGlzIHJlcXVpcmVz
IHRoZSBwcm9jZXNzIG1ha2luZyB0aGUgZXhlY2J1ZiB3aXRoIHRoaXMgZmxhZyB0bwphbHNvIG93
biB0aGUgcGVyZiBmZCBhdCB0aGUgdGltZSBvZiBleGVjYnVmLgoKdjI6IEFkZCBhIGVtaXRfb2Ff
Y29uZmlnKCkgdmZ1bmMgaW4gdGhlIGludGVsX2VuZ2luZV9jcyAoQ2hyaXMpCiAgICBNb3ZlIG9h
X2NvbmZpZyB2bWEgdG8gYWN0aXZlIChDaHJpcykKCnYzOiBEb24ndCBkcm9wIHRoZSBsb2NrIGZv
ciBlbmdpbmUgbG9va3VwIChDaHJpcykKICAgIE1vdmUgT0EgY29uZmlnIHZtYSB0byBhY3RpdmUg
YmVmb3JlIHdyaXRpbmcgdGhlIHJpbmdidWZmZXIgKENocmlzKQoKdjQ6IFJldXNlIGk5MTVfdXNl
cl9leHRlbnNpb25fZm4KICAgIFNlcmlhbGl6ZSByZXF1ZXN0cyB3aXRoIE9BIGNvbmZpZyB1cGRh
dGVzCgp2NTogQ2hlY2sgdGhhdCB0aGUgY2hhaW5lZCBleHRlbnNpb24gaXMgb25seSBwcmVzZW50
IG9uY2UgKENocmlzKQogICAgVW5waW4gb2Ffdm1hIGluIG1haW4gcGF0aCAoQ2hyaXMpCgp2Njog
VXNlIEJJVF9VTEwgKENocmlzKQoKU2lnbmVkLW9mZi1ieTogTGlvbmVsIExhbmR3ZXJsaW4gPGxp
b25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgotLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX2V4ZWNidWZmZXIuYyAgICB8IDEyNCArKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jICAgICB8ICAgMiArCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCAgfCAgIDkgKysKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMgICAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmMgICAgICAgICAgICAgICB8ICAgNCArCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAgICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcGVyZi5jICAgICAgICAgICAgICB8ICAyNSArKy0tCiBpbmNsdWRlL3VhcGkvZHJt
L2k5MTVfZHJtLmggICAgICAgICAgICAgICAgICAgfCAgMzcgKysrKysrCiA5IGZpbGVzIGNoYW5n
ZWQsIDE5NyBpbnNlcnRpb25zKCspLCAxNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCBmYzUxMDhiOGY4ZWYuLmFm
NjI0NDFhZTNmMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2Vt
X2V4ZWNidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhl
Y2J1ZmZlci5jCkBAIC0yODMsNyArMjgzLDEyIEBAIHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgewog
CXN0cnVjdCB7CiAJCXU2NCBmbGFnczsgLyoqIEF2YWlsYWJsZSBleHRlbnNpb25zIHBhcmFtZXRl
cnMgKi8KIAkJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dF90aW1lbGluZV9mZW5j
ZXMgdGltZWxpbmVfZmVuY2VzOworCQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0
X3BlcmYgcGVyZl9jb25maWc7CiAJfSBleHRlbnNpb25zOworCisJc3RydWN0IGk5MTVfb2FfY29u
ZmlnICpvYV9jb25maWc7IC8qKiBIVyBjb25maWd1cmF0aW9uIGZvciBPQSwgTlVMTCBpcyBub3Qg
bmVlZGVkLiAqLworCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYV9ibzsKKwlzdHJ1Y3Qg
aTkxNV92bWEgKm9hX3ZtYTsKIH07CiAKICNkZWZpbmUgZXhlY19lbnRyeShFQiwgVk1BKSAoJihF
QiktPmV4ZWNbKFZNQSktPmV4ZWNfZmxhZ3MgLSAoRUIpLT5mbGFnc10pCkBAIC0xMjEwLDYgKzEy
MTUsMjEgQEAgc3RhdGljIGludCByZWxvY19tb3ZlX3RvX2dwdShzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSwgc3RydWN0IGk5MTVfdm1hICp2bWEpCiAJcmV0dXJuIGVycjsKIH0KIAorCitzdGF0aWMg
aW50CitnZXRfZXhlY2J1Zl9vYV9jb25maWcoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCit7
CisJZWItPm9hX2NvbmZpZyA9IE5VTEw7CisJZWItPm9hX3ZtYSA9IE5VTEw7CisJZWItPm9hX2Jv
ID0gTlVMTDsKKworCWlmICgoZWItPmV4dGVuc2lvbnMuZmxhZ3MgJiBCSVRfVUxMKERSTV9JOTE1
X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGKSkgPT0gMCkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4g
aTkxNV9wZXJmX2dldF9vYV9jb25maWcoZWItPmk5MTUsIGViLT5leHRlbnNpb25zLnBlcmZfY29u
ZmlnLm9hX2NvbmZpZywKKwkJCQkgICAgICAgJmViLT5vYV9jb25maWcsICZlYi0+b2FfYm8pOwor
fQorCiBzdGF0aWMgaW50IF9fcmVsb2NfZ3B1X2FsbG9jKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIg
KmViLAogCQkJICAgICBzdHJ1Y3QgaTkxNV92bWEgKnZtYSwKIAkJCSAgICAgdW5zaWduZWQgaW50
IGxlbikKQEAgLTIwNzIsNiArMjA5Miw0MCBAQCBhZGRfdG9fY2xpZW50KHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxLCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpCiAJbGlzdF9hZGRfdGFpbCgmcnEtPmNs
aWVudF9saW5rLCAmcnEtPmZpbGVfcHJpdi0+bW0ucmVxdWVzdF9saXN0KTsKIH0KIAorc3RhdGlj
IGludCBlYl9vYV9jb25maWcoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCit7CisJaW50IGVy
cjsKKworCWlmICghZWItPm9hX2NvbmZpZykKKwkJcmV0dXJuIDA7CisKKwllcnIgPSBpOTE1X2Fj
dGl2ZV9yZXF1ZXN0X3NldCgmZWItPmVuZ2luZS0+bGFzdF9vYV9jb25maWcsCisJCQkJICAgICAg
ZWItPnJlcXVlc3QpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwkvKgorCSAqIElmIHRo
ZSBjb25maWcgaGFzbid0IGNoYW5nZWQsIHNraXAgcmVjb25maWd1cmluZyB0aGUgSFcgKHRoaXMg
aXMKKwkgKiBzdWJqZWN0IHRvIGEgZGVsYXkgd2Ugd2FudCB0byBhdm9pZCBoYXMgbXVjaCBhcyBw
b3NzaWJsZSkuCisJICovCisJaWYgKGViLT5vYV9jb25maWcgPT0gZWItPmk5MTUtPnBlcmYub2Eu
ZXhjbHVzaXZlX3N0cmVhbS0+b2FfY29uZmlnKQorCQlyZXR1cm4gMDsKKworCWVyciA9IGk5MTVf
dm1hX21vdmVfdG9fYWN0aXZlKGViLT5vYV92bWEsIGViLT5yZXF1ZXN0LCAwKTsKKwlpZiAoZXJy
KQorCQlyZXR1cm4gZXJyOworCisJZXJyID0gZWItPmVuZ2luZS0+ZW1pdF9iYl9zdGFydChlYi0+
cmVxdWVzdCwKKwkJCQkJZWItPm9hX3ZtYS0+bm9kZS5zdGFydCwKKwkJCQkJMCwgSTkxNV9ESVNQ
QVRDSF9TRUNVUkUpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlzd2FwKGViLT5vYV9j
b25maWcsIGViLT5pOTE1LT5wZXJmLm9hLmV4Y2x1c2l2ZV9zdHJlYW0tPm9hX2NvbmZpZyk7CisK
KwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGludCBlYl9zdWJtaXQoc3RydWN0IGk5MTVfZXhlY2J1
ZmZlciAqZWIpCiB7CiAJaW50IGVycjsKQEAgLTIwOTgsNiArMjE1MiwxMCBAQCBzdGF0aWMgaW50
IGViX3N1Ym1pdChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAkJCXJldHVybiBlcnI7CiAJ
fQogCisJZXJyID0gZWJfb2FfY29uZmlnKGViKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOwor
CiAJZXJyID0gZWItPmVuZ2luZS0+ZW1pdF9iYl9zdGFydChlYi0+cmVxdWVzdCwKIAkJCQkJZWIt
PmJhdGNoLT5ub2RlLnN0YXJ0ICsKIAkJCQkJZWItPmJhdGNoX3N0YXJ0X29mZnNldCwKQEAgLTI1
MzcsOCArMjU5NSwyNSBAQCBzdGF0aWMgaW50IHBhcnNlX3RpbWVsaW5lX2ZlbmNlcyhzdHJ1Y3Qg
aTkxNV91c2VyX2V4dGVuc2lvbiBfX3VzZXIgKmV4dCwgdm9pZCAqZAogCXJldHVybiAwOwogfQog
CitzdGF0aWMgaW50IHBhcnNlX3BlcmZfY29uZmlnKHN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9u
IF9fdXNlciAqZXh0LCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
ID0gZGF0YTsKKworCWlmIChlYi0+ZXh0ZW5zaW9ucy5mbGFncyAmIEJJVF9VTEwoRFJNX0k5MTVf
R0VNX0VYRUNCVUZGRVJfRVhUX1BFUkYpKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChjb3B5
X2Zyb21fdXNlcigmZWItPmV4dGVuc2lvbnMucGVyZl9jb25maWcsIGV4dCwKKwkJCSAgIHNpemVv
ZihlYi0+ZXh0ZW5zaW9ucy5wZXJmX2NvbmZpZykpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCWVi
LT5leHRlbnNpb25zLmZsYWdzIHw9IEJJVF9VTEwoRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJfRVhU
X1BFUkYpOworCisJcmV0dXJuIDA7Cit9CisKIHN0YXRpYyBjb25zdCBpOTE1X3VzZXJfZXh0ZW5z
aW9uX2ZuIGV4ZWNidWZfZXh0ZW5zaW9uc1tdID0gewogICAgICAgICBbRFJNX0k5MTVfR0VNX0VY
RUNCVUZGRVJfRVhUX1RJTUVMSU5FX0ZFTkNFU10gPSBwYXJzZV90aW1lbGluZV9mZW5jZXMsCisg
ICAgICAgIFtEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRl0gPSBwYXJzZV9wZXJmX2Nv
bmZpZywKIH07CiAKIHN0YXRpYyBpbnQKQEAgLTI2NDMsOSArMjcxOCwxMyBAQCBpOTE1X2dlbV9k
b19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCX0KIAl9CiAKKwllcnIgPSBn
ZXRfZXhlY2J1Zl9vYV9jb25maWcoJmViKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9vYV9jb25m
aWc7CisKIAllcnIgPSBlYl9jcmVhdGUoJmViKTsKIAlpZiAoZXJyKQotCQlnb3RvIGVycl9vdXRf
ZmVuY2U7CisJCWdvdG8gZXJyX29hX2NvbmZpZzsKIAogCUdFTV9CVUdfT04oIWViLmx1dF9zaXpl
KTsKIApAQCAtMjY3MCw2ICsyNzQ5LDI3IEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0
IGRybV9kZXZpY2UgKmRldiwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBlcnJfdW5sb2Nr
OwogCisJaWYgKGViLmV4dGVuc2lvbnMuZmxhZ3MgJiBCSVRfVUxMKERSTV9JOTE1X0dFTV9FWEVD
QlVGRkVSX0VYVF9QRVJGKSkgeworCQlzdHJ1Y3QgZmlsZSAqcGVyZl9maWxlOworCisJCWlmICgh
aW50ZWxfZW5naW5lX2hhc19vYShlYi5lbmdpbmUpKSB7CisJCQllcnIgPSAtRU5PREVWOworCQkJ
Z290byBlcnJfZW5naW5lOworCQl9CisKKwkJcGVyZl9maWxlID0gZmdldChlYi5leHRlbnNpb25z
LnBlcmZfY29uZmlnLnBlcmZfZmQpOworCQlpZiAoIXBlcmZfZmlsZSkKKwkJCWdvdG8gZXJyX2Vu
Z2luZTsKKworCQlpZiAocGVyZl9maWxlLT5wcml2YXRlX2RhdGEgIT0gZWIuaTkxNS0+cGVyZi5v
YS5leGNsdXNpdmVfc3RyZWFtKQorCQkJZXJyID0gLUVJTlZBTDsKKworCQlmcHV0KHBlcmZfZmls
ZSk7CisKKwkJaWYgKHVubGlrZWx5KGVycikpCisJCQlnb3RvIGVycl9lbmdpbmU7CisJfQorCiAJ
ZXJyID0gZWJfd2FpdF9mb3JfcmluZygmZWIpOyAvKiBtYXkgdGVtcG9yYXJpbHkgZHJvcCBzdHJ1
Y3RfbXV0ZXggKi8KIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBlcnJfZW5naW5lOwpAQCAt
Mjc5MCw2ICsyODkwLDIwIEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZp
Y2UgKmRldiwKIAkJfQogCX0KIAorCWlmIChlYi5leHRlbnNpb25zLmZsYWdzICYgQklUX1VMTChE
Uk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRikpIHsKKwkJZWIub2Ffdm1hID0gaTkxNV92
bWFfaW5zdGFuY2UoZWIub2FfYm8sCisJCQkJCSAgICAgICZlYi5lbmdpbmUtPmk5MTUtPmdndHQu
dm0sIE5VTEwpOworCQlpZiAodW5saWtlbHkoSVNfRVJSKGViLm9hX3ZtYSkpKSB7CisJCQllcnIg
PSBQVFJfRVJSKGViLm9hX3ZtYSk7CisJCQllYi5vYV92bWEgPSBOVUxMOworCQkJZ290byBlcnJf
cmVxdWVzdDsKKwkJfQorCisJCWVyciA9IGk5MTVfdm1hX3BpbihlYi5vYV92bWEsIDAsIDAsIFBJ
Tl9HTE9CQUwpOworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfcmVxdWVzdDsKKwl9CisKIAkvKgog
CSAqIFdoaWxzdCB0aGlzIHJlcXVlc3QgZXhpc3RzLCBiYXRjaF9vYmogd2lsbCBiZSBvbiB0aGUK
IAkgKiBhY3RpdmVfbGlzdCwgYW5kIHNvIHdpbGwgaG9sZCB0aGUgYWN0aXZlIHJlZmVyZW5jZS4g
T25seSB3aGVuIHRoaXMKQEAgLTI4MzQsNyArMjk0OCwxMyBAQCBpOTE1X2dlbV9kb19leGVjYnVm
ZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaTkxNV9nZW1fY29udGV4dF9wdXQoZWIuZ2Vt
X2NvbnRleHQpOwogZXJyX2Rlc3Ryb3k6CiAJZWJfZGVzdHJveSgmZWIpOwotZXJyX291dF9mZW5j
ZToKK2Vycl9vYV9jb25maWc6CisJaWYgKGViLm9hX2NvbmZpZykgeworCQlpOTE1X2dlbV9vYmpl
Y3RfcHV0KGViLm9hX2JvKTsKKwkJaTkxNV9vYV9jb25maWdfcHV0KGViLm9hX2NvbmZpZyk7CisJ
fQorCWlmIChlYi5vYV92bWEpCisJCWk5MTVfdm1hX3VucGluKGViLm9hX3ZtYSk7CiAJaWYgKG91
dF9mZW5jZV9mZCAhPSAtMSkKIAkJcHV0X3VudXNlZF9mZChvdXRfZmVuY2VfZmQpOwogZXJyX2V4
ZWNfZmVuY2U6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4
IGRmNTkzMmY1ZjU3OC4uMjVlZjAxMDdkN2Y1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfY3MuYwpAQCAtODY0LDYgKzg2NCw4IEBAIGludCBpbnRlbF9lbmdpbmVfaW5p
dF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJZW5naW5lLT5zZXRf
ZGVmYXVsdF9zdWJtaXNzaW9uKGVuZ2luZSk7CiAKKwlJTklUX0FDVElWRV9SRVFVRVNUKCZlbmdp
bmUtPmxhc3Rfb2FfY29uZmlnKTsKKwogCXJldHVybiAwOwogCiBlcnJfdW5waW46CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmluZGV4IDdlMDU2MTE0MzQ0
ZS4uMzlkYTQwOTM3ZTdmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfdHlwZXMuaApAQCAtMzYzLDYgKzM2Myw4IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mgewog
CXN0cnVjdCBpOTE1X3dhX2xpc3Qgd2FfbGlzdDsKIAlzdHJ1Y3QgaTkxNV93YV9saXN0IHdoaXRl
bGlzdDsKIAorCXN0cnVjdCBpOTE1X2FjdGl2ZV9yZXF1ZXN0IGxhc3Rfb2FfY29uZmlnOworCiAJ
dTMyICAgICAgICAgICAgIGlycV9rZWVwX21hc2s7IC8qIGFsd2F5cyBrZWVwIHRoZXNlIGludGVy
cnVwdHMgKi8KIAl1MzIJCWlycV9lbmFibGVfbWFzazsgLyogYml0bWFzayB0byBlbmFibGUgcmlu
ZyBpbnRlcnJ1cHQgKi8KIAl2b2lkCQkoKmlycV9lbmFibGUpKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSk7CkBAIC00NDYsNiArNDQ4LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAjZGVmaW5lIEk5MTVfRU5HSU5FX0hBU19TRU1BUEhPUkVTICAgQklUKDMpCiAjZGVmaW5lIEk5
MTVfRU5HSU5FX05FRURTX0JSRUFEQ1JVTUJfVEFTS0xFVCBCSVQoNCkKICNkZWZpbmUgSTkxNV9F
TkdJTkVfSVNfVklSVFVBTCAgICAgICBCSVQoNSkKKyNkZWZpbmUgSTkxNV9FTkdJTkVfSEFTX09B
ICAgICAgICAgICBCSVQoNikKIAl1bnNpZ25lZCBpbnQgZmxhZ3M7CiAKIAkvKgpAQCAtNTQxLDYg
KzU0NCwxMiBAQCBpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9JU19W
SVJUVUFMOwogfQogCitzdGF0aWMgaW5saW5lIGJvb2wKK2ludGVsX2VuZ2luZV9oYXNfb2EoY29u
c3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXJldHVybiBlbmdpbmUtPmZs
YWdzICYgSTkxNV9FTkdJTkVfSEFTX09BOworfQorCiAjZGVmaW5lIGluc3Rkb25lX3NsaWNlX21h
c2soZGV2X3ByaXZfXykgXAogCShJU19HRU4oZGV2X3ByaXZfXywgNykgPyBcCiAJIDEgOiBSVU5U
SU1FX0lORk8oZGV2X3ByaXZfXyktPnNzZXUuc2xpY2VfbWFzaykKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjLmMKaW5kZXggODdkMjYzZjkyY2Y0Li4zMDc4MmFmOGY0YmMgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0yNzk0LDYgKzI3OTQsNyBAQCBpbnQgaW50ZWxfZXhl
Y2xpc3RzX3N1Ym1pc3Npb25fc2V0dXAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CQllbmdpbmUtPmluaXRfY29udGV4dCA9IGdlbjhfaW5pdF9yY3NfY29udGV4dDsKIAkJZW5naW5l
LT5lbWl0X2ZsdXNoID0gZ2VuOF9lbWl0X2ZsdXNoX3JlbmRlcjsKIAkJZW5naW5lLT5lbWl0X2Zp
bmlfYnJlYWRjcnVtYiA9IGdlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfcmNzOworCQllbmdpbmUt
PmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19PQTsKIAl9CiAKIAlyZXR1cm4gMDsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYwppbmRleCBhOTg2NTJlNDA1NWMuLjBk
MTMzNGFiNDQ3YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmlu
Z2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIu
YwpAQCAtMjIwNSw4ICsyMjA1LDEwIEBAIHN0YXRpYyB2b2lkIHNldHVwX3JjcyhzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWVuZ2luZS0+aXJxX2VuYWJsZV9tYXNrID0gSTkxNV9V
U0VSX0lOVEVSUlVQVDsKIAl9CiAKLQlpZiAoSVNfSEFTV0VMTChpOTE1KSkKKwlpZiAoSVNfSEFT
V0VMTChpOTE1KSkgewogCQllbmdpbmUtPmVtaXRfYmJfc3RhcnQgPSBoc3dfZW1pdF9iYl9zdGFy
dDsKKwkJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfT0E7CisJfQogCiAJZW5naW5l
LT5yZXN1bWUgPSByY3NfcmVzdW1lOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKaW5kZXggOTQw
NjIxODhjNTIzLi5mNzY3NzUzY2NmNTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwpAQCAtNDg3
LDYgKzQ4NywxMCBAQCBzdGF0aWMgaW50IGk5MTVfZ2V0cGFyYW1faW9jdGwoc3RydWN0IGRybV9k
ZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAljYXNlIEk5MTVfUEFSQU1fUEVSRl9SRVZJU0lPTjoK
IAkJdmFsdWUgPSBpOTE1X3BlcmZfaW9jdGxfdmVyc2lvbigpOwogCQlicmVhazsKKwljYXNlIEk5
MTVfUEFSQU1fSEFTX0VYRUNfUEVSRl9DT05GSUc6CisJCS8qIE9idmlvdXNseSByZXF1aXJlcyBw
ZXJmIHN1cHBvcnQuICovCisJCXZhbHVlID0gZGV2X3ByaXYtPnBlcmYuaW5pdGlhbGl6ZWQ7CisJ
CWJyZWFrOwogCWRlZmF1bHQ6CiAJCURSTV9ERUJVRygiVW5rbm93biBwYXJhbWV0ZXIgJWRcbiIs
IHBhcmFtLT5wYXJhbSk7CiAJCXJldHVybiAtRUlOVkFMOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgK
aW5kZXggYjNjNmRkNzJjN2ExLi5lODk4YTM1OTNiOGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
aApAQCAtMTExNiw3ICsxMTE2LDcgQEAgc3RydWN0IGk5MTVfb2FfY29uZmlnIHsKIAogCXN0cnVj
dCBsaXN0X2hlYWQgdm1hX2xpbms7CiAKLQlhdG9taWNfdCByZWZfY291bnQ7CisJc3RydWN0IGty
ZWYgcmVmOwogfTsKIAogc3RydWN0IGk5MTVfcGVyZl9zdHJlYW07CkBAIC0yNjE0LDYgKzI2MTQs
MTIgQEAgaW50IGk5MTVfcGVyZl9nZXRfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1LAogCQkJICAgIGludCBtZXRyaWNzX3NldCwKIAkJCSAgICBzdHJ1Y3QgaTkxNV9vYV9j
b25maWcgKipvdXRfY29uZmlnLAogCQkJICAgIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICoq
b3V0X29iaik7Cit2b2lkIGk5MTVfb2FfY29uZmlnX3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJlZik7
CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X29hX2NvbmZpZ19wdXQoc3RydWN0IGk5MTVfb2Ff
Y29uZmlnICpvYV9jb25maWcpCit7CisJa3JlZl9wdXQoJm9hX2NvbmZpZy0+cmVmLCBpOTE1X29h
X2NvbmZpZ19yZWxlYXNlKTsKK30KIAogLyogaTkxNV9nZW1fZXZpY3QuYyAqLwogaW50IF9fbXVz
dF9jaGVjayBpOTE1X2dlbV9ldmljdF9zb21ldGhpbmcoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFj
ZSAqdm0sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IDE4YThmMzg4MzliYS4uZGVjYmVj
NDNkNjZkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMzY3LDEwICszNjcsOSBAQCBz
dHJ1Y3QgcGVyZl9vcGVuX3Byb3BlcnRpZXMgewogCWludCBvYV9wZXJpb2RfZXhwb25lbnQ7CiB9
OwogCi1zdGF0aWMgdm9pZCBwdXRfb2FfY29uZmlnKHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2Ff
Y29uZmlnKQordm9pZCBpOTE1X29hX2NvbmZpZ19yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWYpCiB7
Ci0JaWYgKCFhdG9taWNfZGVjX2FuZF90ZXN0KCZvYV9jb25maWctPnJlZl9jb3VudCkpCi0JCXJl
dHVybjsKKwlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZyA9IGNvbnRhaW5lcl9vZihy
ZWYsIHR5cGVvZigqb2FfY29uZmlnKSwgcmVmKTsKIAogCWlmIChvYV9jb25maWctPm9iaikgewog
CQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IG9hX2NvbmZpZy0+aTkxNTsKQEAgLTQ4
OCw3ICs0ODcsNyBAQCBpbnQgaTkxNV9wZXJmX2dldF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsCiAJfQogCiAJaWYgKG91dF9jb25maWcpIHsKLQkJYXRvbWljX2luYygm
b2FfY29uZmlnLT5yZWZfY291bnQpOworCQlrcmVmX2dldCgmb2FfY29uZmlnLT5yZWYpOwogCQkq
b3V0X2NvbmZpZyA9IG9hX2NvbmZpZzsKIAl9CiAKQEAgLTUxMCw3ICs1MDksNyBAQCBpbnQgaTkx
NV9wZXJmX2dldF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJbXV0
ZXhfdW5sb2NrKCZpOTE1LT5wZXJmLm1ldHJpY3NfbG9jayk7CiAKIAlpZiAocmV0ICYmIG91dF9j
b25maWcpIHsKLQkJcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOworCQlpOTE1X29hX2NvbmZpZ19w
dXQob2FfY29uZmlnKTsKIAkJKm91dF9jb25maWcgPSBOVUxMOwogCX0KIApAQCAtMTQ4NCw3ICsx
NDgzLDcgQEAgc3RhdGljIHZvaWQgaTkxNV9vYV9zdHJlYW1fZGVzdHJveShzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSAqc3RyZWFtKQogCWlmIChzdHJlYW0tPmN0eCkKIAkJb2FfcHV0X3JlbmRlcl9j
dHhfaWQoc3RyZWFtKTsKIAotCXB1dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOworCWk5
MTVfb2FfY29uZmlnX3B1dChzdHJlYW0tPm9hX2NvbmZpZyk7CiAKIAlpZiAoZGV2X3ByaXYtPnBl
cmYub2Euc3B1cmlvdXNfcmVwb3J0X3JzLm1pc3NlZCkgewogCQlEUk1fTk9URSgiJWQgc3B1cmlv
dXMgT0EgcmVwb3J0IG5vdGljZXMgc3VwcHJlc3NlZCBkdWUgdG8gcmF0ZWxpbWl0aW5nXG4iLApA
QCAtMjQ4MSw3ICsyNDgwLDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVj
dCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJZnJlZV9vYV9idWZmZXIoZGV2X3ByaXYpOwog
CiBlcnJfb2FfYnVmX2FsbG9jOgotCXB1dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOwor
CWk5MTVfb2FfY29uZmlnX3B1dChzdHJlYW0tPm9hX2NvbmZpZyk7CiAKIAlpbnRlbF91bmNvcmVf
Zm9yY2V3YWtlX3B1dCgmZGV2X3ByaXYtPnVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7CiAJaW50ZWxf
cnVudGltZV9wbV9wdXQoJmRldl9wcml2LT5ydW50aW1lX3BtLCBzdHJlYW0tPndha2VyZWYpOwpA
QCAtMjQ5MSw3ICsyNDkwLDcgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVj
dCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJt
LnN0cnVjdF9tdXRleCk7CiAKIGVycl9ub2Ffd2FpdF9hbGxvYzoKLQlwdXRfb2FfY29uZmlnKHN0
cmVhbS0+b2FfY29uZmlnKTsKKwlpOTE1X29hX2NvbmZpZ19wdXQoc3RyZWFtLT5vYV9jb25maWcp
OwogCiBlcnJfY29uZmlnOgogCWlmIChzdHJlYW0tPmN0eCkKQEAgLTMzMDYsNyArMzMwNSw3IEBA
IHZvaWQgaTkxNV9wZXJmX3JlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dikKIAkJZ290byBzeXNmc19lcnJvcjsKIAogCWRldl9wcml2LT5wZXJmLm9hLnRlc3RfY29uZmln
Lmk5MTUgPSBkZXZfcHJpdjsKLQlhdG9taWNfc2V0KCZkZXZfcHJpdi0+cGVyZi5vYS50ZXN0X2Nv
bmZpZy5yZWZfY291bnQsIDEpOworCWtyZWZfaW5pdCgmZGV2X3ByaXYtPnBlcmYub2EudGVzdF9j
b25maWcucmVmKTsKIAogCWdvdG8gZXhpdDsKIApAQCAtMzU2Myw3ICszNTYyLDcgQEAgaW50IGk5
MTVfcGVyZl9hZGRfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRh
dGEsCiAJfQogCiAJb2FfY29uZmlnLT5pOTE1ID0gZGV2X3ByaXY7Ci0JYXRvbWljX3NldCgmb2Ff
Y29uZmlnLT5yZWZfY291bnQsIDEpOworCWtyZWZfaW5pdCgmb2FfY29uZmlnLT5yZWYpOwogCiAJ
aWYgKCF1dWlkX2lzX3ZhbGlkKGFyZ3MtPnV1aWQpKSB7CiAJCURSTV9ERUJVRygiSW52YWxpZCB1
dWlkIGZvcm1hdCBmb3IgT0EgY29uZmlnXG4iKTsKQEAgLTM2NjIsNyArMzY2MSw3IEBAIGludCBp
OTE1X3BlcmZfYWRkX2NvbmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpk
YXRhLAogc3lzZnNfZXJyOgogCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBlcmYubWV0cmljc19s
b2NrKTsKIHJlZ19lcnI6Ci0JcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOworCWk5MTVfb2FfY29u
ZmlnX3B1dChvYV9jb25maWcpOwogCURSTV9ERUJVRygiRmFpbGVkIHRvIGFkZCBuZXcgT0EgY29u
ZmlnXG4iKTsKIAlyZXR1cm4gZXJyOwogfQpAQCAtMzcxOCw3ICszNzE3LDcgQEAgaW50IGk5MTVf
cGVyZl9yZW1vdmVfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRh
dGEsCiAKIAlEUk1fREVCVUcoIlJlbW92ZWQgY29uZmlnICVzIGlkPSVpXG4iLCBvYV9jb25maWct
PnV1aWQsIG9hX2NvbmZpZy0+aWQpOwogCi0JcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOworCWk5
MTVfb2FfY29uZmlnX3B1dChvYV9jb25maWcpOwogCiAJcmV0dXJuIDA7CiAKQEAgLTM4ODgsNyAr
Mzg4Nyw3IEBAIHN0YXRpYyBpbnQgZGVzdHJveV9jb25maWcoaW50IGlkLCB2b2lkICpwLCB2b2lk
ICpkYXRhKQogewogCXN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmlnID0gcDsKIAotCXB1
dF9vYV9jb25maWcob2FfY29uZmlnKTsKKwlpOTE1X29hX2NvbmZpZ19wdXQob2FfY29uZmlnKTsK
IAogCXJldHVybiAwOwogfQpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5o
IGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IGU1YWMxMTc0YzAxZS4uZTZmN2Y3
Mzg0OTBlIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKKysrIGIvaW5j
bHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC02MjQsNiArNjI0LDE2IEBAIHR5cGVkZWYgc3Ry
dWN0IGRybV9pOTE1X2lycV93YWl0IHsKICAqLwogI2RlZmluZSBJOTE1X1BBUkFNX0hBU19FWEVD
X1RJTUVMSU5FX0ZFTkNFUyA1NQogCisvKgorICogUmVxdWVzdCBhbiBpOTE1L3BlcmYgcGVyZm9y
bWFuY2UgY29uZmlndXJhdGlvbiBjaGFuZ2UgYmVmb3JlIHJ1bm5pbmcgdGhlCisgKiBjb21tYW5k
cyBnaXZlbiBpbiBhbiBleGVjYnVmLgorICoKKyAqIFBlcmZvcm1hbmNlIGNvbmZpZ3VyYXRpb24g
SUQgYW5kIHRoZSBmaWxlIGRlc2NyaXB0b3Igb2YgdGhlIGk5MTUgcGVyZgorICogc3RyZWFtIGFy
ZSBnaXZlbiB0aHJvdWdoIGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dF9wZXJmLiBTZWUKKyAq
IEk5MTVfRVhFQ19FWFQuCisgKi8KKyNkZWZpbmUgSTkxNV9QQVJBTV9IQVNfRVhFQ19QRVJGX0NP
TkZJRyA1NgorCiAvKiBNdXN0IGJlIGtlcHQgY29tcGFjdCAtLSBubyBob2xlcyBhbmQgd2VsbCBk
b2N1bWVudGVkICovCiAKIHR5cGVkZWYgc3RydWN0IGRybV9pOTE1X2dldHBhcmFtIHsKQEAgLTEw
MjYsNiArMTAzNiwxMiBAQCBlbnVtIGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dCB7CiAJICov
CiAJRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJfRVhUX1RJTUVMSU5FX0ZFTkNFUyA9IDAsCiAKKwkv
KioKKwkgKiBUaGlzIGlkZW50aWZpZXIgaXMgYXNzb2NpYXRlZCB3aXRoCisJICogZHJtX2k5MTVf
Z2VtX2V4ZWNidWZmZXJfcGVyZl9leHQuCisJICovCisJRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJf
RVhUX1BFUkYsCisKIAlEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfTUFYIC8qIG5vbi1BQkkg
Ki8KIH07CiAKQEAgLTEwNTYsNiArMTA3MiwyNyBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNi
dWZmZXJfZXh0X3RpbWVsaW5lX2ZlbmNlcyB7CiAJX191NjQgdmFsdWVzX3B0cjsKIH07CiAKK3N0
cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9leHRfcGVyZiB7CisJc3RydWN0IGk5MTVfdXNl
cl9leHRlbnNpb24gYmFzZTsKKworCS8qKgorCSAqIFBlcmZvcm1hbmNlIGZpbGUgZGVzY3JpcHRv
ciByZXR1cm5lZCBieSBEUk1fSU9DVExfSTkxNV9QRVJGX09QRU4uCisJICogVGhpcyBpcyB1c2Vk
IHRvIGlkZW50aWZ5IHRoYXQgdGhlIGFwcGxpY2F0aW9uCisJICovCisJX19zMzIgcGVyZl9mZDsK
KworCS8qKgorCSAqIFVudXNlZCBmb3Igbm93LiBNdXN0IGJlIGNsZWFyZWQgdG8gemVyby4KKwkg
Ki8KKwlfX3UzMiBwYWQ7CisKKwkvKioKKwkgKiBPQSBjb25maWd1cmF0aW9uIElEIHRvIHN3aXRj
aCB0byBiZWZvcmUgZXhlY3V0aW5nIHRoZSBjb21tYW5kcworCSAqIGFzc29jaWF0ZWQgdG8gdGhl
IGV4ZWNidWYuCisJICovCisJX191NjQgb2FfY29uZmlnOworfTsKKwogc3RydWN0IGRybV9pOTE1
X2dlbV9leGVjYnVmZmVyMiB7CiAJLyoqCiAJICogTGlzdCBvZiBnZW1fZXhlY19vYmplY3QyIHN0
cnVjdHMKLS0gCjIuMjEuMC4zOTIuZ2Y4ZjY3ODcxNTllCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZng=

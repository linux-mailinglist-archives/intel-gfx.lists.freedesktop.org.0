Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id EF02432F452
	for <lists+intel-gfx@lfdr.de>; Fri,  5 Mar 2021 21:00:22 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 334616EC33;
	Fri,  5 Mar 2021 20:00:20 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 182976EC33
 for <intel-gfx@lists.freedesktop.org>; Fri,  5 Mar 2021 20:00:19 +0000 (UTC)
IronPort-SDR: pnFIyqs24bF54xVEaJxzYYwT3Gxt5/OX1ffvbCf+Pd1Hhc0/wwjVWxuOYlDQdLQIFRhsBYhvYp
 Q1Y5VndncJZw==
X-IronPort-AV: E=McAfee;i="6000,8403,9914"; a="249110146"
X-IronPort-AV: E=Sophos;i="5.81,226,1610438400"; d="scan'208";a="249110146"
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 05 Mar 2021 12:00:13 -0800
IronPort-SDR: QxbVjK6I43Zc/nStSzQR8q26H4EPZOttlFiWpUGIN4WymKeJoxoIii9Z5IIApStGPDoc1IlruG
 yLQBDXt1WJwA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.81,226,1610438400"; d="scan'208";a="401913401"
Received: from irsmsx603.ger.corp.intel.com ([163.33.146.9])
 by fmsmga008.fm.intel.com with ESMTP; 05 Mar 2021 12:00:11 -0800
Received: from irsmsx605.ger.corp.intel.com (163.33.146.138) by
 irsmsx603.ger.corp.intel.com (163.33.146.9) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2106.2; Fri, 5 Mar 2021 20:00:09 +0000
Received: from irsmsx605.ger.corp.intel.com ([163.33.146.138]) by
 IRSMSX605.ger.corp.intel.com ([163.33.146.138]) with mapi id 15.01.2106.013;
 Fri, 5 Mar 2021 20:00:09 +0000
From: "Mun, Gwan-gyeong" <gwan-gyeong.mun@intel.com>
To: "ville.syrjala@linux.intel.com" <ville.syrjala@linux.intel.com>
Thread-Topic: [Intel-gfx] [PATCH 1/3] drm/i915/display: Move dc3co_exitline
 variable to struct intel_psr
Thread-Index: AQHXEEwvaXeHdahMKE6qVBNoQuxPQqpyeyWAgANYioA=
Date: Fri, 5 Mar 2021 20:00:09 +0000
Message-ID: <93deb32a47a36f95f1e1847a23fe3f10037d541a.camel@intel.com>
References: <20210303164201.31301-1-gwan-gyeong.mun@intel.com>
 <YD+/Q45My7lyi0ow@intel.com>
In-Reply-To: <YD+/Q45My7lyi0ow@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.184.70.1]
Content-ID: <A2FA9F1ACC2C11489BE3F83B1FBF0546@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH 1/3] drm/i915/display: Move dc3co_exitline
 variable to struct intel_psr
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gV2VkLCAyMDIxLTAzLTAzIGF0IDE4OjU0ICswMjAwLCBWaWxsZSBTeXJqw6Rsw6Qgd3JvdGU6
DQo+IE9uIFdlZCwgTWFyIDAzLCAyMDIxIGF0IDA2OjQxOjU5UE0gKzAyMDAsIEd3YW4tZ3llb25n
IE11biB3cm90ZToNCj4gPiBkYzNjb19leGl0bGluZSBpcyBpbmRpcmVjdGx5IGNhbGxlZCBieSBp
bnRlbF9wc3JfY29tcHV0ZV9jb25maWcoKS4NCj4gPiBBbmQgaXQgd2lsbCBub3QgYmUgY2hhbmdl
ZCB1bnRpbCB0aGUgbmV4dCBjYWxsaW5nIG9mDQo+ID4gaW50ZWxfcHNyX2NvbXB1dGVfY29uZmln
KCkuIFNvIGluIG9yZGVyIHRvIHVzZSBkYzNjb19leGl0bGluZSB3aXRob3V0DQo+ID4gaW50ZWxf
Y3J0Y19zdGF0ZSBvbiBvdGhlciBwc3IgaW50ZXJuYWwgZnVuY3Rpb24sIGl0IG1vdmVzDQo+ID4g
ZGMzY29fZXhpdGxpbmUNCj4gPiB2YXJpYWJsZSB0byBzdHJ1Y3QgaW50ZWxfcHNyLg0KPiA+IEFu
ZCBpdCByZW1vdmVzIGEgZGMzY29fZW5hYmxlZCB2YXJpYWJsZSBmcm9tIHN0cnVjdCBpbnRlbF9w
c3IuDQo+ID4gDQo+ID4gQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50
ZWwuY29tPg0KPiA+IENjOiBBbnNodW1hbiBHdXB0YSA8YW5zaHVtYW4uZ3VwdGFAaW50ZWwuY29t
Pg0KPiA+IFNpZ25lZC1vZmYtYnk6IEd3YW4tZ3llb25nIE11biA8Z3dhbi1neWVvbmcubXVuQGlu
dGVsLmNvbT4NCj4gPiAtLS0NCj4gPiDCoGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV90eXBlcy5oIHzCoCAzICstLQ0KPiA+IMKgZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9wc3IuY8KgwqDCoMKgwqDCoMKgwqDCoMKgIHwgMTEgKysrKystLS0tLS0N
Cj4gPiDCoDIgZmlsZXMgY2hhbmdlZCwgNiBpbnNlcnRpb25zKCspLCA4IGRlbGV0aW9ucygtKQ0K
PiA+IA0KPiA+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaA0KPiA+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3R5cGVzLmgNCj4gPiBpbmRleCAxYTc2ZTFkOWRlN2EuLmY2OWJkMWNhZWJiZiAx
MDA2NDQNCj4gPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXlfdHlwZXMuaA0KPiA+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oDQo+ID4gQEAgLTEwMDIsNyArMTAwMiw2IEBAIHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlIHsNCj4gPiDCoMKgwqDCoMKgwqDCoMKgYm9vbCBoYXNfcHNyOw0KPiA+IMKgwqDC
oMKgwqDCoMKgwqBib29sIGhhc19wc3IyOw0KPiA+IMKgwqDCoMKgwqDCoMKgwqBib29sIGVuYWJs
ZV9wc3IyX3NlbF9mZXRjaDsNCj4gPiAtwqDCoMKgwqDCoMKgwqB1MzIgZGMzY29fZXhpdGxpbmU7
DQo+ID4gwqANCj4gPiDCoMKgwqDCoMKgwqDCoMKgLyoNCj4gPiDCoMKgwqDCoMKgwqDCoMKgICog
RnJlcXVlbmNlIHRoZSBkcGxsIGZvciB0aGUgcG9ydCBzaG91bGQgcnVuIGF0LiBEaWZmZXJzDQo+
ID4gZnJvbSB0aGUNCj4gPiBAQCAtMTQ1Myw3ICsxNDUyLDcgQEAgc3RydWN0IGludGVsX3BzciB7
DQo+ID4gwqDCoMKgwqDCoMKgwqDCoGJvb2wgc2lua19ub3RfcmVsaWFibGU7DQo+ID4gwqDCoMKg
wqDCoMKgwqDCoGJvb2wgaXJxX2F1eF9lcnJvcjsNCj4gPiDCoMKgwqDCoMKgwqDCoMKgdTE2IHN1
X3hfZ3JhbnVsYXJpdHk7DQo+ID4gLcKgwqDCoMKgwqDCoMKgYm9vbCBkYzNjb19lbmFibGVkOw0K
PiA+ICvCoMKgwqDCoMKgwqDCoHUzMiBkYzNjb19leGl0bGluZTsNCj4gPiDCoMKgwqDCoMKgwqDC
oMKgdTMyIGRjM2NvX2V4aXRfZGVsYXk7DQo+ID4gwqDCoMKgwqDCoMKgwqDCoHN0cnVjdCBkZWxh
eWVkX3dvcmsgZGMzY29fd29yazsNCj4gPiDCoMKgwqDCoMKgwqDCoMKgc3RydWN0IGRybV9kcF92
c2Nfc2RwIHZzYzsNCj4gPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9wc3IuYw0KPiA+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9w
c3IuYw0KPiA+IGluZGV4IGNkNDM0Mjg1ZTNiNy4uOTc2ODI2NjUzMTQzIDEwMDY0NA0KPiA+IC0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMNCj4gPiArKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jDQo+ID4gQEAgLTYzNyw3ICs2
MzcsNyBAQCBzdGF0aWMgdm9pZCB0Z2xfZGMzY29fZGlzYWJsZV93b3JrKHN0cnVjdA0KPiA+IHdv
cmtfc3RydWN0ICp3b3JrKQ0KPiA+IMKgDQo+ID4gwqBzdGF0aWMgdm9pZCB0Z2xfZGlzYWxsb3df
ZGMzY29fb25fcHNyMl9leGl0KHN0cnVjdCBpbnRlbF9kcA0KPiA+ICppbnRlbF9kcCkNCj4gPiDC
oHsNCj4gPiAtwqDCoMKgwqDCoMKgwqBpZiAoIWludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCkN
Cj4gPiArwqDCoMKgwqDCoMKgwqBpZiAoIWludGVsX2RwLT5wc3IuZGMzY29fZXhpdGxpbmUpDQo+
ID4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqByZXR1cm47DQo+ID4gwqANCj4gPiDC
oMKgwqDCoMKgwqDCoMKgY2FuY2VsX2RlbGF5ZWRfd29yaygmaW50ZWxfZHAtPnBzci5kYzNjb193
b3JrKTsNCj4gPiBAQCAtNjc5LDcgKzY3OSw3IEBAIHRnbF9kYzNjb19leGl0bGluZV9jb21wdXRl
X2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHANCj4gPiAqaW50ZWxfZHAsDQo+ID4gwqDCoMKgwqDCoMKg
wqDCoGlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZXhpdF9zY2FubGluZXMgPg0KPiA+
IGNydGNfdmRpc3BsYXkpKQ0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgcmV0
dXJuOw0KPiA+IMKgDQo+ID4gLcKgwqDCoMKgwqDCoMKgY3J0Y19zdGF0ZS0+ZGMzY29fZXhpdGxp
bmUgPSBjcnRjX3ZkaXNwbGF5IC0gZXhpdF9zY2FubGluZXM7DQo+ID4gK8KgwqDCoMKgwqDCoMKg
aW50ZWxfZHAtPnBzci5kYzNjb19leGl0bGluZSA9IGNydGNfdmRpc3BsYXkgLQ0KPiA+IGV4aXRf
c2NhbmxpbmVzOw0KPiANCj4gVGhvdSBzaGFsdCBub3QgbXV0YXRlIGV4dGVybmFsbHkgdmlzaWJs
ZSBzdGF0ZSBpbiAuY29tcHV0ZV9jb25maWcoKS4NCj4gWW91IGVpdGhlciB3YW50IHRvIG1ha2Ug
YSBjb3B5IG9mIGl0IG9yIGp1c3QgY29tcHV0ZSBpdCBvbiB0aGUgc3BvdCBpbg0KPiB0aGUgcHNy
X2VuYWJsZSgpLiBUaGUgZmlyc3Qgb3B0aW9uIGlzIGEgZ29vZCBjaG9pY2Ugd2hlbiB5b3UgY2Fu
IGFsc28NCj4gaG9vayBpbnRvIGludG8gdGhlIHJlYWRvdXQrc3RhdGUgY2hlY2tlci4NCj4gDQpI
aSwgdGhhbmtzIGZvciBwb2ludGluZyBvdXQgd2hlcmUgSSB3YXMgYXBwcm9hY2hlZCBpbmNvcnJl
Y3RseS4NCkknbGwgZmxvYXQgbmV3IHBhdGNoIHRoYXQgbWFrZXMgY29weSBjcnRjX3N0YXRlJ3Mg
ZGMzY29fZXhpdGxpbmUgdG8NCmludGVsX3Bzci5kYzNjb19leGl0bGluZS4NCg0KPiA+IMKgfQ0K
PiA+IMKgDQo+ID4gwqBzdGF0aWMgYm9vbCBpbnRlbF9wc3IyX3NlbF9mZXRjaF9jb25maWdfdmFs
aWQoc3RydWN0IGludGVsX2RwDQo+ID4gKmludGVsX2RwLA0KPiA+IEBAIC05MzgsNyArOTM4LDcg
QEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2Uoc3RydWN0DQo+ID4gaW50ZWxf
ZHAgKmludGVsX2RwLA0KPiA+IMKgDQo+ID4gwqDCoMKgwqDCoMKgwqDCoHBzcl9pcnFfY29udHJv
bChpbnRlbF9kcCk7DQo+ID4gwqANCj4gPiAtwqDCoMKgwqDCoMKgwqBpZiAoY3J0Y19zdGF0ZS0+
ZGMzY29fZXhpdGxpbmUpIHsNCj4gPiArwqDCoMKgwqDCoMKgwqBpZiAoaW50ZWxfZHAtPnBzci5k
YzNjb19leGl0bGluZSkgew0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdTMy
IHZhbDsNCj4gPiDCoA0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgLyoNCj4g
PiBAQCAtOTQ3LDcgKzk0Nyw3IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfc291cmNl
KHN0cnVjdA0KPiA+IGludGVsX2RwICppbnRlbF9kcCwNCj4gPiDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCAqLw0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdmFs
ID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwNCj4gPiBFWElUTElORShjcHVfdHJhbnNjb2Rlcikp
Ow0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgdmFsICY9IH5FWElUTElORV9N
QVNLOw0KPiA+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2YWwgfD0gY3J0Y19zdGF0
ZS0+ZGMzY29fZXhpdGxpbmUgPDwgRVhJVExJTkVfU0hJRlQ7DQo+ID4gK8KgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoHZhbCB8PSBpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRsaW5lIDw8DQo+
ID4gRVhJVExJTkVfU0hJRlQ7DQo+ID4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqB2
YWwgfD0gRVhJVExJTkVfRU5BQkxFOw0KPiA+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVYSVRMSU5FKGNwdV90cmFuc2NvZGVyKSwNCj4g
PiB2YWwpOw0KPiA+IMKgwqDCoMKgwqDCoMKgwqB9DQo+ID4gQEAgLTk3Miw3ICs5NzIsNiBAQCBz
dGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1Y3QNCj4gPiBpbnRlbF9kcCAq
aW50ZWxfZHAsDQo+ID4gwqDCoMKgwqDCoMKgwqDCoGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVk
ID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7DQo+ID4gwqDCoMKgwqDCoMKgwqDCoGludGVsX2RwLT5w
c3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzID0gMDsNCj4gPiDCoMKgwqDCoMKgwqDCoMKgaW50ZWxf
ZHAtPnBzci5waXBlID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpLQ0KPiA+
ID5waXBlOw0KPiA+IC3CoMKgwqDCoMKgwqDCoGludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCA9
ICEhY3J0Y19zdGF0ZS0+ZGMzY29fZXhpdGxpbmU7DQo+ID4gwqDCoMKgwqDCoMKgwqDCoGludGVs
X2RwLT5wc3IudHJhbnNjb2RlciA9IGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyOw0KPiA+IMKg
wqDCoMKgwqDCoMKgwqAvKiBEQzUvREM2IHJlcXVpcmVzIGF0IGxlYXN0IDYgaWRsZSBmcmFtZXMg
Ki8NCj4gPiDCoMKgwqDCoMKgwqDCoMKgdmFsID0gdXNlY3NfdG9famlmZmllcyhpbnRlbF9nZXRf
ZnJhbWVfdGltZV91cyhjcnRjX3N0YXRlKSAqDQo+ID4gNik7DQo+ID4gQEAgLTE3NjEsNyArMTc2
MCw3IEBAIHRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLA0KPiA+IHVu
c2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzLA0KPiA+IMKgew0KPiA+IMKgwqDCoMKgwqDCoMKg
wqBtdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOw0KPiA+IMKgDQo+ID4gLcKgwqDCoMKg
wqDCoMKgaWYgKCFpbnRlbF9kcC0+cHNyLmRjM2NvX2VuYWJsZWQpDQo+ID4gK8KgwqDCoMKgwqDC
oMKgaWYgKCFpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRsaW5lKQ0KPiA+IMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgZ290byB1bmxvY2s7DQo+ID4gwqANCj4gPiDCoMKgwqDCoMKgwqDC
oMKgaWYgKCFpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCB8fCAhaW50ZWxfZHAtPnBzci5hY3Rp
dmUpDQo+ID4gLS0gDQo+ID4gMi4zMC4xDQo+ID4gDQo+ID4gX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18NCj4gPiBJbnRlbC1nZnggbWFpbGluZyBsaXN0DQo+
ID4gSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KPiA+IGh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4DQo+IA0KDQpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBs
aXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

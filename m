Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4659BD804E
	for <lists+intel-gfx@lfdr.de>; Tue, 15 Oct 2019 21:30:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 89E496E889;
	Tue, 15 Oct 2019 19:30:52 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E76506E889
 for <intel-gfx@lists.freedesktop.org>; Tue, 15 Oct 2019 19:30:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 15 Oct 2019 12:30:50 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,300,1566889200"; d="scan'208";a="199826153"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga006.jf.intel.com with SMTP; 15 Oct 2019 12:30:47 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 15 Oct 2019 22:30:47 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 15 Oct 2019 22:30:26 +0300
Message-Id: <20191015193035.25982-5-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20191015193035.25982-1-ville.syrjala@linux.intel.com>
References: <20191015193035.25982-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 04/13] drm/i915: Allow planes to declare
 their minimum acceptable cdclk
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClZh
cmlvdXMgcGl4ZWwgZm9ybWF0cyBhbmQgcGxhbmUgc2NhbGluZyBpbXBvc2UgYWRkaXRpb25hbCBj
b25zdHJhaW50cwpvbiB0aGUgY2RjbGsgZnJlcXVlbmN5LiBQcm92aWRlIGEgbmV3IHBsYW5lLT5t
aW5fY2RjbGsoKSBob29rIHRoYXQKd2lsbCBiZSB1c2VkIHRvIGNvbXB1dGUgdGhlIG1pbmltdW0g
YWNjZXB0YWJsZSBjZGNsayBmcmVxdWVuY3kgZm9yCmVhY2ggcGxhbmUuCgpBbm5veWluZ2x5IG9u
IHNvbWUgcGxhdGZvcm1zIHRoZSBudW1lciBvZiBhY3RpdmUgcGxhbmVzIGFmZmVjdHMKdGhpcyBj
YWxjdWxhdGlvbiBzbyB3ZSBtdXN0IGFsc28gdG9zcyBpbiBtb3JlIHBsYW5lcyBpbnRvIHRoZQpz
dGF0ZSB3aGVuIHRoZSBudW1iZXIgb2YgYWN0aXZlIHBsYW5lcyBjaGFuZ2VzLgoKVGhlIHNlcXVl
bmNlIG9mIHN0YXRlIGNvbXB1dGF0aW9uIG11c3QgYWxzbyBiZSBjaGFuZ2VkOgoxLiBjaGVja19w
bGFuZSgpICh1cGRhdGVzIHBsYW5lJ3MgdmlzaWJpbGl0eSBldGMuKQoyLiBmaWd1cmUgb3V0IGlm
IG1vcmUgcGxhbmVzIG5vdyByZXF1aXJlIHVwZGF0ZSBtaW5fY2RjbGsKICAgY29tcHV0YWlvbgoz
LiBjYWxjdWxhdGUgdGhlIG5ldyBtaW4gY2RjbGsgZm9yIGVhY2ggcGxhbmUgaW4gdGhlIHN0YXRl
CjQuIGlmIHRoZSBtaW5pbXVtIG9mIGFueSBwbGFuZSBub3cgZXhjZWVkcyB0aGUgY3VycmVudAog
ICBsb2dpY2FsIGNkY2xrIHdlIHJlY29tcHV0ZSB0aGUgY2RjbGsKNC4gZHVyaW5nIGNkY2xrIGNv
bXB1dGF0aW9uIHRha2UgdGhlIHBsYW5lcycgbWluX2NkY2xrIGludG8KICAgYWNjb3V0bgo1LiBm
b2xsb3cgdGhlIG5vcm1hbCBjZGNsayBwcm9ncmFtbWluZyB0byBjaGFuZ2UgdGhlCiAgIGNkY2xr
IGZyZXF1ZW5jeS4gVGhpcyBtYXkgbm93IHJlcXVpcmUgYSBtb2Rlc2V0IChleGNlcHQKICAgb24g
Ynh0L2dsayBpbiBzb21lIGNhc2VzKSwgd2hpY2ggZWl0aGVyIHN1Y2NlZWRzIG9yCiAgIGZhaWxz
IGRlcGVuZGluZyBvbiB3aGV0aGVyIHVzZXJzcGFjZSBoYXMgZ2l2ZW4KICAgdXMgcGVybWlzc2lv
biB0byBwZXJmb3JtIGEgbW9kZXNldCBvciBub3QuCgp2MjogRml4IHBsYW5lIGlkIGNoZWNrIGlu
IGludGVsX2NydGNfYWRkX3BsYW5lc190b19zdGF0ZSgpCiAgICBPbmx5IHByaW50IHRoZSBkZWJ1
ZyBtZXNzYWdlIHdoZW4gY2RjbGsgbmVlZHMgYnVtcGluZwogICAgVXNlIGRldl9wcml2LT5jZGNs
ay4uLiBhcyB0aGUgb2xkIHN0YXRlIGV4cGxpY2l0bHkKClJldmlld2VkLWJ5OiBKdWhhLVBla2th
IEhlaWtraWxhIDxqdWhhcGVra2EuaGVpa2tpbGFAZ21haWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBW
aWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIC4uLi9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYyB8ICAzOSArKwogLi4uL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5oIHwgICAyICsKIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYyAgICB8ICAxNiArCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAxODQgKysrKysrKystLQogLi4u
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgICA0ICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMgICB8IDM0MSArKysrKysrKysr
KysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmggICB8
ICAgNyArCiA3IGZpbGVzIGNoYW5nZWQsIDU3MSBpbnNlcnRpb25zKCspLCAyMiBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21p
Y19wbGFuZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxh
bmUuYwppbmRleCBhNmNmZjVhMTYwZmIuLjk4ZjU1N2E5ZjhlZSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5jCkBAIC0xMzgsNiArMTM4
LDQ0IEBAIHVuc2lnbmVkIGludCBpbnRlbF9wbGFuZV9kYXRhX3JhdGUoY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJcmV0dXJuIGNwcCAqIGNydGNfc3RhdGUtPnBp
eGVsX3JhdGU7CiB9CiAKK2Jvb2wgaW50ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSkK
K3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHBsYW5lLT5i
YXNlLmRldik7CisJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSA9
CisJCWludGVsX2F0b21pY19nZXRfbmV3X3BsYW5lX3N0YXRlKHN0YXRlLCBwbGFuZSk7CisJc3Ry
dWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKHBsYW5lX3N0YXRlLT5iYXNlLmNy
dGMpOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlOworCisJaWYgKCFwbGFu
ZV9zdGF0ZS0+YmFzZS52aXNpYmxlIHx8ICFwbGFuZS0+bWluX2NkY2xrKQorCQlyZXR1cm4gZmFs
c2U7CisKKwljcnRjX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9uZXdfY3J0Y19zdGF0ZShzdGF0
ZSwgY3J0Yyk7CisKKwljcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSA9CisJCXBsYW5l
LT5taW5fY2RjbGsoY3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUpOworCisJLyoKKwkgKiBEb2VzIHRo
ZSBjZGNsayBuZWVkIHRvIGJlIGJ1bWJlZCB1cD8KKwkgKgorCSAqIE5vdGU6IHdlIG9idmlvdXNs
eSBuZWVkIHRvIGJlIGNhbGxlZCBiZWZvcmUgdGhlIG5ldworCSAqIGNkY2xrIGZyZXF1ZW5jeSBp
cyBjYWxjdWxhdGVkIHNvIHN0YXRlLT5jZGNsay5sb2dpY2FsCisJICogaGFzbid0IGJlZW4gcG9w
dWxhdGVkIHlldC4gSGVuY2Ugd2UgbG9vayBhdCB0aGUgb2xkCisJICogY2RjbGsgc3RhdGUgdW5k
ZXIgZGV2X3ByaXYtPmNkY2xrLmxvZ2ljYWwuIFRoaXMgaXMKKwkgKiBzYWZlIGFzIGxvbmcgd2Ug
aG9sZCBhdCBsZWFzdCBvbmUgY3J0YyBtdXRleCAod2hpY2gKKwkgKiBtdXN0IGJlIHRydWUgc2lu
Y2Ugd2UgaGF2ZSBjcnRjX3N0YXRlKS4KKwkgKi8KKwlpZiAoY3J0Y19zdGF0ZS0+bWluX2NkY2xr
W3BsYW5lLT5pZF0gPiBkZXZfcHJpdi0+Y2RjbGsubG9naWNhbC5jZGNsaykgeworCQlEUk1fREVC
VUdfS01TKCJbUExBTkU6JWQ6JXNdIG1pbl9jZGNsayAoJWQga0h6KSA+IGxvZ2ljYWwgY2RjbGsg
KCVkIGtIeilcbiIsCisJCQkgICAgICBwbGFuZS0+YmFzZS5iYXNlLmlkLCBwbGFuZS0+YmFzZS5u
YW1lLAorCQkJICAgICAgY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0sCisJCQkgICAg
ICBkZXZfcHJpdi0+Y2RjbGsubG9naWNhbC5jZGNsayk7CisJCXJldHVybiB0cnVlOworCX0KKwor
CXJldHVybiBmYWxzZTsKK30KKwogaW50IGludGVsX3BsYW5lX2F0b21pY19jaGVja193aXRoX3N0
YXRlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJ
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlLAogCQkJCQljb25zdCBzdHJ1
Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKm9sZF9wbGFuZV9zdGF0ZSwKQEAgLTE1MSw2ICsxODksNyBA
QCBpbnQgaW50ZWxfcGxhbmVfYXRvbWljX2NoZWNrX3dpdGhfc3RhdGUoY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjXwogCW5ld19jcnRjX3N0YXRlLT5udjEyX3BsYW5lcyAm
PSB+QklUKHBsYW5lLT5pZCk7CiAJbmV3X2NydGNfc3RhdGUtPmM4X3BsYW5lcyAmPSB+QklUKHBs
YW5lLT5pZCk7CiAJbmV3X2NydGNfc3RhdGUtPmRhdGFfcmF0ZVtwbGFuZS0+aWRdID0gMDsKKwlu
ZXdfY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0gPSAwOwogCW5ld19wbGFuZV9zdGF0
ZS0+YmFzZS52aXNpYmxlID0gZmFsc2U7CiAKIAlpZiAoIW5ld19wbGFuZV9zdGF0ZS0+YmFzZS5j
cnRjICYmICFvbGRfcGxhbmVfc3RhdGUtPmJhc2UuY3J0YykKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5oCmluZGV4IGRjODVhZjAyZTliNy4u
ZTYxZTlhODJhYWRmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2F0b21pY19wbGFuZS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYXRvbWljX3BsYW5lLmgKQEAgLTQ3LDUgKzQ3LDcgQEAgaW50IGludGVsX3BsYW5lX2F0b21p
Y19jYWxjX2NoYW5nZXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0
YXQKIAkJCQkgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJICAg
IGNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqb2xkX3BsYW5lX3N0YXRlLAogCQkJCSAg
ICBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKTsKK2Jvb2wgaW50ZWxfcGxh
bmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJ
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSk7CiAKICNlbmRpZiAvKiBfX0lOVEVMX0FUT01JQ19Q
TEFORV9IX18gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfY2RjbGsuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYwpp
bmRleCA2YzE3YTNiYmY4NjYuLjBjYWVmMjU5MmE3ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jZGNsay5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYwpAQCAtMTkxOCw2ICsxOTE4LDE5IEBAIHN0YXRpYyBpbnQg
aW50ZWxfcGl4ZWxfcmF0ZV90b19jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSkKIAkJcmV0dXJuIERJVl9ST1VORF9VUChwaXhlbF9yYXRlICogMTAwLCA5MCk7
CiB9CiAKK3N0YXRpYyBpbnQgaW50ZWxfcGxhbmVzX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9
IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50
ZWxfcGxhbmUgKnBsYW5lOworCWludCBtaW5fY2RjbGsgPSAwOworCisJZm9yX2VhY2hfaW50ZWxf
cGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgY3J0YywgcGxhbmUpCisJCW1pbl9jZGNsayA9
IG1heChjcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSwgbWluX2NkY2xrKTsKKworCXJl
dHVybiBtaW5fY2RjbGs7Cit9CisKIGludCBpbnRlbF9jcnRjX2NvbXB1dGVfbWluX2NkY2xrKGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9CkBAIC0xOTg2LDYgKzE5OTksOSBAQCBpbnQgaW50ZWxf
Y3J0Y19jb21wdXRlX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSkKIAkgICAgSVNfR0VNSU5JTEFLRShkZXZfcHJpdikpCiAJCW1pbl9jZGNsayA9IG1h
eCgxNTg0MDAsIG1pbl9jZGNsayk7CiAKKwkvKiBBY2NvdW50IGZvciBhZGRpdGlvbmFsIG5lZWRz
IGZyb20gdGhlIHBsYW5lcyAqLworCW1pbl9jZGNsayA9IG1heChpbnRlbF9wbGFuZXNfbWluX2Nk
Y2xrKGNydGNfc3RhdGUpLCBtaW5fY2RjbGspOworCiAJaWYgKG1pbl9jZGNsayA+IGRldl9wcml2
LT5tYXhfY2RjbGtfZnJlcSkgewogCQlEUk1fREVCVUdfS01TKCJyZXF1aXJlZCBjZGNsayAoJWQg
a0h6KSBleGNlZWRzIG1heCAoJWQga0h6KVxuIiwKIAkJCSAgICAgIG1pbl9jZGNsaywgZGV2X3By
aXYtPm1heF9jZGNsa19mcmVxKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmMKaW5kZXggNDRiZDRkMTUwMTliLi42N2JiNWZhMDNiMmIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0zMTQwLDYgKzMxNDAs
NyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wbGFuZV9kaXNhYmxlX25vYXRvbWljKHN0cnVjdCBpbnRl
bF9jcnRjICpjcnRjLAogCWludGVsX3NldF9wbGFuZV92aXNpYmxlKGNydGNfc3RhdGUsIHBsYW5l
X3N0YXRlLCBmYWxzZSk7CiAJZml4dXBfYWN0aXZlX3BsYW5lcyhjcnRjX3N0YXRlKTsKIAljcnRj
X3N0YXRlLT5kYXRhX3JhdGVbcGxhbmUtPmlkXSA9IDA7CisJY3J0Y19zdGF0ZS0+bWluX2NkY2xr
W3BsYW5lLT5pZF0gPSAwOwogCiAJaWYgKHBsYW5lLT5pZCA9PSBQTEFORV9QUklNQVJZKQogCQlp
bnRlbF9wcmVfZGlzYWJsZV9wcmltYXJ5X25vYXRvbWljKCZjcnRjLT5iYXNlKTsKQEAgLTM1NjMs
NiArMzU2NCw1MyBAQCBpbnQgc2tsX2NoZWNrX3BsYW5lX3N1cmZhY2Uoc3RydWN0IGludGVsX3Bs
YW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgaTl4
eF9wbGFuZV9yYXRpbyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
KwkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJ
CSAgICAgdW5zaWduZWQgaW50ICpudW0sIHVuc2lnbmVkIGludCAqZGVuKQoreworCWNvbnN0IHN0
cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmJhc2UuZmI7CisJdW5zaWdu
ZWQgaW50IGNwcCA9IGZiLT5mb3JtYXQtPmNwcFswXTsKKworCS8qCisJICogZzR4IGJzcGVjIHNh
eXMgNjRicHAgcGl4ZWwgcmF0ZSBjYW4ndCBleGNlZWQgODAlCisJICogb2YgY2RjbGsgd2hlbiB0
aGUgc3ByaXRlIHBsYW5lIGlzIGVuYWJsZWQgb24gdGhlCisJICogc2FtZSBwaXBlLiBpbGsvc25i
IGJzcGVjIHNheXMgNjRicHAgcGl4ZWwgcmF0ZSBpcworCSAqIG5ldmVyIGFsbG93ZWQgdG8gZXhj
ZWVkIDgwJSBvZiBjZGNsay4gTGV0J3MganVzdCBnbworCSAqIHdpdGggdGhlIGlsay9zbmIgbGlt
aXQgYWx3YXlzLgorCSAqLworCWlmIChjcHAgPT0gOCkgeworCQkqbnVtID0gMTA7CisJCSpkZW4g
PSA4OworCX0gZWxzZSB7CisJCSpudW0gPSAxOworCQkqZGVuID0gMTsKKwl9Cit9CisKK3N0YXRp
YyBpbnQgaTl4eF9wbGFuZV9taW5fY2RjbGsoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCisJCQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9z
dGF0ZSkKK3sKKwl1bnNpZ25lZCBpbnQgcGl4ZWxfcmF0ZTsKKwl1bnNpZ25lZCBpbnQgbnVtLCBk
ZW47CisKKwkvKgorCSAqIE5vdGUgdGhhdCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRz
IGZvciBib3RoCisJICogaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25z
Y2FsaW5nIGZhY3RvcnMuCisJICogUHJlLUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNp
ZGVyIHRoZSBob3Jpem9udGFsCisJICogZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9y
ZSB0aGF0IGFuZCBqdXN0IGNvbnNpZGVyCisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8K
KwlwaXhlbF9yYXRlID0gY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZTsKKworCWk5eHhfcGxhbmVfcmF0
aW8oY3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUsICZudW0sICZkZW4pOworCisJLyogdHdvIHBpeGVs
cyBwZXIgY2xvY2sgd2l0aCBkb3VibGUgd2lkZSBwaXBlICovCisJaWYgKGNydGNfc3RhdGUtPmRv
dWJsZV93aWRlKQorCQlkZW4gKj0gMjsKKworCXJldHVybiBESVZfUk9VTkRfVVAocGl4ZWxfcmF0
ZSAqIG51bSwgZGVuKTsKK30KKwogdW5zaWduZWQgaW50CiBpOXh4X3BsYW5lX21heF9zdHJpZGUo
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAkJICAgICAgdTMyIHBpeGVsX2Zvcm1hdCwgdTY0
IG1vZGlmaWVyLApAQCAtMTE1NTcsNiArMTE2MDUsNyBAQCBpbnQgaW50ZWxfcGxhbmVfYXRvbWlj
X2NhbGNfY2hhbmdlcyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3Rh
dAogCQlwbGFuZV9zdGF0ZS0+YmFzZS52aXNpYmxlID0gdmlzaWJsZSA9IGZhbHNlOwogCQljcnRj
X3N0YXRlLT5hY3RpdmVfcGxhbmVzICY9IH5CSVQocGxhbmUtPmlkKTsKIAkJY3J0Y19zdGF0ZS0+
ZGF0YV9yYXRlW3BsYW5lLT5pZF0gPSAwOworCQljcnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUt
PmlkXSA9IDA7CiAJfQogCiAJaWYgKCF3YXNfdmlzaWJsZSAmJiAhdmlzaWJsZSkKQEAgLTExODM4
LDkgKzExODg3LDYgQEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2F0b21pY19jaGVjayhzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5
KSB7CiAJCWlmIChtb2RlX2NoYW5nZWQgfHwgY3J0Y19zdGF0ZS0+dXBkYXRlX3BpcGUpCiAJCQly
ZXQgPSBza2xfdXBkYXRlX3NjYWxlcl9jcnRjKGNydGNfc3RhdGUpOwotCi0JCWlmICghcmV0KQot
CQkJcmV0ID0gaWNsX2NoZWNrX252MTJfcGxhbmVzKGNydGNfc3RhdGUpOwogCQlpZiAoIXJldCkK
IAkJCXJldCA9IHNrbF9jaGVja19waXBlX21heF9waXhlbF9yYXRlKGNydGMsIGNydGNfc3RhdGUp
OwogCQlpZiAoIXJldCkKQEAgLTEzNTM0LDEyICsxMzU4MCw0OSBAQCBzdGF0aWMgdm9pZCBpbnRl
bF9jcnRjX2NoZWNrX2Zhc3RzZXQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9j
cnRjX3N0YQogCW5ld19jcnRjX3N0YXRlLT5oYXNfZHJycyA9IG9sZF9jcnRjX3N0YXRlLT5oYXNf
ZHJyczsKIH0KIAotc3RhdGljIGludCBpbnRlbF9hdG9taWNfY2hlY2tfcGxhbmVzKHN0cnVjdCBp
bnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBpbnRlbF9jcnRjX2FkZF9wbGFu
ZXNfdG9fc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJCSAgc3Ry
dWN0IGludGVsX2NydGMgKmNydGMsCisJCQkJCSAgdTggcGxhbmVfaWRzX21hc2spCiB7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYp
OworCXN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmU7CisKKwlmb3JfZWFjaF9pbnRlbF9wbGFuZV9v
bl9jcnRjKCZkZXZfcHJpdi0+ZHJtLCBjcnRjLCBwbGFuZSkgeworCQlzdHJ1Y3QgaW50ZWxfcGxh
bmVfc3RhdGUgKnBsYW5lX3N0YXRlOworCisJCWlmICgocGxhbmVfaWRzX21hc2sgJiBCSVQocGxh
bmUtPmlkKSkgPT0gMCkKKwkJCWNvbnRpbnVlOworCisJCXBsYW5lX3N0YXRlID0gaW50ZWxfYXRv
bWljX2dldF9wbGFuZV9zdGF0ZShzdGF0ZSwgcGxhbmUpOworCQlpZiAoSVNfRVJSKHBsYW5lX3N0
YXRlKSkKKwkJCXJldHVybiBQVFJfRVJSKHBsYW5lX3N0YXRlKTsKKwl9CisKKwlyZXR1cm4gMDsK
K30KKworc3RhdGljIGJvb2wgYWN0aXZlX3BsYW5lc19hZmZlY3RzX21pbl9jZGNsayhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCit7CisJLyogU2VlIHtoc3csdmx2LGl2Yn1fcGxh
bmVfcmF0aW8oKSAqLworCXJldHVybiBJU19CUk9BRFdFTEwoZGV2X3ByaXYpIHx8IElTX0hBU1dF
TEwoZGV2X3ByaXYpIHx8CisJCUlTX0NIRVJSWVZJRVcoZGV2X3ByaXYpIHx8IElTX1ZBTExFWVZJ
RVcoZGV2X3ByaXYpIHx8CisJCUlTX0lWWUJSSURHRShkZXZfcHJpdik7Cit9CisKK3N0YXRpYyBp
bnQgaW50ZWxfYXRvbWljX2NoZWNrX3BsYW5lcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKKwkJCQkgICAgIGJvb2wgKm5lZWRfbW9kZXNldCkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRldik7CisJc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlLCAqbmV3X2NydGNfc3RhdGU7CiAJc3RydWN0
IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZTsKIAlzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBs
YW5lOworCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjOwogCWludCBpLCByZXQ7CiAKKwlyZXQgPSBp
Y2xfYWRkX2xpbmtlZF9wbGFuZXMoc3RhdGUpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisK
IAlmb3JfZWFjaF9uZXdfaW50ZWxfcGxhbmVfaW5fc3RhdGUoc3RhdGUsIHBsYW5lLCBwbGFuZV9z
dGF0ZSwgaSkgewogCQlyZXQgPSBpbnRlbF9wbGFuZV9hdG9taWNfY2hlY2soc3RhdGUsIHBsYW5l
KTsKIAkJaWYgKHJldCkgewpAQCAtMTM1NDksNiArMTM2MzIsNDEgQEAgc3RhdGljIGludCBpbnRl
bF9hdG9taWNfY2hlY2tfcGxhbmVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQog
CQl9CiAJfQogCisJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUsIGNy
dGMsIG9sZF9jcnRjX3N0YXRlLAorCQkJCQkgICAgbmV3X2NydGNfc3RhdGUsIGkpIHsKKwkJdTgg
b2xkX2FjdGl2ZV9wbGFuZXMsIG5ld19hY3RpdmVfcGxhbmVzOworCisJCXJldCA9IGljbF9jaGVj
a19udjEyX3BsYW5lcyhuZXdfY3J0Y19zdGF0ZSk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0
OworCisJCS8qCisJCSAqIE9uIHNvbWUgcGxhdGZvcm1zIHRoZSBudW1iZXIgb2YgYWN0aXZlIHBs
YW5lcyBhZmZlY3RzCisJCSAqIHRoZSBwbGFuZXMnIG1pbmltdW0gY2RjbGsgY2FsY3VsYXRpb24u
IEFkZCBzdWNoIHBsYW5lcworCQkgKiB0byB0aGUgc3RhdGUgYmVmb3JlIHdlIGNvbXB1dGUgdGhl
IG1pbmltdW0gY2RjbGsuCisJCSAqLworCQlpZiAoIWFjdGl2ZV9wbGFuZXNfYWZmZWN0c19taW5f
Y2RjbGsoZGV2X3ByaXYpKQorCQkJY29udGludWU7CisKKwkJb2xkX2FjdGl2ZV9wbGFuZXMgPSBv
bGRfY3J0Y19zdGF0ZS0+YWN0aXZlX3BsYW5lcyAmIH5CSVQoUExBTkVfQ1VSU09SKTsKKwkJbmV3
X2FjdGl2ZV9wbGFuZXMgPSBuZXdfY3J0Y19zdGF0ZS0+YWN0aXZlX3BsYW5lcyAmIH5CSVQoUExB
TkVfQ1VSU09SKTsKKworCQlpZiAoaHdlaWdodDgob2xkX2FjdGl2ZV9wbGFuZXMpID09IGh3ZWln
aHQ4KG5ld19hY3RpdmVfcGxhbmVzKSkKKwkJCWNvbnRpbnVlOworCisJCXJldCA9IGludGVsX2Ny
dGNfYWRkX3BsYW5lc190b19zdGF0ZShzdGF0ZSwgY3J0YywgbmV3X2FjdGl2ZV9wbGFuZXMpOwor
CQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwl9CisKKwkvKgorCSAqIGFjdGl2ZV9wbGFuZXMg
Yml0bWFzayBoYXMgYmVlbiB1cGRhdGVkLCBhbmQgcG90ZW50aWFsbHkKKwkgKiBhZmZlY3RlZCBw
bGFuZXMgYXJlIHBhcnQgb2YgdGhlIHN0YXRlLiBXZSBjYW4gbm93CisJICogY29tcHV0ZSB0aGUg
bWluaW11bSBjZGNsayBmb3IgZWFjaCBwbGFuZS4KKwkgKi8KKwlmb3JfZWFjaF9uZXdfaW50ZWxf
cGxhbmVfaW5fc3RhdGUoc3RhdGUsIHBsYW5lLCBwbGFuZV9zdGF0ZSwgaSkKKwkJKm5lZWRfbW9k
ZXNldCB8PSBpbnRlbF9wbGFuZV9jYWxjX21pbl9jZGNsayhzdGF0ZSwgcGxhbmUpOworCiAJcmV0
dXJuIDA7CiB9CiAKQEAgLTEzNjI5LDIyICsxMzc0NywxNiBAQCBzdGF0aWMgaW50IGludGVsX2F0
b21pY19jaGVjayhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCiAJYW55X21zIHw9IHN0YXRlLT5j
ZGNsay5mb3JjZV9taW5fY2RjbGtfY2hhbmdlZDsKIAorCXJldCA9IGludGVsX2F0b21pY19jaGVj
a19wbGFuZXMoc3RhdGUsICZhbnlfbXMpOworCWlmIChyZXQpCisJCWdvdG8gZmFpbDsKKwogCWlm
IChhbnlfbXMpIHsKIAkJcmV0ID0gaW50ZWxfbW9kZXNldF9jaGVja3Moc3RhdGUpOwogCQlpZiAo
cmV0KQogCQkJZ290byBmYWlsOwotCX0gZWxzZSB7Ci0JCXN0YXRlLT5jZGNsay5sb2dpY2FsID0g
ZGV2X3ByaXYtPmNkY2xrLmxvZ2ljYWw7CiAJfQogCi0JcmV0ID0gaWNsX2FkZF9saW5rZWRfcGxh
bmVzKHN0YXRlKTsKLQlpZiAocmV0KQotCQlnb3RvIGZhaWw7Ci0KLQlyZXQgPSBpbnRlbF9hdG9t
aWNfY2hlY2tfcGxhbmVzKHN0YXRlKTsKLQlpZiAocmV0KQotCQlnb3RvIGZhaWw7Ci0KIAlyZXQg
PSBpbnRlbF9hdG9taWNfY2hlY2tfY3J0Y3Moc3RhdGUpOwogCWlmIChyZXQpCiAJCWdvdG8gZmFp
bDsKQEAgLTE0OTE5LDYgKzE1MDMxLDE1IEBAIGludGVsX3ByaW1hcnlfcGxhbmVfY3JlYXRlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwaXBlIHBpcGUpCiAJCXBsYW5l
LT5nZXRfaHdfc3RhdGUgPSBpOXh4X3BsYW5lX2dldF9od19zdGF0ZTsKIAkJcGxhbmUtPmNoZWNr
X3BsYW5lID0gaTl4eF9wbGFuZV9jaGVjazsKIAorCQlpZiAoSVNfQlJPQURXRUxMKGRldl9wcml2
KSB8fCBJU19IQVNXRUxMKGRldl9wcml2KSkKKwkJCXBsYW5lLT5taW5fY2RjbGsgPSBoc3dfcGxh
bmVfbWluX2NkY2xrOworCQllbHNlIGlmIChJU19JVllCUklER0UoZGV2X3ByaXYpKQorCQkJcGxh
bmUtPm1pbl9jZGNsayA9IGl2Yl9wbGFuZV9taW5fY2RjbGs7CisJCWVsc2UgaWYgKElTX0NIRVJS
WVZJRVcoZGV2X3ByaXYpIHx8IElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpKQorCQkJcGxhbmUtPm1p
bl9jZGNsayA9IHZsdl9wbGFuZV9taW5fY2RjbGs7CisJCWVsc2UKKwkJCXBsYW5lLT5taW5fY2Rj
bGsgPSBpOXh4X3BsYW5lX21pbl9jZGNsazsKKwogCQlwbGFuZV9mdW5jcyA9ICZpOTY1X3BsYW5l
X2Z1bmNzOwogCX0gZWxzZSB7CiAJCWZvcm1hdHMgPSBpOHh4X3ByaW1hcnlfZm9ybWF0czsKQEAg
LTE0OTMwLDYgKzE1MDUxLDcgQEAgaW50ZWxfcHJpbWFyeV9wbGFuZV9jcmVhdGUoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBlbnVtIHBpcGUgcGlwZSkKIAkJcGxhbmUtPmRpc2Fi
bGVfcGxhbmUgPSBpOXh4X2Rpc2FibGVfcGxhbmU7CiAJCXBsYW5lLT5nZXRfaHdfc3RhdGUgPSBp
OXh4X3BsYW5lX2dldF9od19zdGF0ZTsKIAkJcGxhbmUtPmNoZWNrX3BsYW5lID0gaTl4eF9wbGFu
ZV9jaGVjazsKKwkJcGxhbmUtPm1pbl9jZGNsayA9IGk5eHhfcGxhbmVfbWluX2NkY2xrOwogCiAJ
CXBsYW5lX2Z1bmNzID0gJmk4eHhfcGxhbmVfZnVuY3M7CiAJfQpAQCAtMTY4MzIsMTkgKzE2OTU0
LDExIEBAIHN0YXRpYyB2b2lkIGludGVsX21vZGVzZXRfcmVhZG91dF9od19zdGF0ZShzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2KQogCiAJCQlpbnRlbF9jcnRjX2NvbXB1dGVfcGl4ZWxfcmF0ZShjcnRj
X3N0YXRlKTsKIAotCQkJbWluX2NkY2xrID0gaW50ZWxfY3J0Y19jb21wdXRlX21pbl9jZGNsayhj
cnRjX3N0YXRlKTsKLQkJCWlmIChXQVJOX09OKG1pbl9jZGNsayA8IDApKQotCQkJCW1pbl9jZGNs
ayA9IDA7Ci0KIAkJCWRybV9jYWxjX3RpbWVzdGFtcGluZ19jb25zdGFudHMoJmNydGMtPmJhc2Us
CiAJCQkJCQkJJmNydGNfc3RhdGUtPmJhc2UuYWRqdXN0ZWRfbW9kZSk7CiAJCQl1cGRhdGVfc2Nh
bmxpbmVfb2Zmc2V0KGNydGNfc3RhdGUpOwogCQl9CiAKLQkJZGV2X3ByaXYtPm1pbl9jZGNsa1tj
cnRjLT5waXBlXSA9IG1pbl9jZGNsazsKLQkJZGV2X3ByaXYtPm1pbl92b2x0YWdlX2xldmVsW2Ny
dGMtPnBpcGVdID0KLQkJCWNydGNfc3RhdGUtPm1pbl92b2x0YWdlX2xldmVsOwotCiAJCWZvcl9l
YWNoX2ludGVsX3BsYW5lX29uX2NydGMoJmRldl9wcml2LT5kcm0sIGNydGMsIHBsYW5lKSB7CiAJ
CQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlID0KIAkJCQl0b19p
bnRlbF9wbGFuZV9zdGF0ZShwbGFuZS0+YmFzZS5zdGF0ZSk7CkBAIC0xNjg1Niw4ICsxNjk3MCwz
NCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9tb2Rlc2V0X3JlYWRvdXRfaHdfc3RhdGUoc3RydWN0IGRy
bV9kZXZpY2UgKmRldikKIAkJCWlmIChwbGFuZV9zdGF0ZS0+YmFzZS52aXNpYmxlKQogCQkJCWNy
dGNfc3RhdGUtPmRhdGFfcmF0ZVtwbGFuZS0+aWRdID0KIAkJCQkJNCAqIGNydGNfc3RhdGUtPnBp
eGVsX3JhdGU7CisJCQkvKgorCQkJICogRklYTUUgZG9uJ3QgaGF2ZSB0aGUgZmIgeWV0LCBzbyBj
YW4ndAorCQkJICogdXNlIHBsYW5lLT5taW5fY2RjbGsoKSA6KAorCQkJICovCisJCQlpZiAocGxh
bmVfc3RhdGUtPmJhc2UudmlzaWJsZSAmJiBwbGFuZS0+bWluX2NkY2xrKSB7CisJCQkJaWYgKGNy
dGNfc3RhdGUtPmRvdWJsZV93aWRlIHx8CisJCQkJICAgIElOVEVMX0dFTihkZXZfcHJpdikgPj0g
MTAgfHwgSVNfR0VNSU5JTEFLRShkZXZfcHJpdikpCisJCQkJCWNydGNfc3RhdGUtPm1pbl9jZGNs
a1twbGFuZS0+aWRdID0KKwkJCQkJCURJVl9ST1VORF9VUChjcnRjX3N0YXRlLT5waXhlbF9yYXRl
LCAyKTsKKwkJCQllbHNlCisJCQkJCWNydGNfc3RhdGUtPm1pbl9jZGNsa1twbGFuZS0+aWRdID0K
KwkJCQkJCWNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisJCQl9CisJCQlEUk1fREVCVUdfS01TKCJb
UExBTkU6JWQ6JXNdIG1pbl9jZGNsayAlZCBrSHpcbiIsCisJCQkJICAgICAgcGxhbmUtPmJhc2Uu
YmFzZS5pZCwgcGxhbmUtPmJhc2UubmFtZSwKKwkJCQkgICAgICBjcnRjX3N0YXRlLT5taW5fY2Rj
bGtbcGxhbmUtPmlkXSk7CisJCX0KKworCQlpZiAoY3J0Y19zdGF0ZS0+YmFzZS5hY3RpdmUpIHsK
KwkJCW1pbl9jZGNsayA9IGludGVsX2NydGNfY29tcHV0ZV9taW5fY2RjbGsoY3J0Y19zdGF0ZSk7
CisJCQlpZiAoV0FSTl9PTihtaW5fY2RjbGsgPCAwKSkKKwkJCQltaW5fY2RjbGsgPSAwOwogCQl9
CiAKKwkJZGV2X3ByaXYtPm1pbl9jZGNsa1tjcnRjLT5waXBlXSA9IG1pbl9jZGNsazsKKwkJZGV2
X3ByaXYtPm1pbl92b2x0YWdlX2xldmVsW2NydGMtPnBpcGVdID0KKwkJCWNydGNfc3RhdGUtPm1p
bl92b2x0YWdlX2xldmVsOworCiAJCWludGVsX2J3X2NydGNfdXBkYXRlKGJ3X3N0YXRlLCBjcnRj
X3N0YXRlKTsKIAogCQlpbnRlbF9waXBlX2NvbmZpZ19zYW5pdHlfY2hlY2soZGV2X3ByaXYsIGNy
dGNfc3RhdGUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfdHlwZXMuaAppbmRleCAwMWZlZDg5NTdhZGUuLjZhNTBjMDc0YTVjMyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAg
LTk0MCw2ICs5NDAsOCBAQCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSB7CiAKIAlzdHJ1Y3QgaW50
ZWxfY3J0Y193bV9zdGF0ZSB3bTsKIAorCWludCBtaW5fY2RjbGtbSTkxNV9NQVhfUExBTkVTXTsK
KwogCXUzMiBkYXRhX3JhdGVbSTkxNV9NQVhfUExBTkVTXTsKIAogCS8qIEdhbW1hIG1vZGUgcHJv
Z3JhbW1lZCBvbiB0aGUgcGlwZSAqLwpAQCAtMTA3OSw2ICsxMDgxLDggQEAgc3RydWN0IGludGVs
X3BsYW5lIHsKIAlib29sICgqZ2V0X2h3X3N0YXRlKShzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5l
LCBlbnVtIHBpcGUgKnBpcGUpOwogCWludCAoKmNoZWNrX3BsYW5lKShzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgIHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxh
bmVfc3RhdGUpOworCWludCAoKm1pbl9jZGNsaykoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUsCisJCQkgY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFu
ZV9zdGF0ZSk7CiB9OwogCiBzdHJ1Y3QgaW50ZWxfd2F0ZXJtYXJrX3BhcmFtcyB7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nwcml0ZS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYwppbmRleCA1YWUxMmFiM2M1Yjcu
LjQ2OWY3OWIwMTExNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9zcHJpdGUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nw
cml0ZS5jCkBAIC0zMjIsNiArMzIyLDU1IEBAIGJvb2wgaWNsX2lzX2hkcl9wbGFuZShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcGxhbmVfaWQgcGxhbmVfaWQpCiAJCWlj
bF9oZHJfcGxhbmVfbWFzaygpICYgQklUKHBsYW5lX2lkKTsKIH0KIAorc3RhdGljIHZvaWQKK3Nr
bF9wbGFuZV9yYXRpbyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
KwkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJdW5zaWdu
ZWQgaW50ICpudW0sIHVuc2lnbmVkIGludCAqZGVuKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUocGxhbmVfc3RhdGUtPmJhc2UucGxhbmUtPmRldik7CisJ
Y29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsK
KworCWlmIChmYi0+Zm9ybWF0LT5jcHBbMF0gPT0gOCkgeworCQlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSAxMCB8fCBJU19HRU1JTklMQUtFKGRldl9wcml2KSkgeworCQkJKm51bSA9IDEwOwor
CQkJKmRlbiA9IDg7CisJCX0gZWxzZSB7CisJCQkqbnVtID0gOTsKKwkJCSpkZW4gPSA4OworCQl9
CisJfSBlbHNlIHsKKwkJKm51bSA9IDE7CisJCSpkZW4gPSAxOworCX0KK30KKworc3RhdGljIGlu
dCBza2xfcGxhbmVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVf
c3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShw
bGFuZV9zdGF0ZS0+YmFzZS5wbGFuZS0+ZGV2KTsKKwl1bnNpZ25lZCBpbnQgcGl4ZWxfcmF0ZSA9
IGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisJdW5zaWduZWQgaW50IHNyY193LCBzcmNfaCwgZHN0
X3csIGRzdF9oOworCXVuc2lnbmVkIGludCBudW0sIGRlbjsKKworCXNrbF9wbGFuZV9yYXRpbyhj
cnRjX3N0YXRlLCBwbGFuZV9zdGF0ZSwgJm51bSwgJmRlbik7CisKKwkvKiB0d28gcGl4ZWxzIHBl
ciBjbG9jayBvbiBnbGsrICovCisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTAgfHwgSVNf
R0VNSU5JTEFLRShkZXZfcHJpdikpCisJCWRlbiAqPSAyOworCisJc3JjX3cgPSBkcm1fcmVjdF93
aWR0aCgmcGxhbmVfc3RhdGUtPmJhc2Uuc3JjKSA+PiAxNjsKKwlzcmNfaCA9IGRybV9yZWN0X2hl
aWdodCgmcGxhbmVfc3RhdGUtPmJhc2Uuc3JjKSA+PiAxNjsKKwlkc3RfdyA9IGRybV9yZWN0X3dp
ZHRoKCZwbGFuZV9zdGF0ZS0+YmFzZS5kc3QpOworCWRzdF9oID0gZHJtX3JlY3RfaGVpZ2h0KCZw
bGFuZV9zdGF0ZS0+YmFzZS5kc3QpOworCisJLyogRG93bnNjYWxpbmcgbGltaXRzIHRoZSBtYXhp
bXVtIHBpeGVsIHJhdGUgKi8KKwlkc3RfdyA9IG1pbihzcmNfdywgZHN0X3cpOworCWRzdF9oID0g
bWluKHNyY19oLCBkc3RfaCk7CisKKwlyZXR1cm4gRElWNjRfVTY0X1JPVU5EX1VQKG11bF91MzJf
dTMyKHBpeGVsX3JhdGUgKiBudW0sIHNyY193ICogc3JjX2gpLAorCQkJCSAgbXVsX3UzMl91MzIo
ZGVuLCBkc3RfdyAqIGRzdF9oKSk7Cit9CisKIHN0YXRpYyB1bnNpZ25lZCBpbnQKIHNrbF9wbGFu
ZV9tYXhfc3RyaWRlKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJCSAgICAgdTMyIHBpeGVs
X2Zvcm1hdCwgdTY0IG1vZGlmaWVyLApAQCAtODExLDYgKzg2MCw4NSBAQCB2bHZfdXBkYXRlX2Ns
cmMoY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIAkJICAgICAg
U1BfU0hfU0lOKHNoX3NpbikgfCBTUF9TSF9DT1Moc2hfY29zKSk7CiB9CiAKK3N0YXRpYyB2b2lk
Cit2bHZfcGxhbmVfcmF0aW8oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCisJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUsCisJCXVu
c2lnbmVkIGludCAqbnVtLCB1bnNpZ25lZCBpbnQgKmRlbikKK3sKKwl1OCBhY3RpdmVfcGxhbmVz
ID0gY3J0Y19zdGF0ZS0+YWN0aXZlX3BsYW5lcyAmIH5CSVQoUExBTkVfQ1VSU09SKTsKKwljb25z
dCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9IHBsYW5lX3N0YXRlLT5iYXNlLmZiOworCXVu
c2lnbmVkIGludCBjcHAgPSBmYi0+Zm9ybWF0LT5jcHBbMF07CisKKwkvKgorCSAqIFZMViBic3Bl
YyBvbmx5IGNvbnNpZGVycyBjYXNlcyB3aGVyZSBhbGwgdGhyZWUgcGxhbmVzIGFyZQorCSAqIGVu
YWJsZWQsIGFuZCBjYXNlcyB3aGVyZSB0aGUgcHJpbWFyeSBhbmQgb25lIHNwcml0ZSBpcyBlbmFi
bGVkLgorCSAqIExldCdzIGFzc3VtZSB0aGUgY2FzZSB3aXRoIGp1c3QgdHdvIHNwcml0ZXMgZW5h
YmxlZCBhbHNvCisJICogbWFwcyB0byB0aGUgbGF0dGVyIGNhc2UuCisJICovCisJaWYgKGh3ZWln
aHQ4KGFjdGl2ZV9wbGFuZXMpID09IDMpIHsKKwkJc3dpdGNoIChjcHApIHsKKwkJY2FzZSA4Ogor
CQkJKm51bSA9IDExOworCQkJKmRlbiA9IDg7CisJCQlicmVhazsKKwkJY2FzZSA0OgorCQkJKm51
bSA9IDE4OworCQkJKmRlbiA9IDE2OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0g
MTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9IGVsc2UgaWYgKGh3ZWlnaHQ4KGFj
dGl2ZV9wbGFuZXMpID09IDIpIHsKKwkJc3dpdGNoIChjcHApIHsKKwkJY2FzZSA4OgorCQkJKm51
bSA9IDEwOworCQkJKmRlbiA9IDg7CisJCQlicmVhazsKKwkJY2FzZSA0OgorCQkJKm51bSA9IDE3
OworCQkJKmRlbiA9IDE2OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJ
CSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9IGVsc2UgeworCQlzd2l0Y2ggKGNwcCkgewor
CQljYXNlIDg6CisJCQkqbnVtID0gMTA7CisJCQkqZGVuID0gODsKKwkJCWJyZWFrOworCQlkZWZh
dWx0OgorCQkJKm51bSA9IDE7CisJCQkqZGVuID0gMTsKKwkJCWJyZWFrOworCQl9CisJfQorfQor
CitpbnQgdmx2X3BsYW5lX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3Rh
dGUpCit7CisJdW5zaWduZWQgaW50IHBpeGVsX3JhdGU7CisJdW5zaWduZWQgaW50IG51bSwgZGVu
OworCisJLyoKKwkgKiBOb3RlIHRoYXQgY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSBhY2NvdW50cyBm
b3IgYm90aAorCSAqIGhvcml6b250YWwgYW5kIHZlcnRpY2FsIHBhbmVsIGZpdHRlciBkb3duc2Nh
bGluZyBmYWN0b3JzLgorCSAqIFByZS1IU1cgYnNwZWMgdGVsbHMgdXMgdG8gb25seSBjb25zaWRl
ciB0aGUgaG9yaXpvbnRhbAorCSAqIGRvd25zY2FsaW5nIGZhY3RvciBoZXJlLiBXZSBpZ25vcmUg
dGhhdCBhbmQganVzdCBjb25zaWRlcgorCSAqIGJvdGggZm9yIHNpbXBsaWNpdHkuCisJICovCisJ
cGl4ZWxfcmF0ZSA9IGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisKKwl2bHZfcGxhbmVfcmF0aW8o
Y3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUsICZudW0sICZkZW4pOworCisJcmV0dXJuIERJVl9ST1VO
RF9VUChwaXhlbF9yYXRlICogbnVtLCBkZW4pOworfQorCiBzdGF0aWMgdTMyIHZsdl9zcHJpdGVf
Y3RsX2NydGMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJ
dTMyIHNwcmN0bCA9IDA7CkBAIC0xMDE3LDYgKzExNDUsMTY0IEBAIHZsdl9wbGFuZV9nZXRfaHdf
c3RhdGUoc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKIAlyZXR1cm4gcmV0OwogfQogCitzdGF0
aWMgdm9pZCBpdmJfcGxhbmVfcmF0aW8oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCisJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9z
dGF0ZSwKKwkJCSAgICB1bnNpZ25lZCBpbnQgKm51bSwgdW5zaWduZWQgaW50ICpkZW4pCit7CisJ
dTggYWN0aXZlX3BsYW5lcyA9IGNydGNfc3RhdGUtPmFjdGl2ZV9wbGFuZXMgJiB+QklUKFBMQU5F
X0NVUlNPUik7CisJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0
ZS0+YmFzZS5mYjsKKwl1bnNpZ25lZCBpbnQgY3BwID0gZmItPmZvcm1hdC0+Y3BwWzBdOworCisJ
aWYgKGh3ZWlnaHQ4KGFjdGl2ZV9wbGFuZXMpID09IDIpIHsKKwkJc3dpdGNoIChjcHApIHsKKwkJ
Y2FzZSA4OgorCQkJKm51bSA9IDEwOworCQkJKmRlbiA9IDg7CisJCQlicmVhazsKKwkJY2FzZSA0
OgorCQkJKm51bSA9IDE3OworCQkJKmRlbiA9IDE2OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJ
CQkqbnVtID0gMTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9IGVsc2UgeworCQlz
d2l0Y2ggKGNwcCkgeworCQljYXNlIDg6CisJCQkqbnVtID0gOTsKKwkJCSpkZW4gPSA4OworCQkJ
YnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7
CisJCX0KKwl9Cit9CisKK3N0YXRpYyB2b2lkIGl2Yl9wbGFuZV9yYXRpb19zY2FsaW5nKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCSAgICBjb25zdCBzdHJ1
Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLAorCQkJCSAgICB1bnNpZ25lZCBpbnQg
Km51bSwgdW5zaWduZWQgaW50ICpkZW4pCit7CisJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZl
ciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsKKwl1bnNpZ25lZCBpbnQgY3BwID0gZmItPmZv
cm1hdC0+Y3BwWzBdOworCisJc3dpdGNoIChjcHApIHsKKwljYXNlIDg6CisJCSpudW0gPSAxMjsK
KwkJKmRlbiA9IDg7CisJCWJyZWFrOworCWNhc2UgNDoKKwkJKm51bSA9IDE5OworCQkqZGVuID0g
MTY7CisJCWJyZWFrOworCWNhc2UgMjoKKwkJKm51bSA9IDMzOworCQkqZGVuID0gMzI7CisJCWJy
ZWFrOworCWRlZmF1bHQ6CisJCSpudW0gPSAxOworCQkqZGVuID0gMTsKKwkJYnJlYWs7CisJfQor
fQorCitpbnQgaXZiX3BsYW5lX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVf
c3RhdGUpCit7CisJdW5zaWduZWQgaW50IHBpeGVsX3JhdGU7CisJdW5zaWduZWQgaW50IG51bSwg
ZGVuOworCisJLyoKKwkgKiBOb3RlIHRoYXQgY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSBhY2NvdW50
cyBmb3IgYm90aAorCSAqIGhvcml6b250YWwgYW5kIHZlcnRpY2FsIHBhbmVsIGZpdHRlciBkb3du
c2NhbGluZyBmYWN0b3JzLgorCSAqIFByZS1IU1cgYnNwZWMgdGVsbHMgdXMgdG8gb25seSBjb25z
aWRlciB0aGUgaG9yaXpvbnRhbAorCSAqIGRvd25zY2FsaW5nIGZhY3RvciBoZXJlLiBXZSBpZ25v
cmUgdGhhdCBhbmQganVzdCBjb25zaWRlcgorCSAqIGJvdGggZm9yIHNpbXBsaWNpdHkuCisJICov
CisJcGl4ZWxfcmF0ZSA9IGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisKKwlpdmJfcGxhbmVfcmF0
aW8oY3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUsICZudW0sICZkZW4pOworCisJcmV0dXJuIERJVl9S
T1VORF9VUChwaXhlbF9yYXRlICogbnVtLCBkZW4pOworfQorCitzdGF0aWMgaW50IGl2Yl9zcHJp
dGVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAor
CQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCit7CisJdW5z
aWduZWQgaW50IHNyY193LCBkc3RfdywgcGl4ZWxfcmF0ZTsKKwl1bnNpZ25lZCBpbnQgbnVtLCBk
ZW47CisKKwkvKgorCSAqIE5vdGUgdGhhdCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRz
IGZvciBib3RoCisJICogaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25z
Y2FsaW5nIGZhY3RvcnMuCisJICogUHJlLUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNp
ZGVyIHRoZSBob3Jpem9udGFsCisJICogZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9y
ZSB0aGF0IGFuZCBqdXN0IGNvbnNpZGVyCisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8K
KwlwaXhlbF9yYXRlID0gY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZTsKKworCXNyY193ID0gZHJtX3Jl
Y3Rfd2lkdGgoJnBsYW5lX3N0YXRlLT5iYXNlLnNyYykgPj4gMTY7CisJZHN0X3cgPSBkcm1fcmVj
dF93aWR0aCgmcGxhbmVfc3RhdGUtPmJhc2UuZHN0KTsKKworCWlmIChzcmNfdyAhPSBkc3RfdykK
KwkJaXZiX3BsYW5lX3JhdGlvX3NjYWxpbmcoY3J0Y19zdGF0ZSwgcGxhbmVfc3RhdGUsICZudW0s
ICZkZW4pOworCWVsc2UKKwkJaXZiX3BsYW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5lX3N0YXRl
LCAmbnVtLCAmZGVuKTsKKworCS8qIEhvcml6b250YWwgZG93bnNjYWxpbmcgbGltaXRzIHRoZSBt
YXhpbXVtIHBpeGVsIHJhdGUgKi8KKwlkc3RfdyA9IG1pbihzcmNfdywgZHN0X3cpOworCisJcmV0
dXJuIERJVl9ST1VORF9VUF9VTEwobXVsX3UzMl91MzIocGl4ZWxfcmF0ZSwgbnVtICogc3JjX3cp
LAorCQkJCWRlbiAqIGRzdF93KTsKK30KKworc3RhdGljIHZvaWQgaHN3X3BsYW5lX3JhdGlvKGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJICAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUsCisJCQkgICAgdW5zaWduZWQgaW50
ICpudW0sIHVuc2lnbmVkIGludCAqZGVuKQoreworCXU4IGFjdGl2ZV9wbGFuZXMgPSBjcnRjX3N0
YXRlLT5hY3RpdmVfcGxhbmVzICYgfkJJVChQTEFORV9DVVJTT1IpOworCWNvbnN0IHN0cnVjdCBk
cm1fZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmJhc2UuZmI7CisJdW5zaWduZWQgaW50
IGNwcCA9IGZiLT5mb3JtYXQtPmNwcFswXTsKKworCWlmIChod2VpZ2h0OChhY3RpdmVfcGxhbmVz
KSA9PSAyKSB7CisJCXN3aXRjaCAoY3BwKSB7CisJCWNhc2UgODoKKwkJCSpudW0gPSAxMDsKKwkJ
CSpkZW4gPSA4OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQkqbnVtID0gMTsKKwkJCSpkZW4g
PSAxOworCQkJYnJlYWs7CisJCX0KKwl9IGVsc2UgeworCQlzd2l0Y2ggKGNwcCkgeworCQljYXNl
IDg6CisJCQkqbnVtID0gOTsKKwkJCSpkZW4gPSA4OworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJ
CQkqbnVtID0gMTsKKwkJCSpkZW4gPSAxOworCQkJYnJlYWs7CisJCX0KKwl9Cit9CisKK2ludCBo
c3dfcGxhbmVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAorCQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKK3sK
Kwl1bnNpZ25lZCBpbnQgcGl4ZWxfcmF0ZSA9IGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisJdW5z
aWduZWQgaW50IG51bSwgZGVuOworCisJaHN3X3BsYW5lX3JhdGlvKGNydGNfc3RhdGUsIHBsYW5l
X3N0YXRlLCAmbnVtLCAmZGVuKTsKKworCXJldHVybiBESVZfUk9VTkRfVVAocGl4ZWxfcmF0ZSAq
IG51bSwgZGVuKTsKK30KKwogc3RhdGljIHUzMiBpdmJfc3ByaXRlX2N0bF9jcnRjKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXUzMiBzcHJjdGwgPSAwOwpA
QCAtMTI0Myw2ICsxNTI5LDUzIEBAIGl2Yl9wbGFuZV9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVs
X3BsYW5lICpwbGFuZSwKIAlyZXR1cm4gcmV0OwogfQogCitzdGF0aWMgaW50IGc0eF9zcHJpdGVf
bWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJ
CWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCit7CisJY29uc3Qg
c3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+YmFzZS5mYjsKKwl1bnNp
Z25lZCBpbnQgaHNjYWxlLCBwaXhlbF9yYXRlOworCXVuc2lnbmVkIGludCBsaW1pdCwgZGVjaW1h
dGU7CisKKwkvKgorCSAqIE5vdGUgdGhhdCBjcnRjX3N0YXRlLT5waXhlbF9yYXRlIGFjY291bnRz
IGZvciBib3RoCisJICogaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcGFuZWwgZml0dGVyIGRvd25z
Y2FsaW5nIGZhY3RvcnMuCisJICogUHJlLUhTVyBic3BlYyB0ZWxscyB1cyB0byBvbmx5IGNvbnNp
ZGVyIHRoZSBob3Jpem9udGFsCisJICogZG93bnNjYWxpbmcgZmFjdG9yIGhlcmUuIFdlIGlnbm9y
ZSB0aGF0IGFuZCBqdXN0IGNvbnNpZGVyCisJICogYm90aCBmb3Igc2ltcGxpY2l0eS4KKwkgKi8K
KwlwaXhlbF9yYXRlID0gY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZTsKKworCS8qIEhvcml6b250YWwg
ZG93bnNjYWxpbmcgbGltaXRzIHRoZSBtYXhpbXVtIHBpeGVsIHJhdGUgKi8KKwloc2NhbGUgPSBk
cm1fcmVjdF9jYWxjX2hzY2FsZSgmcGxhbmVfc3RhdGUtPmJhc2Uuc3JjLAorCQkJCSAgICAgICZw
bGFuZV9zdGF0ZS0+YmFzZS5kc3QsCisJCQkJICAgICAgMCwgSU5UX01BWCk7CisJaWYgKGhzY2Fs
ZSA8IDB4MTAwMDApCisJCXJldHVybiBwaXhlbF9yYXRlOworCisJLyogRGVjaW1hdGlvbiBzdGVw
cyBhdCAyeCw0eCw4eCwxNnggKi8KKwlkZWNpbWF0ZSA9IGlsb2cyKGhzY2FsZSA+PiAxNik7CisJ
aHNjYWxlID4+PSBkZWNpbWF0ZTsKKworCS8qIFN0YXJ0aW5nIGxpbWl0IGlzIDkwJSBvZiBjZGNs
ayAqLworCWxpbWl0ID0gOTsKKworCS8qIC0xMCUgcGVyIGRlY2ltYXRpb24gc3RlcCAqLworCWxp
bWl0IC09IGRlY2ltYXRlOworCisJLyogLTEwJSBmb3IgUkdCICovCisJaWYgKGZiLT5mb3JtYXQt
PmNwcFswXSA+PSA0KQorCQlsaW1pdC0tOyAvKiAtMTAlIGZvciBSR0IgKi8KKworCS8qCisJICog
V2Ugc2hvdWxkIGFsc28gZG8gLTEwJSBpZiBzcHJpdGUgc2NhbGluZyBpcyBlbmFibGVkCisJICog
b24gdGhlIG90aGVyIHBpcGUsIGJ1dCB3ZSBjYW4ndCByZWFsbHkgY2hlY2sgZm9yIHRoYXQsCisJ
ICogc28gd2UgaWdub3JlIGl0LgorCSAqLworCisJcmV0dXJuIERJVl9ST1VORF9VUF9VTEwobXVs
X3UzMl91MzIocGl4ZWxfcmF0ZSwgMTAgKiBoc2NhbGUpLAorCQkJCWxpbWl0IDw8IDE2KTsKK30K
Kwogc3RhdGljIHVuc2lnbmVkIGludAogZzR4X3Nwcml0ZV9tYXhfc3RyaWRlKHN0cnVjdCBpbnRl
bF9wbGFuZSAqcGxhbmUsCiAJCSAgICAgIHUzMiBwaXhlbF9mb3JtYXQsIHU2NCBtb2RpZmllciwK
QEAgLTI1MTEsNiArMjg0NCw3IEBAIHNrbF91bml2ZXJzYWxfcGxhbmVfY3JlYXRlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlwbGFuZS0+ZGlzYWJsZV9wbGFuZSA9IHNrbF9k
aXNhYmxlX3BsYW5lOwogCXBsYW5lLT5nZXRfaHdfc3RhdGUgPSBza2xfcGxhbmVfZ2V0X2h3X3N0
YXRlOwogCXBsYW5lLT5jaGVja19wbGFuZSA9IHNrbF9wbGFuZV9jaGVjazsKKwlwbGFuZS0+bWlu
X2NkY2xrID0gc2tsX3BsYW5lX21pbl9jZGNsazsKIAlpZiAoaWNsX2lzX252MTJfeV9wbGFuZShw
bGFuZV9pZCkpCiAJCXBsYW5lLT51cGRhdGVfc2xhdmUgPSBpY2xfdXBkYXRlX3NsYXZlOwogCkBA
IC0yNjE4LDYgKzI5NTIsNyBAQCBpbnRlbF9zcHJpdGVfcGxhbmVfY3JlYXRlKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJcGxhbmUtPmRpc2FibGVfcGxhbmUgPSB2bHZfZGlz
YWJsZV9wbGFuZTsKIAkJcGxhbmUtPmdldF9od19zdGF0ZSA9IHZsdl9wbGFuZV9nZXRfaHdfc3Rh
dGU7CiAJCXBsYW5lLT5jaGVja19wbGFuZSA9IHZsdl9zcHJpdGVfY2hlY2s7CisJCXBsYW5lLT5t
aW5fY2RjbGsgPSB2bHZfcGxhbmVfbWluX2NkY2xrOwogCiAJCWZvcm1hdHMgPSB2bHZfcGxhbmVf
Zm9ybWF0czsKIAkJbnVtX2Zvcm1hdHMgPSBBUlJBWV9TSVpFKHZsdl9wbGFuZV9mb3JtYXRzKTsK
QEAgLTI2MzEsNiArMjk2NiwxMSBAQCBpbnRlbF9zcHJpdGVfcGxhbmVfY3JlYXRlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJcGxhbmUtPmdldF9od19zdGF0ZSA9IGl2Yl9w
bGFuZV9nZXRfaHdfc3RhdGU7CiAJCXBsYW5lLT5jaGVja19wbGFuZSA9IGc0eF9zcHJpdGVfY2hl
Y2s7CiAKKwkJaWYgKElTX0JST0FEV0VMTChkZXZfcHJpdikgfHwgSVNfSEFTV0VMTChkZXZfcHJp
dikpCisJCQlwbGFuZS0+bWluX2NkY2xrID0gaHN3X3BsYW5lX21pbl9jZGNsazsKKwkJZWxzZQor
CQkJcGxhbmUtPm1pbl9jZGNsayA9IGl2Yl9zcHJpdGVfbWluX2NkY2xrOworCiAJCWZvcm1hdHMg
PSBzbmJfcGxhbmVfZm9ybWF0czsKIAkJbnVtX2Zvcm1hdHMgPSBBUlJBWV9TSVpFKHNuYl9wbGFu
ZV9mb3JtYXRzKTsKIAkJbW9kaWZpZXJzID0gaTl4eF9wbGFuZV9mb3JtYXRfbW9kaWZpZXJzOwpA
QCAtMjY0Miw2ICsyOTgyLDcgQEAgaW50ZWxfc3ByaXRlX3BsYW5lX2NyZWF0ZShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCXBsYW5lLT5kaXNhYmxlX3BsYW5lID0gZzR4X2Rp
c2FibGVfcGxhbmU7CiAJCXBsYW5lLT5nZXRfaHdfc3RhdGUgPSBnNHhfcGxhbmVfZ2V0X2h3X3N0
YXRlOwogCQlwbGFuZS0+Y2hlY2tfcGxhbmUgPSBnNHhfc3ByaXRlX2NoZWNrOworCQlwbGFuZS0+
bWluX2NkY2xrID0gZzR4X3Nwcml0ZV9taW5fY2RjbGs7CiAKIAkJbW9kaWZpZXJzID0gaTl4eF9w
bGFuZV9mb3JtYXRfbW9kaWZpZXJzOwogCQlpZiAoSVNfR0VOKGRldl9wcml2LCA2KSkgewpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmgKaW5kZXggMjI5MzM2MjE0
ZjY4Li41ZWVhYTkyNDIwZDEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfc3ByaXRlLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9zcHJpdGUuaApAQCAtNDksNCArNDksMTEgQEAgc3RhdGljIGlubGluZSB1OCBpY2xfaGRyX3Bs
YW5lX21hc2sodm9pZCkKIAogYm9vbCBpY2xfaXNfaGRyX3BsYW5lKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwgZW51bSBwbGFuZV9pZCBwbGFuZV9pZCk7CiAKK2ludCBpdmJfcGxh
bmVfbWluX2NkY2xrKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAor
CQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSk7CitpbnQgaHN3
X3BsYW5lX21pbl9jZGNsayhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpOworaW50
IHZsdl9wbGFuZV9taW5fY2RjbGsoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCisJCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKTsK
KwogI2VuZGlmIC8qIF9fSU5URUxfU1BSSVRFX0hfXyAqLwotLSAKMi4yMS4wCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBs
aXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D6FAEAD393
	for <lists+intel-gfx@lfdr.de>; Mon,  9 Sep 2019 09:18:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2972889804;
	Mon,  9 Sep 2019 07:18:33 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2C8F489803
 for <intel-gfx@lists.freedesktop.org>; Mon,  9 Sep 2019 07:18:31 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Sep 2019 00:18:30 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,484,1559545200"; d="scan'208";a="185115451"
Received: from unknown (HELO delly.ger.corp.intel.com) ([10.249.38.203])
 by fmsmga007.fm.intel.com with ESMTP; 09 Sep 2019 00:18:29 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  9 Sep 2019 10:18:06 +0300
Message-Id: <20190909071809.23310-10-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190909071809.23310-1-lionel.g.landwerlin@intel.com>
References: <20190909071809.23310-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 10/13] drm/i915/perf: execute OA configuration from
 command stream
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgaGF2ZW4ndCBydW4gaW50byBpc3N1ZXMgd2l0aCBwcm9ncmFtbWluZyB0aGUgZ2xvYmFsIE9B
L05PQQpyZWdpc3RlcnMgY29uZmlndXJhdGlvbiBmcm9tIENQVSBzbyBmYXIsIGJ1dCBIVyBlbmdp
bmVlcnMgYWN0dWFsbHkKcmVjb21tZW5kIGRvaW5nIHRoaXMgZnJvbSB0aGUgY29tbWFuZCBzdHJl
YW1lci4gT24gVEdMIGluIHBhcnRpY3VsYXIKb25lIG9mIHRoZSBjbG9jayBkb21haW4gaW4gd2hp
Y2ggc29tZSBvZiB0aGF0IHByb2dyYW1taW5nIGdvZXMgbWlnaHQKbm90IGJlIHBvd2VyZWQgd2hl
biB3ZSBwb2tlIHRoaW5ncyBmcm9tIHRoZSBDUFUuCgpTaW5jZSB3ZSBoYXZlIGEgY29tbWFuZCBi
dWZmZXIgcHJlcGFyZWQgZm9yIHRoZSBleGVjYnVmZmVyIHNpZGUgb2YKdGhpbmdzLCB3ZSBjYW4g
cmV1c2UgdGhhdCBhcHByb2FjaCBoZXJlIHRvby4KClRoaXMgYWxzbyBhbGxvd3MgdXMgdG8gc2ln
bmlmaWNhbnRseSByZWR1Y2UgdGhlIGFtb3VudCBvZiB0aW1lIHdlIGhvbGQKdGhlIG1haW4gbG9j
ay4KCnYyOiBEcm9wIHRoZSBnbG9iYWwgbG9jayBhcyBtdWNoIGFzIHBvc3NpYmxlCgp2MzogVGFr
ZSBnbG9iYWwgbG9jayB0byBwaW4gZ2xvYmFsCgp2NDogQ3JlYXRlIGk5MTUgcmVxdWVzdCBpbiBl
bWl0X29hX2NvbmZpZygpIHRvIGF2b2lkIGRlYWRsb2NrcyAoTGlvbmVsKQoKdjU6IE1vdmUgbG9j
a2luZyB0byB0aGUgc3RyZWFtIChMaW9uZWwpCgp2NjogTW92ZSBhY3RpdmUgcmVjb25maWd1cmF0
aW9uIHJlcXVlc3QgaW50byBpOTE1X3BlcmZfc3RyZWFtIChMaW9uZWwpCgp2NzogUGluIFZNQSBv
dXRzaWRlIHJlcXVlc3QgY3JlYXRpb24gKENocmlzKQogICAgTG9jayBWTUEgYmVmb3JlIG1vdmUg
dG8gYWN0aXZlIChDaHJpcykKCnY4OiBGaXggZG91YmxlIGZyZWUgb24gc3RyZWFtLT5pbml0aWFs
X29hX2NvbmZpZ19ibyAoTGlvbmVsKQogICAgRG9uJ3QgYWxsb3cgaW50ZXJydXB0aW9uIHdoZW4g
d2FpdGluZyBvbiBhY3RpdmUgY29uZmlnIHJlcXVlc3QKICAgIChMaW9uZWwpCgpTaWduZWQtb2Zm
LWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+Ci0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMgICAgICAgfCAxNzAgKysrKysrKysr
KysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgg
fCAgMTUgKystCiAyIGZpbGVzIGNoYW5nZWQsIDEyNCBpbnNlcnRpb25zKCspLCA2MSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IGYyYjc3OGQ4NGI1Mi4uOGUzNTMy
NTE4MTM5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMTU1OCwxOCArMTU1OCwyMyBA
QCBmcmVlX29hX2NvbmZpZ3Moc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHN0YXRp
YyB2b2lkIGk5MTVfb2Ffc3RyZWFtX2Rlc3Ryb3koc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0
cmVhbSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRl
dl9wcml2OworCWludCBlcnI7CiAKIAlCVUdfT04oc3RyZWFtICE9IGRldl9wcml2LT5wZXJmLmV4
Y2x1c2l2ZV9zdHJlYW0pOwogCi0JLyoKLQkgKiBVbnNldCBleGNsdXNpdmVfc3RyZWFtIGZpcnN0
LCBpdCB3aWxsIGJlIGNoZWNrZWQgd2hpbGUgZGlzYWJsaW5nCi0JICogdGhlIG1ldHJpYyBzZXQg
b24gZ2VuOCsuCi0JICovCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgp
OwotCWRldl9wcml2LT5wZXJmLmV4Y2x1c2l2ZV9zdHJlYW0gPSBOVUxMOworCW11dGV4X2xvY2so
JnN0cmVhbS0+Y29uZmlnX211dGV4KTsKIAlkZXZfcHJpdi0+cGVyZi5vcHMuZGlzYWJsZV9tZXRy
aWNfc2V0KHN0cmVhbSk7CisJZXJyID0gaTkxNV9hY3RpdmVfcmVxdWVzdF9yZXRpcmUoJnN0cmVh
bS0+YWN0aXZlX2NvbmZpZ19ycSwgMCwKKwkJCQkJICZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJ
bXV0ZXhfdW5sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJZGV2X3ByaXYtPnBlcmYuZXhj
bHVzaXZlX3N0cmVhbSA9IE5VTEw7CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVj
dF9tdXRleCk7CiAKKwlpZiAoZXJyKQorCQlEUk1fRVJST1IoIkZhaWxlZCB0byBkaXNhYmxlIHBl
cmYgc3RyZWFtXG4iKTsKKworCiAJZnJlZV9vYV9idWZmZXIoc3RyZWFtKTsKIAlmcmVlX25vYV93
YWl0KHN0cmVhbSk7CiAKQEAgLTE3OTUsNiArMTgwMCwxMCBAQCBzdGF0aWMgaW50IGFsbG9jX25v
YV93YWl0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJCXJldHVybiBQVFJfRVJS
KGJvKTsKIAl9CiAKKwlyZXQgPSBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmaTkxNS0+
ZHJtKTsKKwlpZiAocmV0KQorCQlnb3RvIGVycl91bnJlZjsKKwogCS8qCiAJICogV2UgcGluIGlu
IEdHVFQgYmVjYXVzZSB3ZSBqdW1wIGludG8gdGhpcyBidWZmZXIgbm93IGJlY2F1c2UKIAkgKiBt
dWx0aXBsZSBPQSBjb25maWcgQk9zIHdpbGwgaGF2ZSBhIGp1bXAgdG8gdGhpcyBhZGRyZXNzIGFu
ZCBpdApAQCAtMTgwMiwxMCArMTgxMSwxMyBAQCBzdGF0aWMgaW50IGFsbG9jX25vYV93YWl0KHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJICovCiAJdm1hID0gaTkxNV9nZW1fb2Jq
ZWN0X2dndHRfcGluKGJvLCBOVUxMLCAwLCA0MDk2LCAwKTsKIAlpZiAoSVNfRVJSKHZtYSkpIHsK
KwkJbXV0ZXhfdW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAkJcmV0ID0gUFRSX0VS
Uih2bWEpOwogCQlnb3RvIGVycl91bnJlZjsKIAl9CiAKKwltdXRleF91bmxvY2soJmk5MTUtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOworCiAJYmF0Y2ggPSBjcyA9IGk5MTVfZ2VtX29iamVjdF9waW5fbWFw
KGJvLCBJOTE1X01BUF9XQik7CiAJaWYgKElTX0VSUihiYXRjaCkpIHsKIAkJcmV0ID0gUFRSX0VS
UihiYXRjaCk7CkBAIC0xOTM5LDcgKzE5NTEsOSBAQCBzdGF0aWMgaW50IGFsbG9jX25vYV93YWl0
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJcmV0dXJuIDA7CiAKIGVycl91bnBp
bjoKLQlfX2k5MTVfdm1hX3VucGluKHZtYSk7CisJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVj
dF9tdXRleCk7CisJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJnZtYSwgMCk7CisJbXV0ZXhf
dW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAogZXJyX3VucmVmOgogCWk5MTVfZ2Vt
X29iamVjdF9wdXQoYm8pOwpAQCAtMTk0Nyw1MCArMTk2MSw3MyBAQCBzdGF0aWMgaW50IGFsbG9j
X25vYV93YWl0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJcmV0dXJuIHJldDsK
IH0KIAotc3RhdGljIHZvaWQgY29uZmlnX29hX3JlZ3Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAotCQkJICAgY29uc3Qgc3RydWN0IGk5MTVfb2FfcmVnICpyZWdzLAotCQkJICAg
dTMyIG5fcmVncykKK3N0YXRpYyBpbnQgZW1pdF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsCisJCQkgIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7Ci0J
dTMyIGk7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJc3RydWN0IGk5MTVfdm1hICp2bWE7
CisJdTMyICpjczsKKwlpbnQgZXJyOwogCi0JZm9yIChpID0gMDsgaSA8IG5fcmVnczsgaSsrKSB7
Ci0JCWNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqcmVnID0gcmVncyArIGk7CisJbG9ja2RlcF9h
c3NlcnRfaGVsZCgmc3RyZWFtLT5jb25maWdfbXV0ZXgpOworCisJdm1hID0gaTkxNV92bWFfaW5z
dGFuY2Uoc3RyZWFtLT5pbml0aWFsX29hX2NvbmZpZ19ibywKKwkJCQkmc3RyZWFtLT5lbmdpbmUt
Pmd0LT5nZ3R0LT52bSwgTlVMTCk7CisJaWYgKHVubGlrZWx5KElTX0VSUih2bWEpKSkKKwkJcmV0
dXJuIFBUUl9FUlIodm1hKTsKIAotCQlJOTE1X1dSSVRFKHJlZy0+YWRkciwgcmVnLT52YWx1ZSk7
CisJZXJyID0gaTkxNV92bWFfcGluKHZtYSwgMCwgMCwgUElOX0dMT0JBTCk7CisJaWYgKGVycikK
KwkJZ290byBlcnJfdm1hX3VucGluOworCisJcnEgPSBpOTE1X3JlcXVlc3RfY3JlYXRlKHN0cmVh
bS0+ZW5naW5lLT5rZXJuZWxfY29udGV4dCk7CisJaWYgKElTX0VSUihycSkpIHsKKwkJZXJyID0g
UFRSX0VSUihycSk7CisJCWdvdG8gZXJyX2FkZF9yZXF1ZXN0OwogCX0KLX0KIAotc3RhdGljIHZv
aWQgZGVsYXlfYWZ0ZXJfbXV4KHZvaWQpCi17Ci0JLyoKLQkgKiBJdCBhcHBhcmVudGx5IHRha2Vz
IGEgZmFpcmx5IGxvbmcgdGltZSBmb3IgYSBuZXcgTVVYCi0JICogY29uZmlndXJhdGlvbiB0byBi
ZSBiZSBhcHBsaWVkIGFmdGVyIHRoZXNlIHJlZ2lzdGVyIHdyaXRlcy4KLQkgKiBUaGlzIGRlbGF5
IGR1cmF0aW9uIHdhcyBkZXJpdmVkIGVtcGlyaWNhbGx5IGJhc2VkIG9uIHRoZQotCSAqIHJlbmRl
cl9iYXNpYyBjb25maWcgYnV0IGhvcGVmdWxseSBpdCBjb3ZlcnMgdGhlIG1heGltdW0KLQkgKiBj
b25maWd1cmF0aW9uIGxhdGVuY3kuCi0JICoKLQkgKiBBcyBhIGZhbGxiYWNrLCB0aGUgY2hlY2tz
IGluIF9hcHBlbmRfb2FfcmVwb3J0cygpIHRvIHNraXAKLQkgKiBpbnZhbGlkIE9BIHJlcG9ydHMg
ZG8gYWxzbyBzZWVtIHRvIHdvcmsgdG8gZGlzY2FyZCByZXBvcnRzCi0JICogZ2VuZXJhdGVkIGJl
Zm9yZSB0aGlzIGNvbmZpZyBoYXMgY29tcGxldGVkIC0gYWxiZWl0IG5vdAotCSAqIHNpbGVudGx5
LgotCSAqCi0JICogVW5mb3J0dW5hdGVseSB0aGlzIGlzIGVzc2VudGlhbGx5IGEgbWFnaWMgbnVt
YmVyLCBzaW5jZSB3ZQotCSAqIGRvbid0IGN1cnJlbnRseSBrbm93IG9mIGEgcmVsaWFibGUgbWVj
aGFuaXNtIGZvciBwcmVkaWN0aW5nCi0JICogaG93IGxvbmcgdGhlIE1VWCBjb25maWcgd2lsbCB0
YWtlIHRvIGFwcGx5IGFuZCBiZXNpZGVzCi0JICogc2VlaW5nIGludmFsaWQgcmVwb3J0cyB3ZSBk
b24ndCBrbm93IG9mIGEgcmVsaWFibGUgd2F5IHRvCi0JICogZXhwbGljaXRseSBjaGVjayB0aGF0
IHRoZSBNVVggY29uZmlnIGhhcyBsYW5kZWQuCi0JICoKLQkgKiBJdCdzIGV2ZW4gcG9zc2libGUg
d2UndmUgbWlzcyBjaGFyYWN0ZXJpemVkIHRoZSB1bmRlcmx5aW5nCi0JICogcHJvYmxlbSAtIGl0
IGp1c3Qgc2VlbXMgbGlrZSB0aGUgc2ltcGxlc3QgZXhwbGFuYXRpb24gd2h5Ci0JICogYSBkZWxh
eSBhdCB0aGlzIGxvY2F0aW9uIHdvdWxkIG1pdGlnYXRlIGFueSBpbnZhbGlkIHJlcG9ydHMuCi0J
ICovCi0JdXNsZWVwX3JhbmdlKDE1MDAwLCAyMDAwMCk7CisJZXJyID0gaTkxNV9hY3RpdmVfcmVx
dWVzdF9zZXQoJnN0cmVhbS0+YWN0aXZlX2NvbmZpZ19ycSwKKwkJCQkgICAgICBycSk7CisJaWYg
KGVycikKKwkJZ290byBlcnJfYWRkX3JlcXVlc3Q7CisKKwlpOTE1X3ZtYV9sb2NrKHZtYSk7CisJ
ZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X29iamVjdChycSwgdm1hLT5vYmosIDApOworCWlmICgh
ZXJyKQorCQllcnIgPSBpOTE1X3ZtYV9tb3ZlX3RvX2FjdGl2ZSh2bWEsIHJxLCAwKTsKKwlpOTE1
X3ZtYV91bmxvY2sodm1hKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9hZGRfcmVxdWVzdDsKKwor
CWNzID0gaW50ZWxfcmluZ19iZWdpbihycSwgSU5URUxfR0VOKGk5MTUpID49IDggPyA0IDogMik7
CisJaWYgKElTX0VSUihjcykpIHsKKwkJZXJyID0gUFRSX0VSUihjcyk7CisJCWdvdG8gZXJyX2Fk
ZF9yZXF1ZXN0OworCX0KKworCWlmIChJTlRFTF9HRU4oaTkxNSkgPiA4KSB7CisJCSpjcysrID0g
TUlfQkFUQ0hfQlVGRkVSX1NUQVJUX0dFTjg7CisJCSpjcysrID0gbG93ZXJfMzJfYml0cyh2bWEt
Pm5vZGUuc3RhcnQpOworCQkqY3MrKyA9IHVwcGVyXzMyX2JpdHModm1hLT5ub2RlLnN0YXJ0KTsK
KwkJKmNzKysgPSBNSV9OT09QOworCX0gZWxzZSB7CisJCSpjcysrID0gTUlfQkFUQ0hfQlVGRkVS
X1NUQVJUOworCQkqY3MrKyA9IHZtYS0+bm9kZS5zdGFydDsKKwl9CisKKwlpbnRlbF9yaW5nX2Fk
dmFuY2UocnEsIGNzKTsKKworZXJyX2FkZF9yZXF1ZXN0OgorCWk5MTVfcmVxdWVzdF9hZGQocnEp
OworZXJyX3ZtYV91bnBpbjoKKwlpOTE1X3ZtYV91bnBpbih2bWEpOworCisJcmV0dXJuIGVycjsK
IH0KIAogc3RhdGljIGludCBoc3dfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9z
dHJlYW0gKnN0cmVhbSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBz
dHJlYW0tPmRldl9wcml2OwotCWNvbnN0IHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmln
ID0gc3RyZWFtLT5vYV9jb25maWc7CiAKIAkvKgogCSAqIFBSTToKQEAgLTIwMDcsMTMgKzIwNDQs
NyBAQCBzdGF0aWMgaW50IGhzd19lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0
cmVhbSAqc3RyZWFtKQogCUk5MTVfV1JJVEUoR0VONl9VQ0dDVEwxLCAoSTkxNV9SRUFEKEdFTjZf
VUNHQ1RMMSkgfAogCQkJCSAgR0VONl9DU1VOSVRfQ0xPQ0tfR0FURV9ESVNBQkxFKSk7CiAKLQlj
b25maWdfb2FfcmVncyhkZXZfcHJpdiwgb2FfY29uZmlnLT5tdXhfcmVncywgb2FfY29uZmlnLT5t
dXhfcmVnc19sZW4pOwotCWRlbGF5X2FmdGVyX211eCgpOwotCi0JY29uZmlnX29hX3JlZ3MoZGV2
X3ByaXYsIG9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3MsCi0JCSAgICAgICBvYV9jb25maWctPmJf
Y291bnRlcl9yZWdzX2xlbik7Ci0KLQlyZXR1cm4gMDsKKwlyZXR1cm4gZW1pdF9vYV9jb25maWco
ZGV2X3ByaXYsIHN0cmVhbSk7CiB9CiAKIHN0YXRpYyB2b2lkIGhzd19kaXNhYmxlX21ldHJpY19z
ZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKQEAgLTIzNzIsMTMgKzI0MDMsNyBA
QCBzdGF0aWMgaW50IGdlbjhfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJl
YW0gKnN0cmVhbSkKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JY29uZmlnX29hX3JlZ3Mo
ZGV2X3ByaXYsIG9hX2NvbmZpZy0+bXV4X3JlZ3MsIG9hX2NvbmZpZy0+bXV4X3JlZ3NfbGVuKTsK
LQlkZWxheV9hZnRlcl9tdXgoKTsKLQotCWNvbmZpZ19vYV9yZWdzKGRldl9wcml2LCBvYV9jb25m
aWctPmJfY291bnRlcl9yZWdzLAotCQkgICAgICAgb2FfY29uZmlnLT5iX2NvdW50ZXJfcmVnc19s
ZW4pOwotCi0JcmV0dXJuIDA7CisJcmV0dXJuIGVtaXRfb2FfY29uZmlnKGRldl9wcml2LCBzdHJl
YW0pOwogfQogCiBzdGF0aWMgdm9pZCBnZW44X2Rpc2FibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkx
NV9wZXJmX3N0cmVhbSAqc3RyZWFtKQpAQCAtMjU5Nyw2ICsyNjIyLDkgQEAgc3RhdGljIGludCBp
OTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAKIAlz
dHJlYW0tPmVuZ2luZSA9IHByb3BzLT5lbmdpbmU7CiAKKwlJTklUX0FDVElWRV9SRVFVRVNUKCZz
dHJlYW0tPmFjdGl2ZV9jb25maWdfcnEsCisJCQkgICAgJnN0cmVhbS0+Y29uZmlnX211dGV4KTsK
KwogCXN0cmVhbS0+c2FtcGxlX2ZsYWdzIHw9IFNBTVBMRV9PQV9SRVBPUlQ7CiAJc3RyZWFtLT5z
YW1wbGVfc2l6ZSArPSBmb3JtYXRfc2l6ZTsKIApAQCAtMjYyNSw4ICsyNjUzLDkgQEAgc3RhdGlj
IGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0s
CiAJCWdvdG8gZXJyX25vYV93YWl0X2FsbG9jOwogCX0KIAotCXJldCA9IGk5MTVfcGVyZl9nZXRf
b2FfY29uZmlnKGRldl9wcml2LCBwcm9wcy0+bWV0cmljc19zZXQsCi0JCQkJICAgICAgJnN0cmVh
bS0+b2FfY29uZmlnKTsKKwlyZXQgPSBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZ19hbmRfYm8oc3Ry
ZWFtLCBwcm9wcy0+bWV0cmljc19zZXQsCisJCQkJCSAgICAgJnN0cmVhbS0+b2FfY29uZmlnLAor
CQkJCQkgICAgICZzdHJlYW0tPmluaXRpYWxfb2FfY29uZmlnX2JvKTsKIAlpZiAocmV0KSB7CiAJ
CURSTV9ERUJVRygiSW52YWxpZCBPQSBjb25maWcgaWQ9JWlcbiIsIHByb3BzLT5tZXRyaWNzX3Nl
dCk7CiAJCWdvdG8gZXJyX2NvbmZpZzsKQEAgLTI2NTgsMTYgKzI2ODcsMzEgQEAgc3RhdGljIGlu
dCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJ
c3RyZWFtLT5vcHMgPSAmaTkxNV9vYV9zdHJlYW1fb3BzOwogCWRldl9wcml2LT5wZXJmLmV4Y2x1
c2l2ZV9zdHJlYW0gPSBzdHJlYW07CiAKKwltdXRleF9sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRl
eCk7CiAJcmV0ID0gZGV2X3ByaXYtPnBlcmYub3BzLmVuYWJsZV9tZXRyaWNfc2V0KHN0cmVhbSk7
CiAJaWYgKHJldCkgewogCQlEUk1fREVCVUcoIlVuYWJsZSB0byBlbmFibGUgbWV0cmljIHNldFxu
Iik7Ci0JCWdvdG8gZXJyX2VuYWJsZTsKKwkJLyoKKwkJICogSWdub3JlIHRoZSByZXR1cm4gdmFs
dWUgc2luY2Ugd2UgYWxyZWFkeSBoYXZlIGFuIGVycm9yIGZyb20KKwkJICogdGhlIGVuYWJsZSB2
ZnVuYy4KKwkJICovCisJCWk5MTVfYWN0aXZlX3JlcXVlc3RfcmV0aXJlKCZzdHJlYW0tPmFjdGl2
ZV9jb25maWdfcnEsIDAsCisJCQkJCSAgICZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJfSBlbHNl
IHsKKwkJcmV0ID0gaTkxNV9hY3RpdmVfcmVxdWVzdF9yZXRpcmUoJnN0cmVhbS0+YWN0aXZlX2Nv
bmZpZ19ycSwgMCwKKwkJCQkJCSAmc3RyZWFtLT5jb25maWdfbXV0ZXgpOwogCX0KIAotCURSTV9E
RUJVRygib3BlbmluZyBzdHJlYW0gb2EgY29uZmlnIHV1aWQ9JXNcbiIsIHN0cmVhbS0+b2FfY29u
ZmlnLT51dWlkKTsKLQorCW11dGV4X3VubG9jaygmc3RyZWFtLT5jb25maWdfbXV0ZXgpOwogCW11
dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCisJaTkxNV9nZW1fb2Jq
ZWN0X3B1dChzdHJlYW0tPmluaXRpYWxfb2FfY29uZmlnX2JvKTsKKwlzdHJlYW0tPmluaXRpYWxf
b2FfY29uZmlnX2JvID0gTlVMTDsKKwlpZiAocmV0KQorCQlnb3RvIGVycl9lbmFibGU7CisKKwlE
Uk1fREVCVUcoIm9wZW5pbmcgc3RyZWFtIG9hIGNvbmZpZyB1dWlkPSVzXG4iLCBzdHJlYW0tPm9h
X2NvbmZpZy0+dXVpZCk7CisKIAlocnRpbWVyX2luaXQoJnN0cmVhbS0+cG9sbF9jaGVja190aW1l
ciwKIAkJICAgICBDTE9DS19NT05PVE9OSUMsIEhSVElNRVJfTU9ERV9SRUwpOwogCXN0cmVhbS0+
cG9sbF9jaGVja190aW1lci5mdW5jdGlvbiA9IG9hX3BvbGxfY2hlY2tfdGltZXJfY2I7CkBAIC0y
Njc3LDggKzI3MjEsMTEgQEAgc3RhdGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJcmV0dXJuIDA7CiAKIGVycl9lbmFibGU6Ci0JZGV2
X3ByaXYtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbSA9IE5VTEw7CisJbXV0ZXhfbG9jaygmZGV2X3By
aXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCW11dGV4X2xvY2soJnN0cmVhbS0+Y29uZmlnX211dGV4
KTsKIAlkZXZfcHJpdi0+cGVyZi5vcHMuZGlzYWJsZV9tZXRyaWNfc2V0KHN0cmVhbSk7CisJbXV0
ZXhfdW5sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJZGV2X3ByaXYtPnBlcmYuZXhjbHVz
aXZlX3N0cmVhbSA9IE5VTEw7CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVjdF9t
dXRleCk7CiAKIGVycl9sb2NrOgpAQCAtMjY5MCw2ICsyNzM3LDkgQEAgc3RhdGljIGludCBpOTE1
X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAKIAlmcmVl
X29hX2NvbmZpZ3Moc3RyZWFtKTsKIAorCWlmIChzdHJlYW0tPmluaXRpYWxfb2FfY29uZmlnX2Jv
KQorCQlpOTE1X2dlbV9vYmplY3RfcHV0KHN0cmVhbS0+aW5pdGlhbF9vYV9jb25maWdfYm8pOwor
CiBlcnJfY29uZmlnOgogCWZyZWVfbm9hX3dhaXQoc3RyZWFtKTsKIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3BlcmZfdHlwZXMuaAppbmRleCA4NDgwZTQ4OWRjYjkuLjAzNzczMGYwZWIwMCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgKQEAgLTE2LDkgKzE2LDExIEBACiAj
aW5jbHVkZSA8bGludXgvdXVpZC5oPgogI2luY2x1ZGUgPGxpbnV4L3dhaXQuaD4KIAorI2luY2x1
ZGUgImk5MTVfYWN0aXZlX3R5cGVzLmgiCiAjaW5jbHVkZSAiaTkxNV9yZWcuaCIKICNpbmNsdWRl
ICJpbnRlbF93YWtlcmVmLmgiCiAKK3N0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0Owogc3RydWN0
IGRybV9pOTE1X3ByaXZhdGU7CiBzdHJ1Y3QgZmlsZTsKIHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0
OwpAQCAtMTc2LDcgKzE3OCw4IEBAIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtIHsKIAljb25zdCBz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbV9vcHMgKm9wczsKIAogCS8qKgotCSAqIEBhY3RpdmVfY29u
ZmlnX211dGV4OiBQcm90ZWN0cyBhY2Nlc3MgdG8gQG9hX2NvbmZpZyAmIEBvYV9jb25maWdfYm9z
LgorCSAqIEBhY3RpdmVfY29uZmlnX211dGV4OiBQcm90ZWN0cyBhY2Nlc3MgdG8gQGFjdGl2ZV9j
b25maWdfcnEsCisJICogQG9hX2NvbmZpZyAmIEBvYV9jb25maWdfYm9zLgogCSAqLwogCXN0cnVj
dCBtdXRleCBjb25maWdfbXV0ZXg7CiAKQEAgLTE5MSw2ICsxOTQsMTYgQEAgc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gewogCSAqLwogCXN0cnVjdCBsaXN0X2hlYWQgb2FfY29uZmlnX2JvczsKIAor
CS8qKgorCSAqIEBhY3RpdmVfY29uZmlnX3JxOiBMYXN0IHJlcXVlc3QgcmVjb25maWd1cmluZyB0
aGUgSFcuCisJICovCisJc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgYWN0aXZlX2NvbmZpZ19y
cTsKKworCS8qKgorCSAqIEBpbml0aWFsX29hX2NvbmZpZ19ibzogRmlyc3QgT0EgY29uZmlndXJh
dGlvbiBCTyB0byBiZSBydW4uCisJICovCisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKmlu
aXRpYWxfb2FfY29uZmlnX2JvOworCiAJLyoqCiAJICogVGhlIE9BIGNvbnRleHQgc3BlY2lmaWMg
aW5mb3JtYXRpb24uCiAJICovCi0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFu
L2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 378BB3DAE81
	for <lists+intel-gfx@lfdr.de>; Thu, 29 Jul 2021 23:51:27 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 06DC2896B5;
	Thu, 29 Jul 2021 21:51:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7B3626E0FD
 for <intel-gfx@lists.freedesktop.org>; Thu, 29 Jul 2021 21:51:23 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10060"; a="192578343"
X-IronPort-AV: E=Sophos;i="5.84,279,1620716400"; d="scan'208";a="192578343"
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
 by fmsmga106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 29 Jul 2021 14:51:22 -0700
X-IronPort-AV: E=Sophos;i="5.84,279,1620716400"; d="scan'208";a="664570757"
Received: from josouza-mobl2.jf.intel.com (HELO josouza-mobl2.intel.com)
 ([10.24.14.59])
 by fmsmga006-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 29 Jul 2021 14:51:22 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 29 Jul 2021 14:55:38 -0700
Message-Id: <20210729215545.192606-3-jose.souza@intel.com>
X-Mailer: git-send-email 2.32.0
In-Reply-To: <20210729215545.192606-1-jose.souza@intel.com>
References: <20210729215545.192606-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH CI 03/10] drm/i915/bios: Enable parse of two
 integrated panels timing data
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q29udGludWluZyB0aGUgY29udmVyc2lvbiBmcm9tIHNpbmdsZSBpbnRlZ3JhdGVkIFZCVCBkYXRh
IHRvIHR3by4KClJldmlld2VkLWJ5OiBNYXR0IEF0d29vZCA8bWF0dGhldy5zLmF0d29vZEBpbnRl
bC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29t
PgpDYzogSmFuaSBOaWt1bGEgPGphbmkubmlrdWxhQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTog
Sm9zw6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRlbC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMgICAgfCA1MyArKysrKysrKysrKysr
LS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmggICAgfCAg
MSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RzaV92YnQuYyB8ICA3ICsr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5jICAgfCAgNyArLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICAgICAgIHwgIDMgKy0KIDUg
ZmlsZXMgY2hhbmdlZCwgNDggaW5zZXJ0aW9ucygrKSwgMjMgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYwppbmRleCA5NDM5YmZlMzJiMTM2Li5m
ZGRlODc3Nzg1NGVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Jpb3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3Mu
YwpAQCAtMjg5LDE0ICsyODksMTUgQEAgcGFyc2VfcGFuZWxfb3B0aW9ucyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKIC8qIFRyeSB0byBmaW5kIGludGVncmF0ZWQgcGFuZWwgdGltaW5n
IGRhdGEgKi8KIHN0YXRpYyB2b2lkCiBwYXJzZV9sZnBfcGFuZWxfZHRkKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1LAotCQkgICAgY29uc3Qgc3RydWN0IGJkYl9oZWFkZXIgKmJkYikKKwkJ
ICAgIGNvbnN0IHN0cnVjdCBiZGJfaGVhZGVyICpiZGIsCisJCSAgICBzdHJ1Y3QgZGRpX3ZidF9w
b3J0X2luZm8gKmluZm8sCisJCSAgICBpbnQgcGFuZWxfaW5kZXgpCiB7CiAJY29uc3Qgc3RydWN0
IGJkYl9sdmRzX2xmcF9kYXRhICpsdmRzX2xmcF9kYXRhOwogCWNvbnN0IHN0cnVjdCBiZGJfbHZk
c19sZnBfZGF0YV9wdHJzICpsdmRzX2xmcF9kYXRhX3B0cnM7CiAJY29uc3Qgc3RydWN0IGx2ZHNf
ZHZvX3RpbWluZyAqcGFuZWxfZHZvX3RpbWluZzsKIAljb25zdCBzdHJ1Y3QgbHZkc19mcF90aW1p
bmcgKmZwX3RpbWluZzsKIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqcGFuZWxfZml4ZWRfbW9k
ZTsKLQlpbnQgcGFuZWxfdHlwZSA9IGk5MTUtPnZidC5wYW5lbF90eXBlOwogCiAJbHZkc19sZnBf
ZGF0YSA9IGZpbmRfc2VjdGlvbihiZGIsIEJEQl9MVkRTX0xGUF9EQVRBKTsKIAlpZiAoIWx2ZHNf
bGZwX2RhdGEpCkBAIC0zMDgsNyArMzA5LDcgQEAgcGFyc2VfbGZwX3BhbmVsX2R0ZChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAogCXBhbmVsX2R2b190aW1pbmcgPSBnZXRfbHZkc19k
dm9fdGltaW5nKGx2ZHNfbGZwX2RhdGEsCiAJCQkJCSAgICAgICBsdmRzX2xmcF9kYXRhX3B0cnMs
Ci0JCQkJCSAgICAgICBwYW5lbF90eXBlKTsKKwkJCQkJICAgICAgIHBhbmVsX2luZGV4KTsKIAog
CXBhbmVsX2ZpeGVkX21vZGUgPSBremFsbG9jKHNpemVvZigqcGFuZWxfZml4ZWRfbW9kZSksIEdG
UF9LRVJORUwpOwogCWlmICghcGFuZWxfZml4ZWRfbW9kZSkKQEAgLTMxNiw3ICszMTcsNyBAQCBw
YXJzZV9sZnBfcGFuZWxfZHRkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCiAJZmls
bF9kZXRhaWxfdGltaW5nX2RhdGEocGFuZWxfZml4ZWRfbW9kZSwgcGFuZWxfZHZvX3RpbWluZyk7
CiAKLQlpOTE1LT52YnQubGZwX2x2ZHNfdmJ0X21vZGUgPSBwYW5lbF9maXhlZF9tb2RlOworCWlu
Zm8tPmxmcF9sdmRzX3ZidF9tb2RlID0gcGFuZWxfZml4ZWRfbW9kZTsKIAogCWRybV9kYmdfa21z
KCZpOTE1LT5kcm0sCiAJCSAgICAiRm91bmQgcGFuZWwgbW9kZSBpbiBCSU9TIFZCVCBsZWdhY3kg
bGZwIHRhYmxlOlxuIik7CkBAIC0zMjQsNyArMzI1LDcgQEAgcGFyc2VfbGZwX3BhbmVsX2R0ZChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAogCWZwX3RpbWluZyA9IGdldF9sdmRzX2Zw
X3RpbWluZyhiZGIsIGx2ZHNfbGZwX2RhdGEsCiAJCQkJICAgICAgIGx2ZHNfbGZwX2RhdGFfcHRy
cywKLQkJCQkgICAgICAgcGFuZWxfdHlwZSk7CisJCQkJICAgICAgIHBhbmVsX2luZGV4KTsKIAlp
ZiAoZnBfdGltaW5nKSB7CiAJCS8qIGNoZWNrIHRoZSByZXNvbHV0aW9uLCBqdXN0IHRvIGJlIHN1
cmUgKi8KIAkJaWYgKGZwX3RpbWluZy0+eF9yZXMgPT0gcGFuZWxfZml4ZWRfbW9kZS0+aGRpc3Bs
YXkgJiYKQEAgLTMzOSw3ICszNDAsOSBAQCBwYXJzZV9sZnBfcGFuZWxfZHRkKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1LAogCiBzdGF0aWMgdm9pZAogcGFyc2VfZ2VuZXJpY19kdGQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCi0JCSAgY29uc3Qgc3RydWN0IGJkYl9oZWFkZXIg
KmJkYikKKwkJICBjb25zdCBzdHJ1Y3QgYmRiX2hlYWRlciAqYmRiLAorCQkgIHN0cnVjdCBkZGlf
dmJ0X3BvcnRfaW5mbyAqaW5mbywKKwkJICBpbnQgcGFuZWxfaW5kZXgpCiB7CiAJY29uc3Qgc3Ry
dWN0IGJkYl9nZW5lcmljX2R0ZCAqZ2VuZXJpY19kdGQ7CiAJY29uc3Qgc3RydWN0IGdlbmVyaWNf
ZHRkX2VudHJ5ICpkdGQ7CkBAIC0zNjMsMTQgKzM2NiwxNCBAQCBwYXJzZV9nZW5lcmljX2R0ZChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAogCW51bV9kdGQgPSAoZ2V0X2Jsb2Nrc2l6
ZShnZW5lcmljX2R0ZCkgLQogCQkgICBzaXplb2Yoc3RydWN0IGJkYl9nZW5lcmljX2R0ZCkpIC8g
Z2VuZXJpY19kdGQtPmdkdGRfc2l6ZTsKLQlpZiAoaTkxNS0+dmJ0LnBhbmVsX3R5cGUgPj0gbnVt
X2R0ZCkgeworCWlmIChwYW5lbF9pbmRleCA+PSBudW1fZHRkKSB7CiAJCWRybV9lcnIoJmk5MTUt
PmRybSwKLQkJCSJQYW5lbCB0eXBlICVkIG5vdCBmb3VuZCBpbiB0YWJsZSBvZiAlZCBEVEQnc1xu
IiwKLQkJCWk5MTUtPnZidC5wYW5lbF90eXBlLCBudW1fZHRkKTsKKwkJCSJQYW5lbCBpbmRleCAl
ZCBub3QgZm91bmQgaW4gdGFibGUgb2YgJWQgRFREJ3NcbiIsCisJCQlwYW5lbF9pbmRleCwgbnVt
X2R0ZCk7CiAJCXJldHVybjsKIAl9CiAKLQlkdGQgPSAmZ2VuZXJpY19kdGQtPmR0ZFtpOTE1LT52
YnQucGFuZWxfdHlwZV07CisJZHRkID0gJmdlbmVyaWNfZHRkLT5kdGRbcGFuZWxfaW5kZXhdOwog
CiAJcGFuZWxfZml4ZWRfbW9kZSA9IGt6YWxsb2Moc2l6ZW9mKCpwYW5lbF9maXhlZF9tb2RlKSwg
R0ZQX0tFUk5FTCk7CiAJaWYgKCFwYW5lbF9maXhlZF9tb2RlKQpAQCAtNDEzLDEyICs0MTYsMTQg
QEAgcGFyc2VfZ2VuZXJpY19kdGQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCSAg
ICAiRm91bmQgcGFuZWwgbW9kZSBpbiBCSU9TIFZCVCBnZW5lcmljIGR0ZCB0YWJsZTpcbiIpOwog
CWRybV9tb2RlX2RlYnVnX3ByaW50bW9kZWxpbmUocGFuZWxfZml4ZWRfbW9kZSk7CiAKLQlpOTE1
LT52YnQubGZwX2x2ZHNfdmJ0X21vZGUgPSBwYW5lbF9maXhlZF9tb2RlOworCWluZm8tPmxmcF9s
dmRzX3ZidF9tb2RlID0gcGFuZWxfZml4ZWRfbW9kZTsKIH0KIAogc3RhdGljIHZvaWQKIHBhcnNl
X3BhbmVsX2R0ZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKLQkJY29uc3Qgc3RydWN0
IGJkYl9oZWFkZXIgKmJkYikKKwkJY29uc3Qgc3RydWN0IGJkYl9oZWFkZXIgKmJkYiwKKwkJc3Ry
dWN0IGRkaV92YnRfcG9ydF9pbmZvICppbmZvLAorCQlpbnQgcGFuZWxfaW5kZXgpCiB7CiAJLyoK
IAkgKiBPbGRlciBWQlRzIHByb3ZpZGVkIHByb3ZpZGVkIERURCBpbmZvcm1hdGlvbiBmb3IgaW50
ZXJuYWwgZGlzcGxheXMKQEAgLTQyOSw5ICs0MzQsOSBAQCBwYXJzZV9wYW5lbF9kdGQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJICogYmFjayB0byB0cnlpbmcgdGhlIG9sZCBMRlAg
YmxvY2sgaWYgdGhhdCBmYWlscy4KIAkgKi8KIAlpZiAoYmRiLT52ZXJzaW9uID49IDIyOSkKLQkJ
cGFyc2VfZ2VuZXJpY19kdGQoaTkxNSwgYmRiKTsKLQlpZiAoIWk5MTUtPnZidC5sZnBfbHZkc192
YnRfbW9kZSkKLQkJcGFyc2VfbGZwX3BhbmVsX2R0ZChpOTE1LCBiZGIpOworCQlwYXJzZV9nZW5l
cmljX2R0ZChpOTE1LCBiZGIsIGluZm8sIHBhbmVsX2luZGV4KTsKKwlpZiAoIWluZm8tPmxmcF9s
dmRzX3ZidF9tb2RlKQorCQlwYXJzZV9sZnBfcGFuZWxfZHRkKGk5MTUsIGJkYiwgaW5mbywgcGFu
ZWxfaW5kZXgpOwogfQogCiBzdGF0aWMgdm9pZApAQCAtMTk4MSw2ICsxOTg2LDcgQEAgc3RhdGlj
IHZvaWQgcGFyc2VfaW50ZWdyYXRlZF9wYW5lbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKIAlwYXJzZV9wYW5lbF9vcHRpb25zKGk5MTUsIGJkYiwgaW5mbywgcGFuZWxfaW5kZXgpOwog
CXBhcnNlX3Bvd2VyX2NvbnNlcnZhdGlvbl9mZWF0dXJlcyhpOTE1LCBiZGIsIGluZm8sIHBhbmVs
X2luZGV4KTsKIAlwYXJzZV9kcml2ZXJfZmVhdHVyZXNfZHJyc19vbmx5KGk5MTUsIGJkYiwgaW5m
byk7CisJcGFyc2VfcGFuZWxfZHRkKGk5MTUsIGJkYiwgaW5mbywgcGFuZWxfaW5kZXgpOwogfQog
CiBzdGF0aWMgdm9pZCBwYXJzZV9kZGlfcG9ydChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwKQEAgLTI0NzYsNyArMjQ4Miw2IEBAIHZvaWQgaW50ZWxfYmlvc19pbml0KHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1KQogCXBhcnNlX2dlbmVyYWxfZmVhdHVyZXMoaTkxNSwgYmRiKTsK
IAlwYXJzZV9nZW5lcmFsX2RlZmluaXRpb25zKGk5MTUsIGJkYik7CiAJcGFyc2VfcGFuZWxfdHlw
ZShpOTE1LCBiZGIpOwotCXBhcnNlX3BhbmVsX2R0ZChpOTE1LCBiZGIpOwogCXBhcnNlX2xmcF9i
YWNrbGlnaHQoaTkxNSwgYmRiKTsKIAlwYXJzZV9zZHZvX3BhbmVsX2RhdGEoaTkxNSwgYmRiKTsK
IAlwYXJzZV9kcml2ZXJfZmVhdHVyZXMoaTkxNSwgYmRiKTsKQEAgLTI1MDksNiArMjUxNCw3IEBA
IHZvaWQgaW50ZWxfYmlvc19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogdm9p
ZCBpbnRlbF9iaW9zX2RyaXZlcl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUp
CiB7CiAJc3RydWN0IGludGVsX2Jpb3NfZW5jb2Rlcl9kYXRhICpkZXZkYXRhLCAqbjsKKwlpbnQg
aTsKIAogCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShkZXZkYXRhLCBuLCAmaTkxNS0+dmJ0LmRp
c3BsYXlfZGV2aWNlcywgbm9kZSkgewogCQlsaXN0X2RlbCgmZGV2ZGF0YS0+bm9kZSk7CkBAIC0y
NTE2LDEwICsyNTIyLDEzIEBAIHZvaWQgaW50ZWxfYmlvc19kcml2ZXJfcmVtb3ZlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1KQogCQlrZnJlZShkZXZkYXRhKTsKIAl9CiAKKwlmb3IgKGkg
PSAwOyBpIDwgSTkxNV9NQVhfUE9SVFM7IGkrKykgeworCQlrZnJlZShpOTE1LT52YnQuZGRpX3Bv
cnRfaW5mb1tpXS5sZnBfbHZkc192YnRfbW9kZSk7CisJCWk5MTUtPnZidC5kZGlfcG9ydF9pbmZv
W2ldLmxmcF9sdmRzX3ZidF9tb2RlID0gTlVMTDsKKwl9CisKIAlrZnJlZShpOTE1LT52YnQuc2R2
b19sdmRzX3ZidF9tb2RlKTsKIAlpOTE1LT52YnQuc2R2b19sdmRzX3ZidF9tb2RlID0gTlVMTDsK
LQlrZnJlZShpOTE1LT52YnQubGZwX2x2ZHNfdmJ0X21vZGUpOwotCWk5MTUtPnZidC5sZnBfbHZk
c192YnRfbW9kZSA9IE5VTEw7CiAJa2ZyZWUoaTkxNS0+dmJ0LmRzaS5kYXRhKTsKIAlpOTE1LT52
YnQuZHNpLmRhdGEgPSBOVUxMOwogCWtmcmVlKGk5MTUtPnZidC5kc2kucHBzKTsKQEAgLTMxMDcs
MyArMzExNiwxMSBAQCBpbnRlbF9iaW9zX2RycnNfdHlwZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlcikKIAogCXJldHVybiBpOTE1LT52YnQuZGRpX3BvcnRfaW5mb1tlbmNvZGVyLT5wb3J0
XS5kcnJzX3R5cGU7CiB9CisKK2NvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICoKK2ludGVs
X2Jpb3NfbGZwX2x2ZHNfaW5mbyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKK3sKKwlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYp
OworCisJcmV0dXJuIGk5MTUtPnZidC5kZGlfcG9ydF9pbmZvW2VuY29kZXItPnBvcnRdLmxmcF9s
dmRzX3ZidF9tb2RlOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9iaW9zLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3Mu
aAppbmRleCBiYWQyODJiNjRjNWU2Li5mMTMzYzUxYzE1NWNkIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuaApAQCAtMjY3LDUgKzI2Nyw2IEBAIGludCBpbnRlbF9i
aW9zX2VuY29kZXJfZHBfYm9vc3RfbGV2ZWwoY29uc3Qgc3RydWN0IGludGVsX2Jpb3NfZW5jb2Rl
cl9kYXRhICpkZXZkCiBpbnQgaW50ZWxfYmlvc19lbmNvZGVyX2hkbWlfYm9vc3RfbGV2ZWwoY29u
c3Qgc3RydWN0IGludGVsX2Jpb3NfZW5jb2Rlcl9kYXRhICpkZXZkYXRhKTsKIAogZW51bSBkcnJz
X3N1cHBvcnRfdHlwZSBpbnRlbF9iaW9zX2RycnNfdHlwZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2Rlcik7Citjb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqaW50ZWxfYmlvc19sZnBf
bHZkc19pbmZvKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKTsKIAogI2VuZGlmIC8qIF9J
TlRFTF9CSU9TX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RzaV92YnQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNp
X3ZidC5jCmluZGV4IGMyYTJjZDFmODRkYzUuLjIyMThkZTA3NzNiZjAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpX3ZidC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHNpX3ZidC5jCkBAIC03MjksMTAgKzcyOSwxNSBA
QCBib29sIGludGVsX2RzaV92YnRfaW5pdChzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9kc2ksIHUx
NiBwYW5lbF9pZCkKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1
KGRldik7CiAJc3RydWN0IG1pcGlfY29uZmlnICptaXBpX2NvbmZpZyA9IGRldl9wcml2LT52YnQu
ZHNpLmNvbmZpZzsKIAlzdHJ1Y3QgbWlwaV9wcHNfZGF0YSAqcHBzID0gZGV2X3ByaXYtPnZidC5k
c2kucHBzOwotCXN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICptb2RlID0gZGV2X3ByaXYtPnZidC5s
ZnBfbHZkc192YnRfbW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbW9kZSA9
IGludGVsX2Jpb3NfbGZwX2x2ZHNfaW5mbygmaW50ZWxfZHNpLT5iYXNlKTsKIAl1MTYgYnVyc3Rf
bW9kZV9yYXRpbzsKIAllbnVtIHBvcnQgcG9ydDsKIAorCWlmICghbW9kZSkgeworCQlkcm1fZGJn
X2ttcygmZGV2X3ByaXYtPmRybSwgImxmcF9sdmRzX3ZidF9tb2RlIG5vdCBzZXRcbiIpOworCQly
ZXR1cm4gZmFsc2U7CisJfQorCiAJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJcbiIpOwog
CiAJaW50ZWxfZHNpLT5lb3RwX3BrdCA9IG1pcGlfY29uZmlnLT5lb3RfcGt0X2Rpc2FibGVkID8g
MCA6IDE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bh
bmVsLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmMKaW5kZXgg
N2Q3YTYwYjRkMmRlNy4uYTg4ZTMwYzk2NmZlNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfcGFuZWwuYwpAQCAtMTUzLDEyICsxNTMsMTMgQEAgaW50ZWxfcGFuZWxfdmJ0
X2ZpeGVkX21vZGUoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY29ubmVjdG9yLT5iYXNlLmRldik7
CiAJc3RydWN0IGRybV9kaXNwbGF5X2luZm8gKmluZm8gPSAmY29ubmVjdG9yLT5iYXNlLmRpc3Bs
YXlfaW5mbzsKIAlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqZml4ZWRfbW9kZTsKKwljb25zdCBz
dHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbGZwX2x2ZHNfdmJ0X21vZGU7CiAKLQlpZiAoIWRldl9w
cml2LT52YnQubGZwX2x2ZHNfdmJ0X21vZGUpCisJbGZwX2x2ZHNfdmJ0X21vZGUgPSBpbnRlbF9i
aW9zX2xmcF9sdmRzX2luZm8oY29ubmVjdG9yLT5lbmNvZGVyKTsKKwlpZiAoIWxmcF9sdmRzX3Zi
dF9tb2RlKQogCQlyZXR1cm4gTlVMTDsKIAotCWZpeGVkX21vZGUgPSBkcm1fbW9kZV9kdXBsaWNh
dGUoJmRldl9wcml2LT5kcm0sCi0JCQkJCWRldl9wcml2LT52YnQubGZwX2x2ZHNfdmJ0X21vZGUp
OworCWZpeGVkX21vZGUgPSBkcm1fbW9kZV9kdXBsaWNhdGUoJmRldl9wcml2LT5kcm0sIGxmcF9s
dmRzX3ZidF9tb2RlKTsKIAlpZiAoIWZpeGVkX21vZGUpCiAJCXJldHVybiBOVUxMOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9kcnYuaAppbmRleCBkZjA5NmEyODNkNTJhLi5lZjNhODZlNGFiYTAyIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTY1Miw2ICs2NTIsOCBAQCBzdHJ1Y3QgZGRpX3ZidF9w
b3J0X2luZm8gewogCWludCBkcF9tYXhfbGlua19yYXRlOwkJLyogMCBmb3Igbm90IGxpbWl0ZWQg
YnkgVkJUICovCiAKIAllbnVtIGRycnNfc3VwcG9ydF90eXBlIGRycnNfdHlwZTsKKworCXN0cnVj
dCBkcm1fZGlzcGxheV9tb2RlICpsZnBfbHZkc192YnRfbW9kZTsgLyogaWYgYW55ICovCiB9Owog
CiBlbnVtIHBzcl9saW5lc190b193YWl0IHsKQEAgLTY2NSw3ICs2NjcsNiBAQCBzdHJ1Y3QgaW50
ZWxfdmJ0X2RhdGEgewogCS8qIGJkYiB2ZXJzaW9uICovCiAJdTE2IHZlcnNpb247CiAKLQlzdHJ1
Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqbGZwX2x2ZHNfdmJ0X21vZGU7IC8qIGlmIGFueSAqLwogCXN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICpzZHZvX2x2ZHNfdmJ0X21vZGU7IC8qIGlmIGFueSAqLwog
CiAJLyogRmVhdHVyZSBiaXRzICovCi0tIAoyLjMyLjAKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

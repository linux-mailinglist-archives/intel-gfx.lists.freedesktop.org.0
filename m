Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2395A1B4A2F
	for <lists+intel-gfx@lfdr.de>; Wed, 22 Apr 2020 18:19:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5C93B6EA33;
	Wed, 22 Apr 2020 16:19:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id E77896EA33
 for <intel-gfx@lists.freedesktop.org>; Wed, 22 Apr 2020 16:19:32 +0000 (UTC)
IronPort-SDR: g0gTDK3Qx69PAB6rYs8MDXC9e1Bqf0DvApz9WsL/uT/YiWGah9nSSwwcN2SLqbJa0/05Nftn1b
 ak/DRyy4WHaA==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 22 Apr 2020 09:19:32 -0700
IronPort-SDR: A9cSwzaFJcfthdeW6jdcjUe6aoK8teJX9I3htq6WqON6SZEq576xezZpAgMnEVppSnLAoYO4Hq
 +qPBENM0DogQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.73,304,1583222400"; d="scan'208";a="246018870"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga007.fm.intel.com with SMTP; 22 Apr 2020 09:19:30 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 22 Apr 2020 19:19:29 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 22 Apr 2020 19:19:16 +0300
Message-Id: <20200422161917.17389-5-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200422161917.17389-1-ville.syrjala@linux.intel.com>
References: <20200422161917.17389-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 5/6] drm/i915: Pass connector state to pfit
 calculations
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClBh
c3MgdGhlIGVudGlyZSBjb25uZWN0b3Igc3RhdGUgdG8gaW50ZWxfe2dtY2gscGNofV9wYW5lbF9m
aXR0aW5nKCkuCkZvciBub3cgd2UganVzdCBuZWVkIHRvIGdldCBhdCAuc2NhbGluZ19tb2RlIGJ1
dCBpbiB0aGUgZnV0dXJlIHdlJ2xsCndhbnQgYWNjZXNzIHRvIHRoZSBtYXJnaW4gcHJvcGVydGll
cyBhcyB3ZWxsLgoKdjI6IERlYWwgd2l0aCBpbnRlbF9kcF95Y2JjcjQyMF9jb25maWcoKQoKU2ln
bmVkLW9mZi1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYyAgICAgfCAgMiAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jICAgIHwgMTcgKysrKysr
KystLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jICB8
IDExICsrKysrKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2x2ZHMu
YyAgfCAgNyArKy0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVs
LmMgfCAxNyArKysrKysrKysrLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9wYW5lbC5oIHwgIDQgKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS92bHZf
ZHNpLmMgICAgIHwgIDYgKystLS0tCiA3IGZpbGVzIGNoYW5nZWQsIDMxIGluc2VydGlvbnMoKyks
IDMzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaWNsX2RzaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMKaW5k
ZXggZmI5MjkxZGU1NWQwLi42NjUwNTkwZjE4ZmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaWNsX2RzaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaWNsX2RzaS5jCkBAIC0xNTMyLDcgKzE1MzIsNyBAQCBzdGF0aWMgaW50IGdlbjExX2RzaV9j
b21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCXBpcGVfY29u
ZmlnLT5vdXRwdXRfZm9ybWF0ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9SR0I7CiAJaW50ZWxfZml4
ZWRfcGFuZWxfbW9kZShmaXhlZF9tb2RlLCBhZGp1c3RlZF9tb2RlKTsKLQlpbnRlbF9wY2hfcGFu
ZWxfZml0dGluZyhwaXBlX2NvbmZpZywgY29ubl9zdGF0ZS0+c2NhbGluZ19tb2RlKTsKKwlpbnRl
bF9wY2hfcGFuZWxfZml0dGluZyhwaXBlX2NvbmZpZywgY29ubl9zdGF0ZSk7CiAKIAlhZGp1c3Rl
ZF9tb2RlLT5mbGFncyA9IDA7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YwppbmRleCBiOWE3NjAwMTJiM2YuLjdjNGM5YTRmNDIzOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtMjMzOSw5ICsyMzM5LDEwIEBAIGludGVsX2RwX2NvbXB1
dGVfbGlua19jb25maWcoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAKIHN0YXRpYyBp
bnQKIGludGVsX2RwX3ljYmNyNDIwX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAot
CQkJIHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCi0JCQkgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpCisJCQkgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCisJCQkgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUp
CiB7CisJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9IGNvbm5fc3RhdGUtPmNvbm5l
Y3RvcjsKIAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfaW5mbyAqaW5mbyA9ICZjb25uZWN0b3It
PmRpc3BsYXlfaW5mbzsKIAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRf
bW9kZSA9CiAJCSZjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwpAQCAtMjM1Myw3ICsyMzU0
LDcgQEAgaW50ZWxfZHBfeWNiY3I0MjBfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAs
CiAKIAljcnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JD
UjQyMDsKIAotCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGNydGNfc3RhdGUsIERSTV9NT0RFX1ND
QUxFX0ZVTExTQ1JFRU4pOworCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGNydGNfc3RhdGUsIGNv
bm5fc3RhdGUpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC0yNTQ5LDggKzI1NTAsOCBAQCBpbnRlbF9k
cF9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlpZiAobHNw
Y29uLT5hY3RpdmUpCiAJCWxzcGNvbl95Y2JjcjQyMF9jb25maWcoJmludGVsX2Nvbm5lY3Rvci0+
YmFzZSwgcGlwZV9jb25maWcpOwogCWVsc2UKLQkJcmV0ID0gaW50ZWxfZHBfeWNiY3I0MjBfY29u
ZmlnKGludGVsX2RwLCAmaW50ZWxfY29ubmVjdG9yLT5iYXNlLAotCQkJCQkgICAgICAgcGlwZV9j
b25maWcpOworCQlyZXQgPSBpbnRlbF9kcF95Y2JjcjQyMF9jb25maWcoaW50ZWxfZHAsIHBpcGVf
Y29uZmlnLAorCQkJCQkgICAgICAgY29ubl9zdGF0ZSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJl
dDsKIApAQCAtMjU2NywxMSArMjU2OCw5IEBAIGludGVsX2RwX2NvbXB1dGVfY29uZmlnKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCSAgICAgICBhZGp1c3RlZF9tb2RlKTsKIAog
CQlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQotCQkJaW50ZWxfZ21jaF9wYW5lbF9maXR0aW5nKHBp
cGVfY29uZmlnLAotCQkJCQkJIGNvbm5fc3RhdGUtPnNjYWxpbmdfbW9kZSk7CisJCQlpbnRlbF9n
bWNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOwogCQllbHNlCi0JCQlp
bnRlbF9wY2hfcGFuZWxfZml0dGluZyhwaXBlX2NvbmZpZywKLQkJCQkJCWNvbm5fc3RhdGUtPnNj
YWxpbmdfbW9kZSk7CisJCQlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhwaXBlX2NvbmZpZywgY29u
bl9zdGF0ZSk7CiAJfQogCiAJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJNX01PREVfRkxB
R19EQkxTQ0FOKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9oZG1pLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYwppbmRl
eCAyNzVhNjc2YzdiMDguLjBlZGJkZDM5ZjQ2MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9oZG1pLmMKQEAgLTIzMjIsOSArMjMyMiwxMCBAQCBzdGF0aWMgYm9vbCBoZG1p
X2RlZXBfY29sb3JfcG9zc2libGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCiB9CiAKIHN0YXRpYyBib29sCi1pbnRlbF9oZG1pX3ljYmNyNDIwX2NvbmZpZyhzdHJ1
Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLAotCQkJICAgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNvbmZpZykKK2ludGVsX2hkbWlfeWNiY3I0MjBfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAorCQkJICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3Rh
dGUgKmNvbm5fc3RhdGUpCiB7CisJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9IGNv
bm5fc3RhdGUtPmNvbm5lY3RvcjsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRv
X2k5MTUoY29ubmVjdG9yLT5kZXYpOwogCiAJaWYgKCFjb25uZWN0b3ItPnljYmNyXzQyMF9hbGxv
d2VkKSB7CkBAIC0yMzMzLDkgKzIzMzQsOSBAQCBpbnRlbF9oZG1pX3ljYmNyNDIwX2NvbmZpZyhz
dHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCi0J
Y29uZmlnLT5vdXRwdXRfZm9ybWF0ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMDsKKwlj
cnRjX3N0YXRlLT5vdXRwdXRfZm9ybWF0ID0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMDsK
IAotCWludGVsX3BjaF9wYW5lbF9maXR0aW5nKGNvbmZpZywgRFJNX01PREVfU0NBTEVfRlVMTFND
UkVFTik7CisJaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7
CiAKIAlyZXR1cm4gdHJ1ZTsKIH0KQEAgLTI0NjYsNyArMjQ2Nyw3IEBAIGludCBpbnRlbF9oZG1p
X2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQlwaXBlX2Nv
bmZpZy0+cGl4ZWxfbXVsdGlwbGllciA9IDI7CiAKIAlpZiAoZHJtX21vZGVfaXNfNDIwX29ubHko
JmNvbm5lY3Rvci0+ZGlzcGxheV9pbmZvLCBhZGp1c3RlZF9tb2RlKSkgewotCQlpZiAoIWludGVs
X2hkbWlfeWNiY3I0MjBfY29uZmlnKGNvbm5lY3RvciwgcGlwZV9jb25maWcpKSB7CisJCWlmICgh
aW50ZWxfaGRtaV95Y2JjcjQyMF9jb25maWcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpKSB7CiAJ
CQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLAogCQkJCSJDYW4ndCBzdXBwb3J0IFlDQkNSNDIwIG91
dHB1dFxuIik7CiAJCQlyZXR1cm4gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9sdmRzLmMKaW5kZXggMjc2ZGI0MWI5NWVmLi5hZTY1OGQ5MzU0YjcgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfbHZkcy5jCkBAIC00MzksMTIgKzQzOSw5IEBA
IHN0YXRpYyBpbnQgaW50ZWxfbHZkc19jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqaW50ZWxfZW5jb2RlciwKIAlpZiAoSEFTX1BDSF9TUExJVChkZXZfcHJpdikpIHsKIAkJcGlw
ZV9jb25maWctPmhhc19wY2hfZW5jb2RlciA9IHRydWU7CiAKLQkJaW50ZWxfcGNoX3BhbmVsX2Zp
dHRpbmcocGlwZV9jb25maWcsCi0JCQkJCWNvbm5fc3RhdGUtPnNjYWxpbmdfbW9kZSk7CisJCWlu
dGVsX3BjaF9wYW5lbF9maXR0aW5nKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKIAl9IGVsc2Ug
ewotCQlpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsCi0JCQkJCSBjb25uX3N0
YXRlLT5zY2FsaW5nX21vZGUpOwotCisJCWludGVsX2dtY2hfcGFuZWxfZml0dGluZyhwaXBlX2Nv
bmZpZywgY29ubl9zdGF0ZSk7CiAJfQogCiAJLyoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfcGFuZWwuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcGFuZWwuYwppbmRleCAzZWExNzA0Mjc3YTguLmI0YmIxY2ZjNTRhOSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wYW5lbC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcGFuZWwuYwpAQCAtMTc4LDcgKzE3OCw3
IEBAIGludGVsX3BhbmVsX3ZidF9maXhlZF9tb2RlKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNv
bm5lY3RvcikKIC8qIGFkanVzdGVkX21vZGUgaGFzIGJlZW4gcHJlc2V0IHRvIGJlIHRoZSBwYW5l
bCdzIGZpeGVkIG1vZGUgKi8KIHZvaWQKIGludGVsX3BjaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAotCQkJaW50IGZpdHRpbmdfbW9kZSkKKwkJCWNv
bnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKQogewogCWNvbnN0IHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0KIAkJJmNydGNfc3RhdGUtPmh3
LmFkanVzdGVkX21vZGU7CkBAIC0xOTAsNyArMTkwLDcgQEAgaW50ZWxfcGNoX3BhbmVsX2ZpdHRp
bmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJICAgIGNydGNfc3RhdGUt
Pm91dHB1dF9mb3JtYXQgIT0gSU5URUxfT1VUUFVUX0ZPUk1BVF9ZQ0JDUjQyMCkKIAkJcmV0dXJu
OwogCi0Jc3dpdGNoIChmaXR0aW5nX21vZGUpIHsKKwlzd2l0Y2ggKGNvbm5fc3RhdGUtPnNjYWxp
bmdfbW9kZSkgewogCWNhc2UgRFJNX01PREVfU0NBTEVfQ0VOVEVSOgogCQl3aWR0aCA9IGNydGNf
c3RhdGUtPnBpcGVfc3JjX3c7CiAJCWhlaWdodCA9IGNydGNfc3RhdGUtPnBpcGVfc3JjX2g7CkBA
IC0yMjcsNiArMjI3LDEwIEBAIGludGVsX3BjaF9wYW5lbF9maXR0aW5nKHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQl9CiAJCWJyZWFrOwogCisJY2FzZSBEUk1fTU9ERV9T
Q0FMRV9OT05FOgorCQlXQVJOX09OKGFkanVzdGVkX21vZGUtPmNydGNfaGRpc3BsYXkgIT0gY3J0
Y19zdGF0ZS0+cGlwZV9zcmNfdyk7CisJCVdBUk5fT04oYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlz
cGxheSAhPSBjcnRjX3N0YXRlLT5waXBlX3NyY19oKTsKKwkJLyogZmFsbCB0aHJvdWdoICovCiAJ
Y2FzZSBEUk1fTU9ERV9TQ0FMRV9GVUxMU0NSRUVOOgogCQl4ID0geSA9IDA7CiAJCXdpZHRoID0g
YWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlzcGxheTsKQEAgLTIzNCw3ICsyMzgsNyBAQCBpbnRlbF9w
Y2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJ
YnJlYWs7CiAKIAlkZWZhdWx0OgotCQlNSVNTSU5HX0NBU0UoZml0dGluZ19tb2RlKTsKKwkJTUlT
U0lOR19DQVNFKGNvbm5fc3RhdGUtPnNjYWxpbmdfbW9kZSk7CiAJCXJldHVybjsKIAl9CiAKQEAg
LTM3OCw3ICszODIsNyBAQCBzdGF0aWMgdm9pZCBpOXh4X3NjYWxlX2FzcGVjdChzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIH0KIAogdm9pZCBpbnRlbF9nbWNoX3BhbmVsX2Zp
dHRpbmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JCQkgICAgICBpbnQg
Zml0dGluZ19tb2RlKQorCQkJICAgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUg
KmNvbm5fc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRj
KGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC0zOTAsNyArMzk0LDcgQEAgdm9pZCBp
bnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCiAJICAgIGFkanVzdGVkX21vZGUtPmNydGNfdmRpc3BsYXkgPT0gY3J0Y19zdGF0ZS0+cGlw
ZV9zcmNfaCkKIAkJZ290byBvdXQ7CiAKLQlzd2l0Y2ggKGZpdHRpbmdfbW9kZSkgeworCXN3aXRj
aCAoY29ubl9zdGF0ZS0+c2NhbGluZ19tb2RlKSB7CiAJY2FzZSBEUk1fTU9ERV9TQ0FMRV9DRU5U
RVI6CiAJCS8qCiAJCSAqIEZvciBjZW50ZXJlZCBtb2Rlcywgd2UgaGF2ZSB0byBjYWxjdWxhdGUg
Ym9yZGVyIHdpZHRocyAmCkBAIC00MjYsOCArNDMwLDcgQEAgdm9pZCBpbnRlbF9nbWNoX3BhbmVs
X2ZpdHRpbmcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCX0KIAkJYnJl
YWs7CiAJZGVmYXVsdDoKLQkJZHJtX1dBUk4oJmRldl9wcml2LT5kcm0sIDEsICJiYWQgcGFuZWwg
Zml0IG1vZGU6ICVkXG4iLAotCQkJIGZpdHRpbmdfbW9kZSk7CisJCU1JU1NJTkdfQ0FTRShjb25u
X3N0YXRlLT5zY2FsaW5nX21vZGUpOwogCQlyZXR1cm47CiAJfQogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmgKaW5kZXggOTJkY2I3NzM3NjNjLi5hMjZkYjg5NTAz
OGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcGFuZWwu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3BhbmVsLmgKQEAgLTI2
LDkgKzI2LDkgQEAgdm9pZCBpbnRlbF9wYW5lbF9maW5pKHN0cnVjdCBpbnRlbF9wYW5lbCAqcGFu
ZWwpOwogdm9pZCBpbnRlbF9maXhlZF9wYW5lbF9tb2RlKGNvbnN0IHN0cnVjdCBkcm1fZGlzcGxh
eV9tb2RlICpmaXhlZF9tb2RlLAogCQkJICAgIHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1
c3RlZF9tb2RlKTsKIHZvaWQgaW50ZWxfcGNoX3BhbmVsX2ZpdHRpbmcoc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCi0JCQkgICAgIGludCBmaXR0aW5nX21vZGUpOworCQkJICAg
ICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9zdGF0ZSk7CiB2b2lkIGlu
dGVsX2dtY2hfcGFuZWxfZml0dGluZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKLQkJCSAgICAgIGludCBmaXR0aW5nX21vZGUpOworCQkJICAgICAgY29uc3Qgc3RydWN0IGRy
bV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpOwogdm9pZCBpbnRlbF9wYW5lbF9zZXRfYmFj
a2xpZ2h0X2FjcGkoY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUs
CiAJCQkJICAgIHUzMiBsZXZlbCwgdTMyIG1heCk7CiBpbnQgaW50ZWxfcGFuZWxfc2V0dXBfYmFj
a2xpZ2h0KHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L3Zsdl9kc2kuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvdmx2X2RzaS5jCmluZGV4IGZlN2M5ZDNlYzQxOC4uOWM5ZWE4OWQyMTA3IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L3Zsdl9kc2kuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L3Zsdl9kc2kuYwpAQCAtMjc4LDExICsyNzgsOSBAQCBz
dGF0aWMgaW50IGludGVsX2RzaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKIAkJaW50ZWxfZml4ZWRfcGFuZWxfbW9kZShmaXhlZF9tb2RlLCBhZGp1c3RlZF9t
b2RlKTsKIAogCQlpZiAoSEFTX0dNQ0goZGV2X3ByaXYpKQotCQkJaW50ZWxfZ21jaF9wYW5lbF9m
aXR0aW5nKHBpcGVfY29uZmlnLAotCQkJCQkJIGNvbm5fc3RhdGUtPnNjYWxpbmdfbW9kZSk7CisJ
CQlpbnRlbF9nbWNoX3BhbmVsX2ZpdHRpbmcocGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOwogCQll
bHNlCi0JCQlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhwaXBlX2NvbmZpZywKLQkJCQkJCWNvbm5f
c3RhdGUtPnNjYWxpbmdfbW9kZSk7CisJCQlpbnRlbF9wY2hfcGFuZWxfZml0dGluZyhwaXBlX2Nv
bmZpZywgY29ubl9zdGF0ZSk7CiAJfQogCiAJaWYgKGFkanVzdGVkX21vZGUtPmZsYWdzICYgRFJN
X01PREVfRkxBR19EQkxTQ0FOKQotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9pbnRlbC1nZngK

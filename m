Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D00E517336
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 10:09:20 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F2CE6895B9;
	Wed,  8 May 2019 08:09:15 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DEAB28957B
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 08:09:13 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16485925-1500050 
 for multiple; Wed, 08 May 2019 09:07:10 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 09:06:49 +0100
Message-Id: <20190508080704.24223-25-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-1-chris@chris-wilson.co.uk>
References: <20190508080704.24223-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 25/40] drm/i915: Move GEM domain management to
 its own file
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Matthew Auld <matthew.auld@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q29udGludWluZyB0aGUgZGVjbHV0dGVyaW5nIG9mIGk5MTVfZ2VtLmMsIHRoYXQgb2YgdGhlIHJl
YWQvd3JpdGUKZG9tYWlucywgcGVyaGFwcyB0aGUgYmlnZ2VzdCBvZiBHRU0ncyBmb2xsaWVzPwoK
U2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+ClJl
dmlld2VkLWJ5OiBNYXR0aGV3IEF1bGQgPG1hdHRoZXcuYXVsZEBpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUgICAgICAgICAgICAgICAgIHwgICAxICsKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9kb21haW4uYyAgICB8IDc4NCArKysrKysrKysr
KysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuaCAgICB8
ICAyOSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvY21kX3BhcnNlci5jICAgICAgICAgfCAg
IDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuYyAgICAgICAgICB8ICAg
NiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMgICAgICAgIHwgICA4
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAgICAgfCAgMjYg
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgICAgIHwgNzc3ICst
LS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9leGVjYnVmZmVy
LmMgICAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX3JlbmRlcl9zdGF0
ZS5jICB8ICAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2h1Z2VfcGFnZXMu
YyAgIHwgICA0ICstCiAuLi4vZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2NvaGVyZW5jeS5j
ICAgfCAgIDggKy0KIC4uLi9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQu
YyB8ICAgOCArLQogMTMgZmlsZXMgY2hhbmdlZCwgODQxIGluc2VydGlvbnMoKyksIDgyMiBkZWxl
dGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fZG9tYWluLmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmls
ZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCmluZGV4IGQwNTc1N2M1MjQ5Mi4uMjlm
YzkyNGJhODE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9NYWtlZmlsZQpAQCAtODcsNiArODcsNyBAQCBpOTE1LXkg
Kz0gJChndC15KQogIyBHRU0gKEdyYXBoaWNzIEV4ZWN1dGlvbiBNYW5hZ2VtZW50KSBjb2RlCiBv
YmoteSArPSBnZW0vCiBnZW0teSArPSBcCisJZ2VtL2k5MTVfZ2VtX2RvbWFpbi5vIFwKIAlnZW0v
aTkxNV9nZW1fb2JqZWN0Lm8gXAogCWdlbS9pOTE1X2dlbV9tbWFuLm8gXAogCWdlbS9pOTE1X2dl
bV9wYWdlcy5vIFwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9kb21haW4uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9kb21haW4uYwpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmVlZTQyMWUzMDIxYwotLS0g
L2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9kb21haW4u
YwpAQCAtMCwwICsxLDc4NCBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQK
KyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxNC0yMDE2IEludGVsIENvcnBvcmF0aW9uCisgKi8KKwor
I2luY2x1ZGUgImk5MTVfZ2VtX2lvY3Rscy5oIgorI2luY2x1ZGUgImk5MTVfZ2VtX29iamVjdC5o
IgorCisjaW5jbHVkZSAiLi4vaTkxNV9kcnYuaCIKKyNpbmNsdWRlICIuLi9pOTE1X2dlbV9jbGZs
dXNoLmgiCisjaW5jbHVkZSAiLi4vaTkxNV9nZW1fZ3R0LmgiCisjaW5jbHVkZSAiLi4vaTkxNV92
bWEuaCIKKworI2luY2x1ZGUgIi4uL2ludGVsX2Zyb250YnVmZmVyLmgiCisKK3N0YXRpYyB2b2lk
IF9faTkxNV9nZW1fb2JqZWN0X2ZsdXNoX2Zvcl9kaXNwbGF5KHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmopCit7CisJLyoKKwkgKiBXZSBtYW51YWxseSBmbHVzaCB0aGUgQ1BVIGRvbWFp
biBzbyB0aGF0IHdlIGNhbiBvdmVycmlkZSBhbmQKKwkgKiBmb3JjZSB0aGUgZmx1c2ggZm9yIHRo
ZSBkaXNwbGF5LCBhbmQgcGVyZm9ybSBpdCBhc3luY3Job25vdXNseS4KKwkgKi8KKwlpOTE1X2dl
bV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKG9iaiwgfkk5MTVfR0VNX0RPTUFJTl9DUFUpOwor
CWlmIChvYmotPmNhY2hlX2RpcnR5KQorCQlpOTE1X2dlbV9jbGZsdXNoX29iamVjdChvYmosIEk5
MTVfQ0xGTFVTSF9GT1JDRSk7CisJb2JqLT53cml0ZV9kb21haW4gPSAwOworfQorCit2b2lkIGk5
MTVfZ2VtX29iamVjdF9mbHVzaF9pZl9kaXNwbGF5KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmopCit7CisJaWYgKCFSRUFEX09OQ0Uob2JqLT5waW5fZ2xvYmFsKSkKKwkJcmV0dXJuOwor
CisJbXV0ZXhfbG9jaygmb2JqLT5iYXNlLmRldi0+c3RydWN0X211dGV4KTsKKwlfX2k5MTVfZ2Vt
X29iamVjdF9mbHVzaF9mb3JfZGlzcGxheShvYmopOworCW11dGV4X3VubG9jaygmb2JqLT5iYXNl
LmRldi0+c3RydWN0X211dGV4KTsKK30KKworLyoqCisgKiBNb3ZlcyBhIHNpbmdsZSBvYmplY3Qg
dG8gdGhlIFdDIHJlYWQsIGFuZCBwb3NzaWJseSB3cml0ZSBkb21haW4uCisgKiBAb2JqOiBvYmpl
Y3QgdG8gYWN0IG9uCisgKiBAd3JpdGU6IGFzayBmb3Igd3JpdGUgYWNjZXNzIG9yIHJlYWQgb25s
eQorICoKKyAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB3aGVuIHRoZSBtb3ZlIGlzIGNvbXBsZXRl
LCBpbmNsdWRpbmcgd2FpdGluZyBvbgorICogZmx1c2hlcyB0byBvY2N1ci4KKyAqLworaW50Citp
OTE1X2dlbV9vYmplY3Rfc2V0X3RvX3djX2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqb2JqLCBib29sIHdyaXRlKQoreworCWludCByZXQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxk
KCZvYmotPmJhc2UuZGV2LT5zdHJ1Y3RfbXV0ZXgpOworCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0
X3dhaXQob2JqLAorCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKKwkJCQkgICBJOTE1
X1dBSVRfTE9DS0VEIHwKKwkJCQkgICAod3JpdGUgPyBJOTE1X1dBSVRfQUxMIDogMCksCisJCQkJ
ICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlp
ZiAob2JqLT53cml0ZV9kb21haW4gPT0gSTkxNV9HRU1fRE9NQUlOX1dDKQorCQlyZXR1cm4gMDsK
KworCS8qIEZsdXNoIGFuZCBhY3F1aXJlIG9iai0+cGFnZXMgc28gdGhhdCB3ZSBhcmUgY29oZXJl
bnQgdGhyb3VnaAorCSAqIGRpcmVjdCBhY2Nlc3MgaW4gbWVtb3J5IHdpdGggcHJldmlvdXMgY2Fj
aGVkIHdyaXRlcyB0aHJvdWdoCisJICogc2htZW1mcyBhbmQgdGhhdCBvdXIgY2FjaGUgZG9tYWlu
IHRyYWNraW5nIHJlbWFpbnMgdmFsaWQuCisJICogRm9yIGV4YW1wbGUsIGlmIHRoZSBvYmotPmZp
bHAgd2FzIG1vdmVkIHRvIHN3YXAgd2l0aG91dCB1cworCSAqIGJlaW5nIG5vdGlmaWVkIGFuZCBy
ZWxlYXNpbmcgdGhlIHBhZ2VzLCB3ZSB3b3VsZCBtaXN0YWtlbmx5CisJICogY29udGludWUgdG8g
YXNzdW1lIHRoYXQgdGhlIG9iaiByZW1haW5lZCBvdXQgb2YgdGhlIENQVSBjYWNoZWQKKwkgKiBk
b21haW4uCisJICovCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmopOworCWlm
IChyZXQpCisJCXJldHVybiByZXQ7CisKKwlpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9t
YWluKG9iaiwgfkk5MTVfR0VNX0RPTUFJTl9XQyk7CisKKwkvKiBTZXJpYWxpc2UgZGlyZWN0IGFj
Y2VzcyB0byB0aGlzIG9iamVjdCB3aXRoIHRoZSBiYXJyaWVycyBmb3IKKwkgKiBjb2hlcmVudCB3
cml0ZXMgZnJvbSB0aGUgR1BVLCBieSBlZmZlY3RpdmVseSBpbnZhbGlkYXRpbmcgdGhlCisJICog
V0MgZG9tYWluIHVwb24gZmlyc3QgYWNjZXNzLgorCSAqLworCWlmICgob2JqLT5yZWFkX2RvbWFp
bnMgJiBJOTE1X0dFTV9ET01BSU5fV0MpID09IDApCisJCW1iKCk7CisKKwkvKiBJdCBzaG91bGQg
bm93IGJlIG91dCBvZiBhbnkgb3RoZXIgd3JpdGUgZG9tYWlucywgYW5kIHdlIGNhbiB1cGRhdGUK
KwkgKiB0aGUgZG9tYWluIHZhbHVlcyBmb3Igb3VyIGNoYW5nZXMuCisJICovCisJR0VNX0JVR19P
Tigob2JqLT53cml0ZV9kb21haW4gJiB+STkxNV9HRU1fRE9NQUlOX1dDKSAhPSAwKTsKKwlvYmot
PnJlYWRfZG9tYWlucyB8PSBJOTE1X0dFTV9ET01BSU5fV0M7CisJaWYgKHdyaXRlKSB7CisJCW9i
ai0+cmVhZF9kb21haW5zID0gSTkxNV9HRU1fRE9NQUlOX1dDOworCQlvYmotPndyaXRlX2RvbWFp
biA9IEk5MTVfR0VNX0RPTUFJTl9XQzsKKwkJb2JqLT5tbS5kaXJ0eSA9IHRydWU7CisJfQorCisJ
aTkxNV9nZW1fb2JqZWN0X3VucGluX3BhZ2VzKG9iaik7CisJcmV0dXJuIDA7Cit9CisKKy8qKgor
ICogTW92ZXMgYSBzaW5nbGUgb2JqZWN0IHRvIHRoZSBHVFQgcmVhZCwgYW5kIHBvc3NpYmx5IHdy
aXRlIGRvbWFpbi4KKyAqIEBvYmo6IG9iamVjdCB0byBhY3Qgb24KKyAqIEB3cml0ZTogYXNrIGZv
ciB3cml0ZSBhY2Nlc3Mgb3IgcmVhZCBvbmx5CisgKgorICogVGhpcyBmdW5jdGlvbiByZXR1cm5z
IHdoZW4gdGhlIG1vdmUgaXMgY29tcGxldGUsIGluY2x1ZGluZyB3YWl0aW5nIG9uCisgKiBmbHVz
aGVzIHRvIG9jY3VyLgorICovCitpbnQKK2k5MTVfZ2VtX29iamVjdF9zZXRfdG9fZ3R0X2RvbWFp
bihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLCBib29sIHdyaXRlKQoreworCWludCBy
ZXQ7CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZvYmotPmJhc2UuZGV2LT5zdHJ1Y3RfbXV0ZXgp
OworCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3dhaXQob2JqLAorCQkJCSAgIEk5MTVfV0FJVF9J
TlRFUlJVUFRJQkxFIHwKKwkJCQkgICBJOTE1X1dBSVRfTE9DS0VEIHwKKwkJCQkgICAod3JpdGUg
PyBJOTE1X1dBSVRfQUxMIDogMCksCisJCQkJICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOworCWlm
IChyZXQpCisJCXJldHVybiByZXQ7CisKKwlpZiAob2JqLT53cml0ZV9kb21haW4gPT0gSTkxNV9H
RU1fRE9NQUlOX0dUVCkKKwkJcmV0dXJuIDA7CisKKwkvKiBGbHVzaCBhbmQgYWNxdWlyZSBvYmot
PnBhZ2VzIHNvIHRoYXQgd2UgYXJlIGNvaGVyZW50IHRocm91Z2gKKwkgKiBkaXJlY3QgYWNjZXNz
IGluIG1lbW9yeSB3aXRoIHByZXZpb3VzIGNhY2hlZCB3cml0ZXMgdGhyb3VnaAorCSAqIHNobWVt
ZnMgYW5kIHRoYXQgb3VyIGNhY2hlIGRvbWFpbiB0cmFja2luZyByZW1haW5zIHZhbGlkLgorCSAq
IEZvciBleGFtcGxlLCBpZiB0aGUgb2JqLT5maWxwIHdhcyBtb3ZlZCB0byBzd2FwIHdpdGhvdXQg
dXMKKwkgKiBiZWluZyBub3RpZmllZCBhbmQgcmVsZWFzaW5nIHRoZSBwYWdlcywgd2Ugd291bGQg
bWlzdGFrZW5seQorCSAqIGNvbnRpbnVlIHRvIGFzc3VtZSB0aGF0IHRoZSBvYmogcmVtYWluZWQg
b3V0IG9mIHRoZSBDUFUgY2FjaGVkCisJICogZG9tYWluLgorCSAqLworCXJldCA9IGk5MTVfZ2Vt
X29iamVjdF9waW5fcGFnZXMob2JqKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJaTkx
NV9nZW1fb2JqZWN0X2ZsdXNoX3dyaXRlX2RvbWFpbihvYmosIH5JOTE1X0dFTV9ET01BSU5fR1RU
KTsKKworCS8qIFNlcmlhbGlzZSBkaXJlY3QgYWNjZXNzIHRvIHRoaXMgb2JqZWN0IHdpdGggdGhl
IGJhcnJpZXJzIGZvcgorCSAqIGNvaGVyZW50IHdyaXRlcyBmcm9tIHRoZSBHUFUsIGJ5IGVmZmVj
dGl2ZWx5IGludmFsaWRhdGluZyB0aGUKKwkgKiBHVFQgZG9tYWluIHVwb24gZmlyc3QgYWNjZXNz
LgorCSAqLworCWlmICgob2JqLT5yZWFkX2RvbWFpbnMgJiBJOTE1X0dFTV9ET01BSU5fR1RUKSA9
PSAwKQorCQltYigpOworCisJLyogSXQgc2hvdWxkIG5vdyBiZSBvdXQgb2YgYW55IG90aGVyIHdy
aXRlIGRvbWFpbnMsIGFuZCB3ZSBjYW4gdXBkYXRlCisJICogdGhlIGRvbWFpbiB2YWx1ZXMgZm9y
IG91ciBjaGFuZ2VzLgorCSAqLworCUdFTV9CVUdfT04oKG9iai0+d3JpdGVfZG9tYWluICYgfkk5
MTVfR0VNX0RPTUFJTl9HVFQpICE9IDApOworCW9iai0+cmVhZF9kb21haW5zIHw9IEk5MTVfR0VN
X0RPTUFJTl9HVFQ7CisJaWYgKHdyaXRlKSB7CisJCW9iai0+cmVhZF9kb21haW5zID0gSTkxNV9H
RU1fRE9NQUlOX0dUVDsKKwkJb2JqLT53cml0ZV9kb21haW4gPSBJOTE1X0dFTV9ET01BSU5fR1RU
OworCQlvYmotPm1tLmRpcnR5ID0gdHJ1ZTsKKwl9CisKKwlpOTE1X2dlbV9vYmplY3RfdW5waW5f
cGFnZXMob2JqKTsKKwlyZXR1cm4gMDsKK30KKworLyoqCisgKiBDaGFuZ2VzIHRoZSBjYWNoZS1s
ZXZlbCBvZiBhbiBvYmplY3QgYWNyb3NzIGFsbCBWTUEuCisgKiBAb2JqOiBvYmplY3QgdG8gYWN0
IG9uCisgKiBAY2FjaGVfbGV2ZWw6IG5ldyBjYWNoZSBsZXZlbCB0byBzZXQgZm9yIHRoZSBvYmpl
Y3QKKyAqCisgKiBBZnRlciB0aGlzIGZ1bmN0aW9uIHJldHVybnMsIHRoZSBvYmplY3Qgd2lsbCBi
ZSBpbiB0aGUgbmV3IGNhY2hlLWxldmVsCisgKiBhY3Jvc3MgYWxsIEdUVCBhbmQgdGhlIGNvbnRl
bnRzIG9mIHRoZSBiYWNraW5nIHN0b3JhZ2Ugd2lsbCBiZSBjb2hlcmVudCwKKyAqIHdpdGggcmVz
cGVjdCB0byB0aGUgbmV3IGNhY2hlLWxldmVsLiBJbiBvcmRlciB0byBrZWVwIHRoZSBiYWNraW5n
IHN0b3JhZ2UKKyAqIGNvaGVyZW50IGZvciBhbGwgdXNlcnMsIHdlIG9ubHkgYWxsb3cgYSBzaW5n
bGUgY2FjaGUgbGV2ZWwgdG8gYmUgc2V0CisgKiBnbG9iYWxseSBvbiB0aGUgb2JqZWN0IGFuZCBw
cmV2ZW50IGl0IGZyb20gYmVpbmcgY2hhbmdlZCB3aGlsc3QgdGhlCisgKiBoYXJkd2FyZSBpcyBy
ZWFkaW5nIGZyb20gdGhlIG9iamVjdC4gVGhhdCBpcyBpZiB0aGUgb2JqZWN0IGlzIGN1cnJlbnRs
eQorICogb24gdGhlIHNjYW5vdXQgaXQgd2lsbCBiZSBzZXQgdG8gdW5jYWNoZWQgKG9yIGVxdWl2
YWxlbnQgZGlzcGxheQorICogY2FjaGUgY29oZXJlbmN5KSBhbmQgYWxsIG5vbi1NT0NTIEdQVSBh
Y2Nlc3Mgd2lsbCBhbHNvIGJlIHVuY2FjaGVkIHNvCisgKiB0aGF0IGFsbCBkaXJlY3QgYWNjZXNz
IHRvIHRoZSBzY2Fub3V0IHJlbWFpbnMgY29oZXJlbnQuCisgKi8KK2ludCBpOTE1X2dlbV9vYmpl
Y3Rfc2V0X2NhY2hlX2xldmVsKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCisJCQkJ
ICAgIGVudW0gaTkxNV9jYWNoZV9sZXZlbCBjYWNoZV9sZXZlbCkKK3sKKwlzdHJ1Y3QgaTkxNV92
bWEgKnZtYTsKKwlpbnQgcmV0OworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmb2JqLT5iYXNlLmRl
di0+c3RydWN0X211dGV4KTsKKworCWlmIChvYmotPmNhY2hlX2xldmVsID09IGNhY2hlX2xldmVs
KQorCQlyZXR1cm4gMDsKKworCS8qIEluc3BlY3QgdGhlIGxpc3Qgb2YgY3VycmVudGx5IGJvdW5k
IFZNQSBhbmQgdW5iaW5kIGFueSB0aGF0IHdvdWxkCisJICogYmUgaW52YWxpZCBnaXZlbiB0aGUg
bmV3IGNhY2hlLWxldmVsLiBUaGlzIGlzIHByaW5jaXBhbGx5IHRvCisJICogY2F0Y2ggdGhlIGlz
c3VlIG9mIHRoZSBDUyBwcmVmZXRjaCBjcm9zc2luZyBwYWdlIGJvdW5kYXJpZXMgYW5kCisJICog
cmVhZGluZyBhbiBpbnZhbGlkIFBURSBvbiBvbGRlciBhcmNoaXRlY3R1cmVzLgorCSAqLworcmVz
dGFydDoKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHZtYSwgJm9iai0+dm1hLmxpc3QsIG9ial9saW5r
KSB7CisJCWlmICghZHJtX21tX25vZGVfYWxsb2NhdGVkKCZ2bWEtPm5vZGUpKQorCQkJY29udGlu
dWU7CisKKwkJaWYgKGk5MTVfdm1hX2lzX3Bpbm5lZCh2bWEpKSB7CisJCQlEUk1fREVCVUcoImNh
biBub3QgY2hhbmdlIHRoZSBjYWNoZSBsZXZlbCBvZiBwaW5uZWQgb2JqZWN0c1xuIik7CisJCQly
ZXR1cm4gLUVCVVNZOworCQl9CisKKwkJaWYgKCFpOTE1X3ZtYV9pc19jbG9zZWQodm1hKSAmJgor
CQkgICAgaTkxNV9nZW1fdmFsaWRfZ3R0X3NwYWNlKHZtYSwgY2FjaGVfbGV2ZWwpKQorCQkJY29u
dGludWU7CisKKwkJcmV0ID0gaTkxNV92bWFfdW5iaW5kKHZtYSk7CisJCWlmIChyZXQpCisJCQly
ZXR1cm4gcmV0OworCisJCS8qIEFzIHVuYmluZGluZyBtYXkgYWZmZWN0IG90aGVyIGVsZW1lbnRz
IGluIHRoZQorCQkgKiBvYmotPnZtYV9saXN0IChkdWUgdG8gc2lkZS1lZmZlY3RzIGZyb20gcmV0
aXJpbmcKKwkJICogYW4gYWN0aXZlIHZtYSksIHBsYXkgc2FmZSBhbmQgcmVzdGFydCB0aGUgaXRl
cmF0b3IuCisJCSAqLworCQlnb3RvIHJlc3RhcnQ7CisJfQorCisJLyogV2UgY2FuIHJldXNlIHRo
ZSBleGlzdGluZyBkcm1fbW0gbm9kZXMgYnV0IG5lZWQgdG8gY2hhbmdlIHRoZQorCSAqIGNhY2hl
LWxldmVsIG9uIHRoZSBQVEUuIFdlIGNvdWxkIHNpbXBseSB1bmJpbmQgdGhlbSBhbGwgYW5kCisJ
ICogcmViaW5kIHdpdGggdGhlIGNvcnJlY3QgY2FjaGUtbGV2ZWwgb24gbmV4dCB1c2UuIEhvd2V2
ZXIgc2luY2UKKwkgKiB3ZSBhbHJlYWR5IGhhdmUgYSB2YWxpZCBzbG90LCBkbWEgbWFwcGluZywg
cGFnZXMgZXRjLCB3ZSBtYXkgYXMKKwkgKiByZXdyaXRlIHRoZSBQVEUgaW4gdGhlIGJlbGllZiB0
aGF0IGRvaW5nIHNvIHRyYW1wbGVzIHVwb24gbGVzcworCSAqIHN0YXRlIGFuZCBzbyBpbnZvbHZl
cyBsZXNzIHdvcmsuCisJICovCisJaWYgKG9iai0+YmluZF9jb3VudCkgeworCQkvKiBCZWZvcmUg
d2UgY2hhbmdlIHRoZSBQVEUsIHRoZSBHUFUgbXVzdCBub3QgYmUgYWNjZXNzaW5nIGl0LgorCQkg
KiBJZiB3ZSB3YWl0IHVwb24gdGhlIG9iamVjdCwgd2Uga25vdyB0aGF0IGFsbCB0aGUgYm91bmQK
KwkJICogVk1BIGFyZSBubyBsb25nZXIgYWN0aXZlLgorCQkgKi8KKwkJcmV0ID0gaTkxNV9nZW1f
b2JqZWN0X3dhaXQob2JqLAorCQkJCQkgICBJOTE1X1dBSVRfSU5URVJSVVBUSUJMRSB8CisJCQkJ
CSAgIEk5MTVfV0FJVF9MT0NLRUQgfAorCQkJCQkgICBJOTE1X1dBSVRfQUxMLAorCQkJCQkgICBN
QVhfU0NIRURVTEVfVElNRU9VVCk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0OworCisJCWlm
ICghSEFTX0xMQyh0b19pOTE1KG9iai0+YmFzZS5kZXYpKSAmJgorCQkgICAgY2FjaGVfbGV2ZWwg
IT0gSTkxNV9DQUNIRV9OT05FKSB7CisJCQkvKiBBY2Nlc3MgdG8gc25vb3BhYmxlIHBhZ2VzIHRo
cm91Z2ggdGhlIEdUVCBpcworCQkJICogaW5jb2hlcmVudCBhbmQgb24gc29tZSBtYWNoaW5lcyBj
YXVzZXMgYSBoYXJkCisJCQkgKiBsb2NrdXAuIFJlbGlucXVpc2ggdGhlIENQVSBtbWFwaW5nIHRv
IGZvcmNlCisJCQkgKiB1c2Vyc3BhY2UgdG8gcmVmYXVsdCBpbiB0aGUgcGFnZXMgYW5kIHdlIGNh
bgorCQkJICogdGhlbiBkb3VibGUgY2hlY2sgaWYgdGhlIEdUVCBtYXBwaW5nIGlzIHN0aWxsCisJ
CQkgKiB2YWxpZCBmb3IgdGhhdCBwb2ludGVyIGFjY2Vzcy4KKwkJCSAqLworCQkJaTkxNV9nZW1f
b2JqZWN0X3JlbGVhc2VfbW1hcChvYmopOworCisJCQkvKiBBcyB3ZSBubyBsb25nZXIgbmVlZCBh
IGZlbmNlIGZvciBHVFQgYWNjZXNzLAorCQkJICogd2UgY2FuIHJlbGlucXVpc2ggaXQgbm93IChh
bmQgc28gcHJldmVudCBoYXZpbmcKKwkJCSAqIHRvIHN0ZWFsIGEgZmVuY2UgZnJvbSBzb21lb25l
IGVsc2Ugb24gdGhlIG5leHQKKwkJCSAqIGZlbmNlIHJlcXVlc3QpLiBOb3RlIEdQVSBhY3Rpdml0
eSB3b3VsZCBoYXZlCisJCQkgKiBkcm9wcGVkIHRoZSBmZW5jZSBhcyBhbGwgc25vb3BhYmxlIGFj
Y2VzcyBpcworCQkJICogc3VwcG9zZWQgdG8gYmUgbGluZWFyLgorCQkJICovCisJCQlmb3JfZWFj
aF9nZ3R0X3ZtYSh2bWEsIG9iaikgeworCQkJCXJldCA9IGk5MTVfdm1hX3B1dF9mZW5jZSh2bWEp
OworCQkJCWlmIChyZXQpCisJCQkJCXJldHVybiByZXQ7CisJCQl9CisJCX0gZWxzZSB7CisJCQkv
KiBXZSBlaXRoZXIgaGF2ZSBpbmNvaGVyZW50IGJhY2tpbmcgc3RvcmUgYW5kCisJCQkgKiBzbyBu
byBHVFQgYWNjZXNzIG9yIHRoZSBhcmNoaXRlY3R1cmUgaXMgZnVsbHkKKwkJCSAqIGNvaGVyZW50
LiBJbiBzdWNoIGNhc2VzLCBleGlzdGluZyBHVFQgbW1hcHMKKwkJCSAqIGlnbm9yZSB0aGUgY2Fj
aGUgYml0IGluIHRoZSBQVEUgYW5kIHdlIGNhbgorCQkJICogcmV3cml0ZSBpdCB3aXRob3V0IGNv
bmZ1c2luZyB0aGUgR1BVIG9yIGhhdmluZworCQkJICogdG8gZm9yY2UgdXNlcnNwYWNlIHRvIGZh
dWx0IGJhY2sgaW4gaXRzIG1tYXBzLgorCQkJICovCisJCX0KKworCQlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5KHZtYSwgJm9iai0+dm1hLmxpc3QsIG9ial9saW5rKSB7CisJCQlpZiAoIWRybV9tbV9ub2Rl
X2FsbG9jYXRlZCgmdm1hLT5ub2RlKSkKKwkJCQljb250aW51ZTsKKworCQkJcmV0ID0gaTkxNV92
bWFfYmluZCh2bWEsIGNhY2hlX2xldmVsLCBQSU5fVVBEQVRFKTsKKwkJCWlmIChyZXQpCisJCQkJ
cmV0dXJuIHJldDsKKwkJfQorCX0KKworCWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCAmb2JqLT52
bWEubGlzdCwgb2JqX2xpbmspCisJCXZtYS0+bm9kZS5jb2xvciA9IGNhY2hlX2xldmVsOworCWk5
MTVfZ2VtX29iamVjdF9zZXRfY2FjaGVfY29oZXJlbmN5KG9iaiwgY2FjaGVfbGV2ZWwpOworCW9i
ai0+Y2FjaGVfZGlydHkgPSB0cnVlOyAvKiBBbHdheXMgaW52YWxpZGF0ZSBzdGFsZSBjYWNoZWxp
bmVzICovCisKKwlyZXR1cm4gMDsKK30KKworaW50IGk5MTVfZ2VtX2dldF9jYWNoaW5nX2lvY3Rs
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCisJCQkgICAgICAgc3RydWN0IGRy
bV9maWxlICpmaWxlKQoreworCXN0cnVjdCBkcm1faTkxNV9nZW1fY2FjaGluZyAqYXJncyA9IGRh
dGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKKwlpbnQgZXJyID0gMDsKKwor
CXJjdV9yZWFkX2xvY2soKTsKKwlvYmogPSBpOTE1X2dlbV9vYmplY3RfbG9va3VwX3JjdShmaWxl
LCBhcmdzLT5oYW5kbGUpOworCWlmICghb2JqKSB7CisJCWVyciA9IC1FTk9FTlQ7CisJCWdvdG8g
b3V0OworCX0KKworCXN3aXRjaCAob2JqLT5jYWNoZV9sZXZlbCkgeworCWNhc2UgSTkxNV9DQUNI
RV9MTEM6CisJY2FzZSBJOTE1X0NBQ0hFX0wzX0xMQzoKKwkJYXJncy0+Y2FjaGluZyA9IEk5MTVf
Q0FDSElOR19DQUNIRUQ7CisJCWJyZWFrOworCisJY2FzZSBJOTE1X0NBQ0hFX1dUOgorCQlhcmdz
LT5jYWNoaW5nID0gSTkxNV9DQUNISU5HX0RJU1BMQVk7CisJCWJyZWFrOworCisJZGVmYXVsdDoK
KwkJYXJncy0+Y2FjaGluZyA9IEk5MTVfQ0FDSElOR19OT05FOworCQlicmVhazsKKwl9CitvdXQ6
CisJcmN1X3JlYWRfdW5sb2NrKCk7CisJcmV0dXJuIGVycjsKK30KKworaW50IGk5MTVfZ2VtX3Nl
dF9jYWNoaW5nX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCisJCQkg
ICAgICAgc3RydWN0IGRybV9maWxlICpmaWxlKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1ID0gdG9faTkxNShkZXYpOworCXN0cnVjdCBkcm1faTkxNV9nZW1fY2FjaGluZyAqYXJn
cyA9IGRhdGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKKwllbnVtIGk5MTVf
Y2FjaGVfbGV2ZWwgbGV2ZWw7CisJaW50IHJldCA9IDA7CisKKwlzd2l0Y2ggKGFyZ3MtPmNhY2hp
bmcpIHsKKwljYXNlIEk5MTVfQ0FDSElOR19OT05FOgorCQlsZXZlbCA9IEk5MTVfQ0FDSEVfTk9O
RTsKKwkJYnJlYWs7CisJY2FzZSBJOTE1X0NBQ0hJTkdfQ0FDSEVEOgorCQkvKgorCQkgKiBEdWUg
dG8gYSBIVyBpc3N1ZSBvbiBCWFQgQSBzdGVwcGluZywgR1BVIHN0b3JlcyB2aWEgYQorCQkgKiBz
bm9vcGVkIG1hcHBpbmcgbWF5IGxlYXZlIHN0YWxlIGRhdGEgaW4gYSBjb3JyZXNwb25kaW5nIENQ
VQorCQkgKiBjYWNoZWxpbmUsIHdoZXJlYXMgbm9ybWFsbHkgc3VjaCBjYWNoZWxpbmVzIHdvdWxk
IGdldAorCQkgKiBpbnZhbGlkYXRlZC4KKwkJICovCisJCWlmICghSEFTX0xMQyhpOTE1KSAmJiAh
SEFTX1NOT09QKGk5MTUpKQorCQkJcmV0dXJuIC1FTk9ERVY7CisKKwkJbGV2ZWwgPSBJOTE1X0NB
Q0hFX0xMQzsKKwkJYnJlYWs7CisJY2FzZSBJOTE1X0NBQ0hJTkdfRElTUExBWToKKwkJbGV2ZWwg
PSBIQVNfV1QoaTkxNSkgPyBJOTE1X0NBQ0hFX1dUIDogSTkxNV9DQUNIRV9OT05FOworCQlicmVh
azsKKwlkZWZhdWx0OgorCQlyZXR1cm4gLUVJTlZBTDsKKwl9CisKKwlvYmogPSBpOTE1X2dlbV9v
YmplY3RfbG9va3VwKGZpbGUsIGFyZ3MtPmhhbmRsZSk7CisJaWYgKCFvYmopCisJCXJldHVybiAt
RU5PRU5UOworCisJLyoKKwkgKiBUaGUgY2FjaGluZyBtb2RlIG9mIHByb3h5IG9iamVjdCBpcyBo
YW5kbGVkIGJ5IGl0cyBnZW5lcmF0b3IsIGFuZAorCSAqIG5vdCBhbGxvd2VkIHRvIGJlIGNoYW5n
ZWQgYnkgdXNlcnNwYWNlLgorCSAqLworCWlmIChpOTE1X2dlbV9vYmplY3RfaXNfcHJveHkob2Jq
KSkgeworCQlyZXQgPSAtRU5YSU87CisJCWdvdG8gb3V0OworCX0KKworCWlmIChvYmotPmNhY2hl
X2xldmVsID09IGxldmVsKQorCQlnb3RvIG91dDsKKworCXJldCA9IGk5MTVfZ2VtX29iamVjdF93
YWl0KG9iaiwKKwkJCQkgICBJOTE1X1dBSVRfSU5URVJSVVBUSUJMRSwKKwkJCQkgICBNQVhfU0NI
RURVTEVfVElNRU9VVCk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlyZXQgPSBpOTE1X211
dGV4X2xvY2tfaW50ZXJydXB0aWJsZShkZXYpOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJ
cmV0ID0gaTkxNV9nZW1fb2JqZWN0X3NldF9jYWNoZV9sZXZlbChvYmosIGxldmVsKTsKKwltdXRl
eF91bmxvY2soJmRldi0+c3RydWN0X211dGV4KTsKKworb3V0OgorCWk5MTVfZ2VtX29iamVjdF9w
dXQob2JqKTsKKwlyZXR1cm4gcmV0OworfQorCisvKgorICogUHJlcGFyZSBidWZmZXIgZm9yIGRp
c3BsYXkgcGxhbmUgKHNjYW5vdXQsIGN1cnNvcnMsIGV0YykuIENhbiBiZSBjYWxsZWQgZnJvbQor
ICogYW4gdW5pbnRlcnJ1cHRpYmxlIHBoYXNlIChtb2Rlc2V0dGluZykgYW5kIGFsbG93cyBhbnkg
Zmx1c2hlcyB0byBiZSBwaXBlbGluZWQKKyAqIChmb3IgcGFnZWZsaXBzKS4gV2Ugb25seSBmbHVz
aCB0aGUgY2FjaGVzIHdoaWxlIHByZXBhcmluZyB0aGUgYnVmZmVyIGZvcgorICogZGlzcGxheSwg
dGhlIGNhbGxlcnMgYXJlIHJlc3BvbnNpYmxlIGZvciBmcm9udGJ1ZmZlciBmbHVzaC4KKyAqLwor
c3RydWN0IGk5MTVfdm1hICoKK2k5MTVfZ2VtX29iamVjdF9waW5fdG9fZGlzcGxheV9wbGFuZShz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAorCQkJCSAgICAgdTMyIGFsaWdubWVudCwK
KwkJCQkgICAgIGNvbnN0IHN0cnVjdCBpOTE1X2dndHRfdmlldyAqdmlldywKKwkJCQkgICAgIHVu
c2lnbmVkIGludCBmbGFncykKK3sKKwlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKKwlpbnQgcmV0Owor
CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmb2JqLT5iYXNlLmRldi0+c3RydWN0X211dGV4KTsKKwor
CS8qIE1hcmsgdGhlIGdsb2JhbCBwaW4gZWFybHkgc28gdGhhdCB3ZSBhY2NvdW50IGZvciB0aGUK
KwkgKiBkaXNwbGF5IGNvaGVyZW5jeSB3aGlsc3Qgc2V0dGluZyB1cCB0aGUgY2FjaGUgZG9tYWlu
cy4KKwkgKi8KKwlvYmotPnBpbl9nbG9iYWwrKzsKKworCS8qIFRoZSBkaXNwbGF5IGVuZ2luZSBp
cyBub3QgY29oZXJlbnQgd2l0aCB0aGUgTExDIGNhY2hlIG9uIGdlbjYuICBBcworCSAqIGEgcmVz
dWx0LCB3ZSBtYWtlIHN1cmUgdGhhdCB0aGUgcGlubmluZyB0aGF0IGlzIGFib3V0IHRvIG9jY3Vy
IGlzCisJICogZG9uZSB3aXRoIHVuY2FjaGVkIFBURXMuIFRoaXMgaXMgbG93ZXN0IGNvbW1vbiBk
ZW5vbWluYXRvciBmb3IgYWxsCisJICogY2hpcHNldHMuCisJICoKKwkgKiBIb3dldmVyIGZvciBn
ZW42Kywgd2UgY291bGQgZG8gYmV0dGVyIGJ5IHVzaW5nIHRoZSBHRkRUIGJpdCBpbnN0ZWFkCisJ
ICogb2YgdW5jYWNoaW5nLCB3aGljaCB3b3VsZCBhbGxvdyB1cyB0byBmbHVzaCBhbGwgdGhlIExM
Qy1jYWNoZWQgZGF0YQorCSAqIHdpdGggdGhhdCBiaXQgaW4gdGhlIFBURSB0byBtYWluIG1lbW9y
eSB3aXRoIGp1c3Qgb25lIFBJUEVfQ09OVFJPTC4KKwkgKi8KKwlyZXQgPSBpOTE1X2dlbV9vYmpl
Y3Rfc2V0X2NhY2hlX2xldmVsKG9iaiwKKwkJCQkJICAgICAgSEFTX1dUKHRvX2k5MTUob2JqLT5i
YXNlLmRldikpID8KKwkJCQkJICAgICAgSTkxNV9DQUNIRV9XVCA6IEk5MTVfQ0FDSEVfTk9ORSk7
CisJaWYgKHJldCkgeworCQl2bWEgPSBFUlJfUFRSKHJldCk7CisJCWdvdG8gZXJyX3VucGluX2ds
b2JhbDsKKwl9CisKKwkvKiBBcyB0aGUgdXNlciBtYXkgbWFwIHRoZSBidWZmZXIgb25jZSBwaW5u
ZWQgaW4gdGhlIGRpc3BsYXkgcGxhbmUKKwkgKiAoZS5nLiBsaWJrbXMgZm9yIHRoZSBib290dXAg
c3BsYXNoKSwgd2UgaGF2ZSB0byBlbnN1cmUgdGhhdCB3ZQorCSAqIGFsd2F5cyB1c2UgbWFwX2Fu
ZF9mZW5jZWFibGUgZm9yIGFsbCBzY2Fub3V0IGJ1ZmZlcnMuIEhvd2V2ZXIsCisJICogaXQgbWF5
IHNpbXBseSBiZSB0b28gYmlnIHRvIGZpdCBpbnRvIG1hcHBhYmxlLCBpbiB3aGljaCBjYXNlCisJ
ICogcHV0IGl0IGFueXdheSBhbmQgaG9wZSB0aGF0IHVzZXJzcGFjZSBjYW4gY29wZSAoYnV0IGFs
d2F5cyBmaXJzdAorCSAqIHRyeSB0byBwcmVzZXJ2ZSB0aGUgZXhpc3RpbmcgQUJJKS4KKwkgKi8K
Kwl2bWEgPSBFUlJfUFRSKC1FTk9TUEMpOworCWlmICgoZmxhZ3MgJiBQSU5fTUFQUEFCTEUpID09
IDAgJiYKKwkgICAgKCF2aWV3IHx8IHZpZXctPnR5cGUgPT0gSTkxNV9HR1RUX1ZJRVdfTk9STUFM
KSkKKwkJdm1hID0gaTkxNV9nZW1fb2JqZWN0X2dndHRfcGluKG9iaiwgdmlldywgMCwgYWxpZ25t
ZW50LAorCQkJCQkgICAgICAgZmxhZ3MgfAorCQkJCQkgICAgICAgUElOX01BUFBBQkxFIHwKKwkJ
CQkJICAgICAgIFBJTl9OT05CTE9DSyk7CisJaWYgKElTX0VSUih2bWEpKQorCQl2bWEgPSBpOTE1
X2dlbV9vYmplY3RfZ2d0dF9waW4ob2JqLCB2aWV3LCAwLCBhbGlnbm1lbnQsIGZsYWdzKTsKKwlp
ZiAoSVNfRVJSKHZtYSkpCisJCWdvdG8gZXJyX3VucGluX2dsb2JhbDsKKworCXZtYS0+ZGlzcGxh
eV9hbGlnbm1lbnQgPSBtYXhfdCh1NjQsIHZtYS0+ZGlzcGxheV9hbGlnbm1lbnQsIGFsaWdubWVu
dCk7CisKKwlfX2k5MTVfZ2VtX29iamVjdF9mbHVzaF9mb3JfZGlzcGxheShvYmopOworCisJLyog
SXQgc2hvdWxkIG5vdyBiZSBvdXQgb2YgYW55IG90aGVyIHdyaXRlIGRvbWFpbnMsIGFuZCB3ZSBj
YW4gdXBkYXRlCisJICogdGhlIGRvbWFpbiB2YWx1ZXMgZm9yIG91ciBjaGFuZ2VzLgorCSAqLwor
CW9iai0+cmVhZF9kb21haW5zIHw9IEk5MTVfR0VNX0RPTUFJTl9HVFQ7CisKKwlyZXR1cm4gdm1h
OworCitlcnJfdW5waW5fZ2xvYmFsOgorCW9iai0+cGluX2dsb2JhbC0tOworCXJldHVybiB2bWE7
Cit9CisKK3N0YXRpYyB2b2lkIGk5MTVfZ2VtX29iamVjdF9idW1wX2luYWN0aXZlX2dndHQoc3Ry
dWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7CisJc3RydWN0IGxpc3RfaGVhZCAqbGlz
dDsKKwlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKKworCUdFTV9CVUdfT04oIWk5MTVfZ2VtX29iamVj
dF9oYXNfcGlubmVkX3BhZ2VzKG9iaikpOworCisJbXV0ZXhfbG9jaygmaTkxNS0+Z2d0dC52bS5t
dXRleCk7CisJZm9yX2VhY2hfZ2d0dF92bWEodm1hLCBvYmopIHsKKwkJaWYgKCFkcm1fbW1fbm9k
ZV9hbGxvY2F0ZWQoJnZtYS0+bm9kZSkpCisJCQljb250aW51ZTsKKworCQlsaXN0X21vdmVfdGFp
bCgmdm1hLT52bV9saW5rLCAmdm1hLT52bS0+Ym91bmRfbGlzdCk7CisJfQorCW11dGV4X3VubG9j
aygmaTkxNS0+Z2d0dC52bS5tdXRleCk7CisKKwlzcGluX2xvY2soJmk5MTUtPm1tLm9ial9sb2Nr
KTsKKwlsaXN0ID0gb2JqLT5iaW5kX2NvdW50ID8gJmk5MTUtPm1tLmJvdW5kX2xpc3QgOiAmaTkx
NS0+bW0udW5ib3VuZF9saXN0OworCWxpc3RfbW92ZV90YWlsKCZvYmotPm1tLmxpbmssIGxpc3Qp
OworCXNwaW5fdW5sb2NrKCZpOTE1LT5tbS5vYmpfbG9jayk7Cit9CisKK3ZvaWQKK2k5MTVfZ2Vt
X29iamVjdF91bnBpbl9mcm9tX2Rpc3BsYXlfcGxhbmUoc3RydWN0IGk5MTVfdm1hICp2bWEpCit7
CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmdm1hLT52bS0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CisKKwlpZiAoV0FSTl9PTih2bWEtPm9iai0+cGluX2dsb2JhbCA9PSAwKSkKKwkJcmV0dXJuOwor
CisJaWYgKC0tdm1hLT5vYmotPnBpbl9nbG9iYWwgPT0gMCkKKwkJdm1hLT5kaXNwbGF5X2FsaWdu
bWVudCA9IEk5MTVfR1RUX01JTl9BTElHTk1FTlQ7CisKKwkvKiBCdW1wIHRoZSBMUlUgdG8gdHJ5
IGFuZCBhdm9pZCBwcmVtYXR1cmUgZXZpY3Rpb24gd2hpbHN0IGZsaXBwaW5nICAqLworCWk5MTVf
Z2VtX29iamVjdF9idW1wX2luYWN0aXZlX2dndHQodm1hLT5vYmopOworCisJaTkxNV92bWFfdW5w
aW4odm1hKTsKK30KKworLyoqCisgKiBNb3ZlcyBhIHNpbmdsZSBvYmplY3QgdG8gdGhlIENQVSBy
ZWFkLCBhbmQgcG9zc2libHkgd3JpdGUgZG9tYWluLgorICogQG9iajogb2JqZWN0IHRvIGFjdCBv
bgorICogQHdyaXRlOiByZXF1ZXN0aW5nIHdyaXRlIG9yIHJlYWQtb25seSBhY2Nlc3MKKyAqCisg
KiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgd2hlbiB0aGUgbW92ZSBpcyBjb21wbGV0ZSwgaW5jbHVk
aW5nIHdhaXRpbmcgb24KKyAqIGZsdXNoZXMgdG8gb2NjdXIuCisgKi8KK2ludAoraTkxNV9nZW1f
b2JqZWN0X3NldF90b19jcHVfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmos
IGJvb2wgd3JpdGUpCit7CisJaW50IHJldDsKKworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJm9iai0+
YmFzZS5kZXYtPnN0cnVjdF9tdXRleCk7CisKKwlyZXQgPSBpOTE1X2dlbV9vYmplY3Rfd2FpdChv
YmosCisJCQkJICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUgfAorCQkJCSAgIEk5MTVfV0FJVF9M
T0NLRUQgfAorCQkJCSAgICh3cml0ZSA/IEk5MTVfV0FJVF9BTEwgOiAwKSwKKwkJCQkgICBNQVhf
U0NIRURVTEVfVElNRU9VVCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCWk5MTVfZ2Vt
X29iamVjdF9mbHVzaF93cml0ZV9kb21haW4ob2JqLCB+STkxNV9HRU1fRE9NQUlOX0NQVSk7CisK
KwkvKiBGbHVzaCB0aGUgQ1BVIGNhY2hlIGlmIGl0J3Mgc3RpbGwgaW52YWxpZC4gKi8KKwlpZiAo
KG9iai0+cmVhZF9kb21haW5zICYgSTkxNV9HRU1fRE9NQUlOX0NQVSkgPT0gMCkgeworCQlpOTE1
X2dlbV9jbGZsdXNoX29iamVjdChvYmosIEk5MTVfQ0xGTFVTSF9TWU5DKTsKKwkJb2JqLT5yZWFk
X2RvbWFpbnMgfD0gSTkxNV9HRU1fRE9NQUlOX0NQVTsKKwl9CisKKwkvKiBJdCBzaG91bGQgbm93
IGJlIG91dCBvZiBhbnkgb3RoZXIgd3JpdGUgZG9tYWlucywgYW5kIHdlIGNhbiB1cGRhdGUKKwkg
KiB0aGUgZG9tYWluIHZhbHVlcyBmb3Igb3VyIGNoYW5nZXMuCisJICovCisJR0VNX0JVR19PTihv
YmotPndyaXRlX2RvbWFpbiAmIH5JOTE1X0dFTV9ET01BSU5fQ1BVKTsKKworCS8qIElmIHdlJ3Jl
IHdyaXRpbmcgdGhyb3VnaCB0aGUgQ1BVLCB0aGVuIHRoZSBHUFUgcmVhZCBkb21haW5zIHdpbGwK
KwkgKiBuZWVkIHRvIGJlIGludmFsaWRhdGVkIGF0IG5leHQgdXNlLgorCSAqLworCWlmICh3cml0
ZSkKKwkJX19zdGFydF9jcHVfd3JpdGUob2JqKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMg
aW5saW5lIGVudW0gZmJfb3Bfb3JpZ2luCitmYl93cml0ZV9vcmlnaW4oc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiwgdW5zaWduZWQgaW50IGRvbWFpbikKK3sKKwlyZXR1cm4gKGRvbWFp
biA9PSBJOTE1X0dFTV9ET01BSU5fR1RUID8KKwkJb2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdp
biA6IE9SSUdJTl9DUFUpOworfQorCisvKioKKyAqIENhbGxlZCB3aGVuIHVzZXIgc3BhY2UgcHJl
cGFyZXMgdG8gdXNlIGFuIG9iamVjdCB3aXRoIHRoZSBDUFUsIGVpdGhlcgorICogdGhyb3VnaCB0
aGUgbW1hcCBpb2N0bCdzIG1hcHBpbmcgb3IgYSBHVFQgbWFwcGluZy4KKyAqIEBkZXY6IGRybSBk
ZXZpY2UKKyAqIEBkYXRhOiBpb2N0bCBkYXRhIGJsb2IKKyAqIEBmaWxlOiBkcm0gZmlsZQorICov
CitpbnQKK2k5MTVfZ2VtX3NldF9kb21haW5faW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
dm9pZCAqZGF0YSwKKwkJCSAgc3RydWN0IGRybV9maWxlICpmaWxlKQoreworCXN0cnVjdCBkcm1f
aTkxNV9nZW1fc2V0X2RvbWFpbiAqYXJncyA9IGRhdGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3QgKm9iajsKKwl1MzIgcmVhZF9kb21haW5zID0gYXJncy0+cmVhZF9kb21haW5zOworCXUz
MiB3cml0ZV9kb21haW4gPSBhcmdzLT53cml0ZV9kb21haW47CisJaW50IGVycjsKKworCS8qIE9u
bHkgaGFuZGxlIHNldHRpbmcgZG9tYWlucyB0byB0eXBlcyB1c2VkIGJ5IHRoZSBDUFUuICovCisJ
aWYgKCh3cml0ZV9kb21haW4gfCByZWFkX2RvbWFpbnMpICYgSTkxNV9HRU1fR1BVX0RPTUFJTlMp
CisJCXJldHVybiAtRUlOVkFMOworCisJLyoKKwkgKiBIYXZpbmcgc29tZXRoaW5nIGluIHRoZSB3
cml0ZSBkb21haW4gaW1wbGllcyBpdCdzIGluIHRoZSByZWFkCisJICogZG9tYWluLCBhbmQgb25s
eSB0aGF0IHJlYWQgZG9tYWluLiAgRW5mb3JjZSB0aGF0IGluIHRoZSByZXF1ZXN0LgorCSAqLwor
CWlmICh3cml0ZV9kb21haW4gJiYgcmVhZF9kb21haW5zICE9IHdyaXRlX2RvbWFpbikKKwkJcmV0
dXJuIC1FSU5WQUw7CisKKwlpZiAoIXJlYWRfZG9tYWlucykKKwkJcmV0dXJuIDA7CisKKwlvYmog
PSBpOTE1X2dlbV9vYmplY3RfbG9va3VwKGZpbGUsIGFyZ3MtPmhhbmRsZSk7CisJaWYgKCFvYmop
CisJCXJldHVybiAtRU5PRU5UOworCisJLyoKKwkgKiBBbHJlYWR5IGluIHRoZSBkZXNpcmVkIHdy
aXRlIGRvbWFpbj8gTm90aGluZyBmb3IgdXMgdG8gZG8hCisJICoKKwkgKiBXZSBhcHBseSBhIGxp
dHRsZSBiaXQgb2YgY3VubmluZyBoZXJlIHRvIGNhdGNoIGEgYnJvYWRlciBzZXQgb2YKKwkgKiBu
by1vcHMuIElmIG9iai0+d3JpdGVfZG9tYWluIGlzIHNldCwgd2UgbXVzdCBiZSBpbiB0aGUgc2Ft
ZQorCSAqIG9iai0+cmVhZF9kb21haW5zLCBhbmQgb25seSB0aGF0IGRvbWFpbi4gVGhlcmVmb3Jl
LCBpZiB0aGF0CisJICogb2JqLT53cml0ZV9kb21haW4gbWF0Y2hlcyB0aGUgcmVxdWVzdCByZWFk
X2RvbWFpbnMsIHdlIGFyZQorCSAqIGFscmVhZHkgaW4gdGhlIHNhbWUgcmVhZC93cml0ZSBkb21h
aW4gYW5kIGNhbiBza2lwIHRoZSBvcGVyYXRpb24sCisJICogd2l0aG91dCBoYXZpbmcgdG8gZnVy
dGhlciBjaGVjayB0aGUgcmVxdWVzdGVkIHdyaXRlX2RvbWFpbi4KKwkgKi8KKwlpZiAoUkVBRF9P
TkNFKG9iai0+d3JpdGVfZG9tYWluKSA9PSByZWFkX2RvbWFpbnMpIHsKKwkJZXJyID0gMDsKKwkJ
Z290byBvdXQ7CisJfQorCisJLyoKKwkgKiBUcnkgdG8gZmx1c2ggdGhlIG9iamVjdCBvZmYgdGhl
IEdQVSB3aXRob3V0IGhvbGRpbmcgdGhlIGxvY2suCisJICogV2Ugd2lsbCByZXBlYXQgdGhlIGZs
dXNoIGhvbGRpbmcgdGhlIGxvY2sgaW4gdGhlIG5vcm1hbCBtYW5uZXIKKwkgKiB0byBjYXRjaCBj
YXNlcyB3aGVyZSB3ZSBhcmUgZ2F6dW1wZWQuCisJICovCisJZXJyID0gaTkxNV9nZW1fb2JqZWN0
X3dhaXQob2JqLAorCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKKwkJCQkgICBJOTE1
X1dBSVRfUFJJT1JJVFkgfAorCQkJCSAgICh3cml0ZV9kb21haW4gPyBJOTE1X1dBSVRfQUxMIDog
MCksCisJCQkJICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOworCWlmIChlcnIpCisJCWdvdG8gb3V0
OworCisJLyoKKwkgKiBQcm94eSBvYmplY3RzIGRvIG5vdCBjb250cm9sIGFjY2VzcyB0byB0aGUg
YmFja2luZyBzdG9yYWdlLCBlcmdvCisJICogdGhleSBjYW5ub3QgYmUgdXNlZCBhcyBhIG1lYW5z
IHRvIG1hbmlwdWxhdGUgdGhlIGNhY2hlIGRvbWFpbgorCSAqIHRyYWNraW5nIGZvciB0aGF0IGJh
Y2tpbmcgc3RvcmFnZS4gVGhlIHByb3h5IG9iamVjdCBpcyBhbHdheXMKKwkgKiBjb25zaWRlcmVk
IHRvIGJlIG91dHNpZGUgb2YgYW55IGNhY2hlIGRvbWFpbi4KKwkgKi8KKwlpZiAoaTkxNV9nZW1f
b2JqZWN0X2lzX3Byb3h5KG9iaikpIHsKKwkJZXJyID0gLUVOWElPOworCQlnb3RvIG91dDsKKwl9
CisKKwkvKgorCSAqIEZsdXNoIGFuZCBhY3F1aXJlIG9iai0+cGFnZXMgc28gdGhhdCB3ZSBhcmUg
Y29oZXJlbnQgdGhyb3VnaAorCSAqIGRpcmVjdCBhY2Nlc3MgaW4gbWVtb3J5IHdpdGggcHJldmlv
dXMgY2FjaGVkIHdyaXRlcyB0aHJvdWdoCisJICogc2htZW1mcyBhbmQgdGhhdCBvdXIgY2FjaGUg
ZG9tYWluIHRyYWNraW5nIHJlbWFpbnMgdmFsaWQuCisJICogRm9yIGV4YW1wbGUsIGlmIHRoZSBv
YmotPmZpbHAgd2FzIG1vdmVkIHRvIHN3YXAgd2l0aG91dCB1cworCSAqIGJlaW5nIG5vdGlmaWVk
IGFuZCByZWxlYXNpbmcgdGhlIHBhZ2VzLCB3ZSB3b3VsZCBtaXN0YWtlbmx5CisJICogY29udGlu
dWUgdG8gYXNzdW1lIHRoYXQgdGhlIG9iaiByZW1haW5lZCBvdXQgb2YgdGhlIENQVSBjYWNoZWQK
KwkgKiBkb21haW4uCisJICovCisJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmop
OworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJZXJyID0gaTkxNV9tdXRleF9sb2NrX2ludGVy
cnVwdGlibGUoZGV2KTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dF91bnBpbjsKKworCWlmIChyZWFk
X2RvbWFpbnMgJiBJOTE1X0dFTV9ET01BSU5fV0MpCisJCWVyciA9IGk5MTVfZ2VtX29iamVjdF9z
ZXRfdG9fd2NfZG9tYWluKG9iaiwgd3JpdGVfZG9tYWluKTsKKwllbHNlIGlmIChyZWFkX2RvbWFp
bnMgJiBJOTE1X0dFTV9ET01BSU5fR1RUKQorCQllcnIgPSBpOTE1X2dlbV9vYmplY3Rfc2V0X3Rv
X2d0dF9kb21haW4ob2JqLCB3cml0ZV9kb21haW4pOworCWVsc2UKKwkJZXJyID0gaTkxNV9nZW1f
b2JqZWN0X3NldF90b19jcHVfZG9tYWluKG9iaiwgd3JpdGVfZG9tYWluKTsKKworCS8qIEFuZCBi
dW1wIHRoZSBMUlUgZm9yIHRoaXMgYWNjZXNzICovCisJaTkxNV9nZW1fb2JqZWN0X2J1bXBfaW5h
Y3RpdmVfZ2d0dChvYmopOworCisJbXV0ZXhfdW5sb2NrKCZkZXYtPnN0cnVjdF9tdXRleCk7CisK
KwlpZiAod3JpdGVfZG9tYWluICE9IDApCisJCWludGVsX2ZiX29ial9pbnZhbGlkYXRlKG9iaiwK
KwkJCQkJZmJfd3JpdGVfb3JpZ2luKG9iaiwgd3JpdGVfZG9tYWluKSk7CisKK291dF91bnBpbjoK
KwlpOTE1X2dlbV9vYmplY3RfdW5waW5fcGFnZXMob2JqKTsKK291dDoKKwlpOTE1X2dlbV9vYmpl
Y3RfcHV0KG9iaik7CisJcmV0dXJuIGVycjsKK30KKworLyoKKyAqIFBpbnMgdGhlIHNwZWNpZmll
ZCBvYmplY3QncyBwYWdlcyBhbmQgc3luY2hyb25pemVzIHRoZSBvYmplY3Qgd2l0aAorICogR1BV
IGFjY2Vzc2VzLiBTZXRzIG5lZWRzX2NsZmx1c2ggdG8gbm9uLXplcm8gaWYgdGhlIGNhbGxlciBz
aG91bGQKKyAqIGZsdXNoIHRoZSBvYmplY3QgZnJvbSB0aGUgQ1BVIGNhY2hlLgorICovCitpbnQg
aTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfcmVhZChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqLAorCQkJCSB1bnNpZ25lZCBpbnQgKm5lZWRzX2NsZmx1c2gpCit7CisJaW50IHJldDsKKwor
CWxvY2tkZXBfYXNzZXJ0X2hlbGQoJm9iai0+YmFzZS5kZXYtPnN0cnVjdF9tdXRleCk7CisKKwkq
bmVlZHNfY2xmbHVzaCA9IDA7CisJaWYgKCFpOTE1X2dlbV9vYmplY3RfaGFzX3N0cnVjdF9wYWdl
KG9iaikpCisJCXJldHVybiAtRU5PREVWOworCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3dhaXQo
b2JqLAorCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKKwkJCQkgICBJOTE1X1dBSVRf
TE9DS0VELAorCQkJCSAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKKwlpZiAocmV0KQorCQlyZXR1
cm4gcmV0OworCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmopOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisKKwlpZiAob2JqLT5jYWNoZV9jb2hlcmVudCAmIEk5MTVfQk9f
Q0FDSEVfQ09IRVJFTlRfRk9SX1JFQUQgfHwKKwkgICAgIXN0YXRpY19jcHVfaGFzKFg4Nl9GRUFU
VVJFX0NMRkxVU0gpKSB7CisJCXJldCA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2RvbWFp
bihvYmosIGZhbHNlKTsKKwkJaWYgKHJldCkKKwkJCWdvdG8gZXJyX3VucGluOworCQllbHNlCisJ
CQlnb3RvIG91dDsKKwl9CisKKwlpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKG9i
aiwgfkk5MTVfR0VNX0RPTUFJTl9DUFUpOworCisJLyogSWYgd2UncmUgbm90IGluIHRoZSBjcHUg
cmVhZCBkb21haW4sIHNldCBvdXJzZWxmIGludG8gdGhlIGd0dAorCSAqIHJlYWQgZG9tYWluIGFu
ZCBtYW51YWxseSBmbHVzaCBjYWNoZWxpbmVzIChpZiByZXF1aXJlZCkuIFRoaXMKKwkgKiBvcHRp
bWl6ZXMgZm9yIHRoZSBjYXNlIHdoZW4gdGhlIGdwdSB3aWxsIGRpcnR5IHRoZSBkYXRhCisJICog
YW55d2F5IGFnYWluIGJlZm9yZSB0aGUgbmV4dCBwcmVhZCBoYXBwZW5zLgorCSAqLworCWlmICgh
b2JqLT5jYWNoZV9kaXJ0eSAmJgorCSAgICAhKG9iai0+cmVhZF9kb21haW5zICYgSTkxNV9HRU1f
RE9NQUlOX0NQVSkpCisJCSpuZWVkc19jbGZsdXNoID0gQ0xGTFVTSF9CRUZPUkU7CisKK291dDoK
KwkvKiByZXR1cm4gd2l0aCB0aGUgcGFnZXMgcGlubmVkICovCisJcmV0dXJuIDA7CisKK2Vycl91
bnBpbjoKKwlpOTE1X2dlbV9vYmplY3RfdW5waW5fcGFnZXMob2JqKTsKKwlyZXR1cm4gcmV0Owor
fQorCitpbnQgaTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfd3JpdGUoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaiwKKwkJCQkgIHVuc2lnbmVkIGludCAqbmVlZHNfY2xmbHVzaCkKK3sKKwlp
bnQgcmV0OworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmb2JqLT5iYXNlLmRldi0+c3RydWN0X211
dGV4KTsKKworCSpuZWVkc19jbGZsdXNoID0gMDsKKwlpZiAoIWk5MTVfZ2VtX29iamVjdF9oYXNf
c3RydWN0X3BhZ2Uob2JqKSkKKwkJcmV0dXJuIC1FTk9ERVY7CisKKwlyZXQgPSBpOTE1X2dlbV9v
YmplY3Rfd2FpdChvYmosCisJCQkJICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUgfAorCQkJCSAg
IEk5MTVfV0FJVF9MT0NLRUQgfAorCQkJCSAgIEk5MTVfV0FJVF9BTEwsCisJCQkJICAgTUFYX1ND
SEVEVUxFX1RJTUVPVVQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXQgPSBpOTE1
X2dlbV9vYmplY3RfcGluX3BhZ2VzKG9iaik7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKwor
CWlmIChvYmotPmNhY2hlX2NvaGVyZW50ICYgSTkxNV9CT19DQUNIRV9DT0hFUkVOVF9GT1JfV1JJ
VEUgfHwKKwkgICAgIXN0YXRpY19jcHVfaGFzKFg4Nl9GRUFUVVJFX0NMRkxVU0gpKSB7CisJCXJl
dCA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2RvbWFpbihvYmosIHRydWUpOworCQlpZiAo
cmV0KQorCQkJZ290byBlcnJfdW5waW47CisJCWVsc2UKKwkJCWdvdG8gb3V0OworCX0KKworCWk5
MTVfZ2VtX29iamVjdF9mbHVzaF93cml0ZV9kb21haW4ob2JqLCB+STkxNV9HRU1fRE9NQUlOX0NQ
VSk7CisKKwkvKiBJZiB3ZSdyZSBub3QgaW4gdGhlIGNwdSB3cml0ZSBkb21haW4sIHNldCBvdXJz
ZWxmIGludG8gdGhlCisJICogZ3R0IHdyaXRlIGRvbWFpbiBhbmQgbWFudWFsbHkgZmx1c2ggY2Fj
aGVsaW5lcyAoYXMgcmVxdWlyZWQpLgorCSAqIFRoaXMgb3B0aW1pemVzIGZvciB0aGUgY2FzZSB3
aGVuIHRoZSBncHUgd2lsbCB1c2UgdGhlIGRhdGEKKwkgKiByaWdodCBhd2F5IGFuZCB3ZSB0aGVy
ZWZvcmUgaGF2ZSB0byBjbGZsdXNoIGFueXdheS4KKwkgKi8KKwlpZiAoIW9iai0+Y2FjaGVfZGly
dHkpIHsKKwkJKm5lZWRzX2NsZmx1c2ggfD0gQ0xGTFVTSF9BRlRFUjsKKworCQkvKgorCQkgKiBT
YW1lIHRyaWNrIGFwcGxpZXMgdG8gaW52YWxpZGF0ZSBwYXJ0aWFsbHkgd3JpdHRlbgorCQkgKiBj
YWNoZWxpbmVzIHJlYWQgYmVmb3JlIHdyaXRpbmcuCisJCSAqLworCQlpZiAoIShvYmotPnJlYWRf
ZG9tYWlucyAmIEk5MTVfR0VNX0RPTUFJTl9DUFUpKQorCQkJKm5lZWRzX2NsZmx1c2ggfD0gQ0xG
TFVTSF9CRUZPUkU7CisJfQorCitvdXQ6CisJaW50ZWxfZmJfb2JqX2ludmFsaWRhdGUob2JqLCBP
UklHSU5fQ1BVKTsKKwlvYmotPm1tLmRpcnR5ID0gdHJ1ZTsKKwkvKiByZXR1cm4gd2l0aCB0aGUg
cGFnZXMgcGlubmVkICovCisJcmV0dXJuIDA7CisKK2Vycl91bnBpbjoKKwlpOTE1X2dlbV9vYmpl
Y3RfdW5waW5fcGFnZXMob2JqKTsKKwlyZXR1cm4gcmV0OworfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCmluZGV4IDliZjgxNTVkMjdkZS4uOTgwNTg3ZTQyMGU2
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCkBAIC0xNSw2
ICsxNSw4IEBACiAKICNpbmNsdWRlICJpOTE1X2dlbV9vYmplY3RfdHlwZXMuaCIKIAorI2luY2x1
ZGUgIi4uL2k5MTVfZ2VtX2d0dC5oIgorCiB2b2lkIGk5MTVfZ2VtX2luaXRfX29iamVjdHMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwogCiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqaTkxNV9nZW1fb2JqZWN0X2FsbG9jKHZvaWQpOwpAQCAtMzUzLDYgKzM1NSwyMCBAQCB2b2lk
CiBpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmosCiAJCQkJICAgdW5zaWduZWQgaW50IGZsdXNoX2RvbWFpbnMpOwogCitpbnQg
aTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfcmVhZChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqLAorCQkJCSB1bnNpZ25lZCBpbnQgKm5lZWRzX2NsZmx1c2gpOworaW50IGk5MTVfZ2VtX29i
amVjdF9wcmVwYXJlX3dyaXRlKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCisJCQkJ
ICB1bnNpZ25lZCBpbnQgKm5lZWRzX2NsZmx1c2gpOworI2RlZmluZSBDTEZMVVNIX0JFRk9SRQlC
SVQoMCkKKyNkZWZpbmUgQ0xGTFVTSF9BRlRFUglCSVQoMSkKKyNkZWZpbmUgQ0xGTFVTSF9GTEFH
UwkoQ0xGTFVTSF9CRUZPUkUgfCBDTEZMVVNIX0FGVEVSKQorCitzdGF0aWMgaW5saW5lIHZvaWQK
K2k5MTVfZ2VtX29iamVjdF9maW5pc2hfYWNjZXNzKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmopCit7CisJaTkxNV9nZW1fb2JqZWN0X3VucGluX3BhZ2VzKG9iaik7Cit9CisKIHN0YXRp
YyBpbmxpbmUgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqCiBpOTE1X2dlbV9vYmplY3RfbGFzdF93
cml0ZV9lbmdpbmUoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIHsKQEAgLTM3NCw2
ICszOTAsMTkgQEAgdm9pZCBpOTE1X2dlbV9vYmplY3Rfc2V0X2NhY2hlX2NvaGVyZW5jeShzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCQkJCQkgdW5zaWduZWQgaW50IGNhY2hlX2xl
dmVsKTsKIHZvaWQgaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX2lmX2Rpc3BsYXkoc3RydWN0IGRybV9p
OTE1X2dlbV9vYmplY3QgKm9iaik7CiAKK2ludCBfX211c3RfY2hlY2sKK2k5MTVfZ2VtX29iamVj
dF9zZXRfdG9fd2NfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wg
d3JpdGUpOworaW50IF9fbXVzdF9jaGVjaworaTkxNV9nZW1fb2JqZWN0X3NldF90b19ndHRfZG9t
YWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wgd3JpdGUpOworaW50IF9f
bXVzdF9jaGVjaworaTkxNV9nZW1fb2JqZWN0X3NldF90b19jcHVfZG9tYWluKHN0cnVjdCBkcm1f
aTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wgd3JpdGUpOworc3RydWN0IGk5MTVfdm1hICogX19t
dXN0X2NoZWNrCitpOTE1X2dlbV9vYmplY3RfcGluX3RvX2Rpc3BsYXlfcGxhbmUoc3RydWN0IGRy
bV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKKwkJCQkgICAgIHUzMiBhbGlnbm1lbnQsCisJCQkJICAg
ICBjb25zdCBzdHJ1Y3QgaTkxNV9nZ3R0X3ZpZXcgKnZpZXcsCisJCQkJICAgICB1bnNpZ25lZCBp
bnQgZmxhZ3MpOwordm9pZCBpOTE1X2dlbV9vYmplY3RfdW5waW5fZnJvbV9kaXNwbGF5X3BsYW5l
KHN0cnVjdCBpOTE1X3ZtYSAqdm1hKTsKKwogc3RhdGljIGlubGluZSBib29sIGNwdV93cml0ZV9u
ZWVkc19jbGZsdXNoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiB7CiAJaWYgKG9i
ai0+Y2FjaGVfZGlydHkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvY21k
X3BhcnNlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2NtZF9wYXJzZXIuYwppbmRleCBm
ZTY2Mjg1ZjAyMzYuLjFlZTg4MTgyNWUzOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Z0L2NtZF9wYXJzZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvY21kX3Bh
cnNlci5jCkBAIC0xNzYwLDcgKzE3NjAsNyBAQCBzdGF0aWMgaW50IHBlcmZvcm1fYmJfc2hhZG93
KHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0ZSAqcykKIAkJZ290byBlcnJfZnJlZV9iYjsKIAl9CiAK
LQlyZXQgPSBpOTE1X2dlbV9vYmpfcHJlcGFyZV9zaG1lbV93cml0ZShiYi0+b2JqLCAmYmItPmNs
Zmx1c2gpOworCXJldCA9IGk5MTVfZ2VtX29iamVjdF9wcmVwYXJlX3dyaXRlKGJiLT5vYmosICZi
Yi0+Y2xmbHVzaCk7CiAJaWYgKHJldCkKIAkJZ290byBlcnJfZnJlZV9vYmo7CiAKQEAgLTE4MDks
NyArMTgwOSw3IEBAIHN0YXRpYyBpbnQgcGVyZm9ybV9iYl9zaGFkb3coc3RydWN0IHBhcnNlcl9l
eGVjX3N0YXRlICpzKQogZXJyX3VubWFwOgogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9tYXAoYmIt
Pm9iaik7CiBlcnJfZmluaXNoX3NobWVtX2FjY2VzczoKLQlpOTE1X2dlbV9vYmpfZmluaXNoX3No
bWVtX2FjY2VzcyhiYi0+b2JqKTsKKwlpOTE1X2dlbV9vYmplY3RfZmluaXNoX2FjY2VzcyhiYi0+
b2JqKTsKIGVycl9mcmVlX29iajoKIAlpOTE1X2dlbV9vYmplY3RfcHV0KGJiLT5vYmopOwogZXJy
X2ZyZWVfYmI6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVy
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMKaW5kZXggZDk3ZDkzNTVi
ZjE1Li5mMDUwNzY1OGMxNTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9z
Y2hlZHVsZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMKQEAg
LTQ2NSw3ICs0NjUsNyBAQCBzdGF0aWMgaW50IHByZXBhcmVfc2hhZG93X2JhdGNoX2J1ZmZlcihz
dHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAJCQkJCQliYi0+b2JqLT5iYXNl
LnNpemUpOwogCQkJCWJiLT5jbGZsdXNoICY9IH5DTEZMVVNIX0FGVEVSOwogCQkJfQotCQkJaTkx
NV9nZW1fb2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3MoYmItPm9iaik7CisJCQlpOTE1X2dlbV9vYmpl
Y3RfZmluaXNoX2FjY2VzcyhiYi0+b2JqKTsKIAkJCWJiLT5hY2Nlc3NpbmcgPSBmYWxzZTsKIAog
CQl9IGVsc2UgewpAQCAtNDkzLDcgKzQ5Myw3IEBAIHN0YXRpYyBpbnQgcHJlcGFyZV9zaGFkb3df
YmF0Y2hfYnVmZmVyKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAkJCWlm
IChyZXQpCiAJCQkJZ290byBlcnI7CiAKLQkJCWk5MTVfZ2VtX29ial9maW5pc2hfc2htZW1fYWNj
ZXNzKGJiLT5vYmopOworCQkJaTkxNV9nZW1fb2JqZWN0X2ZpbmlzaF9hY2Nlc3MoYmItPm9iaik7
CiAJCQliYi0+YWNjZXNzaW5nID0gZmFsc2U7CiAKIAkJCXJldCA9IGk5MTVfdm1hX21vdmVfdG9f
YWN0aXZlKGJiLT52bWEsCkBAIC01NzEsNyArNTcxLDcgQEAgc3RhdGljIHZvaWQgcmVsZWFzZV9z
aGFkb3dfYmF0Y2hfYnVmZmVyKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkK
IAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoYmIsIHBvcywgJndvcmtsb2FkLT5zaGFkb3dfYmIs
IGxpc3QpIHsKIAkJaWYgKGJiLT5vYmopIHsKIAkJCWlmIChiYi0+YWNjZXNzaW5nKQotCQkJCWk5
MTVfZ2VtX29ial9maW5pc2hfc2htZW1fYWNjZXNzKGJiLT5vYmopOworCQkJCWk5MTVfZ2VtX29i
amVjdF9maW5pc2hfYWNjZXNzKGJiLT5vYmopOwogCiAJCQlpZiAoYmItPnZhICYmICFJU19FUlIo
YmItPnZhKSkKIAkJCQlpOTE1X2dlbV9vYmplY3RfdW5waW5fbWFwKGJiLT5vYmopOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2NtZF9wYXJzZXIuYwppbmRleCBlOWZhZGNiNGQ1OTIuLmM4OTNiZDRl
YjJjOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9jbWRfcGFyc2VyLmMKQEAgLTEwNTgsMTEg
KzEwNTgsMTEgQEAgc3RhdGljIHUzMiAqY29weV9iYXRjaChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqZHN0X29iaiwKIAl2b2lkICpkc3QsICpzcmM7CiAJaW50IHJldDsKIAotCXJldCA9IGk5
MTVfZ2VtX29ial9wcmVwYXJlX3NobWVtX3JlYWQoc3JjX29iaiwgJnNyY19uZWVkc19jbGZsdXNo
KTsKKwlyZXQgPSBpOTE1X2dlbV9vYmplY3RfcHJlcGFyZV9yZWFkKHNyY19vYmosICZzcmNfbmVl
ZHNfY2xmbHVzaCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIEVSUl9QVFIocmV0KTsKIAotCXJldCA9
IGk5MTVfZ2VtX29ial9wcmVwYXJlX3NobWVtX3dyaXRlKGRzdF9vYmosICZkc3RfbmVlZHNfY2xm
bHVzaCk7CisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfd3JpdGUoZHN0X29iaiwgJmRz
dF9uZWVkc19jbGZsdXNoKTsKIAlpZiAocmV0KSB7CiAJCWRzdCA9IEVSUl9QVFIocmV0KTsKIAkJ
Z290byB1bnBpbl9zcmM7CkBAIC0xMTIwLDkgKzExMjAsOSBAQCBzdGF0aWMgdTMyICpjb3B5X2Jh
dGNoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpkc3Rfb2JqLAogCSpuZWVkc19jbGZsdXNo
X2FmdGVyID0gZHN0X25lZWRzX2NsZmx1c2ggJiBDTEZMVVNIX0FGVEVSOwogCiB1bnBpbl9kc3Q6
Ci0JaTkxNV9nZW1fb2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3MoZHN0X29iaik7CisJaTkxNV9nZW1f
b2JqZWN0X2ZpbmlzaF9hY2Nlc3MoZHN0X29iaik7CiB1bnBpbl9zcmM6Ci0JaTkxNV9nZW1fb2Jq
X2ZpbmlzaF9zaG1lbV9hY2Nlc3Moc3JjX29iaik7CisJaTkxNV9nZW1fb2JqZWN0X2ZpbmlzaF9h
Y2Nlc3Moc3JjX29iaik7CiAJcmV0dXJuIGRzdDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgK
aW5kZXggZThmYTZmNGIxMDBjLi41Njk0NDNkZDIxN2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYu
aApAQCAtMjc5OCwyMCArMjc5OCw2IEBAIHN0YXRpYyBpbmxpbmUgaW50IF9fc2dfcGFnZV9jb3Vu
dChjb25zdCBzdHJ1Y3Qgc2NhdHRlcmxpc3QgKnNnKQogCXJldHVybiBzZy0+bGVuZ3RoID4+IFBB
R0VfU0hJRlQ7CiB9CiAKLWludCBpOTE1X2dlbV9vYmpfcHJlcGFyZV9zaG1lbV9yZWFkKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCi0JCQkJICAgIHVuc2lnbmVkIGludCAqbmVlZHNf
Y2xmbHVzaCk7Ci1pbnQgaTkxNV9nZW1fb2JqX3ByZXBhcmVfc2htZW1fd3JpdGUoc3RydWN0IGRy
bV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKLQkJCQkgICAgIHVuc2lnbmVkIGludCAqbmVlZHNfY2xm
bHVzaCk7Ci0jZGVmaW5lIENMRkxVU0hfQkVGT1JFCUJJVCgwKQotI2RlZmluZSBDTEZMVVNIX0FG
VEVSCUJJVCgxKQotI2RlZmluZSBDTEZMVVNIX0ZMQUdTCShDTEZMVVNIX0JFRk9SRSB8IENMRkxV
U0hfQUZURVIpCi0KLXN0YXRpYyBpbmxpbmUgdm9pZAotaTkxNV9nZW1fb2JqX2ZpbmlzaF9zaG1l
bV9hY2Nlc3Moc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKLXsKLQlpOTE1X2dlbV9v
YmplY3RfdW5waW5fcGFnZXMob2JqKTsKLX0KLQogc3RhdGljIGlubGluZSBpbnQgX19tdXN0X2No
ZWNrCiBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
KQogewpAQCAtMjg3NCwxOCArMjg2MCw2IEBAIGludCBpOTE1X2dlbV9vYmplY3Rfd2FpdF9wcmlv
cml0eShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCQkJCSAgY29uc3Qgc3RydWN0
IGk5MTVfc2NoZWRfYXR0ciAqYXR0cik7CiAjZGVmaW5lIEk5MTVfUFJJT1JJVFlfRElTUExBWSBJ
OTE1X1VTRVJfUFJJT1JJVFkoSTkxNV9QUklPUklUWV9NQVgpCiAKLWludCBfX211c3RfY2hlY2sK
LWk5MTVfZ2VtX29iamVjdF9zZXRfdG9fd2NfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmosIGJvb2wgd3JpdGUpOwotaW50IF9fbXVzdF9jaGVjawotaTkxNV9nZW1fb2JqZWN0
X3NldF90b19ndHRfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wg
d3JpdGUpOwotaW50IF9fbXVzdF9jaGVjawotaTkxNV9nZW1fb2JqZWN0X3NldF90b19jcHVfZG9t
YWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wgd3JpdGUpOwotc3RydWN0
IGk5MTVfdm1hICogX19tdXN0X2NoZWNrCi1pOTE1X2dlbV9vYmplY3RfcGluX3RvX2Rpc3BsYXlf
cGxhbmUoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKLQkJCQkgICAgIHUzMiBhbGln
bm1lbnQsCi0JCQkJICAgICBjb25zdCBzdHJ1Y3QgaTkxNV9nZ3R0X3ZpZXcgKnZpZXcsCi0JCQkJ
ICAgICB1bnNpZ25lZCBpbnQgZmxhZ3MpOwotdm9pZCBpOTE1X2dlbV9vYmplY3RfdW5waW5fZnJv
bV9kaXNwbGF5X3BsYW5lKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKTsKIGludCBpOTE1X2dlbV9vcGVu
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpOwog
dm9pZCBpOTE1X2dlbV9yZWxlYXNlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBkcm1f
ZmlsZSAqZmlsZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2Vt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4IDc4ZDk5ODQxY2Y3Ni4u
ZmM5Yzk3NzY5OTlhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAgLTQzOCwxMjMgKzQzOCw2
IEBAIHZvaWQgaTkxNV9nZW1fZmx1c2hfZ2d0dF93cml0ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQogCX0KIH0KIAotLyoKLSAqIFBpbnMgdGhlIHNwZWNpZmllZCBvYmplY3Qn
cyBwYWdlcyBhbmQgc3luY2hyb25pemVzIHRoZSBvYmplY3Qgd2l0aAotICogR1BVIGFjY2Vzc2Vz
LiBTZXRzIG5lZWRzX2NsZmx1c2ggdG8gbm9uLXplcm8gaWYgdGhlIGNhbGxlciBzaG91bGQKLSAq
IGZsdXNoIHRoZSBvYmplY3QgZnJvbSB0aGUgQ1BVIGNhY2hlLgotICovCi1pbnQgaTkxNV9nZW1f
b2JqX3ByZXBhcmVfc2htZW1fcmVhZChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAot
CQkJCSAgICB1bnNpZ25lZCBpbnQgKm5lZWRzX2NsZmx1c2gpCi17Ci0JaW50IHJldDsKLQotCWxv
Y2tkZXBfYXNzZXJ0X2hlbGQoJm9iai0+YmFzZS5kZXYtPnN0cnVjdF9tdXRleCk7Ci0KLQkqbmVl
ZHNfY2xmbHVzaCA9IDA7Ci0JaWYgKCFpOTE1X2dlbV9vYmplY3RfaGFzX3N0cnVjdF9wYWdlKG9i
aikpCi0JCXJldHVybiAtRU5PREVWOwotCi0JcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3dhaXQob2Jq
LAotCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKLQkJCQkgICBJOTE1X1dBSVRfTE9D
S0VELAotCQkJCSAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKLQlpZiAocmV0KQotCQlyZXR1cm4g
cmV0OwotCi0JcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmopOwotCWlmIChyZXQp
Ci0JCXJldHVybiByZXQ7Ci0KLQlpZiAob2JqLT5jYWNoZV9jb2hlcmVudCAmIEk5MTVfQk9fQ0FD
SEVfQ09IRVJFTlRfRk9SX1JFQUQgfHwKLQkgICAgIXN0YXRpY19jcHVfaGFzKFg4Nl9GRUFUVVJF
X0NMRkxVU0gpKSB7Ci0JCXJldCA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2RvbWFpbihv
YmosIGZhbHNlKTsKLQkJaWYgKHJldCkKLQkJCWdvdG8gZXJyX3VucGluOwotCQllbHNlCi0JCQln
b3RvIG91dDsKLQl9Ci0KLQlpOTE1X2dlbV9vYmplY3RfZmx1c2hfd3JpdGVfZG9tYWluKG9iaiwg
fkk5MTVfR0VNX0RPTUFJTl9DUFUpOwotCi0JLyogSWYgd2UncmUgbm90IGluIHRoZSBjcHUgcmVh
ZCBkb21haW4sIHNldCBvdXJzZWxmIGludG8gdGhlIGd0dAotCSAqIHJlYWQgZG9tYWluIGFuZCBt
YW51YWxseSBmbHVzaCBjYWNoZWxpbmVzIChpZiByZXF1aXJlZCkuIFRoaXMKLQkgKiBvcHRpbWl6
ZXMgZm9yIHRoZSBjYXNlIHdoZW4gdGhlIGdwdSB3aWxsIGRpcnR5IHRoZSBkYXRhCi0JICogYW55
d2F5IGFnYWluIGJlZm9yZSB0aGUgbmV4dCBwcmVhZCBoYXBwZW5zLgotCSAqLwotCWlmICghb2Jq
LT5jYWNoZV9kaXJ0eSAmJgotCSAgICAhKG9iai0+cmVhZF9kb21haW5zICYgSTkxNV9HRU1fRE9N
QUlOX0NQVSkpCi0JCSpuZWVkc19jbGZsdXNoID0gQ0xGTFVTSF9CRUZPUkU7Ci0KLW91dDoKLQkv
KiByZXR1cm4gd2l0aCB0aGUgcGFnZXMgcGlubmVkICovCi0JcmV0dXJuIDA7Ci0KLWVycl91bnBp
bjoKLQlpOTE1X2dlbV9vYmplY3RfdW5waW5fcGFnZXMob2JqKTsKLQlyZXR1cm4gcmV0OwotfQot
Ci1pbnQgaTkxNV9nZW1fb2JqX3ByZXBhcmVfc2htZW1fd3JpdGUoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaiwKLQkJCQkgICAgIHVuc2lnbmVkIGludCAqbmVlZHNfY2xmbHVzaCkKLXsK
LQlpbnQgcmV0OwotCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmb2JqLT5iYXNlLmRldi0+c3RydWN0
X211dGV4KTsKLQotCSpuZWVkc19jbGZsdXNoID0gMDsKLQlpZiAoIWk5MTVfZ2VtX29iamVjdF9o
YXNfc3RydWN0X3BhZ2Uob2JqKSkKLQkJcmV0dXJuIC1FTk9ERVY7Ci0KLQlyZXQgPSBpOTE1X2dl
bV9vYmplY3Rfd2FpdChvYmosCi0JCQkJICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUgfAotCQkJ
CSAgIEk5MTVfV0FJVF9MT0NLRUQgfAotCQkJCSAgIEk5MTVfV0FJVF9BTEwsCi0JCQkJICAgTUFY
X1NDSEVEVUxFX1RJTUVPVVQpOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQgPSBp
OTE1X2dlbV9vYmplY3RfcGluX3BhZ2VzKG9iaik7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsK
LQotCWlmIChvYmotPmNhY2hlX2NvaGVyZW50ICYgSTkxNV9CT19DQUNIRV9DT0hFUkVOVF9GT1Jf
V1JJVEUgfHwKLQkgICAgIXN0YXRpY19jcHVfaGFzKFg4Nl9GRUFUVVJFX0NMRkxVU0gpKSB7Ci0J
CXJldCA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2RvbWFpbihvYmosIHRydWUpOwotCQlp
ZiAocmV0KQotCQkJZ290byBlcnJfdW5waW47Ci0JCWVsc2UKLQkJCWdvdG8gb3V0OwotCX0KLQot
CWk5MTVfZ2VtX29iamVjdF9mbHVzaF93cml0ZV9kb21haW4ob2JqLCB+STkxNV9HRU1fRE9NQUlO
X0NQVSk7Ci0KLQkvKiBJZiB3ZSdyZSBub3QgaW4gdGhlIGNwdSB3cml0ZSBkb21haW4sIHNldCBv
dXJzZWxmIGludG8gdGhlCi0JICogZ3R0IHdyaXRlIGRvbWFpbiBhbmQgbWFudWFsbHkgZmx1c2gg
Y2FjaGVsaW5lcyAoYXMgcmVxdWlyZWQpLgotCSAqIFRoaXMgb3B0aW1pemVzIGZvciB0aGUgY2Fz
ZSB3aGVuIHRoZSBncHUgd2lsbCB1c2UgdGhlIGRhdGEKLQkgKiByaWdodCBhd2F5IGFuZCB3ZSB0
aGVyZWZvcmUgaGF2ZSB0byBjbGZsdXNoIGFueXdheS4KLQkgKi8KLQlpZiAoIW9iai0+Y2FjaGVf
ZGlydHkpIHsKLQkJKm5lZWRzX2NsZmx1c2ggfD0gQ0xGTFVTSF9BRlRFUjsKLQotCQkvKgotCQkg
KiBTYW1lIHRyaWNrIGFwcGxpZXMgdG8gaW52YWxpZGF0ZSBwYXJ0aWFsbHkgd3JpdHRlbgotCQkg
KiBjYWNoZWxpbmVzIHJlYWQgYmVmb3JlIHdyaXRpbmcuCi0JCSAqLwotCQlpZiAoIShvYmotPnJl
YWRfZG9tYWlucyAmIEk5MTVfR0VNX0RPTUFJTl9DUFUpKQotCQkJKm5lZWRzX2NsZmx1c2ggfD0g
Q0xGTFVTSF9CRUZPUkU7Ci0JfQotCi1vdXQ6Ci0JaW50ZWxfZmJfb2JqX2ludmFsaWRhdGUob2Jq
LCBPUklHSU5fQ1BVKTsKLQlvYmotPm1tLmRpcnR5ID0gdHJ1ZTsKLQkvKiByZXR1cm4gd2l0aCB0
aGUgcGFnZXMgcGlubmVkICovCi0JcmV0dXJuIDA7Ci0KLWVycl91bnBpbjoKLQlpOTE1X2dlbV9v
YmplY3RfdW5waW5fcGFnZXMob2JqKTsKLQlyZXR1cm4gcmV0OwotfQotCiBzdGF0aWMgaW50CiBz
aG1lbV9wcmVhZChzdHJ1Y3QgcGFnZSAqcGFnZSwgaW50IG9mZnNldCwgaW50IGxlbiwgY2hhciBf
X3VzZXIgKnVzZXJfZGF0YSwKIAkgICAgYm9vbCBuZWVkc19jbGZsdXNoKQpAQCAtNTg4LDcgKzQ3
MSw3IEBAIGk5MTVfZ2VtX3NobWVtX3ByZWFkKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpv
YmosCiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCXJldCA9IGk5MTVfZ2VtX29ial9wcmVw
YXJlX3NobWVtX3JlYWQob2JqLCAmbmVlZHNfY2xmbHVzaCk7CisJcmV0ID0gaTkxNV9nZW1fb2Jq
ZWN0X3ByZXBhcmVfcmVhZChvYmosICZuZWVkc19jbGZsdXNoKTsKIAltdXRleF91bmxvY2soJm9i
ai0+YmFzZS5kZXYtPnN0cnVjdF9tdXRleCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKQEAg
LTYxMCw3ICs0OTMsNyBAQCBpOTE1X2dlbV9zaG1lbV9wcmVhZChzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqLAogCQlvZmZzZXQgPSAwOwogCX0KIAotCWk5MTVfZ2VtX29ial9maW5pc2hf
c2htZW1fYWNjZXNzKG9iaik7CisJaTkxNV9nZW1fb2JqZWN0X2ZpbmlzaF9hY2Nlc3Mob2JqKTsK
IAlyZXR1cm4gcmV0OwogfQogCkBAIC05ODUsNyArODY4LDcgQEAgaTkxNV9nZW1fc2htZW1fcHdy
aXRlKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJaWYgKHJldCkKIAkJcmV0dXJu
IHJldDsKIAotCXJldCA9IGk5MTVfZ2VtX29ial9wcmVwYXJlX3NobWVtX3dyaXRlKG9iaiwgJm5l
ZWRzX2NsZmx1c2gpOworCXJldCA9IGk5MTVfZ2VtX29iamVjdF9wcmVwYXJlX3dyaXRlKG9iaiwg
Jm5lZWRzX2NsZmx1c2gpOwogCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKQEAgLTEwMTcsNyArOTAwLDcgQEAgaTkxNV9nZW1f
c2htZW1fcHdyaXRlKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJfQogCiAJaW50
ZWxfZmJfb2JqX2ZsdXNoKG9iaiwgT1JJR0lOX0NQVSk7Ci0JaTkxNV9nZW1fb2JqX2ZpbmlzaF9z
aG1lbV9hY2Nlc3Mob2JqKTsKKwlpOTE1X2dlbV9vYmplY3RfZmluaXNoX2FjY2VzcyhvYmopOwog
CXJldHVybiByZXQ7CiB9CiAKQEAgLTExMDYsMTUwICs5ODksNiBAQCBpOTE1X2dlbV9wd3JpdGVf
aW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAlyZXR1cm4gcmV0Owog
fQogCi1zdGF0aWMgdm9pZCBpOTE1X2dlbV9vYmplY3RfYnVtcF9pbmFjdGl2ZV9nZ3R0KHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUgPSB0b19pOTE1KG9iai0+YmFzZS5kZXYpOwotCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3Q7
Ci0Jc3RydWN0IGk5MTVfdm1hICp2bWE7Ci0KLQlHRU1fQlVHX09OKCFpOTE1X2dlbV9vYmplY3Rf
aGFzX3Bpbm5lZF9wYWdlcyhvYmopKTsKLQotCW11dGV4X2xvY2soJmk5MTUtPmdndHQudm0ubXV0
ZXgpOwotCWZvcl9lYWNoX2dndHRfdm1hKHZtYSwgb2JqKSB7Ci0JCWlmICghZHJtX21tX25vZGVf
YWxsb2NhdGVkKCZ2bWEtPm5vZGUpKQotCQkJY29udGludWU7Ci0KLQkJbGlzdF9tb3ZlX3RhaWwo
JnZtYS0+dm1fbGluaywgJnZtYS0+dm0tPmJvdW5kX2xpc3QpOwotCX0KLQltdXRleF91bmxvY2so
Jmk5MTUtPmdndHQudm0ubXV0ZXgpOwotCi0Jc3Bpbl9sb2NrKCZpOTE1LT5tbS5vYmpfbG9jayk7
Ci0JbGlzdCA9IG9iai0+YmluZF9jb3VudCA/ICZpOTE1LT5tbS5ib3VuZF9saXN0IDogJmk5MTUt
Pm1tLnVuYm91bmRfbGlzdDsKLQlsaXN0X21vdmVfdGFpbCgmb2JqLT5tbS5saW5rLCBsaXN0KTsK
LQlzcGluX3VubG9jaygmaTkxNS0+bW0ub2JqX2xvY2spOwotfQotCi1zdGF0aWMgaW5saW5lIGVu
dW0gZmJfb3Bfb3JpZ2luCi1mYl93cml0ZV9vcmlnaW4oc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaiwgdW5zaWduZWQgaW50IGRvbWFpbikKLXsKLQlyZXR1cm4gKGRvbWFpbiA9PSBJOTE1
X0dFTV9ET01BSU5fR1RUID8KLQkJb2JqLT5mcm9udGJ1ZmZlcl9nZ3R0X29yaWdpbiA6IE9SSUdJ
Tl9DUFUpOwotfQotCi0vKioKLSAqIENhbGxlZCB3aGVuIHVzZXIgc3BhY2UgcHJlcGFyZXMgdG8g
dXNlIGFuIG9iamVjdCB3aXRoIHRoZSBDUFUsIGVpdGhlcgotICogdGhyb3VnaCB0aGUgbW1hcCBp
b2N0bCdzIG1hcHBpbmcgb3IgYSBHVFQgbWFwcGluZy4KLSAqIEBkZXY6IGRybSBkZXZpY2UKLSAq
IEBkYXRhOiBpb2N0bCBkYXRhIGJsb2IKLSAqIEBmaWxlOiBkcm0gZmlsZQotICovCi1pbnQKLWk5
MTVfZ2VtX3NldF9kb21haW5faW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0
YSwKLQkJCSAgc3RydWN0IGRybV9maWxlICpmaWxlKQotewotCXN0cnVjdCBkcm1faTkxNV9nZW1f
c2V0X2RvbWFpbiAqYXJncyA9IGRhdGE7Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
ajsKLQl1MzIgcmVhZF9kb21haW5zID0gYXJncy0+cmVhZF9kb21haW5zOwotCXUzMiB3cml0ZV9k
b21haW4gPSBhcmdzLT53cml0ZV9kb21haW47Ci0JaW50IGVycjsKLQotCS8qIE9ubHkgaGFuZGxl
IHNldHRpbmcgZG9tYWlucyB0byB0eXBlcyB1c2VkIGJ5IHRoZSBDUFUuICovCi0JaWYgKCh3cml0
ZV9kb21haW4gfCByZWFkX2RvbWFpbnMpICYgSTkxNV9HRU1fR1BVX0RPTUFJTlMpCi0JCXJldHVy
biAtRUlOVkFMOwotCi0JLyoKLQkgKiBIYXZpbmcgc29tZXRoaW5nIGluIHRoZSB3cml0ZSBkb21h
aW4gaW1wbGllcyBpdCdzIGluIHRoZSByZWFkCi0JICogZG9tYWluLCBhbmQgb25seSB0aGF0IHJl
YWQgZG9tYWluLiAgRW5mb3JjZSB0aGF0IGluIHRoZSByZXF1ZXN0LgotCSAqLwotCWlmICh3cml0
ZV9kb21haW4gJiYgcmVhZF9kb21haW5zICE9IHdyaXRlX2RvbWFpbikKLQkJcmV0dXJuIC1FSU5W
QUw7Ci0KLQlpZiAoIXJlYWRfZG9tYWlucykKLQkJcmV0dXJuIDA7Ci0KLQlvYmogPSBpOTE1X2dl
bV9vYmplY3RfbG9va3VwKGZpbGUsIGFyZ3MtPmhhbmRsZSk7Ci0JaWYgKCFvYmopCi0JCXJldHVy
biAtRU5PRU5UOwotCi0JLyoKLQkgKiBBbHJlYWR5IGluIHRoZSBkZXNpcmVkIHdyaXRlIGRvbWFp
bj8gTm90aGluZyBmb3IgdXMgdG8gZG8hCi0JICoKLQkgKiBXZSBhcHBseSBhIGxpdHRsZSBiaXQg
b2YgY3VubmluZyBoZXJlIHRvIGNhdGNoIGEgYnJvYWRlciBzZXQgb2YKLQkgKiBuby1vcHMuIElm
IG9iai0+d3JpdGVfZG9tYWluIGlzIHNldCwgd2UgbXVzdCBiZSBpbiB0aGUgc2FtZQotCSAqIG9i
ai0+cmVhZF9kb21haW5zLCBhbmQgb25seSB0aGF0IGRvbWFpbi4gVGhlcmVmb3JlLCBpZiB0aGF0
Ci0JICogb2JqLT53cml0ZV9kb21haW4gbWF0Y2hlcyB0aGUgcmVxdWVzdCByZWFkX2RvbWFpbnMs
IHdlIGFyZQotCSAqIGFscmVhZHkgaW4gdGhlIHNhbWUgcmVhZC93cml0ZSBkb21haW4gYW5kIGNh
biBza2lwIHRoZSBvcGVyYXRpb24sCi0JICogd2l0aG91dCBoYXZpbmcgdG8gZnVydGhlciBjaGVj
ayB0aGUgcmVxdWVzdGVkIHdyaXRlX2RvbWFpbi4KLQkgKi8KLQlpZiAoUkVBRF9PTkNFKG9iai0+
d3JpdGVfZG9tYWluKSA9PSByZWFkX2RvbWFpbnMpIHsKLQkJZXJyID0gMDsKLQkJZ290byBvdXQ7
Ci0JfQotCi0JLyoKLQkgKiBUcnkgdG8gZmx1c2ggdGhlIG9iamVjdCBvZmYgdGhlIEdQVSB3aXRo
b3V0IGhvbGRpbmcgdGhlIGxvY2suCi0JICogV2Ugd2lsbCByZXBlYXQgdGhlIGZsdXNoIGhvbGRp
bmcgdGhlIGxvY2sgaW4gdGhlIG5vcm1hbCBtYW5uZXIKLQkgKiB0byBjYXRjaCBjYXNlcyB3aGVy
ZSB3ZSBhcmUgZ2F6dW1wZWQuCi0JICovCi0JZXJyID0gaTkxNV9nZW1fb2JqZWN0X3dhaXQob2Jq
LAotCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKLQkJCQkgICBJOTE1X1dBSVRfUFJJ
T1JJVFkgfAotCQkJCSAgICh3cml0ZV9kb21haW4gPyBJOTE1X1dBSVRfQUxMIDogMCksCi0JCQkJ
ICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOwotCWlmIChlcnIpCi0JCWdvdG8gb3V0OwotCi0JLyoK
LQkgKiBQcm94eSBvYmplY3RzIGRvIG5vdCBjb250cm9sIGFjY2VzcyB0byB0aGUgYmFja2luZyBz
dG9yYWdlLCBlcmdvCi0JICogdGhleSBjYW5ub3QgYmUgdXNlZCBhcyBhIG1lYW5zIHRvIG1hbmlw
dWxhdGUgdGhlIGNhY2hlIGRvbWFpbgotCSAqIHRyYWNraW5nIGZvciB0aGF0IGJhY2tpbmcgc3Rv
cmFnZS4gVGhlIHByb3h5IG9iamVjdCBpcyBhbHdheXMKLQkgKiBjb25zaWRlcmVkIHRvIGJlIG91
dHNpZGUgb2YgYW55IGNhY2hlIGRvbWFpbi4KLQkgKi8KLQlpZiAoaTkxNV9nZW1fb2JqZWN0X2lz
X3Byb3h5KG9iaikpIHsKLQkJZXJyID0gLUVOWElPOwotCQlnb3RvIG91dDsKLQl9Ci0KLQkvKgot
CSAqIEZsdXNoIGFuZCBhY3F1aXJlIG9iai0+cGFnZXMgc28gdGhhdCB3ZSBhcmUgY29oZXJlbnQg
dGhyb3VnaAotCSAqIGRpcmVjdCBhY2Nlc3MgaW4gbWVtb3J5IHdpdGggcHJldmlvdXMgY2FjaGVk
IHdyaXRlcyB0aHJvdWdoCi0JICogc2htZW1mcyBhbmQgdGhhdCBvdXIgY2FjaGUgZG9tYWluIHRy
YWNraW5nIHJlbWFpbnMgdmFsaWQuCi0JICogRm9yIGV4YW1wbGUsIGlmIHRoZSBvYmotPmZpbHAg
d2FzIG1vdmVkIHRvIHN3YXAgd2l0aG91dCB1cwotCSAqIGJlaW5nIG5vdGlmaWVkIGFuZCByZWxl
YXNpbmcgdGhlIHBhZ2VzLCB3ZSB3b3VsZCBtaXN0YWtlbmx5Ci0JICogY29udGludWUgdG8gYXNz
dW1lIHRoYXQgdGhlIG9iaiByZW1haW5lZCBvdXQgb2YgdGhlIENQVSBjYWNoZWQKLQkgKiBkb21h
aW4uCi0JICovCi0JZXJyID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9wYWdlcyhvYmopOwotCWlmIChl
cnIpCi0JCWdvdG8gb3V0OwotCi0JZXJyID0gaTkxNV9tdXRleF9sb2NrX2ludGVycnVwdGlibGUo
ZGV2KTsKLQlpZiAoZXJyKQotCQlnb3RvIG91dF91bnBpbjsKLQotCWlmIChyZWFkX2RvbWFpbnMg
JiBJOTE1X0dFTV9ET01BSU5fV0MpCi0JCWVyciA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fd2Nf
ZG9tYWluKG9iaiwgd3JpdGVfZG9tYWluKTsKLQllbHNlIGlmIChyZWFkX2RvbWFpbnMgJiBJOTE1
X0dFTV9ET01BSU5fR1RUKQotCQllcnIgPSBpOTE1X2dlbV9vYmplY3Rfc2V0X3RvX2d0dF9kb21h
aW4ob2JqLCB3cml0ZV9kb21haW4pOwotCWVsc2UKLQkJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3Nl
dF90b19jcHVfZG9tYWluKG9iaiwgd3JpdGVfZG9tYWluKTsKLQotCS8qIEFuZCBidW1wIHRoZSBM
UlUgZm9yIHRoaXMgYWNjZXNzICovCi0JaTkxNV9nZW1fb2JqZWN0X2J1bXBfaW5hY3RpdmVfZ2d0
dChvYmopOwotCi0JbXV0ZXhfdW5sb2NrKCZkZXYtPnN0cnVjdF9tdXRleCk7Ci0KLQlpZiAod3Jp
dGVfZG9tYWluICE9IDApCi0JCWludGVsX2ZiX29ial9pbnZhbGlkYXRlKG9iaiwKLQkJCQkJZmJf
d3JpdGVfb3JpZ2luKG9iaiwgd3JpdGVfZG9tYWluKSk7Ci0KLW91dF91bnBpbjoKLQlpOTE1X2dl
bV9vYmplY3RfdW5waW5fcGFnZXMob2JqKTsKLW91dDoKLQlpOTE1X2dlbV9vYmplY3RfcHV0KG9i
aik7Ci0JcmV0dXJuIGVycjsKLX0KLQogLyoqCiAgKiBDYWxsZWQgd2hlbiB1c2VyIHNwYWNlIGhh
cyBkb25lIHdyaXRlcyB0byB0aGlzIGJ1ZmZlcgogICogQGRldjogZHJtIGRldmljZQpAQCAtMTUx
OCw1MTQgKzEyNTcsNiBAQCBpbnQgaTkxNV9nZW1fd2FpdF9mb3JfaWRsZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgX19pOTE1X2dl
bV9vYmplY3RfZmx1c2hfZm9yX2Rpc3BsYXkoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aikKLXsKLQkvKgotCSAqIFdlIG1hbnVhbGx5IGZsdXNoIHRoZSBDUFUgZG9tYWluIHNvIHRoYXQg
d2UgY2FuIG92ZXJyaWRlIGFuZAotCSAqIGZvcmNlIHRoZSBmbHVzaCBmb3IgdGhlIGRpc3BsYXks
IGFuZCBwZXJmb3JtIGl0IGFzeW5jcmhvbm91c2x5LgotCSAqLwotCWk5MTVfZ2VtX29iamVjdF9m
bHVzaF93cml0ZV9kb21haW4ob2JqLCB+STkxNV9HRU1fRE9NQUlOX0NQVSk7Ci0JaWYgKG9iai0+
Y2FjaGVfZGlydHkpCi0JCWk5MTVfZ2VtX2NsZmx1c2hfb2JqZWN0KG9iaiwgSTkxNV9DTEZMVVNI
X0ZPUkNFKTsKLQlvYmotPndyaXRlX2RvbWFpbiA9IDA7Ci19Ci0KLXZvaWQgaTkxNV9nZW1fb2Jq
ZWN0X2ZsdXNoX2lmX2Rpc3BsYXkoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKLXsK
LQlpZiAoIVJFQURfT05DRShvYmotPnBpbl9nbG9iYWwpKQotCQlyZXR1cm47Ci0KLQltdXRleF9s
b2NrKCZvYmotPmJhc2UuZGV2LT5zdHJ1Y3RfbXV0ZXgpOwotCV9faTkxNV9nZW1fb2JqZWN0X2Zs
dXNoX2Zvcl9kaXNwbGF5KG9iaik7Ci0JbXV0ZXhfdW5sb2NrKCZvYmotPmJhc2UuZGV2LT5zdHJ1
Y3RfbXV0ZXgpOwotfQotCi0vKioKLSAqIE1vdmVzIGEgc2luZ2xlIG9iamVjdCB0byB0aGUgV0Mg
cmVhZCwgYW5kIHBvc3NpYmx5IHdyaXRlIGRvbWFpbi4KLSAqIEBvYmo6IG9iamVjdCB0byBhY3Qg
b24KLSAqIEB3cml0ZTogYXNrIGZvciB3cml0ZSBhY2Nlc3Mgb3IgcmVhZCBvbmx5Ci0gKgotICog
VGhpcyBmdW5jdGlvbiByZXR1cm5zIHdoZW4gdGhlIG1vdmUgaXMgY29tcGxldGUsIGluY2x1ZGlu
ZyB3YWl0aW5nIG9uCi0gKiBmbHVzaGVzIHRvIG9jY3VyLgotICovCi1pbnQKLWk5MTVfZ2VtX29i
amVjdF9zZXRfdG9fd2NfZG9tYWluKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJv
b2wgd3JpdGUpCi17Ci0JaW50IHJldDsKLQotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJm9iai0+YmFz
ZS5kZXYtPnN0cnVjdF9tdXRleCk7Ci0KLQlyZXQgPSBpOTE1X2dlbV9vYmplY3Rfd2FpdChvYmos
Ci0JCQkJICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUgfAotCQkJCSAgIEk5MTVfV0FJVF9MT0NL
RUQgfAotCQkJCSAgICh3cml0ZSA/IEk5MTVfV0FJVF9BTEwgOiAwKSwKLQkJCQkgICBNQVhfU0NI
RURVTEVfVElNRU9VVCk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCWlmIChvYmotPndy
aXRlX2RvbWFpbiA9PSBJOTE1X0dFTV9ET01BSU5fV0MpCi0JCXJldHVybiAwOwotCi0JLyogRmx1
c2ggYW5kIGFjcXVpcmUgb2JqLT5wYWdlcyBzbyB0aGF0IHdlIGFyZSBjb2hlcmVudCB0aHJvdWdo
Ci0JICogZGlyZWN0IGFjY2VzcyBpbiBtZW1vcnkgd2l0aCBwcmV2aW91cyBjYWNoZWQgd3JpdGVz
IHRocm91Z2gKLQkgKiBzaG1lbWZzIGFuZCB0aGF0IG91ciBjYWNoZSBkb21haW4gdHJhY2tpbmcg
cmVtYWlucyB2YWxpZC4KLQkgKiBGb3IgZXhhbXBsZSwgaWYgdGhlIG9iai0+ZmlscCB3YXMgbW92
ZWQgdG8gc3dhcCB3aXRob3V0IHVzCi0JICogYmVpbmcgbm90aWZpZWQgYW5kIHJlbGVhc2luZyB0
aGUgcGFnZXMsIHdlIHdvdWxkIG1pc3Rha2VubHkKLQkgKiBjb250aW51ZSB0byBhc3N1bWUgdGhh
dCB0aGUgb2JqIHJlbWFpbmVkIG91dCBvZiB0aGUgQ1BVIGNhY2hlZAotCSAqIGRvbWFpbi4KLQkg
Ki8KLQlyZXQgPSBpOTE1X2dlbV9vYmplY3RfcGluX3BhZ2VzKG9iaik7Ci0JaWYgKHJldCkKLQkJ
cmV0dXJuIHJldDsKLQotCWk5MTVfZ2VtX29iamVjdF9mbHVzaF93cml0ZV9kb21haW4ob2JqLCB+
STkxNV9HRU1fRE9NQUlOX1dDKTsKLQotCS8qIFNlcmlhbGlzZSBkaXJlY3QgYWNjZXNzIHRvIHRo
aXMgb2JqZWN0IHdpdGggdGhlIGJhcnJpZXJzIGZvcgotCSAqIGNvaGVyZW50IHdyaXRlcyBmcm9t
IHRoZSBHUFUsIGJ5IGVmZmVjdGl2ZWx5IGludmFsaWRhdGluZyB0aGUKLQkgKiBXQyBkb21haW4g
dXBvbiBmaXJzdCBhY2Nlc3MuCi0JICovCi0JaWYgKChvYmotPnJlYWRfZG9tYWlucyAmIEk5MTVf
R0VNX0RPTUFJTl9XQykgPT0gMCkKLQkJbWIoKTsKLQotCS8qIEl0IHNob3VsZCBub3cgYmUgb3V0
IG9mIGFueSBvdGhlciB3cml0ZSBkb21haW5zLCBhbmQgd2UgY2FuIHVwZGF0ZQotCSAqIHRoZSBk
b21haW4gdmFsdWVzIGZvciBvdXIgY2hhbmdlcy4KLQkgKi8KLQlHRU1fQlVHX09OKChvYmotPndy
aXRlX2RvbWFpbiAmIH5JOTE1X0dFTV9ET01BSU5fV0MpICE9IDApOwotCW9iai0+cmVhZF9kb21h
aW5zIHw9IEk5MTVfR0VNX0RPTUFJTl9XQzsKLQlpZiAod3JpdGUpIHsKLQkJb2JqLT5yZWFkX2Rv
bWFpbnMgPSBJOTE1X0dFTV9ET01BSU5fV0M7Ci0JCW9iai0+d3JpdGVfZG9tYWluID0gSTkxNV9H
RU1fRE9NQUlOX1dDOwotCQlvYmotPm1tLmRpcnR5ID0gdHJ1ZTsKLQl9Ci0KLQlpOTE1X2dlbV9v
YmplY3RfdW5waW5fcGFnZXMob2JqKTsKLQlyZXR1cm4gMDsKLX0KLQotLyoqCi0gKiBNb3ZlcyBh
IHNpbmdsZSBvYmplY3QgdG8gdGhlIEdUVCByZWFkLCBhbmQgcG9zc2libHkgd3JpdGUgZG9tYWlu
LgotICogQG9iajogb2JqZWN0IHRvIGFjdCBvbgotICogQHdyaXRlOiBhc2sgZm9yIHdyaXRlIGFj
Y2VzcyBvciByZWFkIG9ubHkKLSAqCi0gKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgd2hlbiB0aGUg
bW92ZSBpcyBjb21wbGV0ZSwgaW5jbHVkaW5nIHdhaXRpbmcgb24KLSAqIGZsdXNoZXMgdG8gb2Nj
dXIuCi0gKi8KLWludAotaTkxNV9nZW1fb2JqZWN0X3NldF90b19ndHRfZG9tYWluKHN0cnVjdCBk
cm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIGJvb2wgd3JpdGUpCi17Ci0JaW50IHJldDsKLQotCWxv
Y2tkZXBfYXNzZXJ0X2hlbGQoJm9iai0+YmFzZS5kZXYtPnN0cnVjdF9tdXRleCk7Ci0KLQlyZXQg
PSBpOTE1X2dlbV9vYmplY3Rfd2FpdChvYmosCi0JCQkJICAgSTkxNV9XQUlUX0lOVEVSUlVQVElC
TEUgfAotCQkJCSAgIEk5MTVfV0FJVF9MT0NLRUQgfAotCQkJCSAgICh3cml0ZSA/IEk5MTVfV0FJ
VF9BTEwgOiAwKSwKLQkJCQkgICBNQVhfU0NIRURVTEVfVElNRU9VVCk7Ci0JaWYgKHJldCkKLQkJ
cmV0dXJuIHJldDsKLQotCWlmIChvYmotPndyaXRlX2RvbWFpbiA9PSBJOTE1X0dFTV9ET01BSU5f
R1RUKQotCQlyZXR1cm4gMDsKLQotCS8qIEZsdXNoIGFuZCBhY3F1aXJlIG9iai0+cGFnZXMgc28g
dGhhdCB3ZSBhcmUgY29oZXJlbnQgdGhyb3VnaAotCSAqIGRpcmVjdCBhY2Nlc3MgaW4gbWVtb3J5
IHdpdGggcHJldmlvdXMgY2FjaGVkIHdyaXRlcyB0aHJvdWdoCi0JICogc2htZW1mcyBhbmQgdGhh
dCBvdXIgY2FjaGUgZG9tYWluIHRyYWNraW5nIHJlbWFpbnMgdmFsaWQuCi0JICogRm9yIGV4YW1w
bGUsIGlmIHRoZSBvYmotPmZpbHAgd2FzIG1vdmVkIHRvIHN3YXAgd2l0aG91dCB1cwotCSAqIGJl
aW5nIG5vdGlmaWVkIGFuZCByZWxlYXNpbmcgdGhlIHBhZ2VzLCB3ZSB3b3VsZCBtaXN0YWtlbmx5
Ci0JICogY29udGludWUgdG8gYXNzdW1lIHRoYXQgdGhlIG9iaiByZW1haW5lZCBvdXQgb2YgdGhl
IENQVSBjYWNoZWQKLQkgKiBkb21haW4uCi0JICovCi0JcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3Bp
bl9wYWdlcyhvYmopOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlpOTE1X2dlbV9vYmpl
Y3RfZmx1c2hfd3JpdGVfZG9tYWluKG9iaiwgfkk5MTVfR0VNX0RPTUFJTl9HVFQpOwotCi0JLyog
U2VyaWFsaXNlIGRpcmVjdCBhY2Nlc3MgdG8gdGhpcyBvYmplY3Qgd2l0aCB0aGUgYmFycmllcnMg
Zm9yCi0JICogY29oZXJlbnQgd3JpdGVzIGZyb20gdGhlIEdQVSwgYnkgZWZmZWN0aXZlbHkgaW52
YWxpZGF0aW5nIHRoZQotCSAqIEdUVCBkb21haW4gdXBvbiBmaXJzdCBhY2Nlc3MuCi0JICovCi0J
aWYgKChvYmotPnJlYWRfZG9tYWlucyAmIEk5MTVfR0VNX0RPTUFJTl9HVFQpID09IDApCi0JCW1i
KCk7Ci0KLQkvKiBJdCBzaG91bGQgbm93IGJlIG91dCBvZiBhbnkgb3RoZXIgd3JpdGUgZG9tYWlu
cywgYW5kIHdlIGNhbiB1cGRhdGUKLQkgKiB0aGUgZG9tYWluIHZhbHVlcyBmb3Igb3VyIGNoYW5n
ZXMuCi0JICovCi0JR0VNX0JVR19PTigob2JqLT53cml0ZV9kb21haW4gJiB+STkxNV9HRU1fRE9N
QUlOX0dUVCkgIT0gMCk7Ci0Jb2JqLT5yZWFkX2RvbWFpbnMgfD0gSTkxNV9HRU1fRE9NQUlOX0dU
VDsKLQlpZiAod3JpdGUpIHsKLQkJb2JqLT5yZWFkX2RvbWFpbnMgPSBJOTE1X0dFTV9ET01BSU5f
R1RUOwotCQlvYmotPndyaXRlX2RvbWFpbiA9IEk5MTVfR0VNX0RPTUFJTl9HVFQ7Ci0JCW9iai0+
bW0uZGlydHkgPSB0cnVlOwotCX0KLQotCWk5MTVfZ2VtX29iamVjdF91bnBpbl9wYWdlcyhvYmop
OwotCXJldHVybiAwOwotfQotCi0vKioKLSAqIENoYW5nZXMgdGhlIGNhY2hlLWxldmVsIG9mIGFu
IG9iamVjdCBhY3Jvc3MgYWxsIFZNQS4KLSAqIEBvYmo6IG9iamVjdCB0byBhY3Qgb24KLSAqIEBj
YWNoZV9sZXZlbDogbmV3IGNhY2hlIGxldmVsIHRvIHNldCBmb3IgdGhlIG9iamVjdAotICoKLSAq
IEFmdGVyIHRoaXMgZnVuY3Rpb24gcmV0dXJucywgdGhlIG9iamVjdCB3aWxsIGJlIGluIHRoZSBu
ZXcgY2FjaGUtbGV2ZWwKLSAqIGFjcm9zcyBhbGwgR1RUIGFuZCB0aGUgY29udGVudHMgb2YgdGhl
IGJhY2tpbmcgc3RvcmFnZSB3aWxsIGJlIGNvaGVyZW50LAotICogd2l0aCByZXNwZWN0IHRvIHRo
ZSBuZXcgY2FjaGUtbGV2ZWwuIEluIG9yZGVyIHRvIGtlZXAgdGhlIGJhY2tpbmcgc3RvcmFnZQot
ICogY29oZXJlbnQgZm9yIGFsbCB1c2Vycywgd2Ugb25seSBhbGxvdyBhIHNpbmdsZSBjYWNoZSBs
ZXZlbCB0byBiZSBzZXQKLSAqIGdsb2JhbGx5IG9uIHRoZSBvYmplY3QgYW5kIHByZXZlbnQgaXQg
ZnJvbSBiZWluZyBjaGFuZ2VkIHdoaWxzdCB0aGUKLSAqIGhhcmR3YXJlIGlzIHJlYWRpbmcgZnJv
bSB0aGUgb2JqZWN0LiBUaGF0IGlzIGlmIHRoZSBvYmplY3QgaXMgY3VycmVudGx5Ci0gKiBvbiB0
aGUgc2Nhbm91dCBpdCB3aWxsIGJlIHNldCB0byB1bmNhY2hlZCAob3IgZXF1aXZhbGVudCBkaXNw
bGF5Ci0gKiBjYWNoZSBjb2hlcmVuY3kpIGFuZCBhbGwgbm9uLU1PQ1MgR1BVIGFjY2VzcyB3aWxs
IGFsc28gYmUgdW5jYWNoZWQgc28KLSAqIHRoYXQgYWxsIGRpcmVjdCBhY2Nlc3MgdG8gdGhlIHNj
YW5vdXQgcmVtYWlucyBjb2hlcmVudC4KLSAqLwotaW50IGk5MTVfZ2VtX29iamVjdF9zZXRfY2Fj
aGVfbGV2ZWwoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKLQkJCQkgICAgZW51bSBp
OTE1X2NhY2hlX2xldmVsIGNhY2hlX2xldmVsKQotewotCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwot
CWludCByZXQ7Ci0KLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZvYmotPmJhc2UuZGV2LT5zdHJ1Y3Rf
bXV0ZXgpOwotCi0JaWYgKG9iai0+Y2FjaGVfbGV2ZWwgPT0gY2FjaGVfbGV2ZWwpCi0JCXJldHVy
biAwOwotCi0JLyogSW5zcGVjdCB0aGUgbGlzdCBvZiBjdXJyZW50bHkgYm91bmQgVk1BIGFuZCB1
bmJpbmQgYW55IHRoYXQgd291bGQKLQkgKiBiZSBpbnZhbGlkIGdpdmVuIHRoZSBuZXcgY2FjaGUt
bGV2ZWwuIFRoaXMgaXMgcHJpbmNpcGFsbHkgdG8KLQkgKiBjYXRjaCB0aGUgaXNzdWUgb2YgdGhl
IENTIHByZWZldGNoIGNyb3NzaW5nIHBhZ2UgYm91bmRhcmllcyBhbmQKLQkgKiByZWFkaW5nIGFu
IGludmFsaWQgUFRFIG9uIG9sZGVyIGFyY2hpdGVjdHVyZXMuCi0JICovCi1yZXN0YXJ0OgotCWxp
c3RfZm9yX2VhY2hfZW50cnkodm1hLCAmb2JqLT52bWEubGlzdCwgb2JqX2xpbmspIHsKLQkJaWYg
KCFkcm1fbW1fbm9kZV9hbGxvY2F0ZWQoJnZtYS0+bm9kZSkpCi0JCQljb250aW51ZTsKLQotCQlp
ZiAoaTkxNV92bWFfaXNfcGlubmVkKHZtYSkpIHsKLQkJCURSTV9ERUJVRygiY2FuIG5vdCBjaGFu
Z2UgdGhlIGNhY2hlIGxldmVsIG9mIHBpbm5lZCBvYmplY3RzXG4iKTsKLQkJCXJldHVybiAtRUJV
U1k7Ci0JCX0KLQotCQlpZiAoIWk5MTVfdm1hX2lzX2Nsb3NlZCh2bWEpICYmCi0JCSAgICBpOTE1
X2dlbV92YWxpZF9ndHRfc3BhY2Uodm1hLCBjYWNoZV9sZXZlbCkpCi0JCQljb250aW51ZTsKLQot
CQlyZXQgPSBpOTE1X3ZtYV91bmJpbmQodm1hKTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7
Ci0KLQkJLyogQXMgdW5iaW5kaW5nIG1heSBhZmZlY3Qgb3RoZXIgZWxlbWVudHMgaW4gdGhlCi0J
CSAqIG9iai0+dm1hX2xpc3QgKGR1ZSB0byBzaWRlLWVmZmVjdHMgZnJvbSByZXRpcmluZwotCQkg
KiBhbiBhY3RpdmUgdm1hKSwgcGxheSBzYWZlIGFuZCByZXN0YXJ0IHRoZSBpdGVyYXRvci4KLQkJ
ICovCi0JCWdvdG8gcmVzdGFydDsKLQl9Ci0KLQkvKiBXZSBjYW4gcmV1c2UgdGhlIGV4aXN0aW5n
IGRybV9tbSBub2RlcyBidXQgbmVlZCB0byBjaGFuZ2UgdGhlCi0JICogY2FjaGUtbGV2ZWwgb24g
dGhlIFBURS4gV2UgY291bGQgc2ltcGx5IHVuYmluZCB0aGVtIGFsbCBhbmQKLQkgKiByZWJpbmQg
d2l0aCB0aGUgY29ycmVjdCBjYWNoZS1sZXZlbCBvbiBuZXh0IHVzZS4gSG93ZXZlciBzaW5jZQot
CSAqIHdlIGFscmVhZHkgaGF2ZSBhIHZhbGlkIHNsb3QsIGRtYSBtYXBwaW5nLCBwYWdlcyBldGMs
IHdlIG1heSBhcwotCSAqIHJld3JpdGUgdGhlIFBURSBpbiB0aGUgYmVsaWVmIHRoYXQgZG9pbmcg
c28gdHJhbXBsZXMgdXBvbiBsZXNzCi0JICogc3RhdGUgYW5kIHNvIGludm9sdmVzIGxlc3Mgd29y
ay4KLQkgKi8KLQlpZiAob2JqLT5iaW5kX2NvdW50KSB7Ci0JCS8qIEJlZm9yZSB3ZSBjaGFuZ2Ug
dGhlIFBURSwgdGhlIEdQVSBtdXN0IG5vdCBiZSBhY2Nlc3NpbmcgaXQuCi0JCSAqIElmIHdlIHdh
aXQgdXBvbiB0aGUgb2JqZWN0LCB3ZSBrbm93IHRoYXQgYWxsIHRoZSBib3VuZAotCQkgKiBWTUEg
YXJlIG5vIGxvbmdlciBhY3RpdmUuCi0JCSAqLwotCQlyZXQgPSBpOTE1X2dlbV9vYmplY3Rfd2Fp
dChvYmosCi0JCQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFIHwKLQkJCQkJICAgSTkxNV9X
QUlUX0xPQ0tFRCB8Ci0JCQkJCSAgIEk5MTVfV0FJVF9BTEwsCi0JCQkJCSAgIE1BWF9TQ0hFRFVM
RV9USU1FT1VUKTsKLQkJaWYgKHJldCkKLQkJCXJldHVybiByZXQ7Ci0KLQkJaWYgKCFIQVNfTExD
KHRvX2k5MTUob2JqLT5iYXNlLmRldikpICYmCi0JCSAgICBjYWNoZV9sZXZlbCAhPSBJOTE1X0NB
Q0hFX05PTkUpIHsKLQkJCS8qIEFjY2VzcyB0byBzbm9vcGFibGUgcGFnZXMgdGhyb3VnaCB0aGUg
R1RUIGlzCi0JCQkgKiBpbmNvaGVyZW50IGFuZCBvbiBzb21lIG1hY2hpbmVzIGNhdXNlcyBhIGhh
cmQKLQkJCSAqIGxvY2t1cC4gUmVsaW5xdWlzaCB0aGUgQ1BVIG1tYXBpbmcgdG8gZm9yY2UKLQkJ
CSAqIHVzZXJzcGFjZSB0byByZWZhdWx0IGluIHRoZSBwYWdlcyBhbmQgd2UgY2FuCi0JCQkgKiB0
aGVuIGRvdWJsZSBjaGVjayBpZiB0aGUgR1RUIG1hcHBpbmcgaXMgc3RpbGwKLQkJCSAqIHZhbGlk
IGZvciB0aGF0IHBvaW50ZXIgYWNjZXNzLgotCQkJICovCi0JCQlpOTE1X2dlbV9vYmplY3RfcmVs
ZWFzZV9tbWFwKG9iaik7Ci0KLQkJCS8qIEFzIHdlIG5vIGxvbmdlciBuZWVkIGEgZmVuY2UgZm9y
IEdUVCBhY2Nlc3MsCi0JCQkgKiB3ZSBjYW4gcmVsaW5xdWlzaCBpdCBub3cgKGFuZCBzbyBwcmV2
ZW50IGhhdmluZwotCQkJICogdG8gc3RlYWwgYSBmZW5jZSBmcm9tIHNvbWVvbmUgZWxzZSBvbiB0
aGUgbmV4dAotCQkJICogZmVuY2UgcmVxdWVzdCkuIE5vdGUgR1BVIGFjdGl2aXR5IHdvdWxkIGhh
dmUKLQkJCSAqIGRyb3BwZWQgdGhlIGZlbmNlIGFzIGFsbCBzbm9vcGFibGUgYWNjZXNzIGlzCi0J
CQkgKiBzdXBwb3NlZCB0byBiZSBsaW5lYXIuCi0JCQkgKi8KLQkJCWZvcl9lYWNoX2dndHRfdm1h
KHZtYSwgb2JqKSB7Ci0JCQkJcmV0ID0gaTkxNV92bWFfcHV0X2ZlbmNlKHZtYSk7Ci0JCQkJaWYg
KHJldCkKLQkJCQkJcmV0dXJuIHJldDsKLQkJCX0KLQkJfSBlbHNlIHsKLQkJCS8qIFdlIGVpdGhl
ciBoYXZlIGluY29oZXJlbnQgYmFja2luZyBzdG9yZSBhbmQKLQkJCSAqIHNvIG5vIEdUVCBhY2Nl
c3Mgb3IgdGhlIGFyY2hpdGVjdHVyZSBpcyBmdWxseQotCQkJICogY29oZXJlbnQuIEluIHN1Y2gg
Y2FzZXMsIGV4aXN0aW5nIEdUVCBtbWFwcwotCQkJICogaWdub3JlIHRoZSBjYWNoZSBiaXQgaW4g
dGhlIFBURSBhbmQgd2UgY2FuCi0JCQkgKiByZXdyaXRlIGl0IHdpdGhvdXQgY29uZnVzaW5nIHRo
ZSBHUFUgb3IgaGF2aW5nCi0JCQkgKiB0byBmb3JjZSB1c2Vyc3BhY2UgdG8gZmF1bHQgYmFjayBp
biBpdHMgbW1hcHMuCi0JCQkgKi8KLQkJfQotCi0JCWxpc3RfZm9yX2VhY2hfZW50cnkodm1hLCAm
b2JqLT52bWEubGlzdCwgb2JqX2xpbmspIHsKLQkJCWlmICghZHJtX21tX25vZGVfYWxsb2NhdGVk
KCZ2bWEtPm5vZGUpKQotCQkJCWNvbnRpbnVlOwotCi0JCQlyZXQgPSBpOTE1X3ZtYV9iaW5kKHZt
YSwgY2FjaGVfbGV2ZWwsIFBJTl9VUERBVEUpOwotCQkJaWYgKHJldCkKLQkJCQlyZXR1cm4gcmV0
OwotCQl9Ci0JfQotCi0JbGlzdF9mb3JfZWFjaF9lbnRyeSh2bWEsICZvYmotPnZtYS5saXN0LCBv
YmpfbGluaykKLQkJdm1hLT5ub2RlLmNvbG9yID0gY2FjaGVfbGV2ZWw7Ci0JaTkxNV9nZW1fb2Jq
ZWN0X3NldF9jYWNoZV9jb2hlcmVuY3kob2JqLCBjYWNoZV9sZXZlbCk7Ci0Jb2JqLT5jYWNoZV9k
aXJ0eSA9IHRydWU7IC8qIEFsd2F5cyBpbnZhbGlkYXRlIHN0YWxlIGNhY2hlbGluZXMgKi8KLQot
CXJldHVybiAwOwotfQotCi1pbnQgaTkxNV9nZW1fZ2V0X2NhY2hpbmdfaW9jdGwoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKLQkJCSAgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZp
bGUpCi17Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9jYWNoaW5nICphcmdzID0gZGF0YTsKLQlzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwotCWludCBlcnIgPSAwOwotCi0JcmN1X3JlYWRf
bG9jaygpOwotCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9sb29rdXBfcmN1KGZpbGUsIGFyZ3MtPmhh
bmRsZSk7Ci0JaWYgKCFvYmopIHsKLQkJZXJyID0gLUVOT0VOVDsKLQkJZ290byBvdXQ7Ci0JfQot
Ci0Jc3dpdGNoIChvYmotPmNhY2hlX2xldmVsKSB7Ci0JY2FzZSBJOTE1X0NBQ0hFX0xMQzoKLQlj
YXNlIEk5MTVfQ0FDSEVfTDNfTExDOgotCQlhcmdzLT5jYWNoaW5nID0gSTkxNV9DQUNISU5HX0NB
Q0hFRDsKLQkJYnJlYWs7Ci0KLQljYXNlIEk5MTVfQ0FDSEVfV1Q6Ci0JCWFyZ3MtPmNhY2hpbmcg
PSBJOTE1X0NBQ0hJTkdfRElTUExBWTsKLQkJYnJlYWs7Ci0KLQlkZWZhdWx0OgotCQlhcmdzLT5j
YWNoaW5nID0gSTkxNV9DQUNISU5HX05PTkU7Ci0JCWJyZWFrOwotCX0KLW91dDoKLQlyY3VfcmVh
ZF91bmxvY2soKTsKLQlyZXR1cm4gZXJyOwotfQotCi1pbnQgaTkxNV9nZW1fc2V0X2NhY2hpbmdf
aW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKLQkJCSAgICAgICBzdHJ1
Y3QgZHJtX2ZpbGUgKmZpbGUpCi17Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0
b19pOTE1KGRldik7Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9jYWNoaW5nICphcmdzID0gZGF0YTsK
LQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwotCWVudW0gaTkxNV9jYWNoZV9sZXZl
bCBsZXZlbDsKLQlpbnQgcmV0ID0gMDsKLQotCXN3aXRjaCAoYXJncy0+Y2FjaGluZykgewotCWNh
c2UgSTkxNV9DQUNISU5HX05PTkU6Ci0JCWxldmVsID0gSTkxNV9DQUNIRV9OT05FOwotCQlicmVh
azsKLQljYXNlIEk5MTVfQ0FDSElOR19DQUNIRUQ6Ci0JCS8qCi0JCSAqIER1ZSB0byBhIEhXIGlz
c3VlIG9uIEJYVCBBIHN0ZXBwaW5nLCBHUFUgc3RvcmVzIHZpYSBhCi0JCSAqIHNub29wZWQgbWFw
cGluZyBtYXkgbGVhdmUgc3RhbGUgZGF0YSBpbiBhIGNvcnJlc3BvbmRpbmcgQ1BVCi0JCSAqIGNh
Y2hlbGluZSwgd2hlcmVhcyBub3JtYWxseSBzdWNoIGNhY2hlbGluZXMgd291bGQgZ2V0Ci0JCSAq
IGludmFsaWRhdGVkLgotCQkgKi8KLQkJaWYgKCFIQVNfTExDKGk5MTUpICYmICFIQVNfU05PT1Ao
aTkxNSkpCi0JCQlyZXR1cm4gLUVOT0RFVjsKLQotCQlsZXZlbCA9IEk5MTVfQ0FDSEVfTExDOwot
CQlicmVhazsKLQljYXNlIEk5MTVfQ0FDSElOR19ESVNQTEFZOgotCQlsZXZlbCA9IEhBU19XVChp
OTE1KSA/IEk5MTVfQ0FDSEVfV1QgOiBJOTE1X0NBQ0hFX05PTkU7Ci0JCWJyZWFrOwotCWRlZmF1
bHQ6Ci0JCXJldHVybiAtRUlOVkFMOwotCX0KLQotCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9sb29r
dXAoZmlsZSwgYXJncy0+aGFuZGxlKTsKLQlpZiAoIW9iaikKLQkJcmV0dXJuIC1FTk9FTlQ7Ci0K
LQkvKgotCSAqIFRoZSBjYWNoaW5nIG1vZGUgb2YgcHJveHkgb2JqZWN0IGlzIGhhbmRsZWQgYnkg
aXRzIGdlbmVyYXRvciwgYW5kCi0JICogbm90IGFsbG93ZWQgdG8gYmUgY2hhbmdlZCBieSB1c2Vy
c3BhY2UuCi0JICovCi0JaWYgKGk5MTVfZ2VtX29iamVjdF9pc19wcm94eShvYmopKSB7Ci0JCXJl
dCA9IC1FTlhJTzsKLQkJZ290byBvdXQ7Ci0JfQotCi0JaWYgKG9iai0+Y2FjaGVfbGV2ZWwgPT0g
bGV2ZWwpCi0JCWdvdG8gb3V0OwotCi0JcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3dhaXQob2JqLAot
CQkJCSAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFLAotCQkJCSAgIE1BWF9TQ0hFRFVMRV9USU1F
T1VUKTsKLQlpZiAocmV0KQotCQlnb3RvIG91dDsKLQotCXJldCA9IGk5MTVfbXV0ZXhfbG9ja19p
bnRlcnJ1cHRpYmxlKGRldik7Ci0JaWYgKHJldCkKLQkJZ290byBvdXQ7Ci0KLQlyZXQgPSBpOTE1
X2dlbV9vYmplY3Rfc2V0X2NhY2hlX2xldmVsKG9iaiwgbGV2ZWwpOwotCW11dGV4X3VubG9jaygm
ZGV2LT5zdHJ1Y3RfbXV0ZXgpOwotCi1vdXQ6Ci0JaTkxNV9nZW1fb2JqZWN0X3B1dChvYmopOwot
CXJldHVybiByZXQ7Ci19Ci0KLS8qCi0gKiBQcmVwYXJlIGJ1ZmZlciBmb3IgZGlzcGxheSBwbGFu
ZSAoc2Nhbm91dCwgY3Vyc29ycywgZXRjKS4gQ2FuIGJlIGNhbGxlZCBmcm9tCi0gKiBhbiB1bmlu
dGVycnVwdGlibGUgcGhhc2UgKG1vZGVzZXR0aW5nKSBhbmQgYWxsb3dzIGFueSBmbHVzaGVzIHRv
IGJlIHBpcGVsaW5lZAotICogKGZvciBwYWdlZmxpcHMpLiBXZSBvbmx5IGZsdXNoIHRoZSBjYWNo
ZXMgd2hpbGUgcHJlcGFyaW5nIHRoZSBidWZmZXIgZm9yCi0gKiBkaXNwbGF5LCB0aGUgY2FsbGVy
cyBhcmUgcmVzcG9uc2libGUgZm9yIGZyb250YnVmZmVyIGZsdXNoLgotICovCi1zdHJ1Y3QgaTkx
NV92bWEgKgotaTkxNV9nZW1fb2JqZWN0X3Bpbl90b19kaXNwbGF5X3BsYW5lKHN0cnVjdCBkcm1f
aTkxNV9nZW1fb2JqZWN0ICpvYmosCi0JCQkJICAgICB1MzIgYWxpZ25tZW50LAotCQkJCSAgICAg
Y29uc3Qgc3RydWN0IGk5MTVfZ2d0dF92aWV3ICp2aWV3LAotCQkJCSAgICAgdW5zaWduZWQgaW50
IGZsYWdzKQotewotCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwotCWludCByZXQ7Ci0KLQlsb2NrZGVw
X2Fzc2VydF9oZWxkKCZvYmotPmJhc2UuZGV2LT5zdHJ1Y3RfbXV0ZXgpOwotCi0JLyogTWFyayB0
aGUgZ2xvYmFsIHBpbiBlYXJseSBzbyB0aGF0IHdlIGFjY291bnQgZm9yIHRoZQotCSAqIGRpc3Bs
YXkgY29oZXJlbmN5IHdoaWxzdCBzZXR0aW5nIHVwIHRoZSBjYWNoZSBkb21haW5zLgotCSAqLwot
CW9iai0+cGluX2dsb2JhbCsrOwotCi0JLyogVGhlIGRpc3BsYXkgZW5naW5lIGlzIG5vdCBjb2hl
cmVudCB3aXRoIHRoZSBMTEMgY2FjaGUgb24gZ2VuNi4gIEFzCi0JICogYSByZXN1bHQsIHdlIG1h
a2Ugc3VyZSB0aGF0IHRoZSBwaW5uaW5nIHRoYXQgaXMgYWJvdXQgdG8gb2NjdXIgaXMKLQkgKiBk
b25lIHdpdGggdW5jYWNoZWQgUFRFcy4gVGhpcyBpcyBsb3dlc3QgY29tbW9uIGRlbm9taW5hdG9y
IGZvciBhbGwKLQkgKiBjaGlwc2V0cy4KLQkgKgotCSAqIEhvd2V2ZXIgZm9yIGdlbjYrLCB3ZSBj
b3VsZCBkbyBiZXR0ZXIgYnkgdXNpbmcgdGhlIEdGRFQgYml0IGluc3RlYWQKLQkgKiBvZiB1bmNh
Y2hpbmcsIHdoaWNoIHdvdWxkIGFsbG93IHVzIHRvIGZsdXNoIGFsbCB0aGUgTExDLWNhY2hlZCBk
YXRhCi0JICogd2l0aCB0aGF0IGJpdCBpbiB0aGUgUFRFIHRvIG1haW4gbWVtb3J5IHdpdGgganVz
dCBvbmUgUElQRV9DT05UUk9MLgotCSAqLwotCXJldCA9IGk5MTVfZ2VtX29iamVjdF9zZXRfY2Fj
aGVfbGV2ZWwob2JqLAotCQkJCQkgICAgICBIQVNfV1QodG9faTkxNShvYmotPmJhc2UuZGV2KSkg
PwotCQkJCQkgICAgICBJOTE1X0NBQ0hFX1dUIDogSTkxNV9DQUNIRV9OT05FKTsKLQlpZiAocmV0
KSB7Ci0JCXZtYSA9IEVSUl9QVFIocmV0KTsKLQkJZ290byBlcnJfdW5waW5fZ2xvYmFsOwotCX0K
LQotCS8qIEFzIHRoZSB1c2VyIG1heSBtYXAgdGhlIGJ1ZmZlciBvbmNlIHBpbm5lZCBpbiB0aGUg
ZGlzcGxheSBwbGFuZQotCSAqIChlLmcuIGxpYmttcyBmb3IgdGhlIGJvb3R1cCBzcGxhc2gpLCB3
ZSBoYXZlIHRvIGVuc3VyZSB0aGF0IHdlCi0JICogYWx3YXlzIHVzZSBtYXBfYW5kX2ZlbmNlYWJs
ZSBmb3IgYWxsIHNjYW5vdXQgYnVmZmVycy4gSG93ZXZlciwKLQkgKiBpdCBtYXkgc2ltcGx5IGJl
IHRvbyBiaWcgdG8gZml0IGludG8gbWFwcGFibGUsIGluIHdoaWNoIGNhc2UKLQkgKiBwdXQgaXQg
YW55d2F5IGFuZCBob3BlIHRoYXQgdXNlcnNwYWNlIGNhbiBjb3BlIChidXQgYWx3YXlzIGZpcnN0
Ci0JICogdHJ5IHRvIHByZXNlcnZlIHRoZSBleGlzdGluZyBBQkkpLgotCSAqLwotCXZtYSA9IEVS
Ul9QVFIoLUVOT1NQQyk7Ci0JaWYgKChmbGFncyAmIFBJTl9NQVBQQUJMRSkgPT0gMCAmJgotCSAg
ICAoIXZpZXcgfHwgdmlldy0+dHlwZSA9PSBJOTE1X0dHVFRfVklFV19OT1JNQUwpKQotCQl2bWEg
PSBpOTE1X2dlbV9vYmplY3RfZ2d0dF9waW4ob2JqLCB2aWV3LCAwLCBhbGlnbm1lbnQsCi0JCQkJ
CSAgICAgICBmbGFncyB8Ci0JCQkJCSAgICAgICBQSU5fTUFQUEFCTEUgfAotCQkJCQkgICAgICAg
UElOX05PTkJMT0NLKTsKLQlpZiAoSVNfRVJSKHZtYSkpCi0JCXZtYSA9IGk5MTVfZ2VtX29iamVj
dF9nZ3R0X3BpbihvYmosIHZpZXcsIDAsIGFsaWdubWVudCwgZmxhZ3MpOwotCWlmIChJU19FUlIo
dm1hKSkKLQkJZ290byBlcnJfdW5waW5fZ2xvYmFsOwotCi0Jdm1hLT5kaXNwbGF5X2FsaWdubWVu
dCA9IG1heF90KHU2NCwgdm1hLT5kaXNwbGF5X2FsaWdubWVudCwgYWxpZ25tZW50KTsKLQotCV9f
aTkxNV9nZW1fb2JqZWN0X2ZsdXNoX2Zvcl9kaXNwbGF5KG9iaik7Ci0KLQkvKiBJdCBzaG91bGQg
bm93IGJlIG91dCBvZiBhbnkgb3RoZXIgd3JpdGUgZG9tYWlucywgYW5kIHdlIGNhbiB1cGRhdGUK
LQkgKiB0aGUgZG9tYWluIHZhbHVlcyBmb3Igb3VyIGNoYW5nZXMuCi0JICovCi0Jb2JqLT5yZWFk
X2RvbWFpbnMgfD0gSTkxNV9HRU1fRE9NQUlOX0dUVDsKLQotCXJldHVybiB2bWE7Ci0KLWVycl91
bnBpbl9nbG9iYWw6Ci0Jb2JqLT5waW5fZ2xvYmFsLS07Ci0JcmV0dXJuIHZtYTsKLX0KLQotdm9p
ZAotaTkxNV9nZW1fb2JqZWN0X3VucGluX2Zyb21fZGlzcGxheV9wbGFuZShzdHJ1Y3QgaTkxNV92
bWEgKnZtYSkKLXsKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZ2bWEtPnZtLT5pOTE1LT5kcm0uc3Ry
dWN0X211dGV4KTsKLQotCWlmIChXQVJOX09OKHZtYS0+b2JqLT5waW5fZ2xvYmFsID09IDApKQot
CQlyZXR1cm47Ci0KLQlpZiAoLS12bWEtPm9iai0+cGluX2dsb2JhbCA9PSAwKQotCQl2bWEtPmRp
c3BsYXlfYWxpZ25tZW50ID0gSTkxNV9HVFRfTUlOX0FMSUdOTUVOVDsKLQotCS8qIEJ1bXAgdGhl
IExSVSB0byB0cnkgYW5kIGF2b2lkIHByZW1hdHVyZSBldmljdGlvbiB3aGlsc3QgZmxpcHBpbmcg
ICovCi0JaTkxNV9nZW1fb2JqZWN0X2J1bXBfaW5hY3RpdmVfZ2d0dCh2bWEtPm9iaik7Ci0KLQlp
OTE1X3ZtYV91bnBpbih2bWEpOwotfQotCi0vKioKLSAqIE1vdmVzIGEgc2luZ2xlIG9iamVjdCB0
byB0aGUgQ1BVIHJlYWQsIGFuZCBwb3NzaWJseSB3cml0ZSBkb21haW4uCi0gKiBAb2JqOiBvYmpl
Y3QgdG8gYWN0IG9uCi0gKiBAd3JpdGU6IHJlcXVlc3Rpbmcgd3JpdGUgb3IgcmVhZC1vbmx5IGFj
Y2VzcwotICoKLSAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB3aGVuIHRoZSBtb3ZlIGlzIGNvbXBs
ZXRlLCBpbmNsdWRpbmcgd2FpdGluZyBvbgotICogZmx1c2hlcyB0byBvY2N1ci4KLSAqLwotaW50
Ci1pOTE1X2dlbV9vYmplY3Rfc2V0X3RvX2NwdV9kb21haW4oc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3QgKm9iaiwgYm9vbCB3cml0ZSkKLXsKLQlpbnQgcmV0OwotCi0JbG9ja2RlcF9hc3NlcnRf
aGVsZCgmb2JqLT5iYXNlLmRldi0+c3RydWN0X211dGV4KTsKLQotCXJldCA9IGk5MTVfZ2VtX29i
amVjdF93YWl0KG9iaiwKLQkJCQkgICBJOTE1X1dBSVRfSU5URVJSVVBUSUJMRSB8Ci0JCQkJICAg
STkxNV9XQUlUX0xPQ0tFRCB8Ci0JCQkJICAgKHdyaXRlID8gSTkxNV9XQUlUX0FMTCA6IDApLAot
CQkJCSAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0Owot
Ci0JaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX3dyaXRlX2RvbWFpbihvYmosIH5JOTE1X0dFTV9ET01B
SU5fQ1BVKTsKLQotCS8qIEZsdXNoIHRoZSBDUFUgY2FjaGUgaWYgaXQncyBzdGlsbCBpbnZhbGlk
LiAqLwotCWlmICgob2JqLT5yZWFkX2RvbWFpbnMgJiBJOTE1X0dFTV9ET01BSU5fQ1BVKSA9PSAw
KSB7Ci0JCWk5MTVfZ2VtX2NsZmx1c2hfb2JqZWN0KG9iaiwgSTkxNV9DTEZMVVNIX1NZTkMpOwot
CQlvYmotPnJlYWRfZG9tYWlucyB8PSBJOTE1X0dFTV9ET01BSU5fQ1BVOwotCX0KLQotCS8qIEl0
IHNob3VsZCBub3cgYmUgb3V0IG9mIGFueSBvdGhlciB3cml0ZSBkb21haW5zLCBhbmQgd2UgY2Fu
IHVwZGF0ZQotCSAqIHRoZSBkb21haW4gdmFsdWVzIGZvciBvdXIgY2hhbmdlcy4KLQkgKi8KLQlH
RU1fQlVHX09OKG9iai0+d3JpdGVfZG9tYWluICYgfkk5MTVfR0VNX0RPTUFJTl9DUFUpOwotCi0J
LyogSWYgd2UncmUgd3JpdGluZyB0aHJvdWdoIHRoZSBDUFUsIHRoZW4gdGhlIEdQVSByZWFkIGRv
bWFpbnMgd2lsbAotCSAqIG5lZWQgdG8gYmUgaW52YWxpZGF0ZWQgYXQgbmV4dCB1c2UuCi0JICov
Ci0JaWYgKHdyaXRlKQotCQlfX3N0YXJ0X2NwdV93cml0ZShvYmopOwotCi0JcmV0dXJuIDA7Ci19
Ci0KIC8qIFRocm90dGxlIG91ciByZW5kZXJpbmcgYnkgd2FpdGluZyB1bnRpbCB0aGUgcmluZyBo
YXMgY29tcGxldGVkIG91ciByZXF1ZXN0cwogICogZW1pdHRlZCBvdmVyIDIwIG1zZWMgYWdvLgog
ICoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V4ZWNidWZmZXIu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCAyNzM5
MTMwMDUwN2UuLmZjNjhjOTA5NmU5NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW1fZXhlY2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2Vt
X2V4ZWNidWZmZXIuYwpAQCAtMTAyNiw3ICsxMDI2LDcgQEAgc3RhdGljIHZvaWQgcmVsb2NfY2Fj
aGVfcmVzZXQoc3RydWN0IHJlbG9jX2NhY2hlICpjYWNoZSkKIAkJCW1iKCk7CiAKIAkJa3VubWFw
X2F0b21pYyh2YWRkcik7Ci0JCWk5MTVfZ2VtX29ial9maW5pc2hfc2htZW1fYWNjZXNzKChzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqKWNhY2hlLT5ub2RlLm1tKTsKKwkJaTkxNV9nZW1fb2Jq
ZWN0X2ZpbmlzaF9hY2Nlc3MoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICopY2FjaGUtPm5v
ZGUubW0pOwogCX0gZWxzZSB7CiAJCXdtYigpOwogCQlpb19tYXBwaW5nX3VubWFwX2F0b21pYygo
dm9pZCBfX2lvbWVtICopdmFkZHIpOwpAQCAtMTA1OCw3ICsxMDU4LDcgQEAgc3RhdGljIHZvaWQg
KnJlbG9jX2ttYXAoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJdW5zaWduZWQg
aW50IGZsdXNoZXM7CiAJCWludCBlcnI7CiAKLQkJZXJyID0gaTkxNV9nZW1fb2JqX3ByZXBhcmVf
c2htZW1fd3JpdGUob2JqLCAmZmx1c2hlcyk7CisJCWVyciA9IGk5MTVfZ2VtX29iamVjdF9wcmVw
YXJlX3dyaXRlKG9iaiwgJmZsdXNoZXMpOwogCQlpZiAoZXJyKQogCQkJcmV0dXJuIEVSUl9QVFIo
ZXJyKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fcmVuZGVy
X3N0YXRlLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9yZW5kZXJfc3RhdGUuYwpp
bmRleCA5NDQwMDI0Yzc2M2YuLmYzYjQyYjAyNmZmZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9nZW1fcmVuZGVyX3N0YXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW1fcmVuZGVyX3N0YXRlLmMKQEAgLTg0LDcgKzg0LDcgQEAgc3RhdGljIGludCBy
ZW5kZXJfc3RhdGVfc2V0dXAoc3RydWN0IGludGVsX3JlbmRlcl9zdGF0ZSAqc28sCiAJdTMyICpk
OwogCWludCByZXQ7CiAKLQlyZXQgPSBpOTE1X2dlbV9vYmpfcHJlcGFyZV9zaG1lbV93cml0ZShz
by0+b2JqLCAmbmVlZHNfY2xmbHVzaCk7CisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVf
d3JpdGUoc28tPm9iaiwgJm5lZWRzX2NsZmx1c2gpOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7
CiAKQEAgLTE2Niw3ICsxNjYsNyBAQCBzdGF0aWMgaW50IHJlbmRlcl9zdGF0ZV9zZXR1cChzdHJ1
Y3QgaW50ZWxfcmVuZGVyX3N0YXRlICpzbywKIAogCXJldCA9IDA7CiBvdXQ6Ci0JaTkxNV9nZW1f
b2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3Moc28tPm9iaik7CisJaTkxNV9nZW1fb2JqZWN0X2Zpbmlz
aF9hY2Nlc3Moc28tPm9iaik7CiAJcmV0dXJuIHJldDsKIAogZXJyOgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2h1Z2VfcGFnZXMuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L3NlbGZ0ZXN0cy9odWdlX3BhZ2VzLmMKaW5kZXggY2U0ZWM4NzY5OGY2Li5iMjJiODI0
OWRmYmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9odWdlX3Bh
Z2VzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2h1Z2VfcGFnZXMuYwpA
QCAtMTAxNyw3ICsxMDE3LDcgQEAgc3RhdGljIGludCBjcHVfY2hlY2soc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiwgdTMyIGR3b3JkLCB1MzIgdmFsKQogCXVuc2lnbmVkIGxvbmcgbjsK
IAlpbnQgZXJyOwogCi0JZXJyID0gaTkxNV9nZW1fb2JqX3ByZXBhcmVfc2htZW1fcmVhZChvYmos
ICZuZWVkc19mbHVzaCk7CisJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfcmVhZChvYmos
ICZuZWVkc19mbHVzaCk7CiAJaWYgKGVycikKIAkJcmV0dXJuIGVycjsKIApAQCAtMTAzOCw3ICsx
MDM4LDcgQEAgc3RhdGljIGludCBjcHVfY2hlY2soc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaiwgdTMyIGR3b3JkLCB1MzIgdmFsKQogCQlrdW5tYXBfYXRvbWljKHB0cik7CiAJfQogCi0J
aTkxNV9nZW1fb2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3Mob2JqKTsKKwlpOTE1X2dlbV9vYmplY3Rf
ZmluaXNoX2FjY2VzcyhvYmopOwogCiAJcmV0dXJuIGVycjsKIH0KZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb2hlcmVuY3kuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb2hlcmVuY3kuYwppbmRleCAwNDZhMzg3
NDMxNTIuLmNiMjViNWZjODAyNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2Vs
ZnRlc3RzL2k5MTVfZ2VtX2NvaGVyZW5jeS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3Nl
bGZ0ZXN0cy9pOTE1X2dlbV9jb2hlcmVuY3kuYwpAQCAtMzcsNyArMzcsNyBAQCBzdGF0aWMgaW50
IGNwdV9zZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAl1MzIgKmNwdTsKIAlp
bnQgZXJyOwogCi0JZXJyID0gaTkxNV9nZW1fb2JqX3ByZXBhcmVfc2htZW1fd3JpdGUob2JqLCAm
bmVlZHNfY2xmbHVzaCk7CisJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3ByZXBhcmVfd3JpdGUob2Jq
LCAmbmVlZHNfY2xmbHVzaCk7CiAJaWYgKGVycikKIAkJcmV0dXJuIGVycjsKIApAQCAtNTQsNyAr
NTQsNyBAQCBzdGF0aWMgaW50IGNwdV9zZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aiwKIAkJZHJtX2NsZmx1c2hfdmlydF9yYW5nZShjcHUsIHNpemVvZigqY3B1KSk7CiAKIAlrdW5t
YXBfYXRvbWljKG1hcCk7Ci0JaTkxNV9nZW1fb2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3Mob2JqKTsK
KwlpOTE1X2dlbV9vYmplY3RfZmluaXNoX2FjY2VzcyhvYmopOwogCiAJcmV0dXJuIDA7CiB9CkBA
IC02OSw3ICs2OSw3IEBAIHN0YXRpYyBpbnQgY3B1X2dldChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqb2JqLAogCXUzMiAqY3B1OwogCWludCBlcnI7CiAKLQllcnIgPSBpOTE1X2dlbV9vYmpf
cHJlcGFyZV9zaG1lbV9yZWFkKG9iaiwgJm5lZWRzX2NsZmx1c2gpOworCWVyciA9IGk5MTVfZ2Vt
X29iamVjdF9wcmVwYXJlX3JlYWQob2JqLCAmbmVlZHNfY2xmbHVzaCk7CiAJaWYgKGVycikKIAkJ
cmV0dXJuIGVycjsKIApAQCAtODMsNyArODMsNyBAQCBzdGF0aWMgaW50IGNwdV9nZXQoc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkqdiA9ICpjcHU7CiAKIAlrdW5tYXBfYXRvbWlj
KG1hcCk7Ci0JaTkxNV9nZW1fb2JqX2ZpbmlzaF9zaG1lbV9hY2Nlc3Mob2JqKTsKKwlpOTE1X2dl
bV9vYmplY3RfZmluaXNoX2FjY2VzcyhvYmopOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9nZW1fY29udGV4dC5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQuYwppbmRleCAzNGFj
NWNjNmQ1OWYuLmM2OWM2ZDlhOTk4YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
c2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9z
ZWxmdGVzdHMvaTkxNV9nZW1fY29udGV4dC5jCkBAIC0zNTQsNyArMzU0LDcgQEAgc3RhdGljIGlu
dCBjcHVfZmlsbChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLCB1MzIgdmFsdWUpCiAJ
dW5zaWduZWQgaW50IG4sIG0sIG5lZWRfZmx1c2g7CiAJaW50IGVycjsKIAotCWVyciA9IGk5MTVf
Z2VtX29ial9wcmVwYXJlX3NobWVtX3dyaXRlKG9iaiwgJm5lZWRfZmx1c2gpOworCWVyciA9IGk5
MTVfZ2VtX29iamVjdF9wcmVwYXJlX3dyaXRlKG9iaiwgJm5lZWRfZmx1c2gpOwogCWlmIChlcnIp
CiAJCXJldHVybiBlcnI7CiAKQEAgLTM2OSw3ICszNjksNyBAQCBzdGF0aWMgaW50IGNwdV9maWxs
KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosIHUzMiB2YWx1ZSkKIAkJa3VubWFwX2F0
b21pYyhtYXApOwogCX0KIAotCWk5MTVfZ2VtX29ial9maW5pc2hfc2htZW1fYWNjZXNzKG9iaik7
CisJaTkxNV9nZW1fb2JqZWN0X2ZpbmlzaF9hY2Nlc3Mob2JqKTsKIAlvYmotPnJlYWRfZG9tYWlu
cyA9IEk5MTVfR0VNX0RPTUFJTl9HVFQgfCBJOTE1X0dFTV9ET01BSU5fQ1BVOwogCW9iai0+d3Jp
dGVfZG9tYWluID0gMDsKIAlyZXR1cm4gMDsKQEAgLTM4MSw3ICszODEsNyBAQCBzdGF0aWMgbm9p
bmxpbmUgaW50IGNwdV9jaGVjayhzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCXVu
c2lnbmVkIGludCBuLCBtLCBuZWVkc19mbHVzaDsKIAlpbnQgZXJyOwogCi0JZXJyID0gaTkxNV9n
ZW1fb2JqX3ByZXBhcmVfc2htZW1fcmVhZChvYmosICZuZWVkc19mbHVzaCk7CisJZXJyID0gaTkx
NV9nZW1fb2JqZWN0X3ByZXBhcmVfcmVhZChvYmosICZuZWVkc19mbHVzaCk7CiAJaWYgKGVycikK
IAkJcmV0dXJuIGVycjsKIApAQCAtNDE5LDcgKzQxOSw3IEBAIHN0YXRpYyBub2lubGluZSBpbnQg
Y3B1X2NoZWNrKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCQlicmVhazsKIAl9
CiAKLQlpOTE1X2dlbV9vYmpfZmluaXNoX3NobWVtX2FjY2VzcyhvYmopOworCWk5MTVfZ2VtX29i
amVjdF9maW5pc2hfYWNjZXNzKG9iaik7CiAJcmV0dXJuIGVycjsKIH0KIAotLSAKMi4yMC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BBB5567990
	for <lists+intel-gfx@lfdr.de>; Sat, 13 Jul 2019 12:00:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A666A6E3CE;
	Sat, 13 Jul 2019 10:00:40 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 469576E3DA
 for <intel-gfx@lists.freedesktop.org>; Sat, 13 Jul 2019 10:00:35 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17265478-1500050 
 for multiple; Sat, 13 Jul 2019 11:00:19 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 13 Jul 2019 11:00:13 +0100
Message-Id: <20190713100016.8026-8-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190713100016.8026-1-chris@chris-wilson.co.uk>
References: <20190713100016.8026-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/11] drm/i915/uc: Move intel functions to
 intel_uc
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVs
LmNvbT4KCkFsbCB0aGUgaW50ZWxfdWNfKiBjYW4gbm93IGJlIG1vdmVkIHRvIHdvcmsgb24gdGhl
IGludGVsX3VjIHN0cnVjdHVyZQpmb3IgYmV0dGVyIGVuY2Fwc3VsYXRpb24gb2YgdWMtcmVsYXRl
ZCBhY3Rpb25zLgoKTm90ZTogSSd2ZSBpbnRyb2R1Y2VkIHVjX3RvX2d0IGluc3RlYWQgb2YgdWNf
dG9faTkxNSBiZWNhdXNlIHRoZSBhaW0gaXMKdG8gbW92ZSBldmVyeXRoaW5nIHRvIGJlIGd0LWZv
Y3VzZWQgaW4gdGhlIG1lZGl1bSB0ZXJtLCBzbyB3ZSB3b3VsZCd2ZQpoYWQgdG8gcmVwbGFjZSBp
dCBzb29uIGFueXdheS4KClNpZ25lZC1vZmYtYnk6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRh
bmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+CkNjOiBNaWNoYWwgV2FqZGVjemtvIDxtaWNo
YWwud2FqZGVjemtvQGludGVsLmNvbT4KQWNrZWQtYnk6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hh
bC53YWpkZWN6a29AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9wbS5jIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oICAg
ICB8ICAgNSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jICB8ICAgMiAr
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYyAgfCAxODggKysrKysrKysr
KysrLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuaCAg
fCAgMzQgKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMgICAgICAgIHwgIDE0
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICB8ICAgNiArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgfCAgMTggKy0tCiA4IGZpbGVzIGNo
YW5nZWQsIDEzOSBpbnNlcnRpb25zKCspLCAxMzQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fcG0uYwppbmRleCA5ZWU2ZWRiYWQ0YzUuLjhmYWYyNjIyNzhhZSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMKQEAgLTE3NCw3ICsxNzQsNyBA
QCB2b2lkIGk5MTVfZ2VtX3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAK
IAlpOTE1X2dlbV9kcmFpbl9mcmVlZF9vYmplY3RzKGk5MTUpOwogCi0JaW50ZWxfdWNfc3VzcGVu
ZChpOTE1KTsKKwlpbnRlbF91Y19zdXNwZW5kKCZpOTE1LT5ndC51Yyk7CiB9CiAKIHN0YXRpYyBz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqZmlyc3RfbW1fb2JqZWN0KHN0cnVjdCBsaXN0X2hl
YWQgKmxpc3QpCkBAIC0yMzksNyArMjM5LDcgQEAgdm9pZCBpOTE1X2dlbV9zdXNwZW5kX2xhdGUo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQogCXNwaW5fdW5sb2NrX2lycXJlc3Rv
cmUoJmk5MTUtPm1tLm9ial9sb2NrLCBmbGFncyk7CiAKLQlpbnRlbF91Y19zYW5pdGl6ZShpOTE1
KTsKKwlpbnRlbF91Y19zYW5pdGl6ZSgmaTkxNS0+Z3QudWMpOwogCWk5MTVfZ2VtX3Nhbml0aXpl
KGk5MTUpOwogfQogCkBAIC0yNjYsNyArMjY2LDcgQEAgdm9pZCBpOTE1X2dlbV9yZXN1bWUoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJaWYgKGludGVsX2d0X3Jlc3VtZSgmaTkxNS0+
Z3QpKQogCQlnb3RvIGVycl93ZWRnZWQ7CiAKLQlpbnRlbF91Y19yZXN1bWUoaTkxNSk7CisJaW50
ZWxfdWNfcmVzdW1lKCZpOTE1LT5ndC51Yyk7CiAKIAkvKiBBbHdheXMgcmVsb2FkIGEgY29udGV4
dCBmb3IgcG93ZXJzYXZpbmcuICovCiAJaWYgKCFpOTE1X2dlbV9sb2FkX3Bvd2VyX2NvbnRleHQo
aTkxNSkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuaAppbmRleCA0OWMwMDg1Mzg1YTAuLjI2
Yzk0NTIxYWQxYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Qu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5oCkBAIC0xMiw2ICsxMiwx
MSBAQAogCiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKIAorc3RhdGljIGlubGluZSBzdHJ1Y3Qg
aW50ZWxfZ3QgKnVjX3RvX2d0KHN0cnVjdCBpbnRlbF91YyAqdWMpCit7CisJcmV0dXJuIGNvbnRh
aW5lcl9vZih1Yywgc3RydWN0IGludGVsX2d0LCB1Yyk7Cit9CisKIHZvaWQgaW50ZWxfZ3RfaW5p
dF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSk7CiB2b2lkIGludGVsX2d0X2luaXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUp
OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCBiZGQzNGExZDczOWEu
LjdkZGVkZmIxNmFhMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC03
MTcsNyArNzE3LDcgQEAgc3RhdGljIGludGVsX2VuZ2luZV9tYXNrX3QgcmVzZXRfcHJlcGFyZShz
dHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCQlyZXNldF9wcmVwYXJlX2VuZ2luZShlbmdpbmUpOwogCX0K
IAotCWludGVsX3VjX3Jlc2V0X3ByZXBhcmUoZ3QtPmk5MTUpOworCWludGVsX3VjX3Jlc2V0X3By
ZXBhcmUoJmd0LT51Yyk7CiAKIAlyZXR1cm4gYXdha2U7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfdWMuYwppbmRleCBmNDdlZTc2MDFhNjYuLjBjNDNkNTQ3YmM5NCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jCkBAIC0yMiwxOSArMjIsMjIgQEAKICAqCiAgKi8K
IAorI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfcmVzZXQuaCIK
LSNpbmNsdWRlICJpbnRlbF91Yy5oIgogI2luY2x1ZGUgImludGVsX2d1Yy5oIgogI2luY2x1ZGUg
ImludGVsX2d1Y19hZHMuaCIKICNpbmNsdWRlICJpbnRlbF9ndWNfc3VibWlzc2lvbi5oIgorI2lu
Y2x1ZGUgImludGVsX3VjLmgiCisKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogCiBzdGF0aWMgdm9p
ZCBndWNfZnJlZV9sb2FkX2Vycl9sb2coc3RydWN0IGludGVsX2d1YyAqZ3VjKTsKIAogLyogUmVz
ZXQgR3VDIHByb3ZpZGluZyB1cyB3aXRoIGZyZXNoIHN0YXRlIGZvciBib3RoIEd1QyBhbmQgSHVD
LgogICovCi1zdGF0aWMgaW50IF9faW50ZWxfdWNfcmVzZXRfaHcoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQorc3RhdGljIGludCBfX2ludGVsX3VjX3Jlc2V0X2h3KHN0cnVjdCBp
bnRlbF91YyAqdWMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdWNf
dG9fZ3QodWMpLT5pOTE1OwogCWludCByZXQ7CiAJdTMyIGd1Y19zdGF0dXM7CiAKQEAgLTUyLDE3
ICs1NSwxNyBAQCBzdGF0aWMgaW50IF9faW50ZWxfdWNfcmVzZXRfaHcoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogCXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyBpbnQgX19nZXRf
cGxhdGZvcm1fZW5hYmxlX2d1YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3N0YXRp
YyBpbnQgX19nZXRfcGxhdGZvcm1fZW5hYmxlX2d1YyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewot
CXN0cnVjdCBpbnRlbF91Y19mdyAqZ3VjX2Z3ID0gJmk5MTUtPmd0LnVjLmd1Yy5mdzsKLQlzdHJ1
Y3QgaW50ZWxfdWNfZncgKmh1Y19mdyA9ICZpOTE1LT5ndC51Yy5odWMuZnc7CisJc3RydWN0IGlu
dGVsX3VjX2Z3ICpndWNfZncgPSAmdWMtPmd1Yy5mdzsKKwlzdHJ1Y3QgaW50ZWxfdWNfZncgKmh1
Y19mdyA9ICZ1Yy0+aHVjLmZ3OwogCWludCBlbmFibGVfZ3VjID0gMDsKIAotCWlmICghSEFTX0dV
QyhpOTE1KSkKKwlpZiAoIUhBU19HVUModWNfdG9fZ3QodWMpLT5pOTE1KSkKIAkJcmV0dXJuIDA7
CiAKIAkvKiBXZSBkb24ndCB3YW50IHRvIGVuYWJsZSBHdUMvSHVDIG9uIHByZS1HZW4xMSBieSBk
ZWZhdWx0ICovCi0JaWYgKElOVEVMX0dFTihpOTE1KSA8IDExKQorCWlmIChJTlRFTF9HRU4odWNf
dG9fZ3QodWMpLT5pOTE1KSA8IDExKQogCQlyZXR1cm4gMDsKIAogCWlmIChpbnRlbF91Y19md19p
c19zZWxlY3RlZChndWNfZncpICYmIGludGVsX3VjX2Z3X2lzX3NlbGVjdGVkKGh1Y19mdykpCkBA
IC03MSwxMiArNzQsMTEgQEAgc3RhdGljIGludCBfX2dldF9wbGF0Zm9ybV9lbmFibGVfZ3VjKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCXJldHVybiBlbmFibGVfZ3VjOwogfQogCi1z
dGF0aWMgaW50IF9fZ2V0X2RlZmF1bHRfZ3VjX2xvZ19sZXZlbChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKK3N0YXRpYyBpbnQgX19nZXRfZGVmYXVsdF9ndWNfbG9nX2xldmVsKHN0cnVj
dCBpbnRlbF91YyAqdWMpCiB7CiAJaW50IGd1Y19sb2dfbGV2ZWw7CiAKLQlpZiAoIWludGVsX3Vj
X2Z3X3N1cHBvcnRlZCgmaTkxNS0+Z3QudWMuZ3VjLmZ3KSB8fAotCSAgICAhaW50ZWxfdWNfaXNf
dXNpbmdfZ3VjKGk5MTUpKQorCWlmICghaW50ZWxfdWNfZndfc3VwcG9ydGVkKCZ1Yy0+Z3VjLmZ3
KSB8fCAhaW50ZWxfdWNfaXNfdXNpbmdfZ3VjKHVjKSkKIAkJZ3VjX2xvZ19sZXZlbCA9IEdVQ19M
T0dfTEVWRUxfRElTQUJMRUQ7CiAJZWxzZSBpZiAoSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVf
REVCVUcpIHx8CiAJCSBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVR19HRU0pKQpAQCAt
OTEsNyArOTMsNyBAQCBzdGF0aWMgaW50IF9fZ2V0X2RlZmF1bHRfZ3VjX2xvZ19sZXZlbChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogLyoqCiAgKiBzYW5pdGl6ZV9vcHRpb25zX2Vh
cmx5IC0gc2FuaXRpemUgdUMgcmVsYXRlZCBtb2RwYXJhbSBvcHRpb25zCi0gKiBAaTkxNTogZGV2
aWNlIHByaXZhdGUKKyAqIEB1YzogdGhlIGludGVsX3VjIHN0cnVjdHVyZQogICoKICAqIEluIGNh
c2Ugb2YgImVuYWJsZV9ndWMiIG9wdGlvbiB0aGlzIGZ1bmN0aW9uIHdpbGwgYXR0ZW1wdCB0byBt
b2RpZnkKICAqIGl0IG9ubHkgaWYgaXQgd2FzIGluaXRpYWxseSBzZXQgdG8gImF1dG8oLTEpIi4g
RGVmYXVsdCB2YWx1ZSBmb3IgdGhpcwpAQCAtMTA2LDIyICsxMDgsMjIgQEAgc3RhdGljIGludCBf
X2dldF9kZWZhdWx0X2d1Y19sb2dfbGV2ZWwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUp
CiAgKiB1bmxlc3MgR3VDIGlzIGVuYWJsZWQgb24gZ2l2ZW4gcGxhdGZvcm0gYW5kIHRoZSBkcml2
ZXIgaXMgY29tcGlsZWQgd2l0aAogICogZGVidWcgY29uZmlnIHdoZW4gdGhpcyBtb2RwYXJhbSB3
aWxsIGRlZmF1bHQgdG8gImVuYWJsZSgxLi40KSIuCiAgKi8KLXN0YXRpYyB2b2lkIHNhbml0aXpl
X29wdGlvbnNfZWFybHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCitzdGF0aWMgdm9p
ZCBzYW5pdGl6ZV9vcHRpb25zX2Vhcmx5KHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7Ci0Jc3RydWN0
IGludGVsX3VjX2Z3ICpndWNfZncgPSAmaTkxNS0+Z3QudWMuZ3VjLmZ3OwotCXN0cnVjdCBpbnRl
bF91Y19mdyAqaHVjX2Z3ID0gJmk5MTUtPmd0LnVjLmh1Yy5mdzsKKwlzdHJ1Y3QgaW50ZWxfdWNf
ZncgKmd1Y19mdyA9ICZ1Yy0+Z3VjLmZ3OworCXN0cnVjdCBpbnRlbF91Y19mdyAqaHVjX2Z3ID0g
JnVjLT5odWMuZnc7CiAKIAkvKiBBIG5lZ2F0aXZlIHZhbHVlIG1lYW5zICJ1c2UgcGxhdGZvcm0g
ZGVmYXVsdCIgKi8KIAlpZiAoaTkxNV9tb2RwYXJhbXMuZW5hYmxlX2d1YyA8IDApCi0JCWk5MTVf
bW9kcGFyYW1zLmVuYWJsZV9ndWMgPSBfX2dldF9wbGF0Zm9ybV9lbmFibGVfZ3VjKGk5MTUpOwor
CQlpOTE1X21vZHBhcmFtcy5lbmFibGVfZ3VjID0gX19nZXRfcGxhdGZvcm1fZW5hYmxlX2d1Yyh1
Yyk7CiAKIAlEUk1fREVCVUdfRFJJVkVSKCJlbmFibGVfZ3VjPSVkIChzdWJtaXNzaW9uOiVzIGh1
YzolcylcbiIsCiAJCQkgaTkxNV9tb2RwYXJhbXMuZW5hYmxlX2d1YywKLQkJCSB5ZXNubyhpbnRl
bF91Y19pc191c2luZ19ndWNfc3VibWlzc2lvbihpOTE1KSksCi0JCQkgeWVzbm8oaW50ZWxfdWNf
aXNfdXNpbmdfaHVjKGk5MTUpKSk7CisJCQkgeWVzbm8oaW50ZWxfdWNfaXNfdXNpbmdfZ3VjX3N1
Ym1pc3Npb24odWMpKSwKKwkJCSB5ZXNubyhpbnRlbF91Y19pc191c2luZ19odWModWMpKSk7CiAK
IAkvKiBWZXJpZnkgR3VDIGZpcm13YXJlIGF2YWlsYWJpbGl0eSAqLwotCWlmIChpbnRlbF91Y19p
c191c2luZ19ndWMoaTkxNSkgJiYgIWludGVsX3VjX2Z3X2lzX3NlbGVjdGVkKGd1Y19mdykpIHsK
KwlpZiAoaW50ZWxfdWNfaXNfdXNpbmdfZ3VjKHVjKSAmJiAhaW50ZWxfdWNfZndfaXNfc2VsZWN0
ZWQoZ3VjX2Z3KSkgewogCQlEUk1fV0FSTigiSW5jb21wYXRpYmxlIG9wdGlvbiBkZXRlY3RlZDog
JXM9JWQsICVzIVxuIiwKIAkJCSAiZW5hYmxlX2d1YyIsIGk5MTVfbW9kcGFyYW1zLmVuYWJsZV9n
dWMsCiAJCQkgIWludGVsX3VjX2Z3X3N1cHBvcnRlZChndWNfZncpID8KQEAgLTEyOSw3ICsxMzEs
NyBAQCBzdGF0aWMgdm9pZCBzYW5pdGl6ZV9vcHRpb25zX2Vhcmx5KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogCX0KIAogCS8qIFZlcmlmeSBIdUMgZmlybXdhcmUgYXZhaWxhYmlsaXR5
ICovCi0JaWYgKGludGVsX3VjX2lzX3VzaW5nX2h1YyhpOTE1KSAmJiAhaW50ZWxfdWNfZndfaXNf
c2VsZWN0ZWQoaHVjX2Z3KSkgeworCWlmIChpbnRlbF91Y19pc191c2luZ19odWModWMpICYmICFp
bnRlbF91Y19md19pc19zZWxlY3RlZChodWNfZncpKSB7CiAJCURSTV9XQVJOKCJJbmNvbXBhdGli
bGUgb3B0aW9uIGRldGVjdGVkOiAlcz0lZCwgJXMhXG4iLAogCQkJICJlbmFibGVfZ3VjIiwgaTkx
NV9tb2RwYXJhbXMuZW5hYmxlX2d1YywKIAkJCSAhaW50ZWxfdWNfZndfc3VwcG9ydGVkKGh1Y19m
dykgPwpAQCAtMTM3LDcgKzEzOSw3IEBAIHN0YXRpYyB2b2lkIHNhbml0aXplX29wdGlvbnNfZWFy
bHkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQogCiAJLyogWFhYOiBHdUMgc3Vi
bWlzc2lvbiBpcyB1bmF2YWlsYWJsZSBmb3Igbm93ICovCi0JaWYgKGludGVsX3VjX2lzX3VzaW5n
X2d1Y19zdWJtaXNzaW9uKGk5MTUpKSB7CisJaWYgKGludGVsX3VjX2lzX3VzaW5nX2d1Y19zdWJt
aXNzaW9uKHVjKSkgewogCQlEUk1fSU5GTygiSW5jb21wYXRpYmxlIG9wdGlvbiBkZXRlY3RlZDog
JXM9JWQsICVzIVxuIiwKIAkJCSAiZW5hYmxlX2d1YyIsIGk5MTVfbW9kcGFyYW1zLmVuYWJsZV9n
dWMsCiAJCQkgIkd1QyBzdWJtaXNzaW9uIG5vdCBzdXBwb3J0ZWQiKTsKQEAgLTE0OCw5ICsxNTAs
OSBAQCBzdGF0aWMgdm9pZCBzYW5pdGl6ZV9vcHRpb25zX2Vhcmx5KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogCS8qIEEgbmVnYXRpdmUgdmFsdWUgbWVhbnMgInVzZSBwbGF0Zm9ybS9j
b25maWcgZGVmYXVsdCIgKi8KIAlpZiAoaTkxNV9tb2RwYXJhbXMuZ3VjX2xvZ19sZXZlbCA8IDAp
CiAJCWk5MTVfbW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWwgPQotCQkJX19nZXRfZGVmYXVsdF9ndWNf
bG9nX2xldmVsKGk5MTUpOworCQkJX19nZXRfZGVmYXVsdF9ndWNfbG9nX2xldmVsKHVjKTsKIAot
CWlmIChpOTE1X21vZHBhcmFtcy5ndWNfbG9nX2xldmVsID4gMCAmJiAhaW50ZWxfdWNfaXNfdXNp
bmdfZ3VjKGk5MTUpKSB7CisJaWYgKGk5MTVfbW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWwgPiAwICYm
ICFpbnRlbF91Y19pc191c2luZ19ndWModWMpKSB7CiAJCURSTV9XQVJOKCJJbmNvbXBhdGlibGUg
b3B0aW9uIGRldGVjdGVkOiAlcz0lZCwgJXMhXG4iLAogCQkJICJndWNfbG9nX2xldmVsIiwgaTkx
NV9tb2RwYXJhbXMuZ3VjX2xvZ19sZXZlbCwKIAkJCSAhaW50ZWxfdWNfZndfc3VwcG9ydGVkKGd1
Y19mdykgPwpAQCAtMTc2LDM0ICsxNzgsMjkgQEAgc3RhdGljIHZvaWQgc2FuaXRpemVfb3B0aW9u
c19lYXJseShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlHRU1fQlVHX09OKGk5MTVf
bW9kcGFyYW1zLmd1Y19sb2dfbGV2ZWwgPCAwKTsKIH0KIAotdm9pZCBpbnRlbF91Y19pbml0X2Vh
cmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQordm9pZCBpbnRlbF91Y19pbml0X2Vh
cmx5KHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7Ci0Jc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmk5
MTUtPmd0LnVjLmd1YzsKLQlzdHJ1Y3QgaW50ZWxfaHVjICpodWMgPSAmaTkxNS0+Z3QudWMuaHVj
OworCWludGVsX2d1Y19pbml0X2Vhcmx5KCZ1Yy0+Z3VjKTsKKwlpbnRlbF9odWNfaW5pdF9lYXJs
eSgmdWMtPmh1Yyk7CiAKLQlpbnRlbF9ndWNfaW5pdF9lYXJseShndWMpOwotCWludGVsX2h1Y19p
bml0X2Vhcmx5KGh1Yyk7Ci0KLQlzYW5pdGl6ZV9vcHRpb25zX2Vhcmx5KGk5MTUpOworCXNhbml0
aXplX29wdGlvbnNfZWFybHkodWMpOwogfQogCi12b2lkIGludGVsX3VjX2NsZWFudXBfZWFybHko
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCit2b2lkIGludGVsX3VjX2NsZWFudXBfZWFy
bHkoc3RydWN0IGludGVsX3VjICp1YykKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkx
NS0+Z3QudWMuZ3VjOwotCi0JZ3VjX2ZyZWVfbG9hZF9lcnJfbG9nKGd1Yyk7CisJZ3VjX2ZyZWVf
bG9hZF9lcnJfbG9nKCZ1Yy0+Z3VjKTsKIH0KIAogLyoqCiAgKiBpbnRlbF91Y19pbml0X21taW8g
LSBzZXR1cCB1QyBNTUlPIGFjY2VzcwotICogQGk5MTU6IGRldmljZSBwcml2YXRlCisgKiBAdWM6
IHRoZSBpbnRlbF91YyBzdHJ1Y3R1cmUKICAqCiAgKiBTZXR1cCBtaW5pbWFsIHN0YXRlIG5lY2Vz
c2FyeSBmb3IgTU1JTyBhY2Nlc3NlcyBsYXRlciBpbiB0aGUKICAqIGluaXRpYWxpemF0aW9uIHNl
cXVlbmNlLgogICovCi12b2lkIGludGVsX3VjX2luaXRfbW1pbyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKK3ZvaWQgaW50ZWxfdWNfaW5pdF9tbWlvKHN0cnVjdCBpbnRlbF91YyAqdWMp
CiB7Ci0JaW50ZWxfZ3VjX2luaXRfc2VuZF9yZWdzKCZpOTE1LT5ndC51Yy5ndWMpOworCWludGVs
X2d1Y19pbml0X3NlbmRfcmVncygmdWMtPmd1Yyk7CiB9CiAKIHN0YXRpYyB2b2lkIGd1Y19jYXB0
dXJlX2xvYWRfZXJyX2xvZyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCkBAIC0zNTAsNTQgKzM0Nyw1
NiBAQCBzdGF0aWMgdm9pZCBndWNfZGlzYWJsZV9jb21tdW5pY2F0aW9uKHN0cnVjdCBpbnRlbF9n
dWMgKmd1YykKIAlEUk1fSU5GTygiR3VDIGNvbW11bmljYXRpb24gZGlzYWJsZWRcbiIpOwogfQog
Ci12b2lkIGludGVsX3VjX2ZldGNoX2Zpcm13YXJlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKK3ZvaWQgaW50ZWxfdWNfZmV0Y2hfZmlybXdhcmVzKHN0cnVjdCBpbnRlbF91YyAqdWMp
CiB7Ci0JaWYgKCFVU0VTX0dVQyhpOTE1KSkKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSA9IHVjX3RvX2d0KHVjKS0+aTkxNTsKKworCWlmICghaW50ZWxfdWNfaXNfdXNpbmdfZ3VjKHVj
KSkKIAkJcmV0dXJuOwogCi0JaW50ZWxfdWNfZndfZmV0Y2goaTkxNSwgJmk5MTUtPmd0LnVjLmd1
Yy5mdyk7CisJaW50ZWxfdWNfZndfZmV0Y2goaTkxNSwgJnVjLT5ndWMuZncpOwogCi0JaWYgKFVT
RVNfSFVDKGk5MTUpKQotCQlpbnRlbF91Y19md19mZXRjaChpOTE1LCAmaTkxNS0+Z3QudWMuaHVj
LmZ3KTsKKwlpZiAoaW50ZWxfdWNfaXNfdXNpbmdfaHVjKHVjKSkKKwkJaW50ZWxfdWNfZndfZmV0
Y2goaTkxNSwgJnVjLT5odWMuZncpOwogfQogCi12b2lkIGludGVsX3VjX2NsZWFudXBfZmlybXdh
cmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQordm9pZCBpbnRlbF91Y19jbGVhbnVw
X2Zpcm13YXJlcyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewotCWlmICghVVNFU19HVUMoaTkxNSkp
CisJaWYgKCFpbnRlbF91Y19pc191c2luZ19ndWModWMpKQogCQlyZXR1cm47CiAKLQlpZiAoVVNF
U19IVUMoaTkxNSkpCi0JCWludGVsX3VjX2Z3X2NsZWFudXBfZmV0Y2goJmk5MTUtPmd0LnVjLmh1
Yy5mdyk7CisJaWYgKGludGVsX3VjX2lzX3VzaW5nX2h1Yyh1YykpCisJCWludGVsX3VjX2Z3X2Ns
ZWFudXBfZmV0Y2goJnVjLT5odWMuZncpOwogCi0JaW50ZWxfdWNfZndfY2xlYW51cF9mZXRjaCgm
aTkxNS0+Z3QudWMuZ3VjLmZ3KTsKKwlpbnRlbF91Y19md19jbGVhbnVwX2ZldGNoKCZ1Yy0+Z3Vj
LmZ3KTsKIH0KIAotaW50IGludGVsX3VjX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUpCitpbnQgaW50ZWxfdWNfaW5pdChzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewotCXN0cnVjdCBp
bnRlbF9ndWMgKmd1YyA9ICZpOTE1LT5ndC51Yy5ndWM7Ci0Jc3RydWN0IGludGVsX2h1YyAqaHVj
ID0gJmk5MTUtPmd0LnVjLmh1YzsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsK
KwlzdHJ1Y3QgaW50ZWxfaHVjICpodWMgPSAmdWMtPmh1YzsKIAlpbnQgcmV0OwogCi0JaWYgKCFV
U0VTX0dVQyhpOTE1KSkKKwlpZiAoIWludGVsX3VjX2lzX3VzaW5nX2d1Yyh1YykpCiAJCXJldHVy
biAwOwogCiAJaWYgKCFpbnRlbF91Y19md19zdXBwb3J0ZWQoJmd1Yy0+ZncpKQogCQlyZXR1cm4g
LUVOT0RFVjsKIAogCS8qIFhYWDogR3VDIHN1Ym1pc3Npb24gaXMgdW5hdmFpbGFibGUgZm9yIG5v
dyAqLwotCUdFTV9CVUdfT04oVVNFU19HVUNfU1VCTUlTU0lPTihpOTE1KSk7CisJR0VNX0JVR19P
TihpbnRlbF91Y19pc191c2luZ19ndWNfc3VibWlzc2lvbih1YykpOwogCiAJcmV0ID0gaW50ZWxf
Z3VjX2luaXQoZ3VjKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JaWYgKFVTRVNfSFVD
KGk5MTUpKSB7CisJaWYgKGludGVsX3VjX2lzX3VzaW5nX2h1Yyh1YykpIHsKIAkJcmV0ID0gaW50
ZWxfaHVjX2luaXQoaHVjKTsKIAkJaWYgKHJldCkKIAkJCWdvdG8gZXJyX2d1YzsKIAl9CiAKLQlp
ZiAoVVNFU19HVUNfU1VCTUlTU0lPTihpOTE1KSkgeworCWlmIChpbnRlbF91Y19pc191c2luZ19n
dWNfc3VibWlzc2lvbih1YykpIHsKIAkJLyoKIAkJICogVGhpcyBpcyBzdHVmZiB3ZSBuZWVkIHRv
IGhhdmUgYXZhaWxhYmxlIGF0IGZ3IGxvYWQgdGltZQogCQkgKiBpZiB3ZSBhcmUgcGxhbm5pbmcg
dG8gZW5hYmxlIHN1Ym1pc3Npb24gbGF0ZXIKQEAgLTQxMCw1OSArNDA5LDYwIEBAIGludCBpbnRl
bF91Y19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCXJldHVybiAwOwogCiBl
cnJfaHVjOgotCWlmIChVU0VTX0hVQyhpOTE1KSkKKwlpZiAoaW50ZWxfdWNfaXNfdXNpbmdfaHVj
KHVjKSkKIAkJaW50ZWxfaHVjX2ZpbmkoaHVjKTsKIGVycl9ndWM6CiAJaW50ZWxfZ3VjX2Zpbmko
Z3VjKTsKIAlyZXR1cm4gcmV0OwogfQogCi12b2lkIGludGVsX3VjX2Zpbmkoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpCit2b2lkIGludGVsX3VjX2Zpbmkoc3RydWN0IGludGVsX3VjICp1
YykKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkxNS0+Z3QudWMuZ3VjOworCXN0cnVj
dCBpbnRlbF9ndWMgKmd1YyA9ICZ1Yy0+Z3VjOwogCi0JaWYgKCFVU0VTX0dVQyhpOTE1KSkKKwlp
ZiAoIWludGVsX3VjX2lzX3VzaW5nX2d1Yyh1YykpCiAJCXJldHVybjsKIAogCUdFTV9CVUdfT04o
IWludGVsX3VjX2Z3X3N1cHBvcnRlZCgmZ3VjLT5mdykpOwogCi0JaWYgKFVTRVNfR1VDX1NVQk1J
U1NJT04oaTkxNSkpCisJaWYgKGludGVsX3VjX2lzX3VzaW5nX2d1Y19zdWJtaXNzaW9uKHVjKSkK
IAkJaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZmluaShndWMpOwogCi0JaWYgKFVTRVNfSFVDKGk5MTUp
KQotCQlpbnRlbF9odWNfZmluaSgmaTkxNS0+Z3QudWMuaHVjKTsKKwlpZiAoaW50ZWxfdWNfaXNf
dXNpbmdfaHVjKHVjKSkKKwkJaW50ZWxfaHVjX2ZpbmkoJnVjLT5odWMpOwogCiAJaW50ZWxfZ3Vj
X2ZpbmkoZ3VjKTsKIH0KIAotc3RhdGljIHZvaWQgX191Y19zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSkKK3N0YXRpYyB2b2lkIF9fdWNfc2FuaXRpemUoc3RydWN0IGludGVs
X3VjICp1YykKIHsKLQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkxNS0+Z3QudWMuZ3VjOwot
CXN0cnVjdCBpbnRlbF9odWMgKmh1YyA9ICZpOTE1LT5ndC51Yy5odWM7CisJc3RydWN0IGludGVs
X2d1YyAqZ3VjID0gJnVjLT5ndWM7CisJc3RydWN0IGludGVsX2h1YyAqaHVjID0gJnVjLT5odWM7
CiAKIAlHRU1fQlVHX09OKCFpbnRlbF91Y19md19zdXBwb3J0ZWQoJmd1Yy0+ZncpKTsKIAogCWlu
dGVsX2h1Y19zYW5pdGl6ZShodWMpOwogCWludGVsX2d1Y19zYW5pdGl6ZShndWMpOwogCi0JX19p
bnRlbF91Y19yZXNldF9odyhpOTE1KTsKKwlfX2ludGVsX3VjX3Jlc2V0X2h3KHVjKTsKIH0KIAot
dm9pZCBpbnRlbF91Y19zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3Zv
aWQgaW50ZWxfdWNfc2FuaXRpemUoc3RydWN0IGludGVsX3VjICp1YykKIHsKLQlpZiAoIVVTRVNf
R1VDKGk5MTUpKQorCWlmICghaW50ZWxfdWNfaXNfdXNpbmdfZ3VjKHVjKSkKIAkJcmV0dXJuOwog
Ci0JX191Y19zYW5pdGl6ZShpOTE1KTsKKwlfX3VjX3Nhbml0aXplKHVjKTsKIH0KIAotaW50IGlu
dGVsX3VjX2luaXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCitpbnQgaW50ZWxf
dWNfaW5pdF9odyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewotCXN0cnVjdCBpbnRlbF9ndWMgKmd1
YyA9ICZpOTE1LT5ndC51Yy5ndWM7Ci0Jc3RydWN0IGludGVsX2h1YyAqaHVjID0gJmk5MTUtPmd0
LnVjLmh1YzsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHVjX3RvX2d0KHVjKS0+
aTkxNTsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsKKwlzdHJ1Y3QgaW50ZWxf
aHVjICpodWMgPSAmdWMtPmh1YzsKIAlpbnQgcmV0LCBhdHRlbXB0czsKIAotCWlmICghVVNFU19H
VUMoaTkxNSkpCisJaWYgKCFpbnRlbF91Y19pc191c2luZ19ndWModWMpKQogCQlyZXR1cm4gMDsK
IAogCUdFTV9CVUdfT04oIWludGVsX3VjX2Z3X3N1cHBvcnRlZCgmZ3VjLT5mdykpOwpAQCAtNDgx
LDExICs0ODEsMTEgQEAgaW50IGludGVsX3VjX2luaXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCiAJCSAqIEFsd2F5cyByZXNldCB0aGUgR3VDIGp1c3QgYmVmb3JlIChyZSlsb2Fk
aW5nLCBzbwogCQkgKiB0aGF0IHRoZSBzdGF0ZSBhbmQgdGltaW5nIGFyZSBmYWlybHkgcHJlZGlj
dGFibGUKIAkJICovCi0JCXJldCA9IF9faW50ZWxfdWNfcmVzZXRfaHcoaTkxNSk7CisJCXJldCA9
IF9faW50ZWxfdWNfcmVzZXRfaHcodWMpOwogCQlpZiAocmV0KQogCQkJZ290byBlcnJfb3V0Owog
Ci0JCWlmIChVU0VTX0hVQyhpOTE1KSkgeworCQlpZiAoaW50ZWxfdWNfaXNfdXNpbmdfaHVjKHVj
KSkgewogCQkJcmV0ID0gaW50ZWxfaHVjX2Z3X3VwbG9hZChodWMpOwogCQkJaWYgKHJldCkKIAkJ
CQlnb3RvIGVycl9vdXQ7CkBAIC01MDksNyArNTA5LDcgQEAgaW50IGludGVsX3VjX2luaXRfaHco
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJaWYgKHJldCkKIAkJZ290byBlcnJfbG9n
X2NhcHR1cmU7CiAKLQlpZiAoVVNFU19IVUMoaTkxNSkpIHsKKwlpZiAoaW50ZWxfdWNfaXNfdXNp
bmdfaHVjKHVjKSkgewogCQlyZXQgPSBpbnRlbF9odWNfYXV0aChodWMpOwogCQlpZiAocmV0KQog
CQkJZ290byBlcnJfY29tbXVuaWNhdGlvbjsKQEAgLTUxOSw3ICs1MTksNyBAQCBpbnQgaW50ZWxf
dWNfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlpZiAocmV0KQogCQln
b3RvIGVycl9jb21tdW5pY2F0aW9uOwogCi0JaWYgKFVTRVNfR1VDX1NVQk1JU1NJT04oaTkxNSkp
IHsKKwlpZiAoaW50ZWxfdWNfaXNfdXNpbmdfZ3VjX3N1Ym1pc3Npb24odWMpKSB7CiAJCXJldCA9
IGludGVsX2d1Y19zdWJtaXNzaW9uX2VuYWJsZShndWMpOwogCQlpZiAocmV0KQogCQkJZ290byBl
cnJfY29tbXVuaWNhdGlvbjsKQEAgLTUyOCw5ICs1MjgsOSBAQCBpbnQgaW50ZWxfdWNfaW5pdF9o
dyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlkZXZfaW5mbyhpOTE1LT5kcm0uZGV2
LCAiR3VDIGZpcm13YXJlIHZlcnNpb24gJXUuJXVcbiIsCiAJCSBndWMtPmZ3Lm1ham9yX3Zlcl9m
b3VuZCwgZ3VjLT5mdy5taW5vcl92ZXJfZm91bmQpOwogCWRldl9pbmZvKGk5MTUtPmRybS5kZXYs
ICJHdUMgc3VibWlzc2lvbiAlc1xuIiwKLQkJIGVuYWJsZWRkaXNhYmxlZChVU0VTX0dVQ19TVUJN
SVNTSU9OKGk5MTUpKSk7CisJCSBlbmFibGVkZGlzYWJsZWQoaW50ZWxfdWNfaXNfdXNpbmdfZ3Vj
X3N1Ym1pc3Npb24odWMpKSk7CiAJZGV2X2luZm8oaTkxNS0+ZHJtLmRldiwgIkh1QyAlc1xuIiwK
LQkJIGVuYWJsZWRkaXNhYmxlZChVU0VTX0hVQyhpOTE1KSkpOworCQkgZW5hYmxlZGRpc2FibGVk
KGludGVsX3VjX2lzX3VzaW5nX2h1Yyh1YykpKTsKIAogCXJldHVybiAwOwogCkBAIC01NDIsNyAr
NTQyLDcgQEAgaW50IGludGVsX3VjX2luaXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUpCiBlcnJfbG9nX2NhcHR1cmU6CiAJZ3VjX2NhcHR1cmVfbG9hZF9lcnJfbG9nKGd1Yyk7CiBl
cnJfb3V0OgotCV9fdWNfc2FuaXRpemUoaTkxNSk7CisJX191Y19zYW5pdGl6ZSh1Yyk7CiAKIAkv
KgogCSAqIE5vdGUgdGhhdCB0aGVyZSBpcyBubyBmYWxsYmFjayBhcyBlaXRoZXIgdXNlciBleHBs
aWNpdGx5IGFza2VkIGZvcgpAQCAtNTU1LDQyICs1NTUsNDIgQEAgaW50IGludGVsX3VjX2luaXRf
aHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJcmV0dXJuIHJldDsKIH0KIAotdm9p
ZCBpbnRlbF91Y19maW5pX2h3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQordm9pZCBp
bnRlbF91Y19maW5pX2h3KHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7Ci0Jc3RydWN0IGludGVsX2d1
YyAqZ3VjID0gJmk5MTUtPmd0LnVjLmd1YzsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMt
Pmd1YzsKIAogCWlmICghaW50ZWxfZ3VjX2lzX2xvYWRlZChndWMpKQogCQlyZXR1cm47CiAKIAlH
RU1fQlVHX09OKCFpbnRlbF91Y19md19zdXBwb3J0ZWQoJmd1Yy0+ZncpKTsKIAotCWlmIChVU0VT
X0dVQ19TVUJNSVNTSU9OKGk5MTUpKQorCWlmIChpbnRlbF91Y19pc191c2luZ19ndWNfc3VibWlz
c2lvbih1YykpCiAJCWludGVsX2d1Y19zdWJtaXNzaW9uX2Rpc2FibGUoZ3VjKTsKIAogCWd1Y19k
aXNhYmxlX2NvbW11bmljYXRpb24oZ3VjKTsKLQlfX3VjX3Nhbml0aXplKGk5MTUpOworCV9fdWNf
c2FuaXRpemUodWMpOwogfQogCiAvKioKICAqIGludGVsX3VjX3Jlc2V0X3ByZXBhcmUgLSBQcmVw
YXJlIGZvciByZXNldAotICogQGk5MTU6IGRldmljZSBwcml2YXRlCisgKiBAdWM6IHRoZSBpbnRl
bF91YyBzdHJ1Y3R1cmUKICAqCiAgKiBQcmVwYXJpbmcgZm9yIGZ1bGwgZ3B1IHJlc2V0LgogICov
Ci12b2lkIGludGVsX3VjX3Jlc2V0X3ByZXBhcmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUpCit2b2lkIGludGVsX3VjX3Jlc2V0X3ByZXBhcmUoc3RydWN0IGludGVsX3VjICp1YykKIHsK
LQlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmaTkxNS0+Z3QudWMuZ3VjOworCXN0cnVjdCBpbnRl
bF9ndWMgKmd1YyA9ICZ1Yy0+Z3VjOwogCiAJaWYgKCFpbnRlbF9ndWNfaXNfbG9hZGVkKGd1Yykp
CiAJCXJldHVybjsKIAogCWd1Y19zdG9wX2NvbW11bmljYXRpb24oZ3VjKTsKLQlfX3VjX3Nhbml0
aXplKGk5MTUpOworCV9fdWNfc2FuaXRpemUodWMpOwogfQogCi12b2lkIGludGVsX3VjX3J1bnRp
bWVfc3VzcGVuZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3ZvaWQgaW50ZWxfdWNf
cnVudGltZV9zdXNwZW5kKHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7Ci0Jc3RydWN0IGludGVsX2d1
YyAqZ3VjID0gJmk5MTUtPmd0LnVjLmd1YzsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMt
Pmd1YzsKIAlpbnQgZXJyOwogCiAJaWYgKCFpbnRlbF9ndWNfaXNfbG9hZGVkKGd1YykpCkBAIC02
MDMsMjEgKzYwMywyMSBAQCB2b2lkIGludGVsX3VjX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlndWNfZGlzYWJsZV9jb21tdW5pY2F0aW9uKGd1Yyk7CiB9
CiAKLXZvaWQgaW50ZWxfdWNfc3VzcGVuZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkK
K3ZvaWQgaW50ZWxfdWNfc3VzcGVuZChzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewotCXN0cnVjdCBp
bnRlbF9ndWMgKmd1YyA9ICZpOTE1LT5ndC51Yy5ndWM7CisJc3RydWN0IGludGVsX2d1YyAqZ3Vj
ID0gJnVjLT5ndWM7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CiAKIAlpZiAoIWludGVsX2d1
Y19pc19sb2FkZWQoZ3VjKSkKIAkJcmV0dXJuOwogCi0Jd2l0aF9pbnRlbF9ydW50aW1lX3BtKCZp
OTE1LT5ydW50aW1lX3BtLCB3YWtlcmVmKQotCQlpbnRlbF91Y19ydW50aW1lX3N1c3BlbmQoaTkx
NSk7CisJd2l0aF9pbnRlbF9ydW50aW1lX3BtKCZ1Y190b19ndCh1YyktPmk5MTUtPnJ1bnRpbWVf
cG0sIHdha2VyZWYpCisJCWludGVsX3VjX3J1bnRpbWVfc3VzcGVuZCh1Yyk7CiB9CiAKLWludCBp
bnRlbF91Y19yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCitpbnQgaW50ZWxf
dWNfcmVzdW1lKHN0cnVjdCBpbnRlbF91YyAqdWMpCiB7Ci0Jc3RydWN0IGludGVsX2d1YyAqZ3Vj
ID0gJmk5MTUtPmd0LnVjLmd1YzsKKwlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmdWMtPmd1YzsK
IAlpbnQgZXJyOwogCiAJaWYgKCFpbnRlbF9ndWNfaXNfbG9hZGVkKGd1YykpCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5oIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvdWMvaW50ZWxfdWMuaAppbmRleCBhMmZkYzg0YWZmZjIuLmZlMzM2MmZkNzcwNiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWMuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5oCkBAIC0zMywzNCArMzMsMzQgQEAg
c3RydWN0IGludGVsX3VjIHsKIAlzdHJ1Y3QgaW50ZWxfaHVjIGh1YzsKIH07CiAKLXZvaWQgaW50
ZWxfdWNfaW5pdF9lYXJseShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotdm9p
ZCBpbnRlbF91Y19jbGVhbnVwX2Vhcmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dik7Ci12b2lkIGludGVsX3VjX2luaXRfbW1pbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpOwotdm9pZCBpbnRlbF91Y19mZXRjaF9maXJtd2FyZXMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KTsKLXZvaWQgaW50ZWxfdWNfY2xlYW51cF9maXJtd2FyZXMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLXZvaWQgaW50ZWxfdWNfc2FuaXRpemUoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLWludCBpbnRlbF91Y19pbml0X2h3KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Ci12b2lkIGludGVsX3VjX2ZpbmlfaHco
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLWludCBpbnRlbF91Y19pbml0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Ci12b2lkIGludGVsX3VjX2Zpbmkoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKLXZvaWQgaW50ZWxfdWNfcmVzZXRfcHJl
cGFyZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7Ci12b2lkIGludGVsX3VjX3N1c3Bl
bmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwotdm9pZCBpbnRlbF91Y19ydW50aW1l
X3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwotaW50IGludGVsX3VjX3Jl
c3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwordm9pZCBpbnRlbF91Y19p
bml0X2Vhcmx5KHN0cnVjdCBpbnRlbF91YyAqdWMpOwordm9pZCBpbnRlbF91Y19jbGVhbnVwX2Vh
cmx5KHN0cnVjdCBpbnRlbF91YyAqdWMpOwordm9pZCBpbnRlbF91Y19pbml0X21taW8oc3RydWN0
IGludGVsX3VjICp1Yyk7Cit2b2lkIGludGVsX3VjX2ZldGNoX2Zpcm13YXJlcyhzdHJ1Y3QgaW50
ZWxfdWMgKnVjKTsKK3ZvaWQgaW50ZWxfdWNfY2xlYW51cF9maXJtd2FyZXMoc3RydWN0IGludGVs
X3VjICp1Yyk7Cit2b2lkIGludGVsX3VjX3Nhbml0aXplKHN0cnVjdCBpbnRlbF91YyAqdWMpOwor
aW50IGludGVsX3VjX2luaXRfaHcoc3RydWN0IGludGVsX3VjICp1Yyk7Cit2b2lkIGludGVsX3Vj
X2ZpbmlfaHcoc3RydWN0IGludGVsX3VjICp1Yyk7CitpbnQgaW50ZWxfdWNfaW5pdChzdHJ1Y3Qg
aW50ZWxfdWMgKnVjKTsKK3ZvaWQgaW50ZWxfdWNfZmluaShzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsK
K3ZvaWQgaW50ZWxfdWNfcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsKK3ZvaWQg
aW50ZWxfdWNfc3VzcGVuZChzdHJ1Y3QgaW50ZWxfdWMgKnVjKTsKK3ZvaWQgaW50ZWxfdWNfcnVu
dGltZV9zdXNwZW5kKHN0cnVjdCBpbnRlbF91YyAqdWMpOworaW50IGludGVsX3VjX3Jlc3VtZShz
dHJ1Y3QgaW50ZWxfdWMgKnVjKTsKIAotc3RhdGljIGlubGluZSBib29sIGludGVsX3VjX2lzX3Vz
aW5nX2d1YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3N0YXRpYyBpbmxpbmUgYm9v
bCBpbnRlbF91Y19pc191c2luZ19ndWMoc3RydWN0IGludGVsX3VjICp1YykKIHsKIAlHRU1fQlVH
X09OKGk5MTVfbW9kcGFyYW1zLmVuYWJsZV9ndWMgPCAwKTsKIAlyZXR1cm4gaTkxNV9tb2RwYXJh
bXMuZW5hYmxlX2d1YyA+IDA7CiB9CiAKLXN0YXRpYyBpbmxpbmUgYm9vbCBpbnRlbF91Y19pc191
c2luZ19ndWNfc3VibWlzc2lvbihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3N0YXRp
YyBpbmxpbmUgYm9vbCBpbnRlbF91Y19pc191c2luZ19ndWNfc3VibWlzc2lvbihzdHJ1Y3QgaW50
ZWxfdWMgKnVjKQogewogCUdFTV9CVUdfT04oaTkxNV9tb2RwYXJhbXMuZW5hYmxlX2d1YyA8IDAp
OwogCXJldHVybiBpOTE1X21vZHBhcmFtcy5lbmFibGVfZ3VjICYgRU5BQkxFX0dVQ19TVUJNSVNT
SU9OOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgaW50ZWxfdWNfaXNfdXNpbmdfaHVjKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KQorc3RhdGljIGlubGluZSBib29sIGludGVsX3VjX2lz
X3VzaW5nX2h1YyhzdHJ1Y3QgaW50ZWxfdWMgKnVjKQogewogCUdFTV9CVUdfT04oaTkxNV9tb2Rw
YXJhbXMuZW5hYmxlX2d1YyA8IDApOwogCXJldHVybiBpOTE1X21vZHBhcmFtcy5lbmFibGVfZ3Vj
ICYgRU5BQkxFX0dVQ19MT0FEX0hVQzsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCmluZGV4IDY2NGYx
N2I0ODc2ZC4uN2MyMDk3NDNlNDc4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKQEAgLTk0MCw3
ICs5NDAsNyBAQCBzdGF0aWMgaW50IGk5MTVfZHJpdmVyX2Vhcmx5X3Byb2JlKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpbnRlbF9kZXRlY3RfcGNoKGRldl9wcml2KTsKIAog
CWludGVsX3dvcGNtX2luaXRfZWFybHkoJmRldl9wcml2LT53b3BjbSk7Ci0JaW50ZWxfdWNfaW5p
dF9lYXJseShkZXZfcHJpdik7CisJaW50ZWxfdWNfaW5pdF9lYXJseSgmZGV2X3ByaXYtPmd0LnVj
KTsKIAlpbnRlbF9wbV9zZXR1cChkZXZfcHJpdik7CiAJaW50ZWxfaW5pdF9kcGlvKGRldl9wcml2
KTsKIAlyZXQgPSBpbnRlbF9wb3dlcl9kb21haW5zX2luaXQoZGV2X3ByaXYpOwpAQCAtOTU3LDcg
Kzk1Nyw3IEBAIHN0YXRpYyBpbnQgaTkxNV9kcml2ZXJfZWFybHlfcHJvYmUoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQogCXJldHVybiAwOwogCiBlcnJfdWM6Ci0JaW50ZWxfdWNf
Y2xlYW51cF9lYXJseShkZXZfcHJpdik7CisJaW50ZWxfdWNfY2xlYW51cF9lYXJseSgmZGV2X3By
aXYtPmd0LnVjKTsKIAlpOTE1X2dlbV9jbGVhbnVwX2Vhcmx5KGRldl9wcml2KTsKIGVycl93b3Jr
cXVldWVzOgogCWk5MTVfd29ya3F1ZXVlc19jbGVhbnVwKGRldl9wcml2KTsKQEAgLTk3NSw3ICs5
NzUsNyBAQCBzdGF0aWMgdm9pZCBpOTE1X2RyaXZlcl9sYXRlX3JlbGVhc2Uoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCWludGVsX2lycV9maW5pKGRldl9wcml2KTsKIAlp
bnRlbF9wb3dlcl9kb21haW5zX2NsZWFudXAoZGV2X3ByaXYpOwotCWludGVsX3VjX2NsZWFudXBf
ZWFybHkoZGV2X3ByaXYpOworCWludGVsX3VjX2NsZWFudXBfZWFybHkoJmRldl9wcml2LT5ndC51
Yyk7CiAJaTkxNV9nZW1fY2xlYW51cF9lYXJseShkZXZfcHJpdik7CiAJaTkxNV93b3JrcXVldWVz
X2NsZWFudXAoZGV2X3ByaXYpOwogCWk5MTVfZW5naW5lc19jbGVhbnVwKGRldl9wcml2KTsKQEAg
LTEwMTQsNyArMTAxNCw3IEBAIHN0YXRpYyBpbnQgaTkxNV9kcml2ZXJfbW1pb19wcm9iZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAlpbnRlbF91bmNvcmVfcHJ1bmVfbW1p
b19kb21haW5zKCZkZXZfcHJpdi0+dW5jb3JlKTsKIAotCWludGVsX3VjX2luaXRfbW1pbyhkZXZf
cHJpdik7CisJaW50ZWxfdWNfaW5pdF9tbWlvKCZkZXZfcHJpdi0+Z3QudWMpOwogCiAJcmV0ID0g
aW50ZWxfZW5naW5lc19pbml0X21taW8oZGV2X3ByaXYpOwogCWlmIChyZXQpCkBAIC0yOTM5LDcg
KzI5MzksNyBAQCBzdGF0aWMgaW50IGludGVsX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZGV2aWNl
ICprZGV2KQogCSAqLwogCWk5MTVfZ2VtX3J1bnRpbWVfc3VzcGVuZChkZXZfcHJpdik7CiAKLQlp
bnRlbF91Y19ydW50aW1lX3N1c3BlbmQoZGV2X3ByaXYpOworCWludGVsX3VjX3J1bnRpbWVfc3Vz
cGVuZCgmZGV2X3ByaXYtPmd0LnVjKTsKIAogCWludGVsX3J1bnRpbWVfcG1fZGlzYWJsZV9pbnRl
cnJ1cHRzKGRldl9wcml2KTsKIApAQCAtMjk2NCw3ICsyOTY0LDcgQEAgc3RhdGljIGludCBpbnRl
bF9ydW50aW1lX3N1c3BlbmQoc3RydWN0IGRldmljZSAqa2RldikKIAogCQlpbnRlbF9ydW50aW1l
X3BtX2VuYWJsZV9pbnRlcnJ1cHRzKGRldl9wcml2KTsKIAotCQlpbnRlbF91Y19yZXN1bWUoZGV2
X3ByaXYpOworCQlpbnRlbF91Y19yZXN1bWUoJmRldl9wcml2LT5ndC51Yyk7CiAKIAkJaW50ZWxf
Z3RfaW5pdF9zd2l6emxpbmcoJmRldl9wcml2LT5ndCk7CiAJCWk5MTVfZ2VtX3Jlc3RvcmVfZmVu
Y2VzKGRldl9wcml2KTsKQEAgLTMwNjIsNyArMzA2Miw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfcnVu
dGltZV9yZXN1bWUoc3RydWN0IGRldmljZSAqa2RldikKIAogCWludGVsX3J1bnRpbWVfcG1fZW5h
YmxlX2ludGVycnVwdHMoZGV2X3ByaXYpOwogCi0JaW50ZWxfdWNfcmVzdW1lKGRldl9wcml2KTsK
KwlpbnRlbF91Y19yZXN1bWUoJmRldl9wcml2LT5ndC51Yyk7CiAKIAkvKgogCSAqIE5vIHBvaW50
IG9mIHJvbGxpbmcgYmFjayB0aGluZ3MgaW4gY2FzZSBvZiBhbiBlcnJvciwgYXMgdGhlIGJlc3QK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDlkOTI1MTZhZjA2NS4uODcwMDQ1MmNiMWIzIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTIyOTUsOSArMjI5NSw5IEBAIElTX1NVQlBMQVRG
T1JNKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogI2RlZmluZSBIQVNfSFVD
X1VDT0RFKGRldl9wcml2KQkoSEFTX0dVQyhkZXZfcHJpdikpCiAKIC8qIEhhdmluZyBhIEd1QyBp
cyBub3QgdGhlIHNhbWUgYXMgdXNpbmcgYSBHdUMgKi8KLSNkZWZpbmUgVVNFU19HVUMoZGV2X3By
aXYpCQlpbnRlbF91Y19pc191c2luZ19ndWMoZGV2X3ByaXYpCi0jZGVmaW5lIFVTRVNfR1VDX1NV
Qk1JU1NJT04oZGV2X3ByaXYpCWludGVsX3VjX2lzX3VzaW5nX2d1Y19zdWJtaXNzaW9uKGRldl9w
cml2KQotI2RlZmluZSBVU0VTX0hVQyhkZXZfcHJpdikJCWludGVsX3VjX2lzX3VzaW5nX2h1Yyhk
ZXZfcHJpdikKKyNkZWZpbmUgVVNFU19HVUMoZGV2X3ByaXYpCQlpbnRlbF91Y19pc191c2luZ19n
dWMoJihkZXZfcHJpdiktPmd0LnVjKQorI2RlZmluZSBVU0VTX0dVQ19TVUJNSVNTSU9OKGRldl9w
cml2KQlpbnRlbF91Y19pc191c2luZ19ndWNfc3VibWlzc2lvbigmKGRldl9wcml2KS0+Z3QudWMp
CisjZGVmaW5lIFVTRVNfSFVDKGRldl9wcml2KQkJaW50ZWxfdWNfaXNfdXNpbmdfaHVjKCYoZGV2
X3ByaXYpLT5ndC51YykKIAogI2RlZmluZSBIQVNfUE9PTEVEX0VVKGRldl9wcml2KQkoSU5URUxf
SU5GTyhkZXZfcHJpdiktPmhhc19wb29sZWRfZXUpCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmlu
ZGV4IGY2MmRiZDhjODZkZS4uYTIwN2I5MDkyNGU0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMK
QEAgLTEyNDgsNyArMTI0OCw3IEBAIGludCBpOTE1X2dlbV9pbml0X2h3KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KQogCX0KIAogCS8qIFdlIGNhbid0IGVuYWJsZSBjb250ZXh0cyB1bnRp
bCBhbGwgZmlybXdhcmUgaXMgbG9hZGVkICovCi0JcmV0ID0gaW50ZWxfdWNfaW5pdF9odyhpOTE1
KTsKKwlyZXQgPSBpbnRlbF91Y19pbml0X2h3KCZpOTE1LT5ndC51Yyk7CiAJaWYgKHJldCkgewog
CQlEUk1fRVJST1IoIkVuYWJsaW5nIHVjIGZhaWxlZCAoJWQpXG4iLCByZXQpOwogCQlnb3RvIG91
dDsKQEAgLTE0MzMsNyArMTQzMyw3IEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdikKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JaW50ZWxf
dWNfZmV0Y2hfZmlybXdhcmVzKGRldl9wcml2KTsKKwlpbnRlbF91Y19mZXRjaF9maXJtd2FyZXMo
JmRldl9wcml2LT5ndC51Yyk7CiAKIAlyZXQgPSBpbnRlbF93b3BjbV9pbml0KCZkZXZfcHJpdi0+
d29wY20pOwogCWlmIChyZXQpCkBAIC0xNDgxLDcgKzE0ODEsNyBAQCBpbnQgaTkxNV9nZW1faW5p
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAlpbnRlbF9pbml0X2d0X3Bv
d2Vyc2F2ZShkZXZfcHJpdik7CiAKLQlyZXQgPSBpbnRlbF91Y19pbml0KGRldl9wcml2KTsKKwly
ZXQgPSBpbnRlbF91Y19pbml0KCZkZXZfcHJpdi0+Z3QudWMpOwogCWlmIChyZXQpCiAJCWdvdG8g
ZXJyX3BtOwogCkBAIC0xNTQ1LDkgKzE1NDUsOSBAQCBpbnQgaTkxNV9nZW1faW5pdChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHJt
LnN0cnVjdF9tdXRleCk7CiBlcnJfaW5pdF9odzoKLQlpbnRlbF91Y19maW5pX2h3KGRldl9wcml2
KTsKKwlpbnRlbF91Y19maW5pX2h3KCZkZXZfcHJpdi0+Z3QudWMpOwogZXJyX3VjX2luaXQ6Ci0J
aW50ZWxfdWNfZmluaShkZXZfcHJpdik7CisJaW50ZWxfdWNfZmluaSgmZGV2X3ByaXYtPmd0LnVj
KTsKIGVycl9wbToKIAlpZiAocmV0ICE9IC1FSU8pIHsKIAkJaW50ZWxfY2xlYW51cF9ndF9wb3dl
cnNhdmUoZGV2X3ByaXYpOwpAQCAtMTU2NCw3ICsxNTY0LDcgQEAgaW50IGk5MTVfZ2VtX2luaXQo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCW11dGV4X3VubG9jaygmZGV2X3By
aXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCiBlcnJfdWNfZnc6Ci0JaW50ZWxfdWNfY2xlYW51cF9m
aXJtd2FyZXMoZGV2X3ByaXYpOworCWludGVsX3VjX2NsZWFudXBfZmlybXdhcmVzKCZkZXZfcHJp
di0+Z3QudWMpOwogCiAJaWYgKHJldCAhPSAtRUlPKSB7CiAJCWk5MTVfZ2VtX2NsZWFudXBfdXNl
cnB0cihkZXZfcHJpdik7CkBAIC0xNjExLDggKzE2MTEsOCBAQCB2b2lkIGk5MTVfZ2VtX2RyaXZl
cl9yZW1vdmUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCWk5MTVfZ2VtX2Ry
YWluX3dvcmtxdWV1ZShkZXZfcHJpdik7CiAKIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0
cnVjdF9tdXRleCk7Ci0JaW50ZWxfdWNfZmluaV9odyhkZXZfcHJpdik7Ci0JaW50ZWxfdWNfZmlu
aShkZXZfcHJpdik7CisJaW50ZWxfdWNfZmluaV9odygmZGV2X3ByaXYtPmd0LnVjKTsKKwlpbnRl
bF91Y19maW5pKCZkZXZfcHJpdi0+Z3QudWMpOwogCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOwogCiAJaTkxNV9nZW1fZHJhaW5fZnJlZWRfb2JqZWN0cyhkZXZfcHJp
dik7CkBAIC0xNjMwLDcgKzE2MzAsNyBAQCB2b2lkIGk5MTVfZ2VtX2RyaXZlcl9yZWxlYXNlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogCWludGVsX2NsZWFudXBfZ3RfcG93
ZXJzYXZlKGRldl9wcml2KTsKIAotCWludGVsX3VjX2NsZWFudXBfZmlybXdhcmVzKGRldl9wcml2
KTsKKwlpbnRlbF91Y19jbGVhbnVwX2Zpcm13YXJlcygmZGV2X3ByaXYtPmd0LnVjKTsKIAlpOTE1
X2dlbV9jbGVhbnVwX3VzZXJwdHIoZGV2X3ByaXYpOwogCWludGVsX3RpbWVsaW5lc19maW5pKGRl
dl9wcml2KTsKIAotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5m
by9pbnRlbC1nZng=

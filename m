Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3B8E8124CD2
	for <lists+intel-gfx@lfdr.de>; Wed, 18 Dec 2019 17:11:43 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 831D26E0BE;
	Wed, 18 Dec 2019 16:11:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 446566E873
 for <intel-gfx@lists.freedesktop.org>; Wed, 18 Dec 2019 16:11:37 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Dec 2019 08:11:37 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,330,1571727600"; d="scan'208";a="218189637"
Received: from ideak-desk.fi.intel.com ([10.237.72.183])
 by orsmga003.jf.intel.com with ESMTP; 18 Dec 2019 08:11:35 -0800
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 18 Dec 2019 18:10:55 +0200
Message-Id: <20191218161105.30638-6-imre.deak@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20191218161105.30638-1-imre.deak@intel.com>
References: <20191218161105.30638-1-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 05/15] drm/i915: Add helpers to select correct
 ccs/aux planes
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXNpbmcgaGVscGVycyBpbnN0ZWFkIG9mIG9wZW4gY29kaW5nIHRoaXMgdG8gc2VsZWN0IGEgQ0NT
IHBsYW5lIGZvciBhCm1haW4gcGxhbmUgbWFrZXMgdGhlIGNvZGUgY2xlYW5lciBhbmQgbGVzcyBl
cnJvci1wcm9uZSB3aGVuIHRoZSBsb2NhdGlvbgpvZiBDQ1MgcGxhbmUgY2FuIGJlIGRpZmZlcmVu
dCBiYXNlZCBvbiB0aGUgZm9ybWF0IChwYWNrZWQgdnMuIFlVVgpzZW1pcGxhbmFyKS4gVGhlIHNh
bWUgYXBwbGllcyB0byBzZWxlY3RpbmcgYW4gQVVYIHBsYW5lIHdoaWNoIGNhbiBiZSBhClVWIHBs
YW5lIChmb3IgYW4gdW5jb21wcmVzc2VkIFlVViBzZW1pcGxhbmFyIGZvcm1hdCksIG9yIGEgQ0NT
IHBsYW5lLgoKQ2M6IERoaW5ha2FyYW4gUGFuZGl5YW4gPGRoaW5ha2FyYW4ucGFuZGl5YW5AaW50
ZWwuY29tPgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4KU2lnbmVkLW9mZi1ieTogSW1yZSBEZWFrIDxpbXJlLmRlYWtAaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIHwgNjMgKysrKysrKysr
KysrKysrKy0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA1MCBpbnNlcnRpb25zKCspLCAxMyBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmlu
ZGV4IDRiOGI0NGMzOTcyNC4uNmJkYTM5N2FlNjc3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTkzMyw2ICsxOTMzLDQwIEBAIHN0YXRpYyB1
bnNpZ25lZCBpbnQgaW50ZWxfdGlsZV9zaXplKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdikKIAlyZXR1cm4gSVNfR0VOKGRldl9wcml2LCAyKSA/IDIwNDggOiA0MDk2Owog
fQogCitzdGF0aWMgYm9vbCBpc19jY3NfcGxhbmUoY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZl
ciAqZmIsIGludCBwbGFuZSkKK3sKKwlpZiAoIWlzX2Njc19tb2RpZmllcihmYi0+bW9kaWZpZXIp
KQorCQlyZXR1cm4gZmFsc2U7CisKKwlyZXR1cm4gcGxhbmUgPj0gZmItPmZvcm1hdC0+bnVtX3Bs
YW5lcyAvIDI7Cit9CisKK3N0YXRpYyBib29sIGlzX2F1eF9wbGFuZShjb25zdCBzdHJ1Y3QgZHJt
X2ZyYW1lYnVmZmVyICpmYiwgaW50IHBsYW5lKQoreworCWlmIChpc19jY3NfbW9kaWZpZXIoZmIt
Pm1vZGlmaWVyKSkKKwkJcmV0dXJuIGlzX2Njc19wbGFuZShmYiwgcGxhbmUpOworCisJcmV0dXJu
IHBsYW5lID09IDE7Cit9CisKK3N0YXRpYyBpbnQgbWFpbl90b19jY3NfcGxhbmUoY29uc3Qgc3Ry
dWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIsIGludCBtYWluX3BsYW5lKQoreworCVdBUk5fT04oIWlz
X2Njc19tb2RpZmllcihmYi0+bW9kaWZpZXIpIHx8CisJCShtYWluX3BsYW5lICYmIG1haW5fcGxh
bmUgPj0gZmItPmZvcm1hdC0+bnVtX3BsYW5lcyAvIDIpKTsKKworCXJldHVybiBmYi0+Zm9ybWF0
LT5udW1fcGxhbmVzIC8gMiArIG1haW5fcGxhbmU7Cit9CisKKy8qIFJldHVybiBlaXRoZXIgdGhl
IG1haW4gcGxhbmUncyBDQ1Mgb3IgLSBpZiBub3QgYSBDQ1MgRkIgLSBVViBwbGFuZSAqLworc3Rh
dGljIGludAoraW50ZWxfbWFpbl90b19hdXhfcGxhbmUoY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1
ZmZlciAqZmIsIGludCBtYWluX3BsYW5lKQoreworCWlmIChpc19jY3NfbW9kaWZpZXIoZmItPm1v
ZGlmaWVyKSkKKwkJcmV0dXJuIG1haW5fdG9fY2NzX3BsYW5lKGZiLCBtYWluX3BsYW5lKTsKKwor
CXJldHVybiAxOworfQorCiBzdGF0aWMgdW5zaWduZWQgaW50CiBpbnRlbF90aWxlX3dpZHRoX2J5
dGVzKGNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiLCBpbnQgY29sb3JfcGxhbmUpCiB7
CkBAIC0xOTQ4LDcgKzE5ODIsNyBAQCBpbnRlbF90aWxlX3dpZHRoX2J5dGVzKGNvbnN0IHN0cnVj
dCBkcm1fZnJhbWVidWZmZXIgKmZiLCBpbnQgY29sb3JfcGxhbmUpCiAJCWVsc2UKIAkJCXJldHVy
biA1MTI7CiAJY2FzZSBJOTE1X0ZPUk1BVF9NT0RfWV9USUxFRF9DQ1M6Ci0JCWlmIChjb2xvcl9w
bGFuZSA9PSAxKQorCQlpZiAoaXNfY2NzX3BsYW5lKGZiLCBjb2xvcl9wbGFuZSkpCiAJCQlyZXR1
cm4gMTI4OwogCQkvKiBmYWxsIHRocm91Z2ggKi8KIAljYXNlIEk5MTVfRk9STUFUX01PRF9ZX1RJ
TEVEOgpAQCAtMTk1Nyw3ICsxOTkxLDcgQEAgaW50ZWxfdGlsZV93aWR0aF9ieXRlcyhjb25zdCBz
dHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwgaW50IGNvbG9yX3BsYW5lKQogCQllbHNlCiAJCQly
ZXR1cm4gNTEyOwogCWNhc2UgSTkxNV9GT1JNQVRfTU9EX1lmX1RJTEVEX0NDUzoKLQkJaWYgKGNv
bG9yX3BsYW5lID09IDEpCisJCWlmIChpc19jY3NfcGxhbmUoZmIsIGNvbG9yX3BsYW5lKSkKIAkJ
CXJldHVybiAxMjg7CiAJCS8qIGZhbGwgdGhyb3VnaCAqLwogCWNhc2UgSTkxNV9GT1JNQVRfTU9E
X1lmX1RJTEVEOgpAQCAtMjA3NCw3ICsyMTA4LDcgQEAgc3RhdGljIHVuc2lnbmVkIGludCBpbnRl
bF9zdXJmX2FsaWdubWVudChjb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiwKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGZiLT5kZXYpOwogCiAJLyog
QVVYX0RJU1QgbmVlZHMgb25seSA0SyBhbGlnbm1lbnQgKi8KLQlpZiAoY29sb3JfcGxhbmUgPT0g
MSkKKwlpZiAoaXNfYXV4X3BsYW5lKGZiLCBjb2xvcl9wbGFuZSkpCiAJCXJldHVybiA0MDk2Owog
CiAJc3dpdGNoIChmYi0+bW9kaWZpZXIpIHsKQEAgLTM0NTcsMTAgKzM0OTEsMTEgQEAgc3RhdGlj
IGJvb2wgc2tsX2NoZWNrX21haW5fY2NzX2Nvb3JkaW5hdGVzKHN0cnVjdCBpbnRlbF9wbGFuZV9z
dGF0ZSAqcGxhbmVfc3RhdGUKIAljb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9IHBs
YW5lX3N0YXRlLT5ody5mYjsKIAlpbnQgaHN1YiA9IGZiLT5mb3JtYXQtPmhzdWI7CiAJaW50IHZz
dWIgPSBmYi0+Zm9ybWF0LT52c3ViOwotCWludCBhdXhfeCA9IHBsYW5lX3N0YXRlLT5jb2xvcl9w
bGFuZVsxXS54OwotCWludCBhdXhfeSA9IHBsYW5lX3N0YXRlLT5jb2xvcl9wbGFuZVsxXS55Owot
CXUzMiBhdXhfb2Zmc2V0ID0gcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lWzFdLm9mZnNldDsKLQl1
MzIgYWxpZ25tZW50ID0gaW50ZWxfc3VyZl9hbGlnbm1lbnQoZmIsIDEpOworCWludCBjY3NfcGxh
bmUgPSBtYWluX3RvX2Njc19wbGFuZShmYiwgMCk7CisJaW50IGF1eF94ID0gcGxhbmVfc3RhdGUt
PmNvbG9yX3BsYW5lW2Njc19wbGFuZV0ueDsKKwlpbnQgYXV4X3kgPSBwbGFuZV9zdGF0ZS0+Y29s
b3JfcGxhbmVbY2NzX3BsYW5lXS55OworCXUzMiBhdXhfb2Zmc2V0ID0gcGxhbmVfc3RhdGUtPmNv
bG9yX3BsYW5lW2Njc19wbGFuZV0ub2Zmc2V0OworCXUzMiBhbGlnbm1lbnQgPSBpbnRlbF9zdXJm
X2FsaWdubWVudChmYiwgY2NzX3BsYW5lKTsKIAogCXdoaWxlIChhdXhfb2Zmc2V0ID49IG1haW5f
b2Zmc2V0ICYmIGF1eF95IDw9IG1haW5feSkgewogCQlpbnQgeCwgeTsKQEAgLTM0NzMsNyArMzUw
OCw3IEBAIHN0YXRpYyBib29sIHNrbF9jaGVja19tYWluX2Njc19jb29yZGluYXRlcyhzdHJ1Y3Qg
aW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlCiAKIAkJeCA9IGF1eF94IC8gaHN1YjsKIAkJ
eSA9IGF1eF95IC8gdnN1YjsKLQkJYXV4X29mZnNldCA9IGludGVsX3BsYW5lX2FkanVzdF9hbGln
bmVkX29mZnNldCgmeCwgJnksIHBsYW5lX3N0YXRlLCAxLAorCQlhdXhfb2Zmc2V0ID0gaW50ZWxf
cGxhbmVfYWRqdXN0X2FsaWduZWRfb2Zmc2V0KCZ4LCAmeSwgcGxhbmVfc3RhdGUsIGNjc19wbGFu
ZSwKIAkJCQkJCQkgICAgICAgYXV4X29mZnNldCwgYXV4X29mZnNldCAtIGFsaWdubWVudCk7CiAJ
CWF1eF94ID0geCAqIGhzdWIgKyBhdXhfeCAlIGhzdWI7CiAJCWF1eF95ID0geSAqIHZzdWIgKyBh
dXhfeSAlIHZzdWI7CkBAIC0zNDgyLDkgKzM1MTcsOSBAQCBzdGF0aWMgYm9vbCBza2xfY2hlY2tf
bWFpbl9jY3NfY29vcmRpbmF0ZXMoc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0
ZQogCWlmIChhdXhfeCAhPSBtYWluX3ggfHwgYXV4X3kgIT0gbWFpbl95KQogCQlyZXR1cm4gZmFs
c2U7CiAKLQlwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVbMV0ub2Zmc2V0ID0gYXV4X29mZnNldDsK
LQlwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVbMV0ueCA9IGF1eF94OwotCXBsYW5lX3N0YXRlLT5j
b2xvcl9wbGFuZVsxXS55ID0gYXV4X3k7CisJcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lW2Njc19w
bGFuZV0ub2Zmc2V0ID0gYXV4X29mZnNldDsKKwlwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVbY2Nz
X3BsYW5lXS54ID0gYXV4X3g7CisJcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lW2Njc19wbGFuZV0u
eSA9IGF1eF95OwogCiAJcmV0dXJuIHRydWU7CiB9CkBAIC0zNTAwLDcgKzM1MzUsOCBAQCBzdGF0
aWMgaW50IHNrbF9jaGVja19tYWluX3N1cmZhY2Uoc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpw
bGFuZV9zdGF0ZSkKIAlpbnQgaCA9IGRybV9yZWN0X2hlaWdodCgmcGxhbmVfc3RhdGUtPnVhcGku
c3JjKSA+PiAxNjsKIAlpbnQgbWF4X3dpZHRoOwogCWludCBtYXhfaGVpZ2h0OwotCXUzMiBhbGln
bm1lbnQsIG9mZnNldCwgYXV4X29mZnNldCA9IHBsYW5lX3N0YXRlLT5jb2xvcl9wbGFuZVsxXS5v
ZmZzZXQ7CisJaW50IGF1eF9wbGFuZSA9IGludGVsX21haW5fdG9fYXV4X3BsYW5lKGZiLCAwKTsK
Kwl1MzIgYWxpZ25tZW50LCBvZmZzZXQsIGF1eF9vZmZzZXQgPSBwbGFuZV9zdGF0ZS0+Y29sb3Jf
cGxhbmVbYXV4X3BsYW5lXS5vZmZzZXQ7CiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MSkKIAkJbWF4X3dpZHRoID0gaWNsX21heF9wbGFuZV93aWR0aChmYiwgMCwgcm90YXRpb24pOwpA
QCAtMzU2Niw3ICszNjAyLDggQEAgc3RhdGljIGludCBza2xfY2hlY2tfbWFpbl9zdXJmYWNlKHN0
cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUpCiAJCQkJCQkJCSAgIG9mZnNldCwg
b2Zmc2V0IC0gYWxpZ25tZW50KTsKIAkJfQogCi0JCWlmICh4ICE9IHBsYW5lX3N0YXRlLT5jb2xv
cl9wbGFuZVsxXS54IHx8IHkgIT0gcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lWzFdLnkpIHsKKwkJ
aWYgKHggIT0gcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lW2F1eF9wbGFuZV0ueCB8fAorCQkgICAg
eSAhPSBwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVbYXV4X3BsYW5lXS55KSB7CiAJCQlEUk1fREVC
VUdfS01TKCJVbmFibGUgdG8gZmluZCBzdWl0YWJsZSBkaXNwbGF5IHN1cmZhY2Ugb2Zmc2V0IGR1
ZSB0byBDQ1NcbiIpOwogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KLS0gCjIuMjIuMAoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxp
bmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

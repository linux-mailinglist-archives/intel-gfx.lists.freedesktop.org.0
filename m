Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id CF50A4D6704
	for <lists+intel-gfx@lfdr.de>; Fri, 11 Mar 2022 18:02:52 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 2F47F10E199;
	Fri, 11 Mar 2022 17:02:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AF2DD10E199
 for <intel-gfx@lists.freedesktop.org>; Fri, 11 Mar 2022 17:02:49 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1647018169; x=1678554169;
 h=date:from:to:cc:subject:message-id:references:
 mime-version:content-transfer-encoding:in-reply-to;
 bh=oP5l2N/QHAJdBOIeC7EbQTEv8OmmNB8wg5QtDfCN4is=;
 b=JNpHel6V9CFayrrEHxBopPIN0e/rTWWP4LX8jinTlrEjFgqmxC7GRXf8
 OSAN24PXgcf3GTeFw0MWmGtMzpma7JyaUB7dAWl76vVuqboos4v125KXg
 0nWmFKM0Tuw9viuwWdiAkyzyUBT+N5Saa3q3g4wgbJBYWzsVatxyJCg47
 fUHahCmLFSoAS9ELRKIEsa+rr5eew7NFTsGVlAyO2kVe9g/zNthaQsiEC
 9l+C1g4pgJIa/KcAl63yd1OoSs1s4SvL/12kLcGXzasLXXigOw2XvNnlK
 HaWfBjlnPSjMsYQxChlw5ONJTHVL1mG6wOAHtuTaxY6AxIuQBMBH3za/x A==;
X-IronPort-AV: E=McAfee;i="6200,9189,10283"; a="253173124"
X-IronPort-AV: E=Sophos;i="5.90,174,1643702400"; d="scan'208";a="253173124"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 11 Mar 2022 09:02:49 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.90,174,1643702400"; d="scan'208";a="643037153"
Received: from stinkpipe.fi.intel.com (HELO stinkbox) ([10.237.72.151])
 by fmsmga002.fm.intel.com with SMTP; 11 Mar 2022 09:02:46 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 11 Mar 2022 19:02:45 +0200
Date: Fri, 11 Mar 2022 19:02:45 +0200
From: Ville =?iso-8859-1?Q?Syrj=E4l=E4?= <ville.syrjala@linux.intel.com>
To: "Souza, Jose" <jose.souza@intel.com>
Message-ID: <YiuAtdPiEk0ytmDj@intel.com>
References: <20220310200518.247909-1-jose.souza@intel.com>
 <YipzEZQpfrjn/RN+@intel.com>
 <7d46f07565b6d25b1f71c16051273f76def2e838.camel@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <7d46f07565b6d25b1f71c16051273f76def2e838.camel@intel.com>
X-Patchwork-Hint: comment
Subject: Re: [Intel-gfx] [PATCH 1/2] drm/i915/display: Fix HPD short pulse
 handling for eDP
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Nikula, Jani" <jani.nikula@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

On Fri, Mar 11, 2022 at 01:05:49PM +0000, Souza, Jose wrote:
> On Thu, 2022-03-10 at 23:52 +0200, Ville Syrjälä wrote:
> > On Thu, Mar 10, 2022 at 12:05:17PM -0800, José Roberto de Souza wrote:
> > > Commit 13ea6db2cf24 ("drm/i915/edp: Ignore short pulse when panel
> > > powered off") completely broke short pulse handling for eDP as it is
> > > usually generated by sink when it is displaying image and there is
> > > some error or status that source needs to handle.
> > > 
> > > When power panel is enabled, this state is enough to power aux
> > > transactions and VDD override is disabled, so intel_pps_have_power()
> > > is always returning false causing short pulses to be ignored.
> > 
> > I think the times that we use the vdd override should be
> > limited to:
> > - aux transfers while the display off
> > - potentially short periods of time during the modeset sequence
> > 
> > So I guess what you're saying here is that during those times
> > some panel is triggering an IRQ_HPD which, if ignored, causes
> > some problem for us?
> 
> No, not in those times.
> When panel is on scanning out frames, PPS is enabled and VDD is disabled.
> So any short pulse HPD was being ignored because (edp_have_panel_power() && edp_have_panel_vdd()) is always false.
> 
> > 
> > > 
> > > So here better naming this function that intends to check if aux
> > > lines are powered to avoid the endless cycle mentioned in the commit
> > > being fixed and fixing the check for what it is intended.
> > > 
> > > Fixes: 13ea6db2cf24 ("drm/i915/edp: Ignore short pulse when panel powered off")
> > > Cc: Anshuman Gupta <anshuman.gupta@intel.com>
> > > Cc: Jani Nikula <jani.nikula@intel.com>
> > > Cc: Uma Shankar <uma.shankar@intel.com>
> > > Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
> > > Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
> > > ---
> > >  drivers/gpu/drm/i915/display/intel_dp.c  | 2 +-
> > >  drivers/gpu/drm/i915/display/intel_pps.c | 4 ++--
> > >  drivers/gpu/drm/i915/display/intel_pps.h | 2 +-
> > >  3 files changed, 4 insertions(+), 4 deletions(-)
> > > 
> > > diff --git a/drivers/gpu/drm/i915/display/intel_dp.c b/drivers/gpu/drm/i915/display/intel_dp.c
> > > index 619546441eae5..b029b064000d6 100644
> > > --- a/drivers/gpu/drm/i915/display/intel_dp.c
> > > +++ b/drivers/gpu/drm/i915/display/intel_dp.c
> > > @@ -4867,7 +4867,7 @@ intel_dp_hpd_pulse(struct intel_digital_port *dig_port, bool long_hpd)
> > >  	struct intel_dp *intel_dp = &dig_port->dp;
> > >  
> > >  	if (dig_port->base.type == INTEL_OUTPUT_EDP &&
> > > -	    (long_hpd || !intel_pps_have_power(intel_dp))) {
> > > +	    (long_hpd || !intel_pps_have_vdd_power(intel_dp))) {
> > >  		/*
> > >  		 * vdd off can generate a long/short pulse on eDP which
> > >  		 * would require vdd on to handle it, and thus we
> > > diff --git a/drivers/gpu/drm/i915/display/intel_pps.c b/drivers/gpu/drm/i915/display/intel_pps.c
> > > index 9c986e8932f87..d3e6083ad5b79 100644
> > > --- a/drivers/gpu/drm/i915/display/intel_pps.c
> > > +++ b/drivers/gpu/drm/i915/display/intel_pps.c
> > > @@ -1075,13 +1075,13 @@ static void intel_pps_vdd_sanitize(struct intel_dp *intel_dp)
> > >  	edp_panel_vdd_schedule_off(intel_dp);
> > >  }
> > >  
> > > -bool intel_pps_have_power(struct intel_dp *intel_dp)
> > > +bool intel_pps_have_vdd_power(struct intel_dp *intel_dp)
> > >  {
> > >  	intel_wakeref_t wakeref;
> > >  	bool have_power = false;
> > >  
> > >  	with_intel_pps_lock(intel_dp, wakeref) {
> > > -		have_power = edp_have_panel_power(intel_dp) &&

Ah, that s/&&/||/ is the bug you're fixing. I didn't even notice,
probably because of the broken indentation in the code here. I just
read it and thought it only checks for panel power and not vdd.

Can you also fix up the indentation a bit so the code doesn't
look so weird?

I think I'd call the function intel_pps_have_panel_power_or_vdd()
(or something along those lines) to make it clear what it does.

Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>

> > > +		have_power = edp_have_panel_power(intel_dp) ||
> > >  						  edp_have_panel_vdd(intel_dp);
> > >  	}
> > >  
> > > diff --git a/drivers/gpu/drm/i915/display/intel_pps.h b/drivers/gpu/drm/i915/display/intel_pps.h
> > > index fbb47f6f453e4..948523ce32417 100644
> > > --- a/drivers/gpu/drm/i915/display/intel_pps.h
> > > +++ b/drivers/gpu/drm/i915/display/intel_pps.h
> > > @@ -37,7 +37,7 @@ void intel_pps_vdd_on(struct intel_dp *intel_dp);
> > >  void intel_pps_on(struct intel_dp *intel_dp);
> > >  void intel_pps_off(struct intel_dp *intel_dp);
> > >  void intel_pps_vdd_off_sync(struct intel_dp *intel_dp);
> > > -bool intel_pps_have_power(struct intel_dp *intel_dp);
> > > +bool intel_pps_have_vdd_power(struct intel_dp *intel_dp);
> > >  void intel_pps_wait_power_cycle(struct intel_dp *intel_dp);
> > >  
> > >  void intel_pps_init(struct intel_dp *intel_dp);
> > > -- 
> > > 2.35.1
> > 
> 

-- 
Ville Syrjälä
Intel

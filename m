Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 8461DAB814
	for <lists+intel-gfx@lfdr.de>; Fri,  6 Sep 2019 14:23:25 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 927C36E283;
	Fri,  6 Sep 2019 12:23:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7CF1E6E283
 for <intel-gfx@lists.freedesktop.org>; Fri,  6 Sep 2019 12:23:21 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 06 Sep 2019 05:23:21 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,473,1559545200"; d="scan'208";a="174265161"
Received: from rosetta.fi.intel.com ([10.237.72.194])
 by orsmga007.jf.intel.com with ESMTP; 06 Sep 2019 05:23:18 -0700
Received: by rosetta.fi.intel.com (Postfix, from userid 1000)
 id 85F31840783; Fri,  6 Sep 2019 15:23:17 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  6 Sep 2019 15:23:14 +0300
Message-Id: <20190906122314.2146-2-mika.kuoppala@linux.intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190906122314.2146-1-mika.kuoppala@linux.intel.com>
References: <20190906122314.2146-1-mika.kuoppala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/2] drm/i915/tgl: Register state context
 definition for Gen12
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Michel Thierry <michel.thierry@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWljaGVsIFRoaWVycnkgPG1pY2hlbC50aGllcnJ5QGludGVsLmNvbT4KCkdlbjEyIGhh
cyBzdWJ0bGUgY2hhbmdlcyBpbiB0aGUgcmVnIHN0YXRlIGNvbnRleHQgb2Zmc2V0cyAoc29tZSBm
aWVsZHMKYXJlIGdvbmUsIHNvbWUgYXJlIGluIGEgZGlmZmVyZW50IGxvY2F0aW9uKSwgY29tcGFy
ZWQgdG8gcHJldmlvdXMgR2Vucy4KClRoZSBzaW1wbGVzdCBhcHByb2FjaCBzZWVtcyB0byBiZSBr
ZWVwaW5nIEdlbjEyIChhbmQgZnV0dXJlIHBsYXRmb3JtKQpjaGFuZ2VzIGFwYXJ0IGZyb20gdGhl
IHByZXZpb3VzIGdlbnMsIHdoaWxlIGtlZXBpbmcgdGhlIHJlZ2lzdGVycyB0aGF0CmFyZSBjb250
aWd1b3VzIGluIGZ1bmN0aW9ucyB3ZSBjYW4gcmV1c2UuCgp2MjogYWxpYXMsIHZpcnR1YWwgZW5n
aW5lLCBycGNzLCBwcnVuZSB1bnVzZWQgcmVncwp2MzogdXNlIGVuZ2luZSBiYXNlIChEYW5pZWxl
KSwgdGFrZSBjdHhfYmIgZm9yIGFsbAoKQnNwZWM6IDQ2MjU1CkNjOiBNaWNoYWwgV2FqZGVjemtv
IDxtaWNoYWwud2FqZGVjemtvQGludGVsLmNvbT4KQ2M6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8g
PGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+CkNjOiBDaHJpcyBXaWxzb24gPGNocmlz
QGNocmlzLXdpbHNvbi5jby51az4KQ2M6IEpvb25hcyBMYWh0aW5lbiA8am9vbmFzLmxhaHRpbmVu
QGxpbnV4LmludGVsLmNvbT4KQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFA
aW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNaWNoZWwgVGhpZXJyeSA8bWljaGVsLnRoaWVycnlA
aW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hp
QGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWlrYSBLdW9wcGFsYSA8bWlrYS5rdW9wcGFsYUBs
aW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMg
ICAgIHwgMTk2ICsrKysrKysrKysrKysrKysrLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfbHJjX3JlZy5oIHwgICA2ICstCiAyIGZpbGVzIGNoYW5nZWQsIDE0NyBpbnNlcnRp
b25zKCspLCA1NSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmlu
ZGV4IDZjNjhlZDJiZjNkMi4uZTljODczODc3MjUzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYwpAQCAtODA4LDggKzgwOCwxMSBAQCBzdGF0aWMgdm9pZCB2aXJ0dWFsX3VwZGF0ZV9y
ZWdpc3Rlcl9vZmZzZXRzKHUzMiAqcmVncywKIHsKIAl1MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19i
YXNlOwogCisJR0VNX1dBUk5fT04oZW5naW5lLT5jbGFzcyA9PSBDT1BZX0VOR0lORV9DTEFTUyk7
CisKIAkvKiBNdXN0IG1hdGNoIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSgpISAqLwogCisJLyog
Q29tbW9uIHBhcnQgKi8KIAlyZWdzW0NUWF9DT05URVhUX0NPTlRST0xdID0KIAkJaTkxNV9tbWlv
X3JlZ19vZmZzZXQoUklOR19DT05URVhUX0NPTlRST0woYmFzZSkpOwogCXJlZ3NbQ1RYX1JJTkdf
SEVBRF0gPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX0hFQUQoYmFzZSkpOwpAQCAtODIwLDEz
ICs4MjMsMTYgQEAgc3RhdGljIHZvaWQgdmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cyh1
MzIgKnJlZ3MsCiAJcmVnc1tDVFhfQkJfSEVBRF9VXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJ
TkdfQkJBRERSX1VEVyhiYXNlKSk7CiAJcmVnc1tDVFhfQkJfSEVBRF9MXSA9IGk5MTVfbW1pb19y
ZWdfb2Zmc2V0KFJJTkdfQkJBRERSKGJhc2UpKTsKIAlyZWdzW0NUWF9CQl9TVEFURV0gPSBpOTE1
X21taW9fcmVnX29mZnNldChSSU5HX0JCU1RBVEUoYmFzZSkpOworCiAJcmVnc1tDVFhfU0VDT05E
X0JCX0hFQURfVV0gPQogCQlpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1NCQkFERFJfVURXKGJh
c2UpKTsKIAlyZWdzW0NUWF9TRUNPTkRfQkJfSEVBRF9MXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0
KFJJTkdfU0JCQUREUihiYXNlKSk7CiAJcmVnc1tDVFhfU0VDT05EX0JCX1NUQVRFXSA9IGk5MTVf
bW1pb19yZWdfb2Zmc2V0KFJJTkdfU0JCU1RBVEUoYmFzZSkpOwogCisJLyogUFBHVFQgcGFydCAq
LwogCXJlZ3NbQ1RYX0NUWF9USU1FU1RBTVBdID0KIAkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklO
R19DVFhfVElNRVNUQU1QKGJhc2UpKTsKKwogCXJlZ3NbQ1RYX1BEUDNfVURXXSA9IGk5MTVfbW1p
b19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfVURXKGJhc2UsIDMpKTsKIAlyZWdzW0NUWF9QRFAz
X0xEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JJTkdfUERQX0xEVyhiYXNlLCAzKSk7
CiAJcmVnc1tDVFhfUERQMl9VRFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BE
UF9VRFcoYmFzZSwgMikpOwpAQCAtMzEyMywzNyArMzEyOSwxMyBAQCBzdGF0aWMgdTMyIGludGVs
X2xyX2luZGlyZWN0X2N0eF9vZmZzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CXJldHVybiBpbmRpcmVjdF9jdHhfb2Zmc2V0OwogfQogCi1zdGF0aWMgc3RydWN0IGk5MTVfcHBn
dHQgKnZtX2FsaWFzKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3BhY2UgKnZtKQotewotCWlmIChpOTE1
X2lzX2dndHQodm0pKQotCQlyZXR1cm4gaTkxNV92bV90b19nZ3R0KHZtKS0+YWxpYXM7Ci0JZWxz
ZQotCQlyZXR1cm4gaTkxNV92bV90b19wcGd0dCh2bSk7Ci19CiAKLXN0YXRpYyB2b2lkIGV4ZWNs
aXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCi0JCQkJICAgICBzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UsCi0JCQkJICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCi0JCQkJ
ICAgICBzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3N0YXRpYyB2b2lkIGluaXRfY29tbW9uX3Jl
Z19zdGF0ZSh1MzIgKiBjb25zdCByZWdzLAorCQkJCSAgc3RydWN0IGk5MTVfcHBndHQgKiBjb25z
dCBwcGd0dCwKKwkJCQkgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgIHN0
cnVjdCBpbnRlbF9yaW5nICpyaW5nKQogewotCXN0cnVjdCBpOTE1X3BwZ3R0ICpwcGd0dCA9IHZt
X2FsaWFzKGNlLT52bSk7Ci0JY29uc3QgYm9vbCByY3MgPSBlbmdpbmUtPmNsYXNzID09IFJFTkRF
Ul9DTEFTUzsKIAljb25zdCB1MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19iYXNlOwotCWNvbnN0IHUz
MiBscmlfYmFzZSA9IGludGVsX2VuZ2luZV9oYXNfcmVsYXRpdmVfbW1pbyhlbmdpbmUpID8KLQkJ
TUlfTFJJX0NTX01NSU8gOiAwOwotCi0JLyoKLQkgKiBBIGNvbnRleHQgaXMgYWN0dWFsbHkgYSBi
aWcgYmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAotCSAqIE1JX0xPQURfUkVHSVNURVJfSU1NIGNv
bW1hbmRzIGZvbGxvd2VkIGJ5IChyZWcsIHZhbHVlKSBwYWlycy4gVGhlCi0JICogdmFsdWVzIHdl
IGFyZSBzZXR0aW5nIGhlcmUgYXJlIG9ubHkgZm9yIHRoZSBmaXJzdCBjb250ZXh0IHJlc3RvcmU6
Ci0JICogb24gYSBzdWJzZXF1ZW50IHNhdmUsIHRoZSBHUFUgd2lsbCByZWNyZWF0ZSB0aGlzIGJh
dGNoYnVmZmVyIHdpdGggbmV3Ci0JICogdmFsdWVzIChpbmNsdWRpbmcgYWxsIHRoZSBtaXNzaW5n
IE1JX0xPQURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIHRoYXQKLQkgKiB3ZSBhcmUgbm90IGluaXRp
YWxpemluZyBoZXJlKS4KLQkgKgotCSAqIE11c3Qga2VlcCBjb25zaXN0ZW50IHdpdGggdmlydHVh
bF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cygpLgotCSAqLwotCXJlZ3NbQ1RYX0xSSV9IRUFERVJf
MF0gPSBNSV9MT0FEX1JFR0lTVEVSX0lNTShyY3MgPyAxNCA6IDExKSB8Ci0JCU1JX0xSSV9GT1JD
RV9QT1NURUQgfCBscmlfYmFzZTsKIAogCUNUWF9SRUcocmVncywgQ1RYX0NPTlRFWFRfQ09OVFJP
TCwgUklOR19DT05URVhUX0NPTlRST0woYmFzZSksCiAJCV9NQVNLRURfQklUX0RJU0FCTEUoQ1RY
X0NUUkxfRU5HSU5FX0NUWF9SRVNUT1JFX0lOSElCSVQpIHwKQEAgLTMxNzEsMzkgKzMxNTMsNDMg
QEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUzMiAqcmVncywKIAlDVFhf
UkVHKHJlZ3MsIENUWF9CQl9IRUFEX1UsIFJJTkdfQkJBRERSX1VEVyhiYXNlKSwgMCk7CiAJQ1RY
X1JFRyhyZWdzLCBDVFhfQkJfSEVBRF9MLCBSSU5HX0JCQUREUihiYXNlKSwgMCk7CiAJQ1RYX1JF
RyhyZWdzLCBDVFhfQkJfU1RBVEUsIFJJTkdfQkJTVEFURShiYXNlKSwgUklOR19CQl9QUEdUVCk7
Ci0JQ1RYX1JFRyhyZWdzLCBDVFhfU0VDT05EX0JCX0hFQURfVSwgUklOR19TQkJBRERSX1VEVyhi
YXNlKSwgMCk7Ci0JQ1RYX1JFRyhyZWdzLCBDVFhfU0VDT05EX0JCX0hFQURfTCwgUklOR19TQkJB
RERSKGJhc2UpLCAwKTsKLQlDVFhfUkVHKHJlZ3MsIENUWF9TRUNPTkRfQkJfU1RBVEUsIFJJTkdf
U0JCU1RBVEUoYmFzZSksIDApOwotCWlmIChyY3MpIHsKLQkJc3RydWN0IGk5MTVfY3R4X3dvcmth
cm91bmRzICp3YV9jdHggPSAmZW5naW5lLT53YV9jdHg7Ci0KLQkJQ1RYX1JFRyhyZWdzLCBDVFhf
UkNTX0lORElSRUNUX0NUWCwgUklOR19JTkRJUkVDVF9DVFgoYmFzZSksIDApOwotCQlDVFhfUkVH
KHJlZ3MsIENUWF9SQ1NfSU5ESVJFQ1RfQ1RYX09GRlNFVCwKLQkJCVJJTkdfSU5ESVJFQ1RfQ1RY
X09GRlNFVChiYXNlKSwgMCk7Ci0JCWlmICh3YV9jdHgtPmluZGlyZWN0X2N0eC5zaXplKSB7Ci0J
CQl1MzIgZ2d0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHdhX2N0eC0+dm1hKTsKK30KIAot
CQkJcmVnc1tDVFhfUkNTX0lORElSRUNUX0NUWCArIDFdID0KLQkJCQkoZ2d0dF9vZmZzZXQgKyB3
YV9jdHgtPmluZGlyZWN0X2N0eC5vZmZzZXQpIHwKLQkJCQkod2FfY3R4LT5pbmRpcmVjdF9jdHgu
c2l6ZSAvIENBQ0hFTElORV9CWVRFUyk7CitzdGF0aWMgdm9pZCBpbml0X3dhX2JiX3JlZ19zdGF0
ZSh1MzIgKiBjb25zdCByZWdzLAorCQkJCSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUs
CisJCQkJIHUzMiBwb3NfYmJfcGVyX2N0eCkKK3sKKwlzdHJ1Y3QgaTkxNV9jdHhfd29ya2Fyb3Vu
ZHMgKiBjb25zdCB3YV9jdHggPSAmZW5naW5lLT53YV9jdHg7CisJY29uc3QgdTMyIGJhc2UgPSBl
bmdpbmUtPm1taW9fYmFzZTsKKwljb25zdCB1MzIgcG9zX2luZGlyZWN0X2N0eCA9IHBvc19iYl9w
ZXJfY3R4ICsgMjsKKwljb25zdCB1MzIgcG9zX2luZGlyZWN0X2N0eF9vZmZzZXQgPSBwb3NfaW5k
aXJlY3RfY3R4ICsgMjsKIAotCQkJcmVnc1tDVFhfUkNTX0lORElSRUNUX0NUWF9PRkZTRVQgKyAx
XSA9Ci0JCQkJaW50ZWxfbHJfaW5kaXJlY3RfY3R4X29mZnNldChlbmdpbmUpIDw8IDY7Ci0JCX0K
KwlDVFhfUkVHKHJlZ3MsIHBvc19pbmRpcmVjdF9jdHgsIFJJTkdfSU5ESVJFQ1RfQ1RYKGJhc2Up
LCAwKTsKKwlDVFhfUkVHKHJlZ3MsIHBvc19pbmRpcmVjdF9jdHhfb2Zmc2V0LAorCQlSSU5HX0lO
RElSRUNUX0NUWF9PRkZTRVQoYmFzZSksIDApOworCWlmICh3YV9jdHgtPmluZGlyZWN0X2N0eC5z
aXplKSB7CisJCWNvbnN0IHUzMiBnZ3R0X29mZnNldCA9IGk5MTVfZ2d0dF9vZmZzZXQod2FfY3R4
LT52bWEpOwogCi0JCUNUWF9SRUcocmVncywgQ1RYX0JCX1BFUl9DVFhfUFRSLCBSSU5HX0JCX1BF
Ul9DVFhfUFRSKGJhc2UpLCAwKTsKLQkJaWYgKHdhX2N0eC0+cGVyX2N0eC5zaXplKSB7Ci0JCQl1
MzIgZ2d0dF9vZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHdhX2N0eC0+dm1hKTsKKwkJcmVnc1tw
b3NfaW5kaXJlY3RfY3R4ICsgMV0gPQorCQkJKGdndHRfb2Zmc2V0ICsgd2FfY3R4LT5pbmRpcmVj
dF9jdHgub2Zmc2V0KSB8CisJCQkod2FfY3R4LT5pbmRpcmVjdF9jdHguc2l6ZSAvIENBQ0hFTElO
RV9CWVRFUyk7CiAKLQkJCXJlZ3NbQ1RYX0JCX1BFUl9DVFhfUFRSICsgMV0gPQotCQkJCShnZ3R0
X29mZnNldCArIHdhX2N0eC0+cGVyX2N0eC5vZmZzZXQpIHwgMHgwMTsKLQkJfQorCQlyZWdzW3Bv
c19pbmRpcmVjdF9jdHhfb2Zmc2V0ICsgMV0gPQorCQkJaW50ZWxfbHJfaW5kaXJlY3RfY3R4X29m
ZnNldChlbmdpbmUpIDw8IDY7CiAJfQogCi0JcmVnc1tDVFhfTFJJX0hFQURFUl8xXSA9Ci0JCU1J
X0xPQURfUkVHSVNURVJfSU1NKDkpIHwgTUlfTFJJX0ZPUkNFX1BPU1RFRCB8IGxyaV9iYXNlOwor
CUNUWF9SRUcocmVncywgcG9zX2JiX3Blcl9jdHgsIFJJTkdfQkJfUEVSX0NUWF9QVFIoYmFzZSks
IDApOworCWlmICh3YV9jdHgtPnBlcl9jdHguc2l6ZSkgeworCQljb25zdCB1MzIgZ2d0dF9vZmZz
ZXQgPSBpOTE1X2dndHRfb2Zmc2V0KHdhX2N0eC0+dm1hKTsKIAotCUNUWF9SRUcocmVncywgQ1RY
X0NUWF9USU1FU1RBTVAsIFJJTkdfQ1RYX1RJTUVTVEFNUChiYXNlKSwgMCk7CisJCXJlZ3NbcG9z
X2JiX3Blcl9jdHggKyAxXSA9CisJCQkoZ2d0dF9vZmZzZXQgKyB3YV9jdHgtPnBlcl9jdHgub2Zm
c2V0KSB8IDB4MDE7CisJfQorfQorCitzdGF0aWMgdm9pZCBpbml0X3BwZ3R0X3JlZ19zdGF0ZSh1
MzIgKnJlZ3MsIHUzMiBiYXNlLAorCQkJCSBzdHJ1Y3QgaTkxNV9wcGd0dCAqcHBndHQpCit7CiAJ
LyogUERQIHZhbHVlcyB3ZWxsIGJlIGFzc2lnbmVkIGxhdGVyIGlmIG5lZWRlZCAqLwogCUNUWF9S
RUcocmVncywgQ1RYX1BEUDNfVURXLCBHRU44X1JJTkdfUERQX1VEVyhiYXNlLCAzKSwgMCk7CiAJ
Q1RYX1JFRyhyZWdzLCBDVFhfUERQM19MRFcsIEdFTjhfUklOR19QRFBfTERXKGJhc2UsIDMpLCAw
KTsKQEAgLTMyMjYsNiArMzIxMiw1MyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfaW5pdF9yZWdf
c3RhdGUodTMyICpyZWdzLAogCQlBU1NJR05fQ1RYX1BEUChwcGd0dCwgcmVncywgMSk7CiAJCUFT
U0lHTl9DVFhfUERQKHBwZ3R0LCByZWdzLCAwKTsKIAl9Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaTkx
NV9wcGd0dCAqdm1fYWxpYXMoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0pCit7CisJaWYg
KGk5MTVfaXNfZ2d0dCh2bSkpCisJCXJldHVybiBpOTE1X3ZtX3RvX2dndHQodm0pLT5hbGlhczsK
KwllbHNlCisJCXJldHVybiBpOTE1X3ZtX3RvX3BwZ3R0KHZtKTsKK30KKworc3RhdGljIHZvaWQg
Z2VuOF9pbml0X3JlZ19zdGF0ZSh1MzIgKiBjb25zdCByZWdzLAorCQkJCXN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSwKKwkJCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJc3Ry
dWN0IGludGVsX3JpbmcgKnJpbmcpCit7CisJc3RydWN0IGk5MTVfcHBndHQgKiBjb25zdCBwcGd0
dCA9IHZtX2FsaWFzKGNlLT52bSk7CisJY29uc3QgYm9vbCByY3MgPSBlbmdpbmUtPmNsYXNzID09
IFJFTkRFUl9DTEFTUzsKKwljb25zdCB1MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19iYXNlOworCWNv
bnN0IHUzMiBscmlfYmFzZSA9IGludGVsX2VuZ2luZV9oYXNfcmVsYXRpdmVfbW1pbyhlbmdpbmUp
ID8KKwkJTUlfTFJJX0NTX01NSU8gOiAwOworCisJLyoKKwkgKiBBIGNvbnRleHQgaXMgYWN0dWFs
bHkgYSBiaWcgYmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAorCSAqIE1JX0xPQURfUkVHSVNURVJf
SU1NIGNvbW1hbmRzIGZvbGxvd2VkIGJ5IChyZWcsIHZhbHVlKSBwYWlycy4gVGhlCisJICogdmFs
dWVzIHdlIGFyZSBzZXR0aW5nIGhlcmUgYXJlIG9ubHkgZm9yIHRoZSBmaXJzdCBjb250ZXh0IHJl
c3RvcmU6CisJICogb24gYSBzdWJzZXF1ZW50IHNhdmUsIHRoZSBHUFUgd2lsbCByZWNyZWF0ZSB0
aGlzIGJhdGNoYnVmZmVyIHdpdGggbmV3CisJICogdmFsdWVzIChpbmNsdWRpbmcgYWxsIHRoZSBt
aXNzaW5nIE1JX0xPQURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIHRoYXQKKwkgKiB3ZSBhcmUgbm90
IGluaXRpYWxpemluZyBoZXJlKS4KKwkgKgorCSAqIE11c3Qga2VlcCBjb25zaXN0ZW50IHdpdGgg
dmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cygpLgorCSAqLworCXJlZ3NbQ1RYX0xSSV9I
RUFERVJfMF0gPSBNSV9MT0FEX1JFR0lTVEVSX0lNTShyY3MgPyAxNCA6IDExKSB8CisJCU1JX0xS
SV9GT1JDRV9QT1NURUQgfCBscmlfYmFzZTsKKworCWluaXRfY29tbW9uX3JlZ19zdGF0ZShyZWdz
LCBwcGd0dCwgZW5naW5lLCByaW5nKTsKKwlDVFhfUkVHKHJlZ3MsIENUWF9TRUNPTkRfQkJfSEVB
RF9VLCBSSU5HX1NCQkFERFJfVURXKGJhc2UpLCAwKTsKKwlDVFhfUkVHKHJlZ3MsIENUWF9TRUNP
TkRfQkJfSEVBRF9MLCBSSU5HX1NCQkFERFIoYmFzZSksIDApOworCUNUWF9SRUcocmVncywgQ1RY
X1NFQ09ORF9CQl9TVEFURSwgUklOR19TQkJTVEFURShiYXNlKSwgMCk7CisJaWYgKHJjcykKKwkJ
aW5pdF93YV9iYl9yZWdfc3RhdGUocmVncywgZW5naW5lLCBDVFhfQkJfUEVSX0NUWF9QVFIpOwor
CisJcmVnc1tDVFhfTFJJX0hFQURFUl8xXSA9CisJCU1JX0xPQURfUkVHSVNURVJfSU1NKDkpIHwg
TUlfTFJJX0ZPUkNFX1BPU1RFRCB8IGxyaV9iYXNlOworCisJQ1RYX1JFRyhyZWdzLCBDVFhfQ1RY
X1RJTUVTVEFNUCwgUklOR19DVFhfVElNRVNUQU1QKGJhc2UpLCAwKTsKKworCWluaXRfcHBndHRf
cmVnX3N0YXRlKHJlZ3MsIGJhc2UsIHBwZ3R0KTsKIAogCWlmIChyY3MpIHsKIAkJcmVnc1tDVFhf
TFJJX0hFQURFUl8yXSA9IE1JX0xPQURfUkVHSVNURVJfSU1NKDEpIHwgbHJpX2Jhc2U7CkBAIC0z
MjM3LDYgKzMyNzAsNjEgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUz
MiAqcmVncywKIAkJcmVnc1tDVFhfRU5EXSB8PSBCSVQoMCk7CiB9CiAKK3N0YXRpYyB2b2lkIGdl
bjEyX2luaXRfcmVnX3N0YXRlKHUzMiAqIGNvbnN0IHJlZ3MsCisJCQkJIHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSwKKwkJCQkgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSBz
dHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3sKKwlzdHJ1Y3QgaTkxNV9wcGd0dCAqIGNvbnN0IHBw
Z3R0ID0gaTkxNV92bV90b19wcGd0dChjZS0+dm0pOworCWNvbnN0IGJvb2wgcmNzID0gZW5naW5l
LT5jbGFzcyA9PSBSRU5ERVJfQ0xBU1M7CisJY29uc3QgdTMyIGJhc2UgPSBlbmdpbmUtPm1taW9f
YmFzZTsKKwljb25zdCB1MzIgbHJpX2Jhc2UgPSBpbnRlbF9lbmdpbmVfaGFzX3JlbGF0aXZlX21t
aW8oZW5naW5lKSA/CisJCU1JX0xSSV9DU19NTUlPIDogMDsKKworCUdFTV9ERUJVR19FWEVDKERS
TV9JTkZPX09OQ0UoIlVzaW5nIEdFTjEyIFJlZ2lzdGVyIFN0YXRlIENvbnRleHRcbiIpKTsKKwor
CXJlZ3NbQ1RYX0xSSV9IRUFERVJfMF0gPSBNSV9MT0FEX1JFR0lTVEVSX0lNTShyY3MgPyAxMSA6
IDkpIHwKKwkJTUlfTFJJX0ZPUkNFX1BPU1RFRCB8IGxyaV9iYXNlOworCisJaW5pdF9jb21tb25f
cmVnX3N0YXRlKHJlZ3MsIHBwZ3R0LCBlbmdpbmUsIHJpbmcpOworCisJLyogV2Ugd2FudCBjdHhf
cHRyIGZvciBhbGwgZW5naW5lcyB0byBiZSBzZXQgKi8KKwlpbml0X3dhX2JiX3JlZ19zdGF0ZShy
ZWdzLCBlbmdpbmUsIEdFTjEyX0NUWF9CQl9QRVJfQ1RYX1BUUik7CisKKwlyZWdzW0NUWF9MUklf
SEVBREVSXzFdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oOSkgfAorCQlNSV9MUklfRk9SQ0VfUE9T
VEVEIHwgbHJpX2Jhc2U7CisKKwlDVFhfUkVHKHJlZ3MsIENUWF9DVFhfVElNRVNUQU1QLCBSSU5H
X0NUWF9USU1FU1RBTVAoYmFzZSksIDApOworCisJaW5pdF9wcGd0dF9yZWdfc3RhdGUocmVncywg
YmFzZSwgcHBndHQpOworCisJaWYgKHJjcykgeworCQlyZWdzW0dFTjEyX0NUWF9MUklfSEVBREVS
XzNdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oMSkgfAorCQkJbHJpX2Jhc2U7CisJCUNUWF9SRUco
cmVncywgQ1RYX1JfUFdSX0NMS19TVEFURSwgR0VOOF9SX1BXUl9DTEtfU1RBVEUsIDApOworCisJ
CS8qIFRPRE86IG9hX2luaXRfcmVnX3N0YXRlID8gKi8KKwl9Cit9CisKK3N0YXRpYyB2b2lkIGV4
ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCisJCQkJICAgICBzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqY2UsCisJCQkJICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJ
CQkJICAgICBzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3sKKwkvKiBBIGNvbnRleHQgaXMgYWN0
dWFsbHkgYSBiaWcgYmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAorCSAqIE1JX0xPQURfUkVHSVNU
RVJfSU1NIGNvbW1hbmRzIGZvbGxvd2VkIGJ5IChyZWcsIHZhbHVlKSBwYWlycy4gVGhlCisJICog
dmFsdWVzIHdlIGFyZSBzZXR0aW5nIGhlcmUgYXJlIG9ubHkgZm9yIHRoZSBmaXJzdCBjb250ZXh0
IHJlc3RvcmU6CisJICogb24gYSBzdWJzZXF1ZW50IHNhdmUsIHRoZSBHUFUgd2lsbCByZWNyZWF0
ZSB0aGlzIGJhdGNoYnVmZmVyIHdpdGggbmV3CisJICogdmFsdWVzIChpbmNsdWRpbmcgYWxsIHRo
ZSBtaXNzaW5nIE1JX0xPQURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIHRoYXQKKwkgKiB3ZSBhcmUg
bm90IGluaXRpYWxpemluZyBoZXJlKS4KKwkgKi8KKwlpZiAoSU5URUxfR0VOKGVuZ2luZS0+aTkx
NSkgPj0gMTIpCisJCWdlbjEyX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBlbmdpbmUsIHJpbmcp
OworCWVsc2UKKwkJZ2VuOF9pbml0X3JlZ19zdGF0ZShyZWdzLCBjZSwgZW5naW5lLCByaW5nKTsK
K30KKwogc3RhdGljIGludAogcG9wdWxhdGVfbHJfY29udGV4dChzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UsCiAJCSAgICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29iaiwKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaAppbmRleCBiOGYyMGFkNzExNjkuLjY4Y2Fm
ODU0MTg2NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjX3Jl
Zy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyY19yZWcuaApAQCAtOSw3
ICs5LDcgQEAKIAogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAKLS8qIEdFTjgrIFJlZyBTdGF0
ZSBDb250ZXh0ICovCisvKiBHRU44IHRvIEdFTjExIFJlZyBTdGF0ZSBDb250ZXh0ICovCiAjZGVm
aW5lIENUWF9MUklfSEVBREVSXzAJCTB4MDEKICNkZWZpbmUgQ1RYX0NPTlRFWFRfQ09OVFJPTAkJ
MHgwMgogI2RlZmluZSBDVFhfUklOR19IRUFECQkJMHgwNApAQCAtMzksNiArMzksMTAgQEAKICNk
ZWZpbmUgQ1RYX1JfUFdSX0NMS19TVEFURQkJMHg0MgogI2RlZmluZSBDVFhfRU5ECQkJCTB4NDQK
IAorLyogR0VOMTIrIFJlZyBTdGF0ZSBDb250ZXh0ICovCisjZGVmaW5lIEdFTjEyX0NUWF9CQl9Q
RVJfQ1RYX1BUUgkJMHgxMgorI2RlZmluZSBHRU4xMl9DVFhfTFJJX0hFQURFUl8zCQkJMHg0MQor
CiAjZGVmaW5lIENUWF9SRUcocmVnX3N0YXRlLCBwb3MsIHJlZywgdmFsKSBkbyB7IFwKIAl1MzIg
KnJlZ19zdGF0ZV9fID0gKHJlZ19zdGF0ZSk7IFwKIAljb25zdCB1MzIgcG9zX18gPSAocG9zKTsg
XAotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1n
Zng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BC2AC74853
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Jul 2019 09:43:31 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 798FD6E670;
	Thu, 25 Jul 2019 07:43:29 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3466D6E670
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 07:43:28 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17588216-1500050 
 for multiple; Thu, 25 Jul 2019 08:43:07 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 25 Jul 2019 08:43:05 +0100
Message-Id: <20190725074305.22754-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: Unshare the idle-barrier from other
 kernel requests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VW5kZXIgc29tZSBjaXJjdW1zdGFuY2VzIChzZWUgaW50ZWxfY29udGV4dF9wcmVwYXJlX3JlbW90
ZV9yZXF1ZXN0KSwgd2UKbWF5IHVzZSBhIHJlcXVlc3QgYWxvbmcgYSBrZXJuZWwgY29udGV4dCB0
byBtb2RpZnkgdGhlIGxvZ2ljYWwgc3RhdGUgb2YKYW5vdGhlci4gVG8ga2VlcCB0aGUgdGFyZ2V0
IGNvbnRleHQgaW4gcGxhY2Ugd2hpbGUgdGhlIHJlcXVlc3QgZXhlY3V0ZXMsCndlIHRha2UgYW4g
YWN0aXZlIHJlZmVyZW5jZSBvbiBpdCB1c2luZyB0aGUga2VybmVsIHRpbWVsaW5lLiBUaGlzIGlz
IHRoZQpzYW1lIHRpbWVsaW5lIGFzIHdlIHVzZSBmb3IgdGhlIGlkbGUtYmFycmllciwgYW5kIHNv
IHdlIGVuZCB1cCByZXVzaW5nCnRoZSBzYW1lIGFjdGl2ZSBub2RlLiBFeGNlcHQgdGhhdCB0aGUg
aWRsZSBiYXJyaWVyIGlzIHNwZWNpYWwgYW5kIGNhbm5vdApiZSByZXVzZWQgaW4gdGhpcyBtYW5u
ZXIhIEdpdmUgdGhlIGlkbGUtYmFycmllciBhIHJlc2VydmVkIHRpbWVsaW5lCmluZGV4ICgwKSBz
byB0aGF0IGl0IHdpbGwgYWx3YXlzIGJlIHVuaXF1ZSAoZ2l2ZSBvciB0YWtlIHdlIG1heSBpc3N1
ZQptdWx0aXBsZSBpZGxlIGJhcnJpZXJzIGFjcm9zcyBtdWx0aXBsZSBlbmdpbmVzKS4KClJlcG9y
dGVkLWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+
CkZpeGVzOiBjZTQ3NmM4MGI4YmYgKCJkcm0vaTkxNTogS2VlcCBjb250ZXh0cyBwaW5uZWQgdW50
aWwgYWZ0ZXIgdGhlIG5leHQga2VybmVsIGNvbnRleHQgc3dpdGNoIikKRml4ZXM6IGE5ODc3ZGEy
ZDYyOSAoImRybS9pOTE1L29hOiBSZWNvbmZpZ3VyZSBjb250ZXh0cyBvbiB0aGUgZmx5IikKU2ln
bmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBM
aW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+CkNjOiBUdnJ0
a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KTm93IHdpdGggYSBzdWNj
ZXNzZnVsIHRlc3RjYXNlIQotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRl
eHQuYyAgICAgICB8ICA0MiArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRl
eHQuaCAgICAgICB8ICAxMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29u
dGV4dC5jICAgIHwgMzIxICsrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9hY3RpdmUuYyAgICAgICAgICAgIHwgIDU5ICsrKy0KIC4uLi9kcm0vaTkxNS9zZWxmdGVz
dHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oICB8ICAgMyArLQogNSBmaWxlcyBjaGFuZ2VkLCA0MDAg
aW5zZXJ0aW9ucygrKSwgMzggZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29udGV4dC5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfY29udGV4dC5jCmluZGV4IDkyOTJiNmNhNWU5Yy4uYmMyMDE2MWJhYjlmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCkBAIC0xNjIsMTggKzE2Miw4IEBA
IHN0YXRpYyBpbnQgX19pbnRlbF9jb250ZXh0X2FjdGl2ZShzdHJ1Y3QgaTkxNV9hY3RpdmUgKmFj
dGl2ZSkKIAlpZiAoZXJyKQogCQlnb3RvIGVycl9yaW5nOwogCi0JLyogUHJlYWxsb2NhdGUgdHJh
Y2tpbmcgbm9kZXMgKi8KLQlpZiAoIWk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKGNlLT5nZW1f
Y29udGV4dCkpIHsKLQkJZXJyID0gaTkxNV9hY3RpdmVfYWNxdWlyZV9wcmVhbGxvY2F0ZV9iYXJy
aWVyKCZjZS0+YWN0aXZlLAotCQkJCQkJCSAgICAgIGNlLT5lbmdpbmUpOwotCQlpZiAoZXJyKQot
CQkJZ290byBlcnJfc3RhdGU7Ci0JfQotCiAJcmV0dXJuIDA7CiAKLWVycl9zdGF0ZToKLQlfX2Nv
bnRleHRfdW5waW5fc3RhdGUoY2UtPnN0YXRlKTsKIGVycl9yaW5nOgogCWludGVsX3JpbmdfdW5w
aW4oY2UtPnJpbmcpOwogZXJyX3B1dDoKQEAgLTE4MSw2ICsxNzEsMzQgQEAgc3RhdGljIGludCBf
X2ludGVsX2NvbnRleHRfYWN0aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqYWN0aXZlKQogCXJldHVy
biBlcnI7CiB9CiAKK2ludCBpbnRlbF9jb250ZXh0X2FjdGl2ZV9hY3F1aXJlKHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKKwlpbnQgZXJyOworCisJZXJyID0gaTkxNV9hY3RpdmVfYWNxdWly
ZSgmY2UtPmFjdGl2ZSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCS8qIFByZWFsbG9j
YXRlIHRyYWNraW5nIG5vZGVzICovCisJaWYgKGNlLT5zdGF0ZSAmJiAhaTkxNV9nZW1fY29udGV4
dF9pc19rZXJuZWwoY2UtPmdlbV9jb250ZXh0KSkgeworCQllcnIgPSBpOTE1X2FjdGl2ZV9hY3F1
aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIoJmNlLT5hY3RpdmUsCisJCQkJCQkJICAgICAgY2UtPmVu
Z2luZSk7CisJCWlmIChlcnIpIHsKKwkJCWk5MTVfYWN0aXZlX3JlbGVhc2UoJmNlLT5hY3RpdmUp
OworCQkJcmV0dXJuIGVycjsKKwkJfQorCX0KKworCXJldHVybiAwOworfQorCit2b2lkIGludGVs
X2NvbnRleHRfYWN0aXZlX3JlbGVhc2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCS8q
IE5vZGVzIHByZWFsbG9jYXRlZCBpbiBpbnRlbF9jb250ZXh0X2FjdGl2ZSgpICovCisJaTkxNV9h
Y3RpdmVfYWNxdWlyZV9iYXJyaWVyKCZjZS0+YWN0aXZlKTsKKwlpOTE1X2FjdGl2ZV9yZWxlYXNl
KCZjZS0+YWN0aXZlKTsKK30KKwogdm9pZAogaW50ZWxfY29udGV4dF9pbml0KHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSwKIAkJICAgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKQEAgLTI4
NCwzICszMDIsNyBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICppbnRlbF9jb250ZXh0X2NyZWF0ZV9y
ZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAogCXJldHVybiBycTsKIH0KKworI2lm
IElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQorI2luY2x1ZGUgInNlbGZ0ZXN0
X2NvbnRleHQuYyIKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfY29udGV4dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5o
CmluZGV4IDIzYzdlNGMwY2U3Yy4uMDdmOTkyNGRlNDhmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfY29udGV4dC5oCkBAIC0xMDQsMTcgKzEwNCw4IEBAIHN0YXRpYyBpbmxpbmUgdm9p
ZCBpbnRlbF9jb250ZXh0X2V4aXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCQljZS0+b3Bz
LT5leGl0KGNlKTsKIH0KIAotc3RhdGljIGlubGluZSBpbnQgaW50ZWxfY29udGV4dF9hY3RpdmVf
YWNxdWlyZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCi17Ci0JcmV0dXJuIGk5MTVfYWN0aXZl
X2FjcXVpcmUoJmNlLT5hY3RpdmUpOwotfQotCi1zdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfY29u
dGV4dF9hY3RpdmVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCi17Ci0JLyogTm9k
ZXMgcHJlYWxsb2NhdGVkIGluIGludGVsX2NvbnRleHRfYWN0aXZlKCkgKi8KLQlpOTE1X2FjdGl2
ZV9hY3F1aXJlX2JhcnJpZXIoJmNlLT5hY3RpdmUpOwotCWk5MTVfYWN0aXZlX3JlbGVhc2UoJmNl
LT5hY3RpdmUpOwotfQoraW50IGludGVsX2NvbnRleHRfYWN0aXZlX2FjcXVpcmUoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKTsKK3ZvaWQgaW50ZWxfY29udGV4dF9hY3RpdmVfcmVsZWFzZShzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpOwogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9jb250
ZXh0ICppbnRlbF9jb250ZXh0X2dldChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5kOTJjZWJhZGY5N2QKLS0tIC9kZXYvbnVsbAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKQEAgLTAsMCArMSwzMjEg
QEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorICoKKyAqIENvcHly
aWdodCDCqSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2luY2x1ZGUgImk5MTVfc2Vs
ZnRlc3QuaCIKKyNpbmNsdWRlICJpbnRlbF9ndC5oIgorCisjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0
cy9tb2NrX2NvbnRleHQuaCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X2ZsdXNoX3Rlc3QuaCIK
KyNpbmNsdWRlICJzZWxmdGVzdHMvbW9ja19kcm0uaCIKKworc3RhdGljIGludCByZXF1ZXN0X3N5
bmMoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJbG9uZyB0aW1lb3V0OworCWludCBlcnIg
PSAwOworCisJaTkxNV9yZXF1ZXN0X2dldChycSk7CisKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsK
Kwl0aW1lb3V0ID0gaTkxNV9yZXF1ZXN0X3dhaXQocnEsIDAsIEhaIC8gMTApOworCWlmICh0aW1l
b3V0IDwgMCkKKwkJZXJyID0gdGltZW91dDsKKwllbHNlCisJCWk5MTVfcmVxdWVzdF9yZXRpcmVf
dXB0byhycSk7CisKKwlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKworCXJldHVybiBlcnI7Cit9CisK
K3N0YXRpYyBpbnQgY29udGV4dF9zeW5jKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlz
dHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsID0gY2UtPnJpbmctPnRpbWVsaW5lOworCWludCBlcnIg
PSAwOworCisJZG8geworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwkJbG9uZyB0aW1lb3V0
OworCisJCXJjdV9yZWFkX2xvY2soKTsKKwkJcnEgPSByY3VfZGVyZWZlcmVuY2UodGwtPmxhc3Rf
cmVxdWVzdC5yZXF1ZXN0KTsKKwkJaWYgKHJxKQorCQkJcnEgPSBpOTE1X3JlcXVlc3RfZ2V0X3Jj
dShycSk7CisJCXJjdV9yZWFkX3VubG9jaygpOworCQlpZiAoIXJxKQorCQkJcmV0dXJuIDA7CisK
KwkJdGltZW91dCA9IGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDEwKTsKKwkJaWYgKHRp
bWVvdXQgPCAwKQorCQkJZXJyID0gdGltZW91dDsKKwkJZWxzZQorCQkJaTkxNV9yZXF1ZXN0X3Jl
dGlyZV91cHRvKHJxKTsKKworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwl9IHdoaWxlICghZXJy
KTsKKworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyBpbnQgX19saXZlX2FjdGl2ZV9jb250ZXh0
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCQkgc3RydWN0IGk5MTVfZ2VtX2Nv
bnRleHQgKmZpeG1lKQoreworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwlpbnQgcGFzczsK
KwlpbnQgZXJyOworCisJLyoKKwkgKiBXZSBrZWVwIGFjdGl2ZSBjb250ZXh0cyBhbGl2ZSB1bnRp
bCBhZnRlciBhIHN1YnNlcXVlbnQgY29udGV4dAorCSAqIHN3aXRjaCBhcyB0aGUgZmluYWwgd3Jp
dGUgZnJvbSB0aGUgY29udGV4dC1zYXZlIHdpbGwgYmUgYWZ0ZXIKKwkgKiB3ZSByZXRpcmUgdGhl
IGZpbmFsIHJlcXVlc3QuIFdlIHRyYWNrIHdoZW4gd2UgdW5waW4gdGhlIGNvbnRleHQsCisJICog
dW5kZXIgdGhlIHByZXN1bXB0aW9uIHRoYXQgdGhlIGZpbmFsIHBpbiBpcyBmcm9tIHRoZSBsYXN0
IHJlcXVlc3QsCisJICogYW5kIGluc3RlYWQgb2YgaW1tZWRpYXRlbHkgdW5waW5uaW5nIHRoZSBj
b250ZXh0LCB3ZSBhZGQgYSB0YXNrCisJICogdG8gdW5waW4gdGhlIGNvbnRleHQgZnJvbSB0aGUg
bmV4dCBpZGxlLWJhcnJpZXIuCisJICoKKwkgKiBUaGlzIHRlc3QgbWFrZXMgc3VyZSB0aGF0IHRo
ZSBjb250ZXh0IGlzIGtlcHQgYWxpdmUgdW50aWwgYQorCSAqIHN1YnNlcXVlbnQgaWRsZS1iYXJy
aWVyIChlbWl0dGVkIHdoZW4gdGhlIGVuZ2luZSB3YWtlcmVmIGhpdHMgMAorCSAqIHdpdGggbm8g
bW9yZSBvdXRzdGFuZGluZyByZXF1ZXN0cykuCisJICovCisKKwlpZiAoaW50ZWxfZW5naW5lX3Bt
X2lzX2F3YWtlKGVuZ2luZSkpIHsKKwkJcHJfZXJyKCIlcyBpcyBhd2FrZSBiZWZvcmUgc3RhcnRp
bmcgJXMhXG4iLAorCQkgICAgICAgZW5naW5lLT5uYW1lLCBfX2Z1bmNfXyk7CisJCXJldHVybiAt
RUlOVkFMOworCX0KKworCWNlID0gaW50ZWxfY29udGV4dF9jcmVhdGUoZml4bWUsIGVuZ2luZSk7
CisJaWYgKCFjZSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlmb3IgKHBhc3MgPSAwOyBwYXNzIDw9
IDI7IHBhc3MrKykgeworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCQlycSA9IGludGVs
X2NvbnRleHRfY3JlYXRlX3JlcXVlc3QoY2UpOworCQlpZiAoSVNfRVJSKHJxKSkgeworCQkJZXJy
ID0gUFRSX0VSUihycSk7CisJCQlnb3RvIGVycjsKKwkJfQorCisJCWVyciA9IHJlcXVlc3Rfc3lu
YyhycSk7CisJCWlmIChlcnIpCisJCQlnb3RvIGVycjsKKworCQkvKiBDb250ZXh0IHdpbGwgYmUg
a2VwdCBhY3RpdmUgdW50aWwgYWZ0ZXIgYW4gaWRsZS1iYXJyaWVyLiAqLworCQlpZiAoaTkxNV9h
Y3RpdmVfaXNfaWRsZSgmY2UtPmFjdGl2ZSkpIHsKKwkJCXByX2VycigiY29udGV4dCBpcyBub3Qg
YWN0aXZlOyBleHBlY3RlZCBpZGxlLWJhcnJpZXIgKHBhc3MgJWQpXG4iLCBwYXNzKTsKKwkJCWVy
ciA9IC1FSU5WQUw7CisJCQlnb3RvIGVycjsKKwkJfQorCisJCWlmICghaW50ZWxfZW5naW5lX3Bt
X2lzX2F3YWtlKGVuZ2luZSkpIHsKKwkJCXByX2VycigiJXMgaXMgYXNsZWVwIGJlZm9yZSBpZGxl
LWJhcnJpZXIgJXMhXG4iLAorCQkJICAgICAgIGVuZ2luZS0+bmFtZSwgX19mdW5jX18pOworCQkJ
ZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gZXJyOworCQl9CisJfQorCisJLyogTm93IG1ha2Ugc3Vy
ZSBvdXIgaWRsZS1iYXJyaWVycyBhcmUgZmx1c2hlZCAqLworCWVyciA9IGNvbnRleHRfc3luYyhl
bmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycjsKKworCWlmICgh
aTkxNV9hY3RpdmVfaXNfaWRsZSgmY2UtPmFjdGl2ZSkpIHsKKwkJcHJfZXJyKCJjb250ZXh0IGlz
IHN0aWxsIGFjdGl2ZSEiKTsKKwkJZXJyID0gLUVJTlZBTDsKKwl9CisKKwlpZiAoaW50ZWxfZW5n
aW5lX3BtX2lzX2F3YWtlKGVuZ2luZSkpIHsKKwkJc3RydWN0IGRybV9wcmludGVyIHAgPSBkcm1f
ZGVidWdfcHJpbnRlcihfX2Z1bmNfXyk7CisKKwkJaW50ZWxfZW5naW5lX2R1bXAoZW5naW5lLCAm
cCwKKwkJCQkgICIlcyBpcyBzdGlsbCBhd2FrZSBhZnRlciBpZGxlLWJhcnJpZXJzXG4iLAorCQkJ
CSAgZW5naW5lLT5uYW1lKTsKKwkJR0VNX1RSQUNFX0RVTVAoKTsKKworCQllcnIgPSAtRUlOVkFM
OworCQlnb3RvIGVycjsKKwl9CisKK2VycjoKKwlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisJcmV0
dXJuIGVycjsKK30KKworc3RhdGljIGludCBsaXZlX2FjdGl2ZV9jb250ZXh0KHZvaWQgKmFyZykK
K3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZml4bWU7CisJZW51bSBpbnRlbF9l
bmdpbmVfaWQgaWQ7CisJc3RydWN0IGRybV9maWxlICpmaWxlOworCWludCBlcnIgPSAwOworCisJ
ZmlsZSA9IG1vY2tfZmlsZShndC0+aTkxNSk7CisJaWYgKElTX0VSUihmaWxlKSkKKwkJcmV0dXJu
IFBUUl9FUlIoZmlsZSk7CisKKwltdXRleF9sb2NrKCZndC0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRl
eCk7CisKKwlmaXhtZSA9IGxpdmVfY29udGV4dChndC0+aTkxNSwgZmlsZSk7CisJaWYgKCFmaXht
ZSkgeworCQllcnIgPSAtRU5PTUVNOworCQlnb3RvIHVubG9jazsKKwl9CisKKwlmb3JfZWFjaF9l
bmdpbmUoZW5naW5lLCBndC0+aTkxNSwgaWQpIHsKKwkJZXJyID0gX19saXZlX2FjdGl2ZV9jb250
ZXh0KGVuZ2luZSwgZml4bWUpOworCQlpZiAoZXJyKQorCQkJYnJlYWs7CisKKwkJZXJyID0gaWd0
X2ZsdXNoX3Rlc3QoZ3QtPmk5MTUsIEk5MTVfV0FJVF9MT0NLRUQpOworCQlpZiAoZXJyKQorCQkJ
YnJlYWs7CisJfQorCit1bmxvY2s6CisJbXV0ZXhfdW5sb2NrKCZndC0+aTkxNS0+ZHJtLnN0cnVj
dF9tdXRleCk7CisJbW9ja19maWxlX2ZyZWUoZ3QtPmk5MTUsIGZpbGUpOworCXJldHVybiBlcnI7
Cit9CisKK3N0YXRpYyBpbnQgX19saXZlX3JlbW90ZV9jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwKKwkJCQkgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmZpeG1lKQorewor
CXN0cnVjdCBpbnRlbF9jb250ZXh0ICpsb2NhbCwgKnJlbW90ZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKKwlpbnQgcGFzczsKKwlpbnQgZXJyOworCisJLyoKKwkgKiBDaGVjayB0aGF0IG91
ciBpZGxlIGJhcnJpZXJzIGRvIG5vdCBpbnRlcmZlcmUgd2l0aCBub3JtYWwKKwkgKiBhY3Rpdml0
eSB0cmFja2luZy4gSW4gcGFydGljdWxhciwgY2hlY2sgdGhhdCBvcGVyYXRpbmcKKwkgKiBvbiB0
aGUgY29udGV4dCBpbWFnZSByZW1vdGVseSAoaW50ZWxfY29udGV4dF9wcmVwYXJlX3JlbW90ZV9y
ZXF1ZXN0KQorCSAqIHdoaWNoIGluc2VydHMgZm9yaWVnbiBmZW5jZXMgaW50byBpbnRlbF9jb250
ZXh0LmFjdGl2ZSBhcmUgbm90CisJICogY2xvYmJlcmVkLgorCSAqLworCisJcmVtb3RlID0gaW50
ZWxfY29udGV4dF9jcmVhdGUoZml4bWUsIGVuZ2luZSk7CisJaWYgKCFyZW1vdGUpCisJCXJldHVy
biAtRU5PTUVNOworCisJbG9jYWwgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShmaXhtZSwgZW5naW5l
KTsKKwlpZiAoIWxvY2FsKSB7CisJCWVyciA9IC1FTk9NRU07CisJCWdvdG8gZXJyX3JlbW90ZTsK
Kwl9CisKKwlmb3IgKHBhc3MgPSAwOyBwYXNzIDw9IDI7IHBhc3MrKykgeworCQllcnIgPSBpbnRl
bF9jb250ZXh0X3BpbihyZW1vdGUpOworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfbG9jYWw7CisK
KwkJcnEgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KGxvY2FsKTsKKwkJaWYgKElTX0VS
UihycSkpIHsKKwkJCWVyciA9IFBUUl9FUlIocnEpOworCQkJZ290byBlcnJfdW5waW47CisJCX0K
KworCQllcnIgPSBpbnRlbF9jb250ZXh0X3ByZXBhcmVfcmVtb3RlX3JlcXVlc3QocmVtb3RlLCBy
cSk7CisJCWlmIChlcnIpIHsKKwkJCWk5MTVfcmVxdWVzdF9hZGQocnEpOworCQkJZ290byBlcnJf
dW5waW47CisJCX0KKworCQllcnIgPSByZXF1ZXN0X3N5bmMocnEpOworCQlpZiAoZXJyKQorCQkJ
Z290byBlcnJfdW5waW47CisKKwkJaW50ZWxfY29udGV4dF91bnBpbihyZW1vdGUpOworCQllcnIg
PSBpbnRlbF9jb250ZXh0X3BpbihyZW1vdGUpOworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfbG9j
YWw7CisKKwkJcnEgPSBpOTE1X3JlcXVlc3RfY3JlYXRlKGVuZ2luZS0+a2VybmVsX2NvbnRleHQp
OworCQlpZiAoSVNfRVJSKHJxKSkgeworCQkJZXJyID0gUFRSX0VSUihycSk7CisJCQlnb3RvIGVy
cl91bnBpbjsKKwkJfQorCisJCWVyciA9IGludGVsX2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVx
dWVzdChyZW1vdGUsIHJxKTsKKwkJaWYgKGVycikgeworCQkJaTkxNV9yZXF1ZXN0X2FkZChycSk7
CisJCQlnb3RvIGVycl91bnBpbjsKKwkJfQorCisJCWVyciA9IHJlcXVlc3Rfc3luYyhycSk7CisJ
CWlmIChlcnIpCisJCQlnb3RvIGVycl91bnBpbjsKKworCQlpbnRlbF9jb250ZXh0X3VucGluKHJl
bW90ZSk7CisKKwkJaWYgKGk5MTVfYWN0aXZlX2lzX2lkbGUoJnJlbW90ZS0+YWN0aXZlKSkgewor
CQkJcHJfZXJyKCJyZW1vdGUgY29udGV4dCBpcyBub3QgYWN0aXZlOyBleHBlY3RlZCBpZGxlLWJh
cnJpZXIgKHBhc3MgJWQpXG4iLCBwYXNzKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlnb3RvIGVy
cl9sb2NhbDsKKwkJfQorCX0KKworCWdvdG8gZXJyX2xvY2FsOworCitlcnJfdW5waW46CisJaW50
ZWxfY29udGV4dF91bnBpbihyZW1vdGUpOworZXJyX2xvY2FsOgorCWludGVsX2NvbnRleHRfcHV0
KGxvY2FsKTsKK2Vycl9yZW1vdGU6CisJaW50ZWxfY29udGV4dF9wdXQocmVtb3RlKTsKKwlyZXR1
cm4gZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfcmVtb3RlX2NvbnRleHQodm9pZCAqYXJnKQor
eworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBhcmc7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lOworCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpmaXhtZTsKKwllbnVtIGludGVsX2Vu
Z2luZV9pZCBpZDsKKwlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGU7CisJaW50IGVyciA9IDA7CisKKwlm
aWxlID0gbW9ja19maWxlKGd0LT5pOTE1KTsKKwlpZiAoSVNfRVJSKGZpbGUpKQorCQlyZXR1cm4g
UFRSX0VSUihmaWxlKTsKKworCW11dGV4X2xvY2soJmd0LT5pOTE1LT5kcm0uc3RydWN0X211dGV4
KTsKKworCWZpeG1lID0gbGl2ZV9jb250ZXh0KGd0LT5pOTE1LCBmaWxlKTsKKwlpZiAoIWZpeG1l
KSB7CisJCWVyciA9IC1FTk9NRU07CisJCWdvdG8gdW5sb2NrOworCX0KKworCWZvcl9lYWNoX2Vu
Z2luZShlbmdpbmUsIGd0LT5pOTE1LCBpZCkgeworCQllcnIgPSBfX2xpdmVfcmVtb3RlX2NvbnRl
eHQoZW5naW5lLCBmaXhtZSk7CisJCWlmIChlcnIpCisJCQlicmVhazsKKworCQllcnIgPSBpZ3Rf
Zmx1c2hfdGVzdChndC0+aTkxNSwgSTkxNV9XQUlUX0xPQ0tFRCk7CisJCWlmIChlcnIpCisJCQli
cmVhazsKKwl9CisKK3VubG9jazoKKwltdXRleF91bmxvY2soJmd0LT5pOTE1LT5kcm0uc3RydWN0
X211dGV4KTsKKwltb2NrX2ZpbGVfZnJlZShndC0+aTkxNSwgZmlsZSk7CisJcmV0dXJuIGVycjsK
K30KKworaW50IGludGVsX2NvbnRleHRfbGl2ZV9zZWxmdGVzdHMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUpCit7CisJc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3N1YnRlc3QgdGVzdHNb
XSA9IHsKKwkJU1VCVEVTVChsaXZlX2FjdGl2ZV9jb250ZXh0KSwKKwkJU1VCVEVTVChsaXZlX3Jl
bW90ZV9jb250ZXh0KSwKKwl9OworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7CisK
KwlpZiAoaW50ZWxfZ3RfaXNfd2VkZ2VkKGd0KSkKKwkJcmV0dXJuIDA7CisKKwlyZXR1cm4gaW50
ZWxfZ3RfbGl2ZV9zdWJ0ZXN0cyh0ZXN0cywgZ3QpOworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0
aXZlLmMKaW5kZXggMTNmMzA0YTI5ZmM4Li4wNTdiMzNlYjcwNTUgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9hY3RpdmUuYwpAQCAtMTg0LDYgKzE4NCw3IEBAIGFjdGl2ZV9pbnN0YW5jZShzdHJ1Y3Qg
aTkxNV9hY3RpdmUgKnJlZiwgdTY0IGlkeCkKIAlyZWYtPmNhY2hlID0gbm9kZTsKIAltdXRleF91
bmxvY2soJnJlZi0+bXV0ZXgpOwogCisJQlVJTERfQlVHX09OKG9mZnNldG9mKHR5cGVvZigqbm9k
ZSksIGJhc2UpKTsKIAlyZXR1cm4gJm5vZGUtPmJhc2U7CiB9CiAKQEAgLTIxMiw2ICsyMTMsOCBA
QCBpbnQgaTkxNV9hY3RpdmVfcmVmKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLAogCXN0cnVjdCBp
OTE1X2FjdGl2ZV9yZXF1ZXN0ICphY3RpdmU7CiAJaW50IGVycjsKIAorCUdFTV9CVUdfT04oIXRp
bWVsaW5lKTsgLyogcmVzZXJ2ZWQgZm9yIGlkbGUtYmFycmllciAqLworCiAJLyogUHJldmVudCBy
ZWFwaW5nIGluIGNhc2Ugd2UgbWFsbG9jL3dhaXQgd2hpbGUgYnVpbGRpbmcgdGhlIHRyZWUgKi8K
IAllcnIgPSBpOTE1X2FjdGl2ZV9hY3F1aXJlKHJlZik7CiAJaWYgKGVycikKQEAgLTIyMiw2ICsy
MjUsNyBAQCBpbnQgaTkxNV9hY3RpdmVfcmVmKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLAogCQll
cnIgPSAtRU5PTUVNOwogCQlnb3RvIG91dDsKIAl9CisJR0VNX0JVR19PTihJU19FUlIoYWN0aXZl
LT5yZXF1ZXN0KSk7CiAKIAlpZiAoIWk5MTVfYWN0aXZlX3JlcXVlc3RfaXNzZXQoYWN0aXZlKSkK
IAkJYXRvbWljX2luYygmcmVmLT5jb3VudCk7CkBAIC0zNDIsNiArMzQ2LDI2IEBAIHZvaWQgaTkx
NV9hY3RpdmVfZmluaShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIH0KICNlbmRpZgogCitzdGF0
aWMgc3RydWN0IGFjdGl2ZV9ub2RlICppZGxlX2JhcnJpZXIoc3RydWN0IGk5MTVfYWN0aXZlICpy
ZWYpCit7CisJc3RydWN0IGFjdGl2ZV9ub2RlICpub2RlOworCXN0cnVjdCByYl9ub2RlICpyYjsK
KworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJlZi0+bXV0ZXgpOworCXJiID0gcmJfZmlyc3QoJnJl
Zi0+dHJlZSk7CisJaWYgKCFyYikKKwkJcmV0dXJuIE5VTEw7CisKKwlub2RlID0gcmJfZW50cnko
cmIsIHR5cGVvZigqbm9kZSksIG5vZGUpOworCWlmIChub2RlLT50aW1lbGluZSB8fCBpOTE1X2Fj
dGl2ZV9yZXF1ZXN0X2lzc2V0KCZub2RlLT5iYXNlKSkKKwkJcmV0dXJuIE5VTEw7CisKKwlHRU1f
QlVHX09OKCFsaXN0X2VtcHR5KCZub2RlLT5iYXNlLmxpbmspKTsKKwlyYl9lcmFzZShyYiwgJnJl
Zi0+dHJlZSk7CisKKwlyZXR1cm4gbm9kZTsKK30KKwogaW50IGk5MTVfYWN0aXZlX2FjcXVpcmVf
cHJlYWxsb2NhdGVfYmFycmllcihzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZiwKIAkJCQkJICAgIHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKQEAgLTM1MiwyMiArMzc2LDI5IEBAIGlu
dCBpOTE1X2FjdGl2ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIoc3RydWN0IGk5MTVfYWN0
aXZlICpyZWYsCiAKIAlHRU1fQlVHX09OKCFlbmdpbmUtPm1hc2spOwogCWZvcl9lYWNoX2VuZ2lu
ZV9tYXNrZWQoZW5naW5lLCBpOTE1LCBlbmdpbmUtPm1hc2ssIHRtcCkgewotCQlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqa2N0eCA9IGVuZ2luZS0+a2VybmVsX2NvbnRleHQ7CiAJCXN0cnVjdCBhY3Rp
dmVfbm9kZSAqbm9kZTsKIAotCQlub2RlID0ga21lbV9jYWNoZV9hbGxvYyhnbG9iYWwuc2xhYl9j
YWNoZSwgR0ZQX0tFUk5FTCk7Ci0JCWlmICh1bmxpa2VseSghbm9kZSkpIHsKLQkJCWVyciA9IC1F
Tk9NRU07Ci0JCQlnb3RvIHVud2luZDsKKwkJbm9kZSA9IGlkbGVfYmFycmllcihyZWYpOworCQlp
ZiAoIW5vZGUpIHsKKwkJCW5vZGUgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX2NhY2hl
LAorCQkJCQkJR0ZQX0tFUk5FTCB8CisJCQkJCQlfX0dGUF9SRVRSWV9NQVlGQUlMIHwKKwkJCQkJ
CV9fR0ZQX05PV0FSTik7CisJCQlpZiAodW5saWtlbHkoIW5vZGUpKSB7CisJCQkJZXJyID0gLUVO
T01FTTsKKwkJCQlnb3RvIHVud2luZDsKKwkJCX0KKworCQkJbm9kZS0+cmVmID0gcmVmOworCQkJ
bm9kZS0+dGltZWxpbmUgPSAwOworCQkJbm9kZS0+YmFzZS5yZXRpcmUgPSBub2RlX3JldGlyZTsK
IAkJfQogCi0JCWk5MTVfYWN0aXZlX3JlcXVlc3RfaW5pdCgmbm9kZS0+YmFzZSwKLQkJCQkJICh2
b2lkICopZW5naW5lLCBub2RlX3JldGlyZSk7Ci0JCW5vZGUtPnRpbWVsaW5lID0ga2N0eC0+cmlu
Zy0+dGltZWxpbmUtPmZlbmNlX2NvbnRleHQ7Ci0JCW5vZGUtPnJlZiA9IHJlZjsKKwkJaW50ZWxf
ZW5naW5lX3BtX2dldChlbmdpbmUpOworCisJCVJDVV9JTklUX1BPSU5URVIobm9kZS0+YmFzZS5y
ZXF1ZXN0LCAodm9pZCAqKWVuZ2luZSk7CiAJCWF0b21pY19pbmMoJnJlZi0+Y291bnQpOwogCi0J
CWludGVsX2VuZ2luZV9wbV9nZXQoZW5naW5lKTsKIAkJbGxpc3RfYWRkKChzdHJ1Y3QgbGxpc3Rf
bm9kZSAqKSZub2RlLT5iYXNlLmxpbmssCiAJCQkgICZyZWYtPmJhcnJpZXJzKTsKIAl9CkBAIC00
MDIsNiArNDMzLDcgQEAgdm9pZCBpOTE1X2FjdGl2ZV9hY3F1aXJlX2JhcnJpZXIoc3RydWN0IGk5
MTVfYWN0aXZlICpyZWYpCiAKIAkJbm9kZSA9IGNvbnRhaW5lcl9vZigoc3RydWN0IGxpc3RfaGVh
ZCAqKXBvcywKIAkJCQkgICAgdHlwZW9mKCpub2RlKSwgYmFzZS5saW5rKTsKKwkJR0VNX0JVR19P
Tihub2RlLT50aW1lbGluZSk7CiAKIAkJZW5naW5lID0gKHZvaWQgKilyY3VfYWNjZXNzX3BvaW50
ZXIobm9kZS0+YmFzZS5yZXF1ZXN0KTsKIAkJUkNVX0lOSVRfUE9JTlRFUihub2RlLT5iYXNlLnJl
cXVlc3QsIEVSUl9QVFIoLUVBR0FJTikpOwpAQCAtNDEwLDEyICs0NDIsNyBAQCB2b2lkIGk5MTVf
YWN0aXZlX2FjcXVpcmVfYmFycmllcihzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIAkJcCA9ICZy
ZWYtPnRyZWUucmJfbm9kZTsKIAkJd2hpbGUgKCpwKSB7CiAJCQlwYXJlbnQgPSAqcDsKLQkJCWlm
IChyYl9lbnRyeShwYXJlbnQsCi0JCQkJICAgICBzdHJ1Y3QgYWN0aXZlX25vZGUsCi0JCQkJICAg
ICBub2RlKS0+dGltZWxpbmUgPCBub2RlLT50aW1lbGluZSkKLQkJCQlwID0gJnBhcmVudC0+cmJf
cmlnaHQ7Ci0JCQllbHNlCi0JCQkJcCA9ICZwYXJlbnQtPnJiX2xlZnQ7CisJCQlwID0gJnBhcmVu
dC0+cmJfbGVmdDsKIAkJfQogCQlyYl9saW5rX25vZGUoJm5vZGUtPm5vZGUsIHBhcmVudCwgcCk7
CiAJCXJiX2luc2VydF9jb2xvcigmbm9kZS0+bm9kZSwgJnJlZi0+dHJlZSk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaAppbmRl
eCAyYjMxYTRlZTBiNGMuLmE4NDFkM2Y5YmVkYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oCkBAIC0xNSw2ICsxNSw3IEBA
IHNlbGZ0ZXN0KHdvcmthcm91bmRzLCBpbnRlbF93b3JrYXJvdW5kc19saXZlX3NlbGZ0ZXN0cykK
IHNlbGZ0ZXN0KHRpbWVsaW5lcywgaW50ZWxfdGltZWxpbmVfbGl2ZV9zZWxmdGVzdHMpCiBzZWxm
dGVzdChyZXF1ZXN0cywgaTkxNV9yZXF1ZXN0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoYWN0
aXZlLCBpOTE1X2FjdGl2ZV9saXZlX3NlbGZ0ZXN0cykKK3NlbGZ0ZXN0KGd0X2NvbnRleHRzLCBp
bnRlbF9jb250ZXh0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3Qob2JqZWN0cywgaTkxNV9nZW1f
b2JqZWN0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QobW1hbiwgaTkxNV9nZW1fbW1hbl9saXZl
X3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KGRtYWJ1ZiwgaTkxNV9nZW1fZG1hYnVmX2xpdmVfc2VsZnRl
c3RzKQpAQCAtMjQsNyArMjUsNyBAQCBzZWxmdGVzdChndHQsIGk5MTVfZ2VtX2d0dF9saXZlX3Nl
bGZ0ZXN0cykKIHNlbGZ0ZXN0KGdlbSwgaTkxNV9nZW1fbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVz
dChldmljdCwgaTkxNV9nZW1fZXZpY3RfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChodWdlcGFn
ZXMsIGk5MTVfZ2VtX2h1Z2VfcGFnZV9saXZlX3NlbGZ0ZXN0cykKLXNlbGZ0ZXN0KGNvbnRleHRz
LCBpOTE1X2dlbV9jb250ZXh0X2xpdmVfc2VsZnRlc3RzKQorc2VsZnRlc3QoZ2VtX2NvbnRleHRz
LCBpOTE1X2dlbV9jb250ZXh0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoYmx0LCBpOTE1X2dl
bV9vYmplY3RfYmx0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoY2xpZW50LCBpOTE1X2dlbV9j
bGllbnRfYmx0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QocmVzZXQsIGludGVsX3Jlc2V0X2xp
dmVfc2VsZnRlc3RzKQotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

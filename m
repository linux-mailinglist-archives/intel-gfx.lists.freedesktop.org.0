Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A068528DB1
	for <lists+intel-gfx@lfdr.de>; Fri, 24 May 2019 01:17:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B52906E047;
	Thu, 23 May 2019 23:17:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 813C06E047
 for <intel-gfx@lists.freedesktop.org>; Thu, 23 May 2019 23:17:33 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 May 2019 16:17:33 -0700
X-ExtLoop1: 1
Received: from rdvivi-losangeles.jf.intel.com ([10.7.196.65])
 by orsmga002.jf.intel.com with ESMTP; 23 May 2019 16:17:32 -0700
From: Rodrigo Vivi <rodrigo.vivi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 23 May 2019 16:17:58 -0700
Message-Id: <20190523231758.6230-1-rodrigo.vivi@intel.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915: We don't need display's
 suspend/resume operations when !HAS_DISPLAY
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3VzcGVuZCByZXN1bWUgaXMgYnJva2VuIGlmIHdlIHRyeSB0byBlbmFibGUvZGlzYWJsZSBkYzkg
b24KY2FzZXMgd2l0aCBkaXNhYmxlZCBkaXNwbGF5cy4KCnYyOiBNYWtlIGNoZWNrcGF0Y2ggaGFw
cHk6CiAgICAtIGJyYWNlcyB7fSBhcmUgbm90IG5lY2Vzc2FyeSBmb3Igc2luZ2xlIHN0YXRlbWVu
dCBibG9ja3MKCnYzOiBBbHNvIG1vdmUgaHN3L2JkdyBQQzggc2VxdWVuY2VzIHNpbmNlIHRoZXkg
YXJlIHJlbGF0ZWQgdG8KICAgIGRpc3BsYXkgUE0gYW55d2F5cy4gKFZpbGxlKQoKQ2M6IFZpbGxl
IFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+CkNjOiBKb3PDqSBSb2Jl
cnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogUm9kcmln
byBWaXZpIDxyb2RyaWdvLnZpdmlAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9zw6kgUm9iZXJ0
byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRlbC5jb20+ICh2MSkKLS0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2Rydi5jIHwgMTE3ICsrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0t
CiAxIGZpbGUgY2hhbmdlZCwgNzYgaW5zZXJ0aW9ucygrKSwgNDEgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmMKaW5kZXggODNkMmViOWU3NGNiLi5iZDczY2U1Nzc0MWEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kcnYuYwpAQCAtMjExOCw2ICsyMTE4LDE3IEBAIGdldF9zdXNwZW5kX21v
ZGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBib29sIGhpYmVybmF0ZSkKIAly
ZXR1cm4gSTkxNV9EUk1fU1VTUEVORF9NRU07CiB9CiAKK3N0YXRpYyB2b2lkIGludGVsX2Rpc3Bs
YXlfc3VzcGVuZF9sYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3sKKwlp
ZiAoIUhBU19ESVNQTEFZKGRldl9wcml2KSkKKwkJcmV0dXJuOworCisJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTEgfHwgSVNfR0VOOV9MUChkZXZfcHJpdikpCisJCWJ4dF9lbmFibGVfZGM5
KGRldl9wcml2KTsKKwllbHNlIGlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdF
TEwoZGV2X3ByaXYpKQorCQloc3dfZW5hYmxlX3BjOChkZXZfcHJpdik7Cit9CisKIHN0YXRpYyBp
bnQgaTkxNV9kcm1fc3VzcGVuZF9sYXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIGJvb2wgaGli
ZXJuYXRpb24pCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShkZXYpOwpAQCAtMjEzMywxMiArMjE0NCwxMCBAQCBzdGF0aWMgaW50IGk5MTVfZHJtX3N1c3Bl
bmRfbGF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBib29sIGhpYmVybmF0aW9uKQogCWludGVs
X3Bvd2VyX2RvbWFpbnNfc3VzcGVuZChkZXZfcHJpdiwKIAkJCQkgICAgZ2V0X3N1c3BlbmRfbW9k
ZShkZXZfcHJpdiwgaGliZXJuYXRpb24pKTsKIAorCWludGVsX2Rpc3BsYXlfc3VzcGVuZF9sYXRl
KGRldl9wcml2KTsKKwogCXJldCA9IDA7Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEg
fHwgSVNfR0VOOV9MUChkZXZfcHJpdikpCi0JCWJ4dF9lbmFibGVfZGM5KGRldl9wcml2KTsKLQll
bHNlIGlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQot
CQloc3dfZW5hYmxlX3BjOChkZXZfcHJpdik7Ci0JZWxzZSBpZiAoSVNfVkFMTEVZVklFVyhkZXZf
cHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCisJaWYgKElTX1ZBTExFWVZJRVcoZGV2
X3ByaXYpIHx8IElTX0NIRVJSWVZJRVcoZGV2X3ByaXYpKQogCQlyZXQgPSB2bHZfc3VzcGVuZF9j
b21wbGV0ZShkZXZfcHJpdik7CiAKIAlpZiAocmV0KSB7CkBAIC0yMjY2LDYgKzIyNzUsMTkgQEAg
c3RhdGljIGludCBpOTE1X2RybV9yZXN1bWUoc3RydWN0IGRybV9kZXZpY2UgKmRldikKIAlyZXR1
cm4gMDsKIH0KIAorc3RhdGljIHZvaWQgaW50ZWxfZGlzcGxheV9yZXN1bWVfZWFybHkoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQoreworCWlmICghSEFTX0RJU1BMQVkoZGV2X3By
aXYpKQorCQlyZXR1cm47CisKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSB8fCBJU19H
RU45X0xQKGRldl9wcml2KSkgeworCQlnZW45X3Nhbml0aXplX2RjX3N0YXRlKGRldl9wcml2KTsK
KwkJYnh0X2Rpc2FibGVfZGM5KGRldl9wcml2KTsKKwl9IGVsc2UgaWYgKElTX0hBU1dFTEwoZGV2
X3ByaXYpIHx8IElTX0JST0FEV0VMTChkZXZfcHJpdikpIHsKKwkJaHN3X2Rpc2FibGVfcGM4KGRl
dl9wcml2KTsKKwl9Cit9CisKIHN0YXRpYyBpbnQgaTkxNV9kcm1fcmVzdW1lX2Vhcmx5KHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShkZXYpOwpAQCAtMjMyOCwxMiArMjM1MCw3IEBAIHN0YXRpYyBpbnQgaTkxNV9k
cm1fcmVzdW1lX2Vhcmx5KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIAlpOTE1X2NoZWNrX2Fu
ZF9jbGVhcl9mYXVsdHMoZGV2X3ByaXYpOwogCi0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0g
MTEgfHwgSVNfR0VOOV9MUChkZXZfcHJpdikpIHsKLQkJZ2VuOV9zYW5pdGl6ZV9kY19zdGF0ZShk
ZXZfcHJpdik7Ci0JCWJ4dF9kaXNhYmxlX2RjOShkZXZfcHJpdik7Ci0JfSBlbHNlIGlmIChJU19I
QVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7Ci0JCWhzd19kaXNh
YmxlX3BjOChkZXZfcHJpdik7Ci0JfQorCWludGVsX2Rpc3BsYXlfcmVzdW1lX2Vhcmx5KGRldl9w
cml2KTsKIAogCWludGVsX3VuY29yZV9zYW5pdGl6ZShkZXZfcHJpdik7CiAKQEAgLTI4NjksNiAr
Mjg4NiwyMiBAQCBzdGF0aWMgaW50IHZsdl9yZXN1bWVfcHJlcGFyZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCiAJcmV0dXJuIHJldDsKIH0KIAorc3RhdGljIHZvaWQgaW50ZWxf
cnVudGltZV9kaXNwbGF5X3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQoreworCWlmICghSEFTX0RJU1BMQVkoZGV2X3ByaXYpKQorCQlyZXR1cm47CisKKwlpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSAxMSkgeworCQlpY2xfZGlzcGxheV9jb3JlX3VuaW5pdChkZXZf
cHJpdik7CisJCWJ4dF9lbmFibGVfZGM5KGRldl9wcml2KTsKKwl9IGVsc2UgaWYgKElTX0dFTjlf
TFAoZGV2X3ByaXYpKSB7CisJCWJ4dF9kaXNwbGF5X2NvcmVfdW5pbml0KGRldl9wcml2KTsKKwkJ
Ynh0X2VuYWJsZV9kYzkoZGV2X3ByaXYpOworCX0gZWxzZSBpZiAoSVNfSEFTV0VMTChkZXZfcHJp
dikgfHwgSVNfQlJPQURXRUxMKGRldl9wcml2KSkgeworCQloc3dfZW5hYmxlX3BjOChkZXZfcHJp
dik7CisJfQorfQorCiBzdGF0aWMgaW50IGludGVsX3J1bnRpbWVfc3VzcGVuZChzdHJ1Y3QgZGV2
aWNlICprZGV2KQogewogCXN0cnVjdCBwY2lfZGV2ICpwZGV2ID0gdG9fcGNpX2RldihrZGV2KTsK
QEAgLTI4OTgsMTggKzI5MzEsMTEgQEAgc3RhdGljIGludCBpbnRlbF9ydW50aW1lX3N1c3BlbmQo
c3RydWN0IGRldmljZSAqa2RldikKIAogCWludGVsX3VuY29yZV9zdXNwZW5kKCZkZXZfcHJpdi0+
dW5jb3JlKTsKIAorCWludGVsX3J1bnRpbWVfZGlzcGxheV9zdXNwZW5kKGRldl9wcml2KTsKKwog
CXJldCA9IDA7Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpIHsKLQkJaWNsX2Rpc3Bs
YXlfY29yZV91bmluaXQoZGV2X3ByaXYpOwotCQlieHRfZW5hYmxlX2RjOShkZXZfcHJpdik7Ci0J
fSBlbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2KSkgewotCQlieHRfZGlzcGxheV9jb3JlX3Vu
aW5pdChkZXZfcHJpdik7Ci0JCWJ4dF9lbmFibGVfZGM5KGRldl9wcml2KTsKLQl9IGVsc2UgaWYg
KElTX0hBU1dFTEwoZGV2X3ByaXYpIHx8IElTX0JST0FEV0VMTChkZXZfcHJpdikpIHsKLQkJaHN3
X2VuYWJsZV9wYzgoZGV2X3ByaXYpOwotCX0gZWxzZSBpZiAoSVNfVkFMTEVZVklFVyhkZXZfcHJp
dikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpIHsKKwlpZiAoSVNfVkFMTEVZVklFVyhkZXZf
cHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCiAJCXJldCA9IHZsdl9zdXNwZW5kX2Nv
bXBsZXRlKGRldl9wcml2KTsKLQl9CiAKIAlpZiAocmV0KSB7CiAJCURSTV9FUlJPUigiUnVudGlt
ZSBzdXNwZW5kIGZhaWxlZCwgZGlzYWJsaW5nIGl0ICglZClcbiIsIHJldCk7CkBAIC0yOTY3LDI1
ICsyOTkzLDEwIEBAIHN0YXRpYyBpbnQgaW50ZWxfcnVudGltZV9zdXNwZW5kKHN0cnVjdCBkZXZp
Y2UgKmtkZXYpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgaW50ZWxfcnVudGltZV9yZXN1
bWUoc3RydWN0IGRldmljZSAqa2RldikKK3N0YXRpYyB2b2lkIGludGVsX3J1bnRpbWVfZGlzcGxh
eV9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCXN0cnVjdCBw
Y2lfZGV2ICpwZGV2ID0gdG9fcGNpX2RldihrZGV2KTsKLQlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
ID0gcGNpX2dldF9kcnZkYXRhKHBkZXYpOwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoZGV2KTsKLQlpbnQgcmV0ID0gMDsKLQotCWlmIChXQVJOX09OX09OQ0Uo
IUhBU19SVU5USU1FX1BNKGRldl9wcml2KSkpCi0JCXJldHVybiAtRU5PREVWOwotCi0JRFJNX0RF
QlVHX0tNUygiUmVzdW1pbmcgZGV2aWNlXG4iKTsKLQotCVdBUk5fT05fT05DRShhdG9taWNfcmVh
ZCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0ud2FrZXJlZl9jb3VudCkpOwotCWRpc2FibGVfcnBtX3dh
a2VyZWZfYXNzZXJ0cyhkZXZfcHJpdik7Ci0KLQlpbnRlbF9vcHJlZ2lvbl9ub3RpZnlfYWRhcHRl
cihkZXZfcHJpdiwgUENJX0QwKTsKLQlkZXZfcHJpdi0+cnVudGltZV9wbS5zdXNwZW5kZWQgPSBm
YWxzZTsKLQlpZiAoaW50ZWxfdW5jb3JlX3VuY2xhaW1lZF9tbWlvKCZkZXZfcHJpdi0+dW5jb3Jl
KSkKLQkJRFJNX0RFQlVHX0RSSVZFUigiVW5jbGFpbWVkIGFjY2VzcyBkdXJpbmcgc3VzcGVuZCwg
Ymlvcz9cbiIpOworCWlmICghSEFTX0RJU1BMQVkoZGV2X3ByaXYpKQorCQlyZXR1cm47CiAKIAlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkgewogCQlieHRfZGlzYWJsZV9kYzkoZGV2X3By
aXYpOwpAQCAtMzAwNiw5ICszMDE3LDMzIEBAIHN0YXRpYyBpbnQgaW50ZWxfcnVudGltZV9yZXN1
bWUoc3RydWN0IGRldmljZSAqa2RldikKIAkJCWdlbjlfZW5hYmxlX2RjNShkZXZfcHJpdik7CiAJ
fSBlbHNlIGlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYp
KSB7CiAJCWhzd19kaXNhYmxlX3BjOChkZXZfcHJpdik7Ci0JfSBlbHNlIGlmIChJU19WQUxMRVlW
SUVXKGRldl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9wcml2KSkgewotCQlyZXQgPSB2bHZf
cmVzdW1lX3ByZXBhcmUoZGV2X3ByaXYsIHRydWUpOwogCX0KK30KKworc3RhdGljIGludCBpbnRl
bF9ydW50aW1lX3Jlc3VtZShzdHJ1Y3QgZGV2aWNlICprZGV2KQoreworCXN0cnVjdCBwY2lfZGV2
ICpwZGV2ID0gdG9fcGNpX2RldihrZGV2KTsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gcGNp
X2dldF9kcnZkYXRhKHBkZXYpOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IHRvX2k5MTUoZGV2KTsKKwlpbnQgcmV0ID0gMDsKKworCWlmIChXQVJOX09OX09OQ0UoIUhBU19S
VU5USU1FX1BNKGRldl9wcml2KSkpCisJCXJldHVybiAtRU5PREVWOworCisJRFJNX0RFQlVHX0tN
UygiUmVzdW1pbmcgZGV2aWNlXG4iKTsKKworCVdBUk5fT05fT05DRShhdG9taWNfcmVhZCgmZGV2
X3ByaXYtPnJ1bnRpbWVfcG0ud2FrZXJlZl9jb3VudCkpOworCWRpc2FibGVfcnBtX3dha2VyZWZf
YXNzZXJ0cyhkZXZfcHJpdik7CisKKwlpbnRlbF9vcHJlZ2lvbl9ub3RpZnlfYWRhcHRlcihkZXZf
cHJpdiwgUENJX0QwKTsKKwlkZXZfcHJpdi0+cnVudGltZV9wbS5zdXNwZW5kZWQgPSBmYWxzZTsK
KwlpZiAoaW50ZWxfdW5jb3JlX3VuY2xhaW1lZF9tbWlvKCZkZXZfcHJpdi0+dW5jb3JlKSkKKwkJ
RFJNX0RFQlVHX0RSSVZFUigiVW5jbGFpbWVkIGFjY2VzcyBkdXJpbmcgc3VzcGVuZCwgYmlvcz9c
biIpOworCisJaW50ZWxfcnVudGltZV9kaXNwbGF5X3Jlc3VtZShkZXZfcHJpdik7CisKKwlpZiAo
SVNfVkFMTEVZVklFVyhkZXZfcHJpdikgfHwgSVNfQ0hFUlJZVklFVyhkZXZfcHJpdikpCisJCXJl
dCA9IHZsdl9yZXN1bWVfcHJlcGFyZShkZXZfcHJpdiwgdHJ1ZSk7CiAKIAlpbnRlbF91bmNvcmVf
cnVudGltZV9yZXN1bWUoJmRldl9wcml2LT51bmNvcmUpOwogCi0tIAoyLjIwLjEKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5n
IGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

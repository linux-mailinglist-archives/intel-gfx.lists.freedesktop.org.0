Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 2FF5E1442CC
	for <lists+intel-gfx@lfdr.de>; Tue, 21 Jan 2020 18:11:11 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9D7196EDAE;
	Tue, 21 Jan 2020 17:11:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 05EAC6E222
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 Jan 2020 17:11:05 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Jan 2020 09:11:05 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,346,1574150400"; d="scan'208";a="221762512"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga008.fm.intel.com with SMTP; 21 Jan 2020 09:11:04 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 21 Jan 2020 19:11:03 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 21 Jan 2020 19:10:50 +0200
Message-Id: <20200121171100.4370-2-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200121171100.4370-1-ville.syrjala@linux.intel.com>
References: <20200121171100.4370-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 01/11] drm/i915: Prefer intel_connector over
 drm_connector in hotplug code
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClJl
cGxhY2UgdGhlIGRybV9jb25uZWN0b3IgbG9vcHMgd2l0aCBpbnRlbF9jb25uZWN0b3IgbG9vcHMg
dG8Kc3RyZWFtbGluZSB0aGUgY29kZS4KClNpZ25lZC1vZmYtYnk6IFZpbGxlIFN5cmrDpGzDpCA8
dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9ob3RwbHVnLmMgfCA4MyArKysrKysrKystLS0tLS0tLS0tLQogMSBmaWxl
IGNoYW5nZWQsIDM4IGluc2VydGlvbnMoKyksIDQ1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90cGx1Zy5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9ob3RwbHVnLmMKaW5kZXggYzNhNDhhZjM1OTk3Li4w
NDJkOThiYWUxZWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfaG90cGx1Zy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaG90
cGx1Zy5jCkBAIC0xODUsMzcgKzE4NSwzNiBAQCBzdGF0aWMgdm9pZAogaW50ZWxfaHBkX2lycV9z
dG9ybV9zd2l0Y2hfdG9fcG9sbGluZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9ICZkZXZfcHJpdi0+ZHJtOwotCXN0cnVjdCBp
bnRlbF9jb25uZWN0b3IgKmludGVsX2Nvbm5lY3RvcjsKLQlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
aW50ZWxfZW5jb2RlcjsKLQlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCXN0cnVj
dCBkcm1fY29ubmVjdG9yX2xpc3RfaXRlciBjb25uX2l0ZXI7Ci0JZW51bSBocGRfcGluIHBpbjsK
KwlzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3I7CiAJYm9vbCBocGRfZGlzYWJsZWQg
PSBmYWxzZTsKIAogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5pcnFfbG9jayk7CiAK
IAlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZjb25uX2l0ZXIpOwotCWRybV9m
b3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZjb25uX2l0ZXIpIHsKLQkJaWYgKGNv
bm5lY3Rvci0+cG9sbGVkICE9IERSTV9DT05ORUNUT1JfUE9MTF9IUEQpCisJZm9yX2VhY2hfaW50
ZWxfY29ubmVjdG9yX2l0ZXIoY29ubmVjdG9yLCAmY29ubl9pdGVyKSB7CisJCXN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyOworCQllbnVtIGhwZF9waW4gcGluOworCisJCWlmIChjb25uZWN0
b3ItPmJhc2UucG9sbGVkICE9IERSTV9DT05ORUNUT1JfUE9MTF9IUEQpCiAJCQljb250aW51ZTsK
IAotCQlpbnRlbF9jb25uZWN0b3IgPSB0b19pbnRlbF9jb25uZWN0b3IoY29ubmVjdG9yKTsKLQkJ
aW50ZWxfZW5jb2RlciA9IGludGVsX2F0dGFjaGVkX2VuY29kZXIoaW50ZWxfY29ubmVjdG9yKTsK
LQkJaWYgKCFpbnRlbF9lbmNvZGVyKQorCQllbmNvZGVyID0gaW50ZWxfYXR0YWNoZWRfZW5jb2Rl
cihjb25uZWN0b3IpOworCQlpZiAoIWVuY29kZXIpCiAJCQljb250aW51ZTsKIAotCQlwaW4gPSBp
bnRlbF9lbmNvZGVyLT5ocGRfcGluOworCQlwaW4gPSBlbmNvZGVyLT5ocGRfcGluOwogCQlpZiAo
cGluID09IEhQRF9OT05FIHx8CiAJCSAgICBkZXZfcHJpdi0+aG90cGx1Zy5zdGF0c1twaW5dLnN0
YXRlICE9IEhQRF9NQVJLX0RJU0FCTEVEKQogCQkJY29udGludWU7CiAKIAkJRFJNX0lORk8oIkhQ
RCBpbnRlcnJ1cHQgc3Rvcm0gZGV0ZWN0ZWQgb24gY29ubmVjdG9yICVzOiAiCiAJCQkgInN3aXRj
aGluZyBmcm9tIGhvdHBsdWcgZGV0ZWN0aW9uIHRvIHBvbGxpbmdcbiIsCi0JCQkgY29ubmVjdG9y
LT5uYW1lKTsKKwkJCSBjb25uZWN0b3ItPmJhc2UubmFtZSk7CiAKIAkJZGV2X3ByaXYtPmhvdHBs
dWcuc3RhdHNbcGluXS5zdGF0ZSA9IEhQRF9ESVNBQkxFRDsKLQkJY29ubmVjdG9yLT5wb2xsZWQg
PSBEUk1fQ09OTkVDVE9SX1BPTExfQ09OTkVDVAotCQkJfCBEUk1fQ09OTkVDVE9SX1BPTExfRElT
Q09OTkVDVDsKKwkJY29ubmVjdG9yLT5iYXNlLnBvbGxlZCA9IERSTV9DT05ORUNUT1JfUE9MTF9D
T05ORUNUIHwKKwkJCURSTV9DT05ORUNUT1JfUE9MTF9ESVNDT05ORUNUOwogCQlocGRfZGlzYWJs
ZWQgPSB0cnVlOwogCX0KIAlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9lbmQoJmNvbm5faXRlcik7
CkBAIC0yNDEsOCArMjQwLDggQEAgc3RhdGljIHZvaWQgaW50ZWxfaHBkX2lycV9zdG9ybV9yZWVu
YWJsZV93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAogCXNwaW5fbG9ja19pcnEoJmRl
dl9wcml2LT5pcnFfbG9jayk7CiAJZm9yX2VhY2hfaHBkX3BpbihwaW4pIHsKLQkJc3RydWN0IGRy
bV9jb25uZWN0b3IgKmNvbm5lY3RvcjsKIAkJc3RydWN0IGRybV9jb25uZWN0b3JfbGlzdF9pdGVy
IGNvbm5faXRlcjsKKwkJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yOwogCiAJCWlm
IChkZXZfcHJpdi0+aG90cGx1Zy5zdGF0c1twaW5dLnN0YXRlICE9IEhQRF9ESVNBQkxFRCkKIAkJ
CWNvbnRpbnVlOwpAQCAtMjUwLDE4ICsyNDksMTYgQEAgc3RhdGljIHZvaWQgaW50ZWxfaHBkX2ly
cV9zdG9ybV9yZWVuYWJsZV93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAkJZGV2X3By
aXYtPmhvdHBsdWcuc3RhdHNbcGluXS5zdGF0ZSA9IEhQRF9FTkFCTEVEOwogCiAJCWRybV9jb25u
ZWN0b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJmNvbm5faXRlcik7Ci0JCWRybV9mb3JfZWFjaF9j
b25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZjb25uX2l0ZXIpIHsKLQkJCXN0cnVjdCBpbnRlbF9j
b25uZWN0b3IgKmludGVsX2Nvbm5lY3RvciA9IHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0b3Ip
OwotCisJCWZvcl9lYWNoX2ludGVsX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3RvciwgJmNvbm5faXRl
cikgewogCQkJLyogRG9uJ3QgY2hlY2sgTVNUIHBvcnRzLCB0aGV5IGRvbid0IGhhdmUgcGlucyAq
LwotCQkJaWYgKCFpbnRlbF9jb25uZWN0b3ItPm1zdF9wb3J0ICYmCi0JCQkgICAgaW50ZWxfYXR0
YWNoZWRfZW5jb2RlcihpbnRlbF9jb25uZWN0b3IpLT5ocGRfcGluID09IHBpbikgewotCQkJCWlm
IChjb25uZWN0b3ItPnBvbGxlZCAhPSBpbnRlbF9jb25uZWN0b3ItPnBvbGxlZCkKKwkJCWlmICgh
Y29ubmVjdG9yLT5tc3RfcG9ydCAmJgorCQkJICAgIGludGVsX2F0dGFjaGVkX2VuY29kZXIoY29u
bmVjdG9yKS0+aHBkX3BpbiA9PSBwaW4pIHsKKwkJCQlpZiAoY29ubmVjdG9yLT5iYXNlLnBvbGxl
ZCAhPSBjb25uZWN0b3ItPnBvbGxlZCkKIAkJCQkJRFJNX0RFQlVHX0RSSVZFUigiUmVlbmFibGlu
ZyBIUEQgb24gY29ubmVjdG9yICVzXG4iLAotCQkJCQkJCSBjb25uZWN0b3ItPm5hbWUpOwotCQkJ
CWNvbm5lY3Rvci0+cG9sbGVkID0gaW50ZWxfY29ubmVjdG9yLT5wb2xsZWQ7Ci0JCQkJaWYgKCFj
b25uZWN0b3ItPnBvbGxlZCkKLQkJCQkJY29ubmVjdG9yLT5wb2xsZWQgPSBEUk1fQ09OTkVDVE9S
X1BPTExfSFBEOworCQkJCQkJCSBjb25uZWN0b3ItPmJhc2UubmFtZSk7CisJCQkJY29ubmVjdG9y
LT5iYXNlLnBvbGxlZCA9IGNvbm5lY3Rvci0+cG9sbGVkOworCQkJCWlmICghY29ubmVjdG9yLT5i
YXNlLnBvbGxlZCkKKwkJCQkJY29ubmVjdG9yLT5iYXNlLnBvbGxlZCA9IERSTV9DT05ORUNUT1Jf
UE9MTF9IUEQ7CiAJCQl9CiAJCX0KIAkJZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXJfZW5kKCZjb25u
X2l0ZXIpOwpAQCAtMzYxLDEwICszNTgsOCBAQCBzdGF0aWMgdm9pZCBpOTE1X2hvdHBsdWdfd29y
a19mdW5jKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAkJY29udGFpbmVyX29mKHdvcmssIHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlLAogCQkJICAgICBob3RwbHVnLmhvdHBsdWdfd29yay53b3Jr
KTsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gJmRldl9wcml2LT5kcm07Ci0Jc3RydWN0IGlu
dGVsX2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9yOwotCXN0cnVjdCBpbnRlbF9lbmNvZGVyICpp
bnRlbF9lbmNvZGVyOwotCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3I7CiAJc3RydWN0
IGRybV9jb25uZWN0b3JfbGlzdF9pdGVyIGNvbm5faXRlcjsKKwlzdHJ1Y3QgaW50ZWxfY29ubmVj
dG9yICpjb25uZWN0b3I7CiAJdTMyIGNoYW5nZWQgPSAwLCByZXRyeSA9IDA7CiAJdTMyIGhwZF9l
dmVudF9iaXRzOwogCXUzMiBocGRfcmV0cnlfYml0czsKQEAgLTM4NSwyMSArMzgwLDIxIEBAIHN0
YXRpYyB2b2lkIGk5MTVfaG90cGx1Z193b3JrX2Z1bmMoc3RydWN0IHdvcmtfc3RydWN0ICp3b3Jr
KQogCXNwaW5fdW5sb2NrX2lycSgmZGV2X3ByaXYtPmlycV9sb2NrKTsKIAogCWRybV9jb25uZWN0
b3JfbGlzdF9pdGVyX2JlZ2luKGRldiwgJmNvbm5faXRlcik7Ci0JZHJtX2Zvcl9lYWNoX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJmNvbm5faXRlcikgeworCWZvcl9lYWNoX2ludGVsX2Nvbm5l
Y3Rvcl9pdGVyKGNvbm5lY3RvciwgJmNvbm5faXRlcikgeworCQlzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciA9CisJCQlpbnRlbF9hdHRhY2hlZF9lbmNvZGVyKGNvbm5lY3Rvcik7CiAJCXUz
MiBocGRfYml0OwogCi0JCWludGVsX2Nvbm5lY3RvciA9IHRvX2ludGVsX2Nvbm5lY3Rvcihjb25u
ZWN0b3IpOwotCQlpZiAoIWludGVsX2F0dGFjaGVkX2VuY29kZXIoaW50ZWxfY29ubmVjdG9yKSkK
KwkJaWYgKCFlbmNvZGVyKQogCQkJY29udGludWU7Ci0JCWludGVsX2VuY29kZXIgPSBpbnRlbF9h
dHRhY2hlZF9lbmNvZGVyKGludGVsX2Nvbm5lY3Rvcik7Ci0JCWhwZF9iaXQgPSBCSVQoaW50ZWxf
ZW5jb2Rlci0+aHBkX3Bpbik7CisKKwkJaHBkX2JpdCA9IEJJVChlbmNvZGVyLT5ocGRfcGluKTsK
IAkJaWYgKChocGRfZXZlbnRfYml0cyB8IGhwZF9yZXRyeV9iaXRzKSAmIGhwZF9iaXQpIHsKIAkJ
CURSTV9ERUJVR19LTVMoIkNvbm5lY3RvciAlcyAocGluICVpKSByZWNlaXZlZCBob3RwbHVnIGV2
ZW50LlxuIiwKLQkJCQkgICAgICBjb25uZWN0b3ItPm5hbWUsIGludGVsX2VuY29kZXItPmhwZF9w
aW4pOworCQkJCSAgICAgIGNvbm5lY3Rvci0+YmFzZS5uYW1lLCBlbmNvZGVyLT5ocGRfcGluKTsK
IAotCQkJc3dpdGNoIChpbnRlbF9lbmNvZGVyLT5ob3RwbHVnKGludGVsX2VuY29kZXIsCi0JCQkJ
CQkgICAgICAgaW50ZWxfY29ubmVjdG9yLAotCQkJCQkJICAgICAgIGhwZF9ldmVudF9iaXRzICYg
aHBkX2JpdCkpIHsKKwkJCXN3aXRjaCAoZW5jb2Rlci0+aG90cGx1ZyhlbmNvZGVyLCBjb25uZWN0
b3IsCisJCQkJCQkgaHBkX2V2ZW50X2JpdHMgJiBocGRfYml0KSkgewogCQkJY2FzZSBJTlRFTF9I
T1RQTFVHX1VOQ0hBTkdFRDoKIAkJCQlicmVhazsKIAkJCWNhc2UgSU5URUxfSE9UUExVR19DSEFO
R0VEOgpAQCAtNjAxLDggKzU5Niw4IEBAIHN0YXRpYyB2b2lkIGk5MTVfaHBkX3BvbGxfaW5pdF93
b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAkJY29udGFpbmVyX29mKHdvcmssIHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlLAogCQkJICAgICBob3RwbHVnLnBvbGxfaW5pdF93b3JrKTsKIAlz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gJmRldl9wcml2LT5kcm07Ci0Jc3RydWN0IGRybV9jb25u
ZWN0b3IgKmNvbm5lY3RvcjsKIAlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9saXN0X2l0ZXIgY29ubl9p
dGVyOworCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcjsKIAlib29sIGVuYWJsZWQ7
CiAKIAltdXRleF9sb2NrKCZkZXYtPm1vZGVfY29uZmlnLm11dGV4KTsKQEAgLTYxMCwxOSArNjA1
LDE3IEBAIHN0YXRpYyB2b2lkIGk5MTVfaHBkX3BvbGxfaW5pdF93b3JrKHN0cnVjdCB3b3JrX3N0
cnVjdCAqd29yaykKIAllbmFibGVkID0gUkVBRF9PTkNFKGRldl9wcml2LT5ob3RwbHVnLnBvbGxf
ZW5hYmxlZCk7CiAKIAlkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9iZWdpbihkZXYsICZjb25uX2l0
ZXIpOwotCWRybV9mb3JfZWFjaF9jb25uZWN0b3JfaXRlcihjb25uZWN0b3IsICZjb25uX2l0ZXIp
IHsKLQkJc3RydWN0IGludGVsX2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9yID0KLQkJCXRvX2lu
dGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpOwotCQljb25uZWN0b3ItPnBvbGxlZCA9IGludGVsX2Nv
bm5lY3Rvci0+cG9sbGVkOworCWZvcl9lYWNoX2ludGVsX2Nvbm5lY3Rvcl9pdGVyKGNvbm5lY3Rv
ciwgJmNvbm5faXRlcikgeworCQljb25uZWN0b3ItPmJhc2UucG9sbGVkID0gY29ubmVjdG9yLT5w
b2xsZWQ7CiAKIAkJLyogTVNUIGhhcyBhIGR5bmFtaWMgaW50ZWxfY29ubmVjdG9yLT5lbmNvZGVy
IGFuZCBpdCdzIHJlcHJvYmluZwogCQkgKiBpcyBhbGwgaGFuZGxlZCBieSB0aGUgTVNUIGhlbHBl
cnMuICovCi0JCWlmIChpbnRlbF9jb25uZWN0b3ItPm1zdF9wb3J0KQorCQlpZiAoY29ubmVjdG9y
LT5tc3RfcG9ydCkKIAkJCWNvbnRpbnVlOwogCi0JCWlmICghY29ubmVjdG9yLT5wb2xsZWQgJiYg
STkxNV9IQVNfSE9UUExVRyhkZXZfcHJpdikgJiYKLQkJICAgIGludGVsX2F0dGFjaGVkX2VuY29k
ZXIoaW50ZWxfY29ubmVjdG9yKS0+aHBkX3BpbiA+IEhQRF9OT05FKSB7Ci0JCQljb25uZWN0b3It
PnBvbGxlZCA9IGVuYWJsZWQgPworCQlpZiAoIWNvbm5lY3Rvci0+YmFzZS5wb2xsZWQgJiYgSTkx
NV9IQVNfSE9UUExVRyhkZXZfcHJpdikgJiYKKwkJICAgIGludGVsX2F0dGFjaGVkX2VuY29kZXIo
Y29ubmVjdG9yKS0+aHBkX3BpbiA+IEhQRF9OT05FKSB7CisJCQljb25uZWN0b3ItPmJhc2UucG9s
bGVkID0gZW5hYmxlZCA/CiAJCQkJRFJNX0NPTk5FQ1RPUl9QT0xMX0NPTk5FQ1QgfAogCQkJCURS
TV9DT05ORUNUT1JfUE9MTF9ESVNDT05ORUNUIDoKIAkJCQlEUk1fQ09OTkVDVE9SX1BPTExfSFBE
OwotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1n
ZngK

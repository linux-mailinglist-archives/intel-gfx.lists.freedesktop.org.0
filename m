Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9054444FF9
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 01:22:36 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C5FA6892FB;
	Thu, 13 Jun 2019 23:22:34 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D748A8931E
 for <intel-gfx@lists.freedesktop.org>; Thu, 13 Jun 2019 23:22:29 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 13 Jun 2019 16:22:29 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga007.jf.intel.com with ESMTP; 13 Jun 2019 16:22:29 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 13 Jun 2019 16:21:56 -0700
Message-Id: <20190613232156.34940-9-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190613232156.34940-1-daniele.ceraolospurio@intel.com>
References: <20190613232156.34940-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 8/8] drm/i915: make intel_wakeref work on the
 rpm struct
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

aW50ZWxfcnVudGltZV9wbSBpcyB0aGUgb25seSB0aGluZyB0aGV5IHVzZSBmcm9tIHRoZSBpOTE1
IHN0cnVjdHVyZSwKc28gdXNlIHRoYXQgZGlyZWN0bHkuCgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWxl
IENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgpSZXZpZXdl
ZC1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgfCAgNCArLS0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMgICAgIHwgIDQgKy0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2dlbV9mZW5jZV9yZWcuYyB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF93YWtlcmVmLmMgICAgICB8IDMyICsrKysrKysrKysrLS0tLS0tLS0tLS0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmggICAgICB8IDE4ICsrKysrKy0tLS0tLS0KIDUg
ZmlsZXMgY2hhbmdlZCwgMzAgaW5zZXJ0aW9ucygrKSwgMzAgZGVsZXRpb25zKC0pCgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYwppbmRleCBjY2YwMzQ3NjQ3NDEuLjkw
M2JlZTNkNmM2ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMK
QEAgLTM3LDcgKzM3LDcgQEAgc3RhdGljIGludCBfX2VuZ2luZV91bnBhcmsoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKQogCiB2b2lkIGludGVsX2VuZ2luZV9wbV9nZXQoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogewotCWludGVsX3dha2VyZWZfZ2V0KGVuZ2luZS0+aTkxNSwgJmVu
Z2luZS0+d2FrZXJlZiwgX19lbmdpbmVfdW5wYXJrKTsKKwlpbnRlbF93YWtlcmVmX2dldCgmZW5n
aW5lLT5pOTE1LT5ydW50aW1lX3BtLCAmZW5naW5lLT53YWtlcmVmLCBfX2VuZ2luZV91bnBhcmsp
OwogfQogCiB2b2lkIGludGVsX2VuZ2luZV9wYXJrKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKQEAgLTEzMSw3ICsxMzEsNyBAQCBzdGF0aWMgaW50IF9fZW5naW5lX3Bhcmsoc3RydWN0
IGludGVsX3dha2VyZWYgKndmKQogCiB2b2lkIGludGVsX2VuZ2luZV9wbV9wdXQoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewotCWludGVsX3dha2VyZWZfcHV0KGVuZ2luZS0+aTkx
NSwgJmVuZ2luZS0+d2FrZXJlZiwgX19lbmdpbmVfcGFyayk7CisJaW50ZWxfd2FrZXJlZl9wdXQo
JmVuZ2luZS0+aTkxNS0+cnVudGltZV9wbSwgJmVuZ2luZS0+d2FrZXJlZiwgX19lbmdpbmVfcGFy
ayk7CiB9CiAKIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfX3BtKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0
X3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jCmluZGV4IGFlNzE1
NWYwZTA2My4uN2I1OTY3NzUxNzYyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9ndF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3Bt
LmMKQEAgLTUyLDcgKzUyLDcgQEAgc3RhdGljIGludCBpbnRlbF9ndF91bnBhcmsoc3RydWN0IGlu
dGVsX3dha2VyZWYgKndmKQogCiB2b2lkIGludGVsX2d0X3BtX2dldChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSkKIHsKLQlpbnRlbF93YWtlcmVmX2dldChpOTE1LCAmaTkxNS0+Z3Qud2Fr
ZXJlZiwgaW50ZWxfZ3RfdW5wYXJrKTsKKwlpbnRlbF93YWtlcmVmX2dldCgmaTkxNS0+cnVudGlt
ZV9wbSwgJmk5MTUtPmd0Lndha2VyZWYsIGludGVsX2d0X3VucGFyayk7CiB9CiAKIHN0YXRpYyBp
bnQgaW50ZWxfZ3RfcGFyayhzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCkBAIC03Nyw3ICs3Nyw3
IEBAIHN0YXRpYyBpbnQgaW50ZWxfZ3RfcGFyayhzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiAK
IHZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewot
CWludGVsX3dha2VyZWZfcHV0KGk5MTUsICZpOTE1LT5ndC53YWtlcmVmLCBpbnRlbF9ndF9wYXJr
KTsKKwlpbnRlbF93YWtlcmVmX3B1dCgmaTkxNS0+cnVudGltZV9wbSwgJmk5MTUtPmd0Lndha2Vy
ZWYsIGludGVsX2d0X3BhcmspOwogfQogCiB2b2lkIGludGVsX2d0X3BtX2luaXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2dlbV9mZW5jZV9yZWcuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2ZlbmNl
X3JlZy5jCmluZGV4IDNiMzViYjExNGIxNC4uMGJmNTNhYzFjODM1IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9mZW5jZV9yZWcuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbV9mZW5jZV9yZWcuYwpAQCAtODA0LDcgKzgwNCw3IEBAIHZvaWQgaTkx
NV9nZ3R0X2luaXRfZmVuY2VzKHN0cnVjdCBpOTE1X2dndHQgKmdndHQpCiAKIAlJTklUX0xJU1Rf
SEVBRCgmZ2d0dC0+ZmVuY2VfbGlzdCk7CiAJSU5JVF9MSVNUX0hFQUQoJmdndHQtPnVzZXJmYXVs
dF9saXN0KTsKLQlpbnRlbF93YWtlcmVmX2F1dG9faW5pdCgmZ2d0dC0+dXNlcmZhdWx0X3dha2Vy
ZWYsIGk5MTUpOworCWludGVsX3dha2VyZWZfYXV0b19pbml0KCZnZ3R0LT51c2VyZmF1bHRfd2Fr
ZXJlZiwgJmk5MTUtPnJ1bnRpbWVfcG0pOwogCiAJZGV0ZWN0X2JpdF82X3N3aXp6bGUoaTkxNSk7
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwppbmRleCBiNjc3YWU4OTNkNmYuLjNk
YjZmYTY4MjgyMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd2FrZXJl
Zi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwpAQCAtNCwyMyAr
NCwyMyBAQAogICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCi0j
aW5jbHVkZSAiaW50ZWxfZHJ2LmgiCi0jaW5jbHVkZSAiaW50ZWxfd2FrZXJlZi5oIgorI2luY2x1
ZGUgImludGVsX3J1bnRpbWVfcG0uaCIKKyNpbmNsdWRlICJpOTE1X2dlbS5oIgogCi1zdGF0aWMg
dm9pZCBycG1fZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgaW50ZWxf
d2FrZXJlZiAqd2YpCitzdGF0aWMgdm9pZCBycG1fZ2V0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3Bt
ICpycG0sIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsKLQl3Zi0+d2FrZXJlZiA9IGludGVs
X3J1bnRpbWVfcG1fZ2V0KCZpOTE1LT5ydW50aW1lX3BtKTsKKwl3Zi0+d2FrZXJlZiA9IGludGVs
X3J1bnRpbWVfcG1fZ2V0KHJwbSk7CiB9CiAKLXN0YXRpYyB2b2lkIHJwbV9wdXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUsIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyB2
b2lkIHJwbV9wdXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwgc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKQogewogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmID0gZmV0Y2hfYW5kX3plcm8o
JndmLT53YWtlcmVmKTsKIAotCWludGVsX3J1bnRpbWVfcG1fcHV0KCZpOTE1LT5ydW50aW1lX3Bt
LCB3YWtlcmVmKTsKKwlpbnRlbF9ydW50aW1lX3BtX3B1dChycG0sIHdha2VyZWYpOwogCUdFTV9C
VUdfT04oIXdha2VyZWYpOwogfQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKK2ludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0
KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCiAJCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkK
IHsKQEAgLTM0LDExICszNCwxMSBAQCBpbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlpZiAoIWF0b21pY19yZWFkKCZ3Zi0+Y291bnQp
KSB7CiAJCWludCBlcnI7CiAKLQkJcnBtX2dldChpOTE1LCB3Zik7CisJCXJwbV9nZXQocnBtLCB3
Zik7CiAKIAkJZXJyID0gZm4od2YpOwogCQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJcnBtX3B1
dChpOTE1LCB3Zik7CisJCQlycG1fcHV0KHJwbSwgd2YpOwogCQkJbXV0ZXhfdW5sb2NrKCZ3Zi0+
bXV0ZXgpOwogCQkJcmV0dXJuIGVycjsKIAkJfQpAQCAtNTEsNyArNTEsNyBAQCBpbnQgX19pbnRl
bF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlyZXR1
cm4gMDsKIH0KIAotaW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKK2ludCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVs
X3J1bnRpbWVfcG0gKnJwbSwKIAkJCSAgICAgc3RydWN0IGludGVsX3dha2VyZWYgKndmLAogCQkJ
ICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkKIHsKQEAgLTU5LDcgKzU5
LDcgQEAgaW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSwKIAogCWVyciA9IGZuKHdmKTsKIAlpZiAobGlrZWx5KCFlcnIpKQotCQlycG1fcHV0
KGk5MTUsIHdmKTsKKwkJcnBtX3B1dChycG0sIHdmKTsKIAllbHNlCiAJCWF0b21pY19pbmMoJndm
LT5jb3VudCk7CiAJbXV0ZXhfdW5sb2NrKCZ3Zi0+bXV0ZXgpOwpAQCAtODYsMTcgKzg2LDE3IEBA
IHN0YXRpYyB2b2lkIHdha2VyZWZfYXV0b190aW1lb3V0KHN0cnVjdCB0aW1lcl9saXN0ICp0KQog
CXdha2VyZWYgPSBmZXRjaF9hbmRfemVybygmd2YtPndha2VyZWYpOwogCXNwaW5fdW5sb2NrX2ly
cXJlc3RvcmUoJndmLT5sb2NrLCBmbGFncyk7CiAKLQlpbnRlbF9ydW50aW1lX3BtX3B1dCgmd2Yt
Pmk5MTUtPnJ1bnRpbWVfcG0sIHdha2VyZWYpOworCWludGVsX3J1bnRpbWVfcG1fcHV0KHdmLT5y
cG0sIHdha2VyZWYpOwogfQogCiB2b2lkIGludGVsX3dha2VyZWZfYXV0b19pbml0KHN0cnVjdCBp
bnRlbF93YWtlcmVmX2F1dG8gKndmLAotCQkJICAgICBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSkKKwkJCSAgICAgc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSkKIHsKIAlzcGluX2xv
Y2tfaW5pdCgmd2YtPmxvY2spOwogCXRpbWVyX3NldHVwKCZ3Zi0+dGltZXIsIHdha2VyZWZfYXV0
b190aW1lb3V0LCAwKTsKIAlyZWZjb3VudF9zZXQoJndmLT5jb3VudCwgMCk7CiAJd2YtPndha2Vy
ZWYgPSAwOwotCXdmLT5pOTE1ID0gaTkxNTsKKwl3Zi0+cnBtID0gcnBtOwogfQogCiB2b2lkIGlu
dGVsX3dha2VyZWZfYXV0byhzdHJ1Y3QgaW50ZWxfd2FrZXJlZl9hdXRvICp3ZiwgdW5zaWduZWQg
bG9uZyB0aW1lb3V0KQpAQCAtMTEwLDEzICsxMTAsMTMgQEAgdm9pZCBpbnRlbF93YWtlcmVmX2F1
dG8oc3RydWN0IGludGVsX3dha2VyZWZfYXV0byAqd2YsIHVuc2lnbmVkIGxvbmcgdGltZW91dCkK
IAl9CiAKIAkvKiBPdXIgbWlzc2lvbiBpcyB0aGF0IHdlIG9ubHkgZXh0ZW5kIGFuIGFscmVhZHkg
YWN0aXZlIHdha2VyZWYgKi8KLQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoJndmLT5pOTE1LT5y
dW50aW1lX3BtKTsKKwlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQod2YtPnJwbSk7CiAKIAlpZiAo
IXJlZmNvdW50X2luY19ub3RfemVybygmd2YtPmNvdW50KSkgewogCQlzcGluX2xvY2tfaXJxc2F2
ZSgmd2YtPmxvY2ssIGZsYWdzKTsKIAkJaWYgKCFyZWZjb3VudF9pbmNfbm90X3plcm8oJndmLT5j
b3VudCkpIHsKIAkJCUdFTV9CVUdfT04od2YtPndha2VyZWYpOwotCQkJd2YtPndha2VyZWYgPSBp
bnRlbF9ydW50aW1lX3BtX2dldF9pZl9pbl91c2UoJndmLT5pOTE1LT5ydW50aW1lX3BtKTsKKwkJ
CXdmLT53YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXRfaWZfaW5fdXNlKHdmLT5ycG0pOwog
CQkJcmVmY291bnRfc2V0KCZ3Zi0+Y291bnQsIDEpOwogCQl9CiAJCXNwaW5fdW5sb2NrX2lycXJl
c3RvcmUoJndmLT5sb2NrLCBmbGFncyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF93YWtlcmVmLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmgK
aW5kZXggOGE1Zjg1YzAwMGNlLi45Y2JiMmViZjU3NWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF93YWtlcmVmLmgKQEAgLTEzLDcgKzEzLDcgQEAKICNpbmNsdWRlIDxsaW51eC9zdGFja2RlcG90
Lmg+CiAjaW5jbHVkZSA8bGludXgvdGltZXIuaD4KIAotc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7
CitzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbTsKIAogdHlwZWRlZiBkZXBvdF9zdGFja19oYW5kbGVf
dCBpbnRlbF93YWtlcmVmX3Q7CiAKQEAgLTMxLDEwICszMSwxMCBAQCB2b2lkIF9faW50ZWxfd2Fr
ZXJlZl9pbml0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKIAlfX2ludGVsX3dha2VyZWZfaW5p
dCgod2YpLCAmX19rZXkpOwkJCQlcCiB9IHdoaWxlICgwKQogCi1pbnQgX19pbnRlbF93YWtlcmVm
X2dldF9maXJzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKK2ludCBfX2ludGVsX3dh
a2VyZWZfZ2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAJCQkgICAgICBz
dHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCiAJCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKSk7Ci1pbnQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1LAoraW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3Qg
aW50ZWxfcnVudGltZV9wbSAqcnBtLAogCQkJICAgICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2Ys
CiAJCQkgICAgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKTsKIApAQCAtNTUs
MTIgKzU1LDEyIEBAIGludCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsCiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBp
bnQKLWludGVsX3dha2VyZWZfZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAoraW50
ZWxfd2FrZXJlZl9nZXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKIAkJICBzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YsCiAJCSAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3
ZikpCiB7CiAJaWYgKHVubGlrZWx5KCFhdG9taWNfaW5jX25vdF96ZXJvKCZ3Zi0+Y291bnQpKSkK
LQkJcmV0dXJuIF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3QoaTkxNSwgd2YsIGZuKTsKKwkJcmV0
dXJuIF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3QocnBtLCB3ZiwgZm4pOwogCiAJcmV0dXJuIDA7
CiB9CkBAIC04MiwxMiArODIsMTIgQEAgaW50ZWxfd2FrZXJlZl9nZXQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsCiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBp
bnQKLWludGVsX3dha2VyZWZfcHV0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAoraW50
ZWxfd2FrZXJlZl9wdXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKIAkJICBzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YsCiAJCSAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3
ZikpCiB7CiAJaWYgKGF0b21pY19kZWNfYW5kX211dGV4X2xvY2soJndmLT5jb3VudCwgJndmLT5t
dXRleCkpCi0JCXJldHVybiBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3QoaTkxNSwgd2YsIGZuKTsK
KwkJcmV0dXJuIF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChycG0sIHdmLCBmbik7CiAKIAlyZXR1
cm4gMDsKIH0KQEAgLTEzMyw3ICsxMzMsNyBAQCBpbnRlbF93YWtlcmVmX2FjdGl2ZShzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YpCiB9CiAKIHN0cnVjdCBpbnRlbF93YWtlcmVmX2F1dG8gewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1OworCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpy
cG07CiAJc3RydWN0IHRpbWVyX2xpc3QgdGltZXI7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7
CiAJc3BpbmxvY2tfdCBsb2NrOwpAQCAtMTU4LDcgKzE1OCw3IEBAIHN0cnVjdCBpbnRlbF93YWtl
cmVmX2F1dG8gewogdm9pZCBpbnRlbF93YWtlcmVmX2F1dG8oc3RydWN0IGludGVsX3dha2VyZWZf
YXV0byAqd2YsIHVuc2lnbmVkIGxvbmcgdGltZW91dCk7CiAKIHZvaWQgaW50ZWxfd2FrZXJlZl9h
dXRvX2luaXQoc3RydWN0IGludGVsX3dha2VyZWZfYXV0byAqd2YsCi0JCQkgICAgIHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICppOTE1KTsKKwkJCSAgICAgc3RydWN0IGludGVsX3J1bnRpbWVfcG0g
KnJwbSk7CiB2b2lkIGludGVsX3dha2VyZWZfYXV0b19maW5pKHN0cnVjdCBpbnRlbF93YWtlcmVm
X2F1dG8gKndmKTsKIAogI2VuZGlmIC8qIElOVEVMX1dBS0VSRUZfSCAqLwotLSAKMi4yMC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

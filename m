Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6215121A7EE
	for <lists+intel-gfx@lfdr.de>; Thu,  9 Jul 2020 21:40:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E01FD6EB1D;
	Thu,  9 Jul 2020 19:40:43 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 93BCC6EB1D
 for <intel-gfx@lists.freedesktop.org>; Thu,  9 Jul 2020 19:40:43 +0000 (UTC)
IronPort-SDR: eBewkEUo4bEQGtb0hOGz981rwReBowqAeOi/mo0nJvBOVvMOg6wQhanpVZN5UMawObIvppDenk
 urHpjzPtaGOg==
X-IronPort-AV: E=McAfee;i="6000,8403,9677"; a="232958910"
X-IronPort-AV: E=Sophos;i="5.75,332,1589266800"; d="scan'208";a="232958910"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 09 Jul 2020 12:40:43 -0700
IronPort-SDR: 1mR2he9PTDbOLtvo8GAOBaZVHVGYLeNFY/Va6f43jaRAMusDJBxGbfcjROeLCmIgSkSgNW/JI9
 lE0zjjUEoUQQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.75,332,1589266800"; d="scan'208";a="284266453"
Received: from fmsmsx103.amr.corp.intel.com ([10.18.124.201])
 by orsmga006.jf.intel.com with ESMTP; 09 Jul 2020 12:40:42 -0700
Received: from fmsmsx104.amr.corp.intel.com (10.18.124.202) by
 FMSMSX103.amr.corp.intel.com (10.18.124.201) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Thu, 9 Jul 2020 12:40:42 -0700
Received: from fmsmsx117.amr.corp.intel.com ([169.254.3.171]) by
 fmsmsx104.amr.corp.intel.com ([169.254.3.76]) with mapi id 14.03.0415.000;
 Thu, 9 Jul 2020 12:40:36 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "ville.syrjala@linux.intel.com" <ville.syrjala@linux.intel.com>
Thread-Topic: [PATCH v4 4/5] drm/i915/display: Implement HOBL
Thread-Index: AQHWVWnW+cawBNoaEkqbsUDs28Tsjaj/w7yAgABY6QA=
Date: Thu, 9 Jul 2020 19:40:35 +0000
Message-ID: <34f60474c6b7ffe27b409d04894b56cb1a8d34e1.camel@intel.com>
References: <20200708205512.21625-1-jose.souza@intel.com>
 <20200708205512.21625-4-jose.souza@intel.com>
 <20200709142409.GE6112@intel.com>
In-Reply-To: <20200709142409.GE6112@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.24.14.51]
Content-ID: <7EA337FC97AE16438F9AA952E5987CE3@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v4 4/5] drm/i915/display: Implement HOBL
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVGh1LCAyMDIwLTA3LTA5IGF0IDE3OjI0ICswMzAwLCBWaWxsZSBTeXJqw6Rsw6Qgd3JvdGU6
DQo+IE9uIFdlZCwgSnVsIDA4LCAyMDIwIGF0IDAxOjU1OjExUE0gLTA3MDAsIEpvc8OpIFJvYmVy
dG8gZGUgU291emEgd3JvdGU6DQo+ID4gSG91cnMgT2YgQmF0dGVyeSBMaWZlIGlzIGEgbmV3IEdF
TjEyKyBwb3dlci1zYXZpbmcgZmVhdHVyZSB0aGF0IGFsbG93cw0KPiA+IHN1cHBvcnRlZCBtb3Ro
ZXJib2FyZHMgdG8gdXNlIGEgc3BlY2lhbCB2b2x0YWdlIHN3aW5nIHRhYmxlIGZvciBlRFANCj4g
PiBwYW5lbHMgdGhhdCB1c2VzIGxlc3MgcG93ZXIuDQo+ID4gDQo+ID4gU28gaGVyZSBpZiBzdXBw
b3J0ZWQgYnkgSFcsIE9FTSB3aWxsIHNldCBpdCBpbiBWQlQgYW5kIGk5MTUgd2lsbCB0cnkNCj4g
PiB0byB0cmFpbiBsaW5rIHdpdGggSE9CTCB2c3dpbmcgdGFibGUgaWYgbGluayB0cmFpbmluZyBm
YWlscyBpdCBmYWxsDQo+ID4gYmFjayB0byB0aGUgb3JpZ2luYWwgdGFibGUuDQo+ID4gDQo+ID4g
aW50ZWxfZGRpX2RwX3ByZWVtcGhfbWF4KCkgd2FzIG9wdGltaXplZCB0byBvbmx5IGNoZWNrIHRo
ZSBIT0JMIGZsYWcNCj4gPiBpbnN0ZWFkIG9mIGRvIHNvbWV0aGluZyBsaWtlIGlzIGRvbmUgaW4g
aW50ZWxfZGRpX2RwX3ZvbHRhZ2VfbWF4KCkNCj4gPiBiZWNhdXNlIGl0IGlzIG9ubHkgY2FsbGVk
IGFmdGVyIHRoZSBmaXJzdCBlbnRyeSBvZiB0aGUgdm9sdGFnZSBzd2luZw0KPiA+IHRhYmxlIHdh
cyBsb2FkZWQgc28gdGhlIEhPQkwgZmxhZyBpcyB2YWxpZCBhdCB0aGF0IHBvaW50Lg0KPiA+IA0K
PiA+IHYzOg0KPiA+IC0gcmVtb3ZlZCBhIGZldyBwYXJhbWV0ZXJzIG9mIGljbF9kZGlfY29tYm9f
dnN3aW5nX3Byb2dyYW0oKSB0aGF0DQo+ID4gY2FuIGJlIHRha2VuIGZyb20gZW5jb2RlcihUT0RP
KQ0KPiA+IA0KPiA+IHY0Og0KPiA+IC0gdXNpbmcgdGhlIEhPQkwgdnN3aW5nIHRhYmxlIHVudGls
IHRyYWluaW5nIGZhaWxzIGNvbXBsZXRlbHkgKFZpbGxlKQ0KPiA+IA0KPiA+IEJTcGVjOiA0OTI5
MQ0KPiA+IEJTcGVjOiA0OTM5OQ0KPiA+IENjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmph
bGFAbGludXguaW50ZWwuY29tPg0KPiA+IENjOiBBbmltZXNoIE1hbm5hIDxhbmltZXNoLm1hbm5h
QGludGVsLmNvbT4NCj4gPiBDYzogTWFuYXNpIE5hdmFyZSA8bWFuYXNpLmQubmF2YXJlQGludGVs
LmNvbT4NCj4gPiBTaWduZWQtb2ZmLWJ5OiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNv
dXphQGludGVsLmNvbT4NCj4gPiAtLS0NCj4gPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kZGkuYyAgICAgIHwgMzcgKysrKysrKysrKysrKysrKy0tLQ0KPiA+ICAuLi4vZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAgfCAgMiArDQo+ID4gIC4uLi9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX2xpbmtfdHJhaW5pbmcuYyB8ICA1ICsrKw0KPiA+ICBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oICAgICAgICAgICAgICAgfCAgMiArDQo+ID4g
IDQgZmlsZXMgY2hhbmdlZCwgNDEgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkNCj4gPiAN
Cj4gPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGku
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMNCj4gPiBpbmRleCAy
YzQ4NGI1NWJjZGYuLmJmODZjNTg4ZjcyNiAxMDA2NDQNCj4gPiAtLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jDQo+ID4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kZGkuYw0KPiA+IEBAIC03MDYsNiArNzA2LDE1IEBAIHN0YXRpYyBj
b25zdCBzdHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgdGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRp
b25zX2RwX2hicjJbXSA9DQo+ID4gIAl7IDB4NiwgMHg3RiwgMHgzRiwgMHgwMCwgMHgwMCB9LAkv
KiA5MDAgICA5MDAgICAgICAwLjAgICAqLw0KPiA+ICB9Ow0KPiA+ICANCj4gPiArc3RhdGljIGNv
bnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyB0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlv
bnNfZWRwX2hicjJfaG9ibFtdID0gew0KPiA+ICsJeyAweDYsIDB4N0YsIDB4M0YsIDB4MDAsIDB4
MDAgfQ0KPiA+ICt9Ow0KPiA+ICsNCj4gPiArc3RhdGljIGJvb2wgaXNfaG9ibF9idWZfdHJhbnMo
Y29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5zICp0YWJsZSkNCj4gPiArew0KPiA+ICsJcmV0
dXJuIHRhYmxlID09IHRnbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19lZHBfaGJyMl9ob2Js
Ow0KPiA+ICt9DQo+ID4gKw0KPiA+ICBzdGF0aWMgY29uc3Qgc3RydWN0IGRkaV9idWZfdHJhbnMg
Kg0KPiA+ICBiZHdfZ2V0X2J1Zl90cmFuc19lZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsIGludCAqbl9lbnRyaWVzKQ0KPiA+ICB7DQo+ID4gQEAgLTEwNTAsNiArMTA1OSwxNiBAQCBz
dGF0aWMgY29uc3Qgc3RydWN0IGNubF9kZGlfYnVmX3RyYW5zICoNCj4gPiAgdGdsX2dldF9jb21i
b19idWZfdHJhbnMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGludCB0eXBlLCBpbnQg
cmF0ZSwNCj4gPiAgCQkJaW50ICpuX2VudHJpZXMpDQo+ID4gIHsNCj4gPiArCWlmICh0eXBlID09
IElOVEVMX09VVFBVVF9FRFAgJiYgZGV2X3ByaXYtPnZidC5lZHAuaG9ibCkgew0KPiA+ICsJCXN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7DQo+ID4g
Kw0KPiA+ICsJCWlmICghaW50ZWxfZHAtPmhvYmxfZGlzYWJsZWQgJiYgcmF0ZSA8PSA1NDAwMDAp
IHsNCj4gPiArCQkJLyogU2FtZSB0YWJsZSBhcHBsaWVzIHRvIFRHTCwgUktMIGFuZCBERzEgKi8N
Cj4gPiArCQkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUodGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNs
YXRpb25zX2VkcF9oYnIyX2hvYmwpOw0KPiA+ICsJCQlyZXR1cm4gdGdsX2NvbWJvX3BoeV9kZGlf
dHJhbnNsYXRpb25zX2VkcF9oYnIyX2hvYmw7DQo+ID4gKwkJfQ0KPiA+ICsJfQ0KPiA+ICsNCj4g
PiAgCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JIHx8IHR5cGUgPT0gSU5URUxfT1VUUFVU
X0VEUCkgew0KPiA+ICAJCXJldHVybiBpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhlbmNvZGVyLCB0
eXBlLCByYXRlLCBuX2VudHJpZXMpOw0KPiA+ICAJfSBlbHNlIGlmIChyYXRlID4gMjcwMDAwKSB7
DQo+ID4gQEAgLTIyMjMsMTMgKzIyNDIsMTIgQEAgc3RhdGljIHU4IGludGVsX2RkaV9kcF92b2x0
YWdlX21heChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0KPiA+ICAJCURQX1RSQUlOX1ZPTFRB
R0VfU1dJTkdfTUFTSzsNCj4gPiAgfQ0KPiA+ICANCj4gPiAtLyoNCj4gPiAtICogV2UgYXNzdW1l
IHRoYXQgdGhlIGZ1bGwgc2V0IG9mIHByZS1lbXBoYXNpcyB2YWx1ZXMgY2FuIGJlDQo+ID4gLSAq
IHVzZWQgb24gYWxsIERESSBwbGF0Zm9ybXMuIFNob3VsZCB0aGF0IGNoYW5nZSB3ZSBuZWVkIHRv
DQo+ID4gLSAqIHJldGhpbmsgdGhpcyBjb2RlLg0KPiA+IC0gKi8NCj4gPiAgc3RhdGljIHU4IGlu
dGVsX2RkaV9kcF9wcmVlbXBoX21heChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0KPiA+ICB7
DQo+ID4gKwkvKiBIT0JMIHZvbHRhZ2Ugc3dpbmcgdGFibGUgb25seSBoYXZlIG9uZSBlbnRyeSAq
Lw0KPiA+ICsJaWYgKGludGVsX2RwLT5ob2JsX2FjdGl2ZSkNCj4gPiArCQlyZXR1cm4gRFBfVFJB
SU5fUFJFX0VNUEhfTEVWRUxfMDsNCj4gDQo+IFRoYXQncyBpbGxlZ2FsLiBXZSBuZWVkIHRvIGNs
YWltIHN1cHBvcnQgZm9yIGF0IGxlYXN0IGFsbA0KPiB2c3dpbmcvcHJlLWVtcGhhc2lzIGxldmVs
cyAwLTIuIDMgaXMgb3B0aW9uYWwuIFRob3VnaCB0aGVyZSBpcw0KPiBzb21lIGNvbmZ1c2lvbiBh
cm91bmQgdGhpcyBpbiB0aGUgZURQIHNwZWMgd2hlcmUgaXQga2luZGEgc2VlbXMgc3VnZ2VzdA0K
PiB0aGF0IGV2ZW4gc29tZSBvZiB0aGUgbGV2ZWwgMiB0aGluZ3MgYXJlIG9wdGlvbmFsLiBCdXQg
aXQncyBzbyB1bmNsZWFyDQo+IEkgd291bGQgZGVmZXIgdG8ganVzdCB0cnVzdGluZyB3aGF0IHRo
ZSBEUCBzcGVjIHNheXMuDQoNCk9rYXkgc28gaW4gdGhpcyBjYXNlIEkgc2hvdWxkIGFkZCBtb3Jl
IGVudHJpZXMgdG8gdGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2VkcF9oYnIyX2hvYmwg
d2l0aCB0aGUgc2FtZSB2YWx1ZXMgdG8gbWF0Y2ggdGhlIG1pbmltdW0gcmVxdWlyZWQgYnkNCkRQ
IHNwZWM/DQoNCj4gDQo+IC9tZSBnb2VzIHRvIHdyaXRlIHRoZSBwYXRjaCB3aXRoIHRoZSBXQVJO
cy4uLg0KDQpXaWxsIHRha2UgYSBsb29rLg0KDQo+IA0KPiANCj4gPiArDQo+ID4gIAlyZXR1cm4g
RFBfVFJBSU5fUFJFX0VNUEhfTEVWRUxfMzsNCj4gPiAgfQ0KPiA+ICANCj4gPiBAQCAtMjM5Miw2
ICsyNDEwLDE1IEBAIHN0YXRpYyB2b2lkIGljbF9kZGlfY29tYm9fdnN3aW5nX3Byb2dyYW0oc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsDQo+ID4gIAkJbGV2ZWwgPSBuX2VudHJpZXMgLSAx
Ow0KPiA+ICAJfQ0KPiA+ICANCj4gPiArCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyICYm
IHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkgew0KPiA+ICsJCXN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7DQo+ID4gKw0KPiA+ICsJCXZhbCA9IEVE
UDRLMktfTU9ERV9PVlJEX0VOIHwgRURQNEsyS19NT0RFX09WUkRfT1BUSU1JWkVEOw0KPiA+ICsJ
CWludGVsX2RwLT5ob2JsX2FjdGl2ZSA9IGlzX2hvYmxfYnVmX3RyYW5zKGRkaV90cmFuc2xhdGlv
bnMpOw0KPiA+ICsJCWludGVsX2RlX3JtdyhkZXZfcHJpdiwgSUNMX1BPUlRfQ0xfRFcxMChwaHkp
LCB2YWwsDQo+ID4gKwkJCSAgICAgaW50ZWxfZHAtPmhvYmxfYWN0aXZlID8gdmFsIDogMCk7DQo+
ID4gKwl9DQo+IA0KPiBJJ2Qgc3RpbGwgc3VnZ2VzdCB3cml0aW5nIHRoYXQgdW5jb25kaXRpb25h
bGx5Lg0KDQpPa2F5DQoNCj4gDQo+ID4gKw0KPiA+ICAJLyogU2V0IFBPUlRfVFhfRFc1ICovDQo+
ID4gIAl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBJQ0xfUE9SVF9UWF9EVzVfTE4wKHBo
eSkpOw0KPiA+ICAJdmFsICY9IH4oU0NBTElOR19NT0RFX1NFTF9NQVNLIHwgUlRFUk1fU0VMRUNU
X01BU0sgfA0KPiA+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oDQo+ID4gaW5kZXggZThmODA5MTYxYzc1Li5mZDRmMGU0ZDBiZTcgMTAw
NjQ0DQo+ID4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3R5cGVzLmgNCj4gPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfdHlwZXMuaA0KPiA+IEBAIC0xMzc1LDYgKzEzNzUsOCBAQCBzdHJ1Y3QgaW50ZWxfZHAg
ew0KPiA+ICANCj4gPiAgCS8qIERpc3BsYXkgc3RyZWFtIGNvbXByZXNzaW9uIHRlc3RpbmcgKi8N
Cj4gPiAgCWJvb2wgZm9yY2VfZHNjX2VuOw0KPiA+ICsNCj4gPiArCXU4IGhvYmxfZGlzYWJsZWQg
OiAxLCBob2JsX2FjdGl2ZSA6IDEsIGhvYmxfbm90X3VzZWQgOiA2Ow0KPiANCj4gV2h5IGRpZCB3
ZSBnbyBmcm9tIGEgc2ltcGxlIGJvb2xlYW4gdG8gdGhpcyBjb21wbGljYXRlZCB0aGluZz8NCg0K
V2lsbCB0cnkgdG8gcmVtb3ZlIG9uZS4NCg0KPiANCj4gPiAgfTsNCj4gPiAgDQo+ID4gIGVudW0g
bHNwY29uX3ZlbmRvciB7DQo+ID4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmMNCj4gPiBpbmRleCAyNDkzMTQyYTcwZTkuLjky
NTgyMmZkMzg2ZCAxMDA2NDQNCj4gPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RwX2xpbmtfdHJhaW5pbmcuYw0KPiA+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5jDQo+ID4gQEAgLTQwMSw2ICs0MDEsMTEg
QEAgaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0K
PiA+ICAJCSAgICBpbnRlbF9jb25uZWN0b3ItPmJhc2UuYmFzZS5pZCwNCj4gPiAgCQkgICAgaW50
ZWxfY29ubmVjdG9yLT5iYXNlLm5hbWUsDQo+ID4gIAkJICAgIGludGVsX2RwLT5saW5rX3JhdGUs
IGludGVsX2RwLT5sYW5lX2NvdW50KTsNCj4gPiArCWlmIChpbnRlbF9kcC0+aG9ibF9hY3RpdmUp
IHsNCj4gPiArCQlkcm1fZGJnX2ttcygmZHBfdG9faTkxNShpbnRlbF9kcCktPmRybSwNCj4gPiAr
CQkJICAgICJMaW5rIFRyYWluaW5nIGZhaWxlZCB3aXRoIEhPQkwgYWN0aXZlLCBub3QgZW5hYmxp
bmcgaXQgZm9yIG5vdyBvbiIpOw0KPiA+ICsJCWludGVsX2RwLT5ob2JsX2Rpc2FibGVkID0gdHJ1
ZTsNCj4gDQo+IEkgZG9uJ3QgdGhpbmsgd2Ugc2hvdWxkIGRvIHRoZSBsaW5rIHJhdGUvbGFuZXMg
cmVkdWN0aW9uIGluDQo+IHRoaXMgY2FzZS4gSWUuIHdlIHNob3VsZCBqdXN0IG1hcmsgaG9ibCBh
cyBubyBnb29kIGFuZCByZXRyeQ0KPiB0aGUgbGluayB0cmFpbmluZyB3aXRoIHRoZSBzYW1lIGxp
bmsgcGFyYW0gbGltaXRzLg0KDQpPa2F5DQoNCj4gDQo+ID4gKwl9DQo+ID4gIAlpZiAoIWludGVs
X2RwX2dldF9saW5rX3RyYWluX2ZhbGxiYWNrX3ZhbHVlcyhpbnRlbF9kcCwNCj4gPiAgCQkJCQkJ
ICAgICBpbnRlbF9kcC0+bGlua19yYXRlLA0KPiA+ICAJCQkJCQkgICAgIGludGVsX2RwLT5sYW5l
X2NvdW50KSkNCj4gPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgNCj4gPiBpbmRleCA4NmEyM2NlZDA1
MWIuLmVhMTY5MzFjMGZhNCAxMDA2NDQNCj4gPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3JlZy5oDQo+ID4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaA0KPiA+
IEBAIC0xODk4LDYgKzE4OTgsOCBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaTkxNV9tbWlvX3JlZ192
YWxpZChpOTE1X3JlZ190IHJlZykNCj4gPiAgI2RlZmluZSAgUFdSX0RPV05fTE5fM18xXzAJCSgw
eGIgPDwgNCkNCj4gPiAgI2RlZmluZSAgUFdSX0RPV05fTE5fTUFTSwkJKDB4ZiA8PCA0KQ0KPiA+
ICAjZGVmaW5lICBQV1JfRE9XTl9MTl9TSElGVAkJNA0KPiA+ICsjZGVmaW5lICBFRFA0SzJLX01P
REVfT1ZSRF9FTgkJKDEgPDwgMykNCj4gPiArI2RlZmluZSAgRURQNEsyS19NT0RFX09WUkRfT1BU
SU1JWkVECSgxIDw8IDIpDQo+ID4gIA0KPiA+ICAjZGVmaW5lIElDTF9QT1JUX0NMX0RXMTIocGh5
KQkJX01NSU8oX0lDTF9QT1JUX0NMX0RXKDEyLCBwaHkpKQ0KPiA+ICAjZGVmaW5lICAgSUNMX0xB
TkVfRU5BQkxFX0FVWAkJKDEgPDwgMCkNCj4gPiAtLSANCj4gPiAyLjI3LjANCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

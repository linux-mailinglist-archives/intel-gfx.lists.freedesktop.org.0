Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6D5F642ED8
	for <lists+intel-gfx@lfdr.de>; Wed, 12 Jun 2019 20:38:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A601189829;
	Wed, 12 Jun 2019 18:38:20 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 297A48982F
 for <intel-gfx@lists.freedesktop.org>; Wed, 12 Jun 2019 18:38:18 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Jun 2019 11:38:18 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by fmsmga005.fm.intel.com with ESMTP; 12 Jun 2019 11:38:18 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 12 Jun 2019 11:37:47 -0700
Message-Id: <20190612183748.7693-9-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190612183748.7693-1-daniele.ceraolospurio@intel.com>
References: <20190612183748.7693-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 8/8] drm/i915: make intel_wakeref work on the
 rpm struct
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

aW50ZWxfcnVudGltZV9wbSBpcyB0aGUgb25seSB0aGluZyB0aGV5IHVzZSBmcm9tIHRoZSBpOTE1
IHN0cnVjdHVyZSwKc28gdXNlIHRoYXQgZGlyZWN0bHkuCgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWxl
IENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jIHwgIDQgKy0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jICAgICB8ICA0ICstLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfd2FrZXJlZi5jICAgICAgfCAzMiArKysrKysrKysrKy0tLS0tLS0tLS0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd2FrZXJlZi5oICAgICAgfCAxOCArKysrKystLS0tLS0t
CiA1IGZpbGVzIGNoYW5nZWQsIDMwIGluc2VydGlvbnMoKyksIDMwIGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMKaW5kZXggY2NmMDM0NzY0NzQx
Li45MDNiZWUzZDZjNmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9w
bS5jCkBAIC0zNyw3ICszNyw3IEBAIHN0YXRpYyBpbnQgX19lbmdpbmVfdW5wYXJrKHN0cnVjdCBp
bnRlbF93YWtlcmVmICp3ZikKIAogdm9pZCBpbnRlbF9lbmdpbmVfcG1fZ2V0KHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlpbnRlbF93YWtlcmVmX2dldChlbmdpbmUtPmk5MTUs
ICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5lX3VucGFyayk7CisJaW50ZWxfd2FrZXJlZl9nZXQo
JmVuZ2luZS0+aTkxNS0+cnVudGltZV9wbSwgJmVuZ2luZS0+d2FrZXJlZiwgX19lbmdpbmVfdW5w
YXJrKTsKIH0KIAogdm9pZCBpbnRlbF9lbmdpbmVfcGFyayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCkBAIC0xMzEsNyArMTMxLDcgQEAgc3RhdGljIGludCBfX2VuZ2luZV9wYXJrKHN0
cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIAogdm9pZCBpbnRlbF9lbmdpbmVfcG1fcHV0KHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlpbnRlbF93YWtlcmVmX3B1dChlbmdpbmUt
Pmk5MTUsICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5lX3BhcmspOworCWludGVsX3dha2VyZWZf
cHV0KCZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5l
X3BhcmspOwogfQogCiB2b2lkIGludGVsX2VuZ2luZV9pbml0X19wbShzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndF9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwppbmRleCBh
ZTcxNTVmMGUwNjMuLjdiNTk2Nzc1MTc2MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3RfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dF9wbS5jCkBAIC01Miw3ICs1Miw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfZ3RfdW5wYXJrKHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKIAogdm9pZCBpbnRlbF9ndF9wbV9nZXQoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0JaW50ZWxfd2FrZXJlZl9nZXQoaTkxNSwgJmk5MTUtPmd0
Lndha2VyZWYsIGludGVsX2d0X3VucGFyayk7CisJaW50ZWxfd2FrZXJlZl9nZXQoJmk5MTUtPnJ1
bnRpbWVfcG0sICZpOTE1LT5ndC53YWtlcmVmLCBpbnRlbF9ndF91bnBhcmspOwogfQogCiBzdGF0
aWMgaW50IGludGVsX2d0X3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQpAQCAtNzcsNyAr
NzcsNyBAQCBzdGF0aWMgaW50IGludGVsX2d0X3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndm
KQogCiB2b2lkIGludGVsX2d0X3BtX3B1dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkK
IHsKLQlpbnRlbF93YWtlcmVmX3B1dChpOTE1LCAmaTkxNS0+Z3Qud2FrZXJlZiwgaW50ZWxfZ3Rf
cGFyayk7CisJaW50ZWxfd2FrZXJlZl9wdXQoJmk5MTUtPnJ1bnRpbWVfcG0sICZpOTE1LT5ndC53
YWtlcmVmLCBpbnRlbF9ndF9wYXJrKTsKIH0KIAogdm9pZCBpbnRlbF9ndF9wbV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKaW5kZXggNTk4
ZmFjYTQ4OTllLi44ZjU1MTBhZjJjYTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwpAQCAtMTc3
Niw3ICsxNzc2LDcgQEAgc3RhdGljIHZvaWQgaTkxNV9nZW1faW5pdF9fbW0oc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpCiAJSU5JVF9MSVNUX0hFQUQoJmk5MTUtPm1tLmZlbmNlX2xpc3Qp
OwogCiAJSU5JVF9MSVNUX0hFQUQoJmk5MTUtPm1tLnVzZXJmYXVsdF9saXN0KTsKLQlpbnRlbF93
YWtlcmVmX2F1dG9faW5pdCgmaTkxNS0+bW0udXNlcmZhdWx0X3dha2VyZWYsIGk5MTUpOworCWlu
dGVsX3dha2VyZWZfYXV0b19pbml0KCZpOTE1LT5tbS51c2VyZmF1bHRfd2FrZXJlZiwgJmk5MTUt
PnJ1bnRpbWVfcG0pOwogCiAJaTkxNV9nZW1faW5pdF9fb2JqZWN0cyhpOTE1KTsKIH0KZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwppbmRleCBiNjc3YWU4OTNkNmYuLjNkYjZmYTY4Mjgy
MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd2FrZXJlZi5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwpAQCAtNCwyMyArNCwyMyBAQAog
ICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCi0jaW5jbHVkZSAi
aW50ZWxfZHJ2LmgiCi0jaW5jbHVkZSAiaW50ZWxfd2FrZXJlZi5oIgorI2luY2x1ZGUgImludGVs
X3J1bnRpbWVfcG0uaCIKKyNpbmNsdWRlICJpOTE1X2dlbS5oIgogCi1zdGF0aWMgdm9pZCBycG1f
Z2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAq
d2YpCitzdGF0aWMgdm9pZCBycG1fZ2V0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sIHN0
cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsKLQl3Zi0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVf
cG1fZ2V0KCZpOTE1LT5ydW50aW1lX3BtKTsKKwl3Zi0+d2FrZXJlZiA9IGludGVsX3J1bnRpbWVf
cG1fZ2V0KHJwbSk7CiB9CiAKLXN0YXRpYyB2b2lkIHJwbV9wdXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRpYyB2b2lkIHJwbV9w
dXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwgc3RydWN0IGludGVsX3dha2VyZWYgKndm
KQogewogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmID0gZmV0Y2hfYW5kX3plcm8oJndmLT53YWtl
cmVmKTsKIAotCWludGVsX3J1bnRpbWVfcG1fcHV0KCZpOTE1LT5ydW50aW1lX3BtLCB3YWtlcmVm
KTsKKwlpbnRlbF9ydW50aW1lX3BtX3B1dChycG0sIHdha2VyZWYpOwogCUdFTV9CVUdfT04oIXdh
a2VyZWYpOwogfQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKK2ludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0KHN0cnVjdCBp
bnRlbF9ydW50aW1lX3BtICpycG0sCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2Ys
CiAJCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkKIHsKQEAgLTM0
LDExICszNCwxMSBAQCBpbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwKIAlpZiAoIWF0b21pY19yZWFkKCZ3Zi0+Y291bnQpKSB7CiAJCWlu
dCBlcnI7CiAKLQkJcnBtX2dldChpOTE1LCB3Zik7CisJCXJwbV9nZXQocnBtLCB3Zik7CiAKIAkJ
ZXJyID0gZm4od2YpOwogCQlpZiAodW5saWtlbHkoZXJyKSkgewotCQkJcnBtX3B1dChpOTE1LCB3
Zik7CisJCQlycG1fcHV0KHJwbSwgd2YpOwogCQkJbXV0ZXhfdW5sb2NrKCZ3Zi0+bXV0ZXgpOwog
CQkJcmV0dXJuIGVycjsKIAkJfQpAQCAtNTEsNyArNTEsNyBAQCBpbnQgX19pbnRlbF93YWtlcmVm
X2dldF9maXJzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlyZXR1cm4gMDsKIH0K
IAotaW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSwKK2ludCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVsX3J1bnRpbWVf
cG0gKnJwbSwKIAkJCSAgICAgc3RydWN0IGludGVsX3dha2VyZWYgKndmLAogCQkJICAgICBpbnQg
KCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkKIHsKQEAgLTU5LDcgKzU5LDcgQEAgaW50
IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwK
IAogCWVyciA9IGZuKHdmKTsKIAlpZiAobGlrZWx5KCFlcnIpKQotCQlycG1fcHV0KGk5MTUsIHdm
KTsKKwkJcnBtX3B1dChycG0sIHdmKTsKIAllbHNlCiAJCWF0b21pY19pbmMoJndmLT5jb3VudCk7
CiAJbXV0ZXhfdW5sb2NrKCZ3Zi0+bXV0ZXgpOwpAQCAtODYsMTcgKzg2LDE3IEBAIHN0YXRpYyB2
b2lkIHdha2VyZWZfYXV0b190aW1lb3V0KHN0cnVjdCB0aW1lcl9saXN0ICp0KQogCXdha2VyZWYg
PSBmZXRjaF9hbmRfemVybygmd2YtPndha2VyZWYpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUo
JndmLT5sb2NrLCBmbGFncyk7CiAKLQlpbnRlbF9ydW50aW1lX3BtX3B1dCgmd2YtPmk5MTUtPnJ1
bnRpbWVfcG0sIHdha2VyZWYpOworCWludGVsX3J1bnRpbWVfcG1fcHV0KHdmLT5ycG0sIHdha2Vy
ZWYpOwogfQogCiB2b2lkIGludGVsX3dha2VyZWZfYXV0b19pbml0KHN0cnVjdCBpbnRlbF93YWtl
cmVmX2F1dG8gKndmLAotCQkJICAgICBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKKwkJ
CSAgICAgc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSkKIHsKIAlzcGluX2xvY2tfaW5pdCgm
d2YtPmxvY2spOwogCXRpbWVyX3NldHVwKCZ3Zi0+dGltZXIsIHdha2VyZWZfYXV0b190aW1lb3V0
LCAwKTsKIAlyZWZjb3VudF9zZXQoJndmLT5jb3VudCwgMCk7CiAJd2YtPndha2VyZWYgPSAwOwot
CXdmLT5pOTE1ID0gaTkxNTsKKwl3Zi0+cnBtID0gcnBtOwogfQogCiB2b2lkIGludGVsX3dha2Vy
ZWZfYXV0byhzdHJ1Y3QgaW50ZWxfd2FrZXJlZl9hdXRvICp3ZiwgdW5zaWduZWQgbG9uZyB0aW1l
b3V0KQpAQCAtMTEwLDEzICsxMTAsMTMgQEAgdm9pZCBpbnRlbF93YWtlcmVmX2F1dG8oc3RydWN0
IGludGVsX3dha2VyZWZfYXV0byAqd2YsIHVuc2lnbmVkIGxvbmcgdGltZW91dCkKIAl9CiAKIAkv
KiBPdXIgbWlzc2lvbiBpcyB0aGF0IHdlIG9ubHkgZXh0ZW5kIGFuIGFscmVhZHkgYWN0aXZlIHdh
a2VyZWYgKi8KLQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoJndmLT5pOTE1LT5ydW50aW1lX3Bt
KTsKKwlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQod2YtPnJwbSk7CiAKIAlpZiAoIXJlZmNvdW50
X2luY19ub3RfemVybygmd2YtPmNvdW50KSkgewogCQlzcGluX2xvY2tfaXJxc2F2ZSgmd2YtPmxv
Y2ssIGZsYWdzKTsKIAkJaWYgKCFyZWZjb3VudF9pbmNfbm90X3plcm8oJndmLT5jb3VudCkpIHsK
IAkJCUdFTV9CVUdfT04od2YtPndha2VyZWYpOwotCQkJd2YtPndha2VyZWYgPSBpbnRlbF9ydW50
aW1lX3BtX2dldF9pZl9pbl91c2UoJndmLT5pOTE1LT5ydW50aW1lX3BtKTsKKwkJCXdmLT53YWtl
cmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXRfaWZfaW5fdXNlKHdmLT5ycG0pOwogCQkJcmVmY291
bnRfc2V0KCZ3Zi0+Y291bnQsIDEpOwogCQl9CiAJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJndm
LT5sb2NrLCBmbGFncyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93
YWtlcmVmLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmgKaW5kZXggOGE1
Zjg1YzAwMGNlLi45Y2JiMmViZjU3NWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3dha2VyZWYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVm
LmgKQEAgLTEzLDcgKzEzLDcgQEAKICNpbmNsdWRlIDxsaW51eC9zdGFja2RlcG90Lmg+CiAjaW5j
bHVkZSA8bGludXgvdGltZXIuaD4KIAotc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CitzdHJ1Y3Qg
aW50ZWxfcnVudGltZV9wbTsKIAogdHlwZWRlZiBkZXBvdF9zdGFja19oYW5kbGVfdCBpbnRlbF93
YWtlcmVmX3Q7CiAKQEAgLTMxLDEwICszMSwxMCBAQCB2b2lkIF9faW50ZWxfd2FrZXJlZl9pbml0
KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKIAlfX2ludGVsX3dha2VyZWZfaW5pdCgod2YpLCAm
X19rZXkpOwkJCQlcCiB9IHdoaWxlICgwKQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJz
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKK2ludCBfX2ludGVsX3dha2VyZWZfZ2V0
X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAJCQkgICAgICBzdHJ1Y3QgaW50
ZWxfd2FrZXJlZiAqd2YsCiAJCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYg
KndmKSk7Ci1pbnQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAoraW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfcnVu
dGltZV9wbSAqcnBtLAogCQkJICAgICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCiAJCQkgICAg
IGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKTsKIApAQCAtNTUsMTIgKzU1LDEy
IEBAIGludCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsCiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBpbnQKLWludGVs
X3dha2VyZWZfZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAoraW50ZWxfd2FrZXJl
Zl9nZXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKIAkJICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCiAJCSAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCiB7CiAJ
aWYgKHVubGlrZWx5KCFhdG9taWNfaW5jX25vdF96ZXJvKCZ3Zi0+Y291bnQpKSkKLQkJcmV0dXJu
IF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3QoaTkxNSwgd2YsIGZuKTsKKwkJcmV0dXJuIF9faW50
ZWxfd2FrZXJlZl9nZXRfZmlyc3QocnBtLCB3ZiwgZm4pOwogCiAJcmV0dXJuIDA7CiB9CkBAIC04
MiwxMiArODIsMTIgQEAgaW50ZWxfd2FrZXJlZl9nZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsCiAgKiBjb2RlIG90aGVyd2lzZS4KICAqLwogc3RhdGljIGlubGluZSBpbnQKLWludGVs
X3dha2VyZWZfcHV0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAoraW50ZWxfd2FrZXJl
Zl9wdXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKIAkJICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCiAJCSAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCiB7CiAJ
aWYgKGF0b21pY19kZWNfYW5kX211dGV4X2xvY2soJndmLT5jb3VudCwgJndmLT5tdXRleCkpCi0J
CXJldHVybiBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3QoaTkxNSwgd2YsIGZuKTsKKwkJcmV0dXJu
IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChycG0sIHdmLCBmbik7CiAKIAlyZXR1cm4gMDsKIH0K
QEAgLTEzMyw3ICsxMzMsNyBAQCBpbnRlbF93YWtlcmVmX2FjdGl2ZShzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YpCiB9CiAKIHN0cnVjdCBpbnRlbF93YWtlcmVmX2F1dG8gewotCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1OworCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG07CiAJc3Ry
dWN0IHRpbWVyX2xpc3QgdGltZXI7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CiAJc3Bpbmxv
Y2tfdCBsb2NrOwpAQCAtMTU4LDcgKzE1OCw3IEBAIHN0cnVjdCBpbnRlbF93YWtlcmVmX2F1dG8g
ewogdm9pZCBpbnRlbF93YWtlcmVmX2F1dG8oc3RydWN0IGludGVsX3dha2VyZWZfYXV0byAqd2Ys
IHVuc2lnbmVkIGxvbmcgdGltZW91dCk7CiAKIHZvaWQgaW50ZWxfd2FrZXJlZl9hdXRvX2luaXQo
c3RydWN0IGludGVsX3dha2VyZWZfYXV0byAqd2YsCi0JCQkgICAgIHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KTsKKwkJCSAgICAgc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSk7CiB2
b2lkIGludGVsX3dha2VyZWZfYXV0b19maW5pKHN0cnVjdCBpbnRlbF93YWtlcmVmX2F1dG8gKndm
KTsKIAogI2VuZGlmIC8qIElOVEVMX1dBS0VSRUZfSCAqLwotLSAKMi4yMC4xCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBs
aXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 33E6BF3344
	for <lists+intel-gfx@lfdr.de>; Thu,  7 Nov 2019 16:33:30 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 783AE6F71D;
	Thu,  7 Nov 2019 15:33:28 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 07DF06F71B
 for <intel-gfx@lists.freedesktop.org>; Thu,  7 Nov 2019 15:33:26 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Nov 2019 07:33:25 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,278,1569308400"; d="scan'208";a="227862423"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by fmsmga004.fm.intel.com with ESMTP; 07 Nov 2019 07:33:24 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  7 Nov 2019 17:30:37 +0200
Message-Id: <20191107153037.17640-3-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191107153037.17640-1-stanislav.lisovskiy@intel.com>
References: <20191107153037.17640-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v10 2/2] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KCnYxMDog
LSBGaXggQ0RDTEsgY29ycnVwdGlvbiwgYmVjYXVzZSBvZiBnbG9iYWwgc3RhdGUgZ2V0dGluZyBz
ZXJpYWxpemVkCiAgICAgICB3aXRob3V0IG1vZGVzZXQsIHdoaWNoIGNhdXNlZCBjb3B5aW5nIG9m
IG5vbi1jYWxjdWxhdGVkIGNkY2xrCiAgICAgICB0byBiZSBjb3BpZWQgdG8gZGV2X3ByaXYodGhh
bmtzIHRvIFZpbGxlIGZvciB0aGUgaGludCkuCgpSZXZpZXdlZC1ieTogSmFtZXMgQXVzbXVzIDxq
YW1lcy5hdXNtdXNAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zza2l5
IDxzdGFuaXNsYXYubGlzb3Zza2l5QGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmls
bGUuc3lyamFsYUBpbnRlbC5jb20+CkNjOiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0BpbnRl
bC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWMuaCAg
IHwgICAzICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYyAgICAgICB8
IDEzNyArKysrKysrKysrKysrKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYncuaCAgICAgICB8ICAgMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYyAgfCAxMDQgKysrKysrKysrKysrLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgICAzICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZHJ2LmggICAgICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZWcuaCAgICAgICAgICAgICAgIHwgICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Bt
LmMgICAgICAgICAgICAgICB8ICAxNSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0u
aCAgICAgICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3NpZGVi
YW5kLmMgICAgICAgICB8ICAyNyArKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9zaWRl
YmFuZC5oICAgICAgICAgfCAgIDEgLQogMTEgZmlsZXMgY2hhbmdlZCwgMjY0IGluc2VydGlvbnMo
KyksIDQxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfYXRvbWljLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2F0b21pYy5oCmluZGV4IDdiNDk2MjM0MTliYS4uM2FiNmQ3ZWM3NWFlIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmgKQEAgLTcsNiArNyw3IEBACiAjZGVm
aW5lIF9fSU5URUxfQVRPTUlDX0hfXwogCiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNs
dWRlICJpbnRlbF9kaXNwbGF5X3R5cGVzLmgiCiAKIHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlOwog
c3RydWN0IGRybV9jb25uZWN0b3I7CkBAIC00MSw2ICs0Miw4IEBAIHZvaWQgaW50ZWxfY3J0Y19j
b3B5X2NvbG9yX2Jsb2JzKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKIHN0
cnVjdCBkcm1fYXRvbWljX3N0YXRlICppbnRlbF9hdG9taWNfc3RhdGVfYWxsb2Moc3RydWN0IGRy
bV9kZXZpY2UgKmRldik7CiB2b2lkIGludGVsX2F0b21pY19zdGF0ZV9jbGVhcihzdHJ1Y3QgZHJt
X2F0b21pY19zdGF0ZSAqc3RhdGUpOwogCitpbnQgaW50ZWxfYXRvbWljX3NlcmlhbGl6ZV9nbG9i
YWxfc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOworCiBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqCiBpbnRlbF9hdG9taWNfZ2V0X2NydGNfc3RhdGUoc3RydWN0IGRybV9h
dG9taWNfc3RhdGUgKnN0YXRlLAogCQkJICAgIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYwppbmRleCAzZjZlMjlmNjEzMjMuLjFk
ZGU0ZTE1NzRmYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9idy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYwpAQCAt
OCw2ICs4LDkgQEAKICNpbmNsdWRlICJpbnRlbF9idy5oIgogI2luY2x1ZGUgImludGVsX2Rpc3Bs
YXlfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9zaWRlYmFuZC5oIgorI2luY2x1ZGUgImludGVs
X2F0b21pYy5oIgorI2luY2x1ZGUgImludGVsX3BtLmgiCisKIAogLyogUGFyYW1ldGVycyBmb3Ig
UWNsayBHZXlzZXJ2aWxsZSAoUUdWKSAqLwogc3RydWN0IGludGVsX3Fndl9wb2ludCB7CkBAIC0x
NSw3ICsxOCw3IEBAIHN0cnVjdCBpbnRlbF9xZ3ZfcG9pbnQgewogfTsKIAogc3RydWN0IGludGVs
X3Fndl9pbmZvIHsKLQlzdHJ1Y3QgaW50ZWxfcWd2X3BvaW50IHBvaW50c1szXTsKKwlzdHJ1Y3Qg
aW50ZWxfcWd2X3BvaW50IHBvaW50c1tOVU1fU0FHVl9QT0lOVFNdOwogCXU4IG51bV9wb2ludHM7
CiAJdTggbnVtX2NoYW5uZWxzOwogCXU4IHRfYmw7CkBAIC0xMTMsNiArMTE2LDI3IEBAIHN0YXRp
YyBpbnQgaWNsX3Bjb2RlX3JlYWRfcWd2X3BvaW50X2luZm8oc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAogCXJldHVybiAwOwogfQogCitpbnQgaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fn
dl9wb2ludHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgdTMyIHBv
aW50c19tYXNrKQoreworCWludCByZXQ7CisKKwkvKiBic3BlYyBzYXlzIHRvIGtlZXAgcmV0cnlp
bmcgZm9yIGF0IGxlYXN0IDEgbXMgKi8KKwlyZXQgPSBza2xfcGNvZGVfcmVxdWVzdChkZXZfcHJp
diwgSUNMX1BDT0RFX1NBR1ZfREVfTUVNX1NTX0NPTkZJRywKKwkJCQlwb2ludHNfbWFzaywKKwkJ
CQlHRU4xMV9QQ09ERV9QT0lOVFNfUkVTVFJJQ1RFRF9NQVNLLAorCQkJCUdFTjExX1BDT0RFX1BP
SU5UU19SRVNUUklDVEVELAorCQkJCTEpOworCisJaWYgKHJldCA8IDApIHsKKwkJRFJNX0VSUk9S
KCJGYWlsZWQgdG8gZGlzYWJsZSBxZ3YgcG9pbnRzICglZClcbiIsIHJldCk7CisJCXJldHVybiBy
ZXQ7CisJfQorCisJcmV0dXJuIDA7Cit9CisKKwogc3RhdGljIGludCBpY2xfZ2V0X3Fndl9wb2lu
dHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICAgICAgc3RydWN0IGlu
dGVsX3Fndl9pbmZvICpxaSkKIHsKQEAgLTE3Niw3ICsyMDAsNyBAQCBzdGF0aWMgY29uc3Qgc3Ry
dWN0IGludGVsX3NhX2luZm8gdGdsX3NhX2luZm8gPSB7CiAKIHN0YXRpYyBpbnQgaWNsX2dldF9i
d19pbmZvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgY29uc3Qgc3RydWN0IGlu
dGVsX3NhX2luZm8gKnNhKQogewotCXN0cnVjdCBpbnRlbF9xZ3ZfaW5mbyBxaSA9IHt9OworCXN0
cnVjdCBpbnRlbF9xZ3ZfaW5mbyBxaTsKIAlib29sIGlzX3lfdGlsZSA9IHRydWU7IC8qIGFzc3Vt
ZSB5IHRpbGUgbWF5IGJlIHVzZWQgKi8KIAlpbnQgbnVtX2NoYW5uZWxzOwogCWludCBkZWludGVy
bGVhdmU7CkBAIC0yNzAsMjIgKzI5NCw2IEBAIHZvaWQgaW50ZWxfYndfaW5pdF9odyhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWljbF9nZXRfYndfaW5mbyhkZXZfcHJpdiwg
JmljbF9zYV9pbmZvKTsKIH0KIAotc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9tYXhfZGF0YV9y
YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkJaW50IG51bV9wbGFu
ZXMpCi17Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCi0JCS8qCi0JCSAqIEZJWE1F
IHdpdGggU0FHViBkaXNhYmxlZCBtYXliZSB3ZSBjYW4gYXNzdW1lCi0JCSAqIHBvaW50IDEgd2ls
bCBhbHdheXMgYmUgdXNlZD8gU2VlbXMgdG8gbWF0Y2gKLQkJICogdGhlIGJlaGF2aW91ciBvYnNl
cnZlZCBpbiB0aGUgd2lsZC4KLQkJICovCi0JCXJldHVybiBtaW4zKGljbF9tYXhfYncoZGV2X3By
aXYsIG51bV9wbGFuZXMsIDApLAotCQkJICAgIGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9wbGFu
ZXMsIDEpLAotCQkJICAgIGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9wbGFuZXMsIDIpKTsKLQll
bHNlCi0JCXJldHVybiBVSU5UX01BWDsKLX0KLQogc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9i
d19jcnRjX251bV9hY3RpdmVfcGxhbmVzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogewogCS8qCkBAIC0zNzcsNyArMzg1LDEyIEBAIGludCBpbnRlbF9id19hdG9t
aWNfY2hlY2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJdW5zaWduZWQgaW50
IGRhdGFfcmF0ZSwgbWF4X2RhdGFfcmF0ZTsKIAl1bnNpZ25lZCBpbnQgbnVtX2FjdGl2ZV9wbGFu
ZXM7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7Ci0JaW50IGk7CisJaW50IGksIHJldDsKKwlz
dHJ1Y3QgaW50ZWxfcWd2X2luZm8gcWkgPSB7fTsKKwl1MzIgYWxsb3dlZF9wb2ludHMgPSAwOwor
CXVuc2lnbmVkIGludCBtYXhfYndfcG9pbnQgPSAwLCBtYXhfYncgPSAwOworCXVuc2lnbmVkIGlu
dCBudW1fcWd2X3BvaW50cyA9IGRldl9wcml2LT5tYXhfYndbMF0ubnVtX3Fndl9wb2ludHM7CisJ
dTMyIG1hc2sgPSAoMSA8PCBudW1fcWd2X3BvaW50cykgLSAxOwogCiAJLyogRklYTUUgZWFybGll
ciBnZW5zIG5lZWQgc29tZSBjaGVja3MgdG9vICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
PCAxMSkKQEAgLTQyMSwxNiArNDM0LDkyIEBAIGludCBpbnRlbF9id19hdG9taWNfY2hlY2soc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJZGF0YV9yYXRlID0gaW50ZWxfYndfZGF0
YV9yYXRlKGRldl9wcml2LCBid19zdGF0ZSk7CiAJbnVtX2FjdGl2ZV9wbGFuZXMgPSBpbnRlbF9i
d19udW1fYWN0aXZlX3BsYW5lcyhkZXZfcHJpdiwgYndfc3RhdGUpOwogCi0JbWF4X2RhdGFfcmF0
ZSA9IGludGVsX21heF9kYXRhX3JhdGUoZGV2X3ByaXYsIG51bV9hY3RpdmVfcGxhbmVzKTsKLQog
CWRhdGFfcmF0ZSA9IERJVl9ST1VORF9VUChkYXRhX3JhdGUsIDEwMDApOwogCi0JaWYgKGRhdGFf
cmF0ZSA+IG1heF9kYXRhX3JhdGUpIHsKLQkJRFJNX0RFQlVHX0tNUygiQmFuZHdpZHRoICV1IE1C
L3MgZXhjZWVkcyBtYXggYXZhaWxhYmxlICVkIE1CL3MgKCVkIGFjdGl2ZSBwbGFuZXMpXG4iLAot
CQkJICAgICAgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJ
Zm9yIChpID0gMDsgaSA8IG51bV9xZ3ZfcG9pbnRzOyBpKyspIHsKKwkJbWF4X2RhdGFfcmF0ZSA9
IGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9hY3RpdmVfcGxhbmVzLCBpKTsKKwkJLyoKKwkJICog
V2UgbmVlZCB0byBrbm93IHdoaWNoIHFndiBwb2ludCBnaXZlcyB1cworCQkgKiBtYXhpbXVtIGJh
bmR3aWR0aCBpbiBvcmRlciB0byBkaXNhYmxlIFNBR1YKKwkJICogaWYgd2UgZmluZCB0aGF0IHdl
IGV4Y2VlZCBTQUdWIGJsb2NrIHRpbWUKKwkJICogd2l0aCB3YXRlcm1hcmtzLiBCeSB0aGF0IG1v
bWVudCB3ZSBhbHJlYWR5CisJCSAqIGhhdmUgdGhvc2UsIGFzIGl0IGlzIGNhbGN1bGF0ZWQgZWFy
bGllciBpbgorCQkgKiBpbnRlbF9hdG9taWNfY2hlY2ssCisJCSAqLworCQlpZiAobWF4X2RhdGFf
cmF0ZSA+IG1heF9idykgeworCQkJbWF4X2J3X3BvaW50ID0gaTsKKwkJCW1heF9idyA9IG1heF9k
YXRhX3JhdGU7CisJCX0KKwkJaWYgKG1heF9kYXRhX3JhdGUgPj0gZGF0YV9yYXRlKQorCQkJYWxs
b3dlZF9wb2ludHMgfD0gMSA8PCBpOworCQlEUk1fREVCVUdfS01TKCJRR1YgcG9pbnQgJWQ6IG1h
eCBidyAlZCByZXF1aXJlZCAlZFxuIiwKKwkJCSAgICAgIGksIG1heF9kYXRhX3JhdGUsIGRhdGFf
cmF0ZSk7CisJfQorCisJLyoKKwkgKiBCU3BlYyBzdGF0ZXMgdGhhdCB3ZSBhbHdheXMgc2hvdWxk
IGhhdmUgYXQgbGVhc3Qgb25lIGFsbG93ZWQgcG9pbnQKKwkgKiBsZWZ0LCBzbyBpZiB3ZSBjb3Vs
ZG4ndCAtIHNpbXBseSByZWplY3QgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIG9idmlvdXMKKwkgKiBy
ZWFzb25zLgorCSAqLworCWlmIChhbGxvd2VkX3BvaW50cyA9PSAwKSB7CisJCURSTV9ERUJVR19L
TVMoIkNvdWxkIG5vdCBmaW5kIGFueSBzdWl0YWJsZSBRR1YgcG9pbnRzXG4iKTsKIAkJcmV0dXJu
IC1FSU5WQUw7CiAJfQogCisJLyoKKwkgKiBJbiBjYXNlIGlmIFNBR1YgaXMgZGlzYWJsZWQgaW4g
QklPUywgd2UgYWx3YXlzIGdldCAxCisJICogU0FHViBwb2ludCwgYnV0IHdlIGNhbid0IHNlbmQg
UENvZGUgY29tbWFuZHMgdG8gcmVzdHJpY3QgaXQKKwkgKiBhcyBpdCB3aWxsIGZhaWwgYW5kIHBv
aW50bGVzcyBhbnl3YXkuCisJICovCisJaWYgKHFpLm51bV9wb2ludHMgPT0gMSkKKwkJZGV2X3By
aXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX05PVF9DT05UUk9MTEVEOworCWVsc2UKKwkJZGV2
X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX0VOQUJMRUQ7CisKKwkvKgorCSAqIExlYXZl
IG9ubHkgc2luZ2xlIHBvaW50IHdpdGggaGlnaGVzdCBiYW5kd2lkdGgsIGlmCisJICogd2UgY2Fu
J3QgZW5hYmxlIFNBR1YgYWNjb3JkaW5nIHRvIEJTcGVjLgorCSAqLworCWlmICghaW50ZWxfY2Fu
X2VuYWJsZV9zYWd2KHN0YXRlKSkgeworCisJCS8qCisJCSAqIFRoaXMgaXMgYSBib3JkZXIgbGlu
ZSBjb25kaXRpb24gd2hlbiB3ZSBoYXZlIDAgcGxhbmVzCisJCSAqIGFuZCBTQUdWIG5vdCBlbmFi
bGVkIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIGtlZXAgUUdWIHdpdGgKKwkJICogaGlnaGVzdCBiYW5k
d2lkdGgsIGhvd2V2ZXIgYWxnb3JpdGhtIHJldHVybnMgd3JvbmcgcmVzdWx0CisJCSAqIGZvciAw
IHBsYW5lcyBhbmQgMCBkYXRhIHJhdGUsIHNvIGp1c3Qgc3RpY2sgdG8gbGFzdCBjb25maWcKKwkJ
ICogdGhlbi4gT3RoZXJ3aXNlIHVzZSB0aGUgUUdWIHBvaW50IHdpdGggaGlnaGVzdCBCVyBhY2Nv
cmRpbmcKKwkJICogdG8gQlNwZWMuCisJCSAqLworCQlpZiAoIWRhdGFfcmF0ZSAmJiAhbnVtX2Fj
dGl2ZV9wbGFuZXMpIHsKKwkJCURSTV9ERUJVR19LTVMoIk5vIFNBR1YsIHVzaW5nIG9sZCBRR1Yg
bWFza1xuIik7CisJCQlhbGxvd2VkX3BvaW50cyA9ICh+ZGV2X3ByaXYtPnFndl9wb2ludHNfbWFz
aykgJiBtYXNrOworCQl9IGVsc2UgeworCQkJYWxsb3dlZF9wb2ludHMgPSAxIDw8IG1heF9id19w
b2ludDsKKwkJCURSTV9ERUJVR19LTVMoIk5vIFNBR1YsIHVzaW5nIHNpbmdsZSBRR1YgcG9pbnQg
JWRcbiIsCisJCQkJICAgICAgbWF4X2J3X3BvaW50KTsKKwkJfQorCX0KKwkvKgorCSAqIFdlIHN0
b3JlIHRoZSBvbmVzIHdoaWNoIG5lZWQgdG8gYmUgbWFza2VkIGFzIHRoYXQgaXMgd2hhdCBQQ29k
ZQorCSAqIGFjdHVhbGx5IGFjY2VwdHMgYXMgYSBwYXJhbWV0ZXIuCisJICovCisJc3RhdGUtPnFn
dl9wb2ludHNfbWFzayA9ICh+YWxsb3dlZF9wb2ludHMpICYgbWFzazsKKworCURSTV9ERUJVR19L
TVMoIk5ldyBzdGF0ZSAlcCBxZ3YgbWFzayAleFxuIiwKKwkJICAgICAgc3RhdGUsIHN0YXRlLT5x
Z3ZfcG9pbnRzX21hc2spOworCisJLyoKKwkgKiBJZiB0aGUgYWN0dWFsIG1hc2sgaGFkIGNoYW5n
ZWQgd2UgbmVlZCB0byBtYWtlIHN1cmUgdGhhdAorCSAqIHRoZSBjb21taXRzIGFyZSBzZXJpYWxp
emVkKGluIGNhc2UgdGhpcyBpcyBhIG5vbW9kZXNldCwgbm9uYmxvY2tpbmcpCisJICovCisJaWYg
KHN0YXRlLT5xZ3ZfcG9pbnRzX21hc2sgIT0gZGV2X3ByaXYtPnFndl9wb2ludHNfbWFzaykgewor
CQlyZXQgPSBpbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZShzdGF0ZSk7CisJCWlm
IChyZXQpIHsKKwkJCURSTV9ERUJVR19LTVMoIkNvdWxkIG5vdCBzZXJpYWxpemUgZ2xvYmFsIHN0
YXRlXG4iKTsKKwkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKIAlyZXR1cm4gMDsKIH0KIApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCmluZGV4IDlkYjEwYWYwMTJmNC4uNjZi
ZjliYzEwYjczIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2J3LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oCkBAIC0y
OCw1ICsyOCw3IEBAIGludCBpbnRlbF9id19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdik7CiBpbnQgaW50ZWxfYndfYXRvbWljX2NoZWNrKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlKTsKIHZvaWQgaW50ZWxfYndfY3J0Y191cGRhdGUoc3RydWN0IGludGVsX2J3
X3N0YXRlICpid19zdGF0ZSwKIAkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpOworaW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2ludHNfbWFzayk7CiAKICNlbmRp
ZiAvKiBfX0lOVEVMX0JXX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXkuYwppbmRleCA3ZWExZTc1MThhYjYuLjcxZjZhYWExZjZiOSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE0NzQ0LDYgKzE0
NzQ0LDgwIEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jbGVhbnVwX3dvcmsoc3RydWN0IHdv
cmtfc3RydWN0ICp3b3JrKQogCWludGVsX2F0b21pY19oZWxwZXJfZnJlZV9zdGF0ZShpOTE1KTsK
IH0KIAorc3RhdGljIHZvaWQgaW50ZWxfcWd2X3BvaW50c19tYXNrKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFz
ZS5kZXY7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYp
OworCWludCByZXQ7CisJdTMyIG5ld19tYXNrID0gZGV2X3ByaXYtPnFndl9wb2ludHNfbWFzayB8
IHN0YXRlLT5xZ3ZfcG9pbnRzX21hc2s7CisJdW5zaWduZWQgaW50IG51bV9xZ3ZfcG9pbnRzID0g
ZGV2X3ByaXYtPm1heF9id1swXS5udW1fcWd2X3BvaW50czsKKwl1bnNpZ25lZCBpbnQgbWFzayA9
ICgxIDw8IG51bV9xZ3ZfcG9pbnRzKSAtIDE7CisKKwkvKgorCSAqIEFzIHdlIGRvbid0IGtub3cg
aW5pdGlhbCBoYXJkd2FyZSBzdGF0ZSBkdXJpbmcgaW5pdGlhbCBjb21taXQKKwkgKiB3ZSBzaG91
bGQgbm90IGRvIGFueXRoaW5nLCB1bnRpbCB3ZSBhY3R1YWxseSBmaWd1cmUgb3V0LAorCSAqIHdo
YXQgYXJlIHRoZSBxZ3YgcG9pbnRzIHRvIG1hc2suCisJICovCisJaWYgKCFuZXdfbWFzaykKKwkJ
cmV0dXJuOworCisJV0FSTl9PTihuZXdfbWFzayA9PSBtYXNrKTsKKworCS8qCisJICogSnVzdCBy
ZXR1cm4gaWYgd2UgY2FuJ3QgY29udHJvbCBTQUdWIG9yIGRvbid0IGhhdmUgaXQuCisJICovCisJ
aWYgKCFpbnRlbF9oYXNfc2FndihkZXZfcHJpdikpCisJCXJldHVybjsKKworCS8qCisJICogUmVz
dHJpY3QgcmVxdWlyZWQgcWd2IHBvaW50cyBiZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRp
b24uCisJICogQWNjb3JkaW5nIHRvIEJTcGVjIHdlIGNhbid0IG1hc2sgYW5kIHVubWFzayBxZ3Yg
cG9pbnRzIGF0IHRoZSBzYW1lCisJICogdGltZS4gQWxzbyBtYXNraW5nIHNob3VsZCBiZSBkb25l
IGJlZm9yZSB1cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbgorCSAqIGFuZCB1bm1hc2tpbmcgYWZ0
ZXJ3YXJkcy4KKwkgKi8KKwlyZXQgPSBpY2xfcGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhkZXZf
cHJpdiwgbmV3X21hc2spOworCWlmIChyZXQgPCAwKQorCQlEUk1fREVCVUdfS01TKCJDb3VsZCBu
b3QgcmVzdHJpY3QgcmVxdWlyZWQgcWd2IHBvaW50cyglZClcbiIsCisJCQkgICAgICByZXQpOwor
CWVsc2UKKwkJZGV2X3ByaXYtPnFndl9wb2ludHNfbWFzayA9IG5ld19tYXNrOworfQorCitzdGF0
aWMgdm9pZCBpbnRlbF9xZ3ZfcG9pbnRzX3VubWFzayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRl
ICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2Owor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlpbnQg
cmV0OworCXUzMiBuZXdfbWFzayA9IGRldl9wcml2LT5xZ3ZfcG9pbnRzX21hc2sgJiBzdGF0ZS0+
cWd2X3BvaW50c19tYXNrOworCisJLyoKKwkgKiBBcyB3ZSBkb24ndCBrbm93IGluaXRpYWwgaGFy
ZHdhcmUgc3RhdGUgZHVyaW5nIGluaXRpYWwgY29tbWl0CisJICogd2Ugc2hvdWxkIG5vdCBkbyBh
bnl0aGluZywgdW50aWwgd2UgYWN0dWFsbHkgZmlndXJlIG91dCwKKwkgKiB3aGF0IGFyZSB0aGUg
cWd2IHBvaW50cyB0byBtYXNrLgorCSAqLworCWlmICghbmV3X21hc2spCisJCXJldHVybjsKKwor
CS8qCisJICogSnVzdCByZXR1cm4gaWYgd2UgY2FuJ3QgY29udHJvbCBTQUdWIG9yIGRvbid0IGhh
dmUgaXQuCisJICovCisJaWYgKCFpbnRlbF9oYXNfc2FndihkZXZfcHJpdikpCisJCXJldHVybjsK
KworCS8qCisJICogQWxsb3cgcmVxdWlyZWQgcWd2IHBvaW50cyBhZnRlciB1cGRhdGluZyB0aGUg
Y29uZmlndXJhdGlvbi4KKwkgKiBBY2NvcmRpbmcgdG8gQlNwZWMgd2UgY2FuJ3QgbWFzayBhbmQg
dW5tYXNrIHFndiBwb2ludHMgYXQgdGhlIHNhbWUKKwkgKiB0aW1lLiBBbHNvIG1hc2tpbmcgc2hv
dWxkIGJlIGRvbmUgYmVmb3JlIHVwZGF0aW5nIHRoZSBjb25maWd1cmF0aW9uCisJICogYW5kIHVu
bWFza2luZyBhZnRlcndhcmRzLgorCSAqLworCXJldCA9IGljbF9wY29kZV9yZXN0cmljdF9xZ3Zf
cG9pbnRzKGRldl9wcml2LCBuZXdfbWFzayk7CisJaWYgKHJldCA8IDApCisJCURSTV9ERUJVR19L
TVMoIkNvdWxkIG5vdCByZXN0cmljdCByZXF1aXJlZCBxZ3YgcG9pbnRzKCVkKVxuIiwKKwkJCSAg
ICAgIHJldCk7CisJZWxzZQorCQlkZXZfcHJpdi0+cWd2X3BvaW50c19tYXNrID0gbmV3X21hc2s7
Cit9CisKIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUt
PmJhc2UuZGV2OwpAQCAtMTQ3NzEsNiArMTQ4NDUsOSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9hdG9t
aWNfY29tbWl0X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCX0KIAl9
CiAKKwlpZiAoKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpKQorCQlpbnRlbF9xZ3ZfcG9pbnRz
X21hc2soc3RhdGUpOworCiAJaW50ZWxfY29tbWl0X21vZGVzZXRfZGlzYWJsZXMoc3RhdGUpOwog
CiAJLyogRklYTUU6IEV2ZW50dWFsbHkgZ2V0IHJpZCBvZiBvdXIgY3J0Yy0+Y29uZmlnIHBvaW50
ZXIgKi8KQEAgLTE0Nzg5LDggKzE0ODY2LDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2Nv
bW1pdF90YWlsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQkgKiBTS0wgd29y
a2Fyb3VuZDogYnNwZWMgcmVjb21tZW5kcyB3ZSBkaXNhYmxlIHRoZSBTQUdWIHdoZW4gd2UKIAkJ
ICogaGF2ZSBtb3JlIHRoZW4gb25lIHBpcGUgZW5hYmxlZAogCQkgKi8KLQkJaWYgKCFpbnRlbF9j
YW5fZW5hYmxlX3NhZ3Yoc3RhdGUpKQotCQkJaW50ZWxfZGlzYWJsZV9zYWd2KGRldl9wcml2KTsK
KwkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkKKwkJCWlmICghaW50ZWxfY2FuX2VuYWJs
ZV9zYWd2KHN0YXRlKSkKKwkJCQlpbnRlbF9kaXNhYmxlX3NhZ3YoZGV2X3ByaXYpOwogCiAJCWlu
dGVsX21vZGVzZXRfdmVyaWZ5X2Rpc2FibGVkKGRldl9wcml2LCBzdGF0ZSk7CiAJfQpAQCAtMTQ4
NzMsOCArMTQ5NTEsMTEgQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2NvbW1pdF90YWlsKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCWlmIChzdGF0ZS0+bW9kZXNldCkKIAkJ
aW50ZWxfdmVyaWZ5X3BsYW5lcyhzdGF0ZSk7CiAKLQlpZiAoc3RhdGUtPm1vZGVzZXQgJiYgaW50
ZWxfY2FuX2VuYWJsZV9zYWd2KHN0YXRlKSkKLQkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3ByaXYp
OworCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEpIHsKKwkJaWYgKHN0YXRlLT5tb2Rlc2V0
ICYmIGludGVsX2Nhbl9lbmFibGVfc2FndihzdGF0ZSkpCisJCQlpbnRlbF9lbmFibGVfc2Fndihk
ZXZfcHJpdik7CisJfSBlbHNlCisJCWludGVsX3Fndl9wb2ludHNfdW5tYXNrKHN0YXRlKTsKIAog
CWRybV9hdG9taWNfaGVscGVyX2NvbW1pdF9od19kb25lKCZzdGF0ZS0+YmFzZSk7CiAKQEAgLTE0
OTYyLDcgKzE1MDQzLDE4IEBAIHN0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NvbW1pdChzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LAogewogCXN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlID0g
dG9faW50ZWxfYXRvbWljX3N0YXRlKF9zdGF0ZSk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShkZXYpOwotCWludCByZXQgPSAwOworCXN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwgKm9sZF9jcnRjX3N0YXRlOworCWludCByZXQgPSAw
LCBpOworCWJvb2wgYW55X21zID0gZmFsc2U7CisJc3RydWN0IGludGVsX2NydGMgKmNydGM7CisK
Kwlmb3JfZWFjaF9vbGRuZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0Yywgb2xkX2Ny
dGNfc3RhdGUsCisJCQkJCSAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCQlpZiAobmVlZHNfbW9k
ZXNldChuZXdfY3J0Y19zdGF0ZSkpIHsKKwkJCWFueV9tcyA9IHRydWU7CisJCQlicmVhazsKKwkJ
fQorCX0KIAogCXN0YXRlLT53YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXQoJmRldl9wcml2
LT5ydW50aW1lX3BtKTsKIApAQCAtMTUwMjEsNyArMTUxMTMsNyBAQCBzdGF0aWMgaW50IGludGVs
X2F0b21pY19jb21taXQoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAlpbnRlbF9zaGFyZWRfZHBs
bF9zd2FwX3N0YXRlKHN0YXRlKTsKIAlpbnRlbF9hdG9taWNfdHJhY2tfZmJzKHN0YXRlKTsKIAot
CWlmIChzdGF0ZS0+Z2xvYmFsX3N0YXRlX2NoYW5nZWQpIHsKKwlpZiAoc3RhdGUtPmdsb2JhbF9z
dGF0ZV9jaGFuZ2VkICYmIGFueV9tcykgewogCQlhc3NlcnRfZ2xvYmFsX3N0YXRlX2xvY2tlZChk
ZXZfcHJpdik7CiAKIAkJbWVtY3B5KGRldl9wcml2LT5taW5fY2RjbGssIHN0YXRlLT5taW5fY2Rj
bGssCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90
eXBlcy5oCmluZGV4IGZiMjc0NTM4YWYyMy4uODk2YjEzYmM0NDk0IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtNTI4LDYg
KzUyOCw5IEBAIHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgewogCXN0cnVjdCBpOTE1X3N3X2Zl
bmNlIGNvbW1pdF9yZWFkeTsKIAogCXN0cnVjdCBsbGlzdF9ub2RlIGZyZWVkOworCisJLyogR2Vu
MTErIG9ubHkgKi8KKwl1MzIgcWd2X3BvaW50c19tYXNrOwogfTsKIAogc3RydWN0IGludGVsX3Bs
YW5lX3N0YXRlIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2Lmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDRmNGUyZTgzOTUxMy4uOTky
NDM5MGNiOTRiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTEyNDMsMTEgKzEyNDMsMTMg
QEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgewogCX0gZHJhbV9pbmZvOwogCiAJc3RydWN0IGlu
dGVsX2J3X2luZm8gewotCQl1bnNpZ25lZCBpbnQgZGVyYXRlZGJ3WzNdOyAvKiBmb3IgZWFjaCBR
R1YgcG9pbnQgKi8KKwkJdW5zaWduZWQgaW50IGRlcmF0ZWRid1tOVU1fU0FHVl9QT0lOVFNdOyAv
KiBmb3IgZWFjaCBRR1YgcG9pbnQgKi8KIAkJdTggbnVtX3Fndl9wb2ludHM7CiAJCXU4IG51bV9w
bGFuZXM7CiAJfSBtYXhfYndbNl07CiAKKwl1MzIgcWd2X3BvaW50c19tYXNrOworCiAJc3RydWN0
IGRybV9wcml2YXRlX29iaiBid19vYmo7CiAKIAlzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSBydW50
aW1lX3BtOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKaW5kZXggYTYwN2VhNTIwODI5Li42ZDZlY2Yx
ZDlmNmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaApAQCAtODk1MSw2ICs4OTUxLDkgQEAgZW51
bSB7CiAjZGVmaW5lIFZMVl9SRU5ERVJfQzBfQ09VTlQJCQlfTU1JTygweDEzODExOCkKICNkZWZp
bmUgVkxWX01FRElBX0MwX0NPVU5UCQkJX01NSU8oMHgxMzgxMUMpCiAKKy8qIEJTcGVjIHByZWNp
c2VseSBkZWZpbmVzIHRoaXMgKi8KKyNkZWZpbmUgTlVNX1NBR1ZfUE9JTlRTIDgKKwogI2RlZmlu
ZSBHRU42X1BDT0RFX01BSUxCT1gJCQlfTU1JTygweDEzODEyNCkKICNkZWZpbmUgICBHRU42X1BD
T0RFX1JFQURZCQkJKDEgPDwgMzEpCiAjZGVmaW5lICAgR0VONl9QQ09ERV9FUlJPUl9NQVNLCQkJ
MHhGRgpAQCAtODk2MSw2ICs4OTY0LDggQEAgZW51bSB7CiAjZGVmaW5lICAgICBHRU42X1BDT0RF
X1VOSU1QTEVNRU5URURfQ01ECTB4RkYKICNkZWZpbmUgICAgIEdFTjdfUENPREVfVElNRU9VVAkJ
CTB4MgogI2RlZmluZSAgICAgR0VON19QQ09ERV9JTExFR0FMX0RBVEEJCTB4MworI2RlZmluZSAg
ICAgR0VOMTFfUENPREVfTUFJTF9CT1hfTE9DS0VECQkweDYKKyNkZWZpbmUgICAgIEdFTjExX1BD
T0RFX1JFSkVDVEVECQkweDExCiAjZGVmaW5lICAgICBHRU43X1BDT0RFX01JTl9GUkVRX1RBQkxF
X0dUX1JBVElPX09VVF9PRl9SQU5HRSAweDEwCiAjZGVmaW5lICAgR0VONl9QQ09ERV9XUklURV9S
QzZWSURTCQkweDQKICNkZWZpbmUgICBHRU42X1BDT0RFX1JFQURfUkM2VklEUwkJMHg1CkBAIC04
OTgyLDYgKzg5ODcsNyBAQCBlbnVtIHsKICNkZWZpbmUgICBJQ0xfUENPREVfTUVNX1NVQlNZU1lT
VEVNX0lORk8JMHhkCiAjZGVmaW5lICAgICBJQ0xfUENPREVfTUVNX1NTX1JFQURfR0xPQkFMX0lO
Rk8JKDB4MCA8PCA4KQogI2RlZmluZSAgICAgSUNMX1BDT0RFX01FTV9TU19SRUFEX1FHVl9QT0lO
VF9JTkZPKHBvaW50KQkoKChwb2ludCkgPDwgMTYpIHwgKDB4MSA8PCA4KSkKKyNkZWZpbmUgICBJ
Q0xfUENPREVfU0FHVl9ERV9NRU1fU1NfQ09ORklHCTB4ZQogI2RlZmluZSAgIEdFTjZfUENPREVf
UkVBRF9EX0NPTVAJCTB4MTAKICNkZWZpbmUgICBHRU42X1BDT0RFX1dSSVRFX0RfQ09NUAkJMHgx
MQogI2RlZmluZSAgIEhTV19QQ09ERV9ERV9XUklURV9GUkVRX1JFUQkJMHgxNwpAQCAtODk5NCw2
ICs5MDAwLDggQEAgZW51bSB7CiAjZGVmaW5lICAgICBHRU45X1NBR1ZfSVNfRElTQUJMRUQJCTB4
MQogI2RlZmluZSAgICAgR0VOOV9TQUdWX0VOQUJMRQkJCTB4MwogI2RlZmluZSBHRU4xMl9QQ09E
RV9SRUFEX1NBR1ZfQkxPQ0tfVElNRV9VUwkweDIzCisjZGVmaW5lIEdFTjExX1BDT0RFX1BPSU5U
U19SRVNUUklDVEVECQkweDAKKyNkZWZpbmUgR0VOMTFfUENPREVfUE9JTlRTX1JFU1RSSUNURURf
TUFTSwkweDEKICNkZWZpbmUgR0VONl9QQ09ERV9EQVRBCQkJCV9NTUlPKDB4MTM4MTI4KQogI2Rl
ZmluZSAgIEdFTjZfUENPREVfRlJFUV9JQV9SQVRJT19TSElGVAk4CiAjZGVmaW5lICAgR0VONl9Q
Q09ERV9GUkVRX1JJTkdfUkFUSU9fU0hJRlQJMTYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmluZGV4
IGM3OTJkZDE2ODc0Mi4uMTA4MTZmM2UyOWYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKQEAg
LTM2MTcsMTMgKzM2MTcsOSBAQCBzdGF0aWMgYm9vbCBza2xfbmVlZHNfbWVtb3J5X2J3X3dhKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlyZXR1cm4gSVNfR0VOOV9CQyhkZXZf
cHJpdikgfHwgSVNfQlJPWFRPTihkZXZfcHJpdik7CiB9CiAKLXN0YXRpYyBib29sCitib29sCiBp
bnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JLyog
SEFDSyEgKi8KLQlpZiAoSVNfR0VOKGRldl9wcml2LCAxMikpCi0JCXJldHVybiBmYWxzZTsKLQog
CXJldHVybiAoSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MCkgJiYKIAkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzICE9IEk5MTVfU0FHVl9OT1RfQ09OVFJPTExF
RDsKIH0KQEAgLTM4MzksNyArMzgzNSw3IEBAIHN0YXRpYyB2b2lkIGljbF9zZXRfc2Fndl9tYXNr
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQlpZiAoZmxhZ3MgJiBEUk1fTU9E
RV9GTEFHX0lOVEVSTEFDRSkKIAkJCWNvbnRpbnVlOwogCi0JCWlmICghbmV3X2NydGNfc3RhdGUt
PmJhc2UuYWN0aXZlKQorCQlpZiAoIW5ld19jcnRjX3N0YXRlLT5ody5lbmFibGUpCiAJCQljb250
aW51ZTsKIAogCQljYW5fc2FndiA9IHRydWU7CkBAIC0zODg2LDYgKzM4ODIsOSBAQCBib29sIGlu
dGVsX2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAll
bHNlCiAJCXNrbF9zZXRfc2Fndl9tYXNrKHN0YXRlKTsKIAorCURSTV9ERUJVR19LTVMoIkNydGMg
c2FndiBtYXNrcywgc3RhdGUgJXggZ2xvYmFsIHN0YXRlICV4XG4iLAorCQkgICAgICBzdGF0ZS0+
Y3J0Y19zYWd2X21hc2ssCisJCSAgICAgIGRldl9wcml2LT5jcnRjX3NhZ3ZfbWFzayk7CiAJLyoK
IAkgKiBGb3IgU0FHViB3ZSBuZWVkIHRvIGFjY291bnQgYWxsIHRoZSBwaXBlcywKIAkgKiBub3Qg
b25seSB0aGUgb25lcyB3aGljaCBhcmUgaW4gc3RhdGUgY3VycmVudGx5LgpAQCAtNDM0MCw3ICs0
MzM5LDcgQEAgc3RhdGljIGludAogdGdsX2NoZWNrX3BpcGVfZml0c19zYWd2X3dtKHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkgICAgICBzdHJ1Y3Qgc2tsX2RkYl9hbGxv
Y2F0aW9uICpkZGIgLyogb3V0ICovKQogewotCXN0cnVjdCBkcm1fY3J0YyAqY3J0YyA9IGNydGNf
c3RhdGUtPmJhc2UuY3J0YzsKKwlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBjcnRjX3N0YXRlLT51
YXBpLmNydGM7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShj
cnRjLT5kZXYpOwogCXN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0
YyhjcnRjKTsKIAlzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSAqYWxsb2MgPSAmY3J0Y19zdGF0ZS0+d20u
c2tsLmRkYjsKQEAgLTQ4MzMsNyArNDgzMiw2IEBAIHN0YXRpYyB2b2lkIHNrbF9jb21wdXRlX3Bs
YW5lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCSBz
dHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1bHQgLyogb3V0ICovKQogewogCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYp
OwotCXUzMiBsYXRlbmN5ID0gZGV2X3ByaXYtPndtLnNrbF9sYXRlbmN5W2xldmVsXTsKIAl1aW50
X2ZpeGVkXzE2XzE2X3QgbWV0aG9kMSwgbWV0aG9kMjsKIAl1aW50X2ZpeGVkXzE2XzE2X3Qgc2Vs
ZWN0ZWRfcmVzdWx0OwogCXUzMiByZXNfYmxvY2tzLCByZXNfbGluZXMsIG1pbl9kZGJfYWxsb2Mg
PSAwOwpAQCAtNTcwNyw2ICs1NzA1LDcgQEAgc3RhdGljIHZvaWQgdGdsX3NldF9zYWd2X21hc2so
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCXJldCA9IHRnbF9jaGVja19waXBl
X2ZpdHNfc2Fndl93bShuZXdfY3J0Y19zdGF0ZSwgZGRiKTsKIAkJaWYgKCFyZXQpIHsKIAkJCWlu
dCBwaXBlX2JpdCA9IEJJVChjcnRjLT5waXBlKTsKKwogCQkJc3RhdGUtPmNydGNfc2Fndl9tYXNr
IHw9IHBpcGVfYml0OwogCQl9CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmgKaW5kZXggYjU3OWM3
MjRiOTE1Li41MzI3NTg2MDczMWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3BtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaApAQCAtNDMsNiAr
NDMsNyBAQCB2b2lkIHNrbF9waXBlX3dtX2dldF9od19zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YywKIHZvaWQgZzR4X3dtX3Nhbml0aXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdik7CiB2b2lkIHZsdl93bV9zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpOwogYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUpOworYm9vbCBpbnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpOwogaW50IGludGVsX2VuYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdik7CiBpbnQgaW50ZWxfZGlzYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdik7CiBib29sIHNrbF93bV9sZXZlbF9lcXVhbHMoY29uc3Qgc3RydWN0
IHNrbF93bV9sZXZlbCAqbDEsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF9zaWRlYmFuZC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuYwppbmRl
eCBlMDZiMzViODQ0YTAuLmZmOWRiZWQwOTRkOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfc2lkZWJhbmQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9z
aWRlYmFuZC5jCkBAIC0zNzEsNiArMzcxLDI5IEBAIHN0YXRpYyBpbmxpbmUgaW50IGdlbjdfY2hl
Y2tfbWFpbGJveF9zdGF0dXModTMyIG1ib3gpCiAJfQogfQogCitzdGF0aWMgaW5saW5lIGludCBn
ZW4xMV9jaGVja19tYWlsYm94X3N0YXR1cyh1MzIgbWJveCkKK3sKKwlzd2l0Y2ggKG1ib3ggJiBH
RU42X1BDT0RFX0VSUk9SX01BU0spIHsKKwljYXNlIEdFTjZfUENPREVfU1VDQ0VTUzoKKwkJcmV0
dXJuIDA7CisJY2FzZSBHRU42X1BDT0RFX0lMTEVHQUxfQ01EOgorCQlyZXR1cm4gLUVOWElPOwor
CWNhc2UgR0VON19QQ09ERV9USU1FT1VUOgorCQlyZXR1cm4gLUVUSU1FRE9VVDsKKwljYXNlIEdF
TjdfUENPREVfSUxMRUdBTF9EQVRBOgorCQlyZXR1cm4gLUVJTlZBTDsKKwljYXNlIEdFTjdfUENP
REVfTUlOX0ZSRVFfVEFCTEVfR1RfUkFUSU9fT1VUX09GX1JBTkdFOgorCQlyZXR1cm4gLUVPVkVS
RkxPVzsKKwljYXNlIEdFTjExX1BDT0RFX01BSUxfQk9YX0xPQ0tFRDoKKwkJcmV0dXJuIC1FQUdB
SU47CisJY2FzZSBHRU4xMV9QQ09ERV9SRUpFQ1RFRDoKKwkJcmV0dXJuIC1FQUNDRVM7CisJZGVm
YXVsdDoKKwkJTUlTU0lOR19DQVNFKG1ib3ggJiBHRU42X1BDT0RFX0VSUk9SX01BU0spOworCQly
ZXR1cm4gMDsKKwl9Cit9CisKIHN0YXRpYyBpbnQgX19zYW5keWJyaWRnZV9wY29kZV9ydyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkJCQkgIHUzMiBtYm94LCB1MzIgKnZhbCwgdTMy
ICp2YWwxLAogCQkJCSAgaW50IGZhc3RfdGltZW91dF91cywKQEAgLTQwOCw3ICs0MzEsOSBAQCBz
dGF0aWMgaW50IF9fc2FuZHlicmlkZ2VfcGNvZGVfcncoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUsCiAJaWYgKGlzX3JlYWQgJiYgdmFsMSkKIAkJKnZhbDEgPSBpbnRlbF91bmNvcmVfcmVh
ZF9mdyh1bmNvcmUsIEdFTjZfUENPREVfREFUQTEpOwogCi0JaWYgKElOVEVMX0dFTihpOTE1KSA+
IDYpCisJaWYgKElOVEVMX0dFTihpOTE1KSA+PSAxMSkKKwkJcmV0dXJuIGdlbjExX2NoZWNrX21h
aWxib3hfc3RhdHVzKG1ib3gpOworCWVsc2UgaWYgKElOVEVMX0dFTihpOTE1KSA+IDYpCiAJCXJl
dHVybiBnZW43X2NoZWNrX21haWxib3hfc3RhdHVzKG1ib3gpOwogCWVsc2UKIAkJcmV0dXJuIGdl
bjZfY2hlY2tfbWFpbGJveF9zdGF0dXMobWJveCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF9zaWRlYmFuZC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfc2lk
ZWJhbmQuaAppbmRleCA3ZmI5NTc0NWE0NDQuLjE0NjI3YWNlOTlhZSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfc2lkZWJhbmQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9zaWRlYmFuZC5oCkBAIC0xMzcsNSArMTM3LDQgQEAgaW50IHNhbmR5YnJpZGdl
X3Bjb2RlX3dyaXRlX3RpbWVvdXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIHUzMiBt
Ym94LAogCiBpbnQgc2tsX3Bjb2RlX3JlcXVlc3Qoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsIHUzMiBtYm94LCB1MzIgcmVxdWVzdCwKIAkJICAgICAgdTMyIHJlcGx5X21hc2ssIHUzMiBy
ZXBseSwgaW50IHRpbWVvdXRfYmFzZV9tcyk7Ci0KICNlbmRpZiAvKiBfSU5URUxfU0lERUJBTkRf
SCAqLwotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZng=

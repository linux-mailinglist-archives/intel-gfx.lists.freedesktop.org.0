Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id AF70AC872E
	for <lists+intel-gfx@lfdr.de>; Wed,  2 Oct 2019 13:22:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B1E756E956;
	Wed,  2 Oct 2019 11:22:09 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CE2586E93C
 for <intel-gfx@lists.freedesktop.org>; Wed,  2 Oct 2019 11:22:03 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18692032-1500050 
 for multiple; Wed, 02 Oct 2019 12:20:09 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  2 Oct 2019 12:19:47 +0100
Message-Id: <20191002112000.12280-17-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191002112000.12280-1-chris@chris-wilson.co.uk>
References: <20191002112000.12280-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 17/30] drm/i915/execlists: Force preemption
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SWYgdGhlIHByZWVtcHRlZCBjb250ZXh0IHRha2VzIHRvbyBsb25nIHRvIHJlbGlucXVpc2ggY29u
dHJvbCwgZS5nLiBpdAppcyBzdHVjayBpbnNpZGUgYSBzaGFkZXIgd2l0aCBhcmJpdHJhdGlvbiBk
aXNhYmxlZCwgZXZpY3QgdGhhdCBjb250ZXh0CndpdGggYW4gZW5naW5lIHJlc2V0LiBUaGlzIGVu
c3VyZXMgdGhhdCBwcmVlbXB0aW9ucyBhcmUgcmVhc29uYWJseQpyZXNwb25zaXZlLCBwcm92aWRp
bmcgYSB0aWdodGVyIFFvUyBmb3IgdGhlIG1vcmUgaW1wb3J0YW50IGNvbnRleHQgYXQKdGhlIGNv
c3Qgb2YgZmxhZ2dpbmcgdW5yZXNwb25zaXZlIGNvbnRleHRzIG1vcmUgZnJlcXVlbnRseSAoaS5l
LiBpbnN0ZWFkCm9mIHVzaW5nIGFuIH4xMHMgaGFuZ2NoZWNrLCB3ZSBub3cgZXZpY3QgYXQgfjEw
MG1zKS4gIFRoZSBjaGFsbGVuZ2Ugb2YKbGllcyBpbiBwaWNraW5nIGEgdGltZW91dCB0aGF0IGNh
biBiZSByZWFzb25hYmx5IHNlcnZpY2VkIGJ5IEhXIGZvcgp0eXBpY2FsIHdvcmtsb2FkcywgYmFs
YW5jaW5nIHRoZSBleGlzdGluZyBjbGllbnRzIGFnYWluc3QgdGhlIG5lZWRzIGZvcgpyZXNwb25z
aXZlbmVzcy4KCk5vdGUgdGhhdCBjb3VwbGVkIHdpdGggdGltZXNsaWNpbmcsIHRoaXMgd2lsbCBs
ZWFkIHRvIHJhcGlkIEdQVSAiaGFuZyIKZGV0ZWN0aW9uIHdpdGggbXVsdGlwbGUgYWN0aXZlIGNv
bnRleHRzIHZ5aW5nIGZvciBHUFUgdGltZS4KClRoZSBwcmVlbXB0IHRpbWVvdXQgY2FuIGJlIGFk
anVzdGVkIHBlci1lbmdpbmUgdXNpbmcsCgoJL3N5cy9jbGFzcy9kcm0vY2FyZDAvZW5naW5lLyov
cHJlZW1wdF90aW1lb3V0X21zCgp2MjogQ291cGxlIGluIHN5c2ZzIGNvbnRyb2wgb2YgcHJlZW1w
dGlvbiB0aW1lb3V0CgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdp
bHNvbi5jby51az4KQ2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwu
Y29tPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KUmV2aWV3
ZWQtYnk6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29tPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcucHJvZmlsZSAgICAgICAgIHwgMTUgKysrKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgICAgfCAgMiArCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYyB8IDMyICsrKysrKysKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIHwgIDkgKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgIHwgOTAgKysrKysrKysrKysr
KysrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmggICAgICAgICAgIHwg
IDIgKy0KIDYgZmlsZXMgY2hhbmdlZCwgMTQxIGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlCmluZGV4IDQ4ZGY4ODg5YTg4YS4uM2Ri
NGNhNTQ5MmE5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9LY29uZmlnLnByb2Zp
bGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvS2NvbmZpZy5wcm9maWxlCkBAIC0yNSwzICsy
NSwxOCBAQCBjb25maWcgRFJNX0k5MTVfU1BJTl9SRVFVRVNUCiAJICBNYXkgYmUgMCB0byBkaXNh
YmxlIHRoZSBpbml0aWFsIHNwaW4uIEluIHByYWN0aWNlLCB3ZSBlc3RpbWF0ZQogCSAgdGhlIGNv
c3Qgb2YgZW5hYmxpbmcgdGhlIGludGVycnVwdCAoaWYgY3VycmVudGx5IGRpc2FibGVkKSB0byBi
ZQogCSAgYSBmZXcgbWljcm9zZWNvbmRzLgorCitjb25maWcgRFJNX0k5MTVfUFJFRU1QVF9USU1F
T1VUCisJaW50ICJQcmVlbXB0IHRpbWVvdXQgKG1zKSIKKwlkZWZhdWx0IDEwMCAjIG1pbGxpc2Vj
b25kcworCWhlbHAKKwkgIEhvdyBsb25nIHRvIHdhaXQgKGluIG1pbGxpc2Vjb25kcykgZm9yIGEg
cHJlZW1wdGlvbiBldmVudCB0byBvY2N1cgorCSAgd2hlbiBzdWJtaXR0aW5nIGEgbmV3IGNvbnRl
eHQgdmlhIGV4ZWNsaXN0cy4gSWYgdGhlIGN1cnJlbnQgY29udGV4dAorCSAgZG9lcyBub3QgaGl0
IGFuIGFyYml0cmF0aW9uIHBvaW50IGFuZCB5aWVsZCB0byBIVyBiZWZvcmUgdGhlIHRpbWVyCisJ
ICBleHBpcmVzLCB0aGUgSFcgd2lsbCBiZSByZXNldCB0byBhbGxvdyB0aGUgbW9yZSBpbXBvcnRh
bnQgY29udGV4dAorCSAgdG8gZXhlY3V0ZS4KKworCSAgVGhpcyBpcyBhZGp1c3RhYmxlIHZpYQor
CSAgL3N5cy9jbGFzcy9kcm0vY2FyZDAvZW5naW5lLyovcHJlZW1wdF90aW1lb3V0X21zCisKKwkg
IE1heSBiZSAwIHRvIGRpc2FibGUgdGhlIHRpbWVvdXQuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IDgwZmQwNzJhYzcxOS4uZGZkZmZhZjM1Njc4IDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtMzA0LDYgKzMwNCw4
IEBAIHN0YXRpYyBpbnQgaW50ZWxfZW5naW5lX3NldHVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGVu
dW0gaW50ZWxfZW5naW5lX2lkIGlkKQogCWVuZ2luZS0+aW5zdGFuY2UgPSBpbmZvLT5pbnN0YW5j
ZTsKIAlfX3NwcmludF9lbmdpbmVfbmFtZShlbmdpbmUpOwogCisJZW5naW5lLT5wcm9wcy5wcmVl
bXB0X3RpbWVvdXQgPSBDT05GSUdfRFJNX0k5MTVfUFJFRU1QVF9USU1FT1VUOworCiAJLyoKIAkg
KiBUbyBiZSBvdmVycmlkZGVuIGJ5IHRoZSBiYWNrZW5kIG9uIHNldHVwLiBIb3dldmVyIHRvIGZh
Y2lsaXRhdGUKIAkgKiBjbGVhbnVwIG9uIGVycm9yIGR1cmluZyBzZXR1cCwgd2UgYWx3YXlzIHBy
b3ZpZGUgdGhlIGRlc3Ryb3kgdmZ1bmMuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9zeXNmcy5jCmluZGV4IGNiZTllYzU5YmVlYi4uYWFjMjYwOTdjOTE2IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYwpAQCAtNDUsMTAgKzQ1
LDM3IEBAIG1taW9fc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGtvYmpfYXR0cmli
dXRlICphdHRyLCBjaGFyICpidWYpCiAJcmV0dXJuIHNwcmludGYoYnVmLCAiMHgleFxuIiwga29i
al90b19lbmdpbmUoa29iaiktPm1taW9fYmFzZSk7CiB9CiAKK3N0YXRpYyBzc2l6ZV90CitwcmVl
bXB0X3RpbWVvdXRfc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGtvYmpfYXR0cmli
dXRlICphdHRyLAorCQkgICAgIGNoYXIgKmJ1ZikKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUgPSBrb2JqX3RvX2VuZ2luZShrb2JqKTsKKworCXJldHVybiBzcHJpbnRmKGJ1Ziwg
IiVsdVxuIiwgZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXQpOworfQorCitzdGF0aWMgc3Np
emVfdAorcHJlZW1wdF90aW1lb3V0X3N0b3JlKHN0cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3Qg
a29ial9hdHRyaWJ1dGUgKmF0dHIsCisJCSAgICAgIGNvbnN0IGNoYXIgKmJ1Ziwgc2l6ZV90IGNv
dW50KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGtvYmpfdG9fZW5naW5l
KGtvYmopOworCXVuc2lnbmVkIGxvbmcgdGltZW91dDsKKwlpbnQgZXJyOworCisJZXJyID0ga3N0
cnRvdWwoYnVmLCAwLCAmdGltZW91dCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVu
Z2luZS0+cHJvcHMucHJlZW1wdF90aW1lb3V0ID0gdGltZW91dDsKKwlyZXR1cm4gY291bnQ7Cit9
CisKIHN0YXRpYyBzdHJ1Y3Qga29ial9hdHRyaWJ1dGUgbmFtZV9hdHRyID0gX19BVFRSKG5hbWUs
IDA0NDQsIG5hbWVfc2hvdywgTlVMTCk7CiBzdGF0aWMgc3RydWN0IGtvYmpfYXR0cmlidXRlIGNs
YXNzX2F0dHIgPSBfX0FUVFIoY2xhc3MsIDA0NDQsIGNsYXNzX3Nob3csIE5VTEwpOwogc3RhdGlj
IHN0cnVjdCBrb2JqX2F0dHJpYnV0ZSBpbnN0X2F0dHIgPSBfX0FUVFIoaW5zdGFuY2UsIDA0NDQs
IGluc3Rfc2hvdywgTlVMTCk7CiBzdGF0aWMgc3RydWN0IGtvYmpfYXR0cmlidXRlIG1taW9fYXR0
ciA9IF9fQVRUUihtbWlvX2Jhc2UsIDA0NDQsIG1taW9fc2hvdywgTlVMTCk7CitzdGF0aWMgc3Ry
dWN0IGtvYmpfYXR0cmlidXRlIHByZWVtcHRfdGltZW91dF9hdHRyID0KK19fQVRUUihwcmVlbXB0
X3RpbWVvdXRfbXMsIDA2MDAsIHByZWVtcHRfdGltZW91dF9zaG93LCBwcmVlbXB0X3RpbWVvdXRf
c3RvcmUpOwogCiBzdGF0aWMgdm9pZCBrb2JqX2VuZ2luZV9yZWxlYXNlKHN0cnVjdCBrb2JqZWN0
ICprb2JqKQogewpAQCAtMTA5LDYgKzEzNiwxMSBAQCB2b2lkIGludGVsX2VuZ2luZXNfYWRkX3N5
c2ZzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCQlpZiAoc3lzZnNfY3JlYXRlX2Zp
bGVzKGtvYmosIGZpbGVzKSkKIAkJCWdvdG8gZXJyX2VuZ2luZTsKIAorCQlpZiAoQ09ORklHX0RS
TV9JOTE1X1BSRUVNUFRfVElNRU9VVCAmJgorCQkgICAgaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0
aW9uKGVuZ2luZSkgJiYKKwkJICAgIHN5c2ZzX2NyZWF0ZV9maWxlKGtvYmosICZwcmVlbXB0X3Rp
bWVvdXRfYXR0ci5hdHRyKSkKKwkJCWdvdG8gZXJyX2VuZ2luZTsKKwogCQlpZiAoMCkgewogZXJy
X2VuZ2luZToKIAkJCWRldl9lcnIoa2RldiwgIkZhaWxlZCB0byBhZGQgc3lzZnMgZW5naW5lICcl
cydcbiIsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVf
dHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmlu
ZGV4IDk0M2YwNjYzODM3ZS4uNjFkMjcxNjY4OTQ4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMTczLDYgKzE3MywxMSBAQCBzdHJ1Y3QgaW50
ZWxfZW5naW5lX2V4ZWNsaXN0cyB7CiAJICovCiAJc3RydWN0IHRpbWVyX2xpc3QgdGltZXI7CiAK
KwkvKioKKwkgKiBAcHJlZW1wdDogcmVzZXQgdGhlIGN1cnJlbnQgY29udGV4dCBpZiBpdCBmYWls
cyB0byBnaXZlIHdheQorCSAqLworCXN0cnVjdCB0aW1lcl9saXN0IHByZWVtcHQ7CisKIAkvKioK
IAkgKiBAZGVmYXVsdF9wcmlvbGlzdDogcHJpb3JpdHkgbGlzdCBmb3IgSTkxNV9QUklPUklUWV9O
T1JNQUwKIAkgKi8KQEAgLTUzOSw2ICs1NDQsMTAgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAJCSAqLwogCQlrdGltZV90IHRvdGFsOwogCX0gc3RhdHM7CisKKwlzdHJ1Y3QgeworCQl1bnNp
Z25lZCBsb25nIHByZWVtcHRfdGltZW91dDsKKwl9IHByb3BzOwogfTsKIAogc3RhdGljIGlubGlu
ZSBib29sCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IDQzMWQzYjhjMzM3MS4u
Nzc0MWQ3ODEzOWFiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9s
cmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMTM5NCw2
ICsxMzk0LDI5IEBAIHN0YXRpYyB2b2lkIHJlY29yZF9wcmVlbXB0aW9uKHN0cnVjdCBpbnRlbF9l
bmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiAJKHZvaWQpSTkxNV9TRUxGVEVTVF9PTkxZKGV4
ZWNsaXN0cy0+cHJlZW1wdF9oYW5nLmNvdW50KyspOwogfQogCitzdGF0aWMgdm9pZCBzZXRfcHJl
ZW1wdF90aW1lb3V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwl1bnNpZ25l
ZCBsb25nIHRpbWVvdXQ7CisKKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQp
CisJCXJldHVybjsKKworCXRpbWVvdXQgPSBSRUFEX09OQ0UoZW5naW5lLT5wcm9wcy5wcmVlbXB0
X3RpbWVvdXQpOworCWlmICghdGltZW91dCkKKwkJcmV0dXJuOworCisJdGltZW91dCA9IG1zZWNz
X3RvX2ppZmZpZXNfdGltZW91dCh0aW1lb3V0KTsKKwkvKgorCSAqIFBhcmFub2lhIHRvIG1ha2Ug
c3VyZSB0aGUgY29tcGlsZXIgY29tcHV0ZXMgdGhlIHRpbWVvdXQgYmVmb3JlCisJICogbG9hZGlu
ZyAnamlmZmllcycgYXMgamlmZmllcyBpcyB2b2xhdGlsZSBhbmQgbWF5IGJlIHVwZGF0ZWQgaW4K
KwkgKiB0aGUgYmFja2dyb3VuZCBieSBhIHRpbWVyIHRpY2suIEFsbCB0byByZWR1Y2UgdGhlIGNv
bXBsZXhpdHkKKwkgKiBvZiB0aGUgYWRkaXRpb24gYW5kIHJlZHVjZSB0aGUgcmlzayBvZiBsb3Np
bmcgYSBqaWZmaWUuCisJICovCisJYmFycmllcigpOworCisJbW9kX3RpbWVyKCZlbmdpbmUtPmV4
ZWNsaXN0cy5wcmVlbXB0LCBqaWZmaWVzICsgdGltZW91dCk7Cit9CisKIHN0YXRpYyB2b2lkIGV4
ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4
ZWNsaXN0czsKQEAgLTE3NDMsNiArMTc2Niw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJZXhlY2xpc3RzLT5zd2l0Y2hf
cHJpb3JpdHlfaGludCA9CiAJCQlzd2l0Y2hfcHJpbyhlbmdpbmUsICpleGVjbGlzdHMtPnBlbmRp
bmcpOwogCQlleGVjbGlzdHNfc3VibWl0X3BvcnRzKGVuZ2luZSk7CisJCXNldF9wcmVlbXB0X3Rp
bWVvdXQoZW5naW5lKTsKIAl9IGVsc2UgewogCQlyaW5nX3NldF9wYXVzZWQoZW5naW5lLCAwKTsK
IAl9CkBAIC0xOTcwLDYgKzE5OTQsMzggQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfc3VibWlz
c2lvbl90YXNrbGV0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmNvbnN0IGVuZ2luZSkKIAkJZXhl
Y2xpc3RzX2RlcXVldWUoZW5naW5lKTsKIH0KIAorc3RhdGljIG5vaW5saW5lIHZvaWQgcHJlZW1w
dF9yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJY29uc3QgdW5zaWdu
ZWQgaW50IGJpdCA9IEk5MTVfUkVTRVRfRU5HSU5FICsgZW5naW5lLT5pZDsKKwl1bnNpZ25lZCBs
b25nICpsb2NrID0gJmVuZ2luZS0+Z3QtPnJlc2V0LmZsYWdzOworCisJaWYgKGk5MTVfbW9kcGFy
YW1zLnJlc2V0IDwgMykKKwkJcmV0dXJuOworCisJaWYgKHRlc3RfYW5kX3NldF9iaXQoYml0LCBs
b2NrKSkKKwkJcmV0dXJuOworCisJLyogTWFyayB0aGlzIHRhc2tsZXQgYXMgZGlzYWJsZWQgdG8g
YXZvaWQgd2FpdGluZyBmb3IgaXQgdG8gY29tcGxldGUgKi8KKwl0YXNrbGV0X2Rpc2FibGVfbm9z
eW5jKCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0KTsKKworCWludGVsX2VuZ2luZV9yZXNldChl
bmdpbmUsICJwcmVlbXB0aW9uIHRpbWUgb3V0Iik7CisKKwl0YXNrbGV0X2VuYWJsZSgmZW5naW5l
LT5leGVjbGlzdHMudGFza2xldCk7CisJY2xlYXJfYW5kX3dha2VfdXBfYml0KGJpdCwgbG9jayk7
Cit9CisKK3N0YXRpYyBib29sIHByZWVtcHRfdGltZW91dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICpjb25zdCBlbmdpbmUpCit7CisJaWYgKCFDT05GSUdfRFJNX0k5MTVfUFJFRU1QVF9USU1FT1VU
KQorCQlyZXR1cm4gZmFsc2U7CisKKwlpZiAoIWludGVsX2VuZ2luZV9oYXNfcHJlZW1wdGlvbihl
bmdpbmUpKQorCQlyZXR1cm4gZmFsc2U7CisKKwlyZXR1cm4gIXRpbWVyX3BlbmRpbmcoJmVuZ2lu
ZS0+ZXhlY2xpc3RzLnByZWVtcHQpICYmCisJCVJFQURfT05DRShlbmdpbmUtPmV4ZWNsaXN0cy5w
ZW5kaW5nWzBdKTsKK30KKwogLyoKICAqIENoZWNrIHRoZSB1bnJlYWQgQ29udGV4dCBTdGF0dXMg
QnVmZmVycyBhbmQgbWFuYWdlIHRoZSBzdWJtaXNzaW9uIG9mIG5ldwogICogY29udGV4dHMgdG8g
dGhlIEVMU1AgYWNjb3JkaW5nbHkuCkBAIC0xOTc3LDIzICsyMDMzLDM5IEBAIHN0YXRpYyB2b2lk
IF9fZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpj
b25zdCBlbmdpbmUpCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KHVu
c2lnbmVkIGxvbmcgZGF0YSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICogY29uc3QgZW5n
aW5lID0gKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKilkYXRhOwotCXVuc2lnbmVkIGxvbmcgZmxh
Z3M7CisJYm9vbCB0aW1lb3V0ID0gcHJlZW1wdF90aW1lb3V0KGVuZ2luZSk7CiAKIAlwcm9jZXNz
X2NzYihlbmdpbmUpOwotCWlmICghUkVBRF9PTkNFKGVuZ2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdb
MF0pKSB7CisJaWYgKCFSRUFEX09OQ0UoZW5naW5lLT5leGVjbGlzdHMucGVuZGluZ1swXSkgfHwg
dGltZW91dCkgeworCQl1bnNpZ25lZCBsb25nIGZsYWdzOworCiAJCXNwaW5fbG9ja19pcnFzYXZl
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAJCV9fZXhlY2xpc3RzX3N1Ym1pc3Npb25f
dGFza2xldChlbmdpbmUpOwogCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2
ZS5sb2NrLCBmbGFncyk7CisKKwkJLyogUmVjaGVjayBhZnRlciBzZXJpYWxpc2luZyB3aXRoIGRp
cmVjdC1zdWJtaXNzaW9uICovCisJCWlmICh0aW1lb3V0ICYmIHByZWVtcHRfdGltZW91dChlbmdp
bmUpKQorCQkJcHJlZW1wdF9yZXNldChlbmdpbmUpOwogCX0KIH0KIAotc3RhdGljIHZvaWQgZXhl
Y2xpc3RzX3N1Ym1pc3Npb25fdGltZXIoc3RydWN0IHRpbWVyX2xpc3QgKnRpbWVyKQorc3RhdGlj
IHZvaWQgX19leGVjbGlzdHNfa2ljayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhl
Y2xpc3RzKQogewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9Ci0JCWZyb21fdGlt
ZXIoZW5naW5lLCB0aW1lciwgZXhlY2xpc3RzLnRpbWVyKTsKLQogCS8qIEtpY2sgdGhlIHRhc2ts
ZXQgZm9yIHNvbWUgaW50ZXJydXB0IGNvYWxlc2NpbmcgYW5kIHJlc2V0IGhhbmRsaW5nICovCi0J
dGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5lLT5leGVjbGlzdHMudGFza2xldCk7CisJdGFza2xl
dF9oaV9zY2hlZHVsZSgmZXhlY2xpc3RzLT50YXNrbGV0KTsKK30KKworI2RlZmluZSBleGVjbGlz
dHNfa2ljayh0LCBtZW1iZXIpIFwKKwlfX2V4ZWNsaXN0c19raWNrKGNvbnRhaW5lcl9vZih0LCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cywgbWVtYmVyKSkKKworc3RhdGljIHZvaWQgZXhl
Y2xpc3RzX3RpbWVzbGljZShzdHJ1Y3QgdGltZXJfbGlzdCAqdGltZXIpCit7CisJZXhlY2xpc3Rz
X2tpY2sodGltZXIsIHRpbWVyKTsKK30KKworc3RhdGljIHZvaWQgZXhlY2xpc3RzX3ByZWVtcHQo
c3RydWN0IHRpbWVyX2xpc3QgKnRpbWVyKQoreworCWV4ZWNsaXN0c19raWNrKHRpbWVyLCBwcmVl
bXB0KTsKIH0KIAogc3RhdGljIHZvaWQgcXVldWVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUsCkBAIC0zNDE3LDYgKzM0ODksNyBAQCBnZW4xMl9lbWl0X2ZpbmlfYnJlYWRj
cnVtYl9yY3Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwgdTMyICpjcykKIHN0YXRpYyB2
b2lkIGV4ZWNsaXN0c19wYXJrKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlk
ZWxfdGltZXIoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyKTsKKwlkZWxfdGltZXIoJmVuZ2luZS0+
ZXhlY2xpc3RzLnByZWVtcHQpOwogfQogCiB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVs
dF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKQEAgLTM1MzQsNyAr
MzYwNyw4IEBAIGludCBpbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJdGFza2xldF9pbml0KCZlbmdpbmUtPmV4ZWNsaXN0
cy50YXNrbGV0LAogCQkgICAgIGV4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQsICh1bnNpZ25l
ZCBsb25nKWVuZ2luZSk7Ci0JdGltZXJfc2V0dXAoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyLCBl
eGVjbGlzdHNfc3VibWlzc2lvbl90aW1lciwgMCk7CisJdGltZXJfc2V0dXAoJmVuZ2luZS0+ZXhl
Y2xpc3RzLnRpbWVyLCBleGVjbGlzdHNfdGltZXNsaWNlLCAwKTsKKwl0aW1lcl9zZXR1cCgmZW5n
aW5lLT5leGVjbGlzdHMucHJlZW1wdCwgZXhlY2xpc3RzX3ByZWVtcHQsIDApOwogCiAJbG9naWNh
bF9yaW5nX2RlZmF1bHRfdmZ1bmNzKGVuZ2luZSk7CiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfaXJx
cyhlbmdpbmUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJhbXMu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFyYW1zLmgKaW5kZXggZDI5YWRlM2I3ZGU2
Li41NjA1ODk3OGJiMjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGFy
YW1zLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJhbXMuaApAQCAtNjEsNyAr
NjEsNyBAQCBzdHJ1Y3QgZHJtX3ByaW50ZXI7CiAJcGFyYW0oY2hhciAqLCBkbWNfZmlybXdhcmVf
cGF0aCwgTlVMTCkgXAogCXBhcmFtKGludCwgbW1pb19kZWJ1ZywgLUlTX0VOQUJMRUQoQ09ORklH
X0RSTV9JOTE1X0RFQlVHX01NSU8pKSBcCiAJcGFyYW0oaW50LCBlZHBfdnN3aW5nLCAwKSBcCi0J
cGFyYW0oaW50LCByZXNldCwgMikgXAorCXBhcmFtKGludCwgcmVzZXQsIDMpIFwKIAlwYXJhbSh1
bnNpZ25lZCBpbnQsIGluamVjdF9sb2FkX2ZhaWx1cmUsIDApIFwKIAlwYXJhbShpbnQsIGZhc3Ri
b290LCAtMSkgXAogCXBhcmFtKGludCwgZW5hYmxlX2RwY2RfYmFja2xpZ2h0LCAwKSBcCi0tIAoy
LjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCklu
dGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

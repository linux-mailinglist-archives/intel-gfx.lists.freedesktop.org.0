Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 5BCDB24A629
	for <lists+intel-gfx@lfdr.de>; Wed, 19 Aug 2020 20:48:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C4DBF6E297;
	Wed, 19 Aug 2020 18:48:37 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 13F2D6E297
 for <intel-gfx@lists.freedesktop.org>; Wed, 19 Aug 2020 18:48:37 +0000 (UTC)
IronPort-SDR: pICXuNTMAYDu+ls/xRzJ/kuaduldGknUGf8kvvxcjdcdq4cbcH8d0I2hklK1KRdeVkb64USKRR
 pJSgrz5IpHww==
X-IronPort-AV: E=McAfee;i="6000,8403,9718"; a="134702444"
X-IronPort-AV: E=Sophos;i="5.76,332,1592895600"; d="scan'208";a="134702444"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga106.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 19 Aug 2020 11:48:36 -0700
IronPort-SDR: Pk7RTp69g422jplZGXAV6eUScboOm8iVtLkqyZCvXMTPUXccbGBqsMvOOaS5sYn38vb+Q86RFx
 NMmxXAmv+PXQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.76,332,1592895600"; d="scan'208";a="337051188"
Received: from lkp-server01.sh.intel.com (HELO 4cedd236b688) ([10.239.97.150])
 by orsmga007.jf.intel.com with ESMTP; 19 Aug 2020 11:48:35 -0700
Received: from kbuild by 4cedd236b688 with local (Exim 4.92)
 (envelope-from <lkp@intel.com>)
 id 1k8T8U-0000TL-JY; Wed, 19 Aug 2020 18:48:34 +0000
Date: Thu, 20 Aug 2020 02:47:31 +0800
From: kernel test robot <lkp@intel.com>
To: Nischal Varide <nischal.varide@intel.com>, intel-gfx@lists.freedesktop.org
Message-ID: <20200819184731.GA63215@c4ca2a659865>
References: <20200819043409.26010-1-nischal.varide@intel.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20200819043409.26010-1-nischal.varide@intel.com>
X-Patchwork-Hint: ignore
User-Agent: Mutt/1.10.1 (2018-07-13)
Subject: [Intel-gfx] [PATCH] fix boolreturn.cocci warnings
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: kbuild-all@lists.01.org
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

From: kernel test robot <lkp@intel.com>

drivers/gpu/drm/i915/display/intel_atomic.c:199:9-10: WARNING: return of 0/1 in function 'intel_connector_needs_modeset' with return type bool

 Return statements in functions returning bool should use
 true/false instead of 1/0.
Generated by: scripts/coccinelle/misc/boolreturn.cocci

CC: Nischal Varide <nischal.varide@intel.com>
Signed-off-by: kernel test robot <lkp@intel.com>
---

url:    https://github.com/0day-ci/linux/commits/Nischal-Varide/Critical-KclockWork-Fixes-intel_atomi-c-PossibleNull/20200819-193249
base:   git://anongit.freedesktop.org/drm-intel for-linux-next

 intel_atomic.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/gpu/drm/i915/display/intel_atomic.c
+++ b/drivers/gpu/drm/i915/display/intel_atomic.c
@@ -196,7 +196,7 @@ intel_connector_needs_modeset(struct int
 	old_conn_state = drm_atomic_get_old_connector_state(&state->base, connector);
 	new_conn_state = drm_atomic_get_new_connector_state(&state->base, connector);
 	if (!(old_conn_state && new_conn_state))
-		return 0;
+		return false;
 
 	return old_conn_state->crtc != new_conn_state->crtc ||
 	       (new_conn_state->crtc &&
_______________________________________________
Intel-gfx mailing list
Intel-gfx@lists.freedesktop.org
https://lists.freedesktop.org/mailman/listinfo/intel-gfx

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4DB79BDF58
	for <lists+intel-gfx@lfdr.de>; Wed, 25 Sep 2019 15:46:13 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6535C6EBCB;
	Wed, 25 Sep 2019 13:46:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7F8286EBD0;
 Wed, 25 Sep 2019 13:46:09 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18612532-1500050 
 for multiple; Wed, 25 Sep 2019 14:45:50 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 25 Sep 2019 14:45:43 +0100
Message-Id: <20190925134543.25859-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190925134543.25859-1-chris@chris-wilson.co.uk>
References: <20190925134543.25859-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 2/2] Add i915/gem_ctx_persistence
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2FuaXR5IHRlc3QgZXhpc3RpbmcgcGVyc2lzdGVuY2UgYW5kIG5ldyBleGNpdGluZyBub24tcGVy
c2lzdGVudCBjb250ZXh0CmJlaGF2aW91ci4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogSm9vbmFzIExhaHRpbmVuIDxqb29uYXMubGFo
dGluZW5AbGludXguaW50ZWwuY29tPgpDYzogTWljaGHFgiBXaW5pYXJza2kgPG1pY2hhbC53aW5p
YXJza2lAaW50ZWwuY29tPgpDYzogSm9uIEJsb29tZmllbGQgPGpvbi5ibG9vbWZpZWxkQGludGVs
LmNvbT4KLS0tCiBsaWIvaTkxNS9nZW1fY29udGV4dC5jICAgICAgICAgICB8ICAzNyArKysrCiBs
aWIvaTkxNS9nZW1fY29udGV4dC5oICAgICAgICAgICB8ICAgOCArCiBsaWIvaWd0X2R1bW15bG9h
ZC5jICAgICAgICAgICAgICB8ICAgMyArLQogbGliL2lvY3RsX3dyYXBwZXJzLmMgICAgICAgICAg
ICAgfCAgIDEgKwogdGVzdHMvTWFrZWZpbGUuc291cmNlcyAgICAgICAgICAgfCAgIDMgKwogdGVz
dHMvaTkxNS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMgfCAzNTMgKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKwogdGVzdHMvbWVzb24uYnVpbGQgICAgICAgICAgICAgICAgfCAgIDEgKwogNyBm
aWxlcyBjaGFuZ2VkLCA0MDUgaW5zZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQogY3JlYXRlIG1v
ZGUgMTAwNjQ0IHRlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCgpkaWZmIC0tZ2l0IGEv
bGliL2k5MTUvZ2VtX2NvbnRleHQuYyBiL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKaW5kZXggODNj
NWRmOTYxLi4xZmFlNTE5MWYgMTAwNjQ0Ci0tLSBhL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKKysr
IGIvbGliL2k5MTUvZ2VtX2NvbnRleHQuYwpAQCAtMjcyLDYgKzI3Miw0MyBAQCB2b2lkIGdlbV9j
b250ZXh0X3NldF9wcmlvcml0eShpbnQgZmQsIHVpbnQzMl90IGN0eF9pZCwgaW50IHByaW8pCiAJ
aWd0X2Fzc2VydF9lcShfX2dlbV9jb250ZXh0X3NldF9wcmlvcml0eShmZCwgY3R4X2lkLCBwcmlv
KSwgMCk7CiB9CiAKKy8qKgorICogX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2U6CisgKiBA
aTkxNTogb3BlbiBpOTE1IGRybSBmaWxlIGRlc2NyaXB0b3IKKyAqIEBjdHg6IGk5MTUgY29udGV4
dCBpZAorICogQHN0YXRlOiBkZXNpcmVkIHBlcnNpc3RlbmNlCisgKgorICogRGVjbGFyZSB3aGV0
aGVyIHRoaXMgY29udGV4dCBpcyBhbGxvd2VkIHRvIHBlcnNpc3QgYWZ0ZXIgY2xvc2luZyB1bnRp
bAorICogaXRzIHJlcXVlc3RzIGFyZSBjb21wbGV0ZSAocGVyc2lzdGVudD10cnVlKSBvciBpZiBp
dCBzaG91bGQgYmUKKyAqIGltbWVkaWF0ZWx5IHJlYXBlZCBvbiBjbG9zaW5nIGFuZCBpdHMgcmVx
dWVzdHMgY2FuY2VsbGVkCisgKiAocGVyc2lzdGVudD1mYWxzZSkuCisgKgorICogUmV0dXJuczog
QW4gaW50ZWdlciBlcXVhbCB0byB6ZXJvIGZvciBzdWNjZXNzIGFuZCBuZWdhdGl2ZSBmb3IgZmFp
bHVyZQorICovCitpbnQgX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaW50IGk5MTUsIHVp
bnQzMl90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRf
cGFyYW0gcCA9IHsKKwkJLmN0eF9pZCA9IGN0eCwKKwkJLnBhcmFtID0gSTkxNV9DT05URVhUX1BB
UkFNX1BFUlNJU1RFTkNFLAorCQkudmFsdWUgPSBzdGF0ZSwKKwl9OworCisJcmV0dXJuIF9fZ2Vt
X2NvbnRleHRfc2V0X3BhcmFtKGk5MTUsICZwKTsKK30KKworLyoqCisgKiBfX2dlbV9jb250ZXh0
X3NldF9wZXJzaXN0ZW5jZToKKyAqIEBpOTE1OiBvcGVuIGk5MTUgZHJtIGZpbGUgZGVzY3JpcHRv
cgorICogQGN0eDogaTkxNSBjb250ZXh0IGlkCisgKiBAc3RhdGU6IGRlc2lyZWQgcGVyc2lzdGVu
Y2UKKyAqCisgKiBMaWtlIF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKCksIGV4Y2VwdCB3
ZSBhc3NlcnQgb24gZmFpbHVyZS4KKyAqLwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVu
Y2UoaW50IGk5MTUsIHVpbnQzMl90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlpZ3RfYXNzZXJ0X2Vx
KF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgc3RhdGUpLCAwKTsKK30K
KwogaW50CiBfX2dlbV9jb250ZXh0X2Nsb25lKGludCBpOTE1LAogCQkgICAgdWludDMyX3Qgc3Jj
LCB1bnNpZ25lZCBpbnQgc2hhcmUsCmRpZmYgLS1naXQgYS9saWIvaTkxNS9nZW1fY29udGV4dC5o
IGIvbGliL2k5MTUvZ2VtX2NvbnRleHQuaAppbmRleCA4MDQzYzM0MDEuLmMwZDRjOTYxNSAxMDA2
NDQKLS0tIGEvbGliL2k5MTUvZ2VtX2NvbnRleHQuaAorKysgYi9saWIvaTkxNS9nZW1fY29udGV4
dC5oCkBAIC0yNCw2ICsyNCwxMSBAQAogI2lmbmRlZiBHRU1fQ09OVEVYVF9ICiAjZGVmaW5lIEdF
TV9DT05URVhUX0gKIAorI2luY2x1ZGUgPHN0ZGJvb2wuaD4KKyNpbmNsdWRlIDxzdGRpbnQuaD4K
Kworc3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtOworCiB1aW50MzJfdCBnZW1fY29u
dGV4dF9jcmVhdGUoaW50IGZkKTsKIGludCBfX2dlbV9jb250ZXh0X2NyZWF0ZShpbnQgZmQsIHVp
bnQzMl90ICpjdHhfaWQpOwogdm9pZCBnZW1fY29udGV4dF9kZXN0cm95KGludCBmZCwgdWludDMy
X3QgY3R4X2lkKTsKQEAgLTU4LDYgKzYzLDkgQEAgaW50IF9fZ2VtX2NvbnRleHRfZ2V0X3BhcmFt
KGludCBmZCwgc3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtICpwKTsKIGludCBfX2dl
bV9jb250ZXh0X3NldF9wcmlvcml0eShpbnQgZmQsIHVpbnQzMl90IGN0eCwgaW50IHByaW8pOwog
dm9pZCBnZW1fY29udGV4dF9zZXRfcHJpb3JpdHkoaW50IGZkLCB1aW50MzJfdCBjdHgsIGludCBw
cmlvKTsKIAoraW50IF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGludCBpOTE1LCB1aW50
MzJfdCBjdHgsIGJvb2wgc3RhdGUpOwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2Uo
aW50IGk5MTUsIHVpbnQzMl90IGN0eCwgYm9vbCBzdGF0ZSk7CisKIGJvb2wgZ2VtX2NvbnRleHRf
aGFzX2VuZ2luZShpbnQgZmQsIHVpbnQzMl90IGN0eCwgdWludDY0X3QgZW5naW5lKTsKIAogI2Vu
ZGlmIC8qIEdFTV9DT05URVhUX0ggKi8KZGlmZiAtLWdpdCBhL2xpYi9pZ3RfZHVtbXlsb2FkLmMg
Yi9saWIvaWd0X2R1bW15bG9hZC5jCmluZGV4IDY1YjVjYzkyNy4uNjA2MDg3OGRkIDEwMDY0NAot
LS0gYS9saWIvaWd0X2R1bW15bG9hZC5jCisrKyBiL2xpYi9pZ3RfZHVtbXlsb2FkLmMKQEAgLTQ1
MCw3ICs0NTAsOCBAQCB2b2lkIGlndF9zcGluX2ZyZWUoaW50IGZkLCBpZ3Rfc3Bpbl90ICpzcGlu
KQogCQlnZW1fY2xvc2UoZmQsIHNwaW4tPnBvbGxfaGFuZGxlKTsKIAl9CiAKLQlnZW1fY2xvc2Uo
ZmQsIHNwaW4tPmhhbmRsZSk7CisJaWYgKHNwaW4tPmhhbmRsZSkKKwkJZ2VtX2Nsb3NlKGZkLCBz
cGluLT5oYW5kbGUpOwogCiAJaWYgKHNwaW4tPm91dF9mZW5jZSA+PSAwKQogCQljbG9zZShzcGlu
LT5vdXRfZmVuY2UpOwpkaWZmIC0tZ2l0IGEvbGliL2lvY3RsX3dyYXBwZXJzLmMgYi9saWIvaW9j
dGxfd3JhcHBlcnMuYwppbmRleCAyODBmZGQ2MjQuLjYyOGY4YjgzMCAxMDA2NDQKLS0tIGEvbGli
L2lvY3RsX3dyYXBwZXJzLmMKKysrIGIvbGliL2lvY3RsX3dyYXBwZXJzLmMKQEAgLTQ0NSw2ICs0
NDUsNyBAQCBpbnQgZ2VtX3dhaXQoaW50IGZkLCB1aW50MzJfdCBoYW5kbGUsIGludDY0X3QgKnRp
bWVvdXRfbnMpCiAJcmV0ID0gMDsKIAlpZiAoaWd0X2lvY3RsKGZkLCBEUk1fSU9DVExfSTkxNV9H
RU1fV0FJVCwgJndhaXQpKQogCQlyZXQgPSAtZXJybm87CisJZXJybm8gPSAwOwogCiAJaWYgKHRp
bWVvdXRfbnMpCiAJCSp0aW1lb3V0X25zID0gd2FpdC50aW1lb3V0X25zOwpkaWZmIC0tZ2l0IGEv
dGVzdHMvTWFrZWZpbGUuc291cmNlcyBiL3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMKaW5kZXggMzQz
YmUwNTAwLi4wOTNlYjU3ZjMgMTAwNjQ0Ci0tLSBhL3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMKKysr
IGIvdGVzdHMvTWFrZWZpbGUuc291cmNlcwpAQCAtMTU0LDYgKzE1NCw5IEBAIGdlbV9jdHhfaXNv
bGF0aW9uX1NPVVJDRVMgPSBpOTE1L2dlbV9jdHhfaXNvbGF0aW9uLmMKIFRFU1RTX3Byb2dzICs9
IGdlbV9jdHhfcGFyYW0KIGdlbV9jdHhfcGFyYW1fU09VUkNFUyA9IGk5MTUvZ2VtX2N0eF9wYXJh
bS5jCiAKK1RFU1RTX3Byb2dzICs9IGdlbV9jdHhfcGVyc2lzdGVuY2UKK2dlbV9jdHhfcGVyc2lz
dGVuY2VfU09VUkNFUyA9IGk5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCisKIFRFU1RTX3Byb2dz
ICs9IGdlbV9jdHhfc2hhcmVkCiBnZW1fY3R4X3NoYXJlZF9TT1VSQ0VTID0gaTkxNS9nZW1fY3R4
X3NoYXJlZC5jCiAKZGlmZiAtLWdpdCBhL3Rlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5j
IGIvdGVzdHMvaTkxNS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwLi5kNmVmNmI5MDAKLS0tIC9kZXYvbnVsbAorKysgYi90ZXN0cy9pOTE1
L2dlbV9jdHhfcGVyc2lzdGVuY2UuYwpAQCAtMCwwICsxLDM1MyBAQAorLyoKKyAqIENvcHlyaWdo
dCDCqSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkg
Z3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNv
cHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0
aGUgIlNvZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3Ry
aWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVz
ZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwK
KyAqIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVy
c29ucyB0byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJq
ZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJp
Z2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZSBuZXh0
CisgKiBwYXJhZ3JhcGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3Rh
bnRpYWwgcG9ydGlvbnMgb2YgdGhlCisgKiBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUg
SVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVT
UyBPUgorICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFO
VElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBBVVRI
T1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VT
IE9SIE9USEVSCisgKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNU
LCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORworICogRlJPTSwgT1VUIE9GIE9SIElOIENPTk5F
Q1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUworICog
SU4gVEhFIFNPRlRXQVJFLgorICovCisKKyNpbmNsdWRlIDxlcnJuby5oPgorI2luY2x1ZGUgPHN5
cy9zb2NrZXQuaD4KKyNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KKyNpbmNsdWRlIDx1bmlzdGQuaD4K
KworI2luY2x1ZGUgImRybXRlc3QuaCIgLyogZ2VtX3F1aWVzY2VudF9ncHUoKSEgKi8KKyNpbmNs
dWRlICJpOTE1L2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiaTkxNS9nZW1fc3VibWlzc2lvbi5o
IgorI2luY2x1ZGUgImlndF9kZWJ1Z2ZzLmgiCisjaW5jbHVkZSAiaWd0X2R1bW15bG9hZC5oIgor
I2luY2x1ZGUgImlvY3RsX3dyYXBwZXJzLmgiIC8qIGdlbV93YWl0KCkhICovCisjaW5jbHVkZSAi
c3dfc3luYy5oIgorCitzdGF0aWMgYm9vbCBoYXNfcGVyc2lzdGVuY2UoaW50IGk5MTUpCit7CisJ
c3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtIHAgPSB7CisJCS5wYXJhbSA9IEk5MTVf
Q09OVEVYVF9QQVJBTV9QRVJTSVNURU5DRSwKKwl9OworCXVpbnQ2NF90IHNhdmVkOworCisJaWYg
KF9fZ2VtX2NvbnRleHRfZ2V0X3BhcmFtKGk5MTUsICZwKSkKKwkJcmV0dXJuIGZhbHNlOworCisJ
c2F2ZWQgPSBwLnZhbHVlOworCXAudmFsdWUgPSAwOworCWlmIChfX2dlbV9jb250ZXh0X3NldF9w
YXJhbShpOTE1LCAmcCkpCisJCXJldHVybiBmYWxzZTsKKworCXAudmFsdWUgPSBzYXZlZDsKKwly
ZXR1cm4gX19nZW1fY29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApID09IDA7Cit9CisKK3N0YXRp
YyB2b2lkIHRlc3RfaWRlbXBvdGVudChpbnQgaTkxNSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X2NvbnRleHRfcGFyYW0gcCA9IHsKKwkJLnBhcmFtID0gSTkxNV9DT05URVhUX1BBUkFNX1BFUlNJ
U1RFTkNFLAorCX07CisJaW50IGV4cGVjdGVkOworCisJLyoKKwkgKiBTaW1wbGUgdGVzdCB0byB2
ZXJpZnkgdGhhdCB3ZSBhcmUgYWJsZSB0byByZWFkIGJhY2sgdGhlIHNhbWUgYm9vbGVhbgorCSAq
IHZhbHVlIGFzIHdlIHNldC4KKwkgKgorCSAqIEVhY2ggdGltZSB3ZSBpbnZlcnQgdGhlIGN1cnJl
bnQgdmFsdWUgc28gdGhhdCBhdCB0aGUgZW5kIG9mIHRoZSB0ZXN0LAorCSAqIGlmIHN1Y2Nlc3Nm
dWwsIHdlIGxlYXZlIHRoZSBjb250ZXh0IGluIHRoZSBvcmlnaW5hbCBzdGF0ZS4KKwkgKi8KKwor
CWdlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1LCAmcCk7CisJZXhwZWN0ZWQgPSAhIXAudmFsdWU7
CisKKwlleHBlY3RlZCA9ICFleHBlY3RlZDsKKwlwLnZhbHVlID0gZXhwZWN0ZWQ7CisJZ2VtX2Nv
bnRleHRfc2V0X3BhcmFtKGk5MTUsICZwKTsKKwlnZW1fY29udGV4dF9nZXRfcGFyYW0oaTkxNSwg
JnApOworCWlndF9hc3NlcnRfZXEocC52YWx1ZSwgZXhwZWN0ZWQpOworCisJZXhwZWN0ZWQgPSAh
ZXhwZWN0ZWQ7IC8qIGFuZCByZXN0b3JlcyAqLworCXAudmFsdWUgPSBleHBlY3RlZDsKKwlnZW1f
Y29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApOworCWdlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1
LCAmcCk7CisJaWd0X2Fzc2VydF9lcShwLnZhbHVlLCBleHBlY3RlZCk7Cit9CisKK3N0YXRpYyB2
b2lkIHRlc3RfcGVyc2lzdGVuY2UoaW50IGk5MTUpCit7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwlp
bnQ2NF90IHRpbWVvdXQ7CisJdWludDMyX3QgY3R4OworCisJLyoKKwkgKiBEZWZhdWx0IGJlaGF2
aW91ciBhcmUgY29udGV4dHMgcmVtYWluIGFsaXZlIHVudGlsIHRoZWlyIGxhc3QgYWN0aXZlCisJ
ICogcmVxdWVzdCBpcyByZXRpcmVkIC0tIG5vIGVhcmx5IHRlcm1pbmF0aW9uLgorCSAqLworCisJ
Y3R4ID0gZ2VtX2NvbnRleHRfY3JlYXRlKGk5MTUpOworCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0
ZW5jZShpOTE1LCBjdHgsIHRydWUpOworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgs
IC5mbGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJZ2VtX2NvbnRleHRfZGVzdHJveShpOTE1
LCBjdHgpOworCisJdGltZW91dCA9IE5TRUNfUEVSX1NFQyAvIDU7CisJaWd0X2Fzc2VydF9lcShn
ZW1fd2FpdChpOTE1LCBzcGluLT5oYW5kbGUsICZ0aW1lb3V0KSwgLUVUSU1FKTsKKworCWlndF9z
cGluX2VuZChzcGluKTsKKworCXRpbWVvdXQgPSBOU0VDX1BFUl9TRUMgLyA1OworCWlndF9hc3Nl
cnRfZXEoZ2VtX3dhaXQoaTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCWlndF9h
c3NlcnRfZXEoc3luY19mZW5jZV9zdGF0dXMoc3Bpbi0+b3V0X2ZlbmNlKSwgMSk7CisKKwlpZ3Rf
c3Bpbl9mcmVlKGk5MTUsIHNwaW4pOworCWdlbV9xdWllc2NlbnRfZ3B1KGk5MTUpOworfQorCitz
dGF0aWMgdm9pZCB0ZXN0X25vbnBlcnNpc3RlbnRfY2xlYW51cChpbnQgaTkxNSkKK3sKKwlpbnQ2
NF90IHRpbWVvdXQgPSBOU0VDX1BFUl9TRUMgLyA1OworCWlndF9zcGluX3QgKnNwaW47CisJdWlu
dDMyX3QgY3R4OworCisJLyoKKwkgKiBBIG5vbnBlcnNpc3RlbnQgY29udGV4dCBpcyB0ZXJtaW5h
dGVkIGltbWVkaWF0ZWx5IHVwb24gY2xvc3VyZSwKKwkgKiBhbnkgaW5mbGlnaHQgcmVxdWVzdCBp
cyBjYW5jZWxsZWQuCisJICovCisKKwljdHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJ
Z2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9
IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJ
Z2VtX2NvbnRleHRfZGVzdHJveShpOTE1LCBjdHgpOworCisJaWd0X2Fzc2VydF9lcShnZW1fd2Fp
dChpOTE1LCBzcGluLT5oYW5kbGUsICZ0aW1lb3V0KSwgMCk7CisJaWd0X2Fzc2VydF9lcShzeW5j
X2ZlbmNlX3N0YXR1cyhzcGluLT5vdXRfZmVuY2UpLCAtRUlPKTsKKworCWlndF9zcGluX2ZyZWUo
aTkxNSwgc3Bpbik7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisKK3N0YXRpYyB2b2lk
IHRlc3Rfbm9ucGVyc2lzdGVudF9taXhlZChpbnQgaTkxNSkKK3sKKwlpbnQgZmVuY2VbM107CisK
KwkvKgorCSAqIE9ubHkgYSBub25wZXJzaXN0ZW50IGNvbnRleHQgaXMgdGVybWluYXRlZCBpbW1l
ZGlhdGVseSB1cG9uCisJICogY2xvc3VyZSwgYW55IGluZmxpZ2h0IHJlcXVlc3QgaXMgY2FuY2Vs
bGVkLiBJZiB0aGVyZSBpcyBhbHNvCisJICogYW4gYWN0aXZlIHBlcnNpc3RlbnQgY29udGV4dCBj
bG9zZWQsIGl0IHNob3VsZCBiZSB1bmFmZmZlY3RlZC4KKwkgKi8KKworCWZvciAoaW50IGkgPSAw
OyBpIDwgQVJSQVlfU0laRShmZW5jZSk7IGkrKykgeworCQlpZ3Rfc3Bpbl90ICpzcGluOworCQl1
aW50MzJfdCBjdHg7CisKKwkJY3R4ID0gZ2VtX2NvbnRleHRfY3JlYXRlKGk5MTUpOworCQlnZW1f
Y29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaTkxNSwgY3R4LCBpICYgMSk7CisKKwkJc3BpbiA9IGln
dF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJCWdl
bV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4KTsKKworCQlmZW5jZVtpXSA9IHNwaW4tPm91dF9m
ZW5jZTsKKwl9CisKKwkvKiBPdXRlciBwYWlyIG9mIGNvbnRleHRzIHdlcmUgbm9uLXBlcnNpc3Rl
bnQgYW5kIGtpbGxlZCAqLworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV93YWl0KGZlbmNlWzBd
LCBNU0VDX1BFUl9TRUMgLyA1KSwgMCk7CisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3N0YXR1
cyhmZW5jZVswXSksIC1FSU8pOworCisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3dhaXQoZmVu
Y2VbMl0sIE1TRUNfUEVSX1NFQyAvIDUpLCAwKTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vf
c3RhdHVzKGZlbmNlWzJdKSwgLUVJTyk7CisKKwkvKiBCdXQgdGhlIG1pZGRsZSBjb250ZXh0IGlz
IHN0aWxsIHJ1bm5pbmcgKi8KKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfd2FpdChmZW5jZVsx
XSwgMCksIC1FVElNRSk7CisKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKK30KKworc3RhdGlj
IHZvaWQgdGVzdF9ub25wZXJzaXN0ZW50X2hvc3RpbGUoaW50IGk5MTUpCit7CisJaW50NjRfdCB0
aW1lb3V0ID0gTlNFQ19QRVJfU0VDIC8gMjsKKwlpZ3Rfc3Bpbl90ICpzcGluOworCXVpbnQzMl90
IGN0eDsKKworCS8qCisJICogSWYgd2UgY2Fubm90IGNsZWFubHkgY2FuY2VsIHRoZSBwZXJzaXN0
ZW50IGNvbnRleHQgb24gY2xvc3VyZSwKKwkgKiBlLmcuIHByZWVtcHRpb24gZmFpbHMsIHdlIGFy
ZSBmb3JjZWQgdG8gcmVzZXQgdGhlIEdQVSB0byB0ZXJtaW5hdGUKKwkgKiB0aGUgcmVxdWVzdHMg
YW5kIGNsZWFudXAgdGhlIGNvbnRleHQuCisJICovCisKKwljdHggPSBnZW1fY29udGV4dF9jcmVh
dGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgZmFsc2Up
OworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX05P
X1BSRUVNUFRJT04pOworCWdlbV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4KTsKKworCWlndF9h
c3NlcnRfZXEoZ2VtX3dhaXQoaTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCisJ
aWd0X3NwaW5fZnJlZShpOTE1LCBzcGluKTsKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKK30K
Kworc3RhdGljIHZvaWQgdGVzdF9ub25wZXJzaXN0ZW50X2ZpbGUoaW50IGk5MTUpCit7CisJaWd0
X3NwaW5fdCAqc3BpbjsKKwl1aW50MzJfdCBjdHg7CisKKwkvKgorCSAqIEEgY29udGV4dCBtYXkg
bGl2ZSBiZXlvbmQgaXRzIGluaXRpYWwgc3RydWN0IGZpbGUsIGV4Y2VwdCBpZiBpdAorCSAqIGhh
cyBiZWVuIG1hZGUgbm9ucGVyc2lzdGVudCwgaW4gd2hpY2ggY2FzZSBpdCBtdXN0IGJlIHRlcm1p
bmF0ZWQuCisJICovCisKKwlpOTE1ID0gZ2VtX3Jlb3Blbl9kcml2ZXIoaTkxNSk7CisKKwljdHgg
PSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNl
KGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5m
bGFncyA9IElHVF9TUElOX0ZFTkNFX09VVCk7CisJY2xvc2UoaTkxNSk7CisKKwlpZ3RfYXNzZXJ0
X2VxKHN5bmNfZmVuY2Vfd2FpdChzcGluLT5vdXRfZmVuY2UsIE1TRUNfUEVSX1NFQyAvIDUpLCAw
KTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKHNwaW4tPm91dF9mZW5jZSksIC1F
SU8pOworCisJc3Bpbi0+aGFuZGxlID0gMDsKKwlpZ3Rfc3Bpbl9mcmVlKC0xLCBzcGluKTsKK30K
Kworc3RhdGljIHZvaWQgc2VuZGZkKGludCBzb2NrZXQsIGludCBmZCkKK3sKKwljaGFyIGJ1ZltD
TVNHX1NQQUNFKHNpemVvZihmZCkpXTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7IC5pb3ZfYmFzZSA9
IChjaGFyICopIkFCQyIsIC5pb3ZfbGVuID0gMyB9OworCXN0cnVjdCBtc2doZHIgbXNnID0gewor
CQkubXNnX2lvdiA9ICZpbywKKwkJLm1zZ19pb3ZsZW4gPSAxLAorCQkubXNnX2NvbnRyb2wgPSBi
dWYsCisJCS5tc2dfY29udHJvbGxlbiA9IENNU0dfTEVOKHNpemVvZihmZCkpLAorCX07CisJc3Ry
dWN0IGNtc2doZHIgKmNtc2cgPSBDTVNHX0ZJUlNUSERSKCZtc2cpOworCisJY21zZy0+Y21zZ19s
ZXZlbCA9IFNPTF9TT0NLRVQ7CisJY21zZy0+Y21zZ190eXBlID0gU0NNX1JJR0hUUzsKKwljbXNn
LT5jbXNnX2xlbiA9IG1zZy5tc2dfY29udHJvbGxlbjsKKwkqKGludCAqKUNNU0dfREFUQShjbXNn
KSA9IGZkOworCisJaWd0X2Fzc2VydChzZW5kbXNnKHNvY2tldCwgJm1zZywgMCkgIT0gLTEpOwor
fQorCitzdGF0aWMgaW50IHJlY3ZmZChpbnQgc29ja2V0KQoreworCWNoYXIgbV9idWZmZXJbMjU2
XSwgY19idWZmZXJbMjU2XTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7CisJCS5pb3ZfYmFzZSA9IG1f
YnVmZmVyLAorCQkuaW92X2xlbiA9IHNpemVvZihtX2J1ZmZlciksCisJfTsKKwlzdHJ1Y3QgbXNn
aGRyIG1zZyA9IHsKKwkJLm1zZ19pb3YgPSAmaW8sCisJCS5tc2dfaW92bGVuID0gMSwKKwkJLm1z
Z19jb250cm9sID0gY19idWZmZXIsCisJCS5tc2dfY29udHJvbGxlbiA9IHNpemVvZihjX2J1ZmZl
ciksCisJfTsKKworCWlndF9hc3NlcnQocmVjdm1zZyhzb2NrZXQsICZtc2csIDApICE9IC0xKTsK
KwlyZXR1cm4gKihpbnQgKilDTVNHX0RBVEEoQ01TR19GSVJTVEhEUigmbXNnKSk7Cit9CisKK3N0
YXRpYyB2b2lkIHRlc3Rfbm9ucGVyc2lzdGVudF9wcm9jZXNzKGludCBpOTE1KQoreworCWludCBm
ZW5jZVsyXSwgc3ZbMl07CisKKwkvKgorCSAqIElmIGEgcHJvY2VzcyBkaWVzIGVhcmx5LCBhbnkg
bm9ucGVyc2lzdGVudCBjb250ZXh0cyBpdCBoYWQKKwkgKiBvcGVuIG11c3QgYmUgdGVybWluYXRl
ZCB0b28uIEJ1dCBhbnkgcGVyc2lzdGVudCBjb250ZXh0cywKKwkgKiBzaG91bGQgc3Vydml2ZSB1
bnRpbCB0aGVpciByZXF1ZXN0cyBhcmUgY29tcGxldGUuCisJICovCisKKwlpZ3RfcmVxdWlyZShz
b2NrZXRwYWlyKEFGX1VOSVgsIFNPQ0tfREdSQU0sIDAsIHN2KSA9PSAwKTsKKworCWlndF9mb3Jr
KGNoaWxkLCAxKSB7CisJCWk5MTUgPSBnZW1fcmVvcGVuX2RyaXZlcihpOTE1KTsKKworCQlmb3Ig
KGludCBwZXJzaXN0cyA9IDA7IHBlcnNpc3RzIDw9IDE7IHBlcnNpc3RzKyspIHsKKwkJCWlndF9z
cGluX3QgKnNwaW47CisJCQl1aW50MzJfdCBjdHg7CisKKwkJCWN0eCA9IGdlbV9jb250ZXh0X2Ny
ZWF0ZShpOTE1KTsKKwkJCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5jZShpOTE1LCBjdHgsIHBl
cnNpc3RzKTsKKworCQkJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsCisJCQkJCSAgICAu
ZmxhZ3MgPSBJR1RfU1BJTl9GRU5DRV9PVVQpOworCisJCQlzZW5kZmQoc3ZbMF0sIHNwaW4tPm91
dF9mZW5jZSk7CisKKwkJCWlndF9saXN0X2RlbCgmc3Bpbi0+bGluayk7IC8qIHByZXZlbnQgYXV0
b2NsZWFudXAgKi8KKwkJfQorCX0KKwljbG9zZShzdlswXSk7CisJaWd0X3dhaXRjaGlsZHJlbigp
OworCisJZmVuY2VbMF0gPSByZWN2ZmQoc3ZbMV0pOworCWZlbmNlWzFdID0gcmVjdmZkKHN2WzFd
KTsKKwljbG9zZShzdlsxXSk7CisKKwkvKiBGaXJzdCBmZW5jZSBpcyBub24tcGVyc2lzdGVudCwg
c28gc2hvdWxkIGJlIHJlc2V0ICovCisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3dhaXQoZmVu
Y2VbMF0sIE1TRUNfUEVSX1NFQyAvIDUpLCAwKTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vf
c3RhdHVzKGZlbmNlWzBdKSwgLUVJTyk7CisJY2xvc2UoZmVuY2VbMF0pOworCisJLyogU2Vjb25k
IGZlbmNlIGlzIHBlcnNpc3RlbnQsIHNvIHNob3VsZCBiZSBzdGlsbCBzcGlubmluZyAqLworCWln
dF9hc3NlcnRfZXEoc3luY19mZW5jZV93YWl0KGZlbmNlWzFdLCAwKSwgLUVUSU1FKTsKKwljbG9z
ZShmZW5jZVsxXSk7CisKKwkvKiBXZSBoYXZlIHRvIG1hbnVhbGx5IGNsZWFuIHVwIHRoZSBvcnBo
YW5lZCBzcGlubmVyICovCisJaWd0X2Ryb3BfY2FjaGVzX3NldChpOTE1LCBEUk9QX1JFU0VUX0FD
VElWRSk7CisKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKK30KKworaWd0X21haW4KK3sKKwlp
bnQgaTkxNTsKKworCWlndF9maXh0dXJlIHsKKwkJaTkxNSA9IGRybV9vcGVuX2RyaXZlcihEUklW
RVJfSU5URUwpOworCQlpZ3RfcmVxdWlyZV9nZW0oaTkxNSk7CisKKwkJaWd0X3JlcXVpcmUoaGFz
X3BlcnNpc3RlbmNlKGk5MTUpKTsKKwl9CisKKwlpZ3Rfc3VidGVzdF9ncm91cCB7CisJCWlndF9z
dWJ0ZXN0KCJpZGVtcG90ZW50IikKKwkJCXRlc3RfaWRlbXBvdGVudChpOTE1KTsKKworCQlpZ3Rf
c3VidGVzdCgicGVyc2lzdGVuY2UiKQorCQkJdGVzdF9wZXJzaXN0ZW5jZShpOTE1KTsKKworCQlp
Z3Rfc3VidGVzdCgiY2xlYW51cCIpCisJCQl0ZXN0X25vbnBlcnNpc3RlbnRfY2xlYW51cChpOTE1
KTsKKworCQlpZ3Rfc3VidGVzdCgibWl4ZWQiKQorCQkJdGVzdF9ub25wZXJzaXN0ZW50X21peGVk
KGk5MTUpOworCisJCWlndF9zdWJ0ZXN0KCJob3N0aWxlIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVu
dF9ob3N0aWxlKGk5MTUpOworCisJCWlndF9zdWJ0ZXN0KCJmaWxlIikKKwkJCXRlc3Rfbm9ucGVy
c2lzdGVudF9maWxlKGk5MTUpOworCisJCWlndF9zdWJ0ZXN0KCJwcm9jZXNzIikKKwkJCXRlc3Rf
bm9ucGVyc2lzdGVudF9wcm9jZXNzKGk5MTUpOworCX0KKworCWlndF9maXh0dXJlIHsKKwkJY2xv
c2UoaTkxNSk7CisJfQorfQpkaWZmIC0tZ2l0IGEvdGVzdHMvbWVzb24uYnVpbGQgYi90ZXN0cy9t
ZXNvbi5idWlsZAppbmRleCA3ZTNmOWUwYTQuLjNmM2VlZTI3NyAxMDA2NDQKLS0tIGEvdGVzdHMv
bWVzb24uYnVpbGQKKysrIGIvdGVzdHMvbWVzb24uYnVpbGQKQEAgLTEyMSw2ICsxMjEsNyBAQCBp
OTE1X3Byb2dzID0gWwogCSdnZW1fY3R4X2V4ZWMnLAogCSdnZW1fY3R4X2lzb2xhdGlvbicsCiAJ
J2dlbV9jdHhfcGFyYW0nLAorCSdnZW1fY3R4X3BlcnNpc3RlbmNlJywKIAknZ2VtX2N0eF9zaGFy
ZWQnLAogCSdnZW1fY3R4X3N3aXRjaCcsCiAJJ2dlbV9jdHhfdGhyYXNoJywKLS0gCjIuMjMuMAoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4
IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlz
dHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 53DC2235406
	for <lists+intel-gfx@lfdr.de>; Sat,  1 Aug 2020 20:29:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EA5E96EBFD;
	Sat,  1 Aug 2020 18:29:22 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (unknown [77.68.26.236])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 15A516EBFD
 for <intel-gfx@lists.freedesktop.org>; Sat,  1 Aug 2020 18:29:20 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from build.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 22004328-1500050 
 for <intel-gfx@lists.freedesktop.org>; Sat, 01 Aug 2020 19:29:17 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sat,  1 Aug 2020 19:29:17 +0100
Message-Id: <20200801182917.28991-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915/gem: Don't drop the timeline lock during
 execbuf
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T3VyIHRpbWVsaW5lIGxvY2sgaXMgb3VyIGRlZmVuY2UgYWdhaW5zdCBhIGNvbmN1cnJlbnQgZXhl
Y2J1ZgppbnRlcnJ1cHRpbmcgb3VyIHJlcXVlc3QgY29uc3RydWN0aW9uLiB3ZSBuZWVkIGhvbGQg
aXQgdGhyb3VnaG91dCBvciwKZm9yIGV4YW1wbGUsIGEgc2Vjb25kIHRocmVhZCBtYXkgaW50ZXJq
ZWN0IGEgcmVsb2NhdGlvbiByZXF1ZXN0IGluCmJldHdlZW4gb3VyIG93biByZWxvY2F0aW9uIHJl
cXVlc3QgYW5kIGV4ZWN1dGlvbiBpbiB0aGUgcmluZy4KCkEgc2Vjb25kLCBtYWpvciBiZW5lZml0
LCBpcyB0aGF0IGl0IGFsbG93cyB1cyB0byBwcmVzZXJ2ZSBhIGxhcmdlIGNodW5rCm9mIHRoZSBy
aW5nYnVmZmVyIGZvciBvdXIgZXhjbHVzaXZlIHVzZTsgd2hpY2ggc2hvdWxkIHZpcnR1YWxseQpl
bGltaW5hdGUgdGhlIHRocmVhdCBvZiBoaXR0aW5nIGEgd2FpdF9mb3Jfc3BhY2UgZHVyaW5nIHJl
cXVlc3QKY29uc3RydWN0aW9uIC0tIGFsdGhvdWdoIHdlIHNob3VsZCBoYXZlIGFscmVhZHkgZHJv
cHBlZCBvdGhlcgpjb250ZW50aW91cyBsb2NrcyBhdCB0aGF0IHBvaW50LgoKU2lnbmVkLW9mZi1i
eTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+ClJldmlld2VkLWJ5OiBU
aG9tYXMgSGVsbHN0csO2bSA8dGhvbWFzLmhlbGxzdHJvbUBpbnRlbC5jb20+Ci0tLQogLi4uL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jICAgIHwgNDEzICsrKysrKysrKysr
LS0tLS0tLQogLi4uL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9leGVjYnVmZmVyLmMgIHwg
IDI0ICstCiAyIGZpbGVzIGNoYW5nZWQsIDI4MiBpbnNlcnRpb25zKCspLCAxNTUgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNi
dWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMK
aW5kZXggMDdjYjJkZDBmNzk1Li40YWRmOWJmMTUwOTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpAQCAtMjU5LDYgKzI1OSw4IEBAIHN0cnVj
dCBpOTE1X2V4ZWNidWZmZXIgewogCQlib29sIGhhc19mZW5jZSA6IDE7CiAJCWJvb2wgbmVlZHNf
dW5mZW5jZWQgOiAxOwogCisJCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwogCQlzdHJ1Y3Qg
aTkxNV92bWEgKnRhcmdldDsKIAkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAJCXN0cnVjdCBp
OTE1X3ZtYSAqcnFfdm1hOwpAQCAtNjM5LDYgKzY0MSwzNSBAQCBzdGF0aWMgaW50IGViX3Jlc2Vy
dmVfdm1hKGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCXJldHVybiAwOwogfQog
CitzdGF0aWMgdm9pZCByZXRpcmVfcmVxdWVzdHMoc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCkK
K3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOworCisJbGlzdF9mb3JfZWFjaF9lbnRy
eV9zYWZlKHJxLCBybiwgJnRsLT5yZXF1ZXN0cywgbGluaykKKwkJaWYgKCFpOTE1X3JlcXVlc3Rf
cmV0aXJlKHJxKSkKKwkJCWJyZWFrOworfQorCitzdGF0aWMgaW50IHdhaXRfZm9yX3RpbWVsaW5l
KHN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwpCit7CisJZG8geworCQlzdHJ1Y3QgZG1hX2ZlbmNl
ICpmZW5jZTsKKwkJaW50IGVycjsKKworCQlmZW5jZSA9IGk5MTVfYWN0aXZlX2ZlbmNlX2dldCgm
dGwtPmxhc3RfcmVxdWVzdCk7CisJCWlmICghZmVuY2UpCisJCQlyZXR1cm4gMDsKKworCQllcnIg
PSBkbWFfZmVuY2Vfd2FpdChmZW5jZSwgdHJ1ZSk7CisJCWRtYV9mZW5jZV9wdXQoZmVuY2UpOwor
CQlpZiAoZXJyKQorCQkJcmV0dXJuIGVycjsKKworCQkvKiBSZXRpcmluZyBtYXkgdHJpZ2dlciBh
IGJhcnJpZXIsIHJlcXVpcmluZyBhbiBleHRyYSBwYXNzICovCisJCXJldGlyZV9yZXF1ZXN0cyh0
bCk7CisJfSB3aGlsZSAoMSk7Cit9CisKIHN0YXRpYyBpbnQgZWJfcmVzZXJ2ZShzdHJ1Y3QgaTkx
NV9leGVjYnVmZmVyICplYikKIHsKIAljb25zdCB1bnNpZ25lZCBpbnQgY291bnQgPSBlYi0+YnVm
ZmVyX2NvdW50OwpAQCAtNjQ2LDcgKzY3Nyw2IEBAIHN0YXRpYyBpbnQgZWJfcmVzZXJ2ZShzdHJ1
Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAlzdHJ1Y3QgbGlzdF9oZWFkIGxhc3Q7CiAJc3RydWN0
IGViX3ZtYSAqZXY7CiAJdW5zaWduZWQgaW50IGksIHBhc3M7Ci0JaW50IGVyciA9IDA7CiAKIAkv
KgogCSAqIEF0dGVtcHQgdG8gcGluIGFsbCBvZiB0aGUgYnVmZmVycyBpbnRvIHRoZSBHVFQuCkBA
IC02NjIsMTggKzY5MiwzNyBAQCBzdGF0aWMgaW50IGViX3Jlc2VydmUoc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIpCiAJICogcm9vbSBmb3IgdGhlIGVhcmxpZXIgb2JqZWN0cyAqdW5sZXNzKiB3
ZSBuZWVkIHRvIGRlZnJhZ21lbnQuCiAJICovCiAKLQlpZiAobXV0ZXhfbG9ja19pbnRlcnJ1cHRp
YmxlKCZlYi0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCkpCi0JCXJldHVybiAtRUlOVFI7Ci0KIAlw
YXNzID0gMDsKIAlkbyB7CisJCWludCBlcnIgPSAwOworCisJCS8qCisJCSAqIFdlIG5lZWQgdG8g
aG9sZCBvbmUgbG9jayBhcyB3ZSBiaW5kIGFsbCB0aGUgdm1hIHNvIHRoYXQKKwkJICogd2UgaGF2
ZSBhIGNvbnNpc3RlbnQgdmlldyBvZiB0aGUgZW50aXJlIHZtIGFuZCBjYW4gcGxhbgorCQkgKiBl
dmljdGlvbnMgdG8gZmlsbCB0aGUgd2hvbGUgR1RULiBJZiB3ZSBhbGxvdyBhIHNlY29uZAorCQkg
KiB0aHJlYWQgdG8gcnVuIGFzIHdlIGRvIHRoaXMsIGl0IHdpbGwgZWl0aGVyIHVuYmluZAorCQkg
KiBldmVyeXRoaW5nIHdlIHdhbnQgcGlubmVkLCBvciBzdGVhbCBzcGFjZSB0aGF0IHdlIG5lZWQg
Zm9yCisJCSAqIG91cnNlbHZlcy4gVGhlIGNsb3NlciB3ZSBhcmUgdG8gYSBmdWxsIEdUVCwgdGhl
IG1vcmUgbGlrZWx5CisJCSAqIHN1Y2ggY29udGVudGlvbiB3aWxsIGNhdXNlIHVzIHRvIGZhaWwg
dG8gYmluZCB0aGUgd29ya2xvYWQKKwkJICogZm9yIHRoaXMgYmF0Y2guIFNpbmNlIHdlIGtub3cg
YXQgdGhpcyBwb2ludCB3ZSBuZWVkIHRvCisJCSAqIGZpbmQgc3BhY2UgZm9yIG5ldyBidWZmZXJz
LCB3ZSBrbm93IHRoYXQgZXh0cmEgcHJlc3N1cmUKKwkJICogZnJvbSBjb250ZW50aW9uIGlzIGxp
a2VseS4KKwkJICoKKwkJICogSW4gbGlldSBvZiBiZWluZyBhYmxlIHRvIGhvbGQgdm0tPm11dGV4
IGZvciB0aGUgZW50aXJlCisJCSAqIHNlcXVlbmNlIChpdCdzIGNvbXBsaWNhdGVkISksIHdlIG9w
dCBmb3Igc3RydWN0X211dGV4LgorCQkgKi8KKwkJaWYgKG11dGV4X2xvY2tfaW50ZXJydXB0aWJs
ZSgmZWItPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpKQorCQkJcmV0dXJuIC1FSU5UUjsKKwogCQls
aXN0X2Zvcl9lYWNoX2VudHJ5KGV2LCAmZWItPnVuYm91bmQsIGJpbmRfbGluaykgewogCQkJZXJy
ID0gZWJfcmVzZXJ2ZV92bWEoZWIsIGV2LCBwaW5fZmxhZ3MpOwogCQkJaWYgKGVycikKIAkJCQli
cmVhazsKIAkJfQotCQlpZiAoIShlcnIgPT0gLUVOT1NQQyB8fCBlcnIgPT0gLUVBR0FJTikpCi0J
CQlicmVhazsKKwkJaWYgKCEoZXJyID09IC1FTk9TUEMgfHwgZXJyID09IC1FQUdBSU4pKSB7CisJ
CQltdXRleF91bmxvY2soJmViLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwkJCXJldHVybiBl
cnI7CisJCX0KIAogCQkvKiBSZXNvcnQgKmFsbCogdGhlIG9iamVjdHMgaW50byBwcmlvcml0eSBv
cmRlciAqLwogCQlJTklUX0xJU1RfSEVBRCgmZWItPnVuYm91bmQpOwpAQCAtNzAyLDM4ICs3NTEs
NTAgQEAgc3RhdGljIGludCBlYl9yZXNlcnZlKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQog
CQkJCWxpc3RfYWRkX3RhaWwoJmV2LT5iaW5kX2xpbmssICZsYXN0KTsKIAkJfQogCQlsaXN0X3Nw
bGljZV90YWlsKCZsYXN0LCAmZWItPnVuYm91bmQpOworCQltdXRleF91bmxvY2soJmViLT5pOTE1
LT5kcm0uc3RydWN0X211dGV4KTsKIAogCQlpZiAoZXJyID09IC1FQUdBSU4pIHsKLQkJCW11dGV4
X3VubG9jaygmZWItPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCQkJZmx1c2hfd29ya3F1ZXVl
KGViLT5pOTE1LT5tbS51c2VycHRyX3dxKTsKLQkJCW11dGV4X2xvY2soJmViLT5pOTE1LT5kcm0u
c3RydWN0X211dGV4KTsKIAkJCWNvbnRpbnVlOwogCQl9CiAKKwkJLyoKKwkJICogV2UgZmFpbGVk
IHRvIGJpbmQgb3VyIHdvcmtsb2FkOyB0aGVyZSdzIG5vdCBlbm91Z2ggc3BhY2UuCisJCSAqCisJ
CSAqIFRoaXMgY291bGQgYmUgZHVlIHRvIHVzZXJzcGFjZSB0cnlpbmcgdG8gc3VibWl0IGEgd29y
a2xvYWQKKwkJICogdGhhdCByZXF1aXJlcyBtb3JlIHNwYWNlIHRoYW4gaXMgYXZhaWxhYmxlIGlu
IGFuIGVtcHR5IEdUVCwKKwkJICogYnV0IG1vcmUgbGlrZWx5IGl0IG1lYW5zIHRoYXQgc29tZSBj
bGllbnQgaXMgdGVtcG9yYXJpbHkKKwkJICogaG9sZGluZyBvbnRvIHByZXNzdXJlIHNwYWNlLiBJ
ZiB3ZSB3YWl0IGFuZCBmbHVzaCB0aGUKKwkJICogdGltZWxpbmUsIHRoYXQgd2lsbCByZWR1Y2Ug
dGhlIGNvbmN1cnJlbnQgcHJlc3N1cmUKKwkJICogZ2l2aW5nIHVzIGEgY2xlYW4gc2hvdCBhdCBh
bGxvY2F0aW5nIG91ciB3b3JrbG9hZC4KKwkJICoKKwkJICogSG93ZXZlciwgYWZ0ZXIgd2FpdGlu
ZyB3ZSBtYXkgY29tcGV0ZSBvbmNlIG1vcmUgd2l0aCBuZXcKKwkJICogY2xpZW50cy4gV2l0aG91
dCBhIHRpY2tldGxvY2sgb3Igc29tZSBvdGhlciBtZWNoYW5pc20sCisJCSAqIHRoZXJlIGlzIG5v
IGd1YXJhbnRlZSB0aGF0IHdlIHdpbGwgc3VjY2VlZCBpbiBjbGFpbWluZworCQkgKiB0b3RhbCBv
d25lcnNoaXAgb2YgdGhlIHZtLgorCQkgKi8KIAkJc3dpdGNoIChwYXNzKyspIHsKIAkJY2FzZSAw
OgogCQkJYnJlYWs7CiAKIAkJY2FzZSAxOgotCQkJLyogVG9vIGZyYWdtZW50ZWQsIHVuYmluZCBl
dmVyeXRoaW5nIGFuZCByZXRyeSAqLwotCQkJbXV0ZXhfbG9jaygmZWItPmNvbnRleHQtPnZtLT5t
dXRleCk7Ci0JCQllcnIgPSBpOTE1X2dlbV9ldmljdF92bShlYi0+Y29udGV4dC0+dm0pOwotCQkJ
bXV0ZXhfdW5sb2NrKCZlYi0+Y29udGV4dC0+dm0tPm11dGV4KTsKKwkJCS8qCisJCQkgKiBUb28g
ZnJhZ21lbnRlZCwgcmV0aXJlIGV2ZXJ5dGhpbmcgb24gdGhlIHRpbWVsaW5lCisJCQkgKiBhbmQg
c28gbWFrZSBpdCBhbGwgW2NvbnRleHRzIGluY2x1ZGVkXSBhdmFpbGFibGUgdG8KKwkJCSAqIGV2
aWN0LgorCQkJICovCisJCQllcnIgPSB3YWl0X2Zvcl90aW1lbGluZShlYi0+Y29udGV4dC0+dGlt
ZWxpbmUpOwogCQkJaWYgKGVycikKLQkJCQlnb3RvIHVubG9jazsKKwkJCQlyZXR1cm4gZXJyOwor
CiAJCQlicmVhazsKIAogCQlkZWZhdWx0OgotCQkJZXJyID0gLUVOT1NQQzsKLQkJCWdvdG8gdW5s
b2NrOworCQkJcmV0dXJuIC1FTk9TUEM7CiAJCX0KIAogCQlwaW5fZmxhZ3MgPSBQSU5fVVNFUjsK
IAl9IHdoaWxlICgxKTsKLQotdW5sb2NrOgotCW11dGV4X3VubG9jaygmZWItPmk5MTUtPmRybS5z
dHJ1Y3RfbXV0ZXgpOwotCXJldHVybiBlcnI7CiB9CiAKIHN0YXRpYyB1bnNpZ25lZCBpbnQgZWJf
YmF0Y2hfaW5kZXgoY29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCkBAIC0xMDA3LDEz
ICsxMDY4LDQ0IEBAIHN0YXRpYyBpbnQgcmVsb2NfZ3B1X2NoYWluKHN0cnVjdCByZWxvY19jYWNo
ZSAqY2FjaGUpCiAJcmV0dXJuIGVycjsKIH0KIAorc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KgorbmVzdGVkX3JlcXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCS8qIFhYWCBUaGlzIG9ubHkgd29ya3Mgb25jZTsg
cmVwbGFjZSB3aXRoIHNoYXJlZCB0aW1lbGluZSAqLworCW11dGV4X2xvY2tfbmVzdGVkKCZjZS0+
dGltZWxpbmUtPm11dGV4LCBTSU5HTEVfREVQVEhfTkVTVElORyk7CisJaW50ZWxfY29udGV4dF9l
bnRlcihjZSk7CisKKwlycSA9IF9faTkxNV9yZXF1ZXN0X2NyZWF0ZShjZSwgR0ZQX0tFUk5FTCk7
CisKKwlpbnRlbF9jb250ZXh0X2V4aXQoY2UpOworCWlmIChJU19FUlIocnEpKQorCQltdXRleF91
bmxvY2soJmNlLT50aW1lbGluZS0+bXV0ZXgpOworCisJcmV0dXJuIHJxOworfQorCitzdGF0aWMg
dm9pZCBfX2k5MTVfcmVxdWVzdF9hZGQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCisJCQkgICAg
ICAgc3RydWN0IGk5MTVfc2NoZWRfYXR0ciAqYXR0cikKK3sKKwlzdHJ1Y3QgaW50ZWxfdGltZWxp
bmUgKiBjb25zdCB0bCA9IGk5MTVfcmVxdWVzdF90aW1lbGluZShycSk7CisKKwlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZ0bC0+bXV0ZXgpOworCWxvY2tkZXBfdW5waW5fbG9jaygmdGwtPm11dGV4LCBy
cS0+Y29va2llKTsKKworCV9faTkxNV9yZXF1ZXN0X2NvbW1pdChycSk7CisJX19pOTE1X3JlcXVl
c3RfcXVldWUocnEsIGF0dHIpOworfQorCiBzdGF0aWMgdW5zaWduZWQgaW50IHJlbG9jX2JiX2Zs
YWdzKGNvbnN0IHN0cnVjdCByZWxvY19jYWNoZSAqY2FjaGUpCiB7CiAJcmV0dXJuIGNhY2hlLT5n
ZW4gPiA1ID8gMCA6IEk5MTVfRElTUEFUQ0hfU0VDVVJFOwogfQogCi1zdGF0aWMgaW50IHJlbG9j
X2dwdV9mbHVzaChzdHJ1Y3QgcmVsb2NfY2FjaGUgKmNhY2hlKQorc3RhdGljIGludCByZWxvY19n
cHVfZmx1c2goc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiB7CisJc3RydWN0IHJlbG9jX2Nh
Y2hlICpjYWNoZSA9ICZlYi0+cmVsb2NfY2FjaGU7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7
CiAJaW50IGVycjsKIApAQCAtMTA0NCw3ICsxMTM2LDkgQEAgc3RhdGljIGludCByZWxvY19ncHVf
Zmx1c2goc3RydWN0IHJlbG9jX2NhY2hlICpjYWNoZSkKIAkJaTkxNV9yZXF1ZXN0X3NldF9lcnJv
cl9vbmNlKHJxLCBlcnIpOwogCiAJaW50ZWxfZ3RfY2hpcHNldF9mbHVzaChycS0+ZW5naW5lLT5n
dCk7Ci0JaTkxNV9yZXF1ZXN0X2FkZChycSk7CisJX19pOTE1X3JlcXVlc3RfYWRkKHJxLCAmZWIt
PmdlbV9jb250ZXh0LT5zY2hlZCk7CisJaWYgKGk5MTVfcmVxdWVzdF90aW1lbGluZShycSkgIT0g
ZWItPmNvbnRleHQtPnRpbWVsaW5lKQorCQltdXRleF91bmxvY2soJmk5MTVfcmVxdWVzdF90aW1l
bGluZShycSktPm11dGV4KTsKIAogCXJldHVybiBlcnI7CiB9CkBAIC0xMTAzLDI3ICsxMTk3LDE1
IEBAIHN0YXRpYyBpbnQgX19yZWxvY19ncHVfYWxsb2Moc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAq
ZWIsCiAJaWYgKGVycikKIAkJZ290byBlcnJfdW5tYXA7CiAKLQlpZiAoZW5naW5lID09IGViLT5j
b250ZXh0LT5lbmdpbmUpIHsKLQkJcnEgPSBpOTE1X3JlcXVlc3RfY3JlYXRlKGViLT5jb250ZXh0
KTsKLQl9IGVsc2UgewotCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7Ci0KLQkJY2UgPSBpbnRl
bF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwotCQlpZiAoSVNfRVJSKGNlKSkgewotCQkJZXJyID0g
UFRSX0VSUihjZSk7Ci0JCQlnb3RvIGVycl91bnBpbjsKLQkJfQotCi0JCWk5MTVfdm1fcHV0KGNl
LT52bSk7Ci0JCWNlLT52bSA9IGk5MTVfdm1fZ2V0KGViLT5jb250ZXh0LT52bSk7Ci0KLQkJcnEg
PSBpbnRlbF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KGNlKTsKLQkJaW50ZWxfY29udGV4dF9wdXQo
Y2UpOwotCX0KKwlpZiAoY2FjaGUtPmNlID09IGViLT5jb250ZXh0KQorCQlycSA9IF9faTkxNV9y
ZXF1ZXN0X2NyZWF0ZShjYWNoZS0+Y2UsIEdGUF9LRVJORUwpOworCWVsc2UKKwkJcnEgPSBuZXN0
ZWRfcmVxdWVzdF9jcmVhdGUoY2FjaGUtPmNlKTsKIAlpZiAoSVNfRVJSKHJxKSkgewogCQllcnIg
PSBQVFJfRVJSKHJxKTsKIAkJZ290byBlcnJfdW5waW47CiAJfQorCXJxLT5jb29raWUgPSBsb2Nr
ZGVwX3Bpbl9sb2NrKCZpOTE1X3JlcXVlc3RfdGltZWxpbmUocnEpLT5tdXRleCk7CiAKIAllcnIg
PSBpbnRlbF9ndF9idWZmZXJfcG9vbF9tYXJrX2FjdGl2ZShwb29sLCBycSk7CiAJaWYgKGVycikK
QEAgLTExNTEsNyArMTIzMyw5IEBAIHN0YXRpYyBpbnQgX19yZWxvY19ncHVfYWxsb2Moc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiBza2lwX3JlcXVlc3Q6CiAJaTkxNV9yZXF1ZXN0X3NldF9l
cnJvcl9vbmNlKHJxLCBlcnIpOwogZXJyX3JlcXVlc3Q6Ci0JaTkxNV9yZXF1ZXN0X2FkZChycSk7
CisJX19pOTE1X3JlcXVlc3RfYWRkKHJxLCAmZWItPmdlbV9jb250ZXh0LT5zY2hlZCk7CisJaWYg
KGk5MTVfcmVxdWVzdF90aW1lbGluZShycSkgIT0gZWItPmNvbnRleHQtPnRpbWVsaW5lKQorCQlt
dXRleF91bmxvY2soJmk5MTVfcmVxdWVzdF90aW1lbGluZShycSktPm11dGV4KTsKIGVycl91bnBp
bjoKIAlpOTE1X3ZtYV91bnBpbihiYXRjaCk7CiBlcnJfdW5tYXA6CkBAIC0xMTYxLDExICsxMjQ1
LDYgQEAgc3RhdGljIGludCBfX3JlbG9jX2dwdV9hbGxvYyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVy
ICplYiwKIAlyZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgYm9vbCByZWxvY19jYW5fdXNlX2VuZ2lu
ZShjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCi17Ci0JcmV0dXJuIGVuZ2lu
ZS0+Y2xhc3MgIT0gVklERU9fREVDT0RFX0NMQVNTIHx8ICFJU19HRU4oZW5naW5lLT5pOTE1LCA2
KTsKLX0KLQogc3RhdGljIHUzMiAqcmVsb2NfZ3B1KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
LAogCQkgICAgICBzdHJ1Y3QgaTkxNV92bWEgKnZtYSwKIAkJICAgICAgdW5zaWduZWQgaW50IGxl
bikKQEAgLTExNzcsMTIgKzEyNTYsNiBAQCBzdGF0aWMgdTMyICpyZWxvY19ncHUoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIsCiAJaWYgKHVubGlrZWx5KCFjYWNoZS0+cnEpKSB7CiAJCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGViLT5lbmdpbmU7CiAKLQkJaWYgKCFyZWxvY19j
YW5fdXNlX2VuZ2luZShlbmdpbmUpKSB7Ci0JCQllbmdpbmUgPSBlbmdpbmUtPmd0LT5lbmdpbmVf
Y2xhc3NbQ09QWV9FTkdJTkVfQ0xBU1NdWzBdOwotCQkJaWYgKCFlbmdpbmUpCi0JCQkJcmV0dXJu
IEVSUl9QVFIoLUVOT0RFVik7Ci0JCX0KLQogCQllcnIgPSBfX3JlbG9jX2dwdV9hbGxvYyhlYiwg
ZW5naW5lLCBsZW4pOwogCQlpZiAodW5saWtlbHkoZXJyKSkKIAkJCXJldHVybiBFUlJfUFRSKGVy
cik7CkBAIC0xNTEzLDcgKzE1ODYsNyBAQCBzdGF0aWMgaW50IGViX3JlbG9jYXRlKHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViKQogCQkJCWJyZWFrOwogCQl9CiAKLQkJZmx1c2ggPSByZWxvY19n
cHVfZmx1c2goJmViLT5yZWxvY19jYWNoZSk7CisJCWZsdXNoID0gcmVsb2NfZ3B1X2ZsdXNoKGVi
KTsKIAkJaWYgKCFlcnIpCiAJCQllcnIgPSBmbHVzaDsKIAl9CkBAIC0xNzA2LDIwICsxNzc5LDkg
QEAgc3RhdGljIGludCBfX2ViX3BhcnNlKHN0cnVjdCBkbWFfZmVuY2Vfd29yayAqd29yaykKIAkJ
CQkgICAgICAgcHctPnRyYW1wb2xpbmUpOwogfQogCi1zdGF0aWMgdm9pZCBfX2ViX3BhcnNlX3Jl
bGVhc2Uoc3RydWN0IGRtYV9mZW5jZV93b3JrICp3b3JrKQotewotCXN0cnVjdCBlYl9wYXJzZV93
b3JrICpwdyA9IGNvbnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKnB3KSwgYmFzZSk7Ci0KLQlpZiAo
cHctPnRyYW1wb2xpbmUpCi0JCWk5MTVfYWN0aXZlX3JlbGVhc2UoJnB3LT50cmFtcG9saW5lLT5h
Y3RpdmUpOwotCWk5MTVfYWN0aXZlX3JlbGVhc2UoJnB3LT5zaGFkb3ctPmFjdGl2ZSk7Ci0JaTkx
NV9hY3RpdmVfcmVsZWFzZSgmcHctPmJhdGNoLT5hY3RpdmUpOwotfQotCiBzdGF0aWMgY29uc3Qg
c3RydWN0IGRtYV9mZW5jZV93b3JrX29wcyBlYl9wYXJzZV9vcHMgPSB7CiAJLm5hbWUgPSAiZWJf
cGFyc2UiLAogCS53b3JrID0gX19lYl9wYXJzZSwKLQkucmVsZWFzZSA9IF9fZWJfcGFyc2VfcmVs
ZWFzZSwKIH07CiAKIHN0YXRpYyBpbmxpbmUgaW50CkBAIC0xNzM3LDIxICsxNzk5LDIzIEBAIHBh
cnNlcl9tYXJrX2FjdGl2ZShzdHJ1Y3QgZWJfcGFyc2Vfd29yayAqcHcsIHN0cnVjdCBpbnRlbF90
aW1lbGluZSAqdGwpCiB7CiAJaW50IGVycjsKIAotCW11dGV4X2xvY2soJnRsLT5tdXRleCk7CisJ
ZXJyID0gaTkxNV9hY3RpdmVfcmVmKCZwdy0+YmF0Y2gtPmFjdGl2ZSwKKwkJCSAgICAgIHRsLT5m
ZW5jZV9jb250ZXh0LAorCQkJICAgICAgJnB3LT5iYXNlLmRtYSk7CisJaWYgKGVycikKKwkJcmV0
dXJuIGVycjsKIAogCWVyciA9IF9fcGFyc2VyX21hcmtfYWN0aXZlKHB3LT5zaGFkb3csIHRsLCAm
cHctPmJhc2UuZG1hKTsKIAlpZiAoZXJyKQotCQlnb3RvIHVubG9jazsKKwkJcmV0dXJuIGVycjsK
IAogCWlmIChwdy0+dHJhbXBvbGluZSkgewogCQllcnIgPSBfX3BhcnNlcl9tYXJrX2FjdGl2ZShw
dy0+dHJhbXBvbGluZSwgdGwsICZwdy0+YmFzZS5kbWEpOwogCQlpZiAoZXJyKQotCQkJZ290byB1
bmxvY2s7CisJCQlyZXR1cm4gZXJyOwogCX0KIAotdW5sb2NrOgotCW11dGV4X3VubG9jaygmdGwt
Pm11dGV4KTsKLQlyZXR1cm4gZXJyOworCXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IGViX3Bh
cnNlX3BpcGVsaW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLApAQCAtMTc2NSwyMCArMTgy
OSw2IEBAIHN0YXRpYyBpbnQgZWJfcGFyc2VfcGlwZWxpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZl
ciAqZWIsCiAJaWYgKCFwdykKIAkJcmV0dXJuIC1FTk9NRU07CiAKLQllcnIgPSBpOTE1X2FjdGl2
ZV9hY3F1aXJlKCZlYi0+YmF0Y2gtPnZtYS0+YWN0aXZlKTsKLQlpZiAoZXJyKQotCQlnb3RvIGVy
cl9mcmVlOwotCi0JZXJyID0gaTkxNV9hY3RpdmVfYWNxdWlyZSgmc2hhZG93LT5hY3RpdmUpOwot
CWlmIChlcnIpCi0JCWdvdG8gZXJyX2JhdGNoOwotCi0JaWYgKHRyYW1wb2xpbmUpIHsKLQkJZXJy
ID0gaTkxNV9hY3RpdmVfYWNxdWlyZSgmdHJhbXBvbGluZS0+YWN0aXZlKTsKLQkJaWYgKGVycikK
LQkJCWdvdG8gZXJyX3NoYWRvdzsKLQl9Ci0KIAlkbWFfZmVuY2Vfd29ya19pbml0KCZwdy0+YmFz
ZSwgJmViX3BhcnNlX29wcyk7CiAKIAlwdy0+ZW5naW5lID0gZWItPmVuZ2luZTsKQEAgLTE4Mjcs
MTQgKzE4NzcsNiBAQCBzdGF0aWMgaW50IGViX3BhcnNlX3BpcGVsaW5lKHN0cnVjdCBpOTE1X2V4
ZWNidWZmZXIgKmViLAogCWk5MTVfc3dfZmVuY2Vfc2V0X2Vycm9yX29uY2UoJnB3LT5iYXNlLmNo
YWluLCBlcnIpOwogCWRtYV9mZW5jZV93b3JrX2NvbW1pdF9pbW0oJnB3LT5iYXNlKTsKIAlyZXR1
cm4gZXJyOwotCi1lcnJfc2hhZG93OgotCWk5MTVfYWN0aXZlX3JlbGVhc2UoJnNoYWRvdy0+YWN0
aXZlKTsKLWVycl9iYXRjaDoKLQlpOTE1X2FjdGl2ZV9yZWxlYXNlKCZlYi0+YmF0Y2gtPnZtYS0+
YWN0aXZlKTsKLWVycl9mcmVlOgotCWtmcmVlKHB3KTsKLQlyZXR1cm4gZXJyOwogfQogCiBzdGF0
aWMgaW50IGViX3BhcnNlKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQpAQCAtMjAzMSwzMiAr
MjA3Myw2MyBAQCBzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAqZWJfdGhyb3R0bGUoc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQogCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKIH0KIAot
c3RhdGljIGludCBfX2ViX3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3N0YXRpYyBib29sIHJlbG9jX2Nhbl91c2VfZW5naW5l
KGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlzdHJ1Y3QgaW50ZWxf
dGltZWxpbmUgKnRsOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCXJldHVybiBlbmdpbmUt
PmNsYXNzICE9IFZJREVPX0RFQ09ERV9DTEFTUyB8fCAhSVNfR0VOKGVuZ2luZS0+aTkxNSwgNik7
Cit9CisKK3N0YXRpYyBpbnQgX19lYl9waW5fcmVsb2NfZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNi
dWZmZXIgKmViKQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGViLT5lbmdp
bmU7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCWludCBlcnI7CiAKLQkvKgotCSAqIEFC
STogQmVmb3JlIHVzZXJzcGFjZSBhY2Nlc3NlcyB0aGUgR1BVIChlLmcuIGV4ZWNidWZmZXIpLCBy
ZXBvcnQKLQkgKiBFSU8gaWYgdGhlIEdQVSBpcyBhbHJlYWR5IHdlZGdlZC4KLQkgKi8KLQllcnIg
PSBpbnRlbF9ndF90ZXJtaW5hbGx5X3dlZGdlZChjZS0+ZW5naW5lLT5ndCk7Ci0JaWYgKGVycikK
LQkJcmV0dXJuIGVycjsKKwlpZiAocmVsb2NfY2FuX3VzZV9lbmdpbmUoZW5naW5lKSkgeworCQll
Yi0+cmVsb2NfY2FjaGUuY2UgPSBlYi0+Y29udGV4dDsKKwkJcmV0dXJuIDA7CisJfQogCi0JaWYg
KHVubGlrZWx5KGludGVsX2NvbnRleHRfaXNfYmFubmVkKGNlKSkpCi0JCXJldHVybiAtRUlPOwor
CWVuZ2luZSA9IGVuZ2luZS0+Z3QtPmVuZ2luZV9jbGFzc1tDT1BZX0VOR0lORV9DTEFTU11bMF07
CisJaWYgKCFlbmdpbmUpCisJCXJldHVybiAtRU5PREVWOworCisJY2UgPSBpbnRlbF9jb250ZXh0
X2NyZWF0ZShlbmdpbmUpOworCWlmIChJU19FUlIoY2UpKQorCQlyZXR1cm4gUFRSX0VSUihjZSk7
CisKKwkvKiBSZXVzZSBlYi0+Y29udGV4dC0+dGltZWxpbmUgd2l0aCBzY2hlZHVsZXIhICovCisJ
aWYgKGVuZ2luZS0+c2NoZWR1bGUpCisJCWNlLT50aW1lbGluZSA9IGludGVsX3RpbWVsaW5lX2dl
dChlYi0+Y29udGV4dC0+dGltZWxpbmUpOworCisJaTkxNV92bV9wdXQoY2UtPnZtKTsKKwljZS0+
dm0gPSBpOTE1X3ZtX2dldChlYi0+Y29udGV4dC0+dm0pOwogCi0JLyoKLQkgKiBQaW5uaW5nIHRo
ZSBjb250ZXh0cyBtYXkgZ2VuZXJhdGUgcmVxdWVzdHMgaW4gb3JkZXIgdG8gYWNxdWlyZQotCSAq
IEdHVFQgc3BhY2UsIHNvIGRvIHRoaXMgZmlyc3QgYmVmb3JlIHdlIHJlc2VydmUgYSBzZXFubyBm
b3IKLQkgKiBvdXJzZWx2ZXMuCi0JICovCiAJZXJyID0gaW50ZWxfY29udGV4dF9waW4oY2UpOwog
CWlmIChlcnIpCiAJCXJldHVybiBlcnI7CiAKKwllYi0+cmVsb2NfY2FjaGUuY2UgPSBjZTsKKwly
ZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgX19lYl91bnBpbl9yZWxvY19lbmdpbmUoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZWIt
PnJlbG9jX2NhY2hlLmNlOworCisJaWYgKGNlID09IGViLT5jb250ZXh0KQorCQlyZXR1cm47CisK
KwlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwlpbnRlbF9jb250ZXh0X3B1dChjZSk7Cit9CisK
K3N0YXRpYyBpbnQgZWJfbG9ja19lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCit7
CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZWItPmNvbnRleHQ7CisJc3RydWN0IGludGVs
X3RpbWVsaW5lICp0bDsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwlpbnQgZXJyOworCiAJ
LyoKIAkgKiBUYWtlIGEgbG9jYWwgd2FrZXJlZiBmb3IgcHJlcGFyaW5nIHRvIGRpc3BhdGNoIHRo
ZSBleGVjYnVmIGFzCiAJICogd2UgZXhwZWN0IHRvIGFjY2VzcyB0aGUgaGFyZHdhcmUgZmFpcmx5
IGZyZXF1ZW50bHkgaW4gdGhlCkBAIC0yMDY2LDE3ICsyMTM5LDE3IEBAIHN0YXRpYyBpbnQgX19l
Yl9waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UpCiAJICogdGFrZW4gb24gdGhlIGVuZ2luZSwgYW5kIHRoZSBwYXJlbnQgZGV2aWNl
LgogCSAqLwogCXRsID0gaW50ZWxfY29udGV4dF90aW1lbGluZV9sb2NrKGNlKTsKLQlpZiAoSVNf
RVJSKHRsKSkgewotCQllcnIgPSBQVFJfRVJSKHRsKTsKLQkJZ290byBlcnJfdW5waW47Ci0JfQor
CWlmIChJU19FUlIodGwpKQorCQlyZXR1cm4gUFRSX0VSUih0bCk7CiAKIAlpbnRlbF9jb250ZXh0
X2VudGVyKGNlKTsKLQlycSA9IGViX3Rocm90dGxlKGNlKTsKLQotCWludGVsX2NvbnRleHRfdGlt
ZWxpbmVfdW5sb2NrKHRsKTsKIAotCWlmIChycSkgeworCS8qCisJICogQmVmb3JlIHdlIGJlZ2lu
LCBtYWtlIHN1cmUgdGhlcmUgaXMgZW5vdWdoIHNwYWNlIGluIHRoZSByaW5nIHRvCisJICogYnVp
bGQgdGhlIG1pZ2h0aWVzdCBvZiByZXF1ZXN0cywgYW5kIHRvIHJhdGVsaW1pdHMgdGhvc2UgaG9n
cworCSAqIHdobyBkbyBzdWNjZWVkIGluIGZsb29kaW5nIHRoZSByaW5ncy4KKwkgKi8KKwl3aGls
ZSAoKHJxID0gZWJfdGhyb3R0bGUoY2UpKSkgewogCQlib29sIG5vbmJsb2NrID0gZWItPmZpbGUt
PmZpbHAtPmZfZmxhZ3MgJiBPX05PTkJMT0NLOwogCQlsb25nIHRpbWVvdXQ7CiAKQEAgLTIwODQs
NDAgKzIxNTcsNTEgQEAgc3RhdGljIGludCBfX2ViX3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVfZXhl
Y2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAkJaWYgKG5vbmJsb2NrKQog
CQkJdGltZW91dCA9IDA7CiAKKwkJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOworCiAJCXRpbWVv
dXQgPSBpOTE1X3JlcXVlc3Rfd2FpdChycSwKIAkJCQkJICAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJ
QkxFLAogCQkJCQkgICAgdGltZW91dCk7CiAJCWk5MTVfcmVxdWVzdF9wdXQocnEpOwogCisJCW11
dGV4X2xvY2soJnRsLT5tdXRleCk7CisKIAkJaWYgKHRpbWVvdXQgPCAwKSB7CiAJCQllcnIgPSBu
b25ibG9jayA/IC1FV09VTERCTE9DSyA6IHRpbWVvdXQ7CiAJCQlnb3RvIGVycl9leGl0OwogCQl9
CisKKwkJcmV0aXJlX3JlcXVlc3RzKHRsKTsKIAl9CiAKLQllYi0+ZW5naW5lID0gY2UtPmVuZ2lu
ZTsKLQllYi0+Y29udGV4dCA9IGNlOworCWVyciA9IF9fZWJfcGluX3JlbG9jX2VuZ2luZShlYik7
CisJaWYgKGVycikKKwkJZ290byBlcnJfZXhpdDsKKwogCXJldHVybiAwOwogCiBlcnJfZXhpdDoK
LQltdXRleF9sb2NrKCZ0bC0+bXV0ZXgpOwogCWludGVsX2NvbnRleHRfZXhpdChjZSk7CiAJaW50
ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2sodGwpOwotZXJyX3VucGluOgotCWludGVsX2NvbnRl
eHRfdW5waW4oY2UpOwogCXJldHVybiBlcnI7CiB9CiAKLXN0YXRpYyB2b2lkIGViX3VucGluX2Vu
Z2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKK3N0YXRpYyB2b2lkIGViX3VubG9ja19l
bmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiB7CiAJc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlID0gZWItPmNvbnRleHQ7Ci0Jc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IGNlLT50
aW1lbGluZTsKIAotCW11dGV4X2xvY2soJnRsLT5tdXRleCk7CisJX19lYl91bnBpbl9yZWxvY19l
bmdpbmUoZWIpOworCisJLyogVHJ5IHRvIGNsZWFuIHVwIHRoZSBjbGllbnQncyB0aW1lbGluZSBh
ZnRlciBzdWJtaXR0aW5nIHRoZSByZXF1ZXN0ICovCisJcmV0aXJlX3JlcXVlc3RzKGNlLT50aW1l
bGluZSk7CisKIAlpbnRlbF9jb250ZXh0X2V4aXQoY2UpOwotCW11dGV4X3VubG9jaygmdGwtPm11
dGV4KTsKKwlpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayhjZS0+dGltZWxpbmUpOworfQog
Ci0JaW50ZWxfY29udGV4dF91bnBpbihjZSk7CitzdGF0aWMgdm9pZCBlYl91bnBpbl9lbmdpbmUo
c3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCit7CisJaW50ZWxfY29udGV4dF91bnBpbihlYi0+
Y29udGV4dCk7CiB9CiAKIHN0YXRpYyB1bnNpZ25lZCBpbnQKQEAgLTIxNjQsNiArMjI0OCwzNSBA
QCBlYl9zZWxlY3RfbGVnYWN5X3Jpbmcoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJcmV0
dXJuIHVzZXJfcmluZ19tYXBbdXNlcl9yaW5nX2lkXTsKIH0KIAorc3RhdGljIGludCBfX2ViX3Bp
bl9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSkKK3sKKwlpbnQgZXJyOworCisJLyoKKwkgKiBBQkk6IEJlZm9yZSB1c2Vyc3BhY2UgYWNj
ZXNzZXMgdGhlIEdQVSAoZS5nLiBleGVjYnVmZmVyKSwgcmVwb3J0CisJICogRUlPIGlmIHRoZSBH
UFUgaXMgYWxyZWFkeSB3ZWRnZWQuCisJICovCisJZXJyID0gaW50ZWxfZ3RfdGVybWluYWxseV93
ZWRnZWQoY2UtPmVuZ2luZS0+Z3QpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlpZiAo
dW5saWtlbHkoaW50ZWxfY29udGV4dF9pc19iYW5uZWQoY2UpKSkKKwkJcmV0dXJuIC1FSU87CisK
KwkvKgorCSAqIFBpbm5pbmcgdGhlIGNvbnRleHRzIG1heSBnZW5lcmF0ZSByZXF1ZXN0cyBpbiBv
cmRlciB0byBhY3F1aXJlCisJICogR0dUVCBzcGFjZSwgc28gZG8gdGhpcyBmaXJzdCBiZWZvcmUg
d2UgcmVzZXJ2ZSBhIHNlcW5vIGZvcgorCSAqIG91cnNlbHZlcy4KKwkgKi8KKwllcnIgPSBpbnRl
bF9jb250ZXh0X3BpbihjZSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWViLT5lbmdp
bmUgPSBjZS0+ZW5naW5lOworCWViLT5jb250ZXh0ID0gY2U7CisJcmV0dXJuIDA7Cit9CisKIHN0
YXRpYyBpbnQKIGViX3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJICAg
ICAgc3RydWN0IGRybV9maWxlICpmaWxlLApAQCAtMjMxNywyOCArMjQzMCwxOCBAQCBzaWduYWxf
ZmVuY2VfYXJyYXkoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJfQogfQogCi1zdGF0aWMg
dm9pZCByZXRpcmVfcmVxdWVzdHMoc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCwgc3RydWN0IGk5
MTVfcmVxdWVzdCAqZW5kKQotewotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47Ci0KLQls
aXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocnEsIHJuLCAmdGwtPnJlcXVlc3RzLCBsaW5rKQotCQlp
ZiAocnEgPT0gZW5kIHx8ICFpOTE1X3JlcXVlc3RfcmV0aXJlKHJxKSkKLQkJCWJyZWFrOwotfQot
CiBzdGF0aWMgdm9pZCBlYl9yZXF1ZXN0X2FkZChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikK
IHsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IGViLT5yZXF1ZXN0OwogCXN0cnVjdCBpbnRl
bF90aW1lbGluZSAqIGNvbnN0IHRsID0gaTkxNV9yZXF1ZXN0X3RpbWVsaW5lKHJxKTsKIAlzdHJ1
Y3QgaTkxNV9zY2hlZF9hdHRyIGF0dHIgPSB7fTsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpwcmV2
OwogCiAJbG9ja2RlcF9hc3NlcnRfaGVsZCgmdGwtPm11dGV4KTsKIAlsb2NrZGVwX3VucGluX2xv
Y2soJnRsLT5tdXRleCwgcnEtPmNvb2tpZSk7CiAKIAl0cmFjZV9pOTE1X3JlcXVlc3RfYWRkKHJx
KTsKIAotCXByZXYgPSBfX2k5MTVfcmVxdWVzdF9jb21taXQocnEpOworCV9faTkxNV9yZXF1ZXN0
X2NvbW1pdChycSk7CiAKIAkvKiBDaGVjayB0aGF0IHRoZSBjb250ZXh0IHdhc24ndCBkZXN0cm95
ZWQgYmVmb3JlIHN1Ym1pc3Npb24gKi8KIAlpZiAobGlrZWx5KCFpbnRlbF9jb250ZXh0X2lzX2Ns
b3NlZChlYi0+Y29udGV4dCkpKSB7CkBAIC0yMzUwLDEyICsyNDUzLDYgQEAgc3RhdGljIHZvaWQg
ZWJfcmVxdWVzdF9hZGQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiAJfQogCiAJX19pOTE1
X3JlcXVlc3RfcXVldWUocnEsICZhdHRyKTsKLQotCS8qIFRyeSB0byBjbGVhbiB1cCB0aGUgY2xp
ZW50J3MgdGltZWxpbmUgYWZ0ZXIgc3VibWl0dGluZyB0aGUgcmVxdWVzdCAqLwotCWlmIChwcmV2
KQotCQlyZXRpcmVfcmVxdWVzdHModGwsIHByZXYpOwotCi0JbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0
ZXgpOwogfQogCiBzdGF0aWMgaW50CkBAIC0yNDQzLDYgKzI1NDAsMTIgQEAgaTkxNV9nZW1fZG9f
ZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIpKQog
CQlnb3RvIGVycl9jb250ZXh0OwogCisJLyogKioqIFRJTUVMSU5FIExPQ0sgKioqICovCisJZXJy
ID0gZWJfbG9ja19lbmdpbmUoJmViKTsKKwlpZiAodW5saWtlbHkoZXJyKSkKKwkJZ290byBlcnJf
ZW5naW5lOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmViLmNvbnRleHQtPnRpbWVsaW5lLT5tdXRl
eCk7CisKIAllcnIgPSBlYl9yZWxvY2F0ZSgmZWIpOwogCWlmIChlcnIpIHsKIAkJLyoKQEAgLTI1
MDksMTEgKzI2MTIsMTIgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LAogCUdFTV9CVUdfT04oZWIucmVsb2NfY2FjaGUucnEpOwogCiAJLyogQWxsb2NhdGUg
YSByZXF1ZXN0IGZvciB0aGlzIGJhdGNoIGJ1ZmZlciBuaWNlIGFuZCBlYXJseS4gKi8KLQllYi5y
ZXF1ZXN0ID0gaTkxNV9yZXF1ZXN0X2NyZWF0ZShlYi5jb250ZXh0KTsKKwllYi5yZXF1ZXN0ID0g
X19pOTE1X3JlcXVlc3RfY3JlYXRlKGViLmNvbnRleHQsIEdGUF9LRVJORUwpOwogCWlmIChJU19F
UlIoZWIucmVxdWVzdCkpIHsKIAkJZXJyID0gUFRSX0VSUihlYi5yZXF1ZXN0KTsKIAkJZ290byBl
cnJfYmF0Y2hfdW5waW47CiAJfQorCWViLnJlcXVlc3QtPmNvb2tpZSA9IGxvY2tkZXBfcGluX2xv
Y2soJmViLmNvbnRleHQtPnRpbWVsaW5lLT5tdXRleCk7CiAKIAlpZiAoaW5fZmVuY2UpIHsKIAkJ
aWYgKGFyZ3MtPmZsYWdzICYgSTkxNV9FWEVDX0ZFTkNFX1NVQk1JVCkKQEAgLTI1NjEsMTYgKzI2
NjUsNiBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJ
aWYgKGZlbmNlcykKIAkJc2lnbmFsX2ZlbmNlX2FycmF5KCZlYiwgZmVuY2VzKTsKIAotCWlmIChv
dXRfZmVuY2UpIHsKLQkJaWYgKGVyciA9PSAwKSB7Ci0JCQlmZF9pbnN0YWxsKG91dF9mZW5jZV9m
ZCwgb3V0X2ZlbmNlLT5maWxlKTsKLQkJCWFyZ3MtPnJzdmQyICY9IEdFTk1BU0tfVUxMKDMxLCAw
KTsgLyoga2VlcCBpbi1mZW5jZSAqLwotCQkJYXJncy0+cnN2ZDIgfD0gKHU2NClvdXRfZmVuY2Vf
ZmQgPDwgMzI7Ci0JCQlvdXRfZmVuY2VfZmQgPSAtMTsKLQkJfSBlbHNlIHsKLQkJCWZwdXQob3V0
X2ZlbmNlLT5maWxlKTsKLQkJfQotCX0KIAlpOTE1X3JlcXVlc3RfcHV0KGViLnJlcXVlc3QpOwog
CiBlcnJfYmF0Y2hfdW5waW46CkBAIC0yNTgyLDEyICsyNjc2LDI1IEBAIGk5MTVfZ2VtX2RvX2V4
ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIGVycl92bWE6CiAJaWYgKGViLnRyYW1w
b2xpbmUpCiAJCWk5MTVfdm1hX3VucGluKGViLnRyYW1wb2xpbmUpOworCWViX3VubG9ja19lbmdp
bmUoJmViKTsKKwkvKiAqKiogVElNRUxJTkUgVU5MT0NLICoqKiAqLworZXJyX2VuZ2luZToKIAll
Yl91bnBpbl9lbmdpbmUoJmViKTsKIGVycl9jb250ZXh0OgogCWk5MTVfZ2VtX2NvbnRleHRfcHV0
KGViLmdlbV9jb250ZXh0KTsKIGVycl9kZXN0cm95OgogCWViX2Rlc3Ryb3koJmViKTsKIGVycl9v
dXRfZmVuY2U6CisJaWYgKG91dF9mZW5jZSkgeworCQlpZiAoZXJyID09IDApIHsKKwkJCWZkX2lu
c3RhbGwob3V0X2ZlbmNlX2ZkLCBvdXRfZmVuY2UtPmZpbGUpOworCQkJYXJncy0+cnN2ZDIgJj0g
R0VOTUFTS19VTEwoMzEsIDApOyAvKiBrZWVwIGluLWZlbmNlICovCisJCQlhcmdzLT5yc3ZkMiB8
PSAodTY0KW91dF9mZW5jZV9mZCA8PCAzMjsKKwkJCW91dF9mZW5jZV9mZCA9IC0xOworCQl9IGVs
c2UgeworCQkJZnB1dChvdXRfZmVuY2UtPmZpbGUpOworCQl9CisJfQogCWlmIChvdXRfZmVuY2Vf
ZmQgIT0gLTEpCiAJCXB1dF91bnVzZWRfZmQob3V0X2ZlbmNlX2ZkKTsKIGVycl9pbl9mZW5jZToK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1f
ZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dl
bV9leGVjYnVmZmVyLmMKaW5kZXggNTdjMTRkMzM0MGNkLi45OTJkNDZkYjFiMzMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fZXhlY2J1ZmZl
ci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9zZWxmdGVzdHMvaTkxNV9nZW1fZXhl
Y2J1ZmZlci5jCkBAIC03LDYgKzcsOSBAQAogCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX3Bt
LmgiCiAjaW5jbHVkZSAic2VsZnRlc3RzL2lndF9mbHVzaF90ZXN0LmgiCisjaW5jbHVkZSAic2Vs
ZnRlc3RzL21vY2tfZHJtLmgiCisKKyNpbmNsdWRlICJtb2NrX2NvbnRleHQuaCIKIAogc3RhdGlj
IHU2NCByZWFkX3JlbG9jKGNvbnN0IHUzMiAqbWFwLCBpbnQgeCwgY29uc3QgdTY0IG1hc2spCiB7
CkBAIC02MCw3ICs2Myw3IEBAIHN0YXRpYyBpbnQgX19pZ3RfZ3B1X3JlbG9jKHN0cnVjdCBpOTE1
X2V4ZWNidWZmZXIgKmViLAogCiAJR0VNX0JVR19PTighZWItPnJlbG9jX2NhY2hlLnJxKTsKIAly
cSA9IGk5MTVfcmVxdWVzdF9nZXQoZWItPnJlbG9jX2NhY2hlLnJxKTsKLQllcnIgPSByZWxvY19n
cHVfZmx1c2goJmViLT5yZWxvY19jYWNoZSk7CisJZXJyID0gcmVsb2NfZ3B1X2ZsdXNoKGViKTsK
IAlpZiAoZXJyKQogCQlnb3RvIHB1dF9ycTsKIAlHRU1fQlVHX09OKGViLT5yZWxvY19jYWNoZS5y
cSk7CkBAIC0xMDAsMTQgKzEwMywyMiBAQCBzdGF0aWMgaW50IGlndF9ncHVfcmVsb2Modm9pZCAq
YXJnKQogewogCXN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgZWI7CiAJc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKnNjcmF0Y2g7CisJc3RydWN0IGZpbGUgKmZpbGU7CiAJaW50IGVyciA9IDA7CiAJ
dTMyICptYXA7CiAKKwlmaWxlID0gbW9ja19maWxlKGFyZyk7CisJaWYgKElTX0VSUihmaWxlKSkK
KwkJcmV0dXJuIFBUUl9FUlIoZmlsZSk7CisKIAllYi5pOTE1ID0gYXJnOworCWViLmdlbV9jb250
ZXh0ID0gbGl2ZV9jb250ZXh0KGFyZywgZmlsZSk7CisJaWYgKElTX0VSUihlYi5nZW1fY29udGV4
dCkpCisJCWdvdG8gZXJyX2ZpbGU7CiAKIAlzY3JhdGNoID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0
ZV9pbnRlcm5hbChlYi5pOTE1LCA0MDk2KTsKIAlpZiAoSVNfRVJSKHNjcmF0Y2gpKQotCQlyZXR1
cm4gUFRSX0VSUihzY3JhdGNoKTsKKwkJZ290byBlcnJfZmlsZTsKIAogCW1hcCA9IGk5MTVfZ2Vt
X29iamVjdF9waW5fbWFwKHNjcmF0Y2gsIEk5MTVfTUFQX1dDKTsKIAlpZiAoSVNfRVJSKG1hcCkp
IHsKQEAgLTEzMCw4ICsxNDEsMTUgQEAgc3RhdGljIGludCBpZ3RfZ3B1X3JlbG9jKHZvaWQgKmFy
ZykKIAkJaWYgKGVycikKIAkJCWdvdG8gZXJyX3B1dDsKIAorCQltdXRleF9sb2NrKCZlYi5jb250
ZXh0LT50aW1lbGluZS0+bXV0ZXgpOworCQlpbnRlbF9jb250ZXh0X2VudGVyKGViLmNvbnRleHQp
OworCQllYi5yZWxvY19jYWNoZS5jZSA9IGViLmNvbnRleHQ7CisKIAkJZXJyID0gX19pZ3RfZ3B1
X3JlbG9jKCZlYiwgc2NyYXRjaCk7CiAKKwkJaW50ZWxfY29udGV4dF9leGl0KGViLmNvbnRleHQp
OworCQltdXRleF91bmxvY2soJmViLmNvbnRleHQtPnRpbWVsaW5lLT5tdXRleCk7CisKIAkJaW50
ZWxfY29udGV4dF91bnBpbihlYi5jb250ZXh0KTsKIGVycl9wdXQ6CiAJCWludGVsX2NvbnRleHRf
cHV0KGViLmNvbnRleHQpOwpAQCAtMTQ2LDYgKzE2NCw4IEBAIHN0YXRpYyBpbnQgaWd0X2dwdV9y
ZWxvYyh2b2lkICphcmcpCiAKIGVycl9zY3JhdGNoOgogCWk5MTVfZ2VtX29iamVjdF9wdXQoc2Ny
YXRjaCk7CitlcnJfZmlsZToKKwlmcHV0KGZpbGUpOwogCXJldHVybiBlcnI7CiB9CiAKLS0gCjIu
MjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50
ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBz
Oi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

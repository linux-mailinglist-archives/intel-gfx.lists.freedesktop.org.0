Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E2EEE14310B
	for <lists+intel-gfx@lfdr.de>; Mon, 20 Jan 2020 18:48:25 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4DA326EAB2;
	Mon, 20 Jan 2020 17:48:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2F6C56EAB7
 for <intel-gfx@lists.freedesktop.org>; Mon, 20 Jan 2020 17:48:21 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Jan 2020 09:48:20 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,342,1574150400"; d="scan'208";a="220725593"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga007.fm.intel.com with SMTP; 20 Jan 2020 09:48:17 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Mon, 20 Jan 2020 19:48:17 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 20 Jan 2020 19:47:27 +0200
Message-Id: <20200120174728.21095-18-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200120174728.21095-1-ville.syrjala@linux.intel.com>
References: <20200120174728.21095-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 16/17] drm/i915: Convert cdclk to global state
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkxl
dCdzIGNvbnZlcnQgY2RjbGtfc3RhdGUgdG8gYmUgYSBwcm9wZXIgZ2xvYmFsIHN0YXRlLiBUaGF0
IGFsbG93cwp1cyB0byB1c2UgdGhlIHJlZ3VsYXIgYXRvbWljIG9sZCB2cy4gbmV3IHN0YXRlIGFj
Y2Vzc29yLCBob3BlZnVsbHkKbWFraW5nIHRoZSBjb2RlIGxlc3MgY29uZnVzaW5nLgoKV2UgZG8g
aGF2ZSB0byBkZWFsIHdpdGggYSBmZXcgbW9yZSBlcnJvciBjYXNlcyBpbiBjYXNlIHRoZSBjZGNs
awpzdGF0ZSBkdXBsaWNhdGlvbiBmYWlscy4gQnV0IHNvIGJlIGl0LgoKU2lnbmVkLW9mZi1ieTog
VmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5jICAgfCAgIDEgLQogLi4uL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5jIHwgIDY4ICsrKystLS0KIC4u
Li9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuaCB8ICAgNSArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdWRpby5jICAgIHwgIDM5ICsrKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuYyAgICB8IDE5MiArKysrKysr
KysrLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuaCAg
ICB8ICA0NSArKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YyAgfCAxMjIgKysrKysrKy0tLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaCAgICB8ICAgMyAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAg
ICAgICAgICAgfCAgNDUgKy0tLQogOSBmaWxlcyBjaGFuZ2VkLCAzMTYgaW5zZXJ0aW9ucygrKSwg
MjA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfYXRvbWljLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0
b21pYy5jCmluZGV4IDQ1ODQyZWJjZGViZC4uYjUxZGRmOWEyNTBmIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMKQEAgLTUxOCw3ICs1MTgsNiBAQCB2b2lk
IGludGVsX2F0b21pY19zdGF0ZV9jbGVhcihzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqcykKIAlz
dGF0ZS0+ZHBsbF9zZXQgPSBzdGF0ZS0+bW9kZXNldCA9IGZhbHNlOwogCXN0YXRlLT5nbG9iYWxf
c3RhdGVfY2hhbmdlZCA9IGZhbHNlOwogCXN0YXRlLT5hY3RpdmVfcGlwZXMgPSAwOwotCWludGVs
X2NkY2xrX2NsZWFyX3N0YXRlKHN0YXRlKTsKIH0KIAogc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNf
cGxhbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5l
LmMKaW5kZXggNTYzY2FlYzFkMjAxLi4xYTBiYmNmNTI1MTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9hdG9taWNfcGxhbmUuYwpAQCAtMzcsNiArMzcsNyBA
QAogCiAjaW5jbHVkZSAiaTkxNV90cmFjZS5oIgogI2luY2x1ZGUgImludGVsX2F0b21pY19wbGFu
ZS5oIgorI2luY2x1ZGUgImludGVsX2NkY2xrLmgiCiAjaW5jbHVkZSAiaW50ZWxfZGlzcGxheV90
eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfc3ByaXRlLmgi
CkBAIC0xNTUsNDQgKzE1Niw2MSBAQCB1bnNpZ25lZCBpbnQgaW50ZWxfcGxhbmVfZGF0YV9yYXRl
KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCXJldHVybiBjcHAg
KiBjcnRjX3N0YXRlLT5waXhlbF9yYXRlOwogfQogCi1ib29sIGludGVsX3BsYW5lX2NhbGNfbWlu
X2NkY2xrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAotCQkJCXN0cnVjdCBpbnRl
bF9wbGFuZSAqcGxhbmUpCitpbnQgaW50ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkgICAgICAgc3RydWN0IGludGVsX3BsYW5lICpw
bGFuZSwKKwkJCSAgICAgICBib29sICpuZWVkX2NkY2xrX2NhbGMpCiB7Ci0Jc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShwbGFuZS0+YmFzZS5kZXYpOwotCWNvbnN0
IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUgPQotCQkmZGV2X3ByaXYtPmNk
Y2xrX3N0YXRlOwogCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUg
PQogCQlpbnRlbF9hdG9taWNfZ2V0X25ld19wbGFuZV9zdGF0ZShzdGF0ZSwgcGxhbmUpOwogCXN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhwbGFuZV9zdGF0ZS0+aHcuY3J0
Yyk7Ci0Jc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7CisJY29uc3Qgc3RydWN0
IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZTsKKwlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqbmV3X2NydGNfc3RhdGUgPQorCQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0
YXRlLCBjcnRjKTsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3Rh
dGUgPQorCQlpbnRlbF9hdG9taWNfZ2V0X29sZF9jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKIAog
CWlmICghcGxhbmVfc3RhdGUtPnVhcGkudmlzaWJsZSB8fCAhcGxhbmUtPm1pbl9jZGNsaykKLQkJ
cmV0dXJuIGZhbHNlOworCQlyZXR1cm4gMDsKKworCW5ld19jcnRjX3N0YXRlLT5taW5fY2RjbGtb
cGxhbmUtPmlkXSA9CisJCXBsYW5lLT5taW5fY2RjbGsobmV3X2NydGNfc3RhdGUsIHBsYW5lX3N0
YXRlKTsKIAotCWNydGNfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0
YXRlLCBjcnRjKTsKKwkvKgorCSAqIE5vIG5lZWQgdG8gY2hlY2sgYWdhaW5zdCB0aGUgY2RjbGsg
c3RhdGUgaWYKKwkgKiB0aGUgbWluIGNkY2xrIGZvciB0aGUgcGxhbmUgZG9lc24ndCBpbmNyZWFz
ZS4KKwkgKgorCSAqIEllLiB3ZSBvbmx5IGV2ZXIgaW5jcmVhc2UgdGhlIGNkY2xrIGR1ZSB0byBw
bGFuZQorCSAqIHJlcXVpcmVtZW50cy4gVGhpcyBjYW4gcmVkdWNlIGJhY2sgYW5kIGZvcnRoCisJ
ICogZGlzcGxheSBibGlua2luZyBkdWUgdG8gY29uc3RhbnQgY2RjbGsgY2hhbmdlcy4KKwkgKi8K
KwlpZiAobmV3X2NydGNfc3RhdGUtPm1pbl9jZGNsa1twbGFuZS0+aWRdIDw9CisJICAgIG9sZF9j
cnRjX3N0YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSkKKwkJcmV0dXJuIDA7CiAKLQljcnRjX3N0
YXRlLT5taW5fY2RjbGtbcGxhbmUtPmlkXSA9Ci0JCXBsYW5lLT5taW5fY2RjbGsoY3J0Y19zdGF0
ZSwgcGxhbmVfc3RhdGUpOworCWNkY2xrX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9jZGNsa19z
dGF0ZShzdGF0ZSk7CisJaWYgKElTX0VSUihjZGNsa19zdGF0ZSkpCisJCXJldHVybiBQVFJfRVJS
KGNkY2xrX3N0YXRlKTsKIAogCS8qCi0JICogRG9lcyB0aGUgY2RjbGsgbmVlZCB0byBiZSBidW1i
ZWQgdXA/CisJICogTm8gbmVlZCB0byByZWNhbGN1bGF0ZSB0aGUgY2RjbGsgc3RhdGUgaWYKKwkg
KiB0aGUgbWluIGNkY2xrIGZvciB0aGUgcGlwZSBkb2Vzbid0IGluY3JlYXNlLgogCSAqCi0JICog
Tm90ZTogd2Ugb2J2aW91c2x5IG5lZWQgdG8gYmUgY2FsbGVkIGJlZm9yZSB0aGUgbmV3Ci0JICog
Y2RjbGsgZnJlcXVlbmN5IGlzIGNhbGN1bGF0ZWQgc28gc3RhdGUtPmNkY2xrLmxvZ2ljYWwKLQkg
KiBoYXNuJ3QgYmVlbiBwb3B1bGF0ZWQgeWV0LiBIZW5jZSB3ZSBsb29rIGF0IHRoZSBvbGQKLQkg
KiBjZGNsayBzdGF0ZSB1bmRlciBkZXZfcHJpdi0+Y2RjbGsubG9naWNhbC4gVGhpcyBpcwotCSAq
IHNhZmUgYXMgbG9uZyB3ZSBob2xkIGF0IGxlYXN0IG9uZSBjcnRjIG11dGV4ICh3aGljaAotCSAq
IG11c3QgYmUgdHJ1ZSBzaW5jZSB3ZSBoYXZlIGNydGNfc3RhdGUpLgorCSAqIEllLiB3ZSBvbmx5
IGV2ZXIgaW5jcmVhc2UgdGhlIGNkY2xrIGR1ZSB0byBwbGFuZQorCSAqIHJlcXVpcmVtZW50cy4g
VGhpcyBjYW4gcmVkdWNlIGJhY2sgYW5kIGZvcnRoCisJICogZGlzcGxheSBibGlua2luZyBkdWUg
dG8gY29uc3RhbnQgY2RjbGsgY2hhbmdlcy4KIAkgKi8KLQlpZiAoY3J0Y19zdGF0ZS0+bWluX2Nk
Y2xrW3BsYW5lLT5pZF0gPiBjZGNsa19zdGF0ZS0+bG9naWNhbC5jZGNsaykgewotCQlEUk1fREVC
VUdfS01TKCJbUExBTkU6JWQ6JXNdIG1pbl9jZGNsayAoJWQga0h6KSA+IGxvZ2ljYWwgY2RjbGsg
KCVkIGtIeilcbiIsCi0JCQkgICAgICBwbGFuZS0+YmFzZS5iYXNlLmlkLCBwbGFuZS0+YmFzZS5u
YW1lLAotCQkJICAgICAgY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0sCi0JCQkgICAg
ICBjZGNsa19zdGF0ZS0+bG9naWNhbC5jZGNsayk7Ci0JCXJldHVybiB0cnVlOwotCX0KKwlpZiAo
Y2RjbGtfc3RhdGUtPm1pbl9jZGNsa1tjcnRjLT5waXBlXSA8PQorCSAgICBuZXdfY3J0Y19zdGF0
ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0pCisJCXJldHVybiAwOworCisJRFJNX0RFQlVHX0tNUygi
W1BMQU5FOiVkOiVzXSBtaW4gY2RjbGsgKCVkIGtIeikgPiBbQ1JUQzolZDolc10gbWluIGNkY2xr
ICglZCBrSHopXG4iLAorCQkgICAgICBwbGFuZS0+YmFzZS5iYXNlLmlkLCBwbGFuZS0+YmFzZS5u
YW1lLAorCQkgICAgICBuZXdfY3J0Y19zdGF0ZS0+bWluX2NkY2xrW3BsYW5lLT5pZF0sCisJCSAg
ICAgIGNydGMtPmJhc2UuYmFzZS5pZCwgY3J0Yy0+YmFzZS5uYW1lLAorCQkgICAgICBjZGNsa19z
dGF0ZS0+bWluX2NkY2xrW2NydGMtPnBpcGVdKTsKKwkqbmVlZF9jZGNsa19jYWxjID0gdHJ1ZTsK
IAotCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcGxh
bmVfY2xlYXJfaHdfc3RhdGUoc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3Bs
YW5lLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5o
CmluZGV4IDVjZWRhZmRkZGI1NS4uMmJjZjE1ZTM0NzI4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pY19wbGFuZS5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljX3BsYW5lLmgKQEAgLTQ2LDcgKzQ2LDggQEAg
aW50IGludGVsX3BsYW5lX2F0b21pY19jYWxjX2NoYW5nZXMoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKm9sZF9jcnRjX3N0YXQKIAkJCQkgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqb2xk
X3BsYW5lX3N0YXRlLAogCQkJCSAgICBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0
YXRlKTsKLWJvb2wgaW50ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21p
Y19zdGF0ZSAqc3RhdGUsCi0JCQkJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSk7CitpbnQgaW50
ZWxfcGxhbmVfY2FsY19taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUs
CisJCQkgICAgICAgc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKKwkJCSAgICAgICBib29sICpu
ZWVkX2NkY2xrX2NhbGMpOwogCiAjZW5kaWYgLyogX19JTlRFTF9BVE9NSUNfUExBTkVfSF9fICov
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F1ZGlvLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F1ZGlvLmMKaW5kZXggMTI2MjZm
ZDk0ZDI5Li45ZGViYWM3NWVhZWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfYXVkaW8uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2F1ZGlvLmMKQEAgLTMwLDYgKzMwLDcgQEAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2lu
Y2x1ZGUgImludGVsX2F0b21pYy5oIgogI2luY2x1ZGUgImludGVsX2F1ZGlvLmgiCisjaW5jbHVk
ZSAiaW50ZWxfY2RjbGsuaCIKICNpbmNsdWRlICJpbnRlbF9kaXNwbGF5X3R5cGVzLmgiCiAjaW5j
bHVkZSAiaW50ZWxfbHBlX2F1ZGlvLmgiCiAKQEAgLTgwMCw2ICs4MDEsMzQgQEAgdm9pZCBpbnRl
bF9pbml0X2F1ZGlvX2hvb2tzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAl9
CiB9CiAKK3N0YXRpYyBpbnQgZ2xrX2ZvcmNlX2F1ZGlvX2NkY2xrX2NvbW1pdChzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJCQkJYm9vbCBlbmFibGUpCit7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOworCXN0
cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGU7CisJc3RydWN0IGludGVsX2NydGMg
KmNydGM7CisJaW50IHJldDsKKworCS8qIG5lZWQgdG8gaG9sZCBhdCBsZWFzdCBvbmUgY3J0YyBs
b2NrIGZvciB0aGUgZ2xvYmFsIHN0YXRlICovCisJY3J0YyA9IGludGVsX2dldF9jcnRjX2Zvcl9w
aXBlKGRldl9wcml2LCBQSVBFX0EpOworCXJldCA9IGRybV9tb2Rlc2V0X2xvY2soJmNydGMtPmJh
c2UubXV0ZXgsIHN0YXRlLT5iYXNlLmFjcXVpcmVfY3R4KTsKKwlpZiAocmV0KQorCQlyZXR1cm4g
cmV0OworCisJY2RjbGtfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X2NkY2xrX3N0YXRlKHN0YXRl
KTsKKwlpZiAoSVNfRVJSKGNkY2xrX3N0YXRlKSkKKwkJcmV0dXJuIFBUUl9FUlIoY2RjbGtfc3Rh
dGUpOworCisJY2RjbGtfc3RhdGUtPmZvcmNlX21pbl9jZGNsa19jaGFuZ2VkID0gdHJ1ZTsKKwlj
ZGNsa19zdGF0ZS0+Zm9yY2VfbWluX2NkY2xrID0gZW5hYmxlID8gMiAqIDk2MDAwIDogMDsKKwor
CXJldCA9IGludGVsX2F0b21pY19sb2NrX2dsb2JhbF9zdGF0ZSgmY2RjbGtfc3RhdGUtPmJhc2Up
OworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlyZXR1cm4gZHJtX2F0b21pY19jb21taXQo
JnN0YXRlLT5iYXNlKTsKK30KKwogc3RhdGljIHZvaWQgZ2xrX2ZvcmNlX2F1ZGlvX2NkY2xrKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgIGJvb2wgZW5hYmxlKQogewpA
QCAtODE1LDE1ICs4NDQsNyBAQCBzdGF0aWMgdm9pZCBnbGtfZm9yY2VfYXVkaW9fY2RjbGsoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCXN0YXRlLT5hY3F1aXJlX2N0eCA9ICZj
dHg7CiAKIHJldHJ5OgotCXRvX2ludGVsX2F0b21pY19zdGF0ZShzdGF0ZSktPmNkY2xrX3N0YXRl
LmZvcmNlX21pbl9jZGNsa19jaGFuZ2VkID0gdHJ1ZTsKLQl0b19pbnRlbF9hdG9taWNfc3RhdGUo
c3RhdGUpLT5jZGNsa19zdGF0ZS5mb3JjZV9taW5fY2RjbGsgPQotCQllbmFibGUgPyAyICogOTYw
MDAgOiAwOwotCi0JLyogUHJvdGVjdHMgZGV2X3ByaXYtPmNkY2xrLmZvcmNlX21pbl9jZGNsayAq
LwotCXJldCA9IF9pbnRlbF9hdG9taWNfbG9ja19nbG9iYWxfc3RhdGUodG9faW50ZWxfYXRvbWlj
X3N0YXRlKHN0YXRlKSk7Ci0JaWYgKCFyZXQpCi0JCXJldCA9IGRybV9hdG9taWNfY29tbWl0KHN0
YXRlKTsKLQorCXJldCA9IGdsa19mb3JjZV9hdWRpb19jZGNsa19jb21taXQodG9faW50ZWxfYXRv
bWljX3N0YXRlKHN0YXRlKSwgZW5hYmxlKTsKIAlpZiAocmV0ID09IC1FREVBRExLKSB7CiAJCWRy
bV9hdG9taWNfc3RhdGVfY2xlYXIoc3RhdGUpOwogCQlkcm1fbW9kZXNldF9iYWNrb2ZmKCZjdHgp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jZGNsay5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jZGNsay5jCmluZGV4IDNiNzkz
MmFlMmE3Ny4uZTE0YmRhMmJlYzcxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2NkY2xrLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9jZGNsay5jCkBAIC0xODA3LDM3ICsxODA3LDYgQEAgc3RhdGljIGJvb2wgaW50ZWxfY2Rj
bGtfY2hhbmdlZChjb25zdCBzdHJ1Y3QgaW50ZWxfY2RjbGtfY29uZmlnICphLAogCQlhLT52b2x0
YWdlX2xldmVsICE9IGItPnZvbHRhZ2VfbGV2ZWw7CiB9CiAKLS8qKgotICogaW50ZWxfY2RjbGtf
Y2xlYXJfc3RhdGUgLSBjbGVhciB0aGUgY2RjbGsgc3RhdGUKLSAqIEBzdGF0ZTogYXRvbWljIHN0
YXRlCi0gKgotICogQ2xlYXIgdGhlIGNkY2xrIHN0YXRlIGZvciB3d19tdXRleCBiYWNrb2ZmLgot
ICovCi12b2lkIGludGVsX2NkY2xrX2NsZWFyX3N0YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3Rh
dGUgKnN0YXRlKQotewotCW1lbXNldCgmc3RhdGUtPmNkY2xrX3N0YXRlLCAwLCBzaXplb2Yoc3Rh
dGUtPmNkY2xrX3N0YXRlKSk7Ci0Jc3RhdGUtPmNkY2xrX3N0YXRlLnBpcGUgPSBJTlZBTElEX1BJ
UEU7Ci19Ci0KLS8qKgotICogaW50ZWxfY2RjbGtfc3dhcF9zdGF0ZSAtIG1ha2UgYXRvbWljIENE
Q0xLIGNvbmZpZ3VyYXRpb24gZWZmZWN0aXZlCi0gKiBAc3RhdGU6IGF0b21pYyBzdGF0ZQotICoK
LSAqIFRoaXMgaXMgdGhlIENEQ0xLIHZlcnNpb24gb2YgZHJtX2F0b21pY19oZWxwZXJfc3dhcF9z
dGF0ZSgpIHNpbmNlIHRoZQotICogaGVscGVyIGRvZXMgbm90IGhhbmRsZSBkcml2ZXItc3BlY2lm
aWMgZ2xvYmFsIHN0YXRlLgotICoKLSAqIFNpbWlsYXJseSB0byB0aGUgYXRvbWljIGhlbHBlcnMg
dGhpcyBmdW5jdGlvbiBkb2VzIGEgY29tcGxldGUgc3dhcCwKLSAqIGkuZS4gaXQgYWxzbyBwdXRz
IHRoZSBvbGQgc3RhdGUgaW50byBAc3RhdGUuIFRoaXMgaXMgdXNlZCBieSB0aGUgY29tbWl0Ci0g
KiBjb2RlIHRvIGRldGVybWluZSBob3cgQ0RDTEsgaGFzIGNoYW5nZWQgKGZvciBpbnN0YW5jZSBk
aWQgaXQgaW5jcmVhc2Ugb3IKLSAqIGRlY3JlYXNlKS4KLSAqLwotdm9pZCBpbnRlbF9jZGNsa19z
d2FwX3N0YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQotewotCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsKLQot
CXN3YXAoc3RhdGUtPmNkY2xrX3N0YXRlLCBkZXZfcHJpdi0+Y2RjbGtfc3RhdGUpOwotfQotCiB2
b2lkIGludGVsX2R1bXBfY2RjbGtfY29uZmlnKGNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19jb25m
aWcgKmNkY2xrX2NvbmZpZywKIAkJCSAgICAgY29uc3QgY2hhciAqY29udGV4dCkKIHsKQEAgLTE4
ODgsMTQgKzE4NTcsMjIgQEAgdm9pZAogaW50ZWxfc2V0X2NkY2xrX3ByZV9wbGFuZV91cGRhdGUo
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOwotCS8qIGNhbGxlZCBh
ZnRlciBpbnRlbF9jZGNsa19zd2FwX3N0YXRlKCkhICovCi0JY29uc3Qgc3RydWN0IGludGVsX2Nk
Y2xrX3N0YXRlICpvbGRfY2RjbGtfc3RhdGUgPSAmc3RhdGUtPmNkY2xrX3N0YXRlOwotCWNvbnN0
IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqbmV3X2NkY2xrX3N0YXRlID0gJmRldl9wcml2LT5j
ZGNsa19zdGF0ZTsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKm9sZF9jZGNsa19z
dGF0ZSA9CisJCWludGVsX2F0b21pY19nZXRfb2xkX2NkY2xrX3N0YXRlKHN0YXRlKTsKKwljb25z
dCBzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKm5ld19jZGNsa19zdGF0ZSA9CisJCWludGVsX2F0
b21pY19nZXRfbmV3X2NkY2xrX3N0YXRlKHN0YXRlKTsKIAllbnVtIHBpcGUgcGlwZSA9IG5ld19j
ZGNsa19zdGF0ZS0+cGlwZTsKIAorCWlmICghaW50ZWxfY2RjbGtfY2hhbmdlZCgmb2xkX2NkY2xr
X3N0YXRlLT5hY3R1YWwsCisJCQkJICZuZXdfY2RjbGtfc3RhdGUtPmFjdHVhbCkpCisJCXJldHVy
bjsKKwogCWlmIChwaXBlID09IElOVkFMSURfUElQRSB8fAotCSAgICBvbGRfY2RjbGtfc3RhdGUt
PmFjdHVhbC5jZGNsayA8PSBuZXdfY2RjbGtfc3RhdGUtPmFjdHVhbC5jZGNsaykKKwkgICAgb2xk
X2NkY2xrX3N0YXRlLT5hY3R1YWwuY2RjbGsgPD0gbmV3X2NkY2xrX3N0YXRlLT5hY3R1YWwuY2Rj
bGspIHsKKwkJV0FSTl9PTighbmV3X2NkY2xrX3N0YXRlLT5iYXNlLmNoYW5nZWQpOworCiAJCWlu
dGVsX3NldF9jZGNsayhkZXZfcHJpdiwgJm5ld19jZGNsa19zdGF0ZS0+YWN0dWFsLCBwaXBlKTsK
Kwl9CiB9CiAKIC8qKgpAQCAtMTkwOSwxNCArMTg4NiwyMiBAQCB2b2lkCiBpbnRlbF9zZXRfY2Rj
bGtfcG9zdF9wbGFuZV91cGRhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiB7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFz
ZS5kZXYpOwotCS8qIGNhbGxlZCBhZnRlciBpbnRlbF9jZGNsa19zd2FwX3N0YXRlKCkhICovCi0J
Y29uc3Qgc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpvbGRfY2RjbGtfc3RhdGUgPSAmc3RhdGUt
PmNkY2xrX3N0YXRlOwotCWNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqbmV3X2NkY2xr
X3N0YXRlID0gJmRldl9wcml2LT5jZGNsa19zdGF0ZTsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfY2Rj
bGtfc3RhdGUgKm9sZF9jZGNsa19zdGF0ZSA9CisJCWludGVsX2F0b21pY19nZXRfb2xkX2NkY2xr
X3N0YXRlKHN0YXRlKTsKKwljb25zdCBzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKm5ld19jZGNs
a19zdGF0ZSA9CisJCWludGVsX2F0b21pY19nZXRfbmV3X2NkY2xrX3N0YXRlKHN0YXRlKTsKIAll
bnVtIHBpcGUgcGlwZSA9IG5ld19jZGNsa19zdGF0ZS0+cGlwZTsKIAorCWlmICghaW50ZWxfY2Rj
bGtfY2hhbmdlZCgmb2xkX2NkY2xrX3N0YXRlLT5hY3R1YWwsCisJCQkJICZuZXdfY2RjbGtfc3Rh
dGUtPmFjdHVhbCkpCisJCXJldHVybjsKKwogCWlmIChwaXBlICE9IElOVkFMSURfUElQRSAmJgot
CSAgICBvbGRfY2RjbGtfc3RhdGUtPmFjdHVhbC5jZGNsayA+IG5ld19jZGNsa19zdGF0ZS0+YWN0
dWFsLmNkY2xrKQorCSAgICBvbGRfY2RjbGtfc3RhdGUtPmFjdHVhbC5jZGNsayA+IG5ld19jZGNs
a19zdGF0ZS0+YWN0dWFsLmNkY2xrKSB7CisJCVdBUk5fT04oIW5ld19jZGNsa19zdGF0ZS0+YmFz
ZS5jaGFuZ2VkKTsKKwogCQlpbnRlbF9zZXRfY2RjbGsoZGV2X3ByaXYsICZuZXdfY2RjbGtfc3Rh
dGUtPmFjdHVhbCwgcGlwZSk7CisJfQogfQogCiBzdGF0aWMgaW50IGludGVsX3BpeGVsX3JhdGVf
dG9fY2RjbGsoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCkBAIC0y
MDQyLDEwICsyMDI3LDEwIEBAIGludCBpbnRlbF9jcnRjX2NvbXB1dGVfbWluX2NkY2xrKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCXJldHVybiBtaW5fY2RjbGs7
CiB9CiAKLXN0YXRpYyBpbnQgaW50ZWxfY29tcHV0ZV9taW5fY2RjbGsoc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IGludGVsX2NvbXB1dGVfbWluX2NkY2xrKHN0
cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUpCiB7CisJc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUgPSBjZGNsa19zdGF0ZS0+YmFzZS5zdGF0ZTsKIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5iYXNlLmRldik7Ci0Jc3Ry
dWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9ICZzdGF0ZS0+Y2RjbGtfc3RhdGU7
CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGU7CiAJaW50IG1pbl9jZGNsaywgaTsKQEAgLTIwNjMsNyArMjA0OCw3IEBAIHN0YXRp
YyBpbnQgaW50ZWxfY29tcHV0ZV9taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUpCiAKIAkJY2RjbGtfc3RhdGUtPm1pbl9jZGNsa1tpXSA9IG1pbl9jZGNsazsKIAotCQly
ZXQgPSBfaW50ZWxfYXRvbWljX2xvY2tfZ2xvYmFsX3N0YXRlKHN0YXRlKTsKKwkJcmV0ID0gaW50
ZWxfYXRvbWljX2xvY2tfZ2xvYmFsX3N0YXRlKCZjZGNsa19zdGF0ZS0+YmFzZSk7CiAJCWlmIChy
ZXQpCiAJCQlyZXR1cm4gcmV0OwogCX0KQEAgLTIwODgsMTAgKzIwNzMsMTAgQEAgc3RhdGljIGlu
dCBpbnRlbF9jb21wdXRlX21pbl9jZGNsayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKICAqIGZ1dHVyZSBwbGF0Zm9ybXMgdGhpcyBjb2RlIHdpbGwgbmVlZCB0byBiZQogICogYWRq
dXN0ZWQuCiAgKi8KLXN0YXRpYyBpbnQgYnh0X2NvbXB1dGVfbWluX3ZvbHRhZ2VfbGV2ZWwoc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IGJ4dF9jb21wdXRlX21p
bl92b2x0YWdlX2xldmVsKHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUpCiB7
CisJc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSBjZGNsa19zdGF0ZS0+YmFzZS5z
dGF0ZTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRl
LT5iYXNlLmRldik7Ci0Jc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9ICZz
dGF0ZS0+Y2RjbGtfc3RhdGU7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7CiAJc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7CiAJdTggbWluX3ZvbHRhZ2VfbGV2ZWw7CkBAIC0y
MTExLDcgKzIwOTYsNyBAQCBzdGF0aWMgaW50IGJ4dF9jb21wdXRlX21pbl92b2x0YWdlX2xldmVs
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCiAJCWNkY2xrX3N0YXRlLT5taW5f
dm9sdGFnZV9sZXZlbFtpXSA9IG1pbl92b2x0YWdlX2xldmVsOwogCi0JCXJldCA9IF9pbnRlbF9h
dG9taWNfbG9ja19nbG9iYWxfc3RhdGUoc3RhdGUpOworCQlyZXQgPSBpbnRlbF9hdG9taWNfbG9j
a19nbG9iYWxfc3RhdGUoJmNkY2xrX3N0YXRlLT5iYXNlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVy
biByZXQ7CiAJfQpAQCAtMjEyNCwxMyArMjEwOSwxMyBAQCBzdGF0aWMgaW50IGJ4dF9jb21wdXRl
X21pbl92b2x0YWdlX2xldmVsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCXJl
dHVybiBtaW5fdm9sdGFnZV9sZXZlbDsKIH0KIAotc3RhdGljIGludCB2bHZfbW9kZXNldF9jYWxj
X2NkY2xrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCB2bHZf
bW9kZXNldF9jYWxjX2NkY2xrKHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUp
CiB7CisJc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSBjZGNsa19zdGF0ZS0+YmFz
ZS5zdGF0ZTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0
YXRlLT5iYXNlLmRldik7Ci0Jc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9
ICZzdGF0ZS0+Y2RjbGtfc3RhdGU7CiAJaW50IG1pbl9jZGNsaywgY2RjbGs7CiAKLQltaW5fY2Rj
bGsgPSBpbnRlbF9jb21wdXRlX21pbl9jZGNsayhzdGF0ZSk7CisJbWluX2NkY2xrID0gaW50ZWxf
Y29tcHV0ZV9taW5fY2RjbGsoY2RjbGtfc3RhdGUpOwogCWlmIChtaW5fY2RjbGsgPCAwKQogCQly
ZXR1cm4gbWluX2NkY2xrOwogCkBAIC0yMTUzLDEyICsyMTM4LDEyIEBAIHN0YXRpYyBpbnQgdmx2
X21vZGVzZXRfY2FsY19jZGNsayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAly
ZXR1cm4gMDsKIH0KIAotc3RhdGljIGludCBiZHdfbW9kZXNldF9jYWxjX2NkY2xrKHN0cnVjdCBp
bnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBiZHdfbW9kZXNldF9jYWxjX2Nk
Y2xrKHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUpCiB7Ci0Jc3RydWN0IGlu
dGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9ICZzdGF0ZS0+Y2RjbGtfc3RhdGU7CisJc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSBjZGNsa19zdGF0ZS0+YmFzZS5zdGF0ZTsK
IAlpbnQgbWluX2NkY2xrLCBjZGNsazsKIAotCW1pbl9jZGNsayA9IGludGVsX2NvbXB1dGVfbWlu
X2NkY2xrKHN0YXRlKTsKKwltaW5fY2RjbGsgPSBpbnRlbF9jb21wdXRlX21pbl9jZGNsayhjZGNs
a19zdGF0ZSk7CiAJaWYgKG1pbl9jZGNsayA8IDApCiAJCXJldHVybiBtaW5fY2RjbGs7CiAKQEAg
LTIxODUsMTAgKzIxNzAsMTAgQEAgc3RhdGljIGludCBiZHdfbW9kZXNldF9jYWxjX2NkY2xrKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMg
aW50IHNrbF9kcGxsMF92Y28oc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCitzdGF0
aWMgaW50IHNrbF9kcGxsMF92Y28oc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0
ZSkKIHsKKwlzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSA9IGNkY2xrX3N0YXRlLT5i
YXNlLnN0YXRlOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
c3RhdGUtPmJhc2UuZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKmNkY2xrX3N0YXRl
ID0gJnN0YXRlLT5jZGNsa19zdGF0ZTsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKIAlzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZTsKIAlpbnQgdmNvLCBpOwpAQCAtMjIyMiwx
NiArMjIwNywxNiBAQCBzdGF0aWMgaW50IHNrbF9kcGxsMF92Y28oc3RydWN0IGludGVsX2F0b21p
Y19zdGF0ZSAqc3RhdGUpCiAJcmV0dXJuIHZjbzsKIH0KIAotc3RhdGljIGludCBza2xfbW9kZXNl
dF9jYWxjX2NkY2xrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQorc3RhdGljIGlu
dCBza2xfbW9kZXNldF9jYWxjX2NkY2xrKHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtf
c3RhdGUpCiB7Ci0Jc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9ICZzdGF0
ZS0+Y2RjbGtfc3RhdGU7CisJc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSBjZGNs
a19zdGF0ZS0+YmFzZS5zdGF0ZTsKIAlpbnQgbWluX2NkY2xrLCBjZGNsaywgdmNvOwogCi0JbWlu
X2NkY2xrID0gaW50ZWxfY29tcHV0ZV9taW5fY2RjbGsoc3RhdGUpOworCW1pbl9jZGNsayA9IGlu
dGVsX2NvbXB1dGVfbWluX2NkY2xrKGNkY2xrX3N0YXRlKTsKIAlpZiAobWluX2NkY2xrIDwgMCkK
IAkJcmV0dXJuIG1pbl9jZGNsazsKIAotCXZjbyA9IHNrbF9kcGxsMF92Y28oc3RhdGUpOworCXZj
byA9IHNrbF9kcGxsMF92Y28oY2RjbGtfc3RhdGUpOwogCiAJLyoKIAkgKiBGSVhNRSBzaG91bGQg
YWxzbyBhY2NvdW50IGZvciBwbGFuZSByYXRpbwpAQCAtMjI1OCwxNyArMjI0MywxNyBAQCBzdGF0
aWMgaW50IHNrbF9tb2Rlc2V0X2NhbGNfY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgYnh0X21vZGVzZXRfY2FsY19jZGNs
ayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgYnh0X21vZGVz
ZXRfY2FsY19jZGNsayhzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKmNkY2xrX3N0YXRlKQogewor
CXN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlID0gY2RjbGtfc3RhdGUtPmJhc2Uuc3Rh
dGU7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+
YmFzZS5kZXYpOwotCXN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGUgPSAmc3Rh
dGUtPmNkY2xrX3N0YXRlOwogCWludCBtaW5fY2RjbGssIG1pbl92b2x0YWdlX2xldmVsLCBjZGNs
aywgdmNvOwogCi0JbWluX2NkY2xrID0gaW50ZWxfY29tcHV0ZV9taW5fY2RjbGsoc3RhdGUpOwor
CW1pbl9jZGNsayA9IGludGVsX2NvbXB1dGVfbWluX2NkY2xrKGNkY2xrX3N0YXRlKTsKIAlpZiAo
bWluX2NkY2xrIDwgMCkKIAkJcmV0dXJuIG1pbl9jZGNsazsKIAotCW1pbl92b2x0YWdlX2xldmVs
ID0gYnh0X2NvbXB1dGVfbWluX3ZvbHRhZ2VfbGV2ZWwoc3RhdGUpOworCW1pbl92b2x0YWdlX2xl
dmVsID0gYnh0X2NvbXB1dGVfbWluX3ZvbHRhZ2VfbGV2ZWwoY2RjbGtfc3RhdGUpOwogCWlmICht
aW5fdm9sdGFnZV9sZXZlbCA8IDApCiAJCXJldHVybiBtaW5fdm9sdGFnZV9sZXZlbDsKIApAQCAt
MjMzNSw3ICsyMzIwLDcgQEAgc3RhdGljIGludCBpbnRlbF9tb2Rlc2V0X2FsbF9waXBlcyhzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIGlu
dCBmaXhlZF9tb2Rlc2V0X2NhbGNfY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUpCitzdGF0aWMgaW50IGZpeGVkX21vZGVzZXRfY2FsY19jZGNsayhzdHJ1Y3QgaW50ZWxfY2Rj
bGtfc3RhdGUgKmNkY2xrX3N0YXRlKQogewogCWludCBtaW5fY2RjbGs7CiAKQEAgLTIzNDQsNTQg
KzIzMjksOTUgQEAgc3RhdGljIGludCBmaXhlZF9tb2Rlc2V0X2NhbGNfY2RjbGsoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJICogY2hlY2sgdGhhdCB0aGUgcmVxdWlyZWQgbWlu
aW11bSBmcmVxdWVuY3kgZG9lc24ndCBleGNlZWQKIAkgKiB0aGUgYWN0dWFsIGNkY2xrIGZyZXF1
ZW5jeS4KIAkgKi8KLQltaW5fY2RjbGsgPSBpbnRlbF9jb21wdXRlX21pbl9jZGNsayhzdGF0ZSk7
CisJbWluX2NkY2xrID0gaW50ZWxfY29tcHV0ZV9taW5fY2RjbGsoY2RjbGtfc3RhdGUpOwogCWlm
IChtaW5fY2RjbGsgPCAwKQogCQlyZXR1cm4gbWluX2NkY2xrOwogCiAJcmV0dXJuIDA7CiB9CiAK
K3N0YXRpYyBzdHJ1Y3QgaW50ZWxfZ2xvYmFsX3N0YXRlICppbnRlbF9jZGNsa19kdXBsaWNhdGVf
c3RhdGUoc3RydWN0IGludGVsX2dsb2JhbF9vYmogKm9iaikKK3sKKwlzdHJ1Y3QgaW50ZWxfY2Rj
bGtfc3RhdGUgKmNkY2xrX3N0YXRlOworCisJY2RjbGtfc3RhdGUgPSBrbWVtZHVwKG9iai0+c3Rh
dGUsIHNpemVvZigqY2RjbGtfc3RhdGUpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWNkY2xrX3N0YXRl
KQorCQlyZXR1cm4gTlVMTDsKKworCWNkY2xrX3N0YXRlLT5mb3JjZV9taW5fY2RjbGtfY2hhbmdl
ZCA9IGZhbHNlOworCWNkY2xrX3N0YXRlLT5waXBlID0gSU5WQUxJRF9QSVBFOworCisJcmV0dXJu
ICZjZGNsa19zdGF0ZS0+YmFzZTsKK30KKworc3RhdGljIHZvaWQgaW50ZWxfY2RjbGtfZGVzdHJv
eV9zdGF0ZShzdHJ1Y3QgaW50ZWxfZ2xvYmFsX29iaiAqb2JqLAorCQkJCSAgICAgIHN0cnVjdCBp
bnRlbF9nbG9iYWxfc3RhdGUgKnN0YXRlKQoreworCWtmcmVlKHN0YXRlKTsKK30KKworc3RhdGlj
IGNvbnN0IHN0cnVjdCBpbnRlbF9nbG9iYWxfc3RhdGVfZnVuY3MgaW50ZWxfY2RjbGtfZnVuY3Mg
PSB7CisJLmF0b21pY19kdXBsaWNhdGVfc3RhdGUgPSBpbnRlbF9jZGNsa19kdXBsaWNhdGVfc3Rh
dGUsCisJLmF0b21pY19kZXN0cm95X3N0YXRlID0gaW50ZWxfY2RjbGtfZGVzdHJveV9zdGF0ZSwK
K307CisKK3N0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqCitpbnRlbF9hdG9taWNfZ2V0X2NkY2xr
X3N0YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsKKwlzdHJ1
Y3QgaW50ZWxfZ2xvYmFsX3N0YXRlICpjZGNsa19zdGF0ZTsKKworCWNkY2xrX3N0YXRlID0gaW50
ZWxfYXRvbWljX2dldF9nbG9iYWxfb2JqX3N0YXRlKHN0YXRlLCAmZGV2X3ByaXYtPmNkY2xrLm9i
aik7CisJaWYgKElTX0VSUihjZGNsa19zdGF0ZSkpCisJCXJldHVybiBFUlJfQ0FTVChjZGNsa19z
dGF0ZSk7CisKKwlyZXR1cm4gdG9faW50ZWxfY2RjbGtfc3RhdGUoY2RjbGtfc3RhdGUpOworfQor
CitpbnQgaW50ZWxfY2RjbGtfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
Cit7CisJc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZTsKKworCWNkY2xrX3N0
YXRlID0ga3phbGxvYyhzaXplb2YoKmNkY2xrX3N0YXRlKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFj
ZGNsa19zdGF0ZSkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlpbnRlbF9hdG9taWNfZ2xvYmFsX29i
al9pbml0KGRldl9wcml2LCAmZGV2X3ByaXYtPmNkY2xrLm9iaiwKKwkJCQkgICAgICZjZGNsa19z
dGF0ZS0+YmFzZSwgJmludGVsX2NkY2xrX2Z1bmNzKTsKKworCXJldHVybiAwOworfQorCiBpbnQg
aW50ZWxfbW9kZXNldF9jYWxjX2NkY2xrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRl
KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUt
PmJhc2UuZGV2KTsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKm9sZF9jZGNsa19z
dGF0ZSA9ICZkZXZfcHJpdi0+Y2RjbGtfc3RhdGU7Ci0Jc3RydWN0IGludGVsX2NkY2xrX3N0YXRl
ICpuZXdfY2RjbGtfc3RhdGUgPSAmc3RhdGUtPmNkY2xrX3N0YXRlOworCWNvbnN0IHN0cnVjdCBp
bnRlbF9jZGNsa19zdGF0ZSAqb2xkX2NkY2xrX3N0YXRlOworCXN0cnVjdCBpbnRlbF9jZGNsa19z
dGF0ZSAqbmV3X2NkY2xrX3N0YXRlOwogCWVudW0gcGlwZSBwaXBlOwogCWludCByZXQ7CiAKLQlt
ZW1jcHkobmV3X2NkY2xrX3N0YXRlLT5taW5fY2RjbGssIG9sZF9jZGNsa19zdGF0ZS0+bWluX2Nk
Y2xrLAotCSAgICAgICBzaXplb2YobmV3X2NkY2xrX3N0YXRlLT5taW5fY2RjbGspKTsKLQltZW1j
cHkobmV3X2NkY2xrX3N0YXRlLT5taW5fdm9sdGFnZV9sZXZlbCwgb2xkX2NkY2xrX3N0YXRlLT5t
aW5fdm9sdGFnZV9sZXZlbCwKLQkgICAgICAgc2l6ZW9mKG5ld19jZGNsa19zdGF0ZS0+bWluX3Zv
bHRhZ2VfbGV2ZWwpKTsKKwluZXdfY2RjbGtfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X2NkY2xr
X3N0YXRlKHN0YXRlKTsKKwlpZiAoSVNfRVJSKG5ld19jZGNsa19zdGF0ZSkpCisJCXJldHVybiBQ
VFJfRVJSKG5ld19jZGNsa19zdGF0ZSk7CiAKLQkvKiBrZWVwIHRoZSBjdXJyZW50IHNldHRpbmcg
Ki8KLQlpZiAoIW5ld19jZGNsa19zdGF0ZS0+Zm9yY2VfbWluX2NkY2xrX2NoYW5nZWQpCi0JCW5l
d19jZGNsa19zdGF0ZS0+Zm9yY2VfbWluX2NkY2xrID0gb2xkX2NkY2xrX3N0YXRlLT5mb3JjZV9t
aW5fY2RjbGs7CisJb2xkX2NkY2xrX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9vbGRfY2RjbGtf
c3RhdGUoc3RhdGUpOwogCi0JbmV3X2NkY2xrX3N0YXRlLT5sb2dpY2FsID0gb2xkX2NkY2xrX3N0
YXRlLT5sb2dpY2FsOwotCW5ld19jZGNsa19zdGF0ZS0+YWN0dWFsID0gb2xkX2NkY2xrX3N0YXRl
LT5hY3R1YWw7Ci0KLQlyZXQgPSBkZXZfcHJpdi0+ZGlzcGxheS5tb2Rlc2V0X2NhbGNfY2RjbGso
c3RhdGUpOworCXJldCA9IGRldl9wcml2LT5kaXNwbGF5Lm1vZGVzZXRfY2FsY19jZGNsayhuZXdf
Y2RjbGtfc3RhdGUpOwogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQkvKgotCSAqIFdyaXRl
cyB0byBkZXZfcHJpdi0+Y2RjbGsue2FjdHVhbCxsb2dpY2FsfSBtdXN0IHByb3RlY3RlZAotCSAq
IGJ5IGhvbGRpbmcgYWxsIHRoZSBjcnRjIG11dGV4ZXMgZXZlbiBpZiB3ZSBkb24ndCBlbmQgdXAK
LQkgKiB0b3VjaGluZyB0aGUgaGFyZHdhcmUKLQkgKi8KIAlpZiAoaW50ZWxfY2RjbGtfY2hhbmdl
ZCgmb2xkX2NkY2xrX3N0YXRlLT5hY3R1YWwsCiAJCQkJJm5ld19jZGNsa19zdGF0ZS0+YWN0dWFs
KSkgewogCQkvKgogCQkgKiBBbHNvIHNlcmlhbGl6ZSBjb21taXRzIGFjcm9zcyBhbGwgY3J0Y3MK
IAkJICogaWYgdGhlIGFjdHVhbCBodyBuZWVkcyB0byBiZSBwb2tlZC4KIAkJICovCi0JCXJldCA9
IF9pbnRlbF9hdG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZShzdGF0ZSk7CisJCXJldCA9IGlu
dGVsX2F0b21pY19zZXJpYWxpemVfZ2xvYmFsX3N0YXRlKCZuZXdfY2RjbGtfc3RhdGUtPmJhc2Up
OwogCQlpZiAocmV0KQogCQkJcmV0dXJuIHJldDsKIAl9IGVsc2UgaWYgKGludGVsX2NkY2xrX2No
YW5nZWQoJm9sZF9jZGNsa19zdGF0ZS0+bG9naWNhbCwKIAkJCQkgICAgICAgJm5ld19jZGNsa19z
dGF0ZS0+bG9naWNhbCkpIHsKLQkJcmV0ID0gX2ludGVsX2F0b21pY19sb2NrX2dsb2JhbF9zdGF0
ZShzdGF0ZSk7CisJCXJldCA9IGludGVsX2F0b21pY19sb2NrX2dsb2JhbF9zdGF0ZSgmbmV3X2Nk
Y2xrX3N0YXRlLT5iYXNlKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAJfSBlbHNlIHsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfY2RjbGsuaAppbmRleCA0Yjk2NWRi
MDc3MjAuLjE5NWZjYTcwYmZjYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9jZGNsay5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfY2RjbGsuaApAQCAtOCwxMSArOCwxMiBAQAogCiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4K
IAorI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaW50ZWxfZGlzcGxheS5oIgorI2lu
Y2x1ZGUgImludGVsX2dsb2JhbF9zdGF0ZS5oIgogCiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsK
IHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGU7Ci1zdHJ1Y3QgaW50ZWxfY2RjbGtfY29uZmlnOwog
c3RydWN0IGludGVsX2NydGNfc3RhdGU7CiAKIHN0cnVjdCBpbnRlbF9jZGNsa192YWxzIHsKQEAg
LTIyLDYgKzIzLDM1IEBAIHN0cnVjdCBpbnRlbF9jZGNsa192YWxzIHsKIAl1OCByYXRpbzsKIH07
CiAKK3N0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSB7CisJc3RydWN0IGludGVsX2dsb2JhbF9zdGF0
ZSBiYXNlOworCisJLyoKKwkgKiBMb2dpY2FsIGNvbmZpZ3VyYXRpb24gb2YgY2RjbGsgKHVzZWQg
Zm9yIGFsbCBzY2FsaW5nLAorCSAqIHdhdGVybWFyaywgZXRjLiBjYWxjdWxhdGlvbnMgYW5kIGNo
ZWNrcykuIFRoaXMgaXMKKwkgKiBjb21wdXRlZCBhcyBpZiBhbGwgZW5hYmxlZCBjcnRjcyB3ZXJl
IGFjdGl2ZS4KKwkgKi8KKwlzdHJ1Y3QgaW50ZWxfY2RjbGtfY29uZmlnIGxvZ2ljYWw7CisKKwkv
KgorCSAqIEFjdHVhbCBjb25maWd1cmF0aW9uIG9mIGNkY2xrLCBjYW4gYmUgZGlmZmVyZW50IGZy
b20gdGhlCisJICogbG9naWNhbCBjb25maWd1cmF0aW9uIG9ubHkgd2hlbiBhbGwgY3J0YydzIGFy
ZSBEUE1TIG9mZi4KKwkgKi8KKwlzdHJ1Y3QgaW50ZWxfY2RjbGtfY29uZmlnIGFjdHVhbDsKKwor
CS8qIG1pbmltdW0gYWNjZXB0YWJsZSBjZGNsayBmb3IgZWFjaCBwaXBlICovCisJaW50IG1pbl9j
ZGNsa1tJOTE1X01BWF9QSVBFU107CisJLyogbWluaW11bSBhY2NlcHRhYmxlIHZvbHRhZ2UgbGV2
ZWwgZm9yIGVhY2ggcGlwZSAqLworCXU4IG1pbl92b2x0YWdlX2xldmVsW0k5MTVfTUFYX1BJUEVT
XTsKKworCS8qIHBpcGUgdG8gd2hpY2ggY2QyeCB1cGRhdGUgaXMgc3luY2hyb25pemVkICovCisJ
ZW51bSBwaXBlIHBpcGU7CisKKwkvKiBmb3JjZWQgbWluaW11bSBjZGNsayBmb3IgZ2xrKyBhdWRp
byB3L2EgKi8KKwlpbnQgZm9yY2VfbWluX2NkY2xrOworCWJvb2wgZm9yY2VfbWluX2NkY2xrX2No
YW5nZWQ7Cit9OworCiBpbnQgaW50ZWxfY3J0Y19jb21wdXRlX21pbl9jZGNsayhjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiB2b2lkIGludGVsX2NkY2xrX2luaXRf
aHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwogdm9pZCBpbnRlbF9jZGNsa191bmlu
aXRfaHcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwpAQCAtMzEsMTIgKzYxLDIxIEBA
IHZvaWQgaW50ZWxfdXBkYXRlX2NkY2xrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
dik7CiB2b2lkIGludGVsX3VwZGF0ZV9yYXdjbGsoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KTsKIGJvb2wgaW50ZWxfY2RjbGtfbmVlZHNfbW9kZXNldChjb25zdCBzdHJ1Y3QgaW50
ZWxfY2RjbGtfY29uZmlnICphLAogCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19j
b25maWcgKmIpOwotdm9pZCBpbnRlbF9jZGNsa19jbGVhcl9zdGF0ZShzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSk7Ci12b2lkIGludGVsX2NkY2xrX3N3YXBfc3RhdGUoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOwogdm9pZCBpbnRlbF9zZXRfY2RjbGtfcHJlX3BsYW5l
X3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7CiB2b2lkIGludGVsX3Nl
dF9jZGNsa19wb3N0X3BsYW5lX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSk7CiB2b2lkIGludGVsX2R1bXBfY2RjbGtfY29uZmlnKGNvbnN0IHN0cnVjdCBpbnRlbF9jZGNs
a19jb25maWcgKmNkY2xrX2NvbmZpZywKIAkJCSAgICAgY29uc3QgY2hhciAqY29udGV4dCk7CiBp
bnQgaW50ZWxfbW9kZXNldF9jYWxjX2NkY2xrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlKTsKIAorc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICoKK2ludGVsX2F0b21pY19nZXRfY2Rj
bGtfc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOworCisjZGVmaW5lIHRv
X2ludGVsX2NkY2xrX3N0YXRlKHgpIGNvbnRhaW5lcl9vZigoeCksIHN0cnVjdCBpbnRlbF9jZGNs
a19zdGF0ZSwgYmFzZSkKKyNkZWZpbmUgaW50ZWxfYXRvbWljX2dldF9vbGRfY2RjbGtfc3RhdGUo
c3RhdGUpIFwKKwl0b19pbnRlbF9jZGNsa19zdGF0ZShpbnRlbF9hdG9taWNfZ2V0X29sZF9nbG9i
YWxfb2JqX3N0YXRlKHN0YXRlLCAmdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpLT5jZGNsay5vYmop
KQorI2RlZmluZSBpbnRlbF9hdG9taWNfZ2V0X25ld19jZGNsa19zdGF0ZShzdGF0ZSkgXAorCXRv
X2ludGVsX2NkY2xrX3N0YXRlKGludGVsX2F0b21pY19nZXRfbmV3X2dsb2JhbF9vYmpfc3RhdGUo
c3RhdGUsICZ0b19pOTE1KHN0YXRlLT5iYXNlLmRldiktPmNkY2xrLm9iaikpCisKK2ludCBpbnRl
bF9jZGNsa19pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CisKICNlbmRp
ZiAvKiBfX0lOVEVMX0NEQ0xLX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYwppbmRleCBkYzc2N2VmZmZkOWEuLmRjYTEwMDU0NmJlOCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTc0ODIsNyAr
NzQ4Miw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2NydGNfZGlzYWJsZV9ub2F0b21pYyhzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YywKIAlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlID0KIAkJ
dG9faW50ZWxfYndfc3RhdGUoZGV2X3ByaXYtPmJ3X29iai5zdGF0ZSk7CiAJc3RydWN0IGludGVs
X2NkY2xrX3N0YXRlICpjZGNsa19zdGF0ZSA9Ci0JCSZkZXZfcHJpdi0+Y2RjbGtfc3RhdGU7CisJ
CXRvX2ludGVsX2NkY2xrX3N0YXRlKGRldl9wcml2LT5jZGNsay5vYmouc3RhdGUpOwogCXN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0KIAkJdG9faW50ZWxfY3J0Y19zdGF0ZShj
cnRjLT5iYXNlLnN0YXRlKTsKIAllbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFp
bjsKQEAgLTc3ODAsMTcgKzc3ODAsMTcgQEAgYm9vbCBoc3dfY3J0Y19zdGF0ZV9pcHNfY2FwYWJs
ZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAlyZXR1cm4gdHJ1
ZTsKIH0KIAotc3RhdGljIGJvb2wgaHN3X2NvbXB1dGVfaXBzX2NvbmZpZyhzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3N0YXRpYyBpbnQgaHN3X2NvbXB1dGVfaXBzX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPQogCQl0b19pOTE1KGNydGNfc3RhdGUtPnVhcGkuY3J0Yy0+
ZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICppbnRlbF9zdGF0ZSA9CisJc3RydWN0
IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPQogCQl0b19pbnRlbF9hdG9taWNfc3RhdGUoY3J0
Y19zdGF0ZS0+dWFwaS5zdGF0ZSk7Ci0JY29uc3Qgc3RydWN0IGludGVsX2NkY2xrX3N0YXRlICpj
ZGNsa19zdGF0ZSA9Ci0JCSZpbnRlbF9zdGF0ZS0+Y2RjbGtfc3RhdGU7CisKKwljcnRjX3N0YXRl
LT5pcHNfZW5hYmxlZCA9IGZhbHNlOwogCiAJaWYgKCFoc3dfY3J0Y19zdGF0ZV9pcHNfY2FwYWJs
ZShjcnRjX3N0YXRlKSkKLQkJcmV0dXJuIGZhbHNlOworCQlyZXR1cm4gMDsKIAogCS8qCiAJICog
V2hlbiBJUFMgZ2V0cyBlbmFibGVkLCB0aGUgcGlwZSBDUkMgY2hhbmdlcy4gU2luY2UgSVBTIGdl
dHMKQEAgLTc3OTksMTggKzc3OTksMjcgQEAgc3RhdGljIGJvb2wgaHN3X2NvbXB1dGVfaXBzX2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAkgKiBjb21wbGV0ZWx5
IGRpc2FibGUgaXQuCiAJICovCiAJaWYgKGNydGNfc3RhdGUtPmNyY19lbmFibGVkKQotCQlyZXR1
cm4gZmFsc2U7CisJCXJldHVybiAwOwogCiAJLyogSVBTIHNob3VsZCBiZSBmaW5lIGFzIGxvbmcg
YXMgYXQgbGVhc3Qgb25lIHBsYW5lIGlzIGVuYWJsZWQuICovCiAJaWYgKCEoY3J0Y19zdGF0ZS0+
YWN0aXZlX3BsYW5lcyAmIH5CSVQoUExBTkVfQ1VSU09SKSkpCi0JCXJldHVybiBmYWxzZTsKKwkJ
cmV0dXJuIDA7CiAKLQkvKiBwaXhlbCByYXRlIG11c3RuJ3QgZXhjZWVkIDk1JSBvZiBjZGNsayB3
aXRoIElQUyBvbiBCRFcgKi8KLQlpZiAoSVNfQlJPQURXRUxMKGRldl9wcml2KSAmJgotCSAgICBj
cnRjX3N0YXRlLT5waXhlbF9yYXRlID4gY2RjbGtfc3RhdGUtPmxvZ2ljYWwuY2RjbGsgKiA5NSAv
IDEwMCkKLQkJcmV0dXJuIGZhbHNlOworCWlmIChJU19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7CisJ
CWNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGU7CiAKLQlyZXR1cm4g
dHJ1ZTsKKwkJY2RjbGtfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X2NkY2xrX3N0YXRlKHN0YXRl
KTsKKwkJaWYgKElTX0VSUihjZGNsa19zdGF0ZSkpCisJCQlyZXR1cm4gUFRSX0VSUihjZGNsa19z
dGF0ZSk7CisKKwkJLyogcGl4ZWwgcmF0ZSBtdXN0bid0IGV4Y2VlZCA5NSUgb2YgY2RjbGsgd2l0
aCBJUFMgb24gQkRXICovCisJCWlmIChjcnRjX3N0YXRlLT5waXhlbF9yYXRlID4gY2RjbGtfc3Rh
dGUtPmxvZ2ljYWwuY2RjbGsgKiA5NSAvIDEwMCkKKwkJCXJldHVybiAwOworCX0KKworCWNydGNf
c3RhdGUtPmlwc19lbmFibGVkID0gdHJ1ZTsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgYm9v
bCBpbnRlbF9jcnRjX3N1cHBvcnRzX2RvdWJsZV93aWRlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjKQpAQCAtMTI1NDMsMTQgKzEyNTUyLDExIEBAIHN0YXRpYyB1MTYgaHN3X2xpbmV0aW1l
X3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCQkJCSBhZGp1
c3RlZF9tb2RlLT5jcnRjX2Nsb2NrKTsKIH0KIAotc3RhdGljIHUxNiBoc3dfaXBzX2xpbmV0aW1l
X3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQorc3RhdGljIHUx
NiBoc3dfaXBzX2xpbmV0aW1lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtf
c3RhdGUpCiB7Ci0JY29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPQotCQl0
b19pbnRlbF9hdG9taWNfc3RhdGUoY3J0Y19zdGF0ZS0+dWFwaS5zdGF0ZSk7CiAJY29uc3Qgc3Ry
dWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPQogCQkmY3J0Y19zdGF0ZS0+aHcu
YWRqdXN0ZWRfbW9kZTsKLQljb25zdCBzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKmNkY2xrX3N0
YXRlID0KLQkJJnN0YXRlLT5jZGNsa19zdGF0ZTsKIAogCWlmICghY3J0Y19zdGF0ZS0+aHcuZW5h
YmxlKQogCQlyZXR1cm4gMDsKQEAgLTEyNTgwLDYgKzEyNTg2LDMyIEBAIHN0YXRpYyB1MTYgc2ts
X2xpbmV0aW1lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQog
CXJldHVybiBsaW5ldGltZV93bTsKIH0KIAorc3RhdGljIGludCBoc3dfY29tcHV0ZV9saW5ldGlt
ZV93bShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJCQkgICBzdHJ1Y3QgaW50
ZWxfY3J0YyAqY3J0YykKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSA9CisJCWludGVsX2F0b21pY19nZXRfbmV3X2NydGNfc3RhdGUoc3RhdGUsIGNydGMpOwor
CWNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAqY2RjbGtfc3RhdGU7CisKKwlpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSA5KQorCQljcnRjX3N0YXRlLT5saW5ldGltZSA9IHNrbF9saW5l
dGltZV93bShjcnRjX3N0YXRlKTsKKwllbHNlCisJCWNydGNfc3RhdGUtPmxpbmV0aW1lID0gaHN3
X2xpbmV0aW1lX3dtKGNydGNfc3RhdGUpOworCisJaWYgKCFoc3dfY3J0Y19zdXBwb3J0c19pcHMo
Y3J0YykpCisJCXJldHVybiAwOworCisJY2RjbGtfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X2Nk
Y2xrX3N0YXRlKHN0YXRlKTsKKwlpZiAoSVNfRVJSKGNkY2xrX3N0YXRlKSkKKwkJcmV0dXJuIFBU
Ul9FUlIoY2RjbGtfc3RhdGUpOworCisJY3J0Y19zdGF0ZS0+aXBzX2xpbmV0aW1lID0gaHN3X2lw
c19saW5ldGltZV93bShjcnRjX3N0YXRlLAorCQkJCQkJICAgICAgIGNkY2xrX3N0YXRlKTsKKwor
CXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGludGVsX2NydGNfYXRvbWljX2NoZWNrKHN0cnVj
dCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkJCSAgIHN0cnVjdCBpbnRlbF9jcnRjICpj
cnRjKQogewpAQCAtMTI2MTUsNyArMTI2NDcsNiBAQCBzdGF0aWMgaW50IGludGVsX2NydGNfYXRv
bWljX2NoZWNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkJcmV0dXJuIHJl
dDsKIAl9CiAKLQlyZXQgPSAwOwogCWlmIChkZXZfcHJpdi0+ZGlzcGxheS5jb21wdXRlX3BpcGVf
d20pIHsKIAkJcmV0ID0gZGV2X3ByaXYtPmRpc3BsYXkuY29tcHV0ZV9waXBlX3dtKGNydGNfc3Rh
dGUpOwogCQlpZiAocmV0KSB7CkBAIC0xMjY0NiwyMCArMTI2NzcsMjUgQEAgc3RhdGljIGludCBp
bnRlbF9jcnRjX2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwK
IAkJaWYgKCFyZXQpCiAJCQlyZXQgPSBpbnRlbF9hdG9taWNfc2V0dXBfc2NhbGVycyhkZXZfcHJp
diwgY3J0YywKIAkJCQkJCQkgY3J0Y19zdGF0ZSk7CisJCWlmIChyZXQpCisJCQlyZXR1cm4gcmV0
OwogCX0KIAotCWlmIChIQVNfSVBTKGRldl9wcml2KSkKLQkJY3J0Y19zdGF0ZS0+aXBzX2VuYWJs
ZWQgPSBoc3dfY29tcHV0ZV9pcHNfY29uZmlnKGNydGNfc3RhdGUpOworCWlmIChIQVNfSVBTKGRl
dl9wcml2KSkgeworCQlyZXQgPSBoc3dfY29tcHV0ZV9pcHNfY29uZmlnKGNydGNfc3RhdGUpOwor
CQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwl9CisKKwlpZiAoSU5URUxfR0VOKGRldl9wcml2
KSA+PSA5IHx8CisJICAgIElTX0JST0FEV0VMTChkZXZfcHJpdikgfHwgSVNfSEFTV0VMTChkZXZf
cHJpdikpIHsKKwkJcmV0ID0gaHN3X2NvbXB1dGVfbGluZXRpbWVfd20oc3RhdGUsIGNydGMpOwor
CQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKIAotCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDkpIHsKLQkJY3J0Y19zdGF0ZS0+bGluZXRpbWUgPSBza2xfbGluZXRpbWVfd20oY3J0Y19zdGF0
ZSk7Ci0JfSBlbHNlIGlmIChJU19CUk9BRFdFTEwoZGV2X3ByaXYpIHx8IElTX0hBU1dFTEwoZGV2
X3ByaXYpKSB7Ci0JCWNydGNfc3RhdGUtPmxpbmV0aW1lID0gaHN3X2xpbmV0aW1lX3dtKGNydGNf
c3RhdGUpOwotCQlpZiAoaHN3X2NydGNfc3VwcG9ydHNfaXBzKGNydGMpKQotCQkJY3J0Y19zdGF0
ZS0+aXBzX2xpbmV0aW1lID0gaHN3X2lwc19saW5ldGltZV93bShjcnRjX3N0YXRlKTsKIAl9CiAK
LQlyZXR1cm4gcmV0OworCXJldHVybiAwOwogfQogCiBzdGF0aWMgdm9pZCBpbnRlbF9tb2Rlc2V0
X3VwZGF0ZV9jb25uZWN0b3JfYXRvbWljX3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCkBA
IC0xNDQ3OCw3ICsxNDUxNCw3IEBAIHN0YXRpYyBib29sIGFjdGl2ZV9wbGFuZXNfYWZmZWN0c19t
aW5fY2RjbGsoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogfQogCiBzdGF0aWMg
aW50IGludGVsX2F0b21pY19jaGVja19wbGFuZXMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUsCi0JCQkJICAgICBib29sICpuZWVkX21vZGVzZXQpCisJCQkJICAgICBib29sICpuZWVk
X2NkY2xrX2NhbGMpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShzdGF0ZS0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0
Y19zdGF0ZSwgKm5ld19jcnRjX3N0YXRlOwpAQCAtMTQ1MzIsOCArMTQ1NjgsMTEgQEAgc3RhdGlj
IGludCBpbnRlbF9hdG9taWNfY2hlY2tfcGxhbmVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlLAogCSAqIGFmZmVjdGVkIHBsYW5lcyBhcmUgcGFydCBvZiB0aGUgc3RhdGUuIFdlIGNh
biBub3cKIAkgKiBjb21wdXRlIHRoZSBtaW5pbXVtIGNkY2xrIGZvciBlYWNoIHBsYW5lLgogCSAq
LwotCWZvcl9lYWNoX25ld19pbnRlbF9wbGFuZV9pbl9zdGF0ZShzdGF0ZSwgcGxhbmUsIHBsYW5l
X3N0YXRlLCBpKQotCQkqbmVlZF9tb2Rlc2V0IHw9IGludGVsX3BsYW5lX2NhbGNfbWluX2NkY2xr
KHN0YXRlLCBwbGFuZSk7CisJZm9yX2VhY2hfbmV3X2ludGVsX3BsYW5lX2luX3N0YXRlKHN0YXRl
LCBwbGFuZSwgcGxhbmVfc3RhdGUsIGkpIHsKKwkJcmV0ID0gaW50ZWxfcGxhbmVfY2FsY19taW5f
Y2RjbGsoc3RhdGUsIHBsYW5lLCBuZWVkX2NkY2xrX2NhbGMpOworCQlpZiAocmV0KQorCQkJcmV0
dXJuIHJldDsKKwl9CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTE0NjU0LDYgKzE0NjkzLDcgQEAgc3Rh
dGljIGludCBpbnRlbF9hdG9taWNfY2hlY2soc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CiAJc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUgPSB0b19pbnRlbF9hdG9taWNfc3RhdGUoX3N0YXRlKTsK
IAlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUsICpuZXdfY3J0Y19zdGF0
ZTsKKwlzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKm5ld19jZGNsa19zdGF0ZTsKIAlzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YzsKIAlpbnQgcmV0LCBpOwogCWJvb2wgYW55X21zID0gZmFsc2U7CkBA
IC0xNDc2NiwxOCArMTQ4MDYsMTggQEAgc3RhdGljIGludCBpbnRlbF9hdG9taWNfY2hlY2soc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwKIAlpZiAocmV0KQogCQlnb3RvIGZhaWw7CiAKLQlhbnlfbXMg
fD0gc3RhdGUtPmNkY2xrX3N0YXRlLmZvcmNlX21pbl9jZGNsa19jaGFuZ2VkOwotCiAJcmV0ID0g
aW50ZWxfYXRvbWljX2NoZWNrX3BsYW5lcyhzdGF0ZSwgJmFueV9tcyk7CiAJaWYgKHJldCkKIAkJ
Z290byBmYWlsOwogCisJbmV3X2NkY2xrX3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9uZXdfY2Rj
bGtfc3RhdGUoc3RhdGUpOworCWlmIChuZXdfY2RjbGtfc3RhdGUgJiYgbmV3X2NkY2xrX3N0YXRl
LT5mb3JjZV9taW5fY2RjbGtfY2hhbmdlZCkKKwkJYW55X21zID0gdHJ1ZTsKKwogCWlmIChhbnlf
bXMpIHsKIAkJcmV0ID0gaW50ZWxfbW9kZXNldF9jaGVja3Moc3RhdGUpOwogCQlpZiAocmV0KQog
CQkJZ290byBmYWlsOwotCX0gZWxzZSB7Ci0JCXN0YXRlLT5jZGNsa19zdGF0ZS5sb2dpY2FsID0g
ZGV2X3ByaXYtPmNkY2xrX3N0YXRlLmxvZ2ljYWw7CiAJfQogCiAJcmV0ID0gaW50ZWxfYXRvbWlj
X2NoZWNrX2NydGNzKHN0YXRlKTsKQEAgLTE1Njc2LDggKzE1NzE2LDYgQEAgc3RhdGljIGludCBp
bnRlbF9hdG9taWNfY29tbWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJCWFzc2VydF9nbG9i
YWxfc3RhdGVfbG9ja2VkKGRldl9wcml2KTsKIAogCQlkZXZfcHJpdi0+YWN0aXZlX3BpcGVzID0g
c3RhdGUtPmFjdGl2ZV9waXBlczsKLQotCQlpbnRlbF9jZGNsa19zd2FwX3N0YXRlKHN0YXRlKTsK
IAl9CiAKIAlkcm1fYXRvbWljX3N0YXRlX2dldCgmc3RhdGUtPmJhc2UpOwpAQCAtMTczNTYsNyAr
MTczOTQsNyBAQCB2b2lkIGludGVsX2luaXRfZGlzcGxheV9ob29rcyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiB2b2lkIGludGVsX21vZGVzZXRfaW5pdF9odyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY2RjbGtfc3RhdGUgKmNkY2xr
X3N0YXRlID0KLQkJJmk5MTUtPmNkY2xrX3N0YXRlOworCQl0b19pbnRlbF9jZGNsa19zdGF0ZShp
OTE1LT5jZGNsay5vYmouc3RhdGUpOwogCiAJaW50ZWxfdXBkYXRlX2NkY2xrKGk5MTUpOwogCWlu
dGVsX2R1bXBfY2RjbGtfY29uZmlnKCZpOTE1LT5jZGNsay5odywgIkN1cnJlbnQgQ0RDTEsiKTsK
QEAgLTE3NTg3LDYgKzE3NjI1LDEwIEBAIGludCBpbnRlbF9tb2Rlc2V0X2luaXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIAlpbnRlbF9tb2RlX2NvbmZpZ19pbml0KGk5MTUpOwog
CisJcmV0ID0gaW50ZWxfY2RjbGtfaW5pdChpOTE1KTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0
OworCiAJcmV0ID0gaW50ZWxfYndfaW5pdChpOTE1KTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0
OwpAQCAtMTgwNzEsNiArMTgxMTMsOCBAQCBzdGF0aWMgdm9pZCByZWFkb3V0X3BsYW5lX3N0YXRl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHN0YXRpYyB2b2lkIGludGVsX21v
ZGVzZXRfcmVhZG91dF9od19zdGF0ZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogewogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlzdHJ1Y3QgaW50
ZWxfY2RjbGtfc3RhdGUgKmNkY2xrX3N0YXRlID0KKwkJdG9faW50ZWxfY2RjbGtfc3RhdGUoZGV2
X3ByaXYtPmNkY2xrLm9iai5zdGF0ZSk7CiAJZW51bSBwaXBlIHBpcGU7CiAJc3RydWN0IGludGVs
X2NydGMgKmNydGM7CiAJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7CkBAIC0xODE5MCw4
ICsxODIzNCw2IEBAIHN0YXRpYyB2b2lkIGludGVsX21vZGVzZXRfcmVhZG91dF9od19zdGF0ZShz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogCWZvcl9lYWNoX2ludGVsX2NydGMoZGV2LCBjcnRjKSB7
CiAJCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAqYndfc3RhdGUgPQogCQkJdG9faW50ZWxfYndfc3Rh
dGUoZGV2X3ByaXYtPmJ3X29iai5zdGF0ZSk7Ci0JCXN0cnVjdCBpbnRlbF9jZGNsa19zdGF0ZSAq
Y2RjbGtfc3RhdGUgPQotCQkJJmRldl9wcml2LT5jZGNsa19zdGF0ZTsKIAkJc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUgPQogCQkJdG9faW50ZWxfY3J0Y19zdGF0ZShjcnRjLT5i
YXNlLnN0YXRlKTsKIAkJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5kZXggNjI4YzRh
NTZhOWU5Li41MjRiNmQ1MjM1ZWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC00NjUsOCArNDY1LDYgQEAgc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSB7CiAJc3RydWN0IF9faW50ZWxfZ2xvYmFsX29ianNfc3RhdGUgKmds
b2JhbF9vYmpzOwogCWludCBudW1fZ2xvYmFsX29ianM7CiAKLQlzdHJ1Y3QgaW50ZWxfY2RjbGtf
c3RhdGUgY2RjbGtfc3RhdGU7Ci0KIAlib29sIGRwbGxfc2V0LCBtb2Rlc2V0OwogCiAJLyoKQEAg
LTQ5Myw3ICs0OTEsNiBAQCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlIHsKIAogCS8qCiAJICog
YWN0aXZlX3BpcGVzCi0JICogY2RjbGtfc3RhdGUKIAkgKi8KIAlib29sIGdsb2JhbF9zdGF0ZV9j
aGFuZ2VkOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCA2M2NkYTg5YTRlNjIuLjJlNmIx
NDk0NzhjMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC02NSw3ICs2NSw2IEBACiAjaW5j
bHVkZSAiaTkxNV91dGlscy5oIgogCiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9iaW9zLmgiCi0j
aW5jbHVkZSAiZGlzcGxheS9pbnRlbF9jZGNsay5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxf
ZGlzcGxheS5oIgogI2luY2x1ZGUgImRpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5oIgogI2lu
Y2x1ZGUgImRpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuaCIKQEAgLTI1OCw3ICsyNTcsOCBAQCBzdHJ1
Y3QgaW50ZWxfY29ubmVjdG9yOwogc3RydWN0IGludGVsX2VuY29kZXI7CiBzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlOwogc3RydWN0IGludGVsX2NkY2xrX2NvbmZpZzsKLXN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlOworc3RydWN0IGludGVsX2NkY2xrX3N0YXRlOworc3RydWN0IGludGVsX2NkY2xr
X3ZhbHM7CiBzdHJ1Y3QgaW50ZWxfaW5pdGlhbF9wbGFuZV9jb25maWc7CiBzdHJ1Y3QgaW50ZWxf
Y3J0YzsKIHN0cnVjdCBpbnRlbF9saW1pdDsKQEAgLTI4Miw3ICsyODIsNyBAQCBzdHJ1Y3QgZHJt
X2k5MTVfZGlzcGxheV9mdW5jcyB7CiAJCQkJICAgIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsK
IAlpbnQgKCpjb21wdXRlX2dsb2JhbF93YXRlcm1hcmtzKShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0
YXRlICpzdGF0ZSk7CiAJdm9pZCAoKnVwZGF0ZV93bSkoc3RydWN0IGludGVsX2NydGMgKmNydGMp
OwotCWludCAoKm1vZGVzZXRfY2FsY19jZGNsaykoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAq
c3RhdGUpOworCWludCAoKm1vZGVzZXRfY2FsY19jZGNsaykoc3RydWN0IGludGVsX2NkY2xrX3N0
YXRlICpzdGF0ZSk7CiAJdTggKCpjYWxjX3ZvbHRhZ2VfbGV2ZWwpKGludCBjZGNsayk7CiAJLyog
UmV0dXJucyB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBjcnRjLCBhbmQgaWYgdGhlIGNydGMgaXMg
YWN0aXZlLAogCSAqIGZpbGxzIG91dCB0aGUgcGlwZS1jb25maWcgd2l0aCB0aGUgaHcgc3RhdGUu
ICovCkBAIC04OTEsMzMgKzg5MSw2IEBAIHN0cnVjdCBpOTE1X3NlbGZ0ZXN0X3N0YXNoIHsKIAlh
dG9taWNfdCBjb3VudGVyOwogfTsKIAotc3RydWN0IGludGVsX2NkY2xrX3N0YXRlIHsKLQkvKgot
CSAqIExvZ2ljYWwgY29uZmlndXJhdGlvbiBvZiBjZGNsayAodXNlZCBmb3IgYWxsIHNjYWxpbmcs
Ci0JICogd2F0ZXJtYXJrLCBldGMuIGNhbGN1bGF0aW9ucyBhbmQgY2hlY2tzKS4gVGhpcyBpcwot
CSAqIGNvbXB1dGVkIGFzIGlmIGFsbCBlbmFibGVkIGNydGNzIHdlcmUgYWN0aXZlLgotCSAqLwot
CXN0cnVjdCBpbnRlbF9jZGNsa19jb25maWcgbG9naWNhbDsKLQotCS8qCi0JICogQWN0dWFsIGNv
bmZpZ3VyYXRpb24gb2YgY2RjbGssIGNhbiBiZSBkaWZmZXJlbnQgZnJvbSB0aGUKLQkgKiBsb2dp
Y2FsIGNvbmZpZ3VyYXRpb24gb25seSB3aGVuIGFsbCBjcnRjJ3MgYXJlIERQTVMgb2ZmLgotCSAq
LwotCXN0cnVjdCBpbnRlbF9jZGNsa19jb25maWcgYWN0dWFsOwotCi0JLyogbWluaW11bSBhY2Nl
cHRhYmxlIGNkY2xrIGZvciBlYWNoIHBpcGUgKi8KLQlpbnQgbWluX2NkY2xrW0k5MTVfTUFYX1BJ
UEVTXTsKLQkvKiBtaW5pbXVtIGFjY2VwdGFibGUgdm9sdGFnZSBsZXZlbCBmb3IgZWFjaCBwaXBl
ICovCi0JdTggbWluX3ZvbHRhZ2VfbGV2ZWxbSTkxNV9NQVhfUElQRVNdOwotCi0JLyogcGlwZSB0
byB3aGljaCBjZDJ4IHVwZGF0ZSBpcyBzeW5jaHJvbml6ZWQgKi8KLQllbnVtIHBpcGUgcGlwZTsK
LQotCS8qIGZvcmNlZCBtaW5pbXVtIGNkY2xrIGZvciBnbGsrIGF1ZGlvIHcvYSAqLwotCWludCBm
b3JjZV9taW5fY2RjbGs7Ci0JYm9vbCBmb3JjZV9taW5fY2RjbGtfY2hhbmdlZDsKLX07Ci0KIHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSBkcm07CiAKQEAgLTEw
MzQsMTggKzEwMDcsMTQgQEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgewogCXVuc2lnbmVkIGlu
dCBmZGlfcGxsX2ZyZXE7CiAJdW5zaWduZWQgaW50IGN6Y2xrX2ZyZXE7CiAKLQkvKgotCSAqIEZv
ciByZWFkaW5nIGhvbGRpbmcgYW55IGNydGMgbG9jayBpcyBzdWZmaWNpZW50LAotCSAqIGZvciB3
cml0aW5nIG11c3QgaG9sZCBhbGwgb2YgdGhlbS4KLQkgKi8KLQlzdHJ1Y3QgaW50ZWxfY2RjbGtf
c3RhdGUgY2RjbGtfc3RhdGU7Ci0KIAlzdHJ1Y3QgewogCQkvKiBUaGUgY3VycmVudCBoYXJkd2Fy
ZSBjZGNsayBjb25maWd1cmF0aW9uICovCiAJCXN0cnVjdCBpbnRlbF9jZGNsa19jb25maWcgaHc7
CiAKIAkJLyogY2RjbGssIGRpdmlkZXIsIGFuZCByYXRpbyB0YWJsZSBmcm9tIGJzcGVjICovCiAJ
CWNvbnN0IHN0cnVjdCBpbnRlbF9jZGNsa192YWxzICp0YWJsZTsKKworCQlzdHJ1Y3QgaW50ZWxf
Z2xvYmFsX29iaiBvYmo7CiAJfSBjZGNsazsKIAogCS8qKgpAQCAtMTEwNCw4ICsxMDczLDggQEAg
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgewogCXN0cnVjdCBsaXN0X2hlYWQgZ2xvYmFsX29ial9s
aXN0OwogCiAJLyoKLQkgKiBGb3IgcmVhZGluZyBhY3RpdmVfcGlwZXMsIGNkY2xrX3N0YXRlIGhv
bGRpbmcgYW55IGNydGMKLQkgKiBsb2NrIGlzIHN1ZmZpY2llbnQsIGZvciB3cml0aW5nIG11c3Qg
aG9sZCBhbGwgb2YgdGhlbS4KKwkgKiBGb3IgcmVhZGluZyBhY3RpdmVfcGlwZXMgaG9sZGluZyBh
bnkgY3J0YyBsb2NrIGlzCisJICogc3VmZmljaWVudCwgZm9yIHdyaXRpbmcgbXVzdCBob2xkIGFs
bCBvZiB0aGVtLgogCSAqLwogCXU4IGFjdGl2ZV9waXBlczsKIAotLSAKMi4yNC4xCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGlu
ZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVl
ZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

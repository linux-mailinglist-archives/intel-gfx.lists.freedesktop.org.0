Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0670763603
	for <lists+intel-gfx@lfdr.de>; Tue,  9 Jul 2019 14:34:35 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 31D2789AC2;
	Tue,  9 Jul 2019 12:34:33 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id ACA1A89AC2
 for <intel-gfx@lists.freedesktop.org>; Tue,  9 Jul 2019 12:34:30 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Jul 2019 05:34:30 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,470,1557212400"; d="scan'208";a="249135670"
Received: from mderosix-mobl.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.252.49.241])
 by orsmga001.jf.intel.com with ESMTP; 09 Jul 2019 05:34:29 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  9 Jul 2019 15:33:51 +0300
Message-Id: <20190709123351.5645-14-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190709123351.5645-1-lionel.g.landwerlin@intel.com>
References: <20190709123351.5645-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v8 13/13] drm/i915: add support for perf
 configuration queries
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TGlzdGluZyBjb25maWd1cmF0aW9ucyBhdCB0aGUgbW9tZW50IGlzIHN1cHBvcnRlZCBvbmx5IHRo
cm91Z2ggc3lzZnMuClRoaXMgbWlnaHQgY2F1c2UgaXNzdWVzIGZvciBhcHBsaWNhdGlvbnMgd2Fu
dGluZyB0byBsaXN0CmNvbmZpZ3VyYXRpb25zIGZyb20gYSBjb250YWluZXIgd2hlcmUgc3lzZnMg
aXNuJ3QgYXZhaWxhYmxlLgoKVGhpcyBjaGFuZ2UgYWRkcyBhIHdheSB0byBxdWVyeSB0aGUgbnVt
YmVyIG9mIGNvbmZpZ3VyYXRpb25zIGFuZCB0aGVpcgpjb250ZW50IHRocm91Z2ggdGhlIGk5MTUg
cXVlcnkgdUFQSS4KCnYyOiBGaXggc3BhcnNlIHdhcm5pbmdzIChMaW9uZWwpCiAgICBBZGQgc3Vw
cG9ydCB0byBxdWVyeSBjb25maWd1cmF0aW9uIHVzaW5nIHV1aWQgKExpb25lbCkKCnYzOiBGaXgg
c29tZSBpbmNvbnNpc3RlbmN5IGluIHVhcGkgaGVhZGVyIChMaW9uZWwpCiAgICBGaXggdW5sb2Nr
aW5nIHdoZW4gbm90IGxvY2tlZCBpc3N1ZSAoTGlvbmVsKQogICAgQWRkIGRlYnVnIG1lc3NhZ2Vz
IChMaW9uZWwpCgp2NDogRml4IG1pc3NpbmcgdW5sb2NrIChEYW4pCgpTaWduZWQtb2ZmLWJ5OiBM
aW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+Ci0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgIHwgICA2ICsKIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcGVyZi5jICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3F1ZXJ5
LmMgfCAyNzcgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL3VhcGkvZHJt
L2k5MTVfZHJtLmggICAgICAgfCAgNjUgKysrKysrLQogNCBmaWxlcyBjaGFuZ2VkLCAzNDggaW5z
ZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCBj
NzJlN2M3NDZiNTcuLjI4ZjBmNDkwYjdiMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0x
NzI5LDYgKzE3MjksMTIgQEAgc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgewogCQkgKi8KIAkJc3Ry
dWN0IGxpc3RfaGVhZCBtZXRyaWNzX2J1ZmZlcnM7CiAKKwkJLyoKKwkJICogTnVtYmVyIG9mIGR5
bmFtaWMgY29uZmlndXJhdGlvbnMsIHlvdSBuZWVkIHRvIGhvbGQKKwkJICogZGV2X3ByaXYtPnBl
cmYubWV0cmljc19sb2NrIHRvIGFjY2VzcyBpdC4KKwkJICovCisJCXUzMiBuX21ldHJpY3M7CisK
IAkJLyoKIAkJICogTG9jayBhc3NvY2lhdGVkIHdpdGggYW55dGhpbmcgYmVsb3cgd2l0aGluIHRo
aXMgc3RydWN0dXJlCiAJCSAqIGV4Y2VwdCBleGNsdXNpdmVfc3RyZWFtLgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3BlcmYuYwppbmRleCBkZmQ5ZWQ0ZjMyMWUuLjljZDEzNjJkNjkyMiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9wZXJmLmMKQEAgLTM3MjIsNiArMzcyMiw4IEBAIGludCBpOTE1X3BlcmZfYWRkX2Nv
bmZpZ19pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQlnb3RvIHN5
c2ZzX2VycjsKIAl9CiAKKwlkZXZfcHJpdi0+cGVyZi5uX21ldHJpY3MrKzsKKwogCW11dGV4X3Vu
bG9jaygmZGV2X3ByaXYtPnBlcmYubWV0cmljc19sb2NrKTsKIAogCURSTV9ERUJVRygiQWRkZWQg
Y29uZmlnICVzIGlkPSVpXG4iLCBvYV9jb25maWctPnV1aWQsIG9hX2NvbmZpZy0+aWQpOwpAQCAt
Mzc4Miw2ICszNzg0LDcgQEAgaW50IGk5MTVfcGVyZl9yZW1vdmVfY29uZmlnX2lvY3RsKHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCQkgICAmb2FfY29uZmlnLT5zeXNmc19t
ZXRyaWMpOwogCiAJaWRyX3JlbW92ZSgmZGV2X3ByaXYtPnBlcmYubWV0cmljc19pZHIsICphcmcp
OworCWRldl9wcml2LT5wZXJmLm5fbWV0cmljcy0tOwogCiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJp
di0+cGVyZi5tZXRyaWNzX2xvY2spOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3F1ZXJ5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3F1ZXJ5LmMKaW5kZXgg
N2I3MDE2MTcxMDU3Li43NGI2MzI5OThkMGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcXVlcnkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3F1ZXJ5LmMK
QEAgLTE0MywxMCArMTQzLDI4NyBAQCBxdWVyeV9lbmdpbmVfaW5mbyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSwKIAlyZXR1cm4gbGVuOwogfQogCitzdGF0aWMgaW50IGNhbl9jb3B5X3Bl
cmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIodTMyIHVzZXJfbl9yZWdzLAorCQkJCQkJICAg
IHU2NCB1c2VyX3JlZ3NfcHRyLAorCQkJCQkJICAgIHUzMiBrZXJuZWxfbl9yZWdzKQoreworCS8q
CisJICogV2UnbGwganVzdCBwdXQgdGhlIG51bWJlciBvZiByZWdpc3RlcnMsIGFuZCB3b24ndCBj
b3B5IHRoZQorCSAqIHJlZ2lzdGVyLgorCSAqLworCWlmICh1c2VyX25fcmVncyA9PSAwKQorCQly
ZXR1cm4gMDsKKworCWlmICh1c2VyX25fcmVncyA8IGtlcm5lbF9uX3JlZ3MpCisJCXJldHVybiAt
RUlOVkFMOworCisJaWYgKCFhY2Nlc3Nfb2sodTY0X3RvX3VzZXJfcHRyKHVzZXJfcmVnc19wdHIp
LAorCQkgICAgICAgMiAqIHNpemVvZih1MzIpICoga2VybmVsX25fcmVncykpCisJCXJldHVybiAt
RUZBVUxUOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgY29weV9wZXJmX2NvbmZpZ19y
ZWdpc3RlcnNfb3JfbnVtYmVyKGNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqa2VybmVsX3JlZ3Ms
CisJCQkJCQl1MzIga2VybmVsX25fcmVncywKKwkJCQkJCXU2NCB1c2VyX3JlZ3NfcHRyLAorCQkJ
CQkJdTMyICp1c2VyX25fcmVncykKK3sKKwl1MzIgcjsKKworCWlmICgqdXNlcl9uX3JlZ3MgPT0g
MCkgeworCQkqdXNlcl9uX3JlZ3MgPSBrZXJuZWxfbl9yZWdzOworCQlyZXR1cm4gMDsKKwl9CisK
KwkqdXNlcl9uX3JlZ3MgPSBrZXJuZWxfbl9yZWdzOworCisJZm9yIChyID0gMDsgciA8IGtlcm5l
bF9uX3JlZ3M7IHIrKykgeworCQl1MzIgX191c2VyICp1c2VyX3JlZ19wdHIgPQorCQkJdTY0X3Rv
X3VzZXJfcHRyKHVzZXJfcmVnc19wdHIgKyBzaXplb2YodTMyKSAqIHIgKiAyKTsKKwkJdTMyIF9f
dXNlciAqdXNlcl92YWxfcHRyID0KKwkJCXU2NF90b191c2VyX3B0cih1c2VyX3JlZ3NfcHRyICsg
c2l6ZW9mKHUzMikgKiByICogMiArCisJCQkJCXNpemVvZih1MzIpKTsKKwkJaW50IHJldDsKKwor
CQlyZXQgPSBfX3B1dF91c2VyKGk5MTVfbW1pb19yZWdfb2Zmc2V0KGtlcm5lbF9yZWdzW3JdLmFk
ZHIpLAorCQkJCSB1c2VyX3JlZ19wdHIpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIC1FRkFVTFQ7
CisKKwkJcmV0ID0gX19wdXRfdXNlcihrZXJuZWxfcmVnc1tyXS52YWx1ZSwgdXNlcl92YWxfcHRy
KTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiAtRUZBVUxUOworCX0KKworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW50IHF1ZXJ5X3BlcmZfY29uZmlnX2RhdGEoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUsCisJCQkJICBzdHJ1Y3QgZHJtX2k5MTVfcXVlcnlfaXRlbSAqcXVlcnlfaXRlbSwK
KwkJCQkgIGJvb2wgdXNlX3V1aWQpCit7CisJc3RydWN0IGRybV9pOTE1X3F1ZXJ5X3BlcmZfY29u
ZmlnIF9fdXNlciAqdXNlcl9xdWVyeV9jb25maWdfcHRyID0KKwkJdTY0X3RvX3VzZXJfcHRyKHF1
ZXJ5X2l0ZW0tPmRhdGFfcHRyKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcGVyZl9vYV9jb25maWcgX191
c2VyICp1c2VyX2NvbmZpZ19wdHIgPQorCQl1NjRfdG9fdXNlcl9wdHIocXVlcnlfaXRlbS0+ZGF0
YV9wdHIgKworCQkJCXNpemVvZihzdHJ1Y3QgZHJtX2k5MTVfcXVlcnlfcGVyZl9jb25maWcpKTsK
KwlzdHJ1Y3QgZHJtX2k5MTVfcGVyZl9vYV9jb25maWcgdXNlcl9jb25maWc7CisJc3RydWN0IGk5
MTVfb2FfY29uZmlnICpvYV9jb25maWcgPSBOVUxMOworCWNoYXIgdXVpZFtVVUlEX1NUUklOR19M
RU4gKyAxXTsKKwl1NjQgY29uZmlnX2lkOworCXUzMiBmbGFncywgdG90YWxfc2l6ZTsKKwlpbnQg
cmV0OworCisJaWYgKCFpOTE1LT5wZXJmLmluaXRpYWxpemVkKQorCQlyZXR1cm4gLUVOT0RFVjsK
KworCXRvdGFsX3NpemUgPSBzaXplb2Yoc3RydWN0IGRybV9pOTE1X3F1ZXJ5X3BlcmZfY29uZmln
KSArCisJCXNpemVvZihzdHJ1Y3QgZHJtX2k5MTVfcGVyZl9vYV9jb25maWcpOworCisJaWYgKHF1
ZXJ5X2l0ZW0tPmxlbmd0aCA9PSAwKQorCQlyZXR1cm4gdG90YWxfc2l6ZTsKKworCWlmIChxdWVy
eV9pdGVtLT5sZW5ndGggPCB0b3RhbF9zaXplKSB7CisJCURSTV9ERUJVRygiSW52YWxpZCBxdWVy
eSBjb25maWcgZGF0YSBpdGVtIHNpemU9JXUgZXhwZWN0ZWQ9JXVcbiIsCisJCQkgIHF1ZXJ5X2l0
ZW0tPmxlbmd0aCwgdG90YWxfc2l6ZSk7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWlmICgh
YWNjZXNzX29rKHVzZXJfcXVlcnlfY29uZmlnX3B0ciwgdG90YWxfc2l6ZSkpCisJCXJldHVybiAt
RUZBVUxUOworCisJaWYgKF9fZ2V0X3VzZXIoZmxhZ3MsICZ1c2VyX3F1ZXJ5X2NvbmZpZ19wdHIt
PmZsYWdzKSkKKwkJcmV0dXJuIC1FRkFVTFQ7CisKKwlpZiAoZmxhZ3MgIT0gMCkKKwkJcmV0dXJu
IC1FSU5WQUw7CisKKwlpZiAodXNlX3V1aWQpIHsKKwkJQlVJTERfQlVHX09OKHNpemVvZih1c2Vy
X3F1ZXJ5X2NvbmZpZ19wdHItPnV1aWQpID49IHNpemVvZih1dWlkKSk7CisKKwkJbWVtc2V0KCZ1
dWlkLCAwLCBzaXplb2YodXVpZCkpOworCQlpZiAoX19jb3B5X2Zyb21fdXNlcih1dWlkLCB1c2Vy
X3F1ZXJ5X2NvbmZpZ19wdHItPnV1aWQsCisJCQkJICAgICBzaXplb2YodXNlcl9xdWVyeV9jb25m
aWdfcHRyLT51dWlkKSkpCisJCQlyZXR1cm4gLUVGQVVMVDsKKwl9IGVsc2UgeworCQlpZiAoX19n
ZXRfdXNlcihjb25maWdfaWQsICZ1c2VyX3F1ZXJ5X2NvbmZpZ19wdHItPmNvbmZpZykpIHsKKwkJ
CXJldHVybiAtRUZBVUxUOworCQl9CisJfQorCisJcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRp
YmxlKCZpOTE1LT5wZXJmLm1ldHJpY3NfbG9jayk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsK
KworCWlmICh1c2VfdXVpZCkgeworCQlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKnRtcDsKKwkJaW50
IGlkOworCisJCWlkcl9mb3JfZWFjaF9lbnRyeSgmaTkxNS0+cGVyZi5tZXRyaWNzX2lkciwgdG1w
LCBpZCkgeworCQkJaWYgKCFzdHJjbXAodG1wLT51dWlkLCB1dWlkKSkgeworCQkJCWtyZWZfZ2V0
KCZ0bXAtPnJlZik7CisJCQkJb2FfY29uZmlnID0gdG1wOworCQkJCWJyZWFrOworCQkJfQorCQl9
CisJfSBlbHNlIHsKKwkJcmV0ID0gaTkxNV9wZXJmX2dldF9vYV9jb25maWcoaTkxNSwgY29uZmln
X2lkLCAmb2FfY29uZmlnLCBOVUxMKTsKKwl9CisKKwltdXRleF91bmxvY2soJmk5MTUtPnBlcmYu
bWV0cmljc19sb2NrKTsKKworCWlmIChyZXQgfHwgIW9hX2NvbmZpZykKKwkJcmV0dXJuIC1FTk9F
TlQ7CisKKwlpZiAoX19jb3B5X2Zyb21fdXNlcigmdXNlcl9jb25maWcsIHVzZXJfY29uZmlnX3B0
ciwKKwkJCSAgICAgc2l6ZW9mKHVzZXJfY29uZmlnKSkpIHsKKwkJcmV0ID0gLUVGQVVMVDsKKwkJ
Z290byBvdXQ7CisJfQorCisJcmV0ID0gY2FuX2NvcHlfcGVyZl9jb25maWdfcmVnaXN0ZXJzX29y
X251bWJlcih1c2VyX2NvbmZpZy5uX2Jvb2xlYW5fcmVncywKKwkJCQkJCSAgICAgICB1c2VyX2Nv
bmZpZy5ib29sZWFuX3JlZ3NfcHRyLAorCQkJCQkJICAgICAgIG9hX2NvbmZpZy0+Yl9jb3VudGVy
X3JlZ3NfbGVuKTsKKwlpZiAocmV0KQorCQlnb3RvIG91dDsKKworCXJldCA9IGNhbl9jb3B5X3Bl
cmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIodXNlcl9jb25maWcubl9mbGV4X3JlZ3MsCisJ
CQkJCQkgICAgICAgdXNlcl9jb25maWcuZmxleF9yZWdzX3B0ciwKKwkJCQkJCSAgICAgICBvYV9j
b25maWctPmZsZXhfcmVnc19sZW4pOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJcmV0ID0g
Y2FuX2NvcHlfcGVyZl9jb25maWdfcmVnaXN0ZXJzX29yX251bWJlcih1c2VyX2NvbmZpZy5uX211
eF9yZWdzLAorCQkJCQkJICAgICAgIHVzZXJfY29uZmlnLm11eF9yZWdzX3B0ciwKKwkJCQkJCSAg
ICAgICBvYV9jb25maWctPm11eF9yZWdzX2xlbik7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisK
KwlyZXQgPSBjb3B5X3BlcmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIob2FfY29uZmlnLT5i
X2NvdW50ZXJfcmVncywKKwkJCQkJCSAgIG9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3NfbGVuLAor
CQkJCQkJICAgdXNlcl9jb25maWcuYm9vbGVhbl9yZWdzX3B0ciwKKwkJCQkJCSAgICZ1c2VyX2Nv
bmZpZy5uX2Jvb2xlYW5fcmVncyk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwlyZXQgPSBj
b3B5X3BlcmZfY29uZmlnX3JlZ2lzdGVyc19vcl9udW1iZXIob2FfY29uZmlnLT5mbGV4X3JlZ3Ms
CisJCQkJCQkgICBvYV9jb25maWctPmZsZXhfcmVnc19sZW4sCisJCQkJCQkgICB1c2VyX2NvbmZp
Zy5mbGV4X3JlZ3NfcHRyLAorCQkJCQkJICAgJnVzZXJfY29uZmlnLm5fZmxleF9yZWdzKTsKKwlp
ZiAocmV0KQorCQlnb3RvIG91dDsKKworCXJldCA9IGNvcHlfcGVyZl9jb25maWdfcmVnaXN0ZXJz
X29yX251bWJlcihvYV9jb25maWctPm11eF9yZWdzLAorCQkJCQkJICAgb2FfY29uZmlnLT5tdXhf
cmVnc19sZW4sCisJCQkJCQkgICB1c2VyX2NvbmZpZy5tdXhfcmVnc19wdHIsCisJCQkJCQkgICAm
dXNlcl9jb25maWcubl9tdXhfcmVncyk7CisJaWYgKHJldCkKKwkJZ290byBvdXQ7CisKKwltZW1j
cHkodXNlcl9jb25maWcudXVpZCwgb2FfY29uZmlnLT51dWlkLCBzaXplb2YodXNlcl9jb25maWcu
dXVpZCkpOworCisJaWYgKF9fY29weV90b191c2VyKHVzZXJfY29uZmlnX3B0ciwgJnVzZXJfY29u
ZmlnLAorCQkJICAgc2l6ZW9mKHVzZXJfY29uZmlnKSkpIHsKKwkJcmV0ID0gLUVGQVVMVDsKKwkJ
Z290byBvdXQ7CisJfQorCisJcmV0ID0gdG90YWxfc2l6ZTsKKworb3V0OgorCWk5MTVfb2FfY29u
ZmlnX3B1dChvYV9jb25maWcpOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBxdWVy
eV9wZXJmX2NvbmZpZ19saXN0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAorCQkJCSAg
c3RydWN0IGRybV9pOTE1X3F1ZXJ5X2l0ZW0gKnF1ZXJ5X2l0ZW0pCit7CisJc3RydWN0IGRybV9p
OTE1X3F1ZXJ5X3BlcmZfY29uZmlnIF9fdXNlciAqdXNlcl9xdWVyeV9jb25maWdfcHRyID0KKwkJ
dTY0X3RvX3VzZXJfcHRyKHF1ZXJ5X2l0ZW0tPmRhdGFfcHRyKTsKKwlzdHJ1Y3QgaTkxNV9vYV9j
b25maWcgKm9hX2NvbmZpZzsKKwl1MzIgZmxhZ3MsIHRvdGFsX3NpemU7CisJdTY0IG5fY29uZmln
czsKKwlpbnQgcmV0LCBpZDsKKworCWlmICghaTkxNS0+cGVyZi5pbml0aWFsaXplZCkKKwkJcmV0
dXJuIC1FTk9ERVY7CisKKwkvKiBDb3VudCB0aGUgZGVmYXVsdCB0ZXN0IGNvbmZpZ3VyYXRpb24g
Ki8KKwluX2NvbmZpZ3MgPSBpOTE1LT5wZXJmLm5fbWV0cmljcyArIDE7CisJdG90YWxfc2l6ZSA9
IHNpemVvZihzdHJ1Y3QgZHJtX2k5MTVfcXVlcnlfcGVyZl9jb25maWcpICsKKwkJc2l6ZW9mKHU2
NCkgKiBuX2NvbmZpZ3M7CisKKwlpZiAocXVlcnlfaXRlbS0+bGVuZ3RoID09IDApCisJCXJldHVy
biB0b3RhbF9zaXplOworCisJaWYgKHF1ZXJ5X2l0ZW0tPmxlbmd0aCA8IHRvdGFsX3NpemUpIHsK
KwkJRFJNX0RFQlVHKCJJbnZhbGlkIHF1ZXJ5IGNvbmZpZyBsaXN0IGl0ZW0gc2l6ZT0ldSBleHBl
Y3RlZD0ldVxuIiwKKwkJCSAgcXVlcnlfaXRlbS0+bGVuZ3RoLCB0b3RhbF9zaXplKTsKKwkJcmV0
dXJuIC1FSU5WQUw7CisJfQorCisJaWYgKCFhY2Nlc3Nfb2sodXNlcl9xdWVyeV9jb25maWdfcHRy
LCB0b3RhbF9zaXplKSkKKwkJcmV0dXJuIC1FRkFVTFQ7CisKKwlpZiAoX19nZXRfdXNlcihmbGFn
cywgJnVzZXJfcXVlcnlfY29uZmlnX3B0ci0+ZmxhZ3MpKQorCQlyZXR1cm4gLUVGQVVMVDsKKwor
CWlmIChmbGFncyAhPSAwKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlmIChfX3B1dF91c2VyKG5f
Y29uZmlncywgJnVzZXJfcXVlcnlfY29uZmlnX3B0ci0+Y29uZmlnKSkKKwkJcmV0dXJuIC1FRkFV
TFQ7CisKKwlpZiAoX19wdXRfdXNlcigodTY0KTFVTEwsICZ1c2VyX3F1ZXJ5X2NvbmZpZ19wdHIt
PmRhdGFbMF0pKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCXJldCA9IG11dGV4X2xvY2tfaW50ZXJy
dXB0aWJsZSgmaTkxNS0+cGVyZi5tZXRyaWNzX2xvY2spOworCWlmIChyZXQpCisJCXJldHVybiBy
ZXQ7CisKKwluX2NvbmZpZ3MgPSAxOworCWlkcl9mb3JfZWFjaF9lbnRyeSgmaTkxNS0+cGVyZi5t
ZXRyaWNzX2lkciwgb2FfY29uZmlnLCBpZCkgeworCQl1NjQgX191c2VyICppdGVtID0KKwkJCXU2
NF90b191c2VyX3B0cihxdWVyeV9pdGVtLT5kYXRhX3B0ciArCisJCQkJCXNpemVvZihzdHJ1Y3Qg
ZHJtX2k5MTVfcXVlcnlfcGVyZl9jb25maWcpICsKKwkJCQkJbl9jb25maWdzICogc2l6ZW9mKHU2
NCkpOworCisJCWlmIChfX3B1dF91c2VyKCh1NjQpaWQsIGl0ZW0pKSB7CisJCQlyZXQgPSAtRUZB
VUxUOworCQkJZ290byBvdXQ7CisJCX0KKwkJbl9jb25maWdzKys7CisJfQorCisJcmV0ID0gdG90
YWxfc2l6ZTsKKworb3V0OgorCW11dGV4X3VubG9jaygmaTkxNS0+cGVyZi5tZXRyaWNzX2xvY2sp
OworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBpbnQgcXVlcnlfcGVyZl9jb25maWcoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCisJCQkgICAgIHN0cnVjdCBkcm1faTkxNV9xdWVyeV9p
dGVtICpxdWVyeV9pdGVtKQoreworCXN3aXRjaCAocXVlcnlfaXRlbS0+ZmxhZ3MpIHsKKwljYXNl
IERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0xJU1Q6CisJCXJldHVybiBxdWVyeV9wZXJmX2Nv
bmZpZ19saXN0KGk5MTUsIHF1ZXJ5X2l0ZW0pOworCWNhc2UgRFJNX0k5MTVfUVVFUllfUEVSRl9D
T05GSUdfREFUQV9GT1JfVVVJRDoKKwkJcmV0dXJuIHF1ZXJ5X3BlcmZfY29uZmlnX2RhdGEoaTkx
NSwgcXVlcnlfaXRlbSwgdHJ1ZSk7CisJY2FzZSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19E
QVRBX0ZPUl9JRDoKKwkJcmV0dXJuIHF1ZXJ5X3BlcmZfY29uZmlnX2RhdGEoaTkxNSwgcXVlcnlf
aXRlbSwgZmFsc2UpOworCWRlZmF1bHQ6CisJCXJldHVybiAtRUlOVkFMOworCX0KK30KKwogc3Rh
dGljIGludCAoKiBjb25zdCBpOTE1X3F1ZXJ5X2Z1bmNzW10pKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJCQkJc3RydWN0IGRybV9pOTE1X3F1ZXJ5X2l0ZW0gKnF1ZXJ5X2l0
ZW0pID0gewogCXF1ZXJ5X3RvcG9sb2d5X2luZm8sCiAJcXVlcnlfZW5naW5lX2luZm8sCisJcXVl
cnlfcGVyZl9jb25maWcsCiB9OwogCiBpbnQgaTkxNV9xdWVyeV9pb2N0bChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LCB2b2lkICpkYXRhLCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpCmRpZmYgLS1naXQg
YS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmggYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJt
LmgKaW5kZXggNzM1OWYxOTA3MjhjLi41NDVkODdhNzIyYjQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
dWFwaS9kcm0vaTkxNV9kcm0uaAorKysgYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKQEAg
LTEwMzcsOCArMTAzNyw3IEBAIGVudW0gZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0IHsKIAlE
Uk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfVElNRUxJTkVfRkVOQ0VTID0gMCwKIAogCS8qKgot
CSAqIFRoaXMgaWRlbnRpZmllciBpcyBhc3NvY2lhdGVkIHdpdGgKLQkgKiBkcm1faTkxNV9nZW1f
ZXhlY2J1ZmZlcl9wZXJmX2V4dC4KKwkgKiBTZWUgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfcGVy
Zl9leHQuCiAJICovCiAJRFJNX0k5MTVfR0VNX0VYRUNCVUZGRVJfRVhUX1BFUkYsCiAKQEAgLTIx
MTAsNiArMjEwOSw3IEBAIHN0cnVjdCBkcm1faTkxNV9xdWVyeV9pdGVtIHsKIAlfX3U2NCBxdWVy
eV9pZDsKICNkZWZpbmUgRFJNX0k5MTVfUVVFUllfVE9QT0xPR1lfSU5GTyAgICAxCiAjZGVmaW5l
IERSTV9JOTE1X1FVRVJZX0VOR0lORV9JTkZPCTIKKyNkZWZpbmUgRFJNX0k5MTVfUVVFUllfUEVS
Rl9DT05GSUcgICAgICAzCiAvKiBNdXN0IGJlIGtlcHQgY29tcGFjdCAtLSBubyBob2xlcyBhbmQg
d2VsbCBkb2N1bWVudGVkICovCiAKIAkvKgpAQCAtMjEyMSw5ICsyMTIxLDE4IEBAIHN0cnVjdCBk
cm1faTkxNV9xdWVyeV9pdGVtIHsKIAlfX3MzMiBsZW5ndGg7CiAKIAkvKgotCSAqIFVudXNlZCBm
b3Igbm93LiBNdXN0IGJlIGNsZWFyZWQgdG8gemVyby4KKwkgKiBXaGVuIHF1ZXJ5X2lkID09IERS
TV9JOTE1X1FVRVJZX1RPUE9MT0dZX0lORk8sIG11c3QgYmUgMC4KKwkgKgorCSAqIFdoZW4gcXVl
cnlfaWQgPT0gRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUcsIG11c3QgYmUgb25lIG9mIHRoZQor
CSAqIGZvbGxvd2luZyA6CisJICogICAgICAgICAtIERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklH
X0xJU1QKKwkgKiAgICAgICAgIC0gRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUdfREFUQV9GT1Jf
VVVJRAorCSAqICAgICAgICAgLSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19GT1JfVVVJRAog
CSAqLwogCV9fdTMyIGZsYWdzOworI2RlZmluZSBEUk1fSTkxNV9RVUVSWV9QRVJGX0NPTkZJR19M
SVNUICAgICAgICAgIDEKKyNkZWZpbmUgRFJNX0k5MTVfUVVFUllfUEVSRl9DT05GSUdfREFUQV9G
T1JfVVVJRCAyCisjZGVmaW5lIERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0RBVEFfRk9SX0lE
ICAgMwogCiAJLyoKIAkgKiBEYXRhIHdpbGwgYmUgd3JpdHRlbiBhdCB0aGUgbG9jYXRpb24gcG9p
bnRlZCBieSBkYXRhX3B0ciB3aGVuIHRoZQpAQCAtMjI0OSw2ICsyMjU4LDU2IEBAIHN0cnVjdCBk
cm1faTkxNV9xdWVyeV9lbmdpbmVfaW5mbyB7CiAJc3RydWN0IGRybV9pOTE1X2VuZ2luZV9pbmZv
IGVuZ2luZXNbXTsKIH07CiAKKy8qCisgKiBEYXRhIHdyaXR0ZW4gYnkgdGhlIGtlcm5lbCB3aXRo
IHF1ZXJ5IERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHLgorICovCitzdHJ1Y3QgZHJtX2k5MTVf
cXVlcnlfcGVyZl9jb25maWcgeworCXVuaW9uIHsKKwkJLyoKKwkJICogV2hlbiBxdWVyeV9pdGVt
LmZsYWdzID09IERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0xJU1QsIGk5MTUgc2V0cworCQkg
KiB0aGlzIGZpZWxkcyB0byB0aGUgbnVtYmVyIG9mIGNvbmZpZ3VyYXRpb25zIGF2YWlsYWJsZS4K
KwkJICovCisJCV9fdTY0IG5fY29uZmlnczsKKworCQkvKgorCQkgKiBXaGVuIHF1ZXJ5X2lkID09
IERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0RBVEFfRk9SX0lELAorCQkgKiBpOTE1IHdpbGwg
dXNlIHRoZSB2YWx1ZSBpbiB0aGlzIGZpZWxkIGFzIGNvbmZpZ3VyYXRpb24KKwkJICogaWRlbnRp
ZmllciB0byBkZWNpZGUgd2hhdCBkYXRhIHRvIHdyaXRlIGludG8gY29uZmlnX3B0ci4KKwkJICov
CisJCV9fdTY0IGNvbmZpZzsKKworCQkvKgorCQkgKiBXaGVuIHF1ZXJ5X2lkID09IERSTV9JOTE1
X1FVRVJZX1BFUkZfQ09ORklHX0RBVEFfRk9SX1VVSUQsCisJCSAqIGk5MTUgd2lsbCB1c2UgdGhl
IHZhbHVlIGluIHRoaXMgZmllbGQgYXMgY29uZmlndXJhdGlvbgorCQkgKiBpZGVudGlmaWVyIHRv
IGRlY2lkZSB3aGF0IGRhdGEgdG8gd3JpdGUgaW50byBjb25maWdfcHRyLgorCQkgKgorCQkgKiBT
dHJpbmcgZm9ybWF0dGVkIGxpa2UgIiUwOHgtJTA0eC0lMDR4LSUwNHgtJTAxMngiCisJCSAqLwor
CQljaGFyIHV1aWRbMzZdOworCX07CisKKwkvKgorCSAqIFVudXNlZCBmb3Igbm93LiBNdXN0IGJl
IGNsZWFyZWQgdG8gemVyby4KKwkgKi8KKwlfX3UzMiBmbGFnczsKKworCS8qCisJICogV2hlbiBx
dWVyeV9pdGVtLmZsYWdzID09IERSTV9JOTE1X1FVRVJZX1BFUkZfQ09ORklHX0xJU1QsIGk5MTUg
d2lsbAorCSAqIHdyaXRlIGFuIGFycmF5IG9mIF9fdTY0IG9mIGNvbmZpZ3VyYXRpb24gaWRlbnRp
ZmllcnMuCisJICoKKwkgKiBXaGVuIHF1ZXJ5X2l0ZW0uZmxhZ3MgPT0gRFJNX0k5MTVfUVVFUllf
UEVSRl9DT05GSUdfREFUQSwgaTkxNSB3aWxsCisJICogd3JpdGUgYSBzdHJ1Y3QgZHJtX2k5MTVf
cGVyZl9vYV9jb25maWcuIElmIHRoZSBmb2xsb3dpbmcgZmllbGRzIG9mCisJICogZHJtX2k5MTVf
cGVyZl9vYV9jb25maWcgYXJlIHNldCBub3Qgc2V0IHRvIDAsIGk5MTUgd2lsbCB3cml0ZSBpbnRv
CisJICogdGhlIGFzc29jaWF0ZWQgcG9pbnRlcnMgdGhlIHZhbHVlcyBvZiBzdWJtaXR0ZWQgd2hl
biB0aGUKKwkgKiBjb25maWd1cmF0aW9uIHdhcyBjcmVhdGVkIDoKKwkgKgorCSAqICAgICAgICAg
LSBuX211eF9yZWdzCisJICogICAgICAgICAtIG5fYm9vbGVhbl9yZWdzCisJICogICAgICAgICAt
IG5fZmxleF9yZWdzCisJICovCisJX191OCBkYXRhW107Cit9OworCiAjaWYgZGVmaW5lZChfX2Nw
bHVzcGx1cykKIH0KICNlbmRpZgotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9pbnRlbC1nZng=

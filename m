Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 70A6F10A222
	for <lists+intel-gfx@lfdr.de>; Tue, 26 Nov 2019 17:31:13 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 18DE46E437;
	Tue, 26 Nov 2019 16:31:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 336736E434
 for <intel-gfx@lists.freedesktop.org>; Tue, 26 Nov 2019 16:31:09 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Nov 2019 08:31:08 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,246,1571727600"; d="scan'208";a="211464543"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by orsmga006.jf.intel.com with ESMTP; 26 Nov 2019 08:31:06 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 26 Nov 2019 18:28:38 +0200
Message-Id: <20191126162839.28094-4-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191126162839.28094-1-stanislav.lisovskiy@intel.com>
References: <20191126162839.28094-1-stanislav.lisovskiy@intel.com>
Subject: [Intel-gfx] [PATCH v5 3/4] drm/i915: Manipulate DBuf slices properly
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3RhcnQgbWFuaXB1bGF0aW5nIERCdWYgc2xpY2VzIGFzIGEgbWFzaywKYnV0IG5vdCBhcyBhIHRv
dGFsIG51bWJlciwgYXMgY3VycmVudCBhcHByb2FjaApkb2Vzbid0IGdpdmUgdXMgZnVsbCBjb250
cm9sIG9uIGFsbCBjb21iaW5hdGlvbnMKb2Ygc2xpY2VzLCB3aGljaCB3ZSBtaWdodCBuZWVkKGxp
a2UgZW5hYmxpbmcgUzIKb25seSBjYW4ndCBlbmFibGVkIGJ5IHNldHRpbmcgZW5hYmxlZF9zbGlj
ZXM9MSkuCgpSZW1vdmVkIHdyb25nIGNvZGUgZnJvbSBpbnRlbF9nZXRfZGRiX3NpemUgYXMKaXQg
ZG9lc24ndCBtYXRjaCB0byBCU3BlYy4gRm9yIG5vdyBzdGlsbCBqdXN0CnVzZSBEQnVmIHNsaWNl
IHVudGlsIHByb3BlciBhbGdvcml0aG0gaXMgaW1wbGVtZW50ZWQuCgpPdGhlciBtaW5vciBjb2Rl
IHJlZmFjdG9yaW5nIHRvIGdldCBwcmVwYXJlZApmb3IgbWFqb3IgREJ1ZiBhc3NpZ25tZW50IGNo
YW5nZXMgbGFuZGVkOgotIEFzIG5vdyBlbmFibGVkIHNsaWNlcyBjb250YWluIGEgbWFzawogIHdl
IHN0aWxsIG5lZWQgc29tZSB2YWx1ZSB3aGljaCBzaG91bGQKICByZWZsZWN0IGhvdyBtdWNoIERC
dWYgc2xpY2VzIGFyZSBzdXBwb3J0ZWQKICBieSB0aGUgcGxhdGZvcm0sIG5vdyBkZXZpY2UgaW5m
byBjb250YWlucwogIG51bV9zdXBwb3J0ZWRfZGJ1Zl9zbGljZXMuCi0gUmVtb3ZlZCB1bm5lZWRl
ZCBhc3NlcnRpb24gYXMgd2UgYXJlIG5vdwogIG1hbmlwdWxhdGluZyBzbGljZXMgaW4gYSBtb3Jl
IHByb3BlciB3YXkuCgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zza2l5IDxzdGFuaXNs
YXYubGlzb3Zza2l5QGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuYyAgfCAgIDcgKy0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfcG93ZXIuYyAgICB8IDEwMCArKysrKysrKy0tLS0tLS0tLS0KIC4uLi9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaCAgICB8ICAgNSArCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3BjaS5jICAgICAgICAgICAgICAgfCAgIDYgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX2RldmljZV9pbmZvLmggICAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAgNDMgKysrLS0tLS0KIDYgZmlsZXMgY2hhbmdl
ZCwgNzIgaW5zZXJ0aW9ucygrKSwgOTAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCAwZDUzYmY4MmIyZGYuLjEzNGQyMDk5
MjY3MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMK
QEAgLTEzNDE5LDcgKzEzNDE5LDcgQEAgc3RhdGljIHZvaWQgdmVyaWZ5X3dtX3N0YXRlKHN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjLAogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYK
IAkgICAgaHctPmRkYi5lbmFibGVkX3NsaWNlcyAhPSBzd19kZGItPmVuYWJsZWRfc2xpY2VzKQot
CQlEUk1fRVJST1IoIm1pc21hdGNoIGluIERCVUYgU2xpY2VzIChleHBlY3RlZCAldSwgZ290ICV1
KVxuIiwKKwkJRFJNX0VSUk9SKCJtaXNtYXRjaCBpbiBEQlVGIFNsaWNlcyAoZXhwZWN0ZWQgJXgs
IGdvdCAleClcbiIsCiAJCQkgIHN3X2RkYi0+ZW5hYmxlZF9zbGljZXMsCiAJCQkgIGh3LT5kZGIu
ZW5hYmxlZF9zbGljZXMpOwogCkBAIC0xNDY0NCwxMCArMTQ2NDQsMTEgQEAgc3RhdGljIHZvaWQg
aWNsX2RidWZfc2xpY2VfcHJlX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRlLT5i
YXNlLmRldik7CiAJdTggaHdfZW5hYmxlZF9zbGljZXMgPSBkZXZfcHJpdi0+d20uc2tsX2h3LmVu
YWJsZWRfc2xpY2VzOwogCXU4IHJlcXVpcmVkX3NsaWNlcyA9IHN0YXRlLT53bV9yZXN1bHRzLmVu
YWJsZWRfc2xpY2VzOworCXU4IHNsaWNlc191bmlvbiA9IGh3X2VuYWJsZWRfc2xpY2VzIHwgcmVx
dWlyZWRfc2xpY2VzOwogCiAJLyogSWYgMm5kIERCdWYgc2xpY2UgcmVxdWlyZWQsIGVuYWJsZSBp
dCBoZXJlICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYgcmVxdWlyZWRfc2xp
Y2VzID4gaHdfZW5hYmxlZF9zbGljZXMpCi0JCWljbF9kYnVmX3NsaWNlc191cGRhdGUoZGV2X3By
aXYsIHJlcXVpcmVkX3NsaWNlcyk7CisJCWljbF9kYnVmX3NsaWNlc191cGRhdGUoZGV2X3ByaXYs
IHNsaWNlc191bmlvbik7CiB9CiAKIHN0YXRpYyB2b2lkIGljbF9kYnVmX3NsaWNlX3Bvc3RfdXBk
YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQpAQCAtMTQ2NjksOCArMTQ2NzAs
NiBAQCBzdGF0aWMgdm9pZCBza2xfY29tbWl0X21vZGVzZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSkKIAl1bnNpZ25lZCBpbnQgdXBkYXRlZCA9IDA7CiAJYm9vbCBw
cm9ncmVzczsKIAlpbnQgaTsKLQl1OCBod19lbmFibGVkX3NsaWNlcyA9IGRldl9wcml2LT53bS5z
a2xfaHcuZW5hYmxlZF9zbGljZXM7Ci0JdTggcmVxdWlyZWRfc2xpY2VzID0gc3RhdGUtPndtX3Jl
c3VsdHMuZW5hYmxlZF9zbGljZXM7CiAJc3RydWN0IHNrbF9kZGJfZW50cnkgZW50cmllc1tJOTE1
X01BWF9QSVBFU10gPSB7fTsKIAogCWZvcl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRl
KHN0YXRlLCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwgbmV3X2NydGNfc3RhdGUsIGkpCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCmluZGV4
IDc1MTk4ZGExMzQ3OS4uMzQwZmMyZDMxNDdkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYwpAQCAtMTAzMSwxNSArMTAzMSw2IEBA
IHN0YXRpYyBib29sIGdlbjlfZGNfb2ZmX3Bvd2VyX3dlbGxfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCShJOTE1X1JFQUQoRENfU1RBVEVfRU4pICYgRENfU1RB
VEVfRU5fVVBUT19EQzVfREM2X01BU0spID09IDApOwogfQogCi1zdGF0aWMgdm9pZCBnZW45X2Fz
c2VydF9kYnVmX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQotewot
CXUzMiB0bXAgPSBJOTE1X1JFQUQoREJVRl9DVEwpOwotCi0JV0FSTigodG1wICYgKERCVUZfUE9X
RVJfU1RBVEUgfCBEQlVGX1BPV0VSX1JFUVVFU1QpKSAhPQotCSAgICAgKERCVUZfUE9XRVJfU1RB
VEUgfCBEQlVGX1BPV0VSX1JFUVVFU1QpLAotCSAgICAgIlVuZXhwZWN0ZWQgREJ1ZiBwb3dlciBw
b3dlciBzdGF0ZSAoMHglMDh4KVxuIiwgdG1wKTsKLX0KLQogc3RhdGljIHZvaWQgZ2VuOV9kaXNh
YmxlX2RjX3N0YXRlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJc3Ry
dWN0IGludGVsX2NkY2xrX3N0YXRlIGNkY2xrX3N0YXRlID0ge307CkBAIC0xMDU1LDggKzEwNDYs
NiBAQCBzdGF0aWMgdm9pZCBnZW45X2Rpc2FibGVfZGNfc3RhdGVzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIAkvKiBDYW4ndCByZWFkIG91dCB2b2x0YWdlX2xldmVsIHNvIGNh
bid0IHVzZSBpbnRlbF9jZGNsa19jaGFuZ2VkKCkgKi8KIAlXQVJOX09OKGludGVsX2NkY2xrX25l
ZWRzX21vZGVzZXQoJmRldl9wcml2LT5jZGNsay5odywgJmNkY2xrX3N0YXRlKSk7CiAKLQlnZW45
X2Fzc2VydF9kYnVmX2VuYWJsZWQoZGV2X3ByaXYpOwotCiAJaWYgKElTX0dFTjlfTFAoZGV2X3By
aXYpKQogCQlieHRfdmVyaWZ5X2RkaV9waHlfcG93ZXJfd2VsbHMoZGV2X3ByaXYpOwogCkBAIC00
MjU0LDcyICs0MjQzLDcxIEBAIHN0YXRpYyB2b2lkIGdlbjlfZGJ1Zl9kaXNhYmxlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlpbnRlbF9kYnVmX3NsaWNlX3NldChkZXZfcHJp
diwgREJVRl9DVEwsIGZhbHNlKTsKIH0KIAotc3RhdGljIHU4IGludGVsX2RidWZfbWF4X3NsaWNl
cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitpbnQgaW50ZWxfZGJ1Zl9tYXhf
c2xpY2VzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA8IDExKQotCQlyZXR1cm4gMTsKLQlyZXR1cm4gMjsKKwlyZXR1cm4gSU5U
RUxfSU5GTyhkZXZfcHJpdiktPm51bV9zdXBwb3J0ZWRfZGJ1Zl9zbGljZXM7Cit9CisKK3ZvaWQg
aWNsX3Byb2dyYW1fZGJ1Zl9zbGljZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQoreworCWNvbnN0IHU4IGh3X2VuYWJsZWRfc2xpY2VzID0gZGV2X3ByaXYtPndtLnNrbF9ody5l
bmFibGVkX3NsaWNlczsKKworCWljbF9kYnVmX3NsaWNlc191cGRhdGUoZGV2X3ByaXYsIGh3X2Vu
YWJsZWRfc2xpY2VzKTsKIH0KIAogdm9pZCBpY2xfZGJ1Zl9zbGljZXNfdXBkYXRlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgICB1OCByZXFfc2xpY2VzKQogewotCWNv
bnN0IHU4IGh3X2VuYWJsZWRfc2xpY2VzID0gZGV2X3ByaXYtPndtLnNrbF9ody5lbmFibGVkX3Ns
aWNlczsKLQlib29sIHJldDsKKwlpbnQgaTsKKwlpbnQgbWF4X3NsaWNlcyA9IGludGVsX2RidWZf
bWF4X3NsaWNlcyhkZXZfcHJpdik7CiAKLQlpZiAocmVxX3NsaWNlcyA+IGludGVsX2RidWZfbWF4
X3NsaWNlcyhkZXZfcHJpdikpIHsKKwlpZiAoaHdlaWdodDgocmVxX3NsaWNlcykgPiBpbnRlbF9k
YnVmX21heF9zbGljZXMoZGV2X3ByaXYpKSB7CiAJCURSTV9FUlJPUigiSW52YWxpZCBudW1iZXIg
b2YgZGJ1ZiBzbGljZXMgcmVxdWVzdGVkXG4iKTsKIAkJcmV0dXJuOwogCX0KIAotCWlmIChyZXFf
c2xpY2VzID09IGh3X2VuYWJsZWRfc2xpY2VzIHx8IHJlcV9zbGljZXMgPT0gMCkKLQkJcmV0dXJu
OworCURSTV9ERUJVR19LTVMoIlVwZGF0aW5nIGRidWYgc2xpY2VzIHRvICV4XG4iLCByZXFfc2xp
Y2VzKTsKIAotCWlmIChyZXFfc2xpY2VzID4gaHdfZW5hYmxlZF9zbGljZXMpCi0JCXJldCA9IGlu
dGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LCBEQlVGX0NUTF9TMiwgdHJ1ZSk7Ci0JZWxzZQot
CQlyZXQgPSBpbnRlbF9kYnVmX3NsaWNlX3NldChkZXZfcHJpdiwgREJVRl9DVExfUzIsIGZhbHNl
KTsKKwlmb3IgKGkgPSAwOyBpIDwgbWF4X3NsaWNlczsgaSsrKSB7CisJCWludCBzbGljZV9iaXQg
PSBCSVQoaSk7CisJCWJvb2wgc2xpY2Vfc2V0ID0gKHNsaWNlX2JpdCAmIHJlcV9zbGljZXMpICE9
IDA7CisKKwkJc3dpdGNoIChzbGljZV9iaXQpIHsKKwkJY2FzZSBEQlVGX1MxX0JJVDoKKwkJCWlu
dGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LAorCQkJCQkgICAgIERCVUZfQ1RMX1MxLAorCQkJ
CQkgICAgIHNsaWNlX3NldCk7CisJCQlicmVhazsKKwkJY2FzZSBEQlVGX1MyX0JJVDoKKwkJCWlu
dGVsX2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LAorCQkJCQkgICAgIERCVUZfQ1RMX1MyLAorCQkJ
CQkgICAgIHNsaWNlX3NldCk7CisJCQlicmVhazsKKwkJZGVmYXVsdDoKKwkJCU1JU1NJTkdfQ0FT
RShzbGljZV9iaXQpOworCQl9CisJfQogCi0JaWYgKHJldCkKLQkJZGV2X3ByaXYtPndtLnNrbF9o
dy5lbmFibGVkX3NsaWNlcyA9IHJlcV9zbGljZXM7CisJZGV2X3ByaXYtPndtLnNrbF9ody5lbmFi
bGVkX3NsaWNlcyA9IHJlcV9zbGljZXM7CiB9CiAKIHN0YXRpYyB2b2lkIGljbF9kYnVmX2VuYWJs
ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JSTkxNV9XUklURShEQlVG
X0NUTF9TMSwgSTkxNV9SRUFEKERCVUZfQ1RMX1MxKSB8IERCVUZfUE9XRVJfUkVRVUVTVCk7Ci0J
STkxNV9XUklURShEQlVGX0NUTF9TMiwgSTkxNV9SRUFEKERCVUZfQ1RMX1MyKSB8IERCVUZfUE9X
RVJfUkVRVUVTVCk7Ci0JUE9TVElOR19SRUFEKERCVUZfQ1RMX1MyKTsKLQotCXVkZWxheSgxMCk7
Ci0KLQlpZiAoIShJOTE1X1JFQUQoREJVRl9DVExfUzEpICYgREJVRl9QT1dFUl9TVEFURSkgfHwK
LQkgICAgIShJOTE1X1JFQUQoREJVRl9DVExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkpCi0JCURS
TV9FUlJPUigiREJ1ZiBwb3dlciBlbmFibGUgdGltZW91dFxuIik7Ci0JZWxzZQotCQkvKgotCQkg
KiBGSVhNRTogZm9yIG5vdyBwcmV0ZW5kIHRoYXQgd2Ugb25seSBoYXZlIDEgc2xpY2UsIHNlZQot
CQkgKiBpbnRlbF9lbmFibGVkX2RidWZfc2xpY2VzX251bSgpLgotCQkgKi8KLQkJZGV2X3ByaXYt
PndtLnNrbF9ody5lbmFibGVkX3NsaWNlcyA9IDE7CisJLyoKKwkgKiBKdXN0IHBvd2VyIHVwIDEg
c2xpY2UsIHdlIHdpbGwKKwkgKiBmaWd1cmUgb3V0IGxhdGVyIHdoaWNoIHNsaWNlcyB3ZSBoYXZl
IGFuZCB3aGF0IHdlIG5lZWQuCisJICovCisJZGV2X3ByaXYtPndtLnNrbF9ody5lbmFibGVkX3Ns
aWNlcyA9IERCVUZfUzFfQklUOworCWljbF9wcm9ncmFtX2RidWZfc2xpY2VzKGRldl9wcml2KTsK
IH0KIAogc3RhdGljIHZvaWQgaWNsX2RidWZfZGlzYWJsZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCiB7Ci0JSTkxNV9XUklURShEQlVGX0NUTF9TMSwgSTkxNV9SRUFEKERCVUZf
Q1RMX1MxKSAmIH5EQlVGX1BPV0VSX1JFUVVFU1QpOwotCUk5MTVfV1JJVEUoREJVRl9DVExfUzIs
IEk5MTVfUkVBRChEQlVGX0NUTF9TMikgJiB+REJVRl9QT1dFUl9SRVFVRVNUKTsKLQlQT1NUSU5H
X1JFQUQoREJVRl9DVExfUzIpOwotCi0JdWRlbGF5KDEwKTsKLQotCWlmICgoSTkxNV9SRUFEKERC
VUZfQ1RMX1MxKSAmIERCVUZfUE9XRVJfU1RBVEUpIHx8Ci0JICAgIChJOTE1X1JFQUQoREJVRl9D
VExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkpCi0JCURSTV9FUlJPUigiREJ1ZiBwb3dlciBkaXNh
YmxlIHRpbWVvdXQhXG4iKTsKLQllbHNlCi0JCS8qCi0JCSAqIEZJWE1FOiBmb3Igbm93IHByZXRl
bmQgdGhhdCB0aGUgZmlyc3Qgc2xpY2UgaXMgYWx3YXlzCi0JCSAqIGVuYWJsZWQsIHNlZSBpbnRl
bF9lbmFibGVkX2RidWZfc2xpY2VzX251bSgpLgotCQkgKi8KLQkJZGV2X3ByaXYtPndtLnNrbF9o
dy5lbmFibGVkX3NsaWNlcyA9IDE7CisJLyoKKwkgKiBEaXNhYmxlIGFsbCBzbGljZXMKKwkgKi8K
KwlkZXZfcHJpdi0+d20uc2tsX2h3LmVuYWJsZWRfc2xpY2VzID0gMDsKKwlpY2xfcHJvZ3JhbV9k
YnVmX3NsaWNlcyhkZXZfcHJpdik7CiB9CiAKIHN0YXRpYyB2b2lkIGljbF9tYnVzX2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmggYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaAppbmRleCAxZGEwNGYzZTBmYjMuLjBk
OWY4NzYwN2VhYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3Bvd2VyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3Bvd2VyLmgKQEAgLTMxMSw4ICszMTEsMTMgQEAgaW50ZWxfZGlzcGxheV9wb3dl
cl9wdXRfYXN5bmMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJZm9yICgod2YpID0g
aW50ZWxfZGlzcGxheV9wb3dlcl9nZXQoKGk5MTUpLCAoZG9tYWluKSk7ICh3Zik7IFwKIAkgICAg
IGludGVsX2Rpc3BsYXlfcG93ZXJfcHV0X2FzeW5jKChpOTE1KSwgKGRvbWFpbiksICh3ZikpLCAo
d2YpID0gMCkKIAorI2RlZmluZSBEQlVGX1MxX0JJVAkJCUJJVCgwKQorI2RlZmluZSBEQlVGX1My
X0JJVAkJCUJJVCgxKQorCiB2b2lkIGljbF9kYnVmX3NsaWNlc191cGRhdGUoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICAgIHU4IHJlcV9zbGljZXMpOwordm9pZCBpY2xf
cHJvZ3JhbV9kYnVmX3NsaWNlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwor
aW50IGludGVsX2RidWZfbWF4X3NsaWNlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpOwogCiB2b2lkIGNodl9waHlfcG93ZXJnYXRlX2xhbmVzKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCQkJICAgICBib29sIG92ZXJyaWRlLCB1bnNpZ25lZCBpbnQgbWFzayk7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BjaS5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9wY2kuYwppbmRleCBkYTNlOWI1NzUyYWMuLmEwNTAyMjIyNDBlNCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wY2kuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3BjaS5jCkBAIC02MTQsNyArNjE0LDggQEAgc3RhdGljIGNvbnN0IHN0
cnVjdCBpbnRlbF9kZXZpY2VfaW5mbyBpbnRlbF9jaGVycnl2aWV3X2luZm8gPSB7CiAJLmhhc19n
dF91YyA9IDEsIFwKIAkuZGlzcGxheS5oYXNfaGRjcCA9IDEsIFwKIAkuZGlzcGxheS5oYXNfaXBj
ID0gMSwgXAotCS5kZGJfc2l6ZSA9IDg5NgorCS5kZGJfc2l6ZSA9IDg5NiwgXAorCS5udW1fc3Vw
cG9ydGVkX2RidWZfc2xpY2VzID0gMQogCiAjZGVmaW5lIFNLTF9QTEFURk9STSBcCiAJR0VOOV9G
RUFUVVJFUywgXApAQCAtNjQ5LDYgKzY1MCw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxf
ZGV2aWNlX2luZm8gaW50ZWxfc2t5bGFrZV9ndDRfaW5mbyA9IHsKICNkZWZpbmUgR0VOOV9MUF9G
RUFUVVJFUyBcCiAJR0VOKDkpLCBcCiAJLmlzX2xwID0gMSwgXAorCS5udW1fc3VwcG9ydGVkX2Ri
dWZfc2xpY2VzID0gMSwgXAogCS5kaXNwbGF5Lmhhc19ob3RwbHVnID0gMSwgXAogCS5lbmdpbmVf
bWFzayA9IEJJVChSQ1MwKSB8IEJJVChWQ1MwKSB8IEJJVChCQ1MwKSB8IEJJVChWRUNTMCksIFwK
IAkucGlwZV9tYXNrID0gQklUKFBJUEVfQSkgfCBCSVQoUElQRV9CKSB8IEJJVChQSVBFX0MpLCBc
CkBAIC03MzcsNiArNzM5LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9kZXZpY2VfaW5m
byBpbnRlbF9jb2ZmZWVsYWtlX2d0M19pbmZvID0gewogCUdFTjlfRkVBVFVSRVMsIFwKIAlHRU4o
MTApLCBcCiAJLmRkYl9zaXplID0gMTAyNCwgXAorCS5udW1fc3VwcG9ydGVkX2RidWZfc2xpY2Vz
ID0gMSwgXAogCS5kaXNwbGF5Lmhhc19kc2MgPSAxLCBcCiAJLmhhc19jb2hlcmVudF9nZ3R0ID0g
ZmFsc2UsIFwKIAlHTEtfQ09MT1JTCkBAIC03NzMsNiArNzc2LDcgQEAgc3RhdGljIGNvbnN0IHN0
cnVjdCBpbnRlbF9kZXZpY2VfaW5mbyBpbnRlbF9jYW5ub25sYWtlX2luZm8gPSB7CiAJfSwgXAog
CUdFTigxMSksIFwKIAkuZGRiX3NpemUgPSAyMDQ4LCBcCisJLm51bV9zdXBwb3J0ZWRfZGJ1Zl9z
bGljZXMgPSAyLCBcCiAJLmhhc19sb2dpY2FsX3JpbmdfZWxzcSA9IDEsIFwKIAkuY29sb3IgPSB7
IC5kZWdhbW1hX2x1dF9zaXplID0gMzMsIC5nYW1tYV9sdXRfc2l6ZSA9IDI2MjE0NSB9CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5oCmluZGV4IDRiZGY4YTZjZmI0Ny4u
NGE5ZjU0YTkwMGJlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZp
Y2VfaW5mby5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2RldmljZV9pbmZvLmgK
QEAgLTE4MCw2ICsxODAsNyBAQCBzdHJ1Y3QgaW50ZWxfZGV2aWNlX2luZm8gewogCX0gZGlzcGxh
eTsKIAogCXUxNiBkZGJfc2l6ZTsgLyogaW4gYmxvY2tzICovCisJdTggbnVtX3N1cHBvcnRlZF9k
YnVmX3NsaWNlczsgLyogbnVtYmVyIG9mIERCdWYgc2xpY2VzICovCiAKIAkvKiBSZWdpc3RlciBv
ZmZzZXRzIGZvciB0aGUgdmFyaW91cyBkaXNwbGF5IHBpcGVzIGFuZCB0cmFuc2NvZGVycyAqLwog
CWludCBwaXBlX29mZnNldHNbSTkxNV9NQVhfVFJBTlNDT0RFUlNdOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVs
X3BtLmMKaW5kZXggMzg1N2VjM2QyYmQ2Li40YzMwZGRkYjk0M2EgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfcG0uYwpAQCAtMzYwMSwyMiArMzYwMSwxOCBAQCBib29sIGlsa19kaXNhYmxlX2xwX3dtKHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIHN0YXRpYyB1OCBpbnRlbF9lbmFibGVkX2RidWZfc2xp
Y2VzX251bShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0JdTggZW5hYmxl
ZF9zbGljZXM7Ci0KLQkvKiBTbGljZSAxIHdpbGwgYWx3YXlzIGJlIGVuYWJsZWQgKi8KLQllbmFi
bGVkX3NsaWNlcyA9IDE7CisJdTggZW5hYmxlZF9zbGljZXMgPSAwOwogCiAJLyogR2VuIHByaW9y
IHRvIEdFTjExIGhhdmUgb25seSBvbmUgREJ1ZiBzbGljZSAqLwogCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpIDwgMTEpCi0JCXJldHVybiBlbmFibGVkX3NsaWNlczsKKwkJcmV0dXJuIERCVUZfUzFf
QklUOwogCi0JLyoKLQkgKiBGSVhNRTogZm9yIG5vdyB3ZSdsbCBvbmx5IGV2ZXIgdXNlIDEgc2xp
Y2U7IHByZXRlbmQgdGhhdCB3ZSBoYXZlCi0JICogb25seSB0aGF0IDEgc2xpY2UgZW5hYmxlZCB1
bnRpbCB3ZSBoYXZlIGEgcHJvcGVyIHdheSBmb3Igb24tZGVtYW5kCi0JICogdG9nZ2xpbmcgb2Yg
dGhlIHNlY29uZCBzbGljZS4KLQkgKi8KLQlpZiAoMCAmJiBJOTE1X1JFQUQoREJVRl9DVExfUzIp
ICYgREJVRl9QT1dFUl9TVEFURSkKLQkJZW5hYmxlZF9zbGljZXMrKzsKKwkvKiBDaGVjayBpZiBz
ZWNvbmQgREJ1ZiBzbGljZSBpcyBlbmFibGVkICovCisJaWYgKEk5MTVfUkVBRChEQlVGX0NUTF9T
MSkgJiBEQlVGX1BPV0VSX1NUQVRFKQorCQllbmFibGVkX3NsaWNlcyB8PSBEQlVGX1MxX0JJVDsK
KworCWlmIChJOTE1X1JFQUQoREJVRl9DVExfUzIpICYgREJVRl9QT1dFUl9TVEFURSkKKwkJZW5h
YmxlZF9zbGljZXMgfD0gREJVRl9TMl9CSVQ7CiAKIAlyZXR1cm4gZW5hYmxlZF9zbGljZXM7CiB9
CkBAIC0zODI1LDggKzM4MjEsNiBAQCBzdGF0aWMgdTE2IGludGVsX2dldF9kZGJfc2l6ZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICBjb25zdCBpbnQgbnVtX2Fj
dGl2ZSwKIAkJCSAgICAgIHN0cnVjdCBza2xfZGRiX3ZhbHVlcyAqZGRiKQogewotCWNvbnN0IHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlOwotCXU2NCB0b3RhbF9kYXRhX2J3
OwogCXUxNiBkZGJfc2l6ZSA9IElOVEVMX0lORk8oZGV2X3ByaXYpLT5kZGJfc2l6ZTsKIAogCVdB
Uk5fT04oZGRiX3NpemUgPT0gMCk7CkBAIC0zODM0LDIzICszODI4LDE0IEBAIHN0YXRpYyB1MTYg
aW50ZWxfZ2V0X2RkYl9zaXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQogCQlyZXR1cm4gZGRiX3NpemUgLSA0OyAvKiA0
IGJsb2NrcyBmb3IgYnlwYXNzIHBhdGggYWxsb2NhdGlvbiAqLwogCi0JYWRqdXN0ZWRfbW9kZSA9
ICZjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwotCXRvdGFsX2RhdGFfYncgPSB0b3RhbF9k
YXRhX3JhdGUgKiBkcm1fbW9kZV92cmVmcmVzaChhZGp1c3RlZF9tb2RlKTsKLQogCS8qCi0JICog
MTJHQi9zIGlzIG1heGltdW0gQlcgc3VwcG9ydGVkIGJ5IHNpbmdsZSBEQnVmIHNsaWNlLgotCSAq
Ci0JICogRklYTUUgZGJ1ZiBzbGljZSBjb2RlIGlzIGJyb2tlbjoKLQkgKiAtIG11c3Qgd2FpdCBm
b3IgcGxhbmVzIHRvIHN0b3AgdXNpbmcgdGhlIHNsaWNlIGJlZm9yZSBwb3dlcmluZyBpdCBvZmYK
LQkgKiAtIHBsYW5lIHN0cmFkZGxpbmcgYm90aCBzbGljZXMgaXMgaWxsZWdhbCBpbiBtdWx0aS1w
aXBlIHNjZW5hcmlvcwotCSAqIC0gc2hvdWxkIHZhbGlkYXRlIHdlIHN0YXkgd2l0aGluIHRoZSBo
dyBiYW5kd2lkdGggbGltaXRzCisJICogRklYTUU6IEVuYWJsZWQgc2xpY2VzIHNob3VsZCBiZSBv
bmx5CisJICogaW4gYWNjb3JkaW5nIHRvIEJTcGVjIGFuZCBiZSBkZXRlcm1pbmVkCisJICogYnkg
bnVtIGFjdGl2ZSBwaXBlcyhCU3BlYyAxMjcxNiBhbmQgNDkyNTUpLgorCSAqIEZvciBub3cgc2V0
IG1hc2sgZm9yIDFzdCBzbGljZSBvbmx5LgogCSAqLwotCWlmICgwICYmIChudW1fYWN0aXZlID4g
MSB8fCB0b3RhbF9kYXRhX2J3ID49IEdCcHMoMTIpKSkgewotCQlkZGItPmVuYWJsZWRfc2xpY2Vz
ID0gMjsKLQl9IGVsc2UgewotCQlkZGItPmVuYWJsZWRfc2xpY2VzID0gMTsKLQkJZGRiX3NpemUg
Lz0gMjsKLQl9CisJZGRiLT5lbmFibGVkX3NsaWNlcyA9IERCVUZfUzFfQklUOworCWRkYl9zaXpl
IC89IDI7CiAKIAlyZXR1cm4gZGRiX3NpemU7CiB9Ci0tIAoyLjE3LjEKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QK
SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E8065E081E
	for <lists+intel-gfx@lfdr.de>; Tue, 22 Oct 2019 17:59:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D1F186E873;
	Tue, 22 Oct 2019 15:59:49 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 52C466E86C
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Oct 2019 15:59:36 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18927720-1500050 
 for multiple; Tue, 22 Oct 2019 16:59:20 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 22 Oct 2019 16:59:03 +0100
Message-Id: <20191022155907.32203-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191022155907.32203-1-chris@chris-wilson.co.uk>
References: <20191022155907.32203-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 06/10] Add i915/gem_ctx_persistence
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2FuaXR5IHRlc3QgZXhpc3RpbmcgcGVyc2lzdGVuY2UgYW5kIG5ldyBleGNpdGluZyBub24tcGVy
c2lzdGVudCBjb250ZXh0CmJlaGF2aW91ci4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogSm9vbmFzIExhaHRpbmVuIDxqb29uYXMubGFo
dGluZW5AbGludXguaW50ZWwuY29tPgpDYzogTWljaGHFgiBXaW5pYXJza2kgPG1pY2hhbC53aW5p
YXJza2lAaW50ZWwuY29tPgpDYzogSm9uIEJsb29tZmllbGQgPGpvbi5ibG9vbWZpZWxkQGludGVs
LmNvbT4KQ2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+CkNjOiBB
bmRpIFNoeXRpIDxhbmRpLnNoeXRpQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IEFuZGkgU2h5dGkg
PGFuZGkuc2h5dGlAaW50ZWwuY29tPgotLS0KIHRlc3RzL01ha2VmaWxlLnNvdXJjZXMgICAgICAg
ICAgIHwgICAzICsKIHRlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jIHwgNDU1ICsrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysKIHRlc3RzL21lc29uLmJ1aWxkICAgICAgICAgICAg
ICAgIHwgICAxICsKIDMgZmlsZXMgY2hhbmdlZCwgNDU5IGluc2VydGlvbnMoKykKIGNyZWF0ZSBt
b2RlIDEwMDY0NCB0ZXN0cy9pOTE1L2dlbV9jdHhfcGVyc2lzdGVuY2UuYwoKZGlmZiAtLWdpdCBh
L3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMgYi90ZXN0cy9NYWtlZmlsZS5zb3VyY2VzCmluZGV4IDM0
M2JlMDUwMC4uMDkzZWI1N2YzIDEwMDY0NAotLS0gYS90ZXN0cy9NYWtlZmlsZS5zb3VyY2VzCisr
KyBiL3Rlc3RzL01ha2VmaWxlLnNvdXJjZXMKQEAgLTE1NCw2ICsxNTQsOSBAQCBnZW1fY3R4X2lz
b2xhdGlvbl9TT1VSQ0VTID0gaTkxNS9nZW1fY3R4X2lzb2xhdGlvbi5jCiBURVNUU19wcm9ncyAr
PSBnZW1fY3R4X3BhcmFtCiBnZW1fY3R4X3BhcmFtX1NPVVJDRVMgPSBpOTE1L2dlbV9jdHhfcGFy
YW0uYwogCitURVNUU19wcm9ncyArPSBnZW1fY3R4X3BlcnNpc3RlbmNlCitnZW1fY3R4X3BlcnNp
c3RlbmNlX1NPVVJDRVMgPSBpOTE1L2dlbV9jdHhfcGVyc2lzdGVuY2UuYworCiBURVNUU19wcm9n
cyArPSBnZW1fY3R4X3NoYXJlZAogZ2VtX2N0eF9zaGFyZWRfU09VUkNFUyA9IGk5MTUvZ2VtX2N0
eF9zaGFyZWQuYwogCmRpZmYgLS1naXQgYS90ZXN0cy9pOTE1L2dlbV9jdHhfcGVyc2lzdGVuY2Uu
YyBiL3Rlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAwMC4uMjA5OTEyODFmCi0tLSAvZGV2L251bGwKKysrIGIvdGVzdHMvaTkx
NS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMKQEAgLTAsMCArMSw0NTUgQEAKKy8qCisgKiBDb3B5cmln
aHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5
IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBj
b3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAo
dGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0
cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0cyB0byB1
c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2Us
CisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBl
cnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3Vi
amVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3ZlIGNvcHly
aWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2UgKGluY2x1ZGluZyB0aGUgbmV4
dAorICogcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0
YW50aWFsIHBvcnRpb25zIG9mIHRoZQorICogU29mdHdhcmUuCisgKgorICogVEhFIFNPRlRXQVJF
IElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJF
U1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJB
TlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBUSEUgQVVU
SE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF
UyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFD
VCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcKKyAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05O
RUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MKKyAq
IElOIFRIRSBTT0ZUV0FSRS4KKyAqLworCisjaW5jbHVkZSA8ZXJybm8uaD4KKyNpbmNsdWRlIDxz
eXMvc29ja2V0Lmg+CisjaW5jbHVkZSA8c3lzL3R5cGVzLmg+CisjaW5jbHVkZSA8dW5pc3RkLmg+
CisKKyNpbmNsdWRlICJkcm10ZXN0LmgiIC8qIGdlbV9xdWllc2NlbnRfZ3B1KCkhICovCisjaW5j
bHVkZSAiaTkxNS9nZW1fY29udGV4dC5oIgorI2luY2x1ZGUgImk5MTUvZ2VtX3N1Ym1pc3Npb24u
aCIKKyNpbmNsdWRlICJpZ3RfZGVidWdmcy5oIgorI2luY2x1ZGUgImlndF9kdW1teWxvYWQuaCIK
KyNpbmNsdWRlICJpZ3Rfc3lzZnMuaCIKKyNpbmNsdWRlICJpb2N0bF93cmFwcGVycy5oIiAvKiBn
ZW1fd2FpdCgpISAqLworI2luY2x1ZGUgInN3X3N5bmMuaCIKKworc3RhdGljIGJvb2wgaGFzX3Bl
cnNpc3RlbmNlKGludCBpOTE1KQoreworCXN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJh
bSBwID0geworCQkucGFyYW0gPSBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0UsCisJfTsK
Kwl1aW50NjRfdCBzYXZlZDsKKworCWlmIChfX2dlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1LCAm
cCkpCisJCXJldHVybiBmYWxzZTsKKworCXNhdmVkID0gcC52YWx1ZTsKKwlwLnZhbHVlID0gMDsK
KwlpZiAoX19nZW1fY29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApKQorCQlyZXR1cm4gZmFsc2U7
CisKKwlwLnZhbHVlID0gc2F2ZWQ7CisJcmV0dXJuIF9fZ2VtX2NvbnRleHRfc2V0X3BhcmFtKGk5
MTUsICZwKSA9PSAwOworfQorCitzdGF0aWMgYm9vbCBfX2VuYWJsZV9oYW5nY2hlY2soaW50IGRp
ciwgYm9vbCBzdGF0ZSkKK3sKKwlyZXR1cm4gaWd0X3N5c2ZzX3NldChkaXIsICJlbmFibGVfaGFu
Z2NoZWNrIiwgc3RhdGUgPyAiMSIgOiAiMCIpOworfQorCitzdGF0aWMgdm9pZCBlbmFibGVfaGFu
Z2NoZWNrKGludCBpOTE1KQoreworCWludCBkaXI7CisKKwlkaXIgPSBpZ3Rfc3lzZnNfb3Blbl9w
YXJhbWV0ZXJzKGk5MTUpOworCWlmIChkaXIgPCAwKSAvKiBubyBwYXJhbWV0ZXJzLCBtdXN0IGJl
IGRlZmF1bHQhICovCisJCXJldHVybjsKKworCS8qIElmIGk5MTUuaGFuZ2NoZWNrIGlzIHJlbW92
ZWQsIGFzc3VtZSB0aGUgZGVmYXVsdCBpcyBnb29kICovCisJX19lbmFibGVfaGFuZ2NoZWNrKGRp
ciwgdHJ1ZSk7CisJY2xvc2UoZGlyKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9pZGVtcG90ZW50
KGludCBpOTE1KQoreworCXN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbSBwID0gewor
CQkucGFyYW0gPSBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0UsCisJfTsKKwlpbnQgZXhw
ZWN0ZWQ7CisKKwkvKgorCSAqIFNpbXBsZSB0ZXN0IHRvIHZlcmlmeSB0aGF0IHdlIGFyZSBhYmxl
IHRvIHJlYWQgYmFjayB0aGUgc2FtZSBib29sZWFuCisJICogdmFsdWUgYXMgd2Ugc2V0LgorCSAq
CisJICogRWFjaCB0aW1lIHdlIGludmVydCB0aGUgY3VycmVudCB2YWx1ZSBzbyB0aGF0IGF0IHRo
ZSBlbmQgb2YgdGhlIHRlc3QsCisJICogaWYgc3VjY2Vzc2Z1bCwgd2UgbGVhdmUgdGhlIGNvbnRl
eHQgaW4gdGhlIG9yaWdpbmFsIHN0YXRlLgorCSAqLworCisJZ2VtX2NvbnRleHRfZ2V0X3BhcmFt
KGk5MTUsICZwKTsKKwlleHBlY3RlZCA9ICEhcC52YWx1ZTsKKworCWV4cGVjdGVkID0gIWV4cGVj
dGVkOworCXAudmFsdWUgPSBleHBlY3RlZDsKKwlnZW1fY29udGV4dF9zZXRfcGFyYW0oaTkxNSwg
JnApOworCWdlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1LCAmcCk7CisJaWd0X2Fzc2VydF9lcShw
LnZhbHVlLCBleHBlY3RlZCk7CisKKwlleHBlY3RlZCA9ICFleHBlY3RlZDsgLyogYW5kIHJlc3Rv
cmVzICovCisJcC52YWx1ZSA9IGV4cGVjdGVkOworCWdlbV9jb250ZXh0X3NldF9wYXJhbShpOTE1
LCAmcCk7CisJZ2VtX2NvbnRleHRfZ2V0X3BhcmFtKGk5MTUsICZwKTsKKwlpZ3RfYXNzZXJ0X2Vx
KHAudmFsdWUsIGV4cGVjdGVkKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9wZXJzaXN0ZW5jZShp
bnQgaTkxNSkKK3sKKwlpZ3Rfc3Bpbl90ICpzcGluOworCWludDY0X3QgdGltZW91dDsKKwl1aW50
MzJfdCBjdHg7CisKKwkvKgorCSAqIERlZmF1bHQgYmVoYXZpb3VyIGFyZSBjb250ZXh0cyByZW1h
aW4gYWxpdmUgdW50aWwgdGhlaXIgbGFzdCBhY3RpdmUKKwkgKiByZXF1ZXN0IGlzIHJldGlyZWQg
LS0gbm8gZWFybHkgdGVybWluYXRpb24uCisJICovCisKKwljdHggPSBnZW1fY29udGV4dF9jcmVh
dGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgdHJ1ZSk7
CisKKwlzcGluID0gaWd0X3NwaW5fbmV3KGk5MTUsIGN0eCwgLmZsYWdzID0gSUdUX1NQSU5fRkVO
Q0VfT1VUKTsKKwlnZW1fY29udGV4dF9kZXN0cm95KGk5MTUsIGN0eCk7CisKKwl0aW1lb3V0ID0g
TlNFQ19QRVJfU0VDIC8gNTsKKwlpZ3RfYXNzZXJ0X2VxKGdlbV93YWl0KGk5MTUsIHNwaW4tPmhh
bmRsZSwgJnRpbWVvdXQpLCAtRVRJTUUpOworCisJaWd0X3NwaW5fZW5kKHNwaW4pOworCisJdGlt
ZW91dCA9IE5TRUNfUEVSX1NFQyAvIDU7CisJaWd0X2Fzc2VydF9lcShnZW1fd2FpdChpOTE1LCBz
cGluLT5oYW5kbGUsICZ0aW1lb3V0KSwgMCk7CisJaWd0X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3N0
YXR1cyhzcGluLT5vdXRfZmVuY2UpLCAxKTsKKworCWlndF9zcGluX2ZyZWUoaTkxNSwgc3Bpbik7
CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisKK3N0YXRpYyB2b2lkIHRlc3Rfbm9ucGVy
c2lzdGVudF9jbGVhbnVwKGludCBpOTE1KQoreworCWludDY0X3QgdGltZW91dCA9IE5TRUNfUEVS
X1NFQyAvIDU7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwl1aW50MzJfdCBjdHg7CisKKwkvKgorCSAq
IEEgbm9ucGVyc2lzdGVudCBjb250ZXh0IGlzIHRlcm1pbmF0ZWQgaW1tZWRpYXRlbHkgdXBvbiBj
bG9zdXJlLAorCSAqIGFueSBpbmZsaWdodCByZXF1ZXN0IGlzIGNhbmNlbGxlZC4KKwkgKi8KKwor
CWN0eCA9IGdlbV9jb250ZXh0X2NyZWF0ZShpOTE1KTsKKwlnZW1fY29udGV4dF9zZXRfcGVyc2lz
dGVuY2UoaTkxNSwgY3R4LCBmYWxzZSk7CisKKwlzcGluID0gaWd0X3NwaW5fbmV3KGk5MTUsIGN0
eCwgLmZsYWdzID0gSUdUX1NQSU5fRkVOQ0VfT1VUKTsKKwlnZW1fY29udGV4dF9kZXN0cm95KGk5
MTUsIGN0eCk7CisKKwlpZ3RfYXNzZXJ0X2VxKGdlbV93YWl0KGk5MTUsIHNwaW4tPmhhbmRsZSwg
JnRpbWVvdXQpLCAwKTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKHNwaW4tPm91
dF9mZW5jZSksIC1FSU8pOworCisJaWd0X3NwaW5fZnJlZShpOTE1LCBzcGluKTsKKwlnZW1fcXVp
ZXNjZW50X2dwdShpOTE1KTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9ub25wZXJzaXN0ZW50X21p
eGVkKGludCBpOTE1KQoreworCWludCBmZW5jZVszXTsKKworCS8qCisJICogT25seSBhIG5vbnBl
cnNpc3RlbnQgY29udGV4dCBpcyB0ZXJtaW5hdGVkIGltbWVkaWF0ZWx5IHVwb24KKwkgKiBjbG9z
dXJlLCBhbnkgaW5mbGlnaHQgcmVxdWVzdCBpcyBjYW5jZWxsZWQuIElmIHRoZXJlIGlzIGFsc28K
KwkgKiBhbiBhY3RpdmUgcGVyc2lzdGVudCBjb250ZXh0IGNsb3NlZCwgaXQgc2hvdWxkIGJlIHVu
YWZmZmVjdGVkLgorCSAqLworCisJZm9yIChpbnQgaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGZlbmNl
KTsgaSsrKSB7CisJCWlndF9zcGluX3QgKnNwaW47CisJCXVpbnQzMl90IGN0eDsKKworCQljdHgg
PSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5j
ZShpOTE1LCBjdHgsIGkgJiAxKTsKKworCQlzcGluID0gaWd0X3NwaW5fbmV3KGk5MTUsIGN0eCwg
LmZsYWdzID0gSUdUX1NQSU5fRkVOQ0VfT1VUKTsKKwkJZ2VtX2NvbnRleHRfZGVzdHJveShpOTE1
LCBjdHgpOworCisJCWZlbmNlW2ldID0gc3Bpbi0+b3V0X2ZlbmNlOworCX0KKworCS8qIE91dGVy
IHBhaXIgb2YgY29udGV4dHMgd2VyZSBub24tcGVyc2lzdGVudCBhbmQga2lsbGVkICovCisJaWd0
X2Fzc2VydF9lcShzeW5jX2ZlbmNlX3dhaXQoZmVuY2VbMF0sIE1TRUNfUEVSX1NFQyAvIDUpLCAw
KTsKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKGZlbmNlWzBdKSwgLUVJTyk7CisK
KwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfd2FpdChmZW5jZVsyXSwgTVNFQ19QRVJfU0VDIC8g
NSksIDApOworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV9zdGF0dXMoZmVuY2VbMl0pLCAtRUlP
KTsKKworCS8qIEJ1dCB0aGUgbWlkZGxlIGNvbnRleHQgaXMgc3RpbGwgcnVubmluZyAqLworCWln
dF9hc3NlcnRfZXEoc3luY19mZW5jZV93YWl0KGZlbmNlWzFdLCAwKSwgLUVUSU1FKTsKKworCWdl
bV9xdWllc2NlbnRfZ3B1KGk5MTUpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X25vbnBlcnNpc3Rl
bnRfaG9zdGlsZShpbnQgaTkxNSkKK3sKKwlpbnQ2NF90IHRpbWVvdXQgPSBOU0VDX1BFUl9TRUMg
LyAyOworCWlndF9zcGluX3QgKnNwaW47CisJdWludDMyX3QgY3R4OworCisJLyoKKwkgKiBJZiB3
ZSBjYW5ub3QgY2xlYW5seSBjYW5jZWwgdGhlIG5vbi1wZXJzaXN0ZW50IGNvbnRleHQgb24gY2xv
c3VyZSwKKwkgKiBlLmcuIHByZWVtcHRpb24gZmFpbHMsIHdlIGFyZSBmb3JjZWQgdG8gcmVzZXQg
dGhlIEdQVSB0byB0ZXJtaW5hdGUKKwkgKiB0aGUgcmVxdWVzdHMgYW5kIGNsZWFudXAgdGhlIGNv
bnRleHQuCisJICovCisKKwljdHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2Nv
bnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgZmFsc2UpOworCisJc3BpbiA9IGlndF9z
cGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX05PX1BSRUVNUFRJT04pOworCWdl
bV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4KTsKKworCWlndF9hc3NlcnRfZXEoZ2VtX3dhaXQo
aTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCisJaWd0X3NwaW5fZnJlZShpOTE1
LCBzcGluKTsKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKK30KKworc3RhdGljIHZvaWQgdGVz
dF9ub25wZXJzaXN0ZW50X2hvc3RpbGVfcHJlZW1wdChpbnQgaTkxNSkKK3sKKwlpbnQ2NF90IHRp
bWVvdXQgPSBOU0VDX1BFUl9TRUMgLyAyOworCWlndF9zcGluX3QgKnNwaW5bMl07CisJdWludDMy
X3QgY3R4OworCisJLyoKKwkgKiBEb3VibGUgcGx1cyB1bmdvb2QuCisJICoKKwkgKiBIZXJlIHdl
IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGNhbmNlbCB0aGUgaG9zdGlsZSBub24tcGVyc2lzdGVudAor
CSAqIGNvbnRleHQgYW5kIHdlIGNhbm5vdCBwcmVlbXB0LXRvLWlkbGUgYXMgaXQgaXMgYWxyZWFk
eSB3YWl0aW5nCisJICogb24gcHJlZW1wdGlvbiBmb3IgaXRzZWxmLiBMZXQncyBob3BlIHRoZSBr
ZXJuZWwgY2FuIHNhdmUgdGhlCisJICogZGF5IHdpdGggYSByZXNldC4KKwkgKi8KKworCWlndF9y
ZXF1aXJlKGdlbV9zY2hlZHVsZXJfaGFzX3ByZWVtcHRpb24oaTkxNSkpOworCisJY3R4ID0gZ2Vt
X2NvbnRleHRfY3JlYXRlKGk5MTUpOworCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5jZShpOTE1
LCBjdHgsIHRydWUpOworCWdlbV9jb250ZXh0X3NldF9wcmlvcml0eShpOTE1LCBjdHgsIDApOwor
CXNwaW5bMF0gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgY3R4LAorCQkJICAgICAgIC5mbGFncyA9IChJ
R1RfU1BJTl9OT19QUkVFTVBUSU9OIHwKKwkJCQkJIElHVF9TUElOX1BPTExfUlVOKSk7CisJZ2Vt
X2NvbnRleHRfZGVzdHJveShpOTE1LCBjdHgpOworCisJaWd0X3NwaW5fYnVzeXdhaXRfdW50aWxf
c3RhcnRlZChzcGluWzBdKTsKKworCWN0eCA9IGdlbV9jb250ZXh0X2NyZWF0ZShpOTE1KTsKKwln
ZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaTkxNSwgY3R4LCBmYWxzZSk7CisJZ2VtX2NvbnRl
eHRfc2V0X3ByaW9yaXR5KGk5MTUsIGN0eCwgMSk7IC8qIGhpZ2hlciBwcmlvcml0eSB0aGFuIDAg
Ki8KKwlzcGluWzFdID0gaWd0X3NwaW5fbmV3KGk5MTUsIGN0eCwgLmZsYWdzID0gSUdUX1NQSU5f
Tk9fUFJFRU1QVElPTik7CisJZ2VtX2NvbnRleHRfZGVzdHJveShpOTE1LCBjdHgpOworCisJaWd0
X2Fzc2VydF9lcShnZW1fd2FpdChpOTE1LCBzcGluWzFdLT5oYW5kbGUsICZ0aW1lb3V0KSwgMCk7
CisKKwlpZ3Rfc3Bpbl9mcmVlKGk5MTUsIHNwaW5bMV0pOworCWlndF9zcGluX2ZyZWUoaTkxNSwg
c3BpblswXSk7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisKK3N0YXRpYyB2b2lkIHRl
c3Rfbm9oYW5nY2hlY2tfaG9zdGlsZShpbnQgaTkxNSkKK3sKKwlpbnQ2NF90IHRpbWVvdXQgPSBO
U0VDX1BFUl9TRUMgLyAyOworCWlndF9zcGluX3QgKnNwaW47CisJdWludDMyX3QgY3R4OworCWlu
dCBkaXI7CisKKwkvKgorCSAqIEV2ZW4gaWYgdGhlIHVzZXIgZGlzYWJsZXMgaGFuZ2NoZWNrIGR1
cmluZyB0aGVpciBjb250ZXh0LAorCSAqIHdlIGZvcmNpYmx5IHRlcm1pbmF0ZSB0aGF0IGNvbnRl
eHQuCisJICovCisKKwlkaXIgPSBpZ3Rfc3lzZnNfb3Blbl9wYXJhbWV0ZXJzKGk5MTUpOworCWln
dF9yZXF1aXJlKGRpciAhPSAtMSk7CisKKwljdHggPSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7
CisKKwlpZ3RfcmVxdWlyZShfX2VuYWJsZV9oYW5nY2hlY2soZGlyLCBmYWxzZSkpOworCisJc3Bp
biA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX05PX1BSRUVNUFRJ
T04pOworCWdlbV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4KTsKKworCWlndF9hc3NlcnRfZXEo
Z2VtX3dhaXQoaTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCisJaWd0X3JlcXVp
cmUoX19lbmFibGVfaGFuZ2NoZWNrKGRpciwgdHJ1ZSkpOworCisJaWd0X3NwaW5fZnJlZShpOTE1
LCBzcGluKTsKKwlnZW1fcXVpZXNjZW50X2dwdShpOTE1KTsKKwljbG9zZShkaXIpOworfQorCitz
dGF0aWMgdm9pZCB0ZXN0X25vbnBlcnNpc3RlbnRfZmlsZShpbnQgaTkxNSkKK3sKKwlpbnQgZGVi
dWdmcyA9IGk5MTU7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwl1aW50MzJfdCBjdHg7CisKKwkvKgor
CSAqIEEgY29udGV4dCBtYXkgbGl2ZSBiZXlvbmQgaXRzIGluaXRpYWwgc3RydWN0IGZpbGUsIGV4
Y2VwdCBpZiBpdAorCSAqIGhhcyBiZWVuIG1hZGUgbm9ucGVyc2lzdGVudCwgaW4gd2hpY2ggY2Fz
ZSBpdCBtdXN0IGJlIHRlcm1pbmF0ZWQuCisJICovCisKKwlpOTE1ID0gZ2VtX3Jlb3Blbl9kcml2
ZXIoaTkxNSk7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7CisKKwljdHggPSBnZW1fY29udGV4
dF9jcmVhdGUoaTkxNSk7CisJZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwg
ZmFsc2UpOworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9T
UElOX0ZFTkNFX09VVCk7CisKKwljbG9zZShpOTE1KTsKKwlyY3VfYmFycmllcihkZWJ1Z2ZzKTsg
LyogZm9yY2UgdGhlIGRlbGF5ZWQgZnB1dCgpICovCisKKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVu
Y2Vfd2FpdChzcGluLT5vdXRfZmVuY2UsIE1TRUNfUEVSX1NFQyAvIDUpLCAwKTsKKwlpZ3RfYXNz
ZXJ0X2VxKHN5bmNfZmVuY2Vfc3RhdHVzKHNwaW4tPm91dF9mZW5jZSksIC1FSU8pOworCisJc3Bp
bi0+aGFuZGxlID0gMDsKKwlpZ3Rfc3Bpbl9mcmVlKC0xLCBzcGluKTsKK30KKworc3RhdGljIHZv
aWQgc2VuZGZkKGludCBzb2NrZXQsIGludCBmZCkKK3sKKwljaGFyIGJ1ZltDTVNHX1NQQUNFKHNp
emVvZihmZCkpXTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7IC5pb3ZfYmFzZSA9IChjaGFyICopIkFC
QyIsIC5pb3ZfbGVuID0gMyB9OworCXN0cnVjdCBtc2doZHIgbXNnID0geworCQkubXNnX2lvdiA9
ICZpbywKKwkJLm1zZ19pb3ZsZW4gPSAxLAorCQkubXNnX2NvbnRyb2wgPSBidWYsCisJCS5tc2df
Y29udHJvbGxlbiA9IENNU0dfTEVOKHNpemVvZihmZCkpLAorCX07CisJc3RydWN0IGNtc2doZHIg
KmNtc2cgPSBDTVNHX0ZJUlNUSERSKCZtc2cpOworCisJY21zZy0+Y21zZ19sZXZlbCA9IFNPTF9T
T0NLRVQ7CisJY21zZy0+Y21zZ190eXBlID0gU0NNX1JJR0hUUzsKKwljbXNnLT5jbXNnX2xlbiA9
IG1zZy5tc2dfY29udHJvbGxlbjsKKwkqKGludCAqKUNNU0dfREFUQShjbXNnKSA9IGZkOworCisJ
aWd0X2Fzc2VydChzZW5kbXNnKHNvY2tldCwgJm1zZywgMCkgIT0gLTEpOworfQorCitzdGF0aWMg
aW50IHJlY3ZmZChpbnQgc29ja2V0KQoreworCWNoYXIgbV9idWZmZXJbMjU2XSwgY19idWZmZXJb
MjU2XTsKKwlzdHJ1Y3QgaW92ZWMgaW8gPSB7CisJCS5pb3ZfYmFzZSA9IG1fYnVmZmVyLAorCQku
aW92X2xlbiA9IHNpemVvZihtX2J1ZmZlciksCisJfTsKKwlzdHJ1Y3QgbXNnaGRyIG1zZyA9IHsK
KwkJLm1zZ19pb3YgPSAmaW8sCisJCS5tc2dfaW92bGVuID0gMSwKKwkJLm1zZ19jb250cm9sID0g
Y19idWZmZXIsCisJCS5tc2dfY29udHJvbGxlbiA9IHNpemVvZihjX2J1ZmZlciksCisJfTsKKwor
CWlndF9hc3NlcnQocmVjdm1zZyhzb2NrZXQsICZtc2csIDApICE9IC0xKTsKKwlyZXR1cm4gKihp
bnQgKilDTVNHX0RBVEEoQ01TR19GSVJTVEhEUigmbXNnKSk7Cit9CisKK3N0YXRpYyB2b2lkIHRl
c3Rfbm9ucGVyc2lzdGVudF9wcm9jZXNzKGludCBpOTE1KQoreworCWludCBmZW5jZVsyXSwgc3Zb
Ml07CisKKwkvKgorCSAqIElmIGEgcHJvY2VzcyBkaWVzIGVhcmx5LCBhbnkgbm9ucGVyc2lzdGVu
dCBjb250ZXh0cyBpdCBoYWQKKwkgKiBvcGVuIG11c3QgYmUgdGVybWluYXRlZCB0b28uIEJ1dCBh
bnkgcGVyc2lzdGVudCBjb250ZXh0cywKKwkgKiBzaG91bGQgc3Vydml2ZSB1bnRpbCB0aGVpciBy
ZXF1ZXN0cyBhcmUgY29tcGxldGUuCisJICovCisKKwlpZ3RfcmVxdWlyZShzb2NrZXRwYWlyKEFG
X1VOSVgsIFNPQ0tfREdSQU0sIDAsIHN2KSA9PSAwKTsKKworCWlndF9mb3JrKGNoaWxkLCAxKSB7
CisJCWk5MTUgPSBnZW1fcmVvcGVuX2RyaXZlcihpOTE1KTsKKwkJZ2VtX3F1aWVzY2VudF9ncHUo
aTkxNSk7CisKKwkJZm9yIChpbnQgcGVyc2lzdHMgPSAwOyBwZXJzaXN0cyA8PSAxOyBwZXJzaXN0
cysrKSB7CisJCQlpZ3Rfc3Bpbl90ICpzcGluOworCQkJdWludDMyX3QgY3R4OworCisJCQljdHgg
PSBnZW1fY29udGV4dF9jcmVhdGUoaTkxNSk7CisJCQlnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVu
Y2UoaTkxNSwgY3R4LCBwZXJzaXN0cyk7CisKKwkJCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwg
Y3R4LAorCQkJCQkgICAgLmZsYWdzID0gSUdUX1NQSU5fRkVOQ0VfT1VUKTsKKworCQkJc2VuZGZk
KHN2WzBdLCBzcGluLT5vdXRfZmVuY2UpOworCisJCQlpZ3RfbGlzdF9kZWwoJnNwaW4tPmxpbmsp
OyAvKiBwcmV2ZW50IGF1dG9jbGVhbnVwICovCisJCX0KKwl9CisJY2xvc2Uoc3ZbMF0pOworCWln
dF93YWl0Y2hpbGRyZW4oKTsKKworCWZlbmNlWzBdID0gcmVjdmZkKHN2WzFdKTsKKwlmZW5jZVsx
XSA9IHJlY3ZmZChzdlsxXSk7CisJY2xvc2Uoc3ZbMV0pOworCisJLyogRmlyc3QgZmVuY2UgaXMg
bm9uLXBlcnNpc3RlbnQsIHNvIHNob3VsZCBiZSByZXNldCAqLworCWlndF9hc3NlcnRfZXEoc3lu
Y19mZW5jZV93YWl0KGZlbmNlWzBdLCBNU0VDX1BFUl9TRUMgLyA1KSwgMCk7CisJaWd0X2Fzc2Vy
dF9lcShzeW5jX2ZlbmNlX3N0YXR1cyhmZW5jZVswXSksIC1FSU8pOworCWNsb3NlKGZlbmNlWzBd
KTsKKworCS8qIFNlY29uZCBmZW5jZSBpcyBwZXJzaXN0ZW50LCBzbyBzaG91bGQgYmUgc3RpbGwg
c3Bpbm5pbmcgKi8KKwlpZ3RfYXNzZXJ0X2VxKHN5bmNfZmVuY2Vfd2FpdChmZW5jZVsxXSwgMCks
IC1FVElNRSk7CisJY2xvc2UoZmVuY2VbMV0pOworCisJLyogV2UgaGF2ZSB0byBtYW51YWxseSBj
bGVhbiB1cCB0aGUgb3JwaGFuZWQgc3Bpbm5lciAqLworCWlndF9kcm9wX2NhY2hlc19zZXQoaTkx
NSwgRFJPUF9SRVNFVF9BQ1RJVkUpOworCisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisK
K2lndF9tYWluCit7CisJaW50IGk5MTU7CisKKwlpZ3RfZml4dHVyZSB7CisJCWk5MTUgPSBkcm1f
b3Blbl9kcml2ZXIoRFJJVkVSX0lOVEVMKTsKKwkJaWd0X3JlcXVpcmVfZ2VtKGk5MTUpOworCisJ
CWlndF9yZXF1aXJlKGhhc19wZXJzaXN0ZW5jZShpOTE1KSk7CisJCWVuYWJsZV9oYW5nY2hlY2so
aTkxNSk7CisJfQorCisJaWd0X3N1YnRlc3RfZ3JvdXAgeworCQlpZ3Rfc3VidGVzdCgiaWRlbXBv
dGVudCIpCisJCQl0ZXN0X2lkZW1wb3RlbnQoaTkxNSk7CisKKwkJaWd0X3N1YnRlc3QoInBlcnNp
c3RlbmNlIikKKwkJCXRlc3RfcGVyc2lzdGVuY2UoaTkxNSk7CisKKwkJaWd0X3N1YnRlc3QoImNs
ZWFudXAiKQorCQkJdGVzdF9ub25wZXJzaXN0ZW50X2NsZWFudXAoaTkxNSk7CisKKwkJaWd0X3N1
YnRlc3QoIm1peGVkIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9taXhlZChpOTE1KTsKKworCQlp
Z3Rfc3VidGVzdCgiaG9zdGlsZSIpCisJCQl0ZXN0X25vbnBlcnNpc3RlbnRfaG9zdGlsZShpOTE1
KTsKKworCQlpZ3Rfc3VidGVzdCgiaG9zdGlsZS1wcmVlbXB0IikKKwkJCXRlc3Rfbm9ucGVyc2lz
dGVudF9ob3N0aWxlX3ByZWVtcHQoaTkxNSk7CisKKwkJaWd0X3N1YnRlc3QoImhhbmdjaGVjayIp
CisJCQl0ZXN0X25vaGFuZ2NoZWNrX2hvc3RpbGUoaTkxNSk7CisKKwkJaWd0X3N1YnRlc3QoImZp
bGUiKQorCQkJdGVzdF9ub25wZXJzaXN0ZW50X2ZpbGUoaTkxNSk7CisKKwkJaWd0X3N1YnRlc3Qo
InByb2Nlc3MiKQorCQkJdGVzdF9ub25wZXJzaXN0ZW50X3Byb2Nlc3MoaTkxNSk7CisJfQorCisJ
aWd0X2ZpeHR1cmUgeworCQljbG9zZShpOTE1KTsKKwl9Cit9CmRpZmYgLS1naXQgYS90ZXN0cy9t
ZXNvbi5idWlsZCBiL3Rlc3RzL21lc29uLmJ1aWxkCmluZGV4IDdlM2Y5ZTBhNC4uM2YzZWVlMjc3
IDEwMDY0NAotLS0gYS90ZXN0cy9tZXNvbi5idWlsZAorKysgYi90ZXN0cy9tZXNvbi5idWlsZApA
QCAtMTIxLDYgKzEyMSw3IEBAIGk5MTVfcHJvZ3MgPSBbCiAJJ2dlbV9jdHhfZXhlYycsCiAJJ2dl
bV9jdHhfaXNvbGF0aW9uJywKIAknZ2VtX2N0eF9wYXJhbScsCisJJ2dlbV9jdHhfcGVyc2lzdGVu
Y2UnLAogCSdnZW1fY3R4X3NoYXJlZCcsCiAJJ2dlbV9jdHhfc3dpdGNoJywKIAknZ2VtX2N0eF90
aHJhc2gnLAotLSAKMi4yNC4wLnJjMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4

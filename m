Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id F3FDA22389A
	for <lists+intel-gfx@lfdr.de>; Fri, 17 Jul 2020 11:43:23 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 62A546ED88;
	Fri, 17 Jul 2020 09:43:22 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (unknown [77.68.26.236])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CD5D46ED88
 for <intel-gfx@lists.freedesktop.org>; Fri, 17 Jul 2020 09:43:20 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from build.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 21847430-1500050 
 for multiple; Fri, 17 Jul 2020 10:43:08 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 17 Jul 2020 10:43:08 +0100
Message-Id: <20200717094308.13817-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20200717093541.17030-4-chris@chris-wilson.co.uk>
References: <20200717093541.17030-4-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/gt: Distinguish the virtual
 breadcrumbs from the irq breadcrumbs
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Chris Wilson <chris@chris-wilson.co.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gdGhlIHZpcnR1YWwgZW5naW5lcywgd2Ugb25seSB1c2UgdGhlIGludGVsX2JyZWFkY3J1bWJz
IGZvciB0cmFja2luZwpzaWduYWxpbmcgb2Ygc3RhbGUgYnJlYWRjcnVtYnMgZnJvbSB0aGUgaXJx
X3dvcmtlcnMuIFRoZXkgZG8gbm90IGhhdmUKYW55IGFzc29jaWF0ZWQgaW50ZXJydXB0IGhhbmRs
aW5nLCBhY3RpdmUgcmVxdWVzdHMgYXJlIHBhc3NlZCB0byBhCnBoeXNpY2FsIGVuZ2luZSBhbmQg
YXNzb2NpYXRlZCBicmVhZGNydW1iIGludGVycnVwdCBoYW5kbGVyLiBUaGlzIGNhdXNlcwppc3N1
ZXMgZm9yIHVzIGFzIHdlIG5lZWQgdG8gZW5zdXJlIHRoYXQgd2UgZG8gbm90IGFjdHVhbGx5IHRy
eSBhbmQKZW5hYmxlIGludGVycnVwdHMgYW5kIHRoZSBwb3dlcm1hbmFnZW1lbnQgcmVxdWlyZWQg
Zm9yIHRoZW0gb24gdGhlCnZpcnR1YWwgZW5naW5lLCBhcyB0aGV5IHdpbGwgbmV2ZXIgYmUgZGlz
YWJsZWQuIEluc3RlYWQsIGxldCdzCnNwZWNpZnkgdGhlIHBoeXNpY2FsIGVuZ2luZSB1c2VkIGZv
ciBpbnRlcnJ1cHQgaGFuZGxlciBvbiBhIHBhcnRpY3VsYXIKYnJlYWRjcnVtYi4KClNpZ25lZC1v
ZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtv
IFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KLS0tCkkgZm9yZ290IHRoZSBoZWFk
ZXIgaW4gdGhlIG9uZSBwbGFjZSBpdCBkb2Vzbid0IHdhcm4gYWJvdXQuCi0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYyAgIHwgNzIgKysrKysrKysrKy0tLS0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaCAgIHwgMzYg
KysrKysrKysrKwogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1ic190eXBlcy5o
IHwgNDcgKysrKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUu
aCAgICAgICAgfCAxNyAtLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X2NzLmMgICAgIHwgMTQgKysrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3BtLmMgICAgIHwgIDMgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90
eXBlcy5oICB8IDMxICstLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9p
cnEuYyAgICAgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAg
ICAgICAgICAgfCAxMSArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMg
ICAgICAgICB8ICAxICsKIC4uLi9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9u
LmMgICB8ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ycHMuYyAgICAgICAg
ICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jICAgICAgICAg
fCAxMCArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgICAgICAgICAgICAgICB8
ICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jICAgICAgICAgICB8ICAx
ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oICAgICAgICAgICB8ICA0IC0t
CiAxNiBmaWxlcyBjaGFuZ2VkLCAxNjIgaW5zZXJ0aW9ucygrKSwgOTEgZGVsZXRpb25zKC0pCiBj
cmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVt
YnMuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Jy
ZWFkY3J1bWJzX3R5cGVzLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9icmVhZGNydW1icy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRj
cnVtYnMuYwppbmRleCBhZGI2YzFjMTI3M2UuLjlkZmFmZGE3MmRkMSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCkBAIC0yOCw2ICsyOCw3IEBACiAKICNp
bmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKKyNpbmNsdWRlICJp
bnRlbF9icmVhZGNydW1icy5oIgogI2luY2x1ZGUgImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAi
aW50ZWxfZ3RfcmVxdWVzdHMuaCIKIApAQCAtNTUsMjIgKzU2LDIxIEBAIHN0YXRpYyB2b2lkIGly
cV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogc3RhdGljIHZvaWQg
X19pbnRlbF9icmVhZGNydW1ic19kaXNhcm1faXJxKHN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAq
YikKIHsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPQotCQljb250YWluZXJfb2Yo
Yiwgc3RydWN0IGludGVsX2VuZ2luZV9jcywgYnJlYWRjcnVtYnMpOwotCiAJbG9ja2RlcF9hc3Nl
cnRfaGVsZCgmYi0+aXJxX2xvY2spOwogCisJaWYgKCFiLT5pcnFfZW5naW5lKQorCQlyZXR1cm47
CisKIAlHRU1fQlVHX09OKCFiLT5pcnFfZW5hYmxlZCk7CiAJaWYgKCEtLWItPmlycV9lbmFibGVk
KQotCQlpcnFfZGlzYWJsZShlbmdpbmUpOworCQlpcnFfZGlzYWJsZShiLT5pcnFfZW5naW5lKTsK
IAogCVdSSVRFX09OQ0UoYi0+aXJxX2FybWVkLCBmYWxzZSk7Ci0JaW50ZWxfZ3RfcG1fcHV0X2Fz
eW5jKGVuZ2luZS0+Z3QpOworCWludGVsX2d0X3BtX3B1dF9hc3luYyhiLT5pcnFfZW5naW5lLT5n
dCk7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX2Rpc2FybV9icmVhZGNydW1icyhzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCit2b2lkIGludGVsX2JyZWFkY3J1bWJzX3Bhcmsoc3RydWN0
IGludGVsX2JyZWFkY3J1bWJzICpiKQogewotCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9
ICZlbmdpbmUtPmJyZWFkY3J1bWJzOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKIAlpZiAoIVJF
QURfT05DRShiLT5pcnFfYXJtZWQpKQpAQCAtMTMzLDEzICsxMzMsOCBAQCBfX2RtYV9mZW5jZV9z
aWduYWxfX25vdGlmeShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKIAogc3RhdGljIHZvaWQgYWRk
X3JldGlyZShzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIsIHN0cnVjdCBpbnRlbF90aW1lbGlu
ZSAqdGwpCiB7Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0KLQkJY29udGFpbmVy
X29mKGIsIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MsIGJyZWFkY3J1bWJzKTsKLQotCWlmICh1bmxp
a2VseShpbnRlbF9lbmdpbmVfaXNfdmlydHVhbChlbmdpbmUpKSkKLQkJZW5naW5lID0gaW50ZWxf
dmlydHVhbF9lbmdpbmVfZ2V0X3NpYmxpbmcoZW5naW5lLCAwKTsKLQotCWludGVsX2VuZ2luZV9h
ZGRfcmV0aXJlKGVuZ2luZSwgdGwpOworCWlmIChiLT5pcnFfZW5naW5lKQorCQlpbnRlbF9lbmdp
bmVfYWRkX3JldGlyZShiLT5pcnFfZW5naW5lLCB0bCk7CiB9CiAKIHN0YXRpYyB2b2lkIF9fc2ln
bmFsX3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIHN0cnVjdCBsaXN0X2hlYWQgKnNp
Z25hbHMpCkBAIC0yMjEsMTQgKzIxNiwxMyBAQCBzdGF0aWMgdm9pZCBzaWduYWxfaXJxX3dvcmso
c3RydWN0IGlycV93b3JrICp3b3JrKQogCiBzdGF0aWMgdm9pZCBfX2ludGVsX2JyZWFkY3J1bWJz
X2FybV9pcnEoc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiKQogewotCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSA9Ci0JCWNvbnRhaW5lcl9vZihiLCBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzLCBicmVhZGNydW1icyk7Ci0KIAlsb2NrZGVwX2Fzc2VydF9oZWxkKCZiLT5pcnFfbG9jayk7
CisKIAlpZiAoYi0+aXJxX2FybWVkKQogCQlyZXR1cm47CiAKLQlpZiAoIWludGVsX2d0X3BtX2dl
dF9pZl9hd2FrZShlbmdpbmUtPmd0KSkKKwlHRU1fQlVHX09OKCFiLT5pcnFfZW5naW5lKTsKKwlp
ZiAoIWludGVsX2d0X3BtX2dldF9pZl9hd2FrZShiLT5pcnFfZW5naW5lLT5ndCkpCiAJCXJldHVy
bjsKIAogCS8qCkBAIC0yNDgsMzcgKzI0Miw1MSBAQCBzdGF0aWMgdm9pZCBfX2ludGVsX2JyZWFk
Y3J1bWJzX2FybV9pcnEoc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiKQogCSAqLwogCiAJaWYg
KCFiLT5pcnFfZW5hYmxlZCsrKQotCQlpcnFfZW5hYmxlKGVuZ2luZSk7CisJCWlycV9lbmFibGUo
Yi0+aXJxX2VuZ2luZSk7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX2luaXRfYnJlYWRjcnVtYnMo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3RydWN0IGludGVsX2JyZWFkY3J1bWJz
ICoKK2ludGVsX2JyZWFkY3J1bWJzX2NyZWF0ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICppcnFf
ZW5naW5lKQogewotCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9ICZlbmdpbmUtPmJyZWFk
Y3J1bWJzOworCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYjsKKworCWIgPSBremFsbG9jKHNp
emVvZigqYiksIEdGUF9LRVJORUwpOworCWlmICghYikKKwkJcmV0dXJuIE5VTEw7CiAKIAlzcGlu
X2xvY2tfaW5pdCgmYi0+aXJxX2xvY2spOwogCUlOSVRfTElTVF9IRUFEKCZiLT5zaWduYWxlcnMp
OwogCUlOSVRfTElTVF9IRUFEKCZiLT5zaWduYWxlZF9yZXF1ZXN0cyk7CiAKIAlpbml0X2lycV93
b3JrKCZiLT5pcnFfd29yaywgc2lnbmFsX2lycV93b3JrKTsKKworCWItPmlycV9lbmdpbmUgPSBp
cnFfZW5naW5lOworCWlmICghaXJxX2VuZ2luZSkKKwkJYi0+aXJxX2FybWVkID0gdHJ1ZTsgLyog
ZmFrZSBIVywgdXNlZCBmb3IgaXJxX3dvcmsgKi8KKworCXJldHVybiBiOwogfQogCi12b2lkIGlu
dGVsX2VuZ2luZV9yZXNldF9icmVhZGNydW1icyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCit2b2lkIGludGVsX2JyZWFkY3J1bWJzX3Jlc2V0KHN0cnVjdCBpbnRlbF9icmVhZGNydW1i
cyAqYikKIHsKLQlzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIgPSAmZW5naW5lLT5icmVhZGNy
dW1iczsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCisJaWYgKCFiLT5pcnFfZW5naW5lKQorCQly
ZXR1cm47CisKIAlzcGluX2xvY2tfaXJxc2F2ZSgmYi0+aXJxX2xvY2ssIGZsYWdzKTsKIAogCWlm
IChiLT5pcnFfZW5hYmxlZCkKLQkJaXJxX2VuYWJsZShlbmdpbmUpOworCQlpcnFfZW5hYmxlKGIt
PmlycV9lbmdpbmUpOwogCWVsc2UKLQkJaXJxX2Rpc2FibGUoZW5naW5lKTsKKwkJaXJxX2Rpc2Fi
bGUoYi0+aXJxX2VuZ2luZSk7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZiLT5pcnFfbG9j
aywgZmxhZ3MpOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9maW5pX2JyZWFkY3J1bWJzKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3ZvaWQgaW50ZWxfYnJlYWRjcnVtYnNfZnJlZShz
dHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmIpCiB7CisJa2ZyZWUoYik7CiB9CiAKIHN0YXRpYyB2
b2lkIGluc2VydF9icmVhZGNydW1iKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLApAQCAtMzY3LDEx
ICszNzUsMTEgQEAgYm9vbCBpOTE1X3JlcXVlc3RfZW5hYmxlX2JyZWFkY3J1bWIoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCiAJICogcmVxdWVzdCBzdWJtaXQvdW5zdWJtaXQgcGF0aCwgYW5kIHNv
IHdlIG11c3QgYmUgbW9yZSBjYXJlZnVsIHRvCiAJICogYWNxdWlyZSB0aGUgcmlnaHQgbG9jay4K
IAkgKi8KLQliID0gJlJFQURfT05DRShycS0+ZW5naW5lKS0+YnJlYWRjcnVtYnM7CisJYiA9IFJF
QURfT05DRShycS0+ZW5naW5lKS0+YnJlYWRjcnVtYnM7CiAJc3Bpbl9sb2NrKCZiLT5pcnFfbG9j
ayk7Ci0Jd2hpbGUgKHVubGlrZWx5KGIgIT0gJlJFQURfT05DRShycS0+ZW5naW5lKS0+YnJlYWRj
cnVtYnMpKSB7CisJd2hpbGUgKHVubGlrZWx5KGIgIT0gUkVBRF9PTkNFKHJxLT5lbmdpbmUpLT5i
cmVhZGNydW1icykpIHsKIAkJc3Bpbl91bmxvY2soJmItPmlycV9sb2NrKTsKLQkJYiA9ICZSRUFE
X09OQ0UocnEtPmVuZ2luZSktPmJyZWFkY3J1bWJzOworCQliID0gUkVBRF9PTkNFKHJxLT5lbmdp
bmUpLT5icmVhZGNydW1iczsKIAkJc3Bpbl9sb2NrKCZiLT5pcnFfbG9jayk7CiAJfQogCkBAIC0z
OTIsNyArNDAwLDcgQEAgYm9vbCBpOTE1X3JlcXVlc3RfZW5hYmxlX2JyZWFkY3J1bWIoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnEpCiAKIHZvaWQgaTkxNV9yZXF1ZXN0X2NhbmNlbF9icmVhZGNydW1i
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAq
YiA9ICZycS0+ZW5naW5lLT5icmVhZGNydW1iczsKKwlzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMg
KmIgPSBycS0+ZW5naW5lLT5icmVhZGNydW1iczsKIAogCS8qCiAJICogV2UgbXVzdCB3YWl0IGZv
ciBiLT5pcnFfbG9jayBzbyB0aGF0IHdlIGtub3cgdGhlIGludGVycnVwdCBoYW5kbGVyCkBAIC00
MTYsMTEgKzQyNCwxMSBAQCB2b2lkIGk5MTVfcmVxdWVzdF9jYW5jZWxfYnJlYWRjcnVtYihzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHZvaWQgaW50ZWxfZW5naW5lX3ByaW50X2JyZWFkY3J1bWJz
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCQkgICAgc3RydWN0IGRybV9wcmlu
dGVyICpwKQogewotCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9ICZlbmdpbmUtPmJyZWFk
Y3J1bWJzOworCXN0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqYiA9IGVuZ2luZS0+YnJlYWRjcnVt
YnM7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
OwogCi0JaWYgKGxpc3RfZW1wdHkoJmItPnNpZ25hbGVycykpCisJaWYgKCFiIHx8IGxpc3RfZW1w
dHkoJmItPnNpZ25hbGVycykpCiAJCXJldHVybjsKIAogCWRybV9wcmludGYocCwgIlNpZ25hbHM6
XG4iKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1
bWJzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5oCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uMGQyNWY3OTMxNTllCi0tLSAvZGV2
L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaApA
QCAtMCwwICsxLDM2IEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUICovCisvKgor
ICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KKyAqLworCisjaWZuZGVmIF9f
SU5URUxfQlJFQURDUlVNQlNfX18KKyNkZWZpbmUgX19JTlRFTF9CUkVBRENSVU1CU19fCisKKyNp
bmNsdWRlIDxsaW51eC9pcnFfd29yay5oPgorCisjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3R5cGVz
LmgiCisKK3N0cnVjdCBkcm1fcHJpbnRlcjsKK3N0cnVjdCBpOTE1X3JlcXVlc3Q7CitzdHJ1Y3Qg
aW50ZWxfYnJlYWRjcnVtYnM7CisKK3N0cnVjdCBpbnRlbF9icmVhZGNydW1icyAqCitpbnRlbF9i
cmVhZGNydW1ic19jcmVhdGUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqaXJxX2VuZ2luZSk7Cit2
b2lkIGludGVsX2JyZWFkY3J1bWJzX2ZyZWUoc3RydWN0IGludGVsX2JyZWFkY3J1bWJzICpiKTsK
Kwordm9pZCBpbnRlbF9icmVhZGNydW1ic19yZXNldChzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMg
KmIpOwordm9pZCBpbnRlbF9icmVhZGNydW1ic19wYXJrKHN0cnVjdCBpbnRlbF9icmVhZGNydW1i
cyAqYik7CisKK3N0YXRpYyBpbmxpbmUgdm9pZAoraW50ZWxfZW5naW5lX3NpZ25hbF9icmVhZGNy
dW1icyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7CisJaXJxX3dvcmtfcXVldWUo
JmVuZ2luZS0+YnJlYWRjcnVtYnMtPmlycV93b3JrKTsKK30KKwordm9pZCBpbnRlbF9lbmdpbmVf
cHJpbnRfYnJlYWRjcnVtYnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkJCSAg
ICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOworCitib29sIGk5MTVfcmVxdWVzdF9lbmFibGVfYnJl
YWRjcnVtYihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KTsKK3ZvaWQgaTkxNV9yZXF1ZXN0
X2NhbmNlbF9icmVhZGNydW1iKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpOworCisjZW5k
aWYgLyogX19JTlRFTF9CUkVBRENSVU1CU19fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1ic190eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnNfdHlwZXMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwMDAuLjhlNTNiOTk0MjY5NQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzX3R5cGVzLmgKQEAgLTAsMCArMSw0NyBA
QAorLyogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVCAqLworLyoKKyAqIENvcHlyaWdodCDC
qSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBfX0lOVEVMX0JSRUFEQ1JV
TUJTX1RZUEVTX18KKyNkZWZpbmUgX19JTlRFTF9CUkVBRENSVU1CU19UWVBFU19fCisKKyNpbmNs
dWRlIDxsaW51eC9pcnFfd29yay5oPgorI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KKyNpbmNsdWRl
IDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CisKKy8qCisgKiBS
YXRoZXIgdGhhbiBoYXZlIGV2ZXJ5IGNsaWVudCB3YWl0IHVwb24gYWxsIHVzZXIgaW50ZXJydXB0
cywKKyAqIHdpdGggdGhlIGhlcmQgd2FraW5nIGFmdGVyIGV2ZXJ5IGludGVycnVwdCBhbmQgZWFj
aCBkb2luZyB0aGUKKyAqIGhlYXZ5d2VpZ2h0IHNlcW5vIGRhbmNlLCB3ZSBkZWxlZ2F0ZSB0aGUg
dGFzayAob2YgYmVpbmcgdGhlCisgKiBib3R0b20taGFsZiBvZiB0aGUgdXNlciBpbnRlcnJ1cHQp
IHRvIHRoZSBmaXJzdCBjbGllbnQuIEFmdGVyCisgKiBldmVyeSBpbnRlcnJ1cHQsIHdlIHdha2Ug
dXAgb25lIGNsaWVudCwgd2hvIGRvZXMgdGhlIGhlYXZ5d2VpZ2h0CisgKiBjb2hlcmVudCBzZXFu
byByZWFkIGFuZCBlaXRoZXIgZ29lcyBiYWNrIHRvIHNsZWVwIChpZiBpbmNvbXBsZXRlKSwKKyAq
IG9yIHdha2VzIHVwIGFsbCB0aGUgY29tcGxldGVkIGNsaWVudHMgaW4gcGFyYWxsZWwsIGJlZm9y
ZSB0aGVuCisgKiB0cmFuc2ZlcnJpbmcgdGhlIGJvdHRvbS1oYWxmIHN0YXR1cyB0byB0aGUgbmV4
dCBjbGllbnQgaW4gdGhlIHF1ZXVlLgorICoKKyAqIENvbXBhcmVkIHRvIHdhbGtpbmcgdGhlIGVu
dGlyZSBsaXN0IG9mIHdhaXRlcnMgaW4gYSBzaW5nbGUgZGVkaWNhdGVkCisgKiBib3R0b20taGFs
Ziwgd2UgcmVkdWNlIHRoZSBsYXRlbmN5IG9mIHRoZSBmaXJzdCB3YWl0ZXIgYnkgYXZvaWRpbmcK
KyAqIGEgY29udGV4dCBzd2l0Y2gsIGJ1dCBpbmN1ciBhZGRpdGlvbmFsIGNvaGVyZW50IHNlcW5v
IHJlYWRzIHdoZW4KKyAqIGZvbGxvd2luZyB0aGUgY2hhaW4gb2YgcmVxdWVzdCBicmVhZGNydW1i
cy4gU2luY2UgaXQgaXMgbW9zdCBsaWtlbHkKKyAqIHRoYXQgd2UgaGF2ZSBhIHNpbmdsZSBjbGll
bnQgd2FpdGluZyBvbiBlYWNoIHNlcW5vLCB0aGVuIHJlZHVjaW5nCisgKiB0aGUgb3ZlcmhlYWQg
b2Ygd2FraW5nIHRoYXQgY2xpZW50IGlzIG11Y2ggcHJlZmVycmVkLgorICovCitzdHJ1Y3QgaW50
ZWxfYnJlYWRjcnVtYnMgeworCXNwaW5sb2NrX3QgaXJxX2xvY2s7IC8qIHByb3RlY3RzIHRoZSBs
aXN0cyB1c2VkIGluIGhhcmRpcnEgY29udGV4dCAqLworCisJLyogTm90IGFsbCBicmVhZGNydW1i
cyBhcmUgYXR0YWNoZWQgdG8gcGh5c2ljYWwgSFcgKi8KKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICppcnFfZW5naW5lOworCisJc3RydWN0IGxpc3RfaGVhZCBzaWduYWxlcnM7CisJc3RydWN0IGxp
c3RfaGVhZCBzaWduYWxlZF9yZXF1ZXN0czsKKworCXN0cnVjdCBpcnFfd29yayBpcnFfd29yazsg
LyogZm9yIHVzZSBmcm9tIGluc2lkZSBpcnFfbG9jayAqLworCisJdW5zaWduZWQgaW50IGlycV9l
bmFibGVkOworCisJYm9vbCBpcnFfYXJtZWQ7Cit9OworCisjZW5kaWYgLyogX19JTlRFTF9CUkVB
RENSVU1CU19UWVBFU19fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oCmlu
ZGV4IGZhZjAwYTM1M2UyNS4uMDhlMmMwMDBkY2MzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmUuaApAQCAtMjIzLDIzICsyMjMsNiBAQCB2b2lkIGludGVsX2VuZ2luZV9nZXRf
aW5zdGRvbmUoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCiB2b2lkIGlu
dGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
OwogCi12b2lkIGludGVsX2VuZ2luZV9pbml0X2JyZWFkY3J1bWJzKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSk7Ci12b2lkIGludGVsX2VuZ2luZV9maW5pX2JyZWFkY3J1bWJzKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7Ci0KLXZvaWQgaW50ZWxfZW5naW5lX2Rpc2FybV9i
cmVhZGNydW1icyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwotCi1zdGF0aWMgaW5s
aW5lIHZvaWQKLWludGVsX2VuZ2luZV9zaWduYWxfYnJlYWRjcnVtYnMoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQotewotCWlycV93b3JrX3F1ZXVlKCZlbmdpbmUtPmJyZWFkY3J1bWJz
LmlycV93b3JrKTsKLX0KLQotdm9pZCBpbnRlbF9lbmdpbmVfcmVzZXRfYnJlYWRjcnVtYnMoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKLXZvaWQgaW50ZWxfZW5naW5lX2ZpbmlfYnJl
YWRjcnVtYnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKLQotdm9pZCBpbnRlbF9l
bmdpbmVfcHJpbnRfYnJlYWRjcnVtYnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAot
CQkJCSAgICBzdHJ1Y3QgZHJtX3ByaW50ZXIgKnApOwotCiBzdGF0aWMgaW5saW5lIHUzMiAqX19n
ZW44X2VtaXRfcGlwZV9jb250cm9sKHUzMiAqYmF0Y2gsIHUzMiBmbGFnczAsIHUzMiBmbGFnczEs
IHUzMiBvZmZzZXQpCiB7CiAJbWVtc2V0KGJhdGNoLCAwLCA2ICogc2l6ZW9mKHUzMikpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCBkZDFhNDJjNGQzNDQu
LmMyMGE5MWMxMzE4ZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2Nz
LmMKQEAgLTI4LDYgKzI4LDcgQEAKIAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAKKyNpbmNsdWRl
ICJpbnRlbF9icmVhZGNydW1icy5oIgogI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIKICNpbmNs
dWRlICJpbnRlbF9lbmdpbmUuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG0uaCIKQEAgLTcw
MCw4ICs3MDEsMTMgQEAgc3RhdGljIGludCBlbmdpbmVfc2V0dXBfY29tbW9uKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlpZiAoZXJyKQogCQlyZXR1cm4gZXJyOwogCisJZW5naW5l
LT5icmVhZGNydW1icyA9IGludGVsX2JyZWFkY3J1bWJzX2NyZWF0ZShlbmdpbmUpOworCWlmICgh
ZW5naW5lLT5icmVhZGNydW1icykgeworCQllcnIgPSAtRU5PTUVNOworCQlnb3RvIGVycl9zdGF0
dXM7CisJfQorCiAJaW50ZWxfZW5naW5lX2luaXRfYWN0aXZlKGVuZ2luZSwgRU5HSU5FX1BIWVNJ
Q0FMKTsKLQlpbnRlbF9lbmdpbmVfaW5pdF9icmVhZGNydW1icyhlbmdpbmUpOwogCWludGVsX2Vu
Z2luZV9pbml0X2V4ZWNsaXN0cyhlbmdpbmUpOwogCWludGVsX2VuZ2luZV9pbml0X2NtZF9wYXJz
ZXIoZW5naW5lKTsKIAlpbnRlbF9lbmdpbmVfaW5pdF9fcG0oZW5naW5lKTsKQEAgLTcxNiw2ICs3
MjIsMTAgQEAgc3RhdGljIGludCBlbmdpbmVfc2V0dXBfY29tbW9uKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIAlpbnRlbF9lbmdpbmVfaW5pdF9jdHhfd2EoZW5naW5lKTsKIAogCXJl
dHVybiAwOworCitlcnJfc3RhdHVzOgorCWNsZWFudXBfc3RhdHVzX3BhZ2UoZW5naW5lKTsKKwly
ZXR1cm4gZXJyOwogfQogCiBzdHJ1Y3QgbWVhc3VyZV9icmVhZGNydW1iIHsKQEAgLTkwMiw5ICs5
MTIsOSBAQCB2b2lkIGludGVsX2VuZ2luZV9jbGVhbnVwX2NvbW1vbihzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJdGFza2xldF9raWxsKCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0
KTsgLyogZmx1c2ggdGhlIGNhbGxiYWNrICovCiAKIAljbGVhbnVwX3N0YXR1c19wYWdlKGVuZ2lu
ZSk7CisJaW50ZWxfYnJlYWRjcnVtYnNfZnJlZShlbmdpbmUtPmJyZWFkY3J1bWJzKTsKIAogCWlu
dGVsX2VuZ2luZV9maW5pX3JldGlyZShlbmdpbmUpOwotCWludGVsX2VuZ2luZV9maW5pX2JyZWFk
Y3J1bWJzKGVuZ2luZSk7CiAJaW50ZWxfZW5naW5lX2NsZWFudXBfY21kX3BhcnNlcihlbmdpbmUp
OwogCiAJaWYgKGVuZ2luZS0+ZGVmYXVsdF9zdGF0ZSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3BtLmMKaW5kZXggOGVjM2VlY2YzZTM5Li5mN2IyZTA3ZTIyMjkgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCkBAIC02LDYgKzYsNyBAQAog
CiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKIAorI2luY2x1ZGUgImludGVsX2JyZWFkY3J1bWJzLmgi
CiAjaW5jbHVkZSAiaW50ZWxfY29udGV4dC5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZS5oIgog
I2luY2x1ZGUgImludGVsX2VuZ2luZV9oZWFydGJlYXQuaCIKQEAgLTI0Nyw3ICsyNDgsNyBAQCBz
dGF0aWMgaW50IF9fZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogCWNhbGxf
aWRsZV9iYXJyaWVycyhlbmdpbmUpOyAvKiBjbGVhbnVwIGFmdGVyIHdlZGdpbmcgKi8KIAogCWlu
dGVsX2VuZ2luZV9wYXJrX2hlYXJ0YmVhdChlbmdpbmUpOwotCWludGVsX2VuZ2luZV9kaXNhcm1f
YnJlYWRjcnVtYnMoZW5naW5lKTsKKwlpbnRlbF9icmVhZGNydW1ic19wYXJrKGVuZ2luZS0+YnJl
YWRjcnVtYnMpOwogCiAJLyogTXVzdCBiZSByZXNldCB1cG9uIGlkbGluZywgb3Igd2UgbWF5IG1p
c3MgdGhlIGJ1c3kgd2FrZXVwLiAqLwogCUdFTV9CVUdfT04oZW5naW5lLT5leGVjbGlzdHMucXVl
dWVfcHJpb3JpdHlfaGludCAhPSBJTlRfTUlOKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggOGRlOTJmZDdkMzkyLi5jNDAwYWFhMjI4N2IgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCkBAIC0yMiw2
ICsyMiw3IEBACiAjaW5jbHVkZSAiaTkxNV9wbXUuaCIKICNpbmNsdWRlICJpOTE1X3ByaW9saXN0
X3R5cGVzLmgiCiAjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5oIgorI2luY2x1ZGUgImludGVsX2Jy
ZWFkY3J1bWJzX3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfc3NldS5oIgogI2luY2x1ZGUgImlu
dGVsX3RpbWVsaW5lX3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfdW5jb3JlLmgiCkBAIC0zNzMs
MzQgKzM3NCw4IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgewogCSAqLwogCXN0cnVjdCBld21h
X19lbmdpbmVfbGF0ZW5jeSBsYXRlbmN5OwogCi0JLyogUmF0aGVyIHRoYW4gaGF2ZSBldmVyeSBj
bGllbnQgd2FpdCB1cG9uIGFsbCB1c2VyIGludGVycnVwdHMsCi0JICogd2l0aCB0aGUgaGVyZCB3
YWtpbmcgYWZ0ZXIgZXZlcnkgaW50ZXJydXB0IGFuZCBlYWNoIGRvaW5nIHRoZQotCSAqIGhlYXZ5
d2VpZ2h0IHNlcW5vIGRhbmNlLCB3ZSBkZWxlZ2F0ZSB0aGUgdGFzayAob2YgYmVpbmcgdGhlCi0J
ICogYm90dG9tLWhhbGYgb2YgdGhlIHVzZXIgaW50ZXJydXB0KSB0byB0aGUgZmlyc3QgY2xpZW50
LiBBZnRlcgotCSAqIGV2ZXJ5IGludGVycnVwdCwgd2Ugd2FrZSB1cCBvbmUgY2xpZW50LCB3aG8g
ZG9lcyB0aGUgaGVhdnl3ZWlnaHQKLQkgKiBjb2hlcmVudCBzZXFubyByZWFkIGFuZCBlaXRoZXIg
Z29lcyBiYWNrIHRvIHNsZWVwIChpZiBpbmNvbXBsZXRlKSwKLQkgKiBvciB3YWtlcyB1cCBhbGwg
dGhlIGNvbXBsZXRlZCBjbGllbnRzIGluIHBhcmFsbGVsLCBiZWZvcmUgdGhlbgotCSAqIHRyYW5z
ZmVycmluZyB0aGUgYm90dG9tLWhhbGYgc3RhdHVzIHRvIHRoZSBuZXh0IGNsaWVudCBpbiB0aGUg
cXVldWUuCi0JICoKLQkgKiBDb21wYXJlZCB0byB3YWxraW5nIHRoZSBlbnRpcmUgbGlzdCBvZiB3
YWl0ZXJzIGluIGEgc2luZ2xlIGRlZGljYXRlZAotCSAqIGJvdHRvbS1oYWxmLCB3ZSByZWR1Y2Ug
dGhlIGxhdGVuY3kgb2YgdGhlIGZpcnN0IHdhaXRlciBieSBhdm9pZGluZwotCSAqIGEgY29udGV4
dCBzd2l0Y2gsIGJ1dCBpbmN1ciBhZGRpdGlvbmFsIGNvaGVyZW50IHNlcW5vIHJlYWRzIHdoZW4K
LQkgKiBmb2xsb3dpbmcgdGhlIGNoYWluIG9mIHJlcXVlc3QgYnJlYWRjcnVtYnMuIFNpbmNlIGl0
IGlzIG1vc3QgbGlrZWx5Ci0JICogdGhhdCB3ZSBoYXZlIGEgc2luZ2xlIGNsaWVudCB3YWl0aW5n
IG9uIGVhY2ggc2Vxbm8sIHRoZW4gcmVkdWNpbmcKLQkgKiB0aGUgb3ZlcmhlYWQgb2Ygd2FraW5n
IHRoYXQgY2xpZW50IGlzIG11Y2ggcHJlZmVycmVkLgotCSAqLwotCXN0cnVjdCBpbnRlbF9icmVh
ZGNydW1icyB7Ci0JCXNwaW5sb2NrX3QgaXJxX2xvY2s7Ci0JCXN0cnVjdCBsaXN0X2hlYWQgc2ln
bmFsZXJzOwotCi0JCXN0cnVjdCBsaXN0X2hlYWQgc2lnbmFsZWRfcmVxdWVzdHM7Ci0KLQkJc3Ry
dWN0IGlycV93b3JrIGlycV93b3JrOyAvKiBmb3IgdXNlIGZyb20gaW5zaWRlIGlycV9sb2NrICov
Ci0KLQkJdW5zaWduZWQgaW50IGlycV9lbmFibGVkOwotCi0JCWJvb2wgaXJxX2FybWVkOwotCX0g
YnJlYWRjcnVtYnM7CisJLyogS2VlcCB0cmFjayBvZiBhbGwgdGhlIHNlcW5vIHVzZWQsIGEgdHJh
aWwgb2YgYnJlYWRjcnVtYnMgKi8KKwlzdHJ1Y3QgaW50ZWxfYnJlYWRjcnVtYnMgKmJyZWFkY3J1
bWJzOwogCiAJc3RydWN0IGludGVsX2VuZ2luZV9wbXUgewogCQkvKioKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3RfaXJxLmMKaW5kZXggYjA1ZGE2OGU1MmY0Li4yNTcwNjNhNTcxMDEgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2lycS5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X2lycS5jCkBAIC04LDYgKzgsNyBAQAogCiAj
aW5jbHVkZSAiaTkxNV9kcnYuaCIKICNpbmNsdWRlICJpOTE1X2lycS5oIgorI2luY2x1ZGUgImlu
dGVsX2JyZWFkY3J1bWJzLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3QuaCIKICNpbmNsdWRlICJpbnRl
bF9ndF9pcnEuaCIKICNpbmNsdWRlICJpbnRlbF91bmNvcmUuaCIKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfbHJjLmMKaW5kZXggNWU4Mjc4ZThhYzc5Li45MTEyYmIwN2EwNjggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0xMzcsNiArMTM3LDcgQEAKICNpbmNsdWRlICJpOTE1
X3BlcmYuaCIKICNpbmNsdWRlICJpOTE1X3RyYWNlLmgiCiAjaW5jbHVkZSAiaTkxNV92Z3B1Lmgi
CisjaW5jbHVkZSAiaW50ZWxfYnJlYWRjcnVtYnMuaCIKICNpbmNsdWRlICJpbnRlbF9jb250ZXh0
LmgiCiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3QuaCIK
QEAgLTQxMTksNyArNDEyMCw3IEBAIHN0YXRpYyBpbnQgZXhlY2xpc3RzX3Jlc3VtZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJaW50ZWxfbW9jc19pbml0X2VuZ2luZShlbmdp
bmUpOwogCi0JaW50ZWxfZW5naW5lX3Jlc2V0X2JyZWFkY3J1bWJzKGVuZ2luZSk7CisJaW50ZWxf
YnJlYWRjcnVtYnNfcmVzZXQoZW5naW5lLT5icmVhZGNydW1icyk7CiAKIAlpZiAoR0VNX1NIT1df
REVCVUcoKSAmJiB1bmV4cGVjdGVkX3N0YXJ0aW5nX3N0YXRlKGVuZ2luZSkpIHsKIAkJc3RydWN0
IGRybV9wcmludGVyIHAgPSBkcm1fZGVidWdfcHJpbnRlcihfX2Z1bmNfXyk7CkBAIC01NzA0LDkg
KzU3MDUsNyBAQCBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqKnNpYmxpbmdzLAogCXNucHJpbnRmKHZlLT5iYXNlLm5hbWUsIHNpemVvZih2ZS0+
YmFzZS5uYW1lKSwgInZpcnR1YWwiKTsKIAogCWludGVsX2VuZ2luZV9pbml0X2FjdGl2ZSgmdmUt
PmJhc2UsIEVOR0lORV9WSVJUVUFMKTsKLQlpbnRlbF9lbmdpbmVfaW5pdF9icmVhZGNydW1icygm
dmUtPmJhc2UpOwogCWludGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cygmdmUtPmJhc2UpOwotCXZl
LT5iYXNlLmJyZWFkY3J1bWJzLmlycV9hcm1lZCA9IHRydWU7IC8qIGZha2UgSFcsIHVzZWQgZm9y
IGlycV93b3JrICovCiAKIAl2ZS0+YmFzZS5jb3BzID0gJnZpcnR1YWxfY29udGV4dF9vcHM7CiAJ
dmUtPmJhc2UucmVxdWVzdF9hbGxvYyA9IGV4ZWNsaXN0c19yZXF1ZXN0X2FsbG9jOwpAQCAtNTcy
Myw2ICs1NzIyLDEyIEBAIGludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCiAKIAlpbnRlbF9jb250ZXh0X2luaXQoJnZlLT5jb250
ZXh0LCAmdmUtPmJhc2UpOwogCisJdmUtPmJhc2UuYnJlYWRjcnVtYnMgPSBpbnRlbF9icmVhZGNy
dW1ic19jcmVhdGUoTlVMTCk7CisJaWYgKCF2ZS0+YmFzZS5icmVhZGNydW1icykgeworCQllcnIg
PSAtRU5PTUVNOworCQlnb3RvIGVycl9wdXQ7CisJfQorCiAJZm9yIChuID0gMDsgbiA8IGNvdW50
OyBuKyspIHsKIAkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9IHNpYmxpbmdzW25d
OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCA0NmE1Y2VmZmMyMmYu
LmFjMzZiNjdmYjQ2YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC0x
NSw2ICsxNSw3IEBACiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKICNpbmNsdWRlICJpOTE1X2dwdV9l
cnJvci5oIgogI2luY2x1ZGUgImk5MTVfaXJxLmgiCisjaW5jbHVkZSAiaW50ZWxfYnJlYWRjcnVt
YnMuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdpbmVfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9ndC5o
IgogI2luY2x1ZGUgImludGVsX2d0X3BtLmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jCmluZGV4IDk0OTE1ZjY2ODcxNS4uMTg2YWEyZDNhODNl
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Np
b24uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24u
YwpAQCAtMzIsNiArMzIsNyBAQAogI2luY2x1ZGUgImdlbjZfcHBndHQuaCIKICNpbmNsdWRlICJn
ZW43X3JlbmRlcmNsZWFyLmgiCiAjaW5jbHVkZSAiaTkxNV9kcnYuaCIKKyNpbmNsdWRlICJpbnRl
bF9icmVhZGNydW1icy5oIgogI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJp
bnRlbF9ndC5oIgogI2luY2x1ZGUgImludGVsX3Jlc2V0LmgiCkBAIC0yNTUsNyArMjU2LDcgQEAg
c3RhdGljIGludCB4Y3NfcmVzdW1lKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAll
bHNlCiAJCXJpbmdfc2V0dXBfc3RhdHVzX3BhZ2UoZW5naW5lKTsKIAotCWludGVsX2VuZ2luZV9y
ZXNldF9icmVhZGNydW1icyhlbmdpbmUpOworCWludGVsX2JyZWFkY3J1bWJzX3Jlc2V0KGVuZ2lu
ZS0+YnJlYWRjcnVtYnMpOwogCiAJLyogRW5mb3JjZSBvcmRlcmluZyBieSByZWFkaW5nIEhFQUQg
cmVnaXN0ZXIgYmFjayAqLwogCUVOR0lORV9QT1NUSU5HX1JFQUQoZW5naW5lLCBSSU5HX0hFQUQp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcnBzLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ycHMuYwppbmRleCA5N2JhMTRhZDUyZTQuLmU2YTAw
ZWVhMDYzMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcnBzLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcnBzLmMKQEAgLTcsNiArNyw3IEBA
CiAjaW5jbHVkZSA8ZHJtL2k5MTVfZHJtLmg+CiAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgorI2lu
Y2x1ZGUgImludGVsX2JyZWFkY3J1bWJzLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3QuaCIKICNpbmNs
dWRlICJpbnRlbF9ndF9jbG9ja191dGlscy5oIgogI2luY2x1ZGUgImludGVsX2d0X2lycS5oIgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKaW5kZXggMDYzMDNiYTk4YzE5Li5kMTk3
MWZmZGNhNDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5l
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwpAQCAtMjYxLDEx
ICsyNjEsMTIgQEAgc3RhdGljIHZvaWQgbW9ja19lbmdpbmVfcmVsZWFzZShzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiAKIAlHRU1fQlVHX09OKHRpbWVyX3BlbmRpbmcoJm1vY2stPmh3
X2RlbGF5KSk7CiAKKwlpbnRlbF9icmVhZGNydW1ic19mcmVlKGVuZ2luZS0+YnJlYWRjcnVtYnMp
OworCiAJaW50ZWxfY29udGV4dF91bnBpbihlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKIAlpbnRl
bF9jb250ZXh0X3B1dChlbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKIAogCWludGVsX2VuZ2luZV9m
aW5pX3JldGlyZShlbmdpbmUpOwotCWludGVsX2VuZ2luZV9maW5pX2JyZWFkY3J1bWJzKGVuZ2lu
ZSk7CiB9CiAKIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm1vY2tfZW5naW5lKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1LApAQCAtMzIzLDExICszMjQsMTQgQEAgaW50IG1vY2tfZW5naW5l
X2luaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZTsKIAogCWludGVsX2VuZ2luZV9pbml0X2FjdGl2ZShlbmdpbmUsIEVOR0lORV9NT0NL
KTsKLQlpbnRlbF9lbmdpbmVfaW5pdF9icmVhZGNydW1icyhlbmdpbmUpOwogCWludGVsX2VuZ2lu
ZV9pbml0X2V4ZWNsaXN0cyhlbmdpbmUpOwogCWludGVsX2VuZ2luZV9pbml0X19wbShlbmdpbmUp
OwogCWludGVsX2VuZ2luZV9pbml0X3JldGlyZShlbmdpbmUpOwogCisJZW5naW5lLT5icmVhZGNy
dW1icyA9IGludGVsX2JyZWFkY3J1bWJzX2NyZWF0ZShOVUxMKTsKKwlpZiAoIWVuZ2luZS0+YnJl
YWRjcnVtYnMpCisJCXJldHVybiAtRU5PTUVNOworCiAJY2UgPSBjcmVhdGVfa2VybmVsX2NvbnRl
eHQoZW5naW5lKTsKIAlpZiAoSVNfRVJSKGNlKSkKIAkJZ290byBlcnJfYnJlYWRjcnVtYnM7CkBA
IC0zMzksNyArMzQzLDcgQEAgaW50IG1vY2tfZW5naW5lX2luaXQoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogCXJldHVybiAwOwogCiBlcnJfYnJlYWRjcnVtYnM6Ci0JaW50ZWxfZW5n
aW5lX2ZpbmlfYnJlYWRjcnVtYnMoZW5naW5lKTsKKwlpbnRlbF9icmVhZGNydW1ic19mcmVlKGVu
Z2luZS0+YnJlYWRjcnVtYnMpOwogCXJldHVybiAtRU5PTUVNOwogfQogCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9pcnEuYwppbmRleCAxZmE2NzcwMGQ4ZjQuLmYxMTNmZTQ0NTcyYiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2lycS5jCkBAIC00MSw2ICs0MSw3IEBACiAjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9scGVf
YXVkaW8uaCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX3Bzci5oIgogCisjaW5jbHVkZSAiZ3Qv
aW50ZWxfYnJlYWRjcnVtYnMuaCIKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgogI2luY2x1ZGUg
Imd0L2ludGVsX2d0X2lycS5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0X3BtX2lycS5oIgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwppbmRleCA2YzQyYjIyOTY2MTUuLmE3YTNkNDU3YTgz
NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAgLTMxLDYgKzMxLDcgQEAKICNp
bmNsdWRlIDxsaW51eC9zY2hlZC9zaWduYWwuaD4KIAogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9j
b250ZXh0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfYnJlYWRjcnVtYnMuaCIKICNpbmNsdWRlICJn
dC9pbnRlbF9jb250ZXh0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfcmluZy5oIgogI2luY2x1ZGUg
Imd0L2ludGVsX3Jwcy5oIgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZXF1ZXN0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaAppbmRleCA1OTA3
NjI4MjA3NjEuLjUxM2MxMmQyM2MyYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9yZXF1ZXN0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgK
QEAgLTM2NSwxMCArMzY1LDYgQEAgdm9pZCBpOTE1X3JlcXVlc3Rfc3VibWl0KHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJlcXVlc3QpOwogdm9pZCBfX2k5MTVfcmVxdWVzdF91bnN1Ym1pdChzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KTsKIHZvaWQgaTkxNV9yZXF1ZXN0X3Vuc3VibWl0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpOwogCi0vKiBOb3RlOiBwYXJ0IG9mIHRoZSBpbnRlbF9i
cmVhZGNydW1icyBmYW1pbHkgKi8KLWJvb2wgaTkxNV9yZXF1ZXN0X2VuYWJsZV9icmVhZGNydW1i
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpOwotdm9pZCBpOTE1X3JlcXVlc3RfY2FuY2Vs
X2JyZWFkY3J1bWIoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCk7Ci0KIGxvbmcgaTkxNV9y
ZXF1ZXN0X3dhaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAJCSAgICAgICB1bnNpZ25lZCBp
bnQgZmxhZ3MsCiAJCSAgICAgICBsb25nIHRpbWVvdXQpCi0tIAoyLjIwLjEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

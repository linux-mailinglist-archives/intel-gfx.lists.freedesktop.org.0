Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 7F996DF843
	for <lists+intel-gfx@lfdr.de>; Tue, 22 Oct 2019 00:52:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 07F7D6E2D1;
	Mon, 21 Oct 2019 22:52:52 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2931C6E2D1
 for <intel-gfx@lists.freedesktop.org>; Mon, 21 Oct 2019 22:52:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Oct 2019 15:52:50 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,325,1566889200"; d="scan'208";a="203469388"
Received: from orsosgc001.ra.intel.com ([10.23.184.150])
 by FMSMGA003.fm.intel.com with ESMTP; 21 Oct 2019 15:52:49 -0700
From: Umesh Nerlige Ramappa <umesh.nerlige.ramappa@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 21 Oct 2019 15:52:49 -0700
Message-Id: <20191021225249.33269-2-umesh.nerlige.ramappa@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191021225249.33269-1-umesh.nerlige.ramappa@intel.com>
References: <20191021225249.33269-1-umesh.nerlige.ramappa@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 2/2] drm/i915/tgl: Add perf support on TGL
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Lucas De Marchi <lucas.demarchi@intel.com>,
 Chris Wilson <chris.p.wilson@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTGlvbmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgoK
VGhlIGRlc2lnbiBvZiB0aGUgT0EgdW5pdCBoYXMgYmVlbiBzcGxpdCBpbnRvIHNldmVyYWwgdW5p
dHMuIFdlIG5vdwpoYXZlIGEgZ2xvYmFsIHVuaXQgKE9BRykgYW5kIGEgcmVuZGVyIHNwZWNpZmlj
IHVuaXQgKE9BUikuIFRoaXMgbGVhZHMKdG8gc29tZSBjaGFuZ2VzIG9uIGhvdyB3ZSBwcm9ncmFt
IHRoaW5ncy4gU29tZSBkZXRhaWxzIDoKCk9BUjoKICAtIGhhcyBpdHMgb3duIHNldCBvZiBjb3Vu
dGVyIHJlZ2lzdGVycywgdGhleSBhcmUgcGVyLWNvbnRleHQKICAgIHNhdmVkL3Jlc3RvcmVkCiAg
LSBjb3VudGVycyBhcmUgbm90IHdyaXR0ZW4gdG8gdGhlIGNpcmN1bGFyIE9BIGJ1ZmZlcgogIC0g
YSBzbmFwc2hvdCBvZiB0aGUgY291bnRlcnMgY2FuIGJlIGFjcXVpcmVkIHdpdGgKICAgIE1JX1JF
Q09SRF9QRVJGX0NPVU5ULCBvciBhIHNpbmdsZSBjb3VudGVyIGNhbiBiZSByZWFkIHdpdGgKICAg
IE1JX1NUT1JFX1JFR0lTVEVSX01FTS4KCk9BRzoKICAtIGhhcyBnbG9iYWwgY291bnRlcnMgdGhh
dCBpbmNyZW1lbnQgYWNyb3NzIGNvbnRleHQgc3dpdGNoZXMKICAtIGNvdW50ZXJzIGFyZSB3cml0
dGVuIGludG8gdGhlIGNpcmN1bGFyIE9BIGJ1ZmZlciAoaWYgcmVxdWVzdGVkKQoKdjI6IEZpeCBj
aGVja3BhdGNoIHdhcm5pbmdzIG9uIGNvZGUgc3R5bGUgKEx1Y2FzKQp2MzogKFVtZXNoKQogIC0g
VXBkYXRlIHJlZ2lzdGVyIGZyb20gd2hpY2ggdGFpbCwgc3RhdHVzIGFuZCBoZWFkIGFyZSByZWFk
CiAgLSBVcGRhdGUgbG9naWMgdG8gc2FtcGxlIGNvbnRleHQgcmVwb3J0cwogIC0gVXBkYXRlIHdo
aXRlbGlzdCBtdXggYW5kIGIgY291bnRlciByZWdzCnY0OiBGaXggYSBidWcgd2hlbiB1cGRhdGlu
ZyBjb250ZXh0IGltYWdlIGZvciBuZXcgY29udGV4dHMgKFVtZXNoKQp2NTogU3F1YXNoIHBhdGNo
IGVuYWJsaW5nIHNhdmUvcmVzdG9yZSBvZiBjb3VudGVycyBpbnRvIGNvbnRleHQgaW1hZ2UKCiAg
ICBXZSB3YW50IHRoaXMgc28gd2UgY2FuIHByZWVtcHQgcGVyZm9ybWFuY2UgcXVlcmllcyBhbmQg
a2VlcCB0aGUKICAgIHN5c3RlbSByZXNwb25zaXZlIGV2ZW4gd2hlbiBsb25nIHJ1bm5pbmcgcXVl
cmllcyBhcmUgb25nb2luZy4gV2UKICAgIGF2b2lkIGRvaW5nIGl0IGZvciBhbGwgY29udGV4dHMu
CgogICAgLSB1c2UgTFJJIHRvIG1vZGlmeSBjb250ZXh0IGNvbnRyb2wgKENocmlzKQogICAgLSB1
c2UgTUFTS0VEX0ZJRUxEIHRvIHByb2dyYW0ganVzdCB0aGUgbWFza2VkIGJpdHMgKENocmlzKQog
ICAgLSBkaXNhYmxlIHNhdmUvcmVzdG9yZSBvZiBjb3VudGVycyBvbiBjbGVhbnVwIChDaHJpcykK
CkJTcGVjOiAyODcyNywgMzAwMjEKClNpZ25lZC1vZmYtYnk6IExpb25lbCBMYW5kd2VybGluIDxs
aW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogVW1lc2ggTmVybGln
ZSBSYW1hcHBhIDx1bWVzaC5uZXJsaWdlLnJhbWFwcGFAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5
OiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KLS0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9NYWtlZmlsZSAgICAgICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9scmMuaCAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cGVyZi5jICAgICAgfCAzNDkgKysrKysrKysrKysrKysrKysrKysrKystLS0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVnLmggICAgICAgfCAxMDMgKysrKysrKysKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L29hL2k5MTVfb2FfdGdsLmMgfCAxMjEgKysrKysrKysrCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9vYS9pOTE1X29hX3RnbC5oIHwgIDE2ICsrCiA2IGZpbGVzIGNoYW5nZWQsIDU1OCBpbnNl
cnRpb25zKCspLCAzNSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9vYS9pOTE1X29hX3RnbC5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9n
cHUvZHJtL2k5MTUvb2EvaTkxNV9vYV90Z2wuaAoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L01ha2VmaWxlIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKaW5kZXggMmZk
NGJlZDE4OGU1Li43NWQ5NDkzODUwZDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L01ha2VmaWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlCkBAIC0yNDQsNyAr
MjQ0LDggQEAgaTkxNS15ICs9IFwKIAlvYS9pOTE1X29hX2NmbGd0Mi5vIFwKIAlvYS9pOTE1X29h
X2NmbGd0My5vIFwKIAlvYS9pOTE1X29hX2NubC5vIFwKLQlvYS9pOTE1X29hX2ljbC5vCisJb2Ev
aTkxNV9vYV9pY2wubyBcCisJb2EvaTkxNV9vYV90Z2wubwogaTkxNS15ICs9IGk5MTVfcGVyZi5v
CiAKICMgUG9zdC1tb3J0ZW0gZGVidWcgYW5kIEdQVSBoYW5nIHN0YXRlIGNhcHR1cmUKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmgKaW5kZXggOTlkYzU3NmE0ZTI1Li5iNmRhYWM3MTJjOWUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCkBAIC00Myw2ICs0Myw3IEBAIHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3M7CiAjZGVmaW5lCSAgQ1RYX0NUUkxfRU5HSU5FX0NUWF9SRVNUT1JF
X0lOSElCSVQJKDEgPDwgMCkKICNkZWZpbmUgICBDVFhfQ1RSTF9SU19DVFhfRU5BQkxFCQkoMSA8
PCAxKQogI2RlZmluZQkgIENUWF9DVFJMX0VOR0lORV9DVFhfU0FWRV9JTkhJQklUCSgxIDw8IDIp
CisjZGVmaW5lCSAgR0VOMTJfQ1RYX0NUUkxfT0FSX0NPTlRFWFRfRU5BQkxFCSgxIDw8IDgpCiAj
ZGVmaW5lIFJJTkdfQ09OVEVYVF9TVEFUVVNfUFRSKGJhc2UpCQlfTU1JTygoYmFzZSkgKyAweDNh
MCkKICNkZWZpbmUgUklOR19FWEVDTElTVF9TUV9DT05URU5UUyhiYXNlKQkJX01NSU8oKGJhc2Up
ICsgMHg1MTApCiAjZGVmaW5lIFJJTkdfRVhFQ0xJU1RfQ09OVFJPTChiYXNlKQkJX01NSU8oKGJh
c2UpICsgMHg1NTApCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IGYwOThlMGMwNWE1OS4u
NjlmNmVjZTI2ZDViIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMjE3LDYgKzIxNyw3
IEBACiAjaW5jbHVkZSAib2EvaTkxNV9vYV9jZmxndDMuaCIKICNpbmNsdWRlICJvYS9pOTE1X29h
X2NubC5oIgogI2luY2x1ZGUgIm9hL2k5MTVfb2FfaWNsLmgiCisjaW5jbHVkZSAib2EvaTkxNV9v
YV90Z2wuaCIKIAogLyogSFcgcmVxdWlyZXMgdGhpcyB0byBiZSBhIHBvd2VyIG9mIHR3bywgYmV0
d2VlbiAxMjhrIGFuZCAxNk0sIHRob3VnaCBkcml2ZXIKICAqIGlzIGN1cnJlbnRseSBnZW5lcmFs
bHkgZGVzaWduZWQgYXNzdW1pbmcgdGhlIGxhcmdlc3QgMTZNIHNpemUgaXMgdXNlZCBzdWNoCkBA
IC0yOTIsNyArMjkzLDggQEAgc3RhdGljIHUzMiBpOTE1X3BlcmZfc3RyZWFtX3BhcmFub2lkID0g
dHJ1ZTsKICNkZWZpbmUgSU5WQUxJRF9DVFhfSUQgMHhmZmZmZmZmZgogCiAvKiBPbiBHZW44KyBh
dXRvbWF0aWNhbGx5IHRyaWdnZXJlZCBPQSByZXBvcnRzIGluY2x1ZGUgYSAncmVhc29uJyBmaWVs
ZC4uLiAqLwotI2RlZmluZSBPQVJFUE9SVF9SRUFTT05fTUFTSyAgICAgICAgICAgMHgzZgorI2Rl
ZmluZSBPQVJFUE9SVF9SRUFTT05fTUFTSyAgICAgICAgICAgKElTX0dFTihzdHJlYW0tPnBlcmYt
Pmk5MTUsIDEyKSA/IFwKKwkJCQkJMHg3ZiA6IDB4M2YpCiAjZGVmaW5lIE9BUkVQT1JUX1JFQVNP
Tl9TSElGVCAgICAgICAgICAxOQogI2RlZmluZSBPQVJFUE9SVF9SRUFTT05fVElNRVIgICAgICAg
ICAgKDE8PDApCiAjZGVmaW5lIE9BUkVQT1JUX1JFQVNPTl9DVFhfU1dJVENIICAgICAoMTw8MykK
QEAgLTMzOCw2ICszNDAsMTAgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X29hX2Zvcm1hdCBn
ZW44X3BsdXNfb2FfZm9ybWF0c1tJOTE1X09BX0ZPUk1BVF9NQVhdID0gewogCVtJOTE1X09BX0ZP
Uk1BVF9DNF9COF0JCSAgICA9IHsgNywgNjQgfSwKIH07CiAKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qg
aTkxNV9vYV9mb3JtYXQgZ2VuMTJfb2FfZm9ybWF0c1tJOTE1X09BX0ZPUk1BVF9NQVhdID0gewor
CVtJOTE1X09BX0ZPUk1BVF9BMzJ1NDBfQTR1MzJfQjhfQzhdID0geyA1LCAyNTYgfSwKK307CisK
ICNkZWZpbmUgU0FNUExFX09BX1JFUE9SVCAgICAgICgxPDwwKQogCiAvKioKQEAgLTQxOCw2ICs0
MjQsMTQgQEAgc3RhdGljIHZvaWQgZnJlZV9vYV9jb25maWdfYm8oc3RydWN0IGk5MTVfb2FfY29u
ZmlnX2JvICpvYV9ibykKIAlrZnJlZShvYV9ibyk7CiB9CiAKK3N0YXRpYyB1MzIgZ2VuMTJfb2Ff
aHdfdGFpbF9yZWFkKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0
IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT51bmNvcmU7CisKKwlyZXR1cm4gaW50ZWxf
dW5jb3JlX3JlYWQodW5jb3JlLCBHRU4xMl9PQUdfT0FUQUlMUFRSKSAmCisJICAgICAgIEdFTjEy
X09BR19PQVRBSUxQVFJfTUFTSzsKK30KKwogc3RhdGljIHUzMiBnZW44X29hX2h3X3RhaWxfcmVh
ZChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewogCXN0cnVjdCBpbnRlbF91bmNv
cmUgKnVuY29yZSA9IHN0cmVhbS0+dW5jb3JlOwpAQCAtNTM4LDcgKzU1Miw3IEBAIHN0YXRpYyBi
b29sIG9hX2J1ZmZlcl9jaGVja191bmxvY2tlZChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtKQogCQkJCWFnaW5nX3RhaWwgPSBod190YWlsOwogCQkJc3RyZWFtLT5vYV9idWZmZXIuYWdp
bmdfdGltZXN0YW1wID0gbm93OwogCQl9IGVsc2UgewotCQkJRFJNX0VSUk9SKCJJZ25vcmluZyBz
cHVyaW91cyBvdXQgb2YgcmFuZ2UgT0EgYnVmZmVyIHRhaWwgcG9pbnRlciA9ICV1XG4iLAorCQkJ
RFJNX0VSUk9SKCJJZ25vcmluZyBzcHVyaW91cyBvdXQgb2YgcmFuZ2UgT0EgYnVmZmVyIHRhaWwg
cG9pbnRlciA9ICV4XG4iLAogCQkJCSAgaHdfdGFpbCk7CiAJCX0KIAl9CkBAIC03NTcsNyArNzcx
LDggQEAgc3RhdGljIGludCBnZW44X2FwcGVuZF9vYV9yZXBvcnRzKHN0cnVjdCBpOTE1X3BlcmZf
c3RyZWFtICpzdHJlYW0sCiAJCSAqIE5vdGU6IHRoYXQgd2UgZG9uJ3QgY2xlYXIgdGhlIHZhbGlk
X2N0eF9iaXQgc28gdXNlcnNwYWNlIGNhbgogCQkgKiB1bmRlcnN0YW5kIHRoYXQgdGhlIElEIGhh
cyBiZWVuIHNxdWFzaGVkIGJ5IHRoZSBrZXJuZWwuCiAJCSAqLwotCQlpZiAoIShyZXBvcnQzMlsw
XSAmIHN0cmVhbS0+cGVyZi0+Z2VuOF92YWxpZF9jdHhfYml0KSkKKwkJaWYgKCEocmVwb3J0MzJb
MF0gJiBzdHJlYW0tPnBlcmYtPmdlbjhfdmFsaWRfY3R4X2JpdCkgJiYKKwkJICAgIElOVEVMX0dF
TihzdHJlYW0tPnBlcmYtPmk5MTUpIDw9IDExKQogCQkJY3R4X2lkID0gcmVwb3J0MzJbMl0gPSBJ
TlZBTElEX0NUWF9JRDsKIAogCQkvKgpAQCAtODI0LDYgKzgzOSwxMSBAQCBzdGF0aWMgaW50IGdl
bjhfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAl9
CiAKIAlpZiAoc3RhcnRfb2Zmc2V0ICE9ICpvZmZzZXQpIHsKKwkJaTkxNV9yZWdfdCBvYWhlYWRw
dHI7CisKKwkJb2FoZWFkcHRyID0gSVNfR0VOKHN0cmVhbS0+cGVyZi0+aTkxNSwgMTIpID8KKwkJ
CSAgICBHRU4xMl9PQUdfT0FIRUFEUFRSIDogR0VOOF9PQUhFQURQVFI7CisKIAkJc3Bpbl9sb2Nr
X2lycXNhdmUoJnN0cmVhbS0+b2FfYnVmZmVyLnB0cl9sb2NrLCBmbGFncyk7CiAKIAkJLyoKQEAg
LTgzMSw5ICs4NTEsOCBAQCBzdGF0aWMgaW50IGdlbjhfYXBwZW5kX29hX3JlcG9ydHMoc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJICogcmVsYXRpdmUgdG8gb2FfYnVmX2Jhc2Ug
c28gcHV0IGJhY2sgaGVyZS4uLgogCQkgKi8KIAkJaGVhZCArPSBndHRfb2Zmc2V0OwotCi0JCWlu
dGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjhfT0FIRUFEUFRSLAotCQkJCSAgIGhlYWQgJiBH
RU44X09BSEVBRFBUUl9NQVNLKTsKKwkJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgb2FoZWFk
cHRyLAorCQkJCSAgIGhlYWQgJiBHRU4xMl9PQUdfT0FIRUFEUFRSX01BU0spOwogCQlzdHJlYW0t
Pm9hX2J1ZmZlci5oZWFkID0gaGVhZDsKIAogCQlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzdHJl
YW0tPm9hX2J1ZmZlci5wdHJfbG9jaywgZmxhZ3MpOwpAQCAtODY5LDEyICs4ODgsMTYgQEAgc3Rh
dGljIGludCBnZW44X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIHsK
IAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0tPnVuY29yZTsKIAl1MzIgb2Fz
dGF0dXM7CisJaTkxNV9yZWdfdCBvYXN0YXR1c19yZWc7CiAJaW50IHJldDsKIAogCWlmIChXQVJO
X09OKCFzdHJlYW0tPm9hX2J1ZmZlci52YWRkcikpCiAJCXJldHVybiAtRUlPOwogCi0Jb2FzdGF0
dXMgPSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjhfT0FTVEFUVVMpOworCW9hc3RhdHVz
X3JlZyA9IElTX0dFTihzdHJlYW0tPnBlcmYtPmk5MTUsIDEyKSA/CisJCSAgICAgICBHRU4xMl9P
QUdfT0FTVEFUVVMgOiBHRU44X09BU1RBVFVTOworCisJb2FzdGF0dXMgPSBpbnRlbF91bmNvcmVf
cmVhZCh1bmNvcmUsIG9hc3RhdHVzX3JlZyk7CiAKIAkvKgogCSAqIFdlIHRyZWF0IE9BQlVGRkVS
X09WRVJGTE9XIGFzIGEgc2lnbmlmaWNhbnQgZXJyb3I6CkBAIC05MDYsNyArOTI5LDcgQEAgc3Rh
dGljIGludCBnZW44X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAkJ
ICogTm90ZTogLm9hX2VuYWJsZSgpIGlzIGV4cGVjdGVkIHRvIHJlLWluaXQgdGhlIG9hYnVmZmVy
IGFuZAogCQkgKiByZXNldCBHRU44X09BU1RBVFVTIGZvciB1cwogCQkgKi8KLQkJb2FzdGF0dXMg
PSBpbnRlbF91bmNvcmVfcmVhZCh1bmNvcmUsIEdFTjhfT0FTVEFUVVMpOworCQlvYXN0YXR1cyA9
IGludGVsX3VuY29yZV9yZWFkKHVuY29yZSwgb2FzdGF0dXNfcmVnKTsKIAl9CiAKIAlpZiAob2Fz
dGF0dXMgJiBHRU44X09BU1RBVFVTX1JFUE9SVF9MT1NUKSB7CkBAIC05MTQsNyArOTM3LDcgQEAg
c3RhdGljIGludCBnZW44X29hX3JlYWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwK
IAkJCQkgICAgICAgRFJNX0k5MTVfUEVSRl9SRUNPUkRfT0FfUkVQT1JUX0xPU1QpOwogCQlpZiAo
cmV0KQogCQkJcmV0dXJuIHJldDsKLQkJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOOF9P
QVNUQVRVUywKKwkJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgb2FzdGF0dXNfcmVnLAogCQkJ
CSAgIG9hc3RhdHVzICYgfkdFTjhfT0FTVEFUVVNfUkVQT1JUX0xPU1QpOwogCX0KIApAQCAtMTQ4
OCw2ICsxNTExLDYzIEBAIHN0YXRpYyB2b2lkIGdlbjhfaW5pdF9vYV9idWZmZXIoc3RydWN0IGk5
MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlzdHJlYW0tPnBvbGxpbiA9IGZhbHNlOwogfQogCitz
dGF0aWMgdm9pZCBnZW4xMl9pbml0X29hX2J1ZmZlcihzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAq
c3RyZWFtKQoreworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IHN0cmVhbS0+dW5jb3Jl
OworCXUzMiBndHRfb2Zmc2V0ID0gaTkxNV9nZ3R0X29mZnNldChzdHJlYW0tPm9hX2J1ZmZlci52
bWEpOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisKKwlzcGluX2xvY2tfaXJxc2F2ZSgmc3RyZWFt
LT5vYV9idWZmZXIucHRyX2xvY2ssIGZsYWdzKTsKKworCWludGVsX3VuY29yZV93cml0ZSh1bmNv
cmUsIEdFTjEyX09BR19PQVNUQVRVUywgMCk7CisJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwg
R0VOMTJfT0FHX09BSEVBRFBUUiwKKwkJCSAgIGd0dF9vZmZzZXQgJiBHRU4xMl9PQUdfT0FIRUFE
UFRSX01BU0spOworCXN0cmVhbS0+b2FfYnVmZmVyLmhlYWQgPSBndHRfb2Zmc2V0OworCisJLyoK
KwkgKiBQUk0gc2F5czoKKwkgKgorCSAqICAiVGhpcyBNTUlPIG11c3QgYmUgc2V0IGJlZm9yZSB0
aGUgT0FUQUlMUFRSCisJICogIHJlZ2lzdGVyIGFuZCBhZnRlciB0aGUgT0FIRUFEUFRSIHJlZ2lz
dGVyLiBUaGlzIGlzCisJICogIHRvIGVuYWJsZSBwcm9wZXIgZnVuY3Rpb25hbGl0eSBvZiB0aGUg
b3ZlcmZsb3cKKwkgKiAgYml0LiIKKwkgKi8KKwlpbnRlbF91bmNvcmVfd3JpdGUodW5jb3JlLCBH
RU4xMl9PQUdfT0FCVUZGRVIsIGd0dF9vZmZzZXQgfAorCQkJICAgT0FCVUZGRVJfU0laRV8xNk0g
fCBHRU44X09BQlVGRkVSX01FTV9TRUxFQ1RfR0dUVCk7CisJaW50ZWxfdW5jb3JlX3dyaXRlKHVu
Y29yZSwgR0VOMTJfT0FHX09BVEFJTFBUUiwKKwkJCSAgIGd0dF9vZmZzZXQgJiBHRU4xMl9PQUdf
T0FUQUlMUFRSX01BU0spOworCisJLyogTWFyayB0aGF0IHdlIG5lZWQgdXBkYXRlZCB0YWlsIHBv
aW50ZXJzIHRvIHJlYWQgZnJvbS4uLiAqLworCXN0cmVhbS0+b2FfYnVmZmVyLnRhaWxzWzBdLm9m
ZnNldCA9IElOVkFMSURfVEFJTF9QVFI7CisJc3RyZWFtLT5vYV9idWZmZXIudGFpbHNbMV0ub2Zm
c2V0ID0gSU5WQUxJRF9UQUlMX1BUUjsKKworCS8qCisJICogUmVzZXQgc3RhdGUgdXNlZCB0byBy
ZWNvZ25pc2UgY29udGV4dCBzd2l0Y2hlcywgYWZmZWN0aW5nIHdoaWNoCisJICogcmVwb3J0cyB3
ZSB3aWxsIGZvcndhcmQgdG8gdXNlcnNwYWNlIHdoaWxlIGZpbHRlcmluZyBmb3IgYSBzaW5nbGUK
KwkgKiBjb250ZXh0LgorCSAqLworCXN0cmVhbS0+b2FfYnVmZmVyLmxhc3RfY3R4X2lkID0gSU5W
QUxJRF9DVFhfSUQ7CisKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZzdHJlYW0tPm9hX2J1ZmZl
ci5wdHJfbG9jaywgZmxhZ3MpOworCisJLyoKKwkgKiBOQjogYWx0aG91Z2ggdGhlIE9BIGJ1ZmZl
ciB3aWxsIGluaXRpYWxseSBiZSBhbGxvY2F0ZWQKKwkgKiB6ZXJvZWQgdmlhIHNobWZzIChhbmQg
c28gdGhpcyBtZW1zZXQgaXMgcmVkdW5kYW50IHdoZW4KKwkgKiBmaXJzdCBhbGxvY2F0aW5nKSwg
d2UgbWF5IHJlLWluaXQgdGhlIE9BIGJ1ZmZlciwgZWl0aGVyCisJICogd2hlbiByZS1lbmFibGlu
ZyBhIHN0cmVhbSBvciBpbiBlcnJvci9yZXNldCBwYXRocy4KKwkgKgorCSAqIFRoZSByZWFzb24g
d2UgY2xlYXIgdGhlIGJ1ZmZlciBmb3IgZWFjaCByZS1pbml0IGlzIGZvciB0aGUKKwkgKiBzYW5p
dHkgY2hlY2sgaW4gZ2VuOF9hcHBlbmRfb2FfcmVwb3J0cygpIHRoYXQgbG9va3MgYXQgdGhlCisJ
ICogcmVhc29uIGZpZWxkIHRvIG1ha2Ugc3VyZSBpdCdzIG5vbi16ZXJvIHdoaWNoIHJlbGllcyBv
bgorCSAqIHRoZSBhc3N1bXB0aW9uIHRoYXQgbmV3IHJlcG9ydHMgYXJlIGJlaW5nIHdyaXR0ZW4g
dG8gemVyb2VkCisJICogbWVtb3J5Li4uCisJICovCisJbWVtc2V0KHN0cmVhbS0+b2FfYnVmZmVy
LnZhZGRyLCAwLAorCSAgICAgICBzdHJlYW0tPm9hX2J1ZmZlci52bWEtPnNpemUpOworCisJc3Ry
ZWFtLT5wb2xsaW4gPSBmYWxzZTsKK30KKwogc3RhdGljIGludCBhbGxvY19vYV9idWZmZXIoc3Ry
dWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqYm87CkBAIC0xOTkwLDEyICsyMDcwLDIwIEBAIGdlbjhfdXBkYXRlX3JlZ19zdGF0ZV91
bmxvY2tlZChjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJdTMyICpyZWdfc3RhdGUg
PSBjZS0+bHJjX3JlZ19zdGF0ZTsKIAlpbnQgaTsKIAotCXJlZ19zdGF0ZVtjdHhfb2FjdHhjdHJs
ICsgMV0gPQotCQkoc3RyZWFtLT5wZXJpb2RfZXhwb25lbnQgPDwgR0VOOF9PQV9USU1FUl9QRVJJ
T0RfU0hJRlQpIHwKLQkJKHN0cmVhbS0+cGVyaW9kaWMgPyBHRU44X09BX1RJTUVSX0VOQUJMRSA6
IDApIHwKLQkJR0VOOF9PQV9DT1VOVEVSX1JFU1VNRTsKKwlpZiAoSVNfR0VOKHN0cmVhbS0+cGVy
Zi0+aTkxNSwgMTIpKSB7CisJCXUzMiBmb3JtYXQgPSBzdHJlYW0tPm9hX2J1ZmZlci5mb3JtYXQ7
CiAKLQlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShmbGV4X3JlZ3MpOyBpKyspCisJCXJlZ19z
dGF0ZVtjdHhfb2FjdHhjdHJsICsgMV0gPQorCQkJKGZvcm1hdCA8PCBHRU4xMl9PQVJfT0FDT05U
Uk9MX0NPVU5URVJfRk9STUFUX1NISUZUKSB8CisJCQkoc3RyZWFtLT5vYV9jb25maWcgPyBHRU4x
Ml9PQVJfT0FDT05UUk9MX0NPVU5URVJfRU5BQkxFIDogMCk7CisJfSBlbHNlIHsKKwkJcmVnX3N0
YXRlW2N0eF9vYWN0eGN0cmwgKyAxXSA9CisJCQkoc3RyZWFtLT5wZXJpb2RfZXhwb25lbnQgPDwg
R0VOOF9PQV9USU1FUl9QRVJJT0RfU0hJRlQpIHwKKwkJCShzdHJlYW0tPnBlcmlvZGljID8gR0VO
OF9PQV9USU1FUl9FTkFCTEUgOiAwKSB8CisJCQlHRU44X09BX0NPVU5URVJfUkVTVU1FOworCX0K
KworCWZvciAoaSA9IDA7ICEhY3R4X2ZsZXhldTAgJiYgaSA8IEFSUkFZX1NJWkUoZmxleF9yZWdz
KTsgaSsrKQogCQlyZWdfc3RhdGVbY3R4X2ZsZXhldTAgKyBpICogMiArIDFdID0KIAkJCW9hX2Nv
bmZpZ19mbGV4X3JlZyhzdHJlYW0tPm9hX2NvbmZpZywgZmxleF9yZWdzW2ldKTsKIApAQCAtMjEy
OCw2ICsyMjE2LDM2IEBAIHN0YXRpYyBpbnQgZ2VuOF9jb25maWd1cmVfY29udGV4dChzdHJ1Y3Qg
aTkxNV9nZW1fY29udGV4dCAqY3R4LAogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyBpbnQgZ2Vu
MTJfZW1pdF9vYXJfY29uZmlnKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgYm9vbCBlbmFibGUp
Cit7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJdTMyICpjczsKKwlpbnQgZXJyID0gMDsK
KworCXJxID0gaTkxNV9yZXF1ZXN0X2NyZWF0ZShjZSk7CisJaWYgKElTX0VSUihycSkpCisJCXJl
dHVybiBQVFJfRVJSKHJxKTsKKworCWNzID0gaW50ZWxfcmluZ19iZWdpbihycSwgNCk7CisJaWYg
KElTX0VSUihjcykpIHsKKwkJZXJyID0gUFRSX0VSUihjcyk7CisJCWdvdG8gb3V0OworCX0KKwor
CSpjcysrID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oMSk7CisJKmNzKysgPSBpOTE1X21taW9fcmVn
X29mZnNldChSSU5HX0NPTlRFWFRfQ09OVFJPTChjZS0+ZW5naW5lLT5tbWlvX2Jhc2UpKTsKKwkq
Y3MrKyA9IF9NQVNLRURfRklFTEQoR0VOMTJfQ1RYX0NUUkxfT0FSX0NPTlRFWFRfRU5BQkxFLAor
CQkJICAgICAgZW5hYmxlID8gR0VOMTJfQ1RYX0NUUkxfT0FSX0NPTlRFWFRfRU5BQkxFIDogMCk7
CisJKmNzKysgPSBNSV9OT09QOworCisJaW50ZWxfcmluZ19hZHZhbmNlKHJxLCBjcyk7CisKK291
dDoKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKworCXJldHVybiBlcnI7Cit9CisKIC8qCiAgKiBN
YW5hZ2VzIHVwZGF0aW5nIHRoZSBwZXItY29udGV4dCBhc3BlY3RzIG9mIHRoZSBPQSBzdHJlYW0K
ICAqIGNvbmZpZ3VyYXRpb24gYWNyb3NzIGFsbCBjb250ZXh0cy4KQEAgLTIxNTIsOCArMjI3MCw4
IEBAIHN0YXRpYyBpbnQgZ2VuOF9jb25maWd1cmVfY29udGV4dChzdHJ1Y3QgaTkxNV9nZW1fY29u
dGV4dCAqY3R4LAogICoKICAqIE5vdGU6IGl0J3Mgb25seSB0aGUgUkNTL1JlbmRlciBjb250ZXh0
IHRoYXQgaGFzIGFueSBPQSBzdGF0ZS4KICAqLwotc3RhdGljIGludCBnZW44X2NvbmZpZ3VyZV9h
bGxfY29udGV4dHMoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKLQkJCQkgICAgICAg
Y29uc3Qgc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCitzdGF0aWMgaW50IGxyY19j
b25maWd1cmVfYWxsX2NvbnRleHRzKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCisJ
CQkJICAgICAgY29uc3Qgc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcpCiB7CiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBzdHJlYW0tPnBlcmYtPmk5MTU7CiAJLyogVGhl
IE1NSU8gb2Zmc2V0cyBmb3IgRmxleCBFVSByZWdpc3RlcnMgYXJlbid0IGNvbnRpZ3VvdXMgKi8K
QEAgLTIxNjUsMTEgKzIyODMsOSBAQCBzdGF0aWMgaW50IGdlbjhfY29uZmlndXJlX2FsbF9jb250
ZXh0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQkJQ1RYX1JfUFdSX0NMS19T
VEFURSwKIAkJfSwKIAkJewotCQkJR0VOOF9PQUNUWENPTlRST0wsCisJCQlJU19HRU4oaTkxNSwg
MTIpID8KKwkJCUdFTjEyX09BUl9PQUNPTlRST0wgOiBHRU44X09BQ1RYQ09OVFJPTCwKIAkJCXN0
cmVhbS0+cGVyZi0+Y3R4X29hY3R4Y3RybF9vZmZzZXQgKyAxLAotCQkJKChzdHJlYW0tPnBlcmlv
ZF9leHBvbmVudCA8PCBHRU44X09BX1RJTUVSX1BFUklPRF9TSElGVCkgfAotCQkJIChzdHJlYW0t
PnBlcmlvZGljID8gR0VOOF9PQV9USU1FUl9FTkFCTEUgOiAwKSB8Ci0JCQkgR0VOOF9PQV9DT1VO
VEVSX1JFU1VNRSkKIAkJfSwKIAkJeyBFVV9QRVJGX0NOVEwwLCBjdHhfZmxleGV1TigwKSB9LAog
CQl7IEVVX1BFUkZfQ05UTDEsIGN0eF9mbGV4ZXVOKDEpIH0sCkBAIC0yMTgyLDkgKzIyOTgsMjMg
QEAgc3RhdGljIGludCBnZW44X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSwKICN1bmRlZiBjdHhfZmxleGV1TgogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LCAqY247CisJc2l6
ZV90IGFycmF5X3NpemUgPSBJU19HRU4oaTkxNSwgMTIpID8gMiA6IEFSUkFZX1NJWkUocmVncyk7
CiAJaW50IGksIGVycjsKIAotCWZvciAoaSA9IDI7IGkgPCBBUlJBWV9TSVpFKHJlZ3MpOyBpKysp
CisJaWYgKElTX0dFTihpOTE1LCAxMikpIHsKKwkJdTMyIGZvcm1hdCA9IHN0cmVhbS0+b2FfYnVm
ZmVyLmZvcm1hdDsKKworCQlyZWdzWzFdLnZhbHVlID0KKwkJCShmb3JtYXQgPDwgR0VOMTJfT0FS
X09BQ09OVFJPTF9DT1VOVEVSX0ZPUk1BVF9TSElGVCkgfAorCQkJKG9hX2NvbmZpZyA/IEdFTjEy
X09BUl9PQUNPTlRST0xfQ09VTlRFUl9FTkFCTEUgOiAwKTsKKwl9IGVsc2UgeworCQlyZWdzWzFd
LnZhbHVlID0KKwkJCShzdHJlYW0tPnBlcmlvZF9leHBvbmVudCA8PCBHRU44X09BX1RJTUVSX1BF
UklPRF9TSElGVCkgfAorCQkJKHN0cmVhbS0+cGVyaW9kaWMgPyBHRU44X09BX1RJTUVSX0VOQUJM
RSA6IDApIHwKKwkJCUdFTjhfT0FfQ09VTlRFUl9SRVNVTUU7CisJfQorCisJZm9yIChpID0gMjsg
ISFjdHhfZmxleGV1MCAmJiBpIDwgYXJyYXlfc2l6ZTsgaSsrKQogCQlyZWdzW2ldLnZhbHVlID0g
b2FfY29uZmlnX2ZsZXhfcmVnKG9hX2NvbmZpZywgcmVnc1tpXS5yZWcpOwogCiAJbG9ja2RlcF9h
c3NlcnRfaGVsZCgmc3RyZWFtLT5wZXJmLT5sb2NrKTsKQEAgLTIyMTUsNyArMjM0NSw3IEBAIHN0
YXRpYyBpbnQgZ2VuOF9jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0sCiAKIAkJc3Bpbl91bmxvY2soJmk5MTUtPmdlbS5jb250ZXh0cy5sb2NrKTsK
IAotCQllcnIgPSBnZW44X2NvbmZpZ3VyZV9jb250ZXh0KGN0eCwgcmVncywgQVJSQVlfU0laRShy
ZWdzKSk7CisJCWVyciA9IGdlbjhfY29uZmlndXJlX2NvbnRleHQoY3R4LCByZWdzLCBhcnJheV9z
aXplKTsKIAkJaWYgKGVycikgewogCQkJaTkxNV9nZW1fY29udGV4dF9wdXQoY3R4KTsKIAkJCXJl
dHVybiBlcnI7CkBAIC0yMjQwLDcgKzIzNzAsNyBAQCBzdGF0aWMgaW50IGdlbjhfY29uZmlndXJl
X2FsbF9jb250ZXh0cyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCiAJCXJlZ3Nb
MF0udmFsdWUgPSBpbnRlbF9zc2V1X21ha2VfcnBjcyhpOTE1LCAmY2UtPnNzZXUpOwogCi0JCWVy
ciA9IGdlbjhfbW9kaWZ5X3NlbGYoY2UsIHJlZ3MsIEFSUkFZX1NJWkUocmVncykpOworCQllcnIg
PSBnZW44X21vZGlmeV9zZWxmKGNlLCByZWdzLCBhcnJheV9zaXplKTsKIAkJaWYgKGVycikKIAkJ
CXJldHVybiBlcnI7CiAJfQpAQCAtMjI4OCwxMCArMjQxOCw2MCBAQCBzdGF0aWMgaW50IGdlbjhf
ZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKiB0
byBtYWtlIHN1cmUgYWxsIHNsaWNlcy9zdWJzbGljZXMgYXJlIE9OIGJlZm9yZSB3cml0aW5nIHRv
IE5PQQogCSAqIHJlZ2lzdGVycy4KIAkgKi8KLQlyZXQgPSBnZW44X2NvbmZpZ3VyZV9hbGxfY29u
dGV4dHMoc3RyZWFtLCBvYV9jb25maWcpOworCXJldCA9IGxyY19jb25maWd1cmVfYWxsX2NvbnRl
eHRzKHN0cmVhbSwgb2FfY29uZmlnKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJcmV0
dXJuIGVtaXRfb2FfY29uZmlnKHN0cmVhbSwgb2FfY29uZmlnLCBvYV9jb250ZXh0KHN0cmVhbSkp
OworfQorCitzdGF0aWMgaW50IGdlbjEyX2VuYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1X3Bl
cmZfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3Ry
ZWFtLT51bmNvcmU7CisJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcgPSBzdHJlYW0t
Pm9hX2NvbmZpZzsKKwlib29sIHBlcmlvZGljID0gc3RyZWFtLT5wZXJpb2RpYzsKKwl1MzIgcGVy
aW9kX2V4cG9uZW50ID0gc3RyZWFtLT5wZXJpb2RfZXhwb25lbnQ7CisJaW50IHJldDsKKworCWlu
dGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjEyX09BR19PQV9ERUJVRywKKwkJCSAgIC8qIERp
c2FibGUgY2xrIHJhdGlvIHJlcG9ydHMsIGxpa2UgcHJldmlvdXMgR2Vucy4gKi8KKwkJCSAgIF9N
QVNLRURfQklUX0VOQUJMRShHRU4xMl9PQUdfT0FfREVCVUdfRElTQUJMRV9DTEtfUkFUSU9fUkVQ
T1JUUyB8CisJCQkJCSAgICAgIEdFTjEyX09BR19PQV9ERUJVR19JTkNMVURFX0NMS19SQVRJTykg
fAorCQkJICAgLyoKKwkJCSAgICAqIElmIHRoZSB1c2VyIGRpZG4ndCByZXF1aXJlIE9BIHJlcG9y
dHMsIGluc3RydWN0IHRoZQorCQkJICAgICogaGFyZHdhcmUgbm90IHRvIGVtaXQgY3R4IHN3aXRj
aCByZXBvcnRzLgorCQkJICAgICovCisJCQkgICAhKHN0cmVhbS0+c2FtcGxlX2ZsYWdzICYgU0FN
UExFX09BX1JFUE9SVCkgPworCQkJICAgX01BU0tFRF9CSVRfRU5BQkxFKEdFTjEyX09BR19PQV9E
RUJVR19ESVNBQkxFX0NUWF9TV0lUQ0hfUkVQT1JUUykgOgorCQkJICAgX01BU0tFRF9CSVRfRElT
QUJMRShHRU4xMl9PQUdfT0FfREVCVUdfRElTQUJMRV9DVFhfU1dJVENIX1JFUE9SVFMpKTsKKwor
CWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjEyX09BR19PQUdMQkNUWENUUkwsIHBlcmlv
ZGljID8KKwkJCSAgIChHRU4xMl9PQUdfT0FHTEJDVFhDVFJMX0NPVU5URVJfUkVTVU1FIHwKKwkJ
CSAgICBHRU4xMl9PQUdfT0FHTEJDVFhDVFJMX1RJTUVSX0VOQUJMRSB8CisJCQkgICAgKHBlcmlv
ZF9leHBvbmVudCA8PCBHRU4xMl9PQUdfT0FHTEJDVFhDVFJMX1RJTUVSX1BFUklPRF9TSElGVCkp
CisJCQkgICAgOiAwKTsKKworCS8qCisJICogVXBkYXRlIGFsbCBjb250ZXh0cyBwcmlvciB3cml0
aW5nIHRoZSBtdXggY29uZmlndXJhdGlvbnMgYXMgd2UgbmVlZAorCSAqIHRvIG1ha2Ugc3VyZSBh
bGwgc2xpY2VzL3N1YnNsaWNlcyBhcmUgT04gYmVmb3JlIHdyaXRpbmcgdG8gTk9BCisJICogcmVn
aXN0ZXJzLgorCSAqLworCXJldCA9IGxyY19jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cmVhbSwg
b2FfY29uZmlnKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCisJLyoKKwkgKiBGb3IgR2Vu
MTIsIHBlcmZvcm1hbmNlIGNvdW50ZXJzIGFyZSBjb250ZXh0CisJICogc2F2ZWQvcmVzdG9yZWQu
IE9ubHkgZW5hYmxlIGl0IGZvciB0aGUgY29udGV4dCB0aGF0CisJICogcmVxdWVzdGVkIHRoaXMu
CisJICovCisJaWYgKHN0cmVhbS0+Y3R4KSB7CisJCXJldCA9IGdlbjEyX2VtaXRfb2FyX2NvbmZp
ZyhzdHJlYW0tPnBpbm5lZF9jdHgsCisJCQkJCSAgICBvYV9jb25maWcgIT0gTlVMTCk7CisJCWlm
IChyZXQpCisJCQlyZXR1cm4gcmV0OworCX0KKwogCXJldHVybiBlbWl0X29hX2NvbmZpZyhzdHJl
YW0sIG9hX2NvbmZpZywgb2FfY29udGV4dChzdHJlYW0pKTsKIH0KIApAQCAtMjMwMCw3ICsyNDgw
LDcgQEAgc3RhdGljIHZvaWQgZ2VuOF9kaXNhYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVy
Zl9zdHJlYW0gKnN0cmVhbSkKIAlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUgPSBzdHJlYW0t
PnVuY29yZTsKIAogCS8qIFJlc2V0IGFsbCBjb250ZXh0cycgc2xpY2VzL3N1YnNsaWNlcyBjb25m
aWd1cmF0aW9ucy4gKi8KLQlnZW44X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoc3RyZWFtLCBOVUxM
KTsKKwlscmNfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJlYW0sIE5VTEwpOwogCiAJaW50ZWxf
dW5jb3JlX3Jtdyh1bmNvcmUsIEdEVF9DSElDS0VOX0JJVFMsIEdUX05PQV9FTkFCTEUsIDApOwog
fQpAQCAtMjMxMCw3ICsyNDkwLDIyIEBAIHN0YXRpYyB2b2lkIGdlbjEwX2Rpc2FibGVfbWV0cmlj
X3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogCXN0cnVjdCBpbnRlbF91bmNv
cmUgKnVuY29yZSA9IHN0cmVhbS0+dW5jb3JlOwogCiAJLyogUmVzZXQgYWxsIGNvbnRleHRzJyBz
bGljZXMvc3Vic2xpY2VzIGNvbmZpZ3VyYXRpb25zLiAqLwotCWdlbjhfY29uZmlndXJlX2FsbF9j
b250ZXh0cyhzdHJlYW0sIE5VTEwpOworCWxyY19jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cmVh
bSwgTlVMTCk7CisKKwkvKiBNYWtlIHN1cmUgd2UgZGlzYWJsZSBub2EgdG8gc2F2ZSBwb3dlci4g
Ki8KKwlpbnRlbF91bmNvcmVfcm13KHVuY29yZSwgUlBNX0NPTkZJRzEsIEdFTjEwX0dUX05PQV9F
TkFCTEUsIDApOworfQorCitzdGF0aWMgdm9pZCBnZW4xMl9kaXNhYmxlX21ldHJpY19zZXQoc3Ry
dWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKK3sKKwlzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1
bmNvcmUgPSBzdHJlYW0tPnVuY29yZTsKKworCS8qIFJlc2V0IGFsbCBjb250ZXh0cycgc2xpY2Vz
L3N1YnNsaWNlcyBjb25maWd1cmF0aW9ucy4gKi8KKwlscmNfY29uZmlndXJlX2FsbF9jb250ZXh0
cyhzdHJlYW0sIE5VTEwpOworCisJLyogZGlzYWJsZSB0aGUgY29udGV4dCBzYXZlL3Jlc3RvcmUg
b3IgT0FSIGNvdW50ZXJzICovCisJaWYgKHN0cmVhbS0+Y3R4KQorCQlnZW4xMl9lbWl0X29hcl9j
b25maWcoc3RyZWFtLT5waW5uZWRfY3R4LCBmYWxzZSk7CiAKIAkvKiBNYWtlIHN1cmUgd2UgZGlz
YWJsZSBub2EgdG8gc2F2ZSBwb3dlci4gKi8KIAlpbnRlbF91bmNvcmVfcm13KHVuY29yZSwgUlBN
X0NPTkZJRzEsIEdFTjEwX0dUX05PQV9FTkFCTEUsIDApOwpAQCAtMjM3Miw2ICsyNTY3LDI1IEBA
IHN0YXRpYyB2b2lkIGdlbjhfb2FfZW5hYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0pCiAJCQkgICBHRU44X09BX0NPVU5URVJfRU5BQkxFKTsKIH0KIAorc3RhdGljIHZvaWQgZ2Vu
MTJfb2FfZW5hYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCit7CisJc3RydWN0
IGludGVsX3VuY29yZSAqdW5jb3JlID0gc3RyZWFtLT51bmNvcmU7CisJdTMyIHJlcG9ydF9mb3Jt
YXQgPSBzdHJlYW0tPm9hX2J1ZmZlci5mb3JtYXQ7CisKKwkvKgorCSAqIElmIHdlIGRvbid0IHdh
bnQgT0EgcmVwb3J0cyBmcm9tIHRoZSBPQSBidWZmZXIsIHRoZW4gd2UgZG9uJ3QgZXZlbgorCSAq
IG5lZWQgdG8gcHJvZ3JhbSB0aGUgT0FHIHVuaXQuCisJICovCisJaWYgKCEoc3RyZWFtLT5zYW1w
bGVfZmxhZ3MgJiBTQU1QTEVfT0FfUkVQT1JUKSkKKwkJcmV0dXJuOworCisJZ2VuMTJfaW5pdF9v
YV9idWZmZXIoc3RyZWFtKTsKKworCWludGVsX3VuY29yZV93cml0ZSh1bmNvcmUsIEdFTjEyX09B
R19PQUNPTlRST0wsCisJCQkgICAocmVwb3J0X2Zvcm1hdCA8PCBHRU4xMl9PQUdfT0FDT05UUk9M
X09BX0NPVU5URVJfRk9STUFUX1NISUZUKSB8CisJCQkgICBHRU4xMl9PQUdfT0FDT05UUk9MX09B
X0NPVU5URVJfRU5BQkxFKTsKK30KKwogLyoqCiAgKiBpOTE1X29hX3N0cmVhbV9lbmFibGUgLSBo
YW5kbGUgYEk5MTVfUEVSRl9JT0NUTF9FTkFCTEVgIGZvciBPQSBzdHJlYW0KICAqIEBzdHJlYW06
IEFuIGk5MTUgcGVyZiBzdHJlYW0gb3BlbmVkIGZvciBPQSBtZXRyaWNzCkBAIC0yNDEzLDYgKzI2
MjcsMTggQEAgc3RhdGljIHZvaWQgZ2VuOF9vYV9kaXNhYmxlKHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0pCiAJCURSTV9FUlJPUigid2FpdCBmb3IgT0EgdG8gYmUgZGlzYWJsZWQgdGlt
ZWQgb3V0XG4iKTsKIH0KIAorc3RhdGljIHZvaWQgZ2VuMTJfb2FfZGlzYWJsZShzdHJ1Y3QgaTkx
NV9wZXJmX3N0cmVhbSAqc3RyZWFtKQoreworCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9
IHN0cmVhbS0+dW5jb3JlOworCisJaW50ZWxfdW5jb3JlX3dyaXRlKHVuY29yZSwgR0VOMTJfT0FH
X09BQ09OVFJPTCwgMCk7CisJaWYgKGludGVsX3dhaXRfZm9yX3JlZ2lzdGVyKHVuY29yZSwKKwkJ
CQkgICAgR0VOMTJfT0FHX09BQ09OVFJPTCwKKwkJCQkgICAgR0VOMTJfT0FHX09BQ09OVFJPTF9P
QV9DT1VOVEVSX0VOQUJMRSwgMCwKKwkJCQkgICAgNTApKQorCQlEUk1fRVJST1IoIndhaXQgZm9y
IE9BIHRvIGJlIGRpc2FibGVkIHRpbWVkIG91dFxuIik7Cit9CisKIC8qKgogICogaTkxNV9vYV9z
dHJlYW1fZGlzYWJsZSAtIGhhbmRsZSBgSTkxNV9QRVJGX0lPQ1RMX0RJU0FCTEVgIGZvciBPQSBz
dHJlYW0KICAqIEBzdHJlYW06IEFuIGk5MTUgcGVyZiBzdHJlYW0gb3BlbmVkIGZvciBPQSBtZXRy
aWNzCkBAIC0yNjE0LDcgKzI4NDAsNyBAQCB2b2lkIGk5MTVfb2FfaW5pdF9yZWdfc3RhdGUoY29u
c3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogewogCXN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
ICpzdHJlYW07CiAKLQkvKiBwZXJmLmV4Y2x1c2l2ZV9zdHJlYW0gc2VyaWFsaXNlZCBieSBnZW44
X2NvbmZpZ3VyZV9hbGxfY29udGV4dHMoKSAqLworCS8qIHBlcmYuZXhjbHVzaXZlX3N0cmVhbSBz
ZXJpYWxpc2VkIGJ5IGxyY19jb25maWd1cmVfYWxsX2NvbnRleHRzKCkgKi8KIAlsb2NrZGVwX2Fz
c2VydF9oZWxkKCZjZS0+cGluX211dGV4KTsKIAogCWlmIChlbmdpbmUtPmNsYXNzICE9IFJFTkRF
Ul9DTEFTUykKQEAgLTMwOTQsMTYgKzMzMjAsMjQgQEAgaTkxNV9wZXJmX29wZW5faW9jdGxfbG9j
a2VkKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsCiAJICogcmVzdCBvZiB0aGUgc3lzdGVtLCB3aGlj
aCB3ZSBjb25zaWRlciBhY2NlcHRhYmxlIGZvciBhCiAJICogbm9uLXByaXZpbGVnZWQgY2xpZW50
LgogCSAqCi0JICogRm9yIEdlbjgrIHRoZSBPQSB1bml0IG5vIGxvbmdlciBzdXBwb3J0cyBjbG9j
ayBnYXRpbmcgb2ZmIGZvciBhCisJICogRm9yIEdlbjgtPjExIHRoZSBPQSB1bml0IG5vIGxvbmdl
ciBzdXBwb3J0cyBjbG9jayBnYXRpbmcgb2ZmIGZvciBhCiAJICogc3BlY2lmaWMgY29udGV4dCBh
bmQgdGhlIGtlcm5lbCBjYW4ndCBzZWN1cmVseSBzdG9wIHRoZSBjb3VudGVycwogCSAqIGZyb20g
dXBkYXRpbmcgYXMgc3lzdGVtLXdpZGUgLyBnbG9iYWwgdmFsdWVzLiBFdmVuIHRob3VnaCB3ZSBj
YW4KIAkgKiBmaWx0ZXIgcmVwb3J0cyBiYXNlZCBvbiB0aGUgaW5jbHVkZWQgY29udGV4dCBJRCB3
ZSBjYW4ndCBibG9jawogCSAqIGNsaWVudHMgZnJvbSBzZWVpbmcgdGhlIHJhdyAvIGdsb2JhbCBj
b3VudGVyIHZhbHVlcyB2aWEKIAkgKiBNSV9SRVBPUlRfUEVSRl9DT1VOVCBjb21tYW5kcyBhbmQg
c28gY29uc2lkZXIgaXQgYSBwcml2aWxlZ2VkIG9wIHRvCiAJICogZW5hYmxlIHRoZSBPQSB1bml0
IGJ5IGRlZmF1bHQuCisJICoKKwkgKiBGb3IgR2VuMTIrIHdlIGdhaW4gYSBuZXcgT0FSIHVuaXQg
dGhhdCBvbmx5IG1vbml0b3JzIHRoZSBSQ1Mgb24gYQorCSAqIHBlciBjb250ZXh0IGJhc2lzLiBT
byB3ZSBjYW4gcmVsYXggcmVxdWlyZW1lbnRzIHRoZXJlIGlmIHRoZSB1c2VyCisJICogZG9lc24n
dCByZXF1ZXN0IGdsb2JhbCBzdHJlYW0gYWNjZXNzIChpLmUuIHF1ZXJ5IGJhc2VkIHNhbXBsaW5n
CisJICogdXNpbmcgTUlfUkVDT1JEX1BFUkZfQ09VTlQuCiAJICovCiAJaWYgKElTX0hBU1dFTEwo
cGVyZi0+aTkxNSkgJiYgc3BlY2lmaWNfY3R4ICYmICFwcm9wcy0+aG9sZF9wcmVlbXB0aW9uKQog
CQlwcml2aWxlZ2VkX29wID0gZmFsc2U7CisJZWxzZSBpZiAoSVNfR0VOKHBlcmYtPmk5MTUsIDEy
KSAmJiBzcGVjaWZpY19jdHggJiYKKwkJIChwcm9wcy0+c2FtcGxlX2ZsYWdzICYgU0FNUExFX09B
X1JFUE9SVCkgPT0gMCkKKwkJcHJpdmlsZWdlZF9vcCA9IGZhbHNlOwogCiAJLyogU2ltaWxhciB0
byBwZXJmJ3Mga2VybmVsLnBlcmZfcGFyYW5vaWRfY3B1IHN5c2N0bCBvcHRpb24KIAkgKiB3ZSBj
aGVjayBhIGRldi5pOTE1LnBlcmZfc3RyZWFtX3BhcmFub2lkIHN5c2N0bCBvcHRpb24KQEAgLTM0
MTgsNyArMzY1Miw5IEBAIHZvaWQgaTkxNV9wZXJmX3JlZ2lzdGVyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogCiAJc3lzZnNfYXR0cl9pbml0KCZwZXJmLT50ZXN0X2NvbmZpZy5zeXNm
c19tZXRyaWNfaWQuYXR0cik7CiAKLQlpZiAoSU5URUxfR0VOKGk5MTUpID49IDExKSB7CisJaWYg
KElTX1RJR0VSTEFLRShpOTE1KSkgeworCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ190Z2wo
aTkxNSk7CisJfSBlbHNlIGlmIChJTlRFTF9HRU4oaTkxNSkgPj0gMTEpIHsKIAkJaTkxNV9wZXJm
X2xvYWRfdGVzdF9jb25maWdfaWNsKGk5MTUpOwogCX0gZWxzZSBpZiAoSVNfQ0FOTk9OTEFLRShp
OTE1KSkgewogCQlpOTE1X3BlcmZfbG9hZF90ZXN0X2NvbmZpZ19jbmwoaTkxNSk7CkBAIC0zNTY5
LDYgKzM4MDUsMjggQEAgc3RhdGljIGJvb2wgY2h2X2lzX3ZhbGlkX211eF9hZGRyKHN0cnVjdCBp
OTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRyKQogCSAgICAgICBBRERSX0lOX1JBTkdFKGFkZHIsIDB4
MTgyMzAwLCAweDE4MjNBNCk7CiB9CiAKK3N0YXRpYyBib29sIGdlbjEyX2lzX3ZhbGlkX2JfY291
bnRlcl9hZGRyKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRyKQoreworCXJldHVybiBS
RUdfSU5fUkFOR0UoYWRkciwgR0VOMTJfT0FHX09BU1RBUlRUUklHMSwgR0VOMTJfT0FHX09BU1RB
UlRUUklHOCkgfHwKKwkgICAgICAgUkVHX0lOX1JBTkdFKGFkZHIsIEdFTjEyX09BR19PQVJFUE9S
VFRSSUcxLCBHRU4xMl9PQUdfT0FSRVBPUlRUUklHOCkgfHwKKwkgICAgICAgUkVHX0lOX1JBTkdF
KGFkZHIsIEdFTjEyX09BR19DRUMwXzAsIEdFTjEyX09BR19DRUM3XzEpIHx8CisJICAgICAgIFJF
R19JTl9SQU5HRShhZGRyLCBHRU4xMl9PQUdfU0NFQzBfMCwgR0VOMTJfT0FHX1NDRUM3XzEpIHx8
CisJICAgICAgIFJFR19FUVVBTChhZGRyLCBHRU4xMl9PQUFfREJHX1JFRykgfHwKKwkgICAgICAg
UkVHX0VRVUFMKGFkZHIsIEdFTjEyX09BR19PQV9QRVNTKSB8fAorCSAgICAgICBSRUdfRVFVQUwo
YWRkciwgR0VOMTJfT0FHX1NQQ1RSX0NORik7Cit9CisKK3N0YXRpYyBib29sIGdlbjEyX2lzX3Zh
bGlkX211eF9hZGRyKHN0cnVjdCBpOTE1X3BlcmYgKnBlcmYsIHUzMiBhZGRyKQoreworCXJldHVy
biBSRUdfRVFVQUwoYWRkciwgTk9BX1dSSVRFKSB8fAorCSAgICAgICBSRUdfRVFVQUwoYWRkciwg
R0VOMTBfTk9BX1dSSVRFX0hJR0gpIHx8CisJICAgICAgIFJFR19FUVVBTChhZGRyLCBHRFRfQ0hJ
Q0tFTl9CSVRTKSB8fAorCSAgICAgICBSRUdfRVFVQUwoYWRkciwgV0FJVF9GT1JfUkM2X0VYSVQp
IHx8CisJICAgICAgIFJFR19FUVVBTChhZGRyLCBSUE1fQ09ORklHMCkgfHwKKwkgICAgICAgUkVH
X0VRVUFMKGFkZHIsIFJQTV9DT05GSUcxKSB8fAorCSAgICAgICBSRUdfSU5fUkFOR0UoYWRkciwg
Tk9BX0NPTkZJRygwKSwgTk9BX0NPTkZJRyg4KSk7Cit9CisKIHN0YXRpYyB1MzIgbWFza19yZWdf
dmFsdWUodTMyIHJlZywgdTMyIHZhbCkKIHsKIAkvKiBIQUxGX1NMSUNFX0NISUNLRU4yIGlzIHBy
b2dyYW1tZWQgd2l0aCBhIHRoZQpAQCAtMzk2MSwxNCArNDIxOSwxMSBAQCB2b2lkIGk5MTVfcGVy
Zl9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCQkgKiB3b3J0aCB0aGUgY29t
cGxleGl0eSB0byBtYWludGFpbiBub3cgdGhhdCBCRFcrIGVuYWJsZQogCQkgKiBleGVjbGlzdCBt
b2RlIGJ5IGRlZmF1bHQuCiAJCSAqLwotCQlwZXJmLT5vYV9mb3JtYXRzID0gZ2VuOF9wbHVzX29h
X2Zvcm1hdHM7Ci0KLQkJcGVyZi0+b3BzLm9hX2VuYWJsZSA9IGdlbjhfb2FfZW5hYmxlOwotCQlw
ZXJmLT5vcHMub2FfZGlzYWJsZSA9IGdlbjhfb2FfZGlzYWJsZTsKIAkJcGVyZi0+b3BzLnJlYWQg
PSBnZW44X29hX3JlYWQ7Ci0JCXBlcmYtPm9wcy5vYV9od190YWlsX3JlYWQgPSBnZW44X29hX2h3
X3RhaWxfcmVhZDsKIAogCQlpZiAoSVNfR0VOX1JBTkdFKGk5MTUsIDgsIDkpKSB7CisJCQlwZXJm
LT5vYV9mb3JtYXRzID0gZ2VuOF9wbHVzX29hX2Zvcm1hdHM7CisKIAkJCXBlcmYtPm9wcy5pc192
YWxpZF9iX2NvdW50ZXJfcmVnID0KIAkJCQlnZW43X2lzX3ZhbGlkX2JfY291bnRlcl9hZGRyOwog
CQkJcGVyZi0+b3BzLmlzX3ZhbGlkX211eF9yZWcgPQpAQCAtMzk4MSw4ICs0MjM2LDExIEBAIHZv
aWQgaTkxNV9wZXJmX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCQkJCWNo
dl9pc192YWxpZF9tdXhfYWRkcjsKIAkJCX0KIAorCQkJcGVyZi0+b3BzLm9hX2VuYWJsZSA9IGdl
bjhfb2FfZW5hYmxlOworCQkJcGVyZi0+b3BzLm9hX2Rpc2FibGUgPSBnZW44X29hX2Rpc2FibGU7
CiAJCQlwZXJmLT5vcHMuZW5hYmxlX21ldHJpY19zZXQgPSBnZW44X2VuYWJsZV9tZXRyaWNfc2V0
OwogCQkJcGVyZi0+b3BzLmRpc2FibGVfbWV0cmljX3NldCA9IGdlbjhfZGlzYWJsZV9tZXRyaWNf
c2V0OworCQkJcGVyZi0+b3BzLm9hX2h3X3RhaWxfcmVhZCA9IGdlbjhfb2FfaHdfdGFpbF9yZWFk
OwogCiAJCQlpZiAoSVNfR0VOKGk5MTUsIDgpKSB7CiAJCQkJcGVyZi0+Y3R4X29hY3R4Y3RybF9v
ZmZzZXQgPSAweDEyMDsKQEAgLTM5OTYsNiArNDI1NCw4IEBAIHZvaWQgaTkxNV9wZXJmX2luaXQo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCQkJcGVyZi0+Z2VuOF92YWxpZF9jdHhf
Yml0ID0gQklUKDE2KTsKIAkJCX0KIAkJfSBlbHNlIGlmIChJU19HRU5fUkFOR0UoaTkxNSwgMTAs
IDExKSkgeworCQkJcGVyZi0+b2FfZm9ybWF0cyA9IGdlbjhfcGx1c19vYV9mb3JtYXRzOworCiAJ
CQlwZXJmLT5vcHMuaXNfdmFsaWRfYl9jb3VudGVyX3JlZyA9CiAJCQkJZ2VuN19pc192YWxpZF9i
X2NvdW50ZXJfYWRkcjsKIAkJCXBlcmYtPm9wcy5pc192YWxpZF9tdXhfcmVnID0KQEAgLTQwMDMs
OCArNDI2MywxMSBAQCB2b2lkIGk5MTVfcGVyZl9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1KQogCQkJcGVyZi0+b3BzLmlzX3ZhbGlkX2ZsZXhfcmVnID0KIAkJCQlnZW44X2lzX3Zh
bGlkX2ZsZXhfYWRkcjsKIAorCQkJcGVyZi0+b3BzLm9hX2VuYWJsZSA9IGdlbjhfb2FfZW5hYmxl
OworCQkJcGVyZi0+b3BzLm9hX2Rpc2FibGUgPSBnZW44X29hX2Rpc2FibGU7CiAJCQlwZXJmLT5v
cHMuZW5hYmxlX21ldHJpY19zZXQgPSBnZW44X2VuYWJsZV9tZXRyaWNfc2V0OwogCQkJcGVyZi0+
b3BzLmRpc2FibGVfbWV0cmljX3NldCA9IGdlbjEwX2Rpc2FibGVfbWV0cmljX3NldDsKKwkJCXBl
cmYtPm9wcy5vYV9od190YWlsX3JlYWQgPSBnZW44X29hX2h3X3RhaWxfcmVhZDsKIAogCQkJaWYg
KElTX0dFTihpOTE1LCAxMCkpIHsKIAkJCQlwZXJmLT5jdHhfb2FjdHhjdHJsX29mZnNldCA9IDB4
MTI4OwpAQCAtNDAxNCw2ICs0Mjc3LDI0IEBAIHZvaWQgaTkxNV9wZXJmX2luaXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCQkJcGVyZi0+Y3R4X2ZsZXhldTBfb2Zmc2V0ID0gMHg3
OGU7CiAJCQl9CiAJCQlwZXJmLT5nZW44X3ZhbGlkX2N0eF9iaXQgPSBCSVQoMTYpOworCQl9IGVs
c2UgaWYgKElTX0dFTihpOTE1LCAxMikpIHsKKwkJCXBlcmYtPm9hX2Zvcm1hdHMgPSBnZW4xMl9v
YV9mb3JtYXRzOworCisJCQlwZXJmLT5vcHMuaXNfdmFsaWRfYl9jb3VudGVyX3JlZyA9CisJCQkJ
Z2VuMTJfaXNfdmFsaWRfYl9jb3VudGVyX2FkZHI7CisJCQlwZXJmLT5vcHMuaXNfdmFsaWRfbXV4
X3JlZyA9CisJCQkJZ2VuMTJfaXNfdmFsaWRfbXV4X2FkZHI7CisJCQlwZXJmLT5vcHMuaXNfdmFs
aWRfZmxleF9yZWcgPQorCQkJCWdlbjhfaXNfdmFsaWRfZmxleF9hZGRyOworCisJCQlwZXJmLT5v
cHMub2FfZW5hYmxlID0gZ2VuMTJfb2FfZW5hYmxlOworCQkJcGVyZi0+b3BzLm9hX2Rpc2FibGUg
PSBnZW4xMl9vYV9kaXNhYmxlOworCQkJcGVyZi0+b3BzLmVuYWJsZV9tZXRyaWNfc2V0ID0gZ2Vu
MTJfZW5hYmxlX21ldHJpY19zZXQ7CisJCQlwZXJmLT5vcHMuZGlzYWJsZV9tZXRyaWNfc2V0ID0g
Z2VuMTJfZGlzYWJsZV9tZXRyaWNfc2V0OworCQkJcGVyZi0+b3BzLm9hX2h3X3RhaWxfcmVhZCA9
IGdlbjEyX29hX2h3X3RhaWxfcmVhZDsKKworCQkJcGVyZi0+Y3R4X2ZsZXhldTBfb2Zmc2V0ID0g
MDsKKwkJCXBlcmYtPmN0eF9vYWN0eGN0cmxfb2Zmc2V0ID0gMHgxNDQ7CiAJCX0KIAl9CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3JlZy5oCmluZGV4IDg1NWRiODg4NTE2Yy4uNmVmMDliYmE4OWFmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVnLmgKQEAgLTY4NCw2ICs2ODQsNDUgQEAgc3RhdGljIGlubGluZSBi
b29sIGk5MTVfbW1pb19yZWdfdmFsaWQoaTkxNV9yZWdfdCByZWcpCiAjZGVmaW5lIE9BQlVGRkVS
X1NJWkVfOE0gICAgKDYgPDwgMykKICNkZWZpbmUgT0FCVUZGRVJfU0laRV8xNk0gICAoNyA8PCAz
KQogCisvKiBHZW4xMiBPQVIgdW5pdCAqLworI2RlZmluZSBHRU4xMl9PQVJfT0FDT05UUk9MIF9N
TUlPKDB4Mjk2MCkKKyNkZWZpbmUgIEdFTjEyX09BUl9PQUNPTlRST0xfQ09VTlRFUl9GT1JNQVRf
U0hJRlQgMQorI2RlZmluZSAgR0VOMTJfT0FSX09BQ09OVFJPTF9DT1VOVEVSX0VOQUJMRSAgICAg
ICAoMSA8PCAwKQorCisjZGVmaW5lIEdFTjEyX09BQ1RYQ09OVFJPTCBfTU1JTygweDIzNjApCisj
ZGVmaW5lIEdFTjEyX09BUl9PQVNUQVRVUyBfTU1JTygweDI5NjgpCisKKy8qIEdlbjEyIE9BRyB1
bml0ICovCisjZGVmaW5lIEdFTjEyX09BR19PQUhFQURQVFIgX01NSU8oMHhkYjAwKQorI2RlZmlu
ZSAgR0VOMTJfT0FHX09BSEVBRFBUUl9NQVNLIDB4ZmZmZmZmYzAKKyNkZWZpbmUgR0VOMTJfT0FH
X09BVEFJTFBUUiBfTU1JTygweGRiMDQpCisjZGVmaW5lICBHRU4xMl9PQUdfT0FUQUlMUFRSX01B
U0sgMHhmZmZmZmZjMAorCisjZGVmaW5lIEdFTjEyX09BR19PQUJVRkZFUiAgX01NSU8oMHhkYjA4
KQorI2RlZmluZSAgR0VOMTJfT0FHX09BQlVGRkVSX0JVRkZFUl9TSVpFX01BU0sgICgweDcpCisj
ZGVmaW5lICBHRU4xMl9PQUdfT0FCVUZGRVJfQlVGRkVSX1NJWkVfU0hJRlQgKDMpCisjZGVmaW5l
ICBHRU4xMl9PQUdfT0FCVUZGRVJfTUVNT1JZX1NFTEVDVCAgICAgKDEgPDwgMCkgLyogMDogUFBH
VFQsIDE6IEdHVFQgKi8KKworI2RlZmluZSBHRU4xMl9PQUdfT0FHTEJDVFhDVFJMIF9NTUlPKDB4
MmIyOCkKKyNkZWZpbmUgIEdFTjEyX09BR19PQUdMQkNUWENUUkxfVElNRVJfUEVSSU9EX1NISUZU
IDIKKyNkZWZpbmUgIEdFTjEyX09BR19PQUdMQkNUWENUUkxfVElNRVJfRU5BQkxFICAgICAgICgx
IDw8IDEpCisjZGVmaW5lICBHRU4xMl9PQUdfT0FHTEJDVFhDVFJMX0NPVU5URVJfUkVTVU1FICAg
ICAoMSA8PCAwKQorCisjZGVmaW5lIEdFTjEyX09BR19PQUNPTlRST0wgX01NSU8oMHhkYWY0KQor
I2RlZmluZSAgR0VOMTJfT0FHX09BQ09OVFJPTF9PQV9DT1VOVEVSX0ZPUk1BVF9TSElGVCAyCisj
ZGVmaW5lICBHRU4xMl9PQUdfT0FDT05UUk9MX09BX0NPVU5URVJfRU5BQkxFICAgICAgICgxIDw8
IDApCisKKyNkZWZpbmUgR0VOMTJfT0FHX09BX0RFQlVHIF9NTUlPKDB4ZGFmOCkKKyNkZWZpbmUg
IEdFTjEyX09BR19PQV9ERUJVR19JTkNMVURFX0NMS19SQVRJTyAgICAgICAgICAoMSA8PCA2KQor
I2RlZmluZSAgR0VOMTJfT0FHX09BX0RFQlVHX0RJU0FCTEVfQ0xLX1JBVElPX1JFUE9SVFMgICgx
IDw8IDUpCisjZGVmaW5lICBHRU4xMl9PQUdfT0FfREVCVUdfRElTQUJMRV9HT18xXzBfUkVQT1JU
UyAgICAgKDEgPDwgMikKKyNkZWZpbmUgIEdFTjEyX09BR19PQV9ERUJVR19ESVNBQkxFX0NUWF9T
V0lUQ0hfUkVQT1JUUyAoMSA8PCAxKQorCisjZGVmaW5lIEdFTjEyX09BR19PQVNUQVRVUyBfTU1J
TygweGRhZmMpCisjZGVmaW5lICBHRU4xMl9PQUdfT0FTVEFUVVNfQ09VTlRFUl9PVkVSRkxPVyAo
MSA8PCAyKQorI2RlZmluZSAgR0VOMTJfT0FHX09BU1RBVFVTX0JVRkZFUl9PVkVSRkxPVyAgKDEg
PDwgMSkKKyNkZWZpbmUgIEdFTjEyX09BR19PQVNUQVRVU19SRVBPUlRfTE9TVCAgICAgICgxIDw8
IDApCisKIC8qCiAgKiBGbGV4aWJsZSwgQWdncmVnYXRlIEVVIENvdW50ZXIgUmVnaXN0ZXJzLgog
ICogTm90ZTogdGhlc2UgYXJlbid0IGNvbnRpZ3VvdXMKQEAgLTkyMCw2ICs5NTksMjYgQEAgc3Rh
dGljIGlubGluZSBib29sIGk5MTVfbW1pb19yZWdfdmFsaWQoaTkxNV9yZWdfdCByZWcpCiAjZGVm
aW5lIE9BUkVQT1JUVFJJRzhfTk9BX1NFTEVDVF82X1NISUZUICAgIDI0CiAjZGVmaW5lIE9BUkVQ
T1JUVFJJRzhfTk9BX1NFTEVDVF83X1NISUZUICAgIDI4CiAKKy8qIFNhbWUgbGF5b3V0IGFzIE9B
U1RBUlRUUklHWCAqLworI2RlZmluZSBHRU4xMl9PQUdfT0FTVEFSVFRSSUcxIF9NTUlPKDB4ZDkw
MCkKKyNkZWZpbmUgR0VOMTJfT0FHX09BU1RBUlRUUklHMiBfTU1JTygweGQ5MDQpCisjZGVmaW5l
IEdFTjEyX09BR19PQVNUQVJUVFJJRzMgX01NSU8oMHhkOTA4KQorI2RlZmluZSBHRU4xMl9PQUdf
T0FTVEFSVFRSSUc0IF9NTUlPKDB4ZDkwYykKKyNkZWZpbmUgR0VOMTJfT0FHX09BU1RBUlRUUklH
NSBfTU1JTygweGQ5MTApCisjZGVmaW5lIEdFTjEyX09BR19PQVNUQVJUVFJJRzYgX01NSU8oMHhk
OTE0KQorI2RlZmluZSBHRU4xMl9PQUdfT0FTVEFSVFRSSUc3IF9NTUlPKDB4ZDkxOCkKKyNkZWZp
bmUgR0VOMTJfT0FHX09BU1RBUlRUUklHOCBfTU1JTygweGQ5MWMpCisKKy8qIFNhbWUgbGF5b3V0
IGFzIE9BUkVQT1JUVFJJR1ggKi8KKyNkZWZpbmUgR0VOMTJfT0FHX09BUkVQT1JUVFJJRzEgX01N
SU8oMHhkOTIwKQorI2RlZmluZSBHRU4xMl9PQUdfT0FSRVBPUlRUUklHMiBfTU1JTygweGQ5MjQp
CisjZGVmaW5lIEdFTjEyX09BR19PQVJFUE9SVFRSSUczIF9NTUlPKDB4ZDkyOCkKKyNkZWZpbmUg
R0VOMTJfT0FHX09BUkVQT1JUVFJJRzQgX01NSU8oMHhkOTJjKQorI2RlZmluZSBHRU4xMl9PQUdf
T0FSRVBPUlRUUklHNSBfTU1JTygweGQ5MzApCisjZGVmaW5lIEdFTjEyX09BR19PQVJFUE9SVFRS
SUc2IF9NTUlPKDB4ZDkzNCkKKyNkZWZpbmUgR0VOMTJfT0FHX09BUkVQT1JUVFJJRzcgX01NSU8o
MHhkOTM4KQorI2RlZmluZSBHRU4xMl9PQUdfT0FSRVBPUlRUUklHOCBfTU1JTygweGQ5M2MpCisK
IC8qIENFQ1hfMCAqLwogI2RlZmluZSBPQUNFQ19DT01QQVJFX0xFU1NfT1JfRVFVQUwJNgogI2Rl
ZmluZSBPQUNFQ19DT01QQVJFX05PVF9FUVVBTAkJNQpAQCAtOTM2LDYgKzk5NSwxMCBAQCBzdGF0
aWMgaW5saW5lIGJvb2wgaTkxNV9tbWlvX3JlZ192YWxpZChpOTE1X3JlZ190IHJlZykKICNkZWZp
bmUgT0FDRUNfU0VMRUNUX1BSRVYJKDEgPDwgMTkpCiAjZGVmaW5lIE9BQ0VDX1NFTEVDVF9CT09M
RUFOCSgyIDw8IDE5KQogCisvKiAxMS1iaXQgYXJyYXkgMDogcGFzcy10aHJvdWdoLCAxOiBuZWdh
dGVkICovCisjZGVmaW5lIEdFTjEyX09BU0NFQ19ORUdBVEVfTUFTSyAgMHg3ZmYKKyNkZWZpbmUg
R0VOMTJfT0FTQ0VDX05FR0FURV9TSElGVCAyMQorCiAvKiBDRUNYXzEgKi8KICNkZWZpbmUgT0FD
RUNfTUFTS19NQVNLCQkgICAgMHhmZmZmCiAjZGVmaW5lIE9BQ0VDX0NPTlNJREVSQVRJT05TX01B
U0sgICAweGZmZmYKQEAgLTk1OCw2ICsxMDIxLDQyIEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpOTE1
X21taW9fcmVnX3ZhbGlkKGk5MTVfcmVnX3QgcmVnKQogI2RlZmluZSBPQUNFQzdfMCBfTU1JTygw
eDI3YTgpCiAjZGVmaW5lIE9BQ0VDN18xIF9NTUlPKDB4MjdhYykKIAorLyogU2FtZSBsYXlvdXQg
YXMgQ0VDWF9ZICovCisjZGVmaW5lIEdFTjEyX09BR19DRUMwXzAgX01NSU8oMHhkOTQwKQorI2Rl
ZmluZSBHRU4xMl9PQUdfQ0VDMF8xIF9NTUlPKDB4ZDk0NCkKKyNkZWZpbmUgR0VOMTJfT0FHX0NF
QzFfMCBfTU1JTygweGQ5NDgpCisjZGVmaW5lIEdFTjEyX09BR19DRUMxXzEgX01NSU8oMHhkOTRj
KQorI2RlZmluZSBHRU4xMl9PQUdfQ0VDMl8wIF9NTUlPKDB4ZDk1MCkKKyNkZWZpbmUgR0VOMTJf
T0FHX0NFQzJfMSBfTU1JTygweGQ5NTQpCisjZGVmaW5lIEdFTjEyX09BR19DRUMzXzAgX01NSU8o
MHhkOTU4KQorI2RlZmluZSBHRU4xMl9PQUdfQ0VDM18xIF9NTUlPKDB4ZDk1YykKKyNkZWZpbmUg
R0VOMTJfT0FHX0NFQzRfMCBfTU1JTygweGQ5NjApCisjZGVmaW5lIEdFTjEyX09BR19DRUM0XzEg
X01NSU8oMHhkOTY0KQorI2RlZmluZSBHRU4xMl9PQUdfQ0VDNV8wIF9NTUlPKDB4ZDk2OCkKKyNk
ZWZpbmUgR0VOMTJfT0FHX0NFQzVfMSBfTU1JTygweGQ5NmMpCisjZGVmaW5lIEdFTjEyX09BR19D
RUM2XzAgX01NSU8oMHhkOTcwKQorI2RlZmluZSBHRU4xMl9PQUdfQ0VDNl8xIF9NTUlPKDB4ZDk3
NCkKKyNkZWZpbmUgR0VOMTJfT0FHX0NFQzdfMCBfTU1JTygweGQ5NzgpCisjZGVmaW5lIEdFTjEy
X09BR19DRUM3XzEgX01NSU8oMHhkOTdjKQorCisvKiBTYW1lIGxheW91dCBhcyBDRUNYX1kgKyBu
ZWdhdGUgMTEtYml0IGFycmF5ICovCisjZGVmaW5lIEdFTjEyX09BR19TQ0VDMF8wIF9NTUlPKDB4
ZGMwMCkKKyNkZWZpbmUgR0VOMTJfT0FHX1NDRUMwXzEgX01NSU8oMHhkYzA0KQorI2RlZmluZSBH
RU4xMl9PQUdfU0NFQzFfMCBfTU1JTygweGRjMDgpCisjZGVmaW5lIEdFTjEyX09BR19TQ0VDMV8x
IF9NTUlPKDB4ZGMwYykKKyNkZWZpbmUgR0VOMTJfT0FHX1NDRUMyXzAgX01NSU8oMHhkYzEwKQor
I2RlZmluZSBHRU4xMl9PQUdfU0NFQzJfMSBfTU1JTygweGRjMTQpCisjZGVmaW5lIEdFTjEyX09B
R19TQ0VDM18wIF9NTUlPKDB4ZGMxOCkKKyNkZWZpbmUgR0VOMTJfT0FHX1NDRUMzXzEgX01NSU8o
MHhkYzFjKQorI2RlZmluZSBHRU4xMl9PQUdfU0NFQzRfMCBfTU1JTygweGRjMjApCisjZGVmaW5l
IEdFTjEyX09BR19TQ0VDNF8xIF9NTUlPKDB4ZGMyNCkKKyNkZWZpbmUgR0VOMTJfT0FHX1NDRUM1
XzAgX01NSU8oMHhkYzI4KQorI2RlZmluZSBHRU4xMl9PQUdfU0NFQzVfMSBfTU1JTygweGRjMmMp
CisjZGVmaW5lIEdFTjEyX09BR19TQ0VDNl8wIF9NTUlPKDB4ZGMzMCkKKyNkZWZpbmUgR0VOMTJf
T0FHX1NDRUM2XzEgX01NSU8oMHhkYzM0KQorI2RlZmluZSBHRU4xMl9PQUdfU0NFQzdfMCBfTU1J
TygweGRjMzgpCisjZGVmaW5lIEdFTjEyX09BR19TQ0VDN18xIF9NTUlPKDB4ZGMzYykKKwogLyog
T0EgcGVyZiBjb3VudGVycyAqLwogI2RlZmluZSBPQV9QRVJGQ05UMV9MTyAgICAgIF9NTUlPKDB4
OTFCOCkKICNkZWZpbmUgT0FfUEVSRkNOVDFfSEkgICAgICBfTU1JTygweDkxQkMpCkBAIC0xMDM4
LDYgKzExMzcsMTAgQEAgc3RhdGljIGlubGluZSBib29sIGk5MTVfbW1pb19yZWdfdmFsaWQoaTkx
NV9yZWdfdCByZWcpCiAjZGVmaW5lIE1JQ1JPX0JQM19DT1VOVF9TVEFUVVMyMwlfTU1JTygweDk4
MzgpCiAjZGVmaW5lIE1JQ1JPX0JQX0ZJUkVEX0FSTUVECQlfTU1JTygweDk4M0MpCiAKKyNkZWZp
bmUgR0VOMTJfT0FBX0RCR19SRUcgX01NSU8oMHhkYzQ0KQorI2RlZmluZSBHRU4xMl9PQUdfT0Ff
UEVTUyBfTU1JTygweDJiMmMpCisjZGVmaW5lIEdFTjEyX09BR19TUENUUl9DTkYgX01NSU8oMHhk
YzQwKQorCiAjZGVmaW5lIEdEVF9DSElDS0VOX0JJVFMgICAgX01NSU8oMHg5ODQwKQogI2RlZmlu
ZSAgIEdUX05PQV9FTkFCTEUJICAgIDB4MDAwMDAwODAKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvb2EvaTkxNV9vYV90Z2wuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L29hL2k5
MTVfb2FfdGdsLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5hMjlk
OTM3MDczNDUKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9vYS9pOTE1
X29hX3RnbC5jCkBAIC0wLDAgKzEsMTIxIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
TUlUCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTggSW50ZWwgQ29ycG9yYXRpb24KKyAqCisgKiBB
dXRvZ2VuZXJhdGVkIGZpbGUgYnkgR1BVIFRvcCA6IGh0dHBzOi8vZ2l0aHViLmNvbS9yaWIvZ3B1
dG9wCisgKiBETyBOT1QgRURJVCBtYW51YWxseSEKKyAqLworCisjaW5jbHVkZSA8bGludXgvc3lz
ZnMuaD4KKworI2luY2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiaTkxNV9vYV90Z2wuaCIK
Kworc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyBiX2NvdW50ZXJfY29uZmlnX3Rlc3Rf
b2FbXSA9IHsKKwl7IF9NTUlPKDB4RDkyMCksIDB4MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4RDkw
MCksIDB4MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4RDkwNCksIDB4RjA4MDAwMDAgfSwKKwl7IF9N
TUlPKDB4RDkxMCksIDB4MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4RDkxNCksIDB4RjA4MDAwMDAg
fSwKKwl7IF9NTUlPKDB4REM0MCksIDB4MDBGRjAwMDAgfSwKKwl7IF9NTUlPKDB4RDk0MCksIDB4
MDAwMDAwMDQgfSwKKwl7IF9NTUlPKDB4RDk0NCksIDB4MDAwMEZGRkYgfSwKKwl7IF9NTUlPKDB4
REMwMCksIDB4MDAwMDAwMDQgfSwKKwl7IF9NTUlPKDB4REMwNCksIDB4MDAwMEZGRkYgfSwKKwl7
IF9NTUlPKDB4RDk0OCksIDB4MDAwMDAwMDMgfSwKKwl7IF9NTUlPKDB4RDk0QyksIDB4MDAwMEZG
RkYgfSwKKwl7IF9NTUlPKDB4REMwOCksIDB4MDAwMDAwMDMgfSwKKwl7IF9NTUlPKDB4REMwQyks
IDB4MDAwMEZGRkYgfSwKKwl7IF9NTUlPKDB4RDk1MCksIDB4MDAwMDAwMDcgfSwKKwl7IF9NTUlP
KDB4RDk1NCksIDB4MDAwMEZGRkYgfSwKKwl7IF9NTUlPKDB4REMxMCksIDB4MDAwMDAwMDcgfSwK
Kwl7IF9NTUlPKDB4REMxNCksIDB4MDAwMEZGRkYgfSwKKwl7IF9NTUlPKDB4RDk1OCksIDB4MDAx
MDAwMDIgfSwKKwl7IF9NTUlPKDB4RDk1QyksIDB4MDAwMEZGRjcgfSwKKwl7IF9NTUlPKDB4REMx
OCksIDB4MDAxMDAwMDIgfSwKKwl7IF9NTUlPKDB4REMxQyksIDB4MDAwMEZGRjcgfSwKKwl7IF9N
TUlPKDB4RDk2MCksIDB4MDAxMDAwMDIgfSwKKwl7IF9NTUlPKDB4RDk2NCksIDB4MDAwMEZGQ0Yg
fSwKKwl7IF9NTUlPKDB4REMyMCksIDB4MDAxMDAwMDIgfSwKKwl7IF9NTUlPKDB4REMyNCksIDB4
MDAwMEZGQ0YgfSwKKwl7IF9NTUlPKDB4RDk2OCksIDB4MDAxMDAwODIgfSwKKwl7IF9NTUlPKDB4
RDk2QyksIDB4MDAwMEZGRUYgfSwKKwl7IF9NTUlPKDB4REMyOCksIDB4MDAxMDAwODIgfSwKKwl7
IF9NTUlPKDB4REMyQyksIDB4MDAwMEZGRUYgfSwKKwl7IF9NTUlPKDB4RDk3MCksIDB4MDAxMDAw
QzIgfSwKKwl7IF9NTUlPKDB4RDk3NCksIDB4MDAwMEZGRTcgfSwKKwl7IF9NTUlPKDB4REMzMCks
IDB4MDAxMDAwQzIgfSwKKwl7IF9NTUlPKDB4REMzNCksIDB4MDAwMEZGRTcgfSwKKwl7IF9NTUlP
KDB4RDk3OCksIDB4MDAxMDAwMDEgfSwKKwl7IF9NTUlPKDB4RDk3QyksIDB4MDAwMEZGRTcgfSwK
Kwl7IF9NTUlPKDB4REMzOCksIDB4MDAxMDAwMDEgfSwKKwl7IF9NTUlPKDB4REMzQyksIDB4MDAw
MEZGRTcgfSwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaTkxNV9vYV9yZWcgZmxleF9ldV9j
b25maWdfdGVzdF9vYVtdID0geworfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X29hX3Jl
ZyBtdXhfY29uZmlnX3Rlc3Rfb2FbXSA9IHsKKwl7IF9NTUlPKDB4MEQwNCksIDB4MDAwMDAyMDAg
fSwKKwl7IF9NTUlPKDB4OTg0MCksIDB4MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4NCksIDB4
MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MjgwRTAwMDAgfSwKKwl7IF9NTUlPKDB4
OTg4OCksIDB4MUUwRTAxNDcgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MTgwRTAwMDAgfSwKKwl7
IF9NTUlPKDB4OTg4OCksIDB4MTYwRTAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MUUwRjEw
MDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MUUxMDQwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCks
IDB4MkUwMjAxMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MkMwMzAwMDQgfSwKKwl7IF9NTUlP
KDB4OTg4OCksIDB4MzgwMDMwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MUUwQTgwMDAgfSwK
Kwl7IF9NTUlPKDB4OTg4NCksIDB4MDAwMDAwMDMgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4NDkx
MTAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4NUQxMDE0MDAgfSwKKwl7IF9NTUlPKDB4OTg4
OCksIDB4MUQxNDAwMjAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MUQxMTAzQTMgfSwKKwl7IF9N
TUlPKDB4OTg4OCksIDB4MDExMTAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4NjExMTEwMDAg
fSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MUYxMjgwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4
MTcxMDAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4NTUxMDA2MzAgfSwKKwl7IF9NTUlPKDB4
OTg4OCksIDB4NTcxMDAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4MzExMDAwMDAgfSwKKwl7
IF9NTUlPKDB4OTg4NCksIDB4MDAwMDAwMDMgfSwKKwl7IF9NTUlPKDB4OTg4OCksIDB4NjUxMDAw
MDIgfSwKKwl7IF9NTUlPKDB4OTg4NCksIDB4MDAwMDAwMDAgfSwKKwl7IF9NTUlPKDB4OTg4OCks
IDB4NDIwMDAwMDEgfSwKK307CisKK3N0YXRpYyBzc2l6ZV90CitzaG93X3Rlc3Rfb2FfaWQoc3Ry
dWN0IGRldmljZSAqa2Rldiwgc3RydWN0IGRldmljZV9hdHRyaWJ1dGUgKmF0dHIsIGNoYXIgKmJ1
ZikKK3sKKwlyZXR1cm4gc3ByaW50ZihidWYsICIxXG4iKTsKK30KKwordm9pZAoraTkxNV9wZXJm
X2xvYWRfdGVzdF9jb25maWdfdGdsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikK
K3sKKwlzdHJsY3B5KGRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLnV1aWQsCisJCSI4MGE4MzNm
MC0yNTA0LTQzMjEtODg5NC1lOTI3Nzg0NGNlN2IiLAorCQlzaXplb2YoZGV2X3ByaXYtPnBlcmYu
dGVzdF9jb25maWcudXVpZCkpOworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLmlkID0gMTsK
KworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLm11eF9yZWdzID0gbXV4X2NvbmZpZ190ZXN0
X29hOworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLm11eF9yZWdzX2xlbiA9IEFSUkFZX1NJ
WkUobXV4X2NvbmZpZ190ZXN0X29hKTsKKworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLmJf
Y291bnRlcl9yZWdzID0gYl9jb3VudGVyX2NvbmZpZ190ZXN0X29hOworCWRldl9wcml2LT5wZXJm
LnRlc3RfY29uZmlnLmJfY291bnRlcl9yZWdzX2xlbiA9IEFSUkFZX1NJWkUoYl9jb3VudGVyX2Nv
bmZpZ190ZXN0X29hKTsKKworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLmZsZXhfcmVncyA9
IGZsZXhfZXVfY29uZmlnX3Rlc3Rfb2E7CisJZGV2X3ByaXYtPnBlcmYudGVzdF9jb25maWcuZmxl
eF9yZWdzX2xlbiA9IEFSUkFZX1NJWkUoZmxleF9ldV9jb25maWdfdGVzdF9vYSk7CisKKwlkZXZf
cHJpdi0+cGVyZi50ZXN0X2NvbmZpZy5zeXNmc19tZXRyaWMubmFtZSA9ICI4MGE4MzNmMC0yNTA0
LTQzMjEtODg5NC1lOTI3Nzg0NGNlN2IiOworCWRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLnN5
c2ZzX21ldHJpYy5hdHRycyA9IGRldl9wcml2LT5wZXJmLnRlc3RfY29uZmlnLmF0dHJzOworCisJ
ZGV2X3ByaXYtPnBlcmYudGVzdF9jb25maWcuYXR0cnNbMF0gPSAmZGV2X3ByaXYtPnBlcmYudGVz
dF9jb25maWcuc3lzZnNfbWV0cmljX2lkLmF0dHI7CisKKwlkZXZfcHJpdi0+cGVyZi50ZXN0X2Nv
bmZpZy5zeXNmc19tZXRyaWNfaWQuYXR0ci5uYW1lID0gImlkIjsKKwlkZXZfcHJpdi0+cGVyZi50
ZXN0X2NvbmZpZy5zeXNmc19tZXRyaWNfaWQuYXR0ci5tb2RlID0gMDQ0NDsKKwlkZXZfcHJpdi0+
cGVyZi50ZXN0X2NvbmZpZy5zeXNmc19tZXRyaWNfaWQuc2hvdyA9IHNob3dfdGVzdF9vYV9pZDsK
K30KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L29hL2k5MTVfb2FfdGdsLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9vYS9pOTE1X29hX3RnbC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAwMDAwMC4uNGMyNWYwYmU4MjVjCi0tLSAvZGV2L251bGwKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvb2EvaTkxNV9vYV90Z2wuaApAQCAtMCwwICsxLDE2IEBACisvKiBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUICovCisvKgorICogQ29weXJpZ2h0IMKpIDIwMTgg
SW50ZWwgQ29ycG9yYXRpb24KKyAqCisgKiBBdXRvZ2VuZXJhdGVkIGZpbGUgYnkgR1BVIFRvcCA6
IGh0dHBzOi8vZ2l0aHViLmNvbS9yaWIvZ3B1dG9wCisgKiBETyBOT1QgRURJVCBtYW51YWxseSEK
KyAqLworCisjaWZuZGVmIF9fSTkxNV9PQV9UR0xfSF9fCisjZGVmaW5lIF9fSTkxNV9PQV9UR0xf
SF9fCisKK3N0cnVjdCBkcm1faTkxNV9wcml2YXRlOworCit2b2lkIGk5MTVfcGVyZl9sb2FkX3Rl
c3RfY29uZmlnX3RnbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOworCisjZW5k
aWYKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwt
Z2Z4

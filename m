Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 76DBE7EF67
	for <lists+intel-gfx@lfdr.de>; Fri,  2 Aug 2019 10:35:20 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B2A6F6ED55;
	Fri,  2 Aug 2019 08:35:18 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9DD706ED42
 for <intel-gfx@lists.freedesktop.org>; Fri,  2 Aug 2019 08:35:16 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17810841-1500050 
 for multiple; Fri, 02 Aug 2019 09:34:54 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  2 Aug 2019 09:34:53 +0100
Message-Id: <20190802083453.13668-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc0
In-Reply-To: <459d6860-f0e2-16ed-62ea-c860baac1970@linux.intel.com>
References: <459d6860-f0e2-16ed-62ea-c860baac1970@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2] drm/i915: Allow sharing the idle-barrier
 from other kernel requests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QnkgcGxhY2luZyBvdXIgaWRsZS1iYXJyaWVycyBpbiB0aGUgaTkxNV9hY3RpdmUgZmVuY2UgdHJl
ZSwgd2UgZXhwb3NlCnRob3NlIGZvciByZXVzZSBieSBvdGhlciBjb21wb25lbnRzIHRoYXQgYXJl
IGlzc3VpbmcgcmVxdWVzdHMgYWxvbmcgdGhlCmtlcm5lbF9jb250ZXh0LiBSZXVzaW5nIHRoZSBw
cm90by1iYXJyaWVyIGFjdGl2ZV9ub2RlIGlzIHBlcmZlY3RseSBmaW5lCmFzIHRoZSBuZXcgcmVx
dWVzdCBpbXBsaWVzIGEgY29udGV4dC1zd2l0Y2gsIGFuZCBzbyBhbiBvcHBvcnR1bmUgcG9pbnQK
dG8gcnVuIHRoZSBpZGxlLWJhcnJpZXIuIEhvd2V2ZXIsIHRoZSBwcm90by1iYXJyaWVyIGlzIG5v
dCBlcXVpdmFsZW50CnRvIGEgbm9ybWFsIGFjdGl2ZV9ub2RlIGFuZCBjYXJlIG11c3QgYmUgdGFr
ZW4gdG8gYXZvaWQgZGVyZWZlcmVuY2luZyB0aGUKRVJSX1BUUiB1c2VkIGFzIGl0cyByZXF1ZXN0
IG1hcmtlci4KCnYyOiBDb21tZW50IHRoZSBtb3JlIGVncmVnaW91cyBjaGVlawoKUmVwb3J0ZWQt
Ynk6IExpb25lbCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KRml4
ZXM6IGNlNDc2YzgwYjhiZiAoImRybS9pOTE1OiBLZWVwIGNvbnRleHRzIHBpbm5lZCB1bnRpbCBh
ZnRlciB0aGUgbmV4dCBrZXJuZWwgY29udGV4dCBzd2l0Y2giKQpGaXhlczogYTk4NzdkYTJkNjI5
ICgiZHJtL2k5MTUvb2E6IFJlY29uZmlndXJlIGNvbnRleHRzIG9uIHRoZSBmbHkiKQpTaWduZWQt
b2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IExpb25l
bCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KQ2M6IFR2cnRrbyBV
cnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfY29udGV4dC5jICAgICAgIHwgIDQwICsrLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfY29udGV4dC5oICAgICAgIHwgIDEzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfcG0uYyAgICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyAgICB8IDMxMCArKysrKysrKysrKysrKysrKysKIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmMgICAgICAgICAgICB8IDI2NSArKysrKysrKysr
KystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmggICAgICAgICAgICB8ICAg
MiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVfdHlwZXMuaCAgICAgIHwgICAy
ICstCiAuLi4vZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCAgfCAgIDMg
Ky0KIDggZmlsZXMgY2hhbmdlZCwgNTc0IGluc2VydGlvbnMoKyksIDYzIGRlbGV0aW9ucygtKQog
Y3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2NvbnRl
eHQuYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuYwppbmRleCBmMzA0NDFh
MTQwZjguLjM0YzhlMzdhNzNiOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfY29udGV4dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRl
eHQuYwpAQCAtMTYyLDIzICsxNjIsNDEgQEAgc3RhdGljIGludCBfX2ludGVsX2NvbnRleHRfYWN0
aXZlKHN0cnVjdCBpOTE1X2FjdGl2ZSAqYWN0aXZlKQogCWlmIChlcnIpCiAJCWdvdG8gZXJyX3Jp
bmc7CiAKKwlyZXR1cm4gMDsKKworZXJyX3Jpbmc6CisJaW50ZWxfcmluZ191bnBpbihjZS0+cmlu
Zyk7CitlcnJfcHV0OgorCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwlyZXR1cm4gZXJyOworfQor
CitpbnQgaW50ZWxfY29udGV4dF9hY3RpdmVfYWNxdWlyZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UpCit7CisJaW50IGVycjsKKworCWVyciA9IGk5MTVfYWN0aXZlX2FjcXVpcmUoJmNlLT5hY3Rp
dmUpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKIAkvKiBQcmVhbGxvY2F0ZSB0cmFja2lu
ZyBub2RlcyAqLwogCWlmICghaTkxNV9nZW1fY29udGV4dF9pc19rZXJuZWwoY2UtPmdlbV9jb250
ZXh0KSkgewogCQllcnIgPSBpOTE1X2FjdGl2ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIo
JmNlLT5hY3RpdmUsCiAJCQkJCQkJICAgICAgY2UtPmVuZ2luZSk7Ci0JCWlmIChlcnIpCi0JCQln
b3RvIGVycl9zdGF0ZTsKKwkJaWYgKGVycikgeworCQkJaTkxNV9hY3RpdmVfcmVsZWFzZSgmY2Ut
PmFjdGl2ZSk7CisJCQlyZXR1cm4gZXJyOworCQl9CiAJfQogCiAJcmV0dXJuIDA7Cit9CiAKLWVy
cl9zdGF0ZToKLQlfX2NvbnRleHRfdW5waW5fc3RhdGUoY2UtPnN0YXRlKTsKLWVycl9yaW5nOgot
CWludGVsX3JpbmdfdW5waW4oY2UtPnJpbmcpOwotZXJyX3B1dDoKLQlpbnRlbF9jb250ZXh0X3B1
dChjZSk7Ci0JcmV0dXJuIGVycjsKK3ZvaWQgaW50ZWxfY29udGV4dF9hY3RpdmVfcmVsZWFzZShz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJLyogTm9kZXMgcHJlYWxsb2NhdGVkIGluIGlu
dGVsX2NvbnRleHRfYWN0aXZlKCkgKi8KKwlpOTE1X2FjdGl2ZV9hY3F1aXJlX2JhcnJpZXIoJmNl
LT5hY3RpdmUpOworCWk5MTVfYWN0aXZlX3JlbGVhc2UoJmNlLT5hY3RpdmUpOwogfQogCiB2b2lk
CkBAIC0zMDEsMyArMzE5LDcgQEAgc3RydWN0IGk5MTVfcmVxdWVzdCAqaW50ZWxfY29udGV4dF9j
cmVhdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAKIAlyZXR1cm4gcnE7CiB9
CisKKyNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9TRUxGVEVTVCkKKyNpbmNsdWRlICJz
ZWxmdGVzdF9jb250ZXh0LmMiCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2NvbnRleHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Nv
bnRleHQuaAppbmRleCAyM2M3ZTRjMGNlN2MuLjA3Zjk5MjRkZTQ4ZiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaApAQCAtMTA0LDE3ICsxMDQsOCBAQCBzdGF0aWMgaW5s
aW5lIHZvaWQgaW50ZWxfY29udGV4dF9leGl0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAkJ
Y2UtPm9wcy0+ZXhpdChjZSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgaW50IGludGVsX2NvbnRleHRf
YWN0aXZlX2FjcXVpcmUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQotewotCXJldHVybiBpOTE1
X2FjdGl2ZV9hY3F1aXJlKCZjZS0+YWN0aXZlKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lkIGlu
dGVsX2NvbnRleHRfYWN0aXZlX3JlbGVhc2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQotewot
CS8qIE5vZGVzIHByZWFsbG9jYXRlZCBpbiBpbnRlbF9jb250ZXh0X2FjdGl2ZSgpICovCi0JaTkx
NV9hY3RpdmVfYWNxdWlyZV9iYXJyaWVyKCZjZS0+YWN0aXZlKTsKLQlpOTE1X2FjdGl2ZV9yZWxl
YXNlKCZjZS0+YWN0aXZlKTsKLX0KK2ludCBpbnRlbF9jb250ZXh0X2FjdGl2ZV9hY3F1aXJlKHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7Cit2b2lkIGludGVsX2NvbnRleHRfYWN0aXZlX3JlbGVh
c2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKTsKIAogc3RhdGljIGlubGluZSBzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqaW50ZWxfY29udGV4dF9nZXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
ewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYwppbmRleCBlNzRmYmYw
NGE2OGQuLmNlNTQwOTI0NzVkYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3BtLmMKQEAgLTkwLDcgKzkwLDcgQEAgc3RhdGljIGJvb2wgc3dpdGNoX3RvX2tlcm5lbF9j
b250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkvKiBDaGVjayBhZ2FpbiBv
biB0aGUgbmV4dCByZXRpcmVtZW50LiAqLwogCWVuZ2luZS0+d2FrZXJlZl9zZXJpYWwgPSBlbmdp
bmUtPnNlcmlhbCArIDE7CiAKLQlpOTE1X3JlcXVlc3RfYWRkX2JhcnJpZXJzKHJxKTsKKwlpOTE1
X3JlcXVlc3RfYWRkX2FjdGl2ZV9iYXJyaWVycyhycSk7CiAJX19pOTE1X3JlcXVlc3RfY29tbWl0
KHJxKTsKIAogCXJldHVybiBmYWxzZTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0
X2NvbnRleHQuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmQzOWI1
NTk0Y2IwMgotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0
ZXN0X2NvbnRleHQuYwpAQCAtMCwwICsxLDMxMCBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wCisgKgorICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRp
b24KKyAqLworCisjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5oIgorI2luY2x1ZGUgImludGVsX2d0
LmgiCisKKyNpbmNsdWRlICJnZW0vc2VsZnRlc3RzL21vY2tfY29udGV4dC5oIgorI2luY2x1ZGUg
InNlbGZ0ZXN0cy9pZ3RfZmx1c2hfdGVzdC5oIgorI2luY2x1ZGUgInNlbGZ0ZXN0cy9tb2NrX2Ry
bS5oIgorCitzdGF0aWMgaW50IHJlcXVlc3Rfc3luYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkK
K3sKKwlsb25nIHRpbWVvdXQ7CisJaW50IGVyciA9IDA7CisKKwlpOTE1X3JlcXVlc3RfZ2V0KHJx
KTsKKworCWk5MTVfcmVxdWVzdF9hZGQocnEpOworCXRpbWVvdXQgPSBpOTE1X3JlcXVlc3Rfd2Fp
dChycSwgMCwgSFogLyAxMCk7CisJaWYgKHRpbWVvdXQgPCAwKQorCQllcnIgPSB0aW1lb3V0Owor
CWVsc2UKKwkJaTkxNV9yZXF1ZXN0X3JldGlyZV91cHRvKHJxKTsKKworCWk5MTVfcmVxdWVzdF9w
dXQocnEpOworCisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGludCBjb250ZXh0X3N5bmMoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSBj
ZS0+cmluZy0+dGltZWxpbmU7CisJaW50IGVyciA9IDA7CisKKwlkbyB7CisJCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxOworCQlsb25nIHRpbWVvdXQ7CisKKwkJcmN1X3JlYWRfbG9jaygpOworCQly
cSA9IHJjdV9kZXJlZmVyZW5jZSh0bC0+bGFzdF9yZXF1ZXN0LnJlcXVlc3QpOworCQlpZiAocnEp
CisJCQlycSA9IGk5MTVfcmVxdWVzdF9nZXRfcmN1KHJxKTsKKwkJcmN1X3JlYWRfdW5sb2NrKCk7
CisJCWlmICghcnEpCisJCQlicmVhazsKKworCQl0aW1lb3V0ID0gaTkxNV9yZXF1ZXN0X3dhaXQo
cnEsIDAsIEhaIC8gMTApOworCQlpZiAodGltZW91dCA8IDApCisJCQllcnIgPSB0aW1lb3V0Owor
CQllbHNlCisJCQlpOTE1X3JlcXVlc3RfcmV0aXJlX3VwdG8ocnEpOworCisJCWk5MTVfcmVxdWVz
dF9wdXQocnEpOworCX0gd2hpbGUgKCFlcnIpOworCisJcmV0dXJuIGVycjsKK30KKworc3RhdGlj
IGludCBfX2xpdmVfYWN0aXZlX2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LAorCQkJCSBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqZml4bWUpCit7CisJc3RydWN0IGludGVs
X2NvbnRleHQgKmNlOworCWludCBwYXNzOworCWludCBlcnI7CisKKwkvKgorCSAqIFdlIGtlZXAg
YWN0aXZlIGNvbnRleHRzIGFsaXZlIHVudGlsIGFmdGVyIGEgc3Vic2VxdWVudCBjb250ZXh0CisJ
ICogc3dpdGNoIGFzIHRoZSBmaW5hbCB3cml0ZSBmcm9tIHRoZSBjb250ZXh0LXNhdmUgd2lsbCBi
ZSBhZnRlcgorCSAqIHdlIHJldGlyZSB0aGUgZmluYWwgcmVxdWVzdC4gV2UgdHJhY2sgd2hlbiB3
ZSB1bnBpbiB0aGUgY29udGV4dCwKKwkgKiB1bmRlciB0aGUgcHJlc3VtcHRpb24gdGhhdCB0aGUg
ZmluYWwgcGluIGlzIGZyb20gdGhlIGxhc3QgcmVxdWVzdCwKKwkgKiBhbmQgaW5zdGVhZCBvZiBp
bW1lZGlhdGVseSB1bnBpbm5pbmcgdGhlIGNvbnRleHQsIHdlIGFkZCBhIHRhc2sKKwkgKiB0byB1
bnBpbiB0aGUgY29udGV4dCBmcm9tIHRoZSBuZXh0IGlkbGUtYmFycmllci4KKwkgKgorCSAqIFRo
aXMgdGVzdCBtYWtlcyBzdXJlIHRoYXQgdGhlIGNvbnRleHQgaXMga2VwdCBhbGl2ZSB1bnRpbCBh
CisJICogc3Vic2VxdWVudCBpZGxlLWJhcnJpZXIgKGVtaXR0ZWQgd2hlbiB0aGUgZW5naW5lIHdh
a2VyZWYgaGl0cyAwCisJICogd2l0aCBubyBtb3JlIG91dHN0YW5kaW5nIHJlcXVlc3RzKS4KKwkg
Ki8KKworCWlmIChpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoZW5naW5lKSkgeworCQlwcl9lcnIo
IiVzIGlzIGF3YWtlIGJlZm9yZSBzdGFydGluZyAlcyFcbiIsCisJCSAgICAgICBlbmdpbmUtPm5h
bWUsIF9fZnVuY19fKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJY2UgPSBpbnRlbF9jb250
ZXh0X2NyZWF0ZShmaXhtZSwgZW5naW5lKTsKKwlpZiAoIWNlKQorCQlyZXR1cm4gLUVOT01FTTsK
KworCWZvciAocGFzcyA9IDA7IHBhc3MgPD0gMjsgcGFzcysrKSB7CisJCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxOworCisJCXJxID0gaW50ZWxfY29udGV4dF9jcmVhdGVfcmVxdWVzdChjZSk7CisJ
CWlmIChJU19FUlIocnEpKSB7CisJCQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJCWdvdG8gZXJyOwor
CQl9CisKKwkJZXJyID0gcmVxdWVzdF9zeW5jKHJxKTsKKwkJaWYgKGVycikKKwkJCWdvdG8gZXJy
OworCisJCS8qIENvbnRleHQgd2lsbCBiZSBrZXB0IGFjdGl2ZSB1bnRpbCBhZnRlciBhbiBpZGxl
LWJhcnJpZXIuICovCisJCWlmIChpOTE1X2FjdGl2ZV9pc19pZGxlKCZjZS0+YWN0aXZlKSkgewor
CQkJcHJfZXJyKCJjb250ZXh0IGlzIG5vdCBhY3RpdmU7IGV4cGVjdGVkIGlkbGUtYmFycmllciAo
JXMgcGFzcyAlZClcbiIsCisJCQkgICAgICAgZW5naW5lLT5uYW1lLCBwYXNzKTsKKwkJCWVyciA9
IC1FSU5WQUw7CisJCQlnb3RvIGVycjsKKwkJfQorCisJCWlmICghaW50ZWxfZW5naW5lX3BtX2lz
X2F3YWtlKGVuZ2luZSkpIHsKKwkJCXByX2VycigiJXMgaXMgYXNsZWVwIGJlZm9yZSBpZGxlLWJh
cnJpZXJcbiIsCisJCQkgICAgICAgZW5naW5lLT5uYW1lKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJ
CQlnb3RvIGVycjsKKwkJfQorCX0KKworCS8qIE5vdyBtYWtlIHN1cmUgb3VyIGlkbGUtYmFycmll
cnMgYXJlIGZsdXNoZWQgKi8KKwllcnIgPSBjb250ZXh0X3N5bmMoZW5naW5lLT5rZXJuZWxfY29u
dGV4dCk7CisJaWYgKGVycikKKwkJZ290byBlcnI7CisKKwlpZiAoIWk5MTVfYWN0aXZlX2lzX2lk
bGUoJmNlLT5hY3RpdmUpKSB7CisJCXByX2VycigiY29udGV4dCBpcyBzdGlsbCBhY3RpdmUhIik7
CisJCWVyciA9IC1FSU5WQUw7CisJfQorCisJaWYgKGludGVsX2VuZ2luZV9wbV9pc19hd2FrZShl
bmdpbmUpKSB7CisJCXN0cnVjdCBkcm1fcHJpbnRlciBwID0gZHJtX2RlYnVnX3ByaW50ZXIoX19m
dW5jX18pOworCisJCWludGVsX2VuZ2luZV9kdW1wKGVuZ2luZSwgJnAsCisJCQkJICAiJXMgaXMg
c3RpbGwgYXdha2UgYWZ0ZXIgaWRsZS1iYXJyaWVyc1xuIiwKKwkJCQkgIGVuZ2luZS0+bmFtZSk7
CisJCUdFTV9UUkFDRV9EVU1QKCk7CisKKwkJZXJyID0gLUVJTlZBTDsKKwkJZ290byBlcnI7CisJ
fQorCitlcnI6CisJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCXJldHVybiBlcnI7Cit9CisKK3N0
YXRpYyBpbnQgbGl2ZV9hY3RpdmVfY29udGV4dCh2b2lkICphcmcpCit7CisJc3RydWN0IGludGVs
X2d0ICpndCA9IGFyZzsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgKmZpeG1lOworCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0
cnVjdCBkcm1fZmlsZSAqZmlsZTsKKwlpbnQgZXJyID0gMDsKKworCWZpbGUgPSBtb2NrX2ZpbGUo
Z3QtPmk5MTUpOworCWlmIChJU19FUlIoZmlsZSkpCisJCXJldHVybiBQVFJfRVJSKGZpbGUpOwor
CisJbXV0ZXhfbG9jaygmZ3QtPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJZml4bWUgPSBs
aXZlX2NvbnRleHQoZ3QtPmk5MTUsIGZpbGUpOworCWlmICghZml4bWUpIHsKKwkJZXJyID0gLUVO
T01FTTsKKwkJZ290byB1bmxvY2s7CisJfQorCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3Qt
Pmk5MTUsIGlkKSB7CisJCWVyciA9IF9fbGl2ZV9hY3RpdmVfY29udGV4dChlbmdpbmUsIGZpeG1l
KTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCisJCWVyciA9IGlndF9mbHVzaF90ZXN0KGd0LT5p
OTE1LCBJOTE1X1dBSVRfTE9DS0VEKTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCX0KKwordW5s
b2NrOgorCW11dGV4X3VubG9jaygmZ3QtPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCW1vY2tf
ZmlsZV9mcmVlKGd0LT5pOTE1LCBmaWxlKTsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50
IF9fcmVtb3RlX3N5bmMoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqcmVtb3RlKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCWludCBlcnI7CisK
KwllcnIgPSBpbnRlbF9jb250ZXh0X3BpbihyZW1vdGUpOworCWlmIChlcnIpCisJCXJldHVybiBl
cnI7CisKKwlycSA9IGludGVsX2NvbnRleHRfY3JlYXRlX3JlcXVlc3QoY2UpOworCWlmIChJU19F
UlIocnEpKSB7CisJCWVyciA9IFBUUl9FUlIocnEpOworCQlnb3RvIHVucGluOworCX0KKworCWVy
ciA9IGludGVsX2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVxdWVzdChyZW1vdGUsIHJxKTsKKwlp
ZiAoZXJyKSB7CisJCWk5MTVfcmVxdWVzdF9hZGQocnEpOworCQlnb3RvIHVucGluOworCX0KKwor
CWVyciA9IHJlcXVlc3Rfc3luYyhycSk7CisKK3VucGluOgorCWludGVsX2NvbnRleHRfdW5waW4o
cmVtb3RlKTsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IF9fbGl2ZV9yZW1vdGVfY29u
dGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCQkJIHN0cnVjdCBpOTE1X2dl
bV9jb250ZXh0ICpmaXhtZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqbG9jYWwsICpyZW1v
dGU7CisJaW50IHBhc3M7CisJaW50IGVycjsKKworCS8qCisJICogQ2hlY2sgdGhhdCBvdXIgaWRs
ZSBiYXJyaWVycyBkbyBub3QgaW50ZXJmZXJlIHdpdGggbm9ybWFsCisJICogYWN0aXZpdHkgdHJh
Y2tpbmcuIEluIHBhcnRpY3VsYXIsIGNoZWNrIHRoYXQgb3BlcmF0aW5nCisJICogb24gdGhlIGNv
bnRleHQgaW1hZ2UgcmVtb3RlbHkgKGludGVsX2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVxdWVz
dCksCisJICogd2hpY2ggaW5zZXJ0cyBmb3JlaWduIGZlbmNlcyBpbnRvIGludGVsX2NvbnRleHQu
YWN0aXZlLCBkb2VzIG5vdAorCSAqIGNsb2JiZXIgdGhlIGlkbGUtYmFycmllci4KKwkgKi8KKwor
CXJlbW90ZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGZpeG1lLCBlbmdpbmUpOworCWlmICghcmVt
b3RlKQorCQlyZXR1cm4gLUVOT01FTTsKKworCWxvY2FsID0gaW50ZWxfY29udGV4dF9jcmVhdGUo
Zml4bWUsIGVuZ2luZSk7CisJaWYgKCFsb2NhbCkgeworCQllcnIgPSAtRU5PTUVNOworCQlnb3Rv
IGVycl9yZW1vdGU7CisJfQorCisJZm9yIChwYXNzID0gMDsgcGFzcyA8PSAyOyBwYXNzKyspIHsK
KwkJZXJyID0gX19yZW1vdGVfc3luYyhsb2NhbCwgcmVtb3RlKTsKKwkJaWYgKGVycikKKwkJCWJy
ZWFrOworCisJCWVyciA9IF9fcmVtb3RlX3N5bmMoZW5naW5lLT5rZXJuZWxfY29udGV4dCwgcmVt
b3RlKTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCisJCWlmIChpOTE1X2FjdGl2ZV9pc19pZGxl
KCZyZW1vdGUtPmFjdGl2ZSkpIHsKKwkJCXByX2VycigicmVtb3RlIGNvbnRleHQgaXMgbm90IGFj
dGl2ZTsgZXhwZWN0ZWQgaWRsZS1iYXJyaWVyICglcyBwYXNzICVkKVxuIiwKKwkJCSAgICAgICBl
bmdpbmUtPm5hbWUsIHBhc3MpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWJyZWFrOworCQl9CisJ
fQorCisJaW50ZWxfY29udGV4dF9wdXQobG9jYWwpOworZXJyX3JlbW90ZToKKwlpbnRlbF9jb250
ZXh0X3B1dChyZW1vdGUpOworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyBpbnQgbGl2ZV9yZW1v
dGVfY29udGV4dCh2b2lkICphcmcpCit7CisJc3RydWN0IGludGVsX2d0ICpndCA9IGFyZzsKKwlz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmZpeG1lOworCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXN0cnVjdCBkcm1fZmlsZSAqZmls
ZTsKKwlpbnQgZXJyID0gMDsKKworCWZpbGUgPSBtb2NrX2ZpbGUoZ3QtPmk5MTUpOworCWlmIChJ
U19FUlIoZmlsZSkpCisJCXJldHVybiBQVFJfRVJSKGZpbGUpOworCisJbXV0ZXhfbG9jaygmZ3Qt
Pmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJZml4bWUgPSBsaXZlX2NvbnRleHQoZ3QtPmk5
MTUsIGZpbGUpOworCWlmICghZml4bWUpIHsKKwkJZXJyID0gLUVOT01FTTsKKwkJZ290byB1bmxv
Y2s7CisJfQorCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QtPmk5MTUsIGlkKSB7CisJCWVy
ciA9IF9fbGl2ZV9yZW1vdGVfY29udGV4dChlbmdpbmUsIGZpeG1lKTsKKwkJaWYgKGVycikKKwkJ
CWJyZWFrOworCisJCWVyciA9IGlndF9mbHVzaF90ZXN0KGd0LT5pOTE1LCBJOTE1X1dBSVRfTE9D
S0VEKTsKKwkJaWYgKGVycikKKwkJCWJyZWFrOworCX0KKwordW5sb2NrOgorCW11dGV4X3VubG9j
aygmZ3QtPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCW1vY2tfZmlsZV9mcmVlKGd0LT5pOTE1
LCBmaWxlKTsKKwlyZXR1cm4gZXJyOworfQorCitpbnQgaW50ZWxfY29udGV4dF9saXZlX3NlbGZ0
ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK3sKKwlzdGF0aWMgY29uc3Qgc3Ry
dWN0IGk5MTVfc3VidGVzdCB0ZXN0c1tdID0geworCQlTVUJURVNUKGxpdmVfYWN0aXZlX2NvbnRl
eHQpLAorCQlTVUJURVNUKGxpdmVfcmVtb3RlX2NvbnRleHQpLAorCX07CisJc3RydWN0IGludGVs
X2d0ICpndCA9ICZpOTE1LT5ndDsKKworCWlmIChpbnRlbF9ndF9pc193ZWRnZWQoZ3QpKQorCQly
ZXR1cm4gMDsKKworCXJldHVybiBpbnRlbF9ndF9saXZlX3N1YnRlc3RzKHRlc3RzLCBndCk7Cit9
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYwppbmRleCBkMzJkYjhhNGRiNWMuLmYxYzUwYmRi
MGU4NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZS5jCkBAIC0zMyw2ICszMywzOCBAQCBz
dHJ1Y3QgYWN0aXZlX25vZGUgewogCXU2NCB0aW1lbGluZTsKIH07CiAKK3N0YXRpYyBpbmxpbmUg
c3RydWN0IGFjdGl2ZV9ub2RlICoKK25vZGVfZnJvbV9hY3RpdmUoc3RydWN0IGk5MTVfYWN0aXZl
X3JlcXVlc3QgKmFjdGl2ZSkKK3sKKwlyZXR1cm4gY29udGFpbmVyX29mKGFjdGl2ZSwgc3RydWN0
IGFjdGl2ZV9ub2RlLCBiYXNlKTsKK30KKworI2RlZmluZSB0YWtlX3ByZWFsbG9jYXRlZF9iYXJy
aWVycyh4KSBsbGlzdF9kZWxfYWxsKCYoeCktPnByZWFsbG9jYXRlZF9iYXJyaWVycykKKworc3Rh
dGljIGlubGluZSBib29sIGlzX2JhcnJpZXIoY29uc3Qgc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVl
c3QgKmFjdGl2ZSkKK3sKKwlyZXR1cm4gSVNfRVJSKHJjdV9hY2Nlc3NfcG9pbnRlcihhY3RpdmUt
PnJlcXVlc3QpKTsKK30KKworc3RhdGljIGlubGluZSBzdHJ1Y3QgbGxpc3Rfbm9kZSAqYmFycmll
cl90b19sbChzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGUpCit7CisJR0VNX0JVR19PTighaXNfYmFy
cmllcigmbm9kZS0+YmFzZSkpOworCXJldHVybiAoc3RydWN0IGxsaXN0X25vZGUgKikmbm9kZS0+
YmFzZS5saW5rOworfQorCitzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKgor
YmFycmllcl90b19lbmdpbmUoc3RydWN0IGFjdGl2ZV9ub2RlICpub2RlKQoreworCUdFTV9CVUdf
T04oIWlzX2JhcnJpZXIoJm5vZGUtPmJhc2UpKTsKKwlyZXR1cm4gKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKilub2RlLT5iYXNlLmxpbmsucHJldjsKK30KKworc3RhdGljIGlubGluZSBzdHJ1Y3Qg
YWN0aXZlX25vZGUgKmJhcnJpZXJfZnJvbV9sbChzdHJ1Y3QgbGxpc3Rfbm9kZSAqeCkKK3sKKwly
ZXR1cm4gY29udGFpbmVyX29mKChzdHJ1Y3QgbGlzdF9oZWFkICopeCwKKwkJCSAgICBzdHJ1Y3Qg
YWN0aXZlX25vZGUsIGJhc2UubGluayk7Cit9CisKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1f
STkxNV9ERUJVR19HRU0pICYmIElTX0VOQUJMRUQoQ09ORklHX0RFQlVHX09CSkVDVFMpCiAKIHN0
YXRpYyB2b2lkICphY3RpdmVfZGVidWdfaGludCh2b2lkICphZGRyKQpAQCAtMTI3LDcgKzE1OSw3
IEBAIGFjdGl2ZV9yZXRpcmUoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiBzdGF0aWMgdm9pZAog
bm9kZV9yZXRpcmUoc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgKmJhc2UsIHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxKQogewotCWFjdGl2ZV9yZXRpcmUoY29udGFpbmVyX29mKGJhc2UsIHN0cnVj
dCBhY3RpdmVfbm9kZSwgYmFzZSktPnJlZik7CisJYWN0aXZlX3JldGlyZShub2RlX2Zyb21fYWN0
aXZlKGJhc2UpLT5yZWYpOwogfQogCiBzdGF0aWMgc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3Qg
KgpAQCAtMTg0LDYgKzIxNiw3IEBAIGFjdGl2ZV9pbnN0YW5jZShzdHJ1Y3QgaTkxNV9hY3RpdmUg
KnJlZiwgdTY0IGlkeCkKIAlyZWYtPmNhY2hlID0gbm9kZTsKIAltdXRleF91bmxvY2soJnJlZi0+
bXV0ZXgpOwogCisJQlVJTERfQlVHX09OKG9mZnNldG9mKHR5cGVvZigqbm9kZSksIGJhc2UpKTsK
IAlyZXR1cm4gJm5vZGUtPmJhc2U7CiB9CiAKQEAgLTIwMSwxMSArMjM0LDM3IEBAIHZvaWQgX19p
OTE1X2FjdGl2ZV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCXJlZi0+cmV0
aXJlID0gcmV0aXJlOwogCXJlZi0+dHJlZSA9IFJCX1JPT1Q7CiAJcmVmLT5jYWNoZSA9IE5VTEw7
Ci0JaW5pdF9sbGlzdF9oZWFkKCZyZWYtPmJhcnJpZXJzKTsKKwlpbml0X2xsaXN0X2hlYWQoJnJl
Zi0+cHJlYWxsb2NhdGVkX2JhcnJpZXJzKTsKIAlhdG9taWNfc2V0KCZyZWYtPmNvdW50LCAwKTsK
IAlfX211dGV4X2luaXQoJnJlZi0+bXV0ZXgsICJpOTE1X2FjdGl2ZSIsIGtleSk7CiB9CiAKK3N0
YXRpYyBib29sIF9fYWN0aXZlX2RlbF9iYXJyaWVyKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLAor
CQkJCSBzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGUpCit7CisJc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lID0gYmFycmllcl90b19lbmdpbmUobm9kZSk7CisJc3RydWN0IGxsaXN0X25vZGUg
KmhlYWQgPSBOVUxMLCAqdGFpbCA9IE5VTEw7CisJc3RydWN0IGxsaXN0X25vZGUgKnBvcywgKm5l
eHQ7CisKKwlHRU1fQlVHX09OKG5vZGUtPnRpbWVsaW5lICE9IGVuZ2luZS0+a2VybmVsX2NvbnRl
eHQtPnJpbmctPnRpbWVsaW5lLT5mZW5jZV9jb250ZXh0KTsKKworCWxsaXN0X2Zvcl9lYWNoX3Nh
ZmUocG9zLCBuZXh0LCBsbGlzdF9kZWxfYWxsKCZlbmdpbmUtPmJhcnJpZXJfdGFza3MpKSB7CisJ
CWlmIChub2RlID09IGJhcnJpZXJfZnJvbV9sbChwb3MpKSB7CisJCQlub2RlID0gTlVMTDsKKwkJ
CWNvbnRpbnVlOworCQl9CisKKwkJcG9zLT5uZXh0ID0gaGVhZDsKKwkJaGVhZCA9IHBvczsKKwkJ
aWYgKCF0YWlsKQorCQkJdGFpbCA9IHBvczsKKwl9CisJaWYgKGhlYWQpCisJCWxsaXN0X2FkZF9i
YXRjaChoZWFkLCB0YWlsLCAmZW5naW5lLT5iYXJyaWVyX3Rhc2tzKTsKKworCXJldHVybiAhbm9k
ZTsKK30KKwogaW50IGk5MTVfYWN0aXZlX3JlZihzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZiwKIAkJ
ICAgIHU2NCB0aW1lbGluZSwKIAkJICAgIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQpAQCAtMjI0
LDggKzI4MywyMCBAQCBpbnQgaTkxNV9hY3RpdmVfcmVmKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVm
LAogCQlnb3RvIG91dDsKIAl9CiAKLQlpZiAoIWk5MTVfYWN0aXZlX3JlcXVlc3RfaXNzZXQoYWN0
aXZlKSkKLQkJYXRvbWljX2luYygmcmVmLT5jb3VudCk7CisJaWYgKGlzX2JhcnJpZXIoYWN0aXZl
KSkgeyAvKiBwcm90by1ub2RlIHVzZWQgYnkgb3VyIGlkbGUgYmFycmllciAqLworCQkvKgorCQkg
KiBUaGlzIHJlcXVlc3QgaXMgb24gdGhlIGtlcm5lbF9jb250ZXh0IHRpbWVsaW5lLCBhbmQgc28K
KwkJICogd2UgY2FuIHVzZSBpdCB0byBzdWJzdGl0dXRlIGZvciB0aGUgcGVuZGluZyBpZGxlLWJh
cnJlcgorCQkgKiByZXF1ZXN0IHRoYXQgd2Ugd2FudCB0byBlbWl0IG9uIHRoZSBrZXJuZWxfY29u
dGV4dC4KKwkJICovCisJCV9fYWN0aXZlX2RlbF9iYXJyaWVyKHJlZiwgbm9kZV9mcm9tX2FjdGl2
ZShhY3RpdmUpKTsKKwkJUkNVX0lOSVRfUE9JTlRFUihhY3RpdmUtPnJlcXVlc3QsIE5VTEwpOwor
CQlJTklUX0xJU1RfSEVBRCgmYWN0aXZlLT5saW5rKTsKKwl9IGVsc2UgeworCQlpZiAoIWk5MTVf
YWN0aXZlX3JlcXVlc3RfaXNzZXQoYWN0aXZlKSkKKwkJCWF0b21pY19pbmMoJnJlZi0+Y291bnQp
OworCX0KKwlHRU1fQlVHX09OKCFhdG9taWNfcmVhZCgmcmVmLT5jb3VudCkpOwogCV9faTkxNV9h
Y3RpdmVfcmVxdWVzdF9zZXQoYWN0aXZlLCBycSk7CiAKIG91dDoKQEAgLTMxMiw2ICszODMsMTEg
QEAgaW50IGk5MTVfYWN0aXZlX3dhaXQoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiAJfQogCiAJ
cmJ0cmVlX3Bvc3RvcmRlcl9mb3JfZWFjaF9lbnRyeV9zYWZlKGl0LCBuLCAmcmVmLT50cmVlLCBu
b2RlKSB7CisJCWlmIChpc19iYXJyaWVyKCZpdC0+YmFzZSkpIHsgLyogdW5jb25uZWN0ZWQgaWRs
ZS1iYXJyaWVyICovCisJCQllcnIgPSAtRUJVU1k7CisJCQlicmVhazsKKwkJfQorCiAJCWVyciA9
IGk5MTVfYWN0aXZlX3JlcXVlc3RfcmV0aXJlKCZpdC0+YmFzZSwgQktMKHJlZikpOwogCQlpZiAo
ZXJyKQogCQkJYnJlYWs7CkBAIC0zNzQsNiArNDUwLDkyIEBAIHZvaWQgaTkxNV9hY3RpdmVfZmlu
aShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZikKIH0KICNlbmRpZgogCitzdGF0aWMgaW5saW5lIGJv
b2wgaXNfaWRsZV9iYXJyaWVyKHN0cnVjdCBhY3RpdmVfbm9kZSAqbm9kZSwgdTY0IGlkeCkKK3sK
KwlyZXR1cm4gbm9kZS0+dGltZWxpbmUgPT0gaWR4ICYmICFpOTE1X2FjdGl2ZV9yZXF1ZXN0X2lz
c2V0KCZub2RlLT5iYXNlKTsKK30KKworc3RhdGljIHN0cnVjdCBhY3RpdmVfbm9kZSAqcmV1c2Vf
aWRsZV9iYXJyaWVyKHN0cnVjdCBpOTE1X2FjdGl2ZSAqcmVmLCB1NjQgaWR4KQoreworCXN0cnVj
dCByYl9ub2RlICpwcmV2LCAqcDsKKworCWlmIChSQl9FTVBUWV9ST09UKCZyZWYtPnRyZWUpKQor
CQlyZXR1cm4gTlVMTDsKKworCW11dGV4X2xvY2soJnJlZi0+bXV0ZXgpOworCUdFTV9CVUdfT04o
aTkxNV9hY3RpdmVfaXNfaWRsZShyZWYpKTsKKworCS8qCisJICogVHJ5IHRvIHJldXNlIGFueSBl
eGlzdGluZyBiYXJyaWVyIG5vZGVzIGFscmVhZHkgYWxsb2NhdGVkIGZvciB0aGlzCisJICogaTkx
NV9hY3RpdmUsIGR1ZSB0byBvdmVybGFwcGluZyBhY3RpdmUgcGhhc2VzIHRoZXJlIGlzIGxpa2Vs
eSBhCisJICogbm9kZSBrZXB0IGFsaXZlIChhcyB3ZSByZXVzZSBiZWZvcmUgcGFya2luZykuIFdl
IHByZWZlciB0byByZXVzZQorCSAqIGNvbXBsZXRlbHkgaWRsZSBiYXJyaWVycyAobGVzcyBoYXNz
bGUgaW4gbWFuaXB1bGF0aW5nIHRoZSBsbGlzdHMpLAorCSAqIGJ1dCBvdGhlcndpc2UgYW55IHdp
bGwgZG8uCisJICovCisJaWYgKHJlZi0+Y2FjaGUgJiYgaXNfaWRsZV9iYXJyaWVyKHJlZi0+Y2Fj
aGUsIGlkeCkpIHsKKwkJcCA9ICZyZWYtPmNhY2hlLT5ub2RlOworCQlnb3RvIG1hdGNoOworCX0K
KworCXByZXYgPSBOVUxMOworCXAgPSByZWYtPnRyZWUucmJfbm9kZTsKKwl3aGlsZSAocCkgewor
CQlzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGUgPQorCQkJcmJfZW50cnkocCwgc3RydWN0IGFjdGl2
ZV9ub2RlLCBub2RlKTsKKworCQlpZiAoaXNfaWRsZV9iYXJyaWVyKG5vZGUsIGlkeCkpCisJCQln
b3RvIG1hdGNoOworCisJCXByZXYgPSBwOworCQlpZiAobm9kZS0+dGltZWxpbmUgPCBpZHgpCisJ
CQlwID0gcC0+cmJfcmlnaHQ7CisJCWVsc2UKKwkJCXAgPSBwLT5yYl9sZWZ0OworCX0KKworCS8q
CisJICogTm8gcXVpY2sgbWF0Y2gsIGJ1dCB3ZSBkaWQgZmluZCB0aGUgbGVmdG1vc3QgcmJfbm9k
ZSBmb3IgdGhlCisJICoga2VybmVsX2NvbnRleHQuIFdhbGsgdGhlIHJiX3RyZWUgaW4tb3JkZXIg
dG8gc2VlIGlmIHRoZXJlIHdlcmUKKwkgKiBhbnkgaWRsZS1iYXJyaWVycyBvbiB0aGlzIHRpbWVs
aW5lIHRoYXQgd2UgbWlzc2VkLCBvciBqdXN0IHVzZQorCSAqIHRoZSBmaXJzdCBwZW5kaW5nIGJh
cnJpZXIuCisJICovCisJZm9yIChwID0gcHJldjsgcDsgcCA9IHJiX25leHQocCkpIHsKKwkJc3Ry
dWN0IGFjdGl2ZV9ub2RlICpub2RlID0KKwkJCXJiX2VudHJ5KHAsIHN0cnVjdCBhY3RpdmVfbm9k
ZSwgbm9kZSk7CisKKwkJaWYgKG5vZGUtPnRpbWVsaW5lID4gaWR4KQorCQkJYnJlYWs7CisKKwkJ
aWYgKG5vZGUtPnRpbWVsaW5lIDwgaWR4KQorCQkJY29udGludWU7CisKKwkJaWYgKCFpOTE1X2Fj
dGl2ZV9yZXF1ZXN0X2lzc2V0KCZub2RlLT5iYXNlKSkKKwkJCWdvdG8gbWF0Y2g7CisKKwkJLyoK
KwkJICogVGhlIGxpc3Qgb2YgcGVuZGluZyBiYXJyaWVycyBpcyBwcm90ZWN0ZWQgYnkgdGhlCisJ
CSAqIGtlcm5lbF9jb250ZXh0IHRpbWVsaW5lLCB3aGljaCBub3RhYmx5IHdlIGRvIG5vdCBob2xk
CisJCSAqIGhlcmUuIGk5MTVfcmVxdWVzdF9hZGRfYWN0aXZlX2JhcnJpZXJzKCkgbWF5IGNvbnN1
bWUKKwkJICogdGhlIGJhcnJpZXIgYmVmb3JlIHdlIGNsYWltIGl0LCBzbyB3ZSBoYXZlIHRvIGNo
ZWNrCisJCSAqIGZvciBzdWNjZXNzLgorCQkgKi8KKwkJaWYgKGlzX2JhcnJpZXIoJm5vZGUtPmJh
c2UpICYmIF9fYWN0aXZlX2RlbF9iYXJyaWVyKHJlZiwgbm9kZSkpCisJCQlnb3RvIG1hdGNoOwor
CX0KKworCW11dGV4X3VubG9jaygmcmVmLT5tdXRleCk7CisKKwlyZXR1cm4gTlVMTDsKKworbWF0
Y2g6CisJcmJfZXJhc2UocCwgJnJlZi0+dHJlZSk7IC8qIEhpZGUgZnJvbSB3YWl0cyBhbmQgc2li
bGluZyBhbGxvY2F0aW9ucyAqLworCWlmIChwID09ICZyZWYtPmNhY2hlLT5ub2RlKQorCQlyZWYt
PmNhY2hlID0gTlVMTDsKKwltdXRleF91bmxvY2soJnJlZi0+bXV0ZXgpOworCisJcmV0dXJuIHJi
X2VudHJ5KHAsIHN0cnVjdCBhY3RpdmVfbm9kZSwgbm9kZSk7Cit9CisKIGludCBpOTE1X2FjdGl2
ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJpZXIoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYsCiAJ
CQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CkBAIC0zODIsMzkgKzU0
NCw1MyBAQCBpbnQgaTkxNV9hY3RpdmVfYWNxdWlyZV9wcmVhbGxvY2F0ZV9iYXJyaWVyKHN0cnVj
dCBpOTE1X2FjdGl2ZSAqcmVmLAogCXN0cnVjdCBsbGlzdF9ub2RlICpwb3MsICpuZXh0OwogCWlu
dCBlcnI7CiAKLQlHRU1fQlVHX09OKCFtYXNrKTsKKwlHRU1fQlVHX09OKCFsbGlzdF9lbXB0eSgm
cmVmLT5wcmVhbGxvY2F0ZWRfYmFycmllcnMpKTsKKworCS8qCisJICogUHJlYWxsb2NhdGUgYSBu
b2RlIGZvciBlYWNoIHBoeXNpY2FsIGVuZ2luZSBzdXBwb3J0aW5nIHRoZSB0YXJnZXQKKwkgKiBl
bmdpbmUgKHJlbWVtYmVyIHZpcnR1YWwgZW5naW5lcyBoYXZlIG1vcmUgdGhhbiBvbmUgc2libGlu
ZykuCisJICogV2UgY2FuIHRoZW4gdXNlIHRoZSBwcmVhbGxvY2F0ZWQgbm9kZXMgaW4KKwkgKiBp
OTE1X2FjdGl2ZV9hY3F1aXJlX2JhcnJpZXIoKQorCSAqLwogCWZvcl9lYWNoX2VuZ2luZV9tYXNr
ZWQoZW5naW5lLCBpOTE1LCBtYXNrLCB0bXApIHsKLQkJc3RydWN0IGludGVsX2NvbnRleHQgKmtj
dHggPSBlbmdpbmUtPmtlcm5lbF9jb250ZXh0OworCQl1NjQgaWR4ID0gZW5naW5lLT5rZXJuZWxf
Y29udGV4dC0+cmluZy0+dGltZWxpbmUtPmZlbmNlX2NvbnRleHQ7CiAJCXN0cnVjdCBhY3RpdmVf
bm9kZSAqbm9kZTsKIAotCQlub2RlID0ga21lbV9jYWNoZV9hbGxvYyhnbG9iYWwuc2xhYl9jYWNo
ZSwgR0ZQX0tFUk5FTCk7Ci0JCWlmICh1bmxpa2VseSghbm9kZSkpIHsKLQkJCWVyciA9IC1FTk9N
RU07Ci0JCQlnb3RvIHVud2luZDsKKwkJbm9kZSA9IHJldXNlX2lkbGVfYmFycmllcihyZWYsIGlk
eCk7CisJCWlmICghbm9kZSkgeworCQkJbm9kZSA9IGttZW1fY2FjaGVfYWxsb2MoZ2xvYmFsLnNs
YWJfY2FjaGUsIEdGUF9LRVJORUwpOworCQkJaWYgKCFub2RlKSB7CisJCQkJZXJyID0gRU5PTUVN
OworCQkJCWdvdG8gdW53aW5kOworCQkJfQorCisJCQlSQ1VfSU5JVF9QT0lOVEVSKG5vZGUtPmJh
c2UucmVxdWVzdCwgTlVMTCk7CisJCQlub2RlLT5iYXNlLnJldGlyZSA9IG5vZGVfcmV0aXJlOwor
CQkJbm9kZS0+dGltZWxpbmUgPSBpZHg7CisJCQlub2RlLT5yZWYgPSByZWY7CiAJCX0KIAotCQlp
OTE1X2FjdGl2ZV9yZXF1ZXN0X2luaXQoJm5vZGUtPmJhc2UsCi0JCQkJCSAodm9pZCAqKWVuZ2lu
ZSwgbm9kZV9yZXRpcmUpOwotCQlub2RlLT50aW1lbGluZSA9IGtjdHgtPnJpbmctPnRpbWVsaW5l
LT5mZW5jZV9jb250ZXh0OwotCQlub2RlLT5yZWYgPSByZWY7Ci0JCWF0b21pY19pbmMoJnJlZi0+
Y291bnQpOworCQlpZiAoIWk5MTVfYWN0aXZlX3JlcXVlc3RfaXNzZXQoJm5vZGUtPmJhc2UpKSB7
CisJCQkvKiBNYXJrIHRoaXMgYXMgYmVpbmcgKm91ciogdW5jb25uZWN0ZWQgcHJvdG8tbm9kZSAq
LworCQkJUkNVX0lOSVRfUE9JTlRFUihub2RlLT5iYXNlLnJlcXVlc3QsIEVSUl9QVFIoLUVBR0FJ
TikpOworCQkJbm9kZS0+YmFzZS5saW5rLnByZXYgPSAodm9pZCAqKWVuZ2luZTsKKwkJCWF0b21p
Y19pbmMoJnJlZi0+Y291bnQpOworCQl9CiAKKwkJR0VNX0JVR19PTihiYXJyaWVyX3RvX2VuZ2lu
ZShub2RlKSAhPSBlbmdpbmUpOworCQlsbGlzdF9hZGQoYmFycmllcl90b19sbChub2RlKSwgJnJl
Zi0+cHJlYWxsb2NhdGVkX2JhcnJpZXJzKTsKIAkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUp
OwotCQlsbGlzdF9hZGQoKHN0cnVjdCBsbGlzdF9ub2RlICopJm5vZGUtPmJhc2UubGluaywKLQkJ
CSAgJnJlZi0+YmFycmllcnMpOwogCX0KIAogCXJldHVybiAwOwogCiB1bndpbmQ6Ci0JbGxpc3Rf
Zm9yX2VhY2hfc2FmZShwb3MsIG5leHQsIGxsaXN0X2RlbF9hbGwoJnJlZi0+YmFycmllcnMpKSB7
Ci0JCXN0cnVjdCBhY3RpdmVfbm9kZSAqbm9kZTsKKwlsbGlzdF9mb3JfZWFjaF9zYWZlKHBvcywg
bmV4dCwgdGFrZV9wcmVhbGxvY2F0ZWRfYmFycmllcnMocmVmKSkgeworCQlzdHJ1Y3QgYWN0aXZl
X25vZGUgKm5vZGUgPSBiYXJyaWVyX2Zyb21fbGwocG9zKTsKIAotCQlub2RlID0gY29udGFpbmVy
X29mKChzdHJ1Y3QgbGlzdF9oZWFkICopcG9zLAotCQkJCSAgICB0eXBlb2YoKm5vZGUpLCBiYXNl
LmxpbmspOwotCQllbmdpbmUgPSAodm9pZCAqKXJjdV9hY2Nlc3NfcG9pbnRlcihub2RlLT5iYXNl
LnJlcXVlc3QpOworCQlhdG9taWNfZGVjKCZyZWYtPmNvdW50KTsKKwkJaW50ZWxfZW5naW5lX3Bt
X3B1dChiYXJyaWVyX3RvX2VuZ2luZShub2RlKSk7CiAKLQkJaW50ZWxfZW5naW5lX3BtX3B1dChl
bmdpbmUpOwogCQlrbWVtX2NhY2hlX2ZyZWUoZ2xvYmFsLnNsYWJfY2FjaGUsIG5vZGUpOwogCX0K
IAlyZXR1cm4gZXJyOwpAQCAtNDI2LDI1ICs2MDIsMjcgQEAgdm9pZCBpOTE1X2FjdGl2ZV9hY3F1
aXJlX2JhcnJpZXIoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYpCiAKIAlHRU1fQlVHX09OKGk5MTVf
YWN0aXZlX2lzX2lkbGUocmVmKSk7CiAKKwkvKgorCSAqIFRyYW5zZmVyIHRoZSBsaXN0IG9mIHBy
ZWFsbG9jYXRlZCBiYXJyaWVycyBpbnRvIHRoZQorCSAqIGk5MTVfYWN0aXZlIHJidHJlZSwgYnV0
IG9ubHkgYXMgcHJvdG8tbm9kZXMuIFRoZXkgd2lsbCBiZQorCSAqIHBvcHVsYXRlZCBieSBpOTE1
X3JlcXVlc3RfYWRkX2FjdGl2ZV9iYXJyaWVyKCkgdG8gcG9pbnQgdG8gdGhlCisJICogcmVxdWVz
dCB0aGF0IHdpbGwgZXZlbnR1YWxseSByZWxlYXNlIHRoZW0uCisJICovCiAJbXV0ZXhfbG9ja19u
ZXN0ZWQoJnJlZi0+bXV0ZXgsIFNJTkdMRV9ERVBUSF9ORVNUSU5HKTsKLQlsbGlzdF9mb3JfZWFj
aF9zYWZlKHBvcywgbmV4dCwgbGxpc3RfZGVsX2FsbCgmcmVmLT5iYXJyaWVycykpIHsKLQkJc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwotCQlzdHJ1Y3QgYWN0aXZlX25vZGUgKm5vZGU7
CisJbGxpc3RfZm9yX2VhY2hfc2FmZShwb3MsIG5leHQsIHRha2VfcHJlYWxsb2NhdGVkX2JhcnJp
ZXJzKHJlZikpIHsKKwkJc3RydWN0IGFjdGl2ZV9ub2RlICpub2RlID0gYmFycmllcl9mcm9tX2xs
KHBvcyk7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGJhcnJpZXJfdG9fZW5n
aW5lKG5vZGUpOwogCQlzdHJ1Y3QgcmJfbm9kZSAqKnAsICpwYXJlbnQ7CiAKLQkJbm9kZSA9IGNv
bnRhaW5lcl9vZigoc3RydWN0IGxpc3RfaGVhZCAqKXBvcywKLQkJCQkgICAgdHlwZW9mKCpub2Rl
KSwgYmFzZS5saW5rKTsKLQotCQllbmdpbmUgPSAodm9pZCAqKXJjdV9hY2Nlc3NfcG9pbnRlcihu
b2RlLT5iYXNlLnJlcXVlc3QpOwotCQlSQ1VfSU5JVF9QT0lOVEVSKG5vZGUtPmJhc2UucmVxdWVz
dCwgRVJSX1BUUigtRUFHQUlOKSk7Ci0KIAkJcGFyZW50ID0gTlVMTDsKIAkJcCA9ICZyZWYtPnRy
ZWUucmJfbm9kZTsKIAkJd2hpbGUgKCpwKSB7CisJCQlzdHJ1Y3QgYWN0aXZlX25vZGUgKml0Owor
CiAJCQlwYXJlbnQgPSAqcDsKLQkJCWlmIChyYl9lbnRyeShwYXJlbnQsCi0JCQkJICAgICBzdHJ1
Y3QgYWN0aXZlX25vZGUsCi0JCQkJICAgICBub2RlKS0+dGltZWxpbmUgPCBub2RlLT50aW1lbGlu
ZSkKKworCQkJaXQgPSByYl9lbnRyeShwYXJlbnQsIHN0cnVjdCBhY3RpdmVfbm9kZSwgbm9kZSk7
CisJCQlpZiAoaXQtPnRpbWVsaW5lIDwgbm9kZS0+dGltZWxpbmUpCiAJCQkJcCA9ICZwYXJlbnQt
PnJiX3JpZ2h0OwogCQkJZWxzZQogCQkJCXAgPSAmcGFyZW50LT5yYl9sZWZ0OwpAQCAtNDUyLDIw
ICs2MzAsMjkgQEAgdm9pZCBpOTE1X2FjdGl2ZV9hY3F1aXJlX2JhcnJpZXIoc3RydWN0IGk5MTVf
YWN0aXZlICpyZWYpCiAJCXJiX2xpbmtfbm9kZSgmbm9kZS0+bm9kZSwgcGFyZW50LCBwKTsKIAkJ
cmJfaW5zZXJ0X2NvbG9yKCZub2RlLT5ub2RlLCAmcmVmLT50cmVlKTsKIAotCQlsbGlzdF9hZGQo
KHN0cnVjdCBsbGlzdF9ub2RlICopJm5vZGUtPmJhc2UubGluaywKLQkJCSAgJmVuZ2luZS0+YmFy
cmllcl90YXNrcyk7CisJCWxsaXN0X2FkZChiYXJyaWVyX3RvX2xsKG5vZGUpLCAmZW5naW5lLT5i
YXJyaWVyX3Rhc2tzKTsKIAkJaW50ZWxfZW5naW5lX3BtX3B1dChlbmdpbmUpOwogCX0KIAltdXRl
eF91bmxvY2soJnJlZi0+bXV0ZXgpOwogfQogCi12b2lkIGk5MTVfcmVxdWVzdF9hZGRfYmFycmll
cnMoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit2b2lkIGk5MTVfcmVxdWVzdF9hZGRfYWN0aXZl
X2JhcnJpZXJzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSA9IHJxLT5lbmdpbmU7CiAJc3RydWN0IGxsaXN0X25vZGUgKm5vZGUsICpu
ZXh0OwogCi0JbGxpc3RfZm9yX2VhY2hfc2FmZShub2RlLCBuZXh0LCBsbGlzdF9kZWxfYWxsKCZl
bmdpbmUtPmJhcnJpZXJfdGFza3MpKQorCUdFTV9CVUdfT04oaW50ZWxfZW5naW5lX2lzX3ZpcnR1
YWwoZW5naW5lKSk7CisJR0VNX0JVR19PTihycS0+dGltZWxpbmUgIT0gZW5naW5lLT5rZXJuZWxf
Y29udGV4dC0+cmluZy0+dGltZWxpbmUpOworCisJLyoKKwkgKiBBdHRhY2ggdGhlIGxpc3Qgb2Yg
cHJvdG8tZmVuY2VzIHRvIHRoZSBpbi1mbGlnaHQgcmVxdWVzdCBzdWNoCisJICogdGhhdCB0aGUg
cGFyZW50IGk5MTVfYWN0aXZlIHdpbGwgYmUgcmVsZWFzZWQgd2hlbiB0aGlzIHJlcXVlc3QKKwkg
KiBpcyByZXRpcmVkLgorCSAqLworCWxsaXN0X2Zvcl9lYWNoX3NhZmUobm9kZSwgbmV4dCwgbGxp
c3RfZGVsX2FsbCgmZW5naW5lLT5iYXJyaWVyX3Rhc2tzKSkgeworCQlSQ1VfSU5JVF9QT0lOVEVS
KGJhcnJpZXJfZnJvbV9sbChub2RlKS0+YmFzZS5yZXF1ZXN0LCBycSk7CiAJCWxpc3RfYWRkX3Rh
aWwoKHN0cnVjdCBsaXN0X2hlYWQgKilub2RlLCAmcnEtPmFjdGl2ZV9saXN0KTsKKwl9CiB9CiAK
IGludCBpOTE1X2FjdGl2ZV9yZXF1ZXN0X3NldChzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCAq
YWN0aXZlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZlLmgKaW5kZXggYmE2OGIwNzdlYzZjLi41
NjYzMzZjOTllZDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfYWN0aXZl
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmUuaApAQCAtNDEzLDYgKzQx
Myw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpOTE1X2FjdGl2ZV9maW5pKHN0cnVjdCBpOTE1X2Fj
dGl2ZSAqcmVmKSB7IH0KIGludCBpOTE1X2FjdGl2ZV9hY3F1aXJlX3ByZWFsbG9jYXRlX2JhcnJp
ZXIoc3RydWN0IGk5MTVfYWN0aXZlICpyZWYsCiAJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpOwogdm9pZCBpOTE1X2FjdGl2ZV9hY3F1aXJlX2JhcnJpZXIoc3RydWN0IGk5
MTVfYWN0aXZlICpyZWYpOwotdm9pZCBpOTE1X3JlcXVlc3RfYWRkX2JhcnJpZXJzKHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKTsKK3ZvaWQgaTkxNV9yZXF1ZXN0X2FkZF9hY3RpdmVfYmFycmllcnMo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpOwogCiAjZW5kaWYgLyogX0k5MTVfQUNUSVZFX0hfICov
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZV90eXBlcy5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9hY3RpdmVfdHlwZXMuaAppbmRleCA3NDc0M2RkMGQ1
ZjAuLmFlM2VlNDQxYzExNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9h
Y3RpdmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2FjdGl2ZV90eXBl
cy5oCkBAIC00Miw3ICs0Miw3IEBAIHN0cnVjdCBpOTE1X2FjdGl2ZSB7CiAJaW50ICgqYWN0aXZl
KShzdHJ1Y3QgaTkxNV9hY3RpdmUgKnJlZik7CiAJdm9pZCAoKnJldGlyZSkoc3RydWN0IGk5MTVf
YWN0aXZlICpyZWYpOwogCi0Jc3RydWN0IGxsaXN0X2hlYWQgYmFycmllcnM7CisJc3RydWN0IGxs
aXN0X2hlYWQgcHJlYWxsb2NhdGVkX2JhcnJpZXJzOwogfTsKIAogI2VuZGlmIC8qIF9JOTE1X0FD
VElWRV9UWVBFU19IXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRl
c3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmgKaW5kZXggMmIzMWE0ZWUwYjRjLi5hODQxZDNmOWJlZGMg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2Vs
ZnRlc3RzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9z
ZWxmdGVzdHMuaApAQCAtMTUsNiArMTUsNyBAQCBzZWxmdGVzdCh3b3JrYXJvdW5kcywgaW50ZWxf
d29ya2Fyb3VuZHNfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdCh0aW1lbGluZXMsIGludGVsX3Rp
bWVsaW5lX2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QocmVxdWVzdHMsIGk5MTVfcmVxdWVzdF9s
aXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KGFjdGl2ZSwgaTkxNV9hY3RpdmVfbGl2ZV9zZWxmdGVz
dHMpCitzZWxmdGVzdChndF9jb250ZXh0cywgaW50ZWxfY29udGV4dF9saXZlX3NlbGZ0ZXN0cykK
IHNlbGZ0ZXN0KG9iamVjdHMsIGk5MTVfZ2VtX29iamVjdF9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0
ZXN0KG1tYW4sIGk5MTVfZ2VtX21tYW5fbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChkbWFidWYs
IGk5MTVfZ2VtX2RtYWJ1Zl9saXZlX3NlbGZ0ZXN0cykKQEAgLTI0LDcgKzI1LDcgQEAgc2VsZnRl
c3QoZ3R0LCBpOTE1X2dlbV9ndHRfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChnZW0sIGk5MTVf
Z2VtX2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoZXZpY3QsIGk5MTVfZ2VtX2V2aWN0X2xpdmVf
c2VsZnRlc3RzKQogc2VsZnRlc3QoaHVnZXBhZ2VzLCBpOTE1X2dlbV9odWdlX3BhZ2VfbGl2ZV9z
ZWxmdGVzdHMpCi1zZWxmdGVzdChjb250ZXh0cywgaTkxNV9nZW1fY29udGV4dF9saXZlX3NlbGZ0
ZXN0cykKK3NlbGZ0ZXN0KGdlbV9jb250ZXh0cywgaTkxNV9nZW1fY29udGV4dF9saXZlX3NlbGZ0
ZXN0cykKIHNlbGZ0ZXN0KGJsdCwgaTkxNV9nZW1fb2JqZWN0X2JsdF9saXZlX3NlbGZ0ZXN0cykK
IHNlbGZ0ZXN0KGNsaWVudCwgaTkxNV9nZW1fY2xpZW50X2JsdF9saXZlX3NlbGZ0ZXN0cykKIHNl
bGZ0ZXN0KHJlc2V0LCBpbnRlbF9yZXNldF9saXZlX3NlbGZ0ZXN0cykKLS0gCjIuMjMuMC5yYzAK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

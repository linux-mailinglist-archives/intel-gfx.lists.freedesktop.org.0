Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 0DD83FCA86
	for <lists+intel-gfx@lfdr.de>; Thu, 14 Nov 2019 17:05:36 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E73C66EBDB;
	Thu, 14 Nov 2019 16:05:32 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl
 [IPv6:2a02:2308::216:3eff:fe92:dfa3])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AA5FB6EBD0
 for <intel-gfx@lists.freedesktop.org>; Thu, 14 Nov 2019 16:05:25 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 14 Nov 2019 17:05:14 +0100
Message-Id: <20191114160522.9699-3-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191114160522.9699-1-maarten.lankhorst@linux.intel.com>
References: <20191114160522.9699-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 03/11] drm/i915: Add hw.pipe_mode to allow
 bigjoiner pipe/transcoder split
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2lnbmVkLW9mZi1ieTogTWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4
LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXkuYyAgfCA0NyArKysrKy0tLS0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X3R5cGVzLmggICAgfCAxMSArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgICAg
ICAgICAgICAgICB8IDk0ICsrKysrKysrKy0tLS0tLS0tLS0KIDMgZmlsZXMgY2hhbmdlZCwgODEg
aW5zZXJ0aW9ucygrKSwgNzEgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCAxOGFjZWNjMzY0MmQuLjdhNmRhODU4MjNhZiAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKQEAgLTE1
MSw3ICsxNTEsNyBAQCBzdGF0aWMgdm9pZCBpcm9ubGFrZV9wY2hfY2xvY2tfZ2V0KHN0cnVjdCBp
bnRlbF9jcnRjICpjcnRjLAogc3RhdGljIGludCBpbnRlbF9mcmFtZWJ1ZmZlcl9pbml0KHN0cnVj
dCBpbnRlbF9mcmFtZWJ1ZmZlciAqaWZiLAogCQkJCSAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaiwKIAkJCQkgIHN0cnVjdCBkcm1fbW9kZV9mYl9jbWQyICptb2RlX2NtZCk7Ci1zdGF0
aWMgdm9pZCBpbnRlbF9zZXRfcGlwZV90aW1pbmdzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKTsKK3N0YXRpYyB2b2lkIGludGVsX3NldF90cmFuc2NvZGVyX3RpbWlu
Z3MoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwogc3RhdGljIHZv
aWQgaW50ZWxfc2V0X3BpcGVfc3JjX3NpemUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUpOwogc3RhdGljIHZvaWQgaW50ZWxfY3B1X3RyYW5zY29kZXJfc2V0X21fbihj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkJIGNvbnN0IHN0
cnVjdCBpbnRlbF9saW5rX21fbiAqbV9uLApAQCAtNTY1MSw3ICs1NjUxLDcgQEAgc2tsX3VwZGF0
ZV9zY2FsZXIoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsIGJvb2wgZm9yY2Vf
ZGV0YWNoLAogICovCiBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfY3J0YyhzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqc3RhdGUpCiB7Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVz
dGVkX21vZGUgPSAmc3RhdGUtPmh3LmFkanVzdGVkX21vZGU7CisJY29uc3Qgc3RydWN0IGRybV9k
aXNwbGF5X21vZGUgKnBpcGVfbW9kZSA9ICZzdGF0ZS0+aHcucGlwZV9tb2RlOwogCWJvb2wgbmVl
ZF9zY2FsZXIgPSBmYWxzZTsKIAogCWlmIChzdGF0ZS0+b3V0cHV0X2Zvcm1hdCA9PSBJTlRFTF9P
VVRQVVRfRk9STUFUX1lDQkNSNDIwKQpAQCAtNTY2MCw4ICs1NjYwLDggQEAgaW50IHNrbF91cGRh
dGVfc2NhbGVyX2NydGMoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnN0YXRlKQogCXJldHVybiBz
a2xfdXBkYXRlX3NjYWxlcihzdGF0ZSwgIXN0YXRlLT5ody5hY3RpdmUsIFNLTF9DUlRDX0lOREVY
LAogCQkJCSAmc3RhdGUtPnNjYWxlcl9zdGF0ZS5zY2FsZXJfaWQsCiAJCQkJIHN0YXRlLT5waXBl
X3NyY193LCBzdGF0ZS0+cGlwZV9zcmNfaCwKLQkJCQkgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19oZGlz
cGxheSwKLQkJCQkgYWRqdXN0ZWRfbW9kZS0+Y3J0Y192ZGlzcGxheSwgTlVMTCwgbmVlZF9zY2Fs
ZXIpOworCQkJCSBwaXBlX21vZGUtPmNydGNfaGRpc3BsYXksCisJCQkJIHBpcGVfbW9kZS0+Y3J0
Y192ZGlzcGxheSwgTlVMTCwgbmVlZF9zY2FsZXIpOwogfQogCiAvKioKQEAgLTY0ODAsNyArNjQ4
MCw3IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpwaXBlX2NvbmZpZywKIAlpZiAoaW50ZWxfY3J0Y19oYXNfZHBfZW5jb2RlcihwaXBl
X2NvbmZpZykpCiAJCWludGVsX2RwX3NldF9tX24ocGlwZV9jb25maWcsIE0xX04xKTsKIAotCWlu
dGVsX3NldF9waXBlX3RpbWluZ3MocGlwZV9jb25maWcpOworCWludGVsX3NldF90cmFuc2NvZGVy
X3RpbWluZ3MocGlwZV9jb25maWcpOwogCWludGVsX3NldF9waXBlX3NyY19zaXplKHBpcGVfY29u
ZmlnKTsKIAogCWlmIChwaXBlX2NvbmZpZy0+aGFzX3BjaF9lbmNvZGVyKSB7CkBAIC02NjA3LDcg
KzY2MDcsNyBAQCBzdGF0aWMgdm9pZCBoYXN3ZWxsX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAkJaW50ZWxfZHBfc2V0X21fbihwaXBlX2NvbmZpZywg
TTFfTjEpOwogCiAJaWYgKCF0cmFuc2NvZGVyX2lzX2RzaShjcHVfdHJhbnNjb2RlcikpCi0JCWlu
dGVsX3NldF9waXBlX3RpbWluZ3MocGlwZV9jb25maWcpOworCQlpbnRlbF9zZXRfdHJhbnNjb2Rl
cl90aW1pbmdzKHBpcGVfY29uZmlnKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEx
KQogCQlpY2xfZW5hYmxlX3RyYW5zX3BvcnRfc3luYyhwaXBlX2NvbmZpZyk7CkBAIC03MDE1LDcg
KzcwMTUsNyBAQCBzdGF0aWMgdm9pZCB2YWxsZXl2aWV3X2NydGNfZW5hYmxlKHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZywKIAlpZiAoaW50ZWxfY3J0Y19oYXNfZHBfZW5jb2Rl
cihwaXBlX2NvbmZpZykpCiAJCWludGVsX2RwX3NldF9tX24ocGlwZV9jb25maWcsIE0xX04xKTsK
IAotCWludGVsX3NldF9waXBlX3RpbWluZ3MocGlwZV9jb25maWcpOworCWludGVsX3NldF90cmFu
c2NvZGVyX3RpbWluZ3MocGlwZV9jb25maWcpOwogCWludGVsX3NldF9waXBlX3NyY19zaXplKHBp
cGVfY29uZmlnKTsKIAogCWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSAmJiBwaXBlID09IFBJ
UEVfQikgewpAQCAtNzA4Myw3ICs3MDgzLDcgQEAgc3RhdGljIHZvaWQgaTl4eF9jcnRjX2VuYWJs
ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcsCiAJaWYgKGludGVsX2NydGNf
aGFzX2RwX2VuY29kZXIocGlwZV9jb25maWcpKQogCQlpbnRlbF9kcF9zZXRfbV9uKHBpcGVfY29u
ZmlnLCBNMV9OMSk7CiAKLQlpbnRlbF9zZXRfcGlwZV90aW1pbmdzKHBpcGVfY29uZmlnKTsKKwlp
bnRlbF9zZXRfdHJhbnNjb2Rlcl90aW1pbmdzKHBpcGVfY29uZmlnKTsKIAlpbnRlbF9zZXRfcGlw
ZV9zcmNfc2l6ZShwaXBlX2NvbmZpZyk7CiAKIAlpOXh4X3NldF9waXBlY29uZihwaXBlX2NvbmZp
Zyk7CkBAIC03NTI4LDcgKzc1MjgsNyBAQCBzdGF0aWMgdTMyIGlsa19waXBlX3BpeGVsX3JhdGUo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQogewogCXUzMiBwaXhl
bF9yYXRlOwogCi0JcGl4ZWxfcmF0ZSA9IHBpcGVfY29uZmlnLT5ody5hZGp1c3RlZF9tb2RlLmNy
dGNfY2xvY2s7CisJcGl4ZWxfcmF0ZSA9IHBpcGVfY29uZmlnLT5ody5waXBlX21vZGUuY3J0Y19j
bG9jazsKIAogCS8qCiAJICogV2Ugb25seSB1c2UgSUYtSUQgaW50ZXJsYWNpbmcuIElmIHdlIGV2
ZXIgdXNlCkBAIC03NTY2LDcgKzc1NjYsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9jcnRjX2NvbXB1
dGVfcGl4ZWxfcmF0ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIAlpZiAo
SEFTX0dNQ0goZGV2X3ByaXYpKQogCQkvKiBGSVhNRSBjYWxjdWxhdGUgcHJvcGVyIHBpcGUgcGl4
ZWwgcmF0ZSBmb3IgR01DSCBwZml0ICovCiAJCWNydGNfc3RhdGUtPnBpeGVsX3JhdGUgPQotCQkJ
Y3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZS5jcnRjX2Nsb2NrOworCQkJY3J0Y19zdGF0ZS0+
aHcucGlwZV9tb2RlLmNydGNfY2xvY2s7CiAJZWxzZQogCQljcnRjX3N0YXRlLT5waXhlbF9yYXRl
ID0KIAkJCWlsa19waXBlX3BpeGVsX3JhdGUoY3J0Y19zdGF0ZSk7CkBAIC03NTc2LDcgKzc1NzYs
NyBAQCBzdGF0aWMgaW50IGludGVsX2NydGNfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2Ny
dGMgKmNydGMsCiAJCQkJICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcp
CiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5i
YXNlLmRldik7Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUg
PSAmcGlwZV9jb25maWctPmh3LmFkanVzdGVkX21vZGU7CisJY29uc3Qgc3RydWN0IGRybV9kaXNw
bGF5X21vZGUgKnBpcGVfbW9kZSA9ICZwaXBlX2NvbmZpZy0+aHcucGlwZV9tb2RlOwogCWludCBj
bG9ja19saW1pdCA9IGRldl9wcml2LT5tYXhfZG90Y2xrX2ZyZXE7CiAKIAlpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA8IDQpIHsKQEAgLTc1ODcsMTUgKzc1ODcsMTUgQEAgc3RhdGljIGludCBpbnRl
bF9jcnRjX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQkgKiBpcyA+
IDkwJSBvZiB0aGUgKGRpc3BsYXkpIGNvcmUgc3BlZWQuCiAJCSAqLwogCQlpZiAoaW50ZWxfY3J0
Y19zdXBwb3J0c19kb3VibGVfd2lkZShjcnRjKSAmJgotCQkgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0
Y19jbG9jayA+IGNsb2NrX2xpbWl0KSB7CisJCSAgICBwaXBlX21vZGUtPmNydGNfY2xvY2sgPiBj
bG9ja19saW1pdCkgewogCQkJY2xvY2tfbGltaXQgPSBkZXZfcHJpdi0+bWF4X2RvdGNsa19mcmVx
OwogCQkJcGlwZV9jb25maWctPmRvdWJsZV93aWRlID0gdHJ1ZTsKIAkJfQogCX0KIAotCWlmIChh
ZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrID4gY2xvY2tfbGltaXQpIHsKKwlpZiAocGlwZV9tb2Rl
LT5jcnRjX2Nsb2NrID4gY2xvY2tfbGltaXQpIHsKIAkJRFJNX0RFQlVHX0tNUygicmVxdWVzdGVk
IHBpeGVsIGNsb2NrICglZCBrSHopIHRvbyBoaWdoIChtYXg6ICVkIGtIeiwgZG91YmxlIHdpZGU6
ICVzKVxuIiwKLQkJCSAgICAgIGFkanVzdGVkX21vZGUtPmNydGNfY2xvY2ssIGNsb2NrX2xpbWl0
LAorCQkJICAgICAgcGlwZV9tb2RlLT5jcnRjX2Nsb2NrLCBjbG9ja19saW1pdCwKIAkJCSAgICAg
IHllc25vKHBpcGVfY29uZmlnLT5kb3VibGVfd2lkZSkpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9
CkBAIC03NjM1LDcgKzc2MzUsNyBAQCBzdGF0aWMgaW50IGludGVsX2NydGNfY29tcHV0ZV9jb25m
aWcoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJICogV2FQcnVuZU1vZGVXaXRoSW5jb3JyZWN0
SHN5bmNPZmZzZXQ6Y3RnLGVsayxpbGssc25iLGl2Yix2bHYsaHN3LgogCSAqLwogCWlmICgoSU5U
RUxfR0VOKGRldl9wcml2KSA+IDQgfHwgSVNfRzRYKGRldl9wcml2KSkgJiYKLQkJYWRqdXN0ZWRf
bW9kZS0+Y3J0Y19oc3luY19zdGFydCA9PSBhZGp1c3RlZF9tb2RlLT5jcnRjX2hkaXNwbGF5KQor
CQlwaXBlX21vZGUtPmNydGNfaHN5bmNfc3RhcnQgPT0gcGlwZV9tb2RlLT5jcnRjX2hkaXNwbGF5
KQogCQlyZXR1cm4gLUVJTlZBTDsKIAogCWludGVsX2NydGNfY29tcHV0ZV9waXhlbF9yYXRlKHBp
cGVfY29uZmlnKTsKQEAgLTgyOTQsNyArODI5NCw3IEBAIHN0YXRpYyB2b2lkIGk4eHhfY29tcHV0
ZV9kcGxsKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCWNydGNfc3RhdGUtPmRwbGxfaHdfc3Rh
dGUuZHBsbCA9IGRwbGw7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3NldF9waXBlX3RpbWluZ3Mo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCitzdGF0aWMgdm9pZCBp
bnRlbF9zZXRfdHJhbnNjb2Rlcl90aW1pbmdzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0
YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtODM4NSw4ICs4Mzg1LDggQEAgc3Rh
dGljIGJvb2wgaW50ZWxfcGlwZV9pc19pbnRlcmxhY2VkKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlKQogCQlyZXR1cm4gSTkxNV9SRUFEKFBJUEVDT05GKGNwdV90cmFu
c2NvZGVyKSkgJiBQSVBFQ09ORl9JTlRFUkxBQ0VfTUFTSzsKIH0KIAotc3RhdGljIHZvaWQgaW50
ZWxfZ2V0X3BpcGVfdGltaW5ncyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJCQkgICBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgdm9pZCBpbnRlbF9nZXRf
dHJhbnNjb2Rlcl90aW1pbmdzKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJCQkgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYgPSBjcnRjLT5iYXNlLmRldjsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGRldik7CkBAIC04OTg3LDcgKzg5ODcsNyBAQCBzdGF0aWMgYm9vbCBpOXh4X2dl
dF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAlpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA8IDQpCiAJCXBpcGVfY29uZmlnLT5kb3VibGVfd2lkZSA9IHRtcCAmIFBJUEVDT05G
X0RPVUJMRV9XSURFOwogCi0JaW50ZWxfZ2V0X3BpcGVfdGltaW5ncyhjcnRjLCBwaXBlX2NvbmZp
Zyk7CisJaW50ZWxfZ2V0X3RyYW5zY29kZXJfdGltaW5ncyhjcnRjLCBwaXBlX2NvbmZpZyk7CiAJ
aW50ZWxfZ2V0X3BpcGVfc3JjX3NpemUoY3J0YywgcGlwZV9jb25maWcpOwogCiAJaTl4eF9nZXRf
cGZpdF9jb25maWcoY3J0YywgcGlwZV9jb25maWcpOwpAQCAtMTAyMjUsNyArMTAyMjUsNyBAQCBz
dGF0aWMgYm9vbCBpcm9ubGFrZV9nZXRfcGlwZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmNy
dGMsCiAJCXBpcGVfY29uZmlnLT5waXhlbF9tdWx0aXBsaWVyID0gMTsKIAl9CiAKLQlpbnRlbF9n
ZXRfcGlwZV90aW1pbmdzKGNydGMsIHBpcGVfY29uZmlnKTsKKwlpbnRlbF9nZXRfdHJhbnNjb2Rl
cl90aW1pbmdzKGNydGMsIHBpcGVfY29uZmlnKTsKIAlpbnRlbF9nZXRfcGlwZV9zcmNfc2l6ZShj
cnRjLCBwaXBlX2NvbmZpZyk7CiAKIAlpcm9ubGFrZV9nZXRfcGZpdF9jb25maWcoY3J0YywgcGlw
ZV9jb25maWcpOwpAQCAtMTA2ODAsNyArMTA2ODAsNyBAQCBzdGF0aWMgYm9vbCBoYXN3ZWxsX2dl
dF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAlpZiAoIXRyYW5zY29kZXJf
aXNfZHNpKHBpcGVfY29uZmlnLT5jcHVfdHJhbnNjb2RlcikgfHwKIAkgICAgSU5URUxfR0VOKGRl
dl9wcml2KSA+PSAxMSkgewogCQloYXN3ZWxsX2dldF9kZGlfcG9ydF9zdGF0ZShjcnRjLCBwaXBl
X2NvbmZpZyk7Ci0JCWludGVsX2dldF9waXBlX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcpOwor
CQlpbnRlbF9nZXRfdHJhbnNjb2Rlcl90aW1pbmdzKGNydGMsIHBpcGVfY29uZmlnKTsKIAl9CiAK
IAlpbnRlbF9nZXRfcGlwZV9zcmNfc2l6ZShjcnRjLCBwaXBlX2NvbmZpZyk7CkBAIC0xMjYzNyw3
ICsxMjYzNyw3IEBAIGludGVsX2NydGNfY29weV91YXBpX3RvX2h3X3N0YXRlKHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCWNydGNfc3RhdGUtPmh3LmVuYWJsZSA9IGNy
dGNfc3RhdGUtPnVhcGkuZW5hYmxlOwogCWNydGNfc3RhdGUtPmh3LmFjdGl2ZSA9IGNydGNfc3Rh
dGUtPnVhcGkuYWN0aXZlOwotCWNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUgPSBjcnRjX3N0
YXRlLT51YXBpLmFkanVzdGVkX21vZGU7CisJY3J0Y19zdGF0ZS0+aHcucGlwZV9tb2RlID0gY3J0
Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZSA9IGNydGNfc3RhdGUtPnVhcGkuYWRqdXN0ZWRfbW9k
ZTsKIAlpbnRlbF9jcnRjX2NvcHlfdWFwaV90b19od19zdGF0ZV9ub21vZGVzZXQoY3J0Y19zdGF0
ZSk7CiB9CiAKQEAgLTE3NTQzLDYgKzE3NTQzLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNl
dF9yZWFkb3V0X2h3X3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCQkgKi8KIAkJCWNy
dGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUucHJpdmF0ZV9mbGFncyA9IEk5MTVfTU9ERV9GTEFH
X0lOSEVSSVRFRDsKIAorCQkJLyogaW5pdGlhbGl6ZSBwaXBlX21vZGUgKi8KKwkJCWNydGNfc3Rh
dGUtPmh3LnBpcGVfbW9kZSA9IGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGU7CisKIAkJCW1v
ZGUgPSBjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwogCQkJbW9kZS5oZGlzcGxheSA9IGNy
dGNfc3RhdGUtPnBpcGVfc3JjX3c7CiAJCQltb2RlLnZkaXNwbGF5ID0gY3J0Y19zdGF0ZS0+cGlw
ZV9zcmNfaDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmgKaW5kZXggMGYyMGM3MTkwZWVkLi43ZjQ2YzE2NDZkM2YgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC03
OTQsMTUgKzc5NCwyMiBAQCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSB7CiAJICogVGhlIGZvbGxv
d2luZyBtZW1iZXJzIGFyZSB1c2VkIHRvIHZlcmlmeSB0aGUgaGFyZHdhcmUgc3RhdGU6CiAJICog
LSBlbmFibGUKIAkgKiAtIGFjdGl2ZQotCSAqIC0gbW9kZSAvIGFkanVzdGVkX21vZGUKKwkgKiAt
IGFkanVzdGVkX21vZGUKIAkgKiAtIGNvbG9yIHByb3BlcnR5IGJsb2JzLgogCSAqCiAJICogRHVy
aW5nIGluaXRpYWwgaHcgcmVhZG91dCwgdGhleSBuZWVkIHRvIGJlIGNvcGllZCB0byB1YXBpLgor
CSAqCisJICogQmlnam9pbmVyIHdpbGwgYWxsb3cgYSB0cmFuc2NvZGVyIG1vZGUgdGhhdCBzcGFu
cyAyIHBpcGVzOworCSAqIFVzZSB0aGUgcGlwZV9tb2RlIGZvciBjYWxjdWxhdGlvbnMgbGlrZSB3
YXRlcm1hcmtzLCBwaXBlCisJICogc2NhbGVyLCBhbmQgYmFuZHdpZHRoLgorCSAqCisJICogVXNl
IGFkanVzdGVkX21vZGUgZm9yIHRoaW5ncyB0aGF0IG5lZWQgdG8ga25vdyB0aGUgZnVsbAorCSAq
IG1vZGUgb24gdGhlIHRyYW5zY29kZXIsIHdoaWNoIHNwYW5zIGFsbCBwaXBlcy4KIAkgKi8KIAlz
dHJ1Y3QgewogCQlib29sIGFjdGl2ZSwgZW5hYmxlOwogCQlzdHJ1Y3QgZHJtX3Byb3BlcnR5X2Js
b2IgKmRlZ2FtbWFfbHV0LCAqZ2FtbWFfbHV0LCAqY3RtOwotCQlzdHJ1Y3QgZHJtX2Rpc3BsYXlf
bW9kZSBhZGp1c3RlZF9tb2RlOworCQlzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSBwaXBlX21vZGUs
IGFkanVzdGVkX21vZGU7CiAJfSBodzsKIAogCS8qKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKaW5k
ZXggMDViYTllMWJkMjQ3Li43ODBmZjM4YjZhYTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwpA
QCAtODQ5LDEyICs4NDksMTIgQEAgc3RhdGljIHZvaWQgcGluZXZpZXdfdXBkYXRlX3dtKHN0cnVj
dCBpbnRlbF9jcnRjICp1bnVzZWRfY3J0YykKIAogCWNydGMgPSBzaW5nbGVfZW5hYmxlZF9jcnRj
KGRldl9wcml2KTsKIAlpZiAoY3J0YykgewotCQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqYWRqdXN0ZWRfbW9kZSA9Ci0JCQkmY3J0Yy0+Y29uZmlnLT5ody5hZGp1c3RlZF9tb2RlOwor
CQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqcGlwZV9tb2RlID0KKwkJCSZjcnRjLT5j
b25maWctPmh3LnBpcGVfbW9kZTsKIAkJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIg
PQogCQkJY3J0Yy0+YmFzZS5wcmltYXJ5LT5zdGF0ZS0+ZmI7CiAJCWludCBjcHAgPSBmYi0+Zm9y
bWF0LT5jcHBbMF07Ci0JCWludCBjbG9jayA9IGFkanVzdGVkX21vZGUtPmNydGNfY2xvY2s7CisJ
CWludCBjbG9jayA9IHBpcGVfbW9kZS0+Y3J0Y19jbG9jazsKIAogCQkvKiBEaXNwbGF5IFNSICov
CiAJCXdtID0gaW50ZWxfY2FsY3VsYXRlX3dtKGNsb2NrLCAmcGluZXZpZXdfZGlzcGxheV93bSwK
QEAgLTEwODUsOCArMTA4NSw4IEBAIHN0YXRpYyB1MTYgZzR4X2NvbXB1dGVfd20oY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiB7CiAJc3RydWN0IGludGVsX3BsYW5l
ICpwbGFuZSA9IHRvX2ludGVsX3BsYW5lKHBsYW5lX3N0YXRlLT51YXBpLnBsYW5lKTsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHBsYW5lLT5iYXNlLmRldik7
Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPQotCQkmY3J0
Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqcGlwZV9tb2RlID0KKwkJJmNydGNfc3RhdGUtPmh3LnBpcGVfbW9kZTsKIAl1bnNpZ25lZCBp
bnQgbGF0ZW5jeSA9IGRldl9wcml2LT53bS5wcmlfbGF0ZW5jeVtsZXZlbF0gKiAxMDsKIAl1bnNp
Z25lZCBpbnQgY2xvY2ssIGh0b3RhbCwgY3BwLCB3aWR0aCwgd207CiAKQEAgLTExMTMsOCArMTEx
Myw4IEBAIHN0YXRpYyB1MTYgZzR4X2NvbXB1dGVfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJICAgIGxldmVsICE9IEc0WF9XTV9MRVZFTF9OT1JNQUwpCiAJ
CWNwcCA9IG1heChjcHAsIDR1KTsKIAotCWNsb2NrID0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y19jbG9j
azsKLQlodG90YWwgPSBhZGp1c3RlZF9tb2RlLT5jcnRjX2h0b3RhbDsKKwljbG9jayA9IHBpcGVf
bW9kZS0+Y3J0Y19jbG9jazsKKwlodG90YWwgPSBwaXBlX21vZGUtPmNydGNfaHRvdGFsOwogCiAJ
d2lkdGggPSBkcm1fcmVjdF93aWR0aCgmcGxhbmVfc3RhdGUtPnVhcGkuZHN0KTsKIApAQCAtMTU5
MSw4ICsxNTkxLDggQEAgc3RhdGljIHUxNiB2bHZfY29tcHV0ZV93bV9sZXZlbChjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIHsKIAlzdHJ1Y3QgaW50ZWxfcGxhbmUg
KnBsYW5lID0gdG9faW50ZWxfcGxhbmUocGxhbmVfc3RhdGUtPnVhcGkucGxhbmUpOwogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUocGxhbmUtPmJhc2UuZGV2KTsK
LQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9Ci0JCSZjcnRj
X3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOworCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2Rl
ICpwaXBlX21vZGUgPQorCQkmY3J0Y19zdGF0ZS0+aHcucGlwZV9tb2RlOwogCXVuc2lnbmVkIGlu
dCBjbG9jaywgaHRvdGFsLCBjcHAsIHdpZHRoLCB3bTsKIAogCWlmIChkZXZfcHJpdi0+d20ucHJp
X2xhdGVuY3lbbGV2ZWxdID09IDApCkBAIC0xNjAyLDggKzE2MDIsOCBAQCBzdGF0aWMgdTE2IHZs
dl9jb21wdXRlX3dtX2xldmVsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAogCQlyZXR1cm4gMDsKIAogCWNwcCA9IHBsYW5lX3N0YXRlLT5ody5mYi0+Zm9ybWF0LT5j
cHBbMF07Ci0JY2xvY2sgPSBhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrOwotCWh0b3RhbCA9IGFk
anVzdGVkX21vZGUtPmNydGNfaHRvdGFsOworCWNsb2NrID0gcGlwZV9tb2RlLT5jcnRjX2Nsb2Nr
OworCWh0b3RhbCA9IHBpcGVfbW9kZS0+Y3J0Y19odG90YWw7CiAJd2lkdGggPSBjcnRjX3N0YXRl
LT5waXBlX3NyY193OwogCiAJaWYgKHBsYW5lLT5pZCA9PSBQTEFORV9DVVJTT1IpIHsKQEAgLTIx
ODYsMTIgKzIxODYsMTIgQEAgc3RhdGljIHZvaWQgaTk2NV91cGRhdGVfd20oc3RydWN0IGludGVs
X2NydGMgKnVudXNlZF9jcnRjKQogCWlmIChjcnRjKSB7CiAJCS8qIHNlbGYtcmVmcmVzaCBoYXMg
bXVjaCBoaWdoZXIgbGF0ZW5jeSAqLwogCQlzdGF0aWMgY29uc3QgaW50IHNyX2xhdGVuY3lfbnMg
PSAxMjAwMDsKLQkJY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUg
PQotCQkJJmNydGMtPmNvbmZpZy0+aHcuYWRqdXN0ZWRfbW9kZTsKKwkJY29uc3Qgc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKnBpcGVfbW9kZSA9CisJCQkmY3J0Yy0+Y29uZmlnLT5ody5waXBlX21v
ZGU7CiAJCWNvbnN0IHN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0KIAkJCWNydGMtPmJhc2Uu
cHJpbWFyeS0+c3RhdGUtPmZiOwotCQlpbnQgY2xvY2sgPSBhZGp1c3RlZF9tb2RlLT5jcnRjX2Ns
b2NrOwotCQlpbnQgaHRvdGFsID0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y19odG90YWw7CisJCWludCBj
bG9jayA9IHBpcGVfbW9kZS0+Y3J0Y19jbG9jazsKKwkJaW50IGh0b3RhbCA9IHBpcGVfbW9kZS0+
Y3J0Y19odG90YWw7CiAJCWludCBoZGlzcGxheSA9IGNydGMtPmNvbmZpZy0+cGlwZV9zcmNfdzsK
IAkJaW50IGNwcCA9IGZiLT5mb3JtYXQtPmNwcFswXTsKIAkJaW50IGVudHJpZXM7CkBAIC0yMjY3
LDggKzIyNjcsOCBAQCBzdGF0aWMgdm9pZCBpOXh4X3VwZGF0ZV93bShzdHJ1Y3QgaW50ZWxfY3J0
YyAqdW51c2VkX2NydGMpCiAJZmlmb19zaXplID0gZGV2X3ByaXYtPmRpc3BsYXkuZ2V0X2ZpZm9f
c2l6ZShkZXZfcHJpdiwgUExBTkVfQSk7CiAJY3J0YyA9IGludGVsX2dldF9jcnRjX2Zvcl9wbGFu
ZShkZXZfcHJpdiwgUExBTkVfQSk7CiAJaWYgKGludGVsX2NydGNfYWN0aXZlKGNydGMpKSB7Ci0J
CWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0KLQkJCSZjcnRj
LT5jb25maWctPmh3LmFkanVzdGVkX21vZGU7CisJCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9t
b2RlICpwaXBlX21vZGUgPQorCQkJJmNydGMtPmNvbmZpZy0+aHcucGlwZV9tb2RlOwogCQljb25z
dCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9CiAJCQljcnRjLT5iYXNlLnByaW1hcnktPnN0
YXRlLT5mYjsKIAkJaW50IGNwcDsKQEAgLTIyNzgsNyArMjI3OCw3IEBAIHN0YXRpYyB2b2lkIGk5
eHhfdXBkYXRlX3dtKHN0cnVjdCBpbnRlbF9jcnRjICp1bnVzZWRfY3J0YykKIAkJZWxzZQogCQkJ
Y3BwID0gZmItPmZvcm1hdC0+Y3BwWzBdOwogCi0JCXBsYW5lYV93bSA9IGludGVsX2NhbGN1bGF0
ZV93bShhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrLAorCQlwbGFuZWFfd20gPSBpbnRlbF9jYWxj
dWxhdGVfd20ocGlwZV9tb2RlLT5jcnRjX2Nsb2NrLAogCQkJCQkgICAgICAgd21faW5mbywgZmlm
b19zaXplLCBjcHAsCiAJCQkJCSAgICAgICBwZXNzaW1hbF9sYXRlbmN5X25zKTsKIAkJZW5hYmxl
ZCA9IGNydGM7CkBAIC0yMjk0LDggKzIyOTQsOCBAQCBzdGF0aWMgdm9pZCBpOXh4X3VwZGF0ZV93
bShzdHJ1Y3QgaW50ZWxfY3J0YyAqdW51c2VkX2NydGMpCiAJZmlmb19zaXplID0gZGV2X3ByaXYt
PmRpc3BsYXkuZ2V0X2ZpZm9fc2l6ZShkZXZfcHJpdiwgUExBTkVfQik7CiAJY3J0YyA9IGludGVs
X2dldF9jcnRjX2Zvcl9wbGFuZShkZXZfcHJpdiwgUExBTkVfQik7CiAJaWYgKGludGVsX2NydGNf
YWN0aXZlKGNydGMpKSB7Ci0JCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3Rl
ZF9tb2RlID0KLQkJCSZjcnRjLT5jb25maWctPmh3LmFkanVzdGVkX21vZGU7CisJCWNvbnN0IHN0
cnVjdCBkcm1fZGlzcGxheV9tb2RlICpwaXBlX21vZGUgPQorCQkJJmNydGMtPmNvbmZpZy0+aHcu
cGlwZV9tb2RlOwogCQljb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVyICpmYiA9CiAJCQljcnRj
LT5iYXNlLnByaW1hcnktPnN0YXRlLT5mYjsKIAkJaW50IGNwcDsKQEAgLTIzMDUsNyArMjMwNSw3
IEBAIHN0YXRpYyB2b2lkIGk5eHhfdXBkYXRlX3dtKHN0cnVjdCBpbnRlbF9jcnRjICp1bnVzZWRf
Y3J0YykKIAkJZWxzZQogCQkJY3BwID0gZmItPmZvcm1hdC0+Y3BwWzBdOwogCi0JCXBsYW5lYl93
bSA9IGludGVsX2NhbGN1bGF0ZV93bShhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrLAorCQlwbGFu
ZWJfd20gPSBpbnRlbF9jYWxjdWxhdGVfd20ocGlwZV9tb2RlLT5jcnRjX2Nsb2NrLAogCQkJCQkg
ICAgICAgd21faW5mbywgZmlmb19zaXplLCBjcHAsCiAJCQkJCSAgICAgICBwZXNzaW1hbF9sYXRl
bmN5X25zKTsKIAkJaWYgKGVuYWJsZWQgPT0gTlVMTCkKQEAgLTIzNDIsMTIgKzIzNDIsMTIgQEAg
c3RhdGljIHZvaWQgaTl4eF91cGRhdGVfd20oc3RydWN0IGludGVsX2NydGMgKnVudXNlZF9jcnRj
KQogCWlmIChIQVNfRldfQkxDKGRldl9wcml2KSAmJiBlbmFibGVkKSB7CiAJCS8qIHNlbGYtcmVm
cmVzaCBoYXMgbXVjaCBoaWdoZXIgbGF0ZW5jeSAqLwogCQlzdGF0aWMgY29uc3QgaW50IHNyX2xh
dGVuY3lfbnMgPSA2MDAwOwotCQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0
ZWRfbW9kZSA9Ci0JCQkmZW5hYmxlZC0+Y29uZmlnLT5ody5hZGp1c3RlZF9tb2RlOworCQljb25z
dCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqcGlwZV9tb2RlID0KKwkJCSZlbmFibGVkLT5jb25m
aWctPmh3LnBpcGVfbW9kZTsKIAkJY29uc3Qgc3RydWN0IGRybV9mcmFtZWJ1ZmZlciAqZmIgPQog
CQkJZW5hYmxlZC0+YmFzZS5wcmltYXJ5LT5zdGF0ZS0+ZmI7Ci0JCWludCBjbG9jayA9IGFkanVz
dGVkX21vZGUtPmNydGNfY2xvY2s7Ci0JCWludCBodG90YWwgPSBhZGp1c3RlZF9tb2RlLT5jcnRj
X2h0b3RhbDsKKwkJaW50IGNsb2NrID0gcGlwZV9tb2RlLT5jcnRjX2Nsb2NrOworCQlpbnQgaHRv
dGFsID0gcGlwZV9tb2RlLT5jcnRjX2h0b3RhbDsKIAkJaW50IGhkaXNwbGF5ID0gZW5hYmxlZC0+
Y29uZmlnLT5waXBlX3NyY193OwogCQlpbnQgY3BwOwogCQlpbnQgZW50cmllczsKQEAgLTIzOTMs
NyArMjM5Myw3IEBAIHN0YXRpYyB2b2lkIGk4NDVfdXBkYXRlX3dtKHN0cnVjdCBpbnRlbF9jcnRj
ICp1bnVzZWRfY3J0YykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KHVudXNlZF9jcnRjLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7
Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGU7CisJY29uc3Qg
c3RydWN0IGRybV9kaXNwbGF5X21vZGUgKnBpcGVfbW9kZTsKIAl1MzIgZndhdGVyX2xvOwogCWlu
dCBwbGFuZWFfd207CiAKQEAgLTI0MDEsOCArMjQwMSw4IEBAIHN0YXRpYyB2b2lkIGk4NDVfdXBk
YXRlX3dtKHN0cnVjdCBpbnRlbF9jcnRjICp1bnVzZWRfY3J0YykKIAlpZiAoY3J0YyA9PSBOVUxM
KQogCQlyZXR1cm47CiAKLQlhZGp1c3RlZF9tb2RlID0gJmNydGMtPmNvbmZpZy0+aHcuYWRqdXN0
ZWRfbW9kZTsKLQlwbGFuZWFfd20gPSBpbnRlbF9jYWxjdWxhdGVfd20oYWRqdXN0ZWRfbW9kZS0+
Y3J0Y19jbG9jaywKKwlwaXBlX21vZGUgPSAmY3J0Yy0+Y29uZmlnLT5ody5waXBlX21vZGU7CisJ
cGxhbmVhX3dtID0gaW50ZWxfY2FsY3VsYXRlX3dtKHBpcGVfbW9kZS0+Y3J0Y19jbG9jaywKIAkJ
CQkgICAgICAgJmk4NDVfd21faW5mbywKIAkJCQkgICAgICAgZGV2X3ByaXYtPmRpc3BsYXkuZ2V0
X2ZpZm9fc2l6ZShkZXZfcHJpdiwgUExBTkVfQSksCiAJCQkJICAgICAgIDQsIHBlc3NpbWFsX2xh
dGVuY3lfbnMpOwpAQCAtMjQ5MSw3ICsyNDkxLDcgQEAgc3RhdGljIHUzMiBpbGtfY29tcHV0ZV9w
cmlfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCXJldHVy
biBtZXRob2QxOwogCiAJbWV0aG9kMiA9IGlsa193bV9tZXRob2QyKGNydGNfc3RhdGUtPnBpeGVs
X3JhdGUsCi0JCQkJIGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUuY3J0Y19odG90YWwsCisJ
CQkJIGNydGNfc3RhdGUtPmh3LnBpcGVfbW9kZS5jcnRjX2h0b3RhbCwKIAkJCQkgZHJtX3JlY3Rf
d2lkdGgoJnBsYW5lX3N0YXRlLT51YXBpLmRzdCksCiAJCQkJIGNwcCwgbWVtX3ZhbHVlKTsKIApA
QCAtMjUxOSw3ICsyNTE5LDcgQEAgc3RhdGljIHUzMiBpbGtfY29tcHV0ZV9zcHJfd20oY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAKIAltZXRob2QxID0gaWxrX3dt
X21ldGhvZDEoY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSwgY3BwLCBtZW1fdmFsdWUpOwogCW1ldGhv
ZDIgPSBpbGtfd21fbWV0aG9kMihjcnRjX3N0YXRlLT5waXhlbF9yYXRlLAotCQkJCSBjcnRjX3N0
YXRlLT5ody5hZGp1c3RlZF9tb2RlLmNydGNfaHRvdGFsLAorCQkJCSBjcnRjX3N0YXRlLT5ody5w
aXBlX21vZGUuY3J0Y19odG90YWwsCiAJCQkJIGRybV9yZWN0X3dpZHRoKCZwbGFuZV9zdGF0ZS0+
dWFwaS5kc3QpLAogCQkJCSBjcHAsIG1lbV92YWx1ZSk7CiAJcmV0dXJuIG1pbihtZXRob2QxLCBt
ZXRob2QyKTsKQEAgLTI1NDQsNyArMjU0NCw3IEBAIHN0YXRpYyB1MzIgaWxrX2NvbXB1dGVfY3Vy
X3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCWNwcCA9IHBs
YW5lX3N0YXRlLT5ody5mYi0+Zm9ybWF0LT5jcHBbMF07CiAKIAlyZXR1cm4gaWxrX3dtX21ldGhv
ZDIoY3J0Y19zdGF0ZS0+cGl4ZWxfcmF0ZSwKLQkJCSAgICAgIGNydGNfc3RhdGUtPmh3LmFkanVz
dGVkX21vZGUuY3J0Y19odG90YWwsCisJCQkgICAgICBjcnRjX3N0YXRlLT5ody5waXBlX21vZGUu
Y3J0Y19odG90YWwsCiAJCQkgICAgICBkcm1fcmVjdF93aWR0aCgmcGxhbmVfc3RhdGUtPnVhcGku
ZHN0KSwKIAkJCSAgICAgIGNwcCwgbWVtX3ZhbHVlKTsKIH0KQEAgLTI3NjgsMTMgKzI3NjgsMTMg
QEAgaHN3X2NvbXB1dGVfbGluZXRpbWVfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUpCiB7CiAJY29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqaW50ZWxf
c3RhdGUgPQogCQl0b19pbnRlbF9hdG9taWNfc3RhdGUoY3J0Y19zdGF0ZS0+dWFwaS5zdGF0ZSk7
Ci0JY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPQotCQkmY3J0
Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqcGlwZV9tb2RlID0KKwkJJmNydGNfc3RhdGUtPmh3LnBpcGVfbW9kZTsKIAl1MzIgbGluZXRp
bWUsIGlwc19saW5ldGltZTsKIAogCWlmICghY3J0Y19zdGF0ZS0+aHcuYWN0aXZlKQogCQlyZXR1
cm4gMDsKLQlpZiAoV0FSTl9PTihhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrID09IDApKQorCWlm
IChXQVJOX09OKHBpcGVfbW9kZS0+Y3J0Y19jbG9jayA9PSAwKSkKIAkJcmV0dXJuIDA7CiAJaWYg
KFdBUk5fT04oaW50ZWxfc3RhdGUtPmNkY2xrLmxvZ2ljYWwuY2RjbGsgPT0gMCkpCiAJCXJldHVy
biAwOwpAQCAtMjc4Miw5ICsyNzgyLDkgQEAgaHN3X2NvbXB1dGVfbGluZXRpbWVfd20oY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJLyogVGhlIFdNIGFyZSBjb21w
dXRlZCB3aXRoIGJhc2Ugb24gaG93IGxvbmcgaXQgdGFrZXMgdG8gZmlsbCBhIHNpbmdsZQogCSAq
IHJvdyBhdCB0aGUgZ2l2ZW4gY2xvY2sgcmF0ZSwgbXVsdGlwbGllZCBieSA4LgogCSAqICovCi0J
bGluZXRpbWUgPSBESVZfUk9VTkRfQ0xPU0VTVChhZGp1c3RlZF9tb2RlLT5jcnRjX2h0b3RhbCAq
IDEwMDAgKiA4LAotCQkJCSAgICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19jbG9jayk7Ci0JaXBzX2xp
bmV0aW1lID0gRElWX1JPVU5EX0NMT1NFU1QoYWRqdXN0ZWRfbW9kZS0+Y3J0Y19odG90YWwgKiAx
MDAwICogOCwKKwlsaW5ldGltZSA9IERJVl9ST1VORF9DTE9TRVNUKHBpcGVfbW9kZS0+Y3J0Y19o
dG90YWwgKiAxMDAwICogOCwKKwkJCQkgICAgIHBpcGVfbW9kZS0+Y3J0Y19jbG9jayk7CisJaXBz
X2xpbmV0aW1lID0gRElWX1JPVU5EX0NMT1NFU1QocGlwZV9tb2RlLT5jcnRjX2h0b3RhbCAqIDEw
MDAgKiA4LAogCQkJCQkgaW50ZWxfc3RhdGUtPmNkY2xrLmxvZ2ljYWwuY2RjbGspOwogCiAJcmV0
dXJuIFBJUEVfV01fTElORVRJTUVfSVBTX0xJTkVUSU1FKGlwc19saW5ldGltZSkgfApAQCAtMzc3
OSw3ICszNzc5LDcgQEAgYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUpCiAJY3J0YyA9IGludGVsX2dldF9jcnRjX2Zvcl9waXBlKGRldl9w
cml2LCBwaXBlKTsKIAljcnRjX3N0YXRlID0gdG9faW50ZWxfY3J0Y19zdGF0ZShjcnRjLT5iYXNl
LnN0YXRlKTsKIAotCWlmIChjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlLmZsYWdzICYgRFJN
X01PREVfRkxBR19JTlRFUkxBQ0UpCisJaWYgKGNydGNfc3RhdGUtPmh3LnBpcGVfbW9kZS5mbGFn
cyAmIERSTV9NT0RFX0ZMQUdfSU5URVJMQUNFKQogCQlyZXR1cm4gZmFsc2U7CiAKIAlmb3JfZWFj
aF9pbnRlbF9wbGFuZV9vbl9jcnRjKGRldiwgY3J0YywgcGxhbmUpIHsKQEAgLTM4MjAsNyArMzgy
MCw3IEBAIHN0YXRpYyB1MTYgaW50ZWxfZ2V0X2RkYl9zaXplKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJCSAgICAgIGNvbnN0IGludCBudW1fYWN0aXZlLAogCQkJICAgICAg
c3RydWN0IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiKQogewotCWNvbnN0IHN0cnVjdCBkcm1fZGlz
cGxheV9tb2RlICphZGp1c3RlZF9tb2RlOworCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2Rl
ICpwaXBlX21vZGU7CiAJdTY0IHRvdGFsX2RhdGFfYnc7CiAJdTE2IGRkYl9zaXplID0gSU5URUxf
SU5GTyhkZXZfcHJpdiktPmRkYl9zaXplOwogCkBAIC0zODI5LDggKzM4MjksOCBAQCBzdGF0aWMg
dTE2IGludGVsX2dldF9kZGJfc2l6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkKIAkJcmV0dXJuIGRkYl9zaXplIC0gNDsg
LyogNCBibG9ja3MgZm9yIGJ5cGFzcyBwYXRoIGFsbG9jYXRpb24gKi8KIAotCWFkanVzdGVkX21v
ZGUgPSAmY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZTsKLQl0b3RhbF9kYXRhX2J3ID0gdG90
YWxfZGF0YV9yYXRlICogZHJtX21vZGVfdnJlZnJlc2goYWRqdXN0ZWRfbW9kZSk7CisJcGlwZV9t
b2RlID0gJmNydGNfc3RhdGUtPmh3LnBpcGVfbW9kZTsKKwl0b3RhbF9kYXRhX2J3ID0gdG90YWxf
ZGF0YV9yYXRlICogZHJtX21vZGVfdnJlZnJlc2gocGlwZV9tb2RlKTsKIAogCS8qCiAJICogMTJH
Qi9zIGlzIG1heGltdW0gQlcgc3VwcG9ydGVkIGJ5IHNpbmdsZSBEQnVmIHNsaWNlLgpAQCAtMzkw
NSwxNSArMzkwNSwxNSBAQCBza2xfZGRiX2dldF9waXBlX2FsbG9jYXRpb25fbGltaXRzKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkgKiBkaXN0cmlidXRlIEREQiBiYXNlZCBv
biByZXNvbHV0aW9uL3dpZHRoIG9mIHRoZSBkaXNwbGF5LgogCSAqLwogCWZvcl9lYWNoX25ld19p
bnRlbF9jcnRjX2luX3N0YXRlKGludGVsX3N0YXRlLCBjcnRjLCBjcnRjX3N0YXRlLCBpKSB7Ci0J
CWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0KLQkJCSZjcnRj
X3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOworCQljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9k
ZSAqcGlwZV9tb2RlID0KKwkJCSZjcnRjX3N0YXRlLT5ody5waXBlX21vZGU7CiAJCWVudW0gcGlw
ZSBwaXBlID0gY3J0Yy0+cGlwZTsKIAkJaW50IGhkaXNwbGF5LCB2ZGlzcGxheTsKIAogCQlpZiAo
IWNydGNfc3RhdGUtPmh3LmVuYWJsZSkKIAkJCWNvbnRpbnVlOwogCi0JCWRybV9tb2RlX2dldF9o
dl90aW1pbmcoYWRqdXN0ZWRfbW9kZSwgJmhkaXNwbGF5LCAmdmRpc3BsYXkpOworCQlkcm1fbW9k
ZV9nZXRfaHZfdGltaW5nKHBpcGVfbW9kZSwgJmhkaXNwbGF5LCAmdmRpc3BsYXkpOwogCQl0b3Rh
bF93aWR0aCArPSBoZGlzcGxheTsKIAogCQlpZiAocGlwZSA8IGZvcl9waXBlKQpAQCAtNDQ5Nyw3
ICs0NDk3LDcgQEAgaW50ZWxfZ2V0X2xpbmV0aW1lX3VzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlKQogCWlmIChXQVJOX09OKHBpeGVsX3JhdGUgPT0gMCkpCiAJCXJl
dHVybiB1MzJfdG9fZml4ZWQxNigwKTsKIAotCWNydGNfaHRvdGFsID0gY3J0Y19zdGF0ZS0+aHcu
YWRqdXN0ZWRfbW9kZS5jcnRjX2h0b3RhbDsKKwljcnRjX2h0b3RhbCA9IGNydGNfc3RhdGUtPmh3
LnBpcGVfbW9kZS5jcnRjX2h0b3RhbDsKIAlsaW5ldGltZV91cyA9IGRpdl9maXhlZDE2KGNydGNf
aHRvdGFsICogMTAwMCwgcGl4ZWxfcmF0ZSk7CiAKIAlyZXR1cm4gbGluZXRpbWVfdXM7CkBAIC00
Njc5LDE0ICs0Njc5LDE0IEBAIHN0YXRpYyB2b2lkIHNrbF9jb21wdXRlX3BsYW5lX3dtKGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCW1ldGhvZDEgPSBza2xfd21f
bWV0aG9kMShkZXZfcHJpdiwgd3AtPnBsYW5lX3BpeGVsX3JhdGUsCiAJCQkJIHdwLT5jcHAsIGxh
dGVuY3ksIHdwLT5kYnVmX2Jsb2NrX3NpemUpOwogCW1ldGhvZDIgPSBza2xfd21fbWV0aG9kMih3
cC0+cGxhbmVfcGl4ZWxfcmF0ZSwKLQkJCQkgY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRfbW9kZS5j
cnRjX2h0b3RhbCwKKwkJCQkgY3J0Y19zdGF0ZS0+aHcucGlwZV9tb2RlLmNydGNfaHRvdGFsLAog
CQkJCSBsYXRlbmN5LAogCQkJCSB3cC0+cGxhbmVfYmxvY2tzX3Blcl9saW5lKTsKIAogCWlmICh3
cC0+eV90aWxlZCkgewogCQlzZWxlY3RlZF9yZXN1bHQgPSBtYXhfZml4ZWQxNihtZXRob2QyLCB3
cC0+eV90aWxlX21pbmltdW0pOwogCX0gZWxzZSB7Ci0JCWlmICgod3AtPmNwcCAqIGNydGNfc3Rh
dGUtPmh3LmFkanVzdGVkX21vZGUuY3J0Y19odG90YWwgLworCQlpZiAoKHdwLT5jcHAgKiBjcnRj
X3N0YXRlLT5ody5waXBlX21vZGUuY3J0Y19odG90YWwgLwogCQkgICAgIHdwLT5kYnVmX2Jsb2Nr
X3NpemUgPCAxKSAmJgogCQkgICAgICh3cC0+cGxhbmVfYnl0ZXNfcGVyX2xpbmUgLyB3cC0+ZGJ1
Zl9ibG9ja19zaXplIDwgMSkpIHsKIAkJCXNlbGVjdGVkX3Jlc3VsdCA9IG1ldGhvZDI7Ci0tIAoy
LjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCklu
dGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

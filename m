Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 38904A55E7
	for <lists+intel-gfx@lfdr.de>; Mon,  2 Sep 2019 14:26:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6EB9389BA9;
	Mon,  2 Sep 2019 12:26:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A2C8489BA9
 for <intel-gfx@lists.freedesktop.org>; Mon,  2 Sep 2019 12:26:40 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 02 Sep 2019 05:26:40 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,459,1559545200"; d="scan'208";a="183297664"
Received: from shmuelle-mobl2.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.249.38.87])
 by fmsmga007.fm.intel.com with ESMTP; 02 Sep 2019 05:26:39 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  2 Sep 2019 15:26:21 +0300
Message-Id: <20190902122624.31902-9-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190902122624.31902-1-lionel.g.landwerlin@intel.com>
References: <20190902122624.31902-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v13 08/11] drm/i915/perf: execute OA
 configuration from command stream
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgaGF2ZW4ndCBydW4gaW50byBpc3N1ZXMgd2l0aCBwcm9ncmFtbWluZyB0aGUgZ2xvYmFsIE9B
L05PQQpyZWdpc3RlcnMgY29uZmlndXJhdGlvbiBmcm9tIENQVSBzbyBmYXIsIGJ1dCBIVyBlbmdp
bmVlcnMgYWN0dWFsbHkKcmVjb21tZW5kIGRvaW5nIHRoaXMgZnJvbSB0aGUgY29tbWFuZCBzdHJl
YW1lci4gT24gVEdMIGluIHBhcnRpY3VsYXIKb25lIG9mIHRoZSBjbG9jayBkb21haW4gaW4gd2hp
Y2ggc29tZSBvZiB0aGF0IHByb2dyYW1taW5nIGdvZXMgbWlnaHQKbm90IGJlIHBvd2VyZWQgd2hl
biB3ZSBwb2tlIHRoaW5ncyBmcm9tIHRoZSBDUFUuCgpTaW5jZSB3ZSBoYXZlIGEgY29tbWFuZCBi
dWZmZXIgcHJlcGFyZWQgZm9yIHRoZSBleGVjYnVmZmVyIHNpZGUgb2YKdGhpbmdzLCB3ZSBjYW4g
cmV1c2UgdGhhdCBhcHByb2FjaCBoZXJlIHRvby4KClRoaXMgYWxzbyBhbGxvd3MgdXMgdG8gc2ln
bmlmaWNhbnRseSByZWR1Y2UgdGhlIGFtb3VudCBvZiB0aW1lIHdlIGhvbGQKdGhlIG1haW4gbG9j
ay4KCnYyOiBEcm9wIHRoZSBnbG9iYWwgbG9jayBhcyBtdWNoIGFzIHBvc3NpYmxlCgp2MzogVGFr
ZSBnbG9iYWwgbG9jayB0byBwaW4gZ2xvYmFsCgp2NDogQ3JlYXRlIGk5MTUgcmVxdWVzdCBpbiBl
bWl0X29hX2NvbmZpZygpIHRvIGF2b2lkIGRlYWRsb2NrcyAoTGlvbmVsKQoKdjU6IE1vdmUgbG9j
a2luZyB0byB0aGUgc3RyZWFtIChMaW9uZWwpCgp2NjogTW92ZSBhY3RpdmUgcmVjb25maWd1cmF0
aW9uIHJlcXVlc3QgaW50byBpOTE1X3BlcmZfc3RyZWFtIChMaW9uZWwpCgp2NzogUGluIFZNQSBv
dXRzaWRlIHJlcXVlc3QgY3JlYXRpb24gKENocmlzKQogICAgTG9jayBWTUEgYmVmb3JlIG1vdmUg
dG8gYWN0aXZlIChDaHJpcykKClNpZ25lZC1vZmYtYnk6IExpb25lbCBMYW5kd2VybGluIDxsaW9u
ZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oICB8ICAxMyArKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jIHwgMTcw
ICsrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgMTIyIGlu
c2VydGlvbnMoKyksIDYxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4
IDIwYjZhNzAyMzA5Ny4uMDg0Y2RkMTE1ZDVhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAg
LTExMjksNyArMTEyOSw4IEBAIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtIHsKIAljb25zdCBzdHJ1
Y3QgaTkxNV9wZXJmX3N0cmVhbV9vcHMgKm9wczsKIAogCS8qKgotCSAqIEBhY3RpdmVfY29uZmln
X211dGV4OiBQcm90ZWN0cyBhY2Nlc3MgdG8gQG9hX2NvbmZpZyAmIEBvYV9jb25maWdfYm9zLgor
CSAqIEBhY3RpdmVfY29uZmlnX211dGV4OiBQcm90ZWN0cyBhY2Nlc3MgdG8gQGFjdGl2ZV9jb25m
aWdfcnEsCisJICogQG9hX2NvbmZpZyAmIEBvYV9jb25maWdfYm9zLgogCSAqLwogCXN0cnVjdCBt
dXRleCBjb25maWdfbXV0ZXg7CiAKQEAgLTExNDQsNiArMTE0NSwxNiBAQCBzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSB7CiAJICovCiAJc3RydWN0IGxpc3RfaGVhZCBvYV9jb25maWdfYm9zOwogCisJ
LyoqCisJICogQGFjdGl2ZV9jb25maWdfcnE6IExhc3QgcmVxdWVzdCByZWNvbmZpZ3VyaW5nIHRo
ZSBIVy4KKwkgKi8KKwlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCBhY3RpdmVfY29uZmlnX3Jx
OworCisJLyoqCisJICogQGluaXRpYWxfb2FfY29uZmlnX2JvOiBGaXJzdCBPQSBjb25maWd1cmF0
aW9uIEJPIHRvIGJlIHJ1bi4KKwkgKi8KKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqaW5p
dGlhbF9vYV9jb25maWdfYm87CisKIAkvKioKIAkgKiBUaGUgT0EgY29udGV4dCBzcGVjaWZpYyBp
bmZvcm1hdGlvbi4KIAkgKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cGVyZi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKaW5kZXggNzQyNjFmMmU3
NDgwLi44ZTgxMWJjYmQ2NzkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cGVyZi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCkBAIC0xNTU4LDE4
ICsxNTU4LDIzIEBAIGZyZWVfb2FfY29uZmlncyhzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3Ry
ZWFtKQogc3RhdGljIHZvaWQgaTkxNV9vYV9zdHJlYW1fZGVzdHJveShzdHJ1Y3QgaTkxNV9wZXJm
X3N0cmVhbSAqc3RyZWFtKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9
IHN0cmVhbS0+ZGV2X3ByaXY7CisJaW50IGVycjsKIAogCUJVR19PTihzdHJlYW0gIT0gZGV2X3By
aXYtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbSk7CiAKLQkvKgotCSAqIFVuc2V0IGV4Y2x1c2l2ZV9z
dHJlYW0gZmlyc3QsIGl0IHdpbGwgYmUgY2hlY2tlZCB3aGlsZSBkaXNhYmxpbmcKLQkgKiB0aGUg
bWV0cmljIHNldCBvbiBnZW44Ky4KLQkgKi8KIAltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0
cnVjdF9tdXRleCk7Ci0JZGV2X3ByaXYtPnBlcmYuZXhjbHVzaXZlX3N0cmVhbSA9IE5VTEw7CisJ
bXV0ZXhfbG9jaygmc3RyZWFtLT5jb25maWdfbXV0ZXgpOwogCWRldl9wcml2LT5wZXJmLm9wcy5k
aXNhYmxlX21ldHJpY19zZXQoc3RyZWFtKTsKKwllcnIgPSBpOTE1X2FjdGl2ZV9yZXF1ZXN0X3Jl
dGlyZSgmc3RyZWFtLT5hY3RpdmVfY29uZmlnX3JxLAorCQkJCQkgJnN0cmVhbS0+Y29uZmlnX211
dGV4KTsKKwltdXRleF91bmxvY2soJnN0cmVhbS0+Y29uZmlnX211dGV4KTsKKwlkZXZfcHJpdi0+
cGVyZi5leGNsdXNpdmVfc3RyZWFtID0gTlVMTDsKIAltdXRleF91bmxvY2soJmRldl9wcml2LT5k
cm0uc3RydWN0X211dGV4KTsKIAorCWlmIChlcnIpCisJCURSTV9FUlJPUigiRmFpbGVkIHRvIGRp
c2FibGUgcGVyZiBzdHJlYW1cbiIpOworCisKIAlmcmVlX29hX2J1ZmZlcihzdHJlYW0pOwogCWZy
ZWVfbm9hX3dhaXQoc3RyZWFtKTsKIApAQCAtMTc5NSw2ICsxODAwLDEwIEBAIHN0YXRpYyBpbnQg
YWxsb2Nfbm9hX3dhaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkJcmV0dXJu
IFBUUl9FUlIoYm8pOwogCX0KIAorCXJldCA9IGk5MTVfbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxl
KCZpOTE1LT5kcm0pOworCWlmIChyZXQpCisJCWdvdG8gZXJyX3VucmVmOworCiAJLyoKIAkgKiBX
ZSBwaW4gaW4gR0dUVCBiZWNhdXNlIHdlIGp1bXAgaW50byB0aGlzIGJ1ZmZlciBub3cgYmVjYXVz
ZQogCSAqIG11bHRpcGxlIE9BIGNvbmZpZyBCT3Mgd2lsbCBoYXZlIGEganVtcCB0byB0aGlzIGFk
ZHJlc3MgYW5kIGl0CkBAIC0xODAyLDEwICsxODExLDEzIEBAIHN0YXRpYyBpbnQgYWxsb2Nfbm9h
X3dhaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkgKi8KIAl2bWEgPSBpOTE1
X2dlbV9vYmplY3RfZ2d0dF9waW4oYm8sIE5VTEwsIDAsIDQwOTYsIDApOwogCWlmIChJU19FUlIo
dm1hKSkgeworCQltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCQlyZXQg
PSBQVFJfRVJSKHZtYSk7CiAJCWdvdG8gZXJyX3VucmVmOwogCX0KIAorCW11dGV4X3VubG9jaygm
aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisKIAliYXRjaCA9IGNzID0gaTkxNV9nZW1fb2JqZWN0
X3Bpbl9tYXAoYm8sIEk5MTVfTUFQX1dCKTsKIAlpZiAoSVNfRVJSKGJhdGNoKSkgewogCQlyZXQg
PSBQVFJfRVJSKGJhdGNoKTsKQEAgLTE5MzksNyArMTk1MSw5IEBAIHN0YXRpYyBpbnQgYWxsb2Nf
bm9hX3dhaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlyZXR1cm4gMDsKIAog
ZXJyX3VucGluOgotCV9faTkxNV92bWFfdW5waW4odm1hKTsKKwltdXRleF9sb2NrKCZpOTE1LT5k
cm0uc3RydWN0X211dGV4KTsKKwlpOTE1X3ZtYV91bnBpbl9hbmRfcmVsZWFzZSgmdm1hLCAwKTsK
KwltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCiBlcnJfdW5yZWY6CiAJ
aTkxNV9nZW1fb2JqZWN0X3B1dChibyk7CkBAIC0xOTQ3LDUwICsxOTYxLDczIEBAIHN0YXRpYyBp
bnQgYWxsb2Nfbm9hX3dhaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIAlyZXR1
cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBjb25maWdfb2FfcmVncyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkgICBjb25zdCBzdHJ1Y3QgaTkxNV9vYV9yZWcgKnJlZ3Ms
Ci0JCQkgICB1MzIgbl9yZWdzKQorc3RhdGljIGludCBlbWl0X29hX2NvbmZpZyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqaTkxNSwKKwkJCSAgc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSkKIHsKLQl1MzIgaTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwlzdHJ1Y3QgaTkxNV92
bWEgKnZtYTsKKwl1MzIgKmNzOworCWludCBlcnI7CiAKLQlmb3IgKGkgPSAwOyBpIDwgbl9yZWdz
OyBpKyspIHsKLQkJY29uc3Qgc3RydWN0IGk5MTVfb2FfcmVnICpyZWcgPSByZWdzICsgaTsKKwls
b2NrZGVwX2Fzc2VydF9oZWxkKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CiAKLQkJSTkxNV9XUklU
RShyZWctPmFkZHIsIHJlZy0+dmFsdWUpOworCXZtYSA9IGk5MTVfdm1hX2luc3RhbmNlKHN0cmVh
bS0+aW5pdGlhbF9vYV9jb25maWdfYm8sCisJCQkJJnN0cmVhbS0+ZW5naW5lLT5ndC0+Z2d0dC0+
dm0sIE5VTEwpOworCWlmICh1bmxpa2VseShJU19FUlIodm1hKSkpCisJCXJldHVybiBQVFJfRVJS
KHZtYSk7CisKKwllcnIgPSBpOTE1X3ZtYV9waW4odm1hLCAwLCAwLCBQSU5fR0xPQkFMKTsKKwlp
ZiAoZXJyKQorCQlnb3RvIGVycl92bWFfdW5waW47CisKKwlycSA9IGk5MTVfcmVxdWVzdF9jcmVh
dGUoc3RyZWFtLT5lbmdpbmUtPmtlcm5lbF9jb250ZXh0KTsKKwlpZiAoSVNfRVJSKHJxKSkgewor
CQllcnIgPSBQVFJfRVJSKHJxKTsKKwkJZ290byBlcnJfYWRkX3JlcXVlc3Q7CiAJfQotfQogCi1z
dGF0aWMgdm9pZCBkZWxheV9hZnRlcl9tdXgodm9pZCkKLXsKLQkvKgotCSAqIEl0IGFwcGFyZW50
bHkgdGFrZXMgYSBmYWlybHkgbG9uZyB0aW1lIGZvciBhIG5ldyBNVVgKLQkgKiBjb25maWd1cmF0
aW9uIHRvIGJlIGJlIGFwcGxpZWQgYWZ0ZXIgdGhlc2UgcmVnaXN0ZXIgd3JpdGVzLgotCSAqIFRo
aXMgZGVsYXkgZHVyYXRpb24gd2FzIGRlcml2ZWQgZW1waXJpY2FsbHkgYmFzZWQgb24gdGhlCi0J
ICogcmVuZGVyX2Jhc2ljIGNvbmZpZyBidXQgaG9wZWZ1bGx5IGl0IGNvdmVycyB0aGUgbWF4aW11
bQotCSAqIGNvbmZpZ3VyYXRpb24gbGF0ZW5jeS4KLQkgKgotCSAqIEFzIGEgZmFsbGJhY2ssIHRo
ZSBjaGVja3MgaW4gX2FwcGVuZF9vYV9yZXBvcnRzKCkgdG8gc2tpcAotCSAqIGludmFsaWQgT0Eg
cmVwb3J0cyBkbyBhbHNvIHNlZW0gdG8gd29yayB0byBkaXNjYXJkIHJlcG9ydHMKLQkgKiBnZW5l
cmF0ZWQgYmVmb3JlIHRoaXMgY29uZmlnIGhhcyBjb21wbGV0ZWQgLSBhbGJlaXQgbm90Ci0JICog
c2lsZW50bHkuCi0JICoKLQkgKiBVbmZvcnR1bmF0ZWx5IHRoaXMgaXMgZXNzZW50aWFsbHkgYSBt
YWdpYyBudW1iZXIsIHNpbmNlIHdlCi0JICogZG9uJ3QgY3VycmVudGx5IGtub3cgb2YgYSByZWxp
YWJsZSBtZWNoYW5pc20gZm9yIHByZWRpY3RpbmcKLQkgKiBob3cgbG9uZyB0aGUgTVVYIGNvbmZp
ZyB3aWxsIHRha2UgdG8gYXBwbHkgYW5kIGJlc2lkZXMKLQkgKiBzZWVpbmcgaW52YWxpZCByZXBv
cnRzIHdlIGRvbid0IGtub3cgb2YgYSByZWxpYWJsZSB3YXkgdG8KLQkgKiBleHBsaWNpdGx5IGNo
ZWNrIHRoYXQgdGhlIE1VWCBjb25maWcgaGFzIGxhbmRlZC4KLQkgKgotCSAqIEl0J3MgZXZlbiBw
b3NzaWJsZSB3ZSd2ZSBtaXNzIGNoYXJhY3Rlcml6ZWQgdGhlIHVuZGVybHlpbmcKLQkgKiBwcm9i
bGVtIC0gaXQganVzdCBzZWVtcyBsaWtlIHRoZSBzaW1wbGVzdCBleHBsYW5hdGlvbiB3aHkKLQkg
KiBhIGRlbGF5IGF0IHRoaXMgbG9jYXRpb24gd291bGQgbWl0aWdhdGUgYW55IGludmFsaWQgcmVw
b3J0cy4KLQkgKi8KLQl1c2xlZXBfcmFuZ2UoMTUwMDAsIDIwMDAwKTsKKwllcnIgPSBpOTE1X2Fj
dGl2ZV9yZXF1ZXN0X3NldCgmc3RyZWFtLT5hY3RpdmVfY29uZmlnX3JxLAorCQkJCSAgICAgIHJx
KTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9hZGRfcmVxdWVzdDsKKworCWk5MTVfdm1hX2xvY2so
dm1hKTsKKwllcnIgPSBpOTE1X3JlcXVlc3RfYXdhaXRfb2JqZWN0KHJxLCB2bWEtPm9iaiwgMCk7
CisJaWYgKCFlcnIpCisJCWVyciA9IGk5MTVfdm1hX21vdmVfdG9fYWN0aXZlKHZtYSwgcnEsIDAp
OworCWk5MTVfdm1hX3VubG9jayh2bWEpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX2FkZF9yZXF1
ZXN0OworCisJY3MgPSBpbnRlbF9yaW5nX2JlZ2luKHJxLCBJTlRFTF9HRU4oaTkxNSkgPj0gOCA/
IDQgOiAyKTsKKwlpZiAoSVNfRVJSKGNzKSkgeworCQllcnIgPSBQVFJfRVJSKGNzKTsKKwkJZ290
byBlcnJfYWRkX3JlcXVlc3Q7CisJfQorCisJaWYgKElOVEVMX0dFTihpOTE1KSA+IDgpIHsKKwkJ
KmNzKysgPSBNSV9CQVRDSF9CVUZGRVJfU1RBUlRfR0VOODsKKwkJKmNzKysgPSBsb3dlcl8zMl9i
aXRzKHZtYS0+bm9kZS5zdGFydCk7CisJCSpjcysrID0gdXBwZXJfMzJfYml0cyh2bWEtPm5vZGUu
c3RhcnQpOworCQkqY3MrKyA9IE1JX05PT1A7CisJfSBlbHNlIHsKKwkJKmNzKysgPSBNSV9CQVRD
SF9CVUZGRVJfU1RBUlQ7CisJCSpjcysrID0gdm1hLT5ub2RlLnN0YXJ0OworCX0KKworCWludGVs
X3JpbmdfYWR2YW5jZShycSwgY3MpOworCitlcnJfYWRkX3JlcXVlc3Q6CisJaTkxNV9yZXF1ZXN0
X2FkZChycSk7CitlcnJfdm1hX3VucGluOgorCWk5MTVfdm1hX3VucGluKHZtYSk7CisKKwlyZXR1
cm4gZXJyOwogfQogCiBzdGF0aWMgaW50IGhzd19lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkx
NV9wZXJmX3N0cmVhbSAqc3RyZWFtKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHN0cmVhbS0+ZGV2X3ByaXY7Ci0JY29uc3Qgc3RydWN0IGk5MTVfb2FfY29uZmlnICpv
YV9jb25maWcgPSBzdHJlYW0tPm9hX2NvbmZpZzsKIAogCS8qCiAJICogUFJNOgpAQCAtMjAwNywx
MyArMjA0NCw3IEBAIHN0YXRpYyBpbnQgaHN3X2VuYWJsZV9tZXRyaWNfc2V0KHN0cnVjdCBpOTE1
X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJSTkxNV9XUklURShHRU42X1VDR0NUTDEsIChJOTE1X1JF
QUQoR0VONl9VQ0dDVEwxKSB8CiAJCQkJICBHRU42X0NTVU5JVF9DTE9DS19HQVRFX0RJU0FCTEUp
KTsKIAotCWNvbmZpZ19vYV9yZWdzKGRldl9wcml2LCBvYV9jb25maWctPm11eF9yZWdzLCBvYV9j
b25maWctPm11eF9yZWdzX2xlbik7Ci0JZGVsYXlfYWZ0ZXJfbXV4KCk7Ci0KLQljb25maWdfb2Ff
cmVncyhkZXZfcHJpdiwgb2FfY29uZmlnLT5iX2NvdW50ZXJfcmVncywKLQkJICAgICAgIG9hX2Nv
bmZpZy0+Yl9jb3VudGVyX3JlZ3NfbGVuKTsKLQotCXJldHVybiAwOworCXJldHVybiBlbWl0X29h
X2NvbmZpZyhkZXZfcHJpdiwgc3RyZWFtKTsKIH0KIAogc3RhdGljIHZvaWQgaHN3X2Rpc2FibGVf
bWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKQpAQCAtMjM3MiwxMyAr
MjQwMyw3IEBAIHN0YXRpYyBpbnQgZ2VuOF9lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9w
ZXJmX3N0cmVhbSAqc3RyZWFtKQogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQljb25maWdf
b2FfcmVncyhkZXZfcHJpdiwgb2FfY29uZmlnLT5tdXhfcmVncywgb2FfY29uZmlnLT5tdXhfcmVn
c19sZW4pOwotCWRlbGF5X2FmdGVyX211eCgpOwotCi0JY29uZmlnX29hX3JlZ3MoZGV2X3ByaXYs
IG9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3MsCi0JCSAgICAgICBvYV9jb25maWctPmJfY291bnRl
cl9yZWdzX2xlbik7Ci0KLQlyZXR1cm4gMDsKKwlyZXR1cm4gZW1pdF9vYV9jb25maWcoZGV2X3By
aXYsIHN0cmVhbSk7CiB9CiAKIHN0YXRpYyB2b2lkIGdlbjhfZGlzYWJsZV9tZXRyaWNfc2V0KHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCkBAIC0yNTk3LDYgKzI2MjIsMTAgQEAgc3Rh
dGljIGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJl
YW0sCiAKIAlzdHJlYW0tPmVuZ2luZSA9IHByb3BzLT5lbmdpbmU7CiAKKwltdXRleF9pbml0KCZz
dHJlYW0tPmNvbmZpZ19tdXRleCk7CisJSU5JVF9BQ1RJVkVfUkVRVUVTVCgmc3RyZWFtLT5hY3Rp
dmVfY29uZmlnX3JxLAorCQkJICAgICZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisKIAlzdHJlYW0t
PnNhbXBsZV9mbGFncyB8PSBTQU1QTEVfT0FfUkVQT1JUOwogCXN0cmVhbS0+c2FtcGxlX3NpemUg
Kz0gZm9ybWF0X3NpemU7CiAKQEAgLTI2MjUsOCArMjY1NCw5IEBAIHN0YXRpYyBpbnQgaTkxNV9v
YV9zdHJlYW1faW5pdChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCQlnb3RvIGVy
cl9ub2Ffd2FpdF9hbGxvYzsKIAl9CiAKLQlyZXQgPSBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZyhk
ZXZfcHJpdiwgcHJvcHMtPm1ldHJpY3Nfc2V0LAotCQkJCSAgICAgICZzdHJlYW0tPm9hX2NvbmZp
Zyk7CisJcmV0ID0gaTkxNV9wZXJmX2dldF9vYV9jb25maWdfYW5kX2JvKHN0cmVhbSwgcHJvcHMt
Pm1ldHJpY3Nfc2V0LAorCQkJCQkgICAgICZzdHJlYW0tPm9hX2NvbmZpZywKKwkJCQkJICAgICAm
c3RyZWFtLT5pbml0aWFsX29hX2NvbmZpZ19ibyk7CiAJaWYgKHJldCkgewogCQlEUk1fREVCVUco
IkludmFsaWQgT0EgY29uZmlnIGlkPSVpXG4iLCBwcm9wcy0+bWV0cmljc19zZXQpOwogCQlnb3Rv
IGVycl9jb25maWc7CkBAIC0yNjU4LDE2ICsyNjg4LDMxIEBAIHN0YXRpYyBpbnQgaTkxNV9vYV9z
dHJlYW1faW5pdChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCXN0cmVhbS0+b3Bz
ID0gJmk5MTVfb2Ffc3RyZWFtX29wczsKIAlkZXZfcHJpdi0+cGVyZi5leGNsdXNpdmVfc3RyZWFt
ID0gc3RyZWFtOwogCisJbXV0ZXhfbG9jaygmc3RyZWFtLT5jb25maWdfbXV0ZXgpOwogCXJldCA9
IGRldl9wcml2LT5wZXJmLm9wcy5lbmFibGVfbWV0cmljX3NldChzdHJlYW0pOwogCWlmIChyZXQp
IHsKIAkJRFJNX0RFQlVHKCJVbmFibGUgdG8gZW5hYmxlIG1ldHJpYyBzZXRcbiIpOwotCQlnb3Rv
IGVycl9lbmFibGU7CisJCS8qCisJCSAqIElnbm9yZSB0aGUgcmV0dXJuIHZhbHVlIHNpbmNlIHdl
IGFscmVhZHkgaGF2ZSBhbiBlcnJvciBmcm9tCisJCSAqIHRoZSBlbmFibGUgdmZ1bmMuCisJCSAq
LworCQlpOTE1X2FjdGl2ZV9yZXF1ZXN0X3JldGlyZSgmc3RyZWFtLT5hY3RpdmVfY29uZmlnX3Jx
LAorCQkJCQkgICAmc3RyZWFtLT5jb25maWdfbXV0ZXgpOworCX0gZWxzZSB7CisJCXJldCA9IGk5
MTVfYWN0aXZlX3JlcXVlc3RfcmV0aXJlKCZzdHJlYW0tPmFjdGl2ZV9jb25maWdfcnEsCisJCQkJ
CQkgJnN0cmVhbS0+Y29uZmlnX211dGV4KTsKIAl9CiAKLQlEUk1fREVCVUcoIm9wZW5pbmcgc3Ry
ZWFtIG9hIGNvbmZpZyB1dWlkPSVzXG4iLCBzdHJlYW0tPm9hX2NvbmZpZy0+dXVpZCk7Ci0KKwlt
dXRleF91bmxvY2soJnN0cmVhbS0+Y29uZmlnX211dGV4KTsKIAltdXRleF91bmxvY2soJmRldl9w
cml2LT5kcm0uc3RydWN0X211dGV4KTsKIAorCWk5MTVfZ2VtX29iamVjdF9wdXQoc3RyZWFtLT5p
bml0aWFsX29hX2NvbmZpZ19ibyk7CisJc3RyZWFtLT5pbml0aWFsX29hX2NvbmZpZ19ibyA9IE5V
TEw7CisJaWYgKHJldCkKKwkJZ290byBlcnJfZW5hYmxlOworCisJRFJNX0RFQlVHKCJvcGVuaW5n
IHN0cmVhbSBvYSBjb25maWcgdXVpZD0lc1xuIiwgc3RyZWFtLT5vYV9jb25maWctPnV1aWQpOwor
CiAJaHJ0aW1lcl9pbml0KCZzdHJlYW0tPnBvbGxfY2hlY2tfdGltZXIsCiAJCSAgICAgQ0xPQ0tf
TU9OT1RPTklDLCBIUlRJTUVSX01PREVfUkVMKTsKIAlzdHJlYW0tPnBvbGxfY2hlY2tfdGltZXIu
ZnVuY3Rpb24gPSBvYV9wb2xsX2NoZWNrX3RpbWVyX2NiOwpAQCAtMjY3Nyw4ICsyNzIyLDExIEBA
IHN0YXRpYyBpbnQgaTkxNV9vYV9zdHJlYW1faW5pdChzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAq
c3RyZWFtLAogCXJldHVybiAwOwogCiBlcnJfZW5hYmxlOgotCWRldl9wcml2LT5wZXJmLmV4Y2x1
c2l2ZV9zdHJlYW0gPSBOVUxMOworCW11dGV4X2xvY2soJmRldl9wcml2LT5kcm0uc3RydWN0X211
dGV4KTsKKwltdXRleF9sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CiAJZGV2X3ByaXYtPnBl
cmYub3BzLmRpc2FibGVfbWV0cmljX3NldChzdHJlYW0pOworCW11dGV4X3VubG9jaygmc3RyZWFt
LT5jb25maWdfbXV0ZXgpOworCWRldl9wcml2LT5wZXJmLmV4Y2x1c2l2ZV9zdHJlYW0gPSBOVUxM
OwogCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCiBlcnJfbG9j
azoKQEAgLTI2OTIsNiArMjc0MCw4IEBAIHN0YXRpYyBpbnQgaTkxNV9vYV9zdHJlYW1faW5pdChz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAogCiAJZnJlZV9vYV9jb25maWdzKHN0cmVh
bSk7CiAKKwlpOTE1X2dlbV9vYmplY3RfcHV0KHN0cmVhbS0+aW5pdGlhbF9vYV9jb25maWdfYm8p
OworCiBlcnJfY29uZmlnOgogCWZyZWVfbm9hX3dhaXQoc3RyZWFtKTsKIAotLSAKMi4yMy4wCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1E51439EFAA
	for <lists+intel-gfx@lfdr.de>; Tue,  8 Jun 2021 09:36:21 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 813686EAD6;
	Tue,  8 Jun 2021 07:36:19 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 38BC36EAD6
 for <intel-gfx@lists.freedesktop.org>; Tue,  8 Jun 2021 07:36:18 +0000 (UTC)
IronPort-SDR: tGb854sLHqxnbL2TB/zFcntpUEAEK61GTH5DsytgK2PY8vpTyddk6CmlRw1zugx58Ytxg3qN0H
 ZBUvE5EP1pzA==
X-IronPort-AV: E=McAfee;i="6200,9189,10008"; a="204814017"
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="204814017"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jun 2021 00:36:13 -0700
IronPort-SDR: PyHPrYcUH9PE1bx5iKN1DrlDXEgkJfCiqSO3s+KDAxXes14zlppDE6DnfPpmKwML9uKehFcCik
 3w2mfJOY/3lg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="485116147"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.171])
 by fmsmga002.fm.intel.com with SMTP; 08 Jun 2021 00:36:11 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 08 Jun 2021 10:36:10 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  8 Jun 2021 10:35:48 +0300
Message-Id: <20210608073603.2408-3-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20210608073603.2408-1-ville.syrjala@linux.intel.com>
References: <20210608073603.2408-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 02/17] drm/i915: Introduce hsw_get_buf_trans()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkFs
bCB0aGUgb3RoZXIgcGxhdGZvcm1zIGhhbmRsZSB0aGUgb3V0cHV0X3R5cGUgc3R1ZmYgaW4gdGhl
aXIKKl9nZXRfYnVmX3RyYW5zKCkgZnVuY3Rpb25zLiBEbyB0aGUgc2FtZSBmb3IgaHN3L2Jkdy9z
a2wuCgpSZXZpZXdlZC1ieTogSmFuaSBOaWt1bGEgPGphbmkubmlrdWxhQGludGVsLmNvbT4KU2ln
bmVkLW9mZi1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNv
bT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCAy
NyArKysrLS0tLS0tLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaV9idWZfdHJhbnMu
YyAgICB8IDQzICsrKysrKysrKysrKystLS0tLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RkaV9idWZfdHJhbnMuaCAgICB8IDEwICsrLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2ZkaS5jICAgICAgfCAgMiArLQogNCBmaWxlcyBjaGFuZ2VkLCA0MyBpbnNlcnRp
b25zKCspLCAzOSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuYwppbmRleCAxMDdlNDkwM2I2OTcuLjMzZTk0MDMwMDkwZiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCkBAIC0xMDQsMTIgKzEwNCwxMCBAQCB2b2lkIGhz
d19wcmVwYXJlX2RwX2RkaV9idWZmZXJzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAog
CWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKIAljb25zdCBzdHJ1Y3QgaHN3X2RkaV9i
dWZfdHJhbnMgKmRkaV90cmFuc2xhdGlvbnM7CiAKLQlpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShj
cnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfQU5BTE9HKSkKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IGhz
d19kZGlfZ2V0X2J1Zl90cmFuc19mZGkoZGV2X3ByaXYsICZuX2VudHJpZXMpOwotCWVsc2UgaWYg
KGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCi0JCWRk
aV90cmFuc2xhdGlvbnMgPSBoc3dfZGRpX2dldF9idWZfdHJhbnNfZWRwKGVuY29kZXIsICZuX2Vu
dHJpZXMpOwotCWVsc2UKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IGhzd19kZGlfZ2V0X2J1Zl90cmFu
c19kcChlbmNvZGVyLCAmbl9lbnRyaWVzKTsKKwlkZGlfdHJhbnNsYXRpb25zID0gaHN3X2dldF9i
dWZfdHJhbnMoZW5jb2RlciwgY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CisKKwlpZiAoZHJtX1dB
Uk5fT05fT05DRSgmZGV2X3ByaXYtPmRybSwgIWRkaV90cmFuc2xhdGlvbnMpKQorCQlyZXR1cm47
CiAKIAkvKiBJZiB3ZSdyZSBib29zdGluZyB0aGUgY3VycmVudCwgc2V0IGJpdCAzMSBvZiB0cmFu
czEgKi8KIAlpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpID09IDkgJiYgIUlTX0JST1hUT04oZGV2
X3ByaXYpICYmCkBAIC0xMzAsNiArMTI4LDcgQEAgdm9pZCBoc3dfcHJlcGFyZV9kcF9kZGlfYnVm
ZmVycyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKICAqIEhETUkvRFZJIHVzZSBjYXNl
cy4KICAqLwogc3RhdGljIHZvaWQgaHN3X3ByZXBhcmVfaGRtaV9kZGlfYnVmZmVycyhzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlLAogCQkJCQkgaW50IGxldmVsKQogewogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwpAQCAtMTM4LDcg
KzEzNyw3IEBAIHN0YXRpYyB2b2lkIGhzd19wcmVwYXJlX2hkbWlfZGRpX2J1ZmZlcnMoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0
OwogCWNvbnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAqZGRpX3RyYW5zbGF0aW9uczsKIAot
CWRkaV90cmFuc2xhdGlvbnMgPSBoc3dfZGRpX2dldF9idWZfdHJhbnNfaGRtaShlbmNvZGVyLCAm
bl9lbnRyaWVzKTsKKwlkZGlfdHJhbnNsYXRpb25zID0gaHN3X2dldF9idWZfdHJhbnMoZW5jb2Rl
ciwgY3J0Y19zdGF0ZSwgICZuX2VudHJpZXMpOwogCiAJaWYgKGRybV9XQVJOX09OX09OQ0UoJmRl
dl9wcml2LT5kcm0sICFkZGlfdHJhbnNsYXRpb25zKSkKIAkJcmV0dXJuOwpAQCAtOTQ4LDEyICs5
NDcsNyBAQCBzdGF0aWMgdm9pZCBza2xfZGRpX3NldF9pYm9vc3Qoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJCWNvbnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAqZGRpX3RyYW5z
bGF0aW9uczsKIAkJaW50IG5fZW50cmllczsKIAotCQlpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShj
cnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfSERNSSkpCi0JCQlkZGlfdHJhbnNsYXRpb25zID0gaHN3
X2RkaV9nZXRfYnVmX3RyYW5zX2hkbWkoZW5jb2RlciwgJm5fZW50cmllcyk7Ci0JCWVsc2UgaWYg
KGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCi0JCQlk
ZGlfdHJhbnNsYXRpb25zID0gaHN3X2RkaV9nZXRfYnVmX3RyYW5zX2VkcChlbmNvZGVyLCAmbl9l
bnRyaWVzKTsKLQkJZWxzZQotCQkJZGRpX3RyYW5zbGF0aW9ucyA9IGhzd19kZGlfZ2V0X2J1Zl90
cmFuc19kcChlbmNvZGVyLCAmbl9lbnRyaWVzKTsKKwkJZGRpX3RyYW5zbGF0aW9ucyA9IGhzd19n
ZXRfYnVmX3RyYW5zKGVuY29kZXIsIGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCiAJCWlmIChk
cm1fV0FSTl9PTl9PTkNFKCZkZXZfcHJpdi0+ZHJtLCAhZGRpX3RyYW5zbGF0aW9ucykpCiAJCQly
ZXR1cm47CkBAIC0xMDI3LDEwICsxMDIxLDcgQEAgc3RhdGljIHU4IGludGVsX2RkaV9kcF92b2x0
YWdlX21heChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCX0gZWxzZSBpZiAoSVNfR0VNSU5J
TEFLRShkZXZfcHJpdikgfHwgSVNfQlJPWFRPTihkZXZfcHJpdikpIHsKIAkJYnh0X2dldF9idWZf
dHJhbnMoZW5jb2RlciwgY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAJfSBlbHNlIHsKLQkJaWYg
KGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCi0JCQlo
c3dfZGRpX2dldF9idWZfdHJhbnNfZWRwKGVuY29kZXIsICZuX2VudHJpZXMpOwotCQllbHNlCi0J
CQloc3dfZGRpX2dldF9idWZfdHJhbnNfZHAoZW5jb2RlciwgJm5fZW50cmllcyk7CisJCWhzd19n
ZXRfYnVmX3RyYW5zKGVuY29kZXIsIGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCX0KIAogCWlm
IChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgbl9lbnRyaWVzIDwgMSkpCkBAIC0zMTQ2LDcg
KzMxMzcsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9lbmFibGVfZGRpX2hkbWkoc3RydWN0IGludGVs
X2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJZWxzZSBpZiAoSVNfR0VNSU5JTEFLRShkZXZfcHJpdikg
fHwgSVNfQlJPWFRPTihkZXZfcHJpdikpCiAJCWJ4dF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29k
ZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAllbHNlCi0JCWhzd19wcmVwYXJlX2hkbWlfZGRpX2J1
ZmZlcnMoZW5jb2RlciwgbGV2ZWwpOworCQloc3dfcHJlcGFyZV9oZG1pX2RkaV9idWZmZXJzKGVu
Y29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAogCWlmIChESVNQTEFZX1ZFUihkZXZfcHJpdikg
PT0gOSAmJiAhSVNfQlJPWFRPTihkZXZfcHJpdikpCiAJCXNrbF9kZGlfc2V0X2lib29zdChlbmNv
ZGVyLCBjcnRjX3N0YXRlLCBsZXZlbCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaV9idWZfdHJhbnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpX2J1Zl90cmFucy5jCmluZGV4IGU4ZTQ2ZDdhNmNlZi4uZjdiNzE3ODM2
M2U4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaV9i
dWZfdHJhbnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaV9i
dWZfdHJhbnMuYwpAQCAtODc1LDggKzg3NSw4IEBAIHN0YXRpYyBpbnQgc2tsX2J1Zl90cmFuc19u
dW1fZW50cmllcyhlbnVtIHBvcnQgcG9ydCwgaW50IG5fZW50cmllcykKIAkJcmV0dXJuIG1pbihu
X2VudHJpZXMsIDkpOwogfQogCi1jb25zdCBzdHJ1Y3QgaHN3X2RkaV9idWZfdHJhbnMgKgotaHN3
X2RkaV9nZXRfYnVmX3RyYW5zX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQg
Km5fZW50cmllcykKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaHN3X2RkaV9idWZfdHJhbnMgKgoraHN3
X2dldF9idWZfdHJhbnNfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGludCAqbl9l
bnRyaWVzKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZW5jb2Rlci0+YmFzZS5kZXYpOwogCkBAIC05MDQsOCArOTA0LDggQEAgaHN3X2RkaV9nZXRfYnVm
X3RyYW5zX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQgKm5fZW50cmllcykK
IAlyZXR1cm4gTlVMTDsKIH0KIAotY29uc3Qgc3RydWN0IGhzd19kZGlfYnVmX3RyYW5zICoKLWhz
d19kZGlfZ2V0X2J1Zl90cmFuc19lZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGlu
dCAqbl9lbnRyaWVzKQorc3RhdGljIGNvbnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAqCito
c3dfZ2V0X2J1Zl90cmFuc19lZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGludCAq
bl9lbnRyaWVzKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCkBAIC05MjUsMTAgKzkyNSwxMiBAQCBoc3dfZGRpX2dl
dF9idWZfdHJhbnNfZWRwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQgKm5fZW50
cmllcykKIAlyZXR1cm4gTlVMTDsKIH0KIAotY29uc3Qgc3RydWN0IGhzd19kZGlfYnVmX3RyYW5z
ICoKLWhzd19kZGlfZ2V0X2J1Zl90cmFuc19mZGkoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LAotCQkJICBpbnQgKm5fZW50cmllcykKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaHN3X2Rk
aV9idWZfdHJhbnMgKgoraHN3X2dldF9idWZfdHJhbnNfZmRpKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAorCQkgICAgICBpbnQgKm5fZW50cmllcykKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwogCWlmIChJ
U19CUk9BRFdFTEwoZGV2X3ByaXYpKSB7CiAJCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKGJkd19k
ZGlfdHJhbnNsYXRpb25zX2ZkaSk7CiAJCXJldHVybiBiZHdfZGRpX3RyYW5zbGF0aW9uc19mZGk7
CkBAIC05NDEsOSArOTQzLDkgQEAgaHN3X2RkaV9nZXRfYnVmX3RyYW5zX2ZkaShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJcmV0dXJuIE5VTEw7CiB9CiAKLWNvbnN0IHN0cnVj
dCBoc3dfZGRpX2J1Zl90cmFucyAqCi1oc3dfZGRpX2dldF9idWZfdHJhbnNfaGRtaShzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKLQkJCSAgIGludCAqbl9lbnRyaWVzKQorc3RhdGljIGNv
bnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAqCitoc3dfZ2V0X2J1Zl90cmFuc19oZG1pKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkgICAgICAgaW50ICpuX2VudHJpZXMpCiB7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5i
YXNlLmRldik7CiAKQEAgLTk2MSw2ICs5NjMsMjEgQEAgaHN3X2RkaV9nZXRfYnVmX3RyYW5zX2hk
bWkoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJcmV0dXJuIE5VTEw7CiB9CiAKK2Nv
bnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAqCitoc3dfZ2V0X2J1Zl90cmFucyhzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKKwkJICBpbnQgKm5fZW50cmllcykKK3sKKwlpZiAoaW50ZWxfY3J0Y19o
YXNfdHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfQU5BTE9HKSkKKwkJcmV0dXJuIGhzd19n
ZXRfYnVmX3RyYW5zX2ZkaShlbmNvZGVyLCBuX2VudHJpZXMpOworCWVsc2UgaWYgKGludGVsX2Ny
dGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0hETUkpKQorCQlyZXR1cm4gaHN3
X2dldF9idWZfdHJhbnNfaGRtaShlbmNvZGVyLCBuX2VudHJpZXMpOworCWVsc2UgaWYgKGludGVs
X2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpCisJCXJldHVybiBo
c3dfZ2V0X2J1Zl90cmFuc19lZHAoZW5jb2Rlciwgbl9lbnRyaWVzKTsKKwllbHNlCisJCXJldHVy
biBoc3dfZ2V0X2J1Zl90cmFuc19kcChlbmNvZGVyLCBuX2VudHJpZXMpOworfQorCiBzdGF0aWMg
Y29uc3Qgc3RydWN0IGJ4dF9kZGlfYnVmX3RyYW5zICoKIGJ4dF9nZXRfYnVmX3RyYW5zX2RwKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQgKm5fZW50cmllcykKIHsKQEAgLTE0Mjcs
MTMgKzE0NDQsMTMgQEAgaW50IGludGVsX2RkaV9oZG1pX251bV9lbnRyaWVzKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogCQlieHRfZ2V0X2J1Zl90cmFuc19oZG1pKGVuY29kZXIsICZu
X2VudHJpZXMpOwogCQkqZGVmYXVsdF9lbnRyeSA9IG5fZW50cmllcyAtIDE7CiAJfSBlbHNlIGlm
IChESVNQTEFZX1ZFUihkZXZfcHJpdikgPT0gOSkgewotCQloc3dfZGRpX2dldF9idWZfdHJhbnNf
aGRtaShlbmNvZGVyLCAmbl9lbnRyaWVzKTsKKwkJaHN3X2dldF9idWZfdHJhbnNfaGRtaShlbmNv
ZGVyLCAmbl9lbnRyaWVzKTsKIAkJKmRlZmF1bHRfZW50cnkgPSA4OwogCX0gZWxzZSBpZiAoSVNf
QlJPQURXRUxMKGRldl9wcml2KSkgewotCQloc3dfZGRpX2dldF9idWZfdHJhbnNfaGRtaShlbmNv
ZGVyLCAmbl9lbnRyaWVzKTsKKwkJaHN3X2dldF9idWZfdHJhbnNfaGRtaShlbmNvZGVyLCAmbl9l
bnRyaWVzKTsKIAkJKmRlZmF1bHRfZW50cnkgPSA3OwogCX0gZWxzZSBpZiAoSVNfSEFTV0VMTChk
ZXZfcHJpdikpIHsKLQkJaHN3X2RkaV9nZXRfYnVmX3RyYW5zX2hkbWkoZW5jb2RlciwgJm5fZW50
cmllcyk7CisJCWhzd19nZXRfYnVmX3RyYW5zX2hkbWkoZW5jb2RlciwgJm5fZW50cmllcyk7CiAJ
CSpkZWZhdWx0X2VudHJ5ID0gNjsKIAl9IGVsc2UgewogCQlkcm1fV0FSTigmZGV2X3ByaXYtPmRy
bSwgMSwgImRkaSB0cmFuc2xhdGlvbiB0YWJsZSBtaXNzaW5nXG4iKTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpX2J1Zl90cmFucy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGlfYnVmX3RyYW5zLmgKaW5kZXggMWI4ZDNl
ZjdmMDZmLi40MjhmMWYzNDMzNDEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpX2J1Zl90cmFucy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpX2J1Zl90cmFucy5oCkBAIC01MiwxMyArNTIsOSBAQCBpbnQgaW50ZWxf
ZGRpX2hkbWlfbnVtX2VudHJpZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkg
ICAgICAgaW50ICpkZWZhdWx0X2VudHJ5KTsKIAogY29uc3Qgc3RydWN0IGhzd19kZGlfYnVmX3Ry
YW5zICoKLWhzd19kZGlfZ2V0X2J1Zl90cmFuc19lZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsIGludCAqbl9lbnRyaWVzKTsKLWNvbnN0IHN0cnVjdCBoc3dfZGRpX2J1Zl90cmFucyAq
Ci1oc3dfZGRpX2dldF9idWZfdHJhbnNfZmRpKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwgaW50ICpuX2VudHJpZXMpOwotY29uc3Qgc3RydWN0IGhzd19kZGlfYnVmX3RyYW5zICoK
LWhzd19kZGlfZ2V0X2J1Zl90cmFuc19oZG1pKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
LCBpbnQgKm5fZW50cmllcyk7Ci1jb25zdCBzdHJ1Y3QgaHN3X2RkaV9idWZfdHJhbnMgKgotaHN3
X2RkaV9nZXRfYnVmX3RyYW5zX2RwKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLCBpbnQg
Km5fZW50cmllcyk7Citoc3dfZ2V0X2J1Zl90cmFucyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlciwKKwkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJ
ICBpbnQgKm5fZW50cmllcyk7CiAKIGNvbnN0IHN0cnVjdCBieHRfZGRpX2J1Zl90cmFucyAqCiBi
eHRfZ2V0X2J1Zl90cmFucyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmRpLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2ZkaS5jCmluZGV4IGE4MDZlMWI4MzYxMy4uYzYwMmVk
MTdjNGZiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Zk
aS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZmRpLmMKQEAgLTU2
OSw3ICs1NjksNyBAQCB2b2lkIGhzd19mZGlfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciwKIAl1MzIgdGVtcCwgaSwgcnhfY3RsX3ZhbDsKIAlpbnQgbl9lbnRyaWVzOwog
Ci0JaHN3X2RkaV9nZXRfYnVmX3RyYW5zX2ZkaShkZXZfcHJpdiwgJm5fZW50cmllcyk7CisJaHN3
X2dldF9idWZfdHJhbnMoZW5jb2RlciwgY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAKIAloc3df
cHJlcGFyZV9kcF9kZGlfYnVmZmVycyhlbmNvZGVyLCBjcnRjX3N0YXRlKTsKIAotLSAKMi4zMS4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

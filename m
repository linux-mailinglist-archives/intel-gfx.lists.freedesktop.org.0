Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id C59648635B
	for <lists+intel-gfx@lfdr.de>; Thu,  8 Aug 2019 15:44:06 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E63036E840;
	Thu,  8 Aug 2019 13:44:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B5CCB6E83B
 for <intel-gfx@lists.freedesktop.org>; Thu,  8 Aug 2019 13:43:59 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 08 Aug 2019 06:38:50 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,361,1559545200"; d="scan'208";a="193158142"
Received: from jnikula-mobl3.fi.intel.com (HELO localhost) ([10.237.66.150])
 by fmsmga001.fm.intel.com with ESMTP; 08 Aug 2019 06:38:48 -0700
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  8 Aug 2019 16:42:43 +0300
Message-Id: <bc458fa5e62fc8dae46216666f64ed6976fafaee.1565271681.git.jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1565271681.git.jani.nikula@intel.com>
References: <cover.1565271681.git.jani.nikula@intel.com>
MIME-Version: 1.0
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Subject: [Intel-gfx] [PATCH 04/10] drm/i915: move printing and load error
 inject to i915_utils.[ch]
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2VlbXMgbGlrZSBhIGJldHRlciBmaXQuIFJlZHVjZSBjbHV0dGVyIGluIGk5MTVfZHJ2LltjaF0u
CgpTaWduZWQtb2ZmLWJ5OiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFAaW50ZWwuY29tPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L01ha2VmaWxlICAgICB8ICAxICsKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmMgICB8IDY5IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgIHwgMjggLS0tLS0tLS0tLS0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuYyB8IDc4ICsrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuaCB8IDMwICsrKysrKysrKysr
KwogNSBmaWxlcyBjaGFuZ2VkLCAxMDkgaW5zZXJ0aW9ucygrKSwgOTcgZGVsZXRpb25zKC0pCiBj
cmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV91dGlscy5jCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9NYWtlZmlsZQppbmRleCBhYjdmYWVlZTg4ZDcuLmFlZDZiYWVmYmU1NiAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvTWFrZWZpbGUKQEAgLTQ3LDYgKzQ3LDcgQEAgaTkxNS15ICs9IGk5MTVfZHJ2Lm8gXAogCSAg
aTkxNV9zY2F0dGVybGlzdC5vIFwKIAkgIGk5MTVfc3VzcGVuZC5vIFwKIAkgIGk5MTVfc3lzZnMu
byBcCisJICBpOTE1X3V0aWxzLm8gXAogCSAgaW50ZWxfY3NyLm8gXAogCSAgaW50ZWxfZGV2aWNl
X2luZm8ubyBcCiAJICBpbnRlbF9wY2gubyBcCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCAx
MzE5YWVlMTQ4YmUuLjljZDc1Yzc2YzI1NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC03
Niw3NSArNzYsNiBAQAogCiBzdGF0aWMgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVyOwogCi0jaWYg
SVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUcpCi1zdGF0aWMgdW5zaWduZWQgaW50IGk5
MTVfcHJvYmVfZmFpbF9jb3VudDsKLQotaW50IF9faTkxNV9pbmplY3RfbG9hZF9lcnJvcihzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgaW50IGVyciwKLQkJCSAgICAgY29uc3QgY2hhciAq
ZnVuYywgaW50IGxpbmUpCi17Ci0JaWYgKGk5MTVfcHJvYmVfZmFpbF9jb3VudCA+PSBpOTE1X21v
ZHBhcmFtcy5pbmplY3RfbG9hZF9mYWlsdXJlKQotCQlyZXR1cm4gMDsKLQotCWlmICgrK2k5MTVf
cHJvYmVfZmFpbF9jb3VudCA8IGk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2ZhaWx1cmUpCi0J
CXJldHVybiAwOwotCi0JX19pOTE1X3ByaW50ayhpOTE1LCBLRVJOX0lORk8sCi0JCSAgICAgICJJ
bmplY3RpbmcgZmFpbHVyZSAlZCBhdCBjaGVja3BvaW50ICV1IFslczolZF1cbiIsCi0JCSAgICAg
IGVyciwgaTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVyZSwgZnVuYywgbGluZSk7Ci0J
aTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVyZSA9IDA7Ci0JcmV0dXJuIGVycjsKLX0K
LQotYm9vbCBpOTE1X2Vycm9yX2luamVjdGVkKHZvaWQpCi17Ci0JcmV0dXJuIGk5MTVfcHJvYmVf
ZmFpbF9jb3VudCAmJiAhaTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVyZTsKLX0KLQot
I2VuZGlmCi0KLSNkZWZpbmUgRkRPX0JVR19VUkwgImh0dHBzOi8vYnVncy5mcmVlZGVza3RvcC5v
cmcvZW50ZXJfYnVnLmNnaT9wcm9kdWN0PURSSSIKLSNkZWZpbmUgRkRPX0JVR19NU0cgIlBsZWFz
ZSBmaWxlIGEgYnVnIGF0ICIgRkRPX0JVR19VUkwgIiBhZ2FpbnN0IERSTS9JbnRlbCAiIFwKLQkJ
ICAgICJwcm92aWRpbmcgdGhlIGRtZXNnIGxvZyBieSBib290aW5nIHdpdGggZHJtLmRlYnVnPTB4
ZiIKLQotdm9pZAotX19pOTE1X3ByaW50ayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsIGNvbnN0IGNoYXIgKmxldmVsLAotCSAgICAgIGNvbnN0IGNoYXIgKmZtdCwgLi4uKQotewot
CXN0YXRpYyBib29sIHNob3duX2J1Z19vbmNlOwotCXN0cnVjdCBkZXZpY2UgKmtkZXYgPSBkZXZf
cHJpdi0+ZHJtLmRldjsKLQlib29sIGlzX2Vycm9yID0gbGV2ZWxbMV0gPD0gS0VSTl9FUlJbMV07
Ci0JYm9vbCBpc19kZWJ1ZyA9IGxldmVsWzFdID09IEtFUk5fREVCVUdbMV07Ci0Jc3RydWN0IHZh
X2Zvcm1hdCB2YWY7Ci0JdmFfbGlzdCBhcmdzOwotCi0JaWYgKGlzX2RlYnVnICYmICEoZHJtX2Rl
YnVnICYgRFJNX1VUX0RSSVZFUikpCi0JCXJldHVybjsKLQotCXZhX3N0YXJ0KGFyZ3MsIGZtdCk7
Ci0KLQl2YWYuZm10ID0gZm10OwotCXZhZi52YSA9ICZhcmdzOwotCi0JaWYgKGlzX2Vycm9yKQot
CQlkZXZfcHJpbnRrKGxldmVsLCBrZGV2LCAiJXBWIiwgJnZhZik7Ci0JZWxzZQotCQlkZXZfcHJp
bnRrKGxldmVsLCBrZGV2LCAiWyIgRFJNX05BTUUgIjolcHNdICVwViIsCi0JCQkgICBfX2J1aWx0
aW5fcmV0dXJuX2FkZHJlc3MoMCksICZ2YWYpOwotCi0JdmFfZW5kKGFyZ3MpOwotCi0JaWYgKGlz
X2Vycm9yICYmICFzaG93bl9idWdfb25jZSkgewotCQkvKgotCQkgKiBBc2sgdGhlIHVzZXIgdG8g
ZmlsZSBhIGJ1ZyByZXBvcnQgZm9yIHRoZSBlcnJvciwgZXhjZXB0Ci0JCSAqIGlmIHRoZXkgbWF5
IGhhdmUgY2F1c2VkIHRoZSBidWcgYnkgZmlkZGxpbmcgd2l0aCB1bnNhZmUKLQkJICogbW9kdWxl
IHBhcmFtZXRlcnMuCi0JCSAqLwotCQlpZiAoIXRlc3RfdGFpbnQoVEFJTlRfVVNFUikpCi0JCQlk
ZXZfbm90aWNlKGtkZXYsICIlcyIsIEZET19CVUdfTVNHKTsKLQkJc2hvd25fYnVnX29uY2UgPSB0
cnVlOwotCX0KLX0KLQogc3RhdGljIGludCBpOTE1X2dldF9icmlkZ2VfZGV2KHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAlpbnQgZG9tYWluID0gcGNpX2RvbWFpbl9ucihk
ZXZfcHJpdi0+ZHJtLnBkZXYtPmJ1cyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCAyMWM4
NzMwOWNjMzIuLjVhZmM5ZGExMzNjMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0xMDQs
MjcgKzEwNCw2IEBACiAjZGVmaW5lIERSSVZFUl9EQVRFCQkiMjAxOTA3MzAiCiAjZGVmaW5lIERS
SVZFUl9USU1FU1RBTVAJMTU2NDUxMjYyNAogCi0jaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5
MTVfREVCVUcpCi0KLWludCBfX2k5MTVfaW5qZWN0X2xvYWRfZXJyb3Ioc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUsIGludCBlcnIsCi0JCQkgICAgIGNvbnN0IGNoYXIgKmZ1bmMsIGludCBs
aW5lKTsKLSNkZWZpbmUgaTkxNV9pbmplY3RfbG9hZF9lcnJvcihfaTkxNSwgX2VycikgXAotCV9f
aTkxNV9pbmplY3RfbG9hZF9lcnJvcigoX2k5MTUpLCAoX2VyciksIF9fZnVuY19fLCBfX0xJTkVf
XykKLWJvb2wgaTkxNV9lcnJvcl9pbmplY3RlZCh2b2lkKTsKLQotI2Vsc2UKLQotI2RlZmluZSBp
OTE1X2luamVjdF9sb2FkX2Vycm9yKF9pOTE1LCBfZXJyKSAwCi0jZGVmaW5lIGk5MTVfZXJyb3Jf
aW5qZWN0ZWQoKSBmYWxzZQotCi0jZW5kaWYKLQotI2RlZmluZSBpOTE1X2luamVjdF9wcm9iZV9m
YWlsdXJlKGk5MTUpIGk5MTVfaW5qZWN0X2xvYWRfZXJyb3IoKGk5MTUpLCAtRU5PREVWKQotCi0j
ZGVmaW5lIGk5MTVfcHJvYmVfZXJyb3IoaTkxNSwgZm10LCAuLi4pCQkJCSAgIFwKLQlfX2k5MTVf
cHJpbnRrKGk5MTUsIGk5MTVfZXJyb3JfaW5qZWN0ZWQoKSA/IEtFUk5fREVCVUcgOiBLRVJOX0VS
UiwgXAotCQkgICAgICBmbXQsICMjX19WQV9BUkdTX18pCi0KIHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0OwogCiBlbnVtIGhwZF9waW4gewpAQCAtMjI3OCwxMyArMjI1Nyw2IEBAIGludGVsX2dn
dHRfdXBkYXRlX25lZWRzX3Z0ZF93YShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiB9CiAKIC8qIGk5MTVfZHJ2LmMgKi8KLXZvaWQgX19wcmludGYoMywgNCkKLV9faTkxNV9wcmlu
dGsoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBjb25zdCBjaGFyICpsZXZlbCwK
LQkgICAgICBjb25zdCBjaGFyICpmbXQsIC4uLik7Ci0KLSNkZWZpbmUgaTkxNV9yZXBvcnRfZXJy
b3IoZGV2X3ByaXYsIGZtdCwgLi4uKQkJCQkgICBcCi0JX19pOTE1X3ByaW50ayhkZXZfcHJpdiwg
S0VSTl9FUlIsIGZtdCwgIyNfX1ZBX0FSR1NfXykKLQogI2lmZGVmIENPTkZJR19DT01QQVQKIGxv
bmcgaTkxNV9jb21wYXRfaW9jdGwoc3RydWN0IGZpbGUgKmZpbHAsIHVuc2lnbmVkIGludCBjbWQs
IHVuc2lnbmVkIGxvbmcgYXJnKTsKICNlbHNlCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3V0aWxzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmMKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4xNmFjZGY3YmRiZTYKLS0tIC9k
ZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmMKQEAgLTAsMCAr
MSw3OCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAorLyoKKyAqIENvcHlyaWdo
dCDCqSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2luY2x1ZGUgPGRybS9kcm1fZHJ2
Lmg+CisKKyNpbmNsdWRlICJpOTE1X2Rydi5oIgorI2luY2x1ZGUgImk5MTVfdXRpbHMuaCIKKwor
I2RlZmluZSBGRE9fQlVHX1VSTCAiaHR0cHM6Ly9idWdzLmZyZWVkZXNrdG9wLm9yZy9lbnRlcl9i
dWcuY2dpP3Byb2R1Y3Q9RFJJIgorI2RlZmluZSBGRE9fQlVHX01TRyAiUGxlYXNlIGZpbGUgYSBi
dWcgYXQgIiBGRE9fQlVHX1VSTCAiIGFnYWluc3QgRFJNL0ludGVsICIgXAorCQkgICAgInByb3Zp
ZGluZyB0aGUgZG1lc2cgbG9nIGJ5IGJvb3Rpbmcgd2l0aCBkcm0uZGVidWc9MHhmIgorCit2b2lk
CitfX2k5MTVfcHJpbnRrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgY29uc3Qg
Y2hhciAqbGV2ZWwsCisJICAgICAgY29uc3QgY2hhciAqZm10LCAuLi4pCit7CisJc3RhdGljIGJv
b2wgc2hvd25fYnVnX29uY2U7CisJc3RydWN0IGRldmljZSAqa2RldiA9IGRldl9wcml2LT5kcm0u
ZGV2OworCWJvb2wgaXNfZXJyb3IgPSBsZXZlbFsxXSA8PSBLRVJOX0VSUlsxXTsKKwlib29sIGlz
X2RlYnVnID0gbGV2ZWxbMV0gPT0gS0VSTl9ERUJVR1sxXTsKKwlzdHJ1Y3QgdmFfZm9ybWF0IHZh
ZjsKKwl2YV9saXN0IGFyZ3M7CisKKwlpZiAoaXNfZGVidWcgJiYgIShkcm1fZGVidWcgJiBEUk1f
VVRfRFJJVkVSKSkKKwkJcmV0dXJuOworCisJdmFfc3RhcnQoYXJncywgZm10KTsKKworCXZhZi5m
bXQgPSBmbXQ7CisJdmFmLnZhID0gJmFyZ3M7CisKKwlpZiAoaXNfZXJyb3IpCisJCWRldl9wcmlu
dGsobGV2ZWwsIGtkZXYsICIlcFYiLCAmdmFmKTsKKwllbHNlCisJCWRldl9wcmludGsobGV2ZWws
IGtkZXYsICJbIiBEUk1fTkFNRSAiOiVwc10gJXBWIiwKKwkJCSAgIF9fYnVpbHRpbl9yZXR1cm5f
YWRkcmVzcygwKSwgJnZhZik7CisKKwl2YV9lbmQoYXJncyk7CisKKwlpZiAoaXNfZXJyb3IgJiYg
IXNob3duX2J1Z19vbmNlKSB7CisJCS8qCisJCSAqIEFzayB0aGUgdXNlciB0byBmaWxlIGEgYnVn
IHJlcG9ydCBmb3IgdGhlIGVycm9yLCBleGNlcHQKKwkJICogaWYgdGhleSBtYXkgaGF2ZSBjYXVz
ZWQgdGhlIGJ1ZyBieSBmaWRkbGluZyB3aXRoIHVuc2FmZQorCQkgKiBtb2R1bGUgcGFyYW1ldGVy
cy4KKwkJICovCisJCWlmICghdGVzdF90YWludChUQUlOVF9VU0VSKSkKKwkJCWRldl9ub3RpY2Uo
a2RldiwgIiVzIiwgRkRPX0JVR19NU0cpOworCQlzaG93bl9idWdfb25jZSA9IHRydWU7CisJfQor
fQorCisjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUcpCitzdGF0aWMgdW5zaWdu
ZWQgaW50IGk5MTVfcHJvYmVfZmFpbF9jb3VudDsKKworaW50IF9faTkxNV9pbmplY3RfbG9hZF9l
cnJvcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgaW50IGVyciwKKwkJCSAgICAgY29u
c3QgY2hhciAqZnVuYywgaW50IGxpbmUpCit7CisJaWYgKGk5MTVfcHJvYmVfZmFpbF9jb3VudCA+
PSBpOTE1X21vZHBhcmFtcy5pbmplY3RfbG9hZF9mYWlsdXJlKQorCQlyZXR1cm4gMDsKKworCWlm
ICgrK2k5MTVfcHJvYmVfZmFpbF9jb3VudCA8IGk5MTVfbW9kcGFyYW1zLmluamVjdF9sb2FkX2Zh
aWx1cmUpCisJCXJldHVybiAwOworCisJX19pOTE1X3ByaW50ayhpOTE1LCBLRVJOX0lORk8sCisJ
CSAgICAgICJJbmplY3RpbmcgZmFpbHVyZSAlZCBhdCBjaGVja3BvaW50ICV1IFslczolZF1cbiIs
CisJCSAgICAgIGVyciwgaTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVyZSwgZnVuYywg
bGluZSk7CisJaTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVyZSA9IDA7CisJcmV0dXJu
IGVycjsKK30KKworYm9vbCBpOTE1X2Vycm9yX2luamVjdGVkKHZvaWQpCit7CisJcmV0dXJuIGk5
MTVfcHJvYmVfZmFpbF9jb3VudCAmJiAhaTkxNV9tb2RwYXJhbXMuaW5qZWN0X2xvYWRfZmFpbHVy
ZTsKK30KKworI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0
aWxzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKaW5kZXggMGMwZmRhMzYz
MzRkLi5kNjUyYmE1ZDIzMjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
dXRpbHMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKQEAgLTMxLDYg
KzMxLDggQEAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogI2luY2x1ZGUgPGxpbnV4L3dvcmtx
dWV1ZS5oPgogCitzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKKwogI3VuZGVmIFdBUk5fT04KIC8q
IE1hbnkgZ2NjIHNlZW0gdG8gbm8gc2VlIHRocm91Z2ggdGhpcyBhbmQgZmFsbCBvdmVyIDooICov
CiAjaWYgMApAQCAtNDksNiArNTEsMzQgQEAKICNkZWZpbmUgTUlTU0lOR19DQVNFKHgpIFdBUk4o
MSwgIk1pc3NpbmcgY2FzZSAoJXMgPT0gJWxkKVxuIiwgXAogCQkJICAgICBfX3N0cmluZ2lmeSh4
KSwgKGxvbmcpKHgpKQogCit2b2lkIF9fcHJpbnRmKDMsIDQpCitfX2k5MTVfcHJpbnRrKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgY29uc3QgY2hhciAqbGV2ZWwsCisJICAgICAg
Y29uc3QgY2hhciAqZm10LCAuLi4pOworCisjZGVmaW5lIGk5MTVfcmVwb3J0X2Vycm9yKGRldl9w
cml2LCBmbXQsIC4uLikJCQkJICAgXAorCV9faTkxNV9wcmludGsoZGV2X3ByaXYsIEtFUk5fRVJS
LCBmbXQsICMjX19WQV9BUkdTX18pCisKKyNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9E
RUJVRykKKworaW50IF9faTkxNV9pbmplY3RfbG9hZF9lcnJvcihzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwgaW50IGVyciwKKwkJCSAgICAgY29uc3QgY2hhciAqZnVuYywgaW50IGxpbmUp
OworI2RlZmluZSBpOTE1X2luamVjdF9sb2FkX2Vycm9yKF9pOTE1LCBfZXJyKSBcCisJX19pOTE1
X2luamVjdF9sb2FkX2Vycm9yKChfaTkxNSksIChfZXJyKSwgX19mdW5jX18sIF9fTElORV9fKQor
Ym9vbCBpOTE1X2Vycm9yX2luamVjdGVkKHZvaWQpOworCisjZWxzZQorCisjZGVmaW5lIGk5MTVf
aW5qZWN0X2xvYWRfZXJyb3IoX2k5MTUsIF9lcnIpIDAKKyNkZWZpbmUgaTkxNV9lcnJvcl9pbmpl
Y3RlZCgpIGZhbHNlCisKKyNlbmRpZgorCisjZGVmaW5lIGk5MTVfaW5qZWN0X3Byb2JlX2ZhaWx1
cmUoaTkxNSkgaTkxNV9pbmplY3RfbG9hZF9lcnJvcigoaTkxNSksIC1FTk9ERVYpCisKKyNkZWZp
bmUgaTkxNV9wcm9iZV9lcnJvcihpOTE1LCBmbXQsIC4uLikJCQkJICAgXAorCV9faTkxNV9wcmlu
dGsoaTkxNSwgaTkxNV9lcnJvcl9pbmplY3RlZCgpID8gS0VSTl9ERUJVRyA6IEtFUk5fRVJSLCBc
CisJCSAgICAgIGZtdCwgIyNfX1ZBX0FSR1NfXykKKwogI2lmIGRlZmluZWQoR0NDX1ZFUlNJT04p
ICYmIEdDQ19WRVJTSU9OID49IDcwMDAwCiAjZGVmaW5lIGFkZF9vdmVyZmxvd3NfdChULCBBLCBC
KSBcCiAJX19idWlsdGluX2FkZF9vdmVyZmxvd19wKChBKSwgKEIpLCAoVCkwKQotLSAKMi4yMC4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

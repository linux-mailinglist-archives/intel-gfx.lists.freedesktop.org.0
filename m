Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6259423EA37
	for <lists+intel-gfx@lfdr.de>; Fri,  7 Aug 2020 11:22:06 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 057006E994;
	Fri,  7 Aug 2020 09:22:03 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DDA2B6E994;
 Fri,  7 Aug 2020 09:22:01 +0000 (UTC)
IronPort-SDR: mTQo26ML3moA9dHa2c2BZd149xgapvLy2ssHp30sADRc2hwNkotxdTP6B6ZYJY3hG9jRaRoLNf
 nC9onYxLrnbQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9705"; a="171106917"
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="171106917"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:22:01 -0700
IronPort-SDR: 0Bddb+sc7oRV488dQ90VUKiC2mb1rqIJwNytVmDhyse/dC+dVDF8+7WgTyue8/Xie7jREu+eTW
 i4Qb8LWz5+wA==
X-IronPort-AV: E=Sophos;i="5.75,445,1589266800"; d="scan'208";a="333492146"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga007-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 07 Aug 2020 02:21:59 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: igt-dev@lists.freedesktop.org
Date: Fri,  7 Aug 2020 11:19:57 +0200
Message-Id: <20200807092002.32350-12-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
References: <20200807092002.32350-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v2 11/16] tests/core_hotunplug: Follow
 failed subtests with health checks
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org,
 =?UTF-8?q?Micha=C5=82=20Winiarski?= <michal.winiarski@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3VidGVzdHMgbm93IGZvcmNpYmx5IGNhbGwgb3IgcmVxdWVzdCBpZ3RfYWJvcnQgb24gZmFpbHVy
ZXMgaW4gb3JkZXIgdG8KYXZvaWQgc2lsZW50bHkgbGVhdmluZyBhbiBleGVyY2lzZWQgZGV2aWNl
IGluIGFuIHVudXNhYmxlIHN0YXRlLgpIb3dldmVyLCBhIGZhaWx1cmUgaW5zaWRlIGEgc3VidGVz
dCBkb2Vzbid0IGFsd2F5cyBtZWFuIHRoZSBkZXZpY2UgaXMKbm8gbG9uZ2VyIHdvcmtpbmcgY29y
cmVjdGx5IGFuZCByZWJvb3QgaXMgbmVlZGVkLiAgT24gdGhlIG90aGVyIGhhbmQsCmlmIGEgc3Vi
dGVzdCBqdXN0IGZhaWxzIHdpdGhvdXQgYWJvcnRpbmcsIHRoYXQgZG9lc24ndCBtZWFuIGluIHR1
cm4gdGhlCmRldmljZSBpcyBoZWFsdGh5LiAgV2Ugc2hvdWxkIHN0aWxsIHBlcmZvcm0gYSBkZXZp
Y2UgaGVhbHRoIGNoZWNrCmluIHRoYXQgY2FzZSBiZWZvcmUgZGVjaWRpbmcgb24gbmV4dCBzdGVw
cy4KClJldXNlIHRoZSAnZmFpbHVyZScgc3RydWN0dXJlIGZpZWxkIGFzIGEgbWFyayB3aGljaCBp
cyBzZXQgd2hlbiBhCnN1YnRlc3QgZW50ZXJzIGEgY2h1bmsgb2YgY3JpdGljYWwgc3RlcHMgd2hp
Y2ggbXVzdCBiZSBmb2xsb3dlZCBieSBhCnN1Y2Nlc3NmdWwgaGVhbHRoIGNoZWNrIGluIG9yZGVy
IHRvIGF2b2lkIGFib3J0aW5nIHRoZSB0ZXN0IGV4ZWN1dGlvbi4KVGhlbiwgbW92ZSBoZWFsdGgg
Y2hlY2tzIGZyb20gaW5zaWRlIGVhY2ggc3VidGVzdCBib2R5IHRvIGl0cwppbmRpdmlkdWFsIGZv
bGxvdy11cCBpZ3RfZml4dHVyZSBzZWN0aW9uIGZyb20gd2hlcmUgZGV2aWNlIGZpbGUKZGVzY3Jp
cHRvcnMgcG90ZW50aWFsbHkgbGVmdCBvcGVuIGFyZSBjbG9zZWQgYW5kIHRoZSBoZWFsdGggY2hl
Y2sgaXMKcnVuIGlmIHRoZWlndF9zdWJ0ZXN0IHNlY3Rpb24gaGFzIGJlZW4gZXhpdGVkIHdpdGgg
dGhlIG1hcmtlciBzZXQuCkFsc28sIHByZWNlZGUgaGVhbHRoIGNoZWNrIG9wZXJhdGlvbnMgd2l0
aCBhIGRyaXZlciByZWJpbmQgb3IgYnVzCnJlc2NhbiBhdHRlbXB0IGFzIG5lZWRlZC4KCnYyOiBT
dGFydCBlYWNoIHJlY292ZXJ5IHBoYXNlIGZyb20gdW5jb25kaXRpb25hbGx5IGNsb3NpbmcgZmls
ZQogICAgZGVzY3JpcHRvcnMgcG90ZW50aWFsbHkgbGVmdCBvcGVuIGJ5IGEgc3VidGVzdCBiZWZv
cmUgaXQgZW50ZXJlZAogICAgaXRzIGNyaXRpY2FsIHNlY3Rpb24sCiAgLSByZXBsYWNlIGlndF9y
ZXF1aXJlKCkgd2l0aCAnaWYoKSByZXR1cm47JyBjb25zdHJ1Y3QgaW4gcmVjb3ZlcigpIHRvCiAg
ICByZWR1Y2Ugbm9pc2UsCiAgLSByZXBsYWNlICJzdWJ0ZXN0IGZhaWx1cmUiIG1lc3NhZ2UgdXNl
ZCBhcyBhIHJlcXVlc3QgZm9yIGhlYWx0aGNoZWNrCiAgICB3aXRoIGEgbW9yZSBhcHByb3ByaWF0
ZSAibmVlZCBoZWFsdGhjaGVjayIgZm9yIGNsYXJpdHksCiAgLSByZWJhc2Ugb24gY3VycmVudCB1
cHN0cmVhbSBtYXN0ZXIuCgpTaWduZWQtb2ZmLWJ5OiBKYW51c3ogS3J6eXN6dG9maWsgPGphbnVz
ei5rcnp5c3p0b2Zpa0BsaW51eC5pbnRlbC5jb20+ClJldmlld2VkLWJ5OiBNaWNoYcWCIFdpbmlh
cnNraSA8bWljaGFsLndpbmlhcnNraUBpbnRlbC5jb20+ICMgdjEKLS0tCiB0ZXN0cy9jb3JlX2hv
dHVucGx1Zy5jIHwgMTA4ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0t
CiAxIGZpbGUgY2hhbmdlZCwgNzYgaW5zZXJ0aW9ucygrKSwgMzIgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvdGVzdHMvY29yZV9ob3R1bnBsdWcuYyBiL3Rlc3RzL2NvcmVfaG90dW5wbHVnLmMK
aW5kZXggYjk5ODJiMzMwLi4zMTNjNDQ3ODQgMTAwNjQ0Ci0tLSBhL3Rlc3RzL2NvcmVfaG90dW5w
bHVnLmMKKysrIGIvdGVzdHMvY29yZV9ob3R1bnBsdWcuYwpAQCAtNTIsNiArNTIsOSBAQCBzdHJ1
Y3QgaG90dW5wbHVnIHsKIAogc3RhdGljIGludCBsb2NhbF9jbG9zZShpbnQgZmQpCiB7CisJaWYg
KGZkIDwgMCkJLyogbm90IG9wZW4gLSByZXR1cm4gY3VycmVudCBzdGF0dXMgKi8KKwkJcmV0dXJu
IGZkOworCiAJZXJybm8gPSAwOwogCWlmIChjbG9zZShmZCkpCS8qIGNsb3NlIGZhaWx1cmUgLSBy
ZXR1cm4gLWVycm5vIChuZXZlciAtMSkgKi8KIAkJcmV0dXJuIC1lcnJubzsKQEAgLTkxLDExICs5
NCw5IEBAIHN0YXRpYyB2b2lkIGRyaXZlcl91bmJpbmQoc3RydWN0IGhvdHVucGx1ZyAqcHJpdiwg
Y29uc3QgY2hhciAqcHJlZml4KQogewogCWlndF9kZWJ1ZygiJXN1bmJpbmRpbmcgdGhlIGRyaXZl
ciBmcm9tIHRoZSBkZXZpY2VcbiIsIHByZWZpeCk7CiAKLQlwcml2LT5mYWlsdXJlID0gIkRyaXZl
ciB1bmJpbmQgdGltZW91dCEiOwotCWlndF9zZXRfdGltZW91dCg2MCwgcHJpdi0+ZmFpbHVyZSk7
CisJaWd0X3NldF90aW1lb3V0KDYwLCAiRHJpdmVyIHVuYmluZCB0aW1lb3V0ISIpOwogCWlndF9z
eXNmc19zZXQocHJpdi0+ZmQuc3lzZnNfZHJ2LCAidW5iaW5kIiwgcHJpdi0+ZGV2X2J1c19hZGRy
KTsKIAlpZ3RfcmVzZXRfdGltZW91dCgpOwotCXByaXYtPmZhaWx1cmUgPSBOVUxMOwogfQogCiAv
KiBSZS1iaW5kIHRoZSBkcml2ZXIgdG8gdGhlIGRldmljZSAqLwpAQCAtMTAzLDExICsxMDQsOSBA
QCBzdGF0aWMgdm9pZCBkcml2ZXJfYmluZChzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogewogCWln
dF9kZWJ1ZygicmViaW5kaW5nIHRoZSBkcml2ZXIgdG8gdGhlIGRldmljZVxuIik7CiAKLQlwcml2
LT5mYWlsdXJlID0gIkRyaXZlciByZS1iaW5kIHRpbWVvdXQhIjsKLQlpZ3Rfc2V0X3RpbWVvdXQo
NjAsIHByaXYtPmZhaWx1cmUpOworCWlndF9zZXRfdGltZW91dCg2MCwgIkRyaXZlciByZS1iaW5k
IHRpbWVvdXQhIik7CiAJaWd0X3N5c2ZzX3NldChwcml2LT5mZC5zeXNmc19kcnYsICJiaW5kIiwg
cHJpdi0+ZGV2X2J1c19hZGRyKTsKIAlpZ3RfcmVzZXRfdGltZW91dCgpOwotCXByaXYtPmZhaWx1
cmUgPSBOVUxMOwogfQogCiAvKiBSZW1vdmUgKHZpcnR1YWxseSB1bnBsdWcpIHRoZSBkZXZpY2Ug
ZnJvbSBpdHMgYnVzICovCkBAIC0xMjIsMTEgKzEyMSw5IEBAIHN0YXRpYyB2b2lkIGRldmljZV91
bnBsdWcoc3RydWN0IGhvdHVucGx1ZyAqcHJpdiwgY29uc3QgY2hhciAqcHJlZml4KQogCiAJaWd0
X2RlYnVnKCIlc3VucGx1Z2dpbmcgdGhlIGRldmljZVxuIiwgcHJlZml4KTsKIAotCXByaXYtPmZh
aWx1cmUgPSAiRGV2aWNlIHVucGx1ZyB0aW1lb3V0ISI7Ci0JaWd0X3NldF90aW1lb3V0KDYwLCBw
cml2LT5mYWlsdXJlKTsKKwlpZ3Rfc2V0X3RpbWVvdXQoNjAsICJEZXZpY2UgdW5wbHVnIHRpbWVv
dXQhIik7CiAJaWd0X3N5c2ZzX3NldChwcml2LT5mZC5zeXNmc19kZXYsICJyZW1vdmUiLCAiMSIp
OwogCWlndF9yZXNldF90aW1lb3V0KCk7Ci0JcHJpdi0+ZmFpbHVyZSA9IE5VTEw7CiAKIAlwcml2
LT5mZC5zeXNmc19kZXYgPSBsb2NhbF9jbG9zZShwcml2LT5mZC5zeXNmc19kZXYpOwogCWlndF93
YXJuX29uX2YocHJpdi0+ZmQuc3lzZnNfZGV2ICE9IC0xLApAQCAtMTM4LDExICsxMzUsMTUgQEAg
c3RhdGljIHZvaWQgYnVzX3Jlc2NhbihzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogewogCWlndF9k
ZWJ1ZygicmVjb3ZlcmluZyB0aGUgZGV2aWNlXG4iKTsKIAotCXByaXYtPmZhaWx1cmUgPSAiQnVz
IHJlc2NhbiB0aW1lb3V0ISI7Ci0JaWd0X3NldF90aW1lb3V0KDYwLCBwcml2LT5mYWlsdXJlKTsK
KwlpZ3Rfc2V0X3RpbWVvdXQoNjAsICJCdXMgcmVzY2FuIHRpbWVvdXQhIik7CiAJaWd0X3N5c2Zz
X3NldChwcml2LT5mZC5zeXNmc19idXMsICIuLi9yZXNjYW4iLCAiMSIpOwogCWlndF9yZXNldF90
aW1lb3V0KCk7Ci0JcHJpdi0+ZmFpbHVyZSA9IE5VTEw7Cit9CisKK3N0YXRpYyB2b2lkIGNsZWFu
dXAoc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKK3sKKwlwcml2LT5mZC5kcm0gPSBsb2NhbF9jbG9z
ZShwcml2LT5mZC5kcm0pOworCXByaXYtPmZkLnN5c2ZzX2RldiA9IGxvY2FsX2Nsb3NlKHByaXYt
PmZkLnN5c2ZzX2Rldik7CiB9CiAKIHN0YXRpYyB2b2lkIGhlYWx0aGNoZWNrKHN0cnVjdCBob3R1
bnBsdWcgKnByaXYpCkBAIC0xNTAsNiArMTUxLDE4IEBAIHN0YXRpYyB2b2lkIGhlYWx0aGNoZWNr
KHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiAJLyogcHJlc2VydmUgZXJyb3IgY29kZSBwb3RlbnRp
YWxseSBzdG9yZWQgYmVmb3JlIGluIHByaXYtPmZkLmRybSAqLwogCWludCBmZF9kcm07CiAKKwlp
ZiAoZmFjY2Vzc2F0KHByaXYtPmZkLnN5c2ZzX2J1cywgcHJpdi0+ZGV2X2J1c19hZGRyLCBGX09L
LCAwKSkgeworCQlwcml2LT5mYWlsdXJlID0gIkJ1cyByZXNjYW4gZmFpbGVkISI7CisJCWJ1c19y
ZXNjYW4ocHJpdik7CisJCXByaXYtPmZhaWx1cmUgPSBOVUxMOworCX0KKworCWlmIChmYWNjZXNz
YXQocHJpdi0+ZmQuc3lzZnNfZHJ2LCBwcml2LT5kZXZfYnVzX2FkZHIsIEZfT0ssIDApKSB7CisJ
CXByaXYtPmZhaWx1cmUgPSAiRHJpdmVyIHJlLWJpbmQgZmFpbGVkISI7CisJCWRyaXZlcl9iaW5k
KHByaXYpOworCQlwcml2LT5mYWlsdXJlID0gTlVMTDsKKwl9CisKIAkvKiBkZXZpY2UgbmFtZSBt
YXkgaGF2ZSBjaGFuZ2VkLCByZWJ1aWxkIElHVCBkZXZpY2UgbGlzdCAqLwogCWlndF9kZXZpY2Vz
X3NjYW4odHJ1ZSk7CiAKQEAgLTE2OSw2ICsxODIsMTcgQEAgc3RhdGljIHZvaWQgaGVhbHRoY2hl
Y2soc3RydWN0IGhvdHVucGx1ZyAqcHJpdikKIAlpZ3RfYXNzZXJ0X2YoZmRfZHJtID09IC0xLCAi
RGV2aWNlIGNsb3NlIGZhaWxlZFxuIik7CiB9CiAKK3N0YXRpYyB2b2lkIHJlY292ZXIoc3RydWN0
IGhvdHVucGx1ZyAqcHJpdikKK3sKKwljbGVhbnVwKHByaXYpOworCisJaWYgKCFwcml2LT5mYWls
dXJlKQorCQlyZXR1cm47CisJcHJpdi0+ZmFpbHVyZSA9IE5VTEw7CisKKwloZWFsdGhjaGVjayhw
cml2KTsKK30KKwogc3RhdGljIHZvaWQgcG9zdF9oZWFsdGhjaGVjayhzdHJ1Y3QgaG90dW5wbHVn
ICpwcml2KQogewogCWlndF9hYm9ydF9vbl9mKHByaXYtPmZhaWx1cmUsICIlc1xuIiwgcHJpdi0+
ZmFpbHVyZSk7CkBAIC0xOTUsMjAgKzIxOSwyMCBAQCBzdGF0aWMgdm9pZCBzZXRfZmlsdGVyX2Zy
b21fZGV2aWNlKGludCBmZCkKIAogc3RhdGljIHZvaWQgdW5iaW5kX3JlYmluZChzdHJ1Y3QgaG90
dW5wbHVnICpwcml2KQogeworCXByaXYtPmZhaWx1cmUgPSAibmVlZCBoZWFsdGhjaGVjayI7CisK
IAlkcml2ZXJfdW5iaW5kKHByaXYsICIiKTsKIAogCWRyaXZlcl9iaW5kKHByaXYpOwotCi0JaGVh
bHRoY2hlY2socHJpdik7CiB9CiAKIHN0YXRpYyB2b2lkIHVucGx1Z19yZXNjYW4oc3RydWN0IGhv
dHVucGx1ZyAqcHJpdikKIHsKKwlwcml2LT5mYWlsdXJlID0gIm5lZWQgaGVhbHRoY2hlY2siOwor
CiAJZGV2aWNlX3VucGx1Zyhwcml2LCAiIik7CiAKIAlidXNfcmVzY2FuKHByaXYpOwotCi0JaGVh
bHRoY2hlY2socHJpdik7CiB9CiAKIHN0YXRpYyB2b2lkIGhvdHVuYmluZF9sYXRlY2xvc2Uoc3Ry
dWN0IGhvdHVucGx1ZyAqcHJpdikKQEAgLTIxNyw2ICsyNDEsOCBAQCBzdGF0aWMgdm9pZCBob3R1
bmJpbmRfbGF0ZWNsb3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCiAJcHJpdi0+ZmQuZHJtID0g
X19kcm1fb3Blbl9kcml2ZXIoRFJJVkVSX0FOWSk7CiAJaWd0X2Fzc2VydF9mZChwcml2LT5mZC5k
cm0pOwogCisJcHJpdi0+ZmFpbHVyZSA9ICJuZWVkIGhlYWx0aGNoZWNrIjsKKwogCWRyaXZlcl91
bmJpbmQocHJpdiwgImhvdCAiKTsKIAogCWRyaXZlcl9iaW5kKHByaXYpOwpAQCAtMjI0LDggKzI1
MCw2IEBAIHN0YXRpYyB2b2lkIGhvdHVuYmluZF9sYXRlY2xvc2Uoc3RydWN0IGhvdHVucGx1ZyAq
cHJpdikKIAlpZ3RfZGVidWcoImxhdGUgY2xvc2luZyB0aGUgdW5ib3VuZCBkZXZpY2UgaW5zdGFu
Y2VcbiIpOwogCXByaXYtPmZkLmRybSA9IGxvY2FsX2Nsb3NlKHByaXYtPmZkLmRybSk7CiAJaWd0
X3dhcm5fb25fZihwcml2LT5mZC5kcm0gIT0gLTEsICJEZXZpY2UgY2xvc2UgZmFpbGVkXG4iKTsK
LQotCWhlYWx0aGNoZWNrKHByaXYpOwogfQogCiBzdGF0aWMgdm9pZCBob3R1bnBsdWdfbGF0ZWNs
b3NlKHN0cnVjdCBob3R1bnBsdWcgKnByaXYpCkBAIC0yMzQsNiArMjU4LDggQEAgc3RhdGljIHZv
aWQgaG90dW5wbHVnX2xhdGVjbG9zZShzdHJ1Y3QgaG90dW5wbHVnICpwcml2KQogCXByaXYtPmZk
LmRybSA9IF9fZHJtX29wZW5fZHJpdmVyKERSSVZFUl9BTlkpOwogCWlndF9hc3NlcnRfZmQocHJp
di0+ZmQuZHJtKTsKIAorCXByaXYtPmZhaWx1cmUgPSAibmVlZCBoZWFsdGhjaGVjayI7CisKIAlk
ZXZpY2VfdW5wbHVnKHByaXYsICJob3QgIik7CiAKIAlidXNfcmVzY2FuKHByaXYpOwpAQCAtMjQx
LDggKzI2Nyw2IEBAIHN0YXRpYyB2b2lkIGhvdHVucGx1Z19sYXRlY2xvc2Uoc3RydWN0IGhvdHVu
cGx1ZyAqcHJpdikKIAlpZ3RfZGVidWcoImxhdGUgY2xvc2luZyB0aGUgcmVtb3ZlZCBkZXZpY2Ug
aW5zdGFuY2VcbiIpOwogCXByaXYtPmZkLmRybSA9IGxvY2FsX2Nsb3NlKHByaXYtPmZkLmRybSk7
CiAJaWd0X3dhcm5fb25fZihwcml2LT5mZC5kcm0gIT0gLTEsICJEZXZpY2UgY2xvc2UgZmFpbGVk
XG4iKTsKLQotCWhlYWx0aGNoZWNrKHByaXYpOwogfQogCiAvKiBNYWluICovCkBAIC0yNzYsMzAg
KzMwMCw1MCBAQCBpZ3RfbWFpbgogCQlwcmVwYXJlKCZwcml2KTsKIAl9CiAKLQlpZ3RfZGVzY3Jp
YmUoIkNoZWNrIGlmIHRoZSBkcml2ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgZGV2
aWNlIGJlbGlldmVkIHRvIGJlIGNsb3NlZCIpOwotCWlndF9zdWJ0ZXN0KCJ1bmJpbmQtcmViaW5k
IikKLQkJdW5iaW5kX3JlYmluZCgmcHJpdik7CisJaWd0X3N1YnRlc3RfZ3JvdXAgeworCQlpZ3Rf
ZGVzY3JpYmUoIkNoZWNrIGlmIHRoZSBkcml2ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9t
IGEgZGV2aWNlIGJlbGlldmVkIHRvIGJlIGNsb3NlZCIpOworCQlpZ3Rfc3VidGVzdCgidW5iaW5k
LXJlYmluZCIpCisJCQl1bmJpbmRfcmViaW5kKCZwcml2KTsKKworCQlpZ3RfZml4dHVyZQorCQkJ
cmVjb3ZlcigmcHJpdik7CisJfQogCiAJaWd0X2ZpeHR1cmUKIAkJcG9zdF9oZWFsdGhjaGVjaygm
cHJpdik7CiAKLQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIGEgZGV2aWNlIGJlbGlldmVkIHRvIGJl
IGNsb3NlZCBjYW4gYmUgY2xlYW5seSB1bnBsdWdnZWQiKTsKLQlpZ3Rfc3VidGVzdCgidW5wbHVn
LXJlc2NhbiIpCi0JCXVucGx1Z19yZXNjYW4oJnByaXYpOworCWlndF9zdWJ0ZXN0X2dyb3VwIHsK
KwkJaWd0X2Rlc2NyaWJlKCJDaGVjayBpZiBhIGRldmljZSBiZWxpZXZlZCB0byBiZSBjbG9zZWQg
Y2FuIGJlIGNsZWFubHkgdW5wbHVnZ2VkIik7CisJCWlndF9zdWJ0ZXN0KCJ1bnBsdWctcmVzY2Fu
IikKKwkJCXVucGx1Z19yZXNjYW4oJnByaXYpOworCisJCWlndF9maXh0dXJlCisJCQlyZWNvdmVy
KCZwcml2KTsKKwl9CiAKIAlpZ3RfZml4dHVyZQogCQlwb3N0X2hlYWx0aGNoZWNrKCZwcml2KTsK
IAotCWlndF9kZXNjcmliZSgiQ2hlY2sgaWYgdGhlIGRyaXZlciBjYW4gYmUgY2xlYW5seSB1bmJv
dW5kIGZyb20gYSBzdGlsbCBvcGVuIGRldmljZSwgdGhlbiByZWxlYXNlZCIpOwotCWlndF9zdWJ0
ZXN0KCJob3R1bmJpbmQtbGF0ZWNsb3NlIikKLQkJaG90dW5iaW5kX2xhdGVjbG9zZSgmcHJpdik7
CisJaWd0X3N1YnRlc3RfZ3JvdXAgeworCQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIHRoZSBkcml2
ZXIgY2FuIGJlIGNsZWFubHkgdW5ib3VuZCBmcm9tIGEgc3RpbGwgb3BlbiBkZXZpY2UsIHRoZW4g
cmVsZWFzZWQiKTsKKwkJaWd0X3N1YnRlc3QoImhvdHVuYmluZC1sYXRlY2xvc2UiKQorCQkJaG90
dW5iaW5kX2xhdGVjbG9zZSgmcHJpdik7CisKKwkJaWd0X2ZpeHR1cmUKKwkJCXJlY292ZXIoJnBy
aXYpOworCX0KIAogCWlndF9maXh0dXJlCiAJCXBvc3RfaGVhbHRoY2hlY2soJnByaXYpOwogCi0J
aWd0X2Rlc2NyaWJlKCJDaGVjayBpZiBhIHN0aWxsIG9wZW4gZGV2aWNlIGNhbiBiZSBjbGVhbmx5
IHVucGx1Z2dlZCwgdGhlbiByZWxlYXNlZCIpOwotCWlndF9zdWJ0ZXN0KCJob3R1bnBsdWctbGF0
ZWNsb3NlIikKLQkJaG90dW5wbHVnX2xhdGVjbG9zZSgmcHJpdik7CisJaWd0X3N1YnRlc3RfZ3Jv
dXAgeworCQlpZ3RfZGVzY3JpYmUoIkNoZWNrIGlmIGEgc3RpbGwgb3BlbiBkZXZpY2UgY2FuIGJl
IGNsZWFubHkgdW5wbHVnZ2VkLCB0aGVuIHJlbGVhc2VkIik7CisJCWlndF9zdWJ0ZXN0KCJob3R1
bnBsdWctbGF0ZWNsb3NlIikKKwkJCWhvdHVucGx1Z19sYXRlY2xvc2UoJnByaXYpOworCisJCWln
dF9maXh0dXJlCisJCQlyZWNvdmVyKCZwcml2KTsKKwl9CiAKIAlpZ3RfZml4dHVyZSB7CiAJCXBv
c3RfaGVhbHRoY2hlY2soJnByaXYpOwotLSAKMi4yMS4xCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZngK

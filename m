Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id D1F3BB101F
	for <lists+intel-gfx@lfdr.de>; Thu, 12 Sep 2019 15:38:33 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8AE766ED72;
	Thu, 12 Sep 2019 13:38:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 530076ED70
 for <intel-gfx@lists.freedesktop.org>; Thu, 12 Sep 2019 13:38:30 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 12 Sep 2019 06:38:29 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,497,1559545200"; d="scan'208";a="210027583"
Received: from rosetta.fi.intel.com ([10.237.72.194])
 by fmsmga004.fm.intel.com with ESMTP; 12 Sep 2019 06:38:26 -0700
Received: by rosetta.fi.intel.com (Postfix, from userid 1000)
 id C2F5A843D1A; Thu, 12 Sep 2019 16:38:20 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 12 Sep 2019 16:38:14 +0300
Message-Id: <20190912133816.1382-2-mika.kuoppala@linux.intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190912133816.1382-1-mika.kuoppala@linux.intel.com>
References: <20190912133816.1382-1-mika.kuoppala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/4] drm/i915/tgl: s/ss/eu fuse reading support
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Oscar Mateo <oscar.mateo@intel.com>,
 Michel Thierry <michel.thierry@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVs
LmNvbT4KCkdlbjEyIGhhcyBkdWFsLXN1YnNsaWNlcyAoRFNTKSwgd2hpY2ggY29tcGFyZWQgdG8g
Z2VuMTEgc3Vic2xpY2VzIGhhdmUKc29tZSBkdXBsaWNhdGVkIHJlc291cmNlcy9wYXRocy4gQWx0
aG91Z2ggRFNTIGJlaGF2ZSBzaW1pbGFybHkgdG8gMgpzdWJzbGljZXMsIGluc3RlYWQgb2Ygc3Bs
aXR0aW5nIHRoaXMgYW5kIHByZXNlbnRpbmcgdXNlcnNwYWNlIHdpdGggYml0cwpub3QgZGlyZWN0
bHkgcmVwcmVzZW50YXRpdmUgb2YgaGFyZHdhcmUgcmVzb3VyY2VzLCBwcmVzZW50IHVzZXJzcGFj
ZQp3aXRoIGEgc3Vic2xpY2VfbWFzayBtYWRlIHVwIG9mIERTUyBiaXRzIGluc3RlYWQuCgpCc3Bl
YzogMjk1NDcKQnNwZWM6IDEyMjQ3CkNjOiBLZWx2aW4gR2FyZGluZXIgPGtlbHZpbi5nYXJkaW5l
ckBpbnRlbC5jb20+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29t
PgpDYzogTGlvbmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgpD
QzogUmFkaGFrcmlzaG5hIFNyaXBhZGEgPHJhZGhha3Jpc2huYS5zcmlwYWRhQGludGVsLmNvbT4K
Q2M6IE1pY2hlbCBUaGllcnJ5IDxtaWNoZWwudGhpZXJyeUBpbnRlbC5jb20+ICN2MQpDYzogRGFu
aWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlvQGludGVsLmNvbT4KQ2M6
IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPgpTaWduZWQtb2Zm
LWJ5OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0BpbnRlbC5jb20+
ClNpZ25lZC1vZmYtYnk6IE9zY2FyIE1hdGVvIDxvc2Nhci5tYXRlb0BpbnRlbC5jb20+ClNpZ25l
ZC1vZmYtYnk6IFN1ZGVlcCBEdXR0IDxzdWRlZXAuZHV0dEBpbnRlbC5jb20+ClNpZ25lZC1vZmYt
Ynk6IFN0dWFydCBTdW1tZXJzIDxzdHVhcnQuc3VtbWVyc0BpbnRlbC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfc3NldS5oICAgICB8ICA5ICstLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICB8ICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3JlZy5oICAgICAgICAgIHwgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
ZGV2aWNlX2luZm8uYyB8IDg3ICsrKysrKysrKysrKysrKysrKy0tLS0tLQogaW5jbHVkZS91YXBp
L2RybS9pOTE1X2RybS5oICAgICAgICAgICAgICB8ICA2ICstCiA1IGZpbGVzIGNoYW5nZWQsIDc2
IGluc2VydGlvbnMoKyksIDMxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX3NzZXUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X3NzZXUuaAppbmRleCA0MDcwZjZmZjFkYjYuLmQxZDIyNTIwNGYwOSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfc3NldS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX3NzZXUuaApAQCAtMTgsMTIgKzE4LDEzIEBAIHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlOwogI2RlZmluZSBHRU5fTUFYX1NVQlNMSUNFUwkoOCkgLyogSUNMIHVwcGVyIGJvdW5k
ICovCiAjZGVmaW5lIEdFTl9TU0VVX1NUUklERShtYXhfZW50cmllcykgRElWX1JPVU5EX1VQKG1h
eF9lbnRyaWVzLCBCSVRTX1BFUl9CWVRFKQogI2RlZmluZSBHRU5fTUFYX1NVQlNMSUNFX1NUUklE
RSBHRU5fU1NFVV9TVFJJREUoR0VOX01BWF9TVUJTTElDRVMpCi0jZGVmaW5lIEdFTl9NQVhfRVVT
CQkoMTApIC8qIEhTVyB1cHBlciBib3VuZCAqLworI2RlZmluZSBHRU5fTUFYX0VVUwkJKDE2KSAv
KiBUR0wgdXBwZXIgYm91bmQgKi8KICNkZWZpbmUgR0VOX01BWF9FVV9TVFJJREUgR0VOX1NTRVVf
U1RSSURFKEdFTl9NQVhfRVVTKQogCiBzdHJ1Y3Qgc3NldV9kZXZfaW5mbyB7CiAJdTggc2xpY2Vf
bWFzazsKIAl1OCBzdWJzbGljZV9tYXNrW0dFTl9NQVhfU0xJQ0VTICogR0VOX01BWF9TVUJTTElD
RV9TVFJJREVdOworCXU4IGV1X21hc2tbR0VOX01BWF9TTElDRVMgKiBHRU5fTUFYX1NVQlNMSUNF
UyAqIEdFTl9NQVhfRVVfU1RSSURFXTsKIAl1MTYgZXVfdG90YWw7CiAJdTggZXVfcGVyX3N1YnNs
aWNlOwogCXU4IG1pbl9ldV9pbl9wb29sOwpAQCAtNDAsMTIgKzQxLDYgQEAgc3RydWN0IHNzZXVf
ZGV2X2luZm8gewogCiAJdTggc3Nfc3RyaWRlOwogCXU4IGV1X3N0cmlkZTsKLQotCS8qIFdlIGRv
bid0IGhhdmUgbW9yZSB0aGFuIDggZXVzIHBlciBzdWJzbGljZSBhdCB0aGUgbW9tZW50IGFuZCBh
cyB3ZQotCSAqIHN0b3JlIGV1cyBlbmFibGVkIHVzaW5nIGJpdHMsIG5vIG5lZWQgdG8gbXVsdGlw
bHkgYnkgZXVzIHBlcgotCSAqIHN1YnNsaWNlLgotCSAqLwotCXU4IGV1X21hc2tbR0VOX01BWF9T
TElDRVMgKiBHRU5fTUFYX1NVQlNMSUNFU107CiB9OwogCiAvKgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2RlYnVnZnMuYwppbmRleCBlNTgzNTMzN2YwMjIuLmYyYjkyYmU0NGFkZiAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKQEAgLTM4MjAsNyArMzgyMCw4IEBAIHN0YXRpYyB2b2lkIGdl
bjEwX3NzZXVfZGV2aWNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CiAJCWZvciAoc3MgPSAwOyBzcyA8IGluZm8tPnNzZXUubWF4X3N1YnNsaWNlczsgc3MrKykgewog
CQkJdW5zaWduZWQgaW50IGV1X2NudDsKIAotCQkJaWYgKCEoc19yZWdbc10gJiAoR0VOOV9QR0NU
TF9TU19BQ0soc3MpKSkpCisJCQlpZiAoaW5mby0+c3NldS5oYXNfc3Vic2xpY2VfcGcgJiYKKwkJ
CSAgICAhKHNfcmVnW3NdICYgKEdFTjlfUEdDVExfU1NfQUNLKHNzKSkpKQogCQkJCS8qIHNraXAg
ZGlzYWJsZWQgc3Vic2xpY2UgKi8KIAkJCQljb250aW51ZTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVn
LmgKaW5kZXggYmYzN2VjZWJjODJmLi40Nzg0NzEzNWExMWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfcmVnLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZWcuaApAQCAtMjk1Niw2ICsyOTU2LDggQEAgc3RhdGljIGlubGluZSBib29sIGk5MTVfbW1pb19y
ZWdfdmFsaWQoaTkxNV9yZWdfdCByZWcpCiAKICNkZWZpbmUgR0VOMTFfR1RfU1VCU0xJQ0VfRElT
QUJMRSBfTU1JTygweDkxM0MpCiAKKyNkZWZpbmUgR0VOMTJfR1RfRFNTX0VOQUJMRSBfTU1JTygw
eDkxM0MpCisKICNkZWZpbmUgR0VONl9CU0RfU0xFRVBfUFNNSV9DT05UUk9MCV9NTUlPKDB4MTIw
NTApCiAjZGVmaW5lICAgR0VONl9CU0RfU0xFRVBfTVNHX0RJU0FCTEUJKDEgPDwgMCkKICNkZWZp
bmUgICBHRU42X0JTRF9TTEVFUF9GTFVTSF9ESVNBQkxFCSgxIDw8IDIpCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uYwppbmRleCBkOWI1YmFhZWY1ZDAuLjc5MmNhMzIwMjA3
MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jCkBAIC0xODIsMTMg
KzE4Miw3MyBAQCBzdGF0aWMgdTE2IGNvbXB1dGVfZXVfdG90YWwoY29uc3Qgc3RydWN0IHNzZXVf
ZGV2X2luZm8gKnNzZXUpCiAJcmV0dXJuIHRvdGFsOwogfQogCitzdGF0aWMgdm9pZCBnZW4xMV9j
b21wdXRlX3NzZXVfaW5mbyhzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSwKKwkJCQkgICAgdTgg
c19lbiwgdTMyIHNzX2VuLCB1MTYgZXVfZW4pCit7CisJaW50IHMsIHNzOworCisJLyogc3NfZW4g
cmVwcmVzZW50cyBlbnRpcmUgc3Vic2xpY2UgbWFzayBhY3Jvc3MgYWxsIHNsaWNlcyAqLworCWlm
IChzc2V1LT5tYXhfc2xpY2VzICogc3NldS0+bWF4X3N1YnNsaWNlcyA+CisJICAgIHNpemVvZihz
c19lbikgKiBCSVRTX1BFUl9CWVRFKSB7CisJCURSTV9FUlJPUigiSW52YWxpZCB0b3BvbG9neSwg
bWF4X3NsaWNlczogJWQsIG1heF9zdWJzbGljZXMgJWRcbiIsCisJCQkgIHNzZXUtPm1heF9zbGlj
ZXMsIHNzZXUtPm1heF9zdWJzbGljZXMpOworCQlyZXR1cm47CisJfQorCisJZm9yIChzID0gMDsg
cyA8IHNzZXUtPm1heF9zbGljZXM7IHMrKykgeworCQlpZiAoKHNfZW4gJiBCSVQocykpID09IDAp
CisJCQljb250aW51ZTsKKworCQlzc2V1LT5zbGljZV9tYXNrIHw9IEJJVChzKTsKKworCQlpbnRl
bF9zc2V1X3NldF9zdWJzbGljZXMoc3NldSwgcywgc3NfZW4pOworCisJCWZvciAoc3MgPSAwOyBz
cyA8IHNzZXUtPm1heF9zdWJzbGljZXM7IHNzKyspCisJCQlpZiAoaW50ZWxfc3NldV9oYXNfc3Vi
c2xpY2Uoc3NldSwgcywgc3MpKQorCQkJCXNzZXVfc2V0X2V1cyhzc2V1LCBzLCBzcywgZXVfZW4p
OworCX0KKwlzc2V1LT5ldV9wZXJfc3Vic2xpY2UgPSBod2VpZ2h0MTYoZXVfZW4pOworCXNzZXUt
PmV1X3RvdGFsID0gY29tcHV0ZV9ldV90b3RhbChzc2V1KTsKK30KKworc3RhdGljIHZvaWQgZ2Vu
MTJfc3NldV9pbmZvX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorewor
CXN0cnVjdCBzc2V1X2Rldl9pbmZvICpzc2V1ID0gJlJVTlRJTUVfSU5GTyhkZXZfcHJpdiktPnNz
ZXU7CisJdTggc19lbjsKKwl1MzIgZHNzX2VuOworCXUxNiBldV9lbiA9IDA7CisJdTggZXVfZW5f
ZnVzZTsKKwlpbnQgZXU7CisKKwkvKgorCSAqIEdlbjEyIGhhcyBEdWFsLVN1YnNsaWNlcywgd2hp
Y2ggYmVoYXZlIHNpbWlsYXJseSB0byAyIGdlbjExIFNTLgorCSAqIEluc3RlYWQgb2Ygc3BsaXR0
aW5nIHRoZXNlLCBwcm92aWRlIHVzZXJzcGFjZSB3aXRoIGFuIGFycmF5CisJICogb2YgRFNTIHRv
IG1vcmUgY2xvc2VseSByZXByZXNlbnQgdGhlIGhhcmR3YXJlIHJlc291cmNlLgorCSAqLworCWlu
dGVsX3NzZXVfc2V0X2luZm8oc3NldSwgMSwgNiwgMTYpOworCisJc19lbiA9IEk5MTVfUkVBRChH
RU4xMV9HVF9TTElDRV9FTkFCTEUpICYgR0VOMTFfR1RfU19FTkFfTUFTSzsKKworCWRzc19lbiA9
IEk5MTVfUkVBRChHRU4xMl9HVF9EU1NfRU5BQkxFKTsKKworCS8qIG9uZSBiaXQgcGVyIHBhaXIg
b2YgRVVzICovCisJZXVfZW5fZnVzZSA9IH4oSTkxNV9SRUFEKEdFTjExX0VVX0RJU0FCTEUpICYg
R0VOMTFfRVVfRElTX01BU0spOworCWZvciAoZXUgPSAwOyBldSA8IHNzZXUtPm1heF9ldXNfcGVy
X3N1YnNsaWNlIC8gMjsgZXUrKykKKwkJaWYgKGV1X2VuX2Z1c2UgJiBCSVQoZXUpKQorCQkJZXVf
ZW4gfD0gQklUKGV1ICogMikgfCBCSVQoZXUgKiAyICsgMSk7CisKKwlnZW4xMV9jb21wdXRlX3Nz
ZXVfaW5mbyhzc2V1LCBzX2VuLCBkc3NfZW4sIGV1X2VuKTsKKworCS8qIFRHTCBvbmx5IHN1cHBv
cnRzIHNsaWNlLWxldmVsIHBvd2VyIGdhdGluZyAqLworCXNzZXUtPmhhc19zbGljZV9wZyA9IDE7
Cit9CisKIHN0YXRpYyB2b2lkIGdlbjExX3NzZXVfaW5mb19pbml0KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIHsKIAlzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSA9ICZSVU5U
SU1FX0lORk8oZGV2X3ByaXYpLT5zc2V1OwogCXU4IHNfZW47Ci0JdTMyIHNzX2VuLCBzc19lbl9t
YXNrOworCXUzMiBzc19lbjsKIAl1OCBldV9lbjsKLQlpbnQgczsKIAogCWlmIChJU19FTEtIQVJU
TEFLRShkZXZfcHJpdikpCiAJCWludGVsX3NzZXVfc2V0X2luZm8oc3NldSwgMSwgNCwgOCk7CkBA
IC0xOTcsMjYgKzI1Nyw5IEBAIHN0YXRpYyB2b2lkIGdlbjExX3NzZXVfaW5mb19pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogCXNfZW4gPSBJOTE1X1JFQUQoR0VOMTFf
R1RfU0xJQ0VfRU5BQkxFKSAmIEdFTjExX0dUX1NfRU5BX01BU0s7CiAJc3NfZW4gPSB+STkxNV9S
RUFEKEdFTjExX0dUX1NVQlNMSUNFX0RJU0FCTEUpOwotCXNzX2VuX21hc2sgPSBCSVQoc3NldS0+
bWF4X3N1YnNsaWNlcykgLSAxOwogCWV1X2VuID0gfihJOTE1X1JFQUQoR0VOMTFfRVVfRElTQUJM
RSkgJiBHRU4xMV9FVV9ESVNfTUFTSyk7CiAKLQlmb3IgKHMgPSAwOyBzIDwgc3NldS0+bWF4X3Ns
aWNlczsgcysrKSB7Ci0JCWlmIChzX2VuICYgQklUKHMpKSB7Ci0JCQlpbnQgc3NfaWR4ID0gc3Nl
dS0+bWF4X3N1YnNsaWNlcyAqIHM7Ci0JCQlpbnQgc3M7Ci0KLQkJCXNzZXUtPnNsaWNlX21hc2sg
fD0gQklUKHMpOwotCi0JCQlpbnRlbF9zc2V1X3NldF9zdWJzbGljZXMoc3NldSwgcywgKHNzX2Vu
ID4+IHNzX2lkeCkgJgotCQkJCQkJCSAgc3NfZW5fbWFzayk7Ci0KLQkJCWZvciAoc3MgPSAwOyBz
cyA8IHNzZXUtPm1heF9zdWJzbGljZXM7IHNzKyspCi0JCQkJaWYgKGludGVsX3NzZXVfaGFzX3N1
YnNsaWNlKHNzZXUsIHMsIHNzKSkKLQkJCQkJc3NldV9zZXRfZXVzKHNzZXUsIHMsIHNzLCBldV9l
bik7Ci0JCX0KLQl9Ci0Jc3NldS0+ZXVfcGVyX3N1YnNsaWNlID0gaHdlaWdodDgoZXVfZW4pOwot
CXNzZXUtPmV1X3RvdGFsID0gY29tcHV0ZV9ldV90b3RhbChzc2V1KTsKKwlnZW4xMV9jb21wdXRl
X3NzZXVfaW5mbyhzc2V1LCBzX2VuLCBzc19lbiwgZXVfZW4pOwogCiAJLyogSUNMIGhhcyBubyBw
b3dlciBnYXRpbmcgcmVzdHJpY3Rpb25zLiAqLwogCXNzZXUtPmhhc19zbGljZV9wZyA9IDE7CkBA
IC05NTksOCArMTAwMiwxMCBAQCB2b2lkIGludGVsX2RldmljZV9pbmZvX3J1bnRpbWVfaW5pdChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWdlbjlfc3NldV9pbmZvX2luaXQo
ZGV2X3ByaXYpOwogCWVsc2UgaWYgKElTX0dFTihkZXZfcHJpdiwgMTApKQogCQlnZW4xMF9zc2V1
X2luZm9faW5pdChkZXZfcHJpdik7Ci0JZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MSkKKwllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDExKSkKIAkJZ2VuMTFfc3NldV9pbmZvX2lu
aXQoZGV2X3ByaXYpOworCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpCisJCWdl
bjEyX3NzZXVfaW5mb19pbml0KGRldl9wcml2KTsKIAogCWlmIChJU19HRU4oZGV2X3ByaXYsIDYp
ICYmIGludGVsX3Z0ZF9hY3RpdmUoKSkgewogCQlEUk1fSU5GTygiRGlzYWJsaW5nIHBwR1RUIGZv
ciBWVC1kIHN1cHBvcnRcbiIpOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2Ry
bS5oIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IDQ2OWRjNTEyY2NhMy4uMzBj
NTQyMTQ0MDE2IDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKKysrIGIv
aW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC0yMDMzLDggKzIwMzMsMTAgQEAgc3RydWN0
IGRybV9pOTE1X3F1ZXJ5IHsKICAqICAgICAgICAgICAoZGF0YVtYIC8gOF0gPj4gKFggJSA4KSkg
JiAxCiAgKgogICogLSB0aGUgc3Vic2xpY2UgbWFzayBmb3IgZWFjaCBzbGljZSB3aXRoIG9uZSBi
aXQgcGVyIHN1YnNsaWNlIHRlbGxpbmcKLSAqICAgd2hldGhlciBhIHN1YnNsaWNlIGlzIGF2YWls
YWJsZS4gVGhlIGF2YWlsYWJpbGl0eSBvZiBzdWJzbGljZSBZIGluIHNsaWNlCi0gKiAgIFggY2Fu
IGJlIHF1ZXJpZWQgd2l0aCB0aGUgZm9sbG93aW5nIGZvcm11bGEgOgorICogICB3aGV0aGVyIGEg
c3Vic2xpY2UgaXMgYXZhaWxhYmxlLiBHZW4xMiBoYXMgZHVhbC1zdWJzbGljZXMsIHdoaWNoIGFy
ZQorICogICBzaW1pbGFyIHRvIHR3byBnZW4xMSBzdWJzbGljZXMuIEZvciBnZW4xMiwgdGhpcyBh
cnJheSByZXByZXNlbnRzIGR1YWwtCisgKiAgIHN1YnNsaWNlcy4gVGhlIGF2YWlsYWJpbGl0eSBv
ZiBzdWJzbGljZSBZIGluIHNsaWNlIFggY2FuIGJlIHF1ZXJpZWQKKyAqICAgd2l0aCB0aGUgZm9s
bG93aW5nIGZvcm11bGEgOgogICoKICAqICAgICAgICAgICAoZGF0YVtzdWJzbGljZV9vZmZzZXQg
KwogICogICAgICAgICAgICAgICAgIFggKiBzdWJzbGljZV9zdHJpZGUgKwotLSAKMi4xNy4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

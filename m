Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 63B7A242EF5
	for <lists+intel-gfx@lfdr.de>; Wed, 12 Aug 2020 21:15:00 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5A62A6E15F;
	Wed, 12 Aug 2020 19:14:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from pio-pvt-msa1.bahnhof.se (pio-pvt-msa1.bahnhof.se [79.136.2.40])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A70416E15F
 for <intel-gfx@lists.freedesktop.org>; Wed, 12 Aug 2020 19:14:56 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by pio-pvt-msa1.bahnhof.se (Postfix) with ESMTP id C02A03F603;
 Wed, 12 Aug 2020 21:14:54 +0200 (CEST)
Authentication-Results: pio-pvt-msa1.bahnhof.se; dkim=pass (1024-bit key;
 unprotected) header.d=shipmail.org header.i=@shipmail.org header.b="oTm1eK1A";
 dkim-atps=neutral
X-Virus-Scanned: Debian amavisd-new at bahnhof.se
X-Spam-Flag: NO
X-Spam-Score: -3.554
X-Spam-Level: 
X-Spam-Status: No, score=-3.554 tagged_above=-999 required=6.31
 tests=[BAYES_00=-1.9, DKIM_SIGNED=0.1, DKIM_VALID=-0.1,
 DKIM_VALID_AU=-0.1, DKIM_VALID_EF=-0.1, NICE_REPLY_A=-1.455,
 URIBL_BLOCKED=0.001] autolearn=ham autolearn_force=no
Received: from pio-pvt-msa1.bahnhof.se ([127.0.0.1])
 by localhost (pio-pvt-msa1.bahnhof.se [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id UwhE6fyGnvlU; Wed, 12 Aug 2020 21:14:53 +0200 (CEST)
Received: from mail1.shipmail.org (h-205-35.A357.priv.bahnhof.se
 [155.4.205.35]) (Authenticated sender: mb878879)
 by pio-pvt-msa1.bahnhof.se (Postfix) with ESMTPA id 84E143F568;
 Wed, 12 Aug 2020 21:14:51 +0200 (CEST)
Received: from localhost.localdomain (jfdmzpr03-ext.jf.intel.com
 [134.134.139.72])
 by mail1.shipmail.org (Postfix) with ESMTPSA id 51F9C360507;
 Wed, 12 Aug 2020 21:14:49 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=shipmail.org; s=mail;
 t=1597259691; bh=gtI04em9exTPto6z1L4PfvYlJFh6wjEExK/YkGCnSj4=;
 h=Subject:To:References:From:Date:In-Reply-To:From;
 b=oTm1eK1AurMeo3mhPJkI2is44LFpwp4UjvldLXth25RHIOqqWPQhBlxlYeuUJPp3u
 OXBhDWtj8ryRZFWokYX06siUbo3sIFr5OzDZhAHAK1wCuUZKplzj6Gk32iHIJMCP/G
 hICop5cYl+27plTFl1XEZOB4M4irGZAEC81k0QZ8=
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 intel-gfx@lists.freedesktop.org
References: <20200810103103.303818-1-maarten.lankhorst@linux.intel.com>
 <20200810103103.303818-15-maarten.lankhorst@linux.intel.com>
From: =?UTF-8?Q?Thomas_Hellstr=c3=b6m_=28Intel=29?= <thomas_os@shipmail.org>
Message-ID: <c33c3813-efd8-852d-091a-af425d1daa08@shipmail.org>
Date: Wed, 12 Aug 2020 21:14:45 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <20200810103103.303818-15-maarten.lankhorst@linux.intel.com>
Content-Language: en-US
Subject: Re: [Intel-gfx] [PATCH 14/24] drm/i915: Rework intel_context
 pinning to do everything outside of pin_mutex
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Ck9uIDgvMTAvMjAgMTI6MzAgUE0sIE1hYXJ0ZW4gTGFua2hvcnN0IHdyb3RlOgo+IEluc3RlYWQg
b2YgZG9pbmcgZXZlcnl0aGluZyBpbnNpZGUgb2YgcGluX211dGV4LCB3ZSBtb3ZlIGFsbCBwaW5u
aW5nCj4gb3V0c2lkZS4gQmVjYXVzZSBpOTE1X2FjdGl2ZSBoYXMgaXRzIG93biByZWZlcmVuY2Ug
Y291bnRpbmcgYW5kCj4gcGlubmluZyBpcyBhbHNvIGhhdmluZyB0aGUgc2FtZSBpc3N1ZXMgdnMg
bXV0ZXhlcywgd2UgbWFrZSBzdXJlCj4gZXZlcnl0aGluZyBpcyBwaW5uZWQgZmlyc3QsIHNvIHRo
ZSBwaW5uaW5nIGluIGk5MTVfYWN0aXZlIG9ubHkgbmVlZHMKPiB0byBidW1wIHJlZmNvdW50cy4g
VGhpcyBhbGxvd3MgdXMgdG8gdGFrZSBwaW4gcmVmY291bnRzIGNvcnJlY3RseQo+IGFsbCB0aGUg
dGltZS4KPgo+IFNpZ25lZC1vZmYtYnk6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVuLmxhbmto
b3JzdEBsaW51eC5pbnRlbC5jb20+Cj4gLS0tCj4gICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9jb250ZXh0LmMgICAgICAgfCAyMzIgKysrKysrKysrKystLS0tLS0tCj4gICBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0X3R5cGVzLmggfCAgIDQgKy0KPiAgIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgICB8ICAzNCArKy0KPiAgIC4u
Li9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJtaXNzaW9uLmMgICB8ICAxMyArLQo+ICAg
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyAgICAgICAgIHwgIDEzICstCj4g
ICA1IGZpbGVzIGNoYW5nZWQsIDE5MCBpbnNlcnRpb25zKCspLCAxMDYgZGVsZXRpb25zKC0pCj4K
PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCj4gaW5kZXggNTJkYjJiZGU0
NGEzLi5lZmU5YTdhODllZGUgMTAwNjQ0Cj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfY29udGV4dC5jCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29u
dGV4dC5jCj4gQEAgLTkzLDc5ICs5Myw2IEBAIHN0YXRpYyB2b2lkIGludGVsX2NvbnRleHRfYWN0
aXZlX3JlbGVhc2Uoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQo+ICAgCWk5MTVfYWN0aXZlX3Jl
bGVhc2UoJmNlLT5hY3RpdmUpOwo+ICAgfQo+ICAgCj4gLWludCBfX2ludGVsX2NvbnRleHRfZG9f
cGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKPiAtewo+IC0JaW50IGVycjsKPiAtCj4gLQlp
ZiAodW5saWtlbHkoIXRlc3RfYml0KENPTlRFWFRfQUxMT0NfQklULCAmY2UtPmZsYWdzKSkpIHsK
PiAtCQllcnIgPSBpbnRlbF9jb250ZXh0X2FsbG9jX3N0YXRlKGNlKTsKPiAtCQlpZiAoZXJyKQo+
IC0JCQlyZXR1cm4gZXJyOwo+IC0JfQo+IC0KPiAtCWVyciA9IGk5MTVfYWN0aXZlX2FjcXVpcmUo
JmNlLT5hY3RpdmUpOwo+IC0JaWYgKGVycikKPiAtCQlyZXR1cm4gZXJyOwo+IC0KPiAtCWlmICht
dXRleF9sb2NrX2ludGVycnVwdGlibGUoJmNlLT5waW5fbXV0ZXgpKSB7Cj4gLQkJZXJyID0gLUVJ
TlRSOwo+IC0JCWdvdG8gb3V0X3JlbGVhc2U7Cj4gLQl9Cj4gLQo+IC0JaWYgKHVubGlrZWx5KGlu
dGVsX2NvbnRleHRfaXNfY2xvc2VkKGNlKSkpIHsKPiAtCQllcnIgPSAtRU5PRU5UOwo+IC0JCWdv
dG8gb3V0X3VubG9jazsKPiAtCX0KPiAtCj4gLQlpZiAobGlrZWx5KCFhdG9taWNfYWRkX3VubGVz
cygmY2UtPnBpbl9jb3VudCwgMSwgMCkpKSB7Cj4gLQkJZXJyID0gaW50ZWxfY29udGV4dF9hY3Rp
dmVfYWNxdWlyZShjZSk7Cj4gLQkJaWYgKHVubGlrZWx5KGVycikpCj4gLQkJCWdvdG8gb3V0X3Vu
bG9jazsKPiAtCj4gLQkJZXJyID0gY2UtPm9wcy0+cGluKGNlKTsKPiAtCQlpZiAodW5saWtlbHko
ZXJyKSkKPiAtCQkJZ290byBlcnJfYWN0aXZlOwo+IC0KPiAtCQlDRV9UUkFDRShjZSwgInBpbiBy
aW5nOntzdGFydDolMDh4LCBoZWFkOiUwNHgsIHRhaWw6JTA0eH1cbiIsCj4gLQkJCSBpOTE1X2dn
dHRfb2Zmc2V0KGNlLT5yaW5nLT52bWEpLAo+IC0JCQkgY2UtPnJpbmctPmhlYWQsIGNlLT5yaW5n
LT50YWlsKTsKPiAtCj4gLQkJc21wX21iX19iZWZvcmVfYXRvbWljKCk7IC8qIGZsdXNoIHBpbiBi
ZWZvcmUgaXQgaXMgdmlzaWJsZSAqLwo+IC0JCWF0b21pY19pbmMoJmNlLT5waW5fY291bnQpOwo+
IC0JfQo+IC0KPiAtCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSk7IC8q
IG5vIG92ZXJmbG93ISAqLwo+IC0JR0VNX0JVR19PTihpOTE1X2FjdGl2ZV9pc19pZGxlKCZjZS0+
YWN0aXZlKSk7Cj4gLQlnb3RvIG91dF91bmxvY2s7Cj4gLQo+IC1lcnJfYWN0aXZlOgo+IC0JaW50
ZWxfY29udGV4dF9hY3RpdmVfcmVsZWFzZShjZSk7Cj4gLW91dF91bmxvY2s6Cj4gLQltdXRleF91
bmxvY2soJmNlLT5waW5fbXV0ZXgpOwo+IC1vdXRfcmVsZWFzZToKPiAtCWk5MTVfYWN0aXZlX3Jl
bGVhc2UoJmNlLT5hY3RpdmUpOwo+IC0JcmV0dXJuIGVycjsKPiAtfQo+IC0KPiAtdm9pZCBpbnRl
bF9jb250ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKPiAtewo+IC0JaWYgKCFh
dG9taWNfZGVjX2FuZF90ZXN0KCZjZS0+cGluX2NvdW50KSkKPiAtCQlyZXR1cm47Cj4gLQo+IC0J
Q0VfVFJBQ0UoY2UsICJ1bnBpblxuIik7Cj4gLQljZS0+b3BzLT51bnBpbihjZSk7Cj4gLQo+IC0J
LyoKPiAtCSAqIE9uY2UgcmVsZWFzZWQsIHdlIG1heSBhc3luY2hyb25vdXNseSBkcm9wIHRoZSBh
Y3RpdmUgcmVmZXJlbmNlLgo+IC0JICogQXMgdGhhdCBtYXkgYmUgdGhlIG9ubHkgcmVmZXJlbmNl
IGtlZXBpbmcgdGhlIGNvbnRleHQgYWxpdmUsCj4gLQkgKiB0YWtlIGFuIGV4dHJhIG5vdyBzbyB0
aGF0IGl0IGlzIG5vdCBmcmVlZCBiZWZvcmUgd2UgZmluaXNoCj4gLQkgKiBkZXJlZmVyZW5jaW5n
IGl0Lgo+IC0JICovCj4gLQlpbnRlbF9jb250ZXh0X2dldChjZSk7Cj4gLQlpbnRlbF9jb250ZXh0
X2FjdGl2ZV9yZWxlYXNlKGNlKTsKPiAtCWludGVsX2NvbnRleHRfcHV0KGNlKTsKPiAtfQo+IC0K
PiAgIHN0YXRpYyBpbnQgX19jb250ZXh0X3Bpbl9zdGF0ZShzdHJ1Y3QgaTkxNV92bWEgKnZtYSkK
PiAgIHsKPiAgIAl1bnNpZ25lZCBpbnQgYmlhcyA9IGk5MTVfZ2d0dF9waW5fYmlhcyh2bWEpIHwg
UElOX09GRlNFVF9CSUFTOwo+IEBAIC0yMjUsNiArMTUyLDEzOCBAQCBzdGF0aWMgdm9pZCBfX3Jp
bmdfcmV0aXJlKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nKQo+ICAgCWludGVsX3JpbmdfdW5waW4o
cmluZyk7Cj4gICB9Cj4gICAKPiArc3RhdGljIGludCBpbnRlbF9jb250ZXh0X3ByZV9waW4oc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlKQo+ICt7Cj4gKwlpbnQgZXJyOwo+ICsKPiArCUNFX1RSQUNF
KGNlLCAiYWN0aXZlXG4iKTsKPiArCj4gKwllcnIgPSBfX3JpbmdfYWN0aXZlKGNlLT5yaW5nKTsK
PiArCWlmIChlcnIpCj4gKwkJcmV0dXJuIGVycjsKPiArCj4gKwllcnIgPSBpbnRlbF90aW1lbGlu
ZV9waW4oY2UtPnRpbWVsaW5lKTsKPiArCWlmIChlcnIpCj4gKwkJZ290byBlcnJfcmluZzsKPiAr
Cj4gKwlpZiAoIWNlLT5zdGF0ZSkKPiArCQlyZXR1cm4gMDsKPiArCj4gKwllcnIgPSBfX2NvbnRl
eHRfcGluX3N0YXRlKGNlLT5zdGF0ZSk7Cj4gKwlpZiAoZXJyKQo+ICsJCWdvdG8gZXJyX3RpbWVs
aW5lOwo+ICsKPiArCj4gKwlyZXR1cm4gMDsKPiArCj4gK2Vycl90aW1lbGluZToKPiArCWludGVs
X3RpbWVsaW5lX3VucGluKGNlLT50aW1lbGluZSk7Cj4gK2Vycl9yaW5nOgo+ICsJX19yaW5nX3Jl
dGlyZShjZS0+cmluZyk7Cj4gKwlyZXR1cm4gZXJyOwo+ICt9Cj4gKwo+ICtzdGF0aWMgdm9pZCBp
bnRlbF9jb250ZXh0X3Bvc3RfdW5waW4oc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQo+ICt7Cj4g
KwlpZiAoY2UtPnN0YXRlKQo+ICsJCV9fY29udGV4dF91bnBpbl9zdGF0ZShjZS0+c3RhdGUpOwo+
ICsKPiArCWludGVsX3RpbWVsaW5lX3VucGluKGNlLT50aW1lbGluZSk7Cj4gKwlfX3JpbmdfcmV0
aXJlKGNlLT5yaW5nKTsKPiArfQo+ICsKPiAraW50IF9faW50ZWxfY29udGV4dF9kb19waW4oc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlKQo+ICt7Cj4gKwlib29sIGhhbmRvZmYgPSBmYWxzZTsKPiAr
CXZvaWQgKnZhZGRyOwo+ICsJaW50IGVyciA9IDA7Cj4gKwo+ICsJaWYgKHVubGlrZWx5KCF0ZXN0
X2JpdChDT05URVhUX0FMTE9DX0JJVCwgJmNlLT5mbGFncykpKSB7Cj4gKwkJZXJyID0gaW50ZWxf
Y29udGV4dF9hbGxvY19zdGF0ZShjZSk7Cj4gKwkJaWYgKGVycikKPiArCQkJcmV0dXJuIGVycjsK
PiArCX0KPiArCj4gKwkvKgo+ICsJICogV2UgYWx3YXlzIHBpbiB0aGUgY29udGV4dC9yaW5nL3Rp
bWVsaW5lIGhlcmUsIHRvIGVuc3VyZSBhIHBpbgo+ICsJICogcmVmY291bnQgZm9yIF9faW50ZWxf
Y29udGV4dF9hY3RpdmUoKSwgd2hpY2ggcHJldmVudCBhIGxvY2sKPiArCSAqIGludmVyc2lvbiBv
ZiBjZS0+cGluX211dGV4IHZzIGRtYV9yZXN2X2xvY2soKS4KPiArCSAqLwo+ICsJZXJyID0gaW50
ZWxfY29udGV4dF9wcmVfcGluKGNlKTsKPiArCWlmIChlcnIpCj4gKwkJcmV0dXJuIGVycjsKPiAr
Cj4gKwllcnIgPSBpOTE1X2FjdGl2ZV9hY3F1aXJlKCZjZS0+YWN0aXZlKTsKPiArCWlmIChlcnIp
Cj4gKwkJZ290byBlcnJfY3R4X3VucGluOwo+ICsKPiArCWVyciA9IGNlLT5vcHMtPnByZV9waW4o
Y2UsICZ2YWRkcik7Cj4gKwlpZiAoZXJyKQo+ICsJCWdvdG8gZXJyX3JlbGVhc2U7Cj4gKwo+ICsJ
ZXJyID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZjZS0+cGluX211dGV4KTsKPiArCWlmIChl
cnIpCj4gKwkJZ290byBlcnJfcG9zdF91bnBpbjsKPiArCj4gKwlpZiAodW5saWtlbHkoaW50ZWxf
Y29udGV4dF9pc19jbG9zZWQoY2UpKSkgewo+ICsJCWVyciA9IC1FTk9FTlQ7Cj4gKwkJZ290byBl
cnJfdW5sb2NrOwo+ICsJfQo+ICsKPiArCWlmIChsaWtlbHkoIWF0b21pY19hZGRfdW5sZXNzKCZj
ZS0+cGluX2NvdW50LCAxLCAwKSkpIHsKPiArCQllcnIgPSBpbnRlbF9jb250ZXh0X2FjdGl2ZV9h
Y3F1aXJlKGNlKTsKPiArCQlpZiAodW5saWtlbHkoZXJyKSkKPiArCQkJZ290byBlcnJfdW5sb2Nr
Owo+ICsKPiArCQllcnIgPSBjZS0+b3BzLT5waW4oY2UsIHZhZGRyKTsKPiArCQlpZiAoZXJyKSB7
Cj4gKwkJCWludGVsX2NvbnRleHRfYWN0aXZlX3JlbGVhc2UoY2UpOwo+ICsJCQlnb3RvIGVycl91
bmxvY2s7Cj4gKwkJfQo+ICsKPiArCQlDRV9UUkFDRShjZSwgInBpbiByaW5nOntzdGFydDolMDh4
LCBoZWFkOiUwNHgsIHRhaWw6JTA0eH1cbiIsCj4gKwkJCSBpOTE1X2dndHRfb2Zmc2V0KGNlLT5y
aW5nLT52bWEpLAo+ICsJCQkgY2UtPnJpbmctPmhlYWQsIGNlLT5yaW5nLT50YWlsKTsKPiArCj4g
KwkJaGFuZG9mZiA9IHRydWU7Cj4gKwkJc21wX21iX19iZWZvcmVfYXRvbWljKCk7IC8qIGZsdXNo
IHBpbiBiZWZvcmUgaXQgaXMgdmlzaWJsZSAqLwo+ICsJCWF0b21pY19pbmMoJmNlLT5waW5fY291
bnQpOwo+ICsJfQo+ICsKPiArCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKGNl
KSk7IC8qIG5vIG92ZXJmbG93ISAqLwo+ICsKPiArZXJyX3VubG9jazoKPiArCW11dGV4X3VubG9j
aygmY2UtPnBpbl9tdXRleCk7Cj4gK2Vycl9wb3N0X3VucGluOgo+ICsJaWYgKCFoYW5kb2ZmKQo+
ICsJCWNlLT5vcHMtPnBvc3RfdW5waW4oY2UpOwo+ICtlcnJfcmVsZWFzZToKPiArCWk5MTVfYWN0
aXZlX3JlbGVhc2UoJmNlLT5hY3RpdmUpOwo+ICtlcnJfY3R4X3VucGluOgo+ICsJaW50ZWxfY29u
dGV4dF9wb3N0X3VucGluKGNlKTsKPiArCXJldHVybiBlcnI7Cj4gK30KPiArCj4gK3ZvaWQgaW50
ZWxfY29udGV4dF91bnBpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCj4gK3sKPiArCWlmICgh
YXRvbWljX2RlY19hbmRfdGVzdCgmY2UtPnBpbl9jb3VudCkpCj4gKwkJcmV0dXJuOwo+ICsKPiAr
CUNFX1RSQUNFKGNlLCAidW5waW5cbiIpOwo+ICsJY2UtPm9wcy0+dW5waW4oY2UpOwo+ICsJY2Ut
Pm9wcy0+cG9zdF91bnBpbihjZSk7CgpXaGF0J3MgcHJvdGVjdGluZyBvcHMtPnVucGluKCkgaGVy
ZSwgcnVubmluZyBjb25jdXJyZW50bHkgd2l0aCBvcHMtPnBpbiAKaW4gX19pbnRlbF9jb250ZXh0
X2RvX3BpbigpPyBEbyB0aGUgb3BzIGZ1bmN0aW9ucyBoYXZlIHRvIGltcGxlbWVudCAKdGhlaXIg
b3duIGxvY2tpbmcgaWYgbmVlZGVkPwoKT3RoZXJ3aXNlIExHVE0KClJldmlld2VkLWJ5OiBUaG9t
YXMgSGVsbHN0csO2bSA8dGhvbWFzLmhlbGxzdHJvbUBpbnRlbC5jb20+CgoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlz
dApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

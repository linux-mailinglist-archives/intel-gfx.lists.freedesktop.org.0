Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7D6681C6FE5
	for <lists+intel-gfx@lfdr.de>; Wed,  6 May 2020 14:05:43 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CA6FF6E870;
	Wed,  6 May 2020 12:05:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C22016E870
 for <intel-gfx@lists.freedesktop.org>; Wed,  6 May 2020 12:05:40 +0000 (UTC)
IronPort-SDR: 80MgM/RuIFjXtK2HB0waqyQmX5vhaqP0PwS3Fc9hx29to063k/VAWPuc0U1dzTs4zwh6i+HZhS
 RdODZzLnW+Hg==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 06 May 2020 05:05:40 -0700
IronPort-SDR: reKSEdllEevV+Pk7UfQssrXrbsj7bsb83MwPYcXA7g9M7RmDJierS7/hKugys1+qF5xF1E9vXT
 wpA4jrp8d+eg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.73,358,1583222400"; d="scan'208";a="263535013"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga006.jf.intel.com with SMTP; 06 May 2020 05:05:37 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 06 May 2020 15:05:37 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  6 May 2020 15:05:37 +0300
Message-Id: <20200506120537.2783-1-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200506112328.16562-9-ville.syrjala@linux.intel.com>
References: <20200506112328.16562-9-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 8/9] drm/i915: Plumb crtc_state to link
 training
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkdl
dCByaWQgb2YgbW9kZSBjcnRjLT5jb25maWcgdXNhZ2UsIGFuZCBzb21lIGFkLWhvYyBpbnRlbF9k
cCBzdGF0ZQp1c2FnZSBieSBwbHVtYmluZyB0aGUgY3J0YyBzdGF0ZSBhbGwgdGhlIHdheSBkb3du
IHRvIHRoZSBsaW5rIHRyYWluaW5nCmNvZGUuCgpVbmZvcnR1bmF0ZWx5IHdlIGRvIGhhdmUgdG8g
a2VlcCBzb21lIGNhY2hlZCBzdGF0ZSBpbiBpbnRlbF9kcCBzbwp0aGF0IHdlIGNhbiBkbyB0aGUg
ImRvZXMgdGhlIGxpbmsgbmVlZCByZXRyYWluaW5nPyIgY2hlY2tzIGZyb20KdGhlIHNob3J0IGhw
ZCBoYW5kbGVyLgoKVGhlIFBIWSB0ZXN0IGNvZGUgc2VlbXMgdG8gaGF2ZSBzdGFydGVkIHRvIGJ1
aWxkIHNvbWUga2luZCBvZiBOSUgKbW9kZXNldCBjb2RlIHJpZ2h0IGludG8gaW50ZWxfZHAuYy4g
VGhhdCdzIG5vdCBob3cgd2Ugc2hvdWxkIGRvCnRoaW5ncywgYW5kIGluc3RlYWQgd2Ugc2hvdWxk
IGp1c3QgZ28gdGhyb3VnaCB0aGUgbm9ybWFsIG1vZGVzZXQKbWFjaGluZXJ5IGZvciB0aGF0ICht
ZWFuaW5nIGl0IGFsbCBuZWVkcyB0byBtb3ZlIGludG8gdGhlIGhvdHBsdWcKd29yayBhcyB3ZWxs
LCBqdXN0IGxpa2Ugd2UndmUgYWxyZWFkeSBkb25lIGZvciBub3JtYWwgbGluayByZXRyYWluaW5n
KS4KRm9yIG5vdyBqdXN0IG5ldXRlciB0aGF0IGNvZGUgYW5kIHRvc3MgaW4gYSBGSVhNRS4KCnYy
OiBBZGQgaW50ZWxfY3J0Y19zdGF0ZSBmb3J3YXJkIGRlY2xhcmF0aW9uCgpTaWduZWQtb2ZmLWJ5
OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8IDMzNCArKysrKysr
KystLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmggICAg
ICB8ICAgNiArLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAg
IHwgIDE3ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAg
fCAxMzggKysrKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaCAg
ICAgICB8ICAxMSArLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmlu
Zy5jIHwgMTAyICsrKy0tLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFp
bmluZy5oIHwgICA4ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9f
cGh5LmMgfCAgMjMgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBpb19w
aHkuaCB8ICAgMiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYyAg
ICAgfCAgIDcgKy0KIDEwIGZpbGVzIGNoYW5nZWQsIDM1MCBpbnNlcnRpb25zKCspLCAyOTggZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXgg
NDA5YjhhNjg1NzBmLi43N2QyMDIxZDBiY2QgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kZGkuYwpAQCAtOTUzLDY4ICs5NTMsNzUgQEAgY25sX2dldF9idWZfdHJhbnNfZWRw
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50ICpuX2VudHJpZXMpCiB9CiAK
IHN0YXRpYyBjb25zdCBzdHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgKgotaWNsX2dldF9jb21ib19i
dWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgdHlwZSwgaW50
IHJhdGUsCitpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCWludCAqbl9lbnRyaWVzKQogewotCWlmICh0eXBlID09IElO
VEVMX09VVFBVVF9IRE1JKSB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShjcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7CisKKwlpZiAoaW50ZWxfY3J0Y19o
YXNfdHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfSERNSSkpIHsKIAkJKm5fZW50cmllcyA9
IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2hkbWkpOwogCQlyZXR1
cm4gaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2hkbWk7Ci0JfSBlbHNlIGlmIChyYXRl
ID4gNTQwMDAwICYmIHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkgeworCX0gZWxzZSBpZiAoaW50
ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRfRURQKSAmJgorCQkgICBj
cnRjX3N0YXRlLT5wb3J0X2Nsb2NrID4gNTQwMDAwKSB7CiAJCSpuX2VudHJpZXMgPSBBUlJBWV9T
SVpFKGljbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19lZHBfaGJyMyk7CiAJCXJldHVybiBp
Y2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZWRwX2hicjM7Ci0JfSBlbHNlIGlmICh0eXBl
ID09IElOVEVMX09VVFBVVF9FRFAgJiYgZGV2X3ByaXYtPnZidC5lZHAubG93X3Zzd2luZykgewor
CX0gZWxzZSBpZiAoaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJTlRFTF9PVVRQVVRf
RURQKSAmJgorCQkgICBkZXZfcHJpdi0+dmJ0LmVkcC5sb3dfdnN3aW5nKSB7CiAJCSpuX2VudHJp
ZXMgPSBBUlJBWV9TSVpFKGljbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19lZHBfaGJyMik7
CiAJCXJldHVybiBpY2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZWRwX2hicjI7CisJfSBl
bHNlIHsKKwkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNs
YXRpb25zX2RwX2hicjIpOworCQlyZXR1cm4gaWNsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25z
X2RwX2hicjI7CiAJfQotCi0JKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoaWNsX2NvbWJvX3BoeV9k
ZGlfdHJhbnNsYXRpb25zX2RwX2hicjIpOwotCXJldHVybiBpY2xfY29tYm9fcGh5X2RkaV90cmFu
c2xhdGlvbnNfZHBfaGJyMjsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBpY2xfbWdfcGh5X2Rk
aV9idWZfdHJhbnMgKgotaWNsX2dldF9tZ19idWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCitpY2xfZ2V0X21nX2J1Zl90cmFucyhj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgICBpbnQgKm5f
ZW50cmllcykKIHsKLQlpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRfSERNSSkgeworCWlmIChpbnRl
bF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSkgewogCQkqbl9l
bnRyaWVzID0gQVJSQVlfU0laRShpY2xfbWdfcGh5X2RkaV90cmFuc2xhdGlvbnNfaGRtaSk7CiAJ
CXJldHVybiBpY2xfbWdfcGh5X2RkaV90cmFuc2xhdGlvbnNfaGRtaTsKLQl9IGVsc2UgaWYgKHJh
dGUgPiAyNzAwMDApIHsKKwl9IGVsc2UgaWYgKGNydGNfc3RhdGUtPnBvcnRfY2xvY2sgPiAyNzAw
MDApIHsKIAkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoaWNsX21nX3BoeV9kZGlfdHJhbnNsYXRp
b25zX2hicjJfaGJyMyk7CiAJCXJldHVybiBpY2xfbWdfcGh5X2RkaV90cmFuc2xhdGlvbnNfaGJy
Ml9oYnIzOworCX0gZWxzZSB7CisJCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKGljbF9tZ19waHlf
ZGRpX3RyYW5zbGF0aW9uc19yYnJfaGJyKTsKKwkJcmV0dXJuIGljbF9tZ19waHlfZGRpX3RyYW5z
bGF0aW9uc19yYnJfaGJyOwogCX0KLQotCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKGljbF9tZ19w
aHlfZGRpX3RyYW5zbGF0aW9uc19yYnJfaGJyKTsKLQlyZXR1cm4gaWNsX21nX3BoeV9kZGlfdHJh
bnNsYXRpb25zX3Jicl9oYnI7CiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgY25sX2RkaV9idWZf
dHJhbnMgKgotZWhsX2dldF9jb21ib19idWZfdHJhbnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCitlaGxfZ2V0X2NvbWJvX2J1Zl90cmFucyhj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCWludCAqbl9lbnRy
aWVzKQogewotCWlmICh0eXBlICE9IElOVEVMX09VVFBVVF9IRE1JICYmIHR5cGUgIT0gSU5URUxf
T1VUUFVUX0VEUCkgeworCWlmICghaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJTlRF
TF9PVVRQVVRfSERNSSkgJiYKKwkgICAgIWludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwg
SU5URUxfT1VUUFVUX0VEUCkpIHsKIAkJKm5fZW50cmllcyA9IEFSUkFZX1NJWkUoZWhsX2NvbWJv
X3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwKTsKIAkJcmV0dXJuIGVobF9jb21ib19waHlfZGRpX3Ry
YW5zbGF0aW9uc19kcDsKKwl9IGVsc2UgeworCQlyZXR1cm4gaWNsX2dldF9jb21ib19idWZfdHJh
bnMoY3J0Y19zdGF0ZSwgbl9lbnRyaWVzKTsKIAl9Ci0KLQlyZXR1cm4gaWNsX2dldF9jb21ib19i
dWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsIG5fZW50cmllcyk7CiB9CiAKIHN0YXRpYyBj
b25zdCBzdHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgKgotdGdsX2dldF9jb21ib19idWZfdHJhbnMo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgdHlwZSwgaW50IHJhdGUsCit0
Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSwKIAkJCWludCAqbl9lbnRyaWVzKQogewotCWlmICh0eXBlID09IElOVEVMX09VVFBV
VF9IRE1JIHx8IHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkgewotCQlyZXR1cm4gaWNsX2dldF9j
b21ib19idWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsIG5fZW50cmllcyk7Ci0JfSBlbHNl
IGlmIChyYXRlID4gMjcwMDAwKSB7CisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0
ZSwgSU5URUxfT1VUUFVUX0hETUkpIHx8CisJICAgIGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19z
dGF0ZSwgSU5URUxfT1VUUFVUX0VEUCkpIHsKKwkJcmV0dXJuIGljbF9nZXRfY29tYm9fYnVmX3Ry
YW5zKGNydGNfc3RhdGUsIG5fZW50cmllcyk7CisJfSBlbHNlIGlmIChjcnRjX3N0YXRlLT5wb3J0
X2Nsb2NrID4gMjcwMDAwKSB7CiAJCSpuX2VudHJpZXMgPSBBUlJBWV9TSVpFKHRnbF9jb21ib19w
aHlfZGRpX3RyYW5zbGF0aW9uc19kcF9oYnIyKTsKIAkJcmV0dXJuIHRnbF9jb21ib19waHlfZGRp
X3RyYW5zbGF0aW9uc19kcF9oYnIyOworCX0gZWxzZSB7CisJCSpuX2VudHJpZXMgPSBBUlJBWV9T
SVpFKHRnbF9jb21ib19waHlfZGRpX3RyYW5zbGF0aW9uc19kcF9oYnIpOworCQlyZXR1cm4gdGds
X2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwX2hicjsKIAl9Ci0KLQkqbl9lbnRyaWVzID0g
QVJSQVlfU0laRSh0Z2xfY29tYm9fcGh5X2RkaV90cmFuc2xhdGlvbnNfZHBfaGJyKTsKLQlyZXR1
cm4gdGdsX2NvbWJvX3BoeV9kZGlfdHJhbnNsYXRpb25zX2RwX2hicjsKIH0KIAotc3RhdGljIGlu
dCBpbnRlbF9kZGlfaGRtaV9sZXZlbChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKK3N0
YXRpYyBpbnQgaW50ZWxfZGRpX2hkbWlfbGV2ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCisJCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNl
LmRldik7CiAJaW50IG5fZW50cmllcywgbGV2ZWwsIGRlZmF1bHRfZW50cnk7CkBAIC0xMDIyLDE4
ICsxMDI5LDE1IEBAIHN0YXRpYyBpbnQgaW50ZWxfZGRpX2hkbWlfbGV2ZWwoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIpCiAKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikgewog
CQlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQotCQkJdGdsX2dldF9jb21i
b19idWZfdHJhbnMoZGV2X3ByaXYsIElOVEVMX09VVFBVVF9IRE1JLAotCQkJCQkJMCwgJm5fZW50
cmllcyk7CisJCQl0Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVz
KTsKIAkJZWxzZQogCQkJbl9lbnRyaWVzID0gQVJSQVlfU0laRSh0Z2xfZGtsX3BoeV9oZG1pX2Rk
aV90cmFucyk7CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwogCX0gZWxzZSBpZiAo
SU5URUxfR0VOKGRldl9wcml2KSA9PSAxMSkgewogCQlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRl
dl9wcml2LCBwaHkpKQotCQkJaWNsX2dldF9jb21ib19idWZfdHJhbnMoZGV2X3ByaXYsIElOVEVM
X09VVFBVVF9IRE1JLAotCQkJCQkJMCwgJm5fZW50cmllcyk7CisJCQlpY2xfZ2V0X2NvbWJvX2J1
Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAkJZWxzZQotCQkJaWNsX2dldF9tZ19i
dWZfdHJhbnMoZGV2X3ByaXYsIElOVEVMX09VVFBVVF9IRE1JLCAwLAotCQkJCQkgICAgICZuX2Vu
dHJpZXMpOworCQkJaWNsX2dldF9tZ19idWZfdHJhbnMoY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7
CiAJCWRlZmF1bHRfZW50cnkgPSBuX2VudHJpZXMgLSAxOwogCX0gZWxzZSBpZiAoSVNfQ0FOTk9O
TEFLRShkZXZfcHJpdikpIHsKIAkJY25sX2dldF9idWZfdHJhbnNfaGRtaShkZXZfcHJpdiwgJm5f
ZW50cmllcyk7CkBAIC0xMzQ2LDcgKzEzNTAsOCBAQCB2b2lkIGhzd19mZGlfbGlua190cmFpbihz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJICAgICAgIERQX1RQX0NUTF9FTkFCTEUp
OwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9kZGlfaW5pdF9kcF9idWZfcmVnKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyKQorc3RhdGljIHZvaWQgaW50ZWxfZGRpX2luaXRfZHBfYnVmX3Jl
ZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgICAgICBjb25zdCBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwogCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3Bv
cnQgKmludGVsX2RpZ19wb3J0ID0KQEAgLTEzNTQsNyArMTM1OSw3IEBAIHN0YXRpYyB2b2lkIGlu
dGVsX2RkaV9pbml0X2RwX2J1Zl9yZWcoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAK
IAlpbnRlbF9kcC0+RFAgPSBpbnRlbF9kaWdfcG9ydC0+c2F2ZWRfcG9ydF9iaXRzIHwKIAkJRERJ
X0JVRl9DVExfRU5BQkxFIHwgRERJX0JVRl9UUkFOU19TRUxFQ1QoMCk7Ci0JaW50ZWxfZHAtPkRQ
IHw9IERESV9QT1JUX1dJRFRIKGludGVsX2RwLT5sYW5lX2NvdW50KTsKKwlpbnRlbF9kcC0+RFAg
fD0gRERJX1BPUlRfV0lEVEgoY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCk7CiB9CiAKIHN0YXRpYyBp
bnQgaWNsX2NhbGNfdGJ0X3BsbF9saW5rKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKQEAgLTIwMjUsMTQgKzIwMzAsMTUgQEAgc3RhdGljIHZvaWQgX3NrbF9kZGlfc2V0X2lib29z
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiB9CiAKIHN0YXRpYyB2b2lkIHNr
bF9kZGlfc2V0X2lib29zdChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKLQkJCSAgICAg
ICBpbnQgbGV2ZWwsIGVudW0gaW50ZWxfb3V0cHV0X3R5cGUgdHlwZSkKKwkJCSAgICAgICBjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCSAgICAgICBpbnQgbGV2
ZWwpCiB7CiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBlbmNf
dG9fZGlnX3BvcnQoZW5jb2Rlcik7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVy
LT5wb3J0OwogCXU4IGlib29zdDsKIAotCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JKQor
CWlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSkK
IAkJaWJvb3N0ID0gaW50ZWxfYmlvc19oZG1pX2Jvb3N0X2xldmVsKGVuY29kZXIpOwogCWVsc2UK
IAkJaWJvb3N0ID0gaW50ZWxfYmlvc19kcF9ib29zdF9sZXZlbChlbmNvZGVyKTsKQEAgLTIwNDEs
OSArMjA0Nyw5IEBAIHN0YXRpYyB2b2lkIHNrbF9kZGlfc2V0X2lib29zdChzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKIAkJY29uc3Qgc3RydWN0IGRkaV9idWZfdHJhbnMgKmRkaV90cmFu
c2xhdGlvbnM7CiAJCWludCBuX2VudHJpZXM7CiAKLQkJaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVU
X0hETUkpCisJCWlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBV
VF9IRE1JKSkKIAkJCWRkaV90cmFuc2xhdGlvbnMgPSBpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19o
ZG1pKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKLQkJZWxzZSBpZiAodHlwZSA9PSBJTlRFTF9PVVRQ
VVRfRURQKQorCQllbHNlIGlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVM
X09VVFBVVF9FRFApKQogCQkJZGRpX3RyYW5zbGF0aW9ucyA9IGludGVsX2RkaV9nZXRfYnVmX3Ry
YW5zX2VkcChkZXZfcHJpdiwgcG9ydCwgJm5fZW50cmllcyk7CiAJCWVsc2UKIAkJCWRkaV90cmFu
c2xhdGlvbnMgPSBpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgcG9ydCwgJm5f
ZW50cmllcyk7CkBAIC0yMDY5LDE2ICsyMDc1LDE3IEBAIHN0YXRpYyB2b2lkIHNrbF9kZGlfc2V0
X2lib29zdChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIH0KIAogc3RhdGljIHZvaWQg
Ynh0X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCi0J
CQkJICAgIGludCBsZXZlbCwgZW51bSBpbnRlbF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJCSAgICBj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkgICAgaW50IGxl
dmVsKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5j
b2Rlci0+YmFzZS5kZXYpOwogCWNvbnN0IHN0cnVjdCBieHRfZGRpX2J1Zl90cmFucyAqZGRpX3Ry
YW5zbGF0aW9uczsKIAllbnVtIHBvcnQgcG9ydCA9IGVuY29kZXItPnBvcnQ7CiAJaW50IG5fZW50
cmllczsKIAotCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1JKQorCWlmIChpbnRlbF9jcnRj
X2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSkKIAkJZGRpX3RyYW5zbGF0
aW9ucyA9IGJ4dF9nZXRfYnVmX3RyYW5zX2hkbWkoZGV2X3ByaXYsICZuX2VudHJpZXMpOwotCWVs
c2UgaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkKKwllbHNlIGlmIChpbnRlbF9jcnRjX2hh
c190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9FRFApKQogCQlkZGlfdHJhbnNsYXRpb25z
ID0gYnh0X2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKIAllbHNlCiAJ
CWRkaV90cmFuc2xhdGlvbnMgPSBieHRfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgJm5fZW50
cmllcyk7CkBAIC0yMDk1LDcgKzIxMDIsOCBAQCBzdGF0aWMgdm9pZCBieHRfZGRpX3Zzd2luZ19z
ZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkgICAgIGRkaV90cmFu
c2xhdGlvbnNbbGV2ZWxdLmRlZW1waGFzaXMpOwogfQogCi1zdGF0aWMgdTggaW50ZWxfZGRpX2Rw
X3ZvbHRhZ2VfbWF4KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMgdTggaW50ZWxf
ZGRpX2RwX3ZvbHRhZ2VfbWF4KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICAgY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIgPSAmZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5k
ZXYpOwpAQCAtMjEwNSwzMiArMjExMywyOCBAQCBzdGF0aWMgdTggaW50ZWxfZGRpX2RwX3ZvbHRh
Z2VfbWF4KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAKIAlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSAxMikgewogCQlpZiAoaW50ZWxfcGh5X2lzX2NvbWJvKGRldl9wcml2LCBwaHkpKQot
CQkJdGdsX2dldF9jb21ib19idWZfdHJhbnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCi0JCQkJ
CQlpbnRlbF9kcC0+bGlua19yYXRlLCAmbl9lbnRyaWVzKTsKKwkJCXRnbF9nZXRfY29tYm9fYnVm
X3RyYW5zKGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCQllbHNlCiAJCQluX2VudHJpZXMgPSBB
UlJBWV9TSVpFKHRnbF9ka2xfcGh5X2RwX2RkaV90cmFucyk7CiAJfSBlbHNlIGlmIChJTlRFTF9H
RU4oZGV2X3ByaXYpID09IDExKSB7CiAJCWlmIChJU19FTEtIQVJUTEFLRShkZXZfcHJpdikpCi0J
CQllaGxfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgZW5jb2Rlci0+dHlwZSwKLQkJCQkJ
CWludGVsX2RwLT5saW5rX3JhdGUsICZuX2VudHJpZXMpOworCQkJZWhsX2dldF9jb21ib19idWZf
dHJhbnMoY3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAJCWVsc2UgaWYgKGludGVsX3BoeV9pc19j
b21ibyhkZXZfcHJpdiwgcGh5KSkKLQkJCWljbF9nZXRfY29tYm9fYnVmX3RyYW5zKGRldl9wcml2
LCBlbmNvZGVyLT50eXBlLAotCQkJCQkJaW50ZWxfZHAtPmxpbmtfcmF0ZSwgJm5fZW50cmllcyk7
CisJCQlpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAkJ
ZWxzZQotCQkJaWNsX2dldF9tZ19idWZfdHJhbnMoZGV2X3ByaXYsIGVuY29kZXItPnR5cGUsCi0J
CQkJCSAgICAgaW50ZWxfZHAtPmxpbmtfcmF0ZSwgJm5fZW50cmllcyk7CisJCQlpY2xfZ2V0X21n
X2J1Zl90cmFucyhjcnRjX3N0YXRlLCAmbl9lbnRyaWVzKTsKIAl9IGVsc2UgaWYgKElTX0NBTk5P
TkxBS0UoZGV2X3ByaXYpKSB7Ci0JCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9F
RFApCisJCWlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9F
RFApKQogCQkJY25sX2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCAmbl9lbnRyaWVzKTsKIAkJ
ZWxzZQogCQkJY25sX2dldF9idWZfdHJhbnNfZHAoZGV2X3ByaXYsICZuX2VudHJpZXMpOwogCX0g
ZWxzZSBpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpIHsKLQkJaWYgKGVuY29kZXItPnR5cGUgPT0g
SU5URUxfT1VUUFVUX0VEUCkKKwkJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwg
SU5URUxfT1VUUFVUX0VEUCkpCiAJCQlieHRfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsICZu
X2VudHJpZXMpOwogCQllbHNlCiAJCQlieHRfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJpdiwgJm5f
ZW50cmllcyk7CiAJfSBlbHNlIHsKLQkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVU
X0VEUCkKKwkJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VUUFVU
X0VEUCkpCiAJCQlpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19lZHAoZGV2X3ByaXYsIHBvcnQsICZu
X2VudHJpZXMpOwogCQllbHNlCiAJCQlpbnRlbF9kZGlfZ2V0X2J1Zl90cmFuc19kcChkZXZfcHJp
diwgcG9ydCwgJm5fZW50cmllcyk7CkBAIC0yMTU3LDcgKzIxNjEsOCBAQCBzdGF0aWMgdTggaW50
ZWxfZGRpX2RwX3ByZWVtcGhfbWF4KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB9CiAKIHN0
YXRpYyB2b2lkIGNubF9kZGlfdnN3aW5nX3Byb2dyYW0oc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsCi0JCQkJICAgaW50IGxldmVsLCBlbnVtIGludGVsX291dHB1dF90eXBlIHR5cGUpCisJ
CQkJICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkJICAg
aW50IGxldmVsKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWNvbnN0IHN0cnVjdCBjbmxfZGRpX2J1Zl90cmFucyAq
ZGRpX3RyYW5zbGF0aW9uczsKQEAgLTIxNjUsOSArMjE3MCw5IEBAIHN0YXRpYyB2b2lkIGNubF9k
ZGlfdnN3aW5nX3Byb2dyYW0oc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaW50IG5f
ZW50cmllcywgbG47CiAJdTMyIHZhbDsKIAotCWlmICh0eXBlID09IElOVEVMX09VVFBVVF9IRE1J
KQorCWlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1J
KSkKIAkJZGRpX3RyYW5zbGF0aW9ucyA9IGNubF9nZXRfYnVmX3RyYW5zX2hkbWkoZGV2X3ByaXYs
ICZuX2VudHJpZXMpOwotCWVsc2UgaWYgKHR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkKKwllbHNl
IGlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9FRFApKQog
CQlkZGlfdHJhbnNsYXRpb25zID0gY25sX2dldF9idWZfdHJhbnNfZWRwKGRldl9wcml2LCAmbl9l
bnRyaWVzKTsKIAllbHNlCiAJCWRkaV90cmFuc2xhdGlvbnMgPSBjbmxfZ2V0X2J1Zl90cmFuc19k
cChkZXZfcHJpdiwgJm5fZW50cmllcyk7CkBAIC0yMjIxLDIyICsyMjI2LDE2IEBAIHN0YXRpYyB2
b2lkIGNubF9kZGlfdnN3aW5nX3Byb2dyYW0oc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIs
CiB9CiAKIHN0YXRpYyB2b2lkIGNubF9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyLAotCQkJCSAgICBpbnQgbGV2ZWwsIGVudW0gaW50ZWxfb3V0cHV0X3R5
cGUgdHlwZSkKKwkJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCisJCQkJICAgIGludCBsZXZlbCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAllbnVtIHBvcnQgcG9ydCA9IGVu
Y29kZXItPnBvcnQ7CiAJaW50IHdpZHRoLCByYXRlLCBsbjsKIAl1MzIgdmFsOwogCi0JaWYgKHR5
cGUgPT0gSU5URUxfT1VUUFVUX0hETUkpIHsKLQkJd2lkdGggPSA0OwotCQlyYXRlID0gMDsgLyog
UmF0ZSBpcyBhbHdheXMgPCB0aGFuIDZHSHogZm9yIEhETUkgKi8KLQl9IGVsc2UgewotCQlzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwotCi0JCXdp
ZHRoID0gaW50ZWxfZHAtPmxhbmVfY291bnQ7Ci0JCXJhdGUgPSBpbnRlbF9kcC0+bGlua19yYXRl
OwotCX0KKwl3aWR0aCA9IGNydGNfc3RhdGUtPmxhbmVfY291bnQ7CisJcmF0ZSA9IGNydGNfc3Rh
dGUtPnBvcnRfY2xvY2s7CiAKIAkvKgogCSAqIDEuIElmIHBvcnQgdHlwZSBpcyBlRFAgb3IgRFAs
CkBAIC0yMjQ0LDEwICsyMjQzLDEwIEBAIHN0YXRpYyB2b2lkIGNubF9kZGlfdnN3aW5nX3NlcXVl
bmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqIGVsc2UgY2xlYXIgdG8gMGIu
CiAJICovCiAJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgQ05MX1BPUlRfUENTX0RXMV9M
TjAocG9ydCkpOwotCWlmICh0eXBlICE9IElOVEVMX09VVFBVVF9IRE1JKQotCQl2YWwgfD0gQ09N
TU9OX0tFRVBFUl9FTjsKLQllbHNlCisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0
ZSwgSU5URUxfT1VUUFVUX0hETUkpKQogCQl2YWwgJj0gfkNPTU1PTl9LRUVQRVJfRU47CisJZWxz
ZQorCQl2YWwgfD0gQ09NTU9OX0tFRVBFUl9FTjsKIAlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwg
Q05MX1BPUlRfUENTX0RXMV9HUlAocG9ydCksIHZhbCk7CiAKIAkvKiAyLiBQcm9ncmFtIGxvYWRn
ZW4gc2VsZWN0ICovCkBAIC0yMjc5LDcgKzIyNzgsNyBAQCBzdGF0aWMgdm9pZCBjbmxfZGRpX3Zz
d2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgQ05MX1BPUlRfVFhfRFc1X0dSUChwb3J0KSwgdmFsKTsKIAogCS8qIDUu
IFByb2dyYW0gc3dpbmcgYW5kIGRlLWVtcGhhc2lzICovCi0JY25sX2RkaV92c3dpbmdfcHJvZ3Jh
bShlbmNvZGVyLCBsZXZlbCwgdHlwZSk7CisJY25sX2RkaV92c3dpbmdfcHJvZ3JhbShlbmNvZGVy
LCBjcnRjX3N0YXRlLCBsZXZlbCk7CiAKIAkvKiA2LiBTZXQgdHJhaW5pbmcgZW5hYmxlIHRvIHRy
aWdnZXIgdXBkYXRlICovCiAJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgQ05MX1BPUlRf
VFhfRFc1X0xOMChwb3J0KSk7CkBAIC0yMjg3LDIzICsyMjg2LDIyIEBAIHN0YXRpYyB2b2lkIGNu
bF9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LCBDTkxfUE9SVF9UWF9EVzVfR1JQKHBvcnQpLCB2YWwpOwog
fQogCi1zdGF0aWMgdm9pZCBpY2xfZGRpX2NvbWJvX3Zzd2luZ19wcm9ncmFtKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkJdTMyIGxldmVsLCBlbnVtIHBoeSBwaHksIGlu
dCB0eXBlLAotCQkJCQlpbnQgcmF0ZSkKK3N0YXRpYyB2b2lkIGljbF9kZGlfY29tYm9fdnN3aW5n
X3Byb2dyYW0oc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkJCSBjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkJIGludCBsZXZlbCkKIHsKLQlj
b25zdCBzdHJ1Y3QgY25sX2RkaV9idWZfdHJhbnMgKmRkaV90cmFuc2xhdGlvbnMgPSBOVUxMOwot
CXUzMiBuX2VudHJpZXMsIHZhbDsKLQlpbnQgbG47CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CisJY29uc3Qgc3RydWN0IGNu
bF9kZGlfYnVmX3RyYW5zICpkZGlfdHJhbnNsYXRpb25zOworCWVudW0gcGh5IHBoeSA9IGludGVs
X3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKKwlpbnQgbl9lbnRyaWVzLCBs
bjsKKwl1MzIgdmFsOwogCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpCi0JCWRkaV90
cmFuc2xhdGlvbnMgPSB0Z2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhkZXZfcHJpdiwgdHlwZSwgcmF0
ZSwKLQkJCQkJCQkgICAmbl9lbnRyaWVzKTsKKwkJZGRpX3RyYW5zbGF0aW9ucyA9IHRnbF9nZXRf
Y29tYm9fYnVmX3RyYW5zKGNydGNfc3RhdGUsICZuX2VudHJpZXMpOwogCWVsc2UgaWYgKElTX0VM
S0hBUlRMQUtFKGRldl9wcml2KSkKLQkJZGRpX3RyYW5zbGF0aW9ucyA9IGVobF9nZXRfY29tYm9f
YnVmX3RyYW5zKGRldl9wcml2LCB0eXBlLCByYXRlLAotCQkJCQkJCSAgICZuX2VudHJpZXMpOwor
CQlkZGlfdHJhbnNsYXRpb25zID0gZWhsX2dldF9jb21ib19idWZfdHJhbnMoY3J0Y19zdGF0ZSwg
Jm5fZW50cmllcyk7CiAJZWxzZQotCQlkZGlfdHJhbnNsYXRpb25zID0gaWNsX2dldF9jb21ib19i
dWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsCi0JCQkJCQkJICAgJm5fZW50cmllcyk7CisJ
CWRkaV90cmFuc2xhdGlvbnMgPSBpY2xfZ2V0X2NvbWJvX2J1Zl90cmFucyhjcnRjX3N0YXRlLCAm
bl9lbnRyaWVzKTsKIAlpZiAoIWRkaV90cmFuc2xhdGlvbnMpCiAJCXJldHVybjsKIApAQCAtMjM1
MywyNSArMjM1MSwxNiBAQCBzdGF0aWMgdm9pZCBpY2xfZGRpX2NvbWJvX3Zzd2luZ19wcm9ncmFt
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIH0KIAogc3RhdGljIHZvaWQgaWNs
X2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAotCQkJCQkgICAgICB1MzIgbGV2ZWwsCi0JCQkJCSAgICAgIGVudW0gaW50ZWxfb3V0cHV0
X3R5cGUgdHlwZSkKKwkJCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCisJCQkJCSAgICAgIGludCBsZXZlbCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAllbnVtIHBoeSBw
aHkgPSBpbnRlbF9wb3J0X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7Ci0JaW50IHdp
ZHRoID0gMDsKLQlpbnQgcmF0ZSA9IDA7CisJaW50IHdpZHRoLCByYXRlLCBsbjsKIAl1MzIgdmFs
OwotCWludCBsbiA9IDA7CiAKLQlpZiAodHlwZSA9PSBJTlRFTF9PVVRQVVRfSERNSSkgewotCQl3
aWR0aCA9IDQ7Ci0JCS8qIFJhdGUgaXMgYWx3YXlzIDwgdGhhbiA2R0h6IGZvciBIRE1JICovCi0J
fSBlbHNlIHsKLQkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChl
bmNvZGVyKTsKLQotCQl3aWR0aCA9IGludGVsX2RwLT5sYW5lX2NvdW50OwotCQlyYXRlID0gaW50
ZWxfZHAtPmxpbmtfcmF0ZTsKLQl9CisJd2lkdGggPSBjcnRjX3N0YXRlLT5sYW5lX2NvdW50Owor
CXJhdGUgPSBjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrOwogCiAJLyoKIAkgKiAxLiBJZiBwb3J0IHR5
cGUgaXMgZURQIG9yIERQLApAQCAtMjM3OSw3ICsyMzY4LDcgQEAgc3RhdGljIHZvaWQgaWNsX2Nv
bWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
LAogCSAqIGVsc2UgY2xlYXIgdG8gMGIuCiAJICovCiAJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwgSUNMX1BPUlRfUENTX0RXMV9MTjAocGh5KSk7Ci0JaWYgKHR5cGUgPT0gSU5URUxfT1VU
UFVUX0hETUkpCisJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwgSU5URUxfT1VU
UFVUX0hETUkpKQogCQl2YWwgJj0gfkNPTU1PTl9LRUVQRVJfRU47CiAJZWxzZQogCQl2YWwgfD0g
Q09NTU9OX0tFRVBFUl9FTjsKQEAgLTI0MTQsNyArMjQwMyw3IEBAIHN0YXRpYyB2b2lkIGljbF9j
b21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKIAlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgSUNMX1BPUlRfVFhfRFc1X0dSUChwaHkpLCB2
YWwpOwogCiAJLyogNS4gUHJvZ3JhbSBzd2luZyBhbmQgZGUtZW1waGFzaXMgKi8KLQlpY2xfZGRp
X2NvbWJvX3Zzd2luZ19wcm9ncmFtKGRldl9wcml2LCBsZXZlbCwgcGh5LCB0eXBlLCByYXRlKTsK
KwlpY2xfZGRpX2NvbWJvX3Zzd2luZ19wcm9ncmFtKGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVs
KTsKIAogCS8qIDYuIFNldCB0cmFpbmluZyBlbmFibGUgdG8gdHJpZ2dlciB1cGRhdGUgKi8KIAl2
YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBJQ0xfUE9SVF9UWF9EVzVfTE4wKHBoeSkpOwpA
QCAtMjQyMywyMyArMjQxMiwxNiBAQCBzdGF0aWMgdm9pZCBpY2xfY29tYm9fcGh5X2RkaV92c3dp
bmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiB9CiAKIHN0YXRpYyB2
b2lkIGljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKLQkJCQkJICAgaW50IGxpbmtfY2xvY2ssIHUzMiBsZXZlbCwKLQkJCQkJICAgZW51
bSBpbnRlbF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkJICAgaW50IGxldmVsKQogewogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVu
dW0gdGNfcG9ydCB0Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZfcHJpdiwgZW5jb2Rlci0+
cG9ydCk7CiAJY29uc3Qgc3RydWN0IGljbF9tZ19waHlfZGRpX2J1Zl90cmFucyAqZGRpX3RyYW5z
bGF0aW9uczsKLQl1MzIgbl9lbnRyaWVzLCB2YWw7Ci0JaW50IGxuLCByYXRlID0gMDsKKwlpbnQg
bl9lbnRyaWVzLCBsbjsKKwl1MzIgdmFsOwogCi0JaWYgKHR5cGUgIT0gSU5URUxfT1VUUFVUX0hE
TUkpIHsKLQkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNv
ZGVyKTsKLQotCQlyYXRlID0gaW50ZWxfZHAtPmxpbmtfcmF0ZTsKLQl9Ci0KLQlkZGlfdHJhbnNs
YXRpb25zID0gaWNsX2dldF9tZ19idWZfdHJhbnMoZGV2X3ByaXYsIHR5cGUsIHJhdGUsCi0JCQkJ
CQkmbl9lbnRyaWVzKTsKKwlkZGlfdHJhbnNsYXRpb25zID0gaWNsX2dldF9tZ19idWZfdHJhbnMo
Y3J0Y19zdGF0ZSwgJm5fZW50cmllcyk7CiAJLyogVGhlIHRhYmxlIGRvZXMgbm90IGhhdmUgdmFs
dWVzIGZvciBsZXZlbCAzIGFuZCBsZXZlbCA5LiAqLwogCWlmIChsZXZlbCA+PSBuX2VudHJpZXMg
fHwgbGV2ZWwgPT0gMyB8fCBsZXZlbCA9PSA5KSB7CiAJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLApAQCAtMjUwNiw3ICsyNDg4LDcgQEAgc3RhdGljIHZvaWQgaWNsX21nX3BoeV9kZGlfdnN3
aW5nX3NlcXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqLwogCWZvciAo
bG4gPSAwOyBsbiA8IDI7IGxuKyspIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwg
TUdfQ0xLSFVCKGxuLCB0Y19wb3J0KSk7Ci0JCWlmIChsaW5rX2Nsb2NrIDwgMzAwMDAwKQorCQlp
ZiAoY3J0Y19zdGF0ZS0+cG9ydF9jbG9jayA8IDMwMDAwMCkKIAkJCXZhbCB8PSBDRkdfTE9XX1JB
VEVfTEtSRU5fRU47CiAJCWVsc2UKIAkJCXZhbCAmPSB+Q0ZHX0xPV19SQVRFX0xLUkVOX0VOOwpA
QCAtMjUxNyw3ICsyNDk5LDcgQEAgc3RhdGljIHZvaWQgaWNsX21nX3BoeV9kZGlfdnN3aW5nX3Nl
cXVlbmNlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWZvciAobG4gPSAwOyBsbiA8
IDI7IGxuKyspIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgTUdfVFgxX0RDQyhs
biwgdGNfcG9ydCkpOwogCQl2YWwgJj0gfkNGR19BTUlfQ0tfRElWX09WRVJSSURFX1ZBTF9NQVNL
OwotCQlpZiAobGlua19jbG9jayA8PSA1MDAwMDApIHsKKwkJaWYgKGNydGNfc3RhdGUtPnBvcnRf
Y2xvY2sgPD0gNTAwMDAwKSB7CiAJCQl2YWwgJj0gfkNGR19BTUlfQ0tfRElWX09WRVJSSURFX0VO
OwogCQl9IGVsc2UgewogCQkJdmFsIHw9IENGR19BTUlfQ0tfRElWX09WRVJSSURFX0VOIHwKQEAg
LTI1MjcsNyArMjUwOSw3IEBAIHN0YXRpYyB2b2lkIGljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1
ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCQl2YWwgPSBpbnRlbF9kZV9y
ZWFkKGRldl9wcml2LCBNR19UWDJfRENDKGxuLCB0Y19wb3J0KSk7CiAJCXZhbCAmPSB+Q0ZHX0FN
SV9DS19ESVZfT1ZFUlJJREVfVkFMX01BU0s7Ci0JCWlmIChsaW5rX2Nsb2NrIDw9IDUwMDAwMCkg
eworCQlpZiAoY3J0Y19zdGF0ZS0+cG9ydF9jbG9jayA8PSA1MDAwMDApIHsKIAkJCXZhbCAmPSB+
Q0ZHX0FNSV9DS19ESVZfT1ZFUlJJREVfRU47CiAJCX0gZWxzZSB7CiAJCQl2YWwgfD0gQ0ZHX0FN
SV9DS19ESVZfT1ZFUlJJREVfRU4gfApAQCAtMjU1MywyOCArMjUzNSwyOCBAQCBzdGF0aWMgdm9p
ZCBpY2xfbWdfcGh5X2RkaV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsCiB9CiAKIHN0YXRpYyB2b2lkIGljbF9kZGlfdnN3aW5nX3NlcXVlbmNlKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAotCQkJCSAgICBpbnQgbGlua19jbG9jaywKLQkJCQkgICAg
dTMyIGxldmVsLAotCQkJCSAgICBlbnVtIGludGVsX291dHB1dF90eXBlIHR5cGUpCisJCQkJICAg
IGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCSAgICBpbnQg
bGV2ZWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShl
bmNvZGVyLT5iYXNlLmRldik7CiAJZW51bSBwaHkgcGh5ID0gaW50ZWxfcG9ydF90b19waHkoZGV2
X3ByaXYsIGVuY29kZXItPnBvcnQpOwogCiAJaWYgKGludGVsX3BoeV9pc19jb21ibyhkZXZfcHJp
diwgcGh5KSkKLQkJaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGxl
dmVsLCB0eXBlKTsKKwkJaWNsX2NvbWJvX3BoeV9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIs
IGNydGNfc3RhdGUsIGxldmVsKTsKIAllbHNlCi0JCWljbF9tZ19waHlfZGRpX3Zzd2luZ19zZXF1
ZW5jZShlbmNvZGVyLCBsaW5rX2Nsb2NrLCBsZXZlbCwKLQkJCQkJICAgICAgIHR5cGUpOworCQlp
Y2xfbWdfcGh5X2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwp
OwogfQogCiBzdGF0aWMgdm9pZAotdGdsX2RrbF9waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwgaW50IGxpbmtfY2xvY2ssCi0JCQkJdTMyIGxldmVs
KQordGdsX2RrbF9waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKKwkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
KwkJCQlpbnQgbGV2ZWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRl
bF9wb3J0X3RvX3RjKGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAljb25zdCBzdHJ1Y3QgdGds
X2RrbF9waHlfZGRpX2J1Zl90cmFucyAqZGRpX3RyYW5zbGF0aW9uczsKLQl1MzIgbl9lbnRyaWVz
LCB2YWwsIGxuLCBkcGNudF9tYXNrLCBkcGNudF92YWw7CisJdTMyIHZhbCwgZHBjbnRfbWFzaywg
ZHBjbnRfdmFsOworCWludCBuX2VudHJpZXMsIGxuOwogCiAJaWYgKGVuY29kZXItPnR5cGUgPT0g
SU5URUxfT1VUUFVUX0hETUkpIHsKIAkJbl9lbnRyaWVzID0gQVJSQVlfU0laRSh0Z2xfZGtsX3Bo
eV9oZG1pX2RkaV90cmFucyk7CkBAIC0yNjE4LDIwICsyNjAwLDIwIEBAIHRnbF9ka2xfcGh5X2Rk
aV92c3dpbmdfc2VxdWVuY2Uoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGludCBsaW5r
X2Nsb2NrLAogfQogCiBzdGF0aWMgdm9pZCB0Z2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKLQkJCQkgICAgaW50IGxpbmtfY2xvY2ssCi0JCQkJICAg
IHUzMiBsZXZlbCwKLQkJCQkgICAgZW51bSBpbnRlbF9vdXRwdXRfdHlwZSB0eXBlKQorCQkJCSAg
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkgICAgaW50
IGxldmVsKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRl
dl9wcml2LCBlbmNvZGVyLT5wb3J0KTsKIAogCWlmIChpbnRlbF9waHlfaXNfY29tYm8oZGV2X3By
aXYsIHBoeSkpCi0JCWljbF9jb21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBs
ZXZlbCwgdHlwZSk7CisJCWljbF9jb21ib19waHlfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVy
LCBjcnRjX3N0YXRlLCBsZXZlbCk7CiAJZWxzZQotCQl0Z2xfZGtsX3BoeV9kZGlfdnN3aW5nX3Nl
cXVlbmNlKGVuY29kZXIsIGxpbmtfY2xvY2ssIGxldmVsKTsKKwkJdGdsX2RrbF9waHlfZGRpX3Zz
d2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRlLCBsZXZlbCk7CiB9CiAKLXN0YXRpYyB1
MzIgdHJhbnNsYXRlX3NpZ25hbF9sZXZlbChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBpbnQg
c2lnbmFsX2xldmVscykKK3N0YXRpYyBpbnQgdHJhbnNsYXRlX3NpZ25hbF9sZXZlbChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgdTggc2lnbmFsX2xldmVscykKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCWludCBpOwpA
QCAtMjY0OCw1NSArMjYzMCw1OCBAQCBzdGF0aWMgdTMyIHRyYW5zbGF0ZV9zaWduYWxfbGV2ZWwo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgaW50IHNpZ25hbF9sZXZlbHMpCiAJcmV0dXJuIDA7
CiB9CiAKLXN0YXRpYyB1MzIgaW50ZWxfZGRpX2RwX2xldmVsKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCitzdGF0aWMgaW50IGludGVsX2RkaV9kcF9sZXZlbChzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQogewogCXU4IHRyYWluX3NldCA9IGludGVsX2RwLT50cmFpbl9zZXRbMF07Ci0JaW50
IHNpZ25hbF9sZXZlbHMgPSB0cmFpbl9zZXQgJiAoRFBfVFJBSU5fVk9MVEFHRV9TV0lOR19NQVNL
IHwKLQkJCQkJIERQX1RSQUlOX1BSRV9FTVBIQVNJU19NQVNLKTsKKwl1OCBzaWduYWxfbGV2ZWxz
ID0gdHJhaW5fc2V0ICYgKERQX1RSQUlOX1ZPTFRBR0VfU1dJTkdfTUFTSyB8CisJCQkJCURQX1RS
QUlOX1BSRV9FTVBIQVNJU19NQVNLKTsKIAogCXJldHVybiB0cmFuc2xhdGVfc2lnbmFsX2xldmVs
KGludGVsX2RwLCBzaWduYWxfbGV2ZWxzKTsKIH0KIAogc3RhdGljIHZvaWQKLXRnbF9zZXRfc2ln
bmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQordGdsX3NldF9zaWduYWxfbGV2
ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyID0gJmRwX3RvX2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZTsKIAlpbnQgbGV2ZWwgPSBpbnRl
bF9kZGlfZHBfbGV2ZWwoaW50ZWxfZHApOwogCi0JdGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5j
b2RlciwgaW50ZWxfZHAtPmxpbmtfcmF0ZSwKLQkJCQlsZXZlbCwgZW5jb2Rlci0+dHlwZSk7CisJ
dGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogfQog
CiBzdGF0aWMgdm9pZAotaWNsX3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCitpY2xfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
KwkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJ
c3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIgPSAmZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHAp
LT5iYXNlOwogCWludCBsZXZlbCA9IGludGVsX2RkaV9kcF9sZXZlbChpbnRlbF9kcCk7CiAKLQlp
Y2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBpbnRlbF9kcC0+bGlua19yYXRlLAotCQkJ
CWxldmVsLCBlbmNvZGVyLT50eXBlKTsKKwlpY2xfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVy
LCBjcnRjX3N0YXRlLCBsZXZlbCk7CiB9CiAKIHN0YXRpYyB2b2lkCi1jbmxfc2V0X3NpZ25hbF9s
ZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK2NubF9zZXRfc2lnbmFsX2xldmVscyhz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9
ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2U7CiAJaW50IGxldmVsID0gaW50ZWxfZGRp
X2RwX2xldmVsKGludGVsX2RwKTsKIAotCWNubF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIs
IGxldmVsLCBlbmNvZGVyLT50eXBlKTsKKwljbmxfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVy
LCBjcnRjX3N0YXRlLCBsZXZlbCk7CiB9CiAKIHN0YXRpYyB2b2lkCi1ieHRfc2V0X3NpZ25hbF9s
ZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK2J4dF9zZXRfc2lnbmFsX2xldmVscyhz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9
ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2U7CiAJaW50IGxldmVsID0gaW50ZWxfZGRp
X2RwX2xldmVsKGludGVsX2RwKTsKIAotCWJ4dF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIs
IGxldmVsLCBlbmNvZGVyLT50eXBlKTsKKwlieHRfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVy
LCBjcnRjX3N0YXRlLCBsZXZlbCk7CiB9CiAKIHN0YXRpYyB2b2lkCi1oc3dfc2V0X3NpZ25hbF9s
ZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK2hzd19zZXRfc2lnbmFsX2xldmVscyhz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9
ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2U7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CkBAIC0yNzEzLDcgKzI2
OTgsNyBAQCBoc3dfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
IAlpbnRlbF9kcC0+RFAgfD0gc2lnbmFsX2xldmVsczsKIAogCWlmIChJU19HRU45X0JDKGRldl9w
cml2KSkKLQkJc2tsX2RkaV9zZXRfaWJvb3N0KGVuY29kZXIsIGxldmVsLCBlbmNvZGVyLT50eXBl
KTsKKwkJc2tsX2RkaV9zZXRfaWJvb3N0KGVuY29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAog
CWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBERElfQlVGX0NUTChwb3J0KSwgaW50ZWxfZHAtPkRQ
KTsKIAlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIERESV9CVUZfQ1RMKHBvcnQpKTsK
QEAgLTMxMDgsOCArMzA5Myw5IEBAIHN0YXRpYyB2b2lkIHRnbF9kZGlfcHJlX2VuYWJsZV9kcChz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAlpbnQgbGV2ZWwgPSBpbnRlbF9kZGlf
ZHBfbGV2ZWwoaW50ZWxfZHApOwogCWVudW0gdHJhbnNjb2RlciB0cmFuc2NvZGVyID0gY3J0Y19z
dGF0ZS0+Y3B1X3RyYW5zY29kZXI7CiAKLQlpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxf
ZHAsIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssCi0JCQkJIGNydGNfc3RhdGUtPmxhbmVfY291bnQs
IGlzX21zdCk7CisJaW50ZWxfZHBfc2V0X2xpbmtfcGFyYW1zKGludGVsX2RwLAorCQkJCSBjcnRj
X3N0YXRlLT5wb3J0X2Nsb2NrLAorCQkJCSBjcnRjX3N0YXRlLT5sYW5lX2NvdW50KTsKIAogCWlu
dGVsX2RwLT5yZWdzLmRwX3RwX2N0bCA9IFRHTF9EUF9UUF9DVEwodHJhbnNjb2Rlcik7CiAJaW50
ZWxfZHAtPnJlZ3MuZHBfdHBfc3RhdHVzID0gVEdMX0RQX1RQX1NUQVRVUyh0cmFuc2NvZGVyKTsK
QEAgLTMxODEsOCArMzE2Nyw3IEBAIHN0YXRpYyB2b2lkIHRnbF9kZGlfcHJlX2VuYWJsZV9kcChz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkgKi8KIAogCS8qIDcuZSBDb25maWd1
cmUgdm9sdGFnZSBzd2luZyBhbmQgcmVsYXRlZCBJTyBzZXR0aW5ncyAqLwotCXRnbF9kZGlfdnN3
aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssIGxldmVsLAotCQkJ
CWVuY29kZXItPnR5cGUpOworCXRnbF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNf
c3RhdGUsIGxldmVsKTsKIAogCS8qCiAJICogNy5mIENvbWJvIFBIWTogQ29uZmlndXJlIFBPUlRf
Q0xfRFcxMCBTdGF0aWMgUG93ZXIgRG93biB0byBwb3dlciB1cApAQCAtMzIwNSw3ICszMTkwLDcg
QEAgc3RhdGljIHZvaWQgdGdsX2RkaV9wcmVfZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlLAogCSAqIFdlIG9ubHkgY29uZmlndXJlIHdoYXQgdGhlIHJlZ2lzdGVyIHZh
bHVlIHdpbGwgYmUgaGVyZS4gIEFjdHVhbAogCSAqIGVuYWJsaW5nIGhhcHBlbnMgZHVyaW5nIGxp
bmsgdHJhaW5pbmcgZmFydGhlciBkb3duLgogCSAqLwotCWludGVsX2RkaV9pbml0X2RwX2J1Zl9y
ZWcoZW5jb2Rlcik7CisJaW50ZWxfZGRpX2luaXRfZHBfYnVmX3JlZyhlbmNvZGVyLCBjcnRjX3N0
YXRlKTsKIAogCWlmICghaXNfbXN0KQogCQlpbnRlbF9kcF9zaW5rX2RwbXMoaW50ZWxfZHAsIERS
TV9NT0RFX0RQTVNfT04pOwpAQCAtMzIyNSwxMSArMzIxMCwxMSBAQCBzdGF0aWMgdm9pZCB0Z2xf
ZGRpX3ByZV9lbmFibGVfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJICog
ICAgIFBhdHRlcm4sIHdhaXQgZm9yIDUgaWRsZSBwYXR0ZXJucyAoRFBfVFBfU1RBVFVTIE1pbl9J
ZGxlc19TZW50KQogCSAqICAgICAodGltZW91dCBhZnRlciA4MDAgdXMpCiAJICovCi0JaW50ZWxf
ZHBfc3RhcnRfbGlua190cmFpbihpbnRlbF9kcCk7CisJaW50ZWxfZHBfc3RhcnRfbGlua190cmFp
bihpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKIAkvKiA3LmsgU2V0IERQX1RQX0NUTCBsaW5rIHRy
YWluaW5nIHRvIE5vcm1hbCAqLwogCWlmICghaXNfdHJhbnNfcG9ydF9zeW5jX21vZGUoY3J0Y19z
dGF0ZSkpCi0JCWludGVsX2RwX3N0b3BfbGlua190cmFpbihpbnRlbF9kcCk7CisJCWludGVsX2Rw
X3N0b3BfbGlua190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKIAkvKiA3LmwgQ29uZmln
dXJlIGFuZCBlbmFibGUgRkVDIGlmIG5lZWRlZCAqLwogCWludGVsX2RkaV9lbmFibGVfZmVjKGVu
Y29kZXIsIGNydGNfc3RhdGUpOwpAQCAtMzI1NSw4ICszMjQwLDkgQEAgc3RhdGljIHZvaWQgaHN3
X2RkaV9wcmVfZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCWVs
c2UKIAkJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGlzX21zdCAmJiBwb3J0ID09IFBPUlRf
QSk7CiAKLQlpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxfZHAsIGNydGNfc3RhdGUtPnBv
cnRfY2xvY2ssCi0JCQkJIGNydGNfc3RhdGUtPmxhbmVfY291bnQsIGlzX21zdCk7CisJaW50ZWxf
ZHBfc2V0X2xpbmtfcGFyYW1zKGludGVsX2RwLAorCQkJCSBjcnRjX3N0YXRlLT5wb3J0X2Nsb2Nr
LAorCQkJCSBjcnRjX3N0YXRlLT5sYW5lX2NvdW50KTsKIAogCWludGVsX2VkcF9wYW5lbF9vbihp
bnRlbF9kcCk7CiAKQEAgLTMyNzAsMTIgKzMyNTYsMTEgQEAgc3RhdGljIHZvaWQgaHN3X2RkaV9w
cmVfZW5hYmxlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCWljbF9wcm9n
cmFtX21nX2RwX21vZGUoZGlnX3BvcnQsIGNydGNfc3RhdGUpOwogCiAJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTEpCi0JCWljbF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNf
c3RhdGUtPnBvcnRfY2xvY2ssCi0JCQkJCWxldmVsLCBlbmNvZGVyLT50eXBlKTsKKwkJaWNsX2Rk
aV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwogCWVsc2UgaWYg
KElTX0NBTk5PTkxBS0UoZGV2X3ByaXYpKQotCQljbmxfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNv
ZGVyLCBsZXZlbCwgZW5jb2Rlci0+dHlwZSk7CisJCWNubF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVu
Y29kZXIsIGNydGNfc3RhdGUsIGxldmVsKTsKIAllbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2
KSkKLQkJYnh0X2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgbGV2ZWwsIGVuY29kZXItPnR5
cGUpOworCQlieHRfZGRpX3Zzd2luZ19zZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRlLCBsZXZl
bCk7CiAJZWxzZQogCQlpbnRlbF9wcmVwYXJlX2RwX2RkaV9idWZmZXJzKGVuY29kZXIsIGNydGNf
c3RhdGUpOwogCkBAIC0zMjg4LDE2ICszMjczLDE2IEBAIHN0YXRpYyB2b2lkIGhzd19kZGlfcHJl
X2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCQkJICAgICAg
IGxhbmVfcmV2ZXJzYWwpOwogCX0KIAotCWludGVsX2RkaV9pbml0X2RwX2J1Zl9yZWcoZW5jb2Rl
cik7CisJaW50ZWxfZGRpX2luaXRfZHBfYnVmX3JlZyhlbmNvZGVyLCBjcnRjX3N0YXRlKTsKIAlp
ZiAoIWlzX21zdCkKIAkJaW50ZWxfZHBfc2lua19kcG1zKGludGVsX2RwLCBEUk1fTU9ERV9EUE1T
X09OKTsKIAlpbnRlbF9kcF9zaW5rX3NldF9kZWNvbXByZXNzaW9uX3N0YXRlKGludGVsX2RwLCBj
cnRjX3N0YXRlLAogCQkJCQkgICAgICB0cnVlKTsKIAlpbnRlbF9kcF9zaW5rX3NldF9mZWNfcmVh
ZHkoaW50ZWxfZHAsIGNydGNfc3RhdGUpOwotCWludGVsX2RwX3N0YXJ0X2xpbmtfdHJhaW4oaW50
ZWxfZHApOworCWludGVsX2RwX3N0YXJ0X2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUp
OwogCWlmICgocG9ydCAhPSBQT1JUX0EgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KSAmJgog
CSAgICAhaXNfdHJhbnNfcG9ydF9zeW5jX21vZGUoY3J0Y19zdGF0ZSkpCi0JCWludGVsX2RwX3N0
b3BfbGlua190cmFpbihpbnRlbF9kcCk7CisJCWludGVsX2RwX3N0b3BfbGlua190cmFpbihpbnRl
bF9kcCwgY3J0Y19zdGF0ZSk7CiAKIAlpbnRlbF9kZGlfZW5hYmxlX2ZlYyhlbmNvZGVyLCBjcnRj
X3N0YXRlKTsKIApAQCAtMzMzNyw3ICszMzIyLDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3By
ZV9lbmFibGVfaGRtaShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAlzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydChlbmNv
ZGVyKTsKIAlzdHJ1Y3QgaW50ZWxfaGRtaSAqaW50ZWxfaGRtaSA9ICZpbnRlbF9kaWdfcG9ydC0+
aGRtaTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29k
ZXItPmJhc2UuZGV2KTsKLQlpbnQgbGV2ZWwgPSBpbnRlbF9kZGlfaGRtaV9sZXZlbChlbmNvZGVy
KTsKKwlpbnQgbGV2ZWwgPSBpbnRlbF9kZGlfaGRtaV9sZXZlbChlbmNvZGVyLCBjcnRjX3N0YXRl
KTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9y
dChlbmNvZGVyKTsKIAogCWludGVsX2RwX2R1YWxfbW9kZV9zZXRfdG1kc19vdXRwdXQoaW50ZWxf
aGRtaSwgdHJ1ZSk7CkBAIC0zMzQ4LDIwICszMzMzLDE4IEBAIHN0YXRpYyB2b2lkIGludGVsX2Rk
aV9wcmVfZW5hYmxlX2hkbWkoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJaWNs
X3Byb2dyYW1fbWdfZHBfbW9kZShkaWdfcG9ydCwgY3J0Y19zdGF0ZSk7CiAKIAlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA+PSAxMikKLQkJdGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2Rlciwg
Y3J0Y19zdGF0ZS0+cG9ydF9jbG9jaywKLQkJCQkJbGV2ZWwsIElOVEVMX09VVFBVVF9IRE1JKTsK
KwkJdGdsX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwog
CWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPT0gMTEpCi0JCWljbF9kZGlfdnN3aW5nX3Nl
cXVlbmNlKGVuY29kZXIsIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssCi0JCQkJCWxldmVsLCBJTlRF
TF9PVVRQVVRfSERNSSk7CisJCWljbF9kZGlfdnN3aW5nX3NlcXVlbmNlKGVuY29kZXIsIGNydGNf
c3RhdGUsIGxldmVsKTsKIAllbHNlIGlmIChJU19DQU5OT05MQUtFKGRldl9wcml2KSkKLQkJY25s
X2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgbGV2ZWwsIElOVEVMX09VVFBVVF9IRE1JKTsK
KwkJY25sX2RkaV92c3dpbmdfc2VxdWVuY2UoZW5jb2RlciwgY3J0Y19zdGF0ZSwgbGV2ZWwpOwog
CWVsc2UgaWYgKElTX0dFTjlfTFAoZGV2X3ByaXYpKQotCQlieHRfZGRpX3Zzd2luZ19zZXF1ZW5j
ZShlbmNvZGVyLCBsZXZlbCwgSU5URUxfT1VUUFVUX0hETUkpOworCQlieHRfZGRpX3Zzd2luZ19z
ZXF1ZW5jZShlbmNvZGVyLCBjcnRjX3N0YXRlLCBsZXZlbCk7CiAJZWxzZQogCQlpbnRlbF9wcmVw
YXJlX2hkbWlfZGRpX2J1ZmZlcnMoZW5jb2RlciwgbGV2ZWwpOwogCiAJaWYgKElTX0dFTjlfQkMo
ZGV2X3ByaXYpKQotCQlza2xfZGRpX3NldF9pYm9vc3QoZW5jb2RlciwgbGV2ZWwsIElOVEVMX09V
VFBVVF9IRE1JKTsKKwkJc2tsX2RkaV9zZXRfaWJvb3N0KGVuY29kZXIsIGNydGNfc3RhdGUsIGxl
dmVsKTsKIAogCWludGVsX2RkaV9lbmFibGVfcGlwZV9jbG9jayhlbmNvZGVyLCBjcnRjX3N0YXRl
KTsKIApAQCAtMzY0OSwxMiArMzYzMiwxNCBAQCBzdGF0aWMgdm9pZCB0cmFuc19wb3J0X3N5bmNf
c3RvcF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkgICAg
Y3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXIpCiAJCQljb250aW51ZTsKIAotCQlpbnRlbF9kcF9z
dG9wX2xpbmtfdHJhaW4oZW5jX3RvX2ludGVsX2RwKHNsYXZlX2VuY29kZXIpKTsKKwkJaW50ZWxf
ZHBfc3RvcF9saW5rX3RyYWluKGVuY190b19pbnRlbF9kcChzbGF2ZV9lbmNvZGVyKSwKKwkJCQkJ
IHNsYXZlX2NydGNfc3RhdGUpOwogCX0KIAogCXVzbGVlcF9yYW5nZSgyMDAsIDQwMCk7CiAKLQlp
bnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpKTsKKwlpbnRl
bF9kcF9zdG9wX2xpbmtfdHJhaW4oZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpLAorCQkJCSBjcnRj
X3N0YXRlKTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfZW5hYmxlX2RkaV9kcChzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKQEAgLTM2NjcsNyArMzY1Miw3IEBAIHN0YXRpYyB2b2lk
IGludGVsX2VuYWJsZV9kZGlfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJ
ZW51bSBwb3J0IHBvcnQgPSBlbmNvZGVyLT5wb3J0OwogCiAJaWYgKHBvcnQgPT0gUE9SVF9BICYm
IElOVEVMX0dFTihkZXZfcHJpdikgPCA5KQotCQlpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oaW50
ZWxfZHApOworCQlpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUp
OwogCiAJaW50ZWxfZWRwX2JhY2tsaWdodF9vbihjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKIAlp
bnRlbF9wc3JfZW5hYmxlKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKQEAgLTM5MjcsNyArMzkxMiw4
IEBAIGludGVsX2RkaV9wcmVfcGxsX2VuYWJsZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSwKIAkJCQkJCWNydGNfc3RhdGUtPmxhbmVfbGF0X29wdGltX21hc2spOwogfQogCi1zdGF0
aWMgdm9pZCBpbnRlbF9kZGlfcHJlcGFyZV9saW5rX3JldHJhaW4oc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKK3N0YXRpYyB2b2lkIGludGVsX2RkaV9wcmVwYXJlX2xpbmtfcmV0cmFpbihzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9k
aWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPQpAQCAtMzk1Nyw5ICszOTQzLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxf
ZGRpX3ByZXBhcmVfbGlua19yZXRyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAKIAlk
cF90cF9jdGwgPSBEUF9UUF9DVExfRU5BQkxFIHwKIAkJICAgIERQX1RQX0NUTF9MSU5LX1RSQUlO
X1BBVDEgfCBEUF9UUF9DVExfU0NSQU1CTEVfRElTQUJMRTsKLQlpZiAoaW50ZWxfZHAtPmxpbmtf
bXN0KQorCWlmIChpbnRlbF9jcnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9E
UF9NU1QpKSB7CiAJCWRwX3RwX2N0bCB8PSBEUF9UUF9DVExfTU9ERV9NU1Q7Ci0JZWxzZSB7CisJ
fSBlbHNlIHsKIAkJZHBfdHBfY3RsIHw9IERQX1RQX0NUTF9NT0RFX1NTVDsKIAkJaWYgKGRybV9k
cF9lbmhhbmNlZF9mcmFtZV9jYXAoaW50ZWxfZHAtPmRwY2QpKQogCQkJZHBfdHBfY3RsIHw9IERQ
X1RQX0NUTF9FTkhBTkNFRF9GUkFNRV9FTkFCTEU7CkBAIC0zOTc1LDYgKzM5NjEsNyBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9kZGlfcHJlcGFyZV9saW5rX3JldHJhaW4oc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfZGRpX3NldF9saW5rX3RyYWluKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgICAgIHU4IGRwX3RyYWluX3BhdCkKIHsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKQEAgLTQw
MTQsNyArNDAwMSw4IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9zZXRfbGlua190cmFpbihzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwg
RERJX0JVRl9DVEwocG9ydCkpOwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9kZGlfc2V0X2lkbGVf
bGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHZvaWQgaW50ZWxf
ZGRpX3NldF9pZGxlX2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkJ
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2U7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5i
YXNlLmRldik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RkaS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuaAppbmRleCAw
NzdlOWRiYmUzNjcuLjdhMDZiYjk0MmQyMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kZGkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5oCkBAIC00MCw4ICs0MCwxMCBAQCB2b2lkIGludGVsX2RkaV9zZXRfdmNfcGF5
bG9hZF9hbGxvYyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJ
CQkgICAgYm9vbCBzdGF0ZSk7CiB2b2lkIGludGVsX2RkaV9jb21wdXRlX21pbl92b2x0YWdlX2xl
dmVsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkJIHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKLXUzMiBieHRfc2lnbmFsX2xldmVscyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKTsKLXUzMiBkZGlfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKTsKK3UzMiBieHRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwLAorCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSk7Cit1MzIgZGRpX3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJ
ICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwogaW50IGlu
dGVsX2RkaV90b2dnbGVfaGRjcF9zaWduYWxsaW5nKHN0cnVjdCBpbnRlbF9lbmNvZGVyICppbnRl
bF9lbmNvZGVyLAogCQkJCSAgICAgYm9vbCBlbmFibGUpOwogdm9pZCBpY2xfc2FuaXRpemVfZW5j
b2Rlcl9wbGxfbWFwcGluZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4
IGUwMzg0YWY0ODljMi4uYjcxNzcxMzRhY2MzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtMTI3NCw3ICsxMjc0LDYgQEAg
c3RydWN0IGludGVsX2RwIHsKIAlpbnQgbGlua19yYXRlOwogCXU4IGxhbmVfY291bnQ7CiAJdTgg
c2lua19jb3VudDsKLQlib29sIGxpbmtfbXN0OwogCWJvb2wgbGlua190cmFpbmVkOwogCWJvb2wg
aGFzX2F1ZGlvOwogCWJvb2wgcmVzZXRfbGlua19wYXJhbXM7CkBAIC0xMzY2LDEzICsxMzY1LDE5
IEBAIHN0cnVjdCBpbnRlbF9kcCB7CiAJaTkxNV9yZWdfdCAoKmF1eF9jaF9kYXRhX3JlZykoc3Ry
dWN0IGludGVsX2RwICpkcCwgaW50IGluZGV4KTsKIAogCS8qIFRoaXMgaXMgY2FsbGVkIGJlZm9y
ZSBhIGxpbmsgdHJhaW5pbmcgaXMgc3RhcnRlcmQgKi8KLQl2b2lkICgqcHJlcGFyZV9saW5rX3Jl
dHJhaW4pKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwotCXZvaWQgKCpzZXRfbGlua190cmFp
bikoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTggZHBfdHJhaW5fcGF0KTsKLQl2b2lkICgq
c2V0X2lkbGVfbGlua190cmFpbikoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7Ci0Jdm9pZCAo
KnNldF9zaWduYWxfbGV2ZWxzKShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKKwl2b2lkICgq
cHJlcGFyZV9saW5rX3JldHJhaW4pKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICAg
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CisJdm9pZCAoKnNl
dF9saW5rX3RyYWluKShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgICAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJICAgICAgIHU4IGRwX3Ry
YWluX3BhdCk7CisJdm9pZCAoKnNldF9pZGxlX2xpbmtfdHJhaW4pKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsCisJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKTsKKwl2b2lkICgqc2V0X3NpZ25hbF9sZXZlbHMpKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiAK
IAl1OCAoKnByZWVtcGhfbWF4KShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLQl1OCAoKnZv
bHRhZ2VfbWF4KShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKKwl1OCAoKnZvbHRhZ2VfbWF4
KShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiAKIAkvKiBEaXNwbGF5cG9ydCBjb21wbGlhbmNlIHRlc3Rp
bmcgKi8KIAlzdHJ1Y3QgaW50ZWxfZHBfY29tcGxpYW5jZSBjb21wbGlhbmNlOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCmluZGV4IDFiNzg2ZDVhZjM4My4uNTYyY2I1NjBk
NmMwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCkBAIC0yNjI3LDEz
ICsyNjI3LDExIEBAIGludGVsX2RwX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogfQogCiB2b2lkIGludGVsX2RwX3NldF9saW5rX3BhcmFtcyhzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAotCQkJICAgICAgaW50IGxpbmtfcmF0ZSwgdTggbGFuZV9jb3VudCwK
LQkJCSAgICAgIGJvb2wgbGlua19tc3QpCisJCQkgICAgICBpbnQgbGlua19yYXRlLCBpbnQgbGFu
ZV9jb3VudCkKIHsKIAlpbnRlbF9kcC0+bGlua190cmFpbmVkID0gZmFsc2U7CiAJaW50ZWxfZHAt
PmxpbmtfcmF0ZSA9IGxpbmtfcmF0ZTsKIAlpbnRlbF9kcC0+bGFuZV9jb3VudCA9IGxhbmVfY291
bnQ7Ci0JaW50ZWxfZHAtPmxpbmtfbXN0ID0gbGlua19tc3Q7CiB9CiAKIHN0YXRpYyB2b2lkIGlu
dGVsX2RwX3ByZXBhcmUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCkBAIC0yNjQ1LDEw
ICsyNjQzLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfZHBfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlciwKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMo
cGlwZV9jb25maWctPnVhcGkuY3J0Yyk7CiAJY29uc3Qgc3RydWN0IGRybV9kaXNwbGF5X21vZGUg
KmFkanVzdGVkX21vZGUgPSAmcGlwZV9jb25maWctPmh3LmFkanVzdGVkX21vZGU7CiAKLQlpbnRl
bF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxfZHAsIHBpcGVfY29uZmlnLT5wb3J0X2Nsb2NrLAot
CQkJCSBwaXBlX2NvbmZpZy0+bGFuZV9jb3VudCwKLQkJCQkgaW50ZWxfY3J0Y19oYXNfdHlwZShw
aXBlX2NvbmZpZywKLQkJCQkJCSAgICAgSU5URUxfT1VUUFVUX0RQX01TVCkpOworCWludGVsX2Rw
X3NldF9saW5rX3BhcmFtcyhpbnRlbF9kcCwKKwkJCQkgcGlwZV9jb25maWctPnBvcnRfY2xvY2ss
CisJCQkJIHBpcGVfY29uZmlnLT5sYW5lX2NvdW50KTsKIAogCS8qCiAJICogVGhlcmUgYXJlIGZv
dXIga2luZHMgb2YgRFAgcmVnaXN0ZXJzOgpAQCAtMzYxOSw2ICszNjE2LDcgQEAgc3RhdGljIHZv
aWQgY2h2X3Bvc3RfZGlzYWJsZV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwK
IAogc3RhdGljIHZvaWQKIGNwdF9zZXRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwLAorCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJ
ICAgdTggZHBfdHJhaW5fcGF0KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwpAQCAtMzY0OSw2ICszNjQ3LDcgQEAgY3B0X3NldF9s
aW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAKIHN0YXRpYyB2b2lkCiBnNHhf
c2V0X2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJICAgY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCSAgIHU4IGRwX3RyYWluX3BhdCkK
IHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVs
X2RwKTsKQEAgLTM2NzgsMTMgKzM2NzcsMTQgQEAgZzR4X3NldF9saW5rX3RyYWluKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCiB9CiAKIHN0YXRpYyB2b2lkIGludGVsX2RwX2VuYWJsZV9wb3J0
KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCi0JCQkJIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpvbGRfY3J0Y19zdGF0ZSkKKwkJCQkgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKIAkvKiBlbmFibGUgd2l0aCBwYXR0ZXJuIDEgKGFzIHBl
ciBzcGVjKSAqLwogCi0JaW50ZWxfZHBfcHJvZ3JhbV9saW5rX3RyYWluaW5nX3BhdHRlcm4oaW50
ZWxfZHAsIERQX1RSQUlOSU5HX1BBVFRFUk5fMSk7CisJaW50ZWxfZHBfcHJvZ3JhbV9saW5rX3Ry
YWluaW5nX3BhdHRlcm4oaW50ZWxfZHAsIGNydGNfc3RhdGUsCisJCQkJCSAgICAgICBEUF9UUkFJ
TklOR19QQVRURVJOXzEpOwogCiAJLyoKIAkgKiBNYWdpYyBmb3IgVkxWL0NIVi4gV2UgX211c3Rf
IGZpcnN0IHNldCB1cCB0aGUgcmVnaXN0ZXIKQEAgLTM2OTMsNyArMzY5Myw3IEBAIHN0YXRpYyB2
b2lkIGludGVsX2RwX2VuYWJsZV9wb3J0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJICog
ZmFpbCB3aGVuIHRoZSBwb3dlciBzZXF1ZW5jZXIgaXMgZnJlc2hseSB1c2VkIGZvciB0aGlzIHBv
cnQuCiAJICovCiAJaW50ZWxfZHAtPkRQIHw9IERQX1BPUlRfRU47Ci0JaWYgKG9sZF9jcnRjX3N0
YXRlLT5oYXNfYXVkaW8pCisJaWYgKGNydGNfc3RhdGUtPmhhc19hdWRpbykKIAkJaW50ZWxfZHAt
PkRQIHw9IERQX0FVRElPX09VVFBVVF9FTkFCTEU7CiAKIAlpbnRlbF9kZV93cml0ZShkZXZfcHJp
diwgaW50ZWxfZHAtPm91dHB1dF9yZWcsIGludGVsX2RwLT5EUCk7CkBAIC0zNzM3LDggKzM3Mzcs
OCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9lbmFibGVfZHAoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsCiAJfQogCiAJaW50ZWxfZHBfc2lua19kcG1zKGludGVsX2RwLCBEUk1fTU9ERV9E
UE1TX09OKTsKLQlpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKGludGVsX2RwKTsKLQlpbnRlbF9k
cF9zdG9wX2xpbmtfdHJhaW4oaW50ZWxfZHApOworCWludGVsX2RwX3N0YXJ0X2xpbmtfdHJhaW4o
aW50ZWxfZHAsIHBpcGVfY29uZmlnKTsKKwlpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oaW50ZWxf
ZHAsIHBpcGVfY29uZmlnKTsKIAogCWlmIChwaXBlX2NvbmZpZy0+aGFzX2F1ZGlvKSB7CiAJCWRy
bV9kYmcoJmRldl9wcml2LT5kcm0sICJFbmFibGluZyBEUCBhdWRpbyBvbiBwaXBlICVjXG4iLApA
QCAtMzk0NywxMiArMzk0NywxNCBAQCBpbnRlbF9kcF9nZXRfbGlua19zdGF0dXMoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwgdTggbGlua19zdGF0dXNbRFBfTElOS19TVEFUVQogCQkJCURQX0xJ
TktfU1RBVFVTX1NJWkUpID09IERQX0xJTktfU1RBVFVTX1NJWkU7CiB9CiAKLXN0YXRpYyB1OCBp
bnRlbF9kcF92b2x0YWdlX21heF8yKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMg
dTggaW50ZWxfZHBfdm9sdGFnZV9tYXhfMihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJ
CSBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlyZXR1cm4g
RFBfVFJBSU5fVk9MVEFHRV9TV0lOR19MRVZFTF8yOwogfQogCi1zdGF0aWMgdTggaW50ZWxfZHBf
dm9sdGFnZV9tYXhfMyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHU4IGludGVs
X2RwX3ZvbHRhZ2VfbWF4XzMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJcmV0dXJuIERQX1RSQUlO
X1ZPTFRBR0VfU1dJTkdfTEVWRUxfMzsKIH0KQEAgLTM5NjcsNyArMzk2OSw4IEBAIHN0YXRpYyB1
OCBpbnRlbF9kcF9wcmVfZW1wZW1waF9tYXhfMyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQog
CXJldHVybiBEUF9UUkFJTl9QUkVfRU1QSF9MRVZFTF8zOwogfQogCi1zdGF0aWMgdm9pZCB2bHZf
c2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyB2b2lk
IHZsdl9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAg
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIgPSAmZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlOwog
CXVuc2lnbmVkIGxvbmcgZGVtcGhfcmVnX3ZhbHVlLCBwcmVlbXBoX3JlZ192YWx1ZSwKQEAgLTQw
NDcsMTEgKzQwNTAsMTMgQEAgc3RhdGljIHZvaWQgdmx2X3NldF9zaWduYWxfbGV2ZWxzKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCXJldHVybjsKIAl9CiAKLQl2bHZfc2V0X3BoeV9zaWdu
YWxfbGV2ZWwoZW5jb2RlciwgZGVtcGhfcmVnX3ZhbHVlLCBwcmVlbXBoX3JlZ192YWx1ZSwKKwl2
bHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgY3J0Y19zdGF0ZSwKKwkJCQkgZGVtcGhf
cmVnX3ZhbHVlLCBwcmVlbXBoX3JlZ192YWx1ZSwKIAkJCQkgdW5pcXRyYW5zY2FsZV9yZWdfdmFs
dWUsIDApOwogfQogCi1zdGF0aWMgdm9pZCBjaHZfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyB2b2lkIGNodl9zZXRfc2lnbmFsX2xldmVscyhzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIgPSAmZHBf
dG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlOwogCXUzMiBkZWVtcGhfcmVnX3ZhbHVlLCBtYXJn
aW5fcmVnX3ZhbHVlOwpAQCAtNDEyOCw4ICs0MTMzLDkgQEAgc3RhdGljIHZvaWQgY2h2X3NldF9z
aWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCXJldHVybjsKIAl9CiAK
LQljaHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgZGVlbXBoX3JlZ192YWx1ZSwKLQkJ
CQkgbWFyZ2luX3JlZ192YWx1ZSwgdW5pcV90cmFuc19zY2FsZSk7CisJY2h2X3NldF9waHlfc2ln
bmFsX2xldmVsKGVuY29kZXIsIGNydGNfc3RhdGUsCisJCQkJIGRlZW1waF9yZWdfdmFsdWUsIG1h
cmdpbl9yZWdfdmFsdWUsCisJCQkJIHVuaXFfdHJhbnNfc2NhbGUpOwogfQogCiBzdGF0aWMgdTMy
IGc0eF9zaWduYWxfbGV2ZWxzKHU4IHRyYWluX3NldCkKQEAgLTQxNzAsNyArNDE3Niw4IEBAIHN0
YXRpYyB1MzIgZzR4X3NpZ25hbF9sZXZlbHModTggdHJhaW5fc2V0KQogfQogCiBzdGF0aWMgdm9p
ZAotZzR4X3NldF9zaWduYWxfbGV2ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitnNHhf
c2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJICAgICAgY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTggdHJhaW5f
c2V0ID0gaW50ZWxfZHAtPnRyYWluX3NldFswXTsKQEAgLTQyMTcsNyArNDIyNCw4IEBAIHN0YXRp
YyB1MzIgc25iX2NwdV9lZHBfc2lnbmFsX2xldmVscyh1OCB0cmFpbl9zZXQpCiB9CiAKIHN0YXRp
YyB2b2lkCi1zbmJfY3B1X2VkcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKQorc25iX2NwdV9lZHBfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOwogCXU4IHRyYWluX3NldCA9IGludGVsX2RwLT50cmFpbl9zZXRbMF07CkBAIC00
MjY4LDcgKzQyNzYsOCBAQCBzdGF0aWMgdTMyIGl2Yl9jcHVfZWRwX3NpZ25hbF9sZXZlbHModTgg
dHJhaW5fc2V0KQogfQogCiBzdGF0aWMgdm9pZAotaXZiX2NwdV9lZHBfc2V0X3NpZ25hbF9sZXZl
bHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK2l2Yl9jcHVfZWRwX3NldF9zaWduYWxfbGV2
ZWxzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAl1OCB0cmFpbl9zZXQgPSBpbnRlbF9k
cC0+dHJhaW5fc2V0WzBdOwpAQCAtNDI4Niw3ICs0Mjk1LDggQEAgaXZiX2NwdV9lZHBfc2V0X3Np
Z25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlpbnRlbF9kZV9wb3N0aW5n
X3JlYWQoZGV2X3ByaXYsIGludGVsX2RwLT5vdXRwdXRfcmVnKTsKIH0KIAotdm9pZCBpbnRlbF9k
cF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQordm9pZCBpbnRl
bF9kcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCWNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXU4IHRyYWlu
X3NldCA9IGludGVsX2RwLT50cmFpbl9zZXRbMF07CkBAIC00MzAwLDExICs0MzEwLDEyIEBAIHZv
aWQgaW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
IAkJICAgIHRyYWluX3NldCAmIERQX1RSQUlOX01BWF9QUkVfRU1QSEFTSVNfUkVBQ0hFRCA/CiAJ
CSAgICAiIChtYXgpIiA6ICIiKTsKIAotCWludGVsX2RwLT5zZXRfc2lnbmFsX2xldmVscyhpbnRl
bF9kcCk7CisJaW50ZWxfZHAtPnNldF9zaWduYWxfbGV2ZWxzKGludGVsX2RwLCBjcnRjX3N0YXRl
KTsKIH0KIAogdm9pZAogaW50ZWxfZHBfcHJvZ3JhbV9saW5rX3RyYWluaW5nX3BhdHRlcm4oc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgICAgY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJICAgICAgIHU4IGRwX3RyYWluX3BhdCkKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsK
QEAgLTQzMTUsMTMgKzQzMjYsMTQgQEAgaW50ZWxfZHBfcHJvZ3JhbV9saW5rX3RyYWluaW5nX3Bh
dHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJCSAgICAiVXNpbmcgRFAgdHJhaW5p
bmcgcGF0dGVybiBUUFMlZFxuIiwKIAkJCSAgICBkcF90cmFpbl9wYXQgJiB0cmFpbl9wYXRfbWFz
ayk7CiAKLQlpbnRlbF9kcC0+c2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsIGRwX3RyYWluX3BhdCk7
CisJaW50ZWxfZHAtPnNldF9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlLCBkcF90cmFp
bl9wYXQpOwogfQogCi12b2lkIGludGVsX2RwX3NldF9pZGxlX2xpbmtfdHJhaW4oc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKK3ZvaWQgaW50ZWxfZHBfc2V0X2lkbGVfbGlua190cmFpbihzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUpCiB7CiAJaWYgKGludGVsX2RwLT5zZXRfaWRsZV9saW5rX3RyYWluKQot
CQlpbnRlbF9kcC0+c2V0X2lkbGVfbGlua190cmFpbihpbnRlbF9kcCk7CisJCWludGVsX2RwLT5z
ZXRfaWRsZV9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIH0KIAogc3RhdGljIHZv
aWQKQEAgLTUzMTIsMjMgKzUzMjQsMTcgQEAgc3RhdGljIHU4IGludGVsX2RwX3ByZXBhcmVfcGh5
dGVzdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQlyZXR1cm4gRFBfVEVTVF9OQUs7CiAJ
fQogCi0JLyoKLQkgKiBsaW5rX21zdCBpcyBzZXQgdG8gZmFsc2UgdG8gYXZvaWQgZXhlY3V0aW5n
IG1zdCByZWxhdGVkIGNvZGUKLQkgKiBkdXJpbmcgY29tcGxpYW5jZSB0ZXN0aW5nLgotCSAqLwot
CWludGVsX2RwLT5saW5rX21zdCA9IGZhbHNlOwotCiAJcmV0dXJuIERQX1RFU1RfQUNLOwogfQog
Ci1zdGF0aWMgdm9pZCBpbnRlbF9kcF9waHlfcGF0dGVybl91cGRhdGUoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKK3N0YXRpYyB2b2lkIGludGVsX2RwX3BoeV9wYXR0ZXJuX3VwZGF0ZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPQog
CQkJdG9faTkxNShkcF90b19kaWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5kZXYpOwotCXN0
cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gZHBfdG9fZGlnX3BvcnQo
aW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZHBfcGh5X3Rlc3RfcGFyYW1zICpkYXRhID0KIAkJCSZp
bnRlbF9kcC0+Y29tcGxpYW5jZS50ZXN0X2RhdGEucGh5dGVzdDsKLQlzdHJ1Y3QgaW50ZWxfY3J0
YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoaW50ZWxfZGlnX3BvcnQtPmJhc2UuYmFzZS5jcnRjKTsK
KwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFw
aS5jcnRjKTsKIAllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CiAJdTMyIHBhdHRlcm5fdmFs
OwogCkBAIC01Mzg4LDcgKzUzOTQsOCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9waHlfcGF0dGVy
bl91cGRhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIH0KIAogc3RhdGljIHZvaWQKLWlu
dGVsX2RwX2F1dG90ZXN0X3BoeV9kZGlfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQoraW50ZWxfZHBfYXV0b3Rlc3RfcGh5X2RkaV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsCisJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkK
IHsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGRwX3RvX2Rp
Z19wb3J0KGludGVsX2RwKTsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gaW50ZWxfZGlnX3Bv
cnQtPmJhc2UuYmFzZS5kZXY7CkBAIC01NDE0LDcgKzU0MjEsOCBAQCBpbnRlbF9kcF9hdXRvdGVz
dF9waHlfZGRpX2Rpc2FibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIH0KIAogc3RhdGlj
IHZvaWQKLWludGVsX2RwX2F1dG90ZXN0X3BoeV9kZGlfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHAsIHVpbnQ4X3QgbGFuZV9jbnQpCitpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2Vu
YWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpp
bnRlbF9kaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVsX2RwKTsKIAlzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2ID0gaW50ZWxfZGlnX3BvcnQtPmJhc2UuYmFzZS5kZXY7CkBAIC01NDQwLDcgKzU0
NDgsOCBAQCBpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLCB1aW50OF90IGxhbmVfY250KQogCQkgICAgICAgdHJhbnNfZGRpX2Z1bmNfY3Rs
X3ZhbHVlKTsKIH0KIAotdm9pZCBpbnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMgdm9pZCBpbnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1
ZXN0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2RwX3BoeV90ZXN0X3BhcmFt
cyAqZGF0YSA9CiAJCSZpbnRlbF9kcC0+Y29tcGxpYW5jZS50ZXN0X2RhdGEucGh5dGVzdDsKQEAg
LTU0NTIsMjEgKzU0NjEsMjIgQEAgdm9pZCBpbnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJfQogCiAJLyogcmV0cmlldmUgdnN3aW5nICYgcHJl
LWVtcGhhc2lzIHNldHRpbmcgKi8KLQlpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKGludGVsX2Rw
LCBsaW5rX3N0YXR1cyk7CisJaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihpbnRlbF9kcCwgY3J0
Y19zdGF0ZSwgbGlua19zdGF0dXMpOwogCi0JaW50ZWxfZHBfYXV0b3Rlc3RfcGh5X2RkaV9kaXNh
YmxlKGludGVsX2RwKTsKKwlpbnRlbF9kcF9hdXRvdGVzdF9waHlfZGRpX2Rpc2FibGUoaW50ZWxf
ZHAsIGNydGNfc3RhdGUpOwogCi0JaW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHAp
OworCWludGVsX2RwX3NldF9zaWduYWxfbGV2ZWxzKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAot
CWludGVsX2RwX3BoeV9wYXR0ZXJuX3VwZGF0ZShpbnRlbF9kcCk7CisJaW50ZWxfZHBfcGh5X3Bh
dHRlcm5fdXBkYXRlKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAotCWludGVsX2RwX2F1dG90ZXN0
X3BoeV9kZGlfZW5hYmxlKGludGVsX2RwLCBkYXRhLT5udW1fbGFuZXMpOworCWludGVsX2RwX2F1
dG90ZXN0X3BoeV9kZGlfZW5hYmxlKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCWRybV9kcF9z
ZXRfcGh5X3Rlc3RfcGF0dGVybigmaW50ZWxfZHAtPmF1eCwgZGF0YSwKIAkJCQkgICAgbGlua19z
dGF0dXNbRFBfRFBDRF9SRVZdKTsKIH0KIAotc3RhdGljIHU4IGludGVsX2RwX2F1dG90ZXN0X3Bo
eV9wYXR0ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCitzdGF0aWMgdTggaW50ZWxfZHBf
YXV0b3Rlc3RfcGh5X3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkJY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJdTggdGVzdF9yZXN1
bHQ7CiAKQEAgLTU0NzQsMTIgKzU0ODQsMTMgQEAgc3RhdGljIHU4IGludGVsX2RwX2F1dG90ZXN0
X3BoeV9wYXR0ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKHRlc3RfcmVzdWx0
ICE9IERQX1RFU1RfQUNLKQogCQlEUk1fRVJST1IoIlBoeSB0ZXN0IHByZXBhcmF0aW9uIGZhaWxl
ZFxuIik7CiAKLQlpbnRlbF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KGludGVsX2RwKTsKKwlpbnRl
bF9kcF9wcm9jZXNzX3BoeV9yZXF1ZXN0KGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAogCXJldHVy
biB0ZXN0X3Jlc3VsdDsKIH0KIAotc3RhdGljIHZvaWQgaW50ZWxfZHBfaGFuZGxlX3Rlc3RfcmVx
dWVzdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHZvaWQgaW50ZWxfZHBfaGFu
ZGxlX3Rlc3RfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJCQkgY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiB7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAl1OCByZXNwb25zZSA9IERQ
X1RFU1RfTkFLOwpAQCAtNTUwOCw3ICs1NTE5LDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfZHBfaGFu
ZGxlX3Rlc3RfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQlicmVhazsKIAlj
YXNlIERQX1RFU1RfTElOS19QSFlfVEVTVF9QQVRURVJOOgogCQlkcm1fZGJnX2ttcygmaTkxNS0+
ZHJtLCAiUEhZX1BBVFRFUk4gdGVzdCByZXF1ZXN0ZWRcbiIpOwotCQlyZXNwb25zZSA9IGludGVs
X2RwX2F1dG90ZXN0X3BoeV9wYXR0ZXJuKGludGVsX2RwKTsKKwkJLyogRklYTUUgc2VlIGludGVs
X2RwX2NoZWNrX3NlcnZpY2VfaXJxKCkgKi8KKwkJaWYgKGNydGNfc3RhdGUpCisJCQlyZXNwb25z
ZSA9IGludGVsX2RwX2F1dG90ZXN0X3BoeV9wYXR0ZXJuKGludGVsX2RwLCBjcnRjX3N0YXRlKTsK
IAkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJZHJtX2RiZ19rbXMoJmk5MTUtPmRybSwgIkludmFsaWQg
dGVzdCByZXF1ZXN0ICclMDJ4J1xuIiwKQEAgLTU2MDIsNiArNTYxNSwxMCBAQCBpbnRlbF9kcF9u
ZWVkc19saW5rX3JldHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkvKgogCSAqIFZh
bGlkYXRlIHRoZSBjYWNoZWQgdmFsdWVzIG9mIGludGVsX2RwLT5saW5rX3JhdGUgYW5kCiAJICog
aW50ZWxfZHAtPmxhbmVfY291bnQgYmVmb3JlIGF0dGVtcHRpbmcgdG8gcmV0cmFpbi4KKwkgKgor
CSAqIEZJWE1FIHdvdWxkIGJlIG5pY2UgdG8gdXNlciB0aGUgY3J0YyBzdGF0ZSBoZXJlLCBidXQg
c2luY2UKKwkgKiB3ZSBuZWVkIHRvIGNhbGwgdGhpcyBmcm9tIHRoZSBzaG9ydCBIUEQgaGFuZGxl
ciB0aGF0IHNlZW1zCisJICogYSBiaXQgaGFyZC4KIAkgKi8KIAlpZiAoIWludGVsX2RwX2xpbmtf
cGFyYW1zX3ZhbGlkKGludGVsX2RwLCBpbnRlbF9kcC0+bGlua19yYXRlLAogCQkJCQlpbnRlbF9k
cC0+bGFuZV9jb3VudCkpCkBAIC01NzM1LDggKzU3NTIsMjAgQEAgaW50IGludGVsX2RwX3JldHJh
aW5fbGluayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkJCQkgICAgICBpbnRl
bF9jcnRjX3BjaF90cmFuc2NvZGVyKGNydGMpLCBmYWxzZSk7CiAJfQogCi0JaW50ZWxfZHBfc3Rh
cnRfbGlua190cmFpbihpbnRlbF9kcCk7Ci0JaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKGludGVs
X2RwKTsKKwlmb3JfZWFjaF9pbnRlbF9jcnRjX21hc2soJmRldl9wcml2LT5kcm0sIGNydGMsIGNy
dGNfbWFzaykgeworCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSA9
CisJCQl0b19pbnRlbF9jcnRjX3N0YXRlKGNydGMtPmJhc2Uuc3RhdGUpOworCisJCS8qIHJldHJh
aW4gb24gdGhlIE1TVCBtYXN0ZXIgdHJhbnNjb2RlciAqLworCQlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSAxMiAmJgorCQkgICAgaW50ZWxfY3J0Y19oYXNfdHlwZShjcnRjX3N0YXRlLCBJTlRF
TF9PVVRQVVRfRFBfTVNUKSAmJgorCQkgICAgY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXIgIT0g
Y3J0Y19zdGF0ZS0+bXN0X21hc3Rlcl90cmFuc2NvZGVyKQorCQkJY29udGludWU7CisKKwkJaW50
ZWxfZHBfc3RhcnRfbGlua190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CisJCWludGVsX2Rw
X3N0b3BfbGlua190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CisJCWJyZWFrOworCX0KIAog
CWZvcl9lYWNoX2ludGVsX2NydGNfbWFzaygmZGV2X3ByaXYtPmRybSwgY3J0YywgY3J0Y19tYXNr
KSB7CiAJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0KQEAgLTU4
MTgsOCArNTg0NywxNSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9jaGVja19zZXJ2aWNlX2lycShz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCiAJZHJtX2RwX2RwY2Rfd3JpdGViKCZpbnRlbF9k
cC0+YXV4LCBEUF9ERVZJQ0VfU0VSVklDRV9JUlFfVkVDVE9SLCB2YWwpOwogCisJLyoKKwkgKiBG
SVhNRSBnZXQgcmlkIG9mIHRoZSBoYW5kIHJvbGxlZCBtb2Rlc2V0IGNvZGUgZnJvbQorCSAqIHRo
ZSBwaHkgdGVzdCBjb2RlIGFuZCBqdXN0IGRvIHByb3BlciBtb2Rlc2V0cyBpbnN0ZWFkLgorCSAq
IERvaW5nIG1vZGVzZXRzIGZyb20gdGhlIHNob3J0IGhwZCBoYW5kbGVyIGlzIGEgdG90YWwKKwkg
KiBubyBubyBhbnl3YXkuIEZvciBub3cgdGhpcyB3aWxsIG5vdCB3b3JrIHNpbmNlIHdlIGRvbid0
CisJICogaGF2ZSBhIGNydGMgc3RhdGUuCisJICovCiAJaWYgKHZhbCAmIERQX0FVVE9NQVRFRF9U
RVNUX1JFUVVFU1QpCi0JCWludGVsX2RwX2hhbmRsZV90ZXN0X3JlcXVlc3QoaW50ZWxfZHApOwor
CQlpbnRlbF9kcF9oYW5kbGVfdGVzdF9yZXF1ZXN0KGludGVsX2RwLCBOVUxMKTsKIAogCWlmICh2
YWwgJiBEUF9DUF9JUlEpCiAJCWludGVsX2hkY3BfaGFuZGxlX2NwX2lycShpbnRlbF9kcC0+YXR0
YWNoZWRfY29ubmVjdG9yKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZHAuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuaApp
bmRleCBlODM3NWE3NWMzZWMuLjI1ZDU1YzA2YWYxOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHAuaApAQCAtNDIsOCArNDIsNyBAQCBib29sIGludGVsX2RwX2luaXQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpOTE1X3JlZ190IG91dHB1dF9yZWcsCiBi
b29sIGludGVsX2RwX2luaXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmlu
dGVsX2RpZ19wb3J0LAogCQkJICAgICBzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICppbnRlbF9jb25u
ZWN0b3IpOwogdm9pZCBpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwKLQkJCSAgICAgIGludCBsaW5rX3JhdGUsIHU4IGxhbmVfY291bnQsCi0JCQkgICAg
ICBib29sIGxpbmtfbXN0KTsKKwkJCSAgICAgIGludCBsaW5rX3JhdGUsIGludCBsYW5lX2NvdW50
KTsKIGludCBpbnRlbF9kcF9nZXRfbGlua190cmFpbl9mYWxsYmFja192YWx1ZXMoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIAkJCQkJICAgIGludCBsaW5rX3JhdGUsIHU4IGxhbmVfY291bnQp
OwogaW50IGludGVsX2RwX3JldHJhaW5fbGluayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKQEAgLTg3LDEwICs4NiwxMyBAQCB2b2lkIGludGVsX2VkcF9kcnJzX2ZsdXNoKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAogdm9pZAogaW50ZWxfZHBfcHJvZ3JhbV9saW5r
X3RyYWluaW5nX3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgICAg
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJICAgICAgIHU4
IGRwX3RyYWluX3BhdCk7CiB2b2lkCi1pbnRlbF9kcF9zZXRfc2lnbmFsX2xldmVscyhzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKTsKLXZvaWQgaW50ZWxfZHBfc2V0X2lkbGVfbGlua190cmFpbihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKK2ludGVsX2RwX3NldF9zaWduYWxfbGV2ZWxzKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSk7Cit2b2lkIGludGVsX2RwX3NldF9pZGxlX2xpbmtfdHJhaW4oc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKTsKIHZvaWQgaW50ZWxfZHBfY29tcHV0ZV9yYXRlKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsIGludCBwb3J0X2Nsb2NrLAogCQkJICAgdTggKmxpbmtfYncsIHU4ICpy
YXRlX3NlbGVjdCk7CiBib29sIGludGVsX2RwX3NvdXJjZV9zdXBwb3J0c19oYnIyKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApOwpAQCAtMTE0LDcgKzExNiw2IEBAIHZvaWQgaW50ZWxfZHBfc2V0
X2luZm9mcmFtZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsIGJvb2wgZW5hYmxlLAog
CQkJICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAg
ICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpOwogYm9vbCBp
bnRlbF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVy
KTsKLXZvaWQgaW50ZWxfZHBfcHJvY2Vzc19waHlfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKTsKIAogc3RhdGljIGlubGluZSB1bnNpZ25lZCBpbnQgaW50ZWxfZHBfdW51c2VkX2xh
bmVfbWFzayhpbnQgbGFuZV9jb3VudCkKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcF9saW5rX3RyYWluaW5nLmMKaW5kZXggMjQ5MzE0MmE3MGU5Li4x
YjA1OTU3MTUzODMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZHBfbGlua190cmFpbmluZy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZHBfbGlua190cmFpbmluZy5jCkBAIC00OSw4ICs0OSwxMCBAQCBzdGF0aWMgdTggZHBf
dm9sdGFnZV9tYXgodTggcHJlZW1waCkKIAl9CiB9CiAKLXZvaWQgaW50ZWxfZHBfZ2V0X2FkanVz
dF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAotCQkJICAgICAgIGNvbnN0IHU4IGxp
bmtfc3RhdHVzW0RQX0xJTktfU1RBVFVTX1NJWkVdKQordm9pZAoraW50ZWxfZHBfZ2V0X2FkanVz
dF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCSAgY29uc3QgdTggbGlua19zdGF0dXNbRFBf
TElOS19TVEFUVVNfU0laRV0pCiB7CiAJdTggdiA9IDA7CiAJdTggcCA9IDA7CkBAIC01OCw3ICs2
MCw3IEBAIHZvaWQgaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwLAogCXU4IHZvbHRhZ2VfbWF4OwogCXU4IHByZWVtcGhfbWF4OwogCi0JZm9yIChsYW5l
ID0gMDsgbGFuZSA8IGludGVsX2RwLT5sYW5lX2NvdW50OyBsYW5lKyspIHsKKwlmb3IgKGxhbmUg
PSAwOyBsYW5lIDwgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudDsgbGFuZSsrKSB7CiAJCXYgPSBtYXgo
diwgZHJtX2RwX2dldF9hZGp1c3RfcmVxdWVzdF92b2x0YWdlKGxpbmtfc3RhdHVzLCBsYW5lKSk7
CiAJCXAgPSBtYXgocCwgZHJtX2RwX2dldF9hZGp1c3RfcmVxdWVzdF9wcmVfZW1waGFzaXMobGlu
a19zdGF0dXMsIGxhbmUpKTsKIAl9CkBAIC02OSw3ICs3MSw3IEBAIHZvaWQgaW50ZWxfZHBfZ2V0
X2FkanVzdF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCiAJdiA9IG1pbih2LCBk
cF92b2x0YWdlX21heChwKSk7CiAKLQl2b2x0YWdlX21heCA9IGludGVsX2RwLT52b2x0YWdlX21h
eChpbnRlbF9kcCk7CisJdm9sdGFnZV9tYXggPSBpbnRlbF9kcC0+dm9sdGFnZV9tYXgoaW50ZWxf
ZHAsIGNydGNfc3RhdGUpOwogCWlmICh2ID49IHZvbHRhZ2VfbWF4KQogCQl2ID0gdm9sdGFnZV9t
YXggfCBEUF9UUkFJTl9NQVhfU1dJTkdfUkVBQ0hFRDsKIApAQCAtNzksMTIgKzgxLDE0IEBAIHZv
aWQgaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAog
CiBzdGF0aWMgYm9vbAogaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCwKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAog
CQkJdTggZHBfdHJhaW5fcGF0KQogewogCXU4IGJ1ZltzaXplb2YoaW50ZWxfZHAtPnRyYWluX3Nl
dCkgKyAxXTsKIAlpbnQgcmV0LCBsZW47CiAKLQlpbnRlbF9kcF9wcm9ncmFtX2xpbmtfdHJhaW5p
bmdfcGF0dGVybihpbnRlbF9kcCwgZHBfdHJhaW5fcGF0KTsKKwlpbnRlbF9kcF9wcm9ncmFtX2xp
bmtfdHJhaW5pbmdfcGF0dGVybihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwKKwkJCQkJICAgICAgIGRw
X3RyYWluX3BhdCk7CiAKIAlidWZbMF0gPSBkcF90cmFpbl9wYXQ7CiAJaWYgKChkcF90cmFpbl9w
YXQgJiBEUF9UUkFJTklOR19QQVRURVJOX01BU0spID09CkBAIC05Myw4ICs5Nyw4IEBAIGludGVs
X2RwX3NldF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCWxlbiA9IDE7
CiAJfSBlbHNlIHsKIAkJLyogRFBfVFJBSU5JTkdfTEFORXhfU0VUIGZvbGxvdyBEUF9UUkFJTklO
R19QQVRURVJOX1NFVCAqLwotCQltZW1jcHkoYnVmICsgMSwgaW50ZWxfZHAtPnRyYWluX3NldCwg
aW50ZWxfZHAtPmxhbmVfY291bnQpOwotCQlsZW4gPSBpbnRlbF9kcC0+bGFuZV9jb3VudCArIDE7
CisJCW1lbWNweShidWYgKyAxLCBpbnRlbF9kcC0+dHJhaW5fc2V0LCBjcnRjX3N0YXRlLT5sYW5l
X2NvdW50KTsKKwkJbGVuID0gY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCArIDE7CiAJfQogCiAJcmV0
ID0gZHJtX2RwX2RwY2Rfd3JpdGUoJmludGVsX2RwLT5hdXgsIERQX1RSQUlOSU5HX1BBVFRFUk5f
U0VULApAQCAtMTA1LDMxICsxMDksMzQgQEAgaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKIAogc3RhdGljIGJvb2wKIGludGVsX2RwX3Jlc2V0X2xpbmtf
dHJhaW4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCXU4IGRwX3RyYWluX3BhdCkKKwkJ
CSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgIHU4IGRw
X3RyYWluX3BhdCkKIHsKIAltZW1zZXQoaW50ZWxfZHAtPnRyYWluX3NldCwgMCwgc2l6ZW9mKGlu
dGVsX2RwLT50cmFpbl9zZXQpKTsKLQlpbnRlbF9kcF9zZXRfc2lnbmFsX2xldmVscyhpbnRlbF9k
cCk7Ci0JcmV0dXJuIGludGVsX2RwX3NldF9saW5rX3RyYWluKGludGVsX2RwLCBkcF90cmFpbl9w
YXQpOworCWludGVsX2RwX3NldF9zaWduYWxfbGV2ZWxzKGludGVsX2RwLCBjcnRjX3N0YXRlKTsK
KwlyZXR1cm4gaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUsIGRw
X3RyYWluX3BhdCk7CiB9CiAKIHN0YXRpYyBib29sCi1pbnRlbF9kcF91cGRhdGVfbGlua190cmFp
bihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQoraW50ZWxfZHBfdXBkYXRlX2xpbmtfdHJhaW4o
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCSAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlKQogewogCWludCByZXQ7CiAKLQlpbnRlbF9kcF9zZXRfc2lnbmFs
X2xldmVscyhpbnRlbF9kcCk7CisJaW50ZWxfZHBfc2V0X3NpZ25hbF9sZXZlbHMoaW50ZWxfZHAs
IGNydGNfc3RhdGUpOwogCiAJcmV0ID0gZHJtX2RwX2RwY2Rfd3JpdGUoJmludGVsX2RwLT5hdXgs
IERQX1RSQUlOSU5HX0xBTkUwX1NFVCwKLQkJCQlpbnRlbF9kcC0+dHJhaW5fc2V0LCBpbnRlbF9k
cC0+bGFuZV9jb3VudCk7CisJCQkJaW50ZWxfZHAtPnRyYWluX3NldCwgY3J0Y19zdGF0ZS0+bGFu
ZV9jb3VudCk7CiAKLQlyZXR1cm4gcmV0ID09IGludGVsX2RwLT5sYW5lX2NvdW50OworCXJldHVy
biByZXQgPT0gY3J0Y19zdGF0ZS0+bGFuZV9jb3VudDsKIH0KIAotc3RhdGljIGJvb2wgaW50ZWxf
ZHBfbGlua19tYXhfdnN3aW5nX3JlYWNoZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0
YXRpYyBib29sIGludGVsX2RwX2xpbmtfbWF4X3Zzd2luZ19yZWFjaGVkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCisJCQkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpCiB7CiAJaW50IGxhbmU7CiAKLQlmb3IgKGxhbmUgPSAwOyBsYW5lIDwgaW50ZWxf
ZHAtPmxhbmVfY291bnQ7IGxhbmUrKykKKwlmb3IgKGxhbmUgPSAwOyBsYW5lIDwgY3J0Y19zdGF0
ZS0+bGFuZV9jb3VudDsgbGFuZSsrKQogCQlpZiAoKGludGVsX2RwLT50cmFpbl9zZXRbbGFuZV0g
JgogCQkgICAgIERQX1RSQUlOX01BWF9TV0lOR19SRUFDSEVEKSA9PSAwKQogCQkJcmV0dXJuIGZh
bHNlOwpAQCAtMTM5LDcgKzE0Niw4IEBAIHN0YXRpYyBib29sIGludGVsX2RwX2xpbmtfbWF4X3Zz
d2luZ19yZWFjaGVkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAKIC8qIEVuYWJsZSBjb3Jy
ZXNwb25kaW5nIHBvcnQgYW5kIHN0YXJ0IHRyYWluaW5nIHBhdHRlcm4gMSAqLwogc3RhdGljIGJv
b2wKLWludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zlcnkoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKK2ludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zlcnkoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKKwkJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGRw
X3RvX2k5MTUoaW50ZWxfZHApOwogCXU4IHZvbHRhZ2U7CkBAIC0xNDksOSArMTU3LDkgQEAgaW50
ZWxfZHBfbGlua190cmFpbmluZ19jbG9ja19yZWNvdmVyeShzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQogCXU4IGxpbmtfYncsIHJhdGVfc2VsZWN0OwogCiAJaWYgKGludGVsX2RwLT5wcmVwYXJl
X2xpbmtfcmV0cmFpbikKLQkJaW50ZWxfZHAtPnByZXBhcmVfbGlua19yZXRyYWluKGludGVsX2Rw
KTsKKwkJaW50ZWxfZHAtPnByZXBhcmVfbGlua19yZXRyYWluKGludGVsX2RwLCBjcnRjX3N0YXRl
KTsKIAotCWludGVsX2RwX2NvbXB1dGVfcmF0ZShpbnRlbF9kcCwgaW50ZWxfZHAtPmxpbmtfcmF0
ZSwKKwlpbnRlbF9kcF9jb21wdXRlX3JhdGUoaW50ZWxfZHAsIGNydGNfc3RhdGUtPnBvcnRfY2xv
Y2ssCiAJCQkgICAgICAmbGlua19idywgJnJhdGVfc2VsZWN0KTsKIAogCWlmIChsaW5rX2J3KQpA
QCAtMTYzLDcgKzE3MSw3IEBAIGludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zlcnko
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAogCS8qIFdyaXRlIHRoZSBsaW5rIGNvbmZpZ3Vy
YXRpb24gZGF0YSAqLwogCWxpbmtfY29uZmlnWzBdID0gbGlua19idzsKLQlsaW5rX2NvbmZpZ1sx
XSA9IGludGVsX2RwLT5sYW5lX2NvdW50OworCWxpbmtfY29uZmlnWzFdID0gY3J0Y19zdGF0ZS0+
bGFuZV9jb3VudDsKIAlpZiAoZHJtX2RwX2VuaGFuY2VkX2ZyYW1lX2NhcChpbnRlbF9kcC0+ZHBj
ZCkpCiAJCWxpbmtfY29uZmlnWzFdIHw9IERQX0xBTkVfQ09VTlRfRU5IQU5DRURfRlJBTUVfRU47
CiAJZHJtX2RwX2RwY2Rfd3JpdGUoJmludGVsX2RwLT5hdXgsIERQX0xJTktfQldfU0VULCBsaW5r
X2NvbmZpZywgMik7CkBAIC0xODAsNyArMTg4LDcgQEAgaW50ZWxfZHBfbGlua190cmFpbmluZ19j
bG9ja19yZWNvdmVyeShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWludGVsX2RwLT5EUCB8
PSBEUF9QT1JUX0VOOwogCiAJLyogY2xvY2sgcmVjb3ZlcnkgKi8KLQlpZiAoIWludGVsX2RwX3Jl
c2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsCisJaWYgKCFpbnRlbF9kcF9yZXNldF9saW5rX3RyYWlu
KGludGVsX2RwLCBjcnRjX3N0YXRlLAogCQkJCSAgICAgICBEUF9UUkFJTklOR19QQVRURVJOXzEg
fAogCQkJCSAgICAgICBEUF9MSU5LX1NDUkFNQkxJTkdfRElTQUJMRSkpIHsKIAkJZHJtX2Vycigm
aTkxNS0+ZHJtLCAiZmFpbGVkIHRvIGVuYWJsZSBsaW5rIHRyYWluaW5nXG4iKTsKQEAgLTIxMSw3
ICsyMTksNyBAQCBpbnRlbF9kcF9saW5rX3RyYWluaW5nX2Nsb2NrX3JlY292ZXJ5KHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCiAJCQlyZXR1cm4gZmFsc2U7CiAJCX0KIAotCQlpZiAoZHJtX2Rw
X2Nsb2NrX3JlY292ZXJ5X29rKGxpbmtfc3RhdHVzLCBpbnRlbF9kcC0+bGFuZV9jb3VudCkpIHsK
KwkJaWYgKGRybV9kcF9jbG9ja19yZWNvdmVyeV9vayhsaW5rX3N0YXR1cywgY3J0Y19zdGF0ZS0+
bGFuZV9jb3VudCkpIHsKIAkJCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJjbG9jayByZWNvdmVy
eSBPS1xuIik7CiAJCQlyZXR1cm4gdHJ1ZTsKIAkJfQpAQCAtMjMwLDggKzIzOCw4IEBAIGludGVs
X2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zlcnkoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAkJdm9sdGFnZSA9IGludGVsX2RwLT50cmFpbl9zZXRbMF0gJiBEUF9UUkFJTl9WT0xUQUdF
X1NXSU5HX01BU0s7CiAKIAkJLyogVXBkYXRlIHRyYWluaW5nIHNldCBhcyByZXF1ZXN0ZWQgYnkg
dGFyZ2V0ICovCi0JCWludGVsX2RwX2dldF9hZGp1c3RfdHJhaW4oaW50ZWxfZHAsIGxpbmtfc3Rh
dHVzKTsKLQkJaWYgKCFpbnRlbF9kcF91cGRhdGVfbGlua190cmFpbihpbnRlbF9kcCkpIHsKKwkJ
aW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgbGlua19zdGF0
dXMpOworCQlpZiAoIWludGVsX2RwX3VwZGF0ZV9saW5rX3RyYWluKGludGVsX2RwLCBjcnRjX3N0
YXRlKSkgewogCQkJZHJtX2VycigmaTkxNS0+ZHJtLAogCQkJCSJmYWlsZWQgdG8gdXBkYXRlIGxp
bmsgdHJhaW5pbmdcbiIpOwogCQkJcmV0dXJuIGZhbHNlOwpAQCAtMjQzLDcgKzI1MSw3IEBAIGlu
dGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zlcnkoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKIAkJZWxzZQogCQkJdm9sdGFnZV90cmllcyA9IDE7CiAKLQkJaWYgKGludGVsX2RwX2xp
bmtfbWF4X3Zzd2luZ19yZWFjaGVkKGludGVsX2RwKSkKKwkJaWYgKGludGVsX2RwX2xpbmtfbWF4
X3Zzd2luZ19yZWFjaGVkKGludGVsX2RwLCBjcnRjX3N0YXRlKSkKIAkJCW1heF92c3dpbmdfcmVh
Y2hlZCA9IHRydWU7CiAKIAl9CkBAIC0yNTcsNyArMjY1LDggQEAgaW50ZWxfZHBfbGlua190cmFp
bmluZ19jbG9ja19yZWNvdmVyeShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogICogb3IgZm9y
IDEuNCBkZXZpY2VzIHRoYXQgc3VwcG9ydCBpdCwgdHJhaW5pbmcgUGF0dGVybiAzIGZvciBIQlIy
CiAgKiBvciAxLjIgZGV2aWNlcyB0aGF0IHN1cHBvcnQgaXQsIFRyYWluaW5nIFBhdHRlcm4gMiBv
dGhlcndpc2UuCiAgKi8KLXN0YXRpYyB1MzIgaW50ZWxfZHBfdHJhaW5pbmdfcGF0dGVybihzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQorc3RhdGljIHUzMiBpbnRlbF9kcF90cmFpbmluZ19wYXR0
ZXJuKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJICAgICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlib29sIHNvdXJjZV90cHMzLCBzaW5rX3Rw
czMsIHNvdXJjZV90cHM0LCBzaW5rX3RwczQ7CiAKQEAgLTI3MSw3ICsyODAsNyBAQCBzdGF0aWMg
dTMyIGludGVsX2RwX3RyYWluaW5nX3BhdHRlcm4oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
IAlzaW5rX3RwczQgPSBkcm1fZHBfdHBzNF9zdXBwb3J0ZWQoaW50ZWxfZHAtPmRwY2QpOwogCWlm
IChzb3VyY2VfdHBzNCAmJiBzaW5rX3RwczQpIHsKIAkJcmV0dXJuIERQX1RSQUlOSU5HX1BBVFRF
Uk5fNDsKLQl9IGVsc2UgaWYgKGludGVsX2RwLT5saW5rX3JhdGUgPT0gODEwMDAwKSB7CisJfSBl
bHNlIGlmIChjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrID09IDgxMDAwMCkgewogCQlpZiAoIXNvdXJj
ZV90cHM0KQogCQkJZHJtX2RiZ19rbXMoJmRwX3RvX2k5MTUoaW50ZWxfZHApLT5kcm0sCiAJCQkJ
ICAgICI4LjEgR2JwcyBsaW5rIHJhdGUgd2l0aG91dCBzb3VyY2UgSEJSMy9UUFM0IHN1cHBvcnRc
biIpOwpAQCAtMjg4LDcgKzI5Nyw3IEBAIHN0YXRpYyB1MzIgaW50ZWxfZHBfdHJhaW5pbmdfcGF0
dGVybihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXNpbmtfdHBzMyA9IGRybV9kcF90cHMz
X3N1cHBvcnRlZChpbnRlbF9kcC0+ZHBjZCk7CiAJaWYgKHNvdXJjZV90cHMzICYmIHNpbmtfdHBz
MykgewogCQlyZXR1cm4gIERQX1RSQUlOSU5HX1BBVFRFUk5fMzsKLQl9IGVsc2UgaWYgKGludGVs
X2RwLT5saW5rX3JhdGUgPj0gNTQwMDAwKSB7CisJfSBlbHNlIGlmIChjcnRjX3N0YXRlLT5wb3J0
X2Nsb2NrID49IDU0MDAwMCkgewogCQlpZiAoIXNvdXJjZV90cHMzKQogCQkJZHJtX2RiZ19rbXMo
JmRwX3RvX2k5MTUoaW50ZWxfZHApLT5kcm0sCiAJCQkJICAgICI+PTUuNC82LjQ4IEdicHMgbGlu
ayByYXRlIHdpdGhvdXQgc291cmNlIEhCUjIvVFBTMyBzdXBwb3J0XG4iKTsKQEAgLTMwMSw3ICsz
MTAsOCBAQCBzdGF0aWMgdTMyIGludGVsX2RwX3RyYWluaW5nX3BhdHRlcm4oc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKIH0KIAogc3RhdGljIGJvb2wKLWludGVsX2RwX2xpbmtfdHJhaW5pbmdf
Y2hhbm5lbF9lcXVhbGl6YXRpb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK2ludGVsX2Rw
X2xpbmtfdHJhaW5pbmdfY2hhbm5lbF9lcXVhbGl6YXRpb24oc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwKKwkJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CiAJaW50IHRyaWVzOwpAQCAtMzA5LDEzICszMTksMTMgQEAgaW50ZWxfZHBfbGlua190cmFp
bmluZ19jaGFubmVsX2VxdWFsaXphdGlvbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXU4
IGxpbmtfc3RhdHVzW0RQX0xJTktfU1RBVFVTX1NJWkVdOwogCWJvb2wgY2hhbm5lbF9lcSA9IGZh
bHNlOwogCi0JdHJhaW5pbmdfcGF0dGVybiA9IGludGVsX2RwX3RyYWluaW5nX3BhdHRlcm4oaW50
ZWxfZHApOworCXRyYWluaW5nX3BhdHRlcm4gPSBpbnRlbF9kcF90cmFpbmluZ19wYXR0ZXJuKGlu
dGVsX2RwLCBjcnRjX3N0YXRlKTsKIAkvKiBTY3JhbWJsaW5nIGlzIGRpc2FibGVkIGZvciBUUFMy
LzMgYW5kIGVuYWJsZWQgZm9yIFRQUzQgKi8KIAlpZiAodHJhaW5pbmdfcGF0dGVybiAhPSBEUF9U
UkFJTklOR19QQVRURVJOXzQpCiAJCXRyYWluaW5nX3BhdHRlcm4gfD0gRFBfTElOS19TQ1JBTUJM
SU5HX0RJU0FCTEU7CiAKIAkvKiBjaGFubmVsIGVxdWFsaXphdGlvbiAqLwotCWlmICghaW50ZWxf
ZHBfc2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsCisJaWYgKCFpbnRlbF9kcF9zZXRfbGlua190cmFp
bihpbnRlbF9kcCwgY3J0Y19zdGF0ZSwKIAkJCQkgICAgIHRyYWluaW5nX3BhdHRlcm4pKSB7CiAJ
CWRybV9lcnIoJmk5MTUtPmRybSwgImZhaWxlZCB0byBzdGFydCBjaGFubmVsIGVxdWFsaXphdGlv
blxuIik7CiAJCXJldHVybiBmYWxzZTsKQEAgLTMzMiw3ICszNDIsNyBAQCBpbnRlbF9kcF9saW5r
X3RyYWluaW5nX2NoYW5uZWxfZXF1YWxpemF0aW9uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
CiAKIAkJLyogTWFrZSBzdXJlIGNsb2NrIGlzIHN0aWxsIG9rICovCiAJCWlmICghZHJtX2RwX2Ns
b2NrX3JlY292ZXJ5X29rKGxpbmtfc3RhdHVzLAotCQkJCQkgICAgICBpbnRlbF9kcC0+bGFuZV9j
b3VudCkpIHsKKwkJCQkJICAgICAgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudCkpIHsKIAkJCWludGVs
X2RwX2R1bXBfbGlua19zdGF0dXMobGlua19zdGF0dXMpOwogCQkJZHJtX2RiZ19rbXMoJmk5MTUt
PmRybSwKIAkJCQkgICAgIkNsb2NrIHJlY292ZXJ5IGNoZWNrIGZhaWxlZCwgY2Fubm90ICIKQEAg
LTM0MSw3ICszNTEsNyBAQCBpbnRlbF9kcF9saW5rX3RyYWluaW5nX2NoYW5uZWxfZXF1YWxpemF0
aW9uKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCX0KIAogCQlpZiAoZHJtX2RwX2NoYW5u
ZWxfZXFfb2sobGlua19zdGF0dXMsCi0JCQkJCSBpbnRlbF9kcC0+bGFuZV9jb3VudCkpIHsKKwkJ
CQkJIGNydGNfc3RhdGUtPmxhbmVfY291bnQpKSB7CiAJCQljaGFubmVsX2VxID0gdHJ1ZTsKIAkJ
CWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJDaGFubmVsIEVRIGRvbmUuIERQIFRyYWluaW5nICIK
IAkJCQkgICAgInN1Y2Nlc3NmdWxcbiIpOwpAQCAtMzQ5LDggKzM1OSw4IEBAIGludGVsX2RwX2xp
bmtfdHJhaW5pbmdfY2hhbm5lbF9lcXVhbGl6YXRpb24oc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCkKIAkJfQogCiAJCS8qIFVwZGF0ZSB0cmFpbmluZyBzZXQgYXMgcmVxdWVzdGVkIGJ5IHRhcmdl
dCAqLwotCQlpbnRlbF9kcF9nZXRfYWRqdXN0X3RyYWluKGludGVsX2RwLCBsaW5rX3N0YXR1cyk7
Ci0JCWlmICghaW50ZWxfZHBfdXBkYXRlX2xpbmtfdHJhaW4oaW50ZWxfZHApKSB7CisJCWludGVs
X2RwX2dldF9hZGp1c3RfdHJhaW4oaW50ZWxfZHAsIGNydGNfc3RhdGUsIGxpbmtfc3RhdHVzKTsK
KwkJaWYgKCFpbnRlbF9kcF91cGRhdGVfbGlua190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSkp
IHsKIAkJCWRybV9lcnIoJmk5MTUtPmRybSwKIAkJCQkiZmFpbGVkIHRvIHVwZGF0ZSBsaW5rIHRy
YWluaW5nXG4iKTsKIAkJCWJyZWFrOwpAQCAtMzY0LDM1ICszNzQsMzcgQEAgaW50ZWxfZHBfbGlu
a190cmFpbmluZ19jaGFubmVsX2VxdWFsaXphdGlvbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQogCQkJICAgICJDaGFubmVsIGVxdWFsaXphdGlvbiBmYWlsZWQgNSB0aW1lc1xuIik7CiAJfQog
Ci0JaW50ZWxfZHBfc2V0X2lkbGVfbGlua190cmFpbihpbnRlbF9kcCk7CisJaW50ZWxfZHBfc2V0
X2lkbGVfbGlua190cmFpbihpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKIAlyZXR1cm4gY2hhbm5l
bF9lcTsKIAogfQogCi12b2lkIGludGVsX2RwX3N0b3BfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQordm9pZCBpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlKQogewogCWludGVsX2RwLT5saW5rX3RyYWluZWQgPSB0cnVlOwogCi0JaW50ZWxf
ZHBfc2V0X2xpbmtfdHJhaW4oaW50ZWxfZHAsCisJaW50ZWxfZHBfc2V0X2xpbmtfdHJhaW4oaW50
ZWxfZHAsIGNydGNfc3RhdGUsCiAJCQkJRFBfVFJBSU5JTkdfUEFUVEVSTl9ESVNBQkxFKTsKIH0K
IAogdm9pZAotaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQoraW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
LAorCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlz
dHJ1Y3QgaW50ZWxfY29ubmVjdG9yICppbnRlbF9jb25uZWN0b3IgPSBpbnRlbF9kcC0+YXR0YWNo
ZWRfY29ubmVjdG9yOwogCi0JaWYgKCFpbnRlbF9kcF9saW5rX3RyYWluaW5nX2Nsb2NrX3JlY292
ZXJ5KGludGVsX2RwKSkKKwlpZiAoIWludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2xvY2tfcmVjb3Zl
cnkoaW50ZWxfZHAsIGNydGNfc3RhdGUpKQogCQlnb3RvIGZhaWx1cmVfaGFuZGxpbmc7Ci0JaWYg
KCFpbnRlbF9kcF9saW5rX3RyYWluaW5nX2NoYW5uZWxfZXF1YWxpemF0aW9uKGludGVsX2RwKSkK
KwlpZiAoIWludGVsX2RwX2xpbmtfdHJhaW5pbmdfY2hhbm5lbF9lcXVhbGl6YXRpb24oaW50ZWxf
ZHAsIGNydGNfc3RhdGUpKQogCQlnb3RvIGZhaWx1cmVfaGFuZGxpbmc7CiAKIAlkcm1fZGJnX2tt
cygmZHBfdG9faTkxNShpbnRlbF9kcCktPmRybSwKIAkJICAgICJbQ09OTkVDVE9SOiVkOiVzXSBM
aW5rIFRyYWluaW5nIFBhc3NlZCBhdCBMaW5rIFJhdGUgPSAlZCwgTGFuZSBjb3VudCA9ICVkIiwK
IAkJICAgIGludGVsX2Nvbm5lY3Rvci0+YmFzZS5iYXNlLmlkLAogCQkgICAgaW50ZWxfY29ubmVj
dG9yLT5iYXNlLm5hbWUsCi0JCSAgICBpbnRlbF9kcC0+bGlua19yYXRlLCBpbnRlbF9kcC0+bGFu
ZV9jb3VudCk7CisJCSAgICBjcnRjX3N0YXRlLT5wb3J0X2Nsb2NrLCBjcnRjX3N0YXRlLT5sYW5l
X2NvdW50KTsKIAlyZXR1cm47CiAKICBmYWlsdXJlX2hhbmRsaW5nOgpAQCAtNDAwLDEwICs0MTIs
MTAgQEAgaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQogCQkgICAgIltDT05ORUNUT1I6JWQ6JXNdIExpbmsgVHJhaW5pbmcgZmFpbGVkIGF0IGxpbmsg
cmF0ZSA9ICVkLCBsYW5lIGNvdW50ID0gJWQiLAogCQkgICAgaW50ZWxfY29ubmVjdG9yLT5iYXNl
LmJhc2UuaWQsCiAJCSAgICBpbnRlbF9jb25uZWN0b3ItPmJhc2UubmFtZSwKLQkJICAgIGludGVs
X2RwLT5saW5rX3JhdGUsIGludGVsX2RwLT5sYW5lX2NvdW50KTsKKwkJICAgIGNydGNfc3RhdGUt
PnBvcnRfY2xvY2ssIGNydGNfc3RhdGUtPmxhbmVfY291bnQpOwogCWlmICghaW50ZWxfZHBfZ2V0
X2xpbmtfdHJhaW5fZmFsbGJhY2tfdmFsdWVzKGludGVsX2RwLAotCQkJCQkJICAgICBpbnRlbF9k
cC0+bGlua19yYXRlLAotCQkJCQkJICAgICBpbnRlbF9kcC0+bGFuZV9jb3VudCkpCisJCQkJCQkg
ICAgIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssCisJCQkJCQkgICAgIGNydGNfc3RhdGUtPmxhbmVf
Y291bnQpKQogCQkvKiBTY2hlZHVsZSBhIEhvdHBsdWcgVWV2ZW50IHRvIHVzZXJzcGFjZSB0byBz
dGFydCBtb2Rlc2V0ICovCiAJCXNjaGVkdWxlX3dvcmsoJmludGVsX2Nvbm5lY3Rvci0+bW9kZXNl
dF9yZXRyeV93b3JrKTsKIAlyZXR1cm47CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RwX2xpbmtfdHJhaW5pbmcuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHBfbGlua190cmFpbmluZy5oCmluZGV4IDAxZjFkYWJiYjA2MC4uNjQ4
YTZkMWY5ZmEyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RwX2xpbmtfdHJhaW5pbmcuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwX2xpbmtfdHJhaW5pbmcuaApAQCAtOCwxMSArOCwxNSBAQAogCiAjaW5jbHVkZSA8ZHJt
L2RybV9kcF9oZWxwZXIuaD4KIAorc3RydWN0IGludGVsX2NydGNfc3RhdGU7CiBzdHJ1Y3QgaW50
ZWxfZHA7CiAKIHZvaWQgaW50ZWxfZHBfZ2V0X2FkanVzdF90cmFpbihzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQkJICAgICAgIGNvbnN0IHU4IGxpbmtfc3RhdHVzW0RQX0xJTktfU1RBVFVTX1NJ
WkVdKTsKLXZvaWQgaW50ZWxfZHBfc3RhcnRfbGlua190cmFpbihzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwKTsKLXZvaWQgaW50ZWxfZHBfc3RvcF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApOwordm9pZCBpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCisJCQkgICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpOwordm9pZCBpbnRlbF9kcF9zdG9wX2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlKTsKIAogI2VuZGlmIC8qIF9fSU5URUxfRFBfTElOS19UUkFJTklOR19IX18gKi8KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBpb19waHkuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBpb19waHkuYwppbmRleCAzOTlh
N2VkYjQ1NjguLjc5ZGEyODFkNDZkYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcGlvX3BoeS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZHBpb19waHkuYwpAQCAtNjQ0LDE2ICs2NDQsMTYgQEAgYnh0X2RkaV9waHlfZ2V0
X2xhbmVfbGF0X29wdGltX21hc2soc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiAJcmV0
dXJuIG1hc2s7CiB9CiAKLQogdm9pZCBjaHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgIHUzMiBkZWVtcGhfcmVnX3ZhbHVlLCB1MzIgbWFy
Z2luX3JlZ192YWx1ZSwKIAkJCSAgICAgIGJvb2wgdW5pcV90cmFuc19zY2FsZSkKIHsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2
KTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkcG9ydCA9IGVuY190b19kaWdfcG9ydChl
bmNvZGVyKTsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMo
ZW5jb2Rlci0+YmFzZS5jcnRjKTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVs
X2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKIAllbnVtIGRwaW9fY2hhbm5lbCBjaCA9IHZs
dl9kcG9ydF90b19jaGFubmVsKGRwb3J0KTsKLQllbnVtIHBpcGUgcGlwZSA9IGludGVsX2NydGMt
PnBpcGU7CisJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwogCXUzMiB2YWw7CiAJaW50IGk7
CiAKQEAgLTY2Niw3ICs2NjYsNyBAQCB2b2lkIGNodl9zZXRfcGh5X3NpZ25hbF9sZXZlbChzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl2YWwgfD0gRFBJT19QQ1NfVFgxREVFTVBfOVA1
IHwgRFBJT19QQ1NfVFgyREVFTVBfOVA1OwogCXZsdl9kcGlvX3dyaXRlKGRldl9wcml2LCBwaXBl
LCBWTFZfUENTMDFfRFcxMChjaCksIHZhbCk7CiAKLQlpZiAoaW50ZWxfY3J0Yy0+Y29uZmlnLT5s
YW5lX2NvdW50ID4gMikgeworCWlmIChjcnRjX3N0YXRlLT5sYW5lX2NvdW50ID4gMikgewogCQl2
YWwgPSB2bHZfZHBpb19yZWFkKGRldl9wcml2LCBwaXBlLCBWTFZfUENTMjNfRFcxMChjaCkpOwog
CQl2YWwgJj0gfihEUElPX1BDU19TV0lOR19DQUxDX1RYMF9UWDIgfCBEUElPX1BDU19TV0lOR19D
QUxDX1RYMV9UWDMpOwogCQl2YWwgJj0gfihEUElPX1BDU19UWDFERUVNUF9NQVNLIHwgRFBJT19Q
Q1NfVFgyREVFTVBfTUFTSyk7CkBAIC02NzksNyArNjc5LDcgQEAgdm9pZCBjaHZfc2V0X3BoeV9z
aWduYWxfbGV2ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJdmFsIHw9IERQSU9f
UENTX1RYMU1BUkdJTl8wMDAgfCBEUElPX1BDU19UWDJNQVJHSU5fMDAwOwogCXZsdl9kcGlvX3dy
aXRlKGRldl9wcml2LCBwaXBlLCBWTFZfUENTMDFfRFc5KGNoKSwgdmFsKTsKIAotCWlmIChpbnRl
bF9jcnRjLT5jb25maWctPmxhbmVfY291bnQgPiAyKSB7CisJaWYgKGNydGNfc3RhdGUtPmxhbmVf
Y291bnQgPiAyKSB7CiAJCXZhbCA9IHZsdl9kcGlvX3JlYWQoZGV2X3ByaXYsIHBpcGUsIFZMVl9Q
Q1MyM19EVzkoY2gpKTsKIAkJdmFsICY9IH4oRFBJT19QQ1NfVFgxTUFSR0lOX01BU0sgfCBEUElP
X1BDU19UWDJNQVJHSU5fTUFTSyk7CiAJCXZhbCB8PSBEUElPX1BDU19UWDFNQVJHSU5fMDAwIHwg
RFBJT19QQ1NfVFgyTUFSR0lOXzAwMDsKQEAgLTY4Nyw3ICs2ODcsNyBAQCB2b2lkIGNodl9zZXRf
cGh5X3NpZ25hbF9sZXZlbChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl9CiAKIAkv
KiBQcm9ncmFtIHN3aW5nIGRlZW1waCAqLwotCWZvciAoaSA9IDA7IGkgPCBpbnRlbF9jcnRjLT5j
b25maWctPmxhbmVfY291bnQ7IGkrKykgeworCWZvciAoaSA9IDA7IGkgPCBjcnRjX3N0YXRlLT5s
YW5lX2NvdW50OyBpKyspIHsKIAkJdmFsID0gdmx2X2RwaW9fcmVhZChkZXZfcHJpdiwgcGlwZSwg
Q0hWX1RYX0RXNChjaCwgaSkpOwogCQl2YWwgJj0gfkRQSU9fU1dJTkdfREVFTVBIOVA1X01BU0s7
CiAJCXZhbCB8PSBkZWVtcGhfcmVnX3ZhbHVlIDw8IERQSU9fU1dJTkdfREVFTVBIOVA1X1NISUZU
OwpAQCAtNjk1LDcgKzY5NSw3IEBAIHZvaWQgY2h2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCX0KIAogCS8qIFByb2dyYW0gc3dpbmcgbWFyZ2lu
ICovCi0JZm9yIChpID0gMDsgaSA8IGludGVsX2NydGMtPmNvbmZpZy0+bGFuZV9jb3VudDsgaSsr
KSB7CisJZm9yIChpID0gMDsgaSA8IGNydGNfc3RhdGUtPmxhbmVfY291bnQ7IGkrKykgewogCQl2
YWwgPSB2bHZfZHBpb19yZWFkKGRldl9wcml2LCBwaXBlLCBDSFZfVFhfRFcyKGNoLCBpKSk7CiAK
IAkJdmFsICY9IH5EUElPX1NXSU5HX01BUkdJTjAwMF9NQVNLOwpAQCAtNzE4LDcgKzcxOCw3IEBA
IHZvaWQgY2h2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCSAqIEZvciBub3csIGZvciB0aGlzIHVuaXF1ZSB0cmFuc2l0aW9uIHNjYWxlIHNlbGVj
dGlvbiwgc2V0IGJpdAogCSAqIDI3IGZvciBjaDAgYW5kIGNoMS4KIAkgKi8KLQlmb3IgKGkgPSAw
OyBpIDwgaW50ZWxfY3J0Yy0+Y29uZmlnLT5sYW5lX2NvdW50OyBpKyspIHsKKwlmb3IgKGkgPSAw
OyBpIDwgY3J0Y19zdGF0ZS0+bGFuZV9jb3VudDsgaSsrKSB7CiAJCXZhbCA9IHZsdl9kcGlvX3Jl
YWQoZGV2X3ByaXYsIHBpcGUsIENIVl9UWF9EVzMoY2gsIGkpKTsKIAkJaWYgKHVuaXFfdHJhbnNf
c2NhbGUpCiAJCQl2YWwgfD0gRFBJT19UWF9VTklRX1RSQU5TX1NDQUxFX0VOOwpAQCAtNzMyLDcg
KzczMiw3IEBAIHZvaWQgY2h2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyLAogCXZhbCB8PSBEUElPX1BDU19TV0lOR19DQUxDX1RYMF9UWDIgfCBEUElP
X1BDU19TV0lOR19DQUxDX1RYMV9UWDM7CiAJdmx2X2RwaW9fd3JpdGUoZGV2X3ByaXYsIHBpcGUs
IFZMVl9QQ1MwMV9EVzEwKGNoKSwgdmFsKTsKIAotCWlmIChpbnRlbF9jcnRjLT5jb25maWctPmxh
bmVfY291bnQgPiAyKSB7CisJaWYgKGNydGNfc3RhdGUtPmxhbmVfY291bnQgPiAyKSB7CiAJCXZh
bCA9IHZsdl9kcGlvX3JlYWQoZGV2X3ByaXYsIHBpcGUsIFZMVl9QQ1MyM19EVzEwKGNoKSk7CiAJ
CXZhbCB8PSBEUElPX1BDU19TV0lOR19DQUxDX1RYMF9UWDIgfCBEUElPX1BDU19TV0lOR19DQUxD
X1RYMV9UWDM7CiAJCXZsdl9kcGlvX3dyaXRlKGRldl9wcml2LCBwaXBlLCBWTFZfUENTMjNfRFcx
MChjaCksIHZhbCk7CkBAIC05OTIsMTQgKzk5MiwxNSBAQCB2b2lkIGNodl9waHlfcG9zdF9wbGxf
ZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIH0KIAogdm9pZCB2bHZfc2V0
X3BoeV9zaWduYWxfbGV2ZWwoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkgICAg
ICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAgICAgIHUz
MiBkZW1waF9yZWdfdmFsdWUsIHUzMiBwcmVlbXBoX3JlZ192YWx1ZSwKIAkJCSAgICAgIHUzMiB1
bmlxdHJhbnNjYWxlX3JlZ192YWx1ZSwgdTMyIHR4M19kZW1waCkKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKLQlzdHJ1
Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMoZW5jb2Rlci0+YmFzZS5j
cnRjKTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0
ZS0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkcG9ydCA9IGVuY190
b19kaWdfcG9ydChlbmNvZGVyKTsKIAllbnVtIGRwaW9fY2hhbm5lbCBwb3J0ID0gdmx2X2Rwb3J0
X3RvX2NoYW5uZWwoZHBvcnQpOwotCWVudW0gcGlwZSBwaXBlID0gaW50ZWxfY3J0Yy0+cGlwZTsK
KwllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CiAKIAl2bHZfZHBpb19nZXQoZGV2X3ByaXYp
OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9f
cGh5LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwaW9fcGh5LmgKaW5k
ZXggZjQxOGFhYjkwYjdlLi42NDczNDQwZTc0NTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBpb19waHkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RwaW9fcGh5LmgKQEAgLTMyLDYgKzMyLDcgQEAgdm9pZCBieHRfZGRp
X3BoeV9zZXRfbGFuZV9vcHRpbV9tYXNrKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAog
dTggYnh0X2RkaV9waHlfZ2V0X2xhbmVfbGF0X29wdGltX21hc2soc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIpOwogCiB2b2lkIGNodl9zZXRfcGh5X3NpZ25hbF9sZXZlbChzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAgdTMyIGRlZW1waF9yZWdfdmFsdWUsIHUzMiBtYXJn
aW5fcmVnX3ZhbHVlLAogCQkJICAgICAgYm9vbCB1bmlxX3RyYW5zX3NjYWxlKTsKIHZvaWQgY2h2
X2RhdGFfbGFuZV9zb2Z0X3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLApAQCAt
NDYsNiArNDcsNyBAQCB2b2lkIGNodl9waHlfcG9zdF9wbGxfZGlzYWJsZShzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKIAkJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpvbGRfY3J0Y19zdGF0ZSk7CiAKIHZvaWQgdmx2X3NldF9waHlfc2lnbmFsX2xldmVsKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgICB1MzIgZGVtcGhfcmVnX3ZhbHVlLCB1MzIg
cHJlZW1waF9yZWdfdmFsdWUsCiAJCQkgICAgICB1MzIgdW5pcXRyYW5zY2FsZV9yZWdfdmFsdWUs
IHUzMiB0eDNfZGVtcGgpOwogdm9pZCB2bHZfcGh5X3ByZV9wbGxfZW5hYmxlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9oZG1pLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hk
bWkuYwppbmRleCAwMTBmMzcyNDA3MTAuLjgxMjE4ZDk2OGE3ZSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9oZG1pLmMKQEAgLTI3MzAsOCArMjczMCw5IEBAIHN0YXRpYyB2
b2lkIHZsdl9oZG1pX3ByZV9lbmFibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUs
CiAJdmx2X3BoeV9wcmVfZW5jb2Rlcl9lbmFibGUoZW5jb2RlciwgcGlwZV9jb25maWcpOwogCiAJ
LyogSERNSSAxLjBWLTJkQiAqLwotCXZsdl9zZXRfcGh5X3NpZ25hbF9sZXZlbChlbmNvZGVyLCAw
eDJiMjQ1ZjVmLCAweDAwMDAyMDAwLCAweDU1NzhiODNhLAotCQkJCSAweDJiMjQ3ODc4KTsKKwl2
bHZfc2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgcGlwZV9jb25maWcsCisJCQkJIDB4MmIy
NDVmNWYsIDB4MDAwMDIwMDAsCisJCQkJIDB4NTU3OGI4M2EsIDB4MmIyNDc4NzgpOwogCiAJZHBv
cnQtPnNldF9pbmZvZnJhbWVzKGVuY29kZXIsCiAJCQkgICAgICBwaXBlX2NvbmZpZy0+aGFzX2lu
Zm9mcmFtZSwKQEAgLTI4MDgsNyArMjgwOSw3IEBAIHN0YXRpYyB2b2lkIGNodl9oZG1pX3ByZV9l
bmFibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAKIAkvKiBGSVhNRTogUHJv
Z3JhbSB0aGUgc3VwcG9ydCB4eHggVi1kQiAqLwogCS8qIFVzZSA4MDBtVi0wZEIgKi8KLQljaHZf
c2V0X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgMTI4LCAxMDIsIGZhbHNlKTsKKwljaHZfc2V0
X3BoeV9zaWduYWxfbGV2ZWwoZW5jb2RlciwgcGlwZV9jb25maWcsIDEyOCwgMTAyLCBmYWxzZSk7
CiAKIAlkcG9ydC0+c2V0X2luZm9mcmFtZXMoZW5jb2RlciwKIAkJCSAgICAgIHBpcGVfY29uZmln
LT5oYXNfaW5mb2ZyYW1lLAotLSAKMi4yNC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0
cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9s
aXN0aW5mby9pbnRlbC1nZngK

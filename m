Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DC729403FD4
	for <lists+intel-gfx@lfdr.de>; Wed,  8 Sep 2021 21:31:59 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F291C6E29D;
	Wed,  8 Sep 2021 19:31:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 16A906E29D
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 Sep 2021 19:31:56 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10101"; a="306142474"
X-IronPort-AV: E=Sophos;i="5.85,279,1624345200"; d="scan'208";a="306142474"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Sep 2021 12:31:55 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.85,279,1624345200"; d="scan'208";a="606417112"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
 by fmsmga001.fm.intel.com with ESMTP; 08 Sep 2021 12:31:55 -0700
Received: from orsmsx612.amr.corp.intel.com (10.22.229.25) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.12; Wed, 8 Sep 2021 12:31:54 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX612.amr.corp.intel.com (10.22.229.25) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.12; Wed, 8 Sep 2021 12:31:54 -0700
Received: from orsmsx610.amr.corp.intel.com ([10.22.229.23]) by
 ORSMSX610.amr.corp.intel.com ([10.22.229.23]) with mapi id 15.01.2242.012;
 Wed, 8 Sep 2021 12:31:54 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "Manna, Animesh" <animesh.manna@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
CC: "Mun, Gwan-gyeong" <gwan-gyeong.mun@intel.com>, "Nikula, Jani"
 <jani.nikula@intel.com>, "Kahola, Mika" <mika.kahola@intel.com>, "Navare,
 Manasi D" <manasi.d.navare@intel.com>
Thread-Topic: [Intel-gfx] [RFC 3/5] drm/i915/panelreplay: Initializaton and
 compute config for panel replay
Thread-Index: AQHXpJVLMvcHDA0PS0C6VZ/CZ+L+36ua/gkA
Date: Wed, 8 Sep 2021 19:31:54 +0000
Message-ID: <c263659e53c3bb478c6c825fc8e1460b82dd07a2.camel@intel.com>
References: <20210908091544.13772-1-animesh.manna@intel.com>
 <20210908091544.13772-4-animesh.manna@intel.com>
In-Reply-To: <20210908091544.13772-4-animesh.manna@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.22.254.132]
Content-Type: text/plain; charset="utf-8"
Content-ID: <0BE0909C6197174D89DD038303885C81@intel.com>
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [RFC 3/5] drm/i915/panelreplay: Initializaton and
 compute config for panel replay
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gV2VkLCAyMDIxLTA5LTA4IGF0IDE0OjQ1ICswNTMwLCBBbmltZXNoIE1hbm5hIHdyb3RlOg0K
PiBBcyBwYW5lbCByZXBsYXkgZmVhdHVyZSBzaW1pbGFyIHRvIFBTUiBmZWF0dXJlIG9mIEVEUCBw
YW5lbCwgc28gY3VycmVudGx5DQo+IHV0aWxpemVkIGV4aXN0aW5nIHBzciBmcmFtZXdvcmsgZm9y
IHBhbmVsIHJlcGxheS4NCj4gDQo+IFNpZ25lZC1vZmYtYnk6IEFuaW1lc2ggTWFubmEgPGFuaW1l
c2gubWFubmFAaW50ZWwuY29tPg0KPiAtLS0NCj4gIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaCAgICB8ICA0ICsrDQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2RwLmMgICAgICAgfCA0NyArKysrKysrKysrKysrKystLS0tDQo+ICBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jICAgICAgfCA0MyArKysrKysrKysrKysr
KysrKw0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuaCAgICAgIHwg
IDMgKysNCj4gIGluY2x1ZGUvZHJtL2RybV9kcF9oZWxwZXIuaCAgICAgICAgICAgICAgICAgICB8
ICAzICsrDQo+ICA1IGZpbGVzIGNoYW5nZWQsIDkxIGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25z
KC0pDQo+IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfdHlwZXMuaA0KPiBpbmRleCBjN2JjZjkxODM0NDcuLjZjYTlmYWJiOTMzMyAxMDA2NDQN
Cj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVz
LmgNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5
cGVzLmgNCj4gQEAgLTEwNjYsNiArMTA2Niw3IEBAIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlIHsN
Cj4gIAlib29sIHJlcV9wc3IyX3NkcF9wcmlvcl9zY2FubGluZTsNCj4gIAl1MzIgZGMzY29fZXhp
dGxpbmU7DQo+ICAJdTE2IHN1X3lfZ3JhbnVsYXJpdHk7DQo+ICsJYm9vbCBoYXNfcGFuZWxfcmVw
bGF5Ow0KPiAgDQo+ICAJLyoNCj4gIAkgKiBGcmVxdWVuY2UgdGhlIGRwbGwgZm9yIHRoZSBwb3J0
IHNob3VsZCBydW4gYXQuIERpZmZlcnMgZnJvbSB0aGUNCj4gQEAgLTE1MjYsNiArMTUyNyw4IEBA
IHN0cnVjdCBpbnRlbF9wc3Igew0KPiAgCWJvb2wgaXJxX2F1eF9lcnJvcjsNCj4gIAl1MTYgc3Vf
d19ncmFudWxhcml0eTsNCj4gIAl1MTYgc3VfeV9ncmFudWxhcml0eTsNCj4gKwlib29sIHNpbmtf
cHJfc3VwcG9ydDsNCj4gKwlib29sIHByX2VuYWJsZWQ7DQoNCkluc3RlYWQgb2YgYWxsIHRoZSBh
Ym92ZSB3ZSBjb3VsZCBoYXZlIGEgZnVuY3Rpb24gdGhhdCBjaGVja3MgaWYgZGlzcGxheVBvcnQg
aXMgZURQIG9yIG5vdCwgdG8ga25vdyBpZiBpcyBQU1Igb3IgUFIuDQpzaW5rX3N1cHBvcnQgYW5k
IGFsbCB0aGUgb3RoZXJzIHNob3VsZCBiZSBzaGFyZWQgZm9yIFBTUiBhbmQgUFIuDQoNCj4gIAl1
MzIgZGMzY29fZXhpdGxpbmU7DQo+ICAJdTMyIGRjM2NvX2V4aXRfZGVsYXk7DQo+ICAJc3RydWN0
IGRlbGF5ZWRfd29yayBkYzNjb193b3JrOw0KPiBAQCAtMTU1Miw2ICsxNTU1LDcgQEAgc3RydWN0
IGludGVsX2RwIHsNCj4gIAl1OCBsdHRwcl9waHlfY2Fwc1tEUF9NQVhfTFRUUFJfQ09VTlRdW0RQ
X0xUVFBSX1BIWV9DQVBfU0laRV07DQo+ICAJdTggZmVjX2NhcGFibGU7DQo+ICAJdTggcGNvbl9k
c2NfZHBjZFtEUF9QQ09OX0RTQ19FTkNPREVSX0NBUF9TSVpFXTsNCj4gKwl1OCBwcl9kcGNkOw0K
DQpVc2VkIG9uY2Ugd2h5IGNhY2hlIGl0Pw0KDQo+ICAJLyogc291cmNlIHJhdGVzICovDQo+ICAJ
aW50IG51bV9zb3VyY2VfcmF0ZXM7DQo+ICAJY29uc3QgaW50ICpzb3VyY2VfcmF0ZXM7DQo+IGRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMNCj4gaW5kZXggZDI4YmQ4YzRhOGE1
Li45MGM3MDg1NDg4MTEgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZHAuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RwLmMNCj4gQEAgLTE1NjAsMTIgKzE1NjAsMjIgQEAgc3RhdGljIHZvaWQgaW50ZWxfZHBfY29t
cHV0ZV92c2NfY29sb3JpbWV0cnkoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGMN
Cj4gIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+
dWFwaS5jcnRjKTsNCj4gIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KGNydGMtPmJhc2UuZGV2KTsNCj4gIA0KPiAtCS8qDQo+IC0JICogUHJlcGFyZSBWU0MgSGVh
ZGVyIGZvciBTVSBhcyBwZXIgRFAgMS40IHNwZWMsIFRhYmxlIDItMTE4DQo+IC0JICogVlNDIFNE
UCBzdXBwb3J0aW5nIDNEIHN0ZXJlbywgUFNSMiwgYW5kIFBpeGVsIEVuY29kaW5nLw0KPiAtCSAq
IENvbG9yaW1ldHJ5IEZvcm1hdCBpbmRpY2F0aW9uLg0KPiAtCSAqLw0KPiAtCXZzYy0+cmV2aXNp
b24gPSAweDU7DQo+ICsJaWYgKGNydGNfc3RhdGUtPmhhc19wYW5lbF9yZXBsYXkpIHsNCj4gKwkJ
LyoNCj4gKwkJICogUHJlcGFyZSBWU0MgSGVhZGVyIGZvciBTVSBhcyBwZXIgRFAgMi4wIHNwZWMs
IFRhYmxlIDItMjIzDQo+ICsJCSAqIFZTQyBTRFAgc3VwcG9ydGluZyAzRCBzdGVyZW8sIFBhbmVs
IFJlcGxheSwgYW5kIFBpeGVsDQo+ICsJCSAqIEVuY29kaW5nL0NvbG9yaW1ldHJ5IEZvcm1hdCBp
bmRpY2F0aW9uLg0KPiArCQkgKi8NCj4gKwkJdnNjLT5yZXZpc2lvbiA9IDB4NzsNCj4gKwl9IGVs
c2Ugew0KPiArCQkvKg0KPiArCQkgKiBQcmVwYXJlIFZTQyBIZWFkZXIgZm9yIFNVIGFzIHBlciBE
UCAxLjQgc3BlYywgVGFibGUgMi0xMTgNCj4gKwkJICogVlNDIFNEUCBzdXBwb3J0aW5nIDNEIHN0
ZXJlbywgUFNSMiwgYW5kIFBpeGVsIEVuY29kaW5nLw0KPiArCQkgKiBDb2xvcmltZXRyeSBGb3Jt
YXQgaW5kaWNhdGlvbi4NCj4gKwkJICovDQo+ICsJCXZzYy0+cmV2aXNpb24gPSAweDU7DQo+ICsJ
fQ0KPiArDQo+ICAJdnNjLT5sZW5ndGggPSAweDEzOw0KPiAgDQo+ICAJLyogRFAgMS40YSBzcGVj
LCBUYWJsZSAyLTEyMCAqLw0KPiBAQCAtMTY3NCw2ICsxNjg0LDIyIEBAIHZvaWQgaW50ZWxfZHBf
Y29tcHV0ZV9wc3JfdnNjX3NkcChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLA0KPiAgCQkJdnNj
LT5yZXZpc2lvbiA9IDB4NDsNCj4gIAkJCXZzYy0+bGVuZ3RoID0gMHhlOw0KPiAgCQl9DQo+ICsJ
fSBlbHNlIGlmIChpbnRlbF9kcC0+cHNyLnByX2VuYWJsZWQpIHsNCj4gKwkJaWYgKGludGVsX2Rw
LT5wc3IuY29sb3JpbWV0cnlfc3VwcG9ydCAmJg0KPiArCQkgICAgaW50ZWxfZHBfbmVlZHNfdnNj
X3NkcChjcnRjX3N0YXRlLCBjb25uX3N0YXRlKSkgew0KPiArCQkJLyogW1BSLCArQ29sb3JpbWV0
cnldICovDQo+ICsJCQlpbnRlbF9kcF9jb21wdXRlX3ZzY19jb2xvcmltZXRyeShjcnRjX3N0YXRl
LCBjb25uX3N0YXRlLA0KPiArCQkJCQkJCSB2c2MpOw0KPiArCQl9IGVsc2Ugew0KPiArCQkJLyoN
Cj4gKwkJCSAqIFtQUiwgLUNvbG9yaW1ldHJ5XQ0KPiArCQkJICogUHJlcGFyZSBWU0MgSGVhZGVy
IGZvciBTVSBhcyBwZXIgRFAgMi4wIHNwZWMsIFRhYmxlIDItMjIzDQo+ICsJCQkgKiBWU0MgU0RQ
IHN1cHBvcnRpbmcgM0Qgc3RlcmVvICsgUFIgKGFwcGxpZXMgdG8gZURQIHYxLjMgb3INCj4gKwkJ
CSAqIGhpZ2hlcikuDQo+ICsJCQkgKi8NCj4gKwkJCXZzYy0+cmV2aXNpb24gPSAweDY7DQo+ICsJ
CQl2c2MtPmxlbmd0aCA9IDB4MTA7DQo+ICsJCX0NCj4gIAl9IGVsc2Ugew0KPiAgCQkvKg0KPiAg
CQkgKiBbUFNSMV0NCj4gQEAgLTE4MTQsNiArMTg0MCw3IEBAIGludGVsX2RwX2NvbXB1dGVfY29u
ZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLA0KPiAgDQo+ICAJaW50ZWxfdnJyX2Nv
bXB1dGVfY29uZmlnKHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsNCj4gIAlpbnRlbF9wc3JfY29t
cHV0ZV9jb25maWcoaW50ZWxfZHAsIHBpcGVfY29uZmlnKTsNCj4gKwlpbnRlbF9wYW5lbF9yZXBs
YXlfY29tcHV0ZV9jb25maWcoaW50ZWxfZHAsIHBpcGVfY29uZmlnKTsNCj4gIAlpbnRlbF9kcnJz
X2NvbXB1dGVfY29uZmlnKGludGVsX2RwLCBwaXBlX2NvbmZpZywgb3V0cHV0X2JwcCwNCj4gIAkJ
CQkgIGNvbnN0YW50X24pOw0KPiAgCWludGVsX2RwX2NvbXB1dGVfdnNjX3NkcChpbnRlbF9kcCwg
cGlwZV9jb25maWcsIGNvbm5fc3RhdGUpOw0KPiBAQCAtMjcxOSwxMCArMjc0NiwxMCBAQCBzdGF0
aWMgc3NpemVfdCBpbnRlbF9kcF92c2Nfc2RwX3BhY2soY29uc3Qgc3RydWN0IGRybV9kcF92c2Nf
c2RwICp2c2MsDQo+ICAJc2RwLT5zZHBfaGVhZGVyLkhCMyA9IHZzYy0+bGVuZ3RoOyAvKiBOdW1i
ZXIgb2YgVmFsaWQgRGF0YSBCeXRlcyAqLw0KPiAgDQo+ICAJLyoNCj4gLQkgKiBPbmx5IHJldmlz
aW9uIDB4NSBzdXBwb3J0cyBQaXhlbCBFbmNvZGluZy9Db2xvcmltZXRyeSBGb3JtYXQgYXMNCj4g
LQkgKiBwZXIgRFAgMS40YSBzcGVjLg0KPiArCSAqIFJldmlzaW9uIDB4NSBhbmQgMHg3IHN1cHBv
cnRzIFBpeGVsIEVuY29kaW5nL0NvbG9yaW1ldHJ5IEZvcm1hdCBhcw0KPiArCSAqIHBlciBEUCAx
LjRhIHNwZWMgYW5kIERQIDIuMCBzcGVjIHJlc3BlY3RpdmVseS4NCj4gIAkgKi8NCj4gLQlpZiAo
dnNjLT5yZXZpc2lvbiAhPSAweDUpDQo+ICsJaWYgKHZzYy0+cmV2aXNpb24gIT0gMHg1IHx8IHZz
Yy0+cmV2aXNpb24gIT0gMHg3KQ0KPiAgCQlnb3RvIG91dDsNCj4gIA0KPiAgCS8qIFZTQyBTRFAg
UGF5bG9hZCBmb3IgREIxNiB0aHJvdWdoIERCMTggKi8NCj4gQEAgLTUwMTcsNiArNTA0NCw4IEBA
IGludGVsX2RwX2luaXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19w
b3J0LA0KPiAgDQo+ICAJaW50ZWxfcHNyX2luaXQoaW50ZWxfZHApOw0KPiAgDQo+ICsJaW50ZWxf
cGFuZWxfcmVwbGF5X2luaXQoaW50ZWxfZHApOw0KPiArDQo+ICAJcmV0dXJuIHRydWU7DQo+ICAN
Cj4gIGZhaWw6DQo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX3Bzci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYw0KPiBp
bmRleCA1ZmE3NmIxNDhmNmQuLjY2MGUxOWMxMGFhOCAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYw0KPiArKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jDQo+IEBAIC05NDcsNiArOTQ3LDIxIEBAIHN0YXRpYyBi
b29sIGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+
ICAJcmV0dXJuIHRydWU7DQo+ICB9DQo+ICANCj4gK3ZvaWQgaW50ZWxfcGFuZWxfcmVwbGF5X2Nv
bXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICsJCQkJICAgICAgIHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQ0KPiArew0KPiArCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOw0KPiArDQo+ICsJ
aWYgKCFpbnRlbF9kcC0+cHNyLnNpbmtfcHJfc3VwcG9ydCkNCj4gKwkJcmV0dXJuOw0KPiArDQo+
ICsJY3J0Y19zdGF0ZS0+aGFzX3BhbmVsX3JlcGxheSA9IHRydWU7DQo+ICsJY3J0Y19zdGF0ZS0+
aW5mb2ZyYW1lcy5lbmFibGUgfD0gaW50ZWxfaGRtaV9pbmZvZnJhbWVfZW5hYmxlKERQX1NEUF9W
U0MpOw0KPiArDQo+ICsJaWYgKEhBU19QU1IyX1NFTF9GRVRDSChkZXZfcHJpdikpDQo+ICsJCWlu
dGVsX3BzcjJfc2VsX2ZldGNoX2NvbmZpZ192YWxpZChpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7DQo+
ICt9DQo+ICsNCj4gIHZvaWQgaW50ZWxfcHNyX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsDQo+ICAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSkNCj4gIHsNCj4gQEAgLTExNzcsNiArMTE5Miw3IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bz
cl9lbmFibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICAJZHJtX1dBUk5f
T04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5wc3IuZW5hYmxlZCk7DQo+ICANCj4gIAlpbnRl
bF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmhhc19wc3IyOw0KPiArCWludGVs
X2RwLT5wc3IucHJfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmhhc19wYW5lbF9yZXBsYXk7DQo+ICAJ
aW50ZWxfZHAtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMgPSAwOw0KPiAgCWludGVsX2RwLT5w
c3IucGlwZSA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKS0+cGlwZTsNCj4g
IAlpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIgPSBjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcjsN
Cj4gQEAgLTIwODksNiArMjEwNSwzMyBAQCB2b2lkIGludGVsX3Bzcl9mbHVzaChzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsDQo+ICAJfQ0KPiAgfQ0KPiAgDQo+ICsvKioNCj4gKyAq
IGludGVsX3BhbmVsX3JlcGxheV9pbml0IC0gQ2hlY2sgZm9yIHNpbmsgYW5kIHNvdXJjZSBjYXBh
YmlsaXR5Lg0KPiArICogQGludGVsX2RwOiBJbnRlbCBEUA0KPiArICoNCj4gKyAqIFRoaXMgZnVu
Y3Rpb24gaXMgY2FsbGVkIGFmdGVyIHRoZSBpbml0aWFsaXppbmcgY29ubmVjdG9yLg0KPiArICog
KHRoZSBpbml0aWFsaXppbmcgb2YgY29ubmVjdG9yIHRyZWF0cyB0aGUgaGFuZGxpbmcgb2YgY29u
bmVjdG9yIGNhcGFiaWxpdGllcykNCj4gKyAqIEFuZCBpdCBpbml0aWFsaXplcyBiYXNpYyBwYW5l
bCByZXBsYXkgc3R1ZmYgZm9yIGVhY2ggRFAgRW5jb2Rlci4NCj4gKyAqLw0KPiArdm9pZCBpbnRl
bF9wYW5lbF9yZXBsYXlfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQ0KPiArew0KPiAr
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
Ow0KPiArDQo+ICsJaWYgKCFIQVNfUFIoZGV2X3ByaXYpKQ0KPiArCQlyZXR1cm47DQo+ICsNCj4g
Kwlkcm1fZHBfZHBjZF9yZWFkKCZpbnRlbF9kcC0+YXV4LCBEUF9QQU5FTF9SRVBMQVlfU1VQUE9S
VCwgJmludGVsX2RwLT5wcl9kcGNkLA0KPiArCQkJIHNpemVvZihpbnRlbF9kcC0+cHJfZHBjZCkp
Ow0KPiArDQo+ICsJaWYgKCEoaW50ZWxfZHAtPnByX2RwY2QgJiBQQU5FTF9SRVBMQVlfU1VQUE9S
VCkpIHsNCj4gKwkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sDQo+ICsJCQkgICAgIlBhbmVs
IHJlcGxheSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHBhbmVsXG4iKTsNCj4gKwkJcmV0dXJuOw0KPiAr
CX0NCj4gKw0KPiArCWludGVsX2RwLT5wc3Iuc2lua19wcl9zdXBwb3J0ID0gdHJ1ZTsNCj4gK30N
Cj4gKw0KPiAgLyoqDQo+ICAgKiBpbnRlbF9wc3JfaW5pdCAtIEluaXQgYmFzaWMgUFNSIHdvcmsg
YW5kIG11dGV4Lg0KPiAgICogQGludGVsX2RwOiBJbnRlbCBEUA0KPiBkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuaCBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgNCj4gaW5kZXggNjQxNTIxYjEwMWM4Li5jMTkwZWM0NmE5
ZmMgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNy
LmgNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuaA0KPiBA
QCAtMzYsNiArMzYsNyBAQCB2b2lkIGludGVsX3Bzcl9mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsDQo+ICAJCSAgICAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0cywNCj4g
IAkJICAgICBlbnVtIGZiX29wX29yaWdpbiBvcmlnaW4pOw0KPiAgdm9pZCBpbnRlbF9wc3JfaW5p
dChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsNCj4gK3ZvaWQgaW50ZWxfcGFuZWxfcmVwbGF5
X2luaXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7DQo+ICB2b2lkIGludGVsX3Bzcl9jb21w
dXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLA0KPiAgCQkJICAgICAgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOw0KPiAgdm9pZCBpbnRlbF9wc3JfZ2V0X2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwNCj4gQEAgLTUzLDUgKzU0LDcgQEAg
dm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFu
ZSAqcGxhbmUsDQo+ICAJCQkJCWludCBjb2xvcl9wbGFuZSk7DQo+ICB2b2lkIGludGVsX3Bzcl9w
YXVzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsNCj4gIHZvaWQgaW50ZWxfcHNyX3Jlc3Vt
ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsNCj4gK3ZvaWQgaW50ZWxfcGFuZWxfcmVwbGF5
X2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsDQo+ICsJCQkJICAgICAg
IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsNCj4gIA0KPiAgI2VuZGlmIC8q
IF9fSU5URUxfUFNSX0hfXyAqLw0KPiBkaWZmIC0tZ2l0IGEvaW5jbHVkZS9kcm0vZHJtX2RwX2hl
bHBlci5oIGIvaW5jbHVkZS9kcm0vZHJtX2RwX2hlbHBlci5oDQo+IGluZGV4IDFkNWIzZGJiNmU1
Ni4uMWI0ZGNlZTNiMjgxIDEwMDY0NA0KPiAtLS0gYS9pbmNsdWRlL2RybS9kcm1fZHBfaGVscGVy
LmgNCj4gKysrIGIvaW5jbHVkZS9kcm0vZHJtX2RwX2hlbHBlci5oDQo+IEBAIC01MzcsNiArNTM3
LDkgQEAgc3RydWN0IGRybV9wYW5lbDsNCj4gICNkZWZpbmUgRFBfRFNDX0JSQU5DSF9PVkVSQUxM
X1RIUk9VR0hQVVRfMSAgMHgwYTENCj4gICNkZWZpbmUgRFBfRFNDX0JSQU5DSF9NQVhfTElORV9X
SURUSCAgICAgICAgMHgwYTINCj4gIA0KPiArI2RlZmluZSBEUF9QQU5FTF9SRVBMQVlfU1VQUE9S
VCAgICAgICAgICAgICAweDBiMA0KPiArIyBkZWZpbmUgUEFORUxfUkVQTEFZX1NVUFBPUlQgICAg
ICAgICAgICAgICAoMSA8PCAwKQ0KPiArDQo+ICAvKiBMaW5rIENvbmZpZ3VyYXRpb24gKi8NCj4g
ICNkZWZpbmUJRFBfTElOS19CV19TRVQJCSAgICAgICAgICAgIDB4MTAwDQo+ICAjIGRlZmluZSBE
UF9MSU5LX1JBVEVfVEFCTEUJCSAgICAweDAwICAgIC8qIGVEUCAxLjQgKi8NCg0K

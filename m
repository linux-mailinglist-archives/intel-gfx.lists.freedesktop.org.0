Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id ABC49F8BC1
	for <lists+intel-gfx@lfdr.de>; Tue, 12 Nov 2019 10:29:38 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B437C6EA95;
	Tue, 12 Nov 2019 09:29:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 194CB6EA98
 for <intel-gfx@lists.freedesktop.org>; Tue, 12 Nov 2019 09:29:17 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19170017-1500050 
 for multiple; Tue, 12 Nov 2019 09:28:58 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 12 Nov 2019 09:28:39 +0000
Message-Id: <20191112092854.869-12-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191112092854.869-1-chris@chris-wilson.co.uk>
References: <20191112092854.869-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 12/27] drm/i915/gt: Pull GT initialisation under
 intel_gt_init()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QmVnaW4gcHVsbGluZyB0aGUgR1Qgc2V0dXAgdW5kZXJuZWF0aCBhIHNpbmdsZSBHVCB1bWJyZWxs
YTsgbGV0IGludGVsX2d0CnRha2Ugb3duZXJzaGlwIG9mIGl0cyBlbmdpbmVzISBBcyBoaW50ZWQs
IHRoZSBjb21wbGljYXRpb24gaXMgdGhlCmxpZmV0aW1lIG9mIHRoZSBwcm9iZWQgZW5naW5lIHZl
cnN1cyB0aGUgYWN0aXZlIGxpZmV0aW1lIG9mIHRoZSBHVApiYWNrZW5kcy4gV2UgbmVlZCB0byBk
ZXRlY3QgdGhlIGVuZ2luZSBsYXlvdXQgZWFybHkgYW5kIGtlZXAgaXQgdW50aWwKdGhlIGVuZCBz
byB0aGF0IHdlIGNhbiBzYW5pdGl6ZSBzdGF0ZSBvbiB0YWtlb3ZlciBhbmQgcmVsZWFzZS4KClNp
Z25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfb3ZlcmxheS5jICB8ICAgNiArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggICAgICAgIHwgICA4ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgNDIgKystLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggIHwgIDE1ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jICAgICAgICAgICAgfCAyMzAgKysrKysr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAg
ICAgfCAgMTcgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgICAgICAg
ICB8ICAgOSArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nX3N1Ym1pc3Npb24uYyAg
IHwgIDE0ICstCiAuLi4vZ3B1L2RybS9pOTE1L2d0L2ludGVsX3RpbWVsaW5lX3R5cGVzLmggICAg
fCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMgICAgICAgICB8
ICAxNiArLQogLi4uL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIHwg
ICA5ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jICAgICAgICAgICAgICAgfCAg
IDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAgICAgICAgICAgIHwgMjI4
ICstLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9n
ZW0uYyAgICAgfCAgIDEgKwogMTQgZmlsZXMgY2hhbmdlZCwgMzAyIGluc2VydGlvbnMoKyksIDI5
OCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX292ZXJsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfb3Zl
cmxheS5jCmluZGV4IDhjZmI3ODVlNzYxYy4uOTczMDI2ZjBjNzE3IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX292ZXJsYXkuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX292ZXJsYXkuYwpAQCAtMTMyNiwxMiArMTMyNiwxNCBA
QCBzdGF0aWMgaW50IGdldF9yZWdpc3RlcnMoc3RydWN0IGludGVsX292ZXJsYXkgKm92ZXJsYXks
IGJvb2wgdXNlX3BoeXMpCiB2b2lkIGludGVsX292ZXJsYXlfc2V0dXAoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogewogCXN0cnVjdCBpbnRlbF9vdmVybGF5ICpvdmVybGF5Owor
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAlpbnQgcmV0OwogCiAJaWYgKCFIQVNf
T1ZFUkxBWShkZXZfcHJpdikpCiAJCXJldHVybjsKIAotCWlmICghSEFTX0VOR0lORShkZXZfcHJp
diwgUkNTMCkpCisJZW5naW5lID0gZGV2X3ByaXYtPmVuZ2luZVtSQ1MwXTsKKwlpZiAoIWVuZ2lu
ZSB8fCAhZW5naW5lLT5rZXJuZWxfY29udGV4dCkKIAkJcmV0dXJuOwogCiAJb3ZlcmxheSA9IGt6
YWxsb2Moc2l6ZW9mKCpvdmVybGF5KSwgR0ZQX0tFUk5FTCk7CkBAIC0xMzM5LDcgKzEzNDEsNyBA
QCB2b2lkIGludGVsX292ZXJsYXlfc2V0dXAoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KQogCQlyZXR1cm47CiAKIAlvdmVybGF5LT5pOTE1ID0gZGV2X3ByaXY7Ci0Jb3ZlcmxheS0+
Y29udGV4dCA9IGRldl9wcml2LT5lbmdpbmVbUkNTMF0tPmtlcm5lbF9jb250ZXh0OworCW92ZXJs
YXktPmNvbnRleHQgPSBlbmdpbmUtPmtlcm5lbF9jb250ZXh0OwogCUdFTV9CVUdfT04oIW92ZXJs
YXktPmNvbnRleHQpOwogCiAJb3ZlcmxheS0+Y29sb3Jfa2V5ID0gMHgwMTAxZmU7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oCmluZGV4IGJjM2I3MmJmYTllMy4uODMzZGRiZTUw
MWMxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaApAQCAtMTgxLDcgKzE4
MSw5IEBAIHZvaWQgaW50ZWxfZW5naW5lX2NsZWFudXAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKTsKIGludCBpbnRlbF9lbmdpbmVzX2luaXRfbW1pbyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0
KTsKIGludCBpbnRlbF9lbmdpbmVzX3NldHVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogaW50IGlu
dGVsX2VuZ2luZXNfaW5pdChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKLXZvaWQgaW50ZWxfZW5naW5l
c19jbGVhbnVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QpOworCit2b2lkIGludGVsX2VuZ2luZXNfcmVs
ZWFzZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKK3ZvaWQgaW50ZWxfZW5naW5lc19mcmVlKHN0cnVj
dCBpbnRlbF9ndCAqZ3QpOwogCiBpbnQgaW50ZWxfZW5naW5lX2luaXRfY29tbW9uKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CiB2b2lkIGludGVsX2VuZ2luZV9jbGVhbnVwX2NvbW1v
bihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwpAQCAtMjcyLDggKzI3NCw4IEBAIGdl
bjhfZW1pdF9nZ3R0X3dyaXRlKHUzMiAqY3MsIHUzMiB2YWx1ZSwgdTMyIGd0dF9vZmZzZXQsIHUz
MiBmbGFncykKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2ludGVsX2VuZ2luZV9yZXNldChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJCWJvb2wgc3RhbGxlZCkKIHsKLQlpZiAoZW5n
aW5lLT5yZXNldC5yZXNldCkKLQkJZW5naW5lLT5yZXNldC5yZXNldChlbmdpbmUsIHN0YWxsZWQp
OworCWlmIChlbmdpbmUtPnJlc2V0LnJld2luZCkKKwkJZW5naW5lLT5yZXNldC5yZXdpbmQoZW5n
aW5lLCBzdGFsbGVkKTsKIAllbmdpbmUtPnNlcmlhbCsrOyAvKiBjb250ZXh0cyBsb3N0ICovCiB9
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKaW5kZXggMzUwNjk2
YmEzMWJkLi4zZGI5MzNhYTAyZTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV9jcy5jCkBAIC0zMTgsMTIgKzMxOCw2IEBAIHN0YXRpYyBpbnQgaW50ZWxfZW5naW5lX3Nl
dHVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGVudW0gaW50ZWxfZW5naW5lX2lkIGlkKQogCWVuZ2lu
ZS0+cHJvcHMudGltZXNsaWNlX2R1cmF0aW9uX21zID0KIAkJQ09ORklHX0RSTV9JOTE1X1RJTUVT
TElDRV9EVVJBVElPTjsKIAotCS8qCi0JICogVG8gYmUgb3ZlcnJpZGRlbiBieSB0aGUgYmFja2Vu
ZCBvbiBzZXR1cC4gSG93ZXZlciB0byBmYWNpbGl0YXRlCi0JICogY2xlYW51cCBvbiBlcnJvciBk
dXJpbmcgc2V0dXAsIHdlIGFsd2F5cyBwcm92aWRlIHRoZSBkZXN0cm95IHZmdW5jLgotCSAqLwot
CWVuZ2luZS0+ZGVzdHJveSA9ICh0eXBlb2YoZW5naW5lLT5kZXN0cm95KSlrZnJlZTsKLQogCWVu
Z2luZS0+Y29udGV4dF9zaXplID0gaW50ZWxfZW5naW5lX2NvbnRleHRfc2l6ZShndC0+aTkxNSwK
IAkJCQkJCQkgZW5naW5lLT5jbGFzcyk7CiAJaWYgKFdBUk5fT04oZW5naW5lLT5jb250ZXh0X3Np
emUgPiBCSVQoMjApKSkKQEAgLTM4OSwyMiArMzgzLDQwIEBAIHN0YXRpYyB2b2lkIGludGVsX3Nl
dHVwX2VuZ2luZV9jYXBhYmlsaXRpZXMoc3RydWN0IGludGVsX2d0ICpndCkKIH0KIAogLyoqCi0g
KiBpbnRlbF9lbmdpbmVzX2NsZWFudXAoKSAtIGZyZWUgdGhlIHJlc291cmNlcyBhbGxvY2F0ZWQg
Zm9yIENvbW1hbmQgU3RyZWFtZXJzCisgKiBpbnRlbF9lbmdpbmVzX3JlbGVhc2UoKSAtIGZyZWUg
dGhlIHJlc291cmNlcyBhbGxvY2F0ZWQgZm9yIENvbW1hbmQgU3RyZWFtZXJzCiAgKiBAZ3Q6IHBv
aW50ZXIgdG8gc3RydWN0IGludGVsX2d0CiAgKi8KLXZvaWQgaW50ZWxfZW5naW5lc19jbGVhbnVw
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit2b2lkIGludGVsX2VuZ2luZXNfcmVsZWFzZShzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0KQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAllbnVt
IGludGVsX2VuZ2luZV9pZCBpZDsKIAorCS8qIERlY291cGxlIHRoZSBiYWNrZW5kOyBidXQga2Vl
cCB0aGUgbGF5b3V0IGZvciBsYXRlIEdQVSByZXNldHMgKi8KIAlmb3JfZWFjaF9lbmdpbmUoZW5n
aW5lLCBndCwgaWQpIHsKLQkJZW5naW5lLT5kZXN0cm95KGVuZ2luZSk7Ci0JCWd0LT5lbmdpbmVb
aWRdID0gTlVMTDsKKwkJaWYgKCFlbmdpbmUtPnJlbGVhc2UpCisJCQljb250aW51ZTsKKworCQll
bmdpbmUtPnJlbGVhc2UoZW5naW5lKTsKKwkJZW5naW5lLT5yZWxlYXNlID0gTlVMTDsKKworCQlt
ZW1zZXQoJmVuZ2luZS0+cmVzZXQsIDAsIHNpemVvZihlbmdpbmUtPnJlc2V0KSk7CisKIAkJZ3Qt
Pmk5MTUtPmVuZ2luZVtpZF0gPSBOVUxMOwogCX0KIAlyY3VfYmFycmllcigpOwogfQogCit2b2lk
IGludGVsX2VuZ2luZXNfZnJlZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKworCWZvcl9l
YWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkgeworCQlrZnJlZShlbmdpbmUpOworCQlndC0+ZW5n
aW5lW2lkXSA9IE5VTEw7CisJfQorfQorCiAvKioKICAqIGludGVsX2VuZ2luZXNfaW5pdF9tbWlv
KCkgLSBhbGxvY2F0ZSBhbmQgcHJlcGFyZSB0aGUgRW5naW5lIENvbW1hbmQgU3RyZWFtZXJzCiAg
KiBAZ3Q6IHBvaW50ZXIgdG8gc3RydWN0IGludGVsX2d0CkBAIC00NTUsNyArNDY3LDcgQEAgaW50
IGludGVsX2VuZ2luZXNfaW5pdF9tbWlvKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJcmV0dXJuIDA7
CiAKIGNsZWFudXA6Ci0JaW50ZWxfZW5naW5lc19jbGVhbnVwKGd0KTsKKwlpbnRlbF9lbmdpbmVz
X2ZyZWUoZ3QpOwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTQ4OCw3ICs1MDAsNyBAQCBpbnQgaW50
ZWxfZW5naW5lc19pbml0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJcmV0dXJuIDA7CiAKIGNsZWFu
dXA6Ci0JaW50ZWxfZW5naW5lc19jbGVhbnVwKGd0KTsKKwlpbnRlbF9lbmdpbmVzX3JlbGVhc2Uo
Z3QpOwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTY2MiwxNiArNjc0LDEzIEBAIGludCBpbnRlbF9l
bmdpbmVzX3NldHVwKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiAJCWlmIChlcnIpCiAJCQlnb3RvIGNs
ZWFudXA7CiAKLQkJLyogV2UgZXhwZWN0IHRoZSBiYWNrZW5kIHRvIHRha2UgY29udHJvbCBvdmVy
IGl0cyBzdGF0ZSAqLwotCQlHRU1fQlVHX09OKGVuZ2luZS0+ZGVzdHJveSA9PSAodHlwZW9mKGVu
Z2luZS0+ZGVzdHJveSkpa2ZyZWUpOwotCiAJCUdFTV9CVUdfT04oIWVuZ2luZS0+Y29wcyk7CiAJ
fQogCiAJcmV0dXJuIDA7CiAKIGNsZWFudXA6Ci0JaW50ZWxfZW5naW5lc19jbGVhbnVwKGd0KTsK
KwlpbnRlbF9lbmdpbmVzX3JlbGVhc2UoZ3QpOwogCXJldHVybiBlcnI7CiB9CiAKQEAgLTgzMiw2
ICs4NDEsNyBAQCBpbnQgaW50ZWxfZW5naW5lX2luaXRfY29tbW9uKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSkKIHZvaWQgaW50ZWxfZW5naW5lX2NsZWFudXBfY29tbW9uKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlHRU1fQlVHX09OKCFsaXN0X2VtcHR5KCZlbmdp
bmUtPmFjdGl2ZS5yZXF1ZXN0cykpOworCXRhc2tsZXRfa2lsbCgmZW5naW5lLT5leGVjbGlzdHMu
dGFza2xldCk7IC8qIGZsdXNoIHRoZSBjYWxsYmFjayAqLwogCiAJY2xlYW51cF9zdGF0dXNfcGFn
ZShlbmdpbmUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
bmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBl
cy5oCmluZGV4IGM1ZDEwNDdhNGJjNS4uNmJkY2EzZTdhZTlmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMzg5LDcgKzM4OSwxMCBAQCBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzIHsKIAogCXN0cnVjdCB7CiAJCXZvaWQgKCpwcmVwYXJlKShzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwotCQl2b2lkICgqcmVzZXQpKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKTsKKworCQl2b2lkICgqcmV3aW5kKShz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCk7CisJCXZvaWQgKCpj
YW5jZWwpKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7CisKIAkJdm9pZCAoKmZpbmlz
aCkoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAl9IHJlc2V0OwogCkBAIC00Mzks
MTUgKzQ0Miw3IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgewogCXZvaWQJCSgqc2NoZWR1bGUp
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBpOTE1
X3NjaGVkX2F0dHIgKmF0dHIpOwogCi0JLyoKLQkgKiBDYW5jZWwgYWxsIHJlcXVlc3RzIG9uIHRo
ZSBoYXJkd2FyZSwgb3IgcXVldWVkIGZvciBleGVjdXRpb24uCi0JICogVGhpcyBzaG91bGQgb25s
eSBjYW5jZWwgdGhlIHJlYWR5IHJlcXVlc3RzIHRoYXQgaGF2ZSBiZWVuCi0JICogc3VibWl0dGVk
IHRvIHRoZSBlbmdpbmUgKHZpYSB0aGUgZW5naW5lLT5zdWJtaXRfcmVxdWVzdCBjYWxsYmFjayku
Ci0JICogVGhpcyBpcyBjYWxsZWQgd2hlbiBtYXJraW5nIHRoZSBkZXZpY2UgYXMgd2VkZ2VkLgot
CSAqLwotCXZvaWQJCSgqY2FuY2VsX3JlcXVlc3RzKShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpOwotCi0Jdm9pZAkJKCpkZXN0cm95KShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpOworCXZvaWQJCSgqcmVsZWFzZSkoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsK
IAogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzIGV4ZWNsaXN0czsKIApkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2d0LmMKaW5kZXggNGMwNzgyNDc4MjVkLi5kNjJiMWYxOGJjNTYgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYwpAQCAtNCwxMSArNCwxMyBAQAogICovCiAKICNpbmNs
dWRlICJpOTE1X2Rydi5oIgorI2luY2x1ZGUgImludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJp
bnRlbF9ndC5oIgogI2luY2x1ZGUgImludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3Rf
cmVxdWVzdHMuaCIKICNpbmNsdWRlICJpbnRlbF9tb2NzLmgiCiAjaW5jbHVkZSAiaW50ZWxfcmM2
LmgiCisjaW5jbHVkZSAiaW50ZWxfcmVuZGVyc3RhdGUuaCIKICNpbmNsdWRlICJpbnRlbF9ycHMu
aCIKICNpbmNsdWRlICJpbnRlbF91bmNvcmUuaCIKICNpbmNsdWRlICJpbnRlbF9wbS5oIgpAQCAt
MzcyLDMyICszNzQsMjQ5IEBAIHN0YXRpYyBzdHJ1Y3QgaTkxNV9hZGRyZXNzX3NwYWNlICprZXJu
ZWxfdm0oc3RydWN0IGludGVsX2d0ICpndCkKIAkJcmV0dXJuIGk5MTVfdm1fZ2V0KCZndC0+Z2d0
dC0+dm0pOwogfQogCitzdGF0aWMgaW50IF9fZW5naW5lc19yZWNvcmRfZGVmYXVsdHMoc3RydWN0
IGludGVsX2d0ICpndCkKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0c1tJOTE1X05V
TV9FTkdJTkVTXSA9IHt9OworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVt
IGludGVsX2VuZ2luZV9pZCBpZDsKKwlpbnQgZXJyID0gMDsKKworCS8qCisJICogQXMgd2UgcmVz
ZXQgdGhlIGdwdSBkdXJpbmcgdmVyeSBlYXJseSBzYW5pdGlzYXRpb24sIHRoZSBjdXJyZW50CisJ
ICogcmVnaXN0ZXIgc3RhdGUgb24gdGhlIEdQVSBzaG91bGQgcmVmbGVjdCBpdHMgZGVmYXVsdHMg
dmFsdWVzLgorCSAqIFdlIGxvYWQgYSBjb250ZXh0IG9udG8gdGhlIGh3ICh3aXRoIHJlc3RvcmUt
aW5oaWJpdCksIHRoZW4gc3dpdGNoCisJICogb3ZlciB0byBhIHNlY29uZCBjb250ZXh0IHRvIHNh
dmUgdGhhdCBkZWZhdWx0IHJlZ2lzdGVyIHN0YXRlLiBXZQorCSAqIGNhbiB0aGVuIHByaW1lIGV2
ZXJ5IG5ldyBjb250ZXh0IHdpdGggdGhhdCBzdGF0ZSBzbyB0aGV5IGFsbCBzdGFydAorCSAqIGZy
b20gdGhlIHNhbWUgZGVmYXVsdCBIVyB2YWx1ZXMuCisJICovCisKKwlmb3JfZWFjaF9lbmdpbmUo
ZW5naW5lLCBndCwgaWQpIHsKKwkJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOworCQlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycTsKKworCQkvKiBXZSBtdXN0IGJlIGFibGUgdG8gc3dpdGNoIHRvIHNv
bWV0aGluZyEgKi8KKwkJR0VNX0JVR19PTighZW5naW5lLT5rZXJuZWxfY29udGV4dCk7CisJCWVu
Z2luZS0+c2VyaWFsKys7IC8qIGZvcmNlIHRoZSBrZXJuZWwgY29udGV4dCBzd2l0Y2ggKi8KKwor
CQljZSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGVuZ2luZSk7CisJCWlmIChJU19FUlIoY2UpKSB7
CisJCQllcnIgPSBQVFJfRVJSKGNlKTsKKwkJCWdvdG8gb3V0OworCQl9CisKKwkJcnEgPSBpbnRl
bF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KGNlKTsKKwkJaWYgKElTX0VSUihycSkpIHsKKwkJCWVy
ciA9IFBUUl9FUlIocnEpOworCQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQkJZ290byBvdXQ7
CisJCX0KKworCQllcnIgPSBpbnRlbF9lbmdpbmVfZW1pdF9jdHhfd2EocnEpOworCQlpZiAoZXJy
KQorCQkJZ290byBlcnJfcnE7CisKKwkJZXJyID0gaW50ZWxfcmVuZGVyc3RhdGVfZW1pdChycSk7
CisJCWlmIChlcnIpCisJCQlnb3RvIGVycl9ycTsKKworZXJyX3JxOgorCQlyZXF1ZXN0c1tpZF0g
PSBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKKwkJaTkxNV9yZXF1ZXN0X2FkZChycSk7CisJCWlmIChl
cnIpCisJCQlnb3RvIG91dDsKKwl9CisKKwkvKiBGbHVzaCB0aGUgZGVmYXVsdCBjb250ZXh0IGlt
YWdlIHRvIG1lbW9yeSwgYW5kIGVuYWJsZSBwb3dlcnNhdmluZy4gKi8KKwlpZiAoaW50ZWxfZ3Rf
d2FpdF9mb3JfaWRsZShndCwgSTkxNV9HRU1fSURMRV9USU1FT1VUKSA9PSAtRVRJTUUpIHsKKwkJ
ZXJyID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJZm9yIChpZCA9IDA7IGlkIDwgQVJSQVlf
U0laRShyZXF1ZXN0cyk7IGlkKyspIHsKKwkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJCXN0
cnVjdCBpOTE1X3ZtYSAqc3RhdGU7CisJCXZvaWQgKnZhZGRyOworCisJCXJxID0gcmVxdWVzdHNb
aWRdOworCQlpZiAoIXJxKQorCQkJY29udGludWU7CisKKwkJLyogV2Ugd2FudCB0byBiZSBhYmxl
IHRvIHVuYmluZCB0aGUgc3RhdGUgZnJvbSB0aGUgR0dUVCAqLworCQlHRU1fQlVHX09OKGludGVs
X2NvbnRleHRfaXNfcGlubmVkKHJxLT5jb250ZXh0KSk7CisKKwkJc3RhdGUgPSBycS0+Y29udGV4
dC0+c3RhdGU7CisJCWlmICghc3RhdGUpCisJCQljb250aW51ZTsKKworCQkvKgorCQkgKiBBcyB3
ZSB3aWxsIGhvbGQgYSByZWZlcmVuY2UgdG8gdGhlIGxvZ2ljYWwgc3RhdGUsIGl0IHdpbGwKKwkJ
ICogbm90IGJlIHRvcm4gZG93biB3aXRoIHRoZSBjb250ZXh0LCBhbmQgaW1wb3J0YW50bHkgdGhl
CisJCSAqIG9iamVjdCB3aWxsIGhvbGQgb250byBpdHMgdm1hIChtYWtpbmcgaXQgcG9zc2libGUg
Zm9yIGEKKwkJICogc3RyYXkgR1RUIHdyaXRlIHRvIGNvcnJ1cHQgb3VyIGRlZmF1bHRzKS4gVW5t
YXAgdGhlIHZtYQorCQkgKiBmcm9tIHRoZSBHVFQgdG8gcHJldmVudCBzdWNoIGFjY2lkZW50cyBh
bmQgcmVjbGFpbSB0aGUKKwkJICogc3BhY2UuCisJCSAqLworCQllcnIgPSBpOTE1X3ZtYV91bmJp
bmQoc3RhdGUpOworCQlpZiAoZXJyKQorCQkJZ290byBvdXQ7CisKKwkJaTkxNV9nZW1fb2JqZWN0
X2xvY2soc3RhdGUtPm9iaik7CisJCWVyciA9IGk5MTVfZ2VtX29iamVjdF9zZXRfdG9fY3B1X2Rv
bWFpbihzdGF0ZS0+b2JqLCBmYWxzZSk7CisJCWk5MTVfZ2VtX29iamVjdF91bmxvY2soc3RhdGUt
Pm9iaik7CisJCWlmIChlcnIpCisJCQlnb3RvIG91dDsKKworCQlpOTE1X2dlbV9vYmplY3Rfc2V0
X2NhY2hlX2NvaGVyZW5jeShzdGF0ZS0+b2JqLCBJOTE1X0NBQ0hFX0xMQyk7CisKKwkJLyogQ2hl
Y2sgd2UgY2FuIGFjcXVpcmUgdGhlIGltYWdlIG9mIHRoZSBjb250ZXh0IHN0YXRlICovCisJCXZh
ZGRyID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9tYXAoc3RhdGUtPm9iaiwgSTkxNV9NQVBfRk9SQ0Vf
V0IpOworCQlpZiAoSVNfRVJSKHZhZGRyKSkgeworCQkJZXJyID0gUFRSX0VSUih2YWRkcik7CisJ
CQlnb3RvIG91dDsKKwkJfQorCisJCXJxLT5lbmdpbmUtPmRlZmF1bHRfc3RhdGUgPSBpOTE1X2dl
bV9vYmplY3RfZ2V0KHN0YXRlLT5vYmopOworCQlpOTE1X2dlbV9vYmplY3RfdW5waW5fbWFwKHN0
YXRlLT5vYmopOworCX0KKworb3V0OgorCS8qCisJICogSWYgd2UgaGF2ZSB0byBhYmFuZG9uIG5v
dywgd2UgZXhwZWN0IHRoZSBlbmdpbmVzIHRvIGJlIGlkbGUKKwkgKiBhbmQgcmVhZHkgdG8gYmUg
dG9ybi1kb3duLiBUaGUgcXVpY2tlc3Qgd2F5IHdlIGNhbiBhY2NvbXBsaXNoCisJICogdGhpcyBp
cyBieSBkZWNsYXJpbmcgb3Vyc2VsdmVzIHdlZGdlZC4KKwkgKi8KKwlpZiAoZXJyKQorCQlpbnRl
bF9ndF9zZXRfd2VkZ2VkKGd0KTsKKworCWZvciAoaWQgPSAwOyBpZCA8IEFSUkFZX1NJWkUocmVx
dWVzdHMpOyBpZCsrKSB7CisJCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKKwkJc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnE7CisKKwkJcnEgPSByZXF1ZXN0c1tpZF07CisJCWlmICghcnEpCisJCQlj
b250aW51ZTsKKworCQljZSA9IHJxLT5jb250ZXh0OworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsK
KwkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCX0KKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMg
aW50IF9fZW5naW5lc192ZXJpZnlfd29ya2Fyb3VuZHMoc3RydWN0IGludGVsX2d0ICpndCkKK3sK
KwlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQg
aWQ7CisJaW50IGVyciA9IDA7CisKKwlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RF
QlVHX0dFTSkpCisJCXJldHVybiAwOworCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlk
KSB7CisJCWlmIChpbnRlbF9lbmdpbmVfdmVyaWZ5X3dvcmthcm91bmRzKGVuZ2luZSwgImxvYWQi
KSkKKwkJCWVyciA9IC1FSU87CisJfQorCisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIHZvaWQg
X19pbnRlbF9ndF9kaXNhYmxlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJaW50ZWxfZ3Rfc2V0
X3dlZGdlZF9vbl9pbml0KGd0KTsKKworCWludGVsX2d0X3N1c3BlbmRfcHJlcGFyZShndCk7CisJ
aW50ZWxfZ3Rfc3VzcGVuZF9sYXRlKGd0KTsKKworCUdFTV9CVUdfT04oaW50ZWxfZ3RfcG1faXNf
YXdha2UoZ3QpKTsKK30KKwogaW50IGludGVsX2d0X2luaXQoc3RydWN0IGludGVsX2d0ICpndCkK
IHsKIAlpbnQgZXJyOwogCi0JZXJyID0gaW50ZWxfZ3RfaW5pdF9zY3JhdGNoKGd0LCBJU19HRU4o
Z3QtPmk5MTUsIDIpID8gU1pfMjU2SyA6IFNaXzRLKTsKKwllcnIgPSBpOTE1X2luamVjdF9wcm9i
ZV9lcnJvcihndC0+aTkxNSwgLUVOT0RFVik7CiAJaWYgKGVycikKIAkJcmV0dXJuIGVycjsKIAor
CS8qCisJICogVGhpcyBpcyBqdXN0IGEgc2VjdXJpdHkgYmxhbmtldCB0byBwbGFjYXRlIGRyYWdv
bnMuCisJICogT24gc29tZSBzeXN0ZW1zLCB3ZSB2ZXJ5IHNwb3JhZGljYWxseSBvYnNlcnZlIHRo
YXQgdGhlIGZpcnN0IFRMQnMKKwkgKiB1c2VkIGJ5IHRoZSBDUyBtYXkgYmUgc3RhbGUsIGRlc3Bp
dGUgdXMgcG9raW5nIHRoZSBUTEIgcmVzZXQuIElmCisJICogd2UgaG9sZCB0aGUgZm9yY2V3YWtl
IGR1cmluZyBpbml0aWFsaXNhdGlvbiB0aGVzZSBwcm9ibGVtcworCSAqIGp1c3QgbWFnaWNhbGx5
IGdvIGF3YXkuCisJICovCisJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQoZ3QtPnVuY29yZSwg
Rk9SQ0VXQUtFX0FMTCk7CisKKwllcnIgPSBpbnRlbF9ndF9pbml0X3NjcmF0Y2goZ3QsIElTX0dF
TihndC0+aTkxNSwgMikgPyBTWl8yNTZLIDogU1pfNEspOworCWlmIChlcnIpCisJCWdvdG8gb3V0
X2Z3OworCiAJaW50ZWxfZ3RfcG1faW5pdChndCk7CiAKIAlndC0+dm0gPSBrZXJuZWxfdm0oZ3Qp
OwogCWlmICghZ3QtPnZtKSB7CiAJCWVyciA9IC1FTk9NRU07Ci0JCWdvdG8gZXJyX3NjcmF0Y2g7
CisJCWdvdG8gZXJyX3BtOwogCX0KIAotCXJldHVybiAwOworCWVyciA9IGludGVsX2VuZ2luZXNf
c2V0dXAoZ3QpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX3ZtOworCisJZXJyID0gaW50ZWxfZW5n
aW5lc19pbml0KGd0KTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9lbmdpbmVzOworCisJaW50ZWxf
dWNfaW5pdCgmZ3QtPnVjKTsKKworCWVyciA9IGludGVsX2d0X2luaXRfaHcoZ3QpOworCWlmIChl
cnIpCisJCWdvdG8gZXJyX3VjX2luaXQ7CisKKwkvKiBPbmx5IHdoZW4gdGhlIEhXIGlzIHJlLWlu
aXRpYWxpc2VkLCBjYW4gd2UgcmVwbGF5IHRoZSByZXF1ZXN0cyAqLworCWVyciA9IGludGVsX2d0
X3Jlc3VtZShndCk7CisJaWYgKGVycikKKwkJZ290byBlcnJfdWNfaW5pdDsKKworCWVyciA9IF9f
ZW5naW5lc19yZWNvcmRfZGVmYXVsdHMoZ3QpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX2d0Owor
CisJZXJyID0gX19lbmdpbmVzX3ZlcmlmeV93b3JrYXJvdW5kcyhndCk7CisJaWYgKGVycikKKwkJ
Z290byBlcnJfZ3Q7CiAKLWVycl9zY3JhdGNoOgorCWVyciA9IGk5MTVfaW5qZWN0X3Byb2JlX2Vy
cm9yKGd0LT5pOTE1LCAtRUlPKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9ndDsKKworCWdvdG8g
b3V0X2Z3OworZXJyX2d0OgorCV9faW50ZWxfZ3RfZGlzYWJsZShndCk7CitlcnJfdWNfaW5pdDoK
KwlpbnRlbF91Y19maW5pKCZndC0+dWMpOworZXJyX2VuZ2luZXM6CisJaW50ZWxfZW5naW5lc19y
ZWxlYXNlKGd0KTsKK2Vycl92bToKKwlpOTE1X3ZtX3B1dChmZXRjaF9hbmRfemVybygmZ3QtPnZt
KSk7CitlcnJfcG06CisJaW50ZWxfZ3RfcG1fZmluaShndCk7CiAJaW50ZWxfZ3RfZmluaV9zY3Jh
dGNoKGd0KTsKK291dF9mdzoKKwlpZiAoZXJyKQorCQlpbnRlbF9ndF9zZXRfd2VkZ2VkX29uX2lu
aXQoZ3QpOworCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KGd0LT51bmNvcmUsIEZPUkNFV0FL
RV9BTEwpOwogCXJldHVybiBlcnI7CiB9CiAKIHZvaWQgaW50ZWxfZ3RfZHJpdmVyX3JlbW92ZShz
dHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewotCUdFTV9CVUdfT04oZ3QtPmF3YWtlKTsKKwlfX2ludGVs
X2d0X2Rpc2FibGUoZ3QpOworCisJaW50ZWxfdWNfZmluaV9odygmZ3QtPnVjKTsKKwlpbnRlbF91
Y19maW5pKCZndC0+dWMpOworCisJaW50ZWxfZW5naW5lc19yZWxlYXNlKGd0KTsKIH0KIAogdm9p
ZCBpbnRlbF9ndF9kcml2ZXJfdW5yZWdpc3RlcihzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQpAQCAtNDIy
LDQgKzY0MSw1IEBAIHZvaWQgaW50ZWxfZ3RfZHJpdmVyX2xhdGVfcmVsZWFzZShzdHJ1Y3QgaW50
ZWxfZ3QgKmd0KQogCWludGVsX3VjX2RyaXZlcl9sYXRlX3JlbGVhc2UoJmd0LT51Yyk7CiAJaW50
ZWxfZ3RfZmluaV9yZXNldChndCk7CiAJaW50ZWxfZ3RfZmluaV90aW1lbGluZXMoZ3QpOworCWlu
dGVsX2VuZ2luZXNfZnJlZShndCk7CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmlu
ZGV4IDRiMGJlOTEyMWM5My4uM2ZmNDljNjllMmY2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYwpAQCAtMzExOCw3ICszMTE4LDcgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVz
ZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJX191bndp
bmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhlbmdpbmUpOwogfQogCi1zdGF0aWMgdm9pZCBleGVjbGlz
dHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCitz
dGF0aWMgdm9pZCBleGVjbGlzdHNfcmVzZXRfcmV3aW5kKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogewogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAKQEAgLTMx
MzYsNyArMzEzNiw3IEBAIHN0YXRpYyB2b2lkIG5vcF9zdWJtaXNzaW9uX3Rhc2tsZXQodW5zaWdu
ZWQgbG9uZyBkYXRhKQogCS8qIFRoZSBkcml2ZXIgaXMgd2VkZ2VkOyBkb24ndCBwcm9jZXNzIGFu
eSBtb3JlIGV2ZW50cy4gKi8KIH0KIAotc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NhbmNlbF9yZXF1
ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitzdGF0aWMgdm9pZCBleGVjbGlz
dHNfcmVzZXRfY2FuY2VsKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4
ZWNsaXN0czsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOwpAQCAtMzcyNSwxMiArMzcy
NSwxMiBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcGFyayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAllbmdpbmUtPnN1Ym1pdF9yZXF1ZXN0
ID0gZXhlY2xpc3RzX3N1Ym1pdF9yZXF1ZXN0OwotCWVuZ2luZS0+Y2FuY2VsX3JlcXVlc3RzID0g
ZXhlY2xpc3RzX2NhbmNlbF9yZXF1ZXN0czsKIAllbmdpbmUtPnNjaGVkdWxlID0gaTkxNV9zY2hl
ZHVsZTsKIAllbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0LmZ1bmMgPSBleGVjbGlzdHNfc3VibWlz
c2lvbl90YXNrbGV0OwogCiAJZW5naW5lLT5yZXNldC5wcmVwYXJlID0gZXhlY2xpc3RzX3Jlc2V0
X3ByZXBhcmU7Ci0JZW5naW5lLT5yZXNldC5yZXNldCA9IGV4ZWNsaXN0c19yZXNldDsKKwllbmdp
bmUtPnJlc2V0LnJld2luZCA9IGV4ZWNsaXN0c19yZXNldF9yZXdpbmQ7CisJZW5naW5lLT5yZXNl
dC5jYW5jZWwgPSBleGVjbGlzdHNfcmVzZXRfY2FuY2VsOwogCWVuZ2luZS0+cmVzZXQuZmluaXNo
ID0gZXhlY2xpc3RzX3Jlc2V0X2ZpbmlzaDsKIAogCWVuZ2luZS0+cGFyayA9IGV4ZWNsaXN0c19w
YXJrOwpAQCAtMzc0NywxMSArMzc0NywxMCBAQCB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVm
YXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJZW5naW5l
LT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfUkVMQVRJVkVfTU1JTzsKIH0KIAotc3RhdGljIHZv
aWQgZXhlY2xpc3RzX2Rlc3Ryb3koc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3Rh
dGljIHZvaWQgZXhlY2xpc3RzX3JlbGVhc2Uoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQogewogCWludGVsX2VuZ2luZV9jbGVhbnVwX2NvbW1vbihlbmdpbmUpOwogCWxyY19kZXN0cm95
X3dhX2N0eChlbmdpbmUpOwotCWtmcmVlKGVuZ2luZSk7CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC0z
NzU5LDEzICszNzU4LDkgQEAgbG9naWNhbF9yaW5nX2RlZmF1bHRfdmZ1bmNzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAkvKiBEZWZhdWx0IHZmdW5jcyB3aGljaCBjYW4gYmUg
b3ZlcnJpZGVuIGJ5IGVhY2ggZW5naW5lLiAqLwogCi0JZW5naW5lLT5kZXN0cm95ID0gZXhlY2xp
c3RzX2Rlc3Ryb3k7CisJZW5naW5lLT5yZWxlYXNlID0gZXhlY2xpc3RzX3JlbGVhc2U7CiAJZW5n
aW5lLT5yZXN1bWUgPSBleGVjbGlzdHNfcmVzdW1lOwogCi0JZW5naW5lLT5yZXNldC5wcmVwYXJl
ID0gZXhlY2xpc3RzX3Jlc2V0X3ByZXBhcmU7Ci0JZW5naW5lLT5yZXNldC5yZXNldCA9IGV4ZWNs
aXN0c19yZXNldDsKLQllbmdpbmUtPnJlc2V0LmZpbmlzaCA9IGV4ZWNsaXN0c19yZXNldF9maW5p
c2g7Ci0KIAllbmdpbmUtPmNvcHMgPSAmZXhlY2xpc3RzX2NvbnRleHRfb3BzOwogCWVuZ2luZS0+
cmVxdWVzdF9hbGxvYyA9IGV4ZWNsaXN0c19yZXF1ZXN0X2FsbG9jOwogCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCA5ZWNmMjQ0MzlmZGUuLmM2MGU2MzYxYTYzOCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC02NjYsNyArNjY2LDggQEAgc3Rh
dGljIHZvaWQgcmVzZXRfcHJlcGFyZV9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKQogCSAqIEdQVSBzdGF0ZSB1cG9uIHJlc3VtZSwgaS5lLiBmYWlsIHRvIHJlc3RhcnQgYWZ0
ZXIgYSByZXNldC4KIAkgKi8KIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldChlbmdpbmUtPnVu
Y29yZSwgRk9SQ0VXQUtFX0FMTCk7Ci0JZW5naW5lLT5yZXNldC5wcmVwYXJlKGVuZ2luZSk7CisJ
aWYgKGVuZ2luZS0+cmVzZXQucHJlcGFyZSkKKwkJZW5naW5lLT5yZXNldC5wcmVwYXJlKGVuZ2lu
ZSk7CiB9CiAKIHN0YXRpYyB2b2lkIHJldm9rZV9tbWFwcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQpA
QCAtNzQxLDcgKzc0Miw4IEBAIHN0YXRpYyBpbnQgZ3RfcmVzZXQoc3RydWN0IGludGVsX2d0ICpn
dCwgaW50ZWxfZW5naW5lX21hc2tfdCBzdGFsbGVkX21hc2spCiAKIHN0YXRpYyB2b2lkIHJlc2V0
X2ZpbmlzaF9lbmdpbmUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewotCWVuZ2lu
ZS0+cmVzZXQuZmluaXNoKGVuZ2luZSk7CisJaWYgKGVuZ2luZS0+cmVzZXQuZmluaXNoKQorCQll
bmdpbmUtPnJlc2V0LmZpbmlzaChlbmdpbmUpOwogCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0
KGVuZ2luZS0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKIAogCWludGVsX2VuZ2luZV9icmVhZGNy
dW1ic19pcnEoZW5naW5lKTsKQEAgLTgxOCw3ICs4MjAsOCBAQCBzdGF0aWMgdm9pZCBfX2ludGVs
X2d0X3NldF93ZWRnZWQoc3RydWN0IGludGVsX2d0ICpndCkKIAogCS8qIE1hcmsgYWxsIGV4ZWN1
dGluZyByZXF1ZXN0cyBhcyBza2lwcGVkICovCiAJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3Qs
IGlkKQotCQllbmdpbmUtPmNhbmNlbF9yZXF1ZXN0cyhlbmdpbmUpOworCQlpZiAoZW5naW5lLT5y
ZXNldC5jYW5jZWwpCisJCQllbmdpbmUtPnJlc2V0LmNhbmNlbChlbmdpbmUpOwogCiAJcmVzZXRf
ZmluaXNoKGd0LCBhd2FrZSk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmluZ19zdWJtaXNzaW9uLmMKaW5kZXggODIzNzBkZjE4YzY2Li4xYThjZWNmNGI0ZGMgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jCkBAIC03
NzQsNyArNzc0LDcgQEAgc3RhdGljIHZvaWQgcmVzZXRfcHJlcGFyZShzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJCQkgIGludGVsX3VuY29yZV9yZWFkX2Z3KHVuY29yZSwgUklOR19I
RUFEKGJhc2UpKSk7CiB9CiAKLXN0YXRpYyB2b2lkIHJlc2V0X3Jpbmcoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCitzdGF0aWMgdm9pZCByZXNldF9yZXdpbmQo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiB7CiAJc3RydWN0
IGk5MTVfcmVxdWVzdCAqcG9zLCAqcnE7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKQEAgLTkwMiw3
ICs5MDIsNyBAQCBzdGF0aWMgaW50IHJjc19yZXN1bWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCXJldHVybiB4Y3NfcmVzdW1lKGVuZ2luZSk7CiB9CiAKLXN0YXRpYyB2b2lkIGNh
bmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCitzdGF0aWMgdm9p
ZCByZXNldF9jYW5jZWwoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Q7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKQEAgLTE4MDcs
NyArMTgwNyw2IEBAIHN0YXRpYyBpbnQgZ2VuNl9yaW5nX2ZsdXNoKHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxLCB1MzIgbW9kZSkKIHN0YXRpYyB2b2lkIGk5eHhfc2V0X2RlZmF1bHRfc3VibWlzc2lv
bihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJZW5naW5lLT5zdWJtaXRfcmVx
dWVzdCA9IGk5eHhfc3VibWl0X3JlcXVlc3Q7Ci0JZW5naW5lLT5jYW5jZWxfcmVxdWVzdHMgPSBj
YW5jZWxfcmVxdWVzdHM7CiAKIAllbmdpbmUtPnBhcmsgPSBOVUxMOwogCWVuZ2luZS0+dW5wYXJr
ID0gTlVMTDsKQEAgLTE4MTksNyArMTgxOCw3IEBAIHN0YXRpYyB2b2lkIGdlbjZfYnNkX3NldF9k
ZWZhdWx0X3N1Ym1pc3Npb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVuZ2lu
ZS0+c3VibWl0X3JlcXVlc3QgPSBnZW42X2JzZF9zdWJtaXRfcmVxdWVzdDsKIH0KIAotc3RhdGlj
IHZvaWQgcmluZ19kZXN0cm95KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRp
YyB2b2lkIHJpbmdfcmVsZWFzZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZW5naW5lLT5pOTE1OwogCkBAIC0x
ODMzLDggKzE4MzIsNiBAQCBzdGF0aWMgdm9pZCByaW5nX2Rlc3Ryb3koc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogCiAJaW50ZWxfdGltZWxpbmVfdW5waW4oZW5naW5lLT5sZWdhY3ku
dGltZWxpbmUpOwogCWludGVsX3RpbWVsaW5lX3B1dChlbmdpbmUtPmxlZ2FjeS50aW1lbGluZSk7
Ci0KLQlrZnJlZShlbmdpbmUpOwogfQogCiBzdGF0aWMgdm9pZCBzZXR1cF9pcnEoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQpAQCAtMTg2NSwxMSArMTg2MiwxMiBAQCBzdGF0aWMgdm9p
ZCBzZXR1cF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJc2V0dXBf
aXJxKGVuZ2luZSk7CiAKLQllbmdpbmUtPmRlc3Ryb3kgPSByaW5nX2Rlc3Ryb3k7CisJZW5naW5l
LT5yZWxlYXNlID0gcmluZ19yZWxlYXNlOwogCiAJZW5naW5lLT5yZXN1bWUgPSB4Y3NfcmVzdW1l
OwogCWVuZ2luZS0+cmVzZXQucHJlcGFyZSA9IHJlc2V0X3ByZXBhcmU7Ci0JZW5naW5lLT5yZXNl
dC5yZXNldCA9IHJlc2V0X3Jpbmc7CisJZW5naW5lLT5yZXNldC5yZXdpbmQgPSByZXNldF9yZXdp
bmQ7CisJZW5naW5lLT5yZXNldC5jYW5jZWwgPSByZXNldF9jYW5jZWw7CiAJZW5naW5lLT5yZXNl
dC5maW5pc2ggPSByZXNldF9maW5pc2g7CiAKIAllbmdpbmUtPmNvcHMgPSAmcmluZ19jb250ZXh0
X29wczsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3RpbWVsaW5l
X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF90aW1lbGluZV90eXBlcy5o
CmluZGV4IDk4ZDllZTE2NjM3OS4uMzRkMjhkNzc3MWQxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF90aW1lbGluZV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX3RpbWVsaW5lX3R5cGVzLmgKQEAgLTE0LDEwICsxNCwxMCBAQAogCiAj
aW5jbHVkZSAiaTkxNV9hY3RpdmVfdHlwZXMuaCIKIAotc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7
CiBzdHJ1Y3QgaTkxNV92bWE7Ci1zdHJ1Y3QgaW50ZWxfdGltZWxpbmVfY2FjaGVsaW5lOwogc3Ry
dWN0IGk5MTVfc3luY21hcDsKK3N0cnVjdCBpbnRlbF9ndDsKK3N0cnVjdCBpbnRlbF90aW1lbGlu
ZV9jYWNoZWxpbmU7CiAKIHN0cnVjdCBpbnRlbF90aW1lbGluZSB7CiAJdTY0IGZlbmNlX2NvbnRl
eHQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwppbmRleCA4M2Y1NDlkMjAzYTAu
LjhiYjVhY2Y3MTk5ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19l
bmdpbmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCkBAIC0y
MDcsMTYgKzIwNywxMiBAQCBzdGF0aWMgdm9pZCBtb2NrX3Jlc2V0X3ByZXBhcmUoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogfQogCi1zdGF0aWMgdm9pZCBtb2NrX3Jlc2V0KHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQorc3RhdGljIHZvaWQg
bW9ja19yZXNldF9yZXdpbmQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0
YWxsZWQpCiB7CiAJR0VNX0JVR19PTihzdGFsbGVkKTsKIH0KIAotc3RhdGljIHZvaWQgbW9ja19y
ZXNldF9maW5pc2goc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotfQotCi1zdGF0
aWMgdm9pZCBtb2NrX2NhbmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCitzdGF0aWMgdm9pZCBtb2NrX3Jlc2V0X2NhbmNlbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiB7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdDsKIAl1bnNpZ25lZCBs
b25nIGZsYWdzOwpAQCAtMjM0LDYgKzIzMCwxMCBAQCBzdGF0aWMgdm9pZCBtb2NrX2NhbmNlbF9y
ZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJc3Bpbl91bmxvY2tfaXJx
cmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogfQogCitzdGF0aWMgdm9pZCBt
b2NrX3Jlc2V0X2ZpbmlzaChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7Cit9CisK
IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm1vY2tfZW5naW5lKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAogCQkJCSAgICBjb25zdCBjaGFyICpuYW1lLAogCQkJCSAgICBpbnQgaWQpCkBA
IC0yNjUsOSArMjY1LDkgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqbW9ja19lbmdpbmUoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJZW5naW5lLT5iYXNlLnN1Ym1pdF9yZXF1ZXN0
ID0gbW9ja19zdWJtaXRfcmVxdWVzdDsKIAogCWVuZ2luZS0+YmFzZS5yZXNldC5wcmVwYXJlID0g
bW9ja19yZXNldF9wcmVwYXJlOwotCWVuZ2luZS0+YmFzZS5yZXNldC5yZXNldCA9IG1vY2tfcmVz
ZXQ7CisJZW5naW5lLT5iYXNlLnJlc2V0LnJld2luZCA9IG1vY2tfcmVzZXRfcmV3aW5kOworCWVu
Z2luZS0+YmFzZS5yZXNldC5jYW5jZWwgPSBtb2NrX3Jlc2V0X2NhbmNlbDsKIAllbmdpbmUtPmJh
c2UucmVzZXQuZmluaXNoID0gbW9ja19yZXNldF9maW5pc2g7Ci0JZW5naW5lLT5iYXNlLmNhbmNl
bF9yZXF1ZXN0cyA9IG1vY2tfY2FuY2VsX3JlcXVlc3RzOwogCiAJaTkxNS0+Z3QuZW5naW5lW2lk
XSA9ICZlbmdpbmUtPmJhc2U7CiAJaTkxNS0+Z3QuZW5naW5lX2NsYXNzWzBdW2lkXSA9ICZlbmdp
bmUtPmJhc2U7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9n
dWNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1
Ym1pc3Npb24uYwppbmRleCAwODI2N2QyYzNjZmMuLjYzYWI2YTk1NjdlMCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCkBAIC02NTgs
NyArNjU4LDcgQEAgY2FuY2VsX3BvcnRfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9leGVj
bGlzdHMgKiBjb25zdCBleGVjbGlzdHMpCiAJCW1lbXNldChleGVjbGlzdHMtPmluZmxpZ2h0LCAw
LCBzaXplb2YoZXhlY2xpc3RzLT5pbmZsaWdodCkpOwogfQogCi1zdGF0aWMgdm9pZCBndWNfcmVz
ZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCitzdGF0aWMg
dm9pZCBndWNfcmVzZXRfcmV3aW5kKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9v
bCBzdGFsbGVkKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhl
Y2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwpA
QCAtNjgzLDcgKzY4Myw3IEBAIHN0YXRpYyB2b2lkIGd1Y19yZXNldChzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZl
bmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyB2b2lkIGd1Y19jYW5jZWxf
cmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3RhdGljIHZvaWQgZ3Vj
X3Jlc2V0X2NhbmNlbChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0
IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVj
bGlzdHM7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsICpybjsKQEAgLTExMDIsMTEgKzExMDIs
MTAgQEAgc3RhdGljIHZvaWQgZ3VjX3NldF9kZWZhdWx0X3N1Ym1pc3Npb24oc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQogCWVuZ2luZS0+cGFyayA9IGVuZ2luZS0+dW5wYXJrID0gTlVM
TDsKIAogCWVuZ2luZS0+cmVzZXQucHJlcGFyZSA9IGd1Y19yZXNldF9wcmVwYXJlOwotCWVuZ2lu
ZS0+cmVzZXQucmVzZXQgPSBndWNfcmVzZXQ7CisJZW5naW5lLT5yZXNldC5yZXdpbmQgPSBndWNf
cmVzZXRfcmV3aW5kOworCWVuZ2luZS0+cmVzZXQuY2FuY2VsID0gZ3VjX3Jlc2V0X2NhbmNlbDsK
IAllbmdpbmUtPnJlc2V0LmZpbmlzaCA9IGd1Y19yZXNldF9maW5pc2g7CiAKLQllbmdpbmUtPmNh
bmNlbF9yZXF1ZXN0cyA9IGd1Y19jYW5jZWxfcmVxdWVzdHM7Ci0KIAllbmdpbmUtPmZsYWdzICY9
IH5JOTE1X0VOR0lORV9TVVBQT1JUU19TVEFUUzsKIAllbmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5H
SU5FX05FRURTX0JSRUFEQ1JVTUJfVEFTS0xFVDsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kcnYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKaW5k
ZXggNjRmOGJhMzQ0OWVkLi43MzQwNjRlMzU1ZWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZHJ2LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwpA
QCAtNjE3LDcgKzYxNyw2IEBAIHN0YXRpYyBpbnQgaTkxNV9kcml2ZXJfbW1pb19wcm9iZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAgKi8KIHN0YXRpYyB2b2lkIGk5MTVfZHJp
dmVyX21taW9fcmVsZWFzZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0J
aW50ZWxfZW5naW5lc19jbGVhbnVwKCZkZXZfcHJpdi0+Z3QpOwogCWludGVsX3RlYXJkb3duX21j
aGJhcihkZXZfcHJpdik7CiAJaW50ZWxfdW5jb3JlX2ZpbmlfbW1pbygmZGV2X3ByaXYtPnVuY29y
ZSk7CiAJcGNpX2Rldl9wdXQoZGV2X3ByaXYtPmJyaWRnZV9kZXYpOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Z2VtLmMKaW5kZXggMDExYjM3NjM2OTdkLi42MDNjN2E0NGEzZmYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW0uYwpAQCAtNDQsMTkgKzQ0LDExIEBACiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2NsZmx1
c2guaCIKICNpbmNsdWRlICJnZW0vaTkxNV9nZW1fY29udGV4dC5oIgogI2luY2x1ZGUgImdlbS9p
OTE1X2dlbV9pb2N0bHMuaCIKLSNpbmNsdWRlICJnZW0vaTkxNV9nZW1fcG0uaCIKICNpbmNsdWRl
ICJndC9pbnRlbF9lbmdpbmVfdXNlci5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCi0jaW5j
bHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIKLSNpbmNsdWRlICJndC9pbnRlbF9ndF9yZXF1ZXN0cy5o
IgotI2luY2x1ZGUgImd0L2ludGVsX21vY3MuaCIKLSNpbmNsdWRlICJndC9pbnRlbF9yZXNldC5o
IgotI2luY2x1ZGUgImd0L2ludGVsX3JlbmRlcnN0YXRlLmgiCi0jaW5jbHVkZSAiZ3QvaW50ZWxf
cnBzLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfd29ya2Fyb3VuZHMuaCIKIAogI2luY2x1ZGUgImk5
MTVfZHJ2LmgiCi0jaW5jbHVkZSAiaTkxNV9zY2F0dGVybGlzdC5oIgogI2luY2x1ZGUgImk5MTVf
dHJhY2UuaCIKICNpbmNsdWRlICJpOTE1X3ZncHUuaCIKIApAQCAtMTAzOSwxNTIgKzEwMzEsNiBA
QCBpOTE1X2dlbV9tYWR2aXNlX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRh
dGEsCiAJcmV0dXJuIGVycjsKIH0KIAotc3RhdGljIGludCBfX2ludGVsX2VuZ2luZXNfcmVjb3Jk
X2RlZmF1bHRzKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCi17Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAq
cmVxdWVzdHNbSTkxNV9OVU1fRU5HSU5FU10gPSB7fTsKLQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmU7Ci0JZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7Ci0JaW50IGVyciA9IDA7Ci0KLQkv
KgotCSAqIEFzIHdlIHJlc2V0IHRoZSBncHUgZHVyaW5nIHZlcnkgZWFybHkgc2FuaXRpc2F0aW9u
LCB0aGUgY3VycmVudAotCSAqIHJlZ2lzdGVyIHN0YXRlIG9uIHRoZSBHUFUgc2hvdWxkIHJlZmxl
Y3QgaXRzIGRlZmF1bHRzIHZhbHVlcy4KLQkgKiBXZSBsb2FkIGEgY29udGV4dCBvbnRvIHRoZSBo
dyAod2l0aCByZXN0b3JlLWluaGliaXQpLCB0aGVuIHN3aXRjaAotCSAqIG92ZXIgdG8gYSBzZWNv
bmQgY29udGV4dCB0byBzYXZlIHRoYXQgZGVmYXVsdCByZWdpc3RlciBzdGF0ZS4gV2UKLQkgKiBj
YW4gdGhlbiBwcmltZSBldmVyeSBuZXcgY29udGV4dCB3aXRoIHRoYXQgc3RhdGUgc28gdGhleSBh
bGwgc3RhcnQKLQkgKiBmcm9tIHRoZSBzYW1lIGRlZmF1bHQgSFcgdmFsdWVzLgotCSAqLwotCi0J
Zm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgZ3QsIGlkKSB7Ci0JCXN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZTsKLQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0KLQkJLyogV2UgbXVzdCBiZSBhYmxl
IHRvIHN3aXRjaCB0byBzb21ldGhpbmchICovCi0JCUdFTV9CVUdfT04oIWVuZ2luZS0+a2VybmVs
X2NvbnRleHQpOwotCQllbmdpbmUtPnNlcmlhbCsrOyAvKiBmb3JjZSB0aGUga2VybmVsIGNvbnRl
eHQgc3dpdGNoICovCi0KLQkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShlbmdpbmUpOwotCQlp
ZiAoSVNfRVJSKGNlKSkgewotCQkJZXJyID0gUFRSX0VSUihjZSk7Ci0JCQlnb3RvIG91dDsKLQkJ
fQotCi0JCXJxID0gaW50ZWxfY29udGV4dF9jcmVhdGVfcmVxdWVzdChjZSk7Ci0JCWlmIChJU19F
UlIocnEpKSB7Ci0JCQllcnIgPSBQVFJfRVJSKHJxKTsKLQkJCWludGVsX2NvbnRleHRfcHV0KGNl
KTsKLQkJCWdvdG8gb3V0OwotCQl9Ci0KLQkJZXJyID0gaW50ZWxfZW5naW5lX2VtaXRfY3R4X3dh
KHJxKTsKLQkJaWYgKGVycikKLQkJCWdvdG8gZXJyX3JxOwotCi0JCWVyciA9IGludGVsX3JlbmRl
cnN0YXRlX2VtaXQocnEpOwotCQlpZiAoZXJyKQotCQkJZ290byBlcnJfcnE7Ci0KLWVycl9ycToK
LQkJcmVxdWVzdHNbaWRdID0gaTkxNV9yZXF1ZXN0X2dldChycSk7Ci0JCWk5MTVfcmVxdWVzdF9h
ZGQocnEpOwotCQlpZiAoZXJyKQotCQkJZ290byBvdXQ7Ci0JfQotCi0JLyogRmx1c2ggdGhlIGRl
ZmF1bHQgY29udGV4dCBpbWFnZSB0byBtZW1vcnksIGFuZCBlbmFibGUgcG93ZXJzYXZpbmcuICov
Ci0JaWYgKGludGVsX2d0X3dhaXRfZm9yX2lkbGUoZ3QsIEk5MTVfR0VNX0lETEVfVElNRU9VVCkg
PT0gLUVUSU1FKSB7Ci0JCWVyciA9IC1FSU87Ci0JCWdvdG8gb3V0OwotCX0KLQotCWZvciAoaWQg
PSAwOyBpZCA8IEFSUkFZX1NJWkUocmVxdWVzdHMpOyBpZCsrKSB7Ci0JCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxOwotCQlzdHJ1Y3QgaTkxNV92bWEgKnN0YXRlOwotCQl2b2lkICp2YWRkcjsKLQot
CQlycSA9IHJlcXVlc3RzW2lkXTsKLQkJaWYgKCFycSkKLQkJCWNvbnRpbnVlOwotCi0JCS8qIFdl
IHdhbnQgdG8gYmUgYWJsZSB0byB1bmJpbmQgdGhlIHN0YXRlIGZyb20gdGhlIEdHVFQgKi8KLQkJ
R0VNX0JVR19PTihpbnRlbF9jb250ZXh0X2lzX3Bpbm5lZChycS0+Y29udGV4dCkpOwotCi0JCXN0
YXRlID0gcnEtPmNvbnRleHQtPnN0YXRlOwotCQlpZiAoIXN0YXRlKQotCQkJY29udGludWU7Ci0K
LQkJLyoKLQkJICogQXMgd2Ugd2lsbCBob2xkIGEgcmVmZXJlbmNlIHRvIHRoZSBsb2dpY2FsIHN0
YXRlLCBpdCB3aWxsCi0JCSAqIG5vdCBiZSB0b3JuIGRvd24gd2l0aCB0aGUgY29udGV4dCwgYW5k
IGltcG9ydGFudGx5IHRoZQotCQkgKiBvYmplY3Qgd2lsbCBob2xkIG9udG8gaXRzIHZtYSAobWFr
aW5nIGl0IHBvc3NpYmxlIGZvciBhCi0JCSAqIHN0cmF5IEdUVCB3cml0ZSB0byBjb3JydXB0IG91
ciBkZWZhdWx0cykuIFVubWFwIHRoZSB2bWEKLQkJICogZnJvbSB0aGUgR1RUIHRvIHByZXZlbnQg
c3VjaCBhY2NpZGVudHMgYW5kIHJlY2xhaW0gdGhlCi0JCSAqIHNwYWNlLgotCQkgKi8KLQkJZXJy
ID0gaTkxNV92bWFfdW5iaW5kKHN0YXRlKTsKLQkJaWYgKGVycikKLQkJCWdvdG8gb3V0OwotCi0J
CWk5MTVfZ2VtX29iamVjdF9sb2NrKHN0YXRlLT5vYmopOwotCQllcnIgPSBpOTE1X2dlbV9vYmpl
Y3Rfc2V0X3RvX2NwdV9kb21haW4oc3RhdGUtPm9iaiwgZmFsc2UpOwotCQlpOTE1X2dlbV9vYmpl
Y3RfdW5sb2NrKHN0YXRlLT5vYmopOwotCQlpZiAoZXJyKQotCQkJZ290byBvdXQ7Ci0KLQkJaTkx
NV9nZW1fb2JqZWN0X3NldF9jYWNoZV9jb2hlcmVuY3koc3RhdGUtPm9iaiwgSTkxNV9DQUNIRV9M
TEMpOwotCi0JCS8qIENoZWNrIHdlIGNhbiBhY3F1aXJlIHRoZSBpbWFnZSBvZiB0aGUgY29udGV4
dCBzdGF0ZSAqLwotCQl2YWRkciA9IGk5MTVfZ2VtX29iamVjdF9waW5fbWFwKHN0YXRlLT5vYmos
IEk5MTVfTUFQX0ZPUkNFX1dCKTsKLQkJaWYgKElTX0VSUih2YWRkcikpIHsKLQkJCWVyciA9IFBU
Ul9FUlIodmFkZHIpOwotCQkJZ290byBvdXQ7Ci0JCX0KLQotCQlycS0+ZW5naW5lLT5kZWZhdWx0
X3N0YXRlID0gaTkxNV9nZW1fb2JqZWN0X2dldChzdGF0ZS0+b2JqKTsKLQkJaTkxNV9nZW1fb2Jq
ZWN0X3VucGluX21hcChzdGF0ZS0+b2JqKTsKLQl9Ci0KLW91dDoKLQkvKgotCSAqIElmIHdlIGhh
dmUgdG8gYWJhbmRvbiBub3csIHdlIGV4cGVjdCB0aGUgZW5naW5lcyB0byBiZSBpZGxlCi0JICog
YW5kIHJlYWR5IHRvIGJlIHRvcm4tZG93bi4gVGhlIHF1aWNrZXN0IHdheSB3ZSBjYW4gYWNjb21w
bGlzaAotCSAqIHRoaXMgaXMgYnkgZGVjbGFyaW5nIG91cnNlbHZlcyB3ZWRnZWQuCi0JICovCi0J
aWYgKGVycikKLQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7Ci0KLQlmb3IgKGlkID0gMDsgaWQg
PCBBUlJBWV9TSVpFKHJlcXVlc3RzKTsgaWQrKykgewotCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2U7Ci0JCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCi0JCXJxID0gcmVxdWVzdHNbaWRdOwot
CQlpZiAoIXJxKQotCQkJY29udGludWU7Ci0KLQkJY2UgPSBycS0+Y29udGV4dDsKLQkJaTkxNV9y
ZXF1ZXN0X3B1dChycSk7Ci0JCWludGVsX2NvbnRleHRfcHV0KGNlKTsKLQl9Ci0JcmV0dXJuIGVy
cjsKLX0KLQotc3RhdGljIGludCBpbnRlbF9lbmdpbmVzX3ZlcmlmeV93b3JrYXJvdW5kcyhzdHJ1
Y3QgaW50ZWxfZ3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKLQll
bnVtIGludGVsX2VuZ2luZV9pZCBpZDsKLQlpbnQgZXJyID0gMDsKLQotCWlmICghSVNfRU5BQkxF
RChDT05GSUdfRFJNX0k5MTVfREVCVUdfR0VNKSkKLQkJcmV0dXJuIDA7Ci0KLQlmb3JfZWFjaF9l
bmdpbmUoZW5naW5lLCBndCwgaWQpIHsKLQkJaWYgKGludGVsX2VuZ2luZV92ZXJpZnlfd29ya2Fy
b3VuZHMoZW5naW5lLCAibG9hZCIpKQotCQkJZXJyID0gLUVJTzsKLQl9Ci0KLQlyZXR1cm4gZXJy
OwotfQotCiBpbnQgaTkxNV9nZW1faW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiB7CiAJaW50IHJldDsKQEAgLTEyMDEsNDUgKzEwNDcsMTIgQEAgaW50IGk5MTVfZ2VtX2lu
aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCWludGVsX3VjX2ZldGNoX2Zp
cm13YXJlcygmZGV2X3ByaXYtPmd0LnVjKTsKIAlpbnRlbF93b3BjbV9pbml0KCZkZXZfcHJpdi0+
d29wY20pOwogCi0JLyogVGhpcyBpcyBqdXN0IGEgc2VjdXJpdHkgYmxhbmtldCB0byBwbGFjYXRl
IGRyYWdvbnMuCi0JICogT24gc29tZSBzeXN0ZW1zLCB3ZSB2ZXJ5IHNwb3JhZGljYWxseSBvYnNl
cnZlIHRoYXQgdGhlIGZpcnN0IFRMQnMKLQkgKiB1c2VkIGJ5IHRoZSBDUyBtYXkgYmUgc3RhbGUs
IGRlc3BpdGUgdXMgcG9raW5nIHRoZSBUTEIgcmVzZXQuIElmCi0JICogd2UgaG9sZCB0aGUgZm9y
Y2V3YWtlIGR1cmluZyBpbml0aWFsaXNhdGlvbiB0aGVzZSBwcm9ibGVtcwotCSAqIGp1c3QgbWFn
aWNhbGx5IGdvIGF3YXkuCi0JICovCi0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQoJmRldl9w
cml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCiAJcmV0ID0gaTkxNV9pbml0X2dndHQoZGV2
X3ByaXYpOwogCWlmIChyZXQpIHsKIAkJR0VNX0JVR19PTihyZXQgPT0gLUVJTyk7CiAJCWdvdG8g
ZXJyX3VubG9jazsKIAl9CiAKLQlpbnRlbF9ndF9pbml0KCZkZXZfcHJpdi0+Z3QpOwotCi0JcmV0
ID0gaW50ZWxfZW5naW5lc19zZXR1cCgmZGV2X3ByaXYtPmd0KTsKLQlpZiAocmV0KSB7Ci0JCUdF
TV9CVUdfT04ocmV0ID09IC1FSU8pOwotCQlnb3RvIGVycl9ndF9lYXJseTsKLQl9Ci0KLQlyZXQg
PSBpbnRlbF9lbmdpbmVzX2luaXQoJmRldl9wcml2LT5ndCk7Ci0JaWYgKHJldCkgewotCQlHRU1f
QlVHX09OKHJldCA9PSAtRUlPKTsKLQkJZ290byBlcnJfZW5naW5lczsKLQl9Ci0KLQlpbnRlbF91
Y19pbml0KCZkZXZfcHJpdi0+Z3QudWMpOwotCi0JcmV0ID0gaW50ZWxfZ3RfaW5pdF9odygmZGV2
X3ByaXYtPmd0KTsKLQlpZiAocmV0KQotCQlnb3RvIGVycl91Y19pbml0OwotCi0JLyogT25seSB3
aGVuIHRoZSBIVyBpcyByZS1pbml0aWFsaXNlZCwgY2FuIHdlIHJlcGxheSB0aGUgcmVxdWVzdHMg
Ki8KLQlyZXQgPSBpbnRlbF9ndF9yZXN1bWUoJmRldl9wcml2LT5ndCk7Ci0JaWYgKHJldCkKLQkJ
Z290byBlcnJfaW5pdF9odzsKLQogCS8qCiAJICogRGVzcGl0ZSBpdHMgbmFtZSBpbnRlbF9pbml0
X2Nsb2NrX2dhdGluZyBhcHBsaWVzIGJvdGggZGlzcGxheQogCSAqIGNsb2NrIGdhdGluZyB3b3Jr
YXJvdW5kczsgR1QgbW1pbyB3b3JrYXJvdW5kcyBhbmQgdGhlIG9jY2FzaW9uYWwKQEAgLTEyNTEs
MjMgKzEwNjQsOSBAQCBpbnQgaTkxNV9nZW1faW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiAJICovCiAJaW50ZWxfaW5pdF9jbG9ja19nYXRpbmcoZGV2X3ByaXYpOwogCi0J
cmV0ID0gaW50ZWxfZW5naW5lc192ZXJpZnlfd29ya2Fyb3VuZHMoJmRldl9wcml2LT5ndCk7Ci0J
aWYgKHJldCkKLQkJZ290byBlcnJfZ3RfbGF0ZTsKLQotCXJldCA9IF9faW50ZWxfZW5naW5lc19y
ZWNvcmRfZGVmYXVsdHMoJmRldl9wcml2LT5ndCk7Ci0JaWYgKHJldCkKLQkJZ290byBlcnJfZ3Rf
bGF0ZTsKLQotCXJldCA9IGk5MTVfaW5qZWN0X3Byb2JlX2Vycm9yKGRldl9wcml2LCAtRU5PREVW
KTsKKwlyZXQgPSBpbnRlbF9ndF9pbml0KCZkZXZfcHJpdi0+Z3QpOwogCWlmIChyZXQpCi0JCWdv
dG8gZXJyX2d0X2xhdGU7Ci0KLQlyZXQgPSBpOTE1X2luamVjdF9wcm9iZV9lcnJvcihkZXZfcHJp
diwgLUVJTyk7Ci0JaWYgKHJldCkKLQkJZ290byBlcnJfZ3RfbGF0ZTsKLQotCWludGVsX3VuY29y
ZV9mb3JjZXdha2VfcHV0KCZkZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKKwkJZ290
byBlcnJfdW5sb2NrOwogCiAJcmV0dXJuIDA7CiAKQEAgLTEyNzcsMjQgKzEwNzYsOCBAQCBpbnQg
aTkxNV9nZW1faW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJICogSFcg
YXMgaXJyZXZpc2libHkgd2VkZ2VkLCBidXQga2VlcCBlbm91Z2ggc3RhdGUgYXJvdW5kIHRoYXQg
dGhlCiAJICogZHJpdmVyIGRvZXNuJ3QgZXhwbG9kZSBkdXJpbmcgcnVudGltZS4KIAkgKi8KLWVy
cl9ndF9sYXRlOgotCWludGVsX2d0X3NldF93ZWRnZWRfb25faW5pdCgmZGV2X3ByaXYtPmd0KTsK
LQlpOTE1X2dlbV9zdXNwZW5kKGRldl9wcml2KTsKLQlpOTE1X2dlbV9zdXNwZW5kX2xhdGUoZGV2
X3ByaXYpOwotCi0JaTkxNV9nZW1fZHJhaW5fd29ya3F1ZXVlKGRldl9wcml2KTsKLWVycl9pbml0
X2h3OgotCWludGVsX3VjX2ZpbmlfaHcoJmRldl9wcml2LT5ndC51Yyk7Ci1lcnJfdWNfaW5pdDoK
LQlpZiAocmV0ICE9IC1FSU8pCi0JCWludGVsX3VjX2ZpbmkoJmRldl9wcml2LT5ndC51Yyk7Ci1l
cnJfZW5naW5lczoKLQlpZiAocmV0ICE9IC1FSU8pCi0JCWludGVsX2VuZ2luZXNfY2xlYW51cCgm
ZGV2X3ByaXYtPmd0KTsKLWVycl9ndF9lYXJseToKLQlpbnRlbF9ndF9kcml2ZXJfcmVsZWFzZSgm
ZGV2X3ByaXYtPmd0KTsKIGVycl91bmxvY2s6Ci0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQo
JmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOworCWk5MTVfZ2VtX2RyYWluX3dvcmtx
dWV1ZShkZXZfcHJpdik7CiAKIAlpZiAocmV0ICE9IC1FSU8pIHsKIAkJaW50ZWxfdWNfY2xlYW51
cF9maXJtd2FyZXMoJmRldl9wcml2LT5ndC51Yyk7CkBAIC0xMzQyLDE5ICsxMTI1LDE2IEBAIHZv
aWQgaTkxNV9nZW1fZHJpdmVyX3JlbW92ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiAKIAlpOTE1X2dlbV9zdXNwZW5kX2xhdGUoZGV2X3ByaXYpOwogCWludGVsX2d0X2RyaXZl
cl9yZW1vdmUoJmRldl9wcml2LT5ndCk7CisJZGV2X3ByaXYtPnVhYmlfZW5naW5lcyA9IFJCX1JP
T1Q7CiAKIAkvKiBGbHVzaCBhbnkgb3V0c3RhbmRpbmcgdW5waW5fd29yay4gKi8KIAlpOTE1X2dl
bV9kcmFpbl93b3JrcXVldWUoZGV2X3ByaXYpOwogCi0JaW50ZWxfdWNfZmluaV9odygmZGV2X3By
aXYtPmd0LnVjKTsKLQlpbnRlbF91Y19maW5pKCZkZXZfcHJpdi0+Z3QudWMpOwotCiAJaTkxNV9n
ZW1fZHJhaW5fZnJlZWRfb2JqZWN0cyhkZXZfcHJpdik7CiB9CiAKIHZvaWQgaTkxNV9nZW1fZHJp
dmVyX3JlbGVhc2Uoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotCWludGVs
X2VuZ2luZXNfY2xlYW51cCgmZGV2X3ByaXYtPmd0KTsKIAlpbnRlbF9ndF9kcml2ZXJfcmVsZWFz
ZSgmZGV2X3ByaXYtPmd0KTsKIAogCWludGVsX3dhX2xpc3RfZnJlZSgmZGV2X3ByaXYtPmd0X3dh
X2xpc3QpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVf
Z2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9nZW0uYwppbmRleCA2
NTdlMjNhOGRkMTEuLmIzN2ZjNTM5NzNjYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvc2VsZnRlc3RzL2k5MTVfZ2VtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRl
c3RzL2k5MTVfZ2VtLmMKQEAgLTksNiArOSw3IEBACiAjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0cy9p
Z3RfZ2VtX3V0aWxzLmgiCiAjaW5jbHVkZSAiZ2VtL3NlbGZ0ZXN0cy9tb2NrX2NvbnRleHQuaCIK
ICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgorI2luY2x1ZGUgImd0L2ludGVsX2d0X3BtLmgiCiAK
ICNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCiAKLS0gCjIuMjQuMAoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJ
bnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

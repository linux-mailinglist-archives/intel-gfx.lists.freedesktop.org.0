Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id DCEC3362665
	for <lists+intel-gfx@lfdr.de>; Fri, 16 Apr 2021 19:10:38 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3A7B56EC89;
	Fri, 16 Apr 2021 17:10:37 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 518716EC89
 for <intel-gfx@lists.freedesktop.org>; Fri, 16 Apr 2021 17:10:36 +0000 (UTC)
IronPort-SDR: XmzwEhxJFua7PEp2HAXxdMaFDXM343qiOg0uVtoqXnG5vMIom7rw6h72i/ips9C5sxPu6DJuwx
 7OzqniTPxScA==
X-IronPort-AV: E=McAfee;i="6200,9189,9956"; a="182197002"
X-IronPort-AV: E=Sophos;i="5.82,226,1613462400"; d="scan'208";a="182197002"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by orsmga101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Apr 2021 10:10:35 -0700
IronPort-SDR: PkJfWBIvMgN6Mpol2ya5J5SiVmntmR9OFsZzWtjwdhtFaTt/Dj6zQi+sFAyQO9Evk+MrwwcLPq
 A2okSdk9vPwg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.82,226,1613462400"; d="scan'208";a="451518108"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.171])
 by FMSMGA003.fm.intel.com with SMTP; 16 Apr 2021 10:10:33 -0700
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 16 Apr 2021 20:10:32 +0300
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 16 Apr 2021 20:10:09 +0300
Message-Id: <20210416171011.19012-7-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.3
In-Reply-To: <20210416171011.19012-1-ville.syrjala@linux.intel.com>
References: <20210416171011.19012-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 6/8] drm/i915: Polish for_each_dbuf_slice()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCk5v
dyB0aGF0IHdlIGhhdmUgdGhlIGRidWYgc2xpY2UgbWFzayBzdG9yZWQgaW4gdGhlIGRldmljZSBp
bmZvCmxldCdzIHVzZSBpdCBmb3IgZm9yX2VhY2hfZGJ1Zl9zbGljZV9pbl9tYXNrKigpLgoKV2l0
aCB0aGlzIHdlIGNhbCBhbHNvIHJpcCBvdXQgaW50ZWxfZGJ1Zl9zaXplKCkgYW5kCmludGVsX2Ri
dWZfbnVtX3NsaWNlcygpLgoKU2lnbmVkLW9mZi1ieTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5z
eXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2J3LmMgICAgICAgfCAxMSArKystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5oICB8ICA5ICsrLS0tCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3Bvd2VyLmMgICAgfCAxMyArKysrLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9wbS5jICAgICAgICAgICAgICAgfCAzNCArKysrKysrLS0tLS0tLS0tLS0tCiA0IGZpbGVz
IGNoYW5nZWQsIDI5IGluc2VydGlvbnMoKyksIDM4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYwppbmRleCAyMGRiYzM3NTlkMjcuLjk2OTE2OTc0MzYz
MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5jCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYwpAQCAtMzkwLDcgKzM5
MCw2IEBAIGludCBza2xfYndfY2FsY19taW5fY2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUpCiAJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7CiAJ
c3RydWN0IGludGVsX2NydGMgKmNydGM7CiAJaW50IG1heF9idyA9IDA7Ci0JaW50IHNsaWNlX2lk
OwogCWVudW0gcGlwZSBwaXBlOwogCWludCBpOwogCkBAIC00MTgsNiArNDE3LDcgQEAgaW50IHNr
bF9id19jYWxjX21pbl9jZGNsayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJ
CQkmY3J0Y19zdGF0ZS0+d20uc2tsLnBsYW5lX2RkYl91dltwbGFuZV9pZF07CiAJCQl1bnNpZ25l
ZCBpbnQgZGF0YV9yYXRlID0gY3J0Y19zdGF0ZS0+ZGF0YV9yYXRlW3BsYW5lX2lkXTsKIAkJCXVu
c2lnbmVkIGludCBkYnVmX21hc2sgPSAwOworCQkJZW51bSBkYnVmX3NsaWNlIHNsaWNlOwogCiAJ
CQlkYnVmX21hc2sgfD0gc2tsX2RkYl9kYnVmX3NsaWNlX21hc2soZGV2X3ByaXYsIHBsYW5lX2Fs
bG9jKTsKIAkJCWRidWZfbWFzayB8PSBza2xfZGRiX2RidWZfc2xpY2VfbWFzayhkZXZfcHJpdiwg
dXZfcGxhbmVfYWxsb2MpOwpAQCAtNDM1LDggKzQzNSw4IEBAIGludCBza2xfYndfY2FsY19taW5f
Y2RjbGsoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCQkgKiBwZXNzaW1pc3Rp
Yywgd2hpY2ggc2hvdWxkbid0IHBvc2UgYW55IHNpZ25pZmljYW50CiAJCQkgKiBwcm9ibGVtIGFu
eXdheS4KIAkJCSAqLwotCQkJZm9yX2VhY2hfZGJ1Zl9zbGljZV9pbl9tYXNrKHNsaWNlX2lkLCBk
YnVmX21hc2spCi0JCQkJY3J0Y19idy0+dXNlZF9id1tzbGljZV9pZF0gKz0gZGF0YV9yYXRlOwor
CQkJZm9yX2VhY2hfZGJ1Zl9zbGljZV9pbl9tYXNrKGRldl9wcml2LCBzbGljZSwgZGJ1Zl9tYXNr
KQorCQkJCWNydGNfYnctPnVzZWRfYndbc2xpY2VdICs9IGRhdGFfcmF0ZTsKIAkJfQogCX0KIApA
QCAtNDQ1LDEwICs0NDUsMTEgQEAgaW50IHNrbF9id19jYWxjX21pbl9jZGNsayhzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAogCWZvcl9lYWNoX3BpcGUoZGV2X3ByaXYsIHBpcGUp
IHsKIAkJc3RydWN0IGludGVsX2RidWZfYncgKmNydGNfYnc7CisJCWVudW0gZGJ1Zl9zbGljZSBz
bGljZTsKIAogCQljcnRjX2J3ID0gJm5ld19id19zdGF0ZS0+ZGJ1Zl9id1twaXBlXTsKIAotCQlm
b3JfZWFjaF9kYnVmX3NsaWNlKHNsaWNlX2lkKSB7CisJCWZvcl9lYWNoX2RidWZfc2xpY2UoZGV2
X3ByaXYsIHNsaWNlKSB7CiAJCQkvKgogCQkJICogQ3VycmVudCBleHBlcmltZW50YWwgb2JzZXJ2
YXRpb25zIHNob3cgdGhhdCBjb250cmFyeQogCQkJICogdG8gQlNwZWMgd2UgZ2V0IHVuZGVycnVu
cyBvbmNlIHdlIGV4Y2VlZCA2NCAqIENEQ0xLCkBAIC00NTcsNyArNDU4LDcgQEAgaW50IHNrbF9i
d19jYWxjX21pbl9jZGNsayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJCSAq
IGJ1bXBlZCB1cCBhbGwgdGhlIHRpbWUgd2UgY2FsY3VsYXRlIENEQ0xLIGFjY29yZGluZwogCQkJ
ICogdG8gdGhpcyBmb3JtdWxhIGZvciAgb3ZlcmFsbCBidyBjb25zdW1lZCBieSBzbGljZXMuCiAJ
CQkgKi8KLQkJCW1heF9idyArPSBjcnRjX2J3LT51c2VkX2J3W3NsaWNlX2lkXTsKKwkJCW1heF9i
dyArPSBjcnRjX2J3LT51c2VkX2J3W3NsaWNlXTsKIAkJfQogCX0KIApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAppbmRleCAxMDUyOTRlYzJkY2MuLmI2OGJj
ZDUwMjIwNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmgKQEAgLTE4OCwxMiArMTg4LDEzIEBAIGVudW0gcGxhbmVfaWQgewogCWZvciAoKF9fcCkgPSBQ
TEFORV9QUklNQVJZOyAoX19wKSA8IEk5MTVfTUFYX1BMQU5FUzsgKF9fcCkrKykgXAogCQlmb3Jf
ZWFjaF9pZigoX19jcnRjKS0+cGxhbmVfaWRzX21hc2sgJiBCSVQoX19wKSkKIAotI2RlZmluZSBm
b3JfZWFjaF9kYnVmX3NsaWNlX2luX21hc2soX19zbGljZSwgX19tYXNrKSBcCisjZGVmaW5lIGZv
cl9lYWNoX2RidWZfc2xpY2UoX19kZXZfcHJpdiwgX19zbGljZSkgXAogCWZvciAoKF9fc2xpY2Up
ID0gREJVRl9TMTsgKF9fc2xpY2UpIDwgSTkxNV9NQVhfREJVRl9TTElDRVM7IChfX3NsaWNlKSsr
KSBcCi0JCWZvcl9lYWNoX2lmKChCSVQoX19zbGljZSkpICYgKF9fbWFzaykpCisJCWZvcl9lYWNo
X2lmKElOVEVMX0lORk8oX19kZXZfcHJpdiktPmRidWYuc2xpY2VfbWFzayAmIEJJVChfX3NsaWNl
KSkKIAotI2RlZmluZSBmb3JfZWFjaF9kYnVmX3NsaWNlKF9fc2xpY2UpIFwKLQlmb3JfZWFjaF9k
YnVmX3NsaWNlX2luX21hc2soX19zbGljZSwgQklUKEk5MTVfTUFYX0RCVUZfU0xJQ0VTKSAtIDEp
CisjZGVmaW5lIGZvcl9lYWNoX2RidWZfc2xpY2VfaW5fbWFzayhfX2Rldl9wcml2LCBfX3NsaWNl
LCBfX21hc2spIFwKKwlmb3JfZWFjaF9kYnVmX3NsaWNlKChfX2Rldl9wcml2KSwgKF9fc2xpY2Up
KSBcCisJCWZvcl9lYWNoX2lmKChfX21hc2spICYgQklUKF9fc2xpY2UpKQogCiBlbnVtIHBvcnQg
ewogCVBPUlRfTk9ORSA9IC0xLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfcG93ZXIuYwppbmRleCA1MjhmYmVkZTBlZTcuLjBmYjQ4NjRhMTkxYSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bv
d2VyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bv
d2VyLmMKQEAgLTQ3NzIsMTMgKzQ3NzIsMTMgQEAgc3RhdGljIHZvaWQgZ2VuOV9kYnVmX3NsaWNl
X3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiB2b2lkIGdlbjlfZGJ1Zl9z
bGljZXNfdXBkYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgICAg
dTggcmVxX3NsaWNlcykKIHsKLQlpbnQgbnVtX3NsaWNlcyA9IGludGVsX2RidWZfbnVtX3NsaWNl
cyhkZXZfcHJpdik7CiAJc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyAqcG93ZXJfZG9tYWlucyA9
ICZkZXZfcHJpdi0+cG93ZXJfZG9tYWluczsKKwl1OCBzbGljZV9tYXNrID0gSU5URUxfSU5GTyhk
ZXZfcHJpdiktPmRidWYuc2xpY2VfbWFzazsKIAllbnVtIGRidWZfc2xpY2Ugc2xpY2U7CiAKLQlk
cm1fV0FSTigmZGV2X3ByaXYtPmRybSwgcmVxX3NsaWNlcyAmIH4oQklUKG51bV9zbGljZXMpIC0g
MSksCi0JCSAiSW52YWxpZCBzZXQgb2YgZGJ1ZiBzbGljZXMgKDB4JXgpIHJlcXVlc3RlZCAobnVt
IGRidWYgc2xpY2VzICVkKVxuIiwKLQkJIHJlcV9zbGljZXMsIG51bV9zbGljZXMpOworCWRybV9X
QVJOKCZkZXZfcHJpdi0+ZHJtLCByZXFfc2xpY2VzICYgfnNsaWNlX21hc2ssCisJCSAiSW52YWxp
ZCBzZXQgb2YgZGJ1ZiBzbGljZXMgKDB4JXgpIHJlcXVlc3RlZCAodG90YWwgZGJ1ZiBzbGljZXMg
MHgleClcbiIsCisJCSByZXFfc2xpY2VzLCBzbGljZV9tYXNrKTsKIAogCWRybV9kYmdfa21zKCZk
ZXZfcHJpdi0+ZHJtLCAiVXBkYXRpbmcgZGJ1ZiBzbGljZXMgdG8gMHgleFxuIiwKIAkJICAgIHJl
cV9zbGljZXMpOwpAQCAtNDc5Miw3ICs0NzkyLDcgQEAgdm9pZCBnZW45X2RidWZfc2xpY2VzX3Vw
ZGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJICovCiAJbXV0ZXhfbG9j
aygmcG93ZXJfZG9tYWlucy0+bG9jayk7CiAKLQlmb3IgKHNsaWNlID0gREJVRl9TMTsgc2xpY2Ug
PCBudW1fc2xpY2VzOyBzbGljZSsrKQorCWZvcl9lYWNoX2RidWZfc2xpY2UoZGV2X3ByaXYsIHNs
aWNlKQogCQlnZW45X2RidWZfc2xpY2Vfc2V0KGRldl9wcml2LCBzbGljZSwgcmVxX3NsaWNlcyAm
IEJJVChzbGljZSkpOwogCiAJZGV2X3ByaXYtPmRidWYuZW5hYmxlZF9zbGljZXMgPSByZXFfc2xp
Y2VzOwpAQCAtNDgyMCwxMCArNDgyMCw5IEBAIHN0YXRpYyB2b2lkIGdlbjlfZGJ1Zl9kaXNhYmxl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogc3RhdGljIHZvaWQgZ2VuMTJf
ZGJ1Zl9zbGljZXNfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsK
LQlpbnQgbnVtX3NsaWNlcyA9IGludGVsX2RidWZfbnVtX3NsaWNlcyhkZXZfcHJpdik7CiAJZW51
bSBkYnVmX3NsaWNlIHNsaWNlOwogCi0JZm9yIChzbGljZSA9IERCVUZfUzE7IHNsaWNlIDwgKERC
VUZfUzEgKyBudW1fc2xpY2VzKTsgc2xpY2UrKykKKwlmb3JfZWFjaF9kYnVmX3NsaWNlKGRldl9w
cml2LCBzbGljZSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBEQlVGX0NUTF9TKHNsaWNlKSwK
IAkJCSAgICAgREJVRl9UUkFDS0VSX1NUQVRFX1NFUlZJQ0VfTUFTSywKIAkJCSAgICAgREJVRl9U
UkFDS0VSX1NUQVRFX1NFUlZJQ0UoOCkpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKaW5kZXggMzhl
MmJhNDViZmQ4Li4xNTVmNDFlZDlkZWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtMzYz
NiwxNiArMzYzNiwxNiBAQCBib29sIGlsa19kaXNhYmxlX2xwX3dtKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIAogdTggaW50ZWxfZW5hYmxlZF9kYnVmX3NsaWNlc19tYXNrKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlpbnQgaTsKLQlpbnQgbnVtX3Ns
aWNlcyA9IGludGVsX2RidWZfbnVtX3NsaWNlcyhkZXZfcHJpdik7Ci0JdTggZW5hYmxlZF9zbGlj
ZXNfbWFzayA9IDA7CisJdTggZW5hYmxlZF9zbGljZXMgPSAwOworCWVudW0gZGJ1Zl9zbGljZSBz
bGljZTsKIAotCWZvciAoaSA9IDA7IGkgPCBudW1fc2xpY2VzOyBpKyspIHsKLQkJaWYgKGludGVs
X3VuY29yZV9yZWFkKCZkZXZfcHJpdi0+dW5jb3JlLCBEQlVGX0NUTF9TKGkpKSAmIERCVUZfUE9X
RVJfU1RBVEUpCi0JCQllbmFibGVkX3NsaWNlc19tYXNrIHw9IEJJVChpKTsKKwlmb3JfZWFjaF9k
YnVmX3NsaWNlKGRldl9wcml2LCBzbGljZSkgeworCQlpZiAoaW50ZWxfdW5jb3JlX3JlYWQoJmRl
dl9wcml2LT51bmNvcmUsCisJCQkJICAgICAgREJVRl9DVExfUyhzbGljZSkpICYgREJVRl9QT1dF
Ul9TVEFURSkKKwkJCWVuYWJsZWRfc2xpY2VzIHw9IEJJVChzbGljZSk7CiAJfQogCi0JcmV0dXJu
IGVuYWJsZWRfc2xpY2VzX21hc2s7CisJcmV0dXJuIGVuYWJsZWRfc2xpY2VzOwogfQogCiAvKgpA
QCAtNDAyOCwyMCArNDAyOCwxMCBAQCBzdGF0aWMgaW50IGludGVsX2NvbXB1dGVfc2Fndl9tYXNr
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCXJldHVybiAwOwogfQogCi1zdGF0
aWMgaW50IGludGVsX2RidWZfc2l6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
Ci17Ci0JcmV0dXJuIElOVEVMX0lORk8oZGV2X3ByaXYpLT5kYnVmLnNpemU7Ci19Ci0KLWludCBp
bnRlbF9kYnVmX251bV9zbGljZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQot
ewotCXJldHVybiBod2VpZ2h0OChJTlRFTF9JTkZPKGRldl9wcml2KS0+ZGJ1Zi5zbGljZV9tYXNr
KTsKLX0KLQogc3RhdGljIGludCBpbnRlbF9kYnVmX3NsaWNlX3NpemUoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KQogewotCXJldHVybiBpbnRlbF9kYnVmX3NpemUoZGV2X3ByaXYp
IC8KLQkJaW50ZWxfZGJ1Zl9udW1fc2xpY2VzKGRldl9wcml2KTsKKwlyZXR1cm4gSU5URUxfSU5G
TyhkZXZfcHJpdiktPmRidWYuc2l6ZSAvCisJCWh3ZWlnaHQ4KElOVEVMX0lORk8oZGV2X3ByaXYp
LT5kYnVmLnNsaWNlX21hc2spOwogfQogCiBzdGF0aWMgdm9pZApAQCAtNDA2MCw3ICs0MDUwLDcg
QEAgc2tsX2RkYl9lbnRyeV9mb3Jfc2xpY2VzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwgdTggc2xpY2VfbWFzaywKIAlkZGItPmVuZCA9IGZscyhzbGljZV9tYXNrKSAqIHNsaWNl
X3NpemU7CiAKIAlXQVJOX09OKGRkYi0+c3RhcnQgPj0gZGRiLT5lbmQpOwotCVdBUk5fT04oZGRi
LT5lbmQgPiBpbnRlbF9kYnVmX3NpemUoZGV2X3ByaXYpKTsKKwlXQVJOX09OKGRkYi0+ZW5kID4g
SU5URUxfSU5GTyhkZXZfcHJpdiktPmRidWYuc2l6ZSk7CiB9CiAKIHUzMiBza2xfZGRiX2RidWZf
c2xpY2VfbWFzayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCkBAIC01ODIwLDEw
ICs1ODEwLDEwIEBAIHNrbF9jb21wdXRlX2RkYihzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSkKIAkJCXJldHVybiByZXQ7CiAKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCi0J
CQkgICAgIkVuYWJsZWQgZGJ1ZiBzbGljZXMgMHgleCAtPiAweCV4IChvdXQgb2YgJWQgZGJ1ZiBz
bGljZXMpXG4iLAorCQkJICAgICJFbmFibGVkIGRidWYgc2xpY2VzIDB4JXggLT4gMHgleCAodG90
YWwgZGJ1ZiBzbGljZXMgMHgleClcbiIsCiAJCQkgICAgb2xkX2RidWZfc3RhdGUtPmVuYWJsZWRf
c2xpY2VzLAogCQkJICAgIG5ld19kYnVmX3N0YXRlLT5lbmFibGVkX3NsaWNlcywKLQkJCSAgICBp
bnRlbF9kYnVmX251bV9zbGljZXMoZGV2X3ByaXYpKTsKKwkJCSAgICBJTlRFTF9JTkZPKGRldl9w
cml2KS0+ZGJ1Zi5zbGljZV9tYXNrKTsKIAl9CiAKIAlmb3JfZWFjaF9uZXdfaW50ZWxfY3J0Y19p
bl9zdGF0ZShzdGF0ZSwgY3J0YywgbmV3X2NydGNfc3RhdGUsIGkpIHsKLS0gCjIuMjYuMwoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

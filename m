Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AC9362A4FE1
	for <lists+intel-gfx@lfdr.de>; Tue,  3 Nov 2020 20:18:59 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 136C16E32A;
	Tue,  3 Nov 2020 19:18:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5E83E6E32A
 for <intel-gfx@lists.freedesktop.org>; Tue,  3 Nov 2020 19:18:54 +0000 (UTC)
IronPort-SDR: mc8d34kjkb2HH7XYw/BQMIirzWtKtW8rdvlbrxuwdedtlYE0dvOXnMSPqSqVbbzzSV0LRY1ObX
 5kY2CLsTd8ZA==
X-IronPort-AV: E=McAfee;i="6000,8403,9794"; a="148964701"
X-IronPort-AV: E=Sophos;i="5.77,448,1596524400"; d="scan'208";a="148964701"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
 by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 03 Nov 2020 11:18:53 -0800
IronPort-SDR: C2MpMp3zBvUxYaESKVx8O4KkizrmCTCMhTlck9TbIU6iki1WHfJj2f+BJQ8eyXo/D02ow3Uj/f
 4IMPvS9faFrg==
X-IronPort-AV: E=Sophos;i="5.77,448,1596524400"; d="scan'208";a="470913896"
Received: from helsinki.fi.intel.com ([10.237.66.162])
 by orsmga004-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 03 Nov 2020 11:18:51 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  3 Nov 2020 21:18:37 +0200
Message-Id: <20201103191838.192386-1-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.25.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 1/2] drm/i915/display: Support PSR Multiple
 Transcoders
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQgaXMgYSBwcmVsaW1pbmFyeSB3b3JrIGZvciBzdXBwb3J0aW5nIG11bHRpcGxlIEVEUCBQU1Ig
YW5kCkRQIFBhbmVsUmVwbGF5LiBBbmQgaXQgcmVmYWN0b3JzIHNpbmdsZXRvbiBQU1IgdG8gTXVs
dGkgVHJhbnNjb2RlcgpzdXBwb3J0YWJsZSBQU1IuCkFuZCB0aGlzIG1vdmVzIGFuZCByZW5hbWVz
IHRoZSBpOTE1X3BzciBzdHJ1Y3R1cmUgb2YgZHJtX2k5MTVfcHJpdmF0ZSdzIHRvCmludGVsX2Rw
J3MgaW50ZWxfcHNyIHN0cnVjdHVyZS4KSXQgYWxzbyBjYXVzZXMgY2hhbmdlcyBpbiBQU1IgaW50
ZXJydXB0IGhhbmRsaW5nIHJvdXRpbmUgZm9yIHN1cHBvcnRpbmcKbXVsdGlwbGUgdHJhbnNjb2Rl
cnMuIEJ1dCBpdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIHNjZW5hcmlvIGFuZCB0aW1pbmcgb2YKZW5h
YmxpbmcgYW5kIGRpc2FibGluZyBQU1IuCgp2MjogRml4IGluZGVudGF0aW9uIGFuZCBhZGQgY29t
bWVudHMKClNpZ25lZC1vZmYtYnk6IEd3YW4tZ3llb25nIE11biA8Z3dhbi1neWVvbmcubXVuQGlu
dGVsLmNvbT4KQ2M6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291emFAaW50ZWwuY29t
PgpDYzogSnVoYS1QZWtrYSBIZWlra2lsYSA8anVoYXBla2thLmhlaWtraWxhQGdtYWlsLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCAgIDUg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgIHwgICA2ICst
CiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYyAgfCAxMTEgKysr
LQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgIDM5ICsr
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAgfCAgMjEgKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMgICAgICB8IDYxNCArKysr
KysrKystLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgg
ICAgICB8ICAxNiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUu
YyAgIHwgICA2ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAg
ICAgfCAgMzkgLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgICAgICAgICAgICAg
ICB8ICA0NyArLQogMTAgZmlsZXMgY2hhbmdlZCwgNTA0IGluc2VydGlvbnMoKyksIDQwMCBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwppbmRleCAx
OWIxNjUxN2E1MDIuLjk4Mzc4MWNlMzY4MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5jCkBAIC00MTI3LDcgKzQxMjcsMTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRp
X3VwZGF0ZV9waXBlX2RwKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCiAJaW50
ZWxfZGRpX3NldF9kcF9tc2EoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAKKwkvL1RPRE86IG1v
dmUgUFNSIHJlbGF0ZWQgZnVuY3Rpb25zIGludG8gaW50ZWxfcHNyX3VwZGF0ZSgpCisJaW50ZWxf
cHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKGludGVsX2RwLCBjcnRjX3N0YXRlKTsKIAlp
bnRlbF9wc3JfdXBkYXRlKGludGVsX2RwLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKKwogCWlu
dGVsX2RwX3NldF9pbmZvZnJhbWVzKGVuY29kZXIsIHRydWUsIGNydGNfc3RhdGUsIGNvbm5fc3Rh
dGUpOwogCWludGVsX2VkcF9kcnJzX3VwZGF0ZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7CiAKQEAg
LTUyNzUsNiArNTI3OCw4IEBAIHZvaWQgaW50ZWxfZGRpX2luaXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LCBlbnVtIHBvcnQgcG9ydCkKIAkJCWdvdG8gZXJyOwogCiAJCWRpZ19w
b3J0LT5ocGRfcHVsc2UgPSBpbnRlbF9kcF9ocGRfcHVsc2U7CisKKwkJaW50ZWxfcHNyX2luaXQo
JmRpZ19wb3J0LT5kcCk7CiAJfQogCiAJLyogSW4gdGhlb3J5IHdlIGRvbid0IG5lZWQgdGhlIGVu
Y29kZXItPnR5cGUgY2hlY2ssIGJ1dCBsZWF2ZSBpdCBqdXN0IGluCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmluZGV4IGNkZGJkYTUzMDNmZi4uYmU1MjM4
ZTVkNTg3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXku
YwpAQCAtMTU1MDYsOCArMTU1MDYsNiBAQCBzdGF0aWMgdm9pZCBjb21taXRfcGlwZV9jb25maWco
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAKIAkJaWYgKG5ld19jcnRjX3N0YXRl
LT51cGRhdGVfcGlwZSkKIAkJCWludGVsX3BpcGVfZmFzdHNldChvbGRfY3J0Y19zdGF0ZSwgbmV3
X2NydGNfc3RhdGUpOwotCi0JCWludGVsX3BzcjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bChu
ZXdfY3J0Y19zdGF0ZSk7CiAJfQogCiAJaWYgKGRldl9wcml2LT5kaXNwbGF5LmF0b21pY191cGRh
dGVfd2F0ZXJtYXJrcykKQEAgLTE3NDM1LDggKzE3NDMzLDYgQEAgc3RhdGljIHZvaWQgaW50ZWxf
c2V0dXBfb3V0cHV0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWludGVs
X2R2b19pbml0KGRldl9wcml2KTsKIAl9CiAKLQlpbnRlbF9wc3JfaW5pdChkZXZfcHJpdik7Ci0K
IAlmb3JfZWFjaF9pbnRlbF9lbmNvZGVyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CiAJCWVu
Y29kZXItPmJhc2UucG9zc2libGVfY3J0Y3MgPQogCQkJaW50ZWxfZW5jb2Rlcl9wb3NzaWJsZV9j
cnRjcyhlbmNvZGVyKTsKQEAgLTE4MzczLDcgKzE4MzY5LDcgQEAgaW50IGludGVsX21vZGVzZXRf
aW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAogCWludGVsX2luaXRfaXBjKGk5
MTUpOwogCi0JaW50ZWxfcHNyX3NldF9mb3JjZV9tb2RlX2NoYW5nZWQoaTkxNS0+cHNyLmRwKTsK
KwlpbnRlbF9wc3Jfc2V0X2ZvcmNlX21vZGVfY2hhbmdlZChpOTE1KTsKIAogCXJldHVybiAwOwog
fQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9k
ZWJ1Z2ZzLmMKaW5kZXggY2ZiNGMxNDc0OTgyLi44NDAyZTZhYzlmNzYgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9kZWJ1Z2ZzLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X2RlYnVnZnMuYwpAQCAt
MjQ4LDE4ICsyNDgsMTcgQEAgc3RhdGljIGludCBpOTE1X3Bzcl9zaW5rX3N0YXR1c19zaG93KHN0
cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJInNpbmsgaW50ZXJuYWwgZXJyb3IiLAog
CX07CiAJc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciA9IG0tPnByaXZhdGU7Ci0Jc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjb25uZWN0b3ItPmRldik7
CiAJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9CiAJCWludGVsX2F0dGFjaGVkX2RwKHRvX2lu
dGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpKTsKIAlpbnQgcmV0OwogCi0JaWYgKCFDQU5fUFNSKGRl
dl9wcml2KSkgewotCQlzZXFfcHV0cyhtLCAiUFNSIFVuc3VwcG9ydGVkXG4iKTsKKwlpZiAoY29u
bmVjdG9yLT5zdGF0dXMgIT0gY29ubmVjdG9yX3N0YXR1c19jb25uZWN0ZWQpCiAJCXJldHVybiAt
RU5PREVWOwotCX0KIAotCWlmIChjb25uZWN0b3ItPnN0YXR1cyAhPSBjb25uZWN0b3Jfc3RhdHVz
X2Nvbm5lY3RlZCkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKSB7CisJCXNlcV9wdXRzKG0sICJQ
U1IgVW5zdXBwb3J0ZWRcbiIpOwogCQlyZXR1cm4gLUVOT0RFVjsKKwl9CiAKIAlyZXQgPSBkcm1f
ZHBfZHBjZF9yZWFkYigmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX1NUQVRVUywgJnZhbCk7CiAKQEAg
LTI3OSwxMiArMjc4LDEzIEBAIHN0YXRpYyBpbnQgaTkxNV9wc3Jfc2lua19zdGF0dXNfc2hvdyhz
dHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiBERUZJTkVfU0hPV19BVFRSSUJVVEUoaTkx
NV9wc3Jfc2lua19zdGF0dXMpOwogCiBzdGF0aWMgdm9pZAotcHNyX3NvdXJjZV9zdGF0dXMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCitwc3Jf
c291cmNlX3N0YXR1cyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBzdHJ1Y3Qgc2VxX2ZpbGUg
Km0pCiB7CiAJdTMyIHZhbCwgc3RhdHVzX3ZhbDsKIAljb25zdCBjaGFyICpzdGF0dXMgPSAidW5r
bm93biI7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShp
bnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwlpZiAoaW50
ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKIAkJc3RhdGljIGNvbnN0IGNoYXIgKiBjb25zdCBs
aXZlX3N0YXR1c1tdID0gewogCQkJIklETEUiLAogCQkJIkNBUFRVUkUiLApAQCAtMjk5LDcgKzI5
OSw3IEBAIHBzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwgc3RydWN0IHNlcV9maWxlICptKQogCQkJIlRHX09OIgogCQl9OwogCQl2YWwgPSBpbnRlbF9k
ZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSMl9TVEFUVVMoZGV2X3ByaXYtPnBzci50
cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5z
Y29kZXIpKTsKIAkJc3RhdHVzX3ZhbCA9ICh2YWwgJiBFRFBfUFNSMl9TVEFUVVNfU1RBVEVfTUFT
SykgPj4KIAkJCSAgICAgIEVEUF9QU1IyX1NUQVRVU19TVEFURV9TSElGVDsKIAkJaWYgKHN0YXR1
c192YWwgPCBBUlJBWV9TSVpFKGxpdmVfc3RhdHVzKSkKQEAgLTMxNiw3ICszMTYsNyBAQCBwc3Jf
c291cmNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHN0cnVjdCBz
ZXFfZmlsZSAqbSkKIAkJCSJTUkRFTlRfT04iLAogCQl9OwogCQl2YWwgPSBpbnRlbF9kZV9yZWFk
KGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29k
ZXIpKTsKKwkJCQkgICAgRURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7
CiAJCXN0YXR1c192YWwgPSAodmFsICYgRURQX1BTUl9TVEFUVVNfU1RBVEVfTUFTSykgPj4KIAkJ
CSAgICAgIEVEUF9QU1JfU1RBVFVTX1NUQVRFX1NISUZUOwogCQlpZiAoc3RhdHVzX3ZhbCA8IEFS
UkFZX1NJWkUobGl2ZV9zdGF0dXMpKQpAQCAtMzI2LDIxICszMjYsMTggQEAgcHNyX3NvdXJjZV9z
dGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1Y3Qgc2VxX2ZpbGUg
Km0pCiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBzdGF0dXM6ICVzIFsweCUwOHhdXG4iLCBz
dGF0dXMsIHZhbCk7CiB9CiAKLXN0YXRpYyBpbnQgaTkxNV9lZHBfcHNyX3N0YXR1cyhzdHJ1Y3Qg
c2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCitzdGF0aWMgaW50IGludGVsX3Bzcl9zdGF0dXMoc3Ry
dWN0IHNlcV9maWxlICptLCBzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKLQlz
dHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9w
c3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwogCWNv
bnN0IGNoYXIgKnN0YXR1czsKIAlib29sIGVuYWJsZWQ7CiAJdTMyIHZhbDsKIAotCWlmICghSEFT
X1BTUihkZXZfcHJpdikpCi0JCXJldHVybiAtRU5PREVWOwotCiAJc2VxX3ByaW50ZihtLCAiU2lu
ayBzdXBwb3J0OiAlcyIsIHllc25vKHBzci0+c2lua19zdXBwb3J0KSk7Ci0JaWYgKHBzci0+ZHAp
Ci0JCXNlcV9wcmludGYobSwgIiBbMHglMDJ4XSIsIHBzci0+ZHAtPnBzcl9kcGNkWzBdKTsKKwlp
ZiAocHNyLT5zaW5rX3N1cHBvcnQpCisJCXNlcV9wcmludGYobSwgIiBbMHglMDJ4XSIsIGludGVs
X2RwLT5wc3JfZHBjZFswXSk7CiAJc2VxX3B1dHMobSwgIlxuIik7CiAKIAlpZiAoIXBzci0+c2lu
a19zdXBwb3J0KQpAQCAtMzY0LDE2ICszNjEsMTYgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jf
c3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAogCWlmIChwc3ItPnBzcjJf
ZW5hYmxlZCkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBf
UFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1IyX0NU
TChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZW5hYmxlZCA9IHZhbCAmIEVEUF9QU1Iy
X0VOQUJMRTsKIAl9IGVsc2UgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJ
CSAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQ
X1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCWVuYWJsZWQgPSB2YWwgJiBF
RFBfUFNSX0VOQUJMRTsKIAl9CiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBjdGw6ICVzIFsw
eCUwOHhdXG4iLAogCQkgICBlbmFibGVkZGlzYWJsZWQoZW5hYmxlZCksIHZhbCk7Ci0JcHNyX3Nv
dXJjZV9zdGF0dXMoZGV2X3ByaXYsIG0pOworCXBzcl9zb3VyY2Vfc3RhdHVzKGludGVsX2RwLCBt
KTsKIAlzZXFfcHJpbnRmKG0sICJCdXN5IGZyb250YnVmZmVyIGJpdHM6IDB4JTA4eFxuIiwKIAkJ
ICAgcHNyLT5idXN5X2Zyb250YnVmZmVyX2JpdHMpOwogCkBAIC0zODIsNyArMzc5LDcgQEAgc3Rh
dGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0
YSkKIAkgKi8KIAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURXRUxMKGRldl9w
cml2KSkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNS
X1BFUkZfQ05UKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX1BF
UkZfQ05UKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQl2YWwgJj0gRURQX1BTUl9QRVJG
X0NOVF9NQVNLOwogCQlzZXFfcHJpbnRmKG0sICJQZXJmb3JtYW5jZSBjb3VudGVyOiAldVxuIiwg
dmFsKTsKIAl9CkBAIC00MDMsNyArNDAwLDcgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3Rh
dHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJICovCiAJCWZvciAoZnJhbWUg
PSAwOyBmcmFtZSA8IFBTUjJfU1VfU1RBVFVTX0ZSQU1FUzsgZnJhbWUgKz0gMykgewogCQkJdmFs
ID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkJICAgIFBTUjJfU1VfU1RBVFVTKGRldl9w
cml2LT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKKwkJCQkJICAgIFBTUjJfU1VfU1RBVFVTKGlu
dGVsX2RwLT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKIAkJCXN1X2ZyYW1lc192YWxbZnJhbWUg
LyAzXSA9IHZhbDsKIAkJfQogCkBAIC00MjksMjMgKzQyNiw1NyBAQCBzdGF0aWMgaW50IGk5MTVf
ZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQogCXJldHVybiAw
OwogfQogCitzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICpt
LCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5v
ZGVfdG9faTkxNShtLT5wcml2YXRlKTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsK
KwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gTlVMTDsKKworCWlmICghSEFTX1BTUihkZXZf
cHJpdikpCisJCXJldHVybiAtRU5PREVWOworCisJLyogRmluZCB0aGUgZmlyc3QgRURQICovCisJ
Zm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJaWYgKGVuY29k
ZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkgeworCQkJaW50ZWxfZHAgPSBlbmNfdG9faW50
ZWxfZHAoZW5jb2Rlcik7CisJCQlicmVhazsKKwkJfQorCX0KKworCWlmICghaW50ZWxfZHApCisJ
CXJldHVybiAtRU5PREVWOworCisJcmV0dXJuIGludGVsX3Bzcl9zdGF0dXMobSwgaW50ZWxfZHAp
OworfQorCiBzdGF0aWMgaW50CiBpOTE1X2VkcF9wc3JfZGVidWdfc2V0KHZvaWQgKmRhdGEsIHU2
NCB2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZGF0YTsKIAlp
bnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKLQlpbnQgcmV0OworCWludCByZXQgPSAtRU5PREVWOwor
CXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2
KSkKLQkJcmV0dXJuIC1FTk9ERVY7CisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKKwkJcmV0dXJu
IHJldDsKIAotCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiU2V0dGluZyBQU1IgZGVidWcg
dG8gJWxseFxuIiwgdmFsKTsKKwlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5j
b2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVu
Y29kZXIpOwogCi0Jd2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZkZXZfcHJpdi0+cnVu
dGltZV9wbSk7CisJCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCisJCQljb250aW51ZTsKIAotCXJl
dCA9IGludGVsX3Bzcl9kZWJ1Z19zZXQoZGV2X3ByaXYsIHZhbCk7CisJCWlmIChlbmNvZGVyLT50
eXBlID09IElOVEVMX09VVFBVVF9FRFApIHsKKwkJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJt
LCAiU2V0dGluZyBQU1IgZGVidWcgdG8gJWxseFxuIiwgdmFsKTsKIAotCWludGVsX3J1bnRpbWVf
cG1fcHV0KCZkZXZfcHJpdi0+cnVudGltZV9wbSwgd2FrZXJlZik7CisJCQl3YWtlcmVmID0gaW50
ZWxfcnVudGltZV9wbV9nZXQoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKKworCQkJLy8gVE9ETzog
c3BsaXQgdG8gZWFjaCB0cmFuc2NvZGVyJ3MgUFNSIGRlYnVnIHN0YXRlCisJCQlyZXQgPSBpbnRl
bF9wc3JfZGVidWdfc2V0KGludGVsX2RwLCB2YWwpOworCisJCQlpbnRlbF9ydW50aW1lX3BtX3B1
dCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0sIHdha2VyZWYpOworCQl9CisJfQogCiAJcmV0dXJuIHJl
dDsKIH0KQEAgLTQ1NCwxMiArNDg1LDI1IEBAIHN0YXRpYyBpbnQKIGk5MTVfZWRwX3Bzcl9kZWJ1
Z19nZXQodm9pZCAqZGF0YSwgdTY0ICp2YWwpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gZGF0YTsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAotCWlm
ICghQ0FOX1BTUihkZXZfcHJpdikpCisJaWYgKCFIQVNfUFNSKGRldl9wcml2KSkKIAkJcmV0dXJu
IC1FTk9ERVY7CiAKLQkqdmFsID0gUkVBRF9PTkNFKGRldl9wcml2LT5wc3IuZGVidWcpOwotCXJl
dHVybiAwOworCWZvcl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJ
CXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisK
KwkJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKKwkJCWNvbnRpbnVlOworCisJCS8vIFRPRE86IHNw
bGl0IHRvIGVhY2ggdHJhbnNjb2RlcidzIFBTUiBkZWJ1ZyBzdGF0ZQorCQlpZiAoZW5jb2Rlci0+
dHlwZSA9PSBJTlRFTF9PVVRQVVRfRURQKSB7CisJCQkqdmFsID0gUkVBRF9PTkNFKGludGVsX2Rw
LT5wc3IuZGVidWcpOworCQkJcmV0dXJuIDA7CisJCX0KKwl9CisKKwlyZXR1cm4gLUVOT0RFVjsK
IH0KIAogREVGSU5FX1NJTVBMRV9BVFRSSUJVVEUoaTkxNV9lZHBfcHNyX2RlYnVnX2ZvcHMsCkBA
IC0xMTAzLDkgKzExNDcsNiBAQCBzdGF0aWMgdm9pZCBkcnJzX3N0YXR1c19wZXJfY3J0YyhzdHJ1
Y3Qgc2VxX2ZpbGUgKm0sCiAJCS8qIGRpc2FibGVfZHJycygpIHdpbGwgbWFrZSBkcnJzLT5kcCBO
VUxMICovCiAJCWlmICghZHJycy0+ZHApIHsKIAkJCXNlcV9wdXRzKG0sICJJZGxlbmVzcyBEUlJT
OiBEaXNhYmxlZFxuIik7Ci0JCQlpZiAoZGV2X3ByaXYtPnBzci5lbmFibGVkKQotCQkJCXNlcV9w
dXRzKG0sCi0JCQkJIlx0QXMgUFNSIGlzIGVuYWJsZWQsIERSUlMgaXMgbm90IGVuYWJsZWRcbiIp
OwogCQkJbXV0ZXhfdW5sb2NrKCZkcnJzLT5tdXRleCk7CiAJCQlyZXR1cm47CiAJCX0KZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5k
ZXggZjZmMDYyNjY0OWUwLi5kMmNkNjMwNWRlNmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCkBAIC0xMjg2LDYgKzEyODYsNDMg
QEAgc3RydWN0IGludGVsX2RwX2NvbXBsaWFuY2UgewogCXU4IHRlc3RfbGFuZV9jb3VudDsKIH07
CiAKK3N0cnVjdCBpbnRlbF9wc3IgeworCS8qIE11dGV4IGZvciBQU1Igc3RhdGUgb2YgdGhlIHRy
YW5zY29kZXIgKi8KKwlzdHJ1Y3QgbXV0ZXggbG9jazsKKworI2RlZmluZSBJOTE1X1BTUl9ERUJV
R19NT0RFX01BU0sJMHgwZgorI2RlZmluZSBJOTE1X1BTUl9ERUJVR19ERUZBVUxUCQkweDAwCisj
ZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0RJU0FCTEUJCTB4MDEKKyNkZWZpbmUgSTkxNV9QU1JfREVC
VUdfRU5BQkxFCQkweDAyCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0ZPUkNFX1BTUjEJMHgwMwor
I2RlZmluZSBJOTE1X1BTUl9ERUJVR19JUlEJCTB4MTAKKworCXUzMiBkZWJ1ZzsKKwlib29sIHNp
bmtfc3VwcG9ydDsKKwlib29sIGVuYWJsZWQ7CisJZW51bSBwaXBlIHBpcGU7CisJZW51bSB0cmFu
c2NvZGVyIHRyYW5zY29kZXI7CisJYm9vbCBhY3RpdmU7CisJc3RydWN0IHdvcmtfc3RydWN0IHdv
cms7CisJdW5zaWduZWQgaW50IGJ1c3lfZnJvbnRidWZmZXJfYml0czsKKwlib29sIHNpbmtfcHNy
Ml9zdXBwb3J0OworCWJvb2wgbGlua19zdGFuZGJ5OworCWJvb2wgY29sb3JpbWV0cnlfc3VwcG9y
dDsKKwlib29sIHBzcjJfZW5hYmxlZDsKKwlib29sIHBzcjJfc2VsX2ZldGNoX2VuYWJsZWQ7CisJ
dTggc2lua19zeW5jX2xhdGVuY3k7CisJa3RpbWVfdCBsYXN0X2VudHJ5X2F0dGVtcHQ7CisJa3Rp
bWVfdCBsYXN0X2V4aXQ7CisJYm9vbCBzaW5rX25vdF9yZWxpYWJsZTsKKwlib29sIGlycV9hdXhf
ZXJyb3I7CisJdTE2IHN1X3hfZ3JhbnVsYXJpdHk7CisJYm9vbCBkYzNjb19lbmFibGVkOworCXUz
MiBkYzNjb19leGl0X2RlbGF5OworCXN0cnVjdCBkZWxheWVkX3dvcmsgZGMzY29fd29yazsKKwli
b29sIGZvcmNlX21vZGVfY2hhbmdlZDsKKwlzdHJ1Y3QgZHJtX2RwX3ZzY19zZHAgdnNjOworfTsK
Kwogc3RydWN0IGludGVsX2RwIHsKIAlpOTE1X3JlZ190IG91dHB1dF9yZWc7CiAJdTMyIERQOwpA
QCAtMTQwNiw2ICsxNDQzLDggQEAgc3RydWN0IGludGVsX2RwIHsKIAogCWJvb2wgaG9ibF9mYWls
ZWQ7CiAJYm9vbCBob2JsX2FjdGl2ZTsKKworCXN0cnVjdCBpbnRlbF9wc3IgcHNyOwogfTsKIAog
ZW51bSBsc3Bjb25fdmVuZG9yIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZHAuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YwppbmRleCBjZjA5YWNhNzYwN2IuLmY0NjI3MzUxZmExNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZHAuYwpAQCAtMjY0MCwxMiArMjY0MCwxMCBAQCB2b2lkIGludGVsX2Rw
X2NvbXB1dGVfcHNyX3ZzY19zZHAoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJCQkgIGNv
bnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlLAogCQkJCSAgc3RydWN0
IGRybV9kcF92c2Nfc2RwICp2c2MpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0KIAl2c2MtPnNkcF90eXBlID0gRFBfU0RQX1ZT
QzsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkgewotCQlpZiAoZGV2X3ByaXYt
PnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ICYmCisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFi
bGVkKSB7CisJCWlmIChpbnRlbF9kcC0+cHNyLmNvbG9yaW1ldHJ5X3N1cHBvcnQgJiYKIAkJICAg
IGludGVsX2RwX25lZWRzX3ZzY19zZHAoY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkpIHsKIAkJCS8q
IFtQU1IyLCArQ29sb3JpbWV0cnldICovCiAJCQlpbnRlbF9kcF9jb21wdXRlX3ZzY19jb2xvcmlt
ZXRyeShjcnRjX3N0YXRlLCBjb25uX3N0YXRlLApAQCAtNzk3Miw2ICs3OTcwLDE3IEBAIHN0YXRp
YyB2b2lkIGludGVsX2RwX21vZGVzZXRfcmV0cnlfd29ya19mbihzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspCiAJZHJtX2ttc19oZWxwZXJfaG90cGx1Z19ldmVudChjb25uZWN0b3ItPmRldik7CiB9
CiAKK3N0YXRpYyB2b2lkIGludGVsX2RwX3VwZGF0ZV9waXBlKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlLAorCQkJCSBzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkg
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkJIGNvbnN0IHN0
cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKQoreworCXN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisKKwlpbnRlbF9wYW5lbF91
cGRhdGVfYmFja2xpZ2h0KHN0YXRlLCBlbmNvZGVyLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsK
KwlpbnRlbF9wc3IyX3Byb2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoaW50ZWxfZHAsIGNydGNfc3Rh
dGUpOworfQorCiBib29sCiBpbnRlbF9kcF9pbml0X2Nvbm5lY3RvcihzdHJ1Y3QgaW50ZWxfZGln
aXRhbF9wb3J0ICpkaWdfcG9ydCwKIAkJCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmludGVsX2Nv
bm5lY3RvcikKQEAgLTgxMjcsNyArODEzNiw3IEBAIGJvb2wgaW50ZWxfZHBfaW5pdChzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJaW50ZWxfZW5jb2Rlci0+Z2V0X2NvbmZpZyA9
IGludGVsX2RwX2dldF9jb25maWc7CiAJaW50ZWxfZW5jb2Rlci0+c3luY19zdGF0ZSA9IGludGVs
X2RwX3N5bmNfc3RhdGU7CiAJaW50ZWxfZW5jb2Rlci0+aW5pdGlhbF9mYXN0c2V0X2NoZWNrID0g
aW50ZWxfZHBfaW5pdGlhbF9mYXN0c2V0X2NoZWNrOwotCWludGVsX2VuY29kZXItPnVwZGF0ZV9w
aXBlID0gaW50ZWxfcGFuZWxfdXBkYXRlX2JhY2tsaWdodDsKKwlpbnRlbF9lbmNvZGVyLT51cGRh
dGVfcGlwZSA9IGludGVsX2RwX3VwZGF0ZV9waXBlOwogCWludGVsX2VuY29kZXItPnN1c3BlbmQg
PSBpbnRlbF9kcF9lbmNvZGVyX3N1c3BlbmQ7CiAJaW50ZWxfZW5jb2Rlci0+c2h1dGRvd24gPSBp
bnRlbF9kcF9lbmNvZGVyX3NodXRkb3duOwogCWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSkg
ewpAQCAtODIxNCw2ICs4MjIzLDggQEAgYm9vbCBpbnRlbF9kcF9pbml0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKIAlpZiAoIWludGVsX2RwX2luaXRfY29ubmVjdG9yKGRpZ19w
b3J0LCBpbnRlbF9jb25uZWN0b3IpKQogCQlnb3RvIGVycl9pbml0X2Nvbm5lY3RvcjsKIAorCWlu
dGVsX3Bzcl9pbml0KCZkaWdfcG9ydC0+ZHApOworCiAJcmV0dXJuIHRydWU7CiAKIGVycl9pbml0
X2Nvbm5lY3RvcjoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfcHNyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jCmluZGV4
IDE1NzZjMzcyMmQwYi4uYTZiNDhlYjUxYjc3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX3Bzci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcHNyLmMKQEAgLTc5LDExICs3OSwxMyBAQAogICogdXNlIHBhZ2UgZmxpcHMuCiAg
Ki8KIAotc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1KQorc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiB7Ci0Jc3dpdGNoIChpOTE1LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJV
R19NT0RFX01BU0spIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90
b19pOTE1KGludGVsX2RwKTsKKworCXN3aXRjaCAoaW50ZWxfZHAtPnBzci5kZWJ1ZyAmIEk5MTVf
UFNSX0RFQlVHX01PREVfTUFTSykgewogCWNhc2UgSTkxNV9QU1JfREVCVUdfREVGQVVMVDoKLQkJ
cmV0dXJuIGk5MTUtPnBhcmFtcy5lbmFibGVfcHNyOworCQlyZXR1cm4gZGV2X3ByaXYtPnBhcmFt
cy5lbmFibGVfcHNyOwogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJMRToKIAkJcmV0dXJuIGZh
bHNlOwogCWRlZmF1bHQ6CkBAIC05MSw5ICs5Myw5IEBAIHN0YXRpYyBib29sIHBzcl9nbG9iYWxf
ZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAl9CiB9CiAKLXN0YXRpYyBi
b29sIHBzcjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQorc3RhdGljIGJvb2wgcHNyMl9nbG9iYWxfZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQogewotCXN3aXRjaCAoZGV2X3ByaXYtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVHX01P
REVfTUFTSykgeworCXN3aXRjaCAoaW50ZWxfZHAtPnBzci5kZWJ1ZyAmIEk5MTVfUFNSX0RFQlVH
X01PREVfTUFTSykgewogCWNhc2UgSTkxNV9QU1JfREVCVUdfRElTQUJMRToKIAljYXNlIEk5MTVf
UFNSX0RFQlVHX0ZPUkNFX1BTUjE6CiAJCXJldHVybiBmYWxzZTsKQEAgLTEwMiwxMSArMTA0LDEy
IEBAIHN0YXRpYyBib29sIHBzcjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2KQogCX0KIH0KIAotc3RhdGljIHZvaWQgcHNyX2lycV9jb250cm9sKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHBzcl9pcnFfY29udHJv
bChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCWVudW0gdHJhbnNjb2RlciB0cmFuc19z
aGlmdDsKIAl1MzIgbWFzaywgdmFsOwogCWk5MTVfcmVnX3QgaW1yX3JlZzsKKwlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCS8qCiAJ
ICogZ2VuMTIrIGhhcyByZWdpc3RlcnMgcmVsYXRpdmUgdG8gdHJhbnNjb2RlciBhbmQgb25lIHBl
ciB0cmFuc2NvZGVyCkBAIC0xMTUsMTQgKzExOCwxNCBAQCBzdGF0aWMgdm9pZCBwc3JfaXJxX2Nv
bnRyb2woc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCSAqLwogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCXRyYW5zX3NoaWZ0ID0gMDsKLQkJaW1yX3JlZyA9
IFRSQU5TX1BTUl9JTVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJaW1yX3JlZyA9IFRS
QU5TX1BTUl9JTVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9IGVsc2UgewotCQl0cmFu
c19zaGlmdCA9IGRldl9wcml2LT5wc3IudHJhbnNjb2RlcjsKKwkJdHJhbnNfc2hpZnQgPSBpbnRl
bF9kcC0+cHNyLnRyYW5zY29kZXI7CiAJCWltcl9yZWcgPSBFRFBfUFNSX0lNUjsKIAl9CiAKIAlt
YXNrID0gRURQX1BTUl9FUlJPUih0cmFuc19zaGlmdCk7Ci0JaWYgKGRldl9wcml2LT5wc3IuZGVi
dWcgJiBJOTE1X1BTUl9ERUJVR19JUlEpCisJaWYgKGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1
X1BTUl9ERUJVR19JUlEpCiAJCW1hc2sgfD0gRURQX1BTUl9QT1NUX0VYSVQodHJhbnNfc2hpZnQp
IHwKIAkJCUVEUF9QU1JfUFJFX0VOVFJZKHRyYW5zX3NoaWZ0KTsKIApAQCAtMTcxLDM4ICsxNzQs
MzcgQEAgc3RhdGljIHZvaWQgcHNyX2V2ZW50X3ByaW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1LAogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiXHRQU1IgZGlzYWJsZWRcbiIpOwog
fQogCi12b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsIHUzMiBwc3JfaWlyKQordm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwgdTMyIHBzcl9paXIpCiB7Ci0JZW51bSB0cmFuc2NvZGVyIGNw
dV90cmFuc2NvZGVyID0gZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyOworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWVudW0gdHJhbnNj
b2RlciBjcHVfdHJhbnNjb2RlciA9IGludGVsX2RwLT5wc3IudHJhbnNjb2RlcjsKIAllbnVtIHRy
YW5zY29kZXIgdHJhbnNfc2hpZnQ7CiAJaTkxNV9yZWdfdCBpbXJfcmVnOwogCWt0aW1lX3QgdGlt
ZV9ucyA9ICBrdGltZV9nZXQoKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7
CiAJCXRyYW5zX3NoaWZ0ID0gMDsKLQkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoZGV2X3ByaXYt
PnBzci50cmFuc2NvZGVyKTsKKwkJaW1yX3JlZyA9IFRSQU5TX1BTUl9JTVIoaW50ZWxfZHAtPnBz
ci50cmFuc2NvZGVyKTsKIAl9IGVsc2UgewotCQl0cmFuc19zaGlmdCA9IGRldl9wcml2LT5wc3Iu
dHJhbnNjb2RlcjsKKwkJdHJhbnNfc2hpZnQgPSBpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXI7CiAJ
CWltcl9yZWcgPSBFRFBfUFNSX0lNUjsKIAl9CiAKIAlpZiAocHNyX2lpciAmIEVEUF9QU1JfUFJF
X0VOVFJZKHRyYW5zX3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxhc3RfZW50cnlfYXR0ZW1w
dCA9IHRpbWVfbnM7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJbdHJh
bnNjb2RlciAlc10gUFNSIGVudHJ5IGF0dGVtcHQgaW4gMiB2YmxhbmtzXG4iLAotCQkJICAgIHRy
YW5zY29kZXJfbmFtZShjcHVfdHJhbnNjb2RlcikpOworCQlpbnRlbF9kcC0+cHNyLmxhc3RfZW50
cnlfYXR0ZW1wdCA9IHRpbWVfbnM7CisJCURSTV9ERUJVR19LTVMoIlt0cmFuc2NvZGVyICVzXSBQ
U1IgZW50cnkgYXR0ZW1wdCBpbiAyIHZibGFua3NcbiIsCisJCQkgICAgICB0cmFuc2NvZGVyX25h
bWUoY3B1X3RyYW5zY29kZXIpKTsKIAl9CiAKIAlpZiAocHNyX2lpciAmIEVEUF9QU1JfUE9TVF9F
WElUKHRyYW5zX3NoaWZ0KSkgewotCQlkZXZfcHJpdi0+cHNyLmxhc3RfZXhpdCA9IHRpbWVfbnM7
Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJbdHJhbnNjb2RlciAlc10g
UFNSIGV4aXQgY29tcGxldGVkXG4iLAotCQkJICAgIHRyYW5zY29kZXJfbmFtZShjcHVfdHJhbnNj
b2RlcikpOworCQlpbnRlbF9kcC0+cHNyLmxhc3RfZXhpdCA9IHRpbWVfbnM7CisJCURSTV9ERUJV
R19LTVMoIlt0cmFuc2NvZGVyICVzXSBQU1IgZXhpdCBjb21wbGV0ZWRcbiIsCisJCQkgICAgICB0
cmFuc2NvZGVyX25hbWUoY3B1X3RyYW5zY29kZXIpKTsKIAogCQlpZiAoSU5URUxfR0VOKGRldl9w
cml2KSA+PSA5KSB7CiAJCQl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKIAkJCQkJ
CVBTUl9FVkVOVChjcHVfdHJhbnNjb2RlcikpOwotCQkJYm9vbCBwc3IyX2VuYWJsZWQgPSBkZXZf
cHJpdi0+cHNyLnBzcjJfZW5hYmxlZDsKKwkJCWJvb2wgcHNyMl9lbmFibGVkID0gaW50ZWxfZHAt
PnBzci5wc3IyX2VuYWJsZWQ7CiAKIAkJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBQU1JfRVZF
TlQoY3B1X3RyYW5zY29kZXIpLAogCQkJCSAgICAgICB2YWwpOwpAQCAtMjEzLDEwICsyMTUsMTAg
QEAgdm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LCB1MzIgcHNyX2lpcikKIAlpZiAocHNyX2lpciAmIEVEUF9QU1JfRVJST1IodHJhbnNf
c2hpZnQpKSB7CiAJCXUzMiB2YWw7CiAKLQkJZHJtX3dhcm4oJmRldl9wcml2LT5kcm0sICJbdHJh
bnNjb2RlciAlc10gUFNSIGF1eCBlcnJvclxuIiwKKwkJRFJNX1dBUk4oIlt0cmFuc2NvZGVyICVz
XSBQU1IgYXV4IGVycm9yXG4iLAogCQkJIHRyYW5zY29kZXJfbmFtZShjcHVfdHJhbnNjb2Rlcikp
OwogCi0JCWRldl9wcml2LT5wc3IuaXJxX2F1eF9lcnJvciA9IHRydWU7CisJCWludGVsX2RwLT5w
c3IuaXJxX2F1eF9lcnJvciA9IHRydWU7CiAKIAkJLyoKIAkJICogSWYgdGhpcyBpbnRlcnJ1cHRp
b24gaXMgbm90IG1hc2tlZCBpdCB3aWxsIGtlZXAKQEAgLTIzMCw3ICsyMzIsNyBAQCB2b2lkIGlu
dGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUz
MiBwc3JfaWlyKQogCQl2YWwgfD0gRURQX1BTUl9FUlJPUih0cmFuc19zaGlmdCk7CiAJCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBpbXJfcmVnLCB2YWwpOwogCi0JCXNjaGVkdWxlX3dvcmsoJmRl
dl9wcml2LT5wc3Iud29yayk7CisJCXNjaGVkdWxlX3dvcmsoJmludGVsX2RwLT5wc3Iud29yayk7
CiAJfQogfQogCkBAIC0yOTEsMTIgKzI5Myw2IEBAIHZvaWQgaW50ZWxfcHNyX2luaXRfZHBjZChz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9CiAJCXRvX2k5MTUoZHBfdG9fZGlnX3BvcnQoaW50ZWxfZHApLT5iYXNlLmJhc2UuZGV2
KTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLmRwKSB7Ci0JCWRybV93YXJuKCZkZXZfcHJpdi0+ZHJt
LAotCQkJICJNb3JlIHRoYW4gb25lIGVEUCBwYW5lbCBmb3VuZCwgUFNSIHN1cHBvcnQgc2hvdWxk
IGJlIGV4dGVuZGVkXG4iKTsKLQkJcmV0dXJuOwotCX0KLQogCWRybV9kcF9kcGNkX3JlYWQoJmlu
dGVsX2RwLT5hdXgsIERQX1BTUl9TVVBQT1JULCBpbnRlbF9kcC0+cHNyX2RwY2QsCiAJCQkgc2l6
ZW9mKGludGVsX2RwLT5wc3JfZHBjZCkpOwogCkBAIC0zMTcsMTIgKzMxMywxMCBAQCB2b2lkIGlu
dGVsX3Bzcl9pbml0X2RwY2Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAkJcmV0dXJuOwog
CX0KIAotCWRldl9wcml2LT5wc3Iuc2lua19zdXBwb3J0ID0gdHJ1ZTsKLQlkZXZfcHJpdi0+cHNy
LnNpbmtfc3luY19sYXRlbmN5ID0KKwlpbnRlbF9kcC0+cHNyLnNpbmtfc3VwcG9ydCA9IHRydWU7
CisJaW50ZWxfZHAtPnBzci5zaW5rX3N5bmNfbGF0ZW5jeSA9CiAJCWludGVsX2RwX2dldF9zaW5r
X3N5bmNfbGF0ZW5jeShpbnRlbF9kcCk7CiAKLQlkZXZfcHJpdi0+cHNyLmRwID0gaW50ZWxfZHA7
Ci0KIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5ICYmCiAJICAgIChpbnRlbF9kcC0+cHNy
X2RwY2RbMF0gPT0gRFBfUFNSMl9XSVRIX1lfQ09PUkRfSVNfU1VQUE9SVEVEKSkgewogCQlib29s
IHlfcmVxID0gaW50ZWxfZHAtPnBzcl9kcGNkWzFdICYKQEAgLTM0MCwxNCArMzM0LDE0IEBAIHZv
aWQgaW50ZWxfcHNyX2luaXRfZHBjZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQkgKiBZ
LWNvb3JkaW5hdGUgcmVxdWlyZW1lbnQgcGFuZWxzIHdlIHdvdWxkIG5lZWQgdG8gZW5hYmxlCiAJ
CSAqIEdUQyBmaXJzdC4KIAkJICovCi0JCWRldl9wcml2LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQg
PSB5X3JlcSAmJiBhbHBtOworCQlpbnRlbF9kcC0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0ID0geV9y
ZXEgJiYgYWxwbTsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJQU1IyICVzc3VwcG9y
dGVkXG4iLAotCQkJICAgIGRldl9wcml2LT5wc3Iuc2lua19wc3IyX3N1cHBvcnQgPyAiIiA6ICJu
b3QgIik7CisJCQkgICAgaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCA/ICIiIDogIm5v
dCAiKTsKIAotCQlpZiAoZGV2X3ByaXYtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCkgewotCQkJZGV2
X3ByaXYtPnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ID0KKwkJaWYgKGludGVsX2RwLT5wc3Iuc2lu
a19wc3IyX3N1cHBvcnQpIHsKKwkJCWludGVsX2RwLT5wc3IuY29sb3JpbWV0cnlfc3VwcG9ydCA9
CiAJCQkJaW50ZWxfZHBfZ2V0X2NvbG9yaW1ldHJ5X3N0YXR1cyhpbnRlbF9kcCk7Ci0JCQlkZXZf
cHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkgPQorCQkJaW50ZWxfZHAtPnBzci5zdV94X2dyYW51
bGFyaXR5ID0KIAkJCQlpbnRlbF9kcF9nZXRfc3VfeF9ncmFudWxhcnRpeShpbnRlbF9kcCk7CiAJ
CX0KIAl9CkBAIC0zNzMsNyArMzY3LDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bzcl9zZXR1cF9hdXgo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlCVUlMRF9CVUdfT04oc2l6ZW9mKGF1eF9tc2cp
ID4gMjApOwogCWZvciAoaSA9IDA7IGkgPCBzaXplb2YoYXV4X21zZyk7IGkgKz0gNCkKIAkJaW50
ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgRURQX1BTUl9BVVhfREFUQShkZXZfcHJp
di0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCisJCQkgICAgICAgRURQX1BTUl9BVVhfREFUQShp
bnRlbF9kcC0+cHNyLnRyYW5zY29kZXIsIGkgPj4gMiksCiAJCQkgICAgICAgaW50ZWxfZHBfcGFj
a19hdXgoJmF1eF9tc2dbaV0sIHNpemVvZihhdXhfbXNnKSAtIGkpKTsKIAogCWF1eF9jbG9ja19k
aXZpZGVyID0gaW50ZWxfZHAtPmdldF9hdXhfY2xvY2tfZGl2aWRlcihpbnRlbF9kcCwgMCk7CkBA
IC0zODQsNyArMzc4LDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bzcl9zZXR1cF9hdXgoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKIAogCS8qIFNlbGVjdCBvbmx5IHZhbGlkIGJpdHMgZm9yIFNSRF9B
VVhfQ1RMICovCiAJYXV4X2N0bCAmPSBwc3JfYXV4X21hc2s7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2
X3ByaXYsIEVEUF9QU1JfQVVYX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0FVWF9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2Nv
ZGVyKSwKIAkJICAgICAgIGF1eF9jdGwpOwogfQogCkBAIC0zOTQsMTQgKzM4OCwxNCBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3Npbmsoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkK
IAl1OCBkcGNkX3ZhbCA9IERQX1BTUl9FTkFCTEU7CiAKIAkvKiBFbmFibGUgQUxQTSBhdCBzaW5r
IGZvciBwc3IyICovCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9lbmFibGVkKSB7CisJaWYgKGlu
dGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CiAJCWRybV9kcF9kcGNkX3dyaXRlYigmaW50ZWxf
ZHAtPmF1eCwgRFBfUkVDRUlWRVJfQUxQTV9DT05GSUcsCiAJCQkJICAgRFBfQUxQTV9FTkFCTEUg
fAogCQkJCSAgIERQX0FMUE1fTE9DS19FUlJPUl9JUlFfSFBEX0VOQUJMRSk7CiAKIAkJZHBjZF92
YWwgfD0gRFBfUFNSX0VOQUJMRV9QU1IyIHwgRFBfUFNSX0lSUV9IUERfV0lUSF9DUkNfRVJST1JT
OwogCX0gZWxzZSB7Ci0JCWlmIChkZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRieSkKKwkJaWYgKGlu
dGVsX2RwLT5wc3IubGlua19zdGFuZGJ5KQogCQkJZHBjZF92YWwgfD0gRFBfUFNSX01BSU5fTElO
S19BQ1RJVkU7CiAKIAkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKQEAgLTQ2NCw3ICs0
NTgsNyBAQCBzdGF0aWMgdTggcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIAkgKiBvZmYtYnktb25lIGlzc3VlIHRoYXQgSFcgaGFzIGluIHNvbWUgY2Fz
ZXMuCiAJICovCiAJaWRsZV9mcmFtZXMgPSBtYXgoNiwgZGV2X3ByaXYtPnZidC5wc3IuaWRsZV9m
cmFtZXMpOwotCWlkbGVfZnJhbWVzID0gbWF4KGlkbGVfZnJhbWVzLCBkZXZfcHJpdi0+cHNyLnNp
bmtfc3luY19sYXRlbmN5ICsgMSk7CisJaWRsZV9mcmFtZXMgPSBtYXgoaWRsZV9mcmFtZXMsIGlu
dGVsX2RwLT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgKyAxKTsKIAogCWlmIChkcm1fV0FSTl9PTigm
ZGV2X3ByaXYtPmRybSwgaWRsZV9mcmFtZXMgPiAweGYpKQogCQlpZGxlX2ZyYW1lcyA9IDB4ZjsK
QEAgLTQ4NCw3ICs0NzgsNyBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0aXZhdGVfcHNyMShzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSkKIAkJdmFsIHw9
IEVEUF9QU1JfTUlOX0xJTktfRU5UUllfVElNRV84X0xJTkVTOwogCi0JaWYgKGRldl9wcml2LT5w
c3IubGlua19zdGFuZGJ5KQorCWlmIChpbnRlbF9kcC0+cHNyLmxpbmtfc3RhbmRieSkKIAkJdmFs
IHw9IEVEUF9QU1JfTElOS19TVEFOREJZOwogCiAJdmFsIHw9IGludGVsX3BzcjFfZ2V0X3RwX3Rp
bWUoaW50ZWxfZHApOwpAQCAtNDkyLDkgKzQ4Niw5IEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0
ZV9wc3IxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPj0gOCkKIAkJdmFsIHw9IEVEUF9QU1JfQ1JDX0VOQUJMRTsKIAotCXZhbCB8PSAoaW50ZWxf
ZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkg
JgorCXZhbCB8PSAoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwoaW50ZWxfZHAt
PnBzci50cmFuc2NvZGVyKSkgJgogCQlFRFBfUFNSX1JFU1RPUkVfUFNSX0FDVElWRV9DVFhfTUFT
Syk7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RM
KGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiB9CiAKIHN0YXRpYyB1MzIgaW50ZWxf
cHNyMl9nZXRfdHBfdGltZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQpAQCAtNTI5LDcgKzUy
Myw3IEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0ZV9wc3IyKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHApCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTAgfHwgSVNfR0VNSU5JTEFLRShk
ZXZfcHJpdikpCiAJCXZhbCB8PSBFRFBfWV9DT09SRElOQVRFX0VOQUJMRTsKIAotCXZhbCB8PSBF
RFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoZGV2X3ByaXYtPnBzci5zaW5rX3N5bmNfbGF0ZW5jeSAr
IDEpOworCXZhbCB8PSBFRFBfUFNSMl9GUkFNRV9CRUZPUkVfU1UoaW50ZWxfZHAtPnBzci5zaW5r
X3N5bmNfbGF0ZW5jeSArIDEpOwogCXZhbCB8PSBpbnRlbF9wc3IyX2dldF90cF90aW1lKGludGVs
X2RwKTsKIAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CkBAIC01NDgsNyArNTQy
LDcgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjIoc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCkKIAkJdmFsIHw9IEVEUF9QU1IyX0ZBU1RfV0FLRSg3KTsKIAl9CiAKLQlpZiAoZGV2X3By
aXYtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkKSB7CisJaWYgKGludGVsX2RwLT5wc3IucHNy
Ml9zZWxfZmV0Y2hfZW5hYmxlZCkgewogCQkvKiBXQSAxNDA4MzMwODQ3ICovCiAJCWlmIChJU19U
R0xfRElTUF9SRVZJRChkZXZfcHJpdiwgVEdMX1JFVklEX0EwLCBUR0xfUkVWSURfQTApIHx8CiAJ
CSAgICBJU19SS0xfUkVWSUQoZGV2X3ByaXYsIFJLTF9SRVZJRF9BMCwgUktMX1JFVklEX0EwKSkK
QEAgLTU1NywyMCArNTUxLDIwIEBAIHN0YXRpYyB2b2lkIGhzd19hY3RpdmF0ZV9wc3IyKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCQkJICAgICBESVNfUkFNX0JZUEFTU19QU1IyX01BTl9U
UkFDSyk7CiAKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkgICAgICAgUFNSMl9NQU5f
VFJLX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCQkJICAgICAgIFBTUjJfTUFOX1RS
S19DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwKIAkJCSAgICAgICBQU1IyX01BTl9UUktf
Q1RMX0VOQUJMRSk7CiAJfSBlbHNlIGlmIChIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYpKSB7
CiAJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LAotCQkJICAgICAgIFBTUjJfTUFOX1RSS19DVEwo
ZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgMCk7CisJCQkgICAgICAgUFNSMl9NQU5fVFJLX0NU
TChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAl9CiAKIAkvKgogCSAqIFBTUjIgSFcg
aXMgaW5jb3JyZWN0bHkgdXNpbmcgRURQX1BTUl9UUDFfVFAzX1NFTCBhbmQgQlNwZWMgaXMKIAkg
KiByZWNvbW1lbmRpbmcga2VlcCB0aGlzIGJpdCB1bnNldCB3aGlsZSBQU1IyIGlzIGVuYWJsZWQu
CiAJICovCi0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5w
c3IudHJhbnNjb2RlciksIDApOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0NU
TChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCAwKTsKIAotCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKKwlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2Rl
ciksIHZhbCk7CiB9CiAKIHN0YXRpYyBib29sCkBAIC01OTMsNTUgKzU4Nyw1OCBAQCBzdGF0aWMg
dTMyIGludGVsX2dldF9mcmFtZV90aW1lX3VzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjc3RhdGUpCiAJCQkgICAgZHJtX21vZGVfdnJlZnJlc2goJmNzdGF0ZS0+aHcuYWRqdXN0ZWRf
bW9kZSkpOwogfQogCi1zdGF0aWMgdm9pZCBwc3IyX3Byb2dyYW1faWRsZV9mcmFtZXMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorc3RhdGljIHZvaWQgcHNyMl9wcm9ncmFtX2lk
bGVfZnJhbWVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCQkJICAgICB1MzIgaWRsZV9m
cmFtZXMpCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkx
NShpbnRlbF9kcCk7CiAJdTMyIHZhbDsKIAogCWlkbGVfZnJhbWVzIDw8PSAgRURQX1BTUjJfSURM
RV9GUkFNRV9TSElGVDsKLQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSMl9D
VEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZf
cHJpdiwgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCXZhbCAmPSB+
RURQX1BTUjJfSURMRV9GUkFNRV9NQVNLOwogCXZhbCB8PSBpZGxlX2ZyYW1lczsKLQlpbnRlbF9k
ZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlciks
IHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+
cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfcHNyMl9lbmFibGVf
ZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgdGds
X3BzcjJfZW5hYmxlX2RjM2NvKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0JcHNyMl9w
cm9ncmFtX2lkbGVfZnJhbWVzKGRldl9wcml2LCAwKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKworCXBzcjJfcHJvZ3JhbV9pZGxl
X2ZyYW1lcyhpbnRlbF9kcCwgMCk7CiAJaW50ZWxfZGlzcGxheV9wb3dlcl9zZXRfdGFyZ2V0X2Rj
X3N0YXRlKGRldl9wcml2LCBEQ19TVEFURV9FTl9EQzNDTyk7CiB9CiAKLXN0YXRpYyB2b2lkIHRn
bF9wc3IyX2Rpc2FibGVfZGMzY28oc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQor
c3RhdGljIHZvaWQgdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQogewotCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPSBkZXZfcHJpdi0+cHNyLmRwOwor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
OwogCiAJaW50ZWxfZGlzcGxheV9wb3dlcl9zZXRfdGFyZ2V0X2RjX3N0YXRlKGRldl9wcml2LCBE
Q19TVEFURV9FTl9VUFRPX0RDNik7Ci0JcHNyMl9wcm9ncmFtX2lkbGVfZnJhbWVzKGRldl9wcml2
LCBwc3JfY29tcHV0ZV9pZGxlX2ZyYW1lcyhpbnRlbF9kcCkpOworCXBzcjJfcHJvZ3JhbV9pZGxl
X2ZyYW1lcyhpbnRlbF9kcCwgcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMoaW50ZWxfZHApKTsKIH0K
IAogc3RhdGljIHZvaWQgdGdsX2RjM2NvX2Rpc2FibGVfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3Qg
KndvcmspCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0KLQkJY29udGFp
bmVyX29mKHdvcmssIHR5cGVvZigqZGV2X3ByaXYpLCBwc3IuZGMzY29fd29yay53b3JrKTsKKwlz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0KKwkJY29udGFpbmVyX29mKHdvcmssIHR5cGVvZigq
aW50ZWxfZHApLCBwc3IuZGMzY29fd29yay53b3JrKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2
LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAkvKiBJZiBk
ZWxheWVkIHdvcmsgaXMgcGVuZGluZywgaXQgaXMgbm90IGlkbGUgKi8KLQlpZiAoZGVsYXllZF93
b3JrX3BlbmRpbmcoJmRldl9wcml2LT5wc3IuZGMzY29fd29yaykpCisJaWYgKGRlbGF5ZWRfd29y
a19wZW5kaW5nKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspKQogCQlnb3RvIHVubG9jazsKIAot
CXRnbF9wc3IyX2Rpc2FibGVfZGMzY28oZGV2X3ByaXYpOworCXRnbF9wc3IyX2Rpc2FibGVfZGMz
Y28oaW50ZWxfZHApOwogdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2Nr
KTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiB9CiAKLXN0YXRpYyB2b2lk
IHRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQorc3RhdGljIHZvaWQgdGdsX2Rpc2FsbG93X2RjM2NvX29uX3BzcjJfZXhpdChz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCWlmICghZGV2X3ByaXYtPnBzci5kYzNjb19l
bmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkKQogCQlyZXR1cm47CiAK
LQljYW5jZWxfZGVsYXllZF93b3JrKCZkZXZfcHJpdi0+cHNyLmRjM2NvX3dvcmspOworCWNhbmNl
bF9kZWxheWVkX3dvcmsoJmludGVsX2RwLT5wc3IuZGMzY29fd29yayk7CiAJLyogQmVmb3JlIFBT
UjIgZXhpdCBkaXNhbGxvdyBkYzNjbyovCi0JdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhkZXZfcHJp
dik7CisJdGdsX3BzcjJfZGlzYWJsZV9kYzNjbyhpbnRlbF9kcCk7CiB9CiAKIHN0YXRpYyB2b2lk
CkBAIC03MTQsNyArNzExLDcgQEAgc3RhdGljIGJvb2wgaW50ZWxfcHNyMl9jb25maWdfdmFsaWQo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlpbnQgY3J0Y192ZGlzcGxheSA9IGNydGNfc3Rh
dGUtPmh3LmFkanVzdGVkX21vZGUuY3J0Y192ZGlzcGxheTsKIAlpbnQgcHNyX21heF9oID0gMCwg
cHNyX21heF92ID0gMCwgbWF4X2JwcCA9IDA7CiAKLQlpZiAoIWRldl9wcml2LT5wc3Iuc2lua19w
c3IyX3N1cHBvcnQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0KQogCQly
ZXR1cm4gZmFsc2U7CiAKIAlpZiAoIXRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIGNydGNf
c3RhdGUtPmNwdV90cmFuc2NvZGVyKSkgewpAQCAtNzI0LDcgKzcyMSw3IEBAIHN0YXRpYyBib29s
IGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCXJl
dHVybiBmYWxzZTsKIAl9CiAKLQlpZiAoIXBzcjJfZ2xvYmFsX2VuYWJsZWQoZGV2X3ByaXYpKSB7
CisJaWYgKCFwc3IyX2dsb2JhbF9lbmFibGVkKGludGVsX2RwKSkgewogCQlkcm1fZGJnX2ttcygm
ZGV2X3ByaXYtPmRybSwgIlBTUjIgZGlzYWJsZWQgYnkgZmxhZ1xuIik7CiAJCXJldHVybiBmYWxz
ZTsKIAl9CkBAIC03NzMsMTAgKzc3MCwxMCBAQCBzdGF0aWMgYm9vbCBpbnRlbF9wc3IyX2NvbmZp
Z192YWxpZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCSAqIG9ubHkgbmVlZCB0byB2YWxp
ZGF0ZSB0aGUgU1UgYmxvY2sgd2lkdGggaXMgYSBtdWx0aXBsZSBvZgogCSAqIHggZ3JhbnVsYXJp
dHkuCiAJICovCi0JaWYgKGNydGNfaGRpc3BsYXkgJSBkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVs
YXJpdHkpIHsKKwlpZiAoY3J0Y19oZGlzcGxheSAlIGludGVsX2RwLT5wc3Iuc3VfeF9ncmFudWxh
cml0eSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAiUFNSMiBub3Qg
ZW5hYmxlZCwgaGRpc3BsYXkoJWQpIG5vdCBtdWx0aXBsZSBvZiAlZFxuIiwKLQkJCSAgICBjcnRj
X2hkaXNwbGF5LCBkZXZfcHJpdi0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkpOworCQkJICAgIGNydGNf
aGRpc3BsYXksIGludGVsX2RwLT5wc3Iuc3VfeF9ncmFudWxhcml0eSk7CiAJCXJldHVybiBmYWxz
ZTsKIAl9CiAKQEAgLTgxMSwxMyArODA4LDEwIEBAIHZvaWQgaW50ZWxfcHNyX2NvbXB1dGVfY29u
ZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCSZjcnRjX3N0YXRlLT5ody5hZGp1c3Rl
ZF9tb2RlOwogCWludCBwc3Jfc2V0dXBfdGltZTsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikp
CisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCi0JaWYgKGludGVsX2RwICE9
IGRldl9wcml2LT5wc3IuZHApCi0JCXJldHVybjsKLQotCWlmICghcHNyX2dsb2JhbF9lbmFibGVk
KGRldl9wcml2KSkgeworCWlmICghcHNyX2dsb2JhbF9lbmFibGVkKGludGVsX2RwKSkgewogCQlk
cm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIlBTUiBkaXNhYmxlZCBieSBmbGFnXG4iKTsKIAkJ
cmV0dXJuOwogCX0KQEAgLTgzNCw3ICs4MjgsNyBAQCB2b2lkIGludGVsX3Bzcl9jb21wdXRlX2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQlyZXR1cm47CiAJfQogCi0JaWYgKGRl
dl9wcml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUpIHsKKwlpZiAoaW50ZWxfZHAtPnBzci5zaW5r
X25vdF9yZWxpYWJsZSkgewogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAi
UFNSIHNpbmsgaW1wbGVtZW50YXRpb24gaXMgbm90IHJlbGlhYmxlXG4iKTsKIAkJcmV0dXJuOwpA
QCAtODcwLDIzICs4NjQsMjQgQEAgdm9pZCBpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwKIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9hY3RpdmF0ZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCWVudW0gdHJhbnNjb2RlciB0cmFuc2NvZGVy
ID0gaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyOwogCi0JaWYgKHRyYW5zY29kZXJfaGFzX3BzcjIo
ZGV2X3ByaXYsIGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpCisJaWYgKHRyYW5zY29kZXJfaGFz
X3BzcjIoZGV2X3ByaXYsIHRyYW5zY29kZXIpKQogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRy
bSwKLQkJCSAgICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSMl9DVEwoZGV2X3ByaXYt
PnBzci50cmFuc2NvZGVyKSkgJiBFRFBfUFNSMl9FTkFCTEUpOworCQkJICAgIGludGVsX2RlX3Jl
YWQoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTCh0cmFuc2NvZGVyKSkgJiBFRFBfUFNSMl9FTkFCTEUp
OwogCiAJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sCi0JCSAgICBpbnRlbF9kZV9yZWFkKGRl
dl9wcml2LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKSAmIEVEUF9QU1Jf
RU5BQkxFKTsKLQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZGV2X3ByaXYtPnBzci5hY3Rp
dmUpOwotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmRldl9wcml2LT5wc3IubG9jayk7CisJCSAgICBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSX0NUTCh0cmFuc2NvZGVyKSkgJiBFRFBfUFNS
X0VOQUJMRSk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5wc3IuYWN0
aXZlKTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJLyog
cHNyMSBhbmQgcHNyMiBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLiovCi0JaWYgKGRldl9wcml2LT5w
c3IucHNyMl9lbmFibGVkKQorCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkKIAkJaHN3
X2FjdGl2YXRlX3BzcjIoaW50ZWxfZHApOwogCWVsc2UKIAkJaHN3X2FjdGl2YXRlX3BzcjEoaW50
ZWxfZHApOwogCi0JZGV2X3ByaXYtPnBzci5hY3RpdmUgPSB0cnVlOworCWludGVsX2RwLT5wc3Iu
YWN0aXZlID0gdHJ1ZTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2Uo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKQEAgLTkwMiw3ICs4OTcsNyBAQCBzdGF0aWMgdm9p
ZCBpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlm
IChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQloc3df
cHNyX3NldHVwX2F1eChpbnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJs
ZWQgJiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2Vu
YWJsZWQgJiYgKElTX0dFTihkZXZfcHJpdiwgOSkgJiYKIAkJCQkJICAgIUlTX0dFTUlOSUxBS0Uo
ZGV2X3ByaXYpKSkgewogCQlpOTE1X3JlZ190IHJlZyA9IENISUNLRU5fVFJBTlMoY3B1X3RyYW5z
Y29kZXIpOwogCQl1MzIgY2hpY2tlbiA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJlZyk7CkBA
IC05MjYsMTAgKzkyMSwxMCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTEp
CiAJCW1hc2sgfD0gRURQX1BTUl9ERUJVR19NQVNLX0RJU1BfUkVHX1dSSVRFOwogCi0JaW50ZWxf
ZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfREVCVUcoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVy
KSwKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9ERUJVRyhpbnRlbF9kcC0+cHNy
LnRyYW5zY29kZXIpLAogCQkgICAgICAgbWFzayk7CiAKLQlwc3JfaXJxX2NvbnRyb2woZGV2X3By
aXYpOworCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7CiAKIAlpZiAoY3J0Y19zdGF0ZS0+ZGMz
Y29fZXhpdGxpbmUpIHsKIAkJdTMyIHZhbDsKQEAgLTk0NywzMCArOTQyLDMwIEBAIHN0YXRpYyB2
b2lkIGludGVsX3Bzcl9lbmFibGVfc291cmNlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAK
IAlpZiAoSEFTX1BTUl9IV19UUkFDS0lORyhkZXZfcHJpdikgJiYgSEFTX1BTUjJfU0VMX0ZFVENI
KGRldl9wcml2KSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElDS0VOX1BBUjFfMSwgSUdO
T1JFX1BTUjJfSFdfVFJBQ0tJTkcsCi0JCQkgICAgIGRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0
Y2hfZW5hYmxlZCA/CisJCQkgICAgIGludGVsX2RwLT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxl
ZCA/CiAJCQkgICAgIElHTk9SRV9QU1IyX0hXX1RSQUNLSU5HIDogMCk7CiB9CiAKLXN0YXRpYyB2
b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCiAJCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQkJCSAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqY29ubl9z
dGF0ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZGV2X3ByaXYtPnBzci5kcDsK
KwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2Rw
KTsKIAlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0
KGludGVsX2RwKTsKIAlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciA9ICZkaWdfcG9ydC0+
YmFzZTsKIAl1MzIgdmFsOwogCi0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGRldl9wcml2
LT5wc3IuZW5hYmxlZCk7CisJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGludGVsX2RwLT5w
c3IuZW5hYmxlZCk7CiAKLQlkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCA9IGNydGNfc3RhdGUt
Pmhhc19wc3IyOwotCWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzID0gMDsKLQlk
ZXZfcHJpdi0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yykt
PnBpcGU7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19lbmFibGVkID0gISFjcnRjX3N0YXRlLT5kYzNj
b19leGl0bGluZTsKLQlkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIgPSBjcnRjX3N0YXRlLT5jcHVf
dHJhbnNjb2RlcjsKKwlpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmhh
c19wc3IyOworCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzID0gMDsKKwlpbnRl
bF9kcC0+cHNyLnBpcGUgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0YyktPnBp
cGU7CisJaW50ZWxfZHAtPnBzci5kYzNjb19lbmFibGVkID0gISFjcnRjX3N0YXRlLT5kYzNjb19l
eGl0bGluZTsKKwlpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIgPSBjcnRjX3N0YXRlLT5jcHVfdHJh
bnNjb2RlcjsKIAkvKiBEQzUvREM2IHJlcXVpcmVzIGF0IGxlYXN0IDYgaWRsZSBmcmFtZXMgKi8K
IAl2YWwgPSB1c2Vjc190b19qaWZmaWVzKGludGVsX2dldF9mcmFtZV90aW1lX3VzKGNydGNfc3Rh
dGUpICogNik7Ci0JZGV2X3ByaXYtPnBzci5kYzNjb19leGl0X2RlbGF5ID0gdmFsOwotCWRldl9w
cml2LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmVuYWJsZV9wc3Iy
X3NlbF9mZXRjaDsKKwlpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRfZGVsYXkgPSB2YWw7CisJaW50
ZWxfZHAtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkID0gY3J0Y19zdGF0ZS0+ZW5hYmxlX3Bz
cjJfc2VsX2ZldGNoOwogCiAJLyoKIAkgKiBJZiBhIFBTUiBlcnJvciBoYXBwZW5lZCBhbmQgdGhl
IGRyaXZlciBpcyByZWxvYWRlZCwgdGhlIEVEUF9QU1JfSUlSCkBAIC05ODIsMjcgKzk3NywyNyBA
QCBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCiAJICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpIHsK
IAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgVFJBTlNfUFNSX0lJUihk
ZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgVFJBTlNfUFNSX0lJUihpbnRlbF9k
cC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJdmFsICY9IEVEUF9QU1JfRVJST1IoMCk7CiAJfSBlbHNl
IHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9JSVIpOwotCQl2YWwg
Jj0gRURQX1BTUl9FUlJPUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCQl2YWwgJj0gRURQ
X1BTUl9FUlJPUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCX0KIAlpZiAodmFsKSB7Ci0J
CWRldl9wcml2LT5wc3Iuc2lua19ub3RfcmVsaWFibGUgPSB0cnVlOworCQlpbnRlbF9kcC0+cHNy
LnNpbmtfbm90X3JlbGlhYmxlID0gdHJ1ZTsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0s
CiAJCQkgICAgIlBTUiBpbnRlcnJ1cHRpb24gZXJyb3Igc2V0LCBub3QgZW5hYmxpbmcgUFNSXG4i
KTsKIAkJcmV0dXJuOwogCX0KIAogCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiRW5hYmxp
bmcgUFNSJXNcbiIsCi0JCSAgICBkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCA/ICIyIiA6ICIx
Iik7CisJCSAgICBpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCA/ICIyIiA6ICIxIik7CiAJaW50
ZWxfZHBfY29tcHV0ZV9wc3JfdnNjX3NkcChpbnRlbF9kcCwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0
ZSwKLQkJCQkgICAgICZkZXZfcHJpdi0+cHNyLnZzYyk7Ci0JaW50ZWxfd3JpdGVfZHBfdnNjX3Nk
cChlbmNvZGVyLCBjcnRjX3N0YXRlLCAmZGV2X3ByaXYtPnBzci52c2MpOworCQkJCSAgICAgJmlu
dGVsX2RwLT5wc3IudnNjKTsKKwlpbnRlbF93cml0ZV9kcF92c2Nfc2RwKGVuY29kZXIsIGNydGNf
c3RhdGUsICZpbnRlbF9kcC0+cHNyLnZzYyk7CiAJaW50ZWxfcHNyX2VuYWJsZV9zaW5rKGludGVs
X2RwKTsKIAlpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShpbnRlbF9kcCwgY3J0Y19zdGF0ZSk7Ci0J
ZGV2X3ByaXYtPnBzci5lbmFibGVkID0gdHJ1ZTsKKwlpbnRlbF9kcC0+cHNyLmVuYWJsZWQgPSB0
cnVlOwogCiAJaW50ZWxfcHNyX2FjdGl2YXRlKGludGVsX2RwKTsKIH0KQEAgLTEwMjEsNTYgKzEw
MTYsNTcgQEAgdm9pZCBpbnRlbF9wc3JfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAs
CiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRl
bF9kcCk7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8IGRldl9wcml2LT5wc3IuZHAgIT0g
aW50ZWxfZHApCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCi0JZGV2X3By
aXYtPnBzci5mb3JjZV9tb2RlX2NoYW5nZWQgPSBmYWxzZTsKKwlpbnRlbF9kcC0+cHNyLmZvcmNl
X21vZGVfY2hhbmdlZCA9IGZhbHNlOwogCiAJaWYgKCFjcnRjX3N0YXRlLT5oYXNfcHNyKQogCQly
ZXR1cm47CiAKIAlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgZGV2X3ByaXYtPmRycnMuZHAp
OwogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQlpbnRlbF9wc3JfZW5hYmxl
X2xvY2tlZChkZXZfcHJpdiwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7Ci0JbXV0ZXhfdW5sb2Nr
KCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7
CisJaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoaW50ZWxfZHAsIGNydGNfc3RhdGUsIGNvbm5fc3Rh
dGUpOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAotc3RhdGljIHZv
aWQgaW50ZWxfcHNyX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3Rh
dGljIHZvaWQgaW50ZWxfcHNyX2V4aXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKKwlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsK
IAl1MzIgdmFsOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmFjdGl2ZSkgewotCQlpZiAodHJhbnNj
b2Rlcl9oYXNfcHNyMihkZXZfcHJpdiwgZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkgeworCWlm
ICghaW50ZWxfZHAtPnBzci5hY3RpdmUpIHsKKwkJaWYgKHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2
X3ByaXYsIGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpIHsKIAkJCXZhbCA9IGludGVsX2RlX3Jl
YWQoZGV2X3ByaXYsCi0JCQkJCSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2Nv
ZGVyKSk7CisJCQkJCSAgICBFRFBfUFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7
CiAJCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgdmFsICYgRURQX1BTUjJfRU5BQkxFKTsK
IAkJfQogCiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1Jf
Q1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAgICBFRFBfUFNSX0NUTChpbnRl
bF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIHZh
bCAmIEVEUF9QU1JfRU5BQkxFKTsKIAogCQlyZXR1cm47CiAJfQogCi0JaWYgKGRldl9wcml2LT5w
c3IucHNyMl9lbmFibGVkKSB7Ci0JCXRnbF9kaXNhbGxvd19kYzNjb19vbl9wc3IyX2V4aXQoZGV2
X3ByaXYpOworCWlmIChpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkgeworCQl0Z2xfZGlzYWxs
b3dfZGMzY29fb25fcHNyMl9leGl0KGludGVsX2RwKTsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChk
ZXZfcHJpdiwKLQkJCQkgICAgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcikp
OworCQkJCSAgICBFRFBfUFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCWRy
bV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCAhKHZhbCAmIEVEUF9QU1IyX0VOQUJMRSkpOwogCQl2
YWwgJj0gfkVEUF9QU1IyX0VOQUJMRTsKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkg
ICAgICAgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIHZhbCk7CisJCQkg
ICAgICAgRURQX1BTUjJfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksIHZhbCk7CiAJfSBl
bHNlIHsKIAkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkgICAgRURQX1BTUl9D
VEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1JfQ1RMKGludGVs
X2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgISh2
YWwgJiBFRFBfUFNSX0VOQUJMRSkpOwogCQl2YWwgJj0gfkVEUF9QU1JfRU5BQkxFOwogCQlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwKLQkJCSAgICAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNy
LnRyYW5zY29kZXIpLCB2YWwpOworCQkJICAgICAgIEVEUF9QU1JfQ1RMKGludGVsX2RwLT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CiAJfQotCWRldl9wcml2LT5wc3IuYWN0aXZlID0gZmFsc2U7CisJ
aW50ZWxfZHAtPnBzci5hY3RpdmUgPSBmYWxzZTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNy
X2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCkBAIC0xMDc5LDIxICsx
MDc1LDIxIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQogCWk5MTVfcmVnX3QgcHNyX3N0YXR1czsKIAl1MzIgcHNyX3N0YXR1
c19tYXNrOwogCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwls
b2NrZGVwX2Fzc2VydF9oZWxkKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCi0JaWYgKCFkZXZfcHJp
di0+cHNyLmVuYWJsZWQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLmVuYWJsZWQpCiAJCXJldHVybjsK
IAogCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiRGlzYWJsaW5nIFBTUiVzXG4iLAotCQkg
ICAgZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgPyAiMiIgOiAiMSIpOworCQkgICAgaW50ZWxf
ZHAtPnBzci5wc3IyX2VuYWJsZWQgPyAiMiIgOiAiMSIpOwogCi0JaW50ZWxfcHNyX2V4aXQoZGV2
X3ByaXYpOworCWludGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIAotCWlmIChkZXZfcHJpdi0+cHNy
LnBzcjJfZW5hYmxlZCkgewotCQlwc3Jfc3RhdHVzID0gRURQX1BTUjJfU1RBVFVTKGRldl9wcml2
LT5wc3IudHJhbnNjb2Rlcik7CisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJ
CXBzcl9zdGF0dXMgPSBFRFBfUFNSMl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsK
IAkJcHNyX3N0YXR1c19tYXNrID0gRURQX1BTUjJfU1RBVFVTX1NUQVRFX01BU0s7CiAJfSBlbHNl
IHsKLQkJcHNyX3N0YXR1cyA9IEVEUF9QU1JfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rl
cik7CisJCXBzcl9zdGF0dXMgPSBFRFBfUFNSX1NUQVRVUyhpbnRlbF9kcC0+cHNyLnRyYW5zY29k
ZXIpOwogCQlwc3Jfc3RhdHVzX21hc2sgPSBFRFBfUFNSX1NUQVRVU19TVEFURV9NQVNLOwogCX0K
IApAQCAtMTEwMyw3ICsxMDk5LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9j
a2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCWRybV9lcnIoJmRldl9wcml2LT5kcm0s
ICJUaW1lZCBvdXQgd2FpdGluZyBQU1IgaWRsZSBzdGF0ZVxuIik7CiAKIAkvKiBXQSAxNDA4MzMw
ODQ3ICovCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCAmJgorCWlm
IChpbnRlbF9kcC0+cHNyLnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQgJiYKIAkgICAgKElTX1RHTF9E
SVNQX1JFVklEKGRldl9wcml2LCBUR0xfUkVWSURfQTAsIFRHTF9SRVZJRF9BMCkgfHwKIAkgICAg
IElTX1JLTF9SRVZJRChkZXZfcHJpdiwgUktMX1JFVklEX0EwLCBSS0xfUkVWSURfQTApKSkKIAkJ
aW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElDS0VOX1BBUjFfMSwKQEAgLTExMTIsMTAgKzExMDgs
MTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2FibGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiAJLyogRGlzYWJsZSBQU1Igb24gU2luayAqLwogCWRybV9kcF9kcGNkX3dy
aXRlYigmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX0VOX0NGRywgMCk7CiAKLQlpZiAoZGV2X3ByaXYt
PnBzci5wc3IyX2VuYWJsZWQpCisJaWYgKGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKQogCQlk
cm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1JFQ0VJVkVSX0FMUE1fQ09ORklH
LCAwKTsKIAotCWRldl9wcml2LT5wc3IuZW5hYmxlZCA9IGZhbHNlOworCWludGVsX2RwLT5wc3Iu
ZW5hYmxlZCA9IGZhbHNlOwogfQogCiAvKioKQEAgLTExMzMsMjAgKzExMjksMjIgQEAgdm9pZCBp
bnRlbF9wc3JfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCWlmICghb2xkX2Ny
dGNfc3RhdGUtPmhhc19wc3IpCiAJCXJldHVybjsKIAotCWlmIChkcm1fV0FSTl9PTigmZGV2X3By
aXYtPmRybSwgIUNBTl9QU1IoZGV2X3ByaXYpKSkKKwlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2
LT5kcm0sICFDQU5fUFNSKGludGVsX2RwKSkpCiAJCXJldHVybjsKIAotCW11dGV4X2xvY2soJmRl
dl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAog
CWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChpbnRlbF9kcCk7CiAKLQltdXRleF91bmxvY2soJmRl
dl9wcml2LT5wc3IubG9jayk7Ci0JY2FuY2VsX3dvcmtfc3luYygmZGV2X3ByaXYtPnBzci53b3Jr
KTsKLQljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmRldl9wcml2LT5wc3IuZGMzY29fd29yayk7
CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOworCWNhbmNlbF93b3JrX3N5bmMo
JmludGVsX2RwLT5wc3Iud29yayk7CisJY2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZpbnRlbF9k
cC0+cHNyLmRjM2NvX3dvcmspOwogfQogCi1zdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tp
bmdfZXhpdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBw
c3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewor
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHAp
OworCiAJaWYgKElTX1RJR0VSTEFLRShkZXZfcHJpdikpCiAJCS8qCiAJCSAqIFdyaXRlcyB0byBD
VVJTVVJGTElWRSBpbiBUR0wgYXJlIGNhdXNpbmcgSU9NTVUgZXJyb3JzIGFuZApAQCAtMTE2MCw3
ICsxMTU4LDcgQEAgc3RhdGljIHZvaWQgcHNyX2ZvcmNlX2h3X3RyYWNraW5nX2V4aXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkgKiBTbyB1c2luZyB0aGlzIHdvcmthcm91
bmQgdW50aWwgdGhpcyBpc3N1ZSBpcyByb290IGNhdXNlZAogCQkgKiBhbmQgYSBiZXR0ZXIgZml4
IGlzIGZvdW5kLgogCQkgKi8KLQkJaW50ZWxfcHNyX2V4aXQoZGV2X3ByaXYpOworCQlpbnRlbF9w
c3JfZXhpdChpbnRlbF9kcCk7CiAJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQog
CQkvKgogCQkgKiBEaXNwbGF5IFdBICMwODg0OiBza2wrCkBAIC0xMTcxLDEzICsxMTY5LDEzIEBA
IHN0YXRpYyB2b2lkIHBzcl9mb3JjZV9od190cmFja2luZ19leGl0KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIAkJICogYnV0IGl0IG1ha2VzIG1vcmUgc2Vuc2Ugd3JpdGUgdG8g
dGhlIGN1cnJlbnQgYWN0aXZlCiAJCSAqIHBpcGUuCiAJCSAqLwotCQlpbnRlbF9kZV93cml0ZShk
ZXZfcHJpdiwgQ1VSU1VSRkxJVkUoZGV2X3ByaXYtPnBzci5waXBlKSwgMCk7CisJCWludGVsX2Rl
X3dyaXRlKGRldl9wcml2LCBDVVJTVVJGTElWRShpbnRlbF9kcC0+cHNyLnBpcGUpLCAwKTsKIAll
bHNlCiAJCS8qCiAJCSAqIEEgd3JpdGUgdG8gQ1VSU1VSRkxJVkUgZG8gbm90IGNhdXNlIEhXIHRy
YWNraW5nIHRvIGV4aXQgUFNSCiAJCSAqIG9uIG9sZGVyIGdlbnMgc28gZG9pbmcgdGhlIG1hbnVh
bCBleGl0IGluc3RlYWQuCiAJCSAqLwotCQlpbnRlbF9wc3JfZXhpdChkZXZfcHJpdik7CisJCWlu
dGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIH0KIAogdm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxh
bmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCkBAIC0xMjEyLDExICsxMjEw
LDExIEBAIHZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3BsYW5lX3NlbF9mZXRjaChzdHJ1Y3QgaW50
ZWxfcGxhbmUgKnBsYW5lLAogCWludGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQTEFORV9TRUxf
RkVUQ0hfU0laRShwaXBlLCBwbGFuZS0+aWQpLCB2YWwpOwogfQogCi12b2lkIGludGVsX3BzcjJf
cHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSkKK3ZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpCiB7Ci0Jc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRl
bF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0Yyk7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7Ci0Jc3RydWN0IGk5MTVfcHNyICpw
c3IgPSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSBkcF90b19pOTE1KGludGVsX2RwKTsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxf
ZHAtPnBzcjsKIAogCWlmICghSEFTX1BTUjJfU0VMX0ZFVENIKGRldl9wcml2KSB8fAogCSAgICAh
Y3J0Y19zdGF0ZS0+ZW5hYmxlX3BzcjJfc2VsX2ZldGNoKQpAQCAtMTMyOCwxNSArMTMyNiwxNSBA
QCB2b2lkIGludGVsX3Bzcl91cGRhdGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAkJICAg
ICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpCiB7CiAJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7Ci0J
c3RydWN0IGk5MTVfcHNyICpwc3IgPSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNy
ICpwc3IgPSAmaW50ZWxfZHAtPnBzcjsKIAlib29sIGVuYWJsZSwgcHNyMl9lbmFibGU7CiAKLQlp
ZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8IFJFQURfT05DRShwc3ItPmRwKSAhPSBpbnRlbF9kcCkK
KwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKQogCQlyZXR1cm47CiAKLQlkZXZfcHJpdi0+cHNyLmZv
cmNlX21vZGVfY2hhbmdlZCA9IGZhbHNlOworCWludGVsX2RwLT5wc3IuZm9yY2VfbW9kZV9jaGFu
Z2VkID0gZmFsc2U7CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4
X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKIAllbmFibGUgPSBjcnRjX3N0YXRlLT5oYXNf
cHNyOwogCXBzcjJfZW5hYmxlID0gY3J0Y19zdGF0ZS0+aGFzX3BzcjI7CkBAIC0xMzQ0LDE1ICsx
MzQyLDE1IEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
LAogCWlmIChlbmFibGUgPT0gcHNyLT5lbmFibGVkICYmIHBzcjJfZW5hYmxlID09IHBzci0+cHNy
Ml9lbmFibGVkKSB7CiAJCS8qIEZvcmNlIGEgUFNSIGV4aXQgd2hlbiBlbmFibGluZyBDUkMgdG8g
YXZvaWQgQ1JDIHRpbWVvdXRzICovCiAJCWlmIChjcnRjX3N0YXRlLT5jcmNfZW5hYmxlZCAmJiBw
c3ItPmVuYWJsZWQpCi0JCQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChkZXZfcHJpdik7CisJ
CQlwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChpbnRlbF9kcCk7CiAJCWVsc2UgaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPCA5ICYmIHBzci0+ZW5hYmxlZCkgewogCQkJLyoKIAkJCSAqIEFjdGl2
YXRlIFBTUiBhZ2FpbiBhZnRlciBhIGZvcmNlIGV4aXQgd2hlbiBlbmFibGluZwogCQkJICogQ1JD
IGluIG9sZGVyIGdlbnMKIAkJCSAqLwotCQkJaWYgKCFkZXZfcHJpdi0+cHNyLmFjdGl2ZSAmJgot
CQkJICAgICFkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKLQkJCQlzY2hlZHVs
ZV93b3JrKCZkZXZfcHJpdi0+cHNyLndvcmspOworCQkJaWYgKCFpbnRlbF9kcC0+cHNyLmFjdGl2
ZSAmJgorCQkJICAgICFpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKKwkJCQlz
Y2hlZHVsZV93b3JrKCZpbnRlbF9kcC0+cHNyLndvcmspOwogCQl9CiAKIAkJZ290byB1bmxvY2s7
CkBAIC0xMzYyLDM0ICsxMzYwLDIzIEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAogCQlpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQoaW50ZWxfZHApOwog
CiAJaWYgKGVuYWJsZSkKLQkJaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoZGV2X3ByaXYsIGNydGNf
c3RhdGUsIGNvbm5fc3RhdGUpOworCQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChpbnRlbF9kcCwg
Y3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7CiAKIHVubG9jazoKLQltdXRleF91bmxvY2soJmRldl9w
cml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogfQog
CiAvKioKLSAqIGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxl
Ci0gKiBAbmV3X2NydGNfc3RhdGU6IG5ldyBDUlRDIHN0YXRlCisgKiBwc3Jfd2FpdF9mb3JfaWRs
ZSAtIHdhaXQgZm9yIFBTUjEgdG8gaWRsZQorICogQGludGVsX2RwOiBJbnRlbCBEUAogICogQG91
dF92YWx1ZTogUFNSIHN0YXR1cyBpbiBjYXNlIG9mIGZhaWx1cmUKICAqCi0gKiBUaGlzIGZ1bmN0
aW9uIGlzIGV4cGVjdGVkIHRvIGJlIGNhbGxlZCBmcm9tIHBpcGVfdXBkYXRlX3N0YXJ0KCkgd2hl
cmUgaXQgaXMKLSAqIG5vdCBleHBlY3RlZCB0byByYWNlIHdpdGggUFNSIGVuYWJsZSBvciBkaXNh
YmxlLgotICoKICAqIFJldHVybnM6IDAgb24gc3VjY2VzcyBvciAtRVRJTUVPVVQgaWYgUFNSIHN0
YXR1cyBkb2VzIG5vdCBpZGxlLgorICoKICAqLwotaW50IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxl
KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwKLQkJCSAgICB1
MzIgKm91dF92YWx1ZSkKK3N0YXRpYyBpbnQgcHNyX3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCwgdTMyICpvdXRfdmFsdWUpCiB7Ci0Jc3RydWN0IGludGVsX2NydGMgKmNy
dGMgPSB0b19pbnRlbF9jcnRjKG5ld19jcnRjX3N0YXRlLT51YXBpLmNydGMpOwotCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwotCi0J
aWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQgfHwgIW5ld19jcnRjX3N0YXRlLT5oYXNfcHNyKQot
CQlyZXR1cm4gMDsKLQotCS8qIEZJWE1FOiBVcGRhdGUgdGhpcyBmb3IgUFNSMiBpZiB3ZSBuZWVk
IHRvIHdhaXQgZm9yIGlkbGUgKi8KLQlpZiAoUkVBRF9PTkNFKGRldl9wcml2LT5wc3IucHNyMl9l
bmFibGVkKSkKLQkJcmV0dXJuIDA7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAKIAkvKgogCSAqIEZyb20gYnNwZWM6IFBhbmVsIFNl
bGYgUmVmcmVzaCAoQkRXKykKQEAgLTEzOTcsMzIgKzEzODQsNjcgQEAgaW50IGludGVsX3Bzcl93
YWl0X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0
ZSwKIAkgKiBleGl0IHRyYWluaW5nIHRpbWUgKyAxLjUgbXMgb2YgYXV4IGNoYW5uZWwgaGFuZHNo
YWtlLiA1MCBtcyBpcwogCSAqIGRlZmVuc2l2ZSBlbm91Z2ggdG8gY292ZXIgZXZlcnl0aGluZy4K
IAkgKi8KLQogCXJldHVybiBfX2ludGVsX3dhaXRfZm9yX3JlZ2lzdGVyKCZkZXZfcHJpdi0+dW5j
b3JlLAotCQkJCQkgRURQX1BTUl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwKKwkJ
CQkJIEVEUF9QU1JfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciksCiAJCQkJCSBFRFBf
UFNSX1NUQVRVU19TVEFURV9NQVNLLAogCQkJCQkgRURQX1BTUl9TVEFUVVNfU1RBVEVfSURMRSwg
MiwgNTAsCiAJCQkJCSBvdXRfdmFsdWUpOwogfQogCi1zdGF0aWMgYm9vbCBfX3Bzcl93YWl0X2Zv
cl9pZGxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCisvKioKKyAq
IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlIC0gd2FpdCBmb3IgUFNSMSB0byBpZGxlCisgKiBAbmV3
X2NydGNfc3RhdGU6IG5ldyBDUlRDIHN0YXRlCisgKgorICogVGhpcyBmdW5jdGlvbiBpcyBleHBl
Y3RlZCB0byBiZSBjYWxsZWQgZnJvbSBwaXBlX3VwZGF0ZV9zdGFydCgpIHdoZXJlIGl0IGlzCisg
KiBub3QgZXhwZWN0ZWQgdG8gcmFjZSB3aXRoIFBTUiBlbmFibGUgb3IgZGlzYWJsZS4KKyAqLwor
dm9pZCBpbnRlbF9wc3Jfd2FpdF9mb3JfaWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqbmV3X2NydGNfc3RhdGUpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShuZXdfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOworCXN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyOworCXUzMiBwc3Jfc3RhdHVzOworCisJaWYgKCFuZXdfY3J0Y19z
dGF0ZS0+aGFzX3BzcikKKwkJcmV0dXJuOworCisJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2
LT5kcm0sIGVuY29kZXIpIHsKKwkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19p
bnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAoZW5jb2Rlci0+dHlwZSAhPSBJTlRFTF9PVVRQVVRf
RURQKQorCQkJY29udGludWU7CisKKwkJLyogd2hlbiB0aGUgUFNSMSBpcyBlbmFibGVkICovCisJ
CWlmIChpbnRlbF9kcC0+cHNyLmVuYWJsZWQgJiYgIWludGVsX2RwLT5wc3IucHNyMl9lbmFibGVk
KSB7CisJCQlpZiAocHNyX3dhaXRfZm9yX2lkbGUoaW50ZWxfZHAsICZwc3Jfc3RhdHVzKSkKKwkJ
CQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLAorCQkJCQkiUFNSIGlkbGUgdGltZWQgb3V0IDB4JXgs
IGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCisJCQkJCXBzcl9zdGF0dXMpOworCisJCQkvKiBv
bmx5IG9uZSB0cmFuY29kZXIgY2FuIGVuYWJsZSBQU1IxICovCisJCQlicmVhazsKKwkJfQorCX0K
K30KKworc3RhdGljIGJvb2wgX19wc3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKIHsKIAlpOTE1X3JlZ190IHJlZzsKIAl1MzIgbWFzazsKIAlpbnQgZXJy
OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxf
ZHApOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQpCisJaWYgKCFpbnRlbF9kcC0+cHNy
LmVuYWJsZWQpCiAJCXJldHVybiBmYWxzZTsKIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5h
YmxlZCkgewotCQlyZWcgPSBFRFBfUFNSMl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVy
KTsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwkJcmVnID0gRURQX1BTUjJf
U1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcik7CiAJCW1hc2sgPSBFRFBfUFNSMl9TVEFU
VVNfU1RBVEVfTUFTSzsKIAl9IGVsc2UgewotCQlyZWcgPSBFRFBfUFNSX1NUQVRVUyhkZXZfcHJp
di0+cHNyLnRyYW5zY29kZXIpOworCQlyZWcgPSBFRFBfUFNSX1NUQVRVUyhpbnRlbF9kcC0+cHNy
LnRyYW5zY29kZXIpOwogCQltYXNrID0gRURQX1BTUl9TVEFUVVNfU1RBVEVfTUFTSzsKIAl9CiAK
LQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRl
bF9kcC0+cHNyLmxvY2spOwogCiAJZXJyID0gaW50ZWxfZGVfd2FpdF9mb3JfY2xlYXIoZGV2X3By
aXYsIHJlZywgbWFzaywgNTApOwogCWlmIChlcnIpCkBAIC0xNDMwLDggKzE0NTIsOCBAQCBzdGF0
aWMgYm9vbCBfX3Bzcl93YWl0X2Zvcl9pZGxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCiAJCQkiVGltZWQgb3V0IHdhaXRpbmcgZm9yIFBTUiBJZGxlIGZvciByZS1l
bmFibGVcbiIpOwogCiAJLyogQWZ0ZXIgdGhlIHVubG9ja2VkIHdhaXQsIHZlcmlmeSB0aGF0IFBT
UiBpcyBzdGlsbCB3YW50ZWQhICovCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsK
LQlyZXR1cm4gZXJyID09IDAgJiYgZGV2X3ByaXYtPnBzci5lbmFibGVkOworCW11dGV4X2xvY2so
JmludGVsX2RwLT5wc3IubG9jayk7CisJcmV0dXJuIGVyciA9PSAwICYmIGludGVsX2RwLT5wc3Iu
ZW5hYmxlZDsKIH0KIAogc3RhdGljIGludCBpbnRlbF9wc3JfZmFzdHNldF9mb3JjZShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCkBAIC0xNDk3LDExICsxNTE5LDEyIEBAIHN0YXRp
YyBpbnQgaW50ZWxfcHNyX2Zhc3RzZXRfZm9yY2Uoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogCXJldHVybiBlcnI7CiB9CiAKLWludCBpbnRlbF9wc3JfZGVidWdfc2V0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTY0IHZhbCkKK2ludCBpbnRlbF9wc3JfZGVi
dWdfc2V0KHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHU2NCB2YWwpCiB7CiAJY29uc3QgdTMy
IG1vZGUgPSB2YWwgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0s7CiAJdTMyIG9sZF9tb2RlOwog
CWludCByZXQ7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkx
NShpbnRlbF9kcCk7CiAKIAlpZiAodmFsICYgfihJOTE1X1BTUl9ERUJVR19JUlEgfCBJOTE1X1BT
Ul9ERUJVR19NT0RFX01BU0spIHx8CiAJICAgIG1vZGUgPiBJOTE1X1BTUl9ERUJVR19GT1JDRV9Q
U1IxKSB7CkBAIC0xNTA5LDIxICsxNTMyLDIxIEBAIGludCBpbnRlbF9wc3JfZGVidWdfc2V0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTY0IHZhbCkKIAkJcmV0dXJuIC1FSU5W
QUw7CiAJfQogCi0JcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZkZXZfcHJpdi0+cHNy
LmxvY2spOworCXJldCA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmaW50ZWxfZHAtPnBzci5s
b2NrKTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0Jb2xkX21vZGUgPSBkZXZfcHJpdi0+
cHNyLmRlYnVnICYgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLOwotCWRldl9wcml2LT5wc3IuZGVi
dWcgPSB2YWw7CisJb2xkX21vZGUgPSBpbnRlbF9kcC0+cHNyLmRlYnVnICYgSTkxNV9QU1JfREVC
VUdfTU9ERV9NQVNLOworCWludGVsX2RwLT5wc3IuZGVidWcgPSB2YWw7CiAKIAkvKgogCSAqIERv
IGl0IHJpZ2h0IGF3YXkgaWYgaXQncyBhbHJlYWR5IGVuYWJsZWQsIG90aGVyd2lzZSBpdCB3aWxs
IGJlIGRvbmUKIAkgKiB3aGVuIGVuYWJsaW5nIHRoZSBzb3VyY2UuCiAJICovCi0JaWYgKGRldl9w
cml2LT5wc3IuZW5hYmxlZCkKLQkJcHNyX2lycV9jb250cm9sKGRldl9wcml2KTsKKwlpZiAoaW50
ZWxfZHAtPnBzci5lbmFibGVkKQorCQlwc3JfaXJxX2NvbnRyb2woaW50ZWxfZHApOwogCi0JbXV0
ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAt
PnBzci5sb2NrKTsKIAogCWlmIChvbGRfbW9kZSAhPSBtb2RlKQogCQlyZXQgPSBpbnRlbF9wc3Jf
ZmFzdHNldF9mb3JjZShkZXZfcHJpdik7CkBAIC0xNTMxLDI4ICsxNTU0LDI4IEBAIGludCBpbnRl
bF9wc3JfZGVidWdfc2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTY0IHZh
bCkKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBpbnRlbF9wc3JfaGFuZGxlX2lycShz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBpbnRlbF9wc3Jf
aGFuZGxlX2lycShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewotCXN0cnVjdCBpOTE1X3Bz
ciAqcHNyID0gJmRldl9wcml2LT5wc3I7CisJc3RydWN0IGludGVsX3BzciAqcHNyID0gJmludGVs
X2RwLT5wc3I7CiAKLQlpbnRlbF9wc3JfZGlzYWJsZV9sb2NrZWQocHNyLT5kcCk7CisJaW50ZWxf
cHNyX2Rpc2FibGVfbG9ja2VkKGludGVsX2RwKTsKIAlwc3ItPnNpbmtfbm90X3JlbGlhYmxlID0g
dHJ1ZTsKIAkvKiBsZXQncyBtYWtlIHN1cmUgdGhhdCBzaW5rIGlzIGF3YWtlbiAqLwotCWRybV9k
cF9kcGNkX3dyaXRlYigmcHNyLT5kcC0+YXV4LCBEUF9TRVRfUE9XRVIsIERQX1NFVF9QT1dFUl9E
MCk7CisJZHJtX2RwX2RwY2Rfd3JpdGViKCZpbnRlbF9kcC0+YXV4LCBEUF9TRVRfUE9XRVIsIERQ
X1NFVF9QT1dFUl9EMCk7CiB9CiAKIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93b3JrKHN0cnVjdCB3
b3JrX3N0cnVjdCAqd29yaykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PQotCQljb250YWluZXJfb2Yod29yaywgdHlwZW9mKCpkZXZfcHJpdiksIHBzci53b3JrKTsKKwlz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0KKwkJY29udGFpbmVyX29mKHdvcmssIHR5cGVvZigq
aW50ZWxfZHApLCBwc3Iud29yayk7CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2sp
OworCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiAKLQlpZiAoIWRldl9wcml2LT5w
c3IuZW5hYmxlZCkKKwlpZiAoIWludGVsX2RwLT5wc3IuZW5hYmxlZCkKIAkJZ290byB1bmxvY2s7
CiAKLQlpZiAoUkVBRF9PTkNFKGRldl9wcml2LT5wc3IuaXJxX2F1eF9lcnJvcikpCi0JCWludGVs
X3Bzcl9oYW5kbGVfaXJxKGRldl9wcml2KTsKKwlpZiAoUkVBRF9PTkNFKGludGVsX2RwLT5wc3Iu
aXJxX2F1eF9lcnJvcikpCisJCWludGVsX3Bzcl9oYW5kbGVfaXJxKGludGVsX2RwKTsKIAogCS8q
CiAJICogV2UgaGF2ZSB0byBtYWtlIHN1cmUgUFNSIGlzIHJlYWR5IGZvciByZS1lbmFibGUKQEAg
LTE1NjAsNyArMTU4Myw3IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93b3JrKHN0cnVjdCB3b3Jr
X3N0cnVjdCAqd29yaykKIAkgKiBQU1IgbWlnaHQgdGFrZSBzb21lIHRpbWUgdG8gZ2V0IGZ1bGx5
IGRpc2FibGVkCiAJICogYW5kIGJlIHJlYWR5IGZvciByZS1lbmFibGUuCiAJICovCi0JaWYgKCFf
X3Bzcl93YWl0X2Zvcl9pZGxlX2xvY2tlZChkZXZfcHJpdikpCisJaWYgKCFfX3Bzcl93YWl0X2Zv
cl9pZGxlX2xvY2tlZChpbnRlbF9kcCkpCiAJCWdvdG8gdW5sb2NrOwogCiAJLyoKQEAgLTE1Njgs
MTIgKzE1OTEsMTIgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3b3JrKQogCSAqIHJlY2hlY2suIFNpbmNlIHBzcl9mbHVzaCBmaXJzdCBjbGVhcnMgdGhp
cyBhbmQgdGhlbiByZXNjaGVkdWxlcyB3ZQogCSAqIHdvbid0IGV2ZXIgbWlzcyBhIGZsdXNoIHdo
ZW4gYmFpbGluZyBvdXQgaGVyZS4KIAkgKi8KLQlpZiAoZGV2X3ByaXYtPnBzci5idXN5X2Zyb250
YnVmZmVyX2JpdHMgfHwgZGV2X3ByaXYtPnBzci5hY3RpdmUpCisJaWYgKGludGVsX2RwLT5wc3Iu
YnVzeV9mcm9udGJ1ZmZlcl9iaXRzIHx8IGludGVsX2RwLT5wc3IuYWN0aXZlKQogCQlnb3RvIHVu
bG9jazsKIAotCWludGVsX3Bzcl9hY3RpdmF0ZShkZXZfcHJpdi0+cHNyLmRwKTsKKwlpbnRlbF9w
c3JfYWN0aXZhdGUoaW50ZWxfZHApOwogdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYt
PnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiB9CiAKIC8q
KgpAQCAtMTU5MiwyNyArMTYxNSwzNSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jfd29yayhzdHJ1
Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiB2b2lkIGludGVsX3Bzcl9pbnZhbGlkYXRlKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0
cywgZW51bSBmYl9vcF9vcmlnaW4gb3JpZ2luKQogewotCWlmICghQ0FOX1BTUihkZXZfcHJpdikp
Ci0JCXJldHVybjsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwlzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwOwogCi0JaWYgKG9yaWdpbiA9PSBPUklHSU5fRkxJUCkKLQkJcmV0dXJu
OworCWZvcl9lYWNoX2ludGVsX2RwKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CiAKLQltdXRl
eF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVk
KSB7Ci0JCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQkJcmV0dXJuOwotCX0K
KwkJaW50ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisJCWlmIChlbmNvZGVyLT50
eXBlICE9IElOVEVMX09VVFBVVF9FRFApCisJCQljb250aW51ZTsKKwkJaWYgKCFDQU5fUFNSKGlu
dGVsX2RwKSkKKwkJCWNvbnRpbnVlOwogCi0JZnJvbnRidWZmZXJfYml0cyAmPSBJTlRFTF9GUk9O
VEJVRkZFUl9BTExfTUFTSyhkZXZfcHJpdi0+cHNyLnBpcGUpOwotCWRldl9wcml2LT5wc3IuYnVz
eV9mcm9udGJ1ZmZlcl9iaXRzIHw9IGZyb250YnVmZmVyX2JpdHM7CisJCWlmIChvcmlnaW4gPT0g
T1JJR0lOX0ZMSVApCisJCQljb250aW51ZTsKIAotCWlmIChmcm9udGJ1ZmZlcl9iaXRzKQotCQlp
bnRlbF9wc3JfZXhpdChkZXZfcHJpdik7CisJCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9j
ayk7CisJCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKSB7CisJCQltdXRleF91bmxvY2soJmlu
dGVsX2RwLT5wc3IubG9jayk7CisJCQljb250aW51ZTsKKwkJfQogCi0JbXV0ZXhfdW5sb2NrKCZk
ZXZfcHJpdi0+cHNyLmxvY2spOwotfQorCQlmcm9udGJ1ZmZlcl9iaXRzICY9IElOVEVMX0ZST05U
QlVGRkVSX0FMTF9NQVNLKGludGVsX2RwLT5wc3IucGlwZSk7CisJCWludGVsX2RwLT5wc3IuYnVz
eV9mcm9udGJ1ZmZlcl9iaXRzIHw9IGZyb250YnVmZmVyX2JpdHM7CiAKKwkJaWYgKGZyb250YnVm
ZmVyX2JpdHMpCisJCQlpbnRlbF9wc3JfZXhpdChpbnRlbF9kcCk7CisKKwkJbXV0ZXhfdW5sb2Nr
KCZpbnRlbF9kcC0+cHNyLmxvY2spOworCX0KK30KIC8qCiAgKiBXaGVuIHdlIHdpbGwgYmUgY29t
cGxldGVseSByZWx5IG9uIFBTUjIgUy9XIHRyYWNraW5nIGluIGZ1dHVyZSwKICAqIGludGVsX3Bz
cl9mbHVzaCgpIHdpbGwgaW52YWxpZGF0ZSBhbmQgZmx1c2ggdGhlIFBTUiBmb3IgT1JJR0lOX0ZM
SVAKQEAgLTE2MjAsMTUgKzE2NTEsMTUgQEAgdm9pZCBpbnRlbF9wc3JfaW52YWxpZGF0ZShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAgKiBhY2NvcmRpbmdseSBpbiBmdXR1cmUu
CiAgKi8KIHN0YXRpYyB2b2lkCi10Z2xfZGMzY29fZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAotCQl1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0cywgZW51bSBmYl9v
cF9vcmlnaW4gb3JpZ2luKQordGdsX2RjM2NvX2ZsdXNoKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsIHVuc2lnbmVkIGludCBmcm9udGJ1ZmZlcl9iaXRzLAorCQllbnVtIGZiX29wX29yaWdpbiBv
cmlnaW4pCiB7Ci0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF9sb2Nr
KCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmRjM2NvX2VuYWJs
ZWQpCisJaWYgKCFpbnRlbF9kcC0+cHNyLmRjM2NvX2VuYWJsZWQpCiAJCWdvdG8gdW5sb2NrOwog
Ci0JaWYgKCFkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCB8fCAhZGV2X3ByaXYtPnBzci5hY3Rp
dmUpCisJaWYgKCFpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCB8fCAhaW50ZWxfZHAtPnBzci5h
Y3RpdmUpCiAJCWdvdG8gdW5sb2NrOwogCiAJLyoKQEAgLTE2MzYsMTUgKzE2NjcsMTUgQEAgdGds
X2RjM2NvX2ZsdXNoKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkgKiB3aGVu
IGRlbGF5ZWQgd29yayBzY2hlZHVsZXMgdGhhdCBtZWFucyBkaXNwbGF5IGhhcyBiZWVuIGlkbGUu
CiAJICovCiAJaWYgKCEoZnJvbnRidWZmZXJfYml0cyAmCi0JICAgIElOVEVMX0ZST05UQlVGRkVS
X0FMTF9NQVNLKGRldl9wcml2LT5wc3IucGlwZSkpKQorCSAgICBJTlRFTF9GUk9OVEJVRkZFUl9B
TExfTUFTSyhpbnRlbF9kcC0+cHNyLnBpcGUpKSkKIAkJZ290byB1bmxvY2s7CiAKLQl0Z2xfcHNy
Ml9lbmFibGVfZGMzY28oZGV2X3ByaXYpOwotCW1vZF9kZWxheWVkX3dvcmsoc3lzdGVtX3dxLCAm
ZGV2X3ByaXYtPnBzci5kYzNjb193b3JrLAotCQkJIGRldl9wcml2LT5wc3IuZGMzY29fZXhpdF9k
ZWxheSk7CisJdGdsX3BzcjJfZW5hYmxlX2RjM2NvKGludGVsX2RwKTsKKwltb2RfZGVsYXllZF93
b3JrKHN5c3RlbV93cSwgJmludGVsX2RwLT5wc3IuZGMzY29fd29yaywKKwkJCSBpbnRlbF9kcC0+
cHNyLmRjM2NvX2V4aXRfZGVsYXkpOwogCiB1bmxvY2s6Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJp
di0+cHNyLmxvY2spOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAog
LyoqCkBAIC0xNjYzLDQ1ICsxNjk0LDU1IEBAIHRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiB2b2lkIGludGVsX3Bzcl9mbHVzaChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCSAgICAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0cywg
ZW51bSBmYl9vcF9vcmlnaW4gb3JpZ2luKQogewotCWlmICghQ0FOX1BTUihkZXZfcHJpdikpCi0J
CXJldHVybjsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwlzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwOwogCi0JaWYgKG9yaWdpbiA9PSBPUklHSU5fRkxJUCkgewotCQl0Z2xfZGMz
Y29fZmx1c2goZGV2X3ByaXYsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdpbik7Ci0JCXJldHVybjsK
LQl9CisJZm9yX2VhY2hfaW50ZWxfZHAoJmRldl9wcml2LT5kcm0sIGVuY29kZXIpIHsKKwkJaW50
ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CiAKLQltdXRleF9sb2NrKCZkZXZfcHJp
di0+cHNyLmxvY2spOwotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVkKSB7Ci0JCW11dGV4X3Vu
bG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKLQkJcmV0dXJuOwotCX0KKwkJaWYgKGVuY29kZXIt
PnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCAmJiBDQU5fUFNSKGludGVsX2RwKSkgeworCisJCQlp
ZiAob3JpZ2luID09IE9SSUdJTl9GTElQKSB7CisJCQkJdGdsX2RjM2NvX2ZsdXNoKGludGVsX2Rw
LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4pOworCQkJCWNvbnRpbnVlOworCQkJfQogCi0JZnJv
bnRidWZmZXJfYml0cyAmPSBJTlRFTF9GUk9OVEJVRkZFUl9BTExfTUFTSyhkZXZfcHJpdi0+cHNy
LnBpcGUpOwotCWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzICY9IH5mcm9udGJ1
ZmZlcl9iaXRzOworCQkJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwkJCWlmICgh
aW50ZWxfZHAtPnBzci5lbmFibGVkKSB7CisJCQkJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNy
LmxvY2spOworCQkJCWNvbnRpbnVlOworCQkJfQogCi0JLyogQnkgZGVmaW5pdGlvbiBmbHVzaCA9
IGludmFsaWRhdGUgKyBmbHVzaCAqLwotCWlmIChmcm9udGJ1ZmZlcl9iaXRzKQotCQlwc3JfZm9y
Y2VfaHdfdHJhY2tpbmdfZXhpdChkZXZfcHJpdik7CisJCQlmcm9udGJ1ZmZlcl9iaXRzICY9IElO
VEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGludGVsX2RwLT5wc3IucGlwZSk7CisJCQlpbnRlbF9k
cC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyAmPSB+ZnJvbnRidWZmZXJfYml0czsKIAotCWlm
ICghZGV2X3ByaXYtPnBzci5hY3RpdmUgJiYgIWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZl
cl9iaXRzKQotCQlzY2hlZHVsZV93b3JrKCZkZXZfcHJpdi0+cHNyLndvcmspOwotCW11dGV4X3Vu
bG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwkJCS8qIEJ5IGRlZmluaXRpb24gZmx1c2ggPSBp
bnZhbGlkYXRlICsgZmx1c2ggKi8KKwkJCWlmIChmcm9udGJ1ZmZlcl9iaXRzKQorCQkJCXBzcl9m
b3JjZV9od190cmFja2luZ19leGl0KGludGVsX2RwKTsKKworCQkJaWYgKCFpbnRlbF9kcC0+cHNy
LmFjdGl2ZSAmJiAhaW50ZWxfZHAtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMpCisJCQkJc2No
ZWR1bGVfd29yaygmaW50ZWxfZHAtPnBzci53b3JrKTsKKwkJCW11dGV4X3VubG9jaygmaW50ZWxf
ZHAtPnBzci5sb2NrKTsKKwkJfQorCX0KIH0KIAogLyoqCiAgKiBpbnRlbF9wc3JfaW5pdCAtIElu
aXQgYmFzaWMgUFNSIHdvcmsgYW5kIG11dGV4LgotICogQGRldl9wcml2OiBpOTE1IGRldmljZSBw
cml2YXRlCisgKiBAaW50ZWxfZHA6IEludGVsIERQCiAgKgotICogVGhpcyBmdW5jdGlvbiBpcyAg
Y2FsbGVkIG9ubHkgb25jZSBhdCBkcml2ZXIgbG9hZCB0byBpbml0aWFsaXplIGJhc2ljCi0gKiBQ
U1Igc3R1ZmYuCisgKiBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZnRlciB0aGUgaW5pdGlhbGl6
aW5nIGNvbm5lY3Rvci4KKyAqICh0aGUgaW5pdGlhbGl6aW5nIG9mIGNvbm5lY3RvciB0cmVhdHMg
dGhlIGhhbmRsaW5nIG9mIGNvbm5lY3RvciBjYXBhYmlsaXRpZXMpCisgKiBBbmQgaXQgaW5pdGlh
bGl6ZXMgYmFzaWMgUFNSIHN0dWZmIGZvciBlYWNoIERQIEVuY29kZXIuCiAgKi8KLXZvaWQgaW50
ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQordm9pZCBpbnRl
bF9wc3JfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCiAJaWYgKCFIQVNf
UFNSKGRldl9wcml2KSkKIAkJcmV0dXJuOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLnNpbmtfc3Vw
cG9ydCkKKwlpZiAoIWludGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0KQogCQlyZXR1cm47CiAKIAlp
ZiAoSVNfSEFTV0VMTChkZXZfcHJpdikpCkBAIC0xNzE5LDE0ICsxNzYwLDE0IEBAIHZvaWQgaW50
ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCS8qIFNldCBs
aW5rX3N0YW5kYnkgeCBsaW5rX29mZiBkZWZhdWx0cyAqLwogCWlmIChJU19IQVNXRUxMKGRldl9w
cml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQkvKiBIU1cgYW5kIEJEVyByZXF1aXJl
IHdvcmthcm91bmRzIHRoYXQgd2UgZG9uJ3QgaW1wbGVtZW50LiAqLwotCQlkZXZfcHJpdi0+cHNy
Lmxpbmtfc3RhbmRieSA9IGZhbHNlOworCQlpbnRlbF9kcC0+cHNyLmxpbmtfc3RhbmRieSA9IGZh
bHNlOwogCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMikKIAkJLyogRm9yIG5ldyBw
bGF0Zm9ybXMgdXAgdG8gVEdMIGxldCdzIHJlc3BlY3QgVkJUIGJhY2sgYWdhaW4gKi8KLQkJZGV2
X3ByaXYtPnBzci5saW5rX3N0YW5kYnkgPSBkZXZfcHJpdi0+dmJ0LnBzci5mdWxsX2xpbms7CisJ
CWludGVsX2RwLT5wc3IubGlua19zdGFuZGJ5ID0gZGV2X3ByaXYtPnZidC5wc3IuZnVsbF9saW5r
OwogCi0JSU5JVF9XT1JLKCZkZXZfcHJpdi0+cHNyLndvcmssIGludGVsX3Bzcl93b3JrKTsKLQlJ
TklUX0RFTEFZRURfV09SSygmZGV2X3ByaXYtPnBzci5kYzNjb193b3JrLCB0Z2xfZGMzY29fZGlz
YWJsZV93b3JrKTsKLQltdXRleF9pbml0KCZkZXZfcHJpdi0+cHNyLmxvY2spOworCUlOSVRfV09S
SygmaW50ZWxfZHAtPnBzci53b3JrLCBpbnRlbF9wc3Jfd29yayk7CisJSU5JVF9ERUxBWUVEX1dP
UksoJmludGVsX2RwLT5wc3IuZGMzY29fd29yaywgdGdsX2RjM2NvX2Rpc2FibGVfd29yayk7CisJ
bXV0ZXhfaW5pdCgmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogc3RhdGljIGludCBwc3JfZ2V0
X3N0YXR1c19hbmRfZXJyb3Jfc3RhdHVzKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCkBAIC0x
NzUyLDcgKzE3OTMsNyBAQCBzdGF0aWMgdm9pZCBwc3JfYWxwbV9jaGVjayhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRw
X3RvX2k5MTUoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZHBfYXV4ICphdXggPSAmaW50ZWxfZHAt
PmF1eDsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBp
bnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4IHZhbDsKIAlpbnQgcjsKIApAQCAt
MTc3OSw3ICsxODIwLDcgQEAgc3RhdGljIHZvaWQgcHNyX2FscG1fY2hlY2soc3RydWN0IGludGVs
X2RwICppbnRlbF9kcCkKIHN0YXRpYyB2b2lkIHBzcl9jYXBhYmlsaXR5X2NoYW5nZWRfY2hlY2so
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9
ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNy
OwogCXU4IHZhbDsKIAlpbnQgcjsKIApAQCAtMTgwMywxOCArMTg0NCwxOCBAQCBzdGF0aWMgdm9p
ZCBwc3JfY2FwYWJpbGl0eV9jaGFuZ2VkX2NoZWNrKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
CiB2b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQog
ewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxf
ZHApOwotCXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRldl9wcml2LT5wc3I7CisJc3RydWN0IGlu
dGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7CiAJdTggc3RhdHVzLCBlcnJvcl9zdGF0dXM7
CiAJY29uc3QgdTggZXJyb3JzID0gRFBfUFNSX1JGQl9TVE9SQUdFX0VSUk9SIHwKIAkJCSAgRFBf
UFNSX1ZTQ19TRFBfVU5DT1JSRUNUQUJMRV9FUlJPUiB8CiAJCQkgIERQX1BTUl9MSU5LX0NSQ19F
UlJPUjsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwgIWludGVsX2RwX2lzX2VkcChpbnRl
bF9kcCkpCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSB8fCAhaW50ZWxfZHBfaXNfZWRwKGludGVs
X2RwKSkKIAkJcmV0dXJuOwogCiAJbXV0ZXhfbG9jaygmcHNyLT5sb2NrKTsKIAotCWlmICghcHNy
LT5lbmFibGVkIHx8IHBzci0+ZHAgIT0gaW50ZWxfZHApCisJaWYgKCFwc3ItPmVuYWJsZWQpCiAJ
CWdvdG8gZXhpdDsKIAogCWlmIChwc3JfZ2V0X3N0YXR1c19hbmRfZXJyb3Jfc3RhdHVzKGludGVs
X2RwLCAmc3RhdHVzLCAmZXJyb3Jfc3RhdHVzKSkgewpAQCAtMTg1NywxNSArMTg5OCwxNCBAQCB2
b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCiBi
b29sIGludGVsX3Bzcl9lbmFibGVkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJ
Ym9vbCByZXQ7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8ICFpbnRlbF9kcF9pc19lZHAo
aW50ZWxfZHApKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkgfHwgIWludGVsX2RwX2lzX2VkcChp
bnRlbF9kcCkpCiAJCXJldHVybiBmYWxzZTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3Iu
bG9jayk7Ci0JcmV0ID0gKGRldl9wcml2LT5wc3IuZHAgPT0gaW50ZWxfZHAgJiYgZGV2X3ByaXYt
PnBzci5lbmFibGVkKTsKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0
ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlyZXQgPSBpbnRlbF9kcC0+cHNyLmVuYWJs
ZWQ7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOwogCiAJcmV0dXJuIHJldDsK
IH0KQEAgLTE4NzQsMTggKzE5MTQsMTEgQEAgdm9pZCBpbnRlbF9wc3JfYXRvbWljX2NoZWNrKHN0
cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IsCiAJCQkgICAgc3RydWN0IGRybV9jb25uZWN0
b3Jfc3RhdGUgKm9sZF9zdGF0ZSwKIAkJCSAgICBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAq
bmV3X3N0YXRlKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5
MTUoY29ubmVjdG9yLT5kZXYpOwotCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmludGVsX2Nvbm5l
Y3RvcjsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydDsKIAlzdHJ1Y3QgZHJt
X2NydGNfc3RhdGUgKmNydGNfc3RhdGU7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGlu
dGVsX2F0dGFjaGVkX2RwKHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpKTsKIAotCWlmICgh
Q0FOX1BTUihkZXZfcHJpdikgfHwgIW5ld19zdGF0ZS0+Y3J0YyB8fAotCSAgICAhZGV2X3ByaXYt
PnBzci5mb3JjZV9tb2RlX2NoYW5nZWQpCi0JCXJldHVybjsKLQotCWludGVsX2Nvbm5lY3RvciA9
IHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpOwotCWRpZ19wb3J0ID0gZW5jX3RvX2RpZ19w
b3J0KHRvX2ludGVsX2VuY29kZXIobmV3X3N0YXRlLT5iZXN0X2VuY29kZXIpKTsKLQlpZiAoZGV2
X3ByaXYtPnBzci5kcCAhPSAmZGlnX3BvcnQtPmRwKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkg
fHwgIW5ld19zdGF0ZS0+Y3J0YyB8fAorCSAgICAhaW50ZWxfZHAtPnBzci5mb3JjZV9tb2RlX2No
YW5nZWQpCiAJCXJldHVybjsKIAogCWNydGNfc3RhdGUgPSBkcm1fYXRvbWljX2dldF9uZXdfY3J0
Y19zdGF0ZShuZXdfc3RhdGUtPnN0YXRlLApAQCAtMTg5MywxNiArMTkyNiwxNSBAQCB2b2lkIGlu
dGVsX3Bzcl9hdG9taWNfY2hlY2soc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKIAlj
cnRjX3N0YXRlLT5tb2RlX2NoYW5nZWQgPSB0cnVlOwogfQogCi12b2lkIGludGVsX3Bzcl9zZXRf
Zm9yY2VfbW9kZV9jaGFuZ2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCisvKiBBZnRlciBp
bml0aWFsaXppbmcgUFNSIHNpbmssIGl0IGNoZWNrcyByZXF1aXJpbmcgb2YgbW9kZV9jaGFuZ2Vk
ICovCit2b2lkIGludGVsX3Bzcl9zZXRfZm9yY2VfbW9kZV9jaGFuZ2VkKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdjsK
KwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwOwogCi0JaWYgKCFpbnRlbF9kcCkKLQkJcmV0dXJuOwotCi0JZGV2X3ByaXYgPSBkcF90b19p
OTE1KGludGVsX2RwKTsKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpIHx8IGludGVsX2RwICE9IGRl
dl9wcml2LT5wc3IuZHApCi0JCXJldHVybjsKLQotCWRldl9wcml2LT5wc3IuZm9yY2VfbW9kZV9j
aGFuZ2VkID0gdHJ1ZTsKKwlmb3JfZWFjaF9pbnRlbF9kcCgmaTkxNS0+ZHJtLCBlbmNvZGVyKSB7
CisJCWludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOworCQlpZiAoQ0FOX1BTUihp
bnRlbF9kcCkpCisJCQlpbnRlbF9kcC0+cHNyLmZvcmNlX21vZGVfY2hhbmdlZCA9IHRydWU7CisJ
fQogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3Iu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgKaW5kZXggM2VjYTlk
Y2VjM2MwLi44N2Q3NTQ2YjM0Y2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfcHNyLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9wc3IuaApAQCAtMTgsNyArMTgsNyBAQCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlOwogc3Ry
dWN0IGludGVsX3BsYW5lX3N0YXRlOwogc3RydWN0IGludGVsX3BsYW5lOwogCi0jZGVmaW5lIENB
Tl9QU1IoZGV2X3ByaXYpIChIQVNfUFNSKGRldl9wcml2KSAmJiBkZXZfcHJpdi0+cHNyLnNpbmtf
c3VwcG9ydCkKKyNkZWZpbmUgQ0FOX1BTUihpbnRlbF9kcCkgKEhBU19QU1IoZHBfdG9faTkxNShp
bnRlbF9kcCkpICYmIGludGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0KQogdm9pZCBpbnRlbF9wc3Jf
aW5pdF9kcGNkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwogdm9pZCBpbnRlbF9wc3JfZW5h
YmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLApAQCAtMjgsMjggKzI4LDI4IEBAIHZvaWQgaW50ZWxf
cHNyX2Rpc2FibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIHZvaWQgaW50ZWxfcHNyX3Vw
ZGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgICAgY29uc3Qgc3RydWN0IGRybV9jb25u
ZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUpOwotaW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsdWUpOworaW50IGludGVsX3Bzcl9k
ZWJ1Z19zZXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgdTY0IHZhbHVlKTsKIHZvaWQgaW50
ZWxfcHNyX2ludmFsaWRhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQkJ
ICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLAogCQkJICBlbnVtIGZiX29wX29yaWdpbiBvcmln
aW4pOwogdm9pZCBpbnRlbF9wc3JfZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2LAogCQkgICAgIHVuc2lnbmVkIGZyb250YnVmZmVyX2JpdHMsCiAJCSAgICAgZW51bSBmYl9v
cF9vcmlnaW4gb3JpZ2luKTsKLXZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KTsKK3ZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCk7CiB2b2lkIGludGVsX3Bzcl9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAogCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
Owotdm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LCB1MzIgcHNyX2lpcik7Cit2b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLCB1MzIgcHNyX2lpcik7CiB2b2lkIGludGVsX3Bzcl9zaG9ydF9w
dWxzZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLWludCBpbnRlbF9wc3Jfd2FpdF9mb3Jf
aWRsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUsCi0JCQkg
ICAgdTMyICpvdXRfdmFsdWUpOwordm9pZCBpbnRlbF9wc3Jfd2FpdF9mb3JfaWRsZShjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpOwogYm9vbCBpbnRlbF9wc3Jf
ZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZvaWQgaW50ZWxfcHNyX2F0b21p
Y19jaGVjayhzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCQkJICAgIHN0cnVjdCBk
cm1fY29ubmVjdG9yX3N0YXRlICpvbGRfc3RhdGUsCiAJCQkgICAgc3RydWN0IGRybV9jb25uZWN0
b3Jfc3RhdGUgKm5ld19zdGF0ZSk7Ci12b2lkIGludGVsX3Bzcl9zZXRfZm9yY2VfbW9kZV9jaGFu
Z2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApOwordm9pZCBpbnRlbF9wc3Jfc2V0X2ZvcmNl
X21vZGVfY2hhbmdlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7CiBpbnQgaW50ZWxf
cHNyMl9zZWxfZmV0Y2hfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAog
CQkJCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKLXZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3Ry
YW5zX21hbl90cmtfY3RsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KTsKK3ZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21hbl90cmtfY3RsKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCisJCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpOwogdm9pZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVj
dCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAogCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5l
X3N0YXRlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9z
cHJpdGUuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKaW5k
ZXggYjZkZWViMzM4NDc3Li5jY2Q4NmYxNjgzNTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9zcHJpdGUuYwpAQCAtOTIsNyArOTIsNiBAQCB2b2lkIGludGVsX3BpcGVf
dXBkYXRlX3N0YXJ0KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0
ZSkKIAlib29sIG5lZWRfdmx2X2RzaV93YSA9IChJU19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJ
U19DSEVSUllWSUVXKGRldl9wcml2KSkgJiYKIAkJaW50ZWxfY3J0Y19oYXNfdHlwZShuZXdfY3J0
Y19zdGF0ZSwgSU5URUxfT1VUUFVUX0RTSSk7CiAJREVGSU5FX1dBSVQod2FpdCk7Ci0JdTMyIHBz
cl9zdGF0dXM7CiAKIAlpZiAobmV3X2NydGNfc3RhdGUtPnVhcGkuYXN5bmNfZmxpcCkKIAkJcmV0
dXJuOwpAQCAtMTE3LDEwICsxMTYsNyBAQCB2b2lkIGludGVsX3BpcGVfdXBkYXRlX3N0YXJ0KGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSkKIAkgKiBWQkwgaW50
ZXJydXB0cyB3aWxsIHN0YXJ0IHRoZSBQU1IgZXhpdCBhbmQgcHJldmVudCBhIFBTUgogCSAqIHJl
LWVudHJ5IGFzIHdlbGwuCiAJICovCi0JaWYgKGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKG5ld19j
cnRjX3N0YXRlLCAmcHNyX3N0YXR1cykpCi0JCWRybV9lcnIoJmRldl9wcml2LT5kcm0sCi0JCQki
UFNSIGlkbGUgdGltZWQgb3V0IDB4JXgsIGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCi0JCQlw
c3Jfc3RhdHVzKTsKKwlpbnRlbF9wc3Jfd2FpdF9mb3JfaWRsZShuZXdfY3J0Y19zdGF0ZSk7CiAK
IAlsb2NhbF9pcnFfZGlzYWJsZSgpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCBiY2Q4
NjUwNjAzZDguLjJkOTZiYTc2NmMxMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC00NzUs
NDMgKzQ3NSw2IEBAIHN0cnVjdCBpOTE1X2RycnMgewogCWVudW0gZHJyc19zdXBwb3J0X3R5cGUg
dHlwZTsKIH07CiAKLXN0cnVjdCBpOTE1X3BzciB7Ci0Jc3RydWN0IG11dGV4IGxvY2s7Ci0KLSNk
ZWZpbmUgSTkxNV9QU1JfREVCVUdfTU9ERV9NQVNLCTB4MGYKLSNkZWZpbmUgSTkxNV9QU1JfREVC
VUdfREVGQVVMVAkJMHgwMAotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFCQkweDAxCi0j
ZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0VOQUJMRQkJMHgwMgotI2RlZmluZSBJOTE1X1BTUl9ERUJV
R19GT1JDRV9QU1IxCTB4MDMKLSNkZWZpbmUgSTkxNV9QU1JfREVCVUdfSVJRCQkweDEwCi0KLQl1
MzIgZGVidWc7Ci0JYm9vbCBzaW5rX3N1cHBvcnQ7Ci0JYm9vbCBlbmFibGVkOwotCXN0cnVjdCBp
bnRlbF9kcCAqZHA7Ci0JZW51bSBwaXBlIHBpcGU7Ci0JZW51bSB0cmFuc2NvZGVyIHRyYW5zY29k
ZXI7Ci0JYm9vbCBhY3RpdmU7Ci0Jc3RydWN0IHdvcmtfc3RydWN0IHdvcms7Ci0JdW5zaWduZWQg
YnVzeV9mcm9udGJ1ZmZlcl9iaXRzOwotCWJvb2wgc2lua19wc3IyX3N1cHBvcnQ7Ci0JYm9vbCBs
aW5rX3N0YW5kYnk7Ci0JYm9vbCBjb2xvcmltZXRyeV9zdXBwb3J0OwotCWJvb2wgcHNyMl9lbmFi
bGVkOwotCWJvb2wgcHNyMl9zZWxfZmV0Y2hfZW5hYmxlZDsKLQl1OCBzaW5rX3N5bmNfbGF0ZW5j
eTsKLQlrdGltZV90IGxhc3RfZW50cnlfYXR0ZW1wdDsKLQlrdGltZV90IGxhc3RfZXhpdDsKLQli
b29sIHNpbmtfbm90X3JlbGlhYmxlOwotCWJvb2wgaXJxX2F1eF9lcnJvcjsKLQl1MTYgc3VfeF9n
cmFudWxhcml0eTsKLQlib29sIGRjM2NvX2VuYWJsZWQ7Ci0JdTMyIGRjM2NvX2V4aXRfZGVsYXk7
Ci0Jc3RydWN0IGRlbGF5ZWRfd29yayBkYzNjb193b3JrOwotCWJvb2wgZm9yY2VfbW9kZV9jaGFu
Z2VkOwotCXN0cnVjdCBkcm1fZHBfdnNjX3NkcCB2c2M7Ci19OwotCiAjZGVmaW5lIFFVSVJLX0xW
RFNfU1NDX0RJU0FCTEUgKDE8PDEpCiAjZGVmaW5lIFFVSVJLX0lOVkVSVF9CUklHSFRORVNTICgx
PDwyKQogI2RlZmluZSBRVUlSS19CQUNLTElHSFRfUFJFU0VOVCAoMTw8MykKQEAgLTEwNDIsOCAr
MTAwNSw2IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlIHsKIAogCXN0cnVjdCBpOTE1X3Bvd2Vy
X2RvbWFpbnMgcG93ZXJfZG9tYWluczsKIAotCXN0cnVjdCBpOTE1X3BzciBwc3I7Ci0KIAlzdHJ1
Y3QgaTkxNV9ncHVfZXJyb3IgZ3B1X2Vycm9yOwogCiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKnZsdl9wY3R4OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMKaW5kZXggZTBlYjMyYmQ5NjA3Li42
ZDQzMjk4YzQ2ZGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYwpAQCAtMjA1NywxMCArMjA1Nywy
MCBAQCBzdGF0aWMgdm9pZCBpdmJfZGlzcGxheV9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCiAJCWl2Yl9lcnJfaW50X2hhbmRsZXIoZGV2X3ByaXYpOwogCiAJ
aWYgKGRlX2lpciAmIERFX0VEUF9QU1JfSU5UX0hTVykgewotCQl1MzIgcHNyX2lpciA9IEk5MTVf
UkVBRChFRFBfUFNSX0lJUik7CisJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCi0J
CWludGVsX3Bzcl9pcnFfaGFuZGxlcihkZXZfcHJpdiwgcHNyX2lpcik7Ci0JCUk5MTVfV1JJVEUo
RURQX1BTUl9JSVIsIHBzcl9paXIpOworCQlmb3JfZWFjaF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRy
bSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRl
bF9kcChlbmNvZGVyKTsKKworCQkJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VE
UCAmJgorCQkJICAgIENBTl9QU1IoaW50ZWxfZHApKSB7CisJCQkJdTMyIHBzcl9paXIgPSBJOTE1
X1JFQUQoRURQX1BTUl9JSVIpOworCisJCQkJaW50ZWxfcHNyX2lycV9oYW5kbGVyKGludGVsX2Rw
LCBwc3JfaWlyKTsKKwkJCQlJOTE1X1dSSVRFKEVEUF9QU1JfSUlSLCBwc3JfaWlyKTsKKwkJCQli
cmVhazsKKwkJCX0KKwkJfQogCX0KIAogCWlmIChkZV9paXIgJiBERV9BVVhfQ0hBTk5FTF9BX0lW
QikKQEAgLTIyNjgsMjEgKzIyNzgsMzQgQEAgZ2VuOF9kZV9taXNjX2lycV9oYW5kbGVyKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGlpcikKIAl9CiAKIAlpZiAoaWlyICYg
R0VOOF9ERV9FRFBfUFNSKSB7CisJCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCQl1
MzIgcHNyX2lpcjsKIAkJaTkxNV9yZWdfdCBpaXJfcmVnOwogCi0JCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpID49IDEyKQotCQkJaWlyX3JlZyA9IFRSQU5TX1BTUl9JSVIoZGV2X3ByaXYtPnBzci50
cmFuc2NvZGVyKTsKLQkJZWxzZQotCQkJaWlyX3JlZyA9IEVEUF9QU1JfSUlSOworCQlmb3JfZWFj
aF9pbnRlbF9kcCgmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKIAotCQlwc3JfaWlyID0gSTkx
NV9SRUFEKGlpcl9yZWcpOwotCQlJOTE1X1dSSVRFKGlpcl9yZWcsIHBzcl9paXIpOworCQkJaWYg
KElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIgJiYgQ0FOX1BTUihpbnRlbF9kcCkpIHsKKwkJCQlp
aXJfcmVnID0gVFJBTlNfUFNSX0lJUihpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpOworCQkJfSBl
bHNlIGlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9FRFAgJiYKKwkJCQkgICBDQU5f
UFNSKGludGVsX2RwKSkgeworCQkJCWlpcl9yZWcgPSBFRFBfUFNSX0lJUjsKKwkJCX0gZWxzZSB7
CisJCQkJY29udGludWU7CisJCQl9CisKKwkJCXBzcl9paXIgPSBJOTE1X1JFQUQoaWlyX3JlZyk7
CisJCQlJOTE1X1dSSVRFKGlpcl9yZWcsIHBzcl9paXIpOworCisJCQlpZiAocHNyX2lpcikKKwkJ
CQlmb3VuZCA9IHRydWU7CiAKLQkJaWYgKHBzcl9paXIpCi0JCQlmb3VuZCA9IHRydWU7CisJCQlp
bnRlbF9wc3JfaXJxX2hhbmRsZXIoaW50ZWxfZHAsIHBzcl9paXIpOwogCi0JCWludGVsX3Bzcl9p
cnFfaGFuZGxlcihkZXZfcHJpdiwgcHNyX2lpcik7CisJCQkvKiBwcmlvciBHRU4xMiBvbmx5IGhh
dmUgb25lIEVEUCBQU1IgKi8KKwkJCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgMTIpCisJCQkJ
YnJlYWs7CisJCX0KIAl9CiAKIAlpZiAoIWZvdW5kKQotLSAKMi4yNS4wCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0
CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

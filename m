Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id EA20717339
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 10:09:22 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 673E0895C1;
	Wed,  8 May 2019 08:09:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A352C89565
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 08:09:13 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16485914-1500050 
 for multiple; Wed, 08 May 2019 09:07:08 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 09:06:38 +0100
Message-Id: <20190508080704.24223-14-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-1-chris@chris-wilson.co.uk>
References: <20190508080704.24223-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 14/40] drm/i915: Load balancing across a virtual
 engine
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2aW5nIGFsbG93ZWQgdGhlIHVzZXIgdG8gZGVmaW5lIGEgc2V0IG9mIGVuZ2luZXMgdGhhdCB0
aGV5IHdpbGwgd2FudAp0byBvbmx5IHVzZSwgd2UgZ28gb25lIHN0ZXAgZnVydGhlciBhbmQgYWxs
b3cgdGhlbSB0byBiaW5kIHRob3NlIGVuZ2luZXMKaW50byBhIHNpbmdsZSB2aXJ0dWFsIGluc3Rh
bmNlLiBTdWJtaXR0aW5nIGEgYmF0Y2ggdG8gdGhlIHZpcnR1YWwgZW5naW5lCndpbGwgdGhlbiBm
b3J3YXJkIGl0IHRvIGFueSBvbmUgb2YgdGhlIHNldCBpbiBhIG1hbm5lciBhcyBiZXN0IHRvCmRp
c3RyaWJ1dGUgbG9hZC4gIFRoZSB2aXJ0dWFsIGVuZ2luZSBoYXMgYSBzaW5nbGUgdGltZWxpbmUg
YWNyb3NzIGFsbAplbmdpbmVzIChpdCBvcGVyYXRlcyBhcyBhIHNpbmdsZSBxdWV1ZSksIHNvIGl0
IGlzIG5vdCBhYmxlIHRvIGNvbmN1cnJlbnRseQpydW4gYmF0Y2hlcyBhY3Jvc3MgbXVsdGlwbGUg
ZW5naW5lcyBieSBpdHNlbGY7IHRoYXQgaXMgbGVmdCB1cCB0byB0aGUgdXNlcgp0byBzdWJtaXQg
bXVsdGlwbGUgY29uY3VycmVudCBiYXRjaGVzIHRvIG11bHRpcGxlIHF1ZXVlcy4gTXVsdGlwbGUg
dXNlcnMKd2lsbCBiZSBsb2FkIGJhbGFuY2VkIGFjcm9zcyB0aGUgc3lzdGVtLgoKVGhlIG1lY2hh
bmlzbSB1c2VkIGZvciBsb2FkIGJhbGFuY2luZyBpbiB0aGlzIHBhdGNoIGlzIGEgbGF0ZSBncmVl
ZHkKYmFsYW5jZXIuIFdoZW4gYSByZXF1ZXN0IGlzIHJlYWR5IGZvciBleGVjdXRpb24sIGl0IGlz
IGFkZGVkIHRvIGVhY2gKZW5naW5lJ3MgcXVldWUsIGFuZCB3aGVuIGFuIGVuZ2luZSBpcyByZWFk
eSBmb3IgaXRzIG5leHQgcmVxdWVzdCBpdApjbGFpbXMgaXQgZnJvbSB0aGUgdmlydHVhbCBlbmdp
bmUuIFRoZSBmaXJzdCBlbmdpbmUgdG8gZG8gc28sIHdpbnMsIGkuZS4KdGhlIHJlcXVlc3QgaXMg
ZXhlY3V0ZWQgYXQgdGhlIGVhcmxpZXN0IG9wcG9ydHVuaXR5IChpZGxlIG1vbWVudCkgaW4gdGhl
CnN5c3RlbS4KCkFzIG5vdCBhbGwgSFcgaXMgY3JlYXRlZCBlcXVhbCwgdGhlIHVzZXIgaXMgc3Rp
bGwgYWJsZSB0byBza2lwIHRoZQp2aXJ0dWFsIGVuZ2luZSBhbmQgZXhlY3V0ZSB0aGUgYmF0Y2gg
b24gYSBzcGVjaWZpYyBlbmdpbmUsIGFsbCB3aXRoaW4gdGhlCnNhbWUgcXVldWUuIEl0IHdpbGwg
dGhlbiBiZSBleGVjdXRlZCBpbiBvcmRlciBvbiB0aGUgY29ycmVjdCBlbmdpbmUsCndpdGggZXhl
Y3V0aW9uIG9uIG90aGVyIHZpcnR1YWwgZW5naW5lcyBiZWluZyBtb3ZlZCBhd2F5IGR1ZSB0byB0
aGUgbG9hZApkZXRlY3Rpb24uCgpBIGNvdXBsZSBvZiBhcmVhcyBmb3IgcG90ZW50aWFsIGltcHJv
dmVtZW50IGxlZnQhCgotIFRoZSB2aXJ0dWFsIGVuZ2luZSBhbHdheXMgdGFrZSBwcmlvcml0eSBv
dmVyIGVxdWFsLXByaW9yaXR5IHRhc2tzLgpNb3N0bHkgYnJva2VuIHVwIGJ5IGFwcGx5aW5nIEZR
X0NPREVMIHJ1bGVzIGZvciBwcmlvcml0aXNpbmcgbmV3IGNsaWVudHMsCmFuZCBob3BlZnVsbHkg
dGhlIHZpcnR1YWwgYW5kIHJlYWwgZW5naW5lcyBhcmUgbm90IHRoZW4gY29uZ2VzdGVkIChpLmUu
CmFsbCB3b3JrIGlzIHZpYSB2aXJ0dWFsIGVuZ2luZXMsIG9yIGFsbCB3b3JrIGlzIHRvIHRoZSBy
ZWFsIGVuZ2luZSkuCgotIFdlIHJlcXVpcmUgdGhlIGJyZWFkY3J1bWIgaXJxIGFyb3VuZCBldmVy
eSB2aXJ0dWFsIGVuZ2luZSByZXF1ZXN0LiBGb3IKbm9ybWFsIGVuZ2luZXMsIHdlIGVsaW1pbmF0
ZSB0aGUgbmVlZCBmb3IgdGhlIHNsb3cgcm91bmQgdHJpcCB2aWEKaW50ZXJydXB0IGJ5IHVzaW5n
IHRoZSBzdWJtaXQgZmVuY2UgYW5kIHF1ZXVlaW5nIGluIG9yZGVyLiBGb3IgdmlydHVhbAplbmdp
bmVzLCB3ZSBoYXZlIHRvIGFsbG93IGFueSBqb2IgdG8gdHJhbnNmZXIgdG8gYSBuZXcgcmluZywg
YW5kIGNhbm5vdApjb2FsZXNjZSB0aGUgc3VibWlzc2lvbnMsIHNvIHJlcXVpcmUgdGhlIGNvbXBs
ZXRpb24gZmVuY2UgaW5zdGVhZCwKZm9yY2luZyB0aGUgcGVyc2lzdGVudCB1c2Ugb2YgaW50ZXJy
dXB0cy4KCi0gV2Ugb25seSBkcmlwIGZlZWQgc2luZ2xlIHJlcXVlc3RzIHRocm91Z2ggZWFjaCB2
aXJ0dWFsIGVuZ2luZSBhbmQgb250bwp0aGUgcGh5c2ljYWwgZW5naW5lcywgZXZlbiBpZiB0aGVy
ZSB3YXMgZW5vdWdoIHdvcmsgdG8gZmlsbCBhbGwgRUxTUCwKbGVhdmluZyBzbWFsbCBzdGFsbHMg
d2l0aCBhbiBpZGxlIENTIGV2ZW50IGF0IHRoZSBlbmQgb2YgZXZlcnkgcmVxdWVzdC4KQ291bGQg
d2UgYmUgZ3JlZWR5IGFuZCBmaWxsIGJvdGggc2xvdHM/IEJlaW5nIGxhenkgaXMgdmlydHVvdXMg
Zm9yIGxvYWQKZGlzdHJpYnV0aW9uIG9uIGxlc3MtdGhhbi1mdWxsIHdvcmtsb2FkcyB0aG91Z2gu
CgpPdGhlciBhcmVhcyBvZiBpbXByb3ZlbWVudCBhcmUgbW9yZSBnZW5lcmFsLCBzdWNoIGFzIHJl
ZHVjaW5nIGxvY2sKY29udGVudGlvbiwgcmVkdWNpbmcgZGlzcGF0Y2ggb3ZlcmhlYWQsIGxvb2tp
bmcgYXQgZGlyZWN0IHN1Ym1pc3Npb24KcmF0aGVyIHRoYW4gYm91bmNpbmcgYXJvdW5kIHRhc2ts
ZXRzIGV0Yy4KCnNzZXU6IExpZnQgdGhlIHJlc3RyaWN0aW9uIHRvIGFsbG93IHNzZXUgdG8gYmUg
cmVjb25maWd1cmVkIG9uIHZpcnR1YWwKZW5naW5lcyBjb21wb3NlZCBvZiBSRU5ERVJfQ0xBU1Mg
KHJjcykuCgp2MjogbWFjcm9pemUgY2hlY2tfdXNlcl9tYnooKQp2MzogQ2FuY2VsIHZpcnR1YWwg
ZW5naW5lcyBvbiB3ZWRnaW5nCnY0OiBDb21tZW5jZSBjb21tZW50aW5nCnY1OiBSZXBsYWNlIDY0
YiBzaWJsaW5nX21hc2sgd2l0aCBhIGxpc3Qgb2YgY2xhc3M6aW5zdGFuY2UKdjY6IERyb3AgdGhl
IG9uZS1lbGVtZW50IGFycmF5IGluIHRoZSB1YWJpCnY3OiBBc3NlcnQgaXQgaXMgYW4gdmlydHVh
bCBlbmdpbmUgaW4gdG9fdmlydHVhbF9lbmdpbmUoKQoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2ls
c29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBUdnJ0a28gVXJzdWxpbiA8dHZydGtv
LnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV90eXBlcy5oIHwgICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5j
ICAgICAgICAgIHwgNjgzICsrKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5oICAgICAgICAgIHwgICA5ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2xyYy5jICAgICAgIHwgMTgwICsrKysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2dlbS5oICAgICAgICAgICAgICB8ICAgNSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbV9jb250ZXh0LmMgICAgICB8IDExNiArKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3NjaGVkdWxlci5jICAgICAgICB8ICAxOSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90
aW1lbGluZV90eXBlcy5oICAgfCAgIDEgKwogaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oICAg
ICAgICAgICAgICAgICAgfCAgMzkgKysKIDkgZmlsZXMgY2hhbmdlZCwgMTAzMiBpbnNlcnRpb25z
KCspLCAyOCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2Vu
Z2luZV90eXBlcy5oCmluZGV4IGUzODFjMWM3MzkwMi4uN2I0N2UwMGZhMDgyIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAtMjI3LDYgKzIyNyw3
IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzIHsKIAkgKiBAcXVldWU6IHF1ZXVlIG9m
IHJlcXVlc3RzLCBpbiBwcmlvcml0eSBsaXN0cwogCSAqLwogCXN0cnVjdCByYl9yb290X2NhY2hl
ZCBxdWV1ZTsKKwlzdHJ1Y3QgcmJfcm9vdF9jYWNoZWQgdmlydHVhbDsKIAogCS8qKgogCSAqIEBj
c2Jfd3JpdGU6IGNvbnRyb2wgcmVnaXN0ZXIgZm9yIENvbnRleHQgU3dpdGNoIGJ1ZmZlcgpAQCAt
NDQ1LDYgKzQ0Niw3IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgewogI2RlZmluZSBJOTE1X0VO
R0lORV9IQVNfUFJFRU1QVElPTiAgIEJJVCgyKQogI2RlZmluZSBJOTE1X0VOR0lORV9IQVNfU0VN
QVBIT1JFUyAgIEJJVCgzKQogI2RlZmluZSBJOTE1X0VOR0lORV9ORUVEU19CUkVBRENSVU1CX1RB
U0tMRVQgQklUKDQpCisjZGVmaW5lIEk5MTVfRU5HSU5FX0lTX1ZJUlRVQUwgICAgICAgQklUKDUp
CiAJdW5zaWduZWQgaW50IGZsYWdzOwogCiAJLyoKQEAgLTUzNCw2ICs1MzYsMTIgQEAgaW50ZWxf
ZW5naW5lX25lZWRzX2JyZWFkY3J1bWJfdGFza2xldChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCiAJcmV0dXJuIGVuZ2luZS0+ZmxhZ3MgJiBJOTE1X0VOR0lORV9ORUVEU19C
UkVBRENSVU1CX1RBU0tMRVQ7CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9vbAoraW50ZWxfZW5naW5l
X2lzX3ZpcnR1YWwoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXJl
dHVybiBlbmdpbmUtPmZsYWdzICYgSTkxNV9FTkdJTkVfSVNfVklSVFVBTDsKK30KKwogI2RlZmlu
ZSBpbnN0ZG9uZV9zbGljZV9tYXNrKGRldl9wcml2X18pIFwKIAkoSVNfR0VOKGRldl9wcml2X18s
IDcpID8gXAogCSAxIDogUlVOVElNRV9JTkZPKGRldl9wcml2X18pLT5zc2V1LnNsaWNlX21hc2sp
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IGYxZDYyNzQ2ZTA2Ni4uYmMzODhk
ZjM5ODAyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMTY2LDYgKzE2Niw0
MiBAQAogCiAjZGVmaW5lIEFDVElWRV9QUklPUklUWSAoSTkxNV9QUklPUklUWV9ORVdDTElFTlQg
fCBJOTE1X1BSSU9SSVRZX05PU0VNQVBIT1JFKQogCitzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgewor
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgYmFzZTsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCBjb250
ZXh0OworCisJLyoKKwkgKiBXZSBhbGxvdyBvbmx5IGEgc2luZ2xlIHJlcXVlc3QgdGhyb3VnaCB0
aGUgdmlydHVhbCBlbmdpbmUgYXQgYSB0aW1lCisJICogKGVhY2ggcmVxdWVzdCBpbiB0aGUgdGlt
ZWxpbmUgd2FpdHMgZm9yIHRoZSBjb21wbGV0aW9uIGZlbmNlIG9mCisJICogdGhlIHByZXZpb3Vz
IGJlZm9yZSBiZWluZyBzdWJtaXR0ZWQpLiBCeSByZXN0cmljdGluZyBvdXJzZWx2ZXMgdG8KKwkg
KiBvbmx5IHN1Ym1pdHRpbmcgYSBzaW5nbGUgcmVxdWVzdCwgZWFjaCByZXF1ZXN0IGlzIHBsYWNl
ZCBvbiB0byBhCisJICogcGh5c2ljYWwgdG8gbWF4aW1pc2UgbG9hZCBzcHJlYWRpbmcgKGJ5IHZp
cnR1ZSBvZiB0aGUgbGF0ZSBncmVlZHkKKwkgKiBzY2hlZHVsaW5nIC0tIGVhY2ggcmVhbCBlbmdp
bmUgdGFrZXMgdGhlIG5leHQgYXZhaWxhYmxlIHJlcXVlc3QKKwkgKiB1cG9uIGlkbGluZykuCisJ
ICovCisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdDsKKworCS8qCisJICogV2Uga2VlcCBh
IHJidHJlZSBvZiBhdmFpbGFibGUgdmlydHVhbCBlbmdpbmVzIGluc2lkZSBlYWNoIHBoeXNpY2Fs
CisJICogZW5naW5lLCBzb3J0ZWQgYnkgcHJpb3JpdHkuIEhlcmUgd2UgcHJlYWxsb2NhdGUgdGhl
IG5vZGVzIHdlIG5lZWQKKwkgKiBmb3IgdGhlIHZpcnR1YWwgZW5naW5lLCBpbmRleGVkIGJ5IHBo
eXNpY2FsX2VuZ2luZS0+aWQuCisJICovCisJc3RydWN0IHZlX25vZGUgeworCQlzdHJ1Y3QgcmJf
bm9kZSByYjsKKwkJaW50IHByaW87CisJfSBub2Rlc1tJOTE1X05VTV9FTkdJTkVTXTsKKworCS8q
IEFuZCBmaW5hbGx5LCB3aGljaCBwaHlzaWNhbCBlbmdpbmVzIHRoaXMgdmlydHVhbCBlbmdpbmUg
bWFwcyBvbnRvLiAqLworCXVuc2lnbmVkIGludCBudW1fc2libGluZ3M7CisJc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqc2libGluZ3NbMF07Cit9OworCitzdGF0aWMgc3RydWN0IHZpcnR1YWxfZW5n
aW5lICp0b192aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7
CisJR0VNX0JVR19PTighaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5naW5lKSk7CisJcmV0dXJu
IGNvbnRhaW5lcl9vZihlbmdpbmUsIHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSwgYmFzZSk7Cit9CisK
IHN0YXRpYyBpbnQgZXhlY2xpc3RzX2NvbnRleHRfZGVmZXJyZWRfYWxsb2Moc3RydWN0IGludGVs
X2NvbnRleHQgKmNlLAogCQkJCQkgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsK
IHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIgKnJlZ19zdGF0ZSwKQEAg
LTIyOSw3ICsyNjUsOCBAQCBzdGF0aWMgaW50IHF1ZXVlX3ByaW8oY29uc3Qgc3RydWN0IGludGVs
X2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIH0KIAogc3RhdGljIGlubGluZSBib29sIG5l
ZWRfcHJlZW1wdChjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCi0JCQkJY29u
c3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCisJCQkJY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEsCisJCQkJc3RydWN0IHJiX25vZGUgKnJiKQogewogCWludCBsYXN0X3ByaW87CiAKQEAg
LTI2NCw2ICszMDEsMjUgQEAgc3RhdGljIGlubGluZSBib29sIG5lZWRfcHJlZW1wdChjb25zdCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJICAgIHJxX3ByaW8obGlzdF9uZXh0X2Vu
dHJ5KHJxLCBsaW5rKSkgPiBsYXN0X3ByaW8pCiAJCXJldHVybiB0cnVlOwogCisJaWYgKHJiKSB7
CisJCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQkJcmJfZW50cnkocmIsIHR5cGVvZigq
dmUpLCBub2Rlc1tlbmdpbmUtPmlkXS5yYik7CisJCWJvb2wgcHJlZW1wdCA9IGZhbHNlOworCisJ
CWlmIChlbmdpbmUgPT0gdmUtPnNpYmxpbmdzWzBdKSB7IC8qIG9ubHkgcHJlZW1wdCBvbmUgc2li
bGluZyAqLworCQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqbmV4dDsKKworCQkJcmN1X3JlYWRfbG9j
aygpOworCQkJbmV4dCA9IFJFQURfT05DRSh2ZS0+cmVxdWVzdCk7CisJCQlpZiAobmV4dCkKKwkJ
CQlwcmVlbXB0ID0gcnFfcHJpbyhuZXh0KSA+IGxhc3RfcHJpbzsKKwkJCXJjdV9yZWFkX3VubG9j
aygpOworCQl9CisKKwkJaWYgKHByZWVtcHQpCisJCQlyZXR1cm4gcHJlZW1wdDsKKwl9CisKIAkv
KgogCSAqIElmIHRoZSBpbmZsaWdodCBjb250ZXh0IGRpZCBub3QgdHJpZ2dlciB0aGUgcHJlZW1w
dGlvbiwgdGhlbiBtYXliZQogCSAqIGl0IHdhcyB0aGUgc2V0IG9mIHF1ZXVlZCByZXF1ZXN0cz8g
UGljayB0aGUgaGlnaGVzdCBwcmlvcml0eSBpbgpAQCAtMzgyLDYgKzQzOCw4IEBAIF9fdW53aW5k
X2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBpbnQg
Ym9vc3QpCiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlX3JldmVyc2UocnEsIHJuLAogCQkJCQkg
JmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHMsCiAJCQkJCSBsaW5rKSB7CisJCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKm93bmVyOworCiAJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkK
IAkJCWJyZWFrOwogCkBAIC0zOTAsMTYgKzQ0OCwzMiBAQCBfX3Vud2luZF9pbmNvbXBsZXRlX3Jl
cXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgaW50IGJvb3N0KQogCiAJCUdF
TV9CVUdfT04ocnEtPmh3X2NvbnRleHQtPmFjdGl2ZSk7CiAKLQkJR0VNX0JVR19PTihycV9wcmlv
KHJxKSA9PSBJOTE1X1BSSU9SSVRZX0lOVkFMSUQpOwotCQlpZiAocnFfcHJpbyhycSkgIT0gcHJp
bykgewotCQkJcHJpbyA9IHJxX3ByaW8ocnEpOwotCQkJcGwgPSBpOTE1X3NjaGVkX2xvb2t1cF9w
cmlvbGlzdChlbmdpbmUsIHByaW8pOwotCQl9Ci0JCUdFTV9CVUdfT04oUkJfRU1QVFlfUk9PVCgm
ZW5naW5lLT5leGVjbGlzdHMucXVldWUucmJfcm9vdCkpOworCQkvKgorCQkgKiBQdXNoIHRoZSBy
ZXF1ZXN0IGJhY2sgaW50byB0aGUgcXVldWUgZm9yIGxhdGVyIHJlc3VibWlzc2lvbi4KKwkJICog
SWYgdGhpcyByZXF1ZXN0IGlzIG5vdCBuYXRpdmUgdG8gdGhpcyBwaHlzaWNhbCBlbmdpbmUgKGku
ZS4KKwkJICogaXQgY2FtZSBmcm9tIGEgdmlydHVhbCBzb3VyY2UpLCBwdXNoIGl0IGJhY2sgb250
byB0aGUgdmlydHVhbAorCQkgKiBlbmdpbmUgc28gdGhhdCBpdCBjYW4gYmUgbW92ZWQgYWNyb3Nz
IG9udG8gYW5vdGhlciBwaHlzaWNhbAorCQkgKiBlbmdpbmUgYXMgbG9hZCBkaWN0YXRlcy4KKwkJ
ICovCisJCW93bmVyID0gcnEtPmh3X2NvbnRleHQtPmVuZ2luZTsKKwkJaWYgKGxpa2VseShvd25l
ciA9PSBlbmdpbmUpKSB7CisJCQlHRU1fQlVHX09OKHJxX3ByaW8ocnEpID09IEk5MTVfUFJJT1JJ
VFlfSU5WQUxJRCk7CisJCQlpZiAocnFfcHJpbyhycSkgIT0gcHJpbykgeworCQkJCXByaW8gPSBy
cV9wcmlvKHJxKTsKKwkJCQlwbCA9IGk5MTVfc2NoZWRfbG9va3VwX3ByaW9saXN0KGVuZ2luZSwg
cHJpbyk7CisJCQl9CisJCQlHRU1fQlVHX09OKFJCX0VNUFRZX1JPT1QoJmVuZ2luZS0+ZXhlY2xp
c3RzLnF1ZXVlLnJiX3Jvb3QpKTsKIAotCQlsaXN0X2FkZCgmcnEtPnNjaGVkLmxpbmssIHBsKTsK
KwkJCWxpc3RfYWRkKCZycS0+c2NoZWQubGluaywgcGwpOworCQkJYWN0aXZlID0gcnE7CisJCX0g
ZWxzZSB7CisJCQlpZiAoX19pOTE1X3JlcXVlc3RfaGFzX3N0YXJ0ZWQocnEpKQorCQkJCXJxLT5z
Y2hlZC5hdHRyLnByaW9yaXR5IHw9IGJvb3N0OwogCi0JCWFjdGl2ZSA9IHJxOworCQkJcnEtPmVu
Z2luZSA9IG93bmVyOworCQkJb3duZXItPnN1Ym1pdF9yZXF1ZXN0KHJxKTsKKwkJCWFjdGl2ZSA9
IE5VTEw7CisJCX0KIAl9CiAKIAkvKgpAQCAtNDE5LDcgKzQ5Myw3IEBAIF9fdW53aW5kX2luY29t
cGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBpbnQgYm9vc3Qp
CiAJICogaW4gdGhlIHByaW9yaXR5IHF1ZXVlLCBidXQgdGhleSB3aWxsIG5vdCBnYWluIGltbWVk
aWF0ZSBhY2Nlc3MgdG8KIAkgKiB0aGUgR1BVLgogCSAqLwotCWlmICh+cHJpbyAmIGJvb3N0ICYm
IF9faTkxNV9yZXF1ZXN0X2hhc19zdGFydGVkKGFjdGl2ZSkpIHsKKwlpZiAofnByaW8gJiBib29z
dCAmJiBhY3RpdmUgJiYgX19pOTE1X3JlcXVlc3RfaGFzX3N0YXJ0ZWQoYWN0aXZlKSkgewogCQlw
cmlvIHw9IGJvb3N0OwogCQlHRU1fQlVHX09OKGFjdGl2ZS0+c2NoZWQuYXR0ci5wcmlvcml0eSA+
PSBwcmlvKTsKIAkJYWN0aXZlLT5zY2hlZC5hdHRyLnByaW9yaXR5ID0gcHJpbzsKQEAgLTY2MSw2
ICs3MzUsOTAgQEAgc3RhdGljIHZvaWQgY29tcGxldGVfcHJlZW1wdF9jb250ZXh0KHN0cnVjdCBp
bnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiAJCQkJICAgICBBQ1RJVkVfUFJJT1JJ
VFkpOwogfQogCitzdGF0aWMgdm9pZCB2aXJ0dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKHUz
MiAqcmVncywKKwkJCQkJICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwl1
MzIgYmFzZSA9IGVuZ2luZS0+bW1pb19iYXNlOworCisJLyogTXVzdCBtYXRjaCBleGVjbGlzdHNf
aW5pdF9yZWdfc3RhdGUoKSEgKi8KKworCXJlZ3NbQ1RYX0NPTlRFWFRfQ09OVFJPTF0gPQorCQlp
OTE1X21taW9fcmVnX29mZnNldChSSU5HX0NPTlRFWFRfQ09OVFJPTChiYXNlKSk7CisJcmVnc1tD
VFhfUklOR19IRUFEXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfSEVBRChiYXNlKSk7CisJ
cmVnc1tDVFhfUklOR19UQUlMXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfVEFJTChiYXNl
KSk7CisJcmVnc1tDVFhfUklOR19CVUZGRVJfU1RBUlRdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQo
UklOR19TVEFSVChiYXNlKSk7CisJcmVnc1tDVFhfUklOR19CVUZGRVJfQ09OVFJPTF0gPSBpOTE1
X21taW9fcmVnX29mZnNldChSSU5HX0NUTChiYXNlKSk7CisKKwlyZWdzW0NUWF9CQl9IRUFEX1Vd
ID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19CQkFERFJfVURXKGJhc2UpKTsKKwlyZWdzW0NU
WF9CQl9IRUFEX0xdID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19CQkFERFIoYmFzZSkpOwor
CXJlZ3NbQ1RYX0JCX1NUQVRFXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQkJTVEFURShi
YXNlKSk7CisJcmVnc1tDVFhfU0VDT05EX0JCX0hFQURfVV0gPQorCQlpOTE1X21taW9fcmVnX29m
ZnNldChSSU5HX1NCQkFERFJfVURXKGJhc2UpKTsKKwlyZWdzW0NUWF9TRUNPTkRfQkJfSEVBRF9M
XSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfU0JCQUREUihiYXNlKSk7CisJcmVnc1tDVFhf
U0VDT05EX0JCX1NUQVRFXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfU0JCU1RBVEUoYmFz
ZSkpOworCisJcmVnc1tDVFhfQ1RYX1RJTUVTVEFNUF0gPQorCQlpOTE1X21taW9fcmVnX29mZnNl
dChSSU5HX0NUWF9USU1FU1RBTVAoYmFzZSkpOworCXJlZ3NbQ1RYX1BEUDNfVURXXSA9IGk5MTVf
bW1pb19yZWdfb2Zmc2V0KEdFTjhfUklOR19QRFBfVURXKGJhc2UsIDMpKTsKKwlyZWdzW0NUWF9Q
RFAzX0xEV10gPSBpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JJTkdfUERQX0xEVyhiYXNlLCAz
KSk7CisJcmVnc1tDVFhfUERQMl9VRFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5H
X1BEUF9VRFcoYmFzZSwgMikpOworCXJlZ3NbQ1RYX1BEUDJfTERXXSA9IGk5MTVfbW1pb19yZWdf
b2Zmc2V0KEdFTjhfUklOR19QRFBfTERXKGJhc2UsIDIpKTsKKwlyZWdzW0NUWF9QRFAxX1VEV10g
PSBpOTE1X21taW9fcmVnX29mZnNldChHRU44X1JJTkdfUERQX1VEVyhiYXNlLCAxKSk7CisJcmVn
c1tDVFhfUERQMV9MRFddID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoR0VOOF9SSU5HX1BEUF9MRFco
YmFzZSwgMSkpOworCXJlZ3NbQ1RYX1BEUDBfVURXXSA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KEdF
TjhfUklOR19QRFBfVURXKGJhc2UsIDApKTsKKwlyZWdzW0NUWF9QRFAwX0xEV10gPSBpOTE1X21t
aW9fcmVnX29mZnNldChHRU44X1JJTkdfUERQX0xEVyhiYXNlLCAwKSk7CisKKwlpZiAoZW5naW5l
LT5jbGFzcyA9PSBSRU5ERVJfQ0xBU1MpIHsKKwkJcmVnc1tDVFhfUkNTX0lORElSRUNUX0NUWF0g
PQorCQkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19JTkRJUkVDVF9DVFgoYmFzZSkpOworCQly
ZWdzW0NUWF9SQ1NfSU5ESVJFQ1RfQ1RYX09GRlNFVF0gPQorCQkJaTkxNV9tbWlvX3JlZ19vZmZz
ZXQoUklOR19JTkRJUkVDVF9DVFhfT0ZGU0VUKGJhc2UpKTsKKwkJcmVnc1tDVFhfQkJfUEVSX0NU
WF9QVFJdID0KKwkJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJTkdfQkJfUEVSX0NUWF9QVFIoYmFz
ZSkpOworCisJCXJlZ3NbQ1RYX1JfUFdSX0NMS19TVEFURV0gPQorCQkJaTkxNV9tbWlvX3JlZ19v
ZmZzZXQoR0VOOF9SX1BXUl9DTEtfU1RBVEUpOworCX0KK30KKworc3RhdGljIGJvb2wgdmlydHVh
bF9tYXRjaGVzKGNvbnN0IHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUsCisJCQkgICAgY29uc3Qg
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCisJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQoreworCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmFjdGl2ZTsK
KworCS8qCisJICogV2UgdHJhY2sgd2hlbiB0aGUgSFcgaGFzIGNvbXBsZXRlZCBzYXZpbmcgdGhl
IGNvbnRleHQgaW1hZ2UKKwkgKiAoaS5lLiB3aGVuIHdlIGhhdmUgc2VlbiB0aGUgZmluYWwgQ1Mg
ZXZlbnQgc3dpdGNoaW5nIG91dCBvZgorCSAqIHRoZSBjb250ZXh0KSBhbmQgbXVzdCBub3Qgb3Zl
cndyaXRlIHRoZSBjb250ZXh0IGltYWdlIGJlZm9yZQorCSAqIHRoZW4uIFRoaXMgcmVzdHJpY3Rz
IHVzIHRvIG9ubHkgdXNpbmcgdGhlIGFjdGl2ZSBlbmdpbmUKKwkgKiB3aGlsZSB0aGUgcHJldmlv
dXMgdmlydHVhbGl6ZWQgcmVxdWVzdCBpcyBpbmZsaWdodCAoc28KKwkgKiB3ZSByZXVzZSB0aGUg
cmVnaXN0ZXIgb2Zmc2V0cykuIFRoaXMgaXMgYSB2ZXJ5IHNtYWxsCisJICogaHlzdGVyc2lzIG9u
IHRoZSBncmVlZHkgc2VlbGN0aW9uIGFsZ29yaXRobS4KKwkgKi8KKwlhY3RpdmUgPSBSRUFEX09O
Q0UodmUtPmNvbnRleHQuYWN0aXZlKTsKKwlpZiAoYWN0aXZlICYmIGFjdGl2ZSAhPSBlbmdpbmUp
CisJCXJldHVybiBmYWxzZTsKKworCXJldHVybiB0cnVlOworfQorCitzdGF0aWMgdm9pZCB2aXJ0
dWFsX3hmZXJfYnJlYWRjcnVtYnMoc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSwKKwkJCQkgICAg
IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICpvbGQgPSB2ZS0+c2libGluZ3NbMF07CisKKwkvKiBBbGwgdW5hdHRhY2hlZCAocnEtPmVu
Z2luZSA9PSBvbGQpIG11c3QgYWxyZWFkeSBiZSBjb21wbGV0ZWQgKi8KKworCXNwaW5fbG9jaygm
b2xkLT5icmVhZGNydW1icy5pcnFfbG9jayk7CisJaWYgKCFsaXN0X2VtcHR5KCZ2ZS0+Y29udGV4
dC5zaWduYWxfbGluaykpIHsKKwkJbGlzdF9tb3ZlX3RhaWwoJnZlLT5jb250ZXh0LnNpZ25hbF9s
aW5rLAorCQkJICAgICAgICZlbmdpbmUtPmJyZWFkY3J1bWJzLnNpZ25hbGVycyk7CisJCWludGVs
X2VuZ2luZV9xdWV1ZV9icmVhZGNydW1icyhlbmdpbmUpOworCX0KKwlzcGluX3VubG9jaygmb2xk
LT5icmVhZGNydW1icy5pcnFfbG9jayk7Cit9CisKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKQEAg
LTY5Myw2ICs4NTEsMjYgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCSAqIGFuZCBjb250ZXh0IHN3aXRjaGVzKSBzdWJtaXNz
aW9uLgogCSAqLwogCisJZm9yIChyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT52aXJ0
dWFsKTsgcmI7ICkgeworCQlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0KKwkJCXJiX2VudHJ5
KHJiLCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5naW5lLT5pZF0ucmIpOworCQlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSA9IFJFQURfT05DRSh2ZS0+cmVxdWVzdCk7CisKKwkJaWYgKCFycSkgeyAvKiBs
YXppbHkgY2xlYW51cCBhZnRlciBhbm90aGVyIGVuZ2luZSBoYW5kbGVkIHJxICovCisJCQlyYl9l
cmFzZV9jYWNoZWQocmIsICZleGVjbGlzdHMtPnZpcnR1YWwpOworCQkJUkJfQ0xFQVJfTk9ERShy
Yik7CisJCQlyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJCWNv
bnRpbnVlOworCQl9CisKKwkJaWYgKCF2aXJ0dWFsX21hdGNoZXModmUsIHJxLCBlbmdpbmUpKSB7
CisJCQlyYiA9IHJiX25leHQocmIpOworCQkJY29udGludWU7CisJCX0KKworCQlicmVhazsKKwl9
CisKIAlpZiAobGFzdCkgewogCQkvKgogCQkgKiBEb24ndCByZXN1Ym1pdCBvciBzd2l0Y2ggdW50
aWwgYWxsIG91dHN0YW5kaW5nCkBAIC03MTQsNyArODkyLDcgQEAgc3RhdGljIHZvaWQgZXhlY2xp
c3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlpZiAoIWV4ZWNs
aXN0c19pc19hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX0hXQUNLKSkKIAkJCXJl
dHVybjsKIAotCQlpZiAobmVlZF9wcmVlbXB0KGVuZ2luZSwgbGFzdCkpIHsKKwkJaWYgKG5lZWRf
cHJlZW1wdChlbmdpbmUsIGxhc3QsIHJiKSkgewogCQkJaW5qZWN0X3ByZWVtcHRfY29udGV4dChl
bmdpbmUpOwogCQkJcmV0dXJuOwogCQl9CkBAIC03NTQsNiArOTMyLDkyIEBAIHN0YXRpYyB2b2lk
IGV4ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJbGFz
dC0+dGFpbCA9IGxhc3QtPndhX3RhaWw7CiAJfQogCisJd2hpbGUgKHJiKSB7IC8qIFhYWCB2aXJ0
dWFsIGlzIGFsd2F5cyB0YWtpbmcgcHJlY2VkZW5jZSAqLworCQlzdHJ1Y3QgdmlydHVhbF9lbmdp
bmUgKnZlID0KKwkJCXJiX2VudHJ5KHJiLCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5naW5lLT5pZF0u
cmIpOworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCQlzcGluX2xvY2soJnZlLT5iYXNl
LnRpbWVsaW5lLmxvY2spOworCisJCXJxID0gdmUtPnJlcXVlc3Q7CisJCWlmICh1bmxpa2VseSgh
cnEpKSB7IC8qIGxvc3QgdGhlIHJhY2UgdG8gYSBzaWJsaW5nICovCisJCQlzcGluX3VubG9jaygm
dmUtPmJhc2UudGltZWxpbmUubG9jayk7CisJCQlyYl9lcmFzZV9jYWNoZWQocmIsICZleGVjbGlz
dHMtPnZpcnR1YWwpOworCQkJUkJfQ0xFQVJfTk9ERShyYik7CisJCQlyYiA9IHJiX2ZpcnN0X2Nh
Y2hlZCgmZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJCWNvbnRpbnVlOworCQl9CisKKwkJR0VNX0JV
R19PTihycSAhPSB2ZS0+cmVxdWVzdCk7CisJCUdFTV9CVUdfT04ocnEtPmVuZ2luZSAhPSAmdmUt
PmJhc2UpOworCQlHRU1fQlVHX09OKHJxLT5od19jb250ZXh0ICE9ICZ2ZS0+Y29udGV4dCk7CisK
KwkJaWYgKHJxX3ByaW8ocnEpID49IHF1ZXVlX3ByaW8oZXhlY2xpc3RzKSkgeworCQkJaWYgKCF2
aXJ0dWFsX21hdGNoZXModmUsIHJxLCBlbmdpbmUpKSB7CisJCQkJc3Bpbl91bmxvY2soJnZlLT5i
YXNlLnRpbWVsaW5lLmxvY2spOworCQkJCXJiID0gcmJfbmV4dChyYik7CisJCQkJY29udGludWU7
CisJCQl9CisKKwkJCWlmIChsYXN0ICYmICFjYW5fbWVyZ2VfcnEobGFzdCwgcnEpKSB7CisJCQkJ
c3Bpbl91bmxvY2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2spOworCQkJCXJldHVybjsgLyogbGVh
dmUgdGhpcyBycSBmb3IgYW5vdGhlciBlbmdpbmUgKi8KKwkJCX0KKworCQkJR0VNX1RSQUNFKCIl
czogdmlydHVhbCBycT0lbGx4OiVsbGQlcywgbmV3IGVuZ2luZT8gJXNcbiIsCisJCQkJICBlbmdp
bmUtPm5hbWUsCisJCQkJICBycS0+ZmVuY2UuY29udGV4dCwKKwkJCQkgIHJxLT5mZW5jZS5zZXFu
bywKKwkJCQkgIGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpID8gIiEiIDoKKwkJCQkgIGk5MTVf
cmVxdWVzdF9zdGFydGVkKHJxKSA/ICIqIiA6CisJCQkJICAiIiwKKwkJCQkgIHllc25vKGVuZ2lu
ZSAhPSB2ZS0+c2libGluZ3NbMF0pKTsKKworCQkJdmUtPnJlcXVlc3QgPSBOVUxMOworCQkJdmUt
PmJhc2UuZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOworCQkJcmJfZXJh
c2VfY2FjaGVkKHJiLCAmZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJCVJCX0NMRUFSX05PREUocmIp
OworCisJCQlycS0+ZW5naW5lID0gZW5naW5lOworCisJCQlpZiAoZW5naW5lICE9IHZlLT5zaWJs
aW5nc1swXSkgeworCQkJCXUzMiAqcmVncyA9IHZlLT5jb250ZXh0LmxyY19yZWdfc3RhdGU7CisJ
CQkJdW5zaWduZWQgaW50IG47CisKKwkJCQlHRU1fQlVHX09OKFJFQURfT05DRSh2ZS0+Y29udGV4
dC5hY3RpdmUpKTsKKwkJCQl2aXJ0dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKHJlZ3MsIGVu
Z2luZSk7CisKKwkJCQlpZiAoIWxpc3RfZW1wdHkoJnZlLT5jb250ZXh0LnNpZ25hbHMpKQorCQkJ
CQl2aXJ0dWFsX3hmZXJfYnJlYWRjcnVtYnModmUsIGVuZ2luZSk7CisKKwkJCQkvKgorCQkJCSAq
IE1vdmUgdGhlIGJvdW5kIGVuZ2luZSB0byB0aGUgdG9wIG9mIHRoZSBsaXN0CisJCQkJICogZm9y
IGZ1dHVyZSBleGVjdXRpb24uIFdlIHRoZW4ga2ljayB0aGlzCisJCQkJICogdGFza2xldCBmaXJz
dCBiZWZvcmUgY2hlY2tpbmcgb3RoZXJzLCBzbyB0aGF0CisJCQkJICogd2UgcHJlZmVyZW50aWFs
bHkgcmV1c2UgdGhpcyBzZXQgb2YgYm91bmQKKwkJCQkgKiByZWdpc3RlcnMuCisJCQkJICovCisJ
CQkJZm9yIChuID0gMTsgbiA8IHZlLT5udW1fc2libGluZ3M7IG4rKykgeworCQkJCQlpZiAodmUt
PnNpYmxpbmdzW25dID09IGVuZ2luZSkgeworCQkJCQkJc3dhcCh2ZS0+c2libGluZ3Nbbl0sCisJ
CQkJCQkgICAgIHZlLT5zaWJsaW5nc1swXSk7CisJCQkJCQlicmVhazsKKwkJCQkJfQorCQkJCX0K
KworCQkJCUdFTV9CVUdfT04odmUtPnNpYmxpbmdzWzBdICE9IGVuZ2luZSk7CisJCQl9CisKKwkJ
CV9faTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7CisJCQl0cmFjZV9pOTE1X3JlcXVlc3RfaW4ocnEs
IHBvcnRfaW5kZXgocG9ydCwgZXhlY2xpc3RzKSk7CisJCQlzdWJtaXQgPSB0cnVlOworCQkJbGFz
dCA9IHJxOworCQl9CisKKwkJc3Bpbl91bmxvY2soJnZlLT5iYXNlLnRpbWVsaW5lLmxvY2spOwor
CQlicmVhazsKKwl9CisKIAl3aGlsZSAoKHJiID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMt
PnF1ZXVlKSkpIHsKIAkJc3RydWN0IGk5MTVfcHJpb2xpc3QgKnAgPSB0b19wcmlvbGlzdChyYik7
CiAJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47CkBAIC0xODc3LDYgKzIxNDEsMjUgQEAg
c3RhdGljIHZvaWQgcmVzZXRfY3NiX3BvaW50ZXJzKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xp
c3RzICpleGVjbGlzdHMpCiAJCQkgICAgICAgJmV4ZWNsaXN0cy0+Y3NiX3N0YXR1c1tyZXNldF92
YWx1ZV0pOwogfQogCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAqYWN0aXZlX3JlcXVlc3Qo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJY29uc3Qgc3RydWN0IGxpc3RfaGVhZCAqIGNv
bnN0IGxpc3QgPSAmcnEtPmVuZ2luZS0+dGltZWxpbmUucmVxdWVzdHM7CisJY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHQgKiBjb25zdCBjb250ZXh0ID0gcnEtPmh3X2NvbnRleHQ7CisJc3RydWN0
IGk5MTVfcmVxdWVzdCAqYWN0aXZlID0gTlVMTDsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfZnJv
bV9yZXZlcnNlKHJxLCBsaXN0LCBsaW5rKSB7CisJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVk
KHJxKSkKKwkJCWJyZWFrOworCisJCWlmIChycS0+aHdfY29udGV4dCAhPSBjb250ZXh0KQorCQkJ
YnJlYWs7CisKKwkJYWN0aXZlID0gcnE7CisJfQorCisJcmV0dXJuIGFjdGl2ZTsKK30KKwogc3Rh
dGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LCBib29sIHN0YWxsZWQpCiB7CiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25z
dCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7CkBAIC0xODk3LDcgKzIxODAsOCBAQCBz
dGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUsIGJvb2wgc3RhbGxlZCkKIAlpZiAoIXBvcnRfaXNzZXQoZXhlY2xpc3RzLT5wb3J0KSkKIAkJ
Z290byBvdXRfY2xlYXI7CiAKLQljZSA9IHBvcnRfcmVxdWVzdChleGVjbGlzdHMtPnBvcnQpLT5o
d19jb250ZXh0OworCXJxID0gcG9ydF9yZXF1ZXN0KGV4ZWNsaXN0cy0+cG9ydCk7CisJY2UgPSBy
cS0+aHdfY29udGV4dDsKIAogCS8qCiAJICogQ2F0Y2ggdXAgd2l0aCBhbnkgbWlzc2VkIGNvbnRl
eHQtc3dpdGNoIGludGVycnVwdHMuCkBAIC0xOTEwLDE2ICsyMTk0LDEwIEBAIHN0YXRpYyB2b2lk
IF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBz
dGFsbGVkKQogCSAqLwogCWV4ZWNsaXN0c19jYW5jZWxfcG9ydF9yZXF1ZXN0cyhleGVjbGlzdHMp
OwogCi0JLyogUHVzaCBiYWNrIGFueSBpbmNvbXBsZXRlIHJlcXVlc3RzIGZvciByZXBsYXkgYWZ0
ZXIgdGhlIHJlc2V0LiAqLwotCXJxID0gX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhlbmdp
bmUsIDApOworCXJxID0gYWN0aXZlX3JlcXVlc3QocnEpOwogCWlmICghcnEpCiAJCWdvdG8gb3V0
X3JlcGxheTsKIAotCWlmIChycS0+aHdfY29udGV4dCAhPSBjZSkgeyAvKiBjYXVnaHQganVzdCBi
ZWZvcmUgYSBDUyBldmVudCAqLwotCQlycSA9IE5VTEw7Ci0JCWdvdG8gb3V0X3JlcGxheTsKLQl9
Ci0KIAkvKgogCSAqIElmIHRoaXMgcmVxdWVzdCBoYXNuJ3Qgc3RhcnRlZCB5ZXQsIGUuZy4gaXQg
aXMgd2FpdGluZyBvbiBhCiAJICogc2VtYXBob3JlLCB3ZSBuZWVkIHRvIGF2b2lkIHNraXBwaW5n
IHRoZSByZXF1ZXN0IG9yIGVsc2Ugd2UKQEAgLTE5NjYsMTMgKzIyNDQsMTYgQEAgc3RhdGljIHZv
aWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29s
IHN0YWxsZWQpCiAJfQogCWV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZShyZWdzLCBjZSwgZW5naW5l
LCBjZS0+cmluZyk7CiAKLQkvKiBSZXJ1biB0aGUgcmVxdWVzdDsgaXRzIHBheWxvYWQgaGFzIGJl
ZW4gbmV1dGVyZWQgKGlmIGd1aWx0eSkuICovCiBvdXRfcmVwbGF5OgorCS8qIFJlcnVuIHRoZSBy
ZXF1ZXN0OyBpdHMgcGF5bG9hZCBoYXMgYmVlbiBuZXV0ZXJlZCAoaWYgZ3VpbHR5KS4gKi8KIAlj
ZS0+cmluZy0+aGVhZCA9CiAJCXJxID8gaW50ZWxfcmluZ193cmFwKGNlLT5yaW5nLCBycS0+aGVh
ZCkgOiBjZS0+cmluZy0+dGFpbDsKIAlpbnRlbF9yaW5nX3VwZGF0ZV9zcGFjZShjZS0+cmluZyk7
CiAJX19leGVjbGlzdHNfdXBkYXRlX3JlZ19zdGF0ZShjZSwgZW5naW5lKTsKIAorCS8qIFB1c2gg
YmFjayBhbnkgaW5jb21wbGV0ZSByZXF1ZXN0cyBmb3IgcmVwbGF5IGFmdGVyIHRoZSByZXNldC4g
Ki8KKwlfX3Vud2luZF9pbmNvbXBsZXRlX3JlcXVlc3RzKGVuZ2luZSwgMCk7CisKIG91dF9jbGVh
cjoKIAlleGVjbGlzdHNfY2xlYXJfYWxsX2FjdGl2ZShleGVjbGlzdHMpOwogfQpAQCAtMjA0Niw2
ICsyMzI3LDI2IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19jYW5jZWxfcmVxdWVzdHMoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlpOTE1X3ByaW9saXN0X2ZyZWUocCk7CiAJfQog
CisJLyogQ2FuY2VsIGFsbCBhdHRhY2hlZCB2aXJ0dWFsIGVuZ2luZXMgKi8KKwl3aGlsZSAoKHJi
ID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnZpcnR1YWwpKSkgeworCQlzdHJ1Y3Qgdmly
dHVhbF9lbmdpbmUgKnZlID0KKwkJCXJiX2VudHJ5KHJiLCB0eXBlb2YoKnZlKSwgbm9kZXNbZW5n
aW5lLT5pZF0ucmIpOworCisJCXJiX2VyYXNlX2NhY2hlZChyYiwgJmV4ZWNsaXN0cy0+dmlydHVh
bCk7CisJCVJCX0NMRUFSX05PREUocmIpOworCisJCXNwaW5fbG9jaygmdmUtPmJhc2UudGltZWxp
bmUubG9jayk7CisJCWlmICh2ZS0+cmVxdWVzdCkgeworCQkJdmUtPnJlcXVlc3QtPmVuZ2luZSA9
IGVuZ2luZTsKKwkJCV9faTkxNV9yZXF1ZXN0X3N1Ym1pdCh2ZS0+cmVxdWVzdCk7CisJCQlkbWFf
ZmVuY2Vfc2V0X2Vycm9yKCZ2ZS0+cmVxdWVzdC0+ZmVuY2UsIC1FSU8pOworCQkJaTkxNV9yZXF1
ZXN0X21hcmtfY29tcGxldGUodmUtPnJlcXVlc3QpOworCQkJdmUtPmJhc2UuZXhlY2xpc3RzLnF1
ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOworCQkJdmUtPnJlcXVlc3QgPSBOVUxMOworCQl9
CisJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS50aW1lbGluZS5sb2NrKTsKKwl9CisKIAkvKiBSZW1h
aW5pbmcgX3VucmVhZHlfIHJlcXVlc3RzIHdpbGwgYmUgbm9wJ2VkIHdoZW4gc3VibWl0dGVkICov
CiAKIAlleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOwpAQCAtMjUyOSwx
MiArMjgzMCwxNSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfaW5pdF9yZWdfc3RhdGUodTMyICpy
ZWdzLAogCWJvb2wgcmNzID0gZW5naW5lLT5jbGFzcyA9PSBSRU5ERVJfQ0xBU1M7CiAJdTMyIGJh
c2UgPSBlbmdpbmUtPm1taW9fYmFzZTsKIAotCS8qIEEgY29udGV4dCBpcyBhY3R1YWxseSBhIGJp
ZyBiYXRjaCBidWZmZXIgd2l0aCBzZXZlcmFsCisJLyoKKwkgKiBBIGNvbnRleHQgaXMgYWN0dWFs
bHkgYSBiaWcgYmF0Y2ggYnVmZmVyIHdpdGggc2V2ZXJhbAogCSAqIE1JX0xPQURfUkVHSVNURVJf
SU1NIGNvbW1hbmRzIGZvbGxvd2VkIGJ5IChyZWcsIHZhbHVlKSBwYWlycy4gVGhlCiAJICogdmFs
dWVzIHdlIGFyZSBzZXR0aW5nIGhlcmUgYXJlIG9ubHkgZm9yIHRoZSBmaXJzdCBjb250ZXh0IHJl
c3RvcmU6CiAJICogb24gYSBzdWJzZXF1ZW50IHNhdmUsIHRoZSBHUFUgd2lsbCByZWNyZWF0ZSB0
aGlzIGJhdGNoYnVmZmVyIHdpdGggbmV3CiAJICogdmFsdWVzIChpbmNsdWRpbmcgYWxsIHRoZSBt
aXNzaW5nIE1JX0xPQURfUkVHSVNURVJfSU1NIGNvbW1hbmRzIHRoYXQKIAkgKiB3ZSBhcmUgbm90
IGluaXRpYWxpemluZyBoZXJlKS4KKwkgKgorCSAqIE11c3Qga2VlcCBjb25zaXN0ZW50IHdpdGgg
dmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cygpLgogCSAqLwogCXJlZ3NbQ1RYX0xSSV9I
RUFERVJfMF0gPSBNSV9MT0FEX1JFR0lTVEVSX0lNTShyY3MgPyAxNCA6IDExKSB8CiAJCQkJIE1J
X0xSSV9GT1JDRV9QT1NURUQ7CkBAIC0yNzUzLDYgKzMwNTcsMzIwIEBAIHN0YXRpYyBpbnQgZXhl
Y2xpc3RzX2NvbnRleHRfZGVmZXJyZWRfYWxsb2Moc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAog
CXJldHVybiByZXQ7CiB9CiAKK3N0YXRpYyB2b2lkIHZpcnR1YWxfY29udGV4dF9kZXN0cm95KHN0
cnVjdCBrcmVmICprcmVmKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPQorCQljb250
YWluZXJfb2Yoa3JlZiwgdHlwZW9mKCp2ZSksIGNvbnRleHQucmVmKTsKKwl1bnNpZ25lZCBpbnQg
bjsKKworCUdFTV9CVUdfT04odmUtPnJlcXVlc3QpOworCUdFTV9CVUdfT04odmUtPmNvbnRleHQu
YWN0aXZlKTsKKworCWZvciAobiA9IDA7IG4gPCB2ZS0+bnVtX3NpYmxpbmdzOyBuKyspIHsKKwkJ
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGluZyA9IHZlLT5zaWJsaW5nc1tuXTsKKwkJc3Ry
dWN0IHJiX25vZGUgKm5vZGUgPSAmdmUtPm5vZGVzW3NpYmxpbmctPmlkXS5yYjsKKworCQlpZiAo
UkJfRU1QVFlfTk9ERShub2RlKSkKKwkJCWNvbnRpbnVlOworCisJCXNwaW5fbG9ja19pcnEoJnNp
YmxpbmctPnRpbWVsaW5lLmxvY2spOworCisJCS8qIERldGFjaG1lbnQgaXMgbGF6aWx5IHBlcmZv
cm1lZCBpbiB0aGUgZXhlY2xpc3RzIHRhc2tsZXQgKi8KKwkJaWYgKCFSQl9FTVBUWV9OT0RFKG5v
ZGUpKQorCQkJcmJfZXJhc2VfY2FjaGVkKG5vZGUsICZzaWJsaW5nLT5leGVjbGlzdHMudmlydHVh
bCk7CisKKwkJc3Bpbl91bmxvY2tfaXJxKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsKKwl9CisJ
R0VNX0JVR19PTihfX3Rhc2tsZXRfaXNfc2NoZWR1bGVkKCZ2ZS0+YmFzZS5leGVjbGlzdHMudGFz
a2xldCkpOworCisJaWYgKHZlLT5jb250ZXh0LnN0YXRlKQorCQlfX2V4ZWNsaXN0c19jb250ZXh0
X2ZpbmkoJnZlLT5jb250ZXh0KTsKKworCWk5MTVfdGltZWxpbmVfZmluaSgmdmUtPmJhc2UudGlt
ZWxpbmUpOworCWtmcmVlKHZlKTsKK30KKworc3RhdGljIHZvaWQgdmlydHVhbF9lbmdpbmVfaW5p
dGlhbF9oaW50KHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUpCit7CisJaW50IHN3cDsKKworCS8q
CisJICogUGljayBhIHJhbmRvbSBzaWJsaW5nIG9uIHN0YXJ0aW5nIHRvIGhlbHAgc3ByZWFkIHRo
ZSBsb2FkIGFyb3VuZC4KKwkgKgorCSAqIE5ldyBjb250ZXh0cyBhcmUgdHlwaWNhbGx5IGNyZWF0
ZWQgd2l0aCBleGFjdGx5IHRoZSBzYW1lIG9yZGVyCisJICogb2Ygc2libGluZ3MsIGFuZCBvZnRl
biBzdGFydGVkIGluIGJhdGNoZXMuIER1ZSB0byB0aGUgd2F5IHdlIGl0ZXJhdGUKKwkgKiB0aGUg
YXJyYXkgb2Ygc2libGluZyB3aGVuIHN1Ym1pdHRpbmcgcmVxdWVzdHMsIHNpYmxpbmdbMF0gaXMK
KwkgKiBwcmlvcml0aXNlZCBmb3IgZGVxdWV1aW5nLiBJZiB3ZSBtYWtlIHN1cmUgdGhhdCBzaWJs
aW5nWzBdIGlzIGZhaXJseQorCSAqIHJhbmRvbWlzZWQgYWNyb3NzIHRoZSBzeXN0ZW0sIHdlIGFs
c28gaGVscCBzcHJlYWQgdGhlIGxvYWQgYnkgdGhlCisJICogZmlyc3QgZW5naW5lIHdlIGluc3Bl
Y3QgYmVpbmcgZGlmZmVyZW50IGVhY2ggdGltZS4KKwkgKgorCSAqIE5CIFRoaXMgZG9lcyBub3Qg
Zm9yY2UgdXMgdG8gZXhlY3V0ZSBvbiB0aGlzIGVuZ2luZSwgaXQgd2lsbCBqdXN0CisJICogdHlw
aWNhbGx5IGJlIHRoZSBmaXJzdCB3ZSBpbnNwZWN0IGZvciBzdWJtaXNzaW9uLgorCSAqLworCXN3
cCA9IHByYW5kb21fdTMyX21heCh2ZS0+bnVtX3NpYmxpbmdzKTsKKwlpZiAoIXN3cCkKKwkJcmV0
dXJuOworCisJc3dhcCh2ZS0+c2libGluZ3Nbc3dwXSwgdmUtPnNpYmxpbmdzWzBdKTsKKwl2aXJ0
dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKHZlLT5jb250ZXh0LmxyY19yZWdfc3RhdGUsCisJ
CQkJCXZlLT5zaWJsaW5nc1swXSk7Cit9CisKK3N0YXRpYyBpbnQgdmlydHVhbF9jb250ZXh0X3Bp
bihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2
ZSA9IGNvbnRhaW5lcl9vZihjZSwgdHlwZW9mKCp2ZSksIGNvbnRleHQpOworCWludCBlcnI7CisK
KwkvKiBOb3RlOiB3ZSBtdXN0IHVzZSBhIHJlYWwgZW5naW5lIGNsYXNzIGZvciBzZXR0aW5nIHVw
IHJlZyBzdGF0ZSAqLworCWVyciA9IF9fZXhlY2xpc3RzX2NvbnRleHRfcGluKGNlLCB2ZS0+c2li
bGluZ3NbMF0pOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwl2aXJ0dWFsX2VuZ2luZV9p
bml0aWFsX2hpbnQodmUpOworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCB2aXJ0dWFsX2Nv
bnRleHRfZW50ZXIoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCB2aXJ0dWFs
X2VuZ2luZSAqdmUgPSBjb250YWluZXJfb2YoY2UsIHR5cGVvZigqdmUpLCBjb250ZXh0KTsKKwl1
bnNpZ25lZCBpbnQgbjsKKworCWZvciAobiA9IDA7IG4gPCB2ZS0+bnVtX3NpYmxpbmdzOyBuKysp
CisJCWludGVsX2VuZ2luZV9wbV9nZXQodmUtPnNpYmxpbmdzW25dKTsKK30KKworc3RhdGljIHZv
aWQgdmlydHVhbF9jb250ZXh0X2V4aXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0
cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSBjb250YWluZXJfb2YoY2UsIHR5cGVvZigqdmUpLCBj
b250ZXh0KTsKKwl1bnNpZ25lZCBpbnQgbjsKKworCWNlLT5zYXR1cmF0ZWQgPSAwOworCWZvciAo
biA9IDA7IG4gPCB2ZS0+bnVtX3NpYmxpbmdzOyBuKyspCisJCWludGVsX2VuZ2luZV9wbV9wdXQo
dmUtPnNpYmxpbmdzW25dKTsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0
X29wcyB2aXJ0dWFsX2NvbnRleHRfb3BzID0geworCS5waW4gPSB2aXJ0dWFsX2NvbnRleHRfcGlu
LAorCS51bnBpbiA9IGV4ZWNsaXN0c19jb250ZXh0X3VucGluLAorCisJLmVudGVyID0gdmlydHVh
bF9jb250ZXh0X2VudGVyLAorCS5leGl0ID0gdmlydHVhbF9jb250ZXh0X2V4aXQsCisKKwkuZGVz
dHJveSA9IHZpcnR1YWxfY29udGV4dF9kZXN0cm95LAorfTsKKworc3RhdGljIHZvaWQgdmlydHVh
bF9zdWJtaXNzaW9uX3Rhc2tsZXQodW5zaWduZWQgbG9uZyBkYXRhKQoreworCXN0cnVjdCB2aXJ0
dWFsX2VuZ2luZSAqIGNvbnN0IHZlID0gKHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqKWRhdGE7CisJ
Y29uc3QgaW50IHByaW8gPSB2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludDsK
Kwl1bnNpZ25lZCBpbnQgbjsKKworCWxvY2FsX2lycV9kaXNhYmxlKCk7CisJZm9yIChuID0gMDsg
UkVBRF9PTkNFKHZlLT5yZXF1ZXN0KSAmJiBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKSB7CisJ
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKnNpYmxpbmcgPSB2ZS0+c2libGluZ3Nbbl07CisJCXN0
cnVjdCB2ZV9ub2RlICogY29uc3Qgbm9kZSA9ICZ2ZS0+bm9kZXNbc2libGluZy0+aWRdOworCQlz
dHJ1Y3QgcmJfbm9kZSAqKnBhcmVudCwgKnJiOworCQlib29sIGZpcnN0OworCisJCXNwaW5fbG9j
aygmc2libGluZy0+dGltZWxpbmUubG9jayk7CisKKwkJaWYgKCFSQl9FTVBUWV9OT0RFKCZub2Rl
LT5yYikpIHsKKwkJCS8qCisJCQkgKiBDaGVhdCBhbmQgYXZvaWQgcmViYWxhbmNpbmcgdGhlIHRy
ZWUgaWYgd2UgY2FuCisJCQkgKiByZXVzZSB0aGlzIG5vZGUgaW4gc2l0dS4KKwkJCSAqLworCQkJ
Zmlyc3QgPSByYl9maXJzdF9jYWNoZWQoJnNpYmxpbmctPmV4ZWNsaXN0cy52aXJ0dWFsKSA9PQor
CQkJCSZub2RlLT5yYjsKKwkJCWlmIChwcmlvID09IG5vZGUtPnByaW8gfHwgKHByaW8gPiBub2Rl
LT5wcmlvICYmIGZpcnN0KSkKKwkJCQlnb3RvIHN1Ym1pdF9lbmdpbmU7CisKKwkJCXJiX2VyYXNl
X2NhY2hlZCgmbm9kZS0+cmIsICZzaWJsaW5nLT5leGVjbGlzdHMudmlydHVhbCk7CisJCX0KKwor
CQlyYiA9IE5VTEw7CisJCWZpcnN0ID0gdHJ1ZTsKKwkJcGFyZW50ID0gJnNpYmxpbmctPmV4ZWNs
aXN0cy52aXJ0dWFsLnJiX3Jvb3QucmJfbm9kZTsKKwkJd2hpbGUgKCpwYXJlbnQpIHsKKwkJCXN0
cnVjdCB2ZV9ub2RlICpvdGhlcjsKKworCQkJcmIgPSAqcGFyZW50OworCQkJb3RoZXIgPSByYl9l
bnRyeShyYiwgdHlwZW9mKCpvdGhlciksIHJiKTsKKwkJCWlmIChwcmlvID4gb3RoZXItPnByaW8p
IHsKKwkJCQlwYXJlbnQgPSAmcmItPnJiX2xlZnQ7CisJCQl9IGVsc2UgeworCQkJCXBhcmVudCA9
ICZyYi0+cmJfcmlnaHQ7CisJCQkJZmlyc3QgPSBmYWxzZTsKKwkJCX0KKwkJfQorCisJCXJiX2xp
bmtfbm9kZSgmbm9kZS0+cmIsIHJiLCBwYXJlbnQpOworCQlyYl9pbnNlcnRfY29sb3JfY2FjaGVk
KCZub2RlLT5yYiwKKwkJCQkgICAgICAgJnNpYmxpbmctPmV4ZWNsaXN0cy52aXJ0dWFsLAorCQkJ
CSAgICAgICBmaXJzdCk7CisKK3N1Ym1pdF9lbmdpbmU6CisJCUdFTV9CVUdfT04oUkJfRU1QVFlf
Tk9ERSgmbm9kZS0+cmIpKTsKKwkJbm9kZS0+cHJpbyA9IHByaW87CisJCWlmIChmaXJzdCAmJiBw
cmlvID4gc2libGluZy0+ZXhlY2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQpIHsKKwkJCXNpYmxp
bmctPmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50ID0gcHJpbzsKKwkJCXRhc2tsZXRfaGlf
c2NoZWR1bGUoJnNpYmxpbmctPmV4ZWNsaXN0cy50YXNrbGV0KTsKKwkJfQorCisJCXNwaW5fdW5s
b2NrKCZzaWJsaW5nLT50aW1lbGluZS5sb2NrKTsKKwl9CisJbG9jYWxfaXJxX2VuYWJsZSgpOwor
fQorCitzdGF0aWMgdm9pZCB2aXJ0dWFsX3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSB0b192aXJ0dWFsX2VuZ2lu
ZShycS0+ZW5naW5lKTsKKworCUdFTV9UUkFDRSgiJXM6IHJxPSVsbHg6JWxsZFxuIiwKKwkJICB2
ZS0+YmFzZS5uYW1lLAorCQkgIHJxLT5mZW5jZS5jb250ZXh0LAorCQkgIHJxLT5mZW5jZS5zZXFu
byk7CisKKwlHRU1fQlVHX09OKHZlLT5iYXNlLnN1Ym1pdF9yZXF1ZXN0ICE9IHZpcnR1YWxfc3Vi
bWl0X3JlcXVlc3QpOworCisJR0VNX0JVR19PTih2ZS0+cmVxdWVzdCk7CisJdmUtPmJhc2UuZXhl
Y2xpc3RzLnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBycV9wcmlvKHJxKTsKKwlXUklURV9PTkNFKHZl
LT5yZXF1ZXN0LCBycSk7CisKKwl0YXNrbGV0X3NjaGVkdWxlKCZ2ZS0+YmFzZS5leGVjbGlzdHMu
dGFza2xldCk7Cit9CisKK3N0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2V4ZWNsaXN0c19j
cmVhdGVfdmlydHVhbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkJICAgICAgIHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipzaWJsaW5ncywKKwkJCSAgICAgICB1bnNpZ25lZCBpbnQg
Y291bnQpCit7CisJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZTsKKwl1bnNpZ25lZCBpbnQgbjsK
KwlpbnQgZXJyOworCisJaWYgKGNvdW50ID09IDApCisJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwp
OworCisJaWYgKGNvdW50ID09IDEpCisJCXJldHVybiBpbnRlbF9jb250ZXh0X2NyZWF0ZShjdHgs
IHNpYmxpbmdzWzBdKTsKKworCXZlID0ga3phbGxvYyhzdHJ1Y3Rfc2l6ZSh2ZSwgc2libGluZ3Ms
IGNvdW50KSwgR0ZQX0tFUk5FTCk7CisJaWYgKCF2ZSkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01F
TSk7CisKKwl2ZS0+YmFzZS5pOTE1ID0gY3R4LT5pOTE1OworCXZlLT5iYXNlLmlkID0gLTE7CisJ
dmUtPmJhc2UuY2xhc3MgPSBPVEhFUl9DTEFTUzsKKwl2ZS0+YmFzZS51YWJpX2NsYXNzID0gSTkx
NV9FTkdJTkVfQ0xBU1NfSU5WQUxJRDsKKwl2ZS0+YmFzZS5pbnN0YW5jZSA9IEk5MTVfRU5HSU5F
X0NMQVNTX0lOVkFMSURfVklSVFVBTDsKKwl2ZS0+YmFzZS5mbGFncyA9IEk5MTVfRU5HSU5FX0lT
X1ZJUlRVQUw7CisKKwlzbnByaW50Zih2ZS0+YmFzZS5uYW1lLCBzaXplb2YodmUtPmJhc2UubmFt
ZSksICJ2aXJ0dWFsIik7CisKKwllcnIgPSBpOTE1X3RpbWVsaW5lX2luaXQoY3R4LT5pOTE1LCAm
dmUtPmJhc2UudGltZWxpbmUsIE5VTEwpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX3B1dDsKKwlp
OTE1X3RpbWVsaW5lX3NldF9zdWJjbGFzcygmdmUtPmJhc2UudGltZWxpbmUsIFRJTUVMSU5FX1ZJ
UlRVQUwpOworCisJaW50ZWxfZW5naW5lX2luaXRfZXhlY2xpc3RzKCZ2ZS0+YmFzZSk7CisKKwl2
ZS0+YmFzZS5jb3BzID0gJnZpcnR1YWxfY29udGV4dF9vcHM7CisJdmUtPmJhc2UucmVxdWVzdF9h
bGxvYyA9IGV4ZWNsaXN0c19yZXF1ZXN0X2FsbG9jOworCisJdmUtPmJhc2Uuc2NoZWR1bGUgPSBp
OTE1X3NjaGVkdWxlOworCXZlLT5iYXNlLnN1Ym1pdF9yZXF1ZXN0ID0gdmlydHVhbF9zdWJtaXRf
cmVxdWVzdDsKKworCXZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50ID0gSU5U
X01JTjsKKwl0YXNrbGV0X2luaXQoJnZlLT5iYXNlLmV4ZWNsaXN0cy50YXNrbGV0LAorCQkgICAg
IHZpcnR1YWxfc3VibWlzc2lvbl90YXNrbGV0LAorCQkgICAgICh1bnNpZ25lZCBsb25nKXZlKTsK
KworCWludGVsX2NvbnRleHRfaW5pdCgmdmUtPmNvbnRleHQsIGN0eCwgJnZlLT5iYXNlKTsKKwor
CWZvciAobiA9IDA7IG4gPCBjb3VudDsgbisrKSB7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KnNpYmxpbmcgPSBzaWJsaW5nc1tuXTsKKworCQlHRU1fQlVHX09OKCFpc19wb3dlcl9vZl8yKHNp
YmxpbmctPm1hc2spKTsKKwkJaWYgKHNpYmxpbmctPm1hc2sgJiB2ZS0+YmFzZS5tYXNrKSB7CisJ
CQlEUk1fREVCVUcoImR1cGxpY2F0ZSAlcyBlbnRyeSBpbiBsb2FkIGJhbGFuY2VyXG4iLAorCQkJ
CSAgc2libGluZy0+bmFtZSk7CisJCQllcnIgPSAtRUlOVkFMOworCQkJZ290byBlcnJfcHV0Owor
CQl9CisKKwkJLyoKKwkJICogVGhlIHZpcnR1YWwgZW5naW5lIGltcGxlbWVudGF0aW9uIGlzIHRp
Z2h0bHkgY291cGxlZCB0bworCQkgKiB0aGUgZXhlY2xpc3RzIGJhY2tlbmQgLS0gd2UgcHVzaCBv
dXQgcmVxdWVzdCBkaXJlY3RseQorCQkgKiBpbnRvIGEgdHJlZSBpbnNpZGUgZWFjaCBwaHlzaWNh
bCBlbmdpbmUuIFdlIGNvdWxkIHN1cHBvcnQKKwkJICogbGF5ZXJpbmcgaWYgd2UgaGFuZGxlIGNs
b25pbmcgb2YgdGhlIHJlcXVlc3RzIGFuZAorCQkgKiBzdWJtaXR0aW5nIGEgY29weSBpbnRvIGVh
Y2ggYmFja2VuZC4KKwkJICovCisJCWlmIChzaWJsaW5nLT5leGVjbGlzdHMudGFza2xldC5mdW5j
ICE9CisJCSAgICBleGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KSB7CisJCQllcnIgPSAtRU5P
REVWOworCQkJZ290byBlcnJfcHV0OworCQl9CisKKwkJR0VNX0JVR19PTihSQl9FTVBUWV9OT0RF
KCZ2ZS0+bm9kZXNbc2libGluZy0+aWRdLnJiKSk7CisJCVJCX0NMRUFSX05PREUoJnZlLT5ub2Rl
c1tzaWJsaW5nLT5pZF0ucmIpOworCisJCXZlLT5zaWJsaW5nc1t2ZS0+bnVtX3NpYmxpbmdzKytd
ID0gc2libGluZzsKKwkJdmUtPmJhc2UubWFzayB8PSBzaWJsaW5nLT5tYXNrOworCisJCS8qCisJ
CSAqIEFsbCBwaHlzaWNhbCBlbmdpbmVzIG11c3QgYmUgY29tcGF0aWJsZSBmb3IgdGhlaXIgZW1p
c3Npb24KKwkJICogZnVuY3Rpb25zIChhcyB3ZSBidWlsZCB0aGUgaW5zdHJ1Y3Rpb25zIGR1cmlu
ZyByZXF1ZXN0CisJCSAqIGNvbnN0cnVjdGlvbiBhbmQgZG8gbm90IGFsdGVyIHRoZW0gYmVmb3Jl
IHN1Ym1pc3Npb24KKwkJICogb24gdGhlIHBoeXNpY2FsIGVuZ2luZSkuIFdlIHVzZSB0aGUgZW5n
aW5lIGNsYXNzIGFzIGEgZ3VpZGUKKwkJICogaGVyZSwgYWx0aG91Z2ggdGhhdCBjb3VsZCBiZSBy
ZWZpbmVkLgorCQkgKi8KKwkJaWYgKHZlLT5iYXNlLmNsYXNzICE9IE9USEVSX0NMQVNTKSB7CisJ
CQlpZiAodmUtPmJhc2UuY2xhc3MgIT0gc2libGluZy0+Y2xhc3MpIHsKKwkJCQlEUk1fREVCVUco
ImludmFsaWQgbWl4aW5nIG9mIGVuZ2luZSBjbGFzcywgc2libGluZyAlZCwgYWxyZWFkeSAlZFxu
IiwKKwkJCQkJICBzaWJsaW5nLT5jbGFzcywgdmUtPmJhc2UuY2xhc3MpOworCQkJCWVyciA9IC1F
SU5WQUw7CisJCQkJZ290byBlcnJfcHV0OworCQkJfQorCQkJY29udGludWU7CisJCX0KKworCQl2
ZS0+YmFzZS5jbGFzcyA9IHNpYmxpbmctPmNsYXNzOworCQl2ZS0+YmFzZS51YWJpX2NsYXNzID0g
c2libGluZy0+dWFiaV9jbGFzczsKKwkJc25wcmludGYodmUtPmJhc2UubmFtZSwgc2l6ZW9mKHZl
LT5iYXNlLm5hbWUpLAorCQkJICJ2JWR4JWQiLCB2ZS0+YmFzZS5jbGFzcywgY291bnQpOworCQl2
ZS0+YmFzZS5jb250ZXh0X3NpemUgPSBzaWJsaW5nLT5jb250ZXh0X3NpemU7CisKKwkJdmUtPmJh
c2UuZW1pdF9iYl9zdGFydCA9IHNpYmxpbmctPmVtaXRfYmJfc3RhcnQ7CisJCXZlLT5iYXNlLmVt
aXRfZmx1c2ggPSBzaWJsaW5nLT5lbWl0X2ZsdXNoOworCQl2ZS0+YmFzZS5lbWl0X2luaXRfYnJl
YWRjcnVtYiA9IHNpYmxpbmctPmVtaXRfaW5pdF9icmVhZGNydW1iOworCQl2ZS0+YmFzZS5lbWl0
X2ZpbmlfYnJlYWRjcnVtYiA9IHNpYmxpbmctPmVtaXRfZmluaV9icmVhZGNydW1iOworCQl2ZS0+
YmFzZS5lbWl0X2ZpbmlfYnJlYWRjcnVtYl9kdyA9CisJCQlzaWJsaW5nLT5lbWl0X2ZpbmlfYnJl
YWRjcnVtYl9kdzsKKwl9CisKKwlyZXR1cm4gJnZlLT5jb250ZXh0OworCitlcnJfcHV0OgorCWlu
dGVsX2NvbnRleHRfcHV0KCZ2ZS0+Y29udGV4dCk7CisJcmV0dXJuIEVSUl9QVFIoZXJyKTsKK30K
Kworc3RydWN0IGludGVsX2NvbnRleHQgKgoraW50ZWxfZXhlY2xpc3RzX2Nsb25lX3ZpcnR1YWwo
c3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwKKwkJCSAgICAgIHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKnNyYykKK3sKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnNlID0gdG9fdmlydHVhbF9l
bmdpbmUoc3JjKTsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqZHN0OworCisJZHN0ID0gaW50ZWxf
ZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKGN0eCwKKwkJCQkJICAgICBzZS0+c2libGluZ3MsCisJ
CQkJCSAgICAgc2UtPm51bV9zaWJsaW5ncyk7CisJaWYgKElTX0VSUihkc3QpKQorCQlyZXR1cm4g
ZHN0OworCisJcmV0dXJuIGRzdDsKK30KKwogdm9pZCBpbnRlbF9leGVjbGlzdHNfc2hvd19yZXF1
ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJICAgc3RydWN0IGRybV9w
cmludGVyICptLAogCQkJCSAgIHZvaWQgKCpzaG93X3JlcXVlc3QpKHN0cnVjdCBkcm1fcHJpbnRl
ciAqbSwKQEAgLTI4MTAsNiArMzQyOCwyOSBAQCB2b2lkIGludGVsX2V4ZWNsaXN0c19zaG93X3Jl
cXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJc2hvd19yZXF1ZXN0KG0s
IGxhc3QsICJcdFx0USAiKTsKIAl9CiAKKwlsYXN0ID0gTlVMTDsKKwljb3VudCA9IDA7CisJZm9y
IChyYiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT52aXJ0dWFsKTsgcmI7IHJiID0gcmJf
bmV4dChyYikpIHsKKwkJc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSA9CisJCQlyYl9lbnRyeShy
YiwgdHlwZW9mKCp2ZSksIG5vZGVzW2VuZ2luZS0+aWRdLnJiKTsKKwkJc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEgPSBSRUFEX09OQ0UodmUtPnJlcXVlc3QpOworCisJCWlmIChycSkgeworCQkJaWYg
KGNvdW50KysgPCBtYXggLSAxKQorCQkJCXNob3dfcmVxdWVzdChtLCBycSwgIlx0XHRWICIpOwor
CQkJZWxzZQorCQkJCWxhc3QgPSBycTsKKwkJfQorCX0KKwlpZiAobGFzdCkgeworCQlpZiAoY291
bnQgPiBtYXgpIHsKKwkJCWRybV9wcmludGYobSwKKwkJCQkgICAiXHRcdC4uLnNraXBwaW5nICVk
IHZpcnR1YWwgcmVxdWVzdHMuLi5cbiIsCisJCQkJICAgY291bnQgLSBtYXgpOworCQl9CisJCXNo
b3dfcmVxdWVzdChtLCBsYXN0LCAiXHRcdFYgIik7CisJfQorCiAJc3Bpbl91bmxvY2tfaXJxcmVz
dG9yZSgmZW5naW5lLT50aW1lbGluZS5sb2NrLCBmbGFncyk7CiB9CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfbHJjLmgKaW5kZXggYTBkYzkwN2E3MjQ5Li41NTMwNjA2MDUyZTUgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2xyYy5oCkBAIC0xMTQsNCArMTE0LDEzIEBAIHZvaWQgaW50ZWxf
ZXhlY2xpc3RzX3Nob3dfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAog
CQkJCQkJCWNvbnN0IGNoYXIgKnByZWZpeCksCiAJCQkJICAgdW5zaWduZWQgaW50IG1heCk7CiAK
K3N0cnVjdCBpbnRlbF9jb250ZXh0ICoKK2ludGVsX2V4ZWNsaXN0c19jcmVhdGVfdmlydHVhbChz
dHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkJICAgICAgIHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKipzaWJsaW5ncywKKwkJCSAgICAgICB1bnNpZ25lZCBpbnQgY291bnQpOworCitzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqCitpbnRlbF9leGVjbGlzdHNfY2xvbmVfdmlydHVhbChzdHJ1Y3Qg
aTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkJICAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
c3JjKTsKKwogI2VuZGlmIC8qIF9JTlRFTF9MUkNfSF8gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
c2VsZnRlc3RfbHJjLmMKaW5kZXggNWIzZDhlMzNmMWNmLi5jY2MwYjYzNTAxMjMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCkBAIC0xMzEwLDYgKzEzMTAsMTg1IEBAIHN0
YXRpYyBpbnQgbGl2ZV9wcmVlbXB0X3Ntb2tlKHZvaWQgKmFyZykKIAlyZXR1cm4gZXJyOwogfQog
CitzdGF0aWMgaW50IG5vcF92aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
aTkxNSwKKwkJCSAgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipzaWJsaW5ncywKKwkJCSAg
ICAgIHVuc2lnbmVkIGludCBuc2libGluZywKKwkJCSAgICAgIHVuc2lnbmVkIGludCBuY3R4LAor
CQkJICAgICAgdW5zaWduZWQgaW50IGZsYWdzKQorI2RlZmluZSBDSEFJTiBCSVQoMCkKK3sKKwlJ
R1RfVElNRU9VVChlbmRfdGltZSk7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdFsxNl07
CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eFsxNl07CisJc3RydWN0IGludGVsX2NvbnRl
eHQgKnZlWzE2XTsKKwl1bnNpZ25lZCBsb25nIG4sIHByaW1lLCBuYzsKKwlzdHJ1Y3QgaWd0X2xp
dmVfdGVzdCB0OworCWt0aW1lX3QgdGltZXNbMl0gPSB7fTsKKwlpbnQgZXJyOworCisJR0VNX0JV
R19PTighbmN0eCB8fCBuY3R4ID4gQVJSQVlfU0laRShjdHgpKTsKKworCWZvciAobiA9IDA7IG4g
PCBuY3R4OyBuKyspIHsKKwkJY3R4W25dID0ga2VybmVsX2NvbnRleHQoaTkxNSk7CisJCWlmICgh
Y3R4W25dKSB7CisJCQllcnIgPSAtRU5PTUVNOworCQkJbmN0eCA9IG47CisJCQlnb3RvIG91dDsK
KwkJfQorCisJCXZlW25dID0gaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKGN0eFtuXSwK
KwkJCQkJCSAgICAgICBzaWJsaW5ncywgbnNpYmxpbmcpOworCQlpZiAoSVNfRVJSKHZlW25dKSkg
eworCQkJa2VybmVsX2NvbnRleHRfY2xvc2UoY3R4W25dKTsKKwkJCWVyciA9IFBUUl9FUlIodmVb
bl0pOworCQkJbmN0eCA9IG47CisJCQlnb3RvIG91dDsKKwkJfQorCisJCWVyciA9IGludGVsX2Nv
bnRleHRfcGluKHZlW25dKTsKKwkJaWYgKGVycikgeworCQkJaW50ZWxfY29udGV4dF9wdXQodmVb
bl0pOworCQkJa2VybmVsX2NvbnRleHRfY2xvc2UoY3R4W25dKTsKKwkJCW5jdHggPSBuOworCQkJ
Z290byBvdXQ7CisJCX0KKwl9CisKKwllcnIgPSBpZ3RfbGl2ZV90ZXN0X2JlZ2luKCZ0LCBpOTE1
LCBfX2Z1bmNfXywgdmVbMF0tPmVuZ2luZS0+bmFtZSk7CisJaWYgKGVycikKKwkJZ290byBvdXQ7
CisKKwlmb3JfZWFjaF9wcmltZV9udW1iZXJfZnJvbShwcmltZSwgMSwgODE5MikgeworCQl0aW1l
c1sxXSA9IGt0aW1lX2dldF9yYXcoKTsKKworCQlpZiAoZmxhZ3MgJiBDSEFJTikgeworCQkJZm9y
IChuYyA9IDA7IG5jIDwgbmN0eDsgbmMrKykgeworCQkJCWZvciAobiA9IDA7IG4gPCBwcmltZTsg
bisrKSB7CisJCQkJCXJlcXVlc3RbbmNdID0KKwkJCQkJCWk5MTVfcmVxdWVzdF9jcmVhdGUodmVb
bmNdKTsKKwkJCQkJaWYgKElTX0VSUihyZXF1ZXN0W25jXSkpIHsKKwkJCQkJCWVyciA9IFBUUl9F
UlIocmVxdWVzdFtuY10pOworCQkJCQkJZ290byBvdXQ7CisJCQkJCX0KKworCQkJCQlpOTE1X3Jl
cXVlc3RfYWRkKHJlcXVlc3RbbmNdKTsKKwkJCQl9CisJCQl9CisJCX0gZWxzZSB7CisJCQlmb3Ig
KG4gPSAwOyBuIDwgcHJpbWU7IG4rKykgeworCQkJCWZvciAobmMgPSAwOyBuYyA8IG5jdHg7IG5j
KyspIHsKKwkJCQkJcmVxdWVzdFtuY10gPQorCQkJCQkJaTkxNV9yZXF1ZXN0X2NyZWF0ZSh2ZVtu
Y10pOworCQkJCQlpZiAoSVNfRVJSKHJlcXVlc3RbbmNdKSkgeworCQkJCQkJZXJyID0gUFRSX0VS
UihyZXF1ZXN0W25jXSk7CisJCQkJCQlnb3RvIG91dDsKKwkJCQkJfQorCisJCQkJCWk5MTVfcmVx
dWVzdF9hZGQocmVxdWVzdFtuY10pOworCQkJCX0KKwkJCX0KKwkJfQorCisJCWZvciAobmMgPSAw
OyBuYyA8IG5jdHg7IG5jKyspIHsKKwkJCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChyZXF1ZXN0W25j
XSwKKwkJCQkJICAgICAgSTkxNV9XQUlUX0xPQ0tFRCwKKwkJCQkJICAgICAgSFogLyAxMCkgPCAw
KSB7CisJCQkJcHJfZXJyKCIlcyglcyk6IHdhaXQgZm9yICVsbHg6JWxsZCB0aW1lZCBvdXRcbiIs
CisJCQkJICAgICAgIF9fZnVuY19fLCB2ZVswXS0+ZW5naW5lLT5uYW1lLAorCQkJCSAgICAgICBy
ZXF1ZXN0W25jXS0+ZmVuY2UuY29udGV4dCwKKwkJCQkgICAgICAgcmVxdWVzdFtuY10tPmZlbmNl
LnNlcW5vKTsKKworCQkJCUdFTV9UUkFDRSgiJXMoJXMpIGZhaWxlZCBhdCByZXF1ZXN0ICVsbHg6
JWxsZFxuIiwKKwkJCQkJICBfX2Z1bmNfXywgdmVbMF0tPmVuZ2luZS0+bmFtZSwKKwkJCQkJICBy
ZXF1ZXN0W25jXS0+ZmVuY2UuY29udGV4dCwKKwkJCQkJICByZXF1ZXN0W25jXS0+ZmVuY2Uuc2Vx
bm8pOworCQkJCUdFTV9UUkFDRV9EVU1QKCk7CisJCQkJaTkxNV9nZW1fc2V0X3dlZGdlZChpOTE1
KTsKKwkJCQlicmVhazsKKwkJCX0KKwkJfQorCisJCXRpbWVzWzFdID0ga3RpbWVfc3ViKGt0aW1l
X2dldF9yYXcoKSwgdGltZXNbMV0pOworCQlpZiAocHJpbWUgPT0gMSkKKwkJCXRpbWVzWzBdID0g
dGltZXNbMV07CisKKwkJaWYgKF9faWd0X3RpbWVvdXQoZW5kX3RpbWUsIE5VTEwpKQorCQkJYnJl
YWs7CisJfQorCisJZXJyID0gaWd0X2xpdmVfdGVzdF9lbmQoJnQpOworCWlmIChlcnIpCisJCWdv
dG8gb3V0OworCisJcHJfaW5mbygiUmVxdWVzdHglZCBsYXRlbmNpZXMgb24gJXM6IDEgPSAlbGx1
bnMsICVsdSA9ICVsbHVuc1xuIiwKKwkJbmN0eCwgdmVbMF0tPmVuZ2luZS0+bmFtZSwga3RpbWVf
dG9fbnModGltZXNbMF0pLAorCQlwcmltZSwgZGl2NjRfdTY0KGt0aW1lX3RvX25zKHRpbWVzWzFd
KSwgcHJpbWUpKTsKKworb3V0OgorCWlmIChpZ3RfZmx1c2hfdGVzdChpOTE1LCBJOTE1X1dBSVRf
TE9DS0VEKSkKKwkJZXJyID0gLUVJTzsKKworCWZvciAobmMgPSAwOyBuYyA8IG5jdHg7IG5jKysp
IHsKKwkJaW50ZWxfY29udGV4dF91bnBpbih2ZVtuY10pOworCQlpbnRlbF9jb250ZXh0X3B1dCh2
ZVtuY10pOworCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhbbmNdKTsKKwl9CisJcmV0dXJuIGVy
cjsKK30KKworc3RhdGljIGludCBsaXZlX3ZpcnR1YWxfZW5naW5lKHZvaWQgKmFyZykKK3sKKwlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGFyZzsKKwlzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICpzaWJsaW5nc1tNQVhfRU5HSU5FX0lOU1RBTkNFICsgMV07CisJc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lOworCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOworCXVuc2lnbmVkIGlu
dCBjbGFzcywgaW5zdDsKKwlpbnQgZXJyID0gLUVOT0RFVjsKKworCWlmIChVU0VTX0dVQ19TVUJN
SVNTSU9OKGk5MTUpKQorCQlyZXR1cm4gMDsKKworCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1
Y3RfbXV0ZXgpOworCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwgaWQpIHsKKwkJZXJy
ID0gbm9wX3ZpcnR1YWxfZW5naW5lKGk5MTUsICZlbmdpbmUsIDEsIDEsIDApOworCQlpZiAoZXJy
KSB7CisJCQlwcl9lcnIoIkZhaWxlZCB0byB3cmFwIGVuZ2luZSAlczogZXJyPSVkXG4iLAorCQkJ
ICAgICAgIGVuZ2luZS0+bmFtZSwgZXJyKTsKKwkJCWdvdG8gb3V0X3VubG9jazsKKwkJfQorCX0K
KworCWZvciAoY2xhc3MgPSAwOyBjbGFzcyA8PSBNQVhfRU5HSU5FX0NMQVNTOyBjbGFzcysrKSB7
CisJCWludCBuc2libGluZywgbjsKKworCQluc2libGluZyA9IDA7CisJCWZvciAoaW5zdCA9IDA7
IGluc3QgPD0gTUFYX0VOR0lORV9JTlNUQU5DRTsgaW5zdCsrKSB7CisJCQlpZiAoIWk5MTUtPmVu
Z2luZV9jbGFzc1tjbGFzc11baW5zdF0pCisJCQkJYnJlYWs7CisKKwkJCXNpYmxpbmdzW25zaWJs
aW5nKytdID0gaTkxNS0+ZW5naW5lX2NsYXNzW2NsYXNzXVtpbnN0XTsKKwkJfQorCQlpZiAobnNp
YmxpbmcgPCAyKQorCQkJY29udGludWU7CisKKwkJZm9yIChuID0gMTsgbiA8PSBuc2libGluZyAr
IDE7IG4rKykgeworCQkJZXJyID0gbm9wX3ZpcnR1YWxfZW5naW5lKGk5MTUsIHNpYmxpbmdzLCBu
c2libGluZywKKwkJCQkJCSBuLCAwKTsKKwkJCWlmIChlcnIpCisJCQkJZ290byBvdXRfdW5sb2Nr
OworCQl9CisKKwkJZXJyID0gbm9wX3ZpcnR1YWxfZW5naW5lKGk5MTUsIHNpYmxpbmdzLCBuc2li
bGluZywgbiwgQ0hBSU4pOworCQlpZiAoZXJyKQorCQkJZ290byBvdXRfdW5sb2NrOworCX0KKwor
b3V0X3VubG9jazoKKwltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCXJl
dHVybiBlcnI7Cit9CisKIGludCBpbnRlbF9leGVjbGlzdHNfbGl2ZV9zZWxmdGVzdHMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3N1
YnRlc3QgdGVzdHNbXSA9IHsKQEAgLTEzMjIsNiArMTUwMSw3IEBAIGludCBpbnRlbF9leGVjbGlz
dHNfbGl2ZV9zZWxmdGVzdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCVNVQlRF
U1QobGl2ZV9jaGFpbl9wcmVlbXB0KSwKIAkJU1VCVEVTVChsaXZlX3ByZWVtcHRfaGFuZyksCiAJ
CVNVQlRFU1QobGl2ZV9wcmVlbXB0X3Ntb2tlKSwKKwkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfZW5n
aW5lKSwKIAl9OwogCiAJaWYgKCFIQVNfRVhFQ0xJU1RTKGk5MTUpKQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Z2VtLmgKaW5kZXggNjdmOGE0YTgwN2EwLi5mZTgyZDM1NzEwNzIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW0uaApAQCAtOTEsNCArOTEsOSBAQCBzdGF0aWMgaW5saW5lIGJvb2wgX190YXNrbGV0X2Vu
YWJsZShzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCiAJcmV0dXJuIGF0b21pY19kZWNfYW5kX3Rl
c3QoJnQtPmNvdW50KTsKIH0KIAorc3RhdGljIGlubGluZSBib29sIF9fdGFza2xldF9pc19zY2hl
ZHVsZWQoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQoreworCXJldHVybiB0ZXN0X2JpdChUQVNL
TEVUX1NUQVRFX1NDSEVELCAmdC0+c3RhdGUpOworfQorCiAjZW5kaWYgLyogX19JOTE1X0dFTV9I
X18gKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuYwppbmRleCAwNDBjMGI3
NzBjMjEuLjNhZTFkMjcxMzBhOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9nZW1fY29udGV4dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRl
eHQuYwpAQCAtODYsNiArODYsNyBAQAogICovCiAKICNpbmNsdWRlIDxsaW51eC9sb2cyLmg+Cisj
aW5jbHVkZSA8bGludXgvbm9zcGVjLmg+CiAKICNpbmNsdWRlIDxkcm0vaTkxNV9kcm0uaD4KIApA
QCAtMTIxOCw3ICsxMjE5LDYgQEAgX19pbnRlbF9jb250ZXh0X3JlY29uZmlndXJlX3NzZXUoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLAogCWludCByZXQ7CiAKIAlHRU1fQlVHX09OKElOVEVMX0dF
TihjZS0+Z2VtX2NvbnRleHQtPmk5MTUpIDwgOCk7Ci0JR0VNX0JVR19PTihjZS0+ZW5naW5lLT5p
ZCAhPSBSQ1MwKTsKIAogCXJldCA9IGludGVsX2NvbnRleHRfbG9ja19waW5uZWQoY2UpOwogCWlm
IChyZXQpCkBAIC0xNDEyLDcgKzE0MTIsMTAwIEBAIHN0cnVjdCBzZXRfZW5naW5lcyB7CiAJc3Ry
dWN0IGk5MTVfZ2VtX2VuZ2luZXMgKmVuZ2luZXM7CiB9OwogCitzdGF0aWMgaW50CitzZXRfZW5n
aW5lc19fbG9hZF9iYWxhbmNlKHN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIF9fdXNlciAqYmFz
ZSwgdm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3QgaTkxNV9jb250ZXh0X2VuZ2luZXNfbG9hZF9iYWxh
bmNlIF9fdXNlciAqZXh0ID0KKwkJY29udGFpbmVyX29mX3VzZXIoYmFzZSwgdHlwZW9mKCpleHQp
LCBiYXNlKTsKKwljb25zdCBzdHJ1Y3Qgc2V0X2VuZ2luZXMgKnNldCA9IGRhdGE7CisJc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqc3RhY2tbMTZdOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKipz
aWJsaW5nczsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CisJdTE2IG51bV9zaWJsaW5ncywg
aWR4OworCXVuc2lnbmVkIGludCBuOworCWludCBlcnI7CisKKwlpZiAoIUhBU19FWEVDTElTVFMo
c2V0LT5jdHgtPmk5MTUpKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCWlmIChVU0VTX0dVQ19TVUJN
SVNTSU9OKHNldC0+Y3R4LT5pOTE1KSkKKwkJcmV0dXJuIC1FTk9ERVY7IC8qIG5vdCBpbXBsZW1l
bnQgeWV0ICovCisKKwlpZiAoZ2V0X3VzZXIoaWR4LCAmZXh0LT5lbmdpbmVfaW5kZXgpKQorCQly
ZXR1cm4gLUVGQVVMVDsKKworCWlmIChpZHggPj0gc2V0LT5lbmdpbmVzLT5udW1fZW5naW5lcykg
eworCQlEUk1fREVCVUcoIkludmFsaWQgcGxhY2VtZW50IHZhbHVlLCAlZCA+PSAlZFxuIiwKKwkJ
CSAgaWR4LCBzZXQtPmVuZ2luZXMtPm51bV9lbmdpbmVzKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJ
fQorCisJaWR4ID0gYXJyYXlfaW5kZXhfbm9zcGVjKGlkeCwgc2V0LT5lbmdpbmVzLT5udW1fZW5n
aW5lcyk7CisJaWYgKHNldC0+ZW5naW5lcy0+ZW5naW5lc1tpZHhdKSB7CisJCURSTV9ERUJVRygi
SW52YWxpZCBwbGFjZW1lbnRbJWRdLCBhbHJlYWR5IG9jY3VwaWVkXG4iLCBpZHgpOworCQlyZXR1
cm4gLUVFWElTVDsKKwl9CisKKwlpZiAoZ2V0X3VzZXIobnVtX3NpYmxpbmdzLCAmZXh0LT5udW1f
c2libGluZ3MpKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCWVyciA9IGNoZWNrX3VzZXJfbWJ6KCZl
eHQtPmZsYWdzKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJZXJyID0gY2hlY2tfdXNl
cl9tYnooJmV4dC0+bWJ6NjQpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlzaWJsaW5n
cyA9IHN0YWNrOworCWlmIChudW1fc2libGluZ3MgPiBBUlJBWV9TSVpFKHN0YWNrKSkgeworCQlz
aWJsaW5ncyA9IGttYWxsb2NfYXJyYXkobnVtX3NpYmxpbmdzLAorCQkJCQkgc2l6ZW9mKCpzaWJs
aW5ncyksCisJCQkJCSBHRlBfS0VSTkVMKTsKKwkJaWYgKCFzaWJsaW5ncykKKwkJCXJldHVybiAt
RU5PTUVNOworCX0KKworCWZvciAobiA9IDA7IG4gPCBudW1fc2libGluZ3M7IG4rKykgeworCQlz
dHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFuY2UgY2k7CisKKwkJaWYgKGNvcHlfZnJvbV91
c2VyKCZjaSwgJmV4dC0+ZW5naW5lc1tuXSwgc2l6ZW9mKGNpKSkpIHsKKwkJCWVyciA9IC1FRkFV
TFQ7CisJCQlnb3RvIG91dF9zaWJsaW5nczsKKwkJfQorCisJCXNpYmxpbmdzW25dID0gaW50ZWxf
ZW5naW5lX2xvb2t1cF91c2VyKHNldC0+Y3R4LT5pOTE1LAorCQkJCQkJICAgICAgIGNpLmVuZ2lu
ZV9jbGFzcywKKwkJCQkJCSAgICAgICBjaS5lbmdpbmVfaW5zdGFuY2UpOworCQlpZiAoIXNpYmxp
bmdzW25dKSB7CisJCQlEUk1fREVCVUcoIkludmFsaWQgc2libGluZ1slZF06IHsgY2xhc3M6JWQs
IGluc3Q6JWQgfVxuIiwKKwkJCQkgIG4sIGNpLmVuZ2luZV9jbGFzcywgY2kuZW5naW5lX2luc3Rh
bmNlKTsKKwkJCWVyciA9IC1FSU5WQUw7CisJCQlnb3RvIG91dF9zaWJsaW5nczsKKwkJfQorCX0K
KworCWNlID0gaW50ZWxfZXhlY2xpc3RzX2NyZWF0ZV92aXJ0dWFsKHNldC0+Y3R4LCBzaWJsaW5n
cywgbik7CisJaWYgKElTX0VSUihjZSkpIHsKKwkJZXJyID0gUFRSX0VSUihjZSk7CisJCWdvdG8g
b3V0X3NpYmxpbmdzOworCX0KKworCWlmIChjbXB4Y2hnKCZzZXQtPmVuZ2luZXMtPmVuZ2luZXNb
aWR4XSwgTlVMTCwgY2UpKSB7CisJCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwkJZXJyID0gLUVF
WElTVDsKKwkJZ290byBvdXRfc2libGluZ3M7CisJfQorCitvdXRfc2libGluZ3M6CisJaWYgKHNp
YmxpbmdzICE9IHN0YWNrKQorCQlrZnJlZShzaWJsaW5ncyk7CisKKwlyZXR1cm4gZXJyOworfQor
CiBzdGF0aWMgY29uc3QgaTkxNV91c2VyX2V4dGVuc2lvbl9mbiBzZXRfZW5naW5lc19fZXh0ZW5z
aW9uc1tdID0geworCVtJOTE1X0NPTlRFWFRfRU5HSU5FU19FWFRfTE9BRF9CQUxBTkNFXSA9IHNl
dF9lbmdpbmVzX19sb2FkX2JhbGFuY2UsCiB9OwogCiBzdGF0aWMgaW50CkBAIC0xNzExLDE0ICsx
ODA0LDI5IEBAIHN0YXRpYyBpbnQgY2xvbmVfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqZHN0LAogCiAJY2xvbmUtPmk5MTUgPSBkc3QtPmk5MTU7CiAJZm9yIChuID0gMDsgbiA8IGUt
Pm51bV9lbmdpbmVzOyBuKyspIHsKKwkJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwor
CiAJCWlmICghZS0+ZW5naW5lc1tuXSkgewogCQkJY2xvbmUtPmVuZ2luZXNbbl0gPSBOVUxMOwog
CQkJY29udGludWU7CiAJCX0KKwkJZW5naW5lID0gZS0+ZW5naW5lc1tuXS0+ZW5naW5lOwogCi0J
CWNsb25lLT5lbmdpbmVzW25dID0KLQkJCWludGVsX2NvbnRleHRfY3JlYXRlKGRzdCwgZS0+ZW5n
aW5lc1tuXS0+ZW5naW5lKTsKLQkJaWYgKCFjbG9uZS0+ZW5naW5lc1tuXSkgeworCQkvKgorCQkg
KiBWaXJ0dWFsIGVuZ2luZXMgYXJlIHNpbmdsZXRvbnM7IHRoZXkgY2FuIG9ubHkgZXhpc3QKKwkJ
ICogaW5zaWRlIGEgc2luZ2xlIGNvbnRleHQsIGJlY2F1c2UgdGhleSBlbWJlZCB0aGVpcgorCQkg
KiBIVyBjb250ZXh0Li4uIEFzIGVhY2ggdmlydHVhbCBjb250ZXh0IGltcGxpZXMgYSBzaW5nbGUK
KwkJICogdGltZWxpbmUgKGVhY2ggZW5naW5lIGNhbiBvbmx5IGRlcXVldWUgYSBzaW5nbGUgcmVx
dWVzdAorCQkgKiBhdCBhbnkgdGltZSksIGl0IHdvdWxkIGJlIHN1cnByaXNpbmcgZm9yIHR3byBj
b250ZXh0cworCQkgKiB0byB1c2UgdGhlIHNhbWUgZW5naW5lLiBTbyBsZXQncyBjcmVhdGUgYSBj
b3B5IG9mCisJCSAqIHRoZSB2aXJ0dWFsIGVuZ2luZSBpbnN0ZWFkLgorCQkgKi8KKwkJaWYgKGlu
dGVsX2VuZ2luZV9pc192aXJ0dWFsKGVuZ2luZSkpCisJCQljbG9uZS0+ZW5naW5lc1tuXSA9CisJ
CQkJaW50ZWxfZXhlY2xpc3RzX2Nsb25lX3ZpcnR1YWwoZHN0LCBlbmdpbmUpOworCQllbHNlCisJ
CQljbG9uZS0+ZW5naW5lc1tuXSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGRzdCwgZW5naW5lKTsK
KwkJaWYgKElTX0VSUl9PUl9OVUxMKGNsb25lLT5lbmdpbmVzW25dKSkgewogCQkJX19mcmVlX2Vu
Z2luZXMoY2xvbmUsIG4pOwogCQkJZ290byBlcnJfdW5sb2NrOwogCQl9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9zY2hlZHVsZXIuYwppbmRleCBkMjE1ZGNkZjBiMWUuLjc4Y2ViNTZkNzgwMSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCkBAIC0xNTAsMTcgKzE1MCwyNiBAQCBz
Y2hlZF9sb2NrX2VuZ2luZShjb25zdCBzdHJ1Y3QgaTkxNV9zY2hlZF9ub2RlICpub2RlLAogCQkg
IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmxvY2tlZCwKIAkJICBzdHJ1Y3Qgc2NoZWRfY2FjaGUg
KmNhY2hlKQogewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IG5vZGVfdG9fcmVx
dWVzdChub2RlKS0+ZW5naW5lOworCWNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gbm9k
ZV90b19yZXF1ZXN0KG5vZGUpOworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAog
CUdFTV9CVUdfT04oIWxvY2tlZCk7CiAKLQlpZiAoZW5naW5lICE9IGxvY2tlZCkgeworCS8qCisJ
ICogVmlydHVhbCBlbmdpbmVzIGNvbXBsaWNhdGUgYWNxdWlyaW5nIHRoZSBlbmdpbmUgdGltZWxp
bmUgbG9jaywKKwkgKiBhcyB0aGVpciBycS0+ZW5naW5lIHBvaW50ZXIgaXMgbm90IHN0YWJsZSB1
bnRpbCB1bmRlciB0aGF0CisJICogZW5naW5lIGxvY2suIFRoZSBzaW1wbGUgcGxveSB3ZSB1c2Ug
aXMgdG8gdGFrZSB0aGUgbG9jayB0aGVuCisJICogY2hlY2sgdGhhdCB0aGUgcnEgc3RpbGwgYmVs
b25ncyB0byB0aGUgbmV3bHkgbG9ja2VkIGVuZ2luZS4KKwkgKi8KKwl3aGlsZSAobG9ja2VkICE9
IChlbmdpbmUgPSBSRUFEX09OQ0UocnEtPmVuZ2luZSkpKSB7CiAJCXNwaW5fdW5sb2NrKCZsb2Nr
ZWQtPnRpbWVsaW5lLmxvY2spOwogCQltZW1zZXQoY2FjaGUsIDAsIHNpemVvZigqY2FjaGUpKTsK
IAkJc3Bpbl9sb2NrKCZlbmdpbmUtPnRpbWVsaW5lLmxvY2spOworCQlsb2NrZWQgPSBlbmdpbmU7
CiAJfQogCi0JcmV0dXJuIGVuZ2luZTsKKwlHRU1fQlVHX09OKGxvY2tlZCAhPSBlbmdpbmUpOwor
CXJldHVybiBsb2NrZWQ7CiB9CiAKIHN0YXRpYyBpbmxpbmUgaW50IHJxX3ByaW8oY29uc3Qgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCkBAIC0yNzIsNiArMjgxLDcgQEAgc3RhdGljIHZvaWQgX19p
OTE1X3NjaGVkdWxlKHN0cnVjdCBpOTE1X3NjaGVkX25vZGUgKm5vZGUsCiAJc3Bpbl9sb2NrKCZl
bmdpbmUtPnRpbWVsaW5lLmxvY2spOwogCiAJLyogRmlmbyBhbmQgZGVwdGgtZmlyc3QgcmVwbGFj
ZW1lbnQgZW5zdXJlIG91ciBkZXBzIGV4ZWN1dGUgYmVmb3JlIHVzICovCisJZW5naW5lID0gc2No
ZWRfbG9ja19lbmdpbmUobm9kZSwgZW5naW5lLCAmY2FjaGUpOwogCWxpc3RfZm9yX2VhY2hfZW50
cnlfc2FmZV9yZXZlcnNlKGRlcCwgcCwgJmRmcywgZGZzX2xpbmspIHsKIAkJSU5JVF9MSVNUX0hF
QUQoJmRlcC0+ZGZzX2xpbmspOwogCkBAIC0yODMsOCArMjkzLDExIEBAIHN0YXRpYyB2b2lkIF9f
aTkxNV9zY2hlZHVsZShzdHJ1Y3QgaTkxNV9zY2hlZF9ub2RlICpub2RlLAogCQlpZiAocHJpbyA8
PSBub2RlLT5hdHRyLnByaW9yaXR5IHx8IG5vZGVfc2lnbmFsZWQobm9kZSkpCiAJCQljb250aW51
ZTsKIAorCQlHRU1fQlVHX09OKG5vZGVfdG9fcmVxdWVzdChub2RlKS0+ZW5naW5lICE9IGVuZ2lu
ZSk7CisKIAkJbm9kZS0+YXR0ci5wcmlvcml0eSA9IHByaW87CiAJCWlmICghbGlzdF9lbXB0eSgm
bm9kZS0+bGluaykpIHsKKwkJCUdFTV9CVUdfT04oaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoZW5n
aW5lKSk7CiAJCQlpZiAoIWNhY2hlLnByaW9saXN0KQogCQkJCWNhY2hlLnByaW9saXN0ID0KIAkJ
CQkJaTkxNV9zY2hlZF9sb29rdXBfcHJpb2xpc3QoZW5naW5lLApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGluZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV90aW1lbGluZV90eXBlcy5oCmluZGV4IDUyNTZhMGI1YzVmNy4uMTY4ODcwNWY0YTJi
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3RpbWVsaW5lX3R5cGVzLmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV90aW1lbGluZV90eXBlcy5oCkBAIC0yNiw2
ICsyNiw3IEBAIHN0cnVjdCBpOTE1X3RpbWVsaW5lIHsKIAlzcGlubG9ja190IGxvY2s7CiAjZGVm
aW5lIFRJTUVMSU5FX0NMSUVOVCAwIC8qIGRlZmF1bHQgc3ViY2xhc3MgKi8KICNkZWZpbmUgVElN
RUxJTkVfRU5HSU5FIDEKKyNkZWZpbmUgVElNRUxJTkVfVklSVFVBTCAyCiAJc3RydWN0IG11dGV4
IG11dGV4OyAvKiBwcm90ZWN0cyB0aGUgZmxvdyBvZiByZXF1ZXN0cyAqLwogCiAJdW5zaWduZWQg
aW50IHBpbl9jb3VudDsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaCBi
L2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAppbmRleCA2MjM5NmQ1NzVlMjguLmY5NzcwOTQ4
MTYxYyAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCisrKyBiL2luY2x1
ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaApAQCAtMTM3LDYgKzEzNyw3IEBAIHN0cnVjdCBpOTE1X2Vu
Z2luZV9jbGFzc19pbnN0YW5jZSB7CiAJX191MTYgZW5naW5lX2NsYXNzOyAvKiBzZWUgZW51bSBk
cm1faTkxNV9nZW1fZW5naW5lX2NsYXNzICovCiAJX191MTYgZW5naW5lX2luc3RhbmNlOwogI2Rl
ZmluZSBJOTE1X0VOR0lORV9DTEFTU19JTlZBTElEX05PTkUgLTEKKyNkZWZpbmUgSTkxNV9FTkdJ
TkVfQ0xBU1NfSU5WQUxJRF9WSVJUVUFMIC0yCiB9OwogCiAvKioKQEAgLTE2MDgsOCArMTYwOSw0
NiBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfcGFyYW1fc3NldSB7CiAJX191MzIgcnN2
ZDsKIH07CiAKKy8qCisgKiBpOTE1X2NvbnRleHRfZW5naW5lc19sb2FkX2JhbGFuY2U6CisgKgor
ICogRW5hYmxlIGxvYWQgYmFsYW5jaW5nIGFjcm9zcyB0aGlzIHNldCBvZiBlbmdpbmVzLgorICoK
KyAqIEludG8gdGhlIEk5MTVfRVhFQ19ERUZBVUxUIHNsb3QgWzBdLCBhIHZpcnR1YWwgZW5naW5l
IGlzIGNyZWF0ZWQgdGhhdCB3aGVuCisgKiB1c2VkIHdpbGwgcHJveHkgdGhlIGV4ZWNidWZmZXIg
cmVxdWVzdCBvbnRvIG9uZSBvZiB0aGUgc2V0IG9mIGVuZ2luZXMKKyAqIGluIHN1Y2ggYSB3YXkg
YXMgdG8gZGlzdHJpYnV0ZSB0aGUgbG9hZCBldmVubHkgYWNyb3NzIHRoZSBzZXQuCisgKgorICog
VGhlIHNldCBvZiBlbmdpbmVzIG11c3QgYmUgY29tcGF0aWJsZSAoZS5nLiB0aGUgc2FtZSBIVyBj
bGFzcykgYXMgdGhleQorICogd2lsbCBzaGFyZSB0aGUgc2FtZSBsb2dpY2FsIEdQVSBjb250ZXh0
IGFuZCByaW5nLgorICoKKyAqIFRvIGludGVybWl4IHJlbmRlcmluZyB3aXRoIHRoZSB2aXJ0dWFs
IGVuZ2luZSBhbmQgZGlyZWN0IHJlbmRlcmluZyBvbnRvCisgKiB0aGUgYmFja2luZyBlbmdpbmVz
IChieXBhc3NpbmcgdGhlIGxvYWQgYmFsYW5jaW5nIHByb3h5KSwgdGhlIGNvbnRleHQgbXVzdAor
ICogYmUgZGVmaW5lZCB0byB1c2UgYSBzaW5nbGUgdGltZWxpbmUgZm9yIGFsbCBlbmdpbmVzLgor
ICovCitzdHJ1Y3QgaTkxNV9jb250ZXh0X2VuZ2luZXNfbG9hZF9iYWxhbmNlIHsKKwlzdHJ1Y3Qg
aTkxNV91c2VyX2V4dGVuc2lvbiBiYXNlOworCisJX191MTYgZW5naW5lX2luZGV4OworCV9fdTE2
IG51bV9zaWJsaW5nczsKKwlfX3UzMiBmbGFnczsgLyogYWxsIHVuZGVmaW5lZCBmbGFncyBtdXN0
IGJlIHplcm8gKi8KKworCV9fdTY0IG1iejY0OyAvKiByZXNlcnZlZCBmb3IgZnV0dXJlIHVzZTsg
bXVzdCBiZSB6ZXJvICovCisKKwlzdHJ1Y3QgaTkxNV9lbmdpbmVfY2xhc3NfaW5zdGFuY2UgZW5n
aW5lc1swXTsKK30gX19hdHRyaWJ1dGVfXygocGFja2VkKSk7CisKKyNkZWZpbmUgSTkxNV9ERUZJ
TkVfQ09OVEVYVF9FTkdJTkVTX0xPQURfQkFMQU5DRShuYW1lX18sIE5fXykgc3RydWN0IHsgXAor
CXN0cnVjdCBpOTE1X3VzZXJfZXh0ZW5zaW9uIGJhc2U7IFwKKwlfX3UxNiBlbmdpbmVfaW5kZXg7
IFwKKwlfX3UxNiBudW1fc2libGluZ3M7IFwKKwlfX3UzMiBmbGFnczsgXAorCV9fdTY0IG1iejY0
OyBcCisJc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGVuZ2luZXNbTl9fXTsgXAor
fSBfX2F0dHJpYnV0ZV9fKChwYWNrZWQpKSBuYW1lX18KKwogc3RydWN0IGk5MTVfY29udGV4dF9w
YXJhbV9lbmdpbmVzIHsKIAlfX3U2NCBleHRlbnNpb25zOyAvKiBsaW5rZWQgY2hhaW4gb2YgZXh0
ZW5zaW9uIGJsb2NrcywgMCB0ZXJtaW5hdGVzICovCisjZGVmaW5lIEk5MTVfQ09OVEVYVF9FTkdJ
TkVTX0VYVF9MT0FEX0JBTEFOQ0UgMCAvKiBzZWUgaTkxNV9jb250ZXh0X2VuZ2luZXNfbG9hZF9i
YWxhbmNlICovCiAJc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGVuZ2luZXNbMF07
CiB9IF9fYXR0cmlidXRlX18oKHBhY2tlZCkpOwogCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QK
SW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9w
Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3FE3B601AF
	for <lists+intel-gfx@lfdr.de>; Fri,  5 Jul 2019 09:46:19 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6021C6E41A;
	Fri,  5 Jul 2019 07:46:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A928A6E41A
 for <intel-gfx@lists.freedesktop.org>; Fri,  5 Jul 2019 07:46:15 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17137014-1500050 
 for multiple; Fri, 05 Jul 2019 08:46:08 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  5 Jul 2019 08:46:02 +0100
Message-Id: <20190705074604.16496-6-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190705074604.16496-1-chris@chris-wilson.co.uk>
References: <20190705074604.16496-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 6/8] drm/i915: Protect request retirement with
 timeline->mutex
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yZ28gdGhlIHN0cnVjdF9tdXRleCByZXF1aXJlbWVudCBmb3IgcmVxdWVzdCByZXRpcmVtZW50
IGFzIHdlIGhhdmUKYmVlbiB0cmFuc2l0aW9uaW5nIG92ZXIgdG8gb25seSB1c2luZyB0aGUgdGlt
ZWxpbmUtPm11dGV4IGZvcgpjb250cm9sbGluZyB0aGUgbGlmZXRpbWUgb2YgYSByZXF1ZXN0IG9u
IHRoYXQgdGltZWxpbmUuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMgICAgfCAxOTIgKysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmggICAgICAgfCAgMjUgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX3R5cGVzLmggIHwgICAyIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2d0LmMgICAgICAgICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndF90eXBlcy5oICAgICAgfCAgIDIgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
bHJjLmMgICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdidWZmZXIuYyAgICB8ICAxMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdp
bmUuYyAgICAgICAgIHwgICAxIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5j
ICAgICAgICAgICB8IDE1MSArKysrKysrLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZXF1ZXN0LmggICAgICAgICAgIHwgICAzIC0KIDExIGZpbGVzIGNoYW5nZWQsIDIwMyBpbnNl
cnRpb25zKCspLCAxODkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKaW5kZXggZjQzZWFhYTVkYjVmLi44MGM5YzU3YTMwMmYg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVy
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpA
QCAtNzM5LDYzICs3MzksNiBAQCBzdGF0aWMgaW50IGViX3NlbGVjdF9jb250ZXh0KHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgc3RydWN0IGk5MTVf
cmVxdWVzdCAqX19lYl93YWl0X2Zvcl9yaW5nKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nKQotewot
CXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCi0JLyoKLQkgKiBDb21wbGV0ZWx5IHVuc2NpZW50
aWZpYyBmaW5nZXItaW4tdGhlLWFpciBlc3RpbWF0ZXMgZm9yIHN1aXRhYmxlCi0JICogbWF4aW11
bSB1c2VyIHJlcXVlc3Qgc2l6ZSAodG8gYXZvaWQgYmxvY2tpbmcpIGFuZCB0aGVuIGJhY2tvZmYu
Ci0JICovCi0JaWYgKGludGVsX3JpbmdfdXBkYXRlX3NwYWNlKHJpbmcpID49IFBBR0VfU0laRSkK
LQkJcmV0dXJuIE5VTEw7Ci0KLQkvKgotCSAqIEZpbmQgYSByZXF1ZXN0IHRoYXQgYWZ0ZXIgd2Fp
dGluZyB1cG9uLCB0aGVyZSB3aWxsIGJlIGF0IGxlYXN0IGhhbGYKLQkgKiB0aGUgcmluZyBhdmFp
bGFibGUuIFRoZSBoeXN0ZXJlc2lzIGFsbG93cyB1cyB0byBjb21wZXRlIGZvciB0aGUKLQkgKiBz
aGFyZWQgcmluZyBhbmQgc2hvdWxkIG1lYW4gdGhhdCB3ZSBzbGVlcCBsZXNzIG9mdGVuIHByaW9y
IHRvCi0JICogY2xhaW1pbmcgb3VyIHJlc291cmNlcywgYnV0IG5vdCBzbyBsb25nIHRoYXQgdGhl
IHJpbmcgY29tcGxldGVseQotCSAqIGRyYWlucyBiZWZvcmUgd2UgY2FuIHN1Ym1pdCBvdXIgbmV4
dCByZXF1ZXN0LgotCSAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZyaW5nLT5yZXF1ZXN0
X2xpc3QsIHJpbmdfbGluaykgewotCQlpZiAoX19pbnRlbF9yaW5nX3NwYWNlKHJxLT5wb3N0Zml4
LAotCQkJCSAgICAgICByaW5nLT5lbWl0LCByaW5nLT5zaXplKSA+IHJpbmctPnNpemUgLyAyKQot
CQkJYnJlYWs7Ci0JfQotCWlmICgmcnEtPnJpbmdfbGluayA9PSAmcmluZy0+cmVxdWVzdF9saXN0
KQotCQlyZXR1cm4gTlVMTDsgLyogd2VpcmQsIHdlIHdpbGwgY2hlY2sgYWdhaW4gbGF0ZXIgZm9y
IHJlYWwgKi8KLQotCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKLX0KLQotc3RhdGljIGlu
dCBlYl93YWl0X2Zvcl9yaW5nKGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQotewot
CXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCWludCByZXQgPSAwOwotCi0JLyoKLQkgKiBBcHBs
eSBhIGxpZ2h0IGFtb3VudCBvZiBiYWNrcHJlc3N1cmUgdG8gcHJldmVudCBleGNlc3NpdmUgaG9n
cwotCSAqIGZyb20gYmxvY2tpbmcgd2FpdGluZyBmb3Igc3BhY2Ugd2hpbHN0IGhvbGRpbmcgc3Ry
dWN0X211dGV4IGFuZAotCSAqIGtlZXBpbmcgYWxsIG9mIHRoZWlyIHJlc291cmNlcyBwaW5uZWQu
Ci0JICovCi0KLQlycSA9IF9fZWJfd2FpdF9mb3JfcmluZyhlYi0+Y29udGV4dC0+cmluZyk7Ci0J
aWYgKHJxKSB7Ci0JCW11dGV4X3VubG9jaygmZWItPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwot
Ci0JCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycSwKLQkJCQkgICAgICBJOTE1X1dBSVRfSU5URVJS
VVBUSUJMRSwKLQkJCQkgICAgICBNQVhfU0NIRURVTEVfVElNRU9VVCkgPCAwKQotCQkJcmV0ID0g
LUVJTlRSOwotCi0JCWk5MTVfcmVxdWVzdF9wdXQocnEpOwotCi0JCW11dGV4X2xvY2soJmViLT5p
OTE1LT5kcm0uc3RydWN0X211dGV4KTsKLQl9Ci0KLQlyZXR1cm4gcmV0OwotfQotCiBzdGF0aWMg
aW50IGViX2xvb2t1cF92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogewogCXN0cnVj
dCByYWRpeF90cmVlX3Jvb3QgKmhhbmRsZXNfdm1hID0gJmViLT5nZW1fY29udGV4dC0+aGFuZGxl
c192bWE7CkBAIC0yMTIyLDEwICsyMDY1LDc1IEBAIHN0YXRpYyBjb25zdCBlbnVtIGludGVsX2Vu
Z2luZV9pZCB1c2VyX3JpbmdfbWFwW10gPSB7CiAJW0k5MTVfRVhFQ19WRUJPWF0JPSBWRUNTMAog
fTsKIAotc3RhdGljIGludCBlYl9waW5fY29udGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
Yiwgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQorc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KmViX3Rocm90dGxlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlzdHJ1Y3QgaW50ZWxf
cmluZyAqcmluZyA9IGNlLT5yaW5nOworCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSByaW5n
LT50aW1lbGluZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCS8qCisJICogQ29tcGxl
dGVseSB1bnNjaWVudGlmaWMgZmluZ2VyLWluLXRoZS1haXIgZXN0aW1hdGVzIGZvciBzdWl0YWJs
ZQorCSAqIG1heGltdW0gdXNlciByZXF1ZXN0IHNpemUgKHRvIGF2b2lkIGJsb2NraW5nKSBhbmQg
dGhlbiBiYWNrb2ZmLgorCSAqLworCWlmIChpbnRlbF9yaW5nX3VwZGF0ZV9zcGFjZShyaW5nKSA+
PSBQQUdFX1NJWkUpCisJCXJldHVybiBOVUxMOworCisJLyoKKwkgKiBGaW5kIGEgcmVxdWVzdCB0
aGF0IGFmdGVyIHdhaXRpbmcgdXBvbiwgdGhlcmUgd2lsbCBiZSBhdCBsZWFzdCBoYWxmCisJICog
dGhlIHJpbmcgYXZhaWxhYmxlLiBUaGUgaHlzdGVyZXNpcyBhbGxvd3MgdXMgdG8gY29tcGV0ZSBm
b3IgdGhlCisJICogc2hhcmVkIHJpbmcgYW5kIHNob3VsZCBtZWFuIHRoYXQgd2Ugc2xlZXAgbGVz
cyBvZnRlbiBwcmlvciB0bworCSAqIGNsYWltaW5nIG91ciByZXNvdXJjZXMsIGJ1dCBub3Qgc28g
bG9uZyB0aGF0IHRoZSByaW5nIGNvbXBsZXRlbHkKKwkgKiBkcmFpbnMgYmVmb3JlIHdlIGNhbiBz
dWJtaXQgb3VyIG5leHQgcmVxdWVzdC4KKwkgKi8KKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAm
dGwtPnJlcXVlc3RzLCBsaW5rKSB7CisJCWlmIChycS0+cmluZyAhPSByaW5nKQorCQkJY29udGlu
dWU7CisKKwkJaWYgKF9faW50ZWxfcmluZ19zcGFjZShycS0+cG9zdGZpeCwKKwkJCQkgICAgICAg
cmluZy0+ZW1pdCwgcmluZy0+c2l6ZSkgPiByaW5nLT5zaXplIC8gMikKKwkJCWJyZWFrOworCX0K
KwlpZiAoJnJxLT5saW5rID09ICZ0bC0+cmVxdWVzdHMpCisJCXJldHVybiBOVUxMOyAvKiB3ZWly
ZCwgd2Ugd2lsbCBjaGVjayBhZ2FpbiBsYXRlciBmb3IgcmVhbCAqLworCisJcmV0dXJuIGk5MTVf
cmVxdWVzdF9nZXQocnEpOworfQorCitzdGF0aWMgaW50CitfX2ViX3Bpbl9jb250ZXh0KHN0cnVj
dCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJaW50
IGVycjsKIAorCWlmIChsaWtlbHkoYXRvbWljX2luY19ub3RfemVybygmY2UtPnBpbl9jb3VudCkp
KQorCQlyZXR1cm4gMDsKKworCWVyciA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmZWItPmk5
MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwllcnIg
PSBfX2ludGVsX2NvbnRleHRfZG9fcGluKGNlKTsKKwltdXRleF91bmxvY2soJmViLT5pOTE1LT5k
cm0uc3RydWN0X211dGV4KTsKKworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyB2b2lkCitfX2Vi
X3VucGluX2NvbnRleHQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSkKK3sKKwlpZiAobGlrZWx5KGF0b21pY19hZGRfdW5sZXNzKCZjZS0+cGluX2Nv
dW50LCAtMSwgMSkpKQorCQlyZXR1cm47CisKKwltdXRleF9sb2NrKCZlYi0+aTkxNS0+ZHJtLnN0
cnVjdF9tdXRleCk7CisJaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJbXV0ZXhfdW5sb2NrKCZl
Yi0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7Cit9CisKK3N0YXRpYyBpbnQgX19lYl9waW5fZW5n
aW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
Cit7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bDsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cTsKKwlpbnQgZXJyOworCiAJLyoKIAkgKiBBQkk6IEJlZm9yZSB1c2Vyc3BhY2UgYWNjZXNzZXMg
dGhlIEdQVSAoZS5nLiBleGVjYnVmZmVyKSwgcmVwb3J0CiAJICogRUlPIGlmIHRoZSBHUFUgaXMg
YWxyZWFkeSB3ZWRnZWQuCkBAIC0yMTM5LDcgKzIxNDcsNyBAQCBzdGF0aWMgaW50IGViX3Bpbl9j
b250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UpCiAJICogR0dUVCBzcGFjZSwgc28gZG8gdGhpcyBmaXJzdCBiZWZvcmUgd2UgcmVzZXJ2ZSBh
IHNlcW5vIGZvcgogCSAqIG91cnNlbHZlcy4KIAkgKi8KLQllcnIgPSBpbnRlbF9jb250ZXh0X3Bp
bihjZSk7CisJZXJyID0gX19lYl9waW5fY29udGV4dChlYiwgY2UpOwogCWlmIChlcnIpCiAJCXJl
dHVybiBlcnI7CiAKQEAgLTIxNTAsMjkgKzIxNTgsNTIgQEAgc3RhdGljIGludCBlYl9waW5fY29u
dGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQogCSAqIHdha2VyZWYgdGhhdCB3ZSBob2xkIHVudGlsIHRoZSBHUFUgaGFzIGJlZW4gaWRsZSBm
b3IgYXQgbGVhc3QKIAkgKiAxMDBtcy4KIAkgKi8KLQllcnIgPSBpbnRlbF9jb250ZXh0X3RpbWVs
aW5lX2xvY2soY2UpOwotCWlmIChlcnIpCisJdGwgPSBpbnRlbF9jb250ZXh0X3RpbWVsaW5lX2xv
Y2soY2UpOworCWlmIChJU19FUlIodGwpKSB7CisJCWVyciA9IFBUUl9FUlIodGwpOwogCQlnb3Rv
IGVycl91bnBpbjsKKwl9CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsKLQlpbnRlbF9jb250
ZXh0X3RpbWVsaW5lX3VubG9jayhjZSk7CisJcnEgPSBlYl90aHJvdHRsZShjZSk7CisKKwlpbnRl
bF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayh0bCk7CisKKwlpZiAocnEpIHsKKwkJaWYgKGk5MTVf
cmVxdWVzdF93YWl0KHJxLAorCQkJCSAgICAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFLAorCQkJ
CSAgICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKSA8IDApIHsKKwkJCWk5MTVfcmVxdWVzdF9wdXQo
cnEpOworCQkJZXJyID0gLUVJTlRSOworCQkJZ290byBlcnJfZXhpdDsKKwkJfQorCisJCWk5MTVf
cmVxdWVzdF9wdXQocnEpOworCX0KIAogCWViLT5lbmdpbmUgPSBjZS0+ZW5naW5lOwogCWViLT5j
b250ZXh0ID0gY2U7CiAJcmV0dXJuIDA7CiAKK2Vycl9leGl0OgorCW11dGV4X2xvY2soJnRsLT5t
dXRleCk7CisJaW50ZWxfY29udGV4dF9leGl0KGNlKTsKKwlpbnRlbF9jb250ZXh0X3RpbWVsaW5l
X3VubG9jayh0bCk7CiBlcnJfdW5waW46Ci0JaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJX19l
Yl91bnBpbl9jb250ZXh0KGViLCBjZSk7CiAJcmV0dXJuIGVycjsKIH0KIAotc3RhdGljIHZvaWQg
ZWJfdW5waW5fY29udGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKK3N0YXRpYyB2b2lk
IGViX3VucGluX2VuZ2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIHsKLQlfX2ludGVs
X2NvbnRleHRfdGltZWxpbmVfbG9jayhlYi0+Y29udGV4dCk7Ci0JaW50ZWxfY29udGV4dF9leGl0
KGViLT5jb250ZXh0KTsKLQlpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayhlYi0+Y29udGV4
dCk7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZWItPmNvbnRleHQ7CisJc3RydWN0IGlu
dGVsX3RpbWVsaW5lICp0bCA9IGNlLT5yaW5nLT50aW1lbGluZTsKKworCW11dGV4X2xvY2soJnRs
LT5tdXRleCk7CisJaW50ZWxfY29udGV4dF9leGl0KGNlKTsKKwlpbnRlbF9jb250ZXh0X3RpbWVs
aW5lX3VubG9jayh0bCk7CiAKLQlpbnRlbF9jb250ZXh0X3VucGluKGViLT5jb250ZXh0KTsKKwlf
X2ViX3VucGluX2NvbnRleHQoZWIsIGNlKTsKIH0KIAogc3RhdGljIHVuc2lnbmVkIGludApAQCAt
MjIxNyw5ICsyMjQ4LDkgQEAgZWJfc2VsZWN0X2xlZ2FjeV9yaW5nKHN0cnVjdCBpOTE1X2V4ZWNi
dWZmZXIgKmViLAogfQogCiBzdGF0aWMgaW50Ci1lYl9zZWxlY3RfZW5naW5lKHN0cnVjdCBpOTE1
X2V4ZWNidWZmZXIgKmViLAotCQkgc3RydWN0IGRybV9maWxlICpmaWxlLAotCQkgc3RydWN0IGRy
bV9pOTE1X2dlbV9leGVjYnVmZmVyMiAqYXJncykKK2ViX3Bpbl9lbmdpbmUoc3RydWN0IGk5MTVf
ZXhlY2J1ZmZlciAqZWIsCisJICAgICAgc3RydWN0IGRybV9maWxlICpmaWxlLAorCSAgICAgIHN0
cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgKmFyZ3MpCiB7CiAJc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlOwogCXVuc2lnbmVkIGludCBpZHg7CkBAIC0yMjM0LDcgKzIyNjUsNyBAQCBlYl9z
ZWxlY3RfZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCWlmIChJU19FUlIoY2Up
KQogCQlyZXR1cm4gUFRSX0VSUihjZSk7CiAKLQllcnIgPSBlYl9waW5fY29udGV4dChlYiwgY2Up
OworCWVyciA9IF9fZWJfcGluX2VuZ2luZShlYiwgY2UpOwogCWludGVsX2NvbnRleHRfcHV0KGNl
KTsKIAogCXJldHVybiBlcnI7CkBAIC0yNDUyLDE2ICsyNDgzLDEyIEBAIGk5MTVfZ2VtX2RvX2V4
ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJ
Z290byBlcnJfZGVzdHJveTsKIAotCWVyciA9IGk5MTVfbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxl
KGRldik7Ci0JaWYgKGVycikKLQkJZ290byBlcnJfY29udGV4dDsKLQotCWVyciA9IGViX3NlbGVj
dF9lbmdpbmUoJmViLCBmaWxlLCBhcmdzKTsKKwllcnIgPSBlYl9waW5fZW5naW5lKCZlYiwgZmls
ZSwgYXJncyk7CiAJaWYgKHVubGlrZWx5KGVycikpCi0JCWdvdG8gZXJyX3VubG9jazsKKwkJZ290
byBlcnJfY29udGV4dDsKIAotCWVyciA9IGViX3dhaXRfZm9yX3JpbmcoJmViKTsgLyogbWF5IHRl
bXBvcmFyaWx5IGRyb3Agc3RydWN0X211dGV4ICovCi0JaWYgKHVubGlrZWx5KGVycikpCisJZXJy
ID0gaTkxNV9tdXRleF9sb2NrX2ludGVycnVwdGlibGUoZGV2KTsKKwlpZiAoZXJyKQogCQlnb3Rv
IGVycl9lbmdpbmU7CiAKIAllcnIgPSBlYl9yZWxvY2F0ZSgmZWIpOwpAQCAtMjYxNSwxMCArMjY0
Miw5IEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIGVy
cl92bWE6CiAJaWYgKGViLmV4ZWMpCiAJCWViX3JlbGVhc2Vfdm1hcygmZWIpOwotZXJyX2VuZ2lu
ZToKLQllYl91bnBpbl9jb250ZXh0KCZlYik7Ci1lcnJfdW5sb2NrOgogCW11dGV4X3VubG9jaygm
ZGV2LT5zdHJ1Y3RfbXV0ZXgpOworZXJyX2VuZ2luZToKKwllYl91bnBpbl9lbmdpbmUoJmViKTsK
IGVycl9jb250ZXh0OgogCWk5MTVfZ2VtX2NvbnRleHRfcHV0KGViLmdlbV9jb250ZXh0KTsKIGVy
cl9kZXN0cm95OgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29u
dGV4dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCmluZGV4IDA2
NWJhNGFjNGU4Ny4uMzhiNjBjYmYyNTkyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Y29udGV4dC5oCkBAIC0xMiw2ICsxMiw3IEBACiAjaW5jbHVkZSAiaTkxNV9hY3RpdmUuaCIKICNp
bmNsdWRlICJpbnRlbF9jb250ZXh0X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfZW5naW5lX3R5
cGVzLmgiCisjaW5jbHVkZSAiaW50ZWxfdGltZWxpbmVfdHlwZXMuaCIKIAogdm9pZCBpbnRlbF9j
b250ZXh0X2luaXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCQkJc3RydWN0IGk5MTVfZ2Vt
X2NvbnRleHQgKmN0eCwKQEAgLTEyNiwyNCArMTI3LDI0IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBp
bnRlbF9jb250ZXh0X3B1dChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJa3JlZl9wdXQoJmNl
LT5yZWYsIGNlLT5vcHMtPmRlc3Ryb3kpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQKLV9faW50
ZWxfY29udGV4dF90aW1lbGluZV9sb2NrKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKLQlfX2Fj
cXVpcmVzKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KQotewotCW11dGV4X2xvY2soJmNlLT5y
aW5nLT50aW1lbGluZS0+bXV0ZXgpOwotfQotCi1zdGF0aWMgaW5saW5lIGludCBfX211c3RfY2hl
Y2sKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX3RpbWVsaW5lICpfX211c3RfY2hlY2sKIGlu
dGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJX19h
Y3F1aXJlcygmY2UtPnJpbmctPnRpbWVsaW5lLT5tdXRleCkKIHsKLQlyZXR1cm4gbXV0ZXhfbG9j
a19pbnRlcnJ1cHRpYmxlKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KTsKKwlzdHJ1Y3QgaW50
ZWxfdGltZWxpbmUgKnRsID0gY2UtPnJpbmctPnRpbWVsaW5lOworCWludCBlcnI7CisKKwllcnIg
PSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJnRsLT5tdXRleCk7CisJaWYgKGVycikKKwkJcmV0
dXJuIEVSUl9QVFIoZXJyKTsKKworCXJldHVybiB0bDsKIH0KIAotc3RhdGljIGlubGluZSB2b2lk
IGludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
LQlfX3JlbGVhc2VzKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KQorc3RhdGljIGlubGluZSB2
b2lkIGludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKHN0cnVjdCBpbnRlbF90aW1lbGluZSAq
dGwpCisJX19yZWxlYXNlcygmdGwtPm11dGV4KQogewotCW11dGV4X3VubG9jaygmY2UtPnJpbmct
PnRpbWVsaW5lLT5tdXRleCk7CisJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogfQogCiBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICppbnRlbF9jb250ZXh0X2NyZWF0ZV9yZXF1ZXN0KHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5j
CmluZGV4IGRmNTkzMmY1ZjU3OC4uMmExMGRhZjFkMzc5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtNzUwLDcgKzc1MCw2IEBAIHN0YXRpYyBpbnQgbWVh
c3VyZV9icmVhZGNydW1iX2R3KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQll
bmdpbmUtPnN0YXR1c19wYWdlLnZtYSkpCiAJCWdvdG8gb3V0X2ZyYW1lOwogCi0JSU5JVF9MSVNU
X0hFQUQoJmZyYW1lLT5yaW5nLnJlcXVlc3RfbGlzdCk7CiAJZnJhbWUtPnJpbmcudGltZWxpbmUg
PSAmZnJhbWUtPnRpbWVsaW5lOwogCWZyYW1lLT5yaW5nLnZhZGRyID0gZnJhbWUtPmNzOwogCWZy
YW1lLT5yaW5nLnNpemUgPSBzaXplb2YoZnJhbWUtPmNzKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggN2UwNTYxMTQzNDRlLi4wZGRlN2UwNGIx
MDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBl
cy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCkBA
IC02OSw4ICs2OSw2IEBAIHN0cnVjdCBpbnRlbF9yaW5nIHsKIAl2b2lkICp2YWRkcjsKIAogCXN0
cnVjdCBpbnRlbF90aW1lbGluZSAqdGltZWxpbmU7Ci0Jc3RydWN0IGxpc3RfaGVhZCByZXF1ZXN0
X2xpc3Q7Ci0Jc3RydWN0IGxpc3RfaGVhZCBhY3RpdmVfbGluazsKIAogCS8qCiAJICogQXMgd2Ug
aGF2ZSB0d28gdHlwZXMgb2YgcmluZ3MsIG9uZSBnbG9iYWwgdG8gdGhlIGVuZ2luZSB1c2VkCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYwppbmRleCA4Y2NhNmIyMmIzODYuLjQ2ZDI0ZDlkNjJh
YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCkBAIC0xNCw3ICsxNCw2IEBAIHZvaWQg
aW50ZWxfZ3RfaW5pdF9lYXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0LCBzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSkKIAlndC0+aTkxNSA9IGk5MTU7CiAJZ3QtPnVuY29yZSA9ICZpOTE1LT51
bmNvcmU7CiAKLQlJTklUX0xJU1RfSEVBRCgmZ3QtPmFjdGl2ZV9yaW5ncyk7CiAJSU5JVF9MSVNU
X0hFQUQoJmd0LT5jbG9zZWRfdm1hKTsKIAogCXNwaW5fbG9ja19pbml0KCZndC0+Y2xvc2VkX2xv
Y2spOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3R5cGVzLmgKaW5kZXggY2ZkNDFl
NmM1NGUxLi5mNDNlYTgzMGIxZTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2d0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
dHlwZXMuaApAQCAtMzQsOCArMzQsNiBAQCBzdHJ1Y3QgaW50ZWxfZ3QgewogCQlzdHJ1Y3QgbGlz
dF9oZWFkIGh3c3BfZnJlZV9saXN0OwogCX0gdGltZWxpbmVzOwogCi0Jc3RydWN0IGxpc3RfaGVh
ZCBhY3RpdmVfcmluZ3M7Ci0KIAlzdHJ1Y3QgaW50ZWxfd2FrZXJlZiB3YWtlcmVmOwogCiAJc3Ry
dWN0IGxpc3RfaGVhZCBjbG9zZWRfdm1hOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpp
bmRleCA0NzNjOWFlODgxOGMuLjRmNTE5NWQxYmM4YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfbHJjLmMKQEAgLTE1MzUsNiArMTUzNSw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19jb250
ZXh0X3VucGluKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKIAlpOTE1X2dlbV9jb250ZXh0
X3VucGluX2h3X2lkKGNlLT5nZW1fY29udGV4dCk7CiAJaTkxNV9nZW1fb2JqZWN0X3VucGluX21h
cChjZS0+c3RhdGUtPm9iaik7CisJaW50ZWxfcmluZ19yZXNldChjZS0+cmluZywgY2UtPnJpbmct
PnRhaWwpOwogfQogCiBzdGF0aWMgdm9pZApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
cmluZ2J1ZmZlci5jCmluZGV4IGY4MDRlYzM1MDM3ZC4uYzQ2Y2U2NzZkMjhmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jCkBAIC0xMjI2LDcgKzEyMjYsNyBA
QCB2b2lkIGludGVsX3JpbmdfdW5waW4oc3RydWN0IGludGVsX3JpbmcgKnJpbmcpCiAJR0VNX1RS
QUNFKCJyaW5nOiVsbHggdW5waW5cbiIsIHJpbmctPnRpbWVsaW5lLT5mZW5jZV9jb250ZXh0KTsK
IAogCS8qIERpc2NhcmQgYW55IHVudXNlZCBieXRlcyBiZXlvbmQgdGhhdCBzdWJtaXR0ZWQgdG8g
aHcuICovCi0JaW50ZWxfcmluZ19yZXNldChyaW5nLCByaW5nLT50YWlsKTsKKwlpbnRlbF9yaW5n
X3Jlc2V0KHJpbmcsIHJpbmctPmVtaXQpOwogCiAJR0VNX0JVR19PTighcmluZy0+dm1hKTsKIAlp
OTE1X3ZtYV91bnNldF9nZ3R0X3dyaXRlKHJpbmctPnZtYSk7CkBAIC0xMjkyLDcgKzEyOTIsNiBA
QCBpbnRlbF9lbmdpbmVfY3JlYXRlX3Jpbmcoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
LAogCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKIAogCWtyZWZfaW5pdCgmcmluZy0+cmVmKTsK
LQlJTklUX0xJU1RfSEVBRCgmcmluZy0+cmVxdWVzdF9saXN0KTsKIAlyaW5nLT50aW1lbGluZSA9
IGludGVsX3RpbWVsaW5lX2dldCh0aW1lbGluZSk7CiAKIAlyaW5nLT5zaXplID0gc2l6ZTsKQEAg
LTE4MTYsMjEgKzE4MTUsMjUgQEAgc3RhdGljIGludCByaW5nX3JlcXVlc3RfYWxsb2Moc3RydWN0
IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAogc3RhdGljIG5vaW5saW5lIGludCB3YWl0X2Zvcl9z
cGFjZShzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZywgdW5zaWduZWQgaW50IGJ5dGVzKQogeworCXN0
cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSByaW5nLT50aW1lbGluZTsKIAlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICp0YXJnZXQ7CiAJbG9uZyB0aW1lb3V0OwogCiAJaWYgKGludGVsX3JpbmdfdXBkYXRl
X3NwYWNlKHJpbmcpID49IGJ5dGVzKQogCQlyZXR1cm4gMDsKIAotCUdFTV9CVUdfT04obGlzdF9l
bXB0eSgmcmluZy0+cmVxdWVzdF9saXN0KSk7Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeSh0YXJnZXQs
ICZyaW5nLT5yZXF1ZXN0X2xpc3QsIHJpbmdfbGluaykgeworCUdFTV9CVUdfT04obGlzdF9lbXB0
eSgmdGwtPnJlcXVlc3RzKSk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeSh0YXJnZXQsICZ0bC0+cmVx
dWVzdHMsIGxpbmspIHsKKwkJaWYgKHRhcmdldC0+cmluZyAhPSByaW5nKQorCQkJY29udGludWU7
CisKIAkJLyogV291bGQgY29tcGxldGlvbiBvZiB0aGlzIHJlcXVlc3QgZnJlZSBlbm91Z2ggc3Bh
Y2U/ICovCiAJCWlmIChieXRlcyA8PSBfX2ludGVsX3Jpbmdfc3BhY2UodGFyZ2V0LT5wb3N0Zml4
LAogCQkJCQkJcmluZy0+ZW1pdCwgcmluZy0+c2l6ZSkpCiAJCQlicmVhazsKIAl9CiAKLQlpZiAo
V0FSTl9PTigmdGFyZ2V0LT5yaW5nX2xpbmsgPT0gJnJpbmctPnJlcXVlc3RfbGlzdCkpCisJaWYg
KEdFTV9XQVJOX09OKCZ0YXJnZXQtPmxpbmsgPT0gJnRsLT5yZXF1ZXN0cykpCiAJCXJldHVybiAt
RU5PU1BDOwogCiAJdGltZW91dCA9IGk5MTVfcmVxdWVzdF93YWl0KHRhcmdldCwKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCmluZGV4IGE0OGIzNmQzMWU2NS4uNWJjYjQ2MWI4Mzcy
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2luZS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKQEAgLTY4LDcgKzY4LDYgQEAg
c3RhdGljIHN0cnVjdCBpbnRlbF9yaW5nICptb2NrX3Jpbmcoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQogCXJpbmctPmJhc2UudGltZWxpbmUgPSAmcmluZy0+dGltZWxpbmU7CiAJYXRv
bWljX3NldCgmcmluZy0+YmFzZS5waW5fY291bnQsIDEpOwogCi0JSU5JVF9MSVNUX0hFQUQoJnJp
bmctPmJhc2UucmVxdWVzdF9saXN0KTsKIAlpbnRlbF9yaW5nX3VwZGF0ZV9zcGFjZSgmcmluZy0+
YmFzZSk7CiAKIAlyZXR1cm4gJnJpbmctPmJhc2U7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3JlcXVlc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVz
dC5jCmluZGV4IDVmZjg3YzRhMGNkNS4uMmFhYmVkOGVkNTk0IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3JlcXVlc3QuYwpAQCAtMTgwLDQwICsxODAsNiBAQCBpOTE1X3JlcXVlc3RfcmVtb3ZlX2Zy
b21fY2xpZW50KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJc3Bpbl91bmxvY2soJmZp
bGVfcHJpdi0+bW0ubG9jayk7CiB9CiAKLXN0YXRpYyB2b2lkIGFkdmFuY2VfcmluZyhzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQotewotCXN0cnVjdCBpbnRlbF9yaW5nICpyaW5nID0gcmVx
dWVzdC0+cmluZzsKLQl1bnNpZ25lZCBpbnQgdGFpbDsKLQotCS8qCi0JICogV2Uga25vdyB0aGUg
R1BVIG11c3QgaGF2ZSByZWFkIHRoZSByZXF1ZXN0IHRvIGhhdmUKLQkgKiBzZW50IHVzIHRoZSBz
ZXFubyArIGludGVycnVwdCwgc28gdXNlIHRoZSBwb3NpdGlvbgotCSAqIG9mIHRhaWwgb2YgdGhl
IHJlcXVlc3QgdG8gdXBkYXRlIHRoZSBsYXN0IGtub3duIHBvc2l0aW9uCi0JICogb2YgdGhlIEdQ
VSBoZWFkLgotCSAqCi0JICogTm90ZSB0aGlzIHJlcXVpcmVzIHRoYXQgd2UgYXJlIGFsd2F5cyBj
YWxsZWQgaW4gcmVxdWVzdAotCSAqIGNvbXBsZXRpb24gb3JkZXIuCi0JICovCi0JR0VNX0JVR19P
TighbGlzdF9pc19maXJzdCgmcmVxdWVzdC0+cmluZ19saW5rLCAmcmluZy0+cmVxdWVzdF9saXN0
KSk7Ci0JaWYgKGxpc3RfaXNfbGFzdCgmcmVxdWVzdC0+cmluZ19saW5rLCAmcmluZy0+cmVxdWVz
dF9saXN0KSkgewotCQkvKgotCQkgKiBXZSBtYXkgcmFjZSBoZXJlIHdpdGggZXhlY2xpc3RzIHJl
c3VibWl0dGluZyB0aGlzIHJlcXVlc3QKLQkJICogYXMgd2UgcmV0aXJlIGl0LiBUaGUgcmVzdWJt
aXNzaW9uIHdpbGwgbW92ZSB0aGUgcmluZy0+dGFpbAotCQkgKiBmb3J3YXJkcyAodG8gcmVxdWVz
dC0+d2FfdGFpbCkuIFdlIGVpdGhlciByZWFkIHRoZQotCQkgKiBjdXJyZW50IHZhbHVlIHRoYXQg
d2FzIHdyaXR0ZW4gdG8gaHcsIG9yIHRoZSB2YWx1ZSB0aGF0Ci0JCSAqIGlzIGp1c3QgYWJvdXQg
dG8gYmUuIEVpdGhlciB3b3JrcywgaWYgd2UgbWlzcyB0aGUgbGFzdCB0d28KLQkJICogbm9vcHMg
LSB0aGV5IGFyZSBzYWZlIHRvIGJlIHJlcGxheWVkIG9uIGEgcmVzZXQuCi0JCSAqLwotCQl0YWls
ID0gUkVBRF9PTkNFKHJlcXVlc3QtPnRhaWwpOwotCQlsaXN0X2RlbCgmcmluZy0+YWN0aXZlX2xp
bmspOwotCX0gZWxzZSB7Ci0JCXRhaWwgPSByZXF1ZXN0LT5wb3N0Zml4OwotCX0KLQlsaXN0X2Rl
bF9pbml0KCZyZXF1ZXN0LT5yaW5nX2xpbmspOwotCi0JcmluZy0+aGVhZCA9IHRhaWw7Ci19Ci0K
IHN0YXRpYyB2b2lkIGZyZWVfY2FwdHVyZV9saXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVl
c3QpCiB7CiAJc3RydWN0IGk5MTVfY2FwdHVyZV9saXN0ICpjYXB0dXJlOwpAQCAtMjMxLDcgKzE5
Nyw3IEBAIHN0YXRpYyBib29sIGk5MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEpCiB7CiAJc3RydWN0IGk5MTVfYWN0aXZlX3JlcXVlc3QgKmFjdGl2ZSwgKm5leHQ7CiAK
LQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisJbG9j
a2RlcF9hc3NlcnRfaGVsZCgmcnEtPnRpbWVsaW5lLT5tdXRleCk7CiAJaWYgKCFpOTE1X3JlcXVl
c3RfY29tcGxldGVkKHJxKSkKIAkJcmV0dXJuIGZhbHNlOwogCkBAIC0yNDMsNyArMjA5LDE3IEBA
IHN0YXRpYyBib29sIGk5MTVfcmVxdWVzdF9yZXRpcmUoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEp
CiAJR0VNX0JVR19PTighaTkxNV9zd19mZW5jZV9zaWduYWxlZCgmcnEtPnN1Ym1pdCkpOwogCXRy
YWNlX2k5MTVfcmVxdWVzdF9yZXRpcmUocnEpOwogCi0JYWR2YW5jZV9yaW5nKHJxKTsKKwkvKgor
CSAqIFdlIGtub3cgdGhlIEdQVSBtdXN0IGhhdmUgcmVhZCB0aGUgcmVxdWVzdCB0byBoYXZlCisJ
ICogc2VudCB1cyB0aGUgc2Vxbm8gKyBpbnRlcnJ1cHQsIHNvIHVzZSB0aGUgcG9zaXRpb24KKwkg
KiBvZiB0YWlsIG9mIHRoZSByZXF1ZXN0IHRvIHVwZGF0ZSB0aGUgbGFzdCBrbm93biBwb3NpdGlv
bgorCSAqIG9mIHRoZSBHUFUgaGVhZC4KKwkgKgorCSAqIE5vdGUgdGhpcyByZXF1aXJlcyB0aGF0
IHdlIGFyZSBhbHdheXMgY2FsbGVkIGluIHJlcXVlc3QKKwkgKiBjb21wbGV0aW9uIG9yZGVyLgor
CSAqLworCUdFTV9CVUdfT04oIWxpc3RfaXNfZmlyc3QoJnJxLT5saW5rLCAmcnEtPnRpbWVsaW5l
LT5yZXF1ZXN0cykpOworCXJxLT5yaW5nLT5oZWFkID0gcnEtPnBvc3RmaXg7CiAKIAkvKgogCSAq
IFdhbGsgdGhyb3VnaCB0aGUgYWN0aXZlIGxpc3QsIGNhbGxpbmcgcmV0aXJlIG9uIGVhY2guIFRo
aXMgYWxsb3dzCkBAIC0zMjAsNyArMjk2LDcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3Jl
dGlyZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogdm9pZCBpOTE1X3JlcXVlc3RfcmV0aXJl
X3VwdG8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7Ci0Jc3RydWN0IGludGVsX3JpbmcgKnJp
bmcgPSBycS0+cmluZzsKKwlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKiBjb25zdCB0bCA9IHJxLT50
aW1lbGluZTsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICp0bXA7CiAKIAlHRU1fVFJBQ0UoIiVzIGZl
bmNlICVsbHg6JWxsZCwgY3VycmVudCAlZFxuIiwKQEAgLTMyOCwxNSArMzA0LDExIEBAIHZvaWQg
aTkxNV9yZXF1ZXN0X3JldGlyZV91cHRvKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCQkgIHJx
LT5mZW5jZS5jb250ZXh0LCBycS0+ZmVuY2Uuc2Vxbm8sCiAJCSAgaHdzcF9zZXFubyhycSkpOwog
Ci0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCWxv
Y2tkZXBfYXNzZXJ0X2hlbGQoJnRsLT5tdXRleCk7CiAJR0VNX0JVR19PTighaTkxNV9yZXF1ZXN0
X2NvbXBsZXRlZChycSkpOwogCi0JaWYgKGxpc3RfZW1wdHkoJnJxLT5yaW5nX2xpbmspKQotCQly
ZXR1cm47Ci0KIAlkbyB7Ci0JCXRtcCA9IGxpc3RfZmlyc3RfZW50cnkoJnJpbmctPnJlcXVlc3Rf
bGlzdCwKLQkJCQkgICAgICAgdHlwZW9mKCp0bXApLCByaW5nX2xpbmspOworCQl0bXAgPSBsaXN0
X2ZpcnN0X2VudHJ5KCZ0bC0+cmVxdWVzdHMsIHR5cGVvZigqdG1wKSwgbGluayk7CiAJfSB3aGls
ZSAoaTkxNV9yZXF1ZXN0X3JldGlyZSh0bXApICYmIHRtcCAhPSBycSk7CiB9CiAKQEAgLTU2Mywy
OSArNTM1LDI4IEBAIHNlbWFwaG9yZV9ub3RpZnkoc3RydWN0IGk5MTVfc3dfZmVuY2UgKmZlbmNl
LCBlbnVtIGk5MTVfc3dfZmVuY2Vfbm90aWZ5IHN0YXRlKQogCXJldHVybiBOT1RJRllfRE9ORTsK
IH0KIAotc3RhdGljIHZvaWQgcmluZ19yZXRpcmVfcmVxdWVzdHMoc3RydWN0IGludGVsX3Jpbmcg
KnJpbmcpCitzdGF0aWMgdm9pZCByZXRpcmVfcmVxdWVzdHMoc3RydWN0IGludGVsX3RpbWVsaW5l
ICp0bCkKIHsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgKnJuOwogCi0JbGlzdF9mb3JfZWFj
aF9lbnRyeV9zYWZlKHJxLCBybiwgJnJpbmctPnJlcXVlc3RfbGlzdCwgcmluZ19saW5rKQorCWxp
c3RfZm9yX2VhY2hfZW50cnlfc2FmZShycSwgcm4sICZ0bC0+cmVxdWVzdHMsIGxpbmspCiAJCWlm
ICghaTkxNV9yZXF1ZXN0X3JldGlyZShycSkpCiAJCQlicmVhazsKIH0KIAogc3RhdGljIG5vaW5s
aW5lIHN0cnVjdCBpOTE1X3JlcXVlc3QgKgotcmVxdWVzdF9hbGxvY19zbG93KHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQorcmVxdWVzdF9hbGxvY19zbG93KHN0cnVjdCBpbnRl
bF90aW1lbGluZSAqdGwsIGdmcF90IGdmcCkKIHsKLQlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZyA9
IGNlLT5yaW5nOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCi0JaWYgKGxpc3RfZW1wdHko
JnJpbmctPnJlcXVlc3RfbGlzdCkpCisJaWYgKGxpc3RfZW1wdHkoJnRsLT5yZXF1ZXN0cykpCiAJ
CWdvdG8gb3V0OwogCiAJaWYgKCFnZnBmbGFnc19hbGxvd19ibG9ja2luZyhnZnApKQogCQlnb3Rv
IG91dDsKIAogCS8qIE1vdmUgb3VyIG9sZGVzdCByZXF1ZXN0IHRvIHRoZSBzbGFiLWNhY2hlIChp
ZiBub3QgaW4gdXNlISkgKi8KLQlycSA9IGxpc3RfZmlyc3RfZW50cnkoJnJpbmctPnJlcXVlc3Rf
bGlzdCwgdHlwZW9mKCpycSksIHJpbmdfbGluayk7CisJcnEgPSBsaXN0X2ZpcnN0X2VudHJ5KCZ0
bC0+cmVxdWVzdHMsIHR5cGVvZigqcnEpLCBsaW5rKTsKIAlpOTE1X3JlcXVlc3RfcmV0aXJlKHJx
KTsKIAogCXJxID0ga21lbV9jYWNoZV9hbGxvYyhnbG9iYWwuc2xhYl9yZXF1ZXN0cywKQEAgLTU5
NCwxMSArNTY1LDExIEBAIHJlcXVlc3RfYWxsb2Nfc2xvdyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UsIGdmcF90IGdmcCkKIAkJcmV0dXJuIHJxOwogCiAJLyogUmF0ZWxpbWl0IG91cnNlbHZlcyB0
byBwcmV2ZW50IG9vbSBmcm9tIG1hbGljaW91cyBjbGllbnRzICovCi0JcnEgPSBsaXN0X2xhc3Rf
ZW50cnkoJnJpbmctPnJlcXVlc3RfbGlzdCwgdHlwZW9mKCpycSksIHJpbmdfbGluayk7CisJcnEg
PSBsaXN0X2xhc3RfZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCpycSksIGxpbmspOwogCWNv
bmRfc3luY2hyb25pemVfcmN1KHJxLT5yY3VzdGF0ZSk7CiAKIAkvKiBSZXRpcmUgb3VyIG9sZCBy
ZXF1ZXN0cyBpbiB0aGUgaG9wZSB0aGF0IHdlIGZyZWUgc29tZSAqLwotCXJpbmdfcmV0aXJlX3Jl
cXVlc3RzKHJpbmcpOworCXJldGlyZV9yZXF1ZXN0cyh0bCk7CiAKIG91dDoKIAlyZXR1cm4ga21l
bV9jYWNoZV9hbGxvYyhnbG9iYWwuc2xhYl9yZXF1ZXN0cywgZ2ZwKTsKQEAgLTY0OSw3ICs2MjAs
NyBAQCBfX2k5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBf
dCBnZnApCiAJcnEgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3RzLAogCQkJ
ICAgICAgZ2ZwIHwgX19HRlBfUkVUUllfTUFZRkFJTCB8IF9fR0ZQX05PV0FSTik7CiAJaWYgKHVu
bGlrZWx5KCFycSkpIHsKLQkJcnEgPSByZXF1ZXN0X2FsbG9jX3Nsb3coY2UsIGdmcCk7CisJCXJx
ID0gcmVxdWVzdF9hbGxvY19zbG93KHRsLCBnZnApOwogCQlpZiAoIXJxKSB7CiAJCQlyZXQgPSAt
RU5PTUVNOwogCQkJZ290byBlcnJfdW5yZXNlcnZlOwpAQCAtNzQxLDE1ICs3MTIsMTUgQEAgc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqCiBpOTE1X3JlcXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSkKIHsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKLQlpbnQgZXJyOworCXN0cnVj
dCBpbnRlbF90aW1lbGluZSAqdGw7CiAKLQllcnIgPSBpbnRlbF9jb250ZXh0X3RpbWVsaW5lX2xv
Y2soY2UpOwotCWlmIChlcnIpCi0JCXJldHVybiBFUlJfUFRSKGVycik7CisJdGwgPSBpbnRlbF9j
b250ZXh0X3RpbWVsaW5lX2xvY2soY2UpOworCWlmIChJU19FUlIodGwpKQorCQlyZXR1cm4gRVJS
X0NBU1QodGwpOwogCiAJLyogTW92ZSBvdXIgb2xkZXN0IHJlcXVlc3QgdG8gdGhlIHNsYWItY2Fj
aGUgKGlmIG5vdCBpbiB1c2UhKSAqLwotCXJxID0gbGlzdF9maXJzdF9lbnRyeSgmY2UtPnJpbmct
PnJlcXVlc3RfbGlzdCwgdHlwZW9mKCpycSksIHJpbmdfbGluayk7Ci0JaWYgKCFsaXN0X2lzX2xh
c3QoJnJxLT5yaW5nX2xpbmssICZjZS0+cmluZy0+cmVxdWVzdF9saXN0KSkKKwlycSA9IGxpc3Rf
Zmlyc3RfZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCpycSksIGxpbmspOworCWlmICghbGlz
dF9pc19sYXN0KCZycS0+bGluaywgJnRsLT5yZXF1ZXN0cykpCiAJCWk5MTVfcmVxdWVzdF9yZXRp
cmUocnEpOwogCiAJaW50ZWxfY29udGV4dF9lbnRlcihjZSk7CkBAIC03NTksMjIgKzczMCwyMiBA
QCBpOTE1X3JlcXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAkJZ290byBl
cnJfdW5sb2NrOwogCiAJLyogQ2hlY2sgdGhhdCB3ZSBkbyBub3QgaW50ZXJydXB0IG91cnNlbHZl
cyB3aXRoIGEgbmV3IHJlcXVlc3QgKi8KLQlycS0+Y29va2llID0gbG9ja2RlcF9waW5fbG9jaygm
Y2UtPnJpbmctPnRpbWVsaW5lLT5tdXRleCk7CisJcnEtPmNvb2tpZSA9IGxvY2tkZXBfcGluX2xv
Y2soJnRsLT5tdXRleCk7CiAKIAlyZXR1cm4gcnE7CiAKIGVycl91bmxvY2s6Ci0JaW50ZWxfY29u
dGV4dF90aW1lbGluZV91bmxvY2soY2UpOworCWludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2Nr
KHRsKTsKIAlyZXR1cm4gcnE7CiB9CiAKIHN0YXRpYyBpbnQKIGk5MTVfcmVxdWVzdF9hd2FpdF9z
dGFydChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0IGk5MTVfcmVxdWVzdCAqc2lnbmFs
KQogewotCWlmIChsaXN0X2lzX2ZpcnN0KCZzaWduYWwtPnJpbmdfbGluaywgJnNpZ25hbC0+cmlu
Zy0+cmVxdWVzdF9saXN0KSkKKwlpZiAobGlzdF9pc19maXJzdCgmc2lnbmFsLT5saW5rLCAmc2ln
bmFsLT5yaW5nLT50aW1lbGluZS0+cmVxdWVzdHMpKQogCQlyZXR1cm4gMDsKIAotCXNpZ25hbCA9
IGxpc3RfcHJldl9lbnRyeShzaWduYWwsIHJpbmdfbGluayk7CisJc2lnbmFsID0gbGlzdF9wcmV2
X2VudHJ5KHNpZ25hbCwgbGluayk7CiAJaWYgKGludGVsX3RpbWVsaW5lX3N5bmNfaXNfbGF0ZXIo
cnEtPnRpbWVsaW5lLCAmc2lnbmFsLT5mZW5jZSkpCiAJCXJldHVybiAwOwogCkBAIC0xMTY3LDYg
KzExMzgsNyBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpfX2k5MTVfcmVxdWVzdF9jb21taXQoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJICovCiAJR0VNX0JVR19PTihycS0+cmVzZXJ2ZWRfc3Bh
Y2UgPiByaW5nLT5zcGFjZSk7CiAJcnEtPnJlc2VydmVkX3NwYWNlID0gMDsKKwlycS0+ZW1pdHRl
ZF9qaWZmaWVzID0gamlmZmllczsKIAogCS8qCiAJICogUmVjb3JkIHRoZSBwb3NpdGlvbiBvZiB0
aGUgc3RhcnQgb2YgdGhlIGJyZWFkY3J1bWIgc28gdGhhdApAQCAtMTE4MCwxMSArMTE1Miw2IEBA
IHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9yZXF1ZXN0X2NvbW1pdChzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKIAogCXByZXYgPSBfX2k5MTVfcmVxdWVzdF9hZGRfdG9fdGltZWxpbmUocnEp
OwogCi0JbGlzdF9hZGRfdGFpbCgmcnEtPnJpbmdfbGluaywgJnJpbmctPnJlcXVlc3RfbGlzdCk7
Ci0JaWYgKGxpc3RfaXNfZmlyc3QoJnJxLT5yaW5nX2xpbmssICZyaW5nLT5yZXF1ZXN0X2xpc3Qp
KQotCQlsaXN0X2FkZCgmcmluZy0+YWN0aXZlX2xpbmssICZycS0+aTkxNS0+Z3QuYWN0aXZlX3Jp
bmdzKTsKLQlycS0+ZW1pdHRlZF9qaWZmaWVzID0gamlmZmllczsKLQogCS8qCiAJICogTGV0IHRo
ZSBiYWNrZW5kIGtub3cgYSBuZXcgcmVxdWVzdCBoYXMgYXJyaXZlZCB0aGF0IG1heSBuZWVkCiAJ
ICogdG8gYWRqdXN0IHRoZSBleGlzdGluZyBleGVjdXRpb24gc2NoZWR1bGUgZHVlIHRvIGEgaGln
aCBwcmlvcml0eQpAQCAtMTIzNywxMCArMTIwNCwxMSBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpf
X2k5MTVfcmVxdWVzdF9jb21taXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAKIHZvaWQgaTkx
NV9yZXF1ZXN0X2FkZChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKKwlzdHJ1Y3QgaW50ZWxf
dGltZWxpbmUgKiBjb25zdCB0bCA9IHJxLT50aW1lbGluZTsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpwcmV2OwogCi0JbG9ja2RlcF9hc3NlcnRfaGVsZCgmcnEtPnRpbWVsaW5lLT5tdXRleCk7Ci0J
bG9ja2RlcF91bnBpbl9sb2NrKCZycS0+dGltZWxpbmUtPm11dGV4LCBycS0+Y29va2llKTsKKwls
b2NrZGVwX2Fzc2VydF9oZWxkKCZ0bC0+bXV0ZXgpOworCWxvY2tkZXBfdW5waW5fbG9jaygmdGwt
Pm11dGV4LCBycS0+Y29va2llKTsKIAogCXRyYWNlX2k5MTVfcmVxdWVzdF9hZGQocnEpOwogCkBA
IC0xMjYzLDEwICsxMjMxLDEwIEBAIHZvaWQgaTkxNV9yZXF1ZXN0X2FkZChzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycSkKIAkgKiB3b3JrIG9uIGJlaGFsZiBvZiBvdGhlcnMgLS0gYnV0IGluc3RlYWQg
d2Ugc2hvdWxkIGJlbmVmaXQgZnJvbQogCSAqIGltcHJvdmVkIHJlc291cmNlIG1hbmFnZW1lbnQu
IChXZWxsLCB0aGF0J3MgdGhlIHRoZW9yeSBhdCBsZWFzdC4pCiAJICovCi0JaWYgKHByZXYgJiYg
aTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChwcmV2KSkKKwlpZiAocHJldiAmJiBpOTE1X3JlcXVlc3Rf
Y29tcGxldGVkKHByZXYpICYmIHByZXYtPnRpbWVsaW5lID09IHRsKQogCQlpOTE1X3JlcXVlc3Rf
cmV0aXJlX3VwdG8ocHJldik7CiAKLQltdXRleF91bmxvY2soJnJxLT50aW1lbGluZS0+bXV0ZXgp
OworCW11dGV4X3VubG9jaygmdGwtPm11dGV4KTsKIH0KIAogc3RhdGljIHVuc2lnbmVkIGxvbmcg
bG9jYWxfY2xvY2tfdXModW5zaWduZWQgaW50ICpjcHUpCkBAIC0xNDg3LDE4ICsxNDU1LDQzIEBA
IGxvbmcgaTkxNV9yZXF1ZXN0X3dhaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCiAKIGJvb2wg
aTkxNV9yZXRpcmVfcmVxdWVzdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7Ci0J
c3RydWN0IGludGVsX3JpbmcgKnJpbmcsICp0bXA7CisJc3RydWN0IGludGVsX2d0X3RpbWVsaW5l
cyAqdGltZWxpbmVzID0gJmk5MTUtPmd0LnRpbWVsaW5lczsKKwlzdHJ1Y3QgaW50ZWxfdGltZWxp
bmUgKnRsLCAqdG47CisJTElTVF9IRUFEKGZyZWUpOworCisJc3Bpbl9sb2NrKCZ0aW1lbGluZXMt
PmxvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZ0aW1lbGluZXMtPmFj
dGl2ZV9saXN0LCBsaW5rKSB7CisJCWlmICghbXV0ZXhfdHJ5bG9jaygmdGwtPm11dGV4KSkKKwkJ
CWNvbnRpbnVlOworCisJCWludGVsX3RpbWVsaW5lX2dldCh0bCk7CisJCUdFTV9CVUdfT04oIXRs
LT5hY3RpdmVfY291bnQpOworCQl0bC0+YWN0aXZlX2NvdW50Kys7IC8qIHBpbiB0aGUgbGlzdCBl
bGVtZW50ICovCisJCXNwaW5fdW5sb2NrKCZ0aW1lbGluZXMtPmxvY2spOwogCi0JbG9ja2RlcF9h
c3NlcnRfaGVsZCgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CisJCXJldGlyZV9yZXF1ZXN0cyh0
bCk7CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocmluZywgdG1wLAotCQkJCSAmaTkxNS0+
Z3QuYWN0aXZlX3JpbmdzLCBhY3RpdmVfbGluaykgewotCQlpbnRlbF9yaW5nX2dldChyaW5nKTsg
LyogbGFzdCBycSBob2xkcyByZWZlcmVuY2UhICovCi0JCXJpbmdfcmV0aXJlX3JlcXVlc3RzKHJp
bmcpOwotCQlpbnRlbF9yaW5nX3B1dChyaW5nKTsKKwkJc3Bpbl9sb2NrKCZ0aW1lbGluZXMtPmxv
Y2spOworCisJCS8qIFJlc3RhcnQgaXRlcmF0aW9uIGFmdGVyIGRyb3BwaW5nIGxvY2sgKi8KKwkJ
bGlzdF9zYWZlX3Jlc2V0X25leHQodGwsIHRuLCBsaW5rKTsKKwkJaWYgKCEtLXRsLT5hY3RpdmVf
Y291bnQpCisJCQlsaXN0X2RlbCgmdGwtPmxpbmspOworCisJCW11dGV4X3VubG9jaygmdGwtPm11
dGV4KTsKKworCQkvKiBEZWZlciB0aGUgZmluYWwgcmVsZWFzZSB0byBhZnRlciB0aGUgc3Bpbmxv
Y2sgKi8KKwkJaWYgKHJlZmNvdW50X2RlY19hbmRfdGVzdCgmdGwtPmtyZWYucmVmY291bnQpKSB7
CisJCQlHRU1fQlVHX09OKHRsLT5hY3RpdmVfY291bnQpOworCQkJbGlzdF9hZGQoJnRsLT5saW5r
LCAmZnJlZSk7CisJCX0KIAl9CisJc3Bpbl91bmxvY2soJnRpbWVsaW5lcy0+bG9jayk7CisKKwls
aXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUodGwsIHRuLCAmZnJlZSwgbGluaykKKwkJX19pbnRlbF90
aW1lbGluZV9mcmVlKCZ0bC0+a3JlZik7CiAKLQlyZXR1cm4gIWxpc3RfZW1wdHkoJmk5MTUtPmd0
LmFjdGl2ZV9yaW5ncyk7CisJcmV0dXJuICFsaXN0X2VtcHR5KCZ0aW1lbGluZXMtPmFjdGl2ZV9s
aXN0KTsKIH0KIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaAppbmRleCBiNThjZWVmOTJlMjAuLmE2YjFlNWY0Mzk0
OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKQEAgLTIyMSw5ICsyMjEsNiBAQCBz
dHJ1Y3QgaTkxNV9yZXF1ZXN0IHsKIAkvKiogdGltZWxpbmUtPnJlcXVlc3QgZW50cnkgZm9yIHRo
aXMgcmVxdWVzdCAqLwogCXN0cnVjdCBsaXN0X2hlYWQgbGluazsKIAotCS8qKiByaW5nLT5yZXF1
ZXN0X2xpc3QgZW50cnkgZm9yIHRoaXMgcmVxdWVzdCAqLwotCXN0cnVjdCBsaXN0X2hlYWQgcmlu
Z19saW5rOwotCiAJc3RydWN0IGRybV9pOTE1X2ZpbGVfcHJpdmF0ZSAqZmlsZV9wcml2OwogCS8q
KiBmaWxlX3ByaXYgbGlzdCBlbnRyeSBmb3IgdGhpcyByZXF1ZXN0ICovCiAJc3RydWN0IGxpc3Rf
aGVhZCBjbGllbnRfbGluazsKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vaW50ZWwtZ2Z4

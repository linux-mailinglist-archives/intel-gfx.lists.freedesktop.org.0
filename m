Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 098C64F84E
	for <lists+intel-gfx@lfdr.de>; Sat, 22 Jun 2019 23:21:18 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7B82589DC5;
	Sat, 22 Jun 2019 21:21:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9293389DBC
 for <intel-gfx@lists.freedesktop.org>; Sat, 22 Jun 2019 21:21:06 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16991529-1500050 
 for multiple; Sat, 22 Jun 2019 22:20:58 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 22 Jun 2019 22:20:55 +0100
Message-Id: <20190622212055.25782-10-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190622212055.25782-1-chris@chris-wilson.co.uk>
References: <20190622212055.25782-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 10/10] drm/i915: Lift intel_engines_resume() to
 callers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2luY2UgdGhlIHJlc2V0IHBhdGggd2FudHMgdG8gcmVjb3ZlciB0aGUgZW5naW5lcyBpdHNlbGYs
IGl0IG9ubHkgd2FudHMKdG8gcmVpbml0aWFsaXNlIHRoZSBoYXJkd2FyZSB1c2luZyBpOTE1X2dl
bV9pbml0X2h3KCkuIFB1bGwgdGhlIGNhbGwgdG8KaW50ZWxfZW5naW5lc19yZXN1bWUoKSB0byB0
aGUgbW9kdWxlIGluaXQvcmVzdW1lIHBhdGggc28gd2UgY2FuIGF2b2lkIGl0CmR1cmluZyByZXNl
dC4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVr
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jICAgIHwgICA3ICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaCB8ICAgMiAtCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jICAgICB8ICAyMSArKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmggICAgIHwgICAyICstCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jICAgICB8ICAyMSArKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZ2VtLmMgICAgICAgICAgIHwgMTczICsrKysrKysrKy0tLS0tLS0tLS0tLS0KIDYg
ZmlsZXMgY2hhbmdlZCwgMTE2IGluc2VydGlvbnMoKyksIDExMCBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCmluZGV4IDZiNzMwYmQ0ZDcyZi4uNGQ3NzQz
NzZmNWI4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYwpAQCAtMjU0LDE0
ICsyNTQsMTUgQEAgdm9pZCBpOTE1X2dlbV9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUpCiAJaTkxNV9nZW1fcmVzdG9yZV9ndHRfbWFwcGluZ3MoaTkxNSk7CiAJaTkxNV9nZW1f
cmVzdG9yZV9mZW5jZXMoaTkxNSk7CiAKKwlpZiAoaTkxNV9nZW1faW5pdF9odyhpOTE1KSkKKwkJ
Z290byBlcnJfd2VkZ2VkOworCiAJLyoKIAkgKiBBcyB3ZSBkaWRuJ3QgZmx1c2ggdGhlIGtlcm5l
bCBjb250ZXh0IGJlZm9yZSBzdXNwZW5kLCB3ZSBjYW5ub3QKIAkgKiBndWFyYW50ZWUgdGhhdCB0
aGUgY29udGV4dCBpbWFnZSBpcyBjb21wbGV0ZS4gU28gbGV0J3MganVzdCByZXNldAogCSAqIGl0
IGFuZCBzdGFydCBhZ2Fpbi4KIAkgKi8KLQlpbnRlbF9ndF9yZXN1bWUoJmk5MTUtPmd0KTsKLQot
CWlmIChpOTE1X2dlbV9pbml0X2h3KGk5MTUpKQorCWlmIChpbnRlbF9ndF9yZXN1bWUoJmk5MTUt
Pmd0KSkKIAkJZ290byBlcnJfd2VkZ2VkOwogCiAJaW50ZWxfdWNfcmVzdW1lKGk5MTUpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaAppbmRleCA3ZDA1N2NkY2Q5MTku
LjAxNWFjNzJkN2FkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX3BtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3Bt
LmgKQEAgLTMxLDYgKzMxLDQgQEAgdm9pZCBpbnRlbF9lbmdpbmVfcGFyayhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpOwogCiB2b2lkIGludGVsX2VuZ2luZV9pbml0X19wbShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogCi1pbnQgaW50ZWxfZW5naW5lc19yZXN1bWUoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwotCiAjZW5kaWYgLyogSU5URUxfRU5HSU5FX1BN
X0ggKi8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5jCmluZGV4IGRkYTBlYjY0Yjcy
ZC4uZWRkNTA2OTdkNWUyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMKQEAg
LTUsNiArNSw3IEBACiAgKi8KIAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCisjaW5jbHVkZSAiaW50
ZWxfZW5naW5lX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3RfcG0uaCIKICNpbmNsdWRlICJpbnRl
bF9wbS5oIgogI2luY2x1ZGUgImludGVsX3dha2VyZWYuaCIKQEAgLTEyMiwxMCArMTIzLDExIEBA
IHZvaWQgaW50ZWxfZ3Rfc2FuaXRpemUoc3RydWN0IGludGVsX2d0ICpndCwgYm9vbCBmb3JjZSkK
IAkJaW50ZWxfZW5naW5lX3Jlc2V0KGVuZ2luZSwgZmFsc2UpOwogfQogCi12b2lkIGludGVsX2d0
X3Jlc3VtZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoraW50IGludGVsX2d0X3Jlc3VtZShzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0KQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAllbnVt
IGludGVsX2VuZ2luZV9pZCBpZDsKKwlpbnQgZXJyID0gMDsKIAogCS8qCiAJICogQWZ0ZXIgcmVz
dW1lLCB3ZSBtYXkgbmVlZCB0byBwb2tlIGludG8gdGhlIHBpbm5lZCBrZXJuZWwKQEAgLTEzMyw5
ICsxMzUsMTIgQEAgdm9pZCBpbnRlbF9ndF9yZXN1bWUoc3RydWN0IGludGVsX2d0ICpndCkKIAkg
KiBPbmx5IHRoZSBrZXJuZWwgY29udGV4dHMgc2hvdWxkIHJlbWFpbiBwaW5uZWQgb3ZlciBzdXNw
ZW5kLAogCSAqIGFsbG93aW5nIHVzIHRvIGZpeHVwIHRoZSB1c2VyIGNvbnRleHRzIG9uIHRoZWly
IGZpcnN0IHBpbi4KIAkgKi8KKwlpbnRlbF9ndF9wbV9nZXQoZ3QpOwogCWZvcl9lYWNoX2VuZ2lu
ZShlbmdpbmUsIGd0LT5pOTE1LCBpZCkgewogCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2U7CiAK
KwkJaW50ZWxfZW5naW5lX3BtX2dldChlbmdpbmUpOworCiAJCWNlID0gZW5naW5lLT5rZXJuZWxf
Y29udGV4dDsKIAkJaWYgKGNlKQogCQkJY2UtPm9wcy0+cmVzZXQoY2UpOwpAQCAtMTQzLDUgKzE0
OCwxOSBAQCB2b2lkIGludGVsX2d0X3Jlc3VtZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCQljZSA9
IGVuZ2luZS0+cHJlZW1wdF9jb250ZXh0OwogCQlpZiAoY2UpCiAJCQljZS0+b3BzLT5yZXNldChj
ZSk7CisKKwkJZW5naW5lLT5zZXJpYWwrKzsgLyoga2VybmVsIGNvbnRleHQgbG9zdCAqLworCQll
cnIgPSBlbmdpbmUtPnJlc3VtZShlbmdpbmUpOworCisJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5n
aW5lKTsKKwkJaWYgKGVycikgeworCQkJZGV2X2VycihndC0+aTkxNS0+ZHJtLmRldiwKKwkJCQki
RmFpbGVkIHRvIHJlc3RhcnQgJXMgKCVkKVxuIiwKKwkJCQllbmdpbmUtPm5hbWUsIGVycik7CisJ
CQlicmVhazsKKwkJfQogCX0KKwlpbnRlbF9ndF9wbV9wdXQoZ3QpOworCisJcmV0dXJuIGVycjsK
IH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9wbS5oCmluZGV4IDRkYmI5MmNmNThkNy4u
YmE5NjBlMWZjMjA5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dF9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgKQEAgLTIy
LDYgKzIyLDYgQEAgdm9pZCBpbnRlbF9ndF9wbV9wdXQoc3RydWN0IGludGVsX2d0ICpndCk7CiB2
b2lkIGludGVsX2d0X3BtX2luaXRfZWFybHkoc3RydWN0IGludGVsX2d0ICpndCk7CiAKIHZvaWQg
aW50ZWxfZ3Rfc2FuaXRpemUoc3RydWN0IGludGVsX2d0ICpndCwgYm9vbCBmb3JjZSk7Ci12b2lk
IGludGVsX2d0X3Jlc3VtZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKK2ludCBpbnRlbF9ndF9yZXN1
bWUoc3RydWN0IGludGVsX2d0ICpndCk7CiAKICNlbmRpZiAvKiBJTlRFTF9HVF9QTV9IICovCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCBkZTI4YzIzNzNjMmYuLjE2YjRm
ODEwZGRmMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC05NTEsNiAr
OTUxLDIxIEBAIHN0YXRpYyBpbnQgZG9fcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsCiAJcmV0dXJuIGd0X3Jlc2V0KGk5MTUsIHN0YWxsZWRfbWFzayk7CiB9CiAKK3N0YXRpYyBp
bnQgcmVzdW1lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQoreworCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwlpbnQgcmV0
OworCisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwgaWQpIHsKKwkJcmV0ID0gZW5naW5l
LT5yZXN1bWUoZW5naW5lKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJcmV0
dXJuIDA7Cit9CisKIC8qKgogICogaTkxNV9yZXNldCAtIHJlc2V0IGNoaXAgYWZ0ZXIgYSBoYW5n
CiAgKiBAaTkxNTogI2RybV9pOTE1X3ByaXZhdGUgdG8gcmVzZXQKQEAgLTEwMjUsOSArMTA0MCwx
MyBAQCB2b2lkIGk5MTVfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJaWYg
KHJldCkgewogCQlEUk1fRVJST1IoIkZhaWxlZCB0byBpbml0aWFsaXNlIEhXIGZvbGxvd2luZyBy
ZXNldCAoJWQpXG4iLAogCQkJICByZXQpOwotCQlnb3RvIGVycm9yOworCQlnb3RvIHRhaW50Owog
CX0KIAorCXJldCA9IHJlc3VtZShpOTE1KTsKKwlpZiAocmV0KQorCQlnb3RvIHRhaW50OworCiAJ
aTkxNV9xdWV1ZV9oYW5nY2hlY2soaTkxNSk7CiAKIGZpbmlzaDoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bS5jCmluZGV4IGRlZWNiZTEyOGU1Yi4uNWNjM2E3NWQ1MjFhIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Z2VtLmMKQEAgLTQ2LDcgKzQ2LDYgQEAKICNpbmNsdWRlICJnZW0vaTkxNV9nZW1faW9jdGxzLmgi
CiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX3BtLmgiCiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtZnMu
aCIKLSNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfcG0uaCIKICNpbmNsdWRlICJndC9pbnRlbF9n
dC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2d0X3BtLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfbW9j
cy5oIgpAQCAtMTE5MiwxMiArMTE5MSwxNyBAQCBzdGF0aWMgdm9pZCBpbml0X3VudXNlZF9yaW5n
cyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCX0KIH0KIAotc3RhdGljIGludCBpbml0X2h3KHN0cnVj
dCBpbnRlbF9ndCAqZ3QpCitpbnQgaTkxNV9nZW1faW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1
OwotCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IGd0LT51bmNvcmU7CisJc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlID0gJmk5MTUtPnVuY29yZTsKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0
ID0gJmk5MTUtPmd0OwogCWludCByZXQ7CiAKKwlCVUdfT04oIWk5MTUtPmtlcm5lbF9jb250ZXh0
KTsKKwlyZXQgPSBpOTE1X3Rlcm1pbmFsbHlfd2VkZ2VkKGk5MTUpOworCWlmIChyZXQpCisJCXJl
dHVybiByZXQ7CisKIAlndC0+bGFzdF9pbml0X3RpbWUgPSBrdGltZV9nZXQoKTsKIAogCS8qIERv
dWJsZSBsYXllciBzZWN1cml0eSBibGFua2V0LCBzZWUgaTkxNV9nZW1faW5pdCgpICovCkBAIC0x
MjQ4LDUxICsxMjUyLDEwIEBAIHN0YXRpYyBpbnQgaW5pdF9odyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0
KQogCiAJaW50ZWxfbW9jc19pbml0X2wzY2NfdGFibGUoZ3QpOwogCi0JaW50ZWxfdW5jb3JlX2Zv
cmNld2FrZV9wdXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKLQotCXJldHVybiAwOwotCi1vdXQ6
Ci0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKLQot
CXJldHVybiByZXQ7Ci19Ci0KLWludCBpOTE1X2dlbV9pbml0X2h3KHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQotewotCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZpOTE1LT51
bmNvcmU7Ci0JaW50IHJldDsKLQotCUJVR19PTighaTkxNS0+a2VybmVsX2NvbnRleHQpOwotCXJl
dCA9IGk5MTVfdGVybWluYWxseV93ZWRnZWQoaTkxNSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJl
dDsKLQotCS8qIERvdWJsZSBsYXllciBzZWN1cml0eSBibGFua2V0LCBzZWUgaTkxNV9nZW1faW5p
dCgpICovCi0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQodW5jb3JlLCBGT1JDRVdBS0VfQUxM
KTsKLQotCXJldCA9IGluaXRfaHcoJmk5MTUtPmd0KTsKLQlpZiAocmV0KQotCQlnb3RvIGVycl9p
bml0OwotCi0JLyogT25seSB3aGVuIHRoZSBIVyBpcyByZS1pbml0aWFsaXNlZCwgY2FuIHdlIHJl
cGxheSB0aGUgcmVxdWVzdHMgKi8KLQlyZXQgPSBpbnRlbF9lbmdpbmVzX3Jlc3VtZShpOTE1KTsK
LQlpZiAocmV0KQotCQlnb3RvIGVycl9lbmdpbmVzOwotCi0JaW50ZWxfdW5jb3JlX2ZvcmNld2Fr
ZV9wdXQodW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKLQogCWludGVsX2VuZ2luZXNfc2V0X3NjaGVk
dWxlcl9jYXBzKGk5MTUpOwogCi0JcmV0dXJuIDA7Ci0KLWVycl9lbmdpbmVzOgotCWludGVsX3Vj
X2ZpbmlfaHcoaTkxNSk7Ci1lcnJfaW5pdDoKK291dDoKIAlpbnRlbF91bmNvcmVfZm9yY2V3YWtl
X3B1dCh1bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCi0JaW50ZWxfZW5naW5lc19zZXRfc2NoZWR1
bGVyX2NhcHMoaTkxNSk7Ci0KIAlyZXR1cm4gcmV0OwogfQogCkBAIC0xNDQ5LDI4ICsxNDEyLDI4
IEBAIHN0YXRpYyBpbnQgaW50ZWxfZW5naW5lc192ZXJpZnlfd29ya2Fyb3VuZHMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJcmV0dXJuIGVycjsKIH0KIAotaW50IGk5MTVfZ2VtX2lu
aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQoraW50IGk5MTVfZ2VtX2luaXQo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJaW50IHJldDsKIAogCS8qIFdlIG5l
ZWQgdG8gZmFsbGJhY2sgdG8gNEsgcGFnZXMgaWYgaG9zdCBkb2Vzbid0IHN1cHBvcnQgaHVnZSBn
dHQuICovCi0JaWYgKGludGVsX3ZncHVfYWN0aXZlKGRldl9wcml2KSAmJiAhaW50ZWxfdmdwdV9o
YXNfaHVnZV9ndHQoZGV2X3ByaXYpKQotCQlta3dyaXRlX2RldmljZV9pbmZvKGRldl9wcml2KS0+
cGFnZV9zaXplcyA9CisJaWYgKGludGVsX3ZncHVfYWN0aXZlKGk5MTUpICYmICFpbnRlbF92Z3B1
X2hhc19odWdlX2d0dChpOTE1KSkKKwkJbWt3cml0ZV9kZXZpY2VfaW5mbyhpOTE1KS0+cGFnZV9z
aXplcyA9CiAJCQlJOTE1X0dUVF9QQUdFX1NJWkVfNEs7CiAKLQlkZXZfcHJpdi0+bW0udW5vcmRl
cmVkX3RpbWVsaW5lID0gZG1hX2ZlbmNlX2NvbnRleHRfYWxsb2MoMSk7CisJaTkxNS0+bW0udW5v
cmRlcmVkX3RpbWVsaW5lID0gZG1hX2ZlbmNlX2NvbnRleHRfYWxsb2MoMSk7CiAKLQlpbnRlbF90
aW1lbGluZXNfaW5pdChkZXZfcHJpdik7CisJaW50ZWxfdGltZWxpbmVzX2luaXQoaTkxNSk7CiAK
LQlyZXQgPSBpOTE1X2dlbV9pbml0X3VzZXJwdHIoZGV2X3ByaXYpOworCXJldCA9IGk5MTVfZ2Vt
X2luaXRfdXNlcnB0cihpOTE1KTsKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JcmV0ID0g
aW50ZWxfdWNfaW5pdF9taXNjKGRldl9wcml2KTsKKwlyZXQgPSBpbnRlbF91Y19pbml0X21pc2Mo
aTkxNSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCXJldCA9IGludGVsX3dvcGNtX2lu
aXQoJmRldl9wcml2LT53b3BjbSk7CisJcmV0ID0gaW50ZWxfd29wY21faW5pdCgmaTkxNS0+d29w
Y20pOwogCWlmIChyZXQpCiAJCWdvdG8gZXJyX3VjX21pc2M7CiAKQEAgLTE0ODAsNTAgKzE0NDMs
NTUgQEAgaW50IGk5MTVfZ2VtX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogCSAqIHdlIGhvbGQgdGhlIGZvcmNld2FrZSBkdXJpbmcgaW5pdGlhbGlzYXRpb24gdGhlc2Ug
cHJvYmxlbXMKIAkgKiBqdXN0IG1hZ2ljYWxseSBnbyBhd2F5LgogCSAqLwotCW11dGV4X2xvY2so
JmRldl9wcml2LT5kcm0uc3RydWN0X211dGV4KTsKLQlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dl
dCgmZGV2X3ByaXYtPnVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7CisJbXV0ZXhfbG9jaygmaTkxNS0+
ZHJtLnN0cnVjdF9tdXRleCk7CisJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQoJmk5MTUtPnVu
Y29yZSwgRk9SQ0VXQUtFX0FMTCk7CiAKLQlyZXQgPSBpOTE1X2luaXRfZ2d0dChkZXZfcHJpdik7
CisJcmV0ID0gaTkxNV9pbml0X2dndHQoaTkxNSk7CiAJaWYgKHJldCkgewogCQlHRU1fQlVHX09O
KHJldCA9PSAtRUlPKTsKIAkJZ290byBlcnJfdW5sb2NrOwogCX0KIAotCXJldCA9IGk5MTVfZ2Vt
X2luaXRfc2NyYXRjaChkZXZfcHJpdiwKLQkJCQkgICAgSVNfR0VOKGRldl9wcml2LCAyKSA/IFNa
XzI1NksgOiBQQUdFX1NJWkUpOworCXJldCA9IGk5MTVfZ2VtX2luaXRfc2NyYXRjaChpOTE1LAor
CQkJCSAgICBJU19HRU4oaTkxNSwgMikgPyBTWl8yNTZLIDogUEFHRV9TSVpFKTsKIAlpZiAocmV0
KSB7CiAJCUdFTV9CVUdfT04ocmV0ID09IC1FSU8pOwogCQlnb3RvIGVycl9nZ3R0OwogCX0KIAot
CXJldCA9IGludGVsX2VuZ2luZXNfc2V0dXAoZGV2X3ByaXYpOworCXJldCA9IGludGVsX2VuZ2lu
ZXNfc2V0dXAoaTkxNSk7CiAJaWYgKHJldCkgewogCQlHRU1fQlVHX09OKHJldCA9PSAtRUlPKTsK
IAkJZ290byBlcnJfdW5sb2NrOwogCX0KIAotCXJldCA9IGk5MTVfZ2VtX2NvbnRleHRzX2luaXQo
ZGV2X3ByaXYpOworCXJldCA9IGk5MTVfZ2VtX2NvbnRleHRzX2luaXQoaTkxNSk7CiAJaWYgKHJl
dCkgewogCQlHRU1fQlVHX09OKHJldCA9PSAtRUlPKTsKIAkJZ290byBlcnJfc2NyYXRjaDsKIAl9
CiAKLQlyZXQgPSBpbnRlbF9lbmdpbmVzX2luaXQoZGV2X3ByaXYpOworCXJldCA9IGludGVsX2Vu
Z2luZXNfaW5pdChpOTE1KTsKIAlpZiAocmV0KSB7CiAJCUdFTV9CVUdfT04ocmV0ID09IC1FSU8p
OwogCQlnb3RvIGVycl9jb250ZXh0OwogCX0KIAotCWludGVsX2luaXRfZ3RfcG93ZXJzYXZlKGRl
dl9wcml2KTsKKwlpbnRlbF9pbml0X2d0X3Bvd2Vyc2F2ZShpOTE1KTsKIAotCXJldCA9IGludGVs
X3VjX2luaXQoZGV2X3ByaXYpOworCXJldCA9IGludGVsX3VjX2luaXQoaTkxNSk7CiAJaWYgKHJl
dCkKIAkJZ290byBlcnJfcG07CiAKLQlyZXQgPSBpOTE1X2dlbV9pbml0X2h3KGRldl9wcml2KTsK
KwlyZXQgPSBpOTE1X2dlbV9pbml0X2h3KGk5MTUpOwogCWlmIChyZXQpCiAJCWdvdG8gZXJyX3Vj
X2luaXQ7CiAKKwkvKiBPbmx5IHdoZW4gdGhlIEhXIGlzIHJlLWluaXRpYWxpc2VkLCBjYW4gd2Ug
cmVwbGF5IHRoZSByZXF1ZXN0cyAqLworCXJldCA9IGludGVsX2d0X3Jlc3VtZSgmaTkxNS0+Z3Qp
OworCWlmIChyZXQpCisJCWdvdG8gZXJyX2luaXRfaHc7CisKIAkvKgogCSAqIERlc3BpdGUgaXRz
IG5hbWUgaW50ZWxfaW5pdF9jbG9ja19nYXRpbmcgYXBwbGllcyBib3RoIGRpc3BsYXkKIAkgKiBj
bG9jayBnYXRpbmcgd29ya2Fyb3VuZHM7IEdUIG1taW8gd29ya2Fyb3VuZHMgYW5kIHRoZSBvY2Nh
c2lvbmFsCkBAIC0xNTMzLDI4ICsxNTAxLDI4IEBAIGludCBpOTE1X2dlbV9pbml0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkgKgogCSAqIEZJWE1FOiBicmVhayB1cCB0aGUg
d29ya2Fyb3VuZHMgYW5kIGFwcGx5IHRoZW0gYXQgdGhlIHJpZ2h0IHRpbWUhCiAJICovCi0JaW50
ZWxfaW5pdF9jbG9ja19nYXRpbmcoZGV2X3ByaXYpOworCWludGVsX2luaXRfY2xvY2tfZ2F0aW5n
KGk5MTUpOwogCi0JcmV0ID0gaW50ZWxfZW5naW5lc192ZXJpZnlfd29ya2Fyb3VuZHMoZGV2X3By
aXYpOworCXJldCA9IGludGVsX2VuZ2luZXNfdmVyaWZ5X3dvcmthcm91bmRzKGk5MTUpOwogCWlm
IChyZXQpCi0JCWdvdG8gZXJyX2luaXRfaHc7CisJCWdvdG8gZXJyX2d0OwogCi0JcmV0ID0gX19p
bnRlbF9lbmdpbmVzX3JlY29yZF9kZWZhdWx0cyhkZXZfcHJpdik7CisJcmV0ID0gX19pbnRlbF9l
bmdpbmVzX3JlY29yZF9kZWZhdWx0cyhpOTE1KTsKIAlpZiAocmV0KQotCQlnb3RvIGVycl9pbml0
X2h3OworCQlnb3RvIGVycl9ndDsKIAogCWlmIChpOTE1X2luamVjdF9sb2FkX2ZhaWx1cmUoKSkg
ewogCQlyZXQgPSAtRU5PREVWOwotCQlnb3RvIGVycl9pbml0X2h3OworCQlnb3RvIGVycl9ndDsK
IAl9CiAKIAlpZiAoaTkxNV9pbmplY3RfbG9hZF9mYWlsdXJlKCkpIHsKIAkJcmV0ID0gLUVJTzsK
LQkJZ290byBlcnJfaW5pdF9odzsKKwkJZ290byBlcnJfZ3Q7CiAJfQogCi0JaW50ZWxfdW5jb3Jl
X2ZvcmNld2FrZV9wdXQoJmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCW11dGV4
X3VubG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCWludGVsX3VuY29yZV9mb3Jj
ZXdha2VfcHV0KCZpOTE1LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOworCW11dGV4X3VubG9jaygm
aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAKIAlyZXR1cm4gMDsKIApAQCAtMTU2NCw2NiArMTUz
Miw2NyBAQCBpbnQgaTkxNV9nZW1faW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiAJICogSFcgYXMgaXJyZXZpc2libHkgd2VkZ2VkLCBidXQga2VlcCBlbm91Z2ggc3RhdGUg
YXJvdW5kIHRoYXQgdGhlCiAJICogZHJpdmVyIGRvZXNuJ3QgZXhwbG9kZSBkdXJpbmcgcnVudGlt
ZS4KIAkgKi8KLWVycl9pbml0X2h3OgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1
Y3RfbXV0ZXgpOworZXJyX2d0OgorCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRl
eCk7CiAKLQlpOTE1X2dlbV9zZXRfd2VkZ2VkKGRldl9wcml2KTsKLQlpOTE1X2dlbV9zdXNwZW5k
KGRldl9wcml2KTsKLQlpOTE1X2dlbV9zdXNwZW5kX2xhdGUoZGV2X3ByaXYpOworCWk5MTVfZ2Vt
X3NldF93ZWRnZWQoaTkxNSk7CisJaTkxNV9nZW1fc3VzcGVuZChpOTE1KTsKKwlpOTE1X2dlbV9z
dXNwZW5kX2xhdGUoaTkxNSk7CiAKLQlpOTE1X2dlbV9kcmFpbl93b3JrcXVldWUoZGV2X3ByaXYp
OworCWk5MTVfZ2VtX2RyYWluX3dvcmtxdWV1ZShpOTE1KTsKIAotCW11dGV4X2xvY2soJmRldl9w
cml2LT5kcm0uc3RydWN0X211dGV4KTsKLQlpbnRlbF91Y19maW5pX2h3KGRldl9wcml2KTsKKwlt
dXRleF9sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKK2Vycl9pbml0X2h3OgorCWludGVs
X3VjX2ZpbmlfaHcoaTkxNSk7CiBlcnJfdWNfaW5pdDoKLQlpbnRlbF91Y19maW5pKGRldl9wcml2
KTsKKwlpbnRlbF91Y19maW5pKGk5MTUpOwogZXJyX3BtOgogCWlmIChyZXQgIT0gLUVJTykgewot
CQlpbnRlbF9jbGVhbnVwX2d0X3Bvd2Vyc2F2ZShkZXZfcHJpdik7Ci0JCWludGVsX2VuZ2luZXNf
Y2xlYW51cChkZXZfcHJpdik7CisJCWludGVsX2NsZWFudXBfZ3RfcG93ZXJzYXZlKGk5MTUpOwor
CQlpbnRlbF9lbmdpbmVzX2NsZWFudXAoaTkxNSk7CiAJfQogZXJyX2NvbnRleHQ6CiAJaWYgKHJl
dCAhPSAtRUlPKQotCQlpOTE1X2dlbV9jb250ZXh0c19maW5pKGRldl9wcml2KTsKKwkJaTkxNV9n
ZW1fY29udGV4dHNfZmluaShpOTE1KTsKIGVycl9zY3JhdGNoOgotCWk5MTVfZ2VtX2Zpbmlfc2Ny
YXRjaChkZXZfcHJpdik7CisJaTkxNV9nZW1fZmluaV9zY3JhdGNoKGk5MTUpOwogZXJyX2dndHQ6
CiBlcnJfdW5sb2NrOgotCWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KCZkZXZfcHJpdi0+dW5j
b3JlLCBGT1JDRVdBS0VfQUxMKTsKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5kcm0uc3RydWN0
X211dGV4KTsKKwlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX3B1dCgmaTkxNS0+dW5jb3JlLCBGT1JD
RVdBS0VfQUxMKTsKKwltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCiBl
cnJfdWNfbWlzYzoKLQlpbnRlbF91Y19maW5pX21pc2MoZGV2X3ByaXYpOworCWludGVsX3VjX2Zp
bmlfbWlzYyhpOTE1KTsKIAogCWlmIChyZXQgIT0gLUVJTykgewotCQlpOTE1X2dlbV9jbGVhbnVw
X3VzZXJwdHIoZGV2X3ByaXYpOwotCQlpbnRlbF90aW1lbGluZXNfZmluaShkZXZfcHJpdik7CisJ
CWk5MTVfZ2VtX2NsZWFudXBfdXNlcnB0cihpOTE1KTsKKwkJaW50ZWxfdGltZWxpbmVzX2Zpbmko
aTkxNSk7CiAJfQogCiAJaWYgKHJldCA9PSAtRUlPKSB7Ci0JCW11dGV4X2xvY2soJmRldl9wcml2
LT5kcm0uc3RydWN0X211dGV4KTsKKwkJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRl
eCk7CiAKIAkJLyoKIAkJICogQWxsb3cgZW5naW5lIGluaXRpYWxpc2F0aW9uIHRvIGZhaWwgYnkg
bWFya2luZyB0aGUgR1BVIGFzCiAJCSAqIHdlZGdlZC4gQnV0IHdlIG9ubHkgd2FudCB0byBkbyB0
aGlzIHdoZXJlIHRoZSBHUFUgaXMgYW5ncnksCiAJCSAqIGZvciBhbGwgb3RoZXIgZmFpbHVyZSwg
c3VjaCBhcyBhbiBhbGxvY2F0aW9uIGZhaWx1cmUsIGJhaWwuCiAJCSAqLwotCQlpZiAoIWk5MTVf
cmVzZXRfZmFpbGVkKGRldl9wcml2KSkgewotCQkJaTkxNV9sb2FkX2Vycm9yKGRldl9wcml2LAor
CQlpZiAoIWk5MTVfcmVzZXRfZmFpbGVkKGk5MTUpKSB7CisJCQlpOTE1X2xvYWRfZXJyb3IoaTkx
NSwKIAkJCQkJIkZhaWxlZCB0byBpbml0aWFsaXplIEdQVSwgZGVjbGFyaW5nIGl0IHdlZGdlZCFc
biIpOwotCQkJaTkxNV9nZW1fc2V0X3dlZGdlZChkZXZfcHJpdik7CisJCQlpOTE1X2dlbV9zZXRf
d2VkZ2VkKGk5MTUpOwogCQl9CiAKIAkJLyogTWluaW1hbCBiYXNpYyByZWNvdmVyeSBmb3IgS01T
ICovCi0JCXJldCA9IGk5MTVfZ2d0dF9lbmFibGVfaHcoZGV2X3ByaXYpOwotCQlpOTE1X2dlbV9y
ZXN0b3JlX2d0dF9tYXBwaW5ncyhkZXZfcHJpdik7Ci0JCWk5MTVfZ2VtX3Jlc3RvcmVfZmVuY2Vz
KGRldl9wcml2KTsKLQkJaW50ZWxfaW5pdF9jbG9ja19nYXRpbmcoZGV2X3ByaXYpOworCQlyZXQg
PSBpOTE1X2dndHRfZW5hYmxlX2h3KGk5MTUpOworCQlpOTE1X2dlbV9yZXN0b3JlX2d0dF9tYXBw
aW5ncyhpOTE1KTsKKwkJaTkxNV9nZW1fcmVzdG9yZV9mZW5jZXMoaTkxNSk7CisJCWludGVsX2lu
aXRfY2xvY2tfZ2F0aW5nKGk5MTUpOwogCi0JCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPmRybS5z
dHJ1Y3RfbXV0ZXgpOworCQltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwog
CX0KIAotCWk5MTVfZ2VtX2RyYWluX2ZyZWVkX29iamVjdHMoZGV2X3ByaXYpOworCWk5MTVfZ2Vt
X2RyYWluX2ZyZWVkX29iamVjdHMoaTkxNSk7CiAJcmV0dXJuIHJldDsKIH0KIAotLSAKMi4yMC4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id D65673C184B
	for <lists+intel-gfx@lfdr.de>; Thu,  8 Jul 2021 19:38:21 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 059DC6E948;
	Thu,  8 Jul 2021 17:38:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mail-wm1-x32f.google.com (mail-wm1-x32f.google.com
 [IPv6:2a00:1450:4864:20::32f])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2DBBC6E949
 for <intel-gfx@lists.freedesktop.org>; Thu,  8 Jul 2021 17:38:10 +0000 (UTC)
Received: by mail-wm1-x32f.google.com with SMTP id
 u8-20020a7bcb080000b02901e44e9caa2aso4549260wmj.4
 for <intel-gfx@lists.freedesktop.org>; Thu, 08 Jul 2021 10:38:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ffwll.ch; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=fJWoyA6G2JkaA69/5nx0S1j8TXeHRpIQLImqh6Ok90g=;
 b=Iwa4RGJc6pSVqcozSr7UVAs6Kjgohf+512xvkF19bAHlYjAb6/MrzkXrHlFYT1p8v4
 hCfzIc3bXfn+YT3bIgQcfcM8/Fog5pLsCj8MiYSl000W7pH6D7a3x2idQiMAozRYokq7
 aF8S+Tk0VvVe2I6JGmj0wEPEj6JdukJsWkBWY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=fJWoyA6G2JkaA69/5nx0S1j8TXeHRpIQLImqh6Ok90g=;
 b=P7cqIZH05ZFBVcQFGZE7OmpZ8tGuPI9IMMU3WJBFZxByS7wl8zEkHizXFCZlIs3w7D
 56sGrUWYLsjONbSGWF1gEoYy49yTv5wkAKcZ2t87RTR3EmQG3goo8raL5Yxli/9hAbLH
 yyWT6RF4OZjOdTk7MLYRrel3esvDnfC00JyfZRX7VU4/W3T4UNoyWbyuAwXfoI87mh00
 GfJMytASkr2jY8vEESV6mVIuzI76GMNRKgkW+lNWpN/9PaPKDVRmIAPEM2r5jhV1vhMZ
 B4cNQMtajZxA2J1xSUhXkX250/5viJO2/BQenNv89K0TrG5OaJU7JMmSOxSwiSjJVtR5
 CCqw==
X-Gm-Message-State: AOAM531mi8VqBu4p4I5QzBrxA2ykcR6k27eYLsLsaq8DjEpKCcGZ/BPT
 GtG8fHe6dMlYrLXJideraTA7Dg==
X-Google-Smtp-Source: ABdhPJz485+ixssBY3blmTtjvLk/Z9doZfYtZuK1N73H8Y07YN8HhAWiiPAwL5W7gNTzIAgs4w2QJQ==
X-Received: by 2002:a7b:c34d:: with SMTP id l13mr6523070wmj.99.1625765888779; 
 Thu, 08 Jul 2021 10:38:08 -0700 (PDT)
Received: from phenom.ffwll.local ([2a02:168:57f4:0:efd0:b9e5:5ae6:c2fa])
 by smtp.gmail.com with ESMTPSA id l4sm2521853wme.26.2021.07.08.10.38.07
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 08 Jul 2021 10:38:08 -0700 (PDT)
From: Daniel Vetter <daniel.vetter@ffwll.ch>
To: DRI Development <dri-devel@lists.freedesktop.org>
Date: Thu,  8 Jul 2021 19:37:36 +0200
Message-Id: <20210708173754.3877540-3-daniel.vetter@ffwll.ch>
X-Mailer: git-send-email 2.32.0
In-Reply-To: <20210708173754.3877540-1-daniel.vetter@ffwll.ch>
References: <20210708173754.3877540-1-daniel.vetter@ffwll.ch>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 02/20] drm/sched: Split drm_sched_job_init
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Emma Anholt <emma@anholt.net>, Adam Borowski <kilobyte@angband.pl>,
 David Airlie <airlied@linux.ie>, Daniel Vetter <daniel.vetter@ffwll.ch>,
 Melissa Wen <melissa.srw@gmail.com>, Nirmoy Das <nirmoy.das@amd.com>,
 Viresh Kumar <viresh.kumar@linaro.org>,
 Daniel Vetter <daniel.vetter@intel.com>, Lee Jones <lee.jones@linaro.org>,
 Sumit Semwal <sumit.semwal@linaro.org>, Rob Herring <robh@kernel.org>,
 lima@lists.freedesktop.org, Mauro Carvalho Chehab <mchehab+huawei@kernel.org>,
 Masahiro Yamada <masahiroy@kernel.org>, Steven Price <steven.price@arm.com>,
 Luben Tuikov <luben.tuikov@amd.com>,
 Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>,
 Sami Tolvanen <samitolvanen@google.com>,
 Russell King <linux+etnaviv@armlinux.org.uk>, Dave Airlie <airlied@redhat.com>,
 =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>,
 Dennis Li <Dennis.Li@amd.com>, Chen Li <chenli@uniontech.com>,
 Paul Menzel <pmenzel@molgen.mpg.de>, Kees Cook <keescook@chromium.org>,
 Intel Graphics Development <intel-gfx@lists.freedesktop.org>,
 Kevin Wang <kevin1.wang@amd.com>, etnaviv@lists.freedesktop.org,
 linaro-mm-sig@lists.linaro.org,
 Christian Gmeiner <christian.gmeiner@gmail.com>,
 Andrey Grodzovsky <andrey.grodzovsky@amd.com>,
 Sonny Jiang <sonny.jiang@amd.com>, Deepak R Varma <mh12gx2825@gmail.com>,
 Tomeu Vizoso <tomeu.vizoso@collabora.com>, Nick Terrell <terrelln@fb.com>,
 Qiang Yu <yuq825@gmail.com>, Alex Deucher <alexander.deucher@amd.com>,
 Tian Tao <tiantao6@hisilicon.com>, linux-media@vger.kernel.org,
 =?UTF-8?q?Christian=20K=C3=B6nig?= <christian.koenig@amd.com>,
 Lucas Stach <l.stach@pengutronix.de>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhpcyBpcyBhIHZlcnkgY29uZnVzaW5nbHkgbmFtZWQgZnVuY3Rpb24sIGJlY2F1c2Ugbm90IGp1
c3QgZG9lcyBpdAppbml0IGFuIG9iamVjdCwgaXQgYXJtcyBpdCBhbmQgcHJvdmlkZXMgYSBwb2lu
dCBvZiBubyByZXR1cm4gZm9yCnB1c2hpbmcgYSBqb2IgaW50byB0aGUgc2NoZWR1bGVyLiBJdCB3
b3VsZCBiZSBuaWNlIGlmIHRoYXQncyBhIGJpdApjbGVhcmVyIGluIHRoZSBpbnRlcmZhY2UuCgpC
dXQgdGhlIHJlYWwgcmVhc29uIGlzIHRoYXQgSSB3YW50IHRvIHB1c2ggdGhlIGRlcGVuZGVuY3kg
dHJhY2tpbmcKaGVscGVycyBpbnRvIHRoZSBzY2hlZHVsZXIgY29kZSwgYW5kIHRoYXQgbWVhbnMg
ZHJtX3NjaGVkX2pvYl9pbml0Cm11c3QgYmUgY2FsbGVkIGEgbG90IGVhcmxpZXIsIHdpdGhvdXQg
YXJtaW5nIHRoZSBqb2IuCgp2MjoKLSBkb24ndCBjaGFuZ2UgLmdpdGlnbm9yZSAoU3RldmVuKQot
IGRvbid0IGZvcmdldCB2M2QgKEVtbWEpCgp2MzogRW1tYSBub3RpY2VkIHRoYXQgSSBsZWFrIHRo
ZSBtZW1vcnkgYWxsb2NhdGVkIGluCmRybV9zY2hlZF9qb2JfaW5pdCBpZiB3ZSBiYWlsIG91dCBi
ZWZvcmUgdGhlIHBvaW50IG9mIG5vIHJldHVybiBpbgpzdWJzZXF1ZW50IGRyaXZlciBwYXRjaGVz
LiBUbyBiZSBhYmxlIHRvIGZpeCB0aGlzIGNoYW5nZQpkcm1fc2NoZWRfam9iX2NsZWFudXAoKSBz
byBpdCBjYW4gaGFuZGxlIGJlaW5nIGNhbGxlZCBib3RoIGJlZm9yZSBhbmQKYWZ0ZXIgZHJtX3Nj
aGVkX2pvYl9hcm0oKS4KCkFsc28gaW1wcm92ZSB0aGUga2VybmVsZG9jIGZvciB0aGlzLgoKdjQ6
Ci0gRml4IHRoZSBkcm1fc2NoZWRfam9iX2NsZWFudXAgbG9naWMsIEkgaW52ZXJ0ZWQgdGhlIGJv
b2xlYW5zLCBhcwogIHVzdWFsIChNZWxpc3NhKQoKLSBDaHJpc3RpYW4gcG9pbnRlZCBvdXQgdGhh
dCBkcm1fc2NoZWRfZW50aXR5X3NlbGVjdF9ycSgpIGFsc28gbmVlZHMKICB0byBiZSBtb3ZlZCBp
bnRvIGRybV9zY2hlZF9qb2JfYXJtLCB3aGljaCBtYWRlIG1lIHJlYWxpemUgdGhhdCB0aGUKICBq
b2ItPmlkIGRlZmluaXRlbHkgbmVlZHMgdG8gYmUgbW92ZWQgdG9vLgoKICBTaHVmZmxlIHRoaW5n
cyB0byBmaXQgYmV0d2VlbiBqb2JfaW5pdCBhbmQgam9iX2FybS4KCkNjOiBNZWxpc3NhIFdlbiA8
bWVsaXNzYS5zcndAZ21haWwuY29tPgpBY2tlZC1ieTogU3RldmVuIFByaWNlIDxzdGV2ZW4ucHJp
Y2VAYXJtLmNvbT4gKHYyKQpTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgVmV0dGVyIDxkYW5pZWwudmV0
dGVyQGludGVsLmNvbT4KQ2M6IEx1Y2FzIFN0YWNoIDxsLnN0YWNoQHBlbmd1dHJvbml4LmRlPgpD
YzogUnVzc2VsbCBLaW5nIDxsaW51eCtldG5hdml2QGFybWxpbnV4Lm9yZy51az4KQ2M6IENocmlz
dGlhbiBHbWVpbmVyIDxjaHJpc3RpYW4uZ21laW5lckBnbWFpbC5jb20+CkNjOiBRaWFuZyBZdSA8
eXVxODI1QGdtYWlsLmNvbT4KQ2M6IFJvYiBIZXJyaW5nIDxyb2JoQGtlcm5lbC5vcmc+CkNjOiBU
b21ldSBWaXpvc28gPHRvbWV1LnZpem9zb0Bjb2xsYWJvcmEuY29tPgpDYzogU3RldmVuIFByaWNl
IDxzdGV2ZW4ucHJpY2VAYXJtLmNvbT4KQ2M6IEFseXNzYSBSb3Nlbnp3ZWlnIDxhbHlzc2Eucm9z
ZW56d2VpZ0Bjb2xsYWJvcmEuY29tPgpDYzogRGF2aWQgQWlybGllIDxhaXJsaWVkQGxpbnV4Lmll
PgpDYzogRGFuaWVsIFZldHRlciA8ZGFuaWVsQGZmd2xsLmNoPgpDYzogU3VtaXQgU2Vtd2FsIDxz
dW1pdC5zZW13YWxAbGluYXJvLm9yZz4KQ2M6ICJDaHJpc3RpYW4gS8O2bmlnIiA8Y2hyaXN0aWFu
LmtvZW5pZ0BhbWQuY29tPgpDYzogTWFzYWhpcm8gWWFtYWRhIDxtYXNhaGlyb3lAa2VybmVsLm9y
Zz4KQ2M6IEtlZXMgQ29vayA8a2Vlc2Nvb2tAY2hyb21pdW0ub3JnPgpDYzogQWRhbSBCb3Jvd3Nr
aSA8a2lsb2J5dGVAYW5nYmFuZC5wbD4KQ2M6IE5pY2sgVGVycmVsbCA8dGVycmVsbG5AZmIuY29t
PgpDYzogTWF1cm8gQ2FydmFsaG8gQ2hlaGFiIDxtY2hlaGFiK2h1YXdlaUBrZXJuZWwub3JnPgpD
YzogUGF1bCBNZW56ZWwgPHBtZW56ZWxAbW9sZ2VuLm1wZy5kZT4KQ2M6IFNhbWkgVG9sdmFuZW4g
PHNhbWl0b2x2YW5lbkBnb29nbGUuY29tPgpDYzogVmlyZXNoIEt1bWFyIDx2aXJlc2gua3VtYXJA
bGluYXJvLm9yZz4KQ2M6IEFsZXggRGV1Y2hlciA8YWxleGFuZGVyLmRldWNoZXJAYW1kLmNvbT4K
Q2M6IERhdmUgQWlybGllIDxhaXJsaWVkQHJlZGhhdC5jb20+CkNjOiBOaXJtb3kgRGFzIDxuaXJt
b3kuZGFzQGFtZC5jb20+CkNjOiBEZWVwYWsgUiBWYXJtYSA8bWgxMmd4MjgyNUBnbWFpbC5jb20+
CkNjOiBMZWUgSm9uZXMgPGxlZS5qb25lc0BsaW5hcm8ub3JnPgpDYzogS2V2aW4gV2FuZyA8a2V2
aW4xLndhbmdAYW1kLmNvbT4KQ2M6IENoZW4gTGkgPGNoZW5saUB1bmlvbnRlY2guY29tPgpDYzog
THViZW4gVHVpa292IDxsdWJlbi50dWlrb3ZAYW1kLmNvbT4KQ2M6ICJNYXJlayBPbMWhw6FrIiA8
bWFyZWsub2xzYWtAYW1kLmNvbT4KQ2M6IERlbm5pcyBMaSA8RGVubmlzLkxpQGFtZC5jb20+CkNj
OiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwuY29tPgpD
YzogQW5kcmV5IEdyb2R6b3Zza3kgPGFuZHJleS5ncm9kem92c2t5QGFtZC5jb20+CkNjOiBTb25u
eSBKaWFuZyA8c29ubnkuamlhbmdAYW1kLmNvbT4KQ2M6IEJvcmlzIEJyZXppbGxvbiA8Ym9yaXMu
YnJlemlsbG9uQGNvbGxhYm9yYS5jb20+CkNjOiBUaWFuIFRhbyA8dGlhbnRhbzZAaGlzaWxpY29u
LmNvbT4KQ2M6IGV0bmF2aXZAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCkNjOiBsaW1hQGxpc3RzLmZy
ZWVkZXNrdG9wLm9yZwpDYzogbGludXgtbWVkaWFAdmdlci5rZXJuZWwub3JnCkNjOiBsaW5hcm8t
bW0tc2lnQGxpc3RzLmxpbmFyby5vcmcKQ2M6IEVtbWEgQW5ob2x0IDxlbW1hQGFuaG9sdC5uZXQ+
Ci0tLQogZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMgICB8ICAyICsKIGRy
aXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdwdV9qb2IuYyAgfCAgMiArCiBkcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X3NjaGVkLmMgIHwgIDIgKwogZHJpdmVycy9ncHUvZHJtL2xp
bWEvbGltYV9zY2hlZC5jICAgICAgICB8ICAyICsKIGRyaXZlcnMvZ3B1L2RybS9wYW5mcm9zdC9w
YW5mcm9zdF9qb2IuYyAgfCAgMiArCiBkcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX2Vu
dGl0eS5jIHwgIDYgKy0tCiBkcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX2ZlbmNlLmMg
IHwgMTkgKysrKy0tLQogZHJpdmVycy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9tYWluLmMgICB8
IDY0ICsrKysrKysrKysrKysrKysrKysrLS0tLQogZHJpdmVycy9ncHUvZHJtL3YzZC92M2RfZ2Vt
LmMgICAgICAgICAgICB8ICAyICsKIGluY2x1ZGUvZHJtL2dwdV9zY2hlZHVsZXIuaCAgICAgICAg
ICAgICAgfCAgNyArKy0KIDEwIGZpbGVzIGNoYW5nZWQsIDg2IGluc2VydGlvbnMoKyksIDIyIGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2NzLmMKaW5kZXggYzUz
ODZkMTNlYjRhLi5hNGVjMDkyYWY5YTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9hbWQv
YW1kZ3B1L2FtZGdwdV9jcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9jcy5jCkBAIC0xMjI2LDYgKzEyMjYsOCBAQCBzdGF0aWMgaW50IGFtZGdwdV9jc19zdWJtaXQo
c3RydWN0IGFtZGdwdV9jc19wYXJzZXIgKnAsCiAJaWYgKHIpCiAJCWdvdG8gZXJyb3JfdW5sb2Nr
OwogCisJZHJtX3NjaGVkX2pvYl9hcm0oJmpvYi0+YmFzZSk7CisKIAkvKiBObyBtZW1vcnkgYWxs
b2NhdGlvbiBpcyBhbGxvd2VkIHdoaWxlIGhvbGRpbmcgdGhlIG5vdGlmaWVyIGxvY2suCiAJICog
VGhlIGxvY2sgaXMgaGVsZCB1bnRpbCBhbWRncHVfY3Nfc3VibWl0IGlzIGZpbmlzaGVkIGFuZCBm
ZW5jZSBpcwogCSAqIGFkZGVkIHRvIEJPcy4KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9h
bWQvYW1kZ3B1L2FtZGdwdV9qb2IuYyBiL2RyaXZlcnMvZ3B1L2RybS9hbWQvYW1kZ3B1L2FtZGdw
dV9qb2IuYwppbmRleCBkMzNlNmQ5N2NjODkuLjVkZGI5NTVkMjMxNSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2FtZC9hbWRncHUvYW1kZ3B1X2pvYi5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9hbWQvYW1kZ3B1L2FtZGdwdV9qb2IuYwpAQCAtMTcwLDYgKzE3MCw4IEBAIGludCBhbWRncHVf
am9iX3N1Ym1pdChzdHJ1Y3QgYW1kZ3B1X2pvYiAqam9iLCBzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0
eSAqZW50aXR5LAogCWlmIChyKQogCQlyZXR1cm4gcjsKIAorCWRybV9zY2hlZF9qb2JfYXJtKCZq
b2ItPmJhc2UpOworCiAJKmYgPSBkbWFfZmVuY2VfZ2V0KCZqb2ItPmJhc2Uuc19mZW5jZS0+Zmlu
aXNoZWQpOwogCWFtZGdwdV9qb2JfZnJlZV9yZXNvdXJjZXMoam9iKTsKIAlkcm1fc2NoZWRfZW50
aXR5X3B1c2hfam9iKCZqb2ItPmJhc2UsIGVudGl0eSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vZXRuYXZpdi9ldG5hdml2X3NjaGVkLmMgYi9kcml2ZXJzL2dwdS9kcm0vZXRuYXZpdi9l
dG5hdml2X3NjaGVkLmMKaW5kZXggZmViNmRhMWI2Y2ViLi4wNWY0MTIyMDQxMTggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9ldG5hdml2L2V0bmF2aXZfc2NoZWQuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vZXRuYXZpdi9ldG5hdml2X3NjaGVkLmMKQEAgLTE2Myw2ICsxNjMsOCBAQCBpbnQg
ZXRuYXZpdl9zY2hlZF9wdXNoX2pvYihzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqc2NoZWRfZW50
aXR5LAogCWlmIChyZXQpCiAJCWdvdG8gb3V0X3VubG9jazsKIAorCWRybV9zY2hlZF9qb2JfYXJt
KCZzdWJtaXQtPnNjaGVkX2pvYik7CisKIAlzdWJtaXQtPm91dF9mZW5jZSA9IGRtYV9mZW5jZV9n
ZXQoJnN1Ym1pdC0+c2NoZWRfam9iLnNfZmVuY2UtPmZpbmlzaGVkKTsKIAlzdWJtaXQtPm91dF9m
ZW5jZV9pZCA9IGlkcl9hbGxvY19jeWNsaWMoJnN1Ym1pdC0+Z3B1LT5mZW5jZV9pZHIsCiAJCQkJ
CQlzdWJtaXQtPm91dF9mZW5jZSwgMCwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9saW1h
L2xpbWFfc2NoZWQuYyBiL2RyaXZlcnMvZ3B1L2RybS9saW1hL2xpbWFfc2NoZWQuYwppbmRleCBk
YmE4MzI5OTM3YTMuLjM4Zjc1NTU4MDUwNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2xp
bWEvbGltYV9zY2hlZC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9saW1hL2xpbWFfc2NoZWQuYwpA
QCAtMTI5LDYgKzEyOSw4IEBAIGludCBsaW1hX3NjaGVkX3Rhc2tfaW5pdChzdHJ1Y3QgbGltYV9z
Y2hlZF90YXNrICp0YXNrLAogCQlyZXR1cm4gZXJyOwogCX0KIAorCWRybV9zY2hlZF9qb2JfYXJt
KCZ0YXNrLT5iYXNlKTsKKwogCXRhc2stPm51bV9ib3MgPSBudW1fYm9zOwogCXRhc2stPnZtID0g
bGltYV92bV9nZXQodm0pOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3Qv
cGFuZnJvc3Rfam9iLmMgYi9kcml2ZXJzL2dwdS9kcm0vcGFuZnJvc3QvcGFuZnJvc3Rfam9iLmMK
aW5kZXggNzFhNzJmYjUwZTZiLi4yOTkyZGM4NTMyNWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9wYW5mcm9zdC9wYW5mcm9zdF9qb2IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vcGFuZnJv
c3QvcGFuZnJvc3Rfam9iLmMKQEAgLTI4OCw2ICsyODgsOCBAQCBpbnQgcGFuZnJvc3Rfam9iX3B1
c2goc3RydWN0IHBhbmZyb3N0X2pvYiAqam9iKQogCQlnb3RvIHVubG9jazsKIAl9CiAKKwlkcm1f
c2NoZWRfam9iX2FybSgmam9iLT5iYXNlKTsKKwogCWpvYi0+cmVuZGVyX2RvbmVfZmVuY2UgPSBk
bWFfZmVuY2VfZ2V0KCZqb2ItPmJhc2Uuc19mZW5jZS0+ZmluaXNoZWQpOwogCiAJcmV0ID0gcGFu
ZnJvc3RfYWNxdWlyZV9vYmplY3RfZmVuY2VzKGpvYi0+Ym9zLCBqb2ItPmJvX2NvdW50LApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9lbnRpdHkuYyBiL2RyaXZl
cnMvZ3B1L2RybS9zY2hlZHVsZXIvc2NoZWRfZW50aXR5LmMKaW5kZXggNmZjMTE2ZWU3MzAyLi42
NGQzOTgxNjY2NDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9zY2hlZHVsZXIvc2NoZWRf
ZW50aXR5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9lbnRpdHkuYwpA
QCAtNDg1LDkgKzQ4NSw5IEBAIHZvaWQgZHJtX3NjaGVkX2VudGl0eV9zZWxlY3RfcnEoc3RydWN0
IGRybV9zY2hlZF9lbnRpdHkgKmVudGl0eSkKICAqIEBzY2hlZF9qb2I6IGpvYiB0byBzdWJtaXQK
ICAqIEBlbnRpdHk6IHNjaGVkdWxlciBlbnRpdHkKICAqCi0gKiBOb3RlOiBUbyBndWFyYW50ZWUg
dGhhdCB0aGUgb3JkZXIgb2YgaW5zZXJ0aW9uIHRvIHF1ZXVlIG1hdGNoZXMKLSAqIHRoZSBqb2In
cyBmZW5jZSBzZXF1ZW5jZSBudW1iZXIgdGhpcyBmdW5jdGlvbiBzaG91bGQgYmUKLSAqIGNhbGxl
ZCB3aXRoIGRybV9zY2hlZF9qb2JfaW5pdCB1bmRlciBjb21tb24gbG9jay4KKyAqIE5vdGU6IFRv
IGd1YXJhbnRlZSB0aGF0IHRoZSBvcmRlciBvZiBpbnNlcnRpb24gdG8gcXVldWUgbWF0Y2hlcyB0
aGUgam9iJ3MKKyAqIGZlbmNlIHNlcXVlbmNlIG51bWJlciB0aGlzIGZ1bmN0aW9uIHNob3VsZCBi
ZSBjYWxsZWQgd2l0aCBkcm1fc2NoZWRfam9iX2FybSgpCisgKiB1bmRlciBjb21tb24gbG9jay4K
ICAqCiAgKiBSZXR1cm5zIDAgZm9yIHN1Y2Nlc3MsIG5lZ2F0aXZlIGVycm9yIGNvZGUgb3RoZXJ3
aXNlLgogICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX2Zl
bmNlLmMgYi9kcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVkX2ZlbmNlLmMKaW5kZXggNjlk
ZTJjNzY3MzFmLi5iY2VhMDM1Y2Y0YzYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9zY2hl
ZHVsZXIvc2NoZWRfZmVuY2UuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vc2NoZWR1bGVyL3NjaGVk
X2ZlbmNlLmMKQEAgLTkwLDcgKzkwLDcgQEAgc3RhdGljIGNvbnN0IGNoYXIgKmRybV9zY2hlZF9m
ZW5jZV9nZXRfdGltZWxpbmVfbmFtZShzdHJ1Y3QgZG1hX2ZlbmNlICpmKQogICoKICAqIEZyZWUg
dXAgdGhlIGZlbmNlIG1lbW9yeSBhZnRlciB0aGUgUkNVIGdyYWNlIHBlcmlvZC4KICAqLwotc3Rh
dGljIHZvaWQgZHJtX3NjaGVkX2ZlbmNlX2ZyZWUoc3RydWN0IHJjdV9oZWFkICpyY3UpCit2b2lk
IGRybV9zY2hlZF9mZW5jZV9mcmVlKHN0cnVjdCByY3VfaGVhZCAqcmN1KQogewogCXN0cnVjdCBk
bWFfZmVuY2UgKmYgPSBjb250YWluZXJfb2YocmN1LCBzdHJ1Y3QgZG1hX2ZlbmNlLCByY3UpOwog
CXN0cnVjdCBkcm1fc2NoZWRfZmVuY2UgKmZlbmNlID0gdG9fZHJtX3NjaGVkX2ZlbmNlKGYpOwpA
QCAtMTUyLDI3ICsxNTIsMzIgQEAgc3RydWN0IGRybV9zY2hlZF9mZW5jZSAqdG9fZHJtX3NjaGVk
X2ZlbmNlKHN0cnVjdCBkbWFfZmVuY2UgKmYpCiB9CiBFWFBPUlRfU1lNQk9MKHRvX2RybV9zY2hl
ZF9mZW5jZSk7CiAKLXN0cnVjdCBkcm1fc2NoZWRfZmVuY2UgKmRybV9zY2hlZF9mZW5jZV9jcmVh
dGUoc3RydWN0IGRybV9zY2hlZF9lbnRpdHkgKmVudGl0eSwKLQkJCQkJICAgICAgIHZvaWQgKm93
bmVyKQorc3RydWN0IGRybV9zY2hlZF9mZW5jZSAqZHJtX3NjaGVkX2ZlbmNlX2FsbG9jKHN0cnVj
dCBkcm1fc2NoZWRfZW50aXR5ICplbnRpdHksCisJCQkJCSAgICAgIHZvaWQgKm93bmVyKQogewog
CXN0cnVjdCBkcm1fc2NoZWRfZmVuY2UgKmZlbmNlID0gTlVMTDsKLQl1bnNpZ25lZCBzZXE7CiAK
IAlmZW5jZSA9IGttZW1fY2FjaGVfemFsbG9jKHNjaGVkX2ZlbmNlX3NsYWIsIEdGUF9LRVJORUwp
OwogCWlmIChmZW5jZSA9PSBOVUxMKQogCQlyZXR1cm4gTlVMTDsKIAogCWZlbmNlLT5vd25lciA9
IG93bmVyOwotCWZlbmNlLT5zY2hlZCA9IGVudGl0eS0+cnEtPnNjaGVkOwogCXNwaW5fbG9ja19p
bml0KCZmZW5jZS0+bG9jayk7CiAKKwlyZXR1cm4gZmVuY2U7Cit9CisKK3ZvaWQgZHJtX3NjaGVk
X2ZlbmNlX2luaXQoc3RydWN0IGRybV9zY2hlZF9mZW5jZSAqZmVuY2UsCisJCQkgIHN0cnVjdCBk
cm1fc2NoZWRfZW50aXR5ICplbnRpdHkpCit7CisJdW5zaWduZWQgc2VxOworCisJZmVuY2UtPnNj
aGVkID0gZW50aXR5LT5ycS0+c2NoZWQ7CiAJc2VxID0gYXRvbWljX2luY19yZXR1cm4oJmVudGl0
eS0+ZmVuY2Vfc2VxKTsKIAlkbWFfZmVuY2VfaW5pdCgmZmVuY2UtPnNjaGVkdWxlZCwgJmRybV9z
Y2hlZF9mZW5jZV9vcHNfc2NoZWR1bGVkLAogCQkgICAgICAgJmZlbmNlLT5sb2NrLCBlbnRpdHkt
PmZlbmNlX2NvbnRleHQsIHNlcSk7CiAJZG1hX2ZlbmNlX2luaXQoJmZlbmNlLT5maW5pc2hlZCwg
JmRybV9zY2hlZF9mZW5jZV9vcHNfZmluaXNoZWQsCiAJCSAgICAgICAmZmVuY2UtPmxvY2ssIGVu
dGl0eS0+ZmVuY2VfY29udGV4dCArIDEsIHNlcSk7Ci0KLQlyZXR1cm4gZmVuY2U7CiB9CiAKIG1v
ZHVsZV9pbml0KGRybV9zY2hlZF9mZW5jZV9zbGFiX2luaXQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9tYWluLmMgYi9kcml2ZXJzL2dwdS9kcm0vc2NoZWR1
bGVyL3NjaGVkX21haW4uYwppbmRleCAwMWRkNDcxNTQxODEuLjdlOTQ3NTRlYjM0YyAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9tYWluLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL3NjaGVkdWxlci9zY2hlZF9tYWluLmMKQEAgLTQ4LDkgKzQ4LDExIEBACiAjaW5j
bHVkZSA8bGludXgvd2FpdC5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CiAjaW5jbHVkZSA8
bGludXgvY29tcGxldGlvbi5oPgorI2luY2x1ZGUgPGxpbnV4L2RtYS1yZXN2Lmg+CiAjaW5jbHVk
ZSA8dWFwaS9saW51eC9zY2hlZC90eXBlcy5oPgogCiAjaW5jbHVkZSA8ZHJtL2RybV9wcmludC5o
PgorI2luY2x1ZGUgPGRybS9kcm1fZ2VtLmg+CiAjaW5jbHVkZSA8ZHJtL2dwdV9zY2hlZHVsZXIu
aD4KICNpbmNsdWRlIDxkcm0vc3BzY19xdWV1ZS5oPgogCkBAIC01NjksNyArNTcxLDYgQEAgRVhQ
T1JUX1NZTUJPTChkcm1fc2NoZWRfcmVzdWJtaXRfam9ic19leHQpOwogCiAvKioKICAqIGRybV9z
Y2hlZF9qb2JfaW5pdCAtIGluaXQgYSBzY2hlZHVsZXIgam9iCi0gKgogICogQGpvYjogc2NoZWR1
bGVyIGpvYiB0byBpbml0CiAgKiBAZW50aXR5OiBzY2hlZHVsZXIgZW50aXR5IHRvIHVzZQogICog
QG93bmVyOiBqb2Igb3duZXIgZm9yIGRlYnVnZ2luZwpAQCAtNTc3LDEzICs1NzgsNDUgQEAgRVhQ
T1JUX1NZTUJPTChkcm1fc2NoZWRfcmVzdWJtaXRfam9ic19leHQpOwogICogUmVmZXIgdG8gZHJt
X3NjaGVkX2VudGl0eV9wdXNoX2pvYigpIGRvY3VtZW50YXRpb24KICAqIGZvciBsb2NraW5nIGNv
bnNpZGVyYXRpb25zLgogICoKKyAqIERyaXZlcnMgbXVzdCBtYWtlIHN1cmUgZHJtX3NjaGVkX2pv
Yl9jbGVhbnVwKCkgaWYgdGhpcyBmdW5jdGlvbiByZXR1cm5zCisgKiBzdWNjZXNzZnVsbHksIGV2
ZW4gd2hlbiBAam9iIGlzIGFib3J0ZWQgYmVmb3JlIGRybV9zY2hlZF9qb2JfYXJtKCkgaXMgY2Fs
bGVkLgorICoKICAqIFJldHVybnMgMCBmb3Igc3VjY2VzcywgbmVnYXRpdmUgZXJyb3IgY29kZSBv
dGhlcndpc2UuCiAgKi8KIGludCBkcm1fc2NoZWRfam9iX2luaXQoc3RydWN0IGRybV9zY2hlZF9q
b2IgKmpvYiwKIAkJICAgICAgIHN0cnVjdCBkcm1fc2NoZWRfZW50aXR5ICplbnRpdHksCiAJCSAg
ICAgICB2b2lkICpvd25lcikKK3sKKwlqb2ItPmVudGl0eSA9IGVudGl0eTsKKwlqb2ItPnNfZmVu
Y2UgPSBkcm1fc2NoZWRfZmVuY2VfYWxsb2MoZW50aXR5LCBvd25lcik7CisJaWYgKCFqb2ItPnNf
ZmVuY2UpCisJCXJldHVybiAtRU5PTUVNOworCisJSU5JVF9MSVNUX0hFQUQoJmpvYi0+bGlzdCk7
CisKKwlyZXR1cm4gMDsKK30KK0VYUE9SVF9TWU1CT0woZHJtX3NjaGVkX2pvYl9pbml0KTsKKwor
LyoqCisgKiBkcm1fc2NoZWRfam9iX2FybSAtIGFybSBhIHNjaGVkdWxlciBqb2IgZm9yIGV4ZWN1
dGlvbgorICogQGpvYjogc2NoZWR1bGVyIGpvYiB0byBhcm0KKyAqCisgKiBUaGlzIGFybXMgYSBz
Y2hlZHVsZXIgam9iIGZvciBleGVjdXRpb24uIFNwZWNpZmljYWxseSBpdCBpbml0aWFsaXplcyB0
aGUKKyAqICZkcm1fc2NoZWRfam9iLnNfZmVuY2Ugb2YgQGpvYiwgc28gdGhhdCBpdCBjYW4gYmUg
YXR0YWNoZWQgdG8gc3RydWN0IGRtYV9yZXN2CisgKiBvciBvdGhlciBwbGFjZXMgdGhhdCBuZWVk
IHRvIHRyYWNrIHRoZSBjb21wbGV0aW9uIG9mIHRoaXMgam9iLgorICoKKyAqIFJlZmVyIHRvIGRy
bV9zY2hlZF9lbnRpdHlfcHVzaF9qb2IoKSBkb2N1bWVudGF0aW9uIGZvciBsb2NraW5nCisgKiBj
b25zaWRlcmF0aW9ucy4KKyAqCisgKiBUaGlzIGNhbiBvbmx5IGJlIGNhbGxlZCBpZiBkcm1fc2No
ZWRfam9iX2luaXQoKSBzdWNjZWVkZWQuCisgKi8KK3ZvaWQgZHJtX3NjaGVkX2pvYl9hcm0oc3Ry
dWN0IGRybV9zY2hlZF9qb2IgKmpvYikKIHsKIAlzdHJ1Y3QgZHJtX2dwdV9zY2hlZHVsZXIgKnNj
aGVkOworCXN0cnVjdCBkcm1fc2NoZWRfZW50aXR5ICplbnRpdHkgPSBqb2ItPmVudGl0eTsKKwor
CUJVR19PTighZW50aXR5KTsKIAogCWRybV9zY2hlZF9lbnRpdHlfc2VsZWN0X3JxKGVudGl0eSk7
CiAJQlVHX09OKCFlbnRpdHktPnJxKTsKQEAgLTU5MSwyNyArNjI0LDM2IEBAIGludCBkcm1fc2No
ZWRfam9iX2luaXQoc3RydWN0IGRybV9zY2hlZF9qb2IgKmpvYiwKIAlzY2hlZCA9IGVudGl0eS0+
cnEtPnNjaGVkOwogCiAJam9iLT5zY2hlZCA9IHNjaGVkOwotCWpvYi0+ZW50aXR5ID0gZW50aXR5
OwogCWpvYi0+c19wcmlvcml0eSA9IGVudGl0eS0+cnEgLSBzY2hlZC0+c2NoZWRfcnE7Ci0Jam9i
LT5zX2ZlbmNlID0gZHJtX3NjaGVkX2ZlbmNlX2NyZWF0ZShlbnRpdHksIG93bmVyKTsKLQlpZiAo
IWpvYi0+c19mZW5jZSkKLQkJcmV0dXJuIC1FTk9NRU07CiAJam9iLT5pZCA9IGF0b21pYzY0X2lu
Y19yZXR1cm4oJnNjaGVkLT5qb2JfaWRfY291bnQpOwogCi0JSU5JVF9MSVNUX0hFQUQoJmpvYi0+
bGlzdCk7Ci0KLQlyZXR1cm4gMDsKKwlkcm1fc2NoZWRfZmVuY2VfaW5pdChqb2ItPnNfZmVuY2Us
IGpvYi0+ZW50aXR5KTsKIH0KLUVYUE9SVF9TWU1CT0woZHJtX3NjaGVkX2pvYl9pbml0KTsKK0VY
UE9SVF9TWU1CT0woZHJtX3NjaGVkX2pvYl9hcm0pOwogCiAvKioKICAqIGRybV9zY2hlZF9qb2Jf
Y2xlYW51cCAtIGNsZWFuIHVwIHNjaGVkdWxlciBqb2IgcmVzb3VyY2VzCi0gKgogICogQGpvYjog
c2NoZWR1bGVyIGpvYiB0byBjbGVhbiB1cAorICoKKyAqIENsZWFucyB1cCB0aGUgcmVzb3VyY2Vz
IGFsbG9jYXRlZCB3aXRoIGRybV9zY2hlZF9qb2JfaW5pdCgpLgorICoKKyAqIERyaXZlcnMgc2hv
dWxkIGNhbGwgdGhpcyBmcm9tIHRoZWlyIGVycm9yIHVud2luZCBjb2RlIGlmIEBqb2IgaXMgYWJv
cnRlZAorICogYmVmb3JlIGRybV9zY2hlZF9qb2JfYXJtKCkgaXMgY2FsbGVkLgorICoKKyAqIEFm
dGVyIHRoYXQgcG9pbnQgb2Ygbm8gcmV0dXJuIEBqb2IgaXMgY29tbWl0dGVkIHRvIGJlIGV4ZWN1
dGVkIGJ5IHRoZQorICogc2NoZWR1bGVyLCBhbmQgdGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgY2Fs
bGVkIGZyb20gdGhlCisgKiAmZHJtX3NjaGVkX2JhY2tlbmRfb3BzLmZyZWVfam9iIGNhbGxiYWNr
LgogICovCiB2b2lkIGRybV9zY2hlZF9qb2JfY2xlYW51cChzdHJ1Y3QgZHJtX3NjaGVkX2pvYiAq
am9iKQogewotCWRtYV9mZW5jZV9wdXQoJmpvYi0+c19mZW5jZS0+ZmluaXNoZWQpOworCWlmIChr
cmVmX3JlYWQoJmpvYi0+c19mZW5jZS0+ZmluaXNoZWQucmVmY291bnQpKSB7CisJCS8qIGRybV9z
Y2hlZF9qb2JfYXJtKCkgaGFzIGJlZW4gY2FsbGVkICovCisJCWRtYV9mZW5jZV9wdXQoJmpvYi0+
c19mZW5jZS0+ZmluaXNoZWQpOworCX0gZWxzZSB7CisJCS8qIGFib3J0ZWQgam9iIGJlZm9yZSBj
b21taXR0aW5nIHRvIHJ1biBpdCAqLworCQlkcm1fc2NoZWRfZmVuY2VfZnJlZSgmam9iLT5zX2Zl
bmNlLT5maW5pc2hlZC5yY3UpOworCX0KKwogCWpvYi0+c19mZW5jZSA9IE5VTEw7CiB9CiBFWFBP
UlRfU1lNQk9MKGRybV9zY2hlZF9qb2JfY2xlYW51cCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vdjNkL3YzZF9nZW0uYyBiL2RyaXZlcnMvZ3B1L2RybS92M2QvdjNkX2dlbS5jCmluZGV4
IDRlYjM1NDIyNjk3Mi4uNWMzYTk5MDI3ZWNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
djNkL3YzZF9nZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vdjNkL3YzZF9nZW0uYwpAQCAtNDc1
LDYgKzQ3NSw4IEBAIHYzZF9wdXNoX2pvYihzdHJ1Y3QgdjNkX2ZpbGVfcHJpdiAqdjNkX3ByaXYs
CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAorCWRybV9zY2hlZF9qb2JfYXJtKCZqb2ItPmJh
c2UpOworCiAJam9iLT5kb25lX2ZlbmNlID0gZG1hX2ZlbmNlX2dldCgmam9iLT5iYXNlLnNfZmVu
Y2UtPmZpbmlzaGVkKTsKIAogCS8qIHB1dCBieSBzY2hlZHVsZXIgam9iIGNvbXBsZXRpb24gKi8K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvZHJtL2dwdV9zY2hlZHVsZXIuaCBiL2luY2x1ZGUvZHJtL2dw
dV9zY2hlZHVsZXIuaAppbmRleCA4OGFlN2YzMzFiYjEuLjgzYWZjM2FhOGUyZiAxMDA2NDQKLS0t
IGEvaW5jbHVkZS9kcm0vZ3B1X3NjaGVkdWxlci5oCisrKyBiL2luY2x1ZGUvZHJtL2dwdV9zY2hl
ZHVsZXIuaApAQCAtMzQ4LDYgKzM0OCw3IEBAIHZvaWQgZHJtX3NjaGVkX2Zpbmkoc3RydWN0IGRy
bV9ncHVfc2NoZWR1bGVyICpzY2hlZCk7CiBpbnQgZHJtX3NjaGVkX2pvYl9pbml0KHN0cnVjdCBk
cm1fc2NoZWRfam9iICpqb2IsCiAJCSAgICAgICBzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqZW50
aXR5LAogCQkgICAgICAgdm9pZCAqb3duZXIpOwordm9pZCBkcm1fc2NoZWRfam9iX2FybShzdHJ1
Y3QgZHJtX3NjaGVkX2pvYiAqam9iKTsKIHZvaWQgZHJtX3NjaGVkX2VudGl0eV9tb2RpZnlfc2No
ZWQoc3RydWN0IGRybV9zY2hlZF9lbnRpdHkgKmVudGl0eSwKIAkJCQkgICAgc3RydWN0IGRybV9n
cHVfc2NoZWR1bGVyICoqc2NoZWRfbGlzdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgdW5zaWduZWQgaW50IG51bV9zY2hlZF9saXN0KTsKQEAgLTM4Nyw4ICszODgsMTIgQEAg
dm9pZCBkcm1fc2NoZWRfZW50aXR5X3NldF9wcmlvcml0eShzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0
eSAqZW50aXR5LAogCQkJCSAgIGVudW0gZHJtX3NjaGVkX3ByaW9yaXR5IHByaW9yaXR5KTsKIGJv
b2wgZHJtX3NjaGVkX2VudGl0eV9pc19yZWFkeShzdHJ1Y3QgZHJtX3NjaGVkX2VudGl0eSAqZW50
aXR5KTsKIAotc3RydWN0IGRybV9zY2hlZF9mZW5jZSAqZHJtX3NjaGVkX2ZlbmNlX2NyZWF0ZSgK
K3N0cnVjdCBkcm1fc2NoZWRfZmVuY2UgKmRybV9zY2hlZF9mZW5jZV9hbGxvYygKIAlzdHJ1Y3Qg
ZHJtX3NjaGVkX2VudGl0eSAqc19lbnRpdHksIHZvaWQgKm93bmVyKTsKK3ZvaWQgZHJtX3NjaGVk
X2ZlbmNlX2luaXQoc3RydWN0IGRybV9zY2hlZF9mZW5jZSAqZmVuY2UsCisJCQkgIHN0cnVjdCBk
cm1fc2NoZWRfZW50aXR5ICplbnRpdHkpOwordm9pZCBkcm1fc2NoZWRfZmVuY2VfZnJlZShzdHJ1
Y3QgcmN1X2hlYWQgKnJjdSk7CisKIHZvaWQgZHJtX3NjaGVkX2ZlbmNlX3NjaGVkdWxlZChzdHJ1
Y3QgZHJtX3NjaGVkX2ZlbmNlICpmZW5jZSk7CiB2b2lkIGRybV9zY2hlZF9mZW5jZV9maW5pc2hl
ZChzdHJ1Y3QgZHJtX3NjaGVkX2ZlbmNlICpmZW5jZSk7CiAKLS0gCjIuMzIuMAoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcg
bGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 68B7A1732D
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 10:08:02 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D855489415;
	Wed,  8 May 2019 08:07:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5D0F5893CB
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 08:07:48 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16485908-1500050 
 for multiple; Wed, 08 May 2019 09:07:07 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 09:06:32 +0100
Message-Id: <20190508080704.24223-8-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-1-chris@chris-wilson.co.uk>
References: <20190508080704.24223-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/40] dma-fence: Refactor signaling for manual
 invocation
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TW92ZSB0aGUgZHVwbGljYXRlZCBjb2RlIHdpdGhpbiBkbWEtZmVuY2UuYyBpbnRvIHRoZSBoZWFk
ZXIgZm9yIHdpZGVyCnJldXNlLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0Bj
aHJpcy13aWxzb24uY28udWs+Ci0tLQogZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlICAgICAgICAg
ICAgICAgICAgICB8ICAxMCArLQogZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS10cmFjZS5jICAg
ICAgICAgICB8ICAyOCArKysKIGRyaXZlcnMvZG1hLWJ1Zi9kbWEtZmVuY2UuYyAgICAgICAgICAg
ICAgICAgfCAgMjggKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1i
cy5jIHwgIDIxIC0tCiBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oICAgICAgICAgICAg
IHwgMjQ4ICsrKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS5oICAg
ICAgICAgICAgICAgICAgIHwgMjQ0ICsrLS0tLS0tLS0tLS0tLS0tLS0KIDYgZmlsZXMgY2hhbmdl
ZCwgMzEyIGluc2VydGlvbnMoKyksIDI2NyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0
NCBkcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLXRyYWNlLmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBp
bmNsdWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEt
YnVmL01ha2VmaWxlIGIvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCmluZGV4IDFmMDA2ZTA4M2Vi
OS4uNTZlNTc5ODc4ZjI2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2RtYS1idWYvTWFrZWZpbGUKKysr
IGIvZHJpdmVycy9kbWEtYnVmL01ha2VmaWxlCkBAIC0xLDUgKzEsMTEgQEAKLW9iai15IDo9IGRt
YS1idWYubyBkbWEtZmVuY2UubyBkbWEtZmVuY2UtYXJyYXkubyBkbWEtZmVuY2UtY2hhaW4ubyBc
Ci0JIHJlc2VydmF0aW9uLm8gc2Vxbm8tZmVuY2Uubworb2JqLXkgOj0gXAorCWRtYS1idWYubyBc
CisJZG1hLWZlbmNlLm8gXAorCWRtYS1mZW5jZS1hcnJheS5vIFwKKwlkbWEtZmVuY2UtY2hhaW4u
byBcCisJZG1hLWZlbmNlLXRyYWNlLm8gXAorCXJlc2VydmF0aW9uLm8gXAorCXNlcW5vLWZlbmNl
Lm8KIG9iai0kKENPTkZJR19TWU5DX0ZJTEUpCQkrPSBzeW5jX2ZpbGUubwogb2JqLSQoQ09ORklH
X1NXX1NZTkMpCQkrPSBzd19zeW5jLm8gc3luY19kZWJ1Zy5vCiBvYmotJChDT05GSUdfVURNQUJV
RikJCSs9IHVkbWFidWYubwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS10
cmFjZS5jIGIvZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS10cmFjZS5jCm5ldyBmaWxlIG1vZGUg
MTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZWI2ZjI4MmJlNGMwCi0tLSAvZGV2L251bGwKKysr
IGIvZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS10cmFjZS5jCkBAIC0wLDAgKzEsMjggQEAKKy8q
CisgKiBGZW5jZSBtZWNoYW5pc20gZm9yIGRtYS1idWYgYW5kIHRvIGFsbG93IGZvciBhc3luY2hy
b25vdXMgZG1hIGFjY2VzcworICoKKyAqIENvcHlyaWdodCAoQykgMjAxMiBDYW5vbmljYWwgTHRk
CisgKiBDb3B5cmlnaHQgKEMpIDIwMTIgVGV4YXMgSW5zdHJ1bWVudHMKKyAqCisgKiBBdXRob3Jz
OgorICogUm9iIENsYXJrIDxyb2JkY2xhcmtAZ21haWwuY29tPgorICogTWFhcnRlbiBMYW5raG9y
c3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGNhbm9uaWNhbC5jb20+CisgKgorICogVGhpcyBwcm9ncmFt
IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkg
aXQKKyAqIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
dmVyc2lvbiAyIGFzIHB1Ymxpc2hlZCBieQorICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlv
bi4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBp
dCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQKKyAqIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBl
dmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvcgorICogRklUTkVT
UyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBM
aWNlbnNlIGZvcgorICogbW9yZSBkZXRhaWxzLgorICovCisKKyNpbmNsdWRlIDxsaW51eC9kbWEt
ZmVuY2UtdHlwZXMuaD4KKworI2RlZmluZSBDUkVBVEVfVFJBQ0VfUE9JTlRTCisjaW5jbHVkZSA8
dHJhY2UvZXZlbnRzL2RtYV9mZW5jZS5oPgorCitFWFBPUlRfVFJBQ0VQT0lOVF9TWU1CT0woZG1h
X2ZlbmNlX2VtaXQpOworRVhQT1JUX1RSQUNFUE9JTlRfU1lNQk9MKGRtYV9mZW5jZV9lbmFibGVf
c2lnbmFsKTsKK0VYUE9SVF9UUkFDRVBPSU5UX1NZTUJPTChkbWFfZmVuY2Vfc2lnbmFsZWQpOwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9kbWEtYnVmL2RtYS1mZW5jZS5jIGIvZHJpdmVycy9kbWEtYnVm
L2RtYS1mZW5jZS5jCmluZGV4IDliZjA2MDQyNjE5YS4uNjQ1ODJjNGUwYjZmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2RtYS1idWYvZG1hLWZlbmNlLmMKKysrIGIvZHJpdmVycy9kbWEtYnVmL2RtYS1m
ZW5jZS5jCkBAIC0yNCwxMyArMjQsNiBAQAogI2luY2x1ZGUgPGxpbnV4L2RtYS1mZW5jZS5oPgog
I2luY2x1ZGUgPGxpbnV4L3NjaGVkL3NpZ25hbC5oPgogCi0jZGVmaW5lIENSRUFURV9UUkFDRV9Q
T0lOVFMKLSNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1hX2ZlbmNlLmg+Ci0KLUVYUE9SVF9UUkFD
RVBPSU5UX1NZTUJPTChkbWFfZmVuY2VfZW1pdCk7Ci1FWFBPUlRfVFJBQ0VQT0lOVF9TWU1CT0wo
ZG1hX2ZlbmNlX2VuYWJsZV9zaWduYWwpOwotRVhQT1JUX1RSQUNFUE9JTlRfU1lNQk9MKGRtYV9m
ZW5jZV9zaWduYWxlZCk7Ci0KIHN0YXRpYyBERUZJTkVfU1BJTkxPQ0soZG1hX2ZlbmNlX3N0dWJf
bG9jayk7CiBzdGF0aWMgc3RydWN0IGRtYV9mZW5jZSBkbWFfZmVuY2Vfc3R1YjsKIApAQCAtMTM2
LDcgKzEyOSw2IEBAIEVYUE9SVF9TWU1CT0woZG1hX2ZlbmNlX2NvbnRleHRfYWxsb2MpOwogICov
CiBpbnQgZG1hX2ZlbmNlX3NpZ25hbF9sb2NrZWQoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiB7
Ci0Jc3RydWN0IGRtYV9mZW5jZV9jYiAqY3VyLCAqdG1wOwogCWludCByZXQgPSAwOwogCiAJbG9j
a2RlcF9hc3NlcnRfaGVsZChmZW5jZS0+bG9jayk7CkBAIC0xNTIsMTUgKzE0NCwxMCBAQCBpbnQg
ZG1hX2ZlbmNlX3NpZ25hbF9sb2NrZWQoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCiAJCSAqIHN0
aWxsIHJ1biB0aHJvdWdoIGFsbCBjYWxsYmFja3MKIAkJICovCiAJfSBlbHNlIHsKLQkJZmVuY2Ut
PnRpbWVzdGFtcCA9IGt0aW1lX2dldCgpOwotCQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVT
VEFNUF9CSVQsICZmZW5jZS0+ZmxhZ3MpOwotCQl0cmFjZV9kbWFfZmVuY2Vfc2lnbmFsZWQoZmVu
Y2UpOworCQlfX2RtYV9mZW5jZV9zaWduYWxfdGltZXN0YW1wKGZlbmNlLCBrdGltZV9nZXQoKSk7
CiAJfQogCi0JbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGN1ciwgdG1wLCAmZmVuY2UtPmNiX2xp
c3QsIG5vZGUpIHsKLQkJbGlzdF9kZWxfaW5pdCgmY3VyLT5ub2RlKTsKLQkJY3VyLT5mdW5jKGZl
bmNlLCBjdXIpOwotCX0KKwlfX2RtYV9mZW5jZV9zaWduYWxfbm90aWZ5KGZlbmNlKTsKIAlyZXR1
cm4gcmV0OwogfQogRVhQT1JUX1NZTUJPTChkbWFfZmVuY2Vfc2lnbmFsX2xvY2tlZCk7CkBAIC0x
ODgsMTggKzE3NSwxMSBAQCBpbnQgZG1hX2ZlbmNlX3NpZ25hbChzdHJ1Y3QgZG1hX2ZlbmNlICpm
ZW5jZSkKIAlpZiAodGVzdF9hbmRfc2V0X2JpdChETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQs
ICZmZW5jZS0+ZmxhZ3MpKQogCQlyZXR1cm4gLUVJTlZBTDsKIAotCWZlbmNlLT50aW1lc3RhbXAg
PSBrdGltZV9nZXQoKTsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQsICZm
ZW5jZS0+ZmxhZ3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7CisJX19kbWFf
ZmVuY2Vfc2lnbmFsX3RpbWVzdGFtcChmZW5jZSwga3RpbWVfZ2V0KCkpOwogCiAJaWYgKHRlc3Rf
Yml0KERNQV9GRU5DRV9GTEFHX0VOQUJMRV9TSUdOQUxfQklULCAmZmVuY2UtPmZsYWdzKSkgewot
CQlzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjdXIsICp0bXA7Ci0KIAkJc3Bpbl9sb2NrX2lycXNhdmUo
ZmVuY2UtPmxvY2ssIGZsYWdzKTsKLQkJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGN1ciwgdG1w
LCAmZmVuY2UtPmNiX2xpc3QsIG5vZGUpIHsKLQkJCWxpc3RfZGVsX2luaXQoJmN1ci0+bm9kZSk7
Ci0JCQljdXItPmZ1bmMoZmVuY2UsIGN1cik7Ci0JCX0KKwkJX19kbWFfZmVuY2Vfc2lnbmFsX25v
dGlmeShmZW5jZSk7CiAJCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoZmVuY2UtPmxvY2ssIGZsYWdz
KTsKIAl9CiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9icmVhZGNydW1icy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRj
cnVtYnMuYwppbmRleCA3MDUzYTkwZTVjYjUuLjdkZDE1NGY3NTA4NiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNydW1icy5jCkBAIC0yMyw3ICsyMyw2IEBACiAgKi8K
IAogI2luY2x1ZGUgPGxpbnV4L2t0aHJlYWQuaD4KLSNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1h
X2ZlbmNlLmg+CiAjaW5jbHVkZSA8dWFwaS9saW51eC9zY2hlZC90eXBlcy5oPgogCiAjaW5jbHVk
ZSAiaTkxNV9kcnYuaCIKQEAgLTk3LDI2ICs5Niw2IEBAIGNoZWNrX3NpZ25hbF9vcmRlcihzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCXJldHVybiB0
cnVlOwogfQogCi1zdGF0aWMgdm9pZAotX19kbWFfZmVuY2Vfc2lnbmFsX3RpbWVzdGFtcChzdHJ1
Y3QgZG1hX2ZlbmNlICpmZW5jZSwga3RpbWVfdCB0aW1lc3RhbXApCi17Ci0JZmVuY2UtPnRpbWVz
dGFtcCA9IHRpbWVzdGFtcDsKLQlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQs
ICZmZW5jZS0+ZmxhZ3MpOwotCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7Ci19Ci0K
LXN0YXRpYyB2b2lkCi1fX2RtYV9mZW5jZV9zaWduYWxfbm90aWZ5KHN0cnVjdCBkbWFfZmVuY2Ug
KmZlbmNlKQotewotCXN0cnVjdCBkbWFfZmVuY2VfY2IgKmN1ciwgKnRtcDsKLQotCWxpc3RfZm9y
X2VhY2hfZW50cnlfc2FmZShjdXIsIHRtcCwgJmZlbmNlLT5jYl9saXN0LCBub2RlKSB7Ci0JCUlO
SVRfTElTVF9IRUFEKCZjdXItPm5vZGUpOwotCQljdXItPmZ1bmMoZmVuY2UsIGN1cik7Ci0JfQot
CUlOSVRfTElTVF9IRUFEKCZmZW5jZS0+Y2JfbGlzdCk7Ci19Ci0KIHZvaWQgaW50ZWxfZW5naW5l
X2JyZWFkY3J1bWJzX2lycShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3Ry
dWN0IGludGVsX2JyZWFkY3J1bWJzICpiID0gJmVuZ2luZS0+YnJlYWRjcnVtYnM7CmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS10eXBlcy5oIGIvaW5jbHVkZS9saW51eC9kbWEt
ZmVuY2UtdHlwZXMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjE4
ZTc1MTFjMGVlZAotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvbGludXgvZG1hLWZlbmNlLXR5
cGVzLmgKQEAgLTAsMCArMSwyNDggQEAKKy8qCisgKiBGZW5jZSBtZWNoYW5pc20gZm9yIGRtYS1i
dWYgdG8gYWxsb3cgZm9yIGFzeW5jaHJvbm91cyBkbWEgYWNjZXNzCisgKgorICogQ29weXJpZ2h0
IChDKSAyMDEyIENhbm9uaWNhbCBMdGQKKyAqIENvcHlyaWdodCAoQykgMjAxMiBUZXhhcyBJbnN0
cnVtZW50cworICoKKyAqIEF1dGhvcnM6CisgKiBSb2IgQ2xhcmsgPHJvYmRjbGFya0BnbWFpbC5j
b20+CisgKiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAY2Fub25pY2FsLmNv
bT4KKyAqCisgKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3Ry
aWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdAorICogdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUg
R2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIgYXMgcHVibGlzaGVkIGJ5CisgKiB0aGUg
RnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLgorICoKKyAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmli
dXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVAorICog
QU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hB
TlRBQklMSVRZIG9yCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0
aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yCisgKiBtb3JlIGRldGFpbHMuCisgKi8K
KworI2lmbmRlZiBfX0xJTlVYX0RNQV9GRU5DRV9UWVBFU19ICisjZGVmaW5lIF9fTElOVVhfRE1B
X0ZFTkNFX1RZUEVTX0gKKworI2luY2x1ZGUgPGxpbnV4L2tyZWYuaD4KKyNpbmNsdWRlIDxsaW51
eC9rdGltZS5oPgorCitzdHJ1Y3QgZG1hX2ZlbmNlOworc3RydWN0IGRtYV9mZW5jZV9vcHM7Citz
dHJ1Y3QgZG1hX2ZlbmNlX2NiOworCisvKioKKyAqIHN0cnVjdCBkbWFfZmVuY2UgLSBzb2Z0d2Fy
ZSBzeW5jaHJvbml6YXRpb24gcHJpbWl0aXZlCisgKiBAcmVmY291bnQ6IHJlZmNvdW50IGZvciB0
aGlzIGZlbmNlCisgKiBAb3BzOiBkbWFfZmVuY2Vfb3BzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGZl
bmNlCisgKiBAcmN1OiB1c2VkIGZvciByZWxlYXNpbmcgZmVuY2Ugd2l0aCBrZnJlZV9yY3UKKyAq
IEBjYl9saXN0OiBsaXN0IG9mIGFsbCBjYWxsYmFja3MgdG8gY2FsbAorICogQGxvY2s6IHNwaW5f
bG9ja19pcnFzYXZlIHVzZWQgZm9yIGxvY2tpbmcKKyAqIEBjb250ZXh0OiBleGVjdXRpb24gY29u
dGV4dCB0aGlzIGZlbmNlIGJlbG9uZ3MgdG8sIHJldHVybmVkIGJ5CisgKiAgICAgICAgICAgZG1h
X2ZlbmNlX2NvbnRleHRfYWxsb2MoKQorICogQHNlcW5vOiB0aGUgc2VxdWVuY2UgbnVtYmVyIG9m
IHRoaXMgZmVuY2UgaW5zaWRlIHRoZSBleGVjdXRpb24gY29udGV4dCwKKyAqIGNhbiBiZSBjb21w
YXJlZCB0byBkZWNpZGUgd2hpY2ggZmVuY2Ugd291bGQgYmUgc2lnbmFsZWQgbGF0ZXIuCisgKiBA
ZmxhZ3M6IEEgbWFzayBvZiBETUFfRkVOQ0VfRkxBR18qIGRlZmluZWQgYmVsb3cKKyAqIEB0aW1l
c3RhbXA6IFRpbWVzdGFtcCB3aGVuIHRoZSBmZW5jZSB3YXMgc2lnbmFsZWQuCisgKiBAZXJyb3I6
IE9wdGlvbmFsLCBvbmx5IHZhbGlkIGlmIDwgMCwgbXVzdCBiZSBzZXQgYmVmb3JlIGNhbGxpbmcK
KyAqIGRtYV9mZW5jZV9zaWduYWwsIGluZGljYXRlcyB0aGF0IHRoZSBmZW5jZSBoYXMgY29tcGxl
dGVkIHdpdGggYW4gZXJyb3IuCisgKgorICogdGhlIGZsYWdzIG1lbWJlciBtdXN0IGJlIG1hbmlw
dWxhdGVkIGFuZCByZWFkIHVzaW5nIHRoZSBhcHByb3ByaWF0ZQorICogYXRvbWljIG9wcyAoYml0
XyopLCBzbyB0YWtpbmcgdGhlIHNwaW5sb2NrIHdpbGwgbm90IGJlIG5lZWRlZCBtb3N0CisgKiBv
ZiB0aGUgdGltZS4KKyAqCisgKiBETUFfRkVOQ0VfRkxBR19TSUdOQUxFRF9CSVQgLSBmZW5jZSBp
cyBhbHJlYWR5IHNpZ25hbGVkCisgKiBETUFfRkVOQ0VfRkxBR19USU1FU1RBTVBfQklUIC0gdGlt
ZXN0YW1wIHJlY29yZGVkIGZvciBmZW5jZSBzaWduYWxpbmcKKyAqIERNQV9GRU5DRV9GTEFHX0VO
QUJMRV9TSUdOQUxfQklUIC0gZW5hYmxlX3NpZ25hbGluZyBtaWdodCBoYXZlIGJlZW4gY2FsbGVk
CisgKiBETUFfRkVOQ0VfRkxBR19VU0VSX0JJVFMgLSBzdGFydCBvZiB0aGUgdW51c2VkIGJpdHMs
IGNhbiBiZSB1c2VkIGJ5IHRoZQorICogaW1wbGVtZW50ZXIgb2YgdGhlIGZlbmNlIGZvciBpdHMg
b3duIHB1cnBvc2VzLiBDYW4gYmUgdXNlZCBpbiBkaWZmZXJlbnQKKyAqIHdheXMgYnkgZGlmZmVy
ZW50IGZlbmNlIGltcGxlbWVudGVycywgc28gZG8gbm90IHJlbHkgb24gdGhpcy4KKyAqCisgKiBT
aW5jZSBhdG9taWMgYml0b3BzIGFyZSB1c2VkLCB0aGlzIGlzIG5vdCBndWFyYW50ZWVkIHRvIGJl
IHRoZSBjYXNlLgorICogUGFydGljdWxhcmx5LCBpZiB0aGUgYml0IHdhcyBzZXQsIGJ1dCBkbWFf
ZmVuY2Vfc2lnbmFsIHdhcyBjYWxsZWQgcmlnaHQKKyAqIGJlZm9yZSB0aGlzIGJpdCB3YXMgc2V0
LCBpdCB3b3VsZCBoYXZlIGJlZW4gYWJsZSB0byBzZXQgdGhlCisgKiBETUFfRkVOQ0VfRkxBR19T
SUdOQUxFRF9CSVQsIGJlZm9yZSBlbmFibGVfc2lnbmFsaW5nIHdhcyBjYWxsZWQuCisgKiBBZGRp
bmcgYSBjaGVjayBmb3IgRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklUIGFmdGVyIHNldHRpbmcK
KyAqIERNQV9GRU5DRV9GTEFHX0VOQUJMRV9TSUdOQUxfQklUIGNsb3NlcyB0aGlzIHJhY2UsIGFu
ZCBtYWtlcyBzdXJlIHRoYXQKKyAqIGFmdGVyIGRtYV9mZW5jZV9zaWduYWwgd2FzIGNhbGxlZCwg
YW55IGVuYWJsZV9zaWduYWxpbmcgY2FsbCB3aWxsIGhhdmUgZWl0aGVyCisgKiBiZWVuIGNvbXBs
ZXRlZCwgb3IgbmV2ZXIgY2FsbGVkIGF0IGFsbC4KKyAqLworc3RydWN0IGRtYV9mZW5jZSB7CisJ
c3RydWN0IGtyZWYgcmVmY291bnQ7CisJY29uc3Qgc3RydWN0IGRtYV9mZW5jZV9vcHMgKm9wczsK
KwlzdHJ1Y3QgcmN1X2hlYWQgcmN1OworCXN0cnVjdCBsaXN0X2hlYWQgY2JfbGlzdDsKKwlzcGlu
bG9ja190ICpsb2NrOworCXU2NCBjb250ZXh0OworCXU2NCBzZXFubzsKKwl1bnNpZ25lZCBsb25n
IGZsYWdzOworCWt0aW1lX3QgdGltZXN0YW1wOworCWludCBlcnJvcjsKK307CisKK2VudW0gZG1h
X2ZlbmNlX2ZsYWdfYml0cyB7CisJRE1BX0ZFTkNFX0ZMQUdfU0lHTkFMRURfQklULAorCURNQV9G
RU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQsCisJRE1BX0ZFTkNFX0ZMQUdfRU5BQkxFX1NJR05BTF9C
SVQsCisJRE1BX0ZFTkNFX0ZMQUdfVVNFUl9CSVRTLCAvKiBtdXN0IGFsd2F5cyBiZSBsYXN0IG1l
bWJlciAqLworfTsKKwordHlwZWRlZiB2b2lkICgqZG1hX2ZlbmNlX2Z1bmNfdCkoc3RydWN0IGRt
YV9mZW5jZSAqZmVuY2UsCisJCQkJIHN0cnVjdCBkbWFfZmVuY2VfY2IgKmNiKTsKKworLyoqCisg
KiBzdHJ1Y3QgZG1hX2ZlbmNlX2NiIC0gY2FsbGJhY2sgZm9yIGRtYV9mZW5jZV9hZGRfY2FsbGJh
Y2soKQorICogQG5vZGU6IHVzZWQgYnkgZG1hX2ZlbmNlX2FkZF9jYWxsYmFjaygpIHRvIGFwcGVu
ZCB0aGlzIHN0cnVjdCB0byBmZW5jZTo6Y2JfbGlzdAorICogQGZ1bmM6IGRtYV9mZW5jZV9mdW5j
X3QgdG8gY2FsbAorICoKKyAqIFRoaXMgc3RydWN0IHdpbGwgYmUgaW5pdGlhbGl6ZWQgYnkgZG1h
X2ZlbmNlX2FkZF9jYWxsYmFjaygpLCBhZGRpdGlvbmFsCisgKiBkYXRhIGNhbiBiZSBwYXNzZWQg
YWxvbmcgYnkgZW1iZWRkaW5nIGRtYV9mZW5jZV9jYiBpbiBhbm90aGVyIHN0cnVjdC4KKyAqLwor
c3RydWN0IGRtYV9mZW5jZV9jYiB7CisJc3RydWN0IGxpc3RfaGVhZCBub2RlOworCWRtYV9mZW5j
ZV9mdW5jX3QgZnVuYzsKK307CisKKy8qKgorICogc3RydWN0IGRtYV9mZW5jZV9vcHMgLSBvcGVy
YXRpb25zIGltcGxlbWVudGVkIGZvciBmZW5jZQorICoKKyAqLworc3RydWN0IGRtYV9mZW5jZV9v
cHMgeworCS8qKgorCSAqIEB1c2VfNjRiaXRfc2Vxbm86CisJICoKKwkgKiBUcnVlIGlmIHRoaXMg
ZG1hX2ZlbmNlIGltcGxlbWVudGF0aW9uIHVzZXMgNjRiaXQgc2Vxbm8sIGZhbHNlCisJICogb3Ro
ZXJ3aXNlLgorCSAqLworCWJvb2wgdXNlXzY0Yml0X3NlcW5vOworCisJLyoqCisJICogQGdldF9k
cml2ZXJfbmFtZToKKwkgKgorCSAqIFJldHVybnMgdGhlIGRyaXZlciBuYW1lLiBUaGlzIGlzIGEg
Y2FsbGJhY2sgdG8gYWxsb3cgZHJpdmVycyB0bworCSAqIGNvbXB1dGUgdGhlIG5hbWUgYXQgcnVu
dGltZSwgd2l0aG91dCBoYXZpbmcgaXQgdG8gc3RvcmUgcGVybWFuZW50bHkKKwkgKiBmb3IgZWFj
aCBmZW5jZSwgb3IgYnVpbGQgYSBjYWNoZSBvZiBzb21lIHNvcnQuCisJICoKKwkgKiBUaGlzIGNh
bGxiYWNrIGlzIG1hbmRhdG9yeS4KKwkgKi8KKwljb25zdCBjaGFyICogKCpnZXRfZHJpdmVyX25h
bWUpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKKworCS8qKgorCSAqIEBnZXRfdGltZWxpbmVf
bmFtZToKKwkgKgorCSAqIFJldHVybiB0aGUgbmFtZSBvZiB0aGUgY29udGV4dCB0aGlzIGZlbmNl
IGJlbG9uZ3MgdG8uIFRoaXMgaXMgYQorCSAqIGNhbGxiYWNrIHRvIGFsbG93IGRyaXZlcnMgdG8g
Y29tcHV0ZSB0aGUgbmFtZSBhdCBydW50aW1lLCB3aXRob3V0CisJICogaGF2aW5nIGl0IHRvIHN0
b3JlIHBlcm1hbmVudGx5IGZvciBlYWNoIGZlbmNlLCBvciBidWlsZCBhIGNhY2hlIG9mCisJICog
c29tZSBzb3J0LgorCSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBtYW5kYXRvcnkuCisJICovCisJ
Y29uc3QgY2hhciAqICgqZ2V0X3RpbWVsaW5lX25hbWUpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNl
KTsKKworCS8qKgorCSAqIEBlbmFibGVfc2lnbmFsaW5nOgorCSAqCisJICogRW5hYmxlIHNvZnR3
YXJlIHNpZ25hbGluZyBvZiBmZW5jZS4KKwkgKgorCSAqIEZvciBmZW5jZSBpbXBsZW1lbnRhdGlv
bnMgdGhhdCBoYXZlIHRoZSBjYXBhYmlsaXR5IGZvciBody0+aHcKKwkgKiBzaWduYWxpbmcsIHRo
ZXkgY2FuIGltcGxlbWVudCB0aGlzIG9wIHRvIGVuYWJsZSB0aGUgbmVjZXNzYXJ5CisJICogaW50
ZXJydXB0cywgb3IgaW5zZXJ0IGNvbW1hbmRzIGludG8gY21kc3RyZWFtLCBldGMsIHRvIGF2b2lk
IHRoZXNlCisJICogY29zdGx5IG9wZXJhdGlvbnMgZm9yIHRoZSBjb21tb24gY2FzZSB3aGVyZSBv
bmx5IGh3LT5odworCSAqIHN5bmNocm9uaXphdGlvbiBpcyByZXF1aXJlZC4gIFRoaXMgaXMgY2Fs
bGVkIGluIHRoZSBmaXJzdAorCSAqIGRtYV9mZW5jZV93YWl0KCkgb3IgZG1hX2ZlbmNlX2FkZF9j
YWxsYmFjaygpIHBhdGggdG8gbGV0IHRoZSBmZW5jZQorCSAqIGltcGxlbWVudGF0aW9uIGtub3cg
dGhhdCB0aGVyZSBpcyBhbm90aGVyIGRyaXZlciB3YWl0aW5nIG9uIHRoZQorCSAqIHNpZ25hbCAo
aWUuIGh3LT5zdyBjYXNlKS4KKwkgKgorCSAqIFRoaXMgZnVuY3Rpb24gY2FuIGJlIGNhbGxlZCBm
cm9tIGF0b21pYyBjb250ZXh0LCBidXQgbm90CisJICogZnJvbSBpcnEgY29udGV4dCwgc28gbm9y
bWFsIHNwaW5sb2NrcyBjYW4gYmUgdXNlZC4KKwkgKgorCSAqIEEgcmV0dXJuIHZhbHVlIG9mIGZh
bHNlIGluZGljYXRlcyB0aGUgZmVuY2UgYWxyZWFkeSBwYXNzZWQsCisJICogb3Igc29tZSBmYWls
dXJlIG9jY3VycmVkIHRoYXQgbWFkZSBpdCBpbXBvc3NpYmxlIHRvIGVuYWJsZQorCSAqIHNpZ25h
bGluZy4gVHJ1ZSBpbmRpY2F0ZXMgc3VjY2Vzc2Z1bCBlbmFibGluZy4KKwkgKgorCSAqICZkbWFf
ZmVuY2UuZXJyb3IgbWF5IGJlIHNldCBpbiBlbmFibGVfc2lnbmFsaW5nLCBidXQgb25seSB3aGVu
IGZhbHNlCisJICogaXMgcmV0dXJuZWQuCisJICoKKwkgKiBTaW5jZSBtYW55IGltcGxlbWVudGF0
aW9ucyBjYW4gY2FsbCBkbWFfZmVuY2Vfc2lnbmFsKCkgZXZlbiB3aGVuIGJlZm9yZQorCSAqIEBl
bmFibGVfc2lnbmFsaW5nIGhhcyBiZWVuIGNhbGxlZCB0aGVyZSdzIGEgcmFjZSB3aW5kb3csIHdo
ZXJlIHRoZQorCSAqIGRtYV9mZW5jZV9zaWduYWwoKSBtaWdodCByZXN1bHQgaW4gdGhlIGZpbmFs
IGZlbmNlIHJlZmVyZW5jZSBiZWluZworCSAqIHJlbGVhc2VkIGFuZCBpdHMgbWVtb3J5IGZyZWVk
LiBUbyBhdm9pZCB0aGlzLCBpbXBsZW1lbnRhdGlvbnMgb2YgdGhpcworCSAqIGNhbGxiYWNrIHNo
b3VsZCBncmFiIHRoZWlyIG93biByZWZlcmVuY2UgdXNpbmcgZG1hX2ZlbmNlX2dldCgpLCB0byBi
ZQorCSAqIHJlbGVhc2VkIHdoZW4gdGhlIGZlbmNlIGlzIHNpZ25hbGxlZCAodGhyb3VnaCBlLmcu
IHRoZSBpbnRlcnJ1cHQKKwkgKiBoYW5kbGVyKS4KKwkgKgorCSAqIFRoaXMgY2FsbGJhY2sgaXMg
b3B0aW9uYWwuIElmIHRoaXMgY2FsbGJhY2sgaXMgbm90IHByZXNlbnQsIHRoZW4gdGhlCisJICog
ZHJpdmVyIG11c3QgYWx3YXlzIGhhdmUgc2lnbmFsaW5nIGVuYWJsZWQuCisJICovCisJYm9vbCAo
KmVuYWJsZV9zaWduYWxpbmcpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKKworCS8qKgorCSAq
IEBzaWduYWxlZDoKKwkgKgorCSAqIFBlZWsgd2hldGhlciB0aGUgZmVuY2UgaXMgc2lnbmFsZWQs
IGFzIGEgZmFzdHBhdGggb3B0aW1pemF0aW9uIGZvcgorCSAqIGUuZy4gZG1hX2ZlbmNlX3dhaXQo
KSBvciBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkuIE5vdGUgdGhhdCB0aGlzCisJICogY2FsbGJh
Y2sgZG9lcyBub3QgbmVlZCB0byBtYWtlIGFueSBndWFyYW50ZWVzIGJleW9uZCB0aGF0IGEgZmVu
Y2UKKwkgKiBvbmNlIGluZGljYXRlcyBhcyBzaWduYWxsZWQgbXVzdCBhbHdheXMgcmV0dXJuIHRy
dWUgZnJvbSB0aGlzCisJICogY2FsbGJhY2suIFRoaXMgY2FsbGJhY2sgbWF5IHJldHVybiBmYWxz
ZSBldmVuIGlmIHRoZSBmZW5jZSBoYXMKKwkgKiBjb21wbGV0ZWQgYWxyZWFkeSwgaW4gdGhpcyBj
YXNlIGluZm9ybWF0aW9uIGhhc24ndCBwcm9wb2dhdGVkIHRocm91ZworCSAqIHRoZSBzeXN0ZW0g
eWV0LiBTZWUgYWxzbyBkbWFfZmVuY2VfaXNfc2lnbmFsZWQoKS4KKwkgKgorCSAqIE1heSBzZXQg
JmRtYV9mZW5jZS5lcnJvciBpZiByZXR1cm5pbmcgdHJ1ZS4KKwkgKgorCSAqIFRoaXMgY2FsbGJh
Y2sgaXMgb3B0aW9uYWwuCisJICovCisJYm9vbCAoKnNpZ25hbGVkKShzdHJ1Y3QgZG1hX2ZlbmNl
ICpmZW5jZSk7CisKKwkvKioKKwkgKiBAd2FpdDoKKwkgKgorCSAqIEN1c3RvbSB3YWl0IGltcGxl
bWVudGF0aW9uLCBkZWZhdWx0cyB0byBkbWFfZmVuY2VfZGVmYXVsdF93YWl0KCkgaWYKKwkgKiBu
b3Qgc2V0LgorCSAqCisJICogVGhlIGRtYV9mZW5jZV9kZWZhdWx0X3dhaXQgaW1wbGVtZW50YXRp
b24gc2hvdWxkIHdvcmsgZm9yIGFueSBmZW5jZSwgYXMgbG9uZworCSAqIGFzIEBlbmFibGVfc2ln
bmFsaW5nIHdvcmtzIGNvcnJlY3RseS4gVGhpcyBob29rIGFsbG93cyBkcml2ZXJzIHRvCisJICog
aGF2ZSBhbiBvcHRpbWl6ZWQgdmVyc2lvbiBmb3IgdGhlIGNhc2Ugd2hlcmUgYSBwcm9jZXNzIGNv
bnRleHQgaXMKKwkgKiBhbHJlYWR5IGF2YWlsYWJsZSwgZS5nLiBpZiBAZW5hYmxlX3NpZ25hbGlu
ZyBmb3IgdGhlIGdlbmVyYWwgY2FzZQorCSAqIG5lZWRzIHRvIHNldCB1cCBhIHdvcmtlciB0aHJl
YWQuCisJICoKKwkgKiBNdXN0IHJldHVybiAtRVJFU1RBUlRTWVMgaWYgdGhlIHdhaXQgaXMgaW50
ciA9IHRydWUgYW5kIHRoZSB3YWl0IHdhcworCSAqIGludGVycnVwdGVkLCBhbmQgcmVtYWluaW5n
IGppZmZpZXMgaWYgZmVuY2UgaGFzIHNpZ25hbGVkLCBvciAwIGlmIHdhaXQKKwkgKiB0aW1lZCBv
dXQuIENhbiBhbHNvIHJldHVybiBvdGhlciBlcnJvciB2YWx1ZXMgb24gY3VzdG9tIGltcGxlbWVu
dGF0aW9ucywKKwkgKiB3aGljaCBzaG91bGQgYmUgdHJlYXRlZCBhcyBpZiB0aGUgZmVuY2UgaXMg
c2lnbmFsZWQuIEZvciBleGFtcGxlIGEgaGFyZHdhcmUKKwkgKiBsb2NrdXAgY291bGQgYmUgcmVw
b3J0ZWQgbGlrZSB0aGF0LgorCSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4KKwkg
Ki8KKwlzaWduZWQgbG9uZyAoKndhaXQpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLAorCQkJICAg
IGJvb2wgaW50ciwgc2lnbmVkIGxvbmcgdGltZW91dCk7CisKKwkvKioKKwkgKiBAcmVsZWFzZToK
KwkgKgorCSAqIENhbGxlZCBvbiBkZXN0cnVjdGlvbiBvZiBmZW5jZSB0byByZWxlYXNlIGFkZGl0
aW9uYWwgcmVzb3VyY2VzLgorCSAqIENhbiBiZSBjYWxsZWQgZnJvbSBpcnEgY29udGV4dC4gIFRo
aXMgY2FsbGJhY2sgaXMgb3B0aW9uYWwuIElmIGl0IGlzCisJICogTlVMTCwgdGhlbiBkbWFfZmVu
Y2VfZnJlZSgpIGlzIGluc3RlYWQgY2FsbGVkIGFzIHRoZSBkZWZhdWx0CisJICogaW1wbGVtZW50
YXRpb24uCisJICovCisJdm9pZCAoKnJlbGVhc2UpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsK
KworCS8qKgorCSAqIEBmZW5jZV92YWx1ZV9zdHI6CisJICoKKwkgKiBDYWxsYmFjayB0byBmaWxs
IGluIGZyZWUtZm9ybSBkZWJ1ZyBpbmZvIHNwZWNpZmljIHRvIHRoaXMgZmVuY2UsIGxpa2UKKwkg
KiB0aGUgc2VxdWVuY2UgbnVtYmVyLgorCSAqCisJICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25h
bC4KKwkgKi8KKwl2b2lkICgqZmVuY2VfdmFsdWVfc3RyKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5j
ZSwgY2hhciAqc3RyLCBpbnQgc2l6ZSk7CisKKwkvKioKKwkgKiBAdGltZWxpbmVfdmFsdWVfc3Ry
OgorCSAqCisJICogRmlsbHMgaW4gdGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIHRpbWVsaW5lIGFz
IGEgc3RyaW5nLCBsaWtlIHRoZQorCSAqIHNlcXVlbmNlIG51bWJlci4gTm90ZSB0aGF0IHRoZSBz
cGVjaWZpYyBmZW5jZSBwYXNzZWQgdG8gdGhpcyBmdW5jdGlvbgorCSAqIHNob3VsZCBub3QgbWF0
dGVyLCBkcml2ZXJzIHNob3VsZCBvbmx5IHVzZSBpdCB0byBsb29rIHVwIHRoZQorCSAqIGNvcnJl
c3BvbmRpbmcgdGltZWxpbmUgc3RydWN0dXJlcy4KKwkgKi8KKwl2b2lkICgqdGltZWxpbmVfdmFs
dWVfc3RyKShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKKwkJCQkgICBjaGFyICpzdHIsIGludCBz
aXplKTsKK307CisKKyNlbmRpZiAvKiBfX0xJTlVYX0RNQV9GRU5DRV9UWVBFU19IICovCmRpZmYg
LS1naXQgYS9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS5oIGIvaW5jbHVkZS9saW51eC9kbWEtZmVu
Y2UuaAppbmRleCA5NzQ3MTdkNmFjMGMuLjc3MDUyNWVlYjU5MyAxMDA2NDQKLS0tIGEvaW5jbHVk
ZS9saW51eC9kbWEtZmVuY2UuaAorKysgYi9pbmNsdWRlL2xpbnV4L2RtYS1mZW5jZS5oCkBAIC0y
MSw2ICsyMSw3IEBACiAjaWZuZGVmIF9fTElOVVhfRE1BX0ZFTkNFX0gKICNkZWZpbmUgX19MSU5V
WF9ETUFfRkVOQ0VfSAogCisjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLXR5cGVzLmg+CiAjaW5j
bHVkZSA8bGludXgvZXJyLmg+CiAjaW5jbHVkZSA8bGludXgvd2FpdC5oPgogI2luY2x1ZGUgPGxp
bnV4L2xpc3QuaD4KQEAgLTMwLDIyNiArMzEsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3ByaW50ay5o
PgogI2luY2x1ZGUgPGxpbnV4L3JjdXBkYXRlLmg+CiAKLXN0cnVjdCBkbWFfZmVuY2U7Ci1zdHJ1
Y3QgZG1hX2ZlbmNlX29wczsKLXN0cnVjdCBkbWFfZmVuY2VfY2I7Ci0KLS8qKgotICogc3RydWN0
IGRtYV9mZW5jZSAtIHNvZnR3YXJlIHN5bmNocm9uaXphdGlvbiBwcmltaXRpdmUKLSAqIEByZWZj
b3VudDogcmVmY291bnQgZm9yIHRoaXMgZmVuY2UKLSAqIEBvcHM6IGRtYV9mZW5jZV9vcHMgYXNz
b2NpYXRlZCB3aXRoIHRoaXMgZmVuY2UKLSAqIEByY3U6IHVzZWQgZm9yIHJlbGVhc2luZyBmZW5j
ZSB3aXRoIGtmcmVlX3JjdQotICogQGNiX2xpc3Q6IGxpc3Qgb2YgYWxsIGNhbGxiYWNrcyB0byBj
YWxsCi0gKiBAbG9jazogc3Bpbl9sb2NrX2lycXNhdmUgdXNlZCBmb3IgbG9ja2luZwotICogQGNv
bnRleHQ6IGV4ZWN1dGlvbiBjb250ZXh0IHRoaXMgZmVuY2UgYmVsb25ncyB0bywgcmV0dXJuZWQg
YnkKLSAqICAgICAgICAgICBkbWFfZmVuY2VfY29udGV4dF9hbGxvYygpCi0gKiBAc2Vxbm86IHRo
ZSBzZXF1ZW5jZSBudW1iZXIgb2YgdGhpcyBmZW5jZSBpbnNpZGUgdGhlIGV4ZWN1dGlvbiBjb250
ZXh0LAotICogY2FuIGJlIGNvbXBhcmVkIHRvIGRlY2lkZSB3aGljaCBmZW5jZSB3b3VsZCBiZSBz
aWduYWxlZCBsYXRlci4KLSAqIEBmbGFnczogQSBtYXNrIG9mIERNQV9GRU5DRV9GTEFHXyogZGVm
aW5lZCBiZWxvdwotICogQHRpbWVzdGFtcDogVGltZXN0YW1wIHdoZW4gdGhlIGZlbmNlIHdhcyBz
aWduYWxlZC4KLSAqIEBlcnJvcjogT3B0aW9uYWwsIG9ubHkgdmFsaWQgaWYgPCAwLCBtdXN0IGJl
IHNldCBiZWZvcmUgY2FsbGluZwotICogZG1hX2ZlbmNlX3NpZ25hbCwgaW5kaWNhdGVzIHRoYXQg
dGhlIGZlbmNlIGhhcyBjb21wbGV0ZWQgd2l0aCBhbiBlcnJvci4KLSAqCi0gKiB0aGUgZmxhZ3Mg
bWVtYmVyIG11c3QgYmUgbWFuaXB1bGF0ZWQgYW5kIHJlYWQgdXNpbmcgdGhlIGFwcHJvcHJpYXRl
Ci0gKiBhdG9taWMgb3BzIChiaXRfKiksIHNvIHRha2luZyB0aGUgc3BpbmxvY2sgd2lsbCBub3Qg
YmUgbmVlZGVkIG1vc3QKLSAqIG9mIHRoZSB0aW1lLgotICoKLSAqIERNQV9GRU5DRV9GTEFHX1NJ
R05BTEVEX0JJVCAtIGZlbmNlIGlzIGFscmVhZHkgc2lnbmFsZWQKLSAqIERNQV9GRU5DRV9GTEFH
X1RJTUVTVEFNUF9CSVQgLSB0aW1lc3RhbXAgcmVjb3JkZWQgZm9yIGZlbmNlIHNpZ25hbGluZwot
ICogRE1BX0ZFTkNFX0ZMQUdfRU5BQkxFX1NJR05BTF9CSVQgLSBlbmFibGVfc2lnbmFsaW5nIG1p
Z2h0IGhhdmUgYmVlbiBjYWxsZWQKLSAqIERNQV9GRU5DRV9GTEFHX1VTRVJfQklUUyAtIHN0YXJ0
IG9mIHRoZSB1bnVzZWQgYml0cywgY2FuIGJlIHVzZWQgYnkgdGhlCi0gKiBpbXBsZW1lbnRlciBv
ZiB0aGUgZmVuY2UgZm9yIGl0cyBvd24gcHVycG9zZXMuIENhbiBiZSB1c2VkIGluIGRpZmZlcmVu
dAotICogd2F5cyBieSBkaWZmZXJlbnQgZmVuY2UgaW1wbGVtZW50ZXJzLCBzbyBkbyBub3QgcmVs
eSBvbiB0aGlzLgotICoKLSAqIFNpbmNlIGF0b21pYyBiaXRvcHMgYXJlIHVzZWQsIHRoaXMgaXMg
bm90IGd1YXJhbnRlZWQgdG8gYmUgdGhlIGNhc2UuCi0gKiBQYXJ0aWN1bGFybHksIGlmIHRoZSBi
aXQgd2FzIHNldCwgYnV0IGRtYV9mZW5jZV9zaWduYWwgd2FzIGNhbGxlZCByaWdodAotICogYmVm
b3JlIHRoaXMgYml0IHdhcyBzZXQsIGl0IHdvdWxkIGhhdmUgYmVlbiBhYmxlIHRvIHNldCB0aGUK
LSAqIERNQV9GRU5DRV9GTEFHX1NJR05BTEVEX0JJVCwgYmVmb3JlIGVuYWJsZV9zaWduYWxpbmcg
d2FzIGNhbGxlZC4KLSAqIEFkZGluZyBhIGNoZWNrIGZvciBETUFfRkVOQ0VfRkxBR19TSUdOQUxF
RF9CSVQgYWZ0ZXIgc2V0dGluZwotICogRE1BX0ZFTkNFX0ZMQUdfRU5BQkxFX1NJR05BTF9CSVQg
Y2xvc2VzIHRoaXMgcmFjZSwgYW5kIG1ha2VzIHN1cmUgdGhhdAotICogYWZ0ZXIgZG1hX2ZlbmNl
X3NpZ25hbCB3YXMgY2FsbGVkLCBhbnkgZW5hYmxlX3NpZ25hbGluZyBjYWxsIHdpbGwgaGF2ZSBl
aXRoZXIKLSAqIGJlZW4gY29tcGxldGVkLCBvciBuZXZlciBjYWxsZWQgYXQgYWxsLgotICovCi1z
dHJ1Y3QgZG1hX2ZlbmNlIHsKLQlzdHJ1Y3Qga3JlZiByZWZjb3VudDsKLQljb25zdCBzdHJ1Y3Qg
ZG1hX2ZlbmNlX29wcyAqb3BzOwotCXN0cnVjdCByY3VfaGVhZCByY3U7Ci0Jc3RydWN0IGxpc3Rf
aGVhZCBjYl9saXN0OwotCXNwaW5sb2NrX3QgKmxvY2s7Ci0JdTY0IGNvbnRleHQ7Ci0JdTY0IHNl
cW5vOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7Ci0Ja3RpbWVfdCB0aW1lc3RhbXA7Ci0JaW50IGVy
cm9yOwotfTsKLQotZW51bSBkbWFfZmVuY2VfZmxhZ19iaXRzIHsKLQlETUFfRkVOQ0VfRkxBR19T
SUdOQUxFRF9CSVQsCi0JRE1BX0ZFTkNFX0ZMQUdfVElNRVNUQU1QX0JJVCwKLQlETUFfRkVOQ0Vf
RkxBR19FTkFCTEVfU0lHTkFMX0JJVCwKLQlETUFfRkVOQ0VfRkxBR19VU0VSX0JJVFMsIC8qIG11
c3QgYWx3YXlzIGJlIGxhc3QgbWVtYmVyICovCi19OwotCi10eXBlZGVmIHZvaWQgKCpkbWFfZmVu
Y2VfZnVuY190KShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwKLQkJCQkgc3RydWN0IGRtYV9mZW5j
ZV9jYiAqY2IpOwotCi0vKioKLSAqIHN0cnVjdCBkbWFfZmVuY2VfY2IgLSBjYWxsYmFjayBmb3Ig
ZG1hX2ZlbmNlX2FkZF9jYWxsYmFjaygpCi0gKiBAbm9kZTogdXNlZCBieSBkbWFfZmVuY2VfYWRk
X2NhbGxiYWNrKCkgdG8gYXBwZW5kIHRoaXMgc3RydWN0IHRvIGZlbmNlOjpjYl9saXN0Ci0gKiBA
ZnVuYzogZG1hX2ZlbmNlX2Z1bmNfdCB0byBjYWxsCi0gKgotICogVGhpcyBzdHJ1Y3Qgd2lsbCBi
ZSBpbml0aWFsaXplZCBieSBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCksIGFkZGl0aW9uYWwKLSAq
IGRhdGEgY2FuIGJlIHBhc3NlZCBhbG9uZyBieSBlbWJlZGRpbmcgZG1hX2ZlbmNlX2NiIGluIGFu
b3RoZXIgc3RydWN0LgotICovCi1zdHJ1Y3QgZG1hX2ZlbmNlX2NiIHsKLQlzdHJ1Y3QgbGlzdF9o
ZWFkIG5vZGU7Ci0JZG1hX2ZlbmNlX2Z1bmNfdCBmdW5jOwotfTsKLQotLyoqCi0gKiBzdHJ1Y3Qg
ZG1hX2ZlbmNlX29wcyAtIG9wZXJhdGlvbnMgaW1wbGVtZW50ZWQgZm9yIGZlbmNlCi0gKgotICov
Ci1zdHJ1Y3QgZG1hX2ZlbmNlX29wcyB7Ci0JLyoqCi0JICogQHVzZV82NGJpdF9zZXFubzoKLQkg
KgotCSAqIFRydWUgaWYgdGhpcyBkbWFfZmVuY2UgaW1wbGVtZW50YXRpb24gdXNlcyA2NGJpdCBz
ZXFubywgZmFsc2UKLQkgKiBvdGhlcndpc2UuCi0JICovCi0JYm9vbCB1c2VfNjRiaXRfc2Vxbm87
Ci0KLQkvKioKLQkgKiBAZ2V0X2RyaXZlcl9uYW1lOgotCSAqCi0JICogUmV0dXJucyB0aGUgZHJp
dmVyIG5hbWUuIFRoaXMgaXMgYSBjYWxsYmFjayB0byBhbGxvdyBkcml2ZXJzIHRvCi0JICogY29t
cHV0ZSB0aGUgbmFtZSBhdCBydW50aW1lLCB3aXRob3V0IGhhdmluZyBpdCB0byBzdG9yZSBwZXJt
YW5lbnRseQotCSAqIGZvciBlYWNoIGZlbmNlLCBvciBidWlsZCBhIGNhY2hlIG9mIHNvbWUgc29y
dC4KLQkgKgotCSAqIFRoaXMgY2FsbGJhY2sgaXMgbWFuZGF0b3J5LgotCSAqLwotCWNvbnN0IGNo
YXIgKiAoKmdldF9kcml2ZXJfbmFtZSkoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoq
Ci0JICogQGdldF90aW1lbGluZV9uYW1lOgotCSAqCi0JICogUmV0dXJuIHRoZSBuYW1lIG9mIHRo
ZSBjb250ZXh0IHRoaXMgZmVuY2UgYmVsb25ncyB0by4gVGhpcyBpcyBhCi0JICogY2FsbGJhY2sg
dG8gYWxsb3cgZHJpdmVycyB0byBjb21wdXRlIHRoZSBuYW1lIGF0IHJ1bnRpbWUsIHdpdGhvdXQK
LQkgKiBoYXZpbmcgaXQgdG8gc3RvcmUgcGVybWFuZW50bHkgZm9yIGVhY2ggZmVuY2UsIG9yIGJ1
aWxkIGEgY2FjaGUgb2YKLQkgKiBzb21lIHNvcnQuCi0JICoKLQkgKiBUaGlzIGNhbGxiYWNrIGlz
IG1hbmRhdG9yeS4KLQkgKi8KLQljb25zdCBjaGFyICogKCpnZXRfdGltZWxpbmVfbmFtZSkoc3Ry
dWN0IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoqCi0JICogQGVuYWJsZV9zaWduYWxpbmc6Ci0J
ICoKLQkgKiBFbmFibGUgc29mdHdhcmUgc2lnbmFsaW5nIG9mIGZlbmNlLgotCSAqCi0JICogRm9y
IGZlbmNlIGltcGxlbWVudGF0aW9ucyB0aGF0IGhhdmUgdGhlIGNhcGFiaWxpdHkgZm9yIGh3LT5o
dwotCSAqIHNpZ25hbGluZywgdGhleSBjYW4gaW1wbGVtZW50IHRoaXMgb3AgdG8gZW5hYmxlIHRo
ZSBuZWNlc3NhcnkKLQkgKiBpbnRlcnJ1cHRzLCBvciBpbnNlcnQgY29tbWFuZHMgaW50byBjbWRz
dHJlYW0sIGV0YywgdG8gYXZvaWQgdGhlc2UKLQkgKiBjb3N0bHkgb3BlcmF0aW9ucyBmb3IgdGhl
IGNvbW1vbiBjYXNlIHdoZXJlIG9ubHkgaHctPmh3Ci0JICogc3luY2hyb25pemF0aW9uIGlzIHJl
cXVpcmVkLiAgVGhpcyBpcyBjYWxsZWQgaW4gdGhlIGZpcnN0Ci0JICogZG1hX2ZlbmNlX3dhaXQo
KSBvciBkbWFfZmVuY2VfYWRkX2NhbGxiYWNrKCkgcGF0aCB0byBsZXQgdGhlIGZlbmNlCi0JICog
aW1wbGVtZW50YXRpb24ga25vdyB0aGF0IHRoZXJlIGlzIGFub3RoZXIgZHJpdmVyIHdhaXRpbmcg
b24gdGhlCi0JICogc2lnbmFsIChpZS4gaHctPnN3IGNhc2UpLgotCSAqCi0JICogVGhpcyBmdW5j
dGlvbiBjYW4gYmUgY2FsbGVkIGZyb20gYXRvbWljIGNvbnRleHQsIGJ1dCBub3QKLQkgKiBmcm9t
IGlycSBjb250ZXh0LCBzbyBub3JtYWwgc3BpbmxvY2tzIGNhbiBiZSB1c2VkLgotCSAqCi0JICog
QSByZXR1cm4gdmFsdWUgb2YgZmFsc2UgaW5kaWNhdGVzIHRoZSBmZW5jZSBhbHJlYWR5IHBhc3Nl
ZCwKLQkgKiBvciBzb21lIGZhaWx1cmUgb2NjdXJyZWQgdGhhdCBtYWRlIGl0IGltcG9zc2libGUg
dG8gZW5hYmxlCi0JICogc2lnbmFsaW5nLiBUcnVlIGluZGljYXRlcyBzdWNjZXNzZnVsIGVuYWJs
aW5nLgotCSAqCi0JICogJmRtYV9mZW5jZS5lcnJvciBtYXkgYmUgc2V0IGluIGVuYWJsZV9zaWdu
YWxpbmcsIGJ1dCBvbmx5IHdoZW4gZmFsc2UKLQkgKiBpcyByZXR1cm5lZC4KLQkgKgotCSAqIFNp
bmNlIG1hbnkgaW1wbGVtZW50YXRpb25zIGNhbiBjYWxsIGRtYV9mZW5jZV9zaWduYWwoKSBldmVu
IHdoZW4gYmVmb3JlCi0JICogQGVuYWJsZV9zaWduYWxpbmcgaGFzIGJlZW4gY2FsbGVkIHRoZXJl
J3MgYSByYWNlIHdpbmRvdywgd2hlcmUgdGhlCi0JICogZG1hX2ZlbmNlX3NpZ25hbCgpIG1pZ2h0
IHJlc3VsdCBpbiB0aGUgZmluYWwgZmVuY2UgcmVmZXJlbmNlIGJlaW5nCi0JICogcmVsZWFzZWQg
YW5kIGl0cyBtZW1vcnkgZnJlZWQuIFRvIGF2b2lkIHRoaXMsIGltcGxlbWVudGF0aW9ucyBvZiB0
aGlzCi0JICogY2FsbGJhY2sgc2hvdWxkIGdyYWIgdGhlaXIgb3duIHJlZmVyZW5jZSB1c2luZyBk
bWFfZmVuY2VfZ2V0KCksIHRvIGJlCi0JICogcmVsZWFzZWQgd2hlbiB0aGUgZmVuY2UgaXMgc2ln
bmFsbGVkICh0aHJvdWdoIGUuZy4gdGhlIGludGVycnVwdAotCSAqIGhhbmRsZXIpLgotCSAqCi0J
ICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4gSWYgdGhpcyBjYWxsYmFjayBpcyBub3QgcHJl
c2VudCwgdGhlbiB0aGUKLQkgKiBkcml2ZXIgbXVzdCBhbHdheXMgaGF2ZSBzaWduYWxpbmcgZW5h
YmxlZC4KLQkgKi8KLQlib29sICgqZW5hYmxlX3NpZ25hbGluZykoc3RydWN0IGRtYV9mZW5jZSAq
ZmVuY2UpOwotCi0JLyoqCi0JICogQHNpZ25hbGVkOgotCSAqCi0JICogUGVlayB3aGV0aGVyIHRo
ZSBmZW5jZSBpcyBzaWduYWxlZCwgYXMgYSBmYXN0cGF0aCBvcHRpbWl6YXRpb24gZm9yCi0JICog
ZS5nLiBkbWFfZmVuY2Vfd2FpdCgpIG9yIGRtYV9mZW5jZV9hZGRfY2FsbGJhY2soKS4gTm90ZSB0
aGF0IHRoaXMKLQkgKiBjYWxsYmFjayBkb2VzIG5vdCBuZWVkIHRvIG1ha2UgYW55IGd1YXJhbnRl
ZXMgYmV5b25kIHRoYXQgYSBmZW5jZQotCSAqIG9uY2UgaW5kaWNhdGVzIGFzIHNpZ25hbGxlZCBt
dXN0IGFsd2F5cyByZXR1cm4gdHJ1ZSBmcm9tIHRoaXMKLQkgKiBjYWxsYmFjay4gVGhpcyBjYWxs
YmFjayBtYXkgcmV0dXJuIGZhbHNlIGV2ZW4gaWYgdGhlIGZlbmNlIGhhcwotCSAqIGNvbXBsZXRl
ZCBhbHJlYWR5LCBpbiB0aGlzIGNhc2UgaW5mb3JtYXRpb24gaGFzbid0IHByb3BvZ2F0ZWQgdGhy
b3VnCi0JICogdGhlIHN5c3RlbSB5ZXQuIFNlZSBhbHNvIGRtYV9mZW5jZV9pc19zaWduYWxlZCgp
LgotCSAqCi0JICogTWF5IHNldCAmZG1hX2ZlbmNlLmVycm9yIGlmIHJldHVybmluZyB0cnVlLgot
CSAqCi0JICogVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4KLQkgKi8KLQlib29sICgqc2lnbmFs
ZWQpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKTsKLQotCS8qKgotCSAqIEB3YWl0OgotCSAqCi0J
ICogQ3VzdG9tIHdhaXQgaW1wbGVtZW50YXRpb24sIGRlZmF1bHRzIHRvIGRtYV9mZW5jZV9kZWZh
dWx0X3dhaXQoKSBpZgotCSAqIG5vdCBzZXQuCi0JICoKLQkgKiBUaGUgZG1hX2ZlbmNlX2RlZmF1
bHRfd2FpdCBpbXBsZW1lbnRhdGlvbiBzaG91bGQgd29yayBmb3IgYW55IGZlbmNlLCBhcyBsb25n
Ci0JICogYXMgQGVuYWJsZV9zaWduYWxpbmcgd29ya3MgY29ycmVjdGx5LiBUaGlzIGhvb2sgYWxs
b3dzIGRyaXZlcnMgdG8KLQkgKiBoYXZlIGFuIG9wdGltaXplZCB2ZXJzaW9uIGZvciB0aGUgY2Fz
ZSB3aGVyZSBhIHByb2Nlc3MgY29udGV4dCBpcwotCSAqIGFscmVhZHkgYXZhaWxhYmxlLCBlLmcu
IGlmIEBlbmFibGVfc2lnbmFsaW5nIGZvciB0aGUgZ2VuZXJhbCBjYXNlCi0JICogbmVlZHMgdG8g
c2V0IHVwIGEgd29ya2VyIHRocmVhZC4KLQkgKgotCSAqIE11c3QgcmV0dXJuIC1FUkVTVEFSVFNZ
UyBpZiB0aGUgd2FpdCBpcyBpbnRyID0gdHJ1ZSBhbmQgdGhlIHdhaXQgd2FzCi0JICogaW50ZXJy
dXB0ZWQsIGFuZCByZW1haW5pbmcgamlmZmllcyBpZiBmZW5jZSBoYXMgc2lnbmFsZWQsIG9yIDAg
aWYgd2FpdAotCSAqIHRpbWVkIG91dC4gQ2FuIGFsc28gcmV0dXJuIG90aGVyIGVycm9yIHZhbHVl
cyBvbiBjdXN0b20gaW1wbGVtZW50YXRpb25zLAotCSAqIHdoaWNoIHNob3VsZCBiZSB0cmVhdGVk
IGFzIGlmIHRoZSBmZW5jZSBpcyBzaWduYWxlZC4gRm9yIGV4YW1wbGUgYSBoYXJkd2FyZQotCSAq
IGxvY2t1cCBjb3VsZCBiZSByZXBvcnRlZCBsaWtlIHRoYXQuCi0JICoKLQkgKiBUaGlzIGNhbGxi
YWNrIGlzIG9wdGlvbmFsLgotCSAqLwotCXNpZ25lZCBsb25nICgqd2FpdCkoc3RydWN0IGRtYV9m
ZW5jZSAqZmVuY2UsCi0JCQkgICAgYm9vbCBpbnRyLCBzaWduZWQgbG9uZyB0aW1lb3V0KTsKLQot
CS8qKgotCSAqIEByZWxlYXNlOgotCSAqCi0JICogQ2FsbGVkIG9uIGRlc3RydWN0aW9uIG9mIGZl
bmNlIHRvIHJlbGVhc2UgYWRkaXRpb25hbCByZXNvdXJjZXMuCi0JICogQ2FuIGJlIGNhbGxlZCBm
cm9tIGlycSBjb250ZXh0LiAgVGhpcyBjYWxsYmFjayBpcyBvcHRpb25hbC4gSWYgaXQgaXMKLQkg
KiBOVUxMLCB0aGVuIGRtYV9mZW5jZV9mcmVlKCkgaXMgaW5zdGVhZCBjYWxsZWQgYXMgdGhlIGRl
ZmF1bHQKLQkgKiBpbXBsZW1lbnRhdGlvbi4KLQkgKi8KLQl2b2lkICgqcmVsZWFzZSkoc3RydWN0
IGRtYV9mZW5jZSAqZmVuY2UpOwotCi0JLyoqCi0JICogQGZlbmNlX3ZhbHVlX3N0cjoKLQkgKgot
CSAqIENhbGxiYWNrIHRvIGZpbGwgaW4gZnJlZS1mb3JtIGRlYnVnIGluZm8gc3BlY2lmaWMgdG8g
dGhpcyBmZW5jZSwgbGlrZQotCSAqIHRoZSBzZXF1ZW5jZSBudW1iZXIuCi0JICoKLQkgKiBUaGlz
IGNhbGxiYWNrIGlzIG9wdGlvbmFsLgotCSAqLwotCXZvaWQgKCpmZW5jZV92YWx1ZV9zdHIpKHN0
cnVjdCBkbWFfZmVuY2UgKmZlbmNlLCBjaGFyICpzdHIsIGludCBzaXplKTsKLQotCS8qKgotCSAq
IEB0aW1lbGluZV92YWx1ZV9zdHI6Ci0JICoKLQkgKiBGaWxscyBpbiB0aGUgY3VycmVudCB2YWx1
ZSBvZiB0aGUgdGltZWxpbmUgYXMgYSBzdHJpbmcsIGxpa2UgdGhlCi0JICogc2VxdWVuY2UgbnVt
YmVyLiBOb3RlIHRoYXQgdGhlIHNwZWNpZmljIGZlbmNlIHBhc3NlZCB0byB0aGlzIGZ1bmN0aW9u
Ci0JICogc2hvdWxkIG5vdCBtYXR0ZXIsIGRyaXZlcnMgc2hvdWxkIG9ubHkgdXNlIGl0IHRvIGxv
b2sgdXAgdGhlCi0JICogY29ycmVzcG9uZGluZyB0aW1lbGluZSBzdHJ1Y3R1cmVzLgotCSAqLwot
CXZvaWQgKCp0aW1lbGluZV92YWx1ZV9zdHIpKHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlLAotCQkJ
CSAgIGNoYXIgKnN0ciwgaW50IHNpemUpOwotfTsKKyNpbmNsdWRlIDx0cmFjZS9ldmVudHMvZG1h
X2ZlbmNlLmg+CiAKIHZvaWQgZG1hX2ZlbmNlX2luaXQoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2Us
IGNvbnN0IHN0cnVjdCBkbWFfZmVuY2Vfb3BzICpvcHMsCiAJCSAgICBzcGlubG9ja190ICpsb2Nr
LCB1NjQgY29udGV4dCwgdTY0IHNlcW5vKTsKQEAgLTU2MSw2ICszNDMsMjggQEAgc3RhdGljIGlu
bGluZSBzaWduZWQgbG9uZyBkbWFfZmVuY2Vfd2FpdChzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSwg
Ym9vbCBpbnRyKQogc3RydWN0IGRtYV9mZW5jZSAqZG1hX2ZlbmNlX2dldF9zdHViKHZvaWQpOwog
dTY0IGRtYV9mZW5jZV9jb250ZXh0X2FsbG9jKHVuc2lnbmVkIG51bSk7CiAKK3N0YXRpYyBpbmxp
bmUgdm9pZAorX19kbWFfZmVuY2Vfc2lnbmFsX3RpbWVzdGFtcChzdHJ1Y3QgZG1hX2ZlbmNlICpm
ZW5jZSwga3RpbWVfdCB0aW1lc3RhbXApCit7CisJZmVuY2UtPnRpbWVzdGFtcCA9IHRpbWVzdGFt
cDsKKwlzZXRfYml0KERNQV9GRU5DRV9GTEFHX1RJTUVTVEFNUF9CSVQsICZmZW5jZS0+ZmxhZ3Mp
OworCXRyYWNlX2RtYV9mZW5jZV9zaWduYWxlZChmZW5jZSk7Cit9CisKK3N0YXRpYyBpbmxpbmUg
dm9pZAorX19kbWFfZmVuY2Vfc2lnbmFsX25vdGlmeShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkK
K3sKKwlzdHJ1Y3QgZG1hX2ZlbmNlX2NiICpjdXIsICp0bXA7CisKKwlsb2NrZGVwX2Fzc2VydF9o
ZWxkKGZlbmNlLT5sb2NrKTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShjdXIsIHRtcCwg
JmZlbmNlLT5jYl9saXN0LCBub2RlKSB7CisJCUlOSVRfTElTVF9IRUFEKCZjdXItPm5vZGUpOwor
CQljdXItPmZ1bmMoZmVuY2UsIGN1cik7CisJfQorCUlOSVRfTElTVF9IRUFEKCZmZW5jZS0+Y2Jf
bGlzdCk7Cit9CisKICNkZWZpbmUgRE1BX0ZFTkNFX1RSQUNFKGYsIGZtdCwgYXJncy4uLikgXAog
CWRvIHsJCQkJCQkJCVwKIAkJc3RydWN0IGRtYV9mZW5jZSAqX19mZiA9IChmKTsJCQkJXAotLSAK
Mi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 970CF9EFC1
	for <lists+intel-gfx@lfdr.de>; Tue, 27 Aug 2019 18:09:44 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6B0FE8933D;
	Tue, 27 Aug 2019 16:09:42 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 87E428933D
 for <intel-gfx@lists.freedesktop.org>; Tue, 27 Aug 2019 16:09:40 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18280312-1500050 
 for <intel-gfx@lists.freedesktop.org>; Tue, 27 Aug 2019 17:09:35 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 27 Aug 2019 17:09:35 +0100
Message-Id: <20190827160935.782-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915/selftests: Remove accidental
 serialization between gpu_fill
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXBvbiBvYmplY3QgY3JlYXRpb24gZm9yIGxpdmVfZ2VtX2NvbnRleHRzLCB3ZSBmaWxsIHRoZSBv
YmplY3Qgd2l0aAprbm93biBzY3JhdGNoIGFuZCBmbHVzaCBpdCBvdXQgb2YgdGhlIENQVSBjYWNo
ZS4gQmVmb3JlIHBlcmZvcm1pbmcgdGhlCkdQVSBmaWxsLCB3ZSBkb24ndCBuZWVkIHRvIGZsdXNo
IGl0IGFnYWluIGFuZCBzbyBhdm9pZCBzZXJpYWxpc2luZyB3aXRoCnByZXZpb3VzIGZpbGxzLgoK
SG93ZXZlciwgd2UgZG8gbmVlZCBzb21lIHRocm90dGxpbmcgb24gdGhlIGludGVybmFsIGludGVy
ZmFjZXMgaWYgd2UgZG8Kbm90IHdhbnQgdG8gcnVuIG91dCBvZiBtZW1vcnkhCgpTaWduZWQtb2Zm
LWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KUmV2aWV3ZWQtYnk6
IE1hdHRoZXcgQXVsZCA8bWF0dGhldy5hdWxkQGludGVsLmNvbT4KLS0tCiAuLi4vZHJtL2k5MTUv
Z2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMgfCA4MyArKysrKysrKysrKysrKysrLS0t
CiAxIGZpbGUgY2hhbmdlZCwgNzIgaW5zZXJ0aW9ucygrKSwgMTEgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250
ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX2NvbnRl
eHQuYwppbmRleCAzN2ExNzdlMzc2NjUuLjYzMTE2YzRmYThiYSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTE4
MCwxMiArMTgwLDYgQEAgc3RhdGljIGludCBncHVfZmlsbChzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UsCiAJaWYgKElTX0VSUih2bWEpKQogCQlyZXR1cm4gUFRSX0VSUih2bWEpOwogCi0JaTkxNV9n
ZW1fb2JqZWN0X2xvY2sob2JqKTsKLQllcnIgPSBpOTE1X2dlbV9vYmplY3Rfc2V0X3RvX2d0dF9k
b21haW4ob2JqLCB0cnVlKTsKLQlpOTE1X2dlbV9vYmplY3RfdW5sb2NrKG9iaik7Ci0JaWYgKGVy
cikKLQkJcmV0dXJuIGVycjsKLQogCWVyciA9IGk5MTVfdm1hX3Bpbih2bWEsIDAsIDAsIFBJTl9I
SUdIIHwgUElOX1VTRVIpOwogCWlmIChlcnIpCiAJCXJldHVybiBlcnI7CkBAIC0zNDMsNiArMzM3
LDQ1IEBAIHN0YXRpYyB1bnNpZ25lZCBsb25nIG1heF9kd29yZHMoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaikKIAlyZXR1cm4gbnBhZ2VzIC8gRFdfUEVSX1BBR0U7CiB9CiAKK3N0YXRp
YyB2b2lkIHRocm90dGxlX3JlbGVhc2Uoc3RydWN0IGk5MTVfcmVxdWVzdCAqKnEsIGludCBjb3Vu
dCkKK3sKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CisJCWlmIChJ
U19FUlJfT1JfTlVMTChxW2ldKSkKKwkJCWNvbnRpbnVlOworCisJCWk5MTVfcmVxdWVzdF9wdXQo
ZmV0Y2hfYW5kX3plcm8oJnFbaV0pKTsKKwl9Cit9CisKK3N0YXRpYyBpbnQgdGhyb3R0bGUoc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLAorCQkgICAgc3RydWN0IGk5MTVfcmVxdWVzdCAqKnEsIGlu
dCBjb3VudCkKK3sKKwlpbnQgaTsKKworCWlmICghSVNfRVJSX09SX05VTEwocVswXSkpIHsKKwkJ
aWYgKGk5MTVfcmVxdWVzdF93YWl0KHFbMF0sCisJCQkJICAgICAgSTkxNV9XQUlUX0lOVEVSUlVQ
VElCTEUsCisJCQkJICAgICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpIDwgMCkKKwkJCXJldHVybiAt
RUlOVFI7CisKKwkJaTkxNV9yZXF1ZXN0X3B1dChxWzBdKTsKKwl9CisKKwlmb3IgKGkgPSAwOyBp
IDwgY291bnQgLSAxOyBpKyspCisJCXFbaV0gPSBxW2kgKyAxXTsKKworCXFbaV0gPSBpbnRlbF9j
b250ZXh0X2NyZWF0ZV9yZXF1ZXN0KGNlKTsKKwlpZiAoSVNfRVJSKHFbaV0pKQorCQlyZXR1cm4g
UFRSX0VSUihxW2ldKTsKKworCWk5MTVfcmVxdWVzdF9nZXQocVtpXSk7CisJaTkxNV9yZXF1ZXN0
X2FkZChxW2ldKTsKKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGlndF9jdHhfZXhlYyh2
b2lkICphcmcpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CkBAIC0z
NjIsNiArMzk1LDcgQEAgc3RhdGljIGludCBpZ3RfY3R4X2V4ZWModm9pZCAqYXJnKQogCWZvcl9l
YWNoX2VuZ2luZShlbmdpbmUsIGk5MTUsIGlkKSB7CiAJCXN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmogPSBOVUxMOwogCQl1bnNpZ25lZCBsb25nIG5jb250ZXh0cywgbmR3b3JkcywgZHc7
CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnRxWzVdID0ge307CiAJCXN0cnVjdCBpZ3RfbGl2ZV90
ZXN0IHQ7CiAJCXN0cnVjdCBkcm1fZmlsZSAqZmlsZTsKIAkJSUdUX1RJTUVPVVQoZW5kX3RpbWUp
OwpAQCAtNDA5LDEzICs0NDMsMTggQEAgc3RhdGljIGludCBpZ3RfY3R4X2V4ZWModm9pZCAqYXJn
KQogCQkJfQogCiAJCQllcnIgPSBncHVfZmlsbChjZSwgb2JqLCBkdyk7Ci0JCQlpbnRlbF9jb250
ZXh0X3B1dChjZSk7Ci0KIAkJCWlmIChlcnIpIHsKIAkJCQlwcl9lcnIoIkZhaWxlZCB0byBmaWxs
IGR3b3JkICVsdSBbJWx1LyVsdV0gd2l0aCBncHUgKCVzKSBpbiBjdHggJXUgW2Z1bGwtcHBndHQ/
ICVzXSwgZXJyPSVkXG4iLAogCQkJCSAgICAgICBuZHdvcmRzLCBkdywgbWF4X2R3b3JkcyhvYmop
LAogCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIGN0eC0+aHdfaWQsCiAJCQkJICAgICAgIHllc25v
KCEhY3R4LT52bSksIGVycik7CisJCQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCQkJCWdvdG8g
b3V0X3VubG9jazsKKwkJCX0KKworCQkJZXJyID0gdGhyb3R0bGUoY2UsIHRxLCBBUlJBWV9TSVpF
KHRxKSk7CisJCQlpZiAoZXJyKSB7CisJCQkJaW50ZWxfY29udGV4dF9wdXQoY2UpOwogCQkJCWdv
dG8gb3V0X3VubG9jazsKIAkJCX0KIApAQCAtNDI2LDYgKzQ2NSw4IEBAIHN0YXRpYyBpbnQgaWd0
X2N0eF9leGVjKHZvaWQgKmFyZykKIAogCQkJbmR3b3JkcysrOwogCQkJbmNvbnRleHRzKys7CisK
KwkJCWludGVsX2NvbnRleHRfcHV0KGNlKTsKIAkJfQogCiAJCXByX2luZm8oIlN1Ym1pdHRlZCAl
bHUgY29udGV4dHMgdG8gJXMsIGZpbGxpbmcgJWx1IGR3b3Jkc1xuIiwKQEAgLTQ0NCw2ICs0ODUs
NyBAQCBzdGF0aWMgaW50IGlndF9jdHhfZXhlYyh2b2lkICphcmcpCiAJCX0KIAogb3V0X3VubG9j
azoKKwkJdGhyb3R0bGVfcmVsZWFzZSh0cSwgQVJSQVlfU0laRSh0cSkpOwogCQlpZiAoaWd0X2xp
dmVfdGVzdF9lbmQoJnQpKQogCQkJZXJyID0gLUVJTzsKIAkJbXV0ZXhfdW5sb2NrKCZpOTE1LT5k
cm0uc3RydWN0X211dGV4KTsKQEAgLTQ2MSw2ICs1MDMsNyBAQCBzdGF0aWMgaW50IGlndF9jdHhf
ZXhlYyh2b2lkICphcmcpCiBzdGF0aWMgaW50IGlndF9zaGFyZWRfY3R4X2V4ZWModm9pZCAqYXJn
KQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gYXJnOworCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnRxWzVdID0ge307CiAJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKnBhcmVudDsK
IAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJZW51bSBpbnRlbF9lbmdpbmVfaWQg
aWQ7CkBAIC01MzUsMTQgKzU3OCwyMCBAQCBzdGF0aWMgaW50IGlndF9zaGFyZWRfY3R4X2V4ZWMo
dm9pZCAqYXJnKQogCQkJfQogCiAJCQllcnIgPSBncHVfZmlsbChjZSwgb2JqLCBkdyk7Ci0JCQlp
bnRlbF9jb250ZXh0X3B1dChjZSk7Ci0JCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHgpOwotCiAJ
CQlpZiAoZXJyKSB7CiAJCQkJcHJfZXJyKCJGYWlsZWQgdG8gZmlsbCBkd29yZCAlbHUgWyVsdS8l
bHVdIHdpdGggZ3B1ICglcykgaW4gY3R4ICV1IFtmdWxsLXBwZ3R0PyAlc10sIGVycj0lZFxuIiwK
IAkJCQkgICAgICAgbmR3b3JkcywgZHcsIG1heF9kd29yZHMob2JqKSwKIAkJCQkgICAgICAgZW5n
aW5lLT5uYW1lLCBjdHgtPmh3X2lkLAogCQkJCSAgICAgICB5ZXNubyghIWN0eC0+dm0pLCBlcnIp
OworCQkJCWludGVsX2NvbnRleHRfcHV0KGNlKTsKKwkJCQlrZXJuZWxfY29udGV4dF9jbG9zZShj
dHgpOworCQkJCWdvdG8gb3V0X3Rlc3Q7CisJCQl9CisKKwkJCWVyciA9IHRocm90dGxlKGNlLCB0
cSwgQVJSQVlfU0laRSh0cSkpOworCQkJaWYgKGVycikgeworCQkJCWludGVsX2NvbnRleHRfcHV0
KGNlKTsKKwkJCQlrZXJuZWxfY29udGV4dF9jbG9zZShjdHgpOwogCQkJCWdvdG8gb3V0X3Rlc3Q7
CiAJCQl9CiAKQEAgLTU1Myw2ICs2MDIsOSBAQCBzdGF0aWMgaW50IGlndF9zaGFyZWRfY3R4X2V4
ZWModm9pZCAqYXJnKQogCiAJCQluZHdvcmRzKys7CiAJCQluY29udGV4dHMrKzsKKworCQkJaW50
ZWxfY29udGV4dF9wdXQoY2UpOworCQkJa2VybmVsX2NvbnRleHRfY2xvc2UoY3R4KTsKIAkJfQog
CQlwcl9pbmZvKCJTdWJtaXR0ZWQgJWx1IGNvbnRleHRzIHRvICVzLCBmaWxsaW5nICVsdSBkd29y
ZHNcbiIsCiAJCQluY29udGV4dHMsIGVuZ2luZS0+bmFtZSwgbmR3b3Jkcyk7CkBAIC01NzQsNiAr
NjI2LDcgQEAgc3RhdGljIGludCBpZ3Rfc2hhcmVkX2N0eF9leGVjKHZvaWQgKmFyZykKIAkJbXV0
ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAJfQogb3V0X3Rlc3Q6CisJdGhyb3R0
bGVfcmVsZWFzZSh0cSwgQVJSQVlfU0laRSh0cSkpOwogCWlmIChpZ3RfbGl2ZV90ZXN0X2VuZCgm
dCkpCiAJCWVyciA9IC1FSU87CiBvdXRfdW5sb2NrOgpAQCAtMTA1MCw2ICsxMTAzLDcgQEAgc3Rh
dGljIGludCBpZ3RfY3R4X3JlYWRvbmx5KHZvaWQgKmFyZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSA9IGFyZzsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0g
TlVMTDsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICp0cVs1XSA9IHt9OwogCXN0cnVjdCBpOTE1X2Fk
ZHJlc3Nfc3BhY2UgKnZtOwogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7CiAJdW5zaWdu
ZWQgbG9uZyBpZHgsIG5kd29yZHMsIGR3OwpAQCAtMTEyMSw2ICsxMTc1LDEyIEBAIHN0YXRpYyBp
bnQgaWd0X2N0eF9yZWFkb25seSh2b2lkICphcmcpCiAJCQkJZ290byBvdXRfdW5sb2NrOwogCQkJ
fQogCisJCQllcnIgPSB0aHJvdHRsZShjZSwgdHEsIEFSUkFZX1NJWkUodHEpKTsKKwkJCWlmIChl
cnIpIHsKKwkJCQlpOTE1X2dlbV9jb250ZXh0X3VubG9ja19lbmdpbmVzKGN0eCk7CisJCQkJZ290
byBvdXRfdW5sb2NrOworCQkJfQorCiAJCQlpZiAoKytkdyA9PSBtYXhfZHdvcmRzKG9iaikpIHsK
IAkJCQlvYmogPSBOVUxMOwogCQkJCWR3ID0gMDsKQEAgLTExNTEsNiArMTIxMSw3IEBAIHN0YXRp
YyBpbnQgaWd0X2N0eF9yZWFkb25seSh2b2lkICphcmcpCiAJfQogCiBvdXRfdW5sb2NrOgorCXRo
cm90dGxlX3JlbGVhc2UodHEsIEFSUkFZX1NJWkUodHEpKTsKIAlpZiAoaWd0X2xpdmVfdGVzdF9l
bmQoJnQpKQogCQllcnIgPSAtRUlPOwogCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9t
dXRleCk7Ci0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeA==

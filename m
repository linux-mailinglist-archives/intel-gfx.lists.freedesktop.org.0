Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id A23DF51C69
	for <lists+intel-gfx@lfdr.de>; Mon, 24 Jun 2019 22:32:29 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id EA29089DD5;
	Mon, 24 Jun 2019 20:32:27 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5F80289DE6
 for <intel-gfx@lists.freedesktop.org>; Mon, 24 Jun 2019 20:32:19 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 24 Jun 2019 13:32:19 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,413,1557212400"; d="scan'208";a="184241393"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by fmsmga004.fm.intel.com with ESMTP; 24 Jun 2019 13:32:19 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 24 Jun 2019 13:31:52 -0700
Message-Id: <20190624203152.13725-5-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190624203152.13725-1-daniele.ceraolospurio@intel.com>
References: <20190624203152.13725-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 4/4] drm/i915: convert intel_hdmi to display reg
 accessors
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgYW4gZXhhbXBsZSBvZiB1c2FnZSBvZiB0aGUgbmV3IGFjY2Vzc29ycy4KCkNoYW5nZXMgZG9u
ZSBtZWNoYW5pY2FsbHkgd2l0aCBzb21lIG1hbnVhbCBwb3N0LXByb2Nlc3NpbmcgdG8gdXNlCnJt
dyB3aGVyZSBhcHByb3ByaWF0ZSBhbmQgZml4IGxpbmUgbGVuZ3RoIGFuZCBmb3JtYXR0aW5nLgoK
U2lnbmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1
cmlvQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hk
bWkuYyB8IDI3OCArKysrKysrKysrLS0tLS0tLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTMyIGlu
c2VydGlvbnMoKyksIDE0NiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfaGRtaS5jCmluZGV4IDBlYmVjNjliYmJmYy4uMzNhZDU5MzYxZDU0IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkbWkuYwpAQCAtNzIsNyArNzIsNyBAQCBh
c3NlcnRfaGRtaV9wb3J0X2Rpc2FibGVkKHN0cnVjdCBpbnRlbF9oZG1pICppbnRlbF9oZG1pKQog
CiAJZW5hYmxlZF9iaXRzID0gSEFTX0RESShkZXZfcHJpdikgPyBERElfQlVGX0NUTF9FTkFCTEUg
OiBTRFZPX0VOQUJMRTsKIAotCVdBUk4oSTkxNV9SRUFEKGludGVsX2hkbWktPmhkbWlfcmVnKSAm
IGVuYWJsZWRfYml0cywKKwlXQVJOKGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIGludGVsX2hkbWkt
PmhkbWlfcmVnKSAmIGVuYWJsZWRfYml0cywKIAkgICAgICJIRE1JIHBvcnQgZW5hYmxlZCwgZXhw
ZWN0aW5nIGRpc2FibGVkXG4iKTsKIH0KIApAQCAtODAsNyArODAsNyBAQCBzdGF0aWMgdm9pZAog
YXNzZXJ0X2hkbWlfdHJhbnNjb2Rlcl9mdW5jX2Rpc2FibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJCQkgICAgIGVudW0gdHJhbnNjb2RlciBjcHVfdHJhbnNjb2RlcikK
IHsKLQlXQVJOKEk5MTVfUkVBRChUUkFOU19ERElfRlVOQ19DVEwoY3B1X3RyYW5zY29kZXIpKSAm
CisJV0FSTihpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBUUkFOU19ERElfRlVOQ19DVEwoY3B1X3Ry
YW5zY29kZXIpKSAmCiAJICAgICBUUkFOU19ERElfRlVOQ19FTkFCTEUsCiAJICAgICAiSERNSSB0
cmFuc2NvZGVyIGZ1bmN0aW9uIGVuYWJsZWQsIGV4cGVjdGluZyBkaXNhYmxlZFxuIik7CiB9CkBA
IC0yMDgsNyArMjA4LDcgQEAgc3RhdGljIHZvaWQgZzR4X3dyaXRlX2luZm9mcmFtZShzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAljb25zdCB1MzIgKmRhdGEgPSBmcmFtZTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2Uu
ZGV2KTsKLQl1MzIgdmFsID0gSTkxNV9SRUFEKFZJREVPX0RJUF9DVEwpOworCXUzMiB2YWwgPSBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LCBWSURFT19ESVBfQ1RMKTsKIAlpbnQgaTsKIAogCVdBUk4o
ISh2YWwgJiBWSURFT19ESVBfRU5BQkxFKSwgIldyaXRpbmcgRElQIHdpdGggQ1RMIHJlZyBkaXNh
YmxlZFxuIik7CkBAIC0yMTgsMjIgKzIxOCwyMiBAQCBzdGF0aWMgdm9pZCBnNHhfd3JpdGVfaW5m
b2ZyYW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCiAJdmFsICY9IH5nNHhfaW5m
b2ZyYW1lX2VuYWJsZSh0eXBlKTsKIAotCUk5MTVfV1JJVEUoVklERU9fRElQX0NUTCwgdmFsKTsK
KwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgVklERU9fRElQX0NUTCwgdmFsKTsKIAogCWZvciAo
aSA9IDA7IGkgPCBsZW47IGkgKz0gNCkgewotCQlJOTE1X1dSSVRFKFZJREVPX0RJUF9EQVRBLCAq
ZGF0YSk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBWSURFT19ESVBfREFUQSwgKmRhdGEp
OwogCQlkYXRhKys7CiAJfQogCS8qIFdyaXRlIGV2ZXJ5IHBvc3NpYmxlIGRhdGEgYnl0ZSB0byBm
b3JjZSBjb3JyZWN0IEVDQyBjYWxjdWxhdGlvbi4gKi8KIAlmb3IgKDsgaSA8IFZJREVPX0RJUF9E
QVRBX1NJWkU7IGkgKz0gNCkKLQkJSTkxNV9XUklURShWSURFT19ESVBfREFUQSwgMCk7CisJCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LCBWSURFT19ESVBfREFUQSwgMCk7CiAKIAl2YWwgfD0gZzR4
X2luZm9mcmFtZV9lbmFibGUodHlwZSk7CiAJdmFsICY9IH5WSURFT19ESVBfRlJFUV9NQVNLOwog
CXZhbCB8PSBWSURFT19ESVBfRlJFUV9WU1lOQzsKIAotCUk5MTVfV1JJVEUoVklERU9fRElQX0NU
TCwgdmFsKTsKLQlQT1NUSU5HX1JFQUQoVklERU9fRElQX0NUTCk7CisJaW50ZWxfZGVfd3JpdGUo
ZGV2X3ByaXYsIFZJREVPX0RJUF9DVEwsIHZhbCk7CisJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRl
dl9wcml2LCBWSURFT19ESVBfQ1RMKTsKIH0KIAogc3RhdGljIHZvaWQgZzR4X3JlYWRfaW5mb2Zy
YW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLApAQCAtMjQyLDI1ICsyNDIsMjIgQEAg
c3RhdGljIHZvaWQgZzR4X3JlYWRfaW5mb2ZyYW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCQkJICAgICAgIHZvaWQgKmZyYW1lLCBzc2l6ZV90IGxlbikKIHsKIAlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKLQl1
MzIgdmFsLCAqZGF0YSA9IGZyYW1lOworCXUzMiAqZGF0YSA9IGZyYW1lOwogCWludCBpOwogCi0J
dmFsID0gSTkxNV9SRUFEKFZJREVPX0RJUF9DVEwpOwotCi0JdmFsICY9IH4oVklERU9fRElQX1NF
TEVDVF9NQVNLIHwgMHhmKTsgLyogY2xlYXIgRElQIGRhdGEgb2Zmc2V0ICovCi0JdmFsIHw9IGc0
eF9pbmZvZnJhbWVfaW5kZXgodHlwZSk7Ci0KLQlJOTE1X1dSSVRFKFZJREVPX0RJUF9DVEwsIHZh
bCk7CisJaW50ZWxfZGVfcm13KGRldl9wcml2LCBWSURFT19ESVBfQ1RMLAorCQkgICAgIFZJREVP
X0RJUF9TRUxFQ1RfTUFTSyB8IDB4ZiwgLyogY2xlYXIgRElQIGRhdGEgb2Zmc2V0ICovCisJCSAg
ICAgZzR4X2luZm9mcmFtZV9pbmRleCh0eXBlKSk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgbGVuOyBp
ICs9IDQpCi0JCSpkYXRhKysgPSBJOTE1X1JFQUQoVklERU9fRElQX0RBVEEpOworCQkqZGF0YSsr
ID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgVklERU9fRElQX0RBVEEpOwogfQogCiBzdGF0aWMg
dTMyIGc0eF9pbmZvZnJhbWVzX2VuYWJsZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIs
CiAJCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNl
LmRldik7Ci0JdTMyIHZhbCA9IEk5MTVfUkVBRChWSURFT19ESVBfQ1RMKTsKKwl1MzIgdmFsID0g
aW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgVklERU9fRElQX0NUTCk7CiAKIAlpZiAoKHZhbCAmIFZJ
REVPX0RJUF9FTkFCTEUpID09IDApCiAJCXJldHVybiAwOwpAQCAtMjgxLDcgKzI3OCw3IEBAIHN0
YXRpYyB2b2lkIGlieF93cml0ZV9pbmZvZnJhbWUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVy
LT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9j
cnRjKGNydGNfc3RhdGUtPmJhc2UuY3J0Yyk7CiAJaTkxNV9yZWdfdCByZWcgPSBUVklERU9fRElQ
X0NUTChpbnRlbF9jcnRjLT5waXBlKTsKLQl1MzIgdmFsID0gSTkxNV9SRUFEKHJlZyk7CisJdTMy
IHZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIHJlZyk7CiAJaW50IGk7CiAKIAlXQVJOKCEo
dmFsICYgVklERU9fRElQX0VOQUJMRSksICJXcml0aW5nIERJUCB3aXRoIENUTCByZWcgZGlzYWJs
ZWRcbiIpOwpAQCAtMjkxLDIyICsyODgsMjIgQEAgc3RhdGljIHZvaWQgaWJ4X3dyaXRlX2luZm9m
cmFtZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCXZhbCAmPSB+ZzR4X2luZm9m
cmFtZV9lbmFibGUodHlwZSk7CiAKLQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKKwlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOwogCiAJZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0
KSB7Ci0JCUk5MTVfV1JJVEUoVFZJREVPX0RJUF9EQVRBKGludGVsX2NydGMtPnBpcGUpLCAqZGF0
YSk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBUVklERU9fRElQX0RBVEEoaW50ZWxfY3J0
Yy0+cGlwZSksICpkYXRhKTsKIAkJZGF0YSsrOwogCX0KIAkvKiBXcml0ZSBldmVyeSBwb3NzaWJs
ZSBkYXRhIGJ5dGUgdG8gZm9yY2UgY29ycmVjdCBFQ0MgY2FsY3VsYXRpb24uICovCiAJZm9yICg7
IGkgPCBWSURFT19ESVBfREFUQV9TSVpFOyBpICs9IDQpCi0JCUk5MTVfV1JJVEUoVFZJREVPX0RJ
UF9EQVRBKGludGVsX2NydGMtPnBpcGUpLCAwKTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYs
IFRWSURFT19ESVBfREFUQShpbnRlbF9jcnRjLT5waXBlKSwgMCk7CiAKIAl2YWwgfD0gZzR4X2lu
Zm9mcmFtZV9lbmFibGUodHlwZSk7CiAJdmFsICY9IH5WSURFT19ESVBfRlJFUV9NQVNLOwogCXZh
bCB8PSBWSURFT19ESVBfRlJFUV9WU1lOQzsKIAotCUk5MTVfV1JJVEUocmVnLCB2YWwpOwotCVBP
U1RJTkdfUkVBRChyZWcpOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWcsIHZhbCk7CisJ
aW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCByZWcpOwogfQogCiBzdGF0aWMgdm9pZCBp
YnhfcmVhZF9pbmZvZnJhbWUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCkBAIC0zMTYs
MTggKzMxMywxNSBAQCBzdGF0aWMgdm9pZCBpYnhfcmVhZF9pbmZvZnJhbWUoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIsCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMg
PSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPmJhc2UuY3J0Yyk7Ci0JdTMyIHZhbCwgKmRhdGEg
PSBmcmFtZTsKKwl1MzIgKmRhdGEgPSBmcmFtZTsKIAlpbnQgaTsKIAotCXZhbCA9IEk5MTVfUkVB
RChUVklERU9fRElQX0NUTChjcnRjLT5waXBlKSk7Ci0KLQl2YWwgJj0gfihWSURFT19ESVBfU0VM
RUNUX01BU0sgfCAweGYpOyAvKiBjbGVhciBESVAgZGF0YSBvZmZzZXQgKi8KLQl2YWwgfD0gZzR4
X2luZm9mcmFtZV9pbmRleCh0eXBlKTsKLQotCUk5MTVfV1JJVEUoVFZJREVPX0RJUF9DVEwoY3J0
Yy0+cGlwZSksIHZhbCk7CisJaW50ZWxfZGVfcm13KGRldl9wcml2LCBUVklERU9fRElQX0NUTChj
cnRjLT5waXBlKSwKKwkJICAgICBWSURFT19ESVBfU0VMRUNUX01BU0sgfCAweGYsIC8qIGNsZWFy
IERJUCBkYXRhIG9mZnNldCAqLworCQkgICAgIGc0eF9pbmZvZnJhbWVfaW5kZXgodHlwZSkpOwog
CiAJZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KQotCQkqZGF0YSsrID0gSTkxNV9SRUFEKFRW
SURFT19ESVBfREFUQShjcnRjLT5waXBlKSk7CisJCSpkYXRhKysgPSBpbnRlbF9kZV9yZWFkKGRl
dl9wcml2LCBUVklERU9fRElQX0RBVEEoY3J0Yy0+cGlwZSkpOwogfQogCiBzdGF0aWMgdTMyIGli
eF9pbmZvZnJhbWVzX2VuYWJsZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCkBAIC0z
MzYsNyArMzMwLDcgQEAgc3RhdGljIHUzMiBpYnhfaW5mb2ZyYW1lc19lbmFibGVkKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcGlwZSBwaXBlID0gdG9faW50
ZWxfY3J0YyhwaXBlX2NvbmZpZy0+YmFzZS5jcnRjKS0+cGlwZTsKIAlpOTE1X3JlZ190IHJlZyA9
IFRWSURFT19ESVBfQ1RMKHBpcGUpOwotCXUzMiB2YWwgPSBJOTE1X1JFQUQocmVnKTsKKwl1MzIg
dmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgcmVnKTsKIAogCWlmICgodmFsICYgVklERU9f
RElQX0VOQUJMRSkgPT0gMCkKIAkJcmV0dXJuIDA7CkBAIC0zNTgsNyArMzUyLDcgQEAgc3RhdGlj
IHZvaWQgY3B0X3dyaXRlX2luZm9mcmFtZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
IAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJh
c2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMo
Y3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKIAlpOTE1X3JlZ190IHJlZyA9IFRWSURFT19ESVBfQ1RM
KGludGVsX2NydGMtPnBpcGUpOwotCXUzMiB2YWwgPSBJOTE1X1JFQUQocmVnKTsKKwl1MzIgdmFs
ID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgcmVnKTsKIAlpbnQgaTsKIAogCVdBUk4oISh2YWwg
JiBWSURFT19ESVBfRU5BQkxFKSwgIldyaXRpbmcgRElQIHdpdGggQ1RMIHJlZyBkaXNhYmxlZFxu
Iik7CkBAIC0zNzEsMjIgKzM2NSwyMiBAQCBzdGF0aWMgdm9pZCBjcHRfd3JpdGVfaW5mb2ZyYW1l
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCWlmICh0eXBlICE9IEhETUlfSU5GT0ZS
QU1FX1RZUEVfQVZJKQogCQl2YWwgJj0gfmc0eF9pbmZvZnJhbWVfZW5hYmxlKHR5cGUpOwogCi0J
STkxNV9XUklURShyZWcsIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywgdmFs
KTsKIAogCWZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkgewotCQlJOTE1X1dSSVRFKFRWSURF
T19ESVBfREFUQShpbnRlbF9jcnRjLT5waXBlKSwgKmRhdGEpOworCQlpbnRlbF9kZV93cml0ZShk
ZXZfcHJpdiwgVFZJREVPX0RJUF9EQVRBKGludGVsX2NydGMtPnBpcGUpLCAqZGF0YSk7CiAJCWRh
dGErKzsKIAl9CiAJLyogV3JpdGUgZXZlcnkgcG9zc2libGUgZGF0YSBieXRlIHRvIGZvcmNlIGNv
cnJlY3QgRUNDIGNhbGN1bGF0aW9uLiAqLwogCWZvciAoOyBpIDwgVklERU9fRElQX0RBVEFfU0la
RTsgaSArPSA0KQotCQlJOTE1X1dSSVRFKFRWSURFT19ESVBfREFUQShpbnRlbF9jcnRjLT5waXBl
KSwgMCk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBUVklERU9fRElQX0RBVEEoaW50ZWxf
Y3J0Yy0+cGlwZSksIDApOwogCiAJdmFsIHw9IGc0eF9pbmZvZnJhbWVfZW5hYmxlKHR5cGUpOwog
CXZhbCAmPSB+VklERU9fRElQX0ZSRVFfTUFTSzsKIAl2YWwgfD0gVklERU9fRElQX0ZSRVFfVlNZ
TkM7CiAKLQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKLQlQT1NUSU5HX1JFQUQocmVnKTsKKwlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOworCWludGVsX2RlX3Bvc3RpbmdfcmVhZChk
ZXZfcHJpdiwgcmVnKTsKIH0KIAogc3RhdGljIHZvaWQgY3B0X3JlYWRfaW5mb2ZyYW1lKHN0cnVj
dCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLApAQCAtMzk2LDE4ICszOTAsMTUgQEAgc3RhdGljIHZv
aWQgY3B0X3JlYWRfaW5mb2ZyYW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFz
ZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0
YXRlLT5iYXNlLmNydGMpOwotCXUzMiB2YWwsICpkYXRhID0gZnJhbWU7CisJdTMyICpkYXRhID0g
ZnJhbWU7CiAJaW50IGk7CiAKLQl2YWwgPSBJOTE1X1JFQUQoVFZJREVPX0RJUF9DVEwoY3J0Yy0+
cGlwZSkpOwotCi0JdmFsICY9IH4oVklERU9fRElQX1NFTEVDVF9NQVNLIHwgMHhmKTsgLyogY2xl
YXIgRElQIGRhdGEgb2Zmc2V0ICovCi0JdmFsIHw9IGc0eF9pbmZvZnJhbWVfaW5kZXgodHlwZSk7
Ci0KLQlJOTE1X1dSSVRFKFRWSURFT19ESVBfQ1RMKGNydGMtPnBpcGUpLCB2YWwpOworCWludGVs
X2RlX3JtdyhkZXZfcHJpdiwgVFZJREVPX0RJUF9DVEwoY3J0Yy0+cGlwZSksCisJCSAgICAgVklE
RU9fRElQX1NFTEVDVF9NQVNLIHwgMHhmLCAvKiBjbGVhciBESVAgZGF0YSBvZmZzZXQgKi8KKwkJ
ICAgICBnNHhfaW5mb2ZyYW1lX2luZGV4KHR5cGUpKTsKIAogCWZvciAoaSA9IDA7IGkgPCBsZW47
IGkgKz0gNCkKLQkJKmRhdGErKyA9IEk5MTVfUkVBRChUVklERU9fRElQX0RBVEEoY3J0Yy0+cGlw
ZSkpOworCQkqZGF0YSsrID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgVFZJREVPX0RJUF9EQVRB
KGNydGMtPnBpcGUpKTsKIH0KIAogc3RhdGljIHUzMiBjcHRfaW5mb2ZyYW1lc19lbmFibGVkKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLApAQCAtNDE1LDcgKzQwNiw3IEBAIHN0YXRpYyB1
MzIgY3B0X2luZm9mcmFtZXNfZW5hYmxlZChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwK
IHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXIt
PmJhc2UuZGV2KTsKIAllbnVtIHBpcGUgcGlwZSA9IHRvX2ludGVsX2NydGMocGlwZV9jb25maWct
PmJhc2UuY3J0YyktPnBpcGU7Ci0JdTMyIHZhbCA9IEk5MTVfUkVBRChUVklERU9fRElQX0NUTChw
aXBlKSk7CisJdTMyIHZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFRWSURFT19ESVBfQ1RM
KHBpcGUpKTsKIAogCWlmICgodmFsICYgVklERU9fRElQX0VOQUJMRSkgPT0gMCkKIAkJcmV0dXJu
IDA7CkBAIC00MzQsNyArNDI1LDcgQEAgc3RhdGljIHZvaWQgdmx2X3dyaXRlX2luZm9mcmFtZShz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfY3J0
YyAqaW50ZWxfY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKIAlp
OTE1X3JlZ190IHJlZyA9IFZMVl9UVklERU9fRElQX0NUTChpbnRlbF9jcnRjLT5waXBlKTsKLQl1
MzIgdmFsID0gSTkxNV9SRUFEKHJlZyk7CisJdTMyIHZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3By
aXYsIHJlZyk7CiAJaW50IGk7CiAKIAlXQVJOKCEodmFsICYgVklERU9fRElQX0VOQUJMRSksICJX
cml0aW5nIERJUCB3aXRoIENUTCByZWcgZGlzYWJsZWRcbiIpOwpAQCAtNDQ0LDIyICs0MzUsMjIg
QEAgc3RhdGljIHZvaWQgdmx2X3dyaXRlX2luZm9mcmFtZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAq
ZW5jb2RlciwKIAogCXZhbCAmPSB+ZzR4X2luZm9mcmFtZV9lbmFibGUodHlwZSk7CiAKLQlJOTE1
X1dSSVRFKHJlZywgdmFsKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOwog
CiAJZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7Ci0JCUk5MTVfV1JJVEUoVkxWX1RWSURF
T19ESVBfREFUQShpbnRlbF9jcnRjLT5waXBlKSwgKmRhdGEpOworCQlpbnRlbF9kZV93cml0ZShk
ZXZfcHJpdiwgVkxWX1RWSURFT19ESVBfREFUQShpbnRlbF9jcnRjLT5waXBlKSwgKmRhdGEpOwog
CQlkYXRhKys7CiAJfQogCS8qIFdyaXRlIGV2ZXJ5IHBvc3NpYmxlIGRhdGEgYnl0ZSB0byBmb3Jj
ZSBjb3JyZWN0IEVDQyBjYWxjdWxhdGlvbi4gKi8KIAlmb3IgKDsgaSA8IFZJREVPX0RJUF9EQVRB
X1NJWkU7IGkgKz0gNCkKLQkJSTkxNV9XUklURShWTFZfVFZJREVPX0RJUF9EQVRBKGludGVsX2Ny
dGMtPnBpcGUpLCAwKTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIFZMVl9UVklERU9fRElQ
X0RBVEEoaW50ZWxfY3J0Yy0+cGlwZSksIDApOwogCiAJdmFsIHw9IGc0eF9pbmZvZnJhbWVfZW5h
YmxlKHR5cGUpOwogCXZhbCAmPSB+VklERU9fRElQX0ZSRVFfTUFTSzsKIAl2YWwgfD0gVklERU9f
RElQX0ZSRVFfVlNZTkM7CiAKLQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKLQlQT1NUSU5HX1JFQUQo
cmVnKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOworCWludGVsX2RlX3Bv
c3RpbmdfcmVhZChkZXZfcHJpdiwgcmVnKTsKIH0KIAogc3RhdGljIHZvaWQgdmx2X3JlYWRfaW5m
b2ZyYW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLApAQCAtNDY5LDE4ICs0NjAsMTUg
QEAgc3RhdGljIHZvaWQgdmx2X3JlYWRfaW5mb2ZyYW1lKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyLAogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxf
Y3J0YyhjcnRjX3N0YXRlLT5iYXNlLmNydGMpOwotCXUzMiB2YWwsICpkYXRhID0gZnJhbWU7CisJ
dTMyICpkYXRhID0gZnJhbWU7CiAJaW50IGk7CiAKLQl2YWwgPSBJOTE1X1JFQUQoVkxWX1RWSURF
T19ESVBfQ1RMKGNydGMtPnBpcGUpKTsKLQotCXZhbCAmPSB+KFZJREVPX0RJUF9TRUxFQ1RfTUFT
SyB8IDB4Zik7IC8qIGNsZWFyIERJUCBkYXRhIG9mZnNldCAqLwotCXZhbCB8PSBnNHhfaW5mb2Zy
YW1lX2luZGV4KHR5cGUpOwotCi0JSTkxNV9XUklURShWTFZfVFZJREVPX0RJUF9DVEwoY3J0Yy0+
cGlwZSksIHZhbCk7CisJaW50ZWxfZGVfcm13KGRldl9wcml2LCBWTFZfVFZJREVPX0RJUF9DVEwo
Y3J0Yy0+cGlwZSksCisJCSAgICAgVklERU9fRElQX1NFTEVDVF9NQVNLIHwgMHhmLCAvKiBjbGVh
ciBESVAgZGF0YSBvZmZzZXQgKi8KKwkJICAgICBnNHhfaW5mb2ZyYW1lX2luZGV4KHR5cGUpKTsK
IAogCWZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkKLQkJKmRhdGErKyA9IEk5MTVfUkVBRChW
TFZfVFZJREVPX0RJUF9EQVRBKGNydGMtPnBpcGUpKTsKKwkJKmRhdGErKyA9IGludGVsX2RlX3Jl
YWQoZGV2X3ByaXYsIFZMVl9UVklERU9fRElQX0RBVEEoY3J0Yy0+cGlwZSkpOwogfQogCiBzdGF0
aWMgdTMyIHZsdl9pbmZvZnJhbWVzX2VuYWJsZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCkBAIC00ODgsNyArNDc2LDcgQEAgc3RhdGljIHUzMiB2bHZfaW5mb2ZyYW1lc19lbmFibGVk
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCWVudW0gcGlwZSBw
aXBlID0gdG9faW50ZWxfY3J0YyhwaXBlX2NvbmZpZy0+YmFzZS5jcnRjKS0+cGlwZTsKLQl1MzIg
dmFsID0gSTkxNV9SRUFEKFZMVl9UVklERU9fRElQX0NUTChwaXBlKSk7CisJdTMyIHZhbCA9IGlu
dGVsX2RlX3JlYWQoZGV2X3ByaXYsIFZMVl9UVklERU9fRElQX0NUTChwaXBlKSk7CiAKIAlpZiAo
KHZhbCAmIFZJREVPX0RJUF9FTkFCTEUpID09IDApCiAJCXJldHVybiAwOwpAQCAtNTEyLDI2ICs1
MDAsMjYgQEAgc3RhdGljIHZvaWQgaHN3X3dyaXRlX2luZm9mcmFtZShzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlciwKIAlpOTE1X3JlZ190IGN0bF9yZWcgPSBIU1dfVFZJREVPX0RJUF9DVEwo
Y3B1X3RyYW5zY29kZXIpOwogCWludCBkYXRhX3NpemU7CiAJaW50IGk7Ci0JdTMyIHZhbCA9IEk5
MTVfUkVBRChjdGxfcmVnKTsKKwl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgY3Rs
X3JlZyk7CiAKIAlkYXRhX3NpemUgPSBoc3dfZGlwX2RhdGFfc2l6ZSh0eXBlKTsKIAogCXZhbCAm
PSB+aHN3X2luZm9mcmFtZV9lbmFibGUodHlwZSk7Ci0JSTkxNV9XUklURShjdGxfcmVnLCB2YWwp
OworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBjdGxfcmVnLCB2YWwpOwogCiAJZm9yIChpID0g
MDsgaSA8IGxlbjsgaSArPSA0KSB7Ci0JCUk5MTVfV1JJVEUoaHN3X2RpcF9kYXRhX3JlZyhkZXZf
cHJpdiwgY3B1X3RyYW5zY29kZXIsCi0JCQkJCSAgICB0eXBlLCBpID4+IDIpLCAqZGF0YSk7CisJ
CWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBoc3dfZGlwX2RhdGFfcmVnKGRldl9wcml2LCBjcHVf
dHJhbnNjb2RlciwKKwkJCQkJCQkgIHR5cGUsIGkgPj4gMiksICpkYXRhKTsKIAkJZGF0YSsrOwog
CX0KIAkvKiBXcml0ZSBldmVyeSBwb3NzaWJsZSBkYXRhIGJ5dGUgdG8gZm9yY2UgY29ycmVjdCBF
Q0MgY2FsY3VsYXRpb24uICovCiAJZm9yICg7IGkgPCBkYXRhX3NpemU7IGkgKz0gNCkKLQkJSTkx
NV9XUklURShoc3dfZGlwX2RhdGFfcmVnKGRldl9wcml2LCBjcHVfdHJhbnNjb2RlciwKLQkJCQkJ
ICAgIHR5cGUsIGkgPj4gMiksIDApOworCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaHN3X2Rp
cF9kYXRhX3JlZyhkZXZfcHJpdiwgY3B1X3RyYW5zY29kZXIsCisJCQkJCQkJICB0eXBlLCBpID4+
IDIpLCAwKTsKIAogCXZhbCB8PSBoc3dfaW5mb2ZyYW1lX2VuYWJsZSh0eXBlKTsKLQlJOTE1X1dS
SVRFKGN0bF9yZWcsIHZhbCk7Ci0JUE9TVElOR19SRUFEKGN0bF9yZWcpOworCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBjdGxfcmVnLCB2YWwpOworCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZf
cHJpdiwgY3RsX3JlZyk7CiB9CiAKIHN0YXRpYyB2b2lkIGhzd19yZWFkX2luZm9mcmFtZShzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKQEAgLTU0NCwxOCArNTMyLDIwIEBAIHN0YXRpYyB2
b2lkIGhzd19yZWFkX2luZm9mcmFtZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAl1
MzIgdmFsLCAqZGF0YSA9IGZyYW1lOwogCWludCBpOwogCi0JdmFsID0gSTkxNV9SRUFEKEhTV19U
VklERU9fRElQX0NUTChjcHVfdHJhbnNjb2RlcikpOworCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2
X3ByaXYsIEhTV19UVklERU9fRElQX0NUTChjcHVfdHJhbnNjb2RlcikpOwogCiAJZm9yIChpID0g
MDsgaSA8IGxlbjsgaSArPSA0KQotCQkqZGF0YSsrID0gSTkxNV9SRUFEKGhzd19kaXBfZGF0YV9y
ZWcoZGV2X3ByaXYsIGNwdV90cmFuc2NvZGVyLAotCQkJCQkJICAgICB0eXBlLCBpID4+IDIpKTsK
KwkJKmRhdGErKyA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCisJCQkJCWhzd19kaXBfZGF0YV9y
ZWcoZGV2X3ByaXYsIGNwdV90cmFuc2NvZGVyLAorCQkJCQkJCSB0eXBlLCBpID4+IDIpKTsKIH0K
IAogc3RhdGljIHUzMiBoc3dfaW5mb2ZyYW1lc19lbmFibGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29u
ZmlnKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5j
b2Rlci0+YmFzZS5kZXYpOwotCXUzMiB2YWwgPSBJOTE1X1JFQUQoSFNXX1RWSURFT19ESVBfQ1RM
KHBpcGVfY29uZmlnLT5jcHVfdHJhbnNjb2RlcikpOworCXUzMiB2YWwgPSBpbnRlbF9kZV9yZWFk
KGRldl9wcml2LAorCQkJCUhTV19UVklERU9fRElQX0NUTChwaXBlX2NvbmZpZy0+Y3B1X3RyYW5z
Y29kZXIpKTsKIAl1MzIgbWFzazsKIAogCW1hc2sgPSAoVklERU9fRElQX0VOQUJMRV9WU0NfSFNX
IHwgVklERU9fRElQX0VOQUJMRV9BVklfSFNXIHwKQEAgLTg0MSw3ICs4MzEsNyBAQCBzdGF0aWMg
dm9pZCBnNHhfc2V0X2luZm9mcmFtZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJ
c3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBlbmNfdG9fZGlnX3Bv
cnQoJmVuY29kZXItPmJhc2UpOwogCXN0cnVjdCBpbnRlbF9oZG1pICppbnRlbF9oZG1pID0gJmlu
dGVsX2RpZ19wb3J0LT5oZG1pOwogCWk5MTVfcmVnX3QgcmVnID0gVklERU9fRElQX0NUTDsKLQl1
MzIgdmFsID0gSTkxNV9SRUFEKHJlZyk7CisJdTMyIHZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3By
aXYsIHJlZyk7CiAJdTMyIHBvcnQgPSBWSURFT19ESVBfUE9SVChlbmNvZGVyLT5wb3J0KTsKIAog
CWFzc2VydF9oZG1pX3BvcnRfZGlzYWJsZWQoaW50ZWxfaGRtaSk7CkBAIC04NjcsOCArODU3LDgg
QEAgc3RhdGljIHZvaWQgZzR4X3NldF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyLAogCQl9CiAJCXZhbCAmPSB+KFZJREVPX0RJUF9FTkFCTEUgfCBWSURFT19ESVBfRU5B
QkxFX0FWSSB8CiAJCQkgVklERU9fRElQX0VOQUJMRV9WRU5ET1IgfCBWSURFT19ESVBfRU5BQkxF
X1NQRCk7Ci0JCUk5MTVfV1JJVEUocmVnLCB2YWwpOwotCQlQT1NUSU5HX1JFQUQocmVnKTsKKwkJ
aW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywgdmFsKTsKKwkJaW50ZWxfZGVfcG9zdGluZ19y
ZWFkKGRldl9wcml2LCByZWcpOwogCQlyZXR1cm47CiAJfQogCkBAIC04ODYsOCArODc2LDggQEAg
c3RhdGljIHZvaWQgZzR4X3NldF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCXZhbCAmPSB+KFZJREVPX0RJUF9FTkFCTEVfQVZJIHwKIAkJIFZJREVPX0RJUF9FTkFC
TEVfVkVORE9SIHwgVklERU9fRElQX0VOQUJMRV9TUEQpOwogCi0JSTkxNV9XUklURShyZWcsIHZh
bCk7Ci0JUE9TVElOR19SRUFEKHJlZyk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywg
dmFsKTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIHJlZyk7CiAKIAlpbnRlbF93
cml0ZV9pbmZvZnJhbWUoZW5jb2RlciwgY3J0Y19zdGF0ZSwKIAkJCSAgICAgIEhETUlfSU5GT0ZS
QU1FX1RZUEVfQVZJLApAQCAtOTY0LDcgKzk1NCw3IEBAIHN0YXRpYyBib29sIGludGVsX2hkbWlf
c2V0X2djcF9pbmZvZnJhbWUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZWxzZQog
CQlyZXR1cm4gZmFsc2U7CiAKLQlJOTE1X1dSSVRFKHJlZywgY3J0Y19zdGF0ZS0+aW5mb2ZyYW1l
cy5nY3ApOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWcsIGNydGNfc3RhdGUtPmluZm9m
cmFtZXMuZ2NwKTsKIAogCXJldHVybiB0cnVlOwogfQpAQCAtOTg5LDcgKzk3OSw3IEBAIHZvaWQg
aW50ZWxfaGRtaV9yZWFkX2djcF9pbmZvZnJhbWUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCiAJZWxzZQogCQlyZXR1cm47CiAKLQljcnRjX3N0YXRlLT5pbmZvZnJhbWVzLmdjcCA9IEk5
MTVfUkVBRChyZWcpOworCWNydGNfc3RhdGUtPmluZm9mcmFtZXMuZ2NwID0gaW50ZWxfZGVfcmVh
ZChkZXZfcHJpdiwgcmVnKTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfaGRtaV9jb21wdXRlX2dj
cF9pbmZvZnJhbWUoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCkBAIC0xMDI0LDcgKzEw
MTQsNyBAQCBzdGF0aWMgdm9pZCBpYnhfc2V0X2luZm9mcmFtZXMoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQg
PSBlbmNfdG9fZGlnX3BvcnQoJmVuY29kZXItPmJhc2UpOwogCXN0cnVjdCBpbnRlbF9oZG1pICpp
bnRlbF9oZG1pID0gJmludGVsX2RpZ19wb3J0LT5oZG1pOwogCWk5MTVfcmVnX3QgcmVnID0gVFZJ
REVPX0RJUF9DVEwoaW50ZWxfY3J0Yy0+cGlwZSk7Ci0JdTMyIHZhbCA9IEk5MTVfUkVBRChyZWcp
OworCXUzMiB2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWcpOwogCXUzMiBwb3J0ID0g
VklERU9fRElQX1BPUlQoZW5jb2Rlci0+cG9ydCk7CiAKIAlhc3NlcnRfaGRtaV9wb3J0X2Rpc2Fi
bGVkKGludGVsX2hkbWkpOwpAQCAtMTAzOCw4ICsxMDI4LDggQEAgc3RhdGljIHZvaWQgaWJ4X3Nl
dF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQl2YWwgJj0gfihW
SURFT19ESVBfRU5BQkxFIHwgVklERU9fRElQX0VOQUJMRV9BVkkgfAogCQkJIFZJREVPX0RJUF9F
TkFCTEVfVkVORE9SIHwgVklERU9fRElQX0VOQUJMRV9HQU1VVCB8CiAJCQkgVklERU9fRElQX0VO
QUJMRV9TUEQgfCBWSURFT19ESVBfRU5BQkxFX0dDUCk7Ci0JCUk5MTVfV1JJVEUocmVnLCB2YWwp
OwotCQlQT1NUSU5HX1JFQUQocmVnKTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywg
dmFsKTsKKwkJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCByZWcpOwogCQlyZXR1cm47
CiAJfQogCkBAIC0xMDU5LDggKzEwNDksOCBAQCBzdGF0aWMgdm9pZCBpYnhfc2V0X2luZm9mcmFt
ZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaWYgKGludGVsX2hkbWlfc2V0X2dj
cF9pbmZvZnJhbWUoZW5jb2RlciwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkpCiAJCXZhbCB8PSBW
SURFT19ESVBfRU5BQkxFX0dDUDsKIAotCUk5MTVfV1JJVEUocmVnLCB2YWwpOwotCVBPU1RJTkdf
UkVBRChyZWcpOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWcsIHZhbCk7CisJaW50ZWxf
ZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCByZWcpOwogCiAJaW50ZWxfd3JpdGVfaW5mb2ZyYW1l
KGVuY29kZXIsIGNydGNfc3RhdGUsCiAJCQkgICAgICBIRE1JX0lORk9GUkFNRV9UWVBFX0FWSSwK
QEAgLTEwODIsNyArMTA3Miw3IEBAIHN0YXRpYyB2b2lkIGNwdF9zZXRfaW5mb2ZyYW1lcyhzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0
YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+YmFzZS5jcnRjKTsKIAlzdHJ1Y3QgaW50ZWxf
aGRtaSAqaW50ZWxfaGRtaSA9IGVuY190b19pbnRlbF9oZG1pKCZlbmNvZGVyLT5iYXNlKTsKIAlp
OTE1X3JlZ190IHJlZyA9IFRWSURFT19ESVBfQ1RMKGludGVsX2NydGMtPnBpcGUpOwotCXUzMiB2
YWwgPSBJOTE1X1JFQUQocmVnKTsKKwl1MzIgdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwg
cmVnKTsKIAogCWFzc2VydF9oZG1pX3BvcnRfZGlzYWJsZWQoaW50ZWxfaGRtaSk7CiAKQEAgLTEw
OTUsOCArMTA4NSw4IEBAIHN0YXRpYyB2b2lkIGNwdF9zZXRfaW5mb2ZyYW1lcyhzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJdmFsICY9IH4oVklERU9fRElQX0VOQUJMRSB8IFZJREVP
X0RJUF9FTkFCTEVfQVZJIHwKIAkJCSBWSURFT19ESVBfRU5BQkxFX1ZFTkRPUiB8IFZJREVPX0RJ
UF9FTkFCTEVfR0FNVVQgfAogCQkJIFZJREVPX0RJUF9FTkFCTEVfU1BEIHwgVklERU9fRElQX0VO
QUJMRV9HQ1ApOwotCQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKLQkJUE9TVElOR19SRUFEKHJlZyk7
CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWcsIHZhbCk7CisJCWludGVsX2RlX3Bvc3Rp
bmdfcmVhZChkZXZfcHJpdiwgcmVnKTsKIAkJcmV0dXJuOwogCX0KIApAQCAtMTEwOCw4ICsxMDk4
LDggQEAgc3RhdGljIHZvaWQgY3B0X3NldF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCWlmIChpbnRlbF9oZG1pX3NldF9nY3BfaW5mb2ZyYW1lKGVuY29kZXIsIGNy
dGNfc3RhdGUsIGNvbm5fc3RhdGUpKQogCQl2YWwgfD0gVklERU9fRElQX0VOQUJMRV9HQ1A7CiAK
LQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKLQlQT1NUSU5HX1JFQUQocmVnKTsKKwlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOworCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJp
diwgcmVnKTsKIAogCWludGVsX3dyaXRlX2luZm9mcmFtZShlbmNvZGVyLCBjcnRjX3N0YXRlLAog
CQkJICAgICAgSERNSV9JTkZPRlJBTUVfVFlQRV9BVkksCkBAIC0xMTMxLDcgKzExMjEsNyBAQCBz
dGF0aWMgdm9pZCB2bHZfc2V0X2luZm9mcmFtZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCiAJc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKGNydGNf
c3RhdGUtPmJhc2UuY3J0Yyk7CiAJc3RydWN0IGludGVsX2hkbWkgKmludGVsX2hkbWkgPSBlbmNf
dG9faW50ZWxfaGRtaSgmZW5jb2Rlci0+YmFzZSk7CiAJaTkxNV9yZWdfdCByZWcgPSBWTFZfVFZJ
REVPX0RJUF9DVEwoaW50ZWxfY3J0Yy0+cGlwZSk7Ci0JdTMyIHZhbCA9IEk5MTVfUkVBRChyZWcp
OworCXUzMiB2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWcpOwogCXUzMiBwb3J0ID0g
VklERU9fRElQX1BPUlQoZW5jb2Rlci0+cG9ydCk7CiAKIAlhc3NlcnRfaGRtaV9wb3J0X2Rpc2Fi
bGVkKGludGVsX2hkbWkpOwpAQCAtMTE0NSw4ICsxMTM1LDggQEAgc3RhdGljIHZvaWQgdmx2X3Nl
dF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQl2YWwgJj0gfihW
SURFT19ESVBfRU5BQkxFIHwgVklERU9fRElQX0VOQUJMRV9BVkkgfAogCQkJIFZJREVPX0RJUF9F
TkFCTEVfVkVORE9SIHwgVklERU9fRElQX0VOQUJMRV9HQU1VVCB8CiAJCQkgVklERU9fRElQX0VO
QUJMRV9TUEQgfCBWSURFT19ESVBfRU5BQkxFX0dDUCk7Ci0JCUk5MTVfV1JJVEUocmVnLCB2YWwp
OwotCQlQT1NUSU5HX1JFQUQocmVnKTsKKwkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywg
dmFsKTsKKwkJaW50ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCByZWcpOwogCQlyZXR1cm47
CiAJfQogCkBAIC0xMTY2LDggKzExNTYsOCBAQCBzdGF0aWMgdm9pZCB2bHZfc2V0X2luZm9mcmFt
ZXMoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJaWYgKGludGVsX2hkbWlfc2V0X2dj
cF9pbmZvZnJhbWUoZW5jb2RlciwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkpCiAJCXZhbCB8PSBW
SURFT19ESVBfRU5BQkxFX0dDUDsKIAotCUk5MTVfV1JJVEUocmVnLCB2YWwpOwotCVBPU1RJTkdf
UkVBRChyZWcpOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCByZWcsIHZhbCk7CisJaW50ZWxf
ZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCByZWcpOwogCiAJaW50ZWxfd3JpdGVfaW5mb2ZyYW1l
KGVuY29kZXIsIGNydGNfc3RhdGUsCiAJCQkgICAgICBIRE1JX0lORk9GUkFNRV9UWVBFX0FWSSwK
QEAgLTExODcsNyArMTE3Nyw3IEBAIHN0YXRpYyB2b2lkIGhzd19zZXRfaW5mb2ZyYW1lcyhzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAlpOTE1X3JlZ190IHJlZyA9
IEhTV19UVklERU9fRElQX0NUTChjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2Rlcik7Ci0JdTMyIHZh
bCA9IEk5MTVfUkVBRChyZWcpOworCXUzMiB2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBy
ZWcpOwogCiAJYXNzZXJ0X2hkbWlfdHJhbnNjb2Rlcl9mdW5jX2Rpc2FibGVkKGRldl9wcml2LAog
CQkJCQkgICAgIGNydGNfc3RhdGUtPmNwdV90cmFuc2NvZGVyKTsKQEAgLTExOTgsMTYgKzExODgs
MTYgQEAgc3RhdGljIHZvaWQgaHN3X3NldF9pbmZvZnJhbWVzKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCQkgVklERU9fRElQX0VOQUJMRV9EUk1fR0xLKTsKIAogCWlmICghZW5hYmxl
KSB7Ci0JCUk5MTVfV1JJVEUocmVnLCB2YWwpOwotCQlQT1NUSU5HX1JFQUQocmVnKTsKKwkJaW50
ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIHJlZywgdmFsKTsKKwkJaW50ZWxfZGVfcG9zdGluZ19yZWFk
KGRldl9wcml2LCByZWcpOwogCQlyZXR1cm47CiAJfQogCiAJaWYgKGludGVsX2hkbWlfc2V0X2dj
cF9pbmZvZnJhbWUoZW5jb2RlciwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSkpCiAJCXZhbCB8PSBW
SURFT19ESVBfRU5BQkxFX0dDUF9IU1c7CiAKLQlJOTE1X1dSSVRFKHJlZywgdmFsKTsKLQlQT1NU
SU5HX1JFQUQocmVnKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgcmVnLCB2YWwpOworCWlu
dGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgcmVnKTsKIAogCWludGVsX3dyaXRlX2luZm9m
cmFtZShlbmNvZGVyLCBjcnRjX3N0YXRlLAogCQkJICAgICAgSERNSV9JTkZPRlJBTUVfVFlQRV9B
VkksCkBAIC0xNDM3LDcgKzE0MjcsNyBAQCBzdGF0aWMgaW50IGtibF9yZXBvc2l0aW9uaW5nX2Vu
Y19lbl9zaWduYWwoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogCWludCByZXQ7
CiAKIAlmb3IgKDs7KSB7Ci0JCXNjYW5saW5lID0gSTkxNV9SRUFEKFBJUEVEU0woaW50ZWxfY3J0
Yy0+cGlwZSkpOworCQlzY2FubGluZSA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIFBJUEVEU0wo
aW50ZWxfY3J0Yy0+cGlwZSkpOwogCQlpZiAoc2NhbmxpbmUgPiAxMDAgJiYgc2NhbmxpbmUgPCAy
MDApCiAJCQlicmVhazsKIAkJdXNsZWVwX3JhbmdlKDI1LCA1MCk7CkBAIC0xNTAyLDEzICsxNDky
LDEzIEBAIGJvb2wgaW50ZWxfaGRtaV9oZGNwX2NoZWNrX2xpbmsoc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQpCiAJaWYgKHJldCkKIAkJcmV0dXJuIGZhbHNlOwogCi0J
STkxNV9XUklURShQT1JUX0hEQ1BfUlBSSU1FKHBvcnQpLCByaS5yZWcpOworCWludGVsX2RlX3dy
aXRlKGRldl9wcml2LCBQT1JUX0hEQ1BfUlBSSU1FKHBvcnQpLCByaS5yZWcpOwogCiAJLyogV2Fp
dCBmb3IgUmkgcHJpbWUgbWF0Y2ggKi8KLQlpZiAod2FpdF9mb3IoSTkxNV9SRUFEKFBPUlRfSERD
UF9TVEFUVVMocG9ydCkpICYKKwlpZiAod2FpdF9mb3IoaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwg
UE9SVF9IRENQX1NUQVRVUyhwb3J0KSkgJgogCQkgICAgIChIRENQX1NUQVRVU19SSV9NQVRDSCB8
IEhEQ1BfU1RBVFVTX0VOQyksIDEpKSB7CiAJCURSTV9FUlJPUigiUmknIG1pc21hdGNoIGRldGVj
dGVkLCBsaW5rIGNoZWNrIGZhaWxlZCAoJXgpXG4iLAotCQkJICBJOTE1X1JFQUQoUE9SVF9IRENQ
X1NUQVRVUyhwb3J0KSkpOworCQkJICBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBQT1JUX0hEQ1Bf
U1RBVFVTKHBvcnQpKSk7CiAJCXJldHVybiBmYWxzZTsKIAl9CiAJcmV0dXJuIHRydWU7CkBAIC0x
NzUxLDggKzE3NDEsOCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9oZG1pX3ByZXBhcmUoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZWxzZQogCQloZG1pX3ZhbCB8PSBTRFZPX1BJUEVfU0VM
KGNydGMtPnBpcGUpOwogCi0JSTkxNV9XUklURShpbnRlbF9oZG1pLT5oZG1pX3JlZywgaGRtaV92
YWwpOwotCVBPU1RJTkdfUkVBRChpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CisJaW50ZWxfZGVfd3Jp
dGUoZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnLCBoZG1pX3ZhbCk7CisJaW50ZWxfZGVf
cG9zdGluZ19yZWFkKGRldl9wcml2LCBpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CiB9CiAKIHN0YXRp
YyBib29sIGludGVsX2hkbWlfZ2V0X2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLApAQCAtMTc4Niw3ICsxNzc2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfaGRtaV9nZXRfY29u
ZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCiAJcGlwZV9jb25maWctPm91dHB1
dF90eXBlcyB8PSBCSVQoSU5URUxfT1VUUFVUX0hETUkpOwogCi0JdG1wID0gSTkxNV9SRUFEKGlu
dGVsX2hkbWktPmhkbWlfcmVnKTsKKwl0bXAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBpbnRl
bF9oZG1pLT5oZG1pX3JlZyk7CiAKIAlpZiAodG1wICYgU0RWT19IU1lOQ19BQ1RJVkVfSElHSCkK
IAkJZmxhZ3MgfD0gRFJNX01PREVfRkxBR19QSFNZTkM7CkBAIC0xODYyLDE0ICsxODUyLDE0IEBA
IHN0YXRpYyB2b2lkIGc0eF9lbmFibGVfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rl
ciwKIAlzdHJ1Y3QgaW50ZWxfaGRtaSAqaW50ZWxfaGRtaSA9IGVuY190b19pbnRlbF9oZG1pKCZl
bmNvZGVyLT5iYXNlKTsKIAl1MzIgdGVtcDsKIAotCXRlbXAgPSBJOTE1X1JFQUQoaW50ZWxfaGRt
aS0+aGRtaV9yZWcpOworCXRlbXAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBpbnRlbF9oZG1p
LT5oZG1pX3JlZyk7CiAKIAl0ZW1wIHw9IFNEVk9fRU5BQkxFOwogCWlmIChwaXBlX2NvbmZpZy0+
aGFzX2F1ZGlvKQogCQl0ZW1wIHw9IEhETUlfQVVESU9fRU5BQkxFOwogCi0JSTkxNV9XUklURShp
bnRlbF9oZG1pLT5oZG1pX3JlZywgdGVtcCk7Ci0JUE9TVElOR19SRUFEKGludGVsX2hkbWktPmhk
bWlfcmVnKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaW50ZWxfaGRtaS0+aGRtaV9yZWcs
IHRlbXApOworCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgaW50ZWxfaGRtaS0+aGRt
aV9yZWcpOwogCiAJaWYgKHBpcGVfY29uZmlnLT5oYXNfYXVkaW8pCiAJCWludGVsX2VuYWJsZV9o
ZG1pX2F1ZGlvKGVuY29kZXIsIHBpcGVfY29uZmlnLCBjb25uX3N0YXRlKTsKQEAgLTE4ODQsNyAr
MTg3NCw3IEBAIHN0YXRpYyB2b2lkIGlieF9lbmFibGVfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlciwKIAlzdHJ1Y3QgaW50ZWxfaGRtaSAqaW50ZWxfaGRtaSA9IGVuY190b19pbnRl
bF9oZG1pKCZlbmNvZGVyLT5iYXNlKTsKIAl1MzIgdGVtcDsKIAotCXRlbXAgPSBJOTE1X1JFQUQo
aW50ZWxfaGRtaS0+aGRtaV9yZWcpOworCXRlbXAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBp
bnRlbF9oZG1pLT5oZG1pX3JlZyk7CiAKIAl0ZW1wIHw9IFNEVk9fRU5BQkxFOwogCWlmIChwaXBl
X2NvbmZpZy0+aGFzX2F1ZGlvKQpAQCAtMTg5NCwxMCArMTg4NCwxMCBAQCBzdGF0aWMgdm9pZCBp
YnhfZW5hYmxlX2hkbWkoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJICogSFcgd29y
a2Fyb3VuZCwgbmVlZCB0byB3cml0ZSB0aGlzIHR3aWNlIGZvciBpc3N1ZQogCSAqIHRoYXQgbWF5
IHJlc3VsdCBpbiBmaXJzdCB3cml0ZSBnZXR0aW5nIG1hc2tlZC4KIAkgKi8KLQlJOTE1X1dSSVRF
KGludGVsX2hkbWktPmhkbWlfcmVnLCB0ZW1wKTsKLQlQT1NUSU5HX1JFQUQoaW50ZWxfaGRtaS0+
aGRtaV9yZWcpOwotCUk5MTVfV1JJVEUoaW50ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOwotCVBP
U1RJTkdfUkVBRChpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3By
aXYsIGludGVsX2hkbWktPmhkbWlfcmVnLCB0ZW1wKTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQo
ZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnKTsKKwlpbnRlbF9kZV93cml0ZShkZXZfcHJp
diwgaW50ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOworCWludGVsX2RlX3Bvc3RpbmdfcmVhZChk
ZXZfcHJpdiwgaW50ZWxfaGRtaS0+aGRtaV9yZWcpOwogCiAJLyoKIAkgKiBIVyB3b3JrYXJvdW5k
LCBuZWVkIHRvIHRvZ2dsZSBlbmFibGUgYml0IG9mZiBhbmQgb24KQEAgLTE5MDgsMTcgKzE4OTgs
MTcgQEAgc3RhdGljIHZvaWQgaWJ4X2VuYWJsZV9oZG1pKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyLAogCSAqLwogCWlmIChwaXBlX2NvbmZpZy0+cGlwZV9icHAgPiAyNCAmJgogCSAgICBw
aXBlX2NvbmZpZy0+cGl4ZWxfbXVsdGlwbGllciA+IDEpIHsKLQkJSTkxNV9XUklURShpbnRlbF9o
ZG1pLT5oZG1pX3JlZywgdGVtcCAmIH5TRFZPX0VOQUJMRSk7Ci0JCVBPU1RJTkdfUkVBRChpbnRl
bF9oZG1pLT5oZG1pX3JlZyk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9oZG1p
LT5oZG1pX3JlZywgdGVtcCAmIH5TRFZPX0VOQUJMRSk7CisJCWludGVsX2RlX3Bvc3RpbmdfcmVh
ZChkZXZfcHJpdiwgaW50ZWxfaGRtaS0+aGRtaV9yZWcpOwogCiAJCS8qCiAJCSAqIEhXIHdvcmth
cm91bmQsIG5lZWQgdG8gd3JpdGUgdGhpcyB0d2ljZSBmb3IgaXNzdWUKIAkJICogdGhhdCBtYXkg
cmVzdWx0IGluIGZpcnN0IHdyaXRlIGdldHRpbmcgbWFza2VkLgogCQkgKi8KLQkJSTkxNV9XUklU
RShpbnRlbF9oZG1pLT5oZG1pX3JlZywgdGVtcCk7Ci0JCVBPU1RJTkdfUkVBRChpbnRlbF9oZG1p
LT5oZG1pX3JlZyk7Ci0JCUk5MTVfV1JJVEUoaW50ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOwot
CQlQT1NUSU5HX1JFQUQoaW50ZWxfaGRtaS0+aGRtaV9yZWcpOworCQlpbnRlbF9kZV93cml0ZShk
ZXZfcHJpdiwgaW50ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOworCQlpbnRlbF9kZV9wb3N0aW5n
X3JlYWQoZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnKTsKKwkJaW50ZWxfZGVfd3JpdGUo
ZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnLCB0ZW1wKTsKKwkJaW50ZWxfZGVfcG9zdGlu
Z19yZWFkKGRldl9wcml2LCBpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CiAJfQogCiAJaWYgKHBpcGVf
Y29uZmlnLT5oYXNfYXVkaW8pCkBAIC0xOTM2LDcgKzE5MjYsNyBAQCBzdGF0aWMgdm9pZCBjcHRf
ZW5hYmxlX2hkbWkoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJZW51bSBwaXBlIHBp
cGUgPSBjcnRjLT5waXBlOwogCXUzMiB0ZW1wOwogCi0JdGVtcCA9IEk5MTVfUkVBRChpbnRlbF9o
ZG1pLT5oZG1pX3JlZyk7CisJdGVtcCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIGludGVsX2hk
bWktPmhkbWlfcmVnKTsKIAogCXRlbXAgfD0gU0RWT19FTkFCTEU7CiAJaWYgKHBpcGVfY29uZmln
LT5oYXNfYXVkaW8pCkBAIC0xOTUzLDI3ICsxOTQzLDI1IEBAIHN0YXRpYyB2b2lkIGNwdF9lbmFi
bGVfaGRtaShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkgKi8KIAogCWlmIChwaXBl
X2NvbmZpZy0+cGlwZV9icHAgPiAyNCkgewotCQlJOTE1X1dSSVRFKFRSQU5TX0NISUNLRU4xKHBp
cGUpLAotCQkJICAgSTkxNV9SRUFEKFRSQU5TX0NISUNLRU4xKHBpcGUpKSB8Ci0JCQkgICBUUkFO
U19DSElDS0VOMV9IRE1JVU5JVF9HQ19ESVNBQkxFKTsKKwkJaW50ZWxfZGVfcm13KGRldl9wcml2
LCBUUkFOU19DSElDS0VOMShwaXBlKSwKKwkJCSAgICAgMCwgVFJBTlNfQ0hJQ0tFTjFfSERNSVVO
SVRfR0NfRElTQUJMRSk7CiAKIAkJdGVtcCAmPSB+U0RWT19DT0xPUl9GT1JNQVRfTUFTSzsKIAkJ
dGVtcCB8PSBTRFZPX0NPTE9SX0ZPUk1BVF84YnBjOwogCX0KIAotCUk5MTVfV1JJVEUoaW50ZWxf
aGRtaS0+aGRtaV9yZWcsIHRlbXApOwotCVBPU1RJTkdfUkVBRChpbnRlbF9oZG1pLT5oZG1pX3Jl
Zyk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnLCB0ZW1w
KTsKKwlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVn
KTsKIAogCWlmIChwaXBlX2NvbmZpZy0+cGlwZV9icHAgPiAyNCkgewogCQl0ZW1wICY9IH5TRFZP
X0NPTE9SX0ZPUk1BVF9NQVNLOwogCQl0ZW1wIHw9IEhETUlfQ09MT1JfRk9STUFUXzEyYnBjOwog
Ci0JCUk5MTVfV1JJVEUoaW50ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOwotCQlQT1NUSU5HX1JF
QUQoaW50ZWxfaGRtaS0+aGRtaV9yZWcpOworCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaW50
ZWxfaGRtaS0+aGRtaV9yZWcsIHRlbXApOworCQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3By
aXYsIGludGVsX2hkbWktPmhkbWlfcmVnKTsKIAotCQlJOTE1X1dSSVRFKFRSQU5TX0NISUNLRU4x
KHBpcGUpLAotCQkJICAgSTkxNV9SRUFEKFRSQU5TX0NISUNLRU4xKHBpcGUpKSAmCi0JCQkgICB+
VFJBTlNfQ0hJQ0tFTjFfSERNSVVOSVRfR0NfRElTQUJMRSk7CisJCWludGVsX2RlX3JtdyhkZXZf
cHJpdiwgVFJBTlNfQ0hJQ0tFTjEocGlwZSksCisJCQkgICAgIFRSQU5TX0NISUNLRU4xX0hETUlV
TklUX0dDX0RJU0FCTEUsIDApOwogCX0KIAogCWlmIChwaXBlX2NvbmZpZy0+aGFzX2F1ZGlvKQpA
QCAtMTk5OCwxMSArMTk4NiwxMSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9kaXNhYmxlX2hkbWkoc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0
b19pbnRlbF9jcnRjKG9sZF9jcnRjX3N0YXRlLT5iYXNlLmNydGMpOwogCXUzMiB0ZW1wOwogCi0J
dGVtcCA9IEk5MTVfUkVBRChpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CisJdGVtcCA9IGludGVsX2Rl
X3JlYWQoZGV2X3ByaXYsIGludGVsX2hkbWktPmhkbWlfcmVnKTsKIAogCXRlbXAgJj0gfihTRFZP
X0VOQUJMRSB8IEhETUlfQVVESU9fRU5BQkxFKTsKLQlJOTE1X1dSSVRFKGludGVsX2hkbWktPmhk
bWlfcmVnLCB0ZW1wKTsKLQlQT1NUSU5HX1JFQUQoaW50ZWxfaGRtaS0+aGRtaV9yZWcpOworCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9oZG1pLT5oZG1pX3JlZywgdGVtcCk7CisJaW50
ZWxfZGVfcG9zdGluZ19yZWFkKGRldl9wcml2LCBpbnRlbF9oZG1pLT5oZG1pX3JlZyk7CiAKIAkv
KgogCSAqIEhXIHdvcmthcm91bmQgZm9yIElCWCwgd2UgbmVlZCB0byBtb3ZlIHRoZSBwb3J0CkBA
IC0yMDIzLDE0ICsyMDExLDE0IEBAIHN0YXRpYyB2b2lkIGludGVsX2Rpc2FibGVfaGRtaShzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJICogSFcgd29ya2Fyb3VuZCwgbmVlZCB0byB3
cml0ZSB0aGlzIHR3aWNlIGZvciBpc3N1ZQogCQkgKiB0aGF0IG1heSByZXN1bHQgaW4gZmlyc3Qg
d3JpdGUgZ2V0dGluZyBtYXNrZWQuCiAJCSAqLwotCQlJOTE1X1dSSVRFKGludGVsX2hkbWktPmhk
bWlfcmVnLCB0ZW1wKTsKLQkJUE9TVElOR19SRUFEKGludGVsX2hkbWktPmhkbWlfcmVnKTsKLQkJ
STkxNV9XUklURShpbnRlbF9oZG1pLT5oZG1pX3JlZywgdGVtcCk7Ci0JCVBPU1RJTkdfUkVBRChp
bnRlbF9oZG1pLT5oZG1pX3JlZyk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9o
ZG1pLT5oZG1pX3JlZywgdGVtcCk7CisJCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwg
aW50ZWxfaGRtaS0+aGRtaV9yZWcpOworCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgaW50ZWxf
aGRtaS0+aGRtaV9yZWcsIHRlbXApOworCQlpbnRlbF9kZV9wb3N0aW5nX3JlYWQoZGV2X3ByaXYs
IGludGVsX2hkbWktPmhkbWlfcmVnKTsKIAogCQl0ZW1wICY9IH5TRFZPX0VOQUJMRTsKLQkJSTkx
NV9XUklURShpbnRlbF9oZG1pLT5oZG1pX3JlZywgdGVtcCk7Ci0JCVBPU1RJTkdfUkVBRChpbnRl
bF9oZG1pLT5oZG1pX3JlZyk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBpbnRlbF9oZG1p
LT5oZG1pX3JlZywgdGVtcCk7CisJCWludGVsX2RlX3Bvc3RpbmdfcmVhZChkZXZfcHJpdiwgaW50
ZWxfaGRtaS0+aGRtaV9yZWcpOwogCiAJCWludGVsX3dhaXRfZm9yX3ZibGFua19pZl9hY3RpdmUo
ZGV2X3ByaXYsIFBJUEVfQSk7CiAJCWludGVsX3NldF9jcHVfZmlmb191bmRlcnJ1bl9yZXBvcnRp
bmcoZGV2X3ByaXYsIFBJUEVfQSwgdHJ1ZSk7CkBAIC0zMTMyLDEwICszMTIwLDggQEAgdm9pZCBp
bnRlbF9oZG1pX2luaXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVs
X2RpZ19wb3J0LAogCSAqIDB4ZC4gIEZhaWx1cmUgdG8gZG8gc28gd2lsbCByZXN1bHQgaW4gc3B1
cmlvdXMgaW50ZXJydXB0cyBiZWluZwogCSAqIGdlbmVyYXRlZCBvbiB0aGUgcG9ydCB3aGVuIGEg
Y2FibGUgaXMgbm90IGF0dGFjaGVkLgogCSAqLwotCWlmIChJU19HNDUoZGV2X3ByaXYpKSB7Ci0J
CXUzMiB0ZW1wID0gSTkxNV9SRUFEKFBFR19CQU5EX0dBUF9EQVRBKTsKLQkJSTkxNV9XUklURShQ
RUdfQkFORF9HQVBfREFUQSwgKHRlbXAgJiB+MHhmKSB8IDB4ZCk7Ci0JfQorCWlmIChJU19HNDUo
ZGV2X3ByaXYpKQorCQlpbnRlbF9kZV9ybXcoZGV2X3ByaXYsIFBFR19CQU5EX0dBUF9EQVRBLCAw
eGYsIDB4ZCk7CiAKIAlpbnRlbF9oZG1pLT5jZWNfbm90aWZpZXIgPSBjZWNfbm90aWZpZXJfZ2V0
X2Nvbm4oZGV2LT5kZXYsCiAJCQkJCQkJIHBvcnRfaWRlbnRpZmllcihwb3J0KSk7Ci0tIAoyLjIw
LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVs
LWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczov
L2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

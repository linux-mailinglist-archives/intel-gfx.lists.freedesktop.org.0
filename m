Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6ABE9ADC77
	for <lists+intel-gfx@lfdr.de>; Mon,  9 Sep 2019 17:50:57 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4734E89C1A;
	Mon,  9 Sep 2019 15:50:55 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 31B6589C1A
 for <intel-gfx@lists.freedesktop.org>; Mon,  9 Sep 2019 15:50:54 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Sep 2019 08:50:52 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,486,1559545200"; d="scan'208";a="384019082"
Received: from labuser-z97x-ud5h.jf.intel.com ([10.54.75.49])
 by fmsmga005.fm.intel.com with ESMTP; 09 Sep 2019 08:50:52 -0700
From: Manasi Navare <manasi.d.navare@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  9 Sep 2019 08:52:11 -0700
Message-Id: <20190909155212.24230-1-manasi.d.navare@intel.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20190909034325.20006-5-manasi.d.navare@intel.com>
References: <20190909034325.20006-5-manasi.d.navare@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 4/6] drm/i915/display/icl: Enable
 master-slaves in trans port sync
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgcGVyIHRoZSBkaXNwbGF5IGVuYWJsZSBzZXF1ZW5jZSwgd2UgbmVlZCB0byBmb2xsb3cgdGhl
IGVuYWJsZSBzZXF1ZW5jZQpmb3Igc2xhdmVzIGZpcnN0IHdpdGggRFBfVFBfQ1RMIHNldCB0byBJ
ZGxlIGFuZCBjb25maWd1cmUgdGhlIHRyYW5zY29kZXIKcG9ydCBzeW5jIHJlZ2lzdGVyIHRvIHNl
bGVjdCB0aGUgY29yZXJzcG9uZGluZyBtYXN0ZXIsIHRoZW4gZm9sbG93IHRoZQplbmFibGUgc2Vx
dWVuY2UgZm9yIG1hc3RlciBsZWF2aW5nIERQX1RQX0NUTCB0byBpZGxlLgpBdCB0aGlzIHBvaW50
IHRoZSB0cmFuc2NvZGVyIHBvcnQgc3luYyBtb2RlIGlzIGNvbmZpZ3VyZWQgYW5kIGVuYWJsZWQK
YW5kIHRoZSBWYmxhbmtzIG9mIGJvdGggcG9ydHMgYXJlIHN5bmNocm9uaXplZCBzbyB0aGVuIHNl
dCBEUF9UUF9DVEwKZm9yIHRoZSBzbGF2ZSBhbmQgbWFzdGVyIHRvIE5vcm1hbCBhbmQgZG8gcG9z
dCBjcnRjIGVuYWJsZSB1cGRhdGVzLgoKdjU6CiogRml4IGNoZWNrcGF0Y2ggd2FybmluZyAoTWFu
YXNpKQp2NDoKKiBSZXVzZSBza2xfY29tbWl0X21vZGVzZXRfZW5hYmxlcygpIGhvb2sgKE1hYXJ0
ZW4pCiogT2J0YWluIHNsYXZlIGNydGMgYW5kIHN0YXRlcyBmcm9tIG1hc3RlciAoTWFhcnRlbikK
djM6CiogUmViYXNlIG9uIGRybS10aXAgKE1hbmFzaSkKdjI6CiogQ3JlYXRlIGEgaWNsX3VwZGF0
ZV9jcnRjcyBob29rIChNYWFydGVuLCBEYW52ZXQpCiogVGhpcyBzZXF1ZW5jZSBvbmx5IGZvciBD
UlRDcyBpbiB0cmFucyBwb3J0IHN5bmMgbW9kZSAoTWFhcnRlbikKCkNjOiBEYW5pZWwgVmV0dGVy
IDxkYW5pZWwudmV0dGVyQGZmd2xsLmNoPgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJq
YWxhQGxpbnV4LmludGVsLmNvbT4KQ2M6IE1hYXJ0ZW4gTGFua2hvcnN0IDxtYWFydGVuLmxhbmto
b3JzdEBsaW51eC5pbnRlbC5jb20+CkNjOiBNYXR0IFJvcGVyIDxtYXR0aGV3LmQucm9wZXJAaW50
ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBNYW5hc2kgTmF2YXJlIDxtYW5hc2kuZC5uYXZhcmVAaW50
ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAg
IHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyB8
IDE1OCArKysrKysrKysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXkuaCB8ICAgNCArCiAzIGZpbGVzIGNoYW5nZWQsIDE2MiBpbnNlcnRpb25zKCsp
LCAzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGRpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5j
CmluZGV4IDNlNjM5NDEzOTk2NC4uNjJlOWY1NjAyYjZiIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGRpLmMKQEAgLTMzNDcsNyArMzM0Nyw4IEBAIHN0YXRpYyB2b2lkIGhz
d19kZGlfcHJlX2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJCQkJ
ICAgICAgdHJ1ZSk7CiAJaW50ZWxfZHBfc2lua19zZXRfZmVjX3JlYWR5KGludGVsX2RwLCBjcnRj
X3N0YXRlKTsKIAlpbnRlbF9kcF9zdGFydF9saW5rX3RyYWluKGludGVsX2RwKTsKLQlpZiAocG9y
dCAhPSBQT1JUX0EgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQorCWlmICgocG9ydCAhPSBQ
T1JUX0EgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KSAmJgorCSAgICAhaXNfdHJhbnNfcG9y
dF9zeW5jX21vZGUoZGV2X3ByaXYsIGNydGNfc3RhdGUpKQogCQlpbnRlbF9kcF9zdG9wX2xpbmtf
dHJhaW4oaW50ZWxfZHApOwogCiAJaW50ZWxfZGRpX2VuYWJsZV9mZWMoZW5jb2RlciwgY3J0Y19z
dGF0ZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCmlu
ZGV4IDc2Y2ExY2E4NjRjMC4uNWU1ODNlOTE1N2YwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtNTIxLDYgKzUyMSwyNCBAQCBuZWVkc19tb2Rl
c2V0KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpzdGF0ZSkKIAlyZXR1cm4gZHJtX2F0
b21pY19jcnRjX25lZWRzX21vZGVzZXQoJnN0YXRlLT5iYXNlKTsKIH0KIAorYm9vbAoraXNfdHJh
bnNfcG9ydF9zeW5jX21vZGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJ
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnN0YXRlKQoreworCXJldHVybiAoSU5URUxf
R0VOKGRldl9wcml2KSA+PSAxMSAmJgorCQkoc3RhdGUtPm1hc3Rlcl90cmFuc2NvZGVyICE9IElO
VkFMSURfVFJBTlNDT0RFUiB8fAorCQkgc3RhdGUtPnN5bmNfbW9kZV9zbGF2ZXNfbWFzaykpOwor
fQorCitzdGF0aWMgYm9vbAoraXNfdHJhbnNfcG9ydF9zeW5jX21hc3RlcihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCisJCQkgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpzdGF0ZSkKK3sKKwlyZXR1cm4gKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEgJiYKKwkJKHN0
YXRlLT5tYXN0ZXJfdHJhbnNjb2RlciA9PSBJTlZBTElEX1RSQU5TQ09ERVIgJiYKKwkJIHN0YXRl
LT5zeW5jX21vZGVfc2xhdmVzX21hc2spKTsKK30KKwogLyoKICAqIFBsYXRmb3JtIHNwZWNpZmlj
IGhlbHBlcnMgdG8gY2FsY3VsYXRlIHRoZSBwb3J0IFBMTCBsb29wYmFjay0gKGNsb2NrLm0pLAog
ICogYW5kIHBvc3QtZGl2aWRlciAoY2xvY2sucCkgdmFsdWVzLCBwcmUtIChjbG9jay52Y28pIGFu
ZCBwb3N0LWRpdmlkZWQgZmFzdApAQCAtMTM5NzQsNiArMTM5OTIsMzAgQEAgc3RhdGljIHZvaWQg
aW50ZWxfdXBkYXRlX2NydGMoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJaW50ZWxfZmluaXNo
X2NydGNfY29tbWl0KHN0YXRlLCBjcnRjKTsKIH0KIAorc3RhdGljIHN0cnVjdCBpbnRlbF9jcnRj
ICppbnRlbF9nZXRfc2xhdmVfY3J0YyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CisJCQkJCSAgICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGUpCit7
CisJaWYgKG5ld19jcnRjX3N0YXRlLT5zeW5jX21vZGVfc2xhdmVzX21hc2sgJgorCSAgICBCSVQo
VFJBTlNDT0RFUl9BKSkKKwkJcmV0dXJuIGludGVsX2dldF9jcnRjX2Zvcl9waXBlKGRldl9wcml2
LAorCQkJCQkgICAgICAgUElQRV9BKTsKKwllbHNlIGlmIChuZXdfY3J0Y19zdGF0ZS0+c3luY19t
b2RlX3NsYXZlc19tYXNrICYKKwkJIEJJVChUUkFOU0NPREVSX0IpKQorCQlyZXR1cm4gaW50ZWxf
Z2V0X2NydGNfZm9yX3BpcGUoZGV2X3ByaXYsCisJCQkJCSAgICAgICBQSVBFX0IpOworCWVsc2Ug
aWYgKG5ld19jcnRjX3N0YXRlLT5zeW5jX21vZGVfc2xhdmVzX21hc2sgJgorCQkgQklUKFRSQU5T
Q09ERVJfQykpCisJCXJldHVybiBpbnRlbF9nZXRfY3J0Y19mb3JfcGlwZShkZXZfcHJpdiwKKwkJ
CQkJICAgICAgIFBJUEVfQyk7CisJZWxzZSBpZiAobmV3X2NydGNfc3RhdGUtPnN5bmNfbW9kZV9z
bGF2ZXNfbWFzayAmCisJCSBCSVQoVFJBTlNDT0RFUl9EKSkKKwkJcmV0dXJuIGludGVsX2dldF9j
cnRjX2Zvcl9waXBlKGRldl9wcml2LAorCQkJCQkgICAgICAgUElQRV9EKTsKKwkvKiBzaG91bGQg
bmV2ZXIgaGFwcGVuICovCisJV0FSTl9PTigxKTsKKwlyZXR1cm4gTlVMTDsKK30KKwogc3RhdGlj
IHZvaWQgaW50ZWxfb2xkX2NydGNfc3RhdGVfZGlzYWJsZXMoc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUsCiAJCQkJCSAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0
YXRlLAogCQkJCQkgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwKQEAg
LTE0MDUyLDYgKzE0MDk0LDEwNCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9jb21taXRfbW9kZXNldF9l
bmFibGVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCX0KIH0KIAorc3RhdGlj
IHZvaWQgaW50ZWxfY3J0Y19lbmFibGVfdHJhbnNfcG9ydF9zeW5jKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAorCQkJCQkgICAgICBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJ
CQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlKQoreworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2
KTsKKworCXVwZGF0ZV9zY2FubGluZV9vZmZzZXQobmV3X2NydGNfc3RhdGUpOworCWRldl9wcml2
LT5kaXNwbGF5LmNydGNfZW5hYmxlKG5ld19jcnRjX3N0YXRlLCBzdGF0ZSk7CisJaW50ZWxfY3J0
Y19lbmFibGVfcGlwZV9jcmMoY3J0Yyk7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsX3NldF9kcF90
cF9jdGxfbm9ybWFsKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJCSAgICAgICBzdHJ1Y3Qg
aW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0
ZSAqY29ubl9zdGF0ZTsKKwlzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubjsKKwlzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwOworCWludCBpOworCisJZm9yX2VhY2hfbmV3X2Nvbm5lY3Rvcl9pbl9z
dGF0ZSgmc3RhdGUtPmJhc2UsIGNvbm4sIGNvbm5fc3RhdGUsIGkpIHsKKwkJaWYgKGNvbm5fc3Rh
dGUtPmNydGMgPT0gJmNydGMtPmJhc2UpCisJCQlicmVhazsKKwl9CisJaW50ZWxfZHAgPSBlbmNf
dG9faW50ZWxfZHAoJmludGVsX2F0dGFjaGVkX2VuY29kZXIoY29ubiktPmJhc2UpOworCWludGVs
X2RwX3N0b3BfbGlua190cmFpbihpbnRlbF9kcCk7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsX3Bv
c3RfY3J0Y19lbmFibGVfdXBkYXRlcyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKKwkJCQkJICAg
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJCSAgIHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKKwkJCQkJICAgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKm5ld19jcnRjX3N0YXRlKQoreworCXN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqbmV3X3Bs
YW5lX3N0YXRlID0KKwkJaW50ZWxfYXRvbWljX2dldF9uZXdfcGxhbmVfc3RhdGUoc3RhdGUsCisJ
CQkJCQkgdG9faW50ZWxfcGxhbmUoY3J0Yy0+YmFzZS5wcmltYXJ5KSk7CisKKwlpZiAobmV3X2Ny
dGNfc3RhdGUtPnVwZGF0ZV9waXBlICYmICFuZXdfY3J0Y19zdGF0ZS0+ZW5hYmxlX2ZiYykKKwkJ
aW50ZWxfZmJjX2Rpc2FibGUoY3J0Yyk7CisJZWxzZSBpZiAobmV3X3BsYW5lX3N0YXRlKQorCQlp
bnRlbF9mYmNfZW5hYmxlKGNydGMsIG5ld19jcnRjX3N0YXRlLCBuZXdfcGxhbmVfc3RhdGUpOwor
CisJaW50ZWxfYmVnaW5fY3J0Y19jb21taXQoc3RhdGUsIGNydGMpOworCXNrbF91cGRhdGVfcGxh
bmVzX29uX2NydGMoc3RhdGUsIGNydGMpOworCWludGVsX2ZpbmlzaF9jcnRjX2NvbW1pdChzdGF0
ZSwgY3J0Yyk7Cit9CisKK3N0YXRpYyB2b2lkIGludGVsX3VwZGF0ZV90cmFuc19wb3J0X3N5bmNf
Y3J0Y3Moc3RydWN0IGludGVsX2NydGMgKmNydGMsCisJCQkJCSAgICAgICBzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSwKKwkJCQkJICAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpvbGRfY3J0Y19zdGF0ZSwKKwkJCQkJICAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpu
ZXdfY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KHN0YXRlLT5iYXNlLmRldik7CisJc3RydWN0IGludGVsX2NydGMgKnNsYXZlX2NydGMg
PSBpbnRlbF9nZXRfc2xhdmVfY3J0YyhkZXZfcHJpdiwKKwkJCQkJCQkgICAgIG5ld19jcnRjX3N0
YXRlKTsKKwlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X3NsYXZlX2NydGNfc3RhdGUgPQor
CQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBzbGF2ZV9jcnRjKTsKKwlz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX3NsYXZlX2NydGNfc3RhdGUgPQorCQlpbnRlbF9h
dG9taWNfZ2V0X29sZF9jcnRjX3N0YXRlKHN0YXRlLCBzbGF2ZV9jcnRjKTsKKworCVdBUk5fT04o
IXNsYXZlX2NydGMgfHwgIW5ld19zbGF2ZV9jcnRjX3N0YXRlIHx8CisJCSFvbGRfc2xhdmVfY3J0
Y19zdGF0ZSk7CisKKwlEUk1fREVCVUdfS01TKCJVcGRhdGluZyBUcmFuc2NvZGVyIFBvcnQgU3lu
YyBNYXN0ZXIgQ1JUQyA9ICVkICVzIGFuZCBTbGF2ZSBDUlRDICVkICVzXG4iLAorCQkgICAgICBj
cnRjLT5iYXNlLmJhc2UuaWQsIGNydGMtPmJhc2UubmFtZSwgc2xhdmVfY3J0Yy0+YmFzZS5iYXNl
LmlkLAorCQkgICAgICBzbGF2ZV9jcnRjLT5iYXNlLm5hbWUpOworCisJLyogRW5hYmxlIHNlcSBm
b3Igc2xhdmUgd2l0aCB3aXRoIERQX1RQX0NUTCBsZWZ0IElkbGUgdW50aWwgdGhlCisJICogbWFz
dGVyIGlzIHJlYWR5CisJICovCisJaW50ZWxfY3J0Y19lbmFibGVfdHJhbnNfcG9ydF9zeW5jKHNs
YXZlX2NydGMsCisJCQkJCSAgc3RhdGUsCisJCQkJCSAgbmV3X3NsYXZlX2NydGNfc3RhdGUpOwor
CisJLyogRW5hYmxlIHNlcSBmb3IgbWFzdGVyIHdpdGggd2l0aCBEUF9UUF9DVEwgbGVmdCBJZGxl
ICovCisJaW50ZWxfY3J0Y19lbmFibGVfdHJhbnNfcG9ydF9zeW5jKGNydGMsCisJCQkJCSAgc3Rh
dGUsCisJCQkJCSAgbmV3X2NydGNfc3RhdGUpOworCisJLyogU2V0IFNsYXZlJ3MgRFBfVFBfQ1RM
IHRvIE5vcm1hbCAqLworCWludGVsX3NldF9kcF90cF9jdGxfbm9ybWFsKHNsYXZlX2NydGMsCisJ
CQkJICAgc3RhdGUpOworCisJLyogU2V0IE1hc3RlcidzIERQX1RQX0NUTCBUbyBOb3JtYWwgKi8K
Kwl1c2xlZXBfcmFuZ2UoMjAwLCA0MDApOworCWludGVsX3NldF9kcF90cF9jdGxfbm9ybWFsKGNy
dGMsCisJCQkJICAgc3RhdGUpOworCisJLyogTm93IGRvIHRoZSBwb3N0IGNydGMgZW5hYmxlIGZv
ciBhbGwgbWFzdGVyIGFuZCBzbGF2ZXMgKi8KKwlpbnRlbF9wb3N0X2NydGNfZW5hYmxlX3VwZGF0
ZXMoc2xhdmVfY3J0YywKKwkJCQkgICAgICAgc3RhdGUsCisJCQkJICAgICAgIG5ld19zbGF2ZV9j
cnRjX3N0YXRlLAorCQkJCSAgICAgICBvbGRfc2xhdmVfY3J0Y19zdGF0ZSk7CisJaW50ZWxfcG9z
dF9jcnRjX2VuYWJsZV91cGRhdGVzKGNydGMsCisJCQkJICAgICAgIHN0YXRlLAorCQkJCSAgICAg
ICBuZXdfY3J0Y19zdGF0ZSwKKwkJCQkgICAgICAgb2xkX2NydGNfc3RhdGUpOworfQorCiBzdGF0
aWMgdm9pZCBza2xfY29tbWl0X21vZGVzZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0
YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KHN0YXRlLT5iYXNlLmRldik7CkBAIC0xNDA4Niw2ICsxNDIyNiw3IEBAIHN0YXRpYyB2b2lk
IHNrbF9jb21taXRfbW9kZXNldF9lbmFibGVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlKQogCQlmb3JfZWFjaF9vbGRuZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0Yywg
b2xkX2NydGNfc3RhdGUsIG5ld19jcnRjX3N0YXRlLCBpKSB7CiAJCQlib29sIHZibF93YWl0ID0g
ZmFsc2U7CiAJCQl1bnNpZ25lZCBpbnQgY21hc2sgPSBkcm1fY3J0Y19tYXNrKCZjcnRjLT5iYXNl
KTsKKwkJCWJvb2wgbW9kZXNldCA9IG5lZWRzX21vZGVzZXQobmV3X2NydGNfc3RhdGUpOwogCiAJ
CQlwaXBlID0gY3J0Yy0+cGlwZTsKIApAQCAtMTQxMDgsMTIgKzE0MjQ5LDI1IEBAIHN0YXRpYyB2
b2lkIHNrbF9jb21taXRfbW9kZXNldF9lbmFibGVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlKQogCQkJICovCiAJCQlpZiAoIXNrbF9kZGJfZW50cnlfZXF1YWwoJm5ld19jcnRjX3N0
YXRlLT53bS5za2wuZGRiLAogCQkJCQkJICZvbGRfY3J0Y19zdGF0ZS0+d20uc2tsLmRkYikgJiYK
KwkJCSAgICAhbW9kZXNldCAmJgogCQkJICAgICFuZXdfY3J0Y19zdGF0ZS0+YmFzZS5hY3RpdmVf
Y2hhbmdlZCAmJgogCQkJICAgIHN0YXRlLT53bV9yZXN1bHRzLmRpcnR5X3BpcGVzICE9IHVwZGF0
ZWQpCiAJCQkJdmJsX3dhaXQgPSB0cnVlOwogCi0JCQlpbnRlbF91cGRhdGVfY3J0YyhjcnRjLCBz
dGF0ZSwgb2xkX2NydGNfc3RhdGUsCi0JCQkJCSAgbmV3X2NydGNfc3RhdGUpOworCQkJaWYgKG1v
ZGVzZXQgJiYgaXNfdHJhbnNfcG9ydF9zeW5jX21vZGUoZGV2X3ByaXYsCisJCQkJCQkJICAgICAg
IG5ld19jcnRjX3N0YXRlKSkgeworCQkJCWlmIChpc190cmFuc19wb3J0X3N5bmNfbWFzdGVyKGRl
dl9wcml2LAorCQkJCQkJCSAgICAgIG5ld19jcnRjX3N0YXRlKSkKKwkJCQkJaW50ZWxfdXBkYXRl
X3RyYW5zX3BvcnRfc3luY19jcnRjcyhjcnRjLAorCQkJCQkJCQkJICAgc3RhdGUsCisJCQkJCQkJ
CQkgICBvbGRfY3J0Y19zdGF0ZSwKKwkJCQkJCQkJCSAgIG5ld19jcnRjX3N0YXRlKTsKKwkJCQll
bHNlCisJCQkJCWNvbnRpbnVlOworCQkJfSBlbHNlIHsKKwkJCQlpbnRlbF91cGRhdGVfY3J0Yyhj
cnRjLCBzdGF0ZSwgb2xkX2NydGNfc3RhdGUsCisJCQkJCQkgIG5ld19jcnRjX3N0YXRlKTsKKwkJ
CX0KIAogCQkJaWYgKHZibF93YWl0KQogCQkJCWludGVsX3dhaXRfZm9yX3ZibGFuayhkZXZfcHJp
diwgcGlwZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5o
CmluZGV4IGMxMDExMjA0YjQwNy4uM2UwYTM2ZWM1ODBkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaApAQCAtMjcsNiArMjcsNyBAQAogCiAjaW5jbHVk
ZSA8ZHJtL2RybV91dGlsLmg+CiAjaW5jbHVkZSA8ZHJtL2k5MTVfZHJtLmg+CisjaW5jbHVkZSAi
aW50ZWxfZHBfbGlua190cmFpbmluZy5oIgogCiBlbnVtIGxpbmtfbV9uX3NldDsKIHN0cnVjdCBk
cGxsOwpAQCAtNTIsNiArNTMsNyBAQCBzdHJ1Y3QgaW50ZWxfcGxhbmU7CiBzdHJ1Y3QgaW50ZWxf
cGxhbmVfc3RhdGU7CiBzdHJ1Y3QgaW50ZWxfcmVtYXBwZWRfaW5mbzsKIHN0cnVjdCBpbnRlbF9y
b3RhdGlvbl9pbmZvOworc3RydWN0IGludGVsX2NydGNfc3RhdGU7CiAKIGVudW0gaTkxNV9ncGlv
IHsKIAlHUElPQSwKQEAgLTQ0OSw2ICs0NTEsOCBAQCB1MzIgaW50ZWxfcGxhbmVfZmJfbWF4X3N0
cmlkZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICB1MzIgcGl4
ZWxfZm9ybWF0LCB1NjQgbW9kaWZpZXIpOwogYm9vbCBpbnRlbF9wbGFuZV9jYW5fcmVtYXAoY29u
c3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSk7CiBlbnVtIHBoeSBpbnRl
bF9wb3J0X3RvX3BoeShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgZW51bSBwb3J0IHBv
cnQpOworYm9vbCBpc190cmFuc19wb3J0X3N5bmNfbW9kZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSwKKwkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnN0YXRlKTsK
IAogdm9pZCBpbnRlbF9wbGFuZV9kZXN0cm95KHN0cnVjdCBkcm1fcGxhbmUgKnBsYW5lKTsKIHZv
aWQgaTgzMF9lbmFibGVfcGlwZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVu
dW0gcGlwZSBwaXBlKTsKLS0gCjIuMTkuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlz
dGluZm8vaW50ZWwtZ2Z4

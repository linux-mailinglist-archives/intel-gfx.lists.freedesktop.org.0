Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 376281732E
	for <lists+intel-gfx@lfdr.de>; Wed,  8 May 2019 10:08:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 259CD8941E;
	Wed,  8 May 2019 08:07:52 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 52629893B9
 for <intel-gfx@lists.freedesktop.org>; Wed,  8 May 2019 08:07:48 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16485915-1500050 
 for multiple; Wed, 08 May 2019 09:07:09 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  8 May 2019 09:06:39 +0100
Message-Id: <20190508080704.24223-15-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190508080704.24223-1-chris@chris-wilson.co.uk>
References: <20190508080704.24223-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 15/40] drm/i915: Apply an execution_mask to the
 virtual_engine
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWxsb3cgdGhlIHVzZXIgdG8gZGlyZWN0IHdoaWNoIHBoeXNpY2FsIGVuZ2luZXMgb2YgdGhlIHZp
cnR1YWwgZW5naW5lCnRoZXkgd2lzaCB0byBleGVjdXRlIG9uZSwgYXMgc29tZXRpbWVzIGl0IGlz
IG5lY2Vzc2FyeSB0byBvdmVycmlkZSB0aGUKbG9hZCBiYWxhbmNpbmcgYWxnb3JpdGhtLgoKdjI6
IE9ubHkga2ljayB0aGUgdmlydHVhbCBlbmdpbmVzIG9uIGNvbnRleHQtb3V0IGlmIHJlcXVpcmVk
CgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4K
Q2M6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+Ci0tLQogZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgfCAgNjcgKysrKysrKysrKysrKwogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgfCAxMzEgKysrKysrKysrKysrKysr
KysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMgICAgfCAgIDEg
KwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggICAgfCAgIDMgKwogNCBmaWxl
cyBjaGFuZ2VkLCAyMDIgaW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJj
LmMKaW5kZXggYmMzODhkZjM5ODAyLi42OTg0OWZmYjljODIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2xyYy5jCkBAIC01NTAsNiArNTUwLDE1IEBAIGV4ZWNsaXN0c19jb250ZXh0X3NjaGVk
dWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCXJxLT5od19jb250ZXh0LT5hY3RpdmUg
PSBycS0+ZW5naW5lOwogfQogCitzdGF0aWMgdm9pZCBraWNrX3NpYmxpbmdzKHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxKQoreworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSB0b192aXJ0dWFs
X2VuZ2luZShycS0+aHdfY29udGV4dC0+ZW5naW5lKTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpu
ZXh0ID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKworCWlmIChuZXh0ICYmIG5leHQtPmV4ZWN1
dGlvbl9tYXNrICYgfnJxLT5leGVjdXRpb25fbWFzaykKKwkJdGFza2xldF9zY2hlZHVsZSgmdmUt
PmJhc2UuZXhlY2xpc3RzLnRhc2tsZXQpOworfQorCiBzdGF0aWMgaW5saW5lIHZvaWQKIGV4ZWNs
aXN0c19jb250ZXh0X3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgdW5zaWdu
ZWQgbG9uZyBzdGF0dXMpCiB7CkBAIC01NTcsNiArNTY2LDE4IEBAIGV4ZWNsaXN0c19jb250ZXh0
X3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgdW5zaWduZWQgbG9uZyBzdGF0
dXMpCiAJaW50ZWxfZW5naW5lX2NvbnRleHRfb3V0KHJxLT5lbmdpbmUpOwogCWV4ZWNsaXN0c19j
b250ZXh0X3N0YXR1c19jaGFuZ2UocnEsIHN0YXR1cyk7CiAJdHJhY2VfaTkxNV9yZXF1ZXN0X291
dChycSk7CisKKwkvKgorCSAqIElmIHRoaXMgaXMgcGFydCBvZiBhIHZpcnR1YWwgZW5naW5lLCBp
dHMgbmV4dCByZXF1ZXN0IG1heSBoYXZlCisJICogYmVlbiBibG9ja2VkIHdhaXRpbmcgZm9yIGFj
Y2VzcyB0byB0aGUgYWN0aXZlIGNvbnRleHQuIFdlIGhhdmUKKwkgKiB0byBraWNrIGFsbCB0aGUg
c2libGluZ3MgYWdhaW4gaW4gY2FzZSB3ZSBuZWVkIHRvIHN3aXRjaCAoZS5nLgorCSAqIHRoZSBu
ZXh0IHJlcXVlc3QgaXMgbm90IHJ1bm5hYmxlIG9uIHRoaXMgZW5naW5lKS4gSG9wZWZ1bGx5LAor
CSAqIHdlIHdpbGwgYWxyZWFkeSBoYXZlIHN1Ym1pdHRlZCB0aGUgbmV4dCByZXF1ZXN0IGJlZm9y
ZSB0aGUKKwkgKiB0YXNrbGV0IHJ1bnMgYW5kIGRvIG5vdCBuZWVkIHRvIHJlYnVpbGQgZWFjaCB2
aXJ0dWFsIHRyZWUKKwkgKiBhbmQga2ljayBldmVyeW9uZSBhZ2Fpbi4KKwkgKi8KKwlpZiAocnEt
PmVuZ2luZSAhPSBycS0+aHdfY29udGV4dC0+ZW5naW5lKQorCQlraWNrX3NpYmxpbmdzKHJxKTsK
IH0KIAogc3RhdGljIHU2NCBleGVjbGlzdHNfdXBkYXRlX2NvbnRleHQoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCkBAIC03ODcsNiArODA4LDkgQEAgc3RhdGljIGJvb2wgdmlydHVhbF9tYXRjaGVz
KGNvbnN0IHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUsCiB7CiAJY29uc3Qgc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqYWN0aXZlOwogCisJaWYgKCEocnEtPmV4ZWN1dGlvbl9tYXNrICYgZW5naW5l
LT5tYXNrKSkgLyogV2UgcGVla2VkIHRvbyBzb29uISAqLworCQlyZXR1cm4gZmFsc2U7CisKIAkv
KgogCSAqIFdlIHRyYWNrIHdoZW4gdGhlIEhXIGhhcyBjb21wbGV0ZWQgc2F2aW5nIHRoZSBjb250
ZXh0IGltYWdlCiAJICogKGkuZS4gd2hlbiB3ZSBoYXZlIHNlZW4gdGhlIGZpbmFsIENTIGV2ZW50
IHN3aXRjaGluZyBvdXQgb2YKQEAgLTMxNTksMTIgKzMxODMsNDQgQEAgc3RhdGljIGNvbnN0IHN0
cnVjdCBpbnRlbF9jb250ZXh0X29wcyB2aXJ0dWFsX2NvbnRleHRfb3BzID0gewogCS5kZXN0cm95
ID0gdmlydHVhbF9jb250ZXh0X2Rlc3Ryb3ksCiB9OwogCitzdGF0aWMgaW50ZWxfZW5naW5lX21h
c2tfdCB2aXJ0dWFsX3N1Ym1pc3Npb25fbWFzayhzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlKQor
eworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCWludGVsX2VuZ2luZV9tYXNrX3QgbWFzazsK
KworCXJxID0gUkVBRF9PTkNFKHZlLT5yZXF1ZXN0KTsKKwlpZiAoIXJxKQorCQlyZXR1cm4gMDsK
KworCS8qIFRoZSBycSBpcyByZWFkeSBmb3Igc3VibWlzc2lvbjsgcnEtPmV4ZWN1dGlvbl9tYXNr
IGlzIG5vdyBzdGFibGUuICovCisJbWFzayA9IHJxLT5leGVjdXRpb25fbWFzazsKKwlpZiAodW5s
aWtlbHkoIW1hc2spKSB7CisJCS8qIEludmFsaWQgc2VsZWN0aW9uLCBzdWJtaXQgdG8gYSByYW5k
b20gZW5naW5lIGluIGVycm9yICovCisJCWk5MTVfcmVxdWVzdF9za2lwKHJxLCAtRU5PREVWKTsK
KwkJbWFzayA9IHZlLT5zaWJsaW5nc1swXS0+bWFzazsKKwl9CisKKwlHRU1fVFJBQ0UoIiVzOiBy
cT0lbGx4OiVsbGQsIG1hc2s9JXgsIHByaW89JWRcbiIsCisJCSAgdmUtPmJhc2UubmFtZSwKKwkJ
ICBycS0+ZmVuY2UuY29udGV4dCwgcnEtPmZlbmNlLnNlcW5vLAorCQkgIG1hc2ssIHZlLT5iYXNl
LmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50KTsKKworCXJldHVybiBtYXNrOworfQorCiBz
dGF0aWMgdm9pZCB2aXJ0dWFsX3N1Ym1pc3Npb25fdGFza2xldCh1bnNpZ25lZCBsb25nIGRhdGEp
CiB7CiAJc3RydWN0IHZpcnR1YWxfZW5naW5lICogY29uc3QgdmUgPSAoc3RydWN0IHZpcnR1YWxf
ZW5naW5lICopZGF0YTsKIAljb25zdCBpbnQgcHJpbyA9IHZlLT5iYXNlLmV4ZWNsaXN0cy5xdWV1
ZV9wcmlvcml0eV9oaW50OworCWludGVsX2VuZ2luZV9tYXNrX3QgbWFzazsKIAl1bnNpZ25lZCBp
bnQgbjsKIAorCXJjdV9yZWFkX2xvY2soKTsKKwltYXNrID0gdmlydHVhbF9zdWJtaXNzaW9uX21h
c2sodmUpOworCXJjdV9yZWFkX3VubG9jaygpOworCWlmICh1bmxpa2VseSghbWFzaykpCisJCXJl
dHVybjsKKwogCWxvY2FsX2lycV9kaXNhYmxlKCk7CiAJZm9yIChuID0gMDsgUkVBRF9PTkNFKHZl
LT5yZXF1ZXN0KSAmJiBuIDwgdmUtPm51bV9zaWJsaW5nczsgbisrKSB7CiAJCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKnNpYmxpbmcgPSB2ZS0+c2libGluZ3Nbbl07CkBAIC0zMTcyLDYgKzMyMjgs
MTcgQEAgc3RhdGljIHZvaWQgdmlydHVhbF9zdWJtaXNzaW9uX3Rhc2tsZXQodW5zaWduZWQgbG9u
ZyBkYXRhKQogCQlzdHJ1Y3QgcmJfbm9kZSAqKnBhcmVudCwgKnJiOwogCQlib29sIGZpcnN0Owog
CisJCWlmICh1bmxpa2VseSghKG1hc2sgJiBzaWJsaW5nLT5tYXNrKSkpIHsKKwkJCWlmICghUkJf
RU1QVFlfTk9ERSgmbm9kZS0+cmIpKSB7CisJCQkJc3Bpbl9sb2NrKCZzaWJsaW5nLT50aW1lbGlu
ZS5sb2NrKTsKKwkJCQlyYl9lcmFzZV9jYWNoZWQoJm5vZGUtPnJiLAorCQkJCQkJJnNpYmxpbmct
PmV4ZWNsaXN0cy52aXJ0dWFsKTsKKwkJCQlSQl9DTEVBUl9OT0RFKCZub2RlLT5yYik7CisJCQkJ
c3Bpbl91bmxvY2soJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOworCQkJfQorCQkJY29udGludWU7
CisJCX0KKwogCQlzcGluX2xvY2soJnNpYmxpbmctPnRpbWVsaW5lLmxvY2spOwogCiAJCWlmICgh
UkJfRU1QVFlfTk9ERSgmbm9kZS0+cmIpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0
X2xyYy5jCmluZGV4IGNjYzBiNjM1MDEyMy4uMmVmNzYzOWVlNjY1IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9scmMuYwpAQCAtMTQ4OSw2ICsxNDg5LDEzNiBAQCBzdGF0aWMgaW50
IGxpdmVfdmlydHVhbF9lbmdpbmUodm9pZCAqYXJnKQogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRp
YyBpbnQgbWFza192aXJ0dWFsX2VuZ2luZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwK
KwkJCSAgICAgICBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoqc2libGluZ3MsCisJCQkgICAgICAg
dW5zaWduZWQgaW50IG5zaWJsaW5nKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Rb
TUFYX0VOR0lORV9JTlNUQU5DRSArIDFdOworCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7
CisJc3RydWN0IGludGVsX2NvbnRleHQgKnZlOworCXN0cnVjdCBpZ3RfbGl2ZV90ZXN0IHQ7CisJ
dW5zaWduZWQgaW50IG47CisJaW50IGVycjsKKworCS8qCisJICogQ2hlY2sgdGhhdCBieSBzZXR0
aW5nIHRoZSBleGVjdXRpb24gbWFzayBvbiBhIHJlcXVlc3QsIHdlIGNhbgorCSAqIHJlc3RyaWN0
IGl0IHRvIG91ciBkZXNpcmVkIGVuZ2luZSB3aXRoaW4gdGhlIHZpcnR1YWwgZW5naW5lLgorCSAq
LworCisJY3R4ID0ga2VybmVsX2NvbnRleHQoaTkxNSk7CisJaWYgKCFjdHgpCisJCXJldHVybiAt
RU5PTUVNOworCisJdmUgPSBpbnRlbF9leGVjbGlzdHNfY3JlYXRlX3ZpcnR1YWwoY3R4LCBzaWJs
aW5ncywgbnNpYmxpbmcpOworCWlmIChJU19FUlIodmUpKSB7CisJCWVyciA9IFBUUl9FUlIodmUp
OworCQlnb3RvIG91dF9jbG9zZTsKKwl9CisKKwllcnIgPSBpbnRlbF9jb250ZXh0X3Bpbih2ZSk7
CisJaWYgKGVycikKKwkJZ290byBvdXRfcHV0OworCisJZXJyID0gaWd0X2xpdmVfdGVzdF9iZWdp
bigmdCwgaTkxNSwgX19mdW5jX18sIHZlLT5lbmdpbmUtPm5hbWUpOworCWlmIChlcnIpCisJCWdv
dG8gb3V0X3VucGluOworCisJZm9yIChuID0gMDsgbiA8IG5zaWJsaW5nOyBuKyspIHsKKwkJcmVx
dWVzdFtuXSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUodmUpOworCQlpZiAoSVNfRVJSKHJlcXVlc3Qp
KSB7CisJCQllcnIgPSBQVFJfRVJSKHJlcXVlc3QpOworCQkJbnNpYmxpbmcgPSBuOworCQkJZ290
byBvdXQ7CisJCX0KKworCQkvKiBSZXZlcnNlIG9yZGVyIGFzIGl0J3MgbW9yZSBsaWtlbHkgdG8g
YmUgdW5uYXR1cmFsICovCisJCXJlcXVlc3Rbbl0tPmV4ZWN1dGlvbl9tYXNrID0gc2libGluZ3Nb
bnNpYmxpbmcgLSBuIC0gMV0tPm1hc2s7CisKKwkJaTkxNV9yZXF1ZXN0X2dldChyZXF1ZXN0W25d
KTsKKwkJaTkxNV9yZXF1ZXN0X2FkZChyZXF1ZXN0W25dKTsKKwl9CisKKwlmb3IgKG4gPSAwOyBu
IDwgbnNpYmxpbmc7IG4rKykgeworCQlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocmVxdWVzdFtuXSwg
STkxNV9XQUlUX0xPQ0tFRCwgSFogLyAxMCkgPCAwKSB7CisJCQlwcl9lcnIoIiVzKCVzKTogd2Fp
dCBmb3IgJWxseDolbGxkIHRpbWVkIG91dFxuIiwKKwkJCSAgICAgICBfX2Z1bmNfXywgdmUtPmVu
Z2luZS0+bmFtZSwKKwkJCSAgICAgICByZXF1ZXN0W25dLT5mZW5jZS5jb250ZXh0LAorCQkJICAg
ICAgIHJlcXVlc3Rbbl0tPmZlbmNlLnNlcW5vKTsKKworCQkJR0VNX1RSQUNFKCIlcyglcykgZmFp
bGVkIGF0IHJlcXVlc3QgJWxseDolbGxkXG4iLAorCQkJCSAgX19mdW5jX18sIHZlLT5lbmdpbmUt
Pm5hbWUsCisJCQkJICByZXF1ZXN0W25dLT5mZW5jZS5jb250ZXh0LAorCQkJCSAgcmVxdWVzdFtu
XS0+ZmVuY2Uuc2Vxbm8pOworCQkJR0VNX1RSQUNFX0RVTVAoKTsKKwkJCWk5MTVfZ2VtX3NldF93
ZWRnZWQoaTkxNSk7CisJCQllcnIgPSAtRUlPOworCQkJZ290byBvdXQ7CisJCX0KKworCQlpZiAo
cmVxdWVzdFtuXS0+ZW5naW5lICE9IHNpYmxpbmdzW25zaWJsaW5nIC0gbiAtIDFdKSB7CisJCQlw
cl9lcnIoIkV4ZWN1dGVkIG9uIHdyb25nIHNpYmxpbmcgJyVzJywgZXhwZWN0ZWQgJyVzJ1xuIiwK
KwkJCSAgICAgICByZXF1ZXN0W25dLT5lbmdpbmUtPm5hbWUsCisJCQkgICAgICAgc2libGluZ3Nb
bnNpYmxpbmcgLSBuIC0gMV0tPm5hbWUpOworCQkJZXJyID0gLUVJTlZBTDsKKwkJCWdvdG8gb3V0
OworCQl9CisJfQorCisJZXJyID0gaWd0X2xpdmVfdGVzdF9lbmQoJnQpOworCWlmIChlcnIpCisJ
CWdvdG8gb3V0OworCitvdXQ6CisJaWYgKGlndF9mbHVzaF90ZXN0KGk5MTUsIEk5MTVfV0FJVF9M
T0NLRUQpKQorCQllcnIgPSAtRUlPOworCisJZm9yIChuID0gMDsgbiA8IG5zaWJsaW5nOyBuKysp
CisJCWk5MTVfcmVxdWVzdF9wdXQocmVxdWVzdFtuXSk7CisKK291dF91bnBpbjoKKwlpbnRlbF9j
b250ZXh0X3VucGluKHZlKTsKK291dF9wdXQ6CisJaW50ZWxfY29udGV4dF9wdXQodmUpOworb3V0
X2Nsb3NlOgorCWtlcm5lbF9jb250ZXh0X2Nsb3NlKGN0eCk7CisJcmV0dXJuIGVycjsKK30KKwor
c3RhdGljIGludCBsaXZlX3ZpcnR1YWxfbWFzayh2b2lkICphcmcpCit7CisJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CisJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqc2libGlu
Z3NbTUFYX0VOR0lORV9JTlNUQU5DRSArIDFdOworCXVuc2lnbmVkIGludCBjbGFzcywgaW5zdDsK
KwlpbnQgZXJyID0gMDsKKworCWlmIChVU0VTX0dVQ19TVUJNSVNTSU9OKGk5MTUpKQorCQlyZXR1
cm4gMDsKKworCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOworCisJZm9yIChj
bGFzcyA9IDA7IGNsYXNzIDw9IE1BWF9FTkdJTkVfQ0xBU1M7IGNsYXNzKyspIHsKKwkJdW5zaWdu
ZWQgaW50IG5zaWJsaW5nOworCisJCW5zaWJsaW5nID0gMDsKKwkJZm9yIChpbnN0ID0gMDsgaW5z
dCA8PSBNQVhfRU5HSU5FX0lOU1RBTkNFOyBpbnN0KyspIHsKKwkJCWlmICghaTkxNS0+ZW5naW5l
X2NsYXNzW2NsYXNzXVtpbnN0XSkKKwkJCQlicmVhazsKKworCQkJc2libGluZ3NbbnNpYmxpbmcr
K10gPSBpOTE1LT5lbmdpbmVfY2xhc3NbY2xhc3NdW2luc3RdOworCQl9CisJCWlmIChuc2libGlu
ZyA8IDIpCisJCQljb250aW51ZTsKKworCQllcnIgPSBtYXNrX3ZpcnR1YWxfZW5naW5lKGk5MTUs
IHNpYmxpbmdzLCBuc2libGluZyk7CisJCWlmIChlcnIpCisJCQlnb3RvIG91dF91bmxvY2s7CisJ
fQorCitvdXRfdW5sb2NrOgorCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7
CisJcmV0dXJuIGVycjsKK30KKwogaW50IGludGVsX2V4ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIHsKIAlzdGF0aWMgY29uc3Qgc3RydWN0IGk5
MTVfc3VidGVzdCB0ZXN0c1tdID0gewpAQCAtMTUwMiw2ICsxNjMyLDcgQEAgaW50IGludGVsX2V4
ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJ
U1VCVEVTVChsaXZlX3ByZWVtcHRfaGFuZyksCiAJCVNVQlRFU1QobGl2ZV9wcmVlbXB0X3Ntb2tl
KSwKIAkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfZW5naW5lKSwKKwkJU1VCVEVTVChsaXZlX3ZpcnR1
YWxfbWFzayksCiAJfTsKIAogCWlmICghSEFTX0VYRUNMSVNUUyhpOTE1KSkKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9yZXF1ZXN0LmMKaW5kZXggY2JlNDA5OGNkNmVjLi4zYmVjZWQ3ZGFhMTUgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCkBAIC02OTksNiArNjk5LDcgQEAgX19pOTE1X3Jl
cXVlc3RfY3JlYXRlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQogCXJxLT5i
YXRjaCA9IE5VTEw7CiAJcnEtPmNhcHR1cmVfbGlzdCA9IE5VTEw7CiAJcnEtPndhaXRib29zdCA9
IGZhbHNlOworCXJxLT5leGVjdXRpb25fbWFzayA9IEFMTF9FTkdJTkVTOwogCiAJSU5JVF9MSVNU
X0hFQUQoJnJxLT5hY3RpdmVfbGlzdCk7CiAJSU5JVF9MSVNUX0hFQUQoJnJxLT5leGVjdXRlX2Ni
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKaW5kZXggODAyNWE4OWI1OTk5Li5kN2Y5
YjIxOTQ1NjggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCkBAIC0yOCw2ICsyOCw4
IEBACiAjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLmg+CiAjaW5jbHVkZSA8bGludXgvbG9ja2Rl
cC5oPgogCisjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgiCisKICNpbmNsdWRlICJp
OTE1X2dlbS5oIgogI2luY2x1ZGUgImk5MTVfc2NoZWR1bGVyLmgiCiAjaW5jbHVkZSAiaTkxNV9z
ZWxmdGVzdC5oIgpAQCAtMTU2LDYgKzE1OCw3IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgewogCSAq
LwogCXN0cnVjdCBpOTE1X3NjaGVkX25vZGUgc2NoZWQ7CiAJc3RydWN0IGk5MTVfZGVwZW5kZW5j
eSBkZXA7CisJaW50ZWxfZW5naW5lX21hc2tfdCBleGVjdXRpb25fbWFzazsKIAogCS8qCiAJICog
QSBjb252ZW5pZW5jZSBwb2ludGVyIHRvIHRoZSBjdXJyZW50IGJyZWFkY3J1bWIgdmFsdWUgc3Rv
cmVkIGluCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lu
dGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4C312D766E
	for <lists+intel-gfx@lfdr.de>; Tue, 15 Oct 2019 14:23:20 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 476336E7F1;
	Tue, 15 Oct 2019 12:23:18 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AF3476E7CD
 for <intel-gfx@lists.freedesktop.org>; Tue, 15 Oct 2019 12:23:09 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18843895-1500050 
 for multiple; Tue, 15 Oct 2019 13:22:53 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 15 Oct 2019 13:22:47 +0100
Message-Id: <20191015122250.28884-4-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191015122250.28884-1-chris@chris-wilson.co.uk>
References: <20191015122250.28884-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 4/7] drm/i915/execlists: Cancel banned contexts
 on schedule-out
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gc2NoZWR1bGUtb3V0IChDUyBjb21wbGV0aW9uKSBvZiBhIGJhbm5lZCBjb250ZXh0LCBzY3J1
YiB0aGUgY29udGV4dAppbWFnZSBzbyB0aGF0IHdlIGRvIG5vdCByZXBsYXkgdGhlIGFjdGl2ZSBw
YXlsb2FkLiBUaGUgaW50ZW50IGlzIHRoYXQgd2UKc2tpcCBiYW5uZWQgcGF5bG9hZHMgb24gcmVx
dWVzdCBzdWJtaXNzaW9uIHNvIHRoYXQgdGhlIHRpbWVsaW5lCmFkdmFuY2VtZW50IGNvbnRpbnVl
cyBvbiBpbiB0aGUgYmFja2dyb3VuZC4gSG93ZXZlciwgaWYgd2UgYXJlIHJldHVybmluZwp0byBh
IHByZWVtcHRlZCByZXF1ZXN0LCBpOTE1X3JlcXVlc3Rfc2tpcCgpIGlzIGluZWZmZWN0aXZlIGFu
ZCBpbnN0ZWFkIHdlCm5lZWQgdG8gcGF0Y2ggdXAgdGhlIGNvbnRleHQgaW1hZ2Ugc28gdGhhdCBp
dCBjb250aW51ZXMgZnJvbSB0aGUgc3RhcnQKb2YgdGhlIG5leHQgcmVxdWVzdC4KCnYyOiBGaXh1
cCBjYW5jZWxsYXRpb24gc28gdGhhdCB3ZSBvbmx5IHNjcnViIHRoZSBwYXlsb2FkIG9mIHRoZSBh
Y3RpdmUKcmVxdWVzdCBhbmQgZG8gbm90IHNob3J0LWNpcmN1aXQgdGhlIGJyZWFkY3J1bWJzICh3
aGljaCBtaWdodCBjYXVzZQpvdGhlciBjb250ZXh0cyB0byBleGVjdXRlIG91dCBvZiBvcmRlciku
CnYzOiBHcmFtbWFyIHBhc3MKClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hy
aXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVs
LmNvbT4KUmV2aWV3ZWQtYnk6IFR2cnRrbyBVcnN1bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5j
b20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgfCAxMzQgKysr
KysrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jIHwgMzIxICsr
KysrKysrKysrKysrKysrKysrKysrKysKIDIgZmlsZXMgY2hhbmdlZCwgNDE0IGluc2VydGlvbnMo
KyksIDQxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXgg
ODA1N2Q2MTJjMjA5Li4wMTU0YTE1MWQ2YjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xy
Yy5jCkBAIC0yMzQsNiArMjM0LDkgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0
YXRlKHUzMiAqcmVnX3N0YXRlLAogCQkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lLAogCQkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX3JpbmcgKnJpbmcsCiAJCQkJ
ICAgICBib29sIGNsb3NlKTsKK3N0YXRpYyB2b2lkCitfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0
YXRlKGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCSAgICAgY29uc3Qgc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAogc3RhdGljIHZvaWQgX19jb250ZXh0X3Bpbl9h
Y3F1aXJlKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKQEAgLTI1Niw2ICsyNTksMzEgQEAg
c3RhdGljIHZvaWQgbWFya19laW8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJaTkxNV9yZXF1
ZXN0X21hcmtfY29tcGxldGUocnEpOwogfQogCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAq
YWN0aXZlX3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCit7CisJY29uc3Qgc3RydWN0
IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0OworCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKmFjdGl2ZSA9IE5VTEw7CisJc3RydWN0IGxpc3RfaGVhZCAqbGlzdDsKKworCWlm
ICghaTkxNV9yZXF1ZXN0X2lzX2FjdGl2ZShycSkpIC8qIHVud291bmQsIGJ1dCBpbmNvbXBsZXRl
ISAqLworCQlyZXR1cm4gcnE7CisKKwlyY3VfcmVhZF9sb2NrKCk7CisJbGlzdCA9ICZyY3VfZGVy
ZWZlcmVuY2UocnEtPnRpbWVsaW5lKS0+cmVxdWVzdHM7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9m
cm9tX3JldmVyc2UocnEsIGxpc3QsIGxpbmspIHsKKwkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0
ZWQocnEpKQorCQkJYnJlYWs7CisKKwkJaWYgKHJxLT5od19jb250ZXh0ICE9IGNlKQorCQkJYnJl
YWs7CisKKwkJYWN0aXZlID0gcnE7CisJfQorCXJjdV9yZWFkX3VubG9jaygpOworCisJcmV0dXJu
IGFjdGl2ZTsKK30KKwogc3RhdGljIGlubGluZSB1MzIgaW50ZWxfaHdzX3ByZWVtcHRfYWRkcmVz
cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJcmV0dXJuIChpOTE1X2dndHRf
b2Zmc2V0KGVuZ2luZS0+c3RhdHVzX3BhZ2Uudm1hKSArCkBAIC05NzcsNiArMTAwNSw2MSBAQCBz
dGF0aWMgdm9pZCBraWNrX3NpYmxpbmdzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UpCiAJCXRhc2tsZXRfc2NoZWR1bGUoJnZlLT5iYXNlLmV4ZWNsaXN0
cy50YXNrbGV0KTsKIH0KIAorc3RhdGljIHZvaWQgcmVzdG9yZV9kZWZhdWx0X3N0YXRlKHN0cnVj
dCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCQkgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKK3sKKwl1MzIgKnJlZ3MgPSBjZS0+bHJjX3JlZ19zdGF0ZTsKKworCWlmIChlbmdpbmUtPnBp
bm5lZF9kZWZhdWx0X3N0YXRlKQorCQltZW1jcHkocmVncywgLyogc2tpcCByZXN0b3JpbmcgdGhl
IHZhbmlsbGEgUFBIV1NQICovCisJCSAgICAgICBlbmdpbmUtPnBpbm5lZF9kZWZhdWx0X3N0YXRl
ICsgTFJDX1NUQVRFX1BOICogUEFHRV9TSVpFLAorCQkgICAgICAgZW5naW5lLT5jb250ZXh0X3Np
emUgLSBQQUdFX1NJWkUpOworCisJZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBl
bmdpbmUsIGNlLT5yaW5nLCBmYWxzZSk7Cit9CisKK3N0YXRpYyB2b2lkIHJlc2V0X2FjdGl2ZShz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKKwkJCSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCit7CisJc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5od19jb250ZXh0
OworCisJLyoKKwkgKiBUaGUgZXhlY3V0aW5nIGNvbnRleHQgaGFzIGJlZW4gY2FuY2VsbGVkLiBX
ZSB3YW50IHRvIHByZXZlbnQKKwkgKiBmdXJ0aGVyIGV4ZWN1dGlvbiBhbG9uZyB0aGlzIGNvbnRl
eHQgYW5kIHByb3BhZ2F0ZSB0aGUgZXJyb3Igb24KKwkgKiB0byBhbnl0aGluZyBkZXBlbmRpbmcg
b24gaXRzIHJlc3VsdHMuCisJICoKKwkgKiBJbiBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoKSwgd2Ug
YXBwbHkgdGhlIC1FSU8gYW5kIHJlbW92ZSB0aGUKKwkgKiByZXF1ZXN0cycgcGF5bG9hZHMgZm9y
IGFueSBiYW5uZWQgcmVxdWVzdHMuIEJ1dCBmaXJzdCwgd2UgbXVzdAorCSAqIHJld2luZCB0aGUg
Y29udGV4dCBiYWNrIHRvIHRoZSBzdGFydCBvZiB0aGUgaW5jb21wbGV0ZSByZXF1ZXN0IHNvCisJ
ICogdGhhdCB3ZSBkbyBub3QganVtcCBiYWNrIGludG8gdGhlIG1pZGRsZSBvZiB0aGUgYmF0Y2gu
CisJICoKKwkgKiBXZSBwcmVzZXJ2ZSB0aGUgYnJlYWRjcnVtYnMgYW5kIHNlbWFwaG9yZXMgb2Yg
dGhlIGluY29tcGxldGUKKwkgKiByZXF1ZXN0cyBzbyB0aGF0IGludGVyLXRpbWVsaW5lIGRlcGVu
ZGVuY2llcyAoaS5lIG90aGVyIHRpbWVsaW5lcykKKwkgKiByZW1haW4gY29ycmVjdGx5IG9yZGVy
ZWQuIEFuZCB3ZSBkZWZlciB0byBfX2k5MTVfcmVxdWVzdF9zdWJtaXQoKQorCSAqIHNvIHRoYXQg
YWxsIGFzeW5jaHJvbm91cyB3YWl0cyBhcmUgY29ycmVjdGx5IGhhbmRsZWQuCisJICovCisJR0VN
X1RSQUNFKCIlcyglcyk6IHsgcnE9JWxseDolbGxkIH1cbiIsCisJCSAgX19mdW5jX18sIGVuZ2lu
ZS0+bmFtZSwgcnEtPmZlbmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubyk7CisJX19jb250ZXh0
X3Bpbl9hY3F1aXJlKGNlKTsKKworCS8qIE9uIHJlc3VibWlzc2lvbiBvZiB0aGUgYWN0aXZlIHJl
cXVlc3QsIHBheWxvYWQgd2lsbCBiZSBzY3J1YmJlZCAqLworCXJxID0gYWN0aXZlX3JlcXVlc3Qo
cnEpOworCWlmIChycSkKKwkJY2UtPnJpbmctPmhlYWQgPSBpbnRlbF9yaW5nX3dyYXAoY2UtPnJp
bmcsIHJxLT5oZWFkKTsKKwllbHNlCisJCWNlLT5yaW5nLT5oZWFkID0gY2UtPnJpbmctPnRhaWw7
CisJaW50ZWxfcmluZ191cGRhdGVfc3BhY2UoY2UtPnJpbmcpOworCisJLyogU2NydWIgdGhlIGNv
bnRleHQgaW1hZ2UgdG8gcHJldmVudCByZXBsYXlpbmcgdGhlIHByZXZpb3VzIGJhdGNoICovCisJ
cmVzdG9yZV9kZWZhdWx0X3N0YXRlKGNlLCBlbmdpbmUpOworCV9fZXhlY2xpc3RzX3VwZGF0ZV9y
ZWdfc3RhdGUoY2UsIGVuZ2luZSk7CisKKwkvKiBXZSd2ZSBzd2l0Y2hlZCBhd2F5LCBzbyB0aGlz
IHNob3VsZCBiZSBhIG5vLW9wLCBidXQgaW50ZW50IG1hdHRlcnMgKi8KKwljZS0+bHJjX2Rlc2Mg
fD0gQ1RYX0RFU0NfRk9SQ0VfUkVTVE9SRTsKKworCV9fY29udGV4dF9waW5fcmVsZWFzZShjZSk7
Cit9CisKIHN0YXRpYyBpbmxpbmUgdm9pZAogX19leGVjbGlzdHNfc2NoZWR1bGVfb3V0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxLAogCQkJIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBl
bmdpbmUpCkBAIC05ODcsNiArMTA3MCw5IEBAIF9fZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAlleGVjbGlzdHNfY29udGV4dF9zdGF0dXNfY2hhbmdlKHJx
LCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX09VVCk7CiAJaW50ZWxfZ3RfcG1fcHV0KGVuZ2luZS0+
Z3QpOwogCisJaWYgKHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmVkKGNlLT5nZW1f
Y29udGV4dCkpKQorCQlyZXNldF9hY3RpdmUocnEsIGVuZ2luZSk7CisKIAkvKgogCSAqIElmIHRo
aXMgaXMgcGFydCBvZiBhIHZpcnR1YWwgZW5naW5lLCBpdHMgbmV4dCByZXF1ZXN0IG1heQogCSAq
IGhhdmUgYmVlbiBibG9ja2VkIHdhaXRpbmcgZm9yIGFjY2VzcyB0byB0aGUgYWN0aXZlIGNvbnRl
eHQuCkBAIC0xMzgxLDYgKzE0NjcsMTAgQEAgc3RhdGljIHVuc2lnbmVkIGxvbmcgYWN0aXZlX3By
ZWVtcHRfdGltZW91dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJaWYgKCFycSkK
IAkJcmV0dXJuIDA7CiAKKwkvKiBGb3JjZSBhIGZhc3QgcmVzZXQgZm9yIHRlcm1pbmF0ZWQgY29u
dGV4dHMgKGlnbm9yaW5nIHN5c2ZzISkgKi8KKwlpZiAodW5saWtlbHkoaTkxNV9nZW1fY29udGV4
dF9pc19iYW5uZWQocnEtPmdlbV9jb250ZXh0KSkpCisJCXJldHVybiAxOworCiAJcmV0dXJuIFJF
QURfT05DRShlbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dCk7CiB9CiAKQEAgLTI4MDIsMjkg
KzI4OTIsNiBAQCBzdGF0aWMgdm9pZCByZXNldF9jc2JfcG9pbnRlcnMoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogCQkJICAgICAgICZleGVjbGlzdHMtPmNzYl9zdGF0dXNbcmVzZXRf
dmFsdWVdKTsKIH0KIAotc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKmFjdGl2ZV9yZXF1ZXN0
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQotewotCWNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0
ICogY29uc3QgY2UgPSBycS0+aHdfY29udGV4dDsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICphY3Rp
dmUgPSBOVUxMOwotCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3Q7Ci0KLQlpZiAoIWk5MTVfcmVxdWVz
dF9pc19hY3RpdmUocnEpKSAvKiB1bndvdW5kLCBidXQgaW5jb21wbGV0ZSEgKi8KLQkJcmV0dXJu
IHJxOwotCi0JbGlzdCA9ICZpOTE1X3JlcXVlc3RfYWN0aXZlX3RpbWVsaW5lKHJxKS0+cmVxdWVz
dHM7Ci0JbGlzdF9mb3JfZWFjaF9lbnRyeV9mcm9tX3JldmVyc2UocnEsIGxpc3QsIGxpbmspIHsK
LQkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQotCQkJYnJlYWs7Ci0KLQkJaWYgKHJx
LT5od19jb250ZXh0ICE9IGNlKQotCQkJYnJlYWs7Ci0KLQkJYWN0aXZlID0gcnE7Ci0JfQotCi0J
cmV0dXJuIGFjdGl2ZTsKLX0KLQogc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXRfcmVnX3N0
YXRlKGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJCQkJY29uc3Qgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewpAQCAtMjg0MSw3ICsyOTA4LDYgQEAgc3RhdGljIHZv
aWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29s
IHN0YWxsZWQpCiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlz
dHMgPSAmZW5naW5lLT5leGVjbGlzdHM7CiAJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCXN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCXUzMiAqcmVnczsKIAogCW1iKCk7IC8qIHBhcmFub2lh
OiByZWFkIHRoZSBDU0IgcG9pbnRlcnMgZnJvbSBhZnRlciB0aGUgcmVzZXQgKi8KIAljbGZsdXNo
KGV4ZWNsaXN0cy0+Y3NiX3dyaXRlKTsKQEAgLTI5MjAsMTMgKzI5ODYsNyBAQCBzdGF0aWMgdm9p
ZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wg
c3RhbGxlZCkKIAkgKiB0byByZWNyZWF0ZSBpdHMgb3duIHN0YXRlLgogCSAqLwogCUdFTV9CVUdf
T04oIWludGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSk7Ci0JcmVncyA9IGNlLT5scmNfcmVnX3N0
YXRlOwotCWlmIChlbmdpbmUtPnBpbm5lZF9kZWZhdWx0X3N0YXRlKSB7Ci0JCW1lbWNweShyZWdz
LCAvKiBza2lwIHJlc3RvcmluZyB0aGUgdmFuaWxsYSBQUEhXU1AgKi8KLQkJICAgICAgIGVuZ2lu
ZS0+cGlubmVkX2RlZmF1bHRfc3RhdGUgKyBMUkNfU1RBVEVfUE4gKiBQQUdFX1NJWkUsCi0JCSAg
ICAgICBlbmdpbmUtPmNvbnRleHRfc2l6ZSAtIFBBR0VfU0laRSk7Ci0JfQotCWV4ZWNsaXN0c19p
bml0X3JlZ19zdGF0ZShyZWdzLCBjZSwgZW5naW5lLCBjZS0+cmluZywgZmFsc2UpOworCXJlc3Rv
cmVfZGVmYXVsdF9zdGF0ZShjZSwgZW5naW5lKTsKIAogb3V0X3JlcGxheToKIAlHRU1fVFJBQ0Uo
IiVzIHJlcGxheSB7aGVhZDolMDR4LCB0YWlsOiUwNHhcbiIsCkBAIC00NTYzLDE2ICs0NjIzLDgg
QEAgdm9pZCBpbnRlbF9scl9jb250ZXh0X3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSwKIAkgKiBmdXR1cmUgcmVxdWVzdCB3aWxsIGJlIGFmdGVyIHVzZXJzcGFjZSBoYXMgaGFk
IHRoZSBvcHBvcnR1bml0eQogCSAqIHRvIHJlY3JlYXRlIGl0cyBvd24gc3RhdGUuCiAJICovCi0J
aWYgKHNjcnViKSB7Ci0JCXUzMiAqcmVncyA9IGNlLT5scmNfcmVnX3N0YXRlOwotCi0JCWlmIChl
bmdpbmUtPnBpbm5lZF9kZWZhdWx0X3N0YXRlKSB7Ci0JCQltZW1jcHkocmVncywgLyogc2tpcCBy
ZXN0b3JpbmcgdGhlIHZhbmlsbGEgUFBIV1NQICovCi0JCQkgICAgICAgZW5naW5lLT5waW5uZWRf
ZGVmYXVsdF9zdGF0ZSArIExSQ19TVEFURV9QTiAqIFBBR0VfU0laRSwKLQkJCSAgICAgICBlbmdp
bmUtPmNvbnRleHRfc2l6ZSAtIFBBR0VfU0laRSk7Ci0JCX0KLQkJZXhlY2xpc3RzX2luaXRfcmVn
X3N0YXRlKHJlZ3MsIGNlLCBlbmdpbmUsIGNlLT5yaW5nLCBmYWxzZSk7Ci0JfQorCWlmIChzY3J1
YikKKwkJcmVzdG9yZV9kZWZhdWx0X3N0YXRlKGNlLCBlbmdpbmUpOwogCiAJLyogUmVydW4gdGhl
IHJlcXVlc3Q7IGl0cyBwYXlsb2FkIGhhcyBiZWVuIG5ldXRlcmVkIChpZiBndWlsdHkpLiAqLwog
CWNlLT5yaW5nLT5oZWFkID0gaGVhZDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJj
LmMKaW5kZXggZTdhODZmNjBjZjgyLi5iOWFkZTM5N2E2OTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2xyYy5jCkBAIC03LDYgKzcsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3ByaW1l
X251bWJlcnMuaD4KIAogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9wbS5oIgorI2luY2x1ZGUgImd0
L2ludGVsX2VuZ2luZV9oZWFydGJlYXQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9yZXNldC5oIgog
CiAjaW5jbHVkZSAiaTkxNV9zZWxmdGVzdC5oIgpAQCAtMTAxNiw2ICsxMDE3LDMyNSBAQCBzdGF0
aWMgaW50IGxpdmVfbm9wcmVlbXB0KHZvaWQgKmFyZykKIAlnb3RvIGVycl9jbGllbnRfYjsKIH0K
IAorc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgeworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKKwlzdHJ1Y3QgcHJlZW1wdF9jbGllbnQgYSwgYjsKK307CisKK3N0YXRpYyBpbnQg
X19jYW5jZWxfYWN0aXZlMChzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQoreworCXN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCXN0cnVjdCBpZ3RfbGl2ZV90ZXN0IHQ7CisJaW50IGVy
cjsKKworCS8qIFByZWVtcHQgY2FuY2VsIG9mIEVMU1AwICovCisJR0VNX1RSQUNFKCIlcyglcylc
biIsIF9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFtZSk7CisJaWYgKGlndF9saXZlX3Rlc3RfYmVn
aW4oJnQsIGFyZy0+ZW5naW5lLT5pOTE1LAorCQkJCV9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFt
ZSkpCisJCXJldHVybiAtRUlPOworCisJY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5h
LmN0eC0+ZmxhZ3MpOworCXJxID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5hLnNwaW4s
CisJCQkJICAgIGFyZy0+YS5jdHgsIGFyZy0+ZW5naW5lLAorCQkJCSAgICBNSV9BUkJfQ0hFQ0sp
OworCWlmIChJU19FUlIocnEpKQorCQlyZXR1cm4gUFRSX0VSUihycSk7CisKKwlpOTE1X3JlcXVl
c3RfZ2V0KHJxKTsKKwlpOTE1X3JlcXVlc3RfYWRkKHJxKTsKKwlpZiAoIWlndF93YWl0X2Zvcl9z
cGlubmVyKCZhcmctPmEuc3BpbiwgcnEpKSB7CisJCWVyciA9IC1FSU87CisJCWdvdG8gb3V0Owor
CX0KKworCWk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChhcmctPmEuY3R4KTsKKwllcnIgPSBp
bnRlbF9lbmdpbmVfcHVsc2UoYXJnLT5lbmdpbmUpOworCWlmIChlcnIpCisJCWdvdG8gb3V0Owor
CisJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDUpIDwgMCkgeworCQllcnIgPSAt
RUlPOworCQlnb3RvIG91dDsKKwl9CisKKwlpZiAocnEtPmZlbmNlLmVycm9yICE9IC1FSU8pIHsK
KwkJcHJfZXJyKCJDYW5jZWxsZWQgaW5mbGlnaHQwIHJlcXVlc3QgZGlkIG5vdCByZXBvcnQgLUVJ
T1xuIik7CisJCWVyciA9IC1FSU5WQUw7CisJCWdvdG8gb3V0OworCX0KKworb3V0OgorCWk5MTVf
cmVxdWVzdF9wdXQocnEpOworCWlmIChpZ3RfbGl2ZV90ZXN0X2VuZCgmdCkpCisJCWVyciA9IC1F
SU87CisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGludCBfX2NhbmNlbF9hY3RpdmUxKHN0cnVj
dCBsaXZlX3ByZWVtcHRfY2FuY2VsICphcmcpCit7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnFb
Ml0gPSB7fTsKKwlzdHJ1Y3QgaWd0X2xpdmVfdGVzdCB0OworCWludCBlcnI7CisKKwkvKiBQcmVl
bXB0IGNhbmNlbCBvZiBFTFNQMSAqLworCUdFTV9UUkFDRSgiJXMoJXMpXG4iLCBfX2Z1bmNfXywg
YXJnLT5lbmdpbmUtPm5hbWUpOworCWlmIChpZ3RfbGl2ZV90ZXN0X2JlZ2luKCZ0LCBhcmctPmVu
Z2luZS0+aTkxNSwKKwkJCQlfX2Z1bmNfXywgYXJnLT5lbmdpbmUtPm5hbWUpKQorCQlyZXR1cm4g
LUVJTzsKKworCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFyZy0+YS5jdHgtPmZsYWdzKTsK
KwlycVswXSA9IHNwaW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+YS5zcGluLAorCQkJCSAgICAg
ICBhcmctPmEuY3R4LCBhcmctPmVuZ2luZSwKKwkJCQkgICAgICAgTUlfTk9PUCk7IC8qIG5vIHBy
ZWVtcHRpb24gKi8KKwlpZiAoSVNfRVJSKHJxWzBdKSkKKwkJcmV0dXJuIFBUUl9FUlIocnFbMF0p
OworCisJaTkxNV9yZXF1ZXN0X2dldChycVswXSk7CisJaTkxNV9yZXF1ZXN0X2FkZChycVswXSk7
CisJaWYgKCFpZ3Rfd2FpdF9mb3Jfc3Bpbm5lcigmYXJnLT5hLnNwaW4sIHJxWzBdKSkgeworCQll
cnIgPSAtRUlPOworCQlnb3RvIG91dDsKKwl9CisKKwljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQs
ICZhcmctPmIuY3R4LT5mbGFncyk7CisJcnFbMV0gPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZh
cmctPmIuc3BpbiwKKwkJCQkgICAgICAgYXJnLT5iLmN0eCwgYXJnLT5lbmdpbmUsCisJCQkJICAg
ICAgIE1JX0FSQl9DSEVDSyk7CisJaWYgKElTX0VSUihycVsxXSkpIHsKKwkJZXJyID0gUFRSX0VS
UihycVsxXSk7CisJCWdvdG8gb3V0OworCX0KKworCWk5MTVfcmVxdWVzdF9nZXQocnFbMV0pOwor
CWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9kbWFfZmVuY2UocnFbMV0sICZycVswXS0+ZmVuY2Up
OworCWk5MTVfcmVxdWVzdF9hZGQocnFbMV0pOworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJ
aTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmVkKGFyZy0+Yi5jdHgpOworCWVyciA9IGludGVsX2Vu
Z2luZV9wdWxzZShhcmctPmVuZ2luZSk7CisJaWYgKGVycikKKwkJZ290byBvdXQ7CisKKwlpZ3Rf
c3Bpbm5lcl9lbmQoJmFyZy0+YS5zcGluKTsKKwlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocnFbMV0s
IDAsIEhaIC8gNSkgPCAwKSB7CisJCWVyciA9IC1FSU87CisJCWdvdG8gb3V0OworCX0KKworCWlm
IChycVswXS0+ZmVuY2UuZXJyb3IgIT0gMCkgeworCQlwcl9lcnIoIk5vcm1hbCBpbmZsaWdodDAg
cmVxdWVzdCBkaWQgbm90IGNvbXBsZXRlXG4iKTsKKwkJZXJyID0gLUVJTlZBTDsKKwkJZ290byBv
dXQ7CisJfQorCisJaWYgKHJxWzFdLT5mZW5jZS5lcnJvciAhPSAtRUlPKSB7CisJCXByX2Vycigi
Q2FuY2VsbGVkIGluZmxpZ2h0MSByZXF1ZXN0IGRpZCBub3QgcmVwb3J0IC1FSU9cbiIpOworCQll
cnIgPSAtRUlOVkFMOworCQlnb3RvIG91dDsKKwl9CisKK291dDoKKwlpOTE1X3JlcXVlc3RfcHV0
KHJxWzFdKTsKKwlpOTE1X3JlcXVlc3RfcHV0KHJxWzBdKTsKKwlpZiAoaWd0X2xpdmVfdGVzdF9l
bmQoJnQpKQorCQllcnIgPSAtRUlPOworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyBpbnQgX19j
YW5jZWxfcXVldWVkKHN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsICphcmcpCit7CisJc3RydWN0
IGk5MTVfcmVxdWVzdCAqcnFbM10gPSB7fTsKKwlzdHJ1Y3QgaWd0X2xpdmVfdGVzdCB0OworCWlu
dCBlcnI7CisKKwkvKiBGdWxsIEVMU1AgYW5kIG9uZSBpbiB0aGUgd2luZ3MgKi8KKwlHRU1fVFJB
Q0UoIiVzKCVzKVxuIiwgX19mdW5jX18sIGFyZy0+ZW5naW5lLT5uYW1lKTsKKwlpZiAoaWd0X2xp
dmVfdGVzdF9iZWdpbigmdCwgYXJnLT5lbmdpbmUtPmk5MTUsCisJCQkJX19mdW5jX18sIGFyZy0+
ZW5naW5lLT5uYW1lKSkKKwkJcmV0dXJuIC1FSU87CisKKwljbGVhcl9iaXQoQ09OVEVYVF9CQU5O
RUQsICZhcmctPmEuY3R4LT5mbGFncyk7CisJcnFbMF0gPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0
KCZhcmctPmEuc3BpbiwKKwkJCQkgICAgICAgYXJnLT5hLmN0eCwgYXJnLT5lbmdpbmUsCisJCQkJ
ICAgICAgIE1JX0FSQl9DSEVDSyk7CisJaWYgKElTX0VSUihycVswXSkpCisJCXJldHVybiBQVFJf
RVJSKHJxWzBdKTsKKworCWk5MTVfcmVxdWVzdF9nZXQocnFbMF0pOworCWk5MTVfcmVxdWVzdF9h
ZGQocnFbMF0pOworCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJmFyZy0+YS5zcGluLCBycVsw
XSkpIHsKKwkJZXJyID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJY2xlYXJfYml0KENPTlRF
WFRfQkFOTkVELCAmYXJnLT5iLmN0eC0+ZmxhZ3MpOworCXJxWzFdID0gaWd0X3JlcXVlc3RfYWxs
b2MoYXJnLT5iLmN0eCwgYXJnLT5lbmdpbmUpOworCWlmIChJU19FUlIocnFbMV0pKSB7CisJCWVy
ciA9IFBUUl9FUlIocnFbMV0pOworCQlnb3RvIG91dDsKKwl9CisKKwlpOTE1X3JlcXVlc3RfZ2V0
KHJxWzFdKTsKKwllcnIgPSBpOTE1X3JlcXVlc3RfYXdhaXRfZG1hX2ZlbmNlKHJxWzFdLCAmcnFb
MF0tPmZlbmNlKTsKKwlpOTE1X3JlcXVlc3RfYWRkKHJxWzFdKTsKKwlpZiAoZXJyKQorCQlnb3Rv
IG91dDsKKworCXJxWzJdID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5iLnNwaW4sCisJ
CQkJICAgICAgIGFyZy0+YS5jdHgsIGFyZy0+ZW5naW5lLAorCQkJCSAgICAgICBNSV9BUkJfQ0hF
Q0spOworCWlmIChJU19FUlIocnFbMl0pKSB7CisJCWVyciA9IFBUUl9FUlIocnFbMl0pOworCQln
b3RvIG91dDsKKwl9CisKKwlpOTE1X3JlcXVlc3RfZ2V0KHJxWzJdKTsKKwllcnIgPSBpOTE1X3Jl
cXVlc3RfYXdhaXRfZG1hX2ZlbmNlKHJxWzJdLCAmcnFbMV0tPmZlbmNlKTsKKwlpOTE1X3JlcXVl
c3RfYWRkKHJxWzJdKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dDsKKworCWk5MTVfZ2VtX2NvbnRl
eHRfc2V0X2Jhbm5lZChhcmctPmEuY3R4KTsKKwllcnIgPSBpbnRlbF9lbmdpbmVfcHVsc2UoYXJn
LT5lbmdpbmUpOworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJaWYgKGk5MTVfcmVxdWVzdF93
YWl0KHJxWzJdLCAwLCBIWiAvIDUpIDwgMCkgeworCQllcnIgPSAtRUlPOworCQlnb3RvIG91dDsK
Kwl9CisKKwlpZiAocnFbMF0tPmZlbmNlLmVycm9yICE9IC1FSU8pIHsKKwkJcHJfZXJyKCJDYW5j
ZWxsZWQgaW5mbGlnaHQwIHJlcXVlc3QgZGlkIG5vdCByZXBvcnQgLUVJT1xuIik7CisJCWVyciA9
IC1FSU5WQUw7CisJCWdvdG8gb3V0OworCX0KKworCWlmIChycVsxXS0+ZmVuY2UuZXJyb3IgIT0g
MCkgeworCQlwcl9lcnIoIk5vcm1hbCBpbmZsaWdodDEgcmVxdWVzdCBkaWQgbm90IGNvbXBsZXRl
XG4iKTsKKwkJZXJyID0gLUVJTlZBTDsKKwkJZ290byBvdXQ7CisJfQorCisJaWYgKHJxWzJdLT5m
ZW5jZS5lcnJvciAhPSAtRUlPKSB7CisJCXByX2VycigiQ2FuY2VsbGVkIHF1ZXVlZCByZXF1ZXN0
IGRpZCBub3QgcmVwb3J0IC1FSU9cbiIpOworCQllcnIgPSAtRUlOVkFMOworCQlnb3RvIG91dDsK
Kwl9CisKK291dDoKKwlpOTE1X3JlcXVlc3RfcHV0KHJxWzJdKTsKKwlpOTE1X3JlcXVlc3RfcHV0
KHJxWzFdKTsKKwlpOTE1X3JlcXVlc3RfcHV0KHJxWzBdKTsKKwlpZiAoaWd0X2xpdmVfdGVzdF9l
bmQoJnQpKQorCQllcnIgPSAtRUlPOworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyBpbnQgX19j
YW5jZWxfaG9zdGlsZShzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQoreworCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxOworCWludCBlcnI7CisKKwkvKiBQcmVlbXB0IGNhbmNlbCBub24t
cHJlZW1wdGlibGUgc3Bpbm5lciBpbiBFTFNQMCAqLworCWlmICghQ09ORklHX0RSTV9JOTE1X1BS
RUVNUFRfVElNRU9VVCkKKwkJcmV0dXJuIDA7CisKKwlHRU1fVFJBQ0UoIiVzKCVzKVxuIiwgX19m
dW5jX18sIGFyZy0+ZW5naW5lLT5uYW1lKTsKKwljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQsICZh
cmctPmEuY3R4LT5mbGFncyk7CisJcnEgPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZhcmctPmEu
c3BpbiwKKwkJCQkgICAgYXJnLT5hLmN0eCwgYXJnLT5lbmdpbmUsCisJCQkJICAgIE1JX05PT1Ap
OyAvKiBwcmVlbXB0aW9uIGRpc2FibGVkICovCisJaWYgKElTX0VSUihycSkpCisJCXJldHVybiBQ
VFJfRVJSKHJxKTsKKworCWk5MTVfcmVxdWVzdF9nZXQocnEpOworCWk5MTVfcmVxdWVzdF9hZGQo
cnEpOworCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJmFyZy0+YS5zcGluLCBycSkpIHsKKwkJ
ZXJyID0gLUVJTzsKKwkJZ290byBvdXQ7CisJfQorCisJaTkxNV9nZW1fY29udGV4dF9zZXRfYmFu
bmVkKGFyZy0+YS5jdHgpOworCWVyciA9IGludGVsX2VuZ2luZV9wdWxzZShhcmctPmVuZ2luZSk7
IC8qIGZvcmNlIHJlc2V0ICovCisJaWYgKGVycikKKwkJZ290byBvdXQ7CisKKwlpZiAoaTkxNV9y
ZXF1ZXN0X3dhaXQocnEsIDAsIEhaIC8gNSkgPCAwKSB7CisJCWVyciA9IC1FSU87CisJCWdvdG8g
b3V0OworCX0KKworCWlmIChycS0+ZmVuY2UuZXJyb3IgIT0gLUVJTykgeworCQlwcl9lcnIoIkNh
bmNlbGxlZCBpbmZsaWdodDAgcmVxdWVzdCBkaWQgbm90IHJlcG9ydCAtRUlPXG4iKTsKKwkJZXJy
ID0gLUVJTlZBTDsKKwkJZ290byBvdXQ7CisJfQorCitvdXQ6CisJaTkxNV9yZXF1ZXN0X3B1dChy
cSk7CisJaWYgKGlndF9mbHVzaF90ZXN0KGFyZy0+ZW5naW5lLT5pOTE1KSkKKwkJZXJyID0gLUVJ
TzsKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IGxpdmVfcHJlZW1wdF9jYW5jZWwodm9p
ZCAqYXJnKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gYXJnOworCXN0cnVj
dCBsaXZlX3ByZWVtcHRfY2FuY2VsIGRhdGE7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgaWQ7CisJ
aW50IGVyciA9IC1FTk9NRU07CisKKwkvKgorCSAqIFRvIGNhbmNlbCBhbiBpbmZsaWdodCBjb250
ZXh0LCB3ZSBuZWVkIHRvIGZpcnN0IHJlbW92ZSBpdCBmcm9tIHRoZQorCSAqIEdQVS4gVGhhdCBz
b3VuZHMgbGlrZSBwcmVlbXB0aW9uISBQbHVzIGEgbGl0dGxlIGJpdCBvZiBib29ra2VlcGluZy4K
KwkgKi8KKworCWlmICghSEFTX0xPR0lDQUxfUklOR19QUkVFTVBUSU9OKGk5MTUpKQorCQlyZXR1
cm4gMDsKKworCWlmIChwcmVlbXB0X2NsaWVudF9pbml0KGk5MTUsICZkYXRhLmEpKQorCQlyZXR1
cm4gLUVOT01FTTsKKwlpZiAocHJlZW1wdF9jbGllbnRfaW5pdChpOTE1LCAmZGF0YS5iKSkKKwkJ
Z290byBlcnJfY2xpZW50X2E7CisKKwlmb3JfZWFjaF9lbmdpbmUoZGF0YS5lbmdpbmUsIGk5MTUs
IGlkKSB7CisJCWlmICghaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0aW9uKGRhdGEuZW5naW5lKSkK
KwkJCWNvbnRpbnVlOworCisJCWVyciA9IF9fY2FuY2VsX2FjdGl2ZTAoJmRhdGEpOworCQlpZiAo
ZXJyKQorCQkJZ290byBlcnJfd2VkZ2VkOworCisJCWVyciA9IF9fY2FuY2VsX2FjdGl2ZTEoJmRh
dGEpOworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfd2VkZ2VkOworCisJCWVyciA9IF9fY2FuY2Vs
X3F1ZXVlZCgmZGF0YSk7CisJCWlmIChlcnIpCisJCQlnb3RvIGVycl93ZWRnZWQ7CisKKwkJZXJy
ID0gX19jYW5jZWxfaG9zdGlsZSgmZGF0YSk7CisJCWlmIChlcnIpCisJCQlnb3RvIGVycl93ZWRn
ZWQ7CisJfQorCisJZXJyID0gMDsKK2Vycl9jbGllbnRfYjoKKwlwcmVlbXB0X2NsaWVudF9maW5p
KCZkYXRhLmIpOworZXJyX2NsaWVudF9hOgorCXByZWVtcHRfY2xpZW50X2ZpbmkoJmRhdGEuYSk7
CisJcmV0dXJuIGVycjsKKworZXJyX3dlZGdlZDoKKwlHRU1fVFJBQ0VfRFVNUCgpOworCWlndF9z
cGlubmVyX2VuZCgmZGF0YS5iLnNwaW4pOworCWlndF9zcGlubmVyX2VuZCgmZGF0YS5hLnNwaW4p
OworCWludGVsX2d0X3NldF93ZWRnZWQoJmk5MTUtPmd0KTsKKwlnb3RvIGVycl9jbGllbnRfYjsK
K30KKwogc3RhdGljIGludCBsaXZlX3N1cHByZXNzX3NlbGZfcHJlZW1wdCh2b2lkICphcmcpCiB7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CkBAIC0yNTQ5LDYgKzI4Njks
NyBAQCBpbnQgaW50ZWxfZXhlY2xpc3RzX2xpdmVfc2VsZnRlc3RzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1KQogCQlTVUJURVNUKGxpdmVfcHJlZW1wdCksCiAJCVNVQlRFU1QobGl2ZV9s
YXRlX3ByZWVtcHQpLAogCQlTVUJURVNUKGxpdmVfbm9wcmVlbXB0KSwKKwkJU1VCVEVTVChsaXZl
X3ByZWVtcHRfY2FuY2VsKSwKIAkJU1VCVEVTVChsaXZlX3N1cHByZXNzX3NlbGZfcHJlZW1wdCks
CiAJCVNVQlRFU1QobGl2ZV9zdXBwcmVzc193YWl0X3ByZWVtcHQpLAogCQlTVUJURVNUKGxpdmVf
Y2hhaW5fcHJlZW1wdCksCi0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeA==

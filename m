Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3AAB6F3434
	for <lists+intel-gfx@lfdr.de>; Thu,  7 Nov 2019 17:09:14 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 77D896E4B5;
	Thu,  7 Nov 2019 16:09:12 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B128B6E4B5
 for <intel-gfx@lists.freedesktop.org>; Thu,  7 Nov 2019 16:09:10 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Nov 2019 08:09:09 -0800
X-IronPort-AV: E=Sophos;i="5.68,278,1569308400"; d="scan'208";a="196599049"
Received: from jnikula-mobl3.fi.intel.com (HELO localhost) ([10.237.66.161])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 07 Nov 2019 08:09:02 -0800
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  7 Nov 2019 18:08:53 +0200
Message-Id: <20191107160854.17991-1-jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Subject: [Intel-gfx] [PATCH v2 1/2] drm/i915/bios: store child devices in a
 list
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VXNpbmcgdGhlIGFycmF5IGlzIGdldHRpbmcgY2x1bXN5LiBNYWtlIHRoaW5ncyBhIGJpdCBtb3Jl
IGR5bmFtaWMuCgpSZW1vdmUgZWFybHkgcmV0dXJucyBvbiBub3QgaGF2aW5nIGNoaWxkIGRldmlj
ZXMgd2hlbiB0aGUgZW5kIHJlc3VsdAphZnRlciAiaXRlcmF0aW5nIiB0aGUgZW1wdHkgbGlzdCB3
b3VsZCBiZSB0aGUgc2FtZS4KCnYyOgotIHN0aWNrIHRvIHByZXZpb3VzIG5hbWluZyBvZiBjaGls
ZCBkZXZpY2VzIChWaWxsZSkKLSB1c2Uga3phbGxvYywgaGFuZGxlIGZhaWx1cmUKLSBpbml0aWFs
aXplIGxpc3QgaGVhZCBlYXJsaWVyIHRvIGtlZXAgaW50ZWxfYmlvc19kcml2ZXJfcmVtb3ZlKCkg
c2FmZQoKQ2M6IFZpbGxlIFN5cmphbGEgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgpT
aWduZWQtb2ZmLWJ5OiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFAaW50ZWwuY29tPgoKLS0tCgpU
aGUgZW5kIGdvYWw6IGFsbG93IG1vcmUgbWV0YSBpbmZvcm1hdGlvbiB0byBiZSBhZGRlZCB0byB0
aGUgbmV3CmNoaWxkX2RldmljZSBzdHJ1Y3QsIGluZGVwZW5kZW50IG9mIERESSBwb3J0IGluZm8g
YmVpbmcgdXNlZCBvciBub3Qgb24KdGhlIHBsYXRmb3JtLCBhbmQgZXZlbnR1YWxseSBtaWdyYXRl
IGRkaV9wb3J0X2luZm8gdG8gaXQgYXMgd2VsbCwKdW5pZnlpbmcgdGhlIHN0dWZmIGFjcm9zcyBw
bGF0Zm9ybXMuCgpDdXJyZW50bHkgaXQncyBub3QgZWFzaWx5IHBvc3NpYmxlIHRvIGFzc29jaWF0
ZSBmb3IgZXhhbXBsZSB0aGUgRFNDCmNvbXByZXNzaW9uIGRhdGEgdG8gdGhlIGNoaWxkIGRldmlj
ZSBmb3Igbm9uLURESSBwbGF0Zm9ybXMgb3IgZm9yIERTSQpvdXRwdXRzLiBUaGlzIGxldHMgdXMg
YWRkIHRoZSBjb21wcmVzc2lvbiBkYXRhIChwb2ludGVyKSB0byBzdHJ1Y3QKY2hpbGRfZGV2aWNl
LgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jIHwgMTIzICsr
KysrKysrKystLS0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAg
ICAgICAgIHwgICAzICstCiAyIGZpbGVzIGNoYW5nZWQsIDU4IGluc2VydGlvbnMoKyksIDY4IGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYmlvcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmMKaW5k
ZXggYzE5YjIzNGJlYmU2Li4zN2I5NDQzOTdiNzUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfYmlvcy5jCkBAIC01OCw2ICs1OCwxMiBAQAogICogdGhhdC4KICAqLwogCisv
KiBXcmFwcGVyIGZvciBWQlQgY2hpbGQgZGV2aWNlIGNvbmZpZyAqLworc3RydWN0IGRpc3BsYXlf
ZGV2aWNlX2RhdGEgeworCXN0cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnIGNoaWxkOworCXN0cnVj
dCBsaXN0X2hlYWQgbm9kZTsKK307CisKICNkZWZpbmUJU0xBVkVfQUREUjEJMHg3MAogI2RlZmlu
ZQlTTEFWRV9BRERSMgkweDcyCiAKQEAgLTQ0OSw4ICs0NTUsOSBAQCBzdGF0aWMgdm9pZAogcGFy
c2Vfc2R2b19kZXZpY2VfbWFwcGluZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IHU4IGJkYl92ZXJzaW9uKQogewogCXN0cnVjdCBzZHZvX2RldmljZV9tYXBwaW5nICptYXBwaW5n
OworCWNvbnN0IHN0cnVjdCBkaXNwbGF5X2RldmljZV9kYXRhICpkZXZkYXRhOwogCWNvbnN0IHN0
cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKLQlpbnQgaSwgY291bnQgPSAwOworCWlu
dCBjb3VudCA9IDA7CiAKIAkvKgogCSAqIE9ubHkgcGFyc2UgU0RWTyBtYXBwaW5ncyBvbiBnZW5z
IHRoYXQgY291bGQgaGF2ZSBTRFZPLiBUaGlzIGlzbid0CkBAIC00NjEsOCArNDY4LDggQEAgcGFy
c2Vfc2R2b19kZXZpY2VfbWFwcGluZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IHU4IGJkYl92ZXJzaW9uKQogCQlyZXR1cm47CiAJfQogCi0JZm9yIChpID0gMCwgY291bnQgPSAw
OyBpIDwgZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtOyBpKyspIHsKLQkJY2hpbGQgPSBkZXZf
cHJpdi0+dmJ0LmNoaWxkX2RldiArIGk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShkZXZkYXRhLCAm
ZGV2X3ByaXYtPnZidC5kaXNwbGF5X2RldmljZXMsIG5vZGUpIHsKKwkJY2hpbGQgPSAmZGV2ZGF0
YS0+Y2hpbGQ7CiAKIAkJaWYgKGNoaWxkLT5zbGF2ZV9hZGRyICE9IFNMQVZFX0FERFIxICYmCiAJ
CSAgICBjaGlsZC0+c2xhdmVfYWRkciAhPSBTTEFWRV9BRERSMikgewpAQCAtMTU3Miw4ICsxNTc5
LDcgQEAgc3RhdGljIHZvaWQgcGFyc2VfZGRpX3BvcnQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAogCiBzdGF0aWMgdm9pZCBwYXJzZV9kZGlfcG9ydHMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LCB1OCBiZGJfdmVyc2lvbikKIHsKLQljb25zdCBzdHJ1Y3QgY2hp
bGRfZGV2aWNlX2NvbmZpZyAqY2hpbGQ7Ci0JaW50IGk7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlf
ZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAKIAlpZiAoIUhBU19EREkoZGV2X3ByaXYpICYmICFJU19D
SEVSUllWSUVXKGRldl9wcml2KSkKIAkJcmV0dXJuOwpAQCAtMTU4MSwxMSArMTU4Nyw4IEBAIHN0
YXRpYyB2b2lkIHBhcnNlX2RkaV9wb3J0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsIHU4IGJkYl92ZXJzaW9uKQogCWlmIChiZGJfdmVyc2lvbiA8IDE1NSkKIAkJcmV0dXJuOwog
Ci0JZm9yIChpID0gMDsgaSA8IGRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bTsgaSsrKSB7Ci0J
CWNoaWxkID0gZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYgKyBpOwotCi0JCXBhcnNlX2RkaV9wb3J0
KGRldl9wcml2LCBjaGlsZCwgYmRiX3ZlcnNpb24pOwotCX0KKwlsaXN0X2Zvcl9lYWNoX2VudHJ5
KGRldmRhdGEsICZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcywgbm9kZSkKKwkJcGFyc2Vf
ZGRpX3BvcnQoZGV2X3ByaXYsICZkZXZkYXRhLT5jaGlsZCwgYmRiX3ZlcnNpb24pOwogfQogCiBz
dGF0aWMgdm9pZApAQCAtMTU5Myw4ICsxNTk2LDkgQEAgcGFyc2VfZ2VuZXJhbF9kZWZpbml0aW9u
cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgIGNvbnN0IHN0cnVjdCBi
ZGJfaGVhZGVyICpiZGIpCiB7CiAJY29uc3Qgc3RydWN0IGJkYl9nZW5lcmFsX2RlZmluaXRpb25z
ICpkZWZzOworCXN0cnVjdCBkaXNwbGF5X2RldmljZV9kYXRhICpkZXZkYXRhOwogCWNvbnN0IHN0
cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKLQlpbnQgaSwgY2hpbGRfZGV2aWNlX251
bSwgY291bnQ7CisJaW50IGksIGNoaWxkX2RldmljZV9udW07CiAJdTggZXhwZWN0ZWRfc2l6ZTsK
IAl1MTYgYmxvY2tfc2l6ZTsKIAlpbnQgYnVzX3BpbjsKQEAgLTE2NTAsMjYgKzE2NTQsNyBAQCBw
YXJzZV9nZW5lcmFsX2RlZmluaXRpb25zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAogCS8qIGdldCB0aGUgbnVtYmVyIG9mIGNoaWxkIGRldmljZSAqLwogCWNoaWxkX2Rldmlj
ZV9udW0gPSAoYmxvY2tfc2l6ZSAtIHNpemVvZigqZGVmcykpIC8gZGVmcy0+Y2hpbGRfZGV2X3Np
emU7Ci0JY291bnQgPSAwOwotCS8qIGdldCB0aGUgbnVtYmVyIG9mIGNoaWxkIGRldmljZSB0aGF0
IGlzIHByZXNlbnQgKi8KLQlmb3IgKGkgPSAwOyBpIDwgY2hpbGRfZGV2aWNlX251bTsgaSsrKSB7
Ci0JCWNoaWxkID0gY2hpbGRfZGV2aWNlX3B0cihkZWZzLCBpKTsKLQkJaWYgKCFjaGlsZC0+ZGV2
aWNlX3R5cGUpCi0JCQljb250aW51ZTsKLQkJY291bnQrKzsKLQl9Ci0JaWYgKCFjb3VudCkgewot
CQlEUk1fREVCVUdfS01TKCJubyBjaGlsZCBkZXYgaXMgcGFyc2VkIGZyb20gVkJUXG4iKTsKLQkJ
cmV0dXJuOwotCX0KLQlkZXZfcHJpdi0+dmJ0LmNoaWxkX2RldiA9IGtjYWxsb2MoY291bnQsIHNp
emVvZigqY2hpbGQpLCBHRlBfS0VSTkVMKTsKLQlpZiAoIWRldl9wcml2LT52YnQuY2hpbGRfZGV2
KSB7Ci0JCURSTV9ERUJVR19LTVMoIk5vIG1lbW9yeSBzcGFjZSBmb3IgY2hpbGQgZGV2aWNlXG4i
KTsKLQkJcmV0dXJuOwotCX0KIAotCWRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bSA9IGNvdW50
OwotCWNvdW50ID0gMDsKIAlmb3IgKGkgPSAwOyBpIDwgY2hpbGRfZGV2aWNlX251bTsgaSsrKSB7
CiAJCWNoaWxkID0gY2hpbGRfZGV2aWNlX3B0cihkZWZzLCBpKTsKIAkJaWYgKCFjaGlsZC0+ZGV2
aWNlX3R5cGUpCkBAIC0xNjc4LDE1ICsxNjYzLDIzIEBAIHBhcnNlX2dlbmVyYWxfZGVmaW5pdGlv
bnMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCQlEUk1fREVCVUdfS01TKCJG
b3VuZCBWQlQgY2hpbGQgZGV2aWNlIHdpdGggdHlwZSAweCV4XG4iLAogCQkJICAgICAgY2hpbGQt
PmRldmljZV90eXBlKTsKIAorCQlkZXZkYXRhID0ga3phbGxvYyhzaXplb2YoKmRldmRhdGEpLCBH
RlBfS0VSTkVMKTsKKwkJaWYgKCFkZXZkYXRhKQorCQkJYnJlYWs7CisKIAkJLyoKIAkJICogQ29w
eSBhcyBtdWNoIGFzIHdlIGtub3cgKHNpemVvZikgYW5kIGlzIGF2YWlsYWJsZQotCQkgKiAoY2hp
bGRfZGV2X3NpemUpIG9mIHRoZSBjaGlsZCBkZXZpY2UuIEFjY2Vzc2luZyB0aGUgZGF0YSBtdXN0
Ci0JCSAqIGRlcGVuZCBvbiBWQlQgdmVyc2lvbi4KKwkJICogKGNoaWxkX2Rldl9zaXplKSBvZiB0
aGUgY2hpbGQgZGV2aWNlIGNvbmZpZy4gQWNjZXNzaW5nIHRoZQorCQkgKiBkYXRhIG11c3QgZGVw
ZW5kIG9uIFZCVCB2ZXJzaW9uLgogCQkgKi8KLQkJbWVtY3B5KGRldl9wcml2LT52YnQuY2hpbGRf
ZGV2ICsgY291bnQsIGNoaWxkLAorCQltZW1jcHkoJmRldmRhdGEtPmNoaWxkLCBjaGlsZCwKIAkJ
ICAgICAgIG1pbl90KHNpemVfdCwgZGVmcy0+Y2hpbGRfZGV2X3NpemUsIHNpemVvZigqY2hpbGQp
KSk7Ci0JCWNvdW50Kys7CisKKwkJbGlzdF9hZGQoJmRldmRhdGEtPm5vZGUsICZkZXZfcHJpdi0+
dmJ0LmRpc3BsYXlfZGV2aWNlcyk7CiAJfQorCisJaWYgKGxpc3RfZW1wdHkoJmRldl9wcml2LT52
YnQuZGlzcGxheV9kZXZpY2VzKSkKKwkJRFJNX0RFQlVHX0tNUygibm8gY2hpbGQgZGV2IGlzIHBh
cnNlZCBmcm9tIFZCVFxuIik7CiB9CiAKIC8qIENvbW1vbiBkZWZhdWx0cyB3aGljaCBtYXkgYmUg
b3ZlcnJpZGRlbiBieSBWQlQuICovCkBAIC0xODM2LDYgKzE4MjksOCBAQCB2b2lkIGludGVsX2Jp
b3NfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJY29uc3Qgc3RydWN0
IGJkYl9oZWFkZXIgKmJkYjsKIAl1OCBfX2lvbWVtICpiaW9zID0gTlVMTDsKIAorCUlOSVRfTElT
VF9IRUFEKCZkZXZfcHJpdi0+dmJ0LmRpc3BsYXlfZGV2aWNlcyk7CisKIAlpZiAoIUhBU19ESVNQ
TEFZKGRldl9wcml2KSB8fCAhSU5URUxfRElTUExBWV9FTkFCTEVEKGRldl9wcml2KSkgewogCQlE
Uk1fREVCVUdfS01TKCJTa2lwcGluZyBWQlQgaW5pdCBkdWUgdG8gZGlzYWJsZWQgZGlzcGxheS5c
biIpOwogCQlyZXR1cm47CkBAIC0xODk1LDkgKzE4OTAsMTMgQEAgdm9pZCBpbnRlbF9iaW9zX2lu
aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogICovCiB2b2lkIGludGVsX2Jp
b3NfZHJpdmVyX3JlbW92ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0J
a2ZyZWUoZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYpOwotCWRldl9wcml2LT52YnQuY2hpbGRfZGV2
ID0gTlVMTDsKLQlkZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9udW0gPSAwOworCXN0cnVjdCBkaXNw
bGF5X2RldmljZV9kYXRhICpkZXZkYXRhLCAqbjsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2Fm
ZShkZXZkYXRhLCBuLCAmZGV2X3ByaXYtPnZidC5kaXNwbGF5X2RldmljZXMsIG5vZGUpIHsKKwkJ
bGlzdF9kZWwoJmRldmRhdGEtPm5vZGUpOworCQlrZnJlZShkZXZkYXRhKTsKKwl9CisKIAlrZnJl
ZShkZXZfcHJpdi0+dmJ0LnNkdm9fbHZkc192YnRfbW9kZSk7CiAJZGV2X3ByaXYtPnZidC5zZHZv
X2x2ZHNfdmJ0X21vZGUgPSBOVUxMOwogCWtmcmVlKGRldl9wcml2LT52YnQubGZwX2x2ZHNfdmJ0
X21vZGUpOwpAQCAtMTkyMSwxNyArMTkyMCwxOCBAQCB2b2lkIGludGVsX2Jpb3NfZHJpdmVyX3Jl
bW92ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAgKi8KIGJvb2wgaW50ZWxf
Ymlvc19pc190dl9wcmVzZW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsK
Kwljb25zdCBzdHJ1Y3QgZGlzcGxheV9kZXZpY2VfZGF0YSAqZGV2ZGF0YTsKIAljb25zdCBzdHJ1
Y3QgY2hpbGRfZGV2aWNlX2NvbmZpZyAqY2hpbGQ7Ci0JaW50IGk7CiAKIAlpZiAoIWRldl9wcml2
LT52YnQuaW50X3R2X3N1cHBvcnQpCiAJCXJldHVybiBmYWxzZTsKIAotCWlmICghZGV2X3ByaXYt
PnZidC5jaGlsZF9kZXZfbnVtKQorCWlmIChsaXN0X2VtcHR5KCZkZXZfcHJpdi0+dmJ0LmRpc3Bs
YXlfZGV2aWNlcykpCiAJCXJldHVybiB0cnVlOwogCi0JZm9yIChpID0gMDsgaSA8IGRldl9wcml2
LT52YnQuY2hpbGRfZGV2X251bTsgaSsrKSB7Ci0JCWNoaWxkID0gZGV2X3ByaXYtPnZidC5jaGls
ZF9kZXYgKyBpOworCWxpc3RfZm9yX2VhY2hfZW50cnkoZGV2ZGF0YSwgJmRldl9wcml2LT52YnQu
ZGlzcGxheV9kZXZpY2VzLCBub2RlKSB7CisJCWNoaWxkID0gJmRldmRhdGEtPmNoaWxkOworCiAJ
CS8qCiAJCSAqIElmIHRoZSBkZXZpY2UgdHlwZSBpcyBub3QgVFYsIGNvbnRpbnVlLgogCQkgKi8K
QEAgLTE5NjMsMTQgKzE5NjMsMTQgQEAgYm9vbCBpbnRlbF9iaW9zX2lzX3R2X3ByZXNlbnQoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogICovCiBib29sIGludGVsX2Jpb3NfaXNf
bHZkc19wcmVzZW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTggKmkyY19w
aW4pCiB7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAJY29u
c3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwotCWludCBpOwogCi0JaWYgKCFk
ZXZfcHJpdi0+dmJ0LmNoaWxkX2Rldl9udW0pCisJaWYgKGxpc3RfZW1wdHkoJmRldl9wcml2LT52
YnQuZGlzcGxheV9kZXZpY2VzKSkKIAkJcmV0dXJuIHRydWU7CiAKLQlmb3IgKGkgPSAwOyBpIDwg
ZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtOyBpKyspIHsKLQkJY2hpbGQgPSBkZXZfcHJpdi0+
dmJ0LmNoaWxkX2RldiArIGk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeShkZXZkYXRhLCAmZGV2X3By
aXYtPnZidC5kaXNwbGF5X2RldmljZXMsIG5vZGUpIHsKKwkJY2hpbGQgPSAmZGV2ZGF0YS0+Y2hp
bGQ7CiAKIAkJLyogSWYgdGhlIGRldmljZSB0eXBlIGlzIG5vdCBMRlAsIGNvbnRpbnVlLgogCQkg
KiBXZSBoYXZlIHRvIGNoZWNrIGJvdGggdGhlIG5ldyBpZGVudGlmaWVycyBhcyB3ZWxsIGFzIHRo
ZQpAQCAtMjAxMiw2ICsyMDEyLDcgQEAgYm9vbCBpbnRlbF9iaW9zX2lzX2x2ZHNfcHJlc2VudChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHU4ICppMmNfcGluKQogICovCiBib29s
IGludGVsX2Jpb3NfaXNfcG9ydF9wcmVzZW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2Rh
dGEgKmRldmRhdGE7CiAJY29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwog
CXN0YXRpYyBjb25zdCBzdHJ1Y3QgewogCQl1MTYgZHAsIGhkbWk7CkBAIC0yMDIyLDcgKzIwMjMs
NiBAQCBib29sIGludGVsX2Jpb3NfaXNfcG9ydF9wcmVzZW50KHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcgogCQlbUE9SVF9FXSA9IHsgRFZPX1BPUlRfRFBF
LCBEVk9fUE9SVF9IRE1JRSwgfSwKIAkJW1BPUlRfRl0gPSB7IERWT19QT1JUX0RQRiwgRFZPX1BP
UlRfSERNSUYsIH0sCiAJfTsKLQlpbnQgaTsKIAogCWlmIChIQVNfRERJKGRldl9wcml2KSkgewog
CQljb25zdCBzdHJ1Y3QgZGRpX3ZidF9wb3J0X2luZm8gKnBvcnRfaW5mbyA9CkBAIC0yMDM3LDEx
ICsyMDM3LDggQEAgYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfcHJlc2VudChzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVudW0gcG9ydCBwb3IKIAlpZiAoV0FSTl9PTihwb3J0ID09
IFBPUlRfQSkgfHwgcG9ydCA+PSBBUlJBWV9TSVpFKHBvcnRfbWFwcGluZykpCiAJCXJldHVybiBm
YWxzZTsKIAotCWlmICghZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtKQotCQlyZXR1cm4gZmFs
c2U7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgZGV2X3ByaXYtPnZidC5jaGlsZF9kZXZfbnVtOyBpKysp
IHsKLQkJY2hpbGQgPSBkZXZfcHJpdi0+dmJ0LmNoaWxkX2RldiArIGk7CisJbGlzdF9mb3JfZWFj
aF9lbnRyeShkZXZkYXRhLCAmZGV2X3ByaXYtPnZidC5kaXNwbGF5X2RldmljZXMsIG5vZGUpIHsK
KwkJY2hpbGQgPSAmZGV2ZGF0YS0+Y2hpbGQ7CiAKIAkJaWYgKChjaGlsZC0+ZHZvX3BvcnQgPT0g
cG9ydF9tYXBwaW5nW3BvcnRdLmRwIHx8CiAJCSAgICAgY2hpbGQtPmR2b19wb3J0ID09IHBvcnRf
bWFwcGluZ1twb3J0XS5oZG1pKSAmJgpAQCAtMjA2Miw2ICsyMDU5LDcgQEAgYm9vbCBpbnRlbF9i
aW9zX2lzX3BvcnRfcHJlc2VudChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGVu
dW0gcG9ydCBwb3IKICAqLwogYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfZWRwKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiB7CisJY29uc3Qgc3RydWN0
IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAJY29uc3Qgc3RydWN0IGNoaWxkX2Rldmlj
ZV9jb25maWcgKmNoaWxkOwogCXN0YXRpYyBjb25zdCBzaG9ydCBwb3J0X21hcHBpbmdbXSA9IHsK
IAkJW1BPUlRfQl0gPSBEVk9fUE9SVF9EUEIsCkBAIC0yMDcwLDE2ICsyMDY4LDEyIEBAIGJvb2wg
aW50ZWxfYmlvc19pc19wb3J0X2VkcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
IGVudW0gcG9ydCBwb3J0KQogCQlbUE9SVF9FXSA9IERWT19QT1JUX0RQRSwKIAkJW1BPUlRfRl0g
PSBEVk9fUE9SVF9EUEYsCiAJfTsKLQlpbnQgaTsKIAogCWlmIChIQVNfRERJKGRldl9wcml2KSkK
IAkJcmV0dXJuIGRldl9wcml2LT52YnQuZGRpX3BvcnRfaW5mb1twb3J0XS5zdXBwb3J0c19lZHA7
CiAKLQlpZiAoIWRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bSkKLQkJcmV0dXJuIGZhbHNlOwot
Ci0JZm9yIChpID0gMDsgaSA8IGRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bTsgaSsrKSB7Ci0J
CWNoaWxkID0gZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYgKyBpOworCWxpc3RfZm9yX2VhY2hfZW50
cnkoZGV2ZGF0YSwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZpY2VzLCBub2RlKSB7CisJCWNo
aWxkID0gJmRldmRhdGEtPmNoaWxkOwogCiAJCWlmIChjaGlsZC0+ZHZvX3BvcnQgPT0gcG9ydF9t
YXBwaW5nW3BvcnRdICYmCiAJCSAgICAoY2hpbGQtPmRldmljZV90eXBlICYgREVWSUNFX1RZUEVf
ZURQX0JJVFMpID09CkBAIC0yMTI4LDEzICsyMTIyLDEwIEBAIHN0YXRpYyBib29sIGNoaWxkX2Rl
dl9pc19kcF9kdWFsX21vZGUoY29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxk
LAogYm9vbCBpbnRlbF9iaW9zX2lzX3BvcnRfZHBfZHVhbF9tb2RlKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKIAkJCQkgICAgIGVudW0gcG9ydCBwb3J0KQogewotCWNvbnN0IHN0
cnVjdCBjaGlsZF9kZXZpY2VfY29uZmlnICpjaGlsZDsKLQlpbnQgaTsKKwljb25zdCBzdHJ1Y3Qg
ZGlzcGxheV9kZXZpY2VfZGF0YSAqZGV2ZGF0YTsKIAotCWZvciAoaSA9IDA7IGkgPCBkZXZfcHJp
di0+dmJ0LmNoaWxkX2Rldl9udW07IGkrKykgewotCQljaGlsZCA9IGRldl9wcml2LT52YnQuY2hp
bGRfZGV2ICsgaTsKLQotCQlpZiAoY2hpbGRfZGV2X2lzX2RwX2R1YWxfbW9kZShjaGlsZCwgcG9y
dCkpCisJbGlzdF9mb3JfZWFjaF9lbnRyeShkZXZkYXRhLCAmZGV2X3ByaXYtPnZidC5kaXNwbGF5
X2RldmljZXMsIG5vZGUpIHsKKwkJaWYgKGNoaWxkX2Rldl9pc19kcF9kdWFsX21vZGUoJmRldmRh
dGEtPmNoaWxkLCBwb3J0KSkKIAkJCXJldHVybiB0cnVlOwogCX0KIApAQCAtMjE1MSwxMiArMjE0
MiwxMiBAQCBib29sIGludGVsX2Jpb3NfaXNfcG9ydF9kcF9kdWFsX21vZGUoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAogYm9vbCBpbnRlbF9iaW9zX2lzX2RzaV9wcmVzZW50KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCSAgICAgICBlbnVtIHBvcnQgKnBv
cnQpCiB7CisJY29uc3Qgc3RydWN0IGRpc3BsYXlfZGV2aWNlX2RhdGEgKmRldmRhdGE7CiAJY29u
c3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkOwogCXU4IGR2b19wb3J0OwotCWlu
dCBpOwogCi0JZm9yIChpID0gMDsgaSA8IGRldl9wcml2LT52YnQuY2hpbGRfZGV2X251bTsgaSsr
KSB7Ci0JCWNoaWxkID0gZGV2X3ByaXYtPnZidC5jaGlsZF9kZXYgKyBpOworCWxpc3RfZm9yX2Vh
Y2hfZW50cnkoZGV2ZGF0YSwgJmRldl9wcml2LT52YnQuZGlzcGxheV9kZXZpY2VzLCBub2RlKSB7
CisJCWNoaWxkID0gJmRldmRhdGEtPmNoaWxkOwogCiAJCWlmICghKGNoaWxkLT5kZXZpY2VfdHlw
ZSAmIERFVklDRV9UWVBFX01JUElfT1VUUFVUKSkKIAkJCWNvbnRpbnVlOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmgKaW5kZXggNjdiZGZlNmRlM2ZhLi4yYzA2NzRhODZkZDggMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaApAQCAtNzIwLDggKzcyMCw3IEBAIHN0cnVjdCBpbnRlbF92YnRfZGF0YSB7CiAK
IAlpbnQgY3J0X2RkY19waW47CiAKLQlpbnQgY2hpbGRfZGV2X251bTsKLQlzdHJ1Y3QgY2hpbGRf
ZGV2aWNlX2NvbmZpZyAqY2hpbGRfZGV2OworCXN0cnVjdCBsaXN0X2hlYWQgZGlzcGxheV9kZXZp
Y2VzOwogCiAJc3RydWN0IGRkaV92YnRfcG9ydF9pbmZvIGRkaV9wb3J0X2luZm9bSTkxNV9NQVhf
UE9SVFNdOwogCXN0cnVjdCBzZHZvX2RldmljZV9tYXBwaW5nIHNkdm9fbWFwcGluZ3NbMl07Ci0t
IAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpo
dHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 76F0012996D
	for <lists+intel-gfx@lfdr.de>; Mon, 23 Dec 2019 18:33:16 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A62266E313;
	Mon, 23 Dec 2019 17:33:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 35ED36E312
 for <intel-gfx@lists.freedesktop.org>; Mon, 23 Dec 2019 17:33:06 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 23 Dec 2019 09:33:05 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,348,1571727600"; d="scan'208";a="417324850"
Received: from ldmartin1-desk.jf.intel.com ([10.165.21.151])
 by fmsmga005.fm.intel.com with ESMTP; 23 Dec 2019 09:33:05 -0800
From: Lucas De Marchi <lucas.demarchi@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 23 Dec 2019 09:32:41 -0800
Message-Id: <20191223173244.30742-8-lucas.demarchi@intel.com>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191223173244.30742-1-lucas.demarchi@intel.com>
References: <20191223173244.30742-1-lucas.demarchi@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 07/10] drm/i915: prefer 3-letter acronym for
 ironlake
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgYXJlIGN1cnJlbnRseSB1c2luZyBhIG1peCBvZiBwbGF0Zm9ybSBuYW1lIGFuZCBhY3Jvbnlt
IHRvIG5hbWUgdGhlCmZ1bmN0aW9ucy4gTGV0J3MgcHJlZmVyIHRoZSBhY3JvbnltIGFzIGl0IHNo
b3VsZCBiZSBjbGVhciB3aGF0IHBsYXRmb3JtCml0J3MgYWJvdXQgYW5kIGl0J3Mgc2hvcnRlciwg
c28gaXQgZG9lc24ndCBnbyBvdmVyIDgwIGNvbHVtbnMgaW4gYSBmZXcKY2FzZXMuIFRoaXMgY29u
dmVydHMgaXJvbmxha2UgdG8gaWxrIHdoZXJlIGFwcHJvcHJpYXRlLgoKU2lnbmVkLW9mZi1ieTog
THVjYXMgRGUgTWFyY2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+CkFja2VkLWJ5OiBKYW5p
IE5pa3VsYSA8amFuaS5uaWt1bGFAbGludXguaW50ZWwuY29tPgpBY2tlZC1ieTogVmlsbGUgU3ly
asOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2NydC5jICAgICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8ICAgMiArLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgIHwgMTY4ICsrKysrKysrKy0tLS0tLS0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggIHwgICA0ICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAgfCAgMzQgKystLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYyAgIHwgICAyICstCiAu
Li4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMgICAgfCAgIDYgKy0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgICAgICAgICB8ICAgNyArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICAgICAgIHwgICA0ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jICAgICAgICAgICAgICAgfCAgMTIgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgICAgICAgICAgICAgICB8ICAgNCArLQogMTEgZmls
ZXMgY2hhbmdlZCwgMTI1IGluc2VydGlvbnMoKyksIDEyNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NydC5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9jcnQuYwppbmRleCBiMmIxMzM2ZWNkYjYuLmNiZTU5
NzhlN2ZiNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9j
cnQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2NydC5jCkBAIC0y
NDcsNyArMjQ3LDcgQEAgc3RhdGljIHZvaWQgaHN3X3Bvc3RfZGlzYWJsZV9jcnQoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIsCiAKIAlpbnRlbF9kZGlfZGlzYWJsZV90cmFuc2NvZGVyX2Z1
bmMob2xkX2NydGNfc3RhdGUpOwogCi0JaXJvbmxha2VfcGZpdF9kaXNhYmxlKG9sZF9jcnRjX3N0
YXRlKTsKKwlpbGtfcGZpdF9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKIAogCWludGVsX2RkaV9k
aXNhYmxlX3BpcGVfY2xvY2sob2xkX2NydGNfc3RhdGUpOwogCkBAIC0zNTEsNyArMzUxLDcgQEAg
aW50ZWxfY3J0X21vZGVfdmFsaWQoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvciwKIAog
CS8qIFRoZSBGREkgcmVjZWl2ZXIgb24gTFBUIG9ubHkgc3VwcG9ydHMgOGJwYyBhbmQgb25seSBo
YXMgMiBsYW5lcy4gKi8KIAlpZiAoSEFTX1BDSF9MUFQoZGV2X3ByaXYpICYmCi0JICAgIChpcm9u
bGFrZV9nZXRfbGFuZXNfcmVxdWlyZWQobW9kZS0+Y2xvY2ssIDI3MDAwMCwgMjQpID4gMikpCisJ
ICAgIGlsa19nZXRfbGFuZXNfcmVxdWlyZWQobW9kZS0+Y2xvY2ssIDI3MDAwMCwgMjQpID4gMikK
IAkJcmV0dXJuIE1PREVfQ0xPQ0tfSElHSDsKIAogCS8qIEhTVy9CRFcgRkRJIGxpbWl0ZWQgdG8g
NGsgKi8KQEAgLTQyNyw3ICs0MjcsNyBAQCBzdGF0aWMgaW50IGhzd19jcnRfY29tcHV0ZV9jb25m
aWcoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRp
YyBib29sIGludGVsX2lyb25sYWtlX2NydF9kZXRlY3RfaG90cGx1ZyhzdHJ1Y3QgZHJtX2Nvbm5l
Y3RvciAqY29ubmVjdG9yKQorc3RhdGljIGJvb2wgaWxrX2NydF9kZXRlY3RfaG90cGx1ZyhzdHJ1
Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYg
PSBjb25uZWN0b3ItPmRldjsKIAlzdHJ1Y3QgaW50ZWxfY3J0ICpjcnQgPSBpbnRlbF9hdHRhY2hl
ZF9jcnQoY29ubmVjdG9yKTsKQEAgLTUzNSw3ICs1MzUsNyBAQCBzdGF0aWMgYm9vbCBpbnRlbF9j
cnRfZGV0ZWN0X2hvdHBsdWcoc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5lY3RvcikKIAlpbnQg
aSwgdHJpZXMgPSAwOwogCiAJaWYgKEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKQotCQlyZXR1cm4g
aW50ZWxfaXJvbmxha2VfY3J0X2RldGVjdF9ob3RwbHVnKGNvbm5lY3Rvcik7CisJCXJldHVybiBp
bGtfY3J0X2RldGVjdF9ob3RwbHVnKGNvbm5lY3Rvcik7CiAKIAlpZiAoSVNfVkFMTEVZVklFVyhk
ZXZfcHJpdikpCiAJCXJldHVybiB2YWxsZXl2aWV3X2NydF9kZXRlY3RfaG90cGx1Zyhjb25uZWN0
b3IpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGku
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggYjUyYzMx
NzIxNzU1Li42MmZhNzM4MTVkOGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kZGkuYwpAQCAtMzg5OCw3ICszODk4LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfZGRpX3Bvc3Rf
ZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA+PSA5KQogCQlza2xfc2NhbGVyX2Rpc2FibGUob2xkX2NydGNfc3RhdGUpOwogCWVs
c2UKLQkJaXJvbmxha2VfcGZpdF9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKKwkJaWxrX3BmaXRf
ZGlzYWJsZShvbGRfY3J0Y19zdGF0ZSk7CiAKIAkvKgogCSAqIFdoZW4gY2FsbGVkIGZyb20gRFAg
TVNUIGNvZGU6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5j
CmluZGV4IDQ2MTY5MWNjMmY2Mi4uNTA5M2ZkMDhmMzgxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTQ1LDggKzE0NSw4IEBAIHN0YXRpYyBj
b25zdCB1NjQgY3Vyc29yX2Zvcm1hdF9tb2RpZmllcnNbXSA9IHsKIAogc3RhdGljIHZvaWQgaTl4
eF9jcnRjX2Nsb2NrX2dldChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJCQlzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpOwotc3RhdGljIHZvaWQgaXJvbmxha2VfcGNoX2Ns
b2NrX2dldChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJCQkgICBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqcGlwZV9jb25maWcpOworc3RhdGljIHZvaWQgaWxrX3BjaF9jbG9ja19nZXQoc3Ry
dWN0IGludGVsX2NydGMgKmNydGMsCisJCQkgICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
cGlwZV9jb25maWcpOwogCiBzdGF0aWMgaW50IGludGVsX2ZyYW1lYnVmZmVyX2luaXQoc3RydWN0
IGludGVsX2ZyYW1lYnVmZmVyICppZmIsCiAJCQkJICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqb2JqLApAQCAtMTU3LDcgKzE1Nyw3IEBAIHN0YXRpYyB2b2lkIGludGVsX2NwdV90cmFuc2Nv
ZGVyX3NldF9tX24oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhCiAJCQkJ
CSBjb25zdCBzdHJ1Y3QgaW50ZWxfbGlua19tX24gKm1fbiwKIAkJCQkJIGNvbnN0IHN0cnVjdCBp
bnRlbF9saW5rX21fbiAqbTJfbjIpOwogc3RhdGljIHZvaWQgaTl4eF9zZXRfcGlwZWNvbmYoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwotc3RhdGljIHZvaWQgaXJv
bmxha2Vfc2V0X3BpcGVjb25mKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlKTsKK3N0YXRpYyB2b2lkIGlsa19zZXRfcGlwZWNvbmYoY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpOwogc3RhdGljIHZvaWQgaHN3X3NldF9waXBlY29uZihjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiBzdGF0aWMgdm9pZCBiZHdf
c2V0X3BpcGVtaXNjKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsK
IHN0YXRpYyB2b2lkIHZsdl9wcmVwYXJlX3BsbChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKQEAg
LTE2NSw3ICsxNjUsNyBAQCBzdGF0aWMgdm9pZCB2bHZfcHJlcGFyZV9wbGwoc3RydWN0IGludGVs
X2NydGMgKmNydGMsCiBzdGF0aWMgdm9pZCBjaHZfcHJlcGFyZV9wbGwoc3RydWN0IGludGVsX2Ny
dGMgKmNydGMsCiAJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29u
ZmlnKTsKIHN0YXRpYyB2b2lkIHNrbF9wZml0X2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7Ci1zdGF0aWMgdm9pZCBpcm9ubGFrZV9wZml0X2VuYWJsZShj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CitzdGF0aWMgdm9pZCBp
bGtfcGZpdF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUp
Owogc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNldF9zZXR1cF9od19zdGF0ZShzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2LAogCQkJCQkgc3RydWN0IGRybV9tb2Rlc2V0X2FjcXVpcmVfY3R4ICpjdHgpOwog
c3RhdGljIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICppbnRlbF9jcnRjX3N0YXRlX2FsbG9jKHN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKQEAgLTQwMiw3ICs0MDIsNyBAQCBzdGF0aWMgY29uc3Qg
c3RydWN0IGludGVsX2xpbWl0IHBudl9saW1pdHNfbHZkcyA9IHsKICAqIFdlIGNhbGN1bGF0ZSBj
bG9jayB1c2luZyAocmVnaXN0ZXJfdmFsdWUgKyAyKSBmb3IgTi9NMS9NMiwgc28gaGVyZQogICog
dGhlIHJhbmdlIHZhbHVlIGZvciB0aGVtIGlzIChhY3R1YWxfdmFsdWUgLSAyKS4KICAqLwotc3Rh
dGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRlbF9saW1pdHNfaXJvbmxha2VfZGFjID0g
eworc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbGtfbGltaXRzX2RhYyA9IHsKIAku
ZG90ID0geyAubWluID0gMjUwMDAsIC5tYXggPSAzNTAwMDAgfSwKIAkudmNvID0geyAubWluID0g
MTc2MDAwMCwgLm1heCA9IDM1MTAwMDAgfSwKIAkubiA9IHsgLm1pbiA9IDEsIC5tYXggPSA1IH0s
CkBAIC00MTUsNyArNDE1LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRl
bF9saW1pdHNfaXJvbmxha2VfZGFjID0gewogCQkucDJfc2xvdyA9IDEwLCAucDJfZmFzdCA9IDUg
fSwKIH07CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50ZWxfbGltaXRzX2ly
b25sYWtlX3NpbmdsZV9sdmRzID0geworc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBp
bGtfbGltaXRzX3NpbmdsZV9sdmRzID0gewogCS5kb3QgPSB7IC5taW4gPSAyNTAwMCwgLm1heCA9
IDM1MDAwMCB9LAogCS52Y28gPSB7IC5taW4gPSAxNzYwMDAwLCAubWF4ID0gMzUxMDAwMCB9LAog
CS5uID0geyAubWluID0gMSwgLm1heCA9IDMgfSwKQEAgLTQyOCw3ICs0MjgsNyBAQCBzdGF0aWMg
Y29uc3Qgc3RydWN0IGludGVsX2xpbWl0IGludGVsX2xpbWl0c19pcm9ubGFrZV9zaW5nbGVfbHZk
cyA9IHsKIAkJLnAyX3Nsb3cgPSAxNCwgLnAyX2Zhc3QgPSAxNCB9LAogfTsKIAotc3RhdGljIGNv
bnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRlbF9saW1pdHNfaXJvbmxha2VfZHVhbF9sdmRzID0g
eworc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbGtfbGltaXRzX2R1YWxfbHZkcyA9
IHsKIAkuZG90ID0geyAubWluID0gMjUwMDAsIC5tYXggPSAzNTAwMDAgfSwKIAkudmNvID0geyAu
bWluID0gMTc2MDAwMCwgLm1heCA9IDM1MTAwMDAgfSwKIAkubiA9IHsgLm1pbiA9IDEsIC5tYXgg
PSAzIH0sCkBAIC00NDIsNyArNDQyLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1p
dCBpbnRlbF9saW1pdHNfaXJvbmxha2VfZHVhbF9sdmRzID0gewogfTsKIAogLyogTFZEUyAxMDBt
aHogcmVmY2xrIGxpbWl0cy4gKi8KLXN0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfbGltaXQgaW50
ZWxfbGltaXRzX2lyb25sYWtlX3NpbmdsZV9sdmRzXzEwMG0gPSB7CitzdGF0aWMgY29uc3Qgc3Ry
dWN0IGludGVsX2xpbWl0IGlsa19saW1pdHNfc2luZ2xlX2x2ZHNfMTAwbSA9IHsKIAkuZG90ID0g
eyAubWluID0gMjUwMDAsIC5tYXggPSAzNTAwMDAgfSwKIAkudmNvID0geyAubWluID0gMTc2MDAw
MCwgLm1heCA9IDM1MTAwMDAgfSwKIAkubiA9IHsgLm1pbiA9IDEsIC5tYXggPSAyIH0sCkBAIC00
NTUsNyArNDU1LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRlbF9saW1p
dHNfaXJvbmxha2Vfc2luZ2xlX2x2ZHNfMTAwbSA9IHsKIAkJLnAyX3Nsb3cgPSAxNCwgLnAyX2Zh
c3QgPSAxNCB9LAogfTsKIAotc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF9saW1pdCBpbnRlbF9s
aW1pdHNfaXJvbmxha2VfZHVhbF9sdmRzXzEwMG0gPSB7CitzdGF0aWMgY29uc3Qgc3RydWN0IGlu
dGVsX2xpbWl0IGlsa19saW1pdHNfZHVhbF9sdmRzXzEwMG0gPSB7CiAJLmRvdCA9IHsgLm1pbiA9
IDI1MDAwLCAubWF4ID0gMzUwMDAwIH0sCiAJLnZjbyA9IHsgLm1pbiA9IDE3NjAwMDAsIC5tYXgg
PSAzNTEwMDAwIH0sCiAJLm4gPSB7IC5taW4gPSAxLCAubWF4ID0gMyB9LApAQCAtMTYzNyw3ICsx
NjM3LDcgQEAgdm9pZCB2bHZfd2FpdF9wb3J0X3JlYWR5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIAkJICAgICBJOTE1X1JFQUQoZHBsbF9yZWcpICYgcG9ydF9tYXNrLCBleHBl
Y3RlZF9tYXNrKTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfZW5hYmxlX3BjaF90cmFuc2Nv
ZGVyKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQorc3RhdGljIHZv
aWQgaWxrX2VuYWJsZV9wY2hfdHJhbnNjb2Rlcihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2Ny
dGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKQEAgLTE3MzUsOCArMTczNSw4IEBAIHN0
YXRpYyB2b2lkIGxwdF9lbmFibGVfcGNoX3RyYW5zY29kZXIoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LAogCQlEUk1fRVJST1IoIkZhaWxlZCB0byBlbmFibGUgUENIIHRyYW5zY29k
ZXJcbiIpOwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9kaXNhYmxlX3BjaF90cmFuc2NvZGVy
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkJICAgIGVudW0gcGlwZSBw
aXBlKQorc3RhdGljIHZvaWQgaWxrX2Rpc2FibGVfcGNoX3RyYW5zY29kZXIoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgICAgICBlbnVtIHBpcGUgcGlwZSkKIHsKIAlp
OTE1X3JlZ190IHJlZzsKIAl1MzIgdmFsOwpAQCAtNDg2OSw4ICs0ODY5LDggQEAgc3RhdGljIHZv
aWQgaW50ZWxfZmRpX25vcm1hbF90cmFpbihzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykKIH0KIAog
LyogVGhlIEZESSBsaW5rIHRyYWluaW5nIGZ1bmN0aW9ucyBmb3IgSUxLL0liZXhwZWFrLiAqLwot
c3RhdGljIHZvaWQgaXJvbmxha2VfZmRpX2xpbmtfdHJhaW4oc3RydWN0IGludGVsX2NydGMgKmNy
dGMsCi0JCQkJICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQor
c3RhdGljIHZvaWQgaWxrX2ZkaV9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAor
CQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewog
CXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRjLT5iYXNlLmRldjsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CkBAIC01MjIyLDcgKzUyMjIsNyBA
QCBzdGF0aWMgdm9pZCBpdmJfbWFudWFsX2ZkaV9saW5rX3RyYWluKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogCURSTV9ERUJVR19LTVMoIkZESSB0cmFpbiBkb25lLlxuIik7CiB9CiAKLXN0YXRp
YyB2b2lkIGlyb25sYWtlX2ZkaV9wbGxfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKQorc3RhdGljIHZvaWQgaWxrX2ZkaV9wbGxfZW5hYmxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRj
ICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoaW50ZWxfY3J0Yy0+YmFz
ZS5kZXYpOwpAQCAtNTI1OSw3ICs1MjU5LDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfZmRpX3Bs
bF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJfQog
fQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9mZGlfcGxsX2Rpc2FibGUoc3RydWN0IGludGVsX2Ny
dGMgKmludGVsX2NydGMpCitzdGF0aWMgdm9pZCBpbGtfZmRpX3BsbF9kaXNhYmxlKHN0cnVjdCBp
bnRlbF9jcnRjICppbnRlbF9jcnRjKQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBpbnRl
bF9jcnRjLT5iYXNlLmRldjsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGRldik7CkBAIC01Mjg5LDcgKzUyODksNyBAQCBzdGF0aWMgdm9pZCBpcm9ubGFrZV9m
ZGlfcGxsX2Rpc2FibGUoc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMpCiAJdWRlbGF5KDEw
MCk7CiB9CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2ZkaV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjKQorc3RhdGljIHZvaWQgaWxrX2ZkaV9kaXNhYmxlKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
Y3J0Yy0+YmFzZS5kZXYpOwogCWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKQEAgLTU0OTYs
OCArNTQ5Niw4IEBAIGludCBscHRfZ2V0X2ljbGtpcChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiAJCQkJIGRlc2lyZWRfZGl2aXNvciA8PCBhdXhkaXYpOwogfQogCi1zdGF0aWMg
dm9pZCBpcm9ubGFrZV9wY2hfdHJhbnNjb2Rlcl9zZXRfdGltaW5ncyhjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKLQkJCQkJCWVudW0gcGlwZSBwY2hfdHJhbnNjb2Rl
cikKK3N0YXRpYyB2b2lkIGlsa19wY2hfdHJhbnNjb2Rlcl9zZXRfdGltaW5ncyhjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKKwkJCQkJICAgZW51bSBwaXBlIHBjaF90
cmFuc2NvZGVyKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0Yyhj
cnRjX3N0YXRlLT51YXBpLmNydGMpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwpAQCAtNTYwMSw4ICs1NjAxLDggQEAgaW50ZWxf
Z2V0X2NydGNfbmV3X2VuY29kZXIoY29uc3Qgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCiAgKiAgIC0gRFAgdHJhbnNjb2RpbmcgYml0cwogICogICAtIHRyYW5zY29kZXIKICAqLwot
c3RhdGljIHZvaWQgaXJvbmxha2VfcGNoX2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfYXRvbWlj
X3N0YXRlICpzdGF0ZSwKLQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSkKK3N0YXRpYyB2b2lkIGlsa19wY2hfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlLAorCQkJICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNy
dGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMtPmJh
c2UuZGV2OwpAQCAtNTY1MCw3ICs1NjUwLDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfcGNoX2Vu
YWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAogCS8qIHNldCB0
cmFuc2NvZGVyIHRpbWluZywgcGFuZWwgbXVzdCBhbGxvdyBpdCAqLwogCWFzc2VydF9wYW5lbF91
bmxvY2tlZChkZXZfcHJpdiwgcGlwZSk7Ci0JaXJvbmxha2VfcGNoX3RyYW5zY29kZXJfc2V0X3Rp
bWluZ3MoY3J0Y19zdGF0ZSwgcGlwZSk7CisJaWxrX3BjaF90cmFuc2NvZGVyX3NldF90aW1pbmdz
KGNydGNfc3RhdGUsIHBpcGUpOwogCiAJaW50ZWxfZmRpX25vcm1hbF90cmFpbihjcnRjKTsKIApA
QCAtNTY4Miw3ICs1NjgyLDcgQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfcGNoX2VuYWJsZShjb25z
dCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJSTkxNV9XUklURShyZWcsIHRl
bXApOwogCX0KIAotCWlyb25sYWtlX2VuYWJsZV9wY2hfdHJhbnNjb2RlcihjcnRjX3N0YXRlKTsK
KwlpbGtfZW5hYmxlX3BjaF90cmFuc2NvZGVyKGNydGNfc3RhdGUpOwogfQogCiBzdGF0aWMgdm9p
ZCBscHRfcGNoX2VuYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwK
QEAgLTU2OTcsNyArNTY5Nyw3IEBAIHN0YXRpYyB2b2lkIGxwdF9wY2hfZW5hYmxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCWxwdF9wcm9ncmFtX2ljbGtpcChjcnRj
X3N0YXRlKTsKIAogCS8qIFNldCB0cmFuc2NvZGVyIHRpbWluZy4gKi8KLQlpcm9ubGFrZV9wY2hf
dHJhbnNjb2Rlcl9zZXRfdGltaW5ncyhjcnRjX3N0YXRlLCBQSVBFX0EpOworCWlsa19wY2hfdHJh
bnNjb2Rlcl9zZXRfdGltaW5ncyhjcnRjX3N0YXRlLCBQSVBFX0EpOwogCiAJbHB0X2VuYWJsZV9w
Y2hfdHJhbnNjb2RlcihkZXZfcHJpdiwgY3B1X3RyYW5zY29kZXIpOwogfQpAQCAtNjA0Nyw3ICs2
MDQ3LDcgQEAgc3RhdGljIHZvaWQgc2tsX3BmaXRfZW5hYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCX0KIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfcGZp
dF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCitzdGF0
aWMgdm9pZCBpbGtfcGZpdF9lbmFibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUpCiB7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNy
dGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC02NjQzLDggKzY2NDMsOCBAQCBzdGF0aWMg
dm9pZCBpbnRlbF9kaXNhYmxlX3ByaW1hcnlfcGxhbmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdAogCXBsYW5lLT5kaXNhYmxlX3BsYW5lKHBsYW5lLCBjcnRjX3N0YXRl
KTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUsCi0JCQkJIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKQorc3RhdGlj
IHZvaWQgaWxrX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAor
CQkJICAgIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKQogewogCWNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSA9CiAJCWludGVsX2F0b21pY19nZXRfbmV3X2NydGNf
c3RhdGUoc3RhdGUsIGNydGMpOwpAQCAtNjY4MCw3ICs2NjgwLDcgQEAgc3RhdGljIHZvaWQgaXJv
bmxha2VfY3J0Y19lbmFibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCWlu
dGVsX2NwdV90cmFuc2NvZGVyX3NldF9tX24obmV3X2NydGNfc3RhdGUsCiAJCQkJCSAgICAgJm5l
d19jcnRjX3N0YXRlLT5mZGlfbV9uLCBOVUxMKTsKIAotCWlyb25sYWtlX3NldF9waXBlY29uZihu
ZXdfY3J0Y19zdGF0ZSk7CisJaWxrX3NldF9waXBlY29uZihuZXdfY3J0Y19zdGF0ZSk7CiAKIAlj
cnRjLT5hY3RpdmUgPSB0cnVlOwogCkBAIC02NjkwLDEzICs2NjkwLDEzIEBAIHN0YXRpYyB2b2lk
IGlyb25sYWtlX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAog
CQkvKiBOb3RlOiBGREkgUExMIGVuYWJsaW5nIF9tdXN0XyBiZSBkb25lIGJlZm9yZSB3ZSBlbmFi
bGUgdGhlCiAJCSAqIGNwdSBwaXBlcywgaGVuY2UgdGhpcyBpcyBzZXBhcmF0ZSBmcm9tIGFsbCB0
aGUgb3RoZXIgZmRpL3BjaAogCQkgKiBlbmFibGluZy4gKi8KLQkJaXJvbmxha2VfZmRpX3BsbF9l
bmFibGUobmV3X2NydGNfc3RhdGUpOworCQlpbGtfZmRpX3BsbF9lbmFibGUobmV3X2NydGNfc3Rh
dGUpOwogCX0gZWxzZSB7CiAJCWFzc2VydF9mZGlfdHhfZGlzYWJsZWQoZGV2X3ByaXYsIHBpcGUp
OwogCQlhc3NlcnRfZmRpX3J4X2Rpc2FibGVkKGRldl9wcml2LCBwaXBlKTsKIAl9CiAKLQlpcm9u
bGFrZV9wZml0X2VuYWJsZShuZXdfY3J0Y19zdGF0ZSk7CisJaWxrX3BmaXRfZW5hYmxlKG5ld19j
cnRjX3N0YXRlKTsKIAogCS8qCiAJICogT24gSUxLKyBMVVQgbXVzdCBiZSBsb2FkZWQgYmVmb3Jl
IHRoZSBwaXBlIGlzIHJ1bm5pbmcgYnV0IHdpdGgKQEAgLTY3MTIsNyArNjcxMiw3IEBAIHN0YXRp
YyB2b2lkIGlyb25sYWtlX2NydGNfZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlLAogCWludGVsX2VuYWJsZV9waXBlKG5ld19jcnRjX3N0YXRlKTsKIAogCWlmIChuZXdfY3J0
Y19zdGF0ZS0+aGFzX3BjaF9lbmNvZGVyKQotCQlpcm9ubGFrZV9wY2hfZW5hYmxlKHN0YXRlLCBu
ZXdfY3J0Y19zdGF0ZSk7CisJCWlsa19wY2hfZW5hYmxlKHN0YXRlLCBuZXdfY3J0Y19zdGF0ZSk7
CiAKIAlpbnRlbF9jcnRjX3ZibGFua19vbihuZXdfY3J0Y19zdGF0ZSk7CiAKQEAgLTY4NDYsNyAr
Njg0Niw3IEBAIHN0YXRpYyB2b2lkIGhzd19jcnRjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfYXRvbWlj
X3N0YXRlICpzdGF0ZSwKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQlza2xfcGZp
dF9lbmFibGUobmV3X2NydGNfc3RhdGUpOwogCWVsc2UKLQkJaXJvbmxha2VfcGZpdF9lbmFibGUo
bmV3X2NydGNfc3RhdGUpOworCQlpbGtfcGZpdF9lbmFibGUobmV3X2NydGNfc3RhdGUpOwogCiAJ
LyoKIAkgKiBPbiBJTEsrIExVVCBtdXN0IGJlIGxvYWRlZCBiZWZvcmUgdGhlIHBpcGUgaXMgcnVu
bmluZyBidXQgd2l0aApAQCAtNjg5NSw3ICs2ODk1LDcgQEAgc3RhdGljIHZvaWQgaHN3X2NydGNf
ZW5hYmxlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCX0KIH0KIAotdm9pZCBp
cm9ubGFrZV9wZml0X2Rpc2FibGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9j
cnRjX3N0YXRlKQordm9pZCBpbGtfcGZpdF9kaXNhYmxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpvbGRfY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRv
X2ludGVsX2NydGMob2xkX2NydGNfc3RhdGUtPnVhcGkuY3J0Yyk7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CkBAIC02OTEwLDgg
KzY5MTAsOCBAQCB2b2lkIGlyb25sYWtlX3BmaXRfZGlzYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUpCiAJfQogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFr
ZV9jcnRjX2Rpc2FibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCi0JCQkJICBz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykKK3N0YXRpYyB2b2lkIGlsa19jcnRjX2Rpc2FibGUoc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkgICAgIHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjKQogewogCWNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0
ZSA9CiAJCWludGVsX2F0b21pY19nZXRfb2xkX2NydGNfc3RhdGUoc3RhdGUsIGNydGMpOwpAQCAt
NjkzMiwxNSArNjkzMiwxNSBAQCBzdGF0aWMgdm9pZCBpcm9ubGFrZV9jcnRjX2Rpc2FibGUoc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAKIAlpbnRlbF9kaXNhYmxlX3BpcGUob2xk
X2NydGNfc3RhdGUpOwogCi0JaXJvbmxha2VfcGZpdF9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsK
KwlpbGtfcGZpdF9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKIAogCWlmIChvbGRfY3J0Y19zdGF0
ZS0+aGFzX3BjaF9lbmNvZGVyKQotCQlpcm9ubGFrZV9mZGlfZGlzYWJsZShjcnRjKTsKKwkJaWxr
X2ZkaV9kaXNhYmxlKGNydGMpOwogCiAJaW50ZWxfZW5jb2RlcnNfcG9zdF9kaXNhYmxlKHN0YXRl
LCBjcnRjKTsKIAogCWlmIChvbGRfY3J0Y19zdGF0ZS0+aGFzX3BjaF9lbmNvZGVyKSB7Ci0JCWly
b25sYWtlX2Rpc2FibGVfcGNoX3RyYW5zY29kZXIoZGV2X3ByaXYsIHBpcGUpOworCQlpbGtfZGlz
YWJsZV9wY2hfdHJhbnNjb2RlcihkZXZfcHJpdiwgcGlwZSk7CiAKIAkJaWYgKEhBU19QQ0hfQ1BU
KGRldl9wcml2KSkgewogCQkJaTkxNV9yZWdfdCByZWc7CkBAIC02OTYwLDcgKzY5NjAsNyBAQCBz
dGF0aWMgdm9pZCBpcm9ubGFrZV9jcnRjX2Rpc2FibGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUsCiAJCQlJOTE1X1dSSVRFKFBDSF9EUExMX1NFTCwgdGVtcCk7CiAJCX0KIAotCQlp
cm9ubGFrZV9mZGlfcGxsX2Rpc2FibGUoY3J0Yyk7CisJCWlsa19mZGlfcGxsX2Rpc2FibGUoY3J0
Yyk7CiAJfQogCiAJaW50ZWxfc2V0X2NwdV9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhkZXZfcHJp
diwgcGlwZSwgdHJ1ZSk7CkBAIC03NTA1LDggKzc1MDUsOCBAQCBzdGF0aWMgaW50IHBpcGVfcmVx
dWlyZWRfZmRpX2xhbmVzKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogCXJl
dHVybiAwOwogfQogCi1zdGF0aWMgaW50IGlyb25sYWtlX2NoZWNrX2ZkaV9sYW5lcyhzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LCBlbnVtIHBpcGUgcGlwZSwKLQkJCQkgICAgIHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpwaXBlX2NvbmZpZykKK3N0YXRpYyBpbnQgaWxrX2NoZWNrX2ZkaV9sYW5lcyhz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2LCBlbnVtIHBpcGUgcGlwZSwKKwkJCSAgICAgICBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCXN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICpz
dGF0ZSA9IHBpcGVfY29uZmlnLT51YXBpLnN0YXRlOwpAQCAtNzU3OCw4ICs3NTc4LDggQEAgc3Rh
dGljIGludCBpcm9ubGFrZV9jaGVja19mZGlfbGFuZXMoc3RydWN0IGRybV9kZXZpY2UgKmRldiwg
ZW51bSBwaXBlIHBpcGUsCiB9CiAKICNkZWZpbmUgUkVUUlkgMQotc3RhdGljIGludCBpcm9ubGFr
ZV9mZGlfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMsCi0JCQkJ
ICAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZykKK3N0YXRpYyBpbnQg
aWxrX2ZkaV9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqaW50ZWxfY3J0YywKKwkJ
CQkgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBlX2NvbmZpZykKIHsKIAlzdHJ1Y3QgZHJt
X2RldmljZSAqZGV2ID0gaW50ZWxfY3J0Yy0+YmFzZS5kZXY7CiAJY29uc3Qgc3RydWN0IGRybV9k
aXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmcGlwZV9jb25maWctPmh3LmFkanVzdGVkX21v
ZGU7CkBAIC03NTk4LDE1ICs3NTk4LDE1IEBAIHN0YXRpYyBpbnQgaXJvbmxha2VfZmRpX2NvbXB1
dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjLAogCiAJZmRpX2RvdGNsb2Nr
ID0gYWRqdXN0ZWRfbW9kZS0+Y3J0Y19jbG9jazsKIAotCWxhbmUgPSBpcm9ubGFrZV9nZXRfbGFu
ZXNfcmVxdWlyZWQoZmRpX2RvdGNsb2NrLCBsaW5rX2J3LAotCQkJCQkgICBwaXBlX2NvbmZpZy0+
cGlwZV9icHApOworCWxhbmUgPSBpbGtfZ2V0X2xhbmVzX3JlcXVpcmVkKGZkaV9kb3RjbG9jaywg
bGlua19idywKKwkJCQkgICAgICBwaXBlX2NvbmZpZy0+cGlwZV9icHApOwogCiAJcGlwZV9jb25m
aWctPmZkaV9sYW5lcyA9IGxhbmU7CiAKIAlpbnRlbF9saW5rX2NvbXB1dGVfbV9uKHBpcGVfY29u
ZmlnLT5waXBlX2JwcCwgbGFuZSwgZmRpX2RvdGNsb2NrLAogCQkJICAgICAgIGxpbmtfYncsICZw
aXBlX2NvbmZpZy0+ZmRpX21fbiwgZmFsc2UsIGZhbHNlKTsKIAotCXJldCA9IGlyb25sYWtlX2No
ZWNrX2ZkaV9sYW5lcyhkZXYsIGludGVsX2NydGMtPnBpcGUsIHBpcGVfY29uZmlnKTsKKwlyZXQg
PSBpbGtfY2hlY2tfZmRpX2xhbmVzKGRldiwgaW50ZWxfY3J0Yy0+cGlwZSwgcGlwZV9jb25maWcp
OwogCWlmIChyZXQgPT0gLUVERUFETEspCiAJCXJldHVybiByZXQ7CiAKQEAgLTc4MTIsNyArNzgx
Miw3IEBAIHN0YXRpYyBpbnQgaW50ZWxfY3J0Y19jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxf
Y3J0YyAqY3J0YywKIAlpbnRlbF9jcnRjX2NvbXB1dGVfcGl4ZWxfcmF0ZShwaXBlX2NvbmZpZyk7
CiAKIAlpZiAocGlwZV9jb25maWctPmhhc19wY2hfZW5jb2RlcikKLQkJcmV0dXJuIGlyb25sYWtl
X2ZkaV9jb21wdXRlX2NvbmZpZyhjcnRjLCBwaXBlX2NvbmZpZyk7CisJCXJldHVybiBpbGtfZmRp
X2NvbXB1dGVfY29uZmlnKGNydGMsIHBpcGVfY29uZmlnKTsKIAogCXJldHVybiAwOwogfQpAQCAt
OTIyNCw3ICs5MjI0LDcgQEAgc3RhdGljIGJvb2wgaTl4eF9nZXRfcGlwZV9jb25maWcoc3RydWN0
IGludGVsX2NydGMgKmNydGMsCiAJcmV0dXJuIHJldDsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxh
a2VfaW5pdF9wY2hfcmVmY2xrKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0
YXRpYyB2b2lkIGlsa19pbml0X3BjaF9yZWZjbGsoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2KQogewogCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCWludCBpOwpAQCAt
OTcyMiwxMiArOTcyMiwxMiBAQCBzdGF0aWMgdm9pZCBscHRfaW5pdF9wY2hfcmVmY2xrKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHZvaWQgaW50ZWxfaW5pdF9wY2hfcmVmY2xr
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKIAlpZiAoSEFTX1BDSF9JQlgo
ZGV2X3ByaXYpIHx8IEhBU19QQ0hfQ1BUKGRldl9wcml2KSkKLQkJaXJvbmxha2VfaW5pdF9wY2hf
cmVmY2xrKGRldl9wcml2KTsKKwkJaWxrX2luaXRfcGNoX3JlZmNsayhkZXZfcHJpdik7CiAJZWxz
ZSBpZiAoSEFTX1BDSF9MUFQoZGV2X3ByaXYpKQogCQlscHRfaW5pdF9wY2hfcmVmY2xrKGRldl9w
cml2KTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2Vfc2V0X3BpcGVjb25mKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQorc3RhdGljIHZvaWQgaWxrX3NldF9waXBl
Y29uZihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRj
KTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJh
c2UuZGV2KTsKQEAgLTk4NzEsNyArOTg3MSw3IEBAIGludCBiZHdfZ2V0X3BpcGVtaXNjX2JwcChz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YykKIAl9CiB9CiAKLWludCBpcm9ubGFrZV9nZXRfbGFuZXNf
cmVxdWlyZWQoaW50IHRhcmdldF9jbG9jaywgaW50IGxpbmtfYncsIGludCBicHApCitpbnQgaWxr
X2dldF9sYW5lc19yZXF1aXJlZChpbnQgdGFyZ2V0X2Nsb2NrLCBpbnQgbGlua19idywgaW50IGJw
cCkKIHsKIAkvKgogCSAqIEFjY291bnQgZm9yIHNwcmVhZCBzcGVjdHJ1bSB0byBhdm9pZApAQCAt
OTg4MiwxNCArOTg4MiwxNCBAQCBpbnQgaXJvbmxha2VfZ2V0X2xhbmVzX3JlcXVpcmVkKGludCB0
YXJnZXRfY2xvY2ssIGludCBsaW5rX2J3LCBpbnQgYnBwKQogCXJldHVybiBESVZfUk9VTkRfVVAo
YnBzLCBsaW5rX2J3ICogOCk7CiB9CiAKLXN0YXRpYyBib29sIGlyb25sYWtlX25lZWRzX2ZiX2Ni
X3R1bmUoc3RydWN0IGRwbGwgKmRwbGwsIGludCBmYWN0b3IpCitzdGF0aWMgYm9vbCBpbGtfbmVl
ZHNfZmJfY2JfdHVuZShzdHJ1Y3QgZHBsbCAqZHBsbCwgaW50IGZhY3RvcikKIHsKIAlyZXR1cm4g
aTl4eF9kcGxsX2NvbXB1dGVfbShkcGxsKSA8IGZhY3RvciAqIGRwbGwtPm47CiB9CiAKLXN0YXRp
YyB2b2lkIGlyb25sYWtlX2NvbXB1dGVfZHBsbChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJ
CQkgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAotCQkJCSAgc3RydWN0IGRw
bGwgKnJlZHVjZWRfY2xvY2spCitzdGF0aWMgdm9pZCBpbGtfY29tcHV0ZV9kcGxsKHN0cnVjdCBp
bnRlbF9jcnRjICpjcnRjLAorCQkJICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSwKKwkJCSAgICAgc3RydWN0IGRwbGwgKnJlZHVjZWRfY2xvY2spCiB7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CiAJdTMy
IGRwbGwsIGZwLCBmcDI7CkBAIC05OTA5LDcgKzk5MDksNyBAQCBzdGF0aWMgdm9pZCBpcm9ubGFr
ZV9jb21wdXRlX2RwbGwoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAKIAlmcCA9IGk5eHhfZHBs
bF9jb21wdXRlX2ZwKCZjcnRjX3N0YXRlLT5kcGxsKTsKIAotCWlmIChpcm9ubGFrZV9uZWVkc19m
Yl9jYl90dW5lKCZjcnRjX3N0YXRlLT5kcGxsLCBmYWN0b3IpKQorCWlmIChpbGtfbmVlZHNfZmJf
Y2JfdHVuZSgmY3J0Y19zdGF0ZS0+ZHBsbCwgZmFjdG9yKSkKIAkJZnAgfD0gRlBfQ0JfVFVORTsK
IAogCWlmIChyZWR1Y2VkX2Nsb2NrKSB7CkBAIC05OTg5LDggKzk5ODksOCBAQCBzdGF0aWMgdm9p
ZCBpcm9ubGFrZV9jb21wdXRlX2RwbGwoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJY3J0Y19z
dGF0ZS0+ZHBsbF9od19zdGF0ZS5mcDEgPSBmcDI7CiB9CiAKLXN0YXRpYyBpbnQgaXJvbmxha2Vf
Y3J0Y19jb21wdXRlX2Nsb2NrKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAotCQkJCSAgICAgICBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3N0YXRpYyBpbnQgaWxrX2NydGNf
Y29tcHV0ZV9jbG9jayhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKKwkJCQkgIHN0cnVjdCBpbnRl
bF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHRvX2k5MTUoY3J0Yy0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlID0KQEAgLTEwMDE0LDE3ICsxMDAxNCwxNyBAQCBzdGF0aWMgaW50IGlyb25s
YWtlX2NydGNfY29tcHV0ZV9jbG9jayhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAogCQlpZiAo
aW50ZWxfaXNfZHVhbF9saW5rX2x2ZHMoZGV2X3ByaXYpKSB7CiAJCQlpZiAocmVmY2xrID09IDEw
MDAwMCkKLQkJCQlsaW1pdCA9ICZpbnRlbF9saW1pdHNfaXJvbmxha2VfZHVhbF9sdmRzXzEwMG07
CisJCQkJbGltaXQgPSAmaWxrX2xpbWl0c19kdWFsX2x2ZHNfMTAwbTsKIAkJCWVsc2UKLQkJCQls
aW1pdCA9ICZpbnRlbF9saW1pdHNfaXJvbmxha2VfZHVhbF9sdmRzOworCQkJCWxpbWl0ID0gJmls
a19saW1pdHNfZHVhbF9sdmRzOwogCQl9IGVsc2UgewogCQkJaWYgKHJlZmNsayA9PSAxMDAwMDAp
Ci0JCQkJbGltaXQgPSAmaW50ZWxfbGltaXRzX2lyb25sYWtlX3NpbmdsZV9sdmRzXzEwMG07CisJ
CQkJbGltaXQgPSAmaWxrX2xpbWl0c19zaW5nbGVfbHZkc18xMDBtOwogCQkJZWxzZQotCQkJCWxp
bWl0ID0gJmludGVsX2xpbWl0c19pcm9ubGFrZV9zaW5nbGVfbHZkczsKKwkJCQlsaW1pdCA9ICZp
bGtfbGltaXRzX3NpbmdsZV9sdmRzOwogCQl9CiAJfSBlbHNlIHsKLQkJbGltaXQgPSAmaW50ZWxf
bGltaXRzX2lyb25sYWtlX2RhYzsKKwkJbGltaXQgPSAmaWxrX2xpbWl0c19kYWM7CiAJfQogCiAJ
aWYgKCFjcnRjX3N0YXRlLT5jbG9ja19zZXQgJiYKQEAgLTEwMDM0LDcgKzEwMDM0LDcgQEAgc3Rh
dGljIGludCBpcm9ubGFrZV9jcnRjX2NvbXB1dGVfY2xvY2soc3RydWN0IGludGVsX2NydGMgKmNy
dGMsCiAJCXJldHVybiAtRUlOVkFMOwogCX0KIAotCWlyb25sYWtlX2NvbXB1dGVfZHBsbChjcnRj
LCBjcnRjX3N0YXRlLCBOVUxMKTsKKwlpbGtfY29tcHV0ZV9kcGxsKGNydGMsIGNydGNfc3RhdGUs
IE5VTEwpOwogCiAJaWYgKCFpbnRlbF9yZXNlcnZlX3NoYXJlZF9kcGxscyhzdGF0ZSwgY3J0Yywg
TlVMTCkpIHsKIAkJRFJNX0RFQlVHX0tNUygiZmFpbGVkIHRvIGZpbmQgUExMIGZvciBwaXBlICVj
XG4iLApAQCAtMTAxMDksOCArMTAxMDksOCBAQCB2b2lkIGludGVsX2RwX2dldF9tX24oc3RydWN0
IGludGVsX2NydGMgKmNydGMsCiAJCQkJCSAgICAgJnBpcGVfY29uZmlnLT5kcF9tMl9uMik7CiB9
CiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2dldF9mZGlfbV9uX2NvbmZpZyhzdHJ1Y3QgaW50ZWxf
Y3J0YyAqY3J0YywKLQkJCQkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQor
c3RhdGljIHZvaWQgaWxrX2dldF9mZGlfbV9uX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0
YywKKwkJCQkgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJaW50
ZWxfY3B1X3RyYW5zY29kZXJfZ2V0X21fbihjcnRjLCBwaXBlX2NvbmZpZy0+Y3B1X3RyYW5zY29k
ZXIsCiAJCQkJICAgICAmcGlwZV9jb25maWctPmZkaV9tX24sIE5VTEwpOwpAQCAtMTAyNzYsOCAr
MTAyNzYsOCBAQCBza2xfZ2V0X2luaXRpYWxfcGxhbmVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogCWtmcmVlKGludGVsX2ZiKTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfZ2V0
X3BmaXRfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAotCQkJCSAgICAgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQorc3RhdGljIHZvaWQgaWxrX2dldF9wZml0X2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKKwkJCQlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqcGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMtPmJhc2Uu
ZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsK
QEAgLTEwMzAwLDggKzEwMzAwLDggQEAgc3RhdGljIHZvaWQgaXJvbmxha2VfZ2V0X3BmaXRfY29u
ZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCX0KIH0KIAotc3RhdGljIGJvb2wgaXJvbmxh
a2VfZ2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAotCQkJCSAgICAgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQorc3RhdGljIGJvb2wgaWxrX2dldF9w
aXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKKwkJCQlzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqcGlwZV9jb25maWcpCiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNydGMt
PmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZGV2KTsKQEAgLTEwMzcyLDcgKzEwMzcyLDcgQEAgc3RhdGljIGJvb2wgaXJvbmxha2VfZ2V0X3Bp
cGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQlwaXBlX2NvbmZpZy0+ZmRpX2xh
bmVzID0gKChGRElfRFBfUE9SVF9XSURUSF9NQVNLICYgdG1wKSA+PgogCQkJCQkgIEZESV9EUF9Q
T1JUX1dJRFRIX1NISUZUKSArIDE7CiAKLQkJaXJvbmxha2VfZ2V0X2ZkaV9tX25fY29uZmlnKGNy
dGMsIHBpcGVfY29uZmlnKTsKKwkJaWxrX2dldF9mZGlfbV9uX2NvbmZpZyhjcnRjLCBwaXBlX2Nv
bmZpZyk7CiAKIAkJaWYgKEhBU19QQ0hfSUJYKGRldl9wcml2KSkgewogCQkJLyoKQEAgLTEwNDAw
LDcgKzEwNDAwLDcgQEAgc3RhdGljIGJvb2wgaXJvbmxha2VfZ2V0X3BpcGVfY29uZmlnKHN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjLAogCQkJKCh0bXAgJiBQTExfUkVGX1NEVk9fSERNSV9NVUxUSVBM
SUVSX01BU0spCiAJCQkgPj4gUExMX1JFRl9TRFZPX0hETUlfTVVMVElQTElFUl9TSElGVCkgKyAx
OwogCi0JCWlyb25sYWtlX3BjaF9jbG9ja19nZXQoY3J0YywgcGlwZV9jb25maWcpOworCQlpbGtf
cGNoX2Nsb2NrX2dldChjcnRjLCBwaXBlX2NvbmZpZyk7CiAJfSBlbHNlIHsKIAkJcGlwZV9jb25m
aWctPnBpeGVsX211bHRpcGxpZXIgPSAxOwogCX0KQEAgLTEwNDA4LDcgKzEwNDA4LDcgQEAgc3Rh
dGljIGJvb2wgaXJvbmxha2VfZ2V0X3BpcGVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRj
LAogCWludGVsX2dldF9waXBlX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcpOwogCWludGVsX2dl
dF9waXBlX3NyY19zaXplKGNydGMsIHBpcGVfY29uZmlnKTsKIAotCWlyb25sYWtlX2dldF9wZml0
X2NvbmZpZyhjcnRjLCBwaXBlX2NvbmZpZyk7CisJaWxrX2dldF9wZml0X2NvbmZpZyhjcnRjLCBw
aXBlX2NvbmZpZyk7CiAKIAlyZXQgPSB0cnVlOwogCkBAIC0xMDc2OSw3ICsxMDc2OSw3IEBAIHN0
YXRpYyB2b2lkIGhzd19nZXRfZGRpX3BvcnRfc3RhdGUoc3RydWN0IGludGVsX2NydGMgKmNydGMs
CiAJCXBpcGVfY29uZmlnLT5mZGlfbGFuZXMgPSAoKEZESV9EUF9QT1JUX1dJRFRIX01BU0sgJiB0
bXApID4+CiAJCQkJCSAgRkRJX0RQX1BPUlRfV0lEVEhfU0hJRlQpICsgMTsKIAotCQlpcm9ubGFr
ZV9nZXRfZmRpX21fbl9jb25maWcoY3J0YywgcGlwZV9jb25maWcpOworCQlpbGtfZ2V0X2ZkaV9t
X25fY29uZmlnKGNydGMsIHBpcGVfY29uZmlnKTsKIAl9CiB9CiAKQEAgLTEwOTIxLDcgKzEwOTIx
LDcgQEAgc3RhdGljIGJvb2wgaHN3X2dldF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YywKIAkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOSkKIAkJCXNrbF9nZXRfcGZpdF9j
b25maWcoY3J0YywgcGlwZV9jb25maWcpOwogCQllbHNlCi0JCQlpcm9ubGFrZV9nZXRfcGZpdF9j
b25maWcoY3J0YywgcGlwZV9jb25maWcpOworCQkJaWxrX2dldF9wZml0X2NvbmZpZyhjcnRjLCBw
aXBlX2NvbmZpZyk7CiAJfQogCiAJaWYgKGhzd19jcnRjX3N1cHBvcnRzX2lwcyhjcnRjKSkgewpA
QCAtMTE4NjQsOCArMTE4NjQsOCBAQCBpbnQgaW50ZWxfZG90Y2xvY2tfY2FsY3VsYXRlKGludCBs
aW5rX2ZyZXEsCiAJcmV0dXJuIGRpdl91NjQobXVsX3UzMl91MzIobV9uLT5saW5rX20sIGxpbmtf
ZnJlcSksIG1fbi0+bGlua19uKTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfcGNoX2Nsb2Nr
X2dldChzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKLQkJCQkgICBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgdm9pZCBpbGtfcGNoX2Nsb2NrX2dldChzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0YywKKwkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpwaXBl
X2NvbmZpZykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1
KGNydGMtPmJhc2UuZGV2KTsKIApAQCAtMTQ0NzIsOSArMTQ0NzIsOSBAQCBzdGF0aWMgdm9pZCBp
bnRlbF9waXBlX2Zhc3RzZXQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRj
X3N0YXRlLAogCQkJc2tsX3BmaXRfZW5hYmxlKG5ld19jcnRjX3N0YXRlKTsKIAl9IGVsc2UgaWYg
KEhBU19QQ0hfU1BMSVQoZGV2X3ByaXYpKSB7CiAJCWlmIChuZXdfY3J0Y19zdGF0ZS0+cGNoX3Bm
aXQuZW5hYmxlZCkKLQkJCWlyb25sYWtlX3BmaXRfZW5hYmxlKG5ld19jcnRjX3N0YXRlKTsKKwkJ
CWlsa19wZml0X2VuYWJsZShuZXdfY3J0Y19zdGF0ZSk7CiAJCWVsc2UgaWYgKG9sZF9jcnRjX3N0
YXRlLT5wY2hfcGZpdC5lbmFibGVkKQotCQkJaXJvbmxha2VfcGZpdF9kaXNhYmxlKG9sZF9jcnRj
X3N0YXRlKTsKKwkJCWlsa19wZml0X2Rpc2FibGUob2xkX2NydGNfc3RhdGUpOwogCX0KIAogCWlm
IChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDExKQpAQCAtMTY4MjYsMTMgKzE2ODI2LDEzIEBAIHZv
aWQgaW50ZWxfaW5pdF9kaXNwbGF5X2hvb2tzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAkJZGV2X3ByaXYtPmRpc3BsYXkuY3J0Y19lbmFibGUgPSBoc3dfY3J0Y19lbmFibGU7
CiAJCWRldl9wcml2LT5kaXNwbGF5LmNydGNfZGlzYWJsZSA9IGhzd19jcnRjX2Rpc2FibGU7CiAJ
fSBlbHNlIGlmIChIQVNfUENIX1NQTElUKGRldl9wcml2KSkgewotCQlkZXZfcHJpdi0+ZGlzcGxh
eS5nZXRfcGlwZV9jb25maWcgPSBpcm9ubGFrZV9nZXRfcGlwZV9jb25maWc7CisJCWRldl9wcml2
LT5kaXNwbGF5LmdldF9waXBlX2NvbmZpZyA9IGlsa19nZXRfcGlwZV9jb25maWc7CiAJCWRldl9w
cml2LT5kaXNwbGF5LmdldF9pbml0aWFsX3BsYW5lX2NvbmZpZyA9CiAJCQlpOXh4X2dldF9pbml0
aWFsX3BsYW5lX2NvbmZpZzsKIAkJZGV2X3ByaXYtPmRpc3BsYXkuY3J0Y19jb21wdXRlX2Nsb2Nr
ID0KLQkJCWlyb25sYWtlX2NydGNfY29tcHV0ZV9jbG9jazsKLQkJZGV2X3ByaXYtPmRpc3BsYXku
Y3J0Y19lbmFibGUgPSBpcm9ubGFrZV9jcnRjX2VuYWJsZTsKLQkJZGV2X3ByaXYtPmRpc3BsYXku
Y3J0Y19kaXNhYmxlID0gaXJvbmxha2VfY3J0Y19kaXNhYmxlOworCQkJaWxrX2NydGNfY29tcHV0
ZV9jbG9jazsKKwkJZGV2X3ByaXYtPmRpc3BsYXkuY3J0Y19lbmFibGUgPSBpbGtfY3J0Y19lbmFi
bGU7CisJCWRldl9wcml2LT5kaXNwbGF5LmNydGNfZGlzYWJsZSA9IGlsa19jcnRjX2Rpc2FibGU7
CiAJfSBlbHNlIGlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSkgewogCQlkZXZfcHJpdi0+ZGlz
cGxheS5nZXRfcGlwZV9jb25maWcgPSBpOXh4X2dldF9waXBlX2NvbmZpZzsKIAkJZGV2X3ByaXYt
PmRpc3BsYXkuZ2V0X2luaXRpYWxfcGxhbmVfY29uZmlnID0KQEAgLTE2ODc4LDcgKzE2ODc4LDcg
QEAgdm9pZCBpbnRlbF9pbml0X2Rpc3BsYXlfaG9va3Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCX0KIAogCWlmIChJU19HRU4oZGV2X3ByaXYsIDUpKSB7Ci0JCWRldl9wcml2
LT5kaXNwbGF5LmZkaV9saW5rX3RyYWluID0gaXJvbmxha2VfZmRpX2xpbmtfdHJhaW47CisJCWRl
dl9wcml2LT5kaXNwbGF5LmZkaV9saW5rX3RyYWluID0gaWxrX2ZkaV9saW5rX3RyYWluOwogCX0g
ZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCA2KSkgewogCQlkZXZfcHJpdi0+ZGlzcGxheS5mZGlf
bGlua190cmFpbiA9IGdlbjZfZmRpX2xpbmtfdHJhaW47CiAJfSBlbHNlIGlmIChJU19JVllCUklE
R0UoZGV2X3ByaXYpKSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXkuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5oCmluZGV4IDkyMWE1ODRjMzI4NC4uYmMyYzUxMDRmNzU1IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuaApAQCAtNTIxLDcgKzUyMSw3IEBAIGlu
dCBpbnRlbF9nZXRfcGlwZV9mcm9tX2NydGNfaWRfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwgdm9pZCAqZGF0YSwKIHUzMiBpbnRlbF9jcnRjX2dldF92YmxhbmtfY291bnRlcihzdHJ1Y3Qg
aW50ZWxfY3J0YyAqY3J0Yyk7CiB2b2lkIGludGVsX2NydGNfdmJsYW5rX29mZihjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiAKLWludCBpcm9ubGFrZV9nZXRfbGFu
ZXNfcmVxdWlyZWQoaW50IHRhcmdldF9jbG9jaywgaW50IGxpbmtfYncsIGludCBicHApOworaW50
IGlsa19nZXRfbGFuZXNfcmVxdWlyZWQoaW50IHRhcmdldF9jbG9jaywgaW50IGxpbmtfYncsIGlu
dCBicHApOwogdm9pZCB2bHZfd2FpdF9wb3J0X3JlYWR5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiwKIAkJCSBzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkcG9ydCwKIAkJCSB1
bnNpZ25lZCBpbnQgZXhwZWN0ZWRfbWFzayk7CkBAIC01NzksNyArNTc5LDcgQEAgdm9pZCBpbnRl
bF9jcnRjX2FybV9maWZvX3VuZGVycnVuKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogdTE2IHNr
bF9zY2FsZXJfY2FsY19waGFzZShpbnQgc3ViLCBpbnQgc2NhbGUsIGJvb2wgY2hyb21hX2NlbnRl
cik7CiBpbnQgc2tsX3VwZGF0ZV9zY2FsZXJfY3J0YyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSk7CiB2b2lkIHNrbF9zY2FsZXJfZGlzYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUpOwotdm9pZCBpcm9ubGFrZV9wZml0X2Rpc2FibGUo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlKTsKK3ZvaWQgaWxr
X3BmaXRfZGlzYWJsZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3Rh
dGUpOwogdTMyIGdsa19wbGFuZV9jb2xvcl9jdGwoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUsCiAJCQljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5l
X3N0YXRlKTsKIHUzMiBnbGtfcGxhbmVfY29sb3JfY3RsX2NydGMoY29uc3Qgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kcC5jCmluZGV4IDJmMzFkMjI2YzZlYi4uOTkxZjM0MzU3OWVmIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCkBAIC0yNTA5LDcgKzI1MDksNyBAQCBzdGF0aWMgdm9p
ZCBpbnRlbF9kcF9wcmVwYXJlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCSAqCiAJ
ICogQ1BUIFBDSCBpcyBxdWl0ZSBkaWZmZXJlbnQsIGhhdmluZyBtYW55IGJpdHMgbW92ZWQKIAkg
KiB0byB0aGUgVFJBTlNfRFBfQ1RMIHJlZ2lzdGVyIGluc3RlYWQuIFRoYXQKLQkgKiBjb25maWd1
cmF0aW9uIGhhcHBlbnMgKG9kZGx5KSBpbiBpcm9ubGFrZV9wY2hfZW5hYmxlCisJICogY29uZmln
dXJhdGlvbiBoYXBwZW5zIChvZGRseSkgaW4gaWxrX3BjaF9lbmFibGUKIAkgKi8KIAogCS8qIFBy
ZXNlcnZlIHRoZSBCSU9TLWNvbXB1dGVkIGRldGVjdGVkIGJpdC4gVGhpcyBpcwpAQCAtMjY1Myw3
ICsyNjUzLDcgQEAgc3RhdGljIHZvaWQgZWRwX3dhaXRfYmFja2xpZ2h0X29mZihzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQogICogaXMgbG9ja2VkCiAgKi8KIAotc3RhdGljICB1MzIgaXJvbmxh
a2VfZ2V0X3BwX2NvbnRyb2woc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKK3N0YXRpYyAgdTMy
IGlsa19nZXRfcHBfY29udHJvbChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXUz
MiBjb250cm9sOwpAQCAtMjcwMyw3ICsyNzAzLDcgQEAgc3RhdGljIGJvb2wgZWRwX3BhbmVsX3Zk
ZF9vbihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCWlmICghZWRwX2hhdmVfcGFuZWxfcG93
ZXIoaW50ZWxfZHApKQogCQl3YWl0X3BhbmVsX3Bvd2VyX2N5Y2xlKGludGVsX2RwKTsKIAotCXBw
ID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOworCXBwID0gaWxrX2dldF9wcF9j
b250cm9sKGludGVsX2RwKTsKIAlwcCB8PSBFRFBfRk9SQ0VfVkREOwogCiAJcHBfc3RhdF9yZWcg
PSBfcHBfc3RhdF9yZWcoaW50ZWxfZHApOwpAQCAtMjc2OCw3ICsyNzY4LDcgQEAgc3RhdGljIHZv
aWQgZWRwX3BhbmVsX3ZkZF9vZmZfc3luYyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQkg
ICAgICBpbnRlbF9kaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsCiAJCSAgICAgIGludGVsX2Rp
Z19wb3J0LT5iYXNlLmJhc2UubmFtZSk7CiAKLQlwcCA9IGlyb25sYWtlX2dldF9wcF9jb250cm9s
KGludGVsX2RwKTsKKwlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CiAJcHAgJj0g
fkVEUF9GT1JDRV9WREQ7CiAKIAlwcF9jdHJsX3JlZyA9IF9wcF9jdHJsX3JlZyhpbnRlbF9kcCk7
CkBAIC0yODY0LDcgKzI4NjQsNyBAQCBzdGF0aWMgdm9pZCBlZHBfcGFuZWxfb24oc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCkKIAl3YWl0X3BhbmVsX3Bvd2VyX2N5Y2xlKGludGVsX2RwKTsKIAog
CXBwX2N0cmxfcmVnID0gX3BwX2N0cmxfcmVnKGludGVsX2RwKTsKLQlwcCA9IGlyb25sYWtlX2dl
dF9wcF9jb250cm9sKGludGVsX2RwKTsKKwlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9k
cCk7CiAJaWYgKElTX0dFTihkZXZfcHJpdiwgNSkpIHsKIAkJLyogSUxLIHdvcmthcm91bmQ6IGRp
c2FibGUgcmVzZXQgYXJvdW5kIHBvd2VyIHNlcXVlbmNlICovCiAJCXBwICY9IH5QQU5FTF9QT1dF
Ul9SRVNFVDsKQEAgLTI5MTksNyArMjkxOSw3IEBAIHN0YXRpYyB2b2lkIGVkcF9wYW5lbF9vZmYo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlXQVJOKCFpbnRlbF9kcC0+d2FudF9wYW5lbF92
ZGQsICJOZWVkIFtFTkNPREVSOiVkOiVzXSBWREQgdG8gdHVybiBvZmYgcGFuZWxcbiIsCiAJICAg
ICBkaWdfcG9ydC0+YmFzZS5iYXNlLmJhc2UuaWQsIGRpZ19wb3J0LT5iYXNlLmJhc2UubmFtZSk7
CiAKLQlwcCA9IGlyb25sYWtlX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKKwlwcCA9IGlsa19n
ZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CiAJLyogV2UgbmVlZCB0byBzd2l0Y2ggb2ZmIHBhbmVs
IHBvd2VyIF9hbmRfIGZvcmNlIHZkZCwgZm9yIG90aGVyd2lzZSBzb21lCiAJICogcGFuZWxzIGdl
dCB2ZXJ5IHVuaGFwcHkgYW5kIGNlYXNlIHRvIHdvcmsuICovCiAJcHAgJj0gfihQQU5FTF9QT1dF
Ul9PTiB8IFBBTkVMX1BPV0VSX1JFU0VUIHwgRURQX0ZPUkNFX1ZERCB8CkBAIC0yOTY4LDcgKzI5
NjgsNyBAQCBzdGF0aWMgdm9pZCBfaW50ZWxfZWRwX2JhY2tsaWdodF9vbihzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogCQlpOTE1X3JlZ190IHBwX2N0cmxfcmVnID0gX3BwX2N0cmxfcmVnKGlu
dGVsX2RwKTsKIAkJdTMyIHBwOwogCi0JCXBwID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRyb2woaW50
ZWxfZHApOworCQlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CiAJCXBwIHw9IEVE
UF9CTENfRU5BQkxFOwogCiAJCUk5MTVfV1JJVEUocHBfY3RybF9yZWcsIHBwKTsKQEAgLTMwMDQs
NyArMzAwNCw3IEBAIHN0YXRpYyB2b2lkIF9pbnRlbF9lZHBfYmFja2xpZ2h0X29mZihzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogCQlpOTE1X3JlZ190IHBwX2N0cmxfcmVnID0gX3BwX2N0cmxf
cmVnKGludGVsX2RwKTsKIAkJdTMyIHBwOwogCi0JCXBwID0gaXJvbmxha2VfZ2V0X3BwX2NvbnRy
b2woaW50ZWxfZHApOworCQlwcCA9IGlsa19nZXRfcHBfY29udHJvbChpbnRlbF9kcCk7CiAJCXBw
ICY9IH5FRFBfQkxDX0VOQUJMRTsKIAogCQlJOTE1X1dSSVRFKHBwX2N0cmxfcmVnLCBwcCk7CkBA
IC0zMDQyLDcgKzMwNDIsNyBAQCBzdGF0aWMgdm9pZCBpbnRlbF9lZHBfYmFja2xpZ2h0X3Bvd2Vy
KHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvciwKIAogCWlzX2VuYWJsZWQgPSBmYWxz
ZTsKIAl3aXRoX3Bwc19sb2NrKGludGVsX2RwLCB3YWtlcmVmKQotCQlpc19lbmFibGVkID0gaXJv
bmxha2VfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApICYgRURQX0JMQ19FTkFCTEU7CisJCWlzX2Vu
YWJsZWQgPSBpbGtfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApICYgRURQX0JMQ19FTkFCTEU7CiAJ
aWYgKGlzX2VuYWJsZWQgPT0gZW5hYmxlKQogCQlyZXR1cm47CiAKQEAgLTMwNzksOCArMzA3OSw4
IEBAIHN0YXRpYyB2b2lkIGFzc2VydF9lZHBfcGxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwgYm9vbCBzdGF0ZSkKICNkZWZpbmUgYXNzZXJ0X2VkcF9wbGxfZW5hYmxlZChkKSBh
c3NlcnRfZWRwX3BsbCgoZCksIHRydWUpCiAjZGVmaW5lIGFzc2VydF9lZHBfcGxsX2Rpc2FibGVk
KGQpIGFzc2VydF9lZHBfcGxsKChkKSwgZmFsc2UpCiAKLXN0YXRpYyB2b2lkIGlyb25sYWtlX2Vk
cF9wbGxfb24oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCQljb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgdm9pZCBpbGtfZWRwX3BsbF9vbihz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAorCQkJICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKnBpcGVfY29uZmlnKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50
ZWxfY3J0YyhwaXBlX2NvbmZpZy0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKQEAgLTMxMTksOCArMzExOSw4
IEBAIHN0YXRpYyB2b2lkIGlyb25sYWtlX2VkcF9wbGxfb24oc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCwKIAl1ZGVsYXkoMjAwKTsKIH0KIAotc3RhdGljIHZvaWQgaXJvbmxha2VfZWRwX3BsbF9v
ZmYoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKLQkJCQkgY29uc3Qgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlKQorc3RhdGljIHZvaWQgaWxrX2VkcF9wbGxfb2ZmKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCisJCQkgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKm9sZF9jcnRjX3N0YXRlKQogewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9f
aW50ZWxfY3J0YyhvbGRfY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKQEAgLTM0MTAsNyAr
MzQxMCw3IEBAIHN0YXRpYyB2b2lkIGc0eF9wb3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXIsCiAKIAkvKiBPbmx5IGlsaysgaGFzIHBvcnQgQSAqLwogCWlmIChwb3J0
ID09IFBPUlRfQSkKLQkJaXJvbmxha2VfZWRwX3BsbF9vZmYoaW50ZWxfZHAsIG9sZF9jcnRjX3N0
YXRlKTsKKwkJaWxrX2VkcF9wbGxfb2ZmKGludGVsX2RwLCBvbGRfY3J0Y19zdGF0ZSk7CiB9CiAK
IHN0YXRpYyB2b2lkIHZsdl9wb3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVu
Y29kZXIsCkBAIC0zNjE1LDcgKzM2MTUsNyBAQCBzdGF0aWMgdm9pZCBnNHhfcHJlX2VuYWJsZV9k
cChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAogCS8qIE9ubHkgaWxrKyBoYXMgcG9y
dCBBICovCiAJaWYgKHBvcnQgPT0gUE9SVF9BKQotCQlpcm9ubGFrZV9lZHBfcGxsX29uKGludGVs
X2RwLCBwaXBlX2NvbmZpZyk7CisJCWlsa19lZHBfcGxsX29uKGludGVsX2RwLCBwaXBlX2NvbmZp
Zyk7CiB9CiAKIHN0YXRpYyB2b2lkIHZsdl9kZXRhY2hfcG93ZXJfc2VxdWVuY2VyKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCkBAIC02NjkzLDcgKzY2OTMsNyBAQCBpbnRlbF9wcHNfcmVhZG91
dF9od19zdGF0ZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLCBzdHJ1Y3QgZWRwX3Bvd2VyX3Nl
cSAqc2VxKQogCiAJaW50ZWxfcHBzX2dldF9yZWdpc3RlcnMoaW50ZWxfZHAsICZyZWdzKTsKIAot
CXBwX2N0bCA9IGlyb25sYWtlX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKKwlwcF9jdGwgPSBp
bGtfZ2V0X3BwX2NvbnRyb2woaW50ZWxfZHApOwogCiAJLyogRW5zdXJlIFBQUyBpcyB1bmxvY2tl
ZCAqLwogCWlmICghSEFTX0RESShkZXZfcHJpdikpCkBAIC02ODYzLDcgKzY4NjMsNyBAQCBpbnRl
bF9kcF9pbml0X3BhbmVsX3Bvd2VyX3NlcXVlbmNlcl9yZWdpc3RlcnMoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCwKIAkgKiBzb29uIGFzIHRoZSBuZXcgcG93ZXIgc2VxdWVuY2VyIGdldHMgaW5p
dGlhbGl6ZWQuCiAJICovCiAJaWYgKGZvcmNlX2Rpc2FibGVfdmRkKSB7Ci0JCXUzMiBwcCA9IGly
b25sYWtlX2dldF9wcF9jb250cm9sKGludGVsX2RwKTsKKwkJdTMyIHBwID0gaWxrX2dldF9wcF9j
b250cm9sKGludGVsX2RwKTsKIAogCQlXQVJOKHBwICYgUEFORUxfUE9XRVJfT04sICJQYW5lbCBw
b3dlciBhbHJlYWR5IG9uXG4iKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcF9tc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZHBfbXN0LmMKaW5kZXggMDFiNDYwOGFiNTZjLi5jYmY2MjMxNTRhZjEgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbXN0LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYwpAQCAtMjUwLDcgKzI1MCw3IEBA
IHN0YXRpYyB2b2lkIGludGVsX21zdF9wb3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIsCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOSkKIAkJc2tsX3NjYWxl
cl9kaXNhYmxlKG9sZF9jcnRjX3N0YXRlKTsKIAllbHNlCi0JCWlyb25sYWtlX3BmaXRfZGlzYWJs
ZShvbGRfY3J0Y19zdGF0ZSk7CisJCWlsa19wZml0X2Rpc2FibGUob2xkX2NydGNfc3RhdGUpOwog
CiAJLyoKIAkgKiBGcm9tIFRHTCBzcGVjOiAiSWYgbXVsdGktc3RyZWFtIHNsYXZlIHRyYW5zY29k
ZXI6IENvbmZpZ3VyZQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9maWZvX3VuZGVycnVuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2ZpZm9fdW5kZXJydW4uYwppbmRleCBhYjYxZjg4ZDFkMzMuLmQ2ZTBkMGJlODQyZSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9maWZvX3VuZGVycnVuLmMK
QEAgLTEyNiw4ICsxMjYsOCBAQCBzdGF0aWMgdm9pZCBpOXh4X3NldF9maWZvX3VuZGVycnVuX3Jl
cG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCX0KIH0KIAotc3RhdGljIHZvaWQgaXJv
bmxha2Vfc2V0X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYs
Ci0JCQkJCQkgZW51bSBwaXBlIHBpcGUsIGJvb2wgZW5hYmxlKQorc3RhdGljIHZvaWQgaWxrX3Nl
dF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAorCQkJCQkg
ICAgZW51bSBwaXBlIHBpcGUsIGJvb2wgZW5hYmxlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAl1MzIgYml0ID0gKHBpcGUgPT0gUElQRV9B
KSA/CkBAIC0yNjQsNyArMjY0LDcgQEAgc3RhdGljIGJvb2wgX19pbnRlbF9zZXRfY3B1X2ZpZm9f
dW5kZXJydW5fcmVwb3J0aW5nKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaWYgKEhBU19HTUNI
KGRldl9wcml2KSkKIAkJaTl4eF9zZXRfZmlmb191bmRlcnJ1bl9yZXBvcnRpbmcoZGV2LCBwaXBl
LCBlbmFibGUsIG9sZCk7CiAJZWxzZSBpZiAoSVNfR0VOX1JBTkdFKGRldl9wcml2LCA1LCA2KSkK
LQkJaXJvbmxha2Vfc2V0X2ZpZm9fdW5kZXJydW5fcmVwb3J0aW5nKGRldiwgcGlwZSwgZW5hYmxl
KTsKKwkJaWxrX3NldF9maWZvX3VuZGVycnVuX3JlcG9ydGluZyhkZXYsIHBpcGUsIGVuYWJsZSk7
CiAJZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCA3KSkKIAkJaXZ5YnJpZGdlX3NldF9maWZvX3Vu
ZGVycnVuX3JlcG9ydGluZyhkZXYsIHBpcGUsIGVuYWJsZSwgb2xkKTsKIAllbHNlIGlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDgpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9yZXNldC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwpp
bmRleCAxYzUxMjk2NjQ2ZTAuLmVhNzA2OWUyMzhkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9yZXNldC5jCkBAIC0yNTEsOSArMjUxLDggQEAgc3RhdGljIGludCBnNHhfZG9fcmVzZXQo
c3RydWN0IGludGVsX2d0ICpndCwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IGlyb25s
YWtlX2RvX3Jlc2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsCi0JCQkgICAgIGludGVsX2VuZ2luZV9t
YXNrX3QgZW5naW5lX21hc2ssCi0JCQkgICAgIHVuc2lnbmVkIGludCByZXRyeSkKK3N0YXRpYyBp
bnQgaWxrX2RvX3Jlc2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGludGVsX2VuZ2luZV9tYXNrX3Qg
ZW5naW5lX21hc2ssCisJCQl1bnNpZ25lZCBpbnQgcmV0cnkpCiB7CiAJc3RydWN0IGludGVsX3Vu
Y29yZSAqdW5jb3JlID0gZ3QtPnVuY29yZTsKIAlpbnQgcmV0OwpAQCAtNTk3LDcgKzU5Niw3IEBA
IHN0YXRpYyByZXNldF9mdW5jIGludGVsX2dldF9ncHVfcmVzZXQoY29uc3Qgc3RydWN0IGludGVs
X2d0ICpndCkKIAllbHNlIGlmIChJTlRFTF9HRU4oaTkxNSkgPj0gNikKIAkJcmV0dXJuIGdlbjZf
cmVzZXRfZW5naW5lczsKIAllbHNlIGlmIChJTlRFTF9HRU4oaTkxNSkgPj0gNSkKLQkJcmV0dXJu
IGlyb25sYWtlX2RvX3Jlc2V0OworCQlyZXR1cm4gaWxrX2RvX3Jlc2V0OwogCWVsc2UgaWYgKElT
X0c0WChpOTE1KSkKIAkJcmV0dXJuIGc0eF9kb19yZXNldDsKIAllbHNlIGlmIChJU19HMzMoaTkx
NSkgfHwgSVNfUElORVZJRVcoaTkxNSkpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2RlYnVnZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZGVidWdmcy5jCmlu
ZGV4IGQyODQ2OGVhZWQ1Ny4uMDQwNzIyOTI1MWJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2RlYnVnZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rl
YnVnZnMuYwpAQCAtMTAwMSw3ICsxMDAxLDcgQEAgc3RhdGljIGludCBpOTE1X2ZyZXF1ZW5jeV9p
bmZvKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqdW51c2VkKQogCXJldHVybiByZXQ7CiB9CiAK
LXN0YXRpYyBpbnQgaXJvbmxha2VfZHJwY19pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSkKK3N0YXRp
YyBpbnQgaWxrX2RycGNfaW5mbyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0pCiB7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUgPSBub2RlX3RvX2k5MTUobS0+cHJpdmF0ZSk7CiAJc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlID0gJmk5MTUtPnVuY29yZTsKQEAgLTEyMDksNyArMTIwOSw3IEBA
IHN0YXRpYyBpbnQgaTkxNV9kcnBjX2luZm8oc3RydWN0IHNlcV9maWxlICptLCB2b2lkICp1bnVz
ZWQpCiAJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gNikKIAkJCWVyciA9IGdlbjZf
ZHJwY19pbmZvKG0pOwogCQllbHNlCi0JCQllcnIgPSBpcm9ubGFrZV9kcnBjX2luZm8obSk7CisJ
CQllcnIgPSBpbGtfZHJwY19pbmZvKG0pOwogCX0KIAogCXJldHVybiBlcnI7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9pcnEuYwppbmRleCA0MmI3OWY1Nzc1MDAuLjJkNjMyNGQyOTIyYSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2lycS5jCkBAIC0yMDMxLDcgKzIwMzEsNyBAQCBzdGF0aWMgdm9pZCBpdmJfZGlzcGxh
eV9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAgKiA0IC0g
UHJvY2VzcyB0aGUgaW50ZXJydXB0KHMpIHRoYXQgaGFkIGJpdHMgc2V0IGluIHRoZSBJSVJzLgog
ICogNSAtIFJlLWVuYWJsZSBNYXN0ZXIgSW50ZXJydXB0IENvbnRyb2wuCiAgKi8KLXN0YXRpYyBp
cnFyZXR1cm5fdCBpcm9ubGFrZV9pcnFfaGFuZGxlcihpbnQgaXJxLCB2b2lkICphcmcpCitzdGF0
aWMgaXJxcmV0dXJuX3QgaWxrX2lycV9oYW5kbGVyKGludCBpcnEsIHZvaWQgKmFyZykKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBhcmc7CiAJdTMyIGRlX2lpciwgZ3Rf
aWlyLCBkZV9pZXIsIHNkZV9pZXIgPSAwOwpAQCAtMjc0Miw3ICsyNzQyLDcgQEAgc3RhdGljIHZv
aWQgdmx2X2Rpc3BsYXlfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAogLyogZHJtX2RtYS5oIGhvb2tzCiAqLwotc3RhdGljIHZvaWQgaXJvbmxha2Vf
aXJxX3Jlc2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lk
IGlsa19pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXN0
cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9ICZkZXZfcHJpdi0+dW5jb3JlOwogCkBAIC0zMjI1
LDcgKzMyMjUsNyBAQCBzdGF0aWMgdm9pZCBpYnhfaXJxX3Bvc3RpbnN0YWxsKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJc3B0X2hwZF9kZXRlY3Rpb25fc2V0dXAoZGV2X3By
aXYpOwogfQogCi1zdGF0aWMgdm9pZCBpcm9ubGFrZV9pcnFfcG9zdGluc3RhbGwoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQorc3RhdGljIHZvaWQgaWxrX2lycV9wb3N0aW5zdGFs
bChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJc3RydWN0IGludGVsX3Vu
Y29yZSAqdW5jb3JlID0gJmRldl9wcml2LT51bmNvcmU7CiAJdTMyIGRpc3BsYXlfbWFzaywgZXh0
cmFfbWFzazsKQEAgLTM5ODAsNyArMzk4MCw3IEBAIHN0YXRpYyBpcnFfaGFuZGxlcl90IGludGVs
X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJZWxzZSBp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA4KQogCQkJcmV0dXJuIGdlbjhfaXJxX2hhbmRsZXI7
CiAJCWVsc2UKLQkJCXJldHVybiBpcm9ubGFrZV9pcnFfaGFuZGxlcjsKKwkJCXJldHVybiBpbGtf
aXJxX2hhbmRsZXI7CiAJfQogfQogCkBAIC00MDAzLDcgKzQwMDMsNyBAQCBzdGF0aWMgdm9pZCBp
bnRlbF9pcnFfcmVzZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQllbHNl
IGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDgpCiAJCQlnZW44X2lycV9yZXNldChkZXZfcHJp
dik7CiAJCWVsc2UKLQkJCWlyb25sYWtlX2lycV9yZXNldChkZXZfcHJpdik7CisJCQlpbGtfaXJx
X3Jlc2V0KGRldl9wcml2KTsKIAl9CiB9CiAKQEAgLTQwMjYsNyArNDAyNiw3IEBAIHN0YXRpYyB2
b2lkIGludGVsX2lycV9wb3N0aW5zdGFsbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiAJCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOCkKIAkJCWdlbjhfaXJxX3Bv
c3RpbnN0YWxsKGRldl9wcml2KTsKIAkJZWxzZQotCQkJaXJvbmxha2VfaXJxX3Bvc3RpbnN0YWxs
KGRldl9wcml2KTsKKwkJCWlsa19pcnFfcG9zdGluc3RhbGwoZGV2X3ByaXYpOwogCX0KIH0KIApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3BtLmMKaW5kZXggZWFiM2IwMjllOThhLi42ZmI2NzYwYTE1NTkgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtMTc4LDcgKzE3OCw3IEBAIHN0YXRpYyB2b2lkIHBu
dl9nZXRfbWVtX2ZyZXEoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCWRldl9w
cml2LT5pc19kZHIzID0gKHRtcCAmIENTSFJERFIzQ1RMX0REUjMpID8gMSA6IDA7CiB9CiAKLXN0
YXRpYyB2b2lkIGk5MTVfaXJvbmxha2VfZ2V0X21lbV9mcmVxKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGlsa19nZXRfbWVtX2ZyZXEoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2KQogewogCXUxNiBkZHJwbGwsIGNzaXBsbDsKIApAQCAtNzE4
Miw3ICs3MTgyLDcgQEAgdm9pZCBpbnRlbF9pbml0X3BtKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdikKIAlpZiAoSVNfUElORVZJRVcoZGV2X3ByaXYpKQogCQlwbnZfZ2V0X21lbV9m
cmVxKGRldl9wcml2KTsKIAllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDUpKQotCQlpOTE1X2ly
b25sYWtlX2dldF9tZW1fZnJlcShkZXZfcHJpdik7CisJCWlsa19nZXRfbWVtX2ZyZXEoZGV2X3By
aXYpOwogCiAJaWYgKGludGVsX2hhc19zYWd2KGRldl9wcml2KSkKIAkJc2tsX3NldHVwX3NhZ3Zf
YmxvY2tfdGltZShkZXZfcHJpdik7Ci0tIAoyLjI0LjAKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4
QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWls
bWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id F28B44CFFF
	for <lists+intel-gfx@lfdr.de>; Thu, 20 Jun 2019 16:06:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 634206E58A;
	Thu, 20 Jun 2019 14:06:57 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 283096E588
 for <intel-gfx@lists.freedesktop.org>; Thu, 20 Jun 2019 14:06:56 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Jun 2019 07:06:37 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.63,397,1557212400"; d="scan'208";a="162531357"
Received: from ideak-desk.fi.intel.com ([10.237.72.204])
 by orsmga003.jf.intel.com with ESMTP; 20 Jun 2019 07:06:35 -0700
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 20 Jun 2019 17:05:55 +0300
Message-Id: <20190620140600.11357-19-imre.deak@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190620140600.11357-1-imre.deak@intel.com>
References: <20190620140600.11357-1-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 18/23] drm/i915/icl: Split getting the DPLLs
 to port type specific functions
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yIGNsYXJpdHkgZmFjdG9yIG91dCB0aGUgY29tYm8gUEhZIGFuZCBUeXBlQyBQSFkgc3BlY2lm
aWMgY29kZSBmcm9tCmljbF9nZXRfZHBsbHMoKSBpbnRvIHRoZWlyIG93biBmdW5jdGlvbnMuCgpO
byBmdW5jdGlvbmFsIGNoYW5nZXMuCgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxh
QGxpbnV4LmludGVsLmNvbT4KQ2M6IERhbmllbCBWZXR0ZXIgPGRhbmllbC52ZXR0ZXJAZmZ3bGwu
Y2g+CkNjOiBNYWFydGVuIExhbmtob3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwu
Y29tPgpTaWduZWQtb2ZmLWJ5OiBJbXJlIERlYWsgPGltcmUuZGVha0BpbnRlbC5jb20+Ci0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5jIHwgMTAwICsrKysr
KysrKysrKy0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDY2IGluc2VydGlvbnMoKyksIDM0IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZHBsbF9tZ3IuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3Iu
YwppbmRleCAxNGJiYWI0NTgzNmQuLjg1YzM4ZWVkOTNhOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcGxsX21nci5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYwpAQCAtMjg1Niw1MSArMjg1Niw2NiBAQCBz
dGF0aWMgYm9vbCBpY2xfY2FsY19tZ19wbGxfc3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyBib29sIGljbF9nZXRfZHBs
bHMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCi0JCQkgIHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjLAotCQkJICBzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKK3N0YXRpYyBi
b29sIGljbF9nZXRfY29tYm9fcGh5X2RwbGwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCisJCQkJICAgc3RydWN0IGludGVsX2NydGMgKmNydGMsCisJCQkJICAgc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIpCit7CisJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUgPQorCQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKKwlz
dHJ1Y3QgaW50ZWxfc2hhcmVkX2RwbGwgKnBsbDsKKworCWlmICghaWNsX2NhbGNfZHBsbF9zdGF0
ZShjcnRjX3N0YXRlLCBlbmNvZGVyLAorCQkJCSAmY3J0Y19zdGF0ZS0+ZHBsbF9od19zdGF0ZSkp
IHsKKwkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IGNhbGN1bGF0ZSBjb21ibyBQSFkgUExMIHN0
YXRlLlxuIik7CisKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCXBsbCA9IGludGVsX2ZpbmRfc2hh
cmVkX2RwbGwoc3RhdGUsIGNydGMsICZjcnRjX3N0YXRlLT5kcGxsX2h3X3N0YXRlLAorCQkJCSAg
ICAgRFBMTF9JRF9JQ0xfRFBMTDAsCisJCQkJICAgICBEUExMX0lEX0lDTF9EUExMMSk7CisJaWYg
KCFwbGwpIHsKKwkJRFJNX0RFQlVHX0tNUygiTm8gY29tYm8gUEhZIFBMTCBmb3VuZCBmb3IgcG9y
dCAlY1xuIiwKKwkJCSAgICAgIHBvcnRfbmFtZShlbmNvZGVyLT5wb3J0KSk7CisJCXJldHVybiBm
YWxzZTsKKwl9CisKKwlpbnRlbF9yZWZlcmVuY2Vfc2hhcmVkX2RwbGwoc3RhdGUsIGNydGMsCisJ
CQkJICAgIHBsbCwgJmNydGNfc3RhdGUtPmRwbGxfaHdfc3RhdGUpOworCisJY3J0Y19zdGF0ZS0+
c2hhcmVkX2RwbGwgPSBwbGw7CisKKwlyZXR1cm4gdHJ1ZTsKK30KKworc3RhdGljIGJvb2wgaWNs
X2dldF90Y19waHlfZHBsbHMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJ
IHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAorCQkJCSBzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5j
b2RlcikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0
YXRlLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUgPQog
CQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKLQlzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydDsKKwllbnVtIHRjX3BvcnQgdGNfcG9y
dCA9IGludGVsX3BvcnRfdG9fdGMoZGV2X3ByaXYsIGVuY29kZXItPnBvcnQpOworCXN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0OwogCXN0cnVjdCBpbnRlbF9zaGFyZWRfZHBsbCAq
cGxsOwotCWVudW0gcG9ydCBwb3J0ID0gZW5jb2Rlci0+cG9ydDsKIAllbnVtIGludGVsX2RwbGxf
aWQgbWluLCBtYXg7CiAJYm9vbCByZXQ7CiAKLQlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShk
ZXZfcHJpdiwgcG9ydCkpIHsKLQkJbWluID0gRFBMTF9JRF9JQ0xfRFBMTDA7Ci0JCW1heCA9IERQ
TExfSURfSUNMX0RQTEwxOworCWlmIChlbmNvZGVyLT50eXBlID09IElOVEVMX09VVFBVVF9EUF9N
U1QpCisJCWRpZ19wb3J0ID0gZW5jX3RvX21zdCgmZW5jb2Rlci0+YmFzZSktPnByaW1hcnk7CisJ
ZWxzZQorCQlkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgmZW5jb2Rlci0+YmFzZSk7CisKKwlp
ZiAoZGlnX3BvcnQtPnRjX21vZGUgPT0gVENfUE9SVF9UQlRfQUxUKSB7CisJCW1pbiA9IERQTExf
SURfSUNMX1RCVFBMTDsKKwkJbWF4ID0gbWluOwogCQlyZXQgPSBpY2xfY2FsY19kcGxsX3N0YXRl
KGNydGNfc3RhdGUsIGVuY29kZXIsCiAJCQkJCSAgJmNydGNfc3RhdGUtPmRwbGxfaHdfc3RhdGUp
OwotCX0gZWxzZSBpZiAoaW50ZWxfcG9ydF9pc190YyhkZXZfcHJpdiwgcG9ydCkpIHsKLQkJaWYg
KGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0RQX01TVCkgewotCQkJc3RydWN0IGludGVs
X2RwX21zdF9lbmNvZGVyICptc3RfZW5jb2RlcjsKLQotCQkJbXN0X2VuY29kZXIgPSBlbmNfdG9f
bXN0KCZlbmNvZGVyLT5iYXNlKTsKLQkJCWludGVsX2RpZ19wb3J0ID0gbXN0X2VuY29kZXItPnBy
aW1hcnk7Ci0JCX0gZWxzZSB7Ci0JCQlpbnRlbF9kaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydCgm
ZW5jb2Rlci0+YmFzZSk7Ci0JCX0KLQotCQlpZiAoaW50ZWxfZGlnX3BvcnQtPnRjX21vZGUgPT0g
VENfUE9SVF9UQlRfQUxUKSB7Ci0JCQltaW4gPSBEUExMX0lEX0lDTF9UQlRQTEw7Ci0JCQltYXgg
PSBtaW47Ci0JCQlyZXQgPSBpY2xfY2FsY19kcGxsX3N0YXRlKGNydGNfc3RhdGUsIGVuY29kZXIs
Ci0JCQkJCQkgICZjcnRjX3N0YXRlLT5kcGxsX2h3X3N0YXRlKTsKLQkJfSBlbHNlIHsKLQkJCWVu
dW0gdGNfcG9ydCB0Y19wb3J0OwotCi0JCQl0Y19wb3J0ID0gaW50ZWxfcG9ydF90b190YyhkZXZf
cHJpdiwgcG9ydCk7Ci0JCQltaW4gPSBpY2xfdGNfcG9ydF90b19wbGxfaWQodGNfcG9ydCk7Ci0J
CQltYXggPSBtaW47Ci0JCQlyZXQgPSBpY2xfY2FsY19tZ19wbGxfc3RhdGUoY3J0Y19zdGF0ZSwK
LQkJCQkJCSAgICAmY3J0Y19zdGF0ZS0+ZHBsbF9od19zdGF0ZSk7Ci0JCX0KIAl9IGVsc2Ugewot
CQlNSVNTSU5HX0NBU0UocG9ydCk7Ci0JCXJldHVybiBmYWxzZTsKKwkJbWluID0gaWNsX3RjX3Bv
cnRfdG9fcGxsX2lkKHRjX3BvcnQpOworCQltYXggPSBtaW47CisJCXJldCA9IGljbF9jYWxjX21n
X3BsbF9zdGF0ZShjcnRjX3N0YXRlLAorCQkJCQkgICAgJmNydGNfc3RhdGUtPmRwbGxfaHdfc3Rh
dGUpOwogCX0KIAogCWlmICghcmV0KSB7CkBAIC0yOTI1LDYgKzI5NDAsMjMgQEAgc3RhdGljIGJv
b2wgaWNsX2dldF9kcGxscyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAlyZXR1
cm4gdHJ1ZTsKIH0KIAorc3RhdGljIGJvb2wgaWNsX2dldF9kcGxscyhzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSwKKwkJCSAgc3RydWN0IGludGVsX2NydGMgKmNydGMsCisJCQkgIHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsKKwllbnVtIHBvcnQgcG9ydCA9
IGVuY29kZXItPnBvcnQ7CisKKwlpZiAoaW50ZWxfcG9ydF9pc19jb21ib3BoeShkZXZfcHJpdiwg
cG9ydCkpCisJCXJldHVybiBpY2xfZ2V0X2NvbWJvX3BoeV9kcGxsKHN0YXRlLCBjcnRjLCBlbmNv
ZGVyKTsKKwllbHNlIGlmIChpbnRlbF9wb3J0X2lzX3RjKGRldl9wcml2LCBwb3J0KSkKKwkJcmV0
dXJuIGljbF9nZXRfdGNfcGh5X2RwbGxzKHN0YXRlLCBjcnRjLCBlbmNvZGVyKTsKKworCU1JU1NJ
TkdfQ0FTRShwb3J0KTsKKworCXJldHVybiBmYWxzZTsKK30KKwogc3RhdGljIGJvb2wgbWdfcGxs
X2dldF9od19zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkJc3Ry
dWN0IGludGVsX3NoYXJlZF9kcGxsICpwbGwsCiAJCQkJc3RydWN0IGludGVsX2RwbGxfaHdfc3Rh
dGUgKmh3X3N0YXRlKQotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

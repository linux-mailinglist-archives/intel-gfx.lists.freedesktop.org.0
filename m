Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 2B49A290359
	for <lists+intel-gfx@lfdr.de>; Fri, 16 Oct 2020 12:45:42 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3F9B26EC38;
	Fri, 16 Oct 2020 10:45:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mblankhorst.nl (mblankhorst.nl
 [IPv6:2a02:2308::216:3eff:fe92:dfa3])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C50C96EAC7
 for <intel-gfx@lists.freedesktop.org>; Fri, 16 Oct 2020 10:44:50 +0000 (UTC)
From: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 16 Oct 2020 12:43:58 +0200
Message-Id: <20201016104444.1492028-16-maarten.lankhorst@linux.intel.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20201016104444.1492028-1-maarten.lankhorst@linux.intel.com>
References: <20201016104444.1492028-1-maarten.lankhorst@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 15/61] drm/i915: Fix userptr so we do not
 have to worry about obj->mm.lock, v4.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SW5zdGVhZCBvZiBkb2luZyB3aGF0IHdlIGRvIGN1cnJlbnRseSwgd2hpY2ggd2lsbCBuZXZlciB3
b3JrIHdpdGgKUFJPVkVfTE9DS0lORywgZG8gdGhlIHNhbWUgYXMgQU1EIGRvZXMsIGFuZCBzb21l
dGhpbmcgc2ltaWxhciB0bwpyZWxvY2F0aW9uIHNsb3dwYXRoLiBXaGVuIGFsbCBsb2NrcyBhcmUg
ZHJvcHBlZCwgd2UgYWNxdWlyZSB0aGUKcGFnZXMgZm9yIHBpbm5pbmcuIFdoZW4gdGhlIGxvY2tz
IGFyZSB0YWtlbiwgd2UgdHJhbnNmZXIgdGhvc2UKcGFnZXMgaW4gLmdldF9wYWdlcygpIHRvIHRo
ZSBiby4gQXMgYSBmaW5hbCBjaGVjayBiZWZvcmUgaW5zdGFsbGluZwp0aGUgZmVuY2VzLCB3ZSBl
bnN1cmUgdGhhdCB0aGUgbW11IG5vdGlmaWVyIHdhcyBub3QgY2FsbGVkOyBpZiBpdCBpcywKd2Ug
cmV0dXJuIC1FQUdBSU4gdG8gdXNlcnNwYWNlIHRvIHNpZ25hbCBpdCBoYXMgdG8gc3RhcnQgb3Zl
ci4KCkNoYW5nZXMgc2luY2UgdjE6Ci0gVW5iaW5kaW5nIGlzIGRvbmUgaW4gc3VibWl0X2luaXQg
b25seS4gc3VibWl0X2JlZ2luKCkgcmVtb3ZlZC4KLSBNTVVfTk9URklFUiAtPiBNTVVfTk9USUZJ
RVIKQ2hhbmdlcyBzaW5jZSB2MjoKLSBNYWtlIGk5MTUtPm1tLm5vdGlmaWVyIGEgc3BpbmxvY2su
CkNoYW5nZXMgc2luY2UgdjM6Ci0gQWRkIFdBUk5fT04gaWYgdGhlcmUgYXJlIGFueSBwYWdlIHJl
ZmVyZW5jZXMgbGVmdCwgc2hvdWxkIGhhdmUgYmVlbiAwLgotIFJldHVybiAwIG9uIHN1Y2Nlc3Mg
aW4gc3VibWl0X2luaXQoKSwgYnVnIGZyb20gc3BpbmxvY2sgY29udmVyc2lvbi4KLSBSZWxlYXNl
IHB2ZWMgb3V0c2lkZSBvZiBub3RpZmllcl9sb2NrIChUaG9tYXMpLgoKU2lnbmVkLW9mZi1ieTog
TWFhcnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4KLS0t
CiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgICAgfCAgOTQgKyst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmggICAgfCAgMzUgKy0K
IC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oICB8ICAxMCArLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BhZ2VzLmMgICAgIHwgICAyICstCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdXNlcnB0ci5jICAgfCA3NjUgKysrKyst
LS0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICAgICAg
ICAgfCAgIDkgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgICAgICAgICAgICAg
ICB8ICAgNSArLQogNyBmaWxlcyBjaGFuZ2VkLCAzMzQgaW5zZXJ0aW9ucygrKSwgNTg2IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9l
eGVjYnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZl
ci5jCmluZGV4IDg5ZDdlNzk4MGVhZS4uYzlkYjE5OWM0ZDgxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKQEAgLTUyLDE0ICs1MiwxNiBAQCBl
bnVtIHsKIC8qIF9fRVhFQ19PQkpFQ1RfTk9fUkVTRVJWRSBpcyBCSVQoMzEpLCBkZWZpbmVkIGlu
IGk5MTVfdm1hLmggKi8KICNkZWZpbmUgX19FWEVDX09CSkVDVF9IQVNfUElOCQlCSVQoMzApCiAj
ZGVmaW5lIF9fRVhFQ19PQkpFQ1RfSEFTX0ZFTkNFCQlCSVQoMjkpCi0jZGVmaW5lIF9fRVhFQ19P
QkpFQ1RfTkVFRFNfTUFQCQlCSVQoMjgpCi0jZGVmaW5lIF9fRVhFQ19PQkpFQ1RfTkVFRFNfQklB
UwlCSVQoMjcpCi0jZGVmaW5lIF9fRVhFQ19PQkpFQ1RfSU5URVJOQUxfRkxBR1MJKH4wdSA8PCAy
NykgLyogYWxsIG9mIHRoZSBhYm92ZSArICovCisjZGVmaW5lIF9fRVhFQ19PQkpFQ1RfVVNFUlBU
Ul9JTklUCUJJVCgyOCkKKyNkZWZpbmUgX19FWEVDX09CSkVDVF9ORUVEU19NQVAJCUJJVCgyNykK
KyNkZWZpbmUgX19FWEVDX09CSkVDVF9ORUVEU19CSUFTCUJJVCgyNikKKyNkZWZpbmUgX19FWEVD
X09CSkVDVF9JTlRFUk5BTF9GTEFHUwkofjB1IDw8IDI2KSAvKiBhbGwgb2YgdGhlIGFib3ZlICsg
Ki8KICNkZWZpbmUgX19FWEVDX09CSkVDVF9SRVNFUlZFRCAoX19FWEVDX09CSkVDVF9IQVNfUElO
IHwgX19FWEVDX09CSkVDVF9IQVNfRkVOQ0UpCiAKICNkZWZpbmUgX19FWEVDX0hBU19SRUxPQwlC
SVQoMzEpCiAjZGVmaW5lIF9fRVhFQ19FTkdJTkVfUElOTkVECUJJVCgzMCkKLSNkZWZpbmUgX19F
WEVDX0lOVEVSTkFMX0ZMQUdTCSh+MHUgPDwgMzApCisjZGVmaW5lIF9fRVhFQ19VU0VSUFRSX1VT
RUQJQklUKDI5KQorI2RlZmluZSBfX0VYRUNfSU5URVJOQUxfRkxBR1MJKH4wdSA8PCAyOSkKICNk
ZWZpbmUgVVBEQVRFCQkJUElOX09GRlNFVF9GSVhFRAogCiAjZGVmaW5lIEJBVENIX09GRlNFVF9C
SUFTICgyNTYqMTAyNCkKQEAgLTg2NSw2ICs4NjcsMTkgQEAgc3RhdGljIGludCBlYl9sb29rdXBf
dm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAkJfQogCiAJCWViX2FkZF92bWEoZWIs
IGksIGJhdGNoLCB2bWEpOworCisJCWlmIChpOTE1X2dlbV9vYmplY3RfaXNfdXNlcnB0cih2bWEt
Pm9iaikpIHsKKwkJCWVyciA9IGk5MTVfZ2VtX29iamVjdF91c2VycHRyX3N1Ym1pdF9pbml0KHZt
YS0+b2JqKTsKKwkJCWlmIChlcnIpIHsKKwkJCQlpZiAoaSArIDEgPCBlYi0+YnVmZmVyX2NvdW50
KQorCQkJCQllYi0+dm1hW2kgKyAxXS52bWEgPSBOVUxMOworCisJCQkJcmV0dXJuIGVycjsKKwkJ
CX0KKworCQkJZWItPnZtYVtpXS5mbGFncyB8PSBfX0VYRUNfT0JKRUNUX1VTRVJQVFJfSU5JVDsK
KwkJCWViLT5hcmdzLT5mbGFncyB8PSBfX0VYRUNfVVNFUlBUUl9VU0VEOworCQl9CiAJfQogCiAJ
aWYgKHVubGlrZWx5KGViLT5iYXRjaC0+ZmxhZ3MgJiBFWEVDX09CSkVDVF9XUklURSkpIHsKQEAg
LTk2Niw3ICs5ODEsNyBAQCBlYl9nZXRfdm1hKGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIg
KmViLCB1bnNpZ25lZCBsb25nIGhhbmRsZSkKIAl9CiB9CiAKLXN0YXRpYyB2b2lkIGViX3JlbGVh
c2Vfdm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgYm9vbCBmaW5hbCkKK3N0YXRpYyB2
b2lkIGViX3JlbGVhc2Vfdm1hcyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgYm9vbCBmaW5h
bCwgYm9vbCByZWxlYXNlX3VzZXJwdHIpCiB7CiAJY29uc3QgdW5zaWduZWQgaW50IGNvdW50ID0g
ZWItPmJ1ZmZlcl9jb3VudDsKIAl1bnNpZ25lZCBpbnQgaTsKQEAgLTk4MCw2ICs5OTUsMTEgQEAg
c3RhdGljIHZvaWQgZWJfcmVsZWFzZV92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBi
b29sIGZpbmFsKQogCiAJCWViX3VucmVzZXJ2ZV92bWEoZXYpOwogCisJCWlmIChyZWxlYXNlX3Vz
ZXJwdHIgJiYgZXYtPmZsYWdzICYgX19FWEVDX09CSkVDVF9VU0VSUFRSX0lOSVQpIHsKKwkJCWV2
LT5mbGFncyAmPSB+X19FWEVDX09CSkVDVF9VU0VSUFRSX0lOSVQ7CisJCQlpOTE1X2dlbV9vYmpl
Y3RfdXNlcnB0cl9zdWJtaXRfZmluaSh2bWEtPm9iaik7CisJCX0KKwogCQlpZiAoZmluYWwpCiAJ
CQlpOTE1X3ZtYV9wdXQodm1hKTsKIAl9CkBAIC0xOTE1LDYgKzE5MzUsMzEgQEAgc3RhdGljIGlu
dCBlYl9wcmVmYXVsdF9yZWxvY2F0aW9ucyhjb25zdCBzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
YikKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGludCBlYl9yZWluaXRfdXNlcnB0cihzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYikKK3sKKwljb25zdCB1bnNpZ25lZCBpbnQgY291bnQgPSBlYi0+
YnVmZmVyX2NvdW50OworCXVuc2lnbmVkIGludCBpOworCWludCByZXQ7CisKKwlpZiAobGlrZWx5
KCEoZWItPmFyZ3MtPmZsYWdzICYgX19FWEVDX1VTRVJQVFJfVVNFRCkpKQorCQlyZXR1cm4gMDsK
KworCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CisJCXN0cnVjdCBlYl92bWEgKmV2ID0g
JmViLT52bWFbaV07CisKKwkJaWYgKCFpOTE1X2dlbV9vYmplY3RfaXNfdXNlcnB0cihldi0+dm1h
LT5vYmopKQorCQkJY29udGludWU7CisKKwkJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3VzZXJwdHJf
c3VibWl0X2luaXQoZXYtPnZtYS0+b2JqKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiByZXQ7CisK
KwkJZXYtPmZsYWdzIHw9IF9fRVhFQ19PQkpFQ1RfVVNFUlBUUl9JTklUOworCX0KKworCXJldHVy
biAwOworfQorCiBzdGF0aWMgbm9pbmxpbmUgaW50IGViX3JlbG9jYXRlX3BhcnNlX3Nsb3coc3Ry
dWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJCQkJCSAgIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogewpAQCAtMTkyOSw3ICsxOTc0LDcgQEAgc3RhdGljIG5vaW5saW5lIGludCBlYl9yZWxvY2F0
ZV9wYXJzZV9zbG93KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCX0KIAogCS8qIFdlIG1h
eSBwcm9jZXNzIGFub3RoZXIgZXhlY2J1ZmZlciBkdXJpbmcgdGhlIHVubG9jay4uLiAqLwotCWVi
X3JlbGVhc2Vfdm1hcyhlYiwgZmFsc2UpOworCWViX3JlbGVhc2Vfdm1hcyhlYiwgZmFsc2UsIHRy
dWUpOwogCWk5MTVfZ2VtX3d3X2N0eF9maW5pKCZlYi0+d3cpOwogCiAJaWYgKHJxKSB7CkBAIC0x
OTcwLDEwICsyMDE1LDggQEAgc3RhdGljIG5vaW5saW5lIGludCBlYl9yZWxvY2F0ZV9wYXJzZV9z
bG93KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLAogCQllcnIgPSAwOwogCX0KIAotI2lmZGVm
IENPTkZJR19NTVVfTk9USUZJRVIKIAlpZiAoIWVycikKLQkJZmx1c2hfd29ya3F1ZXVlKGViLT5p
OTE1LT5tbS51c2VycHRyX3dxKTsKLSNlbmRpZgorCQllcnIgPSBlYl9yZWluaXRfdXNlcnB0cihl
Yik7CiAKIGVycl9yZWxvY2s6CiAJaTkxNV9nZW1fd3dfY3R4X2luaXQoJmViLT53dywgdHJ1ZSk7
CkBAIC0yMDM1LDcgKzIwNzgsNyBAQCBzdGF0aWMgbm9pbmxpbmUgaW50IGViX3JlbG9jYXRlX3Bh
cnNlX3Nsb3coc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAKIGVycjoKIAlpZiAoZXJyID09
IC1FREVBRExLKSB7Ci0JCWViX3JlbGVhc2Vfdm1hcyhlYiwgZmFsc2UpOworCQllYl9yZWxlYXNl
X3ZtYXMoZWIsIGZhbHNlLCBmYWxzZSk7CiAJCWVyciA9IGk5MTVfZ2VtX3d3X2N0eF9iYWNrb2Zm
KCZlYi0+d3cpOwogCQlpZiAoIWVycikKIAkJCWdvdG8gcmVwZWF0X3ZhbGlkYXRlOwpAQCAtMjEz
Miw3ICsyMTc1LDcgQEAgc3RhdGljIGludCBlYl9yZWxvY2F0ZV9wYXJzZShzdHJ1Y3QgaTkxNV9l
eGVjYnVmZmVyICplYikKIAogZXJyOgogCWlmIChlcnIgPT0gLUVERUFETEspIHsKLQkJZWJfcmVs
ZWFzZV92bWFzKGViLCBmYWxzZSk7CisJCWViX3JlbGVhc2Vfdm1hcyhlYiwgZmFsc2UsIGZhbHNl
KTsKIAkJZXJyID0gaTkxNV9nZW1fd3dfY3R4X2JhY2tvZmYoJmViLT53dyk7CiAJCWlmICghZXJy
KQogCQkJZ290byByZXRyeTsKQEAgLTIyMDcsNiArMjI1MCwzMCBAQCBzdGF0aWMgaW50IGViX21v
dmVfdG9fZ3B1KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQkJCQkJICAgICAgZmxhZ3Mg
fCBfX0VYRUNfT0JKRUNUX05PX1JFU0VSVkUpOwogCX0KIAorI2lmZGVmIENPTkZJR19NTVVfTk9U
SUZJRVIKKwlpZiAoIWVyciAmJiAoZWItPmFyZ3MtPmZsYWdzICYgX19FWEVDX1VTRVJQVFJfVVNF
RCkpIHsKKwkJc3Bpbl9sb2NrKCZlYi0+aTkxNS0+bW0ubm90aWZpZXJfbG9jayk7CisKKwkJLyoK
KwkJICogY291bnQgaXMgYWx3YXlzIGF0IGxlYXN0IDEsIG90aGVyd2lzZSBfX0VYRUNfVVNFUlBU
Ul9VU0VECisJCSAqIGNvdWxkIG5vdCBoYXZlIGJlZW4gc2V0CisJCSAqLworCQlmb3IgKGkgPSBj
b3VudCAtIDE7IGk7IGktLSkgeworCQkJc3RydWN0IGViX3ZtYSAqZXYgPSAmZWItPnZtYVtpXTsK
KwkJCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPSBldi0+dm1hLT5vYmo7CisKKwkJ
CWlmICghaTkxNV9nZW1fb2JqZWN0X2lzX3VzZXJwdHIob2JqKSkKKwkJCQljb250aW51ZTsKKwor
CQkJZXJyID0gaTkxNV9nZW1fb2JqZWN0X3VzZXJwdHJfc3VibWl0X2RvbmUob2JqKTsKKwkJCWlm
IChlcnIpCisJCQkJYnJlYWs7CisJCX0KKworCQlzcGluX3VubG9jaygmZWItPmk5MTUtPm1tLm5v
dGlmaWVyX2xvY2spOworCX0KKyNlbmRpZgorCiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8g
ZXJyX3NraXA7CiAKQEAgLTMzNDcsNyArMzQxNCw3IEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIo
c3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAogCWVyciA9IGViX2xvb2t1cF92bWFzKCZlYik7CiAJ
aWYgKGVycikgewotCQllYl9yZWxlYXNlX3ZtYXMoJmViLCB0cnVlKTsKKwkJZWJfcmVsZWFzZV92
bWFzKCZlYiwgdHJ1ZSwgdHJ1ZSk7CiAJCWdvdG8gZXJyX2VuZ2luZTsKIAl9CiAKQEAgLTM0MTks
NiArMzQ4Niw3IEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRl
diwKIAogCXRyYWNlX2k5MTVfcmVxdWVzdF9xdWV1ZShlYi5yZXF1ZXN0LCBlYi5iYXRjaF9mbGFn
cyk7CiAJZXJyID0gZWJfc3VibWl0KCZlYiwgYmF0Y2gpOworCiBlcnJfcmVxdWVzdDoKIAlpOTE1
X3JlcXVlc3RfZ2V0KGViLnJlcXVlc3QpOwogCWViX3JlcXVlc3RfYWRkKCZlYik7CkBAIC0zNDM5
LDcgKzM1MDcsNyBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYsCiAJaTkxNV9yZXF1ZXN0X3B1dChlYi5yZXF1ZXN0KTsKIAogZXJyX3ZtYToKLQllYl9yZWxl
YXNlX3ZtYXMoJmViLCB0cnVlKTsKKwllYl9yZWxlYXNlX3ZtYXMoJmViLCB0cnVlLCB0cnVlKTsK
IAlpZiAoZWIudHJhbXBvbGluZSkKIAkJaTkxNV92bWFfdW5waW4oZWIudHJhbXBvbGluZSk7CiAJ
V0FSTl9PTihlcnIgPT0gLUVERUFETEspOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX29iamVjdC5oCmluZGV4IGEzNzc0ZTgwYWVkZC4uYWJjY2U0ZDI4NWI1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCkBAIC0zMyw2ICszMyw3IEBAIGk5
MTVfZ2VtX29iamVjdF9jcmVhdGVfc2htZW1fZnJvbV9kYXRhKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICppOTE1LAogCQkJCSAgICAgICBjb25zdCB2b2lkICpkYXRhLCByZXNvdXJjZV9zaXplX3Qg
c2l6ZSk7CiAKIGV4dGVybiBjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdF9vcHMgaTkx
NV9nZW1fc2htZW1fb3BzOworCiB2b2lkIF9faTkxNV9nZW1fb2JqZWN0X3JlbGVhc2Vfc2htZW0o
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJCQkgICAgIHN0cnVjdCBzZ190YWJs
ZSAqcGFnZXMsCiAJCQkJICAgICBib29sIG5lZWRzX2NsZmx1c2gpOwpAQCAtMjIyLDEyICsyMjMs
NiBAQCBpOTE1X2dlbV9vYmplY3RfbmV2ZXJfbW1hcChjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqKQogCXJldHVybiBpOTE1X2dlbV9vYmplY3RfdHlwZV9oYXMob2JqLCBJOTE1
X0dFTV9PQkpFQ1RfTk9fTU1BUCk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgYm9vbAotaTkxNV9nZW1f
b2JqZWN0X25lZWRzX2FzeW5jX2NhbmNlbChjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqb2JqKQotewotCXJldHVybiBpOTE1X2dlbV9vYmplY3RfdHlwZV9oYXMob2JqLCBJOTE1X0dF
TV9PQkpFQ1RfQVNZTkNfQ0FOQ0VMKTsKLX0KLQogc3RhdGljIGlubGluZSBib29sCiBpOTE1X2dl
bV9vYmplY3RfaXNfZnJhbWVidWZmZXIoY29uc3Qgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaikKIHsKQEAgLTUyOCwxNiArNTIzLDYgQEAgdm9pZCBfX2k5MTVfZ2VtX29iamVjdF9mbHVz
aF9mcm9udGJ1ZmZlcihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogdm9pZCBfX2k5
MTVfZ2VtX29iamVjdF9pbnZhbGlkYXRlX2Zyb250YnVmZmVyKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmosCiAJCQkJCSAgICAgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbik7CiAKLXN0
YXRpYyBpbmxpbmUgYm9vbAotaTkxNV9nZW1fb2JqZWN0X2lzX3VzZXJwdHIoc3RydWN0IGRybV9p
OTE1X2dlbV9vYmplY3QgKm9iaikKLXsKLSNpZmRlZiBDT05GSUdfTU1VX05PVElGSUVSCi0JcmV0
dXJuIG9iai0+dXNlcnB0ci5tbTsKLSNlbHNlCi0JcmV0dXJuIGZhbHNlOwotI2VuZGlmCi19Ci0K
IHN0YXRpYyBpbmxpbmUgdm9pZAogaTkxNV9nZW1fb2JqZWN0X2ZsdXNoX2Zyb250YnVmZmVyKHN0
cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCQkJICBlbnVtIGZiX29wX29yaWdpbiBv
cmlnaW4pCkBAIC01NTQsNCArNTM5LDIyIEBAIGk5MTVfZ2VtX29iamVjdF9pbnZhbGlkYXRlX2Zy
b250YnVmZmVyKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiAJCV9faTkxNV9nZW1f
b2JqZWN0X2ludmFsaWRhdGVfZnJvbnRidWZmZXIob2JqLCBvcmlnaW4pOwogfQogCisjaWZkZWYg
Q09ORklHX01NVV9OT1RJRklFUgorc3RhdGljIGlubGluZSBib29sCitpOTE1X2dlbV9vYmplY3Rf
aXNfdXNlcnB0cihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQoreworCXJldHVybiBv
YmotPnVzZXJwdHIubm90aWZpZXIubW07Cit9CisKK2ludCBpOTE1X2dlbV9vYmplY3RfdXNlcnB0
cl9zdWJtaXRfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKTsKK2ludCBpOTE1
X2dlbV9vYmplY3RfdXNlcnB0cl9zdWJtaXRfZG9uZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVj
dCAqb2JqKTsKK3ZvaWQgaTkxNV9nZW1fb2JqZWN0X3VzZXJwdHJfc3VibWl0X2Zpbmkoc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaik7CisjZWxzZQorc3RhdGljIGlubGluZSBib29sIGk5
MTVfZ2VtX29iamVjdF9pc191c2VycHRyKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmop
IHsgcmV0dXJuIGZhbHNlOyB9CisKK3N0YXRpYyBpbmxpbmUgaW50IGk5MTVfZ2VtX29iamVjdF91
c2VycHRyX3N1Ym1pdF9pbml0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopIHsgR0VN
X0JVR19PTigxKTsgcmV0dXJuIC1FTk9ERVY7IH0KK3N0YXRpYyBpbmxpbmUgaW50IGk5MTVfZ2Vt
X29iamVjdF91c2VycHRyX3N1Ym1pdF9kb25lKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpv
YmopIHsgR0VNX0JVR19PTigxKTsgcmV0dXJuIC1FTk9ERVY7IH0KK3N0YXRpYyBpbmxpbmUgdm9p
ZCBpOTE1X2dlbV9vYmplY3RfdXNlcnB0cl9zdWJtaXRfZmluaShzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqKSB7IEdFTV9CVUdfT04oMSk7IH0KKyNlbmRpZgorCiAjZW5kaWYKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfdHlwZXMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfdHlwZXMuaAppbmRleCAx
ZjcyOWU2Mzg2N2MuLjBhYTM5MWY1ZDczYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9vYmplY3RfdHlwZXMuaApAQCAtNyw2ICs3LDggQEAKICNpZm5kZWYgX19J
OTE1X0dFTV9PQkpFQ1RfVFlQRVNfSF9fCiAjZGVmaW5lIF9fSTkxNV9HRU1fT0JKRUNUX1RZUEVT
X0hfXwogCisjaW5jbHVkZSA8bGludXgvbW11X25vdGlmaWVyLmg+CisKICNpbmNsdWRlIDxkcm0v
ZHJtX2dlbS5oPgogI2luY2x1ZGUgPHVhcGkvZHJtL2k5MTVfZHJtLmg+CiAKQEAgLTM0LDcgKzM2
LDYgQEAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Rfb3BzIHsKICNkZWZpbmUgSTkxNV9HRU1f
T0JKRUNUX0lTX1NIUklOS0FCTEUJQklUKDIpCiAjZGVmaW5lIEk5MTVfR0VNX09CSkVDVF9JU19Q
Uk9YWQlCSVQoMykKICNkZWZpbmUgSTkxNV9HRU1fT0JKRUNUX05PX01NQVAJCUJJVCg0KQotI2Rl
ZmluZSBJOTE1X0dFTV9PQkpFQ1RfQVNZTkNfQ0FOQ0VMCUJJVCg1KQogCiAJLyogSW50ZXJmYWNl
IGJldHdlZW4gdGhlIEdFTSBvYmplY3QgYW5kIGl0cyBiYWNraW5nIHN0b3JhZ2UuCiAJICogZ2V0
X3BhZ2VzKCkgaXMgY2FsbGVkIG9uY2UgcHJpb3IgdG8gdGhlIHVzZSBvZiB0aGUgYXNzb2NpYXRl
ZCBzZXQKQEAgLTI5MiwxMCArMjkzLDExIEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0IHsK
ICNpZmRlZiBDT05GSUdfTU1VX05PVElGSUVSCiAJCXN0cnVjdCBpOTE1X2dlbV91c2VycHRyIHsK
IAkJCXVpbnRwdHJfdCBwdHI7CisJCQl1bnNpZ25lZCBsb25nIG5vdGlmaWVyX3NlcTsKIAotCQkJ
c3RydWN0IGk5MTVfbW1fc3RydWN0ICptbTsKLQkJCXN0cnVjdCBpOTE1X21tdV9vYmplY3QgKm1t
dV9vYmplY3Q7Ci0JCQlzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcms7CisJCQlzdHJ1Y3QgbW11X2lu
dGVydmFsX25vdGlmaWVyIG5vdGlmaWVyOworCQkJc3RydWN0IHBhZ2UgKipwdmVjOworCQkJaW50
IHBhZ2VfcmVmOwogCQl9IHVzZXJwdHI7CiAjZW5kaWYKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BhZ2VzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fcGFnZXMuYwppbmRleCAxYzY0NmQ1ZjgwMmIuLmI4MWYyNTNmNWRjOSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BhZ2VzLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BhZ2VzLmMKQEAgLTIyNSw3ICsyMjUs
NyBAQCBpbnQgX19pOTE1X2dlbV9vYmplY3RfcHV0X3BhZ2VzKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmopCiAJICogZ2V0X3BhZ2VzIGJhY2tlbmRzIHdlIHNob3VsZCBiZSBiZXR0ZXIg
YWJsZSB0byBoYW5kbGUgdGhlCiAJICogY2FuY2VsbGF0aW9uIG9mIHRoZSBhc3luYyB0YXNrIGlu
IGEgbW9yZSB1bmlmb3JtIG1hbm5lci4KIAkgKi8KLQlpZiAoIXBhZ2VzICYmICFpOTE1X2dlbV9v
YmplY3RfbmVlZHNfYXN5bmNfY2FuY2VsKG9iaikpCisJaWYgKCFwYWdlcykKIAkJcGFnZXMgPSBF
UlJfUFRSKC1FSU5WQUwpOwogCiAJaWYgKCFJU19FUlIocGFnZXMpKQpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3VzZXJwdHIuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV91c2VycHRyLmMKaW5kZXggYTJiN2Y2ZGIyZjFhLi41OGE0MjZi
ZWMyZTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV91c2Vy
cHRyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3VzZXJwdHIuYwpA
QCAtMiwxMCArMiwzOSBAQAogICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVAogICoKICAq
IENvcHlyaWdodCDCqSAyMDEyLTIwMTQgSW50ZWwgQ29ycG9yYXRpb24KKyAqCisgICogQmFzZWQg
b24gYW1kZ3B1X21uLCB3aGljaCBiZWFycyB0aGUgZm9sbG93aW5nIG5vdGljZToKKyAqCisgKiBD
b3B5cmlnaHQgMjAxNCBBZHZhbmNlZCBNaWNybyBEZXZpY2VzLCBJbmMuCisgKiBBbGwgUmlnaHRz
IFJlc2VydmVkLgorICoKKyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2Yg
Y2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdh
cmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlCisgKiAiU29mdHdhcmUi
KSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5n
CisgKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwg
bWVyZ2UsIHB1Ymxpc2gsCisgKiBkaXN0cmlidXRlLCBzdWIgbGljZW5zZSwgYW5kL29yIHNlbGwg
Y29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvCisgKiBwZXJtaXQgcGVyc29ucyB0byB3aG9t
IHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8KKyAqIHRoZSBm
b2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFT
IElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICogSU1QTElF
RCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFO
VEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OLUlO
RlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBDT1BZUklHSFQgSE9MREVSUywg
QVVUSE9SUyBBTkQvT1IgSVRTIFNVUFBMSUVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwKKyAq
IERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05U
UkFDVCwgVE9SVCBPUgorICogT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBD
T05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRQorICogVVNFIE9SIE9USEVSIERFQUxJ
TkdTIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBh
bmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZQorICogbmV4dCBwYXJhZ3Jh
cGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlv
bnMKKyAqIG9mIHRoZSBTb2Z0d2FyZS4KKyAqCisgKi8KKy8qCisgKiBBdXRob3JzOgorICogICAg
Q2hyaXN0aWFuIEvDtm5pZyA8Y2hyaXN0aWFuLmtvZW5pZ0BhbWQuY29tPgogICovCiAKICNpbmNs
dWRlIDxsaW51eC9tbXVfY29udGV4dC5oPgotI2luY2x1ZGUgPGxpbnV4L21tdV9ub3RpZmllci5o
PgogI2luY2x1ZGUgPGxpbnV4L21lbXBvbGljeS5oPgogI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4K
ICNpbmNsdWRlIDxsaW51eC9zY2hlZC9tbS5oPgpAQCAtMTUsMzc0ICs0NCwxMDkgQEAKICNpbmNs
dWRlICJpOTE1X2dlbV9vYmplY3QuaCIKICNpbmNsdWRlICJpOTE1X3NjYXR0ZXJsaXN0LmgiCiAK
LSNpZiBkZWZpbmVkKENPTkZJR19NTVVfTk9USUZJRVIpCi0KLXN0cnVjdCBpOTE1X21tX3N0cnVj
dCB7Ci0Jc3RydWN0IG1tX3N0cnVjdCAqbW07Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTU7Ci0Jc3RydWN0IGk5MTVfbW11X25vdGlmaWVyICptbjsKLQlzdHJ1Y3QgaGxpc3Rfbm9kZSBu
b2RlOwotCXN0cnVjdCBrcmVmIGtyZWY7Ci0Jc3RydWN0IHJjdV93b3JrIHdvcms7Ci19OwotCi0j
aW5jbHVkZSA8bGludXgvaW50ZXJ2YWxfdHJlZS5oPgotCi1zdHJ1Y3QgaTkxNV9tbXVfbm90aWZp
ZXIgewotCXNwaW5sb2NrX3QgbG9jazsKLQlzdHJ1Y3QgaGxpc3Rfbm9kZSBub2RlOwotCXN0cnVj
dCBtbXVfbm90aWZpZXIgbW47Ci0Jc3RydWN0IHJiX3Jvb3RfY2FjaGVkIG9iamVjdHM7Ci0Jc3Ry
dWN0IGk5MTVfbW1fc3RydWN0ICptbTsKLX07Ci0KLXN0cnVjdCBpOTE1X21tdV9vYmplY3Qgewot
CXN0cnVjdCBpOTE1X21tdV9ub3RpZmllciAqbW47Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iajsKLQlzdHJ1Y3QgaW50ZXJ2YWxfdHJlZV9ub2RlIGl0OwotfTsKLQotc3RhdGljIHZv
aWQgYWRkX29iamVjdChzdHJ1Y3QgaTkxNV9tbXVfb2JqZWN0ICptbykKLXsKLQlHRU1fQlVHX09O
KCFSQl9FTVBUWV9OT0RFKCZtby0+aXQucmIpKTsKLQlpbnRlcnZhbF90cmVlX2luc2VydCgmbW8t
Pml0LCAmbW8tPm1uLT5vYmplY3RzKTsKLX0KLQotc3RhdGljIHZvaWQgZGVsX29iamVjdChzdHJ1
Y3QgaTkxNV9tbXVfb2JqZWN0ICptbykKLXsKLQlpZiAoUkJfRU1QVFlfTk9ERSgmbW8tPml0LnJi
KSkKLQkJcmV0dXJuOwotCi0JaW50ZXJ2YWxfdHJlZV9yZW1vdmUoJm1vLT5pdCwgJm1vLT5tbi0+
b2JqZWN0cyk7Ci0JUkJfQ0xFQVJfTk9ERSgmbW8tPml0LnJiKTsKLX0KLQotc3RhdGljIHZvaWQK
LV9faTkxNV9nZW1fdXNlcnB0cl9zZXRfYWN0aXZlKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmosIGJvb2wgdmFsdWUpCi17Ci0Jc3RydWN0IGk5MTVfbW11X29iamVjdCAqbW8gPSBvYmot
PnVzZXJwdHIubW11X29iamVjdDsKLQotCS8qCi0JICogRHVyaW5nIG1tX2ludmFsaWRhdGVfcmFu
Z2Ugd2UgbmVlZCB0byBjYW5jZWwgYW55IHVzZXJwdHIgdGhhdAotCSAqIG92ZXJsYXBzIHRoZSBy
YW5nZSBiZWluZyBpbnZhbGlkYXRlZC4gRG9pbmcgc28gcmVxdWlyZXMgdGhlCi0JICogc3RydWN0
X211dGV4LCBhbmQgdGhhdCByaXNrcyByZWN1cnNpb24uIEluIG9yZGVyIHRvIGNhdXNlCi0JICog
cmVjdXJzaW9uLCB0aGUgdXNlciBtdXN0IGFsaWFzIHRoZSB1c2VycHRyIGFkZHJlc3Mgc3BhY2Ug
d2l0aAotCSAqIGEgR1RUIG1tYXBwaW5nIChwb3NzaWJsZSB3aXRoIGEgTUFQX0ZJWEVEKSAtIHRo
ZW4gd2hlbiB3ZSBoYXZlCi0JICogdG8gaW52YWxpZGF0ZSB0aGF0IG1tYXBpbmcsIG1tX2ludmFs
aWRhdGVfcmFuZ2UgaXMgY2FsbGVkIHdpdGgKLQkgKiB0aGUgdXNlcnB0ciBhZGRyZXNzICphbmQq
IHRoZSBzdHJ1Y3RfbXV0ZXggaGVsZC4gIFRvIHByZXZlbnQgdGhhdAotCSAqIHdlIHNldCBhIGZs
YWcgdW5kZXIgdGhlIGk5MTVfbW11X25vdGlmaWVyIHNwaW5sb2NrIHRvIGluZGljYXRlCi0JICog
d2hldGhlciB0aGlzIG9iamVjdCBpcyB2YWxpZC4KLQkgKi8KLQlpZiAoIW1vKQotCQlyZXR1cm47
Ci0KLQlzcGluX2xvY2soJm1vLT5tbi0+bG9jayk7Ci0JaWYgKHZhbHVlKQotCQlhZGRfb2JqZWN0
KG1vKTsKLQllbHNlCi0JCWRlbF9vYmplY3QobW8pOwotCXNwaW5fdW5sb2NrKCZtby0+bW4tPmxv
Y2spOwotfQorI2lmZGVmIENPTkZJR19NTVVfTk9USUZJRVIKIAotc3RhdGljIGludAotdXNlcnB0
cl9tbl9pbnZhbGlkYXRlX3JhbmdlX3N0YXJ0KHN0cnVjdCBtbXVfbm90aWZpZXIgKl9tbiwKLQkJ
CQkgIGNvbnN0IHN0cnVjdCBtbXVfbm90aWZpZXJfcmFuZ2UgKnJhbmdlKQorLyoqCisgKiBpOTE1
X2dlbV91c2VycHRyX2ludmFsaWRhdGUgLSBjYWxsYmFjayB0byBub3RpZnkgYWJvdXQgbW0gY2hh
bmdlCisgKgorICogQG1uaTogdGhlIHJhbmdlIChtbSkgaXMgYWJvdXQgdG8gdXBkYXRlCisgKiBA
cmFuZ2U6IGRldGFpbHMgb24gdGhlIGludmFsaWRhdGlvbgorICogQGN1cl9zZXE6IFZhbHVlIHRv
IHBhc3MgdG8gbW11X2ludGVydmFsX3NldF9zZXEoKQorICoKKyAqIEJsb2NrIGZvciBvcGVyYXRp
b25zIG9uIEJPcyB0byBmaW5pc2ggYW5kIG1hcmsgcGFnZXMgYXMgYWNjZXNzZWQgYW5kCisgKiBw
b3RlbnRpYWxseSBkaXJ0eS4KKyAqLworc3RhdGljIGJvb2wgaTkxNV9nZW1fdXNlcnB0cl9pbnZh
bGlkYXRlKHN0cnVjdCBtbXVfaW50ZXJ2YWxfbm90aWZpZXIgKm1uaSwKKwkJCQkJY29uc3Qgc3Ry
dWN0IG1tdV9ub3RpZmllcl9yYW5nZSAqcmFuZ2UsCisJCQkJCXVuc2lnbmVkIGxvbmcgY3VyX3Nl
cSkKIHsKLQlzdHJ1Y3QgaTkxNV9tbXVfbm90aWZpZXIgKm1uID0KLQkJY29udGFpbmVyX29mKF9t
biwgc3RydWN0IGk5MTVfbW11X25vdGlmaWVyLCBtbik7Ci0Jc3RydWN0IGludGVydmFsX3RyZWVf
bm9kZSAqaXQ7Ci0JdW5zaWduZWQgbG9uZyBlbmQ7Ci0JaW50IHJldCA9IDA7Ci0KLQlpZiAoUkJf
RU1QVFlfUk9PVCgmbW4tPm9iamVjdHMucmJfcm9vdCkpCi0JCXJldHVybiAwOwotCi0JLyogaW50
ZXJ2YWwgcmFuZ2VzIGFyZSBpbmNsdXNpdmUsIGJ1dCBpbnZhbGlkYXRlIHJhbmdlIGlzIGV4Y2x1
c2l2ZSAqLwotCWVuZCA9IHJhbmdlLT5lbmQgLSAxOwotCi0Jc3Bpbl9sb2NrKCZtbi0+bG9jayk7
Ci0JaXQgPSBpbnRlcnZhbF90cmVlX2l0ZXJfZmlyc3QoJm1uLT5vYmplY3RzLCByYW5nZS0+c3Rh
cnQsIGVuZCk7Ci0Jd2hpbGUgKGl0KSB7Ci0JCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpv
Ymo7Ci0KLQkJaWYgKCFtbXVfbm90aWZpZXJfcmFuZ2VfYmxvY2thYmxlKHJhbmdlKSkgewotCQkJ
cmV0ID0gLUVBR0FJTjsKLQkJCWJyZWFrOwotCQl9CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaiA9IGNvbnRhaW5lcl9vZihtbmksIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0LCB1
c2VycHRyLm5vdGlmaWVyKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5
MTUob2JqLT5iYXNlLmRldik7CisJbG9uZyByOwogCi0JCS8qCi0JCSAqIFRoZSBtbXVfb2JqZWN0
IGlzIHJlbGVhc2VkIGxhdGUgd2hlbiBkZXN0cm95aW5nIHRoZQotCQkgKiBHRU0gb2JqZWN0IHNv
IGl0IGlzIGVudGlyZWx5IHBvc3NpYmxlIHRvIGdhaW4gYQotCQkgKiByZWZlcmVuY2Ugb24gYW4g
b2JqZWN0IGluIHRoZSBwcm9jZXNzIG9mIGJlaW5nIGZyZWVkCi0JCSAqIHNpbmNlIG91ciBzZXJp
YWxpc2F0aW9uIGlzIHZpYSB0aGUgc3BpbmxvY2sgYW5kIG5vdAotCQkgKiB0aGUgc3RydWN0X211
dGV4IC0gYW5kIGNvbnNlcXVlbnRseSB1c2UgaXQgYWZ0ZXIgaXQKLQkJICogaXMgZnJlZWQgYW5k
IHRoZW4gZG91YmxlIGZyZWUgaXQuIFRvIHByZXZlbnQgdGhhdAotCQkgKiB1c2UtYWZ0ZXItZnJl
ZSB3ZSBvbmx5IGFjcXVpcmUgYSByZWZlcmVuY2Ugb24gdGhlCi0JCSAqIG9iamVjdCBpZiBpdCBp
cyBub3QgaW4gdGhlIHByb2Nlc3Mgb2YgYmVpbmcgZGVzdHJveWVkLgotCQkgKi8KLQkJb2JqID0g
Y29udGFpbmVyX29mKGl0LCBzdHJ1Y3QgaTkxNV9tbXVfb2JqZWN0LCBpdCktPm9iajsKLQkJaWYg
KCFrcmVmX2dldF91bmxlc3NfemVybygmb2JqLT5iYXNlLnJlZmNvdW50KSkgewotCQkJaXQgPSBp
bnRlcnZhbF90cmVlX2l0ZXJfbmV4dChpdCwgcmFuZ2UtPnN0YXJ0LCBlbmQpOwotCQkJY29udGlu
dWU7Ci0JCX0KLQkJc3Bpbl91bmxvY2soJm1uLT5sb2NrKTsKKwlpZiAoIW1tdV9ub3RpZmllcl9y
YW5nZV9ibG9ja2FibGUocmFuZ2UpKQorCQlyZXR1cm4gZmFsc2U7CiAKLQkJcmV0ID0gaTkxNV9n
ZW1fb2JqZWN0X3VuYmluZChvYmosCi0JCQkJCSAgICAgSTkxNV9HRU1fT0JKRUNUX1VOQklORF9B
Q1RJVkUgfAotCQkJCQkgICAgIEk5MTVfR0VNX09CSkVDVF9VTkJJTkRfQkFSUklFUik7Ci0JCWlm
IChyZXQgPT0gMCkKLQkJCXJldCA9IF9faTkxNV9nZW1fb2JqZWN0X3B1dF9wYWdlcyhvYmopOwot
CQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4gcmV0Owor
CXNwaW5fbG9jaygmaTkxNS0+bW0ubm90aWZpZXJfbG9jayk7CiAKLQkJc3Bpbl9sb2NrKCZtbi0+
bG9jayk7CisJbW11X2ludGVydmFsX3NldF9zZXEobW5pLCBjdXJfc2VxKTsKIAotCQkvKgotCQkg
KiBBcyB3ZSBkbyBub3QgKHlldCkgcHJvdGVjdCB0aGUgbW11IGZyb20gY29uY3VycmVudCBpbnNl
cnRpb24KLQkJICogb3ZlciB0aGlzIHJhbmdlLCB0aGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCB0
aGlzIHNlYXJjaCB3aWxsCi0JCSAqIHRlcm1pbmF0ZSBnaXZlbiBhIHBhdGhvbG9naWMgd29ya2xv
YWQuCi0JCSAqLwotCQlpdCA9IGludGVydmFsX3RyZWVfaXRlcl9maXJzdCgmbW4tPm9iamVjdHMs
IHJhbmdlLT5zdGFydCwgZW5kKTsKLQl9Ci0Jc3Bpbl91bmxvY2soJm1uLT5sb2NrKTsKKwlzcGlu
X3VubG9jaygmaTkxNS0+bW0ubm90aWZpZXJfbG9jayk7CiAKLQlyZXR1cm4gcmV0OworCS8qIHdl
IHdpbGwgdW5iaW5kIG9uIG5leHQgc3VibWlzc2lvbiwgc3RpbGwgaGF2ZSB1c2VycHRyIHBpbnMg
Ki8KKwlyID0gZG1hX3Jlc3Zfd2FpdF90aW1lb3V0X3JjdShvYmotPmJhc2UucmVzdiwgdHJ1ZSwg
ZmFsc2UsCisJCQkJICAgICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQpOworCWlmIChyIDw9IDApCisJ
CWRybV9lcnIoJmk5MTUtPmRybSwgIiglbGQpIGZhaWxlZCB0byB3YWl0IGZvciBpZGxlXG4iLCBy
KTsKIAorCXJldHVybiB0cnVlOwogfQogCi1zdGF0aWMgY29uc3Qgc3RydWN0IG1tdV9ub3RpZmll
cl9vcHMgaTkxNV9nZW1fdXNlcnB0cl9ub3RpZmllciA9IHsKLQkuaW52YWxpZGF0ZV9yYW5nZV9z
dGFydCA9IHVzZXJwdHJfbW5faW52YWxpZGF0ZV9yYW5nZV9zdGFydCwKK3N0YXRpYyBjb25zdCBz
dHJ1Y3QgbW11X2ludGVydmFsX25vdGlmaWVyX29wcyBpOTE1X2dlbV91c2VycHRyX25vdGlmaWVy
X29wcyA9IHsKKwkuaW52YWxpZGF0ZSA9IGk5MTVfZ2VtX3VzZXJwdHJfaW52YWxpZGF0ZSwKIH07
CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV9tbXVfbm90aWZpZXIgKgotaTkxNV9tbXVfbm90aWZpZXJf
Y3JlYXRlKHN0cnVjdCBpOTE1X21tX3N0cnVjdCAqbW0pCi17Ci0Jc3RydWN0IGk5MTVfbW11X25v
dGlmaWVyICptbjsKLQotCW1uID0ga21hbGxvYyhzaXplb2YoKm1uKSwgR0ZQX0tFUk5FTCk7Ci0J
aWYgKG1uID09IE5VTEwpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwotCi0Jc3Bpbl9sb2Nr
X2luaXQoJm1uLT5sb2NrKTsKLQltbi0+bW4ub3BzID0gJmk5MTVfZ2VtX3VzZXJwdHJfbm90aWZp
ZXI7Ci0JbW4tPm9iamVjdHMgPSBSQl9ST09UX0NBQ0hFRDsKLQltbi0+bW0gPSBtbTsKLQotCXJl
dHVybiBtbjsKLX0KLQotc3RhdGljIHZvaWQKLWk5MTVfZ2VtX3VzZXJwdHJfcmVsZWFzZV9fbW11
X25vdGlmaWVyKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCi17Ci0Jc3RydWN0IGk5
MTVfbW11X29iamVjdCAqbW87Ci0KLQltbyA9IGZldGNoX2FuZF96ZXJvKCZvYmotPnVzZXJwdHIu
bW11X29iamVjdCk7Ci0JaWYgKCFtbykKLQkJcmV0dXJuOwotCi0Jc3Bpbl9sb2NrKCZtby0+bW4t
PmxvY2spOwotCWRlbF9vYmplY3QobW8pOwotCXNwaW5fdW5sb2NrKCZtby0+bW4tPmxvY2spOwot
CWtmcmVlKG1vKTsKLX0KLQotc3RhdGljIHN0cnVjdCBpOTE1X21tdV9ub3RpZmllciAqCi1pOTE1
X21tdV9ub3RpZmllcl9maW5kKHN0cnVjdCBpOTE1X21tX3N0cnVjdCAqbW0pCi17Ci0Jc3RydWN0
IGk5MTVfbW11X25vdGlmaWVyICptbiwgKm9sZDsKLQlpbnQgZXJyOwotCi0JbW4gPSBSRUFEX09O
Q0UobW0tPm1uKTsKLQlpZiAobGlrZWx5KG1uKSkKLQkJcmV0dXJuIG1uOwotCi0JbW4gPSBpOTE1
X21tdV9ub3RpZmllcl9jcmVhdGUobW0pOwotCWlmIChJU19FUlIobW4pKQotCQlyZXR1cm4gbW47
Ci0KLQllcnIgPSBtbXVfbm90aWZpZXJfcmVnaXN0ZXIoJm1uLT5tbiwgbW0tPm1tKTsKLQlpZiAo
ZXJyKSB7Ci0JCWtmcmVlKG1uKTsKLQkJcmV0dXJuIEVSUl9QVFIoZXJyKTsKLQl9Ci0KLQlvbGQg
PSBjbXB4Y2hnKCZtbS0+bW4sIE5VTEwsIG1uKTsKLQlpZiAob2xkKSB7Ci0JCW1tdV9ub3RpZmll
cl91bnJlZ2lzdGVyKCZtbi0+bW4sIG1tLT5tbSk7Ci0JCWtmcmVlKG1uKTsKLQkJbW4gPSBvbGQ7
Ci0JfQotCi0JcmV0dXJuIG1uOwotfQotCiBzdGF0aWMgaW50CiBpOTE1X2dlbV91c2VycHRyX2lu
aXRfX21tdV9ub3RpZmllcihzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogewotCXN0
cnVjdCBpOTE1X21tdV9ub3RpZmllciAqbW47Ci0Jc3RydWN0IGk5MTVfbW11X29iamVjdCAqbW87
Ci0KLQlpZiAoR0VNX1dBUk5fT04oIW9iai0+dXNlcnB0ci5tbSkpCi0JCXJldHVybiAtRUlOVkFM
OwotCi0JbW4gPSBpOTE1X21tdV9ub3RpZmllcl9maW5kKG9iai0+dXNlcnB0ci5tbSk7Ci0JaWYg
KElTX0VSUihtbikpCi0JCXJldHVybiBQVFJfRVJSKG1uKTsKLQotCW1vID0ga3phbGxvYyhzaXpl
b2YoKm1vKSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFtbykKLQkJcmV0dXJuIC1FTk9NRU07Ci0KLQlt
by0+bW4gPSBtbjsKLQltby0+b2JqID0gb2JqOwotCW1vLT5pdC5zdGFydCA9IG9iai0+dXNlcnB0
ci5wdHI7Ci0JbW8tPml0Lmxhc3QgPSBvYmotPnVzZXJwdHIucHRyICsgb2JqLT5iYXNlLnNpemUg
LSAxOwotCVJCX0NMRUFSX05PREUoJm1vLT5pdC5yYik7Ci0KLQlvYmotPnVzZXJwdHIubW11X29i
amVjdCA9IG1vOwotCXJldHVybiAwOworCXJldHVybiBtbXVfaW50ZXJ2YWxfbm90aWZpZXJfaW5z
ZXJ0KCZvYmotPnVzZXJwdHIubm90aWZpZXIsIGN1cnJlbnQtPm1tLAorCQkJCQkgICAgb2JqLT51
c2VycHRyLnB0ciwgb2JqLT5iYXNlLnNpemUsCisJCQkJCSAgICAmaTkxNV9nZW1fdXNlcnB0cl9u
b3RpZmllcl9vcHMpOwogfQogCi1zdGF0aWMgdm9pZAotaTkxNV9tbXVfbm90aWZpZXJfZnJlZShz
dHJ1Y3QgaTkxNV9tbXVfbm90aWZpZXIgKm1uLAotCQkgICAgICAgc3RydWN0IG1tX3N0cnVjdCAq
bW0pCi17Ci0JaWYgKG1uID09IE5VTEwpCi0JCXJldHVybjsKLQotCW1tdV9ub3RpZmllcl91bnJl
Z2lzdGVyKCZtbi0+bW4sIG1tKTsKLQlrZnJlZShtbik7Ci19Ci0KLQotc3RhdGljIHN0cnVjdCBp
OTE1X21tX3N0cnVjdCAqCi1fX2k5MTVfbW1fc3RydWN0X2ZpbmQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsIHN0cnVjdCBtbV9zdHJ1Y3QgKnJlYWwpCi17Ci0Jc3RydWN0IGk5MTVfbW1f
c3RydWN0ICppdCwgKm1tID0gTlVMTDsKLQotCXJjdV9yZWFkX2xvY2soKTsKLQloYXNoX2Zvcl9l
YWNoX3Bvc3NpYmxlX3JjdShpOTE1LT5tbV9zdHJ1Y3RzLAotCQkJCSAgIGl0LCBub2RlLAotCQkJ
CSAgICh1bnNpZ25lZCBsb25nKXJlYWwpCi0JCWlmIChpdC0+bW0gPT0gcmVhbCAmJiBrcmVmX2dl
dF91bmxlc3NfemVybygmaXQtPmtyZWYpKSB7Ci0JCQltbSA9IGl0OwotCQkJYnJlYWs7Ci0JCX0K
LQlyY3VfcmVhZF91bmxvY2soKTsKLQotCXJldHVybiBtbTsKLX0KLQotc3RhdGljIGludAotaTkx
NV9nZW1fdXNlcnB0cl9pbml0X19tbV9zdHJ1Y3Qoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaikKK3N0YXRpYyB2b2lkIGk5MTVfZ2VtX29iamVjdF91c2VycHRyX2Ryb3BfcmVmKHN0cnVj
dCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUgPSB0b19pOTE1KG9iai0+YmFzZS5kZXYpOwotCXN0cnVjdCBpOTE1X21tX3N0cnVjdCAq
bW0sICpuZXc7Ci0JaW50IHJldCA9IDA7Ci0KLQkvKiBEdXJpbmcgcmVsZWFzZSBvZiB0aGUgR0VN
IG9iamVjdCB3ZSBob2xkIHRoZSBzdHJ1Y3RfbXV0ZXguIFRoaXMKLQkgKiBwcmVjbHVkZXMgdXMg
ZnJvbSBjYWxsaW5nIG1tcHV0KCkgYXQgdGhhdCB0aW1lIGFzIHRoYXQgbWF5IGJlCi0JICogdGhl
IGxhc3QgcmVmZXJlbmNlIGFuZCBzbyBjYWxsIGV4aXRfbW1hcCgpLiBleGl0X21tYXAoKSB3aWxs
Ci0JICogYXR0ZW1wdCB0byByZWFwIHRoZSB2bWEsIGFuZCBpZiB3ZSB3ZXJlIGhvbGRpbmcgYSBH
VFQgbW1hcAotCSAqIHdvdWxkIHRoZW4gY2FsbCBkcm1fZ2VtX3ZtX2Nsb3NlKCkgYW5kIGF0dGVt
cHQgdG8gcmVhY3F1aXJlCi0JICogdGhlIHN0cnVjdCBtdXRleC4gU28gaW4gb3JkZXIgdG8gYXZv
aWQgdGhhdCByZWN1cnNpb24sIHdlIGhhdmUKLQkgKiB0byBkZWZlciByZWxlYXNpbmcgdGhlIG1t
IHJlZmVyZW5jZSB1bnRpbCBhZnRlciB3ZSBkcm9wIHRoZQotCSAqIHN0cnVjdF9tdXRleCwgaS5l
LiB3ZSBuZWVkIHRvIHNjaGVkdWxlIGEgd29ya2VyIHRvIGRvIHRoZSBjbGVhbgotCSAqIHVwLgot
CSAqLwotCW1tID0gX19pOTE1X21tX3N0cnVjdF9maW5kKGk5MTUsIGN1cnJlbnQtPm1tKTsKLQlp
ZiAobW0pCi0JCWdvdG8gb3V0OworCXN0cnVjdCBwYWdlICoqcHZlYyA9IE5VTEw7CiAKLQluZXcg
PSBrbWFsbG9jKHNpemVvZigqbW0pLCBHRlBfS0VSTkVMKTsKLQlpZiAoIW5ldykKLQkJcmV0dXJu
IC1FTk9NRU07Ci0KLQlrcmVmX2luaXQoJm5ldy0+a3JlZik7Ci0JbmV3LT5pOTE1ID0gdG9faTkx
NShvYmotPmJhc2UuZGV2KTsKLQluZXctPm1tID0gY3VycmVudC0+bW07Ci0JbmV3LT5tbiA9IE5V
TEw7Ci0KLQlzcGluX2xvY2soJmk5MTUtPm1tX2xvY2spOwotCW1tID0gX19pOTE1X21tX3N0cnVj
dF9maW5kKGk5MTUsIGN1cnJlbnQtPm1tKTsKLQlpZiAoIW1tKSB7Ci0JCWhhc2hfYWRkX3JjdShp
OTE1LT5tbV9zdHJ1Y3RzLAotCQkJICAgICAmbmV3LT5ub2RlLAotCQkJICAgICAodW5zaWduZWQg
bG9uZyluZXctPm1tKTsKLQkJbW1ncmFiKGN1cnJlbnQtPm1tKTsKLQkJbW0gPSBuZXc7CisJc3Bp
bl9sb2NrKCZpOTE1LT5tbS5ub3RpZmllcl9sb2NrKTsKKwlpZiAoIS0tb2JqLT51c2VycHRyLnBh
Z2VfcmVmKSB7CisJCXB2ZWMgPSBvYmotPnVzZXJwdHIucHZlYzsKKwkJb2JqLT51c2VycHRyLnB2
ZWMgPSBOVUxMOwogCX0KLQlzcGluX3VubG9jaygmaTkxNS0+bW1fbG9jayk7Ci0JaWYgKG1tICE9
IG5ldykKLQkJa2ZyZWUobmV3KTsKLQotb3V0OgotCW9iai0+dXNlcnB0ci5tbSA9IG1tOwotCXJl
dHVybiByZXQ7Ci19Ci0KLXN0YXRpYyB2b2lkCi1fX2k5MTVfbW1fc3RydWN0X2ZyZWVfX3dvcmtl
cihzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCi17Ci0Jc3RydWN0IGk5MTVfbW1fc3RydWN0ICpt
bSA9IGNvbnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKm1tKSwgd29yay53b3JrKTsKLQotCWk5MTVf
bW11X25vdGlmaWVyX2ZyZWUobW0tPm1uLCBtbS0+bW0pOwotCW1tZHJvcChtbS0+bW0pOwotCWtm
cmVlKG1tKTsKLX0KLQotc3RhdGljIHZvaWQKLV9faTkxNV9tbV9zdHJ1Y3RfZnJlZShzdHJ1Y3Qg
a3JlZiAqa3JlZikKLXsKLQlzdHJ1Y3QgaTkxNV9tbV9zdHJ1Y3QgKm1tID0gY29udGFpbmVyX29m
KGtyZWYsIHR5cGVvZigqbW0pLCBrcmVmKTsKLQotCXNwaW5fbG9jaygmbW0tPmk5MTUtPm1tX2xv
Y2spOwotCWhhc2hfZGVsX3JjdSgmbW0tPm5vZGUpOwotCXNwaW5fdW5sb2NrKCZtbS0+aTkxNS0+
bW1fbG9jayk7Ci0KLQlJTklUX1JDVV9XT1JLKCZtbS0+d29yaywgX19pOTE1X21tX3N0cnVjdF9m
cmVlX193b3JrZXIpOwotCXF1ZXVlX3JjdV93b3JrKHN5c3RlbV93cSwgJm1tLT53b3JrKTsKLX0K
KwlHRU1fQlVHX09OKG9iai0+dXNlcnB0ci5wYWdlX3JlZiA8IDApOworCXNwaW5fdW5sb2NrKCZp
OTE1LT5tbS5ub3RpZmllcl9sb2NrKTsKIAotc3RhdGljIHZvaWQKLWk5MTVfZ2VtX3VzZXJwdHJf
cmVsZWFzZV9fbW1fc3RydWN0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCi17Ci0J
aWYgKG9iai0+dXNlcnB0ci5tbSA9PSBOVUxMKQotCQlyZXR1cm47CisJaWYgKHB2ZWMpIHsKKwkJ
Y29uc3QgdW5zaWduZWQgbG9uZyBudW1fcGFnZXMgPSBvYmotPmJhc2Uuc2l6ZSA+PiBQQUdFX1NI
SUZUOwogCi0Ja3JlZl9wdXQoJm9iai0+dXNlcnB0ci5tbS0+a3JlZiwgX19pOTE1X21tX3N0cnVj
dF9mcmVlKTsKLQlvYmotPnVzZXJwdHIubW0gPSBOVUxMOworCQl1bnBpbl91c2VyX3BhZ2VzKHB2
ZWMsIG51bV9wYWdlcyk7CisJCWtmcmVlKHB2ZWMpOworCX0KIH0KIAotc3RydWN0IGdldF9wYWdl
c193b3JrIHsKLQlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKLQlzdHJ1Y3QgZHJtX2k5MTVfZ2Vt
X29iamVjdCAqb2JqOwotCXN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzazsKLX07Ci0KLXN0YXRpYyBz
dHJ1Y3Qgc2dfdGFibGUgKgotX19pOTE1X2dlbV91c2VycHRyX2FsbG9jX3BhZ2VzKHN0cnVjdCBk
cm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCi0JCQkgICAgICAgc3RydWN0IHBhZ2UgKipwdmVjLCB1
bnNpZ25lZCBsb25nIG51bV9wYWdlcykKK3N0YXRpYyBpbnQgaTkxNV9nZW1fdXNlcnB0cl9nZXRf
cGFnZXMoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIHsKKwlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7CisJY29uc3QgdW5zaWdu
ZWQgbG9uZyBudW1fcGFnZXMgPSBvYmotPmJhc2Uuc2l6ZSA+PiBQQUdFX1NISUZUOwogCXVuc2ln
bmVkIGludCBtYXhfc2VnbWVudCA9IGk5MTVfc2dfc2VnbWVudF9zaXplKCk7CiAJc3RydWN0IHNn
X3RhYmxlICpzdDsKIAl1bnNpZ25lZCBpbnQgc2dfcGFnZV9zaXplczsKKwlzdHJ1Y3QgcGFnZSAq
KnB2ZWM7CiAJaW50IHJldDsKIAogCXN0ID0ga21hbGxvYyhzaXplb2YoKnN0KSwgR0ZQX0tFUk5F
TCk7CiAJaWYgKCFzdCkKLQkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisJCXJldHVybiAtRU5P
TUVNOworCisJc3Bpbl9sb2NrKCZpOTE1LT5tbS5ub3RpZmllcl9sb2NrKTsKKwlpZiAoR0VNX1dB
Uk5fT04oIW9iai0+dXNlcnB0ci5wYWdlX3JlZikpIHsKKwkJc3Bpbl91bmxvY2soJmk5MTUtPm1t
Lm5vdGlmaWVyX2xvY2spOworCQlyZXQgPSAtRUZBVUxUOworCQlnb3RvIGVycl9mcmVlOworCX0K
KworCW9iai0+dXNlcnB0ci5wYWdlX3JlZisrOworCXB2ZWMgPSBvYmotPnVzZXJwdHIucHZlYzsK
KwlzcGluX3VubG9jaygmaTkxNS0+bW0ubm90aWZpZXJfbG9jayk7CiAKIGFsbG9jX3RhYmxlOgog
CXJldCA9IF9fc2dfYWxsb2NfdGFibGVfZnJvbV9wYWdlcyhzdCwgcHZlYywgbnVtX3BhZ2VzLAog
CQkJCQkgIDAsIG51bV9wYWdlcyA8PCBQQUdFX1NISUZULAogCQkJCQkgIG1heF9zZWdtZW50LAog
CQkJCQkgIEdGUF9LRVJORUwpOwotCWlmIChyZXQpIHsKLQkJa2ZyZWUoc3QpOwotCQlyZXR1cm4g
RVJSX1BUUihyZXQpOwotCX0KKwlpZiAocmV0KQorCQlnb3RvIGVycjsKIAogCXJldCA9IGk5MTVf
Z2VtX2d0dF9wcmVwYXJlX3BhZ2VzKG9iaiwgc3QpOwogCWlmIChyZXQpIHsKQEAgLTM5MywyMDMg
KzE1NywyMCBAQCBfX2k5MTVfZ2VtX3VzZXJwdHJfYWxsb2NfcGFnZXMoc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiwKIAkJCWdvdG8gYWxsb2NfdGFibGU7CiAJCX0KIAotCQlrZnJlZShz
dCk7Ci0JCXJldHVybiBFUlJfUFRSKHJldCk7CisJCWdvdG8gZXJyOwogCX0KIAogCXNnX3BhZ2Vf
c2l6ZXMgPSBpOTE1X3NnX3BhZ2Vfc2l6ZXMoc3QtPnNnbCk7CiAKIAlfX2k5MTVfZ2VtX29iamVj
dF9zZXRfcGFnZXMob2JqLCBzdCwgc2dfcGFnZV9zaXplcyk7CiAKLQlyZXR1cm4gc3Q7Ci19Ci0K
LXN0YXRpYyB2b2lkCi1fX2k5MTVfZ2VtX3VzZXJwdHJfZ2V0X3BhZ2VzX3dvcmtlcihzdHJ1Y3Qg
d29ya19zdHJ1Y3QgKl93b3JrKQotewotCXN0cnVjdCBnZXRfcGFnZXNfd29yayAqd29yayA9IGNv
bnRhaW5lcl9vZihfd29yaywgdHlwZW9mKCp3b3JrKSwgd29yayk7Ci0Jc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiA9IHdvcmstPm9iajsKLQljb25zdCB1bnNpZ25lZCBsb25nIG5wYWdl
cyA9IG9iai0+YmFzZS5zaXplID4+IFBBR0VfU0hJRlQ7Ci0JdW5zaWduZWQgbG9uZyBwaW5uZWQ7
Ci0Jc3RydWN0IHBhZ2UgKipwdmVjOwotCWludCByZXQ7Ci0KLQlyZXQgPSAtRU5PTUVNOwotCXBp
bm5lZCA9IDA7Ci0KLQlwdmVjID0ga3ZtYWxsb2NfYXJyYXkobnBhZ2VzLCBzaXplb2Yoc3RydWN0
IHBhZ2UgKiksIEdGUF9LRVJORUwpOwotCWlmIChwdmVjICE9IE5VTEwpIHsKLQkJc3RydWN0IG1t
X3N0cnVjdCAqbW0gPSBvYmotPnVzZXJwdHIubW0tPm1tOwotCQl1bnNpZ25lZCBpbnQgZmxhZ3Mg
PSAwOwotCQlpbnQgbG9ja2VkID0gMDsKLQotCQlpZiAoIWk5MTVfZ2VtX29iamVjdF9pc19yZWFk
b25seShvYmopKQotCQkJZmxhZ3MgfD0gRk9MTF9XUklURTsKLQotCQlyZXQgPSAtRUZBVUxUOwot
CQlpZiAobW1nZXRfbm90X3plcm8obW0pKSB7Ci0JCQl3aGlsZSAocGlubmVkIDwgbnBhZ2VzKSB7
Ci0JCQkJaWYgKCFsb2NrZWQpIHsKLQkJCQkJbW1hcF9yZWFkX2xvY2sobW0pOwotCQkJCQlsb2Nr
ZWQgPSAxOwotCQkJCX0KLQkJCQlyZXQgPSBwaW5fdXNlcl9wYWdlc19yZW1vdGUKLQkJCQkJKG1t
LAotCQkJCQkgb2JqLT51c2VycHRyLnB0ciArIHBpbm5lZCAqIFBBR0VfU0laRSwKLQkJCQkJIG5w
YWdlcyAtIHBpbm5lZCwKLQkJCQkJIGZsYWdzLAotCQkJCQkgcHZlYyArIHBpbm5lZCwgTlVMTCwg
JmxvY2tlZCk7Ci0JCQkJaWYgKHJldCA8IDApCi0JCQkJCWJyZWFrOwotCi0JCQkJcGlubmVkICs9
IHJldDsKLQkJCX0KLQkJCWlmIChsb2NrZWQpCi0JCQkJbW1hcF9yZWFkX3VubG9jayhtbSk7Ci0J
CQltbXB1dChtbSk7Ci0JCX0KLQl9Ci0KLQltdXRleF9sb2NrX25lc3RlZCgmb2JqLT5tbS5sb2Nr
LCBJOTE1X01NX0dFVF9QQUdFUyk7Ci0JaWYgKG9iai0+dXNlcnB0ci53b3JrID09ICZ3b3JrLT53
b3JrKSB7Ci0JCXN0cnVjdCBzZ190YWJsZSAqcGFnZXMgPSBFUlJfUFRSKHJldCk7Ci0KLQkJaWYg
KHBpbm5lZCA9PSBucGFnZXMpIHsKLQkJCXBhZ2VzID0gX19pOTE1X2dlbV91c2VycHRyX2FsbG9j
X3BhZ2VzKG9iaiwgcHZlYywKLQkJCQkJCQkgICAgICAgbnBhZ2VzKTsKLQkJCWlmICghSVNfRVJS
KHBhZ2VzKSkgewotCQkJCXBpbm5lZCA9IDA7Ci0JCQkJcGFnZXMgPSBOVUxMOwotCQkJfQotCQl9
Ci0KLQkJb2JqLT51c2VycHRyLndvcmsgPSBFUlJfQ0FTVChwYWdlcyk7Ci0JCWlmIChJU19FUlIo
cGFnZXMpKQotCQkJX19pOTE1X2dlbV91c2VycHRyX3NldF9hY3RpdmUob2JqLCBmYWxzZSk7Ci0J
fQotCW11dGV4X3VubG9jaygmb2JqLT5tbS5sb2NrKTsKLQotCXVucGluX3VzZXJfcGFnZXMocHZl
YywgcGlubmVkKTsKLQlrdmZyZWUocHZlYyk7Ci0KLQlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7
Ci0JcHV0X3Rhc2tfc3RydWN0KHdvcmstPnRhc2spOwotCWtmcmVlKHdvcmspOwotfQotCi1zdGF0
aWMgc3RydWN0IHNnX3RhYmxlICoKLV9faTkxNV9nZW1fdXNlcnB0cl9nZXRfcGFnZXNfc2NoZWR1
bGUoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKLXsKLQlzdHJ1Y3QgZ2V0X3BhZ2Vz
X3dvcmsgKndvcms7Ci0KLQkvKiBTcGF3biBhIHdvcmtlciBzbyB0aGF0IHdlIGNhbiBhY3F1aXJl
IHRoZQotCSAqIHVzZXIgcGFnZXMgd2l0aG91dCBob2xkaW5nIG91ciBtdXRleC4gQWNjZXNzCi0J
ICogdG8gdGhlIHVzZXIgcGFnZXMgcmVxdWlyZXMgbW1hcF9sb2NrLCBhbmQgd2UgaGF2ZQotCSAq
IGEgc3RyaWN0IGxvY2sgb3JkZXJpbmcgb2YgbW1hcF9sb2NrLCBzdHJ1Y3RfbXV0ZXggLQotCSAq
IHdlIGFscmVhZHkgaG9sZCBzdHJ1Y3RfbXV0ZXggaGVyZSBhbmQgc28gY2Fubm90Ci0JICogY2Fs
bCBndXAgd2l0aG91dCBlbmNvdW50ZXJpbmcgYSBsb2NrIGludmVyc2lvbi4KLQkgKgotCSAqIFVz
ZXJzcGFjZSB3aWxsIGtlZXAgb24gcmVwZWF0aW5nIHRoZSBvcGVyYXRpb24KLQkgKiAodGhhbmtz
IHRvIEVBR0FJTikgdW50aWwgZWl0aGVyIHdlIGhpdCB0aGUgZmFzdAotCSAqIHBhdGggb3IgdGhl
IHdvcmtlciBjb21wbGV0ZXMuIElmIHRoZSB3b3JrZXIgaXMKLQkgKiBjYW5jZWxsZWQgb3Igc3Vw
ZXJzZWRlZCwgdGhlIHRhc2sgaXMgc3RpbGwgcnVuCi0JICogYnV0IHRoZSByZXN1bHRzIGlnbm9y
ZWQuIChUaGlzIGxlYWRzIHRvCi0JICogY29tcGxpY2F0aW9ucyB0aGF0IHdlIG1heSBoYXZlIGEg
c3RyYXkgb2JqZWN0Ci0JICogcmVmY291bnQgdGhhdCB3ZSBuZWVkIHRvIGJlIHdhcnkgb2Ygd2hl
bgotCSAqIGNoZWNraW5nIGZvciBleGlzdGluZyBvYmplY3RzIGR1cmluZyBjcmVhdGlvbi4pCi0J
ICogSWYgdGhlIHdvcmtlciBlbmNvdW50ZXJzIGFuIGVycm9yLCBpdCByZXBvcnRzCi0JICogdGhh
dCBlcnJvciBiYWNrIHRvIHRoaXMgZnVuY3Rpb24gdGhyb3VnaAotCSAqIG9iai0+dXNlcnB0ci53
b3JrID0gRVJSX1BUUi4KLQkgKi8KLQl3b3JrID0ga21hbGxvYyhzaXplb2YoKndvcmspLCBHRlBf
S0VSTkVMKTsKLQlpZiAod29yayA9PSBOVUxMKQotCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsK
LQotCW9iai0+dXNlcnB0ci53b3JrID0gJndvcmstPndvcms7Ci0KLQl3b3JrLT5vYmogPSBpOTE1
X2dlbV9vYmplY3RfZ2V0KG9iaik7Ci0KLQl3b3JrLT50YXNrID0gY3VycmVudDsKLQlnZXRfdGFz
a19zdHJ1Y3Qod29yay0+dGFzayk7Ci0KLQlJTklUX1dPUksoJndvcmstPndvcmssIF9faTkxNV9n
ZW1fdXNlcnB0cl9nZXRfcGFnZXNfd29ya2VyKTsKLQlxdWV1ZV93b3JrKHRvX2k5MTUob2JqLT5i
YXNlLmRldiktPm1tLnVzZXJwdHJfd3EsICZ3b3JrLT53b3JrKTsKLQotCXJldHVybiBFUlJfUFRS
KC1FQUdBSU4pOwotfQotCi1zdGF0aWMgaW50IGk5MTVfZ2VtX3VzZXJwdHJfZ2V0X3BhZ2VzKHN0
cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCi17Ci0JY29uc3QgdW5zaWduZWQgbG9uZyBu
dW1fcGFnZXMgPSBvYmotPmJhc2Uuc2l6ZSA+PiBQQUdFX1NISUZUOwotCXN0cnVjdCBtbV9zdHJ1
Y3QgKm1tID0gb2JqLT51c2VycHRyLm1tLT5tbTsKLQlzdHJ1Y3QgcGFnZSAqKnB2ZWM7Ci0Jc3Ry
dWN0IHNnX3RhYmxlICpwYWdlczsKLQlib29sIGFjdGl2ZTsKLQlpbnQgcGlubmVkOwotCXVuc2ln
bmVkIGludCBndXBfZmxhZ3MgPSAwOwotCi0JLyogSWYgdXNlcnNwYWNlIHNob3VsZCBlbmdpbmVl
ciB0aGF0IHRoZXNlIHBhZ2VzIGFyZSByZXBsYWNlZCBpbgotCSAqIHRoZSB2bWEgYmV0d2VlbiB1
cyBiaW5kaW5nIHRoaXMgcGFnZSBpbnRvIHRoZSBHVFQgYW5kIGNvbXBsZXRpb24KLQkgKiBvZiBy
ZW5kZXJpbmcuLi4gVGhlaXIgbG9zcy4gSWYgdGhleSBjaGFuZ2UgdGhlIG1hcHBpbmcgb2YgdGhl
aXIKLQkgKiBwYWdlcyB0aGV5IG5lZWQgdG8gY3JlYXRlIGEgbmV3IGJvIHRvIHBvaW50IHRvIHRo
ZSBuZXcgdm1hLgotCSAqCi0JICogSG93ZXZlciwgdGhhdCBzdGlsbCBsZWF2ZXMgb3BlbiB0aGUg
cG9zc2liaWxpdHkgb2YgdGhlIHZtYQotCSAqIGJlaW5nIGNvcGllZCB1cG9uIGZvcmsuIFdoaWNo
IGZhbGxzIHVuZGVyIHRoZSBzYW1lIHVzZXJzcGFjZQotCSAqIHN5bmNocm9uaXNhdGlvbiBpc3N1
ZSBhcyBhIHJlZ3VsYXIgYm8sIGV4Y2VwdCB0aGF0IHRoaXMgdGltZQotCSAqIHRoZSBwcm9jZXNz
IG1heSBub3QgYmUgZXhwZWN0aW5nIHRoYXQgYSBwYXJ0aWN1bGFyIHBpZWNlIG9mCi0JICogbWVt
b3J5IGlzIHRpZWQgdG8gdGhlIEdQVS4KLQkgKgotCSAqIEZvcnR1bmF0ZWx5LCB3ZSBjYW4gaG9v
ayBpbnRvIHRoZSBtbXVfbm90aWZpZXIgaW4gb3JkZXIgdG8KLQkgKiBkaXNjYXJkIHRoZSBwYWdl
IHJlZmVyZW5jZXMgcHJpb3IgdG8gYW55dGhpbmcgbmFzdHkgaGFwcGVuaW5nCi0JICogdG8gdGhl
IHZtYSAoZGlzY2FyZCBvciBjbG9uaW5nKSB3aGljaCBzaG91bGQgcHJldmVudCB0aGUgbW9yZQot
CSAqIGVncmVnaW91cyBjYXNlcyBmcm9tIGNhdXNpbmcgaGFybS4KLQkgKi8KLQotCWlmIChvYmot
PnVzZXJwdHIud29yaykgewotCQkvKiBhY3RpdmUgZmxhZyBzaG91bGQgc3RpbGwgYmUgaGVsZCBm
b3IgdGhlIHBlbmRpbmcgd29yayAqLwotCQlpZiAoSVNfRVJSKG9iai0+dXNlcnB0ci53b3JrKSkK
LQkJCXJldHVybiBQVFJfRVJSKG9iai0+dXNlcnB0ci53b3JrKTsKLQkJZWxzZQotCQkJcmV0dXJu
IC1FQUdBSU47Ci0JfQotCi0JcHZlYyA9IE5VTEw7Ci0JcGlubmVkID0gMDsKLQotCWlmIChtbSA9
PSBjdXJyZW50LT5tbSkgewotCQlwdmVjID0ga3ZtYWxsb2NfYXJyYXkobnVtX3BhZ2VzLCBzaXpl
b2Yoc3RydWN0IHBhZ2UgKiksCi0JCQkJICAgICAgR0ZQX0tFUk5FTCB8Ci0JCQkJICAgICAgX19H
RlBfTk9SRVRSWSB8Ci0JCQkJICAgICAgX19HRlBfTk9XQVJOKTsKLQkJaWYgKHB2ZWMpIHsKLQkJ
CS8qIGRlZmVyIHRvIHdvcmtlciBpZiBtYWxsb2MgZmFpbHMgKi8KLQkJCWlmICghaTkxNV9nZW1f
b2JqZWN0X2lzX3JlYWRvbmx5KG9iaikpCi0JCQkJZ3VwX2ZsYWdzIHw9IEZPTExfV1JJVEU7Ci0J
CQlwaW5uZWQgPSBwaW5fdXNlcl9wYWdlc19mYXN0X29ubHkob2JqLT51c2VycHRyLnB0ciwKLQkJ
CQkJCQkgIG51bV9wYWdlcywgZ3VwX2ZsYWdzLAotCQkJCQkJCSAgcHZlYyk7Ci0JCX0KLQl9Ci0K
LQlhY3RpdmUgPSBmYWxzZTsKLQlpZiAocGlubmVkIDwgMCkgewotCQlwYWdlcyA9IEVSUl9QVFIo
cGlubmVkKTsKLQkJcGlubmVkID0gMDsKLQl9IGVsc2UgaWYgKHBpbm5lZCA8IG51bV9wYWdlcykg
ewotCQlwYWdlcyA9IF9faTkxNV9nZW1fdXNlcnB0cl9nZXRfcGFnZXNfc2NoZWR1bGUob2JqKTsK
LQkJYWN0aXZlID0gcGFnZXMgPT0gRVJSX1BUUigtRUFHQUlOKTsKLQl9IGVsc2UgewotCQlwYWdl
cyA9IF9faTkxNV9nZW1fdXNlcnB0cl9hbGxvY19wYWdlcyhvYmosIHB2ZWMsIG51bV9wYWdlcyk7
Ci0JCWFjdGl2ZSA9ICFJU19FUlIocGFnZXMpOwotCX0KLQlpZiAoYWN0aXZlKQotCQlfX2k5MTVf
Z2VtX3VzZXJwdHJfc2V0X2FjdGl2ZShvYmosIHRydWUpOwotCi0JaWYgKElTX0VSUihwYWdlcykp
Ci0JCXVucGluX3VzZXJfcGFnZXMocHZlYywgcGlubmVkKTsKLQlrdmZyZWUocHZlYyk7CisJcmV0
dXJuIDA7CiAKLQlyZXR1cm4gUFRSX0VSUl9PUl9aRVJPKHBhZ2VzKTsKK2VycjoKKwlpOTE1X2dl
bV9vYmplY3RfdXNlcnB0cl9kcm9wX3JlZihvYmopOworZXJyX2ZyZWU6CisJa2ZyZWUoc3QpOwor
CXJldHVybiByZXQ7CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC01OTksOSArMTgwLDYgQEAgaTkxNV9n
ZW1fdXNlcnB0cl9wdXRfcGFnZXMoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAlz
dHJ1Y3Qgc2d0X2l0ZXIgc2d0X2l0ZXI7CiAJc3RydWN0IHBhZ2UgKnBhZ2U7CiAKLQkvKiBDYW5j
ZWwgYW55IGluZmxpZ2h0IHdvcmsgYW5kIGZvcmNlIHRoZW0gdG8gcmVzdGFydCB0aGVpciBndXAg
Ki8KLQlvYmotPnVzZXJwdHIud29yayA9IE5VTEw7Ci0JX19pOTE1X2dlbV91c2VycHRyX3NldF9h
Y3RpdmUob2JqLCBmYWxzZSk7CiAJaWYgKCFwYWdlcykKIAkJcmV0dXJuOwogCkBAIC02NDEsMTkg
KzIxOSwxMzUgQEAgaTkxNV9nZW1fdXNlcnB0cl9wdXRfcGFnZXMoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaiwKIAkJfQogCiAJCW1hcmtfcGFnZV9hY2Nlc3NlZChwYWdlKTsKLQkJdW5w
aW5fdXNlcl9wYWdlKHBhZ2UpOwogCX0KIAlvYmotPm1tLmRpcnR5ID0gZmFsc2U7CiAKIAlzZ19m
cmVlX3RhYmxlKHBhZ2VzKTsKIAlrZnJlZShwYWdlcyk7CisKKwlpOTE1X2dlbV9vYmplY3RfdXNl
cnB0cl9kcm9wX3JlZihvYmopOworfQorCitzdGF0aWMgaW50IGk5MTVfZ2VtX29iamVjdF91c2Vy
cHRyX3VuYmluZChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLCBib29sIGdldF9wYWdl
cykKK3sKKwlzdHJ1Y3Qgc2dfdGFibGUgKnBhZ2VzOworCWludCBlcnI7CisKKwllcnIgPSBpOTE1
X2dlbV9vYmplY3RfdW5iaW5kKG9iaiwgSTkxNV9HRU1fT0JKRUNUX1VOQklORF9BQ1RJVkUpOwor
CWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlpZiAoR0VNX1dBUk5fT04oaTkxNV9nZW1fb2Jq
ZWN0X2hhc19waW5uZWRfcGFnZXMob2JqKSkpCisJCXJldHVybiAtRUJVU1k7CisKKwltdXRleF9s
b2NrX25lc3RlZCgmb2JqLT5tbS5sb2NrLCBJOTE1X01NX0dFVF9QQUdFUyk7CisKKwlwYWdlcyA9
IF9faTkxNV9nZW1fb2JqZWN0X3Vuc2V0X3BhZ2VzKG9iaik7CisJaWYgKCFJU19FUlJfT1JfTlVM
TChwYWdlcykpCisJCWk5MTVfZ2VtX3VzZXJwdHJfcHV0X3BhZ2VzKG9iaiwgcGFnZXMpOworCisJ
aWYgKGdldF9wYWdlcykKKwkJZXJyID0gX19fX2k5MTVfZ2VtX29iamVjdF9nZXRfcGFnZXMob2Jq
KTsKKwltdXRleF91bmxvY2soJm9iai0+bW0ubG9jayk7CisKKwlyZXR1cm4gZXJyOworfQorCitp
bnQgaTkxNV9nZW1fb2JqZWN0X3VzZXJwdHJfc3VibWl0X2luaXQoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaikKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5
MTUob2JqLT5iYXNlLmRldik7CisJY29uc3QgdW5zaWduZWQgbG9uZyBudW1fcGFnZXMgPSBvYmot
PmJhc2Uuc2l6ZSA+PiBQQUdFX1NISUZUOworCXN0cnVjdCBwYWdlICoqcHZlYzsKKwl1bnNpZ25l
ZCBpbnQgZ3VwX2ZsYWdzID0gMDsKKwl1bnNpZ25lZCBsb25nIG5vdGlmaWVyX3NlcTsKKwlpbnQg
cGlubmVkLCByZXQ7CisKKwlpZiAob2JqLT51c2VycHRyLm5vdGlmaWVyLm1tICE9IGN1cnJlbnQt
Pm1tKQorCQlyZXR1cm4gLUVGQVVMVDsKKworCXJldCA9IGk5MTVfZ2VtX29iamVjdF9sb2NrX2lu
dGVycnVwdGlibGUob2JqLCBOVUxMKTsKKwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJLyog
TWFrZSBzdXJlIHVzZXJwdHIgaXMgdW5ib3VuZCBmb3IgbmV4dCBhdHRlbXB0LCBzbyB3ZSBkb24n
dCB1c2Ugc3RhbGUgcGFnZXMuICovCisJcmV0ID0gaTkxNV9nZW1fb2JqZWN0X3VzZXJwdHJfdW5i
aW5kKG9iaiwgZmFsc2UpOworCWk5MTVfZ2VtX29iamVjdF91bmxvY2sob2JqKTsKKwlpZiAocmV0
KQorCQlyZXR1cm4gcmV0OworCisJbm90aWZpZXJfc2VxID0gbW11X2ludGVydmFsX3JlYWRfYmVn
aW4oJm9iai0+dXNlcnB0ci5ub3RpZmllcik7CisKKwlwdmVjID0ga3ZtYWxsb2NfYXJyYXkobnVt
X3BhZ2VzLCBzaXplb2Yoc3RydWN0IHBhZ2UgKiksIEdGUF9LRVJORUwpOworCWlmICghcHZlYykK
KwkJcmV0dXJuIC1FTk9NRU07CisKKwlpZiAoIWk5MTVfZ2VtX29iamVjdF9pc19yZWFkb25seShv
YmopKQorCQlndXBfZmxhZ3MgfD0gRk9MTF9XUklURTsKKworCXBpbm5lZCA9IHJldCA9IDA7CisJ
d2hpbGUgKHBpbm5lZCA8IG51bV9wYWdlcykgeworCQlyZXQgPSBwaW5fdXNlcl9wYWdlc19mYXN0
KG9iai0+dXNlcnB0ci5wdHIgKyBwaW5uZWQgKiBQQUdFX1NJWkUsCisJCQkJCSAgbnVtX3BhZ2Vz
IC0gcGlubmVkLCBndXBfZmxhZ3MsCisJCQkJCSAgJnB2ZWNbcGlubmVkXSk7CisJCWlmIChyZXQg
PCAwKQorCQkJZ290byBvdXQ7CisKKwkJcGlubmVkICs9IHJldDsKKwl9CisJcmV0ID0gMDsKKwor
CXNwaW5fbG9jaygmaTkxNS0+bW0ubm90aWZpZXJfbG9jayk7CisKKwlpZiAobW11X2ludGVydmFs
X3JlYWRfcmV0cnkoJm9iai0+dXNlcnB0ci5ub3RpZmllciwKKwkJIW9iai0+dXNlcnB0ci5wYWdl
X3JlZiA/IG5vdGlmaWVyX3NlcSA6CisJCW9iai0+dXNlcnB0ci5ub3RpZmllcl9zZXEpKSB7CisJ
CXJldCA9IC1FQUdBSU47CisJCWdvdG8gb3V0X3VubG9jazsKKwl9CisKKwlpZiAoIW9iai0+dXNl
cnB0ci5wYWdlX3JlZisrKSB7CisJCW9iai0+dXNlcnB0ci5wdmVjID0gcHZlYzsKKwkJb2JqLT51
c2VycHRyLm5vdGlmaWVyX3NlcSA9IG5vdGlmaWVyX3NlcTsKKworCQlwdmVjID0gTlVMTDsKKwl9
CisKK291dF91bmxvY2s6CisJc3Bpbl91bmxvY2soJmk5MTUtPm1tLm5vdGlmaWVyX2xvY2spOwor
CitvdXQ6CisJaWYgKHB2ZWMpIHsKKwkJdW5waW5fdXNlcl9wYWdlcyhwdmVjLCBwaW5uZWQpOwor
CQlrdmZyZWUocHZlYyk7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworaW50IGk5MTVfZ2VtX29i
amVjdF91c2VycHRyX3N1Ym1pdF9kb25lKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmop
Cit7CisJaWYgKG1tdV9pbnRlcnZhbF9yZWFkX3JldHJ5KCZvYmotPnVzZXJwdHIubm90aWZpZXIs
CisJCQkJICAgIG9iai0+dXNlcnB0ci5ub3RpZmllcl9zZXEpKSB7CisJCS8qIFdlIGNvbGxpZGVk
IHdpdGggdGhlIG1tdSBub3RpZmllciwgbmVlZCB0byByZXRyeSAqLworCisJCXJldHVybiAtRUFH
QUlOOworCX0KKworCXJldHVybiAwOworfQorCit2b2lkIGk5MTVfZ2VtX29iamVjdF91c2VycHRy
X3N1Ym1pdF9maW5pKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCit7CisJaTkxNV9n
ZW1fb2JqZWN0X3VzZXJwdHJfZHJvcF9yZWYob2JqKTsKIH0KIAogc3RhdGljIHZvaWQKIGk5MTVf
Z2VtX3VzZXJwdHJfcmVsZWFzZShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogewot
CWk5MTVfZ2VtX3VzZXJwdHJfcmVsZWFzZV9fbW11X25vdGlmaWVyKG9iaik7Ci0JaTkxNV9nZW1f
dXNlcnB0cl9yZWxlYXNlX19tbV9zdHJ1Y3Qob2JqKTsKKwlHRU1fV0FSTl9PTihvYmotPnVzZXJw
dHIucGFnZV9yZWYpOworCisJbW11X2ludGVydmFsX25vdGlmaWVyX3JlbW92ZSgmb2JqLT51c2Vy
cHRyLm5vdGlmaWVyKTsKKwlvYmotPnVzZXJwdHIubm90aWZpZXIubW0gPSBOVUxMOwogfQogCiBz
dGF0aWMgaW50CkBAIC02ODYsNyArMzgwLDYgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1faTkx
NV9nZW1fb2JqZWN0X29wcyBpOTE1X2dlbV91c2VycHRyX29wcyA9IHsKIAkubmFtZSA9ICJpOTE1
X2dlbV9vYmplY3RfdXNlcnB0ciIsCiAJLmZsYWdzID0gSTkxNV9HRU1fT0JKRUNUX0lTX1NIUklO
S0FCTEUgfAogCQkgSTkxNV9HRU1fT0JKRUNUX05PX01NQVAgfAotCQkgSTkxNV9HRU1fT0JKRUNU
X0FTWU5DX0NBTkNFTCB8CiAJCSBJOTE1X0dFTV9PQkpFQ1RfSVNfUFJPWFksCiAJLmdldF9wYWdl
cyA9IGk5MTVfZ2VtX3VzZXJwdHJfZ2V0X3BhZ2VzLAogCS5wdXRfcGFnZXMgPSBpOTE1X2dlbV91
c2VycHRyX3B1dF9wYWdlcywKQEAgLTgwNyw2ICs1MDAsNyBAQCBpOTE1X2dlbV91c2VycHRyX2lv
Y3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaTkxNV9nZW1fb2JqZWN0X3NldF9jYWNoZV9j
b2hlcmVuY3kob2JqLCBJOTE1X0NBQ0hFX0xMQyk7CiAKIAlvYmotPnVzZXJwdHIucHRyID0gYXJn
cy0+dXNlcl9wdHI7CisJb2JqLT51c2VycHRyLm5vdGlmaWVyX3NlcSA9IFVMT05HX01BWDsKIAlp
ZiAoYXJncy0+ZmxhZ3MgJiBJOTE1X1VTRVJQVFJfUkVBRF9PTkxZKQogCQlpOTE1X2dlbV9vYmpl
Y3Rfc2V0X3JlYWRvbmx5KG9iaik7CiAKQEAgLTgxNCw5ICs1MDgsNyBAQCBpOTE1X2dlbV91c2Vy
cHRyX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJICogYXQgYmluZGluZy4gVGhpcyBt
ZWFucyB0aGF0IHdlIG5lZWQgdG8gaG9vayBpbnRvIHRoZSBtbXVfbm90aWZpZXIKIAkgKiBpbiBv
cmRlciB0byBkZXRlY3QgaWYgdGhlIG1tdSBpcyBkZXN0cm95ZWQuCiAJICovCi0JcmV0ID0gaTkx
NV9nZW1fdXNlcnB0cl9pbml0X19tbV9zdHJ1Y3Qob2JqKTsKLQlpZiAocmV0ID09IDApCi0JCXJl
dCA9IGk5MTVfZ2VtX3VzZXJwdHJfaW5pdF9fbW11X25vdGlmaWVyKG9iaik7CisJcmV0ID0gaTkx
NV9nZW1fdXNlcnB0cl9pbml0X19tbXVfbm90aWZpZXIob2JqKTsKIAlpZiAocmV0ID09IDApCiAJ
CXJldCA9IGRybV9nZW1faGFuZGxlX2NyZWF0ZShmaWxlLCAmb2JqLT5iYXNlLCAmaGFuZGxlKTsK
IApAQCAtODM1LDE1ICs1MjcsNyBAQCBpOTE1X2dlbV91c2VycHRyX2lvY3RsKHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsCiBpbnQgaTkxNV9nZW1faW5pdF91c2VycHRyKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdikKIHsKICNpZmRlZiBDT05GSUdfTU1VX05PVElGSUVSCi0Jc3Bpbl9s
b2NrX2luaXQoJmRldl9wcml2LT5tbV9sb2NrKTsKLQloYXNoX2luaXQoZGV2X3ByaXYtPm1tX3N0
cnVjdHMpOwotCi0JZGV2X3ByaXYtPm1tLnVzZXJwdHJfd3EgPQotCQlhbGxvY193b3JrcXVldWUo
Imk5MTUtdXNlcnB0ci1hY3F1aXJlIiwKLQkJCQlXUV9ISUdIUFJJIHwgV1FfVU5CT1VORCwKLQkJ
CQkwKTsKLQlpZiAoIWRldl9wcml2LT5tbS51c2VycHRyX3dxKQotCQlyZXR1cm4gLUVOT01FTTsK
KwlzcGluX2xvY2tfaW5pdCgmZGV2X3ByaXYtPm1tLm5vdGlmaWVyX2xvY2spOwogI2VuZGlmCiAK
IAlyZXR1cm4gMDsKQEAgLTg1MSw3ICs1MzUsNCBAQCBpbnQgaTkxNV9nZW1faW5pdF91c2VycHRy
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAogdm9pZCBpOTE1X2dlbV9jbGVh
bnVwX3VzZXJwdHIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogewotI2lmZGVm
IENPTkZJR19NTVVfTk9USUZJRVIKLQlkZXN0cm95X3dvcmtxdWV1ZShkZXZfcHJpdi0+bW0udXNl
cnB0cl93cSk7Ci0jZW5kaWYKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IDIzZGI1YTVm
NWZjYi4uNzAyODBhMjc1ZGNlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTU5MSwxMSAr
NTkxLDEwIEBAIHN0cnVjdCBpOTE1X2dlbV9tbSB7CiAKICNpZmRlZiBDT05GSUdfTU1VX05PVElG
SUVSCiAJLyoqCi0JICogV29ya3F1ZXVlIHRvIGZhdWx0IGluIHVzZXJwdHIgcGFnZXMsIGZsdXNo
ZWQgYnkgdGhlIGV4ZWNidWYKLQkgKiB3aGVuIHJlcXVpcmVkIGJ1dCBvdGhlcndpc2UgbGVmdCB0
byB1c2Vyc3BhY2UgdG8gdHJ5IGFnYWluCi0JICogb24gRUFHQUlOLgorCSAqIG5vdGlmaWVyX2xv
Y2sgZm9yIG1tdSBub3RpZmllcnMsIG1lbW9yeSBtYXkgbm90IGJlIGFsbG9jYXRlZAorCSAqIHdo
aWxlIGhvbGRpbmcgdGhpcyBsb2NrLgogCSAqLwotCXN0cnVjdCB3b3JrcXVldWVfc3RydWN0ICp1
c2VycHRyX3dxOworCXNwaW5sb2NrX3Qgbm90aWZpZXJfbG9jazsKICNlbmRpZgogCiAJLyogc2hy
aW5rZXIgYWNjb3VudGluZywgYWxzbyB1c2VmdWwgZm9yIHVzZXJsYW5kIGRlYnVnZ2luZyAqLwpA
QCAtOTc4LDggKzk3Nyw2IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlIHsKIAlzdHJ1Y3QgaTkx
NV9nZ3R0IGdndHQ7IC8qIFZNIHJlcHJlc2VudGluZyB0aGUgZ2xvYmFsIGFkZHJlc3Mgc3BhY2Ug
Ki8KIAogCXN0cnVjdCBpOTE1X2dlbV9tbSBtbTsKLQlERUNMQVJFX0hBU0hUQUJMRShtbV9zdHJ1
Y3RzLCA3KTsKLQlzcGlubG9ja190IG1tX2xvY2s7CiAKIAkvKiBLZXJuZWwgTW9kZXNldHRpbmcg
Ki8KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKaW5kZXggZDM0OWMwYjc5NmVjLi5lNDA5NzIwMWYw
ZTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwpAQCAtMTE4MywxMCArMTE4Myw4IEBAIGludCBp
OTE1X2dlbV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIGVycl91bmxv
Y2s6CiAJaTkxNV9nZW1fZHJhaW5fd29ya3F1ZXVlKGRldl9wcml2KTsKIAotCWlmIChyZXQgIT0g
LUVJTykgeworCWlmIChyZXQgIT0gLUVJTykKIAkJaW50ZWxfdWNfY2xlYW51cF9maXJtd2FyZXMo
JmRldl9wcml2LT5ndC51Yyk7Ci0JCWk5MTVfZ2VtX2NsZWFudXBfdXNlcnB0cihkZXZfcHJpdik7
Ci0JfQogCiAJaWYgKHJldCA9PSAtRUlPKSB7CiAJCS8qCkBAIC0xMjQ1LDcgKzEyNDMsNiBAQCB2
b2lkIGk5MTVfZ2VtX2RyaXZlcl9yZWxlYXNlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAlpbnRlbF93YV9saXN0X2ZyZWUoJmRldl9wcml2LT5ndF93YV9saXN0KTsKIAogCWlu
dGVsX3VjX2NsZWFudXBfZmlybXdhcmVzKCZkZXZfcHJpdi0+Z3QudWMpOwotCWk5MTVfZ2VtX2Ns
ZWFudXBfdXNlcnB0cihkZXZfcHJpdik7CiAKIAlpOTE1X2dlbV9kcmFpbl9mcmVlZF9vYmplY3Rz
KGRldl9wcml2KTsKIAotLSAKMi4yOC4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZngK

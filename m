Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id D2B933CBCED
	for <lists+intel-gfx@lfdr.de>; Fri, 16 Jul 2021 21:45:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4DF566E9D2;
	Fri, 16 Jul 2021 19:45:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7F7DF6E9D2
 for <intel-gfx@lists.freedesktop.org>; Fri, 16 Jul 2021 19:45:22 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10047"; a="210772722"
X-IronPort-AV: E=Sophos;i="5.84,245,1620716400"; d="scan'208";a="210772722"
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Jul 2021 12:45:21 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.84,245,1620716400"; d="scan'208";a="429357599"
Received: from orsmsx605.amr.corp.intel.com ([10.22.229.18])
 by fmsmga007.fm.intel.com with ESMTP; 16 Jul 2021 12:45:21 -0700
Received: from orsmsx611.amr.corp.intel.com (10.22.229.24) by
 ORSMSX605.amr.corp.intel.com (10.22.229.18) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.4; Fri, 16 Jul 2021 12:45:21 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX611.amr.corp.intel.com (10.22.229.24) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.10; Fri, 16 Jul 2021 12:45:20 -0700
Received: from orsmsx610.amr.corp.intel.com ([10.22.229.23]) by
 ORSMSX610.amr.corp.intel.com ([10.22.229.23]) with mapi id 15.01.2242.010;
 Fri, 16 Jul 2021 12:45:20 -0700
From: "Souza, Jose" <jose.souza@intel.com>
To: "Roper, Matthew D" <matthew.d.roper@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [Intel-gfx] [PATCH v2 37/50] drm/i915/dg2: Add dbuf programming
Thread-Index: AQHXeF6iRQQAcPSeYEuc/b2ltqzCBKtGfAWA
Date: Fri, 16 Jul 2021 19:45:20 +0000
Message-ID: <24057dccffc0552b4733b6ef8e603a64a16c8695.camel@intel.com>
References: <20210714031540.3539704-1-matthew.d.roper@intel.com>
 <20210714031540.3539704-38-matthew.d.roper@intel.com>
In-Reply-To: <20210714031540.3539704-38-matthew.d.roper@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.22.254.132]
Content-ID: <8586B3961D080C4A951D2A61FB46F770@intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v2 37/50] drm/i915/dg2: Add dbuf programming
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gVHVlLCAyMDIxLTA3LTEzIGF0IDIwOjE1IC0wNzAwLCBNYXR0IFJvcGVyIHdyb3RlOg0KPiBE
RzIgZXh0ZW5kcyBvdXIgRERCIHRvIGZvdXIgREJ1ZiBzbGljZXM7IHBpcGVzIEErQiBvbmx5IGhh
dmUgYWNjZXNzIHRvDQo+IHRoZSBmaXJzdCB0d28gc2xpY2VzLCB3aGVyZWFzIHBpcGVzIEMrRCBv
bmx5IGhhdmUgYWNjZXNzIHRvIHRoZSBzZWNvbmQNCj4gdHdvLg0KPiANCj4gQ29uZnVzaW5nbHks
IG91ciBic3BlYyBkZWNpZGVkIHRvIHN3aXRjaCBmcm9tIDEtYmFzZWQgbnVtYmVyaW5nDQo+IG9m
IGRidWYgc2xpY2VzIChTMSwgUzIpIHRvIDAtYmFzZWQgbnVtYmVyaW5nIChTMCwgUzEsIFMyLCBT
MykgaW4NCj4gRGlzcGxheTEzLiAgQXQgdGhlIG1vbWVudCB3ZSdyZSB1c2luZyB0aGUgMC1iYXNl
ZCBudW1iZXIgc2NoZW1lIGZvciB0aGUNCj4gREJVRl9DVExfUygpIHJlZ2lzdGVyIGFkZHJlc3Np
bmcsIGJ1dCB0aGUgMS1iYXNlZCBudW1iZXIgc2NoZW1lIGluIHRoZQ0KPiBhY3R1YWwgc2xpY2Ug
YXNzaWdubWVudCB0YWJsZXMuICBXZSBtYXkgd2FudCB0byBjb25zaWRlciBzd2l0Y2hpbmcgdGhl
DQo+IGFzc2lnbm1lbnQgb3ZlciB0byAwLWJhc2VkIG51bWJlcmluZyB0b28gYXQgc29tZSBwb2lu
dC4uLg0KPiANCg0KUmV2aWV3ZWQtYnk6IEpvc8OpIFJvYmVydG8gZGUgU291emEgPGpvc2Uuc291
emFAaW50ZWwuY29tPg0KDQo+IEJzcGVjOiA0OTI1NQ0KPiBCc3BlYzogNTAwNTcNCj4gQ2M6IFN0
YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNraXlAaW50ZWwuY29tPg0KPiBTaWdu
ZWQtb2ZmLWJ5OiBNYXR0IFJvcGVyIDxtYXR0aGV3LmQucm9wZXJAaW50ZWwuY29tPg0KPiAtLS0N
Cj4gIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaCAgICB8ICAgNCAr
DQo+ICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCAxMjAg
KysrKysrKysrKysrKysrKystDQo+ICAyIGZpbGVzIGNoYW5nZWQsIDEyMyBpbnNlcnRpb25zKCsp
LCAxIGRlbGV0aW9uKC0pDQo+IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaA0KPiBpbmRleCAyMjM2N2I1Y2JhOTYuLmFkNzg4YmJk
NzI3ZCAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3Bvd2VyLmgNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5X3Bvd2VyLmgNCj4gQEAgLTM5Miw2ICszOTIsMTAgQEAgaW50ZWxfZGlzcGxheV9w
b3dlcl9wdXRfYWxsX2luX3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwNCj4gIAlp
bnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF9tYXNrX2luX3NldChpOTE1LCBwb3dlcl9kb21haW5fc2V0
LCBwb3dlcl9kb21haW5fc2V0LT5tYXNrKTsNCj4gIH0NCj4gIA0KPiArLyoNCj4gKyAqIEZJWE1F
OiBXZSBzaG91bGQgcHJvYmFibHkgc3dpdGNoIHRoaXMgdG8gYSAwLWJhc2VkIHNjaGVtZSB0byBi
ZSBjb25zaXN0ZW50DQo+ICsgKiB3aXRoIGhvdyB3ZSBub3cgbmFtZS9udW1iZXIgREJVRl9DVEwg
aW5zdGFuY2VzLg0KPiArICovDQo+ICBlbnVtIGRidWZfc2xpY2Ugew0KPiAgCURCVUZfUzEsDQo+
ICAJREJVRl9TMiwNCj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Bt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jDQo+IGluZGV4IDBjYmI3OTQ1MmZj
Zi4uZDdjN2YwNjFhMjZlIDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF9wbS5jDQo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMNCj4gQEAgLTQ1
ODQsNiArNDU4NCwxMTcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkYnVmX3NsaWNlX2NvbmZfZW50
cnkgdGdsX2FsbG93ZWRfZGJ1ZnNbXSA9DQo+ICAJe30NCj4gIH07DQo+ICANCj4gK3N0YXRpYyBj
b25zdCBzdHJ1Y3QgZGJ1Zl9zbGljZV9jb25mX2VudHJ5IGRnMl9hbGxvd2VkX2RidWZzW10gPSB7
DQo+ICsJew0KPiArCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSksDQo+ICsJCS5kYnVmX21h
c2sgPSB7DQo+ICsJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSB8IEJJVChEQlVGX1MyKSwNCj4g
KwkJfSwNCj4gKwl9LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0IpLA0K
PiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJW1BJUEVfQl0gPSBCSVQoREJVRl9TMSkgfCBCSVQo
REJVRl9TMiksDQo+ICsJCX0sDQo+ICsJfSwNCj4gKwl7DQo+ICsJCS5hY3RpdmVfcGlwZXMgPSBC
SVQoUElQRV9BKSB8IEJJVChQSVBFX0IpLA0KPiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJW1BJ
UEVfQV0gPSBCSVQoREJVRl9TMSksDQo+ICsJCQlbUElQRV9CXSA9IEJJVChEQlVGX1MyKSwNCj4g
KwkJfSwNCj4gKwl9LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0MpLA0K
PiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJW1BJUEVfQ10gPSBCSVQoREJVRl9TMykgfCBCSVQo
REJVRl9TNCksDQo+ICsJCX0sDQo+ICsJfSwNCj4gKwl7DQo+ICsJCS5hY3RpdmVfcGlwZXMgPSBC
SVQoUElQRV9BKSB8IEJJVChQSVBFX0MpLA0KPiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJW1BJ
UEVfQV0gPSBCSVQoREJVRl9TMSkgfCBCSVQoREJVRl9TMiksDQo+ICsJCQlbUElQRV9DXSA9IEJJ
VChEQlVGX1MzKSB8IEJJVChEQlVGX1M0KSwNCj4gKwkJfSwNCj4gKwl9LA0KPiArCXsNCj4gKwkJ
LmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0IpIHwgQklUKFBJUEVfQyksDQo+ICsJCS5kYnVmX21h
c2sgPSB7DQo+ICsJCQlbUElQRV9CXSA9IEJJVChEQlVGX1MxKSB8IEJJVChEQlVGX1MyKSwNCj4g
KwkJCVtQSVBFX0NdID0gQklUKERCVUZfUzMpIHwgQklUKERCVUZfUzQpLA0KPiArCQl9LA0KPiAr
CX0sDQo+ICsJew0KPiArCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSkgfCBCSVQoUElQRV9C
KSB8IEJJVChQSVBFX0MpLA0KPiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJW1BJUEVfQV0gPSBC
SVQoREJVRl9TMSksDQo+ICsJCQlbUElQRV9CXSA9IEJJVChEQlVGX1MyKSwNCj4gKwkJCVtQSVBF
X0NdID0gQklUKERCVUZfUzMpIHwgQklUKERCVUZfUzQpLA0KPiArCQl9LA0KPiArCX0sDQo+ICsJ
ew0KPiArCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfRCksDQo+ICsJCS5kYnVmX21hc2sgPSB7
DQo+ICsJCQlbUElQRV9EXSA9IEJJVChEQlVGX1MzKSB8IEJJVChEQlVGX1M0KSwNCj4gKwkJfSwN
Cj4gKwl9LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0EpIHwgQklUKFBJ
UEVfRCksDQo+ICsJCS5kYnVmX21hc2sgPSB7DQo+ICsJCQlbUElQRV9BXSA9IEJJVChEQlVGX1Mx
KSB8IEJJVChEQlVGX1MyKSwNCj4gKwkJCVtQSVBFX0RdID0gQklUKERCVUZfUzMpIHwgQklUKERC
VUZfUzQpLA0KPiArCQl9LA0KPiArCX0sDQo+ICsJew0KPiArCQkuYWN0aXZlX3BpcGVzID0gQklU
KFBJUEVfQikgfCBCSVQoUElQRV9EKSwNCj4gKwkJLmRidWZfbWFzayA9IHsNCj4gKwkJCVtQSVBF
X0JdID0gQklUKERCVUZfUzEpIHwgQklUKERCVUZfUzIpLA0KPiArCQkJW1BJUEVfRF0gPSBCSVQo
REJVRl9TMykgfCBCSVQoREJVRl9TNCksDQo+ICsJCX0sDQo+ICsJfSwNCj4gKwl7DQo+ICsJCS5h
Y3RpdmVfcGlwZXMgPSBCSVQoUElQRV9BKSB8IEJJVChQSVBFX0IpIHwgQklUKFBJUEVfRCksDQo+
ICsJCS5kYnVmX21hc2sgPSB7DQo+ICsJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSwNCj4gKwkJ
CVtQSVBFX0JdID0gQklUKERCVUZfUzIpLA0KPiArCQkJW1BJUEVfRF0gPSBCSVQoREJVRl9TMykg
fCBCSVQoREJVRl9TNCksDQo+ICsJCX0sDQo+ICsJfSwNCj4gKwl7DQo+ICsJCS5hY3RpdmVfcGlw
ZXMgPSBCSVQoUElQRV9DKSB8IEJJVChQSVBFX0QpLA0KPiArCQkuZGJ1Zl9tYXNrID0gew0KPiAr
CQkJW1BJUEVfQ10gPSBCSVQoREJVRl9TMyksDQo+ICsJCQlbUElQRV9EXSA9IEJJVChEQlVGX1M0
KSwNCj4gKwkJfSwNCj4gKwl9LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBF
X0EpIHwgQklUKFBJUEVfQykgfCBCSVQoUElQRV9EKSwNCj4gKwkJLmRidWZfbWFzayA9IHsNCj4g
KwkJCVtQSVBFX0FdID0gQklUKERCVUZfUzEpIHwgQklUKERCVUZfUzIpLA0KPiArCQkJW1BJUEVf
Q10gPSBCSVQoREJVRl9TMyksDQo+ICsJCQlbUElQRV9EXSA9IEJJVChEQlVGX1M0KSwNCj4gKwkJ
fSwNCj4gKwl9LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0IpIHwgQklU
KFBJUEVfQykgfCBCSVQoUElQRV9EKSwNCj4gKwkJLmRidWZfbWFzayA9IHsNCj4gKwkJCVtQSVBF
X0JdID0gQklUKERCVUZfUzEpIHwgQklUKERCVUZfUzIpLA0KPiArCQkJW1BJUEVfQ10gPSBCSVQo
REJVRl9TMyksDQo+ICsJCQlbUElQRV9EXSA9IEJJVChEQlVGX1M0KSwNCj4gKwkJfSwNCj4gKwl9
LA0KPiArCXsNCj4gKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikg
fCBCSVQoUElQRV9DKSB8IEJJVChQSVBFX0QpLA0KPiArCQkuZGJ1Zl9tYXNrID0gew0KPiArCQkJ
W1BJUEVfQV0gPSBCSVQoREJVRl9TMSksDQo+ICsJCQlbUElQRV9CXSA9IEJJVChEQlVGX1MyKSwN
Cj4gKwkJCVtQSVBFX0NdID0gQklUKERCVUZfUzMpLA0KPiArCQkJW1BJUEVfRF0gPSBCSVQoREJV
Rl9TNCksDQo+ICsJCX0sDQo+ICsJfSwNCj4gKwl7fQ0KPiArfTsNCj4gKw0KPiAgc3RhdGljIGNv
bnN0IHN0cnVjdCBkYnVmX3NsaWNlX2NvbmZfZW50cnkgYWRscF9hbGxvd2VkX2RidWZzW10gPSB7
DQo+ICAJew0KPiAgCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSksDQo+IEBAIC00NzU5LDEy
ICs0ODcwLDE5IEBAIHN0YXRpYyB1MzIgYWRscF9jb21wdXRlX2RidWZfc2xpY2VzKGVudW0gcGlw
ZSBwaXBlLCB1MzIgYWN0aXZlX3BpcGVzKQ0KPiAgCXJldHVybiBjb21wdXRlX2RidWZfc2xpY2Vz
KHBpcGUsIGFjdGl2ZV9waXBlcywgYWRscF9hbGxvd2VkX2RidWZzKTsNCj4gIH0NCj4gIA0KPiAr
c3RhdGljIHUzMiBkZzJfY29tcHV0ZV9kYnVmX3NsaWNlcyhlbnVtIHBpcGUgcGlwZSwgdTMyIGFj
dGl2ZV9waXBlcykNCj4gK3sNCj4gKwlyZXR1cm4gY29tcHV0ZV9kYnVmX3NsaWNlcyhwaXBlLCBh
Y3RpdmVfcGlwZXMsIGRnMl9hbGxvd2VkX2RidWZzKTsNCj4gK30NCj4gKw0KPiAgc3RhdGljIHU4
IHNrbF9jb21wdXRlX2RidWZfc2xpY2VzKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLCB1OCBhY3Rp
dmVfcGlwZXMpDQo+ICB7DQo+ICAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
dG9faTkxNShjcnRjLT5iYXNlLmRldik7DQo+ICAJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBl
Ow0KPiAgDQo+IC0JaWYgKElTX0FMREVSTEFLRV9QKGRldl9wcml2KSkNCj4gKwlpZiAoSVNfREcy
KGRldl9wcml2KSkNCj4gKwkJcmV0dXJuIGRnMl9jb21wdXRlX2RidWZfc2xpY2VzKHBpcGUsIGFj
dGl2ZV9waXBlcyk7DQo+ICsJZWxzZSBpZiAoSVNfQUxERVJMQUtFX1AoZGV2X3ByaXYpKQ0KPiAg
CQlyZXR1cm4gYWRscF9jb21wdXRlX2RidWZfc2xpY2VzKHBpcGUsIGFjdGl2ZV9waXBlcyk7DQo+
ICAJZWxzZSBpZiAoRElTUExBWV9WRVIoZGV2X3ByaXYpID09IDEyKQ0KPiAgCQlyZXR1cm4gdGds
X2NvbXB1dGVfZGJ1Zl9zbGljZXMocGlwZSwgYWN0aXZlX3BpcGVzKTsNCg0KX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlz
dApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0
b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

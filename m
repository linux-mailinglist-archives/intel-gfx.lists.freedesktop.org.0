Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2ACAC14454D
	for <lists+intel-gfx@lfdr.de>; Tue, 21 Jan 2020 20:44:13 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B78F26EE56;
	Tue, 21 Jan 2020 19:44:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 17B8C6EE56
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 Jan 2020 19:44:07 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Jan 2020 11:44:06 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,347,1574150400"; d="scan'208";a="307303212"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by orsmga001.jf.intel.com with SMTP; 21 Jan 2020 11:44:04 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Tue, 21 Jan 2020 21:44:03 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 21 Jan 2020 21:44:03 +0200
Message-Id: <20200121194403.15066-1-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200121171100.4370-10-ville.syrjala@linux.intel.com>
References: <20200121171100.4370-10-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 09/11] drm/i915: Turn
 intel_digital_port_connected() in a vfunc
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCkxl
dCdzIGdldCByaWQgb2YgdGhlIHBsYXRmb3JtIGlmIGxhZGRlcnMgaW4KaW50ZWxfZGlnaXRhbF9w
b3J0X2Nvbm5lY3RlZCgpIGFuZCBtYWtlIGl0IGEgdmZ1bmMuIE5vdyB0aGUgaWYKbGFkZGVycyBh
cmUgYXQgdGhlIGVuY29kZXIgaW5pdGlhbGl6YXRpb24gd2hpY2ggbWFrZXMgdGhlbSBhIGJpdAps
ZXNzIGNvbnZvbHV0ZWQuCgp2MjogQWRkIGZvcndhcmQgZGVjbCBmb3IgaW50ZWxfZW5jb2RlciBp
biBpbnRlbF90Yy5oCgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmph
bGFAbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGRpLmMgICAgICB8ICAxOSArKysrCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmggICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kcC5jICAgICAgIHwgMTA3ICsrKysrLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcC5oICAgICAgIHwgICA2ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfdGMuYyAgICAgICB8ICAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF90Yy5oICAgICAgIHwgICAzICstCiA2IGZpbGVzIGNoYW5nZWQsIDYxIGlu
c2VydGlvbnMoKyksIDc4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5jCmluZGV4IGJiZjFjMGEyNDNhMi4uZDk4Mzg2MDU2MGNmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKQEAgLTQ4OTAsNiArNDg5MCwyNSBAQCB2
b2lkIGludGVsX2RkaV9pbml0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51
bSBwb3J0IHBvcnQpCiAJCQkJcG9ydF9uYW1lKHBvcnQpKTsKIAl9CiAKKwlpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA+PSAxMSkgeworCQlpZiAoaW50ZWxfcGh5X2lzX3RjKGRldl9wcml2LCBwaHkp
KQorCQkJaW50ZWxfZGlnX3BvcnQtPmNvbm5lY3RlZCA9IGludGVsX3RjX3BvcnRfY29ubmVjdGVk
OworCQllbHNlCisJCQlpbnRlbF9kaWdfcG9ydC0+Y29ubmVjdGVkID0gaWNwX2RpZ2l0YWxfcG9y
dF9jb25uZWN0ZWQ7CisJfSBlbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2KSkgeworCQlpbnRl
bF9kaWdfcG9ydC0+Y29ubmVjdGVkID0gYnh0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQ7CisJfSBl
bHNlIGlmIChwb3J0ID09IFBPUlRfQSkgeworCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA4
KQorCQkJaW50ZWxfZGlnX3BvcnQtPmNvbm5lY3RlZCA9IGJkd19kaWdpdGFsX3BvcnRfY29ubmVj
dGVkOworCQllbHNlCisJCQlpbnRlbF9kaWdfcG9ydC0+Y29ubmVjdGVkID0gaXZiX2RpZ2l0YWxf
cG9ydF9jb25uZWN0ZWQ7CisJfSBlbHNlIHsKKwkJaWYgKElOVEVMX1BDSF9UWVBFKGRldl9wcml2
KSA+PSBQQ0hfU1BUKQorCQkJaW50ZWxfZGlnX3BvcnQtPmNvbm5lY3RlZCA9IHNwdF9kaWdpdGFs
X3BvcnRfY29ubmVjdGVkOworCQllbHNlCisJCQlpbnRlbF9kaWdfcG9ydC0+Y29ubmVjdGVkID0g
Y3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQ7CisJfQorCiAJaW50ZWxfaW5mb2ZyYW1lX2luaXQo
aW50ZWxfZGlnX3BvcnQpOwogCiAJcmV0dXJuOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCA4YzljZmFmY2ExOTUuLjJiMzA4
YzYxMmEwMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKQEAgLTEzNzEsNiArMTM3MSw3IEBAIHN0cnVjdCBpbnRlbF9kaWdpdGFs
X3BvcnQgewogCQkJICAgICAgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25u
X3N0YXRlKTsKIAl1MzIgKCppbmZvZnJhbWVzX2VuYWJsZWQpKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29u
ZmlnKTsKKwlib29sICgqY29ubmVjdGVkKShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7
CiB9OwogCiBzdHJ1Y3QgaW50ZWxfZHBfbXN0X2VuY29kZXIgewpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcC5jCmluZGV4IDk5NTYzNjc3MTJlOS4uNGUxZjczZjgwOTUxIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCkBAIC01MzcxLDcgKzUzNzEsNyBA
QCBzdGF0aWMgYm9vbCBpYnhfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlcikKIAlyZXR1cm4gSTkxNV9SRUFEKFNERUlTUikgJiBiaXQ7CiB9CiAKLXN0
YXRpYyBib29sIGNwdF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyKQorYm9vbCBjcHRfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlcikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKIAl1MzIgYml0OwpAQCAtNTM5NCw3ICs1Mzk0
LDcgQEAgc3RhdGljIGJvb2wgY3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIpCiAJcmV0dXJuIEk5MTVfUkVBRChTREVJU1IpICYgYml0OwogfQog
Ci1zdGF0aWMgYm9vbCBzcHRfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5j
b2RlciAqZW5jb2RlcikKK2Jvb2wgc3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAJdTMyIGJpdDsKQEAgLTU0NjMsNDMg
KzU0NjMsMjQgQEAgc3RhdGljIGJvb2wgaWxrX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAKLQlpZiAoZW5jb2Rlci0+aHBk
X3BpbiA9PSBIUERfUE9SVF9BKQotCQlyZXR1cm4gSTkxNV9SRUFEKERFSVNSKSAmIERFX0RQX0Ff
SE9UUExVRzsKLQllbHNlCi0JCXJldHVybiBpYnhfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChlbmNv
ZGVyKTsKKwlyZXR1cm4gSTkxNV9SRUFEKERFSVNSKSAmIERFX0RQX0FfSE9UUExVRzsKIH0KIAot
c3RhdGljIGJvb2wgc25iX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIpCitib29sIGl2Yl9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCi0JaWYgKGVuY29kZXItPmhwZF9waW4g
PT0gSFBEX1BPUlRfQSkKLQkJcmV0dXJuIEk5MTVfUkVBRChERUlTUikgJiBERV9EUF9BX0hPVFBM
VUc7Ci0JZWxzZQotCQlyZXR1cm4gY3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoZW5jb2Rlcik7
CisJcmV0dXJuIEk5MTVfUkVBRChERUlTUikgJiBERV9EUF9BX0hPVFBMVUdfSVZCOwogfQogCi1z
dGF0aWMgYm9vbCBpdmJfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlcikKK2Jvb2wgYmR3X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CiAKLQlpZiAoZW5jb2Rlci0+aHBkX3BpbiA9
PSBIUERfUE9SVF9BKQotCQlyZXR1cm4gSTkxNV9SRUFEKERFSVNSKSAmIERFX0RQX0FfSE9UUExV
R19JVkI7Ci0JZWxzZQotCQlyZXR1cm4gY3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoZW5jb2Rl
cik7CisJcmV0dXJuIEk5MTVfUkVBRChHRU44X0RFX1BPUlRfSVNSKSAmIEdFTjhfUE9SVF9EUF9B
X0hPVFBMVUc7CiB9CiAKLXN0YXRpYyBib29sIGJkd19kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQotewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwotCi0JaWYgKGVuY29kZXIt
PmhwZF9waW4gPT0gSFBEX1BPUlRfQSkKLQkJcmV0dXJuIEk5MTVfUkVBRChHRU44X0RFX1BPUlRf
SVNSKSAmIEdFTjhfUE9SVF9EUF9BX0hPVFBMVUc7Ci0JZWxzZQotCQlyZXR1cm4gY3B0X2RpZ2l0
YWxfcG9ydF9jb25uZWN0ZWQoZW5jb2Rlcik7Ci19Ci0KLXN0YXRpYyBib29sIGJ4dF9kaWdpdGFs
X3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQorYm9vbCBieHRf
ZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIHsK
IAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJh
c2UuZGV2KTsKIAl1MzIgYml0OwpAQCAtNTUyMiwzMSArNTUwMywxNyBAQCBzdGF0aWMgYm9vbCBi
eHRfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikK
IAlyZXR1cm4gSTkxNV9SRUFEKEdFTjhfREVfUE9SVF9JU1IpICYgYml0OwogfQogCi1zdGF0aWMg
Ym9vbCBpbnRlbF9jb21ib19waHlfY29ubmVjdGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKLQkJCQkgICAgICBlbnVtIHBoeSBwaHkpCitib29sIGljcF9kaWdpdGFsX3BvcnRf
Y29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQogeworCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOworCWVu
dW0gcGh5IHBoeSA9IGludGVsX3BvcnRfdG9fcGh5KGRldl9wcml2LCBlbmNvZGVyLT5wb3J0KTsK
KwogCWlmIChIQVNfUENIX01DQyhkZXZfcHJpdikgJiYgcGh5ID09IFBIWV9DKQogCQlyZXR1cm4g
STkxNV9SRUFEKFNERUlTUikgJiBTREVfVENfSE9UUExVR19JQ1AoUE9SVF9UQzEpOwogCiAJcmV0
dXJuIEk5MTVfUkVBRChTREVJU1IpICYgU0RFX0RESV9IT1RQTFVHX0lDUChwaHkpOwogfQogCi1z
dGF0aWMgYm9vbCBpY3BfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2Rl
ciAqZW5jb2RlcikKLXsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KGVuY29kZXItPmJhc2UuZGV2KTsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCA9IGVuY190b19kaWdfcG9ydChlbmNvZGVyKTsKLQllbnVtIHBoeSBwaHkgPSBpbnRlbF9w
b3J0X3RvX3BoeShkZXZfcHJpdiwgZW5jb2Rlci0+cG9ydCk7Ci0KLQlpZiAoaW50ZWxfcGh5X2lz
X2NvbWJvKGRldl9wcml2LCBwaHkpKQotCQlyZXR1cm4gaW50ZWxfY29tYm9fcGh5X2Nvbm5lY3Rl
ZChkZXZfcHJpdiwgcGh5KTsKLQllbHNlIGlmIChpbnRlbF9waHlfaXNfdGMoZGV2X3ByaXYsIHBo
eSkpCi0JCXJldHVybiBpbnRlbF90Y19wb3J0X2Nvbm5lY3RlZChkaWdfcG9ydCk7Ci0JZWxzZQot
CQlNSVNTSU5HX0NBU0UoZW5jb2Rlci0+aHBkX3Bpbik7Ci0KLQlyZXR1cm4gZmFsc2U7Ci19Ci0K
IC8qCiAgKiBpbnRlbF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkIC0gaXMgdGhlIHNwZWNpZmllZCBw
b3J0IGNvbm5lY3RlZD8KICAqIEBlbmNvZGVyOiBpbnRlbF9lbmNvZGVyCkBAIC01NTU4LDQ0ICs1
NTI1LDE1IEBAIHN0YXRpYyBib29sIGljcF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyKQogICoKICAqIFJldHVybiAldHJ1ZSBpZiBwb3J0IGlzIGNv
bm5lY3RlZCwgJWZhbHNlIG90aGVyd2lzZS4KICAqLwotc3RhdGljIGJvb2wgX19pbnRlbF9kaWdp
dGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKQotewotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5k
ZXYpOwotCi0JaWYgKEhBU19HTUNIKGRldl9wcml2KSkgewotCQlpZiAoSVNfR000NShkZXZfcHJp
dikpCi0JCQlyZXR1cm4gZ200NV9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKGVuY29kZXIpOwotCQll
bHNlCi0JCQlyZXR1cm4gZzR4X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoZW5jb2Rlcik7Ci0JfQot
Ci0JaWYgKElOVEVMX1BDSF9UWVBFKGRldl9wcml2KSA+PSBQQ0hfSUNQKQotCQlyZXR1cm4gaWNw
X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoZW5jb2Rlcik7Ci0JZWxzZSBpZiAoSU5URUxfUENIX1RZ
UEUoZGV2X3ByaXYpID49IFBDSF9TUFQpCi0JCXJldHVybiBzcHRfZGlnaXRhbF9wb3J0X2Nvbm5l
Y3RlZChlbmNvZGVyKTsKLQllbHNlIGlmIChJU19HRU45X0xQKGRldl9wcml2KSkKLQkJcmV0dXJu
IGJ4dF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKGVuY29kZXIpOwotCWVsc2UgaWYgKElTX0dFTihk
ZXZfcHJpdiwgOCkpCi0JCXJldHVybiBiZHdfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChlbmNvZGVy
KTsKLQllbHNlIGlmIChJU19HRU4oZGV2X3ByaXYsIDcpKQotCQlyZXR1cm4gaXZiX2RpZ2l0YWxf
cG9ydF9jb25uZWN0ZWQoZW5jb2Rlcik7Ci0JZWxzZSBpZiAoSVNfR0VOKGRldl9wcml2LCA2KSkK
LQkJcmV0dXJuIHNuYl9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKGVuY29kZXIpOwotCWVsc2UgaWYg
KElTX0dFTihkZXZfcHJpdiwgNSkpCi0JCXJldHVybiBpbGtfZGlnaXRhbF9wb3J0X2Nvbm5lY3Rl
ZChlbmNvZGVyKTsKLQotCU1JU1NJTkdfQ0FTRShJTlRFTF9HRU4oZGV2X3ByaXYpKTsKLQlyZXR1
cm4gZmFsc2U7Ci19Ci0KIGJvb2wgaW50ZWxfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlcikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGVuY29kZXItPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRh
bF9wb3J0ICpkaWdfcG9ydCA9IGVuY190b19kaWdfcG9ydChlbmNvZGVyKTsKIAlib29sIGlzX2Nv
bm5lY3RlZCA9IGZhbHNlOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwogCiAJd2l0aF9pbnRl
bF9kaXNwbGF5X3Bvd2VyKGRldl9wcml2LCBQT1dFUl9ET01BSU5fRElTUExBWV9DT1JFLCB3YWtl
cmVmKQotCQlpc19jb25uZWN0ZWQgPSBfX2ludGVsX2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoZW5j
b2Rlcik7CisJCWlzX2Nvbm5lY3RlZCA9IGRpZ19wb3J0LT5jb25uZWN0ZWQoZW5jb2Rlcik7CiAK
IAlyZXR1cm4gaXNfY29ubmVjdGVkOwogfQpAQCAtNzYzNCw2ICs3NTcyLDIzIEBAIGJvb2wgaW50
ZWxfZHBfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAKIAlpbnRlbF9k
aWdfcG9ydC0+aHBkX3B1bHNlID0gaW50ZWxfZHBfaHBkX3B1bHNlOwogCisJaWYgKEhBU19HTUNI
KGRldl9wcml2KSkgeworCQlpZiAoSVNfR000NShkZXZfcHJpdikpCisJCQlpbnRlbF9kaWdfcG9y
dC0+Y29ubmVjdGVkID0gZ200NV9kaWdpdGFsX3BvcnRfY29ubmVjdGVkOworCQllbHNlCisJCQlp
bnRlbF9kaWdfcG9ydC0+Y29ubmVjdGVkID0gZzR4X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQ7CisJ
fSBlbHNlIGlmIChwb3J0ID09IFBPUlRfQSkgeworCQlpZiAoSVNfSVZZQlJJREdFKGRldl9wcml2
KSkKKwkJCWludGVsX2RpZ19wb3J0LT5jb25uZWN0ZWQgPSBpdmJfZGlnaXRhbF9wb3J0X2Nvbm5l
Y3RlZDsKKwkJZWxzZQorCQkJaW50ZWxfZGlnX3BvcnQtPmNvbm5lY3RlZCA9IGlsa19kaWdpdGFs
X3BvcnRfY29ubmVjdGVkOworCX0gZWxzZSB7CisJCWlmIChIQVNfUENIX0NQVChkZXZfcHJpdikp
CisJCQlpbnRlbF9kaWdfcG9ydC0+Y29ubmVjdGVkID0gY3B0X2RpZ2l0YWxfcG9ydF9jb25uZWN0
ZWQ7CisJCWVsc2UKKwkJCWludGVsX2RpZ19wb3J0LT5jb25uZWN0ZWQgPSBpYnhfZGlnaXRhbF9w
b3J0X2Nvbm5lY3RlZDsKKwl9CisKIAlpZiAocG9ydCAhPSBQT1JUX0EpCiAJCWludGVsX2luZm9m
cmFtZV9pbml0KGludGVsX2RpZ19wb3J0KTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kcC5oCmluZGV4IDNkYTE2NjA1NDc4OC4uY2YwZGY2ZjE4NzM0IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oCkBAIC0xMTYsNiArMTE2LDEyIEBAIHZvaWQgaW50
ZWxfZHBfdnNjX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogdm9pZCBpbnRlbF9k
cF9oZHJfbWV0YWRhdGFfZW5hYmxlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJCQkJICBj
b25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgIGNvbnN0IHN0
cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKTsKK2Jvb2wgY3B0X2RpZ2l0YWxf
cG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpOworYm9vbCBzcHRf
ZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7Citi
b29sIGl2Yl9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyKTsKK2Jvb2wgYmR3X2RpZ2l0YWxfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXIpOworYm9vbCBieHRfZGlnaXRhbF9wb3J0X2Nvbm5lY3RlZChzdHJ1Y3QgaW50
ZWxfZW5jb2RlciAqZW5jb2Rlcik7Citib29sIGljcF9kaWdpdGFsX3BvcnRfY29ubmVjdGVkKHN0
cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyKTsKIGJvb2wgaW50ZWxfZGlnaXRhbF9wb3J0X2Nv
bm5lY3RlZChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7CiAKIHN0YXRpYyBpbmxpbmUg
dW5zaWduZWQgaW50IGludGVsX2RwX3VudXNlZF9sYW5lX21hc2soaW50IGxhbmVfY291bnQpCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMKaW5kZXggNzc3MzE2OWI3MzMxLi5m
NDk4MDc2YjEzMmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfdGMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3RjLmMKQEAg
LTQ3Nyw4ICs0NzcsOSBAQCBzdGF0aWMgYm9vbCBpbnRlbF90Y19wb3J0X25lZWRzX3Jlc2V0KHN0
cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KQogICogY29ubmVjdGVkIHBvcnRzIGFy
ZSB1c2FibGUsIGFuZCBhdm9pZHMgZXhwb3NpbmcgdG8gdGhlIHVzZXJzIG9iamVjdHMgdGhleQog
ICogY2FuJ3QgcmVhbGx5IHVzZS4KICAqLwotYm9vbCBpbnRlbF90Y19wb3J0X2Nvbm5lY3RlZChz
dHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCkKK2Jvb2wgaW50ZWxfdGNfcG9ydF9j
b25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpCiB7CisJc3RydWN0IGludGVs
X2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBlbmNfdG9fZGlnX3BvcnQoZW5jb2Rlcik7CiAJYm9v
bCBpc19jb25uZWN0ZWQ7CiAKIAlpbnRlbF90Y19wb3J0X2xvY2soZGlnX3BvcnQpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5oCmluZGV4IDQ2M2YxYjNjODM2Zi4uYjYxOWU0
NzM2Zjg1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Rj
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF90Yy5oCkBAIC0xMCw4
ICsxMCw5IEBACiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAogc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydDsKK3N0cnVjdCBpbnRlbF9lbmNvZGVyOwogCi1ib29sIGludGVsX3RjX3BvcnRfY29u
bmVjdGVkKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0KTsKK2Jvb2wgaW50ZWxf
dGNfcG9ydF9jb25uZWN0ZWQoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIpOwogdTMyIGlu
dGVsX3RjX3BvcnRfZ2V0X2xhbmVfbWFzayhzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdf
cG9ydCk7CiB1MzIgaW50ZWxfdGNfcG9ydF9nZXRfcGluX2Fzc2lnbm1lbnRfbWFzayhzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCk7CiBpbnQgaW50ZWxfdGNfcG9ydF9maWFfbWF4
X2xhbmVfY291bnQoc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQpOwotLSAKMi4y
NC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRl
bC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

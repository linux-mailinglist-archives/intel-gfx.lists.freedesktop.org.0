Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 293FCFE0AC
	for <lists+intel-gfx@lfdr.de>; Fri, 15 Nov 2019 15:56:51 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C40806E634;
	Fri, 15 Nov 2019 14:56:48 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B09F96E634
 for <intel-gfx@lists.freedesktop.org>; Fri, 15 Nov 2019 14:56:40 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 15 Nov 2019 06:56:40 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,308,1569308400"; d="scan'208";a="203408572"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by fmsmga008.fm.intel.com with ESMTP; 15 Nov 2019 06:56:38 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 15 Nov 2019 16:54:00 +0200
Message-Id: <20191115145401.20709-2-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191115145401.20709-1-stanislav.lisovskiy@intel.com>
References: <20191115145401.20709-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v12 1/2] drm/i915: Refactor intel_can_enable_sagv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q3VycmVudGx5IGludGVsX2Nhbl9lbmFibGVfc2FndiBmdW5jdGlvbiBjb250YWlucwphIG1peCBv
ZiB3b3JrYXJvdW5kcyBmb3IgZGlmZmVyZW50IHBsYXRmb3Jtcwpzb21lIG9mIHRoZW0gYXJlIG5v
dCB2YWxpZCBmb3IgZ2VucyA+PSAxMSBhbHJlYWR5LApzbyBsZXRzIHNwbGl0IGl0IGludG8gc2Vw
YXJhdGUgZnVuY3Rpb25zLgoKdjI6CiAgICAtIFJld29yayB3YXRlcm1hcmsgY2FsY3VsYXRpb24g
YWxnb3JpdGhtIHRvCiAgICAgIGF0dGVtcHQgdG8gY2FsY3VsYXRlIExldmVsIDAgd2F0ZXJtYXJr
CiAgICAgIHdpdGggYWRkZWQgc2FndiBibG9jayB0aW1lIGxhdGVuY3kgYW5kCiAgICAgIGNoZWNr
IGlmIGl0IGZpdHMgaW4gREJ1ZiBpbiBvcmRlciB0bwogICAgICBkZXRlcm1pbmUgaWYgU0FHViBj
YW4gYmUgZW5hYmxlZCBhbHJlYWR5CiAgICAgIGF0IHRoaXMgc3RhZ2UsIGp1c3QgYXMgQlNwZWMg
NDkzMjUgc3RhdGVzLgogICAgICBpZiB0aGF0IGZhaWxzIHJvbGxiYWNrIHRvIHVzdWFsIExldmVs
IDAKICAgICAgbGF0ZW5jeSBhbmQgZGlzYWJsZSBTQUdWLgogICAgLSBSZW1vdmUgdW5uZWVkZWQg
dGFicyhKYW1lcyBBdXNtdXMpCgp2MzogUmViYXNlZCB0aGUgcGF0Y2gKCnY0OiAtIEFkZGVkIGJh
Y2sgaW50ZXJsYWNlZCBjaGVjayBmb3IgR2VuMTIgYW5kCiAgICAgIGFkZGVkIHNlcGFyYXRlIGZ1
bmN0aW9uIGZvciBUR0wgU0FHViBjaGVjawogICAgICAodGhhbmtzIHRvIEphbWVzIEF1c211cyBm
b3Igc3BvdHRpbmcpCiAgICAtIFJlbW92ZWQgdW5uZWVkZWQgZ2VuIGNoZWNrCiAgICAtIEV4dHJh
Y3RlZCBHZW4xMiBTQUdWIGRlY2lzaW9uIG1ha2luZyBjb2RlCiAgICAgIHRvIGEgc2VwYXJhdGUg
ZnVuY3Rpb24gZnJvbSBza2xfY29tcHV0ZV93bQoKdjU6IC0gQWRkZWQgU0FHViBnbG9iYWwgc3Rh
dGUgdG8gZGV2X3ByaXYsIGJlY2F1c2UKICAgICAgd2UgbmVlZCB0byB0cmFjayBhbGwgcGlwZXMs
IG5vdCBvbmx5IHRob3NlCiAgICAgIGluIGF0b21pYyBzdGF0ZS4gRWFjaCBwaXBlIGhhcyBub3cg
Y29ycmVzcG9uZGVudAogICAgICBiaXQgbWFzayByZWZsZWN0aW5nLCB3aGV0aGVyIGl0IGNhbiB0
b2xlcmF0ZQogICAgICBTQUdWIG9yIG5vdCh0aGFua3MgdG8gVmlsbGUgU3lyamFsYSBmb3Igc3Vn
Z2VzdGlvbnMpLgogICAgLSBOb3cgdXNpbmcgYWN0aXZlIGZsYWcgaW5zdGVhZCBvZiBlbmFibGUg
aW4gY3JjCiAgICAgIHVzYWdlIGNoZWNrLgoKdjY6IC0gRml4ZWQgcmViYXNlIGNvbmZsaWN0cwoK
djc6IC0ga21zX2N1cnNvcl9sZWdhY3kgc2VlbXMgdG8gZ2V0IGJyb2tlbiBiZWNhdXNlIG9mIG11
bHRpcGxlIG1lbWNweQogICAgICBjYWxscyB3aGVuIGNvcHlpbmcgbGV2ZWwgMCB3YXRlciBtYXJr
cyBmb3IgZW5hYmxlZCBTQUdWLCB0bwogICAgICBmaXggdGhpcyBub3cgc2ltcGx5IHVzaW5nIHRo
YXQgZmllbGQgcmlnaHQgYXdheSwgd2l0aG91dCBjb3B5aW5nLAogICAgICBmb3IgdGhhdCBpbnRy
b2R1Y2VkIGEgbmV3IHdtX2xldmVsIGFjY2Vzc29yIHdoaWNoIGRlY2lkZXMgd2hpY2gKICAgICAg
d21fbGV2ZWwgdG8gcmV0dXJuIGJhc2VkIG9uIFNBR1Ygc3RhdGUuCgp2ODogLSBQcm90ZWN0IGNy
dGNfc2Fndl9tYXNrIHNhbWUgd2F5IGFzIHdlIGRvIGZvciBvdGhlciBnbG9iYWwgc3RhdGUKICAg
ICAgY2hhbmdlczogaS5lIGNoZWNrIGlmIGNoYW5nZXMgYXJlIG5lZWRlZCwgdGhlbiBncmFiIGFs
bCBjcnRjIGxvY2tzCiAgICAgIHRvIHNlcmlhbGl6ZSB0aGUgY2hhbmdlcy4KClNpZ25lZC1vZmYt
Ynk6IFN0YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNraXlAaW50ZWwuY29tPgpD
YzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGludGVsLmNvbT4KQ2M6IEphbWVzIEF1
c211cyA8amFtZXMuYXVzbXVzQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgMTIgKy0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAxNSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oICAgICAgICAgICAgICAgfCAgIDYgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uYyAgICAgICAgICAgICAgIHwgNDE4ICsrKysrKysrKysrKysrKystLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uaCAgICAgICAgICAgICAgIHwgICAxICsKIDUgZmlsZXMgY2hhbmdl
ZCwgNDA5IGluc2VydGlvbnMoKyksIDQzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5kZXggYWRmNTBjNGIzOGFkLi43ZjMxZTMz
ZDBiMTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5j
CkBAIC0xMzQwMSw3ICsxMzQwMSwxMCBAQCBzdGF0aWMgdm9pZCB2ZXJpZnlfd21fc3RhdGUoc3Ry
dWN0IGludGVsX2NydGMgKmNydGMsCiAJCS8qIFdhdGVybWFya3MgKi8KIAkJZm9yIChsZXZlbCA9
IDA7IGxldmVsIDw9IG1heF9sZXZlbDsgbGV2ZWwrKykgewogCQkJaWYgKHNrbF93bV9sZXZlbF9l
cXVhbHMoJmh3X3BsYW5lX3dtLT53bVtsZXZlbF0sCi0JCQkJCQkmc3dfcGxhbmVfd20tPndtW2xl
dmVsXSkpCisJCQkJCQkmc3dfcGxhbmVfd20tPndtW2xldmVsXSkgfHwKKwkJCSAgIChza2xfd21f
bGV2ZWxfZXF1YWxzKCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAorCQkJCQkJJnN3X3BsYW5lX3dt
LT5zYWd2X3dtMCkgJiYKKwkJCSAgIChsZXZlbCA9PSAwKSkpCiAJCQkJY29udGludWU7CiAKIAkJ
CURSTV9FUlJPUigibWlzbWF0Y2ggaW4gV00gcGlwZSAlYyBwbGFuZSAlZCBsZXZlbCAlZCAoZXhw
ZWN0ZWQgZT0lZCBiPSV1IGw9JXUsIGdvdCBlPSVkIGI9JXUgbD0ldSlcbiIsCkBAIC0xMzQ1Myw3
ICsxMzQ1NiwxMCBAQCBzdGF0aWMgdm9pZCB2ZXJpZnlfd21fc3RhdGUoc3RydWN0IGludGVsX2Ny
dGMgKmNydGMsCiAJCS8qIFdhdGVybWFya3MgKi8KIAkJZm9yIChsZXZlbCA9IDA7IGxldmVsIDw9
IG1heF9sZXZlbDsgbGV2ZWwrKykgewogCQkJaWYgKHNrbF93bV9sZXZlbF9lcXVhbHMoJmh3X3Bs
YW5lX3dtLT53bVtsZXZlbF0sCi0JCQkJCQkmc3dfcGxhbmVfd20tPndtW2xldmVsXSkpCisJCQkJ
CQkmc3dfcGxhbmVfd20tPndtW2xldmVsXSkgfHwKKwkJCSAgIChza2xfd21fbGV2ZWxfZXF1YWxz
KCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAorCQkJCQkJJnN3X3BsYW5lX3dtLT5zYWd2X3dtMCkg
JiYKKwkJCSAgIChsZXZlbCA9PSAwKSkpCiAJCQkJY29udGludWU7CiAKIAkJCURSTV9FUlJPUigi
bWlzbWF0Y2ggaW4gV00gcGlwZSAlYyBjdXJzb3IgbGV2ZWwgJWQgKGV4cGVjdGVkIGU9JWQgYj0l
dSBsPSV1LCBnb3QgZT0lZCBiPSV1IGw9JXUpXG4iLApAQCAtMTQ4NjMsNiArMTQ4NjksOCBAQCBz
dGF0aWMgdm9pZCBpbnRlbF9hdG9taWNfY29tbWl0X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUpCiAJCQkJCQkJICAgICAgbmV3X2NydGNfc3RhdGUpOwogCX0KIAorCWRldl9w
cml2LT5jcnRjX3NhZ3ZfbWFzayA9IHN0YXRlLT5jcnRjX3NhZ3ZfbWFzazsKKwogCWZvcl9lYWNo
X29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwg
bmV3X2NydGNfc3RhdGUsIGkpIHsKIAkJaW50ZWxfcG9zdF9wbGFuZV91cGRhdGUob2xkX2NydGNf
c3RhdGUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheV90eXBlcy5oCmluZGV4IDgzZWEwNDE0OWI3Ny4uNmEzMDBjYWM4ODNmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAt
NDkwLDYgKzQ5MCwyMCBAQCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlIHsKIAkgKi8KIAl1OCBh
Y3RpdmVfcGlwZV9jaGFuZ2VzOwogCisJLyoKKwkgKiBDb250YWlucyBhIG1hc2sgd2hpY2ggcmVm
bGVjdHMgd2hldGhlciBjb3JyZXNwb25kZW50IHBpcGUKKwkgKiBjYW4gdG9sZXJhdGUgU0FHViBv
ciBub3QsIHNvIHRoYXQgd2UgY2FuIG1ha2UgYSBkZWNpc2lvbgorCSAqIGF0IGF0b21pY19jb21t
aXRfdGFpbCBzdGFnZSwgd2hldGhlciB3ZSBlbmFibGUgaXQgb3Igbm90CisJICogYmFzZWQgb24g
Z2xvYmFsIHN0YXRlIGluIGRldl9wcml2LgorCSAqLworCXUzMiBjcnRjX3NhZ3ZfbWFzazsKKwor
CS8qCisJICogVXNlZCB0byBkZXRlcm1pbmUgaWYgdGhlIG1hc2sgaGFzIGJlZW4gYWxyZWFkeSBj
YWxjdWxhdGVkCisJICogZm9yIHRoaXMgc3RhdGUsIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGNhbGN1
bGF0aW9ucy4KKwkgKi8KKwlib29sIGNydGNfc2Fndl9tYXNrX3NldDsKKwogCXU4IGFjdGl2ZV9w
aXBlczsKIAkvKiBtaW5pbXVtIGFjY2VwdGFibGUgY2RjbGsgZm9yIGVhY2ggcGlwZSAqLwogCWlu
dCBtaW5fY2RjbGtbSTkxNV9NQVhfUElQRVNdOwpAQCAtNjcwLDYgKzY4NCw3IEBAIHN0cnVjdCBz
a2xfcGxhbmVfd20gewogCXN0cnVjdCBza2xfd21fbGV2ZWwgd21bOF07CiAJc3RydWN0IHNrbF93
bV9sZXZlbCB1dl93bVs4XTsKIAlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHRyYW5zX3dtOworCXN0cnVj
dCBza2xfd21fbGV2ZWwgc2Fndl93bTA7CiAJYm9vbCBpc19wbGFuYXI7CiB9OwogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuaAppbmRleCAxNzc5ZjYwMGZjZmIuLjBhYzlkN2IwMDZjYSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5oCkBAIC0xMTcxLDYgKzExNzEsMTIgQEAgc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgewogCiAJdTMyIHNhZ3ZfYmxvY2tfdGltZV91czsKIAorCS8qCisJICogQ29udGFpbnMg
YSBiaXQgbWFzaywgd2hldGhlciBjb3JyZXNwb25kZW50CisJICogcGlwZSBhbGxvd3MgU0FHViBv
ciBub3QuCisJICovCisJdTMyIGNydGNfc2Fndl9tYXNrOworCiAJc3RydWN0IHsKIAkJLyoKIAkJ
ICogUmF3IHdhdGVybWFyayBsYXRlbmN5IHZhbHVlczoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCmlu
ZGV4IDA1YmE5ZTFiZDI0Ny4uYzkxNGJkMTg2MmJhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMK
QEAgLTM2MjUsMTMgKzM2MjUsOSBAQCBzdGF0aWMgYm9vbCBza2xfbmVlZHNfbWVtb3J5X2J3X3dh
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAlyZXR1cm4gSVNfR0VOOV9CQyhk
ZXZfcHJpdikgfHwgSVNfQlJPWFRPTihkZXZfcHJpdik7CiB9CiAKLXN0YXRpYyBib29sCitib29s
CiBpbnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7Ci0J
LyogSEFDSyEgKi8KLQlpZiAoSVNfR0VOKGRldl9wcml2LCAxMikpCi0JCXJldHVybiBmYWxzZTsK
LQogCXJldHVybiAoSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+
PSAxMCkgJiYKIAkJZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzICE9IEk5MTVfU0FHVl9OT1RfQ09OVFJP
TExFRDsKIH0KQEAgLTM3NDgsNyArMzc0NCw3IEBAIGludGVsX2Rpc2FibGVfc2FndihzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJcmV0dXJuIDA7CiB9CiAKLWJvb2wgaW50ZWxf
Y2FuX2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQorc3RhdGlj
IHZvaWQgc2tsX3NldF9zYWd2X21hc2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUp
CiB7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHN0YXRlLT5iYXNlLmRldjsKIAlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CkBAIC0zNzU4LDI5ICsz
NzU0LDM1IEBAIGJvb2wgaW50ZWxfY2FuX2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlKQogCWVudW0gcGlwZSBwaXBlOwogCWludCBsZXZlbCwgbGF0ZW5jeTsKIAor
CWlmIChzdGF0ZS0+Y3J0Y19zYWd2X21hc2tfc2V0KQorCQlyZXR1cm47CisKIAlpZiAoIWludGVs
X2hhc19zYWd2KGRldl9wcml2KSkKLQkJcmV0dXJuIGZhbHNlOworCQlyZXR1cm47CiAKIAkvKgog
CSAqIElmIHRoZXJlIGFyZSBubyBhY3RpdmUgQ1JUQ3MsIG5vIGFkZGl0aW9uYWwgY2hlY2tzIG5l
ZWQgYmUgcGVyZm9ybWVkCiAJICovCiAJaWYgKGh3ZWlnaHQ4KHN0YXRlLT5hY3RpdmVfcGlwZXMp
ID09IDApCi0JCXJldHVybiB0cnVlOworCQlyZXR1cm47CiAKIAkvKgogCSAqIFNLTCsgd29ya2Fy
b3VuZDogYnNwZWMgcmVjb21tZW5kcyB3ZSBkaXNhYmxlIFNBR1Ygd2hlbiB3ZSBoYXZlCiAJICog
bW9yZSB0aGVuIG9uZSBwaXBlIGVuYWJsZWQKIAkgKi8KIAlpZiAoaHdlaWdodDgoc3RhdGUtPmFj
dGl2ZV9waXBlcykgPiAxKQotCQlyZXR1cm4gZmFsc2U7CisJCXJldHVybjsKIAogCS8qIFNpbmNl
IHdlJ3JlIG5vdyBndWFyYW50ZWVkIHRvIG9ubHkgaGF2ZSBvbmUgYWN0aXZlIENSVEMuLi4gKi8K
IAlwaXBlID0gZmZzKHN0YXRlLT5hY3RpdmVfcGlwZXMpIC0gMTsKIAljcnRjID0gaW50ZWxfZ2V0
X2NydGNfZm9yX3BpcGUoZGV2X3ByaXYsIHBpcGUpOwogCWNydGNfc3RhdGUgPSB0b19pbnRlbF9j
cnRjX3N0YXRlKGNydGMtPmJhc2Uuc3RhdGUpOworCXN0YXRlLT5jcnRjX3NhZ3ZfbWFzayAmPSB+
QklUKGNydGMtPnBpcGUpOwogCi0JaWYgKGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUuZmxh
Z3MgJiBEUk1fTU9ERV9GTEFHX0lOVEVSTEFDRSkKLQkJcmV0dXJuIGZhbHNlOworCWlmIChjcnRj
X3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlLmZsYWdzICYgRFJNX01PREVfRkxBR19JTlRFUkxBQ0Up
IHsKKwkJc3RhdGUtPmNydGNfc2Fndl9tYXNrX3NldCA9IHRydWU7CisJCXJldHVybjsKKwl9CiAK
IAlmb3JfZWFjaF9pbnRlbF9wbGFuZV9vbl9jcnRjKGRldiwgY3J0YywgcGxhbmUpIHsKIAkJc3Ry
dWN0IHNrbF9wbGFuZV93bSAqd20gPQpAQCAtMzgwNyw3ICszODA5LDEzNSBAQCBib29sIGludGVs
X2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJICog
aW5jdXIgbWVtb3J5IGxhdGVuY2llcyBoaWdoZXIgdGhhbiBzYWd2X2Jsb2NrX3RpbWVfdXMgd2UK
IAkJICogY2FuJ3QgZW5hYmxlIFNBR1YuCiAJCSAqLwotCQlpZiAobGF0ZW5jeSA8IGRldl9wcml2
LT5zYWd2X2Jsb2NrX3RpbWVfdXMpCisJCWlmIChsYXRlbmN5IDwgZGV2X3ByaXYtPnNhZ3ZfYmxv
Y2tfdGltZV91cykgeworCQkJc3RhdGUtPmNydGNfc2Fndl9tYXNrX3NldCA9IHRydWU7CisJCQly
ZXR1cm47CisJCX0KKwl9CisKKwlzdGF0ZS0+Y3J0Y19zYWd2X21hc2sgfD0gQklUKGNydGMtPnBp
cGUpOworCXN0YXRlLT5jcnRjX3NhZ3ZfbWFza19zZXQgPSB0cnVlOworfQorCitzdGF0aWMgdm9p
ZCB0Z2xfc2V0X3NhZ3ZfbWFzayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7CisK
K3N0YXRpYyB2b2lkIGljbF9zZXRfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlKQoreworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7CisJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOworCXN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19z
dGF0ZTsKKwlpbnQgbGV2ZWwsIGxhdGVuY3k7CisJaW50IGk7CisJaW50IHBsYW5lX2lkOworCisJ
aWYgKHN0YXRlLT5jcnRjX3NhZ3ZfbWFza19zZXQpCisJCXJldHVybjsKKworCWlmICghaW50ZWxf
aGFzX3NhZ3YoZGV2X3ByaXYpKQorCQlyZXR1cm47CisKKwkvKgorCSAqIElmIHRoZXJlIGFyZSBu
byBhY3RpdmUgQ1JUQ3MsIG5vIGFkZGl0aW9uYWwgY2hlY2tzIG5lZWQgYmUgcGVyZm9ybWVkCisJ
ICovCisJaWYgKGh3ZWlnaHQ4KHN0YXRlLT5hY3RpdmVfcGlwZXMpID09IDApCisJCXJldHVybjsK
KworCWZvcl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLAorCQkJCQkg
ICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJCXVuc2lnbmVkIGludCBmbGFncyA9IGNydGMtPmJh
c2Uuc3RhdGUtPmFkanVzdGVkX21vZGUuZmxhZ3M7CisJCWJvb2wgY2FuX3NhZ3Y7CisKKwkJaWYg
KGZsYWdzICYgRFJNX01PREVfRkxBR19JTlRFUkxBQ0UpCisJCQljb250aW51ZTsKKworCQlpZiAo
IW5ld19jcnRjX3N0YXRlLT5ody5hY3RpdmUpCisJCQljb250aW51ZTsKKworCQljYW5fc2FndiA9
IHRydWU7CisJCWZvcl9lYWNoX3BsYW5lX2lkX29uX2NydGMoY3J0YywgcGxhbmVfaWQpIHsKKwkJ
CXN0cnVjdCBza2xfcGxhbmVfd20gKndtID0KKwkJCQkmbmV3X2NydGNfc3RhdGUtPndtLnNrbC5v
cHRpbWFsLnBsYW5lc1twbGFuZV9pZF07CisKKwkJCS8qIFNraXAgdGhpcyBwbGFuZSBpZiBpdCdz
IG5vdCBlbmFibGVkICovCisJCQlpZiAoIXdtLT53bVswXS5wbGFuZV9lbikKKwkJCQljb250aW51
ZTsKKworCQkJLyogRmluZCB0aGUgaGlnaGVzdCBlbmFibGVkIHdtIGxldmVsIGZvciB0aGlzIHBs
YW5lICovCisJCQlmb3IgKGxldmVsID0gaWxrX3dtX21heF9sZXZlbChkZXZfcHJpdik7CisJCQkg
ICAgICF3bS0+d21bbGV2ZWxdLnBsYW5lX2VuOyAtLWxldmVsKSB7CisJCQl9CisKKwkJCWxhdGVu
Y3kgPSBkZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbbGV2ZWxdOworCisJCQkvKgorCQkJICogSWYg
YW55IG9mIHRoZSBwbGFuZXMgb24gdGhpcyBwaXBlIGRvbid0IGVuYWJsZQorCQkJICogd20gbGV2
ZWxzIHRoYXQgaW5jdXIgbWVtb3J5IGxhdGVuY2llcyBoaWdoZXIgdGhhbgorCQkJICogc2Fndl9i
bG9ja190aW1lX3VzIHdlIGNhbid0IGVuYWJsZSBTQUdWLgorCQkJICovCisJCQlpZiAobGF0ZW5j
eSA8IGRldl9wcml2LT5zYWd2X2Jsb2NrX3RpbWVfdXMpIHsKKwkJCQljYW5fc2FndiA9IGZhbHNl
OworCQkJCWJyZWFrOworCQkJfQorCQl9CisJCWlmIChjYW5fc2FndikKKwkJCXN0YXRlLT5jcnRj
X3NhZ3ZfbWFzayB8PSBCSVQoY3J0Yy0+cGlwZSk7CisJCWVsc2UKKwkJCXN0YXRlLT5jcnRjX3Nh
Z3ZfbWFzayAmPSB+QklUKGNydGMtPnBpcGUpOworCX0KKwlzdGF0ZS0+Y3J0Y19zYWd2X21hc2tf
c2V0ID0gdHJ1ZTsKK30KKworYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVs
X2F0b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHN0YXRl
LT5iYXNlLmRldjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1
KGRldik7CisJaW50IHJldCwgaTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKKwlzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7CisKKwkvKgorCSAqIE1ha2Ugc3VyZSB3
ZSBhbHdheXMgcGljayBnbG9iYWwgc3RhdGUgZmlyc3QsCisJICogdGhlcmUgc2hvdWxkbid0IGJl
IGFueSBpc3N1ZSBhcyB3ZSBob2xkIG9ubHkgbG9ja3MKKwkgKiB0byBjb3JyZXNwb25kZW50IGNy
dGNzIGluIHN0YXRlLCBob3dldmVyIG9uY2UKKwkgKiB3ZSBkZXRlY3QgdGhhdCB3ZSBuZWVkIHRv
IGNoYW5nZSBTQUdWIG1hc2sKKwkgKiBpbiBnbG9iYWwgc3RhdGUsIHdlIHdpbGwgZ3JhYiBhbGwg
dGhlIGNydGMgbG9ja3MKKwkgKiBpbiBvcmRlciB0byBnZXQgdGhpcyBzZXJpYWxpemVkLCB0aHVz
IG90aGVyCisJICogcmFjaW5nIGNvbW1pdHMgaGF2aW5nIG90aGVyIGNydGMgbG9ja3MsIHdpbGwg
aGF2ZQorCSAqIHRvIHN0YXJ0IG92ZXIgYWdhaW4sIGFzIHN0YXRlZCBieSBXb3VuZC1XYWl0CisJ
ICogYWxnb3JpdGhtLgorCSAqLworCXN0YXRlLT5jcnRjX3NhZ3ZfbWFzayA9IGRldl9wcml2LT5j
cnRjX3NhZ3ZfbWFzazsKKworCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEyKQorCQl0Z2xf
c2V0X3NhZ3ZfbWFzayhzdGF0ZSk7CisJZWxzZSBpZiAoSU5URUxfR0VOKGRldl9wcml2KSA9PSAx
MSkKKwkJaWNsX3NldF9zYWd2X21hc2soc3RhdGUpOworCWVsc2UKKwkJc2tsX3NldF9zYWd2X21h
c2soc3RhdGUpOworCisJLyoKKwkgKiBGb3IgU0FHViB3ZSBuZWVkIHRvIGFjY291bnQgYWxsIHRo
ZSBwaXBlcywKKwkgKiBub3Qgb25seSB0aGUgb25lcyB3aGljaCBhcmUgaW4gc3RhdGUgY3VycmVu
dGx5LgorCSAqIEdyYWIgYWxsIGxvY2tzIGlmIHdlIGRldGVjdCB0aGF0IHdlIGFyZSBhY3R1YWxs
eQorCSAqIGdvaW5nIHRvIGRvIHNvbWV0aGluZy4KKwkgKi8KKwlpZiAoc3RhdGUtPmNydGNfc2Fn
dl9tYXNrICE9IGRldl9wcml2LT5jcnRjX3NhZ3ZfbWFzaykgeworCQlyZXQgPSBpbnRlbF9hdG9t
aWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZShzdGF0ZSk7CisJCWlmIChyZXQpIHsKKwkJCURSTV9E
RUJVR19LTVMoIkNvdWxkIG5vdCBzZXJpYWxpemUgZ2xvYmFsIHN0YXRlXG4iKTsKKwkJCXJldHVy
biBmYWxzZTsKKwkJfQorCX0KKworCWZvcl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0
YXRlLCBjcnRjLCBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCQl1MzIgbWFzayA9IEJJVChjcnRjLT5w
aXBlKTsKKwkJYm9vbCBzdGF0ZV9zYWd2X21hc2tlZCA9IChtYXNrICYgc3RhdGUtPmNydGNfc2Fn
dl9tYXNrKSA9PSAwOworCisJCWlmICghbmV3X2NydGNfc3RhdGUtPmh3LmFjdGl2ZSkKKwkJCWNv
bnRpbnVlOworCisJCWlmIChzdGF0ZV9zYWd2X21hc2tlZCkKIAkJCXJldHVybiBmYWxzZTsKIAl9
CiAKQEAgLTM5MzMsNiArNDA2Myw3IEBAIHN0YXRpYyBpbnQgc2tsX2NvbXB1dGVfd21fcGFyYW1z
KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJCSBpbnQgY29s
b3JfcGxhbmUpOwogc3RhdGljIHZvaWQgc2tsX2NvbXB1dGVfcGxhbmVfd20oY29uc3Qgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJIGludCBsZXZlbCwKKwkJCQkgdTMy
IGxhdGVuY3ksCiAJCQkJIGNvbnN0IHN0cnVjdCBza2xfd21fcGFyYW1zICp3cCwKIAkJCQkgY29u
c3Qgc3RydWN0IHNrbF93bV9sZXZlbCAqcmVzdWx0X3ByZXYsCiAJCQkJIHN0cnVjdCBza2xfd21f
bGV2ZWwgKnJlc3VsdCAvKiBvdXQgKi8pOwpAQCAtMzk1NSw3ICs0MDg2LDEwIEBAIHNrbF9jdXJz
b3JfYWxsb2NhdGlvbihjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
IAlXQVJOX09OKHJldCk7CiAKIAlmb3IgKGxldmVsID0gMDsgbGV2ZWwgPD0gbWF4X2xldmVsOyBs
ZXZlbCsrKSB7Ci0JCXNrbF9jb21wdXRlX3BsYW5lX3dtKGNydGNfc3RhdGUsIGxldmVsLCAmd3As
ICZ3bSwgJndtKTsKKwkJdTMyIGxhdGVuY3kgPSBkZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbbGV2
ZWxdOworCisJCXNrbF9jb21wdXRlX3BsYW5lX3dtKGNydGNfc3RhdGUsIGxldmVsLCBsYXRlbmN5
LCAmd3AsICZ3bSwgJndtKTsKKwogCQlpZiAod20ubWluX2RkYl9hbGxvYyA9PSBVMTZfTUFYKQog
CQkJYnJlYWs7CiAKQEAgLTQyMjAsNiArNDM1NCw5OCBAQCBpY2xfZ2V0X3RvdGFsX3JlbGF0aXZl
X2RhdGFfcmF0ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlyZXR1cm4g
dG90YWxfZGF0YV9yYXRlOwogfQogCitzdGF0aWMgaW50Cit0Z2xfY2hlY2tfcGlwZV9maXRzX3Nh
Z3Zfd20oc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCisJCQkgICAgc3RydWN0
IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiIC8qIG91dCAqLykKK3sKKwlzdHJ1Y3QgZHJtX2NydGMg
KmNydGMgPSBjcnRjX3N0YXRlLT51YXBpLmNydGM7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOworCXN0cnVjdCBpbnRlbF9jcnRjICppbnRl
bF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsKKwlzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSAqYWxs
b2MgPSAmY3J0Y19zdGF0ZS0+d20uc2tsLmRkYjsKKwl1MTYgYWxsb2Nfc2l6ZTsKKwl1MTYgdG90
YWxbSTkxNV9NQVhfUExBTkVTXSA9IHt9OworCXU2NCB0b3RhbF9kYXRhX3JhdGU7CisJZW51bSBw
bGFuZV9pZCBwbGFuZV9pZDsKKwlpbnQgbnVtX2FjdGl2ZTsKKwl1NjQgcGxhbmVfZGF0YV9yYXRl
W0k5MTVfTUFYX1BMQU5FU10gPSB7fTsKKwl1MzIgYmxvY2tzOworCisJLyoKKwkgKiBObyBuZWVk
IHRvIGNoZWNrIGdlbiBoZXJlLCB3ZSBjYWxsIHRoaXMgb25seSBmb3IgZ2VuMTIKKwkgKi8KKwl0
b3RhbF9kYXRhX3JhdGUgPQorCQlpY2xfZ2V0X3RvdGFsX3JlbGF0aXZlX2RhdGFfcmF0ZShjcnRj
X3N0YXRlLAorCQkJCQkJIHBsYW5lX2RhdGFfcmF0ZSk7CisKKwlza2xfZGRiX2dldF9waXBlX2Fs
bG9jYXRpb25fbGltaXRzKGRldl9wcml2LCBjcnRjX3N0YXRlLAorCQkJCQkgICB0b3RhbF9kYXRh
X3JhdGUsCisJCQkJCSAgIGRkYiwgYWxsb2MsICZudW1fYWN0aXZlKTsKKwlhbGxvY19zaXplID0g
c2tsX2RkYl9lbnRyeV9zaXplKGFsbG9jKTsKKwlpZiAoYWxsb2Nfc2l6ZSA9PSAwKQorCQlyZXR1
cm4gLUVOT1NQQzsKKworCS8qIEFsbG9jYXRlIGZpeGVkIG51bWJlciBvZiBibG9ja3MgZm9yIGN1
cnNvci4gKi8KKwl0b3RhbFtQTEFORV9DVVJTT1JdID0gc2tsX2N1cnNvcl9hbGxvY2F0aW9uKGNy
dGNfc3RhdGUsIG51bV9hY3RpdmUpOworCWFsbG9jX3NpemUgLT0gdG90YWxbUExBTkVfQ1VSU09S
XTsKKwljcnRjX3N0YXRlLT53bS5za2wucGxhbmVfZGRiX3lbUExBTkVfQ1VSU09SXS5zdGFydCA9
CisJCWFsbG9jLT5lbmQgLSB0b3RhbFtQTEFORV9DVVJTT1JdOworCWNydGNfc3RhdGUtPndtLnNr
bC5wbGFuZV9kZGJfeVtQTEFORV9DVVJTT1JdLmVuZCA9IGFsbG9jLT5lbmQ7CisKKwkvKgorCSAq
IERvIGNoZWNrIGlmIHdlIGNhbiBmaXQgTDAgKyBzYWd2X2Jsb2NrX3RpbWUgYW5kCisJICogZGlz
YWJsZSBTQUdWIGlmIHdlIGNhbid0LgorCSAqLworCWJsb2NrcyA9IDA7CisJZm9yX2VhY2hfcGxh
bmVfaWRfb25fY3J0YyhpbnRlbF9jcnRjLCBwbGFuZV9pZCkgeworCQljb25zdCBzdHJ1Y3Qgc2ts
X3BsYW5lX3dtICp3bSA9CisJCQkmY3J0Y19zdGF0ZS0+d20uc2tsLm9wdGltYWwucGxhbmVzW3Bs
YW5lX2lkXTsKKworCQlpZiAocGxhbmVfaWQgPT0gUExBTkVfQ1VSU09SKSB7CisJCQlpZiAoV0FS
Tl9PTih3bS0+c2Fndl93bTAubWluX2RkYl9hbGxvYyA+CisJCQkJICAgIHRvdGFsW1BMQU5FX0NV
UlNPUl0pKSB7CisJCQkJYmxvY2tzID0gVTMyX01BWDsKKwkJCQlicmVhazsKKwkJCX0KKwkJCWNv
bnRpbnVlOworCQl9CisKKwkJYmxvY2tzICs9IHdtLT5zYWd2X3dtMC5taW5fZGRiX2FsbG9jOwor
CQlpZiAoYmxvY2tzID4gYWxsb2Nfc2l6ZSkKKwkJCXJldHVybiAtRU5PU1BDOworCX0KKwlyZXR1
cm4gMDsKK30KKworY29uc3Qgc3RydWN0IHNrbF93bV9sZXZlbCAqCitza2xfcGxhbmVfd21fbGV2
ZWwoc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKKwkJY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCisJCWludCBsZXZlbCwKKwkJYm9vbCB5dXYpCit7CisJc3RydWN0
IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlID0gY3J0Y19zdGF0ZS0+dWFwaS5zdGF0ZTsKKwllbnVt
IHBsYW5lX2lkIHBsYW5lX2lkID0gcGxhbmUtPmlkOworCWNvbnN0IHN0cnVjdCBza2xfcGxhbmVf
d20gKndtID0KKwkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07
CisKKwkvKgorCSAqIExvb2tzIHJpZGljaWxvdXMgYnV0IG5lZWQgdG8gY2hlY2sgaWYgc3RhdGUg
aXMgbm90CisJICogTlVMTCBoZXJlIGFzIGl0IG1pZ2h0IGJlIGFzIHNvbWUgY3Vyc29yIHBsYW5l
IG1hbmlwdWxhdGlvbnMKKwkgKiBzZWVtIHRvIGhhcHBlbiB3aGVuIG5vIGF0b21pYyBzdGF0ZSBp
cyBhY3R1YWxseSBwcmVzZW50LAorCSAqIGRlc3BpdGUgY3J0Y19zdGF0ZSBpcyBhbGxvY2F0ZWQu
IFJlbW92aW5nIHN0YXRlIGNoZWNrCisJICogZnJvbSBoZXJlIHdpbGwgcmVzdWx0IGluIGtlcm5l
bCBwYW5pYyBvbiBib290LgorCSAqIEhvd2V2ZXIgd2Ugbm93IG5lZWQgdG8gY2hlY2sgd2hldGhl
ciBzaG91bGQgYmUgdXNlIFNBR1YKKwkgKiB3bSBsZXZlbHMgaGVyZS4KKwkgKi8KKwlpZiAoc3Rh
dGUpIHsKKwkJc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqaW50ZWxfc3RhdGUgPQorCQkJdG9f
aW50ZWxfYXRvbWljX3N0YXRlKHN0YXRlKTsKKwkJaWYgKGludGVsX2Nhbl9lbmFibGVfc2Fndihp
bnRlbF9zdGF0ZSkgJiYgIWxldmVsKQorCQkJcmV0dXJuICZ3bS0+c2Fndl93bTA7CisJfQorCisJ
cmV0dXJuIHl1diA/ICZ3bS0+dXZfd21bbGV2ZWxdIDogJndtLT53bVtsZXZlbF07Cit9CisKIHN0
YXRpYyBpbnQKIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSwKIAkJICAgICAgc3RydWN0IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiIC8qIG91
dCAqLykKQEAgLTQyMzQsNiArNDQ2MCw5IEBAIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAl1MTYgdXZfdG90YWxbSTkxNV9NQVhfUExB
TkVTXSA9IHt9OwogCXU2NCB0b3RhbF9kYXRhX3JhdGU7CiAJZW51bSBwbGFuZV9pZCBwbGFuZV9p
ZDsKKwlzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lOworCWNvbnN0IHN0cnVjdCBza2xfd21fbGV2
ZWwgKndtX2xldmVsOworCWNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKndtX3V2X2xldmVsOwog
CWludCBudW1fYWN0aXZlOwogCXU2NCBwbGFuZV9kYXRhX3JhdGVbSTkxNV9NQVhfUExBTkVTXSA9
IHt9OwogCXU2NCB1dl9wbGFuZV9kYXRhX3JhdGVbSTkxNV9NQVhfUExBTkVTXSA9IHt9OwpAQCAt
NDI4NSwxMiArNDUxNCwxNSBAQCBza2xfYWxsb2NhdGVfcGlwZV9kZGIoc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJICovCiAJZm9yIChsZXZlbCA9IGlsa193bV9tYXhfbGV2
ZWwoZGV2X3ByaXYpOyBsZXZlbCA+PSAwOyBsZXZlbC0tKSB7CiAJCWJsb2NrcyA9IDA7Ci0JCWZv
cl9lYWNoX3BsYW5lX2lkX29uX2NydGMoaW50ZWxfY3J0YywgcGxhbmVfaWQpIHsKLQkJCWNvbnN0
IHN0cnVjdCBza2xfcGxhbmVfd20gKndtID0KLQkJCQkmY3J0Y19zdGF0ZS0+d20uc2tsLm9wdGlt
YWwucGxhbmVzW3BsYW5lX2lkXTsKKwkJZm9yX2VhY2hfaW50ZWxfcGxhbmVfb25fY3J0YygmZGV2
X3ByaXYtPmRybSwgaW50ZWxfY3J0YywgcGxhbmUpIHsKKwkJCXBsYW5lX2lkID0gcGxhbmUtPmlk
OworCQkJd21fbGV2ZWwgPSBza2xfcGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCisJ
CQkJCQkgICAgICBsZXZlbCwgZmFsc2UpOworCQkJd21fdXZfbGV2ZWwgPSBza2xfcGxhbmVfd21f
bGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCisJCQkJCQkJIGxldmVsLCB0cnVlKTsKIAogCQkJaWYg
KHBsYW5lX2lkID09IFBMQU5FX0NVUlNPUikgewotCQkJCWlmIChXQVJOX09OKHdtLT53bVtsZXZl
bF0ubWluX2RkYl9hbGxvYyA+CisJCQkJaWYgKFdBUk5fT04od21fbGV2ZWwtPm1pbl9kZGJfYWxs
b2MgPgogCQkJCQkgICAgdG90YWxbUExBTkVfQ1VSU09SXSkpIHsKIAkJCQkJYmxvY2tzID0gVTMy
X01BWDsKIAkJCQkJYnJlYWs7CkBAIC00Mjk4LDggKzQ1MzAsOCBAQCBza2xfYWxsb2NhdGVfcGlw
ZV9kZGIoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJY29udGludWU7
CiAJCQl9CiAKLQkJCWJsb2NrcyArPSB3bS0+d21bbGV2ZWxdLm1pbl9kZGJfYWxsb2M7Ci0JCQli
bG9ja3MgKz0gd20tPnV2X3dtW2xldmVsXS5taW5fZGRiX2FsbG9jOworCQkJYmxvY2tzICs9IHdt
X2xldmVsLT5taW5fZGRiX2FsbG9jOworCQkJYmxvY2tzICs9IHdtX3V2X2xldmVsLT5taW5fZGRi
X2FsbG9jOwogCQl9CiAKIAkJaWYgKGJsb2NrcyA8PSBhbGxvY19zaXplKSB7CkBAIC00MzIwLDEy
ICs0NTUyLDE2IEBAIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKIAkgKiB3YXRlcm1hcmsgbGV2ZWwsIHBsdXMgYW4gZXh0cmEgc2hhcmUg
b2YgdGhlIGxlZnRvdmVyIGJsb2NrcwogCSAqIHByb3BvcnRpb25hbCB0byBpdHMgcmVsYXRpdmUg
ZGF0YSByYXRlLgogCSAqLwotCWZvcl9lYWNoX3BsYW5lX2lkX29uX2NydGMoaW50ZWxfY3J0Yywg
cGxhbmVfaWQpIHsKLQkJY29uc3Qgc3RydWN0IHNrbF9wbGFuZV93bSAqd20gPQotCQkJJmNydGNf
c3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07CisJZm9yX2VhY2hfaW50ZWxf
cGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgaW50ZWxfY3J0YywgcGxhbmUpIHsKIAkJdTY0
IHJhdGU7CiAJCXUxNiBleHRyYTsKIAorCQlwbGFuZV9pZCA9IHBsYW5lLT5pZDsKKwkJd21fbGV2
ZWwgPSBza2xfcGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCisJCQkJCSAgICAgIGxl
dmVsLCBmYWxzZSk7CisJCXdtX3V2X2xldmVsID0gc2tsX3BsYW5lX3dtX2xldmVsKHBsYW5lLCBj
cnRjX3N0YXRlLAorCQkJCQkJIGxldmVsLCB0cnVlKTsKKwogCQlpZiAocGxhbmVfaWQgPT0gUExB
TkVfQ1VSU09SKQogCQkJY29udGludWU7CiAKQEAgLTQzNDAsNyArNDU3Niw3IEBAIHNrbF9hbGxv
Y2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJZXh0
cmEgPSBtaW5fdCh1MTYsIGFsbG9jX3NpemUsCiAJCQkgICAgICBESVY2NF9VNjRfUk9VTkRfVVAo
YWxsb2Nfc2l6ZSAqIHJhdGUsCiAJCQkJCQkgdG90YWxfZGF0YV9yYXRlKSk7Ci0JCXRvdGFsW3Bs
YW5lX2lkXSA9IHdtLT53bVtsZXZlbF0ubWluX2RkYl9hbGxvYyArIGV4dHJhOworCQl0b3RhbFtw
bGFuZV9pZF0gPSB3bV9sZXZlbC0+bWluX2RkYl9hbGxvYyArIGV4dHJhOwogCQlhbGxvY19zaXpl
IC09IGV4dHJhOwogCQl0b3RhbF9kYXRhX3JhdGUgLT0gcmF0ZTsKIApAQCAtNDM1MSw3ICs0NTg3
LDcgQEAgc2tsX2FsbG9jYXRlX3BpcGVfZGRiKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQlleHRyYSA9IG1pbl90KHUxNiwgYWxsb2Nfc2l6ZSwKIAkJCSAgICAgIERJVjY0
X1U2NF9ST1VORF9VUChhbGxvY19zaXplICogcmF0ZSwKIAkJCQkJCSB0b3RhbF9kYXRhX3JhdGUp
KTsKLQkJdXZfdG90YWxbcGxhbmVfaWRdID0gd20tPnV2X3dtW2xldmVsXS5taW5fZGRiX2FsbG9j
ICsgZXh0cmE7CisJCXV2X3RvdGFsW3BsYW5lX2lkXSA9IHdtX3V2X2xldmVsLT5taW5fZGRiX2Fs
bG9jICsgZXh0cmE7CiAJCWFsbG9jX3NpemUgLT0gZXh0cmE7CiAJCXRvdGFsX2RhdGFfcmF0ZSAt
PSByYXRlOwogCX0KQEAgLTQzOTIsOSArNDYyOCwxNCBAQCBza2xfYWxsb2NhdGVfcGlwZV9kZGIo
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJICogdGhhdCBhcmVuJ3QgYWN0
dWFsbHkgcG9zc2libGUuCiAJICovCiAJZm9yIChsZXZlbCsrOyBsZXZlbCA8PSBpbGtfd21fbWF4
X2xldmVsKGRldl9wcml2KTsgbGV2ZWwrKykgewotCQlmb3JfZWFjaF9wbGFuZV9pZF9vbl9jcnRj
KGludGVsX2NydGMsIHBsYW5lX2lkKSB7CisJCWZvcl9lYWNoX2ludGVsX3BsYW5lX29uX2NydGMo
JmRldl9wcml2LT5kcm0sIGludGVsX2NydGMsIHBsYW5lKSB7CiAJCQlzdHJ1Y3Qgc2tsX3BsYW5l
X3dtICp3bSA9Ci0JCQkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9p
ZF07CisJCQkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZS0+aWRdOwor
CisJCQl3bV9sZXZlbCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwgY3J0Y19zdGF0ZSwKKwkJ
CQkJCSAgICAgIGxldmVsLCBmYWxzZSk7CisJCQl3bV91dl9sZXZlbCA9IHNrbF9wbGFuZV93bV9s
ZXZlbChwbGFuZSwgY3J0Y19zdGF0ZSwKKwkJCQkJCSAgICAgIGxldmVsLCB0cnVlKTsKIAogCQkJ
LyoKIAkJCSAqIFdlIG9ubHkgZGlzYWJsZSB0aGUgd2F0ZXJtYXJrcyBmb3IgZWFjaCBwbGFuZSBp
ZgpAQCAtNDQwOCw5ICs0NjQ5LDEwIEBAIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAqICBwbGFuZXMgbXVzdCBiZSBlbmFibGVk
IGJlZm9yZSB0aGUgbGV2ZWwgd2lsbCBiZSB1c2VkLiIKIAkJCSAqIFNvIHRoaXMgaXMgYWN0dWFs
bHkgc2FmZSB0byBkby4KIAkJCSAqLwotCQkJaWYgKHdtLT53bVtsZXZlbF0ubWluX2RkYl9hbGxv
YyA+IHRvdGFsW3BsYW5lX2lkXSB8fAotCQkJICAgIHdtLT51dl93bVtsZXZlbF0ubWluX2RkYl9h
bGxvYyA+IHV2X3RvdGFsW3BsYW5lX2lkXSkKLQkJCQltZW1zZXQoJndtLT53bVtsZXZlbF0sIDAs
IHNpemVvZih3bS0+d21bbGV2ZWxdKSk7CisJCQlpZiAod21fbGV2ZWwtPm1pbl9kZGJfYWxsb2Mg
PiB0b3RhbFtwbGFuZS0+aWRdIHx8CisJCQkgICAgd21fdXZfbGV2ZWwtPm1pbl9kZGJfYWxsb2Mg
PiB1dl90b3RhbFtwbGFuZS0+aWRdKQorCQkJCW1lbXNldCgmd20tPndtW2xldmVsXSwgMCwKKwkJ
CQkgICAgICAgc2l6ZW9mKHN0cnVjdCBza2xfd21fbGV2ZWwpKTsKIAogCQkJLyoKIAkJCSAqIFdh
XzE0MDg5NjEwMDg6aWNsLCBlaGwKQEAgLTQ0MTgsOSArNDY2MCwxNCBAQCBza2xfYWxsb2NhdGVf
cGlwZV9kZGIoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgKi8KIAkJ
CWlmIChJU19HRU4oZGV2X3ByaXYsIDExKSAmJgogCQkJICAgIGxldmVsID09IDEgJiYgd20tPndt
WzBdLnBsYW5lX2VuKSB7Ci0JCQkJd20tPndtW2xldmVsXS5wbGFuZV9yZXNfYiA9IHdtLT53bVsw
XS5wbGFuZV9yZXNfYjsKLQkJCQl3bS0+d21bbGV2ZWxdLnBsYW5lX3Jlc19sID0gd20tPndtWzBd
LnBsYW5lX3Jlc19sOwotCQkJCXdtLT53bVtsZXZlbF0uaWdub3JlX2xpbmVzID0gd20tPndtWzBd
Lmlnbm9yZV9saW5lczsKKwkJCQl3bV9sZXZlbCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwg
Y3J0Y19zdGF0ZSwKKwkJCQkJCQkgICAgICAwLCBmYWxzZSk7CisJCQkJd20tPndtW2xldmVsXS5w
bGFuZV9yZXNfYiA9CisJCQkJCXdtX2xldmVsLT5wbGFuZV9yZXNfYjsKKwkJCQl3bS0+d21bbGV2
ZWxdLnBsYW5lX3Jlc19sID0KKwkJCQkJd21fbGV2ZWwtPnBsYW5lX3Jlc19sOworCQkJCXdtLT53
bVtsZXZlbF0uaWdub3JlX2xpbmVzID0KKwkJCQkJd21fbGV2ZWwtPmlnbm9yZV9saW5lczsKIAkJ
CX0KIAkJfQogCX0KQEAgLTQ2NDksMTIgKzQ4OTYsMTIgQEAgc3RhdGljIGJvb2wgc2tsX3dtX2hh
c19saW5lcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGludCBsZXZlbCkKIAog
c3RhdGljIHZvaWQgc2tsX2NvbXB1dGVfcGxhbmVfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJCQkJIGludCBsZXZlbCwKKwkJCQkgdTMyIGxhdGVuY3ksCiAJ
CQkJIGNvbnN0IHN0cnVjdCBza2xfd21fcGFyYW1zICp3cCwKIAkJCQkgY29uc3Qgc3RydWN0IHNr
bF93bV9sZXZlbCAqcmVzdWx0X3ByZXYsCiAJCQkJIHN0cnVjdCBza2xfd21fbGV2ZWwgKnJlc3Vs
dCAvKiBvdXQgKi8pCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9f
aTkxNShjcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7Ci0JdTMyIGxhdGVuY3kgPSBkZXZfcHJp
di0+d20uc2tsX2xhdGVuY3lbbGV2ZWxdOwogCXVpbnRfZml4ZWRfMTZfMTZfdCBtZXRob2QxLCBt
ZXRob2QyOwogCXVpbnRfZml4ZWRfMTZfMTZfdCBzZWxlY3RlZF9yZXN1bHQ7CiAJdTMyIHJlc19i
bG9ja3MsIHJlc19saW5lcywgbWluX2RkYl9hbGxvYyA9IDA7CkBAIC00Nzc1LDIwICs1MDIyLDQ1
IEBAIHN0YXRpYyB2b2lkIHNrbF9jb21wdXRlX3BsYW5lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpjcnRjX3N0YXRlLAogc3RhdGljIHZvaWQKIHNrbF9jb21wdXRlX3dtX2xldmVs
cyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgICAgY29u
c3Qgc3RydWN0IHNrbF93bV9wYXJhbXMgKndtX3BhcmFtcywKLQkJICAgICAgc3RydWN0IHNrbF93
bV9sZXZlbCAqbGV2ZWxzKQorCQkgICAgICBzdHJ1Y3Qgc2tsX3BsYW5lX3dtICpwbGFuZV93bSwK
KwkJICAgICAgYm9vbCB5dXYpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShjcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7CiAJaW50IGxldmVsLCBtYXhf
bGV2ZWwgPSBpbGtfd21fbWF4X2xldmVsKGRldl9wcml2KTsKKwkvKgorCSAqIENoZWNrIHdoaWNo
IGtpbmQgb2YgcGxhbmUgaXMgaXQgYW5kIGJhc2VkIG9uIHRoYXQgY2FsY3VsYXRlCisJICogY29y
cmVzcG9uZGVudCBXTSBsZXZlbHMuCisJICovCisJc3RydWN0IHNrbF93bV9sZXZlbCAqbGV2ZWxz
ID0geXV2ID8gcGxhbmVfd20tPnV2X3dtIDogcGxhbmVfd20tPndtOwogCXN0cnVjdCBza2xfd21f
bGV2ZWwgKnJlc3VsdF9wcmV2ID0gJmxldmVsc1swXTsKIAogCWZvciAobGV2ZWwgPSAwOyBsZXZl
bCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKIAkJc3RydWN0IHNrbF93bV9sZXZlbCAqcmVzdWx0
ID0gJmxldmVsc1tsZXZlbF07CisJCXUzMiBsYXRlbmN5ID0gZGV2X3ByaXYtPndtLnNrbF9sYXRl
bmN5W2xldmVsXTsKIAotCQlza2xfY29tcHV0ZV9wbGFuZV93bShjcnRjX3N0YXRlLCBsZXZlbCwg
d21fcGFyYW1zLAotCQkJCSAgICAgcmVzdWx0X3ByZXYsIHJlc3VsdCk7CisJCXNrbF9jb21wdXRl
X3BsYW5lX3dtKGNydGNfc3RhdGUsIGxldmVsLCBsYXRlbmN5LAorCQkJCSAgICAgd21fcGFyYW1z
LCByZXN1bHRfcHJldiwgcmVzdWx0KTsKIAogCQlyZXN1bHRfcHJldiA9IHJlc3VsdDsKIAl9CisJ
LyoKKwkgKiBGb3IgR2VuMTIgaWYgaXQgaXMgYW4gTDAgd2UgbmVlZCB0byBhbHNvCisJICogY29u
c2lkZXIgc2Fndl9ibG9ja190aW1lIHdoZW4gY2FsY3VsYXRpbmcKKwkgKiBMMCB3YXRlcm1hcmsg
LSB3ZSB3aWxsIG5lZWQgdGhhdCB3aGVuIG1ha2luZworCSAqIGEgZGVjaXNpb24gd2hldGhlciBl
bmFibGUgU0FHViBvciBub3QuCisJICogRm9yIG9sZGVyIGdlbnMgd2UgYWdyZWVkIHRvIGNvcHkg
TDAgdmFsdWUgZm9yCisJICogY29tcGF0aWJpbGl0eS4KKwkgKi8KKwlpZiAoKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTIpKSB7CisJCXUzMiBsYXRlbmN5ID0gZGV2X3ByaXYtPndtLnNrbF9sYXRl
bmN5WzBdOworCisJCWxhdGVuY3kgKz0gZGV2X3ByaXYtPnNhZ3ZfYmxvY2tfdGltZV91czsKKwkJ
c2tsX2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgMCwgbGF0ZW5jeSwKKwkJICAgICB3bV9w
YXJhbXMsICZsZXZlbHNbMF0sCisJCSAgICAmcGxhbmVfd20tPnNhZ3Zfd20wKTsKKwl9IGVsc2UK
KwkJbWVtY3B5KCZwbGFuZV93bS0+c2Fndl93bTAsICZsZXZlbHNbMF0sCisJCQlzaXplb2Yoc3Ry
dWN0IHNrbF93bV9sZXZlbCkpOwogfQogCiBzdGF0aWMgdTMyCkBAIC00ODgxLDcgKzUxNTMsNyBA
QCBzdGF0aWMgaW50IHNrbF9idWlsZF9wbGFuZV93bV9zaW5nbGUoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCXNrbF9jb21w
dXRlX3dtX2xldmVscyhjcnRjX3N0YXRlLCAmd21fcGFyYW1zLCB3bS0+d20pOworCXNrbF9jb21w
dXRlX3dtX2xldmVscyhjcnRjX3N0YXRlLCAmd21fcGFyYW1zLCB3bSwgZmFsc2UpOwogCXNrbF9j
b21wdXRlX3RyYW5zaXRpb25fd20oY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20pOwogCiAJcmV0
dXJuIDA7CkBAIC00OTAzLDcgKzUxNzUsNyBAQCBzdGF0aWMgaW50IHNrbF9idWlsZF9wbGFuZV93
bV91dihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlpZiAocmV0KQogCQly
ZXR1cm4gcmV0OwogCi0Jc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtLT51dl93bSk7CisJc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9w
YXJhbXMsIHdtLCB0cnVlKTsKIAogCXJldHVybiAwOwogfQpAQCAtNTA0MCwxMCArNTMxMiwxMyBA
QCB2b2lkIHNrbF93cml0ZV9wbGFuZV93bShzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lLAogCQkm
Y3J0Y19zdGF0ZS0+d20uc2tsLnBsYW5lX2RkYl95W3BsYW5lX2lkXTsKIAljb25zdCBzdHJ1Y3Qg
c2tsX2RkYl9lbnRyeSAqZGRiX3V2ID0KIAkJJmNydGNfc3RhdGUtPndtLnNrbC5wbGFuZV9kZGJf
dXZbcGxhbmVfaWRdOworCWNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKndtX2xldmVsOwogCiAJ
Zm9yIChsZXZlbCA9IDA7IGxldmVsIDw9IG1heF9sZXZlbDsgbGV2ZWwrKykgeworCQl3bV9sZXZl
bCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwgY3J0Y19zdGF0ZSwgbGV2ZWwsIGZhbHNlKTsK
KwogCQlza2xfd3JpdGVfd21fbGV2ZWwoZGV2X3ByaXYsIFBMQU5FX1dNKHBpcGUsIHBsYW5lX2lk
LCBsZXZlbCksCi0JCQkJICAgJndtLT53bVtsZXZlbF0pOworCQkJCSAgIHdtX2xldmVsKTsKIAl9
CiAJc2tsX3dyaXRlX3dtX2xldmVsKGRldl9wcml2LCBQTEFORV9XTV9UUkFOUyhwaXBlLCBwbGFu
ZV9pZCksCiAJCQkgICAmd20tPnRyYW5zX3dtKTsKQEAgLTUwNzQsMTAgKzUzNDksMTMgQEAgdm9p
ZCBza2xfd3JpdGVfY3Vyc29yX3dtKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJCSZjcnRj
X3N0YXRlLT53bS5za2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOwogCWNvbnN0IHN0cnVjdCBz
a2xfZGRiX2VudHJ5ICpkZGIgPQogCQkmY3J0Y19zdGF0ZS0+d20uc2tsLnBsYW5lX2RkYl95W3Bs
YW5lX2lkXTsKKwljb25zdCBzdHJ1Y3Qgc2tsX3dtX2xldmVsICp3bV9sZXZlbDsKIAogCWZvciAo
bGV2ZWwgPSAwOyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKKwkJd21fbGV2ZWwgPSBz
a2xfcGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsIGxldmVsLCBmYWxzZSk7CisKIAkJ
c2tsX3dyaXRlX3dtX2xldmVsKGRldl9wcml2LCBDVVJfV00ocGlwZSwgbGV2ZWwpLAotCQkJCSAg
ICZ3bS0+d21bbGV2ZWxdKTsKKwkJCQkgICB3bV9sZXZlbCk7CiAJfQogCXNrbF93cml0ZV93bV9s
ZXZlbChkZXZfcHJpdiwgQ1VSX1dNX1RSQU5TKHBpcGUpLCAmd20tPnRyYW5zX3dtKTsKIApAQCAt
NTQ1MSwxOCArNTcyOSw3MyBAQCBzdGF0aWMgaW50IHNrbF93bV9hZGRfYWZmZWN0ZWRfcGxhbmVz
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCXJldHVybiAwOwogfQogCitzdGF0
aWMgdm9pZCB0Z2xfc2V0X3NhZ3ZfbWFzayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRl
LT5iYXNlLmRldik7CisJc3RydWN0IGludGVsX2NydGMgKmNydGM7CisJc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRf
Y3J0Y19zdGF0ZTsKKwlzdHJ1Y3Qgc2tsX2RkYl9hbGxvY2F0aW9uICpkZGIgPSAmc3RhdGUtPndt
X3Jlc3VsdHMuZGRiOworCWludCByZXQ7CisJaW50IGk7CisJc3RydWN0IGludGVsX3BsYW5lICpw
bGFuZTsKKworCWlmIChzdGF0ZS0+Y3J0Y19zYWd2X21hc2tfc2V0KQorCQlyZXR1cm47CisKKwlm
b3JfZWFjaF9vbGRuZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0Yywgb2xkX2NydGNf
c3RhdGUsCisJCQkJCSAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCQlpbnQgcGlwZV9iaXQgPSBC
SVQoY3J0Yy0+cGlwZSk7CisJCWJvb2wgc2tpcCA9IHRydWU7CisKKwkJLyoKKwkJICogSWYgd2Ug
aGFkIHNldCB0aGlzIG1hc3QgYWxyZWFkeSBvbmNlIGZvciB0aGlzIHN0YXRlLAorCQkgKiBubyBu
ZWVkIHRvIHdhc3RlIENQVSBjeWNsZXMgZm9yIGRvaW5nIHRoaXMgYWdhaW4uCisJCSAqLworCQlm
b3JfZWFjaF9pbnRlbF9wbGFuZV9vbl9jcnRjKCZkZXZfcHJpdi0+ZHJtLCBjcnRjLCBwbGFuZSkg
eworCQkJZW51bSBwbGFuZV9pZCBwbGFuZV9pZCA9IHBsYW5lLT5pZDsKKworCQkJaWYgKCFza2xf
cGxhbmVfd21fZXF1YWxzKGRldl9wcml2LAorCQkJCSZvbGRfY3J0Y19zdGF0ZS0+d20uc2tsLm9w
dGltYWwucGxhbmVzW3BsYW5lX2lkXSwKKwkJCQkmbmV3X2NydGNfc3RhdGUtPndtLnNrbC5vcHRp
bWFsLnBsYW5lc1twbGFuZV9pZF0pKSB7CisJCQkJc2tpcCA9IGZhbHNlOworCQkJCWJyZWFrOwor
CQkJfQorCQl9CisKKwkJLyoKKwkJICogQ2hlY2sgaWYgd20gbGV2ZWxzIGFyZSBhY3R1YWxseSB0
aGUgc2FtZSBhcyBmb3IgcHJldmlvdXMKKwkJICogc3RhdGUsIHdoaWNoIG1lYW5zIHdlIGNhbiBq
dXN0IHNraXAgZG9pbmcgdGhpcyBsb25nIGNoZWNrCisJCSAqIGFuZCBqdXN0ICBjb3B5IGNvcnJl
c3BvbmRlbnQgYml0IGZyb20gcHJldmlvdXMgc3RhdGUuCisJCSAqLworCQlpZiAoc2tpcCkKKwkJ
CWNvbnRpbnVlOworCisJCXJldCA9IHRnbF9jaGVja19waXBlX2ZpdHNfc2Fndl93bShuZXdfY3J0
Y19zdGF0ZSwgZGRiKTsKKwkJaWYgKCFyZXQpCisJCQlzdGF0ZS0+Y3J0Y19zYWd2X21hc2sgfD0g
cGlwZV9iaXQ7CisJCWVsc2UKKwkJCXN0YXRlLT5jcnRjX3NhZ3ZfbWFzayAmPSB+cGlwZV9iaXQ7
CisJfQorCXN0YXRlLT5jcnRjX3NhZ3ZfbWFza19zZXQgPSB0cnVlOworfQorCiBzdGF0aWMgaW50
CiBza2xfY29tcHV0ZV93bShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKIAlz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKIAlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2Ny
dGNfc3RhdGU7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlOwotCXN0
cnVjdCBza2xfZGRiX3ZhbHVlcyAqcmVzdWx0cyA9ICZzdGF0ZS0+d21fcmVzdWx0czsKIAlpbnQg
cmV0LCBpOworCXN0cnVjdCBza2xfZGRiX3ZhbHVlcyAqcmVzdWx0cyA9ICZzdGF0ZS0+d21fcmVz
dWx0czsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHN0YXRl
LT5iYXNlLmRldik7CiAKIAkvKiBDbGVhciBhbGwgZGlydHkgZmxhZ3MgKi8KIAlyZXN1bHRzLT5k
aXJ0eV9waXBlcyA9IDA7CiAKKwkvKiBJZiB3ZSBleGl0IGJlZm9yZSBjaGVjayBpcyBkb25lICov
CisJc3RhdGUtPmNydGNfc2Fndl9tYXNrID0gZGV2X3ByaXYtPmNydGNfc2Fndl9tYXNrOworCiAJ
cmV0ID0gc2tsX2RkYl9hZGRfYWZmZWN0ZWRfcGlwZXMoc3RhdGUpOwogCWlmIChyZXQpCiAJCXJl
dHVybiByZXQ7CkBAIC01NjM4LDYgKzU5NzEsOSBAQCB2b2lkIHNrbF9waXBlX3dtX2dldF9od19z
dGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJCQl2YWwgPSBJOTE1X1JFQUQoQ1VSX1dN
KHBpcGUsIGxldmVsKSk7CiAKIAkJCXNrbF93bV9sZXZlbF9mcm9tX3JlZ192YWwodmFsLCAmd20t
PndtW2xldmVsXSk7CisJCQlpZiAobGV2ZWwgPT0gMCkKKwkJCQltZW1jcHkoJndtLT5zYWd2X3dt
MCwgJndtLT53bVtsZXZlbF0sCisJCQkJCXNpemVvZihzdHJ1Y3Qgc2tsX3dtX2xldmVsKSk7CiAJ
CX0KIAogCQlpZiAocGxhbmVfaWQgIT0gUExBTkVfQ1VSU09SKQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Bt
LmgKaW5kZXggYjU3OWM3MjRiOTE1Li41MzI3NTg2MDczMWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX3BtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uaApAQCAtNDMsNiArNDMsNyBAQCB2b2lkIHNrbF9waXBlX3dtX2dldF9od19zdGF0ZShzdHJ1
Y3QgaW50ZWxfY3J0YyAqY3J0YywKIHZvaWQgZzR4X3dtX3Nhbml0aXplKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIHZsdl93bV9zYW5pdGl6ZShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0
IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpOworYm9vbCBpbnRlbF9oYXNfc2FndihzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogaW50IGludGVsX2VuYWJsZV9zYWd2KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBpbnQgaW50ZWxfZGlzYWJsZV9zYWd2KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBib29sIHNrbF93bV9sZXZlbF9lcXVh
bHMoY29uc3Qgc3RydWN0IHNrbF93bV9sZXZlbCAqbDEsCi0tIAoyLjE3LjEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxp
c3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

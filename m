Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3C7FA4C7DA
	for <lists+intel-gfx@lfdr.de>; Thu, 20 Jun 2019 09:06:19 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 39FAC6E4F1;
	Thu, 20 Jun 2019 07:06:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DEEDA6E3DB
 for <intel-gfx@lists.freedesktop.org>; Thu, 20 Jun 2019 07:06:12 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16961334-1500050 
 for multiple; Thu, 20 Jun 2019 08:05:56 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 20 Jun 2019 08:05:57 +0100
Message-Id: <20190620070559.30076-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/3] drm/i915/execlists: Preempt-to-busy
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2hlbiB1c2luZyBhIGdsb2JhbCBzZXFubywgd2UgcmVxdWlyZWQgYSBwcmVjaXNlIHN0b3AtdGhl
LXdvcmtkIGV2ZW50IHRvCmhhbmRsZSBwcmVlbXB0aW9uIGFuZCB1bndpbmQgdGhlIGdsb2JhbCBz
ZXFubyBjb3VudGVyLiBUbyBhY2NvbXBsaXNoCnRoaXMsIHdlIHdvdWxkIHByZWVtcHQgdG8gYSBz
cGVjaWFsIG91dC1vZi1iYW5kIGNvbnRleHQgYW5kIHdhaXQgZm9yIHRoZQptYWNoaW5lIHRvIHJl
cG9ydCB0aGF0IGl0IHdhcyBpZGxlLiBHaXZlbiBhbiBpZGxlIG1hY2hpbmUsIHdlIGNvdWxkIHZl
cnkKcHJlY2lzZWx5IHNlZSB3aGljaCByZXF1ZXN0cyBoYWQgY29tcGxldGVkIGFuZCB3aGljaCB3
ZSBuZWVkZWQgdG8gZmVlZApiYWNrIGludG8gdGhlIHJ1biBxdWV1ZS4KCkhvd2V2ZXIsIG5vdyB0
aGF0IHdlIGhhdmUgc2NyYXBwZWQgdGhlIGdsb2JhbCBzZXFubywgd2Ugbm8gbG9uZ2VyIG5lZWQK
dG8gcHJlY2lzZWx5IHVud2luZCB0aGUgZ2xvYmFsIGNvdW50ZXIgYW5kIG9ubHkgdHJhY2sgcmVx
dWVzdHMgYnkgdGhlaXIKcGVyLWNvbnRleHQgc2Vxbm8uIFRoaXMgYWxsb3dzIHVzIHRvIGxvb3Nl
bHkgdW53aW5kIGluZmxpZ2h0IHJlcXVlc3RzCndoaWxlIHNjaGVkdWxpbmcgYSBwcmVlbXB0aW9u
LCB3aXRoIHRoZSBlbm9ybW91cyBjYXZlYXQgdGhhdCB0aGUKcmVxdWVzdHMgd2UgcHV0IGJhY2sg
b24gdGhlIHJ1biBxdWV1ZSBhcmUgc3RpbGwgX2luZmxpZ2h0XyAodW50aWwgdGhlCnByZWVtcHRp
b24gcmVxdWVzdCBpcyBjb21wbGV0ZSkuIFRoaXMgbWFrZXMgcmVxdWVzdCB0cmFja2luZyBtdWNo
IG1vcmUKbWVzc3ksIGFzIGF0IGFueSBwb2ludCB0aGVuIHdlIGNhbiBzZWUgYSBjb21wbGV0ZWQg
cmVxdWVzdCB0aGF0IHdlCmJlbGlldmUgaXMgbm90IGN1cnJlbnRseSBzY2hlZHVsZWQgZm9yIGV4
ZWN1dGlvbi4gV2UgYWxzbyBoYXZlIHRvIGJlCmNhcmVmdWwgbm90IHRvIHJld2luZCBSSU5HX1RB
SUwgcGFzdCBSSU5HX0hFQUQgb24gcHJlZW1wdGluZyB0byB0aGUKcnVubmluZyBjb250ZXh0LCBh
bmQgZm9yIHRoaXMgd2UgdXNlIGEgc2VtYXBob3JlIHRvIHByZXZlbnQgY29tcGxldGlvbgpvZiB0
aGUgcmVxdWVzdCBiZWZvcmUgY29udGludWluZy4KClRvIGFjY29tcGxpc2ggdGhpcyBmZWF0LCB3
ZSBjaGFuZ2UgaG93IHdlIHRyYWNrIHJlcXVlc3RzIHNjaGVkdWxlZCB0bwp0aGUgSFcuIEluc3Rl
YWQgb2YgYXBwZW5kaW5nIG91ciByZXF1ZXN0cyBvbnRvIGEgc2luZ2xlIGxpc3QgYXMgd2UKc3Vi
bWl0LCB3ZSB0cmFjayBlYWNoIHN1Ym1pc3Npb24gdG8gRUxTUCBhcyBpdHMgb3duIGJsb2NrLiBU
aGVuIHVwb24KcmVjZWl2aW5nIHRoZSBDUyBwcmVlbXB0aW9uIGV2ZW50LCB3ZSBwcm9tb3RlIHRo
ZSBwZW5kaW5nIGJsb2NrIHRvIHRoZQppbmZsaWdodCBibG9jayAoZGlzY2FyZGluZyB3aGF0IHdh
cyBwcmV2aW91c2x5IGJlaW5nIHRyYWNrZWQpLiBBcyBub3JtYWwKQ1MgY29tcGxldGlvbiBldmVu
dHMgYXJyaXZlLCB3ZSB0aGVuIHJlbW92ZSBzdGFsZSBlbnRyaWVzIGZyb20gdGhlCmluZmxpZ2h0
IHRyYWNrZXIuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNv
bi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5j
ICAgfCAgIDIgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMu
aCB8ICAgNSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaCAgICAgICAg
fCAgNjEgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jICAgICB8
ICA2MyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggIHwg
IDUyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICAgfCA2
NzUgKysrKysrKystLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJv
ci5jICAgICAgICAgfCAgMTkgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5j
ICAgICAgICAgICB8ICAgNiArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCAg
ICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyAg
ICAgICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmggICAgICAg
ICAgICAgfCAgMTIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3VjX3N1Ym1pc3Npb24u
YyAgIHwgMTc1ICsrLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1
ZXN0LmMgfCAgIDggKy0KIDEzIGZpbGVzIGNoYW5nZWQsIDQ3MiBpbnNlcnRpb25zKCspLCA2MTAg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0
LmMKaW5kZXggMGYyYzIyYTNiY2I2Li4zNTg3MWM4YTQyYTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwpAQCAtNjQ2LDcgKzY0Niw3IEBAIHN0YXRpYyB2
b2lkIGluaXRfY29udGV4dHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIHN0YXRp
YyBib29sIG5lZWRzX3ByZWVtcHRfY29udGV4dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSkKIHsKLQlyZXR1cm4gSEFTX0VYRUNMSVNUUyhpOTE1KTsKKwlyZXR1cm4gVVNFU19HVUNfU1VC
TUlTU0lPTihpOTE1KTsKIH0KIAogaW50IGk5MTVfZ2VtX2NvbnRleHRzX2luaXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfY29udGV4dF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dF90eXBlcy5oCmluZGV4IDA4MDQ5ZWU5MWNlZS4uNGMwZTIxMWM3MTVkIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0X3R5cGVzLmgKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90eXBlcy5oCkBAIC0xMyw2
ICsxMyw3IEBACiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAogI2luY2x1ZGUgImk5MTVfYWN0
aXZlX3R5cGVzLmgiCisjaW5jbHVkZSAiaTkxNV91dGlscy5oIgogI2luY2x1ZGUgImludGVsX2Vu
Z2luZV90eXBlcy5oIgogI2luY2x1ZGUgImludGVsX3NzZXUuaCIKIApAQCAtMzgsNiArMzksMTAg
QEAgc3RydWN0IGludGVsX2NvbnRleHQgewogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpnZW1f
Y29udGV4dDsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqaW5mbGlnaHQ7CisjZGVmaW5lIGludGVsX2NvbnRleHRfaW5mbGlnaHQoY2Up
IHB0cl9tYXNrX2JpdHMoKGNlKS0+aW5mbGlnaHQsIDIpCisjZGVmaW5lIGludGVsX2NvbnRleHRf
aW5mbGlnaHRfY291bnQoY2UpICBwdHJfdW5tYXNrX2JpdHMoKGNlKS0+aW5mbGlnaHQsIDIpCisj
ZGVmaW5lIGludGVsX2NvbnRleHRfaW5mbGlnaHRfaW5jKGNlKSBwdHJfY291bnRfaW5jKCYoY2Up
LT5pbmZsaWdodCkKKyNkZWZpbmUgaW50ZWxfY29udGV4dF9pbmZsaWdodF9kZWMoY2UpIHB0cl9j
b3VudF9kZWMoJihjZSktPmluZmxpZ2h0KQogCiAJc3RydWN0IGxpc3RfaGVhZCBzaWduYWxfbGlu
azsKIAlzdHJ1Y3QgbGlzdF9oZWFkIHNpZ25hbHM7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZS5oCmluZGV4IDJmMWM2ODcxZWU5NS4uOWJiNmZmNzY2ODBlIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaAorKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9lbmdpbmUuaApAQCAtMTI1LDcxICsxMjUsMjYgQEAgaGFuZ2NoZWNr
X2FjdGlvbl90b19zdHIoY29uc3QgZW51bSBpbnRlbF9lbmdpbmVfaGFuZ2NoZWNrX2FjdGlvbiBh
KQogCiB2b2lkIGludGVsX2VuZ2luZXNfc2V0X3NjaGVkdWxlcl9jYXBzKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KTsKIAotc3RhdGljIGlubGluZSB2b2lkCi1leGVjbGlzdHNfc2V0X2Fj
dGl2ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzLAotCQkgICAgIHVu
c2lnbmVkIGludCBiaXQpCi17Ci0JX19zZXRfYml0KGJpdCwgKHVuc2lnbmVkIGxvbmcgKikmZXhl
Y2xpc3RzLT5hY3RpdmUpOwotfQotCi1zdGF0aWMgaW5saW5lIGJvb2wKLWV4ZWNsaXN0c19zZXRf
YWN0aXZlX29uY2Uoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cywKLQkJ
CSAgdW5zaWduZWQgaW50IGJpdCkKLXsKLQlyZXR1cm4gIV9fdGVzdF9hbmRfc2V0X2JpdChiaXQs
ICh1bnNpZ25lZCBsb25nICopJmV4ZWNsaXN0cy0+YWN0aXZlKTsKLX0KLQotc3RhdGljIGlubGlu
ZSB2b2lkCi1leGVjbGlzdHNfY2xlYXJfYWN0aXZlKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xp
c3RzICpleGVjbGlzdHMsCi0JCSAgICAgICB1bnNpZ25lZCBpbnQgYml0KQotewotCV9fY2xlYXJf
Yml0KGJpdCwgKHVuc2lnbmVkIGxvbmcgKikmZXhlY2xpc3RzLT5hY3RpdmUpOwotfQotCi1zdGF0
aWMgaW5saW5lIHZvaWQKLWV4ZWNsaXN0c19jbGVhcl9hbGxfYWN0aXZlKHN0cnVjdCBpbnRlbF9l
bmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludAor
ZXhlY2xpc3RzX251bV9wb3J0cyhjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAq
IGNvbnN0IGV4ZWNsaXN0cykKIHsKLQlleGVjbGlzdHMtPmFjdGl2ZSA9IDA7CisJcmV0dXJuIGV4
ZWNsaXN0cy0+cG9ydF9tYXNrICsgMTsKIH0KIAotc3RhdGljIGlubGluZSBib29sCi1leGVjbGlz
dHNfaXNfYWN0aXZlKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlz
dHMsCi0JCSAgICB1bnNpZ25lZCBpbnQgYml0KQorc3RhdGljIGlubGluZSBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICoKK2V4ZWNsaXN0c19hY3RpdmUoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9leGVj
bGlzdHMgKmV4ZWNsaXN0cykKIHsKLQlyZXR1cm4gdGVzdF9iaXQoYml0LCAodW5zaWduZWQgbG9u
ZyAqKSZleGVjbGlzdHMtPmFjdGl2ZSk7CisJR0VNX0JVR19PTihleGVjbGlzdHMtPmFjdGl2ZSAt
IGV4ZWNsaXN0cy0+aW5mbGlnaHQgPgorCQkgICBleGVjbGlzdHNfbnVtX3BvcnRzKGV4ZWNsaXN0
cykpOworCXJldHVybiBSRUFEX09OQ0UoKmV4ZWNsaXN0cy0+YWN0aXZlKTsKIH0KIAotdm9pZCBl
eGVjbGlzdHNfdXNlcl9iZWdpbihzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xp
c3RzLAotCQkJICBjb25zdCBzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAqcG9ydCk7Ci12b2lkIGV4ZWNs
aXN0c191c2VyX2VuZChzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKTsK
LQogdm9pZAogZXhlY2xpc3RzX2NhbmNlbF9wb3J0X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdp
bmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzKTsKIAogc3RydWN0IGk5MTVfcmVxdWVzdCAq
CiBleGVjbGlzdHNfdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2lu
ZV9leGVjbGlzdHMgKmV4ZWNsaXN0cyk7CiAKLXN0YXRpYyBpbmxpbmUgdW5zaWduZWQgaW50Ci1l
eGVjbGlzdHNfbnVtX3BvcnRzKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICog
Y29uc3QgZXhlY2xpc3RzKQotewotCXJldHVybiBleGVjbGlzdHMtPnBvcnRfbWFzayArIDE7Ci19
Ci0KLXN0YXRpYyBpbmxpbmUgc3RydWN0IGV4ZWNsaXN0X3BvcnQgKgotZXhlY2xpc3RzX3BvcnRf
Y29tcGxldGUoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMs
Ci0JCQlzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAqIGNvbnN0IHBvcnQpCi17Ci0JY29uc3QgdW5zaWdu
ZWQgaW50IG0gPSBleGVjbGlzdHMtPnBvcnRfbWFzazsKLQotCUdFTV9CVUdfT04ocG9ydF9pbmRl
eChwb3J0LCBleGVjbGlzdHMpICE9IDApOwotCUdFTV9CVUdfT04oIWV4ZWNsaXN0c19pc19hY3Rp
dmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1VTRVIpKTsKLQotCW1lbW1vdmUocG9ydCwg
cG9ydCArIDEsIG0gKiBzaXplb2Yoc3RydWN0IGV4ZWNsaXN0X3BvcnQpKTsKLQltZW1zZXQocG9y
dCArIG0sIDAsIHNpemVvZihzdHJ1Y3QgZXhlY2xpc3RfcG9ydCkpOwotCi0JcmV0dXJuIHBvcnQ7
Ci19Ci0KIHN0YXRpYyBpbmxpbmUgdTMyCiBpbnRlbF9yZWFkX3N0YXR1c19wYWdlKGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgaW50IHJlZykKIHsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKaW5kZXggN2ZkMzNlODFjMmQ5Li5kNDUzMjhlMjU0
ZGMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCkBAIC01MDgs
NiArNTA4LDEwIEBAIHZvaWQgaW50ZWxfZW5naW5lX2luaXRfZXhlY2xpc3RzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlHRU1fQlVHX09OKCFpc19wb3dlcl9vZl8yKGV4ZWNsaXN0
c19udW1fcG9ydHMoZXhlY2xpc3RzKSkpOwogCUdFTV9CVUdfT04oZXhlY2xpc3RzX251bV9wb3J0
cyhleGVjbGlzdHMpID4gRVhFQ0xJU1RfTUFYX1BPUlRTKTsKIAorCW1lbXNldChleGVjbGlzdHMt
PnBlbmRpbmcsIDAsIHNpemVvZihleGVjbGlzdHMtPnBlbmRpbmcpKTsKKwlleGVjbGlzdHMtPmFj
dGl2ZSA9CisJCW1lbXNldChleGVjbGlzdHMtPmluZmxpZ2h0LCAwLCBzaXplb2YoZXhlY2xpc3Rz
LT5pbmZsaWdodCkpOworCiAJZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50ID0gSU5UX01J
TjsKIAlleGVjbGlzdHMtPnF1ZXVlID0gUkJfUk9PVF9DQUNIRUQ7CiB9CkBAIC0xMTUyLDcgKzEx
NTYsNyBAQCBib29sIGludGVsX2VuZ2luZV9pc19pZGxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIAkJcmV0dXJuIHRydWU7CiAKIAkvKiBXYWl0aW5nIHRvIGRyYWluIEVMU1A/ICov
Ci0JaWYgKFJFQURfT05DRShlbmdpbmUtPmV4ZWNsaXN0cy5hY3RpdmUpKSB7CisJaWYgKGV4ZWNs
aXN0c19hY3RpdmUoJmVuZ2luZS0+ZXhlY2xpc3RzKSkgewogCQlzdHJ1Y3QgdGFza2xldF9zdHJ1
Y3QgKnQgPSAmZW5naW5lLT5leGVjbGlzdHMudGFza2xldDsKIAogCQlzeW5jaHJvbml6ZV9oYXJk
aXJxKGVuZ2luZS0+aTkxNS0+ZHJtLmlycSk7CkBAIC0xMTY5LDcgKzExNzMsNyBAQCBib29sIGlu
dGVsX2VuZ2luZV9pc19pZGxlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJLyog
T3RoZXJ3aXNlIGZsdXNoIHRoZSB0YXNrbGV0IGlmIGl0IHdhcyBvbiBhbm90aGVyIGNwdSAqLwog
CQl0YXNrbGV0X3VubG9ja193YWl0KHQpOwogCi0JCWlmIChSRUFEX09OQ0UoZW5naW5lLT5leGVj
bGlzdHMuYWN0aXZlKSkKKwkJaWYgKGV4ZWNsaXN0c19hY3RpdmUoJmVuZ2luZS0+ZXhlY2xpc3Rz
KSkKIAkJCXJldHVybiBmYWxzZTsKIAl9CiAKQEAgLTEzNjcsNiArMTM3MSw3IEBAIHN0YXRpYyB2
b2lkIGludGVsX2VuZ2luZV9wcmludF9yZWdpc3RlcnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLAogCX0KIAogCWlmIChIQVNfRVhFQ0xJU1RTKGRldl9wcml2KSkgeworCQlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICogY29uc3QgKnBvcnQsICpycTsKIAkJY29uc3QgdTMyICpod3MgPQogCQkJ
JmVuZ2luZS0+c3RhdHVzX3BhZ2UuYWRkcltJOTE1X0hXU19DU0JfQlVGMF9JTkRFWF07CiAJCWNv
bnN0IHU4IG51bV9lbnRyaWVzID0gZXhlY2xpc3RzLT5jc2Jfc2l6ZTsKQEAgLTEzOTksMjcgKzE0
MDQsMzMgQEAgc3RhdGljIHZvaWQgaW50ZWxfZW5naW5lX3ByaW50X3JlZ2lzdGVycyhzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCX0KIAogCQlzcGluX2xvY2tfaXJxc2F2ZSgmZW5n
aW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwotCQlmb3IgKGlkeCA9IDA7IGlkeCA8IGV4ZWNsaXN0
c19udW1fcG9ydHMoZXhlY2xpc3RzKTsgaWR4KyspIHsKLQkJCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxOwotCQkJdW5zaWduZWQgaW50IGNvdW50OworCQlmb3IgKHBvcnQgPSBleGVjbGlzdHMtPmFj
dGl2ZTsgKHJxID0gKnBvcnQpOyBwb3J0KyspIHsKKwkJCWNoYXIgaGRyWzgwXTsKKwkJCWludCBs
ZW47CisKKwkJCWxlbiA9IHNucHJpbnRmKGhkciwgc2l6ZW9mKGhkciksCisJCQkJICAgICAgICJc
dFx0QWN0aXZlWyVkOiAiLAorCQkJCSAgICAgICAoaW50KShwb3J0IC0gZXhlY2xpc3RzLT5hY3Rp
dmUpKTsKKwkJCWlmICghaTkxNV9yZXF1ZXN0X3NpZ25hbGVkKHJxKSkKKwkJCQlsZW4gKz0gc25w
cmludGYoaGRyICsgbGVuLCBzaXplb2YoaGRyKSAtIGxlbiwKKwkJCQkJCSJyaW5nOntzdGFydDol
MDh4LCBod3NwOiUwOHgsIHNlcW5vOiUwOHh9LCAiLAorCQkJCQkJaTkxNV9nZ3R0X29mZnNldChy
cS0+cmluZy0+dm1hKSwKKwkJCQkJCXJxLT50aW1lbGluZS0+aHdzcF9vZmZzZXQsCisJCQkJCQlo
d3NwX3NlcW5vKHJxKSk7CisJCQlzbnByaW50ZihoZHIgKyBsZW4sIHNpemVvZihoZHIpIC0gbGVu
LCAicnE6ICIpOworCQkJcHJpbnRfcmVxdWVzdChtLCBycSwgaGRyKTsKKwkJfQorCQlmb3IgKHBv
cnQgPSBleGVjbGlzdHMtPnBlbmRpbmc7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7CiAJCQljaGFy
IGhkcls4MF07CiAKLQkJCXJxID0gcG9ydF91bnBhY2soJmV4ZWNsaXN0cy0+cG9ydFtpZHhdLCAm
Y291bnQpOwotCQkJaWYgKCFycSkgewotCQkJCWRybV9wcmludGYobSwgIlx0XHRFTFNQWyVkXSBp
ZGxlXG4iLCBpZHgpOwotCQkJfSBlbHNlIGlmICghaTkxNV9yZXF1ZXN0X3NpZ25hbGVkKHJxKSkg
ewotCQkJCXNucHJpbnRmKGhkciwgc2l6ZW9mKGhkciksCi0JCQkJCSAiXHRcdEVMU1BbJWRdIGNv
dW50PSVkLCByaW5nOntzdGFydDolMDh4LCBod3NwOiUwOHgsIHNlcW5vOiUwOHh9LCBycTogIiwK
LQkJCQkJIGlkeCwgY291bnQsCi0JCQkJCSBpOTE1X2dndHRfb2Zmc2V0KHJxLT5yaW5nLT52bWEp
LAotCQkJCQkgcnEtPnRpbWVsaW5lLT5od3NwX29mZnNldCwKLQkJCQkJIGh3c3Bfc2Vxbm8ocnEp
KTsKLQkJCQlwcmludF9yZXF1ZXN0KG0sIHJxLCBoZHIpOwotCQkJfSBlbHNlIHsKLQkJCQlwcmlu
dF9yZXF1ZXN0KG0sIHJxLCAiXHRcdEVMU1BbJWRdIHJxOiAiKTsKLQkJCX0KKwkJCXNucHJpbnRm
KGhkciwgc2l6ZW9mKGhkciksCisJCQkJICJcdFx0UGVuZGluZ1slZF0gcmluZzp7c3RhcnQ6JTA4
eCwgaHdzcDolMDh4LCBzZXFubzolMDh4fSwgcnE6ICIsCisJCQkJIChpbnQpKHBvcnQgLSBleGVj
bGlzdHMtPnBlbmRpbmcpLAorCQkJCSBpOTE1X2dndHRfb2Zmc2V0KHJxLT5yaW5nLT52bWEpLAor
CQkJCSBycS0+dGltZWxpbmUtPmh3c3Bfb2Zmc2V0LAorCQkJCSBod3NwX3NlcW5vKHJxKSk7CisJ
CQlwcmludF9yZXF1ZXN0KG0sIHJxLCBoZHIpOwogCQl9Ci0JCWRybV9wcmludGYobSwgIlx0XHRI
VyBhY3RpdmU/IDB4JXhcbiIsIGV4ZWNsaXN0cy0+YWN0aXZlKTsKIAkJc3Bpbl91bmxvY2tfaXJx
cmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCX0gZWxzZSBpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA+IDYpIHsKIAkJZHJtX3ByaW50ZihtLCAiXHRQUF9ESVJfQkFTRTogMHgl
MDh4XG4iLApAQCAtMTU4MywxNSArMTU5NCwxOSBAQCBpbnQgaW50ZWxfZW5hYmxlX2VuZ2luZV9z
dGF0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJfQogCiAJaWYgKGVuZ2luZS0+
c3RhdHMuZW5hYmxlZCsrID09IDApIHsKLQkJY29uc3Qgc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBv
cnQgPSBleGVjbGlzdHMtPnBvcnQ7Ci0JCXVuc2lnbmVkIGludCBudW1fcG9ydHMgPSBleGVjbGlz
dHNfbnVtX3BvcnRzKGV4ZWNsaXN0cyk7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKiBjb25zdCAq
cG9ydDsKKwkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAKIAkJZW5naW5lLT5zdGF0cy5lbmFi
bGVkX2F0ID0ga3RpbWVfZ2V0KCk7CiAKIAkJLyogWFhYIHN1Ym1pc3Npb24gbWV0aG9kIG9ibGl2
aW91cz8gKi8KLQkJd2hpbGUgKG51bV9wb3J0cy0tICYmIHBvcnRfaXNzZXQocG9ydCkpIHsKKwkJ
Zm9yIChwb3J0ID0gZXhlY2xpc3RzLT5hY3RpdmU7IChycSA9ICpwb3J0KTsgcG9ydCsrKQogCQkJ
ZW5naW5lLT5zdGF0cy5hY3RpdmUrKzsKLQkJCXBvcnQrKzsKKworCQlmb3IgKHBvcnQgPSBleGVj
bGlzdHMtPnBlbmRpbmc7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7CisJCQkvKiBFeGNsdWRlIGFu
eSBjb250ZXh0cyBhbHJlYWR5IGNvdW50ZWQgaW4gYWN0aXZlICovCisJCQlpZiAoaW50ZWxfY29u
dGV4dF9pbmZsaWdodF9jb3VudChycS0+aHdfY29udGV4dCkgPT0gMSkKKwkJCQllbmdpbmUtPnN0
YXRzLmFjdGl2ZSsrOwogCQl9CiAKIAkJaWYgKGVuZ2luZS0+c3RhdHMuYWN0aXZlKQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAppbmRleCA0M2U5NzVhMjYw
MTYuLjQxMWI3YTgwN2I5OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3R5cGVzLmgKQEAgLTE3Miw1MSArMTcyLDEwIEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhl
Y2xpc3RzIHsKIAkgKi8KIAl1MzIgX19pb21lbSAqY3RybF9yZWc7CiAKLQkvKioKLQkgKiBAcG9y
dDogZXhlY2xpc3QgcG9ydCBzdGF0ZXMKLQkgKgotCSAqIEZvciBlYWNoIGhhcmR3YXJlIEVMU1Ag
KEV4ZWNMaXN0IFN1Ym1pc3Npb24gUG9ydCkgd2Uga2VlcAotCSAqIHRyYWNrIG9mIHRoZSBsYXN0
IHJlcXVlc3QgYW5kIHRoZSBudW1iZXIgb2YgdGltZXMgd2Ugc3VibWl0dGVkCi0JICogdGhhdCBw
b3J0IHRvIGh3LiBXZSB0aGVuIGNvdW50IHRoZSBudW1iZXIgb2YgdGltZXMgdGhlIGh3IHJlcG9y
dHMKLQkgKiBhIGNvbnRleHQgY29tcGxldGlvbiBvciBwcmVlbXB0aW9uLiBBcyBvbmx5IG9uZSBj
b250ZXh0IGNhbgotCSAqIGJlIGFjdGl2ZSBvbiBodywgd2UgbGltaXQgcmVzdWJtaXNzaW9uIG9m
IGNvbnRleHQgdG8gcG9ydFswXS4gVGhpcwotCSAqIGlzIGNhbGxlZCBMaXRlIFJlc3RvcmUsIG9m
IHRoZSBjb250ZXh0LgotCSAqLwotCXN0cnVjdCBleGVjbGlzdF9wb3J0IHsKLQkJLyoqCi0JCSAq
IEByZXF1ZXN0X2NvdW50OiBjb21iaW5lZCByZXF1ZXN0IGFuZCBzdWJtaXNzaW9uIGNvdW50Ci0J
CSAqLwotCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0X2NvdW50OwotI2RlZmluZSBFWEVD
TElTVF9DT1VOVF9CSVRTIDIKLSNkZWZpbmUgcG9ydF9yZXF1ZXN0KHApIHB0cl9tYXNrX2JpdHMo
KHApLT5yZXF1ZXN0X2NvdW50LCBFWEVDTElTVF9DT1VOVF9CSVRTKQotI2RlZmluZSBwb3J0X2Nv
dW50KHApIHB0cl91bm1hc2tfYml0cygocCktPnJlcXVlc3RfY291bnQsIEVYRUNMSVNUX0NPVU5U
X0JJVFMpCi0jZGVmaW5lIHBvcnRfcGFjayhycSwgY291bnQpIHB0cl9wYWNrX2JpdHMocnEsIGNv
dW50LCBFWEVDTElTVF9DT1VOVF9CSVRTKQotI2RlZmluZSBwb3J0X3VucGFjayhwLCBjb3VudCkg
cHRyX3VucGFja19iaXRzKChwKS0+cmVxdWVzdF9jb3VudCwgY291bnQsIEVYRUNMSVNUX0NPVU5U
X0JJVFMpCi0jZGVmaW5lIHBvcnRfc2V0KHAsIHBhY2tlZCkgKChwKS0+cmVxdWVzdF9jb3VudCA9
IChwYWNrZWQpKQotI2RlZmluZSBwb3J0X2lzc2V0KHApICgocCktPnJlcXVlc3RfY291bnQpCi0j
ZGVmaW5lIHBvcnRfaW5kZXgocCwgZXhlY2xpc3RzKSAoKHApIC0gKGV4ZWNsaXN0cyktPnBvcnQp
Ci0KLQkJLyoqCi0JCSAqIEBjb250ZXh0X2lkOiBjb250ZXh0IElEIGZvciBwb3J0Ci0JCSAqLwot
CQlHRU1fREVCVUdfREVDTCh1MzIgY29udGV4dF9pZCk7Ci0KICNkZWZpbmUgRVhFQ0xJU1RfTUFY
X1BPUlRTIDIKLQl9IHBvcnRbRVhFQ0xJU1RfTUFYX1BPUlRTXTsKLQotCS8qKgotCSAqIEBhY3Rp
dmU6IGlzIHRoZSBIVyBhY3RpdmU/IFdlIGNvbnNpZGVyIHRoZSBIVyBhcyBhY3RpdmUgYWZ0ZXIK
LQkgKiBzdWJtaXR0aW5nIGFueSBjb250ZXh0IGZvciBleGVjdXRpb24gYW5kIHVudGlsIHdlIGhh
dmUgc2VlbiB0aGUKLQkgKiBsYXN0IGNvbnRleHQgY29tcGxldGlvbiBldmVudC4gQWZ0ZXIgdGhh
dCwgd2UgZG8gbm90IGV4cGVjdCBhbnkKLQkgKiBtb3JlIGV2ZW50cyB1bnRpbCB3ZSBzdWJtaXQs
IGFuZCBzbyBjYW4gcGFyayB0aGUgSFcuCi0JICoKLQkgKiBBcyB3ZSBoYXZlIGEgc21hbGwgbnVt
YmVyIG9mIGRpZmZlcmVudCBzb3VyY2VzIGZyb20gd2hpY2ggd2UgZmVlZAotCSAqIHRoZSBIVywg
d2UgdHJhY2sgdGhlIHN0YXRlIG9mIGVhY2ggaW5zaWRlIGEgc2luZ2xlIGJpdGZpZWxkLgotCSAq
LwotCXVuc2lnbmVkIGludCBhY3RpdmU7Ci0jZGVmaW5lIEVYRUNMSVNUU19BQ1RJVkVfVVNFUiAw
Ci0jZGVmaW5lIEVYRUNMSVNUU19BQ1RJVkVfUFJFRU1QVCAxCi0jZGVmaW5lIEVYRUNMSVNUU19B
Q1RJVkVfSFdBQ0sgMgorCXN0cnVjdCBpOTE1X3JlcXVlc3QgKiBjb25zdCAqYWN0aXZlOworCXN0
cnVjdCBpOTE1X3JlcXVlc3QgKmluZmxpZ2h0W0VYRUNMSVNUX01BWF9QT1JUUyArIDEgLyogc2Vu
dGluZWwgKi9dOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnBlbmRpbmdbRVhFQ0xJU1RfTUFYX1BP
UlRTICsgMV07CiAKIAkvKioKIAkgKiBAcG9ydF9tYXNrOiBudW1iZXIgb2YgZXhlY2xpc3QgcG9y
dHMgLSAxCkBAIC0yNTcsMTEgKzIxNiw2IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3Rz
IHsKIAkgKi8KIAl1MzIgKmNzYl9zdGF0dXM7CiAKLQkvKioKLQkgKiBAcHJlZW1wdF9jb21wbGV0
ZV9zdGF0dXM6IGV4cGVjdGVkIENTQiB1cG9uIGNvbXBsZXRpbmcgcHJlZW1wdGlvbgotCSAqLwot
CXUzMiBwcmVlbXB0X2NvbXBsZXRlX3N0YXR1czsKLQogCS8qKgogCSAqIEBjc2Jfc2l6ZTogY29u
dGV4dCBzdGF0dXMgYnVmZmVyIEZJRk8gc2l6ZQogCSAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYwppbmRleCA4MmI3YWNlNjJkOTcuLmRjMDc3YjUzNmZhNSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTE2MSw2ICsxNjEsOCBAQAogI2RlZmluZSBHRU44X0NUWF9T
VEFUVVNfQ09NUExFVEVEX01BU0sgXAogCSAoR0VOOF9DVFhfU1RBVFVTX0NPTVBMRVRFIHwgR0VO
OF9DVFhfU1RBVFVTX1BSRUVNUFRFRCkKIAorI2RlZmluZSBDVFhfREVTQ19GT1JDRV9SRVNUT1JF
IEJJVF9VTEwoMikKKwogLyogVHlwaWNhbCBzaXplIG9mIHRoZSBhdmVyYWdlIHJlcXVlc3QgKDIg
cGlwZWNvbnRyb2xzIGFuZCBhIE1JX0JCKSAqLwogI2RlZmluZSBFWEVDTElTVFNfUkVRVUVTVF9T
SVpFIDY0IC8qIGJ5dGVzICovCiAjZGVmaW5lIFdBX1RBSUxfRFdPUkRTIDIKQEAgLTIyMSw2ICsy
MjMsMTQgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2luaXRfcmVnX3N0YXRlKHUzMiAqcmVnX3N0
YXRlLAogCQkJCSAgICAgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQkJCSAgICAg
c3RydWN0IGludGVsX3JpbmcgKnJpbmcpOwogCitzdGF0aWMgaW5saW5lIHUzMiBpbnRlbF9od3Nf
cHJlZW1wdF9hZGRyZXNzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlyZXR1
cm4gKGk5MTVfZ2d0dF9vZmZzZXQoZW5naW5lLT5zdGF0dXNfcGFnZS52bWEpICsKKwkJSTkxNV9H
RU1fSFdTX1BSRUVNUFRfQUREUik7Cit9CisKKyNkZWZpbmUgcmluZ19wYXVzZShFKSAoKEUpLT5z
dGF0dXNfcGFnZS5hZGRyW0k5MTVfR0VNX0hXU19QUkVFTVBUXSkKKwogc3RhdGljIGlubGluZSBz
dHJ1Y3QgaTkxNV9wcmlvbGlzdCAqdG9fcHJpb2xpc3Qoc3RydWN0IHJiX25vZGUgKnJiKQogewog
CXJldHVybiByYl9lbnRyeShyYiwgc3RydWN0IGk5MTVfcHJpb2xpc3QsIG5vZGUpOwpAQCAtMjcx
LDEyICsyODEsNiBAQCBzdGF0aWMgaW5saW5lIGJvb2wgbmVlZF9wcmVlbXB0KGNvbnN0IHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIHsKIAlpbnQgbGFzdF9wcmlvOwogCi0JaWYgKCFl
bmdpbmUtPnByZWVtcHRfY29udGV4dCkKLQkJcmV0dXJuIGZhbHNlOwotCi0JaWYgKGk5MTVfcmVx
dWVzdF9jb21wbGV0ZWQocnEpKQotCQlyZXR1cm4gZmFsc2U7Ci0KIAkvKgogCSAqIENoZWNrIGlm
IHRoZSBjdXJyZW50IHByaW9yaXR5IGhpbnQgbWVyaXRzIGEgcHJlZW1wdGlvbiBhdHRlbXB0Lgog
CSAqCkBAIC0zMzgsOSArMzQyLDYgQEAgX19tYXliZV91bnVzZWQgc3RhdGljIGlubGluZSBib29s
CiBhc3NlcnRfcHJpb3JpdHlfcXVldWUoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiwK
IAkJICAgICAgY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqbmV4dCkKIHsKLQljb25zdCBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzID0KLQkJJnByZXYtPmVuZ2luZS0+
ZXhlY2xpc3RzOwotCiAJLyoKIAkgKiBXaXRob3V0IHByZWVtcHRpb24sIHRoZSBwcmV2IG1heSBy
ZWZlciB0byB0aGUgc3RpbGwgYWN0aXZlIGVsZW1lbnQKIAkgKiB3aGljaCB3ZSByZWZ1c2UgdG8g
bGV0IGdvLgpAQCAtMzQ4LDcgKzM0OSw3IEBAIGFzc2VydF9wcmlvcml0eV9xdWV1ZShjb25zdCBz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpwcmV2LAogCSAqIEV2ZW4gd2l0aCBwcmVlbXB0aW9uLCB0aGVy
ZSBhcmUgdGltZXMgd2hlbiB3ZSB0aGluayBpdCBpcyBiZXR0ZXIgbm90CiAJICogdG8gcHJlZW1w
dCBhbmQgbGVhdmUgYW4gb3N0ZW5zaWJseSBsb3dlciBwcmlvcml0eSByZXF1ZXN0IGluIGZsaWdo
dC4KIAkgKi8KLQlpZiAocG9ydF9yZXF1ZXN0KGV4ZWNsaXN0cy0+cG9ydCkgPT0gcHJldikKKwlp
ZiAoaTkxNV9yZXF1ZXN0X2lzX2FjdGl2ZShwcmV2KSkKIAkJcmV0dXJuIHRydWU7CiAKIAlyZXR1
cm4gcnFfcHJpbyhwcmV2KSA+PSBycV9wcmlvKG5leHQpOwpAQCAtNDQyLDEzICs0NDMsMTEgQEAg
X191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiAJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKm93bmVyOwogCiAJCWlmIChpOTE1X3JlcXVl
c3RfY29tcGxldGVkKHJxKSkKLQkJCWJyZWFrOworCQkJY29udGludWU7IC8qIFhYWCAqLwogCiAJ
CV9faTkxNV9yZXF1ZXN0X3Vuc3VibWl0KHJxKTsKIAkJdW53aW5kX3dhX3RhaWwocnEpOwogCi0J
CUdFTV9CVUdfT04ocnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0KTsKLQogCQkvKgogCQkgKiBQdXNo
IHRoZSByZXF1ZXN0IGJhY2sgaW50byB0aGUgcXVldWUgZm9yIGxhdGVyIHJlc3VibWlzc2lvbi4K
IAkJICogSWYgdGhpcyByZXF1ZXN0IGlzIG5vdCBuYXRpdmUgdG8gdGhpcyBwaHlzaWNhbCBlbmdp
bmUgKGkuZS4KQEAgLTUwMCwzMiArNDk5LDMyIEBAIGV4ZWNsaXN0c19jb250ZXh0X3N0YXR1c19j
aGFuZ2Uoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIHVuc2lnbmVkIGxvbmcgc3RhdHVzKQogCQkJ
CSAgIHN0YXR1cywgcnEpOwogfQogCi1pbmxpbmUgdm9pZAotZXhlY2xpc3RzX3VzZXJfYmVnaW4o
c3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cywKLQkJICAgICBjb25zdCBz
dHJ1Y3QgZXhlY2xpc3RfcG9ydCAqcG9ydCkKK3N0YXRpYyBpbmxpbmUgc3RydWN0IGk5MTVfcmVx
dWVzdCAqCitleGVjbGlzdHNfc2NoZWR1bGVfaW4oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGlu
dCBpZHgpCiB7Ci0JZXhlY2xpc3RzX3NldF9hY3RpdmVfb25jZShleGVjbGlzdHMsIEVYRUNMSVNU
U19BQ1RJVkVfVVNFUik7Ci19CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEtPmh3X2Nv
bnRleHQ7CisJaW50IGNvdW50OwogCi1pbmxpbmUgdm9pZAotZXhlY2xpc3RzX3VzZXJfZW5kKHN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCi17Ci0JZXhlY2xpc3RzX2Ns
ZWFyX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVfVVNFUik7Ci19CisJdHJhY2Vf
aTkxNV9yZXF1ZXN0X2luKHJxLCBpZHgpOwogCi1zdGF0aWMgaW5saW5lIHZvaWQKLWV4ZWNsaXN0
c19jb250ZXh0X3NjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQotewotCUdFTV9C
VUdfT04ocnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0KTsKKwljb3VudCA9IGludGVsX2NvbnRleHRf
aW5mbGlnaHRfY291bnQoY2UpOworCWlmICghY291bnQpIHsKKwkJaW50ZWxfY29udGV4dF9nZXQo
Y2UpOworCQljZS0+aW5mbGlnaHQgPSBycS0+ZW5naW5lOworCisJCWV4ZWNsaXN0c19jb250ZXh0
X3N0YXR1c19jaGFuZ2UocnEsIElOVEVMX0NPTlRFWFRfU0NIRURVTEVfSU4pOworCQlpbnRlbF9l
bmdpbmVfY29udGV4dF9pbihjZS0+aW5mbGlnaHQpOworCX0KKworCWludGVsX2NvbnRleHRfaW5m
bGlnaHRfaW5jKGNlKTsKKwlHRU1fQlVHX09OKGludGVsX2NvbnRleHRfaW5mbGlnaHQoY2UpICE9
IHJxLT5lbmdpbmUpOwogCi0JZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShycSwgSU5U
RUxfQ09OVEVYVF9TQ0hFRFVMRV9JTik7Ci0JaW50ZWxfZW5naW5lX2NvbnRleHRfaW4ocnEtPmVu
Z2luZSk7Ci0JcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZTsKKwlyZXR1cm4g
aTkxNV9yZXF1ZXN0X2dldChycSk7CiB9CiAKLXN0YXRpYyB2b2lkIGtpY2tfc2libGluZ3Moc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgdm9pZCBraWNrX3NpYmxpbmdzKHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7Ci0Jc3RydWN0IHZp
cnR1YWxfZW5naW5lICp2ZSA9IHRvX3ZpcnR1YWxfZW5naW5lKHJxLT5od19jb250ZXh0LT5lbmdp
bmUpOworCXN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSBjb250YWluZXJfb2YoY2UsIHR5cGVv
ZigqdmUpLCBjb250ZXh0KTsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpuZXh0ID0gUkVBRF9PTkNF
KHZlLT5yZXF1ZXN0KTsKIAogCWlmIChuZXh0ICYmIG5leHQtPmV4ZWN1dGlvbl9tYXNrICYgfnJx
LT5leGVjdXRpb25fbWFzaykKQEAgLTUzMywyOSArNTMyLDQyIEBAIHN0YXRpYyB2b2lkIGtpY2tf
c2libGluZ3Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9p
ZAotZXhlY2xpc3RzX2NvbnRleHRfc2NoZWR1bGVfb3V0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LCB1bnNpZ25lZCBsb25nIHN0YXR1cykKK2V4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCiB7Ci0JcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gTlVMTDsKLQlp
bnRlbF9lbmdpbmVfY29udGV4dF9vdXQocnEtPmVuZ2luZSk7Ci0JZXhlY2xpc3RzX2NvbnRleHRf
c3RhdHVzX2NoYW5nZShycSwgc3RhdHVzKTsKKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBy
cS0+aHdfY29udGV4dDsKKworCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291
bnQoY2UpKTsKKwogCXRyYWNlX2k5MTVfcmVxdWVzdF9vdXQocnEpOwogCi0JLyoKLQkgKiBJZiB0
aGlzIGlzIHBhcnQgb2YgYSB2aXJ0dWFsIGVuZ2luZSwgaXRzIG5leHQgcmVxdWVzdCBtYXkgaGF2
ZQotCSAqIGJlZW4gYmxvY2tlZCB3YWl0aW5nIGZvciBhY2Nlc3MgdG8gdGhlIGFjdGl2ZSBjb250
ZXh0LiBXZSBoYXZlCi0JICogdG8ga2ljayBhbGwgdGhlIHNpYmxpbmdzIGFnYWluIGluIGNhc2Ug
d2UgbmVlZCB0byBzd2l0Y2ggKGUuZy4KLQkgKiB0aGUgbmV4dCByZXF1ZXN0IGlzIG5vdCBydW5u
YWJsZSBvbiB0aGlzIGVuZ2luZSkuIEhvcGVmdWxseSwKLQkgKiB3ZSB3aWxsIGFscmVhZHkgaGF2
ZSBzdWJtaXR0ZWQgdGhlIG5leHQgcmVxdWVzdCBiZWZvcmUgdGhlCi0JICogdGFza2xldCBydW5z
IGFuZCBkbyBub3QgbmVlZCB0byByZWJ1aWxkIGVhY2ggdmlydHVhbCB0cmVlCi0JICogYW5kIGtp
Y2sgZXZlcnlvbmUgYWdhaW4uCi0JICovCi0JaWYgKHJxLT5lbmdpbmUgIT0gcnEtPmh3X2NvbnRl
eHQtPmVuZ2luZSkKLQkJa2lja19zaWJsaW5ncyhycSk7CisJaW50ZWxfY29udGV4dF9pbmZsaWdo
dF9kZWMoY2UpOworCWlmICghaW50ZWxfY29udGV4dF9pbmZsaWdodF9jb3VudChjZSkpIHsKKwkJ
aW50ZWxfZW5naW5lX2NvbnRleHRfb3V0KGNlLT5pbmZsaWdodCk7CisJCWV4ZWNsaXN0c19jb250
ZXh0X3N0YXR1c19jaGFuZ2UocnEsIElOVEVMX0NPTlRFWFRfU0NIRURVTEVfT1VUKTsKKworCQlj
ZS0+aW5mbGlnaHQgPSBOVUxMOworCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CisKKwkJLyoKKwkJ
ICogSWYgdGhpcyBpcyBwYXJ0IG9mIGEgdmlydHVhbCBlbmdpbmUsIGl0cyBuZXh0IHJlcXVlc3Qg
bWF5CisJCSAqIGhhdmUgYmVlbiBibG9ja2VkIHdhaXRpbmcgZm9yIGFjY2VzcyB0byB0aGUgYWN0
aXZlIGNvbnRleHQuCisJCSAqIFdlIGhhdmUgdG8ga2ljayBhbGwgdGhlIHNpYmxpbmdzIGFnYWlu
IGluIGNhc2Ugd2UgbmVlZCB0bworCQkgKiBzd2l0Y2ggKGUuZy4gdGhlIG5leHQgcmVxdWVzdCBp
cyBub3QgcnVubmFibGUgb24gdGhpcworCQkgKiBlbmdpbmUpLiBIb3BlZnVsbHksIHdlIHdpbGwg
YWxyZWFkeSBoYXZlIHN1Ym1pdHRlZCB0aGUgbmV4dAorCQkgKiByZXF1ZXN0IGJlZm9yZSB0aGUg
dGFza2xldCBydW5zIGFuZCBkbyBub3QgbmVlZCB0byByZWJ1aWxkCisJCSAqIGVhY2ggdmlydHVh
bCB0cmVlIGFuZCBraWNrIGV2ZXJ5b25lIGFnYWluLgorCQkgKi8KKwkJaWYgKHJxLT5lbmdpbmUg
IT0gY2UtPmVuZ2luZSkKKwkJCWtpY2tfc2libGluZ3MocnEsIGNlKTsKKwl9CisKKwlpOTE1X3Jl
cXVlc3RfcHV0KHJxKTsKIH0KIAotc3RhdGljIHU2NCBleGVjbGlzdHNfdXBkYXRlX2NvbnRleHQo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgdTY0IGV4ZWNsaXN0c191cGRhdGVfY29u
dGV4dChjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UgPSBycS0+aHdfY29udGV4dDsKKwl1NjQgZGVzYzsKIAogCWNlLT5scmNfcmVnX3N0
YXRlW0NUWF9SSU5HX1RBSUwgKyAxXSA9CiAJCWludGVsX3Jpbmdfc2V0X3RhaWwocnEtPnJpbmcs
IHJxLT50YWlsKTsKQEAgLTU3Niw3ICs1ODgsMTEgQEAgc3RhdGljIHU2NCBleGVjbGlzdHNfdXBk
YXRlX2NvbnRleHQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAJICogd21iKS4KIAkgKi8KIAlt
YigpOwotCXJldHVybiBjZS0+bHJjX2Rlc2M7CisKKwlkZXNjID0gY2UtPmxyY19kZXNjOworCWNl
LT5scmNfZGVzYyAmPSB+Q1RYX0RFU0NfRk9SQ0VfUkVTVE9SRTsKKworCXJldHVybiBkZXNjOwog
fQogCiBzdGF0aWMgaW5saW5lIHZvaWQgd3JpdGVfZGVzYyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqZXhlY2xpc3RzLCB1NjQgZGVzYywgdTMyIHBvcnQpCkBAIC01OTAsMTIgKzYwNiw1
NiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgd3JpdGVfZGVzYyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqZXhlY2xpc3RzLCB1NjQgZGVzYwogCX0KIH0KIAorc3RhdGljIF9fbWF5YmVfdW51
c2VkIHZvaWQKK3RyYWNlX3BvcnRzKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3Rz
ICpleGVjbGlzdHMsCisJICAgIGNvbnN0IGNoYXIgKm1zZywKKwkgICAgc3RydWN0IGk5MTVfcmVx
dWVzdCAqIGNvbnN0ICpwb3J0cykKK3sKKwljb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUgPQorCQljb250YWluZXJfb2YoZXhlY2xpc3RzLCB0eXBlb2YoKmVuZ2luZSksIGV4ZWNs
aXN0cyk7CisKKwlHRU1fVFJBQ0UoIiVzOiAlcyB7ICVsbHg6JWxsZCVzLCAlbGx4OiVsbGQgfVxu
IiwKKwkJICBlbmdpbmUtPm5hbWUsIG1zZywKKwkJICBwb3J0c1swXS0+ZmVuY2UuY29udGV4dCwK
KwkJICBwb3J0c1swXS0+ZmVuY2Uuc2Vxbm8sCisJCSAgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChw
b3J0c1swXSkgPyAiISIgOgorCQkgIGk5MTVfcmVxdWVzdF9zdGFydGVkKHBvcnRzWzBdKSA/ICIq
IiA6CisJCSAgIiIsCisJCSAgcG9ydHNbMV0gPyBwb3J0c1sxXS0+ZmVuY2UuY29udGV4dCA6IDAs
CisJCSAgcG9ydHNbMV0gPyBwb3J0c1sxXS0+ZmVuY2Uuc2Vxbm8gOiAwKTsKK30KKworc3RhdGlj
IF9fbWF5YmVfdW51c2VkIGJvb2wKK2Fzc2VydF9wZW5kaW5nX3ZhbGlkKGNvbnN0IHN0cnVjdCBp
bnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMsCisJCSAgICAgY29uc3QgY2hhciAqbXNn
KQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKiBjb25zdCAqcG9ydCwgKnJxOworCXN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZSA9IE5VTEw7CisKKwl0cmFjZV9wb3J0cyhleGVjbGlzdHMsIG1zZywg
ZXhlY2xpc3RzLT5wZW5kaW5nKTsKKworCWlmIChleGVjbGlzdHMtPnBlbmRpbmdbZXhlY2xpc3Rz
X251bV9wb3J0cyhleGVjbGlzdHMpXSkKKwkJcmV0dXJuIGZhbHNlOworCisJZm9yIChwb3J0ID0g
ZXhlY2xpc3RzLT5wZW5kaW5nOyAocnEgPSAqcG9ydCk7IHBvcnQrKykgeworCQlpZiAoY2UgPT0g
cnEtPmh3X2NvbnRleHQpCisJCQlyZXR1cm4gZmFsc2U7CisKKwkJY2UgPSBycS0+aHdfY29udGV4
dDsKKwkJR0VNX0JVR19PTihpOTE1X2FjdGl2ZV9pc19pZGxlKCZjZS0+YWN0aXZlKSk7CisJCUdF
TV9CVUdfT04oIWk5MTVfdm1hX2lzX3Bpbm5lZChjZS0+c3RhdGUpKTsKKwl9CisKKwlyZXR1cm4g
Y2U7Cit9CisKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19zdWJtaXRfcG9ydHMoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpl
eGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBv
cnQgPSBleGVjbGlzdHMtPnBvcnQ7CiAJdW5zaWduZWQgaW50IG47CiAKKwlHRU1fQlVHX09OKCFh
c3NlcnRfcGVuZGluZ192YWxpZChleGVjbGlzdHMsICJzdWJtaXQiKSk7CisKIAkvKgogCSAqIFdl
IGNhbiBza2lwIGFjcXVpcmluZyBpbnRlbF9ydW50aW1lX3BtX2dldCgpIGhlcmUgYXMgaXQgd2Fz
IHRha2VuCiAJICogb24gb3VyIGJlaGFsZiBieSB0aGUgcmVxdWVzdCAoc2VlIGk5MTVfZ2VtX21h
cmtfYnVzeSgpKSBhbmQgaXQgd2lsbApAQCAtNjEzLDM4ICs2NzMsMTYgQEAgc3RhdGljIHZvaWQg
ZXhlY2xpc3RzX3N1Ym1pdF9wb3J0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJ
ICogb2YgZWxzcSBlbnRyaWVzLCBrZWVwIHRoaXMgaW4gbWluZCBiZWZvcmUgY2hhbmdpbmcgdGhl
IGxvb3AgYmVsb3cuCiAJICovCiAJZm9yIChuID0gZXhlY2xpc3RzX251bV9wb3J0cyhleGVjbGlz
dHMpOyBuLS07ICkgewotCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKLQkJdW5zaWduZWQgaW50
IGNvdW50OwotCQl1NjQgZGVzYzsKKwkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEgPSBleGVjbGlz
dHMtPnBlbmRpbmdbbl07CiAKLQkJcnEgPSBwb3J0X3VucGFjaygmcG9ydFtuXSwgJmNvdW50KTsK
LQkJaWYgKHJxKSB7Ci0JCQlHRU1fQlVHX09OKGNvdW50ID4gIW4pOwotCQkJaWYgKCFjb3VudCsr
KQotCQkJCWV4ZWNsaXN0c19jb250ZXh0X3NjaGVkdWxlX2luKHJxKTsKLQkJCXBvcnRfc2V0KCZw
b3J0W25dLCBwb3J0X3BhY2socnEsIGNvdW50KSk7Ci0JCQlkZXNjID0gZXhlY2xpc3RzX3VwZGF0
ZV9jb250ZXh0KHJxKTsKLQkJCUdFTV9ERUJVR19FWEVDKHBvcnRbbl0uY29udGV4dF9pZCA9IHVw
cGVyXzMyX2JpdHMoZGVzYykpOwotCi0JCQlHRU1fVFJBQ0UoIiVzIGluWyVkXTogIGN0eD0lZC4l
ZCwgZmVuY2UgJWxseDolbGxkIChjdXJyZW50ICVkKSwgcHJpbz0lZFxuIiwKLQkJCQkgIGVuZ2lu
ZS0+bmFtZSwgbiwKLQkJCQkgIHBvcnRbbl0uY29udGV4dF9pZCwgY291bnQsCi0JCQkJICBycS0+
ZmVuY2UuY29udGV4dCwgcnEtPmZlbmNlLnNlcW5vLAotCQkJCSAgaHdzcF9zZXFubyhycSksCi0J
CQkJICBycV9wcmlvKHJxKSk7Ci0JCX0gZWxzZSB7Ci0JCQlHRU1fQlVHX09OKCFuKTsKLQkJCWRl
c2MgPSAwOwotCQl9Ci0KLQkJd3JpdGVfZGVzYyhleGVjbGlzdHMsIGRlc2MsIG4pOworCQl3cml0
ZV9kZXNjKGV4ZWNsaXN0cywKKwkJCSAgIHJxID8gZXhlY2xpc3RzX3VwZGF0ZV9jb250ZXh0KHJx
KSA6IDAsCisJCQkgICBuKTsKIAl9CiAKIAkvKiB3ZSBuZWVkIHRvIG1hbnVhbGx5IGxvYWQgdGhl
IHN1Ym1pdCBxdWV1ZSAqLwogCWlmIChleGVjbGlzdHMtPmN0cmxfcmVnKQogCQl3cml0ZWwoRUxf
Q1RSTF9MT0FELCBleGVjbGlzdHMtPmN0cmxfcmVnKTsKLQotCWV4ZWNsaXN0c19jbGVhcl9hY3Rp
dmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX0hXQUNLKTsKIH0KIAogc3RhdGljIGJvb2wg
Y3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24oY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQpAQCAtNjY4LDYgKzcwNiw3IEBAIHN0YXRpYyBib29sIGNhbl9tZXJnZV9jdHgoY29uc3Qgc3Ry
dWN0IGludGVsX2NvbnRleHQgKnByZXYsCiBzdGF0aWMgYm9vbCBjYW5fbWVyZ2VfcnEoY29uc3Qg
c3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiwKIAkJCSBjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpuZXh0KQogeworCUdFTV9CVUdfT04ocHJldiA9PSBuZXh0KTsKIAlHRU1fQlVHX09OKCFhc3Nl
cnRfcHJpb3JpdHlfcXVldWUocHJldiwgbmV4dCkpOwogCiAJaWYgKCFjYW5fbWVyZ2VfY3R4KHBy
ZXYtPmh3X2NvbnRleHQsIG5leHQtPmh3X2NvbnRleHQpKQpAQCAtNjc2LDU4ICs3MTUsNiBAQCBz
dGF0aWMgYm9vbCBjYW5fbWVyZ2VfcnEoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiwK
IAlyZXR1cm4gdHJ1ZTsKIH0KIAotc3RhdGljIHZvaWQgcG9ydF9hc3NpZ24oc3RydWN0IGV4ZWNs
aXN0X3BvcnQgKnBvcnQsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQotewotCUdFTV9CVUdfT04o
cnEgPT0gcG9ydF9yZXF1ZXN0KHBvcnQpKTsKLQotCWlmIChwb3J0X2lzc2V0KHBvcnQpKQotCQlp
OTE1X3JlcXVlc3RfcHV0KHBvcnRfcmVxdWVzdChwb3J0KSk7Ci0KLQlwb3J0X3NldChwb3J0LCBw
b3J0X3BhY2soaTkxNV9yZXF1ZXN0X2dldChycSksIHBvcnRfY291bnQocG9ydCkpKTsKLX0KLQot
c3RhdGljIHZvaWQgaW5qZWN0X3ByZWVtcHRfY29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCi17Ci0Jc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cyA9
ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBlbmdpbmUt
PnByZWVtcHRfY29udGV4dDsKLQl1bnNpZ25lZCBpbnQgbjsKLQotCUdFTV9CVUdfT04oZXhlY2xp
c3RzLT5wcmVlbXB0X2NvbXBsZXRlX3N0YXR1cyAhPQotCQkgICB1cHBlcl8zMl9iaXRzKGNlLT5s
cmNfZGVzYykpOwotCi0JLyoKLQkgKiBTd2l0Y2ggdG8gb3VyIGVtcHR5IHByZWVtcHQgY29udGV4
dCBzbwotCSAqIHRoZSBzdGF0ZSBvZiB0aGUgR1BVIGlzIGtub3duIChpZGxlKS4KLQkgKi8KLQlH
RU1fVFJBQ0UoIiVzXG4iLCBlbmdpbmUtPm5hbWUpOwotCWZvciAobiA9IGV4ZWNsaXN0c19udW1f
cG9ydHMoZXhlY2xpc3RzKTsgLS1uOyApCi0JCXdyaXRlX2Rlc2MoZXhlY2xpc3RzLCAwLCBuKTsK
LQotCXdyaXRlX2Rlc2MoZXhlY2xpc3RzLCBjZS0+bHJjX2Rlc2MsIG4pOwotCi0JLyogd2UgbmVl
ZCB0byBtYW51YWxseSBsb2FkIHRoZSBzdWJtaXQgcXVldWUgKi8KLQlpZiAoZXhlY2xpc3RzLT5j
dHJsX3JlZykKLQkJd3JpdGVsKEVMX0NUUkxfTE9BRCwgZXhlY2xpc3RzLT5jdHJsX3JlZyk7Ci0K
LQlleGVjbGlzdHNfY2xlYXJfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9IV0FD
Syk7Ci0JZXhlY2xpc3RzX3NldF9hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1BS
RUVNUFQpOwotCi0JKHZvaWQpSTkxNV9TRUxGVEVTVF9PTkxZKGV4ZWNsaXN0cy0+cHJlZW1wdF9o
YW5nLmNvdW50KyspOwotfQotCi1zdGF0aWMgdm9pZCBjb21wbGV0ZV9wcmVlbXB0X2NvbnRleHQo
c3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKLXsKLQlHRU1fQlVHX09O
KCFleGVjbGlzdHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9QUkVFTVBU
KSk7Ci0KLQlpZiAoaW5qZWN0X3ByZWVtcHRfaGFuZyhleGVjbGlzdHMpKQotCQlyZXR1cm47Ci0K
LQlleGVjbGlzdHNfY2FuY2VsX3BvcnRfcmVxdWVzdHMoZXhlY2xpc3RzKTsKLQlfX3Vud2luZF9p
bmNvbXBsZXRlX3JlcXVlc3RzKGNvbnRhaW5lcl9vZihleGVjbGlzdHMsCi0JCQkJCQkgIHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MsCi0JCQkJCQkgIGV4ZWNsaXN0cykpOwotfQotCiBzdGF0aWMgdm9p
ZCB2aXJ0dWFsX3VwZGF0ZV9yZWdpc3Rlcl9vZmZzZXRzKHUzMiAqcmVncywKIAkJCQkJICAgIHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKQEAgLTc5Miw3ICs3NzksNyBAQCBzdGF0
aWMgYm9vbCB2aXJ0dWFsX21hdGNoZXMoY29uc3Qgc3RydWN0IHZpcnR1YWxfZW5naW5lICp2ZSwK
IAkgKiB3ZSByZXVzZSB0aGUgcmVnaXN0ZXIgb2Zmc2V0cykuIFRoaXMgaXMgYSB2ZXJ5IHNtYWxs
CiAJICogaHlzdGVyc2lzIG9uIHRoZSBncmVlZHkgc2VlbGN0aW9uIGFsZ29yaXRobS4KIAkgKi8K
LQlpbmZsaWdodCA9IFJFQURfT05DRSh2ZS0+Y29udGV4dC5pbmZsaWdodCk7CisJaW5mbGlnaHQg
PSBpbnRlbF9jb250ZXh0X2luZmxpZ2h0KCZ2ZS0+Y29udGV4dCk7CiAJaWYgKGluZmxpZ2h0ICYm
IGluZmxpZ2h0ICE9IGVuZ2luZSkKIAkJcmV0dXJuIGZhbHNlOwogCkBAIC04MTUsMTMgKzgwMiwy
MyBAQCBzdGF0aWMgdm9pZCB2aXJ0dWFsX3hmZXJfYnJlYWRjcnVtYnMoc3RydWN0IHZpcnR1YWxf
ZW5naW5lICp2ZSwKIAlzcGluX3VubG9jaygmb2xkLT5icmVhZGNydW1icy5pcnFfbG9jayk7CiB9
CiAKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKK2xhc3RfYWN0aXZlKGNvbnN0IHN0cnVj
dCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCit7CisJc3RydWN0IGk5MTVfcmVx
dWVzdCAqIGNvbnN0ICpsYXN0ID0gZXhlY2xpc3RzLT5hY3RpdmU7CisKKwl3aGlsZSAoKmxhc3Qg
JiYgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZCgqbGFzdCkpCisJCWxhc3QrKzsKKworCXJldHVybiAq
bGFzdDsKK30KKwogc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29u
c3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwotCXN0cnVjdCBleGVjbGlzdF9wb3J0
ICpwb3J0ID0gZXhlY2xpc3RzLT5wb3J0OwotCWNvbnN0IHN0cnVjdCBleGVjbGlzdF9wb3J0ICog
Y29uc3QgbGFzdF9wb3J0ID0KLQkJJmV4ZWNsaXN0cy0+cG9ydFtleGVjbGlzdHMtPnBvcnRfbWFz
a107Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdCA9IHBvcnRfcmVxdWVzdChwb3J0KTsKKwlz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqcG9ydCA9IGV4ZWNsaXN0cy0+cGVuZGluZzsKKwlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICoqIGNvbnN0IGxhc3RfcG9ydCA9IHBvcnQgKyBleGVjbGlzdHMtPnBvcnRf
bWFzazsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpsYXN0OwogCXN0cnVjdCByYl9ub2RlICpyYjsK
IAlib29sIHN1Ym1pdCA9IGZhbHNlOwogCkBAIC04NjcsNjUgKzg2NCw3MiBAQCBzdGF0aWMgdm9p
ZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWJy
ZWFrOwogCX0KIAorCS8qCisJICogSWYgdGhlIHF1ZXVlIGlzIGhpZ2hlciBwcmlvcml0eSB0aGFu
IHRoZSBsYXN0CisJICogcmVxdWVzdCBpbiB0aGUgY3VycmVudGx5IGFjdGl2ZSBjb250ZXh0LCBz
dWJtaXQgYWZyZXNoLgorCSAqIFdlIHdpbGwgcmVzdWJtaXQgYWdhaW4gYWZ0ZXJ3YXJkcyBpbiBj
YXNlIHdlIG5lZWQgdG8gc3BsaXQKKwkgKiB0aGUgYWN0aXZlIGNvbnRleHQgdG8gaW50ZXJqZWN0
IHRoZSBwcmVlbXB0aW9uIHJlcXVlc3QsCisJICogaS5lLiB3ZSB3aWxsIHJldHJpZ2dlciBwcmVl
bXB0aW9uIGZvbGxvd2luZyB0aGUgYWNrIGluIGNhc2UKKwkgKiBvZiB0cm91YmxlLgorCSAqLwor
CWxhc3QgPSBsYXN0X2FjdGl2ZShleGVjbGlzdHMpOwogCWlmIChsYXN0KSB7Ci0JCS8qCi0JCSAq
IERvbid0IHJlc3VibWl0IG9yIHN3aXRjaCB1bnRpbCBhbGwgb3V0c3RhbmRpbmcKLQkJICogcHJl
ZW1wdGlvbnMgKGxpdGUtcmVzdG9yZSkgYXJlIHNlZW4uIFRoZW4gd2UKLQkJICoga25vdyB0aGUg
bmV4dCBwcmVlbXB0aW9uIHN0YXR1cyB3ZSBzZWUgY29ycmVzcG9uZHMKLQkJICogdG8gdGhpcyBF
TFNQIHVwZGF0ZS4KLQkJICovCi0JCUdFTV9CVUdfT04oIWV4ZWNsaXN0c19pc19hY3RpdmUoZXhl
Y2xpc3RzLAotCQkJCQkJRVhFQ0xJU1RTX0FDVElWRV9VU0VSKSk7Ci0JCUdFTV9CVUdfT04oIXBv
cnRfY291bnQoJnBvcnRbMF0pKTsKLQotCQkvKgotCQkgKiBJZiB3ZSB3cml0ZSB0byBFTFNQIGEg
c2Vjb25kIHRpbWUgYmVmb3JlIHRoZSBIVyBoYXMgaGFkCi0JCSAqIGEgY2hhbmNlIHRvIHJlc3Bv
bmQgdG8gdGhlIHByZXZpb3VzIHdyaXRlLCB3ZSBjYW4gY29uZnVzZQotCQkgKiB0aGUgSFcgYW5k
IGhpdCAidW5kZWZpbmVkIGJlaGF2aW91ciIuIEFmdGVyIHdyaXRpbmcgdG8gRUxTUCwKLQkJICog
d2UgbXVzdCB0aGVuIHdhaXQgdW50aWwgd2Ugc2VlIGEgY29udGV4dC1zd2l0Y2ggZXZlbnQgZnJv
bQotCQkgKiB0aGUgSFcgdG8gaW5kaWNhdGUgdGhhdCBpdCBoYXMgaGFkIGEgY2hhbmNlIHRvIHJl
c3BvbmQuCi0JCSAqLwotCQlpZiAoIWV4ZWNsaXN0c19pc19hY3RpdmUoZXhlY2xpc3RzLCBFWEVD
TElTVFNfQUNUSVZFX0hXQUNLKSkKLQkJCXJldHVybjsKLQogCQlpZiAobmVlZF9wcmVlbXB0KGVu
Z2luZSwgbGFzdCwgcmIpKSB7Ci0JCQlpbmplY3RfcHJlZW1wdF9jb250ZXh0KGVuZ2luZSk7Ci0J
CQlyZXR1cm47Ci0JCX0KKwkJCUdFTV9UUkFDRSgiJXM6IHByZWVtcHRpbmcgbGFzdD0lbGx4OiVs
bGQsIHByaW89JWQsIGhpbnQ9JWRcbiIsCisJCQkJICBlbmdpbmUtPm5hbWUsCisJCQkJICBsYXN0
LT5mZW5jZS5jb250ZXh0LAorCQkJCSAgbGFzdC0+ZmVuY2Uuc2Vxbm8sCisJCQkJICBsYXN0LT5z
Y2hlZC5hdHRyLnByaW9yaXR5LAorCQkJCSAgZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50
KTsKKwkJCS8qCisJCQkgKiBEb24ndCBsZXQgdGhlIFJJTkdfSEVBRCBhZHZhbmNlIHBhc3QgdGhl
IGJyZWFkY3J1bWIKKwkJCSAqIGFzIHdlIHVud2luZCAoYW5kIHVudGlsIHdlIHJlc3VibWl0KSBz
byB0aGF0IHdlIGRvCisJCQkgKiBub3QgYWNjaWRlbnRhbGx5IHRlbGwgaXQgdG8gZ28gYmFja3dh
cmRzLgorCQkJICovCisJCQlyaW5nX3BhdXNlKGVuZ2luZSkgPSAxOwogCi0JCS8qCi0JCSAqIElu
IHRoZW9yeSwgd2UgY291bGQgY29hbGVzY2UgbW9yZSByZXF1ZXN0cyBvbnRvCi0JCSAqIHRoZSBz
ZWNvbmQgcG9ydCAodGhlIGZpcnN0IHBvcnQgaXMgYWN0aXZlLCB3aXRoCi0JCSAqIG5vIHByZWVt
cHRpb25zIHBlbmRpbmcpLiBIb3dldmVyLCB0aGF0IG1lYW5zIHdlCi0JCSAqIHRoZW4gaGF2ZSB0
byBkZWFsIHdpdGggdGhlIHBvc3NpYmxlIGxpdGUtcmVzdG9yZQotCQkgKiBvZiB0aGUgc2Vjb25k
IHBvcnQgKGFzIHdlIHN1Ym1pdCB0aGUgRUxTUCwgdGhlcmUKLQkJICogbWF5IGJlIGEgY29udGV4
dC1zd2l0Y2gpIGJ1dCBhbHNvIHdlIG1heSBjb21wbGV0ZQotCQkgKiB0aGUgcmVzdWJtaXNzaW9u
IGJlZm9yZSB0aGUgY29udGV4dC1zd2l0Y2guIEVyZ28sCi0JCSAqIGNvYWxlc2Npbmcgb250byB0
aGUgc2Vjb25kIHBvcnQgd2lsbCBjYXVzZSBhCi0JCSAqIHByZWVtcHRpb24gZXZlbnQsIGJ1dCB3
ZSBjYW5ub3QgcHJlZGljdCB3aGV0aGVyCi0JCSAqIHRoYXQgd2lsbCBhZmZlY3QgcG9ydFswXSBv
ciBwb3J0WzFdLgotCQkgKgotCQkgKiBJZiB0aGUgc2Vjb25kIHBvcnQgaXMgYWxyZWFkeSBhY3Rp
dmUsIHdlIGNhbiB3YWl0Ci0JCSAqIHVudGlsIHRoZSBuZXh0IGNvbnRleHQtc3dpdGNoIGJlZm9y
ZSBjb250ZW1wbGF0aW5nCi0JCSAqIG5ldyByZXF1ZXN0cy4gVGhlIEdQVSB3aWxsIGJlIGJ1c3kg
YW5kIHdlIHNob3VsZCBiZQotCQkgKiBhYmxlIHRvIHJlc3VibWl0IHRoZSBuZXcgRUxTUCBiZWZv
cmUgaXQgaWRsZXMsCi0JCSAqIGF2b2lkaW5nIHBpcGVsaW5lIGJ1YmJsZXMgKG1vbWVudGFyeSBw
YXVzZXMgd2hlcmUKLQkJICogdGhlIGRyaXZlciBpcyB1bmFibGUgdG8ga2VlcCB1cCB0aGUgc3Vw
cGx5IG9mIG5ldwotCQkgKiB3b3JrKS4gSG93ZXZlciwgd2UgaGF2ZSB0byBkb3VibGUgY2hlY2sg
dGhhdCB0aGUKLQkJICogcHJpb3JpdGllcyBvZiB0aGUgcG9ydHMgaGF2ZW4ndCBiZWVuIHN3aXRj
aC4KLQkJICovCi0JCWlmIChwb3J0X2NvdW50KCZwb3J0WzFdKSkKLQkJCXJldHVybjsKKwkJCS8q
CisJCQkgKiBOb3RlIHRoYXQgd2UgaGF2ZSBub3Qgc3RvcHBlZCB0aGUgR1BVIGF0IHRoaXMgcG9p
bnQsCisJCQkgKiBzbyB3ZSBhcmUgdW53aW5kaW5nIHRoZSBpbmNvbXBsZXRlIHJlcXVlc3RzIGFz
IHRoZXkKKwkJCSAqIHJlbWFpbiBpbmZsaWdodCBhbmQgc28gYnkgdGhlIHRpbWUgd2UgZG8gY29t
cGxldGUKKwkJCSAqIHRoZSBwcmVlbXB0aW9uLCBzb21lIG9mIHRoZSB1bndvdW5kIHJlcXVlc3Rz
IG1heQorCQkJICogY29tcGxldGUhCisJCQkgKi8KKwkJCV9fdW53aW5kX2luY29tcGxldGVfcmVx
dWVzdHMoZW5naW5lKTsKIAotCQkvKgotCQkgKiBXYUlkbGVMaXRlUmVzdG9yZTpiZHcsc2tsCi0J
CSAqIEFwcGx5IHRoZSB3YSBOT09QcyB0byBwcmV2ZW50Ci0JCSAqIHJpbmc6SEVBRCA9PSBycTpU
QUlMIGFzIHdlIHJlc3VibWl0IHRoZQotCQkgKiByZXF1ZXN0LiBTZWUgZ2VuOF9lbWl0X2Zpbmlf
YnJlYWRjcnVtYigpIGZvcgotCQkgKiB3aGVyZSB3ZSBwcmVwYXJlIHRoZSBwYWRkaW5nIGFmdGVy
IHRoZQotCQkgKiBlbmQgb2YgdGhlIHJlcXVlc3QuCi0JCSAqLwotCQlsYXN0LT50YWlsID0gbGFz
dC0+d2FfdGFpbDsKKwkJCS8qCisJCQkgKiBJZiB3ZSBuZWVkIHRvIHJldHVybiB0byB0aGUgcHJl
ZW1wdGVkIGNvbnRleHQsIHdlCisJCQkgKiBuZWVkIHRvIHNraXAgdGhlIGxpdGUtcmVzdG9yZSBh
bmQgZm9yY2UgaXQgdG8KKwkJCSAqIHJlbG9hZCB0aGUgUklOR19UQUlMLiBPdGhlcndpc2UsIHRo
ZSBIVyBoYXMgYQorCQkJICogdGVuZGVuY3kgdG8gaWdub3JlIHVzIHJld2luZGluZyB0aGUgVEFJ
TCB0byB0aGUKKwkJCSAqIGVuZCBvZiBhbiBlYXJsaWVyIHJlcXVlc3QuCisJCQkgKi8KKwkJCWxh
c3QtPmh3X2NvbnRleHQtPmxyY19kZXNjIHw9IENUWF9ERVNDX0ZPUkNFX1JFU1RPUkU7CisJCQls
YXN0ID0gTlVMTDsKKwkJfSBlbHNlIHsKKwkJCS8qCisJCQkgKiBPdGhlcndpc2UgaWYgd2UgYWxy
ZWFkeSBoYXZlIGEgcmVxdWVzdCBwZW5kaW5nCisJCQkgKiBmb3IgZXhlY3V0aW9uIGFmdGVyIHRo
ZSBjdXJyZW50IG9uZSwgd2UgY2FuCisJCQkgKiBqdXN0IHdhaXQgdW50aWwgdGhlIG5leHQgQ1Mg
ZXZlbnQgYmVmb3JlCisJCQkgKiBxdWV1aW5nIG1vcmUuIEluIGVpdGhlciBjYXNlIHdlIHdpbGwg
Zm9yY2UgYQorCQkJICogbGl0ZS1yZXN0b3JlIHByZWVtcHRpb24gZXZlbnQsIGJ1dCBpZiB3ZSB3
YWl0CisJCQkgKiB3ZSBob3BlZnVsbHkgY29hbGVzY2Ugc2V2ZXJhbCB1cGRhdGVzIGludG8gYSBz
aW5nbGUKKwkJCSAqIHN1Ym1pc3Npb24uCisJCQkgKi8KKwkJCWlmICghbGlzdF9pc19sYXN0KCZs
YXN0LT5zY2hlZC5saW5rLAorCQkJCQkgICZlbmdpbmUtPmFjdGl2ZS5yZXF1ZXN0cykpCisJCQkJ
cmV0dXJuOworCisJCQkvKgorCQkJICogV2FJZGxlTGl0ZVJlc3RvcmU6YmR3LHNrbAorCQkJICog
QXBwbHkgdGhlIHdhIE5PT1BzIHRvIHByZXZlbnQKKwkJCSAqIHJpbmc6SEVBRCA9PSBycTpUQUlM
IGFzIHdlIHJlc3VibWl0IHRoZQorCQkJICogcmVxdWVzdC4gU2VlIGdlbjhfZW1pdF9maW5pX2Jy
ZWFkY3J1bWIoKSBmb3IKKwkJCSAqIHdoZXJlIHdlIHByZXBhcmUgdGhlIHBhZGRpbmcgYWZ0ZXIg
dGhlCisJCQkgKiBlbmQgb2YgdGhlIHJlcXVlc3QuCisJCQkgKi8KKwkJCWxhc3QtPnRhaWwgPSBs
YXN0LT53YV90YWlsOworCQl9CiAJfQogCiAJd2hpbGUgKHJiKSB7IC8qIFhYWCB2aXJ0dWFsIGlz
IGFsd2F5cyB0YWtpbmcgcHJlY2VkZW5jZSAqLwpAQCAtOTU1LDkgKzk1OSwyNCBAQCBzdGF0aWMg
dm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJ
CQkJY29udGludWU7CiAJCQl9CiAKKwkJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkg
eworCQkJCXZlLT5yZXF1ZXN0ID0gTlVMTDsKKwkJCQl2ZS0+YmFzZS5leGVjbGlzdHMucXVldWVf
cHJpb3JpdHlfaGludCA9IElOVF9NSU47CisJCQkJcmJfZXJhc2VfY2FjaGVkKHJiLCAmZXhlY2xp
c3RzLT52aXJ0dWFsKTsKKwkJCQlSQl9DTEVBUl9OT0RFKHJiKTsKKworCQkJCXJxLT5lbmdpbmUg
PSBlbmdpbmU7CisJCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKKworCQkJCXNwaW5fdW5s
b2NrKCZ2ZS0+YmFzZS5hY3RpdmUubG9jayk7CisKKwkJCQlyYiA9IHJiX2ZpcnN0X2NhY2hlZCgm
ZXhlY2xpc3RzLT52aXJ0dWFsKTsKKwkJCQljb250aW51ZTsKKwkJCX0KKwogCQkJaWYgKGxhc3Qg
JiYgIWNhbl9tZXJnZV9ycShsYXN0LCBycSkpIHsKIAkJCQlzcGluX3VubG9jaygmdmUtPmJhc2Uu
YWN0aXZlLmxvY2spOwotCQkJCXJldHVybjsgLyogbGVhdmUgdGhpcyBycSBmb3IgYW5vdGhlciBl
bmdpbmUgKi8KKwkJCQlyZXR1cm47IC8qIGxlYXZlIHRoaXMgZm9yIGFub3RoZXIgKi8KIAkJCX0K
IAogCQkJR0VNX1RSQUNFKCIlczogdmlydHVhbCBycT0lbGx4OiVsbGQlcywgbmV3IGVuZ2luZT8g
JXNcbiIsCkBAIC0xMDA2LDkgKzEwMjUsMTAgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVl
dWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJfQogCiAJCQlfX2k5MTVfcmVx
dWVzdF9zdWJtaXQocnEpOwotCQkJdHJhY2VfaTkxNV9yZXF1ZXN0X2luKHJxLCBwb3J0X2luZGV4
KHBvcnQsIGV4ZWNsaXN0cykpOwotCQkJc3VibWl0ID0gdHJ1ZTsKLQkJCWxhc3QgPSBycTsKKwkJ
CWlmICghaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpIHsKKwkJCQlzdWJtaXQgPSB0cnVlOwor
CQkJCWxhc3QgPSBycTsKKwkJCX0KIAkJfQogCiAJCXNwaW5fdW5sb2NrKCZ2ZS0+YmFzZS5hY3Rp
dmUubG9jayk7CkBAIC0xMDIxLDYgKzEwNDEsOSBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVx
dWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWludCBpOwogCiAJCXByaW9s
aXN0X2Zvcl9lYWNoX3JlcXVlc3RfY29uc3VtZShycSwgcm4sIHAsIGkpIHsKKwkJCWlmIChpOTE1
X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKKwkJCQlnb3RvIHNraXA7CisKIAkJCS8qCiAJCQkgKiBD
YW4gd2UgY29tYmluZSB0aGlzIHJlcXVlc3Qgd2l0aCB0aGUgY3VycmVudCBwb3J0PwogCQkJICog
SXQgaGFzIHRvIGJlIHRoZSBzYW1lIGNvbnRleHQvcmluZ2J1ZmZlciBhbmQgbm90CkBAIC0xMDYw
LDE5ICsxMDgzLDE0IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQkgICAgY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24o
cnEtPmh3X2NvbnRleHQpKQogCQkJCQlnb3RvIGRvbmU7CiAKLQotCQkJCWlmIChzdWJtaXQpCi0J
CQkJCXBvcnRfYXNzaWduKHBvcnQsIGxhc3QpOworCQkJCSpwb3J0ID0gZXhlY2xpc3RzX3NjaGVk
dWxlX2luKGxhc3QsIHBvcnQgLSBleGVjbGlzdHMtPnBlbmRpbmcpOwogCQkJCXBvcnQrKzsKLQot
CQkJCUdFTV9CVUdfT04ocG9ydF9pc3NldChwb3J0KSk7CiAJCQl9CiAKLQkJCV9faTkxNV9yZXF1
ZXN0X3N1Ym1pdChycSk7Ci0JCQl0cmFjZV9pOTE1X3JlcXVlc3RfaW4ocnEsIHBvcnRfaW5kZXgo
cG9ydCwgZXhlY2xpc3RzKSk7Ci0KIAkJCWxhc3QgPSBycTsKIAkJCXN1Ym1pdCA9IHRydWU7Citz
a2lwOgorCQkJX19pOTE1X3JlcXVlc3Rfc3VibWl0KHJxKTsKIAkJfQogCiAJCXJiX2VyYXNlX2Nh
Y2hlZCgmcC0+bm9kZSwgJmV4ZWNsaXN0cy0+cXVldWUpOwpAQCAtMTA5Nyw1NCArMTExNSwzMCBA
QCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiAJICogaW50ZXJydXB0IGZvciBzZWNvbmRhcnkgcG9ydHMpLgogCSAqLwogCWV4ZWNs
aXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9IHF1ZXVlX3ByaW8oZXhlY2xpc3RzKTsKKwlHRU1f
VFJBQ0UoIiVzOiBxdWV1ZV9wcmlvcml0eV9oaW50OiVkLCBzdWJtaXQ6JXNcbiIsCisJCSAgZW5n
aW5lLT5uYW1lLCBleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQsCisJCSAgeWVzbm8oc3Vi
bWl0KSk7CiAKIAlpZiAoc3VibWl0KSB7Ci0JCXBvcnRfYXNzaWduKHBvcnQsIGxhc3QpOworCQkq
cG9ydCA9IGV4ZWNsaXN0c19zY2hlZHVsZV9pbihsYXN0LCBwb3J0IC0gZXhlY2xpc3RzLT5wZW5k
aW5nKTsKKwkJbWVtc2V0KHBvcnQgKyAxLCAwLCAobGFzdF9wb3J0IC0gcG9ydCkgKiBzaXplb2Yo
KnBvcnQpKTsKIAkJZXhlY2xpc3RzX3N1Ym1pdF9wb3J0cyhlbmdpbmUpOwogCX0KLQotCS8qIFdl
IG11c3QgYWx3YXlzIGtlZXAgdGhlIGJlYXN0IGZlZCBpZiB3ZSBoYXZlIHdvcmsgcGlsZWQgdXAg
Ki8KLQlHRU1fQlVHX09OKHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT5xdWV1ZSkgJiYKLQkJ
ICAgIXBvcnRfaXNzZXQoZXhlY2xpc3RzLT5wb3J0KSk7Ci0KLQkvKiBSZS1ldmFsdWF0ZSB0aGUg
ZXhlY3V0aW5nIGNvbnRleHQgc2V0dXAgYWZ0ZXIgZWFjaCBwcmVlbXB0aXZlIGtpY2sgKi8KLQlp
ZiAobGFzdCkKLQkJZXhlY2xpc3RzX3VzZXJfYmVnaW4oZXhlY2xpc3RzLCBleGVjbGlzdHMtPnBv
cnQpOwotCi0JLyogSWYgdGhlIGVuZ2luZSBpcyBub3cgaWRsZSwgc28gc2hvdWxkIGJlIHRoZSBm
bGFnOyBhbmQgdmljZSB2ZXJzYS4gKi8KLQlHRU1fQlVHX09OKGV4ZWNsaXN0c19pc19hY3RpdmUo
JmVuZ2luZS0+ZXhlY2xpc3RzLAotCQkJCSAgICAgICBFWEVDTElTVFNfQUNUSVZFX1VTRVIpID09
Ci0JCSAgICFwb3J0X2lzc2V0KGVuZ2luZS0+ZXhlY2xpc3RzLnBvcnQpKTsKIH0KIAogdm9pZAog
ZXhlY2xpc3RzX2NhbmNlbF9wb3J0X3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xp
c3RzICogY29uc3QgZXhlY2xpc3RzKQogewotCXN0cnVjdCBleGVjbGlzdF9wb3J0ICpwb3J0ID0g
ZXhlY2xpc3RzLT5wb3J0OwotCXVuc2lnbmVkIGludCBudW1fcG9ydHMgPSBleGVjbGlzdHNfbnVt
X3BvcnRzKGV4ZWNsaXN0cyk7Ci0KLQl3aGlsZSAobnVtX3BvcnRzLS0gJiYgcG9ydF9pc3NldChw
b3J0KSkgewotCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IHBvcnRfcmVxdWVzdChwb3J0KTsK
LQotCQlHRU1fVFJBQ0UoIiVzOnBvcnQldSBmZW5jZSAlbGx4OiVsbGQsIChjdXJyZW50ICVkKVxu
IiwKLQkJCSAgcnEtPmVuZ2luZS0+bmFtZSwKLQkJCSAgKHVuc2lnbmVkIGludCkocG9ydCAtIGV4
ZWNsaXN0cy0+cG9ydCksCi0JCQkgIHJxLT5mZW5jZS5jb250ZXh0LCBycS0+ZmVuY2Uuc2Vxbm8s
Ci0JCQkgIGh3c3Bfc2Vxbm8ocnEpKTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKnBv
cnQsICpycTsKIAotCQlHRU1fQlVHX09OKCFleGVjbGlzdHMtPmFjdGl2ZSk7Ci0JCWV4ZWNsaXN0
c19jb250ZXh0X3NjaGVkdWxlX291dChycSwKLQkJCQkJICAgICAgIGk5MTVfcmVxdWVzdF9jb21w
bGV0ZWQocnEpID8KLQkJCQkJICAgICAgIElOVEVMX0NPTlRFWFRfU0NIRURVTEVfT1VUIDoKLQkJ
CQkJICAgICAgIElOVEVMX0NPTlRFWFRfU0NIRURVTEVfUFJFRU1QVEVEKTsKKwlmb3IgKHBvcnQg
PSBleGVjbGlzdHMtPnBlbmRpbmc7IChycSA9ICpwb3J0KTsgcG9ydCsrKQorCQlleGVjbGlzdHNf
c2NoZWR1bGVfb3V0KHJxKTsKKwltZW1zZXQoZXhlY2xpc3RzLT5wZW5kaW5nLCAwLCBzaXplb2Yo
ZXhlY2xpc3RzLT5wZW5kaW5nKSk7CiAKLQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7Ci0KLQkJbWVt
c2V0KHBvcnQsIDAsIHNpemVvZigqcG9ydCkpOwotCQlwb3J0Kys7Ci0JfQotCi0JZXhlY2xpc3Rz
X2NsZWFyX2FsbF9hY3RpdmUoZXhlY2xpc3RzKTsKKwlmb3IgKHBvcnQgPSBleGVjbGlzdHMtPmFj
dGl2ZTsgKHJxID0gKnBvcnQpOyBwb3J0KyspCisJCWV4ZWNsaXN0c19zY2hlZHVsZV9vdXQocnEp
OworCWV4ZWNsaXN0cy0+YWN0aXZlID0KKwkJbWVtc2V0KGV4ZWNsaXN0cy0+aW5mbGlnaHQsIDAs
IHNpemVvZihleGVjbGlzdHMtPmluZmxpZ2h0KSk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZApA
QCAtMTE2Myw3ICsxMTU3LDYgQEAgcmVzZXRfaW5fcHJvZ3Jlc3MoY29uc3Qgc3RydWN0IGludGVs
X2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIHN0YXRpYyB2b2lkIHByb2Nlc3NfY3NiKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQlzdHJ1Y3Qg
ZXhlY2xpc3RfcG9ydCAqcG9ydCA9IGV4ZWNsaXN0cy0+cG9ydDsKIAljb25zdCB1MzIgKiBjb25z
dCBidWYgPSBleGVjbGlzdHMtPmNzYl9zdGF0dXM7CiAJY29uc3QgdTggbnVtX2VudHJpZXMgPSBl
eGVjbGlzdHMtPmNzYl9zaXplOwogCXU4IGhlYWQsIHRhaWw7CkBAIC0xMTk4LDkgKzExOTEsNyBA
QCBzdGF0aWMgdm9pZCBwcm9jZXNzX2NzYihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CiAJcm1iKCk7CiAKIAlkbyB7Ci0JCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCQl1bnNpZ25l
ZCBpbnQgc3RhdHVzOwotCQl1bnNpZ25lZCBpbnQgY291bnQ7CiAKIAkJaWYgKCsraGVhZCA9PSBu
dW1fZW50cmllcykKIAkJCWhlYWQgPSAwOwpAQCAtMTIyMyw2OCArMTIxNCwzNyBAQCBzdGF0aWMg
dm9pZCBwcm9jZXNzX2NzYihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCSAqIHN0
YXR1cyBub3RpZmllci4KIAkJICovCiAKLQkJR0VNX1RSQUNFKCIlcyBjc2JbJWRdOiBzdGF0dXM9
MHglMDh4OjB4JTA4eCwgYWN0aXZlPTB4JXhcbiIsCisJCUdFTV9UUkFDRSgiJXMgY3NiWyVkXTog
c3RhdHVzPTB4JTA4eDoweCUwOHhcbiIsCiAJCQkgIGVuZ2luZS0+bmFtZSwgaGVhZCwKLQkJCSAg
YnVmWzIgKiBoZWFkICsgMF0sIGJ1ZlsyICogaGVhZCArIDFdLAotCQkJICBleGVjbGlzdHMtPmFj
dGl2ZSk7CisJCQkgIGJ1ZlsyICogaGVhZCArIDBdLCBidWZbMiAqIGhlYWQgKyAxXSk7CiAKIAkJ
c3RhdHVzID0gYnVmWzIgKiBoZWFkXTsKLQkJaWYgKHN0YXR1cyAmIChHRU44X0NUWF9TVEFUVVNf
SURMRV9BQ1RJVkUgfAotCQkJICAgICAgR0VOOF9DVFhfU1RBVFVTX1BSRUVNUFRFRCkpCi0JCQll
eGVjbGlzdHNfc2V0X2FjdGl2ZShleGVjbGlzdHMsCi0JCQkJCSAgICAgRVhFQ0xJU1RTX0FDVElW
RV9IV0FDSyk7Ci0JCWlmIChzdGF0dXMgJiBHRU44X0NUWF9TVEFUVVNfQUNUSVZFX0lETEUpCi0J
CQlleGVjbGlzdHNfY2xlYXJfYWN0aXZlKGV4ZWNsaXN0cywKLQkJCQkJICAgICAgIEVYRUNMSVNU
U19BQ1RJVkVfSFdBQ0spOwotCi0JCWlmICghKHN0YXR1cyAmIEdFTjhfQ1RYX1NUQVRVU19DT01Q
TEVURURfTUFTSykpCi0JCQljb250aW51ZTsKLQotCQkvKiBXZSBzaG91bGQgbmV2ZXIgZ2V0IGEg
Q09NUExFVEVEIHwgSURMRV9BQ1RJVkUhICovCi0JCUdFTV9CVUdfT04oc3RhdHVzICYgR0VOOF9D
VFhfU1RBVFVTX0lETEVfQUNUSVZFKTsKKwkJaWYgKHN0YXR1cyAmIEdFTjhfQ1RYX1NUQVRVU19J
RExFX0FDVElWRSkgeworcHJvbW90ZToKKwkJCUdFTV9CVUdfT04oIWFzc2VydF9wZW5kaW5nX3Zh
bGlkKGV4ZWNsaXN0cywgInByb21vdGUiKSk7CisJCQlleGVjbGlzdHMtPmFjdGl2ZSA9CisJCQkJ
bWVtY3B5KGV4ZWNsaXN0cy0+aW5mbGlnaHQsCisJCQkJICAgICAgIGV4ZWNsaXN0cy0+cGVuZGlu
ZywKKwkJCQkgICAgICAgZXhlY2xpc3RzX251bV9wb3J0cyhleGVjbGlzdHMpICoKKwkJCQkgICAg
ICAgc2l6ZW9mKCpleGVjbGlzdHMtPnBlbmRpbmcpKTsKKwkJCWV4ZWNsaXN0cy0+cGVuZGluZ1sw
XSA9IE5VTEw7CiAKLQkJaWYgKHN0YXR1cyAmIEdFTjhfQ1RYX1NUQVRVU19DT01QTEVURSAmJgot
CQkgICAgYnVmWzIqaGVhZCArIDFdID09IGV4ZWNsaXN0cy0+cHJlZW1wdF9jb21wbGV0ZV9zdGF0
dXMpIHsKLQkJCUdFTV9UUkFDRSgiJXMgcHJlZW1wdC1pZGxlXG4iLCBlbmdpbmUtPm5hbWUpOwot
CQkJY29tcGxldGVfcHJlZW1wdF9jb250ZXh0KGV4ZWNsaXN0cyk7Ci0JCQljb250aW51ZTsKLQkJ
fQorCQkJaWYgKCFpbmplY3RfcHJlZW1wdF9oYW5nKGV4ZWNsaXN0cykpCisJCQkJcmluZ19wYXVz
ZShlbmdpbmUpID0gMDsKKwkJfSBlbHNlIGlmIChzdGF0dXMgJiBHRU44X0NUWF9TVEFUVVNfUFJF
RU1QVEVEKSB7CisJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKnBvcnQgPSBleGVjbGlz
dHMtPmFjdGl2ZTsKIAotCQlpZiAoc3RhdHVzICYgR0VOOF9DVFhfU1RBVFVTX1BSRUVNUFRFRCAm
JgotCQkgICAgZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsCi0JCQkJCUVYRUNMSVNUU19B
Q1RJVkVfUFJFRU1QVCkpCi0JCQljb250aW51ZTsKKwkJCXRyYWNlX3BvcnRzKGV4ZWNsaXN0cywg
InByZWVtcHRlZCIsIGV4ZWNsaXN0cy0+YWN0aXZlKTsKIAotCQlHRU1fQlVHX09OKCFleGVjbGlz
dHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywKLQkJCQkJCUVYRUNMSVNUU19BQ1RJVkVfVVNFUikpOwor
CQkJd2hpbGUgKCpwb3J0KQorCQkJCWV4ZWNsaXN0c19zY2hlZHVsZV9vdXQoKnBvcnQrKyk7CiAK
LQkJcnEgPSBwb3J0X3VucGFjayhwb3J0LCAmY291bnQpOwotCQlHRU1fVFJBQ0UoIiVzIG91dFsw
XTogY3R4PSVkLiVkLCBmZW5jZSAlbGx4OiVsbGQgKGN1cnJlbnQgJWQpLCBwcmlvPSVkXG4iLAot
CQkJICBlbmdpbmUtPm5hbWUsCi0JCQkgIHBvcnQtPmNvbnRleHRfaWQsIGNvdW50LAotCQkJICBy
cSA/IHJxLT5mZW5jZS5jb250ZXh0IDogMCwKLQkJCSAgcnEgPyBycS0+ZmVuY2Uuc2Vxbm8gOiAw
LAotCQkJICBycSA/IGh3c3Bfc2Vxbm8ocnEpIDogMCwKLQkJCSAgcnEgPyBycV9wcmlvKHJxKSA6
IDApOworCQkJZ290byBwcm9tb3RlOworCQl9IGVsc2UgaWYgKCpleGVjbGlzdHMtPmFjdGl2ZSkg
eworCQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEgPSAqZXhlY2xpc3RzLT5hY3RpdmUrKzsKIAot
CQkvKiBDaGVjayB0aGUgY29udGV4dC9kZXNjIGlkIGZvciB0aGlzIGV2ZW50IG1hdGNoZXMgKi8K
LQkJR0VNX0RFQlVHX0JVR19PTihidWZbMiAqIGhlYWQgKyAxXSAhPSBwb3J0LT5jb250ZXh0X2lk
KTsKLQotCQlHRU1fQlVHX09OKGNvdW50ID09IDApOwotCQlpZiAoLS1jb3VudCA9PSAwKSB7Ci0J
CQkvKgotCQkJICogT24gdGhlIGZpbmFsIGV2ZW50IGNvcnJlc3BvbmRpbmcgdG8gdGhlCi0JCQkg
KiBzdWJtaXNzaW9uIG9mIHRoaXMgY29udGV4dCwgd2UgZXhwZWN0IGVpdGhlcgotCQkJICogYW4g
ZWxlbWVudC1zd2l0Y2ggZXZlbnQgb3IgYSBjb21wbGV0aW9uCi0JCQkgKiBldmVudCAoYW5kIG9u
IGNvbXBsZXRpb24sIHRoZSBhY3RpdmUtaWRsZQotCQkJICogbWFya2VyKS4gTm8gbW9yZSBwcmVl
bXB0aW9ucywgbGl0ZS1yZXN0b3JlCi0JCQkgKiBvciBvdGhlcndpc2UuCi0JCQkgKi8KLQkJCUdF
TV9CVUdfT04oc3RhdHVzICYgR0VOOF9DVFhfU1RBVFVTX1BSRUVNUFRFRCk7Ci0JCQlHRU1fQlVH
X09OKHBvcnRfaXNzZXQoJnBvcnRbMV0pICYmCi0JCQkJICAgIShzdGF0dXMgJiBHRU44X0NUWF9T
VEFUVVNfRUxFTUVOVF9TV0lUQ0gpKTsKLQkJCUdFTV9CVUdfT04oIXBvcnRfaXNzZXQoJnBvcnRb
MV0pICYmCi0JCQkJICAgIShzdGF0dXMgJiBHRU44X0NUWF9TVEFUVVNfQUNUSVZFX0lETEUpKTsK
KwkJCXRyYWNlX3BvcnRzKGV4ZWNsaXN0cywgImNvbXBsZXRlZCIsCisJCQkJICAgIGV4ZWNsaXN0
cy0+YWN0aXZlIC0gMSk7CiAKIAkJCS8qCiAJCQkgKiBXZSByZWx5IG9uIHRoZSBoYXJkd2FyZSBi
ZWluZyBzdHJvbmdseQpAQCAtMTI5MywyMSArMTI1MywxMCBAQCBzdGF0aWMgdm9pZCBwcm9jZXNz
X2NzYihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkgKiB1c2VyIGludGVycnVw
dCBhbmQgQ1NCIGlzIHByb2Nlc3NlZC4KIAkJCSAqLwogCQkJR0VNX0JVR19PTighaTkxNV9yZXF1
ZXN0X2NvbXBsZXRlZChycSkpOworCQkJZXhlY2xpc3RzX3NjaGVkdWxlX291dChycSk7CiAKLQkJ
CWV4ZWNsaXN0c19jb250ZXh0X3NjaGVkdWxlX291dChycSwKLQkJCQkJCSAgICAgICBJTlRFTF9D
T05URVhUX1NDSEVEVUxFX09VVCk7Ci0JCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKLQotCQkJR0VN
X1RSQUNFKCIlcyBjb21wbGV0ZWQgY3R4PSVkXG4iLAotCQkJCSAgZW5naW5lLT5uYW1lLCBwb3J0
LT5jb250ZXh0X2lkKTsKLQotCQkJcG9ydCA9IGV4ZWNsaXN0c19wb3J0X2NvbXBsZXRlKGV4ZWNs
aXN0cywgcG9ydCk7Ci0JCQlpZiAocG9ydF9pc3NldChwb3J0KSkKLQkJCQlleGVjbGlzdHNfdXNl
cl9iZWdpbihleGVjbGlzdHMsIHBvcnQpOwotCQkJZWxzZQotCQkJCWV4ZWNsaXN0c191c2VyX2Vu
ZChleGVjbGlzdHMpOwotCQl9IGVsc2UgewotCQkJcG9ydF9zZXQocG9ydCwgcG9ydF9wYWNrKHJx
LCBjb3VudCkpOworCQkJR0VNX0JVR19PTihleGVjbGlzdHMtPmFjdGl2ZSAtIGV4ZWNsaXN0cy0+
aW5mbGlnaHQgPgorCQkJCSAgIGV4ZWNsaXN0c19udW1fcG9ydHMoZXhlY2xpc3RzKSk7CiAJCX0K
IAl9IHdoaWxlIChoZWFkICE9IHRhaWwpOwogCkBAIC0xMzMyLDcgKzEyODEsNyBAQCBzdGF0aWMg
dm9pZCBfX2V4ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqY29uc3QgZW5naW5lKQogCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJmVuZ2luZS0+YWN0aXZlLmxv
Y2spOwogCiAJcHJvY2Vzc19jc2IoZW5naW5lKTsKLQlpZiAoIWV4ZWNsaXN0c19pc19hY3RpdmUo
JmVuZ2luZS0+ZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1BSRUVNUFQpKQorCWlmICghZW5n
aW5lLT5leGVjbGlzdHMucGVuZGluZ1swXSkKIAkJZXhlY2xpc3RzX2RlcXVldWUoZW5naW5lKTsK
IH0KIApAQCAtMTM0NSwxMSArMTI5NCw2IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19zdWJtaXNz
aW9uX3Rhc2tsZXQodW5zaWduZWQgbG9uZyBkYXRhKQogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KiBjb25zdCBlbmdpbmUgPSAoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqKWRhdGE7CiAJdW5zaWdu
ZWQgbG9uZyBmbGFnczsKIAotCUdFTV9UUkFDRSgiJXMgYXdha2U/PSVkLCBhY3RpdmU9JXhcbiIs
Ci0JCSAgZW5naW5lLT5uYW1lLAotCQkgICEhaW50ZWxfd2FrZXJlZl9hY3RpdmUoJmVuZ2luZS0+
d2FrZXJlZiksCi0JCSAgZW5naW5lLT5leGVjbGlzdHMuYWN0aXZlKTsKLQogCXNwaW5fbG9ja19p
cnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAJX19leGVjbGlzdHNfc3VibWlz
c2lvbl90YXNrbGV0KGVuZ2luZSk7CiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5h
Y3RpdmUubG9jaywgZmxhZ3MpOwpAQCAtMTM3NiwxMiArMTMyMCwxNiBAQCBzdGF0aWMgdm9pZCBf
X3N1Ym1pdF9xdWV1ZV9pbW0oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQl0YXNr
bGV0X2hpX3NjaGVkdWxlKCZleGVjbGlzdHMtPnRhc2tsZXQpOwogfQogCi1zdGF0aWMgdm9pZCBz
dWJtaXRfcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBpbnQgcHJpbykKK3N0
YXRpYyB2b2lkIHN1Ym1pdF9xdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJ
CQkgY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7Ci0JaWYgKHByaW8gPiBlbmdpbmUt
PmV4ZWNsaXN0cy5xdWV1ZV9wcmlvcml0eV9oaW50KSB7Ci0JCWVuZ2luZS0+ZXhlY2xpc3RzLnF1
ZXVlX3ByaW9yaXR5X2hpbnQgPSBwcmlvOwotCQlfX3N1Ym1pdF9xdWV1ZV9pbW0oZW5naW5lKTsK
LQl9CisJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cyA9ICZlbmdpbmUt
PmV4ZWNsaXN0czsKKworCWlmIChycV9wcmlvKHJxKSA8PSBleGVjbGlzdHMtPnF1ZXVlX3ByaW9y
aXR5X2hpbnQpCisJCXJldHVybjsKKworCWV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9
IHJxX3ByaW8ocnEpOworCV9fc3VibWl0X3F1ZXVlX2ltbShlbmdpbmUpOwogfQogCiBzdGF0aWMg
dm9pZCBleGVjbGlzdHNfc3VibWl0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVz
dCkKQEAgLTEzOTcsNyArMTM0NSw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19zdWJtaXRfcmVx
dWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCUdFTV9CVUdfT04oUkJfRU1QVFlf
Uk9PVCgmZW5naW5lLT5leGVjbGlzdHMucXVldWUucmJfcm9vdCkpOwogCUdFTV9CVUdfT04obGlz
dF9lbXB0eSgmcmVxdWVzdC0+c2NoZWQubGluaykpOwogCi0Jc3VibWl0X3F1ZXVlKGVuZ2luZSwg
cnFfcHJpbyhyZXF1ZXN0KSk7CisJc3VibWl0X3F1ZXVlKGVuZ2luZSwgcmVxdWVzdCk7CiAKIAlz
cGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CkBA
IC0yMDQ4LDI3ICsxOTk2LDEzIEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19yZXNldF9wcmVwYXJl
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlzcGluX3VubG9ja19pcnFyZXN0b3Jl
KCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyBib29sIGxyY19yZWdz
X29rKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQotewotCWNvbnN0IHN0cnVjdCBpbnRl
bF9yaW5nICpyaW5nID0gcnEtPnJpbmc7Ci0JY29uc3QgdTMyICpyZWdzID0gcnEtPmh3X2NvbnRl
eHQtPmxyY19yZWdfc3RhdGU7Ci0KLQkvKiBRdWljayBzcG90IGNoZWNrIGZvciB0aGUgY29tbW9u
IHNpZ25zIG9mIGNvbnRleHQgY29ycnVwdGlvbiAqLwotCi0JaWYgKHJlZ3NbQ1RYX1JJTkdfQlVG
RkVSX0NPTlRST0wgKyAxXSAhPQotCSAgICAoUklOR19DVExfU0laRShyaW5nLT5zaXplKSB8IFJJ
TkdfVkFMSUQpKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQlpZiAocmVnc1tDVFhfUklOR19CVUZGRVJf
U1RBUlQgKyAxXSAhPSBpOTE1X2dndHRfb2Zmc2V0KHJpbmctPnZtYSkpCi0JCXJldHVybiBmYWxz
ZTsKLQotCXJldHVybiB0cnVlOwotfQotCi1zdGF0aWMgdm9pZCByZXNldF9jc2JfcG9pbnRlcnMo
c3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKK3N0YXRpYyB2b2lkIHJl
c2V0X2NzYl9wb2ludGVycyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CisJc3Ry
dWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5l
eGVjbGlzdHM7CiAJY29uc3QgdW5zaWduZWQgaW50IHJlc2V0X3ZhbHVlID0gZXhlY2xpc3RzLT5j
c2Jfc2l6ZSAtIDE7CiAKKwlyaW5nX3BhdXNlKGVuZ2luZSkgPSAwOworCiAJLyoKIAkgKiBBZnRl
ciBhIHJlc2V0LCB0aGUgSFcgc3RhcnRzIHdyaXRpbmcgaW50byBDU0IgZW50cnkgWzBdLiBXZQog
CSAqIHRoZXJlZm9yZSBoYXZlIHRvIHNldCBvdXIgSEVBRCBwb2ludGVyIGJhY2sgb25lIGVudHJ5
IHNvIHRoYXQKQEAgLTIxMTUsMTggKzIwNDksMjEgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNf
cmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJcHJv
Y2Vzc19jc2IoZW5naW5lKTsgLyogZHJhaW4gcHJlZW1wdGlvbiBldmVudHMgKi8KIAogCS8qIEZv
bGxvd2luZyB0aGUgcmVzZXQsIHdlIG5lZWQgdG8gcmVsb2FkIHRoZSBDU0IgcmVhZC93cml0ZSBw
b2ludGVycyAqLwotCXJlc2V0X2NzYl9wb2ludGVycygmZW5naW5lLT5leGVjbGlzdHMpOworCXJl
c2V0X2NzYl9wb2ludGVycyhlbmdpbmUpOwogCiAJLyoKIAkgKiBTYXZlIHRoZSBjdXJyZW50bHkg
ZXhlY3V0aW5nIGNvbnRleHQsIGV2ZW4gaWYgd2UgY29tcGxldGVkCiAJICogaXRzIHJlcXVlc3Qs
IGl0IHdhcyBzdGlsbCBydW5uaW5nIGF0IHRoZSB0aW1lIG9mIHRoZQogCSAqIHJlc2V0IGFuZCB3
aWxsIGhhdmUgYmVlbiBjbG9iYmVyZWQuCiAJICovCi0JaWYgKCFwb3J0X2lzc2V0KGV4ZWNsaXN0
cy0+cG9ydCkpCi0JCWdvdG8gb3V0X2NsZWFyOworCXJxID0gZXhlY2xpc3RzX2FjdGl2ZShleGVj
bGlzdHMpOworCWlmICghcnEpCisJCXJldHVybjsKIAotCXJxID0gcG9ydF9yZXF1ZXN0KGV4ZWNs
aXN0cy0+cG9ydCk7CiAJY2UgPSBycS0+aHdfY29udGV4dDsKKwlHRU1fQlVHX09OKGk5MTVfYWN0
aXZlX2lzX2lkbGUoJmNlLT5hY3RpdmUpKTsKKwlHRU1fQlVHX09OKCFpOTE1X3ZtYV9pc19waW5u
ZWQoY2UtPnN0YXRlKSk7CisJcnEgPSBhY3RpdmVfcmVxdWVzdChycSk7CiAKIAkvKgogCSAqIENh
dGNoIHVwIHdpdGggYW55IG1pc3NlZCBjb250ZXh0LXN3aXRjaCBpbnRlcnJ1cHRzLgpAQCAtMjEz
OSw5ICsyMDc2LDEyIEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCSAqLwogCWV4ZWNsaXN0c19jYW5j
ZWxfcG9ydF9yZXF1ZXN0cyhleGVjbGlzdHMpOwogCi0JcnEgPSBhY3RpdmVfcmVxdWVzdChycSk7
Ci0JaWYgKCFycSkKKwlpZiAoIXJxKSB7CisJCWNlLT5yaW5nLT5oZWFkID0gY2UtPnJpbmctPnRh
aWw7CiAJCWdvdG8gb3V0X3JlcGxheTsKKwl9CisKKwljZS0+cmluZy0+aGVhZCA9IGludGVsX3Jp
bmdfd3JhcChjZS0+cmluZywgcnEtPmhlYWQpOwogCiAJLyoKIAkgKiBJZiB0aGlzIHJlcXVlc3Qg
aGFzbid0IHN0YXJ0ZWQgeWV0LCBlLmcuIGl0IGlzIHdhaXRpbmcgb24gYQpAQCAtMjE1NSw3ICsy
MDk1LDcgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJICogT3RoZXJ3aXNlLCBpZiB3ZSBoYXZlIG5v
dCBzdGFydGVkIHlldCwgdGhlIHJlcXVlc3Qgc2hvdWxkIHJlcGxheQogCSAqIHBlcmZlY3RseSBh
bmQgd2UgZG8gbm90IG5lZWQgdG8gZmxhZyB0aGUgcmVzdWx0IGFzIGJlaW5nIGVycm9uZW91cy4K
IAkgKi8KLQlpZiAoIWk5MTVfcmVxdWVzdF9zdGFydGVkKHJxKSAmJiBscmNfcmVnc19vayhycSkp
CisJaWYgKCFpOTE1X3JlcXVlc3Rfc3RhcnRlZChycSkpCiAJCWdvdG8gb3V0X3JlcGxheTsKIAog
CS8qCkBAIC0yMTcwLDcgKzIxMTAsNyBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAkgKiBpbWFnZSBi
YWNrIHRvIHRoZSBleHBlY3RlZCB2YWx1ZXMgdG8gc2tpcCBvdmVyIHRoZSBndWlsdHkgcmVxdWVz
dC4KIAkgKi8KIAlpOTE1X3Jlc2V0X3JlcXVlc3QocnEsIHN0YWxsZWQpOwotCWlmICghc3RhbGxl
ZCAmJiBscmNfcmVnc19vayhycSkpCisJaWYgKCFzdGFsbGVkKQogCQlnb3RvIG91dF9yZXBsYXk7
CiAKIAkvKgpAQCAtMjE5MCwxNyArMjEzMCwxMyBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19y
ZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAlleGVj
bGlzdHNfaW5pdF9yZWdfc3RhdGUocmVncywgY2UsIGVuZ2luZSwgY2UtPnJpbmcpOwogCiBvdXRf
cmVwbGF5OgotCS8qIFJlcnVuIHRoZSByZXF1ZXN0OyBpdHMgcGF5bG9hZCBoYXMgYmVlbiBuZXV0
ZXJlZCAoaWYgZ3VpbHR5KS4gKi8KLQljZS0+cmluZy0+aGVhZCA9Ci0JCXJxID8gaW50ZWxfcmlu
Z193cmFwKGNlLT5yaW5nLCBycS0+aGVhZCkgOiBjZS0+cmluZy0+dGFpbDsKKwlHRU1fVFJBQ0Uo
IiVzIHJlcGxheSB7aGVhZDolMDR4LCB0YWlsOiUwNHhcbiIsCisJCSAgZW5naW5lLT5uYW1lLCBj
ZS0+cmluZy0+aGVhZCwgY2UtPnJpbmctPnRhaWwpOwogCWludGVsX3JpbmdfdXBkYXRlX3NwYWNl
KGNlLT5yaW5nKTsKIAlfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0YXRlKGNlLCBlbmdpbmUpOwog
CiAJLyogUHVzaCBiYWNrIGFueSBpbmNvbXBsZXRlIHJlcXVlc3RzIGZvciByZXBsYXkgYWZ0ZXIg
dGhlIHJlc2V0LiAqLwogCV9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoZW5naW5lKTsKLQot
b3V0X2NsZWFyOgotCWV4ZWNsaXN0c19jbGVhcl9hbGxfYWN0aXZlKGV4ZWNsaXN0cyk7CiB9CiAK
IHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUsIGJvb2wgc3RhbGxlZCkKQEAgLTIyOTYsNyArMjIzMiw2IEBAIHN0YXRpYyB2b2lkIGV4ZWNs
aXN0c19jYW5jZWxfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJ
ZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50ID0gSU5UX01JTjsKIAlleGVjbGlzdHMtPnF1
ZXVlID0gUkJfUk9PVF9DQUNIRUQ7Ci0JR0VNX0JVR19PTihwb3J0X2lzc2V0KGV4ZWNsaXN0cy0+
cG9ydCkpOwogCiAJR0VNX0JVR19PTihfX3Rhc2tsZXRfaXNfZW5hYmxlZCgmZXhlY2xpc3RzLT50
YXNrbGV0KSk7CiAJZXhlY2xpc3RzLT50YXNrbGV0LmZ1bmMgPSBub3Bfc3VibWlzc2lvbl90YXNr
bGV0OwpAQCAtMjUxNCwxNSArMjQ0OSwyOSBAQCBzdGF0aWMgdTMyICpnZW44X2VtaXRfd2FfdGFp
bChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNzKQogCXJldHVybiBjczsKIH0K
IAorc3RhdGljIHUzMiAqZW1pdF9wcmVlbXB0X2J1c3l3YWl0KHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJlcXVlc3QsIHUzMiAqY3MpCit7CisJKmNzKysgPSBNSV9TRU1BUEhPUkVfV0FJVCB8CisJCU1J
X1NFTUFQSE9SRV9HTE9CQUxfR1RUIHwKKwkJTUlfU0VNQVBIT1JFX1BPTEwgfAorCQlNSV9TRU1B
UEhPUkVfU0FEX0VRX1NERDsKKwkqY3MrKyA9IDA7CisJKmNzKysgPSBpbnRlbF9od3NfcHJlZW1w
dF9hZGRyZXNzKHJlcXVlc3QtPmVuZ2luZSk7CisJKmNzKysgPSAwOworCisJcmV0dXJuIGNzOwor
fQorCiBzdGF0aWMgdTMyICpnZW44X2VtaXRfZmluaV9icmVhZGNydW1iKHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJlcXVlc3QsIHUzMiAqY3MpCiB7CiAJY3MgPSBnZW44X2VtaXRfZ2d0dF93cml0ZShj
cywKIAkJCQkgIHJlcXVlc3QtPmZlbmNlLnNlcW5vLAogCQkJCSAgcmVxdWVzdC0+dGltZWxpbmUt
Pmh3c3Bfb2Zmc2V0LAogCQkJCSAgMCk7Ci0KIAkqY3MrKyA9IE1JX1VTRVJfSU5URVJSVVBUOwor
CiAJKmNzKysgPSBNSV9BUkJfT05fT0ZGIHwgTUlfQVJCX0VOQUJMRTsKKwljcyA9IGVtaXRfcHJl
ZW1wdF9idXN5d2FpdChyZXF1ZXN0LCBjcyk7CiAKIAlyZXF1ZXN0LT50YWlsID0gaW50ZWxfcmlu
Z19vZmZzZXQocmVxdWVzdCwgY3MpOwogCWFzc2VydF9yaW5nX3RhaWxfdmFsaWQocmVxdWVzdC0+
cmluZywgcmVxdWVzdC0+dGFpbCk7CkBAIC0yNTQzLDkgKzI0OTIsMTAgQEAgc3RhdGljIHUzMiAq
Z2VuOF9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9yY3Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVz
dCwgdTMyICpjcykKIAkJCQkgICAgUElQRV9DT05UUk9MX0ZMVVNIX0VOQUJMRSB8CiAJCQkJICAg
IFBJUEVfQ09OVFJPTF9DU19TVEFMTCwKIAkJCQkgICAgMCk7Ci0KIAkqY3MrKyA9IE1JX1VTRVJf
SU5URVJSVVBUOworCiAJKmNzKysgPSBNSV9BUkJfT05fT0ZGIHwgTUlfQVJCX0VOQUJMRTsKKwlj
cyA9IGVtaXRfcHJlZW1wdF9idXN5d2FpdChyZXF1ZXN0LCBjcyk7CiAKIAlyZXF1ZXN0LT50YWls
ID0gaW50ZWxfcmluZ19vZmZzZXQocmVxdWVzdCwgY3MpOwogCWFzc2VydF9yaW5nX3RhaWxfdmFs
aWQocmVxdWVzdC0+cmluZywgcmVxdWVzdC0+dGFpbCk7CkBAIC0yNTk0LDggKzI1NDQsNyBAQCB2
b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKIAllbmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX1NVUFBPUlRT
X1NUQVRTOwogCWlmICghaW50ZWxfdmdwdV9hY3RpdmUoZW5naW5lLT5pOTE1KSkKIAkJZW5naW5l
LT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfU0VNQVBIT1JFUzsKLQlpZiAoZW5naW5lLT5wcmVl
bXB0X2NvbnRleHQgJiYKLQkgICAgSEFTX0xPR0lDQUxfUklOR19QUkVFTVBUSU9OKGVuZ2luZS0+
aTkxNSkpCisJaWYgKEhBU19MT0dJQ0FMX1JJTkdfUFJFRU1QVElPTihlbmdpbmUtPmk5MTUpKQog
CQllbmdpbmUtPmZsYWdzIHw9IEk5MTVfRU5HSU5FX0hBU19QUkVFTVBUSU9OOwogfQogCkBAIC0y
NzE4LDExICsyNjY3LDYgQEAgaW50IGludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uX2luaXQoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklO
R19FTFNQKGJhc2UpKTsKIAl9CiAKLQlleGVjbGlzdHMtPnByZWVtcHRfY29tcGxldGVfc3RhdHVz
ID0gfjB1OwotCWlmIChlbmdpbmUtPnByZWVtcHRfY29udGV4dCkKLQkJZXhlY2xpc3RzLT5wcmVl
bXB0X2NvbXBsZXRlX3N0YXR1cyA9Ci0JCQl1cHBlcl8zMl9iaXRzKGVuZ2luZS0+cHJlZW1wdF9j
b250ZXh0LT5scmNfZGVzYyk7Ci0KIAlleGVjbGlzdHMtPmNzYl9zdGF0dXMgPQogCQkmZW5naW5l
LT5zdGF0dXNfcGFnZS5hZGRyW0k5MTVfSFdTX0NTQl9CVUYwX0lOREVYXTsKIApAQCAtMjczNCw3
ICsyNjc4LDcgQEAgaW50IGludGVsX2V4ZWNsaXN0c19zdWJtaXNzaW9uX2luaXQoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWVsc2UKIAkJZXhlY2xpc3RzLT5jc2Jfc2l6ZSA9IEdF
TjExX0NTQl9FTlRSSUVTOwogCi0JcmVzZXRfY3NiX3BvaW50ZXJzKGV4ZWNsaXN0cyk7CisJcmVz
ZXRfY3NiX3BvaW50ZXJzKGVuZ2luZSk7CiAKIAlyZXR1cm4gMDsKIH0KQEAgLTI5MTcsMTEgKzI4
NjEsNiBAQCBwb3B1bGF0ZV9scl9jb250ZXh0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAlp
ZiAoIWVuZ2luZS0+ZGVmYXVsdF9zdGF0ZSkKIAkJcmVnc1tDVFhfQ09OVEVYVF9DT05UUk9MICsg
MV0gfD0KIAkJCV9NQVNLRURfQklUX0VOQUJMRShDVFhfQ1RSTF9FTkdJTkVfQ1RYX1JFU1RPUkVf
SU5ISUJJVCk7Ci0JaWYgKGNlLT5nZW1fY29udGV4dCA9PSBlbmdpbmUtPmk5MTUtPnByZWVtcHRf
Y29udGV4dCAmJgotCSAgICBJTlRFTF9HRU4oZW5naW5lLT5pOTE1KSA8IDExKQotCQlyZWdzW0NU
WF9DT05URVhUX0NPTlRST0wgKyAxXSB8PQotCQkJX01BU0tFRF9CSVRfRU5BQkxFKENUWF9DVFJM
X0VOR0lORV9DVFhfUkVTVE9SRV9JTkhJQklUIHwKLQkJCQkJICAgQ1RYX0NUUkxfRU5HSU5FX0NU
WF9TQVZFX0lOSElCSVQpOwogCiAJcmV0ID0gMDsKIGVycl91bnBpbl9jdHg6CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9ncHVfZXJyb3IuYwppbmRleCBiN2U5ZmRkZWYyNzAuLmE0OTdjZjdhY2I2YSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dwdV9lcnJvci5jCkBAIC0xMjQ4LDEwICsxMjQ4LDEw
IEBAIHN0YXRpYyB2b2lkIGVycm9yX3JlY29yZF9lbmdpbmVfcmVnaXN0ZXJzKHN0cnVjdCBpOTE1
X2dwdV9zdGF0ZSAqZXJyb3IsCiAJfQogfQogCi1zdGF0aWMgdm9pZCByZWNvcmRfcmVxdWVzdChz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LAorc3RhdGljIHZvaWQgcmVjb3JkX3JlcXVlc3Qo
Y29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwKIAkJCSAgIHN0cnVjdCBkcm1faTkx
NV9lcnJvcl9yZXF1ZXN0ICplcnEpCiB7Ci0Jc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9
IHJlcXVlc3QtPmdlbV9jb250ZXh0OworCWNvbnN0IHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpj
dHggPSByZXF1ZXN0LT5nZW1fY29udGV4dDsKIAogCWVycS0+ZmxhZ3MgPSByZXF1ZXN0LT5mZW5j
ZS5mbGFnczsKIAllcnEtPmNvbnRleHQgPSByZXF1ZXN0LT5mZW5jZS5jb250ZXh0OwpAQCAtMTMx
NSwyMCArMTMxNSwxNSBAQCBzdGF0aWMgdm9pZCBlbmdpbmVfcmVjb3JkX3JlcXVlc3RzKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAllZS0+bnVtX3JlcXVlc3RzID0gY291bnQ7CiB9
CiAKLXN0YXRpYyB2b2lkIGVycm9yX3JlY29yZF9lbmdpbmVfZXhlY2xpc3RzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSwKK3N0YXRpYyB2b2lkIGVycm9yX3JlY29yZF9lbmdpbmVfZXhl
Y2xpc3RzKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJCQkJICBzdHJ1
Y3QgZHJtX2k5MTVfZXJyb3JfZW5naW5lICplZSkKIHsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQl1
bnNpZ25lZCBpbnQgbjsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKnBvcnQgPSBleGVj
bGlzdHMtPmFjdGl2ZTsKKwl1bnNpZ25lZCBpbnQgbiA9IDA7CiAKLQlmb3IgKG4gPSAwOyBuIDwg
ZXhlY2xpc3RzX251bV9wb3J0cyhleGVjbGlzdHMpOyBuKyspIHsKLQkJc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEgPSBwb3J0X3JlcXVlc3QoJmV4ZWNsaXN0cy0+cG9ydFtuXSk7Ci0KLQkJaWYgKCFy
cSkKLQkJCWJyZWFrOwotCi0JCXJlY29yZF9yZXF1ZXN0KHJxLCAmZWUtPmV4ZWNsaXN0W25dKTsK
LQl9CisJd2hpbGUgKCpwb3J0KQorCQlyZWNvcmRfcmVxdWVzdCgqcG9ydCsrLCAmZWUtPmV4ZWNs
aXN0W24rK10pOwogCiAJZWUtPm51bV9wb3J0cyA9IG47CiB9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
cmVxdWVzdC5jCmluZGV4IDcwODNlNmFiOTJjNS4uMGM5OTY5NGZhYWI3IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X3JlcXVlc3QuYwpAQCAtMjc2LDYgKzI3NiwxMiBAQCBzdGF0aWMgYm9vbCBpOTE1
X3JlcXVlc3RfcmV0aXJlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCiAJbG9jYWxfaXJxX2Rp
c2FibGUoKTsKIAorCS8qCisJICogV2Ugb25seSBsb29zZWx5IHRyYWNrIGluZmxpZ2h0IHJlcXVl
c3RzIGFjcm9zcyBwcmVlbXB0aW9uLAorCSAqIGFuZCBzbyB3ZSBtYXkgZmluZCBvdXJzZWx2ZXMg
YXR0ZW1wdGluZyB0byByZXRpcmUgYSBfY29tcGxldGVkXworCSAqIHJlcXVlc3QgdGhhdCB3ZSBo
YXZlIHJlbW92ZWQgZnJvbSB0aGUgSFcgYW5kIHB1dCBiYWNrIG9uIGEgcnVuCisJICogcXVldWUu
CisJICovCiAJc3Bpbl9sb2NrKCZycS0+ZW5naW5lLT5hY3RpdmUubG9jayk7CiAJbGlzdF9kZWwo
JnJxLT5zY2hlZC5saW5rKTsKIAlzcGluX3VubG9jaygmcnEtPmVuZ2luZS0+YWN0aXZlLmxvY2sp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaAppbmRleCBlZGJiZGZlYzI0YWIuLmJlYmMx
ZTliNGE1ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKQEAgLTI4LDYgKzI4LDcg
QEAKICNpbmNsdWRlIDxsaW51eC9kbWEtZmVuY2UuaD4KICNpbmNsdWRlIDxsaW51eC9sb2NrZGVw
Lmg+CiAKKyNpbmNsdWRlICJndC9pbnRlbF9jb250ZXh0X3R5cGVzLmgiCiAjaW5jbHVkZSAiZ3Qv
aW50ZWxfZW5naW5lX3R5cGVzLmgiCiAKICNpbmNsdWRlICJpOTE1X2dlbS5oIgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKaW5kZXggMmU5YjM4YmRjMzNjLi5iMWJhM2U2NWNkNTIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwpAQCAtMTc5LDggKzE3OSw3IEBA
IHN0YXRpYyBpbmxpbmUgaW50IHJxX3ByaW8oY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEp
CiAKIHN0YXRpYyB2b2lkIGtpY2tfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUsIGludCBwcmlvKQogewotCWNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKmluZmxpZ2h0
ID0KLQkJcG9ydF9yZXF1ZXN0KGVuZ2luZS0+ZXhlY2xpc3RzLnBvcnQpOworCWNvbnN0IHN0cnVj
dCBpOTE1X3JlcXVlc3QgKmluZmxpZ2h0ID0gKmVuZ2luZS0+ZXhlY2xpc3RzLmFjdGl2ZTsKIAog
CS8qCiAJICogSWYgd2UgYXJlIGFscmVhZHkgdGhlIGN1cnJlbnRseSBleGVjdXRpbmcgY29udGV4
dCwgZG9uJ3QKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuaAppbmRleCAyOTg3MjE5YTYzMDAuLjQ5
MjBmZjlhYmE2MiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV91dGlscy5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMuaApAQCAtMTMxLDYgKzEzMSwx
OCBAQCBfX2NoZWNrX3N0cnVjdF9zaXplKHNpemVfdCBiYXNlLCBzaXplX3QgYXJyLCBzaXplX3Qg
Y291bnQsIHNpemVfdCAqc2l6ZSkKIAkoKHR5cGVvZihwdHIpKSgodW5zaWduZWQgbG9uZykocHRy
KSB8IF9fYml0cykpOwkJCVwKIH0pCiAKKyNkZWZpbmUgcHRyX2NvdW50X2RlYyhwX3B0cikgZG8g
ewkJCQkJXAorCXR5cGVvZihwX3B0cikgX19wID0gKHBfcHRyKTsJCQkJCVwKKwl1bnNpZ25lZCBs
b25nIF9fdiA9ICh1bnNpZ25lZCBsb25nKSgqX19wKTsJCQlcCisJKl9fcCA9ICh0eXBlb2YoKnBf
cHRyKSkoLS1fX3YpOwkJCQkJXAorfSB3aGlsZSAoMCkKKworI2RlZmluZSBwdHJfY291bnRfaW5j
KHBfcHRyKSBkbyB7CQkJCQlcCisJdHlwZW9mKHBfcHRyKSBfX3AgPSAocF9wdHIpOwkJCQkJXAor
CXVuc2lnbmVkIGxvbmcgX192ID0gKHVuc2lnbmVkIGxvbmcpKCpfX3ApOwkJCVwKKwkqX19wID0g
KHR5cGVvZigqcF9wdHIpKSgrK19fdik7CQkJCQlcCit9IHdoaWxlICgwKQorCiAjZGVmaW5lIHBh
Z2VfbWFza19iaXRzKHB0cikgcHRyX21hc2tfYml0cyhwdHIsIFBBR0VfU0hJRlQpCiAjZGVmaW5l
IHBhZ2VfdW5tYXNrX2JpdHMocHRyKSBwdHJfdW5tYXNrX2JpdHMocHRyLCBQQUdFX1NISUZUKQog
I2RlZmluZSBwYWdlX3BhY2tfYml0cyhwdHIsIGJpdHMpIHB0cl9wYWNrX2JpdHMocHRyLCBiaXRz
LCBQQUdFX1NISUZUKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZ3Vj
X3N1Ym1pc3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Y19zdWJtaXNzaW9u
LmMKaW5kZXggZGI1MzFlYmM3NzA0Li4xMmMyMjM1OWZkYWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwpAQCAtMzIsNyArMzIsMTEgQEAKICNpbmNsdWRl
ICJpbnRlbF9ndWNfc3VibWlzc2lvbi5oIgogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAKLSNkZWZp
bmUgR1VDX1BSRUVNUFRfRklOSVNIRUQJCTB4MQorZW51bSB7CisJR1VDX1BSRUVNUFRfTk9ORSA9
IDAsCisJR1VDX1BSRUVNUFRfSU5QUk9HUkVTUywKKwlHVUNfUFJFRU1QVF9GSU5JU0hFRCwKK307
CiAjZGVmaW5lIEdVQ19QUkVFTVBUX0JSRUFEQ1JVTUJfRFdPUkRTCTB4OAogI2RlZmluZSBHVUNf
UFJFRU1QVF9CUkVBRENSVU1CX0JZVEVTCVwKIAkoc2l6ZW9mKHUzMikgKiBHVUNfUFJFRU1QVF9C
UkVBRENSVU1CX0RXT1JEUykKQEAgLTUzNywxNSArNTQxLDExIEBAIHN0YXRpYyB2b2lkIGd1Y19h
ZGRfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogCXUzMiBjdHhfZGVzYyA9IGxvd2VyXzMyX2JpdHMocnEtPmh3X2NvbnRleHQtPmxyY19kZXNj
KTsKIAl1MzIgcmluZ190YWlsID0gaW50ZWxfcmluZ19zZXRfdGFpbChycS0+cmluZywgcnEtPnRh
aWwpIC8gc2l6ZW9mKHU2NCk7CiAKLQlzcGluX2xvY2soJmNsaWVudC0+d3FfbG9jayk7Ci0KIAln
dWNfd3FfaXRlbV9hcHBlbmQoY2xpZW50LCBlbmdpbmUtPmd1Y19pZCwgY3R4X2Rlc2MsCiAJCQkg
ICByaW5nX3RhaWwsIHJxLT5mZW5jZS5zZXFubyk7CiAJZ3VjX3JpbmdfZG9vcmJlbGwoY2xpZW50
KTsKIAogCWNsaWVudC0+c3VibWlzc2lvbnNbZW5naW5lLT5pZF0gKz0gMTsKLQotCXNwaW5fdW5s
b2NrKCZjbGllbnQtPndxX2xvY2spOwogfQogCiAvKgpAQCAtNjMxLDggKzYzMSw5IEBAIHN0YXRp
YyB2b2lkIGluamVjdF9wcmVlbXB0X2NvbnRleHQoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQog
CWRhdGFbNl0gPSBpbnRlbF9ndWNfZ2d0dF9vZmZzZXQoZ3VjLCBndWMtPnNoYXJlZF9kYXRhKTsK
IAogCWlmIChXQVJOX09OKGludGVsX2d1Y19zZW5kKGd1YywgZGF0YSwgQVJSQVlfU0laRShkYXRh
KSkpKSB7Ci0JCWV4ZWNsaXN0c19jbGVhcl9hY3RpdmUoJmVuZ2luZS0+ZXhlY2xpc3RzLAotCQkJ
CSAgICAgICBFWEVDTElTVFNfQUNUSVZFX1BSRUVNUFQpOworCQlpbnRlbF93cml0ZV9zdGF0dXNf
cGFnZShlbmdpbmUsCisJCQkJCUk5MTVfR0VNX0hXU19QUkVFTVBULAorCQkJCQlHVUNfUFJFRU1Q
VF9OT05FKTsKIAkJdGFza2xldF9zY2hlZHVsZSgmZW5naW5lLT5leGVjbGlzdHMudGFza2xldCk7
CiAJfQogCkBAIC02NzIsOCArNjczLDYgQEAgc3RhdGljIHZvaWQgY29tcGxldGVfcHJlZW1wdF9j
b250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwogCi0JR0VN
X0JVR19PTighZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVf
UFJFRU1QVCkpOwotCiAJaWYgKGluamVjdF9wcmVlbXB0X2hhbmcoZXhlY2xpc3RzKSkKIAkJcmV0
dXJuOwogCkBAIC02ODEsODkgKzY4MCw5MCBAQCBzdGF0aWMgdm9pZCBjb21wbGV0ZV9wcmVlbXB0
X2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCWV4ZWNsaXN0c191bndp
bmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhleGVjbGlzdHMpOwogCiAJd2FpdF9mb3JfZ3VjX3ByZWVt
cHRfcmVwb3J0KGVuZ2luZSk7Ci0JaW50ZWxfd3JpdGVfc3RhdHVzX3BhZ2UoZW5naW5lLCBJOTE1
X0dFTV9IV1NfUFJFRU1QVCwgMCk7CisJaW50ZWxfd3JpdGVfc3RhdHVzX3BhZ2UoZW5naW5lLCBJ
OTE1X0dFTV9IV1NfUFJFRU1QVCwgR1VDX1BSRUVNUFRfTk9ORSk7CiB9CiAKLS8qKgotICogZ3Vj
X3N1Ym1pdCgpIC0gU3VibWl0IGNvbW1hbmRzIHRocm91Z2ggR3VDCi0gKiBAZW5naW5lOiBlbmdp
bmUgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb21tYW5kcwotICoKLSAqIFRoZSBvbmx5IGVycm9yIGhl
cmUgYXJpc2VzIGlmIHRoZSBkb29yYmVsbCBoYXJkd2FyZSBpc24ndCBmdW5jdGlvbmluZwotICog
YXMgZXhwZWN0ZWQsIHdoaWNoIHJlYWxseSBzaG91bG4ndCBoYXBwZW4uCi0gKi8KLXN0YXRpYyB2
b2lkIGd1Y19zdWJtaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3RhdGljIHZv
aWQgZ3VjX3N1Ym1pdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCisJCSAgICAgICBz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqb3V0LAorCQkgICAgICAgc3RydWN0IGk5MTVfcmVxdWVzdCAq
KmVuZCkKIHsKIAlzdHJ1Y3QgaW50ZWxfZ3VjICpndWMgPSAmZW5naW5lLT5pOTE1LT5ndWM7Ci0J
c3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5l
LT5leGVjbGlzdHM7Ci0Jc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBvcnQgPSBleGVjbGlzdHMtPnBv
cnQ7Ci0JdW5zaWduZWQgaW50IG47CisJc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCA9
IGd1Yy0+ZXhlY2J1Zl9jbGllbnQ7CiAKLQlmb3IgKG4gPSAwOyBuIDwgZXhlY2xpc3RzX251bV9w
b3J0cyhleGVjbGlzdHMpOyBuKyspIHsKLQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0JCXVu
c2lnbmVkIGludCBjb3VudDsKKwlzcGluX2xvY2soJmNsaWVudC0+d3FfbG9jayk7CiAKLQkJcnEg
PSBwb3J0X3VucGFjaygmcG9ydFtuXSwgJmNvdW50KTsKLQkJaWYgKHJxICYmIGNvdW50ID09IDAp
IHsKLQkJCXBvcnRfc2V0KCZwb3J0W25dLCBwb3J0X3BhY2socnEsICsrY291bnQpKTsKKwlkbyB7
CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gKm91dCsrOwogCi0JCQlmbHVzaF9nZ3R0X3dy
aXRlcyhycS0+cmluZy0+dm1hKTsKKwkJZmx1c2hfZ2d0dF93cml0ZXMocnEtPnJpbmctPnZtYSk7
CisJCWd1Y19hZGRfcmVxdWVzdChndWMsIHJxKTsKKwl9IHdoaWxlIChvdXQgIT0gZW5kKTsKIAot
CQkJZ3VjX2FkZF9yZXF1ZXN0KGd1YywgcnEpOwotCQl9Ci0JfQorCXNwaW5fdW5sb2NrKCZjbGll
bnQtPndxX2xvY2spOwogfQogCi1zdGF0aWMgdm9pZCBwb3J0X2Fzc2lnbihzdHJ1Y3QgZXhlY2xp
c3RfcG9ydCAqcG9ydCwgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCitzdGF0aWMgaW5saW5lIGlu
dCBycV9wcmlvKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCUdFTV9CVUdfT04o
cG9ydF9pc3NldChwb3J0KSk7Ci0KLQlwb3J0X3NldChwb3J0LCBpOTE1X3JlcXVlc3RfZ2V0KHJx
KSk7CisJcmV0dXJuIHJxLT5zY2hlZC5hdHRyLnByaW9yaXR5IHwgX19OT19QUkVFTVBUSU9OOwog
fQogCi1zdGF0aWMgaW5saW5lIGludCBycV9wcmlvKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxKQorc3RhdGljIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnNjaGVkdWxlX2luKHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxLCBpbnQgaWR4KQogewotCXJldHVybiBycS0+c2NoZWQuYXR0ci5wcmlvcml0
eTsKKwl0cmFjZV9pOTE1X3JlcXVlc3RfaW4ocnEsIGlkeCk7CisKKwlpZiAoIXJxLT5od19jb250
ZXh0LT5pbmZsaWdodCkKKwkJcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZTsK
KwlpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2luYyhycS0+aHdfY29udGV4dCk7CisKKwlyZXR1cm4g
aTkxNV9yZXF1ZXN0X2dldChycSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgaW50IHBvcnRfcHJpbyhj
b25zdCBzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAqcG9ydCkKK3N0YXRpYyB2b2lkIHNjaGVkdWxlX291
dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlyZXR1cm4gcnFfcHJpbyhwb3J0X3JlcXVl
c3QocG9ydCkpIHwgX19OT19QUkVFTVBUSU9OOworCXRyYWNlX2k5MTVfcmVxdWVzdF9vdXQocnEp
OworCisJaW50ZWxfY29udGV4dF9pbmZsaWdodF9kZWMocnEtPmh3X2NvbnRleHQpOworCWlmICgh
aW50ZWxfY29udGV4dF9pbmZsaWdodF9jb3VudChycS0+aHdfY29udGV4dCkpCisJCXJxLT5od19j
b250ZXh0LT5pbmZsaWdodCA9IE5VTEw7CisKKwlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIH0KIAot
c3RhdGljIGJvb2wgX19ndWNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CitzdGF0aWMgdm9pZCBfX2d1Y19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyA9
ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQlzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAqcG9ydCA9IGV4ZWNs
aXN0cy0+cG9ydDsKLQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpsYXN0ID0gTlVMTDsKLQljb25zdCBz
dHJ1Y3QgZXhlY2xpc3RfcG9ydCAqIGNvbnN0IGxhc3RfcG9ydCA9Ci0JCSZleGVjbGlzdHMtPnBv
cnRbZXhlY2xpc3RzLT5wb3J0X21hc2tdOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKipmaXJzdCA9
IGV4ZWNsaXN0cy0+aW5mbGlnaHQ7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqKiBjb25zdCBsYXN0
X3BvcnQgPSBmaXJzdCArIGV4ZWNsaXN0cy0+cG9ydF9tYXNrOworCXN0cnVjdCBpOTE1X3JlcXVl
c3QgKmxhc3QgPSBmaXJzdFswXTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqcG9ydDsKIAlib29s
IHN1Ym1pdCA9IGZhbHNlOwogCXN0cnVjdCByYl9ub2RlICpyYjsKIAogCWxvY2tkZXBfYXNzZXJ0
X2hlbGQoJmVuZ2luZS0+YWN0aXZlLmxvY2spOwogCi0JaWYgKHBvcnRfaXNzZXQocG9ydCkpIHsK
KwlpZiAobGFzdCkgewogCQlpZiAoaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0aW9uKGVuZ2luZSkp
IHsKIAkJCXN0cnVjdCBndWNfcHJlZW1wdF93b3JrICpwcmVlbXB0X3dvcmsgPQogCQkJCSZlbmdp
bmUtPmk5MTUtPmd1Yy5wcmVlbXB0X3dvcmtbZW5naW5lLT5pZF07CiAJCQlpbnQgcHJpbyA9IGV4
ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludDsKIAotCQkJaWYgKGk5MTVfc2NoZWR1bGVyX25l
ZWRfcHJlZW1wdChwcmlvLAotCQkJCQkJCXBvcnRfcHJpbyhwb3J0KSkpIHsKLQkJCQlleGVjbGlz
dHNfc2V0X2FjdGl2ZShleGVjbGlzdHMsCi0JCQkJCQkgICAgIEVYRUNMSVNUU19BQ1RJVkVfUFJF
RU1QVCk7CisJCQlpZiAoaTkxNV9zY2hlZHVsZXJfbmVlZF9wcmVlbXB0KHByaW8sIHJxX3ByaW8o
bGFzdCkpKSB7CisJCQkJaW50ZWxfd3JpdGVfc3RhdHVzX3BhZ2UoZW5naW5lLAorCQkJCQkJCUk5
MTVfR0VNX0hXU19QUkVFTVBULAorCQkJCQkJCUdVQ19QUkVFTVBUX0lOUFJPR1JFU1MpOwogCQkJ
CXF1ZXVlX3dvcmsoZW5naW5lLT5pOTE1LT5ndWMucHJlZW1wdF93cSwKIAkJCQkJICAgJnByZWVt
cHRfd29yay0+d29yayk7Ci0JCQkJcmV0dXJuIGZhbHNlOworCQkJCXJldHVybjsKIAkJCX0KIAkJ
fQogCi0JCXBvcnQrKzsKLQkJaWYgKHBvcnRfaXNzZXQocG9ydCkpCi0JCQlyZXR1cm4gZmFsc2U7
CisJCWlmICgqKytmaXJzdCkKKwkJCXJldHVybjsKKworCQlsYXN0ID0gTlVMTDsKIAl9Ci0JR0VN
X0JVR19PTihwb3J0X2lzc2V0KHBvcnQpKTsKIAorCXBvcnQgPSBmaXJzdDsKIAl3aGlsZSAoKHJi
ID0gcmJfZmlyc3RfY2FjaGVkKCZleGVjbGlzdHMtPnF1ZXVlKSkpIHsKIAkJc3RydWN0IGk5MTVf
cHJpb2xpc3QgKnAgPSB0b19wcmlvbGlzdChyYik7CiAJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LCAqcm47CkBAIC03NzQsMTggKzc3NCwxNSBAQCBzdGF0aWMgYm9vbCBfX2d1Y19kZXF1ZXVlKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQlpZiAocG9ydCA9PSBsYXN0X3BvcnQp
CiAJCQkJCWdvdG8gZG9uZTsKIAotCQkJCWlmIChzdWJtaXQpCi0JCQkJCXBvcnRfYXNzaWduKHBv
cnQsIGxhc3QpOworCQkJCSpwb3J0ID0gc2NoZWR1bGVfaW4obGFzdCwKKwkJCQkJCSAgICBwb3J0
IC0gZXhlY2xpc3RzLT5pbmZsaWdodCk7CiAJCQkJcG9ydCsrOwogCQkJfQogCiAJCQlsaXN0X2Rl
bF9pbml0KCZycS0+c2NoZWQubGluayk7Ci0KIAkJCV9faTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7
Ci0JCQl0cmFjZV9pOTE1X3JlcXVlc3RfaW4ocnEsIHBvcnRfaW5kZXgocG9ydCwgZXhlY2xpc3Rz
KSk7Ci0KLQkJCWxhc3QgPSBycTsKIAkJCXN1Ym1pdCA9IHRydWU7CisJCQlsYXN0ID0gcnE7CiAJ
CX0KIAogCQlyYl9lcmFzZV9jYWNoZWQoJnAtPm5vZGUsICZleGVjbGlzdHMtPnF1ZXVlKTsKQEAg
LTc5NCw1OCArNzkxLDQxIEBAIHN0YXRpYyBib29sIF9fZ3VjX2RlcXVldWUoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQogZG9uZToKIAlleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hp
bnQgPQogCQlyYiA/IHRvX3ByaW9saXN0KHJiKS0+cHJpb3JpdHkgOiBJTlRfTUlOOwotCWlmIChz
dWJtaXQpCi0JCXBvcnRfYXNzaWduKHBvcnQsIGxhc3QpOwotCWlmIChsYXN0KQotCQlleGVjbGlz
dHNfdXNlcl9iZWdpbihleGVjbGlzdHMsIGV4ZWNsaXN0cy0+cG9ydCk7Ci0KLQkvKiBXZSBtdXN0
IGFsd2F5cyBrZWVwIHRoZSBiZWFzdCBmZWQgaWYgd2UgaGF2ZSB3b3JrIHBpbGVkIHVwICovCi0J
R0VNX0JVR19PTihwb3J0X2lzc2V0KGV4ZWNsaXN0cy0+cG9ydCkgJiYKLQkJICAgIWV4ZWNsaXN0
c19pc19hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1VTRVIpKTsKLQlHRU1fQlVH
X09OKHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT5xdWV1ZSkgJiYKLQkJICAgIXBvcnRfaXNz
ZXQoZXhlY2xpc3RzLT5wb3J0KSk7Ci0KLQlyZXR1cm4gc3VibWl0OwotfQotCi1zdGF0aWMgdm9p
ZCBndWNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCi17Ci0JaWYgKF9f
Z3VjX2RlcXVldWUoZW5naW5lKSkKLQkJZ3VjX3N1Ym1pdChlbmdpbmUpOworCWlmIChzdWJtaXQp
IHsKKwkJKnBvcnQgPSBzY2hlZHVsZV9pbihsYXN0LCBwb3J0IC0gZXhlY2xpc3RzLT5pbmZsaWdo
dCk7CisJCSorK3BvcnQgPSBOVUxMOworCQlndWNfc3VibWl0KGVuZ2luZSwgZmlyc3QsIHBvcnQp
OworCX0KKwlleGVjbGlzdHMtPmFjdGl2ZSA9IGV4ZWNsaXN0cy0+aW5mbGlnaHQ7CiB9CiAKIHN0
YXRpYyB2b2lkIGd1Y19zdWJtaXNzaW9uX3Rhc2tsZXQodW5zaWduZWQgbG9uZyBkYXRhKQogewog
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUgPSAoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqKWRhdGE7CiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBl
eGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBv
cnQgPSBleGVjbGlzdHMtPnBvcnQ7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJc3RydWN0
IGk5MTVfcmVxdWVzdCAqKnBvcnQsICpycTsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCiAJc3Bp
bl9sb2NrX2lycXNhdmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKIAotCXJxID0gcG9y
dF9yZXF1ZXN0KHBvcnQpOwotCXdoaWxlIChycSAmJiBpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJx
KSkgewotCQl0cmFjZV9pOTE1X3JlcXVlc3Rfb3V0KHJxKTsKLQkJaTkxNV9yZXF1ZXN0X3B1dChy
cSk7CisJZm9yIChwb3J0ID0gZXhlY2xpc3RzLT5pbmZsaWdodDsgKHJxID0gKnBvcnQpOyBwb3J0
KyspIHsKKwkJaWYgKCFpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKKwkJCWJyZWFrOwogCi0J
CXBvcnQgPSBleGVjbGlzdHNfcG9ydF9jb21wbGV0ZShleGVjbGlzdHMsIHBvcnQpOwotCQlpZiAo
cG9ydF9pc3NldChwb3J0KSkgewotCQkJZXhlY2xpc3RzX3VzZXJfYmVnaW4oZXhlY2xpc3RzLCBw
b3J0KTsKLQkJCXJxID0gcG9ydF9yZXF1ZXN0KHBvcnQpOwotCQl9IGVsc2UgewotCQkJZXhlY2xp
c3RzX3VzZXJfZW5kKGV4ZWNsaXN0cyk7Ci0JCQlycSA9IE5VTEw7Ci0JCX0KKwkJc2NoZWR1bGVf
b3V0KHJxKTsKKwl9CisJaWYgKHBvcnQgIT0gZXhlY2xpc3RzLT5pbmZsaWdodCkgeworCQlpbnQg
aWR4ID0gcG9ydCAtIGV4ZWNsaXN0cy0+aW5mbGlnaHQ7CisJCWludCByZW0gPSBBUlJBWV9TSVpF
KGV4ZWNsaXN0cy0+aW5mbGlnaHQpIC0gaWR4OworCQltZW1tb3ZlKGV4ZWNsaXN0cy0+aW5mbGln
aHQsIHBvcnQsIHJlbSAqIHNpemVvZigqcG9ydCkpOwogCX0KIAotCWlmIChleGVjbGlzdHNfaXNf
YWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9QUkVFTVBUKSAmJgotCSAgICBpbnRl
bF9yZWFkX3N0YXR1c19wYWdlKGVuZ2luZSwgSTkxNV9HRU1fSFdTX1BSRUVNUFQpID09CisJaWYg
KGludGVsX3JlYWRfc3RhdHVzX3BhZ2UoZW5naW5lLCBJOTE1X0dFTV9IV1NfUFJFRU1QVCkgPT0K
IAkgICAgR1VDX1BSRUVNUFRfRklOSVNIRUQpCiAJCWNvbXBsZXRlX3ByZWVtcHRfY29udGV4dChl
bmdpbmUpOwogCi0JaWYgKCFleGVjbGlzdHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RT
X0FDVElWRV9QUkVFTVBUKSkKLQkJZ3VjX2RlcXVldWUoZW5naW5lKTsKKwlpZiAoIWludGVsX3Jl
YWRfc3RhdHVzX3BhZ2UoZW5naW5lLCBJOTE1X0dFTV9IV1NfUFJFRU1QVCkpCisJCV9fZ3VjX2Rl
cXVldWUoZW5naW5lKTsKIAogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZl
LmxvY2ssIGZsYWdzKTsKIH0KQEAgLTk1OSw3ICs5MzksNiBAQCBzdGF0aWMgdm9pZCBndWNfY2Fu
Y2VsX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCWV4ZWNsaXN0
cy0+cXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CiAJZXhlY2xpc3RzLT5xdWV1ZSA9IFJC
X1JPT1RfQ0FDSEVEOwotCUdFTV9CVUdfT04ocG9ydF9pc3NldChleGVjbGlzdHMtPnBvcnQpKTsK
IAogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsK
IH0KQEAgLTE0MjIsNyArMTQwMSw3IEBAIGludCBpbnRlbF9ndWNfc3VibWlzc2lvbl9lbmFibGUo
c3RydWN0IGludGVsX2d1YyAqZ3VjKQogCSAqIGFuZCBpdCBpcyBndWFyYW50ZWVkIHRoYXQgaXQg
d2lsbCByZW1vdmUgdGhlIHdvcmsgaXRlbSBmcm9tIHRoZQogCSAqIHF1ZXVlIGJlZm9yZSBvdXIg
cmVxdWVzdCBpcyBjb21wbGV0ZWQuCiAJICovCi0JQlVJTERfQlVHX09OKEFSUkFZX1NJWkUoZW5n
aW5lLT5leGVjbGlzdHMucG9ydCkgKgorCUJVSUxEX0JVR19PTihBUlJBWV9TSVpFKGVuZ2luZS0+
ZXhlY2xpc3RzLmluZmxpZ2h0KSAqCiAJCSAgICAgc2l6ZW9mKHN0cnVjdCBndWNfd3FfaXRlbSkg
KgogCQkgICAgIEk5MTVfTlVNX0VOR0lORVMgPiBHVUNfV1FfU0laRSk7CiAKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X3JlcXVlc3QuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X3JlcXVlc3QuYwppbmRleCAyOThiYjcxMTZjNTEu
LjFhNWI5ZTI4NGNhOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3Rz
L2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1
X3JlcXVlc3QuYwpAQCAtMzY2LDEzICszNjYsMTUgQEAgc3RhdGljIGludCBfX2lndF9icmVhZGNy
dW1ic19zbW9rZXRlc3Qodm9pZCAqYXJnKQogCiAJCWlmICghd2FpdF9ldmVudF90aW1lb3V0KHdh
aXQtPndhaXQsCiAJCQkJCWk5MTVfc3dfZmVuY2VfZG9uZSh3YWl0KSwKLQkJCQkJSFogLyAyKSkg
eworCQkJCQk1ICogSFopKSB7CiAJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9IHJlcXVlc3Rz
W2NvdW50IC0gMV07CiAKLQkJCXByX2Vycigid2FpdGluZyBmb3IgJWQgZmVuY2VzIChsYXN0ICVs
bHg6JWxsZCkgb24gJXMgdGltZWQgb3V0IVxuIiwKLQkJCSAgICAgICBjb3VudCwKKwkJCXByX2Vy
cigid2FpdGluZyBmb3IgJWQvJWQgZmVuY2VzIChsYXN0ICVsbHg6JWxsZCkgb24gJXMgdGltZWQg
b3V0IVxuIiwKKwkJCSAgICAgICBhdG9taWNfcmVhZCgmd2FpdC0+cGVuZGluZyksIGNvdW50LAog
CQkJICAgICAgIHJxLT5mZW5jZS5jb250ZXh0LCBycS0+ZmVuY2Uuc2Vxbm8sCiAJCQkgICAgICAg
dC0+ZW5naW5lLT5uYW1lKTsKKwkJCUdFTV9UUkFDRV9EVU1QKCk7CisKIAkJCWk5MTVfZ2VtX3Nl
dF93ZWRnZWQodC0+ZW5naW5lLT5pOTE1KTsKIAkJCUdFTV9CVUdfT04oIWk5MTVfcmVxdWVzdF9j
b21wbGV0ZWQocnEpKTsKIAkJCWk5MTVfc3dfZmVuY2Vfd2FpdCh3YWl0KTsKLS0gCjIuMjAuMQoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4
IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlz
dHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

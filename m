Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 9B376E0E4A
	for <lists+intel-gfx@lfdr.de>; Wed, 23 Oct 2019 00:39:20 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3501A6E924;
	Tue, 22 Oct 2019 22:39:17 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id AC1486E91F
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Oct 2019 22:39:05 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18930836-1500050 
 for multiple; Tue, 22 Oct 2019 23:38:54 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 22 Oct 2019 23:38:24 +0100
Message-Id: <20191022223831.22677-5-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0.rc0
In-Reply-To: <20191022223831.22677-1-chris@chris-wilson.co.uk>
References: <20191022223831.22677-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 05/12] drm/i915/execlists: Force preemption
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SWYgdGhlIHByZWVtcHRlZCBjb250ZXh0IHRha2VzIHRvbyBsb25nIHRvIHJlbGlucXVpc2ggY29u
dHJvbCwgZS5nLiBpdAppcyBzdHVjayBpbnNpZGUgYSBzaGFkZXIgd2l0aCBhcmJpdHJhdGlvbiBk
aXNhYmxlZCwgZXZpY3QgdGhhdCBjb250ZXh0CndpdGggYW4gZW5naW5lIHJlc2V0LiBUaGlzIGVu
c3VyZXMgdGhhdCBwcmVlbXB0aW9ucyBhcmUgcmVhc29uYWJseQpyZXNwb25zaXZlLCBwcm92aWRp
bmcgYSB0aWdodGVyIFFvUyBmb3IgdGhlIG1vcmUgaW1wb3J0YW50IGNvbnRleHQgYXQKdGhlIGNv
c3Qgb2YgZmxhZ2dpbmcgdW5yZXNwb25zaXZlIGNvbnRleHRzIG1vcmUgZnJlcXVlbnRseSAoaS5l
LiBpbnN0ZWFkCm9mIHVzaW5nIGFuIH4xMHMgaGFuZ2NoZWNrLCB3ZSBub3cgZXZpY3QgYXQgfjEw
MG1zKS4gIFRoZSBjaGFsbGVuZ2Ugb2YKbGllcyBpbiBwaWNraW5nIGEgdGltZW91dCB0aGF0IGNh
biBiZSByZWFzb25hYmx5IHNlcnZpY2VkIGJ5IEhXIGZvcgp0eXBpY2FsIHdvcmtsb2FkcywgYmFs
YW5jaW5nIHRoZSBleGlzdGluZyBjbGllbnRzIGFnYWluc3QgdGhlIG5lZWRzIGZvcgpyZXNwb25z
aXZlbmVzcy4KCk5vdGUgdGhhdCBjb3VwbGVkIHdpdGggdGltZXNsaWNpbmcsIHRoaXMgd2lsbCBs
ZWFkIHRvIHJhcGlkIEdQVSAiaGFuZyIKZGV0ZWN0aW9uIHdpdGggbXVsdGlwbGUgYWN0aXZlIGNv
bnRleHRzIHZ5aW5nIGZvciBHUFUgdGltZS4KClRoZSBwcmVlbXB0IHRpbWVvdXQgY2FuIGJlIGFk
anVzdGVkIHBlci1lbmdpbmUgdXNpbmcsCgoJL3N5cy9jbGFzcy9kcm0vY2FyZD8vZW5naW5lLyov
cHJlZW1wdF90aW1lb3V0X21zCgp2MjogQ291cGxlIGluIHN5c2ZzIGNvbnRyb2wgb2YgcHJlZW1w
dGlvbiB0aW1lb3V0CgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdp
bHNvbi5jby51az4KQ2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwu
Y29tPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KUmV2aWV3
ZWQtYnk6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50ZWwuY29tPgotLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcucHJvZmlsZSAgICAgICAgIHwgIDE1ICsrKwog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggICAgICAgfCAgIDkgKysKIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jICAgIHwgICA1ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYyB8ICA0NyArKysrKysrKysK
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIHwgICA2ICsrCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICB8ICA5MiArKysrKysr
KysrKysrKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgICAgICAg
fCAxMDAgKysrKysrKysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJh
bXMuaCAgICAgICAgICAgfCAgIDIgKy0KIDggZmlsZXMgY2hhbmdlZCwgMjY2IGluc2VydGlvbnMo
KyksIDEwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L0tj
b25maWcucHJvZmlsZSBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcucHJvZmlsZQppbmRl
eCAyNzRiZGQyMDhlMGQuLjhiMjI2MWZjNTk0NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvS2NvbmZpZy5wcm9maWxlCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L0tjb25maWcu
cHJvZmlsZQpAQCAtNTcsMyArNTcsMTggQEAgY29uZmlnIERSTV9JOTE1X1RJTUVTTElDRV9EVVJB
VElPTgogCSAgL3N5cy9jbGFzcy9kcm0vY2FyZD8vZW5naW5lLyovdGltZXNsaWNlX2R1cmF0aW9u
X21zCiAKIAkgIE1heSBiZSAwIHRvIGRpc2FibGUgdGltZXNsaWNpbmcuCisKK2NvbmZpZyBEUk1f
STkxNV9QUkVFTVBUX1RJTUVPVVQKKwlpbnQgIlByZWVtcHQgdGltZW91dCAobXMsIGppZmZ5IGdy
YW51bGFyaXR5KSIKKwlkZWZhdWx0IDEwMCAjIG1pbGxpc2Vjb25kcworCWhlbHAKKwkgIEhvdyBs
b25nIHRvIHdhaXQgKGluIG1pbGxpc2Vjb25kcykgZm9yIGEgcHJlZW1wdGlvbiBldmVudCB0byBv
Y2N1cgorCSAgd2hlbiBzdWJtaXR0aW5nIGEgbmV3IGNvbnRleHQgdmlhIGV4ZWNsaXN0cy4gSWYg
dGhlIGN1cnJlbnQgY29udGV4dAorCSAgZG9lcyBub3QgaGl0IGFuIGFyYml0cmF0aW9uIHBvaW50
IGFuZCB5aWVsZCB0byBIVyBiZWZvcmUgdGhlIHRpbWVyCisJICBleHBpcmVzLCB0aGUgSFcgd2ls
bCBiZSByZXNldCB0byBhbGxvdyB0aGUgbW9yZSBpbXBvcnRhbnQgY29udGV4dAorCSAgdG8gZXhl
Y3V0ZS4KKworCSAgVGhpcyBpcyBhZGp1c3RhYmxlIHZpYQorCSAgL3N5cy9jbGFzcy9kcm0vY2Fy
ZD8vZW5naW5lLyovcHJlZW1wdF90aW1lb3V0X21zCisKKwkgIE1heSBiZSAwIHRvIGRpc2FibGUg
dGhlIHRpbWVvdXQuCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
bmdpbmUuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZS5oCmluZGV4IDk0
ZTZmNjQ2MDUxOS4uOWZkOWVkZDdlM2RmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmUuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
bmdpbmUuaApAQCAtNTM2LDQgKzUzNiwxMyBAQCBpbnRlbF9lbmdpbmVfaGFzX3RpbWVzbGljZXMo
Y29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCXJldHVybiBpbnRlbF9lbmdp
bmVfaGFzX3NlbWFwaG9yZXMoZW5naW5lKTsKIH0KIAorc3RhdGljIGlubGluZSBib29sCitpbnRl
bF9lbmdpbmVfaGFzX3ByZWVtcHRfcmVzZXQoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQoreworCWlmICghQ09ORklHX0RSTV9JOTE1X1BSRUVNUFRfVElNRU9VVCkKKwkJcmV0
dXJuIDA7CisKKwlyZXR1cm4gaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0aW9uKGVuZ2luZSk7Cit9
CisKICNlbmRpZiAvKiBfSU5URUxfUklOR0JVRkZFUl9IXyAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCA1ZjhkYWQwNDkxNWYuLmZhM2ExNzRiMmYwNSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTMwOCw2ICsz
MDgsOCBAQCBzdGF0aWMgaW50IGludGVsX2VuZ2luZV9zZXR1cChzdHJ1Y3QgaW50ZWxfZ3QgKmd0
LCBlbnVtIGludGVsX2VuZ2luZV9pZCBpZCkKIAllbmdpbmUtPmluc3RhbmNlID0gaW5mby0+aW5z
dGFuY2U7CiAJX19zcHJpbnRfZW5naW5lX25hbWUoZW5naW5lKTsKIAorCWVuZ2luZS0+cHJvcHMu
cHJlZW1wdF90aW1lb3V0X21zID0KKwkJQ09ORklHX0RSTV9JOTE1X1BSRUVNUFRfVElNRU9VVDsK
IAllbmdpbmUtPnByb3BzLnN0b3BfdGltZW91dF9tcyA9CiAJCUNPTkZJR19EUk1fSTkxNV9TVE9Q
X1RJTUVPVVQ7CiAJZW5naW5lLT5wcm9wcy50aW1lc2xpY2VfZHVyYXRpb25fbXMgPQpAQCAtMTM0
MCwxMCArMTM0MiwxMSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9lbmdpbmVfcHJpbnRfcmVnaXN0ZXJz
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJdW5zaWduZWQgaW50IGlkeDsKIAkJ
dTggcmVhZCwgd3JpdGU7CiAKLQkJZHJtX3ByaW50ZihtLCAiXHRFeGVjbGlzdCB0YXNrbGV0IHF1
ZXVlZD8gJXMgKCVzKSwgdGltZXNsaWNlPyAlc1xuIiwKKwkJZHJtX3ByaW50ZihtLCAiXHRFeGVj
bGlzdCB0YXNrbGV0IHF1ZXVlZD8gJXMgKCVzKSwgcHJlZW1wdD8gJXMsIHRpbWVzbGljZT8gJXNc
biIsCiAJCQkgICB5ZXNubyh0ZXN0X2JpdChUQVNLTEVUX1NUQVRFX1NDSEVELAogCQkJCQkgICZl
bmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0LnN0YXRlKSksCiAJCQkgICBlbmFibGVkZGlzYWJsZWQo
IWF0b21pY19yZWFkKCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0LmNvdW50KSksCisJCQkgICBy
ZXByX3RpbWVyKCZlbmdpbmUtPmV4ZWNsaXN0cy5wcmVlbXB0KSwKIAkJCSAgIHJlcHJfdGltZXIo
JmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyKSk7CiAKIAkJcmVhZCA9IGV4ZWNsaXN0cy0+Y3NiX2hl
YWQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lz
ZnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9zeXNmcy5jCmluZGV4
IDczYTc1NWY0NGNjZS4uYzkwMzg4ODQ3NDkyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfc3lzZnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfc3lzZnMuYwpAQCAtMjE0LDYgKzIxNCw0OSBAQCBzdG9wX3N0b3JlKHN0
cnVjdCBrb2JqZWN0ICprb2JqLCBzdHJ1Y3Qga29ial9hdHRyaWJ1dGUgKmF0dHIsCiBzdGF0aWMg
c3RydWN0IGtvYmpfYXR0cmlidXRlIHN0b3BfdGltZW91dF9hdHRyID0KIF9fQVRUUihzdG9wX3Rp
bWVvdXRfbXMsIDA2NDQsIHN0b3Bfc2hvdywgc3RvcF9zdG9yZSk7CiAKK3N0YXRpYyBzc2l6ZV90
CitwcmVlbXB0X3RpbWVvdXRfc2hvdyhzdHJ1Y3Qga29iamVjdCAqa29iaiwgc3RydWN0IGtvYmpf
YXR0cmlidXRlICphdHRyLAorCQkgICAgIGNoYXIgKmJ1ZikKK3sKKwlzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUgPSBrb2JqX3RvX2VuZ2luZShrb2JqKTsKKworCXJldHVybiBzcHJpbnRm
KGJ1ZiwgIiVsdVxuIiwgZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRfbXMpOworfQorCitz
dGF0aWMgc3NpemVfdAorcHJlZW1wdF90aW1lb3V0X3N0b3JlKHN0cnVjdCBrb2JqZWN0ICprb2Jq
LCBzdHJ1Y3Qga29ial9hdHRyaWJ1dGUgKmF0dHIsCisJCSAgICAgIGNvbnN0IGNoYXIgKmJ1Ziwg
c2l6ZV90IGNvdW50KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSA9IGtvYmpf
dG9fZW5naW5lKGtvYmopOworCXVuc2lnbmVkIGxvbmcgbG9uZyB0aW1lb3V0OworCWludCBlcnI7
CisKKwllcnIgPSBrc3RydG91bGwoYnVmLCAwLCAmdGltZW91dCk7CisJaWYgKGVycikKKwkJcmV0
dXJuIGVycjsKKworCWlmICh0aW1lb3V0ID4gamlmZmllc190b19tc2VjcyhNQVhfU0NIRURVTEVf
VElNRU9VVCkpCisJCXJldHVybiAtRUlOVkFMOworCisJV1JJVEVfT05DRShlbmdpbmUtPnByb3Bz
LnByZWVtcHRfdGltZW91dF9tcywgdGltZW91dCk7CisKKwlpZiAoUkVBRF9PTkNFKGVuZ2luZS0+
ZXhlY2xpc3RzLnBlbmRpbmdbMF0pKSB7CisJCXN0cnVjdCB0aW1lcl9saXN0ICp0ID0gJmVuZ2lu
ZS0+ZXhlY2xpc3RzLnByZWVtcHQ7CisKKwkJaWYgKCF0aW1lb3V0KSB7CisJCQljYW5jZWxfdGlt
ZXIodCk7CisJCX0gZWxzZSB7CisJCQl0aW1lb3V0ID0gbXNlY3NfdG9famlmZmllc190aW1lb3V0
KHRpbWVvdXQpOworCQkJbW9kX3RpbWVyKHQsIGppZmZpZXMgKyB0aW1lb3V0KTsKKwkJfQorCX0K
KworCXJldHVybiBjb3VudDsKK30KKworc3RhdGljIHN0cnVjdCBrb2JqX2F0dHJpYnV0ZSBwcmVl
bXB0X3RpbWVvdXRfYXR0ciA9CitfX0FUVFIocHJlZW1wdF90aW1lb3V0X21zLCAwNjQ0LCBwcmVl
bXB0X3RpbWVvdXRfc2hvdywgcHJlZW1wdF90aW1lb3V0X3N0b3JlKTsKKwogc3RhdGljIHZvaWQg
a29ial9lbmdpbmVfcmVsZWFzZShzdHJ1Y3Qga29iamVjdCAqa29iaikKIHsKIAlrZnJlZShrb2Jq
KTsKQEAgLTI4MCw2ICszMjMsMTAgQEAgdm9pZCBpbnRlbF9lbmdpbmVzX2FkZF9zeXNmcyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJICAgIHN5c2ZzX2NyZWF0ZV9maWxlKGtvYmos
ICZ0aW1lc2xpY2VfZHVyYXRpb25fYXR0ci5hdHRyKSkKIAkJCWdvdG8gZXJyX2VuZ2luZTsKIAor
CQlpZiAoaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0X3Jlc2V0KGVuZ2luZSkgJiYKKwkJICAgIHN5
c2ZzX2NyZWF0ZV9maWxlKGtvYmosICZwcmVlbXB0X3RpbWVvdXRfYXR0ci5hdHRyKSkKKwkJCWdv
dG8gZXJyX2VuZ2luZTsKKwogCQlpZiAoMCkgewogZXJyX29iamVjdDoKIAkJCWtvYmplY3RfcHV0
KGtvYmopOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5l
X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApp
bmRleCA3NmVmOGE2M2Y5MjEuLjE4N2QyNmJmNTYzZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKQEAgLTE3NCw2ICsxNzQsMTEgQEAgc3RydWN0IGlu
dGVsX2VuZ2luZV9leGVjbGlzdHMgewogCSAqLwogCXN0cnVjdCB0aW1lcl9saXN0IHRpbWVyOwog
CisJLyoqCisJICogQHByZWVtcHQ6IHJlc2V0IHRoZSBjdXJyZW50IGNvbnRleHQgaWYgaXQgZmFp
bHMgdG8gZ2l2ZSB3YXkKKwkgKi8KKwlzdHJ1Y3QgdGltZXJfbGlzdCBwcmVlbXB0OworCiAJLyoq
CiAJICogQGRlZmF1bHRfcHJpb2xpc3Q6IHByaW9yaXR5IGxpc3QgZm9yIEk5MTVfUFJJT1JJVFlf
Tk9STUFMCiAJICovCkBAIC01NDQsNiArNTQ5LDcgQEAgc3RydWN0IGludGVsX2VuZ2luZV9jcyB7
CiAJfSBzdGF0czsKIAogCXN0cnVjdCB7CisJCXVuc2lnbmVkIGxvbmcgcHJlZW1wdF90aW1lb3V0
X21zOwogCQl1bnNpZ25lZCBsb25nIHN0b3BfdGltZW91dF9tczsKIAkJdW5zaWduZWQgbG9uZyB0
aW1lc2xpY2VfZHVyYXRpb25fbXM7CiAJfSBwcm9wczsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
bHJjLmMKaW5kZXggMzAxNDJlYmNlOGZlLi5lYzBmN2VmODhlM2UgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5jCkBAIC0xNDA5LDYgKzE0MDksMjUgQEAgc3RhdGljIHZvaWQgcmVjb3Jk
X3ByZWVtcHRpb24oc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cykKIAko
dm9pZClJOTE1X1NFTEZURVNUX09OTFkoZXhlY2xpc3RzLT5wcmVlbXB0X2hhbmcuY291bnQrKyk7
CiB9CiAKK3N0YXRpYyB1bnNpZ25lZCBsb25nIGFjdGl2ZV9wcmVlbXB0X3RpbWVvdXQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwor
CisJcnEgPSBsYXN0X2FjdGl2ZSgmZW5naW5lLT5leGVjbGlzdHMpOworCWlmICghcnEpCisJCXJl
dHVybiAwOworCisJcmV0dXJuIFJFQURfT05DRShlbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91
dF9tcyk7Cit9CisKK3N0YXRpYyB2b2lkIHNldF9wcmVlbXB0X3RpbWVvdXQoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKQoreworCWlmICghaW50ZWxfZW5naW5lX2hhc19wcmVlbXB0X3Jl
c2V0KGVuZ2luZSkpCisJCXJldHVybjsKKworCV9fc2V0X3RpbWVyKCZlbmdpbmUtPmV4ZWNsaXN0
cy5wcmVlbXB0LCBhY3RpdmVfcHJlZW1wdF90aW1lb3V0KGVuZ2luZSkpOworfQorCiBzdGF0aWMg
dm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7
CiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5n
aW5lLT5leGVjbGlzdHM7CkBAIC0xNzg1LDYgKzE4MDQsOCBAQCBzdGF0aWMgdm9pZCBleGVjbGlz
dHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIAkJbWVtc2V0KHBv
cnQgKyAxLCAwLCAobGFzdF9wb3J0IC0gcG9ydCkgKiBzaXplb2YoKnBvcnQpKTsKIAkJZXhlY2xp
c3RzX3N1Ym1pdF9wb3J0cyhlbmdpbmUpOworCisJCXNldF9wcmVlbXB0X3RpbWVvdXQoZW5naW5l
KTsKIAl9IGVsc2Ugewogc2tpcF9zdWJtaXQ6CiAJCXJpbmdfc2V0X3BhdXNlZChlbmdpbmUsIDAp
OwpAQCAtMjAyMiw2ICsyMDQzLDQzIEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3N1Ym1pc3Np
b25fdGFza2xldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpjb25zdCBlbmdpbmUpCiAJfQogfQog
CitzdGF0aWMgbm9pbmxpbmUgdm9pZCBwcmVlbXB0X3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSkKK3sKKwljb25zdCB1bnNpZ25lZCBpbnQgYml0ID0gSTkxNV9SRVNFVF9FTkdJ
TkUgKyBlbmdpbmUtPmlkOworCXVuc2lnbmVkIGxvbmcgKmxvY2sgPSAmZW5naW5lLT5ndC0+cmVz
ZXQuZmxhZ3M7CisKKwlpZiAoaTkxNV9tb2RwYXJhbXMucmVzZXQgPCAzKQorCQlyZXR1cm47CisK
KwlpZiAodGVzdF9hbmRfc2V0X2JpdChiaXQsIGxvY2spKQorCQlyZXR1cm47CisKKwkvKiBNYXJr
IHRoaXMgdGFza2xldCBhcyBkaXNhYmxlZCB0byBhdm9pZCB3YWl0aW5nIGZvciBpdCB0byBjb21w
bGV0ZSAqLworCXRhc2tsZXRfZGlzYWJsZV9ub3N5bmMoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2ts
ZXQpOworCisJR0VNX1RSQUNFKCIlczogcHJlZW1wdCB0aW1lb3V0ICVsdSsldW1zXG4iLAorCQkg
IGVuZ2luZS0+bmFtZSwKKwkJICBlbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tcywKKwkJ
ICBqaWZmaWVzX3RvX21zZWNzKGppZmZpZXMgLSBlbmdpbmUtPmV4ZWNsaXN0cy5wcmVlbXB0LmV4
cGlyZXMpKTsKKwlpbnRlbF9lbmdpbmVfcmVzZXQoZW5naW5lLCAicHJlZW1wdGlvbiB0aW1lIG91
dCIpOworCisJdGFza2xldF9lbmFibGUoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQpOworCWNs
ZWFyX2FuZF93YWtlX3VwX2JpdChiaXQsIGxvY2spOworfQorCitzdGF0aWMgYm9vbCBwcmVlbXB0
X3RpbWVvdXQoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqY29uc3QgZW5naW5lKQorewor
CWNvbnN0IHN0cnVjdCB0aW1lcl9saXN0ICp0ID0gJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQ7
CisKKwlpZiAoIUNPTkZJR19EUk1fSTkxNV9QUkVFTVBUX1RJTUVPVVQpCisJCXJldHVybiBmYWxz
ZTsKKworCWlmICghdGltZXJfZXhwaXJlZCh0KSkKKwkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJu
IFJFQURfT05DRShlbmdpbmUtPmV4ZWNsaXN0cy5wZW5kaW5nWzBdKTsKK30KKwogLyoKICAqIENo
ZWNrIHRoZSB1bnJlYWQgQ29udGV4dCBTdGF0dXMgQnVmZmVycyBhbmQgbWFuYWdlIHRoZSBzdWJt
aXNzaW9uIG9mIG5ldwogICogY29udGV4dHMgdG8gdGhlIEVMU1AgYWNjb3JkaW5nbHkuCkBAIC0y
MDI5LDIzICsyMDg3LDM5IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFz
a2xldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpjb25zdCBlbmdpbmUpCiBzdGF0aWMgdm9pZCBl
eGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICogY29uc3QgZW5naW5lID0gKHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKilkYXRhOwotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJYm9vbCB0aW1lb3V0ID0gcHJlZW1w
dF90aW1lb3V0KGVuZ2luZSk7CiAKIAlwcm9jZXNzX2NzYihlbmdpbmUpOwotCWlmICghUkVBRF9P
TkNFKGVuZ2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0pKSB7CisJaWYgKCFSRUFEX09OQ0UoZW5n
aW5lLT5leGVjbGlzdHMucGVuZGluZ1swXSkgfHwgdGltZW91dCkgeworCQl1bnNpZ25lZCBsb25n
IGZsYWdzOworCiAJCXNwaW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFn
cyk7CiAJCV9fZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGFza2xldChlbmdpbmUpOwogCQlzcGluX3Vu
bG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CisKKwkJLyogUmVj
aGVjayBhZnRlciBzZXJpYWxpc2luZyB3aXRoIGRpcmVjdC1zdWJtaXNzaW9uICovCisJCWlmICh0
aW1lb3V0ICYmIHByZWVtcHRfdGltZW91dChlbmdpbmUpKQorCQkJcHJlZW1wdF9yZXNldChlbmdp
bmUpOwogCX0KIH0KIAotc3RhdGljIHZvaWQgZXhlY2xpc3RzX3N1Ym1pc3Npb25fdGltZXIoc3Ry
dWN0IHRpbWVyX2xpc3QgKnRpbWVyKQorc3RhdGljIHZvaWQgX19leGVjbGlzdHNfa2ljayhzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQogewotCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSA9Ci0JCWZyb21fdGltZXIoZW5naW5lLCB0aW1lciwgZXhlY2xpc3Rz
LnRpbWVyKTsKLQogCS8qIEtpY2sgdGhlIHRhc2tsZXQgZm9yIHNvbWUgaW50ZXJydXB0IGNvYWxl
c2NpbmcgYW5kIHJlc2V0IGhhbmRsaW5nICovCi0JdGFza2xldF9oaV9zY2hlZHVsZSgmZW5naW5l
LT5leGVjbGlzdHMudGFza2xldCk7CisJdGFza2xldF9oaV9zY2hlZHVsZSgmZXhlY2xpc3RzLT50
YXNrbGV0KTsKK30KKworI2RlZmluZSBleGVjbGlzdHNfa2ljayh0LCBtZW1iZXIpIFwKKwlfX2V4
ZWNsaXN0c19raWNrKGNvbnRhaW5lcl9vZih0LCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0
cywgbWVtYmVyKSkKKworc3RhdGljIHZvaWQgZXhlY2xpc3RzX3RpbWVzbGljZShzdHJ1Y3QgdGlt
ZXJfbGlzdCAqdGltZXIpCit7CisJZXhlY2xpc3RzX2tpY2sodGltZXIsIHRpbWVyKTsKK30KKwor
c3RhdGljIHZvaWQgZXhlY2xpc3RzX3ByZWVtcHQoc3RydWN0IHRpbWVyX2xpc3QgKnRpbWVyKQor
eworCWV4ZWNsaXN0c19raWNrKHRpbWVyLCBwcmVlbXB0KTsKIH0KIAogc3RhdGljIHZvaWQgcXVl
dWVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCkBAIC0zNDkwLDYgKzM1
NjQsNyBAQCBnZW4xMl9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9yY3Moc3RydWN0IGk5MTVfcmVxdWVz
dCAqcmVxdWVzdCwgdTMyICpjcykKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19wYXJrKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAljYW5jZWxfdGltZXIoJmVuZ2luZS0+ZXhlY2xp
c3RzLnRpbWVyKTsKKwljYW5jZWxfdGltZXIoJmVuZ2luZS0+ZXhlY2xpc3RzLnByZWVtcHQpOwog
fQogCiB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKQEAgLTM2MDcsNyArMzY4Miw4IEBAIGludCBpbnRlbF9l
eGVjbGlzdHNfc3VibWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CiB7CiAJdGFza2xldF9pbml0KCZlbmdpbmUtPmV4ZWNsaXN0cy50YXNrbGV0LAogCQkgICAgIGV4
ZWNsaXN0c19zdWJtaXNzaW9uX3Rhc2tsZXQsICh1bnNpZ25lZCBsb25nKWVuZ2luZSk7Ci0JdGlt
ZXJfc2V0dXAoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyLCBleGVjbGlzdHNfc3VibWlzc2lvbl90
aW1lciwgMCk7CisJdGltZXJfc2V0dXAoJmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyLCBleGVjbGlz
dHNfdGltZXNsaWNlLCAwKTsKKwl0aW1lcl9zZXR1cCgmZW5naW5lLT5leGVjbGlzdHMucHJlZW1w
dCwgZXhlY2xpc3RzX3ByZWVtcHQsIDApOwogCiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfdmZ1bmNz
KGVuZ2luZSk7CiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfaXJxcyhlbmdpbmUpOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9scmMuYwppbmRleCAzZTlmMTUxODViNjUuLjIyNzRmMWE3NzU4
NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKQEAgLTE3MDYsNiArMTcw
NiwxMDUgQEAgc3RhdGljIGludCBsaXZlX3ByZWVtcHRfaGFuZyh2b2lkICphcmcpCiAJcmV0dXJu
IGVycjsKIH0KIAorc3RhdGljIGludCBsaXZlX3ByZWVtcHRfdGltZW91dCh2b2lkICphcmcpCit7
CisJc3RydWN0IGludGVsX2d0ICpndCA9IGFyZzsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Y3R4X2hpLCAqY3R4X2xvOworCXN0cnVjdCBpZ3Rfc3Bpbm5lciBzcGluX2xvOworCXN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwlpbnQg
ZXJyID0gLUVOT01FTTsKKworCS8qCisJICogQ2hlY2sgdGhhdCB3ZSBmb3JjZSBwcmVlbXB0aW9u
IHRvIG9jY3VyIGJ5IGNhbmNlbGxpbmcgdGhlIHByZXZpb3VzCisJICogY29udGV4dCBpZiBpdCBy
ZWZ1c2VzIHRvIHlpZWxkIHRoZSBHUFUuCisJICovCisJaWYgKCFDT05GSUdfRFJNX0k5MTVfUFJF
RU1QVF9USU1FT1VUKQorCQlyZXR1cm4gMDsKKworCWlmICghSEFTX0xPR0lDQUxfUklOR19QUkVF
TVBUSU9OKGd0LT5pOTE1KSkKKwkJcmV0dXJuIDA7CisKKwlpZiAoIWludGVsX2hhc19yZXNldF9l
bmdpbmUoZ3QpKQorCQlyZXR1cm4gMDsKKworCWlmIChpZ3Rfc3Bpbm5lcl9pbml0KCZzcGluX2xv
LCBndCkpCisJCXJldHVybiAtRU5PTUVNOworCisJY3R4X2hpID0ga2VybmVsX2NvbnRleHQoZ3Qt
Pmk5MTUpOworCWlmICghY3R4X2hpKQorCQlnb3RvIGVycl9zcGluX2xvOworCWN0eF9oaS0+c2No
ZWQucHJpb3JpdHkgPQorCQlJOTE1X1VTRVJfUFJJT1JJVFkoSTkxNV9DT05URVhUX01BWF9VU0VS
X1BSSU9SSVRZKTsKKworCWN0eF9sbyA9IGtlcm5lbF9jb250ZXh0KGd0LT5pOTE1KTsKKwlpZiAo
IWN0eF9sbykKKwkJZ290byBlcnJfY3R4X2hpOworCWN0eF9sby0+c2NoZWQucHJpb3JpdHkgPQor
CQlJOTE1X1VTRVJfUFJJT1JJVFkoSTkxNV9DT05URVhUX01JTl9VU0VSX1BSSU9SSVRZKTsKKwor
CWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LCBpZCkgeworCQl1bnNpZ25lZCBsb25nIHNhdmVk
X3RpbWVvdXQ7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJCWlmICghaW50ZWxfZW5n
aW5lX2hhc19wcmVlbXB0aW9uKGVuZ2luZSkpCisJCQljb250aW51ZTsKKworCQlycSA9IHNwaW5u
ZXJfY3JlYXRlX3JlcXVlc3QoJnNwaW5fbG8sIGN0eF9sbywgZW5naW5lLAorCQkJCQkgICAgTUlf
Tk9PUCk7IC8qIHByZWVtcHRpb24gZGlzYWJsZWQgKi8KKwkJaWYgKElTX0VSUihycSkpIHsKKwkJ
CWVyciA9IFBUUl9FUlIocnEpOworCQkJZ290byBlcnJfY3R4X2xvOworCQl9CisKKwkJaTkxNV9y
ZXF1ZXN0X2FkZChycSk7CisJCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJnNwaW5fbG8sIHJx
KSkgeworCQkJaW50ZWxfZ3Rfc2V0X3dlZGdlZChndCk7CisJCQllcnIgPSAtRUlPOworCQkJZ290
byBlcnJfY3R4X2xvOworCQl9CisKKwkJcnEgPSBpZ3RfcmVxdWVzdF9hbGxvYyhjdHhfaGksIGVu
Z2luZSk7CisJCWlmIChJU19FUlIocnEpKSB7CisJCQlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW5fbG8p
OworCQkJZXJyID0gUFRSX0VSUihycSk7CisJCQlnb3RvIGVycl9jdHhfbG87CisJCX0KKworCQkv
KiBGbHVzaCB0aGUgcHJldmlvdXMgQ1MgYWNrIGJlZm9yZSBjaGFuZ2luZyB0aW1lb3V0cyAqLwor
CQl3aGlsZSAoUkVBRF9PTkNFKGVuZ2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0pKQorCQkJY3B1
X3JlbGF4KCk7CisKKwkJc2F2ZWRfdGltZW91dCA9IGVuZ2luZS0+cHJvcHMucHJlZW1wdF90aW1l
b3V0X21zOworCQllbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tcyA9IDE7IC8qIGluIG1z
LCAtPiAxIGppZmZpZSAqLworCisJCWk5MTVfcmVxdWVzdF9nZXQocnEpOworCQlpOTE1X3JlcXVl
c3RfYWRkKHJxKTsKKworCQlpbnRlbF9lbmdpbmVfZmx1c2hfc3VibWlzc2lvbihlbmdpbmUpOwor
CQllbmdpbmUtPnByb3BzLnByZWVtcHRfdGltZW91dF9tcyA9IHNhdmVkX3RpbWVvdXQ7CisKKwkJ
aWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLCAwLCBIWiAvIDEwKSA8IDApIHsKKwkJCWludGVsX2d0
X3NldF93ZWRnZWQoZ3QpOworCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisJCQllcnIgPSAtRVRJ
TUU7CisJCQlnb3RvIGVycl9jdHhfbG87CisJCX0KKworCQlpZ3Rfc3Bpbm5lcl9lbmQoJnNwaW5f
bG8pOworCQlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKKwl9CisKKwllcnIgPSAwOworZXJyX2N0eF9s
bzoKKwlrZXJuZWxfY29udGV4dF9jbG9zZShjdHhfbG8pOworZXJyX2N0eF9oaToKKwlrZXJuZWxf
Y29udGV4dF9jbG9zZShjdHhfaGkpOworZXJyX3NwaW5fbG86CisJaWd0X3NwaW5uZXJfZmluaSgm
c3Bpbl9sbyk7CisJcmV0dXJuIGVycjsKK30KKwogc3RhdGljIGludCByYW5kb21fcmFuZ2Uoc3Ry
dWN0IHJuZF9zdGF0ZSAqcm5kLCBpbnQgbWluLCBpbnQgbWF4KQogewogCXJldHVybiBpOTE1X3By
YW5kb21fdTMyX21heF9zdGF0ZShtYXggLSBtaW4sIHJuZCkgKyBtaW47CkBAIC0yNjA3LDYgKzI3
MDYsNyBAQCBpbnQgaW50ZWxfZXhlY2xpc3RzX2xpdmVfc2VsZnRlc3RzKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KQogCQlTVUJURVNUKGxpdmVfc3VwcHJlc3Nfd2FpdF9wcmVlbXB0KSwK
IAkJU1VCVEVTVChsaXZlX2NoYWluX3ByZWVtcHQpLAogCQlTVUJURVNUKGxpdmVfcHJlZW1wdF9o
YW5nKSwKKwkJU1VCVEVTVChsaXZlX3ByZWVtcHRfdGltZW91dCksCiAJCVNVQlRFU1QobGl2ZV9w
cmVlbXB0X3Ntb2tlKSwKIAkJU1VCVEVTVChsaXZlX3ZpcnR1YWxfZW5naW5lKSwKIAkJU1VCVEVT
VChsaXZlX3ZpcnR1YWxfbWFzayksCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3BhcmFtcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wYXJhbXMuaAppbmRleCBk
MjlhZGUzYjdkZTYuLjU2MDU4OTc4YmIyNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9wYXJhbXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BhcmFtcy5o
CkBAIC02MSw3ICs2MSw3IEBAIHN0cnVjdCBkcm1fcHJpbnRlcjsKIAlwYXJhbShjaGFyICosIGRt
Y19maXJtd2FyZV9wYXRoLCBOVUxMKSBcCiAJcGFyYW0oaW50LCBtbWlvX2RlYnVnLCAtSVNfRU5B
QkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfTU1JTykpIFwKIAlwYXJhbShpbnQsIGVkcF92c3dp
bmcsIDApIFwKLQlwYXJhbShpbnQsIHJlc2V0LCAyKSBcCisJcGFyYW0oaW50LCByZXNldCwgMykg
XAogCXBhcmFtKHVuc2lnbmVkIGludCwgaW5qZWN0X2xvYWRfZmFpbHVyZSwgMCkgXAogCXBhcmFt
KGludCwgZmFzdGJvb3QsIC0xKSBcCiAJcGFyYW0oaW50LCBlbmFibGVfZHBjZF9iYWNrbGlnaHQs
IDApIFwKLS0gCjIuMjQuMC5yYzAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVk
ZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZv
L2ludGVsLWdmeA==

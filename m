Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id E27422A9AC9
	for <lists+intel-gfx@lfdr.de>; Fri,  6 Nov 2020 18:30:53 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 374136EAAD;
	Fri,  6 Nov 2020 17:30:52 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A482F6EAB1
 for <intel-gfx@lists.freedesktop.org>; Fri,  6 Nov 2020 17:30:51 +0000 (UTC)
IronPort-SDR: oArtcwKwwx7i140JJkTKr7lUMetiU2gCEaVHdn6M9WUnfIxbi0FlkG5RZeJjIR2r3oKwYkNkf7
 fTbSCKKm9dSA==
X-IronPort-AV: E=McAfee;i="6000,8403,9797"; a="169722535"
X-IronPort-AV: E=Sophos;i="5.77,457,1596524400"; d="scan'208";a="169722535"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 06 Nov 2020 09:30:51 -0800
IronPort-SDR: Olat9NcmLorSerxgFAiEzX5Bnf9ktyl2we3adJATNFfyVKzUjAa/1CvY10//QJEUo6oltv0hdw
 BwW+O6ydXC1A==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,457,1596524400"; d="scan'208";a="306918217"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga008.fm.intel.com with SMTP; 06 Nov 2020 09:30:49 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Fri, 06 Nov 2020 19:30:48 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  6 Nov 2020 19:30:38 +0200
Message-Id: <20201106173042.7534-3-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201106173042.7534-1-ville.syrjala@linux.intel.com>
References: <20201106173042.7534-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/6] drm/i915: Nuke
 intel_atomic_crtc_state_for_each_plane_state() from skl+ wm code
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KCmlu
dGVsX2F0b21pY19jcnRjX3N0YXRlX2Zvcl9lYWNoX3BsYW5lX3N0YXRlKCkgcGVla3MgYXQgdGhl
CnBsYW5lJ3MgY3VycmVudCBzdGF0ZSB3aXRob3V0IGhvbGRpbmcgdGhlIHBsYW5lJ3MgbXV0ZXgs
IHRydXN0aW5nCnRoYXQgdGhlIGNydGMncyBtdXRleCB3aWxsIHByb3RlY3QgaXQuIEluIHByYWN0
aWNlIHRoYXQgZG9lcyB3b3JrCnNpbmNlIG91ciBwbGFuZXMgY2FuJ3QgbW92ZSBiZXR3ZWVuIHBp
cGVzLCBidXQgaXQgc2V0cyBhIGJhZApleGFtcGxlLiBpbnRlbF9hdG9taWNfY3J0Y19zdGF0ZV9m
b3JfZWFjaF9wbGFuZV9zdGF0ZSgpIGFsc28KcmVsaWVzIG9uIGNydGNfc3RhdGUudWFwaS5wbGFu
ZV9tYXNrIHdoaWNoIG1heSBiZSBmdWxsIG9mIGxpZXMKd2hlbiBpdCBjb21lcyB0byB0aGUgYmln
am9pbmVyIHN0dWZmLCBzbyBzb29uIHdlIGNhbid0IHVzZSBpdCBhcwppcyBhbnl3YXkuIFNvIGJl
c3QgdG8ganVzdCBnZXQgcmlkIG9mIGl0IGVudGlyZWx5LiBXaGljaCB3ZSBjYW4KZWFzaWx5IGRv
IGJ5IHN3aXRjaGluZyB0byB0aGUgZzR4L3ZsdiAicmF3IiB3YXRlcm1hcmsgYXBwcm9hY2guCgpM
YXRlciBvbiB3ZSBzaG91bGQgZXZlbiBiZSBhYmxlIHRvIG1vdmUgdGhlICJyYXciIHdhdGVybWFy
awpjb21wdXRhdGlvbiBpbnRvIHRoZSBub3JtYWwgLnBsYW5lX2NoZWNrKCkgY29kZSwgbGVhdmlu
ZyBvbmx5CnRoZSBtZXJnaW5nL2NsYW1waW5nIG9mIHRoZSBmaW5hbCB3YXRlcm1hcmtzIHRvIHRo
ZSBsYXRlcgpzdGFnZXMuIEJ1dCB0aGF0IHdpbGwgcmVxdWlyZSBhZGp1c3RpbmcgdGhlIGlsaysg
d20gY29kZQpzaW1pbGFybHkgYXMgd2VsbC4KClNpZ25lZC1vZmYtYnk6IFZpbGxlIFN5cmrDpGzD
pCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogLi4uL2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfcG0uYyAgICAgICAgICAgICAgIHwgNDEgKysrKysrKysrKystLS0tLS0tLQogMiBmaWxl
cyBjaGFuZ2VkLCAyNyBpbnNlcnRpb25zKCspLCAxNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IGY2
ZjA2MjY2NDllMC4uNmIyNDk5NjljMzk0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtNzU1LDYgKzc1NSw4IEBAIHN0cnVj
dCBpbnRlbF9jcnRjX3dtX3N0YXRlIHsKIAkJfSBpbGs7CiAKIAkJc3RydWN0IHsKKwkJCS8qICJy
YXciIHdhdGVybWFya3MgKi8KKwkJCXN0cnVjdCBza2xfcGlwZV93bSByYXc7CiAJCQkvKiBnZW45
KyBvbmx5IG5lZWRzIDEtc3RlcCB3bSBwcm9ncmFtbWluZyAqLwogCQkJc3RydWN0IHNrbF9waXBl
X3dtIG9wdGltYWw7CiAJCQlzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSBkZGI7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfcG0uYwppbmRleCBlOWFjNmYxYTVkMjguLjg1YjRiZmIwMmUyZSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9wbS5jCkBAIC01NDgwLDcgKzU0ODAsNyBAQCBzdGF0aWMgaW50IHNrbF9idWlsZF9wbGFu
ZV93bV9zaW5nbGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiB7CiAJc3Ry
dWN0IGludGVsX2NydGMgKmNydGMgPSB0b19pbnRlbF9jcnRjKGNydGNfc3RhdGUtPnVhcGkuY3J0
Yyk7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5i
YXNlLmRldik7Ci0Jc3RydWN0IHNrbF9wbGFuZV93bSAqd20gPSAmY3J0Y19zdGF0ZS0+d20uc2ts
Lm9wdGltYWwucGxhbmVzW3BsYW5lX2lkXTsKKwlzdHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9ICZj
cnRjX3N0YXRlLT53bS5za2wucmF3LnBsYW5lc1twbGFuZV9pZF07CiAJc3RydWN0IHNrbF93bV9w
YXJhbXMgd21fcGFyYW1zOwogCWludCByZXQ7CiAKQEAgLTU1MDMsNyArNTUwMyw3IEBAIHN0YXRp
YyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtX3V2KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCQkJCSBjb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRl
LAogCQkJCSBlbnVtIHBsYW5lX2lkIHBsYW5lX2lkKQogewotCXN0cnVjdCBza2xfcGxhbmVfd20g
KndtID0gJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07CisJc3Ry
dWN0IHNrbF9wbGFuZV93bSAqd20gPSAmY3J0Y19zdGF0ZS0+d20uc2tsLnJhdy5wbGFuZXNbcGxh
bmVfaWRdOwogCXN0cnVjdCBza2xfd21fcGFyYW1zIHdtX3BhcmFtczsKIAlpbnQgcmV0OwogCkBA
IC01NTI0LDEwICs1NTI0LDEzIEBAIHN0YXRpYyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkJICAgICAgY29uc3Qgc3RydWN0IGlu
dGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBs
YW5lID0gdG9faW50ZWxfcGxhbmUocGxhbmVfc3RhdGUtPnVhcGkucGxhbmUpOwotCWNvbnN0IHN0
cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmh3LmZiOwogCWVudW0gcGxh
bmVfaWQgcGxhbmVfaWQgPSBwbGFuZS0+aWQ7CisJc3RydWN0IHNrbF9wbGFuZV93bSAqd20gPSAm
Y3J0Y19zdGF0ZS0+d20uc2tsLnJhdy5wbGFuZXNbcGxhbmVfaWRdOworCWNvbnN0IHN0cnVjdCBk
cm1fZnJhbWVidWZmZXIgKmZiID0gcGxhbmVfc3RhdGUtPmh3LmZiOwogCWludCByZXQ7CiAKKwlt
ZW1zZXQod20sIDAsIHNpemVvZigqd20pKTsKKwogCWlmICghaW50ZWxfd21fcGxhbmVfdmlzaWJs
ZShjcnRjX3N0YXRlLCBwbGFuZV9zdGF0ZSkpCiAJCXJldHVybiAwOwogCkBAIC01NTQ5LDEwICs1
NTUyLDE0IEBAIHN0YXRpYyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtKHN0cnVjdCBpbnRlbF9jcnRj
X3N0YXRlICpjcnRjX3N0YXRlLAogc3RhdGljIGludCBpY2xfYnVpbGRfcGxhbmVfd20oc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50
ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOwotCWVudW0g
cGxhbmVfaWQgcGxhbmVfaWQgPSB0b19pbnRlbF9wbGFuZShwbGFuZV9zdGF0ZS0+dWFwaS5wbGFu
ZSktPmlkOworCXN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUgPSB0b19pbnRlbF9wbGFuZShwbGFu
ZV9zdGF0ZS0+dWFwaS5wbGFuZSk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdG9faTkxNShwbGFuZS0+YmFzZS5kZXYpOworCWVudW0gcGxhbmVfaWQgcGxhbmVfaWQgPSBw
bGFuZS0+aWQ7CisJc3RydWN0IHNrbF9wbGFuZV93bSAqd20gPSAmY3J0Y19zdGF0ZS0+d20uc2ts
LnJhdy5wbGFuZXNbcGxhbmVfaWRdOwogCWludCByZXQ7CiAKKwltZW1zZXQod20sIDAsIHNpemVv
Zigqd20pKTsKKwogCS8qIFdhdGVybWFya3MgY2FsY3VsYXRlZCBpbiBtYXN0ZXIgKi8KIAlpZiAo
cGxhbmVfc3RhdGUtPnBsYW5hcl9zbGF2ZSkKIAkJcmV0dXJuIDA7CkBAIC01NTkxLDE5ICs1NTk4
LDE4IEBAIHN0YXRpYyBpbnQgc2tsX2J1aWxkX3BpcGVfd20oc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUsCiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShjcnRjLT5iYXNlLmRldik7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUg
PQogCQlpbnRlbF9hdG9taWNfZ2V0X25ld19jcnRjX3N0YXRlKHN0YXRlLCBjcnRjKTsKLQlzdHJ1
Y3Qgc2tsX3BpcGVfd20gKnBpcGVfd20gPSAmY3J0Y19zdGF0ZS0+d20uc2tsLm9wdGltYWw7Ci0J
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVfc3Rh
dGUgKnBsYW5lX3N0YXRlOwotCWludCByZXQ7CisJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsK
KwlpbnQgcmV0LCBpOwogCi0JLyoKLQkgKiBXZSdsbCBvbmx5IGNhbGN1bGF0ZSB3YXRlcm1hcmtz
IGZvciBwbGFuZXMgdGhhdCBhcmUgYWN0dWFsbHkKLQkgKiBlbmFibGVkLCBzbyBtYWtlIHN1cmUg
YWxsIG90aGVyIHBsYW5lcyBhcmUgc2V0IGFzIGRpc2FibGVkLgotCSAqLwotCW1lbXNldChwaXBl
X3dtLT5wbGFuZXMsIDAsIHNpemVvZihwaXBlX3dtLT5wbGFuZXMpKTsKLQotCWludGVsX2F0b21p
Y19jcnRjX3N0YXRlX2Zvcl9lYWNoX3BsYW5lX3N0YXRlKHBsYW5lLCBwbGFuZV9zdGF0ZSwKLQkJ
CQkJCSAgICAgY3J0Y19zdGF0ZSkgeworCWZvcl9lYWNoX25ld19pbnRlbF9wbGFuZV9pbl9zdGF0
ZShzdGF0ZSwgcGxhbmUsIHBsYW5lX3N0YXRlLCBpKSB7CisJCS8qCisJCSAqIEZJWE1FIHNob3Vs
ZCBwZXJoYXBzIGNoZWNrIHtvbGQsbmV3fV9wbGFuZV9jcnRjLT5ody5jcnRjCisJCSAqIGluc3Rl
YWQgYnV0IHdlIGRvbid0IHBvcHVsYXRlIHRoYXQgY29ycmVjdGx5IGZvciBOVjEyIFkKKwkJICog
cGxhbmVzIHNvIGZvciBub3cgaGFjayB0aGlzLgorCQkgKi8KKwkJaWYgKHBsYW5lLT5waXBlICE9
IGNydGMtPnBpcGUpCisJCQljb250aW51ZTsKIAogCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+
PSAxMSkKIAkJCXJldCA9IGljbF9idWlsZF9wbGFuZV93bShjcnRjX3N0YXRlLCBwbGFuZV9zdGF0
ZSk7CkBAIC01NjEzLDYgKzU2MTksOCBAQCBzdGF0aWMgaW50IHNrbF9idWlsZF9waXBlX3dtKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkJcmV0dXJuIHJldDsKIAl9CiAKKwlj
cnRjX3N0YXRlLT53bS5za2wub3B0aW1hbCA9IGNydGNfc3RhdGUtPndtLnNrbC5yYXc7CisKIAly
ZXR1cm4gMDsKIH0KIApAQCAtNjI3Myw2ICs2MjgxLDcgQEAgdm9pZCBza2xfd21fZ2V0X2h3X3N0
YXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJY3J0Y19zdGF0ZSA9IHRv
X2ludGVsX2NydGNfc3RhdGUoY3J0Yy0+YmFzZS5zdGF0ZSk7CiAKIAkJc2tsX3BpcGVfd21fZ2V0
X2h3X3N0YXRlKGNydGMsICZjcnRjX3N0YXRlLT53bS5za2wub3B0aW1hbCk7CisJCWNydGNfc3Rh
dGUtPndtLnNrbC5yYXcgPSBjcnRjX3N0YXRlLT53bS5za2wub3B0aW1hbDsKIAl9CiAKIAlpZiAo
ZGV2X3ByaXYtPmFjdGl2ZV9waXBlcykgewotLSAKMi4yNi4yCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVs
LWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

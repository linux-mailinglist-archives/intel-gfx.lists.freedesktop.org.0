Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id BF60E19FA27
	for <lists+intel-gfx@lfdr.de>; Mon,  6 Apr 2020 18:33:04 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C96F16E437;
	Mon,  6 Apr 2020 16:33:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 01AE96E434;
 Mon,  6 Apr 2020 16:32:59 +0000 (UTC)
IronPort-SDR: uD5dOg9Yr/qjbCFAovjY51n/KdAexRtzr3MWVZVoMFS8zKqq1cntELvGbgHt8H3UqdJXtN79Ao
 Bi+jtzReRHCQ==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 06 Apr 2020 09:32:59 -0700
IronPort-SDR: OnkcOkGlryZo+2dEvWopLYLYQEEmM3K+UOOtswlq3OXtICnYOydCOcF+k6f+k75DJCEHo+CtE0
 MT0kUpupavSg==
X-IronPort-AV: E=Sophos;i="5.72,351,1580803200"; d="scan'208";a="254163431"
Received: from jkrzyszt-desk.igk.intel.com ([172.22.244.18])
 by orsmga006-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 06 Apr 2020 09:32:58 -0700
From: Janusz Krzysztofik <janusz.krzysztofik@linux.intel.com>
To: Arkadiusz Hiler <arkadiusz.hiler@intel.com>,
 Petri Latvala <petri.latvala@intel.com>
Date: Mon,  6 Apr 2020 18:32:37 +0200
Message-Id: <20200406163237.28293-3-janusz.krzysztofik@linux.intel.com>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200406163237.28293-1-janusz.krzysztofik@linux.intel.com>
References: <20200406163237.28293-1-janusz.krzysztofik@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t v2 2/2] tests/gem_userptr_blits: Refresh
 other still MMAP_GTT dependent subtests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org, intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RXh0ZW5kIGluaXRpYWwgY2hlY2sgZm9yIHN1cHBvcnQgb2YgTU1BUF9HVFQgbWFwcGluZyB0byB1
c2VycHRyIHdpdGgKZXF1aXZhbGVudCBjaGVja3MgZm9yIGVhY2ggTU1BUF9PRkZTRVQgbWFwcGlu
ZyB0eXBlIHN1cHBvcnRlZCBieSBpOTE1CmRyaXZlci4gIEJhc2VkIG9uIHRoYXQsIGV4dGVuZCBj
b3ZlcmFnZSBvZiBwcm9jZXNzLWV4aXQtZ3R0KiBzdWJ0ZXN0cwpvdmVyIG5vbi1HVFQgbWFwcGlu
ZyB0eXBlcy4gIEluIGNhc2Ugb2YgZG1hYnVmLSogc3VidGVzdHMsIHVzZSBmaXJzdApzdXBwb3J0
ZWQgbWFwcGluZyB0eXBlIGlmIHRoZXJlIGFyZSBhbnkuCgp2MjogQ2xlYXIgJ21hcCcgYmVmb3Jl
IHJldXNlIChaYmlnbmlldykuCgpTaWduZWQtb2ZmLWJ5OiBKYW51c3ogS3J6eXN6dG9maWsgPGph
bnVzei5rcnp5c3p0b2Zpa0BsaW51eC5pbnRlbC5jb20+ClJldmlld2VkLWJ5OiBaYmlnbmlldyBL
ZW1wY3p5xYRza2kgPHpiaWduaWV3LmtlbXBjenluc2tpQGludGVsLmNvbT4KLS0tCiB0ZXN0cy9p
OTE1L2dlbV91c2VycHRyX2JsaXRzLmMgfCAxMTEgKysrKysrKysrKysrKysrKysrKysrKysrLS0t
LS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgODEgaW5zZXJ0aW9ucygrKSwgMzAgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvdGVzdHMvaTkxNS9nZW1fdXNlcnB0cl9ibGl0cy5jIGIvdGVzdHMvaTkx
NS9nZW1fdXNlcnB0cl9ibGl0cy5jCmluZGV4IDk3NWNkOWRhYi4uOWI4MGNmNjM0IDEwMDY0NAot
LS0gYS90ZXN0cy9pOTE1L2dlbV91c2VycHRyX2JsaXRzLmMKKysrIGIvdGVzdHMvaTkxNS9nZW1f
dXNlcnB0cl9ibGl0cy5jCkBAIC03MywxOCArNzMsMzEgQEAKIAogc3RhdGljIHVpbnQzMl90IHVz
ZXJwdHJfZmxhZ3MgPSBMT0NBTF9JOTE1X1VTRVJQVFJfVU5TWU5DSFJPTklaRUQ7CiAKLXN0YXRp
YyBib29sIGNhbl9ndHRfbW1hcDsKK3N0YXRpYyBib29sICpjYW5fbW1hcDsKIAogI2RlZmluZSBX
SURUSCA1MTIKICNkZWZpbmUgSEVJR0hUIDUxMgogCiBzdGF0aWMgdWludDMyX3QgbGluZWFyW1dJ
RFRIKkhFSUdIVF07CiAKLXN0YXRpYyBib29sIGhhc19ndHRfbW1hcChpbnQgaTkxNSkKK3N0YXRp
YyBib29sIGhhc19tbWFwKGludCBpOTE1LCBjb25zdCBzdHJ1Y3QgbW1hcF9vZmZzZXQgKnQpCiB7
Ci0Jdm9pZCAqcHRyLCAqbWFwID0gTlVMTDsKKwl2b2lkICpwdHIsICptYXA7CiAJdWludDMyX3Qg
aGFuZGxlOwogCisJaGFuZGxlID0gZ2VtX2NyZWF0ZShpOTE1LCBQQUdFX1NJWkUpOworCW1hcCA9
IF9fZ2VtX21tYXBfb2Zmc2V0KGk5MTUsIGhhbmRsZSwgMCwgUEFHRV9TSVpFLCBQUk9UX1dSSVRF
LAorCQkJCXQtPnR5cGUpOworCWdlbV9jbG9zZShpOTE1LCBoYW5kbGUpOworCWlmIChtYXApIHsK
KwkJbXVubWFwKG1hcCwgUEFHRV9TSVpFKTsKKwl9IGVsc2UgeworCQlpZ3RfZGVidWcoIm5vIEhX
IC8ga2VybmVsIHN1cHBvcnQgZm9yIG1tYXAtb2Zmc2V0KCVzKVxuIiwKKwkJCSAgdC0+bmFtZSk7
CisJCXJldHVybiBmYWxzZTsKKwl9CisJbWFwID0gTlVMTDsKKwogCWlndF9hc3NlcnQocG9zaXhf
bWVtYWxpZ24oJnB0ciwgUEFHRV9TSVpFLCBQQUdFX1NJWkUpID09IDApOwogCiAJaWYgKF9fZ2Vt
X3VzZXJwdHIoaTkxNSwgcHRyLCA0MDk2LCAwLApAQCAtOTIsOSArMTA1LDEyIEBAIHN0YXRpYyBi
b29sIGhhc19ndHRfbW1hcChpbnQgaTkxNSkKIAkJZ290byBvdXRfcHRyOwogCWlndF9hc3NlcnQo
aGFuZGxlICE9IDApOwogCi0JbWFwID0gX19nZW1fbW1hcF9fZ3R0KGk5MTUsIGhhbmRsZSwgNDA5
NiwgUFJPVF9XUklURSk7CisJbWFwID0gX19nZW1fbW1hcF9vZmZzZXQoaTkxNSwgaGFuZGxlLCAw
LCA0MDk2LCBQUk9UX1dSSVRFLCB0LT50eXBlKTsKIAlpZiAobWFwKQogCQltdW5tYXAobWFwLCA0
MDk2KTsKKwllbHNlIGlmIChlcnJubyA9PSBFTk9ERVYpCisJCWlndF9kZWJ1ZygibW1hcC1vZmZz
ZXQoJXMpIGJhbm5lZCwgbG9ja2RlcCBsb29wIHByZXZlbnRpb25cbiIsCisJCQkgIHQtPm5hbWUp
OwogCiAJZ2VtX2Nsb3NlKGk5MTUsIGhhbmRsZSk7CiBvdXRfcHRyOgpAQCAtNjQyLDIwICs2NTgs
MjUgQEAgc3RhdGljIGludCB0ZXN0X2ludmFsaWRfbWFwcGluZyhpbnQgZmQsIGNvbnN0IHN0cnVj
dCBtbWFwX29mZnNldCAqdCkKIAlyZXR1cm4gMDsKIH0KIAotI2RlZmluZSBQRV9HVFRfTUFQIDB4
MQotI2RlZmluZSBQRV9CVVNZIDB4Mgotc3RhdGljIHZvaWQgdGVzdF9wcm9jZXNzX2V4aXQoaW50
IGZkLCBpbnQgZmxhZ3MpCisjZGVmaW5lIFBFX0JVU1kgMHgxCitzdGF0aWMgdm9pZCB0ZXN0X3By
b2Nlc3NfZXhpdChpbnQgZmQsIGNvbnN0IHN0cnVjdCBtbWFwX29mZnNldCAqbW1vLCBpbnQgZmxh
Z3MpCiB7Ci0JaWYgKGZsYWdzICYgUEVfR1RUX01BUCkKLQkJaWd0X3JlcXVpcmUoY2FuX2d0dF9t
bWFwKTsKKwlpZiAobW1vKQorCQlpZ3RfcmVxdWlyZV9mKGNhbl9tbWFwW21tby0+dHlwZV0sCisJ
CQkgICAgICAiSFcgJiBrZXJuZWwgc3VwcG9ydCBmb3IgTExDIGFuZCBtbWFwLW9mZnNldCglcykg
b3ZlciB1c2VycHRyXG4iLAorCQkJICAgICAgbW1vLT5uYW1lKTsKIAogCWlndF9mb3JrKGNoaWxk
LCAxKSB7CiAJCXVpbnQzMl90IGhhbmRsZTsKIAogCQloYW5kbGUgPSBjcmVhdGVfdXNlcnB0cl9i
byhmZCwgc2l6ZW9mKGxpbmVhcikpOwogCi0JCWlmIChmbGFncyAmIFBFX0dUVF9NQVApIHsKLQkJ
CXVpbnQzMl90ICpwdHIgPSBfX2dlbV9tbWFwX19ndHQoZmQsIGhhbmRsZSwgc2l6ZW9mKGxpbmVh
ciksIFBST1RfUkVBRCB8IFBST1RfV1JJVEUpOworCQlpZiAobW1vKSB7CisJCQl1aW50MzJfdCAq
cHRyOworCisJCQlwdHIgPSBfX2dlbV9tbWFwX29mZnNldChmZCwgaGFuZGxlLCAwLCBzaXplb2Yo
bGluZWFyKSwKKwkJCQkJCVBST1RfUkVBRCB8IFBST1RfV1JJVEUsCisJCQkJCQltbW8tPnR5cGUp
OwogCQkJaWYgKHB0cikKIAkJCQkqcHRyID0gMDsKIAkJfQpAQCAtOTMzLDEzICs5NTQsMTQgQEAg
c3RhdGljIHZvaWQgKCogdm9sYXRpbGUgb3JpZ19zaWdidXMpKGludCBzaWcsIHNpZ2luZm9fdCAq
aW5mbywgdm9pZCAqcGFyYW0pOwogc3RhdGljIHZvbGF0aWxlIHVuc2lnbmVkIGxvbmcgc2lnYnVz
X3N0YXJ0Owogc3RhdGljIHZvbGF0aWxlIGxvbmcgc2lnYnVzX2NudCA9IC0xOwogCi1zdGF0aWMg
dm9pZCAqdW1hcChpbnQgZmQsIHVpbnQzMl90IGhhbmRsZSkKK3N0YXRpYyB2b2lkICp1bWFwKGlu
dCBmZCwgdWludDMyX3QgaGFuZGxlLCBjb25zdCBzdHJ1Y3QgbW1hcF9vZmZzZXQgKm1tbykKIHsK
IAl2b2lkICpwdHI7CiAKLQlpZiAoY2FuX2d0dF9tbWFwKSB7Ci0JCXB0ciA9IGdlbV9tbWFwX19n
dHQoZmQsIGhhbmRsZSwgc2l6ZW9mKGxpbmVhciksCi0JCQkJICAgIFBST1RfUkVBRCB8IFBST1Rf
V1JJVEUpOworCWlmIChtbW8pIHsKKwkJcHRyID0gX19nZW1fbW1hcF9vZmZzZXQoZmQsIGhhbmRs
ZSwgMCwgc2l6ZW9mKGxpbmVhciksCisJCQkJCVBST1RfUkVBRCB8IFBST1RfV1JJVEUsIG1tby0+
dHlwZSk7CisJCWlndF9hc3NlcnQocHRyKTsKIAl9IGVsc2UgewogCQl1aW50MzJfdCB0bXAgPSBn
ZW1fY3JlYXRlKGZkLCBzaXplb2YobGluZWFyKSk7CiAJCWlndF9hc3NlcnRfZXEoY29weShmZCwg
dG1wLCBoYW5kbGUpLCAwKTsKQEAgLTk1MSwxNiArOTczLDE3IEBAIHN0YXRpYyB2b2lkICp1bWFw
KGludCBmZCwgdWludDMyX3QgaGFuZGxlKQogfQogCiBzdGF0aWMgdm9pZAotY2hlY2tfYm8oaW50
IGZkMSwgdWludDMyX3QgaGFuZGxlMSwgaW50IGlzX3VzZXJwdHIsIGludCBmZDIsIHVpbnQzMl90
IGhhbmRsZTIpCitjaGVja19ibyhpbnQgZmQxLCB1aW50MzJfdCBoYW5kbGUxLCBpbnQgaXNfdXNl
cnB0ciwgaW50IGZkMiwgdWludDMyX3QgaGFuZGxlMiwKKwkgY29uc3Qgc3RydWN0IG1tYXBfb2Zm
c2V0ICptbW8pCiB7CiAJdW5zaWduZWQgY2hhciAqcHRyMSwgKnB0cjI7CiAJdW5zaWduZWQgbG9u
ZyBzaXplID0gc2l6ZW9mKGxpbmVhcik7CiAKLQlwdHIyID0gdW1hcChmZDIsIGhhbmRsZTIpOwor
CXB0cjIgPSB1bWFwKGZkMiwgaGFuZGxlMiwgbW1vKTsKIAlpZiAoaXNfdXNlcnB0cikKIAkJcHRy
MSA9IGlzX3VzZXJwdHIgPiAwID8gZ2V0X2hhbmRsZV9wdHIoaGFuZGxlMSkgOiBwdHIyOwogCWVs
c2UKLQkJcHRyMSA9IHVtYXAoZmQxLCBoYW5kbGUxKTsKKwkJcHRyMSA9IHVtYXAoZmQxLCBoYW5k
bGUxLCBtbW8pOwogCiAJaWd0X2Fzc2VydChwdHIxKTsKIAlpZ3RfYXNzZXJ0KHB0cjIpOwpAQCAt
OTY4LDcgKzk5MSw3IEBAIGNoZWNrX2JvKGludCBmZDEsIHVpbnQzMl90IGhhbmRsZTEsIGludCBp
c191c2VycHRyLCBpbnQgZmQyLCB1aW50MzJfdCBoYW5kbGUyKQogCXNpZ2J1c19zdGFydCA9ICh1
bnNpZ25lZCBsb25nKXB0cjI7CiAJaWd0X2Fzc2VydChtZW1jbXAocHRyMSwgcHRyMiwgc2l6ZW9m
KGxpbmVhcikpID09IDApOwogCi0JaWYgKGNhbl9ndHRfbW1hcCkgeworCWlmIChtbW8pIHsKIAkJ
Y291bnRlcisrOwogCQltZW1zZXQocHRyMSwgY291bnRlciwgc2l6ZSk7CiAJCW1lbXNldChwdHIy
LCBjb3VudGVyLCBzaXplKTsKQEAgLTEwMjYsOSArMTA0OSwxNyBAQCBzdGF0aWMgaW50IHRlc3Rf
ZG1hYnVmKHZvaWQpCiAJdWludDMyX3QgaGFuZGxlLCBoYW5kbGVfaW1wb3J0OwogCWludCBkbWFf
YnVmX2ZkID0gLTE7CiAJaW50IHJldDsKKwljb25zdCBzdHJ1Y3QgbW1hcF9vZmZzZXQgKm1tbyA9
IE5VTEw7CiAKIAlmZDEgPSBkcm1fb3Blbl9kcml2ZXIoRFJJVkVSX0lOVEVMKTsKIAorCWZvcl9l
YWNoX21tYXBfb2Zmc2V0X3R5cGUoZmQxLCB0KQorCQlpZiAoY2FuX21tYXBbdC0+dHlwZV0pIHsK
KwkJCWlndF9kZWJ1ZygidXNpbmcgbW1hcC1vZmZzZXQoJXMpXG4iLCB0LT5uYW1lKTsKKwkJCW1t
byA9IHQ7CisJCQlicmVhazsKKwl9CisKIAloYW5kbGUgPSBjcmVhdGVfdXNlcnB0cl9ibyhmZDEs
IHNpemVvZihsaW5lYXIpKTsKIAltZW1zZXQoZ2V0X2hhbmRsZV9wdHIoaGFuZGxlKSwgY291bnRl
ciwgc2l6ZW9mKGxpbmVhcikpOwogCkBAIC0xMDQ1LDE3ICsxMDc2LDE3IEBAIHN0YXRpYyBpbnQg
dGVzdF9kbWFidWYodm9pZCkKIAogCWZkMiA9IGRybV9vcGVuX2RyaXZlcihEUklWRVJfSU5URUwp
OwogCWhhbmRsZV9pbXBvcnQgPSBwcmltZV9mZF90b19oYW5kbGUoZmQyLCBkbWFfYnVmX2ZkKTsK
LQljaGVja19ibyhmZDEsIGhhbmRsZSwgMSwgZmQyLCBoYW5kbGVfaW1wb3J0KTsKKwljaGVja19i
byhmZDEsIGhhbmRsZSwgMSwgZmQyLCBoYW5kbGVfaW1wb3J0LCBtbW8pOwogCiAJLyogY2xvc2Ug
ZG1hX2J1ZiwgY2hlY2sgd2hldGhlciBub3RoaW5nIGRpc2FwcGVhcnMuICovCiAJY2xvc2UoZG1h
X2J1Zl9mZCk7Ci0JY2hlY2tfYm8oZmQxLCBoYW5kbGUsIDEsIGZkMiwgaGFuZGxlX2ltcG9ydCk7
CisJY2hlY2tfYm8oZmQxLCBoYW5kbGUsIDEsIGZkMiwgaGFuZGxlX2ltcG9ydCwgbW1vKTsKIAog
CS8qIGRlc3Ryb3kgdXNlcnB0ciBvYmplY3QgYW5kIGV4cGVjdCBTSUdCVVMgKi8KIAlmcmVlX3Vz
ZXJwdHJfYm8oZmQxLCBoYW5kbGUpOwogCWNsb3NlKGZkMSk7CiAKLQlpZiAoY2FuX2d0dF9tbWFw
KSB7CisJaWYgKG1tbykgewogCQlzdHJ1Y3Qgc2lnYWN0aW9uIHNpZ2FjdCwgb3JpZ19zaWdhY3Q7
CiAKIAkJbWVtc2V0KCZzaWdhY3QsIDAsIHNpemVvZihzaWdhY3QpKTsKQEAgLTEwNjcsNyArMTA5
OCw3IEBAIHN0YXRpYyBpbnQgdGVzdF9kbWFidWYodm9pZCkKIAkJb3JpZ19zaWdidXMgPSBvcmln
X3NpZ2FjdC5zYV9zaWdhY3Rpb247CiAKIAkJc2lnYnVzX2NudCA9IDA7Ci0JCWNoZWNrX2JvKGZk
MiwgaGFuZGxlX2ltcG9ydCwgLTEsIGZkMiwgaGFuZGxlX2ltcG9ydCk7CisJCWNoZWNrX2JvKGZk
MiwgaGFuZGxlX2ltcG9ydCwgLTEsIGZkMiwgaGFuZGxlX2ltcG9ydCwgbW1vKTsKIAkJaWd0X2Fz
c2VydChzaWdidXNfY250ID4gMCk7CiAKIAkJcmV0ID0gc2lnYWN0aW9uKFNJR0JVUywgJm9yaWdf
c2lnYWN0LCBOVUxMKTsKQEAgLTIwMzAsMTIgKzIwNjEsMjMgQEAgaWd0X21haW5fYXJncygiYzoi
LCBOVUxMLCBoZWxwX3N0ciwgb3B0X2hhbmRsZXIsIE5VTEwpCiAJaW50IHNpemUgPSBzaXplb2Yo
bGluZWFyKTsKIAogCWlndF9maXh0dXJlIHsKKwkJdW5zaWduZWQgaW50IG1tb19tYXggPSAwOwor
CiAJCWZkID0gZHJtX29wZW5fZHJpdmVyKERSSVZFUl9JTlRFTCk7CiAJCWlndF9hc3NlcnQoZmQg
Pj0gMCk7CiAJCWlndF9yZXF1aXJlX2dlbShmZCk7CiAJCWdlbV9yZXF1aXJlX2JsaXR0ZXIoZmQp
OwogCi0JCWNhbl9ndHRfbW1hcCA9IGhhc19ndHRfbW1hcChmZCkgJiYgZ2VtX2hhc19sbGMoZmQp
OworCQlmb3JfZWFjaF9tbWFwX29mZnNldF90eXBlKGZkLCB0KQorCQkJaWYgKHQtPnR5cGUgPj0g
bW1vX21heCkKKwkJCQltbW9fbWF4ID0gdC0+dHlwZSArIDE7CisJCWlndF9hc3NlcnQobW1vX21h
eCk7CisKKwkJY2FuX21tYXAgPSBjYWxsb2MobW1vX21heCwgc2l6ZW9mKCpjYW5fbW1hcCkpOwor
CQlpZ3RfYXNzZXJ0KGNhbl9tbWFwKTsKKworCQlmb3JfZWFjaF9tbWFwX29mZnNldF90eXBlKGZk
LCB0KQorCQkJY2FuX21tYXBbdC0+dHlwZV0gPSBoYXNfbW1hcChmZCwgdCkgJiYgZ2VtX2hhc19s
bGMoZmQpOwogCiAJCXNpemUgPSBzaXplb2YobGluZWFyKTsKIApAQCAtMjE5MywxNiArMjIzNSwy
MiBAQCBpZ3RfbWFpbl9hcmdzKCJjOiIsIE5VTEwsIGhlbHBfc3RyLCBvcHRfaGFuZGxlciwgTlVM
TCkKIAkJfQogCiAJCWlndF9zdWJ0ZXN0KCJwcm9jZXNzLWV4aXQiKQotCQkJdGVzdF9wcm9jZXNz
X2V4aXQoZmQsIDApOworCQkJdGVzdF9wcm9jZXNzX2V4aXQoZmQsIE5VTEwsIDApOwogCi0JCWln
dF9zdWJ0ZXN0KCJwcm9jZXNzLWV4aXQtZ3R0IikKLQkJCXRlc3RfcHJvY2Vzc19leGl0KGZkLCBQ
RV9HVFRfTUFQKTsKKwkJaWd0X2Rlc2NyaWJlKCJUZXN0IHByb2Nlc3MgZXhpdCB3aXRoIHVzZXJw
dHIgb2JqZWN0IG1tYXBwZWQgdmlhIG1tYXAtb2Zmc2V0Iik7CisJCWlndF9zdWJ0ZXN0X3dpdGhf
ZHluYW1pYygicHJvY2Vzcy1leGl0LW1tYXAiKQorCQkJZm9yX2VhY2hfbW1hcF9vZmZzZXRfdHlw
ZShmZCwgdCkKKwkJCQlpZ3RfZHluYW1pYyh0LT5uYW1lKQorCQkJCQl0ZXN0X3Byb2Nlc3NfZXhp
dChmZCwgdCwgMCk7CiAKIAkJaWd0X3N1YnRlc3QoInByb2Nlc3MtZXhpdC1idXN5IikKLQkJCXRl
c3RfcHJvY2Vzc19leGl0KGZkLCBQRV9CVVNZKTsKKwkJCXRlc3RfcHJvY2Vzc19leGl0KGZkLCBO
VUxMLCBQRV9CVVNZKTsKIAotCQlpZ3Rfc3VidGVzdCgicHJvY2Vzcy1leGl0LWd0dC1idXN5IikK
LQkJCXRlc3RfcHJvY2Vzc19leGl0KGZkLCBQRV9HVFRfTUFQIHwgUEVfQlVTWSk7CisJCWlndF9k
ZXNjcmliZSgiVGVzdCBwcm9jZXNzIGV4aXQgd2l0aCBidXN5IHVzZXJwdHIgb2JqZWN0IG1tYXBw
ZWQgdmlhIG1tYXAtb2Zmc2V0Iik7CisJCWlndF9zdWJ0ZXN0X3dpdGhfZHluYW1pYygicHJvY2Vz
cy1leGl0LW1tYXAtYnVzeSIpCisJCQlmb3JfZWFjaF9tbWFwX29mZnNldF90eXBlKGZkLCB0KQor
CQkJCWlndF9keW5hbWljKHQtPm5hbWUpCisJCQkJCXRlc3RfcHJvY2Vzc19leGl0KGZkLCB0LCBQ
RV9CVVNZKTsKIAogCQlpZ3Rfc3VidGVzdCgiY3JlYXRlLWRlc3Ryb3ktc3luYyIpCiAJCQl0ZXN0
X2NyZWF0ZV9kZXN0cm95KGZkLCA1KTsKQEAgLTIzMjUsNCArMjM3Myw3IEBAIGlndF9tYWluX2Fy
Z3MoImM6IiwgTlVMTCwgaGVscF9zdHIsIG9wdF9oYW5kbGVyLCBOVUxMKQogCiAJaWd0X3N1YnRl
c3QoImFjY2Vzcy1jb250cm9sIikKIAkJdGVzdF9hY2Nlc3NfY29udHJvbChmZCk7CisKKwlpZ3Rf
Zml4dHVyZQorCQlmcmVlKGNhbl9tbWFwKTsKIH0KLS0gCjIuMjEuMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJ
bnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 2876477096
	for <lists+intel-gfx@lfdr.de>; Fri, 26 Jul 2019 19:51:53 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B545A6EE1A;
	Fri, 26 Jul 2019 17:51:50 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9AB106EE1A
 for <intel-gfx@lists.freedesktop.org>; Fri, 26 Jul 2019 17:51:49 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Jul 2019 10:51:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,311,1559545200"; d="scan'208";a="161375736"
Received: from dceraolo-linux.fm.intel.com (HELO [10.1.27.145]) ([10.1.27.145])
 by orsmga007.jf.intel.com with ESMTP; 26 Jul 2019 10:51:48 -0700
To: Michal Wajdeczko <michal.wajdeczko@intel.com>,
 intel-gfx@lists.freedesktop.org
References: <20190726155805.2736-1-michal.wajdeczko@intel.com>
 <02c08065-c0e8-a5b1-8bbe-5eb93c1a9e10@intel.com>
 <op.z5jqgrsdxaggs7@mwajdecz-mobl1.ger.corp.intel.com>
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Message-ID: <259e18c8-2822-f785-bfab-fd01a63efbb8@intel.com>
Date: Fri, 26 Jul 2019 10:51:35 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <op.z5jqgrsdxaggs7@mwajdecz-mobl1.ger.corp.intel.com>
Content-Language: en-US
Subject: Re: [Intel-gfx] [PATCH 1/3] drm/i915/uc: Remove redundant
 header_offset/size definitions
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

CgpPbiA3LzI2LzE5IDEwOjQ5IEFNLCBNaWNoYWwgV2FqZGVjemtvIHdyb3RlOgo+IE9uIEZyaSwg
MjYgSnVsIDIwMTkgMTk6MzM6MTggKzAyMDAsIERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gCj4gPGRh
bmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+IHdyb3RlOgo+IAo+Pgo+Pgo+PiBPbiA3LzI2
LzE5IDg6NTggQU0sIE1pY2hhbCBXYWpkZWN6a28gd3JvdGU6Cj4+PiBBY2NvcmRpbmcgdG8gRmly
bXdhcmUgbGF5b3V0IGRlZmluaXRpb24sIENTUyBoZWFkZXIgaXMgbG9jYXRlZAo+Pj4gaW4gZnJv
bnQgb2YgdGhlIGZpcm13YXJlIGJsb2IsIHNvIGhlYWRlciBvZmZzZXQgaXMgYWx3YXlzIDAuCj4+
PiBTaW1pbGFybHksIHNpemUgb2YgdGhlIENTUyBoZWFkZXIgaXMgY29uc3RhbnQgYW5kIGlzIDEy
OC4KPj4+IMKgV2hpbGUgaGVyZSwgbW92ZSB0eXBlL3N0YXR1cyBlbnVtcyB1cCBhbmQga2VlcCB0
aGVtIHRvZ2V0aGVyLgo+Pj4gwqBTaWduZWQtb2ZmLWJ5OiBNaWNoYWwgV2FqZGVjemtvIDxtaWNo
YWwud2FqZGVjemtvQGludGVsLmNvbT4KPj4+IENjOiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxk
YW5pZWxlLmNlcmFvbG9zcHVyaW9AaW50ZWwuY29tPgo+Pj4gLS0tCj4+PiDCoCBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19mdy5jwqDCoMKgwqAgfCAyMyArKysrKysrKy0tLS0t
LS0tLS0tLQo+Pj4gwqAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuaMKg
wqDCoMKgIHzCoCA5ICsrKystLS0tCj4+PiDCoCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9p
bnRlbF91Y19md19hYmkuaCB8wqAgMiArKwo+Pj4gwqAgMyBmaWxlcyBjaGFuZ2VkLCAxNSBpbnNl
cnRpb25zKCspLCAxOSBkZWxldGlvbnMoLSkKPj4+IMKgZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmMgCj4+PiBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3VjL2ludGVsX3VjX2Z3LmMKPj4+IGluZGV4IDVmYmRkMTdhODY0Yi4uNjZiZGEwYzUxNGEz
IDEwMDY0NAo+Pj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncu
Ywo+Pj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNfZncuYwo+Pj4g
QEAgLTIxOCwyMSArMjE4LDE4IEBAIHZvaWQgaW50ZWxfdWNfZndfZmV0Y2goc3RydWN0IGludGVs
X3VjX2Z3IAo+Pj4gKnVjX2Z3LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKPj4+IMKg
wqDCoMKgwqDCoMKgIGNzcyA9IChzdHJ1Y3QgdWNfY3NzX2hlYWRlciAqKWZ3LT5kYXRhOwo+Pj4g
wqAgLcKgwqDCoCAvKiBGaXJtd2FyZSBiaXRzIGFsd2F5cyBzdGFydCBmcm9tIGhlYWRlciAqLwo+
Pj4gLcKgwqDCoCB1Y19mdy0+aGVhZGVyX29mZnNldCA9IDA7Cj4+PiAtwqDCoMKgIHVjX2Z3LT5o
ZWFkZXJfc2l6ZSA9IChjc3MtPmhlYWRlcl9zaXplX2R3IC0gY3NzLT5tb2R1bHVzX3NpemVfZHcg
LQo+Pj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgY3NzLT5rZXlfc2l6ZV9k
dyAtIGNzcy0+ZXhwb25lbnRfc2l6ZV9kdykgKgo+Pj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIHNpemVvZih1MzIpOwo+Pj4gLQo+Pj4gLcKgwqDCoCBpZiAodWNfZnctPmhlYWRl
cl9zaXplICE9IHNpemVvZihzdHJ1Y3QgdWNfY3NzX2hlYWRlcikpIHsKPj4+ICvCoMKgwqAgLyog
Q2hlY2sgaW50ZWdyaXR5IG9mIHNpemUgdmFsdWVzIGluc2lkZSBDU1MgaGVhZGVyICovCj4+PiAr
wqDCoMKgIHNpemUgPSAoY3NzLT5oZWFkZXJfc2l6ZV9kdyAtIGNzcy0+a2V5X3NpemVfZHcgLSAK
Pj4+IGNzcy0+bW9kdWx1c19zaXplX2R3IC0KPj4+ICvCoMKgwqDCoMKgwqDCoCBjc3MtPmV4cG9u
ZW50X3NpemVfZHcpICogc2l6ZW9mKHUzMik7Cj4+PiArwqDCoMKgIGlmIChzaXplICE9IHNpemVv
ZihzdHJ1Y3QgdWNfY3NzX2hlYWRlcikpIHsKPj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBEUk1fV0FS
TigiJXM6IE1pc21hdGNoZWQgZmlybXdhcmUgaGVhZGVyIGRlZmluaXRpb25cbiIsCj4+PiDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1Y19mdy0+dHlw
ZSkpOwo+Pj4gwqDCoMKgwqDCoMKgwqDCoMKgIGVyciA9IC1FTk9FWEVDOwo+Pj4gwqDCoMKgwqDC
oMKgwqDCoMKgIGdvdG8gZmFpbDsKPj4+IMKgwqDCoMKgwqAgfQo+Pj4gwqAgLcKgwqDCoCAvKiB0
aGVuLCB1Q29kZSAqLwo+Pj4gLcKgwqDCoCB1Y19mdy0+dWNvZGVfb2Zmc2V0ID0gdWNfZnctPmhl
YWRlcl9vZmZzZXQgKyB1Y19mdy0+aGVhZGVyX3NpemU7Cj4+PiArwqDCoMKgIC8qIEZpcm13YXJl
IGJsb2IgYWx3YXlzIHN0YXJ0cyB3aXRoIHRoZSBoZWFkZXIsIHRoZW4gdUNvZGUgKi8KPj4+ICvC
oMKgwqAgdWNfZnctPnVjb2RlX29mZnNldCA9IHNpemVvZihzdHJ1Y3QgdWNfY3NzX2hlYWRlcik7
Cj4+PiDCoMKgwqDCoMKgIHVjX2Z3LT51Y29kZV9zaXplID0gKGNzcy0+c2l6ZV9kdyAtIGNzcy0+
aGVhZGVyX3NpemVfZHcpICogCj4+PiBzaXplb2YodTMyKTsKPj4+IMKgwqDCoMKgwqDCoMKgIC8q
IG5vdyBSU0EgKi8KPj4+IEBAIC0yNDYsNyArMjQzLDcgQEAgdm9pZCBpbnRlbF91Y19md19mZXRj
aChzdHJ1Y3QgaW50ZWxfdWNfZncgKnVjX2Z3LCAKPj4+IHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1KQo+Pj4gwqDCoMKgwqDCoCB1Y19mdy0+cnNhX3NpemUgPSBjc3MtPmtleV9zaXplX2R3
ICogc2l6ZW9mKHUzMik7Cj4+PiDCoMKgwqDCoMKgwqDCoCAvKiBBdCBsZWFzdCwgaXQgc2hvdWxk
IGhhdmUgaGVhZGVyLCB1Q29kZSBhbmQgUlNBLiBTaXplIG9mIAo+Pj4gYWxsIHRocmVlLiAqLwo+
Pj4gLcKgwqDCoCBzaXplID0gdWNfZnctPmhlYWRlcl9zaXplICsgdWNfZnctPnVjb2RlX3NpemUg
KyB1Y19mdy0+cnNhX3NpemU7Cj4+PiArwqDCoMKgIHNpemUgPSBzaXplb2Yoc3RydWN0IHVjX2Nz
c19oZWFkZXIpICsgdWNfZnctPnVjb2RlX3NpemUgKyAKPj4+IHVjX2Z3LT5yc2Ffc2l6ZTsKPj4+
IMKgwqDCoMKgwqAgaWYgKGZ3LT5zaXplIDwgc2l6ZSkgewo+Pj4gwqDCoMKgwqDCoMKgwqDCoMKg
IERSTV9XQVJOKCIlczogVHJ1bmNhdGVkIGZpcm13YXJlICglenUsIGV4cGVjdGVkICV6dSlcbiIs
Cj4+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGludGVsX3VjX2Z3X3R5cGVfcmVwcih1
Y19mdy0+dHlwZSksIGZ3LT5zaXplLCBzaXplKTsKPj4+IEBAIC0zNzEsNyArMzY4LDcgQEAgc3Rh
dGljIGludCB1Y19md194ZmVyKHN0cnVjdCBpbnRlbF91Y19mdyAqdWNfZncsIAo+Pj4gc3RydWN0
IGludGVsX2d0ICpndCwKPj4+IMKgwqDCoMKgwqAgaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQo
dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKPj4+IMKgwqDCoMKgwqDCoMKgIC8qIFNldCB0aGUgc291
cmNlIGFkZHJlc3MgZm9yIHRoZSB1Q29kZSAqLwo+Pj4gLcKgwqDCoCBvZmZzZXQgPSB1Y19md19n
Z3R0X29mZnNldCh1Y19mdywgZ3QtPmdndHQpICsgdWNfZnctPmhlYWRlcl9vZmZzZXQ7Cj4+PiAr
wqDCoMKgIG9mZnNldCA9IHVjX2Z3X2dndHRfb2Zmc2V0KHVjX2Z3LCBndC0+Z2d0dCk7Cj4+PiDC
oMKgwqDCoMKgIEdFTV9CVUdfT04odXBwZXJfMzJfYml0cyhvZmZzZXQpICYgMHhGRkZGMDAwMCk7
Cj4+PiDCoMKgwqDCoMKgIGludGVsX3VuY29yZV93cml0ZV9mdyh1bmNvcmUsIERNQV9BRERSXzBf
TE9XLCAKPj4+IGxvd2VyXzMyX2JpdHMob2Zmc2V0KSk7Cj4+PiDCoMKgwqDCoMKgIGludGVsX3Vu
Y29yZV93cml0ZV9mdyh1bmNvcmUsIERNQV9BRERSXzBfSElHSCwgCj4+PiB1cHBlcl8zMl9iaXRz
KG9mZnNldCkpOwo+Pj4gQEAgLTM4NSw3ICszODIsNyBAQCBzdGF0aWMgaW50IHVjX2Z3X3hmZXIo
c3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdywgCj4+PiBzdHJ1Y3QgaW50ZWxfZ3QgKmd0LAo+Pj4g
wqDCoMKgwqDCoMKgICogdmlhIERNQSwgZXhjbHVkaW5nIGFueSBvdGhlciBjb21wb25lbnRzCj4+
PiDCoMKgwqDCoMKgwqAgKi8KPj4+IMKgwqDCoMKgwqAgaW50ZWxfdW5jb3JlX3dyaXRlX2Z3KHVu
Y29yZSwgRE1BX0NPUFlfU0laRSwKPj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIHVjX2Z3LT5oZWFkZXJfc2l6ZSArIHVjX2Z3LT51Y29kZV9zaXplKTsKPj4+ICvCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHVjX2Z3LT51Y29kZV9vZmZzZXQgKyB1Y19mdy0+
dWNvZGVfc2l6ZSk7Cj4+Cj4+IGluIG90aGVyIHBsYWNlcyB5b3UndmUgcmVwbGFjZWQgdWNfZnct
PmhlYWRlcl9zaXplIHdpdGggc2l6ZW9mKHN0cnVjdCAKPj4gdWNfY3NzX2hlYWRlciksIEknZCBk
byB0aGUgc2FtZSBoZXJlIGZvciBjb25zaXN0ZW5jeS4KPiAKPiBoYSEgb29wcywgdGhpcyBzbmVh
a2VkIGludG8gcGF0Y2ggMiBpbnN0ZWFkLCB3aWxsIGZpeAo+IAo+Pgo+Pj4gwqDCoMKgwqDCoMKg
wqAgLyogU3RhcnQgdGhlIERNQSAqLwo+Pj4gwqDCoMKgwqDCoCBpbnRlbF91bmNvcmVfd3JpdGVf
ZncodW5jb3JlLCBETUFfQ1RSTCwKPj4+IEBAIC01MzksOCArNTM2LDYgQEAgdm9pZCBpbnRlbF91
Y19md19kdW1wKGNvbnN0IHN0cnVjdCBpbnRlbF91Y19mdyAKPj4+ICp1Y19mdywgc3RydWN0IGRy
bV9wcmludGVyICpwKQo+Pj4gwqDCoMKgwqDCoCBkcm1fcHJpbnRmKHAsICJcdHZlcnNpb246IHdh
bnRlZCAldS4ldSwgZm91bmQgJXUuJXVcbiIsCj4+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
dWNfZnctPm1ham9yX3Zlcl93YW50ZWQsIHVjX2Z3LT5taW5vcl92ZXJfd2FudGVkLAo+Pj4gwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgIHVjX2Z3LT5tYWpvcl92ZXJfZm91bmQsIHVjX2Z3LT5taW5v
cl92ZXJfZm91bmQpOwo+Pj4gLcKgwqDCoCBkcm1fcHJpbnRmKHAsICJcdGhlYWRlcjogb2Zmc2V0
ICV1LCBzaXplICV1XG4iLAo+Pj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgIHVjX2Z3LT5oZWFkZXJf
b2Zmc2V0LCB1Y19mdy0+aGVhZGVyX3NpemUpOwo+Pj4gwqDCoMKgwqDCoCBkcm1fcHJpbnRmKHAs
ICJcdHVDb2RlOiBvZmZzZXQgJXUsIHNpemUgJXVcbiIsCj4+PiDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgdWNfZnctPnVjb2RlX29mZnNldCwgdWNfZnctPnVjb2RlX3NpemUpOwo+Pj4gwqDCoMKg
wqDCoCBkcm1fcHJpbnRmKHAsICJcdFJTQTogb2Zmc2V0ICV1LCBzaXplICV1XG4iLAo+Pj4gZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmggCj4+PiBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3LmgKPj4+IGluZGV4IGVkZGJi
MjM3ZmFiZS4uYTgwNDhmOTFmMGRhIDEwMDY0NAo+Pj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvdWMvaW50ZWxfdWNfZncuaAo+Pj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfdWNfZncuaAo+Pj4gQEAgLTI2LDYgKzI2LDcgQEAKPj4+IMKgICNkZWZpbmUgX0lO
VEVMX1VDX0ZXX0hfCj4+PiDCoMKgwqAgI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+Cj4+PiArI2lu
Y2x1ZGUgImludGVsX3VjX2Z3X2FiaS5oIgo+Pj4gwqAgI2luY2x1ZGUgImk5MTVfZ2VtLmgiCj4+
PiDCoMKgwqAgc3RydWN0IGRybV9wcmludGVyOwo+Pj4gQEAgLTU3LDEwICs1OCwxMSBAQCBlbnVt
IGludGVsX3VjX2Z3X3R5cGUgewo+Pj4gwqDCoCAqIG9mIGZldGNoaW5nLCBjYWNoaW5nLCBhbmQg
bG9hZGluZyB0aGUgZmlybXdhcmUgaW1hZ2UgaW50byB0aGUgdUMuCj4+PiDCoMKgICovCj4+PiDC
oCBzdHJ1Y3QgaW50ZWxfdWNfZncgewo+Pj4gK8KgwqDCoCBlbnVtIGludGVsX3VjX2Z3X3R5cGUg
dHlwZTsKPj4+ICvCoMKgwqAgZW51bSBpbnRlbF91Y19md19zdGF0dXMgc3RhdHVzOwo+Pj4gwqDC
oMKgwqDCoCBjb25zdCBjaGFyICpwYXRoOwo+Pj4gwqDCoMKgwqDCoCBzaXplX3Qgc2l6ZTsKPj4+
IMKgwqDCoMKgwqAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iajsKPj4+IC3CoMKgwqAg
ZW51bSBpbnRlbF91Y19md19zdGF0dXMgc3RhdHVzOwo+Pj4gwqDCoMKgwqDCoMKgwqAgLyoKPj4+
IMKgwqDCoMKgwqDCoCAqIFRoZSBmaXJtd2FyZSBidWlsZCBwcm9jZXNzIHdpbGwgZ2VuZXJhdGUg
YSB2ZXJzaW9uIGhlYWRlciAKPj4+IGZpbGUgd2l0aCBtYWpvciBhbmQKPj4+IEBAIC03Miw5ICs3
NCw2IEBAIHN0cnVjdCBpbnRlbF91Y19mdyB7Cj4+PiDCoMKgwqDCoMKgIHUxNiBtYWpvcl92ZXJf
Zm91bmQ7Cj4+PiDCoMKgwqDCoMKgIHUxNiBtaW5vcl92ZXJfZm91bmQ7Cj4+PiDCoCAtwqDCoMKg
IGVudW0gaW50ZWxfdWNfZndfdHlwZSB0eXBlOwo+Pj4gLcKgwqDCoCB1MzIgaGVhZGVyX3NpemU7
Cj4+PiAtwqDCoMKgIHUzMiBoZWFkZXJfb2Zmc2V0Owo+Pj4gwqDCoMKgwqDCoCB1MzIgcnNhX3Np
emU7Cj4+PiDCoMKgwqDCoMKgIHUzMiByc2Ffb2Zmc2V0Owo+Pj4gwqDCoMKgwqDCoCB1MzIgdWNv
ZGVfc2l6ZTsKPj4+IEBAIC0xNjMsNyArMTYyLDcgQEAgc3RhdGljIGlubGluZSB1MzIgCj4+PiBp
bnRlbF91Y19md19nZXRfdXBsb2FkX3NpemUoc3RydWN0IGludGVsX3VjX2Z3ICp1Y19mdykKPj4+
IMKgwqDCoMKgwqAgaWYgKCFpbnRlbF91Y19md19pc19hdmFpbGFibGUodWNfZncpKQo+Pj4gwqDC
oMKgwqDCoMKgwqDCoMKgIHJldHVybiAwOwo+Pj4gwqAgLcKgwqDCoCByZXR1cm4gdWNfZnctPmhl
YWRlcl9zaXplICsgdWNfZnctPnVjb2RlX3NpemU7Cj4+PiArwqDCoMKgIHJldHVybiBzaXplb2Yo
c3RydWN0IHVjX2Nzc19oZWFkZXIpICsgdWNfZnctPnVjb2RlX3NpemU7Cj4+PiDCoCB9Cj4+PiDC
oMKgwqAgdm9pZCBpbnRlbF91Y19md19pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF91Y19mdyAqdWNf
ZncsCj4+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfdWNf
ZndfYWJpLmggCj4+PiBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3X2Fi
aS5oCj4+PiBpbmRleCA1NDVlODZjNTJhOWUuLmFlNThlOGE4YzUzYiAxMDA2NDQKPj4+IC0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjX2Z3X2FiaS5oCj4+PiArKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Y19md19hYmkuaAo+Pj4gQEAgLTcsNiAr
Nyw3IEBACj4+PiDCoCAjZGVmaW5lIF9JTlRFTF9VQ19GV19BQklfSAo+Pj4gwqDCoMKgICNpbmNs
dWRlIDxsaW51eC90eXBlcy5oPgo+Pj4gKyNpbmNsdWRlIDxsaW51eC9idWlsZF9idWcuaD4KPj4+
IMKgwqDCoCAvKioKPj4+IMKgwqAgKiBET0M6IEZpcm13YXJlIExheW91dAo+Pj4gQEAgLTc2LDUg
Kzc3LDYgQEAgc3RydWN0IHVjX2Nzc19oZWFkZXIgewo+Pj4gwqDCoMKgwqDCoCB1MzIgcmVzZXJ2
ZWRbMTRdOwo+Pj4gwqDCoMKgwqDCoCB1MzIgaGVhZGVyX2luZm87Cj4+PiDCoCB9IF9fcGFja2Vk
Owo+Pj4gK3N0YXRpY19hc3NlcnQoc2l6ZW9mKHN0cnVjdCB1Y19jc3NfaGVhZGVyKSA9PSAxMjgp
Owo+Pgo+PiBEbyB3ZSByZWFsbHkgY2FyZSB0aGF0IHRoZSBzaXplIG9mIHRoaXMgaXMgMTI4PyB0
aGUgaW1wb3J0YW50IHRoaW5nIGlzIAo+PiB0aGF0IGl0IG1hdGNoZXMgd2hhdCB0aGUgYmxvYiBy
ZXBvcnRzIGFuZCB5b3UgaGF2ZSBhIGNoZWNrIGZvciB0aGF0IAo+PiBhbHJlYWR5IHNvIHdlIHNo
b3VsZCBiZSBhYmxlIHRvIGF2b2lkIHRoaXMgY2hlY2suCj4gCj4gQmxvYiBkb2VzIG5vdCByZXBv
cnQgaGVhZGVyIHNpemUgZGlyZWN0bHksIGluc3RlYWQgaXQgcHJvdmlkZXMgc2V0IG9mCj4gc2l6
ZXMgb2Ygb3RoZXIgYmxvYiBjb21wb25lbnRzIGFuZCB3ZSBhcmUganVzdCB2ZXJpZnlpbmcgaWYg
dGhhdCBzdW1zCj4gY29ycmVjdGx5LCBidXQgd2UgYXJlIHVzaW5nIHNpemVvZiBvdXIgZGVmaW5p
dGlvbiBvZiBzdHJ1Y3QgY3NzLgo+IAo+IFNpbmNlIENTUyBoZWFkZXIgaXMgcGFydCBvZiB0aGUg
ZncgQUJJIHdlIHNob3VsZCBtYWtlIHN1cmUgdGhhdCBvdXIKPiBkZWZpbml0aW9uIGlzIHN0YWJs
ZSBhbmQgaXRzIHNpemUgbWF0Y2hlcyBmdyBkZWZpbml0aW9uICh3aGlzIGlzIDEyOCkKPiAKPiBJ
J20gZm9yIGtlZXBpbmcgdGhpcyBjaGVjay4KPiAKCklmIHRoZSBjb21taXRtZW50IGZyb20gdGhl
IHVDIHRlYW0gaXMgdGhhdCB0aGUgc2l6ZSBvZiB0aGlzIHdpbGwgYmUgCnN0YWJsZSB0aGVuIEkn
bSBvayB3aXRoIGtlZXBpbmcgdGhlIGNoZWNrLgoKRGFuaWVsZQoKPj4KPj4gV2l0aCB0aGUgMiBu
aXRzIGFkZHJlc3NlZDoKPj4KPj4gUmV2aWV3ZWQtYnk6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8g
PGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+Cj4+Cj4+IERhbmllbGUKPj4KPj4+IMKg
wqDCoCAjZW5kaWYgLyogX0lOVEVMX1VDX0ZXX0FCSV9IICovCl9fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwt
Z2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9t
YWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

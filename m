Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8FBD5D77BB
	for <lists+intel-gfx@lfdr.de>; Tue, 15 Oct 2019 15:52:58 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D6B5B6E05A;
	Tue, 15 Oct 2019 13:52:56 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3FCC06E05A
 for <intel-gfx@lists.freedesktop.org>; Tue, 15 Oct 2019 13:52:55 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 15 Oct 2019 06:52:54 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,300,1566889200"; d="scan'208";a="198612565"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by orsmga003.jf.intel.com with ESMTP; 15 Oct 2019 06:52:52 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 15 Oct 2019 16:50:13 +0300
Message-Id: <20191015135013.10630-3-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191015135013.10630-1-stanislav.lisovskiy@intel.com>
References: <20191015135013.10630-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 2/2] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: martin.peres@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKU2lnbmVkLW9mZi1ieTogU3RhbmlzbGF2IExpc292
c2tpeSA8c3RhbmlzbGF2Lmxpc292c2tpeUBpbnRlbC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6Qg
PHZpbGxlLnN5cmphbGFAaW50ZWwuY29tPgpDYzogSmFtZXMgQXVzbXVzIDxqYW1lcy5hdXNtdXNA
aW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWlj
LmMgICB8ICAxNiArKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWlj
LmggICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMgICAg
ICAgfCAxMDUgKysrKysrKysrKysrKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2J3LmggICAgICAgfCAgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmMgIHwgIDU4ICsrKysrKysrKy0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oICAgICAgICAgICAgICAgfCAgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9y
ZWcuaCAgICAgICAgICAgICAgIHwgICAzICsKIDggZmlsZXMgY2hhbmdlZCwgMTY2IGluc2VydGlv
bnMoKyksIDI2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2F0b21pYy5jCmluZGV4IGM1YTU1MmE2OTc1Mi4uYjNmNGYwMmYzODBiIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmMKQEAgLTIwNyw2ICsyMDcsMjIg
QEAgaW50ZWxfY3J0Y19kdXBsaWNhdGVfc3RhdGUoc3RydWN0IGRybV9jcnRjICpjcnRjKQogCXJl
dHVybiAmY3J0Y19zdGF0ZS0+YmFzZTsKIH0KIAoraW50IGludGVsX2F0b21pY19zZXJpYWxpemVf
Z2xvYmFsX3N0YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3RhdGUtPmJhc2UuZGV2KTsK
KwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKKworCWZvcl9lYWNoX2ludGVsX2NydGMoJmRldl9w
cml2LT5kcm0sIGNydGMpIHsKKwkJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7
CisKKwkJY3J0Y19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfY3J0Y19zdGF0ZSgmc3RhdGUtPmJh
c2UsIGNydGMpOworCQlpZiAoSVNfRVJSKGNydGNfc3RhdGUpKQorCQkJcmV0dXJuIFBUUl9FUlIo
Y3J0Y19zdGF0ZSk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKIC8qKgogICogaW50ZWxfY3J0Y19k
ZXN0cm95X3N0YXRlIC0gZGVzdHJveSBjcnRjIHN0YXRlCiAgKiBAY3J0YzogZHJtIGNydGMKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYXRvbWljLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2F0b21pYy5oCmluZGV4IDU4MDY1ZDMx
NjFhMy4uZmQxN2IzY2EyNTdmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2F0b21pYy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYXRvbWljLmgKQEAgLTcsNiArNyw3IEBACiAjZGVmaW5lIF9fSU5URUxfQVRPTUlDX0hfXwog
CiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KKyNpbmNsdWRlICJpbnRlbF9kaXNwbGF5X3R5cGVz
LmgiCiAKIHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlOwogc3RydWN0IGRybV9jb25uZWN0b3I7CkBA
IC0zOCw2ICszOSw4IEBAIHZvaWQgaW50ZWxfY3J0Y19kZXN0cm95X3N0YXRlKHN0cnVjdCBkcm1f
Y3J0YyAqY3J0YywKIHN0cnVjdCBkcm1fYXRvbWljX3N0YXRlICppbnRlbF9hdG9taWNfc3RhdGVf
YWxsb2Moc3RydWN0IGRybV9kZXZpY2UgKmRldik7CiB2b2lkIGludGVsX2F0b21pY19zdGF0ZV9j
bGVhcihzdHJ1Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUpOwogCitpbnQgaW50ZWxfYXRvbWlj
X3NlcmlhbGl6ZV9nbG9iYWxfc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUp
OworCiBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqCiBpbnRlbF9hdG9taWNfZ2V0X2NydGNfc3Rh
dGUoc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlLAogCQkJICAgIHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfYncuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYwppbmRleCAy
MmU4M2Y4NTdkZTguLjA5Zjc4NmNmZGZhYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9idy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfYncuYwpAQCAtOCw2ICs4LDggQEAKICNpbmNsdWRlICJpbnRlbF9idy5oIgogI2luY2x1
ZGUgImludGVsX2Rpc3BsYXlfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9zaWRlYmFuZC5oIgor
I2luY2x1ZGUgImludGVsX2F0b21pYy5oIgorI2luY2x1ZGUgImludGVsX3BtLmgiCiAKIC8qIFBh
cmFtZXRlcnMgZm9yIFFjbGsgR2V5c2VydmlsbGUgKFFHVikgKi8KIHN0cnVjdCBpbnRlbF9xZ3Zf
cG9pbnQgewpAQCAtMTEzLDYgKzExNSwyNyBAQCBzdGF0aWMgaW50IGljbF9wY29kZV9yZWFkX3Fn
dl9wb2ludF9pbmZvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4g
MDsKIH0KIAoraW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9pbnRzKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2ludHNfbWFzaykKK3sKKwlpbnQgcmV0
OworCisJLyogYnNwZWMgc2F5cyB0byBrZWVwIHJldHJ5aW5nIGZvciBhdCBsZWFzdCAxIG1zICov
CisJcmV0ID0gc2tsX3Bjb2RlX3JlcXVlc3QoZGV2X3ByaXYsIElDTF9QQ09ERV9TQUdWX0RFX01F
TV9TU19DT05GSUcsCisJCQkJcG9pbnRzX21hc2ssCisJCQkJR0VOMTFfUENPREVfUE9JTlRTX1JF
U1RSSUNURURfTUFTSywKKwkJCQlHRU4xMV9QQ09ERV9QT0lOVFNfUkVTVFJJQ1RFRCwKKwkJCQkx
KTsKKworCWlmIChyZXQgPCAwKSB7CisJCURSTV9FUlJPUigiRmFpbGVkIHRvIGRpc2FibGUgcWd2
IHBvaW50cyAoJWQpXG4iLCByZXQpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiAwOwor
fQorCisKIHN0YXRpYyBpbnQgaWNsX2dldF9xZ3ZfcG9pbnRzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwKIAkJCSAgICAgIHN0cnVjdCBpbnRlbF9xZ3ZfaW5mbyAqcWkpCiB7CkBA
IC0yNzAsMjIgKzI5Myw2IEBAIHZvaWQgaW50ZWxfYndfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWljbF9nZXRfYndfaW5mbyhkZXZfcHJpdiwgJmljbF9zYV9p
bmZvKTsKIH0KIAotc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9tYXhfZGF0YV9yYXRlKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkJaW50IG51bV9wbGFuZXMpCi17Ci0J
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCi0JCS8qCi0JCSAqIEZJWE1FIHdpdGggU0FH
ViBkaXNhYmxlZCBtYXliZSB3ZSBjYW4gYXNzdW1lCi0JCSAqIHBvaW50IDEgd2lsbCBhbHdheXMg
YmUgdXNlZD8gU2VlbXMgdG8gbWF0Y2gKLQkJICogdGhlIGJlaGF2aW91ciBvYnNlcnZlZCBpbiB0
aGUgd2lsZC4KLQkJICovCi0JCXJldHVybiBtaW4zKGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9w
bGFuZXMsIDApLAotCQkJICAgIGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9wbGFuZXMsIDEpLAot
CQkJICAgIGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9wbGFuZXMsIDIpKTsKLQllbHNlCi0JCXJl
dHVybiBVSU5UX01BWDsKLX0KLQogc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9id19jcnRjX251
bV9hY3RpdmVfcGxhbmVzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
KQogewogCS8qCkBAIC0zNzcsNyArMzg0LDEwIEBAIGludCBpbnRlbF9id19hdG9taWNfY2hlY2so
c3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJdW5zaWduZWQgaW50IGRhdGFfcmF0
ZSwgbWF4X2RhdGFfcmF0ZTsKIAl1bnNpZ25lZCBpbnQgbnVtX2FjdGl2ZV9wbGFuZXM7CiAJc3Ry
dWN0IGludGVsX2NydGMgKmNydGM7Ci0JaW50IGk7CisJaW50IGksIHJldDsKKwlzdHJ1Y3QgaW50
ZWxfcWd2X2luZm8gcWkgPSB7fTsKKwl1MzIgYWxsb3dlZF9wb2ludHMgPSAwOworCXVuc2lnbmVk
IGludCBtYXhfYndfcG9pbnQgPSAwLCBtYXhfYncgPSAwOwogCiAJLyogRklYTUUgZWFybGllciBn
ZW5zIG5lZWQgc29tZSBjaGVja3MgdG9vICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAx
MSkKQEAgLTQyMSwxNiArNDMxLDY3IEBAIGludCBpbnRlbF9id19hdG9taWNfY2hlY2soc3RydWN0
IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJZGF0YV9yYXRlID0gaW50ZWxfYndfZGF0YV9y
YXRlKGRldl9wcml2LCBid19zdGF0ZSk7CiAJbnVtX2FjdGl2ZV9wbGFuZXMgPSBpbnRlbF9id19u
dW1fYWN0aXZlX3BsYW5lcyhkZXZfcHJpdiwgYndfc3RhdGUpOwogCi0JbWF4X2RhdGFfcmF0ZSA9
IGludGVsX21heF9kYXRhX3JhdGUoZGV2X3ByaXYsIG51bV9hY3RpdmVfcGxhbmVzKTsKLQogCWRh
dGFfcmF0ZSA9IERJVl9ST1VORF9VUChkYXRhX3JhdGUsIDEwMDApOwogCi0JaWYgKGRhdGFfcmF0
ZSA+IG1heF9kYXRhX3JhdGUpIHsKLQkJRFJNX0RFQlVHX0tNUygiQmFuZHdpZHRoICV1IE1CL3Mg
ZXhjZWVkcyBtYXggYXZhaWxhYmxlICVkIE1CL3MgKCVkIGFjdGl2ZSBwbGFuZXMpXG4iLAotCQkJ
ICAgICAgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJcmV0
ID0gaWNsX2dldF9xZ3ZfcG9pbnRzKGRldl9wcml2LCAmcWkpOworCWlmIChyZXQgPCAwKQorCQly
ZXR1cm4gMDsKKworCWZvciAoaSA9IDA7IGkgPCBxaS5udW1fcG9pbnRzOyBpKyspIHsKKwkJbWF4
X2RhdGFfcmF0ZSA9IGljbF9tYXhfYncoZGV2X3ByaXYsIG51bV9hY3RpdmVfcGxhbmVzLCBpKTsK
KwkJLyoKKwkJICogV2UgbmVlZCB0byBrbm93IHdoaWNoIHFndiBwb2ludCBnaXZlcyB1cworCQkg
KiBtYXhpbXVtIGJhbmR3aWR0aCBpbiBvcmRlciB0byBkaXNhYmxlIFNBR1YKKwkJICogaWYgd2Ug
ZmluZCB0aGF0IHdlIGV4Y2VlZCBTQUdWIGJsb2NrIHRpbWUKKwkJICogd2l0aCB3YXRlcm1hcmtz
LiBCeSB0aGF0IG1vbWVudCB3ZSBhbHJlYWR5CisJCSAqIGhhdmUgdGhvc2UsIGFzIGl0IGlzIGNh
bGN1bGF0ZWQgZWFybGllciBpbgorCQkgKiBpbnRlbF9hdG9taWNfY2hlY2ssCisJCSAqLworCQlp
ZiAobWF4X2RhdGFfcmF0ZSA+IG1heF9idykgeworCQkJbWF4X2J3X3BvaW50ID0gaTsKKwkJCW1h
eF9idyA9IG1heF9kYXRhX3JhdGU7CisJCX0KKwkJaWYgKG1heF9kYXRhX3JhdGUgPj0gZGF0YV9y
YXRlKQorCQkJYWxsb3dlZF9wb2ludHMgfD0gMSA8PCBpOworCQlEUk1fREVCVUdfS01TKCJRR1Yg
cG9pbnQgJWQ6IG1heCBidyAlZCByZXF1aXJlZCAlZFxuIiwKKwkJCSAgICAgIGksIG1heF9kYXRh
X3JhdGUsIGRhdGFfcmF0ZSk7CisJfQorCisJLyoKKwkgKiBCU3BlYyBzdGF0ZXMgdGhhdCB3ZSBh
bHdheXMgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGFsbG93ZWQgcG9pbnQKKwkgKiBsZWZ0LCBz
byBpZiB3ZSBjb3VsZG4ndCAtIHNpbXBseSByZWplY3QgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIG9i
dmlvdXMKKwkgKiByZWFzb25zLgorCSAqLworCWlmIChhbGxvd2VkX3BvaW50cyA9PSAwKSB7CisJ
CURSTV9ERUJVR19LTVMoIkNvdWxkIG5vdCBmaW5kIGFueSBzdWl0YWJsZSBRR1YgcG9pbnRzXG4i
KTsKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCisJLyoKKwkgKiBMZWF2ZSBvbmx5IHNpbmdsZSBw
b2ludCB3aXRoIGhpZ2hlc3QgYmFuZHdpZHRoLCBpZgorCSAqIHdlIGNhbid0IGVuYWJsZSBTQUdW
IGFjY29yZGluZyB0byBCU3BlYy4KKwkgKi8KKwlpZiAoIWludGVsX2Nhbl9lbmFibGVfc2Fndihz
dGF0ZSkpCisJCWFsbG93ZWRfcG9pbnRzID0gMSA8PCBtYXhfYndfcG9pbnQ7CisKKwkvKgorCSAq
IFdlIHN0b3JlIHRoZSBvbmVzIHdoaWNoIG5lZWQgdG8gYmUgbWFza2VkIGFzIHRoYXQgaXMgd2hh
dCBQQ29kZQorCSAqIGFjdHVhbGx5IGFjY2VwdHMgYXMgYSBwYXJhbWV0ZXIuCisJICovCisJc3Rh
dGUtPnFndl9wb2ludHNfbWFzayA9ICh+YWxsb3dlZF9wb2ludHMpICYgKCgxIDw8IHFpLm51bV9w
b2ludHMpIC0gMSk7CisKKwkvKgorCSAqIElmIHRoZSBhY3R1YWwgbWFzayBoYWQgY2hhbmdlZCB3
ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0CisJICogdGhlIGNvbW1pdHMgYXJlIHNlcmlhbGl6ZWQo
aW4gY2FzZSB0aGlzIGlzIGEgbm9tb2Rlc2V0LCBub25ibG9ja2luZykKKwkgKi8KKwlpZiAoc3Rh
dGUtPnFndl9wb2ludHNfbWFzayAhPSBkZXZfcHJpdi0+cWd2X3BvaW50c19tYXNrKSB7CisJCXJl
dCA9IGludGVsX2F0b21pY19zZXJpYWxpemVfZ2xvYmFsX3N0YXRlKHN0YXRlKTsKKwkJaWYgKHJl
dCkgeworCQkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IHNlcmlhbGl6ZSBnbG9iYWwgc3RhdGVc
biIpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0KKwogCXJldHVybiAwOwogfQogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmgKaW5kZXggOWRiMTBhZjAxMmY0Li42NmJmOWJj
MTBiNzMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmgKQEAgLTI4LDUg
KzI4LDcgQEAgaW50IGludGVsX2J3X2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9w
cml2KTsKIGludCBpbnRlbF9id19hdG9taWNfY2hlY2soc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUpOwogdm9pZCBpbnRlbF9id19jcnRjX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfYndfc3Rh
dGUgKmJ3X3N0YXRlLAogCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dGF0ZSk7CitpbnQgaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fndl9wb2ludHMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgdTMyIHBvaW50c19tYXNrKTsKIAogI2VuZGlmIC8q
IF9fSU5URUxfQldfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
ZGlzcGxheS5jCmluZGV4IGE4MTY4ZTJhYWNkNS4uNGFhZjY2OTU1MTQ5IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTQwMDMsNiArMTQwMDMs
NDggQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2NsZWFudXBfd29yayhzdHJ1Y3Qgd29ya19z
dHJ1Y3QgKndvcmspCiAJaW50ZWxfYXRvbWljX2hlbHBlcl9mcmVlX3N0YXRlKGk5MTUpOwogfQog
CitzdGF0aWMgdm9pZCBpbnRlbF9xZ3ZfcG9pbnRzX21hc2soc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHN0YXRlLT5iYXNlLmRl
djsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJ
aW50IHJldDsKKwl1MzIgbmV3X21hc2sgPSBkZXZfcHJpdi0+cWd2X3BvaW50c19tYXNrIHwgc3Rh
dGUtPnFndl9wb2ludHNfbWFzazsKKworCS8qCisJICogUmVzdHJpY3QgcmVxdWlyZWQgcWd2IHBv
aW50cyBiZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24uCisJICogQWNjb3JkaW5nIHRv
IEJTcGVjIHdlIGNhbid0IG1hc2sgYW5kIHVubWFzayBxZ3YgcG9pbnRzIGF0IHRoZSBzYW1lCisJ
ICogdGltZS4gQWxzbyBtYXNraW5nIHNob3VsZCBiZSBkb25lIGJlZm9yZSB1cGRhdGluZyB0aGUg
Y29uZmlndXJhdGlvbgorCSAqIGFuZCB1bm1hc2tpbmcgYWZ0ZXJ3YXJkcy4KKwkgKi8KKwlyZXQg
PSBpY2xfcGNvZGVfcmVzdHJpY3RfcWd2X3BvaW50cyhkZXZfcHJpdiwgbmV3X21hc2spOworCWlm
IChyZXQgPCAwKQorCQlEUk1fREVCVUdfS01TKCJDb3VsZCBub3QgcmVzdHJpY3QgcmVxdWlyZWQg
cWd2IHBvaW50cyglZClcbiIsCisJCQkgICAgICByZXQpOworCWVsc2UKKwkJZGV2X3ByaXYtPnFn
dl9wb2ludHNfbWFzayA9IG5ld19tYXNrOworfQorCitzdGF0aWMgdm9pZCBpbnRlbF9xZ3ZfcG9p
bnRzX3VubWFzayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2OworCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlpbnQgcmV0OworCXUzMiBuZXdfbWFzayA9
IGRldl9wcml2LT5xZ3ZfcG9pbnRzX21hc2sgJiBzdGF0ZS0+cWd2X3BvaW50c19tYXNrOworCisJ
LyoKKwkgKiBBbGxvdyByZXF1aXJlZCBxZ3YgcG9pbnRzIGFmdGVyIHVwZGF0aW5nIHRoZSBjb25m
aWd1cmF0aW9uLgorCSAqIEFjY29yZGluZyB0byBCU3BlYyB3ZSBjYW4ndCBtYXNrIGFuZCB1bm1h
c2sgcWd2IHBvaW50cyBhdCB0aGUgc2FtZQorCSAqIHRpbWUuIEFsc28gbWFza2luZyBzaG91bGQg
YmUgZG9uZSBiZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24KKwkgKiBhbmQgdW5tYXNr
aW5nIGFmdGVyd2FyZHMuCisJICovCisJcmV0ID0gaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fndl9wb2lu
dHMoZGV2X3ByaXYsIG5ld19tYXNrKTsKKwlpZiAocmV0IDwgMCkKKwkJRFJNX0RFQlVHX0tNUygi
Q291bGQgbm90IHJlc3RyaWN0IHJlcXVpcmVkIHFndiBwb2ludHMoJWQpXG4iLAorCQkJICAgICAg
cmV0KTsKKwllbHNlCisJCWRldl9wcml2LT5xZ3ZfcG9pbnRzX21hc2sgPSBuZXdfbWFzazsKK30K
Kwogc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2NvbW1pdF90YWlsKHN0cnVjdCBpbnRlbF9hdG9t
aWNfc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFz
ZS5kZXY7CkBAIC0xNDAzMCw2ICsxNDA3Miw5IEBAIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19j
b21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJfQogCX0KIAor
CWlmICgoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkpCisJCWludGVsX3Fndl9wb2ludHNfbWFz
ayhzdGF0ZSk7CisKIAlpbnRlbF9jb21taXRfbW9kZXNldF9kaXNhYmxlcyhzdGF0ZSk7CiAKIAkv
KiBGSVhNRTogRXZlbnR1YWxseSBnZXQgcmlkIG9mIG91ciBjcnRjLT5jb25maWcgcG9pbnRlciAq
LwpAQCAtMTQwNDgsOCArMTQwOTMsOSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9hdG9taWNfY29tbWl0
X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCSAqIFNLTCB3b3JrYXJv
dW5kOiBic3BlYyByZWNvbW1lbmRzIHdlIGRpc2FibGUgdGhlIFNBR1Ygd2hlbiB3ZQogCQkgKiBo
YXZlIG1vcmUgdGhlbiBvbmUgcGlwZSBlbmFibGVkCiAJCSAqLwotCQlpZiAoIWludGVsX2Nhbl9l
bmFibGVfc2FndihzdGF0ZSkpCi0JCQlpbnRlbF9kaXNhYmxlX3NhZ3YoZGV2X3ByaXYpOworCQlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQorCQkJaWYgKCFpbnRlbF9jYW5fZW5hYmxlX3Nh
Z3Yoc3RhdGUpKQorCQkJCWludGVsX2Rpc2FibGVfc2FndihkZXZfcHJpdik7CiAKIAkJaW50ZWxf
bW9kZXNldF92ZXJpZnlfZGlzYWJsZWQoZGV2X3ByaXYsIHN0YXRlKTsKIAl9CkBAIC0xNDEyNyw4
ICsxNDE3MywxMiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9hdG9taWNfY29tbWl0X3RhaWwoc3RydWN0
IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJaWYgKHN0YXRlLT5tb2Rlc2V0KQogCQlpbnRl
bF92ZXJpZnlfcGxhbmVzKHN0YXRlKTsKIAotCWlmIChzdGF0ZS0+bW9kZXNldCAmJiBpbnRlbF9j
YW5fZW5hYmxlX3NhZ3Yoc3RhdGUpKQotCQlpbnRlbF9lbmFibGVfc2FndihkZXZfcHJpdik7CisJ
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkgeworCQlpZiAoc3RhdGUtPm1vZGVzZXQgJiYg
aW50ZWxfY2FuX2VuYWJsZV9zYWd2KHN0YXRlKSkKKwkJCWludGVsX2VuYWJsZV9zYWd2KGRldl9w
cml2KTsKKwl9CisJZWxzZQorCQlpbnRlbF9xZ3ZfcG9pbnRzX3VubWFzayhzdGF0ZSk7CiAKIAlk
cm1fYXRvbWljX2hlbHBlcl9jb21taXRfaHdfZG9uZSgmc3RhdGUtPmJhc2UpOwogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4
IDQwMzkwZDg1NTgxNS4uODc1MGEzNGMzZTI4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtNTEyLDYgKzUxMiw5IEBAIHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgewogCXN0cnVjdCBpOTE1X3N3X2ZlbmNlIGNvbW1pdF9y
ZWFkeTsKIAogCXN0cnVjdCBsbGlzdF9ub2RlIGZyZWVkOworCisJLyogR2VuMTErIG9ubHkgKi8K
Kwl1MzIgcWd2X3BvaW50c19tYXNrOwogfTsKIAogc3RydWN0IGludGVsX3BsYW5lX3N0YXRlIHsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IGM0NmIzMzkwNjRjMC4uMGIxYjY0MWEyODBmIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTEzMzUsNiArMTMzNSw4IEBAIHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlIHsKIAkJdTggbnVtX3BsYW5lczsKIAl9IG1heF9id1s2XTsKIAorCXUzMiBx
Z3ZfcG9pbnRzX21hc2s7CisKIAlzdHJ1Y3QgZHJtX3ByaXZhdGVfb2JqIGJ3X29iajsKIAogCXN0
cnVjdCBpbnRlbF9ydW50aW1lX3BtIHJ1bnRpbWVfcG07CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X3JlZy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaApp
bmRleCBlMjQ5OTFlNTQ4OTcuLjFmMzQwMjU0N2JhNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZWcuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5o
CkBAIC04ODY5LDYgKzg4NjksNyBAQCBlbnVtIHsKICNkZWZpbmUgICBJQ0xfUENPREVfTUVNX1NV
QlNZU1lTVEVNX0lORk8JMHhkCiAjZGVmaW5lICAgICBJQ0xfUENPREVfTUVNX1NTX1JFQURfR0xP
QkFMX0lORk8JKDB4MCA8PCA4KQogI2RlZmluZSAgICAgSUNMX1BDT0RFX01FTV9TU19SRUFEX1FH
Vl9QT0lOVF9JTkZPKHBvaW50KQkoKChwb2ludCkgPDwgMTYpIHwgKDB4MSA8PCA4KSkKKyNkZWZp
bmUgICBJQ0xfUENPREVfU0FHVl9ERV9NRU1fU1NfQ09ORklHCTB4ZQogI2RlZmluZSAgIEdFTjZf
UENPREVfUkVBRF9EX0NPTVAJCTB4MTAKICNkZWZpbmUgICBHRU42X1BDT0RFX1dSSVRFX0RfQ09N
UAkJMHgxMQogI2RlZmluZSAgIEhTV19QQ09ERV9ERV9XUklURV9GUkVRX1JFUQkJMHgxNwpAQCAt
ODg4MSw2ICs4ODgyLDggQEAgZW51bSB7CiAjZGVmaW5lICAgICBHRU45X1NBR1ZfSVNfRElTQUJM
RUQJCTB4MQogI2RlZmluZSAgICAgR0VOOV9TQUdWX0VOQUJMRQkJCTB4MwogI2RlZmluZSBHRU4x
Ml9QQ09ERV9SRUFEX1NBR1ZfQkxPQ0tfVElNRV9VUwkweDIzCisjZGVmaW5lIEdFTjExX1BDT0RF
X1BPSU5UU19SRVNUUklDVEVECQkweDAKKyNkZWZpbmUgR0VOMTFfUENPREVfUE9JTlRTX1JFU1RS
SUNURURfTUFTSwkweDEKICNkZWZpbmUgR0VONl9QQ09ERV9EQVRBCQkJCV9NTUlPKDB4MTM4MTI4
KQogI2RlZmluZSAgIEdFTjZfUENPREVfRlJFUV9JQV9SQVRJT19TSElGVAk4CiAjZGVmaW5lICAg
R0VONl9QQ09ERV9GUkVRX1JJTkdfUkFUSU9fU0hJRlQJMTYKLS0gCjIuMTcuMQoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcg
bGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRl
c2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

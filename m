Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 6F79F83494
	for <lists+intel-gfx@lfdr.de>; Tue,  6 Aug 2019 17:00:24 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BAA5289DA6;
	Tue,  6 Aug 2019 15:00:22 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2A5D489DA6;
 Tue,  6 Aug 2019 15:00:20 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17906958-1500050 
 for multiple; Tue, 06 Aug 2019 16:00:06 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  6 Aug 2019 16:00:04 +0100
Message-Id: <20190806150004.32357-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190806123644.29194-1-chris@chris-wilson.co.uk>
References: <20190806123644.29194-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t] Add i915/gem_ctx_persistence
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U2FuaXR5IHRlc3QgZXhpc3RpbmcgcGVyc2lzdGVuY2UgYW5kIG5ldyBleGNpdGluZyBub24tcGVy
c2lzdGVudCBjb250ZXh0CmJlaGF2aW91ci4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogSm9vbmFzIExhaHRpbmVuIDxqb29uYXMubGFo
dGluZW5AbGludXguaW50ZWwuY29tPgpDYzogTWljaGHFgiBXaW5pYXJza2kgPG1pY2hhbC53aW5p
YXJza2lAaW50ZWwuY29tPgpDYzogSm9uIEJsb29tZmllbGQgPGpvbi5ibG9vbWZpZWxkQGludGVs
LmNvbT4KLS0tCkEgY291cGxlIG9mIG1pbm9yIHF1aWNrIGZpeGVzLAoKaWNrbGVAa2FieWxha2U6
fiQgc3VkbyAuL2ludGVsLWdwdS10b29scy9idWlsZC90ZXN0cy9nZW1fY3R4X3BlcnNpc3RlbmNl
IApJR1QtVmVyc2lvbjogMS4yNC1nZTc5YzAxYTZlICh4ODZfNjQpIChMaW51eDogNS4zLjAtcmMz
KyB4ODZfNjQpClN0YXJ0aW5nIHN1YnRlc3Q6IGlkZW1wb3RlbnQKU3VidGVzdCBpZGVtcG90ZW50
OiBTVUNDRVNTICgwLjAwMHMpClN0YXJ0aW5nIHN1YnRlc3Q6IHBlcnNpc3RlbmNlClN1YnRlc3Qg
cGVyc2lzdGVuY2U6IFNVQ0NFU1MgKDAuMjIwcykKU3RhcnRpbmcgc3VidGVzdDogY2xlYW51cApT
dWJ0ZXN0IGNsZWFudXA6IFNVQ0NFU1MgKDAuMDMxcykKU3RhcnRpbmcgc3VidGVzdDogaG9zdGls
ZQpTdWJ0ZXN0IGhvc3RpbGU6IFNVQ0NFU1MgKDAuMTM0cykKU3RhcnRpbmcgc3VidGVzdDogcHJv
Y2VzcwpTdWJ0ZXN0IHByb2Nlc3M6IFNVQ0NFU1MgKDAuMDIzcykKClsgICA0MC4zMjY4MzddIFtJ
R1RdIGdlbV9jdHhfcGVyc2lzdGVuY2U6IGV4ZWN1dGluZwpbICAgNDAuMzMwMDkxXSBbSUdUXSBn
ZW1fY3R4X3BlcnNpc3RlbmNlOiBzdGFydGluZyBzdWJ0ZXN0IGlkZW1wb3RlbnQKWyAgIDQwLjMz
MDE1MV0gW0lHVF0gZ2VtX2N0eF9wZXJzaXN0ZW5jZTogc3RhcnRpbmcgc3VidGVzdCBwZXJzaXN0
ZW5jZQpbICAgNDAuNTUwMDczXSBbSUdUXSBnZW1fY3R4X3BlcnNpc3RlbmNlOiBzdGFydGluZyBz
dWJ0ZXN0IGNsZWFudXAKWyAgIDQwLjU4MTU0MF0gW0lHVF0gZ2VtX2N0eF9wZXJzaXN0ZW5jZTog
c3RhcnRpbmcgc3VidGVzdCBob3N0aWxlClsgICA0MC42ODkwNzJdIGk5MTUgMDAwMDowMDowMi4w
OiBSZXNldHRpbmcgcmNzMCBmb3IgcHJlZW1wdGlvbiB0aW1lIG91dApbICAgNDAuNzE1MTcyXSBb
SUdUXSBnZW1fY3R4X3BlcnNpc3RlbmNlOiBzdGFydGluZyBzdWJ0ZXN0IHByb2Nlc3MKWyAgIDQw
LjczODc0MV0gW0lHVF0gZ2VtX2N0eF9wZXJzaXN0ZW5jZTogZXhpdGluZywgcmV0PTAKWyAgIDQw
LjczODkwMl0gU2V0dGluZyBkYW5nZXJvdXMgb3B0aW9uIHJlc2V0IC0gdGFpbnRpbmcga2VybmVs
CgotLS0KIGxpYi9pOTE1L2dlbV9jb250ZXh0LmMgICAgICAgICAgIHwgIDM3ICsrKysrCiBsaWIv
aTkxNS9nZW1fY29udGV4dC5oICAgICAgICAgICB8ICAgOSArKwogbGliL2lvY3RsX3dyYXBwZXJz
LmMgICAgICAgICAgICAgfCAgIDEgKwogdGVzdHMvTWFrZWZpbGUuc291cmNlcyAgICAgICAgICAg
fCAgIDMgKwogdGVzdHMvaTkxNS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMgfCAyNDIgKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKwogdGVzdHMvbWVzb24uYnVpbGQgICAgICAgICAgICAgICAg
fCAgIDEgKwogNiBmaWxlcyBjaGFuZ2VkLCAyOTMgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUg
MTAwNjQ0IHRlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jCgpkaWZmIC0tZ2l0IGEvbGli
L2k5MTUvZ2VtX2NvbnRleHQuYyBiL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKaW5kZXggODNjNWRm
OTYxLi4xZmFlNTE5MWYgMTAwNjQ0Ci0tLSBhL2xpYi9pOTE1L2dlbV9jb250ZXh0LmMKKysrIGIv
bGliL2k5MTUvZ2VtX2NvbnRleHQuYwpAQCAtMjcyLDYgKzI3Miw0MyBAQCB2b2lkIGdlbV9jb250
ZXh0X3NldF9wcmlvcml0eShpbnQgZmQsIHVpbnQzMl90IGN0eF9pZCwgaW50IHByaW8pCiAJaWd0
X2Fzc2VydF9lcShfX2dlbV9jb250ZXh0X3NldF9wcmlvcml0eShmZCwgY3R4X2lkLCBwcmlvKSwg
MCk7CiB9CiAKKy8qKgorICogX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2U6CisgKiBAaTkx
NTogb3BlbiBpOTE1IGRybSBmaWxlIGRlc2NyaXB0b3IKKyAqIEBjdHg6IGk5MTUgY29udGV4dCBp
ZAorICogQHN0YXRlOiBkZXNpcmVkIHBlcnNpc3RlbmNlCisgKgorICogRGVjbGFyZSB3aGV0aGVy
IHRoaXMgY29udGV4dCBpcyBhbGxvd2VkIHRvIHBlcnNpc3QgYWZ0ZXIgY2xvc2luZyB1bnRpbAor
ICogaXRzIHJlcXVlc3RzIGFyZSBjb21wbGV0ZSAocGVyc2lzdGVudD10cnVlKSBvciBpZiBpdCBz
aG91bGQgYmUKKyAqIGltbWVkaWF0ZWx5IHJlYXBlZCBvbiBjbG9zaW5nIGFuZCBpdHMgcmVxdWVz
dHMgY2FuY2VsbGVkCisgKiAocGVyc2lzdGVudD1mYWxzZSkuCisgKgorICogUmV0dXJuczogQW4g
aW50ZWdlciBlcXVhbCB0byB6ZXJvIGZvciBzdWNjZXNzIGFuZCBuZWdhdGl2ZSBmb3IgZmFpbHVy
ZQorICovCitpbnQgX19nZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaW50IGk5MTUsIHVpbnQz
Ml90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfcGFy
YW0gcCA9IHsKKwkJLmN0eF9pZCA9IGN0eCwKKwkJLnBhcmFtID0gSTkxNV9DT05URVhUX1BBUkFN
X1BFUlNJU1RFTkNFLAorCQkudmFsdWUgPSBzdGF0ZSwKKwl9OworCisJcmV0dXJuIF9fZ2VtX2Nv
bnRleHRfc2V0X3BhcmFtKGk5MTUsICZwKTsKK30KKworLyoqCisgKiBfX2dlbV9jb250ZXh0X3Nl
dF9wZXJzaXN0ZW5jZToKKyAqIEBpOTE1OiBvcGVuIGk5MTUgZHJtIGZpbGUgZGVzY3JpcHRvcgor
ICogQGN0eDogaTkxNSBjb250ZXh0IGlkCisgKiBAc3RhdGU6IGRlc2lyZWQgcGVyc2lzdGVuY2UK
KyAqCisgKiBMaWtlIF9fZ2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKCksIGV4Y2VwdCB3ZSBh
c3NlcnQgb24gZmFpbHVyZS4KKyAqLwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2Uo
aW50IGk5MTUsIHVpbnQzMl90IGN0eCwgYm9vbCBzdGF0ZSkKK3sKKwlpZ3RfYXNzZXJ0X2VxKF9f
Z2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGk5MTUsIGN0eCwgc3RhdGUpLCAwKTsKK30KKwog
aW50CiBfX2dlbV9jb250ZXh0X2Nsb25lKGludCBpOTE1LAogCQkgICAgdWludDMyX3Qgc3JjLCB1
bnNpZ25lZCBpbnQgc2hhcmUsCmRpZmYgLS1naXQgYS9saWIvaTkxNS9nZW1fY29udGV4dC5oIGIv
bGliL2k5MTUvZ2VtX2NvbnRleHQuaAppbmRleCA4MDQzYzM0MDEuLjY3NDVjOTBjMyAxMDA2NDQK
LS0tIGEvbGliL2k5MTUvZ2VtX2NvbnRleHQuaAorKysgYi9saWIvaTkxNS9nZW1fY29udGV4dC5o
CkBAIC0yNCw2ICsyNCwxMSBAQAogI2lmbmRlZiBHRU1fQ09OVEVYVF9ICiAjZGVmaW5lIEdFTV9D
T05URVhUX0gKIAorI2luY2x1ZGUgPHN0ZGJvb2wuaD4KKyNpbmNsdWRlIDxzdGRpbnQuaD4KKwor
c3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtOworCiB1aW50MzJfdCBnZW1fY29udGV4
dF9jcmVhdGUoaW50IGZkKTsKIGludCBfX2dlbV9jb250ZXh0X2NyZWF0ZShpbnQgZmQsIHVpbnQz
Ml90ICpjdHhfaWQpOwogdm9pZCBnZW1fY29udGV4dF9kZXN0cm95KGludCBmZCwgdWludDMyX3Qg
Y3R4X2lkKTsKQEAgLTU4LDYgKzYzLDEwIEBAIGludCBfX2dlbV9jb250ZXh0X2dldF9wYXJhbShp
bnQgZmQsIHN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbSAqcCk7CiBpbnQgX19nZW1f
Y29udGV4dF9zZXRfcHJpb3JpdHkoaW50IGZkLCB1aW50MzJfdCBjdHgsIGludCBwcmlvKTsKIHZv
aWQgZ2VtX2NvbnRleHRfc2V0X3ByaW9yaXR5KGludCBmZCwgdWludDMyX3QgY3R4LCBpbnQgcHJp
byk7CiAKKyNkZWZpbmUgSTkxNV9DT05URVhUX1BBUkFNX1BFUlNJU1RFTkNFIDB4YgoraW50IF9f
Z2VtX2NvbnRleHRfc2V0X3BlcnNpc3RlbmNlKGludCBpOTE1LCB1aW50MzJfdCBjdHgsIGJvb2wg
c3RhdGUpOwordm9pZCBnZW1fY29udGV4dF9zZXRfcGVyc2lzdGVuY2UoaW50IGk5MTUsIHVpbnQz
Ml90IGN0eCwgYm9vbCBzdGF0ZSk7CisKIGJvb2wgZ2VtX2NvbnRleHRfaGFzX2VuZ2luZShpbnQg
ZmQsIHVpbnQzMl90IGN0eCwgdWludDY0X3QgZW5naW5lKTsKIAogI2VuZGlmIC8qIEdFTV9DT05U
RVhUX0ggKi8KZGlmZiAtLWdpdCBhL2xpYi9pb2N0bF93cmFwcGVycy5jIGIvbGliL2lvY3RsX3dy
YXBwZXJzLmMKaW5kZXggMjgwZmRkNjI0Li42MjhmOGI4MzAgMTAwNjQ0Ci0tLSBhL2xpYi9pb2N0
bF93cmFwcGVycy5jCisrKyBiL2xpYi9pb2N0bF93cmFwcGVycy5jCkBAIC00NDUsNiArNDQ1LDcg
QEAgaW50IGdlbV93YWl0KGludCBmZCwgdWludDMyX3QgaGFuZGxlLCBpbnQ2NF90ICp0aW1lb3V0
X25zKQogCXJldCA9IDA7CiAJaWYgKGlndF9pb2N0bChmZCwgRFJNX0lPQ1RMX0k5MTVfR0VNX1dB
SVQsICZ3YWl0KSkKIAkJcmV0ID0gLWVycm5vOworCWVycm5vID0gMDsKIAogCWlmICh0aW1lb3V0
X25zKQogCQkqdGltZW91dF9ucyA9IHdhaXQudGltZW91dF9uczsKZGlmZiAtLWdpdCBhL3Rlc3Rz
L01ha2VmaWxlLnNvdXJjZXMgYi90ZXN0cy9NYWtlZmlsZS5zb3VyY2VzCmluZGV4IDI1MGRiZDMz
Zi4uZjQ1MmFkMjA5IDEwMDY0NAotLS0gYS90ZXN0cy9NYWtlZmlsZS5zb3VyY2VzCisrKyBiL3Rl
c3RzL01ha2VmaWxlLnNvdXJjZXMKQEAgLTE1MSw2ICsxNTEsOSBAQCBnZW1fY3R4X2lzb2xhdGlv
bl9TT1VSQ0VTID0gaTkxNS9nZW1fY3R4X2lzb2xhdGlvbi5jCiBURVNUU19wcm9ncyArPSBnZW1f
Y3R4X3BhcmFtCiBnZW1fY3R4X3BhcmFtX1NPVVJDRVMgPSBpOTE1L2dlbV9jdHhfcGFyYW0uYwog
CitURVNUU19wcm9ncyArPSBnZW1fY3R4X3BlcnNpc3RlbmNlCitnZW1fY3R4X3BlcnNpc3RlbmNl
X1NPVVJDRVMgPSBpOTE1L2dlbV9jdHhfZXJzaXN0ZW5jZS5jCisKIFRFU1RTX3Byb2dzICs9IGdl
bV9jdHhfc2hhcmVkCiBnZW1fY3R4X3NoYXJlZF9TT1VSQ0VTID0gaTkxNS9nZW1fY3R4X3NoYXJl
ZC5jCiAKZGlmZiAtLWdpdCBhL3Rlc3RzL2k5MTUvZ2VtX2N0eF9wZXJzaXN0ZW5jZS5jIGIvdGVz
dHMvaTkxNS9nZW1fY3R4X3BlcnNpc3RlbmNlLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXgg
MDAwMDAwMDAwLi5mYzUyYzc5OWYKLS0tIC9kZXYvbnVsbAorKysgYi90ZXN0cy9pOTE1L2dlbV9j
dHhfcGVyc2lzdGVuY2UuYwpAQCAtMCwwICsxLDI0MiBAQAorLyoKKyAqIENvcHlyaWdodCDCqSAy
MDE5IEludGVsIENvcnBvcmF0aW9uCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRl
ZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2Yg
dGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNv
ZnR3YXJlIiksCisgKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9u
LCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29w
eSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFu
ZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0
byB3aG9tIHRoZQorICogU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRv
IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5v
dGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZSBuZXh0CisgKiBw
YXJhZ3JhcGgpIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwg
cG9ydGlvbnMgb2YgdGhlCisgKiBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJP
VklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgor
ICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBP
RiBNRVJDSEFOVEFCSUxJVFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBB
TkQgTk9OSU5GUklOR0VNRU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBBVVRIT1JTIE9S
IENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9U
SEVSCisgKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JU
IE9SIE9USEVSV0lTRSwgQVJJU0lORworICogRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04g
V0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUworICogSU4gVEhF
IFNPRlRXQVJFLgorICovCisKKyNpbmNsdWRlIDxlcnJuby5oPgorI2luY2x1ZGUgPHN5cy9zb2Nr
ZXQuaD4KKyNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KKyNpbmNsdWRlIDx1bmlzdGQuaD4KKworI2lu
Y2x1ZGUgImRybXRlc3QuaCIgLyogZ2VtX3F1aWVzY2VudF9ncHUoKSEgKi8KKyNpbmNsdWRlICJp
OTE1L2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiaTkxNS9nZW1fc3VibWlzc2lvbi5oIgorI2lu
Y2x1ZGUgImlndF9kdW1teWxvYWQuaCIKKyNpbmNsdWRlICJpb2N0bF93cmFwcGVycy5oIiAvKiBn
ZW1fd2FpdCgpISAqLworI2luY2x1ZGUgInN3X3N5bmMuaCIKKworc3RhdGljIGJvb2wgaGFzX3Bl
cnNpc3RlbmNlKGludCBpOTE1KQoreworCXN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJh
bSBwID0geworCQkucGFyYW0gPSBJOTE1X0NPTlRFWFRfUEFSQU1fUEVSU0lTVEVOQ0UsCisJfTsK
Kwl1aW50NjRfdCBzYXZlZDsKKworCWlmIChfX2dlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1LCAm
cCkpCisJCXJldHVybiBmYWxzZTsKKworCXNhdmVkID0gcC52YWx1ZTsKKwlwLnZhbHVlID0gMDsK
KwlpZiAoX19nZW1fY29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApKQorCQlyZXR1cm4gZmFsc2U7
CisKKwlwLnZhbHVlID0gc2F2ZWQ7CisJcmV0dXJuIF9fZ2VtX2NvbnRleHRfc2V0X3BhcmFtKGk5
MTUsICZwKSA9PSAwOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2lkZW1wb3RlbnQoaW50IGk5MTUp
Cit7CisJc3RydWN0IGRybV9pOTE1X2dlbV9jb250ZXh0X3BhcmFtIHAgPSB7CisJCS5wYXJhbSA9
IEk5MTVfQ09OVEVYVF9QQVJBTV9QRVJTSVNURU5DRSwKKwl9OworCWludCBleHBlY3RlZDsKKwor
CWdlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1LCAmcCk7CisJZXhwZWN0ZWQgPSAhIXAudmFsdWU7
CisKKwlleHBlY3RlZCA9ICFleHBlY3RlZDsKKwlwLnZhbHVlID0gZXhwZWN0ZWQ7CisJZ2VtX2Nv
bnRleHRfc2V0X3BhcmFtKGk5MTUsICZwKTsKKwlnZW1fY29udGV4dF9nZXRfcGFyYW0oaTkxNSwg
JnApOworCWlndF9hc3NlcnRfZXEocC52YWx1ZSwgZXhwZWN0ZWQpOworCisJZXhwZWN0ZWQgPSAh
ZXhwZWN0ZWQ7IC8qIGFuZCByZXN0b3JlcyAqLworCXAudmFsdWUgPSBleHBlY3RlZDsKKwlnZW1f
Y29udGV4dF9zZXRfcGFyYW0oaTkxNSwgJnApOworCWdlbV9jb250ZXh0X2dldF9wYXJhbShpOTE1
LCAmcCk7CisJaWd0X2Fzc2VydF9lcShwLnZhbHVlLCBleHBlY3RlZCk7Cit9CisKK3N0YXRpYyB2
b2lkIHRlc3RfcGVyc2lzdGVuY2UoaW50IGk5MTUpCit7CisJaWd0X3NwaW5fdCAqc3BpbjsKKwlp
bnQ2NF90IHRpbWVvdXQ7CisJdWludDMyX3QgY3R4OworCisJY3R4ID0gZ2VtX2NvbnRleHRfY3Jl
YXRlKGk5MTUpOworCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5jZShpOTE1LCBjdHgsIHRydWUp
OworCisJc3BpbiA9IGlndF9zcGluX25ldyhpOTE1LCBjdHgsIC5mbGFncyA9IElHVF9TUElOX0ZF
TkNFX09VVCk7CisJZ2VtX2NvbnRleHRfZGVzdHJveShpOTE1LCBjdHgpOworCisJdGltZW91dCA9
IE5TRUNfUEVSX1NFQyAvIDU7CisJaWd0X2Fzc2VydF9lcShnZW1fd2FpdChpOTE1LCBzcGluLT5o
YW5kbGUsICZ0aW1lb3V0KSwgLUVUSU1FKTsKKworCWlndF9zcGluX2VuZChzcGluKTsKKworCXRp
bWVvdXQgPSBOU0VDX1BFUl9TRUMgLyA1OworCWlndF9hc3NlcnRfZXEoZ2VtX3dhaXQoaTkxNSwg
c3Bpbi0+aGFuZGxlLCAmdGltZW91dCksIDApOworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV9z
dGF0dXMoc3Bpbi0+b3V0X2ZlbmNlKSwgMSk7CisKKwlpZ3Rfc3Bpbl9mcmVlKGk5MTUsIHNwaW4p
OworCWdlbV9xdWllc2NlbnRfZ3B1KGk5MTUpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X25vbnBl
cnNpc3RlbnRfY2xlYW51cChpbnQgaTkxNSkKK3sKKwlpbnQ2NF90IHRpbWVvdXQgPSBOU0VDX1BF
Ul9TRUMgLyA1OworCWlndF9zcGluX3QgKnNwaW47CisJdWludDMyX3QgY3R4OworCisJY3R4ID0g
Z2VtX2NvbnRleHRfY3JlYXRlKGk5MTUpOworCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5jZShp
OTE1LCBjdHgsIGZhbHNlKTsKKworCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgY3R4LCAuZmxh
Z3MgPSBJR1RfU1BJTl9GRU5DRV9PVVQpOworCWdlbV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgY3R4
KTsKKworCWlndF9hc3NlcnRfZXEoZ2VtX3dhaXQoaTkxNSwgc3Bpbi0+aGFuZGxlLCAmdGltZW91
dCksIDApOworCWlndF9hc3NlcnRfZXEoc3luY19mZW5jZV9zdGF0dXMoc3Bpbi0+b3V0X2ZlbmNl
KSwgLUVJTyk7CisKKwlpZ3Rfc3Bpbl9mcmVlKGk5MTUsIHNwaW4pOworCWdlbV9xdWllc2NlbnRf
Z3B1KGk5MTUpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X25vbnBlcnNpc3RlbnRfaG9zdGlsZShp
bnQgaTkxNSkKK3sKKwlpbnQ2NF90IHRpbWVvdXQgPSBOU0VDX1BFUl9TRUMgLyAyOworCWlndF9z
cGluX3QgKnNwaW47CisJdWludDMyX3QgY3R4OworCisJY3R4ID0gZ2VtX2NvbnRleHRfY3JlYXRl
KGk5MTUpOworCWdlbV9jb250ZXh0X3NldF9wZXJzaXN0ZW5jZShpOTE1LCBjdHgsIGZhbHNlKTsK
KworCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgY3R4LCAuZmxhZ3MgPSBJR1RfU1BJTl9OT19Q
UkVFTVBUSU9OKTsKKwlnZW1fY29udGV4dF9kZXN0cm95KGk5MTUsIGN0eCk7CisKKwlpZ3RfYXNz
ZXJ0X2VxKGdlbV93YWl0KGk5MTUsIHNwaW4tPmhhbmRsZSwgJnRpbWVvdXQpLCAwKTsKKworCWln
dF9zcGluX2ZyZWUoaTkxNSwgc3Bpbik7CisJZ2VtX3F1aWVzY2VudF9ncHUoaTkxNSk7Cit9CisK
K3N0YXRpYyB2b2lkIHNlbmRmZChpbnQgc29ja2V0LCBpbnQgZmQpCit7CisJc3RydWN0IGlvdmVj
IGlvID0geyAuaW92X2Jhc2UgPSAoY2hhciAqKSJBQkMiLCAuaW92X2xlbiA9IDMgfTsKKwlzdHJ1
Y3QgbXNnaGRyIG1zZyA9IHt9OworCWNoYXIgYnVmW0NNU0dfU1BBQ0Uoc2l6ZW9mKGZkKSldOwor
CXN0cnVjdCBjbXNnaGRyICpjbXNnOworCisJbXNnLm1zZ19pb3YgPSAmaW87CisJbXNnLm1zZ19p
b3ZsZW4gPSAxOworCW1zZy5tc2dfY29udHJvbCA9IGJ1ZjsKKwltc2cubXNnX2NvbnRyb2xsZW4g
PSBzaXplb2YoYnVmKTsKKworCWNtc2cgPSBDTVNHX0ZJUlNUSERSKCZtc2cpOworCWNtc2ctPmNt
c2dfbGV2ZWwgPSBTT0xfU09DS0VUOworCWNtc2ctPmNtc2dfdHlwZSA9IFNDTV9SSUdIVFM7CisJ
Y21zZy0+Y21zZ19sZW4gPSBDTVNHX0xFTihzaXplb2YoZmQpKTsKKworCSooaW50ICopQ01TR19E
QVRBKGNtc2cpID0gZmQ7CisJbXNnLm1zZ19jb250cm9sbGVuID0gY21zZy0+Y21zZ19sZW47CisK
KwlpZ3RfYXNzZXJ0KHNlbmRtc2coc29ja2V0LCAmbXNnLCAwKSAhPSAtMSk7Cit9CisKK3N0YXRp
YyBpbnQgcmVjdmZkKGludCBzb2NrZXQpCit7CisJY2hhciBtX2J1ZmZlclsyNTZdLCBjX2J1ZmZl
clsyNTZdOworCXN0cnVjdCBpb3ZlYyBpbyA9IHsKKwkJLmlvdl9iYXNlID0gbV9idWZmZXIsCisJ
CS5pb3ZfbGVuID0gc2l6ZW9mKG1fYnVmZmVyKSwKKwl9OworCXN0cnVjdCBtc2doZHIgbXNnID0g
eworCQkubXNnX2lvdiA9ICZpbywKKwkJLm1zZ19pb3ZsZW4gPSAxLAorCQkubXNnX2NvbnRyb2wg
PSBjX2J1ZmZlciwKKwkJLm1zZ19jb250cm9sbGVuID0gc2l6ZW9mKGNfYnVmZmVyKSwKKwl9Owor
CisJaWd0X2Fzc2VydChyZWN2bXNnKHNvY2tldCwgJm1zZywgMCkgIT0gLTEpOworCXJldHVybiAq
KGludCAqKUNNU0dfREFUQShDTVNHX0ZJUlNUSERSKCZtc2cpKTsKK30KKworc3RhdGljIHZvaWQg
dGVzdF9ub25wZXJzaXN0ZW50X3Byb2Nlc3MoaW50IGk5MTUpCit7CisJaW50IGZlbmNlLCBzdlsy
XTsKKworCWlndF9yZXF1aXJlKHNvY2tldHBhaXIoQUZfVU5JWCwgU09DS19ER1JBTSwgMCwgc3Yp
ID09IDApOworCisJaWd0X2ZvcmsoY2hpbGQsIDEpIHsKKwkJaWd0X3NwaW5fdCAqc3BpbjsKKwor
CQlpOTE1ID0gZ2VtX3Jlb3Blbl9kcml2ZXIoaTkxNSk7CisJCWdlbV9jb250ZXh0X3NldF9wZXJz
aXN0ZW5jZShpOTE1LCAwLCBmYWxzZSk7CisJCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgLmZs
YWdzID0gSUdUX1NQSU5fRkVOQ0VfT1VUKTsKKworCQlzZW5kZmQoc3ZbMF0sIHNwaW4tPm91dF9m
ZW5jZSk7CisKKwkJaWd0X2xpc3RfZGVsKCZzcGluLT5saW5rKTsgLyogcHJldmVudCBhdXRvY2xl
YW51cCAqLworCX0KKwlpZ3Rfd2FpdGNoaWxkcmVuKCk7CisKKwlmZW5jZSA9IHJlY3ZmZChzdlsx
XSk7CisJY2xvc2Uoc3ZbMF0pOworCWNsb3NlKHN2WzFdKTsKKworCWlndF9hc3NlcnRfZXEoc3lu
Y19mZW5jZV93YWl0KGZlbmNlLCBNU0VDX1BFUl9TRUMgLyA1KSwgMCk7CisJaWd0X2Fzc2VydF9l
cShzeW5jX2ZlbmNlX3N0YXR1cyhmZW5jZSksIC1FSU8pOworCWNsb3NlKGZlbmNlKTsKKworCWdl
bV9xdWllc2NlbnRfZ3B1KGk5MTUpOworfQorCitpZ3RfbWFpbgoreworCWludCBpOTE1OworCisJ
aWd0X2ZpeHR1cmUgeworCQlpOTE1ID0gZHJtX29wZW5fZHJpdmVyKERSSVZFUl9JTlRFTCk7CisJ
CWlndF9yZXF1aXJlX2dlbShpOTE1KTsKKworCQlpZ3RfcmVxdWlyZShoYXNfcGVyc2lzdGVuY2Uo
aTkxNSkpOworCX0KKworCWlndF9zdWJ0ZXN0X2dyb3VwIHsKKwkJaWd0X3N1YnRlc3QoImlkZW1w
b3RlbnQiKQorCQkJdGVzdF9pZGVtcG90ZW50KGk5MTUpOworCisJCWlndF9zdWJ0ZXN0KCJwZXJz
aXN0ZW5jZSIpCisJCQl0ZXN0X3BlcnNpc3RlbmNlKGk5MTUpOworCisJCWlndF9zdWJ0ZXN0KCJj
bGVhbnVwIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9jbGVhbnVwKGk5MTUpOworCisJCWlndF9z
dWJ0ZXN0KCJob3N0aWxlIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9ob3N0aWxlKGk5MTUpOwor
CisJCWlndF9zdWJ0ZXN0KCJwcm9jZXNzIikKKwkJCXRlc3Rfbm9ucGVyc2lzdGVudF9wcm9jZXNz
KGk5MTUpOworCX0KKworCWlndF9maXh0dXJlIHsKKwkJY2xvc2UoaTkxNSk7CisJfQorfQpkaWZm
IC0tZ2l0IGEvdGVzdHMvbWVzb24uYnVpbGQgYi90ZXN0cy9tZXNvbi5idWlsZAppbmRleCAzNGE3
NDAyNWEuLmQ3OWUwYzk3NyAxMDA2NDQKLS0tIGEvdGVzdHMvbWVzb24uYnVpbGQKKysrIGIvdGVz
dHMvbWVzb24uYnVpbGQKQEAgLTExOCw2ICsxMTgsNyBAQCBpOTE1X3Byb2dzID0gWwogCSdnZW1f
Y3R4X2V4ZWMnLAogCSdnZW1fY3R4X2lzb2xhdGlvbicsCiAJJ2dlbV9jdHhfcGFyYW0nLAorCSdn
ZW1fY3R4X3BlcnNpc3RlbmNlJywKIAknZ2VtX2N0eF9zaGFyZWQnLAogCSdnZW1fY3R4X3N3aXRj
aCcsCiAJJ2dlbV9jdHhfdGhyYXNoJywKLS0gCjIuMjMuMC5yYzEKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50
ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9y
Zy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

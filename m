Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 5F99B82E59
	for <lists+intel-gfx@lfdr.de>; Tue,  6 Aug 2019 11:06:07 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1FF3D6E33A;
	Tue,  6 Aug 2019 09:06:05 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 238856E348
 for <intel-gfx@lists.freedesktop.org>; Tue,  6 Aug 2019 09:06:04 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17901465-1500050 
 for multiple; Tue, 06 Aug 2019 10:05:38 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  6 Aug 2019 10:05:21 +0100
Message-Id: <20190806090535.14807-8-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190806090535.14807-1-chris@chris-wilson.co.uk>
References: <20190806090535.14807-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/22] drm/i915: Push the ring creation flags to
 the backend
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UHVzaCB0aGUgcmluZyBjcmVhdGlvbiBmbGFncyBmcm9tIHRoZSBvdXRlciBHRU0gY29udGV4dCB0
byB0aGUgaW5uZXIKaW50ZWxfY29udGV4dCB0byBhdm9pZCBhbiB1bnNpZ2h0bHkgYmFjay1yZWZl
cmVuY2UgZnJvbSBpbnNpZGUgdGhlCmJhY2tlbmQuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxz
b24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KUmV2aWV3ZWQtYnk6IEFuZGkgU2h5dGkgPGFu
ZGkuc2h5dGlAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9jb250ZXh0LmMgICB8IDUyICsrKysrKysrKysrKysrLS0tLS0KIC4uLi9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2NvbnRleHRfdHlwZXMuaCB8ICAzIC0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9jb250ZXh0LmMgICAgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmggICAgICAgfCAgNSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX2NzLmMgICAgIHwgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfbHJjLmMgICAgICAgICAgIHwgIDUgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X3JpbmdidWZmZXIuYyAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2Vu
Z2luZS5jICAgICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2Zz
LmMgICAgICAgICAgIHwgMjMgKysrKystLS0KIDkgZmlsZXMgY2hhbmdlZCwgNjUgaW5zZXJ0aW9u
cygrKSwgMzAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z2VtL2k5MTVfZ2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV9jb250ZXh0LmMKaW5kZXggMWM1YmMyMWE4MGZmLi42Mjc0Y2ZlM2FkM2MgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwpAQCAtNDM1LDggKzQzNSw2IEBA
IF9fY3JlYXRlX2NvbnRleHQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJaTkxNV9n
ZW1fY29udGV4dF9zZXRfYmFubmFibGUoY3R4KTsKIAlpOTE1X2dlbV9jb250ZXh0X3NldF9yZWNv
dmVyYWJsZShjdHgpOwogCi0JY3R4LT5yaW5nX3NpemUgPSA0ICogUEFHRV9TSVpFOwotCiAJZm9y
IChpID0gMDsgaSA8IEFSUkFZX1NJWkUoY3R4LT5oYW5nX3RpbWVzdGFtcCk7IGkrKykKIAkJY3R4
LT5oYW5nX3RpbWVzdGFtcFtpXSA9IGppZmZpZXMgLSBDT05URVhUX0ZBU1RfSEFOR19KSUZGSUVT
OwogCkBAIC00NDcsMjIgKzQ0NSwzNCBAQCBfX2NyZWF0ZV9jb250ZXh0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1KQogCXJldHVybiBFUlJfUFRSKGVycik7CiB9CiAKK3N0YXRpYyB2b2lk
Citjb250ZXh0X2FwcGx5X2FsbChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAorCQkgIHZv
aWQgKCpmbikoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB2b2lkICpkYXRhKSwKKwkJICB2b2lk
ICpkYXRhKQoreworCXN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzX2l0ZXIgaXQ7CisJc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlOworCisJZm9yX2VhY2hfZ2VtX2VuZ2luZShjZSwgaTkxNV9nZW1fY29u
dGV4dF9sb2NrX2VuZ2luZXMoY3R4KSwgaXQpCisJCWZuKGNlLCBkYXRhKTsKKwlpOTE1X2dlbV9j
b250ZXh0X3VubG9ja19lbmdpbmVzKGN0eCk7Cit9CisKK3N0YXRpYyB2b2lkIF9fYXBwbHlfcHBn
dHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB2b2lkICp2bSkKK3sKKwlpOTE1X3ZtX3B1dChj
ZS0+dm0pOworCWNlLT52bSA9IGk5MTVfdm1fZ2V0KHZtKTsKK30KKwogc3RhdGljIHN0cnVjdCBp
OTE1X2FkZHJlc3Nfc3BhY2UgKgogX19zZXRfcHBndHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQg
KmN0eCwgc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0pCiB7CiAJc3RydWN0IGk5MTVfYWRk
cmVzc19zcGFjZSAqb2xkID0gY3R4LT52bTsKLQlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lc19pdGVy
IGl0OwotCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAogCUdFTV9CVUdfT04ob2xkICYmIGk5
MTVfdm1faXNfNGx2bCh2bSkgIT0gaTkxNV92bV9pc180bHZsKG9sZCkpOwogCiAJY3R4LT52bSA9
IGk5MTVfdm1fZ2V0KHZtKTsKLQotCWZvcl9lYWNoX2dlbV9lbmdpbmUoY2UsIGk5MTVfZ2VtX2Nv
bnRleHRfbG9ja19lbmdpbmVzKGN0eCksIGl0KSB7Ci0JCWk5MTVfdm1fcHV0KGNlLT52bSk7Ci0J
CWNlLT52bSA9IGk5MTVfdm1fZ2V0KHZtKTsKLQl9Ci0JaTkxNV9nZW1fY29udGV4dF91bmxvY2tf
ZW5naW5lcyhjdHgpOworCWNvbnRleHRfYXBwbHlfYWxsKGN0eCwgX19hcHBseV9wcGd0dCwgdm0p
OwogCiAJcmV0dXJuIG9sZDsKIH0KQEAgLTUyOCw2ICs1MzgsMTEgQEAgaTkxNV9nZW1fY3JlYXRl
X2NvbnRleHQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1bnNpZ25lZCBpbnQg
ZmxhZ3MpCiAJcmV0dXJuIGN0eDsKIH0KIAorc3RhdGljIHZvaWQgX19hcHBseV9yaW5nX3NpemUo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlLCB2b2lkICpkYXRhKQoreworCWNlLT5yaW5nID0gZGF0
YTsKK30KKwogLyoqCiAgKiBpOTE1X2dlbV9jb250ZXh0X2NyZWF0ZV9ndnQgLSBjcmVhdGUgYSBH
VlQgR0VNIGNvbnRleHQKICAqIEBkZXY6IGRybSBkZXZpY2UgKgpAQCAtNTQyLDYgKzU1Nyw3IEBA
IHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICoKIGk5MTVfZ2VtX2NvbnRleHRfY3JlYXRlX2d2dChz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogewogCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7
CisJdW5zaWduZWQgbG9uZyByaW5nX3NpemU7CiAJaW50IHJldDsKIAogCWlmICghSVNfRU5BQkxF
RChDT05GSUdfRFJNX0k5MTVfR1ZUKSkKQEAgLTU2Niw4ICs1ODIsMTQgQEAgaTkxNV9nZW1fY29u
dGV4dF9jcmVhdGVfZ3Z0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJaTkxNV9nZW1fY29udGV4
dF9zZXRfY2xvc2VkKGN0eCk7IC8qIG5vdCB1c2VyIGFjY2Vzc2libGUgKi8KIAlpOTE1X2dlbV9j
b250ZXh0X2NsZWFyX2Jhbm5hYmxlKGN0eCk7CiAJaTkxNV9nZW1fY29udGV4dF9zZXRfZm9yY2Vf
c2luZ2xlX3N1Ym1pc3Npb24oY3R4KTsKKworCXJpbmdfc2l6ZSA9IFNaXzRLOwogCWlmICghVVNF
U19HVUNfU1VCTUlTU0lPTih0b19pOTE1KGRldikpKQotCQljdHgtPnJpbmdfc2l6ZSA9IDUxMiAq
IFBBR0VfU0laRTsgLyogTWF4IHJpbmcgYnVmZmVyIHNpemUgKi8KKwkJcmluZ19zaXplID0gNTEy
ICogU1pfNEs7IC8qIG1heCAqLworCisJY29udGV4dF9hcHBseV9hbGwoY3R4LAorCQkJICBfX2Fw
cGx5X3Jpbmdfc2l6ZSwKKwkJCSAgX19pbnRlbF9jb250ZXh0X3Jpbmdfc2l6ZShyaW5nX3NpemUp
KTsKIAogCUdFTV9CVUdfT04oaTkxNV9nZW1fY29udGV4dF9pc19rZXJuZWwoY3R4KSk7CiBvdXQ6
CkBAIC02MDYsNyArNjI4LDYgQEAgaTkxNV9nZW1fY29udGV4dF9jcmVhdGVfa2VybmVsKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBpbnQgcHJpbykKIAogCWk5MTVfZ2VtX2NvbnRleHRf
Y2xlYXJfYmFubmFibGUoY3R4KTsKIAljdHgtPnNjaGVkLnByaW9yaXR5ID0gSTkxNV9VU0VSX1BS
SU9SSVRZKHByaW8pOwotCWN0eC0+cmluZ19zaXplID0gUEFHRV9TSVpFOwogCiAJR0VNX0JVR19P
TighaTkxNV9nZW1fY29udGV4dF9pc19rZXJuZWwoY3R4KSk7CiAKQEAgLTE1OTAsNiArMTYxMSw3
IEBAIHNldF9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJZm9yIChuID0g
MDsgbiA8IG51bV9lbmdpbmVzOyBuKyspIHsKIAkJc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2lu
c3RhbmNlIGNpOwogCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CisJCXN0cnVjdCBp
bnRlbF9jb250ZXh0ICpjZTsKIAogCQlpZiAoY29weV9mcm9tX3VzZXIoJmNpLCAmdXNlci0+ZW5n
aW5lc1tuXSwgc2l6ZW9mKGNpKSkpIHsKIAkJCV9fZnJlZV9lbmdpbmVzKHNldC5lbmdpbmVzLCBu
KTsKQEAgLTE2MTIsMTEgKzE2MzQsMTMgQEAgc2V0X2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2Nv
bnRleHQgKmN0eCwKIAkJCXJldHVybiAtRU5PRU5UOwogCQl9CiAKLQkJc2V0LmVuZ2luZXMtPmVu
Z2luZXNbbl0gPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShjdHgsIGVuZ2luZSk7Ci0JCWlmICghc2V0
LmVuZ2luZXMtPmVuZ2luZXNbbl0pIHsKKwkJY2UgPSBpbnRlbF9jb250ZXh0X2NyZWF0ZShjdHgs
IGVuZ2luZSk7CisJCWlmICghY2UpIHsKIAkJCV9fZnJlZV9lbmdpbmVzKHNldC5lbmdpbmVzLCBu
KTsKIAkJCXJldHVybiAtRU5PTUVNOwogCQl9CisKKwkJc2V0LmVuZ2luZXMtPmVuZ2luZXNbbl0g
PSBjZTsKIAl9CiAJc2V0LmVuZ2luZXMtPm51bV9lbmdpbmVzID0gbnVtX2VuZ2luZXM7CiAKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVz
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCmlu
ZGV4IGEwMmQ5ODQ5NDA3OC4uMjYwZDU5Y2MzZGU4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKQEAgLTE2OSw5ICsxNjksNiBAQCBz
dHJ1Y3QgaTkxNV9nZW1fY29udGV4dCB7CiAKIAlzdHJ1Y3QgaTkxNV9zY2hlZF9hdHRyIHNjaGVk
OwogCi0JLyoqIHJpbmdfc2l6ZTogc2l6ZSBmb3IgYWxsb2NhdGluZyB0aGUgcGVyLWVuZ2luZSBy
aW5nIGJ1ZmZlciAqLwotCXUzMiByaW5nX3NpemU7Ci0KIAkvKiogZ3VpbHR5X2NvdW50OiBIb3cg
bWFueSB0aW1lcyB0aGlzIGNvbnRleHQgaGFzIGNhdXNlZCBhIEdQVSBoYW5nLiAqLwogCWF0b21p
Y190IGd1aWx0eV9jb3VudDsKIAkvKioKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRl
eHQuYwppbmRleCA0MWQzOGU2NjFkZTcuLjZkMWQ0ZThkYmZjOSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2NvbnRleHQuYwpAQCAtMjIyLDYgKzIyMiw3IEBAIGludGVsX2NvbnRleHRf
aW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJY2UtPmVuZ2luZSA9IGVuZ2luZTsKIAlj
ZS0+b3BzID0gZW5naW5lLT5jb3BzOwogCWNlLT5zc2V1ID0gZW5naW5lLT5zc2V1OworCWNlLT5y
aW5nID0gX19pbnRlbF9jb250ZXh0X3Jpbmdfc2l6ZShTWl8xNkspOwogCiAJSU5JVF9MSVNUX0hF
QUQoJmNlLT5zaWduYWxfbGluayk7CiAJSU5JVF9MSVNUX0hFQUQoJmNlLT5zaWduYWxzKTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAppbmRleCAwN2Y5OTI0ZGU0OGYuLjEz
ZjI4ZGQzMTZiYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29u
dGV4dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaApAQCAt
MTM2LDQgKzEzNiw5IEBAIGludCBpbnRlbF9jb250ZXh0X3ByZXBhcmVfcmVtb3RlX3JlcXVlc3Qo
c3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogCiBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICppbnRlbF9j
b250ZXh0X2NyZWF0ZV9yZXF1ZXN0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSk7CiAKK3N0YXRp
YyBpbmxpbmUgc3RydWN0IGludGVsX3JpbmcgKl9faW50ZWxfY29udGV4dF9yaW5nX3NpemUodTY0
IHN6KQoreworCXJldHVybiB1NjRfdG9fcHRyKHN0cnVjdCBpbnRlbF9yaW5nLCBzeik7Cit9CisK
ICNlbmRpZiAvKiBfX0lOVEVMX0NPTlRFWFRfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IDU3NDgwNzllYmNlMi4uOWIxM2NlMTFlOTljIDEwMDY0
NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtNzM4LDYgKzczOCw4
IEBAIHN0YXRpYyBpbnQgcGluX2NvbnRleHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCwK
IAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCisJY2UtPnJpbmcgPSBf
X2ludGVsX2NvbnRleHRfcmluZ19zaXplKFNaXzRLKTsKKwogCWVyciA9IGludGVsX2NvbnRleHRf
cGluKGNlKTsKIAlpbnRlbF9jb250ZXh0X3B1dChjZSk7CiAJaWYgKGVycikKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfbHJjLmMKaW5kZXggMTMyMTY2MjY1ZWIwLi40OTFmMGNiMzRmNTEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0zMTE1LDkgKzMxMTUsOCBAQCBzdGF0aWMg
aW50IF9fZXhlY2xpc3RzX2NvbnRleHRfYWxsb2Moc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAog
CQlnb3RvIGVycm9yX2RlcmVmX29iajsKIAl9CiAKLQlyaW5nID0gaW50ZWxfZW5naW5lX2NyZWF0
ZV9yaW5nKGVuZ2luZSwKLQkJCQkJdGltZWxpbmUsCi0JCQkJCWNlLT5nZW1fY29udGV4dC0+cmlu
Z19zaXplKTsKKwlyaW5nID0gaW50ZWxfZW5naW5lX2NyZWF0ZV9yaW5nKGVuZ2luZSwgdGltZWxp
bmUsCisJCQkJCSh1bnNpZ25lZCBsb25nKWNlLT5yaW5nKTsKIAlpbnRlbF90aW1lbGluZV9wdXQo
dGltZWxpbmUpOwogCWlmIChJU19FUlIocmluZykpIHsKIAkJcmV0ID0gUFRSX0VSUihyaW5nKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYwppbmRleCBlMjMyYzE5
OTg1NDAuLmJiNjlmNTFjY2JmYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfcmluZ2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdidWZmZXIuYwpAQCAtMjM0OSw3ICsyMzQ5LDcgQEAgaW50IGludGVsX3Jpbmdfc3VibWlzc2lv
bl9pbml0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAl9CiAJR0VNX0JVR19PTih0
aW1lbGluZS0+aGFzX2luaXRpYWxfYnJlYWRjcnVtYik7CiAKLQlyaW5nID0gaW50ZWxfZW5naW5l
X2NyZWF0ZV9yaW5nKGVuZ2luZSwgdGltZWxpbmUsIDMyICogUEFHRV9TSVpFKTsKKwlyaW5nID0g
aW50ZWxfZW5naW5lX2NyZWF0ZV9yaW5nKGVuZ2luZSwgdGltZWxpbmUsIFNaXzE2Syk7CiAJaW50
ZWxfdGltZWxpbmVfcHV0KHRpbWVsaW5lKTsKIAlpZiAoSVNfRVJSKHJpbmcpKSB7CiAJCWVyciA9
IFBUUl9FUlIocmluZyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2Nr
X2VuZ2luZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwppbmRleCAy
NjkwOTIyZWVkNTYuLjNhY2E4ODYwNGQyZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvbW9ja19lbmdpbmUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2Vu
Z2luZS5jCkBAIC0xNDAsNyArMTQwLDcgQEAgc3RhdGljIHZvaWQgbW9ja19jb250ZXh0X2Rlc3Ry
b3koc3RydWN0IGtyZWYgKnJlZikKIAogCUdFTV9CVUdfT04oaW50ZWxfY29udGV4dF9pc19waW5u
ZWQoY2UpKTsKIAotCWlmIChjZS0+cmluZykKKwlpZiAodGVzdF9iaXQoQ09OVEVYVF9BTExPQ19C
SVQsICZjZS0+ZmxhZ3MpKQogCQltb2NrX3JpbmdfZnJlZShjZS0+cmluZyk7CiAKIAlpbnRlbF9j
b250ZXh0X2ZpbmkoY2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9k
ZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYwppbmRleCA2NjU5
YjYxNjM0NGEuLjcwYzMzZWFjMmY4NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMK
QEAgLTMwOCwxMCArMzA4LDE0IEBAIHN0YXRpYyB2b2lkIHByaW50X2NvbnRleHRfc3RhdHMoc3Ry
dWN0IHNlcV9maWxlICptLAogCiAJCWZvcl9lYWNoX2dlbV9lbmdpbmUoY2UsCiAJCQkJICAgIGk5
MTVfZ2VtX2NvbnRleHRfbG9ja19lbmdpbmVzKGN0eCksIGl0KSB7Ci0JCQlpZiAoY2UtPnN0YXRl
KQotCQkJCXBlcl9maWxlX3N0YXRzKDAsIGNlLT5zdGF0ZS0+b2JqLCAma3N0YXRzKTsKLQkJCWlm
IChjZS0+cmluZykKKwkJCWludGVsX2NvbnRleHRfbG9ja19waW5uZWQoY2UpOworCQkJaWYgKGlu
dGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSkgeworCQkJCWlmIChjZS0+c3RhdGUpCisJCQkJCXBl
cl9maWxlX3N0YXRzKDAsCisJCQkJCQkgICAgICAgY2UtPnN0YXRlLT5vYmosICZrc3RhdHMpOwog
CQkJCXBlcl9maWxlX3N0YXRzKDAsIGNlLT5yaW5nLT52bWEtPm9iaiwgJmtzdGF0cyk7CisJCQl9
CisJCQlpbnRlbF9jb250ZXh0X3VubG9ja19waW5uZWQoY2UpOwogCQl9CiAJCWk5MTVfZ2VtX2Nv
bnRleHRfdW5sb2NrX2VuZ2luZXMoY3R4KTsKIApAQCAtMTYxMSwxMiArMTYxNSwxNSBAQCBzdGF0
aWMgaW50IGk5MTVfY29udGV4dF9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICp1bnVz
ZWQpCiAKIAkJZm9yX2VhY2hfZ2VtX2VuZ2luZShjZSwKIAkJCQkgICAgaTkxNV9nZW1fY29udGV4
dF9sb2NrX2VuZ2luZXMoY3R4KSwgaXQpIHsKLQkJCXNlcV9wcmludGYobSwgIiVzOiAiLCBjZS0+
ZW5naW5lLT5uYW1lKTsKLQkJCWlmIChjZS0+c3RhdGUpCi0JCQkJZGVzY3JpYmVfb2JqKG0sIGNl
LT5zdGF0ZS0+b2JqKTsKLQkJCWlmIChjZS0+cmluZykKKwkJCWludGVsX2NvbnRleHRfbG9ja19w
aW5uZWQoY2UpOworCQkJaWYgKGludGVsX2NvbnRleHRfaXNfcGlubmVkKGNlKSkgeworCQkJCXNl
cV9wcmludGYobSwgIiVzOiAiLCBjZS0+ZW5naW5lLT5uYW1lKTsKKwkJCQlpZiAoY2UtPnN0YXRl
KQorCQkJCQlkZXNjcmliZV9vYmoobSwgY2UtPnN0YXRlLT5vYmopOwogCQkJCWRlc2NyaWJlX2N0
eF9yaW5nKG0sIGNlLT5yaW5nKTsKLQkJCXNlcV9wdXRjKG0sICdcbicpOworCQkJCXNlcV9wdXRj
KG0sICdcbicpOworCQkJfQorCQkJaW50ZWxfY29udGV4dF91bmxvY2tfcGlubmVkKGNlKTsKIAkJ
fQogCQlpOTE1X2dlbV9jb250ZXh0X3VubG9ja19lbmdpbmVzKGN0eCk7CiAKLS0gCjIuMjMuMC5y
YzEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVs
LWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczov
L2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

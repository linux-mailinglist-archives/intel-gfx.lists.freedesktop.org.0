Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 2DDE711270C
	for <lists+intel-gfx@lfdr.de>; Wed,  4 Dec 2019 10:22:45 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AB6886F922;
	Wed,  4 Dec 2019 09:22:42 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C12C66F915
 for <intel-gfx@lists.freedesktop.org>; Wed,  4 Dec 2019 09:22:40 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19453404-1500050 
 for <intel-gfx@lists.freedesktop.org>; Wed, 04 Dec 2019 09:22:34 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  4 Dec 2019 09:22:36 +0000
Message-Id: <20191204092236.3616225-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915: Introduce DRM_I915_GEM_MMAP_OFFSET
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogQWJkaWVsIEphbnVsZ3VlIDxhYmRpZWwuamFudWxndWVAbGludXguaW50ZWwuY29tPgoK
VGhpcyBpcyByZWFsbHkganVzdCBhbiBhbGlhcyBvZiBtbWFwX2d0dC4gVGhlICdtbWFwIG9mZnNl
dCcgbm9tZW5jbGF0dXJlCmNvbWVzIGZyb20gdGhlIHZhbHVlIHJldHVybmVkIGJ5IHRoaXMgaW9j
dGwgd2hpY2ggaXMgdGhlIG9mZnNldCBpbnRvIHRoZQpkZXZpY2UgZmQgd2hpY2ggdXNlcnBhY2Ug
dXNlcyB3aXRoIG1tYXAoMikuCgptbWFwX2d0dCB3YXMgb3VyIGluaXRpYWwgbW1hcF9vZmZzZXQg
aW1wbGVtZW50YXRpb24sIHRoaXMgZXh0ZW5kcwpvdXIgQ1BVIG1tYXAgc3VwcG9ydCB0byBhbGxv
dyBhZGRpdGlvbmFsIGZhdWx0IGhhbmRsZXJzIHRoYXQgZGVwZW5kcyBvbgp0aGUgb2JqZWN0J3Mg
YmFja2luZyBwYWdlcy4KCk5vdGUgdGhhdCB3ZSBtdWx0aXBsZXggbW1hcF9ndHQgYW5kIG1tYXBf
b2Zmc2V0IHRocm91Z2ggdGhlIHNhbWUgaW9jdGwsCmFuZCB1c2UgdGhlIHplcm8gZXh0ZW5kaW5n
IGJlaGF2aW91ciBvZiBkcm0gdG8gZGlmZmVyZW50aWF0ZSBiZXR3ZWVuCnRoZW0sIHdoZW4gd2Ug
aW5zcGVjdCB0aGUgZmxhZ3MuCgpUbyBzdXBwb3J0IG11bHRpcGxlIG1tYXAgdHlwZXMgb24gYW4g
b2JqZWN0IHdlIG5lZWQgdG8gc3VwcG9ydCBtdWx0aXBsZQptbWFwX29mZnNldHMgZm9yIGFuIG9i
amVjdCAoZWFjaCBvZmZzZXQgaW4gdGhlIGdsb2JhbCBkZXZpY2UgYWRkcmVzcwpzcGFjZSBjb3Jy
ZXNwb25kaW5nIHRvIGEgdW5pcXVlIGluc3RhbmNlIG9mIHRoZSBvYmplY3QgZm9yIGEgZmlsZSAr
IG1tYXAKdHlwZSkuIEFzIHdlIGRyb3AgdGhlIHNpbXBsaWZpZWQgZHJtIGNvcmUgaWRlYSBvZiBh
IHNpbmdsZSBtbWFwX29mZnNldCwKd2UgbmVlZCB0byBwcm92aWRlIHJlcGxhY2VtZW50IGhvb2tz
IGZvciB0aGUgZHVtYiBtbWFwIGludGVyZmFjZSBhcwp3ZWxsLgoKTGluazogaHR0cHM6Ly9naXRs
YWIuZnJlZWRlc2t0b3Aub3JnL21lc2EvbWVzYS9tZXJnZV9yZXF1ZXN0cy8xNjc1ClRlc3RjYXNl
OiBpZ3QvZ2VtX21tYXBfb2Zmc2V0ClNpZ25lZC1vZmYtYnk6IEFiZGllbCBKYW51bGd1ZSA8YWJk
aWVsLmphbnVsZ3VlQGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogTWF0dGhldyBBdWxk
IDxtYXR0aGV3LmF1bGRAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9kb21haW4uYyAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1faW9jdGxzLmggICAgfCAgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9tbWFuLmMgICAgICB8IDQ2MSArKysrKysrKysrKysrKy0tLS0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2dlbS9pOTE1X2dlbV9tbWFuLmggICAgICB8ICAzMSArKwogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jICAgIHwgIDI3ICsKIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuaCAgICB8ICAgNyArLQogLi4uL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmggIHwgIDIzICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9wYWdlcy5jICAgICB8ICAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fdGlsaW5nLmMgICAgfCAgIDEgKwogLi4uL2RybS9pOTE1L2dlbS9zZWxmdGVz
dHMvaTkxNV9nZW1fbW1hbi5jICAgIHwgIDg4ICsrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX3Jlc2V0LmMgICAgICAgICB8ICAgNyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kcnYuYyAgICAgICAgICAgICAgIHwgIDE1ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2Rydi5oICAgICAgICAgICAgICAgfCAgIDQgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9n
ZW0uYyAgICAgICAgICAgICAgIHwgICAzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
dHBhcmFtLmMgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEu
YyAgICAgICAgICAgICAgIHwgICA1ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5o
ICAgICAgICAgICAgICAgfCAgIDMgKwogaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oICAgICAg
ICAgICAgICAgICAgIHwgIDMyICsrCiAxOCBmaWxlcyBjaGFuZ2VkLCA1NzQgaW5zZXJ0aW9ucygr
KSwgMTQyIGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9tbWFuLmgKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vaTkxNV9nZW1fZG9tYWluLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9n
ZW1fZG9tYWluLmMKaW5kZXggMzExOWY3YmU5YmMwLi5mMjA2NDk1MDYyMmIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9kb21haW4uYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZG9tYWluLmMKQEAgLTEzLDYgKzEzLDcgQEAKICNp
bmNsdWRlICJpOTE1X2dlbV9vYmplY3QuaCIKICNpbmNsdWRlICJpOTE1X3ZtYS5oIgogI2luY2x1
ZGUgImk5MTVfZ2VtX2xtZW0uaCIKKyNpbmNsdWRlICJpOTE1X2dlbV9tbWFuLmgiCiAKIHN0YXRp
YyB2b2lkIF9faTkxNV9nZW1fb2JqZWN0X2ZsdXNoX2Zvcl9kaXNwbGF5KHN0cnVjdCBkcm1faTkx
NV9nZW1fb2JqZWN0ICpvYmopCiB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1faW9jdGxzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1f
aW9jdGxzLmgKaW5kZXggZGRjN2YyYTUyYjNlLi44N2Q4YjI3ZjQyNmQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9pb2N0bHMuaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1faW9jdGxzLmgKQEAgLTI4LDggKzI4LDggQEAgaW50IGk5
MTVfZ2VtX21hZHZpc2VfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwK
IAkJCSAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSk7CiBpbnQgaTkxNV9nZW1fbW1hcF9pb2N0bChz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQkJc3RydWN0IGRybV9maWxlICpm
aWxlKTsKLWludCBpOTE1X2dlbV9tbWFwX2d0dF9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LCB2b2lkICpkYXRhLAotCQkJICAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSk7CitpbnQgaTkxNV9n
ZW1fbW1hcF9vZmZzZXRfaW9jdGwoc3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwK
KwkJCSAgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpOwogaW50IGk5MTVfZ2VtX3ByZWFkX2lv
Y3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJCQkgc3RydWN0IGRybV9m
aWxlICpmaWxlKTsKIGludCBpOTE1X2dlbV9wd3JpdGVfaW9jdGwoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgdm9pZCAqZGF0YSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5j
CmluZGV4IGQ2MDk3MzYwM2NjMS4uYzU2YzI3MWUxY2ExIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9tbWFuLmMKQEAgLTUsNiArNSw3IEBACiAgKi8KIAogI2luY2x1ZGUgPGxp
bnV4L21tYW4uaD4KKyNpbmNsdWRlIDxsaW51eC9wZm5fdC5oPgogI2luY2x1ZGUgPGxpbnV4L3Np
emVzLmg+CiAKICNpbmNsdWRlICJndC9pbnRlbF9ndC5oIgpAQCAtMTQsNiArMTUsNyBAQAogI2lu
Y2x1ZGUgImk5MTVfZ2VtX2d0dC5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2lvY3Rscy5oIgogI2lu
Y2x1ZGUgImk5MTVfZ2VtX29iamVjdC5oIgorI2luY2x1ZGUgImk5MTVfZ2VtX21tYW4uaCIKICNp
bmNsdWRlICJpOTE1X3RyYWNlLmgiCiAjaW5jbHVkZSAiaTkxNV92bWEuaCIKIApAQCAtMTQ0LDYg
KzE0Niw5IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgdGlsZV9yb3dfcGFnZXMoY29uc3Qgc3RydWN0
IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKICAqIDMgLSBSZW1vdmUgaW1wbGljaXQgc2V0LWRv
bWFpbihHVFQpIGFuZCBzeW5jaHJvbmlzYXRpb24gb24gaW5pdGlhbAogICogICAgIHBhZ2VmYXVs
dDsgc3dhcGluIHJlbWFpbnMgdHJhbnNwYXJlbnQuCiAgKgorICogNCAtIFN1cHBvcnQgbXVsdGlw
bGUgZmF1bHQgaGFuZGxlcnMgcGVyIG9iamVjdCBkZXBlbmRpbmcgb24gb2JqZWN0J3MKKyAqICAg
ICBiYWNraW5nIHN0b3JhZ2UgKGEuay5hLiBNTUFQX09GRlNFVCkuCisgKgogICogUmVzdHJpY3Rp
b25zOgogICoKICAqICAqIHNub29wYWJsZSBvYmplY3RzIGNhbm5vdCBiZSBhY2Nlc3NlZCB2aWEg
dGhlIEdUVC4gSXQgY2FuIGNhdXNlIG1hY2hpbmUKQEAgLTE3MSw3ICsxNzYsNyBAQCBzdGF0aWMg
dW5zaWduZWQgaW50IHRpbGVfcm93X3BhZ2VzKGNvbnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmopCiAgKi8KIGludCBpOTE1X2dlbV9tbWFwX2d0dF92ZXJzaW9uKHZvaWQpCiB7Ci0J
cmV0dXJuIDM7CisJcmV0dXJuIDQ7CiB9CiAKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGk5MTVfZ2d0
dF92aWV3CkBAIC0xOTcsMjkgKzIwMiw4MyBAQCBjb21wdXRlX3BhcnRpYWxfdmlldyhjb25zdCBz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCXJldHVybiB2aWV3OwogfQogCi0vKioK
LSAqIGk5MTVfZ2VtX2ZhdWx0IC0gZmF1bHQgYSBwYWdlIGludG8gdGhlIEdUVAotICogQHZtZjog
ZmF1bHQgaW5mbwotICoKLSAqIFRoZSBmYXVsdCBoYW5kbGVyIGlzIHNldCB1cCBieSBkcm1fZ2Vt
X21tYXAoKSB3aGVuIGEgb2JqZWN0IGlzIEdUVCBtYXBwZWQKLSAqIGZyb20gdXNlcnNwYWNlLiAg
VGhlIGZhdWx0IGhhbmRsZXIgdGFrZXMgY2FyZSBvZiBiaW5kaW5nIHRoZSBvYmplY3QgdG8KLSAq
IHRoZSBHVFQgKGlmIG5lZWRlZCksIGFsbG9jYXRpbmcgYW5kIHByb2dyYW1taW5nIGEgZmVuY2Ug
cmVnaXN0ZXIgKGFnYWluLAotICogb25seSBpZiBuZWVkZWQgYmFzZWQgb24gd2hldGhlciB0aGUg
b2xkIHJlZyBpcyBzdGlsbCB2YWxpZCBvciB0aGUgb2JqZWN0Ci0gKiBpcyB0aWxlZCkgYW5kIGlu
c2VydGluZyBhIG5ldyBQVEUgaW50byB0aGUgZmF1bHRpbmcgcHJvY2Vzcy4KLSAqCi0gKiBOb3Rl
IHRoYXQgdGhlIGZhdWx0aW5nIHByb2Nlc3MgbWF5IGludm9sdmUgZXZpY3RpbmcgZXhpc3Rpbmcg
b2JqZWN0cwotICogZnJvbSB0aGUgR1RUIGFuZC9vciBmZW5jZSByZWdpc3RlcnMgdG8gbWFrZSBy
b29tLiAgU28gcGVyZm9ybWFuY2UgbWF5Ci0gKiBzdWZmZXIgaWYgdGhlIEdUVCB3b3JraW5nIHNl
dCBpcyBsYXJnZSBvciB0aGVyZSBhcmUgZmV3IGZlbmNlIHJlZ2lzdGVycwotICogbGVmdC4KLSAq
Ci0gKiBUaGUgY3VycmVudCBmZWF0dXJlIHNldCBzdXBwb3J0ZWQgYnkgaTkxNV9nZW1fZmF1bHQo
KSBhbmQgdGh1cyBHVFQgbW1hcHMKLSAqIGlzIGV4cG9zZWQgdmlhIEk5MTVfUEFSQU1fTU1BUF9H
VFRfVkVSU0lPTiAoc2VlIGk5MTVfZ2VtX21tYXBfZ3R0X3ZlcnNpb24pLgotICovCi12bV9mYXVs
dF90IGk5MTVfZ2VtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAqdm1mKQorc3RhdGljIHZtX2ZhdWx0
X3QgaTkxNV9lcnJvcl90b192bWZfZmF1bHQoaW50IGVycikKK3sKKwlzd2l0Y2ggKGVycikgewor
CWRlZmF1bHQ6CisJCVdBUk5fT05DRShlcnIsICJ1bmhhbmRsZWQgZXJyb3IgaW4gJXM6ICVpXG4i
LCBfX2Z1bmNfXywgZXJyKTsKKwkJLyogZmFsbHRocm91Z2ggKi8KKwljYXNlIC1FSU86IC8qIHNo
bWVtZnMgZmFpbHVyZSBmcm9tIHN3YXAgZGV2aWNlICovCisJY2FzZSAtRUZBVUxUOiAvKiBwdXJn
ZWQgb2JqZWN0ICovCisJY2FzZSAtRU5PREVWOiAvKiBiYWQgb2JqZWN0LCBob3cgZGlkIHlvdSBn
ZXQgaGVyZSEgKi8KKwkJcmV0dXJuIFZNX0ZBVUxUX1NJR0JVUzsKKworCWNhc2UgLUVOT1NQQzog
Lyogc2htZW1mcyBhbGxvY2F0aW9uIGZhaWx1cmUgKi8KKwljYXNlIC1FTk9NRU06IC8qIG91ciBh
bGxvY2F0aW9uIGZhaWx1cmUgKi8KKwkJcmV0dXJuIFZNX0ZBVUxUX09PTTsKKworCWNhc2UgMDoK
KwljYXNlIC1FQUdBSU46CisJY2FzZSAtRVJFU1RBUlRTWVM6CisJY2FzZSAtRUlOVFI6CisJY2Fz
ZSAtRUJVU1k6CisJCS8qCisJCSAqIEVCVVNZIGlzIG9rOiB0aGlzIGp1c3QgbWVhbnMgdGhhdCBh
bm90aGVyIHRocmVhZAorCQkgKiBhbHJlYWR5IGRpZCB0aGUgam9iLgorCQkgKi8KKwkJcmV0dXJu
IFZNX0ZBVUxUX05PUEFHRTsKKwl9Cit9CisKK3N0YXRpYyB2bV9mYXVsdF90IHZtX2ZhdWx0X2Nw
dShzdHJ1Y3Qgdm1fZmF1bHQgKnZtZikKK3sKKwlzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKmFyZWEg
PSB2bWYtPnZtYTsKKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqcHJpdiA9IGFyZWEtPnZtX3By
aXZhdGVfZGF0YTsKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gcHJpdi0+b2Jq
OworCXVuc2lnbmVkIGxvbmcgaSwgc2l6ZSA9IGFyZWEtPnZtX2VuZCAtIGFyZWEtPnZtX3N0YXJ0
OworCWJvb2wgd3JpdGUgPSBhcmVhLT52bV9mbGFncyAmIFZNX1dSSVRFOworCXZtX2ZhdWx0X3Qg
cmV0ID0gVk1fRkFVTFRfU0lHQlVTOworCWludCBlcnI7CisKKwlpZiAoIWk5MTVfZ2VtX29iamVj
dF9oYXNfc3RydWN0X3BhZ2Uob2JqKSkKKwkJcmV0dXJuIHJldDsKKworCS8qIFNhbml0eSBjaGVj
ayB0aGF0IHdlIGFsbG93IHdyaXRpbmcgaW50byB0aGlzIG9iamVjdCAqLworCWlmIChpOTE1X2dl
bV9vYmplY3RfaXNfcmVhZG9ubHkob2JqKSAmJiB3cml0ZSkKKwkJcmV0dXJuIHJldDsKKworCWVy
ciA9IGk5MTVfZ2VtX29iamVjdF9waW5fcGFnZXMob2JqKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4g
aTkxNV9lcnJvcl90b192bWZfZmF1bHQoZXJyKTsKKworCS8qIFBURXMgYXJlIHJldm9rZWQgaW4g
b2JqLT5vcHMtPnB1dF9wYWdlcygpICovCisJZm9yIChpID0gMDsgaSA8IHNpemUgPj4gUEFHRV9T
SElGVDsgaSsrKSB7CisJCXN0cnVjdCBwYWdlICpwYWdlID0gaTkxNV9nZW1fb2JqZWN0X2dldF9w
YWdlKG9iaiwgaSk7CisKKwkJcmV0ID0gdm1mX2luc2VydF9wZm4oYXJlYSwKKwkJCQkgICAgICh1
bnNpZ25lZCBsb25nKWFyZWEtPnZtX3N0YXJ0ICsgaSAqIFBBR0VfU0laRSwKKwkJCQkgICAgIHBh
Z2VfdG9fcGZuKHBhZ2UpKTsKKwkJaWYgKHJldCAhPSBWTV9GQVVMVF9OT1BBR0UpCisJCQlicmVh
azsKKwl9CisKKwlpZiAod3JpdGUpIHsKKwkJR0VNX0JVR19PTighaTkxNV9nZW1fb2JqZWN0X2hh
c19waW5uZWRfcGFnZXMob2JqKSk7CisJCW9iai0+Y2FjaGVfZGlydHkgPSB0cnVlOyAvKiBYWFgg
Zmx1c2ggYWZ0ZXIgUEFUIHVwZGF0ZT8gKi8KKwkJb2JqLT5tbS5kaXJ0eSA9IHRydWU7CisJfQor
CisJaTkxNV9nZW1fb2JqZWN0X3VucGluX3BhZ2VzKG9iaik7CisKKwlyZXR1cm4gcmV0OworfQor
CitzdGF0aWMgdm1fZmF1bHRfdCB2bV9mYXVsdF9ndHQoc3RydWN0IHZtX2ZhdWx0ICp2bWYpCiB7
CiAjZGVmaW5lIE1JTl9DSFVOS19QQUdFUyAoU1pfMU0gPj4gUEFHRV9TSElGVCkKIAlzdHJ1Y3Qg
dm1fYXJlYV9zdHJ1Y3QgKmFyZWEgPSB2bWYtPnZtYTsKLQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqb2JqID0gdG9faW50ZWxfYm8oYXJlYS0+dm1fcHJpdmF0ZV9kYXRhKTsKKwlzdHJ1Y3Qg
aTkxNV9tbWFwX29mZnNldCAqcHJpdiA9IGFyZWEtPnZtX3ByaXZhdGVfZGF0YTsKKwlzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gcHJpdi0+b2JqOwogCXN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYgPSBvYmotPmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0g
dG9faTkxNShkZXYpOwogCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0gPSAmaTkxNS0+cnVu
dGltZV9wbTsKQEAgLTMxMiw2ICszNzEsOSBAQCB2bV9mYXVsdF90IGk5MTVfZ2VtX2ZhdWx0KHN0
cnVjdCB2bV9mYXVsdCAqdm1mKQogCQlsaXN0X2FkZCgmb2JqLT51c2VyZmF1bHRfbGluaywgJmk5
MTUtPmdndHQudXNlcmZhdWx0X2xpc3QpOwogCW11dGV4X3VubG9jaygmaTkxNS0+Z2d0dC52bS5t
dXRleCk7CiAKKwkvKiBUcmFjayB0aGUgbW1vIGFzc29jaWF0ZWQgd2l0aCB0aGUgZmVuY2VkIHZt
YSAqLworCXZtYS0+bW1vID0gcHJpdjsKKwogCWlmIChJU19BQ1RJVkUoQ09ORklHX0RSTV9JOTE1
X1VTRVJGQVVMVF9BVVRPU1VTUEVORCkpCiAJCWludGVsX3dha2VyZWZfYXV0bygmaTkxNS0+Z2d0
dC51c2VyZmF1bHRfd2FrZXJlZiwKIAkJCQkgICBtc2Vjc190b19qaWZmaWVzX3RpbWVvdXQoQ09O
RklHX0RSTV9JOTE1X1VTRVJGQVVMVF9BVVRPU1VTUEVORCkpOwpAQCAtMzMyLDY3ICszOTQsMzYg
QEAgdm1fZmF1bHRfdCBpOTE1X2dlbV9mYXVsdChzdHJ1Y3Qgdm1fZmF1bHQgKnZtZikKIAlpbnRl
bF9ydW50aW1lX3BtX3B1dChycG0sIHdha2VyZWYpOwogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9w
YWdlcyhvYmopOwogZXJyOgotCXN3aXRjaCAocmV0KSB7Ci0JZGVmYXVsdDoKLQkJV0FSTl9PTkNF
KHJldCwgInVuaGFuZGxlZCBlcnJvciBpbiAlczogJWlcbiIsIF9fZnVuY19fLCByZXQpOwotCQkv
KiBmYWxsdGhyb3VnaCAqLwotCWNhc2UgLUVJTzogLyogc2htZW1mcyBmYWlsdXJlIGZyb20gc3dh
cCBkZXZpY2UgKi8KLQljYXNlIC1FRkFVTFQ6IC8qIHB1cmdlZCBvYmplY3QgKi8KLQljYXNlIC1F
Tk9ERVY6IC8qIGJhZCBvYmplY3QsIGhvdyBkaWQgeW91IGdldCBoZXJlISAqLwotCQlyZXR1cm4g
Vk1fRkFVTFRfU0lHQlVTOwotCi0JY2FzZSAtRU5PU1BDOiAvKiBzaG1lbWZzIGFsbG9jYXRpb24g
ZmFpbHVyZSAqLwotCWNhc2UgLUVOT01FTTogLyogb3VyIGFsbG9jYXRpb24gZmFpbHVyZSAqLwot
CQlyZXR1cm4gVk1fRkFVTFRfT09NOwotCi0JY2FzZSAwOgotCWNhc2UgLUVBR0FJTjoKLQljYXNl
IC1FUkVTVEFSVFNZUzoKLQljYXNlIC1FSU5UUjoKLQljYXNlIC1FQlVTWToKLQkJLyoKLQkJICog
RUJVU1kgaXMgb2s6IHRoaXMganVzdCBtZWFucyB0aGF0IGFub3RoZXIgdGhyZWFkCi0JCSAqIGFs
cmVhZHkgZGlkIHRoZSBqb2IuCi0JCSAqLwotCQlyZXR1cm4gVk1fRkFVTFRfTk9QQUdFOwotCX0K
KwlyZXR1cm4gaTkxNV9lcnJvcl90b192bWZfZmF1bHQocmV0KTsKIH0KIAotdm9pZCBfX2k5MTVf
Z2VtX29iamVjdF9yZWxlYXNlX21tYXAoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikK
K3ZvaWQgX19pOTE1X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwX2d0dChzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX29iamVjdCAqb2JqKQogewogCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwogCiAJR0VNX0JVR19P
Tighb2JqLT51c2VyZmF1bHRfY291bnQpOwogCi0Jb2JqLT51c2VyZmF1bHRfY291bnQgPSAwOwot
CWxpc3RfZGVsKCZvYmotPnVzZXJmYXVsdF9saW5rKTsKLQlkcm1fdm1hX25vZGVfdW5tYXAoJm9i
ai0+YmFzZS52bWFfbm9kZSwKLQkJCSAgIG9iai0+YmFzZS5kZXYtPmFub25faW5vZGUtPmlfbWFw
cGluZyk7Ci0KIAlmb3JfZWFjaF9nZ3R0X3ZtYSh2bWEsIG9iaikKLQkJaTkxNV92bWFfdW5zZXRf
dXNlcmZhdWx0KHZtYSk7CisJCWk5MTVfdm1hX3Jldm9rZV9tbWFwKHZtYSk7CisKKwlHRU1fQlVH
X09OKG9iai0+dXNlcmZhdWx0X2NvdW50KTsKIH0KIAotLyoqCi0gKiBpOTE1X2dlbV9vYmplY3Rf
cmVsZWFzZV9tbWFwIC0gcmVtb3ZlIHBoeXNpY2FsIHBhZ2UgbWFwcGluZ3MKLSAqIEBvYmo6IG9i
aiBpbiBxdWVzdGlvbgotICoKLSAqIFByZXNlcnZlIHRoZSByZXNlcnZhdGlvbiBvZiB0aGUgbW1h
cHBpbmcgd2l0aCB0aGUgRFJNIGNvcmUgY29kZSwgYnV0Ci0gKiByZWxpbnF1aXNoIG93bmVyc2hp
cCBvZiB0aGUgcGFnZXMgYmFjayB0byB0aGUgc3lzdGVtLgotICoKKy8qCiAgKiBJdCBpcyB2aXRh
bCB0aGF0IHdlIHJlbW92ZSB0aGUgcGFnZSBtYXBwaW5nIGlmIHdlIGhhdmUgbWFwcGVkIGEgdGls
ZWQKICAqIG9iamVjdCB0aHJvdWdoIHRoZSBHVFQgYW5kIHRoZW4gbG9zZSB0aGUgZmVuY2UgcmVn
aXN0ZXIgZHVlIHRvCiAgKiByZXNvdXJjZSBwcmVzc3VyZS4gU2ltaWxhcmx5IGlmIHRoZSBvYmpl
Y3QgaGFzIGJlZW4gbW92ZWQgb3V0IG9mIHRoZQogICogYXBlcnR1cmUsIHRoYW4gcGFnZXMgbWFw
cGVkIGludG8gdXNlcnNwYWNlIG11c3QgYmUgcmV2b2tlZC4gUmVtb3ZpbmcgdGhlCiAgKiBtYXBw
aW5nIHdpbGwgdGhlbiB0cmlnZ2VyIGEgcGFnZSBmYXVsdCBvbiB0aGUgbmV4dCB1c2VyIGFjY2Vz
cywgYWxsb3dpbmcKLSAqIGZpeHVwIGJ5IGk5MTVfZ2VtX2ZhdWx0KCkuCisgKiBmaXh1cCBieSB2
bV9mYXVsdF9ndHQoKS4KICAqLwotdm9pZCBpOTE1X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwKHN0
cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCitzdGF0aWMgdm9pZCBpOTE1X2dlbV9vYmpl
Y3RfcmVsZWFzZV9tbWFwX2d0dChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9faTkxNShvYmotPmJhc2UuZGV2KTsK
IAlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKIAotCS8qIFNlcmlhbGlzYXRpb24gYmV0d2VlbiB1
c2VyIEdUVCBhY2Nlc3MgYW5kIG91ciBjb2RlIGRlcGVuZHMgdXBvbgorCS8qCisJICogU2VyaWFs
aXNhdGlvbiBiZXR3ZWVuIHVzZXIgR1RUIGFjY2VzcyBhbmQgb3VyIGNvZGUgZGVwZW5kcyB1cG9u
CiAJICogcmV2b2tpbmcgdGhlIENQVSdzIFBURSB3aGlsc3QgdGhlIG11dGV4IGlzIGhlbGQuIFRo
ZSBuZXh0IHVzZXIKIAkgKiBwYWdlZmF1bHQgdGhlbiBoYXMgdG8gd2FpdCB1bnRpbCB3ZSByZWxl
YXNlIHRoZSBtdXRleC4KIAkgKgpAQCAtNDA2LDkgKzQzNywxMCBAQCB2b2lkIGk5MTVfZ2VtX29i
amVjdF9yZWxlYXNlX21tYXAoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIAlpZiAo
IW9iai0+dXNlcmZhdWx0X2NvdW50KQogCQlnb3RvIG91dDsKIAotCV9faTkxNV9nZW1fb2JqZWN0
X3JlbGVhc2VfbW1hcChvYmopOworCV9faTkxNV9nZW1fb2JqZWN0X3JlbGVhc2VfbW1hcF9ndHQo
b2JqKTsKIAotCS8qIEVuc3VyZSB0aGF0IHRoZSBDUFUncyBQVEUgYXJlIHJldm9rZWQgYW5kIHRo
ZXJlIGFyZSBub3Qgb3V0c3RhbmRpbmcKKwkvKgorCSAqIEVuc3VyZSB0aGF0IHRoZSBDUFUncyBQ
VEUgYXJlIHJldm9rZWQgYW5kIHRoZXJlIGFyZSBub3Qgb3V0c3RhbmRpbmcKIAkgKiBtZW1vcnkg
dHJhbnNhY3Rpb25zIGZyb20gdXNlcnNwYWNlIGJlZm9yZSB3ZSByZXR1cm4uIFRoZSBUTEIKIAkg
KiBmbHVzaGluZyBpbXBsaWVkIGFib3ZlIGJ5IGNoYW5naW5nIHRoZSBQVEUgYWJvdmUgKnNob3Vs
ZCogYmUKIAkgKiBzdWZmaWNpZW50LCBhbiBleHRyYSBiYXJyaWVyIGhlcmUganVzdCBwcm92aWRl
cyB1cyB3aXRoIGEgYml0CkBAIC00MjIsNTcgKzQ1NCwxNDkgQEAgdm9pZCBpOTE1X2dlbV9vYmpl
Y3RfcmVsZWFzZV9tbWFwKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiAJaW50ZWxf
cnVudGltZV9wbV9wdXQoJmk5MTUtPnJ1bnRpbWVfcG0sIHdha2VyZWYpOwogfQogCi1zdGF0aWMg
aW50IGNyZWF0ZV9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQor
dm9pZCBpOTE1X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX29iamVjdCAqb2JqKQoreworCXN0cnVjdCBpOTE1X21tYXBfb2Zmc2V0ICptbW87CisKKwlz
cGluX2xvY2soJm9iai0+bW1vLmxvY2spOworCWxpc3RfZm9yX2VhY2hfZW50cnkobW1vLCAmb2Jq
LT5tbW8ub2Zmc2V0cywgb2Zmc2V0KSB7CisJCS8qCisJCSAqIHZtYV9ub2RlX3VubWFwIGZvciBH
VFQgbW1hcHMgaGFuZGxlZCBhbHJlYWR5IGluCisJCSAqIF9faTkxNV9nZW1fb2JqZWN0X3JlbGVh
c2VfbW1hcF9ndHQKKwkJICovCisJCWlmIChtbW8tPm1tYXBfdHlwZSA9PSBJOTE1X01NQVBfVFlQ
RV9HVFQpCisJCQljb250aW51ZTsKKworCQlzcGluX3VubG9jaygmb2JqLT5tbW8ubG9jayk7CisJ
CWRybV92bWFfbm9kZV91bm1hcCgmbW1vLT52bWFfbm9kZSwKKwkJCQkgICBvYmotPmJhc2UuZGV2
LT5hbm9uX2lub2RlLT5pX21hcHBpbmcpOworCQlzcGluX2xvY2soJm9iai0+bW1vLmxvY2spOwor
CX0KKwlzcGluX3VubG9jaygmb2JqLT5tbW8ubG9jayk7Cit9CisKKy8qKgorICogaTkxNV9nZW1f
b2JqZWN0X3JlbGVhc2VfbW1hcCAtIHJlbW92ZSBwaHlzaWNhbCBwYWdlIG1hcHBpbmdzCisgKiBA
b2JqOiBvYmogaW4gcXVlc3Rpb24KKyAqCisgKiBQcmVzZXJ2ZSB0aGUgcmVzZXJ2YXRpb24gb2Yg
dGhlIG1tYXBwaW5nIHdpdGggdGhlIERSTSBjb3JlIGNvZGUsIGJ1dAorICogcmVsaW5xdWlzaCBv
d25lcnNoaXAgb2YgdGhlIHBhZ2VzIGJhY2sgdG8gdGhlIHN5c3RlbS4KKyAqLwordm9pZCBpOTE1
X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmop
Cit7CisJaTkxNV9nZW1fb2JqZWN0X3JlbGVhc2VfbW1hcF9ndHQob2JqKTsKKwlpOTE1X2dlbV9v
YmplY3RfcmVsZWFzZV9tbWFwX29mZnNldChvYmopOworfQorCitzdGF0aWMgc3RydWN0IGk5MTVf
bW1hcF9vZmZzZXQgKgorbW1hcF9vZmZzZXRfYXR0YWNoKHN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYmosCisJCSAgIGVudW0gaTkxNV9tbWFwX3R5cGUgbW1hcF90eXBlLAorCQkgICBzdHJ1
Y3QgZHJtX2ZpbGUgKmZpbGUpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSB0
b19pOTE1KG9iai0+YmFzZS5kZXYpOwotCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7
CisJc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1tbzsKIAlpbnQgZXJyOwogCi0JZXJyID0gZHJt
X2dlbV9jcmVhdGVfbW1hcF9vZmZzZXQoJm9iai0+YmFzZSk7CisJbW1vID0ga21hbGxvYyhzaXpl
b2YoKm1tbyksIEdGUF9LRVJORUwpOworCWlmICghbW1vKQorCQlyZXR1cm4gRVJSX1BUUigtRU5P
TUVNKTsKKworCW1tby0+b2JqID0gb2JqOworCW1tby0+ZGV2ID0gb2JqLT5iYXNlLmRldjsKKwlt
bW8tPmZpbGUgPSBmaWxlOworCW1tby0+bW1hcF90eXBlID0gbW1hcF90eXBlOworCWRybV92bWFf
bm9kZV9yZXNldCgmbW1vLT52bWFfbm9kZSk7CisKKwllcnIgPSBkcm1fdm1hX29mZnNldF9hZGQo
bW1vLT5kZXYtPnZtYV9vZmZzZXRfbWFuYWdlciwgJm1tby0+dm1hX25vZGUsCisJCQkJIG9iai0+
YmFzZS5zaXplIC8gUEFHRV9TSVpFKTsKIAlpZiAobGlrZWx5KCFlcnIpKQotCQlyZXR1cm4gMDsK
KwkJZ290byBvdXQ7CiAKIAkvKiBBdHRlbXB0IHRvIHJlYXAgc29tZSBtbWFwIHNwYWNlIGZyb20g
ZGVhZCBvYmplY3RzICovCi0JZXJyID0gaW50ZWxfZ3RfcmV0aXJlX3JlcXVlc3RzX3RpbWVvdXQo
Z3QsIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKKwllcnIgPSBpbnRlbF9ndF9yZXRpcmVfcmVxdWVz
dHNfdGltZW91dCgmaTkxNS0+Z3QsIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKIAlpZiAoZXJyKQot
CQlyZXR1cm4gZXJyOworCQlnb3RvIGVycjsKIAogCWk5MTVfZ2VtX2RyYWluX2ZyZWVkX29iamVj
dHMoaTkxNSk7Ci0JcmV0dXJuIGRybV9nZW1fY3JlYXRlX21tYXBfb2Zmc2V0KCZvYmotPmJhc2Up
OworCWVyciA9IGRybV92bWFfb2Zmc2V0X2FkZChtbW8tPmRldi0+dm1hX29mZnNldF9tYW5hZ2Vy
LCAmbW1vLT52bWFfbm9kZSwKKwkJCQkgb2JqLT5iYXNlLnNpemUgLyBQQUdFX1NJWkUpOworCWlm
IChlcnIpCisJCWdvdG8gZXJyOworCitvdXQ6CisJc3Bpbl9sb2NrKCZvYmotPm1tby5sb2NrKTsK
KwlsaXN0X2FkZCgmbW1vLT5vZmZzZXQsICZvYmotPm1tby5vZmZzZXRzKTsKKwlzcGluX3VubG9j
aygmb2JqLT5tbW8ubG9jayk7CisKKwlpZiAoZmlsZSkKKwkJZHJtX3ZtYV9ub2RlX2FsbG93KCZt
bW8tPnZtYV9ub2RlLCBmaWxlKTsKKworCXJldHVybiBtbW87CisKK2VycjoKKwlrZnJlZShtbW8p
OworCXJldHVybiBFUlJfUFRSKGVycik7CiB9CiAKLWludAotaTkxNV9nZW1fbW1hcF9ndHQoc3Ry
dWN0IGRybV9maWxlICpmaWxlLAotCQkgIHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0JCSAgdTMy
IGhhbmRsZSwKLQkJICB1NjQgKm9mZnNldCkKK3N0YXRpYyBpbnQKK19fYXNzaWduX21tYXBfb2Zm
c2V0KHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKKwkJICAgICB1MzIgaGFuZGxlLAorCQkgICAgIGVu
dW0gaTkxNV9tbWFwX3R5cGUgbW1hcF90eXBlLAorCQkgICAgIHU2NCAqb2Zmc2V0KQogewogCXN0
cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmo7Ci0JaW50IHJldDsKLQotCWlmICghaTkxNV9n
Z3R0X2hhc19hcGVydHVyZSgmdG9faTkxNShkZXYpLT5nZ3R0KSkKLQkJcmV0dXJuIC1FTk9ERVY7
CisJc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1tbzsKKwlpbnQgZXJyOwogCiAJb2JqID0gaTkx
NV9nZW1fb2JqZWN0X2xvb2t1cChmaWxlLCBoYW5kbGUpOwogCWlmICghb2JqKQogCQlyZXR1cm4g
LUVOT0VOVDsKIAotCWlmIChpOTE1X2dlbV9vYmplY3RfbmV2ZXJfYmluZF9nZ3R0KG9iaikpIHsK
LQkJcmV0ID0gLUVOT0RFVjsKKwlpZiAobW1hcF90eXBlID09IEk5MTVfTU1BUF9UWVBFX0dUVCAm
JgorCSAgICBpOTE1X2dlbV9vYmplY3RfbmV2ZXJfYmluZF9nZ3R0KG9iaikpIHsKKwkJZXJyID0g
LUVOT0RFVjsKIAkJZ290byBvdXQ7CiAJfQogCi0JcmV0ID0gY3JlYXRlX21tYXBfb2Zmc2V0KG9i
aik7Ci0JaWYgKHJldCA9PSAwKQotCQkqb2Zmc2V0ID0gZHJtX3ZtYV9ub2RlX29mZnNldF9hZGRy
KCZvYmotPmJhc2Uudm1hX25vZGUpOworCWlmIChtbWFwX3R5cGUgIT0gSTkxNV9NTUFQX1RZUEVf
R1RUICYmCisJICAgICFpOTE1X2dlbV9vYmplY3RfaGFzX3N0cnVjdF9wYWdlKG9iaikpIHsKKwkJ
ZXJyID0gLUVOT0RFVjsKKwkJZ290byBvdXQ7CisJfQorCisJbW1vID0gbW1hcF9vZmZzZXRfYXR0
YWNoKG9iaiwgbW1hcF90eXBlLCBmaWxlKTsKKwlpZiAoSVNfRVJSKG1tbykpIHsKKwkJZXJyID0g
UFRSX0VSUihtbW8pOworCQlnb3RvIG91dDsKKwl9CiAKKwkqb2Zmc2V0ID0gZHJtX3ZtYV9ub2Rl
X29mZnNldF9hZGRyKCZtbW8tPnZtYV9ub2RlKTsKKwllcnIgPSAwOwogb3V0OgogCWk5MTVfZ2Vt
X29iamVjdF9wdXQob2JqKTsKLQlyZXR1cm4gcmV0OworCXJldHVybiBlcnI7Cit9CisKK2ludAor
aTkxNV9nZW1fZHVtYl9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCisJCQkgIHN0
cnVjdCBkcm1fZGV2aWNlICpkZXYsCisJCQkgIHUzMiBoYW5kbGUsCisJCQkgIHU2NCAqb2Zmc2V0
KQoreworCWVudW0gaTkxNV9tbWFwX3R5cGUgbW1hcF90eXBlOworCisJaWYgKGJvb3RfY3B1X2hh
cyhYODZfRkVBVFVSRV9QQVQpKQorCQltbWFwX3R5cGUgPSBJOTE1X01NQVBfVFlQRV9XQzsKKwll
bHNlIGlmICghaTkxNV9nZ3R0X2hhc19hcGVydHVyZSgmdG9faTkxNShkZXYpLT5nZ3R0KSkKKwkJ
cmV0dXJuIC1FTk9ERVY7CisJZWxzZQorCQltbWFwX3R5cGUgPSBJOTE1X01NQVBfVFlQRV9HVFQ7
CisKKwlyZXR1cm4gX19hc3NpZ25fbW1hcF9vZmZzZXQoZmlsZSwgaGFuZGxlLCBtbWFwX3R5cGUs
IG9mZnNldCk7CiB9CiAKIC8qKgotICogaTkxNV9nZW1fbW1hcF9ndHRfaW9jdGwgLSBwcmVwYXJl
IGFuIG9iamVjdCBmb3IgR1RUIG1tYXAnaW5nCisgKiBpOTE1X2dlbV9tbWFwX29mZnNldF9pb2N0
bCAtIHByZXBhcmUgYW4gb2JqZWN0IGZvciBHVFQgbW1hcCdpbmcKICAqIEBkZXY6IERSTSBkZXZp
Y2UKICAqIEBkYXRhOiBHVFQgbWFwcGluZyBpb2N0bCBkYXRhCiAgKiBAZmlsZTogR0VNIG9iamVj
dCBpbmZvCkBAIC00ODcsMTIgKzYxMSwxNjcgQEAgaTkxNV9nZW1fbW1hcF9ndHQoc3RydWN0IGRy
bV9maWxlICpmaWxlLAogICogdXNlcnNwYWNlLgogICovCiBpbnQKLWk5MTVfZ2VtX21tYXBfZ3R0
X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCi0JCQlzdHJ1Y3QgZHJt
X2ZpbGUgKmZpbGUpCitpOTE1X2dlbV9tbWFwX29mZnNldF9pb2N0bChzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2LCB2b2lkICpkYXRhLAorCQkJICAgc3RydWN0IGRybV9maWxlICpmaWxlKQogewotCXN0
cnVjdCBkcm1faTkxNV9nZW1fbW1hcF9ndHQgKmFyZ3MgPSBkYXRhOworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1ID0gdG9faTkxNShkZXYpOworCXN0cnVjdCBkcm1faTkxNV9nZW1fbW1h
cF9vZmZzZXQgKmFyZ3MgPSBkYXRhOworCWVudW0gaTkxNV9tbWFwX3R5cGUgdHlwZTsKKworCWlm
IChhcmdzLT5leHRlbnNpb25zKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXN3aXRjaCAoYXJncy0+
ZmxhZ3MpIHsKKwljYXNlIEk5MTVfTU1BUF9PRkZTRVRfR1RUOgorCQlpZiAoIWk5MTVfZ2d0dF9o
YXNfYXBlcnR1cmUoJmk5MTUtPmdndHQpKQorCQkJcmV0dXJuIC1FTk9ERVY7CisJCXR5cGUgPSBJ
OTE1X01NQVBfVFlQRV9HVFQ7CisJCWJyZWFrOworCisJY2FzZSBJOTE1X01NQVBfT0ZGU0VUX1dD
OgorCQlpZiAoIWJvb3RfY3B1X2hhcyhYODZfRkVBVFVSRV9QQVQpKQorCQkJcmV0dXJuIC1FTk9E
RVY7CisJCXR5cGUgPSBJOTE1X01NQVBfVFlQRV9XQzsKKwkJYnJlYWs7CisKKwljYXNlIEk5MTVf
TU1BUF9PRkZTRVRfV0I6CisJCXR5cGUgPSBJOTE1X01NQVBfVFlQRV9XQjsKKwkJYnJlYWs7CisK
KwljYXNlIEk5MTVfTU1BUF9PRkZTRVRfVUM6CisJCWlmICghYm9vdF9jcHVfaGFzKFg4Nl9GRUFU
VVJFX1BBVCkpCisJCQlyZXR1cm4gLUVOT0RFVjsKKwkJdHlwZSA9IEk5MTVfTU1BUF9UWVBFX1VD
OworCQlicmVhazsKKworCWRlZmF1bHQ6CisJCXJldHVybiAtRUlOVkFMOworCX0KIAotCXJldHVy
biBpOTE1X2dlbV9tbWFwX2d0dChmaWxlLCBkZXYsIGFyZ3MtPmhhbmRsZSwgJmFyZ3MtPm9mZnNl
dCk7CisJcmV0dXJuIF9fYXNzaWduX21tYXBfb2Zmc2V0KGZpbGUsIGFyZ3MtPmhhbmRsZSwgdHlw
ZSwgJmFyZ3MtPm9mZnNldCk7Cit9CisKK3N0YXRpYyB2b2lkIHZtX29wZW4oc3RydWN0IHZtX2Fy
ZWFfc3RydWN0ICp2bWEpCit7CisJc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1tbyA9IHZtYS0+
dm1fcHJpdmF0ZV9kYXRhOworCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPSBtbW8t
Pm9iajsKKworCUdFTV9CVUdfT04oIW9iaik7CisJaTkxNV9nZW1fb2JqZWN0X2dldChvYmopOwor
fQorCitzdGF0aWMgdm9pZCB2bV9jbG9zZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKK3sK
KwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1vID0gdm1hLT52bV9wcml2YXRlX2RhdGE7CisJ
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiA9IG1tby0+b2JqOworCisJR0VNX0JVR19P
Tighb2JqKTsKKwlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Cit9CisKK3N0YXRpYyBjb25zdCBz
dHJ1Y3Qgdm1fb3BlcmF0aW9uc19zdHJ1Y3Qgdm1fb3BzX2d0dCA9IHsKKwkuZmF1bHQgPSB2bV9m
YXVsdF9ndHQsCisJLm9wZW4gPSB2bV9vcGVuLAorCS5jbG9zZSA9IHZtX2Nsb3NlLAorfTsKKwor
c3RhdGljIGNvbnN0IHN0cnVjdCB2bV9vcGVyYXRpb25zX3N0cnVjdCB2bV9vcHNfY3B1ID0gewor
CS5mYXVsdCA9IHZtX2ZhdWx0X2NwdSwKKwkub3BlbiA9IHZtX29wZW4sCisJLmNsb3NlID0gdm1f
Y2xvc2UsCit9OworCisvKgorICogVGhpcyBvdmVyY29tZXMgdGhlIGxpbWl0YXRpb24gaW4gZHJt
X2dlbV9tbWFwJ3MgYXNzaWdubWVudCBvZiBhCisgKiBkcm1fZ2VtX29iamVjdCBhcyB0aGUgdm1h
LT52bV9wcml2YXRlX2RhdGEuIFNpbmNlIHdlIG5lZWQgdG8KKyAqIGJlIGFibGUgdG8gcmVzb2x2
ZSBtdWx0aXBsZSBtbWFwIG9mZnNldHMgd2hpY2ggY291bGQgYmUgdGllZAorICogdG8gYSBzaW5n
bGUgZ2VtIG9iamVjdC4KKyAqLworaW50IGk5MTVfZ2VtX21tYXAoc3RydWN0IGZpbGUgKmZpbHAs
IHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQoreworCXN0cnVjdCBkcm1fdm1hX29mZnNldF9u
b2RlICpub2RlOworCXN0cnVjdCBkcm1fZmlsZSAqcHJpdiA9IGZpbHAtPnByaXZhdGVfZGF0YTsK
KwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gcHJpdi0+bWlub3ItPmRldjsKKwlzdHJ1Y3QgaTkx
NV9tbWFwX29mZnNldCAqbW1vID0gTlVMTDsKKwlzdHJ1Y3QgZHJtX2dlbV9vYmplY3QgKm9iaiA9
IE5VTEw7CisKKwlpZiAoZHJtX2Rldl9pc191bnBsdWdnZWQoZGV2KSkKKwkJcmV0dXJuIC1FTk9E
RVY7CisKKwlkcm1fdm1hX29mZnNldF9sb2NrX2xvb2t1cChkZXYtPnZtYV9vZmZzZXRfbWFuYWdl
cik7CisJbm9kZSA9IGRybV92bWFfb2Zmc2V0X2V4YWN0X2xvb2t1cF9sb2NrZWQoZGV2LT52bWFf
b2Zmc2V0X21hbmFnZXIsCisJCQkJCQkgIHZtYS0+dm1fcGdvZmYsCisJCQkJCQkgIHZtYV9wYWdl
cyh2bWEpKTsKKwlpZiAobGlrZWx5KG5vZGUpKSB7CisJCW1tbyA9IGNvbnRhaW5lcl9vZihub2Rl
LCBzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCwKKwkJCQkgICB2bWFfbm9kZSk7CisJCS8qCisJCSAq
IEluIG91ciBkZXBlbmRlbmN5IGNoYWluLCB0aGUgZHJtX3ZtYV9vZmZzZXRfbm9kZQorCQkgKiBk
ZXBlbmRzIG9uIHRoZSB2YWxpZGl0eSBvZiB0aGUgbW1vLCB3aGljaCBkZXBlbmRzIG9uCisJCSAq
IHRoZSBnZW0gb2JqZWN0LiBIb3dldmVyIHRoZSBvbmx5IHJlZmVyZW5jZSB3ZSBoYXZlCisJCSAq
IGF0IHRoaXMgcG9pbnQgaXMgdGhlIG1tbyAoYXMgdGhlIHBhcmVudCBvZiB0aGUgbm9kZSkuCisJ
CSAqIFRyeSB0byBjaGVjayBpZiB0aGUgZ2VtIG9iamVjdCB3YXMgYXQgbGVhc3QgY2xlYXJlZC4K
KwkJICovCisJCWlmICghbW1vIHx8ICFtbW8tPm9iaikgeworCQkJZHJtX3ZtYV9vZmZzZXRfdW5s
b2NrX2xvb2t1cChkZXYtPnZtYV9vZmZzZXRfbWFuYWdlcik7CisJCQlyZXR1cm4gLUVJTlZBTDsK
KwkJfQorCQkvKgorCQkgKiBTa2lwIDAtcmVmY250ZWQgb2JqZWN0cyBhcyBpdCBpcyBpbiB0aGUg
cHJvY2VzcyBvZiBiZWluZworCQkgKiBkZXN0cm95ZWQgYW5kIHdpbGwgYmUgaW52YWxpZCB3aGVu
IHRoZSB2bWEgbWFuYWdlciBsb2NrCisJCSAqIGlzIHJlbGVhc2VkLgorCQkgKi8KKwkJb2JqID0g
Jm1tby0+b2JqLT5iYXNlOworCQlpZiAoIWtyZWZfZ2V0X3VubGVzc196ZXJvKCZvYmotPnJlZmNv
dW50KSkKKwkJCW9iaiA9IE5VTEw7CisJfQorCWRybV92bWFfb2Zmc2V0X3VubG9ja19sb29rdXAo
ZGV2LT52bWFfb2Zmc2V0X21hbmFnZXIpOworCWlmICghb2JqKQorCQlyZXR1cm4gLUVJTlZBTDsK
KworCWlmICghZHJtX3ZtYV9ub2RlX2lzX2FsbG93ZWQobm9kZSwgcHJpdikpIHsKKwkJZHJtX2dl
bV9vYmplY3RfcHV0X3VubG9ja2VkKG9iaik7CisJCXJldHVybiAtRUFDQ0VTOworCX0KKworCWlm
IChpOTE1X2dlbV9vYmplY3RfaXNfcmVhZG9ubHkodG9faW50ZWxfYm8ob2JqKSkpIHsKKwkJaWYg
KHZtYS0+dm1fZmxhZ3MgJiBWTV9XUklURSkgeworCQkJZHJtX2dlbV9vYmplY3RfcHV0X3VubG9j
a2VkKG9iaik7CisJCQlyZXR1cm4gLUVJTlZBTDsKKwkJfQorCQl2bWEtPnZtX2ZsYWdzICY9IH5W
TV9NQVlXUklURTsKKwl9CisKKwl2bWEtPnZtX2ZsYWdzIHw9IFZNX1BGTk1BUCB8IFZNX0RPTlRF
WFBBTkQgfCBWTV9ET05URFVNUDsKKwl2bWEtPnZtX3ByaXZhdGVfZGF0YSA9IG1tbzsKKworCXN3
aXRjaCAobW1vLT5tbWFwX3R5cGUpIHsKKwljYXNlIEk5MTVfTU1BUF9UWVBFX1dDOgorCQl2bWEt
PnZtX3BhZ2VfcHJvdCA9CisJCQlwZ3Byb3Rfd3JpdGVjb21iaW5lKHZtX2dldF9wYWdlX3Byb3Qo
dm1hLT52bV9mbGFncykpOworCQl2bWEtPnZtX29wcyA9ICZ2bV9vcHNfY3B1OworCQlicmVhazsK
KworCWNhc2UgSTkxNV9NTUFQX1RZUEVfV0I6CisJCXZtYS0+dm1fcGFnZV9wcm90ID0gdm1fZ2V0
X3BhZ2VfcHJvdCh2bWEtPnZtX2ZsYWdzKTsKKwkJdm1hLT52bV9vcHMgPSAmdm1fb3BzX2NwdTsK
KwkJYnJlYWs7CisKKwljYXNlIEk5MTVfTU1BUF9UWVBFX1VDOgorCQl2bWEtPnZtX3BhZ2VfcHJv
dCA9CisJCQlwZ3Byb3Rfbm9uY2FjaGVkKHZtX2dldF9wYWdlX3Byb3Qodm1hLT52bV9mbGFncykp
OworCQl2bWEtPnZtX29wcyA9ICZ2bV9vcHNfY3B1OworCQlicmVhazsKKworCWNhc2UgSTkxNV9N
TUFQX1RZUEVfR1RUOgorCQl2bWEtPnZtX3BhZ2VfcHJvdCA9CisJCQlwZ3Byb3Rfd3JpdGVjb21i
aW5lKHZtX2dldF9wYWdlX3Byb3Qodm1hLT52bV9mbGFncykpOworCQl2bWEtPnZtX29wcyA9ICZ2
bV9vcHNfZ3R0OworCQlicmVhazsKKwl9CisJdm1hLT52bV9wYWdlX3Byb3QgPSBwZ3Byb3RfZGVj
cnlwdGVkKHZtYS0+dm1fcGFnZV9wcm90KTsKKworCXJldHVybiAwOwogfQogCiAjaWYgSVNfRU5B
QkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1QpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX21tYW4uaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjg2
MmUwMWI3Y2I2OQotLS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9p
OTE1X2dlbV9tbWFuLmgKQEAgLTAsMCArMSwzMSBAQAorLyoKKyAqIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBNSVQKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgor
ICovCisKKyNpZm5kZWYgX19JOTE1X0dFTV9NTUFOX0hfXworI2RlZmluZSBfX0k5MTVfR0VNX01N
QU5fSF9fCisKKyNpbmNsdWRlIDxsaW51eC9tbV90eXBlcy5oPgorI2luY2x1ZGUgPGxpbnV4L3R5
cGVzLmg+CisKK3N0cnVjdCBkcm1fZGV2aWNlOworc3RydWN0IGRybV9maWxlOworc3RydWN0IGRy
bV9pOTE1X2dlbV9vYmplY3Q7CitzdHJ1Y3QgZmlsZTsKK3N0cnVjdCBpOTE1X21tYXBfb2Zmc2V0
Oworc3RydWN0IG11dGV4OworCitpbnQgaTkxNV9nZW1fbW1hcF9ndHRfdmVyc2lvbih2b2lkKTsK
K2ludCBpOTE1X2dlbV9tbWFwKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1
Y3QgKnZtYSk7CisKK2ludCBpOTE1X2dlbV9kdW1iX21tYXBfb2Zmc2V0KHN0cnVjdCBkcm1fZmls
ZSAqZmlsZV9wcml2LAorCQkJICAgICAgc3RydWN0IGRybV9kZXZpY2UgKmRldiwKKwkJCSAgICAg
IHUzMiBoYW5kbGUsIHU2NCAqb2Zmc2V0KTsKKwordm9pZCBfX2k5MTVfZ2VtX29iamVjdF9yZWxl
YXNlX21tYXBfZ3R0KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopOwordm9pZCBpOTE1
X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmop
Owordm9pZCBpOTE1X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2k5
MTVfZ2VtX29iamVjdCAqb2JqKTsKKworI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0v
aTkxNV9nZW1fb2JqZWN0LmMKaW5kZXggNDU4OTQ1ZTE4MjNlLi5lZmY4MThlMWE2ZjEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmMKQEAgLTI5LDYgKzI5LDcg
QEAKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogI2luY2x1ZGUgImk5MTVfZ2VtX2NsZmx1c2guaCIK
ICNpbmNsdWRlICJpOTE1X2dlbV9jb250ZXh0LmgiCisjaW5jbHVkZSAiaTkxNV9nZW1fbW1hbi5o
IgogI2luY2x1ZGUgImk5MTVfZ2VtX29iamVjdC5oIgogI2luY2x1ZGUgImk5MTVfZ2xvYmFscy5o
IgogI2luY2x1ZGUgImk5MTVfdHJhY2UuaCIKQEAgLTYxLDYgKzYyLDkgQEAgdm9pZCBpOTE1X2dl
bV9vYmplY3RfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCiAJSU5JVF9M
SVNUX0hFQUQoJm9iai0+bHV0X2xpc3QpOwogCisJc3Bpbl9sb2NrX2luaXQoJm9iai0+bW1vLmxv
Y2spOworCUlOSVRfTElTVF9IRUFEKCZvYmotPm1tby5vZmZzZXRzKTsKKwogCWluaXRfcmN1X2hl
YWQoJm9iai0+cmN1KTsKIAogCW9iai0+b3BzID0gb3BzOwpAQCAtOTcsNiArMTAxLDcgQEAgdm9p
ZCBpOTE1X2dlbV9jbG9zZV9vYmplY3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnZW0sIHN0cnVj
dCBkcm1fZmlsZSAqZmlsZSkKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdG9f
aW50ZWxfYm8oZ2VtKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmcHJpdiA9IGZp
bGUtPmRyaXZlcl9wcml2OwogCXN0cnVjdCBpOTE1X2x1dF9oYW5kbGUgKmx1dCwgKmxuOworCXN0
cnVjdCBpOTE1X21tYXBfb2Zmc2V0ICptbW8sICpvbjsKIAlMSVNUX0hFQUQoY2xvc2UpOwogCiAJ
aTkxNV9nZW1fb2JqZWN0X2xvY2sob2JqKTsKQEAgLTExMSw2ICsxMTYsMTcgQEAgdm9pZCBpOTE1
X2dlbV9jbG9zZV9vYmplY3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnZW0sIHN0cnVjdCBkcm1f
ZmlsZSAqZmlsZSkKIAl9CiAJaTkxNV9nZW1fb2JqZWN0X3VubG9jayhvYmopOwogCisJc3Bpbl9s
b2NrKCZvYmotPm1tby5sb2NrKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUobW1vLCBvbiwg
Jm9iai0+bW1vLm9mZnNldHMsIG9mZnNldCkgeworCQlpZiAobW1vLT5maWxlICE9IGZpbGUpCisJ
CQljb250aW51ZTsKKworCQlzcGluX3VubG9jaygmb2JqLT5tbW8ubG9jayk7CisJCWRybV92bWFf
bm9kZV9yZXZva2UoJm1tby0+dm1hX25vZGUsIGZpbGUpOworCQlzcGluX2xvY2soJm9iai0+bW1v
LmxvY2spOworCX0KKwlzcGluX3VubG9jaygmb2JqLT5tbW8ubG9jayk7CisKIAlsaXN0X2Zvcl9l
YWNoX2VudHJ5X3NhZmUobHV0LCBsbiwgJmNsb3NlLCBvYmpfbGluaykgewogCQlzdHJ1Y3QgaTkx
NV9nZW1fY29udGV4dCAqY3R4ID0gbHV0LT5jdHg7CiAJCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwpA
QCAtMTU4LDYgKzE3NCw4IEBAIHN0YXRpYyB2b2lkIF9faTkxNV9nZW1fZnJlZV9vYmplY3RzKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCiAJd2FrZXJlZiA9IGludGVsX3J1bnRpbWVf
cG1fZ2V0KCZpOTE1LT5ydW50aW1lX3BtKTsKIAlsbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKG9i
aiwgb24sIGZyZWVkLCBmcmVlZCkgeworCQlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1vLCAq
bW47CisKIAkJdHJhY2VfaTkxNV9nZW1fb2JqZWN0X2Rlc3Ryb3kob2JqKTsKIAogCQlpZiAoIWxp
c3RfZW1wdHkoJm9iai0+dm1hLmxpc3QpKSB7CkBAIC0xODMsNiArMjAxLDE1IEBAIHN0YXRpYyB2
b2lkIF9faTkxNV9nZW1fZnJlZV9vYmplY3RzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
LAogCQkJc3Bpbl91bmxvY2soJm9iai0+dm1hLmxvY2spOwogCQl9CiAKKwkJaTkxNV9nZW1fb2Jq
ZWN0X3JlbGVhc2VfbW1hcChvYmopOworCisJCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShtbW8s
IG1uLCAmb2JqLT5tbW8ub2Zmc2V0cywgb2Zmc2V0KSB7CisJCQlkcm1fdm1hX29mZnNldF9yZW1v
dmUob2JqLT5iYXNlLmRldi0+dm1hX29mZnNldF9tYW5hZ2VyLAorCQkJCQkgICAgICAmbW1vLT52
bWFfbm9kZSk7CisJCQlrZnJlZShtbW8pOworCQl9CisJCUlOSVRfTElTVF9IRUFEKCZvYmotPm1t
by5vZmZzZXRzKTsKKwogCQlHRU1fQlVHX09OKGF0b21pY19yZWFkKCZvYmotPmJpbmRfY291bnQp
KTsKIAkJR0VNX0JVR19PTihvYmotPnVzZXJmYXVsdF9jb3VudCk7CiAJCUdFTV9CVUdfT04oIWxp
c3RfZW1wdHkoJm9iai0+bHV0X2xpc3QpKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9vYmplY3QuaAppbmRleCBlNTc1MGQ1MDZjYzkuLmExZWI3YzBiMjNhYyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3QuaApAQCAtMTMyLDEzICsxMzIsMTMg
QEAgdm9pZCBpOTE1X2dlbV9vYmplY3RfdW5sb2NrX2ZlbmNlKHN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmosCiBzdGF0aWMgaW5saW5lIHZvaWQKIGk5MTVfZ2VtX29iamVjdF9zZXRfcmVh
ZG9ubHkoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIHsKLQlvYmotPmJhc2Uudm1h
X25vZGUucmVhZG9ubHkgPSB0cnVlOworCW9iai0+ZmxhZ3MgfD0gSTkxNV9CT19SRUFET05MWTsK
IH0KIAogc3RhdGljIGlubGluZSBib29sCiBpOTE1X2dlbV9vYmplY3RfaXNfcmVhZG9ubHkoY29u
c3Qgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIHsKLQlyZXR1cm4gb2JqLT5iYXNl
LnZtYV9ub2RlLnJlYWRvbmx5OworCXJldHVybiBvYmotPmZsYWdzICYgSTkxNV9CT19SRUFET05M
WTsKIH0KIAogc3RhdGljIGlubGluZSBib29sCkBAIC0zODcsOSArMzg3LDYgQEAgc3RhdGljIGlu
bGluZSB2b2lkIGk5MTVfZ2VtX29iamVjdF91bnBpbl9tYXAoc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3QgKm9iaikKIAlpOTE1X2dlbV9vYmplY3RfdW5waW5fcGFnZXMob2JqKTsKIH0KIAotdm9p
ZCBfX2k5MTVfZ2VtX29iamVjdF9yZWxlYXNlX21tYXAoc3RydWN0IGRybV9pOTE1X2dlbV9vYmpl
Y3QgKm9iaik7Ci12b2lkIGk5MTVfZ2VtX29iamVjdF9yZWxlYXNlX21tYXAoc3RydWN0IGRybV9p
OTE1X2dlbV9vYmplY3QgKm9iaik7Ci0KIHZvaWQKIGk5MTVfZ2VtX29iamVjdF9mbHVzaF93cml0
ZV9kb21haW4oc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJCQkgICB1bnNpZ25l
ZCBpbnQgZmx1c2hfZG9tYWlucyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fb2JqZWN0X3R5cGVzLmgKaW5kZXggMTVmODI5N2RjMzRlLi4yZDQwNGU2ZjYzZGYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3RfdHlwZXMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmgK
QEAgLTYzLDYgKzYzLDIzIEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0X29wcyB7CiAJdm9p
ZCAoKnJlbGVhc2UpKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopOwogfTsKIAorZW51
bSBpOTE1X21tYXBfdHlwZSB7CisJSTkxNV9NTUFQX1RZUEVfR1RUID0gMCwKKwlJOTE1X01NQVBf
VFlQRV9XQywKKwlJOTE1X01NQVBfVFlQRV9XQiwKKwlJOTE1X01NQVBfVFlQRV9VQywKK307CisK
K3N0cnVjdCBpOTE1X21tYXBfb2Zmc2V0IHsKKwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2OworCXN0
cnVjdCBkcm1fdm1hX29mZnNldF9ub2RlIHZtYV9ub2RlOworCXN0cnVjdCBkcm1faTkxNV9nZW1f
b2JqZWN0ICpvYmo7CisJc3RydWN0IGRybV9maWxlICpmaWxlOworCWVudW0gaTkxNV9tbWFwX3R5
cGUgbW1hcF90eXBlOworCisJc3RydWN0IGxpc3RfaGVhZCBvZmZzZXQ7Cit9OworCiBzdHJ1Y3Qg
ZHJtX2k5MTVfZ2VtX29iamVjdCB7CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0IGJhc2U7CiAKQEAg
LTExOCwxMiArMTM1LDE4IEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0IHsKIAl1bnNpZ25l
ZCBpbnQgdXNlcmZhdWx0X2NvdW50OwogCXN0cnVjdCBsaXN0X2hlYWQgdXNlcmZhdWx0X2xpbms7
CiAKKwlzdHJ1Y3QgeworCQlzcGlubG9ja190IGxvY2s7IC8qIFByb3RlY3RzIGFjY2VzcyB0byBt
bW8gb2Zmc2V0cyAqLworCQlzdHJ1Y3QgbGlzdF9oZWFkIG9mZnNldHM7CisJfSBtbW87CisKIAlJ
OTE1X1NFTEZURVNUX0RFQ0xBUkUoc3RydWN0IGxpc3RfaGVhZCBzdF9saW5rKTsKIAogCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CiAjZGVmaW5lIEk5MTVfQk9fQUxMT0NfQ09OVElHVU9VUyBCSVQoMCkK
ICNkZWZpbmUgSTkxNV9CT19BTExPQ19WT0xBVElMRSAgIEJJVCgxKQogI2RlZmluZSBJOTE1X0JP
X0FMTE9DX0ZMQUdTIChJOTE1X0JPX0FMTE9DX0NPTlRJR1VPVVMgfCBJOTE1X0JPX0FMTE9DX1ZP
TEFUSUxFKQorI2RlZmluZSBJOTE1X0JPX1JFQURPTkxZICAgICAgICAgQklUKDIpCiAKIAkvKgog
CSAqIElzIHRoZSBvYmplY3QgdG8gYmUgbWFwcGVkIGFzIHJlYWQtb25seSB0byB0aGUgR1BVCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcGFnZXMuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wYWdlcy5jCmluZGV4IGY0MDJjMmM0MTVj
Mi4uNzUxOTdjYTY5NmE4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fcGFnZXMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcGFn
ZXMuYwpAQCAtOCw2ICs4LDcgQEAKICNpbmNsdWRlICJpOTE1X2dlbV9vYmplY3QuaCIKICNpbmNs
dWRlICJpOTE1X3NjYXR0ZXJsaXN0LmgiCiAjaW5jbHVkZSAiaTkxNV9nZW1fbG1lbS5oIgorI2lu
Y2x1ZGUgImk5MTVfZ2VtX21tYW4uaCIKIAogdm9pZCBfX2k5MTVfZ2VtX29iamVjdF9zZXRfcGFn
ZXMoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJCQkgc3RydWN0IHNnX3RhYmxl
ICpwYWdlcywKQEAgLTIwNyw2ICsyMDgsOCBAQCBpbnQgX19pOTE1X2dlbV9vYmplY3RfcHV0X3Bh
Z2VzKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiAJCWdvdG8gdW5sb2NrOwogCX0K
IAorCWk5MTVfZ2VtX29iamVjdF9yZWxlYXNlX21tYXBfb2Zmc2V0KG9iaik7CisKIAkvKgogCSAq
IC0+cHV0X3BhZ2VzIG1pZ2h0IG5lZWQgdG8gYWxsb2NhdGUgbWVtb3J5IGZvciB0aGUgYml0MTcg
c3dpenpsZQogCSAqIGFycmF5LCBoZW5jZSBwcm90ZWN0IHRoZW0gZnJvbSBiZWluZyByZWFwZWQg
YnkgcmVtb3ZpbmcgdGhlbSBmcm9tIGd0dApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX3RpbGluZy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX3RpbGluZy5jCmluZGV4IDFmYTU5MmQ4MmFmNS4uNmM3ODI1YTJkYzJhIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdGlsaW5nLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3RpbGluZy5jCkBAIC0xMSw2ICsxMSw3IEBACiAj
aW5jbHVkZSAiaTkxNV9kcnYuaCIKICNpbmNsdWRlICJpOTE1X2dlbS5oIgogI2luY2x1ZGUgImk5
MTVfZ2VtX2lvY3Rscy5oIgorI2luY2x1ZGUgImk5MTVfZ2VtX21tYW4uaCIKICNpbmNsdWRlICJp
OTE1X2dlbV9vYmplY3QuaCIKIAogLyoqCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9zZWxmdGVzdHMvaTkxNV9nZW1fbW1hbi5jCmluZGV4IDZjZTkxNjdmOGM5Zi4uNTkxNDM1YzVm
MzY4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVf
Z2VtX21tYW4uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVf
Z2VtX21tYW4uYwpAQCAtNTY1LDE2ICs1NjUsMTYgQEAgc3RhdGljIGJvb2wgYXNzZXJ0X21tYXBf
b2Zmc2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCQkJICAgICAgIGludCBleHBl
Y3RlZCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwotCWludCBlcnI7CisJ
c3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1tbzsKIAogCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9j
cmVhdGVfaW50ZXJuYWwoaTkxNSwgc2l6ZSk7CiAJaWYgKElTX0VSUihvYmopKQogCQlyZXR1cm4g
UFRSX0VSUihvYmopOwogCi0JZXJyID0gY3JlYXRlX21tYXBfb2Zmc2V0KG9iaik7CisJbW1vID0g
bW1hcF9vZmZzZXRfYXR0YWNoKG9iaiwgSTkxNV9NTUFQX09GRlNFVF9HVFQsIE5VTEwpOwogCWk5
MTVfZ2VtX29iamVjdF9wdXQob2JqKTsKIAotCXJldHVybiBlcnIgPT0gZXhwZWN0ZWQ7CisJcmV0
dXJuIFBUUl9FUlJfT1JfWkVSTyhtbW8pID09IGV4cGVjdGVkOwogfQogCiBzdGF0aWMgdm9pZCBk
aXNhYmxlX3JldGlyZV93b3JrZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCkBAIC02
MDksNyArNjA5LDggQEAgc3RhdGljIGludCBpZ3RfbW1hcF9vZmZzZXRfZXhoYXVzdGlvbih2b2lk
ICphcmcpCiAJc3RydWN0IGRybV9tbSAqbW0gPSAmaTkxNS0+ZHJtLnZtYV9vZmZzZXRfbWFuYWdl
ci0+dm1fYWRkcl9zcGFjZV9tbTsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOwog
CXN0cnVjdCBkcm1fbW1fbm9kZSAqaG9sZSwgKm5leHQ7Ci0JaW50IGxvb3AsIGVycjsKKwlzdHJ1
Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1vOworCWludCBsb29wLCBlcnIgPSAwOwogCiAJLyogRGlz
YWJsZSBiYWNrZ3JvdW5kIHJlYXBlciAqLwogCWRpc2FibGVfcmV0aXJlX3dvcmtlcihpOTE1KTsK
QEAgLTY3Myw5ICs2NzQsMTAgQEAgc3RhdGljIGludCBpZ3RfbW1hcF9vZmZzZXRfZXhoYXVzdGlv
bih2b2lkICphcmcpCiAJCWdvdG8gb3V0OwogCX0KIAotCWVyciA9IGNyZWF0ZV9tbWFwX29mZnNl
dChvYmopOwotCWlmIChlcnIpIHsKKwltbW8gPSBtbWFwX29mZnNldF9hdHRhY2gob2JqLCBJOTE1
X01NQVBfT0ZGU0VUX0dUVCwgTlVMTCk7CisJaWYgKElTX0VSUihtbW8pKSB7CiAJCXByX2Vycigi
VW5hYmxlIHRvIGluc2VydCBvYmplY3QgaW50byByZWNsYWltZWQgaG9sZVxuIik7CisJCWVyciA9
IFBUUl9FUlIobW1vKTsKIAkJZ290byBlcnJfb2JqOwogCX0KIApAQCAtNzI0LDE0ICs3MjYsMTUg
QEAgc3RhdGljIGludCBpZ3RfbW1hcF9vZmZzZXRfZXhoYXVzdGlvbih2b2lkICphcmcpCiB9CiAK
ICNkZWZpbmUgZXhwYW5kMzIoeCkgKCgoeCkgPDwgMCkgfCAoKHgpIDw8IDgpIHwgKCh4KSA8PCAx
NikgfCAoKHgpIDw8IDI0KSkKLXN0YXRpYyBpbnQgaWd0X21tYXBfZ3R0KHZvaWQgKmFyZykKK3N0
YXRpYyBpbnQgaWd0X21tYXAodm9pZCAqYXJnLCBlbnVtIGk5MTVfbW1hcF90eXBlIHR5cGUpCiB7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CiAJc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iajsKKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1vOwogCXN0cnVj
dCB2bV9hcmVhX3N0cnVjdCAqYXJlYTsKIAl1bnNpZ25lZCBsb25nIGFkZHI7CiAJdm9pZCAqdmFk
ZHI7Ci0JaW50IGVyciwgaTsKKwlpbnQgZXJyID0gMCwgaTsKIAogCWlmICghaTkxNV9nZ3R0X2hh
c19hcGVydHVyZSgmaTkxNS0+Z2d0dCkpCiAJCXJldHVybiAwOwpAQCAtNzQ5LDE4ICs3NTIsMTkg
QEAgc3RhdGljIGludCBpZ3RfbW1hcF9ndHQodm9pZCAqYXJnKQogCWk5MTVfZ2VtX29iamVjdF9m
bHVzaF9tYXAob2JqKTsKIAlpOTE1X2dlbV9vYmplY3RfdW5waW5fbWFwKG9iaik7CiAKLQllcnIg
PSBjcmVhdGVfbW1hcF9vZmZzZXQob2JqKTsKLQlpZiAoZXJyKQorCW1tbyA9IG1tYXBfb2Zmc2V0
X2F0dGFjaChvYmosIHR5cGUsIE5VTEwpOworCWlmIChJU19FUlIobW1vKSkgeworCQllcnIgPSBQ
VFJfRVJSKG1tbyk7CiAJCWdvdG8gb3V0OworCX0KIAotCWFkZHIgPSBpZ3RfbW1hcF9ub2RlKGk5
MTUsICZvYmotPmJhc2Uudm1hX25vZGUsCi0JCQkgICAgIDAsIFBST1RfV1JJVEUsIE1BUF9TSEFS
RUQpOworCWFkZHIgPSBpZ3RfbW1hcF9ub2RlKGk5MTUsICZtbW8tPnZtYV9ub2RlLCAwLCBQUk9U
X1dSSVRFLCBNQVBfU0hBUkVEKTsKIAlpZiAoSVNfRVJSX1ZBTFVFKGFkZHIpKSB7CiAJCWVyciA9
IGFkZHI7CiAJCWdvdG8gb3V0OwogCX0KIAotCXByX2RlYnVnKCJpZ3RfbW1hcChvYmo6Z3R0KSBA
ICVseFxuIiwgYWRkcik7CisJcHJfZGVidWcoImlndF9tbWFwKCkgQCAlbHhcbiIsIGFkZHIpOwog
CiAJYXJlYSA9IGZpbmRfdm1hKGN1cnJlbnQtPm1tLCBhZGRyKTsKIAlpZiAoIWFyZWEpIHsKQEAg
LTc2OSw4ICs3NzMsOCBAQCBzdGF0aWMgaW50IGlndF9tbWFwX2d0dCh2b2lkICphcmcpCiAJCWdv
dG8gb3V0X3VubWFwOwogCX0KIAotCWlmIChhcmVhLT52bV9wcml2YXRlX2RhdGEgIT0gb2JqKSB7
Ci0JCXByX2Vycigidm1fYXJlYV9zdHJ1Y3QgZGlkIG5vdCBwb2ludCBiYWNrIHRvIG91ciBvYmpl
Y3QhXG4iKTsKKwlpZiAoYXJlYS0+dm1fcHJpdmF0ZV9kYXRhICE9IG1tbykgeworCQlwcl9lcnIo
InZtX2FyZWFfc3RydWN0IGRpZCBub3QgcG9pbnQgYmFjayB0byBvdXIgbW1hcF9vZmZzZXQgb2Jq
ZWN0IVxuIik7CiAJCWVyciA9IC1FSU5WQUw7CiAJCWdvdG8gb3V0X3VubWFwOwogCX0KQEAgLTc4
MCwxNCArNzg0LDE0IEBAIHN0YXRpYyBpbnQgaWd0X21tYXBfZ3R0KHZvaWQgKmFyZykKIAkJdTMy
IHg7CiAKIAkJaWYgKGdldF91c2VyKHgsIHV4KSkgewotCQkJcHJfZXJyKCJVbmFibGUgdG8gcmVh
ZCBmcm9tIEdUVCBtbWFwLCBvZmZzZXQ6JXpkXG4iLAorCQkJcHJfZXJyKCJVbmFibGUgdG8gcmVh
ZCBmcm9tIG1tYXAsIG9mZnNldDolemRcbiIsCiAJCQkgICAgICAgaSAqIHNpemVvZih4KSk7CiAJ
CQllcnIgPSAtRUZBVUxUOwogCQkJYnJlYWs7CiAJCX0KIAogCQlpZiAoeCAhPSBleHBhbmQzMihQ
T0lTT05fSU5VU0UpKSB7Ci0JCQlwcl9lcnIoIlJlYWQgaW5jb3JyZWN0IHZhbHVlIGZyb20gR1RU
IG1tYXAsIG9mZnNldDolemQsIGZvdW5kOiV4LCBleHBlY3RlZDoleFxuIiwKKwkJCXByX2Vycigi
UmVhZCBpbmNvcnJlY3QgdmFsdWUgZnJvbSBtbWFwLCBvZmZzZXQ6JXpkLCBmb3VuZDoleCwgZXhw
ZWN0ZWQ6JXhcbiIsCiAJCQkgICAgICAgaSAqIHNpemVvZih4KSwgeCwgZXhwYW5kMzIoUE9JU09O
X0lOVVNFKSk7CiAJCQllcnIgPSAtRUlOVkFMOwogCQkJYnJlYWs7CkBAIC03OTUsNyArNzk5LDcg
QEAgc3RhdGljIGludCBpZ3RfbW1hcF9ndHQodm9pZCAqYXJnKQogCiAJCXggPSBleHBhbmQzMihQ
T0lTT05fRlJFRSk7CiAJCWlmIChwdXRfdXNlcih4LCB1eCkpIHsKLQkJCXByX2VycigiVW5hYmxl
IHRvIHdyaXRlIHRvIEdUVCBtbWFwLCBvZmZzZXQ6JXpkXG4iLAorCQkJcHJfZXJyKCJVbmFibGUg
dG8gd3JpdGUgdG8gbW1hcCwgb2Zmc2V0OiV6ZFxuIiwKIAkJCSAgICAgICBpICogc2l6ZW9mKHgp
KTsKIAkJCWVyciA9IC1FRkFVTFQ7CiAJCQlicmVhazsKQEAgLTgxMSw3ICs4MTUsNyBAQCBzdGF0
aWMgaW50IGlndF9tbWFwX2d0dCh2b2lkICphcmcpCiAJCWdvdG8gb3V0OwogCX0KIAlpZiAoZXJy
ID09IDAgJiYgbWVtY2hyX2ludih2YWRkciwgUE9JU09OX0ZSRUUsIFBBR0VfU0laRSkpIHsKLQkJ
cHJfZXJyKCJXcml0ZSB2aWEgR0dUVCBtbWFwIGRpZCBub3QgbGFuZCBpbiBiYWNraW5nIHN0b3Jl
XG4iKTsKKwkJcHJfZXJyKCJXcml0ZSB2aWEgbW1hcCBkaWQgbm90IGxhbmQgaW4gYmFja2luZyBz
dG9yZVxuIik7CiAJCWVyciA9IC1FSU5WQUw7CiAJfQogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9t
YXAob2JqKTsKQEAgLTgyMSw2ICs4MjUsMTYgQEAgc3RhdGljIGludCBpZ3RfbW1hcF9ndHQodm9p
ZCAqYXJnKQogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyBpbnQgaWd0X21tYXBfZ3R0KHZvaWQg
KmFyZykKK3sKKwlyZXR1cm4gaWd0X21tYXAoYXJnLCBJOTE1X01NQVBfVFlQRV9HVFQpOworfQor
CitzdGF0aWMgaW50IGlndF9tbWFwX2NwdSh2b2lkICphcmcpCit7CisJcmV0dXJuIGlndF9tbWFw
KGFyZywgSTkxNV9NTUFQX1RZUEVfV0MpOworfQorCiBzdGF0aWMgaW50IGNoZWNrX3ByZXNlbnRf
cHRlKHB0ZV90ICpwdGUsIHVuc2lnbmVkIGxvbmcgYWRkciwgdm9pZCAqZGF0YSkKIHsKIAlpZiAo
IXB0ZV9wcmVzZW50KCpwdGUpIHx8IHB0ZV9ub25lKCpwdGUpKSB7CkBAIC04NzMsMTAgKzg4Nywx
MSBAQCBzdGF0aWMgaW50IHByZWZhdWx0X3JhbmdlKHU2NCBzdGFydCwgdTY0IGxlbikKIAlyZXR1
cm4gX19nZXRfdXNlcihjLCBlbmQgLSAxKTsKIH0KIAotc3RhdGljIGludCBpZ3RfbW1hcF9ndHRf
cmV2b2tlKHZvaWQgKmFyZykKK3N0YXRpYyBpbnQgaWd0X21tYXBfcmV2b2tlKHZvaWQgKmFyZywg
ZW51bSBpOTE1X21tYXBfdHlwZSB0eXBlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1ID0gYXJnOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmo7CisJc3RydWN0IGk5
MTVfbW1hcF9vZmZzZXQgKm1tbzsKIAl1bnNpZ25lZCBsb25nIGFkZHI7CiAJaW50IGVycjsKIApA
QCAtODg3LDEyICs5MDIsMTMgQEAgc3RhdGljIGludCBpZ3RfbW1hcF9ndHRfcmV2b2tlKHZvaWQg
KmFyZykKIAlpZiAoSVNfRVJSKG9iaikpCiAJCXJldHVybiBQVFJfRVJSKG9iaik7CiAKLQllcnIg
PSBjcmVhdGVfbW1hcF9vZmZzZXQob2JqKTsKLQlpZiAoZXJyKQorCW1tbyA9IG1tYXBfb2Zmc2V0
X2F0dGFjaChvYmosIHR5cGUsIE5VTEwpOworCWlmIChJU19FUlIobW1vKSkgeworCQllcnIgPSBQ
VFJfRVJSKG1tbyk7CiAJCWdvdG8gb3V0OworCX0KIAotCWFkZHIgPSBpZ3RfbW1hcF9ub2RlKGk5
MTUsICZvYmotPmJhc2Uudm1hX25vZGUsCi0JCQkgICAgIDAsIFBST1RfV1JJVEUsIE1BUF9TSEFS
RUQpOworCWFkZHIgPSBpZ3RfbW1hcF9ub2RlKGk5MTUsICZtbW8tPnZtYV9ub2RlLCAwLCBQUk9U
X1dSSVRFLCBNQVBfU0hBUkVEKTsKIAlpZiAoSVNfRVJSX1ZBTFVFKGFkZHIpKSB7CiAJCWVyciA9
IGFkZHI7CiAJCWdvdG8gb3V0OwpAQCAtOTAyLDcgKzkxOCw4IEBAIHN0YXRpYyBpbnQgaWd0X21t
YXBfZ3R0X3Jldm9rZSh2b2lkICphcmcpCiAJaWYgKGVycikKIAkJZ290byBvdXRfdW5tYXA7CiAK
LQlHRU1fQlVHX09OKCFhdG9taWNfcmVhZCgmb2JqLT5iaW5kX2NvdW50KSk7CisJR0VNX0JVR19P
TihtbW8tPm1tYXBfdHlwZSA9PSBJOTE1X01NQVBfVFlQRV9HVFQgJiYKKwkJICAgIWF0b21pY19y
ZWFkKCZvYmotPmJpbmRfY291bnQpKTsKIAogCWVyciA9IGNoZWNrX3ByZXNlbnQoYWRkciwgb2Jq
LT5iYXNlLnNpemUpOwogCWlmIChlcnIpCkBAIC05MjAsNiArOTM3LDE1IEBAIHN0YXRpYyBpbnQg
aWd0X21tYXBfZ3R0X3Jldm9rZSh2b2lkICphcmcpCiAJfQogCUdFTV9CVUdfT04oYXRvbWljX3Jl
YWQoJm9iai0+YmluZF9jb3VudCkpOwogCisJaWYgKHR5cGUgIT0gSTkxNV9NTUFQX1RZUEVfR1RU
KSB7CisJCV9faTkxNV9nZW1fb2JqZWN0X3B1dF9wYWdlcyhvYmopOworCQlpZiAoaTkxNV9nZW1f
b2JqZWN0X2hhc19wYWdlcyhvYmopKSB7CisJCQlwcl9lcnIoIkZhaWxlZCB0byBwdXQtcGFnZXMg
b2JqZWN0IVxuIik7CisJCQllcnIgPSAtRUlOVkFMOworCQkJZ290byBvdXRfdW5tYXA7CisJCX0K
Kwl9CisKIAllcnIgPSBjaGVja19hYnNlbnQoYWRkciwgb2JqLT5iYXNlLnNpemUpOwogCWlmIChl
cnIpCiAJCWdvdG8gb3V0X3VubWFwOwpAQCAtOTMxLDYgKzk1NywxNiBAQCBzdGF0aWMgaW50IGln
dF9tbWFwX2d0dF9yZXZva2Uodm9pZCAqYXJnKQogCXJldHVybiBlcnI7CiB9CiAKK3N0YXRpYyBp
bnQgaWd0X21tYXBfZ3R0X3Jldm9rZSh2b2lkICphcmcpCit7CisJcmV0dXJuIGlndF9tbWFwX3Jl
dm9rZShhcmcsIEk5MTVfTU1BUF9UWVBFX0dUVCk7Cit9CisKK3N0YXRpYyBpbnQgaWd0X21tYXBf
Y3B1X3Jldm9rZSh2b2lkICphcmcpCit7CisJcmV0dXJuIGlndF9tbWFwX3Jldm9rZShhcmcsIEk5
MTVfTU1BUF9UWVBFX1dDKTsKK30KKwogaW50IGk5MTVfZ2VtX21tYW5fbGl2ZV9zZWxmdGVzdHMo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJc3RhdGljIGNvbnN0IHN0cnVjdCBp
OTE1X3N1YnRlc3QgdGVzdHNbXSA9IHsKQEAgLTkzOCw3ICs5NzQsOSBAQCBpbnQgaTkxNV9nZW1f
bW1hbl9saXZlX3NlbGZ0ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAkJU1VC
VEVTVChpZ3Rfc21va2VfdGlsaW5nKSwKIAkJU1VCVEVTVChpZ3RfbW1hcF9vZmZzZXRfZXhoYXVz
dGlvbiksCiAJCVNVQlRFU1QoaWd0X21tYXBfZ3R0KSwKKwkJU1VCVEVTVChpZ3RfbW1hcF9jcHUp
LAogCQlTVUJURVNUKGlndF9tbWFwX2d0dF9yZXZva2UpLAorCQlTVUJURVNUKGlndF9tbWFwX2Nw
dV9yZXZva2UpLAogCX07CiAKIAlyZXR1cm4gaTkxNV9zdWJ0ZXN0cyh0ZXN0cywgaTkxNSk7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCAzNjE4OTIzOGUxM2MuLjBlOTRi
NzIwYzk5MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC02NzgsOCAr
Njc4LDEzIEBAIHN0YXRpYyB2b2lkIHJldm9rZV9tbWFwcyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQog
CQkJY29udGludWU7CiAKIAkJR0VNX0JVR19PTih2bWEtPmZlbmNlICE9ICZndC0+Z2d0dC0+ZmVu
Y2VfcmVnc1tpXSk7Ci0JCW5vZGUgPSAmdm1hLT5vYmotPmJhc2Uudm1hX25vZGU7CisKKwkJaWYg
KCF2bWEtPm1tbykKKwkJCWNvbnRpbnVlOworCisJCW5vZGUgPSAmdm1hLT5tbW8tPnZtYV9ub2Rl
OwogCQl2bWFfb2Zmc2V0ID0gdm1hLT5nZ3R0X3ZpZXcucGFydGlhbC5vZmZzZXQgPDwgUEFHRV9T
SElGVDsKKwogCQl1bm1hcF9tYXBwaW5nX3JhbmdlKGd0LT5pOTE1LT5kcm0uYW5vbl9pbm9kZS0+
aV9tYXBwaW5nLAogCQkJCSAgICBkcm1fdm1hX25vZGVfb2Zmc2V0X2FkZHIobm9kZSkgKyB2bWFf
b2Zmc2V0LAogCQkJCSAgICB2bWEtPnNpemUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCAz
NDM0NGI2MzJlMWYuLjczYTM4NWY4MDlkMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC02
MSw2ICs2MSw3IEBACiAKICNpbmNsdWRlICJnZW0vaTkxNV9nZW1fY29udGV4dC5oIgogI2luY2x1
ZGUgImdlbS9pOTE1X2dlbV9pb2N0bHMuaCIKKyNpbmNsdWRlICJnZW0vaTkxNV9nZW1fbW1hbi5o
IgogI2luY2x1ZGUgImd0L2ludGVsX2d0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIK
ICNpbmNsdWRlICJndC9pbnRlbF9yYzYuaCIKQEAgLTI2NjAsMTggKzI2NjEsMTIgQEAgY29uc3Qg
c3RydWN0IGRldl9wbV9vcHMgaTkxNV9wbV9vcHMgPSB7CiAJLnJ1bnRpbWVfcmVzdW1lID0gaW50
ZWxfcnVudGltZV9yZXN1bWUsCiB9OwogCi1zdGF0aWMgY29uc3Qgc3RydWN0IHZtX29wZXJhdGlv
bnNfc3RydWN0IGk5MTVfZ2VtX3ZtX29wcyA9IHsKLQkuZmF1bHQgPSBpOTE1X2dlbV9mYXVsdCwK
LQkub3BlbiA9IGRybV9nZW1fdm1fb3BlbiwKLQkuY2xvc2UgPSBkcm1fZ2VtX3ZtX2Nsb3NlLAot
fTsKLQogc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgaTkxNV9kcml2ZXJfZm9w
cyA9IHsKIAkub3duZXIgPSBUSElTX01PRFVMRSwKIAkub3BlbiA9IGRybV9vcGVuLAogCS5yZWxl
YXNlID0gZHJtX3JlbGVhc2UsCiAJLnVubG9ja2VkX2lvY3RsID0gZHJtX2lvY3RsLAotCS5tbWFw
ID0gZHJtX2dlbV9tbWFwLAorCS5tbWFwID0gaTkxNV9nZW1fbW1hcCwKIAkucG9sbCA9IGRybV9w
b2xsLAogCS5yZWFkID0gZHJtX3JlYWQsCiAJLmNvbXBhdF9pb2N0bCA9IGk5MTVfY29tcGF0X2lv
Y3RsLApAQCAtMjcxOCw3ICsyNzEzLDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkcm1faW9jdGxf
ZGVzYyBpOTE1X2lvY3Rsc1tdID0gewogCURSTV9JT0NUTF9ERUZfRFJWKEk5MTVfR0VNX1BSRUFE
LCBpOTE1X2dlbV9wcmVhZF9pb2N0bCwgRFJNX1JFTkRFUl9BTExPVyksCiAJRFJNX0lPQ1RMX0RF
Rl9EUlYoSTkxNV9HRU1fUFdSSVRFLCBpOTE1X2dlbV9wd3JpdGVfaW9jdGwsIERSTV9SRU5ERVJf
QUxMT1cpLAogCURSTV9JT0NUTF9ERUZfRFJWKEk5MTVfR0VNX01NQVAsIGk5MTVfZ2VtX21tYXBf
aW9jdGwsIERSTV9SRU5ERVJfQUxMT1cpLAotCURSTV9JT0NUTF9ERUZfRFJWKEk5MTVfR0VNX01N
QVBfR1RULCBpOTE1X2dlbV9tbWFwX2d0dF9pb2N0bCwgRFJNX1JFTkRFUl9BTExPVyksCisJRFJN
X0lPQ1RMX0RFRl9EUlYoSTkxNV9HRU1fTU1BUF9PRkZTRVQsIGk5MTVfZ2VtX21tYXBfb2Zmc2V0
X2lvY3RsLCBEUk1fUkVOREVSX0FMTE9XKSwKIAlEUk1fSU9DVExfREVGX0RSVihJOTE1X0dFTV9T
RVRfRE9NQUlOLCBpOTE1X2dlbV9zZXRfZG9tYWluX2lvY3RsLCBEUk1fUkVOREVSX0FMTE9XKSwK
IAlEUk1fSU9DVExfREVGX0RSVihJOTE1X0dFTV9TV19GSU5JU0gsIGk5MTVfZ2VtX3N3X2Zpbmlz
aF9pb2N0bCwgRFJNX1JFTkRFUl9BTExPVyksCiAJRFJNX0lPQ1RMX0RFRl9EUlYoSTkxNV9HRU1f
U0VUX1RJTElORywgaTkxNV9nZW1fc2V0X3RpbGluZ19pb2N0bCwgRFJNX1JFTkRFUl9BTExPVyks
CkBAIC0yNzYwLDcgKzI3NTUsNiBAQCBzdGF0aWMgc3RydWN0IGRybV9kcml2ZXIgZHJpdmVyID0g
ewogCiAJLmdlbV9jbG9zZV9vYmplY3QgPSBpOTE1X2dlbV9jbG9zZV9vYmplY3QsCiAJLmdlbV9m
cmVlX29iamVjdF91bmxvY2tlZCA9IGk5MTVfZ2VtX2ZyZWVfb2JqZWN0LAotCS5nZW1fdm1fb3Bz
ID0gJmk5MTVfZ2VtX3ZtX29wcywKIAogCS5wcmltZV9oYW5kbGVfdG9fZmQgPSBkcm1fZ2VtX3By
aW1lX2hhbmRsZV90b19mZCwKIAkucHJpbWVfZmRfdG9faGFuZGxlID0gZHJtX2dlbV9wcmltZV9m
ZF90b19oYW5kbGUsCkBAIC0yNzcxLDcgKzI3NjUsOCBAQCBzdGF0aWMgc3RydWN0IGRybV9kcml2
ZXIgZHJpdmVyID0gewogCS5nZXRfc2Nhbm91dF9wb3NpdGlvbiA9IGk5MTVfZ2V0X2NydGNfc2Nh
bm91dHBvcywKIAogCS5kdW1iX2NyZWF0ZSA9IGk5MTVfZ2VtX2R1bWJfY3JlYXRlLAotCS5kdW1i
X21hcF9vZmZzZXQgPSBpOTE1X2dlbV9tbWFwX2d0dCwKKwkuZHVtYl9tYXBfb2Zmc2V0ID0gaTkx
NV9nZW1fZHVtYl9tbWFwX29mZnNldCwKKwogCS5pb2N0bHMgPSBpOTE1X2lvY3RscywKIAkubnVt
X2lvY3RscyA9IEFSUkFZX1NJWkUoaTkxNV9pb2N0bHMpLAogCS5mb3BzID0gJmk5MTVfZHJpdmVy
X2ZvcHMsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAppbmRleCAxNDc0NGMxMTQ0NzUuLjBkNGFkMThl
MTBkZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCkBAIC0xODU3LDkgKzE4NTcsNiBAQCBpOTE1
X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShzdHJ1Y3QgZHJtX2RldmljZSAqZGV2KQogaW50IGk5
MTVfZ2VtX2R1bWJfY3JlYXRlKHN0cnVjdCBkcm1fZmlsZSAqZmlsZV9wcml2LAogCQkJIHN0cnVj
dCBkcm1fZGV2aWNlICpkZXYsCiAJCQkgc3RydWN0IGRybV9tb2RlX2NyZWF0ZV9kdW1iICphcmdz
KTsKLWludCBpOTE1X2dlbV9tbWFwX2d0dChzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGVfcHJpdiwgc3Ry
dWN0IGRybV9kZXZpY2UgKmRldiwKLQkJICAgICAgdTMyIGhhbmRsZSwgdTY0ICpvZmZzZXQpOwot
aW50IGk5MTVfZ2VtX21tYXBfZ3R0X3ZlcnNpb24odm9pZCk7CiAKIGludCBfX211c3RfY2hlY2sg
aTkxNV9nZW1fc2V0X2dsb2JhbF9zZXFubyhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB1MzIgc2Vx
bm8pOwogCkBAIC0xODgyLDcgKzE4NzksNiBAQCB2b2lkIGk5MTVfZ2VtX2RyaXZlcl9yZWxlYXNl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGk5MTVfZ2VtX3N1c3Bl
bmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaTkxNV9nZW1fc3Vz
cGVuZF9sYXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiB2b2lkIGk5MTVf
Z2VtX3Jlc3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwotdm1fZmF1bHRf
dCBpOTE1X2dlbV9mYXVsdChzdHJ1Y3Qgdm1fZmF1bHQgKnZtZik7CiAKIGludCBpOTE1X2dlbV9v
cGVuKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUp
Owogdm9pZCBpOTE1X2dlbV9yZWxlYXNlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsIHN0cnVjdCBk
cm1fZmlsZSAqZmlsZSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRleCBlYjllMjYwOWM1Njku
LjA3YjdhOGE2NzFkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBAIC00NCw2ICs0NCw3IEBA
CiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2NsZmx1c2guaCIKICNpbmNsdWRlICJnZW0vaTkxNV9n
ZW1fY29udGV4dC5oIgogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9pb2N0bHMuaCIKKyNpbmNsdWRl
ICJnZW0vaTkxNV9nZW1fbW1hbi5oIgogI2luY2x1ZGUgImdlbS9pOTE1X2dlbV9wbS5oIgogI2lu
Y2x1ZGUgImd0L2ludGVsX2NvbnRleHQuaCIKICNpbmNsdWRlICJndC9pbnRlbF9lbmdpbmVfdXNl
ci5oIgpAQCAtODg1LDcgKzg4Niw3IEBAIHZvaWQgaTkxNV9nZW1fcnVudGltZV9zdXNwZW5kKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCiAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZl
KG9iaiwgb24sCiAJCQkJICZpOTE1LT5nZ3R0LnVzZXJmYXVsdF9saXN0LCB1c2VyZmF1bHRfbGlu
aykKLQkJX19pOTE1X2dlbV9vYmplY3RfcmVsZWFzZV9tbWFwKG9iaik7CisJCV9faTkxNV9nZW1f
b2JqZWN0X3JlbGVhc2VfbW1hcF9ndHQob2JqKTsKIAogCS8qCiAJICogVGhlIGZlbmNlIHdpbGwg
YmUgbG9zdCB3aGVuIHRoZSBkZXZpY2UgcG93ZXJzIGRvd24uIElmIGFueSB3ZXJlCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dldHBhcmFtLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dldHBhcmFtLmMKaW5kZXggY2Y4YThjM2VmMDQ3Li41NGZjZTgxZDU3MjQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2V0cGFyYW0uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dldHBhcmFtLmMKQEAgLTIsNiArMiw3IEBACiAgKiBT
UERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUCiAgKi8KIAorI2luY2x1ZGUgImdlbS9pOTE1X2dl
bV9tbWFuLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX3VzZXIuaCIKIAogI2luY2x1ZGUg
Imk5MTVfZHJ2LmgiCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYwppbmRleCBlNTUxMmYyNmUyMGEuLjU2
NGZhOTc1NThjNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5jCkBAIC0xMDU0LDE3ICsxMDU0LDE2
IEBAIHN0YXRpYyB2b2lkIF9faTkxNV92bWFfaW91bm1hcChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkK
IAogdm9pZCBpOTE1X3ZtYV9yZXZva2VfbW1hcChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIHsKLQlz
dHJ1Y3QgZHJtX3ZtYV9vZmZzZXRfbm9kZSAqbm9kZSA9ICZ2bWEtPm9iai0+YmFzZS52bWFfbm9k
ZTsKKwlzdHJ1Y3QgZHJtX3ZtYV9vZmZzZXRfbm9kZSAqbm9kZTsKIAl1NjQgdm1hX29mZnNldDsK
IAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnZtYS0+dm0tPm11dGV4KTsKLQogCWlmICghaTkxNV92
bWFfaGFzX3VzZXJmYXVsdCh2bWEpKQogCQlyZXR1cm47CiAKIAlHRU1fQlVHX09OKCFpOTE1X3Zt
YV9pc19tYXBfYW5kX2ZlbmNlYWJsZSh2bWEpKTsKIAlHRU1fQlVHX09OKCF2bWEtPm9iai0+dXNl
cmZhdWx0X2NvdW50KTsKIAorCW5vZGUgPSAmdm1hLT5tbW8tPnZtYV9ub2RlOwogCXZtYV9vZmZz
ZXQgPSB2bWEtPmdndHRfdmlldy5wYXJ0aWFsLm9mZnNldCA8PCBQQUdFX1NISUZUOwogCXVubWFw
X21hcHBpbmdfcmFuZ2Uodm1hLT52bS0+aTkxNS0+ZHJtLmFub25faW5vZGUtPmlfbWFwcGluZywK
IAkJCSAgICBkcm1fdm1hX25vZGVfb2Zmc2V0X2FkZHIobm9kZSkgKyB2bWFfb2Zmc2V0LApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfdm1hLmgKaW5kZXggNDY1OTMyODEzYmM1Li5mMDlmNGY1MTNjNDEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmgKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV92bWEuaApAQCAtNjMsNiArNjMsOSBAQCBzdHJ1Y3QgaTkxNV92bWEgewog
CXU2NCBkaXNwbGF5X2FsaWdubWVudDsKIAlzdHJ1Y3QgaTkxNV9wYWdlX3NpemVzIHBhZ2Vfc2l6
ZXM7CiAKKwkvKiBtbWFwLW9mZnNldCBhc3NvY2lhdGVkIHdpdGggZmVuY2luZyBmb3IgdGhpcyB2
bWEgKi8KKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldAkqbW1vOworCiAJdTMyIGZlbmNlX3NpemU7
CiAJdTMyIGZlbmNlX2FsaWdubWVudDsKIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2RybS9p
OTE1X2RybS5oIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCmluZGV4IDU0MDBkN2UwNTdm
MS4uODI5YzBhNDg1NzdmIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgK
KysrIGIvaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oCkBAIC0zOTUsNiArMzk1LDcgQEAgdHlw
ZWRlZiBzdHJ1Y3QgX2RybV9pOTE1X3NhcmVhIHsKICNkZWZpbmUgRFJNX0lPQ1RMX0k5MTVfR0VN
X1BXUklURQlEUk1fSU9XIChEUk1fQ09NTUFORF9CQVNFICsgRFJNX0k5MTVfR0VNX1BXUklURSwg
c3RydWN0IGRybV9pOTE1X2dlbV9wd3JpdGUpCiAjZGVmaW5lIERSTV9JT0NUTF9JOTE1X0dFTV9N
TUFQCQlEUk1fSU9XUihEUk1fQ09NTUFORF9CQVNFICsgRFJNX0k5MTVfR0VNX01NQVAsIHN0cnVj
dCBkcm1faTkxNV9nZW1fbW1hcCkKICNkZWZpbmUgRFJNX0lPQ1RMX0k5MTVfR0VNX01NQVBfR1RU
CURSTV9JT1dSKERSTV9DT01NQU5EX0JBU0UgKyBEUk1fSTkxNV9HRU1fTU1BUF9HVFQsIHN0cnVj
dCBkcm1faTkxNV9nZW1fbW1hcF9ndHQpCisjZGVmaW5lIERSTV9JT0NUTF9JOTE1X0dFTV9NTUFQ
X09GRlNFVAlEUk1fSU9XUihEUk1fQ09NTUFORF9CQVNFICsgRFJNX0k5MTVfR0VNX01NQVBfR1RU
LCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX21tYXBfb2Zmc2V0KQogI2RlZmluZSBEUk1fSU9DVExfSTkx
NV9HRU1fU0VUX0RPTUFJTglEUk1fSU9XIChEUk1fQ09NTUFORF9CQVNFICsgRFJNX0k5MTVfR0VN
X1NFVF9ET01BSU4sIHN0cnVjdCBkcm1faTkxNV9nZW1fc2V0X2RvbWFpbikKICNkZWZpbmUgRFJN
X0lPQ1RMX0k5MTVfR0VNX1NXX0ZJTklTSAlEUk1fSU9XIChEUk1fQ09NTUFORF9CQVNFICsgRFJN
X0k5MTVfR0VNX1NXX0ZJTklTSCwgc3RydWN0IGRybV9pOTE1X2dlbV9zd19maW5pc2gpCiAjZGVm
aW5lIERSTV9JT0NUTF9JOTE1X0dFTV9TRVRfVElMSU5HCURSTV9JT1dSIChEUk1fQ09NTUFORF9C
QVNFICsgRFJNX0k5MTVfR0VNX1NFVF9USUxJTkcsIHN0cnVjdCBkcm1faTkxNV9nZW1fc2V0X3Rp
bGluZykKQEAgLTc5Myw2ICs3OTQsMzcgQEAgc3RydWN0IGRybV9pOTE1X2dlbV9tbWFwX2d0dCB7
CiAJX191NjQgb2Zmc2V0OwogfTsKIAorc3RydWN0IGRybV9pOTE1X2dlbV9tbWFwX29mZnNldCB7
CisJLyoqIEhhbmRsZSBmb3IgdGhlIG9iamVjdCBiZWluZyBtYXBwZWQuICovCisJX191MzIgaGFu
ZGxlOworCV9fdTMyIHBhZDsKKwkvKioKKwkgKiBGYWtlIG9mZnNldCB0byB1c2UgZm9yIHN1YnNl
cXVlbnQgbW1hcCBjYWxsCisJICoKKwkgKiBUaGlzIGlzIGEgZml4ZWQtc2l6ZSB0eXBlIGZvciAz
Mi82NCBjb21wYXRpYmlsaXR5LgorCSAqLworCV9fdTY0IG9mZnNldDsKKworCS8qKgorCSAqIEZs
YWdzIGZvciBleHRlbmRlZCBiZWhhdmlvdXIuCisJICoKKwkgKiBJdCBpcyBtYW5kYXRvcnkgdGhh
dCBvbmUgb2YgdGhlIE1NQVBfT0ZGU0VUIHR5cGVzCisJICogKEdUVCwgV0MsIFdCLCBVQywgZXRj
KSBzaG91bGQgYmUgaW5jbHVkZWQuCisJICovCisJX191NjQgZmxhZ3M7CisjZGVmaW5lIEk5MTVf
TU1BUF9PRkZTRVRfR1RUIDAKKyNkZWZpbmUgSTkxNV9NTUFQX09GRlNFVF9XQyAgMQorI2RlZmlu
ZSBJOTE1X01NQVBfT0ZGU0VUX1dCICAyCisjZGVmaW5lIEk5MTVfTU1BUF9PRkZTRVRfVUMgIDMK
KworCS8qCisJICogWmVyby10ZXJtaW5hdGVkIGNoYWluIG9mIGV4dGVuc2lvbnMuCisJICoKKwkg
KiBObyBjdXJyZW50IGV4dGVuc2lvbnMgZGVmaW5lZDsgbWJ6LgorCSAqLworCV9fdTY0IGV4dGVu
c2lvbnM7Cit9OworCiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX3NldF9kb21haW4gewogCS8qKiBIYW5k
bGUgZm9yIHRoZSBvYmplY3QgKi8KIAlfX3UzMiBoYW5kbGU7Ci0tIAoyLjI0LjAKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5n
IGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

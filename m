Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E71FAAD4D0
	for <lists+intel-gfx@lfdr.de>; Mon,  9 Sep 2019 10:23:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 381EA899AB;
	Mon,  9 Sep 2019 08:23:07 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B90C789996
 for <intel-gfx@lists.freedesktop.org>; Mon,  9 Sep 2019 08:23:01 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Sep 2019 01:23:01 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,484,1559545200"; d="scan'208";a="196123521"
Received: from hoernig-mobl.ger.corp.intel.com (HELO delly.ger.corp.intel.com)
 ([10.249.33.104])
 by orsmga002.jf.intel.com with ESMTP; 09 Sep 2019 01:23:00 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  9 Sep 2019 11:22:42 +0300
Message-Id: <20190909082245.27245-10-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190909082245.27245-1-lionel.g.landwerlin@intel.com>
References: <20190909082245.27245-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 10/13] drm/i915/perf: execute OA configuration from
 command stream
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2UgaGF2ZW4ndCBydW4gaW50byBpc3N1ZXMgd2l0aCBwcm9ncmFtbWluZyB0aGUgZ2xvYmFsIE9B
L05PQQpyZWdpc3RlcnMgY29uZmlndXJhdGlvbiBmcm9tIENQVSBzbyBmYXIsIGJ1dCBIVyBlbmdp
bmVlcnMgYWN0dWFsbHkKcmVjb21tZW5kIGRvaW5nIHRoaXMgZnJvbSB0aGUgY29tbWFuZCBzdHJl
YW1lci4gT24gVEdMIGluIHBhcnRpY3VsYXIKb25lIG9mIHRoZSBjbG9jayBkb21haW4gaW4gd2hp
Y2ggc29tZSBvZiB0aGF0IHByb2dyYW1taW5nIGdvZXMgbWlnaHQKbm90IGJlIHBvd2VyZWQgd2hl
biB3ZSBwb2tlIHRoaW5ncyBmcm9tIHRoZSBDUFUuCgpTaW5jZSB3ZSBoYXZlIGEgY29tbWFuZCBi
dWZmZXIgcHJlcGFyZWQgZm9yIHRoZSBleGVjYnVmZmVyIHNpZGUgb2YKdGhpbmdzLCB3ZSBjYW4g
cmV1c2UgdGhhdCBhcHByb2FjaCBoZXJlIHRvby4KClRoaXMgYWxzbyBhbGxvd3MgdXMgdG8gc2ln
bmlmaWNhbnRseSByZWR1Y2UgdGhlIGFtb3VudCBvZiB0aW1lIHdlIGhvbGQKdGhlIG1haW4gbG9j
ay4KCnYyOiBEcm9wIHRoZSBnbG9iYWwgbG9jayBhcyBtdWNoIGFzIHBvc3NpYmxlCgp2MzogVGFr
ZSBnbG9iYWwgbG9jayB0byBwaW4gZ2xvYmFsCgp2NDogQ3JlYXRlIGk5MTUgcmVxdWVzdCBpbiBl
bWl0X29hX2NvbmZpZygpIHRvIGF2b2lkIGRlYWRsb2NrcyAoTGlvbmVsKQoKdjU6IE1vdmUgbG9j
a2luZyB0byB0aGUgc3RyZWFtIChMaW9uZWwpCgp2NjogTW92ZSBhY3RpdmUgcmVjb25maWd1cmF0
aW9uIHJlcXVlc3QgaW50byBpOTE1X3BlcmZfc3RyZWFtIChMaW9uZWwpCgp2NzogUGluIFZNQSBv
dXRzaWRlIHJlcXVlc3QgY3JlYXRpb24gKENocmlzKQogICAgTG9jayBWTUEgYmVmb3JlIG1vdmUg
dG8gYWN0aXZlIChDaHJpcykKCnY4OiBGaXggZG91YmxlIGZyZWUgb24gc3RyZWFtLT5pbml0aWFs
X29hX2NvbmZpZ19ibyAoTGlvbmVsKQogICAgRG9uJ3QgYWxsb3cgaW50ZXJydXB0aW9uIHdoZW4g
d2FpdGluZyBvbiBhY3RpdmUgY29uZmlnIHJlcXVlc3QKICAgIChMaW9uZWwpCgpTaWduZWQtb2Zm
LWJ5OiBMaW9uZWwgTGFuZHdlcmxpbiA8bGlvbmVsLmcubGFuZHdlcmxpbkBpbnRlbC5jb20+Ci0t
LQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMgICAgICAgfCAxNzQgKysrKysrKysr
KysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgg
fCAgMTUgKystCiAyIGZpbGVzIGNoYW5nZWQsIDEyOCBpbnNlcnRpb25zKCspLCA2MSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IGYyYjc3OGQ4NGI1Mi4uYWJiY2Yz
ZWM2NTRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMTU1OCwxOCArMTU1OCwyMyBA
QCBmcmVlX29hX2NvbmZpZ3Moc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKIHN0YXRp
YyB2b2lkIGk5MTVfb2Ffc3RyZWFtX2Rlc3Ryb3koc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0
cmVhbSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzdHJlYW0tPmRl
dl9wcml2OworCWludCBlcnI7CiAKIAlCVUdfT04oc3RyZWFtICE9IGRldl9wcml2LT5wZXJmLmV4
Y2x1c2l2ZV9zdHJlYW0pOwogCi0JLyoKLQkgKiBVbnNldCBleGNsdXNpdmVfc3RyZWFtIGZpcnN0
LCBpdCB3aWxsIGJlIGNoZWNrZWQgd2hpbGUgZGlzYWJsaW5nCi0JICogdGhlIG1ldHJpYyBzZXQg
b24gZ2VuOCsuCi0JICovCiAJbXV0ZXhfbG9jaygmZGV2X3ByaXYtPmRybS5zdHJ1Y3RfbXV0ZXgp
OwotCWRldl9wcml2LT5wZXJmLmV4Y2x1c2l2ZV9zdHJlYW0gPSBOVUxMOworCW11dGV4X2xvY2so
JnN0cmVhbS0+Y29uZmlnX211dGV4KTsKIAlkZXZfcHJpdi0+cGVyZi5vcHMuZGlzYWJsZV9tZXRy
aWNfc2V0KHN0cmVhbSk7CisJZXJyID0gaTkxNV9hY3RpdmVfcmVxdWVzdF9yZXRpcmUoJnN0cmVh
bS0+YWN0aXZlX2NvbmZpZ19ycSwgMCwKKwkJCQkJICZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJ
bXV0ZXhfdW5sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CisJZGV2X3ByaXYtPnBlcmYuZXhj
bHVzaXZlX3N0cmVhbSA9IE5VTEw7CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVj
dF9tdXRleCk7CiAKKwlpZiAoZXJyKQorCQlEUk1fRVJST1IoIkZhaWxlZCB0byBkaXNhYmxlIHBl
cmYgc3RyZWFtXG4iKTsKKworCiAJZnJlZV9vYV9idWZmZXIoc3RyZWFtKTsKIAlmcmVlX25vYV93
YWl0KHN0cmVhbSk7CiAKQEAgLTE3OTUsNiArMTgwMCwxMCBAQCBzdGF0aWMgaW50IGFsbG9jX25v
YV93YWl0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJCXJldHVybiBQVFJfRVJS
KGJvKTsKIAl9CiAKKwlyZXQgPSBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmaTkxNS0+
ZHJtKTsKKwlpZiAocmV0KQorCQlnb3RvIGVycl91bnJlZjsKKwogCS8qCiAJICogV2UgcGluIGlu
IEdHVFQgYmVjYXVzZSB3ZSBqdW1wIGludG8gdGhpcyBidWZmZXIgbm93IGJlY2F1c2UKIAkgKiBt
dWx0aXBsZSBPQSBjb25maWcgQk9zIHdpbGwgaGF2ZSBhIGp1bXAgdG8gdGhpcyBhZGRyZXNzIGFu
ZCBpdApAQCAtMTgwMiwxMCArMTgxMSwxMyBAQCBzdGF0aWMgaW50IGFsbG9jX25vYV93YWl0KHN0
cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJICovCiAJdm1hID0gaTkxNV9nZW1fb2Jq
ZWN0X2dndHRfcGluKGJvLCBOVUxMLCAwLCA0MDk2LCAwKTsKIAlpZiAoSVNfRVJSKHZtYSkpIHsK
KwkJbXV0ZXhfdW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAkJcmV0ID0gUFRSX0VS
Uih2bWEpOwogCQlnb3RvIGVycl91bnJlZjsKIAl9CiAKKwltdXRleF91bmxvY2soJmk5MTUtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOworCiAJYmF0Y2ggPSBjcyA9IGk5MTVfZ2VtX29iamVjdF9waW5fbWFw
KGJvLCBJOTE1X01BUF9XQik7CiAJaWYgKElTX0VSUihiYXRjaCkpIHsKIAkJcmV0ID0gUFRSX0VS
UihiYXRjaCk7CkBAIC0xOTM5LDcgKzE5NTEsOSBAQCBzdGF0aWMgaW50IGFsbG9jX25vYV93YWl0
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJcmV0dXJuIDA7CiAKIGVycl91bnBp
bjoKLQlfX2k5MTVfdm1hX3VucGluKHZtYSk7CisJbXV0ZXhfbG9jaygmaTkxNS0+ZHJtLnN0cnVj
dF9tdXRleCk7CisJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJnZtYSwgMCk7CisJbXV0ZXhf
dW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAogZXJyX3VucmVmOgogCWk5MTVfZ2Vt
X29iamVjdF9wdXQoYm8pOwpAQCAtMTk0Nyw1MCArMTk2MSw3MyBAQCBzdGF0aWMgaW50IGFsbG9j
X25vYV93YWl0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJcmV0dXJuIHJldDsK
IH0KIAotc3RhdGljIHZvaWQgY29uZmlnX29hX3JlZ3Moc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2LAotCQkJICAgY29uc3Qgc3RydWN0IGk5MTVfb2FfcmVnICpyZWdzLAotCQkJICAg
dTMyIG5fcmVncykKK3N0YXRpYyBpbnQgZW1pdF9vYV9jb25maWcoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsCisJCQkgIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiB7Ci0J
dTMyIGk7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CisJc3RydWN0IGk5MTVfdm1hICp2bWE7
CisJdTMyICpjczsKKwlpbnQgZXJyOwogCi0JZm9yIChpID0gMDsgaSA8IG5fcmVnczsgaSsrKSB7
Ci0JCWNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqcmVnID0gcmVncyArIGk7CisJbG9ja2RlcF9h
c3NlcnRfaGVsZCgmc3RyZWFtLT5jb25maWdfbXV0ZXgpOworCisJdm1hID0gaTkxNV92bWFfaW5z
dGFuY2Uoc3RyZWFtLT5pbml0aWFsX29hX2NvbmZpZ19ibywKKwkJCQkmc3RyZWFtLT5lbmdpbmUt
Pmd0LT5nZ3R0LT52bSwgTlVMTCk7CisJaWYgKHVubGlrZWx5KElTX0VSUih2bWEpKSkKKwkJcmV0
dXJuIFBUUl9FUlIodm1hKTsKKworCWVyciA9IGk5MTVfdm1hX3Bpbih2bWEsIDAsIDAsIFBJTl9H
TE9CQUwpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX3ZtYV91bnBpbjsKIAotCQlJOTE1X1dSSVRF
KHJlZy0+YWRkciwgcmVnLT52YWx1ZSk7CisJcnEgPSBpOTE1X3JlcXVlc3RfY3JlYXRlKHN0cmVh
bS0+ZW5naW5lLT5rZXJuZWxfY29udGV4dCk7CisJaWYgKElTX0VSUihycSkpIHsKKwkJZXJyID0g
UFRSX0VSUihycSk7CisJCWdvdG8gZXJyX2FkZF9yZXF1ZXN0OwogCX0KLX0KIAotc3RhdGljIHZv
aWQgZGVsYXlfYWZ0ZXJfbXV4KHZvaWQpCi17Ci0JLyoKLQkgKiBJdCBhcHBhcmVudGx5IHRha2Vz
IGEgZmFpcmx5IGxvbmcgdGltZSBmb3IgYSBuZXcgTVVYCi0JICogY29uZmlndXJhdGlvbiB0byBi
ZSBiZSBhcHBsaWVkIGFmdGVyIHRoZXNlIHJlZ2lzdGVyIHdyaXRlcy4KLQkgKiBUaGlzIGRlbGF5
IGR1cmF0aW9uIHdhcyBkZXJpdmVkIGVtcGlyaWNhbGx5IGJhc2VkIG9uIHRoZQotCSAqIHJlbmRl
cl9iYXNpYyBjb25maWcgYnV0IGhvcGVmdWxseSBpdCBjb3ZlcnMgdGhlIG1heGltdW0KLQkgKiBj
b25maWd1cmF0aW9uIGxhdGVuY3kuCi0JICoKLQkgKiBBcyBhIGZhbGxiYWNrLCB0aGUgY2hlY2tz
IGluIF9hcHBlbmRfb2FfcmVwb3J0cygpIHRvIHNraXAKLQkgKiBpbnZhbGlkIE9BIHJlcG9ydHMg
ZG8gYWxzbyBzZWVtIHRvIHdvcmsgdG8gZGlzY2FyZCByZXBvcnRzCi0JICogZ2VuZXJhdGVkIGJl
Zm9yZSB0aGlzIGNvbmZpZyBoYXMgY29tcGxldGVkIC0gYWxiZWl0IG5vdAotCSAqIHNpbGVudGx5
LgotCSAqCi0JICogVW5mb3J0dW5hdGVseSB0aGlzIGlzIGVzc2VudGlhbGx5IGEgbWFnaWMgbnVt
YmVyLCBzaW5jZSB3ZQotCSAqIGRvbid0IGN1cnJlbnRseSBrbm93IG9mIGEgcmVsaWFibGUgbWVj
aGFuaXNtIGZvciBwcmVkaWN0aW5nCi0JICogaG93IGxvbmcgdGhlIE1VWCBjb25maWcgd2lsbCB0
YWtlIHRvIGFwcGx5IGFuZCBiZXNpZGVzCi0JICogc2VlaW5nIGludmFsaWQgcmVwb3J0cyB3ZSBk
b24ndCBrbm93IG9mIGEgcmVsaWFibGUgd2F5IHRvCi0JICogZXhwbGljaXRseSBjaGVjayB0aGF0
IHRoZSBNVVggY29uZmlnIGhhcyBsYW5kZWQuCi0JICoKLQkgKiBJdCdzIGV2ZW4gcG9zc2libGUg
d2UndmUgbWlzcyBjaGFyYWN0ZXJpemVkIHRoZSB1bmRlcmx5aW5nCi0JICogcHJvYmxlbSAtIGl0
IGp1c3Qgc2VlbXMgbGlrZSB0aGUgc2ltcGxlc3QgZXhwbGFuYXRpb24gd2h5Ci0JICogYSBkZWxh
eSBhdCB0aGlzIGxvY2F0aW9uIHdvdWxkIG1pdGlnYXRlIGFueSBpbnZhbGlkIHJlcG9ydHMuCi0J
ICovCi0JdXNsZWVwX3JhbmdlKDE1MDAwLCAyMDAwMCk7CisJZXJyID0gaTkxNV9hY3RpdmVfcmVx
dWVzdF9zZXQoJnN0cmVhbS0+YWN0aXZlX2NvbmZpZ19ycSwKKwkJCQkgICAgICBycSk7CisJaWYg
KGVycikKKwkJZ290byBlcnJfYWRkX3JlcXVlc3Q7CisKKwlpOTE1X3ZtYV9sb2NrKHZtYSk7CisJ
ZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X29iamVjdChycSwgdm1hLT5vYmosIDApOworCWlmICgh
ZXJyKQorCQllcnIgPSBpOTE1X3ZtYV9tb3ZlX3RvX2FjdGl2ZSh2bWEsIHJxLCAwKTsKKwlpOTE1
X3ZtYV91bmxvY2sodm1hKTsKKwlpZiAoZXJyKQorCQlnb3RvIGVycl9hZGRfcmVxdWVzdDsKKwor
CWNzID0gaW50ZWxfcmluZ19iZWdpbihycSwgSU5URUxfR0VOKGk5MTUpID49IDggPyA0IDogMik7
CisJaWYgKElTX0VSUihjcykpIHsKKwkJZXJyID0gUFRSX0VSUihjcyk7CisJCWdvdG8gZXJyX2Fk
ZF9yZXF1ZXN0OworCX0KKworCWlmIChJTlRFTF9HRU4oaTkxNSkgPiA4KSB7CisJCSpjcysrID0g
TUlfQkFUQ0hfQlVGRkVSX1NUQVJUX0dFTjg7CisJCSpjcysrID0gbG93ZXJfMzJfYml0cyh2bWEt
Pm5vZGUuc3RhcnQpOworCQkqY3MrKyA9IHVwcGVyXzMyX2JpdHModm1hLT5ub2RlLnN0YXJ0KTsK
KwkJKmNzKysgPSBNSV9OT09QOworCX0gZWxzZSB7CisJCSpjcysrID0gTUlfQkFUQ0hfQlVGRkVS
X1NUQVJUOworCQkqY3MrKyA9IHZtYS0+bm9kZS5zdGFydDsKKwl9CisKKwlpbnRlbF9yaW5nX2Fk
dmFuY2UocnEsIGNzKTsKKworZXJyX2FkZF9yZXF1ZXN0OgorCWk5MTVfcmVxdWVzdF9hZGQocnEp
OworZXJyX3ZtYV91bnBpbjoKKwlpOTE1X3ZtYV91bnBpbih2bWEpOworCisJcmV0dXJuIGVycjsK
IH0KIAogc3RhdGljIGludCBoc3dfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9z
dHJlYW0gKnN0cmVhbSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBz
dHJlYW0tPmRldl9wcml2OwotCWNvbnN0IHN0cnVjdCBpOTE1X29hX2NvbmZpZyAqb2FfY29uZmln
ID0gc3RyZWFtLT5vYV9jb25maWc7CiAKIAkvKgogCSAqIFBSTToKQEAgLTIwMDcsMTMgKzIwNDQs
NyBAQCBzdGF0aWMgaW50IGhzd19lbmFibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkxNV9wZXJmX3N0
cmVhbSAqc3RyZWFtKQogCUk5MTVfV1JJVEUoR0VONl9VQ0dDVEwxLCAoSTkxNV9SRUFEKEdFTjZf
VUNHQ1RMMSkgfAogCQkJCSAgR0VONl9DU1VOSVRfQ0xPQ0tfR0FURV9ESVNBQkxFKSk7CiAKLQlj
b25maWdfb2FfcmVncyhkZXZfcHJpdiwgb2FfY29uZmlnLT5tdXhfcmVncywgb2FfY29uZmlnLT5t
dXhfcmVnc19sZW4pOwotCWRlbGF5X2FmdGVyX211eCgpOwotCi0JY29uZmlnX29hX3JlZ3MoZGV2
X3ByaXYsIG9hX2NvbmZpZy0+Yl9jb3VudGVyX3JlZ3MsCi0JCSAgICAgICBvYV9jb25maWctPmJf
Y291bnRlcl9yZWdzX2xlbik7Ci0KLQlyZXR1cm4gMDsKKwlyZXR1cm4gZW1pdF9vYV9jb25maWco
ZGV2X3ByaXYsIHN0cmVhbSk7CiB9CiAKIHN0YXRpYyB2b2lkIGhzd19kaXNhYmxlX21ldHJpY19z
ZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSkKQEAgLTIzNzIsMTMgKzI0MDMsNyBA
QCBzdGF0aWMgaW50IGdlbjhfZW5hYmxlX21ldHJpY19zZXQoc3RydWN0IGk5MTVfcGVyZl9zdHJl
YW0gKnN0cmVhbSkKIAlpZiAocmV0KQogCQlyZXR1cm4gcmV0OwogCi0JY29uZmlnX29hX3JlZ3Mo
ZGV2X3ByaXYsIG9hX2NvbmZpZy0+bXV4X3JlZ3MsIG9hX2NvbmZpZy0+bXV4X3JlZ3NfbGVuKTsK
LQlkZWxheV9hZnRlcl9tdXgoKTsKLQotCWNvbmZpZ19vYV9yZWdzKGRldl9wcml2LCBvYV9jb25m
aWctPmJfY291bnRlcl9yZWdzLAotCQkgICAgICAgb2FfY29uZmlnLT5iX2NvdW50ZXJfcmVnc19s
ZW4pOwotCi0JcmV0dXJuIDA7CisJcmV0dXJuIGVtaXRfb2FfY29uZmlnKGRldl9wcml2LCBzdHJl
YW0pOwogfQogCiBzdGF0aWMgdm9pZCBnZW44X2Rpc2FibGVfbWV0cmljX3NldChzdHJ1Y3QgaTkx
NV9wZXJmX3N0cmVhbSAqc3RyZWFtKQpAQCAtMjU5Nyw2ICsyNjIyLDkgQEAgc3RhdGljIGludCBp
OTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAKIAlz
dHJlYW0tPmVuZ2luZSA9IHByb3BzLT5lbmdpbmU7CiAKKwlJTklUX0FDVElWRV9SRVFVRVNUKCZz
dHJlYW0tPmFjdGl2ZV9jb25maWdfcnEsCisJCQkgICAgJnN0cmVhbS0+Y29uZmlnX211dGV4KTsK
KwogCXN0cmVhbS0+c2FtcGxlX2ZsYWdzIHw9IFNBTVBMRV9PQV9SRVBPUlQ7CiAJc3RyZWFtLT5z
YW1wbGVfc2l6ZSArPSBmb3JtYXRfc2l6ZTsKIApAQCAtMjYyNSw4ICsyNjUzLDkgQEAgc3RhdGlj
IGludCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0s
CiAJCWdvdG8gZXJyX25vYV93YWl0X2FsbG9jOwogCX0KIAotCXJldCA9IGk5MTVfcGVyZl9nZXRf
b2FfY29uZmlnKGRldl9wcml2LCBwcm9wcy0+bWV0cmljc19zZXQsCi0JCQkJICAgICAgJnN0cmVh
bS0+b2FfY29uZmlnKTsKKwlyZXQgPSBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZ19hbmRfYm8oc3Ry
ZWFtLCBwcm9wcy0+bWV0cmljc19zZXQsCisJCQkJCSAgICAgJnN0cmVhbS0+b2FfY29uZmlnLAor
CQkJCQkgICAgICZzdHJlYW0tPmluaXRpYWxfb2FfY29uZmlnX2JvKTsKIAlpZiAocmV0KSB7CiAJ
CURSTV9ERUJVRygiSW52YWxpZCBPQSBjb25maWcgaWQ9JWlcbiIsIHByb3BzLT5tZXRyaWNzX3Nl
dCk7CiAJCWdvdG8gZXJyX2NvbmZpZzsKQEAgLTI2NTgsMTYgKzI2ODcsMzUgQEAgc3RhdGljIGlu
dCBpOTE1X29hX3N0cmVhbV9pbml0KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCiAJ
c3RyZWFtLT5vcHMgPSAmaTkxNV9vYV9zdHJlYW1fb3BzOwogCWRldl9wcml2LT5wZXJmLmV4Y2x1
c2l2ZV9zdHJlYW0gPSBzdHJlYW07CiAKKwltdXRleF9sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRl
eCk7CiAJcmV0ID0gZGV2X3ByaXYtPnBlcmYub3BzLmVuYWJsZV9tZXRyaWNfc2V0KHN0cmVhbSk7
CiAJaWYgKHJldCkgeworCQlpbnQgZXJyOworCiAJCURSTV9ERUJVRygiVW5hYmxlIHRvIGVuYWJs
ZSBtZXRyaWMgc2V0XG4iKTsKLQkJZ290byBlcnJfZW5hYmxlOworCQkvKgorCQkgKiBJZ25vcmUg
dGhlIHJldHVybiB2YWx1ZSBzaW5jZSB3ZSBhbHJlYWR5IGhhdmUgYW4gZXJyb3IgZnJvbQorCQkg
KiB0aGUgZW5hYmxlIHZmdW5jLgorCQkgKi8KKwkJZXJyID0gaTkxNV9hY3RpdmVfcmVxdWVzdF9y
ZXRpcmUoJnN0cmVhbS0+YWN0aXZlX2NvbmZpZ19ycSwgMCwKKwkJCQkJCSAmc3RyZWFtLT5jb25m
aWdfbXV0ZXgpOworCQlpZiAoZXJyKQorCQkJRFJNX0VSUk9SKCJXYWl0IG9uIE9BIGNvbmZpZ3Vy
YXRpb24gcmVxdWVzdCBmYWlsZWQuXG4iKTsKKwl9IGVsc2UgeworCQlyZXQgPSBpOTE1X2FjdGl2
ZV9yZXF1ZXN0X3JldGlyZSgmc3RyZWFtLT5hY3RpdmVfY29uZmlnX3JxLCAwLAorCQkJCQkJICZz
dHJlYW0tPmNvbmZpZ19tdXRleCk7CiAJfQogCi0JRFJNX0RFQlVHKCJvcGVuaW5nIHN0cmVhbSBv
YSBjb25maWcgdXVpZD0lc1xuIiwgc3RyZWFtLT5vYV9jb25maWctPnV1aWQpOwotCisJbXV0ZXhf
dW5sb2NrKCZzdHJlYW0tPmNvbmZpZ19tdXRleCk7CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+
ZHJtLnN0cnVjdF9tdXRleCk7CiAKKwlpOTE1X2dlbV9vYmplY3RfcHV0KHN0cmVhbS0+aW5pdGlh
bF9vYV9jb25maWdfYm8pOworCXN0cmVhbS0+aW5pdGlhbF9vYV9jb25maWdfYm8gPSBOVUxMOwor
CWlmIChyZXQpCisJCWdvdG8gZXJyX2VuYWJsZTsKKworCURSTV9ERUJVRygib3BlbmluZyBzdHJl
YW0gb2EgY29uZmlnIHV1aWQ9JXNcbiIsIHN0cmVhbS0+b2FfY29uZmlnLT51dWlkKTsKKwogCWhy
dGltZXJfaW5pdCgmc3RyZWFtLT5wb2xsX2NoZWNrX3RpbWVyLAogCQkgICAgIENMT0NLX01PTk9U
T05JQywgSFJUSU1FUl9NT0RFX1JFTCk7CiAJc3RyZWFtLT5wb2xsX2NoZWNrX3RpbWVyLmZ1bmN0
aW9uID0gb2FfcG9sbF9jaGVja190aW1lcl9jYjsKQEAgLTI2NzcsOCArMjcyNSwxMSBAQCBzdGF0
aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSwKIAlyZXR1cm4gMDsKIAogZXJyX2VuYWJsZToKLQlkZXZfcHJpdi0+cGVyZi5leGNsdXNpdmVf
c3RyZWFtID0gTlVMTDsKKwltdXRleF9sb2NrKCZkZXZfcHJpdi0+ZHJtLnN0cnVjdF9tdXRleCk7
CisJbXV0ZXhfbG9jaygmc3RyZWFtLT5jb25maWdfbXV0ZXgpOwogCWRldl9wcml2LT5wZXJmLm9w
cy5kaXNhYmxlX21ldHJpY19zZXQoc3RyZWFtKTsKKwltdXRleF91bmxvY2soJnN0cmVhbS0+Y29u
ZmlnX211dGV4KTsKKwlkZXZfcHJpdi0+cGVyZi5leGNsdXNpdmVfc3RyZWFtID0gTlVMTDsKIAlt
dXRleF91bmxvY2soJmRldl9wcml2LT5kcm0uc3RydWN0X211dGV4KTsKIAogZXJyX2xvY2s6CkBA
IC0yNjkwLDYgKzI3NDEsOSBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3RyZWFtX2luaXQoc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAogCWZyZWVfb2FfY29uZmlncyhzdHJlYW0pOwog
CisJaWYgKHN0cmVhbS0+aW5pdGlhbF9vYV9jb25maWdfYm8pCisJCWk5MTVfZ2VtX29iamVjdF9w
dXQoc3RyZWFtLT5pbml0aWFsX29hX2NvbmZpZ19ibyk7CisKIGVycl9jb25maWc6CiAJZnJlZV9u
b2Ffd2FpdChzdHJlYW0pOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3BlcmZfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZl90eXBlcy5oCmlu
ZGV4IDg0ODBlNDg5ZGNiOS4uMDM3NzMwZjBlYjAwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3BlcmZfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3BlcmZfdHlwZXMuaApAQCAtMTYsOSArMTYsMTEgQEAKICNpbmNsdWRlIDxsaW51eC91dWlkLmg+
CiAjaW5jbHVkZSA8bGludXgvd2FpdC5oPgogCisjaW5jbHVkZSAiaTkxNV9hY3RpdmVfdHlwZXMu
aCIKICNpbmNsdWRlICJpOTE1X3JlZy5oIgogI2luY2x1ZGUgImludGVsX3dha2VyZWYuaCIKIAor
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Q7CiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKIHN0
cnVjdCBmaWxlOwogc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQ7CkBAIC0xNzYsNyArMTc4LDggQEAg
c3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gewogCWNvbnN0IHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFt
X29wcyAqb3BzOwogCiAJLyoqCi0JICogQGFjdGl2ZV9jb25maWdfbXV0ZXg6IFByb3RlY3RzIGFj
Y2VzcyB0byBAb2FfY29uZmlnICYgQG9hX2NvbmZpZ19ib3MuCisJICogQGFjdGl2ZV9jb25maWdf
bXV0ZXg6IFByb3RlY3RzIGFjY2VzcyB0byBAYWN0aXZlX2NvbmZpZ19ycSwKKwkgKiBAb2FfY29u
ZmlnICYgQG9hX2NvbmZpZ19ib3MuCiAJICovCiAJc3RydWN0IG11dGV4IGNvbmZpZ19tdXRleDsK
IApAQCAtMTkxLDYgKzE5NCwxNiBAQCBzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSB7CiAJICovCiAJ
c3RydWN0IGxpc3RfaGVhZCBvYV9jb25maWdfYm9zOwogCisJLyoqCisJICogQGFjdGl2ZV9jb25m
aWdfcnE6IExhc3QgcmVxdWVzdCByZWNvbmZpZ3VyaW5nIHRoZSBIVy4KKwkgKi8KKwlzdHJ1Y3Qg
aTkxNV9hY3RpdmVfcmVxdWVzdCBhY3RpdmVfY29uZmlnX3JxOworCisJLyoqCisJICogQGluaXRp
YWxfb2FfY29uZmlnX2JvOiBGaXJzdCBPQSBjb25maWd1cmF0aW9uIEJPIHRvIGJlIHJ1bi4KKwkg
Ki8KKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqaW5pdGlhbF9vYV9jb25maWdfYm87CisK
IAkvKioKIAkgKiBUaGUgT0EgY29udGV4dCBzcGVjaWZpYyBpbmZvcm1hdGlvbi4KIAkgKi8KLS0g
CjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
SW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

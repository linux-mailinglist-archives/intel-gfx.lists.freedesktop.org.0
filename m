Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BFCD0B0C261
	for <lists+intel-gfx@lfdr.de>; Mon, 21 Jul 2025 13:14:30 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id E368810E4F7;
	Mon, 21 Jul 2025 11:14:27 +0000 (UTC)
Authentication-Results: gabe.freedesktop.org;
	dkim=pass (2048-bit key; unprotected) header.d=intel.com header.i=@intel.com header.b="G7dB432V";
	dkim-atps=neutral
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.18])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A4D4910E13D;
 Mon, 21 Jul 2025 11:14:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1753096466; x=1784632466;
 h=from:to:cc:subject:date:message-id:mime-version:
 content-transfer-encoding;
 bh=8oluwTnRa5xFKMID9gODr3+TfoYNNuTqDIx5Iwwoo/E=;
 b=G7dB432VXpibBUzfDslXdcPdFgb83m1gR/7x7TaPQGXMFl24QH9G6hzb
 /og9WoZpKmANG02AM03F576FUbvbPYZw2/eZC941rXMjRHaKAU03Ra6z0
 4Q+g9RWQmzxH05/MsVBSRroV7lhGE/MOkHCl8dpOZLMh7a9M1s6MM4H4T
 dE2h5H88CBt20HfKLGjgvunwHEXMjOT2HD95UykIZ/Y5CvF3wW23ZQcfr
 TtP8/oJgAbasqA4oGPClsWK7Qr5n6F3Tvwr0Xp42xGp4fhy1I1QV4715T
 keaPUeJ+D4cj+ej6UL+BiWcBGI57iL7ng7gEUET81OEe/qdiTGI3LfFGm g==;
X-CSE-ConnectionGUID: S2IqWJ0pR8SRM4kmRS2RwQ==
X-CSE-MsgGUID: tVZfawvtRy+aeuVuKWrIuw==
X-IronPort-AV: E=McAfee;i="6800,10657,11498"; a="55427262"
X-IronPort-AV: E=Sophos;i="6.16,328,1744095600"; d="scan'208";a="55427262"
Received: from fmviesa009.fm.intel.com ([10.60.135.149])
 by orvoesa110.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 21 Jul 2025 04:14:25 -0700
X-CSE-ConnectionGUID: 2zopefHHTE26tADowjShGw==
X-CSE-MsgGUID: I+hBVCcIQa6xv+Z++IUtyA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.16,328,1744095600"; d="scan'208";a="159146158"
Received: from klitkey1-mobl1.ger.corp.intel.com (HELO jhogande-mobl1..)
 ([10.245.244.64])
 by fmviesa009-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 21 Jul 2025 04:14:23 -0700
From: =?UTF-8?q?Jouni=20H=C3=B6gander?= <jouni.hogander@intel.com>
To: intel-gfx@lists.freedesktop.org,
	intel-xe@lists.freedesktop.org
Cc: =?UTF-8?q?Jouni=20H=C3=B6gander?= <jouni.hogander@intel.com>
Subject: [PATCH v6 0/7] Use trans push mechanism to generate frame change event
Date: Mon, 21 Jul 2025 14:13:59 +0300
Message-ID: <20250721111406.1468064-1-jouni.hogander@intel.com>
X-Mailer: git-send-email 2.43.0
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Organization: Intel Finland Oy - BIC 0357606-4 - Westendinkatu 7, 02160 Espoo
Content-Transfer-Encoding: 8bit
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Currently we are using "automatic" frame change event generation. The
event is generated by any access to plane or pipe registers.

We have option to use "PSR PR Frame Change Enable" bit in TRANS_PUSH
register to enable frame change event generation only when doing trans
push. When this bit is set "automatic" frame change event generation
doesn't work anymore. Benfit from this is more controled updates send
by PSR HW.

This patch set is taking trans push mechanism into use.

v6: use AND instead of OR in intel_psr_use_trans_push
v5: add missing patch
v4:
  - add intel_psr_use_trans_push to query if TRANS_PUSH is used
  - set DSB_SKIP_WAITS_EN chicken bit when TRANS_PUSH is used
  - Wait for vblank in case of PSR is using trans push
v3:
  - use rmw when enabling disabling transh push for PSR or VRR
  - rely on crtc_state->has_psr/has_vrr to keep trans push enabled
  - modify frontbuffer flush/invalidate to use disable/enable also for
    SU/SF on recent platforms.
  - send push before waiting for vblank
v2: implement intel_vrr_trans_push_enabled_set_clear and use that
    instead of rmw

Jouni HÃ¶gander (7):
  drm/i915/psr: Do not trigger Frame Change events from frontbuffer
    flush
  drm/i915/psr: Add TRANS_PUSH register bit definition for PSR
  drm/i915/psr: Add intel_psr_use_trans_push to query if TRANS_PUSH is
    used
  drm/i915/vrr: Prepare to Use TRANS_PUSH mechanism for PSR frame change
  drm/i915/dsb: Set DSB_SKIP_WAITS_EN chicken bit for LunarLake and
    onwards
  drm/i915/display: Wait for vblank in case of PSR is using trans push
  drm/i915/psr: Use TRANS_PUSH to trigger frame change event

 drivers/gpu/drm/i915/display/intel_crtc.c     |  4 +-
 drivers/gpu/drm/i915/display/intel_display.c  | 20 +++++++++-
 drivers/gpu/drm/i915/display/intel_dsb.c      | 15 +++++--
 drivers/gpu/drm/i915/display/intel_psr.c      | 32 +++++++++++----
 drivers/gpu/drm/i915/display/intel_psr.h      |  1 +
 drivers/gpu/drm/i915/display/intel_vrr.c      | 39 +++++++++++++------
 drivers/gpu/drm/i915/display/intel_vrr.h      |  1 +
 drivers/gpu/drm/i915/display/intel_vrr_regs.h |  1 +
 8 files changed, 88 insertions(+), 25 deletions(-)

-- 
2.43.0


Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CFD1385BC2
	for <lists+intel-gfx@lfdr.de>; Thu,  8 Aug 2019 09:43:56 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 432476E793;
	Thu,  8 Aug 2019 07:43:55 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 031AA6E794
 for <intel-gfx@lists.freedesktop.org>; Thu,  8 Aug 2019 07:43:51 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17926057-1500050 
 for multiple; Thu, 08 Aug 2019 08:42:11 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  8 Aug 2019 08:42:02 +0100
Message-Id: <20190808074207.18274-14-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190808074207.18274-1-chris@chris-wilson.co.uk>
References: <20190808074207.18274-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 14/19] drm/i915: Protect request retirement with
 timeline->mutex
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yZ28gdGhlIHN0cnVjdF9tdXRleCByZXF1aXJlbWVudCBmb3IgcmVxdWVzdCByZXRpcmVtZW50
IGFzIHdlIGhhdmUKYmVlbiB0cmFuc2l0aW9uaW5nIG92ZXIgdG8gb25seSB1c2luZyB0aGUgdGlt
ZWxpbmUtPm11dGV4IGZvcgpjb250cm9sbGluZyB0aGUgbGlmZXRpbWUgb2YgYSByZXF1ZXN0IG9u
IHRoYXQgdGltZWxpbmUuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMgICAgfCAxODMgKysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmggICAgICAgfCAgMTggKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfdHlwZXMuaCAgfCAgIDMgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3QuYyAgICAgICAgICAgIHwgICAyIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3R5cGVzLmggICAgICB8ICAgMiAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9s
cmMuYyAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmlu
Z2J1ZmZlci5jICAgIHwgIDE5ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2lu
ZS5jICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfY29u
dGV4dC5jICAgIHwgICA5ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYyAg
ICAgICAgICAgfCAxNTEgKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3JlcXVlc3QuaCAgICAgICAgICAgfCAgIDMgLQogMTIgZmlsZXMgY2hhbmdlZCwgMjA4IGluc2Vy
dGlvbnMoKyksIDE4NSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwppbmRleCAwMzk3ODg2NmY2MzIuLmM1YjdiYjQ1NjQ0MCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCkBA
IC03MzUsNjMgKzczNSw2IEBAIHN0YXRpYyBpbnQgZWJfc2VsZWN0X2NvbnRleHQoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpfX2ViX3dhaXRfZm9yX3Jpbmcoc3RydWN0IGludGVsX3JpbmcgKnJpbmcpCi17Ci0J
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0KLQkvKgotCSAqIENvbXBsZXRlbHkgdW5zY2llbnRp
ZmljIGZpbmdlci1pbi10aGUtYWlyIGVzdGltYXRlcyBmb3Igc3VpdGFibGUKLQkgKiBtYXhpbXVt
IHVzZXIgcmVxdWVzdCBzaXplICh0byBhdm9pZCBibG9ja2luZykgYW5kIHRoZW4gYmFja29mZi4K
LQkgKi8KLQlpZiAoaW50ZWxfcmluZ191cGRhdGVfc3BhY2UocmluZykgPj0gUEFHRV9TSVpFKQot
CQlyZXR1cm4gTlVMTDsKLQotCS8qCi0JICogRmluZCBhIHJlcXVlc3QgdGhhdCBhZnRlciB3YWl0
aW5nIHVwb24sIHRoZXJlIHdpbGwgYmUgYXQgbGVhc3QgaGFsZgotCSAqIHRoZSByaW5nIGF2YWls
YWJsZS4gVGhlIGh5c3RlcmVzaXMgYWxsb3dzIHVzIHRvIGNvbXBldGUgZm9yIHRoZQotCSAqIHNo
YXJlZCByaW5nIGFuZCBzaG91bGQgbWVhbiB0aGF0IHdlIHNsZWVwIGxlc3Mgb2Z0ZW4gcHJpb3Ig
dG8KLQkgKiBjbGFpbWluZyBvdXIgcmVzb3VyY2VzLCBidXQgbm90IHNvIGxvbmcgdGhhdCB0aGUg
cmluZyBjb21wbGV0ZWx5Ci0JICogZHJhaW5zIGJlZm9yZSB3ZSBjYW4gc3VibWl0IG91ciBuZXh0
IHJlcXVlc3QuCi0JICovCi0JbGlzdF9mb3JfZWFjaF9lbnRyeShycSwgJnJpbmctPnJlcXVlc3Rf
bGlzdCwgcmluZ19saW5rKSB7Ci0JCWlmIChfX2ludGVsX3Jpbmdfc3BhY2UocnEtPnBvc3RmaXgs
Ci0JCQkJICAgICAgIHJpbmctPmVtaXQsIHJpbmctPnNpemUpID4gcmluZy0+c2l6ZSAvIDIpCi0J
CQlicmVhazsKLQl9Ci0JaWYgKCZycS0+cmluZ19saW5rID09ICZyaW5nLT5yZXF1ZXN0X2xpc3Qp
Ci0JCXJldHVybiBOVUxMOyAvKiB3ZWlyZCwgd2Ugd2lsbCBjaGVjayBhZ2FpbiBsYXRlciBmb3Ig
cmVhbCAqLwotCi0JcmV0dXJuIGk5MTVfcmVxdWVzdF9nZXQocnEpOwotfQotCi1zdGF0aWMgaW50
IGViX3dhaXRfZm9yX3JpbmcoY29uc3Qgc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCi17Ci0J
c3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0JaW50IHJldCA9IDA7Ci0KLQkvKgotCSAqIEFwcGx5
IGEgbGlnaHQgYW1vdW50IG9mIGJhY2twcmVzc3VyZSB0byBwcmV2ZW50IGV4Y2Vzc2l2ZSBob2dz
Ci0JICogZnJvbSBibG9ja2luZyB3YWl0aW5nIGZvciBzcGFjZSB3aGlsc3QgaG9sZGluZyBzdHJ1
Y3RfbXV0ZXggYW5kCi0JICoga2VlcGluZyBhbGwgb2YgdGhlaXIgcmVzb3VyY2VzIHBpbm5lZC4K
LQkgKi8KLQotCXJxID0gX19lYl93YWl0X2Zvcl9yaW5nKGViLT5jb250ZXh0LT5yaW5nKTsKLQlp
ZiAocnEpIHsKLQkJbXV0ZXhfdW5sb2NrKCZlYi0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7Ci0K
LQkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJxLAotCQkJCSAgICAgIEk5MTVfV0FJVF9JTlRFUlJV
UFRJQkxFLAotCQkJCSAgICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKSA8IDApCi0JCQlyZXQgPSAt
RUlOVFI7Ci0KLQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7Ci0KLQkJbXV0ZXhfbG9jaygmZWItPmk5
MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwotCX0KLQotCXJldHVybiByZXQ7Ci19Ci0KIHN0YXRpYyBp
bnQgZWJfbG9va3VwX3ZtYXMoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIpCiB7CiAJc3RydWN0
IHJhZGl4X3RyZWVfcm9vdCAqaGFuZGxlc192bWEgPSAmZWItPmdlbV9jb250ZXh0LT5oYW5kbGVz
X3ZtYTsKQEAgLTIxMjgsMTAgKzIwNzEsNzUgQEAgc3RhdGljIGNvbnN0IGVudW0gaW50ZWxfZW5n
aW5lX2lkIHVzZXJfcmluZ19tYXBbXSA9IHsKIAlbSTkxNV9FWEVDX1ZFQk9YXQk9IFZFQ1MwCiB9
OwogCi1zdGF0aWMgaW50IGViX3Bpbl9jb250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
LCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAq
ZWJfdGhyb3R0bGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCXN0cnVjdCBpbnRlbF9y
aW5nICpyaW5nID0gY2UtPnJpbmc7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IGNlLT50
aW1lbGluZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKworCS8qCisJICogQ29tcGxldGVs
eSB1bnNjaWVudGlmaWMgZmluZ2VyLWluLXRoZS1haXIgZXN0aW1hdGVzIGZvciBzdWl0YWJsZQor
CSAqIG1heGltdW0gdXNlciByZXF1ZXN0IHNpemUgKHRvIGF2b2lkIGJsb2NraW5nKSBhbmQgdGhl
biBiYWNrb2ZmLgorCSAqLworCWlmIChpbnRlbF9yaW5nX3VwZGF0ZV9zcGFjZShyaW5nKSA+PSBQ
QUdFX1NJWkUpCisJCXJldHVybiBOVUxMOworCisJLyoKKwkgKiBGaW5kIGEgcmVxdWVzdCB0aGF0
IGFmdGVyIHdhaXRpbmcgdXBvbiwgdGhlcmUgd2lsbCBiZSBhdCBsZWFzdCBoYWxmCisJICogdGhl
IHJpbmcgYXZhaWxhYmxlLiBUaGUgaHlzdGVyZXNpcyBhbGxvd3MgdXMgdG8gY29tcGV0ZSBmb3Ig
dGhlCisJICogc2hhcmVkIHJpbmcgYW5kIHNob3VsZCBtZWFuIHRoYXQgd2Ugc2xlZXAgbGVzcyBv
ZnRlbiBwcmlvciB0bworCSAqIGNsYWltaW5nIG91ciByZXNvdXJjZXMsIGJ1dCBub3Qgc28gbG9u
ZyB0aGF0IHRoZSByaW5nIGNvbXBsZXRlbHkKKwkgKiBkcmFpbnMgYmVmb3JlIHdlIGNhbiBzdWJt
aXQgb3VyIG5leHQgcmVxdWVzdC4KKwkgKi8KKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHJxLCAmdGwt
PnJlcXVlc3RzLCBsaW5rKSB7CisJCWlmIChycS0+cmluZyAhPSByaW5nKQorCQkJY29udGludWU7
CisKKwkJaWYgKF9faW50ZWxfcmluZ19zcGFjZShycS0+cG9zdGZpeCwKKwkJCQkgICAgICAgcmlu
Zy0+ZW1pdCwgcmluZy0+c2l6ZSkgPiByaW5nLT5zaXplIC8gMikKKwkJCWJyZWFrOworCX0KKwlp
ZiAoJnJxLT5saW5rID09ICZ0bC0+cmVxdWVzdHMpCisJCXJldHVybiBOVUxMOyAvKiB3ZWlyZCwg
d2Ugd2lsbCBjaGVjayBhZ2FpbiBsYXRlciBmb3IgcmVhbCAqLworCisJcmV0dXJuIGk5MTVfcmVx
dWVzdF9nZXQocnEpOworfQorCitzdGF0aWMgaW50CitfX2ViX3Bpbl9jb250ZXh0KHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJaW50IGVy
cjsKIAorCWlmIChsaWtlbHkoYXRvbWljX2luY19ub3RfemVybygmY2UtPnBpbl9jb3VudCkpKQor
CQlyZXR1cm4gMDsKKworCWVyciA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmZWItPmk5MTUt
PmRybS5zdHJ1Y3RfbXV0ZXgpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwllcnIgPSBf
X2ludGVsX2NvbnRleHRfZG9fcGluKGNlKTsKKwltdXRleF91bmxvY2soJmViLT5pOTE1LT5kcm0u
c3RydWN0X211dGV4KTsKKworCXJldHVybiBlcnI7Cit9CisKK3N0YXRpYyB2b2lkCitfX2ViX3Vu
cGluX2NvbnRleHQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250
ZXh0ICpjZSkKK3sKKwlpZiAobGlrZWx5KGF0b21pY19hZGRfdW5sZXNzKCZjZS0+cGluX2NvdW50
LCAtMSwgMSkpKQorCQlyZXR1cm47CisKKwltdXRleF9sb2NrKCZlYi0+aTkxNS0+ZHJtLnN0cnVj
dF9tdXRleCk7CisJaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJbXV0ZXhfdW5sb2NrKCZlYi0+
aTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7Cit9CisKK3N0YXRpYyBpbnQgX19lYl9waW5fZW5naW5l
KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7
CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bDsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsK
KwlpbnQgZXJyOworCiAJLyoKIAkgKiBBQkk6IEJlZm9yZSB1c2Vyc3BhY2UgYWNjZXNzZXMgdGhl
IEdQVSAoZS5nLiBleGVjYnVmZmVyKSwgcmVwb3J0CiAJICogRUlPIGlmIHRoZSBHUFUgaXMgYWxy
ZWFkeSB3ZWRnZWQuCkBAIC0yMTQ1LDcgKzIxNTMsNyBAQCBzdGF0aWMgaW50IGViX3Bpbl9jb250
ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2Up
CiAJICogR0dUVCBzcGFjZSwgc28gZG8gdGhpcyBmaXJzdCBiZWZvcmUgd2UgcmVzZXJ2ZSBhIHNl
cW5vIGZvcgogCSAqIG91cnNlbHZlcy4KIAkgKi8KLQllcnIgPSBpbnRlbF9jb250ZXh0X3Bpbihj
ZSk7CisJZXJyID0gX19lYl9waW5fY29udGV4dChlYiwgY2UpOwogCWlmIChlcnIpCiAJCXJldHVy
biBlcnI7CiAKQEAgLTIxNTcsMjMgKzIxNjUsNDMgQEAgc3RhdGljIGludCBlYl9waW5fY29udGV4
dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
CSAqIHVudGlsIHRoZSB0aW1lbGluZSBpcyBpZGxlLCB3aGljaCBpbiB0dXJuIHJlbGVhc2VzIHRo
ZSB3YWtlcmVmCiAJICogdGFrZW4gb24gdGhlIGVuZ2luZSwgYW5kIHRoZSBwYXJlbnQgZGV2aWNl
LgogCSAqLwotCWVyciA9IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7Ci0JaWYgKGVy
cikKKwl0bCA9IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7CisJaWYgKElTX0VSUih0
bCkpIHsKKwkJZXJyID0gUFRSX0VSUih0bCk7CiAJCWdvdG8gZXJyX3VucGluOworCX0KIAogCWlu
dGVsX2NvbnRleHRfZW50ZXIoY2UpOwotCWludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKGNl
KTsKKwlycSA9IGViX3Rocm90dGxlKGNlKTsKKworCWludGVsX2NvbnRleHRfdGltZWxpbmVfdW5s
b2NrKHRsKTsKKworCWlmIChycSkgeworCQlpZiAoaTkxNV9yZXF1ZXN0X3dhaXQocnEsCisJCQkJ
ICAgICAgSTkxNV9XQUlUX0lOVEVSUlVQVElCTEUsCisJCQkJICAgICAgTUFYX1NDSEVEVUxFX1RJ
TUVPVVQpIDwgMCkgeworCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisJCQllcnIgPSAtRUlOVFI7
CisJCQlnb3RvIGVycl9leGl0OworCQl9CisKKwkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CisJfQog
CiAJZWItPmVuZ2luZSA9IGNlLT5lbmdpbmU7CiAJZWItPmNvbnRleHQgPSBjZTsKIAlyZXR1cm4g
MDsKIAorZXJyX2V4aXQ6CisJbXV0ZXhfbG9jaygmdGwtPm11dGV4KTsKKwlpbnRlbF9jb250ZXh0
X2V4aXQoY2UpOworCWludGVsX2NvbnRleHRfdGltZWxpbmVfdW5sb2NrKHRsKTsKIGVycl91bnBp
bjoKLQlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwlfX2ViX3VucGluX2NvbnRleHQoZWIsIGNl
KTsKIAlyZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgdm9pZCBlYl91bnBpbl9jb250ZXh0KHN0cnVj
dCBpOTE1X2V4ZWNidWZmZXIgKmViKQorc3RhdGljIHZvaWQgZWJfdW5waW5fZW5naW5lKHN0cnVj
dCBpOTE1X2V4ZWNidWZmZXIgKmViKQogewogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IGVi
LT5jb250ZXh0OwogCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSBjZS0+dGltZWxpbmU7CkBA
IC0yMTgyLDcgKzIyMTAsNyBAQCBzdGF0aWMgdm9pZCBlYl91bnBpbl9jb250ZXh0KHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViKQogCWludGVsX2NvbnRleHRfZXhpdChjZSk7CiAJbXV0ZXhfdW5s
b2NrKCZ0bC0+bXV0ZXgpOwogCi0JaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJX19lYl91bnBp
bl9jb250ZXh0KGViLCBjZSk7CiB9CiAKIHN0YXRpYyB1bnNpZ25lZCBpbnQKQEAgLTIyMjcsOSAr
MjI1NSw5IEBAIGViX3NlbGVjdF9sZWdhY3lfcmluZyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
YiwKIH0KIAogc3RhdGljIGludAotZWJfc2VsZWN0X2VuZ2luZShzdHJ1Y3QgaTkxNV9leGVjYnVm
ZmVyICplYiwKLQkJIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKLQkJIHN0cnVjdCBkcm1faTkxNV9n
ZW1fZXhlY2J1ZmZlcjIgKmFyZ3MpCitlYl9waW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZm
ZXIgKmViLAorCSAgICAgIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKKwkgICAgICBzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX2V4ZWNidWZmZXIyICphcmdzKQogewogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZTsKIAl1bnNpZ25lZCBpbnQgaWR4OwpAQCAtMjI0NCw3ICsyMjcyLDcgQEAgZWJfc2VsZWN0X2Vu
Z2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwKIAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0
dXJuIFBUUl9FUlIoY2UpOwogCi0JZXJyID0gZWJfcGluX2NvbnRleHQoZWIsIGNlKTsKKwllcnIg
PSBfX2ViX3Bpbl9lbmdpbmUoZWIsIGNlKTsKIAlpbnRlbF9jb250ZXh0X3B1dChjZSk7CiAKIAly
ZXR1cm4gZXJyOwpAQCAtMjQ2MiwxNiArMjQ5MCwxMiBAQCBpOTE1X2dlbV9kb19leGVjYnVmZmVy
KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaWYgKHVubGlrZWx5KGVycikpCiAJCWdvdG8gZXJy
X2Rlc3Ryb3k7CiAKLQllcnIgPSBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShkZXYpOwot
CWlmIChlcnIpCi0JCWdvdG8gZXJyX2NvbnRleHQ7Ci0KLQllcnIgPSBlYl9zZWxlY3RfZW5naW5l
KCZlYiwgZmlsZSwgYXJncyk7CisJZXJyID0gZWJfcGluX2VuZ2luZSgmZWIsIGZpbGUsIGFyZ3Mp
OwogCWlmICh1bmxpa2VseShlcnIpKQotCQlnb3RvIGVycl91bmxvY2s7CisJCWdvdG8gZXJyX2Nv
bnRleHQ7CiAKLQllcnIgPSBlYl93YWl0X2Zvcl9yaW5nKCZlYik7IC8qIG1heSB0ZW1wb3Jhcmls
eSBkcm9wIHN0cnVjdF9tdXRleCAqLwotCWlmICh1bmxpa2VseShlcnIpKQorCWVyciA9IGk5MTVf
bXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKGRldik7CisJaWYgKGVycikKIAkJZ290byBlcnJfZW5n
aW5lOwogCiAJZXJyID0gZWJfcmVsb2NhdGUoJmViKTsKQEAgLTI2MjksMTAgKzI2NTMsOSBAQCBp
OTE1X2dlbV9kb19leGVjYnVmZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiBlcnJfdm1hOgog
CWlmIChlYi5leGVjKQogCQllYl9yZWxlYXNlX3ZtYXMoJmViKTsKLWVycl9lbmdpbmU6Ci0JZWJf
dW5waW5fY29udGV4dCgmZWIpOwotZXJyX3VubG9jazoKIAltdXRleF91bmxvY2soJmRldi0+c3Ry
dWN0X211dGV4KTsKK2Vycl9lbmdpbmU6CisJZWJfdW5waW5fZW5naW5lKCZlYik7CiBlcnJfY29u
dGV4dDoKIAlpOTE1X2dlbV9jb250ZXh0X3B1dChlYi5nZW1fY29udGV4dCk7CiBlcnJfZGVzdHJv
eToKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAppbmRleCA5ZmE4YjU4OGYx
OGUuLjA1M2ExMzA3ZWNiNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHQu
aApAQCAtMTIsNiArMTIsNyBAQAogI2luY2x1ZGUgImk5MTVfYWN0aXZlLmgiCiAjaW5jbHVkZSAi
aW50ZWxfY29udGV4dF90eXBlcy5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZV90eXBlcy5oIgor
I2luY2x1ZGUgImludGVsX3RpbWVsaW5lX3R5cGVzLmgiCiAKIHZvaWQgaW50ZWxfY29udGV4dF9p
bml0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKIAkJCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0
ICpjdHgsCkBAIC0xMTgsMTcgKzExOSwyNCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaW50ZWxfY29u
dGV4dF9wdXQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCWtyZWZfcHV0KCZjZS0+cmVmLCBj
ZS0+b3BzLT5kZXN0cm95KTsKIH0KIAotc3RhdGljIGlubGluZSBpbnQgX19tdXN0X2NoZWNrCitz
dGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF90aW1lbGluZSAqX19tdXN0X2NoZWNrCiBpbnRlbF9j
b250ZXh0X3RpbWVsaW5lX2xvY2soc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogCV9fYWNxdWly
ZXMoJmNlLT50aW1lbGluZS0+bXV0ZXgpCiB7Ci0JcmV0dXJuIG11dGV4X2xvY2tfaW50ZXJydXB0
aWJsZSgmY2UtPnRpbWVsaW5lLT5tdXRleCk7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9
IGNlLT50aW1lbGluZTsKKwlpbnQgZXJyOworCisJZXJyID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRp
YmxlKCZ0bC0+bXV0ZXgpOworCWlmIChlcnIpCisJCXJldHVybiBFUlJfUFRSKGVycik7CisKKwly
ZXR1cm4gdGw7CiB9CiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9jb250ZXh0X3RpbWVsaW5l
X3VubG9jayhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCi0JX19yZWxlYXNlcygmY2UtPnRpbWVs
aW5lLT5tdXRleCkKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3Vu
bG9jayhzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsKQorCV9fcmVsZWFzZXMoJnRsLT5tdXRleCkK
IHsKLQltdXRleF91bmxvY2soJmNlLT50aW1lbGluZS0+bXV0ZXgpOworCW11dGV4X3VubG9jaygm
dGwtPm11dGV4KTsKIH0KIAogaW50IGludGVsX2NvbnRleHRfcHJlcGFyZV9yZW1vdGVfcmVxdWVz
dChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9jcy5jCmluZGV4IGQ0NmJjYzMzZTg0Yy4uODhhZGUzNjg3NzU2IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpAQCAtNjc5LDcgKzY3OSw2IEBAIHN0
YXRpYyBpbnQgbWVhc3VyZV9icmVhZGNydW1iX2R3KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVu
Z2luZSkKIAkJCQllbmdpbmUtPnN0YXR1c19wYWdlLnZtYSkpCiAJCWdvdG8gb3V0X2ZyYW1lOwog
Ci0JSU5JVF9MSVNUX0hFQUQoJmZyYW1lLT5yaW5nLnJlcXVlc3RfbGlzdCk7CiAJZnJhbWUtPnJp
bmcudmFkZHIgPSBmcmFtZS0+Y3M7CiAJZnJhbWUtPnJpbmcuc2l6ZSA9IHNpemVvZihmcmFtZS0+
Y3MpOwogCWZyYW1lLT5yaW5nLmVmZmVjdGl2ZV9zaXplID0gZnJhbWUtPnJpbmcuc2l6ZTsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggZWJhMzEx
MTAzOGE5Li5mZjVlM2I4Y2VmN2MgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV90eXBlcy5oCkBAIC02OSw5ICs2OSw2IEBAIHN0cnVjdCBpbnRlbF9yaW5nIHsKIAlz
dHJ1Y3QgaTkxNV92bWEgKnZtYTsKIAl2b2lkICp2YWRkcjsKIAotCXN0cnVjdCBsaXN0X2hlYWQg
cmVxdWVzdF9saXN0OwotCXN0cnVjdCBsaXN0X2hlYWQgYWN0aXZlX2xpbms7Ci0KIAkvKgogCSAq
IEFzIHdlIGhhdmUgdHdvIHR5cGVzIG9mIHJpbmdzLCBvbmUgZ2xvYmFsIHRvIHRoZSBlbmdpbmUg
dXNlZAogCSAqIGJ5IHJpbmdidWZmZXIgc3VibWlzc2lvbiBhbmQgdGhvc2UgdGhhdCBhcmUgZXhj
bHVzaXZlIHRvIGEKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndC5jCmluZGV4IDc1ZDhjNWVlNmVj
Yi4uNDY5MTE1YzBhMTk2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKQEAgLTE0LDkg
KzE0LDcgQEAgdm9pZCBpbnRlbF9ndF9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndCAqZ3QsIHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCWd0LT5pOTE1ID0gaTkxNTsKIAlndC0+dW5j
b3JlID0gJmk5MTUtPnVuY29yZTsKIAotCUlOSVRfTElTVF9IRUFEKCZndC0+YWN0aXZlX3Jpbmdz
KTsKIAlJTklUX0xJU1RfSEVBRCgmZ3QtPmNsb3NlZF92bWEpOwotCiAJc3Bpbl9sb2NrX2luaXQo
Jmd0LT5jbG9zZWRfbG9jayk7CiAKIAlpbnRlbF9ndF9pbml0X2hhbmdjaGVjayhndCk7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfdHlwZXMuaAppbmRleCBkYTdiN2U1ZjhmNjguLjdk
YjY2MWJmNzVmYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3Rf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oCkBA
IC00OCw4ICs0OCw2IEBAIHN0cnVjdCBpbnRlbF9ndCB7CiAJCXN0cnVjdCBsaXN0X2hlYWQgaHdz
cF9mcmVlX2xpc3Q7CiAJfSB0aW1lbGluZXM7CiAKLQlzdHJ1Y3QgbGlzdF9oZWFkIGFjdGl2ZV9y
aW5nczsKLQogCXN0cnVjdCBpbnRlbF93YWtlcmVmIHdha2VyZWY7CiAJYXRvbWljX3QgdXNlcl93
YWtlcmVmOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCmluZGV4IDRkZDAwNjYxZjg3
ZC4uNTY5NGZjYmRjOTIwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMTU4
Miw2ICsxNTgyLDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2NvbnRleHRfdW5waW4oc3RydWN0
IGludGVsX2NvbnRleHQgKmNlKQogewogCWk5MTVfZ2VtX2NvbnRleHRfdW5waW5faHdfaWQoY2Ut
PmdlbV9jb250ZXh0KTsKIAlpOTE1X2dlbV9vYmplY3RfdW5waW5fbWFwKGNlLT5zdGF0ZS0+b2Jq
KTsKKwlpbnRlbF9yaW5nX3Jlc2V0KGNlLT5yaW5nLCBjZS0+cmluZy0+dGFpbCk7CiB9CiAKIHN0
YXRpYyB2b2lkCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5n
YnVmZmVyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKaW5k
ZXggZTRmYzQwYzNjNGQ5Li42YWNmNDQ3ZDdiNzcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9yaW5nYnVmZmVyLmMKQEAgLTEyNDgsNyArMTI0OCw3IEBAIHZvaWQgaW50ZWxfcmlu
Z191bnBpbihzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKIAkJcmV0dXJuOwogCiAJLyogRGlzY2Fy
ZCBhbnkgdW51c2VkIGJ5dGVzIGJleW9uZCB0aGF0IHN1Ym1pdHRlZCB0byBody4gKi8KLQlpbnRl
bF9yaW5nX3Jlc2V0KHJpbmcsIHJpbmctPnRhaWwpOworCWludGVsX3JpbmdfcmVzZXQocmluZywg
cmluZy0+ZW1pdCk7CiAKIAlpOTE1X3ZtYV91bnNldF9nZ3R0X3dyaXRlKHZtYSk7CiAJaWYgKGk5
MTVfdm1hX2lzX21hcF9hbmRfZmVuY2VhYmxlKHZtYSkpCkBAIC0xMzA5LDcgKzEzMDksNiBAQCBp
bnRlbF9lbmdpbmVfY3JlYXRlX3Jpbmcoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBp
bnQgc2l6ZSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CiAKIAlrcmVmX2luaXQoJnJpbmct
PnJlZik7Ci0JSU5JVF9MSVNUX0hFQUQoJnJpbmctPnJlcXVlc3RfbGlzdCk7CiAKIAlyaW5nLT5z
aXplID0gc2l6ZTsKIAkvKiBXb3JrYXJvdW5kIGFuIGVycmF0dW0gb24gdGhlIGk4MzAgd2hpY2gg
Y2F1c2VzIGEgaGFuZyBpZgpAQCAtMTg2Miw3ICsxODYxLDEwIEBAIHN0YXRpYyBpbnQgcmluZ19y
ZXF1ZXN0X2FsbG9jKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCiAJcmV0dXJuIDA7CiB9
CiAKLXN0YXRpYyBub2lubGluZSBpbnQgd2FpdF9mb3Jfc3BhY2Uoc3RydWN0IGludGVsX3Jpbmcg
KnJpbmcsIHVuc2lnbmVkIGludCBieXRlcykKK3N0YXRpYyBub2lubGluZSBpbnQKK3dhaXRfZm9y
X3NwYWNlKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nLAorCSAgICAgICBzdHJ1Y3QgaW50ZWxfdGlt
ZWxpbmUgKnRsLAorCSAgICAgICB1bnNpZ25lZCBpbnQgYnl0ZXMpCiB7CiAJc3RydWN0IGk5MTVf
cmVxdWVzdCAqdGFyZ2V0OwogCWxvbmcgdGltZW91dDsKQEAgLTE4NzAsMTUgKzE4NzIsMTggQEAg
c3RhdGljIG5vaW5saW5lIGludCB3YWl0X2Zvcl9zcGFjZShzdHJ1Y3QgaW50ZWxfcmluZyAqcmlu
ZywgdW5zaWduZWQgaW50IGJ5dGVzKQogCWlmIChpbnRlbF9yaW5nX3VwZGF0ZV9zcGFjZShyaW5n
KSA+PSBieXRlcykKIAkJcmV0dXJuIDA7CiAKLQlHRU1fQlVHX09OKGxpc3RfZW1wdHkoJnJpbmct
PnJlcXVlc3RfbGlzdCkpOwotCWxpc3RfZm9yX2VhY2hfZW50cnkodGFyZ2V0LCAmcmluZy0+cmVx
dWVzdF9saXN0LCByaW5nX2xpbmspIHsKKwlHRU1fQlVHX09OKGxpc3RfZW1wdHkoJnRsLT5yZXF1
ZXN0cykpOworCWxpc3RfZm9yX2VhY2hfZW50cnkodGFyZ2V0LCAmdGwtPnJlcXVlc3RzLCBsaW5r
KSB7CisJCWlmICh0YXJnZXQtPnJpbmcgIT0gcmluZykKKwkJCWNvbnRpbnVlOworCiAJCS8qIFdv
dWxkIGNvbXBsZXRpb24gb2YgdGhpcyByZXF1ZXN0IGZyZWUgZW5vdWdoIHNwYWNlPyAqLwogCQlp
ZiAoYnl0ZXMgPD0gX19pbnRlbF9yaW5nX3NwYWNlKHRhcmdldC0+cG9zdGZpeCwKIAkJCQkJCXJp
bmctPmVtaXQsIHJpbmctPnNpemUpKQogCQkJYnJlYWs7CiAJfQogCi0JaWYgKFdBUk5fT04oJnRh
cmdldC0+cmluZ19saW5rID09ICZyaW5nLT5yZXF1ZXN0X2xpc3QpKQorCWlmIChHRU1fV0FSTl9P
TigmdGFyZ2V0LT5saW5rID09ICZ0bC0+cmVxdWVzdHMpKQogCQlyZXR1cm4gLUVOT1NQQzsKIAog
CXRpbWVvdXQgPSBpOTE1X3JlcXVlc3Rfd2FpdCh0YXJnZXQsCkBAIC0xOTQ1LDcgKzE5NTAsNyBA
QCB1MzIgKmludGVsX3JpbmdfYmVnaW4oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIHVuc2lnbmVk
IGludCBudW1fZHdvcmRzKQogCQkgKi8KIAkJR0VNX0JVR19PTighcnEtPnJlc2VydmVkX3NwYWNl
KTsKIAotCQlyZXQgPSB3YWl0X2Zvcl9zcGFjZShyaW5nLCB0b3RhbF9ieXRlcyk7CisJCXJldCA9
IHdhaXRfZm9yX3NwYWNlKHJpbmcsIHJxLT50aW1lbGluZSwgdG90YWxfYnl0ZXMpOwogCQlpZiAo
dW5saWtlbHkocmV0KSkKIAkJCXJldHVybiBFUlJfUFRSKHJldCk7CiAJfQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L21vY2tfZW5naW5lLmMKaW5kZXggNTkzNzk0ZTNmMDY1Li4zYjUyNjJhZTU1ZDAgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwpAQCAtNTgsNyArNTgsNiBAQCBzdGF0
aWMgc3RydWN0IGludGVsX3JpbmcgKm1vY2tfcmluZyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiAJcmluZy0+dmFkZHIgPSAodm9pZCAqKShyaW5nICsgMSk7CiAJYXRvbWljX3NldCgm
cmluZy0+cGluX2NvdW50LCAxKTsKIAotCUlOSVRfTElTVF9IRUFEKCZyaW5nLT5yZXF1ZXN0X2xp
c3QpOwogCWludGVsX3JpbmdfdXBkYXRlX3NwYWNlKHJpbmcpOwogCiAJcmV0dXJuIHJpbmc7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9jb250ZXh0LmMKaW5kZXggZGE5YzQ5ZTJh
ZGFmLi42ZmJjNzJiYzI5MGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3Nl
bGZ0ZXN0X2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9j
b250ZXh0LmMKQEAgLTIwLDEwICsyMCwxMyBAQCBzdGF0aWMgaW50IHJlcXVlc3Rfc3luYyhzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogCWk5MTVfcmVxdWVzdF9hZGQocnEpOwogCXRpbWVvdXQg
PSBpOTE1X3JlcXVlc3Rfd2FpdChycSwgMCwgSFogLyAxMCk7Ci0JaWYgKHRpbWVvdXQgPCAwKQor
CWlmICh0aW1lb3V0IDwgMCkgewogCQllcnIgPSB0aW1lb3V0OwotCWVsc2UKKwl9IGVsc2Ugewor
CQltdXRleF9sb2NrKCZycS0+dGltZWxpbmUtPm11dGV4KTsKIAkJaTkxNV9yZXF1ZXN0X3JldGly
ZV91cHRvKHJxKTsKKwkJbXV0ZXhfdW5sb2NrKCZycS0+dGltZWxpbmUtPm11dGV4KTsKKwl9CiAK
IAlpOTE1X3JlcXVlc3RfcHV0KHJxKTsKIApAQCAtMzUsNiArMzgsNyBAQCBzdGF0aWMgaW50IGNv
bnRleHRfc3luYyhzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiAJc3RydWN0IGludGVsX3RpbWVs
aW5lICp0bCA9IGNlLT50aW1lbGluZTsKIAlpbnQgZXJyID0gMDsKIAorCW11dGV4X2xvY2soJnRs
LT5tdXRleCk7CiAJZG8gewogCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKIAkJbG9uZyB0aW1l
b3V0OwpAQCAtNTUsNiArNTksNyBAQCBzdGF0aWMgaW50IGNvbnRleHRfc3luYyhzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UpCiAKIAkJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiAJfSB3aGlsZSAoIWVy
cik7CisJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogCiAJcmV0dXJuIGVycjsKIH0KZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKaW5kZXggNDMxNzViYWRhMDllLi5mNzQyYTNlOTBmZmQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCkBAIC0xODEsNDAgKzE4MSw2IEBAIGk5
MTVfcmVxdWVzdF9yZW1vdmVfZnJvbV9jbGllbnQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVz
dCkKIAlzcGluX3VubG9jaygmZmlsZV9wcml2LT5tbS5sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQg
YWR2YW5jZV9yaW5nKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCi17Ci0Jc3RydWN0IGlu
dGVsX3JpbmcgKnJpbmcgPSByZXF1ZXN0LT5yaW5nOwotCXVuc2lnbmVkIGludCB0YWlsOwotCi0J
LyoKLQkgKiBXZSBrbm93IHRoZSBHUFUgbXVzdCBoYXZlIHJlYWQgdGhlIHJlcXVlc3QgdG8gaGF2
ZQotCSAqIHNlbnQgdXMgdGhlIHNlcW5vICsgaW50ZXJydXB0LCBzbyB1c2UgdGhlIHBvc2l0aW9u
Ci0JICogb2YgdGFpbCBvZiB0aGUgcmVxdWVzdCB0byB1cGRhdGUgdGhlIGxhc3Qga25vd24gcG9z
aXRpb24KLQkgKiBvZiB0aGUgR1BVIGhlYWQuCi0JICoKLQkgKiBOb3RlIHRoaXMgcmVxdWlyZXMg
dGhhdCB3ZSBhcmUgYWx3YXlzIGNhbGxlZCBpbiByZXF1ZXN0Ci0JICogY29tcGxldGlvbiBvcmRl
ci4KLQkgKi8KLQlHRU1fQlVHX09OKCFsaXN0X2lzX2ZpcnN0KCZyZXF1ZXN0LT5yaW5nX2xpbmss
ICZyaW5nLT5yZXF1ZXN0X2xpc3QpKTsKLQlpZiAobGlzdF9pc19sYXN0KCZyZXF1ZXN0LT5yaW5n
X2xpbmssICZyaW5nLT5yZXF1ZXN0X2xpc3QpKSB7Ci0JCS8qCi0JCSAqIFdlIG1heSByYWNlIGhl
cmUgd2l0aCBleGVjbGlzdHMgcmVzdWJtaXR0aW5nIHRoaXMgcmVxdWVzdAotCQkgKiBhcyB3ZSBy
ZXRpcmUgaXQuIFRoZSByZXN1Ym1pc3Npb24gd2lsbCBtb3ZlIHRoZSByaW5nLT50YWlsCi0JCSAq
IGZvcndhcmRzICh0byByZXF1ZXN0LT53YV90YWlsKS4gV2UgZWl0aGVyIHJlYWQgdGhlCi0JCSAq
IGN1cnJlbnQgdmFsdWUgdGhhdCB3YXMgd3JpdHRlbiB0byBodywgb3IgdGhlIHZhbHVlIHRoYXQK
LQkJICogaXMganVzdCBhYm91dCB0byBiZS4gRWl0aGVyIHdvcmtzLCBpZiB3ZSBtaXNzIHRoZSBs
YXN0IHR3bwotCQkgKiBub29wcyAtIHRoZXkgYXJlIHNhZmUgdG8gYmUgcmVwbGF5ZWQgb24gYSBy
ZXNldC4KLQkJICovCi0JCXRhaWwgPSBSRUFEX09OQ0UocmVxdWVzdC0+dGFpbCk7Ci0JCWxpc3Rf
ZGVsKCZyaW5nLT5hY3RpdmVfbGluayk7Ci0JfSBlbHNlIHsKLQkJdGFpbCA9IHJlcXVlc3QtPnBv
c3RmaXg7Ci0JfQotCWxpc3RfZGVsX2luaXQoJnJlcXVlc3QtPnJpbmdfbGluayk7Ci0KLQlyaW5n
LT5oZWFkID0gdGFpbDsKLX0KLQogc3RhdGljIHZvaWQgZnJlZV9jYXB0dXJlX2xpc3Qoc3RydWN0
IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIHsKIAlzdHJ1Y3QgaTkxNV9jYXB0dXJlX2xpc3QgKmNh
cHR1cmU7CkBAIC0yMzIsNyArMTk4LDcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGly
ZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVz
dCAqYWN0aXZlLCAqbmV4dDsKIAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJxLT5pOTE1LT5kcm0u
c3RydWN0X211dGV4KTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11dGV4
KTsKIAlpZiAoIWk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQogCQlyZXR1cm4gZmFsc2U7CiAK
QEAgLTI0NCw3ICsyMTAsMTcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAlHRU1fQlVHX09OKCFpOTE1X3N3X2ZlbmNlX3NpZ25hbGVk
KCZycS0+c3VibWl0KSk7CiAJdHJhY2VfaTkxNV9yZXF1ZXN0X3JldGlyZShycSk7CiAKLQlhZHZh
bmNlX3JpbmcocnEpOworCS8qCisJICogV2Uga25vdyB0aGUgR1BVIG11c3QgaGF2ZSByZWFkIHRo
ZSByZXF1ZXN0IHRvIGhhdmUKKwkgKiBzZW50IHVzIHRoZSBzZXFubyArIGludGVycnVwdCwgc28g
dXNlIHRoZSBwb3NpdGlvbgorCSAqIG9mIHRhaWwgb2YgdGhlIHJlcXVlc3QgdG8gdXBkYXRlIHRo
ZSBsYXN0IGtub3duIHBvc2l0aW9uCisJICogb2YgdGhlIEdQVSBoZWFkLgorCSAqCisJICogTm90
ZSB0aGlzIHJlcXVpcmVzIHRoYXQgd2UgYXJlIGFsd2F5cyBjYWxsZWQgaW4gcmVxdWVzdAorCSAq
IGNvbXBsZXRpb24gb3JkZXIuCisJICovCisJR0VNX0JVR19PTighbGlzdF9pc19maXJzdCgmcnEt
PmxpbmssICZycS0+dGltZWxpbmUtPnJlcXVlc3RzKSk7CisJcnEtPnJpbmctPmhlYWQgPSBycS0+
cG9zdGZpeDsKIAogCS8qCiAJICogV2FsayB0aHJvdWdoIHRoZSBhY3RpdmUgbGlzdCwgY2FsbGlu
ZyByZXRpcmUgb24gZWFjaC4gVGhpcyBhbGxvd3MKQEAgLTMyMSw3ICsyOTcsNyBAQCBzdGF0aWMg
Ym9vbCBpOTE1X3JlcXVlc3RfcmV0aXJlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCiB2b2lk
IGk5MTVfcmVxdWVzdF9yZXRpcmVfdXB0byhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlz
dHJ1Y3QgaW50ZWxfcmluZyAqcmluZyA9IHJxLT5yaW5nOworCXN0cnVjdCBpbnRlbF90aW1lbGlu
ZSAqIGNvbnN0IHRsID0gcnEtPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnRtcDsK
IAogCUdFTV9UUkFDRSgiJXMgZmVuY2UgJWxseDolbGxkLCBjdXJyZW50ICVkXG4iLApAQCAtMzI5
LDE1ICszMDUsMTEgQEAgdm9pZCBpOTE1X3JlcXVlc3RfcmV0aXJlX3VwdG8oc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEpCiAJCSAgcnEtPmZlbmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubywKIAkJ
ICBod3NwX3NlcW5vKHJxKSk7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+aTkxNS0+ZHJt
LnN0cnVjdF9tdXRleCk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmdGwtPm11dGV4KTsKIAlHRU1f
QlVHX09OKCFpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSk7CiAKLQlpZiAobGlzdF9lbXB0eSgm
cnEtPnJpbmdfbGluaykpCi0JCXJldHVybjsKLQogCWRvIHsKLQkJdG1wID0gbGlzdF9maXJzdF9l
bnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LAotCQkJCSAgICAgICB0eXBlb2YoKnRtcCksIHJpbmdf
bGluayk7CisJCXRtcCA9IGxpc3RfZmlyc3RfZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCp0
bXApLCBsaW5rKTsKIAl9IHdoaWxlIChpOTE1X3JlcXVlc3RfcmV0aXJlKHRtcCkgJiYgdG1wICE9
IHJxKTsKIH0KIApAQCAtNTY0LDI5ICs1MzYsMjggQEAgc2VtYXBob3JlX25vdGlmeShzdHJ1Y3Qg
aTkxNV9zd19mZW5jZSAqZmVuY2UsIGVudW0gaTkxNV9zd19mZW5jZV9ub3RpZnkgc3RhdGUpCiAJ
cmV0dXJuIE5PVElGWV9ET05FOwogfQogCi1zdGF0aWMgdm9pZCByaW5nX3JldGlyZV9yZXF1ZXN0
cyhzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZykKK3N0YXRpYyB2b2lkIHJldGlyZV9yZXF1ZXN0cyhz
dHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsKQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAq
cm47CiAKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUocnEsIHJuLCAmcmluZy0+cmVxdWVzdF9s
aXN0LCByaW5nX2xpbmspCisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJxLCBybiwgJnRsLT5y
ZXF1ZXN0cywgbGluaykKIAkJaWYgKCFpOTE1X3JlcXVlc3RfcmV0aXJlKHJxKSkKIAkJCWJyZWFr
OwogfQogCiBzdGF0aWMgbm9pbmxpbmUgc3RydWN0IGk5MTVfcmVxdWVzdCAqCi1yZXF1ZXN0X2Fs
bG9jX3Nsb3coc3RydWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBfdCBnZnApCityZXF1ZXN0X2Fs
bG9jX3Nsb3coc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCwgZ2ZwX3QgZ2ZwKQogewotCXN0cnVj
dCBpbnRlbF9yaW5nICpyaW5nID0gY2UtPnJpbmc7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7
CiAKLQlpZiAobGlzdF9lbXB0eSgmcmluZy0+cmVxdWVzdF9saXN0KSkKKwlpZiAobGlzdF9lbXB0
eSgmdGwtPnJlcXVlc3RzKSkKIAkJZ290byBvdXQ7CiAKIAlpZiAoIWdmcGZsYWdzX2FsbG93X2Js
b2NraW5nKGdmcCkpCiAJCWdvdG8gb3V0OwogCiAJLyogTW92ZSBvdXIgb2xkZXN0IHJlcXVlc3Qg
dG8gdGhlIHNsYWItY2FjaGUgKGlmIG5vdCBpbiB1c2UhKSAqLwotCXJxID0gbGlzdF9maXJzdF9l
bnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKKwlycSA9
IGxpc3RfZmlyc3RfZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCpycSksIGxpbmspOwogCWk5
MTVfcmVxdWVzdF9yZXRpcmUocnEpOwogCiAJcnEgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5z
bGFiX3JlcXVlc3RzLApAQCAtNTk1LDExICs1NjYsMTEgQEAgcmVxdWVzdF9hbGxvY19zbG93KHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQogCQlyZXR1cm4gcnE7CiAKIAkvKiBS
YXRlbGltaXQgb3Vyc2VsdmVzIHRvIHByZXZlbnQgb29tIGZyb20gbWFsaWNpb3VzIGNsaWVudHMg
Ki8KLQlycSA9IGxpc3RfbGFzdF9lbnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJx
KSwgcmluZ19saW5rKTsKKwlycSA9IGxpc3RfbGFzdF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBl
b2YoKnJxKSwgbGluayk7CiAJY29uZF9zeW5jaHJvbml6ZV9yY3UocnEtPnJjdXN0YXRlKTsKIAog
CS8qIFJldGlyZSBvdXIgb2xkIHJlcXVlc3RzIGluIHRoZSBob3BlIHRoYXQgd2UgZnJlZSBzb21l
ICovCi0JcmluZ19yZXRpcmVfcmVxdWVzdHMocmluZyk7CisJcmV0aXJlX3JlcXVlc3RzKHRsKTsK
IAogb3V0OgogCXJldHVybiBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3RzLCBn
ZnApOwpAQCAtNjUwLDcgKzYyMSw3IEBAIF9faTkxNV9yZXF1ZXN0X2NyZWF0ZShzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsIGdmcF90IGdmcCkKIAlycSA9IGttZW1fY2FjaGVfYWxsb2MoZ2xvYmFs
LnNsYWJfcmVxdWVzdHMsCiAJCQkgICAgICBnZnAgfCBfX0dGUF9SRVRSWV9NQVlGQUlMIHwgX19H
RlBfTk9XQVJOKTsKIAlpZiAodW5saWtlbHkoIXJxKSkgewotCQlycSA9IHJlcXVlc3RfYWxsb2Nf
c2xvdyhjZSwgZ2ZwKTsKKwkJcnEgPSByZXF1ZXN0X2FsbG9jX3Nsb3codGwsIGdmcCk7CiAJCWlm
ICghcnEpIHsKIAkJCXJldCA9IC1FTk9NRU07CiAJCQlnb3RvIGVycl91bnJlc2VydmU7CkBAIC03
NDIsMTUgKzcxMywxNSBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKIGk5MTVfcmVxdWVzdF9jcmVh
dGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
OwotCWludCBlcnI7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bDsKIAotCWVyciA9IGludGVs
X2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7Ci0JaWYgKGVycikKLQkJcmV0dXJuIEVSUl9QVFIo
ZXJyKTsKKwl0bCA9IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7CisJaWYgKElTX0VS
Uih0bCkpCisJCXJldHVybiBFUlJfQ0FTVCh0bCk7CiAKIAkvKiBNb3ZlIG91ciBvbGRlc3QgcmVx
dWVzdCB0byB0aGUgc2xhYi1jYWNoZSAoaWYgbm90IGluIHVzZSEpICovCi0JcnEgPSBsaXN0X2Zp
cnN0X2VudHJ5KCZjZS0+cmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5r
KTsKLQlpZiAoIWxpc3RfaXNfbGFzdCgmcnEtPnJpbmdfbGluaywgJmNlLT5yaW5nLT5yZXF1ZXN0
X2xpc3QpKQorCXJxID0gbGlzdF9maXJzdF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnJx
KSwgbGluayk7CisJaWYgKCFsaXN0X2lzX2xhc3QoJnJxLT5saW5rLCAmdGwtPnJlcXVlc3RzKSkK
IAkJaTkxNV9yZXF1ZXN0X3JldGlyZShycSk7CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsK
QEAgLTc2MCwyMiArNzMxLDIyIEBAIGk5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQogCQlnb3RvIGVycl91bmxvY2s7CiAKIAkvKiBDaGVjayB0aGF0IHdlIGRvIG5v
dCBpbnRlcnJ1cHQgb3Vyc2VsdmVzIHdpdGggYSBuZXcgcmVxdWVzdCAqLwotCXJxLT5jb29raWUg
PSBsb2NrZGVwX3Bpbl9sb2NrKCZjZS0+dGltZWxpbmUtPm11dGV4KTsKKwlycS0+Y29va2llID0g
bG9ja2RlcF9waW5fbG9jaygmdGwtPm11dGV4KTsKIAogCXJldHVybiBycTsKIAogZXJyX3VubG9j
azoKLQlpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayhjZSk7CisJaW50ZWxfY29udGV4dF90
aW1lbGluZV91bmxvY2sodGwpOwogCXJldHVybiBycTsKIH0KIAogc3RhdGljIGludAogaTkxNV9y
ZXF1ZXN0X2F3YWl0X3N0YXJ0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpzaWduYWwpCiB7Ci0JaWYgKGxpc3RfaXNfZmlyc3QoJnNpZ25hbC0+cmluZ19saW5r
LCAmc2lnbmFsLT5yaW5nLT5yZXF1ZXN0X2xpc3QpKQorCWlmIChsaXN0X2lzX2ZpcnN0KCZzaWdu
YWwtPmxpbmssICZzaWduYWwtPnRpbWVsaW5lLT5yZXF1ZXN0cykpCiAJCXJldHVybiAwOwogCi0J
c2lnbmFsID0gbGlzdF9wcmV2X2VudHJ5KHNpZ25hbCwgcmluZ19saW5rKTsKKwlzaWduYWwgPSBs
aXN0X3ByZXZfZW50cnkoc2lnbmFsLCBsaW5rKTsKIAlpZiAoaW50ZWxfdGltZWxpbmVfc3luY19p
c19sYXRlcihycS0+dGltZWxpbmUsICZzaWduYWwtPmZlbmNlKSkKIAkJcmV0dXJuIDA7CiAKQEAg
LTExNjgsNiArMTEzOSw3IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9yZXF1ZXN0X2Nv
bW1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAkgKi8KIAlHRU1fQlVHX09OKHJxLT5yZXNl
cnZlZF9zcGFjZSA+IHJpbmctPnNwYWNlKTsKIAlycS0+cmVzZXJ2ZWRfc3BhY2UgPSAwOworCXJx
LT5lbWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwogCiAJLyoKIAkgKiBSZWNvcmQgdGhlIHBvc2l0
aW9uIG9mIHRoZSBzdGFydCBvZiB0aGUgYnJlYWRjcnVtYiBzbyB0aGF0CkBAIC0xMTgxLDExICsx
MTUzLDYgQEAgc3RydWN0IGk5MTVfcmVxdWVzdCAqX19pOTE1X3JlcXVlc3RfY29tbWl0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCiAJcHJldiA9IF9faTkxNV9yZXF1ZXN0X2FkZF90b190aW1l
bGluZShycSk7CiAKLQlsaXN0X2FkZF90YWlsKCZycS0+cmluZ19saW5rLCAmcmluZy0+cmVxdWVz
dF9saXN0KTsKLQlpZiAobGlzdF9pc19maXJzdCgmcnEtPnJpbmdfbGluaywgJnJpbmctPnJlcXVl
c3RfbGlzdCkpCi0JCWxpc3RfYWRkKCZyaW5nLT5hY3RpdmVfbGluaywgJnJxLT5pOTE1LT5ndC5h
Y3RpdmVfcmluZ3MpOwotCXJxLT5lbWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwotCiAJLyoKIAkg
KiBMZXQgdGhlIGJhY2tlbmQga25vdyBhIG5ldyByZXF1ZXN0IGhhcyBhcnJpdmVkIHRoYXQgbWF5
IG5lZWQKIAkgKiB0byBhZGp1c3QgdGhlIGV4aXN0aW5nIGV4ZWN1dGlvbiBzY2hlZHVsZSBkdWUg
dG8gYSBoaWdoIHByaW9yaXR5CkBAIC0xMjM2LDEwICsxMjAzLDExIEBAIHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKl9faTkxNV9yZXF1ZXN0X2NvbW1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAog
dm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogeworCXN0cnVj
dCBpbnRlbF90aW1lbGluZSAqIGNvbnN0IHRsID0gcnEtPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnByZXY7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11
dGV4KTsKLQlsb2NrZGVwX3VucGluX2xvY2soJnJxLT50aW1lbGluZS0+bXV0ZXgsIHJxLT5jb29r
aWUpOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnRsLT5tdXRleCk7CisJbG9ja2RlcF91bnBpbl9s
b2NrKCZ0bC0+bXV0ZXgsIHJxLT5jb29raWUpOwogCiAJdHJhY2VfaTkxNV9yZXF1ZXN0X2FkZChy
cSk7CiAKQEAgLTEyNjIsMTAgKzEyMzAsMTAgQEAgdm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCSAqIHdvcmsgb24gYmVoYWxmIG9mIG90aGVycyAtLSBidXQg
aW5zdGVhZCB3ZSBzaG91bGQgYmVuZWZpdCBmcm9tCiAJICogaW1wcm92ZWQgcmVzb3VyY2UgbWFu
YWdlbWVudC4gKFdlbGwsIHRoYXQncyB0aGUgdGhlb3J5IGF0IGxlYXN0LikKIAkgKi8KLQlpZiAo
cHJldiAmJiBpOTE1X3JlcXVlc3RfY29tcGxldGVkKHByZXYpKQorCWlmIChwcmV2ICYmIGk5MTVf
cmVxdWVzdF9jb21wbGV0ZWQocHJldikgJiYgcHJldi0+dGltZWxpbmUgPT0gdGwpCiAJCWk5MTVf
cmVxdWVzdF9yZXRpcmVfdXB0byhwcmV2KTsKIAotCW11dGV4X3VubG9jaygmcnEtPnRpbWVsaW5l
LT5tdXRleCk7CisJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogfQogCiBzdGF0aWMgdW5zaWdu
ZWQgbG9uZyBsb2NhbF9jbG9ja191cyh1bnNpZ25lZCBpbnQgKmNwdSkKQEAgLTE0ODUsMTggKzE0
NTMsNDMgQEAgbG9uZyBpOTE1X3JlcXVlc3Rfd2FpdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwK
IAogYm9vbCBpOTE1X3JldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSkKIHsKLQlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZywgKnRtcDsKKwlzdHJ1Y3QgaW50ZWxfZ3Rf
dGltZWxpbmVzICp0aW1lbGluZXMgPSAmaTkxNS0+Z3QudGltZWxpbmVzOworCXN0cnVjdCBpbnRl
bF90aW1lbGluZSAqdGwsICp0bjsKKwlMSVNUX0hFQUQoZnJlZSk7CisKKwlzcGluX2xvY2soJnRp
bWVsaW5lcy0+bG9jayk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHRsLCB0biwgJnRpbWVs
aW5lcy0+YWN0aXZlX2xpc3QsIGxpbmspIHsKKwkJaWYgKCFtdXRleF90cnlsb2NrKCZ0bC0+bXV0
ZXgpKQorCQkJY29udGludWU7CisKKwkJaW50ZWxfdGltZWxpbmVfZ2V0KHRsKTsKKwkJR0VNX0JV
R19PTighdGwtPmFjdGl2ZV9jb3VudCk7CisJCXRsLT5hY3RpdmVfY291bnQrKzsgLyogcGluIHRo
ZSBsaXN0IGVsZW1lbnQgKi8KKwkJc3Bpbl91bmxvY2soJnRpbWVsaW5lcy0+bG9jayk7CiAKLQls
b2NrZGVwX2Fzc2VydF9oZWxkKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwkJcmV0aXJlX3Jl
cXVlc3RzKHRsKTsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShyaW5nLCB0bXAsCi0JCQkJ
ICZpOTE1LT5ndC5hY3RpdmVfcmluZ3MsIGFjdGl2ZV9saW5rKSB7Ci0JCWludGVsX3JpbmdfZ2V0
KHJpbmcpOyAvKiBsYXN0IHJxIGhvbGRzIHJlZmVyZW5jZSEgKi8KLQkJcmluZ19yZXRpcmVfcmVx
dWVzdHMocmluZyk7Ci0JCWludGVsX3JpbmdfcHV0KHJpbmcpOworCQlzcGluX2xvY2soJnRpbWVs
aW5lcy0+bG9jayk7CisKKwkJLyogUmVzdGFydCBpdGVyYXRpb24gYWZ0ZXIgZHJvcHBpbmcgbG9j
ayAqLworCQlsaXN0X3NhZmVfcmVzZXRfbmV4dCh0bCwgdG4sIGxpbmspOworCQlpZiAoIS0tdGwt
PmFjdGl2ZV9jb3VudCkKKwkJCWxpc3RfZGVsKCZ0bC0+bGluayk7CisKKwkJbXV0ZXhfdW5sb2Nr
KCZ0bC0+bXV0ZXgpOworCisJCS8qIERlZmVyIHRoZSBmaW5hbCByZWxlYXNlIHRvIGFmdGVyIHRo
ZSBzcGlubG9jayAqLworCQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ0bC0+a3JlZi5yZWZj
b3VudCkpIHsKKwkJCUdFTV9CVUdfT04odGwtPmFjdGl2ZV9jb3VudCk7CisJCQlsaXN0X2FkZCgm
dGwtPmxpbmssICZmcmVlKTsKKwkJfQogCX0KKwlzcGluX3VubG9jaygmdGltZWxpbmVzLT5sb2Nr
KTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZmcmVlLCBsaW5rKQorCQlf
X2ludGVsX3RpbWVsaW5lX2ZyZWUoJnRsLT5rcmVmKTsKIAotCXJldHVybiAhbGlzdF9lbXB0eSgm
aTkxNS0+Z3QuYWN0aXZlX3JpbmdzKTsKKwlyZXR1cm4gIWxpc3RfZW1wdHkoJnRpbWVsaW5lcy0+
YWN0aXZlX2xpc3QpOwogfQogCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRF
U1QpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCmluZGV4IDMxM2RmM2MzNzE1OC4uMjJl
NTA2ZTk2MGUwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3Qu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaApAQCAtMjIzLDkgKzIy
Myw2IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgewogCS8qKiB0aW1lbGluZS0+cmVxdWVzdCBlbnRy
eSBmb3IgdGhpcyByZXF1ZXN0ICovCiAJc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogCi0JLyoqIHJp
bmctPnJlcXVlc3RfbGlzdCBlbnRyeSBmb3IgdGhpcyByZXF1ZXN0ICovCi0Jc3RydWN0IGxpc3Rf
aGVhZCByaW5nX2xpbms7Ci0KIAlzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmaWxlX3By
aXY7CiAJLyoqIGZpbGVfcHJpdiBsaXN0IGVudHJ5IGZvciB0aGlzIHJlcXVlc3QgKi8KIAlzdHJ1
Y3QgbGlzdF9oZWFkIGNsaWVudF9saW5rOwotLSAKMi4yMy4wLnJjMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJ
bnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 1B87261DBB
	for <lists+intel-gfx@lfdr.de>; Mon,  8 Jul 2019 13:20:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6F75D89AB5;
	Mon,  8 Jul 2019 11:20:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4657F89CA2
 for <intel-gfx@lists.freedesktop.org>; Mon,  8 Jul 2019 11:20:07 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17167722-1500050 
 for multiple; Mon, 08 Jul 2019 12:19:46 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  8 Jul 2019 12:19:43 +0100
Message-Id: <20190708111944.20095-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/2] drm/i915/oa: Reconfigure contexts on the fly
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXZvaWQgYSBnbG9iYWwgaWRsZSBiYXJyaWVyIGJ5IHJlY29uZmlndXJpbmcgZWFjaCBjb250ZXh0
IGJ5IHJld3JpdGluZwp0aGVtIHdpdGggTUlfU1RPUkVfRFdPUkQgZnJvbSB0aGUga2VybmVsIGNv
bnRleHQuCgp2MjogV2Ugb25seSBuZWVkIHRvIGRldGVybWluZSB0aGUgZGVzaXJlZCByZWdpc3Rl
ciB2YWx1ZXMgb25jZSwgdGhleSBhcmUKdGhlIHNhbWUgZm9yIGFsbCBjb250ZXh0cy4KClNpZ25l
ZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogTGlv
bmVsIExhbmR3ZXJsaW4gPGxpb25lbC5nLmxhbmR3ZXJsaW5AaW50ZWwuY29tPgpDYzogVHZydGtv
IFVyc3VsaW4gPHR2cnRrby51cnN1bGluQGludGVsLmNvbT4KUmV2aWV3ZWQtYnk6IExpb25lbCBM
YW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jIHwgICAyICsKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgfCAgIDcgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcGVyZi5jICAgICAgICAgICAgfCAyNDggKysrKysrKysrKysrKysrLS0tLS0KIDMg
ZmlsZXMgY2hhbmdlZCwgMTk1IGluc2VydGlvbnMoKyksIDYyIGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCmluZGV4IGUzNjdkY2UyYTY5
Ni4uMWYwZDEwYmI4OGMxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fY29udGV4dC5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9j
b250ZXh0LmMKQEAgLTYyNCw3ICs2MjQsOSBAQCBpOTE1X2dlbV9jb250ZXh0X2NyZWF0ZV9rZXJu
ZWwoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludCBwcmlvKQogCWN0eC0+c2NoZWQu
cHJpb3JpdHkgPSBJOTE1X1VTRVJfUFJJT1JJVFkocHJpbyk7CiAJY3R4LT5yaW5nX3NpemUgPSBQ
QUdFX1NJWkU7CiAKKwkvKiBJc29sYXRlIHRoZSBrZXJuZWwgY29udGV4dCBmcm9tIHByeWluZyBl
eWVzIGFuZCBzdGlja3kgZmluZ2VycyAqLwogCUdFTV9CVUdfT04oIWk5MTVfZ2VtX2NvbnRleHRf
aXNfa2VybmVsKGN0eCkpOworCWxpc3RfZGVsX2luaXQoJmN0eC0+bGluayk7CiAKIAlyZXR1cm4g
Y3R4OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYwppbmRleCBlMWFlMTM5OWM3MmIu
LjljYzUzNzQ0MDFlMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
bHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTE1NTIs
OSArMTU1MiwxMiBAQCBfX2V4ZWNsaXN0c191cGRhdGVfcmVnX3N0YXRlKHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSwKIAlyZWdzW0NUWF9SSU5HX1RBSUwgKyAxXSA9IHJpbmctPnRhaWw7CiAKIAkv
KiBSUENTICovCi0JaWYgKGVuZ2luZS0+Y2xhc3MgPT0gUkVOREVSX0NMQVNTKQorCWlmIChlbmdp
bmUtPmNsYXNzID09IFJFTkRFUl9DTEFTUykgewogCQlyZWdzW0NUWF9SX1BXUl9DTEtfU1RBVEUg
KyAxXSA9CiAJCQlpbnRlbF9zc2V1X21ha2VfcnBjcyhlbmdpbmUtPmk5MTUsICZjZS0+c3NldSk7
CisKKwkJaTkxNV9vYV9pbml0X3JlZ19zdGF0ZShlbmdpbmUsIGNlLCByZWdzKTsKKwl9CiB9CiAK
IHN0YXRpYyBpbnQKQEAgLTI5NjYsOCArMjk2OSw2IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19p
bml0X3JlZ19zdGF0ZSh1MzIgKnJlZ3MsCiAJaWYgKHJjcykgewogCQlyZWdzW0NUWF9MUklfSEVB
REVSXzJdID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0oMSk7CiAJCUNUWF9SRUcocmVncywgQ1RYX1Jf
UFdSX0NMS19TVEFURSwgR0VOOF9SX1BXUl9DTEtfU1RBVEUsIDApOwotCi0JCWk5MTVfb2FfaW5p
dF9yZWdfc3RhdGUoZW5naW5lLCBjZSwgcmVncyk7CiAJfQogCiAJcmVnc1tDVFhfRU5EXSA9IE1J
X0JBVENIX0JVRkZFUl9FTkQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3BlcmYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IDM1N2U2M2Jl
YjM3My4uMjVjMzRhMGI1MjFlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3BlcmYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMTYzMCw2
ICsxNjMwLDI3IEBAIHN0YXRpYyB2b2lkIGhzd19kaXNhYmxlX21ldHJpY19zZXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkJCSAgICAgIH5HVF9OT0FfRU5BQkxFKSk7CiB9
CiAKK3N0YXRpYyB1MzIgb2FfY29uZmlnX2ZsZXhfcmVnKGNvbnN0IHN0cnVjdCBpOTE1X29hX2Nv
bmZpZyAqb2FfY29uZmlnLAorCQkJICAgICAgaTkxNV9yZWdfdCByZWcpCit7CisJdTMyIG1taW8g
PSBpOTE1X21taW9fcmVnX29mZnNldChyZWcpOworCWludCBpOworCisJLyoKKwkgKiBUaGlzIGFy
Yml0cmFyeSBkZWZhdWx0IHdpbGwgc2VsZWN0IHRoZSAnRVUgRlBVMCBQaXBlbGluZQorCSAqIEFj
dGl2ZScgZXZlbnQuIEluIHRoZSBmdXR1cmUgaXQncyBhbnRpY2lwYXRlZCB0aGF0IHRoZXJlCisJ
ICogd2lsbCBiZSBhbiBleHBsaWNpdCAnTm8gRXZlbnQnIHdlIGNhbiBzZWxlY3QsIGJ1dCBub3Qg
eWV0Li4uCisJICovCisJaWYgKCFvYV9jb25maWcpCisJCXJldHVybiAwOworCisJZm9yIChpID0g
MDsgaSA8IG9hX2NvbmZpZy0+ZmxleF9yZWdzX2xlbjsgaSsrKSB7CisJCWlmIChpOTE1X21taW9f
cmVnX29mZnNldChvYV9jb25maWctPmZsZXhfcmVnc1tpXS5hZGRyKSA9PSBtbWlvKQorCQkJcmV0
dXJuIG9hX2NvbmZpZy0+ZmxleF9yZWdzW2ldLnZhbHVlOworCX0KKworCXJldHVybiAwOworfQog
LyoKICAqIE5COiBJdCBtdXN0IGFsd2F5cyByZW1haW4gcG9pbnRlciBzYWZlIHRvIHJ1biB0aGlz
IGV2ZW4gaWYgdGhlIE9BIHVuaXQKICAqIGhhcyBiZWVuIGRpc2FibGVkLgpAQCAtMTY2MywyOCAr
MTY4NCw4IEBAIGdlbjhfdXBkYXRlX3JlZ19zdGF0ZV91bmxvY2tlZChzdHJ1Y3QgaW50ZWxfY29u
dGV4dCAqY2UsCiAJCUdFTjhfT0FfQ09VTlRFUl9SRVNVTUUpOwogCiAJZm9yIChpID0gMDsgaSA8
IEFSUkFZX1NJWkUoZmxleF9yZWdzKTsgaSsrKSB7Ci0JCXUzMiBzdGF0ZV9vZmZzZXQgPSBjdHhf
ZmxleGV1MCArIGkgKiAyOwotCQl1MzIgbW1pbyA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KGZsZXhf
cmVnc1tpXSk7Ci0KLQkJLyoKLQkJICogVGhpcyBhcmJpdHJhcnkgZGVmYXVsdCB3aWxsIHNlbGVj
dCB0aGUgJ0VVIEZQVTAgUGlwZWxpbmUKLQkJICogQWN0aXZlJyBldmVudC4gSW4gdGhlIGZ1dHVy
ZSBpdCdzIGFudGljaXBhdGVkIHRoYXQgdGhlcmUKLQkJICogd2lsbCBiZSBhbiBleHBsaWNpdCAn
Tm8gRXZlbnQnIHdlIGNhbiBzZWxlY3QsIGJ1dCBub3QgeWV0Li4uCi0JCSAqLwotCQl1MzIgdmFs
dWUgPSAwOwotCi0JCWlmIChvYV9jb25maWcpIHsKLQkJCXUzMiBqOwotCi0JCQlmb3IgKGogPSAw
OyBqIDwgb2FfY29uZmlnLT5mbGV4X3JlZ3NfbGVuOyBqKyspIHsKLQkJCQlpZiAoaTkxNV9tbWlv
X3JlZ19vZmZzZXQob2FfY29uZmlnLT5mbGV4X3JlZ3Nbal0uYWRkcikgPT0gbW1pbykgewotCQkJ
CQl2YWx1ZSA9IG9hX2NvbmZpZy0+ZmxleF9yZWdzW2pdLnZhbHVlOwotCQkJCQlicmVhazsKLQkJ
CQl9Ci0JCQl9Ci0JCX0KLQotCQlDVFhfUkVHKHJlZ19zdGF0ZSwgc3RhdGVfb2Zmc2V0LCBmbGV4
X3JlZ3NbaV0sIHZhbHVlKTsKKwkJQ1RYX1JFRyhyZWdfc3RhdGUsIGN0eF9mbGV4ZXUwICsgaSAq
IDIsIGZsZXhfcmVnc1tpXSwKKwkJCW9hX2NvbmZpZ19mbGV4X3JlZyhvYV9jb25maWcsIGZsZXhf
cmVnc1tpXSkpOwogCX0KIAogCUNUWF9SRUcocmVnX3N0YXRlLApAQCAtMTY5Miw2ICsxNjkzLDEw
NyBAQCBnZW44X3VwZGF0ZV9yZWdfc3RhdGVfdW5sb2NrZWQoc3RydWN0IGludGVsX2NvbnRleHQg
KmNlLAogCQlpbnRlbF9zc2V1X21ha2VfcnBjcyhpOTE1LCAmY2UtPnNzZXUpKTsKIH0KIAorc3Ry
dWN0IGZsZXggeworCWk5MTVfcmVnX3QgcmVnOworCXUzMiBvZmZzZXQ7CisJdTMyIHZhbHVlOwor
fTsKKworc3RhdGljIGludAorZ2VuOF9zdG9yZV9mbGV4KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
LAorCQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCisJCWNvbnN0IHN0cnVjdCBmbGV4ICpmbGV4
LCB1bnNpZ25lZCBpbnQgY291bnQpCit7CisJdTMyIG9mZnNldDsKKwl1MzIgKmNzOworCisJY3Mg
PSBpbnRlbF9yaW5nX2JlZ2luKHJxLCA0ICogY291bnQpOworCWlmIChJU19FUlIoY3MpKQorCQly
ZXR1cm4gUFRSX0VSUihjcyk7CisKKwlvZmZzZXQgPSBpOTE1X2dndHRfb2Zmc2V0KGNlLT5zdGF0
ZSkgKyBMUkNfU1RBVEVfUE4gKiBQQUdFX1NJWkU7CisJZG8geworCQkqY3MrKyA9IE1JX1NUT1JF
X0RXT1JEX0lNTV9HRU40IHwgTUlfVVNFX0dHVFQ7CisJCSpjcysrID0gb2Zmc2V0ICsgKGZsZXgt
Pm9mZnNldCArIDEpICogc2l6ZW9mKHUzMik7CisJCSpjcysrID0gMDsKKwkJKmNzKysgPSBmbGV4
LT52YWx1ZTsKKwl9IHdoaWxlIChmbGV4KyssIC0tY291bnQpOworCisJaW50ZWxfcmluZ19hZHZh
bmNlKHJxLCBjcyk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludAorZ2VuOF9sb2FkX2Zs
ZXgoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCisJICAgICAgIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSwKKwkgICAgICAgY29uc3Qgc3RydWN0IGZsZXggKmZsZXgsIHVuc2lnbmVkIGludCBjb3Vu
dCkKK3sKKwl1MzIgKmNzOworCisJR0VNX0JVR19PTighY291bnQgfHwgY291bnQgPiA2Myk7CisK
KwljcyA9IGludGVsX3JpbmdfYmVnaW4ocnEsIDIgKiBjb3VudCArIDIpOworCWlmIChJU19FUlIo
Y3MpKQorCQlyZXR1cm4gUFRSX0VSUihjcyk7CisKKwkqY3MrKyA9IE1JX0xPQURfUkVHSVNURVJf
SU1NKGNvdW50KTsKKwlkbyB7CisJCSpjcysrID0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoZmxleC0+
cmVnKTsKKwkJKmNzKysgPSBmbGV4LT52YWx1ZTsKKwl9IHdoaWxlIChmbGV4KyssIC0tY291bnQp
OworCSpjcysrID0gTUlfTk9PUDsKKworCWludGVsX3JpbmdfYWR2YW5jZShycSwgY3MpOworCisJ
cmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgZ2VuOF9tb2RpZnlfY29udGV4dChzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2UsCisJCQkgICAgICAgY29uc3Qgc3RydWN0IGZsZXggKmZsZXgsIHVuc2ln
bmVkIGludCBjb3VudCkKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKKwlpbnQgZXJyOwor
CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmY2UtPnBpbl9tdXRleCk7CisKKwlycSA9IGk5MTVfcmVx
dWVzdF9jcmVhdGUoY2UtPmVuZ2luZS0+a2VybmVsX2NvbnRleHQpOworCWlmIChJU19FUlIocnEp
KQorCQlyZXR1cm4gUFRSX0VSUihycSk7CisKKwkvKiBTZXJpYWxpc2Ugd2l0aCB0aGUgcmVtb3Rl
IGNvbnRleHQgKi8KKwllcnIgPSBpOTE1X2FjdGl2ZV9yZXF1ZXN0X3NldCgmY2UtPnJpbmctPnRp
bWVsaW5lLT5sYXN0X3JlcXVlc3QsIHJxKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dF9hZGQ7CisK
KwkvKiBLZWVwIHRoZSByZW1vdGUgY29udGV4dCBhbGl2ZSB1bnRpbCBhZnRlciB3ZSBmaW5pc2gg
ZWRpdGluZyAqLworCWVyciA9IGk5MTVfYWN0aXZlX3JlZigmY2UtPmFjdGl2ZSwgcnEtPmZlbmNl
LmNvbnRleHQsIHJxKTsKKwlpZiAoZXJyKQorCQlnb3RvIG91dF9hZGQ7CisKKwllcnIgPSBnZW44
X3N0b3JlX2ZsZXgocnEsIGNlLCBmbGV4LCBjb3VudCk7CisKK291dF9hZGQ6CisJaTkxNV9yZXF1
ZXN0X2FkZChycSk7CisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIGludCBnZW44X21vZGlmeV9z
ZWxmKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSwKKwkJCSAgICBjb25zdCBzdHJ1Y3QgZmxleCAq
ZmxleCwgdW5zaWduZWQgaW50IGNvdW50KQoreworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwor
CWludCBlcnI7CisKKwlycSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUoY2UpOworCWlmIChJU19FUlIo
cnEpKQorCQlyZXR1cm4gUFRSX0VSUihycSk7CisKKwllcnIgPSBnZW44X2xvYWRfZmxleChycSwg
Y2UsIGZsZXgsIGNvdW50KTsKKworCWk5MTVfcmVxdWVzdF9hZGQocnEpOworCXJldHVybiBlcnI7
Cit9CisKIC8qCiAgKiBNYW5hZ2VzIHVwZGF0aW5nIHRoZSBwZXItY29udGV4dCBhc3BlY3RzIG9m
IHRoZSBPQSBzdHJlYW0KICAqIGNvbmZpZ3VyYXRpb24gYWNyb3NzIGFsbCBjb250ZXh0cy4KQEAg
LTE3MTYsMTUgKzE4MTgsNDMgQEAgZ2VuOF91cGRhdGVfcmVnX3N0YXRlX3VubG9ja2VkKHN0cnVj
dCBpbnRlbF9jb250ZXh0ICpjZSwKICAqCiAgKiBOb3RlOiBpdCdzIG9ubHkgdGhlIFJDUy9SZW5k
ZXIgY29udGV4dCB0aGF0IGhhcyBhbnkgT0Egc3RhdGUuCiAgKi8KLXN0YXRpYyBpbnQgZ2VuOF9j
b25maWd1cmVfYWxsX2NvbnRleHRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwK
K3N0YXRpYyBpbnQgZ2VuOF9jb25maWd1cmVfYWxsX2NvbnRleHRzKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICppOTE1LAogCQkJCSAgICAgICBjb25zdCBzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9h
X2NvbmZpZykKIHsKLQl1bnNpZ25lZCBpbnQgbWFwX3R5cGUgPSBpOTE1X2NvaGVyZW50X21hcF90
eXBlKGRldl9wcml2KTsKKwkvKiBUaGUgTU1JTyBvZmZzZXRzIGZvciBGbGV4IEVVIHJlZ2lzdGVy
cyBhcmVuJ3QgY29udGlndW91cyAqLworCWNvbnN0IHUzMiBjdHhfZmxleGV1MCA9IGk5MTUtPnBl
cmYub2EuY3R4X2ZsZXhldTBfb2Zmc2V0OworI2RlZmluZSBjdHhfZmxleGV1TihOKSAoY3R4X2Zs
ZXhldTAgKyAyICogKE4pKQorCXN0cnVjdCBmbGV4IHJlZ3NbXSA9IHsKKwkJeworCQkJR0VOOF9S
X1BXUl9DTEtfU1RBVEUsCisJCQlDVFhfUl9QV1JfQ0xLX1NUQVRFLAorCQl9LAorCQl7CisJCQlH
RU44X09BQ1RYQ09OVFJPTCwKKwkJCWk5MTUtPnBlcmYub2EuY3R4X29hY3R4Y3RybF9vZmZzZXQs
CisJCQkoKGk5MTUtPnBlcmYub2EucGVyaW9kX2V4cG9uZW50IDw8IEdFTjhfT0FfVElNRVJfUEVS
SU9EX1NISUZUKSB8CisJCQkgKGk5MTUtPnBlcmYub2EucGVyaW9kaWMgPyBHRU44X09BX1RJTUVS
X0VOQUJMRSA6IDApIHwKKwkJCSBHRU44X09BX0NPVU5URVJfUkVTVU1FKQorCQl9LAorCQl7IEVV
X1BFUkZfQ05UTDAsIGN0eF9mbGV4ZXVOKDApIH0sCisJCXsgRVVfUEVSRl9DTlRMMSwgY3R4X2Zs
ZXhldU4oMSkgfSwKKwkJeyBFVV9QRVJGX0NOVEwyLCBjdHhfZmxleGV1TigyKSB9LAorCQl7IEVV
X1BFUkZfQ05UTDMsIGN0eF9mbGV4ZXVOKDMpIH0sCisJCXsgRVVfUEVSRl9DTlRMNCwgY3R4X2Zs
ZXhldU4oNCkgfSwKKwkJeyBFVV9QRVJGX0NOVEw1LCBjdHhfZmxleGV1Tig1KSB9LAorCQl7IEVV
X1BFUkZfQ05UTDYsIGN0eF9mbGV4ZXVOKDYpIH0sCisJfTsKKyN1bmRlZiBjdHhfZmxleGV1Tgor
CXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqY3R4OwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCWludCByZXQ7CisJZW51bSBpbnRl
bF9lbmdpbmVfaWQgaWQ7CisJaW50IGVycjsKKwlpbnQgaTsKKworCWZvciAoaSA9IDI7IGkgPCBB
UlJBWV9TSVpFKHJlZ3MpOyBpKyspCisJCXJlZ3NbaV0udmFsdWUgPSBvYV9jb25maWdfZmxleF9y
ZWcob2FfY29uZmlnLCByZWdzW2ldLnJlZyk7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZf
cHJpdi0+ZHJtLnN0cnVjdF9tdXRleCk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmaTkxNS0+ZHJt
LnN0cnVjdF9tdXRleCk7CiAKIAkvKgogCSAqIFRoZSBPQSByZWdpc3RlciBjb25maWcgaXMgc2V0
dXAgdGhyb3VnaCB0aGUgY29udGV4dCBpbWFnZS4gVGhpcyBpbWFnZQpAQCAtMTczNiw1OCArMTg2
Niw1OCBAQCBzdGF0aWMgaW50IGdlbjhfY29uZmlndXJlX2FsbF9jb250ZXh0cyhzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJICogdGhpcyBtaWdodCBsZWF2ZSBzbWFsbCBpbnRl
cnZhbCBvZiB0aW1lIHdoZXJlIHRoZSBPQSB1bml0IGlzCiAJICogY29uZmlndXJlZCBhdCBhbiBp
bnZhbGlkIHNhbXBsaW5nIHBlcmlvZC4KIAkgKgotCSAqIFNvIGZhciB0aGUgYmVzdCB3YXkgdG8g
d29yayBhcm91bmQgdGhpcyBpc3N1ZSBzZWVtcyB0byBiZSBkcmFpbmluZwotCSAqIHRoZSBHUFUg
ZnJvbSBhbnkgc3VibWl0dGVkIHdvcmsuCisJICogTm90ZSB0aGF0IHNpbmNlIHdlIGVtaXQgYWxs
IHJlcXVlc3RzIGZyb20gYSBzaW5nbGUgcmluZywgdGhlcmUKKwkgKiBpcyBzdGlsbCBhbiBpbXBs
aWNpdCBnbG9iYWwgYmFycmllciBoZXJlIHRoYXQgbWF5IGNhdXNlIGEgaGlnaAorCSAqIHByaW9y
aXR5IGNvbnRleHQgdG8gd2FpdCBmb3IgYW4gb3RoZXJ3aXNlIGluZGVwZW5kZW50IGxvdyBwcmlv
cml0eQorCSAqIGNvbnRleHQuIENvbnRleHRzIGlkbGUgYXQgdGhlIHRpbWUgb2YgcmVjb25maWd1
cmF0aW9uIGFyZSBub3QKKwkgKiB0cmFwcGVkIGJlaGluZCB0aGUgYmFycmllci4KIAkgKi8KLQly
ZXQgPSBpOTE1X2dlbV93YWl0X2Zvcl9pZGxlKGRldl9wcml2LAotCQkJCSAgICAgSTkxNV9XQUlU
X0xPQ0tFRCwKLQkJCQkgICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKLQlpZiAocmV0KQotCQly
ZXR1cm4gcmV0OwotCi0JLyogVXBkYXRlIGFsbCBjb250ZXh0cyBub3cgdGhhdCB3ZSd2ZSBzdGFs
bGVkIHRoZSBzdWJtaXNzaW9uLiAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnkoY3R4LCAmZGV2X3By
aXYtPmNvbnRleHRzLmxpc3QsIGxpbmspIHsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGN0eCwgJmk5
MTUtPmNvbnRleHRzLmxpc3QsIGxpbmspIHsKIAkJc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXNfaXRl
ciBpdDsKIAkJc3RydWN0IGludGVsX2NvbnRleHQgKmNlOwogCiAJCWZvcl9lYWNoX2dlbV9lbmdp
bmUoY2UsCiAJCQkJICAgIGk5MTVfZ2VtX2NvbnRleHRfbG9ja19lbmdpbmVzKGN0eCksCiAJCQkJ
ICAgIGl0KSB7Ci0JCQl1MzIgKnJlZ3M7Ci0KIAkJCWlmIChjZS0+ZW5naW5lLT5jbGFzcyAhPSBS
RU5ERVJfQ0xBU1MpCiAJCQkJY29udGludWU7CiAKLQkJCS8qIE9BIHNldHRpbmdzIHdpbGwgYmUg
c2V0IHVwb24gZmlyc3QgdXNlICovCi0JCQlpZiAoIWNlLT5zdGF0ZSkKLQkJCQljb250aW51ZTsK
LQotCQkJcmVncyA9IGk5MTVfZ2VtX29iamVjdF9waW5fbWFwKGNlLT5zdGF0ZS0+b2JqLAotCQkJ
CQkJICAgICAgIG1hcF90eXBlKTsKLQkJCWlmIChJU19FUlIocmVncykpIHsKLQkJCQlpOTE1X2dl
bV9jb250ZXh0X3VubG9ja19lbmdpbmVzKGN0eCk7Ci0JCQkJcmV0dXJuIFBUUl9FUlIocmVncyk7
Ci0JCQl9CisJCQllcnIgPSBpbnRlbF9jb250ZXh0X2xvY2tfcGlubmVkKGNlKTsKKwkJCWlmIChl
cnIpCisJCQkJYnJlYWs7CiAKLQkJCWNlLT5zdGF0ZS0+b2JqLT5tbS5kaXJ0eSA9IHRydWU7Ci0J
CQlyZWdzICs9IExSQ19TVEFURV9QTiAqIFBBR0VfU0laRSAvIHNpemVvZigqcmVncyk7CisJCQly
ZWdzWzBdLnZhbHVlID0gaW50ZWxfc3NldV9tYWtlX3JwY3MoaTkxNSwgJmNlLT5zc2V1KTsKIAot
CQkJZ2VuOF91cGRhdGVfcmVnX3N0YXRlX3VubG9ja2VkKGNlLCByZWdzLCBvYV9jb25maWcpOwor
CQkJLyogT3RoZXJ3aXNlIE9BIHNldHRpbmdzIHdpbGwgYmUgc2V0IHVwb24gZmlyc3QgdXNlICov
CisJCQlpZiAoaW50ZWxfY29udGV4dF9pc19waW5uZWQoY2UpKQorCQkJCWVyciA9IGdlbjhfbW9k
aWZ5X2NvbnRleHQoY2UsIHJlZ3MsIEFSUkFZX1NJWkUocmVncykpOwogCi0JCQlpOTE1X2dlbV9v
YmplY3RfdW5waW5fbWFwKGNlLT5zdGF0ZS0+b2JqKTsKKwkJCWludGVsX2NvbnRleHRfdW5sb2Nr
X3Bpbm5lZChjZSk7CisJCQlpZiAoZXJyKQorCQkJCWJyZWFrOwogCQl9CiAJCWk5MTVfZ2VtX2Nv
bnRleHRfdW5sb2NrX2VuZ2luZXMoY3R4KTsKKwkJaWYgKGVycikKKwkJCXJldHVybiBlcnI7CiAJ
fQogCiAJLyoKLQkgKiBBcHBseSB0aGUgY29uZmlndXJhdGlvbiBieSBkb2luZyBvbmUgY29udGV4
dCByZXN0b3JlIG9mIHRoZSBlZGl0ZWQKLQkgKiBjb250ZXh0IGltYWdlLgorCSAqIEFmdGVyIHVw
ZGF0aW5nIGFsbCBvdGhlciBjb250ZXh0cywgd2UgbmVlZCB0byBtb2RpZnkgb3Vyc2VsdmVzLgor
CSAqIElmIHdlIGRvbid0IG1vZGlmeSB0aGUga2VybmVsX2NvbnRleHQsIHdlIGRvIG5vdCBnZXQg
ZXZlbnRzIHdoaWxlCisJICogaWRsZS4KIAkgKi8KLQlycSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUo
ZGV2X3ByaXYtPmVuZ2luZVtSQ1MwXS0+a2VybmVsX2NvbnRleHQpOwotCWlmIChJU19FUlIocnEp
KQotCQlyZXR1cm4gUFRSX0VSUihycSk7CisJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwg
aWQpIHsKKwkJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZW5naW5lLT5rZXJuZWxfY29udGV4
dDsKIAotCWk5MTVfcmVxdWVzdF9hZGQocnEpOworCQlpZiAoZW5naW5lLT5jbGFzcyAhPSBSRU5E
RVJfQ0xBU1MpCisJCQljb250aW51ZTsKKworCQlyZWdzWzBdLnZhbHVlID0gaW50ZWxfc3NldV9t
YWtlX3JwY3MoaTkxNSwgJmNlLT5zc2V1KTsKKworCQllcnIgPSBnZW44X21vZGlmeV9zZWxmKGNl
LCByZWdzLCBBUlJBWV9TSVpFKHJlZ3MpKTsKKwkJaWYgKGVycikKKwkJCXJldHVybiBlcnI7CisJ
fQogCiAJcmV0dXJuIDA7CiB9Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFu
L2xpc3RpbmZvL2ludGVsLWdmeA==

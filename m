Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E1CDA21067
	for <lists+intel-gfx@lfdr.de>; Thu, 16 May 2019 23:57:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9AF92897F3;
	Thu, 16 May 2019 21:57:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 7E6A9897E4
 for <intel-gfx@lists.freedesktop.org>; Thu, 16 May 2019 21:57:17 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 16 May 2019 14:57:17 -0700
X-ExtLoop1: 1
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by orsmga001.jf.intel.com with ESMTP; 16 May 2019 14:57:17 -0700
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 16 May 2019 14:56:29 -0700
Message-Id: <20190516215634.16675-3-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190516215634.16675-1-daniele.ceraolospurio@intel.com>
References: <20190516215634.16675-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [RFC 2/7] drm/i915: Remove rpm asserts that use i915
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UXVpdGUgYSBmZXcgb2YgdGhlIGNhbGwgcG9pbnRzIGhhdmUgYWxyZWFkeSBzd2l0Y2hlZCB0byB0
aGUgdmVyc2lvbgp3b3JraW5nIGRpcmVjdGx5IG9uIHRoZSBydW50aW1lX3BtIHN0cnVjdHVyZSwg
c28gbGV0J3Mgc3dpdGNoIG92ZXIgdGhlCnJlc3QgYW5kIGtpbGwgdGhlIGk5MTUtYmFzZWQgYXNz
ZXJ0cy4KClNpZ25lZC1vZmYtYnk6IERhbmllbGUgQ2VyYW9sbyBTcHVyaW8gPGRhbmllbGUuY2Vy
YW9sb3NwdXJpb0BpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2FwZXJ0
dXJlX2dtLmMgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyAgICAg
ICAgICAgfCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZmVuY2VfcmVnLmMg
fCAgMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYyAgICAgICAgICAgfCAgNiAr
KystLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMgICAgICAgICAgIHwgIDIgKy0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Nzci5jICAgICAgICAgIHwgIDIgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rydi5oICAgICAgICAgIHwgMjYgKysrKysrLS0tLS0tLS0t
LS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3J1bnRpbWVfcG0uYyAgIHwgMTQg
KysrKysrLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF91bmNvcmUuYyAgICAgICB8
IDEyICsrKysrLS0tLS0tCiA5IGZpbGVzIGNoYW5nZWQsIDI4IGluc2VydGlvbnMoKyksIDQwIGRl
bGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9hcGVydHVy
ZV9nbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2FwZXJ0dXJlX2dtLmMKaW5kZXggMWZh
MmY2NWMzY2QxLi43ZjRlMzQ1NmNlMTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d2dC9hcGVydHVyZV9nbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9hcGVydHVy
ZV9nbS5jCkBAIC0xMzEsNyArMTMxLDcgQEAgdm9pZCBpbnRlbF92Z3B1X3dyaXRlX2ZlbmNlKHN0
cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAogCXN0cnVjdCBkcm1faTkxNV9mZW5jZV9yZWcgKnJlZzsK
IAlpOTE1X3JlZ190IGZlbmNlX3JlZ19sbywgZmVuY2VfcmVnX2hpOwogCi0JYXNzZXJ0X3JwbV93
YWtlbG9ja19oZWxkKGRldl9wcml2KTsKKwlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoJmRldl9w
cml2LT5ydW50aW1lX3BtKTsKIAogCWlmIChXQVJOX09OKGZlbmNlID49IHZncHVfZmVuY2Vfc3oo
dmdwdSkpKQogCQlyZXR1cm47CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwppbmRleCAyZmNlYzFiZmIw
MzguLjViY2NmNzk1NTI4NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9n
ZW0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCkBAIC0xODA3LDcgKzE4
MDcsNyBAQCB2bV9mYXVsdF90IGk5MTVfZ2VtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAqdm1mKQog
CQlnb3RvIGVycl9mZW5jZTsKIAogCS8qIE1hcmsgYXMgYmVpbmcgbW1hcHBlZCBpbnRvIHVzZXJz
cGFjZSBmb3IgbGF0ZXIgcmV2b2NhdGlvbiAqLwotCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChk
ZXZfcHJpdik7CisJYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKCZkZXZfcHJpdi0+cnVudGltZV9w
bSk7CiAJaWYgKCFpOTE1X3ZtYV9zZXRfdXNlcmZhdWx0KHZtYSkgJiYgIW9iai0+dXNlcmZhdWx0
X2NvdW50KyspCiAJCWxpc3RfYWRkKCZvYmotPnVzZXJmYXVsdF9saW5rLCAmZGV2X3ByaXYtPm1t
LnVzZXJmYXVsdF9saXN0KTsKIAlHRU1fQlVHX09OKCFvYmotPnVzZXJmYXVsdF9jb3VudCk7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9mZW5jZV9yZWcuYyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2ZlbmNlX3JlZy5jCmluZGV4IDMwODRmNTJlMzM3
Mi4uNTBmNTIyNjRiMTYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dl
bV9mZW5jZV9yZWcuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9mZW5jZV9y
ZWcuYwpAQCAtMzU0LDcgKzM1NCw3IEBAIGk5MTVfdm1hX3Bpbl9mZW5jZShzdHJ1Y3QgaTkxNV92
bWEgKnZtYSkKIAkvKiBOb3RlIHRoYXQgd2UgcmV2b2tlIGZlbmNlcyBvbiBydW50aW1lIHN1c3Bl
bmQuIFRoZXJlZm9yZSB0aGUgdXNlcgogCSAqIG11c3Qga2VlcCB0aGUgZGV2aWNlIGF3YWtlIHdo
aWxzdCB1c2luZyB0aGUgZmVuY2UuCiAJICovCi0JYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHZt
YS0+dm0tPmk5MTUpOworCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCgmdm1hLT52bS0+aTkxNS0+
cnVudGltZV9wbSk7CiAKIAkvKiBKdXN0IHVwZGF0ZSBvdXIgcGxhY2UgaW4gdGhlIExSVSBpZiBv
dXIgZmVuY2UgaXMgZ2V0dGluZyByZXVzZWQuICovCiAJaWYgKHZtYS0+ZmVuY2UpIHsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfaXJxLmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pOTE1X2lycS5jCmluZGV4IDIzMzIxMWZkZTBlYS4uMzJmNTZkZDY4YWM5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfaXJxLmMKQEAgLTU4OCw3ICs1ODgsNyBAQCB2b2lkIGdlbjZfZGlzYWJsZV9y
cHNfaW50ZXJydXB0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIHZvaWQg
Z2VuOV9yZXNldF9ndWNfaW50ZXJydXB0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiB7Ci0JYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKGRldl9wcml2KTsKKwlhc3NlcnRfcnBt
X3dha2Vsb2NrX2hlbGQoJmRldl9wcml2LT5ydW50aW1lX3BtKTsKIAogCXNwaW5fbG9ja19pcnEo
JmRldl9wcml2LT5pcnFfbG9jayk7CiAJZ2VuNl9yZXNldF9wbV9paXIoZGV2X3ByaXYsIGRldl9w
cml2LT5wbV9ndWNfZXZlbnRzKTsKQEAgLTU5Nyw3ICs1OTcsNyBAQCB2b2lkIGdlbjlfcmVzZXRf
Z3VjX2ludGVycnVwdHMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiB2b2lk
IGdlbjlfZW5hYmxlX2d1Y19pbnRlcnJ1cHRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIHsKLQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoZGV2X3ByaXYpOworCWFzc2VydF9y
cG1fd2FrZWxvY2tfaGVsZCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJc3Bpbl9sb2NrX2ly
cSgmZGV2X3ByaXYtPmlycV9sb2NrKTsKIAlpZiAoIWRldl9wcml2LT5ndWMuaW50ZXJydXB0c19l
bmFibGVkKSB7CkBAIC02MTEsNyArNjExLDcgQEAgdm9pZCBnZW45X2VuYWJsZV9ndWNfaW50ZXJy
dXB0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIHZvaWQgZ2VuOV9kaXNh
YmxlX2d1Y19pbnRlcnJ1cHRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsK
LQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoZGV2X3ByaXYpOworCWFzc2VydF9ycG1fd2FrZWxv
Y2tfaGVsZCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCiAJc3Bpbl9sb2NrX2lycSgmZGV2X3By
aXYtPmlycV9sb2NrKTsKIAlkZXZfcHJpdi0+Z3VjLmludGVycnVwdHNfZW5hYmxlZCA9IGZhbHNl
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKaW5kZXggZDRkMzA4YjZkMWQ4Li4wN2M4NGI4ZTI1NjAg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYwpAQCAtMzY0LDcgKzM2NCw3IEBAIHZvaWQgX19pb21l
bSAqaTkxNV92bWFfcGluX2lvbWFwKHN0cnVjdCBpOTE1X3ZtYSAqdm1hKQogCWludCBlcnI7CiAK
IAkvKiBBY2Nlc3MgdGhyb3VnaCB0aGUgR1RUIHJlcXVpcmVzIHRoZSBkZXZpY2UgdG8gYmUgYXdh
a2UuICovCi0JYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHZtYS0+dm0tPmk5MTUpOworCWFzc2Vy
dF9ycG1fd2FrZWxvY2tfaGVsZCgmdm1hLT52bS0+aTkxNS0+cnVudGltZV9wbSk7CiAKIAlsb2Nr
ZGVwX2Fzc2VydF9oZWxkKCZ2bWEtPnZtLT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAlpZiAo
V0FSTl9PTighaTkxNV92bWFfaXNfbWFwX2FuZF9mZW5jZWFibGUodm1hKSkpIHsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Nzci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfY3NyLmMKaW5kZXggNDUyN2I5NjYyMzMwLi5hZGUxYTNiZDc1YmMgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Nzci5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2Nzci5jCkBAIC0yNzMsNyArMjczLDcgQEAgdm9pZCBpbnRlbF9jc3JfbG9h
ZF9wcm9ncmFtKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAl9CiAKIAlmd19z
aXplID0gZGV2X3ByaXYtPmNzci5kbWNfZndfc2l6ZTsKLQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hl
bGQoZGV2X3ByaXYpOworCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCgmZGV2X3ByaXYtPnJ1bnRp
bWVfcG0pOwogCiAJcHJlZW1wdF9kaXNhYmxlKCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZHJ2LmgK
aW5kZXggYmQwNGYzOTRmYmQzLi4xM2ZjYjVkNTlkOWQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Ry
di5oCkBAIC0xNjQ2LDcgKzE2NDYsNyBAQCBhc3NlcnRfcnBtX2RldmljZV9ub3Rfc3VzcGVuZGVk
KHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKIH0KIAogc3RhdGljIGlubGluZSB2b2lkCi1f
X19fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9oZWxkKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJw
bSwgaW50IHdha2VyZWZfY291bnQpCitfX2Fzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChzdHJ1
Y3QgaTkxNV9ydW50aW1lX3BtICpycG0sIGludCB3YWtlcmVmX2NvdW50KQogewogCWFzc2VydF9y
cG1fZGV2aWNlX25vdF9zdXNwZW5kZWQocnBtKTsKIAlXQVJOX09OQ0UoIWludGVsX3JwbV9yYXdf
d2FrZXJlZl9jb3VudCh3YWtlcmVmX2NvdW50KSwKQEAgLTE2NTQsMzUgKzE2NTQsMjMgQEAgX19f
X2Fzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0s
IGludCB3YWtlcmVmX2NvdW50KQogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQKLV9fX19hc3NlcnRf
cnBtX3dha2Vsb2NrX2hlbGQoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtLCBpbnQgd2FrZXJl
Zl9jb3VudCkKK19fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHN0cnVjdCBpOTE1X3J1bnRpbWVf
cG0gKnJwbSwgaW50IHdha2VyZWZfY291bnQpCiB7Ci0JX19fX2Fzc2VydF9ycG1fcmF3X3dha2Vy
ZWZfaGVsZChycG0sIHdha2VyZWZfY291bnQpOworCV9fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9o
ZWxkKHJwbSwgd2FrZXJlZl9jb3VudCk7CiAJV0FSTl9PTkNFKCFpbnRlbF9ycG1fd2FrZWxvY2tf
Y291bnQod2FrZXJlZl9jb3VudCksCiAJCSAgIlJQTSB3YWtlbG9jayByZWYgbm90IGhlbGQgZHVy
aW5nIEhXIGFjY2Vzc1xuIik7CiB9CiAKIHN0YXRpYyBpbmxpbmUgdm9pZAotX19hc3NlcnRfcnBt
X3Jhd193YWtlcmVmX2hlbGQoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtKQorYXNzZXJ0X3Jw
bV9yYXdfd2FrZXJlZl9oZWxkKHN0cnVjdCBpOTE1X3J1bnRpbWVfcG0gKnJwbSkKIHsKLQlfX19f
YXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9oZWxkKHJwbSwgYXRvbWljX3JlYWQoJnJwbS0+d2FrZXJl
Zl9jb3VudCkpOworCV9fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9oZWxkKHJwbSwgYXRvbWljX3Jl
YWQoJnJwbS0+d2FrZXJlZl9jb3VudCkpOwogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQKLWFzc2Vy
dF9ycG1fcmF3X3dha2VyZWZfaGVsZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKK2Fz
c2VydF9ycG1fd2FrZWxvY2tfaGVsZChzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0pCiB7Ci0J
X19hc3NlcnRfcnBtX3Jhd193YWtlcmVmX2hlbGQoJmk5MTUtPnJ1bnRpbWVfcG0pOwotfQotCi1z
dGF0aWMgaW5saW5lIHZvaWQKLV9fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHN0cnVjdCBpOTE1
X3J1bnRpbWVfcG0gKnJwbSkKLXsKLQlfX19fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHJwbSwg
YXRvbWljX3JlYWQoJnJwbS0+d2FrZXJlZl9jb3VudCkpOwotfQotCi1zdGF0aWMgaW5saW5lIHZv
aWQKLWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSkKLXsKLQlfX2Fzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCgmaTkxNS0+cnVudGltZV9wbSk7CisJ
X19hc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQocnBtLCBhdG9taWNfcmVhZCgmcnBtLT53YWtlcmVm
X2NvdW50KSk7CiB9CiAKIC8qKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfcnVudGltZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVudGltZV9wbS5j
CmluZGV4IDJlMjFmNTYyZGY0NC4uMjcxMTUzZmQzYTMzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9ydW50aW1lX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfcnVudGltZV9wbS5jCkBAIC0zNzIsMTAgKzM3MiwxMCBAQCBpbnRlbF9ydW50aW1lX3Bt
X2FjcXVpcmUoc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtLCBib29sIHdha2Vsb2NrKQogewog
CWlmICh3YWtlbG9jaykgewogCQlhdG9taWNfYWRkKDEgKyBJTlRFTF9SUE1fV0FLRUxPQ0tfQklB
UywgJnJwbS0+d2FrZXJlZl9jb3VudCk7Ci0JCV9fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHJw
bSk7CisJCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChycG0pOwogCX0gZWxzZSB7CiAJCWF0b21p
Y19pbmMoJnJwbS0+d2FrZXJlZl9jb3VudCk7Ci0JCV9fYXNzZXJ0X3JwbV9yYXdfd2FrZXJlZl9o
ZWxkKHJwbSk7CisJCWFzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChycG0pOwogCX0KIH0KIApA
QCAtMzgzLDEwICszODMsMTAgQEAgc3RhdGljIHZvaWQKIGludGVsX3J1bnRpbWVfcG1fcmVsZWFz
ZShzdHJ1Y3QgaTkxNV9ydW50aW1lX3BtICpycG0sIGludCB3YWtlbG9jaykKIHsKIAlpZiAod2Fr
ZWxvY2spIHsKLQkJX19hc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQocnBtKTsKKwkJYXNzZXJ0X3Jw
bV93YWtlbG9ja19oZWxkKHJwbSk7CiAJCWF0b21pY19zdWIoSU5URUxfUlBNX1dBS0VMT0NLX0JJ
QVMsICZycG0tPndha2VyZWZfY291bnQpOwogCX0gZWxzZSB7Ci0JCV9fYXNzZXJ0X3JwbV9yYXdf
d2FrZXJlZl9oZWxkKHJwbSk7CisJCWFzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZChycG0pOwog
CX0KIAogCV9faW50ZWxfd2FrZXJlZl9kZWNfYW5kX2NoZWNrX3RyYWNraW5nKHJwbSk7CkBAIC0x
MDcyLDcgKzEwNzIsNyBAQCBzdGF0aWMgdm9pZCBhc3NlcnRfY2FuX2VuYWJsZV9kYzUoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCiAJV0FSTl9PTkNFKChJOTE1X1JFQUQoRENf
U1RBVEVfRU4pICYgRENfU1RBVEVfRU5fVVBUT19EQzUpLAogCQkgICJEQzUgYWxyZWFkeSBwcm9n
cmFtbWVkIHRvIGJlIGVuYWJsZWQuXG4iKTsKLQlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQoZGV2
X3ByaXYpOworCWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0p
OwogCiAJYXNzZXJ0X2Nzcl9sb2FkZWQoZGV2X3ByaXYpOwogfQpAQCAtMjE5MCw3ICsyMTkwLDcg
QEAgcmVsZWFzZV9hc3luY19wdXRfZG9tYWlucyhzdHJ1Y3QgaTkxNV9wb3dlcl9kb21haW5zICpw
b3dlcl9kb21haW5zLCB1NjQgbWFzaykKIAkgKiB3YWtlcmVmIHRvIG1ha2UgdGhlIHN0YXRlIGNo
ZWNrZXIgaGFwcHkgYWJvdXQgdGhlIEhXIGFjY2VzcyBkdXJpbmcKIAkgKiBwb3dlciB3ZWxsIGRp
c2FibGluZy4KIAkgKi8KLQlhc3NlcnRfcnBtX3Jhd193YWtlcmVmX2hlbGQoZGV2X3ByaXYpOwor
CWFzc2VydF9ycG1fcmF3X3dha2VyZWZfaGVsZCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCXdh
a2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldChkZXZfcHJpdik7CiAKIAlmb3JfZWFjaF9wb3dl
cl9kb21haW4oZG9tYWluLCBtYXNrKSB7CkBAIC01MDgwLDcgKzUwODAsNyBAQCBpbnRlbF93YWtl
cmVmX3QgaW50ZWxfcnVudGltZV9wbV9nZXRfbm9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCiB7CiAJc3RydWN0IGk5MTVfcnVudGltZV9wbSAqcnBtID0gJmk5MTUtPnJ1bnRp
bWVfcG07CiAKLQlfX2Fzc2VydF9ycG1fd2FrZWxvY2tfaGVsZChycG0pOworCWFzc2VydF9ycG1f
d2FrZWxvY2tfaGVsZChycG0pOwogCXBtX3J1bnRpbWVfZ2V0X25vcmVzdW1lKHJwbS0+a2Rldik7
CiAKIAlpbnRlbF9ydW50aW1lX3BtX2FjcXVpcmUocnBtLCB0cnVlKTsKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aW50ZWxfdW5jb3JlLmMKaW5kZXggZjc4NjY4MTIzZjAyLi4zMDAyODcyYjRhODggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3VuY29yZS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3VuY29yZS5jCkBAIC01ODMsNyArNTgzLDcgQEAgdm9pZCBpbnRlbF91
bmNvcmVfZm9yY2V3YWtlX2dldChzdHJ1Y3QgaW50ZWxfdW5jb3JlICp1bmNvcmUsCiAJaWYgKCF1
bmNvcmUtPmZ1bmNzLmZvcmNlX3dha2VfZ2V0KQogCQlyZXR1cm47CiAKLQlfX2Fzc2VydF9ycG1f
d2FrZWxvY2tfaGVsZCh1bmNvcmUtPnJwbSk7CisJYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHVu
Y29yZS0+cnBtKTsKIAogCXNwaW5fbG9ja19pcnFzYXZlKCZ1bmNvcmUtPmxvY2ssIGlycWZsYWdz
KTsKIAlfX2ludGVsX3VuY29yZV9mb3JjZXdha2VfZ2V0KHVuY29yZSwgZndfZG9tYWlucyk7CkBA
IC03MzcsNyArNzM3LDcgQEAgdm9pZCBhc3NlcnRfZm9yY2V3YWtlc19hY3RpdmUoc3RydWN0IGlu
dGVsX3VuY29yZSAqdW5jb3JlLAogCWlmICghdW5jb3JlLT5mdW5jcy5mb3JjZV93YWtlX2dldCkK
IAkJcmV0dXJuOwogCi0JX19hc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQodW5jb3JlLT5ycG0pOwor
CWFzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCh1bmNvcmUtPnJwbSk7CiAKIAlmd19kb21haW5zICY9
IHVuY29yZS0+ZndfZG9tYWluczsKIAlXQVJOKGZ3X2RvbWFpbnMgJiB+dW5jb3JlLT5md19kb21h
aW5zX2FjdGl2ZSwKQEAgLTEwNTQsNyArMTA1NCw3IEBAIHVuY2xhaW1lZF9yZWdfZGVidWcoc3Ry
dWN0IGludGVsX3VuY29yZSAqdW5jb3JlLAogCiAjZGVmaW5lIEdFTjJfUkVBRF9IRUFERVIoeCkg
XAogCXUjI3ggdmFsID0gMDsgXAotCV9fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHVuY29yZS0+
cnBtKTsKKwlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQodW5jb3JlLT5ycG0pOwogCiAjZGVmaW5l
IEdFTjJfUkVBRF9GT09URVIgXAogCXRyYWNlX2k5MTVfcmVnX3J3KGZhbHNlLCByZWcsIHZhbCwg
c2l6ZW9mKHZhbCksIHRyYWNlKTsgXApAQCAtMTA5Niw3ICsxMDk2LDcgQEAgX19nZW4yX3JlYWQo
NjQpCiAJdTMyIG9mZnNldCA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KHJlZyk7IFwKIAl1bnNpZ25l
ZCBsb25nIGlycWZsYWdzOyBcCiAJdSMjeCB2YWwgPSAwOyBcCi0JX19hc3NlcnRfcnBtX3dha2Vs
b2NrX2hlbGQodW5jb3JlLT5ycG0pOyBcCisJYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHVuY29y
ZS0+cnBtKTsgXAogCXNwaW5fbG9ja19pcnFzYXZlKCZ1bmNvcmUtPmxvY2ssIGlycWZsYWdzKTsg
XAogCXVuY2xhaW1lZF9yZWdfZGVidWcodW5jb3JlLCByZWcsIHRydWUsIHRydWUpCiAKQEAgLTEx
NzAsNyArMTE3MCw3IEBAIF9fZ2VuNl9yZWFkKDY0KQogCiAjZGVmaW5lIEdFTjJfV1JJVEVfSEVB
REVSIFwKIAl0cmFjZV9pOTE1X3JlZ19ydyh0cnVlLCByZWcsIHZhbCwgc2l6ZW9mKHZhbCksIHRy
YWNlKTsgXAotCV9fYXNzZXJ0X3JwbV93YWtlbG9ja19oZWxkKHVuY29yZS0+cnBtKTsgXAorCWFz
c2VydF9ycG1fd2FrZWxvY2tfaGVsZCh1bmNvcmUtPnJwbSk7IFwKIAogI2RlZmluZSBHRU4yX1dS
SVRFX0ZPT1RFUgogCkBAIC0xMjA4LDcgKzEyMDgsNyBAQCBfX2dlbjJfd3JpdGUoMzIpCiAJdTMy
IG9mZnNldCA9IGk5MTVfbW1pb19yZWdfb2Zmc2V0KHJlZyk7IFwKIAl1bnNpZ25lZCBsb25nIGly
cWZsYWdzOyBcCiAJdHJhY2VfaTkxNV9yZWdfcncodHJ1ZSwgcmVnLCB2YWwsIHNpemVvZih2YWwp
LCB0cmFjZSk7IFwKLQlfX2Fzc2VydF9ycG1fd2FrZWxvY2tfaGVsZCh1bmNvcmUtPnJwbSk7IFwK
Kwlhc3NlcnRfcnBtX3dha2Vsb2NrX2hlbGQodW5jb3JlLT5ycG0pOyBcCiAJc3Bpbl9sb2NrX2ly
cXNhdmUoJnVuY29yZS0+bG9jaywgaXJxZmxhZ3MpOyBcCiAJdW5jbGFpbWVkX3JlZ19kZWJ1Zyh1
bmNvcmUsIHJlZywgZmFsc2UsIHRydWUpCiAKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRl
bC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
L21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

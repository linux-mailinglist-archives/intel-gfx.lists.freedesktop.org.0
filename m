Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 20720BF56F
	for <lists+intel-gfx@lfdr.de>; Thu, 26 Sep 2019 17:02:53 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3D9276ED00;
	Thu, 26 Sep 2019 15:02:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 31B466ED00
 for <intel-gfx@lists.freedesktop.org>; Thu, 26 Sep 2019 15:02:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Sep 2019 08:02:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,552,1559545200"; d="scan'208";a="201637375"
Received: from genxfsim-desktop.iind.intel.com ([10.223.74.120])
 by orsmga002.jf.intel.com with ESMTP; 26 Sep 2019 08:02:46 -0700
From: Anshuman Gupta <anshuman.gupta@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 26 Sep 2019 20:26:18 +0530
Message-Id: <20190926145621.9090-5-anshuman.gupta@intel.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190926145621.9090-1-anshuman.gupta@intel.com>
References: <20190926145621.9090-1-anshuman.gupta@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v9 4/7] drm/i915/tgl: Do modeset to enable and
 configure DC3CO exitline
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

REMzQ08gZW5hYmxpbmcgQi5TcGVjcyBzZXF1ZW5jZSByZXF1aXJlcyB0byBlbmFibGUgZW5kIGNv
bmZpZ3VyZQpleGl0IHNjYW5saW5lcyB0byBUUkFOU19FWElUTElORSByZWdpc3RlciwgcHJvZ3Jh
bW1pbmcgdGhpcyByZWdpc3RlcgpoYXMgdG8gYmUgcGFydCBvZiBtb2Rlc2V0IHNlcXVlbmNlIGFz
IHRoaXMgY2FuJ3QgYmUgY2hhbmdlIHdoZW4KdHJhbnNjb2RlciBvciBwb3J0IGlzIGVuYWJsZWQu
CldoZW4gc3lzdGVtIGJvb3RzIHdpdGggb25seSBlRFAgcGFuZWwgdGhlcmUgbWF5IG5vdCBiZSBy
ZWFsCm1vZGVzZXQgYXMgQklPUyBoYXMgYWxyZWFkeSBwcm9ncmFtbWVkIHRoZSBuZWNlc3Nhcnkg
cmVnaXN0ZXJzLAp0aGVyZWZvcmUgaXQgbmVlZHMgdG8gZm9yY2UgYSBtb2Rlc2V0IHRvIGVuYWJs
ZSBhbmQgY29uZmlndXJlCkRDM0NPIGV4aXRsaW5lLgoKdjE6IENvbXB1dGluZyBkYzNjb19leGl0
bGluZSBjcnRjIHN0YXRlIGZyb20gYSBEUCBlbmNvZGVyCiAgICBjb21wdXRlIGNvbmZpZy4gW0lt
cmVdCiAgICBFbmFibGluZyBhbmQgZGlzYWJsaW5nIERDM0NPIFBTUjIgdHJhbnNjb2RlciBleGl0
bGluZSBmcm9tCiAgICBlbmNvZGVyIHByZV9lbmFibGUgYW5kIHBvc3RfZGlzYWJsZSBob29rcy4g
W0ltcmVdCiAgICBDb21wdXRpbmcgZGMzY29fZXhpdGxpbmUgaW5zdGVhZCBvZiBoYXNfZGMzY29f
ZXhpdGxpbmUgYm9vbC4gW0ltcmVdCgpDYzogSmFuaSBOaWt1bGEgPGphbmkubmlrdWxhQGludGVs
LmNvbT4KQ2M6IEltcmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4KQ2M6IEFuaW1lc2ggTWFu
bmEgPGFuaW1lc2gubWFubmFAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBBbnNodW1hbiBHdXB0
YSA8YW5zaHVtYW4uZ3VwdGFAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMgICAgICB8ICA3ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgMSArCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3Bvd2VyLmMgICAgfCA4NyArKysrKysrKysrKysrKysrKysrCiAuLi4vZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmggICAgfCAgOCArKwogLi4uL2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kcC5jICAgICAgIHwgIDIgKwogNiBmaWxlcyBjaGFuZ2VkLCAxMDYg
aW5zZXJ0aW9ucygrKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGRpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCmlu
ZGV4IGFhNDcwYzcwYTE5OC4uZTBlMjc2OTA5ZTc2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMKQEAgLTMyMTIsNiArMzIxMiw4IEBAIHN0YXRpYyB2b2lkIHRnbF9k
ZGlfcHJlX2VuYWJsZV9kcChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlpbnQgbGV2
ZWwgPSBpbnRlbF9kZGlfZHBfbGV2ZWwoaW50ZWxfZHApOwogCWVudW0gdHJhbnNjb2RlciB0cmFu
c2NvZGVyID0gY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXI7CiAKKwkvKiBQcm9ncmFtIHRoZSBk
YzNjbyBwc3IyIHRyYW5zY29kZXIgZXhpdGxpbmUgKi8KKwl0Z2xfc2V0X3BzcjJfdHJhbnNjb2Rl
cl9leGl0bGluZShjcnRjX3N0YXRlKTsKIAlpbnRlbF9kcF9zZXRfbGlua19wYXJhbXMoaW50ZWxf
ZHAsIGNydGNfc3RhdGUtPnBvcnRfY2xvY2ssCiAJCQkJIGNydGNfc3RhdGUtPmxhbmVfY291bnQs
IGlzX21zdCk7CiAKQEAgLTM1MjQsNiArMzUyNiw4IEBAIHN0YXRpYyB2b2lkIGludGVsX2RkaV9w
b3N0X2Rpc2FibGVfZHAoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkJCQkgIGRp
Z19wb3J0LT5kZGlfaW9fcG93ZXJfZG9tYWluKTsKIAogCWludGVsX2RkaV9jbGtfZGlzYWJsZShl
bmNvZGVyKTsKKwkvKiBEaXNhYmxlIHRoZSBkYzNjbyBwc3IyIHRyYW5zY29kZXIgZXhpdGxpbmUg
Ki8KKwl0Z2xfY2xlYXJfcHNyMl90cmFuc2NvZGVyX2V4aXRsaW5lKG9sZF9jcnRjX3N0YXRlKTsK
IH0KIAogc3RhdGljIHZvaWQgaW50ZWxfZGRpX3Bvc3RfZGlzYWJsZV9oZG1pKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLApAQCAtNDA3MCw2ICs0MDc0LDkgQEAgdm9pZCBpbnRlbF9kZGlf
Z2V0X2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJYnJlYWs7CiAJfQog
CisJaWYgKGVuY29kZXItPnR5cGUgPT0gSU5URUxfT1VUUFVUX0VEUCkKKwkJdGdsX2RjM2NvX2V4
aXRsaW5lX2dldF9jb25maWcocGlwZV9jb25maWcpOworCiAJcGlwZV9jb25maWctPmhhc19hdWRp
byA9CiAJCWludGVsX2RkaV9pc19hdWRpb19lbmFibGVkKGRldl9wcml2LCBjcHVfdHJhbnNjb2Rl
cik7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5k
ZXggOGYxMjVmMTYyNGJkLi5hNDY3Yzc1MjNlMDYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0xMjgyMCw2ICsxMjgyMCw3IEBAIGludGVsX3Bp
cGVfY29uZmlnX2NvbXBhcmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmN1cnJlbnRf
Y29uZmlnLAogCiAJUElQRV9DT05GX0NIRUNLX0kocGl4ZWxfbXVsdGlwbGllcik7CiAJUElQRV9D
T05GX0NIRUNLX0kob3V0cHV0X2Zvcm1hdCk7CisJUElQRV9DT05GX0NIRUNLX0koZGMzY29fZXhp
dGxpbmUpOwogCVBJUEVfQ09ORl9DSEVDS19CT09MKGhhc19oZG1pX3NpbmspOwogCWlmICgoSU5U
RUxfR0VOKGRldl9wcml2KSA8IDggJiYgIUlTX0hBU1dFTEwoZGV2X3ByaXYpKSB8fAogCSAgICBJ
U19WQUxMRVlWSUVXKGRldl9wcml2KSB8fCBJU19DSEVSUllWSUVXKGRldl9wcml2KSkKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKaW5k
ZXggOWY3ODc1NTZmODBkLi44NGU0Y2ZkOTViNDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jCkBAIC0xOSw2ICsxOSw3IEBACiAj
aW5jbHVkZSAiaW50ZWxfaG90cGx1Zy5oIgogI2luY2x1ZGUgImludGVsX3NpZGViYW5kLmgiCiAj
aW5jbHVkZSAiaW50ZWxfdGMuaCIKKyNpbmNsdWRlICJpbnRlbF9wbS5oIgogCiBib29sIGludGVs
X2Rpc3BsYXlfcG93ZXJfd2VsbF9pc19lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAkJCQkJIGVudW0gaTkxNV9wb3dlcl93ZWxsX2lkIHBvd2VyX3dlbGxfaWQpOwpA
QCAtNzg1LDYgKzc4Niw5MiBAQCBzdGF0aWMgdm9pZCBnZW45X3NldF9kY19zdGF0ZShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBzdGF0ZSkKIAlkZXZfcHJpdi0+Y3NyLmRj
X3N0YXRlID0gdmFsICYgbWFzazsKIH0KIAordm9pZCB0Z2xfY2xlYXJfcHNyMl90cmFuc2NvZGVy
X2V4aXRsaW5lKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjc3RhdGUpCit7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjc3RhdGUtPmJhc2UuY3J0
Yy0+ZGV2KTsKKwl1MzIgdmFsOworCisJaWYgKCFjc3RhdGUtPmRjM2NvX2V4aXRsaW5lKQorCQly
ZXR1cm47CisKKwl2YWwgPSBJOTE1X1JFQUQoRVhJVExJTkUoY3N0YXRlLT5jcHVfdHJhbnNjb2Rl
cikpOworCXZhbCAmPSB+KEVYSVRMSU5FX01BU0sgfCBFWElUTElORV9FTkFCTEUpOworCUk5MTVf
V1JJVEUoRVhJVExJTkUoY3N0YXRlLT5jcHVfdHJhbnNjb2RlciksIHZhbCk7Cit9CisKK3ZvaWQg
dGdsX3NldF9wc3IyX3RyYW5zY29kZXJfZXhpdGxpbmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNzdGF0ZSkKK3sKKwl1MzIgdmFsLCBleGl0X3NjYW5saW5lczsKKwlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNzdGF0ZS0+YmFzZS5jcnRjLT5kZXYp
OworCisJaWYgKCFjc3RhdGUtPmRjM2NvX2V4aXRsaW5lKQorCQlyZXR1cm47CisKKwlleGl0X3Nj
YW5saW5lcyA9IGNzdGF0ZS0+ZGMzY29fZXhpdGxpbmU7CisJZXhpdF9zY2FubGluZXMgPDw9IEVY
SVRMSU5FX1NISUZUOworCXZhbCA9IEk5MTVfUkVBRChFWElUTElORShjc3RhdGUtPmNwdV90cmFu
c2NvZGVyKSk7CisJdmFsICY9IH4oRVhJVExJTkVfTUFTSyB8IEVYSVRMSU5FX0VOQUJMRSk7CisJ
dmFsIHw9IGV4aXRfc2NhbmxpbmVzOworCXZhbCB8PSBFWElUTElORV9FTkFCTEU7CisJSTkxNV9X
UklURShFWElUTElORShjc3RhdGUtPmNwdV90cmFuc2NvZGVyKSwgdmFsKTsKK30KKworLyoKKyAq
IERDM0NPIHJlcXVpcmVzIHRvIGVuYWJsZSBleGl0bGluZSBhbmQgcHJvZ3JhbSBEQzNDTyByZXF1
aXJlcworICogZXhpdCBzY2FubGluZXMgdG8gVFJBTlNfRVhJVExJTkUgcmVnaXN0ZXIsIHdoaWNo
IHNob3VsZCBvbmx5CisgKiBjaGFuZ2UgYmVmb3JlIHRyYW5zY29kZXIgb3IgcG9ydCBhcmUgZW5h
YmxlZC4KKyAqIFRoaXMgcmVxdWlyZXMgdG8gZGlzYWJsZSB0aGUgZmFzdHNldCBhdCBib290IGZv
ciBlRFAgb3V0cHV0LgorICovCit2b2lkIHRnbF9kYzNjb19leGl0bGluZV9jb21wdXRlX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgICAgICAgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNzdGF0ZSkKK3sKKwl1MzIgZXhpdF9zY2FubGluZXM7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjc3RhdGUtPmJhc2UuY3J0Yy0+ZGV2
KTsKKwl1MzIgY3J0Y192ZGlzcGxheSA9IGNzdGF0ZS0+YmFzZS5hZGp1c3RlZF9tb2RlLmNydGNf
dmRpc3BsYXk7CisKKwlpZiAoIUlTX1RJR0VSTEFLRShkZXZfcHJpdikpCisJCXJldHVybjsKKwor
CWlmICghKGRldl9wcml2LT5jc3IuYWxsb3dlZF9kY19tYXNrICYgRENfU1RBVEVfRU5fREMzQ08p
KQorCQlyZXR1cm47CisKKwkvKiBCLlNwZWNzOjQ5MTk2IERDM0NPIG9ubHkgd29ya3Mgd2l0aCBw
aXBlQSBhbmQgRERJQS4qLworCWlmIChlbmNvZGVyLT5wb3J0ICE9IFBPUlRfQSkKKwkJcmV0dXJu
OworCisJaWYgKCFjc3RhdGUtPmhhc19wc3IyIHx8ICFjc3RhdGUtPmJhc2UuYWN0aXZlKQorCQly
ZXR1cm47CisKKwkvKgorCSAqIERDM0NPIEV4aXQgdGltZSAyMDB1cyBCLlNwZWMgNDkxOTYKKwkg
KiBQU1IyIHRyYW5zY29kZXIgRWFybHkgRXhpdCBzY2FubGluZXMgPSBST1VORFVQKDIwMCAvIGxp
bmUgdGltZSkgKyAxCisJICovCisJZXhpdF9zY2FubGluZXMgPQorCQlpbnRlbF91c2Vjc190b19z
Y2FubGluZXMoJmNzdGF0ZS0+YmFzZS5hZGp1c3RlZF9tb2RlLCAyMDApICsgMTsKKworCWlmIChX
QVJOX09OKGV4aXRfc2NhbmxpbmVzID4gY3J0Y192ZGlzcGxheSkpCisJCXJldHVybjsKKworCWNz
dGF0ZS0+ZGMzY29fZXhpdGxpbmUgPSBjcnRjX3ZkaXNwbGF5IC0gZXhpdF9zY2FubGluZXM7Cit9
CisKK3ZvaWQgdGdsX2RjM2NvX2V4aXRsaW5lX2dldF9jb25maWcoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpCit7CisJdTMyIHZhbDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGNfc3RhdGUtPmJhc2UuY3J0Yy0+ZGV2KTsKKworCWlm
ICghSVNfVElHRVJMQUtFKGRldl9wcml2KSkKKwkJcmV0dXJuOworCisJaWYgKCEoZGV2X3ByaXYt
PmNzci5hbGxvd2VkX2RjX21hc2sgJiBEQ19TVEFURV9FTl9EQzNDTykpCisJCXJldHVybjsKKwor
CXZhbCA9IEk5MTVfUkVBRChFWElUTElORShjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcikpOwor
CisJaWYgKHZhbCAmIEVYSVRMSU5FX0VOQUJMRSkKKwkJY3J0Y19zdGF0ZS0+ZGMzY29fZXhpdGxp
bmUgPSB2YWwgJiBFWElUTElORV9NQVNLOworfQorCiBzdGF0aWMgdm9pZAogYWxsb3dlZF9kY19t
YXNrX3RvX3RhcmdldF9kY19zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
CiB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3Bs
YXlfcG93ZXIuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9w
b3dlci5oCmluZGV4IDEzZmM3MDU3OTlmZC4uNGU3NmY5M2JiZWU1IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuaApAQCAtOCwxMCAr
OCwxMyBAQAogCiAjaW5jbHVkZSAiaW50ZWxfZGlzcGxheS5oIgogI2luY2x1ZGUgImludGVsX3J1
bnRpbWVfcG0uaCIKKyNpbmNsdWRlICJpbnRlbF9zcHJpdGUuaCIKICNpbmNsdWRlICJpOTE1X3Jl
Zy5oIgogCiBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKIHN0cnVjdCBpbnRlbF9lbmNvZGVyOwor
c3RydWN0IGludGVsX2NydGNfc3RhdGU7CitzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlOwogCiBl
bnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIHsKIAlQT1dFUl9ET01BSU5fRElTUExBWV9D
T1JFLApAQCAtMjU4LDYgKzI2MSwxMSBAQCB2b2lkIGludGVsX2Rpc3BsYXlfcG93ZXJfcmVzdW1l
X2Vhcmx5KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKIHZvaWQgaW50ZWxfZGlzcGxh
eV9wb3dlcl9zdXNwZW5kKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKIHZvaWQgaW50
ZWxfZGlzcGxheV9wb3dlcl9yZXN1bWUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpOwog
dm9pZCB0Z2xfc2V0X3RhcmdldF9kY19zdGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIHUzMiBzdGF0ZSk7Cit2b2lkIHRnbF9kYzNjb19leGl0bGluZV9jb21wdXRlX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgICAgICAgc3RydWN0IGludGVs
X2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOwordm9pZCB0Z2xfZGMzY29fZXhpdGxpbmVfZ2V0X2Nv
bmZpZyhzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7Cit2b2lkIHRnbF9jbGVh
cl9wc3IyX3RyYW5zY29kZXJfZXhpdGxpbmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KnN0YXRlKTsKK3ZvaWQgdGdsX3NldF9wc3IyX3RyYW5zY29kZXJfZXhpdGxpbmUoY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKnN0YXRlKTsKIAogY29uc3QgY2hhciAqCiBpbnRlbF9kaXNw
bGF5X3Bvd2VyX2RvbWFpbl9zdHIoZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21h
aW4pOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaAppbmRleCA5NzY2NjlmMDFhOGMuLjhhYTM4YWNlNzg0NSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAgLTg3MCw2
ICs4NzAsNyBAQCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSB7CiAKIAlib29sIGhhc19wc3I7CiAJ
Ym9vbCBoYXNfcHNyMjsKKwl1MzIgZGMzY29fZXhpdGxpbmU7CiAKIAkvKgogCSAqIEZyZXF1ZW5j
ZSB0aGUgZHBsbCBmb3IgdGhlIHBvcnQgc2hvdWxkIHJ1biBhdC4gRGlmZmVycyBmcm9tIHRoZQpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCmluZGV4IDJiMWU3MWY5OTJiMC4u
NzdkZDI5NjI3NjEwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCkBA
IC0yMzY4LDYgKzIzNjgsOCBAQCBpbnRlbF9kcF9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxf
ZW5jb2RlciAqZW5jb2RlciwKIAogCWludGVsX3Bzcl9jb21wdXRlX2NvbmZpZyhpbnRlbF9kcCwg
cGlwZV9jb25maWcpOwogCisJdGdsX2RjM2NvX2V4aXRsaW5lX2NvbXB1dGVfY29uZmlnKGVuY29k
ZXIsIHBpcGVfY29uZmlnKTsKKwogCWludGVsX2hkY3BfdHJhbnNjb2Rlcl9jb25maWcoaW50ZWxf
Y29ubmVjdG9yLAogCQkJCSAgICAgcGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyKTsKIAotLSAK
Mi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJ
bnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0
cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

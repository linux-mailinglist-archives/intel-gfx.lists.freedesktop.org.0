Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 90D7D74BA7
	for <lists+intel-gfx@lfdr.de>; Thu, 25 Jul 2019 12:34:08 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C96496E6E8;
	Thu, 25 Jul 2019 10:34:06 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D8BF86E6E8
 for <intel-gfx@lists.freedesktop.org>; Thu, 25 Jul 2019 10:34:05 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga006.jf.intel.com ([10.7.209.51])
 by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 25 Jul 2019 03:34:05 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,306,1559545200"; d="scan'208";a="175171003"
Received: from roszkopf-mobl.ger.corp.intel.com (HELO
 delly.ger.corp.intel.com) ([10.249.32.173])
 by orsmga006.jf.intel.com with ESMTP; 25 Jul 2019 03:33:52 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 25 Jul 2019 13:33:24 +0300
Message-Id: <20190725103327.27010-7-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190725103327.27010-1-lionel.g.landwerlin@intel.com>
References: <20190725103327.27010-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v10 6/9] drm/i915: add a new perf configuration
 execbuf parameter
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2Ugd2FudCB0aGUgYWJpbGl0eSB0byBkaXNwYXRjaCBhIHNldCBvZiBjb21tYW5kIGJ1ZmZlciB0
byB0aGUKaGFyZHdhcmUsIGVhY2ggd2l0aCBhIGRpZmZlcmVudCBPQSBjb25maWd1cmF0aW9uLiBU
byBhY2hpZXZlIHRoaXMsIHdlCnJldXNlIGEgY291cGxlIG9mIGZpZWxkcyBmcm9tIHRoZSBleGVj
YnVmMiBzdHJ1Y3QgKEkgQ0FOIEhBWgpleGVjYnVmMz8pIHRvIG5vdGlmeSB3aGF0IE9BIGNvbmZp
Z3VyYXRpb24gc2hvdWxkIGJlIHVzZWQgZm9yIGEgYmF0Y2gKYnVmZmVyLiBUaGlzIHJlcXVpcmVz
IHRoZSBwcm9jZXNzIG1ha2luZyB0aGUgZXhlY2J1ZiB3aXRoIHRoaXMgZmxhZyB0bwphbHNvIG93
biB0aGUgcGVyZiBmZCBhdCB0aGUgdGltZSBvZiBleGVjYnVmLgoKdjI6IEFkZCBhIGVtaXRfb2Ff
Y29uZmlnKCkgdmZ1bmMgaW4gdGhlIGludGVsX2VuZ2luZV9jcyAoQ2hyaXMpCiAgICBNb3ZlIG9h
X2NvbmZpZyB2bWEgdG8gYWN0aXZlIChDaHJpcykKCnYzOiBEb24ndCBkcm9wIHRoZSBsb2NrIGZv
ciBlbmdpbmUgbG9va3VwIChDaHJpcykKICAgIE1vdmUgT0EgY29uZmlnIHZtYSB0byBhY3RpdmUg
YmVmb3JlIHdyaXRpbmcgdGhlIHJpbmdidWZmZXIgKENocmlzKQoKdjQ6IFJldXNlIGk5MTVfdXNl
cl9leHRlbnNpb25fZm4KICAgIFNlcmlhbGl6ZSByZXF1ZXN0cyB3aXRoIE9BIGNvbmZpZyB1cGRh
dGVzCgp2NTogQ2hlY2sgdGhhdCB0aGUgY2hhaW5lZCBleHRlbnNpb24gaXMgb25seSBwcmVzZW50
IG9uY2UgKENocmlzKQogICAgVW5waW4gb2Ffdm1hIGluIG1haW4gcGF0aCAoQ2hyaXMpCgp2Njog
VXNlIEJJVF9VTEwgKENocmlzKQoKdjc6IEhvbGQgZHJtLnN0cnVjdF9tdXRleCB3aGVuIHNlcmlh
bGl6aW5nIHRoZSByZXF1ZXN0IHdpdGggT0EgY29uZmlnIChDaHJpcykKClNpZ25lZC1vZmYtYnk6
IExpb25lbCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4KLS0tCiAu
Li4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgICAgfCAxMzMgKysrKysr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAg
ICAgfCAgIDMgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgg
IHwgICA5ICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAgICAgICAgICAg
fCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jICAgIHwg
ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jICAgICAgICAgICAgICAgfCAg
IDQgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgIHwgICA4
ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYyAgICAgICAgICAgICAgfCAgMjUg
KystLQogaW5jbHVkZS91YXBpL2RybS9pOTE1X2RybS5oICAgICAgICAgICAgICAgICAgIHwgIDM3
ICsrKysrCiA5IGZpbGVzIGNoYW5nZWQsIDIwNyBpbnNlcnRpb25zKCspLCAxNyBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1
ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpp
bmRleCAwMjNhZDc4MjMyZTYuLjQ1Y2JlYmYxYTg5NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCkBAIC0yODMsNyArMjgzLDEyIEBAIHN0cnVj
dCBpOTE1X2V4ZWNidWZmZXIgewogCXN0cnVjdCB7CiAJCXU2NCBmbGFnczsgLyoqIEF2YWlsYWJs
ZSBleHRlbnNpb25zIHBhcmFtZXRlcnMgKi8KIAkJc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVm
ZmVyX2V4dF90aW1lbGluZV9mZW5jZXMgdGltZWxpbmVfZmVuY2VzOworCQlzdHJ1Y3QgZHJtX2k5
MTVfZ2VtX2V4ZWNidWZmZXJfZXh0X3BlcmYgcGVyZl9jb25maWc7CiAJfSBleHRlbnNpb25zOwor
CisJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWc7IC8qKiBIVyBjb25maWd1cmF0aW9u
IGZvciBPQSwgTlVMTCBpcyBub3QgbmVlZGVkLiAqLworCXN0cnVjdCBkcm1faTkxNV9nZW1fb2Jq
ZWN0ICpvYV9ibzsKKwlzdHJ1Y3QgaTkxNV92bWEgKm9hX3ZtYTsKIH07CiAKICNkZWZpbmUgZXhl
Y19lbnRyeShFQiwgVk1BKSAoJihFQiktPmV4ZWNbKFZNQSktPmV4ZWNfZmxhZ3MgLSAoRUIpLT5m
bGFnc10pCkBAIC0xMjEwLDYgKzEyMTUsNDIgQEAgc3RhdGljIGludCByZWxvY19tb3ZlX3RvX2dw
dShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0IGk5MTVfdm1hICp2bWEpCiAJcmV0dXJu
IGVycjsKIH0KIAorCitzdGF0aWMgaW50CitnZXRfZXhlY2J1Zl9vYV9jb25maWcoc3RydWN0IGk5
MTVfZXhlY2J1ZmZlciAqZWIpCit7CisJc3RydWN0IGZpbGUgKnBlcmZfZmlsZTsKKwlpbnQgZXJy
ID0gMDsKKworCWViLT5vYV9jb25maWcgPSBOVUxMOworCWViLT5vYV92bWEgPSBOVUxMOworCWVi
LT5vYV9ibyA9IE5VTEw7CisKKwlpZiAoKGViLT5leHRlbnNpb25zLmZsYWdzICYgQklUX1VMTChE
Uk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRikpID09IDApCisJCXJldHVybiAwOworCisJ
cGVyZl9maWxlID0gZmdldChlYi0+ZXh0ZW5zaW9ucy5wZXJmX2NvbmZpZy5wZXJmX2ZkKTsKKwlp
ZiAoIXBlcmZfZmlsZSkgeworCQllcnIgPSAtRUlOVkFMOworCQlnb3RvIG91dDsKKwl9CisKKwlp
ZiAocGVyZl9maWxlLT5wcml2YXRlX2RhdGEgIT0gZWItPmk5MTUtPnBlcmYub2EuZXhjbHVzaXZl
X3N0cmVhbSkKKwkJZXJyID0gLUVJTlZBTDsKKworCWlmICghZXJyKSB7CisJCWVyciA9IGk5MTVf
cGVyZl9nZXRfb2FfY29uZmlnKAorCQkJZWItPmk5MTUsCisJCQllYi0+ZXh0ZW5zaW9ucy5wZXJm
X2NvbmZpZy5vYV9jb25maWcsCisJCQkmZWItPm9hX2NvbmZpZywgJmViLT5vYV9ibyk7CisJfQor
CisJZnB1dChwZXJmX2ZpbGUpOworCitvdXQ6CisJcmV0dXJuIGVycjsKK30KKwogc3RhdGljIGlu
dCBfX3JlbG9jX2dwdV9hbGxvYyhzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwKIAkJCSAgICAg
c3RydWN0IGk5MTVfdm1hICp2bWEsCiAJCQkgICAgIHVuc2lnbmVkIGludCBsZW4pCkBAIC0yMDcy
LDYgKzIxMTMsNDIgQEAgYWRkX3RvX2NsaWVudChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3Ry
dWN0IGRybV9maWxlICpmaWxlKQogCWxpc3RfYWRkX3RhaWwoJnJxLT5jbGllbnRfbGluaywgJnJx
LT5maWxlX3ByaXYtPm1tLnJlcXVlc3RfbGlzdCk7CiB9CiAKK3N0YXRpYyBpbnQgZWJfb2FfY29u
ZmlnKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQoreworCWludCByZXQ7CisKKwlpZiAoIWVi
LT5vYV9jb25maWcpCisJCXJldHVybiAwOworCisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmZWItPmk5
MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOyAvKiBvYV9jb25maWcgKi8KKworCXJldCA9IGk5MTVfYWN0
aXZlX3JlcXVlc3Rfc2V0KCZlYi0+ZW5naW5lLT5sYXN0X29hX2NvbmZpZywKKwkJCQkgICAgICBl
Yi0+cmVxdWVzdCk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCS8qCisJICogSWYgdGhl
IGNvbmZpZyBoYXNuJ3QgY2hhbmdlZCwgc2tpcCByZWNvbmZpZ3VyaW5nIHRoZSBIVyAodGhpcyBp
cworCSAqIHN1YmplY3QgdG8gYSBkZWxheSB3ZSB3YW50IHRvIGF2b2lkIGhhcyBtdWNoIGFzIHBv
c3NpYmxlKS4KKwkgKi8KKwlpZiAoZWItPm9hX2NvbmZpZyA9PSBlYi0+aTkxNS0+cGVyZi5vYS5l
eGNsdXNpdmVfc3RyZWFtLT5vYV9jb25maWcpCisJCXJldHVybiAwOworCisJcmV0ID0gaTkxNV92
bWFfbW92ZV90b19hY3RpdmUoZWItPm9hX3ZtYSwgZWItPnJlcXVlc3QsIDApOworCWlmIChyZXQp
CisJCXJldHVybiByZXQ7CisKKwlyZXQgPSBlYi0+ZW5naW5lLT5lbWl0X2JiX3N0YXJ0KGViLT5y
ZXF1ZXN0LAorCQkJCQllYi0+b2Ffdm1hLT5ub2RlLnN0YXJ0LAorCQkJCQkwLCBJOTE1X0RJU1BB
VENIX1NFQ1VSRSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCXN3YXAoZWItPm9hX2Nv
bmZpZywgZWItPmk5MTUtPnBlcmYub2EuZXhjbHVzaXZlX3N0cmVhbS0+b2FfY29uZmlnKTsKKwor
CXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGViX3N1Ym1pdChzdHJ1Y3QgaTkxNV9leGVjYnVm
ZmVyICplYikKIHsKIAlpbnQgZXJyOwpAQCAtMjA5OCw2ICsyMTc1LDEwIEBAIHN0YXRpYyBpbnQg
ZWJfc3VibWl0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCQkJcmV0dXJuIGVycjsKIAl9
CiAKKwllcnIgPSBlYl9vYV9jb25maWcoZWIpOworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisK
IAllcnIgPSBlYi0+ZW5naW5lLT5lbWl0X2JiX3N0YXJ0KGViLT5yZXF1ZXN0LAogCQkJCQllYi0+
YmF0Y2gtPm5vZGUuc3RhcnQgKwogCQkJCQllYi0+YmF0Y2hfc3RhcnRfb2Zmc2V0LApAQCAtMjUz
Nyw4ICsyNjE4LDI1IEBAIHN0YXRpYyBpbnQgcGFyc2VfdGltZWxpbmVfZmVuY2VzKHN0cnVjdCBp
OTE1X3VzZXJfZXh0ZW5zaW9uIF9fdXNlciAqZXh0LCB2b2lkICpkCiAJcmV0dXJuIDA7CiB9CiAK
K3N0YXRpYyBpbnQgcGFyc2VfcGVyZl9jb25maWcoc3RydWN0IGk5MTVfdXNlcl9leHRlbnNpb24g
X191c2VyICpleHQsIHZvaWQgKmRhdGEpCit7CisJc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIg
PSBkYXRhOworCisJaWYgKGViLT5leHRlbnNpb25zLmZsYWdzICYgQklUX1VMTChEUk1fSTkxNV9H
RU1fRVhFQ0JVRkZFUl9FWFRfUEVSRikpCisJCXJldHVybiAtRUlOVkFMOworCisJaWYgKGNvcHlf
ZnJvbV91c2VyKCZlYi0+ZXh0ZW5zaW9ucy5wZXJmX2NvbmZpZywgZXh0LAorCQkJICAgc2l6ZW9m
KGViLT5leHRlbnNpb25zLnBlcmZfY29uZmlnKSkpCisJCXJldHVybiAtRUZBVUxUOworCisJZWIt
PmV4dGVuc2lvbnMuZmxhZ3MgfD0gQklUX1VMTChEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRf
UEVSRik7CisKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGNvbnN0IGk5MTVfdXNlcl9leHRlbnNp
b25fZm4gZXhlY2J1Zl9leHRlbnNpb25zW10gPSB7CiAgICAgICAgIFtEUk1fSTkxNV9HRU1fRVhF
Q0JVRkZFUl9FWFRfVElNRUxJTkVfRkVOQ0VTXSA9IHBhcnNlX3RpbWVsaW5lX2ZlbmNlcywKKyAg
ICAgICAgW0RSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9QRVJGXSA9IHBhcnNlX3BlcmZfY29u
ZmlnLAogfTsKIAogc3RhdGljIGludApAQCAtMjY0Myw5ICsyNzQxLDEzIEBAIGk5MTVfZ2VtX2Rv
X2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZpY2UgKmRldiwKIAkJfQogCX0KIAorCWVyciA9IGdl
dF9leGVjYnVmX29hX2NvbmZpZygmZWIpOworCWlmIChlcnIpCisJCWdvdG8gZXJyX29hX2NvbmZp
ZzsKKwogCWVyciA9IGViX2NyZWF0ZSgmZWIpOwogCWlmIChlcnIpCi0JCWdvdG8gZXJyX291dF9m
ZW5jZTsKKwkJZ290byBlcnJfb2FfY29uZmlnOwogCiAJR0VNX0JVR19PTighZWIubHV0X3NpemUp
OwogCkBAIC0yNjcwLDYgKzI3NzIsMTMgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIpKQogCQlnb3RvIGVycl91bmxvY2s7
CiAKKwlpZiAoZWIuZXh0ZW5zaW9ucy5mbGFncyAmIEJJVF9VTEwoRFJNX0k5MTVfR0VNX0VYRUNC
VUZGRVJfRVhUX1BFUkYpKSB7CisJCWlmICghaW50ZWxfZW5naW5lX2hhc19vYShlYi5lbmdpbmUp
KSB7CisJCQllcnIgPSAtRU5PREVWOworCQkJZ290byBlcnJfZW5naW5lOworCQl9CisJfQorCiAJ
ZXJyID0gZWJfd2FpdF9mb3JfcmluZygmZWIpOyAvKiBtYXkgdGVtcG9yYXJpbHkgZHJvcCBzdHJ1
Y3RfbXV0ZXggKi8KIAlpZiAodW5saWtlbHkoZXJyKSkKIAkJZ290byBlcnJfZW5naW5lOwpAQCAt
Mjc5MCw2ICsyODk5LDIwIEBAIGk5MTVfZ2VtX2RvX2V4ZWNidWZmZXIoc3RydWN0IGRybV9kZXZp
Y2UgKmRldiwKIAkJfQogCX0KIAorCWlmIChlYi5leHRlbnNpb25zLmZsYWdzICYgQklUX1VMTChE
Uk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfUEVSRikpIHsKKwkJZWIub2Ffdm1hID0gaTkxNV92
bWFfaW5zdGFuY2UoZWIub2FfYm8sCisJCQkJCSAgICAgICZlYi5lbmdpbmUtPmk5MTUtPmdndHQu
dm0sIE5VTEwpOworCQlpZiAodW5saWtlbHkoSVNfRVJSKGViLm9hX3ZtYSkpKSB7CisJCQllcnIg
PSBQVFJfRVJSKGViLm9hX3ZtYSk7CisJCQllYi5vYV92bWEgPSBOVUxMOworCQkJZ290byBlcnJf
cmVxdWVzdDsKKwkJfQorCisJCWVyciA9IGk5MTVfdm1hX3BpbihlYi5vYV92bWEsIDAsIDAsIFBJ
Tl9HTE9CQUwpOworCQlpZiAoZXJyKQorCQkJZ290byBlcnJfcmVxdWVzdDsKKwl9CisKIAkvKgog
CSAqIFdoaWxzdCB0aGlzIHJlcXVlc3QgZXhpc3RzLCBiYXRjaF9vYmogd2lsbCBiZSBvbiB0aGUK
IAkgKiBhY3RpdmVfbGlzdCwgYW5kIHNvIHdpbGwgaG9sZCB0aGUgYWN0aXZlIHJlZmVyZW5jZS4g
T25seSB3aGVuIHRoaXMKQEAgLTI4MzQsNyArMjk1NywxMyBAQCBpOTE1X2dlbV9kb19leGVjYnVm
ZmVyKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCiAJaTkxNV9nZW1fY29udGV4dF9wdXQoZWIuZ2Vt
X2NvbnRleHQpOwogZXJyX2Rlc3Ryb3k6CiAJZWJfZGVzdHJveSgmZWIpOwotZXJyX291dF9mZW5j
ZToKK2Vycl9vYV9jb25maWc6CisJaWYgKGViLm9hX2NvbmZpZykgeworCQlpOTE1X2dlbV9vYmpl
Y3RfcHV0KGViLm9hX2JvKTsKKwkJaTkxNV9vYV9jb25maWdfcHV0KGViLm9hX2NvbmZpZyk7CisJ
fQorCWlmIChlYi5vYV92bWEpCisJCWk5MTVfdm1hX3VucGluKGViLm9hX3ZtYSk7CiAJaWYgKG91
dF9mZW5jZV9mZCAhPSAtMSkKIAkJcHV0X3VudXNlZF9mZChvdXRfZmVuY2VfZmQpOwogZXJyX2V4
ZWNfZmVuY2U6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfY3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4
IDY1Y2JmMWQ5MTE4ZC4uNTFlM2IwNTFhNmM4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfY3MuYwpAQCAtODQ5LDYgKzg0OSw5IEBAIGludCBpbnRlbF9lbmdpbmVfaW5p
dF9jb21tb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCiAJZW5naW5lLT5lbWl0
X2ZpbmlfYnJlYWRjcnVtYl9kdyA9IHJldDsKIAorCisJSU5JVF9BQ1RJVkVfUkVRVUVTVCgmZW5n
aW5lLT5sYXN0X29hX2NvbmZpZyk7CisKIAlyZXR1cm4gMDsKIAogZXJyX3VucGluOgpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaAppbmRleCA4YmU2MzAxOWQ3
MDcuLmQ5NWJjMzA1ZDM3MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZW5naW5lX3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX3R5cGVzLmgKQEAgLTM2Miw2ICszNjIsOCBAQCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzIHsK
IAlzdHJ1Y3QgaTkxNV93YV9saXN0IHdhX2xpc3Q7CiAJc3RydWN0IGk5MTVfd2FfbGlzdCB3aGl0
ZWxpc3Q7CiAKKwlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCBsYXN0X29hX2NvbmZpZzsKKwog
CXUzMiAgICAgICAgICAgICBpcnFfa2VlcF9tYXNrOyAvKiBhbHdheXMga2VlcCB0aGVzZSBpbnRl
cnJ1cHRzICovCiAJdTMyCQlpcnFfZW5hYmxlX21hc2s7IC8qIGJpdG1hc2sgdG8gZW5hYmxlIHJp
bmcgaW50ZXJydXB0ICovCiAJdm9pZAkJKCppcnFfZW5hYmxlKShzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpOwpAQCAtNDQ1LDYgKzQ0Nyw3IEBAIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
ewogI2RlZmluZSBJOTE1X0VOR0lORV9IQVNfU0VNQVBIT1JFUyAgIEJJVCgzKQogI2RlZmluZSBJ
OTE1X0VOR0lORV9ORUVEU19CUkVBRENSVU1CX1RBU0tMRVQgQklUKDQpCiAjZGVmaW5lIEk5MTVf
RU5HSU5FX0lTX1ZJUlRVQUwgICAgICAgQklUKDUpCisjZGVmaW5lIEk5MTVfRU5HSU5FX0hBU19P
QSAgICAgICAgICAgQklUKDYpCiAJdW5zaWduZWQgaW50IGZsYWdzOwogCiAJLyoKQEAgLTU0MCw2
ICs1NDMsMTIgQEAgaW50ZWxfZW5naW5lX2lzX3ZpcnR1YWwoY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogCXJldHVybiBlbmdpbmUtPmZsYWdzICYgSTkxNV9FTkdJTkVfSVNf
VklSVFVBTDsKIH0KIAorc3RhdGljIGlubGluZSBib29sCitpbnRlbF9lbmdpbmVfaGFzX29hKGNv
bnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlyZXR1cm4gZW5naW5lLT5m
bGFncyAmIEk5MTVfRU5HSU5FX0hBU19PQTsKK30KKwogI2RlZmluZSBpbnN0ZG9uZV9zbGljZV9t
YXNrKGRldl9wcml2X18pIFwKIAkoSVNfR0VOKGRldl9wcml2X18sIDcpID8gXAogCSAxIDogUlVO
VElNRV9JTkZPKGRldl9wcml2X18pLT5zc2V1LnNsaWNlX21hc2spCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2xyYy5jCmluZGV4IDg4NGRmYzFjYjAzMy4uMjE4NDVkNWM0MTFmIDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9pbnRlbF9scmMuYwpAQCAtMjg1Niw2ICsyODU2LDcgQEAgaW50IGludGVsX2V4
ZWNsaXN0c19zdWJtaXNzaW9uX3NldHVwKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
IAkJZW5naW5lLT5pbml0X2NvbnRleHQgPSBnZW44X2luaXRfcmNzX2NvbnRleHQ7CiAJCWVuZ2lu
ZS0+ZW1pdF9mbHVzaCA9IGdlbjhfZW1pdF9mbHVzaF9yZW5kZXI7CiAJCWVuZ2luZS0+ZW1pdF9m
aW5pX2JyZWFkY3J1bWIgPSBnZW44X2VtaXRfZmluaV9icmVhZGNydW1iX3JjczsKKwkJZW5naW5l
LT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfT0E7CiAJfQogCiAJcmV0dXJuIDA7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVyLmMKaW5kZXggMWRlMTlkYWM0YTE0Li5k
M2Q0OTZlNGNlMzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdidWZmZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5nYnVmZmVy
LmMKQEAgLTIyNDQsOCArMjI0NCwxMCBAQCBzdGF0aWMgdm9pZCBzZXR1cF9yY3Moc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQllbmdpbmUtPmlycV9lbmFibGVfbWFzayA9IEk5MTVf
VVNFUl9JTlRFUlJVUFQ7CiAJfQogCi0JaWYgKElTX0hBU1dFTEwoaTkxNSkpCisJaWYgKElTX0hB
U1dFTEwoaTkxNSkpIHsKIAkJZW5naW5lLT5lbWl0X2JiX3N0YXJ0ID0gaHN3X2VtaXRfYmJfc3Rh
cnQ7CisJCWVuZ2luZS0+ZmxhZ3MgfD0gSTkxNV9FTkdJTkVfSEFTX09BOworCX0KIAogCWVuZ2lu
ZS0+cmVzdW1lID0gcmNzX3Jlc3VtZTsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZHJ2LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCmluZGV4IGI0
MWVkZjdkNzUxZi4uYmY0NjNlY2MwMmRhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmMKQEAgLTQ5
Myw2ICs0OTMsMTAgQEAgc3RhdGljIGludCBpOTE1X2dldHBhcmFtX2lvY3RsKHN0cnVjdCBkcm1f
ZGV2aWNlICpkZXYsIHZvaWQgKmRhdGEsCiAJY2FzZSBJOTE1X1BBUkFNX1BFUkZfUkVWSVNJT046
CiAJCXZhbHVlID0gaTkxNV9wZXJmX2lvY3RsX3ZlcnNpb24oKTsKIAkJYnJlYWs7CisJY2FzZSBJ
OTE1X1BBUkFNX0hBU19FWEVDX1BFUkZfQ09ORklHOgorCQkvKiBPYnZpb3VzbHkgcmVxdWlyZXMg
cGVyZiBzdXBwb3J0LiAqLworCQl2YWx1ZSA9IGRldl9wcml2LT5wZXJmLmluaXRpYWxpemVkOwor
CQlicmVhazsKIAlkZWZhdWx0OgogCQlEUk1fREVCVUcoIlVua25vd24gcGFyYW1ldGVyICVkXG4i
LCBwYXJhbS0+cGFyYW0pOwogCQlyZXR1cm4gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5o
CmluZGV4IDBjMDc0NWJmZTY0My4uNGQ3MGI0MTIyZGYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmgKQEAgLTExMTgsNyArMTExOCw3IEBAIHN0cnVjdCBpOTE1X29hX2NvbmZpZyB7CiAKIAlzdHJ1
Y3QgbGlzdF9oZWFkIHZtYV9saW5rOwogCi0JYXRvbWljX3QgcmVmX2NvdW50OworCXN0cnVjdCBr
cmVmIHJlZjsKIH07CiAKIHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtOwpAQCAtMjU2OCw2ICsyNTY4
LDEyIEBAIGludCBpOTE1X3BlcmZfZ2V0X29hX2NvbmZpZyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSwKIAkJCSAgICBpbnQgbWV0cmljc19zZXQsCiAJCQkgICAgc3RydWN0IGk5MTVfb2Ff
Y29uZmlnICoqb3V0X2NvbmZpZywKIAkJCSAgICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
Km91dF9vYmopOwordm9pZCBpOTE1X29hX2NvbmZpZ19yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWYp
OworCitzdGF0aWMgaW5saW5lIHZvaWQgaTkxNV9vYV9jb25maWdfcHV0KHN0cnVjdCBpOTE1X29h
X2NvbmZpZyAqb2FfY29uZmlnKQoreworCWtyZWZfcHV0KCZvYV9jb25maWctPnJlZiwgaTkxNV9v
YV9jb25maWdfcmVsZWFzZSk7Cit9CiAKIC8qIGk5MTVfZ2VtX2V2aWN0LmMgKi8KIGludCBfX211
c3RfY2hlY2sgaTkxNV9nZW1fZXZpY3Rfc29tZXRoaW5nKHN0cnVjdCBpOTE1X2FkZHJlc3Nfc3Bh
Y2UgKnZtLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwppbmRleCBiMDVlODMxNWRkNTAuLjRjYjU1
YmJiOTFhYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmMKQEAgLTM2NSwxMCArMzY1LDkgQEAg
c3RydWN0IHBlcmZfb3Blbl9wcm9wZXJ0aWVzIHsKIAlpbnQgb2FfcGVyaW9kX2V4cG9uZW50Owog
fTsKIAotc3RhdGljIHZvaWQgcHV0X29hX2NvbmZpZyhzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9h
X2NvbmZpZykKK3ZvaWQgaTkxNV9vYV9jb25maWdfcmVsZWFzZShzdHJ1Y3Qga3JlZiAqcmVmKQog
ewotCWlmICghYXRvbWljX2RlY19hbmRfdGVzdCgmb2FfY29uZmlnLT5yZWZfY291bnQpKQotCQly
ZXR1cm47CisJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25maWcgPSBjb250YWluZXJfb2Yo
cmVmLCB0eXBlb2YoKm9hX2NvbmZpZyksIHJlZik7CiAKIAlpZiAob2FfY29uZmlnLT5vYmopIHsK
IAkJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBvYV9jb25maWctPmk5MTU7CkBAIC00
ODYsNyArNDg1LDcgQEAgaW50IGk5MTVfcGVyZl9nZXRfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICppOTE1LAogCX0KIAogCWlmIChvdXRfY29uZmlnKSB7Ci0JCWF0b21pY19pbmMo
Jm9hX2NvbmZpZy0+cmVmX2NvdW50KTsKKwkJa3JlZl9nZXQoJm9hX2NvbmZpZy0+cmVmKTsKIAkJ
Km91dF9jb25maWcgPSBvYV9jb25maWc7CiAJfQogCkBAIC01MDgsNyArNTA3LDcgQEAgaW50IGk5
MTVfcGVyZl9nZXRfb2FfY29uZmlnKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LAogCW11
dGV4X3VubG9jaygmaTkxNS0+cGVyZi5tZXRyaWNzX2xvY2spOwogCiAJaWYgKHJldCAmJiBvdXRf
Y29uZmlnICYmIG9hX2NvbmZpZykgewotCQlwdXRfb2FfY29uZmlnKG9hX2NvbmZpZyk7CisJCWk5
MTVfb2FfY29uZmlnX3B1dChvYV9jb25maWcpOwogCQkqb3V0X2NvbmZpZyA9IE5VTEw7CiAJfQog
CkBAIC0xNDgyLDcgKzE0ODEsNyBAQCBzdGF0aWMgdm9pZCBpOTE1X29hX3N0cmVhbV9kZXN0cm95
KHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pCiAJaWYgKHN0cmVhbS0+Y3R4KQogCQlv
YV9wdXRfcmVuZGVyX2N0eF9pZChzdHJlYW0pOwogCi0JcHV0X29hX2NvbmZpZyhzdHJlYW0tPm9h
X2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KHN0cmVhbS0+b2FfY29uZmlnKTsKIAogCWlm
IChkZXZfcHJpdi0+cGVyZi5vYS5zcHVyaW91c19yZXBvcnRfcnMubWlzc2VkKSB7CiAJCURSTV9O
T1RFKCIlZCBzcHVyaW91cyBPQSByZXBvcnQgbm90aWNlcyBzdXBwcmVzc2VkIGR1ZSB0byByYXRl
bGltaXRpbmdcbiIsCkBAIC0yNTg1LDcgKzI1ODQsNyBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3Ry
ZWFtX2luaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAlmcmVlX29hX2J1ZmZl
cihkZXZfcHJpdik7CiAKIGVycl9vYV9idWZfYWxsb2M6Ci0JcHV0X29hX2NvbmZpZyhzdHJlYW0t
Pm9hX2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KHN0cmVhbS0+b2FfY29uZmlnKTsKIAog
CWludGVsX3VuY29yZV9mb3JjZXdha2VfcHV0KCZkZXZfcHJpdi0+dW5jb3JlLCBGT1JDRVdBS0Vf
QUxMKTsKIAlpbnRlbF9ydW50aW1lX3BtX3B1dCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0sIHN0cmVh
bS0+d2FrZXJlZik7CkBAIC0yNTk1LDcgKzI1OTQsNyBAQCBzdGF0aWMgaW50IGk5MTVfb2Ffc3Ry
ZWFtX2luaXQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKIAltdXRleF91bmxvY2so
JmRldl9wcml2LT5kcm0uc3RydWN0X211dGV4KTsKIAogZXJyX25vYV93YWl0X2FsbG9jOgotCXB1
dF9vYV9jb25maWcoc3RyZWFtLT5vYV9jb25maWcpOworCWk5MTVfb2FfY29uZmlnX3B1dChzdHJl
YW0tPm9hX2NvbmZpZyk7CiAKIGVycl9jb25maWc6CiAJaWYgKHN0cmVhbS0+Y3R4KQpAQCAtMzQx
MCw3ICszNDA5LDcgQEAgdm9pZCBpOTE1X3BlcmZfcmVnaXN0ZXIoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQogCQlnb3RvIHN5c2ZzX2Vycm9yOwogCiAJZGV2X3ByaXYtPnBlcmYu
b2EudGVzdF9jb25maWcuaTkxNSA9IGRldl9wcml2OwotCWF0b21pY19zZXQoJmRldl9wcml2LT5w
ZXJmLm9hLnRlc3RfY29uZmlnLnJlZl9jb3VudCwgMSk7CisJa3JlZl9pbml0KCZkZXZfcHJpdi0+
cGVyZi5vYS50ZXN0X2NvbmZpZy5yZWYpOwogCiAJZ290byBleGl0OwogCkBAIC0zNjY3LDcgKzM2
NjYsNyBAQCBpbnQgaTkxNV9wZXJmX2FkZF9jb25maWdfaW9jdGwoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgdm9pZCAqZGF0YSwKIAl9CiAKIAlvYV9jb25maWctPmk5MTUgPSBkZXZfcHJpdjsKLQlh
dG9taWNfc2V0KCZvYV9jb25maWctPnJlZl9jb3VudCwgMSk7CisJa3JlZl9pbml0KCZvYV9jb25m
aWctPnJlZik7CiAKIAlpZiAoIXV1aWRfaXNfdmFsaWQoYXJncy0+dXVpZCkpIHsKIAkJRFJNX0RF
QlVHKCJJbnZhbGlkIHV1aWQgZm9ybWF0IGZvciBPQSBjb25maWdcbiIpOwpAQCAtMzc2Niw3ICsz
NzY1LDcgQEAgaW50IGk5MTVfcGVyZl9hZGRfY29uZmlnX2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNl
ICpkZXYsIHZvaWQgKmRhdGEsCiBzeXNmc19lcnI6CiAJbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+
cGVyZi5tZXRyaWNzX2xvY2spOwogcmVnX2VycjoKLQlwdXRfb2FfY29uZmlnKG9hX2NvbmZpZyk7
CisJaTkxNV9vYV9jb25maWdfcHV0KG9hX2NvbmZpZyk7CiAJRFJNX0RFQlVHKCJGYWlsZWQgdG8g
YWRkIG5ldyBPQSBjb25maWdcbiIpOwogCXJldHVybiBlcnI7CiB9CkBAIC0zODIyLDcgKzM4MjEs
NyBAQCBpbnQgaTkxNV9wZXJmX3JlbW92ZV9jb25maWdfaW9jdGwoc3RydWN0IGRybV9kZXZpY2Ug
KmRldiwgdm9pZCAqZGF0YSwKIAogCURSTV9ERUJVRygiUmVtb3ZlZCBjb25maWcgJXMgaWQ9JWlc
biIsIG9hX2NvbmZpZy0+dXVpZCwgb2FfY29uZmlnLT5pZCk7CiAKLQlwdXRfb2FfY29uZmlnKG9h
X2NvbmZpZyk7CisJaTkxNV9vYV9jb25maWdfcHV0KG9hX2NvbmZpZyk7CiAKIAlyZXR1cm4gMDsK
IApAQCAtMzk5Miw3ICszOTkxLDcgQEAgc3RhdGljIGludCBkZXN0cm95X2NvbmZpZyhpbnQgaWQs
IHZvaWQgKnAsIHZvaWQgKmRhdGEpCiB7CiAJc3RydWN0IGk5MTVfb2FfY29uZmlnICpvYV9jb25m
aWcgPSBwOwogCi0JcHV0X29hX2NvbmZpZyhvYV9jb25maWcpOworCWk5MTVfb2FfY29uZmlnX3B1
dChvYV9jb25maWcpOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkv
ZHJtL2k5MTVfZHJtLmggYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKaW5kZXggZTVhYzEx
NzRjMDFlLi5lNmY3ZjczODQ5MGUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9k
cm0uaAorKysgYi9pbmNsdWRlL3VhcGkvZHJtL2k5MTVfZHJtLmgKQEAgLTYyNCw2ICs2MjQsMTYg
QEAgdHlwZWRlZiBzdHJ1Y3QgZHJtX2k5MTVfaXJxX3dhaXQgewogICovCiAjZGVmaW5lIEk5MTVf
UEFSQU1fSEFTX0VYRUNfVElNRUxJTkVfRkVOQ0VTIDU1CiAKKy8qCisgKiBSZXF1ZXN0IGFuIGk5
MTUvcGVyZiBwZXJmb3JtYW5jZSBjb25maWd1cmF0aW9uIGNoYW5nZSBiZWZvcmUgcnVubmluZyB0
aGUKKyAqIGNvbW1hbmRzIGdpdmVuIGluIGFuIGV4ZWNidWYuCisgKgorICogUGVyZm9ybWFuY2Ug
Y29uZmlndXJhdGlvbiBJRCBhbmQgdGhlIGZpbGUgZGVzY3JpcHRvciBvZiB0aGUgaTkxNSBwZXJm
CisgKiBzdHJlYW0gYXJlIGdpdmVuIHRocm91Z2ggZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXJfZXh0
X3BlcmYuIFNlZQorICogSTkxNV9FWEVDX0VYVC4KKyAqLworI2RlZmluZSBJOTE1X1BBUkFNX0hB
U19FWEVDX1BFUkZfQ09ORklHIDU2CisKIC8qIE11c3QgYmUga2VwdCBjb21wYWN0IC0tIG5vIGhv
bGVzIGFuZCB3ZWxsIGRvY3VtZW50ZWQgKi8KIAogdHlwZWRlZiBzdHJ1Y3QgZHJtX2k5MTVfZ2V0
cGFyYW0gewpAQCAtMTAyNiw2ICsxMDM2LDEyIEBAIGVudW0gZHJtX2k5MTVfZ2VtX2V4ZWNidWZm
ZXJfZXh0IHsKIAkgKi8KIAlEUk1fSTkxNV9HRU1fRVhFQ0JVRkZFUl9FWFRfVElNRUxJTkVfRkVO
Q0VTID0gMCwKIAorCS8qKgorCSAqIFRoaXMgaWRlbnRpZmllciBpcyBhc3NvY2lhdGVkIHdpdGgK
KwkgKiBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcl9wZXJmX2V4dC4KKwkgKi8KKwlEUk1fSTkxNV9H
RU1fRVhFQ0JVRkZFUl9FWFRfUEVSRiwKKwogCURSTV9JOTE1X0dFTV9FWEVDQlVGRkVSX0VYVF9N
QVggLyogbm9uLUFCSSAqLwogfTsKIApAQCAtMTA1Niw2ICsxMDcyLDI3IEBAIHN0cnVjdCBkcm1f
aTkxNV9nZW1fZXhlY2J1ZmZlcl9leHRfdGltZWxpbmVfZmVuY2VzIHsKIAlfX3U2NCB2YWx1ZXNf
cHRyOwogfTsKIAorc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyX2V4dF9wZXJmIHsKKwlz
dHJ1Y3QgaTkxNV91c2VyX2V4dGVuc2lvbiBiYXNlOworCisJLyoqCisJICogUGVyZm9ybWFuY2Ug
ZmlsZSBkZXNjcmlwdG9yIHJldHVybmVkIGJ5IERSTV9JT0NUTF9JOTE1X1BFUkZfT1BFTi4KKwkg
KiBUaGlzIGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhhdCB0aGUgYXBwbGljYXRpb24KKwkgKi8KKwlf
X3MzMiBwZXJmX2ZkOworCisJLyoqCisJICogVW51c2VkIGZvciBub3cuIE11c3QgYmUgY2xlYXJl
ZCB0byB6ZXJvLgorCSAqLworCV9fdTMyIHBhZDsKKworCS8qKgorCSAqIE9BIGNvbmZpZ3VyYXRp
b24gSUQgdG8gc3dpdGNoIHRvIGJlZm9yZSBleGVjdXRpbmcgdGhlIGNvbW1hbmRzCisJICogYXNz
b2NpYXRlZCB0byB0aGUgZXhlY2J1Zi4KKwkgKi8KKwlfX3U2NCBvYV9jb25maWc7Cit9OworCiBz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXIyIHsKIAkvKioKIAkgKiBMaXN0IG9mIGdlbV9l
eGVjX29iamVjdDIgc3RydWN0cwotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBs
aXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1h
bi9saXN0aW5mby9pbnRlbC1nZng=

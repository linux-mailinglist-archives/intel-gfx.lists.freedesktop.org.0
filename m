Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AD476D9953
	for <lists+intel-gfx@lfdr.de>; Wed, 16 Oct 2019 20:39:53 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8A9656E425;
	Wed, 16 Oct 2019 18:39:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 86CCF6E423
 for <intel-gfx@lists.freedesktop.org>; Wed, 16 Oct 2019 18:39:49 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18861156-1500050 
 for multiple; Wed, 16 Oct 2019 19:39:09 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 16 Oct 2019 19:39:02 +0100
Message-Id: <20191016183902.13614-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191016183902.13614-1-chris@chris-wilson.co.uk>
References: <20191016183902.13614-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/2] drm/i915/gvt: Wean gvt off
 dev_priv->engine[]
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

U3RvcCB0cnlpbmcgdG8gZXNjYXBlIG91dCBvZiB0aGUgZ3Z0IGxheWVyIHRvIGZpbmQgdGhlIGVu
Z2luZSB0aGF0IHdlCmluaXRpYWxseSBzZXR1cCBmb3IgdXNlIHdpdGggZ3Z0LiBSZWNvcmQgdGhl
IGVuZ2luZXMgZHVyaW5nIGluaXRpYWxpc2F0aW9uCmFuZCB1c2UgdGhlbSBoZW5jZWZvcnRoLgoK
YWRkL3JlbW92ZTogMS80IGdyb3cvc2hyaW5rOiAyMi8yOCB1cC9kb3duOiAzNDEvLTE0MTAgKC0x
MDY5KQoKU2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28u
dWs+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2NtZF9wYXJzZXIuYyAgIHwgMjA0ICsr
KysrKysrKy0tLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZGVidWdmcy5jICAg
ICAgfCAgMzYgKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2V4ZWNsaXN0LmMgICAgIHwg
IDk5ICsrKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9leGVjbGlzdC5oICAgICB8
ICAgNSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2hhbmRsZXJzLmMgICAgIHwgIDkwICsr
KysrLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21taW8uaCAgICAgICAgIHwgICA0ICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1pb19jb250ZXh0LmMgfCAxMDggKysrKysrLS0t
LS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9tbWlvX2NvbnRleHQuaCB8ICAgNSArLQogZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3NjaGVkX3BvbGljeS5jIHwgIDEzICstCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMgICAgfCAyMzggKysrKysrKysrKystLS0tLS0tLS0t
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmggICAgfCAgIDkgKy0KIDEx
IGZpbGVzIGNoYW5nZWQsIDM2NCBpbnNlcnRpb25zKCspLCA0NDcgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2NtZF9wYXJzZXIuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d2dC9jbWRfcGFyc2VyLmMKaW5kZXggZTc1M2IxZTcwNmUyLi45ZjRiZTVm
ZjdmZTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9jbWRfcGFyc2VyLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2NtZF9wYXJzZXIuYwpAQCAtNDYwLDcgKzQ2
MCw3IEBAIGVudW0gewogCiBzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgewogCXN0cnVjdCBpbnRl
bF92Z3B1ICp2Z3B1OwotCWludCByaW5nX2lkOworCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZTsKIAogCWludCBidWZfdHlwZTsKIApAQCAtNjMzLDM5ICs2MzMsNDIgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBkZWNvZGVfaW5mbyAqcmluZ19kZWNvZGVfaW5mb1tJOTE1X05VTV9F
TkdJTkVTXVs4XSA9IHsKIAl9LAogfTsKIAotc3RhdGljIGlubGluZSB1MzIgZ2V0X29wY29kZSh1
MzIgY21kLCBpbnQgcmluZ19pZCkKK3N0YXRpYyBpbmxpbmUgdTMyIGdldF9vcGNvZGUodTMyIGNt
ZCwgY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCWNvbnN0IHN0cnVj
dCBkZWNvZGVfaW5mbyAqZF9pbmZvOwogCi0JZF9pbmZvID0gcmluZ19kZWNvZGVfaW5mb1tyaW5n
X2lkXVtDTURfVFlQRShjbWQpXTsKKwlkX2luZm8gPSByaW5nX2RlY29kZV9pbmZvW2VuZ2luZS0+
aWRdW0NNRF9UWVBFKGNtZCldOwogCWlmIChkX2luZm8gPT0gTlVMTCkKIAkJcmV0dXJuIElOVkFM
SURfT1A7CiAKIAlyZXR1cm4gY21kID4+ICgzMiAtIGRfaW5mby0+b3BfbGVuKTsKIH0KIAotc3Rh
dGljIGlubGluZSBjb25zdCBzdHJ1Y3QgY21kX2luZm8gKmZpbmRfY21kX2VudHJ5KHN0cnVjdCBp
bnRlbF9ndnQgKmd2dCwKLQkJdW5zaWduZWQgaW50IG9wY29kZSwgaW50IHJpbmdfaWQpCitzdGF0
aWMgaW5saW5lIGNvbnN0IHN0cnVjdCBjbWRfaW5mbyAqCitmaW5kX2NtZF9lbnRyeShzdHJ1Y3Qg
aW50ZWxfZ3Z0ICpndnQsIHVuc2lnbmVkIGludCBvcGNvZGUsCisJICAgICAgIGNvbnN0IHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgY21kX2VudHJ5ICplOwogCiAJ
aGFzaF9mb3JfZWFjaF9wb3NzaWJsZShndnQtPmNtZF90YWJsZSwgZSwgaGxpc3QsIG9wY29kZSkg
ewotCQlpZiAob3Bjb2RlID09IGUtPmluZm8tPm9wY29kZSAmJiBlLT5pbmZvLT5yaW5ncyAmIEJJ
VChyaW5nX2lkKSkKKwkJaWYgKG9wY29kZSA9PSBlLT5pbmZvLT5vcGNvZGUgJiYKKwkJICAgIGUt
PmluZm8tPnJpbmdzICYgZW5naW5lLT5tYXNrKQogCQkJcmV0dXJuIGUtPmluZm87CiAJfQogCXJl
dHVybiBOVUxMOwogfQogCi1zdGF0aWMgaW5saW5lIGNvbnN0IHN0cnVjdCBjbWRfaW5mbyAqZ2V0
X2NtZF9pbmZvKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCwKLQkJdTMyIGNtZCwgaW50IHJpbmdfaWQp
CitzdGF0aWMgaW5saW5lIGNvbnN0IHN0cnVjdCBjbWRfaW5mbyAqCitnZXRfY21kX2luZm8oc3Ry
dWN0IGludGVsX2d2dCAqZ3Z0LCB1MzIgY21kLAorCSAgICAgY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQogewogCXUzMiBvcGNvZGU7CiAKLQlvcGNvZGUgPSBnZXRfb3Bjb2Rl
KGNtZCwgcmluZ19pZCk7CisJb3Bjb2RlID0gZ2V0X29wY29kZShjbWQsIGVuZ2luZSk7CiAJaWYg
KG9wY29kZSA9PSBJTlZBTElEX09QKQogCQlyZXR1cm4gTlVMTDsKIAotCXJldHVybiBmaW5kX2Nt
ZF9lbnRyeShndnQsIG9wY29kZSwgcmluZ19pZCk7CisJcmV0dXJuIGZpbmRfY21kX2VudHJ5KGd2
dCwgb3Bjb2RlLCBlbmdpbmUpOwogfQogCiBzdGF0aWMgaW5saW5lIHUzMiBzdWJfb3BfdmFsKHUz
MiBjbWQsIHUzMiBoaSwgdTMyIGxvdykKQEAgLTY3MywxMiArNjc2LDEyIEBAIHN0YXRpYyBpbmxp
bmUgdTMyIHN1Yl9vcF92YWwodTMyIGNtZCwgdTMyIGhpLCB1MzIgbG93KQogCXJldHVybiAoY21k
ID4+IGxvdykgJiAoKDFVIDw8IChoaSAtIGxvdyArIDEpKSAtIDEpOwogfQogCi1zdGF0aWMgaW5s
aW5lIHZvaWQgcHJpbnRfb3Bjb2RlKHUzMiBjbWQsIGludCByaW5nX2lkKQorc3RhdGljIGlubGlu
ZSB2b2lkIHByaW50X29wY29kZSh1MzIgY21kLCBjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiB7CiAJY29uc3Qgc3RydWN0IGRlY29kZV9pbmZvICpkX2luZm87CiAJaW50IGk7
CiAKLQlkX2luZm8gPSByaW5nX2RlY29kZV9pbmZvW3JpbmdfaWRdW0NNRF9UWVBFKGNtZCldOwor
CWRfaW5mbyA9IHJpbmdfZGVjb2RlX2luZm9bZW5naW5lLT5pZF1bQ01EX1RZUEUoY21kKV07CiAJ
aWYgKGRfaW5mbyA9PSBOVUxMKQogCQlyZXR1cm47CiAKQEAgLTcwNywxMCArNzEwLDExIEBAIHN0
YXRpYyB2b2lkIHBhcnNlcl9leGVjX3N0YXRlX2R1bXAoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRl
ICpzKQogCWludCBjbnQgPSAwOwogCWludCBpOwogCi0JZ3Z0X2RiZ19jbWQoIiAgdmdwdSVkIFJJ
TkclZDogcmluZ19zdGFydCglMDhseCkgcmluZ19lbmQoJTA4bHgpIgotCQkJIiByaW5nX2hlYWQo
JTA4bHgpIHJpbmdfdGFpbCglMDhseClcbiIsIHMtPnZncHUtPmlkLAotCQkJcy0+cmluZ19pZCwg
cy0+cmluZ19zdGFydCwgcy0+cmluZ19zdGFydCArIHMtPnJpbmdfc2l6ZSwKLQkJCXMtPnJpbmdf
aGVhZCwgcy0+cmluZ190YWlsKTsKKwlndnRfZGJnX2NtZCgiICB2Z3B1JWQgUklORyVzOiByaW5n
X3N0YXJ0KCUwOGx4KSByaW5nX2VuZCglMDhseCkiCisJCSAgICAiIHJpbmdfaGVhZCglMDhseCkg
cmluZ190YWlsKCUwOGx4KVxuIiwKKwkJICAgIHMtPnZncHUtPmlkLCBzLT5lbmdpbmUtPm5hbWUs
CisJCSAgICBzLT5yaW5nX3N0YXJ0LCBzLT5yaW5nX3N0YXJ0ICsgcy0+cmluZ19zaXplLAorCQkg
ICAgcy0+cmluZ19oZWFkLCBzLT5yaW5nX3RhaWwpOwogCiAJZ3Z0X2RiZ19jbWQoIiAgJXMgJXMg
aXBfZ21hKCUwOGx4KSAiLAogCQkJcy0+YnVmX3R5cGUgPT0gUklOR19CVUZGRVJfSU5TVFJVQ1RJ
T04gPwpAQCAtNzI3LDcgKzczMSw3IEBAIHN0YXRpYyB2b2lkIHBhcnNlcl9leGVjX3N0YXRlX2R1
bXAoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzKQogCQkJcy0+aXBfdmEsIGNtZF92YWwocywg
MCksIGNtZF92YWwocywgMSksCiAJCQljbWRfdmFsKHMsIDIpLCBjbWRfdmFsKHMsIDMpKTsKIAot
CXByaW50X29wY29kZShjbWRfdmFsKHMsIDApLCBzLT5yaW5nX2lkKTsKKwlwcmludF9vcGNvZGUo
Y21kX3ZhbChzLCAwKSwgcy0+ZW5naW5lKTsKIAogCXMtPmlwX3ZhID0gKHUzMiAqKSgoKCh1NjQp
cy0+aXBfdmEpID4+IDEyKSA8PCAxMik7CiAKQEAgLTgzOCw3ICs4NDIsNiBAQCBzdGF0aWMgaW50
IGZvcmNlX25vbnByaXZfcmVnX2hhbmRsZXIoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzLAog
CXVuc2lnbmVkIGludCBkYXRhOwogCXUzMiByaW5nX2Jhc2U7CiAJdTMyIG5vcGlkOwotCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHMtPnZncHUtPmd2dC0+ZGV2X3ByaXY7CiAK
IAlpZiAoIXN0cmNtcChjbWQsICJscmkiKSkKIAkJZGF0YSA9IGNtZF92YWwocywgaW5kZXggKyAx
KTsKQEAgLTg0OCw3ICs4NTEsNyBAQCBzdGF0aWMgaW50IGZvcmNlX25vbnByaXZfcmVnX2hhbmRs
ZXIoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzLAogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAK
LQlyaW5nX2Jhc2UgPSBkZXZfcHJpdi0+ZW5naW5lW3MtPnJpbmdfaWRdLT5tbWlvX2Jhc2U7CisJ
cmluZ19iYXNlID0gcy0+ZW5naW5lLT5tbWlvX2Jhc2U7CiAJbm9waWQgPSBpOTE1X21taW9fcmVn
X29mZnNldChSSU5HX05PUElEKHJpbmdfYmFzZSkpOwogCiAJaWYgKCFpbnRlbF9ndnRfaW5fZm9y
Y2Vfbm9ucHJpdl93aGl0ZWxpc3QoZ3Z0LCBkYXRhKSAmJgpAQCAtOTI0LDkgKzkyNyw5IEBAIHN0
YXRpYyBpbnQgY21kX3JlZ19oYW5kbGVyKHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0ZSAqcywKIAkg
KiB1cGRhdGUgcmVnIHZhbHVlcyBpbiBpdCBpbnRvIHZyZWdzLCBzbyBMUklzIGluIHdvcmtsb2Fk
IHdpdGgKIAkgKiBpbmhpYml0IGNvbnRleHQgd2lsbCByZXN0b3JlIHdpdGggY29ycmVjdCB2YWx1
ZXMKIAkgKi8KLQlpZiAoSVNfR0VOKGd2dC0+ZGV2X3ByaXYsIDkpICYmCi0JCQlpbnRlbF9ndnRf
bW1pb19pc19pbl9jdHgoZ3Z0LCBvZmZzZXQpICYmCi0JCQkhc3RybmNtcChjbWQsICJscmkiLCAz
KSkgeworCWlmIChJU19HRU4ocy0+ZW5naW5lLT5pOTE1LCA5KSAmJgorCSAgICBpbnRlbF9ndnRf
bW1pb19pc19pbl9jdHgoZ3Z0LCBvZmZzZXQpICYmCisJICAgICFzdHJuY21wKGNtZCwgImxyaSIs
IDMpKSB7CiAJCWludGVsX2d2dF9oeXBlcnZpc29yX3JlYWRfZ3BhKHMtPnZncHUsCiAJCQlzLT53
b3JrbG9hZC0+cmluZ19jb250ZXh0X2dwYSArIDEyLCAmY3R4X3NyX2N0bCwgNCk7CiAJCS8qIGNo
ZWNrIGluaGliaXQgY29udGV4dCAqLwpAQCAtOTYyLDcgKzk2NSw2IEBAIHN0YXRpYyBpbnQgY21k
X2hhbmRsZXJfbHJpKHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0ZSAqcykKIHsKIAlpbnQgaSwgcmV0
ID0gMDsKIAlpbnQgY21kX2xlbiA9IGNtZF9sZW5ndGgocyk7Ci0Jc3RydWN0IGludGVsX2d2dCAq
Z3Z0ID0gcy0+dmdwdS0+Z3Z0OwogCXUzMiB2YWxpZF9sZW4gPSBDTURfTEVOKDEpOwogCiAJLyoK
QEAgLTk3Nyw4ICs5NzksOCBAQCBzdGF0aWMgaW50IGNtZF9oYW5kbGVyX2xyaShzdHJ1Y3QgcGFy
c2VyX2V4ZWNfc3RhdGUgKnMpCiAJfQogCiAJZm9yIChpID0gMTsgaSA8IGNtZF9sZW47IGkgKz0g
MikgewotCQlpZiAoSVNfQlJPQURXRUxMKGd2dC0+ZGV2X3ByaXYpICYmIHMtPnJpbmdfaWQgIT0g
UkNTMCkgewotCQkJaWYgKHMtPnJpbmdfaWQgPT0gQkNTMCAmJgorCQlpZiAoSVNfQlJPQURXRUxM
KHMtPmVuZ2luZS0+aTkxNSkgJiYgcy0+ZW5naW5lLT5pZCAhPSBSQ1MwKSB7CisJCQlpZiAocy0+
ZW5naW5lLT5pZCA9PSBCQ1MwICYmCiAJCQkgICAgY21kX3JlZyhzLCBpKSA9PSBpOTE1X21taW9f
cmVnX29mZnNldChERVJSTVIpKQogCQkJCXJldCB8PSAwOwogCQkJZWxzZQpAQCAtOTk5LDkgKzEw
MDEsOSBAQCBzdGF0aWMgaW50IGNtZF9oYW5kbGVyX2xycihzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3Rh
dGUgKnMpCiAJaW50IGNtZF9sZW4gPSBjbWRfbGVuZ3RoKHMpOwogCiAJZm9yIChpID0gMTsgaSA8
IGNtZF9sZW47IGkgKz0gMikgewotCQlpZiAoSVNfQlJPQURXRUxMKHMtPnZncHUtPmd2dC0+ZGV2
X3ByaXYpKQorCQlpZiAoSVNfQlJPQURXRUxMKHMtPmVuZ2luZS0+aTkxNSkpCiAJCQlyZXQgfD0g
KChjbWRfcmVnX2luaGliaXQocywgaSkgfHwKLQkJCQkJKGNtZF9yZWdfaW5oaWJpdChzLCBpICsg
MSkpKSkgPworCQkJCSAoY21kX3JlZ19pbmhpYml0KHMsIGkgKyAxKSkpKSA/CiAJCQkJLUVCQURS
UUMgOiAwOwogCQlpZiAocmV0KQogCQkJYnJlYWs7CkBAIC0xMDI3LDcgKzEwMjksNyBAQCBzdGF0
aWMgaW50IGNtZF9oYW5kbGVyX2xybShzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMpCiAJaW50
IGNtZF9sZW4gPSBjbWRfbGVuZ3RoKHMpOwogCiAJZm9yIChpID0gMTsgaSA8IGNtZF9sZW47KSB7
Ci0JCWlmIChJU19CUk9BRFdFTEwoZ3Z0LT5kZXZfcHJpdikpCisJCWlmIChJU19CUk9BRFdFTEwo
cy0+ZW5naW5lLT5pOTE1KSkKIAkJCXJldCB8PSAoY21kX3JlZ19pbmhpYml0KHMsIGkpKSA/IC1F
QkFEUlFDIDogMDsKIAkJaWYgKHJldCkKIAkJCWJyZWFrOwpAQCAtMTEzOSw3ICsxMTQxLDcgQEAg
c3RhdGljIGludCBjbWRfaGFuZGxlcl9waXBlX2NvbnRyb2woc3RydWN0IHBhcnNlcl9leGVjX3N0
YXRlICpzKQogCQkJCWlmIChyZXQpCiAJCQkJCXJldHVybiByZXQ7CiAJCQkJaWYgKGluZGV4X21v
ZGUpIHsKLQkJCQkJaHdzX3BnYSA9IHMtPnZncHUtPmh3c19wZ2Fbcy0+cmluZ19pZF07CisJCQkJ
CWh3c19wZ2EgPSBzLT52Z3B1LT5od3NfcGdhW3MtPmVuZ2luZS0+aWRdOwogCQkJCQlnbWEgPSBo
d3NfcGdhICsgZ21hOwogCQkJCQlwYXRjaF92YWx1ZShzLCBjbWRfcHRyKHMsIDIpLCBnbWEpOwog
CQkJCQl2YWwgPSBjbWRfdmFsKHMsIDEpICYgKH4oMSA8PCAyMSkpOwpAQCAtMTE1MywxNSArMTE1
NSwxNSBAQCBzdGF0aWMgaW50IGNtZF9oYW5kbGVyX3BpcGVfY29udHJvbChzdHJ1Y3QgcGFyc2Vy
X2V4ZWNfc3RhdGUgKnMpCiAJCXJldHVybiByZXQ7CiAKIAlpZiAoY21kX3ZhbChzLCAxKSAmIFBJ
UEVfQ09OVFJPTF9OT1RJRlkpCi0JCXNldF9iaXQoY21kX2ludGVycnVwdF9ldmVudHNbcy0+cmlu
Z19pZF0ucGlwZV9jb250cm9sX25vdGlmeSwKLQkJCQlzLT53b3JrbG9hZC0+cGVuZGluZ19ldmVu
dHMpOworCQlzZXRfYml0KGNtZF9pbnRlcnJ1cHRfZXZlbnRzW3MtPmVuZ2luZS0+aWRdLnBpcGVf
Y29udHJvbF9ub3RpZnksCisJCQlzLT53b3JrbG9hZC0+cGVuZGluZ19ldmVudHMpOwogCXJldHVy
biAwOwogfQogCiBzdGF0aWMgaW50IGNtZF9oYW5kbGVyX21pX3VzZXJfaW50ZXJydXB0KHN0cnVj
dCBwYXJzZXJfZXhlY19zdGF0ZSAqcykKIHsKLQlzZXRfYml0KGNtZF9pbnRlcnJ1cHRfZXZlbnRz
W3MtPnJpbmdfaWRdLm1pX3VzZXJfaW50ZXJydXB0LAotCQkJcy0+d29ya2xvYWQtPnBlbmRpbmdf
ZXZlbnRzKTsKKwlzZXRfYml0KGNtZF9pbnRlcnJ1cHRfZXZlbnRzW3MtPmVuZ2luZS0+aWRdLm1p
X3VzZXJfaW50ZXJydXB0LAorCQlzLT53b3JrbG9hZC0+cGVuZGluZ19ldmVudHMpOwogCXBhdGNo
X3ZhbHVlKHMsIGNtZF9wdHIocywgMCksIE1JX05PT1ApOwogCXJldHVybiAwOwogfQpAQCAtMTIx
MSw3ICsxMjEzLDcgQEAgc3RydWN0IHBsYW5lX2NvZGVfbWFwcGluZyB7CiBzdGF0aWMgaW50IGdl
bjhfZGVjb2RlX21pX2Rpc3BsYXlfZmxpcChzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMsCiAJ
CXN0cnVjdCBtaV9kaXNwbGF5X2ZsaXBfY29tbWFuZF9pbmZvICppbmZvKQogewotCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHMtPnZncHUtPmd2dC0+ZGV2X3ByaXY7CisJc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gcy0+ZW5naW5lLT5pOTE1OwogCXN0cnVj
dCBwbGFuZV9jb2RlX21hcHBpbmcgZ2VuOF9wbGFuZV9jb2RlW10gPSB7CiAJCVswXSA9IHtQSVBF
X0EsIFBMQU5FX0EsIFBSSU1BUllfQV9GTElQX0RPTkV9LAogCQlbMV0gPSB7UElQRV9CLCBQTEFO
RV9BLCBQUklNQVJZX0JfRkxJUF9ET05FfSwKQEAgLTEyNTcsNyArMTI1OSw3IEBAIHN0YXRpYyBp
bnQgZ2VuOF9kZWNvZGVfbWlfZGlzcGxheV9mbGlwKHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0ZSAq
cywKIHN0YXRpYyBpbnQgc2tsX2RlY29kZV9taV9kaXNwbGF5X2ZsaXAoc3RydWN0IHBhcnNlcl9l
eGVjX3N0YXRlICpzLAogCQlzdHJ1Y3QgbWlfZGlzcGxheV9mbGlwX2NvbW1hbmRfaW5mbyAqaW5m
bykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBzLT52Z3B1LT5ndnQt
PmRldl9wcml2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHMtPmVuZ2lu
ZS0+aTkxNTsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IHMtPnZncHU7CiAJdTMyIGR3b3Jk
MCA9IGNtZF92YWwocywgMCk7CiAJdTMyIGR3b3JkMSA9IGNtZF92YWwocywgMSk7CkBAIC0xMzE2
LDEzICsxMzE4LDEyIEBAIHN0YXRpYyBpbnQgc2tsX2RlY29kZV9taV9kaXNwbGF5X2ZsaXAoc3Ry
dWN0IHBhcnNlcl9leGVjX3N0YXRlICpzLAogc3RhdGljIGludCBnZW44X2NoZWNrX21pX2Rpc3Bs
YXlfZmxpcChzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMsCiAJCXN0cnVjdCBtaV9kaXNwbGF5
X2ZsaXBfY29tbWFuZF9pbmZvICppbmZvKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IHMtPnZncHUtPmd2dC0+ZGV2X3ByaXY7CiAJdTMyIHN0cmlkZSwgdGlsZTsKIAog
CWlmICghaW5mby0+YXN5bmNfZmxpcCkKIAkJcmV0dXJuIDA7CiAKLQlpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA+PSA5KSB7CisJaWYgKElOVEVMX0dFTihzLT5lbmdpbmUtPmk5MTUpID49IDkpIHsK
IAkJc3RyaWRlID0gdmdwdV92cmVnX3Qocy0+dmdwdSwgaW5mby0+c3RyaWRlX3JlZykgJiBHRU5N
QVNLKDksIDApOwogCQl0aWxlID0gKHZncHVfdnJlZ190KHMtPnZncHUsIGluZm8tPmN0cmxfcmVn
KSAmCiAJCQkJR0VOTUFTSygxMiwgMTApKSA+PiAxMDsKQEAgLTEzNDUsNyArMTM0Niw3IEBAIHN0
YXRpYyBpbnQgZ2VuOF91cGRhdGVfcGxhbmVfbW1pb19mcm9tX21pX2Rpc3BsYXlfZmxpcCgKIAkJ
c3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzLAogCQlzdHJ1Y3QgbWlfZGlzcGxheV9mbGlwX2Nv
bW1hbmRfaW5mbyAqaW5mbykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYg
PSBzLT52Z3B1LT5ndnQtPmRldl9wcml2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHMtPmVuZ2luZS0+aTkxNTsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IHMtPnZn
cHU7CiAKIAlzZXRfbWFza19iaXRzKCZ2Z3B1X3ZyZWdfdCh2Z3B1LCBpbmZvLT5zdXJmX3JlZyks
IEdFTk1BU0soMzEsIDEyKSwKQEAgLTEzNzYsMTEgKzEzNzcsOSBAQCBzdGF0aWMgaW50IGdlbjhf
dXBkYXRlX3BsYW5lX21taW9fZnJvbV9taV9kaXNwbGF5X2ZsaXAoCiBzdGF0aWMgaW50IGRlY29k
ZV9taV9kaXNwbGF5X2ZsaXAoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzLAogCQlzdHJ1Y3Qg
bWlfZGlzcGxheV9mbGlwX2NvbW1hbmRfaW5mbyAqaW5mbykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSBzLT52Z3B1LT5ndnQtPmRldl9wcml2OwotCi0JaWYgKElTX0JS
T0FEV0VMTChkZXZfcHJpdikpCisJaWYgKElTX0JST0FEV0VMTChzLT5lbmdpbmUtPmk5MTUpKQog
CQlyZXR1cm4gZ2VuOF9kZWNvZGVfbWlfZGlzcGxheV9mbGlwKHMsIGluZm8pOwotCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDkpCisJaWYgKElOVEVMX0dFTihzLT5lbmdpbmUtPmk5MTUpID49
IDkpCiAJCXJldHVybiBza2xfZGVjb2RlX21pX2Rpc3BsYXlfZmxpcChzLCBpbmZvKTsKIAogCXJl
dHVybiAtRU5PREVWOwpAQCAtMTY2NSw3ICsxNjY0LDcgQEAgc3RhdGljIGludCBjbWRfaGFuZGxl
cl9taV9mbHVzaF9kdyhzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMpCiAJCWlmIChyZXQpCiAJ
CQlyZXR1cm4gcmV0OwogCQlpZiAoaW5kZXhfbW9kZSkgewotCQkJaHdzX3BnYSA9IHMtPnZncHUt
Pmh3c19wZ2Fbcy0+cmluZ19pZF07CisJCQlod3NfcGdhID0gcy0+dmdwdS0+aHdzX3BnYVtzLT5l
bmdpbmUtPmlkXTsKIAkJCWdtYSA9IGh3c19wZ2EgKyBnbWE7CiAJCQlwYXRjaF92YWx1ZShzLCBj
bWRfcHRyKHMsIDEpLCBnbWEpOwogCQkJdmFsID0gY21kX3ZhbChzLCAwKSAmICh+KDEgPDwgMjEp
KTsKQEAgLTE2NzQsOCArMTY3Myw4IEBAIHN0YXRpYyBpbnQgY21kX2hhbmRsZXJfbWlfZmx1c2hf
ZHcoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpzKQogCX0KIAkvKiBDaGVjayBub3RpZnkgYml0
ICovCiAJaWYgKChjbWRfdmFsKHMsIDApICYgKDEgPDwgOCkpKQotCQlzZXRfYml0KGNtZF9pbnRl
cnJ1cHRfZXZlbnRzW3MtPnJpbmdfaWRdLm1pX2ZsdXNoX2R3LAotCQkJCXMtPndvcmtsb2FkLT5w
ZW5kaW5nX2V2ZW50cyk7CisJCXNldF9iaXQoY21kX2ludGVycnVwdF9ldmVudHNbcy0+ZW5naW5l
LT5pZF0ubWlfZmx1c2hfZHcsCisJCQlzLT53b3JrbG9hZC0+cGVuZGluZ19ldmVudHMpOwogCXJl
dHVybiByZXQ7CiB9CiAKQEAgLTE3MjMsMTIgKzE3MjIsMTggQEAgc3RhdGljIGludCBjb3B5X2dt
YV90b19odmEoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIHN0cnVjdCBpbnRlbF92Z3B1X21tICpt
bSwKIHN0YXRpYyBpbnQgYmF0Y2hfYnVmZmVyX25lZWRzX3NjYW4oc3RydWN0IHBhcnNlcl9leGVj
X3N0YXRlICpzKQogewogCS8qIERlY2lkZSBwcml2aWxlZ2UgYmFzZWQgb24gYWRkcmVzcyBzcGFj
ZSAqLwotCWlmIChjbWRfdmFsKHMsIDApICYgKDEgPDwgOCkgJiYKLQkJCSEocy0+dmdwdS0+c2Nh
bl9ub25wcml2YmIgJiAoMSA8PCBzLT5yaW5nX2lkKSkpCisJaWYgKGNtZF92YWwocywgMCkgJiBC
SVQoOCkgJiYKKwkgICAgIShzLT52Z3B1LT5zY2FuX25vbnByaXZiYiAmIHMtPmVuZ2luZS0+bWFz
aykpCiAJCXJldHVybiAwOworCiAJcmV0dXJuIDE7CiB9CiAKK3N0YXRpYyBjb25zdCBjaGFyICpy
ZXByX2FkZHJfdHlwZSh1bnNpZ25lZCBpbnQgdHlwZSkKK3sKKwlyZXR1cm4gdHlwZSA9PSBQUEdU
VF9CVUZGRVIgPyAicHBndHQiIDogImdndHQiOworfQorCiBzdGF0aWMgaW50IGZpbmRfYmJfc2l6
ZShzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMsCiAJCQl1bnNpZ25lZCBsb25nICpiYl9zaXpl
LAogCQkJdW5zaWduZWQgbG9uZyAqYmJfZW5kX2NtZF9vZmZzZXQpCkBAIC0xNzUxLDI0ICsxNzU2
LDI0IEBAIHN0YXRpYyBpbnQgZmluZF9iYl9zaXplKHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0ZSAq
cywKIAkJcmV0dXJuIC1FRkFVTFQ7CiAKIAljbWQgPSBjbWRfdmFsKHMsIDApOwotCWluZm8gPSBn
ZXRfY21kX2luZm8ocy0+dmdwdS0+Z3Z0LCBjbWQsIHMtPnJpbmdfaWQpOworCWluZm8gPSBnZXRf
Y21kX2luZm8ocy0+dmdwdS0+Z3Z0LCBjbWQsIHMtPmVuZ2luZSk7CiAJaWYgKGluZm8gPT0gTlVM
TCkgewotCQlndnRfdmdwdV9lcnIoInVua25vd24gY21kIDB4JXgsIG9wY29kZT0weCV4LCBhZGRy
X3R5cGU9JXMsIHJpbmcgJWQsIHdvcmtsb2FkPSVwXG4iLAotCQkJCWNtZCwgZ2V0X29wY29kZShj
bWQsIHMtPnJpbmdfaWQpLAotCQkJCShzLT5idWZfYWRkcl90eXBlID09IFBQR1RUX0JVRkZFUikg
PwotCQkJCSJwcGd0dCIgOiAiZ2d0dCIsIHMtPnJpbmdfaWQsIHMtPndvcmtsb2FkKTsKKwkJZ3Z0
X3ZncHVfZXJyKCJ1bmtub3duIGNtZCAweCV4LCBvcGNvZGU9MHgleCwgYWRkcl90eXBlPSVzLCBy
aW5nICVzLCB3b3JrbG9hZD0lcFxuIiwKKwkJCSAgICAgY21kLCBnZXRfb3Bjb2RlKGNtZCwgcy0+
ZW5naW5lKSwKKwkJCSAgICAgcmVwcl9hZGRyX3R5cGUocy0+YnVmX2FkZHJfdHlwZSksCisJCQkg
ICAgIHMtPmVuZ2luZS0+bmFtZSwgcy0+d29ya2xvYWQpOwogCQlyZXR1cm4gLUVCQURSUUM7CiAJ
fQogCWRvIHsKIAkJaWYgKGNvcHlfZ21hX3RvX2h2YShzLT52Z3B1LCBtbSwKLQkJCQlnbWEsIGdt
YSArIDQsICZjbWQpIDwgMCkKKwkJCQkgICAgZ21hLCBnbWEgKyA0LCAmY21kKSA8IDApCiAJCQly
ZXR1cm4gLUVGQVVMVDsKLQkJaW5mbyA9IGdldF9jbWRfaW5mbyhzLT52Z3B1LT5ndnQsIGNtZCwg
cy0+cmluZ19pZCk7CisJCWluZm8gPSBnZXRfY21kX2luZm8ocy0+dmdwdS0+Z3Z0LCBjbWQsIHMt
PmVuZ2luZSk7CiAJCWlmIChpbmZvID09IE5VTEwpIHsKLQkJCWd2dF92Z3B1X2VycigidW5rbm93
biBjbWQgMHgleCwgb3Bjb2RlPTB4JXgsIGFkZHJfdHlwZT0lcywgcmluZyAlZCwgd29ya2xvYWQ9
JXBcbiIsCi0JCQkJY21kLCBnZXRfb3Bjb2RlKGNtZCwgcy0+cmluZ19pZCksCi0JCQkJKHMtPmJ1
Zl9hZGRyX3R5cGUgPT0gUFBHVFRfQlVGRkVSKSA/Ci0JCQkJInBwZ3R0IiA6ICJnZ3R0Iiwgcy0+
cmluZ19pZCwgcy0+d29ya2xvYWQpOworCQkJZ3Z0X3ZncHVfZXJyKCJ1bmtub3duIGNtZCAweCV4
LCBvcGNvZGU9MHgleCwgYWRkcl90eXBlPSVzLCByaW5nICVzLCB3b3JrbG9hZD0lcFxuIiwKKwkJ
CQkgICAgIGNtZCwgZ2V0X29wY29kZShjbWQsIHMtPmVuZ2luZSksCisJCQkJICAgICByZXByX2Fk
ZHJfdHlwZShzLT5idWZfYWRkcl90eXBlKSwKKwkJCQkgICAgIHMtPmVuZ2luZS0+bmFtZSwgcy0+
d29ya2xvYWQpOwogCQkJcmV0dXJuIC1FQkFEUlFDOwogCQl9CiAKQEAgLTE3OTcsMTIgKzE4MDIs
MTIgQEAgc3RhdGljIGludCBhdWRpdF9iYl9lbmQoc3RydWN0IHBhcnNlcl9leGVjX3N0YXRlICpz
LCB2b2lkICp2YSkKIAl1MzIgY21kID0gKih1MzIgKil2YTsKIAljb25zdCBzdHJ1Y3QgY21kX2lu
Zm8gKmluZm87CiAKLQlpbmZvID0gZ2V0X2NtZF9pbmZvKHMtPnZncHUtPmd2dCwgY21kLCBzLT5y
aW5nX2lkKTsKKwlpbmZvID0gZ2V0X2NtZF9pbmZvKHMtPnZncHUtPmd2dCwgY21kLCBzLT5lbmdp
bmUpOwogCWlmIChpbmZvID09IE5VTEwpIHsKLQkJZ3Z0X3ZncHVfZXJyKCJ1bmtub3duIGNtZCAw
eCV4LCBvcGNvZGU9MHgleCwgYWRkcl90eXBlPSVzLCByaW5nICVkLCB3b3JrbG9hZD0lcFxuIiwK
LQkJCWNtZCwgZ2V0X29wY29kZShjbWQsIHMtPnJpbmdfaWQpLAotCQkJKHMtPmJ1Zl9hZGRyX3R5
cGUgPT0gUFBHVFRfQlVGRkVSKSA/Ci0JCQkicHBndHQiIDogImdndHQiLCBzLT5yaW5nX2lkLCBz
LT53b3JrbG9hZCk7CisJCWd2dF92Z3B1X2VycigidW5rbm93biBjbWQgMHgleCwgb3Bjb2RlPTB4
JXgsIGFkZHJfdHlwZT0lcywgcmluZyAlcywgd29ya2xvYWQ9JXBcbiIsCisJCQkgICAgIGNtZCwg
Z2V0X29wY29kZShjbWQsIHMtPmVuZ2luZSksCisJCQkgICAgIHJlcHJfYWRkcl90eXBlKHMtPmJ1
Zl9hZGRyX3R5cGUpLAorCQkJICAgICBzLT5lbmdpbmUtPm5hbWUsIHMtPndvcmtsb2FkKTsKIAkJ
cmV0dXJuIC1FQkFEUlFDOwogCX0KIApAQCAtMTg1NSw3ICsxODYwLDcgQEAgc3RhdGljIGludCBw
ZXJmb3JtX2JiX3NoYWRvdyhzdHJ1Y3QgcGFyc2VyX2V4ZWNfc3RhdGUgKnMpCiAJaWYgKGJiLT5w
cGd0dCkKIAkJc3RhcnRfb2Zmc2V0ID0gZ21hICYgfkk5MTVfR1RUX1BBR0VfTUFTSzsKIAotCWJi
LT5vYmogPSBpOTE1X2dlbV9vYmplY3RfY3JlYXRlX3NobWVtKHMtPnZncHUtPmd2dC0+ZGV2X3By
aXYsCisJYmItPm9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfc2htZW0ocy0+ZW5naW5lLT5p
OTE1LAogCQkJCQkgICAgICAgcm91bmRfdXAoYmJfc2l6ZSArIHN0YXJ0X29mZnNldCwKIAkJCQkJ
CQlQQUdFX1NJWkUpKTsKIAlpZiAoSVNfRVJSKGJiLT5vYmopKSB7CkBAIC0yNjY0LDI1ICsyNjY5
LDI1IEBAIHN0YXRpYyBpbnQgY21kX3BhcnNlcl9leGVjKHN0cnVjdCBwYXJzZXJfZXhlY19zdGF0
ZSAqcykKIAlpZiAoY21kID09IE1JX05PT1ApCiAJCWluZm8gPSAmY21kX2luZm9bbWlfbm9vcF9p
bmRleF07CiAJZWxzZQotCQlpbmZvID0gZ2V0X2NtZF9pbmZvKHMtPnZncHUtPmd2dCwgY21kLCBz
LT5yaW5nX2lkKTsKKwkJaW5mbyA9IGdldF9jbWRfaW5mbyhzLT52Z3B1LT5ndnQsIGNtZCwgcy0+
ZW5naW5lKTsKIAogCWlmIChpbmZvID09IE5VTEwpIHsKLQkJZ3Z0X3ZncHVfZXJyKCJ1bmtub3du
IGNtZCAweCV4LCBvcGNvZGU9MHgleCwgYWRkcl90eXBlPSVzLCByaW5nICVkLCB3b3JrbG9hZD0l
cFxuIiwKLQkJCQljbWQsIGdldF9vcGNvZGUoY21kLCBzLT5yaW5nX2lkKSwKLQkJCQkocy0+YnVm
X2FkZHJfdHlwZSA9PSBQUEdUVF9CVUZGRVIpID8KLQkJCQkicHBndHQiIDogImdndHQiLCBzLT5y
aW5nX2lkLCBzLT53b3JrbG9hZCk7CisJCWd2dF92Z3B1X2VycigidW5rbm93biBjbWQgMHgleCwg
b3Bjb2RlPTB4JXgsIGFkZHJfdHlwZT0lcywgcmluZyAlcywgd29ya2xvYWQ9JXBcbiIsCisJCQkg
ICAgIGNtZCwgZ2V0X29wY29kZShjbWQsIHMtPmVuZ2luZSksCisJCQkgICAgIHJlcHJfYWRkcl90
eXBlKHMtPmJ1Zl9hZGRyX3R5cGUpLAorCQkJICAgICBzLT5lbmdpbmUtPm5hbWUsIHMtPndvcmts
b2FkKTsKIAkJcmV0dXJuIC1FQkFEUlFDOwogCX0KIAogCXMtPmluZm8gPSBpbmZvOwogCi0JdHJh
Y2VfZ3Z0X2NvbW1hbmQodmdwdS0+aWQsIHMtPnJpbmdfaWQsIHMtPmlwX2dtYSwgcy0+aXBfdmEs
CisJdHJhY2VfZ3Z0X2NvbW1hbmQodmdwdS0+aWQsIHMtPmVuZ2luZS0+aWQsIHMtPmlwX2dtYSwg
cy0+aXBfdmEsCiAJCQkgIGNtZF9sZW5ndGgocyksIHMtPmJ1Zl90eXBlLCBzLT5idWZfYWRkcl90
eXBlLAogCQkJICBzLT53b3JrbG9hZCwgaW5mby0+bmFtZSk7CiAKIAlpZiAoKGluZm8tPmZsYWcg
JiBGX0xFTl9NQVNLKSA9PSBGX0xFTl9WQVJfRklYRUQpIHsKIAkJcmV0ID0gZ3Z0X2NoZWNrX3Zh
bGlkX2NtZF9sZW5ndGgoY21kX2xlbmd0aChzKSwKLQkJCWluZm8tPnZhbGlkX2xlbik7CisJCQkJ
CQkgaW5mby0+dmFsaWRfbGVuKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CiAJfQpAQCAt
Mjc3OSw3ICsyNzg0LDcgQEAgc3RhdGljIGludCBzY2FuX3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92
Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAlzLmJ1Zl90eXBlID0gUklOR19CVUZGRVJfSU5TVFJV
Q1RJT047CiAJcy5idWZfYWRkcl90eXBlID0gR1RUX0JVRkZFUjsKIAlzLnZncHUgPSB3b3JrbG9h
ZC0+dmdwdTsKLQlzLnJpbmdfaWQgPSB3b3JrbG9hZC0+cmluZ19pZDsKKwlzLmVuZ2luZSA9IHdv
cmtsb2FkLT5lbmdpbmU7CiAJcy5yaW5nX3N0YXJ0ID0gd29ya2xvYWQtPnJiX3N0YXJ0OwogCXMu
cmluZ19zaXplID0gX1JJTkdfQ1RMX0JVRl9TSVpFKHdvcmtsb2FkLT5yYl9jdGwpOwogCXMucmlu
Z19oZWFkID0gZ21hX2hlYWQ7CkBAIC0yNzg4LDggKzI3OTMsNyBAQCBzdGF0aWMgaW50IHNjYW5f
d29ya2xvYWQoc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmtsb2FkKQogCXMud29ya2xv
YWQgPSB3b3JrbG9hZDsKIAlzLmlzX2N0eF93YSA9IGZhbHNlOwogCi0JaWYgKChieXBhc3Nfc2Nh
bl9tYXNrICYgKDEgPDwgd29ya2xvYWQtPnJpbmdfaWQpKSB8fAotCQlnbWFfaGVhZCA9PSBnbWFf
dGFpbCkKKwlpZiAoYnlwYXNzX3NjYW5fbWFzayAmIHdvcmtsb2FkLT5lbmdpbmUtPm1hc2sgfHwg
Z21hX2hlYWQgPT0gZ21hX3RhaWwpCiAJCXJldHVybiAwOwogCiAJcmV0ID0gaXBfZ21hX3NldCgm
cywgZ21hX2hlYWQpOwpAQCAtMjgyOCw3ICsyODMyLDcgQEAgc3RhdGljIGludCBzY2FuX3dhX2N0
eChzdHJ1Y3QgaW50ZWxfc2hhZG93X3dhX2N0eCAqd2FfY3R4KQogCXMuYnVmX3R5cGUgPSBSSU5H
X0JVRkZFUl9JTlNUUlVDVElPTjsKIAlzLmJ1Zl9hZGRyX3R5cGUgPSBHVFRfQlVGRkVSOwogCXMu
dmdwdSA9IHdvcmtsb2FkLT52Z3B1OwotCXMucmluZ19pZCA9IHdvcmtsb2FkLT5yaW5nX2lkOwor
CXMuZW5naW5lID0gd29ya2xvYWQtPmVuZ2luZTsKIAlzLnJpbmdfc3RhcnQgPSB3YV9jdHgtPmlu
ZGlyZWN0X2N0eC5ndWVzdF9nbWE7CiAJcy5yaW5nX3NpemUgPSByaW5nX3NpemU7CiAJcy5yaW5n
X2hlYWQgPSBnbWFfaGVhZDsKQEAgLTI4NTMsNyArMjg1Nyw2IEBAIHN0YXRpYyBpbnQgc2hhZG93
X3dvcmtsb2FkX3JpbmdfYnVmZmVyKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9h
ZCkKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9zdWJtaXNzaW9uICpzID0gJnZncHUtPnN1Ym1pc3Npb247
CiAJdW5zaWduZWQgbG9uZyBnbWFfaGVhZCwgZ21hX3RhaWwsIGdtYV90b3AsIGd1ZXN0X3JiX3Np
emU7CiAJdm9pZCAqc2hhZG93X3JpbmdfYnVmZmVyX3ZhOwotCWludCByaW5nX2lkID0gd29ya2xv
YWQtPnJpbmdfaWQ7CiAJaW50IHJldDsKIAogCWd1ZXN0X3JiX3NpemUgPSBfUklOR19DVExfQlVG
X1NJWkUod29ya2xvYWQtPnJiX2N0bCk7CkBAIC0yODY2LDIxICsyODY5LDIxIEBAIHN0YXRpYyBp
bnQgc2hhZG93X3dvcmtsb2FkX3JpbmdfYnVmZmVyKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2Fk
ICp3b3JrbG9hZCkKIAlnbWFfdGFpbCA9IHdvcmtsb2FkLT5yYl9zdGFydCArIHdvcmtsb2FkLT5y
Yl90YWlsOwogCWdtYV90b3AgPSB3b3JrbG9hZC0+cmJfc3RhcnQgKyBndWVzdF9yYl9zaXplOwog
Ci0JaWYgKHdvcmtsb2FkLT5yYl9sZW4gPiBzLT5yaW5nX3NjYW5fYnVmZmVyX3NpemVbcmluZ19p
ZF0pIHsKKwlpZiAod29ya2xvYWQtPnJiX2xlbiA+IHMtPnJpbmdfc2Nhbl9idWZmZXJfc2l6ZVt3
b3JrbG9hZC0+ZW5naW5lLT5pZF0pIHsKIAkJdm9pZCAqcDsKIAogCQkvKiByZWFsbG9jIHRoZSBu
ZXcgcmluZyBidWZmZXIgaWYgbmVlZGVkICovCi0JCXAgPSBrcmVhbGxvYyhzLT5yaW5nX3NjYW5f
YnVmZmVyW3JpbmdfaWRdLCB3b3JrbG9hZC0+cmJfbGVuLAotCQkJCUdGUF9LRVJORUwpOworCQlw
ID0ga3JlYWxsb2Mocy0+cmluZ19zY2FuX2J1ZmZlclt3b3JrbG9hZC0+ZW5naW5lLT5pZF0sCisJ
CQkgICAgIHdvcmtsb2FkLT5yYl9sZW4sIEdGUF9LRVJORUwpOwogCQlpZiAoIXApIHsKIAkJCWd2
dF92Z3B1X2VycigiZmFpbCB0byByZS1hbGxvYyByaW5nIHNjYW4gYnVmZmVyXG4iKTsKIAkJCXJl
dHVybiAtRU5PTUVNOwogCQl9Ci0JCXMtPnJpbmdfc2Nhbl9idWZmZXJbcmluZ19pZF0gPSBwOwot
CQlzLT5yaW5nX3NjYW5fYnVmZmVyX3NpemVbcmluZ19pZF0gPSB3b3JrbG9hZC0+cmJfbGVuOwor
CQlzLT5yaW5nX3NjYW5fYnVmZmVyW3dvcmtsb2FkLT5lbmdpbmUtPmlkXSA9IHA7CisJCXMtPnJp
bmdfc2Nhbl9idWZmZXJfc2l6ZVt3b3JrbG9hZC0+ZW5naW5lLT5pZF0gPSB3b3JrbG9hZC0+cmJf
bGVuOwogCX0KIAotCXNoYWRvd19yaW5nX2J1ZmZlcl92YSA9IHMtPnJpbmdfc2Nhbl9idWZmZXJb
cmluZ19pZF07CisJc2hhZG93X3JpbmdfYnVmZmVyX3ZhID0gcy0+cmluZ19zY2FuX2J1ZmZlclt3
b3JrbG9hZC0+ZW5naW5lLT5pZF07CiAKIAkvKiBnZXQgc2hhZG93IHJpbmcgYnVmZmVyIHZhICov
CiAJd29ya2xvYWQtPnNoYWRvd19yaW5nX2J1ZmZlcl92YSA9IHNoYWRvd19yaW5nX2J1ZmZlcl92
YTsKQEAgLTI5MzgsNyArMjk0MSw3IEBAIHN0YXRpYyBpbnQgc2hhZG93X2luZGlyZWN0X2N0eChz
dHJ1Y3QgaW50ZWxfc2hhZG93X3dhX2N0eCAqd2FfY3R4KQogCWludCByZXQgPSAwOwogCXZvaWQg
Km1hcDsKIAotCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVfc2htZW0od29ya2xvYWQtPnZn
cHUtPmd2dC0+ZGV2X3ByaXYsCisJb2JqID0gaTkxNV9nZW1fb2JqZWN0X2NyZWF0ZV9zaG1lbSh3
b3JrbG9hZC0+ZW5naW5lLT5pOTE1LAogCQkJCQkgICByb3VuZHVwKGN0eF9zaXplICsgQ0FDSEVM
SU5FX0JZVEVTLAogCQkJCQkJICAgUEFHRV9TSVpFKSk7CiAJaWYgKElTX0VSUihvYmopKQpAQCAt
MzAyNywzMCArMzAzMCwxNCBAQCBpbnQgaW50ZWxfZ3Z0X3NjYW5fYW5kX3NoYWRvd193YV9jdHgo
c3RydWN0IGludGVsX3NoYWRvd193YV9jdHggKndhX2N0eCkKIAlyZXR1cm4gMDsKIH0KIAotc3Rh
dGljIGNvbnN0IHN0cnVjdCBjbWRfaW5mbyAqZmluZF9jbWRfZW50cnlfYW55X3Jpbmcoc3RydWN0
IGludGVsX2d2dCAqZ3Z0LAotCQl1bnNpZ25lZCBpbnQgb3Bjb2RlLCB1bnNpZ25lZCBsb25nIHJp
bmdzKQotewotCWNvbnN0IHN0cnVjdCBjbWRfaW5mbyAqaW5mbyA9IE5VTEw7Ci0JdW5zaWduZWQg
aW50IHJpbmc7Ci0KLQlmb3JfZWFjaF9zZXRfYml0KHJpbmcsICZyaW5ncywgSTkxNV9OVU1fRU5H
SU5FUykgewotCQlpbmZvID0gZmluZF9jbWRfZW50cnkoZ3Z0LCBvcGNvZGUsIHJpbmcpOwotCQlp
ZiAoaW5mbykKLQkJCWJyZWFrOwotCX0KLQlyZXR1cm4gaW5mbzsKLX0KLQogc3RhdGljIGludCBp
bml0X2NtZF90YWJsZShzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiB7CisJdW5zaWduZWQgaW50IGdl
bl90eXBlID0gaW50ZWxfZ3Z0X2dldF9kZXZpY2VfdHlwZShndnQpOwogCWludCBpOwotCXN0cnVj
dCBjbWRfZW50cnkgKmU7Ci0JY29uc3Qgc3RydWN0IGNtZF9pbmZvICppbmZvOwotCXVuc2lnbmVk
IGludCBnZW5fdHlwZTsKLQotCWdlbl90eXBlID0gaW50ZWxfZ3Z0X2dldF9kZXZpY2VfdHlwZShn
dnQpOwogCiAJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJWkUoY21kX2luZm8pOyBpKyspIHsKKwkJ
c3RydWN0IGNtZF9lbnRyeSAqZTsKKwogCQlpZiAoIShjbWRfaW5mb1tpXS5kZXZpY2VzICYgZ2Vu
X3R5cGUpKQogCQkJY29udGludWU7CiAKQEAgLTMwNTksMjMgKzMwNDYsMTYgQEAgc3RhdGljIGlu
dCBpbml0X2NtZF90YWJsZShzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiAJCQlyZXR1cm4gLUVOT01F
TTsKIAogCQllLT5pbmZvID0gJmNtZF9pbmZvW2ldOwotCQlpbmZvID0gZmluZF9jbWRfZW50cnlf
YW55X3JpbmcoZ3Z0LAotCQkJCWUtPmluZm8tPm9wY29kZSwgZS0+aW5mby0+cmluZ3MpOwotCQlp
ZiAoaW5mbykgewotCQkJZ3Z0X2VycigiJXMgJXMgZHVwbGljYXRlZFxuIiwgZS0+aW5mby0+bmFt
ZSwKLQkJCQkJaW5mby0+bmFtZSk7Ci0JCQlrZnJlZShlKTsKLQkJCXJldHVybiAtRUVYSVNUOwot
CQl9CiAJCWlmIChjbWRfaW5mb1tpXS5vcGNvZGUgPT0gT1BfTUlfTk9PUCkKIAkJCW1pX25vb3Bf
aW5kZXggPSBpOwogCiAJCUlOSVRfSExJU1RfTk9ERSgmZS0+aGxpc3QpOwogCQlhZGRfY21kX2Vu
dHJ5KGd2dCwgZSk7CiAJCWd2dF9kYmdfY21kKCJhZGQgJS0zMHMgb3AgJTA0eCBmbGFnICV4IGRl
dnMgJTAyeCByaW5ncyAlMDJ4XG4iLAotCQkJCWUtPmluZm8tPm5hbWUsIGUtPmluZm8tPm9wY29k
ZSwgZS0+aW5mby0+ZmxhZywKLQkJCQllLT5pbmZvLT5kZXZpY2VzLCBlLT5pbmZvLT5yaW5ncyk7
CisJCQkgICAgZS0+aW5mby0+bmFtZSwgZS0+aW5mby0+b3Bjb2RlLCBlLT5pbmZvLT5mbGFnLAor
CQkJICAgIGUtPmluZm8tPmRldmljZXMsIGUtPmluZm8tPnJpbmdzKTsKIAl9CisKIAlyZXR1cm4g
MDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2RlYnVnZnMuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9kZWJ1Z2ZzLmMKaW5kZXggMjg1ZjYwMTFhNTM3Li44
NzRlZTFkZTZiNDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9kZWJ1Z2Zz
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L2RlYnVnZnMuYwpAQCAtMTI4LDYgKzEy
OCw3IEBAIHN0YXRpYyBpbnQKIHZncHVfc2Nhbl9ub25wcml2YmJfZ2V0KHZvaWQgKmRhdGEsIHU2
NCAqdmFsKQogewogCXN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1ID0gKHN0cnVjdCBpbnRlbF92Z3B1
ICopZGF0YTsKKwogCSp2YWwgPSB2Z3B1LT5zY2FuX25vbnByaXZiYjsKIAlyZXR1cm4gMDsKIH0K
QEAgLTE0Miw0MiArMTQzLDcgQEAgc3RhdGljIGludAogdmdwdV9zY2FuX25vbnByaXZiYl9zZXQo
dm9pZCAqZGF0YSwgdTY0IHZhbCkKIHsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IChzdHJ1
Y3QgaW50ZWxfdmdwdSAqKWRhdGE7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
ID0gdmdwdS0+Z3Z0LT5kZXZfcHJpdjsKLQllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKLQljaGFy
IGJ1ZlsxMjhdLCAqczsKLQlpbnQgbGVuOwotCi0JdmFsICY9ICgxIDw8IEk5MTVfTlVNX0VOR0lO
RVMpIC0gMTsKLQotCWlmICh2Z3B1LT5zY2FuX25vbnByaXZiYiA9PSB2YWwpCi0JCXJldHVybiAw
OwotCi0JaWYgKCF2YWwpCi0JCWdvdG8gZG9uZTsKLQotCWxlbiA9IHNwcmludGYoYnVmLAotCQki
Z3Z0OiB2Z3B1ICVkIHR1cm5zIG9uIG5vbi1wcml2aWxlZ2VkIGJhdGNoIGJ1ZmZlcnMgc2Nhbm5p
bmcgb24gRW5naW5lczoiLAotCQl2Z3B1LT5pZCk7Ci0KLQlzID0gYnVmICsgbGVuOwotCi0JZm9y
IChpZCA9IDA7IGlkIDwgSTkxNV9OVU1fRU5HSU5FUzsgaWQrKykgewotCQlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7Ci0KLQkJZW5naW5lID0gZGV2X3ByaXYtPmVuZ2luZVtpZF07Ci0J
CWlmIChlbmdpbmUgJiYgKHZhbCAmICgxIDw8IGlkKSkpIHsKLQkJCWxlbiA9IHNucHJpbnRmKHMs
IDQsICIlZCwgIiwgZW5naW5lLT5pZCk7Ci0JCQlzICs9IGxlbjsKLQkJfSBlbHNlCi0JCQl2YWwg
Jj0gIH4oMSA8PCBpZCk7Ci0JfQotCi0JaWYgKHZhbCkKLQkJc3ByaW50ZihzLCAibG93IHBlcmZv
cm1hbmNlIGV4cGVjdGVkLiIpOwotCi0JcHJfd2FybigiJXNcbiIsIGJ1Zik7CiAKLWRvbmU6CiAJ
dmdwdS0+c2Nhbl9ub25wcml2YmIgPSB2YWw7CiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d2dC9leGVjbGlzdC5jCmluZGV4IGYyMWI4ZmI1YjM3ZS4uYTQ0NzQ2MmQ4NzAxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuYwpAQCAtMzksOCArMzksNyBAQAogI2RlZmluZSBfRUxf
T0ZGU0VUX1NUQVRVU19CVUYgICAweDM3MAogI2RlZmluZSBfRUxfT0ZGU0VUX1NUQVRVU19QVFIg
ICAweDNBMAogCi0jZGVmaW5lIGV4ZWNsaXN0X3JpbmdfbW1pbyhndnQsIHJpbmdfaWQsIG9mZnNl
dCkgXAotCShndnQtPmRldl9wcml2LT5lbmdpbmVbcmluZ19pZF0tPm1taW9fYmFzZSArIChvZmZz
ZXQpKQorI2RlZmluZSBleGVjbGlzdF9yaW5nX21taW8oZSwgb2Zmc2V0KSAoKGUpLT5tbWlvX2Jh
c2UgKyAob2Zmc2V0KSkKIAogI2RlZmluZSB2YWxpZF9jb250ZXh0KGN0eCkgKChjdHgpLT52YWxp
ZCkKICNkZWZpbmUgc2FtZV9jb250ZXh0KGEsIGIpICgoKGEpLT5jb250ZXh0X2lkID09IChiKS0+
Y29udGV4dF9pZCkgJiYgXApAQCAtNTQsMTIgKzUzLDEyIEBAIHN0YXRpYyBpbnQgY29udGV4dF9z
d2l0Y2hfZXZlbnRzW10gPSB7CiAJW1ZFQ1MwXSA9IFZFQ1NfQVNfQ09OVEVYVF9TV0lUQ0gsCiB9
OwogCi1zdGF0aWMgaW50IHJpbmdfaWRfdG9fY29udGV4dF9zd2l0Y2hfZXZlbnQodW5zaWduZWQg
aW50IHJpbmdfaWQpCitzdGF0aWMgaW50IHRvX2NvbnRleHRfc3dpdGNoX2V2ZW50KGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlpZiAoV0FSTl9PTihyaW5nX2lkID49
IEFSUkFZX1NJWkUoY29udGV4dF9zd2l0Y2hfZXZlbnRzKSkpCisJaWYgKFdBUk5fT04oZW5naW5l
LT5pZCA+PSBBUlJBWV9TSVpFKGNvbnRleHRfc3dpdGNoX2V2ZW50cykpKQogCQlyZXR1cm4gLUVJ
TlZBTDsKIAotCXJldHVybiBjb250ZXh0X3N3aXRjaF9ldmVudHNbcmluZ19pZF07CisJcmV0dXJu
IGNvbnRleHRfc3dpdGNoX2V2ZW50c1tlbmdpbmUtPmlkXTsKIH0KIAogc3RhdGljIHZvaWQgc3dp
dGNoX3ZpcnR1YWxfZXhlY2xpc3Rfc2xvdChzdHJ1Y3QgaW50ZWxfdmdwdV9leGVjbGlzdCAqZXhl
Y2xpc3QpCkBAIC05Myw5ICs5Miw4IEBAIHN0YXRpYyB2b2lkIGVtdWxhdGVfZXhlY2xpc3Rfc3Rh
dHVzKHN0cnVjdCBpbnRlbF92Z3B1X2V4ZWNsaXN0ICpleGVjbGlzdCkKIAlzdHJ1Y3QgZXhlY2xp
c3RfY3R4X2Rlc2NyaXB0b3JfZm9ybWF0ICpkZXNjID0gZXhlY2xpc3QtPnJ1bm5pbmdfY29udGV4
dDsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IGV4ZWNsaXN0LT52Z3B1OwogCXN0cnVjdCBl
eGVjbGlzdF9zdGF0dXNfZm9ybWF0IHN0YXR1czsKLQlpbnQgcmluZ19pZCA9IGV4ZWNsaXN0LT5y
aW5nX2lkOwotCXUzMiBzdGF0dXNfcmVnID0gZXhlY2xpc3RfcmluZ19tbWlvKHZncHUtPmd2dCwK
LQkJCXJpbmdfaWQsIF9FTF9PRkZTRVRfU1RBVFVTKTsKKwl1MzIgc3RhdHVzX3JlZyA9CisJCWV4
ZWNsaXN0X3JpbmdfbW1pbyhleGVjbGlzdC0+ZW5naW5lLCBfRUxfT0ZGU0VUX1NUQVRVUyk7CiAK
IAlzdGF0dXMubGR3ID0gdmdwdV92cmVnKHZncHUsIHN0YXR1c19yZWcpOwogCXN0YXR1cy51ZHcg
PSB2Z3B1X3ZyZWcodmdwdSwgc3RhdHVzX3JlZyArIDQpOwpAQCAtMTI0LDIxICsxMjIsMTkgQEAg
c3RhdGljIHZvaWQgZW11bGF0ZV9leGVjbGlzdF9zdGF0dXMoc3RydWN0IGludGVsX3ZncHVfZXhl
Y2xpc3QgKmV4ZWNsaXN0KQogfQogCiBzdGF0aWMgdm9pZCBlbXVsYXRlX2NzYl91cGRhdGUoc3Ry
dWN0IGludGVsX3ZncHVfZXhlY2xpc3QgKmV4ZWNsaXN0LAotCQlzdHJ1Y3QgZXhlY2xpc3RfY29u
dGV4dF9zdGF0dXNfZm9ybWF0ICpzdGF0dXMsCi0JCWJvb2wgdHJpZ2dlcl9pbnRlcnJ1cHRfbGF0
ZXIpCisJCQkgICAgICAgc3RydWN0IGV4ZWNsaXN0X2NvbnRleHRfc3RhdHVzX2Zvcm1hdCAqc3Rh
dHVzLAorCQkJICAgICAgIGJvb2wgdHJpZ2dlcl9pbnRlcnJ1cHRfbGF0ZXIpCiB7CiAJc3RydWN0
IGludGVsX3ZncHUgKnZncHUgPSBleGVjbGlzdC0+dmdwdTsKLQlpbnQgcmluZ19pZCA9IGV4ZWNs
aXN0LT5yaW5nX2lkOwogCXN0cnVjdCBleGVjbGlzdF9jb250ZXh0X3N0YXR1c19wb2ludGVyX2Zv
cm1hdCBjdHhfc3RhdHVzX3B0cjsKIAl1MzIgd3JpdGVfcG9pbnRlcjsKIAl1MzIgY3R4X3N0YXR1
c19wdHJfcmVnLCBjdHhfc3RhdHVzX2J1Zl9yZWcsIG9mZnNldDsKIAl1bnNpZ25lZCBsb25nIGh3
c3BfZ3BhOwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHZncHUtPmd2dC0+
ZGV2X3ByaXY7CiAKLQljdHhfc3RhdHVzX3B0cl9yZWcgPSBleGVjbGlzdF9yaW5nX21taW8odmdw
dS0+Z3Z0LCByaW5nX2lkLAotCQkJX0VMX09GRlNFVF9TVEFUVVNfUFRSKTsKLQljdHhfc3RhdHVz
X2J1Zl9yZWcgPSBleGVjbGlzdF9yaW5nX21taW8odmdwdS0+Z3Z0LCByaW5nX2lkLAotCQkJX0VM
X09GRlNFVF9TVEFUVVNfQlVGKTsKKwljdHhfc3RhdHVzX3B0cl9yZWcgPQorCQlleGVjbGlzdF9y
aW5nX21taW8oZXhlY2xpc3QtPmVuZ2luZSwgX0VMX09GRlNFVF9TVEFUVVNfUFRSKTsKKwljdHhf
c3RhdHVzX2J1Zl9yZWcgPQorCQlleGVjbGlzdF9yaW5nX21taW8oZXhlY2xpc3QtPmVuZ2luZSwg
X0VMX09GRlNFVF9TVEFUVVNfQlVGKTsKIAogCWN0eF9zdGF0dXNfcHRyLmR3ID0gdmdwdV92cmVn
KHZncHUsIGN0eF9zdGF0dXNfcHRyX3JlZyk7CiAKQEAgLTE2MSwyNiArMTU3LDI0IEBAIHN0YXRp
YyB2b2lkIGVtdWxhdGVfY3NiX3VwZGF0ZShzdHJ1Y3QgaW50ZWxfdmdwdV9leGVjbGlzdCAqZXhl
Y2xpc3QsCiAKIAkvKiBVcGRhdGUgdGhlIENTQiBhbmQgQ1NCIHdyaXRlIHBvaW50ZXIgaW4gSFdT
UCAqLwogCWh3c3BfZ3BhID0gaW50ZWxfdmdwdV9nbWFfdG9fZ3BhKHZncHUtPmd0dC5nZ3R0X21t
LAotCQkJCQkgdmdwdS0+aHdzX3BnYVtyaW5nX2lkXSk7CisJCQkJCSB2Z3B1LT5od3NfcGdhW2V4
ZWNsaXN0LT5lbmdpbmUtPmlkXSk7CiAJaWYgKGh3c3BfZ3BhICE9IElOVEVMX0dWVF9JTlZBTElE
X0FERFIpIHsKIAkJaW50ZWxfZ3Z0X2h5cGVydmlzb3Jfd3JpdGVfZ3BhKHZncHUsCi0JCQlod3Nw
X2dwYSArIEk5MTVfSFdTX0NTQl9CVUYwX0lOREVYICogNCArCi0JCQl3cml0ZV9wb2ludGVyICog
OCwKLQkJCXN0YXR1cywgOCk7CisJCQkJCSAgICAgICBod3NwX2dwYSArIEk5MTVfSFdTX0NTQl9C
VUYwX0lOREVYICogNCArIHdyaXRlX3BvaW50ZXIgKiA4LAorCQkJCQkgICAgICAgc3RhdHVzLCA4
KTsKIAkJaW50ZWxfZ3Z0X2h5cGVydmlzb3Jfd3JpdGVfZ3BhKHZncHUsCi0JCQlod3NwX2dwYSAr
Ci0JCQlpbnRlbF9od3NfY3NiX3dyaXRlX2luZGV4KGRldl9wcml2KSAqIDQsCi0JCQkmd3JpdGVf
cG9pbnRlciwgNCk7CisJCQkJCSAgICAgICBod3NwX2dwYSArIGludGVsX2h3c19jc2Jfd3JpdGVf
aW5kZXgoZXhlY2xpc3QtPmVuZ2luZS0+aTkxNSkgKiA0LAorCQkJCQkgICAgICAgJndyaXRlX3Bv
aW50ZXIsIDQpOwogCX0KIAogCWd2dF9kYmdfZWwoInZncHUlZDogdyBwb2ludGVyICV1IHJlZyAl
eCBjc2IgbCAleCBjc2IgaCAleFxuIiwKLQkJdmdwdS0+aWQsIHdyaXRlX3BvaW50ZXIsIG9mZnNl
dCwgc3RhdHVzLT5sZHcsIHN0YXR1cy0+dWR3KTsKKwkJICAgdmdwdS0+aWQsIHdyaXRlX3BvaW50
ZXIsIG9mZnNldCwgc3RhdHVzLT5sZHcsIHN0YXR1cy0+dWR3KTsKIAogCWlmICh0cmlnZ2VyX2lu
dGVycnVwdF9sYXRlcikKIAkJcmV0dXJuOwogCiAJaW50ZWxfdmdwdV90cmlnZ2VyX3ZpcnR1YWxf
ZXZlbnQodmdwdSwKLQkJCXJpbmdfaWRfdG9fY29udGV4dF9zd2l0Y2hfZXZlbnQoZXhlY2xpc3Qt
PnJpbmdfaWQpKTsKKwkJCQkJIHRvX2NvbnRleHRfc3dpdGNoX2V2ZW50KGV4ZWNsaXN0LT5lbmdp
bmUpKTsKIH0KIAogc3RhdGljIGludCBlbXVsYXRlX2V4ZWNsaXN0X2N0eF9zY2hlZHVsZV9vdXQo
CkBAIC0yNjEsOSArMjU1LDggQEAgc3RhdGljIHN0cnVjdCBpbnRlbF92Z3B1X2V4ZWNsaXN0X3Ns
b3QgKmdldF9uZXh0X2V4ZWNsaXN0X3Nsb3QoCiAJCXN0cnVjdCBpbnRlbF92Z3B1X2V4ZWNsaXN0
ICpleGVjbGlzdCkKIHsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IGV4ZWNsaXN0LT52Z3B1
OwotCWludCByaW5nX2lkID0gZXhlY2xpc3QtPnJpbmdfaWQ7Ci0JdTMyIHN0YXR1c19yZWcgPSBl
eGVjbGlzdF9yaW5nX21taW8odmdwdS0+Z3Z0LCByaW5nX2lkLAotCQkJX0VMX09GRlNFVF9TVEFU
VVMpOworCXUzMiBzdGF0dXNfcmVnID0KKwkJZXhlY2xpc3RfcmluZ19tbWlvKGV4ZWNsaXN0LT5l
bmdpbmUsIF9FTF9PRkZTRVRfU1RBVFVTKTsKIAlzdHJ1Y3QgZXhlY2xpc3Rfc3RhdHVzX2Zvcm1h
dCBzdGF0dXM7CiAKIAlzdGF0dXMubGR3ID0gdmdwdV92cmVnKHZncHUsIHN0YXR1c19yZWcpOwpA
QCAtMzc5LDcgKzM3Miw2IEBAIHN0YXRpYyBpbnQgcHJlcGFyZV9leGVjbGlzdF93b3JrbG9hZChz
dHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAJc3RydWN0IGludGVsX3ZncHUg
KnZncHUgPSB3b3JrbG9hZC0+dmdwdTsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9zdWJtaXNzaW9uICpz
ID0gJnZncHUtPnN1Ym1pc3Npb247CiAJc3RydWN0IGV4ZWNsaXN0X2N0eF9kZXNjcmlwdG9yX2Zv
cm1hdCBjdHhbMl07Ci0JaW50IHJpbmdfaWQgPSB3b3JrbG9hZC0+cmluZ19pZDsKIAlpbnQgcmV0
OwogCiAJaWYgKCF3b3JrbG9hZC0+ZW11bGF0ZV9zY2hlZHVsZV9pbikKQEAgLTM4OCw3ICszODAs
OCBAQCBzdGF0aWMgaW50IHByZXBhcmVfZXhlY2xpc3Rfd29ya2xvYWQoc3RydWN0IGludGVsX3Zn
cHVfd29ya2xvYWQgKndvcmtsb2FkKQogCWN0eFswXSA9ICpnZXRfZGVzY19mcm9tX2Vsc3BfZHdv
cmRzKCZ3b3JrbG9hZC0+ZWxzcF9kd29yZHMsIDApOwogCWN0eFsxXSA9ICpnZXRfZGVzY19mcm9t
X2Vsc3BfZHdvcmRzKCZ3b3JrbG9hZC0+ZWxzcF9kd29yZHMsIDEpOwogCi0JcmV0ID0gZW11bGF0
ZV9leGVjbGlzdF9zY2hlZHVsZV9pbigmcy0+ZXhlY2xpc3RbcmluZ19pZF0sIGN0eCk7CisJcmV0
ID0gZW11bGF0ZV9leGVjbGlzdF9zY2hlZHVsZV9pbigmcy0+ZXhlY2xpc3Rbd29ya2xvYWQtPmVu
Z2luZS0+aWRdLAorCQkJCQkgICBjdHgpOwogCWlmIChyZXQpIHsKIAkJZ3Z0X3ZncHVfZXJyKCJm
YWlsIHRvIGVtdWxhdGUgZXhlY2xpc3Qgc2NoZWR1bGUgaW5cbiIpOwogCQlyZXR1cm4gcmV0OwpA
QCAtMzk5LDIxICszOTIsMjEgQEAgc3RhdGljIGludCBwcmVwYXJlX2V4ZWNsaXN0X3dvcmtsb2Fk
KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIHN0YXRpYyBpbnQgY29tcGxl
dGVfZXhlY2xpc3Rfd29ya2xvYWQoc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmtsb2Fk
KQogewogCXN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1ID0gd29ya2xvYWQtPnZncHU7Ci0JaW50IHJp
bmdfaWQgPSB3b3JrbG9hZC0+cmluZ19pZDsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9zdWJtaXNzaW9u
ICpzID0gJnZncHUtPnN1Ym1pc3Npb247Ci0Jc3RydWN0IGludGVsX3ZncHVfZXhlY2xpc3QgKmV4
ZWNsaXN0ID0gJnMtPmV4ZWNsaXN0W3JpbmdfaWRdOworCXN0cnVjdCBpbnRlbF92Z3B1X2V4ZWNs
aXN0ICpleGVjbGlzdCA9CisJCSZzLT5leGVjbGlzdFt3b3JrbG9hZC0+ZW5naW5lLT5pZF07CiAJ
c3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKm5leHRfd29ya2xvYWQ7Ci0Jc3RydWN0IGxpc3Rf
aGVhZCAqbmV4dCA9IHdvcmtsb2FkX3FfaGVhZCh2Z3B1LCByaW5nX2lkKS0+bmV4dDsKKwlzdHJ1
Y3QgbGlzdF9oZWFkICpuZXh0ID0gd29ya2xvYWRfcV9oZWFkKHZncHUsIHdvcmtsb2FkLT5lbmdp
bmUpLT5uZXh0OwogCWJvb2wgbGl0ZV9yZXN0b3JlID0gZmFsc2U7CiAJaW50IHJldCA9IDA7CiAK
LQlndnRfZGJnX2VsKCJjb21wbGV0ZSB3b3JrbG9hZCAlcCBzdGF0dXMgJWRcbiIsIHdvcmtsb2Fk
LAotCQkJd29ya2xvYWQtPnN0YXR1cyk7CisJZ3Z0X2RiZ19lbCgiY29tcGxldGUgd29ya2xvYWQg
JXAgc3RhdHVzICVkXG4iLAorCQkgICB3b3JrbG9hZCwgd29ya2xvYWQtPnN0YXR1cyk7CiAKLQlp
ZiAod29ya2xvYWQtPnN0YXR1cyB8fCAodmdwdS0+cmVzZXR0aW5nX2VuZyAmIEJJVChyaW5nX2lk
KSkpCisJaWYgKHdvcmtsb2FkLT5zdGF0dXMgfHwgdmdwdS0+cmVzZXR0aW5nX2VuZyAmIHdvcmts
b2FkLT5lbmdpbmUtPm1hc2spCiAJCWdvdG8gb3V0OwogCi0JaWYgKCFsaXN0X2VtcHR5KHdvcmts
b2FkX3FfaGVhZCh2Z3B1LCByaW5nX2lkKSkpIHsKKwlpZiAoIWxpc3RfZW1wdHkod29ya2xvYWRf
cV9oZWFkKHZncHUsIHdvcmtsb2FkLT5lbmdpbmUpKSkgewogCQlzdHJ1Y3QgZXhlY2xpc3RfY3R4
X2Rlc2NyaXB0b3JfZm9ybWF0ICp0aGlzX2Rlc2MsICpuZXh0X2Rlc2M7CiAKIAkJbmV4dF93b3Jr
bG9hZCA9IGNvbnRhaW5lcl9vZihuZXh0LApAQCAtNDM2LDE0ICs0MjksMTUgQEAgc3RhdGljIGlu
dCBjb21wbGV0ZV9leGVjbGlzdF93b3JrbG9hZChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAq
d29ya2xvYWQpCiAJcmV0dXJuIHJldDsKIH0KIAotc3RhdGljIGludCBzdWJtaXRfY29udGV4dChz
dHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQsCi0JCXN0cnVjdCBleGVjbGlzdF9j
dHhfZGVzY3JpcHRvcl9mb3JtYXQgKmRlc2MsCi0JCWJvb2wgZW11bGF0ZV9zY2hlZHVsZV9pbikK
K3N0YXRpYyBpbnQgc3VibWl0X2NvbnRleHQoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCQkg
IGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKKwkJCSAgc3RydWN0IGV4ZWNs
aXN0X2N0eF9kZXNjcmlwdG9yX2Zvcm1hdCAqZGVzYywKKwkJCSAgYm9vbCBlbXVsYXRlX3NjaGVk
dWxlX2luKQogewogCXN0cnVjdCBpbnRlbF92Z3B1X3N1Ym1pc3Npb24gKnMgPSAmdmdwdS0+c3Vi
bWlzc2lvbjsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQgPSBOVUxMOwog
Ci0Jd29ya2xvYWQgPSBpbnRlbF92Z3B1X2NyZWF0ZV93b3JrbG9hZCh2Z3B1LCByaW5nX2lkLCBk
ZXNjKTsKKwl3b3JrbG9hZCA9IGludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2FkKHZncHUsIGVuZ2lu
ZSwgZGVzYyk7CiAJaWYgKElTX0VSUih3b3JrbG9hZCkpCiAJCXJldHVybiBQVFJfRVJSKHdvcmts
b2FkKTsKIApAQCAtNDUyLDE5ICs0NDYsMjAgQEAgc3RhdGljIGludCBzdWJtaXRfY29udGV4dChz
dHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQsCiAJd29ya2xvYWQtPmVtdWxhdGVf
c2NoZWR1bGVfaW4gPSBlbXVsYXRlX3NjaGVkdWxlX2luOwogCiAJaWYgKGVtdWxhdGVfc2NoZWR1
bGVfaW4pCi0JCXdvcmtsb2FkLT5lbHNwX2R3b3JkcyA9IHMtPmV4ZWNsaXN0W3JpbmdfaWRdLmVs
c3BfZHdvcmRzOworCQl3b3JrbG9hZC0+ZWxzcF9kd29yZHMgPSBzLT5leGVjbGlzdFtlbmdpbmUt
PmlkXS5lbHNwX2R3b3JkczsKIAogCWd2dF9kYmdfZWwoIndvcmtsb2FkICVwIGVtdWxhdGUgc2No
ZWR1bGVfaW4gJWRcbiIsIHdvcmtsb2FkLAotCQkJZW11bGF0ZV9zY2hlZHVsZV9pbik7CisJCSAg
IGVtdWxhdGVfc2NoZWR1bGVfaW4pOwogCiAJaW50ZWxfdmdwdV9xdWV1ZV93b3JrbG9hZCh3b3Jr
bG9hZCk7CiAJcmV0dXJuIDA7CiB9CiAKLWludCBpbnRlbF92Z3B1X3N1Ym1pdF9leGVjbGlzdChz
dHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQpCitpbnQgaW50ZWxfdmdwdV9zdWJt
aXRfZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCQkgICAgICAgY29uc3Qgc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF92Z3B1X3N1Ym1p
c3Npb24gKnMgPSAmdmdwdS0+c3VibWlzc2lvbjsKLQlzdHJ1Y3QgaW50ZWxfdmdwdV9leGVjbGlz
dCAqZXhlY2xpc3QgPSAmcy0+ZXhlY2xpc3RbcmluZ19pZF07CisJc3RydWN0IGludGVsX3ZncHVf
ZXhlY2xpc3QgKmV4ZWNsaXN0ID0gJnMtPmV4ZWNsaXN0W2VuZ2luZS0+aWRdOwogCXN0cnVjdCBl
eGVjbGlzdF9jdHhfZGVzY3JpcHRvcl9mb3JtYXQgKmRlc2NbMl07CiAJaW50IGksIHJldDsKIApA
QCAtNDg5LDcgKzQ4NCw3IEBAIGludCBpbnRlbF92Z3B1X3N1Ym1pdF9leGVjbGlzdChzdHJ1Y3Qg
aW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQpCiAJZm9yIChpID0gMDsgaSA8IEFSUkFZX1NJ
WkUoZGVzYyk7IGkrKykgewogCQlpZiAoIWRlc2NbaV0tPnZhbGlkKQogCQkJY29udGludWU7Ci0J
CXJldCA9IHN1Ym1pdF9jb250ZXh0KHZncHUsIHJpbmdfaWQsIGRlc2NbaV0sIGkgPT0gMCk7CisJ
CXJldCA9IHN1Ym1pdF9jb250ZXh0KHZncHUsIGVuZ2luZSwgZGVzY1tpXSwgaSA9PSAwKTsKIAkJ
aWYgKHJldCkgewogCQkJZ3Z0X3ZncHVfZXJyKCJmYWlsZWQgdG8gc3VibWl0IGRlc2MgJWRcbiIs
IGkpOwogCQkJcmV0dXJuIHJldDsKQEAgLTUwNCwyMiArNDk5LDIyIEBAIGludCBpbnRlbF92Z3B1
X3N1Ym1pdF9leGVjbGlzdChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQpCiAJ
cmV0dXJuIC1FSU5WQUw7CiB9CiAKLXN0YXRpYyB2b2lkIGluaXRfdmdwdV9leGVjbGlzdChzdHJ1
Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQpCitzdGF0aWMgdm9pZCBpbml0X3ZncHVf
ZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCQkgICAgICAgY29uc3Qgc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewogCXN0cnVjdCBpbnRlbF92Z3B1X3N1Ym1pc3Np
b24gKnMgPSAmdmdwdS0+c3VibWlzc2lvbjsKLQlzdHJ1Y3QgaW50ZWxfdmdwdV9leGVjbGlzdCAq
ZXhlY2xpc3QgPSAmcy0+ZXhlY2xpc3RbcmluZ19pZF07CisJc3RydWN0IGludGVsX3ZncHVfZXhl
Y2xpc3QgKmV4ZWNsaXN0ID0gJnMtPmV4ZWNsaXN0W2VuZ2luZS0+aWRdOwogCXN0cnVjdCBleGVj
bGlzdF9jb250ZXh0X3N0YXR1c19wb2ludGVyX2Zvcm1hdCBjdHhfc3RhdHVzX3B0cjsKIAl1MzIg
Y3R4X3N0YXR1c19wdHJfcmVnOwogCiAJbWVtc2V0KGV4ZWNsaXN0LCAwLCBzaXplb2YoKmV4ZWNs
aXN0KSk7CiAKIAlleGVjbGlzdC0+dmdwdSA9IHZncHU7Ci0JZXhlY2xpc3QtPnJpbmdfaWQgPSBy
aW5nX2lkOworCWV4ZWNsaXN0LT5lbmdpbmUgPSBlbmdpbmU7CiAJZXhlY2xpc3QtPnNsb3RbMF0u
aW5kZXggPSAwOwogCWV4ZWNsaXN0LT5zbG90WzFdLmluZGV4ID0gMTsKIAotCWN0eF9zdGF0dXNf
cHRyX3JlZyA9IGV4ZWNsaXN0X3JpbmdfbW1pbyh2Z3B1LT5ndnQsIHJpbmdfaWQsCi0JCQlfRUxf
T0ZGU0VUX1NUQVRVU19QVFIpOworCWN0eF9zdGF0dXNfcHRyX3JlZyA9IGV4ZWNsaXN0X3Jpbmdf
bW1pbyhlbmdpbmUsIF9FTF9PRkZTRVRfU1RBVFVTX1BUUik7CiAJY3R4X3N0YXR1c19wdHIuZHcg
PSB2Z3B1X3ZyZWcodmdwdSwgY3R4X3N0YXR1c19wdHJfcmVnKTsKIAljdHhfc3RhdHVzX3B0ci5y
ZWFkX3B0ciA9IDA7CiAJY3R4X3N0YXR1c19wdHIud3JpdGVfcHRyID0gMHg3OwpAQCAtNTQ5LDcg
KzU0NCw3IEBAIHN0YXRpYyB2b2lkIHJlc2V0X2V4ZWNsaXN0KHN0cnVjdCBpbnRlbF92Z3B1ICp2
Z3B1LAogCWludGVsX2VuZ2luZV9tYXNrX3QgdG1wOwogCiAJZm9yX2VhY2hfZW5naW5lX21hc2tl
ZChlbmdpbmUsIGRldl9wcml2LCBlbmdpbmVfbWFzaywgdG1wKQotCQlpbml0X3ZncHVfZXhlY2xp
c3QodmdwdSwgZW5naW5lLT5pZCk7CisJCWluaXRfdmdwdV9leGVjbGlzdCh2Z3B1LCBlbmdpbmUp
OwogfQogCiBzdGF0aWMgaW50IGluaXRfZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUs
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d2dC9leGVjbGlzdC5oCmluZGV4IDVjY2MyYzY5NTg0OC4uZTg5NzJl
MDUxNDBmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvZXhlY2xpc3QuaApAQCAtMTY4LDE2ICsxNjgs
MTcgQEAgc3RydWN0IGludGVsX3ZncHVfZXhlY2xpc3QgewogCXN0cnVjdCBpbnRlbF92Z3B1X2V4
ZWNsaXN0X3Nsb3QgKnJ1bm5pbmdfc2xvdDsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9leGVjbGlzdF9z
bG90ICpwZW5kaW5nX3Nsb3Q7CiAJc3RydWN0IGV4ZWNsaXN0X2N0eF9kZXNjcmlwdG9yX2Zvcm1h
dCAqcnVubmluZ19jb250ZXh0OwotCWludCByaW5nX2lkOwogCXN0cnVjdCBpbnRlbF92Z3B1ICp2
Z3B1OwogCXN0cnVjdCBpbnRlbF92Z3B1X2Vsc3BfZHdvcmRzIGVsc3BfZHdvcmRzOworCWNvbnN0
IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIH07CiAKIHZvaWQgaW50ZWxfdmdwdV9j
bGVhbl9leGVjbGlzdChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSk7CiAKIGludCBpbnRlbF92Z3B1
X2luaXRfZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUpOwogCi1pbnQgaW50ZWxfdmdw
dV9zdWJtaXRfZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkKTsK
K2ludCBpbnRlbF92Z3B1X3N1Ym1pdF9leGVjbGlzdChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwK
KwkJCSAgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpOwogCiB2b2lk
IGludGVsX3ZncHVfcmVzZXRfZXhlY2xpc3Qoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCiAJCQkg
ICAgICAgaW50ZWxfZW5naW5lX21hc2tfdCBlbmdpbmVfbWFzayk7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaGFuZGxlcnMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2
dC9oYW5kbGVycy5jCmluZGV4IDQ1YTkxMjRlNTNiNi4uNzBlYzVkOTM5Mzc1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvaGFuZGxlcnMuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndnQvaGFuZGxlcnMuYwpAQCAtMTQyLDI1ICsxNDIsMjUgQEAgc3RhdGljIGludCBu
ZXdfbW1pb19pbmZvKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCwKIH0KIAogLyoqCi0gKiBpbnRlbF9n
dnRfcmVuZGVyX21taW9fdG9fcmluZ19pZCAtIGNvbnZlcnQgYSBtbWlvIG9mZnNldCBpbnRvIHJp
bmcgaWQKKyAqIGludGVsX2d2dF9yZW5kZXJfbW1pb190b19lbmdpbmUgLSBjb252ZXJ0IGEgbW1p
byBvZmZzZXQgaW50byB0aGUgZW5naW5lCiAgKiBAZ3Z0OiBhIEdWVCBkZXZpY2UKICAqIEBvZmZz
ZXQ6IHJlZ2lzdGVyIG9mZnNldAogICoKICAqIFJldHVybnM6Ci0gKiBSaW5nIElEIG9uIHN1Y2Nl
c3MsIG5lZ2F0aXZlIGVycm9yIGNvZGUgaWYgZmFpbGVkLgorICogVGhlIGVuZ2luZSBjb250YWlu
aW5nIHRoZSBvZmZzZXQgd2l0aGluIGl0cyBtbWlvIHBhZ2UuCiAgKi8KLWludCBpbnRlbF9ndnRf
cmVuZGVyX21taW9fdG9fcmluZ19pZChzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQsCi0JCXVuc2lnbmVk
IGludCBvZmZzZXQpCitjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoKK2ludGVsX2d2dF9y
ZW5kZXJfbW1pb190b19lbmdpbmUoc3RydWN0IGludGVsX2d2dCAqZ3Z0LCB1bnNpZ25lZCBpbnQg
b2Zmc2V0KQogewogCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOwogCXN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZTsKIAogCW9mZnNldCAmPSB+R0VOTUFTSygxMSwgMCk7Ci0JZm9yX2VhY2hf
ZW5naW5lKGVuZ2luZSwgZ3Z0LT5kZXZfcHJpdiwgaWQpIHsKKwlmb3JfZWFjaF9lbmdpbmUoZW5n
aW5lLCBndnQtPmRldl9wcml2LCBpZCkKIAkJaWYgKGVuZ2luZS0+bW1pb19iYXNlID09IG9mZnNl
dCkKLQkJCXJldHVybiBpZDsKLQl9Ci0JcmV0dXJuIC1FTk9ERVY7CisJCQlyZXR1cm4gZW5naW5l
OworCisJcmV0dXJuIE5VTEw7CiB9CiAKICNkZWZpbmUgb2Zmc2V0X3RvX2ZlbmNlX251bShvZmZz
ZXQpIFwKQEAgLTUwOSwyOCArNTA5LDIzIEBAIHN0YXRpYyBpbnQgZm9yY2Vfbm9ucHJpdl93cml0
ZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwKIAl1bnNpZ25lZCBpbnQgb2Zmc2V0LCB2b2lkICpw
X2RhdGEsIHVuc2lnbmVkIGludCBieXRlcykKIHsKIAl1MzIgcmVnX25vbnByaXYgPSAqKHUzMiAq
KXBfZGF0YTsKLQlpbnQgcmluZ19pZCA9IGludGVsX2d2dF9yZW5kZXJfbW1pb190b19yaW5nX2lk
KHZncHUtPmd2dCwgb2Zmc2V0KTsKLQl1MzIgcmluZ19iYXNlOwotCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IHZncHUtPmd2dC0+ZGV2X3ByaXY7Ci0JaW50IHJldCA9IC1FSU5W
QUw7CisJY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0KKwkJaW50ZWxfZ3Z0
X3JlbmRlcl9tbWlvX3RvX2VuZ2luZSh2Z3B1LT5ndnQsIG9mZnNldCk7CiAKLQlpZiAoKGJ5dGVz
ICE9IDQpIHx8ICgob2Zmc2V0ICYgKGJ5dGVzIC0gMSkpICE9IDApIHx8IHJpbmdfaWQgPCAwKSB7
Ci0JCWd2dF9lcnIoInZncHUoJWQpIHJpbmcgJWQgSW52YWxpZCBGT1JDRV9OT05QUklWIG9mZnNl
dCAleCglZEIpXG4iLAotCQkJdmdwdS0+aWQsIHJpbmdfaWQsIG9mZnNldCwgYnl0ZXMpOwotCQly
ZXR1cm4gcmV0OworCWlmIChieXRlcyAhPSA0IHx8ICFJU19BTElHTkVEKG9mZnNldCwgYnl0ZXMp
IHx8ICFlbmdpbmUpIHsKKwkJZ3Z0X2VycigidmdwdSglZCkgSW52YWxpZCBGT1JDRV9OT05QUklW
IG9mZnNldCAleCglZEIpXG4iLAorCQkJdmdwdS0+aWQsIG9mZnNldCwgYnl0ZXMpOworCQlyZXR1
cm4gLUVJTlZBTDsKIAl9CiAKLQlyaW5nX2Jhc2UgPSBkZXZfcHJpdi0+ZW5naW5lW3JpbmdfaWRd
LT5tbWlvX2Jhc2U7Ci0KLQlpZiAoaW5fd2hpdGVsaXN0KHJlZ19ub25wcml2KSB8fAotCQlyZWdf
bm9ucHJpdiA9PSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX05PUElEKHJpbmdfYmFzZSkpKSB7
Ci0JCXJldCA9IGludGVsX3ZncHVfZGVmYXVsdF9tbWlvX3dyaXRlKHZncHUsIG9mZnNldCwgcF9k
YXRhLAotCQkJYnl0ZXMpOwotCX0gZWxzZQorCWlmICghaW5fd2hpdGVsaXN0KHJlZ19ub25wcml2
KSB8fAorCSAgICByZWdfbm9ucHJpdiAhPSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX05PUElE
KGVuZ2luZS0+bW1pb19iYXNlKSkpIHsKIAkJZ3Z0X2VycigidmdwdSglZCkgSW52YWxpZCBGT1JD
RV9OT05QUklWIHdyaXRlICV4IGF0IG9mZnNldCAleFxuIiwKIAkJCXZncHUtPmlkLCByZWdfbm9u
cHJpdiwgb2Zmc2V0KTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQogCi0JcmV0dXJuIDA7CisJcmV0
dXJuIGludGVsX3ZncHVfZGVmYXVsdF9tbWlvX3dyaXRlKHZncHUsIG9mZnNldCwgcF9kYXRhLCBi
eXRlcyk7CiB9CiAKIHN0YXRpYyBpbnQgZGRpX2J1Zl9jdGxfbW1pb193cml0ZShzdHJ1Y3QgaW50
ZWxfdmdwdSAqdmdwdSwgdW5zaWduZWQgaW50IG9mZnNldCwKQEAgLTE0NzAsNyArMTQ2NSw4IEBA
IHN0YXRpYyBpbnQgaHdzX3BnYV93cml0ZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgdW5zaWdu
ZWQgaW50IG9mZnNldCwKIAkJdm9pZCAqcF9kYXRhLCB1bnNpZ25lZCBpbnQgYnl0ZXMpCiB7CiAJ
dTMyIHZhbHVlID0gKih1MzIgKilwX2RhdGE7Ci0JaW50IHJpbmdfaWQgPSBpbnRlbF9ndnRfcmVu
ZGVyX21taW9fdG9fcmluZ19pZCh2Z3B1LT5ndnQsIG9mZnNldCk7CisJY29uc3Qgc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lID0KKwkJaW50ZWxfZ3Z0X3JlbmRlcl9tbWlvX3RvX2VuZ2lu
ZSh2Z3B1LT5ndnQsIG9mZnNldCk7CiAKIAlpZiAoIWludGVsX2d2dF9nZ3R0X3ZhbGlkYXRlX3Jh
bmdlKHZncHUsIHZhbHVlLCBJOTE1X0dUVF9QQUdFX1NJWkUpKSB7CiAJCWd2dF92Z3B1X2Vycigi
d3JpdGUgaW52YWxpZCBIV1NQIGFkZHJlc3MsIHJlZzoweCV4LCB2YWx1ZToweCV4XG4iLApAQCAt
MTQ4MiwxMiArMTQ3OCwxMiBAQCBzdGF0aWMgaW50IGh3c19wZ2Ffd3JpdGUoc3RydWN0IGludGVs
X3ZncHUgKnZncHUsIHVuc2lnbmVkIGludCBvZmZzZXQsCiAJICogdXBkYXRlIHRoZSBWTSBDU0Ig
c3RhdHVzIGNvcnJlY3RseS4gSGVyZSBsaXN0ZWQgcmVnaXN0ZXJzIGNhbgogCSAqIHN1cHBvcnQg
QkRXLCBTS0wgb3Igb3RoZXIgcGxhdGZvcm1zIHdpdGggc2FtZSBIV1NQIHJlZ2lzdGVycy4KIAkg
Ki8KLQlpZiAodW5saWtlbHkocmluZ19pZCA8IDAgfHwgcmluZ19pZCA+PSBJOTE1X05VTV9FTkdJ
TkVTKSkgeworCWlmICh1bmxpa2VseSghZW5naW5lKSkgewogCQlndnRfdmdwdV9lcnIoImFjY2Vz
cyB1bmtub3duIGhhcmR3YXJlIHN0YXR1cyBwYWdlIHJlZ2lzdGVyOjB4JXhcbiIsCiAJCQkgICAg
IG9mZnNldCk7CiAJCXJldHVybiAtRUlOVkFMOwogCX0KLQl2Z3B1LT5od3NfcGdhW3JpbmdfaWRd
ID0gdmFsdWU7CisJdmdwdS0+aHdzX3BnYVtlbmdpbmUtPmlkXSA9IHZhbHVlOwogCWd2dF9kYmdf
bW1pbygiVk0oJWQpIHdyaXRlOiAweCV4IHRvIEhXU1A6IDB4JXhcbiIsCiAJCSAgICAgdmdwdS0+
aWQsIHZhbHVlLCBvZmZzZXQpOwogCkBAIC0xNjM3LDIyICsxNjMzLDIwIEBAIHN0YXRpYyBpbnQg
bW1pb19yZWFkX2Zyb21faHcoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCiB7CiAJc3RydWN0IGlu
dGVsX2d2dCAqZ3Z0ID0gdmdwdS0+Z3Z0OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IGd2dC0+ZGV2X3ByaXY7Ci0JaW50IHJpbmdfaWQ7Ci0JdTMyIHJpbmdfYmFzZTsKKwlj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUgPQorCQlpbnRlbF9ndnRfcmVuZGVy
X21taW9fdG9fZW5naW5lKGd2dCwgb2Zmc2V0KTsKIAotCXJpbmdfaWQgPSBpbnRlbF9ndnRfcmVu
ZGVyX21taW9fdG9fcmluZ19pZChndnQsIG9mZnNldCk7CiAJLyoqCiAJICogUmVhZCBIVyByZWcg
aW4gZm9sbG93aW5nIGNhc2UKIAkgKiBhLiB0aGUgb2Zmc2V0IGlzbid0IGEgcmluZyBtbWlvCiAJ
ICogYi4gdGhlIG9mZnNldCdzIHJpbmcgaXMgcnVubmluZyBvbiBody4KIAkgKiBjLiB0aGUgb2Zm
c2V0IGlzIHJpbmcgdGltZSBzdGFtcCBtbWlvCiAJICovCi0JaWYgKHJpbmdfaWQgPj0gMCkKLQkJ
cmluZ19iYXNlID0gZGV2X3ByaXYtPmVuZ2luZVtyaW5nX2lkXS0+bW1pb19iYXNlOwogCi0JaWYg
KHJpbmdfaWQgPCAwIHx8IHZncHUgID09IGd2dC0+c2NoZWR1bGVyLmVuZ2luZV9vd25lcltyaW5n
X2lkXSB8fAotCSAgICBvZmZzZXQgPT0gaTkxNV9tbWlvX3JlZ19vZmZzZXQoUklOR19USU1FU1RB
TVAocmluZ19iYXNlKSkgfHwKLQkgICAgb2Zmc2V0ID09IGk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJ
TkdfVElNRVNUQU1QX1VEVyhyaW5nX2Jhc2UpKSkgeworCWlmICghZW5naW5lIHx8CisJICAgIHZn
cHUgPT0gZ3Z0LT5zY2hlZHVsZXIuZW5naW5lX293bmVyW2VuZ2luZS0+aWRdIHx8CisJICAgIG9m
ZnNldCA9PSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1RJTUVTVEFNUChlbmdpbmUtPm1taW9f
YmFzZSkpIHx8CisJICAgIG9mZnNldCA9PSBpOTE1X21taW9fcmVnX29mZnNldChSSU5HX1RJTUVT
VEFNUF9VRFcoZW5naW5lLT5tbWlvX2Jhc2UpKSkgewogCQltbWlvX2h3X2FjY2Vzc19wcmUoZGV2
X3ByaXYpOwogCQl2Z3B1X3ZyZWcodmdwdSwgb2Zmc2V0KSA9IEk5MTVfUkVBRChfTU1JTyhvZmZz
ZXQpKTsKIAkJbW1pb19od19hY2Nlc3NfcG9zdChkZXZfcHJpdik7CkBAIC0xNjY0LDIyICsxNjU4
LDIzIEBAIHN0YXRpYyBpbnQgbW1pb19yZWFkX2Zyb21faHcoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUsCiBzdGF0aWMgaW50IGVsc3BfbW1pb193cml0ZShzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwg
dW5zaWduZWQgaW50IG9mZnNldCwKIAkJdm9pZCAqcF9kYXRhLCB1bnNpZ25lZCBpbnQgYnl0ZXMp
CiB7Ci0JaW50IHJpbmdfaWQgPSBpbnRlbF9ndnRfcmVuZGVyX21taW9fdG9fcmluZ19pZCh2Z3B1
LT5ndnQsIG9mZnNldCk7CisJY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lID0K
KwkJaW50ZWxfZ3Z0X3JlbmRlcl9tbWlvX3RvX2VuZ2luZSh2Z3B1LT5ndnQsIG9mZnNldCk7CiAJ
c3RydWN0IGludGVsX3ZncHVfZXhlY2xpc3QgKmV4ZWNsaXN0OwogCXUzMiBkYXRhID0gKih1MzIg
KilwX2RhdGE7CiAJaW50IHJldCA9IDA7CiAKLQlpZiAoV0FSTl9PTihyaW5nX2lkIDwgMCB8fCBy
aW5nX2lkID49IEk5MTVfTlVNX0VOR0lORVMpKQorCWlmIChXQVJOX09OKCFlbmdpbmUpKQogCQly
ZXR1cm4gLUVJTlZBTDsKIAotCWV4ZWNsaXN0ID0gJnZncHUtPnN1Ym1pc3Npb24uZXhlY2xpc3Rb
cmluZ19pZF07CisJZXhlY2xpc3QgPSAmdmdwdS0+c3VibWlzc2lvbi5leGVjbGlzdFtlbmdpbmUt
PmlkXTsKIAogCWV4ZWNsaXN0LT5lbHNwX2R3b3Jkcy5kYXRhWzMgLSBleGVjbGlzdC0+ZWxzcF9k
d29yZHMuaW5kZXhdID0gZGF0YTsKIAlpZiAoZXhlY2xpc3QtPmVsc3BfZHdvcmRzLmluZGV4ID09
IDMpIHsKLQkJcmV0ID0gaW50ZWxfdmdwdV9zdWJtaXRfZXhlY2xpc3QodmdwdSwgcmluZ19pZCk7
CisJCXJldCA9IGludGVsX3ZncHVfc3VibWl0X2V4ZWNsaXN0KHZncHUsIGVuZ2luZSk7CiAJCWlm
KHJldCkKLQkJCWd2dF92Z3B1X2VycigiZmFpbCBzdWJtaXQgd29ya2xvYWQgb24gcmluZyAlZFxu
IiwKLQkJCQlyaW5nX2lkKTsKKwkJCWd2dF92Z3B1X2VycigiZmFpbCBzdWJtaXQgd29ya2xvYWQg
b24gcmluZyAlc1xuIiwKKwkJCQkgICAgIGVuZ2luZS0+bmFtZSk7CiAJfQogCiAJKytleGVjbGlz
dC0+ZWxzcF9kd29yZHMuaW5kZXg7CkBAIC0xNjkxLDcgKzE2ODYsOCBAQCBzdGF0aWMgaW50IHJp
bmdfbW9kZV9tbWlvX3dyaXRlKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCB1bnNpZ25lZCBpbnQg
b2Zmc2V0LAogCQl2b2lkICpwX2RhdGEsIHVuc2lnbmVkIGludCBieXRlcykKIHsKIAl1MzIgZGF0
YSA9ICoodTMyICopcF9kYXRhOwotCWludCByaW5nX2lkID0gaW50ZWxfZ3Z0X3JlbmRlcl9tbWlv
X3RvX3JpbmdfaWQodmdwdS0+Z3Z0LCBvZmZzZXQpOworCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSA9CisJCWludGVsX2d2dF9yZW5kZXJfbW1pb190b19lbmdpbmUodmdwdS0+
Z3Z0LCBvZmZzZXQpOwogCWJvb2wgZW5hYmxlX2V4ZWNsaXN0OwogCWludCByZXQ7CiAKQEAgLTE3
MjUsMTYgKzE3MjEsMTYgQEAgc3RhdGljIGludCByaW5nX21vZGVfbW1pb193cml0ZShzdHJ1Y3Qg
aW50ZWxfdmdwdSAqdmdwdSwgdW5zaWduZWQgaW50IG9mZnNldCwKIAkJCXx8IChkYXRhICYgX01B
U0tFRF9CSVRfRElTQUJMRShHRlhfUlVOX0xJU1RfRU5BQkxFKSkpIHsKIAkJZW5hYmxlX2V4ZWNs
aXN0ID0gISEoZGF0YSAmIEdGWF9SVU5fTElTVF9FTkFCTEUpOwogCi0JCWd2dF9kYmdfY29yZSgi
RVhFQ0xJU1QgJXMgb24gcmluZyAlZFxuIiwKLQkJCQkoZW5hYmxlX2V4ZWNsaXN0ID8gImVuYWJs
aW5nIiA6ICJkaXNhYmxpbmciKSwKLQkJCQlyaW5nX2lkKTsKKwkJZ3Z0X2RiZ19jb3JlKCJFWEVD
TElTVCAlcyBvbiByaW5nICVzXG4iLAorCQkJICAgICAoZW5hYmxlX2V4ZWNsaXN0ID8gImVuYWJs
aW5nIiA6ICJkaXNhYmxpbmciKSwKKwkJCSAgICAgZW5naW5lLT5uYW1lKTsKIAogCQlpZiAoIWVu
YWJsZV9leGVjbGlzdCkKIAkJCXJldHVybiAwOwogCiAJCXJldCA9IGludGVsX3ZncHVfc2VsZWN0
X3N1Ym1pc3Npb25fb3BzKHZncHUsCi0JCQkgICAgICAgQklUKHJpbmdfaWQpLAotCQkJICAgICAg
IElOVEVMX1ZHUFVfRVhFQ0xJU1RfU1VCTUlTU0lPTik7CisJCQkJCQkgICAgICAgZW5naW5lLT5t
YXNrLAorCQkJCQkJICAgICAgIElOVEVMX1ZHUFVfRVhFQ0xJU1RfU1VCTUlTU0lPTik7CiAJCWlm
IChyZXQpCiAJCQlyZXR1cm4gcmV0OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndnQvbW1pby5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21taW8uaAppbmRleCA1ODc0
ZjFjYjQzMDYuLjQ4ODY2Y2YyYmZiNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L21taW8uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1pby5oCkBAIC02Nyw4
ICs2Nyw4IEBAIHN0cnVjdCBpbnRlbF9ndnRfbW1pb19pbmZvIHsKIAlzdHJ1Y3QgaGxpc3Rfbm9k
ZSBub2RlOwogfTsKIAotaW50IGludGVsX2d2dF9yZW5kZXJfbW1pb190b19yaW5nX2lkKHN0cnVj
dCBpbnRlbF9ndnQgKmd2dCwKLQkJdW5zaWduZWQgaW50IHJlZyk7Citjb25zdCBzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICoKK2ludGVsX2d2dF9yZW5kZXJfbW1pb190b19lbmdpbmUoc3RydWN0IGlu
dGVsX2d2dCAqZ3Z0LCB1bnNpZ25lZCBpbnQgcmVnKTsKIHVuc2lnbmVkIGxvbmcgaW50ZWxfZ3Z0
X2dldF9kZXZpY2VfdHlwZShzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpOwogYm9vbCBpbnRlbF9ndnRf
bWF0Y2hfZGV2aWNlKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCwgdW5zaWduZWQgbG9uZyBkZXZpY2Up
OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1pb19jb250ZXh0LmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1pb19jb250ZXh0LmMKaW5kZXggNDIwOGU0MDQ0
NWIxLi5lN2Y2MTU4NWVhMDIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9t
bWlvX2NvbnRleHQuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1pb19jb250ZXh0
LmMKQEAgLTIxMywxMyArMjEzLDExIEBAIHJlc3RvcmVfY29udGV4dF9tbWlvX2Zvcl9pbmhpYml0
KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAogCSpjcysrID0gTUlfTE9BRF9SRUdJU1RFUl9JTU0o
Y291bnQpOwogCWZvciAobW1pbyA9IGd2dC0+ZW5naW5lX21taW9fbGlzdC5tbWlvOwogCSAgICAg
aTkxNV9tbWlvX3JlZ192YWxpZChtbWlvLT5yZWcpOyBtbWlvKyspIHsKLQkJaWYgKG1taW8tPnJp
bmdfaWQgIT0gcmluZ19pZCB8fAotCQkgICAgIW1taW8tPmluX2NvbnRleHQpCisJCWlmIChtbWlv
LT5pZCAhPSByaW5nX2lkIHx8ICFtbWlvLT5pbl9jb250ZXh0KQogCQkJY29udGludWU7CiAKIAkJ
KmNzKysgPSBpOTE1X21taW9fcmVnX29mZnNldChtbWlvLT5yZWcpOwotCQkqY3MrKyA9IHZncHVf
dnJlZ190KHZncHUsIG1taW8tPnJlZykgfAotCQkJCShtbWlvLT5tYXNrIDw8IDE2KTsKKwkJKmNz
KysgPSB2Z3B1X3ZyZWdfdCh2Z3B1LCBtbWlvLT5yZWcpIHwgKG1taW8tPm1hc2sgPDwgMTYpOwog
CQlndnRfZGJnX2NvcmUoImFkZCBscmkgcmVnIHBhaXIgMHgleDoweCV4IGluIGluaGliaXQgY3R4
LCB2Z3B1OiVkLCByaW5kX2lkOiVkXG4iLAogCQkJICAgICAgKihjcy0yKSwgKihjcy0xKSwgdmdw
dS0+aWQsIHJpbmdfaWQpOwogCX0KQEAgLTM0MywxMCArMzQxLDEwIEBAIHN0YXRpYyB1MzIgZ2Vu
OF90bGJfbW1pb19vZmZzZXRfbGlzdFtdID0gewogCVtWRUNTMF0gPSAweDQyNzAsCiB9OwogCi1z
dGF0aWMgdm9pZCBoYW5kbGVfdGxiX3BlbmRpbmdfZXZlbnQoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUsIGludCByaW5nX2lkKQorc3RhdGljIHZvaWQgaGFuZGxlX3RsYl9wZW5kaW5nX2V2ZW50KHN0
cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LAorCQkJCSAgICAgY29uc3Qgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHZn
cHUtPmd2dC0+ZGV2X3ByaXY7Ci0Jc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gJmRldl9w
cml2LT51bmNvcmU7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZW5naW5lLT51bmNv
cmU7CiAJc3RydWN0IGludGVsX3ZncHVfc3VibWlzc2lvbiAqcyA9ICZ2Z3B1LT5zdWJtaXNzaW9u
OwogCXUzMiAqcmVncyA9IHZncHUtPmd2dC0+ZW5naW5lX21taW9fbGlzdC50bGJfbW1pb19vZmZz
ZXRfbGlzdDsKIAl1MzIgY250ID0gdmdwdS0+Z3Z0LT5lbmdpbmVfbW1pb19saXN0LnRsYl9tbWlv
X29mZnNldF9saXN0X2NudDsKQEAgLTM1NiwxMyArMzU0LDEzIEBAIHN0YXRpYyB2b2lkIGhhbmRs
ZV90bGJfcGVuZGluZ19ldmVudChzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQp
CiAJaWYgKCFyZWdzKQogCQlyZXR1cm47CiAKLQlpZiAoV0FSTl9PTihyaW5nX2lkID49IGNudCkp
CisJaWYgKFdBUk5fT04oZW5naW5lLT5pZCA+PSBjbnQpKQogCQlyZXR1cm47CiAKLQlpZiAoIXRl
c3RfYW5kX2NsZWFyX2JpdChyaW5nX2lkLCAodm9pZCAqKXMtPnRsYl9oYW5kbGVfcGVuZGluZykp
CisJaWYgKCF0ZXN0X2FuZF9jbGVhcl9iaXQoZW5naW5lLT5pZCwgKHZvaWQgKilzLT50bGJfaGFu
ZGxlX3BlbmRpbmcpKQogCQlyZXR1cm47CiAKLQlyZWcgPSBfTU1JTyhyZWdzW3JpbmdfaWRdKTsK
KwlyZWcgPSBfTU1JTyhyZWdzW2VuZ2luZS0+aWRdKTsKIAogCS8qIFdhRm9yY2VXYWtlUmVuZGVy
RHVyaW5nTW1pb1RMQkludmFsaWRhdGU6c2tsCiAJICogd2UgbmVlZCB0byBwdXQgYSBmb3JjZXdh
a2Ugd2hlbiBpbnZhbGlkYXRpbmcgUkNTIFRMQiBjYWNoZXMsCkBAIC0zNzEsMzAgKzM2OSwyNyBA
QCBzdGF0aWMgdm9pZCBoYW5kbGVfdGxiX3BlbmRpbmdfZXZlbnQoc3RydWN0IGludGVsX3ZncHUg
KnZncHUsIGludCByaW5nX2lkKQogCSAqLwogCWZ3ID0gaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9m
b3JfcmVnKHVuY29yZSwgcmVnLAogCQkJCQkgICAgRldfUkVHX1JFQUQgfCBGV19SRUdfV1JJVEUp
OwotCWlmIChyaW5nX2lkID09IFJDUzAgJiYgSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KQorCWlm
IChlbmdpbmUtPmlkID09IFJDUzAgJiYgSU5URUxfR0VOKGVuZ2luZS0+aTkxNSkgPj0gOSkKIAkJ
ZncgfD0gRk9SQ0VXQUtFX1JFTkRFUjsKIAogCWludGVsX3VuY29yZV9mb3JjZXdha2VfZ2V0KHVu
Y29yZSwgZncpOwogCiAJaW50ZWxfdW5jb3JlX3dyaXRlX2Z3KHVuY29yZSwgcmVnLCAweDEpOwog
Ci0JaWYgKHdhaXRfZm9yX2F0b21pYygoaW50ZWxfdW5jb3JlX3JlYWRfZncodW5jb3JlLCByZWcp
ID09IDApLCA1MCkpCi0JCWd2dF92Z3B1X2VycigidGltZW91dCBpbiBpbnZhbGlkYXRlIHJpbmcg
KCVkKSB0bGJcbiIsIHJpbmdfaWQpOworCWlmICh3YWl0X2Zvcl9hdG9taWMoaW50ZWxfdW5jb3Jl
X3JlYWRfZncodW5jb3JlLCByZWcpID09IDAsIDUwKSkKKwkJZ3Z0X3ZncHVfZXJyKCJ0aW1lb3V0
IGluIGludmFsaWRhdGUgcmluZyAlcyB0bGJcbiIsCisJCQkgICAgIGVuZ2luZS0+bmFtZSk7CiAJ
ZWxzZQogCQl2Z3B1X3ZyZWdfdCh2Z3B1LCByZWcpID0gMDsKIAogCWludGVsX3VuY29yZV9mb3Jj
ZXdha2VfcHV0KHVuY29yZSwgZncpOwogCi0JZ3Z0X2RiZ19jb3JlKCJpbnZhbGlkYXRlIFRMQiBm
b3IgcmluZyAlZFxuIiwgcmluZ19pZCk7CisJZ3Z0X2RiZ19jb3JlKCJpbnZhbGlkYXRlIFRMQiBm
b3IgcmluZyAlc1xuIiwgZW5naW5lLT5uYW1lKTsKIH0KIAogc3RhdGljIHZvaWQgc3dpdGNoX21v
Y3Moc3RydWN0IGludGVsX3ZncHUgKnByZSwgc3RydWN0IGludGVsX3ZncHUgKm5leHQsCi0JCQlp
bnQgcmluZ19pZCkKKwkJCWNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsK
LQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXY7Ci0JaTkxNV9yZWdfdCBvZmZzZXQs
IGwzX29mZnNldDsKLQl1MzIgb2xkX3YsIG5ld192OwotCiAJdTMyIHJlZ3NbXSA9IHsKIAkJW1JD
UzBdICA9IDB4YzgwMCwKIAkJW1ZDUzBdICA9IDB4YzkwMCwKQEAgLTQwMiwzNiArMzk3LDM4IEBA
IHN0YXRpYyB2b2lkIHN3aXRjaF9tb2NzKHN0cnVjdCBpbnRlbF92Z3B1ICpwcmUsIHN0cnVjdCBp
bnRlbF92Z3B1ICpuZXh0LAogCQlbQkNTMF0gID0gMHhjYzAwLAogCQlbVkVDUzBdID0gMHhjYjAw
LAogCX07CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZW5naW5lLT51bmNvcmU7CisJ
aTkxNV9yZWdfdCBvZmZzZXQsIGwzX29mZnNldDsKKwl1MzIgb2xkX3YsIG5ld192OwogCWludCBp
OwogCi0JZGV2X3ByaXYgPSBwcmUgPyBwcmUtPmd2dC0+ZGV2X3ByaXYgOiBuZXh0LT5ndnQtPmRl
dl9wcml2OwotCWlmIChXQVJOX09OKHJpbmdfaWQgPj0gQVJSQVlfU0laRShyZWdzKSkpCisJaWYg
KFdBUk5fT04oZW5naW5lLT5pZCA+PSBBUlJBWV9TSVpFKHJlZ3MpKSkKIAkJcmV0dXJuOwogCi0J
aWYgKHJpbmdfaWQgPT0gUkNTMCAmJiBJU19HRU4oZGV2X3ByaXYsIDkpKQorCWlmIChlbmdpbmUt
PmlkID09IFJDUzAgJiYgSVNfR0VOKGVuZ2luZS0+aTkxNSwgOSkpCiAJCXJldHVybjsKIAogCWlm
ICghcHJlICYmICFnZW45X3JlbmRlcl9tb2NzLmluaXRpYWxpemVkKQotCQlsb2FkX3JlbmRlcl9t
b2NzKGRldl9wcml2KTsKKwkJbG9hZF9yZW5kZXJfbW9jcyhlbmdpbmUtPmk5MTUpOwogCi0Jb2Zm
c2V0LnJlZyA9IHJlZ3NbcmluZ19pZF07CisJb2Zmc2V0LnJlZyA9IHJlZ3NbZW5naW5lLT5pZF07
CiAJZm9yIChpID0gMDsgaSA8IEdFTjlfTU9DU19TSVpFOyBpKyspIHsKIAkJaWYgKHByZSkKIAkJ
CW9sZF92ID0gdmdwdV92cmVnX3QocHJlLCBvZmZzZXQpOwogCQllbHNlCi0JCQlvbGRfdiA9IGdl
bjlfcmVuZGVyX21vY3MuY29udHJvbF90YWJsZVtyaW5nX2lkXVtpXTsKKwkJCW9sZF92ID0gZ2Vu
OV9yZW5kZXJfbW9jcy5jb250cm9sX3RhYmxlW2VuZ2luZS0+aWRdW2ldOwogCQlpZiAobmV4dCkK
IAkJCW5ld192ID0gdmdwdV92cmVnX3QobmV4dCwgb2Zmc2V0KTsKIAkJZWxzZQotCQkJbmV3X3Yg
PSBnZW45X3JlbmRlcl9tb2NzLmNvbnRyb2xfdGFibGVbcmluZ19pZF1baV07CisJCQluZXdfdiA9
IGdlbjlfcmVuZGVyX21vY3MuY29udHJvbF90YWJsZVtlbmdpbmUtPmlkXVtpXTsKIAogCQlpZiAo
b2xkX3YgIT0gbmV3X3YpCi0JCQlJOTE1X1dSSVRFX0ZXKG9mZnNldCwgbmV3X3YpOworCQkJaW50
ZWxfdW5jb3JlX3dyaXRlX2Z3KHVuY29yZSwgb2Zmc2V0LCBuZXdfdik7CiAKIAkJb2Zmc2V0LnJl
ZyArPSA0OwogCX0KIAotCWlmIChyaW5nX2lkID09IFJDUzApIHsKKwlpZiAoZW5naW5lLT5pZCA9
PSBSQ1MwKSB7CiAJCWwzX29mZnNldC5yZWcgPSAweGIwMjA7CiAJCWZvciAoaSA9IDA7IGkgPCBH
RU45X01PQ1NfU0laRSAvIDI7IGkrKykgewogCQkJaWYgKHByZSkKQEAgLTQ0NCw3ICs0NDEsNyBA
QCBzdGF0aWMgdm9pZCBzd2l0Y2hfbW9jcyhzdHJ1Y3QgaW50ZWxfdmdwdSAqcHJlLCBzdHJ1Y3Qg
aW50ZWxfdmdwdSAqbmV4dCwKIAkJCQluZXdfdiA9IGdlbjlfcmVuZGVyX21vY3MubDNjY190YWJs
ZVtpXTsKIAogCQkJaWYgKG9sZF92ICE9IG5ld192KQotCQkJCUk5MTVfV1JJVEVfRlcobDNfb2Zm
c2V0LCBuZXdfdik7CisJCQkJaW50ZWxfdW5jb3JlX3dyaXRlX2Z3KHVuY29yZSwgbDNfb2Zmc2V0
LCBuZXdfdik7CiAKIAkJCWwzX29mZnNldC5yZWcgKz0gNDsKIAkJfQpAQCAtNDY2LDM4ICs0NjMs
NDAgQEAgYm9vbCBpc19pbmhpYml0X2NvbnRleHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
LyogU3dpdGNoIHJpbmcgbW1pbyB2YWx1ZXMgKGNvbnRleHQpLiAqLwogc3RhdGljIHZvaWQgc3dp
dGNoX21taW8oc3RydWN0IGludGVsX3ZncHUgKnByZSwKIAkJCXN0cnVjdCBpbnRlbF92Z3B1ICpu
ZXh0LAotCQkJaW50IHJpbmdfaWQpCisJCQljb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2OworCXN0cnVjdCBp
bnRlbF91bmNvcmUgKnVuY29yZSA9IGVuZ2luZS0+dW5jb3JlOwogCXN0cnVjdCBpbnRlbF92Z3B1
X3N1Ym1pc3Npb24gKnM7CiAJc3RydWN0IGVuZ2luZV9tbWlvICptbWlvOwogCXUzMiBvbGRfdiwg
bmV3X3Y7CiAKLQlkZXZfcHJpdiA9IHByZSA/IHByZS0+Z3Z0LT5kZXZfcHJpdiA6IG5leHQtPmd2
dC0+ZGV2X3ByaXY7Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOSkKLQkJc3dpdGNoX21v
Y3MocHJlLCBuZXh0LCByaW5nX2lkKTsKKwlpZiAoSU5URUxfR0VOKGVuZ2luZS0+aTkxNSkgPj0g
OSkKKwkJc3dpdGNoX21vY3MocHJlLCBuZXh0LCBlbmdpbmUpOwogCi0JZm9yIChtbWlvID0gZGV2
X3ByaXYtPmd2dC0+ZW5naW5lX21taW9fbGlzdC5tbWlvOworCWZvciAobW1pbyA9IGVuZ2luZS0+
aTkxNS0+Z3Z0LT5lbmdpbmVfbW1pb19saXN0Lm1taW87CiAJICAgICBpOTE1X21taW9fcmVnX3Zh
bGlkKG1taW8tPnJlZyk7IG1taW8rKykgewotCQlpZiAobW1pby0+cmluZ19pZCAhPSByaW5nX2lk
KQorCQlpZiAobW1pby0+aWQgIT0gZW5naW5lLT5pZCkKIAkJCWNvbnRpbnVlOwogCQkvKgogCQkg
KiBObyBuZWVkIHRvIGRvIHNhdmUgb3IgcmVzdG9yZSBvZiB0aGUgbW1pbyB3aGljaCBpcyBpbiBj
b250ZXh0CiAJCSAqIHN0YXRlIGltYWdlIG9uIGdlbjksIGl0J3MgaW5pdGlhbGl6ZWQgYnkgbHJp
IGNvbW1hbmQgYW5kCiAJCSAqIHNhdmUgb3IgcmVzdG9yZSB3aXRoIGNvbnRleHQgdG9nZXRoZXIu
CiAJCSAqLwotCQlpZiAoSVNfR0VOKGRldl9wcml2LCA5KSAmJiBtbWlvLT5pbl9jb250ZXh0KQor
CQlpZiAoSVNfR0VOKGVuZ2luZS0+aTkxNSwgOSkgJiYgbW1pby0+aW5fY29udGV4dCkKIAkJCWNv
bnRpbnVlOwogCiAJCS8vIHNhdmUKIAkJaWYgKHByZSkgewotCQkJdmdwdV92cmVnX3QocHJlLCBt
bWlvLT5yZWcpID0gSTkxNV9SRUFEX0ZXKG1taW8tPnJlZyk7CisJCQl2Z3B1X3ZyZWdfdChwcmUs
IG1taW8tPnJlZykgPQorCQkJCWludGVsX3VuY29yZV9yZWFkX2Z3KHVuY29yZSwgbW1pby0+cmVn
KTsKIAkJCWlmIChtbWlvLT5tYXNrKQogCQkJCXZncHVfdnJlZ190KHByZSwgbW1pby0+cmVnKSAm
PQotCQkJCQkJfihtbWlvLT5tYXNrIDw8IDE2KTsKKwkJCQkJfihtbWlvLT5tYXNrIDw8IDE2KTsK
IAkJCW9sZF92ID0gdmdwdV92cmVnX3QocHJlLCBtbWlvLT5yZWcpOwotCQl9IGVsc2UKLQkJCW9s
ZF92ID0gbW1pby0+dmFsdWUgPSBJOTE1X1JFQURfRlcobW1pby0+cmVnKTsKKwkJfSBlbHNlIHsK
KwkJCW9sZF92ID0gbW1pby0+dmFsdWUgPQorCQkJCWludGVsX3VuY29yZV9yZWFkX2Z3KHVuY29y
ZSwgbW1pby0+cmVnKTsKKwkJfQogCiAJCS8vIHJlc3RvcmUKIAkJaWYgKG5leHQpIHsKQEAgLTUw
OCwxMiArNTA3LDEyIEBAIHN0YXRpYyB2b2lkIHN3aXRjaF9tbWlvKHN0cnVjdCBpbnRlbF92Z3B1
ICpwcmUsCiAJCQkgKiBpdHNlbGYuCiAJCQkgKi8KIAkJCWlmIChtbWlvLT5pbl9jb250ZXh0ICYm
Ci0JCQkgICAgIWlzX2luaGliaXRfY29udGV4dChzLT5zaGFkb3dbcmluZ19pZF0pKQorCQkJICAg
ICFpc19pbmhpYml0X2NvbnRleHQocy0+c2hhZG93W2VuZ2luZS0+aWRdKSkKIAkJCQljb250aW51
ZTsKIAogCQkJaWYgKG1taW8tPm1hc2spCiAJCQkJbmV3X3YgPSB2Z3B1X3ZyZWdfdChuZXh0LCBt
bWlvLT5yZWcpIHwKLQkJCQkJCQkobW1pby0+bWFzayA8PCAxNik7CisJCQkJCShtbWlvLT5tYXNr
IDw8IDE2KTsKIAkJCWVsc2UKIAkJCQluZXdfdiA9IHZncHVfdnJlZ190KG5leHQsIG1taW8tPnJl
Zyk7CiAJCX0gZWxzZSB7CkBAIC01MjUsNyArNTI0LDcgQEAgc3RhdGljIHZvaWQgc3dpdGNoX21t
aW8oc3RydWN0IGludGVsX3ZncHUgKnByZSwKIAkJCQluZXdfdiA9IG1taW8tPnZhbHVlOwogCQl9
CiAKLQkJSTkxNV9XUklURV9GVyhtbWlvLT5yZWcsIG5ld192KTsKKwkJaW50ZWxfdW5jb3JlX3dy
aXRlX2Z3KHVuY29yZSwgbW1pby0+cmVnLCBuZXdfdik7CiAKIAkJdHJhY2VfcmVuZGVyX21taW8o
cHJlID8gcHJlLT5pZCA6IDAsCiAJCQkJICBuZXh0ID8gbmV4dC0+aWQgOiAwLApAQCAtNTM1LDM5
ICs1MzQsMzYgQEAgc3RhdGljIHZvaWQgc3dpdGNoX21taW8oc3RydWN0IGludGVsX3ZncHUgKnBy
ZSwKIAl9CiAKIAlpZiAobmV4dCkKLQkJaGFuZGxlX3RsYl9wZW5kaW5nX2V2ZW50KG5leHQsIHJp
bmdfaWQpOworCQloYW5kbGVfdGxiX3BlbmRpbmdfZXZlbnQobmV4dCwgZW5naW5lKTsKIH0KIAog
LyoqCiAgKiBpbnRlbF9ndnRfc3dpdGNoX3JlbmRlcl9tbWlvIC0gc3dpdGNoIG1taW8gY29udGV4
dCBvZiBzcGVjaWZpYyBlbmdpbmUKICAqIEBwcmU6IHRoZSBsYXN0IHZHUFUgdGhhdCBvd24gdGhl
IGVuZ2luZQogICogQG5leHQ6IHRoZSB2R1BVIHRvIHN3aXRjaCB0bwotICogQHJpbmdfaWQ6IHNw
ZWNpZnkgdGhlIGVuZ2luZQorICogQGVuZ2luZTogdGhlIGVuZ2luZQogICoKICAqIElmIHByZSBp
cyBudWxsIGluZGljYXRlcyB0aGF0IGhvc3Qgb3duIHRoZSBlbmdpbmUuIElmIG5leHQgaXMgbnVs
bAogICogaW5kaWNhdGVzIHRoYXQgd2UgYXJlIHN3aXRjaGluZyB0byBob3N0IHdvcmtsb2FkLgog
ICovCiB2b2lkIGludGVsX2d2dF9zd2l0Y2hfbW1pbyhzdHJ1Y3QgaW50ZWxfdmdwdSAqcHJlLAot
CQkJICAgc3RydWN0IGludGVsX3ZncHUgKm5leHQsIGludCByaW5nX2lkKQorCQkJICAgc3RydWN0
IGludGVsX3ZncHUgKm5leHQsCisJCQkgICBjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmUpCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2OwotCiAJaWYgKFdB
Uk5fT04oIXByZSAmJiAhbmV4dCkpCiAJCXJldHVybjsKIAotCWd2dF9kYmdfcmVuZGVyKCJzd2l0
Y2ggcmluZyAlZCBmcm9tICVzIHRvICVzXG4iLCByaW5nX2lkLAorCWd2dF9kYmdfcmVuZGVyKCJz
d2l0Y2ggcmluZyAlcyBmcm9tICVzIHRvICVzXG4iLCBlbmdpbmUtPm5hbWUsCiAJCSAgICAgICBw
cmUgPyAidkdQVSIgOiAiaG9zdCIsIG5leHQgPyAidkdQVSIgOiAiSE9TVCIpOwogCi0JZGV2X3By
aXYgPSBwcmUgPyBwcmUtPmd2dC0+ZGV2X3ByaXYgOiBuZXh0LT5ndnQtPmRldl9wcml2OwotCiAJ
LyoqCiAJICogV2UgYXJlIHVzaW5nIHJhdyBtbWlvIGFjY2VzcyB3cmFwcGVyIHRvIGltcHJvdmUg
dGhlCiAJICogcGVyZm9ybWFjZSBmb3IgYmF0Y2ggbW1pbyByZWFkL3dyaXRlLCBzbyB3ZSBuZWVk
CiAJICogaGFuZGxlIGZvcmNld2FrZSBtYW5udWFsbHkuCiAJICovCi0JaW50ZWxfdW5jb3JlX2Zv
cmNld2FrZV9nZXQoJmRldl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwotCXN3aXRjaF9t
bWlvKHByZSwgbmV4dCwgcmluZ19pZCk7Ci0JaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQoJmRl
dl9wcml2LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOworCWludGVsX3VuY29yZV9mb3JjZXdha2Vf
Z2V0KGVuZ2luZS0+dW5jb3JlLCBGT1JDRVdBS0VfQUxMKTsKKwlzd2l0Y2hfbW1pbyhwcmUsIG5l
eHQsIGVuZ2luZSk7CisJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQoZW5naW5lLT51bmNvcmUs
IEZPUkNFV0FLRV9BTEwpOwogfQogCiAvKioKQEAgLTU5NCw3ICs1OTAsNyBAQCB2b2lkIGludGVs
X2d2dF9pbml0X2VuZ2luZV9tbWlvX2NvbnRleHQoc3RydWN0IGludGVsX2d2dCAqZ3Z0KQogCWZv
ciAobW1pbyA9IGd2dC0+ZW5naW5lX21taW9fbGlzdC5tbWlvOwogCSAgICAgaTkxNV9tbWlvX3Jl
Z192YWxpZChtbWlvLT5yZWcpOyBtbWlvKyspIHsKIAkJaWYgKG1taW8tPmluX2NvbnRleHQpIHsK
LQkJCWd2dC0+ZW5naW5lX21taW9fbGlzdC5jdHhfbW1pb19jb3VudFttbWlvLT5yaW5nX2lkXSsr
OworCQkJZ3Z0LT5lbmdpbmVfbW1pb19saXN0LmN0eF9tbWlvX2NvdW50W21taW8tPmlkXSsrOwog
CQkJaW50ZWxfZ3Z0X21taW9fc2V0X2luX2N0eChndnQsIG1taW8tPnJlZy5yZWcpOwogCQl9CiAJ
fQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21taW9fY29udGV4dC5oIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21taW9fY29udGV4dC5oCmluZGV4IGY3ZWFhNDQyNDAz
Zi4uOTcwNzA0YjE4ZjIzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvbW1p
b19jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L21taW9fY29udGV4dC5o
CkBAIC0zNyw3ICszNyw3IEBACiAjZGVmaW5lIF9fR1ZUX1JFTkRFUl9IX18KIAogc3RydWN0IGVu
Z2luZV9tbWlvIHsKLQlpbnQgcmluZ19pZDsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKIAlp
OTE1X3JlZ190IHJlZzsKIAl1MzIgbWFzazsKIAlib29sIGluX2NvbnRleHQ7CkBAIC00NSw3ICs0
NSw4IEBAIHN0cnVjdCBlbmdpbmVfbW1pbyB7CiB9OwogCiB2b2lkIGludGVsX2d2dF9zd2l0Y2hf
bW1pbyhzdHJ1Y3QgaW50ZWxfdmdwdSAqcHJlLAotCQkJICAgc3RydWN0IGludGVsX3ZncHUgKm5l
eHQsIGludCByaW5nX2lkKTsKKwkJCSAgIHN0cnVjdCBpbnRlbF92Z3B1ICpuZXh0LAorCQkJICAg
Y29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKIAogdm9pZCBpbnRlbF9ndnRf
aW5pdF9lbmdpbmVfbW1pb19jb250ZXh0KHN0cnVjdCBpbnRlbF9ndnQgKmd2dCk7CiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZF9wb2xpY3kuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d2dC9zY2hlZF9wb2xpY3kuYwppbmRleCAyMzY5ZDRhOWFmOTQuLjljNGVj
Y2QwY2ZlYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3NjaGVkX3BvbGlj
eS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZF9wb2xpY3kuYwpAQCAtNDAs
NyArNDAsNyBAQCBzdGF0aWMgYm9vbCB2Z3B1X2hhc19wZW5kaW5nX3dvcmtsb2FkKHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1KQogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAogCWZv
cl9lYWNoX2VuZ2luZShlbmdpbmUsIHZncHUtPmd2dC0+ZGV2X3ByaXYsIGkpIHsKLQkJaWYgKCFs
aXN0X2VtcHR5KHdvcmtsb2FkX3FfaGVhZCh2Z3B1LCBpKSkpCisJCWlmICghbGlzdF9lbXB0eSh3
b3JrbG9hZF9xX2hlYWQodmdwdSwgZW5naW5lKSkpCiAJCQlyZXR1cm4gdHJ1ZTsKIAl9CiAKQEAg
LTQ0NCw5ICs0NDQsMTAgQEAgdm9pZCBpbnRlbF92Z3B1X3N0b3Bfc2NoZWR1bGUoc3RydWN0IGlu
dGVsX3ZncHUgKnZncHUpCiB7CiAJc3RydWN0IGludGVsX2d2dF93b3JrbG9hZF9zY2hlZHVsZXIg
KnNjaGVkdWxlciA9CiAJCSZ2Z3B1LT5ndnQtPnNjaGVkdWxlcjsKLQlpbnQgcmluZ19pZDsKIAlz
dHJ1Y3QgdmdwdV9zY2hlZF9kYXRhICp2Z3B1X2RhdGEgPSB2Z3B1LT5zY2hlZF9kYXRhOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHZncHUtPmd2dC0+ZGV2X3ByaXY7CisJ
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOworCWVudW0gaW50ZWxfZW5naW5lX2lkIGlk
OwogCiAJaWYgKCF2Z3B1X2RhdGEtPmFjdGl2ZSkKIAkJcmV0dXJuOwpAQCAtNDY3LDEwICs0Njgs
MTAgQEAgdm9pZCBpbnRlbF92Z3B1X3N0b3Bfc2NoZWR1bGUoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUpCiAKIAlpbnRlbF9ydW50aW1lX3BtX2dldCgmZGV2X3ByaXYtPnJ1bnRpbWVfcG0pOwogCXNw
aW5fbG9ja19iaCgmc2NoZWR1bGVyLT5tbWlvX2NvbnRleHRfbG9jayk7Ci0JZm9yIChyaW5nX2lk
ID0gMDsgcmluZ19pZCA8IEk5MTVfTlVNX0VOR0lORVM7IHJpbmdfaWQrKykgewotCQlpZiAoc2No
ZWR1bGVyLT5lbmdpbmVfb3duZXJbcmluZ19pZF0gPT0gdmdwdSkgewotCQkJaW50ZWxfZ3Z0X3N3
aXRjaF9tbWlvKHZncHUsIE5VTEwsIHJpbmdfaWQpOwotCQkJc2NoZWR1bGVyLT5lbmdpbmVfb3du
ZXJbcmluZ19pZF0gPSBOVUxMOworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGRldl9wcml2LCBp
ZCkgeworCQlpZiAoc2NoZWR1bGVyLT5lbmdpbmVfb3duZXJbZW5naW5lLT5pZF0gPT0gdmdwdSkg
eworCQkJaW50ZWxfZ3Z0X3N3aXRjaF9tbWlvKHZncHUsIE5VTEwsIGVuZ2luZSk7CisJCQlzY2hl
ZHVsZXItPmVuZ2luZV9vd25lcltlbmdpbmUtPmlkXSA9IE5VTEw7CiAJCX0KIAl9CiAJc3Bpbl91
bmxvY2tfYmgoJnNjaGVkdWxlci0+bW1pb19jb250ZXh0X2xvY2spOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3NjaGVkdWxlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3Z0L3NjaGVkdWxlci5jCmluZGV4IGFlM2U1NjI0NzU3Ni4uZGY1YjUyNWZlY2UwIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndnQvc2NoZWR1bGVyLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3Z0L3NjaGVkdWxlci5jCkBAIC05Nyw3ICs5Nyw3IEBAIHN0YXRpYyB2b2lk
IHNyX29hX3JlZ3Moc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmtsb2FkLAogCQlpOTE1
X21taW9fcmVnX29mZnNldChFVV9QRVJGX0NOVEw2KSwKIAl9OwogCi0JaWYgKHdvcmtsb2FkLT5y
aW5nX2lkICE9IFJDUzApCisJaWYgKHdvcmtsb2FkLT5lbmdpbmUtPmlkICE9IFJDUzApCiAJCXJl
dHVybjsKIAogCWlmIChzYXZlKSB7CkBAIC0xMjcsNyArMTI3LDYgQEAgc3RhdGljIGludCBwb3B1
bGF0ZV9zaGFkb3dfY29udGV4dChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQp
CiB7CiAJc3RydWN0IGludGVsX3ZncHUgKnZncHUgPSB3b3JrbG9hZC0+dmdwdTsKIAlzdHJ1Y3Qg
aW50ZWxfZ3Z0ICpndnQgPSB2Z3B1LT5ndnQ7Ci0JaW50IHJpbmdfaWQgPSB3b3JrbG9hZC0+cmlu
Z19pZDsKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29iaiA9CiAJCXdvcmtsb2Fk
LT5yZXEtPmh3X2NvbnRleHQtPnN0YXRlLT5vYmo7CiAJc3RydWN0IGV4ZWNsaXN0X3JpbmdfY29u
dGV4dCAqc2hhZG93X3JpbmdfY29udGV4dDsKQEAgLTE1Myw3ICsxNTIsNyBAQCBzdGF0aWMgaW50
IHBvcHVsYXRlX3NoYWRvd19jb250ZXh0KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3Jr
bG9hZCkKIAlDT1BZX1JFR19NQVNLRUQoY3R4X2N0cmwpOwogCUNPUFlfUkVHKGN0eF90aW1lc3Rh
bXApOwogCi0JaWYgKHJpbmdfaWQgPT0gUkNTMCkgeworCWlmICh3b3JrbG9hZC0+ZW5naW5lLT5p
ZCA9PSBSQ1MwKSB7CiAJCUNPUFlfUkVHKGJiX3Blcl9jdHhfcHRyKTsKIAkJQ09QWV9SRUcocmNz
X2luZGlyZWN0X2N0eCk7CiAJCUNPUFlfUkVHKHJjc19pbmRpcmVjdF9jdHhfb2Zmc2V0KTsKQEAg
LTE3NCwxNCArMTczLDE0IEBAIHN0YXRpYyBpbnQgcG9wdWxhdGVfc2hhZG93X2NvbnRleHQoc3Ry
dWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmtsb2FkKQogCWlmIChJU19SRVNUT1JFX0lOSElC
SVQoc2hhZG93X3JpbmdfY29udGV4dC0+Y3R4X2N0cmwudmFsKSkKIAkJcmV0dXJuIDA7CiAKLQln
dnRfZGJnX3NjaGVkKCJyaW5nIGlkICVkIHdvcmtsb2FkIGxyY2EgJXgiLCByaW5nX2lkLAotCQkJ
d29ya2xvYWQtPmN0eF9kZXNjLmxyY2EpOwotCi0JY29udGV4dF9wYWdlX251bSA9IGd2dC0+ZGV2
X3ByaXYtPmVuZ2luZVtyaW5nX2lkXS0+Y29udGV4dF9zaXplOworCWd2dF9kYmdfc2NoZWQoInJp
bmcgJXMgd29ya2xvYWQgbHJjYSAleCIsCisJCSAgICAgIHdvcmtsb2FkLT5lbmdpbmUtPm5hbWUs
CisJCSAgICAgIHdvcmtsb2FkLT5jdHhfZGVzYy5scmNhKTsKIAorCWNvbnRleHRfcGFnZV9udW0g
PSB3b3JrbG9hZC0+ZW5naW5lLT5jb250ZXh0X3NpemU7CiAJY29udGV4dF9wYWdlX251bSA9IGNv
bnRleHRfcGFnZV9udW0gPj4gUEFHRV9TSElGVDsKIAotCWlmIChJU19CUk9BRFdFTEwoZ3Z0LT5k
ZXZfcHJpdikgJiYgcmluZ19pZCA9PSBSQ1MwKQorCWlmIChJU19CUk9BRFdFTEwoZ3Z0LT5kZXZf
cHJpdikgJiYgd29ya2xvYWQtPmVuZ2luZS0+aWQgPT0gUkNTMCkKIAkJY29udGV4dF9wYWdlX251
bSA9IDE5OwogCiAJaSA9IDI7CkBAIC0yMDksMzggKzIwOCw0MyBAQCBzdGF0aWMgaW5saW5lIGJv
b2wgaXNfZ3Z0X3JlcXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxKQogCXJldHVybiBpOTE1
X2dlbV9jb250ZXh0X2ZvcmNlX3NpbmdsZV9zdWJtaXNzaW9uKHJlcS0+Z2VtX2NvbnRleHQpOwog
fQogCi1zdGF0aWMgdm9pZCBzYXZlX3JpbmdfaHdfc3RhdGUoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUsIGludCByaW5nX2lkKQorc3RhdGljIHZvaWQgc2F2ZV9yaW5nX2h3X3N0YXRlKHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1LAorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB2Z3B1LT5n
dnQtPmRldl9wcml2OwotCXUzMiByaW5nX2Jhc2UgPSBkZXZfcHJpdi0+ZW5naW5lW3JpbmdfaWRd
LT5tbWlvX2Jhc2U7CisJc3RydWN0IGludGVsX3VuY29yZSAqdW5jb3JlID0gZW5naW5lLT51bmNv
cmU7CiAJaTkxNV9yZWdfdCByZWc7CiAKLQlyZWcgPSBSSU5HX0lOU1RET05FKHJpbmdfYmFzZSk7
Ci0JdmdwdV92cmVnKHZncHUsIGk5MTVfbW1pb19yZWdfb2Zmc2V0KHJlZykpID0gSTkxNV9SRUFE
X0ZXKHJlZyk7Ci0JcmVnID0gUklOR19BQ1RIRChyaW5nX2Jhc2UpOwotCXZncHVfdnJlZyh2Z3B1
LCBpOTE1X21taW9fcmVnX29mZnNldChyZWcpKSA9IEk5MTVfUkVBRF9GVyhyZWcpOwotCXJlZyA9
IFJJTkdfQUNUSERfVURXKHJpbmdfYmFzZSk7Ci0JdmdwdV92cmVnKHZncHUsIGk5MTVfbW1pb19y
ZWdfb2Zmc2V0KHJlZykpID0gSTkxNV9SRUFEX0ZXKHJlZyk7CisJcmVnID0gUklOR19JTlNURE9O
RShlbmdpbmUtPm1taW9fYmFzZSk7CisJdmdwdV92cmVnKHZncHUsIGk5MTVfbW1pb19yZWdfb2Zm
c2V0KHJlZykpID0KKwkJaW50ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCByZWcpOworCisJcmVnID0g
UklOR19BQ1RIRChlbmdpbmUtPm1taW9fYmFzZSk7CisJdmdwdV92cmVnKHZncHUsIGk5MTVfbW1p
b19yZWdfb2Zmc2V0KHJlZykpID0KKwkJaW50ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCByZWcpOwor
CisJcmVnID0gUklOR19BQ1RIRF9VRFcoZW5naW5lLT5tbWlvX2Jhc2UpOworCXZncHVfdnJlZyh2
Z3B1LCBpOTE1X21taW9fcmVnX29mZnNldChyZWcpKSA9CisJCWludGVsX3VuY29yZV9yZWFkKHVu
Y29yZSwgcmVnKTsKIH0KIAogc3RhdGljIGludCBzaGFkb3dfY29udGV4dF9zdGF0dXNfY2hhbmdl
KHN0cnVjdCBub3RpZmllcl9ibG9jayAqbmIsCiAJCXVuc2lnbmVkIGxvbmcgYWN0aW9uLCB2b2lk
ICpkYXRhKQogewotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcSA9IGRhdGE7CisJc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEgPSBkYXRhOwogCXN0cnVjdCBpbnRlbF9ndnQgKmd2dCA9IGNvbnRhaW5l
cl9vZihuYiwgc3RydWN0IGludGVsX2d2dCwKLQkJCQlzaGFkb3dfY3R4X25vdGlmaWVyX2Jsb2Nr
W3JlcS0+ZW5naW5lLT5pZF0pOworCQkJCXNoYWRvd19jdHhfbm90aWZpZXJfYmxvY2tbcnEtPmVu
Z2luZS0+aWRdKTsKIAlzdHJ1Y3QgaW50ZWxfZ3Z0X3dvcmtsb2FkX3NjaGVkdWxlciAqc2NoZWR1
bGVyID0gJmd2dC0+c2NoZWR1bGVyOwotCWVudW0gaW50ZWxfZW5naW5lX2lkIHJpbmdfaWQgPSBy
ZXEtPmVuZ2luZS0+aWQ7CisJZW51bSBpbnRlbF9lbmdpbmVfaWQgcmluZ19pZCA9IHJxLT5lbmdp
bmUtPmlkOwogCXN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZDsKIAl1bnNpZ25l
ZCBsb25nIGZsYWdzOwogCi0JaWYgKCFpc19ndnRfcmVxdWVzdChyZXEpKSB7CisJaWYgKCFpc19n
dnRfcmVxdWVzdChycSkpIHsKIAkJc3Bpbl9sb2NrX2lycXNhdmUoJnNjaGVkdWxlci0+bW1pb19j
b250ZXh0X2xvY2ssIGZsYWdzKTsKIAkJaWYgKGFjdGlvbiA9PSBJTlRFTF9DT05URVhUX1NDSEVE
VUxFX0lOICYmCiAJCSAgICBzY2hlZHVsZXItPmVuZ2luZV9vd25lcltyaW5nX2lkXSkgewogCQkJ
LyogU3dpdGNoIHJpbmcgZnJvbSB2R1BVIHRvIGhvc3QuICovCiAJCQlpbnRlbF9ndnRfc3dpdGNo
X21taW8oc2NoZWR1bGVyLT5lbmdpbmVfb3duZXJbcmluZ19pZF0sCi0JCQkJCSAgICAgIE5VTEws
IHJpbmdfaWQpOworCQkJCQkgICAgICBOVUxMLCBycS0+ZW5naW5lKTsKIAkJCXNjaGVkdWxlci0+
ZW5naW5lX293bmVyW3JpbmdfaWRdID0gTlVMTDsKIAkJfQogCQlzcGluX3VubG9ja19pcnFyZXN0
b3JlKCZzY2hlZHVsZXItPm1taW9fY29udGV4dF9sb2NrLCBmbGFncyk7CkBAIC0yNTgsNyArMjYy
LDcgQEAgc3RhdGljIGludCBzaGFkb3dfY29udGV4dF9zdGF0dXNfY2hhbmdlKHN0cnVjdCBub3Rp
Zmllcl9ibG9jayAqbmIsCiAJCWlmICh3b3JrbG9hZC0+dmdwdSAhPSBzY2hlZHVsZXItPmVuZ2lu
ZV9vd25lcltyaW5nX2lkXSkgewogCQkJLyogU3dpdGNoIHJpbmcgZnJvbSBob3N0IHRvIHZHUFUg
b3IgdkdQVSB0byB2R1BVLiAqLwogCQkJaW50ZWxfZ3Z0X3N3aXRjaF9tbWlvKHNjaGVkdWxlci0+
ZW5naW5lX293bmVyW3JpbmdfaWRdLAotCQkJCQkgICAgICB3b3JrbG9hZC0+dmdwdSwgcmluZ19p
ZCk7CisJCQkJCSAgICAgIHdvcmtsb2FkLT52Z3B1LCBycS0+ZW5naW5lKTsKIAkJCXNjaGVkdWxl
ci0+ZW5naW5lX293bmVyW3JpbmdfaWRdID0gd29ya2xvYWQtPnZncHU7CiAJCX0gZWxzZQogCQkJ
Z3Z0X2RiZ19zY2hlZCgic2tpcCByaW5nICVkIG1taW8gc3dpdGNoIGZvciB2Z3B1JWRcbiIsCkBA
IC0yNjcsMTEgKzI3MSwxMSBAQCBzdGF0aWMgaW50IHNoYWRvd19jb250ZXh0X3N0YXR1c19jaGFu
Z2Uoc3RydWN0IG5vdGlmaWVyX2Jsb2NrICpuYiwKIAkJYXRvbWljX3NldCgmd29ya2xvYWQtPnNo
YWRvd19jdHhfYWN0aXZlLCAxKTsKIAkJYnJlYWs7CiAJY2FzZSBJTlRFTF9DT05URVhUX1NDSEVE
VUxFX09VVDoKLQkJc2F2ZV9yaW5nX2h3X3N0YXRlKHdvcmtsb2FkLT52Z3B1LCByaW5nX2lkKTsK
KwkJc2F2ZV9yaW5nX2h3X3N0YXRlKHdvcmtsb2FkLT52Z3B1LCBycS0+ZW5naW5lKTsKIAkJYXRv
bWljX3NldCgmd29ya2xvYWQtPnNoYWRvd19jdHhfYWN0aXZlLCAwKTsKIAkJYnJlYWs7CiAJY2Fz
ZSBJTlRFTF9DT05URVhUX1NDSEVEVUxFX1BSRUVNUFRFRDoKLQkJc2F2ZV9yaW5nX2h3X3N0YXRl
KHdvcmtsb2FkLT52Z3B1LCByaW5nX2lkKTsKKwkJc2F2ZV9yaW5nX2h3X3N0YXRlKHdvcmtsb2Fk
LT52Z3B1LCBycS0+ZW5naW5lKTsKIAkJYnJlYWs7CiAJZGVmYXVsdDoKIAkJV0FSTl9PTigxKTsK
QEAgLTM2MiwxMSArMzY2LDEwIEBAIHN0YXRpYyB2b2lkIHJlbGVhc2Vfc2hhZG93X3dhX2N0eChz
dHJ1Y3QgaW50ZWxfc2hhZG93X3dhX2N0eCAqd2FfY3R4KQogfQogCiBzdGF0aWMgdm9pZCBzZXRf
Y29udGV4dF9wcGd0dF9mcm9tX3NoYWRvdyhzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29y
a2xvYWQsCi0JCQkJCSAgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKKwkJCQkJICBzdHJ1
Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJc3RydWN0IGludGVsX3ZncHVfbW0gKm1tID0gd29y
a2xvYWQtPnNoYWRvd19tbTsKLQlzdHJ1Y3QgaTkxNV9wcGd0dCAqcHBndHQgPQotCQlpOTE1X3Zt
X3RvX3BwZ3R0KGk5MTVfZ2VtX2NvbnRleHRfZ2V0X3ZtX3JjdShjdHgpKTsKKwlzdHJ1Y3QgaTkx
NV9wcGd0dCAqcHBndHQgPSBpOTE1X3ZtX3RvX3BwZ3R0KGNlLT52bSk7CiAJaW50IGkgPSAwOwog
CiAJaWYgKG1tLT5wcGd0dF9tbS5yb290X2VudHJ5X3R5cGUgPT0gR1RUX1RZUEVfUFBHVFRfUk9P
VF9MNF9FTlRSWSkgewpAQCAtMzc5LDggKzM4Miw2IEBAIHN0YXRpYyB2b2lkIHNldF9jb250ZXh0
X3BwZ3R0X2Zyb21fc2hhZG93KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCwK
IAkJCXB4X2RtYShwZCkgPSBtbS0+cHBndHRfbW0uc2hhZG93X3BkcHNbaV07CiAJCX0KIAl9Ci0K
LQlpOTE1X3ZtX3B1dCgmcHBndHQtPnZtKTsKIH0KIAogc3RhdGljIGludApAQCAtMzkzLDcgKzM5
NCw3IEBAIGludGVsX2d2dF93b3JrbG9hZF9yZXFfYWxsb2Moc3RydWN0IGludGVsX3ZncHVfd29y
a2xvYWQgKndvcmtsb2FkKQogCWlmICh3b3JrbG9hZC0+cmVxKQogCQlyZXR1cm4gMDsKIAotCXJx
ID0gaTkxNV9yZXF1ZXN0X2NyZWF0ZShzLT5zaGFkb3dbd29ya2xvYWQtPnJpbmdfaWRdKTsKKwly
cSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUocy0+c2hhZG93W3dvcmtsb2FkLT5lbmdpbmUtPmlkXSk7
CiAJaWYgKElTX0VSUihycSkpIHsKIAkJZ3Z0X3ZncHVfZXJyKCJmYWlsIHRvIGFsbG9jYXRlIGdl
bSByZXF1ZXN0XG4iKTsKIAkJcmV0dXJuIFBUUl9FUlIocnEpOwpAQCAtNDIyLDE1ICs0MjMsMTYg
QEAgaW50IGludGVsX2d2dF9zY2FuX2FuZF9zaGFkb3dfd29ya2xvYWQoc3RydWN0IGludGVsX3Zn
cHVfd29ya2xvYWQgKndvcmtsb2FkKQogCWlmICh3b3JrbG9hZC0+c2hhZG93KQogCQlyZXR1cm4g
MDsKIAotCWlmICghdGVzdF9hbmRfc2V0X2JpdCh3b3JrbG9hZC0+cmluZ19pZCwgcy0+c2hhZG93
X2N0eF9kZXNjX3VwZGF0ZWQpKQotCQlzaGFkb3dfY29udGV4dF9kZXNjcmlwdG9yX3VwZGF0ZShz
LT5zaGFkb3dbd29ya2xvYWQtPnJpbmdfaWRdLAorCWlmICghdGVzdF9hbmRfc2V0X2JpdCh3b3Jr
bG9hZC0+ZW5naW5lLT5pZCwgcy0+c2hhZG93X2N0eF9kZXNjX3VwZGF0ZWQpKQorCQlzaGFkb3df
Y29udGV4dF9kZXNjcmlwdG9yX3VwZGF0ZShzLT5zaGFkb3dbd29ya2xvYWQtPmVuZ2luZS0+aWRd
LAogCQkJCQkJIHdvcmtsb2FkKTsKIAogCXJldCA9IGludGVsX2d2dF9zY2FuX2FuZF9zaGFkb3df
cmluZ2J1ZmZlcih3b3JrbG9hZCk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCWlmICh3
b3JrbG9hZC0+cmluZ19pZCA9PSBSQ1MwICYmIHdvcmtsb2FkLT53YV9jdHguaW5kaXJlY3RfY3R4
LnNpemUpIHsKKwlpZiAod29ya2xvYWQtPmVuZ2luZS0+aWQgPT0gUkNTMCAmJgorCSAgICB3b3Jr
bG9hZC0+d2FfY3R4LmluZGlyZWN0X2N0eC5zaXplKSB7CiAJCXJldCA9IGludGVsX2d2dF9zY2Fu
X2FuZF9zaGFkb3dfd2FfY3R4KCZ3b3JrbG9hZC0+d2FfY3R4KTsKIAkJaWYgKHJldCkKIAkJCWdv
dG8gZXJyX3NoYWRvdzsKQEAgLTQzOCw2ICs0NDAsNyBAQCBpbnQgaW50ZWxfZ3Z0X3NjYW5fYW5k
X3NoYWRvd193b3JrbG9hZChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAK
IAl3b3JrbG9hZC0+c2hhZG93ID0gdHJ1ZTsKIAlyZXR1cm4gMDsKKwogZXJyX3NoYWRvdzoKIAly
ZWxlYXNlX3NoYWRvd193YV9jdHgoJndvcmtsb2FkLT53YV9jdHgpOwogCXJldHVybiByZXQ7CkBA
IC01NjksMTIgKzU3Miw4IEBAIHN0YXRpYyBpbnQgcHJlcGFyZV9zaGFkb3dfd2FfY3R4KHN0cnVj
dCBpbnRlbF9zaGFkb3dfd2FfY3R4ICp3YV9jdHgpCiAKIHN0YXRpYyB2b2lkIHVwZGF0ZV92cmVn
X2luX2N0eChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiB7Ci0Jc3RydWN0
IGludGVsX3ZncHUgKnZncHUgPSB3b3JrbG9hZC0+dmdwdTsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYgPSB2Z3B1LT5ndnQtPmRldl9wcml2OwotCXUzMiByaW5nX2Jhc2U7Ci0K
LQlyaW5nX2Jhc2UgPSBkZXZfcHJpdi0+ZW5naW5lW3dvcmtsb2FkLT5yaW5nX2lkXS0+bW1pb19i
YXNlOwotCXZncHVfdnJlZ190KHZncHUsIFJJTkdfU1RBUlQocmluZ19iYXNlKSkgPSB3b3JrbG9h
ZC0+cmJfc3RhcnQ7CisJdmdwdV92cmVnX3Qod29ya2xvYWQtPnZncHUsIFJJTkdfU1RBUlQod29y
a2xvYWQtPmVuZ2luZS0+bW1pb19iYXNlKSkgPQorCQl3b3JrbG9hZC0+cmJfc3RhcnQ7CiB9CiAK
IHN0YXRpYyB2b2lkIHJlbGVhc2Vfc2hhZG93X2JhdGNoX2J1ZmZlcihzdHJ1Y3QgaW50ZWxfdmdw
dV93b3JrbG9hZCAqd29ya2xvYWQpCkBAIC02MTAsNyArNjA5LDYgQEAgc3RhdGljIGludCBwcmVw
YXJlX3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIHsKIAlz
dHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IHdvcmtsb2FkLT52Z3B1OwogCXN0cnVjdCBpbnRlbF92
Z3B1X3N1Ym1pc3Npb24gKnMgPSAmdmdwdS0+c3VibWlzc2lvbjsKLQlpbnQgcmluZyA9IHdvcmts
b2FkLT5yaW5nX2lkOwogCWludCByZXQgPSAwOwogCiAJcmV0ID0gaW50ZWxfdmdwdV9waW5fbW0o
d29ya2xvYWQtPnNoYWRvd19tbSk7CkBAIC02MjcsNyArNjI1LDcgQEAgc3RhdGljIGludCBwcmVw
YXJlX3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAogCXVw
ZGF0ZV9zaGFkb3dfcGRwcyh3b3JrbG9hZCk7CiAKLQlzZXRfY29udGV4dF9wcGd0dF9mcm9tX3No
YWRvdyh3b3JrbG9hZCwgcy0+c2hhZG93W3JpbmddLT5nZW1fY29udGV4dCk7CisJc2V0X2NvbnRl
eHRfcHBndHRfZnJvbV9zaGFkb3cod29ya2xvYWQsIHMtPnNoYWRvd1t3b3JrbG9hZC0+ZW5naW5l
LT5pZF0pOwogCiAJcmV0ID0gaW50ZWxfdmdwdV9zeW5jX29vc19wYWdlcyh3b3JrbG9hZC0+dmdw
dSk7CiAJaWYgKHJldCkgewpAQCAtNjc5LDExICs2NzcsMTAgQEAgc3RhdGljIGludCBkaXNwYXRj
aF93b3JrbG9hZChzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiB7CiAJc3Ry
dWN0IGludGVsX3ZncHUgKnZncHUgPSB3b3JrbG9hZC0+dmdwdTsKIAlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycTsKLQlpbnQgcmluZ19pZCA9IHdvcmtsb2FkLT5yaW5nX2lkOwogCWludCByZXQ7CiAK
LQlndnRfZGJnX3NjaGVkKCJyaW5nIGlkICVkIHByZXBhcmUgdG8gZGlzcGF0Y2ggd29ya2xvYWQg
JXBcbiIsCi0JCXJpbmdfaWQsIHdvcmtsb2FkKTsKKwlndnRfZGJnX3NjaGVkKCJyaW5nIGlkICVz
IHByZXBhcmUgdG8gZGlzcGF0Y2ggd29ya2xvYWQgJXBcbiIsCisJCSAgICAgIHdvcmtsb2FkLT5l
bmdpbmUtPm5hbWUsIHdvcmtsb2FkKTsKIAogCW11dGV4X2xvY2soJnZncHUtPnZncHVfbG9jayk7
CiAKQEAgLTcxMiw4ICs3MDksOCBAQCBzdGF0aWMgaW50IGRpc3BhdGNoX3dvcmtsb2FkKHN0cnVj
dCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAl9CiAKIAlpZiAoIUlTX0VSUl9PUl9O
VUxMKHdvcmtsb2FkLT5yZXEpKSB7Ci0JCWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJWQgc3VibWl0
IHdvcmtsb2FkIHRvIGk5MTUgJXBcbiIsCi0JCQkJcmluZ19pZCwgd29ya2xvYWQtPnJlcSk7CisJ
CWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJXMgc3VibWl0IHdvcmtsb2FkIHRvIGk5MTUgJXBcbiIs
CisJCQkgICAgICB3b3JrbG9hZC0+ZW5naW5lLT5uYW1lLCB3b3JrbG9hZC0+cmVxKTsKIAkJaTkx
NV9yZXF1ZXN0X2FkZCh3b3JrbG9hZC0+cmVxKTsKIAkJd29ya2xvYWQtPmRpc3BhdGNoZWQgPSB0
cnVlOwogCX0KQEAgLTcyNCw4ICs3MjEsOCBAQCBzdGF0aWMgaW50IGRpc3BhdGNoX3dvcmtsb2Fk
KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAlyZXR1cm4gcmV0OwogfQog
Ci1zdGF0aWMgc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKnBpY2tfbmV4dF93b3JrbG9hZCgK
LQkJc3RydWN0IGludGVsX2d2dCAqZ3Z0LCBpbnQgcmluZ19pZCkKK3N0YXRpYyBzdHJ1Y3QgaW50
ZWxfdmdwdV93b3JrbG9hZCAqCitwaWNrX25leHRfd29ya2xvYWQoc3RydWN0IGludGVsX2d2dCAq
Z3Z0LCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVsX2d2
dF93b3JrbG9hZF9zY2hlZHVsZXIgKnNjaGVkdWxlciA9ICZndnQtPnNjaGVkdWxlcjsKIAlzdHJ1
Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQgPSBOVUxMOwpAQCAtNzM3LDI3ICs3MzQs
MjcgQEAgc3RhdGljIHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICpwaWNrX25leHRfd29ya2xv
YWQoCiAJICogYmFpbCBvdXQKIAkgKi8KIAlpZiAoIXNjaGVkdWxlci0+Y3VycmVudF92Z3B1KSB7
Ci0JCWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJWQgc3RvcCAtIG5vIGN1cnJlbnQgdmdwdVxuIiwg
cmluZ19pZCk7CisJCWd2dF9kYmdfc2NoZWQoInJpbmcgJXMgc3RvcCAtIG5vIGN1cnJlbnQgdmdw
dVxuIiwgZW5naW5lLT5uYW1lKTsKIAkJZ290byBvdXQ7CiAJfQogCiAJaWYgKHNjaGVkdWxlci0+
bmVlZF9yZXNjaGVkdWxlKSB7Ci0JCWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJWQgc3RvcCAtIHdp
bGwgcmVzY2hlZHVsZVxuIiwgcmluZ19pZCk7CisJCWd2dF9kYmdfc2NoZWQoInJpbmcgJXMgc3Rv
cCAtIHdpbGwgcmVzY2hlZHVsZVxuIiwgZW5naW5lLT5uYW1lKTsKIAkJZ290byBvdXQ7CiAJfQog
CiAJaWYgKCFzY2hlZHVsZXItPmN1cnJlbnRfdmdwdS0+YWN0aXZlIHx8Ci0JICAgIGxpc3RfZW1w
dHkod29ya2xvYWRfcV9oZWFkKHNjaGVkdWxlci0+Y3VycmVudF92Z3B1LCByaW5nX2lkKSkpCisJ
ICAgIGxpc3RfZW1wdHkod29ya2xvYWRfcV9oZWFkKHNjaGVkdWxlci0+Y3VycmVudF92Z3B1LCBl
bmdpbmUpKSkKIAkJZ290byBvdXQ7CiAKIAkvKgogCSAqIHN0aWxsIGhhdmUgY3VycmVudCB3b3Jr
bG9hZCwgbWF5YmUgdGhlIHdvcmtsb2FkIGRpc3B0YWNoZXIKIAkgKiBmYWlsIHRvIHN1Ym1pdCBp
dCBmb3Igc29tZSByZWFzb24sIHJlc3VibWl0IGl0LgogCSAqLwotCWlmIChzY2hlZHVsZXItPmN1
cnJlbnRfd29ya2xvYWRbcmluZ19pZF0pIHsKLQkJd29ya2xvYWQgPSBzY2hlZHVsZXItPmN1cnJl
bnRfd29ya2xvYWRbcmluZ19pZF07Ci0JCWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJWQgc3RpbGwg
aGF2ZSBjdXJyZW50IHdvcmtsb2FkICVwXG4iLAotCQkJCXJpbmdfaWQsIHdvcmtsb2FkKTsKKwlp
ZiAoc2NoZWR1bGVyLT5jdXJyZW50X3dvcmtsb2FkW2VuZ2luZS0+aWRdKSB7CisJCXdvcmtsb2Fk
ID0gc2NoZWR1bGVyLT5jdXJyZW50X3dvcmtsb2FkW2VuZ2luZS0+aWRdOworCQlndnRfZGJnX3Nj
aGVkKCJyaW5nICVzIHN0aWxsIGhhdmUgY3VycmVudCB3b3JrbG9hZCAlcFxuIiwKKwkJCSAgICAg
IGVuZ2luZS0+bmFtZSwgd29ya2xvYWQpOwogCQlnb3RvIG91dDsKIAl9CiAKQEAgLTc2NywxMyAr
NzY0LDE0IEBAIHN0YXRpYyBzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqcGlja19uZXh0X3dv
cmtsb2FkKAogCSAqIHdpbGwgd2FpdCB0aGUgY3VycmVudCB3b3JrbG9hZCBpcyBmaW5pc2hlZCB3
aGVuIHRyeWluZyB0bwogCSAqIHNjaGVkdWxlIG91dCBhIHZncHUuCiAJICovCi0Jc2NoZWR1bGVy
LT5jdXJyZW50X3dvcmtsb2FkW3JpbmdfaWRdID0gY29udGFpbmVyX29mKAotCQkJd29ya2xvYWRf
cV9oZWFkKHNjaGVkdWxlci0+Y3VycmVudF92Z3B1LCByaW5nX2lkKS0+bmV4dCwKLQkJCXN0cnVj
dCBpbnRlbF92Z3B1X3dvcmtsb2FkLCBsaXN0KTsKKwlzY2hlZHVsZXItPmN1cnJlbnRfd29ya2xv
YWRbZW5naW5lLT5pZF0gPQorCQlsaXN0X2ZpcnN0X2VudHJ5KHdvcmtsb2FkX3FfaGVhZChzY2hl
ZHVsZXItPmN1cnJlbnRfdmdwdSwKKwkJCQkJCSBlbmdpbmUpLAorCQkJCSBzdHJ1Y3QgaW50ZWxf
dmdwdV93b3JrbG9hZCwgbGlzdCk7CiAKLQl3b3JrbG9hZCA9IHNjaGVkdWxlci0+Y3VycmVudF93
b3JrbG9hZFtyaW5nX2lkXTsKKwl3b3JrbG9hZCA9IHNjaGVkdWxlci0+Y3VycmVudF93b3JrbG9h
ZFtlbmdpbmUtPmlkXTsKIAotCWd2dF9kYmdfc2NoZWQoInJpbmcgaWQgJWQgcGljayBuZXcgd29y
a2xvYWQgJXBcbiIsIHJpbmdfaWQsIHdvcmtsb2FkKTsKKwlndnRfZGJnX3NjaGVkKCJyaW5nICVz
IHBpY2sgbmV3IHdvcmtsb2FkICVwXG4iLCBlbmdpbmUtPm5hbWUsIHdvcmtsb2FkKTsKIAogCWF0
b21pY19pbmMoJndvcmtsb2FkLT52Z3B1LT5zdWJtaXNzaW9uLnJ1bm5pbmdfd29ya2xvYWRfbnVt
KTsKIG91dDoKQEAgLTc4NSwxNCArNzgzLDEyIEBAIHN0YXRpYyB2b2lkIHVwZGF0ZV9ndWVzdF9j
b250ZXh0KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIHsKIAlzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpycSA9IHdvcmtsb2FkLT5yZXE7CiAJc3RydWN0IGludGVsX3ZncHUgKnZn
cHUgPSB3b3JrbG9hZC0+dmdwdTsKLQlzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQgPSB2Z3B1LT5ndnQ7
CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKmN0eF9vYmogPSBycS0+aHdfY29udGV4dC0+
c3RhdGUtPm9iajsKIAlzdHJ1Y3QgZXhlY2xpc3RfcmluZ19jb250ZXh0ICpzaGFkb3dfcmluZ19j
b250ZXh0OwogCXN0cnVjdCBwYWdlICpwYWdlOwogCXZvaWQgKnNyYzsKIAl1bnNpZ25lZCBsb25n
IGNvbnRleHRfZ3BhLCBjb250ZXh0X3BhZ2VfbnVtOwogCWludCBpOwotCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IGd2dC0+ZGV2X3ByaXY7CiAJdTMyIHJpbmdfYmFzZTsKIAl1
MzIgaGVhZCwgdGFpbDsKIAl1MTYgd3JhcF9jb3VudDsKQEAgLTgxMywxNCArODA5LDE0IEBAIHN0
YXRpYyB2b2lkIHVwZGF0ZV9ndWVzdF9jb250ZXh0KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2Fk
ICp3b3JrbG9hZCkKIAogCWhlYWQgPSAod3JhcF9jb3VudCA8PCBSQl9IRUFEX1dSQVBfQ05UX09G
RikgfCB0YWlsOwogCi0JcmluZ19iYXNlID0gZGV2X3ByaXYtPmVuZ2luZVt3b3JrbG9hZC0+cmlu
Z19pZF0tPm1taW9fYmFzZTsKKwlyaW5nX2Jhc2UgPSBycS0+ZW5naW5lLT5tbWlvX2Jhc2U7CiAJ
dmdwdV92cmVnX3QodmdwdSwgUklOR19UQUlMKHJpbmdfYmFzZSkpID0gdGFpbDsKIAl2Z3B1X3Zy
ZWdfdCh2Z3B1LCBSSU5HX0hFQUQocmluZ19iYXNlKSkgPSBoZWFkOwogCiAJY29udGV4dF9wYWdl
X251bSA9IHJxLT5lbmdpbmUtPmNvbnRleHRfc2l6ZTsKIAljb250ZXh0X3BhZ2VfbnVtID0gY29u
dGV4dF9wYWdlX251bSA+PiBQQUdFX1NISUZUOwogCi0JaWYgKElTX0JST0FEV0VMTChndnQtPmRl
dl9wcml2KSAmJiBycS0+ZW5naW5lLT5pZCA9PSBSQ1MwKQorCWlmIChJU19CUk9BRFdFTEwocnEt
Pmk5MTUpICYmIHJxLT5lbmdpbmUtPmlkID09IFJDUzApCiAJCWNvbnRleHRfcGFnZV9udW0gPSAx
OTsKIAogCWkgPSAyOwpAQCAtOTY4LDU0ICs5NjQsNDcgQEAgc3RhdGljIHZvaWQgY29tcGxldGVf
Y3VycmVudF93b3JrbG9hZChzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQsIGludCByaW5nX2lkKQogCW11
dGV4X3VubG9jaygmdmdwdS0+dmdwdV9sb2NrKTsKIH0KIAotc3RydWN0IHdvcmtsb2FkX3RocmVh
ZF9wYXJhbSB7Ci0Jc3RydWN0IGludGVsX2d2dCAqZ3Z0OwotCWludCByaW5nX2lkOwotfTsKLQot
c3RhdGljIGludCB3b3JrbG9hZF90aHJlYWQodm9pZCAqcHJpdikKK3N0YXRpYyBpbnQgd29ya2xv
YWRfdGhyZWFkKHZvaWQgKmFyZykKIHsKLQlzdHJ1Y3Qgd29ya2xvYWRfdGhyZWFkX3BhcmFtICpw
ID0gKHN0cnVjdCB3b3JrbG9hZF90aHJlYWRfcGFyYW0gKilwcml2OwotCXN0cnVjdCBpbnRlbF9n
dnQgKmd2dCA9IHAtPmd2dDsKLQlpbnQgcmluZ19pZCA9IHAtPnJpbmdfaWQ7CisJc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lID0gYXJnOworCWNvbnN0IGJvb2wgbmVlZF9mb3JjZV93YWtl
ID0gSU5URUxfR0VOKGVuZ2luZS0+aTkxNSkgPj0gOTsKKwlzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQg
PSBlbmdpbmUtPmk5MTUtPmd2dDsKIAlzdHJ1Y3QgaW50ZWxfZ3Z0X3dvcmtsb2FkX3NjaGVkdWxl
ciAqc2NoZWR1bGVyID0gJmd2dC0+c2NoZWR1bGVyOwogCXN0cnVjdCBpbnRlbF92Z3B1X3dvcmts
b2FkICp3b3JrbG9hZCA9IE5VTEw7CiAJc3RydWN0IGludGVsX3ZncHUgKnZncHUgPSBOVUxMOwog
CWludCByZXQ7Ci0JYm9vbCBuZWVkX2ZvcmNlX3dha2UgPSAoSU5URUxfR0VOKGd2dC0+ZGV2X3By
aXYpID49IDkpOwogCURFRklORV9XQUlUX0ZVTkMod2FpdCwgd29rZW5fd2FrZV9mdW5jdGlvbik7
Ci0Jc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZndnQtPmRldl9wcml2LT5ydW50aW1l
X3BtOwotCi0Ja2ZyZWUocCk7CiAKLQlndnRfZGJnX2NvcmUoIndvcmtsb2FkIHRocmVhZCBmb3Ig
cmluZyAlZCBzdGFydGVkXG4iLCByaW5nX2lkKTsKKwlndnRfZGJnX2NvcmUoIndvcmtsb2FkIHRo
cmVhZCBmb3IgcmluZyAlcyBzdGFydGVkXG4iLCBlbmdpbmUtPm5hbWUpOwogCiAJd2hpbGUgKCFr
dGhyZWFkX3Nob3VsZF9zdG9wKCkpIHsKLQkJYWRkX3dhaXRfcXVldWUoJnNjaGVkdWxlci0+d2Fp
dHFbcmluZ19pZF0sICZ3YWl0KTsKKwkJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwkJYWRk
X3dhaXRfcXVldWUoJnNjaGVkdWxlci0+d2FpdHFbZW5naW5lLT5pZF0sICZ3YWl0KTsKIAkJZG8g
ewotCQkJd29ya2xvYWQgPSBwaWNrX25leHRfd29ya2xvYWQoZ3Z0LCByaW5nX2lkKTsKKwkJCXdv
cmtsb2FkID0gcGlja19uZXh0X3dvcmtsb2FkKGd2dCwgZW5naW5lKTsKIAkJCWlmICh3b3JrbG9h
ZCkKIAkJCQlicmVhazsKIAkJCXdhaXRfd29rZW4oJndhaXQsIFRBU0tfSU5URVJSVVBUSUJMRSwK
IAkJCQkgICBNQVhfU0NIRURVTEVfVElNRU9VVCk7CiAJCX0gd2hpbGUgKCFrdGhyZWFkX3Nob3Vs
ZF9zdG9wKCkpOwotCQlyZW1vdmVfd2FpdF9xdWV1ZSgmc2NoZWR1bGVyLT53YWl0cVtyaW5nX2lk
XSwgJndhaXQpOworCQlyZW1vdmVfd2FpdF9xdWV1ZSgmc2NoZWR1bGVyLT53YWl0cVtlbmdpbmUt
PmlkXSwgJndhaXQpOwogCiAJCWlmICghd29ya2xvYWQpCiAJCQlicmVhazsKIAotCQlndnRfZGJn
X3NjaGVkKCJyaW5nIGlkICVkIG5leHQgd29ya2xvYWQgJXAgdmdwdSAlZFxuIiwKLQkJCQl3b3Jr
bG9hZC0+cmluZ19pZCwgd29ya2xvYWQsCi0JCQkJd29ya2xvYWQtPnZncHUtPmlkKTsKKwkJZ3Z0
X2RiZ19zY2hlZCgicmluZyAlcyBuZXh0IHdvcmtsb2FkICVwIHZncHUgJWRcbiIsCisJCQkgICAg
ICBlbmdpbmUtPm5hbWUsIHdvcmtsb2FkLAorCQkJICAgICAgd29ya2xvYWQtPnZncHUtPmlkKTsK
IAotCQlpbnRlbF9ydW50aW1lX3BtX2dldChycG0pOworCQl3YWtlcmVmID0gaW50ZWxfcnVudGlt
ZV9wbV9nZXQoZW5naW5lLT51bmNvcmUtPnJwbSk7CiAKLQkJZ3Z0X2RiZ19zY2hlZCgicmluZyBp
ZCAlZCB3aWxsIGRpc3BhdGNoIHdvcmtsb2FkICVwXG4iLAotCQkJCXdvcmtsb2FkLT5yaW5nX2lk
LCB3b3JrbG9hZCk7CisJCWd2dF9kYmdfc2NoZWQoInJpbmcgJXMgd2lsbCBkaXNwYXRjaCB3b3Jr
bG9hZCAlcFxuIiwKKwkJCSAgICAgIGVuZ2luZS0+bmFtZSwgd29ya2xvYWQpOwogCiAJCWlmIChu
ZWVkX2ZvcmNlX3dha2UpCi0JCQlpbnRlbF91bmNvcmVfZm9yY2V3YWtlX2dldCgmZ3Z0LT5kZXZf
cHJpdi0+dW5jb3JlLAotCQkJCQlGT1JDRVdBS0VfQUxMKTsKKwkJCWludGVsX3VuY29yZV9mb3Jj
ZXdha2VfZ2V0KGVuZ2luZS0+dW5jb3JlLAorCQkJCQkJICAgRk9SQ0VXQUtFX0FMTCk7CiAJCS8q
CiAJCSAqIFVwZGF0ZSB0aGUgdlJlZyBvZiB0aGUgdkdQVSB3aGljaCBzdWJtaXR0ZWQgdGhpcwog
CQkgKiB3b3JrbG9hZC4gVGhlIHZHUFUgbWF5IHVzZSB0aGVzZSByZWdpc3RlcnMgZm9yIGNoZWNr
aW5nCkBAIC0xMDMyLDIxICsxMDIxLDIxIEBAIHN0YXRpYyBpbnQgd29ya2xvYWRfdGhyZWFkKHZv
aWQgKnByaXYpCiAJCQlnb3RvIGNvbXBsZXRlOwogCQl9CiAKLQkJZ3Z0X2RiZ19zY2hlZCgicmlu
ZyBpZCAlZCB3YWl0IHdvcmtsb2FkICVwXG4iLAotCQkJCXdvcmtsb2FkLT5yaW5nX2lkLCB3b3Jr
bG9hZCk7CisJCWd2dF9kYmdfc2NoZWQoInJpbmcgJXMgd2FpdCB3b3JrbG9hZCAlcFxuIiwKKwkJ
CSAgICAgIGVuZ2luZS0+bmFtZSwgd29ya2xvYWQpOwogCQlpOTE1X3JlcXVlc3Rfd2FpdCh3b3Jr
bG9hZC0+cmVxLCAwLCBNQVhfU0NIRURVTEVfVElNRU9VVCk7CiAKIGNvbXBsZXRlOgogCQlndnRf
ZGJnX3NjaGVkKCJ3aWxsIGNvbXBsZXRlIHdvcmtsb2FkICVwLCBzdGF0dXM6ICVkXG4iLAotCQkJ
CXdvcmtsb2FkLCB3b3JrbG9hZC0+c3RhdHVzKTsKKwkJCSAgICAgIHdvcmtsb2FkLCB3b3JrbG9h
ZC0+c3RhdHVzKTsKIAotCQljb21wbGV0ZV9jdXJyZW50X3dvcmtsb2FkKGd2dCwgcmluZ19pZCk7
CisJCWNvbXBsZXRlX2N1cnJlbnRfd29ya2xvYWQoZ3Z0LCBlbmdpbmUtPmlkKTsKIAogCQlpZiAo
bmVlZF9mb3JjZV93YWtlKQotCQkJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9wdXQoJmd2dC0+ZGV2
X3ByaXYtPnVuY29yZSwKLQkJCQkJRk9SQ0VXQUtFX0FMTCk7CisJCQlpbnRlbF91bmNvcmVfZm9y
Y2V3YWtlX3B1dChlbmdpbmUtPnVuY29yZSwKKwkJCQkJCSAgIEZPUkNFV0FLRV9BTEwpOwogCi0J
CWludGVsX3J1bnRpbWVfcG1fcHV0X3VuY2hlY2tlZChycG0pOworCQlpbnRlbF9ydW50aW1lX3Bt
X3B1dChlbmdpbmUtPnVuY29yZS0+cnBtLCB3YWtlcmVmKTsKIAkJaWYgKHJldCAmJiAodmdwdV9p
c192bV91bmhlYWx0aHkocmV0KSkpCiAJCQllbnRlcl9mYWlsc2FmZV9tb2RlKHZncHUsIEdWVF9G
QUlMU0FGRV9HVUVTVF9FUlIpOwogCX0KQEAgLTEwODYsNyArMTA3NSw2IEBAIHZvaWQgaW50ZWxf
Z3Z0X2NsZWFuX3dvcmtsb2FkX3NjaGVkdWxlcihzdHJ1Y3QgaW50ZWxfZ3Z0ICpndnQpCiBpbnQg
aW50ZWxfZ3Z0X2luaXRfd29ya2xvYWRfc2NoZWR1bGVyKHN0cnVjdCBpbnRlbF9ndnQgKmd2dCkK
IHsKIAlzdHJ1Y3QgaW50ZWxfZ3Z0X3dvcmtsb2FkX3NjaGVkdWxlciAqc2NoZWR1bGVyID0gJmd2
dC0+c2NoZWR1bGVyOwotCXN0cnVjdCB3b3JrbG9hZF90aHJlYWRfcGFyYW0gKnBhcmFtID0gTlVM
TDsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJZW51bSBpbnRlbF9lbmdpbmVf
aWQgaTsKIAlpbnQgcmV0OwpAQCAtMTA5OCwxNyArMTA4Niw4IEBAIGludCBpbnRlbF9ndnRfaW5p
dF93b3JrbG9hZF9zY2hlZHVsZXIoc3RydWN0IGludGVsX2d2dCAqZ3Z0KQogCWZvcl9lYWNoX2Vu
Z2luZShlbmdpbmUsIGd2dC0+ZGV2X3ByaXYsIGkpIHsKIAkJaW5pdF93YWl0cXVldWVfaGVhZCgm
c2NoZWR1bGVyLT53YWl0cVtpXSk7CiAKLQkJcGFyYW0gPSBremFsbG9jKHNpemVvZigqcGFyYW0p
LCBHRlBfS0VSTkVMKTsKLQkJaWYgKCFwYXJhbSkgewotCQkJcmV0ID0gLUVOT01FTTsKLQkJCWdv
dG8gZXJyOwotCQl9Ci0KLQkJcGFyYW0tPmd2dCA9IGd2dDsKLQkJcGFyYW0tPnJpbmdfaWQgPSBp
OwotCi0JCXNjaGVkdWxlci0+dGhyZWFkW2ldID0ga3RocmVhZF9ydW4od29ya2xvYWRfdGhyZWFk
LCBwYXJhbSwKLQkJCSJndnQgd29ya2xvYWQgJWQiLCBpKTsKKwkJc2NoZWR1bGVyLT50aHJlYWRb
aV0gPSBrdGhyZWFkX3J1bih3b3JrbG9hZF90aHJlYWQsIGVuZ2luZSwKKwkJCQkJCSAgICJndnQ6
JXMiLCBlbmdpbmUtPm5hbWUpOwogCQlpZiAoSVNfRVJSKHNjaGVkdWxlci0+dGhyZWFkW2ldKSkg
ewogCQkJZ3Z0X2VycigiZmFpbCB0byBjcmVhdGUgd29ya2xvYWQgdGhyZWFkXG4iKTsKIAkJCXJl
dCA9IFBUUl9FUlIoc2NoZWR1bGVyLT50aHJlYWRbaV0pOwpAQCAtMTEyMCwxMSArMTA5OSwxMSBA
QCBpbnQgaW50ZWxfZ3Z0X2luaXRfd29ya2xvYWRfc2NoZWR1bGVyKHN0cnVjdCBpbnRlbF9ndnQg
Kmd2dCkKIAkJYXRvbWljX25vdGlmaWVyX2NoYWluX3JlZ2lzdGVyKCZlbmdpbmUtPmNvbnRleHRf
c3RhdHVzX25vdGlmaWVyLAogCQkJCQkmZ3Z0LT5zaGFkb3dfY3R4X25vdGlmaWVyX2Jsb2NrW2ld
KTsKIAl9CisKIAlyZXR1cm4gMDsKKwogZXJyOgogCWludGVsX2d2dF9jbGVhbl93b3JrbG9hZF9z
Y2hlZHVsZXIoZ3Z0KTsKLQlrZnJlZShwYXJhbSk7Ci0JcGFyYW0gPSBOVUxMOwogCXJldHVybiBy
ZXQ7CiB9CiAKQEAgLTE0NDUsNyArMTQyNCw3IEBAIHN0YXRpYyBpbnQgcHJlcGFyZV9tbShzdHJ1
Y3QgaW50ZWxfdmdwdV93b3JrbG9hZCAqd29ya2xvYWQpCiAvKioKICAqIGludGVsX3ZncHVfY3Jl
YXRlX3dvcmtsb2FkIC0gY3JlYXRlIGEgdkdQVSB3b3JrbG9hZAogICogQHZncHU6IGEgdkdQVQot
ICogQHJpbmdfaWQ6IHJpbmcgaW5kZXgKKyAqIEBlbmdpbmU6IHRoZSBlbmdpbmUKICAqIEBkZXNj
OiBhIGd1ZXN0IGNvbnRleHQgZGVzY3JpcHRvcgogICoKICAqIFRoaXMgZnVuY3Rpb24gaXMgY2Fs
bGVkIHdoZW4gY3JlYXRpbmcgYSB2R1BVIHdvcmtsb2FkLgpAQCAtMTQ1NiwxNCArMTQzNSwxNCBA
QCBzdGF0aWMgaW50IHByZXBhcmVfbW0oc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmts
b2FkKQogICoKICAqLwogc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKgotaW50ZWxfdmdwdV9j
cmVhdGVfd29ya2xvYWQoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkLAoraW50
ZWxfdmdwdV9jcmVhdGVfd29ya2xvYWQoc3RydWN0IGludGVsX3ZncHUgKnZncHUsCisJCQkgICBj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkgICBzdHJ1Y3QgZXhlY2xp
c3RfY3R4X2Rlc2NyaXB0b3JfZm9ybWF0ICpkZXNjKQogewogCXN0cnVjdCBpbnRlbF92Z3B1X3N1
Ym1pc3Npb24gKnMgPSAmdmdwdS0+c3VibWlzc2lvbjsKLQlzdHJ1Y3QgbGlzdF9oZWFkICpxID0g
d29ya2xvYWRfcV9oZWFkKHZncHUsIHJpbmdfaWQpOworCXN0cnVjdCBsaXN0X2hlYWQgKnEgPSB3
b3JrbG9hZF9xX2hlYWQodmdwdSwgZW5naW5lKTsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV93b3JrbG9h
ZCAqbGFzdF93b3JrbG9hZCA9IE5VTEw7CiAJc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndv
cmtsb2FkID0gTlVMTDsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB2Z3B1
LT5ndnQtPmRldl9wcml2OwogCXU2NCByaW5nX2NvbnRleHRfZ3BhOwogCXUzMiBoZWFkLCB0YWls
LCBzdGFydCwgY3RsLCBjdHhfY3RsLCBwZXJfY3R4LCBpbmRpcmVjdF9jdHg7CiAJdTMyIGd1ZXN0
X2hlYWQ7CkBAIC0xNDkwLDEwICsxNDY5LDEwIEBAIGludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2Fk
KHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBpbnQgcmluZ19pZCwKIAlsaXN0X2Zvcl9lYWNoX2Vu
dHJ5X3JldmVyc2UobGFzdF93b3JrbG9hZCwgcSwgbGlzdCkgewogCiAJCWlmIChzYW1lX2NvbnRl
eHQoJmxhc3Rfd29ya2xvYWQtPmN0eF9kZXNjLCBkZXNjKSkgewotCQkJZ3Z0X2RiZ19lbCgicmlu
ZyBpZCAlZCBjdXIgd29ya2xvYWQgPT0gbGFzdFxuIiwKLQkJCQkJcmluZ19pZCk7CisJCQlndnRf
ZGJnX2VsKCJyaW5nICVzIGN1ciB3b3JrbG9hZCA9PSBsYXN0XG4iLAorCQkJCSAgIGVuZ2luZS0+
bmFtZSk7CiAJCQlndnRfZGJnX2VsKCJjdHggaGVhZCAleCByZWFsIGhlYWQgJWx4XG4iLCBoZWFk
LAotCQkJCQlsYXN0X3dvcmtsb2FkLT5yYl90YWlsKTsKKwkJCQkgICBsYXN0X3dvcmtsb2FkLT5y
Yl90YWlsKTsKIAkJCS8qCiAJCQkgKiBjYW5ub3QgdXNlIGd1ZXN0IGNvbnRleHQgaGVhZCBwb2lu
dGVyIGhlcmUsCiAJCQkgKiBhcyBpdCBtaWdodCBub3QgYmUgdXBkYXRlZCBhdCB0aGlzIHRpbWUK
QEAgLTE1MDMsNyArMTQ4Miw3IEBAIGludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2FkKHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1LCBpbnQgcmluZ19pZCwKIAkJfQogCX0KIAotCWd2dF9kYmdfZWwoInJp
bmcgaWQgJWQgYmVnaW4gYSBuZXcgd29ya2xvYWRcbiIsIHJpbmdfaWQpOworCWd2dF9kYmdfZWwo
InJpbmcgJXMgYmVnaW4gYSBuZXcgd29ya2xvYWRcbiIsIGVuZ2luZS0+bmFtZSk7CiAKIAkvKiBy
ZWNvcmQgc29tZSByaW5nIGJ1ZmZlciByZWdpc3RlciB2YWx1ZXMgZm9yIHNjYW4gYW5kIHNoYWRv
dyAqLwogCWludGVsX2d2dF9oeXBlcnZpc29yX3JlYWRfZ3BhKHZncHUsIHJpbmdfY29udGV4dF9n
cGEgKwpAQCAtMTUyMyw3ICsxNTAyLDcgQEAgaW50ZWxfdmdwdV9jcmVhdGVfd29ya2xvYWQoc3Ry
dWN0IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkLAogCWlmIChJU19FUlIod29ya2xvYWQp
KQogCQlyZXR1cm4gd29ya2xvYWQ7CiAKLQl3b3JrbG9hZC0+cmluZ19pZCA9IHJpbmdfaWQ7CisJ
d29ya2xvYWQtPmVuZ2luZSA9IGVuZ2luZTsKIAl3b3JrbG9hZC0+Y3R4X2Rlc2MgPSAqZGVzYzsK
IAl3b3JrbG9hZC0+cmluZ19jb250ZXh0X2dwYSA9IHJpbmdfY29udGV4dF9ncGE7CiAJd29ya2xv
YWQtPnJiX2hlYWQgPSBoZWFkOwpAQCAtMTUzMiw3ICsxNTExLDcgQEAgaW50ZWxfdmdwdV9jcmVh
dGVfd29ya2xvYWQoc3RydWN0IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkLAogCXdvcmts
b2FkLT5yYl9zdGFydCA9IHN0YXJ0OwogCXdvcmtsb2FkLT5yYl9jdGwgPSBjdGw7CiAKLQlpZiAo
cmluZ19pZCA9PSBSQ1MwKSB7CisJaWYgKGVuZ2luZS0+aWQgPT0gUkNTMCkgewogCQlpbnRlbF9n
dnRfaHlwZXJ2aXNvcl9yZWFkX2dwYSh2Z3B1LCByaW5nX2NvbnRleHRfZ3BhICsKIAkJCVJJTkdf
Q1RYX09GRihiYl9wZXJfY3R4X3B0ci52YWwpLCAmcGVyX2N0eCwgNCk7CiAJCWludGVsX2d2dF9o
eXBlcnZpc29yX3JlYWRfZ3BhKHZncHUsIHJpbmdfY29udGV4dF9ncGEgKwpAQCAtMTU3MCw4ICsx
NTQ5LDggQEAgaW50ZWxfdmdwdV9jcmVhdGVfd29ya2xvYWQoc3RydWN0IGludGVsX3ZncHUgKnZn
cHUsIGludCByaW5nX2lkLAogCQl9CiAJfQogCi0JZ3Z0X2RiZ19lbCgid29ya2xvYWQgJXAgcmlu
ZyBpZCAlZCBoZWFkICV4IHRhaWwgJXggc3RhcnQgJXggY3RsICV4XG4iLAotCQkJd29ya2xvYWQs
IHJpbmdfaWQsIGhlYWQsIHRhaWwsIHN0YXJ0LCBjdGwpOworCWd2dF9kYmdfZWwoIndvcmtsb2Fk
ICVwIHJpbmcgJXMgaGVhZCAleCB0YWlsICV4IHN0YXJ0ICV4IGN0bCAleFxuIiwKKwkJICAgd29y
a2xvYWQsIGVuZ2luZS0+bmFtZSwgaGVhZCwgdGFpbCwgc3RhcnQsIGN0bCk7CiAKIAlyZXQgPSBw
cmVwYXJlX21tKHdvcmtsb2FkKTsKIAlpZiAocmV0KSB7CkBAIC0xNTgyLDEyICsxNTYxLDEzIEBA
IGludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1LCBpbnQg
cmluZ19pZCwKIAkvKiBPbmx5IHNjYW4gYW5kIHNoYWRvdyB0aGUgZmlyc3Qgd29ya2xvYWQgaW4g
dGhlIHF1ZXVlCiAJICogYXMgdGhlcmUgaXMgb25seSBvbmUgcHJlLWFsbG9jYXRlZCBidWYtb2Jq
IGZvciBzaGFkb3cuCiAJICovCi0JaWYgKGxpc3RfZW1wdHkod29ya2xvYWRfcV9oZWFkKHZncHUs
IHJpbmdfaWQpKSkgewotCQlpbnRlbF9ydW50aW1lX3BtX2dldCgmZGV2X3ByaXYtPnJ1bnRpbWVf
cG0pOworCWlmIChsaXN0X2VtcHR5KHdvcmtsb2FkX3FfaGVhZCh2Z3B1LCBlbmdpbmUpKSkgewor
CQlpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZjsKKwogCQltdXRleF9sb2NrKCZ2Z3B1LT52Z3B1X2xv
Y2spOwotCQlyZXQgPSBpbnRlbF9ndnRfc2Nhbl9hbmRfc2hhZG93X3dvcmtsb2FkKHdvcmtsb2Fk
KTsKKwkJd2l0aF9pbnRlbF9ydW50aW1lX3BtKGVuZ2luZS0+Z3QtPnVuY29yZS0+cnBtLCB3YWtl
cmVmKQorCQkJcmV0ID0gaW50ZWxfZ3Z0X3NjYW5fYW5kX3NoYWRvd193b3JrbG9hZCh3b3JrbG9h
ZCk7CiAJCW11dGV4X3VubG9jaygmdmdwdS0+dmdwdV9sb2NrKTsKLQkJaW50ZWxfcnVudGltZV9w
bV9wdXRfdW5jaGVja2VkKCZkZXZfcHJpdi0+cnVudGltZV9wbSk7CiAJfQogCiAJaWYgKHJldCkg
ewpAQCAtMTYwNyw3ICsxNTg3LDcgQEAgaW50ZWxfdmdwdV9jcmVhdGVfd29ya2xvYWQoc3RydWN0
IGludGVsX3ZncHUgKnZncHUsIGludCByaW5nX2lkLAogdm9pZCBpbnRlbF92Z3B1X3F1ZXVlX3dv
cmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIHsKIAlsaXN0X2Fk
ZF90YWlsKCZ3b3JrbG9hZC0+bGlzdCwKLQkJd29ya2xvYWRfcV9oZWFkKHdvcmtsb2FkLT52Z3B1
LCB3b3JrbG9hZC0+cmluZ19pZCkpOworCQkgICAgICB3b3JrbG9hZF9xX2hlYWQod29ya2xvYWQt
PnZncHUsIHdvcmtsb2FkLT5lbmdpbmUpKTsKIAlpbnRlbF9ndnRfa2lja19zY2hlZHVsZSh3b3Jr
bG9hZC0+dmdwdS0+Z3Z0KTsKLQl3YWtlX3VwKCZ3b3JrbG9hZC0+dmdwdS0+Z3Z0LT5zY2hlZHVs
ZXIud2FpdHFbd29ya2xvYWQtPnJpbmdfaWRdKTsKKwl3YWtlX3VwKCZ3b3JrbG9hZC0+dmdwdS0+
Z3Z0LT5zY2hlZHVsZXIud2FpdHFbd29ya2xvYWQtPmVuZ2luZS0+aWRdKTsKIH0KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuaCBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC9zY2hlZHVsZXIuaAppbmRleCBjNTBkMTRhOWNlODUuLmJmN2ZjMGNhNGNiMSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3NjaGVkdWxlci5oCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuaApAQCAtNzksNyArNzksNyBAQCBzdHJ1
Y3QgaW50ZWxfc2hhZG93X3dhX2N0eCB7CiAKIHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkIHsK
IAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdTsKLQlpbnQgcmluZ19pZDsKKwljb25zdCBzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxOwogCS8q
IGlmIHRoaXMgd29ya2xvYWQgaGFzIGJlZW4gZGlzcGF0Y2hlZCB0byBpOTE1PyAqLwogCWJvb2wg
ZGlzcGF0Y2hlZDsKQEAgLTEyOSw4ICsxMjksOCBAQCBzdHJ1Y3QgaW50ZWxfdmdwdV9zaGFkb3df
YmIgewogCWJvb2wgcHBndHQ7CiB9OwogCi0jZGVmaW5lIHdvcmtsb2FkX3FfaGVhZCh2Z3B1LCBy
aW5nX2lkKSBcCi0JKCYodmdwdS0+c3VibWlzc2lvbi53b3JrbG9hZF9xX2hlYWRbcmluZ19pZF0p
KQorI2RlZmluZSB3b3JrbG9hZF9xX2hlYWQodmdwdSwgZSkgXAorCSgmKHZncHUpLT5zdWJtaXNz
aW9uLndvcmtsb2FkX3FfaGVhZFsoZSktPmlkXSkKIAogdm9pZCBpbnRlbF92Z3B1X3F1ZXVlX3dv
cmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCk7CiAKQEAgLTE1NSw3
ICsxNTUsOCBAQCBleHRlcm4gY29uc3Qgc3RydWN0IGludGVsX3ZncHVfc3VibWlzc2lvbl9vcHMK
IGludGVsX3ZncHVfZXhlY2xpc3Rfc3VibWlzc2lvbl9vcHM7CiAKIHN0cnVjdCBpbnRlbF92Z3B1
X3dvcmtsb2FkICoKLWludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1
ICp2Z3B1LCBpbnQgcmluZ19pZCwKK2ludGVsX3ZncHVfY3JlYXRlX3dvcmtsb2FkKHN0cnVjdCBp
bnRlbF92Z3B1ICp2Z3B1LAorCQkJICAgY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lLAogCQkJICAgc3RydWN0IGV4ZWNsaXN0X2N0eF9kZXNjcmlwdG9yX2Zvcm1hdCAqZGVzYyk7
CiAKIHZvaWQgaW50ZWxfdmdwdV9kZXN0cm95X3dvcmtsb2FkKHN0cnVjdCBpbnRlbF92Z3B1X3dv
cmtsb2FkICp3b3JrbG9hZCk7Ci0tIAoyLjIzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxp
c3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFu
L2xpc3RpbmZvL2ludGVsLWdmeA==

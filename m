Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4C066102FC6
	for <lists+intel-gfx@lfdr.de>; Wed, 20 Nov 2019 00:13:21 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id F32CE6E431;
	Tue, 19 Nov 2019 23:13:18 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id DF7086E91F
 for <intel-gfx@lists.freedesktop.org>; Tue, 19 Nov 2019 23:13:13 +0000 (UTC)
X-Amp-Result: UNKNOWN
X-Amp-Original-Verdict: FILE UNKNOWN
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by orsmga105.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 19 Nov 2019 15:13:12 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,219,1571727600"; d="scan'208";a="289761870"
Received: from mdroper-desk1.fm.intel.com (HELO
 mdroper-desk1.amr.corp.intel.com) ([10.1.27.135])
 by orsmga001.jf.intel.com with ESMTP; 19 Nov 2019 15:13:12 -0800
Date: Tue, 19 Nov 2019 15:13:11 -0800
From: Matt Roper <matthew.d.roper@intel.com>
To: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
Message-ID: <20191119231311.GB6381@mdroper-desk1.amr.corp.intel.com>
References: <20191115145401.20709-1-stanislav.lisovskiy@intel.com>
 <20191115145401.20709-2-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20191115145401.20709-2-stanislav.lisovskiy@intel.com>
User-Agent: Mutt/1.12.1 (2019-06-15)
Subject: Re: [Intel-gfx] [PATCH v12 1/2] drm/i915: Refactor
 intel_can_enable_sagv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: intel-gfx@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T24gRnJpLCBOb3YgMTUsIDIwMTkgYXQgMDQ6NTQ6MDBQTSArMDIwMCwgU3RhbmlzbGF2IExpc292
c2tpeSB3cm90ZToKPiBDdXJyZW50bHkgaW50ZWxfY2FuX2VuYWJsZV9zYWd2IGZ1bmN0aW9uIGNv
bnRhaW5zCj4gYSBtaXggb2Ygd29ya2Fyb3VuZHMgZm9yIGRpZmZlcmVudCBwbGF0Zm9ybXMKPiBz
b21lIG9mIHRoZW0gYXJlIG5vdCB2YWxpZCBmb3IgZ2VucyA+PSAxMSBhbHJlYWR5LAo+IHNvIGxl
dHMgc3BsaXQgaXQgaW50byBzZXBhcmF0ZSBmdW5jdGlvbnMuCj4gCj4gdjI6Cj4gICAgIC0gUmV3
b3JrIHdhdGVybWFyayBjYWxjdWxhdGlvbiBhbGdvcml0aG0gdG8KPiAgICAgICBhdHRlbXB0IHRv
IGNhbGN1bGF0ZSBMZXZlbCAwIHdhdGVybWFyawo+ICAgICAgIHdpdGggYWRkZWQgc2FndiBibG9j
ayB0aW1lIGxhdGVuY3kgYW5kCj4gICAgICAgY2hlY2sgaWYgaXQgZml0cyBpbiBEQnVmIGluIG9y
ZGVyIHRvCj4gICAgICAgZGV0ZXJtaW5lIGlmIFNBR1YgY2FuIGJlIGVuYWJsZWQgYWxyZWFkeQo+
ICAgICAgIGF0IHRoaXMgc3RhZ2UsIGp1c3QgYXMgQlNwZWMgNDkzMjUgc3RhdGVzLgo+ICAgICAg
IGlmIHRoYXQgZmFpbHMgcm9sbGJhY2sgdG8gdXN1YWwgTGV2ZWwgMAo+ICAgICAgIGxhdGVuY3kg
YW5kIGRpc2FibGUgU0FHVi4KPiAgICAgLSBSZW1vdmUgdW5uZWVkZWQgdGFicyhKYW1lcyBBdXNt
dXMpCj4gCj4gdjM6IFJlYmFzZWQgdGhlIHBhdGNoCj4gCj4gdjQ6IC0gQWRkZWQgYmFjayBpbnRl
cmxhY2VkIGNoZWNrIGZvciBHZW4xMiBhbmQKPiAgICAgICBhZGRlZCBzZXBhcmF0ZSBmdW5jdGlv
biBmb3IgVEdMIFNBR1YgY2hlY2sKPiAgICAgICAodGhhbmtzIHRvIEphbWVzIEF1c211cyBmb3Ig
c3BvdHRpbmcpCj4gICAgIC0gUmVtb3ZlZCB1bm5lZWRlZCBnZW4gY2hlY2sKPiAgICAgLSBFeHRy
YWN0ZWQgR2VuMTIgU0FHViBkZWNpc2lvbiBtYWtpbmcgY29kZQo+ICAgICAgIHRvIGEgc2VwYXJh
dGUgZnVuY3Rpb24gZnJvbSBza2xfY29tcHV0ZV93bQo+IAo+IHY1OiAtIEFkZGVkIFNBR1YgZ2xv
YmFsIHN0YXRlIHRvIGRldl9wcml2LCBiZWNhdXNlCj4gICAgICAgd2UgbmVlZCB0byB0cmFjayBh
bGwgcGlwZXMsIG5vdCBvbmx5IHRob3NlCj4gICAgICAgaW4gYXRvbWljIHN0YXRlLiBFYWNoIHBp
cGUgaGFzIG5vdyBjb3JyZXNwb25kZW50Cj4gICAgICAgYml0IG1hc2sgcmVmbGVjdGluZywgd2hl
dGhlciBpdCBjYW4gdG9sZXJhdGUKPiAgICAgICBTQUdWIG9yIG5vdCh0aGFua3MgdG8gVmlsbGUg
U3lyamFsYSBmb3Igc3VnZ2VzdGlvbnMpLgo+ICAgICAtIE5vdyB1c2luZyBhY3RpdmUgZmxhZyBp
bnN0ZWFkIG9mIGVuYWJsZSBpbiBjcmMKPiAgICAgICB1c2FnZSBjaGVjay4KPiAKPiB2NjogLSBG
aXhlZCByZWJhc2UgY29uZmxpY3RzCj4gCj4gdjc6IC0ga21zX2N1cnNvcl9sZWdhY3kgc2VlbXMg
dG8gZ2V0IGJyb2tlbiBiZWNhdXNlIG9mIG11bHRpcGxlIG1lbWNweQo+ICAgICAgIGNhbGxzIHdo
ZW4gY29weWluZyBsZXZlbCAwIHdhdGVyIG1hcmtzIGZvciBlbmFibGVkIFNBR1YsIHRvCj4gICAg
ICAgZml4IHRoaXMgbm93IHNpbXBseSB1c2luZyB0aGF0IGZpZWxkIHJpZ2h0IGF3YXksIHdpdGhv
dXQgY29weWluZywKPiAgICAgICBmb3IgdGhhdCBpbnRyb2R1Y2VkIGEgbmV3IHdtX2xldmVsIGFj
Y2Vzc29yIHdoaWNoIGRlY2lkZXMgd2hpY2gKPiAgICAgICB3bV9sZXZlbCB0byByZXR1cm4gYmFz
ZWQgb24gU0FHViBzdGF0ZS4KPiAKPiB2ODogLSBQcm90ZWN0IGNydGNfc2Fndl9tYXNrIHNhbWUg
d2F5IGFzIHdlIGRvIGZvciBvdGhlciBnbG9iYWwgc3RhdGUKPiAgICAgICBjaGFuZ2VzOiBpLmUg
Y2hlY2sgaWYgY2hhbmdlcyBhcmUgbmVlZGVkLCB0aGVuIGdyYWIgYWxsIGNydGMgbG9ja3MKPiAg
ICAgICB0byBzZXJpYWxpemUgdGhlIGNoYW5nZXMuCj4gCj4gU2lnbmVkLW9mZi1ieTogU3Rhbmlz
bGF2IExpc292c2tpeSA8c3RhbmlzbGF2Lmxpc292c2tpeUBpbnRlbC5jb20+Cj4gQ2M6IFZpbGxl
IFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBpbnRlbC5jb20+Cj4gQ2M6IEphbWVzIEF1c211cyA8
amFtZXMuYXVzbXVzQGludGVsLmNvbT4KPiAtLS0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmMgIHwgIDEyICstCj4gIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAxNSArCj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmggICAgICAgICAgICAgICB8ICAgNiArCj4gIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3BtLmMgICAgICAgICAgICAgICB8IDQxOCArKysrKysrKysrKysrKysrLS0KPiAgZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaCAgICAgICAgICAgICAgIHwgICAxICsKPiAgNSBmaWxl
cyBjaGFuZ2VkLCA0MDkgaW5zZXJ0aW9ucygrKSwgNDMgZGVsZXRpb25zKC0pCj4gCj4gZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKPiBpbmRleCBhZGY1MGM0
YjM4YWQuLjdmMzFlMzNkMGIxNiAxMDA2NDQKPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYwo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5jCj4gQEAgLTEzNDAxLDcgKzEzNDAxLDEwIEBAIHN0YXRpYyB2b2lk
IHZlcmlmeV93bV9zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKPiAgCQkvKiBXYXRlcm1h
cmtzICovCj4gIAkJZm9yIChsZXZlbCA9IDA7IGxldmVsIDw9IG1heF9sZXZlbDsgbGV2ZWwrKykg
ewo+ICAJCQlpZiAoc2tsX3dtX2xldmVsX2VxdWFscygmaHdfcGxhbmVfd20tPndtW2xldmVsXSwK
PiAtCQkJCQkJJnN3X3BsYW5lX3dtLT53bVtsZXZlbF0pKQo+ICsJCQkJCQkmc3dfcGxhbmVfd20t
PndtW2xldmVsXSkgfHwKPiArCQkJICAgKHNrbF93bV9sZXZlbF9lcXVhbHMoJmh3X3BsYW5lX3dt
LT53bVtsZXZlbF0sCgpJZiB3ZSBjYWNoZSB0aGUgcmVzdWx0IG9mICdjYW4gZW5hYmxlIHNhZ3Yn
IGludG8gdGhlIHN0YXRlIHN0cnVjdHVyZSAoYXMKSSBzdWdnZXN0IGZhcnRoZXIgZG93biB0aGUg
cGF0Y2gpIHRoZW4gd2UgY2FuIGp1c3QgY29tcGFyZSB3aXRoIHRoZQpyaWdodCB2YWx1ZSBoZXJl
IHJhdGhlciB0aGFuIHRyeWluZyBib3RoLgoKPiArCQkJCQkJJnN3X3BsYW5lX3dtLT5zYWd2X3dt
MCkgJiYKPiArCQkJICAgKGxldmVsID09IDApKSkKPiAgCQkJCWNvbnRpbnVlOwo+ICAKPiAgCQkJ
RFJNX0VSUk9SKCJtaXNtYXRjaCBpbiBXTSBwaXBlICVjIHBsYW5lICVkIGxldmVsICVkIChleHBl
Y3RlZCBlPSVkIGI9JXUgbD0ldSwgZ290IGU9JWQgYj0ldSBsPSV1KVxuIiwKPiBAQCAtMTM0NTMs
NyArMTM0NTYsMTAgQEAgc3RhdGljIHZvaWQgdmVyaWZ5X3dtX3N0YXRlKHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjLAo+ICAJCS8qIFdhdGVybWFya3MgKi8KPiAgCQlmb3IgKGxldmVsID0gMDsgbGV2
ZWwgPD0gbWF4X2xldmVsOyBsZXZlbCsrKSB7Cj4gIAkJCWlmIChza2xfd21fbGV2ZWxfZXF1YWxz
KCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAo+IC0JCQkJCQkmc3dfcGxhbmVfd20tPndtW2xldmVs
XSkpCj4gKwkJCQkJCSZzd19wbGFuZV93bS0+d21bbGV2ZWxdKSB8fAo+ICsJCQkgICAoc2tsX3dt
X2xldmVsX2VxdWFscygmaHdfcGxhbmVfd20tPndtW2xldmVsXSwKPiArCQkJCQkJJnN3X3BsYW5l
X3dtLT5zYWd2X3dtMCkgJiYKPiArCQkJICAgKGxldmVsID09IDApKSkKPiAgCQkJCWNvbnRpbnVl
Owo+ICAKPiAgCQkJRFJNX0VSUk9SKCJtaXNtYXRjaCBpbiBXTSBwaXBlICVjIGN1cnNvciBsZXZl
bCAlZCAoZXhwZWN0ZWQgZT0lZCBiPSV1IGw9JXUsIGdvdCBlPSVkIGI9JXUgbD0ldSlcbiIsCj4g
QEAgLTE0ODYzLDYgKzE0ODY5LDggQEAgc3RhdGljIHZvaWQgaW50ZWxfYXRvbWljX2NvbW1pdF90
YWlsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQo+ICAJCQkJCQkJICAgICAgbmV3
X2NydGNfc3RhdGUpOwo+ICAJfQo+ICAKPiArCWRldl9wcml2LT5jcnRjX3NhZ3ZfbWFzayA9IHN0
YXRlLT5jcnRjX3NhZ3ZfbWFzazsKPiArCj4gIAlmb3JfZWFjaF9vbGRuZXdfaW50ZWxfY3J0Y19p
bl9zdGF0ZShzdGF0ZSwgY3J0Yywgb2xkX2NydGNfc3RhdGUsIG5ld19jcnRjX3N0YXRlLCBpKSB7
Cj4gIAkJaW50ZWxfcG9zdF9wbGFuZV91cGRhdGUob2xkX2NydGNfc3RhdGUpOwo+ICAKPiBkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVz
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAo+
IGluZGV4IDgzZWEwNDE0OWI3Ny4uNmEzMDBjYWM4ODNmIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCj4gKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKPiBAQCAtNDkwLDYg
KzQ5MCwyMCBAQCBzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlIHsKPiAgCSAqLwo+ICAJdTggYWN0
aXZlX3BpcGVfY2hhbmdlczsKPiAgCj4gKwkvKgo+ICsJICogQ29udGFpbnMgYSBtYXNrIHdoaWNo
IHJlZmxlY3RzIHdoZXRoZXIgY29ycmVzcG9uZGVudCBwaXBlCj4gKwkgKiBjYW4gdG9sZXJhdGUg
U0FHViBvciBub3QsIHNvIHRoYXQgd2UgY2FuIG1ha2UgYSBkZWNpc2lvbgo+ICsJICogYXQgYXRv
bWljX2NvbW1pdF90YWlsIHN0YWdlLCB3aGV0aGVyIHdlIGVuYWJsZSBpdCBvciBub3QKPiArCSAq
IGJhc2VkIG9uIGdsb2JhbCBzdGF0ZSBpbiBkZXZfcHJpdi4KPiArCSAqLwo+ICsJdTMyIGNydGNf
c2Fndl9tYXNrOwoKSSBmZWVsIGxpa2UgeW91ciBjb2RlIG1pZ2h0IGZsb3cgYSBiaXQgbW9yZSBu
YXR1cmFsbHkgaWYgdGhpcyB3ZXJlCmludmVydGVkIGFuZCB1c2VkIGFzIGEgbWFzayBvZiBDUlRD
cyB0aGF0IGN1cnJlbnRseSBwcm9oaWJpdCBTQUdWPwoKPiArCj4gKwkvKgo+ICsJICogVXNlZCB0
byBkZXRlcm1pbmUgaWYgdGhlIG1hc2sgaGFzIGJlZW4gYWxyZWFkeSBjYWxjdWxhdGVkCj4gKwkg
KiBmb3IgdGhpcyBzdGF0ZSwgdG8gYXZvaWQgdW5uZWNlc3NhcnkgY2FsY3VsYXRpb25zLgo+ICsJ
ICovCj4gKwlib29sIGNydGNfc2Fndl9tYXNrX3NldDsKCkkgdGhpbmsgdGhpcyBmaWVsZCBjYW4g
Z28gYXdheSB0b28gaWYgd2UganVzdCBjYWxsIHRoZSBmdW5jdGlvbiBvbmNlIGFuZApjYWNoZSB0
aGUgcmVzdWx0IGluIHRoZSBzdGF0ZSBmaWVsZC4KCj4gKwo+ICAJdTggYWN0aXZlX3BpcGVzOwo+
ICAJLyogbWluaW11bSBhY2NlcHRhYmxlIGNkY2xrIGZvciBlYWNoIHBpcGUgKi8KPiAgCWludCBt
aW5fY2RjbGtbSTkxNV9NQVhfUElQRVNdOwo+IEBAIC02NzAsNiArNjg0LDcgQEAgc3RydWN0IHNr
bF9wbGFuZV93bSB7Cj4gIAlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHdtWzhdOwo+ICAJc3RydWN0IHNr
bF93bV9sZXZlbCB1dl93bVs4XTsKPiAgCXN0cnVjdCBza2xfd21fbGV2ZWwgdHJhbnNfd207Cj4g
KwlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHNhZ3Zfd20wOwo+ICAJYm9vbCBpc19wbGFuYXI7Cj4gIH07
Cj4gIAo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAo+IGluZGV4IDE3NzlmNjAwZmNmYi4uMGFjOWQ3
YjAwNmNhIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKPiAr
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCj4gQEAgLTExNzEsNiArMTE3MSwx
MiBAQCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSB7Cj4gIAo+ICAJdTMyIHNhZ3ZfYmxvY2tfdGlt
ZV91czsKPiAgCj4gKwkvKgo+ICsJICogQ29udGFpbnMgYSBiaXQgbWFzaywgd2hldGhlciBjb3Jy
ZXNwb25kZW50Cj4gKwkgKiBwaXBlIGFsbG93cyBTQUdWIG9yIG5vdC4KPiArCSAqLwo+ICsJdTMy
IGNydGNfc2Fndl9tYXNrOwo+ICsKPiAgCXN0cnVjdCB7Cj4gIAkJLyoKPiAgCQkgKiBSYXcgd2F0
ZXJtYXJrIGxhdGVuY3kgdmFsdWVzOgo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pbnRlbF9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwo+IGluZGV4IDA1
YmE5ZTFiZDI0Ny4uYzkxNGJkMTg2MmJhIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX3BtLmMKPiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCj4g
QEAgLTM2MjUsMTMgKzM2MjUsOSBAQCBzdGF0aWMgYm9vbCBza2xfbmVlZHNfbWVtb3J5X2J3X3dh
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKPiAgCXJldHVybiBJU19HRU45X0JD
KGRldl9wcml2KSB8fCBJU19CUk9YVE9OKGRldl9wcml2KTsKPiAgfQo+ICAKPiAtc3RhdGljIGJv
b2wKPiArYm9vbAo+ICBpbnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYpCj4gIHsKPiAtCS8qIEhBQ0shICovCj4gLQlpZiAoSVNfR0VOKGRldl9wcml2LCAxMikp
Cj4gLQkJcmV0dXJuIGZhbHNlOwo+IC0KClRoZSBTQUdWIHdvcmsgeW91J3JlIGRvaW5nIGlzIHBy
ZXR0eSBjb21wbGljYXRlZCBhbmQgdGhpcyBnZW5lcmFsIHBhdGNoCnRvdWNoZXMgYSBsb3Qgb2Yg
ZGlmZmVyZW50IHBsYXRmb3JtcyAoU0tMLCBJQ0wsIFRHTCwgZXRjLikuICBJdCB3b3VsZCBiZQpn
cmVhdCBpZiB3ZSBjb3VsZCBicmVhayB0aGlzIHVwIGludG8gYSBmZXcgcGF0Y2hlcywgYnV0IGlm
IHRoYXQncyBub3QKZWFzeSwgSSdkIHN1Z2dlc3QgYXQgbGVhc3QgbW92aW5nIHRoaXMgc3BlY2lm
aWMgY2hhbmdlIHRvIGEgZmluYWwgcGF0Y2gKYWxsIG9mIGl0cyBvd24gc28gdGhhdCB3ZSAiZmxp
cCB0aGUgc3dpdGNoIiBvbiBUR0wgaW5kZXBlbmRlbnRseSBvZiB0aGUKZ2VuZXJhbCByZXdvcmsu
ICBUaGF0IHdheSBpZiB3ZSB3aW5kIHVwIHdpdGggVEdMIHJlZ3Jlc3Npb25zIChidXQgbm8KcHJv
YmxlbXMgb24gU0tML0lDTCkgd2UgY2FuIGp1c3QgcmV2ZXJ0IGEgdGlueSAyLWxpbmUgcGF0Y2gg
cmF0aGVyIHRoYW4KcmV2ZXJ0aW5nIF9hbGxfIG9mIHlvdXIgd29yayBoZXJlLgoKPiAgCXJldHVy
biAoSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMCkgJiYK
PiAgCQlkZXZfcHJpdi0+c2Fndl9zdGF0dXMgIT0gSTkxNV9TQUdWX05PVF9DT05UUk9MTEVEOwo+
ICB9Cj4gQEAgLTM3NDgsNyArMzc0NCw3IEBAIGludGVsX2Rpc2FibGVfc2FndihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCj4gIAlyZXR1cm4gMDsKPiAgfQo+ICAKPiAtYm9vbCBp
bnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCj4g
K3N0YXRpYyB2b2lkIHNrbF9zZXRfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlKQoKTWlub3Igbml0cGljazogIEkga25vdyB0aGVyZSdzIGEgbG90IG9mIGluY29uc2lz
dGVudCB0ZXJtaW5vbG9neSB1c2VkCnRocm91Z2hvdXQgdGhlIGRyaXZlciwgYnV0IEkgYWx3YXlz
IGV4cGVjdCBmdW5jdGlvbnMgd2l0aCBuYW1lcyBsaWtlCidzZXQsJyAndXBkYXRlLCcgZXRjLiB0
byB0b3VjaCBoYXJkd2FyZSBzb21laG93LiAgSSBwcmVmZXIgbmFtaW5nCmZ1bmN0aW9ucyBsaWtl
IHRoaXMgd2l0aCB2ZXJicyBsaWtlICdjb21wdXRlJyBvciAnY2FsYycgdG8gbWFrZSBpdCBhIGJp
dAptb3JlIGNsZWFyIChhdCBsZWFzdCBpbiBteSBtaW5kKSB0aGF0IHdlJ3JlIG5vdCBkb2luZyBh
bnl0aGluZyBoZXJlIHlldApleGNlcHQgYW5hbHl6aW5nIHRoZSBzdGF0ZS4KCj4gIHsKPiAgCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7Cj4gIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7Cj4gQEAgLTM3NTgsMjkgKzM3NTQs
MzUgQEAgYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19zdGF0
ZSAqc3RhdGUpCj4gIAllbnVtIHBpcGUgcGlwZTsKPiAgCWludCBsZXZlbCwgbGF0ZW5jeTsKPiAg
Cj4gKwlpZiAoc3RhdGUtPmNydGNfc2Fndl9tYXNrX3NldCkKPiArCQlyZXR1cm47Cj4gKwo+ICAJ
aWYgKCFpbnRlbF9oYXNfc2FndihkZXZfcHJpdikpCj4gLQkJcmV0dXJuIGZhbHNlOwo+ICsJCXJl
dHVybjsKCkl0IHNlZW1zIGxpa2UgdGhpcyBjaGVjayBzaG91bGQganVzdCBiZSBhdCB0aGUgdG9w
IG9mCmludGVsX2Nhbl9lbmFibGVfc2FndigpIHJhdGhlciB0aGFuIGR1cGxpY2F0ZWQgaW4gZWFj
aCBwbGF0Zm9ybSdzCm1hc2stY2FsY3VsYXRpbmcgZnVuY3Rpb24/Cgo+ICAKPiAgCS8qCj4gIAkg
KiBJZiB0aGVyZSBhcmUgbm8gYWN0aXZlIENSVENzLCBubyBhZGRpdGlvbmFsIGNoZWNrcyBuZWVk
IGJlIHBlcmZvcm1lZAo+ICAJICovCj4gIAlpZiAoaHdlaWdodDgoc3RhdGUtPmFjdGl2ZV9waXBl
cykgPT0gMCkKPiAtCQlyZXR1cm4gdHJ1ZTsKPiArCQlyZXR1cm47CgpUaGlzIGFsc28gYXBwZWFy
cyB0byBiZSBhIHBsYXRmb3JtLWluZGVwZW5kZW50IGNoZWNrIHRoYXQgY2FuIG1vdmUgdXAgdG8K
dGhlIGludGVsX2Nhbl9lbmFibGVfc2FndigpIGxldmVsPyAgWW91IGRvbid0IGhhdmUgaXQgaW4g
dGhlIFRHTApmdW5jdGlvbiByaWdodCBub3csIGJ1dCBpdCBzZWVtcyBsaWtlIGl0IHNob3VsZCBh
cHBseSB0aGVyZSBhcyB3ZWxsPwoKPiAgCj4gIAkvKgo+ICAJICogU0tMKyB3b3JrYXJvdW5kOiBi
c3BlYyByZWNvbW1lbmRzIHdlIGRpc2FibGUgU0FHViB3aGVuIHdlIGhhdmUKPiAgCSAqIG1vcmUg
dGhlbiBvbmUgcGlwZSBlbmFibGVkCj4gIAkgKi8KPiAgCWlmIChod2VpZ2h0OChzdGF0ZS0+YWN0
aXZlX3BpcGVzKSA+IDEpCj4gLQkJcmV0dXJuIGZhbHNlOwo+ICsJCXJldHVybjsKPiAgCj4gIAkv
KiBTaW5jZSB3ZSdyZSBub3cgZ3VhcmFudGVlZCB0byBvbmx5IGhhdmUgb25lIGFjdGl2ZSBDUlRD
Li4uICovCj4gIAlwaXBlID0gZmZzKHN0YXRlLT5hY3RpdmVfcGlwZXMpIC0gMTsKPiAgCWNydGMg
PSBpbnRlbF9nZXRfY3J0Y19mb3JfcGlwZShkZXZfcHJpdiwgcGlwZSk7Cj4gIAljcnRjX3N0YXRl
ID0gdG9faW50ZWxfY3J0Y19zdGF0ZShjcnRjLT5iYXNlLnN0YXRlKTsKPiArCXN0YXRlLT5jcnRj
X3NhZ3ZfbWFzayAmPSB+QklUKGNydGMtPnBpcGUpOwo+ICAKPiAtCWlmIChjcnRjX3N0YXRlLT5o
dy5hZGp1c3RlZF9tb2RlLmZsYWdzICYgRFJNX01PREVfRkxBR19JTlRFUkxBQ0UpCj4gLQkJcmV0
dXJuIGZhbHNlOwo+ICsJaWYgKGNydGNfc3RhdGUtPmh3LmFkanVzdGVkX21vZGUuZmxhZ3MgJiBE
Uk1fTU9ERV9GTEFHX0lOVEVSTEFDRSkgewo+ICsJCXN0YXRlLT5jcnRjX3NhZ3ZfbWFza19zZXQg
PSB0cnVlOwo+ICsJCXJldHVybjsKPiArCX0KPiAgCj4gIAlmb3JfZWFjaF9pbnRlbF9wbGFuZV9v
bl9jcnRjKGRldiwgY3J0YywgcGxhbmUpIHsKPiAgCQlzdHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9
CgpJbiB0aGUgcHJlLWV4aXN0aW5nIGNvZGUgZm9yIHRoaXMgbG9vcCAodGhhdCBkb2Vzbid0IHNo
b3cgdXAgaW4gdGhlIGRpZmYKaGVyZSkgaXQgbG9va3MgbGlrZSB3ZSdyZSBsb29raW5nIGF0IHRo
ZSBhbHJlYWR5LWNvbW1pdHRlZCBwbGFuZSBzdGF0ZQp0byBzZWUgaWYgdGhlIG9sZCBwbGFuZSBG
QiB3YXMgeC10aWxlZC4uLnNob3VsZCB0aGF0IGJlIGxvb2tpbmcgYXQKdGhlIG5ldyBGQiBmcm9t
IHRoZSBjdXJyZW50IHN0YXRlIGluc3RlYWQ/Cgo+IEBAIC0zODA3LDcgKzM4MDksMTM1IEBAIGJv
b2wgaW50ZWxfY2FuX2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRl
KQo+ICAJCSAqIGluY3VyIG1lbW9yeSBsYXRlbmNpZXMgaGlnaGVyIHRoYW4gc2Fndl9ibG9ja190
aW1lX3VzIHdlCj4gIAkJICogY2FuJ3QgZW5hYmxlIFNBR1YuCj4gIAkJICovCj4gLQkJaWYgKGxh
dGVuY3kgPCBkZXZfcHJpdi0+c2Fndl9ibG9ja190aW1lX3VzKQo+ICsJCWlmIChsYXRlbmN5IDwg
ZGV2X3ByaXYtPnNhZ3ZfYmxvY2tfdGltZV91cykgewo+ICsJCQlzdGF0ZS0+Y3J0Y19zYWd2X21h
c2tfc2V0ID0gdHJ1ZTsKPiArCQkJcmV0dXJuOwo+ICsJCX0KPiArCX0KPiArCj4gKwlzdGF0ZS0+
Y3J0Y19zYWd2X21hc2sgfD0gQklUKGNydGMtPnBpcGUpOwo+ICsJc3RhdGUtPmNydGNfc2Fndl9t
YXNrX3NldCA9IHRydWU7Cj4gK30KPiArCj4gK3N0YXRpYyB2b2lkIHRnbF9zZXRfc2Fndl9tYXNr
KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKTsKPiArCj4gK3N0YXRpYyB2b2lkIGlj
bF9zZXRfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQo+ICt7Cj4g
KwlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2Owo+ICsJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwo+ICsJc3RydWN0IGludGVs
X2NydGMgKmNydGM7Cj4gKwlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7
Cj4gKwlpbnQgbGV2ZWwsIGxhdGVuY3k7Cj4gKwlpbnQgaTsKPiArCWludCBwbGFuZV9pZDsKPiAr
Cj4gKwlpZiAoc3RhdGUtPmNydGNfc2Fndl9tYXNrX3NldCkKPiArCQlyZXR1cm47Cj4gKwo+ICsJ
aWYgKCFpbnRlbF9oYXNfc2FndihkZXZfcHJpdikpCj4gKwkJcmV0dXJuOwo+ICsKPiArCS8qCj4g
KwkgKiBJZiB0aGVyZSBhcmUgbm8gYWN0aXZlIENSVENzLCBubyBhZGRpdGlvbmFsIGNoZWNrcyBu
ZWVkIGJlIHBlcmZvcm1lZAo+ICsJICovCj4gKwlpZiAoaHdlaWdodDgoc3RhdGUtPmFjdGl2ZV9w
aXBlcykgPT0gMCkKPiArCQlyZXR1cm47Cj4gKwo+ICsJZm9yX2VhY2hfbmV3X2ludGVsX2NydGNf
aW5fc3RhdGUoc3RhdGUsIGNydGMsCj4gKwkJCQkJICAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgewo+
ICsJCXVuc2lnbmVkIGludCBmbGFncyA9IGNydGMtPmJhc2Uuc3RhdGUtPmFkanVzdGVkX21vZGUu
ZmxhZ3M7Cj4gKwkJYm9vbCBjYW5fc2FndjsKPiArCj4gKwkJaWYgKGZsYWdzICYgRFJNX01PREVf
RkxBR19JTlRFUkxBQ0UpCj4gKwkJCWNvbnRpbnVlOwo+ICsKPiArCQlpZiAoIW5ld19jcnRjX3N0
YXRlLT5ody5hY3RpdmUpCj4gKwkJCWNvbnRpbnVlOwo+ICsKPiArCQljYW5fc2FndiA9IHRydWU7
Cj4gKwkJZm9yX2VhY2hfcGxhbmVfaWRfb25fY3J0YyhjcnRjLCBwbGFuZV9pZCkgewo+ICsJCQlz
dHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9Cj4gKwkJCQkmbmV3X2NydGNfc3RhdGUtPndtLnNrbC5v
cHRpbWFsLnBsYW5lc1twbGFuZV9pZF07Cj4gKwo+ICsJCQkvKiBTa2lwIHRoaXMgcGxhbmUgaWYg
aXQncyBub3QgZW5hYmxlZCAqLwo+ICsJCQlpZiAoIXdtLT53bVswXS5wbGFuZV9lbikKPiArCQkJ
CWNvbnRpbnVlOwo+ICsKPiArCQkJLyogRmluZCB0aGUgaGlnaGVzdCBlbmFibGVkIHdtIGxldmVs
IGZvciB0aGlzIHBsYW5lICovCj4gKwkJCWZvciAobGV2ZWwgPSBpbGtfd21fbWF4X2xldmVsKGRl
dl9wcml2KTsKPiArCQkJICAgICAhd20tPndtW2xldmVsXS5wbGFuZV9lbjsgLS1sZXZlbCkgewo+
ICsJCQl9Cj4gKwo+ICsJCQlsYXRlbmN5ID0gZGV2X3ByaXYtPndtLnNrbF9sYXRlbmN5W2xldmVs
XTsKPiArCj4gKwkJCS8qCj4gKwkJCSAqIElmIGFueSBvZiB0aGUgcGxhbmVzIG9uIHRoaXMgcGlw
ZSBkb24ndCBlbmFibGUKPiArCQkJICogd20gbGV2ZWxzIHRoYXQgaW5jdXIgbWVtb3J5IGxhdGVu
Y2llcyBoaWdoZXIgdGhhbgo+ICsJCQkgKiBzYWd2X2Jsb2NrX3RpbWVfdXMgd2UgY2FuJ3QgZW5h
YmxlIFNBR1YuCj4gKwkJCSAqLwo+ICsJCQlpZiAobGF0ZW5jeSA8IGRldl9wcml2LT5zYWd2X2Js
b2NrX3RpbWVfdXMpIHsKPiArCQkJCWNhbl9zYWd2ID0gZmFsc2U7Cj4gKwkJCQlicmVhazsKPiAr
CQkJfQoKSSBzdGlsbCB0aGluayB0aGlzIHRlc3QgaXMgYSBiaXQgcHJvYmxlbWF0aWMuICBXaGF0
IGlmIG91ciBtZW1vcnkKbGF0ZW5jeSBpcyBzbyBsb3cgdGhhdCB3ZSBjYW4gc3VjY2Vzc2Z1bGx5
IGVuYWJsZSBhbGwgd2F0ZXJtYXJrIGxldmVscywKYW5kIHRoZSBsYXRlbmN5IGZvciB0aGUgaGln
aGVzdCB3YXRlcm1hcmsgbGV2ZWwgaXMgc3RpbGwgbGVzcyB0aGFuIElDTCdzCjEwdXMgc2FndiBi
bG9jayB0aW1lPyAgV2UgbWlnaHQgYmUgYWJsZSB0byBzdXBwb3J0IFNBR1YganVzdCBmaW5lLCBi
dXQKd2UncmUgZ2l2aW5nIHVwIHdpdGhvdXQgYWN0dWFsbHkgY2hlY2tpbmcuCgpPciBhbm90aGVy
IGNhc2U6ICBzYXkgb3VyIGhpZ2hlc3QgZW5hYmxlZCB3YXRlcm1hcmsgbGV2ZWwgaXMgMyB3aXRo
IGEKbGF0ZW5jeSBvZiA4dXMuICBUaGUgbmV4dCBsZXZlbCB1cCwgNCwgaGFzIGEgbGF0ZW5jeSBv
ZiAzMHVzIHdoaWNoIGlzCmhpZ2ggZW5vdWdoIHRoYXQgb3VyIGRyaXZlciBoYWQgdG8gZGlzYWJs
ZSBsZXZlbCA0LiAgV2Ugc3RpbGwgZG9uJ3Qga25vdwp3aGV0aGVyIHRoZSBwbGFuZSBjb3VsZCBo
YXZlIHRvbGVyYXRlZCB0aGUgbGF0ZW5jeSBvZiAxMHVzIChhbmQgdGhlcmUncwphIGdvb2QgY2hh
bmNlIHdlIGNvdWxkIGhhdmUuLi5sZXZlbCA0IGluIHRoaXMgZXhhbXBsZSB3YXMgb25seQppbXBv
c3NpYmxlIGJlY2F1c2UgaXQgd2FzIHN1Y2ggYSBiaWcgbGF0ZW5jeSBqdW1wIG92ZXIgbGV2ZWwg
MykuCgpCVFcsIGFzIEkgbWVudGlvbmVkIGJlZm9yZSwgSSdtIHN0aWxsIGEgYml0IHVuY29tZm9y
dGFibGUgd2l0aCB0aGUgYnNwZWMKd29yZGluZyBoZXJlOyBJJ20gZ29pbmcgdG8gb3BlbiBhIGJz
cGVjIGRlZmVjdCB0byBmaW5kIG91dCBmb3Igc3VyZSBob3cKd2Ugc2hvdWxkIGludGVycHJldCB0
aGUgZGlyZWN0aW9ucyBvbiBnZW4xMS4KCj4gKwkJfQo+ICsJCWlmIChjYW5fc2FndikKPiArCQkJ
c3RhdGUtPmNydGNfc2Fndl9tYXNrIHw9IEJJVChjcnRjLT5waXBlKTsKPiArCQllbHNlCj4gKwkJ
CXN0YXRlLT5jcnRjX3NhZ3ZfbWFzayAmPSB+QklUKGNydGMtPnBpcGUpOwo+ICsJfQo+ICsJc3Rh
dGUtPmNydGNfc2Fndl9tYXNrX3NldCA9IHRydWU7Cj4gK30KPiArCj4gK2Jvb2wgaW50ZWxfY2Fu
X2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQo+ICt7Cj4gKwlz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2Owo+ICsJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwo+ICsJaW50IHJldCwgaTsKPiAr
CXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjOwo+ICsJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5l
d19jcnRjX3N0YXRlOwo+ICsKPiArCS8qCj4gKwkgKiBNYWtlIHN1cmUgd2UgYWx3YXlzIHBpY2sg
Z2xvYmFsIHN0YXRlIGZpcnN0LAo+ICsJICogdGhlcmUgc2hvdWxkbid0IGJlIGFueSBpc3N1ZSBh
cyB3ZSBob2xkIG9ubHkgbG9ja3MKPiArCSAqIHRvIGNvcnJlc3BvbmRlbnQgY3J0Y3MgaW4gc3Rh
dGUsIGhvd2V2ZXIgb25jZQo+ICsJICogd2UgZGV0ZWN0IHRoYXQgd2UgbmVlZCB0byBjaGFuZ2Ug
U0FHViBtYXNrCj4gKwkgKiBpbiBnbG9iYWwgc3RhdGUsIHdlIHdpbGwgZ3JhYiBhbGwgdGhlIGNy
dGMgbG9ja3MKPiArCSAqIGluIG9yZGVyIHRvIGdldCB0aGlzIHNlcmlhbGl6ZWQsIHRodXMgb3Ro
ZXIKPiArCSAqIHJhY2luZyBjb21taXRzIGhhdmluZyBvdGhlciBjcnRjIGxvY2tzLCB3aWxsIGhh
dmUKPiArCSAqIHRvIHN0YXJ0IG92ZXIgYWdhaW4sIGFzIHN0YXRlZCBieSBXb3VuZC1XYWl0Cj4g
KwkgKiBhbGdvcml0aG0uCj4gKwkgKi8KPiArCXN0YXRlLT5jcnRjX3NhZ3ZfbWFzayA9IGRldl9w
cml2LT5jcnRjX3NhZ3ZfbWFzazsKPiArCj4gKwlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MikKPiArCQl0Z2xfc2V0X3NhZ3ZfbWFzayhzdGF0ZSk7Cj4gKwllbHNlIGlmIChJTlRFTF9HRU4o
ZGV2X3ByaXYpID09IDExKQo+ICsJCWljbF9zZXRfc2Fndl9tYXNrKHN0YXRlKTsKPiArCWVsc2UK
PiArCQlza2xfc2V0X3NhZ3ZfbWFzayhzdGF0ZSk7Cj4gKwo+ICsJLyoKPiArCSAqIEZvciBTQUdW
IHdlIG5lZWQgdG8gYWNjb3VudCBhbGwgdGhlIHBpcGVzLAo+ICsJICogbm90IG9ubHkgdGhlIG9u
ZXMgd2hpY2ggYXJlIGluIHN0YXRlIGN1cnJlbnRseS4KPiArCSAqIEdyYWIgYWxsIGxvY2tzIGlm
IHdlIGRldGVjdCB0aGF0IHdlIGFyZSBhY3R1YWxseQo+ICsJICogZ29pbmcgdG8gZG8gc29tZXRo
aW5nLgo+ICsJICovCj4gKwlpZiAoc3RhdGUtPmNydGNfc2Fndl9tYXNrICE9IGRldl9wcml2LT5j
cnRjX3NhZ3ZfbWFzaykgewo+ICsJCXJldCA9IGludGVsX2F0b21pY19zZXJpYWxpemVfZ2xvYmFs
X3N0YXRlKHN0YXRlKTsKPiArCQlpZiAocmV0KSB7Cj4gKwkJCURSTV9ERUJVR19LTVMoIkNvdWxk
IG5vdCBzZXJpYWxpemUgZ2xvYmFsIHN0YXRlXG4iKTsKPiArCQkJcmV0dXJuIGZhbHNlOwo+ICsJ
CX0KPiArCX0KPiArCj4gKwlmb3JfZWFjaF9uZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwg
Y3J0YywgbmV3X2NydGNfc3RhdGUsIGkpIHsKPiArCQl1MzIgbWFzayA9IEJJVChjcnRjLT5waXBl
KTsKPiArCQlib29sIHN0YXRlX3NhZ3ZfbWFza2VkID0gKG1hc2sgJiBzdGF0ZS0+Y3J0Y19zYWd2
X21hc2spID09IDA7Cj4gKwo+ICsJCWlmICghbmV3X2NydGNfc3RhdGUtPmh3LmFjdGl2ZSkKPiAr
CQkJY29udGludWU7Cj4gKwo+ICsJCWlmIChzdGF0ZV9zYWd2X21hc2tlZCkKPiAgCQkJcmV0dXJu
IGZhbHNlOwo+ICAJfQo+ICAKPiBAQCAtMzkzMyw2ICs0MDYzLDcgQEAgc3RhdGljIGludCBza2xf
Y29tcHV0ZV93bV9wYXJhbXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCj4gIAkJCQkgaW50IGNvbG9yX3BsYW5lKTsKPiAgc3RhdGljIHZvaWQgc2tsX2NvbXB1dGVf
cGxhbmVfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCj4gIAkJ
CQkgaW50IGxldmVsLAo+ICsJCQkJIHUzMiBsYXRlbmN5LAo+ICAJCQkJIGNvbnN0IHN0cnVjdCBz
a2xfd21fcGFyYW1zICp3cCwKPiAgCQkJCSBjb25zdCBzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1
bHRfcHJldiwKPiAgCQkJCSBzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1bHQgLyogb3V0ICovKTsK
PiBAQCAtMzk1NSw3ICs0MDg2LDEwIEBAIHNrbF9jdXJzb3JfYWxsb2NhdGlvbihjb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAgCVdBUk5fT04ocmV0KTsKPiAgCj4g
IAlmb3IgKGxldmVsID0gMDsgbGV2ZWwgPD0gbWF4X2xldmVsOyBsZXZlbCsrKSB7Cj4gLQkJc2ts
X2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgbGV2ZWwsICZ3cCwgJndtLCAmd20pOwo+ICsJ
CXUzMiBsYXRlbmN5ID0gZGV2X3ByaXYtPndtLnNrbF9sYXRlbmN5W2xldmVsXTsKPiArCj4gKwkJ
c2tsX2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgbGV2ZWwsIGxhdGVuY3ksICZ3cCwgJndt
LCAmd20pOwo+ICsKPiAgCQlpZiAod20ubWluX2RkYl9hbGxvYyA9PSBVMTZfTUFYKQo+ICAJCQli
cmVhazsKPiAgCj4gQEAgLTQyMjAsNiArNDM1NCw5OCBAQCBpY2xfZ2V0X3RvdGFsX3JlbGF0aXZl
X2RhdGFfcmF0ZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAgCXJldHVy
biB0b3RhbF9kYXRhX3JhdGU7Cj4gIH0KPiAgCj4gK3N0YXRpYyBpbnQKPiArdGdsX2NoZWNrX3Bp
cGVfZml0c19zYWd2X3dtKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAo+ICsJ
CQkgICAgc3RydWN0IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiIC8qIG91dCAqLykKPiArewo+ICsJ
c3RydWN0IGRybV9jcnRjICpjcnRjID0gY3J0Y19zdGF0ZS0+dWFwaS5jcnRjOwo+ICsJc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwo+ICsJc3Ry
dWN0IGludGVsX2NydGMgKmludGVsX2NydGMgPSB0b19pbnRlbF9jcnRjKGNydGMpOwo+ICsJc3Ry
dWN0IHNrbF9kZGJfZW50cnkgKmFsbG9jID0gJmNydGNfc3RhdGUtPndtLnNrbC5kZGI7Cj4gKwl1
MTYgYWxsb2Nfc2l6ZTsKPiArCXUxNiB0b3RhbFtJOTE1X01BWF9QTEFORVNdID0ge307Cj4gKwl1
NjQgdG90YWxfZGF0YV9yYXRlOwo+ICsJZW51bSBwbGFuZV9pZCBwbGFuZV9pZDsKPiArCWludCBu
dW1fYWN0aXZlOwo+ICsJdTY0IHBsYW5lX2RhdGFfcmF0ZVtJOTE1X01BWF9QTEFORVNdID0ge307
Cj4gKwl1MzIgYmxvY2tzOwo+ICsKPiArCS8qCj4gKwkgKiBObyBuZWVkIHRvIGNoZWNrIGdlbiBo
ZXJlLCB3ZSBjYWxsIHRoaXMgb25seSBmb3IgZ2VuMTIKPiArCSAqLwo+ICsJdG90YWxfZGF0YV9y
YXRlID0KPiArCQlpY2xfZ2V0X3RvdGFsX3JlbGF0aXZlX2RhdGFfcmF0ZShjcnRjX3N0YXRlLAo+
ICsJCQkJCQkgcGxhbmVfZGF0YV9yYXRlKTsKPiArCj4gKwlza2xfZGRiX2dldF9waXBlX2FsbG9j
YXRpb25fbGltaXRzKGRldl9wcml2LCBjcnRjX3N0YXRlLAo+ICsJCQkJCSAgIHRvdGFsX2RhdGFf
cmF0ZSwKPiArCQkJCQkgICBkZGIsIGFsbG9jLCAmbnVtX2FjdGl2ZSk7Cj4gKwlhbGxvY19zaXpl
ID0gc2tsX2RkYl9lbnRyeV9zaXplKGFsbG9jKTsKPiArCWlmIChhbGxvY19zaXplID09IDApCj4g
KwkJcmV0dXJuIC1FTk9TUEM7Cj4gKwo+ICsJLyogQWxsb2NhdGUgZml4ZWQgbnVtYmVyIG9mIGJs
b2NrcyBmb3IgY3Vyc29yLiAqLwo+ICsJdG90YWxbUExBTkVfQ1VSU09SXSA9IHNrbF9jdXJzb3Jf
YWxsb2NhdGlvbihjcnRjX3N0YXRlLCBudW1fYWN0aXZlKTsKPiArCWFsbG9jX3NpemUgLT0gdG90
YWxbUExBTkVfQ1VSU09SXTsKPiArCWNydGNfc3RhdGUtPndtLnNrbC5wbGFuZV9kZGJfeVtQTEFO
RV9DVVJTT1JdLnN0YXJ0ID0KPiArCQlhbGxvYy0+ZW5kIC0gdG90YWxbUExBTkVfQ1VSU09SXTsK
PiArCWNydGNfc3RhdGUtPndtLnNrbC5wbGFuZV9kZGJfeVtQTEFORV9DVVJTT1JdLmVuZCA9IGFs
bG9jLT5lbmQ7CgpBbGwgdGhlIGFib3ZlIGlzIGJhc2ljYWxseSBhIGR1cGxpY2F0aW9uIG9mIHRo
ZSBwaXBlJ3MgRERCIGFsbG9jYXRpb24gd2UKaGF2ZSB0byBmaWd1cmUgb3V0IGFnYWluIGxhdGVy
LiAgQmFzaWNhbGx5IG91ciBkcml2ZXIgdXNlZCB0byBmb2xsb3cgYQpzZXF1ZW5jZSBvZjoKCiAg
ICAgICAgKiBDYWxjdWxhdGUgRERCIChwcm9wb3J0aW9uYWwgYWxnb3JpdGhtKQogICAgICAgICog
Q2FsY3VsYXRlIHdhdGVybWFya3MKCmFuZCB0aGVuIHdlIHN3aXRjaGVkIGl0IHRvOgoKICAgICAg
ICAqIENhbGN1bGF0ZSB3YXRlcm1hcmtzCiAgICAgICAgKiBDYWxjdWxhdGUgRERCIChuZWVkLWJh
c2VkIGFsZ29yaXRobSkKCklmIEkgcmVjYWxsIGNvcnJlY3RseSwgdGhlIG5lZWQtYmFzZWQgRERC
IGFsZ29yaXRobSBvbmx5IHJlYWxseSBuZWVkcwp0aGUgd2F0ZXJtYXJrIHZhbHVlcyB0byBkaXZ5
IHVwIHRoZSBpbnRyYS1waXBlIHBsYW5lIEREQiBhbGxvY2F0aW9ucyBzbwp3ZSBjb3VsZCBzdGls
bCBjYWxjdWxhdGUgdGhlIG92ZXJhbGwgcGlwZSBhbGxvY2F0aW9ucyBlYXJsaWVyIGlmIHdlCndh
bnRlZCB0by4gIERvaW5nIHNvIHdvdWxkIGFsbG93IHlvdSB0byBhdm9pZCB0aGlzIGR1cGxpY2F0
aW9uIG9mIGxvZ2ljOgoKICAgICAgICAqIENhbGN1bGF0ZSBwaXBlLWxldmVsIEREQiBhbGxvY2F0
aW9ucwogICAgICAgICogQ2FsY3VsYXRlIHdhdGVybWFya3MKICAgICAgICAqIENhbGN1bGF0ZSBw
bGFuZS1sZXZlbCBEREIgKG5lZWQtYmFzZWQgYWxnb3JpdGhtKQoKPiArCj4gKwkvKgo+ICsJICog
RG8gY2hlY2sgaWYgd2UgY2FuIGZpdCBMMCArIHNhZ3ZfYmxvY2tfdGltZSBhbmQKPiArCSAqIGRp
c2FibGUgU0FHViBpZiB3ZSBjYW4ndC4KPiArCSAqLwo+ICsJYmxvY2tzID0gMDsKPiArCWZvcl9l
YWNoX3BsYW5lX2lkX29uX2NydGMoaW50ZWxfY3J0YywgcGxhbmVfaWQpIHsKPiArCQljb25zdCBz
dHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9Cj4gKwkJCSZjcnRjX3N0YXRlLT53bS5za2wub3B0aW1h
bC5wbGFuZXNbcGxhbmVfaWRdOwo+ICsKPiArCQlpZiAocGxhbmVfaWQgPT0gUExBTkVfQ1VSU09S
KSB7Cj4gKwkJCWlmIChXQVJOX09OKHdtLT5zYWd2X3dtMC5taW5fZGRiX2FsbG9jID4KPiArCQkJ
CSAgICB0b3RhbFtQTEFORV9DVVJTT1JdKSkgewo+ICsJCQkJYmxvY2tzID0gVTMyX01BWDsKPiAr
CQkJCWJyZWFrOwo+ICsJCQl9Cj4gKwkJCWNvbnRpbnVlOwo+ICsJCX0KPiArCj4gKwkJYmxvY2tz
ICs9IHdtLT5zYWd2X3dtMC5taW5fZGRiX2FsbG9jOwo+ICsJCWlmIChibG9ja3MgPiBhbGxvY19z
aXplKQo+ICsJCQlyZXR1cm4gLUVOT1NQQzsKPiArCX0KPiArCXJldHVybiAwOwo+ICt9Cj4gKwo+
ICtjb25zdCBzdHJ1Y3Qgc2tsX3dtX2xldmVsICoKPiArc2tsX3BsYW5lX3dtX2xldmVsKHN0cnVj
dCBpbnRlbF9wbGFuZSAqcGxhbmUsCj4gKwkJY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCj4gKwkJaW50IGxldmVsLAo+ICsJCWJvb2wgeXV2KQo+ICt7Cj4gKwlzdHJ1
Y3QgZHJtX2F0b21pY19zdGF0ZSAqc3RhdGUgPSBjcnRjX3N0YXRlLT51YXBpLnN0YXRlOwo+ICsJ
ZW51bSBwbGFuZV9pZCBwbGFuZV9pZCA9IHBsYW5lLT5pZDsKPiArCWNvbnN0IHN0cnVjdCBza2xf
cGxhbmVfd20gKndtID0KPiArCQkmY3J0Y19zdGF0ZS0+d20uc2tsLm9wdGltYWwucGxhbmVzW3Bs
YW5lX2lkXTsKPiArCj4gKwkvKgo+ICsJICogTG9va3MgcmlkaWNpbG91cyBidXQgbmVlZCB0byBj
aGVjayBpZiBzdGF0ZSBpcyBub3QKPiArCSAqIE5VTEwgaGVyZSBhcyBpdCBtaWdodCBiZSBhcyBz
b21lIGN1cnNvciBwbGFuZSBtYW5pcHVsYXRpb25zCj4gKwkgKiBzZWVtIHRvIGhhcHBlbiB3aGVu
IG5vIGF0b21pYyBzdGF0ZSBpcyBhY3R1YWxseSBwcmVzZW50LAo+ICsJICogZGVzcGl0ZSBjcnRj
X3N0YXRlIGlzIGFsbG9jYXRlZC4gUmVtb3Zpbmcgc3RhdGUgY2hlY2sKPiArCSAqIGZyb20gaGVy
ZSB3aWxsIHJlc3VsdCBpbiBrZXJuZWwgcGFuaWMgb24gYm9vdC4KPiArCSAqIEhvd2V2ZXIgd2Ug
bm93IG5lZWQgdG8gY2hlY2sgd2hldGhlciBzaG91bGQgYmUgdXNlIFNBR1YKPiArCSAqIHdtIGxl
dmVscyBoZXJlLgo+ICsJICovCj4gKwlpZiAoc3RhdGUpIHsKPiArCQlzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICppbnRlbF9zdGF0ZSA9Cj4gKwkJCXRvX2ludGVsX2F0b21pY19zdGF0ZShzdGF0
ZSk7Cj4gKwkJaWYgKGludGVsX2Nhbl9lbmFibGVfc2FndihpbnRlbF9zdGF0ZSkgJiYgIWxldmVs
KQoKSSB0aGluayB3ZSBzaG91bGQgY2FsY3VsYXRlIHRoZSAnY2FuIGVuYWJsZSBTQUdWJyB2YWx1
ZSBvbmNlIGFuZCBjYWNoZQppdCBpbnRvIGEgZmllbGQgb2YgdGhlIHN0YXRlIHN0cnVjdHVyZSBz
byB0aGF0IHlvdSBkb24ndCBoYXZlIHRvIGtlZXAKcmUtY2FsbGluZyB0aGlzIG9uIGV2ZXJ5IHNp
bmdsZSBwbGFuZS9sZXZlbCBjb21iaW5hdGlvbi4gIEFsc28geW91IGNhbgp0aGVuIHVzZSB0aGUg
cHJvcGVyIHNldHRpbmcgdG8gZmlndXJlIG91dCBob3cgdG8gdmVyaWZ5IHRoZSBoYXJkd2FyZQpy
ZWFkb3V0IHZhbHVlIGFzIG5vdGVkIGVhcmxpZXIuIAoKQWxzbyBvbmUgdGhpbmcgSSBkb24ndCBz
ZWUgKG1heWJlIEknbSBqdXN0IG92ZXJsb29raW5nIGl0KSBpcyB0aGF0IHdlCm1heSBhbHNvIG5l
ZWQgdG8gYWRqdXN0IGhpZ2hlciB3YXRlcm1hcmsgbGV2ZWxzIHVwd2FyZCB0b286CgogICAgICAg
ICJUaGUgbGF0ZW5jeSBpbnB1dCB0byB0aGUgd2F0ZXJtYXJrIGNhbGN1bGF0aW9uIGZvciBlYWNo
IGxldmVsCiAgICAgICAgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGxvd2Vy
IGxldmVsLiBUaGUgbGF0ZW5jeQogICAgICAgIGluY3JlYXNlIHRvIGxldmVsIDAgZm9yIFNBR1Yg
cmVxdWlyZXMgdGhlIHVwcGVyIGxldmVscyB0byBiZQogICAgICAgIGFkanVzdGVkIHRvIG1lZXQg
dGhhdCByZXF1aXJlbWVudC4gVXNlIE1JTihsYXRlbmN5IGZvciB0aGlzCiAgICAgICAgbGV2ZWws
IGxhdGVuY3kgZm9yIG5leHQgbG93ZXIgbGV2ZWwpIHRvIGNvcnJlY3QgdGhlIGxhdGVuY3kuIgoK
QmFzaWNhbGx5IGl0IHNlZW1zIGxpa2Ugd2Ugc2hvdWxkIGp1c3QgY2FsY3VsYXRlIHR3byBmdWxs
IHNldHMgb2YKd2F0ZXJtYXJrIHZhbHVlcyBmb3IgYWxsIGxldmVscyBhbmQgdGhlbiBjaG9vc2Ug
YmV0d2VlbiB0aGVtIGF0IHRoZSBlbmQ/CgoKTWF0dAoKPiArCQkJcmV0dXJuICZ3bS0+c2Fndl93
bTA7Cj4gKwl9Cj4gKwo+ICsJcmV0dXJuIHl1diA/ICZ3bS0+dXZfd21bbGV2ZWxdIDogJndtLT53
bVtsZXZlbF07Cj4gK30KPiArCj4gIHN0YXRpYyBpbnQKPiAgc2tsX2FsbG9jYXRlX3BpcGVfZGRi
KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAo+ICAJCSAgICAgIHN0cnVjdCBz
a2xfZGRiX2FsbG9jYXRpb24gKmRkYiAvKiBvdXQgKi8pCj4gQEAgLTQyMzQsNiArNDQ2MCw5IEBA
IHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0
ZSwKPiAgCXUxNiB1dl90b3RhbFtJOTE1X01BWF9QTEFORVNdID0ge307Cj4gIAl1NjQgdG90YWxf
ZGF0YV9yYXRlOwo+ICAJZW51bSBwbGFuZV9pZCBwbGFuZV9pZDsKPiArCXN0cnVjdCBpbnRlbF9w
bGFuZSAqcGxhbmU7Cj4gKwljb25zdCBzdHJ1Y3Qgc2tsX3dtX2xldmVsICp3bV9sZXZlbDsKPiAr
CWNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKndtX3V2X2xldmVsOwo+ICAJaW50IG51bV9hY3Rp
dmU7Cj4gIAl1NjQgcGxhbmVfZGF0YV9yYXRlW0k5MTVfTUFYX1BMQU5FU10gPSB7fTsKPiAgCXU2
NCB1dl9wbGFuZV9kYXRhX3JhdGVbSTkxNV9NQVhfUExBTkVTXSA9IHt9Owo+IEBAIC00Mjg1LDEy
ICs0NTE0LDE1IEBAIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKPiAgCSAqLwo+ICAJZm9yIChsZXZlbCA9IGlsa193bV9tYXhfbGV2ZWwo
ZGV2X3ByaXYpOyBsZXZlbCA+PSAwOyBsZXZlbC0tKSB7Cj4gIAkJYmxvY2tzID0gMDsKPiAtCQlm
b3JfZWFjaF9wbGFuZV9pZF9vbl9jcnRjKGludGVsX2NydGMsIHBsYW5lX2lkKSB7Cj4gLQkJCWNv
bnN0IHN0cnVjdCBza2xfcGxhbmVfd20gKndtID0KPiAtCQkJCSZjcnRjX3N0YXRlLT53bS5za2wu
b3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOwo+ICsJCWZvcl9lYWNoX2ludGVsX3BsYW5lX29uX2Ny
dGMoJmRldl9wcml2LT5kcm0sIGludGVsX2NydGMsIHBsYW5lKSB7Cj4gKwkJCXBsYW5lX2lkID0g
cGxhbmUtPmlkOwo+ICsJCQl3bV9sZXZlbCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwgY3J0
Y19zdGF0ZSwKPiArCQkJCQkJICAgICAgbGV2ZWwsIGZhbHNlKTsKPiArCQkJd21fdXZfbGV2ZWwg
PSBza2xfcGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCj4gKwkJCQkJCQkgbGV2ZWws
IHRydWUpOwo+ICAKPiAgCQkJaWYgKHBsYW5lX2lkID09IFBMQU5FX0NVUlNPUikgewo+IC0JCQkJ
aWYgKFdBUk5fT04od20tPndtW2xldmVsXS5taW5fZGRiX2FsbG9jID4KPiArCQkJCWlmIChXQVJO
X09OKHdtX2xldmVsLT5taW5fZGRiX2FsbG9jID4KPiAgCQkJCQkgICAgdG90YWxbUExBTkVfQ1VS
U09SXSkpIHsKPiAgCQkJCQlibG9ja3MgPSBVMzJfTUFYOwo+ICAJCQkJCWJyZWFrOwo+IEBAIC00
Mjk4LDggKzQ1MzAsOCBAQCBza2xfYWxsb2NhdGVfcGlwZV9kZGIoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCj4gIAkJCQljb250aW51ZTsKPiAgCQkJfQo+ICAKPiAtCQkJYmxv
Y2tzICs9IHdtLT53bVtsZXZlbF0ubWluX2RkYl9hbGxvYzsKPiAtCQkJYmxvY2tzICs9IHdtLT51
dl93bVtsZXZlbF0ubWluX2RkYl9hbGxvYzsKPiArCQkJYmxvY2tzICs9IHdtX2xldmVsLT5taW5f
ZGRiX2FsbG9jOwo+ICsJCQlibG9ja3MgKz0gd21fdXZfbGV2ZWwtPm1pbl9kZGJfYWxsb2M7Cj4g
IAkJfQo+ICAKPiAgCQlpZiAoYmxvY2tzIDw9IGFsbG9jX3NpemUpIHsKPiBAQCAtNDMyMCwxMiAr
NDU1MiwxNiBAQCBza2xfYWxsb2NhdGVfcGlwZV9kZGIoc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCj4gIAkgKiB3YXRlcm1hcmsgbGV2ZWwsIHBsdXMgYW4gZXh0cmEgc2hhcmUg
b2YgdGhlIGxlZnRvdmVyIGJsb2Nrcwo+ICAJICogcHJvcG9ydGlvbmFsIHRvIGl0cyByZWxhdGl2
ZSBkYXRhIHJhdGUuCj4gIAkgKi8KPiAtCWZvcl9lYWNoX3BsYW5lX2lkX29uX2NydGMoaW50ZWxf
Y3J0YywgcGxhbmVfaWQpIHsKPiAtCQljb25zdCBzdHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9Cj4g
LQkJCSZjcnRjX3N0YXRlLT53bS5za2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOwo+ICsJZm9y
X2VhY2hfaW50ZWxfcGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgaW50ZWxfY3J0YywgcGxh
bmUpIHsKPiAgCQl1NjQgcmF0ZTsKPiAgCQl1MTYgZXh0cmE7Cj4gIAo+ICsJCXBsYW5lX2lkID0g
cGxhbmUtPmlkOwo+ICsJCXdtX2xldmVsID0gc2tsX3BsYW5lX3dtX2xldmVsKHBsYW5lLCBjcnRj
X3N0YXRlLAo+ICsJCQkJCSAgICAgIGxldmVsLCBmYWxzZSk7Cj4gKwkJd21fdXZfbGV2ZWwgPSBz
a2xfcGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCj4gKwkJCQkJCSBsZXZlbCwgdHJ1
ZSk7Cj4gKwo+ICAJCWlmIChwbGFuZV9pZCA9PSBQTEFORV9DVVJTT1IpCj4gIAkJCWNvbnRpbnVl
Owo+ICAKPiBAQCAtNDM0MCw3ICs0NTc2LDcgQEAgc2tsX2FsbG9jYXRlX3BpcGVfZGRiKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAo+ICAJCWV4dHJhID0gbWluX3QodTE2LCBh
bGxvY19zaXplLAo+ICAJCQkgICAgICBESVY2NF9VNjRfUk9VTkRfVVAoYWxsb2Nfc2l6ZSAqIHJh
dGUsCj4gIAkJCQkJCSB0b3RhbF9kYXRhX3JhdGUpKTsKPiAtCQl0b3RhbFtwbGFuZV9pZF0gPSB3
bS0+d21bbGV2ZWxdLm1pbl9kZGJfYWxsb2MgKyBleHRyYTsKPiArCQl0b3RhbFtwbGFuZV9pZF0g
PSB3bV9sZXZlbC0+bWluX2RkYl9hbGxvYyArIGV4dHJhOwo+ICAJCWFsbG9jX3NpemUgLT0gZXh0
cmE7Cj4gIAkJdG90YWxfZGF0YV9yYXRlIC09IHJhdGU7Cj4gIAo+IEBAIC00MzUxLDcgKzQ1ODcs
NyBAQCBza2xfYWxsb2NhdGVfcGlwZV9kZGIoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCj4gIAkJZXh0cmEgPSBtaW5fdCh1MTYsIGFsbG9jX3NpemUsCj4gIAkJCSAgICAgIERJ
VjY0X1U2NF9ST1VORF9VUChhbGxvY19zaXplICogcmF0ZSwKPiAgCQkJCQkJIHRvdGFsX2RhdGFf
cmF0ZSkpOwo+IC0JCXV2X3RvdGFsW3BsYW5lX2lkXSA9IHdtLT51dl93bVtsZXZlbF0ubWluX2Rk
Yl9hbGxvYyArIGV4dHJhOwo+ICsJCXV2X3RvdGFsW3BsYW5lX2lkXSA9IHdtX3V2X2xldmVsLT5t
aW5fZGRiX2FsbG9jICsgZXh0cmE7Cj4gIAkJYWxsb2Nfc2l6ZSAtPSBleHRyYTsKPiAgCQl0b3Rh
bF9kYXRhX3JhdGUgLT0gcmF0ZTsKPiAgCX0KPiBAQCAtNDM5Miw5ICs0NjI4LDE0IEBAIHNrbF9h
bGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAg
CSAqIHRoYXQgYXJlbid0IGFjdHVhbGx5IHBvc3NpYmxlLgo+ICAJICovCj4gIAlmb3IgKGxldmVs
Kys7IGxldmVsIDw9IGlsa193bV9tYXhfbGV2ZWwoZGV2X3ByaXYpOyBsZXZlbCsrKSB7Cj4gLQkJ
Zm9yX2VhY2hfcGxhbmVfaWRfb25fY3J0YyhpbnRlbF9jcnRjLCBwbGFuZV9pZCkgewo+ICsJCWZv
cl9lYWNoX2ludGVsX3BsYW5lX29uX2NydGMoJmRldl9wcml2LT5kcm0sIGludGVsX2NydGMsIHBs
YW5lKSB7Cj4gIAkJCXN0cnVjdCBza2xfcGxhbmVfd20gKndtID0KPiAtCQkJCSZjcnRjX3N0YXRl
LT53bS5za2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOwo+ICsJCQkJJmNydGNfc3RhdGUtPndt
LnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZS0+aWRdOwo+ICsKPiArCQkJd21fbGV2ZWwgPSBza2xf
cGxhbmVfd21fbGV2ZWwocGxhbmUsIGNydGNfc3RhdGUsCj4gKwkJCQkJCSAgICAgIGxldmVsLCBm
YWxzZSk7Cj4gKwkJCXdtX3V2X2xldmVsID0gc2tsX3BsYW5lX3dtX2xldmVsKHBsYW5lLCBjcnRj
X3N0YXRlLAo+ICsJCQkJCQkgICAgICBsZXZlbCwgdHJ1ZSk7Cj4gIAo+ICAJCQkvKgo+ICAJCQkg
KiBXZSBvbmx5IGRpc2FibGUgdGhlIHdhdGVybWFya3MgZm9yIGVhY2ggcGxhbmUgaWYKPiBAQCAt
NDQwOCw5ICs0NjQ5LDEwIEBAIHNrbF9hbGxvY2F0ZV9waXBlX2RkYihzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAgCQkJICogIHBsYW5lcyBtdXN0IGJlIGVuYWJsZWQgYmVm
b3JlIHRoZSBsZXZlbCB3aWxsIGJlIHVzZWQuIgo+ICAJCQkgKiBTbyB0aGlzIGlzIGFjdHVhbGx5
IHNhZmUgdG8gZG8uCj4gIAkJCSAqLwo+IC0JCQlpZiAod20tPndtW2xldmVsXS5taW5fZGRiX2Fs
bG9jID4gdG90YWxbcGxhbmVfaWRdIHx8Cj4gLQkJCSAgICB3bS0+dXZfd21bbGV2ZWxdLm1pbl9k
ZGJfYWxsb2MgPiB1dl90b3RhbFtwbGFuZV9pZF0pCj4gLQkJCQltZW1zZXQoJndtLT53bVtsZXZl
bF0sIDAsIHNpemVvZih3bS0+d21bbGV2ZWxdKSk7Cj4gKwkJCWlmICh3bV9sZXZlbC0+bWluX2Rk
Yl9hbGxvYyA+IHRvdGFsW3BsYW5lLT5pZF0gfHwKPiArCQkJICAgIHdtX3V2X2xldmVsLT5taW5f
ZGRiX2FsbG9jID4gdXZfdG90YWxbcGxhbmUtPmlkXSkKPiArCQkJCW1lbXNldCgmd20tPndtW2xl
dmVsXSwgMCwKPiArCQkJCSAgICAgICBzaXplb2Yoc3RydWN0IHNrbF93bV9sZXZlbCkpOwo+ICAK
PiAgCQkJLyoKPiAgCQkJICogV2FfMTQwODk2MTAwODppY2wsIGVobAo+IEBAIC00NDE4LDkgKzQ2
NjAsMTQgQEAgc2tsX2FsbG9jYXRlX3BpcGVfZGRiKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlLAo+ICAJCQkgKi8KPiAgCQkJaWYgKElTX0dFTihkZXZfcHJpdiwgMTEpICYmCj4g
IAkJCSAgICBsZXZlbCA9PSAxICYmIHdtLT53bVswXS5wbGFuZV9lbikgewo+IC0JCQkJd20tPndt
W2xldmVsXS5wbGFuZV9yZXNfYiA9IHdtLT53bVswXS5wbGFuZV9yZXNfYjsKPiAtCQkJCXdtLT53
bVtsZXZlbF0ucGxhbmVfcmVzX2wgPSB3bS0+d21bMF0ucGxhbmVfcmVzX2w7Cj4gLQkJCQl3bS0+
d21bbGV2ZWxdLmlnbm9yZV9saW5lcyA9IHdtLT53bVswXS5pZ25vcmVfbGluZXM7Cj4gKwkJCQl3
bV9sZXZlbCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwgY3J0Y19zdGF0ZSwKPiArCQkJCQkJ
CSAgICAgIDAsIGZhbHNlKTsKPiArCQkJCXdtLT53bVtsZXZlbF0ucGxhbmVfcmVzX2IgPQo+ICsJ
CQkJCXdtX2xldmVsLT5wbGFuZV9yZXNfYjsKPiArCQkJCXdtLT53bVtsZXZlbF0ucGxhbmVfcmVz
X2wgPQo+ICsJCQkJCXdtX2xldmVsLT5wbGFuZV9yZXNfbDsKPiArCQkJCXdtLT53bVtsZXZlbF0u
aWdub3JlX2xpbmVzID0KPiArCQkJCQl3bV9sZXZlbC0+aWdub3JlX2xpbmVzOwo+ICAJCQl9Cj4g
IAkJfQo+ICAJfQo+IEBAIC00NjQ5LDEyICs0ODk2LDEyIEBAIHN0YXRpYyBib29sIHNrbF93bV9o
YXNfbGluZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBpbnQgbGV2ZWwpCj4g
IAo+ICBzdGF0aWMgdm9pZCBza2xfY29tcHV0ZV9wbGFuZV93bShjb25zdCBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAgCQkJCSBpbnQgbGV2ZWwsCj4gKwkJCQkgdTMyIGxh
dGVuY3ksCj4gIAkJCQkgY29uc3Qgc3RydWN0IHNrbF93bV9wYXJhbXMgKndwLAo+ICAJCQkJIGNv
bnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKnJlc3VsdF9wcmV2LAo+ICAJCQkJIHN0cnVjdCBza2xf
d21fbGV2ZWwgKnJlc3VsdCAvKiBvdXQgKi8pCj4gIHsKPiAgCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOwo+IC0J
dTMyIGxhdGVuY3kgPSBkZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbbGV2ZWxdOwo+ICAJdWludF9m
aXhlZF8xNl8xNl90IG1ldGhvZDEsIG1ldGhvZDI7Cj4gIAl1aW50X2ZpeGVkXzE2XzE2X3Qgc2Vs
ZWN0ZWRfcmVzdWx0Owo+ICAJdTMyIHJlc19ibG9ja3MsIHJlc19saW5lcywgbWluX2RkYl9hbGxv
YyA9IDA7Cj4gQEAgLTQ3NzUsMjAgKzUwMjIsNDUgQEAgc3RhdGljIHZvaWQgc2tsX2NvbXB1dGVf
cGxhbmVfd20oY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCj4gIHN0
YXRpYyB2b2lkCj4gIHNrbF9jb21wdXRlX3dtX2xldmVscyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKPiAgCQkgICAgICBjb25zdCBzdHJ1Y3Qgc2tsX3dtX3BhcmFt
cyAqd21fcGFyYW1zLAo+IC0JCSAgICAgIHN0cnVjdCBza2xfd21fbGV2ZWwgKmxldmVscykKPiAr
CQkgICAgICBzdHJ1Y3Qgc2tsX3BsYW5lX3dtICpwbGFuZV93bSwKPiArCQkgICAgICBib29sIHl1
dikKPiAgewo+ICAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShj
cnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7Cj4gIAlpbnQgbGV2ZWwsIG1heF9sZXZlbCA9IGls
a193bV9tYXhfbGV2ZWwoZGV2X3ByaXYpOwo+ICsJLyoKPiArCSAqIENoZWNrIHdoaWNoIGtpbmQg
b2YgcGxhbmUgaXMgaXQgYW5kIGJhc2VkIG9uIHRoYXQgY2FsY3VsYXRlCj4gKwkgKiBjb3JyZXNw
b25kZW50IFdNIGxldmVscy4KPiArCSAqLwo+ICsJc3RydWN0IHNrbF93bV9sZXZlbCAqbGV2ZWxz
ID0geXV2ID8gcGxhbmVfd20tPnV2X3dtIDogcGxhbmVfd20tPndtOwo+ICAJc3RydWN0IHNrbF93
bV9sZXZlbCAqcmVzdWx0X3ByZXYgPSAmbGV2ZWxzWzBdOwo+ICAKPiAgCWZvciAobGV2ZWwgPSAw
OyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKPiAgCQlzdHJ1Y3Qgc2tsX3dtX2xldmVs
ICpyZXN1bHQgPSAmbGV2ZWxzW2xldmVsXTsKPiArCQl1MzIgbGF0ZW5jeSA9IGRldl9wcml2LT53
bS5za2xfbGF0ZW5jeVtsZXZlbF07Cj4gIAo+IC0JCXNrbF9jb21wdXRlX3BsYW5lX3dtKGNydGNf
c3RhdGUsIGxldmVsLCB3bV9wYXJhbXMsCj4gLQkJCQkgICAgIHJlc3VsdF9wcmV2LCByZXN1bHQp
Owo+ICsJCXNrbF9jb21wdXRlX3BsYW5lX3dtKGNydGNfc3RhdGUsIGxldmVsLCBsYXRlbmN5LAo+
ICsJCQkJICAgICB3bV9wYXJhbXMsIHJlc3VsdF9wcmV2LCByZXN1bHQpOwo+ICAKPiAgCQlyZXN1
bHRfcHJldiA9IHJlc3VsdDsKPiAgCX0KPiArCS8qCj4gKwkgKiBGb3IgR2VuMTIgaWYgaXQgaXMg
YW4gTDAgd2UgbmVlZCB0byBhbHNvCj4gKwkgKiBjb25zaWRlciBzYWd2X2Jsb2NrX3RpbWUgd2hl
biBjYWxjdWxhdGluZwo+ICsJICogTDAgd2F0ZXJtYXJrIC0gd2Ugd2lsbCBuZWVkIHRoYXQgd2hl
biBtYWtpbmcKPiArCSAqIGEgZGVjaXNpb24gd2hldGhlciBlbmFibGUgU0FHViBvciBub3QuCj4g
KwkgKiBGb3Igb2xkZXIgZ2VucyB3ZSBhZ3JlZWQgdG8gY29weSBMMCB2YWx1ZSBmb3IKPiArCSAq
IGNvbXBhdGliaWxpdHkuCj4gKwkgKi8KPiArCWlmICgoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MikpIHsKPiArCQl1MzIgbGF0ZW5jeSA9IGRldl9wcml2LT53bS5za2xfbGF0ZW5jeVswXTsKPiAr
Cj4gKwkJbGF0ZW5jeSArPSBkZXZfcHJpdi0+c2Fndl9ibG9ja190aW1lX3VzOwo+ICsJCXNrbF9j
b21wdXRlX3BsYW5lX3dtKGNydGNfc3RhdGUsIDAsIGxhdGVuY3ksCj4gKwkJICAgICB3bV9wYXJh
bXMsICZsZXZlbHNbMF0sCj4gKwkJICAgICZwbGFuZV93bS0+c2Fndl93bTApOwo+ICsJfSBlbHNl
Cj4gKwkJbWVtY3B5KCZwbGFuZV93bS0+c2Fndl93bTAsICZsZXZlbHNbMF0sCj4gKwkJCXNpemVv
ZihzdHJ1Y3Qgc2tsX3dtX2xldmVsKSk7Cj4gIH0KPiAgCj4gIHN0YXRpYyB1MzIKPiBAQCAtNDg4
MSw3ICs1MTUzLDcgQEAgc3RhdGljIGludCBza2xfYnVpbGRfcGxhbmVfd21fc2luZ2xlKHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAo+ICAJaWYgKHJldCkKPiAgCQlyZXR1cm4g
cmV0Owo+ICAKPiAtCXNrbF9jb21wdXRlX3dtX2xldmVscyhjcnRjX3N0YXRlLCAmd21fcGFyYW1z
LCB3bS0+d20pOwo+ICsJc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtLCBmYWxzZSk7Cj4gIAlza2xfY29tcHV0ZV90cmFuc2l0aW9uX3dtKGNydGNfc3RhdGUs
ICZ3bV9wYXJhbXMsIHdtKTsKPiAgCj4gIAlyZXR1cm4gMDsKPiBAQCAtNDkwMyw3ICs1MTc1LDcg
QEAgc3RhdGljIGludCBza2xfYnVpbGRfcGxhbmVfd21fdXYoc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUsCj4gIAlpZiAocmV0KQo+ICAJCXJldHVybiByZXQ7Cj4gIAo+IC0Jc2ts
X2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJhbXMsIHdtLT51dl93bSk7Cj4g
Kwlza2xfY29tcHV0ZV93bV9sZXZlbHMoY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20sIHRydWUp
Owo+ICAKPiAgCXJldHVybiAwOwo+ICB9Cj4gQEAgLTUwNDAsMTAgKzUzMTIsMTMgQEAgdm9pZCBz
a2xfd3JpdGVfcGxhbmVfd20oc3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKPiAgCQkmY3J0Y19z
dGF0ZS0+d20uc2tsLnBsYW5lX2RkYl95W3BsYW5lX2lkXTsKPiAgCWNvbnN0IHN0cnVjdCBza2xf
ZGRiX2VudHJ5ICpkZGJfdXYgPQo+ICAJCSZjcnRjX3N0YXRlLT53bS5za2wucGxhbmVfZGRiX3V2
W3BsYW5lX2lkXTsKPiArCWNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKndtX2xldmVsOwo+ICAK
PiAgCWZvciAobGV2ZWwgPSAwOyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKPiArCQl3
bV9sZXZlbCA9IHNrbF9wbGFuZV93bV9sZXZlbChwbGFuZSwgY3J0Y19zdGF0ZSwgbGV2ZWwsIGZh
bHNlKTsKPiArCj4gIAkJc2tsX3dyaXRlX3dtX2xldmVsKGRldl9wcml2LCBQTEFORV9XTShwaXBl
LCBwbGFuZV9pZCwgbGV2ZWwpLAo+IC0JCQkJICAgJndtLT53bVtsZXZlbF0pOwo+ICsJCQkJICAg
d21fbGV2ZWwpOwo+ICAJfQo+ICAJc2tsX3dyaXRlX3dtX2xldmVsKGRldl9wcml2LCBQTEFORV9X
TV9UUkFOUyhwaXBlLCBwbGFuZV9pZCksCj4gIAkJCSAgICZ3bS0+dHJhbnNfd20pOwo+IEBAIC01
MDc0LDEwICs1MzQ5LDEzIEBAIHZvaWQgc2tsX3dyaXRlX2N1cnNvcl93bShzdHJ1Y3QgaW50ZWxf
cGxhbmUgKnBsYW5lLAo+ICAJCSZjcnRjX3N0YXRlLT53bS5za2wub3B0aW1hbC5wbGFuZXNbcGxh
bmVfaWRdOwo+ICAJY29uc3Qgc3RydWN0IHNrbF9kZGJfZW50cnkgKmRkYiA9Cj4gIAkJJmNydGNf
c3RhdGUtPndtLnNrbC5wbGFuZV9kZGJfeVtwbGFuZV9pZF07Cj4gKwljb25zdCBzdHJ1Y3Qgc2ts
X3dtX2xldmVsICp3bV9sZXZlbDsKPiAgCj4gIAlmb3IgKGxldmVsID0gMDsgbGV2ZWwgPD0gbWF4
X2xldmVsOyBsZXZlbCsrKSB7Cj4gKwkJd21fbGV2ZWwgPSBza2xfcGxhbmVfd21fbGV2ZWwocGxh
bmUsIGNydGNfc3RhdGUsIGxldmVsLCBmYWxzZSk7Cj4gKwo+ICAJCXNrbF93cml0ZV93bV9sZXZl
bChkZXZfcHJpdiwgQ1VSX1dNKHBpcGUsIGxldmVsKSwKPiAtCQkJCSAgICZ3bS0+d21bbGV2ZWxd
KTsKPiArCQkJCSAgIHdtX2xldmVsKTsKPiAgCX0KPiAgCXNrbF93cml0ZV93bV9sZXZlbChkZXZf
cHJpdiwgQ1VSX1dNX1RSQU5TKHBpcGUpLCAmd20tPnRyYW5zX3dtKTsKPiAgCj4gQEAgLTU0NTEs
MTggKzU3MjksNzMgQEAgc3RhdGljIGludCBza2xfd21fYWRkX2FmZmVjdGVkX3BsYW5lcyhzdHJ1
Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKPiAgCXJldHVybiAwOwo+ICB9Cj4gIAo+ICtz
dGF0aWMgdm9pZCB0Z2xfc2V0X3NhZ3ZfbWFzayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSkKPiArewo+ICsJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkx
NShzdGF0ZS0+YmFzZS5kZXYpOwo+ICsJc3RydWN0IGludGVsX2NydGMgKmNydGM7Cj4gKwlzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7Cj4gKwlzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGU7Cj4gKwlzdHJ1Y3Qgc2tsX2RkYl9hbGxvY2F0aW9uICpk
ZGIgPSAmc3RhdGUtPndtX3Jlc3VsdHMuZGRiOwo+ICsJaW50IHJldDsKPiArCWludCBpOwo+ICsJ
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsKPiArCj4gKwlpZiAoc3RhdGUtPmNydGNfc2Fndl9t
YXNrX3NldCkKPiArCQlyZXR1cm47Cj4gKwo+ICsJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNf
aW5fc3RhdGUoc3RhdGUsIGNydGMsIG9sZF9jcnRjX3N0YXRlLAo+ICsJCQkJCSAgICBuZXdfY3J0
Y19zdGF0ZSwgaSkgewo+ICsJCWludCBwaXBlX2JpdCA9IEJJVChjcnRjLT5waXBlKTsKPiArCQli
b29sIHNraXAgPSB0cnVlOwo+ICsKPiArCQkvKgo+ICsJCSAqIElmIHdlIGhhZCBzZXQgdGhpcyBt
YXN0IGFscmVhZHkgb25jZSBmb3IgdGhpcyBzdGF0ZSwKPiArCQkgKiBubyBuZWVkIHRvIHdhc3Rl
IENQVSBjeWNsZXMgZm9yIGRvaW5nIHRoaXMgYWdhaW4uCj4gKwkJICovCj4gKwkJZm9yX2VhY2hf
aW50ZWxfcGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgY3J0YywgcGxhbmUpIHsKPiArCQkJ
ZW51bSBwbGFuZV9pZCBwbGFuZV9pZCA9IHBsYW5lLT5pZDsKPiArCj4gKwkJCWlmICghc2tsX3Bs
YW5lX3dtX2VxdWFscyhkZXZfcHJpdiwKPiArCQkJCSZvbGRfY3J0Y19zdGF0ZS0+d20uc2tsLm9w
dGltYWwucGxhbmVzW3BsYW5lX2lkXSwKPiArCQkJCSZuZXdfY3J0Y19zdGF0ZS0+d20uc2tsLm9w
dGltYWwucGxhbmVzW3BsYW5lX2lkXSkpIHsKPiArCQkJCXNraXAgPSBmYWxzZTsKPiArCQkJCWJy
ZWFrOwo+ICsJCQl9Cj4gKwkJfQo+ICsKPiArCQkvKgo+ICsJCSAqIENoZWNrIGlmIHdtIGxldmVs
cyBhcmUgYWN0dWFsbHkgdGhlIHNhbWUgYXMgZm9yIHByZXZpb3VzCj4gKwkJICogc3RhdGUsIHdo
aWNoIG1lYW5zIHdlIGNhbiBqdXN0IHNraXAgZG9pbmcgdGhpcyBsb25nIGNoZWNrCj4gKwkJICog
YW5kIGp1c3QgIGNvcHkgY29ycmVzcG9uZGVudCBiaXQgZnJvbSBwcmV2aW91cyBzdGF0ZS4KPiAr
CQkgKi8KPiArCQlpZiAoc2tpcCkKPiArCQkJY29udGludWU7Cj4gKwo+ICsJCXJldCA9IHRnbF9j
aGVja19waXBlX2ZpdHNfc2Fndl93bShuZXdfY3J0Y19zdGF0ZSwgZGRiKTsKPiArCQlpZiAoIXJl
dCkKPiArCQkJc3RhdGUtPmNydGNfc2Fndl9tYXNrIHw9IHBpcGVfYml0Owo+ICsJCWVsc2UKPiAr
CQkJc3RhdGUtPmNydGNfc2Fndl9tYXNrICY9IH5waXBlX2JpdDsKPiArCX0KPiArCXN0YXRlLT5j
cnRjX3NhZ3ZfbWFza19zZXQgPSB0cnVlOwo+ICt9Cj4gKwo+ICBzdGF0aWMgaW50Cj4gIHNrbF9j
b21wdXRlX3dtKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQo+ICB7Cj4gIAlzdHJ1
Y3QgaW50ZWxfY3J0YyAqY3J0YzsKPiAgCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0
Y19zdGF0ZTsKPiAgCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZTsKPiAt
CXN0cnVjdCBza2xfZGRiX3ZhbHVlcyAqcmVzdWx0cyA9ICZzdGF0ZS0+d21fcmVzdWx0czsKPiAg
CWludCByZXQsIGk7Cj4gKwlzdHJ1Y3Qgc2tsX2RkYl92YWx1ZXMgKnJlc3VsdHMgPSAmc3RhdGUt
PndtX3Jlc3VsdHM7Cj4gKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19p
OTE1KHN0YXRlLT5iYXNlLmRldik7Cj4gIAo+ICAJLyogQ2xlYXIgYWxsIGRpcnR5IGZsYWdzICov
Cj4gIAlyZXN1bHRzLT5kaXJ0eV9waXBlcyA9IDA7Cj4gIAo+ICsJLyogSWYgd2UgZXhpdCBiZWZv
cmUgY2hlY2sgaXMgZG9uZSAqLwo+ICsJc3RhdGUtPmNydGNfc2Fndl9tYXNrID0gZGV2X3ByaXYt
PmNydGNfc2Fndl9tYXNrOwo+ICsKPiAgCXJldCA9IHNrbF9kZGJfYWRkX2FmZmVjdGVkX3BpcGVz
KHN0YXRlKTsKPiAgCWlmIChyZXQpCj4gIAkJcmV0dXJuIHJldDsKPiBAQCAtNTYzOCw2ICs1OTcx
LDkgQEAgdm9pZCBza2xfcGlwZV93bV9nZXRfaHdfc3RhdGUoc3RydWN0IGludGVsX2NydGMgKmNy
dGMsCj4gIAkJCQl2YWwgPSBJOTE1X1JFQUQoQ1VSX1dNKHBpcGUsIGxldmVsKSk7Cj4gIAo+ICAJ
CQlza2xfd21fbGV2ZWxfZnJvbV9yZWdfdmFsKHZhbCwgJndtLT53bVtsZXZlbF0pOwo+ICsJCQlp
ZiAobGV2ZWwgPT0gMCkKPiArCQkJCW1lbWNweSgmd20tPnNhZ3Zfd20wLCAmd20tPndtW2xldmVs
XSwKPiArCQkJCQlzaXplb2Yoc3RydWN0IHNrbF93bV9sZXZlbCkpOwo+ICAJCX0KPiAgCj4gIAkJ
aWYgKHBsYW5lX2lkICE9IFBMQU5FX0NVUlNPUikKPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmgKPiBp
bmRleCBiNTc5YzcyNGI5MTUuLjUzMjc1ODYwNzMxYSAxMDA2NDQKPiAtLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9wbS5oCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uaAo+IEBAIC00Myw2ICs0Myw3IEBAIHZvaWQgc2tsX3BpcGVfd21fZ2V0X2h3X3N0YXRlKHN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjLAo+ICB2b2lkIGc0eF93bV9zYW5pdGl6ZShzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwo+ICB2b2lkIHZsdl93bV9zYW5pdGl6ZShzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwo+ICBib29sIGludGVsX2Nhbl9lbmFibGVfc2Fn
dihzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7Cj4gK2Jvb2wgaW50ZWxfaGFzX3Nh
Z3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKPiAgaW50IGludGVsX2VuYWJs
ZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Cj4gIGludCBpbnRlbF9k
aXNhYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKPiAgYm9vbCBz
a2xfd21fbGV2ZWxfZXF1YWxzKGNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKmwxLAo+IC0tIAo+
IDIuMTcuMQo+IAoKLS0gCk1hdHQgUm9wZXIKR3JhcGhpY3MgU29mdHdhcmUgRW5naW5lZXIKVlRU
LU9TR0MgUGxhdGZvcm0gRW5hYmxlbWVudApJbnRlbCBDb3Jwb3JhdGlvbgooOTE2KSAzNTYtMjc5
NQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1n
ZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9s
aXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 7C48C11322A
	for <lists+intel-gfx@lfdr.de>; Wed,  4 Dec 2019 19:06:25 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AE0B16F4BB;
	Wed,  4 Dec 2019 18:06:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 18D826F4BB
 for <intel-gfx@lists.freedesktop.org>; Wed,  4 Dec 2019 18:06:23 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Dec 2019 10:06:22 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,278,1571727600"; d="scan'208";a="242935753"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by fmsmga002.fm.intel.com with SMTP; 04 Dec 2019 10:06:19 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Wed, 04 Dec 2019 20:06:18 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed,  4 Dec 2019 20:05:48 +0200
Message-Id: <20191204180549.1267-9-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191204180549.1267-1-ville.syrjala@linux.intel.com>
References: <20191204180549.1267-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 8/9] drm/i915: Rename conn_to_dig_port() to
 intel_attached_dig_port()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KClVz
ZSB0aGUgc3RhbmRhcmQgbmFtaW5nIGNvbnZlbnRpb24gYW5kIHJlbmFtZSBjb25uX3RvX2RpZ19w
b3J0KCkKdG8gaW50ZWxfYXR0YWNoZWRfZGlnX3BvcnQoKS4KCkBACkBACi0gY29ubl90b19kaWdf
cG9ydAorIGludGVsX2F0dGFjaGVkX2RpZ19wb3J0CgkoLi4uKQp7Ci4uLgp9CgpAQApleHByZXNz
aW9uIEM7CkBACi0gY29ubl90b19kaWdfcG9ydChDKQorIGludGVsX2F0dGFjaGVkX2RpZ19wb3J0
KEMpCgpTaWduZWQtb2ZmLWJ5OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXgu
aW50ZWwuY29tPgotLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMu
aCAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hkY3AuYyAg
ICAgfCAzMiArKysrKysrKystLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2hkbWkuYyAgICAgfCAgMiArLQogMyBmaWxlcyBjaGFuZ2VkLCAxOCBpbnNlcnRpb25z
KCspLCAxOCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IDkyYmQzZDA0YWQ4MC4uMWY4ZjQ3YzY5NTAy
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaApAQCAtMTQ2Niw3ICsxNDY2LDcgQEAgZW5jX3RvX2RpZ19wb3J0KHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyKQogfQogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBpbnRlbF9kaWdp
dGFsX3BvcnQgKgotY29ubl90b19kaWdfcG9ydChzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25u
ZWN0b3IpCitpbnRlbF9hdHRhY2hlZF9kaWdfcG9ydChzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpj
b25uZWN0b3IpCiB7CiAJcmV0dXJuIGVuY190b19kaWdfcG9ydChpbnRlbF9hdHRhY2hlZF9lbmNv
ZGVyKGNvbm5lY3RvcikpOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9oZGNwLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2hk
Y3AuYwppbmRleCAyODU5MjMwNjcxYWUuLjRiNzMyMjc2NDRmMCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9oZGNwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9oZGNwLmMKQEAgLTY0LDcgKzY0LDcgQEAgaW50IGludGVsX2hk
Y3BfcmVhZF92YWxpZF9ia3N2KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19w
b3J0LAogLyogSXMgSERDUDEuNCBjYXBhYmxlIG9uIFBsYXRmb3JtIGFuZCBTaW5rICovCiBib29s
IGludGVsX2hkY3BfY2FwYWJsZShzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiB7
Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBjb25uX3RvX2Rp
Z19wb3J0KGNvbm5lY3Rvcik7CisJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGln
X3BvcnQgPSBpbnRlbF9hdHRhY2hlZF9kaWdfcG9ydChjb25uZWN0b3IpOwogCWNvbnN0IHN0cnVj
dCBpbnRlbF9oZGNwX3NoaW0gKnNoaW0gPSBjb25uZWN0b3ItPmhkY3Auc2hpbTsKIAlib29sIGNh
cGFibGUgPSBmYWxzZTsKIAl1OCBia3N2WzVdOwpAQCAtODYsNyArODYsNyBAQCBib29sIGludGVs
X2hkY3BfY2FwYWJsZShzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiBib29sIGlu
dGVsX2hkY3AyX2NhcGFibGUoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewog
CXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY29ubmVjdG9yLT5i
YXNlLmRldik7Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBj
b25uX3RvX2RpZ19wb3J0KGNvbm5lY3Rvcik7CisJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAq
aW50ZWxfZGlnX3BvcnQgPSBpbnRlbF9hdHRhY2hlZF9kaWdfcG9ydChjb25uZWN0b3IpOwogCXN0
cnVjdCBpbnRlbF9oZGNwICpoZGNwID0gJmNvbm5lY3Rvci0+aGRjcDsKIAlib29sIGNhcGFibGUg
PSBmYWxzZTsKIApAQCAtMjk3LDcgKzI5Nyw3IEBAIGludCBpbnRlbF9oZGNwX3ZhbGlkYXRlX3Zf
cHJpbWUoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yLAogCQkJCWNvbnN0IHN0cnVj
dCBpbnRlbF9oZGNwX3NoaW0gKnNoaW0sCiAJCQkJdTggKmtzdl9maWZvLCB1OCBudW1fZG93bnN0
cmVhbSwgdTggKmJzdGF0dXMpCiB7Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxf
ZGlnX3BvcnQgPSBjb25uX3RvX2RpZ19wb3J0KGNvbm5lY3Rvcik7CisJc3RydWN0IGludGVsX2Rp
Z2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBpbnRlbF9hdHRhY2hlZF9kaWdfcG9ydChjb25u
ZWN0b3IpOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdjsKIAllbnVtIHRyYW5z
Y29kZXIgY3B1X3RyYW5zY29kZXIgPSBjb25uZWN0b3ItPmhkY3AuY3B1X3RyYW5zY29kZXI7CiAJ
ZW51bSBwb3J0IHBvcnQgPSBpbnRlbF9kaWdfcG9ydC0+YmFzZS5wb3J0OwpAQCAtNTEzLDcgKzUx
Myw3IEBAIGludCBpbnRlbF9oZGNwX3ZhbGlkYXRlX3ZfcHJpbWUoc3RydWN0IGludGVsX2Nvbm5l
Y3RvciAqY29ubmVjdG9yLAogc3RhdGljCiBpbnQgaW50ZWxfaGRjcF9hdXRoX2Rvd25zdHJlYW0o
c3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewotCXN0cnVjdCBpbnRlbF9kaWdp
dGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdfcG9ydChjb25uZWN0b3IpOwor
CXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gaW50ZWxfYXR0YWNo
ZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAljb25zdCBzdHJ1Y3QgaW50ZWxfaGRjcF9zaGltICpz
aGltID0gY29ubmVjdG9yLT5oZGNwLnNoaW07CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNv
bm5lY3Rvci0+YmFzZS5kZXY7CiAJdTggYnN0YXR1c1syXSwgbnVtX2Rvd25zdHJlYW0sICprc3Zf
ZmlmbzsKQEAgLTU5Miw3ICs1OTIsNyBAQCBpbnQgaW50ZWxfaGRjcF9hdXRoX2Rvd25zdHJlYW0o
c3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogLyogSW1wbGVtZW50cyBQYXJ0IDEg
b2YgdGhlIEhEQ1AgYXV0aG9yaXphdGlvbiBwcm9jZWR1cmUgKi8KIHN0YXRpYyBpbnQgaW50ZWxf
aGRjcF9hdXRoKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcikKIHsKLQlzdHJ1Y3Qg
aW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGNvbm5fdG9fZGlnX3BvcnQoY29u
bmVjdG9yKTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGlu
dGVsX2F0dGFjaGVkX2RpZ19wb3J0KGNvbm5lY3Rvcik7CiAJc3RydWN0IGludGVsX2hkY3AgKmhk
Y3AgPSAmY29ubmVjdG9yLT5oZGNwOwogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjb25uZWN0
b3ItPmJhc2UuZGV2OwogCWNvbnN0IHN0cnVjdCBpbnRlbF9oZGNwX3NoaW0gKnNoaW0gPSBoZGNw
LT5zaGltOwpAQCAtNzU3LDcgKzc1Nyw3IEBAIHN0YXRpYyBpbnQgX2ludGVsX2hkY3BfZGlzYWJs
ZShzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiB7CiAJc3RydWN0IGludGVsX2hk
Y3AgKmhkY3AgPSAmY29ubmVjdG9yLT5oZGNwOwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IGNvbm5lY3Rvci0+YmFzZS5kZXYtPmRldl9wcml2YXRlOwotCXN0cnVjdCBpbnRl
bF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdfcG9ydChjb25uZWN0
b3IpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gaW50ZWxf
YXR0YWNoZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAllbnVtIHBvcnQgcG9ydCA9IGludGVsX2Rp
Z19wb3J0LT5iYXNlLnBvcnQ7CiAJZW51bSB0cmFuc2NvZGVyIGNwdV90cmFuc2NvZGVyID0gaGRj
cC0+Y3B1X3RyYW5zY29kZXI7CiAJaW50IHJldDsKQEAgLTgzOCw3ICs4MzgsNyBAQCBzdGF0aWMg
aW50IGludGVsX2hkY3BfY2hlY2tfbGluayhzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0
b3IpCiB7CiAJc3RydWN0IGludGVsX2hkY3AgKmhkY3AgPSAmY29ubmVjdG9yLT5oZGNwOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGNvbm5lY3Rvci0+YmFzZS5kZXYtPmRl
dl9wcml2YXRlOwotCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0g
Y29ubl90b19kaWdfcG9ydChjb25uZWN0b3IpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQg
KmludGVsX2RpZ19wb3J0ID0gaW50ZWxfYXR0YWNoZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAll
bnVtIHBvcnQgcG9ydCA9IGludGVsX2RpZ19wb3J0LT5iYXNlLnBvcnQ7CiAJZW51bSB0cmFuc2Nv
ZGVyIGNwdV90cmFuc2NvZGVyOwogCWludCByZXQgPSAwOwpAQCAtMTIwOSw3ICsxMjA5LDcgQEAg
c3RhdGljIGludCBoZGNwMl9kZWF1dGhlbnRpY2F0ZV9wb3J0KHN0cnVjdCBpbnRlbF9jb25uZWN0
b3IgKmNvbm5lY3RvcikKIC8qIEF1dGhlbnRpY2F0aW9uIGZsb3cgc3RhcnRzIGZyb20gaGVyZSAq
Lwogc3RhdGljIGludCBoZGNwMl9hdXRoZW50aWNhdGlvbl9rZXlfZXhjaGFuZ2Uoc3RydWN0IGlu
dGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewotCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQg
KmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdfcG9ydChjb25uZWN0b3IpOworCXN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gaW50ZWxfYXR0YWNoZWRfZGlnX3Bv
cnQoY29ubmVjdG9yKTsKIAlzdHJ1Y3QgaW50ZWxfaGRjcCAqaGRjcCA9ICZjb25uZWN0b3ItPmhk
Y3A7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IGNvbm5lY3Rvci0+YmFzZS5kZXY7CiAJdW5p
b24gewpAQCAtMTI5Nyw3ICsxMjk3LDcgQEAgc3RhdGljIGludCBoZGNwMl9hdXRoZW50aWNhdGlv
bl9rZXlfZXhjaGFuZ2Uoc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogCiBzdGF0
aWMgaW50IGhkY3AyX2xvY2FsaXR5X2NoZWNrKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5l
Y3RvcikKIHsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGNv
bm5fdG9fZGlnX3BvcnQoY29ubmVjdG9yKTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpp
bnRlbF9kaWdfcG9ydCA9IGludGVsX2F0dGFjaGVkX2RpZ19wb3J0KGNvbm5lY3Rvcik7CiAJc3Ry
dWN0IGludGVsX2hkY3AgKmhkY3AgPSAmY29ubmVjdG9yLT5oZGNwOwogCXVuaW9uIHsKIAkJc3Ry
dWN0IGhkY3AyX2xjX2luaXQgbGNfaW5pdDsKQEAgLTEzMzMsNyArMTMzMyw3IEBAIHN0YXRpYyBp
bnQgaGRjcDJfbG9jYWxpdHlfY2hlY2soc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9y
KQogCiBzdGF0aWMgaW50IGhkY3AyX3Nlc3Npb25fa2V5X2V4Y2hhbmdlKHN0cnVjdCBpbnRlbF9j
b25uZWN0b3IgKmNvbm5lY3RvcikKIHsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRl
bF9kaWdfcG9ydCA9IGNvbm5fdG9fZGlnX3BvcnQoY29ubmVjdG9yKTsKKwlzdHJ1Y3QgaW50ZWxf
ZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGludGVsX2F0dGFjaGVkX2RpZ19wb3J0KGNv
bm5lY3Rvcik7CiAJc3RydWN0IGludGVsX2hkY3AgKmhkY3AgPSAmY29ubmVjdG9yLT5oZGNwOwog
CXN0cnVjdCBoZGNwMl9za2Vfc2VuZF9la3Mgc2VuZF9la3M7CiAJaW50IHJldDsKQEAgLTEzNTMs
NyArMTM1Myw3IEBAIHN0YXRpYyBpbnQgaGRjcDJfc2Vzc2lvbl9rZXlfZXhjaGFuZ2Uoc3RydWN0
IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogc3RhdGljCiBpbnQgaGRjcDJfcHJvcGFnYXRl
X3N0cmVhbV9tYW5hZ2VtZW50X2luZm8oc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9y
KQogewotCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90
b19kaWdfcG9ydChjb25uZWN0b3IpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVs
X2RpZ19wb3J0ID0gaW50ZWxfYXR0YWNoZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAlzdHJ1Y3Qg
aW50ZWxfaGRjcCAqaGRjcCA9ICZjb25uZWN0b3ItPmhkY3A7CiAJdW5pb24gewogCQlzdHJ1Y3Qg
aGRjcDJfcmVwX3N0cmVhbV9tYW5hZ2Ugc3RyZWFtX21hbmFnZTsKQEAgLTE0MDQsNyArMTQwNCw3
IEBAIGludCBoZGNwMl9wcm9wYWdhdGVfc3RyZWFtX21hbmFnZW1lbnRfaW5mbyhzdHJ1Y3QgaW50
ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiBzdGF0aWMKIGludCBoZGNwMl9hdXRoZW50aWNhdGVf
cmVwZWF0ZXJfdG9wb2xvZ3koc3RydWN0IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewot
CXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdf
cG9ydChjb25uZWN0b3IpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19w
b3J0ID0gaW50ZWxfYXR0YWNoZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAlzdHJ1Y3QgaW50ZWxf
aGRjcCAqaGRjcCA9ICZjb25uZWN0b3ItPmhkY3A7CiAJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9
IGNvbm5lY3Rvci0+YmFzZS5kZXY7CiAJdW5pb24gewpAQCAtMTQ3NSw3ICsxNDc1LDcgQEAgc3Rh
dGljIGludCBoZGNwMl9hdXRoZW50aWNhdGVfcmVwZWF0ZXIoc3RydWN0IGludGVsX2Nvbm5lY3Rv
ciAqY29ubmVjdG9yKQogCiBzdGF0aWMgaW50IGhkY3AyX2F1dGhlbnRpY2F0ZV9zaW5rKHN0cnVj
dCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcikKIHsKLQlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9w
b3J0ICppbnRlbF9kaWdfcG9ydCA9IGNvbm5fdG9fZGlnX3BvcnQoY29ubmVjdG9yKTsKKwlzdHJ1
Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGludGVsX2F0dGFjaGVkX2Rp
Z19wb3J0KGNvbm5lY3Rvcik7CiAJc3RydWN0IGludGVsX2hkY3AgKmhkY3AgPSAmY29ubmVjdG9y
LT5oZGNwOwogCWNvbnN0IHN0cnVjdCBpbnRlbF9oZGNwX3NoaW0gKnNoaW0gPSBoZGNwLT5zaGlt
OwogCWludCByZXQ7CkBAIC0xNTI0LDcgKzE1MjQsNyBAQCBzdGF0aWMgaW50IGhkY3AyX2F1dGhl
bnRpY2F0ZV9zaW5rKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcikKIAogc3RhdGlj
IGludCBoZGNwMl9lbmFibGVfZW5jcnlwdGlvbihzdHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25u
ZWN0b3IpCiB7Ci0Jc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqaW50ZWxfZGlnX3BvcnQgPSBj
b25uX3RvX2RpZ19wb3J0KGNvbm5lY3Rvcik7CisJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAq
aW50ZWxfZGlnX3BvcnQgPSBpbnRlbF9hdHRhY2hlZF9kaWdfcG9ydChjb25uZWN0b3IpOwogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY29ubmVjdG9yLT5iYXNl
LmRldik7CiAJc3RydWN0IGludGVsX2hkY3AgKmhkY3AgPSAmY29ubmVjdG9yLT5oZGNwOwogCWVu
dW0gcG9ydCBwb3J0ID0gaW50ZWxfYXR0YWNoZWRfZW5jb2Rlcihjb25uZWN0b3IpLT5wb3J0OwpA
QCAtMTU2Miw3ICsxNTYyLDcgQEAgc3RhdGljIGludCBoZGNwMl9lbmFibGVfZW5jcnlwdGlvbihz
dHJ1Y3QgaW50ZWxfY29ubmVjdG9yICpjb25uZWN0b3IpCiAKIHN0YXRpYyBpbnQgaGRjcDJfZGlz
YWJsZV9lbmNyeXB0aW9uKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcikKIHsKLQlz
dHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9ydCA9IGNvbm5fdG9fZGlnX3Bv
cnQoY29ubmVjdG9yKTsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICppbnRlbF9kaWdfcG9y
dCA9IGludGVsX2F0dGFjaGVkX2RpZ19wb3J0KGNvbm5lY3Rvcik7CiAJc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjb25uZWN0b3ItPmJhc2UuZGV2KTsKIAlzdHJ1
Y3QgaW50ZWxfaGRjcCAqaGRjcCA9ICZjb25uZWN0b3ItPmhkY3A7CiAJZW51bSBwb3J0IHBvcnQg
PSBpbnRlbF9hdHRhY2hlZF9lbmNvZGVyKGNvbm5lY3RvciktPnBvcnQ7CkBAIC0xNjczLDcgKzE2
NzMsNyBAQCBzdGF0aWMgaW50IF9pbnRlbF9oZGNwMl9kaXNhYmxlKHN0cnVjdCBpbnRlbF9jb25u
ZWN0b3IgKmNvbm5lY3RvcikKIC8qIEltcGxlbWVudHMgdGhlIExpbmsgSW50ZWdyaXR5IENoZWNr
IGZvciBIRENQMi4yICovCiBzdGF0aWMgaW50IGludGVsX2hkY3AyX2NoZWNrX2xpbmsoc3RydWN0
IGludGVsX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewotCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3Bv
cnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdfcG9ydChjb25uZWN0b3IpOworCXN0cnVj
dCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gaW50ZWxfYXR0YWNoZWRfZGln
X3BvcnQoY29ubmVjdG9yKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KGNvbm5lY3Rvci0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRlbF9oZGNwICpoZGNwID0g
JmNvbm5lY3Rvci0+aGRjcDsKIAllbnVtIHBvcnQgcG9ydCA9IGludGVsX2F0dGFjaGVkX2VuY29k
ZXIoY29ubmVjdG9yKS0+cG9ydDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfaGRtaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9o
ZG1pLmMKaW5kZXggZTE3OWVlMDQ2Njg3Li41M2EzMjE2NWM1ZmYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfaGRtaS5jCkBAIC0xNDQ3LDcgKzE0NDcsNyBAQCBpbnQgaW50
ZWxfaGRtaV9oZGNwX3JlYWRfdl9wcmltZV9wYXJ0KHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQg
KmludGVsX2RpZ19wb3J0LAogc3RhdGljIGludCBrYmxfcmVwb3NpdGlvbmluZ19lbmNfZW5fc2ln
bmFsKHN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmNvbm5lY3RvcikKIHsKIAlzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNvbm5lY3Rvci0+YmFzZS5kZXYpOwotCXN0
cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0ID0gY29ubl90b19kaWdfcG9y
dChjb25uZWN0b3IpOworCXN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmludGVsX2RpZ19wb3J0
ID0gaW50ZWxfYXR0YWNoZWRfZGlnX3BvcnQoY29ubmVjdG9yKTsKIAlzdHJ1Y3QgZHJtX2NydGMg
KmNydGMgPSBjb25uZWN0b3ItPmJhc2Uuc3RhdGUtPmNydGM7CiAJc3RydWN0IGludGVsX2NydGMg
KmludGVsX2NydGMgPSBjb250YWluZXJfb2YoY3J0YywKIAkJCQkJCSAgICAgc3RydWN0IGludGVs
X2NydGMsIGJhc2UpOwotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

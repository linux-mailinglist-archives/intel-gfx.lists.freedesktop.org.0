Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 228B42B27C1
	for <lists+intel-gfx@lfdr.de>; Fri, 13 Nov 2020 23:04:47 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 5DA806E86A;
	Fri, 13 Nov 2020 22:04:45 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id D32F16E868
 for <intel-gfx@lists.freedesktop.org>; Fri, 13 Nov 2020 22:04:43 +0000 (UTC)
IronPort-SDR: E9NuWzZwzosfOKobQsa0O62vcuPgCaxFvKyv32+UB73lr/8YjEmAIXXcYLgXi9qRzdKQNQlmHB
 fP2pNSiGWMIQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9804"; a="234696392"
X-IronPort-AV: E=Sophos;i="5.77,476,1596524400"; d="scan'208";a="234696392"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 13 Nov 2020 14:04:43 -0800
IronPort-SDR: cg6BTzYE0AsT0tmISejyVbuO2z5JTXAzarlvMsyOG0fenMnihLmmake/nlysU69fo+AO5kwicX
 pWhCoPLOlUAg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.77,476,1596524400"; d="scan'208";a="366866417"
Received: from stinkbox.fi.intel.com (HELO stinkbox) ([10.237.72.174])
 by FMSMGA003.fm.intel.com with SMTP; 13 Nov 2020 14:04:41 -0800
Received: by stinkbox (sSMTP sendmail emulation);
 Sat, 14 Nov 2020 00:04:41 +0200
From: Ville Syrjala <ville.syrjala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat, 14 Nov 2020 00:03:49 +0200
Message-Id: <20201113220358.24794-15-ville.syrjala@linux.intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20201113220358.24794-1-ville.syrjala@linux.intel.com>
References: <20201113220358.24794-1-ville.syrjala@linux.intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 14/23] drm/i915: HW state readout for Bigjoiner
 case
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogTWFuYXNpIE5hdmFyZSA8bWFuYXNpLmQubmF2YXJlQGludGVsLmNvbT4KClNraXAgaXRl
cmF0aW5nIG92ZXIgYmlnam9pbmVyIHNsYXZlcywgb25seSB0aGUgbWFzdGVyIGhhcyB0aGUgc3Rh
dGUgd2UKY2FyZSBhYm91dC4KCkFkZCB0aGUgd2lkdGggb2YgdGhlIGJpZ2pvaW5lciBzbGF2ZSB0
byB0aGUgcmVjb25zdHJ1Y3RlZCBmYi4KCkhpZGUgdGhlIGJpZ2pvaW5lciBzbGF2ZSB0byB1c2Vy
c3BhY2UsIGFuZCBkb3VibGUgdGhlIG1vZGUgb24gYmlnam9pbmVyCm1hc3Rlci4KCkFuZCBsYXN0
LCBkaXNhYmxlIGJpZ2pvaW5lciBzbGF2ZSBmcm9tIHByaW1hcnkgaWYgcmVjb25zdHJ1Y3Rpb24g
ZmFpbHMuCgp2MzoKKiBGaXggdGhlIGRkaV9nZXRfY29uZmlnIHNsYXZlIGVycm9yIChBbmtpdCBO
YXV0aXlhbCkKdjI6CiogVW5zdXBwb3J0ZWQgYmlnam9pbmVyIGNvbmZpZyBmb3IgaW5pdGlhbCBm
YiAoVmlsbGUpCgpTaWduZWQtb2ZmLWJ5OiBNYW5hc2kgTmF2YXJlIDxtYW5hc2kuZC5uYXZhcmVA
aW50ZWwuY29tPgpbdnN5cmphbGE6CiogRG9uJ3QgZG8gYW55IGh3LT51YXBpIHN0YXRlIGNvcHkg
Zm9yIGJpZ2pvaW5lciBzbGF2ZQoqIFdlIHN0aWxsIGhhdmUgaHcubW9kZSBzbyBubyBuZWVkIHRv
IHBhc3MgaXQgaW4KKiBBcHBlYXNlIGNoZWNrcGF0Y2hdClNpZ25lZC1vZmYtYnk6IFZpbGxlIFN5
cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMgICAgICAgIHwgICAyIC0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8ICAzNyArKy0KIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8IDI5MSArKysrKysrKysrKystLS0tLS0K
IC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAgMSArCiA0
IGZpbGVzIGNoYW5nZWQsIDIzMCBpbnNlcnRpb25zKCspLCAxMDEgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYwppbmRleCAwZmVjZjM3MmJlMTEuLjEwNGE0
MjNlMGNkNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNp
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xfZHNpLmMKQEAgLTE0OTIs
OCArMTQ5Miw2IEBAIHN0YXRpYyB2b2lkIGdlbjExX2RzaV9nZXRfY29uZmlnKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxf
Y3J0YyhwaXBlX2NvbmZpZy0+dWFwaS5jcnRjKTsKIAlzdHJ1Y3QgaW50ZWxfZHNpICppbnRlbF9k
c2kgPSBlbmNfdG9faW50ZWxfZHNpKGVuY29kZXIpOwogCi0JaW50ZWxfZHNjX2dldF9jb25maWco
cGlwZV9jb25maWcpOwotCiAJLyogRklYTUU6IGFkYXB0IGljbF9kZGlfY2xvY2tfZ2V0KCkgZm9y
IERTSSBhbmQgdXNlIHRoYXQ/ICovCiAJcGlwZV9jb25maWctPnBvcnRfY2xvY2sgPSBpbnRlbF9k
cGxsX2dldF9mcmVxKGk5MTUsCiAJCQkJCQkgICAgICBwaXBlX2NvbmZpZy0+c2hhcmVkX2RwbGwp
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggOWM0YWQwMzky
MDI1Li5hYTQ0NGM0Mjg5NDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGRpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
ZGkuYwpAQCAtNDU3NiwyMCArNDU3NiwxNCBAQCBzdGF0aWMgdm9pZCBiZHdfZ2V0X3RyYW5zX3Bv
cnRfc3luY19jb25maWcoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCiAJCSAg
ICBjcnRjX3N0YXRlLT5zeW5jX21vZGVfc2xhdmVzX21hc2spOwogfQogCi12b2lkIGludGVsX2Rk
aV9nZXRfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAotCQkJICBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCitzdGF0aWMgdm9pZCBpbnRlbF9kZGlfcmVh
ZF9mdW5jX2N0bChzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkgICAgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOwogCXN0cnVjdCBpbnRl
bF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhwaXBlX2NvbmZpZy0+dWFwaS5jcnRj
KTsKIAllbnVtIHRyYW5zY29kZXIgY3B1X3RyYW5zY29kZXIgPSBwaXBlX2NvbmZpZy0+Y3B1X3Ry
YW5zY29kZXI7CiAJdTMyIHRlbXAsIGZsYWdzID0gMDsKIAotCS8qIFhYWDogRFNJIHRyYW5zY29k
ZXIgcGFyYW5vaWEgKi8KLQlpZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIHRyYW5zY29k
ZXJfaXNfZHNpKGNwdV90cmFuc2NvZGVyKSkpCi0JCXJldHVybjsKLQotCWludGVsX2RzY19nZXRf
Y29uZmlnKHBpcGVfY29uZmlnKTsKLQogCXRlbXAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBU
UkFOU19ERElfRlVOQ19DVEwoY3B1X3RyYW5zY29kZXIpKTsKIAlpZiAodGVtcCAmIFRSQU5TX0RE
SV9QSFNZTkMpCiAJCWZsYWdzIHw9IERSTV9NT0RFX0ZMQUdfUEhTWU5DOwpAQCAtNDY4Myw2ICs0
Njc3LDMwIEBAIHZvaWQgaW50ZWxfZGRpX2dldF9jb25maWcoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCiAJZGVmYXVsdDoKIAkJYnJlYWs7CiAJfQorfQorCit2b2lkIGludGVsX2RkaV9n
ZXRfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJICBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqcGlwZV9jb25maWcpCit7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2ID0gdG9faTkxNShlbmNvZGVyLT5iYXNlLmRldik7CisJZW51bSB0cmFuc2NvZGVy
IGNwdV90cmFuc2NvZGVyID0gcGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyOworCisJLyogWFhY
OiBEU0kgdHJhbnNjb2RlciBwYXJhbm9pYSAqLworCWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYt
PmRybSwgdHJhbnNjb2Rlcl9pc19kc2koY3B1X3RyYW5zY29kZXIpKSkKKwkJcmV0dXJuOworCisJ
aWYgKHBpcGVfY29uZmlnLT5iaWdqb2luZXJfc2xhdmUpIHsKKwkJLyogcmVhZCBvdXQgcGlwZSBz
ZXR0aW5ncyBmcm9tIG1hc3RlciAqLworCQllbnVtIHRyYW5zY29kZXIgc2F2ZSA9IHBpcGVfY29u
ZmlnLT5jcHVfdHJhbnNjb2RlcjsKKworCQkvKiBPdXIgb3duIHRyYW5zY29kZXIgbmVlZHMgdG8g
YmUgZGlzYWJsZWQgd2hlbiByZWFkaW5nIGl0IGluIGludGVsX2RkaV9yZWFkX2Z1bmNfY3RsKCkg
Ki8KKwkJV0FSTl9PTihwaXBlX2NvbmZpZy0+b3V0cHV0X3R5cGVzKTsKKwkJcGlwZV9jb25maWct
PmNwdV90cmFuc2NvZGVyID0gKGVudW0gdHJhbnNjb2RlcilwaXBlX2NvbmZpZy0+Ymlnam9pbmVy
X2xpbmtlZF9jcnRjLT5waXBlOworCQlpbnRlbF9kZGlfcmVhZF9mdW5jX2N0bChlbmNvZGVyLCBw
aXBlX2NvbmZpZyk7CisJCXBpcGVfY29uZmlnLT5jcHVfdHJhbnNjb2RlciA9IHNhdmU7CisJfSBl
bHNlIHsKKwkJaW50ZWxfZGRpX3JlYWRfZnVuY19jdGwoZW5jb2RlciwgcGlwZV9jb25maWcpOwor
CX0KIAogCXBpcGVfY29uZmlnLT5oYXNfYXVkaW8gPQogCQlpbnRlbF9kZGlfaXNfYXVkaW9fZW5h
YmxlZChkZXZfcHJpdiwgY3B1X3RyYW5zY29kZXIpOwpAQCAtNDcwOCw3ICs0NzI2LDggQEAgdm9p
ZCBpbnRlbF9kZGlfZ2V0X2NvbmZpZyhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJ
ZGV2X3ByaXYtPnZidC5lZHAuYnBwID0gcGlwZV9jb25maWctPnBpcGVfYnBwOwogCX0KIAotCWlu
dGVsX2RkaV9jbG9ja19nZXQoZW5jb2RlciwgcGlwZV9jb25maWcpOworCWlmICghcGlwZV9jb25m
aWctPmJpZ2pvaW5lcl9zbGF2ZSkKKwkJaW50ZWxfZGRpX2Nsb2NrX2dldChlbmNvZGVyLCBwaXBl
X2NvbmZpZyk7CiAKIAlpZiAoSVNfR0VOOV9MUChkZXZfcHJpdikpCiAJCXBpcGVfY29uZmlnLT5s
YW5lX2xhdF9vcHRpbV9tYXNrID0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmMKaW5kZXggNjA2NjliZWY2NTlmLi4wN2JlZTVjYWFjZmUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jCkBAIC0zNjMxLDYgKzM2MzEs
OCBAQCBpbnRlbF9maW5kX2luaXRpYWxfcGxhbmVfb2JqKHN0cnVjdCBpbnRlbF9jcnRjICppbnRl
bF9jcnRjLAogCXN0cnVjdCBpbnRlbF9wbGFuZSAqaW50ZWxfcGxhbmUgPSB0b19pbnRlbF9wbGFu
ZShwcmltYXJ5KTsKIAlzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKmludGVsX3N0YXRlID0KIAkJ
dG9faW50ZWxfcGxhbmVfc3RhdGUocGxhbmVfc3RhdGUpOworCSBzdHJ1Y3QgaW50ZWxfY3J0Y19z
dGF0ZSAqY3J0Y19zdGF0ZSA9CisJCSB0b19pbnRlbF9jcnRjX3N0YXRlKGludGVsX2NydGMtPmJh
c2Uuc3RhdGUpOwogCXN0cnVjdCBkcm1fZnJhbWVidWZmZXIgKmZiOwogCXN0cnVjdCBpOTE1X3Zt
YSAqdm1hOwogCkBAIC0zNjUzLDcgKzM2NTUsNyBAQCBpbnRlbF9maW5kX2luaXRpYWxfcGxhbmVf
b2JqKHN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjLAogCQlpZiAoYyA9PSAmaW50ZWxfY3J0
Yy0+YmFzZSkKIAkJCWNvbnRpbnVlOwogCi0JCWlmICghdG9faW50ZWxfY3J0YyhjKS0+YWN0aXZl
KQorCQlpZiAoIXRvX2ludGVsX2NydGNfc3RhdGUoYy0+c3RhdGUpLT51YXBpLmFjdGl2ZSkKIAkJ
CWNvbnRpbnVlOwogCiAJCXN0YXRlID0gdG9faW50ZWxfcGxhbmVfc3RhdGUoYy0+cHJpbWFyeS0+
c3RhdGUpOwpAQCAtMzY3NSw2ICszNjc3LDExIEBAIGludGVsX2ZpbmRfaW5pdGlhbF9wbGFuZV9v
Ymooc3RydWN0IGludGVsX2NydGMgKmludGVsX2NydGMsCiAJICogcHJldGVuZCB0aGUgQklPUyBu
ZXZlciBoYWQgaXQgZW5hYmxlZC4KIAkgKi8KIAlpbnRlbF9wbGFuZV9kaXNhYmxlX25vYXRvbWlj
KGludGVsX2NydGMsIGludGVsX3BsYW5lKTsKKwlpZiAoY3J0Y19zdGF0ZS0+Ymlnam9pbmVyKSB7
CisJCXN0cnVjdCBpbnRlbF9jcnRjICpzbGF2ZSA9CisJCQljcnRjX3N0YXRlLT5iaWdqb2luZXJf
bGlua2VkX2NydGM7CisJCWludGVsX3BsYW5lX2Rpc2FibGVfbm9hdG9taWMoc2xhdmUsIHRvX2lu
dGVsX3BsYW5lKHNsYXZlLT5iYXNlLnByaW1hcnkpKTsKKwl9CiAKIAlyZXR1cm47CiAKQEAgLTgy
MjAsMTMgKzgyMjcsMjcgQEAgc3RhdGljIHZvaWQgaW50ZWxfY3J0Y19yZWFkb3V0X2Rlcml2ZWRf
c3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUKIAogCWRybV9tb2RlX2Nv
cHkocGlwZV9tb2RlLCBhZGp1c3RlZF9tb2RlKTsKIAorCWlmIChjcnRjX3N0YXRlLT5iaWdqb2lu
ZXIpIHsKKwkJLyoKKwkJICogdHJhbnNjb2RlciBpcyBwcm9ncmFtbWVkIHRvIHRoZSBmdWxsIG1v
ZGUsCisJCSAqIGJ1dCBwaXBlIHRpbWluZ3MgYXJlIGhhbGYgb2YgdGhlIHRyYW5zY29kZXIgbW9k
ZQorCQkgKi8KKwkJcGlwZV9tb2RlLT5jcnRjX2hkaXNwbGF5IC89IDI7CisJCXBpcGVfbW9kZS0+
Y3J0Y19oYmxhbmtfc3RhcnQgLz0gMjsKKwkJcGlwZV9tb2RlLT5jcnRjX2hibGFua19lbmQgLz0g
MjsKKwkJcGlwZV9tb2RlLT5jcnRjX2hzeW5jX3N0YXJ0IC89IDI7CisJCXBpcGVfbW9kZS0+Y3J0
Y19oc3luY19lbmQgLz0gMjsKKwkJcGlwZV9tb2RlLT5jcnRjX2h0b3RhbCAvPSAyOworCQlwaXBl
X21vZGUtPmNydGNfY2xvY2sgLz0gMjsKKwl9CisKIAlpbnRlbF9tb2RlX2Zyb21fY3J0Y190aW1p
bmdzKHBpcGVfbW9kZSwgcGlwZV9tb2RlKTsKIAlpbnRlbF9tb2RlX2Zyb21fY3J0Y190aW1pbmdz
KGFkanVzdGVkX21vZGUsIGFkanVzdGVkX21vZGUpOwogCiAJaW50ZWxfY3J0Y19jb21wdXRlX3Bp
eGVsX3JhdGUoY3J0Y19zdGF0ZSk7CiAKIAlkcm1fbW9kZV9jb3B5KG1vZGUsIGFkanVzdGVkX21v
ZGUpOwotCW1vZGUtPmhkaXNwbGF5ID0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfdzsKKwltb2RlLT5o
ZGlzcGxheSA9IGNydGNfc3RhdGUtPnBpcGVfc3JjX3cgPDwgY3J0Y19zdGF0ZS0+Ymlnam9pbmVy
OwogCW1vZGUtPnZkaXNwbGF5ID0gY3J0Y19zdGF0ZS0+cGlwZV9zcmNfaDsKIH0KIApAQCAtMTA2
OTgsNiArMTA3MTksNyBAQCBzdGF0aWMgdm9pZAogc2tsX2dldF9pbml0aWFsX3BsYW5lX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJCSAgICAgc3RydWN0IGludGVsX2luaXRpYWxf
cGxhbmVfY29uZmlnICpwbGFuZV9jb25maWcpCiB7CisJc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUgPSB0b19pbnRlbF9jcnRjX3N0YXRlKGNydGMtPmJhc2Uuc3RhdGUpOwogCXN0
cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBjcnRjLT5iYXNlLmRldjsKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CiAJc3RydWN0IGludGVsX3BsYW5lICpw
bGFuZSA9IHRvX2ludGVsX3BsYW5lKGNydGMtPmJhc2UucHJpbWFyeSk7CkBAIC0xMDcxNCw2ICsx
MDczNiwxMiBAQCBza2xfZ2V0X2luaXRpYWxfcGxhbmVfY29uZmlnKHN0cnVjdCBpbnRlbF9jcnRj
ICpjcnRjLAogCiAJZHJtX1dBUk5fT04oZGV2LCBwaXBlICE9IGNydGMtPnBpcGUpOwogCisJaWYg
KGNydGNfc3RhdGUtPmJpZ2pvaW5lcikgeworCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwK
KwkJCSAgICAiVW5zdXBwb3J0ZWQgYmlnam9pbmVyIGNvbmZpZ3VyYXRpb24gZm9yIGluaXRpYWwg
RkJcbiIpOworCQlyZXR1cm47CisJfQorCiAJaW50ZWxfZmIgPSBremFsbG9jKHNpemVvZigqaW50
ZWxfZmIpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIWludGVsX2ZiKSB7CiAJCWRybV9kYmdfa21zKCZk
ZXZfcHJpdi0+ZHJtLCAiZmFpbGVkIHRvIGFsbG9jIGZiXG4iKTsKQEAgLTExMzIwLDYgKzExMzQ4
LDggQEAgc3RhdGljIHZvaWQgaHN3X2dldF9kZGlfcG9ydF9zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0
YyAqY3J0YywKIAl9IGVsc2UgewogCQl0bXAgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAogCQkJ
CSAgICBUUkFOU19ERElfRlVOQ19DVEwoY3B1X3RyYW5zY29kZXIpKTsKKwkJaWYgKCEodG1wICYg
VFJBTlNfRERJX0ZVTkNfRU5BQkxFKSkKKwkJCXJldHVybjsKIAkJaWYgKElOVEVMX0dFTihkZXZf
cHJpdikgPj0gMTIpCiAJCQlwb3J0ID0gVEdMX1RSQU5TX0RESV9GVU5DX0NUTF9WQUxfVE9fUE9S
VCh0bXApOwogCQllbHNlCkBAIC0xMTM5NSwxMCArMTE0MjUsMTkgQEAgc3RhdGljIGJvb2wgaHN3
X2dldF9waXBlX2NvbmZpZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJYWN0aXZlID0gdHJ1
ZTsKIAl9CiAKLQlpZiAoIWFjdGl2ZSkKLQkJZ290byBvdXQ7CisJaW50ZWxfZHNjX2dldF9jb25m
aWcocGlwZV9jb25maWcpOwogCi0JaWYgKCF0cmFuc2NvZGVyX2lzX2RzaShwaXBlX2NvbmZpZy0+
Y3B1X3RyYW5zY29kZXIpIHx8CisJaWYgKCFhY3RpdmUpIHsKKwkJLyogYmlnam9pbmVyIHNsYXZl
IGRvZXNuJ3QgZW5hYmxlIHRyYW5zY29kZXIgKi8KKwkJaWYgKCFwaXBlX2NvbmZpZy0+Ymlnam9p
bmVyX3NsYXZlKQorCQkJZ290byBvdXQ7CisKKwkJYWN0aXZlID0gdHJ1ZTsKKwkJcGlwZV9jb25m
aWctPnBpeGVsX211bHRpcGxpZXIgPSAxOworCisJCS8qIHdlIGNhbm5vdCByZWFkIG91dCBtb3N0
IHN0YXRlLCBzbyBkb24ndCBib3RoZXIuLiAqLworCQlwaXBlX2NvbmZpZy0+cXVpcmtzIHw9IFBJ
UEVfQ09ORklHX1FVSVJLX0JJR0pPSU5FUl9TTEFWRTsKKwl9IGVsc2UgaWYgKCF0cmFuc2NvZGVy
X2lzX2RzaShwaXBlX2NvbmZpZy0+Y3B1X3RyYW5zY29kZXIpIHx8CiAJICAgIElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTEpIHsKIAkJaHN3X2dldF9kZGlfcG9ydF9zdGF0ZShjcnRjLCBwaXBlX2Nv
bmZpZyk7CiAJCWludGVsX2dldF90cmFuc2NvZGVyX3RpbWluZ3MoY3J0YywgcGlwZV9jb25maWcp
OwpAQCAtMTE0NzMsNyArMTE1MTIsMTAgQEAgc3RhdGljIGJvb2wgaHN3X2dldF9waXBlX2NvbmZp
ZyhzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YywKIAkJfQogCX0KIAotCWlmIChwaXBlX2NvbmZpZy0+
Y3B1X3RyYW5zY29kZXIgIT0gVFJBTlNDT0RFUl9FRFAgJiYKKwlpZiAocGlwZV9jb25maWctPmJp
Z2pvaW5lcl9zbGF2ZSkgeworCQkvKiBDYW5ub3QgYmUgcmVhZCBvdXQgYXMgYSBzbGF2ZSwgc2V0
IHRvIDAuICovCisJCXBpcGVfY29uZmlnLT5waXhlbF9tdWx0aXBsaWVyID0gMDsKKwl9IGVsc2Ug
aWYgKHBpcGVfY29uZmlnLT5jcHVfdHJhbnNjb2RlciAhPSBUUkFOU0NPREVSX0VEUCAmJgogCSAg
ICAhdHJhbnNjb2Rlcl9pc19kc2kocGlwZV9jb25maWctPmNwdV90cmFuc2NvZGVyKSkgewogCQlw
aXBlX2NvbmZpZy0+cGl4ZWxfbXVsdGlwbGllciA9CiAJCQlpbnRlbF9kZV9yZWFkKGRldl9wcml2
LApAQCAtMTM1MTYsNiArMTM1NTgsOSBAQCBpbnRlbF9jcnRjX2NvcHlfdWFwaV90b19od19zdGF0
ZShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAogc3RhdGljIHZvaWQgaW50ZWxf
Y3J0Y19jb3B5X2h3X3RvX3VhcGlfc3RhdGUoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUpCiB7CisJaWYgKGNydGNfc3RhdGUtPmJpZ2pvaW5lcl9zbGF2ZSkKKwkJcmV0dXJuOwor
CiAJY3J0Y19zdGF0ZS0+dWFwaS5lbmFibGUgPSBjcnRjX3N0YXRlLT5ody5lbmFibGU7CiAJY3J0
Y19zdGF0ZS0+dWFwaS5hY3RpdmUgPSBjcnRjX3N0YXRlLT5ody5hY3RpdmU7CiAJZHJtX1dBUk5f
T04oY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYsCkBAIC0xNDE1NywzNSArMTQyMDIsNTMgQEAg
aW50ZWxfcGlwZV9jb25maWdfY29tcGFyZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3VycmVudF9jb25maWcsCiAKIAlQSVBFX0NPTkZfQ0hFQ0tfWChvdXRwdXRfdHlwZXMpOwogCi0J
UElQRV9DT05GX0NIRUNLX0koaHcucGlwZV9tb2RlLmNydGNfaGRpc3BsYXkpOwotCVBJUEVfQ09O
Rl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX2h0b3RhbCk7Ci0JUElQRV9DT05GX0NIRUNLX0ko
aHcucGlwZV9tb2RlLmNydGNfaGJsYW5rX3N0YXJ0KTsKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5w
aXBlX21vZGUuY3J0Y19oYmxhbmtfZW5kKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5waXBlX21v
ZGUuY3J0Y19oc3luY19zdGFydCk7Ci0JUElQRV9DT05GX0NIRUNLX0koaHcucGlwZV9tb2RlLmNy
dGNfaHN5bmNfZW5kKTsKKwkvKiBGSVhNRSBkbyB0aGUgcmVhZG91dCBwcm9wZXJseSBhbmQgZ2V0
IHJpZCBvZiB0aGlzIHF1aXJrICovCisJaWYgKCFQSVBFX0NPTkZfUVVJUksoUElQRV9DT05GSUdf
UVVJUktfQklHSk9JTkVSX1NMQVZFKSkgeworCQlQSVBFX0NPTkZfQ0hFQ0tfSShody5waXBlX21v
ZGUuY3J0Y19oZGlzcGxheSk7CisJCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRj
X2h0b3RhbCk7CisJCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX2hibGFua19z
dGFydCk7CisJCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX2hibGFua19lbmQp
OworCQlQSVBFX0NPTkZfQ0hFQ0tfSShody5waXBlX21vZGUuY3J0Y19oc3luY19zdGFydCk7CisJ
CVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX2hzeW5jX2VuZCk7CiAKLQlQSVBF
X0NPTkZfQ0hFQ0tfSShody5waXBlX21vZGUuY3J0Y192ZGlzcGxheSk7Ci0JUElQRV9DT05GX0NI
RUNLX0koaHcucGlwZV9tb2RlLmNydGNfdnRvdGFsKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5w
aXBlX21vZGUuY3J0Y192Ymxhbmtfc3RhcnQpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVf
bW9kZS5jcnRjX3ZibGFua19lbmQpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5j
cnRjX3ZzeW5jX3N0YXJ0KTsKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5waXBlX21vZGUuY3J0Y192
c3luY19lbmQpOworCQlQSVBFX0NPTkZfQ0hFQ0tfSShody5waXBlX21vZGUuY3J0Y192ZGlzcGxh
eSk7CisJCVBJUEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX3Z0b3RhbCk7CisJCVBJ
UEVfQ09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX3ZibGFua19zdGFydCk7CisJCVBJUEVf
Q09ORl9DSEVDS19JKGh3LnBpcGVfbW9kZS5jcnRjX3ZibGFua19lbmQpOworCQlQSVBFX0NPTkZf
Q0hFQ0tfSShody5waXBlX21vZGUuY3J0Y192c3luY19zdGFydCk7CisJCVBJUEVfQ09ORl9DSEVD
S19JKGh3LnBpcGVfbW9kZS5jcnRjX3ZzeW5jX2VuZCk7CiAKLQlQSVBFX0NPTkZfQ0hFQ0tfSSho
dy5hZGp1c3RlZF9tb2RlLmNydGNfaGRpc3BsYXkpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFk
anVzdGVkX21vZGUuY3J0Y19odG90YWwpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVk
X21vZGUuY3J0Y19oYmxhbmtfc3RhcnQpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVk
X21vZGUuY3J0Y19oYmxhbmtfZW5kKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9t
b2RlLmNydGNfaHN5bmNfc3RhcnQpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21v
ZGUuY3J0Y19oc3luY19lbmQpOworCQlQSVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2Rl
LmNydGNfaGRpc3BsYXkpOworCQlQSVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2RlLmNy
dGNfaHRvdGFsKTsKKwkJUElQRV9DT05GX0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX2hi
bGFua19zdGFydCk7CisJCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y19o
YmxhbmtfZW5kKTsKKwkJUElQRV9DT05GX0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX2hz
eW5jX3N0YXJ0KTsKKwkJUElQRV9DT05GX0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX2hz
eW5jX2VuZCk7CiAKLQlQSVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2RlLmNydGNfdmRp
c3BsYXkpOwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y192dG90YWwp
OwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y192Ymxhbmtfc3RhcnQp
OwotCVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y192YmxhbmtfZW5kKTsK
LQlQSVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2RlLmNydGNfdnN5bmNfc3RhcnQpOwot
CVBJUEVfQ09ORl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y192c3luY19lbmQpOworCQlQ
SVBFX0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2RlLmNydGNfdmRpc3BsYXkpOworCQlQSVBF
X0NPTkZfQ0hFQ0tfSShody5hZGp1c3RlZF9tb2RlLmNydGNfdnRvdGFsKTsKKwkJUElQRV9DT05G
X0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX3ZibGFua19zdGFydCk7CisJCVBJUEVfQ09O
Rl9DSEVDS19JKGh3LmFkanVzdGVkX21vZGUuY3J0Y192YmxhbmtfZW5kKTsKKwkJUElQRV9DT05G
X0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX3ZzeW5jX3N0YXJ0KTsKKwkJUElQRV9DT05G
X0NIRUNLX0koaHcuYWRqdXN0ZWRfbW9kZS5jcnRjX3ZzeW5jX2VuZCk7CisKKwkJUElQRV9DT05G
X0NIRUNLX0kocGl4ZWxfbXVsdGlwbGllcik7CisKKwkJUElQRV9DT05GX0NIRUNLX0ZMQUdTKGh3
LmFkanVzdGVkX21vZGUuZmxhZ3MsCisJCQkJICAgICAgRFJNX01PREVfRkxBR19JTlRFUkxBQ0Up
OworCisJCWlmICghUElQRV9DT05GX1FVSVJLKFBJUEVfQ09ORklHX1FVSVJLX01PREVfU1lOQ19G
TEFHUykpIHsKKwkJCVBJUEVfQ09ORl9DSEVDS19GTEFHUyhody5hZGp1c3RlZF9tb2RlLmZsYWdz
LAorCQkJCQkgICAgICBEUk1fTU9ERV9GTEFHX1BIU1lOQyk7CisJCQlQSVBFX0NPTkZfQ0hFQ0tf
RkxBR1MoaHcuYWRqdXN0ZWRfbW9kZS5mbGFncywKKwkJCQkJICAgICAgRFJNX01PREVfRkxBR19O
SFNZTkMpOworCQkJUElQRV9DT05GX0NIRUNLX0ZMQUdTKGh3LmFkanVzdGVkX21vZGUuZmxhZ3Ms
CisJCQkJCSAgICAgIERSTV9NT0RFX0ZMQUdfUFZTWU5DKTsKKwkJCVBJUEVfQ09ORl9DSEVDS19G
TEFHUyhody5hZGp1c3RlZF9tb2RlLmZsYWdzLAorCQkJCQkgICAgICBEUk1fTU9ERV9GTEFHX05W
U1lOQyk7CisJCX0KKwl9CiAKLQlQSVBFX0NPTkZfQ0hFQ0tfSShwaXhlbF9tdWx0aXBsaWVyKTsK
IAlQSVBFX0NPTkZfQ0hFQ0tfSShvdXRwdXRfZm9ybWF0KTsKIAlQSVBFX0NPTkZfQ0hFQ0tfQk9P
TChoYXNfaGRtaV9zaW5rKTsKIAlpZiAoKElOVEVMX0dFTihkZXZfcHJpdikgPCA4ICYmICFJU19I
QVNXRUxMKGRldl9wcml2KSkgfHwKQEAgLTE0MTk1LDI0ICsxNDI1OCwxMiBAQCBpbnRlbF9waXBl
X2NvbmZpZ19jb21wYXJlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjdXJyZW50X2Nv
bmZpZywKIAlQSVBFX0NPTkZfQ0hFQ0tfQk9PTChoZG1pX3NjcmFtYmxpbmcpOwogCVBJUEVfQ09O
Rl9DSEVDS19CT09MKGhkbWlfaGlnaF90bWRzX2Nsb2NrX3JhdGlvKTsKIAlQSVBFX0NPTkZfQ0hF
Q0tfQk9PTChoYXNfaW5mb2ZyYW1lKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfQk9PTChmZWNfZW5hYmxl
KTsKKwkvKiBGSVhNRSBkbyB0aGUgcmVhZG91dCBwcm9wZXJseSBhbmQgZ2V0IHJpZCBvZiB0aGlz
IHF1aXJrICovCisJaWYgKCFQSVBFX0NPTkZfUVVJUksoUElQRV9DT05GSUdfUVVJUktfQklHSk9J
TkVSX1NMQVZFKSkKKwkJUElQRV9DT05GX0NIRUNLX0JPT0woZmVjX2VuYWJsZSk7CiAKIAlQSVBF
X0NPTkZfQ0hFQ0tfQk9PTF9JTkNPTVBMRVRFKGhhc19hdWRpbyk7CiAKLQlQSVBFX0NPTkZfQ0hF
Q0tfRkxBR1MoaHcuYWRqdXN0ZWRfbW9kZS5mbGFncywKLQkJCSAgICAgIERSTV9NT0RFX0ZMQUdf
SU5URVJMQUNFKTsKLQotCWlmICghUElQRV9DT05GX1FVSVJLKFBJUEVfQ09ORklHX1FVSVJLX01P
REVfU1lOQ19GTEFHUykpIHsKLQkJUElQRV9DT05GX0NIRUNLX0ZMQUdTKGh3LmFkanVzdGVkX21v
ZGUuZmxhZ3MsCi0JCQkJICAgICAgRFJNX01PREVfRkxBR19QSFNZTkMpOwotCQlQSVBFX0NPTkZf
Q0hFQ0tfRkxBR1MoaHcuYWRqdXN0ZWRfbW9kZS5mbGFncywKLQkJCQkgICAgICBEUk1fTU9ERV9G
TEFHX05IU1lOQyk7Ci0JCVBJUEVfQ09ORl9DSEVDS19GTEFHUyhody5hZGp1c3RlZF9tb2RlLmZs
YWdzLAotCQkJCSAgICAgIERSTV9NT0RFX0ZMQUdfUFZTWU5DKTsKLQkJUElQRV9DT05GX0NIRUNL
X0ZMQUdTKGh3LmFkanVzdGVkX21vZGUuZmxhZ3MsCi0JCQkJICAgICAgRFJNX01PREVfRkxBR19O
VlNZTkMpOwotCX0KLQogCVBJUEVfQ09ORl9DSEVDS19YKGdtY2hfcGZpdC5jb250cm9sKTsKIAkv
KiBwZml0IHJhdGlvcyBhcmUgYXV0b2NvbXB1dGVkIGJ5IHRoZSBodyBvbiBnZW40KyAqLwogCWlm
IChJTlRFTF9HRU4oZGV2X3ByaXYpIDwgNCkKQEAgLTE0MjM4LDcgKzE0Mjg5LDkgQEAgaW50ZWxf
cGlwZV9jb25maWdfY29tcGFyZShjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3VycmVu
dF9jb25maWcsCiAJCX0KIAogCQlQSVBFX0NPTkZfQ0hFQ0tfSShzY2FsZXJfc3RhdGUuc2NhbGVy
X2lkKTsKLQkJUElQRV9DT05GX0NIRUNLX0NMT0NLX0ZVWlpZKHBpeGVsX3JhdGUpOworCQkvKiBG
SVhNRSBkbyB0aGUgcmVhZG91dCBwcm9wZXJseSBhbmQgZ2V0IHJpZCBvZiB0aGlzIHF1aXJrICov
CisJCWlmICghUElQRV9DT05GX1FVSVJLKFBJUEVfQ09ORklHX1FVSVJLX0JJR0pPSU5FUl9TTEFW
RSkpCisJCQlQSVBFX0NPTkZfQ0hFQ0tfQ0xPQ0tfRlVaWlkocGl4ZWxfcmF0ZSk7CiAKIAkJUElQ
RV9DT05GX0NIRUNLX1goZ2FtbWFfbW9kZSk7CiAJCWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2
KSkKQEAgLTE0MjU5LDQ5ICsxNDMxMiw1MyBAQCBpbnRlbF9waXBlX2NvbmZpZ19jb21wYXJlKGNv
bnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjdXJyZW50X2NvbmZpZywKIAlQSVBFX0NPTkZf
Q0hFQ0tfQk9PTChkb3VibGVfd2lkZSk7CiAKIAlQSVBFX0NPTkZfQ0hFQ0tfUChzaGFyZWRfZHBs
bCk7Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5kcGxsKTsKLQlQSVBFX0NPTkZf
Q0hFQ0tfWChkcGxsX2h3X3N0YXRlLmRwbGxfbWQpOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxf
aHdfc3RhdGUuZnAwKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLmZwMSk7Ci0J
UElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS53cnBsbCk7Ci0JUElQRV9DT05GX0NIRUNL
X1goZHBsbF9od19zdGF0ZS5zcGxsKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRl
LmN0cmwxKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLmNmZ2NyMSk7Ci0JUElQ
RV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5jZmdjcjIpOwotCVBJUEVfQ09ORl9DSEVDS19Y
KGRwbGxfaHdfc3RhdGUuY2ZnY3IwKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRl
LmViYjApOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUuZWJiNCk7Ci0JUElQRV9D
T05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGwwKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxs
X2h3X3N0YXRlLnBsbDEpOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUucGxsMik7
Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGwzKTsKLQlQSVBFX0NPTkZfQ0hF
Q0tfWChkcGxsX2h3X3N0YXRlLnBsbDYpOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3Rh
dGUucGxsOCk7Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGw5KTsKLQlQSVBF
X0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLnBsbDEwKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChk
cGxsX2h3X3N0YXRlLnBjc2R3MTIpOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUu
bWdfcmVmY2xraW5fY3RsKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLm1nX2Ns
a3RvcDJfY29yZWNsa2N0bDEpOwotCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUubWdf
Y2xrdG9wMl9oc2Nsa2N0bCk7Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5tZ19w
bGxfZGl2MCk7Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5tZ19wbGxfZGl2MSk7
Ci0JUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5tZ19wbGxfbGYpOwotCVBJUEVfQ09O
Rl9DSEVDS19YKGRwbGxfaHdfc3RhdGUubWdfcGxsX2ZyYWNfbG9jayk7Ci0JUElQRV9DT05GX0NI
RUNLX1goZHBsbF9od19zdGF0ZS5tZ19wbGxfc3NjKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxs
X2h3X3N0YXRlLm1nX3BsbF9iaWFzKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRl
Lm1nX3BsbF90ZGNfY29sZHN0X2JpYXMpOwogCi0JUElQRV9DT05GX0NIRUNLX1goZHNpX3BsbC5j
dHJsKTsKLQlQSVBFX0NPTkZfQ0hFQ0tfWChkc2lfcGxsLmRpdik7CisJLyogRklYTUUgZG8gdGhl
IHJlYWRvdXQgcHJvcGVybHkgYW5kIGdldCByaWQgb2YgdGhpcyBxdWlyayAqLworCWlmICghUElQ
RV9DT05GX1FVSVJLKFBJUEVfQ09ORklHX1FVSVJLX0JJR0pPSU5FUl9TTEFWRSkpIHsKKwkJUElQ
RV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5kcGxsKTsKKwkJUElQRV9DT05GX0NIRUNLX1go
ZHBsbF9od19zdGF0ZS5kcGxsX21kKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0
ZS5mcDApOworCQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLmZwMSk7CisJCVBJUEVf
Q09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUud3JwbGwpOworCQlQSVBFX0NPTkZfQ0hFQ0tfWChk
cGxsX2h3X3N0YXRlLnNwbGwpOworCQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLmN0
cmwxKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5jZmdjcjEpOworCQlQSVBF
X0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLmNmZ2NyMik7CisJCVBJUEVfQ09ORl9DSEVDS19Y
KGRwbGxfaHdfc3RhdGUuY2ZnY3IwKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0
ZS5lYmIwKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5lYmI0KTsKKwkJUElQ
RV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGwwKTsKKwkJUElQRV9DT05GX0NIRUNLX1go
ZHBsbF9od19zdGF0ZS5wbGwxKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5w
bGwyKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGwzKTsKKwkJUElQRV9D
T05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGw2KTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBs
bF9od19zdGF0ZS5wbGw4KTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGw5
KTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9od19zdGF0ZS5wbGwxMCk7CisJCVBJUEVfQ09O
Rl9DSEVDS19YKGRwbGxfaHdfc3RhdGUucGNzZHcxMik7CisJCVBJUEVfQ09ORl9DSEVDS19YKGRw
bGxfaHdfc3RhdGUubWdfcmVmY2xraW5fY3RsKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBsbF9o
d19zdGF0ZS5tZ19jbGt0b3AyX2NvcmVjbGtjdGwxKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBs
bF9od19zdGF0ZS5tZ19jbGt0b3AyX2hzY2xrY3RsKTsKKwkJUElQRV9DT05GX0NIRUNLX1goZHBs
bF9od19zdGF0ZS5tZ19wbGxfZGl2MCk7CisJCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3Rh
dGUubWdfcGxsX2RpdjEpOworCQlQSVBFX0NPTkZfQ0hFQ0tfWChkcGxsX2h3X3N0YXRlLm1nX3Bs
bF9sZik7CisJCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUubWdfcGxsX2ZyYWNfbG9j
ayk7CisJCVBJUEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUubWdfcGxsX3NzYyk7CisJCVBJ
UEVfQ09ORl9DSEVDS19YKGRwbGxfaHdfc3RhdGUubWdfcGxsX2JpYXMpOworCQlQSVBFX0NPTkZf
Q0hFQ0tfWChkcGxsX2h3X3N0YXRlLm1nX3BsbF90ZGNfY29sZHN0X2JpYXMpOwogCi0JaWYgKElT
X0c0WChkZXZfcHJpdikgfHwgSU5URUxfR0VOKGRldl9wcml2KSA+PSA1KQotCQlQSVBFX0NPTkZf
Q0hFQ0tfSShwaXBlX2JwcCk7CisJCVBJUEVfQ09ORl9DSEVDS19YKGRzaV9wbGwuY3RybCk7CisJ
CVBJUEVfQ09ORl9DSEVDS19YKGRzaV9wbGwuZGl2KTsKIAotCVBJUEVfQ09ORl9DSEVDS19DTE9D
S19GVVpaWShody5waXBlX21vZGUuY3J0Y19jbG9jayk7Ci0JUElQRV9DT05GX0NIRUNLX0NMT0NL
X0ZVWlpZKGh3LmFkanVzdGVkX21vZGUuY3J0Y19jbG9jayk7Ci0JUElQRV9DT05GX0NIRUNLX0NM
T0NLX0ZVWlpZKHBvcnRfY2xvY2spOworCQlpZiAoSVNfRzRYKGRldl9wcml2KSB8fCBJTlRFTF9H
RU4oZGV2X3ByaXYpID49IDUpCisJCQlQSVBFX0NPTkZfQ0hFQ0tfSShwaXBlX2JwcCk7CiAKLQlQ
SVBFX0NPTkZfQ0hFQ0tfSShtaW5fdm9sdGFnZV9sZXZlbCk7CisJCVBJUEVfQ09ORl9DSEVDS19D
TE9DS19GVVpaWShody5waXBlX21vZGUuY3J0Y19jbG9jayk7CisJCVBJUEVfQ09ORl9DSEVDS19D
TE9DS19GVVpaWShody5hZGp1c3RlZF9tb2RlLmNydGNfY2xvY2spOworCQlQSVBFX0NPTkZfQ0hF
Q0tfQ0xPQ0tfRlVaWlkocG9ydF9jbG9jayk7CisKKwkJUElQRV9DT05GX0NIRUNLX0kobWluX3Zv
bHRhZ2VfbGV2ZWwpOworCX0KIAogCVBJUEVfQ09ORl9DSEVDS19YKGluZm9mcmFtZXMuZW5hYmxl
KTsKIAlQSVBFX0NPTkZfQ0hFQ0tfWChpbmZvZnJhbWVzLmdjcCk7CkBAIC0xNDMxMyw2ICsxNDM3
MCw5IEBAIGludGVsX3BpcGVfY29uZmlnX2NvbXBhcmUoY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmN1cnJlbnRfY29uZmlnLAogCiAJUElQRV9DT05GX0NIRUNLX1goc3luY19tb2RlX3Ns
YXZlc19tYXNrKTsKIAlQSVBFX0NPTkZfQ0hFQ0tfSShtYXN0ZXJfdHJhbnNjb2Rlcik7CisJUElQ
RV9DT05GX0NIRUNLX0JPT0woYmlnam9pbmVyKTsKKwlQSVBFX0NPTkZfQ0hFQ0tfQk9PTChiaWdq
b2luZXJfc2xhdmUpOworCVBJUEVfQ09ORl9DSEVDS19QKGJpZ2pvaW5lcl9saW5rZWRfY3J0Yyk7
CiAKIAlQSVBFX0NPTkZfQ0hFQ0tfSShkc2MuY29tcHJlc3Npb25fZW5hYmxlKTsKIAlQSVBFX0NP
TkZfQ0hFQ0tfSShkc2MuZHNjX3NwbGl0KTsKQEAgLTE0NTg0LDYgKzE0NjQ0LDcgQEAgdmVyaWZ5
X2NydGNfc3RhdGUoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJc3RydWN0IGludGVsX2VuY29k
ZXIgKmVuY29kZXI7CiAJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnID0gb2xk
X2NydGNfc3RhdGU7CiAJc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlID0gb2xkX2NydGNf
c3RhdGUtPnVhcGkuc3RhdGU7CisJc3RydWN0IGludGVsX2NydGMgKm1hc3RlciA9IGNydGM7CiAK
IAlfX2RybV9hdG9taWNfaGVscGVyX2NydGNfZGVzdHJveV9zdGF0ZSgmb2xkX2NydGNfc3RhdGUt
PnVhcGkpOwogCWludGVsX2NydGNfZnJlZV9od19zdGF0ZShvbGRfY3J0Y19zdGF0ZSk7CkBAIC0x
NDYxMSw3ICsxNDY3MiwxMCBAQCB2ZXJpZnlfY3J0Y19zdGF0ZShzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YywKIAkJCSIoZXhwZWN0ZWQgJWksIGZvdW5kICVpKVxuIiwKIAkJCW5ld19jcnRjX3N0YXRl
LT5ody5hY3RpdmUsIGNydGMtPmFjdGl2ZSk7CiAKLQlmb3JfZWFjaF9lbmNvZGVyX29uX2NydGMo
ZGV2LCAmY3J0Yy0+YmFzZSwgZW5jb2RlcikgeworCWlmIChuZXdfY3J0Y19zdGF0ZS0+Ymlnam9p
bmVyX3NsYXZlKQorCQltYXN0ZXIgPSBuZXdfY3J0Y19zdGF0ZS0+Ymlnam9pbmVyX2xpbmtlZF9j
cnRjOworCisJZm9yX2VhY2hfZW5jb2Rlcl9vbl9jcnRjKGRldiwgJm1hc3Rlci0+YmFzZSwgZW5j
b2RlcikgewogCQllbnVtIHBpcGUgcGlwZTsKIAkJYm9vbCBhY3RpdmU7CiAKQEAgLTE0NjIxLDcg
KzE0Njg1LDcgQEAgdmVyaWZ5X2NydGNfc3RhdGUoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAJ
CQkJZW5jb2Rlci0+YmFzZS5iYXNlLmlkLCBhY3RpdmUsCiAJCQkJbmV3X2NydGNfc3RhdGUtPmh3
LmFjdGl2ZSk7CiAKLQkJSTkxNV9TVEFURV9XQVJOKGFjdGl2ZSAmJiBjcnRjLT5waXBlICE9IHBp
cGUsCisJCUk5MTVfU1RBVEVfV0FSTihhY3RpdmUgJiYgbWFzdGVyLT5waXBlICE9IHBpcGUsCiAJ
CQkJIkVuY29kZXIgY29ubmVjdGVkIHRvIHdyb25nIHBpcGUgJWNcbiIsCiAJCQkJcGlwZV9uYW1l
KHBpcGUpKTsKIApAQCAtMTg1MjcsNyArMTg1OTEsNyBAQCBpbnQgaW50ZWxfbW9kZXNldF9pbml0
X25vZ2VtKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCWZvcl9lYWNoX2ludGVsX2Ny
dGMoZGV2LCBjcnRjKSB7CiAJCXN0cnVjdCBpbnRlbF9pbml0aWFsX3BsYW5lX2NvbmZpZyBwbGFu
ZV9jb25maWcgPSB7fTsKIAotCQlpZiAoIWNydGMtPmFjdGl2ZSkKKwkJaWYgKCF0b19pbnRlbF9j
cnRjX3N0YXRlKGNydGMtPmJhc2Uuc3RhdGUpLT51YXBpLmFjdGl2ZSkKIAkJCWNvbnRpbnVlOwog
CiAJCS8qCkBAIC0xODgzOCw3ICsxODkwMiw4IEBAIHN0YXRpYyB2b2lkIGludGVsX3Nhbml0aXpl
X2NydGMoc3RydWN0IGludGVsX2NydGMgKmNydGMsCiAKIAkvKiBBZGp1c3QgdGhlIHN0YXRlIG9m
IHRoZSBvdXRwdXQgcGlwZSBhY2NvcmRpbmcgdG8gd2hldGhlciB3ZQogCSAqIGhhdmUgYWN0aXZl
IGNvbm5lY3RvcnMvZW5jb2RlcnMuICovCi0JaWYgKGNydGNfc3RhdGUtPmh3LmFjdGl2ZSAmJiAh
aW50ZWxfY3J0Y19oYXNfZW5jb2RlcnMoY3J0YykpCisJaWYgKGNydGNfc3RhdGUtPmh3LmFjdGl2
ZSAmJiAhaW50ZWxfY3J0Y19oYXNfZW5jb2RlcnMoY3J0YykgJiYKKwkgICAgIWNydGNfc3RhdGUt
PmJpZ2pvaW5lcl9zbGF2ZSkKIAkJaW50ZWxfY3J0Y19kaXNhYmxlX25vYXRvbWljKGNydGMsIGN0
eCk7CiAKIAlpZiAoY3J0Y19zdGF0ZS0+aHcuYWN0aXZlIHx8IEhBU19HTUNIKGRldl9wcml2KSkg
ewpAQCAtMTkwNTMsNiArMTkxMTgsMTYgQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNldF9yZWFk
b3V0X2h3X3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCQlpbnRlbF9lbmNvZGVyX2dl
dF9jb25maWcoZW5jb2RlciwgY3J0Y19zdGF0ZSk7CiAJCQlpZiAoZW5jb2Rlci0+c3luY19zdGF0
ZSkKIAkJCQllbmNvZGVyLT5zeW5jX3N0YXRlKGVuY29kZXIsIGNydGNfc3RhdGUpOworCisJCQkv
KiByZWFkIG91dCB0byBzbGF2ZSBjcnRjIGFzIHdlbGwgZm9yIGJpZ2pvaW5lciAqLworCQkJaWYg
KGNydGNfc3RhdGUtPmJpZ2pvaW5lcikgeworCQkJCS8qIGVuY29kZXIgc2hvdWxkIHJlYWQgYmUg
bGlua2VkIHRvIGJpZ2pvaW5lciBtYXN0ZXIgKi8KKwkJCQlXQVJOX09OKGNydGNfc3RhdGUtPmJp
Z2pvaW5lcl9zbGF2ZSk7CisKKwkJCQljcnRjID0gY3J0Y19zdGF0ZS0+Ymlnam9pbmVyX2xpbmtl
ZF9jcnRjOworCQkJCWNydGNfc3RhdGUgPSB0b19pbnRlbF9jcnRjX3N0YXRlKGNydGMtPmJhc2Uu
c3RhdGUpOworCQkJCWludGVsX2VuY29kZXJfZ2V0X2NvbmZpZyhlbmNvZGVyLCBjcnRjX3N0YXRl
KTsKKwkJCX0KIAkJfSBlbHNlIHsKIAkJCWVuY29kZXItPmJhc2UuY3J0YyA9IE5VTEw7CiAJCX0K
QEAgLTE5MTA4LDYgKzE5MTgzLDkgQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNldF9yZWFkb3V0
X2h3X3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCXN0cnVjdCBpbnRlbF9wbGFuZSAq
cGxhbmU7CiAJCWludCBtaW5fY2RjbGsgPSAwOwogCisJCWlmIChjcnRjX3N0YXRlLT5iaWdqb2lu
ZXJfc2xhdmUpCisJCQljb250aW51ZTsKKwogCQlpZiAoY3J0Y19zdGF0ZS0+aHcuYWN0aXZlKSB7
CiAJCQkvKgogCQkJICogVGhlIGluaXRpYWwgbW9kZSBuZWVkcyB0byBiZSBzZXQgaW4gb3JkZXIg
dG8ga2VlcApAQCAtMTkxNjgsNiArMTkyNDYsMzkgQEAgc3RhdGljIHZvaWQgaW50ZWxfbW9kZXNl
dF9yZWFkb3V0X2h3X3N0YXRlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCWludGVsX2J3X2Ny
dGNfdXBkYXRlKGJ3X3N0YXRlLCBjcnRjX3N0YXRlKTsKIAogCQlpbnRlbF9waXBlX2NvbmZpZ19z
YW5pdHlfY2hlY2soZGV2X3ByaXYsIGNydGNfc3RhdGUpOworCisJCS8qIGRpc2NhcmQgb3VyIGlu
Y29tcGxldGUgc2xhdmUgc3RhdGUsIGNvcHkgaXQgZnJvbSBtYXN0ZXIgKi8KKwkJaWYgKGNydGNf
c3RhdGUtPmJpZ2pvaW5lciAmJiBjcnRjX3N0YXRlLT5ody5hY3RpdmUpIHsKKwkJCXN0cnVjdCBp
bnRlbF9jcnRjICpzbGF2ZSA9IGNydGNfc3RhdGUtPmJpZ2pvaW5lcl9saW5rZWRfY3J0YzsKKwkJ
CXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpzbGF2ZV9jcnRjX3N0YXRlID0KKwkJCQl0b19pbnRl
bF9jcnRjX3N0YXRlKHNsYXZlLT5iYXNlLnN0YXRlKTsKKworCQkJY29weV9iaWdqb2luZXJfY3J0
Y19zdGF0ZShzbGF2ZV9jcnRjX3N0YXRlLCBjcnRjX3N0YXRlKTsKKwkJCXNsYXZlLT5iYXNlLm1v
ZGUgPSBjcnRjLT5iYXNlLm1vZGU7CisKKwkJCWNkY2xrX3N0YXRlLT5taW5fY2RjbGtbc2xhdmUt
PnBpcGVdID0gbWluX2NkY2xrOworCQkJY2RjbGtfc3RhdGUtPm1pbl92b2x0YWdlX2xldmVsW3Ns
YXZlLT5waXBlXSA9CisJCQkJY3J0Y19zdGF0ZS0+bWluX3ZvbHRhZ2VfbGV2ZWw7CisKKwkJCWZv
cl9lYWNoX2ludGVsX3BsYW5lX29uX2NydGMoJmRldl9wcml2LT5kcm0sIHNsYXZlLCBwbGFuZSkg
eworCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUgPQorCQkJ
CQl0b19pbnRlbF9wbGFuZV9zdGF0ZShwbGFuZS0+YmFzZS5zdGF0ZSk7CisKKwkJCQkvKgorCQkJ
CSAqIEZJWE1FIGRvbid0IGhhdmUgdGhlIGZiIHlldCwgc28gY2FuJ3QKKwkJCQkgKiB1c2UgaW50
ZWxfcGxhbmVfZGF0YV9yYXRlKCkgOigKKwkJCQkgKi8KKwkJCQlpZiAocGxhbmVfc3RhdGUtPnVh
cGkudmlzaWJsZSkKKwkJCQkJY3J0Y19zdGF0ZS0+ZGF0YV9yYXRlW3BsYW5lLT5pZF0gPQorCQkJ
CQkJNCAqIGNydGNfc3RhdGUtPnBpeGVsX3JhdGU7CisJCQkJZWxzZQorCQkJCQljcnRjX3N0YXRl
LT5kYXRhX3JhdGVbcGxhbmUtPmlkXSA9IDA7CisJCQl9CisKKwkJCWludGVsX2J3X2NydGNfdXBk
YXRlKGJ3X3N0YXRlLCBzbGF2ZV9jcnRjX3N0YXRlKTsKKwkJCWRybV9jYWxjX3RpbWVzdGFtcGlu
Z19jb25zdGFudHMoJnNsYXZlLT5iYXNlLAorCQkJCQkJCSZzbGF2ZV9jcnRjX3N0YXRlLT5ody5h
ZGp1c3RlZF9tb2RlKTsKKwkJfQogCX0KIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCBiM2Q5NGU2Y2Q3YzUuLmNlODJk
NjU0ZDBmMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5X3R5cGVzLmgKQEAgLTg1MCw2ICs4NTAsNyBAQCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSB7CiAJICogYWNjb3JkaW5nbHkuCiAJICovCiAjZGVmaW5lIFBJUEVfQ09ORklHX1FVSVJLX01P
REVfU1lOQ19GTEFHUwkoMTw8MCkgLyogdW5yZWxpYWJsZSBzeW5jIG1vZGUuZmxhZ3MgKi8KKyNk
ZWZpbmUgUElQRV9DT05GSUdfUVVJUktfQklHSk9JTkVSX1NMQVZFICAgICAgKDE8PDEpIC8qIGJp
Z2pvaW5lciBzbGF2ZSwgcGFydGlhbCByZWFkb3V0ICovCiAJdW5zaWduZWQgbG9uZyBxdWlya3M7
CiAKIAl1bnNpZ25lZCBmYl9iaXRzOyAvKiBmcmFtZWJ1ZmZlcnMgdG8gZmxpcCAqLwotLSAKMi4y
Ni4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRl
bC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

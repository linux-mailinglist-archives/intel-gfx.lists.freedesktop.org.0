Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B3170125127
	for <lists+intel-gfx@lfdr.de>; Wed, 18 Dec 2019 19:59:25 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 08D516EA4E;
	Wed, 18 Dec 2019 18:59:24 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2BAFF6EA4D
 for <intel-gfx@lists.freedesktop.org>; Wed, 18 Dec 2019 18:59:21 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 18 Dec 2019 10:59:21 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,330,1571727600"; d="scan'208";a="298470968"
Received: from jsundar1-mobl1.amr.corp.intel.com (HELO
 josouza-MOBL.amr.corp.intel.com) ([10.254.71.190])
 by orsmga001.jf.intel.com with ESMTP; 18 Dec 2019 10:59:19 -0800
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 18 Dec 2019 10:59:07 -0800
Message-Id: <20191218185910.303540-3-jose.souza@intel.com>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20191218185910.303540-1-jose.souza@intel.com>
References: <20191218185910.303540-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v4 3/6] drm/i915/display: Always enables MST
 master pipe first
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RHVlIHRvIEREQiBvdmVybGFwcyB0aGUgcGlwZSBlbmFibGluZyBzZXF1ZW5jZSBpcyBub3QgYWx3
YXlzIGNyZXNjZW50LgpBcyB0aGUgcHJldmlvdXMgcGF0Y2ggc2VsZWN0cyB0aGUgc21hbGxlc3Qg
cGlwZS90cmFuc2NvZGVyIGluIHRoZSBNU1QKc3RyZWFtIHRvIGJlIG1hc3RlciBhbmQgaXQgbmVl
ZHMgdG8gYmUgZW5hYmxlZCBmaXJzdCB0aGlzIGNoYW5nZXMKd2VyZSBuZWVkZWQgdG8gZ3VhcmFu
dGVlIHRoYXQuCgpTbyBmaXJzdCBsZXRzIGVuYWJsZSBhbGwgcGlwZXMgdGhhdCBkaWQgbm90IG5l
ZWRlZCBhIGZ1bGxtb2Rlc2V0IHNvCml0IGRvbid0IGhhdmUgYW55IGV4dGVybmFsIGRlcGVuZGVu
Y3ksIHRoaXMgb25lcyBjYW4gb3ZlcmxhcCB3aXRoCmVhY2ggb3RoZXIgZGRiIGFsbG9jYXRpb25z
LgoKVGhlbiBvbiB0aGUgc2Vjb25kIGxvb3AgaXQgd2lsbCBlbmFibGUgYWxsIHRoZSBwaXBlcyB0
aGF0IG5lZWRzIGEKbW9kZXNldCBhbmQgZG9uJ3QgZGVwZW5kcyBvbiBvdGhlciBwaXBlcyBsaWtl
IE1TVCBtYXN0ZXIKcGlwZS90cmFuc2NvZGVyLgoKVGhlbiBmaW5hbGx5IGFsbCB0aGUgcGlwZXMg
dGhhdCBuZWVkcyBhIG1vZGVzZXQgYW5kIGhhdmUgZGVwZW5kZW5jeQpvbiBvdGhlciBwaXBlcy4K
CnYzOiByZWJhc2VkCgp2NDoKLSBhZGRlZCBjaGVjayBmb3IgbW9kZXNldF9waXBlcyB0b28gdG8g
ZGVjaWRlIGlmIGlzIG5lY2Vzc2FyeSBmb3IgYQp3YWl0IGEgdmJsYW5rCi0gYWRkZWQgRERCIGFs
bG9jYXRpb24gb3ZlcmxhcCBjaGVjayBmb3IgcGlwZXMgdGhhdCBuZWVkcyBhIG1vZGVzZXQKCkNj
OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPgpDYzogTWFh
cnRlbiBMYW5raG9yc3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4KQ2M6IE1h
dHQgUm9wZXIgPG1hdHRoZXcuZC5yb3BlckBpbnRlbC5jb20+CkNjOiBNYW5hc2kgTmF2YXJlIDxt
YW5hc2kuZC5uYXZhcmVAaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBKb3PDqSBSb2JlcnRvIGRl
IFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXkuYyB8IDEwOCArKysrKysrKysrKysrKy0tLS0tCiAxIGZpbGUg
Y2hhbmdlZCwgODMgaW5zZXJ0aW9ucygrKSwgMjUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCA1OWIzYmZlOGI3MjEuLmE0
ZjI1MmQwNWIzNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMKQEAgLTE0NTE3LDE1ICsxNDUxNywyMSBAQCBzdGF0aWMgdm9pZCBza2xfY29tbWl0X21v
ZGVzZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAl1OCBod19l
bmFibGVkX3NsaWNlcyA9IGRldl9wcml2LT53bS5za2xfaHcuZGRiLmVuYWJsZWRfc2xpY2VzOwog
CXU4IHJlcXVpcmVkX3NsaWNlcyA9IHN0YXRlLT53bV9yZXN1bHRzLmRkYi5lbmFibGVkX3NsaWNl
czsKIAlzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSBlbnRyaWVzW0k5MTVfTUFYX1BJUEVTXSA9IHt9Owot
CXU4IGRpcnR5X3BpcGVzID0gMDsKKwljb25zdCB1OCBudW1fcGlwZXMgPSBJTlRFTF9OVU1fUElQ
RVMoZGV2X3ByaXYpOworCXU4IHVwZGF0ZV9waXBlcyA9IDAsIG1vZGVzZXRfcGlwZXMgPSAwOwog
CWludCBpOwogCiAJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5fc3RhdGUoc3RhdGUsIGNy
dGMsIG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCQlpZiAoIW5ld19jcnRj
X3N0YXRlLT5ody5hY3RpdmUpCisJCQljb250aW51ZTsKKwogCQkvKiBpZ25vcmUgYWxsb2NhdGlv
bnMgZm9yIGNydGMncyB0aGF0IGhhdmUgYmVlbiB0dXJuZWQgb2ZmLiAqLwotCQlpZiAoIW5lZWRz
X21vZGVzZXQobmV3X2NydGNfc3RhdGUpICYmIG5ld19jcnRjX3N0YXRlLT5ody5hY3RpdmUpCisJ
CWlmICghbmVlZHNfbW9kZXNldChuZXdfY3J0Y19zdGF0ZSkpIHsKIAkJCWVudHJpZXNbaV0gPSBv
bGRfY3J0Y19zdGF0ZS0+d20uc2tsLmRkYjsKLQkJaWYgKG5ld19jcnRjX3N0YXRlLT5ody5hY3Rp
dmUpCi0JCQlkaXJ0eV9waXBlcyB8PSBCSVQoY3J0Yy0+cGlwZSk7CisJCQl1cGRhdGVfcGlwZXMg
fD0gQklUKGNydGMtPnBpcGUpOworCQl9IGVsc2UgeworCQkJbW9kZXNldF9waXBlcyB8PSBCSVQo
bW9kZXNldF9waXBlcyk7CisJCX0KIAl9CiAKIAkvKiBJZiAybmQgREJ1ZiBzbGljZSByZXF1aXJl
ZCwgZW5hYmxlIGl0IGhlcmUgKi8KQEAgLTE0NTM1LDM4ICsxNDU0MSwyOSBAQCBzdGF0aWMgdm9p
ZCBza2xfY29tbWl0X21vZGVzZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpz
dGF0ZSkKIAkvKgogCSAqIFdoZW5ldmVyIHRoZSBudW1iZXIgb2YgYWN0aXZlIHBpcGVzIGNoYW5n
ZXMsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHdlCiAJICogdXBkYXRlIHRoZSBwaXBlcyBpbiB0aGUg
cmlnaHQgb3JkZXIgc28gdGhhdCB0aGVpciBkZGIgYWxsb2NhdGlvbnMKLQkgKiBuZXZlciBvdmVy
bGFwIHdpdGggZWFjaG90aGVyIGluYmV0d2VlbiBDUlRDIHVwZGF0ZXMuIE90aGVyd2lzZSB3ZSds
bAorCSAqIG5ldmVyIG92ZXJsYXAgd2l0aCBlYWNoIG90aGVyIGJldHdlZW4gQ1JUQyB1cGRhdGVz
LiBPdGhlcndpc2Ugd2UnbGwKIAkgKiBjYXVzZSBwaXBlIHVuZGVycnVucyBhbmQgb3RoZXIgYmFk
IHN0dWZmLgorCSAqCisJICogU28gZmlyc3QgbGV0cyBlbmFibGUgYWxsIHBpcGVzIHRoYXQgZGlk
IG5vdCBuZWVkZWQgYSBmdWxsbW9kZXNldCBzbworCSAqIGl0IGRvbid0IGhhdmUgYW55IGV4dGVy
bmFsIGRlcGVuZGVuY3kKIAkgKi8KLQl3aGlsZSAoZGlydHlfcGlwZXMpIHsKKwl3aGlsZSAodXBk
YXRlX3BpcGVzKSB7CiAJCWZvcl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRl
LCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwKIAkJCQkJCSAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgewog
CQkJZW51bSBwaXBlIHBpcGUgPSBjcnRjLT5waXBlOwotCQkJYm9vbCBtb2Rlc2V0ID0gbmVlZHNf
bW9kZXNldChuZXdfY3J0Y19zdGF0ZSk7CiAKLQkJCWlmICgoZGlydHlfcGlwZXMgJiBCSVQocGlw
ZSkpID09IDApCisJCQlpZiAoKHVwZGF0ZV9waXBlcyAmIEJJVChwaXBlKSkgPT0gMCkKIAkJCQlj
b250aW51ZTsKIAogCQkJaWYgKHNrbF9kZGJfYWxsb2NhdGlvbl9vdmVybGFwcygmbmV3X2NydGNf
c3RhdGUtPndtLnNrbC5kZGIsCi0JCQkJCQkJZW50cmllcywKLQkJCQkJCQlJTlRFTF9OVU1fUElQ
RVMoZGV2X3ByaXYpLCBpKSkKKwkJCQkJCQllbnRyaWVzLCBudW1fcGlwZXMsIGkpKQogCQkJCWNv
bnRpbnVlOwogCiAJCQllbnRyaWVzW2ldID0gbmV3X2NydGNfc3RhdGUtPndtLnNrbC5kZGI7Ci0J
CQlkaXJ0eV9waXBlcyAmPSB+QklUKHBpcGUpOwotCi0JCQlpZiAobW9kZXNldCAmJiBpc190cmFu
c19wb3J0X3N5bmNfbW9kZShuZXdfY3J0Y19zdGF0ZSkpIHsKLQkJCQlpZiAoaXNfdHJhbnNfcG9y
dF9zeW5jX21hc3RlcihuZXdfY3J0Y19zdGF0ZSkpCi0JCQkJCWludGVsX3VwZGF0ZV90cmFuc19w
b3J0X3N5bmNfY3J0Y3MoY3J0YywKLQkJCQkJCQkJCSAgIHN0YXRlLAotCQkJCQkJCQkJICAgb2xk
X2NydGNfc3RhdGUsCi0JCQkJCQkJCQkgICBuZXdfY3J0Y19zdGF0ZSk7Ci0JCQkJZWxzZQotCQkJ
CQljb250aW51ZTsKLQkJCX0gZWxzZSB7Ci0JCQkJaW50ZWxfdXBkYXRlX2NydGMoY3J0Yywgc3Rh
dGUsIG9sZF9jcnRjX3N0YXRlLAotCQkJCQkJICBuZXdfY3J0Y19zdGF0ZSk7Ci0JCQl9CisJCQl1
cGRhdGVfcGlwZXMgJj0gfkJJVChwaXBlKTsKKworCQkJaW50ZWxfdXBkYXRlX2NydGMoY3J0Yywg
c3RhdGUsIG9sZF9jcnRjX3N0YXRlLAorCQkJCQkgIG5ld19jcnRjX3N0YXRlKTsKIAogCQkJLyoK
IAkJCSAqIElmIHRoaXMgaXMgYW4gYWxyZWFkeSBhY3RpdmUgcGlwZSwgaXQncyBEREIgY2hhbmdl
ZCwKQEAgLTE0NTc2LDExICsxNDU3Myw3MiBAQCBzdGF0aWMgdm9pZCBza2xfY29tbWl0X21vZGVz
ZXRfZW5hYmxlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJCSAqLwogCQkJ
aWYgKCFza2xfZGRiX2VudHJ5X2VxdWFsKCZuZXdfY3J0Y19zdGF0ZS0+d20uc2tsLmRkYiwKIAkJ
CQkJCSAmb2xkX2NydGNfc3RhdGUtPndtLnNrbC5kZGIpICYmCi0JCQkgICAgIW1vZGVzZXQgJiYg
ZGlydHlfcGlwZXMpCisJCQkgICAgKHVwZGF0ZV9waXBlcyB8IG1vZGVzZXRfcGlwZXMpKQogCQkJ
CWludGVsX3dhaXRfZm9yX3ZibGFuayhkZXZfcHJpdiwgcGlwZSk7CiAJCX0KIAl9CiAKKwkvKgor
CSAqIEVuYWJsaW5nIGFsbCBwaXBlcyB0aGF0IG5lZWRzIGEgbW9kZXNldCBhbmQgZG8gbm90IGRl
cGVuZHMgb24gb3RoZXIKKwkgKiBwaXBlcworCSAqLworCWZvcl9lYWNoX29sZG5ld19pbnRlbF9j
cnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwKKwkJCQkJICAgIG5ld19j
cnRjX3N0YXRlLCBpKSB7CisJCWVudW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKKworCQlpZiAo
KG1vZGVzZXRfcGlwZXMgJiBCSVQocGlwZSkpID09IDApCisJCQljb250aW51ZTsKKworCQlpZiAo
aW50ZWxfZHBfbXN0X2lzX3NsYXZlX3RyYW5zKG5ld19jcnRjX3N0YXRlKSB8fAorCQkgICAgaXNf
dHJhbnNfcG9ydF9zeW5jX3NsYXZlKG5ld19jcnRjX3N0YXRlKSkKKwkJCWNvbnRpbnVlOworCisJ
CVdBUk5fT04oc2tsX2RkYl9hbGxvY2F0aW9uX292ZXJsYXBzKCZuZXdfY3J0Y19zdGF0ZS0+d20u
c2tsLmRkYiwKKwkJCQkJCSAgICBlbnRyaWVzLCBudW1fcGlwZXMsIGkpKTsKKworCQllbnRyaWVz
W2ldID0gbmV3X2NydGNfc3RhdGUtPndtLnNrbC5kZGI7CisJCW1vZGVzZXRfcGlwZXMgJj0gfkJJ
VChwaXBlKTsKKworCQlpZiAoaXNfdHJhbnNfcG9ydF9zeW5jX21vZGUobmV3X2NydGNfc3RhdGUp
KSB7CisJCQlzdHJ1Y3QgaW50ZWxfY3J0YyAqc2xhdmVfY3J0YzsKKworCQkJaW50ZWxfdXBkYXRl
X3RyYW5zX3BvcnRfc3luY19jcnRjcyhjcnRjLCBzdGF0ZSwKKwkJCQkJCQkgICBvbGRfY3J0Y19z
dGF0ZSwKKwkJCQkJCQkgICBuZXdfY3J0Y19zdGF0ZSk7CisKKwkJCXNsYXZlX2NydGMgPSBpbnRl
bF9nZXRfc2xhdmVfY3J0YyhuZXdfY3J0Y19zdGF0ZSk7CisJCQkvKiBUT0RPOiB1cGRhdGUgZW50
cmllc1tdIG9mIHNsYXZlICovCisJCQltb2Rlc2V0X3BpcGVzICY9IH5CSVQoc2xhdmVfY3J0Yy0+
cGlwZSk7CisKKwkJfSBlbHNlIHsKKwkJCWludGVsX3VwZGF0ZV9jcnRjKGNydGMsIHN0YXRlLCBv
bGRfY3J0Y19zdGF0ZSwKKwkJCQkJICBuZXdfY3J0Y19zdGF0ZSk7CisJCX0KKwl9CisKKwkvKgor
CSAqIEZpbmFsbHkgZW5hYmxlIGFsbCBwaXBlcyB0aGF0IG5lZWRzIGEgbW9kZXNldCBhbmQgZGVw
ZW5kcyBvbgorCSAqIG90aGVyIHBpcGVzLCByaWdodCBub3cgaXQgaXMgb25seSBNU1Qgc2xhdmVz
IGFzIGJvdGggcG9ydCBzeW5jIHNsYXZlCisJICogYW5kIG1hc3RlciBhcmUgZW5hYmxlZCB0b2dl
dGhlcgorCSAqLworCWZvcl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBj
cnRjLCBvbGRfY3J0Y19zdGF0ZSwKKwkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJCWVu
dW0gcGlwZSBwaXBlID0gY3J0Yy0+cGlwZTsKKworCQlpZiAoKG1vZGVzZXRfcGlwZXMgJiBCSVQo
cGlwZSkpID09IDApCisJCQljb250aW51ZTsKKworCQlXQVJOX09OKHNrbF9kZGJfYWxsb2NhdGlv
bl9vdmVybGFwcygmbmV3X2NydGNfc3RhdGUtPndtLnNrbC5kZGIsCisJCQkJCQkgICAgZW50cmll
cywgbnVtX3BpcGVzLCBpKSk7CisKKwkJZW50cmllc1tpXSA9IG5ld19jcnRjX3N0YXRlLT53bS5z
a2wuZGRiOworCQltb2Rlc2V0X3BpcGVzICY9IH5CSVQocGlwZSk7CisKKwkJaW50ZWxfdXBkYXRl
X2NydGMoY3J0Yywgc3RhdGUsIG9sZF9jcnRjX3N0YXRlLCBuZXdfY3J0Y19zdGF0ZSk7CisJfQor
CisJV0FSTl9PTihtb2Rlc2V0X3BpcGVzKTsKKwogCS8qIElmIDJuZCBEQnVmIHNsaWNlIGlzIG5v
IG1vcmUgcmVxdWlyZWQgZGlzYWJsZSBpdCAqLwogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDExICYmIHJlcXVpcmVkX3NsaWNlcyA8IGh3X2VuYWJsZWRfc2xpY2VzKQogCQlpY2xfZGJ1Zl9z
bGljZXNfdXBkYXRlKGRldl9wcml2LCByZXF1aXJlZF9zbGljZXMpOwotLSAKMi4yNC4xCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFp
bGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

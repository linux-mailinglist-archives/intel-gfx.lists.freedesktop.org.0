Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 3B646148B1
	for <lists+intel-gfx@lfdr.de>; Mon,  6 May 2019 13:12:48 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C84758987A;
	Mon,  6 May 2019 11:12:45 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 23C4C8987A
 for <intel-gfx@lists.freedesktop.org>; Mon,  6 May 2019 11:12:44 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 06 May 2019 04:12:43 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.60,437,1549958400"; d="scan'208";a="148724536"
Received: from ideak-desk.fi.intel.com ([10.237.72.204])
 by orsmga003.jf.intel.com with ESMTP; 06 May 2019 04:12:41 -0700
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  6 May 2019 14:12:25 +0300
Message-Id: <20190506111225.20910-1-imre.deak@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190502232648.4450-4-imre.deak@intel.com>
References: <20190502232648.4450-4-imre.deak@intel.com>
Subject: [Intel-gfx] [PATCH v2 03/10] drm/i915: Add support for asynchronous
 display power disabling
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QnkgZGlzYWJsaW5nIGEgcG93ZXIgZG9tYWluIGFzeW5jaHJvbm91c2x5IHdlIGNhbiByZXN0cmlj
dCBob2xkaW5nIGEKcmVmZXJlbmNlIG9uIHRoYXQgcG93ZXIgZG9tYWluIHRvIHRoZSBhY3R1YWwg
Y29kZSBzZXF1ZW5jZSB0aGF0CnJlcXVpcmVzIHRoZSBwb3dlciB0byBiZSBvbiBmb3IgdGhlIEhX
IGFjY2VzcyBpdCdzIGRvaW5nLCBieSBhbHNvCmF2b2lkaW5nIHVubmVlZGVkIG9uLW9mZi1vbiB0
b2dnbGluZ3Mgb2YgdGhlIHBvd2VyIGRvbWFpbiAoc2luY2UgdGhlCmRpc2FibGluZyBoYXBwZW5z
IHdpdGggYSBkZWxheSkuCgpPbmUgYmVuZWZpdCBpcyBwb3RlbnRpYWwgcG93ZXIgc2F2aW5nIGR1
ZSB0byB0aGUgZm9sbG93aW5nIHR3byByZWFzb25zOgoxLiBUaGUgZmFjdCB0aGF0IHdlIHdpbGwg
bm93IGJlIGhvbGRpbmcgdGhlIHJlZmVyZW5jZSBvbmx5IGZvciB0aGUKICAgbmVjZXNzYXJ5IGR1
cmF0aW9uIGJ5IHRoZSBlbmQgb2YgdGhlIHBhdGNoc2V0LiBXaGlsZSBzaW1wbHkgbm90CiAgIGRl
bGF5aW5nIHRoZSBkaXNhYmxpbmcgaGFzIHRoZSBzYW1lIGJlbmVmaXQsIGl0IGhhcyB0aGUgcHJv
YmxlbSB0aGF0CiAgIGZyZXF1ZW50IG9uLW9mZi1vbiBwb3dlciBzd2l0Y2hpbmcgaGFzIGl0cyBv
d24gcG93ZXIgY29zdCAoc2VlIHRoZSAyLgogICBwb2ludCBiZWxvdykgYW5kIHRoZSBkZWJ1ZyB0
cmFjZSBmb3IgcG93ZXIgd2VsbCBvbi9vZmYgZXZlbnRzIHdpbGwKICAgY2F1c2UgYSBsb3Qgb2Yg
ZG1lc2cgc3BhbSAoc2VlIGRldGFpbHMgYWJvdXQgdGhpcyBmdXJ0aGVyIGJlbG93KS4KMi4gQXZv
aWRpbmcgdGhlIHBvd2VyIGNvc3Qgb2YgZnJldXFlbnQgb24tb2ZmLW9uIHBvd2VyIHN3aXRjaGlu
Zy4gVGhpcwogICByZXF1aXJlcyB1cyB0byBmaW5kIHRoZSBvcHRpbWFsIGRpc2FibGluZyBkZWxh
eSBiYXNlZCBvbiB0aGUgbWVhc3VyZWQKICAgcG93ZXIgY29zdCBvZiBvbi0+b2ZmIGFuZCBvZmYt
Pm9uIHN3aXRjaGluZyBvZiBlYWNoIHBvd2VyIHdlbGwgdnMuCiAgIHRoZSBwb3dlciBvZiBrZWVw
aW5nIHRoZSBnaXZlbiBwb3dlciB3ZWxsIG9uLgoKICAgSW4gdGhpcyBwYXRjaHNldCBJJ20gbm90
IHByb3ZpZGluZyB0aGlzIG9wdGltYWwgZGVsYXkgZm9yIHR3bwogICByZWFzb25zOgogICBhKSBJ
IGRvbid0IGhhdmUgdGhlIG1lYW5zIHlldCB0byBwZXJmb3JtIHRoZSBtZWFzdXJlbWVudCAod2l0
aCBoaWdoCiAgICAgIGVub3VnaCBzaWduYWwtdG8tbm9pc2UgcmF0aW8sIG9yIHdpdGggdGhlIGhl
bHAgb2YgYW4gZW5lcmd5CiAgICAgIGNvdW50ZXIgdGhhdCB0YWtlcyBzd2l0Y2hpbmcgaW50byBh
Y2NvdW50KS4gSSdtIGN1cnJlbnRseSBsb29raW5nCiAgICAgIGZvciBhIHdheSB0byBtZWFzdXJl
IHRoaXMuCgogICBiKSBCZWZvcmUgcmVkdWNpbmcgdGhlIGRpc2FibGluZyBkZWxheSB3ZSBuZWVk
IGFuIGFsdGVybmF0aXZlIHdheSBmb3IKICAgICAgZGVidWcgdHJhY2luZyBwb3dlcndlbGwgb24v
b2ZmIGV2ZW50cy4gU2ltcGx5IGF2b2lkaW5nL3Rocm90dGxpbmcKICAgICAgdGhlIGRlYnVnIG1l
c3NhZ2VzIGlzIG5vdCBhIHNvbHV0aW9uLCBzZWUgZnVydGhlciBiZWxvdy4KCiAgIE5vdGUgdGhh
dCBldmVuIGluIHRoZSBjYXNlIHdoZXJlIHdlIGNhbid0IG1lYXN1cmUgYW55IGNvbnNpZGVyYWJs
ZQogICBwb3dlciBjb3N0IG9mIGZyZXF1ZW50IG9uLW9mZiBzd2l0Y2hpbmcgb2YgcG93ZXJ3ZWxs
cywgaXQgc3RpbGwgd291bGQKICAgbWFrZSBzZW5zZSB0byBkbyB0aGUgZGlzYWJsaW5nIGFzeW5j
aHJvbm91c2x5ICh3aXRoIDAgZGVsYXkpIHRvIGF2b2lkCiAgIGJsb2NraW5nIG9uIHRoZSBkaXNh
YmxpbmcuIE9uIFZMViBJIG1lYXN1cmVkIHRoaXMgZGlzYWJsaW5nIHRpbWUKICAgb3ZlcmhlYWQg
dG8gYmUgMW1zIG9uIGF2ZXJhZ2Ugd2l0aCBhIHdvcnN0IGNhc2Ugb2YgNG1zLgoKSW4gdGhlIGNh
c2Ugb2YgdGhlIEFVWCBwb3dlciBkb21haW5zIG9uIElDTCB3ZSB3b3VsZCBhbHNvIG5lZWQgdG8g
a2VlcAp0aGUgc2VxdWVuY2Ugd2hlcmUgd2UgaG9sZCB0aGUgcG93ZXIgcmVmZXJlbmNlIHNob3J0
LCB0aGUgd2F5IGl0IHdvdWxkCmJlIGJ5IHRoZSBlbmQgb2YgdGhpcyBwYXRjaHNldCB3aGVyZSB3
ZSBob2xkIGl0IG9ubHkgZm9yIHRoZSBhY3R1YWwgQVVYCnRyYW5zZmVyLiBBbnl0aGluZyBlbHNl
IHdvdWxkIG1ha2UgdGhlIGxvY2tpbmcgd2UgbmVlZCBmb3IgSUNMIFR5cGVDCnBvcnRzICh3aGVu
ZXZlciB3ZSBob2xkIGEgcmVmZXJlbmNlIG9uIGFueSBBVVggcG93ZXIgZG9tYWluKSByYXRoZXIK
cHJvYmxlbWF0aWMsIGFkZGluZyBmb3IgaW5zdGFuY2UgdW5uZWNlc3NhcnkgbG9ja2RlcCBkZXBl
bmRlbmNpZXMgdG8KdGhlIHJlcXVpcmVkIFR5cGVDIHBvcnQgbG9jay4KCkkgY2hvc2UgdGhlIGRp
c2FibGluZyBkZWxheSB0byBiZSAxMDBtc2VjIGZvciBub3cgdG8gYXZvaWQgdGhlIHVubmVlZGVk
CnRvZ2dsaW5nIChhbmQgc28gbm90IHRvIGludHJvZHVjZSBkbWVzZyBzcGFtbWluZykgaW4gdGhl
IERQIE1TVCBzaWRlYmFuZApzaWduYWxpbmcgY29kZS4gV2UgY291bGQgb3B0aW1pemUgdGhpcyBk
ZWxheSBsYXRlciwgb25jZSB3ZSBoYXZlIHRoZQptZWFucyB0byBtZWFzdXJlIHRoZSBzd2l0Y2hp
bmcgcG93ZXIgY29zdCAoc2VlIGFib3ZlKS4KCk5vdGUgdGhhdCBzaW1wbHkgcmVtb3ZpbmcvdGhy
b3R0bGluZyB0aGUgZGVidWcgdHJhY2luZyBmb3IgcG93ZXIgd2VsbApvbi9vZmYgZXZlbnRzIGlz
IG5vdCBhIHNvbHV0aW9uLiBXZSBuZWVkIHRvIGtub3cgdGhlIGV4YWN0IHNwb3RzIG9mCnRoZXNl
IGV2ZW50cyBhbmQgY2Fubm90IHJlbHkgb25seSBvbiBpbmNvcnJlY3QgcmVnaXN0ZXIgYWNjZXNz
ZXMgY2F1Z2h0CihkdWUgdG8gbm90IGhvbGRpbmcgYSB3YWtlcmVmIGF0IHRoZSB0aW1lIG9mIGFj
Y2VzcykuIEluY29ycmVjdApwb3dlcndlbGwgZW5hYmxpbmcvZGlzYWJsaW5nIGNvdWxkIGxlYWQg
dG8gb3RoZXIgcHJvYmxlbXMsIGZvciBpbnN0YW5jZQp3ZSBuZWVkIHRvIGtlZXAgY2VydGFpbiBw
b3dlcndlbGxzIGVuYWJsZWQgZm9yIHRoZSBkdXJhdGlvbiBvZiBtb2Rlc2V0cwphbmQgQVVYIHRy
YW5zZmVycy4KCnYyOgotIENsYXJpZnkgdGhlIGNvbW1pdCBsb2cgcGFydHMgYWJvdXQgcG93ZXIg
Y29zdCBtZWFzdXJlbWVudCBhbmQgdGhlCiAgcHJvYmxlbSBvZiBzaW1wbHkgcmVtb3ZpbmcvdGhy
b3R0bGluZyBkZWJ1ZyB0cmFjaW5nLiAoQ2hyaXMpCgpDYzogQ2hyaXMgV2lsc29uIDxjaHJpc0Bj
aHJpcy13aWxzb24uY28udWs+CkNjOiBWaWxsZSBTeXJqYWxhIDx2aWxsZS5zeXJqYWxhQGxpbnV4
LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogSW1yZSBEZWFrIDxpbXJlLmRlYWtAaW50ZWwuY29t
PgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggICAgICAgICB8ICAgNSArCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ydW50aW1lX3BtLmMgfCAzMTYgKysrKysrKysrKysr
KysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ydW50aW1lX3BtLmggfCAg
IDQgKwogMyBmaWxlcyBjaGFuZ2VkLCAzMTUgaW5zZXJ0aW9ucygrKSwgMTAgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKaW5kZXggYTE2MmQ1N2YwYjU4Li44ZDE4ZDEyNGY0OTYg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaApAQCAtODM1LDYgKzgzNSwxMSBAQCBzdHJ1Y3QgaTkx
NV9wb3dlcl9kb21haW5zIHsKIAogCXN0cnVjdCBtdXRleCBsb2NrOwogCWludCBkb21haW5fdXNl
X2NvdW50W1BPV0VSX0RPTUFJTl9OVU1dOworCisJc3RydWN0IGRlbGF5ZWRfd29yayBhc3luY19w
dXRfd29yazsKKwlpbnRlbF93YWtlcmVmX3QgYXN5bmNfcHV0X3dha2VyZWY7CisJdTY0IGFzeW5j
X3B1dF9kb21haW5zWzJdOworCiAJc3RydWN0IGk5MTVfcG93ZXJfd2VsbCAqcG93ZXJfd2VsbHM7
CiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ydW50aW1lX3Bt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ydW50aW1lX3BtLmMKaW5kZXggYjRiMTdj
ZGM2ZjI2Li40MDc5YjEzNzhmMmQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3J1bnRpbWVfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ydW50aW1l
X3BtLmMKQEAgLTE4ODQsNiArMTg4NCwxMzAgQEAgc3RhdGljIHZvaWQgY2h2X3BpcGVfcG93ZXJf
d2VsbF9kaXNhYmxlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAljaHZfc2V0
X3BpcGVfcG93ZXJfd2VsbChkZXZfcHJpdiwgcG93ZXJfd2VsbCwgZmFsc2UpOwogfQogCitzdGF0
aWMgaW50ZWxfd2FrZXJlZl90CitpbnRlbF9ydW50aW1lX3BtX2dldF9yYXcoc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmk5MTUpOworc3RhdGljIHZvaWQKK2ludGVsX3J1bnRpbWVfcG1fcHV0X3Jh
dyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgaW50ZWxfd2FrZXJlZl90IHdyZWYpOwor
CitzdGF0aWMgdTY0IF9fYXN5bmNfcHV0X2RvbWFpbnNfbWFzayhzdHJ1Y3QgaTkxNV9wb3dlcl9k
b21haW5zICpwb3dlcl9kb21haW5zKQoreworCXJldHVybiBwb3dlcl9kb21haW5zLT5hc3luY19w
dXRfZG9tYWluc1swXSB8CisJICAgICAgIHBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5z
WzFdOworfQorCisjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfREVCVUdfUlVOVElNRV9Q
TSkKKworc3RhdGljIGJvb2wKK2Fzc2VydF9hc3luY19wdXRfZG9tYWluX21hc2tzX2Rpc2pvaW50
KHN0cnVjdCBpOTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMpCit7CisJcmV0dXJuICFX
QVJOX09OKHBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzBdICYKKwkJCXBvd2VyX2Rv
bWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzFdKTsKK30KKworc3RhdGljIGJvb2wKK19fYXN5bmNf
cHV0X2RvbWFpbnNfc3RhdGVfb2soc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyAqcG93ZXJfZG9t
YWlucykKK3sKKwllbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFpbjsKKwlib29s
IGVyciA9IGZhbHNlOworCisJZXJyIHw9ICFhc3NlcnRfYXN5bmNfcHV0X2RvbWFpbl9tYXNrc19k
aXNqb2ludChwb3dlcl9kb21haW5zKTsKKwllcnIgfD0gV0FSTl9PTighIXBvd2VyX2RvbWFpbnMt
PmFzeW5jX3B1dF93YWtlcmVmICE9CisJCSAgICAgICAhIV9fYXN5bmNfcHV0X2RvbWFpbnNfbWFz
ayhwb3dlcl9kb21haW5zKSk7CisKKwlmb3JfZWFjaF9wb3dlcl9kb21haW4oZG9tYWluLCBfX2Fz
eW5jX3B1dF9kb21haW5zX21hc2socG93ZXJfZG9tYWlucykpCisJCWVyciB8PSBXQVJOX09OKHBv
d2VyX2RvbWFpbnMtPmRvbWFpbl91c2VfY291bnRbZG9tYWluXSAhPSAxKTsKKworCXJldHVybiAh
ZXJyOworfQorCitzdGF0aWMgdm9pZCBwcmludF9wb3dlcl9kb21haW5zKHN0cnVjdCBpOTE1X3Bv
d2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMsCisJCQkJY29uc3QgY2hhciAqcHJlZml4LCB1NjQg
bWFzaykKK3sKKwllbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFpbjsKKworCURS
TV9ERUJVR19EUklWRVIoIiVzICglbHUpOlxuIiwgcHJlZml4LCBod2VpZ2h0NjQobWFzaykpOwor
CWZvcl9lYWNoX3Bvd2VyX2RvbWFpbihkb21haW4sIG1hc2spCisJCURSTV9ERUJVR19EUklWRVIo
IiVzIHVzZV9jb3VudCAlZFxuIiwKKwkJCQkgaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW5fc3Ry
KGRvbWFpbiksCisJCQkJIHBvd2VyX2RvbWFpbnMtPmRvbWFpbl91c2VfY291bnRbZG9tYWluXSk7
Cit9CisKK3N0YXRpYyB2b2lkCitwcmludF9hc3luY19wdXRfZG9tYWluc19zdGF0ZShzdHJ1Y3Qg
aTkxNV9wb3dlcl9kb21haW5zICpwb3dlcl9kb21haW5zKQoreworCURSTV9ERUJVR19EUklWRVIo
ImFzeW5jX3B1dF93YWtlcmVmICV1XG4iLAorCQkJIHBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF93
YWtlcmVmKTsKKworCXByaW50X3Bvd2VyX2RvbWFpbnMocG93ZXJfZG9tYWlucywgImFzeW5jX3B1
dF9kb21haW5zWzBdIiwKKwkJCSAgICBwb3dlcl9kb21haW5zLT5hc3luY19wdXRfZG9tYWluc1sw
XSk7CisJcHJpbnRfcG93ZXJfZG9tYWlucyhwb3dlcl9kb21haW5zLCAiYXN5bmNfcHV0X2RvbWFp
bnNbMV0iLAorCQkJICAgIHBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzFdKTsKK30K
Kworc3RhdGljIHZvaWQKK3ZlcmlmeV9hc3luY19wdXRfZG9tYWluc19zdGF0ZShzdHJ1Y3QgaTkx
NV9wb3dlcl9kb21haW5zICpwb3dlcl9kb21haW5zKQoreworCWlmICghX19hc3luY19wdXRfZG9t
YWluc19zdGF0ZV9vayhwb3dlcl9kb21haW5zKSkKKwkJcHJpbnRfYXN5bmNfcHV0X2RvbWFpbnNf
c3RhdGUocG93ZXJfZG9tYWlucyk7Cit9CisKKyNlbHNlCisKK3N0YXRpYyB2b2lkCithc3NlcnRf
YXN5bmNfcHV0X2RvbWFpbl9tYXNrc19kaXNqb2ludChzdHJ1Y3QgaTkxNV9wb3dlcl9kb21haW5z
ICpwb3dlcl9kb21haW5zKQoreworfQorCitzdGF0aWMgdm9pZAordmVyaWZ5X2FzeW5jX3B1dF9k
b21haW5zX3N0YXRlKHN0cnVjdCBpOTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMpCit7
Cit9CisKKyNlbmRpZiAvKiBDT05GSUdfRFJNX0k5MTVfREVCVUdfUlVOVElNRV9QTSAqLworCitz
dGF0aWMgdTY0IGFzeW5jX3B1dF9kb21haW5zX21hc2soc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlu
cyAqcG93ZXJfZG9tYWlucykKK3sKKwlhc3NlcnRfYXN5bmNfcHV0X2RvbWFpbl9tYXNrc19kaXNq
b2ludChwb3dlcl9kb21haW5zKTsKKworCXJldHVybiBfX2FzeW5jX3B1dF9kb21haW5zX21hc2so
cG93ZXJfZG9tYWlucyk7Cit9CisKK3N0YXRpYyB2b2lkCithc3luY19wdXRfZG9tYWluc19jbGVh
cl9kb21haW4oc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyAqcG93ZXJfZG9tYWlucywKKwkJCSAg
ICAgICBlbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFpbikKK3sKKwlhc3NlcnRf
YXN5bmNfcHV0X2RvbWFpbl9tYXNrc19kaXNqb2ludChwb3dlcl9kb21haW5zKTsKKworCXBvd2Vy
X2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzBdICY9IH5CSVRfVUxMKGRvbWFpbik7CisJcG93
ZXJfZG9tYWlucy0+YXN5bmNfcHV0X2RvbWFpbnNbMV0gJj0gfkJJVF9VTEwoZG9tYWluKTsKK30K
Kworc3RhdGljIGJvb2wKK2ludGVsX2Rpc3BsYXlfcG93ZXJfZ3JhYl9hc3luY19wdXRfcmVmKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgICAgICAgZW51bSBpbnRlbF9k
aXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4pCit7CisJc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlu
cyAqcG93ZXJfZG9tYWlucyA9ICZkZXZfcHJpdi0+cG93ZXJfZG9tYWluczsKKwlib29sIHJldCA9
IGZhbHNlOworCisJaWYgKCEoYXN5bmNfcHV0X2RvbWFpbnNfbWFzayhwb3dlcl9kb21haW5zKSAm
IEJJVF9VTEwoZG9tYWluKSkpCisJCWdvdG8gb3V0X3ZlcmlmeTsKKworCWFzeW5jX3B1dF9kb21h
aW5zX2NsZWFyX2RvbWFpbihwb3dlcl9kb21haW5zLCBkb21haW4pOworCisJcmV0ID0gdHJ1ZTsK
KworCWlmIChhc3luY19wdXRfZG9tYWluc19tYXNrKHBvd2VyX2RvbWFpbnMpKQorCQlnb3RvIG91
dF92ZXJpZnk7CisKKwljYW5jZWxfZGVsYXllZF93b3JrKCZwb3dlcl9kb21haW5zLT5hc3luY19w
dXRfd29yayk7CisJaW50ZWxfcnVudGltZV9wbV9wdXRfcmF3KGRldl9wcml2LAorCQkJCSBmZXRj
aF9hbmRfemVybygmcG93ZXJfZG9tYWlucy0+YXN5bmNfcHV0X3dha2VyZWYpKTsKK291dF92ZXJp
Znk6CisJdmVyaWZ5X2FzeW5jX3B1dF9kb21haW5zX3N0YXRlKHBvd2VyX2RvbWFpbnMpOworCisJ
cmV0dXJuIHJldDsKK30KKwogc3RhdGljIHZvaWQKIF9faW50ZWxfZGlzcGxheV9wb3dlcl9nZXRf
ZG9tYWluKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgZW51bSBpbnRl
bF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4pCkBAIC0xODkxLDYgKzIwMTUsOSBAQCBfX2lu
dGVsX2Rpc3BsYXlfcG93ZXJfZ2V0X2RvbWFpbihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyAqcG93ZXJfZG9tYWlucyA9ICZkZXZf
cHJpdi0+cG93ZXJfZG9tYWluczsKIAlzdHJ1Y3QgaTkxNV9wb3dlcl93ZWxsICpwb3dlcl93ZWxs
OwogCisJaWYgKGludGVsX2Rpc3BsYXlfcG93ZXJfZ3JhYl9hc3luY19wdXRfcmVmKGRldl9wcml2
LCBkb21haW4pKQorCQlyZXR1cm47CisKIAlmb3JfZWFjaF9wb3dlcl9kb21haW5fd2VsbChkZXZf
cHJpdiwgcG93ZXJfd2VsbCwgQklUX1VMTChkb21haW4pKQogCQlpbnRlbF9wb3dlcl93ZWxsX2dl
dChkZXZfcHJpdiwgcG93ZXJfd2VsbCk7CiAKQEAgLTE5MTYsOSArMjA0Myw3IEBAIGludGVsX3dh
a2VyZWZfdCBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsCiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dl
dChkZXZfcHJpdik7CiAKIAltdXRleF9sb2NrKCZwb3dlcl9kb21haW5zLT5sb2NrKTsKLQogCV9f
aW50ZWxfZGlzcGxheV9wb3dlcl9nZXRfZG9tYWluKGRldl9wcml2LCBkb21haW4pOwotCiAJbXV0
ZXhfdW5sb2NrKCZwb3dlcl9kb21haW5zLT5sb2NrKTsKIAogCXJldHVybiB3YWtlcmVmOwpAQCAt
MTk2NywyNCArMjA5MiwzNiBAQCBpbnRlbF9kaXNwbGF5X3Bvd2VyX2dldF9pZl9lbmFibGVkKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlyZXR1cm4gd2FrZXJlZjsKIH0KIAot
c3RhdGljIHZvaWQgX19pbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCi0JCQkJICAgICAgZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFp
biBkb21haW4pCitzdGF0aWMgdm9pZAorX19pbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF9kb21haW4o
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSBlbnVtIGludGVsX2Rpc3Bs
YXlfcG93ZXJfZG9tYWluIGRvbWFpbikKIHsKIAlzdHJ1Y3QgaTkxNV9wb3dlcl9kb21haW5zICpw
b3dlcl9kb21haW5zOwogCXN0cnVjdCBpOTE1X3Bvd2VyX3dlbGwgKnBvd2VyX3dlbGw7CisJY29u
c3QgY2hhciAqbmFtZSA9IGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluX3N0cihkb21haW4pOwog
CiAJcG93ZXJfZG9tYWlucyA9ICZkZXZfcHJpdi0+cG93ZXJfZG9tYWluczsKIAotCW11dGV4X2xv
Y2soJnBvd2VyX2RvbWFpbnMtPmxvY2spOwotCiAJV0FSTighcG93ZXJfZG9tYWlucy0+ZG9tYWlu
X3VzZV9jb3VudFtkb21haW5dLAogCSAgICAgIlVzZSBjb3VudCBvbiBkb21haW4gJXMgaXMgYWxy
ZWFkeSB6ZXJvXG4iLAotCSAgICAgaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW5fc3RyKGRvbWFp
bikpOworCSAgICAgbmFtZSk7CisJV0FSTihhc3luY19wdXRfZG9tYWluc19tYXNrKHBvd2VyX2Rv
bWFpbnMpICYgQklUX1VMTChkb21haW4pLAorCSAgICAgIkFzeW5jIGRpc2FibGluZyBvZiBkb21h
aW4gJXMgaXMgcGVuZGluZ1xuIiwKKwkgICAgIG5hbWUpOworCiAJcG93ZXJfZG9tYWlucy0+ZG9t
YWluX3VzZV9jb3VudFtkb21haW5dLS07CiAKIAlmb3JfZWFjaF9wb3dlcl9kb21haW5fd2VsbF9y
ZXZlcnNlKGRldl9wcml2LCBwb3dlcl93ZWxsLCBCSVRfVUxMKGRvbWFpbikpCiAJCWludGVsX3Bv
d2VyX3dlbGxfcHV0KGRldl9wcml2LCBwb3dlcl93ZWxsKTsKK30KIAorc3RhdGljIHZvaWQgX19p
bnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYs
CisJCQkJICAgICAgZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4pCit7CisJ
c3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyAqcG93ZXJfZG9tYWlucyA9ICZkZXZfcHJpdi0+cG93
ZXJfZG9tYWluczsKKworCW11dGV4X2xvY2soJnBvd2VyX2RvbWFpbnMtPmxvY2spOworCV9faW50
ZWxfZGlzcGxheV9wb3dlcl9wdXRfZG9tYWluKGRldl9wcml2LCBkb21haW4pOwogCW11dGV4X3Vu
bG9jaygmcG93ZXJfZG9tYWlucy0+bG9jayk7CiB9CiAKQEAgLTIwMDQsNiArMjE0MSwxNTkgQEAg
dm9pZCBpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF91bmNoZWNrZWQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LAogCWludGVsX3J1bnRpbWVfcG1fcHV0X3VuY2hlY2tlZChkZXZfcHJp
dik7CiB9CiAKK3N0YXRpYyB2b2lkCitxdWV1ZV9hc3luY19wdXRfZG9tYWluc193b3JrKHN0cnVj
dCBpOTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMsCisJCQkgICAgIGludGVsX3dha2Vy
ZWZfdCB3YWtlcmVmKQoreworCVdBUk5fT04ocG93ZXJfZG9tYWlucy0+YXN5bmNfcHV0X3dha2Vy
ZWYpOworCXBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF93YWtlcmVmID0gd2FrZXJlZjsKKwlXQVJO
X09OKCFxdWV1ZV9kZWxheWVkX3dvcmsoc3lzdGVtX3VuYm91bmRfd3EsCisJCQkJICAgICZwb3dl
cl9kb21haW5zLT5hc3luY19wdXRfd29yaywKKwkJCQkgICAgbXNlY3NfdG9famlmZmllcygxMDAp
KSk7Cit9CisKK3N0YXRpYyB2b2lkCityZWxlYXNlX2FzeW5jX3B1dF9kb21haW5zKHN0cnVjdCBp
OTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMsIHU2NCBtYXNrKQoreworCXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9CisJCWNvbnRhaW5lcl9vZihwb3dlcl9kb21haW5z
LCBzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSwKKwkJCSAgICAgcG93ZXJfZG9tYWlucyk7CisJZW51
bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW47CisJaW50ZWxfd2FrZXJlZl90IHdh
a2VyZWY7CisKKwkvKgorCSAqIFRoZSBjYWxsZXIgbXVzdCBob2xkIGFscmVhZHkgcmF3IHdha2Vy
ZWYsIHVwZ3JhZGUgdGhhdCB0byBhIHByb3BlcgorCSAqIHdha2VyZWYgdG8gbWFrZSB0aGUgc3Rh
dGUgY2hlY2tlciBoYXBweSBhYm91dCB0aGUgSFcgYWNjZXNzIGR1cmluZworCSAqIHBvd2VyIHdl
bGwgZGlzYWJsaW5nLgorCSAqLworCWFzc2VydF9yYXdfcnBtX3dha2Vsb2NrX2hlbGQoZGV2X3By
aXYpOworCXdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldChkZXZfcHJpdik7CisKKwlmb3Jf
ZWFjaF9wb3dlcl9kb21haW4oZG9tYWluLCBtYXNrKSB7CisJCS8qIENsZWFyIGJlZm9yZSBwdXQs
IHNvIHB1dCdzIHNhbml0eSBjaGVjayBpcyBoYXBweS4gKi8KKwkJYXN5bmNfcHV0X2RvbWFpbnNf
Y2xlYXJfZG9tYWluKHBvd2VyX2RvbWFpbnMsIGRvbWFpbik7CisJCV9faW50ZWxfZGlzcGxheV9w
b3dlcl9wdXRfZG9tYWluKGRldl9wcml2LCBkb21haW4pOworCX0KKworCWludGVsX3J1bnRpbWVf
cG1fcHV0KGRldl9wcml2LCB3YWtlcmVmKTsKK30KKworc3RhdGljIHZvaWQKK2ludGVsX2Rpc3Bs
YXlfcG93ZXJfcHV0X2FzeW5jX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQoreworCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9CisJCWNvbnRhaW5lcl9vZih3b3JrLCBz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSwKKwkJCSAgICAgcG93ZXJfZG9tYWlucy5hc3luY19wdXRf
d29yay53b3JrKTsKKwlzdHJ1Y3QgaTkxNV9wb3dlcl9kb21haW5zICpwb3dlcl9kb21haW5zID0g
JmRldl9wcml2LT5wb3dlcl9kb21haW5zOworCWludGVsX3dha2VyZWZfdCBuZXdfd29ya193YWtl
cmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXRfcmF3KGRldl9wcml2KTsKKwlpbnRlbF93YWtlcmVm
X3Qgb2xkX3dvcmtfd2FrZXJlZiA9IDA7CisKKwltdXRleF9sb2NrKCZwb3dlcl9kb21haW5zLT5s
b2NrKTsKKworCS8qCisJICogQmFpbCBvdXQgaWYgYWxsIHRoZSBkb21haW4gcmVmcyBwZW5kaW5n
IHRvIGJlIHJlbGVhc2VkIHdlcmUgZ3JhYmJlZAorCSAqIGJ5IHN1YnNlcXVlbnQgZ2V0cyBvciBh
IGZsdXNoX3dvcmsuCisJICovCisJb2xkX3dvcmtfd2FrZXJlZiA9IGZldGNoX2FuZF96ZXJvKCZw
b3dlcl9kb21haW5zLT5hc3luY19wdXRfd2FrZXJlZik7CisJaWYgKCFvbGRfd29ya193YWtlcmVm
KQorCQlnb3RvIG91dF92ZXJpZnk7CisKKwlyZWxlYXNlX2FzeW5jX3B1dF9kb21haW5zKHBvd2Vy
X2RvbWFpbnMsCisJCQkJICBwb3dlcl9kb21haW5zLT5hc3luY19wdXRfZG9tYWluc1swXSk7CisK
KwkvKiBSZXF1ZXVlIHRoZSB3b3JrIGlmIG1vcmUgZG9tYWlucyB3ZXJlIGFzeW5jIHB1dCBtZWFu
d2hpbGUuICovCisJaWYgKHBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzFdKSB7CisJ
CXBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzBdID0KKwkJCWZldGNoX2FuZF96ZXJv
KCZwb3dlcl9kb21haW5zLT5hc3luY19wdXRfZG9tYWluc1sxXSk7CisJCXF1ZXVlX2FzeW5jX3B1
dF9kb21haW5zX3dvcmsocG93ZXJfZG9tYWlucywKKwkJCQkJICAgICBmZXRjaF9hbmRfemVybygm
bmV3X3dvcmtfd2FrZXJlZikpOworCX0KKworb3V0X3ZlcmlmeToKKwl2ZXJpZnlfYXN5bmNfcHV0
X2RvbWFpbnNfc3RhdGUocG93ZXJfZG9tYWlucyk7CisKKwltdXRleF91bmxvY2soJnBvd2VyX2Rv
bWFpbnMtPmxvY2spOworCisJaWYgKG9sZF93b3JrX3dha2VyZWYpCisJCWludGVsX3J1bnRpbWVf
cG1fcHV0X3JhdyhkZXZfcHJpdiwgb2xkX3dvcmtfd2FrZXJlZik7CisJaWYgKG5ld193b3JrX3dh
a2VyZWYpCisJCWludGVsX3J1bnRpbWVfcG1fcHV0X3JhdyhkZXZfcHJpdiwgbmV3X3dvcmtfd2Fr
ZXJlZik7Cit9CisKK3ZvaWQgaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5bmMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAorCQkJCSAgIGVudW0gaW50ZWxfZGlzcGxheV9wb3dl
cl9kb21haW4gZG9tYWluLAorCQkJCSAgIGludGVsX3dha2VyZWZfdCB3YWtlcmVmKQoreworCXN0
cnVjdCBpOTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2RvbWFpbnMgPSAmZGV2X3ByaXYtPnBvd2Vy
X2RvbWFpbnM7CisJaW50ZWxfd2FrZXJlZl90IHdvcmtfd2FrZXJlZiA9IGludGVsX3J1bnRpbWVf
cG1fZ2V0X3JhdyhkZXZfcHJpdik7CisKKwltdXRleF9sb2NrKCZwb3dlcl9kb21haW5zLT5sb2Nr
KTsKKworCWlmIChwb3dlcl9kb21haW5zLT5kb21haW5fdXNlX2NvdW50W2RvbWFpbl0gPiAxKSB7
CisJCV9faW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfZG9tYWluKGRldl9wcml2LCBkb21haW4pOwor
CisJCWdvdG8gb3V0X3ZlcmlmeTsKKwl9CisKKwlXQVJOX09OKHBvd2VyX2RvbWFpbnMtPmRvbWFp
bl91c2VfY291bnRbZG9tYWluXSAhPSAxKTsKKworCS8qIExldCBhIHBlbmRpbmcgd29yayByZXF1
ZXVlIGl0c2VsZiBvciBxdWV1ZSBhIG5ldyBvbmUuICovCisJaWYgKHBvd2VyX2RvbWFpbnMtPmFz
eW5jX3B1dF93YWtlcmVmKSB7CisJCXBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF9kb21haW5zWzFd
IHw9IEJJVF9VTEwoZG9tYWluKTsKKwl9IGVsc2UgeworCQlwb3dlcl9kb21haW5zLT5hc3luY19w
dXRfZG9tYWluc1swXSB8PSBCSVRfVUxMKGRvbWFpbik7CisJCXF1ZXVlX2FzeW5jX3B1dF9kb21h
aW5zX3dvcmsocG93ZXJfZG9tYWlucywKKwkJCQkJICAgICBmZXRjaF9hbmRfemVybygmd29ya193
YWtlcmVmKSk7CisJfQorCitvdXRfdmVyaWZ5OgorCXZlcmlmeV9hc3luY19wdXRfZG9tYWluc19z
dGF0ZShwb3dlcl9kb21haW5zKTsKKworCW11dGV4X3VubG9jaygmcG93ZXJfZG9tYWlucy0+bG9j
ayk7CisKKwlpZiAod29ya193YWtlcmVmKQorCQlpbnRlbF9ydW50aW1lX3BtX3B1dF9yYXcoZGV2
X3ByaXYsIHdvcmtfd2FrZXJlZik7CisKKwlpbnRlbF9ydW50aW1lX3BtX3B1dChkZXZfcHJpdiwg
d2FrZXJlZik7Cit9CisKK3ZvaWQgaW50ZWxfZGlzcGxheV9wb3dlcl9mbHVzaF93b3JrKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3sKKwlzdHJ1Y3QgaTkxNV9wb3dlcl9kb21h
aW5zICpwb3dlcl9kb21haW5zID0gJmRldl9wcml2LT5wb3dlcl9kb21haW5zOworCWludGVsX3dh
a2VyZWZfdCB3b3JrX3dha2VyZWY7CisKKwltdXRleF9sb2NrKCZwb3dlcl9kb21haW5zLT5sb2Nr
KTsKKworCXdvcmtfd2FrZXJlZiA9IGZldGNoX2FuZF96ZXJvKCZwb3dlcl9kb21haW5zLT5hc3lu
Y19wdXRfd2FrZXJlZik7CisJaWYgKCF3b3JrX3dha2VyZWYpCisJCWdvdG8gb3V0X3ZlcmlmeTsK
KworCXJlbGVhc2VfYXN5bmNfcHV0X2RvbWFpbnMocG93ZXJfZG9tYWlucywKKwkJCQkgIGFzeW5j
X3B1dF9kb21haW5zX21hc2socG93ZXJfZG9tYWlucykpOworCWNhbmNlbF9kZWxheWVkX3dvcmso
JnBvd2VyX2RvbWFpbnMtPmFzeW5jX3B1dF93b3JrKTsKKworb3V0X3ZlcmlmeToKKwl2ZXJpZnlf
YXN5bmNfcHV0X2RvbWFpbnNfc3RhdGUocG93ZXJfZG9tYWlucyk7CisKKwltdXRleF91bmxvY2so
JnBvd2VyX2RvbWFpbnMtPmxvY2spOworCisJaWYgKHdvcmtfd2FrZXJlZikKKwkJaW50ZWxfcnVu
dGltZV9wbV9wdXRfcmF3KGRldl9wcml2LCB3b3JrX3dha2VyZWYpOworfQorCitzdGF0aWMgdm9p
ZAoraW50ZWxfZGlzcGxheV9wb3dlcl9mbHVzaF93b3JrX3N5bmMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQoreworCXN0cnVjdCBpOTE1X3Bvd2VyX2RvbWFpbnMgKnBvd2VyX2Rv
bWFpbnMgPSAmZGV2X3ByaXYtPnBvd2VyX2RvbWFpbnM7CisKKwlpbnRlbF9kaXNwbGF5X3Bvd2Vy
X2ZsdXNoX3dvcmsoZGV2X3ByaXYpOworCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmcG93ZXJf
ZG9tYWlucy0+YXN5bmNfcHV0X3dvcmspOworCisJdmVyaWZ5X2FzeW5jX3B1dF9kb21haW5zX3N0
YXRlKHBvd2VyX2RvbWFpbnMpOworCisJV0FSTl9PTihwb3dlcl9kb21haW5zLT5hc3luY19wdXRf
d2FrZXJlZik7Cit9CisKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVR19SVU5U
SU1FX1BNKQogdm9pZCBpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgIGVudW0gaW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4g
ZG9tYWluLApAQCAtMzQ5Miw2ICszNzgyLDkgQEAgaW50IGludGVsX3Bvd2VyX2RvbWFpbnNfaW5p
dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAKIAltdXRleF9pbml0KCZwb3dl
cl9kb21haW5zLT5sb2NrKTsKIAorCUlOSVRfREVMQVlFRF9XT1JLKCZwb3dlcl9kb21haW5zLT5h
c3luY19wdXRfd29yaywKKwkJCSAgaW50ZWxfZGlzcGxheV9wb3dlcl9wdXRfYXN5bmNfd29yayk7
CisKIAkvKgogCSAqIFRoZSBlbmFibGluZyBvcmRlciB3aWxsIGJlIGZyb20gbG93ZXIgdG8gaGln
aGVyIGluZGV4ZWQgd2VsbHMsCiAJICogdGhlIGRpc2FibGluZyBvcmRlciBpcyByZXZlcnNlZC4K
QEAgLTQxNjksNiArNDQ2Miw4IEBAIHZvaWQgaW50ZWxfcG93ZXJfZG9tYWluc19maW5pX2h3KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCWlmICghaTkxNV9tb2RwYXJhbXMuZGlzYWJs
ZV9wb3dlcl93ZWxsKQogCQlpbnRlbF9kaXNwbGF5X3Bvd2VyX3B1dF91bmNoZWNrZWQoaTkxNSwg
UE9XRVJfRE9NQUlOX0lOSVQpOwogCisJaW50ZWxfZGlzcGxheV9wb3dlcl9mbHVzaF93b3JrX3N5
bmMoaTkxNSk7CisKIAlpbnRlbF9wb3dlcl9kb21haW5zX3ZlcmlmeV9zdGF0ZShpOTE1KTsKIAog
CS8qIEtlZXAgdGhlIHBvd2VyIHdlbGwgZW5hYmxlZCwgYnV0IGNhbmNlbCBpdHMgcnBtIHdha2Vy
ZWYuICovCkBAIC00MjQ0LDYgKzQ1MzksNyBAQCB2b2lkIGludGVsX3Bvd2VyX2RvbWFpbnNfc3Vz
cGVuZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAlpZiAoIShpOTE1LT5jc3IuYWxs
b3dlZF9kY19tYXNrICYgRENfU1RBVEVfRU5fREM5KSAmJgogCSAgICBzdXNwZW5kX21vZGUgPT0g
STkxNV9EUk1fU1VTUEVORF9JRExFICYmCiAJICAgIGk5MTUtPmNzci5kbWNfcGF5bG9hZCkgewor
CQlpbnRlbF9kaXNwbGF5X3Bvd2VyX2ZsdXNoX3dvcmsoaTkxNSk7CiAJCWludGVsX3Bvd2VyX2Rv
bWFpbnNfdmVyaWZ5X3N0YXRlKGk5MTUpOwogCQlyZXR1cm47CiAJfQpAQCAtNDI1NSw2ICs0NTUx
LDcgQEAgdm9pZCBpbnRlbF9wb3dlcl9kb21haW5zX3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUsCiAJaWYgKCFpOTE1X21vZHBhcmFtcy5kaXNhYmxlX3Bvd2VyX3dlbGwpCiAJ
CWludGVsX2Rpc3BsYXlfcG93ZXJfcHV0X3VuY2hlY2tlZChpOTE1LCBQT1dFUl9ET01BSU5fSU5J
VCk7CiAKKwlpbnRlbF9kaXNwbGF5X3Bvd2VyX2ZsdXNoX3dvcmsoaTkxNSk7CiAJaW50ZWxfcG93
ZXJfZG9tYWluc192ZXJpZnlfc3RhdGUoaTkxNSk7CiAKIAlpZiAoSU5URUxfR0VOKGk5MTUpID49
IDExKQpAQCAtNDMzMyw2ICs0NjMwLDggQEAgc3RhdGljIHZvaWQgaW50ZWxfcG93ZXJfZG9tYWlu
c192ZXJpZnlfc3RhdGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAKIAltdXRleF9s
b2NrKCZwb3dlcl9kb21haW5zLT5sb2NrKTsKIAorCXZlcmlmeV9hc3luY19wdXRfZG9tYWluc19z
dGF0ZShwb3dlcl9kb21haW5zKTsKKwogCWR1bXBfZG9tYWluX2luZm8gPSBmYWxzZTsKIAlmb3Jf
ZWFjaF9wb3dlcl93ZWxsKGk5MTUsIHBvd2VyX3dlbGwpIHsKIAkJZW51bSBpbnRlbF9kaXNwbGF5
X3Bvd2VyX2RvbWFpbiBkb21haW47CkBAIC00NDAxLDcgKzQ3MDAsNiBAQCBzdGF0aWMgdm9pZCBf
X2ludGVsX3J1bnRpbWVfcG1fZ2V0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCVdB
Uk5fT05DRShyZXQgPCAwLCAicG1fcnVudGltZV9nZXRfc3luYygpIGZhaWxlZDogJWRcbiIsIHJl
dCk7CiB9CiAKLV9fYXR0cmlidXRlX18oKF9fdXNlZF9fKSkKIHN0YXRpYyBpbnRlbF93YWtlcmVm
X3QgaW50ZWxfcnVudGltZV9wbV9nZXRfcmF3KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1
KQogewogCV9faW50ZWxfcnVudGltZV9wbV9nZXQoaTkxNSk7CkBAIC00NTA5LDcgKzQ4MDcsNiBA
QCB2b2lkIGludGVsX3J1bnRpbWVfcG1fcHV0X3VuY2hlY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKIH0KIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHX1JV
TlRJTUVfUE0pCi1fX2F0dHJpYnV0ZV9fKChfX3VzZWRfXykpCiBzdGF0aWMgdm9pZCBpbnRlbF9y
dW50aW1lX3BtX3B1dF9yYXcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCQkJICAg
ICBpbnRlbF93YWtlcmVmX3Qgd3JlZikKIHsKQEAgLTQ1MjMsNyArNDgyMCw2IEBAIHZvaWQgaW50
ZWxfcnVudGltZV9wbV9wdXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludGVsX3dh
a2VyZWZfdCB3cmVmKQogCWludGVsX3J1bnRpbWVfcG1fcHV0X3VuY2hlY2tlZChpOTE1KTsKIH0K
ICNlbHNlCi1fX2F0dHJpYnV0ZV9fKChfX3VzZWRfXykpCiBzdGF0aWMgdm9pZCBpbnRlbF9ydW50
aW1lX3BtX3B1dF9yYXcoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCQkJICAgICBp
bnRlbF93YWtlcmVmX3Qgd3JlZikKIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2ludGVsX3J1bnRpbWVfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3J1bnRpbWVf
cG0uaAppbmRleCA2OTIyNzc1NmRlM2UuLmNhYmY2ZjkwMDI3MyAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfcnVudGltZV9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2ludGVsX3J1bnRpbWVfcG0uaApAQCAtNTcsNiArNTcsMTAgQEAgaW50ZWxfZGlzcGxheV9w
b3dlcl9nZXRfaWZfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJ
CQkJICAgZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4pOwogdm9pZCBpbnRl
bF9kaXNwbGF5X3Bvd2VyX3B1dF91bmNoZWNrZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2LAogCQkJCSAgICAgICBlbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWluIGRvbWFp
bik7Cit2b2lkIGludGVsX2Rpc3BsYXlfcG93ZXJfcHV0X2FzeW5jKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKKwkJCQkgICBlbnVtIGludGVsX2Rpc3BsYXlfcG93ZXJfZG9tYWlu
IGRvbWFpbiwKKwkJCQkgICBpbnRlbF93YWtlcmVmX3Qgd2FrZXJlZik7Cit2b2lkIGludGVsX2Rp
c3BsYXlfcG93ZXJfZmx1c2hfd29yayhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYp
OwogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X0RFQlVHX1JVTlRJTUVfUE0pCiB2b2lk
IGludGVsX2Rpc3BsYXlfcG93ZXJfcHV0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diwKIAkJCSAgICAgZW51bSBpbnRlbF9kaXNwbGF5X3Bvd2VyX2RvbWFpbiBkb21haW4sCi0tIAoy
LjE3LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCklu
dGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRw
czovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 739E5FB0D4
	for <lists+intel-gfx@lfdr.de>; Wed, 13 Nov 2019 13:52:59 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B27F46E0D9;
	Wed, 13 Nov 2019 12:52:54 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5D6E06E0D9;
 Wed, 13 Nov 2019 12:52:52 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19187131-1500050 
 for multiple; Wed, 13 Nov 2019 12:52:42 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 13 Nov 2019 12:52:34 +0000
Message-Id: <20191113125240.3781-3-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191113125240.3781-1-chris@chris-wilson.co.uk>
References: <20191113125240.3781-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH i-g-t 3/9] i915/gem_exec_schedule: Beware
 priority inversion from iova faults
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q2hlY2sgdGhhdCBpZiB0d28gY29udGV4dHMgKG9uZSBoaWdoIHByaW9yaXR5LCBvbmUgbG93KSBz
aGFyZSB0aGUgc2FtZQpidWZmZXIgdGhhdCBoYXMgdGFrZW4gYSBwYWdlIGZhdWx0IHRoYXQgd2Ug
ZG8gbm90IGNyZWF0ZSBhbiBpbXBsaWNpdApkZXBlbmRlbmN5IGJldHdlZW4gdGhlIHR3byBjb250
ZXh0cyBmb3Igc2VydmljaW5nIHRoYXQgcGFnZSBmYXVsdCBhbmQKYmluZGluZyB0aGUgdm1hLgoK
U2lnbmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+Ci0t
LQogdGVzdHMvaTkxNS9nZW1fZXhlY19zY2hlZHVsZS5jIHwgMTY2ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKwogMSBmaWxlIGNoYW5nZWQsIDE2NiBpbnNlcnRpb25zKCspCgpkaWZm
IC0tZ2l0IGEvdGVzdHMvaTkxNS9nZW1fZXhlY19zY2hlZHVsZS5jIGIvdGVzdHMvaTkxNS9nZW1f
ZXhlY19zY2hlZHVsZS5jCmluZGV4IGQ5ODQzNDEyMy4uZjhiMGVmNWE4IDEwMDY0NAotLS0gYS90
ZXN0cy9pOTE1L2dlbV9leGVjX3NjaGVkdWxlLmMKKysrIGIvdGVzdHMvaTkxNS9nZW1fZXhlY19z
Y2hlZHVsZS5jCkBAIC0xNjM4LDkgKzE2MzgsMTUgQEAgc3RhdGljIGludCB1c2VyZmF1bHRmZChp
bnQgZmxhZ3MpCiAKIHN0cnVjdCB1ZmRfdGhyZWFkIHsKIAl1aW50MzJfdCBiYXRjaDsKKwl1aW50
MzJfdCBzY3JhdGNoOwogCXVpbnQzMl90ICpwYWdlOwogCXVuc2lnbmVkIGludCBlbmdpbmU7CisJ
dW5zaWduZWQgaW50IGZsYWdzOwogCWludCBpOTE1OworCisJcHRocmVhZF9tdXRleF90IG11dGV4
OworCXB0aHJlYWRfY29uZF90IGNvbmQ7CisJaW50IGNvdW50OwogfTsKIAogc3RhdGljIHVpbnQz
Ml90IGNyZWF0ZV91c2VycHRyKGludCBpOTE1LCB2b2lkICpwYWdlKQpAQCAtMTc3Nyw2ICsxNzgz
LDE2MCBAQCBzdGF0aWMgdm9pZCB0ZXN0X3BpX3VzZXJmYXVsdChpbnQgaTkxNSwgdW5zaWduZWQg
aW50IGVuZ2luZSkKIAljbG9zZSh1ZmQpOwogfQogCitzdGF0aWMgdm9pZCAqaW92YV90aHJlYWQo
c3RydWN0IHVmZF90aHJlYWQgKnQsIGludCBwcmlvKQoreworCXVpbnQzMl90IGN0eCA9CisJCWdl
bV9jb250ZXh0X2Nsb25lKHQtPmk5MTUsIDAsCisJCQkJICB0LT5mbGFncyAmIFNIQVJFRCA/IEk5
MTVfQ09OVEVYVF9DTE9ORV9WTSA6IDAsCisJCQkJICAwKTsKKworCWdlbV9jb250ZXh0X3NldF9w
cmlvcml0eSh0LT5pOTE1LCBjdHgsIHByaW8pOworCisJc3RvcmVfZHdvcmRfcGx1Zyh0LT5pOTE1
LCBjdHgsIHQtPmVuZ2luZSwKKwkJCSB0LT5zY3JhdGNoLCAwLCBwcmlvLAorCQkJIHQtPmJhdGNo
LCAwIC8qIG5vIHdyaXRlIGhhemFyZCEgKi8pOworCisJcHRocmVhZF9tdXRleF9sb2NrKCZ0LT5t
dXRleCk7CisJaWYgKCEtLXQtPmNvdW50KQorCQlwdGhyZWFkX2NvbmRfc2lnbmFsKCZ0LT5jb25k
KTsKKwlwdGhyZWFkX211dGV4X3VubG9jaygmdC0+bXV0ZXgpOworCisJZ2VtX2NvbnRleHRfZGVz
dHJveSh0LT5pOTE1LCBjdHgpOworCXJldHVybiBOVUxMOworfQorCitzdGF0aWMgdm9pZCAqaW92
YV9sb3codm9pZCAqYXJnKQoreworCXJldHVybiBpb3ZhX3RocmVhZChhcmcsIE1JTl9QUklPKTsK
K30KKworc3RhdGljIHZvaWQgKmlvdmFfaGlnaCh2b2lkICphcmcpCit7CisJcmV0dXJuIGlvdmFf
dGhyZWFkKGFyZywgTUFYX1BSSU8pOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X3BpX2lvdmEoaW50
IGk5MTUsIHVuc2lnbmVkIGludCBlbmdpbmUsIHVuc2lnbmVkIGludCBmbGFncykKK3sKKwlzdHJ1
Y3QgdWZmZGlvX2FwaSBhcGkgPSB7IC5hcGkgPSBVRkZEX0FQSSB9OworCXN0cnVjdCB1ZmZkaW9f
cmVnaXN0ZXIgcmVnOworCXN0cnVjdCB1ZmZkaW9fY29weSBjb3B5OworCXN0cnVjdCB1ZmZkX21z
ZyBtc2c7CisJc3RydWN0IHVmZF90aHJlYWQgdDsKKwlpZ3Rfc3Bpbl90ICpzcGluOworCXB0aHJl
YWRfdCBoaSwgbG87CisJY2hhciBwb2lzb25bNDA5Nl07CisJdWludDMyX3QgcmVzdWx0OworCWlu
dCB1ZmQ7CisKKwkvKgorCSAqIEluIHRoaXMgc2NlbmFyaW8sIHdlIGhhdmUgYSBwYWlyIG9mIGNv
bnRlbmRpbmcgY29udGV4dHMgdGhhdAorCSAqIHNoYXJlIHRoZSBzYW1lIHJlc291cmNlLiBUaGF0
IHJlc291cmNlIGlzIHN0dWNrIGJlaGluZCBhIHNsb3cKKwkgKiBwYWdlIGZhdWx0IHN1Y2ggdGhh
dCBuZWl0aGVyIGNvbnRleHQgaGFzIGltbWVkaWF0ZSBhY2Nlc3MgdG8gaXQuCisJICogV2hhdCBp
cyBleHBlY3RlZCBpcyB0aGF0IGFzIHNvb24gYXMgdGhhdCByZXNvdXJjZSBiZWNvbWVzIGF2YWls
YWJsZSwKKwkgKiB0aGUgdHdvIGNvbnRleHRzIGFyZSBxdWV1ZWQgd2l0aCB0aGUgaGlnaCBwcmlv
cml0eSBjb250ZXh0IHRha2luZworCSAqIHByZWNlZGVuY2UuIFdlIG5lZWQgdG8gY2hlY2sgdGhh
dCB3ZSBkbyBub3QgY3Jvc3MtY29udGFtaW5hdGUKKwkgKiB0aGUgdHdvIGNvbnRlbnRzIHdpdGgg
dGhlIHBhZ2UgZmF1bHQgb24gdGhlIHNoYXJlZCByZXNvdXJjZQorCSAqIGluaXRpYXRlZCBieSB0
aGUgbG93IHByaW9yaXR5IGNvbnRleHQuIChDb25zaWRlciB0aGF0IHRoZSBsb3cKKwkgKiBwcmlv
cml0eSBjb250ZXh0IG1heSBpbnN0YWxsIGFuIGV4Y2x1c2l2ZSBmZW5jZSBmb3IgdGhlIHBhZ2UK
KwkgKiBmYXVsdCwgd2hpY2ggaXMgdGhlbiB1c2VkIGZvciBzdHJpY3Qgb3JkZXJpbmcgYnkgdGhl
IGhpZ2ggcHJpb3JpdHkKKwkgKiBjb250ZXh0LCBjYXVzaW5nIGFuIHVud2FudGVkIGltcGxpY2l0
IGRlcGVuZGVuY3kgYmV0d2VlbiB0aGUgdHdvCisJICogYW5kIHByb21vdGluZyB0aGUgbG93IHBy
aW9yaXR5IGNvbnRleHQgdG8gaGlnaC4pCisJICoKKwkgKiBTSEFSRUQ6IHRoZSB0d28gY29udGV4
dHMgc2hhcmUgYSB2bSwgYnV0IHN0aWxsIGhhdmUgc2VwYXJhdGUKKwkgKiB0aW1lbGluZXMgdGhh
dCBzaG91bGQgbm90IG1pbmdsZS4KKwkgKi8KKworCXVmZCA9IHVzZXJmYXVsdGZkKDApOworCWln
dF9yZXF1aXJlX2YodWZkICE9IC0xLCAia2VybmVsIHN1cHBvcnQgZm9yIHVzZXJmYXVsdGZkXG4i
KTsKKwlpZ3RfcmVxdWlyZV9mKGlvY3RsKHVmZCwgVUZGRElPX0FQSSwgJmFwaSkgPT0gMCAmJiBh
cGkuYXBpID09IFVGRkRfQVBJLAorCQkgICAgICAidXNlcmZhdWx0ZmQgQVBJIHYlbGxkOiVsbGRc
biIsIFVGRkRfQVBJLCBhcGkuYXBpKTsKKworCXQuaTkxNSA9IGk5MTU7CisJdC5lbmdpbmUgPSBl
bmdpbmU7CisJdC5mbGFncyA9IGZsYWdzOworCisJdC5jb3VudCA9IDI7CisJcHRocmVhZF9jb25k
X2luaXQoJnQuY29uZCwgTlVMTCk7CisJcHRocmVhZF9tdXRleF9pbml0KCZ0Lm11dGV4LCBOVUxM
KTsKKworCXQucGFnZSA9IG1tYXAoTlVMTCwgNDA5NiwgUFJPVF9XUklURSwgTUFQX1NIQVJFRCB8
IE1BUF9BTk9OLCAwLCAwKTsKKwlpZ3RfYXNzZXJ0KHQucGFnZSAhPSBNQVBfRkFJTEVEKTsKKwl0
LmJhdGNoID0gY3JlYXRlX3VzZXJwdHIoaTkxNSwgdC5wYWdlKTsKKwl0LnNjcmF0Y2ggPSBnZW1f
Y3JlYXRlKGk5MTUsIDQwOTYpOworCisJLyogUmVnaXN0ZXIgb3VyIGZhdWx0IGhhbmRsZXIgZm9y
IHQucGFnZSAqLworCW1lbXNldCgmcmVnLCAwLCBzaXplb2YocmVnKSk7CisJcmVnLm1vZGUgPSBV
RkZESU9fUkVHSVNURVJfTU9ERV9NSVNTSU5HOworCXJlZy5yYW5nZS5zdGFydCA9IHRvX3VzZXJf
cG9pbnRlcih0LnBhZ2UpOworCXJlZy5yYW5nZS5sZW4gPSA0MDk2OworCWRvX2lvY3RsKHVmZCwg
VUZGRElPX1JFR0lTVEVSLCAmcmVnKTsKKwlpZ3RfYXNzZXJ0KHJlZy5pb2N0bHMgPT0gVUZGRF9B
UElfUkFOR0VfSU9DVExTKTsKKworCS8qCisJICogRmlsbCB0aGUgZW5naW5lIHdpdGggc3Bpbm5l
cnM7IHRoZSBzdG9yZV9kd29yZCgpIGlzIHRvbyBxdWljayEKKwkgKgorCSAqIEl0IGlzIG5vdCB0
aGF0IGl0IGlzIHRvbyBxdWljaywgaXQgdGhhdCB0aGUgb3JkZXIgaW4gd2hpY2ggdGhlCisJICog
cmVxdWVzdHMgYXJlIHNpZ25hbGVkIGZyb20gdGhlIHBhZ2VmYXVsdCBjb21wbGV0aW9uIGlzIGxv
b3NlbHkKKwkgKiBkZWZpbmVkIChjdXJyZW50bHksIGl0J3MgaW4gb3JkZXIgb2YgYXR0YWNobWVu
dCBzbyBsb3cgY29udGV4dAorCSAqIHdpbnMpLCB0aGVuIHN1Ym1pc3Npb24gaW50byB0aGUgZXhl
Y2xpc3RzIGlzIGltbWVkaWF0ZSB3aXRoIHRoZQorCSAqIGxvdyBjb250ZXh0IGZpbGxpbmcgdGhl
IGxhc3Qgc2xvdCBpbiB0aGUgRUxTUC4gUHJlZW1wdGlvbiB3aWxsCisJICogbm90IHRha2UgcGxh
Y2UgdW50aWwgYWZ0ZXIgdGhlIGxvdyBwcmlvcml0eSBjb250ZXh0IGhhcyBoYWQgYQorCSAqIGNo
YW5jZSB0byBydW4sIGFuZCBzaW5jZSB0aGUgdGFzayBpcyB2ZXJ5IHNob3J0IHRoZXJlIGlzIG5v
CisJICogYXJiaXRyYXRpb24gcG9pbnQgaW5zaWRlIHRoZSBiYXRjaCBidWZmZXIgc28gd2Ugb25s
eSBwcmVlbXB0CisJICogYWZ0ZXIgdGhlIGxvdyBwcmlvcml0eSBjb250ZXh0IGhhcyBjb21wbGV0
ZWQuCisJICoKKwkgKiBPbmUgd2F5IHRvIHByZXZlbnQgc3VjaCBvcHBvcnR1bmlzdGljIGV4ZWN1
dGlvbiBvZiB0aGUgbG93IHByaW9yaXR5CisJICogY29udGV4dCB3b3VsZCBiZSB0byByZW1vdmUg
ZGlyZWN0IHN1Ym1pc3Npb24gYW5kIHdhaXQgdW50aWwgYWxsCisJICogc2lnbmFscyBhcmUgZGVs
aXZlcmVkIChhcyB0aGUgc2lnbmFsIGRlbGl2ZXJ5IGlzIHVuZGVyIHRoZSBpcnEgbG9jaywKKwkg
KiB0aGUgbG9jYWwgdGFza2xldCB3aWxsIG5vdCBydW4gdW50aWwgYWZ0ZXIgYWxsIHNpZ25hbHMg
aGF2ZSBiZWVuCisJICogZGVsaXZlcmVkLi4uIGJ1dCBhbm90aGVyIHRhc2tsZXQgbWlnaHQpLgor
CSAqLworCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgLmVuZ2luZSA9IGVuZ2luZSk7CisJZm9y
IChpbnQgaSA9IDA7IGkgPCBNQVhfRUxTUF9RTEVOOyBpKyspIHsKKwkJc3Bpbi0+ZXhlY2J1Zi5y
c3ZkMSA9IGNyZWF0ZV9oaWdoZXN0X3ByaW9yaXR5KGk5MTUpOworCQlnZW1fZXhlY2J1ZihpOTE1
LCAmc3Bpbi0+ZXhlY2J1Zik7CisJCWdlbV9jb250ZXh0X2Rlc3Ryb3koaTkxNSwgc3Bpbi0+ZXhl
Y2J1Zi5yc3ZkMSk7CisJfQorCisJLyogS2ljayBvZmYgdGhlIHN1Ym1pc3Npb24gdGhyZWFkcyAq
LworCWlndF9hc3NlcnQocHRocmVhZF9jcmVhdGUoJmxvLCBOVUxMLCBpb3ZhX2xvdywgJnQpID09
IDApOworCisJLyogV2FpdCB1bnRpbCB0aGUgbG93IHByaW9yaXR5IHRocmVhZCBpcyBibG9ja2Vk
IG9uIHRoZSBmYXVsdCAqLworCWlndF9hc3NlcnRfZXEocmVhZCh1ZmQsICZtc2csIHNpemVvZiht
c2cpKSwgc2l6ZW9mKG1zZykpOworCWlndF9hc3NlcnRfZXEobXNnLmV2ZW50LCBVRkZEX0VWRU5U
X1BBR0VGQVVMVCk7CisJaWd0X2Fzc2VydChmcm9tX3VzZXJfcG9pbnRlcihtc2cuYXJnLnBhZ2Vm
YXVsdC5hZGRyZXNzKSA9PSB0LnBhZ2UpOworCisJLyogVGhlbiByZWxlYXNlIGEgdmVyeSBzaW1p
bGFyIHRocmVhZCwgYnV0IGF0IGhpZ2ggcHJpb3JpdHkhICovCisJaWd0X2Fzc2VydChwdGhyZWFk
X2NyZWF0ZSgmaGksIE5VTEwsIGlvdmFfaGlnaCwgJnQpID09IDApOworCisJLyogU2VydmljZSB0
aGUgZmF1bHQ7IHJlbGVhc2luZyBib3RoIGNvbnRleHRzICovCisJbWVtc2V0KCZjb3B5LCAwLCBz
aXplb2YoY29weSkpOworCWNvcHkuZHN0ID0gbXNnLmFyZy5wYWdlZmF1bHQuYWRkcmVzczsKKwlj
b3B5LnNyYyA9IHRvX3VzZXJfcG9pbnRlcihtZW1zZXQocG9pc29uLCAweGM1LCBzaXplb2YocG9p
c29uKSkpOworCWNvcHkubGVuID0gNDA5NjsKKwlkb19pb2N0bCh1ZmQsIFVGRkRJT19DT1BZLCAm
Y29weSk7CisKKwkvKiBXYWl0IHVudGlsIGJvdGggdGhyZWFkcyBoYXZlIGhhZCBhIGNoYW5jZSB0
byBzdWJtaXQgKi8KKwlwdGhyZWFkX211dGV4X2xvY2soJnQubXV0ZXgpOworCXdoaWxlICh0LmNv
dW50KQorCQlwdGhyZWFkX2NvbmRfd2FpdCgmdC5jb25kLCAmdC5tdXRleCk7CisJcHRocmVhZF9t
dXRleF91bmxvY2soJnQubXV0ZXgpOworCWlndF9kZWJ1Z2ZzX2R1bXAoaTkxNSwgImk5MTVfZW5n
aW5lX2luZm8iKTsKKwlpZ3Rfc3Bpbl9mcmVlKGk5MTUsIHNwaW4pOworCisJcHRocmVhZF9qb2lu
KGhpLCBOVUxMKTsKKwlwdGhyZWFkX2pvaW4obG8sIE5VTEwpOworCWdlbV9jbG9zZShpOTE1LCB0
LmJhdGNoKTsKKworCWdlbV9zeW5jKGk5MTUsIHQuc2NyYXRjaCk7IC8qIHdyaXRlIGhhemFyZCBs
aWVzICovCisJZ2VtX3JlYWQoaTkxNSwgdC5zY3JhdGNoLCAwLCAmcmVzdWx0LCBzaXplb2YocmVz
dWx0KSk7CisJaWd0X2Fzc2VydF9lcShyZXN1bHQsIE1JTl9QUklPKTsKKwlnZW1fY2xvc2UoaTkx
NSwgdC5zY3JhdGNoKTsKKworCW11bm1hcCh0LnBhZ2UsIDQwOTYpOworCWNsb3NlKHVmZCk7Cit9
CisKIHN0YXRpYyB2b2lkIG1lYXN1cmVfc2VtYXBob3JlX3Bvd2VyKGludCBpOTE1KQogewogCXN0
cnVjdCByYXBsIGdwdSwgcGtnOwpAQCAtMjAxOSw2ICsyMTc5LDEyIEBAIGlndF9tYWluCiAKIAkJ
CQlpZ3Rfc3VidGVzdF9mKCJwaS11c2VyZmF1bHQtJXMiLCBlLT5uYW1lKQogCQkJCQl0ZXN0X3Bp
X3VzZXJmYXVsdChmZCwgZWJfcmluZyhlKSk7CisKKwkJCQlpZ3Rfc3VidGVzdF9mKCJwaS1kaXN0
aW5jdC1pb3ZhLSVzIiwgZS0+bmFtZSkKKwkJCQkJdGVzdF9waV9pb3ZhKGZkLCBlYl9yaW5nKGUp
LCAwKTsKKworCQkJCWlndF9zdWJ0ZXN0X2YoInBpLXNoYXJlZC1pb3ZhLSVzIiwgZS0+bmFtZSkK
KwkJCQkJdGVzdF9waV9pb3ZhKGZkLCBlYl9yaW5nKGUpLCBTSEFSRUQpOwogCQkJfQogCQl9CiAJ
fQotLSAKMi4yNC4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5v
cmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1n
Zng=

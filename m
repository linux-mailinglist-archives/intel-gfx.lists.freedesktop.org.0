Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 167D52DA30
	for <lists+intel-gfx@lfdr.de>; Wed, 29 May 2019 12:15:54 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 07D09893CB;
	Wed, 29 May 2019 10:15:52 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2EB9E89346;
 Wed, 29 May 2019 10:15:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 29 May 2019 03:15:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.60,526,1549958400"; d="scan'208";a="179532569"
Received: from gaia.fi.intel.com ([10.237.72.169])
 by fmsmga002.fm.intel.com with ESMTP; 29 May 2019 03:15:48 -0700
Received: by gaia.fi.intel.com (Postfix, from userid 1000)
 id 55CD75C0AB8; Wed, 29 May 2019 13:15:46 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: Chris Wilson <chris@chris-wilson.co.uk>, intel-gfx@lists.freedesktop.org
In-Reply-To: <20190529095805.31851-1-chris@chris-wilson.co.uk>
References: <20190529095805.31851-1-chris@chris-wilson.co.uk>
Date: Wed, 29 May 2019 13:15:46 +0300
Message-ID: <87ef4ho9bh.fsf@gaia.fi.intel.com>
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [igt-dev] [PATCH i-g-t] i915/gem_workarounds:
 Verify regs directly
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: igt-dev@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+IHdyaXRlczoKCj4gSXQgc2Vl
bXMgbGlrZSB0aGUgSFcgdmFsaWRhdG9yIGlzIGdldHRpbmcgYmV0dGVyIGF0IHByZXZlbnRpbmcg
b3VyCj4gc25vb3Bpbmcgb2Ygc3lzdGVtIHJlZ2lzdGVycyBmcm9tIG5vbi1wcml2aWxlZ2VkIGJh
dGNoZXMhIElmIHdlIGNhbid0Cj4gdXNlIFNSTSwgbGV0J3MgcHJvYmUgdGhlIHJlZ2lzdGVyIGRp
cmVjdGx5IHRocm91Z2ggbW1pbywgbWFraW5nIHN1cmUgd2UKPiBoYXZlIHRoZSBjb250ZXh0IHNw
aW5uaW5nIG9uIHRoZSBHUFUgZmlyc3QuCj4KPiB2MjogSG9sZCBmb3JjZXdha2UganVzdCBpbiBj
YXNlIHRoZSBzcGlubmluZyBiYXRjaCBpc24ndCBlbm91Z2ggdG8KPiBqdXN0aWZ5IG91ciByZWdp
c3RlciBhY2Nlc3MuCj4KCklmIEkgcmVjYWxsIGNvcnJlY3RseSwgZWl0aGVyIG9mIHRoZW0gc2Vw
YXJhdGVseSBkaWRuJ3QKd29yay4gQW5kIHRoZXJlIHdhcyBkZWxheSBhZnRlciBncmFiYmluZyB0
aGUgZncgYmVmb3JlCnRoZSByZWdpc3RlciBjb250ZW50cyBhcHBlYXJlZC4gRG9uJ3QgcmVtZW1i
ZXIgdGhlIGdlbiB0aG8uCgo+IEJ1Z3ppbGxhOiBodHRwczovL2J1Z3MuZnJlZWRlc2t0b3Aub3Jn
L3Nob3dfYnVnLmNnaT9pZD0xMTA1NDQKPiBTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNo
cmlzQGNocmlzLXdpbHNvbi5jby51az4KPiBDYzogTWF0dGhldyBBdWxkIDxtYXR0aGV3LndpbGxp
YW0uYXVsZEBnbWFpbC5jb20+Cj4gLS0tCj4gIHRlc3RzL2k5MTUvZ2VtX3dvcmthcm91bmRzLmMg
fCA4OCArKysrKysrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KPiAgMSBmaWxlIGNoYW5n
ZWQsIDE3IGluc2VydGlvbnMoKyksIDcxIGRlbGV0aW9ucygtKQo+Cj4gZGlmZiAtLWdpdCBhL3Rl
c3RzL2k5MTUvZ2VtX3dvcmthcm91bmRzLmMgYi90ZXN0cy9pOTE1L2dlbV93b3JrYXJvdW5kcy5j
Cj4gaW5kZXggNDRlM2RjZThhLi4yNzY3YjA0ZDcgMTAwNjQ0Cj4gLS0tIGEvdGVzdHMvaTkxNS9n
ZW1fd29ya2Fyb3VuZHMuYwo+ICsrKyBiL3Rlc3RzL2k5MTUvZ2VtX3dvcmthcm91bmRzLmMKPiBA
QCAtODAsNzAgKzgwLDI3IEBAIHN0YXRpYyBib29sIHdyaXRlX29ubHkoY29uc3QgdWludDMyX3Qg
YWRkcikKPiAgCXJldHVybiBmYWxzZTsKPiAgfQo+ICAKPiAtI2RlZmluZSBNSV9TVE9SRV9SRUdJ
U1RFUl9NRU0gKDB4MjQgPDwgMjMpCj4gLQo+IC1zdGF0aWMgaW50IHdvcmthcm91bmRfZmFpbF9j
b3VudChpbnQgZmQsIHVpbnQzMl90IGN0eCkKPiArc3RhdGljIGludCB3b3JrYXJvdW5kX2ZhaWxf
Y291bnQoaW50IGk5MTUsIHVpbnQzMl90IGN0eCkKPiAgewo+IC0Jc3RydWN0IGRybV9pOTE1X2dl
bV9leGVjX29iamVjdDIgb2JqWzJdOwo+IC0Jc3RydWN0IGRybV9pOTE1X2dlbV9yZWxvY2F0aW9u
X2VudHJ5ICpyZWxvYzsKPiAtCXN0cnVjdCBkcm1faTkxNV9nZW1fZXhlY2J1ZmZlcjIgZXhlY2J1
ZjsKPiAtCXVpbnQzMl90IHJlc3VsdF9zeiwgYmF0Y2hfc3o7Cj4gLQl1aW50MzJfdCAqYmFzZSwg
Km91dDsKPiAtCWludCBmYWlsX2NvdW50ID0gMDsKPiAtCj4gLQlyZWxvYyA9IGNhbGxvYyhudW1f
d2FfcmVncywgc2l6ZW9mKCpyZWxvYykpOwo+IC0JaWd0X2Fzc2VydChyZWxvYyk7Cj4gLQo+IC0J
cmVzdWx0X3N6ID0gNCAqIG51bV93YV9yZWdzOwo+IC0JcmVzdWx0X3N6ID0gUEFHRV9BTElHTihy
ZXN1bHRfc3opOwo+IC0KPiAtCWJhdGNoX3N6ID0gMTYgKiBudW1fd2FfcmVncyArIDQ7Cj4gLQli
YXRjaF9zeiA9IFBBR0VfQUxJR04oYmF0Y2hfc3opOwo+IC0KPiAtCW1lbXNldChvYmosIDAsIHNp
emVvZihvYmopKTsKPiAtCW9ialswXS5oYW5kbGUgPSBnZW1fY3JlYXRlKGZkLCByZXN1bHRfc3op
Owo+IC0JZ2VtX3NldF9jYWNoaW5nKGZkLCBvYmpbMF0uaGFuZGxlLCBJOTE1X0NBQ0hJTkdfQ0FD
SEVEKTsKPiAtCW9ialsxXS5oYW5kbGUgPSBnZW1fY3JlYXRlKGZkLCBiYXRjaF9zeik7Cj4gLQlv
YmpbMV0ucmVsb2NzX3B0ciA9IHRvX3VzZXJfcG9pbnRlcihyZWxvYyk7Cj4gLQlvYmpbMV0ucmVs
b2NhdGlvbl9jb3VudCA9IG51bV93YV9yZWdzOwo+IC0KPiAtCW91dCA9IGJhc2UgPSBnZW1fbW1h
cF9fY3B1KGZkLCBvYmpbMV0uaGFuZGxlLCAwLCBiYXRjaF9zeiwgUFJPVF9XUklURSk7Cj4gLQlm
b3IgKGludCBpID0gMDsgaSA8IG51bV93YV9yZWdzOyBpKyspIHsKPiAtCQkqb3V0KysgPSBNSV9T
VE9SRV9SRUdJU1RFUl9NRU0gfCAoKGdlbiA+PSA4ID8gNCA6IDIpIC0gMik7Cj4gLQkJKm91dCsr
ID0gd2FfcmVnc1tpXS5hZGRyOwo+IC0JCXJlbG9jW2ldLnRhcmdldF9oYW5kbGUgPSBvYmpbMF0u
aGFuZGxlOwo+IC0JCXJlbG9jW2ldLm9mZnNldCA9IChvdXQgLSBiYXNlKSAqIHNpemVvZigqb3V0
KTsKPiAtCQlyZWxvY1tpXS5kZWx0YSA9IGkgKiBzaXplb2YodWludDMyX3QpOwo+IC0JCXJlbG9j
W2ldLnJlYWRfZG9tYWlucyA9IEk5MTVfR0VNX0RPTUFJTl9JTlNUUlVDVElPTjsKPiAtCQlyZWxv
Y1tpXS53cml0ZV9kb21haW4gPSBJOTE1X0dFTV9ET01BSU5fSU5TVFJVQ1RJT047Cj4gLQkJKm91
dCsrID0gcmVsb2NbaV0uZGVsdGE7Cj4gLQkJaWYgKGdlbiA+PSA4KQo+IC0JCQkqb3V0KysgPSAw
Owo+IC0JfQo+IC0JKm91dCsrID0gTUlfQkFUQ0hfQlVGRkVSX0VORDsKPiAtCW11bm1hcChiYXNl
LCBiYXRjaF9zeik7Cj4gKwlpZ3Rfc3Bpbl90ICpzcGluOwo+ICsJaW50IGZ3LCBmYWlsID0gMDsK
PiAgCj4gLQltZW1zZXQoJmV4ZWNidWYsIDAsIHNpemVvZihleGVjYnVmKSk7Cj4gLQlleGVjYnVm
LmJ1ZmZlcnNfcHRyID0gdG9fdXNlcl9wb2ludGVyKG9iaik7Cj4gLQlleGVjYnVmLmJ1ZmZlcl9j
b3VudCA9IDI7Cj4gLQlleGVjYnVmLnJzdmQxID0gY3R4Owo+IC0JZ2VtX2V4ZWNidWYoZmQsICZl
eGVjYnVmKTsKPiArCXNwaW4gPSBpZ3Rfc3Bpbl9uZXcoaTkxNSwgLmN0eCA9IGN0eCwgLmZsYWdz
ID0gSUdUX1NQSU5fUE9MTF9SVU4pOwo+ICsJaWd0X3NwaW5fYnVzeXdhaXRfdW50aWxfc3RhcnRl
ZChzcGluKTsKPiAgCj4gLQlnZW1fc2V0X2RvbWFpbihmZCwgb2JqWzBdLmhhbmRsZSwgSTkxNV9H
RU1fRE9NQUlOX0NQVSwgMCk7Cj4gLQo+IC0JaWd0X2RlYnVnKCJBZGRyZXNzXHR2YWxcdFx0bWFz
a1x0XHRyZWFkXHRcdHJlc3VsdFxuIik7Cj4gLQo+IC0Jb3V0ID0gZ2VtX21tYXBfX2NwdShmZCwg
b2JqWzBdLmhhbmRsZSwgMCwgcmVzdWx0X3N6LCBQUk9UX1JFQUQpOwo+ICsJZncgPSBpZ3Rfb3Bl
bl9mb3JjZXdha2VfaGFuZGxlKGk5MTUpOwoKYXNzZXJ0IHRoYXQgaXQgd2VudCBmaW5lPwoKUGVy
aGFwcyBib3RoIHdpbGwgbm93IGRvIHRoZSB0cmljay4gQnV0IGlmIGl0IGZhaWxzCmdldCB0aGUg
Zm9yY2V3YWtlIGJlZm9yZSBzcGlubmVyIHNvIHlvdSBnZXQgbW9yZSBkZWxheS4KCj4gIAlmb3Ig
KGludCBpID0gMDsgaSA8IG51bV93YV9yZWdzOyBpKyspIHsKPiArCQl1aW50MzJfdCB2YWx1ZSA9
Cj4gKwkJCSoodWludDMyX3QgKikoaWd0X2dsb2JhbF9tbWlvICsgd2FfcmVnc1tpXS5hZGRyKTsK
CmNvbnN0IG1pZ2h0IGhhdmUgYmVlbiB3YXJyYW50ZWQuCgpSZXZpZXdlZC1ieTogTWlrYSBLdW9w
cGFsYSA8bWlrYS5rdW9wcGFsYUBsaW51eC5pbnRlbC5jb20+Cgo+ICAJCWNvbnN0IGJvb2wgb2sg
PQo+ICAJCQkod2FfcmVnc1tpXS52YWx1ZSAmIHdhX3JlZ3NbaV0ubWFzaykgPT0KPiAtCQkJKG91
dFtpXSAmIHdhX3JlZ3NbaV0ubWFzayk7Cj4gKwkJCSh2YWx1ZSAmIHdhX3JlZ3NbaV0ubWFzayk7
Cj4gIAkJY2hhciBidWZbODBdOwo+ICAKPiAgCQlzbnByaW50ZihidWYsIHNpemVvZihidWYpLAo+
ICAJCQkgIjB4JTA1WFx0MHglMDhYXHQweCUwOFhcdDB4JTA4WCIsCj4gIAkJCSB3YV9yZWdzW2ld
LmFkZHIsIHdhX3JlZ3NbaV0udmFsdWUsIHdhX3JlZ3NbaV0ubWFzaywKPiAtCQkJIG91dFtpXSk7
Cj4gKwkJCSB2YWx1ZSk7Cj4gIAo+ICAJCWlmIChvaykgewo+ICAJCQlpZ3RfZGVidWcoIiVzXHRP
S1xuIiwgYnVmKTsKPiBAQCAtMTUxLDI3ICsxMDgsMTQgQEAgc3RhdGljIGludCB3b3JrYXJvdW5k
X2ZhaWxfY291bnQoaW50IGZkLCB1aW50MzJfdCBjdHgpCj4gIAkJCWlndF9kZWJ1ZygiJXNcdElH
Tk9SRUQgKHcvbylcbiIsIGJ1Zik7Cj4gIAkJfSBlbHNlIHsKPiAgCQkJaWd0X3dhcm4oIiVzXHRG
QUlMXG4iLCBidWYpOwo+IC0JCQlmYWlsX2NvdW50Kys7Cj4gKwkJCWZhaWwrKzsKPiAgCQl9Cj4g
IAl9Cj4gLQltdW5tYXAob3V0LCByZXN1bHRfc3opOwo+ICsJY2xvc2UoZncpOwo+ICAKPiAtCWdl
bV9jbG9zZShmZCwgb2JqWzFdLmhhbmRsZSk7Cj4gLQlnZW1fY2xvc2UoZmQsIG9ialswXS5oYW5k
bGUpOwo+IC0JZnJlZShyZWxvYyk7Cj4gKwlpZ3Rfc3Bpbl9mcmVlKGk5MTUsIHNwaW4pOwo+ICAK
PiAtCXJldHVybiBmYWlsX2NvdW50Owo+IC19Cj4gLQo+IC1zdGF0aWMgaW50IHJlb3BlbihpbnQg
ZmQpCj4gLXsKPiAtCWNoYXIgcGF0aFsyNTZdOwo+IC0KPiAtCXNucHJpbnRmKHBhdGgsIHNpemVv
ZihwYXRoKSwgIi9wcm9jL3NlbGYvZmQvJWQiLCBmZCk7Cj4gLQlmZCA9IG9wZW4ocGF0aCwgT19S
RFdSKTsKPiAtCWlndF9hc3NlcnRfbHRlKDAsIGZkKTsKPiAtCj4gLQlyZXR1cm4gZmQ7Cj4gKwly
ZXR1cm4gZmFpbDsKPiAgfQo+ICAKPiAgI2RlZmluZSBDT05URVhUIDB4MQo+IEBAIC0xODEsNyAr
MTI1LDcgQEAgc3RhdGljIHZvaWQgY2hlY2tfd29ya2Fyb3VuZHMoaW50IGZkLCBlbnVtIG9wZXJh
dGlvbiBvcCwgdW5zaWduZWQgaW50IGZsYWdzKQo+ICAJdWludDMyX3QgY3R4ID0gMDsKPiAgCj4g
IAlpZiAoZmxhZ3MgJiBGRCkKPiAtCQlmZCA9IHJlb3BlbihmZCk7Cj4gKwkJZmQgPSBnZW1fcmVv
cGVuX2RyaXZlcihmZCk7Cj4gIAo+ICAJaWYgKGZsYWdzICYgQ09OVEVYVCkgewo+ICAJCWdlbV9y
ZXF1aXJlX2NvbnRleHRzKGZkKTsKPiBAQCAtMjUyLDYgKzE5Niw4IEBAIGlndF9tYWluCj4gIAkJ
ZGV2aWNlID0gZHJtX29wZW5fZHJpdmVyKERSSVZFUl9JTlRFTCk7Cj4gIAkJaWd0X3JlcXVpcmVf
Z2VtKGRldmljZSk7Cj4gIAo+ICsJCWludGVsX21taW9fdXNlX3BjaV9iYXIoaW50ZWxfZ2V0X3Bj
aV9kZXZpY2UoKSk7Cj4gKwo+ICAJCWdlbiA9IGludGVsX2dlbihpbnRlbF9nZXRfZHJtX2Rldmlk
KGRldmljZSkpOwo+ICAKPiAgCQlmZCA9IGlndF9kZWJ1Z2ZzX29wZW4oZGV2aWNlLCAiaTkxNV93
YV9yZWdpc3RlcnMiLCBPX1JET05MWSk7Cj4gLS0gCj4gMi4yMC4xCj4KPiBfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwo+IGlndC1kZXYgbWFpbGluZyBsaXN0
Cj4gaWd0LWRldkBsaXN0cy5mcmVlZGVza3RvcC5vcmcKPiBodHRwczovL2xpc3RzLmZyZWVkZXNr
dG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2lndC1kZXYKX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhA
bGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxt
YW4vbGlzdGluZm8vaW50ZWwtZ2Z4

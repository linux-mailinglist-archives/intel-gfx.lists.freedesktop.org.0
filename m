Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D5277259BF
	for <lists+intel-gfx@lfdr.de>; Tue, 21 May 2019 23:11:52 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 0300C896E4;
	Tue, 21 May 2019 21:11:45 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 84DA4896EB
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 May 2019 21:11:42 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16633444-1500050 
 for <intel-gfx@lists.freedesktop.org>; Tue, 21 May 2019 22:11:35 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 21 May 2019 22:11:26 +0100
Message-Id: <20190521211134.16117-2-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190521211134.16117-1-chris@chris-wilson.co.uk>
References: <20190521211134.16117-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [CI 02/10] drm/i915: Allow a context to define its set
 of engines
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

T3ZlciB0aGUgbGFzdCBmZXcgeWVhcnMsIHdlIGhhdmUgZGViYXRlZCBob3cgdG8gZXh0ZW5kIHRo
ZSB1c2VyIEFQSSB0bwpzdXBwb3J0IGFuIGluY3JlYXNlIGluIHRoZSBudW1iZXIgb2YgZW5naW5l
cywgdGhhdCBtYXkgYmUgc3BhcnNlIGFuZApldmVuIGJlIGhldGVyb2dlbmVvdXMgd2l0aGluIGEg
Y2xhc3MgKG5vdCBhbGwgdmlkZW8gZGVjb2RlcnMgY3JlYXRlZAplcXVhbCkuIFdlIHNldHRsZWQg
b24gdXNpbmcgKGNsYXNzLCBpbnN0YW5jZSkgdHVwbGVzIHRvIGlkZW50aWZ5IGEKc3BlY2lmaWMg
ZW5naW5lLCB3aXRoIGFuIEFQSSBmb3IgdGhlIHVzZXIgdG8gY29uc3RydWN0IGEgbWFwIG9mIGVu
Z2luZXMKdG8gY2FwYWJpbGl0aWVzLiBJbnRvIHRoaXMgcGljdHVyZSwgd2UgdGhlbiBhZGQgYSBj
aGFsbGVuZ2Ugb2YgdmlydHVhbAplbmdpbmVzOyBvbmUgdXNlciBlbmdpbmUgdGhhdCBtYXBzIGJl
aGluZCB0aGUgc2NlbmVzIHRvIGFueSBudW1iZXIgb2YKcGh5c2ljYWwgZW5naW5lcy4gVG8ga2Vl
cCBpdCBnZW5lcmFsLCB3ZSB3YW50IHRoZSB1c2VyIHRvIGhhdmUgZnVsbApjb250cm9sIG92ZXIg
dGhhdCBtYXBwaW5nLiBUbyB0aGF0IGVuZCwgd2UgYWxsb3cgdGhlIHVzZXIgdG8gY29uc3RyYWlu
IGEKY29udGV4dCB0byBkZWZpbmUgdGhlIHNldCBvZiBlbmdpbmVzIHRoYXQgaXQgY2FuIGFjY2Vz
cywgb3JkZXIgZnVsbHkKY29udHJvbGxlZCBieSB0aGUgdXNlciB2aWEgKGNsYXNzLCBpbnN0YW5j
ZSkuIFdpdGggc3VjaCBwcmVjaXNlIGNvbnRyb2wKaW4gY29udGV4dCBzZXR1cCwgd2UgY2FuIGNv
bnRpbnVlIHRvIHVzZSB0aGUgZXhpc3RpbmcgZXhlY2J1ZiB1QUJJIG9mCnNwZWNpZnlpbmcgYSBz
aW5nbGUgaW5kZXg7IG9ubHkgbm93IGl0IGRvZXNuJ3QgYXV0b21hZ2ljYWxseSBtYXAgb250bwp0
aGUgZW5naW5lcywgaXQgdXNlcyB0aGUgdXNlciBkZWZpbmVkIGVuZ2luZSBtYXAgZnJvbSB0aGUg
Y29udGV4dC4KCnYyOiBGaXh1cCBmcmVlaW5nIG9mIGxvY2FsIG9uIHN1Y2Nlc3Mgb2YgZ2V0X2Vu
Z2luZXMoKQp2MzogQWxsb3cgZW1wdHkgZW5naW5lc1tdCnY0OiBzL25lbmdpbmUvbnVtX2VuZ2lu
ZXMvCnY1OiBSZXBsYWNlIDY0IGxpbWl0IG9uIG51bV9lbmdpbmVzIHdpdGggYSBub3RlIHRoYXQg
ZXhlY2J1ZiBpcwpjdXJyZW50bHkgbGltaXRlZCB0byBvbmx5IHVzaW5nIHRoZSBmaXJzdCA2NCBl
bmdpbmVzLgp2NjogQWN0dWFsbHkgdXNlIHRoZSBlbmdpbmVzX211dGV4IHRvIGd1YXJkIHRoZSBj
dHgtPmVuZ2luZXMuCgpUZXN0Y2FzZTogaWd0L2dlbV9jdHhfZW5naW5lcwpTaWduZWQtb2ZmLWJ5
OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KQ2M6IFR2cnRrbyBVcnN1
bGluIDx0dnJ0a28udXJzdWxpbkBpbnRlbC5jb20+ClJldmlld2VkLWJ5OiBUdnJ0a28gVXJzdWxp
biA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtX2NvbnRleHQuYyAgICAgICB8IDI2NSArKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuaCAgICAgICB8ICAxOCArKwogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9nZW1fY29udGV4dF90eXBlcy5oIHwgICAxICsKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyAgICB8ICAgNSArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV91dGlscy5oICAgICAgICAgICAgIHwgIDM0ICsrKwogaW5jbHVkZS91YXBp
L2RybS9pOTE1X2RybS5oICAgICAgICAgICAgICAgICAgIHwgIDMxICsrCiA2IGZpbGVzIGNoYW5n
ZWQsIDM0MSBpbnNlcnRpb25zKCspLCAxMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2dlbV9jb250ZXh0LmMKaW5kZXggNDEzYzQ1MjkxOTFkLi5jNTAxZTI4NDhjYTAgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTkwLDcgKzkwLDYgQEAK
ICNpbmNsdWRlIDxkcm0vaTkxNV9kcm0uaD4KIAogI2luY2x1ZGUgImd0L2ludGVsX2xyY19yZWcu
aCIKLSNpbmNsdWRlICJndC9pbnRlbF93b3JrYXJvdW5kcy5oIgogCiAjaW5jbHVkZSAiaTkxNV9k
cnYuaCIKICNpbmNsdWRlICJpOTE1X2dsb2JhbHMuaCIKQEAgLTE0MSwxNSArMTQwLDMxIEBAIHN0
YXRpYyB2b2lkIGx1dF9jbG9zZShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQogfQogCiBz
dGF0aWMgc3RydWN0IGludGVsX2NvbnRleHQgKgotbG9va3VwX3VzZXJfZW5naW5lKHN0cnVjdCBp
OTE1X2dlbV9jb250ZXh0ICpjdHgsIHUxNiBjbGFzcywgdTE2IGluc3RhbmNlKQorbG9va3VwX3Vz
ZXJfZW5naW5lKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJCSAgIHVuc2lnbmVkIGxv
bmcgZmxhZ3MsCisJCSAgIGNvbnN0IHN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSAq
Y2kpCisjZGVmaW5lIExPT0tVUF9VU0VSX0lOREVYIEJJVCgwKQogewotCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZTsKKwlpbnQgaWR4OwogCi0JZW5naW5lID0gaW50ZWxfZW5naW5lX2xv
b2t1cF91c2VyKGN0eC0+aTkxNSwgY2xhc3MsIGluc3RhbmNlKTsKLQlpZiAoIWVuZ2luZSkKKwlp
ZiAoISEoZmxhZ3MgJiBMT09LVVBfVVNFUl9JTkRFWCkgIT0gaTkxNV9nZW1fY29udGV4dF91c2Vy
X2VuZ2luZXMoY3R4KSkKIAkJcmV0dXJuIEVSUl9QVFIoLUVJTlZBTCk7CiAKLQlyZXR1cm4gaTkx
NV9nZW1fY29udGV4dF9nZXRfZW5naW5lKGN0eCwgZW5naW5lLT5pZCk7CisJaWYgKCFpOTE1X2dl
bV9jb250ZXh0X3VzZXJfZW5naW5lcyhjdHgpKSB7CisJCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKKworCQllbmdpbmUgPSBpbnRlbF9lbmdpbmVfbG9va3VwX3VzZXIoY3R4LT5pOTE1
LAorCQkJCQkJICBjaS0+ZW5naW5lX2NsYXNzLAorCQkJCQkJICBjaS0+ZW5naW5lX2luc3RhbmNl
KTsKKwkJaWYgKCFlbmdpbmUpCisJCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKKworCQlpZHgg
PSBlbmdpbmUtPmlkOworCX0gZWxzZSB7CisJCWlkeCA9IGNpLT5lbmdpbmVfaW5zdGFuY2U7CisJ
fQorCisJcmV0dXJuIGk5MTVfZ2VtX2NvbnRleHRfZ2V0X2VuZ2luZShjdHgsIGlkeCk7CiB9CiAK
IHN0YXRpYyBpbmxpbmUgaW50IG5ld19od19pZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSwgZ2ZwX3QgZ2ZwKQpAQCAtMjU3LDYgKzI3MiwxNyBAQCBzdGF0aWMgdm9pZCBmcmVlX2VuZ2lu
ZXMoc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXMgKmUpCiAJX19mcmVlX2VuZ2luZXMoZSwgZS0+bnVt
X2VuZ2luZXMpOwogfQogCitzdGF0aWMgdm9pZCBmcmVlX2VuZ2luZXNfcmN1KHN0cnVjdCB3b3Jr
X3N0cnVjdCAqd3JrKQoreworCXN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICplID0KKwkJY29udGFp
bmVyX29mKHdyaywgc3RydWN0IGk5MTVfZ2VtX2VuZ2luZXMsIHJjdS53b3JrKTsKKwlzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGUtPmk5MTU7CisKKwltdXRleF9sb2NrKCZpOTE1LT5k
cm0uc3RydWN0X211dGV4KTsKKwlmcmVlX2VuZ2luZXMoZSk7CisJbXV0ZXhfdW5sb2NrKCZpOTE1
LT5kcm0uc3RydWN0X211dGV4KTsKK30KKwogc3RhdGljIHN0cnVjdCBpOTE1X2dlbV9lbmdpbmVz
ICpkZWZhdWx0X2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIHsKIAlzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CkBAIC0xMzUyLDkgKzEzNzgsNyBAQCBzdGF0aWMg
aW50IHNldF9zc2V1KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCiAJaWYgKHVzZXJfc3Nl
dS5mbGFncyB8fCB1c2VyX3NzZXUucnN2ZCkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKLQljZSA9IGxv
b2t1cF91c2VyX2VuZ2luZShjdHgsCi0JCQkJdXNlcl9zc2V1LmVuZ2luZS5lbmdpbmVfY2xhc3Ms
Ci0JCQkJdXNlcl9zc2V1LmVuZ2luZS5lbmdpbmVfaW5zdGFuY2UpOworCWNlID0gbG9va3VwX3Vz
ZXJfZW5naW5lKGN0eCwgMCwgJnVzZXJfc3NldS5lbmdpbmUpOwogCWlmIChJU19FUlIoY2UpKQog
CQlyZXR1cm4gUFRSX0VSUihjZSk7CiAKQEAgLTEzNzksNiArMTQwMywyMTcgQEAgc3RhdGljIGlu
dCBzZXRfc3NldShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAogCXJldHVybiByZXQ7CiB9
CiAKK3N0cnVjdCBzZXRfZW5naW5lcyB7CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eDsK
KwlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqZW5naW5lczsKK307CisKK3N0YXRpYyBjb25zdCBp
OTE1X3VzZXJfZXh0ZW5zaW9uX2ZuIHNldF9lbmdpbmVzX19leHRlbnNpb25zW10gPSB7Cit9Owor
CitzdGF0aWMgaW50CitzZXRfZW5naW5lcyhzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4LAor
CSAgICBjb25zdCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfcGFyYW0gKmFyZ3MpCit7CisJ
c3RydWN0IGk5MTVfY29udGV4dF9wYXJhbV9lbmdpbmVzIF9fdXNlciAqdXNlciA9CisJCXU2NF90
b191c2VyX3B0cihhcmdzLT52YWx1ZSk7CisJc3RydWN0IHNldF9lbmdpbmVzIHNldCA9IHsgLmN0
eCA9IGN0eCB9OworCXVuc2lnbmVkIGludCBudW1fZW5naW5lcywgbjsKKwl1NjQgZXh0ZW5zaW9u
czsKKwlpbnQgZXJyOworCisJaWYgKCFhcmdzLT5zaXplKSB7IC8qIHN3aXRjaCBiYWNrIHRvIGxl
Z2FjeSB1c2VyX3JpbmdfbWFwICovCisJCWlmICghaTkxNV9nZW1fY29udGV4dF91c2VyX2VuZ2lu
ZXMoY3R4KSkKKwkJCXJldHVybiAwOworCisJCXNldC5lbmdpbmVzID0gZGVmYXVsdF9lbmdpbmVz
KGN0eCk7CisJCWlmIChJU19FUlIoc2V0LmVuZ2luZXMpKQorCQkJcmV0dXJuIFBUUl9FUlIoc2V0
LmVuZ2luZXMpOworCisJCWdvdG8gcmVwbGFjZTsKKwl9CisKKwlCVUlMRF9CVUdfT04oIUlTX0FM
SUdORUQoc2l6ZW9mKCp1c2VyKSwgc2l6ZW9mKCp1c2VyLT5lbmdpbmVzKSkpOworCWlmIChhcmdz
LT5zaXplIDwgc2l6ZW9mKCp1c2VyKSB8fAorCSAgICAhSVNfQUxJR05FRChhcmdzLT5zaXplLCBz
aXplb2YoKnVzZXItPmVuZ2luZXMpKSkgeworCQlEUk1fREVCVUcoIkludmFsaWQgc2l6ZSBmb3Ig
ZW5naW5lIGFycmF5OiAlZFxuIiwKKwkJCSAgYXJncy0+c2l6ZSk7CisJCXJldHVybiAtRUlOVkFM
OworCX0KKworCS8qCisJICogTm90ZSB0aGF0IEk5MTVfRVhFQ19SSU5HX01BU0sgbGltaXRzIGV4
ZWNidWYgdG8gb25seSB1c2luZyB0aGUKKwkgKiBmaXJzdCA2NCBlbmdpbmVzIGRlZmluZWQgaGVy
ZS4KKwkgKi8KKwludW1fZW5naW5lcyA9IChhcmdzLT5zaXplIC0gc2l6ZW9mKCp1c2VyKSkgLyBz
aXplb2YoKnVzZXItPmVuZ2luZXMpOworCisJc2V0LmVuZ2luZXMgPSBrbWFsbG9jKHN0cnVjdF9z
aXplKHNldC5lbmdpbmVzLCBlbmdpbmVzLCBudW1fZW5naW5lcyksCisJCQkgICAgICBHRlBfS0VS
TkVMKTsKKwlpZiAoIXNldC5lbmdpbmVzKQorCQlyZXR1cm4gLUVOT01FTTsKKworCXNldC5lbmdp
bmVzLT5pOTE1ID0gY3R4LT5pOTE1OworCWZvciAobiA9IDA7IG4gPCBudW1fZW5naW5lczsgbisr
KSB7CisJCXN0cnVjdCBpOTE1X2VuZ2luZV9jbGFzc19pbnN0YW5jZSBjaTsKKwkJc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lOworCisJCWlmIChjb3B5X2Zyb21fdXNlcigmY2ksICZ1c2Vy
LT5lbmdpbmVzW25dLCBzaXplb2YoY2kpKSkgeworCQkJX19mcmVlX2VuZ2luZXMoc2V0LmVuZ2lu
ZXMsIG4pOworCQkJcmV0dXJuIC1FRkFVTFQ7CisJCX0KKworCQlpZiAoY2kuZW5naW5lX2NsYXNz
ID09ICh1MTYpSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRCAmJgorCQkgICAgY2kuZW5naW5lX2lu
c3RhbmNlID09ICh1MTYpSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9OT05FKSB7CisJCQlzZXQu
ZW5naW5lcy0+ZW5naW5lc1tuXSA9IE5VTEw7CisJCQljb250aW51ZTsKKwkJfQorCisJCWVuZ2lu
ZSA9IGludGVsX2VuZ2luZV9sb29rdXBfdXNlcihjdHgtPmk5MTUsCisJCQkJCQkgIGNpLmVuZ2lu
ZV9jbGFzcywKKwkJCQkJCSAgY2kuZW5naW5lX2luc3RhbmNlKTsKKwkJaWYgKCFlbmdpbmUpIHsK
KwkJCURSTV9ERUJVRygiSW52YWxpZCBlbmdpbmVbJWRdOiB7IGNsYXNzOiVkLCBpbnN0YW5jZTol
ZCB9XG4iLAorCQkJCSAgbiwgY2kuZW5naW5lX2NsYXNzLCBjaS5lbmdpbmVfaW5zdGFuY2UpOwor
CQkJX19mcmVlX2VuZ2luZXMoc2V0LmVuZ2luZXMsIG4pOworCQkJcmV0dXJuIC1FTk9FTlQ7CisJ
CX0KKworCQlzZXQuZW5naW5lcy0+ZW5naW5lc1tuXSA9IGludGVsX2NvbnRleHRfY3JlYXRlKGN0
eCwgZW5naW5lKTsKKwkJaWYgKCFzZXQuZW5naW5lcy0+ZW5naW5lc1tuXSkgeworCQkJX19mcmVl
X2VuZ2luZXMoc2V0LmVuZ2luZXMsIG4pOworCQkJcmV0dXJuIC1FTk9NRU07CisJCX0KKwl9CisJ
c2V0LmVuZ2luZXMtPm51bV9lbmdpbmVzID0gbnVtX2VuZ2luZXM7CisKKwllcnIgPSAtRUZBVUxU
OworCWlmICghZ2V0X3VzZXIoZXh0ZW5zaW9ucywgJnVzZXItPmV4dGVuc2lvbnMpKQorCQllcnIg
PSBpOTE1X3VzZXJfZXh0ZW5zaW9ucyh1NjRfdG9fdXNlcl9wdHIoZXh0ZW5zaW9ucyksCisJCQkJ
CSAgIHNldF9lbmdpbmVzX19leHRlbnNpb25zLAorCQkJCQkgICBBUlJBWV9TSVpFKHNldF9lbmdp
bmVzX19leHRlbnNpb25zKSwKKwkJCQkJICAgJnNldCk7CisJaWYgKGVycikgeworCQlmcmVlX2Vu
Z2luZXMoc2V0LmVuZ2luZXMpOworCQlyZXR1cm4gZXJyOworCX0KKworcmVwbGFjZToKKwltdXRl
eF9sb2NrKCZjdHgtPmVuZ2luZXNfbXV0ZXgpOworCWlmIChhcmdzLT5zaXplKQorCQlpOTE1X2dl
bV9jb250ZXh0X3NldF91c2VyX2VuZ2luZXMoY3R4KTsKKwllbHNlCisJCWk5MTVfZ2VtX2NvbnRl
eHRfY2xlYXJfdXNlcl9lbmdpbmVzKGN0eCk7CisJcmN1X3N3YXBfcHJvdGVjdGVkKGN0eC0+ZW5n
aW5lcywgc2V0LmVuZ2luZXMsIDEpOworCW11dGV4X3VubG9jaygmY3R4LT5lbmdpbmVzX211dGV4
KTsKKworCUlOSVRfUkNVX1dPUksoJnNldC5lbmdpbmVzLT5yY3UsIGZyZWVfZW5naW5lc19yY3Up
OworCXF1ZXVlX3JjdV93b3JrKHN5c3RlbV93cSwgJnNldC5lbmdpbmVzLT5yY3UpOworCisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqCitfX2NvcHlfZW5n
aW5lcyhzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lcyAqZSkKK3sKKwlzdHJ1Y3QgaTkxNV9nZW1fZW5n
aW5lcyAqY29weTsKKwl1bnNpZ25lZCBpbnQgbjsKKworCWNvcHkgPSBrbWFsbG9jKHN0cnVjdF9z
aXplKGUsIGVuZ2luZXMsIGUtPm51bV9lbmdpbmVzKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFjb3B5
KQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKworCWNvcHktPmk5MTUgPSBlLT5pOTE1Owor
CWZvciAobiA9IDA7IG4gPCBlLT5udW1fZW5naW5lczsgbisrKSB7CisJCWlmIChlLT5lbmdpbmVz
W25dKQorCQkJY29weS0+ZW5naW5lc1tuXSA9IGludGVsX2NvbnRleHRfZ2V0KGUtPmVuZ2luZXNb
bl0pOworCQllbHNlCisJCQljb3B5LT5lbmdpbmVzW25dID0gTlVMTDsKKwl9CisJY29weS0+bnVt
X2VuZ2luZXMgPSBuOworCisJcmV0dXJuIGNvcHk7Cit9CisKK3N0YXRpYyBpbnQKK2dldF9lbmdp
bmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgsCisJICAgIHN0cnVjdCBkcm1faTkxNV9n
ZW1fY29udGV4dF9wYXJhbSAqYXJncykKK3sKKwlzdHJ1Y3QgaTkxNV9jb250ZXh0X3BhcmFtX2Vu
Z2luZXMgX191c2VyICp1c2VyOworCXN0cnVjdCBpOTE1X2dlbV9lbmdpbmVzICplOworCXNpemVf
dCBuLCBjb3VudCwgc2l6ZTsKKwlpbnQgZXJyID0gMDsKKworCWVyciA9IG11dGV4X2xvY2tfaW50
ZXJydXB0aWJsZSgmY3R4LT5lbmdpbmVzX211dGV4KTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJy
OworCisJZSA9IE5VTEw7CisJaWYgKGk5MTVfZ2VtX2NvbnRleHRfdXNlcl9lbmdpbmVzKGN0eCkp
CisJCWUgPSBfX2NvcHlfZW5naW5lcyhpOTE1X2dlbV9jb250ZXh0X2VuZ2luZXMoY3R4KSk7CisJ
bXV0ZXhfdW5sb2NrKCZjdHgtPmVuZ2luZXNfbXV0ZXgpOworCWlmIChJU19FUlJfT1JfTlVMTChl
KSkgeworCQlhcmdzLT5zaXplID0gMDsKKwkJcmV0dXJuIFBUUl9FUlJfT1JfWkVSTyhlKTsKKwl9
CisKKwljb3VudCA9IGUtPm51bV9lbmdpbmVzOworCisJLyogQmUgcGFyYW5vaWQgaW4gY2FzZSB3
ZSBoYXZlIGFuIGltcGVkYW5jZSBtaXNtYXRjaCAqLworCWlmICghY2hlY2tfc3RydWN0X3NpemUo
dXNlciwgZW5naW5lcywgY291bnQsICZzaXplKSkgeworCQllcnIgPSAtRUlOVkFMOworCQlnb3Rv
IGVycl9mcmVlOworCX0KKwlpZiAob3ZlcmZsb3dzX3R5cGUoc2l6ZSwgYXJncy0+c2l6ZSkpIHsK
KwkJZXJyID0gLUVJTlZBTDsKKwkJZ290byBlcnJfZnJlZTsKKwl9CisKKwlpZiAoIWFyZ3MtPnNp
emUpIHsKKwkJYXJncy0+c2l6ZSA9IHNpemU7CisJCWdvdG8gZXJyX2ZyZWU7CisJfQorCisJaWYg
KGFyZ3MtPnNpemUgPCBzaXplKSB7CisJCWVyciA9IC1FSU5WQUw7CisJCWdvdG8gZXJyX2ZyZWU7
CisJfQorCisJdXNlciA9IHU2NF90b191c2VyX3B0cihhcmdzLT52YWx1ZSk7CisJaWYgKCFhY2Nl
c3Nfb2sodXNlciwgc2l6ZSkpIHsKKwkJZXJyID0gLUVGQVVMVDsKKwkJZ290byBlcnJfZnJlZTsK
Kwl9CisKKwlpZiAocHV0X3VzZXIoMCwgJnVzZXItPmV4dGVuc2lvbnMpKSB7CisJCWVyciA9IC1F
RkFVTFQ7CisJCWdvdG8gZXJyX2ZyZWU7CisJfQorCisJZm9yIChuID0gMDsgbiA8IGNvdW50OyBu
KyspIHsKKwkJc3RydWN0IGk5MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGNpID0geworCQkJLmVu
Z2luZV9jbGFzcyA9IEk5MTVfRU5HSU5FX0NMQVNTX0lOVkFMSUQsCisJCQkuZW5naW5lX2luc3Rh
bmNlID0gSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9OT05FLAorCQl9OworCisJCWlmIChlLT5l
bmdpbmVzW25dKSB7CisJCQljaS5lbmdpbmVfY2xhc3MgPSBlLT5lbmdpbmVzW25dLT5lbmdpbmUt
PnVhYmlfY2xhc3M7CisJCQljaS5lbmdpbmVfaW5zdGFuY2UgPSBlLT5lbmdpbmVzW25dLT5lbmdp
bmUtPmluc3RhbmNlOworCQl9CisKKwkJaWYgKGNvcHlfdG9fdXNlcigmdXNlci0+ZW5naW5lc1tu
XSwgJmNpLCBzaXplb2YoY2kpKSkgeworCQkJZXJyID0gLUVGQVVMVDsKKwkJCWdvdG8gZXJyX2Zy
ZWU7CisJCX0KKwl9CisKKwlhcmdzLT5zaXplID0gc2l6ZTsKKworZXJyX2ZyZWU6CisJSU5JVF9S
Q1VfV09SSygmZS0+cmN1LCBmcmVlX2VuZ2luZXNfcmN1KTsKKwlxdWV1ZV9yY3Vfd29yayhzeXN0
ZW1fd3EsICZlLT5yY3UpOworCXJldHVybiBlcnI7Cit9CisKIHN0YXRpYyBpbnQgY3R4X3NldHBh
cmFtKHN0cnVjdCBkcm1faTkxNV9maWxlX3ByaXZhdGUgKmZwcml2LAogCQkJc3RydWN0IGk5MTVf
Z2VtX2NvbnRleHQgKmN0eCwKIAkJCXN0cnVjdCBkcm1faTkxNV9nZW1fY29udGV4dF9wYXJhbSAq
YXJncykKQEAgLTE0NTIsNiArMTY4NywxMCBAQCBzdGF0aWMgaW50IGN0eF9zZXRwYXJhbShzdHJ1
Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmcHJpdiwKIAkJcmV0ID0gc2V0X3BwZ3R0KGZwcml2
LCBjdHgsIGFyZ3MpOwogCQlicmVhazsKIAorCWNhc2UgSTkxNV9DT05URVhUX1BBUkFNX0VOR0lO
RVM6CisJCXJldCA9IHNldF9lbmdpbmVzKGN0eCwgYXJncyk7CisJCWJyZWFrOworCiAJY2FzZSBJ
OTE1X0NPTlRFWFRfUEFSQU1fQkFOX1BFUklPRDoKIAlkZWZhdWx0OgogCQlyZXQgPSAtRUlOVkFM
OwpAQCAtMTU5Niw5ICsxODM1LDcgQEAgc3RhdGljIGludCBnZXRfc3NldShzdHJ1Y3QgaTkxNV9n
ZW1fY29udGV4dCAqY3R4LAogCWlmICh1c2VyX3NzZXUuZmxhZ3MgfHwgdXNlcl9zc2V1LnJzdmQp
CiAJCXJldHVybiAtRUlOVkFMOwogCi0JY2UgPSBsb29rdXBfdXNlcl9lbmdpbmUoY3R4LAotCQkJ
CXVzZXJfc3NldS5lbmdpbmUuZW5naW5lX2NsYXNzLAotCQkJCXVzZXJfc3NldS5lbmdpbmUuZW5n
aW5lX2luc3RhbmNlKTsKKwljZSA9IGxvb2t1cF91c2VyX2VuZ2luZShjdHgsIDAsICZ1c2VyX3Nz
ZXUuZW5naW5lKTsKIAlpZiAoSVNfRVJSKGNlKSkKIAkJcmV0dXJuIFBUUl9FUlIoY2UpOwogCkBA
IC0xNjgyLDYgKzE5MTksMTAgQEAgaW50IGk5MTVfZ2VtX2NvbnRleHRfZ2V0cGFyYW1faW9jdGwo
c3RydWN0IGRybV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIAkJcmV0ID0gZ2V0X3BwZ3R0KGZp
bGVfcHJpdiwgY3R4LCBhcmdzKTsKIAkJYnJlYWs7CiAKKwljYXNlIEk5MTVfQ09OVEVYVF9QQVJB
TV9FTkdJTkVTOgorCQlyZXQgPSBnZXRfZW5naW5lcyhjdHgsIGFyZ3MpOworCQlicmVhazsKKwog
CWNhc2UgSTkxNV9DT05URVhUX1BBUkFNX0JBTl9QRVJJT0Q6CiAJZGVmYXVsdDoKIAkJcmV0ID0g
LUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRl
eHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2NvbnRleHQuaAppbmRleCAyNzJl
MTgzZWJjMGMuLjlhZDRhNjM2MjQzOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9nZW1fY29udGV4dC5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX2Nv
bnRleHQuaApAQCAtMTEyLDYgKzExMiwyNCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaTkxNV9nZW1f
Y29udGV4dF9zZXRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24oc3RydWN0IGk5MTVfZ2VtXwogCV9f
c2V0X2JpdChDT05URVhUX0ZPUkNFX1NJTkdMRV9TVUJNSVNTSU9OLCAmY3R4LT5mbGFncyk7CiB9
CiAKK3N0YXRpYyBpbmxpbmUgYm9vbAoraTkxNV9nZW1fY29udGV4dF91c2VyX2VuZ2luZXMoY29u
c3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKK3sKKwlyZXR1cm4gdGVzdF9iaXQoQ09O
VEVYVF9VU0VSX0VOR0lORVMsICZjdHgtPmZsYWdzKTsKK30KKworc3RhdGljIGlubGluZSB2b2lk
CitpOTE1X2dlbV9jb250ZXh0X3NldF91c2VyX2VuZ2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRl
eHQgKmN0eCkKK3sKKwlzZXRfYml0KENPTlRFWFRfVVNFUl9FTkdJTkVTLCAmY3R4LT5mbGFncyk7
Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAoraTkxNV9nZW1fY29udGV4dF9jbGVhcl91c2VyX2Vu
Z2luZXMoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKK3sKKwljbGVhcl9iaXQoQ09OVEVY
VF9VU0VSX0VOR0lORVMsICZjdHgtPmZsYWdzKTsKK30KKwogaW50IF9faTkxNV9nZW1fY29udGV4
dF9waW5faHdfaWQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCk7CiBzdGF0aWMgaW5saW5l
IGludCBpOTE1X2dlbV9jb250ZXh0X3Bpbl9od19pZChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Y3R4KQogewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fY29udGV4
dF90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fY29udGV4dF90eXBlcy5o
CmluZGV4IGQ1Y2I0ZjEyMWFhZC4uZmI5NjVkZWQyNTA4IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCkBAIC0xNDYsNiArMTQ2LDcgQEAgc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgewogI2RlZmluZSBDT05URVhUX0JBTk5FRAkJCTAKICNkZWZpbmUg
Q09OVEVYVF9DTE9TRUQJCQkxCiAjZGVmaW5lIENPTlRFWFRfRk9SQ0VfU0lOR0xFX1NVQk1JU1NJ
T04JMgorI2RlZmluZSBDT05URVhUX1VTRVJfRU5HSU5FUwkJMwogCiAJLyoqCiAJICogQGh3X2lk
OiAtIHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgY29udGV4dApkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXhlY2J1ZmZlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IDM2MWMyMzJkZGU4My4uNzI5ODYwMTg4YzFh
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9leGVjYnVmZmVyLmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fZXhlY2J1ZmZlci5jCkBAIC0yMTY2
LDcgKzIxNjYsMTAgQEAgZWJfc2VsZWN0X2VuZ2luZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
YiwKIAl1bnNpZ25lZCBpbnQgaWR4OwogCWludCBlcnI7CiAKLQlpZHggPSBlYl9zZWxlY3RfbGVn
YWN5X3JpbmcoZWIsIGZpbGUsIGFyZ3MpOworCWlmIChpOTE1X2dlbV9jb250ZXh0X3VzZXJfZW5n
aW5lcyhlYi0+Z2VtX2NvbnRleHQpKQorCQlpZHggPSBhcmdzLT5mbGFncyAmIEk5MTVfRVhFQ19S
SU5HX01BU0s7CisJZWxzZQorCQlpZHggPSBlYl9zZWxlY3RfbGVnYWN5X3JpbmcoZWIsIGZpbGUs
IGFyZ3MpOwogCiAJY2UgPSBpOTE1X2dlbV9jb250ZXh0X2dldF9lbmdpbmUoZWItPmdlbV9jb250
ZXh0LCBpZHgpOwogCWlmIChJU19FUlIoY2UpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV91dGlscy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV91dGlscy5oCmlu
ZGV4IDVjOTRjN2FiNDYwNy4uZTUyODY2MDg0ODkxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3V0aWxzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV91dGls
cy5oCkBAIC0yNiw2ICsyNiw3IEBACiAjZGVmaW5lIF9fSTkxNV9VVElMU19ICiAKICNpbmNsdWRl
IDxsaW51eC9saXN0Lmg+CisjaW5jbHVkZSA8bGludXgvb3ZlcmZsb3cuaD4KICNpbmNsdWRlIDxs
aW51eC9zY2hlZC5oPgogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgv
d29ya3F1ZXVlLmg+CkBAIC03OCw2ICs3OSwzOSBAQAogI2RlZmluZSBvdmVyZmxvd3NfdHlwZSh4
LCBUKSBcCiAJKHNpemVvZih4KSA+IHNpemVvZihUKSAmJiAoeCkgPj4gQklUU19QRVJfVFlQRShU
KSkKIAorc3RhdGljIGlubGluZSBib29sCitfX2NoZWNrX3N0cnVjdF9zaXplKHNpemVfdCBiYXNl
LCBzaXplX3QgYXJyLCBzaXplX3QgY291bnQsIHNpemVfdCAqc2l6ZSkKK3sKKwlzaXplX3Qgc3o7
CisKKwlpZiAoY2hlY2tfbXVsX292ZXJmbG93KGNvdW50LCBhcnIsICZzeikpCisJCXJldHVybiBm
YWxzZTsKKworCWlmIChjaGVja19hZGRfb3ZlcmZsb3coc3osIGJhc2UsICZzeikpCisJCXJldHVy
biBmYWxzZTsKKworCSpzaXplID0gc3o7CisJcmV0dXJuIHRydWU7Cit9CisKKy8qKgorICogY2hl
Y2tfc3RydWN0X3NpemUoKSAtIENhbGN1bGF0ZSBzaXplIG9mIHN0cnVjdHVyZSB3aXRoIHRyYWls
aW5nIGFycmF5LgorICogQHA6IFBvaW50ZXIgdG8gdGhlIHN0cnVjdHVyZS4KKyAqIEBtZW1iZXI6
IE5hbWUgb2YgdGhlIGFycmF5IG1lbWJlci4KKyAqIEBuOiBOdW1iZXIgb2YgZWxlbWVudHMgaW4g
dGhlIGFycmF5LgorICogQHN6OiBUb3RhbCBzaXplIG9mIHN0cnVjdHVyZSBhbmQgYXJyYXkKKyAq
CisgKiBDYWxjdWxhdGVzIHNpemUgb2YgbWVtb3J5IG5lZWRlZCBmb3Igc3RydWN0dXJlIEBwIGZv
bGxvd2VkIGJ5IGFuCisgKiBhcnJheSBvZiBAbiBAbWVtYmVyIGVsZW1lbnRzLCBsaWtlIHN0cnVj
dF9zaXplKCkgYnV0IHJlcG9ydHMKKyAqIHdoZXRoZXIgaXQgb3ZlcmZsb3dlZCwgYW5kIHRoZSBy
ZXN1bHRhbnQgc2l6ZSBpbiBAc3oKKyAqCisgKiBSZXR1cm46IGZhbHNlIGlmIHRoZSBjYWxjdWxh
dGlvbiBvdmVyZmxvd2VkLgorICovCisjZGVmaW5lIGNoZWNrX3N0cnVjdF9zaXplKHAsIG1lbWJl
ciwgbiwgc3opIFwKKwlsaWtlbHkoX19jaGVja19zdHJ1Y3Rfc2l6ZShzaXplb2YoKihwKSksIFwK
KwkJCQkgICBzaXplb2YoKihwKS0+bWVtYmVyKSArIF9fbXVzdF9iZV9hcnJheSgocCktPm1lbWJl
ciksIFwKKwkJCQkgICBuLCBzeikpCisKICNkZWZpbmUgcHRyX21hc2tfYml0cyhwdHIsIG4pICh7
CQkJCQlcCiAJdW5zaWduZWQgbG9uZyBfX3YgPSAodW5zaWduZWQgbG9uZykocHRyKTsJCQlcCiAJ
KHR5cGVvZihwdHIpKShfX3YgJiAtQklUKG4pKTsJCQkJCVwKZGlmZiAtLWdpdCBhL2luY2x1ZGUv
dWFwaS9kcm0vaTkxNV9kcm0uaCBiL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaAppbmRleCBk
NmFkNGExNWIyYjkuLjhlMWJiMjI5MjZlNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2RybS9p
OTE1X2RybS5oCisrKyBiL2luY2x1ZGUvdWFwaS9kcm0vaTkxNV9kcm0uaApAQCAtMTM2LDYgKzEz
Niw3IEBAIGVudW0gZHJtX2k5MTVfZ2VtX2VuZ2luZV9jbGFzcyB7CiBzdHJ1Y3QgaTkxNV9lbmdp
bmVfY2xhc3NfaW5zdGFuY2UgewogCV9fdTE2IGVuZ2luZV9jbGFzczsgLyogc2VlIGVudW0gZHJt
X2k5MTVfZ2VtX2VuZ2luZV9jbGFzcyAqLwogCV9fdTE2IGVuZ2luZV9pbnN0YW5jZTsKKyNkZWZp
bmUgSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9OT05FIC0xCiB9OwogCiAvKioKQEAgLTE1MjIs
NiArMTUyMywyNiBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfcGFyYW0gewogCSAqIFNl
ZSBEUk1fSTkxNV9HRU1fVk1fQ1JFQVRFIGFuZCBEUk1fSTkxNV9HRU1fVk1fREVTVFJPWS4KIAkg
Ki8KICNkZWZpbmUgSTkxNV9DT05URVhUX1BBUkFNX1ZNCQkweDkKKworLyoKKyAqIEk5MTVfQ09O
VEVYVF9QQVJBTV9FTkdJTkVTOgorICoKKyAqIEJpbmQgdGhpcyBjb250ZXh0IHRvIG9wZXJhdGUg
b24gdGhpcyBzdWJzZXQgb2YgYXZhaWxhYmxlIGVuZ2luZXMuIEhlbmNlZm9ydGgsCisgKiB0aGUg
STkxNV9FWEVDX1JJTkcgc2VsZWN0b3IgZm9yIERSTV9JT0NUTF9JOTE1X0dFTV9FWEVDQlVGRkVS
MiBvcGVyYXRlcyBhcworICogYW4gaW5kZXggaW50byB0aGlzIGFycmF5IG9mIGVuZ2luZXM7IEk5
MTVfRVhFQ19ERUZBVUxUIHNlbGVjdGluZyBlbmdpbmVbMF0KKyAqIGFuZCB1cHdhcmRzLiBTbG90
cyAwLi4uTiBhcmUgZmlsbGVkIGluIHVzaW5nIHRoZSBzcGVjaWZpZWQgKGNsYXNzLCBpbnN0YW5j
ZSkuCisgKiBVc2UKKyAqCWVuZ2luZV9jbGFzczogSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRCwK
KyAqCWVuZ2luZV9pbnN0YW5jZTogSTkxNV9FTkdJTkVfQ0xBU1NfSU5WQUxJRF9OT05FCisgKiB0
byBzcGVjaWZ5IGEgZ2FwIGluIHRoZSBhcnJheSB0aGF0IGNhbiBiZSBmaWxsZWQgaW4gbGF0ZXIs
IGUuZy4gYnkgYQorICogdmlydHVhbCBlbmdpbmUgdXNlZCBmb3IgbG9hZCBiYWxhbmNpbmcuCisg
KgorICogU2V0dGluZyB0aGUgbnVtYmVyIG9mIGVuZ2luZXMgYm91bmQgdG8gdGhlIGNvbnRleHQg
dG8gMCwgYnkgcGFzc2luZyBhIHplcm8KKyAqIHNpemVkIGFyZ3VtZW50LCB3aWxsIHJldmVydCBi
YWNrIHRvIGRlZmF1bHQgc2V0dGluZ3MuCisgKgorICogU2VlIHN0cnVjdCBpOTE1X2NvbnRleHRf
cGFyYW1fZW5naW5lcy4KKyAqLworI2RlZmluZSBJOTE1X0NPTlRFWFRfUEFSQU1fRU5HSU5FUwkw
eGEKIC8qIE11c3QgYmUga2VwdCBjb21wYWN0IC0tIG5vIGhvbGVzIGFuZCB3ZWxsIGRvY3VtZW50
ZWQgKi8KIAogCV9fdTY0IHZhbHVlOwpAQCAtMTU4NSw2ICsxNjA2LDE2IEBAIHN0cnVjdCBkcm1f
aTkxNV9nZW1fY29udGV4dF9wYXJhbV9zc2V1IHsKIAlfX3UzMiByc3ZkOwogfTsKIAorc3RydWN0
IGk5MTVfY29udGV4dF9wYXJhbV9lbmdpbmVzIHsKKwlfX3U2NCBleHRlbnNpb25zOyAvKiBsaW5r
ZWQgY2hhaW4gb2YgZXh0ZW5zaW9uIGJsb2NrcywgMCB0ZXJtaW5hdGVzICovCisJc3RydWN0IGk5
MTVfZW5naW5lX2NsYXNzX2luc3RhbmNlIGVuZ2luZXNbMF07Cit9IF9fYXR0cmlidXRlX18oKHBh
Y2tlZCkpOworCisjZGVmaW5lIEk5MTVfREVGSU5FX0NPTlRFWFRfUEFSQU1fRU5HSU5FUyhuYW1l
X18sIE5fXykgc3RydWN0IHsgXAorCV9fdTY0IGV4dGVuc2lvbnM7IFwKKwlzdHJ1Y3QgaTkxNV9l
bmdpbmVfY2xhc3NfaW5zdGFuY2UgZW5naW5lc1tOX19dOyBcCit9IF9fYXR0cmlidXRlX18oKHBh
Y2tlZCkpIG5hbWVfXworCiBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX2NvbnRleHRfY3JlYXRlX2V4dF9z
ZXRwYXJhbSB7CiAjZGVmaW5lIEk5MTVfQ09OVEVYVF9DUkVBVEVfRVhUX1NFVFBBUkFNIDAKIAlz
dHJ1Y3QgaTkxNV91c2VyX2V4dGVuc2lvbiBiYXNlOwotLSAKMi4yMC4xCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0
CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3Rv
cC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

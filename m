Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 012342CF877
	for <lists+intel-gfx@lfdr.de>; Sat,  5 Dec 2020 02:09:11 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 628DD6E222;
	Sat,  5 Dec 2020 01:09:04 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 89BB36E235
 for <intel-gfx@lists.freedesktop.org>; Sat,  5 Dec 2020 01:09:02 +0000 (UTC)
IronPort-SDR: G4CtxhzlaHOR421LnaxwnmD1OkSPy3N8fqkrAa2cK0KJP/2LVMUV272kgWNT2POt7y61vTY3tZ
 1RpQMckyXpLA==
X-IronPort-AV: E=McAfee;i="6000,8403,9825"; a="173571002"
X-IronPort-AV: E=Sophos;i="5.78,394,1599548400"; d="scan'208";a="173571002"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 04 Dec 2020 17:09:02 -0800
IronPort-SDR: hSYU/hiAFktZ8IYUszhPhFzYxPjSj+qOjWzRmY4gkxnitUm8MFE3q/e0Kz3GxPDpc68Z6XkFQE
 c4jiOHqRH3gg==
X-IronPort-AV: E=Sophos;i="5.78,394,1599548400"; d="scan'208";a="369062915"
Received: from msdesadl-mobl1.amr.corp.intel.com (HELO
 aswarup-mobl.amr.corp.intel.com) ([10.251.12.22])
 by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 04 Dec 2020 17:09:01 -0800
From: Aditya Swarup <aditya.swarup@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  4 Dec 2020 17:08:30 -0800
Message-Id: <20201205010844.361880-9-aditya.swarup@intel.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20201205010844.361880-1-aditya.swarup@intel.com>
References: <20201205010844.361880-1-aditya.swarup@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 08/22] drm/i915/adl_s: Configure DPLL for ADL-S
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: Jani Nikula <jani.nikula@intel.com>,
 Lucas De Marchi <lucas.demarchi@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWRkIGNoYW5nZXMgZm9yIGNvbmZpZ3VyaW5nIERQTEwgZm9yIEFETC1TCi0gUmV1c2luZyBERzEg
RFBMTCAyICYgRFBMTCAzIGZvciBBREwtUwotIEV4dGVuZCBDTkwgbWFjcm8gdG8gY2hvb3NlIERQ
TExfRU5BQkxFCiAgZm9yIEFETC1TLgotIFNlbGVjdCBDRkdDUjAgYW5kIENGR0NSMSBmb3IgQURM
LVMgcGxscy4KCk9uIEJTcGVjOiA1MzcyMCBQTEwgYXJyYW5nZW1lbnQgZGlnIGZvciBhZGxzOgpE
UExMMiBjZmdjciBpcyBwcm9ncmFtbWVkIHVzaW5nIF9BRExTX0RQTEwzX0NGR0NSKDAvMSkKRFBM
TDMgY2ZnY3IgaXMgcHJvZ3JhbW1lZCB1c2luZyBfQURMU19EUExMNF9DRkdDUigwLzEpCgp2MiAo
THVjYXMpOiBhZGQgbWlzc2luZyB1cGRhdGVfcmVmX2Nsa3MKCkJzcGVjOiA1MDI4OApCc3BlYzog
NTAyODkKQnNwZWM6IDQ5NDQzCgp2MyA6IEFkZGluZyBhbm90aGVyIGJpdCB0byBIRFBPUlRfRFBM
TF9VU0VEX01BU0sgYml0ZmllbGQKZm9yIERQTEwzX1VTRUQuKG1kcm9wZXIpCgpCc3BlYzogNTM3
MDcKCkNjOiBKYW5pIE5pa3VsYSA8amFuaS5uaWt1bGFAaW50ZWwuY29tPgpDYzogVmlsbGUgU3ly
asOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KQ2M6IEltcmUgRGVhayA8aW1y
ZS5kZWFrQGludGVsLmNvbT4KQ2M6IE1hdHQgUm9wZXIgPG1hdHRoZXcuZC5yb3BlckBpbnRlbC5j
b20+CkNjOiBMdWNhcyBEZSBNYXJjaGkgPGx1Y2FzLmRlbWFyY2hpQGludGVsLmNvbT4KU2lnbmVk
LW9mZi1ieTogQWRpdHlhIFN3YXJ1cCA8YWRpdHlhLnN3YXJ1cEBpbnRlbC5jb20+ClNpZ25lZC1v
ZmYtYnk6IEx1Y2FzIERlIE1hcmNoaSA8bHVjYXMuZGVtYXJjaGlAaW50ZWwuY29tPgotLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYyB8IDM4ICsrKysrKysr
KysrKysrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmggICAgICAgICAgICAg
ICB8IDIxICsrKysrKysrKy0KIDIgZmlsZXMgY2hhbmdlZCwgNTMgaW5zZXJ0aW9ucygrKSwgNiBk
ZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2RwbGxfbWdyLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxf
bWdyLmMKaW5kZXggZjZhZDI1N2EyNjBlLi41MjliMWQ1NjlhZjIgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBsbF9tZ3IuYworKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwbGxfbWdyLmMKQEAgLTM1NTksNyArMzU1OSwxMyBA
QCBzdGF0aWMgYm9vbCBpY2xfZ2V0X2NvbWJvX3BoeV9kcGxsKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlLAogCiAJaWNsX2NhbGNfZHBsbF9zdGF0ZShkZXZfcHJpdiwgJnBsbF9wYXJh
bXMsICZwb3J0X2RwbGwtPmh3X3N0YXRlKTsKIAotCWlmIChJU19ERzEoZGV2X3ByaXYpKSB7CisJ
aWYgKElTX0FMREVSTEFLRV9TKGRldl9wcml2KSkgeworCQlkcGxsX21hc2sgPQorCQkJQklUKERQ
TExfSURfREcxX0RQTEwzKSB8CisJCQlCSVQoRFBMTF9JRF9ERzFfRFBMTDIpIHwKKwkJCUJJVChE
UExMX0lEX0lDTF9EUExMMSkgfAorCQkJQklUKERQTExfSURfSUNMX0RQTEwwKTsKKwl9IGVsc2Ug
aWYgKElTX0RHMShkZXZfcHJpdikpIHsKIAkJaWYgKHBvcnQgPT0gUE9SVF9EIHx8IHBvcnQgPT0g
UE9SVF9FKSB7CiAJCQlkcGxsX21hc2sgPQogCQkJCUJJVChEUExMX0lEX0RHMV9EUExMMikgfApA
QCAtMzg2NSw3ICszODcxLDEwIEBAIHN0YXRpYyBib29sIGljbF9wbGxfZ2V0X2h3X3N0YXRlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlpZiAoISh2YWwgJiBQTExfRU5BQkxF
KSkKIAkJZ290byBvdXQ7CiAKLQlpZiAoSVNfREcxKGRldl9wcml2KSkgeworCWlmIChJU19BTERF
UkxBS0VfUyhkZXZfcHJpdikpIHsKKwkJaHdfc3RhdGUtPmNmZ2NyMCA9IGludGVsX2RlX3JlYWQo
ZGV2X3ByaXYsIEFETFNfRFBMTF9DRkdDUjAoaWQpKTsKKwkJaHdfc3RhdGUtPmNmZ2NyMSA9IGlu
dGVsX2RlX3JlYWQoZGV2X3ByaXYsIEFETFNfRFBMTF9DRkdDUjEoaWQpKTsKKwl9IGVsc2UgaWYg
KElTX0RHMShkZXZfcHJpdikpIHsKIAkJaHdfc3RhdGUtPmNmZ2NyMCA9IGludGVsX2RlX3JlYWQo
ZGV2X3ByaXYsIERHMV9EUExMX0NGR0NSMChpZCkpOwogCQlod19zdGF0ZS0+Y2ZnY3IxID0gaW50
ZWxfZGVfcmVhZChkZXZfcHJpdiwgREcxX0RQTExfQ0ZHQ1IxKGlkKSk7CiAJfSBlbHNlIGlmIChJ
U19ST0NLRVRMQUtFKGRldl9wcml2KSkgewpAQCAtMzkyMSw3ICszOTMwLDEwIEBAIHN0YXRpYyB2
b2lkIGljbF9kcGxsX3dyaXRlKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAlj
b25zdCBlbnVtIGludGVsX2RwbGxfaWQgaWQgPSBwbGwtPmluZm8tPmlkOwogCWk5MTVfcmVnX3Qg
Y2ZnY3IwX3JlZywgY2ZnY3IxX3JlZzsKIAotCWlmIChJU19ERzEoZGV2X3ByaXYpKSB7CisJaWYg
KElTX0FMREVSTEFLRV9TKGRldl9wcml2KSkgeworCQljZmdjcjBfcmVnID0gQURMU19EUExMX0NG
R0NSMChpZCk7CisJCWNmZ2NyMV9yZWcgPSBBRExTX0RQTExfQ0ZHQ1IxKGlkKTsKKwl9IGVsc2Ug
aWYgKElTX0RHMShkZXZfcHJpdikpIHsKIAkJY2ZnY3IwX3JlZyA9IERHMV9EUExMX0NGR0NSMChp
ZCk7CiAJCWNmZ2NyMV9yZWcgPSBERzFfRFBMTF9DRkdDUjEoaWQpOwogCX0gZWxzZSBpZiAoSVNf
Uk9DS0VUTEFLRShkZXZfcHJpdikpIHsKQEAgLTQzODQsNiArNDM5NiwyMiBAQCBzdGF0aWMgY29u
c3Qgc3RydWN0IGludGVsX2RwbGxfbWdyIGRnMV9wbGxfbWdyID0gewogCS5kdW1wX2h3X3N0YXRl
ID0gaWNsX2R1bXBfaHdfc3RhdGUsCiB9OwogCitzdGF0aWMgY29uc3Qgc3RydWN0IGRwbGxfaW5m
byBhZGxzX3BsbHNbXSA9IHsKKwl7ICJEUExMIDAiLCAmY29tYm9fcGxsX2Z1bmNzLCBEUExMX0lE
X0lDTF9EUExMMCwgMCB9LAorCXsgIkRQTEwgMSIsICZjb21ib19wbGxfZnVuY3MsIERQTExfSURf
SUNMX0RQTEwxLCAwIH0sCisJeyAiRFBMTCAyIiwgJmNvbWJvX3BsbF9mdW5jcywgRFBMTF9JRF9E
RzFfRFBMTDIsIDAgfSwKKwl7ICJEUExMIDMiLCAmY29tYm9fcGxsX2Z1bmNzLCBEUExMX0lEX0RH
MV9EUExMMywgMCB9LAorCXsgfSwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfZHBs
bF9tZ3IgYWRsc19wbGxfbWdyID0geworCS5kcGxsX2luZm8gPSBhZGxzX3BsbHMsCisJLmdldF9k
cGxscyA9IGljbF9nZXRfZHBsbHMsCisJLnB1dF9kcGxscyA9IGljbF9wdXRfZHBsbHMsCisJLnVw
ZGF0ZV9yZWZfY2xrcyA9IGljbF91cGRhdGVfZHBsbF9yZWZfY2xrcywKKwkuZHVtcF9od19zdGF0
ZSA9IGljbF9kdW1wX2h3X3N0YXRlLAorfTsKKwogLyoqCiAgKiBpbnRlbF9zaGFyZWRfZHBsbF9p
bml0IC0gSW5pdGlhbGl6ZSBzaGFyZWQgRFBMTHMKICAqIEBkZXY6IGRybSBkZXZpY2UKQEAgLTQz
OTcsNyArNDQyNSw5IEBAIHZvaWQgaW50ZWxfc2hhcmVkX2RwbGxfaW5pdChzdHJ1Y3QgZHJtX2Rl
dmljZSAqZGV2KQogCWNvbnN0IHN0cnVjdCBkcGxsX2luZm8gKmRwbGxfaW5mbzsKIAlpbnQgaTsK
IAotCWlmIChJU19ERzEoZGV2X3ByaXYpKQorCWlmIChJU19BTERFUkxBS0VfUyhkZXZfcHJpdikp
CisJCWRwbGxfbWdyID0gJmFkbHNfcGxsX21ncjsKKwllbHNlIGlmIChJU19ERzEoZGV2X3ByaXYp
KQogCQlkcGxsX21nciA9ICZkZzFfcGxsX21ncjsKIAllbHNlIGlmIChJU19ST0NLRVRMQUtFKGRl
dl9wcml2KSkKIAkJZHBsbF9tZ3IgPSAmcmtsX3BsbF9tZ3I7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3JlZy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcu
aAppbmRleCA2MGEwZDRjMzVjYWUuLjk5OWI0ZWI0MjJkYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9yZWcuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Jl
Zy5oCkBAIC0yOTMwLDcgKzI5MzAsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wgaTkxNV9tbWlvX3Jl
Z192YWxpZChpOTE1X3JlZ190IHJlZykKICNkZWZpbmUgTUJVU19CQk9YX0NUTF9TMgkJX01NSU8o
MHg0NTA0NCkKIAogI2RlZmluZSBIRFBPUlRfU1RBVEUJCQlfTU1JTygweDQ1MDUwKQotI2RlZmlu
ZSAgIEhEUE9SVF9EUExMX1VTRURfTUFTSwkJUkVHX0dFTk1BU0soMTQsIDEyKQorI2RlZmluZSAg
IEhEUE9SVF9EUExMX1VTRURfTUFTSwkJUkVHX0dFTk1BU0soMTUsIDEyKQogI2RlZmluZSAgIEhE
UE9SVF9QSFlfVVNFRF9EUChwaHkpCVJFR19CSVQoMiAqIChwaHkpICsgMikKICNkZWZpbmUgICBI
RFBPUlRfUEhZX1VTRURfSERNSShwaHkpCVJFR19CSVQoMiAqIChwaHkpICsgMSkKICNkZWZpbmUg
ICBIRFBPUlRfRU5BQkxFRAkJUkVHX0JJVCgwKQpAQCAtMTAzNDUsMTEgKzEwMzQ1LDE0IEBAIGVu
dW0gc2tsX3Bvd2VyX2dhdGUgewogLyogQ05MIFBMTCAqLwogI2RlZmluZSBEUExMMF9FTkFCTEUJ
CTB4NDYwMTAKICNkZWZpbmUgRFBMTDFfRU5BQkxFCQkweDQ2MDE0CisjZGVmaW5lIF9BRExTX0RQ
TEwyX0VOQUJMRQkweDQ2MDE4CisjZGVmaW5lIF9BRExTX0RQTEwzX0VOQUJMRQkweDQ2MDMwCiAj
ZGVmaW5lICBQTExfRU5BQkxFCQkoMSA8PCAzMSkKICNkZWZpbmUgIFBMTF9MT0NLCQkoMSA8PCAz
MCkKICNkZWZpbmUgIFBMTF9QT1dFUl9FTkFCTEUJKDEgPDwgMjcpCiAjZGVmaW5lICBQTExfUE9X
RVJfU1RBVEUJKDEgPDwgMjYpCi0jZGVmaW5lIENOTF9EUExMX0VOQUJMRShwbGwpCV9NTUlPX1BM
TChwbGwsIERQTEwwX0VOQUJMRSwgRFBMTDFfRU5BQkxFKQorI2RlZmluZSBDTkxfRFBMTF9FTkFC
TEUocGxsKQlfTU1JT19QTEwzKHBsbCwgRFBMTDBfRU5BQkxFLCBEUExMMV9FTkFCTEUsIFwKKwkJ
CQkJICAgX0FETFNfRFBMTDJfRU5BQkxFLCBfQURMU19EUExMM19FTkFCTEUpCiAKICNkZWZpbmUg
VEJUX1BMTF9FTkFCTEUJCV9NTUlPKDB4NDYwMjApCiAKQEAgLTEwNTk1LDYgKzEwNTk4LDIwIEBA
IGVudW0gc2tsX3Bvd2VyX2dhdGUgewogCQkJCQkJICAgX0RHMV9EUExMMl9DRkdDUjEsIFwKIAkJ
CQkJCSAgIF9ERzFfRFBMTDNfQ0ZHQ1IxKQogCisjZGVmaW5lIF9BRExTX0RQTEwzX0NGR0NSMAkJ
MHgxNjQyQzAKKyNkZWZpbmUgX0FETFNfRFBMTDRfQ0ZHQ1IwCQkweDE2NDI5NAorI2RlZmluZSBB
RExTX0RQTExfQ0ZHQ1IwKHBsbCkJCV9NTUlPX1BMTDMocGxsLCBfVEdMX0RQTEwwX0NGR0NSMCwg
XAorCQkJCQkJICAgX1RHTF9EUExMMV9DRkdDUjAsIFwKKwkJCQkJCSAgIF9BRExTX0RQTEwzX0NG
R0NSMCwgXAorCQkJCQkJICAgX0FETFNfRFBMTDRfQ0ZHQ1IwKQorCisjZGVmaW5lIF9BRExTX0RQ
TEwzX0NGR0NSMQkJMHgxNjQyQzQKKyNkZWZpbmUgX0FETFNfRFBMTDRfQ0ZHQ1IxCQkweDE2NDI5
OAorI2RlZmluZSBBRExTX0RQTExfQ0ZHQ1IxKHBsbCkJCV9NTUlPX1BMTDMocGxsLCBfVEdMX0RQ
TEwwX0NGR0NSMSwgXAorCQkJCQkJICAgX1RHTF9EUExMMV9DRkdDUjEsIFwKKwkJCQkJCSAgIF9B
RExTX0RQTEwzX0NGR0NSMSwgXAorCQkJCQkJICAgX0FETFNfRFBMTDRfQ0ZHQ1IxKQorCiAjZGVm
aW5lIF9ES0xfUEhZMV9CQVNFCQkJMHgxNjgwMDAKICNkZWZpbmUgX0RLTF9QSFkyX0JBU0UJCQkw
eDE2OTAwMAogI2RlZmluZSBfREtMX1BIWTNfQkFTRQkJCTB4MTZBMDAwCi0tIAoyLjI3LjAKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBt
YWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3Rz
LmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

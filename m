Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id CE834112D47
	for <lists+intel-gfx@lfdr.de>; Wed,  4 Dec 2019 15:12:49 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id DA5846E904;
	Wed,  4 Dec 2019 14:12:47 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
 by gabe.freedesktop.org (Postfix) with ESMTPS id BA9566E904
 for <intel-gfx@lists.freedesktop.org>; Wed,  4 Dec 2019 14:12:45 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Dec 2019 06:12:45 -0800
X-IronPort-AV: E=Sophos;i="5.69,277,1571727600"; d="scan'208";a="205400877"
Received: from shaywa1-mobl.ger.corp.intel.com (HELO [10.252.9.203])
 ([10.252.9.203])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/AES256-SHA;
 04 Dec 2019 06:12:44 -0800
To: Chris Wilson <chris@chris-wilson.co.uk>, intel-gfx@lists.freedesktop.org
References: <20191204112633.3649206-1-chris@chris-wilson.co.uk>
From: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
Organization: Intel Corporation UK Plc
Message-ID: <0f700d64-310c-7681-9846-71335747b6d0@linux.intel.com>
Date: Wed, 4 Dec 2019 14:12:42 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.9.0
MIME-Version: 1.0
In-Reply-To: <20191204112633.3649206-1-chris@chris-wilson.co.uk>
Content-Language: en-US
Subject: Re: [Intel-gfx] [PATCH v2] drm/i915: Copy across scheduler
 behaviour flags across submit fences
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Ck9uIDA0LzEyLzIwMTkgMTE6MjYsIENocmlzIFdpbHNvbiB3cm90ZToKPiBXZSB3YW50IHRoZSBi
b25kZWQgcmVxdWVzdCB0byBoYXZlIHRoZSBzYW1lIHNjaGVkdWxlciBwcm9wZXJ0aWVzIGFzIGl0
cwo+IG1hc3RlciBzbyB0aGF0IGl0IGlzIHBsYWNlZCBhdCB0aGUgc2FtZSBkZXB0aCBpbiB0aGUg
cXVldWUuIEZvciBleGFtcGxlLAo+IGNvbnNpZGVyIHdlIGhhdmUgcmVxdWVzdHMgQSwgQiBhbmQg
QicsIHdoZXJlIEIgJiBCJyBhcmUgYSBib25kZWQgcGFpciB0bwo+IHJ1biBpbiBwYXJhbGxlbCBv
biB0d28gZW5naW5lcy4KPiAKPiAJQSAtPiBCCj4gICAgICAgCSAgICAgXC0gQicKPiAKPiBCIHdp
bGwgcnVuIGFmdGVyIEEgYW5kIHNvIG1heSBiZSBzY2hlZHVsZWQgb24gYW4gaWRsZSBlbmdpbmUg
YW5kIHdhaXQgb24KPiBBIHVzaW5nIGEgc2VtYXBob3JlLiBCJyBzZWVzIEIgYmVpbmcgZXhlY3V0
ZWQgYW5kIHNvIGVudGVycyB0aGUgcXVldWUgb24KPiB0aGUgc2FtZSBlbmdpbmUgYXMgQS4gQXMg
QicgZGlkIG5vdCBpbmhlcml0IHRoZSBzZW1hcGhvcmUtY2hhaW4gZnJvbSBCLAo+IGl0IG1heSBo
YXZlIGhpZ2hlciBwcmVjZWRlbmNlIHRoYW4gQSBhbmQgc28gcHJlZW1wdHMgZXhlY3V0aW9uLiBI
b3dldmVyLAo+IEInIHRoZW4gc2l0cyBvbiBhIHNlbWFwaG9yZSB3YWl0aW5nIGZvciBCLCB3aG8g
aXMgd2FpdGluZyBmb3IgQSwgd2hvIGlzCj4gYmxvY2tlZCBieSBCLgo+IAo+IEVyZ28gQicgbmVl
ZHMgdG8gaW5oZXJpdCB0aGUgc2NoZWR1bGVyIHByb3BlcnRpZXMgZnJvbSBCIChpLmUuIHRoZQo+
IHNlbWFwaG9yZSBjaGFpbikgc28gdGhhdCBpdCBpcyBzY2hlZHVsZWQgd2l0aCB0aGUgc2FtZSBw
cmlvcml0eSBhcyBCIGFuZAo+IHdpbGwgbm90IGJlIGV4ZWN1dGVkIGFoZWFkIG9mIEJzIGRlcGVu
ZGVuY2llcy4KPiAKPiBGdXJ0aGVybW9yZSwgdG8gcHJldmVudCB0aGUgcHJpb3JpdGllcyBjaGFu
Z2luZyB2aWEgdGhlIGV4cG9zZSBmZW5jZSBvbgo+IEInLCB3ZSBuZWVkIHRvIGNvdXBsZSBpbiB0
aGUgZGVwZW5kZW5jaWVzIGZvciBQSS4gVGhpcyByZXF1aXJlcyB1cyB0bwo+IHJlbGF4IG91ciBz
YW5pdHktY2hlY2tzIHRoYXQgZGVwZW5kZW5jaWVzIGFyZSBzdHJpY3RseSBpbiBvcmRlci4KPiAK
PiBGaXhlczogZWUxMTM2OTA4ZTliICgiZHJtL2k5MTUvZXhlY2xpc3RzOiBWaXJ0dWFsIGVuZ2lu
ZSBib25kaW5nIikKPiBUZXN0Y2FzZTogaWd0L2dlbV9leGVjX2JhbGFuY2VyL2JvbmRlZC1jaGFp
bgo+IFRlc3RjYXNlOiBpZ3QvZ2VtX2V4ZWNfYmFsYW5jZXIvYm9uZGVkLXNlbWFwaG9yZQo+IFNp
Z25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgo+IENj
OiBUdnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgo+IC0tLQo+IFRyYW5z
ZmVyIGFueSBzZW1hcGhvcmUgZGVwZW5kZW5jaWVzIGFzIHdlbGwuCj4gLS0tCj4gICBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYyAgIHwgMTE1ICsrKysrKysrKysrKysrKysrKysr
LS0tLS0tCj4gICBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jIHwgICAxIC0K
PiAgIDIgZmlsZXMgY2hhbmdlZCwgOTAgaW5zZXJ0aW9ucygrKSwgMjYgZGVsZXRpb25zKC0pCj4g
Cj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKPiBpbmRleCAzMTA5YjhhNzliOWYuLmUw
ZDI0OTc3YWE5YiAxMDA2NDQKPiAtLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVl
c3QuYwo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCj4gQEAgLTMw
MCwxMSArMzAwLDExIEBAIHZvaWQgaTkxNV9yZXF1ZXN0X3JldGlyZV91cHRvKHN0cnVjdCBpOTE1
X3JlcXVlc3QgKnJxKQo+ICAgfQo+ICAgCj4gICBzdGF0aWMgaW50Cj4gLV9faTkxNV9yZXF1ZXN0
X2F3YWl0X2V4ZWN1dGlvbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKPiAtCQkJICAgICAgIHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnNpZ25hbCwKPiAtCQkJICAgICAgIHZvaWQgKCpob29rKShzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSwKPiAtCQkJCQkgICAgc3RydWN0IGRtYV9mZW5jZSAqc2lnbmFs
KSwKPiAtCQkJICAgICAgIGdmcF90IGdmcCkKPiArX19hd2FpdF9leGVjdXRpb24oc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEsCj4gKwkJICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzaWduYWwsCj4gKwkJ
ICB2b2lkICgqaG9vaykoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCj4gKwkJCSAgICAgICBzdHJ1
Y3QgZG1hX2ZlbmNlICpzaWduYWwpLAo+ICsJCSAgZ2ZwX3QgZ2ZwKQo+ICAgewo+ICAgCXN0cnVj
dCBleGVjdXRlX2NiICpjYjsKPiAgIAo+IEBAIC0zNDEsNiArMzQxLDggQEAgX19pOTE1X3JlcXVl
c3RfYXdhaXRfZXhlY3V0aW9uKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAo+ICAgCX0KPiAgIAlz
cGluX3VubG9ja19pcnEoJnNpZ25hbC0+bG9jayk7Cj4gICAKPiArCS8qIENvcHkgYWNyb3NzIHNl
bWFwaG9yZSBzdGF0dXMgYXMgd2UgbmVlZCB0aGUgc2FtZSBiZWhhdmlvdXIgKi8KPiArCXJxLT5z
Y2hlZC5mbGFncyB8PSBzaWduYWwtPnNjaGVkLmZsYWdzOwo+ICAgCXJldHVybiAwOwo+ICAgfQo+
ICAgCj4gQEAgLTgyNCwzMSArODI2LDIxIEBAIGFscmVhZHlfYnVzeXdhaXRpbmcoc3RydWN0IGk5
MTVfcmVxdWVzdCAqcnEpCj4gICB9Cj4gICAKPiAgIHN0YXRpYyBpbnQKPiAtZW1pdF9zZW1hcGhv
cmVfd2FpdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICp0bywKPiAtCQkgICAgc3RydWN0IGk5MTVfcmVx
dWVzdCAqZnJvbSwKPiAtCQkgICAgZ2ZwX3QgZ2ZwKQo+ICtfX2VtaXRfc2VtYXBob3JlX3dhaXQo
c3RydWN0IGk5MTVfcmVxdWVzdCAqdG8sCj4gKwkJICAgICAgc3RydWN0IGk5MTVfcmVxdWVzdCAq
ZnJvbSwKPiArCQkgICAgICB1MzIgc2Vxbm8pCj4gICB7Cj4gICAJY29uc3QgaW50IGhhc190b2tl
biA9IElOVEVMX0dFTih0by0+aTkxNSkgPj0gMTI7Cj4gICAJdTMyIGh3c3Bfb2Zmc2V0Owo+IC0J
aW50IGxlbjsKPiArCWludCBsZW4sIGVycjsKPiAgIAl1MzIgKmNzOwo+ICAgCj4gICAJR0VNX0JV
R19PTihJTlRFTF9HRU4odG8tPmk5MTUpIDwgOCk7Cj4gICAKPiAtCS8qIEp1c3QgZW1pdCB0aGUg
Zmlyc3Qgc2VtYXBob3JlIHdlIHNlZSBhcyByZXF1ZXN0IHNwYWNlIGlzIGxpbWl0ZWQuICovCj4g
LQlpZiAoYWxyZWFkeV9idXN5d2FpdGluZyh0bykgJiBmcm9tLT5lbmdpbmUtPm1hc2spCj4gLQkJ
Z290byBhd2FpdF9mZW5jZTsKPiAtCj4gLQlpZiAoaTkxNV9yZXF1ZXN0X2F3YWl0X3N0YXJ0KHRv
LCBmcm9tKSA8IDApCj4gLQkJZ290byBhd2FpdF9mZW5jZTsKPiAtCj4gLQkvKiBPbmx5IHN1Ym1p
dCBvdXIgc3Bpbm5lciBhZnRlciB0aGUgc2lnbmFsZXIgaXMgcnVubmluZyEgKi8KPiAtCWlmIChf
X2k5MTVfcmVxdWVzdF9hd2FpdF9leGVjdXRpb24odG8sIGZyb20sIE5VTEwsIGdmcCkpCj4gLQkJ
Z290byBhd2FpdF9mZW5jZTsKPiAtCj4gICAJLyogV2UgbmVlZCB0byBwaW4gdGhlIHNpZ25hbGVy
J3MgSFdTUCB1bnRpbCB3ZSBhcmUgZmluaXNoZWQgcmVhZGluZy4gKi8KPiAtCWlmIChpbnRlbF90
aW1lbGluZV9yZWFkX2h3c3AoZnJvbSwgdG8sICZod3NwX29mZnNldCkpCj4gLQkJZ290byBhd2Fp
dF9mZW5jZTsKPiArCWVyciA9IGludGVsX3RpbWVsaW5lX3JlYWRfaHdzcChmcm9tLCB0bywgJmh3
c3Bfb2Zmc2V0KTsKPiArCWlmIChlcnIpCj4gKwkJcmV0dXJuIGVycjsKPiAgIAo+ICAgCWxlbiA9
IDQ7Cj4gICAJaWYgKGhhc190b2tlbikKPiBAQCAtODcxLDcgKzg2Myw3IEBAIGVtaXRfc2VtYXBo
b3JlX3dhaXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqdG8sCj4gICAJCSBNSV9TRU1BUEhPUkVfUE9M
TCB8Cj4gICAJCSBNSV9TRU1BUEhPUkVfU0FEX0dURV9TREQpICsKPiAgIAkJaGFzX3Rva2VuOwo+
IC0JKmNzKysgPSBmcm9tLT5mZW5jZS5zZXFubzsKPiArCSpjcysrID0gc2Vxbm87Cj4gICAJKmNz
KysgPSBod3NwX29mZnNldDsKPiAgIAkqY3MrKyA9IDA7Cj4gICAJaWYgKGhhc190b2tlbikgewo+
IEBAIC04ODAsNiArODcyLDI4IEBAIGVtaXRfc2VtYXBob3JlX3dhaXQoc3RydWN0IGk5MTVfcmVx
dWVzdCAqdG8sCj4gICAJfQo+ICAgCj4gICAJaW50ZWxfcmluZ19hZHZhbmNlKHRvLCBjcyk7Cj4g
KwlyZXR1cm4gMDsKPiArfQo+ICsKPiArc3RhdGljIGludAo+ICtlbWl0X3NlbWFwaG9yZV93YWl0
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnRvLAo+ICsJCSAgICBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpm
cm9tLAo+ICsJCSAgICBnZnBfdCBnZnApCj4gK3sKPiArCS8qIEp1c3QgZW1pdCB0aGUgZmlyc3Qg
c2VtYXBob3JlIHdlIHNlZSBhcyByZXF1ZXN0IHNwYWNlIGlzIGxpbWl0ZWQuICovCj4gKwlpZiAo
YWxyZWFkeV9idXN5d2FpdGluZyh0bykgJiBmcm9tLT5lbmdpbmUtPm1hc2spCj4gKwkJZ290byBh
d2FpdF9mZW5jZTsKPiArCj4gKwlpZiAoaTkxNV9yZXF1ZXN0X2F3YWl0X3N0YXJ0KHRvLCBmcm9t
KSA8IDApCj4gKwkJZ290byBhd2FpdF9mZW5jZTsKPiArCj4gKwkvKiBPbmx5IHN1Ym1pdCBvdXIg
c3Bpbm5lciBhZnRlciB0aGUgc2lnbmFsZXIgaXMgcnVubmluZyEgKi8KPiArCWlmIChfX2F3YWl0
X2V4ZWN1dGlvbih0bywgZnJvbSwgTlVMTCwgZ2ZwKSkKPiArCQlnb3RvIGF3YWl0X2ZlbmNlOwo+
ICsKPiArCWlmIChfX2VtaXRfc2VtYXBob3JlX3dhaXQodG8sIGZyb20sIGZyb20tPmZlbmNlLnNl
cW5vKSkKPiArCQlnb3RvIGF3YWl0X2ZlbmNlOwo+ICsKPiAgIAl0by0+c2NoZWQuc2VtYXBob3Jl
cyB8PSBmcm9tLT5lbmdpbmUtPm1hc2s7Cj4gICAJdG8tPnNjaGVkLmZsYWdzIHw9IEk5MTVfU0NI
RURfSEFTX1NFTUFQSE9SRV9DSEFJTjsKPiAgIAlyZXR1cm4gMDsKPiBAQCAtOTkzLDYgKzEwMDcs
NTggQEAgaTkxNV9yZXF1ZXN0X2F3YWl0X2RtYV9mZW5jZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSwgc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCj4gICAJcmV0dXJuIDA7Cj4gICB9Cj4gICAKPiAr
c3RhdGljIGJvb2wgaW50ZWxfdGltZWxpbmVfc3luY19oYXNfc3RhcnQoc3RydWN0IGludGVsX3Rp
bWVsaW5lICp0bCwKPiArCQkJCQkgIHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQo+ICt7Cj4gKwly
ZXR1cm4gX19pbnRlbF90aW1lbGluZV9zeW5jX2lzX2xhdGVyKHRsLAo+ICsJCQkJCSAgICAgIGZl
bmNlLT5jb250ZXh0LAo+ICsJCQkJCSAgICAgIGZlbmNlLT5zZXFubyAtIDEpOwo+ICt9Cj4gKwo+
ICtzdGF0aWMgaW50IGludGVsX3RpbWVsaW5lX3N5bmNfc2V0X3N0YXJ0KHN0cnVjdCBpbnRlbF90
aW1lbGluZSAqdGwsCj4gKwkJCQkJIGNvbnN0IHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQo+ICt7
Cj4gKwlyZXR1cm4gX19pbnRlbF90aW1lbGluZV9zeW5jX3NldCh0bCwgZmVuY2UtPmNvbnRleHQs
IGZlbmNlLT5zZXFubyAtIDEpOwo+ICt9Cj4gKwo+ICtzdGF0aWMgaW50Cj4gK19faTkxNV9yZXF1
ZXN0X2F3YWl0X2V4ZWN1dGlvbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICp0bywKPiArCQkJICAgICAg
IHN0cnVjdCBpOTE1X3JlcXVlc3QgKmZyb20sCj4gKwkJCSAgICAgICB2b2lkICgqaG9vaykoc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcnEsCj4gKwkJCQkJICAgIHN0cnVjdCBkbWFfZmVuY2UgKnNpZ25h
bCkpCj4gK3sKPiArCWJvb2wgaGFzX3N5bmM7Cj4gKwlpbnQgZXJyOwo+ICsKPiArCS8qIFN1Ym1p
dCBib3RoIHJlcXVlc3RzIGF0IHRoZSBzYW1lIHRpbWUgKi8KPiArCWVyciA9IF9fYXdhaXRfZXhl
Y3V0aW9uKHRvLCBmcm9tLCBob29rLCBJOTE1X0ZFTkNFX0dGUCk7Cj4gKwlpZiAoZXJyKQo+ICsJ
CXJldHVybiBlcnI7Cj4gKwo+ICsJaWYgKCF0by0+ZW5naW5lLT5zY2hlZHVsZSkKPiArCQlyZXR1
cm4gMDsKPiArCj4gKwkvKiBTcXVhc2ggcmVwZWF0ZWQgZGVwZW5lbmRpY2VzIHRvIHRoZSBzYW1l
IHRpbWVsaW5lcyAqLwo+ICsJaWYgKGludGVsX3RpbWVsaW5lX3N5bmNfaGFzX3N0YXJ0KGk5MTVf
cmVxdWVzdF90aW1lbGluZSh0byksCj4gKwkJCQkJICAmZnJvbS0+ZmVuY2UpKQo+ICsJCXJldHVy
biAwOwo+ICsKPiArCS8qIEVuc3VyZSBib3RoIHN0YXJ0IHRvZ2V0aGVyIGFmdGVyIGFsbCBzZW1h
cGhvcmVzIGluIHNpZ25hbCAqLwo+ICsJaWYgKGZyb20tPnNjaGVkLnNlbWFwaG9yZXMgJiYgIWhh
c19zeW5jKSB7Cj4gKwkJZXJyID1fX2VtaXRfc2VtYXBob3JlX3dhaXQodG8sIGZyb20sIGZyb20t
PmZlbmNlLnNlcW5vIC0gMSk7CgpGb3Jnb3QgdG8gZ2l0IGFkZCBzb21ldGhpbmc/IGhhc19zeW5j
IGlzIHVuaW5pdGlhbGl6ZWQuCgpSZWdhcmRzLAoKVHZydGtvCgo+ICsJCWlmIChlcnIpCj4gKwkJ
CXJldHVybiBlcnI7Cj4gKwl9Cj4gKwo+ICsJLyogQ291cGxlIHRoZSBkZXBlbmRlbmN5IHRyZWUg
Zm9yIFBJIG9uIHRoaXMgZXhwb3NlZCB0by0+ZmVuY2UgKi8KPiArCWVyciA9IGk5MTVfc2NoZWRf
bm9kZV9hZGRfZGVwZW5kZW5jeSgmdG8tPnNjaGVkLCAmZnJvbS0+c2NoZWQpOwo+ICsJaWYgKGVy
ciA8IDApCj4gKwkJcmV0dXJuIGVycjsKPiArCj4gKwlyZXR1cm4gaW50ZWxfdGltZWxpbmVfc3lu
Y19zZXRfc3RhcnQoaTkxNV9yZXF1ZXN0X3RpbWVsaW5lKHRvKSwKPiArCQkJCQkgICAgICZmcm9t
LT5mZW5jZSk7Cj4gK30KPiArCj4gICBpbnQKPiAgIGk5MTVfcmVxdWVzdF9hd2FpdF9leGVjdXRp
b24oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsCj4gICAJCQkgICAgIHN0cnVjdCBkbWFfZmVuY2Ug
KmZlbmNlLAo+IEBAIC0xMDI2LDggKzEwOTIsNyBAQCBpOTE1X3JlcXVlc3RfYXdhaXRfZXhlY3V0
aW9uKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAo+ICAgCQlpZiAoZG1hX2ZlbmNlX2lzX2k5MTUo
ZmVuY2UpKQo+ICAgCQkJcmV0ID0gX19pOTE1X3JlcXVlc3RfYXdhaXRfZXhlY3V0aW9uKHJxLAo+
ICAgCQkJCQkJCSAgICAgdG9fcmVxdWVzdChmZW5jZSksCj4gLQkJCQkJCQkgICAgIGhvb2ssCj4g
LQkJCQkJCQkgICAgIEk5MTVfRkVOQ0VfR0ZQKTsKPiArCQkJCQkJCSAgICAgaG9vayk7Cj4gICAJ
CWVsc2UKPiAgIAkJCXJldCA9IGk5MTVfc3dfZmVuY2VfYXdhaXRfZG1hX2ZlbmNlKCZycS0+c3Vi
bWl0LCBmZW5jZSwKPiAgIAkJCQkJCQkgICAgSTkxNV9GRU5DRV9USU1FT1VULAo+IGRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwo+IGluZGV4IGFkNmZmNTJiYzMxNi4uMDBmNWQxMDdm
MmI3IDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMK
PiArKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCj4gQEAgLTQ5Miw3
ICs0OTIsNiBAQCB2b2lkIGk5MTVfc2NoZWRfbm9kZV9maW5pKHN0cnVjdCBpOTE1X3NjaGVkX25v
ZGUgKm5vZGUpCj4gICAJICogc28gd2UgbWF5IGJlIGNhbGxlZCBvdXQtb2Ytb3JkZXIuCj4gICAJ
ICovCj4gICAJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKGRlcCwgdG1wLCAmbm9kZS0+c2lnbmFs
ZXJzX2xpc3QsIHNpZ25hbF9saW5rKSB7Cj4gLQkJR0VNX0JVR19PTighbm9kZV9zaWduYWxlZChk
ZXAtPnNpZ25hbGVyKSk7Cj4gICAJCUdFTV9CVUdfT04oIWxpc3RfZW1wdHkoJmRlcC0+ZGZzX2xp
bmspKTsKPiAgIAo+ICAgCQlsaXN0X2RlbCgmZGVwLT53YWl0X2xpbmspOwo+IApfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBs
aXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVz
a3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

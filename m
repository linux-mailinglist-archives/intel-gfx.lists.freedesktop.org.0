Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6EE288241E
	for <lists+intel-gfx@lfdr.de>; Mon,  5 Aug 2019 19:39:51 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id BB93A6E11B;
	Mon,  5 Aug 2019 17:39:49 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 6697C6E11B
 for <intel-gfx@lists.freedesktop.org>; Mon,  5 Aug 2019 17:39:48 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17895887-1500050 
 for multiple; Mon, 05 Aug 2019 18:39:33 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  5 Aug 2019 18:39:32 +0100
Message-Id: <20190805173932.20746-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
In-Reply-To: <20190805094333.17600-1-chris@chris-wilson.co.uk>
References: <20190805094333.17600-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3] drm/i915: Defer final intel_wakeref_put to
 process context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgd2UgbmVlZCB0byBhY3F1aXJlIGEgbXV0ZXggdG8gc2VyaWFsaXNlIHRoZSBmaW5hbAppbnRl
bF93YWtlcmVmX3B1dCwgd2UgbmVlZCB0byBlbnN1cmUgdGhhdCB3ZSBhcmUgaW4gcHJvY2VzcyBj
b250ZXh0IGF0CnRoYXQgdGltZS4gSG93ZXZlciwgd2Ugd2FudCB0byBhbGxvdyBvcGVyYXRpb24g
b24gdGhlIGludGVsX3dha2VyZWYgZnJvbQppbnNpZGUgdGltZXIgYW5kIG90aGVyIGhhcmRpcnEg
Y29udGV4dCwgd2hpY2ggbWVhbnMgdGhhdCBuZWVkIHRvIGRlZmVyCnRoYXQgZmluYWwgcHV0IHRv
IGEgd29ya3F1ZXVlLgoKSW5zaWRlIHRoZSBmaW5hbCB3YWtlcmVmIHB1dHMsIHdlIGFyZSBzYWZl
IHRvIG9wZXJhdGUgaW4gYW55IGNvbnRleHQsIGFzCndlIGFyZSBzaW1wbHkgbWFya2luZyB1cCB0
aGUgSFcgYW5kIHN0YXRlIHRyYWNraW5nIGZvciB0aGUgcG90ZW50aWFsCnNsZWVwLiBJdCdzIG9u
bHkgdGhlIHNlcmlhbGlzYXRpb24gd2l0aCB0aGUgcG90ZW50aWFsIHNsZWVwaW5nIGdldHRpbmcK
dGhhdCByZXF1aXJlcyBjYXJlZnVsIHdhaXQgYXZvaWRhbmNlLiBUaGlzIGFsbG93cyB1cyB0byBy
ZXRhaW4gdGhlCmltbWVkaWF0ZSBwcm9jZXNzaW5nIGFzIGJlZm9yZSAod2Ugb25seSBuZWVkIHRv
IHNsZWVwIG92ZXIgdGhlIHNhbWUKcmFjZXMgYXMgdGhlIGN1cnJlbnQgbXV0ZXhfbG9jaykuCgp2
MjogQWRkIGEgc2VsZnRlc3QgdG8gZW5zdXJlIHdlIGV4ZXJjaXNlIHRoZSBjb2RlIHdoaWxlIGxv
Y2tkZXAgd2F0Y2hlcy4KdjM6IFRoYXQgdGVzdCB3YXMgZXh0cmVtZWx5IGxvdWQgYW5kIGNvbXBs
YWluZWQgYWJvdXQgbWFueSB0aGluZ3MhCgpCdWd6aWxsYTogaHR0cHM6Ly9idWdzLmZyZWVkZXNr
dG9wLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTExMjk1CkZpeGVzOiAxODM5ODkwNGNhOWUgKCJkcm0v
aTkxNTogT25seSByZWNvdmVyIGFjdGl2ZSBlbmdpbmVzIikKRml4ZXM6IDUxZmJkOGRlODdkYyAo
ImRybS9pOTE1L3BtdTogQXRvbWljYWxseSBhY3F1aXJlIHRoZSBndF9wbSB3YWtlcmVmIikKU2ln
bmVkLW9mZi1ieTogQ2hyaXMgV2lsc29uIDxjaHJpc0BjaHJpcy13aWxzb24uY28udWs+CkNjOiBU
dnJ0a28gVXJzdWxpbiA8dHZydGtvLnVyc3VsaW5AaW50ZWwuY29tPgpDYzogTWlrYSBLdW9wcGFs
YSA8bWlrYS5rdW9wcGFsYUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX3BtLmMgICAgICAgIHwgMTMgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmVfcG0uYyAgICAgfCAzOCArKystLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmggICAgIHwgMTggKystLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3QvaW50ZWxfZ3RfcG0uYyAgICAgICAgIHwgMjggKysrLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9ndF9wbS5oICAgICAgICAgfCAyMiArKysrLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgICAgICAgIHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5jICAgICB8IDI4ICsrKysrKwogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmggICAgIHwgMTQgKysrCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYyAgfCA4MyArKysrKysrKysrKysrKysrKysKIC4u
Li9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYyB8ICA0ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYyAgICAgICAgICAgfCAgNCArCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jICAgICAgICAgICAgICAgfCAyNiArLS0tLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYyAgICAgICAgICB8IDg3ICsrKysrKysrKysr
KysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaCAgICAgICAgICB8
IDYyICsrKysrKysrLS0tLS0KIC4uLi9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0
ZXN0cy5oICB8ICA1ICstCiAxNiBmaWxlcyBjaGFuZ2VkLCAzMDYgaW5zZXJ0aW9ucygrKSwgMTMx
IGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2VuZ2luZS5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9k
cm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYwoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5
MTVfZ2VtX3BtLmMKaW5kZXggNzI5MjI3MDNhZjQ5Li4xN2UzNjE4MjQxYzUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9wbS5jCkBAIC0xMzAsNyArMTMwLDkgQEAgc3RhdGljIGJv
b2wgc3dpdGNoX3RvX2tlcm5lbF9jb250ZXh0X3N5bmMoc3RydWN0IGludGVsX2d0ICpndCkKIAkJ
fQogCX0gd2hpbGUgKGk5MTVfcmV0aXJlX3JlcXVlc3RzKGd0LT5pOTE1KSAmJiByZXN1bHQpOwog
Ci0JR0VNX0JVR19PTihndC0+YXdha2UpOworCWlmIChpbnRlbF9ndF9wbV93YWl0X2Zvcl9pZGxl
KGd0KSkKKwkJcmVzdWx0ID0gZmFsc2U7CisKIAlyZXR1cm4gcmVzdWx0OwogfQogCkBAIC0xNjEs
MTMgKzE2Myw2IEBAIHZvaWQgaTkxNV9nZW1fc3VzcGVuZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqaTkxNSkKIAogCW11dGV4X3VubG9jaygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAKLQkv
KgotCSAqIEFzc2VydCB0aGF0IHdlIHN1Y2Nlc3NmdWxseSBmbHVzaGVkIGFsbCB0aGUgd29yayBh
bmQKLQkgKiByZXNldCB0aGUgR1BVIGJhY2sgdG8gaXRzIGlkbGUsIGxvdyBwb3dlciBzdGF0ZS4K
LQkgKi8KLQlHRU1fQlVHX09OKGk5MTUtPmd0LmF3YWtlKTsKLQlmbHVzaF93b3JrKCZpOTE1LT5n
ZW0uaWRsZV93b3JrKTsKLQogCWNhbmNlbF9kZWxheWVkX3dvcmtfc3luYygmaTkxNS0+Z3QuaGFu
Z2NoZWNrLndvcmspOwogCiAJaTkxNV9nZW1fZHJhaW5fZnJlZWRfb2JqZWN0cyhpOTE1KTsKQEAg
LTI0NCw4ICsyMzksNiBAQCB2b2lkIGk5MTVfZ2VtX3Jlc3VtZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSkKIHsKIAlHRU1fVFJBQ0UoIlxuIik7CiAKLQlXQVJOX09OKGk5MTUtPmd0LmF3
YWtlKTsKLQogCW11dGV4X2xvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCWludGVsX3Vu
Y29yZV9mb3JjZXdha2VfZ2V0KCZpOTE1LT51bmNvcmUsIEZPUkNFV0FLRV9BTEwpOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IGE5MWYxNTcxN2NjMS4u
NDE0YjBkYmIzYTIwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9l
bmdpbmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3Mu
YwpAQCAtMTY3Miw1ICsxNjcyLDYgQEAgaW50ZWxfZW5naW5lX2ZpbmRfYWN0aXZlX3JlcXVlc3Qo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogfQogCiAjaWYgSVNfRU5BQkxFRChDT05G
SUdfRFJNX0k5MTVfU0VMRlRFU1QpCisjaW5jbHVkZSAic2VsZnRlc3RfZW5naW5lLmMiCiAjaW5j
bHVkZSAic2VsZnRlc3RfZW5naW5lX2NzLmMiCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX3BtLmMKaW5kZXggMDMzNjIwNDk4OGQ2Li42YjE1ZTMzMzVkZDYgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCkBAIC0zNywyOCArMzcs
NiBAQCBzdGF0aWMgaW50IF9fZW5naW5lX3VucGFyayhzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2Yp
CiAJcmV0dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3BtX2dldChzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCi17Ci0JaW50ZWxfd2FrZXJlZl9nZXQoJmVuZ2luZS0+aTkxNS0+
cnVudGltZV9wbSwgJmVuZ2luZS0+d2FrZXJlZiwgX19lbmdpbmVfdW5wYXJrKTsKLX0KLQotdm9p
ZCBpbnRlbF9lbmdpbmVfcGFyayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCi17Ci0J
LyoKLQkgKiBXZSBhcmUgY29tbWl0dGVkIG5vdyB0byBwYXJraW5nIHRoaXMgZW5naW5lLCBtYWtl
IHN1cmUgdGhlcmUKLQkgKiB3aWxsIGJlIG5vIG1vcmUgaW50ZXJydXB0cyBhcnJpdmluZyBsYXRl
ciBhbmQgdGhlIGVuZ2luZQotCSAqIGlzIHRydWx5IGlkbGUuCi0JICovCi0JaWYgKHdhaXRfZm9y
KGludGVsX2VuZ2luZV9pc19pZGxlKGVuZ2luZSksIDEwKSkgewotCQlzdHJ1Y3QgZHJtX3ByaW50
ZXIgcCA9IGRybV9kZWJ1Z19wcmludGVyKF9fZnVuY19fKTsKLQotCQlkZXZfZXJyKGVuZ2luZS0+
aTkxNS0+ZHJtLmRldiwKLQkJCSIlcyBpcyBub3QgaWRsZSBiZWZvcmUgcGFya2luZ1xuIiwKLQkJ
CWVuZ2luZS0+bmFtZSk7Ci0JCWludGVsX2VuZ2luZV9kdW1wKGVuZ2luZSwgJnAsIE5VTEwpOwot
CX0KLX0KLQogc3RhdGljIGJvb2wgc3dpdGNoX3RvX2tlcm5lbF9jb250ZXh0KHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKQEAgLTEz
NiwxMiArMTE0LDE4IEBAIHN0YXRpYyBpbnQgX19lbmdpbmVfcGFyayhzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YpCiAJcmV0dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3BtX3B1dChzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCi17Ci0JaW50ZWxfd2FrZXJlZl9wdXQoJmVuZ2lu
ZS0+aTkxNS0+cnVudGltZV9wbSwgJmVuZ2luZS0+d2FrZXJlZiwgX19lbmdpbmVfcGFyayk7Ci19
CitzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX3dha2VyZWZfb3BzIHdmX29wcyA9IHsKKwkuZ2V0
ID0gX19lbmdpbmVfdW5wYXJrLAorCS5wdXQgPSBfX2VuZ2luZV9wYXJrLAorfTsKIAogdm9pZCBp
bnRlbF9lbmdpbmVfaW5pdF9fcG0oc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogewot
CWludGVsX3dha2VyZWZfaW5pdCgmZW5naW5lLT53YWtlcmVmKTsKKwlzdHJ1Y3QgaW50ZWxfcnVu
dGltZV9wbSAqcnBtID0gJmVuZ2luZS0+aTkxNS0+cnVudGltZV9wbTsKKworCWludGVsX3dha2Vy
ZWZfaW5pdCgmZW5naW5lLT53YWtlcmVmLCBycG0sICZ3Zl9vcHMpOwogfQorCisjaWYgSVNfRU5B
QkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRFU1QpCisjaW5jbHVkZSAic2VsZnRlc3RfZW5naW5l
X3BtLmMiCisjZW5kaWYKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2VuZ2luZV9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3BtLmgK
aW5kZXggMDE1YWM3MmQ3YWQwLi43MzljNTBmZWZjZWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV9wbS5oCkBAIC0xMCwyNCArMTAsMjYgQEAKICNpbmNsdWRlICJpbnRl
bF9lbmdpbmVfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF93YWtlcmVmLmgiCiAKLXN0cnVjdCBk
cm1faTkxNV9wcml2YXRlOwotCi12b2lkIGludGVsX2VuZ2luZV9wbV9nZXQoc3RydWN0IGludGVs
X2VuZ2luZV9jcyAqZW5naW5lKTsKLXZvaWQgaW50ZWxfZW5naW5lX3BtX3B1dChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpOwotCiBzdGF0aWMgaW5saW5lIGJvb2wKIGludGVsX2VuZ2lu
ZV9wbV9pc19hd2FrZShjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJ
cmV0dXJuIGludGVsX3dha2VyZWZfaXNfYWN0aXZlKCZlbmdpbmUtPndha2VyZWYpOwogfQogCi1z
dGF0aWMgaW5saW5lIGJvb2wKLWludGVsX2VuZ2luZV9wbV9nZXRfaWZfYXdha2Uoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQorc3RhdGljIGlubGluZSB2b2lkIGludGVsX2VuZ2luZV9w
bV9nZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQoreworCWludGVsX3dha2VyZWZf
Z2V0KCZlbmdpbmUtPndha2VyZWYpOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wgaW50ZWxfZW5n
aW5lX3BtX2dldF9pZl9hd2FrZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJ
cmV0dXJuIGludGVsX3dha2VyZWZfZ2V0X2lmX2FjdGl2ZSgmZW5naW5lLT53YWtlcmVmKTsKIH0K
IAotdm9pZCBpbnRlbF9lbmdpbmVfcGFyayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
Oworc3RhdGljIGlubGluZSB2b2lkIGludGVsX2VuZ2luZV9wbV9wdXQoc3RydWN0IGludGVsX2Vu
Z2luZV9jcyAqZW5naW5lKQoreworCWludGVsX3dha2VyZWZfcHV0KCZlbmdpbmUtPndha2VyZWYp
OworfQogCiB2b2lkIGludGVsX2VuZ2luZV9pbml0X19wbShzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9n
dF9wbS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uYwppbmRleCA2Yzg5
NzAyNzFhN2YuLjEzNjNlMDY5ZWM4MyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfcG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF9w
bS5jCkBAIC0xNyw3ICsxNyw3IEBAIHN0YXRpYyB2b2lkIHBtX25vdGlmeShzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqaTkxNSwgaW50IHN0YXRlKQogCWJsb2NraW5nX25vdGlmaWVyX2NhbGxfY2hh
aW4oJmk5MTUtPmd0LnBtX25vdGlmaWNhdGlvbnMsIHN0YXRlLCBpOTE1KTsKIH0KIAotc3RhdGlj
IGludCBpbnRlbF9ndF91bnBhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQorc3RhdGljIGlu
dCBfX2d0X3VucGFyayhzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7CiAJc3RydWN0IGludGVs
X2d0ICpndCA9IGNvbnRhaW5lcl9vZih3ZiwgdHlwZW9mKCpndCksIHdha2VyZWYpOwogCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gZ3QtPmk5MTU7CkBAIC01MywxNCArNTMsNyBAQCBz
dGF0aWMgaW50IGludGVsX2d0X3VucGFyayhzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiAJcmV0
dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfZ3RfcG1fZ2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCi17
Ci0Jc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZndC0+aTkxNS0+cnVudGltZV9wbTsK
LQotCWludGVsX3dha2VyZWZfZ2V0KHJwbSwgJmd0LT53YWtlcmVmLCBpbnRlbF9ndF91bnBhcmsp
OwotfQotCi1zdGF0aWMgaW50IGludGVsX2d0X3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndm
KQorc3RhdGljIGludCBfX2d0X3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogewogCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0KIAkJY29udGFpbmVyX29mKHdmLCB0eXBlb2Yo
Kmk5MTUpLCBndC53YWtlcmVmKTsKQEAgLTc0LDIyICs2NywyNSBAQCBzdGF0aWMgaW50IGludGVs
X2d0X3Bhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogCWlmIChJTlRFTF9HRU4oaTkxNSkg
Pj0gNikKIAkJZ2VuNl9ycHNfaWRsZShpOTE1KTsKIAorCS8qIEV2ZXJ5dGhpbmcgc3dpdGNoZWQg
b2ZmLCBmbHVzaCBhbnkgcmVzaWR1YWwgaW50ZXJydXB0IGp1c3QgaW4gY2FzZSAqLworCWludGVs
X3N5bmNocm9uaXplX2lycShpOTE1KTsKKwogCUdFTV9CVUdfT04oIXdha2VyZWYpOwogCWludGVs
X2Rpc3BsYXlfcG93ZXJfcHV0KGk5MTUsIFBPV0VSX0RPTUFJTl9HVF9JUlEsIHdha2VyZWYpOwog
CiAJcmV0dXJuIDA7CiB9CiAKLXZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAq
Z3QpCi17Ci0Jc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSA9ICZndC0+aTkxNS0+cnVudGlt
ZV9wbTsKLQotCWludGVsX3dha2VyZWZfcHV0KHJwbSwgJmd0LT53YWtlcmVmLCBpbnRlbF9ndF9w
YXJrKTsKLX0KK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaW50ZWxfd2FrZXJlZl9vcHMgd2Zfb3BzID0g
eworCS5nZXQgPSBfX2d0X3VucGFyaywKKwkucHV0ID0gX19ndF9wYXJrLAorCS5mbGFncyA9IElO
VEVMX1dBS0VSRUZfUFVUX0FTWU5DLAorfTsKIAogdm9pZCBpbnRlbF9ndF9wbV9pbml0X2Vhcmx5
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7Ci0JaW50ZWxfd2FrZXJlZl9pbml0KCZndC0+d2FrZXJl
Zik7CisJaW50ZWxfd2FrZXJlZl9pbml0KCZndC0+d2FrZXJlZiwgJmd0LT5pOTE1LT5ydW50aW1l
X3BtLCAmd2Zfb3BzKTsKKwogCUJMT0NLSU5HX0lOSVRfTk9USUZJRVJfSEVBRCgmZ3QtPnBtX25v
dGlmaWNhdGlvbnMpOwogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9ndF9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaAppbmRl
eCBlOGExOGQ0YjI3YzkuLjU3NjMzZjUzOGRkYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfZ3RfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9ndF9wbS5oCkBAIC0xNywxNCArMTcsMzIgQEAgZW51bSB7CiAJSU5URUxfR1RfUEFSSywKIH07
CiAKLXZvaWQgaW50ZWxfZ3RfcG1fZ2V0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwotdm9pZCBpbnRl
bF9ndF9wbV9wdXQoc3RydWN0IGludGVsX2d0ICpndCk7CitzdGF0aWMgaW5saW5lIGJvb2wKK2lu
dGVsX2d0X3BtX2lzX2F3YWtlKGNvbnN0IHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJcmV0dXJu
IGludGVsX3dha2VyZWZfaXNfYWN0aXZlKCZndC0+d2FrZXJlZik7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBpbnRlbF9ndF9wbV9nZXQoc3RydWN0IGludGVsX2d0ICpndCkKK3sKKwlpbnRlbF93
YWtlcmVmX2dldCgmZ3QtPndha2VyZWYpOworfQogCiBzdGF0aWMgaW5saW5lIGJvb2wgaW50ZWxf
Z3RfcG1fZ2V0X2lmX2F3YWtlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7CiAJcmV0dXJuIGludGVs
X3dha2VyZWZfZ2V0X2lmX2FjdGl2ZSgmZ3QtPndha2VyZWYpOwogfQogCitzdGF0aWMgaW5saW5l
IHZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJaW50ZWxfd2Fr
ZXJlZl9wdXQoJmd0LT53YWtlcmVmKTsKK30KKworc3RhdGljIGlubGluZSBpbnQgaW50ZWxfZ3Rf
cG1fd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXJldHVybiBpbnRlbF93
YWtlcmVmX3dhaXRfZm9yX2lkbGUoJmd0LT53YWtlcmVmKTsKK30KKwogdm9pZCBpbnRlbF9ndF9w
bV9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogCiB2b2lkIGludGVsX2d0X3Nhbml0
aXplKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGJvb2wgZm9yY2UpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9scmMuYwppbmRleCAyMzJmNDBmY2I0OTAuLjFhMDExNjc1MWQxOSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTEzOSw2ICsxMzksNyBAQAogI2luY2x1ZGUgImk5MTVf
dmdwdS5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUgImludGVsX2d0
LmgiCisjaW5jbHVkZSAiaW50ZWxfZ3RfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9scmNfcmVnLmgi
CiAjaW5jbHVkZSAiaW50ZWxfbW9jcy5oIgogI2luY2x1ZGUgImludGVsX3Jlc2V0LmgiCkBAIC01
NTYsNiArNTU3LDcgQEAgZXhlY2xpc3RzX3NjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxLCBpbnQgaWR4KQogCQlpbnRlbF9jb250ZXh0X2dldChjZSk7CiAJCWNlLT5pbmZsaWdodCA9
IHJxLT5lbmdpbmU7CiAKKwkJaW50ZWxfZ3RfcG1fZ2V0KGNlLT5pbmZsaWdodC0+Z3QpOwogCQll
eGVjbGlzdHNfY29udGV4dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxF
X0lOKTsKIAkJaW50ZWxfZW5naW5lX2NvbnRleHRfaW4oY2UtPmluZmxpZ2h0KTsKIAl9CkBAIC01
ODgsNiArNTkwLDcgQEAgZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKIAlpZiAoIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQoY2UpKSB7CiAJCWludGVs
X2VuZ2luZV9jb250ZXh0X291dChjZS0+aW5mbGlnaHQpOwogCQlleGVjbGlzdHNfY29udGV4dF9z
dGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX09VVCk7CisJCWludGVsX2d0
X3BtX3B1dChjZS0+aW5mbGlnaHQtPmd0KTsKIAogCQkvKgogCQkgKiBJZiB0aGlzIGlzIHBhcnQg
b2YgYSB2aXJ0dWFsIGVuZ2luZSwgaXRzIG5leHQgcmVxdWVzdCBtYXkKQEAgLTI3MTksNyArMjcy
Miw2IEBAIHN0YXRpYyB1MzIgKmdlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfcmNzKHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJlcXVlc3QsIHUzMiAqY3MpCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcGFy
ayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJZGVsX3RpbWVyX3N5bmMoJmVu
Z2luZS0+ZXhlY2xpc3RzLnRpbWVyKTsKLQlpbnRlbF9lbmdpbmVfcGFyayhlbmdpbmUpOwogfQog
CiB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L3NlbGZ0ZXN0X2VuZ2luZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5mNjViMTE4ZTI2
MWQKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9l
bmdpbmUuYwpAQCAtMCwwICsxLDI4IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOCBJbnRlbCBDb3Jwb3JhdGlvbgorICov
CisKKyNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCisjaW5jbHVkZSAic2VsZnRlc3RfZW5naW5l
LmgiCisKK2ludCBpbnRlbF9lbmdpbmVfbGl2ZV9zZWxmdGVzdHMoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUpCit7CisJc3RhdGljIGludCAoKiBjb25zdCB0ZXN0c1tdKShzdHJ1Y3QgaW50
ZWxfZ3QgKikgPSB7CisJCWxpdmVfZW5naW5lX3BtX3NlbGZ0ZXN0cywKKwkJTlVMTCwKKwl9Owor
CXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7CisJdHlwZW9mKCp0ZXN0cykgKmZuOwor
CisJZm9yIChmbiA9IHRlc3RzOyAqZm47IGZuKyspIHsKKwkJaW50IGVycjsKKworCQllcnIgPSAo
KmZuKShndCk7CisJCWlmIChlcnIpCisJCQlyZXR1cm4gZXJyOworCX0KKworCXJldHVybiAwOwor
fQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuaApuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmFiMzJkMDllYzVhMQotLS0gL2Rldi9udWxsCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5oCkBAIC0wLDAgKzEs
MTQgQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorICoKKyAqIENv
cHlyaWdodCDCqSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBTRUxGVEVT
VF9FTkdJTkVfSAorI2RlZmluZSBTRUxGVEVTVF9FTkdJTkVfSAorCitzdHJ1Y3QgaW50ZWxfZ3Q7
CisKK2ludCBsaXZlX2VuZ2luZV9wbV9zZWxmdGVzdHMoc3RydWN0IGludGVsX2d0ICpndCk7CisK
KyNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0uYwpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjc1YzE5NzYxMjcwNQotLS0g
L2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZV9w
bS5jCkBAIC0wLDAgKzEsODMgQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BM
LTIuMAorICoKKyAqIENvcHlyaWdodCDCqSAyMDE4IEludGVsIENvcnBvcmF0aW9uCisgKi8KKwor
I2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKKyNpbmNsdWRlICJzZWxmdGVzdF9lbmdpbmUuaCIK
KyNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X2F0b21pYy5oIgorCitzdGF0aWMgaW50IGxpdmVfZW5n
aW5lX3BtKHZvaWQgKmFyZykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOworCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsKKwor
CS8qCisJICogQ2hlY2sgd2UgY2FuIGNhbGwgaW50ZWxfZW5naW5lX3BtX3B1dCBmcm9tIGFueSBj
b250ZXh0LiBObworCSAqIGZhaWx1cmVzIGFyZSByZXBvcnRlZCBkaXJlY3RseSwgYnV0IGlmIHdl
IG1lc3MgdXAgbG9ja2RlcCBzaG91bGQKKwkgKiB0ZWxsIHVzLgorCSAqLworCWlmIChpbnRlbF9n
dF9wbV93YWl0X2Zvcl9pZGxlKGd0KSkgeworCQlwcl9lcnIoIlVuYWJsZSB0byBmbHVzaCBHVCBw
bSBiZWZvcmUgdGVzdFxuIik7CisJCXJldHVybiAtRUJVU1k7CisJfQorCisJR0VNX0JVR19PTihp
bnRlbF9ndF9wbV9pc19hd2FrZShndCkpOworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0LT5p
OTE1LCBpZCkgeworCQljb25zdCB0eXBlb2YoKmlndF9hdG9taWNfcGhhc2VzKSAqcDsKKworCQlm
b3IgKHAgPSBpZ3RfYXRvbWljX3BoYXNlczsgcC0+bmFtZTsgcCsrKSB7CisJCQkvKgorCQkJICog
QWNxdWlzaXRpb24gaXMgYWx3YXlzIHN5bmNocm9ub3VzLCBleGNlcHQgaWYgd2UKKwkJCSAqIGtu
b3cgdGhhdCB0aGUgZW5naW5lIGlzIGFscmVhZHkgYXdhbGUsIGluIHdoaWNoCisJCQkgKiB3ZSBz
aG91bGQgdXNlIGludGVsX2VuZ2luZV9wbV9nZXRfaWZfYXdha2UoKSB0bworCQkJICogYXRvbWlj
YWxseSBncmFiIHRoZSB3YWtlcmVmLgorCQkJICoKKwkJCSAqIEluIHByYWN0aWNlLAorCQkJICog
ICAgaW50ZWxfZW5naW5lX3BtX2dldCgpOworCQkJICogICAgaW50ZWxfZW5naW5lX3BtX3B1dCgp
OworCQkJICogb2NjdXJzIGluIG9uZSB0aHJlYWQsIHdoaWxlIHNpbXVsdGFuZW91c2x5CisJCQkg
KiAgICBpbnRlbF9lbmdpbmVfcG1fZ2V0X2lmX2F3YWtlKCk7CisJCQkgKiAgICBpbnRlbF9lbmdp
bmVfcG1fcHV0KCk7CisJCQkgKiBvY2N1cnMgaW4gYXRvbWljIGNvbnRleHQgaW4gYW5vdGhlci4K
KwkJCSAqLworCQkJR0VNX0JVR19PTihpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoZW5naW5lKSk7
CisJCQlpbnRlbF9lbmdpbmVfcG1fZ2V0KGVuZ2luZSk7CisKKwkJCXAtPmNyaXRpY2FsX3NlY3Rp
b25fYmVnaW4oKTsKKwkJCWlmICghaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZShlbmdpbmUp
KQorCQkJCXByX2VycigiaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZSglcykgZmFpbGVkIHVu
ZGVyICVzXG4iLAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIHAtPm5hbWUpOworCQkJZWxzZQor
CQkJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKKwkJCWludGVsX2VuZ2luZV9wbV9wdXQo
ZW5naW5lKTsKKwkJCXAtPmNyaXRpY2FsX3NlY3Rpb25fZW5kKCk7CisKKwkJCS8qIGVuZ2luZSB3
YWtlcmVmIGlzIHN5bmMgKGluc3RhbnQpICovCisJCQlpZiAoaW50ZWxfZW5naW5lX3BtX2lzX2F3
YWtlKGVuZ2luZSkpIHsKKwkJCQlwcl9lcnIoIiVzIGlzIHN0aWxsIGF3YWtlIGFmdGVyIGZsdXNo
aW5nIHBtXG4iLAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQkJCXJldHVybiAtRUlOVkFM
OworCQkJfQorCisJCQkvKiBndCB3YWtlcmVmIGlzIGFzeW5jIChkZWZlcnJlZCB0byB3b3JrcXVl
dWUpICovCisJCQlpZiAoaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZShndCkpIHsKKwkJCQlwcl9l
cnIoIkdUIGZhaWxlZCB0byBpZGxlXG4iKTsKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0KKwkJ
fQorCX0KKworCXJldHVybiAwOworfQorCitpbnQgbGl2ZV9lbmdpbmVfcG1fc2VsZnRlc3RzKHN0
cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3N1YnRlc3Qg
dGVzdHNbXSA9IHsKKwkJU1VCVEVTVChsaXZlX2VuZ2luZV9wbSksCisJfTsKKworCXJldHVybiBp
bnRlbF9ndF9saXZlX3N1YnRlc3RzKHRlc3RzLCBndCk7Cit9CmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwppbmRleCA0MTI4OTIwOTZkYWEu
LjQ5Nzg2ZTdhNjQ3YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfZ3VjX3N1Ym1pc3Npb24uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRl
bF9ndWNfc3VibWlzc2lvbi5jCkBAIC0yOSw2ICsyOSw3IEBACiAjaW5jbHVkZSAiZ3QvaW50ZWxf
Y29udGV4dC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUgImd0
L2ludGVsX2d0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIKICNpbmNsdWRlICJndC9p
bnRlbF9scmNfcmVnLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKIApAQCAt
NTM3LDYgKzUzOCw3IEBAIHN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzY2hlZHVsZV9pbihz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGlkeCkKIAlpZiAoIXJxLT5od19jb250ZXh0LT5p
bmZsaWdodCkKIAkJcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZTsKIAlpbnRl
bF9jb250ZXh0X2luZmxpZ2h0X2luYyhycS0+aHdfY29udGV4dCk7CisJaW50ZWxfZ3RfcG1fZ2V0
KHJxLT5lbmdpbmUtPmd0KTsKIAogCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKIH0KQEAg
LTU0OSw2ICs1NTEsNyBAQCBzdGF0aWMgdm9pZCBzY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVx
dWVzdCAqcnEpCiAJaWYgKCFpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2NvdW50KHJxLT5od19jb250
ZXh0KSkKIAkJcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gTlVMTDsKIAorCWludGVsX2d0X3Bt
X3B1dChycS0+ZW5naW5lLT5ndCk7CiAJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiB9CiAKQEAgLTEw
NzYsNyArMTA3OSw2IEBAIHN0YXRpYyB2b2lkIGd1Y19pbnRlcnJ1cHRzX3JlbGVhc2Uoc3RydWN0
IGludGVsX2d0ICpndCkKIAogc3RhdGljIHZvaWQgZ3VjX3N1Ym1pc3Npb25fcGFyayhzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7Ci0JaW50ZWxfZW5naW5lX3BhcmsoZW5naW5lKTsK
IAlpbnRlbF9lbmdpbmVfdW5waW5fYnJlYWRjcnVtYnNfaXJxKGVuZ2luZSk7CiAJZW5naW5lLT5m
bGFncyAmPSB+STkxNV9FTkdJTkVfTkVFRFNfQlJFQURDUlVNQl9UQVNLTEVUOwogfQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2RlYnVnZnMuYwppbmRleCA4OTUzMzM2ZjJhZTUuLmVhM2JhMjY2MmE5ZSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKQEAgLTM5LDYgKzM5LDcgQEAKICNpbmNs
dWRlICJkaXNwbGF5L2ludGVsX3Bzci5oIgogCiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2NvbnRl
eHQuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9ndF9wbS5oIgogI2luY2x1ZGUgImd0L2ludGVsX3Jl
c2V0LmgiCiAjaW5jbHVkZSAiZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKIApAQCAtMzY2
NSw2ICszNjY2LDkgQEAgaTkxNV9kcm9wX2NhY2hlc19zZXQodm9pZCAqZGF0YSwgdTY0IHZhbCkK
IAkJCQkJCSAgICAgSTkxNV9XQUlUX0xPQ0tFRCwKIAkJCQkJCSAgICAgTUFYX1NDSEVEVUxFX1RJ
TUVPVVQpOwogCisJCWlmIChyZXQgPT0gMCAmJiB2YWwgJiBEUk9QX0lETEUpCisJCQlyZXQgPSBp
bnRlbF9ndF9wbV93YWl0X2Zvcl9pZGxlKCZpOTE1LT5ndCk7CisKIAkJaWYgKHZhbCAmIERST1Bf
UkVUSVJFKQogCQkJaTkxNV9yZXRpcmVfcmVxdWVzdHMoaTkxNSk7CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbS5jCmluZGV4IGViMzRmM2U1YTc0ZC4uNWVhY2VjYmQ3MDAyIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZ2VtLmMKQEAgLTg5MywxOSArODkzLDYgQEAgdm9pZCBpOTE1X2dlbV9ydW50aW1lX3N1c3Bl
bmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQogfQogCi1zdGF0aWMgaW50IHdh
aXRfZm9yX2VuZ2luZXMoc3RydWN0IGludGVsX2d0ICpndCkKLXsKLQlpZiAod2FpdF9mb3IoaW50
ZWxfZW5naW5lc19hcmVfaWRsZShndCksIEk5MTVfSURMRV9FTkdJTkVTX1RJTUVPVVQpKSB7Ci0J
CWRldl9lcnIoZ3QtPmk5MTUtPmRybS5kZXYsCi0JCQkiRmFpbGVkIHRvIGlkbGUgZW5naW5lcywg
ZGVjbGFyaW5nIHdlZGdlZCFcbiIpOwotCQlHRU1fVFJBQ0VfRFVNUCgpOwotCQlpbnRlbF9ndF9z
ZXRfd2VkZ2VkKGd0KTsKLQkJcmV0dXJuIC1FSU87Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KIHN0
YXRpYyBsb25nCiB3YWl0X2Zvcl90aW1lbGluZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsCiAJCSAgIHVuc2lnbmVkIGludCBmbGFncywgbG9uZyB0aW1lb3V0KQpAQCAtOTUzLDI3ICs5
NDAsMjAgQEAgaW50IGk5MTVfZ2VtX3dhaXRfZm9yX2lkbGUoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUsCiAJCQkgICB1bnNpZ25lZCBpbnQgZmxhZ3MsIGxvbmcgdGltZW91dCkKIHsKIAkv
KiBJZiB0aGUgZGV2aWNlIGlzIGFzbGVlcCwgd2UgaGF2ZSBubyByZXF1ZXN0cyBvdXRzdGFuZGlu
ZyAqLwotCWlmICghUkVBRF9PTkNFKGk5MTUtPmd0LmF3YWtlKSkKKwlpZiAoIWludGVsX2d0X3Bt
X2lzX2F3YWtlKCZpOTE1LT5ndCkpCiAJCXJldHVybiAwOwogCi0JR0VNX1RSQUNFKCJmbGFncz0l
eCAoJXMpLCB0aW1lb3V0PSVsZCVzLCBhd2FrZT89JXNcbiIsCisJR0VNX1RSQUNFKCJmbGFncz0l
eCAoJXMpLCB0aW1lb3V0PSVsZCVzXG4iLAogCQkgIGZsYWdzLCBmbGFncyAmIEk5MTVfV0FJVF9M
T0NLRUQgPyAibG9ja2VkIiA6ICJ1bmxvY2tlZCIsCi0JCSAgdGltZW91dCwgdGltZW91dCA9PSBN
QVhfU0NIRURVTEVfVElNRU9VVCA/ICIgKGZvcmV2ZXIpIiA6ICIiLAotCQkgIHllc25vKGk5MTUt
Pmd0LmF3YWtlKSk7CisJCSAgdGltZW91dCwgdGltZW91dCA9PSBNQVhfU0NIRURVTEVfVElNRU9V
VCA/ICIgKGZvcmV2ZXIpIiA6ICIiKTsKIAogCXRpbWVvdXQgPSB3YWl0X2Zvcl90aW1lbGluZXMo
aTkxNSwgZmxhZ3MsIHRpbWVvdXQpOwogCWlmICh0aW1lb3V0IDwgMCkKIAkJcmV0dXJuIHRpbWVv
dXQ7CiAKIAlpZiAoZmxhZ3MgJiBJOTE1X1dBSVRfTE9DS0VEKSB7Ci0JCWludCBlcnI7Ci0KIAkJ
bG9ja2RlcF9hc3NlcnRfaGVsZCgmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAKLQkJZXJyID0g
d2FpdF9mb3JfZW5naW5lcygmaTkxNS0+Z3QpOwotCQlpZiAoZXJyKQotCQkJcmV0dXJuIGVycjsK
LQogCQlpOTE1X3JldGlyZV9yZXF1ZXN0cyhpOTE1KTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2lu
dGVsX3dha2VyZWYuYwppbmRleCAwNmJkOGIyMTVjYzIuLjk4N2ZkZjhjM2U4ZCAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd2FrZXJlZi5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwpAQCAtNCwyNSArNCwyNSBAQAogICogQ29weXJpZ2h0
IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24KICAqLwogCisjaW5jbHVkZSA8bGludXgvd2FpdF9i
aXQuaD4KKwogI2luY2x1ZGUgImludGVsX3J1bnRpbWVfcG0uaCIKICNpbmNsdWRlICJpbnRlbF93
YWtlcmVmLmgiCiAKLXN0YXRpYyB2b2lkIHJwbV9nZXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0g
KnJwbSwgc3RydWN0IGludGVsX3dha2VyZWYgKndmKQorc3RhdGljIHZvaWQgcnBtX2dldChzdHJ1
Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7Ci0Jd2YtPndha2VyZWYgPSBpbnRlbF9ydW50aW1lX3Bt
X2dldChycG0pOworCXdmLT53YWtlcmVmID0gaW50ZWxfcnVudGltZV9wbV9nZXQod2YtPnJwbSk7
CiB9CiAKLXN0YXRpYyB2b2lkIHJwbV9wdXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwg
c3RydWN0IGludGVsX3dha2VyZWYgKndmKQorc3RhdGljIHZvaWQgcnBtX3B1dChzdHJ1Y3QgaW50
ZWxfd2FrZXJlZiAqd2YpCiB7CiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWYgPSBmZXRjaF9hbmRf
emVybygmd2YtPndha2VyZWYpOwogCi0JaW50ZWxfcnVudGltZV9wbV9wdXQocnBtLCB3YWtlcmVm
KTsKKwlpbnRlbF9ydW50aW1lX3BtX3B1dCh3Zi0+cnBtLCB3YWtlcmVmKTsKIAlJTlRFTF9XQUtF
UkVGX0JVR19PTighd2FrZXJlZik7CiB9CiAKLWludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0
KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCQkgICAgICBzdHJ1Y3QgaW50ZWxfd2Fr
ZXJlZiAqd2YsCi0JCQkgICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkK
K2ludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikK
IHsKIAkvKgogCSAqIFRyZWF0IGdldC9wdXQgYXMgZGlmZmVyZW50IHN1YmNsYXNzZXMsIGFzIHdl
IG1heSBuZWVkIHRvIHJ1bgpAQCAtMzQsMTEgKzM0LDExIEBAIGludCBfX2ludGVsX3dha2VyZWZf
Z2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCiAJaWYgKCFhdG9taWNfcmVh
ZCgmd2YtPmNvdW50KSkgewogCQlpbnQgZXJyOwogCi0JCXJwbV9nZXQocnBtLCB3Zik7CisJCXJw
bV9nZXQod2YpOwogCi0JCWVyciA9IGZuKHdmKTsKKwkJZXJyID0gd2YtPm9wcy0+Z2V0KHdmKTsK
IAkJaWYgKHVubGlrZWx5KGVycikpIHsKLQkJCXJwbV9wdXQocnBtLCB3Zik7CisJCQlycG1fcHV0
KHdmKTsKIAkJCW11dGV4X3VubG9jaygmd2YtPm11dGV4KTsKIAkJCXJldHVybiBlcnI7CiAJCX0K
QEAgLTUyLDI3ICs1Miw3MiBAQCBpbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3Qg
aW50ZWxfcnVudGltZV9wbSAqcnBtLAogCXJldHVybiAwOwogfQogCi1pbnQgX19pbnRlbF93YWtl
cmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0sCi0JCQkgICAgIHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZiwKLQkJCSAgICAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtl
cmVmICp3ZikpCitzdGF0aWMgdm9pZCBfX19faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3Qg
aW50ZWxfd2FrZXJlZiAqd2YpCiB7Ci0JaW50IGVycjsKKwlpZiAoIWF0b21pY19kZWNfYW5kX3Rl
c3QoJndmLT5jb3VudCkpCisJCWdvdG8gdW5sb2NrOworCisJaWYgKGxpa2VseSghd2YtPm9wcy0+
cHV0KHdmKSkpIHsKKwkJcnBtX3B1dCh3Zik7CisJCXdha2VfdXBfdmFyKCZ3Zi0+d2FrZXJlZik7
CisJfSBlbHNlIHsKKwkJLyogb3BzLT5wdXQoKSBtdXN0IHNjaGVkdWxlIGl0cyBvd24gcmVsZWFz
ZSBvbiBkZWZlcnJhbCAqLworCQlhdG9taWNfc2V0X3JlbGVhc2UoJndmLT5jb3VudCwgMSk7CisJ
fQogCi0JZXJyID0gZm4od2YpOwotCWlmIChsaWtlbHkoIWVycikpCi0JCXJwbV9wdXQocnBtLCB3
Zik7Ci0JZWxzZQotCQlhdG9taWNfaW5jKCZ3Zi0+Y291bnQpOwordW5sb2NrOgogCW11dGV4X3Vu
bG9jaygmd2YtPm11dGV4KTsKK30KKwordm9pZCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3Ry
dWN0IGludGVsX3dha2VyZWYgKndmKQoreworCUlOVEVMX1dBS0VSRUZfQlVHX09OKHdvcmtfcGVu
ZGluZygmd2YtPndvcmspKTsKKworCS8qIEFzc3VtZSB3ZSBhcmUgbm90IGluIHByb2Nlc3MgY29u
dGV4dCBhbmQgc28gY2Fubm90IHNsZWVwLiAqLworCWlmICh3Zi0+b3BzLT5mbGFncyAmIElOVEVM
X1dBS0VSRUZfUFVUX0FTWU5DIHx8CisJICAgICFtdXRleF90cnlsb2NrKCZ3Zi0+bXV0ZXgpKSB7
CisJCXNjaGVkdWxlX3dvcmsoJndmLT53b3JrKTsKKwkJcmV0dXJuOworCX0KKworCV9fX19pbnRl
bF93YWtlcmVmX3B1dF9sYXN0KHdmKTsKK30KKworc3RhdGljIHZvaWQgX19pbnRlbF93YWtlcmVm
X3B1dF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd3JrKQoreworCXN0cnVjdCBpbnRlbF93YWtl
cmVmICp3ZiA9IGNvbnRhaW5lcl9vZih3cmssIHR5cGVvZigqd2YpLCB3b3JrKTsKKworCWlmIChh
dG9taWNfYWRkX3VubGVzcygmd2YtPmNvdW50LCAtMSwgMSkpCisJCXJldHVybjsKIAotCXJldHVy
biBlcnI7CisJbXV0ZXhfbG9jaygmd2YtPm11dGV4KTsKKwlfX19faW50ZWxfd2FrZXJlZl9wdXRf
bGFzdCh3Zik7CiB9CiAKLXZvaWQgX19pbnRlbF93YWtlcmVmX2luaXQoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmLCBzdHJ1Y3QgbG9ja19jbGFzc19rZXkgKmtleSkKK3ZvaWQgX19pbnRlbF93YWtl
cmVmX2luaXQoc3RydWN0IGludGVsX3dha2VyZWYgKndmLAorCQkJICBzdHJ1Y3QgaW50ZWxfcnVu
dGltZV9wbSAqcnBtLAorCQkJICBjb25zdCBzdHJ1Y3QgaW50ZWxfd2FrZXJlZl9vcHMgKm9wcywK
KwkJCSAgc3RydWN0IGxvY2tfY2xhc3Nfa2V5ICprZXkpCiB7CisJd2YtPnJwbSA9IHJwbTsKKwl3
Zi0+b3BzID0gb3BzOworCiAJX19tdXRleF9pbml0KCZ3Zi0+bXV0ZXgsICJ3YWtlcmVmIiwga2V5
KTsKIAlhdG9taWNfc2V0KCZ3Zi0+Y291bnQsIDApOwogCXdmLT53YWtlcmVmID0gMDsKKworCUlO
SVRfV09SSygmd2YtPndvcmssIF9faW50ZWxfd2FrZXJlZl9wdXRfd29yayk7Cit9CisKK3N0YXRp
YyBib29sIF9fd2FrZXJlZl9pc19pZGxlKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3sKKwlm
bHVzaF93b3JrKCZ3Zi0+d29yayk7CisJcmV0dXJuICFpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSh3
Zik7Cit9CisKK2ludCBpbnRlbF93YWtlcmVmX3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKQoreworCXJldHVybiB3YWl0X3Zhcl9ldmVudF9raWxsYWJsZSgmd2YtPndha2Vy
ZWYsIF9fd2FrZXJlZl9pc19pZGxlKHdmKSk7CiB9CiAKIHN0YXRpYyB2b2lkIHdha2VyZWZfYXV0
b190aW1lb3V0KHN0cnVjdCB0aW1lcl9saXN0ICp0KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaW50ZWxfd2FrZXJlZi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfd2Fr
ZXJlZi5oCmluZGV4IDFkNmY1OTg2ZTRlNS4uNTM1YTNhMTI4NjRiIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfd2FrZXJlZi5oCkBAIC04LDEwICs4LDEyIEBACiAjZGVmaW5lIElOVEVMX1dBS0VS
RUZfSAogCiAjaW5jbHVkZSA8bGludXgvYXRvbWljLmg+CisjaW5jbHVkZSA8bGludXgvYml0cy5o
PgogI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+CiAjaW5jbHVkZSA8bGludXgvcmVmY291bnQuaD4K
ICNpbmNsdWRlIDxsaW51eC9zdGFja2RlcG90Lmg+CiAjaW5jbHVkZSA8bGludXgvdGltZXIuaD4K
KyNpbmNsdWRlIDxsaW51eC93b3JrcXVldWUuaD4KIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RS
TV9JOTE1X0RFQlVHKQogI2RlZmluZSBJTlRFTF9XQUtFUkVGX0JVR19PTihleHByKSBCVUdfT04o
ZXhwcikKQEAgLTIwLDI5ICsyMiw0MiBAQAogI2VuZGlmCiAKIHN0cnVjdCBpbnRlbF9ydW50aW1l
X3BtOworc3RydWN0IGludGVsX3dha2VyZWY7CiAKIHR5cGVkZWYgZGVwb3Rfc3RhY2tfaGFuZGxl
X3QgaW50ZWxfd2FrZXJlZl90OwogCitzdHJ1Y3QgaW50ZWxfd2FrZXJlZl9vcHMgeworCWludCAo
KmdldCkoc3RydWN0IGludGVsX3dha2VyZWYgKndmKTsKKwlpbnQgKCpwdXQpKHN0cnVjdCBpbnRl
bF93YWtlcmVmICp3Zik7CisKKwl1bnNpZ25lZCBsb25nIGZsYWdzOworI2RlZmluZSBJTlRFTF9X
QUtFUkVGX1BVVF9BU1lOQyBCSVQoMCkKK307CisKIHN0cnVjdCBpbnRlbF93YWtlcmVmIHsKIAlh
dG9taWNfdCBjb3VudDsKIAlzdHJ1Y3QgbXV0ZXggbXV0ZXg7CisKIAlpbnRlbF93YWtlcmVmX3Qg
d2FrZXJlZjsKKworCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG07CisJY29uc3Qgc3RydWN0
IGludGVsX3dha2VyZWZfb3BzICpvcHM7CisKKwlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKIH07
CiAKIHZvaWQgX19pbnRlbF93YWtlcmVmX2luaXQoc3RydWN0IGludGVsX3dha2VyZWYgKndmLAor
CQkJICBzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAorCQkJICBjb25zdCBzdHJ1Y3QgaW50
ZWxfd2FrZXJlZl9vcHMgKm9wcywKIAkJCSAgc3RydWN0IGxvY2tfY2xhc3Nfa2V5ICprZXkpOwot
I2RlZmluZSBpbnRlbF93YWtlcmVmX2luaXQod2YpIGRvIHsJCQkJCVwKKyNkZWZpbmUgaW50ZWxf
d2FrZXJlZl9pbml0KHdmLCBycG0sIG9wcykgZG8gewkJCQlcCiAJc3RhdGljIHN0cnVjdCBsb2Nr
X2NsYXNzX2tleSBfX2tleTsJCQkJXAogCQkJCQkJCQkJXAotCV9faW50ZWxfd2FrZXJlZl9pbml0
KCh3ZiksICZfX2tleSk7CQkJCVwKKwlfX2ludGVsX3dha2VyZWZfaW5pdCgod2YpLCAocnBtKSwg
KG9wcyksICZfX2tleSk7CQlcCiB9IHdoaWxlICgwKQogCi1pbnQgX19pbnRlbF93YWtlcmVmX2dl
dF9maXJzdChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkJICAgICAgc3RydWN0IGlu
dGVsX3dha2VyZWYgKndmLAotCQkJICAgICAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVm
ICp3ZikpOwotaW50IF9faW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfcnVudGlt
ZV9wbSAqcnBtLAotCQkJICAgICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCi0JCQkgICAgIGlu
dCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKTsKK2ludCBfX2ludGVsX3dha2VyZWZf
Z2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3Zik7Cit2b2lkIF9faW50ZWxfd2FrZXJl
Zl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOwogCiAvKioKICAqIGludGVsX3dh
a2VyZWZfZ2V0OiBBY3F1aXJlIHRoZSB3YWtlcmVmCkBAIC02MSwxMiArNzYsMTAgQEAgaW50IF9f
aW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogICog
Y29kZSBvdGhlcndpc2UuCiAgKi8KIHN0YXRpYyBpbmxpbmUgaW50Ci1pbnRlbF93YWtlcmVmX2dl
dChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkgIHN0cnVjdCBpbnRlbF93YWtlcmVm
ICp3ZiwKLQkJICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkKK2ludGVsX3dh
a2VyZWZfZ2V0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsKIAlpZiAodW5saWtlbHkoIWF0
b21pY19pbmNfbm90X3plcm8oJndmLT5jb3VudCkpKQotCQlyZXR1cm4gX19pbnRlbF93YWtlcmVm
X2dldF9maXJzdChycG0sIHdmLCBmbik7CisJCXJldHVybiBfX2ludGVsX3dha2VyZWZfZ2V0X2Zp
cnN0KHdmKTsKIAogCXJldHVybiAwOwogfQpAQCAtMTAyLDE2ICsxMTUsMTIgQEAgaW50ZWxfd2Fr
ZXJlZl9nZXRfaWZfYWN0aXZlKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKICAqIFJldHVybnM6
IDAgaWYgdGhlIHdha2VyZWYgd2FzIHJlbGVhc2VkIHN1Y2Nlc3NmdWxseSwgb3IgYSBuZWdhdGl2
ZSBlcnJvcgogICogY29kZSBvdGhlcndpc2UuCiAgKi8KLXN0YXRpYyBpbmxpbmUgaW50Ci1pbnRl
bF93YWtlcmVmX3B1dChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAotCQkgIHN0cnVjdCBp
bnRlbF93YWtlcmVmICp3ZiwKLQkJICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dha2VyZWYgKndm
KSkKK3N0YXRpYyBpbmxpbmUgdm9pZAoraW50ZWxfd2FrZXJlZl9wdXQoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKQogewogCUlOVEVMX1dBS0VSRUZfQlVHX09OKGF0b21pY19yZWFkKCZ3Zi0+Y291
bnQpIDw9IDApOwotCWlmIChhdG9taWNfZGVjX2FuZF9tdXRleF9sb2NrKCZ3Zi0+Y291bnQsICZ3
Zi0+bXV0ZXgpKQotCQlyZXR1cm4gX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHJwbSwgd2YsIGZu
KTsKLQotCXJldHVybiAwOworCWlmICh1bmxpa2VseSghYXRvbWljX2FkZF91bmxlc3MoJndmLT5j
b3VudCwgLTEsIDEpKSkKKwkJX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHdmKTsKIH0KIAogLyoq
CkBAIC0xNTQsNiArMTYzLDE5IEBAIGludGVsX3dha2VyZWZfaXNfYWN0aXZlKGNvbnN0IHN0cnVj
dCBpbnRlbF93YWtlcmVmICp3ZikKIAlyZXR1cm4gUkVBRF9PTkNFKHdmLT53YWtlcmVmKTsKIH0K
IAorLyoqCisgKiBpbnRlbF93YWtlcmVmX3dhaXRfZm9yX2lkbGU6IFdhaXQgdW50aWwgdGhlIHdh
a2VyZWYgaXMgaWRsZQorICogQHdmOiB0aGUgd2FrZXJlZgorICoKKyAqIFdhaXQgZm9yIHRoZSBl
YXJsaWVyIGFzeW5jaHJvbm91cyByZWxlYXNlIG9mIHRoZSB3YWtlcmVmLiBOb3RlCisgKiB0aGlz
IHdpbGwgd2FpdCBmb3IgYW55IHRoaXJkIHBhcnR5IGFzIHdlbGwsIHNvIG1ha2Ugc3VyZSB5b3Ug
b25seSB3YWl0CisgKiB3aGVuIHlvdSBoYXZlIGNvbnRyb2wgb3ZlciB0aGUgd2FrZXJlZiBhbmQg
dHJ1c3Qgbm8gb25lIGVsc2UgaXMgYWNxdWlyaW5nCisgKiBpdC4KKyAqCisgKiBSZXR1cm46IDAg
b24gc3VjY2VzcywgZXJyb3IgY29kZSBpZiBraWxsZWQuCisgKi8KK2ludCBpbnRlbF93YWtlcmVm
X3dhaXRfZm9yX2lkbGUoc3RydWN0IGludGVsX3dha2VyZWYgKndmKTsKKwogc3RydWN0IGludGVs
X3dha2VyZWZfYXV0byB7CiAJc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbTsKIAlzdHJ1Y3Qg
dGltZXJfbGlzdCB0aW1lcjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0
ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVz
dHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oCmluZGV4IGE4NDFkM2Y5YmVkYy4uMWNjZjBmNzMxYWMw
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3Nl
bGZ0ZXN0cy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVf
c2VsZnRlc3RzLmgKQEAgLTEyLDEwICsxMiwxMSBAQAogc2VsZnRlc3Qoc2FuaXR5Y2hlY2ssIGk5
MTVfbGl2ZV9zYW5pdHljaGVjaykgLyoga2VlcCBmaXJzdCAoaWd0IHNlbGZjaGVjaykgKi8KIHNl
bGZ0ZXN0KHVuY29yZSwgaW50ZWxfdW5jb3JlX2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3Qod29y
a2Fyb3VuZHMsIGludGVsX3dvcmthcm91bmRzX2xpdmVfc2VsZnRlc3RzKQotc2VsZnRlc3QodGlt
ZWxpbmVzLCBpbnRlbF90aW1lbGluZV9saXZlX3NlbGZ0ZXN0cykKK3NlbGZ0ZXN0KGd0X2VuZ2lu
ZXMsIGludGVsX2VuZ2luZV9saXZlX3NlbGZ0ZXN0cykKK3NlbGZ0ZXN0KGd0X3RpbWVsaW5lcywg
aW50ZWxfdGltZWxpbmVfbGl2ZV9zZWxmdGVzdHMpCitzZWxmdGVzdChndF9jb250ZXh0cywgaW50
ZWxfY29udGV4dF9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KHJlcXVlc3RzLCBpOTE1X3JlcXVl
c3RfbGl2ZV9zZWxmdGVzdHMpCiBzZWxmdGVzdChhY3RpdmUsIGk5MTVfYWN0aXZlX2xpdmVfc2Vs
ZnRlc3RzKQotc2VsZnRlc3QoZ3RfY29udGV4dHMsIGludGVsX2NvbnRleHRfbGl2ZV9zZWxmdGVz
dHMpCiBzZWxmdGVzdChvYmplY3RzLCBpOTE1X2dlbV9vYmplY3RfbGl2ZV9zZWxmdGVzdHMpCiBz
ZWxmdGVzdChtbWFuLCBpOTE1X2dlbV9tbWFuX2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QoZG1h
YnVmLCBpOTE1X2dlbV9kbWFidWZfbGl2ZV9zZWxmdGVzdHMpCi0tIAoyLjIzLjAucmMxCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFp
bGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5m
cmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

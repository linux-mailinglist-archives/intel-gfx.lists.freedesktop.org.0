Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id B13B686551
	for <lists+intel-gfx@lfdr.de>; Thu,  8 Aug 2019 17:12:26 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 020246E86D;
	Thu,  8 Aug 2019 15:12:19 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 4675B6E865
 for <intel-gfx@lists.freedesktop.org>; Thu,  8 Aug 2019 15:12:11 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17932636-1500050 
 for <intel-gfx@lists.freedesktop.org>; Thu, 08 Aug 2019 16:12:08 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  8 Aug 2019 16:12:07 +0100
Message-Id: <20190808151207.31533-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0.rc1
MIME-Version: 1.0
Subject: [Intel-gfx] [CI] drm/i915: Defer final intel_wakeref_put to process
 context
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QXMgd2UgbmVlZCB0byBhY3F1aXJlIGEgbXV0ZXggdG8gc2VyaWFsaXNlIHRoZSBmaW5hbAppbnRl
bF93YWtlcmVmX3B1dCwgd2UgbmVlZCB0byBlbnN1cmUgdGhhdCB3ZSBhcmUgaW4gcHJvY2VzcyBj
b250ZXh0IGF0CnRoYXQgdGltZS4gSG93ZXZlciwgd2Ugd2FudCB0byBhbGxvdyBvcGVyYXRpb24g
b24gdGhlIGludGVsX3dha2VyZWYgZnJvbQppbnNpZGUgdGltZXIgYW5kIG90aGVyIGhhcmRpcnEg
Y29udGV4dCwgd2hpY2ggbWVhbnMgdGhhdCBuZWVkIHRvIGRlZmVyCnRoYXQgZmluYWwgcHV0IHRv
IGEgd29ya3F1ZXVlLgoKSW5zaWRlIHRoZSBmaW5hbCB3YWtlcmVmIHB1dHMsIHdlIGFyZSBzYWZl
IHRvIG9wZXJhdGUgaW4gYW55IGNvbnRleHQsIGFzCndlIGFyZSBzaW1wbHkgbWFya2luZyB1cCB0
aGUgSFcgYW5kIHN0YXRlIHRyYWNraW5nIGZvciB0aGUgcG90ZW50aWFsCnNsZWVwLiBJdCdzIG9u
bHkgdGhlIHNlcmlhbGlzYXRpb24gd2l0aCB0aGUgcG90ZW50aWFsIHNsZWVwaW5nIGdldHRpbmcK
dGhhdCByZXF1aXJlcyBjYXJlZnVsIHdhaXQgYXZvaWRhbmNlLiBUaGlzIGFsbG93cyB1cyB0byBy
ZXRhaW4gdGhlCmltbWVkaWF0ZSBwcm9jZXNzaW5nIGFzIGJlZm9yZSAod2Ugb25seSBuZWVkIHRv
IHNsZWVwIG92ZXIgdGhlIHNhbWUKcmFjZXMgYXMgdGhlIGN1cnJlbnQgbXV0ZXhfbG9jaykuCgp2
MjogQWRkIGEgc2VsZnRlc3QgdG8gZW5zdXJlIHdlIGV4ZXJjaXNlIHRoZSBjb2RlIHdoaWxlIGxv
Y2tkZXAgd2F0Y2hlcy4KdjM6IFRoYXQgdGVzdCB3YXMgZXh0cmVtZWx5IGxvdWQgYW5kIGNvbXBs
YWluZWQgYWJvdXQgbWFueSB0aGluZ3MhCnY0OiBOb3QgYSB3aGFsZSEKCkJ1Z3ppbGxhOiBodHRw
czovL2J1Z3MuZnJlZWRlc2t0b3Aub3JnL3Nob3dfYnVnLmNnaT9pZD0xMTEyOTUKUmVmZXJlbmNl
czogaHR0cHM6Ly9idWdzLmZyZWVkZXNrdG9wLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTExMjQ1ClJl
ZmVyZW5jZXM6IGh0dHBzOi8vYnVncy5mcmVlZGVza3RvcC5vcmcvc2hvd19idWcuY2dpP2lkPTEx
MTI1NgpGaXhlczogMTgzOTg5MDRjYTllICgiZHJtL2k5MTU6IE9ubHkgcmVjb3ZlciBhY3RpdmUg
ZW5naW5lcyIpCkZpeGVzOiA1MWZiZDhkZTg3ZGMgKCJkcm0vaTkxNS9wbXU6IEF0b21pY2FsbHkg
YWNxdWlyZSB0aGUgZ3RfcG0gd2FrZXJlZiIpClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNvbiA8
Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51cnN1
bGluQGludGVsLmNvbT4KQ2M6IE1pa2EgS3VvcHBhbGEgPG1pa2Eua3VvcHBhbGFAbGludXguaW50
ZWwuY29tPgpSZXZpZXdlZC1ieTogTWlrYSBLdW9wcGFsYSA8bWlrYS5rdW9wcGFsYUBsaW51eC5p
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX3BtLmMgICAg
ICAgIHwgMTMgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAg
ICAgfCAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYyAgICAg
fCAzOCArKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9wbS5o
ICAgICB8IDE4ICsrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMgICAg
ICAgICB8IDI4ICsrKy0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgg
ICAgICAgICB8IDIxICsrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9scmMuYyAg
ICAgICAgICAgfCAgNCArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5l
LmMgICAgIHwgMjggKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lLmggICAgIHwgMTQgKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5n
aW5lX3BtLmMgIHwgODMgKysrKysrKysrKysrKysrKysrKwogLi4uL2dwdS9kcm0vaTkxNS9ndC91
Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIHwgIDQgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZGVidWdmcy5jICAgICAgICAgICB8ICA0ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
Z2VtLmMgICAgICAgICAgICAgICB8IDI2ICstLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfd2FrZXJlZi5jICAgICAgICAgIHwgODIgKysrKysrKysrKysrKy0tLS0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF93YWtlcmVmLmggICAgICAgICAgfCA2MiArKysrKysrKystLS0tLQog
Li4uL2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmggIHwgIDUgKy0KIDE2
IGZpbGVzIGNoYW5nZWQsIDMwMCBpbnNlcnRpb25zKCspLCAxMzEgZGVsZXRpb25zKC0pCiBjcmVh
dGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5lLmMK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdp
bmUuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0
X2VuZ2luZV9wbS5jCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fcG0uYwppbmRleCA3
MjkyMjcwM2FmNDkuLjE3ZTM2MTgyNDFjNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX3BtLmMKQEAgLTEzMCw3ICsxMzAsOSBAQCBzdGF0aWMgYm9vbCBzd2l0Y2hfdG9fa2VybmVs
X2NvbnRleHRfc3luYyhzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogCQl9CiAJfSB3aGlsZSAoaTkxNV9y
ZXRpcmVfcmVxdWVzdHMoZ3QtPmk5MTUpICYmIHJlc3VsdCk7CiAKLQlHRU1fQlVHX09OKGd0LT5h
d2FrZSk7CisJaWYgKGludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoZ3QpKQorCQlyZXN1bHQgPSBm
YWxzZTsKKwogCXJldHVybiByZXN1bHQ7CiB9CiAKQEAgLTE2MSwxMyArMTYzLDYgQEAgdm9pZCBp
OTE1X2dlbV9zdXNwZW5kKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogCiAJbXV0ZXhf
dW5sb2NrKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKIAotCS8qCi0JICogQXNzZXJ0IHRoYXQg
d2Ugc3VjY2Vzc2Z1bGx5IGZsdXNoZWQgYWxsIHRoZSB3b3JrIGFuZAotCSAqIHJlc2V0IHRoZSBH
UFUgYmFjayB0byBpdHMgaWRsZSwgbG93IHBvd2VyIHN0YXRlLgotCSAqLwotCUdFTV9CVUdfT04o
aTkxNS0+Z3QuYXdha2UpOwotCWZsdXNoX3dvcmsoJmk5MTUtPmdlbS5pZGxlX3dvcmspOwotCiAJ
Y2FuY2VsX2RlbGF5ZWRfd29ya19zeW5jKCZpOTE1LT5ndC5oYW5nY2hlY2sud29yayk7CiAKIAlp
OTE1X2dlbV9kcmFpbl9mcmVlZF9vYmplY3RzKGk5MTUpOwpAQCAtMjQ0LDggKzIzOSw2IEBAIHZv
aWQgaTkxNV9nZW1fcmVzdW1lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQogewogCUdF
TV9UUkFDRSgiXG4iKTsKIAotCVdBUk5fT04oaTkxNS0+Z3QuYXdha2UpOwotCiAJbXV0ZXhfbG9j
aygmaTkxNS0+ZHJtLnN0cnVjdF9tdXRleCk7CiAJaW50ZWxfdW5jb3JlX2ZvcmNld2FrZV9nZXQo
Jmk5MTUtPnVuY29yZSwgRk9SQ0VXQUtFX0FMTCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX2NzLmMKaW5kZXggOGQ0NGQwZDhhNzU4Li42MzRlZjQ1Yjc3ZGEgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCkBAIC0xNTc3LDUgKzE1Nzcs
NiBAQCBpbnRlbF9lbmdpbmVfZmluZF9hY3RpdmVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZW5naW5l
X2NzICplbmdpbmUpCiAKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9TRUxGVEVTVCkK
ICNpbmNsdWRlICJtb2NrX2VuZ2luZS5jIgorI2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZS5jIgog
I2luY2x1ZGUgInNlbGZ0ZXN0X2VuZ2luZV9jcy5jIgogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2VuZ2luZV9wbS5jCmluZGV4IDAzMzYyMDQ5ODhkNi4uNmIxNWUzMzM1ZGQ2
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uYwpAQCAtMzcsMjgg
KzM3LDYgQEAgc3RhdGljIGludCBfX2VuZ2luZV91bnBhcmsoc3RydWN0IGludGVsX3dha2VyZWYg
KndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9wbV9nZXQoc3RydWN0IGlu
dGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWludGVsX3dha2VyZWZfZ2V0KCZlbmdpbmUtPmk5
MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5lX3VucGFyayk7Ci19Ci0K
LXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQot
ewotCS8qCi0JICogV2UgYXJlIGNvbW1pdHRlZCBub3cgdG8gcGFya2luZyB0aGlzIGVuZ2luZSwg
bWFrZSBzdXJlIHRoZXJlCi0JICogd2lsbCBiZSBubyBtb3JlIGludGVycnVwdHMgYXJyaXZpbmcg
bGF0ZXIgYW5kIHRoZSBlbmdpbmUKLQkgKiBpcyB0cnVseSBpZGxlLgotCSAqLwotCWlmICh3YWl0
X2ZvcihpbnRlbF9lbmdpbmVfaXNfaWRsZShlbmdpbmUpLCAxMCkpIHsKLQkJc3RydWN0IGRybV9w
cmludGVyIHAgPSBkcm1fZGVidWdfcHJpbnRlcihfX2Z1bmNfXyk7Ci0KLQkJZGV2X2Vycihlbmdp
bmUtPmk5MTUtPmRybS5kZXYsCi0JCQkiJXMgaXMgbm90IGlkbGUgYmVmb3JlIHBhcmtpbmdcbiIs
Ci0JCQllbmdpbmUtPm5hbWUpOwotCQlpbnRlbF9lbmdpbmVfZHVtcChlbmdpbmUsICZwLCBOVUxM
KTsKLQl9Ci19Ci0KIHN0YXRpYyBib29sIHN3aXRjaF90b19rZXJuZWxfY29udGV4dChzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CkBA
IC0xMzYsMTIgKzExNCwxOCBAQCBzdGF0aWMgaW50IF9fZW5naW5lX3Bhcmsoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKQogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2VuZ2luZV9wbV9wdXQo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWludGVsX3dha2VyZWZfcHV0KCZl
bmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG0sICZlbmdpbmUtPndha2VyZWYsIF9fZW5naW5lX3Bhcmsp
OwotfQorc3RhdGljIGNvbnN0IHN0cnVjdCBpbnRlbF93YWtlcmVmX29wcyB3Zl9vcHMgPSB7CisJ
LmdldCA9IF9fZW5naW5lX3VucGFyaywKKwkucHV0ID0gX19lbmdpbmVfcGFyaywKK307CiAKIHZv
aWQgaW50ZWxfZW5naW5lX2luaXRfX3BtKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkK
IHsKLQlpbnRlbF93YWtlcmVmX2luaXQoJmVuZ2luZS0+d2FrZXJlZik7CisJc3RydWN0IGludGVs
X3J1bnRpbWVfcG0gKnJwbSA9ICZlbmdpbmUtPmk5MTUtPnJ1bnRpbWVfcG07CisKKwlpbnRlbF93
YWtlcmVmX2luaXQoJmVuZ2luZS0+d2FrZXJlZiwgcnBtLCAmd2Zfb3BzKTsKIH0KKworI2lmIElT
X0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNUKQorI2luY2x1ZGUgInNlbGZ0ZXN0X2Vu
Z2luZV9wbS5jIgorI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9w
bS5oCmluZGV4IDAxNWFjNzJkN2FkMC4uNzM5YzUwZmVmY2VmIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9lbmdpbmVfcG0uaApAQCAtMTAsMjQgKzEwLDI2IEBACiAjaW5jbHVkZSAi
aW50ZWxfZW5naW5lX3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50ZWxfd2FrZXJlZi5oIgogCi1zdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZTsKLQotdm9pZCBpbnRlbF9lbmdpbmVfcG1fZ2V0KHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSk7Ci12b2lkIGludGVsX2VuZ2luZV9wbV9wdXQoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKTsKLQogc3RhdGljIGlubGluZSBib29sCiBpbnRlbF9l
bmdpbmVfcG1faXNfYXdha2UoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
ewogCXJldHVybiBpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSgmZW5naW5lLT53YWtlcmVmKTsKIH0K
IAotc3RhdGljIGlubGluZSBib29sCi1pbnRlbF9lbmdpbmVfcG1fZ2V0X2lmX2F3YWtlKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9lbmdp
bmVfcG1fZ2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpbnRlbF93YWtl
cmVmX2dldCgmZW5naW5lLT53YWtlcmVmKTsKK30KKworc3RhdGljIGlubGluZSBib29sIGludGVs
X2VuZ2luZV9wbV9nZXRfaWZfYXdha2Uoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
ewogCXJldHVybiBpbnRlbF93YWtlcmVmX2dldF9pZl9hY3RpdmUoJmVuZ2luZS0+d2FrZXJlZik7
CiB9CiAKLXZvaWQgaW50ZWxfZW5naW5lX3Bhcmsoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKTsKK3N0YXRpYyBpbmxpbmUgdm9pZCBpbnRlbF9lbmdpbmVfcG1fcHV0KHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlpbnRlbF93YWtlcmVmX3B1dCgmZW5naW5lLT53YWtl
cmVmKTsKK30KIAogdm9pZCBpbnRlbF9lbmdpbmVfaW5pdF9fcG0oc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lKTsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3RfcG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmMKaW5kZXgg
NmM4OTcwMjcxYTdmLi4xMzYzZTA2OWVjODMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L2ludGVsX2d0X3BtLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Z3RfcG0uYwpAQCAtMTcsNyArMTcsNyBAQCBzdGF0aWMgdm9pZCBwbV9ub3RpZnkoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUsIGludCBzdGF0ZSkKIAlibG9ja2luZ19ub3RpZmllcl9jYWxs
X2NoYWluKCZpOTE1LT5ndC5wbV9ub3RpZmljYXRpb25zLCBzdGF0ZSwgaTkxNSk7CiB9CiAKLXN0
YXRpYyBpbnQgaW50ZWxfZ3RfdW5wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKK3N0YXRp
YyBpbnQgX19ndF91bnBhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQogewogCXN0cnVjdCBp
bnRlbF9ndCAqZ3QgPSBjb250YWluZXJfb2Yod2YsIHR5cGVvZigqZ3QpLCB3YWtlcmVmKTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGd0LT5pOTE1OwpAQCAtNTMsMTQgKzUzLDcg
QEAgc3RhdGljIGludCBpbnRlbF9ndF91bnBhcmsoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQog
CXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2d0X3BtX2dldChzdHJ1Y3QgaW50ZWxfZ3QgKmd0
KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0gPSAmZ3QtPmk5MTUtPnJ1bnRpbWVf
cG07Ci0KLQlpbnRlbF93YWtlcmVmX2dldChycG0sICZndC0+d2FrZXJlZiwgaW50ZWxfZ3RfdW5w
YXJrKTsKLX0KLQotc3RhdGljIGludCBpbnRlbF9ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVm
ICp3ZikKK3N0YXRpYyBpbnQgX19ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsK
IAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9CiAJCWNvbnRhaW5lcl9vZih3ZiwgdHlw
ZW9mKCppOTE1KSwgZ3Qud2FrZXJlZik7CkBAIC03NCwyMiArNjcsMjUgQEAgc3RhdGljIGludCBp
bnRlbF9ndF9wYXJrKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIAlpZiAoSU5URUxfR0VOKGk5
MTUpID49IDYpCiAJCWdlbjZfcnBzX2lkbGUoaTkxNSk7CiAKKwkvKiBFdmVyeXRoaW5nIHN3aXRj
aGVkIG9mZiwgZmx1c2ggYW55IHJlc2lkdWFsIGludGVycnVwdCBqdXN0IGluIGNhc2UgKi8KKwlp
bnRlbF9zeW5jaHJvbml6ZV9pcnEoaTkxNSk7CisKIAlHRU1fQlVHX09OKCF3YWtlcmVmKTsKIAlp
bnRlbF9kaXNwbGF5X3Bvd2VyX3B1dChpOTE1LCBQT1dFUl9ET01BSU5fR1RfSVJRLCB3YWtlcmVm
KTsKIAogCXJldHVybiAwOwogfQogCi12b2lkIGludGVsX2d0X3BtX3B1dChzdHJ1Y3QgaW50ZWxf
Z3QgKmd0KQotewotCXN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpycG0gPSAmZ3QtPmk5MTUtPnJ1
bnRpbWVfcG07Ci0KLQlpbnRlbF93YWtlcmVmX3B1dChycG0sICZndC0+d2FrZXJlZiwgaW50ZWxf
Z3RfcGFyayk7Ci19CitzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX3dha2VyZWZfb3BzIHdmX29w
cyA9IHsKKwkuZ2V0ID0gX19ndF91bnBhcmssCisJLnB1dCA9IF9fZ3RfcGFyaywKKwkuZmxhZ3Mg
PSBJTlRFTF9XQUtFUkVGX1BVVF9BU1lOQywKK307CiAKIHZvaWQgaW50ZWxfZ3RfcG1faW5pdF9l
YXJseShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQogewotCWludGVsX3dha2VyZWZfaW5pdCgmZ3QtPndh
a2VyZWYpOworCWludGVsX3dha2VyZWZfaW5pdCgmZ3QtPndha2VyZWYsICZndC0+aTkxNS0+cnVu
dGltZV9wbSwgJndmX29wcyk7CisKIAlCTE9DS0lOR19JTklUX05PVElGSUVSX0hFQUQoJmd0LT5w
bV9ub3RpZmljYXRpb25zKTsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZ3RfcG0uaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgK
aW5kZXggZThhMThkNGIyN2M5Li5mYjM5ZDk5Y2Q2ZWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2d0X3BtLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZ3RfcG0uaApAQCAtMTcsMTQgKzE3LDMxIEBAIGVudW0gewogCUlOVEVMX0dUX1BBUkss
CiB9OwogCi12b2lkIGludGVsX2d0X3BtX2dldChzdHJ1Y3QgaW50ZWxfZ3QgKmd0KTsKLXZvaWQg
aW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOworc3RhdGljIGlubGluZSBib29s
IGludGVsX2d0X3BtX2lzX2F3YWtlKGNvbnN0IHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJcmV0
dXJuIGludGVsX3dha2VyZWZfaXNfYWN0aXZlKCZndC0+d2FrZXJlZik7Cit9CisKK3N0YXRpYyBp
bmxpbmUgdm9pZCBpbnRlbF9ndF9wbV9nZXQoc3RydWN0IGludGVsX2d0ICpndCkKK3sKKwlpbnRl
bF93YWtlcmVmX2dldCgmZ3QtPndha2VyZWYpOworfQogCiBzdGF0aWMgaW5saW5lIGJvb2wgaW50
ZWxfZ3RfcG1fZ2V0X2lmX2F3YWtlKHN0cnVjdCBpbnRlbF9ndCAqZ3QpCiB7CiAJcmV0dXJuIGlu
dGVsX3dha2VyZWZfZ2V0X2lmX2FjdGl2ZSgmZ3QtPndha2VyZWYpOwogfQogCitzdGF0aWMgaW5s
aW5lIHZvaWQgaW50ZWxfZ3RfcG1fcHV0KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJaW50ZWxf
d2FrZXJlZl9wdXQoJmd0LT53YWtlcmVmKTsKK30KKworc3RhdGljIGlubGluZSBpbnQgaW50ZWxf
Z3RfcG1fd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfZ3QgKmd0KQoreworCXJldHVybiBpbnRl
bF93YWtlcmVmX3dhaXRfZm9yX2lkbGUoJmd0LT53YWtlcmVmKTsKK30KKwogdm9pZCBpbnRlbF9n
dF9wbV9pbml0X2Vhcmx5KHN0cnVjdCBpbnRlbF9ndCAqZ3QpOwogCiB2b2lkIGludGVsX2d0X3Nh
bml0aXplKHN0cnVjdCBpbnRlbF9ndCAqZ3QsIGJvb2wgZm9yY2UpOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9scmMuYwppbmRleCAyYjk3NjQxZmVhYzMuLjE5MTg5MmY3YjNhOSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTE0MCw2ICsxNDAsNyBAQAogI2luY2x1ZGUgImk5
MTVfdmdwdS5oIgogI2luY2x1ZGUgImludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUgImludGVs
X2d0LmgiCisjaW5jbHVkZSAiaW50ZWxfZ3RfcG0uaCIKICNpbmNsdWRlICJpbnRlbF9scmNfcmVn
LmgiCiAjaW5jbHVkZSAiaW50ZWxfbW9jcy5oIgogI2luY2x1ZGUgImludGVsX3Jlc2V0LmgiCkBA
IC01NTcsNiArNTU4LDcgQEAgZXhlY2xpc3RzX3NjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVl
c3QgKnJxLCBpbnQgaWR4KQogCQlpbnRlbF9jb250ZXh0X2dldChjZSk7CiAJCWNlLT5pbmZsaWdo
dCA9IHJxLT5lbmdpbmU7CiAKKwkJaW50ZWxfZ3RfcG1fZ2V0KGNlLT5pbmZsaWdodC0+Z3QpOwog
CQlleGVjbGlzdHNfY29udGV4dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVE
VUxFX0lOKTsKIAkJaW50ZWxfZW5naW5lX2NvbnRleHRfaW4oY2UtPmluZmxpZ2h0KTsKIAl9CkBA
IC01ODksNiArNTkxLDcgQEAgZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKIAlpZiAoIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQoY2UpKSB7CiAJCWlu
dGVsX2VuZ2luZV9jb250ZXh0X291dChjZS0+aW5mbGlnaHQpOwogCQlleGVjbGlzdHNfY29udGV4
dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX09VVCk7CisJCWludGVs
X2d0X3BtX3B1dChjZS0+aW5mbGlnaHQtPmd0KTsKIAogCQkvKgogCQkgKiBJZiB0aGlzIGlzIHBh
cnQgb2YgYSB2aXJ0dWFsIGVuZ2luZSwgaXRzIG5leHQgcmVxdWVzdCBtYXkKQEAgLTI3MjAsNyAr
MjcyMyw2IEBAIHN0YXRpYyB1MzIgKmdlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfcmNzKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsIHUzMiAqY3MpCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNf
cGFyayhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJZGVsX3RpbWVyX3N5bmMo
JmVuZ2luZS0+ZXhlY2xpc3RzLnRpbWVyKTsKLQlpbnRlbF9lbmdpbmVfcGFyayhlbmdpbmUpOwog
fQogCiB2b2lkIGludGVsX2V4ZWNsaXN0c19zZXRfZGVmYXVsdF9zdWJtaXNzaW9uKHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L3NlbGZ0ZXN0X2VuZ2luZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
ZW5naW5lLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5mNjViMTE4
ZTI2MWQKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVz
dF9lbmdpbmUuYwpAQCAtMCwwICsxLDI4IEBACisvKgorICogU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAKKyAqCisgKiBDb3B5cmlnaHQgwqkgMjAxOCBJbnRlbCBDb3Jwb3JhdGlvbgor
ICovCisKKyNpbmNsdWRlICJpOTE1X3NlbGZ0ZXN0LmgiCisjaW5jbHVkZSAic2VsZnRlc3RfZW5n
aW5lLmgiCisKK2ludCBpbnRlbF9lbmdpbmVfbGl2ZV9zZWxmdGVzdHMoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmk5MTUpCit7CisJc3RhdGljIGludCAoKiBjb25zdCB0ZXN0c1tdKShzdHJ1Y3Qg
aW50ZWxfZ3QgKikgPSB7CisJCWxpdmVfZW5naW5lX3BtX3NlbGZ0ZXN0cywKKwkJTlVMTCwKKwl9
OworCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSAmaTkxNS0+Z3Q7CisJdHlwZW9mKCp0ZXN0cykgKmZu
OworCisJZm9yIChmbiA9IHRlc3RzOyAqZm47IGZuKyspIHsKKwkJaW50IGVycjsKKworCQllcnIg
PSAoKmZuKShndCk7CisJCWlmIChlcnIpCisJCQlyZXR1cm4gZXJyOworCX0KKworCXJldHVybiAw
OworfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3RfZW5naW5l
LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmUuaApuZXcgZmlsZSBt
b2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmFiMzJkMDllYzVhMQotLS0gL2Rldi9udWxs
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2luZS5oCkBAIC0wLDAg
KzEsMTQgQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorICoKKyAq
IENvcHlyaWdodCDCqSAyMDE5IEludGVsIENvcnBvcmF0aW9uCisgKi8KKworI2lmbmRlZiBTRUxG
VEVTVF9FTkdJTkVfSAorI2RlZmluZSBTRUxGVEVTVF9FTkdJTkVfSAorCitzdHJ1Y3QgaW50ZWxf
Z3Q7CisKK2ludCBsaXZlX2VuZ2luZV9wbV9zZWxmdGVzdHMoc3RydWN0IGludGVsX2d0ICpndCk7
CisKKyNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRlc3Rf
ZW5naW5lX3BtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9zZWxmdGVzdF9lbmdpbmVfcG0u
YwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjc1YzE5NzYxMjcwNQot
LS0gL2Rldi9udWxsCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2VuZ2lu
ZV9wbS5jCkBAIC0wLDAgKzEsODMgQEAKKy8qCisgKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
R1BMLTIuMAorICoKKyAqIENvcHlyaWdodCDCqSAyMDE4IEludGVsIENvcnBvcmF0aW9uCisgKi8K
KworI2luY2x1ZGUgImk5MTVfc2VsZnRlc3QuaCIKKyNpbmNsdWRlICJzZWxmdGVzdF9lbmdpbmUu
aCIKKyNpbmNsdWRlICJzZWxmdGVzdHMvaWd0X2F0b21pYy5oIgorCitzdGF0aWMgaW50IGxpdmVf
ZW5naW5lX3BtKHZvaWQgKmFyZykKK3sKKwlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOworCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKKwllbnVtIGludGVsX2VuZ2luZV9pZCBpZDsK
KworCS8qCisJICogQ2hlY2sgd2UgY2FuIGNhbGwgaW50ZWxfZW5naW5lX3BtX3B1dCBmcm9tIGFu
eSBjb250ZXh0LiBObworCSAqIGZhaWx1cmVzIGFyZSByZXBvcnRlZCBkaXJlY3RseSwgYnV0IGlm
IHdlIG1lc3MgdXAgbG9ja2RlcCBzaG91bGQKKwkgKiB0ZWxsIHVzLgorCSAqLworCWlmIChpbnRl
bF9ndF9wbV93YWl0X2Zvcl9pZGxlKGd0KSkgeworCQlwcl9lcnIoIlVuYWJsZSB0byBmbHVzaCBH
VCBwbSBiZWZvcmUgdGVzdFxuIik7CisJCXJldHVybiAtRUJVU1k7CisJfQorCisJR0VNX0JVR19P
TihpbnRlbF9ndF9wbV9pc19hd2FrZShndCkpOworCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGd0
LT5pOTE1LCBpZCkgeworCQljb25zdCB0eXBlb2YoKmlndF9hdG9taWNfcGhhc2VzKSAqcDsKKwor
CQlmb3IgKHAgPSBpZ3RfYXRvbWljX3BoYXNlczsgcC0+bmFtZTsgcCsrKSB7CisJCQkvKgorCQkJ
ICogQWNxdWlzaXRpb24gaXMgYWx3YXlzIHN5bmNocm9ub3VzLCBleGNlcHQgaWYgd2UKKwkJCSAq
IGtub3cgdGhhdCB0aGUgZW5naW5lIGlzIGFscmVhZHkgYXdhbGUsIGluIHdoaWNoCisJCQkgKiB3
ZSBzaG91bGQgdXNlIGludGVsX2VuZ2luZV9wbV9nZXRfaWZfYXdha2UoKSB0bworCQkJICogYXRv
bWljYWxseSBncmFiIHRoZSB3YWtlcmVmLgorCQkJICoKKwkJCSAqIEluIHByYWN0aWNlLAorCQkJ
ICogICAgaW50ZWxfZW5naW5lX3BtX2dldCgpOworCQkJICogICAgaW50ZWxfZW5naW5lX3BtX3B1
dCgpOworCQkJICogb2NjdXJzIGluIG9uZSB0aHJlYWQsIHdoaWxlIHNpbXVsdGFuZW91c2x5CisJ
CQkgKiAgICBpbnRlbF9lbmdpbmVfcG1fZ2V0X2lmX2F3YWtlKCk7CisJCQkgKiAgICBpbnRlbF9l
bmdpbmVfcG1fcHV0KCk7CisJCQkgKiBvY2N1cnMgaW4gYXRvbWljIGNvbnRleHQgaW4gYW5vdGhl
ci4KKwkJCSAqLworCQkJR0VNX0JVR19PTihpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoZW5naW5l
KSk7CisJCQlpbnRlbF9lbmdpbmVfcG1fZ2V0KGVuZ2luZSk7CisKKwkJCXAtPmNyaXRpY2FsX3Nl
Y3Rpb25fYmVnaW4oKTsKKwkJCWlmICghaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZShlbmdp
bmUpKQorCQkJCXByX2VycigiaW50ZWxfZW5naW5lX3BtX2dldF9pZl9hd2FrZSglcykgZmFpbGVk
IHVuZGVyICVzXG4iLAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUsIHAtPm5hbWUpOworCQkJZWxz
ZQorCQkJCWludGVsX2VuZ2luZV9wbV9wdXQoZW5naW5lKTsKKwkJCWludGVsX2VuZ2luZV9wbV9w
dXQoZW5naW5lKTsKKwkJCXAtPmNyaXRpY2FsX3NlY3Rpb25fZW5kKCk7CisKKwkJCS8qIGVuZ2lu
ZSB3YWtlcmVmIGlzIHN5bmMgKGluc3RhbnQpICovCisJCQlpZiAoaW50ZWxfZW5naW5lX3BtX2lz
X2F3YWtlKGVuZ2luZSkpIHsKKwkJCQlwcl9lcnIoIiVzIGlzIHN0aWxsIGF3YWtlIGFmdGVyIGZs
dXNoaW5nIHBtXG4iLAorCQkJCSAgICAgICBlbmdpbmUtPm5hbWUpOworCQkJCXJldHVybiAtRUlO
VkFMOworCQkJfQorCisJCQkvKiBndCB3YWtlcmVmIGlzIGFzeW5jIChkZWZlcnJlZCB0byB3b3Jr
cXVldWUpICovCisJCQlpZiAoaW50ZWxfZ3RfcG1fd2FpdF9mb3JfaWRsZShndCkpIHsKKwkJCQlw
cl9lcnIoIkdUIGZhaWxlZCB0byBpZGxlXG4iKTsKKwkJCQlyZXR1cm4gLUVJTlZBTDsKKwkJCX0K
KwkJfQorCX0KKworCXJldHVybiAwOworfQorCitpbnQgbGl2ZV9lbmdpbmVfcG1fc2VsZnRlc3Rz
KHN0cnVjdCBpbnRlbF9ndCAqZ3QpCit7CisJc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3N1YnRl
c3QgdGVzdHNbXSA9IHsKKwkJU1VCVEVTVChsaXZlX2VuZ2luZV9wbSksCisJfTsKKworCXJldHVy
biBpbnRlbF9ndF9saXZlX3N1YnRlc3RzKHRlc3RzLCBndCk7Cit9CmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwppbmRleCAyOGY1ZTUzNzli
MmMuLjhiODM3NTBjZjk2YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMv
aW50ZWxfZ3VjX3N1Ym1pc3Npb24uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9p
bnRlbF9ndWNfc3VibWlzc2lvbi5jCkBAIC0yOSw2ICsyOSw3IEBACiAjaW5jbHVkZSAiZ3QvaW50
ZWxfY29udGV4dC5oIgogI2luY2x1ZGUgImd0L2ludGVsX2VuZ2luZV9wbS5oIgogI2luY2x1ZGUg
Imd0L2ludGVsX2d0LmgiCisjaW5jbHVkZSAiZ3QvaW50ZWxfZ3RfcG0uaCIKICNpbmNsdWRlICJn
dC9pbnRlbF9scmNfcmVnLmgiCiAjaW5jbHVkZSAiaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKIApA
QCAtNTM4LDYgKzUzOSw3IEBAIHN0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzY2hlZHVsZV9p
bihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGlkeCkKIAlpZiAoIXJxLT5od19jb250ZXh0
LT5pbmZsaWdodCkKIAkJcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZTsKIAlp
bnRlbF9jb250ZXh0X2luZmxpZ2h0X2luYyhycS0+aHdfY29udGV4dCk7CisJaW50ZWxfZ3RfcG1f
Z2V0KHJxLT5lbmdpbmUtPmd0KTsKIAogCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKIH0K
QEAgLTU1MCw2ICs1NTIsNyBAQCBzdGF0aWMgdm9pZCBzY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVf
cmVxdWVzdCAqcnEpCiAJaWYgKCFpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2NvdW50KHJxLT5od19j
b250ZXh0KSkKIAkJcnEtPmh3X2NvbnRleHQtPmluZmxpZ2h0ID0gTlVMTDsKIAorCWludGVsX2d0
X3BtX3B1dChycS0+ZW5naW5lLT5ndCk7CiAJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiB9CiAKQEAg
LTEwNzcsNyArMTA4MCw2IEBAIHN0YXRpYyB2b2lkIGd1Y19pbnRlcnJ1cHRzX3JlbGVhc2Uoc3Ry
dWN0IGludGVsX2d0ICpndCkKIAogc3RhdGljIHZvaWQgZ3VjX3N1Ym1pc3Npb25fcGFyayhzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7Ci0JaW50ZWxfZW5naW5lX3BhcmsoZW5naW5l
KTsKIAlpbnRlbF9lbmdpbmVfdW5waW5fYnJlYWRjcnVtYnNfaXJxKGVuZ2luZSk7CiAJZW5naW5l
LT5mbGFncyAmPSB+STkxNV9FTkdJTkVfTkVFRFNfQlJFQURDUlVNQl9UQVNLTEVUOwogfQpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYwppbmRleCAzYjE1MjY2YzU0ZmQuLjQ0NDQ1NTg5MzIz
MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKQEAgLTQwLDYgKzQwLDcgQEAKICNp
bmNsdWRlICJkaXNwbGF5L2ludGVsX3Bzci5oIgogCiAjaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX2Nv
bnRleHQuaCIKKyNpbmNsdWRlICJndC9pbnRlbF9ndF9wbS5oIgogI2luY2x1ZGUgImd0L2ludGVs
X3Jlc2V0LmgiCiAjaW5jbHVkZSAiZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKIApAQCAt
MzY2NSw2ICszNjY2LDkgQEAgaTkxNV9kcm9wX2NhY2hlc19zZXQodm9pZCAqZGF0YSwgdTY0IHZh
bCkKIAkJCWk5MTVfcmV0aXJlX3JlcXVlc3RzKGk5MTUpOwogCiAJCW11dGV4X3VubG9jaygmaTkx
NS0+ZHJtLnN0cnVjdF9tdXRleCk7CisKKwkJaWYgKHJldCA9PSAwICYmIHZhbCAmIERST1BfSURM
RSkKKwkJCXJldCA9IGludGVsX2d0X3BtX3dhaXRfZm9yX2lkbGUoJmk5MTUtPmd0KTsKIAl9CiAK
IAlpZiAodmFsICYgRFJPUF9SRVNFVF9BQ1RJVkUgJiYgaW50ZWxfZ3RfdGVybWluYWxseV93ZWRn
ZWQoJmk5MTUtPmd0KSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2Vt
LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmluZGV4IDZiYWUwNzNmYjU3MC4u
NjdhMGJjNGRiOWNkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKQEAgLTg5MywxOSArODkzLDYg
QEAgdm9pZCBpOTE1X2dlbV9ydW50aW1lX3N1c3BlbmQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
Kmk5MTUpCiAJfQogfQogCi1zdGF0aWMgaW50IHdhaXRfZm9yX2VuZ2luZXMoc3RydWN0IGludGVs
X2d0ICpndCkKLXsKLQlpZiAod2FpdF9mb3IoaW50ZWxfZW5naW5lc19hcmVfaWRsZShndCksIEk5
MTVfSURMRV9FTkdJTkVTX1RJTUVPVVQpKSB7Ci0JCWRldl9lcnIoZ3QtPmk5MTUtPmRybS5kZXYs
Ci0JCQkiRmFpbGVkIHRvIGlkbGUgZW5naW5lcywgZGVjbGFyaW5nIHdlZGdlZCFcbiIpOwotCQlH
RU1fVFJBQ0VfRFVNUCgpOwotCQlpbnRlbF9ndF9zZXRfd2VkZ2VkKGd0KTsKLQkJcmV0dXJuIC1F
SU87Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KIHN0YXRpYyBsb25nCiB3YWl0X2Zvcl90aW1lbGlu
ZXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCSAgIHVuc2lnbmVkIGludCBmbGFn
cywgbG9uZyB0aW1lb3V0KQpAQCAtOTUzLDI3ICs5NDAsMjAgQEAgaW50IGk5MTVfZ2VtX3dhaXRf
Zm9yX2lkbGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCQkgICB1bnNpZ25lZCBp
bnQgZmxhZ3MsIGxvbmcgdGltZW91dCkKIHsKIAkvKiBJZiB0aGUgZGV2aWNlIGlzIGFzbGVlcCwg
d2UgaGF2ZSBubyByZXF1ZXN0cyBvdXRzdGFuZGluZyAqLwotCWlmICghUkVBRF9PTkNFKGk5MTUt
Pmd0LmF3YWtlKSkKKwlpZiAoIWludGVsX2d0X3BtX2lzX2F3YWtlKCZpOTE1LT5ndCkpCiAJCXJl
dHVybiAwOwogCi0JR0VNX1RSQUNFKCJmbGFncz0leCAoJXMpLCB0aW1lb3V0PSVsZCVzLCBhd2Fr
ZT89JXNcbiIsCisJR0VNX1RSQUNFKCJmbGFncz0leCAoJXMpLCB0aW1lb3V0PSVsZCVzXG4iLAog
CQkgIGZsYWdzLCBmbGFncyAmIEk5MTVfV0FJVF9MT0NLRUQgPyAibG9ja2VkIiA6ICJ1bmxvY2tl
ZCIsCi0JCSAgdGltZW91dCwgdGltZW91dCA9PSBNQVhfU0NIRURVTEVfVElNRU9VVCA/ICIgKGZv
cmV2ZXIpIiA6ICIiLAotCQkgIHllc25vKGk5MTUtPmd0LmF3YWtlKSk7CisJCSAgdGltZW91dCwg
dGltZW91dCA9PSBNQVhfU0NIRURVTEVfVElNRU9VVCA/ICIgKGZvcmV2ZXIpIiA6ICIiKTsKIAog
CXRpbWVvdXQgPSB3YWl0X2Zvcl90aW1lbGluZXMoaTkxNSwgZmxhZ3MsIHRpbWVvdXQpOwogCWlm
ICh0aW1lb3V0IDwgMCkKIAkJcmV0dXJuIHRpbWVvdXQ7CiAKIAlpZiAoZmxhZ3MgJiBJOTE1X1dB
SVRfTE9DS0VEKSB7Ci0JCWludCBlcnI7Ci0KIAkJbG9ja2RlcF9hc3NlcnRfaGVsZCgmaTkxNS0+
ZHJtLnN0cnVjdF9tdXRleCk7CiAKLQkJZXJyID0gd2FpdF9mb3JfZW5naW5lcygmaTkxNS0+Z3Qp
OwotCQlpZiAoZXJyKQotCQkJcmV0dXJuIGVycjsKLQogCQlpOTE1X3JldGlyZV9yZXF1ZXN0cyhp
OTE1KTsKIAl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2Vy
ZWYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwppbmRleCAwNmJkOGIy
MTVjYzIuLmQ0NDQzZTgxYzFjOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfd2FrZXJlZi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuYwpA
QCAtNCwyNSArNCwyNSBAQAogICogQ29weXJpZ2h0IMKpIDIwMTkgSW50ZWwgQ29ycG9yYXRpb24K
ICAqLwogCisjaW5jbHVkZSA8bGludXgvd2FpdF9iaXQuaD4KKwogI2luY2x1ZGUgImludGVsX3J1
bnRpbWVfcG0uaCIKICNpbmNsdWRlICJpbnRlbF93YWtlcmVmLmgiCiAKLXN0YXRpYyB2b2lkIHJw
bV9nZXQoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwgc3RydWN0IGludGVsX3dha2VyZWYg
KndmKQorc3RhdGljIHZvaWQgcnBtX2dldChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7Ci0J
d2YtPndha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldChycG0pOworCXdmLT53YWtlcmVmID0g
aW50ZWxfcnVudGltZV9wbV9nZXQod2YtPnJwbSk7CiB9CiAKLXN0YXRpYyB2b2lkIHJwbV9wdXQo
c3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwgc3RydWN0IGludGVsX3dha2VyZWYgKndmKQor
c3RhdGljIHZvaWQgcnBtX3B1dChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7CiAJaW50ZWxf
d2FrZXJlZl90IHdha2VyZWYgPSBmZXRjaF9hbmRfemVybygmd2YtPndha2VyZWYpOwogCi0JaW50
ZWxfcnVudGltZV9wbV9wdXQocnBtLCB3YWtlcmVmKTsKKwlpbnRlbF9ydW50aW1lX3BtX3B1dCh3
Zi0+cnBtLCB3YWtlcmVmKTsKIAlJTlRFTF9XQUtFUkVGX0JVR19PTighd2FrZXJlZik7CiB9CiAK
LWludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50aW1lX3BtICpy
cG0sCi0JCQkgICAgICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCi0JCQkgICAgICBpbnQgKCpm
bikoc3RydWN0IGludGVsX3dha2VyZWYgKndmKSkKK2ludCBfX2ludGVsX3dha2VyZWZfZ2V0X2Zp
cnN0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsKIAkvKgogCSAqIFRyZWF0IGdldC9wdXQg
YXMgZGlmZmVyZW50IHN1YmNsYXNzZXMsIGFzIHdlIG1heSBuZWVkIHRvIHJ1bgpAQCAtMzQsMTEg
KzM0LDExIEBAIGludCBfX2ludGVsX3dha2VyZWZfZ2V0X2ZpcnN0KHN0cnVjdCBpbnRlbF9ydW50
aW1lX3BtICpycG0sCiAJaWYgKCFhdG9taWNfcmVhZCgmd2YtPmNvdW50KSkgewogCQlpbnQgZXJy
OwogCi0JCXJwbV9nZXQocnBtLCB3Zik7CisJCXJwbV9nZXQod2YpOwogCi0JCWVyciA9IGZuKHdm
KTsKKwkJZXJyID0gd2YtPm9wcy0+Z2V0KHdmKTsKIAkJaWYgKHVubGlrZWx5KGVycikpIHsKLQkJ
CXJwbV9wdXQocnBtLCB3Zik7CisJCQlycG1fcHV0KHdmKTsKIAkJCW11dGV4X3VubG9jaygmd2Yt
Pm11dGV4KTsKIAkJCXJldHVybiBlcnI7CiAJCX0KQEAgLTUyLDI3ICs1Miw2NyBAQCBpbnQgX19p
bnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAogCXJl
dHVybiAwOwogfQogCi1pbnQgX19pbnRlbF93YWtlcmVmX3B1dF9sYXN0KHN0cnVjdCBpbnRlbF9y
dW50aW1lX3BtICpycG0sCi0JCQkgICAgIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKLQkJCSAg
ICAgaW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCitzdGF0aWMgdm9pZCBfX19f
aW50ZWxfd2FrZXJlZl9wdXRfbGFzdChzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiB7Ci0JaW50
IGVycjsKKwlpZiAoIWF0b21pY19kZWNfYW5kX3Rlc3QoJndmLT5jb3VudCkpCisJCWdvdG8gdW5s
b2NrOworCisJaWYgKGxpa2VseSghd2YtPm9wcy0+cHV0KHdmKSkpIHsKKwkJcnBtX3B1dCh3Zik7
CisJCXdha2VfdXBfdmFyKCZ3Zi0+d2FrZXJlZik7CisJfSBlbHNlIHsKKwkJLyogb3BzLT5wdXQo
KSBtdXN0IHNjaGVkdWxlIGl0cyBvd24gcmVsZWFzZSBvbiBkZWZlcnJhbCAqLworCQlhdG9taWNf
c2V0X3JlbGVhc2UoJndmLT5jb3VudCwgMSk7CisJfQogCi0JZXJyID0gZm4od2YpOwotCWlmIChs
aWtlbHkoIWVycikpCi0JCXJwbV9wdXQocnBtLCB3Zik7Ci0JZWxzZQotCQlhdG9taWNfaW5jKCZ3
Zi0+Y291bnQpOwordW5sb2NrOgogCW11dGV4X3VubG9jaygmd2YtPm11dGV4KTsKK30KKwordm9p
ZCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVsX3dha2VyZWYgKndmKQorewor
CUlOVEVMX1dBS0VSRUZfQlVHX09OKHdvcmtfcGVuZGluZygmd2YtPndvcmspKTsKIAotCXJldHVy
biBlcnI7CisJLyogQXNzdW1lIHdlIGFyZSBub3QgaW4gcHJvY2VzcyBjb250ZXh0IGFuZCBzbyBj
YW5ub3Qgc2xlZXAuICovCisJaWYgKHdmLT5vcHMtPmZsYWdzICYgSU5URUxfV0FLRVJFRl9QVVRf
QVNZTkMgfHwKKwkgICAgIW11dGV4X3RyeWxvY2soJndmLT5tdXRleCkpIHsKKwkJc2NoZWR1bGVf
d29yaygmd2YtPndvcmspOworCQlyZXR1cm47CisJfQorCisJX19fX2ludGVsX3dha2VyZWZfcHV0
X2xhc3Qod2YpOwogfQogCi12b2lkIF9faW50ZWxfd2FrZXJlZl9pbml0KHN0cnVjdCBpbnRlbF93
YWtlcmVmICp3Ziwgc3RydWN0IGxvY2tfY2xhc3Nfa2V5ICprZXkpCitzdGF0aWMgdm9pZCBfX2lu
dGVsX3dha2VyZWZfcHV0X3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3cmspCiB7CisJc3RydWN0
IGludGVsX3dha2VyZWYgKndmID0gY29udGFpbmVyX29mKHdyaywgdHlwZW9mKCp3ZiksIHdvcmsp
OworCisJaWYgKGF0b21pY19hZGRfdW5sZXNzKCZ3Zi0+Y291bnQsIC0xLCAxKSkKKwkJcmV0dXJu
OworCisJbXV0ZXhfbG9jaygmd2YtPm11dGV4KTsKKwlfX19faW50ZWxfd2FrZXJlZl9wdXRfbGFz
dCh3Zik7Cit9CisKK3ZvaWQgX19pbnRlbF93YWtlcmVmX2luaXQoc3RydWN0IGludGVsX3dha2Vy
ZWYgKndmLAorCQkJICBzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtLAorCQkJICBjb25zdCBz
dHJ1Y3QgaW50ZWxfd2FrZXJlZl9vcHMgKm9wcywKKwkJCSAgc3RydWN0IGxvY2tfY2xhc3Nfa2V5
ICprZXkpCit7CisJd2YtPnJwbSA9IHJwbTsKKwl3Zi0+b3BzID0gb3BzOworCiAJX19tdXRleF9p
bml0KCZ3Zi0+bXV0ZXgsICJ3YWtlcmVmIiwga2V5KTsKIAlhdG9taWNfc2V0KCZ3Zi0+Y291bnQs
IDApOwogCXdmLT53YWtlcmVmID0gMDsKKworCUlOSVRfV09SSygmd2YtPndvcmssIF9faW50ZWxf
d2FrZXJlZl9wdXRfd29yayk7Cit9CisKK2ludCBpbnRlbF93YWtlcmVmX3dhaXRfZm9yX2lkbGUo
c3RydWN0IGludGVsX3dha2VyZWYgKndmKQoreworCXJldHVybiB3YWl0X3Zhcl9ldmVudF9raWxs
YWJsZSgmd2YtPndha2VyZWYsCisJCQkJICAgICAgICFpbnRlbF93YWtlcmVmX2lzX2FjdGl2ZSh3
ZikpOwogfQogCiBzdGF0aWMgdm9pZCB3YWtlcmVmX2F1dG9fdGltZW91dChzdHJ1Y3QgdGltZXJf
bGlzdCAqdCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYu
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaAppbmRleCAxZDZmNTk4NmU0
ZTUuLjUzNWEzYTEyODY0YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
d2FrZXJlZi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3dha2VyZWYuaApAQCAt
OCwxMCArOCwxMiBAQAogI2RlZmluZSBJTlRFTF9XQUtFUkVGX0gKIAogI2luY2x1ZGUgPGxpbnV4
L2F0b21pYy5oPgorI2luY2x1ZGUgPGxpbnV4L2JpdHMuaD4KICNpbmNsdWRlIDxsaW51eC9tdXRl
eC5oPgogI2luY2x1ZGUgPGxpbnV4L3JlZmNvdW50Lmg+CiAjaW5jbHVkZSA8bGludXgvc3RhY2tk
ZXBvdC5oPgogI2luY2x1ZGUgPGxpbnV4L3RpbWVyLmg+CisjaW5jbHVkZSA8bGludXgvd29ya3F1
ZXVlLmg+CiAKICNpZiBJU19FTkFCTEVEKENPTkZJR19EUk1fSTkxNV9ERUJVRykKICNkZWZpbmUg
SU5URUxfV0FLRVJFRl9CVUdfT04oZXhwcikgQlVHX09OKGV4cHIpCkBAIC0yMCwyOSArMjIsNDIg
QEAKICNlbmRpZgogCiBzdHJ1Y3QgaW50ZWxfcnVudGltZV9wbTsKK3N0cnVjdCBpbnRlbF93YWtl
cmVmOwogCiB0eXBlZGVmIGRlcG90X3N0YWNrX2hhbmRsZV90IGludGVsX3dha2VyZWZfdDsKIAor
c3RydWN0IGludGVsX3dha2VyZWZfb3BzIHsKKwlpbnQgKCpnZXQpKHN0cnVjdCBpbnRlbF93YWtl
cmVmICp3Zik7CisJaW50ICgqcHV0KShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpOworCisJdW5z
aWduZWQgbG9uZyBmbGFnczsKKyNkZWZpbmUgSU5URUxfV0FLRVJFRl9QVVRfQVNZTkMgQklUKDAp
Cit9OworCiBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiB7CiAJYXRvbWljX3QgY291bnQ7CiAJc3RydWN0
IG11dGV4IG11dGV4OworCiAJaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7CisKKwlzdHJ1Y3QgaW50
ZWxfcnVudGltZV9wbSAqcnBtOworCWNvbnN0IHN0cnVjdCBpbnRlbF93YWtlcmVmX29wcyAqb3Bz
OworCisJc3RydWN0IHdvcmtfc3RydWN0IHdvcms7CiB9OwogCiB2b2lkIF9faW50ZWxfd2FrZXJl
Zl9pbml0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKKwkJCSAgc3RydWN0IGludGVsX3J1bnRp
bWVfcG0gKnJwbSwKKwkJCSAgY29uc3Qgc3RydWN0IGludGVsX3dha2VyZWZfb3BzICpvcHMsCiAJ
CQkgIHN0cnVjdCBsb2NrX2NsYXNzX2tleSAqa2V5KTsKLSNkZWZpbmUgaW50ZWxfd2FrZXJlZl9p
bml0KHdmKSBkbyB7CQkJCQlcCisjZGVmaW5lIGludGVsX3dha2VyZWZfaW5pdCh3ZiwgcnBtLCBv
cHMpIGRvIHsJCQkJXAogCXN0YXRpYyBzdHJ1Y3QgbG9ja19jbGFzc19rZXkgX19rZXk7CQkJCVwK
IAkJCQkJCQkJCVwKLQlfX2ludGVsX3dha2VyZWZfaW5pdCgod2YpLCAmX19rZXkpOwkJCQlcCisJ
X19pbnRlbF93YWtlcmVmX2luaXQoKHdmKSwgKHJwbSksIChvcHMpLCAmX19rZXkpOwkJXAogfSB3
aGlsZSAoMCkKIAotaW50IF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3Qoc3RydWN0IGludGVsX3J1
bnRpbWVfcG0gKnJwbSwKLQkJCSAgICAgIHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZiwKLQkJCSAg
ICAgIGludCAoKmZuKShzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpKTsKLWludCBfX2ludGVsX3dh
a2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKLQkJCSAgICAgc3Ry
dWN0IGludGVsX3dha2VyZWYgKndmLAotCQkJICAgICBpbnQgKCpmbikoc3RydWN0IGludGVsX3dh
a2VyZWYgKndmKSk7CitpbnQgX19pbnRlbF93YWtlcmVmX2dldF9maXJzdChzdHJ1Y3QgaW50ZWxf
d2FrZXJlZiAqd2YpOwordm9pZCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qoc3RydWN0IGludGVs
X3dha2VyZWYgKndmKTsKIAogLyoqCiAgKiBpbnRlbF93YWtlcmVmX2dldDogQWNxdWlyZSB0aGUg
d2FrZXJlZgpAQCAtNjEsMTIgKzc2LDEwIEBAIGludCBfX2ludGVsX3dha2VyZWZfcHV0X2xhc3Qo
c3RydWN0IGludGVsX3J1bnRpbWVfcG0gKnJwbSwKICAqIGNvZGUgb3RoZXJ3aXNlLgogICovCiBz
dGF0aWMgaW5saW5lIGludAotaW50ZWxfd2FrZXJlZl9nZXQoc3RydWN0IGludGVsX3J1bnRpbWVf
cG0gKnJwbSwKLQkJICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCi0JCSAgaW50ICgqZm4pKHN0
cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCitpbnRlbF93YWtlcmVmX2dldChzdHJ1Y3QgaW50ZWxf
d2FrZXJlZiAqd2YpCiB7CiAJaWYgKHVubGlrZWx5KCFhdG9taWNfaW5jX25vdF96ZXJvKCZ3Zi0+
Y291bnQpKSkKLQkJcmV0dXJuIF9faW50ZWxfd2FrZXJlZl9nZXRfZmlyc3QocnBtLCB3ZiwgZm4p
OworCQlyZXR1cm4gX19pbnRlbF93YWtlcmVmX2dldF9maXJzdCh3Zik7CiAKIAlyZXR1cm4gMDsK
IH0KQEAgLTEwMiwxNiArMTE1LDEyIEBAIGludGVsX3dha2VyZWZfZ2V0X2lmX2FjdGl2ZShzdHJ1
Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiAgKiBSZXR1cm5zOiAwIGlmIHRoZSB3YWtlcmVmIHdhcyBy
ZWxlYXNlZCBzdWNjZXNzZnVsbHksIG9yIGEgbmVnYXRpdmUgZXJyb3IKICAqIGNvZGUgb3RoZXJ3
aXNlLgogICovCi1zdGF0aWMgaW5saW5lIGludAotaW50ZWxfd2FrZXJlZl9wdXQoc3RydWN0IGlu
dGVsX3J1bnRpbWVfcG0gKnJwbSwKLQkJICBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YsCi0JCSAg
aW50ICgqZm4pKHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikpCitzdGF0aWMgaW5saW5lIHZvaWQK
K2ludGVsX3dha2VyZWZfcHV0KHN0cnVjdCBpbnRlbF93YWtlcmVmICp3ZikKIHsKIAlJTlRFTF9X
QUtFUkVGX0JVR19PTihhdG9taWNfcmVhZCgmd2YtPmNvdW50KSA8PSAwKTsKLQlpZiAoYXRvbWlj
X2RlY19hbmRfbXV0ZXhfbG9jaygmd2YtPmNvdW50LCAmd2YtPm11dGV4KSkKLQkJcmV0dXJuIF9f
aW50ZWxfd2FrZXJlZl9wdXRfbGFzdChycG0sIHdmLCBmbik7Ci0KLQlyZXR1cm4gMDsKKwlpZiAo
dW5saWtlbHkoIWF0b21pY19hZGRfdW5sZXNzKCZ3Zi0+Y291bnQsIC0xLCAxKSkpCisJCV9faW50
ZWxfd2FrZXJlZl9wdXRfbGFzdCh3Zik7CiB9CiAKIC8qKgpAQCAtMTU0LDYgKzE2MywxOSBAQCBp
bnRlbF93YWtlcmVmX2lzX2FjdGl2ZShjb25zdCBzdHJ1Y3QgaW50ZWxfd2FrZXJlZiAqd2YpCiAJ
cmV0dXJuIFJFQURfT05DRSh3Zi0+d2FrZXJlZik7CiB9CiAKKy8qKgorICogaW50ZWxfd2FrZXJl
Zl93YWl0X2Zvcl9pZGxlOiBXYWl0IHVudGlsIHRoZSB3YWtlcmVmIGlzIGlkbGUKKyAqIEB3Zjog
dGhlIHdha2VyZWYKKyAqCisgKiBXYWl0IGZvciB0aGUgZWFybGllciBhc3luY2hyb25vdXMgcmVs
ZWFzZSBvZiB0aGUgd2FrZXJlZi4gTm90ZQorICogdGhpcyB3aWxsIHdhaXQgZm9yIGFueSB0aGly
ZCBwYXJ0eSBhcyB3ZWxsLCBzbyBtYWtlIHN1cmUgeW91IG9ubHkgd2FpdAorICogd2hlbiB5b3Ug
aGF2ZSBjb250cm9sIG92ZXIgdGhlIHdha2VyZWYgYW5kIHRydXN0IG5vIG9uZSBlbHNlIGlzIGFj
cXVpcmluZworICogaXQuCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIGVycm9yIGNvZGUg
aWYga2lsbGVkLgorICovCitpbnQgaW50ZWxfd2FrZXJlZl93YWl0X2Zvcl9pZGxlKHN0cnVjdCBp
bnRlbF93YWtlcmVmICp3Zik7CisKIHN0cnVjdCBpbnRlbF93YWtlcmVmX2F1dG8gewogCXN0cnVj
dCBpbnRlbF9ydW50aW1lX3BtICpycG07CiAJc3RydWN0IHRpbWVyX2xpc3QgdGltZXI7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0ZXN0
cy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMu
aAppbmRleCBhODQxZDNmOWJlZGMuLjFjY2YwZjczMWFjMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9saXZlX3NlbGZ0ZXN0cy5oCkBAIC0xMiwxMCAr
MTIsMTEgQEAKIHNlbGZ0ZXN0KHNhbml0eWNoZWNrLCBpOTE1X2xpdmVfc2FuaXR5Y2hlY2spIC8q
IGtlZXAgZmlyc3QgKGlndCBzZWxmY2hlY2spICovCiBzZWxmdGVzdCh1bmNvcmUsIGludGVsX3Vu
Y29yZV9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KHdvcmthcm91bmRzLCBpbnRlbF93b3JrYXJv
dW5kc19saXZlX3NlbGZ0ZXN0cykKLXNlbGZ0ZXN0KHRpbWVsaW5lcywgaW50ZWxfdGltZWxpbmVf
bGl2ZV9zZWxmdGVzdHMpCitzZWxmdGVzdChndF9lbmdpbmVzLCBpbnRlbF9lbmdpbmVfbGl2ZV9z
ZWxmdGVzdHMpCitzZWxmdGVzdChndF90aW1lbGluZXMsIGludGVsX3RpbWVsaW5lX2xpdmVfc2Vs
ZnRlc3RzKQorc2VsZnRlc3QoZ3RfY29udGV4dHMsIGludGVsX2NvbnRleHRfbGl2ZV9zZWxmdGVz
dHMpCiBzZWxmdGVzdChyZXF1ZXN0cywgaTkxNV9yZXF1ZXN0X2xpdmVfc2VsZnRlc3RzKQogc2Vs
ZnRlc3QoYWN0aXZlLCBpOTE1X2FjdGl2ZV9saXZlX3NlbGZ0ZXN0cykKLXNlbGZ0ZXN0KGd0X2Nv
bnRleHRzLCBpbnRlbF9jb250ZXh0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3Qob2JqZWN0cywg
aTkxNV9nZW1fb2JqZWN0X2xpdmVfc2VsZnRlc3RzKQogc2VsZnRlc3QobW1hbiwgaTkxNV9nZW1f
bW1hbl9saXZlX3NlbGZ0ZXN0cykKIHNlbGZ0ZXN0KGRtYWJ1ZiwgaTkxNV9nZW1fZG1hYnVmX2xp
dmVfc2VsZnRlc3RzKQotLSAKMi4yMy4wLnJjMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlz
dHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4v
bGlzdGluZm8vaW50ZWwtZ2Z4

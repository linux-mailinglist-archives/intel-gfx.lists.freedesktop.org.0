Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id DF112F28DE
	for <lists+intel-gfx@lfdr.de>; Thu,  7 Nov 2019 09:13:25 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C1FFE6EED8;
	Thu,  7 Nov 2019 08:13:13 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id A588F6EEC9
 for <intel-gfx@lists.freedesktop.org>; Thu,  7 Nov 2019 08:13:07 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 19110670-1500050 
 for multiple; Thu, 07 Nov 2019 08:12:56 +0000
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  7 Nov 2019 08:12:37 +0000
Message-Id: <20191107081252.10542-13-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.24.0
In-Reply-To: <20191107081252.10542-1-chris@chris-wilson.co.uk>
References: <20191107081252.10542-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 13/28] drm/i915: Drop GEM context as a direct
 link from i915_request
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

S2VlcCB0aGUgaW50ZWxfY29udGV4dCBhcyBiZWluZyB0aGUgcHJpbWFyeSBzdGF0ZSBmb3IgaTkx
NV9yZXF1ZXN0LCB3aXRoCnRoZSBHRU0gY29udGV4dCBhIGJhY2twb2ludGVyIGZyb20gdGhlIGxv
dyBsZXZlbCBzdGF0ZSBmb3IgdGhlIHJhcmVyCmNhc2VzIHdlIG5lZWQgY2xpZW50IGluZm9ybWF0
aW9uLiBPdXIgZ29hbCBpcyB0byByZW1vdmUgc3VjaCByZWZlcmVuY2VzCnRvIGNsaWVudHMgZnJv
bSB0aGUgYmFja2VuZCwgYW5kIGxlYXZlIHRoZSBIVyBzdWJtaXNzaW9uIGFnbm9zdGljIHRvCmNs
aWVudCBpbnRlcmZhY2VzIGFuZCBzZWxmLWNvbnRhaW5lZC4KClNpZ25lZC1vZmYtYnk6IENocmlz
IFdpbHNvbiA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMgICB8IDE1ICsrLS0tLQogZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaCAgIHwgMzggLS0tLS0tLS0tLS0tLS0tCiAuLi4v
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmggfCAgNyArLS0KIC4uLi9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyAgICB8ICA4ICsrLS0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2JyZWFkY3J1bWJzLmMgICB8ICA0ICstCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmMgICAgICAgfCAgMiArLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oICAgICAgIHwgNDIgKysrKysrKysrKysrKysr
KysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaCB8ICA1ICst
CiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyAgICAgfCAgNiArLS0K
IGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jICAgICAgICAgICB8IDQ3ICsrKysr
KysrKy0tLS0tLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMgICAg
ICAgICB8IDM4ICsrKysrKysrLS0tLS0tLQogLi4uL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yaW5n
X3N1Ym1pc3Npb24uYyAgIHwgMTAgKystLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qvc2VsZnRl
c3RfbHJjLmMgICAgICAgIHwgMjAgKysrKy0tLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfZ3VjX3N1Ym1pc3Npb24uYyB8ICA2ICstLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3Nj
aGVkdWxlci5jICAgICAgICAgIHwgMjcgKysrKystLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZ2VtLmMgICAgICAgICAgICAgICB8ICA2ICstLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9ncHVfZXJyb3IuYyAgICAgICAgIHwgMTEgKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfcGVyZi5jICAgICAgICAgICAgICB8ICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X3JlcXVlc3QuYyAgICAgICAgICAgfCAxOCArKystLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X3JlcXVlc3QuaCAgICAgICAgICAgfCAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9zY2hlZHVsZXIuYyAgICAgICAgIHwgIDIgKy0KIDIxIGZpbGVzIGNoYW5nZWQsIDE2MSBp
bnNlcnRpb25zKCspLCAxNTggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9jb250ZXh0LmMKaW5kZXggNzc0ZDcxYjFlYTliLi5kNjEyMGEyOTE5MzQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuYwpAQCAtNjksNiAr
NjksNyBAQAogCiAjaW5jbHVkZSA8ZHJtL2k5MTVfZHJtLmg+CiAKKyNpbmNsdWRlICJndC9pbnRl
bF9jb250ZXh0LmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfZW5naW5lX2hlYXJ0YmVhdC5oIgogI2lu
Y2x1ZGUgImd0L2ludGVsX2VuZ2luZV91c2VyLmgiCiAjaW5jbHVkZSAiZ3QvaW50ZWxfbHJjX3Jl
Zy5oIgpAQCAtMzg2LDE1ICszODcsNiBAQCBzdGF0aWMgdm9pZCBraWxsX2NvbnRleHQoc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAlzdHJ1Y3QgaTkxNV9nZW1fZW5naW5lc19pdGVyIGl0
OwogCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZTsKIAotCS8qCi0JICogSWYgd2UgYXJlIGFscmVh
ZHkgYmFubmVkLCBpdCB3YXMgZHVlIHRvIGEgZ3VpbHR5IHJlcXVlc3QgY2F1c2luZwotCSAqIGEg
cmVzZXQgYW5kIHRoZSBlbnRpcmUgY29udGV4dCBiZWluZyBldmljdGVkIGZyb20gdGhlIEdQVS4K
LQkgKi8KLQlpZiAoaTkxNV9nZW1fY29udGV4dF9pc19iYW5uZWQoY3R4KSkKLQkJcmV0dXJuOwot
Ci0JaTkxNV9nZW1fY29udGV4dF9zZXRfYmFubmVkKGN0eCk7Ci0KIAkvKgogCSAqIE1hcCB0aGUg
dXNlcidzIGVuZ2luZSBiYWNrIHRvIHRoZSBhY3R1YWwgZW5naW5lczsgb25lIHZpcnR1YWwKIAkg
KiBlbmdpbmUgd2lsbCBiZSBtYXBwZWQgdG8gbXVsdGlwbGUgZW5naW5lcywgYW5kIHVzaW5nIGN0
eC0+ZW5naW5lW10KQEAgLTQwNSw2ICszOTcsOSBAQCBzdGF0aWMgdm9pZCBraWxsX2NvbnRleHQo
c3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKIAlmb3JfZWFjaF9nZW1fZW5naW5lKGNlLCBf
X2NvbnRleHRfZW5naW5lc19zdGF0aWMoY3R4KSwgaXQpIHsKIAkJc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lOwogCisJCWlmIChpbnRlbF9jb250ZXh0X3NldF9iYW5uZWQoY2UpKQorCQkJ
Y29udGludWU7CisKIAkJLyoKIAkJICogQ2hlY2sgdGhlIGN1cnJlbnQgYWN0aXZlIHN0YXRlIG9m
IHRoaXMgY29udGV4dDsgaWYgd2UKIAkJICogYXJlIGN1cnJlbnRseSBleGVjdXRpbmcgb24gdGhl
IEdQVSB3ZSBuZWVkIHRvIGV2aWN0CkBAIC0xMDc1LDcgKzEwNzAsNyBAQCBzdGF0aWMgdm9pZCBz
ZXRfcHBndHRfYmFycmllcih2b2lkICpkYXRhKQogCiBzdGF0aWMgaW50IGVtaXRfcHBndHRfdXBk
YXRlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB2b2lkICpkYXRhKQogewotCXN0cnVjdCBpOTE1
X2FkZHJlc3Nfc3BhY2UgKnZtID0gcnEtPmh3X2NvbnRleHQtPnZtOworCXN0cnVjdCBpOTE1X2Fk
ZHJlc3Nfc3BhY2UgKnZtID0gcnEtPmNvbnRleHQtPnZtOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmVuZ2luZSA9IHJxLT5lbmdpbmU7CiAJdTMyIGJhc2UgPSBlbmdpbmUtPm1taW9fYmFzZTsK
IAl1MzIgKmNzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2Vt
X2NvbnRleHQuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgK
aW5kZXggMThlNTBhNzY5YTZlLi42OTkzMjg5OTgwM2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX2NvbnRleHQuaApAQCAtOTEsMjYgKzkxLDYgQEAgc3RhdGljIGlubGlu
ZSB2b2lkIGk5MTVfZ2VtX2NvbnRleHRfY2xlYXJfcGVyc2lzdGVuY2Uoc3RydWN0IGk5MTVfZ2Vt
X2NvbnRleHQgKmMKIAljbGVhcl9iaXQoVUNPTlRFWFRfUEVSU0lTVEVOQ0UsICZjdHgtPnVzZXJf
ZmxhZ3MpOwogfQogCi1zdGF0aWMgaW5saW5lIGJvb2wgaTkxNV9nZW1fY29udGV4dF9pc19iYW5u
ZWQoY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVzdF9i
aXQoQ09OVEVYVF9CQU5ORUQsICZjdHgtPmZsYWdzKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lk
IGk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4
KQotewotCXNldF9iaXQoQ09OVEVYVF9CQU5ORUQsICZjdHgtPmZsYWdzKTsKLX0KLQotc3RhdGlj
IGlubGluZSBib29sIGk5MTVfZ2VtX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24oY29u
c3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVzdF9iaXQoQ09O
VEVYVF9GT1JDRV9TSU5HTEVfU1VCTUlTU0lPTiwgJmN0eC0+ZmxhZ3MpOwotfQotCi1zdGF0aWMg
aW5saW5lIHZvaWQgaTkxNV9nZW1fY29udGV4dF9zZXRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24o
c3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlfX3NldF9iaXQoQ09OVEVYVF9GT1JD
RV9TSU5HTEVfU1VCTUlTU0lPTiwgJmN0eC0+ZmxhZ3MpOwotfQotCiBzdGF0aWMgaW5saW5lIGJv
b2wKIGk5MTVfZ2VtX2NvbnRleHRfdXNlcl9lbmdpbmVzKGNvbnN0IHN0cnVjdCBpOTE1X2dlbV9j
b250ZXh0ICpjdHgpCiB7CkBAIC0xMjksMjQgKzEwOSw2IEBAIGk5MTVfZ2VtX2NvbnRleHRfY2xl
YXJfdXNlcl9lbmdpbmVzKHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCiAJY2xlYXJfYml0
KENPTlRFWFRfVVNFUl9FTkdJTkVTLCAmY3R4LT5mbGFncyk7CiB9CiAKLXN0YXRpYyBpbmxpbmUg
Ym9vbAotaTkxNV9nZW1fY29udGV4dF9ub3ByZWVtcHQoY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2Nv
bnRleHQgKmN0eCkKLXsKLQlyZXR1cm4gdGVzdF9iaXQoQ09OVEVYVF9OT1BSRUVNUFQsICZjdHgt
PmZsYWdzKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lkCi1pOTE1X2dlbV9jb250ZXh0X3NldF9u
b3ByZWVtcHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCkKLXsKLQlzZXRfYml0KENPTlRF
WFRfTk9QUkVFTVBULCAmY3R4LT5mbGFncyk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgdm9pZAotaTkx
NV9nZW1fY29udGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0
eCkKLXsKLQljbGVhcl9iaXQoQ09OVEVYVF9OT1BSRUVNUFQsICZjdHgtPmZsYWdzKTsKLX0KLQog
c3RhdGljIGlubGluZSBib29sIGk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKHN0cnVjdCBpOTE1
X2dlbV9jb250ZXh0ICpjdHgpCiB7CiAJcmV0dXJuICFjdHgtPmZpbGVfcHJpdjsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmggYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCmluZGV4IDg2
MWQ3ZDkyZmU5Zi4uMzk2MjhjZmY4ZjA2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9nZW0vaTkxNV9nZW1fY29udGV4dF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2dlbS9pOTE1X2dlbV9jb250ZXh0X3R5cGVzLmgKQEAgLTE0MywxMSArMTQzLDggQEAgc3RydWN0
IGk5MTVfZ2VtX2NvbnRleHQgewogCSAqIEBmbGFnczogc21hbGwgc2V0IG9mIGJvb2xlYW5zCiAJ
ICovCiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLSNkZWZpbmUgQ09OVEVYVF9CQU5ORUQJCQkwCi0j
ZGVmaW5lIENPTlRFWFRfQ0xPU0VECQkJMQotI2RlZmluZSBDT05URVhUX0ZPUkNFX1NJTkdMRV9T
VUJNSVNTSU9OCTIKLSNkZWZpbmUgQ09OVEVYVF9VU0VSX0VOR0lORVMJCTMKLSNkZWZpbmUgQ09O
VEVYVF9OT1BSRUVNUFQJCTQKKyNkZWZpbmUgQ09OVEVYVF9DTE9TRUQJCQkwCisjZGVmaW5lIENP
TlRFWFRfVVNFUl9FTkdJTkVTCQkxCiAKIAlzdHJ1Y3QgbXV0ZXggbXV0ZXg7CiAKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVyLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fZXhlY2J1ZmZlci5jCmluZGV4IGU0ZjVjMjY5
MTUwYS4uNmRjODZjMTI5ZWVlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0v
aTkxNV9nZW1fZXhlY2J1ZmZlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9leGVjYnVmZmVyLmMKQEAgLTc0Niw5ICs3NDYsNiBAQCBzdGF0aWMgaW50IGViX2xvb2t1
cF92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogCXVuc2lnbmVkIGludCBpLCBiYXRj
aDsKIAlpbnQgZXJyOwogCi0JaWYgKHVubGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmVk
KGViLT5nZW1fY29udGV4dCkpKQotCQlyZXR1cm4gLUVJTzsKLQogCUlOSVRfTElTVF9IRUFEKCZl
Yi0+cmVsb2NzKTsKIAlJTklUX0xJU1RfSEVBRCgmZWItPnVuYm91bmQpOwogCkBAIC0yMDc4LDcg
KzIwNzUsNyBAQCBzdGF0aWMgaW50IGViX3N1Ym1pdChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICpl
YikKIAlpZiAoZXJyKQogCQlyZXR1cm4gZXJyOwogCi0JaWYgKGk5MTVfZ2VtX2NvbnRleHRfbm9w
cmVlbXB0KGViLT5nZW1fY29udGV4dCkpCisJaWYgKGludGVsX2NvbnRleHRfbm9wcmVlbXB0KGVi
LT5jb250ZXh0KSkKIAkJZWItPnJlcXVlc3QtPmZsYWdzIHw9IEk5MTVfUkVRVUVTVF9OT1BSRUVN
UFQ7CiAKIAlyZXR1cm4gMDsKQEAgLTIxNjQsNiArMjE2MSw5IEBAIHN0YXRpYyBpbnQgX19lYl9w
aW5fZW5naW5lKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViLCBzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UpCiAJaWYgKGVycikKIAkJcmV0dXJuIGVycjsKIAorCWlmICh1bmxpa2VseShpbnRlbF9j
b250ZXh0X2lzX2Jhbm5lZChjZSkpKQorCQlyZXR1cm4gLUVJTzsKKwogCS8qCiAJICogUGlubmlu
ZyB0aGUgY29udGV4dHMgbWF5IGdlbmVyYXRlIHJlcXVlc3RzIGluIG9yZGVyIHRvIGFjcXVpcmUK
IAkgKiBHR1RUIHNwYWNlLCBzbyBkbyB0aGlzIGZpcnN0IGJlZm9yZSB3ZSByZXNlcnZlIGEgc2Vx
bm8gZm9yCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9icmVhZGNy
dW1icy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYwppbmRl
eCA1NTMxNzA4MWQ0OGIuLjJmMTFiZWU2MzhkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3QvaW50ZWxfYnJlYWRjcnVtYnMuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9icmVhZGNydW1icy5jCkBAIC0yNzEsNyArMjcxLDcgQEAgYm9vbCBpOTE1X3JlcXVl
c3RfZW5hYmxlX2JyZWFkY3J1bWIoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiAKIAlpZiAodGVz
dF9iaXQoSTkxNV9GRU5DRV9GTEFHX0FDVElWRSwgJnJxLT5mZW5jZS5mbGFncykpIHsKIAkJc3Ry
dWN0IGludGVsX2JyZWFkY3J1bWJzICpiID0gJnJxLT5lbmdpbmUtPmJyZWFkY3J1bWJzOwotCQlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBycS0+aHdfY29udGV4dDsKKwkJc3RydWN0IGludGVs
X2NvbnRleHQgKmNlID0gcnEtPmNvbnRleHQ7CiAJCXN0cnVjdCBsaXN0X2hlYWQgKnBvczsKIAog
CQlzcGluX2xvY2soJmItPmlycV9sb2NrKTsKQEAgLTMyNiw3ICszMjYsNyBAQCB2b2lkIGk5MTVf
cmVxdWVzdF9jYW5jZWxfYnJlYWRjcnVtYihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAkgKi8K
IAlzcGluX2xvY2soJmItPmlycV9sb2NrKTsKIAlpZiAodGVzdF9iaXQoSTkxNV9GRU5DRV9GTEFH
X1NJR05BTCwgJnJxLT5mZW5jZS5mbGFncykpIHsKLQkJc3RydWN0IGludGVsX2NvbnRleHQgKmNl
ID0gcnEtPmh3X2NvbnRleHQ7CisJCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJxLT5jb250
ZXh0OwogCiAJCWxpc3RfZGVsKCZycS0+c2lnbmFsX2xpbmspOwogCQlpZiAobGlzdF9lbXB0eSgm
Y2UtPnNpZ25hbHMpKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
Y29udGV4dC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5jCmluZGV4
IGVlOWQyYmNkMmMxMy4uNjI1Zjc1Zjc4MjVkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9jb250ZXh0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dC5jCkBAIC0zMDcsNyArMzA3LDcgQEAgaW50IGludGVsX2NvbnRleHRfcHJlcGFy
ZV9yZW1vdGVfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJaW50IGVycjsKIAog
CS8qIE9ubHkgc3VpdGFibGUgZm9yIHVzZSBpbiByZW1vdGVseSBtb2RpZnlpbmcgdGhpcyBjb250
ZXh0ICovCi0JR0VNX0JVR19PTihycS0+aHdfY29udGV4dCA9PSBjZSk7CisJR0VNX0JVR19PTihy
cS0+Y29udGV4dCA9PSBjZSk7CiAKIAlpZiAocmN1X2FjY2Vzc19wb2ludGVyKHJxLT50aW1lbGlu
ZSkgIT0gdGwpIHsgLyogdGltZWxpbmUgc2hhcmluZyEgKi8KIAkJZXJyID0gbXV0ZXhfbG9ja19p
bnRlcnJ1cHRpYmxlX25lc3RlZCgmdGwtPm11dGV4LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfY29udGV4dC5oCmluZGV4IDY4YjNkMzE3ZDk1OS4uMWU2MDczNDNkMjU2IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dC5oCkBAIC03LDcgKzcsOSBAQAogI2lmbmRlZiBf
X0lOVEVMX0NPTlRFWFRfSF9fCiAjZGVmaW5lIF9fSU5URUxfQ09OVEVYVF9IX18KIAorI2luY2x1
ZGUgPGxpbnV4L2JpdG9wcy5oPgogI2luY2x1ZGUgPGxpbnV4L2xvY2tkZXAuaD4KKyNpbmNsdWRl
IDxsaW51eC90eXBlcy5oPgogCiAjaW5jbHVkZSAiaTkxNV9hY3RpdmUuaCIKICNpbmNsdWRlICJp
bnRlbF9jb250ZXh0X3R5cGVzLmgiCkBAIC0xNTMsNCArMTU1LDQ0IEBAIHN0YXRpYyBpbmxpbmUg
c3RydWN0IGludGVsX3JpbmcgKl9faW50ZWxfY29udGV4dF9yaW5nX3NpemUodTY0IHN6KQogCXJl
dHVybiB1NjRfdG9fcHRyKHN0cnVjdCBpbnRlbF9yaW5nLCBzeik7CiB9CiAKK3N0YXRpYyBpbmxp
bmUgYm9vbCBpbnRlbF9jb250ZXh0X2lzX2Jhbm5lZChjb25zdCBzdHJ1Y3QgaW50ZWxfY29udGV4
dCAqY2UpCit7CisJcmV0dXJuIHRlc3RfYml0KENPTlRFWFRfQkFOTkVELCAmY2UtPmZsYWdzKTsK
K30KKworc3RhdGljIGlubGluZSBib29sIGludGVsX2NvbnRleHRfc2V0X2Jhbm5lZChzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqY2UpCit7CisJcmV0dXJuIHRlc3RfYW5kX3NldF9iaXQoQ09OVEVYVF9C
QU5ORUQsICZjZS0+ZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIGJvb2wKK2ludGVsX2NvbnRl
eHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Npb24oY29uc3Qgc3RydWN0IGludGVsX2NvbnRleHQgKmNl
KQoreworCXJldHVybiB0ZXN0X2JpdChDT05URVhUX0ZPUkNFX1NJTkdMRV9TVUJNSVNTSU9OLCAm
Y2UtPmZsYWdzKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkCitpbnRlbF9jb250ZXh0X3NldF9z
aW5nbGVfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJX19zZXRfYml0
KENPTlRFWFRfRk9SQ0VfU0lOR0xFX1NVQk1JU1NJT04sICZjZS0+ZmxhZ3MpOworfQorCitzdGF0
aWMgaW5saW5lIGJvb2wKK2ludGVsX2NvbnRleHRfbm9wcmVlbXB0KGNvbnN0IHN0cnVjdCBpbnRl
bF9jb250ZXh0ICpjZSkKK3sKKwlyZXR1cm4gdGVzdF9iaXQoQ09OVEVYVF9OT1BSRUVNUFQsICZj
ZS0+ZmxhZ3MpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQKK2ludGVsX2NvbnRleHRfc2V0X25v
cHJlZW1wdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCit7CisJc2V0X2JpdChDT05URVhUX05P
UFJFRU1QVCwgJmNlLT5mbGFncyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAoraW50ZWxfY29u
dGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQoreworCWNsZWFy
X2JpdChDT05URVhUX05PUFJFRU1QVCwgJmNlLT5mbGFncyk7Cit9CisKICNlbmRpZiAvKiBfX0lO
VEVMX0NPTlRFWFRfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9jb250ZXh0X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250
ZXh0X3R5cGVzLmgKaW5kZXggNjk1OWIwNWFlNWY4Li4wMjUxZWRjOGY1NjggMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaAorKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0X3R5cGVzLmgKQEAgLTU0LDcgKzU0LDEw
IEBAIHN0cnVjdCBpbnRlbF9jb250ZXh0IHsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRpbWVs
aW5lOwogCiAJdW5zaWduZWQgbG9uZyBmbGFnczsKLSNkZWZpbmUgQ09OVEVYVF9BTExPQ19CSVQg
MAorI2RlZmluZSBDT05URVhUX0FMTE9DX0JJVAkJMAorI2RlZmluZSBDT05URVhUX0JBTk5FRAkJ
CTEKKyNkZWZpbmUgQ09OVEVYVF9GT1JDRV9TSU5HTEVfU1VCTUlTU0lPTgkyCisjZGVmaW5lIENP
TlRFWFRfTk9QUkVFTVBUCQkzCiAKIAl1MzIgKmxyY19yZWdfc3RhdGU7CiAJdTY0IGxyY19kZXNj
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwppbmRleCBmODExM2Jj
NzU2YzYuLmVmZGUzZjhlMDU1OSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
aW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5n
aW5lX2NzLmMKQEAgLTE1MTMsOSArMTUxMyw5IEBAIHZvaWQgaW50ZWxfZW5naW5lX2R1bXAoc3Ry
dWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCiAJCXByaW50X3JlcXVlc3RfcmluZyhtLCBy
cSk7CiAKLQkJaWYgKHJxLT5od19jb250ZXh0LT5scmNfcmVnX3N0YXRlKSB7CisJCWlmIChycS0+
Y29udGV4dC0+bHJjX3JlZ19zdGF0ZSkgewogCQkJZHJtX3ByaW50ZihtLCAiTG9naWNhbCBSaW5n
IENvbnRleHQ6XG4iKTsKLQkJCWhleGR1bXAobSwgcnEtPmh3X2NvbnRleHQtPmxyY19yZWdfc3Rh
dGUsIFBBR0VfU0laRSk7CisJCQloZXhkdW1wKG0sIHJxLT5jb250ZXh0LT5scmNfcmVnX3N0YXRl
LCBQQUdFX1NJWkUpOwogCQl9CiAJfQogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+
YWN0aXZlLmxvY2ssIGZsYWdzKTsKQEAgLTE1NzYsNyArMTU3Niw3IEBAIGludCBpbnRlbF9lbmFi
bGVfZW5naW5lX3N0YXRzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAogCQlmb3Ig
KHBvcnQgPSBleGVjbGlzdHMtPnBlbmRpbmc7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7CiAJCQkv
KiBFeGNsdWRlIGFueSBjb250ZXh0cyBhbHJlYWR5IGNvdW50ZWQgaW4gYWN0aXZlICovCi0JCQlp
ZiAoIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQocnEtPmh3X2NvbnRleHQpKQorCQkJaWYg
KCFpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2NvdW50KHJxLT5jb250ZXh0KSkKIAkJCQllbmdpbmUt
PnN0YXRzLmFjdGl2ZSsrOwogCQl9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5k
ZXggMTk3NWZlNDc3NWQyLi5mODljMDU2Mjc5YTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2xyYy5jCkBAIC04ODcsNyArODg3LDcgQEAgX191bndpbmRfaW5jb21wbGV0ZV9yZXF1ZXN0cyhz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQlsaXN0X21vdmUoJnJxLT5zY2hlZC5s
aW5rLCBwbCk7CiAJCQlhY3RpdmUgPSBycTsKIAkJfSBlbHNlIHsKLQkJCXN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKm93bmVyID0gcnEtPmh3X2NvbnRleHQtPmVuZ2luZTsKKwkJCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKm93bmVyID0gcnEtPmNvbnRleHQtPmVuZ2luZTsKIAogCQkJLyoKIAkJCSAq
IERlY291cGxlIHRoZSB2aXJ0dWFsIGJyZWFkY3J1bWIgYmVmb3JlIG1vdmluZyBpdApAQCAtMTA0
Niw3ICsxMDQ2LDcgQEAgc3RhdGljIGlubGluZSBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICoKIF9f
ZXhlY2xpc3RzX3NjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKiBjb25zdCBlbmdpbmUgPSBycS0+ZW5naW5lOwotCXN0cnVjdCBp
bnRlbF9jb250ZXh0ICogY29uc3QgY2UgPSBycS0+aHdfY29udGV4dDsKKwlzdHJ1Y3QgaW50ZWxf
Y29udGV4dCAqIGNvbnN0IGNlID0gcnEtPmNvbnRleHQ7CiAKIAlpbnRlbF9jb250ZXh0X2dldChj
ZSk7CiAKQEAgLTEwNzUsNyArMTA3NSw3IEBAIF9fZXhlY2xpc3RzX3NjaGVkdWxlX2luKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogc3RhdGljIGlubGluZSBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoK
IGV4ZWNsaXN0c19zY2hlZHVsZV9pbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgaW50IGlkeCkK
IHsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0gcnEtPmh3X2NvbnRleHQ7CisJ
c3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5jb250ZXh0OwogCXN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKm9sZDsKIAogCUdFTV9CVUdfT04oIWludGVsX2VuZ2luZV9wbV9pc19h
d2FrZShycS0+ZW5naW5lKSk7CkBAIC0xMTE4LDcgKzExMTgsNyBAQCBzdGF0aWMgdm9pZCByZXN0
b3JlX2RlZmF1bHRfc3RhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlLAogc3RhdGljIHZvaWQg
cmVzZXRfYWN0aXZlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLAogCQkJIHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0g
cnEtPmh3X2NvbnRleHQ7CisJc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5j
b250ZXh0OwogCXUzMiBoZWFkOwogCiAJLyoKQEAgLTExNTksMTMgKzExNTksMTMgQEAgc3RhdGlj
IGlubGluZSB2b2lkCiBfX2V4ZWNsaXN0c19zY2hlZHVsZV9vdXQoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcnEsCiAJCQkgc3RydWN0IGludGVsX2VuZ2luZV9jcyAqIGNvbnN0IGVuZ2luZSkKIHsKLQlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0gcnEtPmh3X2NvbnRleHQ7CisJc3RydWN0
IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5jb250ZXh0OwogCiAJaW50ZWxfZW5naW5l
X2NvbnRleHRfb3V0KGVuZ2luZSk7CiAJZXhlY2xpc3RzX2NvbnRleHRfc3RhdHVzX2NoYW5nZShy
cSwgSU5URUxfQ09OVEVYVF9TQ0hFRFVMRV9PVVQpOwogCWludGVsX2d0X3BtX3B1dChlbmdpbmUt
Pmd0KTsKIAotCWlmICh1bmxpa2VseShpOTE1X2dlbV9jb250ZXh0X2lzX2Jhbm5lZChjZS0+Z2Vt
X2NvbnRleHQpKSkKKwlpZiAodW5saWtlbHkoaW50ZWxfY29udGV4dF9pc19iYW5uZWQoY2UpKSkK
IAkJcmVzZXRfYWN0aXZlKHJxLCBlbmdpbmUpOwogCiAJLyoKQEAgLTExODYsNyArMTE4Niw3IEBA
IF9fZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIHN0YXRp
YyBpbmxpbmUgdm9pZAogZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqIGNvbnN0IGNlID0gcnEtPmh3X2NvbnRl
eHQ7CisJc3RydWN0IGludGVsX2NvbnRleHQgKiBjb25zdCBjZSA9IHJxLT5jb250ZXh0OwogCXN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmN1ciwgKm9sZDsKIAogCXRyYWNlX2k5MTVfcmVxdWVzdF9v
dXQocnEpOwpAQCAtMTIwMyw3ICsxMjAzLDcgQEAgZXhlY2xpc3RzX3NjaGVkdWxlX291dChzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogc3RhdGljIHU2NCBleGVjbGlzdHNfdXBkYXRlX2NvbnRl
eHQoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7Ci0Jc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlID0gcnEtPmh3X2NvbnRleHQ7CisJc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gcnEt
PmNvbnRleHQ7CiAJdTY0IGRlc2M7CiAKIAljZS0+bHJjX3JlZ19zdGF0ZVtDVFhfUklOR19UQUlM
XSA9CkBAIC0xMjkwLDE5ICsxMjkwLDE4IEBAIGFzc2VydF9wZW5kaW5nX3ZhbGlkKGNvbnN0IHN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMsCiAJfQogCiAJZm9yIChwb3J0
ID0gZXhlY2xpc3RzLT5wZW5kaW5nOyAocnEgPSAqcG9ydCk7IHBvcnQrKykgewotCQlpZiAoY2Ug
PT0gcnEtPmh3X2NvbnRleHQpIHsKKwkJaWYgKGNlID09IHJxLT5jb250ZXh0KSB7CiAJCQlHRU1f
VFJBQ0VfRVJSKCJEdXAgY29udGV4dDolbGx4IGluIHBlbmRpbmdbJXpkXVxuIiwKIAkJCQkgICAg
ICBjZS0+dGltZWxpbmUtPmZlbmNlX2NvbnRleHQsCiAJCQkJICAgICAgcG9ydCAtIGV4ZWNsaXN0
cy0+cGVuZGluZyk7CiAJCQlyZXR1cm4gZmFsc2U7CiAJCX0KIAotCQljZSA9IHJxLT5od19jb250
ZXh0OworCQljZSA9IHJxLT5jb250ZXh0OwogCQlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChy
cSkpCiAJCQljb250aW51ZTsKIAotCQlpZiAoaTkxNV9hY3RpdmVfaXNfaWRsZSgmY2UtPmFjdGl2
ZSkgJiYKLQkJICAgICFpOTE1X2dlbV9jb250ZXh0X2lzX2tlcm5lbChjZS0+Z2VtX2NvbnRleHQp
KSB7CisJCWlmIChpOTE1X2FjdGl2ZV9pc19pZGxlKCZjZS0+YWN0aXZlKSAmJiBjZS0+Z2VtX2Nv
bnRleHQpIHsKIAkJCUdFTV9UUkFDRV9FUlIoIkluYWN0aXZlIGNvbnRleHQ6JWxseCBpbiBwZW5k
aW5nWyV6ZF1cbiIsCiAJCQkJICAgICAgY2UtPnRpbWVsaW5lLT5mZW5jZV9jb250ZXh0LAogCQkJ
CSAgICAgIHBvcnQgLSBleGVjbGlzdHMtPnBlbmRpbmcpOwpAQCAtMTM2Niw3ICsxMzY1LDcgQEAg
c3RhdGljIHZvaWQgZXhlY2xpc3RzX3N1Ym1pdF9wb3J0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUpCiBzdGF0aWMgYm9vbCBjdHhfc2luZ2xlX3BvcnRfc3VibWlzc2lvbihjb25zdCBz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJcmV0dXJuIChJU19FTkFCTEVEKENPTkZJR19E
Uk1fSTkxNV9HVlQpICYmCi0JCWk5MTVfZ2VtX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1pc3Np
b24oY2UtPmdlbV9jb250ZXh0KSk7CisJCWludGVsX2NvbnRleHRfZm9yY2Vfc2luZ2xlX3N1Ym1p
c3Npb24oY2UpKTsKIH0KIAogc3RhdGljIGJvb2wgY2FuX21lcmdlX2N0eChjb25zdCBzdHJ1Y3Qg
aW50ZWxfY29udGV4dCAqcHJldiwKQEAgLTE0MDIsNyArMTQwMSw3IEBAIHN0YXRpYyBib29sIGNh
bl9tZXJnZV9ycShjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpwcmV2LAogCQkgICAgIChJOTE1
X1JFUVVFU1RfTk9QUkVFTVBUIHwgSTkxNV9SRVFVRVNUX1NFTlRJTkVMKSkpCiAJCXJldHVybiBm
YWxzZTsKIAotCWlmICghY2FuX21lcmdlX2N0eChwcmV2LT5od19jb250ZXh0LCBuZXh0LT5od19j
b250ZXh0KSkKKwlpZiAoIWNhbl9tZXJnZV9jdHgocHJldi0+Y29udGV4dCwgbmV4dC0+Y29udGV4
dCkpCiAJCXJldHVybiBmYWxzZTsKIAogCXJldHVybiB0cnVlOwpAQCAtMTU4OSw3ICsxNTg4LDcg
QEAgc3RhdGljIHVuc2lnbmVkIGxvbmcgYWN0aXZlX3ByZWVtcHRfdGltZW91dChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCXJldHVybiAwOwogCiAJLyogRm9yY2UgYSBmYXN0IHJl
c2V0IGZvciB0ZXJtaW5hdGVkIGNvbnRleHRzIChpZ25vcmluZyBzeXNmcyEpICovCi0JaWYgKHVu
bGlrZWx5KGk5MTVfZ2VtX2NvbnRleHRfaXNfYmFubmVkKHJxLT5nZW1fY29udGV4dCkpKQorCWlm
ICh1bmxpa2VseShpbnRlbF9jb250ZXh0X2lzX2Jhbm5lZChycS0+Y29udGV4dCkpKQogCQlyZXR1
cm4gMTsKIAogCXJldHVybiBSRUFEX09OQ0UoZW5naW5lLT5wcm9wcy5wcmVlbXB0X3RpbWVvdXRf
bXMpOwpAQCAtMTY5Nyw3ICsxNjk2LDcgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJICogdGVuZGVuY3kgdG8gaWdub3Jl
IHVzIHJld2luZGluZyB0aGUgVEFJTCB0byB0aGUKIAkJCSAqIGVuZCBvZiBhbiBlYXJsaWVyIHJl
cXVlc3QuCiAJCQkgKi8KLQkJCWxhc3QtPmh3X2NvbnRleHQtPmxyY19kZXNjIHw9IENUWF9ERVND
X0ZPUkNFX1JFU1RPUkU7CisJCQlsYXN0LT5jb250ZXh0LT5scmNfZGVzYyB8PSBDVFhfREVTQ19G
T1JDRV9SRVNUT1JFOwogCQkJbGFzdCA9IE5VTEw7CiAJCX0gZWxzZSBpZiAobmVlZF90aW1lc2xp
Y2UoZW5naW5lLCBsYXN0KSAmJgogCQkJICAgdGltZXJfZXhwaXJlZCgmZW5naW5lLT5leGVjbGlz
dHMudGltZXIpKSB7CkBAIC0xNzc5LDcgKzE3NzgsNyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNf
ZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIAkJR0VNX0JVR19PTihy
cSAhPSB2ZS0+cmVxdWVzdCk7CiAJCUdFTV9CVUdfT04ocnEtPmVuZ2luZSAhPSAmdmUtPmJhc2Up
OwotCQlHRU1fQlVHX09OKHJxLT5od19jb250ZXh0ICE9ICZ2ZS0+Y29udGV4dCk7CisJCUdFTV9C
VUdfT04ocnEtPmNvbnRleHQgIT0gJnZlLT5jb250ZXh0KTsKIAogCQlpZiAocnFfcHJpbyhycSkg
Pj0gcXVldWVfcHJpbyhleGVjbGlzdHMpKSB7CiAJCQlpZiAoIXZpcnR1YWxfbWF0Y2hlcyh2ZSwg
cnEsIGVuZ2luZSkpIHsKQEAgLTE4OTgsNyArMTg5Nyw3IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0
c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQkgKiBzYW1lIExS
Q0EsIGkuZS4gd2UgbXVzdCBzdWJtaXQgMiBkaWZmZXJlbnQKIAkJCQkgKiBjb250ZXh0cyBpZiB3
ZSBzdWJtaXQgMiBFTFNQLgogCQkJCSAqLwotCQkJCWlmIChsYXN0LT5od19jb250ZXh0ID09IHJx
LT5od19jb250ZXh0KQorCQkJCWlmIChsYXN0LT5jb250ZXh0ID09IHJxLT5jb250ZXh0KQogCQkJ
CQlnb3RvIGRvbmU7CiAKIAkJCQlpZiAoaTkxNV9yZXF1ZXN0X2hhc19zZW50aW5lbChsYXN0KSkK
QEAgLTE5MTEsOCArMTkxMCw4IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1ZXVlKHN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCQkgKiB0aGUgc2FtZSBjb250ZXh0IChldmVu
IHRob3VnaCBhIGRpZmZlcmVudAogCQkJCSAqIHJlcXVlc3QpIHRvIHRoZSBzZWNvbmQgcG9ydC4K
IAkJCQkgKi8KLQkJCQlpZiAoY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24obGFzdC0+aHdfY29u
dGV4dCkgfHwKLQkJCQkgICAgY3R4X3NpbmdsZV9wb3J0X3N1Ym1pc3Npb24ocnEtPmh3X2NvbnRl
eHQpKQorCQkJCWlmIChjdHhfc2luZ2xlX3BvcnRfc3VibWlzc2lvbihsYXN0LT5jb250ZXh0KSB8
fAorCQkJCSAgICBjdHhfc2luZ2xlX3BvcnRfc3VibWlzc2lvbihycS0+Y29udGV4dCkpCiAJCQkJ
CWdvdG8gZG9uZTsKIAogCQkJCW1lcmdlID0gZmFsc2U7CkBAIC0xOTI2LDggKzE5MjUsOCBAQCBz
dGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiAJCQkJfQogCiAJCQkJR0VNX0JVR19PTihsYXN0ICYmCi0JCQkJCSAgICFjYW5fbWVyZ2Vf
Y3R4KGxhc3QtPmh3X2NvbnRleHQsCi0JCQkJCQkJICBycS0+aHdfY29udGV4dCkpOworCQkJCQkg
ICAhY2FuX21lcmdlX2N0eChsYXN0LT5jb250ZXh0LAorCQkJCQkJCSAgcnEtPmNvbnRleHQpKTsK
IAogCQkJCXN1Ym1pdCA9IHRydWU7CiAJCQkJbGFzdCA9IHJxOwpAQCAtMjU0MSw3ICsyNTQwLDcg
QEAgc3RhdGljIGludCBleGVjbGlzdHNfcmVxdWVzdF9hbGxvYyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpyZXF1ZXN0KQogewogCWludCByZXQ7CiAKLQlHRU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2lz
X3Bpbm5lZChyZXF1ZXN0LT5od19jb250ZXh0KSk7CisJR0VNX0JVR19PTighaW50ZWxfY29udGV4
dF9pc19waW5uZWQocmVxdWVzdC0+Y29udGV4dCkpOwogCiAJLyoKIAkgKiBGbHVzaCBlbm91Z2gg
c3BhY2UgdG8gcmVkdWNlIHRoZSBsaWtlbGlob29kIG9mIHdhaXRpbmcgYWZ0ZXIKQEAgLTMwNDgs
NyArMzA0Nyw3IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCS8qIFdlIHN0aWxsIGhhdmUgcmVxdWVz
dHMgaW4tZmxpZ2h0OyB0aGUgZW5naW5lIHNob3VsZCBiZSBhY3RpdmUgKi8KIAlHRU1fQlVHX09O
KCFpbnRlbF9lbmdpbmVfcG1faXNfYXdha2UoZW5naW5lKSk7CiAKLQljZSA9IHJxLT5od19jb250
ZXh0OworCWNlID0gcnEtPmNvbnRleHQ7CiAJR0VNX0JVR19PTighaTkxNV92bWFfaXNfcGlubmVk
KGNlLT5zdGF0ZSkpOwogCiAJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKSB7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwppbmRleCBmMDNlMDAwMDUxYzEuLmI0YzBhZDRh
NjA4MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9yZXNldC5jCkBAIC00MCwyNyArNDAs
MzEgQEAgc3RhdGljIHZvaWQgcm13X2NsZWFyX2Z3KHN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29y
ZSwgaTkxNV9yZWdfdCByZWcsIHUzMiBjbHIpCiBzdGF0aWMgdm9pZCBlbmdpbmVfc2tpcF9jb250
ZXh0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZSA9IHJxLT5lbmdpbmU7Ci0Jc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmh1bmdfY3R4
ID0gcnEtPmdlbV9jb250ZXh0OworCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpodW5nX2N0eCA9IHJx
LT5jb250ZXh0OwogCiAJaWYgKCFpOTE1X3JlcXVlc3RfaXNfYWN0aXZlKHJxKSkKLQkJcmV0dXJu
OworCQlycSA9IGxpc3RfZmlyc3RfZW50cnkoJmVuZ2luZS0+YWN0aXZlLnJlcXVlc3RzLAorCQkJ
CSAgICAgIHR5cGVvZigqcnEpLCBzY2hlZC5saW5rKTsKIAogCWxvY2tkZXBfYXNzZXJ0X2hlbGQo
JmVuZ2luZS0+YWN0aXZlLmxvY2spOwogCWxpc3RfZm9yX2VhY2hfZW50cnlfY29udGludWUocnEs
ICZlbmdpbmUtPmFjdGl2ZS5yZXF1ZXN0cywgc2NoZWQubGluaykKLQkJaWYgKHJxLT5nZW1fY29u
dGV4dCA9PSBodW5nX2N0eCkKKwkJaWYgKHJxLT5jb250ZXh0ID09IGh1bmdfY3R4KQogCQkJaTkx
NV9yZXF1ZXN0X3NraXAocnEsIC1FSU8pOwogfQogCi1zdGF0aWMgdm9pZCBjbGllbnRfbWFya19n
dWlsdHkoc3RydWN0IGRybV9pOTE1X2ZpbGVfcHJpdmF0ZSAqZmlsZV9wcml2LAotCQkJICAgICAg
IGNvbnN0IHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCitzdGF0aWMgdm9pZCBjbGllbnRf
bWFya19ndWlsdHkoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGJvb2wgYmFubmVkKQogewotCXVu
c2lnbmVkIGludCBzY29yZTsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gcnEtPmNv
bnRleHQtPmdlbV9jb250ZXh0OworCXN0cnVjdCBkcm1faTkxNV9maWxlX3ByaXZhdGUgKmZpbGVf
cHJpdiA9IGN0eC0+ZmlsZV9wcml2OwogCXVuc2lnbmVkIGxvbmcgcHJldl9oYW5nOworCXVuc2ln
bmVkIGludCBzY29yZTsKIAotCWlmIChpOTE1X2dlbV9jb250ZXh0X2lzX2Jhbm5lZChjdHgpKQor
CWlmIChJU19FUlJfT1JfTlVMTChmaWxlX3ByaXYpKQorCQlyZXR1cm47CisKKwlzY29yZSA9IDA7
CisJaWYgKGJhbm5lZCkKIAkJc2NvcmUgPSBJOTE1X0NMSUVOVF9TQ09SRV9DT05URVhUX0JBTjsK
LQllbHNlCi0JCXNjb3JlID0gMDsKIAogCXByZXZfaGFuZyA9IHhjaGcoJmZpbGVfcHJpdi0+aGFu
Z190aW1lc3RhbXAsIGppZmZpZXMpOwogCWlmICh0aW1lX2JlZm9yZShqaWZmaWVzLCBwcmV2X2hh
bmcgKyBJOTE1X0NMSUVOVF9GQVNUX0hBTkdfSklGRklFUykpCkBAIC03NSw4ICs3OSw5IEBAIHN0
YXRpYyB2b2lkIGNsaWVudF9tYXJrX2d1aWx0eShzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRl
ICpmaWxlX3ByaXYsCiAJfQogfQogCi1zdGF0aWMgYm9vbCBjb250ZXh0X21hcmtfZ3VpbHR5KHN0
cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgpCitzdGF0aWMgYm9vbCBtYXJrX2d1aWx0eShzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0g
cnEtPmNvbnRleHQtPmdlbV9jb250ZXh0OwogCXVuc2lnbmVkIGxvbmcgcHJldl9oYW5nOwogCWJv
b2wgYmFubmVkOwogCWludCBpOwpAQCAtMTAwLDE4ICsxMDUsMTcgQEAgc3RhdGljIGJvb2wgY29u
dGV4dF9tYXJrX2d1aWx0eShzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQogCWlmIChiYW5u
ZWQpIHsKIAkJRFJNX0RFQlVHX0RSSVZFUigiY29udGV4dCAlczogZ3VpbHR5ICVkLCBiYW5uZWRc
biIsCiAJCQkJIGN0eC0+bmFtZSwgYXRvbWljX3JlYWQoJmN0eC0+Z3VpbHR5X2NvdW50KSk7Ci0J
CWk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChjdHgpOworCQlpbnRlbF9jb250ZXh0X3NldF9i
YW5uZWQocnEtPmNvbnRleHQpOwogCX0KIAotCWlmICghSVNfRVJSX09SX05VTEwoY3R4LT5maWxl
X3ByaXYpKQotCQljbGllbnRfbWFya19ndWlsdHkoY3R4LT5maWxlX3ByaXYsIGN0eCk7CisJY2xp
ZW50X21hcmtfZ3VpbHR5KHJxLCBiYW5uZWQpOwogCiAJcmV0dXJuIGJhbm5lZDsKIH0KIAotc3Rh
dGljIHZvaWQgY29udGV4dF9tYXJrX2lubm9jZW50KHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpj
dHgpCitzdGF0aWMgdm9pZCBtYXJrX2lubm9jZW50KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQog
ewotCWF0b21pY19pbmMoJmN0eC0+YWN0aXZlX2NvdW50KTsKKwlhdG9taWNfaW5jKCZycS0+Y29u
dGV4dC0+Z2VtX2NvbnRleHQtPmFjdGl2ZV9jb3VudCk7CiB9CiAKIHZvaWQgX19pOTE1X3JlcXVl
c3RfcmVzZXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEsIGJvb2wgZ3VpbHR5KQpAQCAtMTI2LDEx
ICsxMzAsMTEgQEAgdm9pZCBfX2k5MTVfcmVxdWVzdF9yZXNldChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSwgYm9vbCBndWlsdHkpCiAKIAlpZiAoZ3VpbHR5KSB7CiAJCWk5MTVfcmVxdWVzdF9za2lw
KHJxLCAtRUlPKTsKLQkJaWYgKGNvbnRleHRfbWFya19ndWlsdHkocnEtPmdlbV9jb250ZXh0KSkK
KwkJaWYgKG1hcmtfZ3VpbHR5KHJxKSkKIAkJCWVuZ2luZV9za2lwX2NvbnRleHQocnEpOwogCX0g
ZWxzZSB7CiAJCWRtYV9mZW5jZV9zZXRfZXJyb3IoJnJxLT5mZW5jZSwgLUVBR0FJTik7Ci0JCWNv
bnRleHRfbWFya19pbm5vY2VudChycS0+Z2VtX2NvbnRleHQpOworCQltYXJrX2lubm9jZW50KHJx
KTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ19zdWJt
aXNzaW9uLmMKaW5kZXggYTQ3ZDVhN2MzMmM5Li4xYzJmM2MzYTg4NDAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jpbmdfc3VibWlzc2lvbi5jCkBAIC0xNDg1LDcgKzE0
ODUsNyBAQCBzdGF0aWMgaW5saW5lIGludCBtaV9zZXRfY29udGV4dChzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSwgdTMyIGZsYWdzKQogCiAJKmNzKysgPSBNSV9OT09QOwogCSpjcysrID0gTUlfU0VU
X0NPTlRFWFQ7Ci0JKmNzKysgPSBpOTE1X2dndHRfb2Zmc2V0KHJxLT5od19jb250ZXh0LT5zdGF0
ZSkgfCBmbGFnczsKKwkqY3MrKyA9IGk5MTVfZ2d0dF9vZmZzZXQocnEtPmNvbnRleHQtPnN0YXRl
KSB8IGZsYWdzOwogCS8qCiAJICogdy9hOiBNSV9TRVRfQ09OVEVYVCBtdXN0IGFsd2F5cyBiZSBm
b2xsb3dlZCBieSBNSV9OT09QCiAJICogV2FNaVNldENvbnRleHRfSGFuZzpzbmIsaXZiLHZsdgpA
QCAtMTU1NSw3ICsxNTU1LDcgQEAgc3RhdGljIGludCByZW1hcF9sM19zbGljZShzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpycSwgaW50IHNsaWNlKQogCiBzdGF0aWMgaW50IHJlbWFwX2wzKHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKQogewotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHggPSBycS0+
Z2VtX2NvbnRleHQ7CisJc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJxLT5jb250ZXh0
LT5nZW1fY29udGV4dDsKIAlpbnQgaSwgZXJyOwogCiAJaWYgKCFjdHgtPnJlbWFwX3NsaWNlKQpA
QCAtMTU3Niw3ICsxNTc2LDcgQEAgc3RhdGljIGludCByZW1hcF9sMyhzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKIAogc3RhdGljIGludCBzd2l0Y2hfY29udGV4dChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBycS0+aHdfY29udGV4dDsKKwlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBycS0+Y29udGV4dDsKIAlzdHJ1Y3QgaTkxNV9hZGRy
ZXNzX3NwYWNlICp2bSA9IHZtX2FsaWFzKGNlKTsKIAlpbnQgcmV0OwogCkBAIC0xNjAxLDcgKzE2
MDEsNyBAQCBzdGF0aWMgaW50IHN3aXRjaF9jb250ZXh0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogCQkgKiBpcyBwdXJlbHkgdXNlZCBmb3IgZmx1c2hpbmcgdXNlciBjb250ZXh0cy4KIAkJICov
CiAJCWh3X2ZsYWdzID0gMDsKLQkJaWYgKGk5MTVfZ2VtX2NvbnRleHRfaXNfa2VybmVsKHJxLT5n
ZW1fY29udGV4dCkpCisJCWlmIChpOTE1X2dlbV9jb250ZXh0X2lzX2tlcm5lbChycS0+Y29udGV4
dC0+Z2VtX2NvbnRleHQpKQogCQkJaHdfZmxhZ3MgPSBNSV9SRVNUT1JFX0lOSElCSVQ7CiAKIAkJ
cmV0ID0gbWlfc2V0X2NvbnRleHQocnEsIGh3X2ZsYWdzKTsKQEAgLTE2NDgsNyArMTY0OCw3IEBA
IHN0YXRpYyBpbnQgcmluZ19yZXF1ZXN0X2FsbG9jKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVl
c3QpCiB7CiAJaW50IHJldDsKIAotCUdFTV9CVUdfT04oIWludGVsX2NvbnRleHRfaXNfcGlubmVk
KHJlcXVlc3QtPmh3X2NvbnRleHQpKTsKKwlHRU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2lzX3Bp
bm5lZChyZXF1ZXN0LT5jb250ZXh0KSk7CiAJR0VNX0JVR19PTihpOTE1X3JlcXVlc3RfdGltZWxp
bmUocmVxdWVzdCktPmhhc19pbml0aWFsX2JyZWFkY3J1bWIpOwogCiAJLyoKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ3Qvc2VsZnRlc3RfbHJjLmMKaW5kZXggZDFlZDNjMGY4NTFjLi43ZDU3MTNlYTZiZGUg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3NlbGZ0ZXN0X2xyYy5jCkBAIC0xMTg3LDEzICsxMTg3
LDEzIEBAIHN0YXRpYyBpbnQgX19jYW5jZWxfYWN0aXZlMChzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2Nh
bmNlbCAqYXJnKQogCQkJCV9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFtZSkpCiAJCXJldHVybiAt
RUlPOwogCi0JY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5hLmN0eC0+ZmxhZ3MpOwog
CXJxID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5hLnNwaW4sCiAJCQkJICAgIGFyZy0+
YS5jdHgsIGFyZy0+ZW5naW5lLAogCQkJCSAgICBNSV9BUkJfQ0hFQ0spOwogCWlmIChJU19FUlIo
cnEpKQogCQlyZXR1cm4gUFRSX0VSUihycSk7CiAKKwljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQs
ICZycS0+Y29udGV4dC0+ZmxhZ3MpOwogCWk5MTVfcmVxdWVzdF9nZXQocnEpOwogCWk5MTVfcmVx
dWVzdF9hZGQocnEpOwogCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJmFyZy0+YS5zcGluLCBy
cSkpIHsKQEAgLTEyMDEsNyArMTIwMSw3IEBAIHN0YXRpYyBpbnQgX19jYW5jZWxfYWN0aXZlMChz
dHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQogCQlnb3RvIG91dDsKIAl9CiAKLQlpOTE1
X2dlbV9jb250ZXh0X3NldF9iYW5uZWQoYXJnLT5hLmN0eCk7CisJaW50ZWxfY29udGV4dF9zZXRf
YmFubmVkKHJxLT5jb250ZXh0KTsKIAllcnIgPSBpbnRlbF9lbmdpbmVfcHVsc2UoYXJnLT5lbmdp
bmUpOwogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwpAQCAtMTIzNiwxMyArMTIzNiwxMyBAQCBzdGF0
aWMgaW50IF9fY2FuY2VsX2FjdGl2ZTEoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykK
IAkJCQlfX2Z1bmNfXywgYXJnLT5lbmdpbmUtPm5hbWUpKQogCQlyZXR1cm4gLUVJTzsKIAotCWNs
ZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJmFyZy0+YS5jdHgtPmZsYWdzKTsKIAlycVswXSA9IHNw
aW5uZXJfY3JlYXRlX3JlcXVlc3QoJmFyZy0+YS5zcGluLAogCQkJCSAgICAgICBhcmctPmEuY3R4
LCBhcmctPmVuZ2luZSwKIAkJCQkgICAgICAgTUlfTk9PUCk7IC8qIG5vIHByZWVtcHRpb24gKi8K
IAlpZiAoSVNfRVJSKHJxWzBdKSkKIAkJcmV0dXJuIFBUUl9FUlIocnFbMF0pOwogCisJY2xlYXJf
Yml0KENPTlRFWFRfQkFOTkVELCAmcnFbMF0tPmNvbnRleHQtPmZsYWdzKTsKIAlpOTE1X3JlcXVl
c3RfZ2V0KHJxWzBdKTsKIAlpOTE1X3JlcXVlc3RfYWRkKHJxWzBdKTsKIAlpZiAoIWlndF93YWl0
X2Zvcl9zcGlubmVyKCZhcmctPmEuc3BpbiwgcnFbMF0pKSB7CkBAIC0xMjUwLDcgKzEyNTAsNiBA
QCBzdGF0aWMgaW50IF9fY2FuY2VsX2FjdGl2ZTEoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwg
KmFyZykKIAkJZ290byBvdXQ7CiAJfQogCi0JY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJn
LT5iLmN0eC0+ZmxhZ3MpOwogCXJxWzFdID0gc3Bpbm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5i
LnNwaW4sCiAJCQkJICAgICAgIGFyZy0+Yi5jdHgsIGFyZy0+ZW5naW5lLAogCQkJCSAgICAgICBN
SV9BUkJfQ0hFQ0spOwpAQCAtMTI1OSwxMyArMTI1OCwxNCBAQCBzdGF0aWMgaW50IF9fY2FuY2Vs
X2FjdGl2ZTEoc3RydWN0IGxpdmVfcHJlZW1wdF9jYW5jZWwgKmFyZykKIAkJZ290byBvdXQ7CiAJ
fQogCisJY2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmcnFbMV0tPmNvbnRleHQtPmZsYWdzKTsK
IAlpOTE1X3JlcXVlc3RfZ2V0KHJxWzFdKTsKIAllcnIgPSBpOTE1X3JlcXVlc3RfYXdhaXRfZG1h
X2ZlbmNlKHJxWzFdLCAmcnFbMF0tPmZlbmNlKTsKIAlpOTE1X3JlcXVlc3RfYWRkKHJxWzFdKTsK
IAlpZiAoZXJyKQogCQlnb3RvIG91dDsKIAotCWk5MTVfZ2VtX2NvbnRleHRfc2V0X2Jhbm5lZChh
cmctPmIuY3R4KTsKKwlpbnRlbF9jb250ZXh0X3NldF9iYW5uZWQocnFbMV0tPmNvbnRleHQpOwog
CWVyciA9IGludGVsX2VuZ2luZV9wdWxzZShhcmctPmVuZ2luZSk7CiAJaWYgKGVycikKIAkJZ290
byBvdXQ7CkBAIC0xMzA4LDEzICsxMzA4LDEzIEBAIHN0YXRpYyBpbnQgX19jYW5jZWxfcXVldWVk
KHN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsICphcmcpCiAJCQkJX19mdW5jX18sIGFyZy0+ZW5n
aW5lLT5uYW1lKSkKIAkJcmV0dXJuIC1FSU87CiAKLQljbGVhcl9iaXQoQ09OVEVYVF9CQU5ORUQs
ICZhcmctPmEuY3R4LT5mbGFncyk7CiAJcnFbMF0gPSBzcGlubmVyX2NyZWF0ZV9yZXF1ZXN0KCZh
cmctPmEuc3BpbiwKIAkJCQkgICAgICAgYXJnLT5hLmN0eCwgYXJnLT5lbmdpbmUsCiAJCQkJICAg
ICAgIE1JX0FSQl9DSEVDSyk7CiAJaWYgKElTX0VSUihycVswXSkpCiAJCXJldHVybiBQVFJfRVJS
KHJxWzBdKTsKIAorCWNsZWFyX2JpdChDT05URVhUX0JBTk5FRCwgJnJxWzBdLT5jb250ZXh0LT5m
bGFncyk7CiAJaTkxNV9yZXF1ZXN0X2dldChycVswXSk7CiAJaTkxNV9yZXF1ZXN0X2FkZChycVsw
XSk7CiAJaWYgKCFpZ3Rfd2FpdF9mb3Jfc3Bpbm5lcigmYXJnLT5hLnNwaW4sIHJxWzBdKSkgewpA
QCAtMTMyMiwxMyArMTMyMiwxMyBAQCBzdGF0aWMgaW50IF9fY2FuY2VsX3F1ZXVlZChzdHJ1Y3Qg
bGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQogCQlnb3RvIG91dDsKIAl9CiAKLQljbGVhcl9iaXQo
Q09OVEVYVF9CQU5ORUQsICZhcmctPmIuY3R4LT5mbGFncyk7CiAJcnFbMV0gPSBpZ3RfcmVxdWVz
dF9hbGxvYyhhcmctPmIuY3R4LCBhcmctPmVuZ2luZSk7CiAJaWYgKElTX0VSUihycVsxXSkpIHsK
IAkJZXJyID0gUFRSX0VSUihycVsxXSk7CiAJCWdvdG8gb3V0OwogCX0KIAorCWNsZWFyX2JpdChD
T05URVhUX0JBTk5FRCwgJnJxWzFdLT5jb250ZXh0LT5mbGFncyk7CiAJaTkxNV9yZXF1ZXN0X2dl
dChycVsxXSk7CiAJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X2RtYV9mZW5jZShycVsxXSwgJnJx
WzBdLT5mZW5jZSk7CiAJaTkxNV9yZXF1ZXN0X2FkZChycVsxXSk7CkBAIC0xMzQ5LDcgKzEzNDks
NyBAQCBzdGF0aWMgaW50IF9fY2FuY2VsX3F1ZXVlZChzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNl
bCAqYXJnKQogCWlmIChlcnIpCiAJCWdvdG8gb3V0OwogCi0JaTkxNV9nZW1fY29udGV4dF9zZXRf
YmFubmVkKGFyZy0+YS5jdHgpOworCWludGVsX2NvbnRleHRfc2V0X2Jhbm5lZChycVsyXS0+Y29u
dGV4dCk7CiAJZXJyID0gaW50ZWxfZW5naW5lX3B1bHNlKGFyZy0+ZW5naW5lKTsKIAlpZiAoZXJy
KQogCQlnb3RvIG91dDsKQEAgLTEzOTYsMTMgKzEzOTYsMTMgQEAgc3RhdGljIGludCBfX2NhbmNl
bF9ob3N0aWxlKHN0cnVjdCBsaXZlX3ByZWVtcHRfY2FuY2VsICphcmcpCiAJCXJldHVybiAwOwog
CiAJR0VNX1RSQUNFKCIlcyglcylcbiIsIF9fZnVuY19fLCBhcmctPmVuZ2luZS0+bmFtZSk7Ci0J
Y2xlYXJfYml0KENPTlRFWFRfQkFOTkVELCAmYXJnLT5hLmN0eC0+ZmxhZ3MpOwogCXJxID0gc3Bp
bm5lcl9jcmVhdGVfcmVxdWVzdCgmYXJnLT5hLnNwaW4sCiAJCQkJICAgIGFyZy0+YS5jdHgsIGFy
Zy0+ZW5naW5lLAogCQkJCSAgICBNSV9OT09QKTsgLyogcHJlZW1wdGlvbiBkaXNhYmxlZCAqLwog
CWlmIChJU19FUlIocnEpKQogCQlyZXR1cm4gUFRSX0VSUihycSk7CiAKKwljbGVhcl9iaXQoQ09O
VEVYVF9CQU5ORUQsICZycS0+Y29udGV4dC0+ZmxhZ3MpOwogCWk5MTVfcmVxdWVzdF9nZXQocnEp
OwogCWk5MTVfcmVxdWVzdF9hZGQocnEpOwogCWlmICghaWd0X3dhaXRfZm9yX3NwaW5uZXIoJmFy
Zy0+YS5zcGluLCBycSkpIHsKQEAgLTE0MTAsNyArMTQxMCw3IEBAIHN0YXRpYyBpbnQgX19jYW5j
ZWxfaG9zdGlsZShzdHJ1Y3QgbGl2ZV9wcmVlbXB0X2NhbmNlbCAqYXJnKQogCQlnb3RvIG91dDsK
IAl9CiAKLQlpOTE1X2dlbV9jb250ZXh0X3NldF9iYW5uZWQoYXJnLT5hLmN0eCk7CisJaW50ZWxf
Y29udGV4dF9zZXRfYmFubmVkKHJxLT5jb250ZXh0KTsKIAllcnIgPSBpbnRlbF9lbmdpbmVfcHVs
c2UoYXJnLT5lbmdpbmUpOyAvKiBmb3JjZSByZXNldCAqLwogCWlmIChlcnIpCiAJCWdvdG8gb3V0
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1p
c3Npb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9u
LmMKaW5kZXggMjQ5OGM1NWUwZWE1Li4wODI2N2QyYzNjZmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uYwpAQCAtNDcxLDcgKzQ3MSw3
IEBAIHN0YXRpYyB2b2lkIGd1Y19hZGRfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGll
bnQgPSBndWMtPmV4ZWNidWZfY2xpZW50OwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2lu
ZSA9IHJxLT5lbmdpbmU7Ci0JdTMyIGN0eF9kZXNjID0gbG93ZXJfMzJfYml0cyhycS0+aHdfY29u
dGV4dC0+bHJjX2Rlc2MpOworCXUzMiBjdHhfZGVzYyA9IGxvd2VyXzMyX2JpdHMocnEtPmNvbnRl
eHQtPmxyY19kZXNjKTsKIAl1MzIgcmluZ190YWlsID0gaW50ZWxfcmluZ19zZXRfdGFpbChycS0+
cmluZywgcnEtPnRhaWwpIC8gc2l6ZW9mKHU2NCk7CiAKIAlndWNfd3FfaXRlbV9hcHBlbmQoY2xp
ZW50LCBlbmdpbmUtPmd1Y19pZCwgY3R4X2Rlc2MsCkBAIC01NzIsNyArNTcyLDcgQEAgc3RhdGlj
IHZvaWQgX19ndWNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCWlu
dCBpOwogCiAJCXByaW9saXN0X2Zvcl9lYWNoX3JlcXVlc3RfY29uc3VtZShycSwgcm4sIHAsIGkp
IHsKLQkJCWlmIChsYXN0ICYmIHJxLT5od19jb250ZXh0ICE9IGxhc3QtPmh3X2NvbnRleHQpIHsK
KwkJCWlmIChsYXN0ICYmIHJxLT5jb250ZXh0ICE9IGxhc3QtPmNvbnRleHQpIHsKIAkJCQlpZiAo
cG9ydCA9PSBsYXN0X3BvcnQpCiAJCQkJCWdvdG8gZG9uZTsKIApAQCAtNjc3LDcgKzY3Nyw3IEBA
IHN0YXRpYyB2b2lkIGd1Y19yZXNldChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGJv
b2wgc3RhbGxlZCkKIAkJc3RhbGxlZCA9IGZhbHNlOwogCiAJX19pOTE1X3JlcXVlc3RfcmVzZXQo
cnEsIHN0YWxsZWQpOwotCWludGVsX2xyX2NvbnRleHRfcmVzZXQoZW5naW5lLCBycS0+aHdfY29u
dGV4dCwgcnEtPmhlYWQsIHN0YWxsZWQpOworCWludGVsX2xyX2NvbnRleHRfcmVzZXQoZW5naW5l
LCBycS0+Y29udGV4dCwgcnEtPmhlYWQsIHN0YWxsZWQpOwogCiBvdXRfdW5sb2NrOgogCXNwaW5f
dW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d2dC9zY2hlZHVsZXIuYwppbmRleCA1YjJhN2QwNzJlYzkuLjIyOGM2NjUzNGUyMSAx
MDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Z0L3NjaGVkdWxlci5jCisrKyBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d2dC9zY2hlZHVsZXIuYwpAQCAtNTksNyArNTksNyBAQCBzdGF0
aWMgdm9pZCBzZXRfY29udGV4dF9wZHBfcm9vdF9wb2ludGVyKAogc3RhdGljIHZvaWQgdXBkYXRl
X3NoYWRvd19wZHBzKHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqY3R4X29iaiA9Ci0JCXdvcmtsb2FkLT5yZXEtPmh3
X2NvbnRleHQtPnN0YXRlLT5vYmo7CisJCXdvcmtsb2FkLT5yZXEtPmNvbnRleHQtPnN0YXRlLT5v
Ymo7CiAJc3RydWN0IGV4ZWNsaXN0X3JpbmdfY29udGV4dCAqc2hhZG93X3JpbmdfY29udGV4dDsK
IAlzdHJ1Y3QgcGFnZSAqcGFnZTsKIApAQCAtMTMwLDcgKzEzMCw3IEBAIHN0YXRpYyBpbnQgcG9w
dWxhdGVfc2hhZG93X2NvbnRleHQoc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmtsb2Fk
KQogCXN0cnVjdCBpbnRlbF9ndnQgKmd2dCA9IHZncHUtPmd2dDsKIAlpbnQgcmluZ19pZCA9IHdv
cmtsb2FkLT5yaW5nX2lkOwogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpjdHhfb2JqID0K
LQkJd29ya2xvYWQtPnJlcS0+aHdfY29udGV4dC0+c3RhdGUtPm9iajsKKwkJd29ya2xvYWQtPnJl
cS0+Y29udGV4dC0+c3RhdGUtPm9iajsKIAlzdHJ1Y3QgZXhlY2xpc3RfcmluZ19jb250ZXh0ICpz
aGFkb3dfcmluZ19jb250ZXh0OwogCXN0cnVjdCBwYWdlICpwYWdlOwogCXZvaWQgKmRzdDsKQEAg
LTIwNSw5ICsyMDUsOSBAQCBzdGF0aWMgaW50IHBvcHVsYXRlX3NoYWRvd19jb250ZXh0KHN0cnVj
dCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGlj
IGlubGluZSBib29sIGlzX2d2dF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcSkKK3N0
YXRpYyBpbmxpbmUgYm9vbCBpc19ndnRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkK
IHsKLQlyZXR1cm4gaTkxNV9nZW1fY29udGV4dF9mb3JjZV9zaW5nbGVfc3VibWlzc2lvbihyZXEt
PmdlbV9jb250ZXh0KTsKKwlyZXR1cm4gaW50ZWxfY29udGV4dF9mb3JjZV9zaW5nbGVfc3VibWlz
c2lvbihycS0+Y29udGV4dCk7CiB9CiAKIHN0YXRpYyB2b2lkIHNhdmVfcmluZ19od19zdGF0ZShz
dHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSwgaW50IHJpbmdfaWQpCkBAIC0zMDcsNyArMzA3LDcgQEAg
c3RhdGljIGludCBjb3B5X3dvcmtsb2FkX3RvX3JpbmdfYnVmZmVyKHN0cnVjdCBpbnRlbF92Z3B1
X3dvcmtsb2FkICp3b3JrbG9hZCkKIAl1MzIgKmNzOwogCWludCBlcnI7CiAKLQlpZiAoSVNfR0VO
KHJlcS0+aTkxNSwgOSkgJiYgaXNfaW5oaWJpdF9jb250ZXh0KHJlcS0+aHdfY29udGV4dCkpCisJ
aWYgKElTX0dFTihyZXEtPmk5MTUsIDkpICYmIGlzX2luaGliaXRfY29udGV4dChyZXEtPmNvbnRl
eHQpKQogCQlpbnRlbF92Z3B1X3Jlc3RvcmVfaW5oaWJpdF9jb250ZXh0KHZncHUsIHJlcSk7CiAK
IAkvKgpAQCAtMzYzLDExICszNjMsMTAgQEAgc3RhdGljIHZvaWQgcmVsZWFzZV9zaGFkb3dfd2Ff
Y3R4KHN0cnVjdCBpbnRlbF9zaGFkb3dfd2FfY3R4ICp3YV9jdHgpCiB9CiAKIHN0YXRpYyB2b2lk
IHNldF9jb250ZXh0X3BwZ3R0X2Zyb21fc2hhZG93KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2Fk
ICp3b3JrbG9hZCwKLQkJCQkJICBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4KQorCQkJCQkg
IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfdmdwdV9tbSAqbW0g
PSB3b3JrbG9hZC0+c2hhZG93X21tOwotCXN0cnVjdCBpOTE1X3BwZ3R0ICpwcGd0dCA9Ci0JCWk5
MTVfdm1fdG9fcHBndHQoaTkxNV9nZW1fY29udGV4dF9nZXRfdm1fcmN1KGN0eCkpOworCXN0cnVj
dCBpOTE1X3BwZ3R0ICpwcGd0dCA9IGk5MTVfdm1fdG9fcHBndHQoY2UtPnZtKTsKIAlpbnQgaSA9
IDA7CiAKIAlpZiAobW0tPnBwZ3R0X21tLnJvb3RfZW50cnlfdHlwZSA9PSBHVFRfVFlQRV9QUEdU
VF9ST09UX0w0X0VOVFJZKSB7CkBAIC0zODAsOCArMzc5LDYgQEAgc3RhdGljIHZvaWQgc2V0X2Nv
bnRleHRfcHBndHRfZnJvbV9zaGFkb3coc3RydWN0IGludGVsX3ZncHVfd29ya2xvYWQgKndvcmts
b2FkLAogCQkJcHhfZG1hKHBkKSA9IG1tLT5wcGd0dF9tbS5zaGFkb3dfcGRwc1tpXTsKIAkJfQog
CX0KLQotCWk5MTVfdm1fcHV0KCZwcGd0dC0+dm0pOwogfQogCiBzdGF0aWMgaW50CkBAIC01Mjks
NyArNTI2LDcgQEAgc3RhdGljIHZvaWQgdXBkYXRlX3dhX2N0eF8yX3NoYWRvd19jdHgoc3RydWN0
IGludGVsX3NoYWRvd193YV9jdHggKndhX2N0eCkKIAkJY29udGFpbmVyX29mKHdhX2N0eCwgc3Ry
dWN0IGludGVsX3ZncHVfd29ya2xvYWQsIHdhX2N0eCk7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAq
cnEgPSB3b3JrbG9hZC0+cmVxOwogCXN0cnVjdCBleGVjbGlzdF9yaW5nX2NvbnRleHQgKnNoYWRv
d19yaW5nX2NvbnRleHQgPQotCQkoc3RydWN0IGV4ZWNsaXN0X3JpbmdfY29udGV4dCAqKXJxLT5o
d19jb250ZXh0LT5scmNfcmVnX3N0YXRlOworCQkoc3RydWN0IGV4ZWNsaXN0X3JpbmdfY29udGV4
dCAqKXJxLT5jb250ZXh0LT5scmNfcmVnX3N0YXRlOwogCiAJc2hhZG93X3JpbmdfY29udGV4dC0+
YmJfcGVyX2N0eF9wdHIudmFsID0KIAkJKHNoYWRvd19yaW5nX2NvbnRleHQtPmJiX3Blcl9jdHhf
cHRyLnZhbCAmCkBAIC02MjgsNyArNjI1LDcgQEAgc3RhdGljIGludCBwcmVwYXJlX3dvcmtsb2Fk
KHN0cnVjdCBpbnRlbF92Z3B1X3dvcmtsb2FkICp3b3JrbG9hZCkKIAogCXVwZGF0ZV9zaGFkb3df
cGRwcyh3b3JrbG9hZCk7CiAKLQlzZXRfY29udGV4dF9wcGd0dF9mcm9tX3NoYWRvdyh3b3JrbG9h
ZCwgcy0+c2hhZG93W3JpbmddLT5nZW1fY29udGV4dCk7CisJc2V0X2NvbnRleHRfcHBndHRfZnJv
bV9zaGFkb3cod29ya2xvYWQsIHMtPnNoYWRvd1tyaW5nXSk7CiAKIAlyZXQgPSBpbnRlbF92Z3B1
X3N5bmNfb29zX3BhZ2VzKHdvcmtsb2FkLT52Z3B1KTsKIAlpZiAocmV0KSB7CkBAIC03ODcsNyAr
Nzg0LDcgQEAgc3RhdGljIHZvaWQgdXBkYXRlX2d1ZXN0X2NvbnRleHQoc3RydWN0IGludGVsX3Zn
cHVfd29ya2xvYWQgKndvcmtsb2FkKQogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gd29ya2xv
YWQtPnJlcTsKIAlzdHJ1Y3QgaW50ZWxfdmdwdSAqdmdwdSA9IHdvcmtsb2FkLT52Z3B1OwogCXN0
cnVjdCBpbnRlbF9ndnQgKmd2dCA9IHZncHUtPmd2dDsKLQlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqY3R4X29iaiA9IHJxLT5od19jb250ZXh0LT5zdGF0ZS0+b2JqOworCXN0cnVjdCBkcm1f
aTkxNV9nZW1fb2JqZWN0ICpjdHhfb2JqID0gcnEtPmNvbnRleHQtPnN0YXRlLT5vYmo7CiAJc3Ry
dWN0IGV4ZWNsaXN0X3JpbmdfY29udGV4dCAqc2hhZG93X3JpbmdfY29udGV4dDsKIAlzdHJ1Y3Qg
cGFnZSAqcGFnZTsKIAl2b2lkICpzcmM7CkBAIC0xMjMyLDggKzEyMjksNiBAQCBpbnQgaW50ZWxf
dmdwdV9zZXR1cF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCWlmIChJU19F
UlIoY3R4KSkKIAkJcmV0dXJuIFBUUl9FUlIoY3R4KTsKIAotCWk5MTVfZ2VtX2NvbnRleHRfc2V0
X2ZvcmNlX3NpbmdsZV9zdWJtaXNzaW9uKGN0eCk7Ci0KIAlwcGd0dCA9IGk5MTVfdm1fdG9fcHBn
dHQoaTkxNV9nZW1fY29udGV4dF9nZXRfdm1fcmN1KGN0eCkpOwogCWk5MTVfY29udGV4dF9wcGd0
dF9yb290X3NhdmUocywgcHBndHQpOwogCkBAIC0xMjQ5LDYgKzEyNDQsOCBAQCBpbnQgaW50ZWxf
dmdwdV9zZXR1cF9zdWJtaXNzaW9uKHN0cnVjdCBpbnRlbF92Z3B1ICp2Z3B1KQogCQkJZ290byBv
dXRfc2hhZG93X2N0eDsKIAkJfQogCisJCWludGVsX2NvbnRleHRfc2V0X3NpbmdsZV9zdWJtaXNz
aW9uKGNlKTsKKwogCQlpZiAoIVVTRVNfR1VDX1NVQk1JU1NJT04oaTkxNSkpIHsgLyogTWF4IHJp
bmcgYnVmZmVyIHNpemUgKi8KIAkJCWNvbnN0IHVuc2lnbmVkIGludCByaW5nX3NpemUgPSA1MTIg
KiBTWl80SzsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKaW5kZXggMTQzYTg5NTJiNzM2Li5mNGNi
ZDM3OWRiOTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uYwpAQCAtMTEwOCw5ICsxMTA4LDkgQEAg
c3RhdGljIGludCBfX2ludGVsX2VuZ2luZXNfcmVjb3JkX2RlZmF1bHRzKHN0cnVjdCBpbnRlbF9n
dCAqZ3QpCiAJCQljb250aW51ZTsKIAogCQkvKiBXZSB3YW50IHRvIGJlIGFibGUgdG8gdW5iaW5k
IHRoZSBzdGF0ZSBmcm9tIHRoZSBHR1RUICovCi0JCUdFTV9CVUdfT04oaW50ZWxfY29udGV4dF9p
c19waW5uZWQocnEtPmh3X2NvbnRleHQpKTsKKwkJR0VNX0JVR19PTihpbnRlbF9jb250ZXh0X2lz
X3Bpbm5lZChycS0+Y29udGV4dCkpOwogCi0JCXN0YXRlID0gcnEtPmh3X2NvbnRleHQtPnN0YXRl
OworCQlzdGF0ZSA9IHJxLT5jb250ZXh0LT5zdGF0ZTsKIAkJaWYgKCFzdGF0ZSkKIAkJCWNvbnRp
bnVlOwogCkBAIC0xMTYyLDcgKzExNjIsNyBAQCBzdGF0aWMgaW50IF9faW50ZWxfZW5naW5lc19y
ZWNvcmRfZGVmYXVsdHMoc3RydWN0IGludGVsX2d0ICpndCkKIAkJaWYgKCFycSkKIAkJCWNvbnRp
bnVlOwogCi0JCWNlID0gcnEtPmh3X2NvbnRleHQ7CisJCWNlID0gcnEtPmNvbnRleHQ7CiAJCWk5
MTVfcmVxdWVzdF9wdXQocnEpOwogCQlpbnRlbF9jb250ZXh0X3B1dChjZSk7CiAJfQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKaW5kZXggMWYyZjI2NmYyNmFmLi41YzczNjljNTVm
OTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYwpAQCAtMTIyMCw3ICsxMjIw
LDcgQEAgc3RhdGljIHZvaWQgZXJyb3JfcmVjb3JkX2VuZ2luZV9yZWdpc3RlcnMoc3RydWN0IGk5
MTVfZ3B1X3N0YXRlICplcnJvciwKIHN0YXRpYyB2b2lkIHJlY29yZF9yZXF1ZXN0KGNvbnN0IHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsCiAJCQkgICBzdHJ1Y3QgZHJtX2k5MTVfZXJyb3Jf
cmVxdWVzdCAqZXJxKQogewotCWNvbnN0IHN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHggPSBy
ZXF1ZXN0LT5nZW1fY29udGV4dDsKKwljb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4
ID0gcmVxdWVzdC0+Y29udGV4dC0+Z2VtX2NvbnRleHQ7CiAKIAllcnEtPmZsYWdzID0gcmVxdWVz
dC0+ZmVuY2UuZmxhZ3M7CiAJZXJxLT5jb250ZXh0ID0gcmVxdWVzdC0+ZmVuY2UuY29udGV4dDsK
QEAgLTEyMzAsNyArMTIzMCw3IEBAIHN0YXRpYyB2b2lkIHJlY29yZF9yZXF1ZXN0KGNvbnN0IHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsCiAJZXJxLT5zdGFydCA9IGk5MTVfZ2d0dF9vZmZz
ZXQocmVxdWVzdC0+cmluZy0+dm1hKTsKIAllcnEtPmhlYWQgPSByZXF1ZXN0LT5oZWFkOwogCWVy
cS0+dGFpbCA9IHJlcXVlc3QtPnRhaWw7Ci0JZXJxLT5waWQgPSBjdHgtPnBpZCA/IHBpZF9ucihj
dHgtPnBpZCkgOiAwOworCWVycS0+cGlkID0gY3R4ICYmIGN0eC0+cGlkID8gcGlkX25yKGN0eC0+
cGlkKSA6IDA7CiB9CiAKIHN0YXRpYyB2b2lkIGVuZ2luZV9yZWNvcmRfcmVxdWVzdHMoc3RydWN0
IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLApAQCAtMTI5Nyw3ICsxMjk3LDEwIEBAIHN0YXRpYyB2
b2lkIGVycm9yX3JlY29yZF9lbmdpbmVfZXhlY2xpc3RzKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwKIHN0YXRpYyBib29sIHJlY29yZF9jb250ZXh0KHN0cnVjdCBkcm1faTkx
NV9lcnJvcl9jb250ZXh0ICplLAogCQkJICAgY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEp
CiB7Ci0JY29uc3Qgc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmN0eCA9IHJxLT5nZW1fY29udGV4
dDsKKwljb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gcnEtPmNvbnRleHQtPmdl
bV9jb250ZXh0OworCisJaWYgKCFjdHgpCisJCXJldHVybiBmYWxzZTsKIAogCWlmIChjdHgtPnBp
ZCkgewogCQlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2s7CkBAIC0xNDUxLDcgKzE0NTQsNyBAQCBn
ZW1fcmVjb3JkX3JpbmdzKHN0cnVjdCBpOTE1X2dwdV9zdGF0ZSAqZXJyb3IsIHN0cnVjdCBjb21w
cmVzcyAqY29tcHJlc3MpCiAJCWNhcHR1cmUgPSByZXF1ZXN0X3JlY29yZF91c2VyX2JvKHJlcXVl
c3QsIGVlLCBjYXB0dXJlKTsKIAogCQljYXB0dXJlID0gY2FwdHVyZV92bWEoY2FwdHVyZSwKLQkJ
CQkgICAgICByZXF1ZXN0LT5od19jb250ZXh0LT5zdGF0ZSwKKwkJCQkgICAgICByZXF1ZXN0LT5j
b250ZXh0LT5zdGF0ZSwKIAkJCQkgICAgICAmZWUtPmN0eCk7CiAKIAkJY2FwdHVyZSA9IGNhcHR1
cmVfdm1hKGNhcHR1cmUsCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Bl
cmYuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZi5jCmluZGV4IDJjMzgwYWJhMWNl
OS4uMTkyNGQ0NDA4MWU5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Bl
cmYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuYwpAQCAtMzA3NSw3ICsz
MDc1LDcgQEAgc3RhdGljIHZvaWQgaTkxNV9wZXJmX2VuYWJsZV9sb2NrZWQoc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gKnN0cmVhbSkKIAkJc3RyZWFtLT5vcHMtPmVuYWJsZShzdHJlYW0pOwogCiAJ
aWYgKHN0cmVhbS0+aG9sZF9wcmVlbXB0aW9uKQotCQlpOTE1X2dlbV9jb250ZXh0X3NldF9ub3By
ZWVtcHQoc3RyZWFtLT5jdHgpOworCQlpbnRlbF9jb250ZXh0X3NldF9ub3ByZWVtcHQoc3RyZWFt
LT5waW5uZWRfY3R4KTsKIH0KIAogLyoqCkBAIC0zMTAxLDcgKzMxMDEsNyBAQCBzdGF0aWMgdm9p
ZCBpOTE1X3BlcmZfZGlzYWJsZV9sb2NrZWQoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVh
bSkKIAlzdHJlYW0tPmVuYWJsZWQgPSBmYWxzZTsKIAogCWlmIChzdHJlYW0tPmhvbGRfcHJlZW1w
dGlvbikKLQkJaTkxNV9nZW1fY29udGV4dF9jbGVhcl9ub3ByZWVtcHQoc3RyZWFtLT5jdHgpOwor
CQlpbnRlbF9jb250ZXh0X2NsZWFyX25vcHJlZW1wdChzdHJlYW0tPnBpbm5lZF9jdHgpOwogCiAJ
aWYgKHN0cmVhbS0+b3BzLT5kaXNhYmxlKQogCQlzdHJlYW0tPm9wcy0+ZGlzYWJsZShzdHJlYW0p
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuYwppbmRleCBmN2NjMTNkOWQwYWUuLjhhMWYx
MDI2ZjAzNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAgLTYyLDYgKzYyLDgg
QEAgc3RhdGljIGNvbnN0IGNoYXIgKmk5MTVfZmVuY2VfZ2V0X2RyaXZlcl9uYW1lKHN0cnVjdCBk
bWFfZmVuY2UgKmZlbmNlKQogCiBzdGF0aWMgY29uc3QgY2hhciAqaTkxNV9mZW5jZV9nZXRfdGlt
ZWxpbmVfbmFtZShzdHJ1Y3QgZG1hX2ZlbmNlICpmZW5jZSkKIHsKKwljb25zdCBzdHJ1Y3QgaTkx
NV9nZW1fY29udGV4dCAqY3R4OworCiAJLyoKIAkgKiBUaGUgdGltZWxpbmUgc3RydWN0IChhcyBw
YXJ0IG9mIHRoZSBwcGd0dCB1bmRlcm5lYXRoIGEgY29udGV4dCkKIAkgKiBtYXkgYmUgZnJlZWQg
d2hlbiB0aGUgcmVxdWVzdCBpcyBubyBsb25nZXIgaW4gdXNlIGJ5IHRoZSBHUFUuCkBAIC03NCw3
ICs3Niw4IEBAIHN0YXRpYyBjb25zdCBjaGFyICppOTE1X2ZlbmNlX2dldF90aW1lbGluZV9uYW1l
KHN0cnVjdCBkbWFfZmVuY2UgKmZlbmNlKQogCWlmICh0ZXN0X2JpdChETUFfRkVOQ0VfRkxBR19T
SUdOQUxFRF9CSVQsICZmZW5jZS0+ZmxhZ3MpKQogCQlyZXR1cm4gInNpZ25hbGVkIjsKIAotCXJl
dHVybiB0b19yZXF1ZXN0KGZlbmNlKS0+Z2VtX2NvbnRleHQtPm5hbWUgPzogIltpOTE1XSI7CisJ
Y3R4ID0gdG9fcmVxdWVzdChmZW5jZSktPmNvbnRleHQtPmdlbV9jb250ZXh0OworCXJldHVybiBj
dHggJiYgY3R4LT5uYW1lID8gY3R4LT5uYW1lIDogIltpOTE1XSI7CiB9CiAKIHN0YXRpYyBib29s
IGk5MTVfZmVuY2Vfc2lnbmFsZWQoc3RydWN0IGRtYV9mZW5jZSAqZmVuY2UpCkBAIC0yNzIsOCAr
Mjc1LDggQEAgYm9vbCBpOTE1X3JlcXVlc3RfcmV0aXJlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogCXJlbW92ZV9mcm9tX2NsaWVudChycSk7CiAJbGlzdF9kZWwoJnJxLT5saW5rKTsKIAotCWlu
dGVsX2NvbnRleHRfZXhpdChycS0+aHdfY29udGV4dCk7Ci0JaW50ZWxfY29udGV4dF91bnBpbihy
cS0+aHdfY29udGV4dCk7CisJaW50ZWxfY29udGV4dF9leGl0KHJxLT5jb250ZXh0KTsKKwlpbnRl
bF9jb250ZXh0X3VucGluKHJxLT5jb250ZXh0KTsKIAogCWZyZWVfY2FwdHVyZV9saXN0KHJxKTsK
IAlpOTE1X3NjaGVkX25vZGVfZmluaSgmcnEtPnNjaGVkKTsKQEAgLTM3Niw3ICszNzksNyBAQCBi
b29sIF9faTkxNV9yZXF1ZXN0X3N1Ym1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQog
CWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJlcXVlc3QpKQogCQlnb3RvIHhmZXI7CiAKLQlp
ZiAoaTkxNV9nZW1fY29udGV4dF9pc19iYW5uZWQocmVxdWVzdC0+Z2VtX2NvbnRleHQpKQorCWlm
IChpbnRlbF9jb250ZXh0X2lzX2Jhbm5lZChyZXF1ZXN0LT5jb250ZXh0KSkKIAkJaTkxNV9yZXF1
ZXN0X3NraXAocmVxdWVzdCwgLUVJTyk7CiAKIAkvKgpAQCAtNjU1LDggKzY1OCw3IEBAIF9faTkx
NV9yZXF1ZXN0X2NyZWF0ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsIGdmcF90IGdmcCkKIAkJ
Z290byBlcnJfZnJlZTsKIAogCXJxLT5pOTE1ID0gY2UtPmVuZ2luZS0+aTkxNTsKLQlycS0+aHdf
Y29udGV4dCA9IGNlOwotCXJxLT5nZW1fY29udGV4dCA9IGNlLT5nZW1fY29udGV4dDsKKwlycS0+
Y29udGV4dCA9IGNlOwogCXJxLT5lbmdpbmUgPSBjZS0+ZW5naW5lOwogCXJxLT5yaW5nID0gY2Ut
PnJpbmc7CiAJcnEtPmV4ZWN1dGlvbl9tYXNrID0gY2UtPmVuZ2luZS0+bWFzazsKQEAgLTkwOCw3
ICs5MTAsNyBAQCBpOTE1X3JlcXVlc3RfYXdhaXRfcmVxdWVzdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICp0bywgc3RydWN0IGk5MTVfcmVxdWVzdCAqZnJvbSkKIAkJCQkJCSAgICAgICAmZnJvbS0+c3Vi
bWl0LAogCQkJCQkJICAgICAgIEk5MTVfRkVOQ0VfR0ZQKTsKIAl9IGVsc2UgaWYgKGludGVsX2Vu
Z2luZV9oYXNfc2VtYXBob3Jlcyh0by0+ZW5naW5lKSAmJgotCQkgICB0by0+Z2VtX2NvbnRleHQt
PnNjaGVkLnByaW9yaXR5ID49IEk5MTVfUFJJT1JJVFlfTk9STUFMKSB7CisJCSAgIHRvLT5jb250
ZXh0LT5nZW1fY29udGV4dC0+c2NoZWQucHJpb3JpdHkgPj0gSTkxNV9QUklPUklUWV9OT1JNQUwp
IHsKIAkJcmV0ID0gZW1pdF9zZW1hcGhvcmVfd2FpdCh0bywgZnJvbSwgSTkxNV9GRU5DRV9HRlAp
OwogCX0gZWxzZSB7CiAJCXJldCA9IGk5MTVfc3dfZmVuY2VfYXdhaXRfZG1hX2ZlbmNlKCZ0by0+
c3VibWl0LApAQCAtMTIzNiw3ICsxMjM4LDcgQEAgdm9pZCBfX2k5MTVfcmVxdWVzdF9xdWV1ZShz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwKIAogdm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVjdCBp
OTE1X3JlcXVlc3QgKnJxKQogewotCXN0cnVjdCBpOTE1X3NjaGVkX2F0dHIgYXR0ciA9IHJxLT5n
ZW1fY29udGV4dC0+c2NoZWQ7CisJc3RydWN0IGk5MTVfc2NoZWRfYXR0ciBhdHRyID0gcnEtPmNv
bnRleHQtPmdlbV9jb250ZXh0LT5zY2hlZDsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKiBjb25z
dCB0bCA9IGk5MTVfcmVxdWVzdF90aW1lbGluZShycSk7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAq
cHJldjsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0Lmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaAppbmRleCA5Njk5MWQ2NDc1OWMu
LmIzYjY1MzRhZTc5OCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1
ZXN0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKQEAgLTEwOSw5
ICsxMDksOCBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0IHsKIAkgKiBpOTE1X3JlcXVlc3RfZnJlZSgp
IHdpbGwgdGhlbiBkZWNyZW1lbnQgdGhlIHJlZmNvdW50IG9uIHRoZQogCSAqIGNvbnRleHQuCiAJ
ICovCi0Jc3RydWN0IGk5MTVfZ2VtX2NvbnRleHQgKmdlbV9jb250ZXh0OwogCXN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZTsKLQlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqaHdfY29udGV4dDsK
KwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY29udGV4dDsKIAlzdHJ1Y3QgaW50ZWxfcmluZyAqcmlu
ZzsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgX19yY3UgKnRpbWVsaW5lOwogCXN0cnVjdCBsaXN0
X2hlYWQgc2lnbmFsX2xpbms7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3NjaGVkdWxlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9zY2hlZHVsZXIuYwppbmRl
eCA3MjRlOTZmZTk2ZTkuLjU0ZjY5NDk0ZWNmNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9zY2hlZHVsZXIuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Nj
aGVkdWxlci5jCkBAIC0yMTMsNyArMjEzLDcgQEAgc3RhdGljIHZvaWQga2lja19zdWJtaXNzaW9u
KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkgKiBJZiB3ZSBhcmUgYWxyZWFkeSB0
aGUgY3VycmVudGx5IGV4ZWN1dGluZyBjb250ZXh0LCBkb24ndAogCSAqIGJvdGhlciBldmFsdWF0
aW5nIGlmIHdlIHNob3VsZCBwcmVlbXB0IG91cnNlbHZlcy4KIAkgKi8KLQlpZiAoaW5mbGlnaHQt
Pmh3X2NvbnRleHQgPT0gcnEtPmh3X2NvbnRleHQpCisJaWYgKGluZmxpZ2h0LT5jb250ZXh0ID09
IHJxLT5jb250ZXh0KQogCQlnb3RvIHVubG9jazsKIAogCWVuZ2luZS0+ZXhlY2xpc3RzLnF1ZXVl
X3ByaW9yaXR5X2hpbnQgPSBwcmlvOwotLSAKMi4yNC4wCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdm
eEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFp
bG1hbi9saXN0aW5mby9pbnRlbC1nZng=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 67883189E03
	for <lists+intel-gfx@lfdr.de>; Wed, 18 Mar 2020 15:38:00 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C02646E906;
	Wed, 18 Mar 2020 14:37:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0C8DD6E906
 for <intel-gfx@lists.freedesktop.org>; Wed, 18 Mar 2020 14:37:57 +0000 (UTC)
IronPort-SDR: lbZWxY4eg7/wLGea54xWBgLK2RBXp2sIgiWXGJ99spHolpcL2HVe1gxLOJEQ/uvuLTgCNGoC+c
 burVDTxXUm1g==
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 18 Mar 2020 07:37:56 -0700
IronPort-SDR: n8AxyytYfBNE5ZL7phPoBAEnbULDHeWTyyMNwuDJrtNQhl4kc6fRDoa+ujl9jCOaqRtJo7U0t6
 rpA1DvDGvG0g==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,568,1574150400"; d="scan'208";a="445889018"
Received: from fmsmsx103.amr.corp.intel.com ([10.18.124.201])
 by fmsmga006.fm.intel.com with ESMTP; 18 Mar 2020 07:37:56 -0700
Received: from bgsmsx103.gar.corp.intel.com (10.223.4.130) by
 FMSMSX103.amr.corp.intel.com (10.18.124.201) with Microsoft SMTP Server (TLS)
 id 14.3.439.0; Wed, 18 Mar 2020 07:37:56 -0700
Received: from bgsmsx104.gar.corp.intel.com ([169.254.5.111]) by
 BGSMSX103.gar.corp.intel.com ([169.254.4.56]) with mapi id 14.03.0439.000;
 Wed, 18 Mar 2020 20:07:55 +0530
From: "Shankar, Uma" <uma.shankar@intel.com>
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
Thread-Topic: [PATCH] drm/i915/display: Trigger Modeset at boot for audio
 codec init
Thread-Index: AQHV/RTdJvWeZ84SjEekeReP5HUDGahN53iAgACC9VA=
Date: Wed, 18 Mar 2020 14:37:54 +0000
Message-ID: <E7C9878FBA1C6D42A1CA3F62AEB6945F82435646@BGSMSX104.gar.corp.intel.com>
References: <20200318113009.16757-1-uma.shankar@intel.com>
 <1a4bf060-654a-18f0-4913-308d1a5b1990@linux.intel.com>
In-Reply-To: <1a4bf060-654a-18f0-4913-308d1a5b1990@linux.intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
dlp-product: dlpe-windows
dlp-version: 11.2.0.6
dlp-reaction: no-action
x-originating-ip: [10.223.10.10]
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH] drm/i915/display: Trigger Modeset at boot
 for audio codec init
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: "Khor, Swee Aun" <swee.aun.khor@intel.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

DQoNCj4gLS0tLS1PcmlnaW5hbCBNZXNzYWdlLS0tLS0NCj4gRnJvbTogTWFhcnRlbiBMYW5raG9y
c3QgPG1hYXJ0ZW4ubGFua2hvcnN0QGxpbnV4LmludGVsLmNvbT4NCj4gU2VudDogV2VkbmVzZGF5
LCBNYXJjaCAxOCwgMjAyMCA1OjQ2IFBNDQo+IFRvOiBTaGFua2FyLCBVbWEgPHVtYS5zaGFua2Fy
QGludGVsLmNvbT47IGludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcNCj4gQ2M6IFZpbGxl
IFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+OyBLYWkgVmVobWFuZW4N
Cj4gPGthaS52ZWhtYW5lbkBsaW51eC5pbnRlbC5jb20+OyBLaG9yLCBTd2VlIEF1biA8c3dlZS5h
dW4ua2hvckBpbnRlbC5jb20+DQo+IFN1YmplY3Q6IFJlOiBbUEFUQ0hdIGRybS9pOTE1L2Rpc3Bs
YXk6IFRyaWdnZXIgTW9kZXNldCBhdCBib290IGZvciBhdWRpbyBjb2RlYyBpbml0DQo+IA0KPiBP
cCAxOC0wMy0yMDIwIG9tIDEyOjMwIHNjaHJlZWYgVW1hIFNoYW5rYXI6DQo+ID4gSWYgZXh0ZXJu
YWwgbW9uaXRvcnMgYXJlIGNvbm5lY3RlZCBkdXJpbmcgYm9vdCB1cCwgZHJpdmVyIHVzZXMgdGhl
DQo+ID4gc2FtZSBtb2RlIHByb2dyYW1tZWQgYnkgQklPUyBhbmQgYXZvaWRzIGEgZnVsbCBtb2Rl
c2V0Lg0KPiA+IFRoaXMgcmVzdWx0cyBpbiBkaXNwbGF5IGF1ZGlvIGNvZGVjIGxlZnQgdW5pbml0
aWFsaXplZCBhbmQgZGlzcGxheQ0KPiA+IGF1ZGlvIGZhaWxzIHRvIHdvcmsgdGlsbCB1c2VyIHRy
aWdnZXJzIGEgbW9kZXNldC4NCj4gPg0KPiA+IFRoaXMgcGF0Y2ggZml4ZXMgdGhlIHNhbWUgYnkg
dHJpZ2dlcmluZyBhIG1vZGVzZXQgYXQgYm9vdC4NCj4gPg0KPiA+IENjOiBWaWxsZSBTeXJqw6Rs
w6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPg0KPiA+IENjOiBNYWFydGVuIExhbmto
b3JzdCA8bWFhcnRlbi5sYW5raG9yc3RAbGludXguaW50ZWwuY29tPg0KPiA+IENjOiBLYWkgVmVo
bWFuZW4gPGthaS52ZWhtYW5lbkBsaW51eC5pbnRlbC5jb20+DQo+ID4gU2lnbmVkLW9mZi1ieTog
VW1hIFNoYW5rYXIgPHVtYS5zaGFua2FyQGludGVsLmNvbT4NCj4gPiBTaWduZWQtb2ZmLWJ5OiBT
d2VlQXVuIEtob3IgPHN3ZWUuYXVuLmtob3JAaW50ZWwuY29tPg0KPiA+IC0tLQ0KPiA+ICBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICB8IDQgKysrKw0KPiA+ICBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyB8IDggKysrKysrKysN
Cj4gPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgfCAzICsr
Kw0KPiA+ICAzIGZpbGVzIGNoYW5nZWQsIDE1IGluc2VydGlvbnMoKykNCj4gPg0KPiA+IGRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jDQo+ID4gYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RkaS5jDQo+ID4gaW5kZXggNzNkMGY0
NjQ4YzA2Li5iYTM4MGFmYTczYTYgMTAwNjQ0DQo+ID4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kZGkuYw0KPiA+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGRpLmMNCj4gPiBAQCAtMzcwNCw2ICszNzA0LDEwIEBAIHN0YXRpYyB2b2lk
IGludGVsX2RkaV91cGRhdGVfcGlwZShzdHJ1Y3QgaW50ZWxfZW5jb2Rlcg0KPiAqZW5jb2RlciwN
Cj4gPiAgCQkJCSAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsDQo+
ID4gIAkJCQkgIGNvbnN0IHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpjb25uX3N0YXRlKSAg
ew0KPiA+ICsJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShlbmNv
ZGVyLT5iYXNlLmRldik7DQo+ID4gKw0KPiA+ICsJLyogQ2xlYXIgdGhlIGJvb3RmbGFnICovDQo+
ID4gKwlkZXZfcHJpdi0+Ym9vdGZsYWcgPSBmYWxzZTsNCj4gPg0KPiA+ICAJaWYgKCFpbnRlbF9j
cnRjX2hhc190eXBlKGNydGNfc3RhdGUsIElOVEVMX09VVFBVVF9IRE1JKSkNCj4gPiAgCQlpbnRl
bF9kZGlfdXBkYXRlX3BpcGVfZHAoZW5jb2RlciwgY3J0Y19zdGF0ZSwgY29ubl9zdGF0ZSk7IGRp
ZmYNCj4gPiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eS5jDQo+ID4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYw0K
PiA+IGluZGV4IDhmMjNjNGQ1MWMzMy4uYTE0ODc1Mzk0OTVmIDEwMDY0NA0KPiA+IC0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+ID4gKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gPiBAQCAtMTQ3NTEs
NiArMTQ3NTEsMTAgQEAgc3RhdGljIGludCBpbnRlbF9hdG9taWNfY2hlY2soc3RydWN0IGRybV9k
ZXZpY2UNCj4gKmRldiwNCj4gPiAgCQlpZiAobmV3X2NydGNfc3RhdGUtPmh3Lm1vZGUucHJpdmF0
ZV9mbGFncyAhPQ0KPiA+ICAJCSAgICBvbGRfY3J0Y19zdGF0ZS0+aHcubW9kZS5wcml2YXRlX2Zs
YWdzKQ0KPiA+ICAJCQluZXdfY3J0Y19zdGF0ZS0+dWFwaS5tb2RlX2NoYW5nZWQgPSB0cnVlOw0K
PiA+ICsNCj4gPiArCQkvKiBTZXQgbW9kZV9jaGFuZ2UgdG8gaW5pdCBhdWRpbyBjb2RlIG9uY2Ug
YXQgYm9vdCAqLw0KPiA+ICsJCWlmIChkZXZfcHJpdi0+Ym9vdGZsYWcgJiYgbmV3X2NydGNfc3Rh
dGUtPmh3LmFjdGl2ZSkNCj4gPiArCQkJbmV3X2NydGNfc3RhdGUtPnVhcGkubW9kZV9jaGFuZ2Vk
ID0gdHJ1ZTsNCj4gPiAgCX0NCj4gPg0KPiA+ICAJcmV0ID0gZHJtX2F0b21pY19oZWxwZXJfY2hl
Y2tfbW9kZXNldChkZXYsICZzdGF0ZS0+YmFzZSk7IEBADQo+ID4gLTE3NjU1LDExICsxNzY1OSwx
NSBAQCBzdGF0aWMgdm9pZCBpbnRlbF91cGRhdGVfZmRpX3BsbF9mcmVxKHN0cnVjdA0KPiA+IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQ0KPiA+DQo+ID4gIHN0YXRpYyBpbnQgaW50ZWxfaW5p
dGlhbF9jb21taXQoc3RydWN0IGRybV9kZXZpY2UgKmRldikgIHsNCj4gPiArCXN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsNCj4gPiAgCXN0cnVjdCBkcm1f
YXRvbWljX3N0YXRlICpzdGF0ZSA9IE5VTEw7DQo+ID4gIAlzdHJ1Y3QgZHJtX21vZGVzZXRfYWNx
dWlyZV9jdHggY3R4Ow0KPiA+ICAJc3RydWN0IGludGVsX2NydGMgKmNydGM7DQo+ID4gIAlpbnQg
cmV0ID0gMDsNCj4gPg0KPiA+ICsJLyogU2V0IEZsYWcgdG8gdHJpZ2dlciBtb2Rlc2V0IGZvciBh
dWRpbyBjb2RlYyBpbml0ICovDQo+ID4gKwlkZXZfcHJpdi0+Ym9vdGZsYWcgPSB0cnVlOw0KPiA+
ICsNCj4gPiAgCXN0YXRlID0gZHJtX2F0b21pY19zdGF0ZV9hbGxvYyhkZXYpOw0KPiA+ICAJaWYg
KCFzdGF0ZSkNCj4gPiAgCQlyZXR1cm4gLUVOT01FTTsNCj4gPiBkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaA0KPiA+IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kcnYuaCBpbmRleCBhN2VhMWQ4NTUzNTkuLjIwNzE5NmY5NjMyYg0KPiA+IDEwMDY0NA0KPiA+
IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgNCj4gPiArKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oDQo+ID4gQEAgLTEyMTAsNiArMTIxMCw5IEBAIHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlIHsNCj4gPiAgCSAqIE5PVEU6IFRoaXMgaXMgdGhlIGRyaTEvdW1z
IGR1bmdlb24sIGRvbid0IGFkZCBzdHVmZiBoZXJlLiBZb3VyIHBhdGNoDQo+ID4gIAkgKiB3aWxs
IGJlIHJlamVjdGVkLiBJbnN0ZWFkIGxvb2sgZm9yIGEgYmV0dGVyIHBsYWNlLg0KPiA+ICAJICov
DQo+ID4gKw0KPiA+ICsJLyogRmxhZyB0byB0cmlnZ2VyIG1vZGVzZXQgZm9yIEF1ZGlvIGNvZGVj
IGluaXQgb25jZSBkdXJpbmcgYm9vdCAqLw0KPiA+ICsJYm9vbCBib290ZmxhZzsNCj4gPiAgfTsN
Cj4gPg0KPiA+ICBzdGF0aWMgaW5saW5lIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICp0b19pOTE1
KGNvbnN0IHN0cnVjdA0KPiA+IGRybV9kZXZpY2UgKmRldikNCj4gDQo+IFRoaXMgaXMgbm90IGdv
aW5nIHRvIGhlbHAuIFdlIHJlYWQgb3V0IHRoZSBoYXNfYXVkaW8gZmxhZyBub3csIHRoZSBvbmx5
IHRoaW5nIHdlIG1pc3MNCj4gaXMgdG8gZW5hYmxlIHRoZSBhdWRpbyBjb2RlYy4gVGhpcyBzaG91
bGQgYmUgZG9uZSBhZnRlciB0aGUgZmlyc3QgZGV0ZWN0KCksIGluIHRoZQ0KPiBtYW5uZXIgd2hp
Y2ggSSBkZXNjcmliZWQgdG8gZ2V0IHRoZSBjb3JyZWN0IGVsZCB2YWx1ZXMuDQoNCkhpIE1hYXJ0
ZW4sDQpBdCB0aGUgdGltZSBvZiBzYW5pdGl6ZSwgd2UgZG9uJ3QgaGF2ZSBlZGlkIHNvIGhhc19h
dWRpbyBmbGFnIHdpbGwgbm90IGJlIHNldC4gQWxzbyBjb2RlY19lbmFibGUNCm5lZWRzIGVuY29k
ZXIsIGNydGNfc3RhdGUsIGNvbm5fc3RhdGUuIEFsbCB0aGVzZSBhcmUgbm90IHRoZXJlIGFzIHBh
cnQgb2YgZGV0ZWN0IGNhbGxiYWNrcy4NCg0KV2l0aCBjdXJyZW50IGFwcHJvYWNoLCB3ZSBmb3Jj
ZSBhIG1vZGVzZXQganVzdCBkdXJpbmcgYm9vdCBhbmQgdGhlbiByZXNldCB0aGUgZmxhZyBzbyB0
aGF0IG5vcm1hbA0Kb3BlcmF0aW9ucyBkb24ndCBnZXQgYWZmZWN0ZWQuDQoNClJlZ2FyZHMsDQpV
bWEgU2hhbmthcg0KDQo+IH5NYWFydGVuDQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3Rz
LmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id D65DB2CE310
	for <lists+intel-gfx@lfdr.de>; Fri,  4 Dec 2020 00:51:15 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4FEAC6E0E9;
	Thu,  3 Dec 2020 23:51:08 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 23E356E0E1
 for <intel-gfx@lists.freedesktop.org>; Thu,  3 Dec 2020 23:51:05 +0000 (UTC)
IronPort-SDR: cHiR0XHHJQCWAm1OHAcPcXJGfOGl+0lnbqCyIqXY7oL2/NQnej8CkP4iyiBMlabEODzgjHxqh8
 TtzlwwKltyXw==
X-IronPort-AV: E=McAfee;i="6000,8403,9824"; a="161067205"
X-IronPort-AV: E=Sophos;i="5.78,390,1599548400"; d="scan'208";a="161067205"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 03 Dec 2020 15:51:03 -0800
IronPort-SDR: qjaCspDh1y0MgOdYY5yDsZ9WR1t96cKcCEb/rYMGtJt8vXVDzl7dqhx1+6n6sLdnoCRi/9NqOb
 w1mNK/xMj2PA==
X-IronPort-AV: E=Sophos;i="5.78,390,1599548400"; d="scan'208";a="550716494"
Received: from labuser-z97x-ud5h.jf.intel.com ([10.165.21.211])
 by orsmga005-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-SHA;
 03 Dec 2020 15:51:03 -0800
From: Manasi Navare <manasi.d.navare@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  3 Dec 2020 15:53:52 -0800
Message-Id: <20201203235358.18041-3-manasi.d.navare@intel.com>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <20201203235358.18041-1-manasi.d.navare@intel.com>
References: <20201203235358.18041-1-manasi.d.navare@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 3/9] drm/i915/display/dp: Compute VRR state
 in atomic_check
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhpcyBmb3JjZXMgYSBjb21wbGV0ZSBtb2Rlc2V0IGlmIHZyciBkcm0gY3J0YyBzdGF0ZSBnb2Vz
CmZyb20gZW5hYmxlZCB0byBkaXNhYmxlZCBhbmQgdmljZSB2ZXJzYS4KVGhpcyBwYXRjaCBhbHNv
IGNvbXB1dGVzIHZyciBzdGF0ZSB2YXJpYWJsZXMgZnJvbSB0aGUgbW9kZSB0aW1pbmdzCmFuZCBi
YXNlZCBvbiB0aGUgdnJyIHByb3BlcnR5IHNldCBieSB1c2Vyc3BhY2UgYXMgd2VsbCBhcyBoYXJk
d2FyZSdzCnZyciBjYXBhYmlsaXR5LgoKdjI6CipSZWJhc2UKdjM6CiogVm1pbiA9IG1heCAodnRv
dGFsLCB2bWluKSAoTWFuYXNpKQp2NDoKKiBzZXQgY3J0Y19zdGF0ZS0+dnJyLmVuYWJsZSA9IDAg
Zm9yIGRpc2FibGUgcmVxdWVzdAp2NToKKiBkcm1fZGJnX2ttcywgc3F1YXNoIGNydGMgc3RhdGVz
IGRlZiBwYXRjaCAoSmFuaSBOKQp2NjoKKiBNb3ZlIHZyciBtb2Rlc2V0IGNoZWNrIHRvIHNlcGFy
YXRlIGZ1bmN0aW9uIChKYW5pIE4pCgpDYzogVmlsbGUgU3lyasOkbMOkIDx2aWxsZS5zeXJqYWxh
QGxpbnV4LmludGVsLmNvbT4KQ2M6IEphbmkgTmlrdWxhIDxqYW5pLm5pa3VsYUBsaW51eC5pbnRl
bC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hbmFzaSBOYXZhcmUgPG1hbmFzaS5kLm5hdmFyZUBpbnRl
bC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMg
IHwgIDcgKysrCiAuLi4vZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggICAg
fCAgNyArKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYyAgICAgICB8
ICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfdnJyLmMgICAgICB8IDUx
ICsrKysrKysrKysrKysrKysrKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
dnJyLmggICAgICB8ICA3ICsrKwogNSBmaWxlcyBjaGFuZ2VkLCA3MyBpbnNlcnRpb25zKCspCgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCA2ZTVi
OTNmNmEyNWUuLmZhNDUyZWIzYWRiOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5LmMKQEAgLTU3LDYgKzU3LDcgQEAKICNpbmNsdWRlICJkaXNwbGF5L2lu
dGVsX3Nkdm8uaCIKICNpbmNsdWRlICJkaXNwbGF5L2ludGVsX3R2LmgiCiAjaW5jbHVkZSAiZGlz
cGxheS9pbnRlbF92ZHNjLmgiCisjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF92cnIuaCIKIAogI2lu
Y2x1ZGUgImd0L2ludGVsX3Jwcy5oIgogCkBAIC0xNDM4Myw2ICsxNDM4NCwxMCBAQCBpbnRlbF9w
aXBlX2NvbmZpZ19jb21wYXJlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjdXJyZW50
X2NvbmZpZywKIAogCVBJUEVfQ09ORl9DSEVDS19JKG1zdF9tYXN0ZXJfdHJhbnNjb2Rlcik7CiAK
KwlQSVBFX0NPTkZfQ0hFQ0tfQk9PTCh2cnIuZW5hYmxlKTsKKwlQSVBFX0NPTkZfQ0hFQ0tfSSh2
cnIudnRvdGFsbWluKTsKKwlQSVBFX0NPTkZfQ0hFQ0tfSSh2cnIudnRvdGFsbWF4KTsKKwogI3Vu
ZGVmIFBJUEVfQ09ORl9DSEVDS19YCiAjdW5kZWYgUElQRV9DT05GX0NIRUNLX0kKICN1bmRlZiBQ
SVBFX0NPTkZfQ0hFQ0tfQk9PTApAQCAtMTU1MDksNiArMTU1MTQsOCBAQCBzdGF0aWMgaW50IGlu
dGVsX2F0b21pY19jaGVjayhzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCQkJbmV3X2NydGNfc3Rh
dGUtPnVhcGkubW9kZV9jaGFuZ2VkID0gdHJ1ZTsKIAl9CiAKKwlpbnRlbF92cnJfY2hlY2tfbW9k
ZXNldChzdGF0ZSk7CisKIAlyZXQgPSBkcm1fYXRvbWljX2hlbHBlcl9jaGVja19tb2Rlc2V0KGRl
diwgJnN0YXRlLT5iYXNlKTsKIAlpZiAocmV0KQogCQlnb3RvIGZhaWw7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IDFmYTAy
NDZiM2E4Mi4uZjVmYjVmMTA5YTg5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaApAQCAtMTEyNCw2ICsxMTI0LDEzIEBAIHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlIHsKIAlzdHJ1Y3QgaW50ZWxfZHNiICpkc2I7CiAKIAl1MzIgcHNy
Ml9tYW5fdHJhY2tfY3RsOworCisJLyogVmFyaWFibGUgUmVmcmVzaCBSYXRlIHN0YXRlICovCisJ
c3RydWN0IHsKKwkJYm9vbCBlbmFibGU7CisJCXUxNiB2dG90YWxtaW47CisJCXUxNiB2dG90YWxt
YXg7CisJfSB2cnI7CiB9OwogCiBlbnVtIGludGVsX3BpcGVfY3JjX3NvdXJjZSB7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKaW5kZXggNjcyOWU2MjkwMTMyLi5iNWFiZGUw
MzUxYzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAu
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTI4NjAs
NiArMjg2MCw3IEBAIGludGVsX2RwX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyLAogCWlmICghSEFTX0RESShkZXZfcHJpdikpCiAJCWludGVsX2RwX3NldF9jbG9j
ayhlbmNvZGVyLCBwaXBlX2NvbmZpZyk7CiAKKwlpbnRlbF92cnJfY29tcHV0ZV9jb25maWcoaW50
ZWxfZHAsIHBpcGVfY29uZmlnKTsKIAlpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoaW50ZWxfZHAs
IHBpcGVfY29uZmlnKTsKIAlpbnRlbF9kcF9kcnJzX2NvbXB1dGVfY29uZmlnKGludGVsX2RwLCBw
aXBlX2NvbmZpZywgb3V0cHV0X2JwcCwKIAkJCQkgICAgIGNvbnN0YW50X24pOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF92cnIuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfdnJyLmMKaW5kZXggODY5ZTQxYWE4Mzk2Li4wOWRjZjZm
MWM0ZDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfdnJy
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF92cnIuYwpAQCAtMzAs
MyArMzAsNTQgQEAgYm9vbCBpbnRlbF92cnJfaXNfY2FwYWJsZShzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
ciAqY29ubmVjdG9yKQogCQlpbmZvLT5tb25pdG9yX3JhbmdlLm1heF92ZnJlcSAtIGluZm8tPm1v
bml0b3JfcmFuZ2UubWluX3ZmcmVxID4gMTA7CiB9CiAKK3ZvaWQKK2ludGVsX3Zycl9jaGVja19t
b2Rlc2V0KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQoreworCWludCBpOworCXN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwgKm5ld19jcnRjX3N0YXRlOwor
CXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjOworCisJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNf
aW5fc3RhdGUoc3RhdGUsIGNydGMsIG9sZF9jcnRjX3N0YXRlLAorCQkJCQkgICAgbmV3X2NydGNf
c3RhdGUsIGkpIHsKKwkJaWYgKG5ld19jcnRjX3N0YXRlLT51YXBpLnZycl9lbmFibGVkICE9CisJ
CSAgICBvbGRfY3J0Y19zdGF0ZS0+dWFwaS52cnJfZW5hYmxlZCkKKwkJCW5ld19jcnRjX3N0YXRl
LT51YXBpLm1vZGVfY2hhbmdlZCA9IHRydWU7CisJfQorfQorCit2b2lkCitpbnRlbF92cnJfY29t
cHV0ZV9jb25maWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKKwkJCSBzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXN0cnVjdCBpbnRlbF9jb25uZWN0b3IgKmludGVs
X2Nvbm5lY3RvciA9IGludGVsX2RwLT5hdHRhY2hlZF9jb25uZWN0b3I7CisJc3RydWN0IGRybV9j
b25uZWN0b3IgKmNvbm5lY3RvciA9ICZpbnRlbF9jb25uZWN0b3ItPmJhc2U7CisJc3RydWN0IGRy
bV9kaXNwbGF5X21vZGUgKmFkanVzdGVkX21vZGUgPSAmY3J0Y19zdGF0ZS0+aHcuYWRqdXN0ZWRf
bW9kZTsKKwljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfaW5mbyAqaW5mbyA9ICZjb25uZWN0b3It
PmRpc3BsYXlfaW5mbzsKKworCWlmICghaW50ZWxfdnJyX2lzX2NhcGFibGUoY29ubmVjdG9yKSkK
KwkJcmV0dXJuOworCisJaWYgKCFjcnRjX3N0YXRlLT51YXBpLnZycl9lbmFibGVkKSB7CisJCWNy
dGNfc3RhdGUtPnZyci5lbmFibGUgPSBmYWxzZTsKKwkJcmV0dXJuOworCX0KKworCWNydGNfc3Rh
dGUtPnZyci5lbmFibGUgPSB0cnVlOworCWNydGNfc3RhdGUtPnZyci52dG90YWxtaW4gPQorCQlt
YXhfdCh1MTYsIGFkanVzdGVkX21vZGUtPmNydGNfdnRvdGFsLAorCQkgICAgICBESVZfUk9VTkRf
Q0xPU0VTVChhZGp1c3RlZF9tb2RlLT5jcnRjX2Nsb2NrICogMTAwMCwKKwkJCQkJYWRqdXN0ZWRf
bW9kZS0+Y3J0Y19odG90YWwgKgorCQkJCQlpbmZvLT5tb25pdG9yX3JhbmdlLm1heF92ZnJlcSkp
OworCWNydGNfc3RhdGUtPnZyci52dG90YWxtYXggPQorCQltYXhfdCh1MTYsIGFkanVzdGVkX21v
ZGUtPmNydGNfdnRvdGFsLAorCQkgICAgICBESVZfUk9VTkRfVVAoYWRqdXN0ZWRfbW9kZS0+Y3J0
Y19jbG9jayAqIDEwMDAsCisJCQkJICAgYWRqdXN0ZWRfbW9kZS0+Y3J0Y19odG90YWwgKgorCQkJ
CSAgIGluZm8tPm1vbml0b3JfcmFuZ2UubWluX3ZmcmVxKSk7CisKKwlkcm1fZGJnX2ttcygmaTkx
NS0+ZHJtLAorCQkgICAgIlZSUiBDb25maWc6IEVuYWJsZSA9ICVzIFZ0b3RhbCBNaW4gPSAlZCBW
dG90YWwgTWF4ID0gJWRcbiIsCisJCSAgICB5ZXNubyhjcnRjX3N0YXRlLT52cnIuZW5hYmxlKSwg
Y3J0Y19zdGF0ZS0+dnJyLnZ0b3RhbG1pbiwKKwkJICAgIGNydGNfc3RhdGUtPnZyci52dG90YWxt
YXgpOworfQorCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X3Zyci5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF92cnIuaAppbmRleCAz
NzAwYWNlYzVkMDkuLjNmMDhjMzJkMWFmZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF92cnIuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX3Zyci5oCkBAIC05LDcgKzksMTQgQEAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgog
CiBzdHJ1Y3QgZHJtX2Nvbm5lY3RvcjsKK3N0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGU7CitzdHJ1
Y3QgaW50ZWxfY3J0YzsKK3N0cnVjdCBpbnRlbF9jcnRjX3N0YXRlOworc3RydWN0IGludGVsX2Rw
OwogCiBib29sIGludGVsX3Zycl9pc19jYXBhYmxlKHN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25u
ZWN0b3IpOwordm9pZCBpbnRlbF92cnJfY2hlY2tfbW9kZXNldChzdHJ1Y3QgaW50ZWxfYXRvbWlj
X3N0YXRlICpzdGF0ZSk7Cit2b2lkIGludGVsX3Zycl9jb21wdXRlX2NvbmZpZyhzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAorCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUpOwogCiAjZW5kaWYgLyogX19JTlRFTF9WUlJfSF9fICovCi0tIAoyLjE5LjEKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWls
aW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZy
ZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

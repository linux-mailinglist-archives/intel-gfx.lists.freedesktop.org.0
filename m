Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id AF23BAD5BC
	for <lists+intel-gfx@lfdr.de>; Mon,  9 Sep 2019 11:31:47 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9B43C89AA7;
	Mon,  9 Sep 2019 09:31:44 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id C276889A91
 for <intel-gfx@lists.freedesktop.org>; Mon,  9 Sep 2019 09:31:28 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 09 Sep 2019 02:31:28 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,484,1559545200"; d="scan'208";a="359433693"
Received: from hoernig-mobl.ger.corp.intel.com (HELO delly.ger.corp.intel.com)
 ([10.249.33.104])
 by orsmga005.jf.intel.com with ESMTP; 09 Sep 2019 02:31:26 -0700
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon,  9 Sep 2019 12:31:09 +0300
Message-Id: <20190909093116.7747-7-lionel.g.landwerlin@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20190909093116.7747-1-lionel.g.landwerlin@intel.com>
References: <20190909093116.7747-1-lionel.g.landwerlin@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v16 06/13] drm/i915/perf: move perf types to
 their own header
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9sbG93aW5nIGEgcGF0dGVybiB1c2VkIHRocm91Z2hvdXQgdGhlIGRyaXZlci4KClNpZ25lZC1v
ZmYtYnk6IExpb25lbCBMYW5kd2VybGluIDxsaW9uZWwuZy5sYW5kd2VybGluQGludGVsLmNvbT4K
LS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oICAgICAgICB8IDMwMCArLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmggICAgICAg
fCAgIDIgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmggfCAzMjcgKysr
KysrKysrKysrKysrKysrKysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCAzMzAgaW5zZXJ0aW9ucygr
KSwgMjk5IGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfcGVyZl90eXBlcy5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kcnYuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKaW5kZXggMjc0YTEx
OTNkNGYwLi5mNDE0NWFlNmFiNmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5
MTVfZHJ2LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaApAQCAtOTIsNiAr
OTIsNyBAQAogI2luY2x1ZGUgImk5MTVfZ2VtX2ZlbmNlX3JlZy5oIgogI2luY2x1ZGUgImk5MTVf
Z2VtX2d0dC5oIgogI2luY2x1ZGUgImk5MTVfZ3B1X2Vycm9yLmgiCisjaW5jbHVkZSAiaTkxNV9w
ZXJmX3R5cGVzLmgiCiAjaW5jbHVkZSAiaTkxNV9yZXF1ZXN0LmgiCiAjaW5jbHVkZSAiaTkxNV9z
Y2hlZHVsZXIuaCIKICNpbmNsdWRlICJndC9pbnRlbF90aW1lbGluZS5oIgpAQCAtOTc5LDMwNSAr
OTgwLDYgQEAgc3RydWN0IGludGVsX3dtX2NvbmZpZyB7CiAJYm9vbCBzcHJpdGVzX3NjYWxlZDsK
IH07CiAKLXN0cnVjdCBpOTE1X29hX2Zvcm1hdCB7Ci0JdTMyIGZvcm1hdDsKLQlpbnQgc2l6ZTsK
LX07Ci0KLXN0cnVjdCBpOTE1X29hX3JlZyB7Ci0JaTkxNV9yZWdfdCBhZGRyOwotCXUzMiB2YWx1
ZTsKLX07Ci0KLXN0cnVjdCBpOTE1X29hX2NvbmZpZyB7Ci0JY2hhciB1dWlkW1VVSURfU1RSSU5H
X0xFTiArIDFdOwotCWludCBpZDsKLQotCWNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqbXV4X3Jl
Z3M7Ci0JdTMyIG11eF9yZWdzX2xlbjsKLQljb25zdCBzdHJ1Y3QgaTkxNV9vYV9yZWcgKmJfY291
bnRlcl9yZWdzOwotCXUzMiBiX2NvdW50ZXJfcmVnc19sZW47Ci0JY29uc3Qgc3RydWN0IGk5MTVf
b2FfcmVnICpmbGV4X3JlZ3M7Ci0JdTMyIGZsZXhfcmVnc19sZW47Ci0KLQlzdHJ1Y3QgYXR0cmli
dXRlX2dyb3VwIHN5c2ZzX21ldHJpYzsKLQlzdHJ1Y3QgYXR0cmlidXRlICphdHRyc1syXTsKLQlz
dHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSBzeXNmc19tZXRyaWNfaWQ7Ci0KLQlhdG9taWNfdCByZWZf
Y291bnQ7Ci19OwotCi1zdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbTsKLQotLyoqCi0gKiBzdHJ1Y3Qg
aTkxNV9wZXJmX3N0cmVhbV9vcHMgLSB0aGUgT1BzIHRvIHN1cHBvcnQgYSBzcGVjaWZpYyBzdHJl
YW0gdHlwZQotICovCi1zdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbV9vcHMgewotCS8qKgotCSAqIEBl
bmFibGU6IEVuYWJsZXMgdGhlIGNvbGxlY3Rpb24gb2YgSFcgc2FtcGxlcywgZWl0aGVyIGluIHJl
c3BvbnNlIHRvCi0JICogYEk5MTVfUEVSRl9JT0NUTF9FTkFCTEVgIG9yIGltcGxpY2l0bHkgY2Fs
bGVkIHdoZW4gc3RyZWFtIGlzIG9wZW5lZAotCSAqIHdpdGhvdXQgYEk5MTVfUEVSRl9GTEFHX0RJ
U0FCTEVEYC4KLQkgKi8KLQl2b2lkICgqZW5hYmxlKShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAq
c3RyZWFtKTsKLQotCS8qKgotCSAqIEBkaXNhYmxlOiBEaXNhYmxlcyB0aGUgY29sbGVjdGlvbiBv
ZiBIVyBzYW1wbGVzLCBlaXRoZXIgaW4gcmVzcG9uc2UKLQkgKiB0byBgSTkxNV9QRVJGX0lPQ1RM
X0RJU0FCTEVgIG9yIGltcGxpY2l0bHkgY2FsbGVkIGJlZm9yZSBkZXN0cm95aW5nCi0JICogdGhl
IHN0cmVhbS4KLQkgKi8KLQl2b2lkICgqZGlzYWJsZSkoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0g
KnN0cmVhbSk7Ci0KLQkvKioKLQkgKiBAcG9sbF93YWl0OiBDYWxsIHBvbGxfd2FpdCwgcGFzc2lu
ZyBhIHdhaXQgcXVldWUgdGhhdCB3aWxsIGJlIHdva2VuCi0JICogb25jZSB0aGVyZSBpcyBzb21l
dGhpbmcgcmVhZHkgdG8gcmVhZCgpIGZvciB0aGUgc3RyZWFtCi0JICovCi0Jdm9pZCAoKnBvbGxf
d2FpdCkoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSwKLQkJCSAgc3RydWN0IGZpbGUg
KmZpbGUsCi0JCQkgIHBvbGxfdGFibGUgKndhaXQpOwotCi0JLyoqCi0JICogQHdhaXRfdW5sb2Nr
ZWQ6IEZvciBoYW5kbGluZyBhIGJsb2NraW5nIHJlYWQsIHdhaXQgdW50aWwgdGhlcmUgaXMKLQkg
KiBzb21ldGhpbmcgdG8gcmVhZHkgdG8gcmVhZCgpIGZvciB0aGUgc3RyZWFtLiBFLmcuIHdhaXQg
b24gdGhlIHNhbWUKLQkgKiB3YWl0IHF1ZXVlIHRoYXQgd291bGQgYmUgcGFzc2VkIHRvIHBvbGxf
d2FpdCgpLgotCSAqLwotCWludCAoKndhaXRfdW5sb2NrZWQpKHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtICpzdHJlYW0pOwotCi0JLyoqCi0JICogQHJlYWQ6IENvcHkgYnVmZmVyZWQgbWV0cmljcyBh
cyByZWNvcmRzIHRvIHVzZXJzcGFjZQotCSAqICoqYnVmKio6IHRoZSB1c2Vyc3BhY2UsIGRlc3Rp
bmF0aW9uIGJ1ZmZlcgotCSAqICoqY291bnQqKjogdGhlIG51bWJlciBvZiBieXRlcyB0byBjb3B5
LCByZXF1ZXN0ZWQgYnkgdXNlcnNwYWNlCi0JICogKipvZmZzZXQqKjogemVybyBhdCB0aGUgc3Rh
cnQgb2YgdGhlIHJlYWQsIHVwZGF0ZWQgYXMgdGhlIHJlYWQKLQkgKiBwcm9jZWVkcywgaXQgcmVw
cmVzZW50cyBob3cgbWFueSBieXRlcyBoYXZlIGJlZW4gY29waWVkIHNvIGZhciBhbmQKLQkgKiB0
aGUgYnVmZmVyIG9mZnNldCBmb3IgY29weWluZyB0aGUgbmV4dCByZWNvcmQuCi0JICoKLQkgKiBD
b3B5IGFzIG1hbnkgYnVmZmVyZWQgaTkxNSBwZXJmIHNhbXBsZXMgYW5kIHJlY29yZHMgZm9yIHRo
aXMgc3RyZWFtCi0JICogdG8gdXNlcnNwYWNlIGFzIHdpbGwgZml0IGluIHRoZSBnaXZlbiBidWZm
ZXIuCi0JICoKLQkgKiBPbmx5IHdyaXRlIGNvbXBsZXRlIHJlY29yZHM7IHJldHVybmluZyAtJUVO
T1NQQyBpZiB0aGVyZSBpc24ndCByb29tCi0JICogZm9yIGEgY29tcGxldGUgcmVjb3JkLgotCSAq
Ci0JICogUmV0dXJuIGFueSBlcnJvciBjb25kaXRpb24gdGhhdCByZXN1bHRzIGluIGEgc2hvcnQg
cmVhZCBzdWNoIGFzCi0JICogLSVFTk9TUEMgb3IgLSVFRkFVTFQsIGV2ZW4gdGhvdWdoIHRoZXNl
IG1heSBiZSBzcXVhc2hlZCBiZWZvcmUKLQkgKiByZXR1cm5pbmcgdG8gdXNlcnNwYWNlLgotCSAq
LwotCWludCAoKnJlYWQpKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0sCi0JCSAgICBj
aGFyIF9fdXNlciAqYnVmLAotCQkgICAgc2l6ZV90IGNvdW50LAotCQkgICAgc2l6ZV90ICpvZmZz
ZXQpOwotCi0JLyoqCi0JICogQGRlc3Ryb3k6IENsZWFudXAgYW55IHN0cmVhbSBzcGVjaWZpYyBy
ZXNvdXJjZXMuCi0JICoKLQkgKiBUaGUgc3RyZWFtIHdpbGwgYWx3YXlzIGJlIGRpc2FibGVkIGJl
Zm9yZSB0aGlzIGlzIGNhbGxlZC4KLQkgKi8KLQl2b2lkICgqZGVzdHJveSkoc3RydWN0IGk5MTVf
cGVyZl9zdHJlYW0gKnN0cmVhbSk7Ci19OwotCi0vKioKLSAqIHN0cnVjdCBpOTE1X3BlcmZfc3Ry
ZWFtIC0gc3RhdGUgZm9yIGEgc2luZ2xlIG9wZW4gc3RyZWFtIEZECi0gKi8KLXN0cnVjdCBpOTE1
X3BlcmZfc3RyZWFtIHsKLQkvKioKLQkgKiBAZGV2X3ByaXY6IGk5MTUgZHJtIGRldmljZQotCSAq
LwotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdjsKLQotCS8qKgotCSAqIEB3YWtl
cmVmOiBBcyB3ZSBrZWVwIHRoZSBkZXZpY2UgYXdha2Ugd2hpbGUgdGhlIHBlcmYgc3RyZWFtIGlz
Ci0JICogYWN0aXZlLCB3ZSB0cmFjayBvdXIgcnVudGltZSBwbSByZWZlcmVuY2UgZm9yIGxhdGVy
IHJlbGVhc2UuCi0JICovCi0JaW50ZWxfd2FrZXJlZl90IHdha2VyZWY7Ci0KLQkvKioKLQkgKiBA
ZW5naW5lOiBFbmdpbmUgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcGVyZm9ybWFuY2Ugc3RyZWFtLgot
CSAqLwotCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKLQotCS8qKgotCSAqIEBzYW1w
bGVfZmxhZ3M6IEZsYWdzIHJlcHJlc2VudGluZyB0aGUgYERSTV9JOTE1X1BFUkZfUFJPUF9TQU1Q
TEVfKmAKLQkgKiBwcm9wZXJ0aWVzIGdpdmVuIHdoZW4gb3BlbmluZyBhIHN0cmVhbSwgcmVwcmVz
ZW50aW5nIHRoZSBjb250ZW50cwotCSAqIG9mIGEgc2luZ2xlIHNhbXBsZSBhcyByZWFkKCkgYnkg
dXNlcnNwYWNlLgotCSAqLwotCXUzMiBzYW1wbGVfZmxhZ3M7Ci0KLQkvKioKLQkgKiBAc2FtcGxl
X3NpemU6IENvbnNpZGVyaW5nIHRoZSBjb25maWd1cmVkIGNvbnRlbnRzIG9mIGEgc2FtcGxlCi0J
ICogY29tYmluZWQgd2l0aCB0aGUgcmVxdWlyZWQgaGVhZGVyIHNpemUsIHRoaXMgaXMgdGhlIHRv
dGFsIHNpemUKLQkgKiBvZiBhIHNpbmdsZSBzYW1wbGUgcmVjb3JkLgotCSAqLwotCWludCBzYW1w
bGVfc2l6ZTsKLQotCS8qKgotCSAqIEBjdHg6ICVOVUxMIGlmIG1lYXN1cmluZyBzeXN0ZW0td2lk
ZSBhY3Jvc3MgYWxsIGNvbnRleHRzIG9yIGEKLQkgKiBzcGVjaWZpYyBjb250ZXh0IHRoYXQgaXMg
YmVpbmcgbW9uaXRvcmVkLgotCSAqLwotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHg7Ci0K
LQkvKioKLQkgKiBAZW5hYmxlZDogV2hldGhlciB0aGUgc3RyZWFtIGlzIGN1cnJlbnRseSBlbmFi
bGVkLCBjb25zaWRlcmluZwotCSAqIHdoZXRoZXIgdGhlIHN0cmVhbSB3YXMgb3BlbmVkIGluIGEg
ZGlzYWJsZWQgc3RhdGUgYW5kIGJhc2VkCi0JICogb24gYEk5MTVfUEVSRl9JT0NUTF9FTkFCTEVg
IGFuZCBgSTkxNV9QRVJGX0lPQ1RMX0RJU0FCTEVgIGNhbGxzLgotCSAqLwotCWJvb2wgZW5hYmxl
ZDsKLQotCS8qKgotCSAqIEBvcHM6IFRoZSBjYWxsYmFja3MgcHJvdmlkaW5nIHRoZSBpbXBsZW1l
bnRhdGlvbiBvZiB0aGlzIHNwZWNpZmljCi0JICogdHlwZSBvZiBjb25maWd1cmVkIHN0cmVhbS4K
LQkgKi8KLQljb25zdCBzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbV9vcHMgKm9wczsKLQotCS8qKgot
CSAqIEBvYV9jb25maWc6IFRoZSBPQSBjb25maWd1cmF0aW9uIHVzZWQgYnkgdGhlIHN0cmVhbS4K
LQkgKi8KLQlzdHJ1Y3QgaTkxNV9vYV9jb25maWcgKm9hX2NvbmZpZzsKLQotCS8qKgotCSAqIFRo
ZSBPQSBjb250ZXh0IHNwZWNpZmljIGluZm9ybWF0aW9uLgotCSAqLwotCXN0cnVjdCBpbnRlbF9j
b250ZXh0ICpwaW5uZWRfY3R4OwotCXUzMiBzcGVjaWZpY19jdHhfaWQ7Ci0JdTMyIHNwZWNpZmlj
X2N0eF9pZF9tYXNrOwotCi0Jc3RydWN0IGhydGltZXIgcG9sbF9jaGVja190aW1lcjsKLQl3YWl0
X3F1ZXVlX2hlYWRfdCBwb2xsX3dxOwotCWJvb2wgcG9sbGluOwotCi0JYm9vbCBwZXJpb2RpYzsK
LQlpbnQgcGVyaW9kX2V4cG9uZW50OwotCi0JLyoqCi0JICogU3RhdGUgb2YgdGhlIE9BIGJ1ZmZl
ci4KLQkgKi8KLQlzdHJ1Y3QgewotCQlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKLQkJdTggKnZhZGRy
OwotCQl1MzIgbGFzdF9jdHhfaWQ7Ci0JCWludCBmb3JtYXQ7Ci0JCWludCBmb3JtYXRfc2l6ZTsK
LQkJaW50IHNpemVfZXhwb25lbnQ7Ci0KLQkJLyoqCi0JCSAqIExvY2tzIHJlYWRzIGFuZCB3cml0
ZXMgdG8gYWxsIGhlYWQvdGFpbCBzdGF0ZQotCQkgKgotCQkgKiBDb25zaWRlcjogdGhlIGhlYWQg
YW5kIHRhaWwgcG9pbnRlciBzdGF0ZSBuZWVkcyB0byBiZSByZWFkCi0JCSAqIGNvbnNpc3RlbnRs
eSBmcm9tIGEgaHJ0aW1lciBjYWxsYmFjayAoYXRvbWljIGNvbnRleHQpIGFuZAotCQkgKiByZWFk
KCkgZm9wICh1c2VyIGNvbnRleHQpIHdpdGggdGFpbCBwb2ludGVyIHVwZGF0ZXMgaGFwcGVuaW5n
Ci0JCSAqIGluIGF0b21pYyBjb250ZXh0IGFuZCBoZWFkIHVwZGF0ZXMgaW4gdXNlciBjb250ZXh0
IGFuZCB0aGUKLQkJICogKHVubGlrZWx5KSBwb3NzaWJpbGl0eSBvZiByZWFkKCkgZXJyb3JzIG5l
ZWRpbmcgdG8gcmVzZXQgYWxsCi0JCSAqIGhlYWQvdGFpbCBzdGF0ZS4KLQkJICoKLQkJICogTm90
ZTogQ29udGVudGlvbi9wZXJmb3JtYW5jZSBhcmVuJ3QgY3VycmVudGx5IGEgc2lnbmlmaWNhbnQK
LQkJICogY29uY2VybiBoZXJlIGNvbnNpZGVyaW5nIHRoZSByZWxhdGl2ZWx5IGxvdyBmcmVxdWVu
Y3kgb2YKLQkJICogaHJ0aW1lciBjYWxsYmFja3MgKDVtcyBwZXJpb2QpIGFuZCB0aGF0IHJlYWRz
IHR5cGljYWxseSBvbmx5Ci0JCSAqIGhhcHBlbiBpbiByZXNwb25zZSB0byBhIGhydGltZXIgZXZl
bnQgYW5kIGxpa2VseSBjb21wbGV0ZQotCQkgKiBiZWZvcmUgdGhlIG5leHQgY2FsbGJhY2suCi0J
CSAqCi0JCSAqIE5vdGU6IFRoaXMgbG9jayBpcyBub3QgaGVsZCAqd2hpbGUqIHJlYWRpbmcgYW5k
IGNvcHlpbmcgZGF0YQotCQkgKiB0byB1c2Vyc3BhY2Ugc28gdGhlIHZhbHVlIG9mIGhlYWQgb2Jz
ZXJ2ZWQgaW4gaHRyaW1lcgotCQkgKiBjYWxsYmFja3Mgd29uJ3QgcmVwcmVzZW50IGFueSBwYXJ0
aWFsIGNvbnN1bXB0aW9uIG9mIGRhdGEuCi0JCSAqLwotCQlzcGlubG9ja190IHB0cl9sb2NrOwot
Ci0JCS8qKgotCQkgKiBPbmUgJ2FnaW5nJyB0YWlsIHBvaW50ZXIgYW5kIG9uZSAnYWdlZCcgdGFp
bCBwb2ludGVyIHJlYWR5IHRvCi0JCSAqIHVzZWQgZm9yIHJlYWRpbmcuCi0JCSAqCi0JCSAqIElu
aXRpYWwgdmFsdWVzIG9mIDB4ZmZmZmZmZmYgYXJlIGludmFsaWQgYW5kIGltcGx5IHRoYXQgYW4K
LQkJICogdXBkYXRlIGlzIHJlcXVpcmVkIChhbmQgc2hvdWxkIGJlIGlnbm9yZWQgYnkgYW4gYXR0
ZW1wdGVkCi0JCSAqIHJlYWQpCi0JCSAqLwotCQlzdHJ1Y3QgewotCQkJdTMyIG9mZnNldDsKLQkJ
fSB0YWlsc1syXTsKLQotCQkvKioKLQkJICogSW5kZXggZm9yIHRoZSBhZ2VkIHRhaWwgcmVhZHkg
dG8gcmVhZCgpIGRhdGEgdXAgdG8uCi0JCSAqLwotCQl1bnNpZ25lZCBpbnQgYWdlZF90YWlsX2lk
eDsKLQotCQkvKioKLQkJICogQSBtb25vdG9uaWMgdGltZXN0YW1wIGZvciB3aGVuIHRoZSBjdXJy
ZW50IGFnaW5nIHRhaWwgcG9pbnRlcgotCQkgKiB3YXMgcmVhZDsgdXNlZCB0byBkZXRlcm1pbmUg
d2hlbiBpdCBpcyBvbGQgZW5vdWdoIHRvIHRydXN0LgotCQkgKi8KLQkJdTY0IGFnaW5nX3RpbWVz
dGFtcDsKLQotCQkvKioKLQkJICogQWx0aG91Z2ggd2UgY2FuIGFsd2F5cyByZWFkIGJhY2sgdGhl
IGhlYWQgcG9pbnRlciByZWdpc3RlciwKLQkJICogd2UgcHJlZmVyIHRvIGF2b2lkIHRydXN0aW5n
IHRoZSBIVyBzdGF0ZSwganVzdCB0byBhdm9pZCBhbnkKLQkJICogcmlzayB0aGF0IHNvbWUgaGFy
ZHdhcmUgY29uZGl0aW9uIGNvdWxkICogc29tZWhvdyBidW1wIHRoZQotCQkgKiBoZWFkIHBvaW50
ZXIgdW5wcmVkaWN0YWJseSBhbmQgY2F1c2UgdXMgdG8gZm9yd2FyZCB0aGUgd3JvbmcKLQkJICog
T0EgYnVmZmVyIGRhdGEgdG8gdXNlcnNwYWNlLgotCQkgKi8KLQkJdTMyIGhlYWQ7Ci0JfSBvYV9i
dWZmZXI7Ci19OwotCi0vKioKLSAqIHN0cnVjdCBpOTE1X29hX29wcyAtIEdlbiBzcGVjaWZpYyBp
bXBsZW1lbnRhdGlvbiBvZiBhbiBPQSB1bml0IHN0cmVhbQotICovCi1zdHJ1Y3QgaTkxNV9vYV9v
cHMgewotCS8qKgotCSAqIEBpc192YWxpZF9iX2NvdW50ZXJfcmVnOiBWYWxpZGF0ZXMgcmVnaXN0
ZXIncyBhZGRyZXNzIGZvcgotCSAqIHByb2dyYW1taW5nIGJvb2xlYW4gY291bnRlcnMgZm9yIGEg
cGFydGljdWxhciBwbGF0Zm9ybS4KLQkgKi8KLQlib29sICgqaXNfdmFsaWRfYl9jb3VudGVyX3Jl
Zykoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAotCQkJCSAgICAgICB1MzIgYWRk
cik7Ci0KLQkvKioKLQkgKiBAaXNfdmFsaWRfbXV4X3JlZzogVmFsaWRhdGVzIHJlZ2lzdGVyJ3Mg
YWRkcmVzcyBmb3IgcHJvZ3JhbW1pbmcgbXV4Ci0JICogZm9yIGEgcGFydGljdWxhciBwbGF0Zm9y
bS4KLQkgKi8KLQlib29sICgqaXNfdmFsaWRfbXV4X3JlZykoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2LCB1MzIgYWRkcik7Ci0KLQkvKioKLQkgKiBAaXNfdmFsaWRfZmxleF9yZWc6
IFZhbGlkYXRlcyByZWdpc3RlcidzIGFkZHJlc3MgZm9yIHByb2dyYW1taW5nCi0JICogZmxleCBF
VSBmaWx0ZXJpbmcgZm9yIGEgcGFydGljdWxhciBwbGF0Zm9ybS4KLQkgKi8KLQlib29sICgqaXNf
dmFsaWRfZmxleF9yZWcpKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGFk
ZHIpOwotCi0JLyoqCi0JICogQGVuYWJsZV9tZXRyaWNfc2V0OiBTZWxlY3RzIGFuZCBhcHBsaWVz
IGFueSBNVVggY29uZmlndXJhdGlvbiB0byBzZXQKLQkgKiB1cCB0aGUgQm9vbGVhbiBhbmQgQ3Vz
dG9tIChCL0MpIGNvdW50ZXJzIHRoYXQgYXJlIHBhcnQgb2YgdGhlCi0JICogY291bnRlciByZXBv
cnRzIGJlaW5nIHNhbXBsZWQuIE1heSBhcHBseSBzeXN0ZW0gY29uc3RyYWludHMgc3VjaCBhcwot
CSAqIGRpc2FibGluZyBFVSBjbG9jayBnYXRpbmcgYXMgcmVxdWlyZWQuCi0JICovCi0JaW50ICgq
ZW5hYmxlX21ldHJpY19zZXQpKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pOwotCi0J
LyoqCi0JICogQGRpc2FibGVfbWV0cmljX3NldDogUmVtb3ZlIHN5c3RlbSBjb25zdHJhaW50cyBh
c3NvY2lhdGVkIHdpdGggdXNpbmcKLQkgKiB0aGUgT0EgdW5pdC4KLQkgKi8KLQl2b2lkICgqZGlz
YWJsZV9tZXRyaWNfc2V0KShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKTsKLQotCS8q
KgotCSAqIEBvYV9lbmFibGU6IEVuYWJsZSBwZXJpb2RpYyBzYW1wbGluZwotCSAqLwotCXZvaWQg
KCpvYV9lbmFibGUpKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pOwotCi0JLyoqCi0J
ICogQG9hX2Rpc2FibGU6IERpc2FibGUgcGVyaW9kaWMgc2FtcGxpbmcKLQkgKi8KLQl2b2lkICgq
b2FfZGlzYWJsZSkoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSk7Ci0KLQkvKioKLQkg
KiBAcmVhZDogQ29weSBkYXRhIGZyb20gdGhlIGNpcmN1bGFyIE9BIGJ1ZmZlciBpbnRvIGEgZ2l2
ZW4gdXNlcnNwYWNlCi0JICogYnVmZmVyLgotCSAqLwotCWludCAoKnJlYWQpKHN0cnVjdCBpOTE1
X3BlcmZfc3RyZWFtICpzdHJlYW0sCi0JCSAgICBjaGFyIF9fdXNlciAqYnVmLAotCQkgICAgc2l6
ZV90IGNvdW50LAotCQkgICAgc2l6ZV90ICpvZmZzZXQpOwotCi0JLyoqCi0JICogQG9hX2h3X3Rh
aWxfcmVhZDogcmVhZCB0aGUgT0EgdGFpbCBwb2ludGVyIHJlZ2lzdGVyCi0JICoKLQkgKiBJbiBw
YXJ0aWN1bGFyIHRoaXMgZW5hYmxlcyB1cyB0byBzaGFyZSBhbGwgdGhlIGZpZGRseSBjb2RlIGZv
cgotCSAqIGhhbmRsaW5nIHRoZSBPQSB1bml0IHRhaWwgcG9pbnRlciByYWNlIHRoYXQgYWZmZWN0
cyBtdWx0aXBsZQotCSAqIGdlbmVyYXRpb25zLgotCSAqLwotCXUzMiAoKm9hX2h3X3RhaWxfcmVh
ZCkoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSk7Ci19OwotCiBzdHJ1Y3QgaW50ZWxf
Y2RjbGtfc3RhdGUgewogCXVuc2lnbmVkIGludCBjZGNsaywgdmNvLCByZWYsIGJ5cGFzczsKIAl1
OCB2b2x0YWdlX2xldmVsOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9w
ZXJmLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3BlcmYuaAppbmRleCA5NTU0OWRlNjUy
MTIuLjI3MDE5MzUyNmI1NiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9w
ZXJmLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmLmgKQEAgLTgsNiArOCw4
IEBACiAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogCisjaW5jbHVkZSAiaTkxNV9wZXJmX3R5
cGVzLmgiCisKIHN0cnVjdCBkcm1fZGV2aWNlOwogc3RydWN0IGRybV9maWxlOwogc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGU7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Bl
cmZfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcGVyZl90eXBlcy5oCm5ldyBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uYzY2NzNiNjdkNjk0Ci0tLSAvZGV2
L251bGwKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9wZXJmX3R5cGVzLmgKQEAgLTAs
MCArMSwzMjcgQEAKKy8qIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQgKi8KKy8qCisgKiBD
b3B5cmlnaHQgwqkgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbgorICovCisKKyNpZm5kZWYgX0k5MTVf
UEVSRl9UWVBFU19IXworI2RlZmluZSBfSTkxNV9QRVJGX1RZUEVTX0hfCisKKyNpbmNsdWRlIDxs
aW51eC9hdG9taWMuaD4KKyNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51
eC9ocnRpbWVyLmg+CisjaW5jbHVkZSA8bGludXgvbGlzdC5oPgorI2luY2x1ZGUgPGxpbnV4L3Bv
bGwuaD4KKyNpbmNsdWRlIDxsaW51eC9zeXNmcy5oPgorI2luY2x1ZGUgPGxpbnV4L3V1aWQuaD4K
KyNpbmNsdWRlIDxsaW51eC93YWl0Lmg+CisKKyNpbmNsdWRlICJpOTE1X3JlZy5oIgorI2luY2x1
ZGUgImludGVsX3dha2VyZWYuaCIKKworc3RydWN0IGRybV9pOTE1X3ByaXZhdGU7CitzdHJ1Y3Qg
ZmlsZTsKK3N0cnVjdCBpOTE1X2dlbV9jb250ZXh0Oworc3RydWN0IGk5MTVfdm1hOworc3RydWN0
IGludGVsX2NvbnRleHQ7CitzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzOworCitzdHJ1Y3QgaTkxNV9v
YV9mb3JtYXQgeworCXUzMiBmb3JtYXQ7CisJaW50IHNpemU7Cit9OworCitzdHJ1Y3QgaTkxNV9v
YV9yZWcgeworCWk5MTVfcmVnX3QgYWRkcjsKKwl1MzIgdmFsdWU7Cit9OworCitzdHJ1Y3QgaTkx
NV9vYV9jb25maWcgeworCWNoYXIgdXVpZFtVVUlEX1NUUklOR19MRU4gKyAxXTsKKwlpbnQgaWQ7
CisKKwljb25zdCBzdHJ1Y3QgaTkxNV9vYV9yZWcgKm11eF9yZWdzOworCXUzMiBtdXhfcmVnc19s
ZW47CisJY29uc3Qgc3RydWN0IGk5MTVfb2FfcmVnICpiX2NvdW50ZXJfcmVnczsKKwl1MzIgYl9j
b3VudGVyX3JlZ3NfbGVuOworCWNvbnN0IHN0cnVjdCBpOTE1X29hX3JlZyAqZmxleF9yZWdzOwor
CXUzMiBmbGV4X3JlZ3NfbGVuOworCisJc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBzeXNmc19tZXRy
aWM7CisJc3RydWN0IGF0dHJpYnV0ZSAqYXR0cnNbMl07CisJc3RydWN0IGRldmljZV9hdHRyaWJ1
dGUgc3lzZnNfbWV0cmljX2lkOworCisJYXRvbWljX3QgcmVmX2NvdW50OworfTsKKworc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW07CisKKy8qKgorICogc3RydWN0IGk5MTVfcGVyZl9zdHJlYW1fb3Bz
IC0gdGhlIE9QcyB0byBzdXBwb3J0IGEgc3BlY2lmaWMgc3RyZWFtIHR5cGUKKyAqLworc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW1fb3BzIHsKKwkvKioKKwkgKiBAZW5hYmxlOiBFbmFibGVzIHRoZSBj
b2xsZWN0aW9uIG9mIEhXIHNhbXBsZXMsIGVpdGhlciBpbiByZXNwb25zZSB0bworCSAqIGBJOTE1
X1BFUkZfSU9DVExfRU5BQkxFYCBvciBpbXBsaWNpdGx5IGNhbGxlZCB3aGVuIHN0cmVhbSBpcyBv
cGVuZWQKKwkgKiB3aXRob3V0IGBJOTE1X1BFUkZfRkxBR19ESVNBQkxFRGAuCisJICovCisJdm9p
ZCAoKmVuYWJsZSkoc3RydWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSk7CisKKwkvKioKKwkg
KiBAZGlzYWJsZTogRGlzYWJsZXMgdGhlIGNvbGxlY3Rpb24gb2YgSFcgc2FtcGxlcywgZWl0aGVy
IGluIHJlc3BvbnNlCisJICogdG8gYEk5MTVfUEVSRl9JT0NUTF9ESVNBQkxFYCBvciBpbXBsaWNp
dGx5IGNhbGxlZCBiZWZvcmUgZGVzdHJveWluZworCSAqIHRoZSBzdHJlYW0uCisJICovCisJdm9p
ZCAoKmRpc2FibGUpKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pOworCisJLyoqCisJ
ICogQHBvbGxfd2FpdDogQ2FsbCBwb2xsX3dhaXQsIHBhc3NpbmcgYSB3YWl0IHF1ZXVlIHRoYXQg
d2lsbCBiZSB3b2tlbgorCSAqIG9uY2UgdGhlcmUgaXMgc29tZXRoaW5nIHJlYWR5IHRvIHJlYWQo
KSBmb3IgdGhlIHN0cmVhbQorCSAqLworCXZvaWQgKCpwb2xsX3dhaXQpKHN0cnVjdCBpOTE1X3Bl
cmZfc3RyZWFtICpzdHJlYW0sCisJCQkgIHN0cnVjdCBmaWxlICpmaWxlLAorCQkJICBwb2xsX3Rh
YmxlICp3YWl0KTsKKworCS8qKgorCSAqIEB3YWl0X3VubG9ja2VkOiBGb3IgaGFuZGxpbmcgYSBi
bG9ja2luZyByZWFkLCB3YWl0IHVudGlsIHRoZXJlIGlzCisJICogc29tZXRoaW5nIHRvIHJlYWR5
IHRvIHJlYWQoKSBmb3IgdGhlIHN0cmVhbS4gRS5nLiB3YWl0IG9uIHRoZSBzYW1lCisJICogd2Fp
dCBxdWV1ZSB0aGF0IHdvdWxkIGJlIHBhc3NlZCB0byBwb2xsX3dhaXQoKS4KKwkgKi8KKwlpbnQg
KCp3YWl0X3VubG9ja2VkKShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKTsKKworCS8q
KgorCSAqIEByZWFkOiBDb3B5IGJ1ZmZlcmVkIG1ldHJpY3MgYXMgcmVjb3JkcyB0byB1c2Vyc3Bh
Y2UKKwkgKiAqKmJ1ZioqOiB0aGUgdXNlcnNwYWNlLCBkZXN0aW5hdGlvbiBidWZmZXIKKwkgKiAq
KmNvdW50Kio6IHRoZSBudW1iZXIgb2YgYnl0ZXMgdG8gY29weSwgcmVxdWVzdGVkIGJ5IHVzZXJz
cGFjZQorCSAqICoqb2Zmc2V0Kio6IHplcm8gYXQgdGhlIHN0YXJ0IG9mIHRoZSByZWFkLCB1cGRh
dGVkIGFzIHRoZSByZWFkCisJICogcHJvY2VlZHMsIGl0IHJlcHJlc2VudHMgaG93IG1hbnkgYnl0
ZXMgaGF2ZSBiZWVuIGNvcGllZCBzbyBmYXIgYW5kCisJICogdGhlIGJ1ZmZlciBvZmZzZXQgZm9y
IGNvcHlpbmcgdGhlIG5leHQgcmVjb3JkLgorCSAqCisJICogQ29weSBhcyBtYW55IGJ1ZmZlcmVk
IGk5MTUgcGVyZiBzYW1wbGVzIGFuZCByZWNvcmRzIGZvciB0aGlzIHN0cmVhbQorCSAqIHRvIHVz
ZXJzcGFjZSBhcyB3aWxsIGZpdCBpbiB0aGUgZ2l2ZW4gYnVmZmVyLgorCSAqCisJICogT25seSB3
cml0ZSBjb21wbGV0ZSByZWNvcmRzOyByZXR1cm5pbmcgLSVFTk9TUEMgaWYgdGhlcmUgaXNuJ3Qg
cm9vbQorCSAqIGZvciBhIGNvbXBsZXRlIHJlY29yZC4KKwkgKgorCSAqIFJldHVybiBhbnkgZXJy
b3IgY29uZGl0aW9uIHRoYXQgcmVzdWx0cyBpbiBhIHNob3J0IHJlYWQgc3VjaCBhcworCSAqIC0l
RU5PU1BDIG9yIC0lRUZBVUxULCBldmVuIHRob3VnaCB0aGVzZSBtYXkgYmUgc3F1YXNoZWQgYmVm
b3JlCisJICogcmV0dXJuaW5nIHRvIHVzZXJzcGFjZS4KKwkgKi8KKwlpbnQgKCpyZWFkKShzdHJ1
Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtLAorCQkgICAgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJ
ICAgIHNpemVfdCBjb3VudCwKKwkJICAgIHNpemVfdCAqb2Zmc2V0KTsKKworCS8qKgorCSAqIEBk
ZXN0cm95OiBDbGVhbnVwIGFueSBzdHJlYW0gc3BlY2lmaWMgcmVzb3VyY2VzLgorCSAqCisJICog
VGhlIHN0cmVhbSB3aWxsIGFsd2F5cyBiZSBkaXNhYmxlZCBiZWZvcmUgdGhpcyBpcyBjYWxsZWQu
CisJICovCisJdm9pZCAoKmRlc3Ryb3kpKHN0cnVjdCBpOTE1X3BlcmZfc3RyZWFtICpzdHJlYW0p
OworfTsKKworLyoqCisgKiBzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAtIHN0YXRlIGZvciBhIHNp
bmdsZSBvcGVuIHN0cmVhbSBGRAorICovCitzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSB7CisJLyoq
CisJICogQGRldl9wcml2OiBpOTE1IGRybSBkZXZpY2UKKwkgKi8KKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXY7CisKKwkvKioKKwkgKiBAd2FrZXJlZjogQXMgd2Uga2VlcCB0aGUg
ZGV2aWNlIGF3YWtlIHdoaWxlIHRoZSBwZXJmIHN0cmVhbSBpcworCSAqIGFjdGl2ZSwgd2UgdHJh
Y2sgb3VyIHJ1bnRpbWUgcG0gcmVmZXJlbmNlIGZvciBsYXRlciByZWxlYXNlLgorCSAqLworCWlu
dGVsX3dha2VyZWZfdCB3YWtlcmVmOworCisJLyoqCisJICogQGVuZ2luZTogRW5naW5lIGFzc29j
aWF0ZWQgd2l0aCB0aGlzIHBlcmZvcm1hbmNlIHN0cmVhbS4KKwkgKi8KKwlzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmU7CisKKwkvKioKKwkgKiBAc2FtcGxlX2ZsYWdzOiBGbGFncyByZXBy
ZXNlbnRpbmcgdGhlIGBEUk1fSTkxNV9QRVJGX1BST1BfU0FNUExFXypgCisJICogcHJvcGVydGll
cyBnaXZlbiB3aGVuIG9wZW5pbmcgYSBzdHJlYW0sIHJlcHJlc2VudGluZyB0aGUgY29udGVudHMK
KwkgKiBvZiBhIHNpbmdsZSBzYW1wbGUgYXMgcmVhZCgpIGJ5IHVzZXJzcGFjZS4KKwkgKi8KKwl1
MzIgc2FtcGxlX2ZsYWdzOworCisJLyoqCisJICogQHNhbXBsZV9zaXplOiBDb25zaWRlcmluZyB0
aGUgY29uZmlndXJlZCBjb250ZW50cyBvZiBhIHNhbXBsZQorCSAqIGNvbWJpbmVkIHdpdGggdGhl
IHJlcXVpcmVkIGhlYWRlciBzaXplLCB0aGlzIGlzIHRoZSB0b3RhbCBzaXplCisJICogb2YgYSBz
aW5nbGUgc2FtcGxlIHJlY29yZC4KKwkgKi8KKwlpbnQgc2FtcGxlX3NpemU7CisKKwkvKioKKwkg
KiBAY3R4OiAlTlVMTCBpZiBtZWFzdXJpbmcgc3lzdGVtLXdpZGUgYWNyb3NzIGFsbCBjb250ZXh0
cyBvciBhCisJICogc3BlY2lmaWMgY29udGV4dCB0aGF0IGlzIGJlaW5nIG1vbml0b3JlZC4KKwkg
Ki8KKwlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4OworCisJLyoqCisJICogQGVuYWJsZWQ6
IFdoZXRoZXIgdGhlIHN0cmVhbSBpcyBjdXJyZW50bHkgZW5hYmxlZCwgY29uc2lkZXJpbmcKKwkg
KiB3aGV0aGVyIHRoZSBzdHJlYW0gd2FzIG9wZW5lZCBpbiBhIGRpc2FibGVkIHN0YXRlIGFuZCBi
YXNlZAorCSAqIG9uIGBJOTE1X1BFUkZfSU9DVExfRU5BQkxFYCBhbmQgYEk5MTVfUEVSRl9JT0NU
TF9ESVNBQkxFYCBjYWxscy4KKwkgKi8KKwlib29sIGVuYWJsZWQ7CisKKwkvKioKKwkgKiBAb3Bz
OiBUaGUgY2FsbGJhY2tzIHByb3ZpZGluZyB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBzcGVj
aWZpYworCSAqIHR5cGUgb2YgY29uZmlndXJlZCBzdHJlYW0uCisJICovCisJY29uc3Qgc3RydWN0
IGk5MTVfcGVyZl9zdHJlYW1fb3BzICpvcHM7CisKKwkvKioKKwkgKiBAb2FfY29uZmlnOiBUaGUg
T0EgY29uZmlndXJhdGlvbiB1c2VkIGJ5IHRoZSBzdHJlYW0uCisJICovCisJc3RydWN0IGk5MTVf
b2FfY29uZmlnICpvYV9jb25maWc7CisKKwkvKioKKwkgKiBUaGUgT0EgY29udGV4dCBzcGVjaWZp
YyBpbmZvcm1hdGlvbi4KKwkgKi8KKwlzdHJ1Y3QgaW50ZWxfY29udGV4dCAqcGlubmVkX2N0eDsK
Kwl1MzIgc3BlY2lmaWNfY3R4X2lkOworCXUzMiBzcGVjaWZpY19jdHhfaWRfbWFzazsKKworCXN0
cnVjdCBocnRpbWVyIHBvbGxfY2hlY2tfdGltZXI7CisJd2FpdF9xdWV1ZV9oZWFkX3QgcG9sbF93
cTsKKwlib29sIHBvbGxpbjsKKworCWJvb2wgcGVyaW9kaWM7CisJaW50IHBlcmlvZF9leHBvbmVu
dDsKKworCS8qKgorCSAqIFN0YXRlIG9mIHRoZSBPQSBidWZmZXIuCisJICovCisJc3RydWN0IHsK
KwkJc3RydWN0IGk5MTVfdm1hICp2bWE7CisJCXU4ICp2YWRkcjsKKwkJdTMyIGxhc3RfY3R4X2lk
OworCQlpbnQgZm9ybWF0OworCQlpbnQgZm9ybWF0X3NpemU7CisJCWludCBzaXplX2V4cG9uZW50
OworCisJCS8qKgorCQkgKiBMb2NrcyByZWFkcyBhbmQgd3JpdGVzIHRvIGFsbCBoZWFkL3RhaWwg
c3RhdGUKKwkJICoKKwkJICogQ29uc2lkZXI6IHRoZSBoZWFkIGFuZCB0YWlsIHBvaW50ZXIgc3Rh
dGUgbmVlZHMgdG8gYmUgcmVhZAorCQkgKiBjb25zaXN0ZW50bHkgZnJvbSBhIGhydGltZXIgY2Fs
bGJhY2sgKGF0b21pYyBjb250ZXh0KSBhbmQKKwkJICogcmVhZCgpIGZvcCAodXNlciBjb250ZXh0
KSB3aXRoIHRhaWwgcG9pbnRlciB1cGRhdGVzIGhhcHBlbmluZworCQkgKiBpbiBhdG9taWMgY29u
dGV4dCBhbmQgaGVhZCB1cGRhdGVzIGluIHVzZXIgY29udGV4dCBhbmQgdGhlCisJCSAqICh1bmxp
a2VseSkgcG9zc2liaWxpdHkgb2YgcmVhZCgpIGVycm9ycyBuZWVkaW5nIHRvIHJlc2V0IGFsbAor
CQkgKiBoZWFkL3RhaWwgc3RhdGUuCisJCSAqCisJCSAqIE5vdGU6IENvbnRlbnRpb24vcGVyZm9y
bWFuY2UgYXJlbid0IGN1cnJlbnRseSBhIHNpZ25pZmljYW50CisJCSAqIGNvbmNlcm4gaGVyZSBj
b25zaWRlcmluZyB0aGUgcmVsYXRpdmVseSBsb3cgZnJlcXVlbmN5IG9mCisJCSAqIGhydGltZXIg
Y2FsbGJhY2tzICg1bXMgcGVyaW9kKSBhbmQgdGhhdCByZWFkcyB0eXBpY2FsbHkgb25seQorCQkg
KiBoYXBwZW4gaW4gcmVzcG9uc2UgdG8gYSBocnRpbWVyIGV2ZW50IGFuZCBsaWtlbHkgY29tcGxl
dGUKKwkJICogYmVmb3JlIHRoZSBuZXh0IGNhbGxiYWNrLgorCQkgKgorCQkgKiBOb3RlOiBUaGlz
IGxvY2sgaXMgbm90IGhlbGQgKndoaWxlKiByZWFkaW5nIGFuZCBjb3B5aW5nIGRhdGEKKwkJICog
dG8gdXNlcnNwYWNlIHNvIHRoZSB2YWx1ZSBvZiBoZWFkIG9ic2VydmVkIGluIGh0cmltZXIKKwkJ
ICogY2FsbGJhY2tzIHdvbid0IHJlcHJlc2VudCBhbnkgcGFydGlhbCBjb25zdW1wdGlvbiBvZiBk
YXRhLgorCQkgKi8KKwkJc3BpbmxvY2tfdCBwdHJfbG9jazsKKworCQkvKioKKwkJICogT25lICdh
Z2luZycgdGFpbCBwb2ludGVyIGFuZCBvbmUgJ2FnZWQnIHRhaWwgcG9pbnRlciByZWFkeSB0bwor
CQkgKiB1c2VkIGZvciByZWFkaW5nLgorCQkgKgorCQkgKiBJbml0aWFsIHZhbHVlcyBvZiAweGZm
ZmZmZmZmIGFyZSBpbnZhbGlkIGFuZCBpbXBseSB0aGF0IGFuCisJCSAqIHVwZGF0ZSBpcyByZXF1
aXJlZCAoYW5kIHNob3VsZCBiZSBpZ25vcmVkIGJ5IGFuIGF0dGVtcHRlZAorCQkgKiByZWFkKQor
CQkgKi8KKwkJc3RydWN0IHsKKwkJCXUzMiBvZmZzZXQ7CisJCX0gdGFpbHNbMl07CisKKwkJLyoq
CisJCSAqIEluZGV4IGZvciB0aGUgYWdlZCB0YWlsIHJlYWR5IHRvIHJlYWQoKSBkYXRhIHVwIHRv
LgorCQkgKi8KKwkJdW5zaWduZWQgaW50IGFnZWRfdGFpbF9pZHg7CisKKwkJLyoqCisJCSAqIEEg
bW9ub3RvbmljIHRpbWVzdGFtcCBmb3Igd2hlbiB0aGUgY3VycmVudCBhZ2luZyB0YWlsIHBvaW50
ZXIKKwkJICogd2FzIHJlYWQ7IHVzZWQgdG8gZGV0ZXJtaW5lIHdoZW4gaXQgaXMgb2xkIGVub3Vn
aCB0byB0cnVzdC4KKwkJICovCisJCXU2NCBhZ2luZ190aW1lc3RhbXA7CisKKwkJLyoqCisJCSAq
IEFsdGhvdWdoIHdlIGNhbiBhbHdheXMgcmVhZCBiYWNrIHRoZSBoZWFkIHBvaW50ZXIgcmVnaXN0
ZXIsCisJCSAqIHdlIHByZWZlciB0byBhdm9pZCB0cnVzdGluZyB0aGUgSFcgc3RhdGUsIGp1c3Qg
dG8gYXZvaWQgYW55CisJCSAqIHJpc2sgdGhhdCBzb21lIGhhcmR3YXJlIGNvbmRpdGlvbiBjb3Vs
ZCAqIHNvbWVob3cgYnVtcCB0aGUKKwkJICogaGVhZCBwb2ludGVyIHVucHJlZGljdGFibHkgYW5k
IGNhdXNlIHVzIHRvIGZvcndhcmQgdGhlIHdyb25nCisJCSAqIE9BIGJ1ZmZlciBkYXRhIHRvIHVz
ZXJzcGFjZS4KKwkJICovCisJCXUzMiBoZWFkOworCX0gb2FfYnVmZmVyOworfTsKKworLyoqCisg
KiBzdHJ1Y3QgaTkxNV9vYV9vcHMgLSBHZW4gc3BlY2lmaWMgaW1wbGVtZW50YXRpb24gb2YgYW4g
T0EgdW5pdCBzdHJlYW0KKyAqLworc3RydWN0IGk5MTVfb2Ffb3BzIHsKKwkvKioKKwkgKiBAaXNf
dmFsaWRfYl9jb3VudGVyX3JlZzogVmFsaWRhdGVzIHJlZ2lzdGVyJ3MgYWRkcmVzcyBmb3IKKwkg
KiBwcm9ncmFtbWluZyBib29sZWFuIGNvdW50ZXJzIGZvciBhIHBhcnRpY3VsYXIgcGxhdGZvcm0u
CisJICovCisJYm9vbCAoKmlzX3ZhbGlkX2JfY291bnRlcl9yZWcpKHN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiwKKwkJCQkgICAgICAgdTMyIGFkZHIpOworCisJLyoqCisJICogQGlz
X3ZhbGlkX211eF9yZWc6IFZhbGlkYXRlcyByZWdpc3RlcidzIGFkZHJlc3MgZm9yIHByb2dyYW1t
aW5nIG11eAorCSAqIGZvciBhIHBhcnRpY3VsYXIgcGxhdGZvcm0uCisJICovCisJYm9vbCAoKmlz
X3ZhbGlkX211eF9yZWcpKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIGFk
ZHIpOworCisJLyoqCisJICogQGlzX3ZhbGlkX2ZsZXhfcmVnOiBWYWxpZGF0ZXMgcmVnaXN0ZXIn
cyBhZGRyZXNzIGZvciBwcm9ncmFtbWluZworCSAqIGZsZXggRVUgZmlsdGVyaW5nIGZvciBhIHBh
cnRpY3VsYXIgcGxhdGZvcm0uCisJICovCisJYm9vbCAoKmlzX3ZhbGlkX2ZsZXhfcmVnKShzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBhZGRyKTsKKworCS8qKgorCSAqIEBl
bmFibGVfbWV0cmljX3NldDogU2VsZWN0cyBhbmQgYXBwbGllcyBhbnkgTVVYIGNvbmZpZ3VyYXRp
b24gdG8gc2V0CisJICogdXAgdGhlIEJvb2xlYW4gYW5kIEN1c3RvbSAoQi9DKSBjb3VudGVycyB0
aGF0IGFyZSBwYXJ0IG9mIHRoZQorCSAqIGNvdW50ZXIgcmVwb3J0cyBiZWluZyBzYW1wbGVkLiBN
YXkgYXBwbHkgc3lzdGVtIGNvbnN0cmFpbnRzIHN1Y2ggYXMKKwkgKiBkaXNhYmxpbmcgRVUgY2xv
Y2sgZ2F0aW5nIGFzIHJlcXVpcmVkLgorCSAqLworCWludCAoKmVuYWJsZV9tZXRyaWNfc2V0KShz
dHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKTsKKworCS8qKgorCSAqIEBkaXNhYmxlX21l
dHJpY19zZXQ6IFJlbW92ZSBzeXN0ZW0gY29uc3RyYWludHMgYXNzb2NpYXRlZCB3aXRoIHVzaW5n
CisJICogdGhlIE9BIHVuaXQuCisJICovCisJdm9pZCAoKmRpc2FibGVfbWV0cmljX3NldCkoc3Ry
dWN0IGk5MTVfcGVyZl9zdHJlYW0gKnN0cmVhbSk7CisKKwkvKioKKwkgKiBAb2FfZW5hYmxlOiBF
bmFibGUgcGVyaW9kaWMgc2FtcGxpbmcKKwkgKi8KKwl2b2lkICgqb2FfZW5hYmxlKShzdHJ1Y3Qg
aTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFtKTsKKworCS8qKgorCSAqIEBvYV9kaXNhYmxlOiBEaXNh
YmxlIHBlcmlvZGljIHNhbXBsaW5nCisJICovCisJdm9pZCAoKm9hX2Rpc2FibGUpKHN0cnVjdCBp
OTE1X3BlcmZfc3RyZWFtICpzdHJlYW0pOworCisJLyoqCisJICogQHJlYWQ6IENvcHkgZGF0YSBm
cm9tIHRoZSBjaXJjdWxhciBPQSBidWZmZXIgaW50byBhIGdpdmVuIHVzZXJzcGFjZQorCSAqIGJ1
ZmZlci4KKwkgKi8KKwlpbnQgKCpyZWFkKShzdHJ1Y3QgaTkxNV9wZXJmX3N0cmVhbSAqc3RyZWFt
LAorCQkgICAgY2hhciBfX3VzZXIgKmJ1ZiwKKwkJICAgIHNpemVfdCBjb3VudCwKKwkJICAgIHNp
emVfdCAqb2Zmc2V0KTsKKworCS8qKgorCSAqIEBvYV9od190YWlsX3JlYWQ6IHJlYWQgdGhlIE9B
IHRhaWwgcG9pbnRlciByZWdpc3RlcgorCSAqCisJICogSW4gcGFydGljdWxhciB0aGlzIGVuYWJs
ZXMgdXMgdG8gc2hhcmUgYWxsIHRoZSBmaWRkbHkgY29kZSBmb3IKKwkgKiBoYW5kbGluZyB0aGUg
T0EgdW5pdCB0YWlsIHBvaW50ZXIgcmFjZSB0aGF0IGFmZmVjdHMgbXVsdGlwbGUKKwkgKiBnZW5l
cmF0aW9ucy4KKwkgKi8KKwl1MzIgKCpvYV9od190YWlsX3JlYWQpKHN0cnVjdCBpOTE1X3BlcmZf
c3RyZWFtICpzdHJlYW0pOworfTsKKworI2VuZGlmIC8qIF9JOTE1X1BFUkZfVFlQRVNfSF8gKi8K
LS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3Jn
Cmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

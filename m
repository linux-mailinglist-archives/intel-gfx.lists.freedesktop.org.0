Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id B885B2584FF
	for <lists+intel-gfx@lfdr.de>; Tue,  1 Sep 2020 03:06:45 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3936D6E536;
	Tue,  1 Sep 2020 01:06:43 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 13D686E550
 for <intel-gfx@lists.freedesktop.org>; Tue,  1 Sep 2020 01:06:42 +0000 (UTC)
IronPort-SDR: hjnrWo7j5MBHgddkbPba2ewLcIzKu8a+nFRBIMSagUsdHLFPqYuxJXltUza5+9PGO6d5it5ZFO
 /97Zz6znUDpQ==
X-IronPort-AV: E=McAfee;i="6000,8403,9730"; a="156343631"
X-IronPort-AV: E=Sophos;i="5.76,376,1592895600"; d="scan'208";a="156343631"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 31 Aug 2020 18:06:41 -0700
IronPort-SDR: AH/XoKs41rd4bn0hr87fo+qMLROl4MnPzfv+TdjcZAyVte/XeZbWBWB19yGNZoOmGKbg/k0C3V
 M8vJJLkTTMPQ==
X-IronPort-AV: E=Sophos;i="5.76,376,1592895600"; d="scan'208";a="476977343"
Received: from josouza-mobl2.jf.intel.com (HELO josouza-MOBL2.intel.com)
 ([10.24.14.51])
 by orsmga005-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 31 Aug 2020 18:06:40 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 31 Aug 2020 18:09:23 -0700
Message-Id: <20200901010924.235808-3-jose.souza@intel.com>
X-Mailer: git-send-email 2.28.0
In-Reply-To: <20200901010924.235808-1-jose.souza@intel.com>
References: <20200901010924.235808-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 3/4] drm/i915/display: Program PSR2 selective
 fetch registers
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QW5vdGhlciBzdGVwIHRvd2FyZHMgUFNSMiBzZWxlY3RpdmUgZmV0Y2gsIGhlcmUgcHJvZ3JhbW1p
bmcgcGxhbmUKc2VsZWN0aXZlIGZldGNoIHJlZ2lzdGVycyBhbmQgTUFOX1RSS19DVEwgZW5hYmxp
bmcgc2VsZWN0aXZlIGZldGNoIGJ1dApmb3Igbm93IGl0IGlzIGZldGNoaW5nIHRoZSB3aG9sZSBh
cmVhIG9mIHRoZSBwbGFuZXMuClRoZSBkYW1hZ2VkIGFyZWEgY2FsY3VsYXRpb24gd2lsbCBjb21l
IGFzIG5leHQgYW5kIGZpbmFsIHN0ZXAuCgpCU3BlYzogNTUyMjkKQ2M6IEd3YW4tZ3llb25nIE11
biA8Z3dhbi1neWVvbmcubXVuQGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUu
c3lyamFsYUBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEpvc8OpIFJvYmVydG8gZGUg
U291emEgPGpvc2Uuc291emFAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAxMCArLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgICAyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcHNyLmMgICAgICB8IDEyOSArKysrKysrKysrKysrKysrKy0KIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmggICAgICB8ICAxMCArLQogZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyAgIHwgICAzICsKIDUgZmlsZXMgY2hhbmdl
ZCwgMTQ1IGluc2VydGlvbnMoKyksIDkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBjOGIxZGQxYTllNDYuLjg2NTQ4NmU4
OTkxNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMK
QEAgLTExNzk5LDYgKzExNzk5LDkgQEAgc3RhdGljIHZvaWQgaTl4eF91cGRhdGVfY3Vyc29yKHN0
cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gOSkK
IAkJc2tsX3dyaXRlX2N1cnNvcl93bShwbGFuZSwgY3J0Y19zdGF0ZSk7CiAKKwlpZiAoIW5lZWRz
X21vZGVzZXQoY3J0Y19zdGF0ZSkpCisJCWludGVsX3BzcjJfcHJvZ3JhbV9wbGFuZV9zZWxfZmV0
Y2gocGxhbmUsIGNydGNfc3RhdGUsIHBsYW5lX3N0YXRlLCAwKTsKKwogCWlmIChwbGFuZS0+Y3Vy
c29yLmJhc2UgIT0gYmFzZSB8fAogCSAgICBwbGFuZS0+Y3Vyc29yLnNpemUgIT0gZmJjX2N0bCB8
fAogCSAgICBwbGFuZS0+Y3Vyc29yLmNudGwgIT0gY250bCkgewpAQCAtMTI4MTAsOCArMTI4MTMs
MTEgQEAgc3RhdGljIGludCBpbnRlbF9jcnRjX2F0b21pY19jaGVjayhzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSwKIAogCX0KIAotCWlmICghbW9kZV9jaGFuZ2VkKQotCQlpbnRlbF9w
c3IyX3NlbF9mZXRjaF91cGRhdGUoc3RhdGUsIGNydGMpOworCWlmICghbW9kZV9jaGFuZ2VkKSB7
CisJCXJldCA9IGludGVsX3BzcjJfc2VsX2ZldGNoX3VwZGF0ZShzdGF0ZSwgY3J0Yyk7CisJCWlm
IChyZXQpCisJCQlyZXR1cm4gcmV0OworCX0KIAogCXJldHVybiAwOwogfQpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCA5MzQ5
YjE1YWZmZjYuLjIxMzhiYjBmMTU4NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAgLTU4Niw2ICs1ODYsOCBAQCBzdHJ1Y3Qg
aW50ZWxfcGxhbmVfc3RhdGUgewogCXUzMiBwbGFuYXJfc2xhdmU7CiAKIAlzdHJ1Y3QgZHJtX2lu
dGVsX3Nwcml0ZV9jb2xvcmtleSBja2V5OworCisJc3RydWN0IGRybV9yZWN0IHBzcjJfc2VsX2Zl
dGNoX2FyZWE7CiB9OwogCiBzdHJ1Y3QgaW50ZWxfaW5pdGlhbF9wbGFuZV9jb25maWcgewpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmMKaW5kZXggNjY5OGQwMjA5ODc5Li5i
NjBlYTEzM2E1MjcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfcHNyLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYwpA
QCAtMTE3Myw2ICsxMTczLDQ2IEBAIHN0YXRpYyB2b2lkIHBzcl9mb3JjZV9od190cmFja2luZ19l
eGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJaW50ZWxfcHNyX2V4aXQo
ZGV2X3ByaXYpOwogfQogCit2b2lkIGludGVsX3BzcjJfcHJvZ3JhbV9wbGFuZV9zZWxfZmV0Y2go
c3RydWN0IGludGVsX3BsYW5lICpwbGFuZSwKKwkJCQkJY29uc3Qgc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCisJCQkJCWNvbnN0IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAq
cGxhbmVfc3RhdGUsCisJCQkJCWludCBjb2xvcl9wbGFuZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KHBsYW5lLT5iYXNlLmRldik7CisJY29uc3Qgc3Ry
dWN0IGRybV9yZWN0ICpjbGlwOworCWVudW0gcGlwZSBwaXBlID0gcGxhbmUtPnBpcGU7CisJdTMy
IHZhbDsKKworCWlmICghcGxhbmVfc3RhdGUgfHwgIWRldl9wcml2LT5wc3IucHNyMl9zZWxfZmV0
Y2hfZW5hYmxlZCkKKwkJcmV0dXJuOworCisJLyoKKwkgKiBza2xfcGxhbmVfY3RsX2NydGMoKS9p
OXh4X2N1cnNvcl9jdGxfY3J0YygpIHJldHVybiAwIGZvciBnZW4xMSssIHNvCisJICogcGxhbmVf
c3RhdGUtPmN0bCBpcyB0aGUgcmlnaHQgdmFsdWUKKwkgKi8KKwlpbnRlbF9kZV93cml0ZV9mdyhk
ZXZfcHJpdiwgUExBTkVfU0VMX0ZFVENIX0NUTChwaXBlLCBwbGFuZS0+aWQpLCBwbGFuZV9zdGF0
ZS0+Y3RsKTsKKwlpZiAoIXBsYW5lX3N0YXRlLT5jdGwgfHwgcGxhbmUtPmlkID09IFBMQU5FX0NV
UlNPUikKKwkJcmV0dXJuOworCisJY2xpcCA9ICZwbGFuZV9zdGF0ZS0+cHNyMl9zZWxfZmV0Y2hf
YXJlYTsKKworCXZhbCA9IChjbGlwLT55MSArIHBsYW5lX3N0YXRlLT51YXBpLmNydGNfeSkgPDwg
MTY7CisJdmFsIHw9IHBsYW5lX3N0YXRlLT51YXBpLmNydGNfeDsKKwlpbnRlbF9kZV93cml0ZV9m
dyhkZXZfcHJpdiwgUExBTkVfU0VMX0ZFVENIX1BPUyhwaXBlLCBwbGFuZS0+aWQpLAorCQkJICB2
YWwpOworCisJdmFsID0gKGNsaXAtPnkxICsgcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lW2NvbG9y
X3BsYW5lXS55KSA8PCAxNjsKKwl2YWwgfD0gcGxhbmVfc3RhdGUtPmNvbG9yX3BsYW5lW2NvbG9y
X3BsYW5lXS54OworCWludGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQTEFORV9TRUxfRkVUQ0hf
T0ZGU0VUKHBpcGUsIHBsYW5lLT5pZCksCisJCQkgIHZhbCk7CisKKwkvKiBTaXplcyBhcmUgMCBi
YXNlZCAqLworCXZhbCA9IChkcm1fcmVjdF9oZWlnaHQoY2xpcCkgLSAxKSA8PCAxNjsKKwl2YWwg
fD0gKGRybV9yZWN0X3dpZHRoKCZwbGFuZV9zdGF0ZS0+dWFwaS5zcmMpID4+IDE2KSAtIDE7CisJ
aW50ZWxfZGVfd3JpdGVfZncoZGV2X3ByaXYsIFBMQU5FX1NFTF9GRVRDSF9TSVpFKHBpcGUsIHBs
YW5lLT5pZCksCisJCQkgIHZhbCk7Cit9CisKIHZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5z
X21hbl90cmtfY3RsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQog
ewogCXN0cnVjdCBpbnRlbF9jcnRjICpjcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51
YXBpLmNydGMpOwpAQCAtMTE4NywxNyArMTIyNyw5NiBAQCB2b2lkIGludGVsX3BzcjJfcHJvZ3Jh
bV90cmFuc19tYW5fdHJrX2N0bChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19z
dAogCQkgICAgICAgY3J0Y19zdGF0ZS0+cHNyMl9tYW5fdHJhY2tfY3RsKTsKIH0KIAotdm9pZCBp
bnRlbF9wc3IyX3NlbF9mZXRjaF91cGRhdGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUsCi0JCQkJIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjKQorc3RhdGljIHZvaWQgcHNyMl9tYW5f
dHJrX2N0bF9jYWxjKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCSAg
c3RydWN0IGRybV9yZWN0ICpjbGlwLCBib29sIGZ1bGxfdXBkYXRlKQoreworCXUzMiB2YWwgPSBQ
U1IyX01BTl9UUktfQ1RMX0VOQUJMRTsKKworCWlmIChmdWxsX3VwZGF0ZSkgeworCQl2YWwgfD0g
UFNSMl9NQU5fVFJLX0NUTF9TRl9TSU5HTEVfRlVMTF9GUkFNRTsKKwkJZ290byBleGl0OworCX0K
KworCWRybV9XQVJOX09OX09OQ0UoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYsIGNsaXAtPnkx
ID09IC0xKTsKKworCXZhbCB8PSBQU1IyX01BTl9UUktfQ1RMX1NGX1BBUlRJQUxfRlJBTUVfVVBE
QVRFOworCXZhbCB8PSBQU1IyX01BTl9UUktfQ1RMX1NVX1JFR0lPTl9TVEFSVF9BRERSKGNsaXAt
PnkxIC8gNCArIDEpOworCXZhbCB8PSBQU1IyX01BTl9UUktfQ1RMX1NVX1JFR0lPTl9FTkRfQURE
UihESVZfUk9VTkRfVVAoY2xpcC0+eTIsIDQpICsgMSk7CitleGl0OgorCWNydGNfc3RhdGUtPnBz
cjJfbWFuX3RyYWNrX2N0bCA9IHZhbDsKK30KKworc3RhdGljIHZvaWQgY2xpcF9hcmVhX3VwZGF0
ZShzdHJ1Y3QgZHJtX3JlY3QgKm92ZXJsYXBfZGFtYWdlX2FyZWEsCisJCQkgICAgIHN0cnVjdCBk
cm1fcmVjdCAqZGFtYWdlX2FyZWEpCit7CisJaWYgKG92ZXJsYXBfZGFtYWdlX2FyZWEtPnkxID09
IC0xKSB7CisJCW92ZXJsYXBfZGFtYWdlX2FyZWEtPnkxID0gZGFtYWdlX2FyZWEtPnkxOworCQlv
dmVybGFwX2RhbWFnZV9hcmVhLT55MiA9IGRhbWFnZV9hcmVhLT55MjsKKwkJcmV0dXJuOworCX0K
KworCWlmIChkYW1hZ2VfYXJlYS0+eTEgPCBvdmVybGFwX2RhbWFnZV9hcmVhLT55MSkKKwkJb3Zl
cmxhcF9kYW1hZ2VfYXJlYS0+eTEgPSBkYW1hZ2VfYXJlYS0+eTE7CisKKwlpZiAoZGFtYWdlX2Fy
ZWEtPnkyID4gb3ZlcmxhcF9kYW1hZ2VfYXJlYS0+eTIpCisJCW92ZXJsYXBfZGFtYWdlX2FyZWEt
PnkyID0gZGFtYWdlX2FyZWEtPnkyOworfQorCitpbnQgaW50ZWxfcHNyMl9zZWxfZmV0Y2hfdXBk
YXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAorCQkJCXN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjKQogewogCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlID0gaW50
ZWxfYXRvbWljX2dldF9uZXdfY3J0Y19zdGF0ZShzdGF0ZSwgY3J0Yyk7CiAJc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7CisJc3RydWN0
IGludGVsX3BsYW5lX3N0YXRlICpuZXdfcGxhbmVfc3RhdGUsICpvbGRfcGxhbmVfc3RhdGU7CisJ
c3RydWN0IGRybV9yZWN0IHBpcGVfY2xpcCA9IHsgLnkxID0gLTEgfTsKKwlzdHJ1Y3QgaW50ZWxf
cGxhbmUgKnBsYW5lOworCWJvb2wgZnVsbF91cGRhdGUgPSBmYWxzZTsKKwlpbnQgaSwgcmV0Owog
CiAJaWYgKCFkZXZfcHJpdi0+cHNyLnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQpCi0JCXJldHVybjsK
KwkJcmV0dXJuIDA7CisKKwlyZXQgPSBkcm1fYXRvbWljX2FkZF9hZmZlY3RlZF9wbGFuZXMoJnN0
YXRlLT5iYXNlLCAmY3J0Yy0+YmFzZSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCWZv
cl9lYWNoX29sZG5ld19pbnRlbF9wbGFuZV9pbl9zdGF0ZShzdGF0ZSwgcGxhbmUsIG9sZF9wbGFu
ZV9zdGF0ZSwKKwkJCQkJICAgICBuZXdfcGxhbmVfc3RhdGUsIGkpIHsKKwkJc3RydWN0IGRybV9y
ZWN0ICpwbGFuZV9zZWxfZmV0Y2hfYXJlYSwgdGVtcDsKIAotCWNydGNfc3RhdGUtPnBzcjJfbWFu
X3RyYWNrX2N0bCA9IFBTUjJfTUFOX1RSS19DVExfRU5BQkxFIHwKLQkJCQkJIFBTUjJfTUFOX1RS
S19DVExfU0ZfU0lOR0xFX0ZVTExfRlJBTUU7CisJCWlmIChuZXdfcGxhbmVfc3RhdGUtPnVhcGku
Y3J0YyAhPSBjcnRjX3N0YXRlLT51YXBpLmNydGMpCisJCQljb250aW51ZTsKKworCQkvKgorCQkg
KiBUT0RPOiBOb3QgY2xlYXIgaG93IHRvIGhhbmRsZSBwbGFuZXMgd2l0aCBuZWdhdGl2ZSBwb3Np
dGlvbiwKKwkJICogYWxzbyBwbGFuZXMgYXJlIG5vdCB1cGRhdGVkIGlmIHRoZXkgaGF2ZSBhIG5l
Z2F0aXZlIFgKKwkJICogcG9zaXRpb24gc28gZm9yIG5vdyBkb2luZyBhIGZ1bGwgdXBkYXRlIGlu
IHRoaXMgY2FzZXMKKwkJICovCisJCWlmIChuZXdfcGxhbmVfc3RhdGUtPnVhcGkuY3J0Y195IDwg
MCB8fAorCQkgICAgbmV3X3BsYW5lX3N0YXRlLT51YXBpLmNydGNfeCA8IDApIHsKKwkJCWZ1bGxf
dXBkYXRlID0gdHJ1ZTsKKwkJCWJyZWFrOworCQl9CisKKwkJaWYgKCFuZXdfcGxhbmVfc3RhdGUt
PnVhcGkudmlzaWJsZSkKKwkJCWNvbnRpbnVlOworCisJCS8qCisJCSAqIEZvciBub3cgZG9pbmcg
YSBzZWxlY3RpdmUgZmV0Y2ggaW4gdGhlIHdob2xlIHBsYW5lIGFyZWEsCisJCSAqIG9wdGltaXph
dGlvbnMgd2lsbCBjb21lIGluIHRoZSBmdXR1cmUuCisJCSAqLworCQlwbGFuZV9zZWxfZmV0Y2hf
YXJlYSA9ICZuZXdfcGxhbmVfc3RhdGUtPnBzcjJfc2VsX2ZldGNoX2FyZWE7CisJCXBsYW5lX3Nl
bF9mZXRjaF9hcmVhLT55MSA9IG5ld19wbGFuZV9zdGF0ZS0+dWFwaS5zcmMueTEgPj4gMTY7CisJ
CXBsYW5lX3NlbF9mZXRjaF9hcmVhLT55MiA9IG5ld19wbGFuZV9zdGF0ZS0+dWFwaS5zcmMueTIg
Pj4gMTY7CisKKwkJdGVtcCA9ICpwbGFuZV9zZWxfZmV0Y2hfYXJlYTsKKwkJdGVtcC55MSArPSBu
ZXdfcGxhbmVfc3RhdGUtPnVhcGkuY3J0Y195OworCQl0ZW1wLnkyICs9IG5ld19wbGFuZV9zdGF0
ZS0+dWFwaS5jcnRjX3k7CisJCWNsaXBfYXJlYV91cGRhdGUoJnBpcGVfY2xpcCwgJnRlbXApOwor
CX0KKworCXBzcjJfbWFuX3Rya19jdGxfY2FsYyhjcnRjX3N0YXRlLCAmcGlwZV9jbGlwLCBmdWxs
X3VwZGF0ZSk7CisJcmV0dXJuIDA7CiB9CiAKIC8qKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfcHNyLmgKaW5kZXggNmE4M2M4ZTY4MmU2Li4zZWNhOWRjZWMzYzAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuaApAQCAtMTUsNiArMTUsOCBAQCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZTsKIHN0cnVjdCBpbnRlbF9kcDsKIHN0cnVjdCBpbnRlbF9jcnRj
Owogc3RydWN0IGludGVsX2F0b21pY19zdGF0ZTsKK3N0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZTsK
K3N0cnVjdCBpbnRlbF9wbGFuZTsKIAogI2RlZmluZSBDQU5fUFNSKGRldl9wcml2KSAoSEFTX1BT
UihkZXZfcHJpdikgJiYgZGV2X3ByaXYtPnBzci5zaW5rX3N1cHBvcnQpCiB2b2lkIGludGVsX3Bz
cl9pbml0X2RwY2Qoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCk7CkBAIC00NSw4ICs0NywxMiBA
QCB2b2lkIGludGVsX3Bzcl9hdG9taWNfY2hlY2soc3RydWN0IGRybV9jb25uZWN0b3IgKmNvbm5l
Y3RvciwKIAkJCSAgICBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAqb2xkX3N0YXRlLAogCQkJ
ICAgIHN0cnVjdCBkcm1fY29ubmVjdG9yX3N0YXRlICpuZXdfc3RhdGUpOwogdm9pZCBpbnRlbF9w
c3Jfc2V0X2ZvcmNlX21vZGVfY2hhbmdlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKLXZv
aWQgaW50ZWxfcHNyMl9zZWxfZmV0Y2hfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlLAotCQkJCSBzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0Yyk7CitpbnQgaW50ZWxfcHNyMl9z
ZWxfZmV0Y2hfdXBkYXRlKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAorCQkJCXN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjKTsKIHZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3RyYW5zX21h
bl90cmtfY3RsKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsKK3Zv
aWQgaW50ZWxfcHNyMl9wcm9ncmFtX3BsYW5lX3NlbF9mZXRjaChzdHJ1Y3QgaW50ZWxfcGxhbmUg
KnBsYW5lLAorCQkJCQljb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwK
KwkJCQkJY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJCQkJ
aW50IGNvbG9yX3BsYW5lKTsKIAogI2VuZGlmIC8qIF9fSU5URUxfUFNSX0hfXyAqLwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMKaW5kZXggMTc5N2EwNmNmZDYw
Li4yNGVlOWIwOGVjNGEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfc3ByaXRlLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9z
cHJpdGUuYwpAQCAtNjkwLDYgKzY5MCw5IEBAIHNrbF9wcm9ncmFtX3BsYW5lKHN0cnVjdCBpbnRl
bF9wbGFuZSAqcGxhbmUsCiAJCWludGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQTEFORV9BVVhf
T0ZGU0VUKHBpcGUsIHBsYW5lX2lkKSwKIAkJCQkgIChwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVb
MV0ueSA8PCAxNikgfCBwbGFuZV9zdGF0ZS0+Y29sb3JfcGxhbmVbMV0ueCk7CiAKKwlpZiAoIWRy
bV9hdG9taWNfY3J0Y19uZWVkc19tb2Rlc2V0KCZjcnRjX3N0YXRlLT51YXBpKSkKKwkJaW50ZWxf
cHNyMl9wcm9ncmFtX3BsYW5lX3NlbF9mZXRjaChwbGFuZSwgY3J0Y19zdGF0ZSwgcGxhbmVfc3Rh
dGUsIGNvbG9yX3BsYW5lKTsKKwogCS8qCiAJICogVGhlIGNvbnRyb2wgcmVnaXN0ZXIgc2VsZi1h
cm1zIGlmIHRoZSBwbGFuZSB3YXMgcHJldmlvdXNseQogCSAqIGRpc2FibGVkLiBUcnkgdG8gbWFr
ZSB0aGUgcGxhbmUgZW5hYmxlIGF0b21pYyBieSB3cml0aW5nCi0tIAoyLjI4LjAKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5n
IGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

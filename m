Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E1F07281FAB
	for <lists+intel-gfx@lfdr.de>; Sat,  3 Oct 2020 02:18:59 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 207C66E9FA;
	Sat,  3 Oct 2020 00:18:54 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2D9CE6E9F6
 for <intel-gfx@lists.freedesktop.org>; Sat,  3 Oct 2020 00:18:52 +0000 (UTC)
IronPort-SDR: nhUuqgdpT2EeIGK+coxspN7xH+AGcuOnXm9vscu9JzFU1hhPj3G1fYX/q3uQJl1O49YoZI5YZs
 KYP99zJCJh0w==
X-IronPort-AV: E=McAfee;i="6000,8403,9762"; a="143102204"
X-IronPort-AV: E=Sophos;i="5.77,329,1596524400"; d="scan'208";a="143102204"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga005.jf.intel.com ([10.7.209.41])
 by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 02 Oct 2020 17:18:51 -0700
IronPort-SDR: jqmAwPSrOh8MJNZsljVQIXERfHQkjWtOB0ckix/LxJeXaU63YEzDf42OeuOjuMwv5g4LEHR3nV
 rzCnhqig0PXA==
X-IronPort-AV: E=Sophos;i="5.77,329,1596524400"; d="scan'208";a="511239360"
Received: from ideak-desk.fi.intel.com ([10.237.68.141])
 by orsmga005-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 02 Oct 2020 17:18:50 -0700
From: Imre Deak <imre.deak@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Sat,  3 Oct 2020 03:18:43 +0300
Message-Id: <20201003001846.1271151-3-imre.deak@intel.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20201003001846.1271151-1-imre.deak@intel.com>
References: <20201003001846.1271151-1-imre.deak@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 2/5] drm/i915: Move the initial fastset commit
 check to encoder hooks
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

TW92ZSB0aGUgY2hlY2tzIHRvIGRlY2lkZSB3aGV0aGVyIGEgZmFzdHNldCBpcyBwb3NzaWJsZSBk
dXJpbmcgdGhlCmluaXRpYWwgY29tbWl0IHRvIGFuIGVuY29kZXIgaG9vay4gVGhpcyBjaGVjayBp
cyByZWFsbHkgZW5jb2RlciBzcGVjaWZpYwphbmQgdGhlIG5leHQgcGF0Y2ggd2lsbCBhbHNvIHJl
cXVpcmUgdGhpcyBhZGRpbmcgYSBEUCBlbmNvZGVyIHNwZWNpZmljCmNoZWNrLgoKQ2M6IFZpbGxl
IFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6
IEltcmUgRGVhayA8aW1yZS5kZWFrQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ljbF9kc2kuYyAgICAgICAgfCAxNCArKysrKysrKysKIGRyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMgICAgICB8IDEwICsrKysrKysKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8IDI5ICsrKysrKysrKy0tLS0tLS0t
LS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICA4ICsr
KysrCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgICAgICAgfCAyMiAr
KysrKysrKysrKysrKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oICAg
ICAgIHwgIDMgKysKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHBfbXN0LmMg
ICB8IDEwICsrKysrKysKIDcgZmlsZXMgY2hhbmdlZCwgODAgaW5zZXJ0aW9ucygrKSwgMTYgZGVs
ZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xf
ZHNpLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ljbF9kc2kuYwppbmRleCBmZTk0
NmEyZTIwODIuLjZjNzIyMDUwNjQxMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pY2xfZHNpLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pY2xf
ZHNpLmMKQEAgLTE2NjgsNiArMTY2OCwxOSBAQCBzdGF0aWMgYm9vbCBnZW4xMV9kc2lfZ2V0X2h3
X3N0YXRlKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCXJldHVybiByZXQ7CiB9CiAK
K3N0YXRpYyBib29sIGdlbjExX2RzaV9pbml0aWFsX2Zhc3RzZXRfY2hlY2soc3RydWN0IGludGVs
X2VuY29kZXIgKmVuY29kZXIsCisJCQkJCSAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSkKK3sKKwlpZiAoIWNydGNfc3RhdGUtPmRzYy5jb21wcmVzc2lvbl9lbmFibGUpIHsK
KwkJZHJtX2RiZ19rbXMoZW5jb2Rlci0+YmFzZS5kZXYsICJGb3JjaW5nIGZ1bGwgbW9kZXNldCBk
dWUgdG8gRFNDIGJlaW5nIGVuYWJsZWRcbiIpOworCQljcnRjX3N0YXRlLT51YXBpLm1vZGVfY2hh
bmdlZCA9IHRydWU7CisKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCXJldHVybiB0cnVlOworfQor
CiBzdGF0aWMgdm9pZCBnZW4xMV9kc2lfZW5jb2Rlcl9kZXN0cm95KHN0cnVjdCBkcm1fZW5jb2Rl
ciAqZW5jb2RlcikKIHsKIAlpbnRlbF9lbmNvZGVyX2Rlc3Ryb3koZW5jb2Rlcik7CkBAIC0xOTIz
LDYgKzE5MzYsNyBAQCB2b2lkIGljbF9kc2lfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCiAJZW5jb2Rlci0+dXBkYXRlX3BpcGUgPSBpbnRlbF9wYW5lbF91cGRhdGVfYmFj
a2xpZ2h0OwogCWVuY29kZXItPmNvbXB1dGVfY29uZmlnID0gZ2VuMTFfZHNpX2NvbXB1dGVfY29u
ZmlnOwogCWVuY29kZXItPmdldF9od19zdGF0ZSA9IGdlbjExX2RzaV9nZXRfaHdfc3RhdGU7CisJ
ZW5jb2Rlci0+aW5pdGlhbF9mYXN0c2V0X2NoZWNrID0gZ2VuMTFfZHNpX2luaXRpYWxfZmFzdHNl
dF9jaGVjazsKIAllbmNvZGVyLT50eXBlID0gSU5URUxfT1VUUFVUX0RTSTsKIAllbmNvZGVyLT5j
bG9uZWFibGUgPSAwOwogCWVuY29kZXItPnBpcGVfbWFzayA9IH4wOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKaW5kZXggYjRjNTIwMzQ4YjNiLi40ZTU0YzU1ZWM5OWYg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGRpLmMKKysr
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpAQCAtNDU2NCw2ICs0
NTY0LDE1IEBAIHZvaWQgaW50ZWxfZGRpX2dldF9jb25maWcoc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCiAJaW50ZWxfcmVhZF9kcF9zZHAoZW5jb2RlciwgcGlwZV9jb25maWcsIERQX1NE
UF9WU0MpOwogfQogCitzdGF0aWMgYm9vbCBpbnRlbF9kZGlfaW5pdGlhbF9mYXN0c2V0X2NoZWNr
KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAorCQkJCQkgICAgc3RydWN0IGludGVsX2Ny
dGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJaWYgKGludGVsX2NydGNfaGFzX2RwX2VuY29kZXIo
Y3J0Y19zdGF0ZSkpCisJCXJldHVybiBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2soZW5j
b2RlciwgY3J0Y19zdGF0ZSk7CisKKwlyZXR1cm4gdHJ1ZTsKK30KKwogc3RhdGljIGVudW0gaW50
ZWxfb3V0cHV0X3R5cGUKIGludGVsX2RkaV9jb21wdXRlX291dHB1dF90eXBlKHN0cnVjdCBpbnRl
bF9lbmNvZGVyICplbmNvZGVyLAogCQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNy
dGNfc3RhdGUsCkBAIC01MTczLDYgKzUxODIsNyBAQCB2b2lkIGludGVsX2RkaV9pbml0KHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgZW51bSBwb3J0IHBvcnQpCiAJZW5jb2Rlci0+
dXBkYXRlX3BpcGUgPSBpbnRlbF9kZGlfdXBkYXRlX3BpcGU7CiAJZW5jb2Rlci0+Z2V0X2h3X3N0
YXRlID0gaW50ZWxfZGRpX2dldF9od19zdGF0ZTsKIAllbmNvZGVyLT5nZXRfY29uZmlnID0gaW50
ZWxfZGRpX2dldF9jb25maWc7CisJZW5jb2Rlci0+aW5pdGlhbF9mYXN0c2V0X2NoZWNrID0gaW50
ZWxfZGRpX2luaXRpYWxfZmFzdHNldF9jaGVjazsKIAllbmNvZGVyLT5zdXNwZW5kID0gaW50ZWxf
ZHBfZW5jb2Rlcl9zdXNwZW5kOwogCWVuY29kZXItPmdldF9wb3dlcl9kb21haW5zID0gaW50ZWxf
ZGRpX2dldF9wb3dlcl9kb21haW5zOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGlzcGxheS5jCmluZGV4IDc1M2YyMDJlZjZhMC4uMzFiZTYzMjI1YjEwIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTc5NTEsNiAr
MTc5NTEsOCBAQCBzdGF0aWMgaW50IGludGVsX2luaXRpYWxfY29tbWl0KHN0cnVjdCBkcm1fZGV2
aWNlICpkZXYpCiAJCX0KIAogCQlpZiAoY3J0Y19zdGF0ZS0+aHcuYWN0aXZlKSB7CisJCQlzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKwogCQkJLyoKIAkJCSAqIFdlJ3ZlIG5vdCB5ZXQg
ZGV0ZWN0ZWQgc2luayBjYXBhYmlsaXRpZXMKIAkJCSAqIChhdWRpbyxpbmZvZnJhbWVzLGV0Yy4p
IGFuZCB0aHVzIHdlIGRvbid0IHdhbnQgdG8KQEAgLTE3OTcyLDIyICsxNzk3NCwxNyBAQCBzdGF0
aWMgaW50IGludGVsX2luaXRpYWxfY29tbWl0KHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAJCQkg
Ki8KIAkJCWNydGNfc3RhdGUtPnVhcGkuY29sb3JfbWdtdF9jaGFuZ2VkID0gdHJ1ZTsKIAotCQkJ
LyoKLQkJCSAqIEZJWE1FIGhhY2sgdG8gZm9yY2UgZnVsbCBtb2Rlc2V0IHdoZW4gRFNDIGlzIGJl
aW5nCi0JCQkgKiB1c2VkLgotCQkJICoKLQkJCSAqIEFzIGxvbmcgYXMgd2UgZG8gbm90IGhhdmUg
ZnVsbCBzdGF0ZSByZWFkb3V0IGFuZAotCQkJICogY29uZmlnIGNvbXBhcmlzb24gb2YgY3J0Y19z
dGF0ZS0+ZHNjLCB3ZSBoYXZlIG5vIHdheQotCQkJICogdG8gZW5zdXJlIHJlbGlhYmxlIGZhc3Rz
ZXQuIFJlbW92ZSBvbmNlIHdlIGhhdmUKLQkJCSAqIHJlYWRvdXQgZm9yIERTQy4KLQkJCSAqLwot
CQkJaWYgKGNydGNfc3RhdGUtPmRzYy5jb21wcmVzc2lvbl9lbmFibGUpIHsKLQkJCQlyZXQgPSBk
cm1fYXRvbWljX2FkZF9hZmZlY3RlZF9jb25uZWN0b3JzKHN0YXRlLAotCQkJCQkJCQkJICZjcnRj
LT5iYXNlKTsKLQkJCQlpZiAocmV0KQotCQkJCQlnb3RvIG91dDsKLQkJCQljcnRjX3N0YXRlLT51
YXBpLm1vZGVfY2hhbmdlZCA9IHRydWU7Ci0JCQkJZHJtX2RiZ19rbXMoZGV2LCAiRm9yY2UgZnVs
bCBtb2Rlc2V0IGZvciBEU0NcbiIpOworCQkJZm9yX2VhY2hfaW50ZWxfZW5jb2Rlcl9tYXNrKGRl
diwgZW5jb2RlciwKKwkJCQkJCSAgICBjcnRjX3N0YXRlLT51YXBpLmVuY29kZXJfbWFzaykgewor
CQkJCWlmIChlbmNvZGVyLT5pbml0aWFsX2Zhc3RzZXRfY2hlY2sgJiYKKwkJCQkgICAgIWVuY29k
ZXItPmluaXRpYWxfZmFzdHNldF9jaGVjayhlbmNvZGVyLCBjcnRjX3N0YXRlKSkgeworCQkJCQly
ZXQgPSBkcm1fYXRvbWljX2FkZF9hZmZlY3RlZF9jb25uZWN0b3JzKHN0YXRlLAorCQkJCQkJCQkJ
CSAmY3J0Yy0+YmFzZSk7CisJCQkJCWlmIChyZXQpCisJCQkJCQlnb3RvIG91dDsKKworCQkJCQli
cmVhazsKKwkJCQl9CiAJCQl9CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IGQ1ZGMxOGNiOGMzOS4uNTI5N2Iy
ZjA4ZmY5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfdHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rp
c3BsYXlfdHlwZXMuaApAQCAtMTg3LDYgKzE4NywxNCBAQCBzdHJ1Y3QgaW50ZWxfZW5jb2RlciB7
CiAJICogYmUgc2V0IGNvcnJlY3RseSBiZWZvcmUgY2FsbGluZyB0aGlzIGZ1bmN0aW9uLiAqLwog
CXZvaWQgKCpnZXRfY29uZmlnKShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqLAogCQkJICAgc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKnBpcGVfY29uZmlnKTsKKworCS8qCisJICogT3B0aW9uYWwgaG9v
aywgcmV0dXJuaW5nIHRydWUgaWYgdGhpcyBlbmNvZGVyIGFsbG93cyBhIGZhc3RzZXQKKwkgKiBk
dXJpbmcgdGhlIGluaXRpYWwgY29tbWl0LCBmYWxzZSBvdGhlcndpc2UuCisJICovCisJYm9vbCAo
KmluaXRpYWxfZmFzdHNldF9jaGVjaykoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJ
CQkJICAgICAgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOworCiAJLyoKIAkg
KiBBY3F1aXJlcyB0aGUgcG93ZXIgZG9tYWlucyBuZWVkZWQgZm9yIGFuIGFjdGl2ZSBlbmNvZGVy
IGR1cmluZwogCSAqIGhhcmR3YXJlIHN0YXRlIHJlYWRvdXQuCmRpZmYgLS1naXQgYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RwLmMKaW5kZXggNzQyOTU5N2I1N2JlLi5kMzNhM2Q5ZmRjM2EgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZHAuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmMKQEAgLTM3MDMsNiArMzcwMywyNyBA
QCBzdGF0aWMgdm9pZCBpbnRlbF9kcF9nZXRfY29uZmlnKHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyLAogCX0KIH0KIAorYm9vbCBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2soc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCisJCQkJICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpjcnRjX3N0YXRlKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gdG9f
aTkxNShlbmNvZGVyLT5iYXNlLmRldik7CisKKwkvKgorCSAqIEZJWE1FIGhhY2sgdG8gZm9yY2Ug
ZnVsbCBtb2Rlc2V0IHdoZW4gRFNDIGlzIGJlaW5nIHVzZWQuCisJICoKKwkgKiBBcyBsb25nIGFz
IHdlIGRvIG5vdCBoYXZlIGZ1bGwgc3RhdGUgcmVhZG91dCBhbmQgY29uZmlnIGNvbXBhcmlzb24K
KwkgKiBvZiBjcnRjX3N0YXRlLT5kc2MsIHdlIGhhdmUgbm8gd2F5IHRvIGVuc3VyZSByZWxpYWJs
ZSBmYXN0c2V0LgorCSAqIFJlbW92ZSBvbmNlIHdlIGhhdmUgcmVhZG91dCBmb3IgRFNDLgorCSAq
LworCWlmIChjcnRjX3N0YXRlLT5kc2MuY29tcHJlc3Npb25fZW5hYmxlKSB7CisJCWRybV9kYmdf
a21zKCZpOTE1LT5kcm0sICJGb3JjaW5nIGZ1bGwgbW9kZXNldCBkdWUgdG8gRFNDIGJlaW5nIGVu
YWJsZWRcbiIpOworCQljcnRjX3N0YXRlLT51YXBpLm1vZGVfY2hhbmdlZCA9IHRydWU7CisJCXJl
dHVybiBmYWxzZTsKKwl9CisKKwlyZXR1cm4gdHJ1ZTsKK30KKwogc3RhdGljIHZvaWQgaW50ZWxf
ZGlzYWJsZV9kcChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCSAgICAgc3Ry
dWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIsCiAJCQkgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwKQEAgLTgwNTcsNiArODA3OCw3IEBAIGJvb2wgaW50
ZWxfZHBfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJaW50ZWxfZW5j
b2Rlci0+Y29tcHV0ZV9jb25maWcgPSBpbnRlbF9kcF9jb21wdXRlX2NvbmZpZzsKIAlpbnRlbF9l
bmNvZGVyLT5nZXRfaHdfc3RhdGUgPSBpbnRlbF9kcF9nZXRfaHdfc3RhdGU7CiAJaW50ZWxfZW5j
b2Rlci0+Z2V0X2NvbmZpZyA9IGludGVsX2RwX2dldF9jb25maWc7CisJaW50ZWxfZW5jb2Rlci0+
aW5pdGlhbF9mYXN0c2V0X2NoZWNrID0gaW50ZWxfZHBfaW5pdGlhbF9mYXN0c2V0X2NoZWNrOwog
CWludGVsX2VuY29kZXItPnVwZGF0ZV9waXBlID0gaW50ZWxfcGFuZWxfdXBkYXRlX2JhY2tsaWdo
dDsKIAlpbnRlbF9lbmNvZGVyLT5zdXNwZW5kID0gaW50ZWxfZHBfZW5jb2Rlcl9zdXNwZW5kOwog
CWlmIChJU19DSEVSUllWSUVXKGRldl9wcml2KSkgewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kcC5oCmluZGV4IDY2ODU0YWFiOTg4Ny4uOTc3NTg1YWVhM2M4IDEwMDY0NAotLS0g
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwLmgKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5oCkBAIC0xNDEsNCArMTQxLDcgQEAgdm9pZCBp
bnRlbF9kZGlfdXBkYXRlX3BpcGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiBp
bnQgaW50ZWxfZHBfaW5pdF9oZGNwKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0
LAogCQkgICAgICAgc3RydWN0IGludGVsX2Nvbm5lY3RvciAqaW50ZWxfY29ubmVjdG9yKTsKIAor
Ym9vbCBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2soc3RydWN0IGludGVsX2VuY29kZXIg
KmVuY29kZXIsCisJCQkJICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKTsK
KwogI2VuZGlmIC8qIF9fSU5URUxfRFBfSF9fICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kcF9tc3QuYwppbmRleCA4MmYzOGMzODZkYmQuLmU5NDhhYWNiZDRhYiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcF9tc3QuYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2RwX21zdC5jCkBAIC01OTEsNiAr
NTkxLDE1IEBAIHN0YXRpYyB2b2lkIGludGVsX2RwX21zdF9lbmNfZ2V0X2NvbmZpZyhzdHJ1Y3Qg
aW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAlpbnRlbF9kZGlfZ2V0X2NvbmZpZygmZGlnX3BvcnQt
PmJhc2UsIHBpcGVfY29uZmlnKTsKIH0KIAorc3RhdGljIGJvb2wgaW50ZWxfZHBfbXN0X2luaXRp
YWxfZmFzdHNldF9jaGVjayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKKwkJCQkJICAg
ICAgIHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCXN0cnVjdCBpbnRl
bF9kcF9tc3RfZW5jb2RlciAqaW50ZWxfbXN0ID0gZW5jX3RvX21zdChlbmNvZGVyKTsKKwlzdHJ1
Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGludGVsX21zdC0+cHJpbWFyeTsKKwor
CXJldHVybiBpbnRlbF9kcF9pbml0aWFsX2Zhc3RzZXRfY2hlY2soJmRpZ19wb3J0LT5iYXNlLCBj
cnRjX3N0YXRlKTsKK30KKwogc3RhdGljIGludCBpbnRlbF9kcF9tc3RfZ2V0X2RkY19tb2Rlcyhz
dHJ1Y3QgZHJtX2Nvbm5lY3RvciAqY29ubmVjdG9yKQogewogCXN0cnVjdCBpbnRlbF9jb25uZWN0
b3IgKmludGVsX2Nvbm5lY3RvciA9IHRvX2ludGVsX2Nvbm5lY3Rvcihjb25uZWN0b3IpOwpAQCAt
ODk3LDYgKzkwNiw3IEBAIGludGVsX2RwX2NyZWF0ZV9mYWtlX21zdF9lbmNvZGVyKHN0cnVjdCBp
bnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0LCBlbnVtIHBpcGUKIAlpbnRlbF9lbmNvZGVyLT5l
bmFibGUgPSBpbnRlbF9tc3RfZW5hYmxlX2RwOwogCWludGVsX2VuY29kZXItPmdldF9od19zdGF0
ZSA9IGludGVsX2RwX21zdF9lbmNfZ2V0X2h3X3N0YXRlOwogCWludGVsX2VuY29kZXItPmdldF9j
b25maWcgPSBpbnRlbF9kcF9tc3RfZW5jX2dldF9jb25maWc7CisJaW50ZWxfZW5jb2Rlci0+aW5p
dGlhbF9mYXN0c2V0X2NoZWNrID0gaW50ZWxfZHBfbXN0X2luaXRpYWxfZmFzdHNldF9jaGVjazsK
IAogCXJldHVybiBpbnRlbF9tc3Q7CiAKLS0gCjIuMjUuMQoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1n
ZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21h
aWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

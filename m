Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id DCEC013D6C6
	for <lists+intel-gfx@lfdr.de>; Thu, 16 Jan 2020 10:24:42 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 55D616EC62;
	Thu, 16 Jan 2020 09:24:41 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 906896EC60
 for <intel-gfx@lists.freedesktop.org>; Thu, 16 Jan 2020 09:24:38 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 16 Jan 2020 01:24:38 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,325,1574150400"; d="scan'208";a="214016857"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by orsmga007.jf.intel.com with ESMTP; 16 Jan 2020 01:24:36 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 16 Jan 2020 11:22:14 +0200
Message-Id: <20200116092214.2342-6-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200116092214.2342-1-stanislav.lisovskiy@intel.com>
References: <20200116092214.2342-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v12 5/5] drm/i915: Correctly map DBUF slices to
 pipes
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWRkZWQgcHJvcGVyIERCdWYgc2xpY2UgbWFwcGluZyB0byBjb3JyZXNwb25kZW50CnBpcGVzLCBk
ZXBlbmRpbmcgb24gcGlwZSBjb25maWd1cmF0aW9uIGFzIHN0YXRlZAppbiBCU3BlYy4KCnYyOgog
ICAgLSBSZW1vdmUgdW5uZWVkZWQgYnJhY2VzCiAgICAtIFN0b3AgdXNpbmcgbWFjcm8gZm9yIERC
dWYgYXNzaWdubWVudHMgYXMKICAgICAgaXQgc2VlbXMgdG8gcmVkdWNlIHJlYWRhYmlsaXR5LgoK
djM6IFN0YXJ0IHVzaW5nIGVuYWJsZWQgc2xpY2VzIG1hc2sgaW4gZGV2X3ByaXYKCnY0OiBSZW5h
bWVkICJlbmFibGVkX3NsaWNlcyIgdXNlZCBpbiBkZXZfcHJpdgogICAgdG8gImVuYWJsZWRfZGJ1
Zl9zbGljZXNfbWFzayIoTWF0dCBSb3BlcikKCnY1OiAtIFJlbW92ZWQgcmVkdW5kYW50IHBhcmFt
ZXRlcnMgZnJvbQogICAgICBpbnRlbF9nZXRfZGRiX3NpemUgZnVuY3Rpb24uKE1hdHQgUm9wZXIp
CiAgICAtIE1hZGUgaTkxNV9wb3NzaWJsZV9kYnVmX3NsaWNlcyBzdGF0aWMoTWF0dCBSb3BlcikK
ICAgIC0gUmVuYW1lZCB0b3RhbF93aWR0aCBpbnRvIHRvdGFsX3dpZHRoX2luX3JhbmdlCiAgICAg
IHNvIHRoYXQgaXQgbm93IHJlZmxlY3RzIHRoYXQgdGhpcyBpcyBub3QKICAgICAgYSB0b3RhbCBw
aXBlIHdpZHRoIGJ1dCB0aGUgb25lIGluIGN1cnJlbnQKICAgICAgZGJ1ZiBzbGljZSBhbGxvd2Vk
IHJhbmdlIGZvciBwaXBlLihNYXR0IFJvcGVyKQogICAgLSBSZW1vdmVkIDR0aCBwaXBlIGZvciBJ
Q0wgaW4gREJ1ZiBhc3NpZ25tZW50CiAgICAgIHRhYmxlKE1hdHQgUm9wZXIpCiAgICAtIEZpeGVk
IHdyb25nIERCdWYgc2xpY2UgaW4gREJ1ZiB0YWJsZSBmb3IgVEdMCiAgICAgIChNYXR0IFJvcGVy
KQogICAgLSBBZGRlZCBjb21tZW50IHJlZ2FyZGluZyB3aHkgd2UgY3VycmVudGx5IG5vdAogICAg
ICB1c2luZyBwaXBlIHJhdGlvIGZvciBEQnVmIGFzc2lnbm1lbnQgZm9yIElDTAoKdjY6IC0gQ2hh
bmdlZCB1MzIgdG8gdW5zaWduZWQgaW50IGluCiAgICAgIGljbF9nZXRfZmlyc3RfZGJ1Zl9zbGlj
ZV9vZmZzZXQgZnVuY3Rpb24gc2lnbmF0dXJlCiAgICAgIChWaWxsZSBTeXJqw6Rsw6QpCiAgICAt
IENoYW5nZWQgYWxzbyB1MzIgdG8gdTggaW4gZGJ1ZiBzbGljZSBtYXNrIHN0cnVjdHVyZQogICAg
ICAoVmlsbGUgU3lyasOkbMOkKQogICAgLSBTd2l0Y2hlZCBmcm9tIERCVUZfUzFfQklUIHRvIGVu
dW0gKyBleHBsaWNpdAogICAgICBCSVQoREJVRl9TMSkgYWNjZXNzKFZpbGxlIFN5cmrDpGzDpCkK
ICAgIC0gU3dpdGNoZWQgdG8gbmFtZWQgaW5pdGlhbGl6ZXJzIGluIERCdWYgYXNzaWdubWVudAog
ICAgICBhcnJheXMoVmlsbGUgU3lyasOkbMOkKQogICAgLSBEQnVmIGFzc2lnbm1lbnQgYXJyYXlz
IG5vdyB1c2UgYXV0b2dlbmVyYXRpb24gdG9vbAogICAgICBmcm9tCiAgICAgIGh0dHBzOi8vcGF0
Y2h3b3JrLmZyZWVkZXNrdG9wLm9yZy9zZXJpZXMvNzA0OTMvCiAgICAgIHRvIGF2b2lkIHR5cG9z
LgogICAgLSBSZW5hbWVkIGk5MTVfZmluZF9waXBlX2NvbmYgdG8gKl9jb21wdXRlX2RidWZfc2xp
Y2VzCiAgICAgIChWaWxsZSBTeXJqw6Rsw6QpCiAgICAtIENoYW5nZWQgcGxhdGZvcm1zIG9yZGVy
aW5nIGluIHNrbF9jb21wdXRlX2RidWZfc2xpY2VzCiAgICAgIHRvIGJlIGZyb20gbmV3ZXN0IHRv
IG9sZGVzdChWaWxsZSBTeXJqw6Rsw6QpCgp2NzogLSBOb3cgT1JpbmcgYXNzaWduZWQgREJ1ZiBz
bGljZSBjb25maWcgYWx3YXlzIHdpdGggREJVRl9TMQogICAgICBiZWNhdXNlIHNsaWNlIDEgaGFz
IHRvIGJlIGNvbnN0YW50bHkgcG93ZXJlZCBvbi4KICAgICAgKFZpbGxlIFN5cmrDpGzDpCkKClNp
Z25lZC1vZmYtYnk6IFN0YW5pc2xhdiBMaXNvdnNraXkgPHN0YW5pc2xhdi5saXNvdnNraXlAaW50
ZWwuY29tPgotLS0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfcG93ZXIuYyAg
ICB8ICAgOSArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYyAgICAgICAgICAgICAg
IHwgMzk1ICsrKysrKysrKysrKysrKysrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0u
aCAgICAgICAgICAgICAgIHwgICAyICsKIDMgZmlsZXMgY2hhbmdlZCwgMzg0IGluc2VydGlvbnMo
KyksIDIyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV9wb3dlci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3Bvd2VyLmMKaW5kZXggNDcyOWJjYWZiOTM3Li5iODY4NDJiMWZmN2Eg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9w
b3dlci5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9w
b3dlci5jCkBAIC0xMDI5LDEyICsxMDI5LDEzIEBAIHN0YXRpYyBib29sIGdlbjlfZGNfb2ZmX3Bv
d2VyX3dlbGxfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAKIHN0
YXRpYyB2b2lkIGdlbjlfYXNzZXJ0X2RidWZfZW5hYmxlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCiB7Ci0JdTggZW5hYmxlZF9kYnVmX3NsaWNlcyA9IGludGVsX2VuYWJsZWRf
ZGJ1Zl9zbGljZXNfbWFzayhkZXZfcHJpdik7CisJdTggaHdfZW5hYmxlZF9kYnVmX3NsaWNlcyA9
IGludGVsX2VuYWJsZWRfZGJ1Zl9zbGljZXNfbWFzayhkZXZfcHJpdik7CisJdTggZW5hYmxlZF9k
YnVmX3NsaWNlcyA9IGRldl9wcml2LT5lbmFibGVkX2RidWZfc2xpY2VzX21hc2s7CiAKLQlXQVJO
KGVuYWJsZWRfZGJ1Zl9zbGljZXMgIT0gZGV2X3ByaXYtPmVuYWJsZWRfZGJ1Zl9zbGljZXNfbWFz
aywKKwlXQVJOKGh3X2VuYWJsZWRfZGJ1Zl9zbGljZXMgIT0gZW5hYmxlZF9kYnVmX3NsaWNlcywK
IAkgICAgICJVbmV4cGVjdGVkIERCdWYgcG93ZXIgcG93ZXIgc3RhdGUgKDB4JTA4eCwgZXhwZWN0
ZWQgMHglMDh4KVxuIiwKLQkgICAgIGVuYWJsZWRfZGJ1Zl9zbGljZXMsCi0JICAgICBkZXZfcHJp
di0+ZW5hYmxlZF9kYnVmX3NsaWNlc19tYXNrKTsKKwkgICAgIGh3X2VuYWJsZWRfZGJ1Zl9zbGlj
ZXMsCisJICAgICBlbmFibGVkX2RidWZfc2xpY2VzKTsKIH0KIAogc3RhdGljIHZvaWQgZ2VuOV9k
aXNhYmxlX2RjX3N0YXRlcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaW50ZWxfcG0uYwppbmRleCBiNGIyOTFkNDI0NGIuLmI5Y2ZiYmVhZWY4YiAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF9wbS5jCkBAIC0zODU2LDEzICszODU2LDI5IEBAIGJvb2wgaW50ZWxfY2Fu
X2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCXJldHVybiB0
cnVlOwogfQogCi1zdGF0aWMgdTE2IGludGVsX2dldF9kZGJfc2l6ZShzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYsCi0JCQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKLQkJCSAgICAgIGNvbnN0IHU2NCB0b3RhbF9kYXRhX3JhdGUsCi0JCQkg
ICAgICBjb25zdCBpbnQgbnVtX2FjdGl2ZSkKKy8qCisgKiBDYWxjdWxhdGUgaW5pdGlhbCBEQnVm
IHNsaWNlIG9mZnNldCwgYmFzZWQgb24gc2xpY2Ugc2l6ZQorICogYW5kIG1hc2soaS5lIGlmIHNs
aWNlIHNpemUgaXMgMTAyNCBhbmQgc2Vjb25kIHNsaWNlIGlzIGVuYWJsZWQKKyAqIG9mZnNldCB3
b3VsZCBiZSAxMDI0KQorICovCitzdGF0aWMgdW5zaWduZWQgaW50CitpY2xfZ2V0X2ZpcnN0X2Ri
dWZfc2xpY2Vfb2Zmc2V0KHUzMiBkYnVmX3NsaWNlX21hc2ssCisJCQkJdTMyIHNsaWNlX3NpemUs
CisJCQkJdTMyIGRkYl9zaXplKQoreworCXVuc2lnbmVkIGludCBvZmZzZXQgPSAwOworCisJaWYg
KCFkYnVmX3NsaWNlX21hc2spCisJCXJldHVybiAwOworCisJb2Zmc2V0ID0gKGZmcyhkYnVmX3Ns
aWNlX21hc2spIC0gMSkgKiBzbGljZV9zaXplOworCisJV0FSTl9PTihvZmZzZXQgPj0gZGRiX3Np
emUpOworCXJldHVybiBvZmZzZXQ7Cit9CisKK3N0YXRpYyB1MTYgaW50ZWxfZ2V0X2RkYl9zaXpl
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIHsKLQlzdHJ1Y3QgZHJtX2F0b21p
Y19zdGF0ZSAqc3RhdGUgPSBjcnRjX3N0YXRlLT51YXBpLnN0YXRlOwotCXN0cnVjdCBpbnRlbF9h
dG9taWNfc3RhdGUgKmludGVsX3N0YXRlID0gdG9faW50ZWxfYXRvbWljX3N0YXRlKHN0YXRlKTsK
IAl1MTYgZGRiX3NpemUgPSBJTlRFTF9JTkZPKGRldl9wcml2KS0+ZGRiX3NpemU7CiAKIAlXQVJO
X09OKGRkYl9zaXplID09IDApOwpAQCAtMzg3MCwxMiArMzg4NiwxMiBAQCBzdGF0aWMgdTE2IGlu
dGVsX2dldF9kZGJfc2l6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJaWYg
KElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkKIAkJcmV0dXJuIGRkYl9zaXplIC0gNDsgLyogNCBi
bG9ja3MgZm9yIGJ5cGFzcyBwYXRoIGFsbG9jYXRpb24gKi8KIAotCWludGVsX3N0YXRlLT5lbmFi
bGVkX2RidWZfc2xpY2VzX21hc2sgPSBCSVQoREJVRl9TMSk7Ci0JZGRiX3NpemUgLz0gMjsKLQog
CXJldHVybiBkZGJfc2l6ZTsKIH0KIAorc3RhdGljIHU4IHNrbF9jb21wdXRlX2RidWZfc2xpY2Vz
KGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAorCQkJCSAgdTMyIGFj
dGl2ZV9waXBlcyk7CisKIHN0YXRpYyB2b2lkCiBza2xfZGRiX2dldF9waXBlX2FsbG9jYXRpb25f
bGltaXRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJCQkgICBjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKQEAgLTM4ODcsMTAgKzM5MDMsMTcg
QEAgc2tsX2RkYl9nZXRfcGlwZV9hbGxvY2F0aW9uX2xpbWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCiAJc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqaW50ZWxfc3RhdGUg
PSB0b19pbnRlbF9hdG9taWNfc3RhdGUoc3RhdGUpOwogCXN0cnVjdCBkcm1fY3J0YyAqZm9yX2Ny
dGMgPSBjcnRjX3N0YXRlLT51YXBpLmNydGM7CiAJY29uc3Qgc3RydWN0IGludGVsX2NydGMgKmNy
dGM7Ci0JdTMyIHBpcGVfd2lkdGggPSAwLCB0b3RhbF93aWR0aCA9IDAsIHdpZHRoX2JlZm9yZV9w
aXBlID0gMDsKKwl1MzIgcGlwZV93aWR0aCA9IDAsIHRvdGFsX3dpZHRoX2luX3JhbmdlID0gMCwg
d2lkdGhfYmVmb3JlX3BpcGUgPSAwOwogCWVudW0gcGlwZSBmb3JfcGlwZSA9IHRvX2ludGVsX2Ny
dGMoZm9yX2NydGMpLT5waXBlOwogCXUxNiBkZGJfc2l6ZTsKKwl1MzIgZGRiX3JhbmdlX3NpemU7
CiAJdTMyIGk7CisJdTMyIGRidWZfc2xpY2VfbWFzazsKKwl1MzIgYWN0aXZlX3BpcGVzOworCXUz
MiBvZmZzZXQ7CisJdTMyIHNsaWNlX3NpemU7CisJdTMyIHRvdGFsX3NsaWNlX21hc2s7CisJdTMy
IHN0YXJ0LCBlbmQ7CiAKIAlpZiAoV0FSTl9PTighc3RhdGUpIHx8ICFjcnRjX3N0YXRlLT5ody5h
Y3RpdmUpIHsKIAkJYWxsb2MtPnN0YXJ0ID0gMDsKQEAgLTM5MDAsMTIgKzM5MjMsMTUgQEAgc2ts
X2RkYl9nZXRfcGlwZV9hbGxvY2F0aW9uX2xpbWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsCiAJfQogCiAJaWYgKGludGVsX3N0YXRlLT5hY3RpdmVfcGlwZV9jaGFuZ2VzKQot
CQkqbnVtX2FjdGl2ZSA9IGh3ZWlnaHQ4KGludGVsX3N0YXRlLT5hY3RpdmVfcGlwZXMpOworCQlh
Y3RpdmVfcGlwZXMgPSBpbnRlbF9zdGF0ZS0+YWN0aXZlX3BpcGVzOwogCWVsc2UKLQkJKm51bV9h
Y3RpdmUgPSBod2VpZ2h0OChkZXZfcHJpdi0+YWN0aXZlX3BpcGVzKTsKKwkJYWN0aXZlX3BpcGVz
ID0gZGV2X3ByaXYtPmFjdGl2ZV9waXBlczsKKworCSpudW1fYWN0aXZlID0gaHdlaWdodDgoYWN0
aXZlX3BpcGVzKTsKKworCWRkYl9zaXplID0gaW50ZWxfZ2V0X2RkYl9zaXplKGRldl9wcml2KTsK
IAotCWRkYl9zaXplID0gaW50ZWxfZ2V0X2RkYl9zaXplKGRldl9wcml2LCBjcnRjX3N0YXRlLCB0
b3RhbF9kYXRhX3JhdGUsCi0JCQkJICAgICAgKm51bV9hY3RpdmUpOworCXNsaWNlX3NpemUgPSBk
ZGJfc2l6ZSAvIElOVEVMX0lORk8oZGV2X3ByaXYpLT5udW1fc3VwcG9ydGVkX2RidWZfc2xpY2Vz
OwogCiAJLyoKIAkgKiBJZiB0aGUgc3RhdGUgZG9lc24ndCBjaGFuZ2UgdGhlIGFjdGl2ZSBDUlRD
J3Mgb3IgdGhlcmUgaXMgbm8KQEAgLTM5MjQsMjIgKzM5NTAsNzEgQEAgc2tsX2RkYl9nZXRfcGlw
ZV9hbGxvY2F0aW9uX2xpbWl0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJ
CXJldHVybjsKIAl9CiAKKwkvKgorCSAqIEdldCBhbGxvd2VkIERCdWYgc2xpY2VzIGZvciBjb3Jy
ZXNwb25kZW50IHBpcGUgYW5kIHBsYXRmb3JtLgorCSAqLworCWRidWZfc2xpY2VfbWFzayA9IHNr
bF9jb21wdXRlX2RidWZfc2xpY2VzKGNydGNfc3RhdGUsIGFjdGl2ZV9waXBlcyk7CisKKwlEUk1f
REVCVUdfS01TKCJEQnVmIHNsaWNlIG1hc2sgJXggcGlwZSAlZCBhY3RpdmUgcGlwZXMgJXhcbiIs
CisJCSAgICAgIGRidWZfc2xpY2VfbWFzaywKKwkJICAgICAgZm9yX3BpcGUsIGFjdGl2ZV9waXBl
cyk7CisKKwkvKgorCSAqIEZpZ3VyZSBvdXQgYXQgd2hpY2ggREJ1ZiBzbGljZSB3ZSBzdGFydCwg
aS5lIGlmIHdlIHN0YXJ0IGF0IERidWYgUzIKKwkgKiBhbmQgc2xpY2Ugc2l6ZSBpcyAxMDI0LCB0
aGUgb2Zmc2V0IHdvdWxkIGJlIDEwMjQKKwkgKi8KKwlvZmZzZXQgPSBpY2xfZ2V0X2ZpcnN0X2Ri
dWZfc2xpY2Vfb2Zmc2V0KGRidWZfc2xpY2VfbWFzaywKKwkJCQkJCSBzbGljZV9zaXplLCBkZGJf
c2l6ZSk7CisKKwkvKgorCSAqIEZpZ3VyZSBvdXQgdG90YWwgc2l6ZSBvZiBhbGxvd2VkIERCdWYg
c2xpY2VzLCB3aGljaCBpcyBiYXNpY2FsbHkKKwkgKiBhIG51bWJlciBvZiBhbGxvd2VkIHNsaWNl
cyBmb3IgdGhhdCBwaXBlIG11bHRpcGxpZWQgYnkgc2xpY2Ugc2l6ZS4KKwkgKiBJbnNpZGUgb2Yg
dGhpcworCSAqIHJhbmdlIGRkYiBlbnRyaWVzIGFyZSBzdGlsbCBhbGxvY2F0ZWQgaW4gcHJvcG9y
dGlvbiB0byBkaXNwbGF5IHdpZHRoLgorCSAqLworCWRkYl9yYW5nZV9zaXplID0gaHdlaWdodDgo
ZGJ1Zl9zbGljZV9tYXNrKSAqIHNsaWNlX3NpemU7CisKIAkvKgogCSAqIFdhdGVybWFyay9kZGIg
cmVxdWlyZW1lbnQgaGlnaGx5IGRlcGVuZHMgdXBvbiB3aWR0aCBvZiB0aGUKIAkgKiBmcmFtZWJ1
ZmZlciwgU28gaW5zdGVhZCBvZiBhbGxvY2F0aW5nIEREQiBlcXVhbGx5IGFtb25nIHBpcGVzCiAJ
ICogZGlzdHJpYnV0ZSBEREIgYmFzZWQgb24gcmVzb2x1dGlvbi93aWR0aCBvZiB0aGUgZGlzcGxh
eS4KIAkgKi8KKwl0b3RhbF9zbGljZV9tYXNrID0gZGJ1Zl9zbGljZV9tYXNrOwogCWZvcl9lYWNo
X25ld19pbnRlbF9jcnRjX2luX3N0YXRlKGludGVsX3N0YXRlLCBjcnRjLCBjcnRjX3N0YXRlLCBp
KSB7CiAJCWNvbnN0IHN0cnVjdCBkcm1fZGlzcGxheV9tb2RlICphZGp1c3RlZF9tb2RlID0KIAkJ
CSZjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwogCQllbnVtIHBpcGUgcGlwZSA9IGNydGMt
PnBpcGU7CiAJCWludCBoZGlzcGxheSwgdmRpc3BsYXk7CisJCXUzMiBwaXBlX2RidWZfc2xpY2Vf
bWFzazsKIAotCQlpZiAoIWNydGNfc3RhdGUtPmh3LmVuYWJsZSkKKwkJaWYgKCFjcnRjX3N0YXRl
LT5ody5hY3RpdmUpCisJCQljb250aW51ZTsKKworCQlwaXBlX2RidWZfc2xpY2VfbWFzayA9IHNr
bF9jb21wdXRlX2RidWZfc2xpY2VzKGNydGNfc3RhdGUsCisJCQkJCQkJICAgICAgIGFjdGl2ZV9w
aXBlcyk7CisKKwkJLyoKKwkJICogQWNjb3JkaW5nIHRvIEJTcGVjIHBpcGUgY2FuIHNoYXJlIG9u
ZSBkYnVmIHNsaWNlIHdpdGggYW5vdGhlcgorCQkgKiBwaXBlcyBvciBwaXBlIGNhbiB1c2UgbXVs
dGlwbGUgZGJ1ZnMsIGluIGJvdGggY2FzZXMgd2UKKwkJICogYWNjb3VudCBmb3Igb3RoZXIgcGlw
ZXMgb25seSBpZiB0aGV5IGhhdmUgZXhhY3RseSBzYW1lIG1hc2suCisJCSAqIEhvd2V2ZXIgd2Ug
bmVlZCB0byBhY2NvdW50IGhvdyBtYW55IHNsaWNlcyB3ZSBzaG91bGQgZW5hYmxlCisJCSAqIGlu
IHRvdGFsLgorCQkgKi8KKwkJdG90YWxfc2xpY2VfbWFzayB8PSBwaXBlX2RidWZfc2xpY2VfbWFz
azsKKworCQkvKgorCQkgKiBEbyBub3QgYWNjb3VudCBwaXBlcyB1c2luZyBvdGhlciBzbGljZSBz
ZXRzCisJCSAqIGx1Y2tpbHkgYXMgb2YgY3VycmVudCBCU3BlYyBzbGljZSBzZXRzIGRvIG5vdCBw
YXJ0aWFsbHkKKwkJICogaW50ZXJzZWN0KHBpcGVzIHNoYXJlIGVpdGhlciBzYW1lIG9uZSBzbGlj
ZSBvciBzYW1lIHNsaWNlIHNldAorCQkgKiBpLmUgbm8gcGFydGlhbCBpbnRlcnNlY3Rpb24pLCBz
byBpdCBpcyBlbm91Z2ggdG8gY2hlY2sgZm9yCisJCSAqIGVxdWFsaXR5IGZvciBub3cuCisJCSAq
LworCQlpZiAoZGJ1Zl9zbGljZV9tYXNrICE9IHBpcGVfZGJ1Zl9zbGljZV9tYXNrKQogCQkJY29u
dGludWU7CiAKIAkJZHJtX21vZGVfZ2V0X2h2X3RpbWluZyhhZGp1c3RlZF9tb2RlLCAmaGRpc3Bs
YXksICZ2ZGlzcGxheSk7Ci0JCXRvdGFsX3dpZHRoICs9IGhkaXNwbGF5OworCisJCXRvdGFsX3dp
ZHRoX2luX3JhbmdlICs9IGhkaXNwbGF5OwogCiAJCWlmIChwaXBlIDwgZm9yX3BpcGUpCiAJCQl3
aWR0aF9iZWZvcmVfcGlwZSArPSBoZGlzcGxheTsKQEAgLTM5NDcsOCArNDAyMiwzMSBAQCBza2xf
ZGRiX2dldF9waXBlX2FsbG9jYXRpb25fbGltaXRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAkJCXBpcGVfd2lkdGggPSBoZGlzcGxheTsKIAl9CiAKLQlhbGxvYy0+c3RhcnQg
PSBkZGJfc2l6ZSAqIHdpZHRoX2JlZm9yZV9waXBlIC8gdG90YWxfd2lkdGg7Ci0JYWxsb2MtPmVu
ZCA9IGRkYl9zaXplICogKHdpZHRoX2JlZm9yZV9waXBlICsgcGlwZV93aWR0aCkgLyB0b3RhbF93
aWR0aDsKKwkvKgorCSAqIEZJWE1FKGhvdz8pOgorCSAqIEl0IGxvb2tzIHJpZGljdWxvdXMuIEl0
IGxvb2tzIHN0dXBpZC4gQnV0IGN1cnJlbnRseSB3ZSBuZWVkIHRvIE9SIGl0CisJICogd2l0aCBE
QlVGX1MxIGJpdCBhbHdheXMsIGR1cmluZyBjb3JlX2luaXQvdW5pbml0LCB3ZSBoYXZlIHRvIGFs
d2F5cworCSAqIGhldmUgcG93ZXJlZCBvbiAxc3QgREJ1ZiBzbGljZSwgYWNjb3JkaW5nIHRvIEJT
cGVjKCEpLgorCSAqIFNvIGZvciB0aGlzIHJlYXNvbiBpY2wvc2tsX2RidWZfZW5hYmxlIGFsd2F5
cyBzZXRzIGl0IG9uLgorCSAqIEJ1dCB3ZSBub3cgaGF2ZSBhIHVuaWZpZWQgYXNzZXJ0aW9uIGlu
IGdlbjlfZGlzYWJsZV9kY19zdGF0ZXMsIHdoaWNoCisJICogaXMgc3VwcG9zZWQgdG8gY2hlY2sg
aWYgdGhlIGFjdHVhbCBzdGF0ZSBtYXRjaGVzIHN0YXRlIGluIGRldl9wcml2LgorCSAqIFRodXMg
d2UgYWx3YXlzIGdvaW5nIHRvIGhhdmUgYSBtaXNtYXRjaCEgU28gY3VycmVudGx5IHdlIGFyZSBn
b2luZworCSAqIHRvIE9SIGl0LCBrZWVwIERCVUZfUzEgY29uc3RhbnRseSBPTiBldmVuIHdoZW4g
dGhpcyBpcyBub3QgbmVlZGVkLi4KKwkgKi8KKwlpbnRlbF9zdGF0ZS0+ZW5hYmxlZF9kYnVmX3Ns
aWNlc19tYXNrID0gdG90YWxfc2xpY2VfbWFzayB8IEJJVChEQlVGX1MxKTsKKworCXN0YXJ0ID0g
ZGRiX3JhbmdlX3NpemUgKiB3aWR0aF9iZWZvcmVfcGlwZSAvIHRvdGFsX3dpZHRoX2luX3Jhbmdl
OworCWVuZCA9IGRkYl9yYW5nZV9zaXplICoKKwkJKHdpZHRoX2JlZm9yZV9waXBlICsgcGlwZV93
aWR0aCkgLyB0b3RhbF93aWR0aF9pbl9yYW5nZTsKKworCWFsbG9jLT5zdGFydCA9IG9mZnNldCAr
IHN0YXJ0OworCWFsbG9jLT5lbmQgPSBvZmZzZXQgKyBlbmQ7CisKKwlEUk1fREVCVUdfS01TKCJQ
aXBlICVkIGRkYiAlZC0lZFxuIiwgZm9yX3BpcGUsCisJCSAgICAgIGFsbG9jLT5zdGFydCwgYWxs
b2MtPmVuZCk7CisJRFJNX0RFQlVHX0tNUygiRW5hYmxlZCBkZGIgc2xpY2VzIG1hc2sgJXggbnVt
IHN1cHBvcnRlZCAlZFxuIiwKKwkJICAgICAgaW50ZWxfc3RhdGUtPmVuYWJsZWRfZGJ1Zl9zbGlj
ZXNfbWFzaywKKwkJICAgICAgSU5URUxfSU5GTyhkZXZfcHJpdiktPm51bV9zdXBwb3J0ZWRfZGJ1
Zl9zbGljZXMpOwogfQogCiBzdGF0aWMgaW50IHNrbF9jb21wdXRlX3dtX3BhcmFtcyhjb25zdCBz
dHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKQEAgLTQxMTksNiArNDIxNywyNjcg
QEAgc2tsX3BsYW5lX2Rvd25zY2FsZV9hbW91bnQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3Rh
dGUgKmNydGNfc3RhdGUsCiAJcmV0dXJuIG11bF9maXhlZDE2KGRvd25zY2FsZV93LCBkb3duc2Nh
bGVfaCk7CiB9CiAKK3N0cnVjdCBkYnVmX3NsaWNlX2NvbmZfZW50cnkgeworCXU4IGFjdGl2ZV9w
aXBlczsKKwl1OCBkYnVmX21hc2tbSTkxNV9NQVhfUElQRVNdOworfTsKKworLyoKKyAqIFRhYmxl
IHRha2VuIGZyb20gQnNwZWMgMTI3MTYKKyAqIFBpcGVzIGRvIGhhdmUgc29tZSBwcmVmZXJyZWQg
REJ1ZiBzbGljZSBhZmZpbml0eSwKKyAqIHBsdXMgdGhlcmUgYXJlIHNvbWUgaGFyZGNvZGVkIHJl
cXVpcmVtZW50cyBvbiBob3cKKyAqIHRob3NlIHNob3VsZCBiZSBkaXN0cmlidXRlZCBmb3IgbXVs
dGlwaXBlIHNjZW5hcmlvcy4KKyAqIEZvciBtb3JlIERCdWYgc2xpY2VzIGFsZ29yaXRobSBjYW4g
Z2V0IGV2ZW4gbW9yZSBtZXNzeQorICogYW5kIGxlc3MgcmVhZGFibGUsIHNvIGRlY2lkZWQgdG8g
dXNlIGEgdGFibGUgYWxtb3N0CisgKiBhcyBpcyBmcm9tIEJTcGVjIGl0c2VsZiAtIHRoYXQgd2F5
IGl0IGlzIGF0IGxlYXN0IGVhc2llcgorICogdG8gY29tcGFyZSwgY2hhbmdlIGFuZCBjaGVjay4K
KyAqLworc3RhdGljIHN0cnVjdCBkYnVmX3NsaWNlX2NvbmZfZW50cnkgaWNsX2FsbG93ZWRfZGJ1
ZnNbXSA9CisvKiBBdXRvZ2VuZXJhdGVkIHdpdGggaWd0L3Rvb2xzL2ludGVsX2RidWZfbWFwIHRv
b2w6ICovCit7CisJeworCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSksCisJCXsKKwkJCVtQ
SVBFX0FdID0gQklUKERCVUZfUzEpIHwgQklUKERCVUZfUzIpCisJCX0KKwl9LAorCXsKKwkJLmFj
dGl2ZV9waXBlcyA9IEJJVChQSVBFX0IpLAorCQl7CisJCQlbUElQRV9CXSA9IEJJVChEQlVGX1Mx
KSB8IEJJVChEQlVGX1MyKQorCQl9CisJfSwKKwl7CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQ
RV9BKSB8IEJJVChQSVBFX0IpLAorCQl7CisJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSwKKwkJ
CVtQSVBFX0JdID0gQklUKERCVUZfUzIpCisJCX0KKwl9LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9
IEJJVChQSVBFX0MpLAorCQl7CisJCQlbUElQRV9DXSA9IEJJVChEQlVGX1MyKSB8IEJJVChEQlVG
X1MxKQorCQl9CisJfSwKKwl7CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQRV9BKSB8IEJJVChQ
SVBFX0MpLAorCQl7CisJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSwKKwkJCVtQSVBFX0NdID0g
QklUKERCVUZfUzIpCisJCX0KKwl9LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0Ip
IHwgQklUKFBJUEVfQyksCisJCXsKKwkJCVtQSVBFX0JdID0gQklUKERCVUZfUzEpLAorCQkJW1BJ
UEVfQ10gPSBCSVQoREJVRl9TMikKKwkJfQorCX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0gQklU
KFBJUEVfQSkgfCBCSVQoUElQRV9CKSB8IEJJVChQSVBFX0MpLAorCQl7CisJCQlbUElQRV9BXSA9
IEJJVChEQlVGX1MxKSwKKwkJCVtQSVBFX0JdID0gQklUKERCVUZfUzEpLAorCQkJW1BJUEVfQ10g
PSBCSVQoREJVRl9TMikKKwkJfQorCX0sCit9OworCisvKgorICogVGFibGUgdGFrZW4gZnJvbSBC
c3BlYyA0OTI1NQorICogUGlwZXMgZG8gaGF2ZSBzb21lIHByZWZlcnJlZCBEQnVmIHNsaWNlIGFm
ZmluaXR5LAorICogcGx1cyB0aGVyZSBhcmUgc29tZSBoYXJkY29kZWQgcmVxdWlyZW1lbnRzIG9u
IGhvdworICogdGhvc2Ugc2hvdWxkIGJlIGRpc3RyaWJ1dGVkIGZvciBtdWx0aXBpcGUgc2NlbmFy
aW9zLgorICogRm9yIG1vcmUgREJ1ZiBzbGljZXMgYWxnb3JpdGhtIGNhbiBnZXQgZXZlbiBtb3Jl
IG1lc3N5CisgKiBhbmQgbGVzcyByZWFkYWJsZSwgc28gZGVjaWRlZCB0byB1c2UgYSB0YWJsZSBh
bG1vc3QKKyAqIGFzIGlzIGZyb20gQlNwZWMgaXRzZWxmIC0gdGhhdCB3YXkgaXQgaXMgYXQgbGVh
c3QgZWFzaWVyCisgKiB0byBjb21wYXJlLCBjaGFuZ2UgYW5kIGNoZWNrLgorICovCitzdGF0aWMg
c3RydWN0IGRidWZfc2xpY2VfY29uZl9lbnRyeSB0Z2xfYWxsb3dlZF9kYnVmc1tdID0KKy8qIEF1
dG9nZW5lcmF0ZWQgd2l0aCBpZ3QvdG9vbHMvaW50ZWxfZGJ1Zl9tYXAgdG9vbDogKi8KK3sKKwl7
CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQRV9BKSwKKwkJeworCQkJW1BJUEVfQV0gPSBCSVQo
REJVRl9TMSkgfCBCSVQoREJVRl9TMikKKwkJfQorCX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0g
QklUKFBJUEVfQiksCisJCXsKKwkJCVtQSVBFX0JdID0gQklUKERCVUZfUzEpIHwgQklUKERCVUZf
UzIpCisJCX0KKwl9LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0EpIHwgQklUKFBJ
UEVfQiksCisJCXsKKwkJCVtQSVBFX0FdID0gQklUKERCVUZfUzIpLAorCQkJW1BJUEVfQl0gPSBC
SVQoREJVRl9TMSkKKwkJfQorCX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQyks
CisJCXsKKwkJCVtQSVBFX0NdID0gQklUKERCVUZfUzIpIHwgQklUKERCVUZfUzEpCisJCX0KKwl9
LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQyksCisJCXsK
KwkJCVtQSVBFX0FdID0gQklUKERCVUZfUzEpLAorCQkJW1BJUEVfQ10gPSBCSVQoREJVRl9TMikK
KwkJfQorCX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQikgfCBCSVQoUElQRV9D
KSwKKwkJeworCQkJW1BJUEVfQl0gPSBCSVQoREJVRl9TMSksCisJCQlbUElQRV9DXSA9IEJJVChE
QlVGX1MyKQorCQl9CisJfSwKKwl7CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQRV9BKSB8IEJJ
VChQSVBFX0IpIHwgQklUKFBJUEVfQyksCisJCXsKKwkJCVtQSVBFX0FdID0gQklUKERCVUZfUzEp
LAorCQkJW1BJUEVfQl0gPSBCSVQoREJVRl9TMSksCisJCQlbUElQRV9DXSA9IEJJVChEQlVGX1My
KQorCQl9CisJfSwKKwl7CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQRV9EKSwKKwkJeworCQkJ
W1BJUEVfRF0gPSBCSVQoREJVRl9TMikgfCBCSVQoREJVRl9TMSkKKwkJfQorCX0sCisJeworCQku
YWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSkgfCBCSVQoUElQRV9EKSwKKwkJeworCQkJW1BJUEVf
QV0gPSBCSVQoREJVRl9TMSksCisJCQlbUElQRV9EXSA9IEJJVChEQlVGX1MyKQorCQl9CisJfSwK
Kwl7CisJCS5hY3RpdmVfcGlwZXMgPSBCSVQoUElQRV9CKSB8IEJJVChQSVBFX0QpLAorCQl7CisJ
CQlbUElQRV9CXSA9IEJJVChEQlVGX1MxKSwKKwkJCVtQSVBFX0RdID0gQklUKERCVUZfUzIpCisJ
CX0KKwl9LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikg
fCBCSVQoUElQRV9EKSwKKwkJeworCQkJW1BJUEVfQV0gPSBCSVQoREJVRl9TMSksCisJCQlbUElQ
RV9CXSA9IEJJVChEQlVGX1MxKSwKKwkJCVtQSVBFX0RdID0gQklUKERCVUZfUzIpCisJCX0KKwl9
LAorCXsKKwkJLmFjdGl2ZV9waXBlcyA9IEJJVChQSVBFX0MpIHwgQklUKFBJUEVfRCksCisJCXsK
KwkJCVtQSVBFX0NdID0gQklUKERCVUZfUzEpLAorCQkJW1BJUEVfRF0gPSBCSVQoREJVRl9TMikK
KwkJfQorCX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQSkgfCBCSVQoUElQRV9D
KSB8IEJJVChQSVBFX0QpLAorCQl7CisJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSwKKwkJCVtQ
SVBFX0NdID0gQklUKERCVUZfUzIpLAorCQkJW1BJUEVfRF0gPSBCSVQoREJVRl9TMikKKwkJfQor
CX0sCisJeworCQkuYWN0aXZlX3BpcGVzID0gQklUKFBJUEVfQikgfCBCSVQoUElQRV9DKSB8IEJJ
VChQSVBFX0QpLAorCQl7CisJCQlbUElQRV9CXSA9IEJJVChEQlVGX1MxKSwKKwkJCVtQSVBFX0Nd
ID0gQklUKERCVUZfUzIpLAorCQkJW1BJUEVfRF0gPSBCSVQoREJVRl9TMikKKwkJfQorCX0sCisJ
eworCQkuYWN0aXZlX3BpcGVzID0KKwkJCUJJVChQSVBFX0EpIHwgQklUKFBJUEVfQikgfCBCSVQo
UElQRV9DKSB8IEJJVChQSVBFX0QpLAorCQl7CisJCQlbUElQRV9BXSA9IEJJVChEQlVGX1MxKSwK
KwkJCVtQSVBFX0JdID0gQklUKERCVUZfUzEpLAorCQkJW1BJUEVfQ10gPSBCSVQoREJVRl9TMiks
CisJCQlbUElQRV9EXSA9IEJJVChEQlVGX1MyKQorCQl9CisJfSwKK307CisKK3N0YXRpYyB1OCBj
b21wdXRlX2RidWZfc2xpY2VzKGVudW0gcGlwZSBwaXBlLAorCQkJICAgICAgdTMyIGFjdGl2ZV9w
aXBlcywKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBkYnVmX3NsaWNlX2NvbmZfZW50cnkgKmRidWZf
c2xpY2VzLAorCQkJICAgICAgaW50IHNpemUpCit7CisJaW50IGk7CisKKwlmb3IgKGkgPSAwOyBp
IDwgc2l6ZTsgaSsrKSB7CisJCWlmIChkYnVmX3NsaWNlc1tpXS5hY3RpdmVfcGlwZXMgPT0gYWN0
aXZlX3BpcGVzKQorCQkJcmV0dXJuIGRidWZfc2xpY2VzW2ldLmRidWZfbWFza1twaXBlXTsKKwl9
CisJcmV0dXJuIDA7Cit9CisKKy8qCisgKiBUaGlzIGZ1bmN0aW9uIGZpbmRzIGFuIGVudHJ5IHdp
dGggc2FtZSBlbmFibGVkIHBpcGUgY29uZmlndXJhdGlvbiBhbmQKKyAqIHJldHVybnMgY29ycmVz
cG9uZGVudCBEQnVmIHNsaWNlIG1hc2sgYXMgc3RhdGVkIGluIEJTcGVjIGZvciBwYXJ0aWN1bGFy
CisgKiBwbGF0Zm9ybS4KKyAqLworc3RhdGljIHUzMiBpY2xfY29tcHV0ZV9kYnVmX3NsaWNlcyhl
bnVtIHBpcGUgcGlwZSwKKwkJCQkgICB1MzIgYWN0aXZlX3BpcGVzLAorCQkJCSAgIGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQoreworCS8qCisJICogRklYTUU6IEZv
ciBJQ0wgdGhpcyBpcyBzdGlsbCBhIGJpdCB1bmNsZWFyIGFzIHByZXYgQlNwZWMgcmV2aXNpb24K
KwkgKiByZXF1aXJlZCBjYWxjdWxhdGluZyAicGlwZSByYXRpbyIgaW4gb3JkZXIgdG8gZGV0ZXJt
aW5lCisJICogaWYgb25lIG9yIHR3byBzbGljZXMgY2FuIGJlIHVzZWQgZm9yIHNpbmdsZSBwaXBl
IGNvbmZpZ3VyYXRpb25zCisJICogYXMgYWRkaXRpb25hbCBjb25zdHJhaW50IHRvIHRoZSBleGlz
dGluZyB0YWJsZS4KKwkgKiBIb3dldmVyIGJhc2VkIG9uIHJlY2VudCBpbmZvLCBpdCBzaG91bGQg
YmUgbm90ICJwaXBlIHJhdGlvIgorCSAqIGJ1dCByYXRoZXIgcmF0aW8gYmV0d2VlbiBwaXhlbF9y
YXRlIGFuZCBjZGNsayB3aXRoIGFkZGl0aW9uYWwKKwkgKiBjb25zdGFudHMsIHNvIGZvciBub3cg
d2UgYXJlIHVzaW5nIG9ubHkgdGFibGUgdW50aWwgdGhpcyBpcworCSAqIGNsYXJpZmllZC4gQWxz
byB0aGlzIGlzIHRoZSByZWFzb24gd2h5IGNydGNfc3RhdGUgcGFyYW0gaXMKKwkgKiBzdGlsbCBo
ZXJlIC0gd2Ugd2lsbCBuZWVkIGl0IG9uY2UgdGhvc2UgYWRkaXRpb25hbCBjb25zdHJhaW50cwor
CSAqIHBvcCB1cC4KKwkgKi8KKwlyZXR1cm4gY29tcHV0ZV9kYnVmX3NsaWNlcyhwaXBlLCBhY3Rp
dmVfcGlwZXMsCisJCQkJICAgaWNsX2FsbG93ZWRfZGJ1ZnMsCisJCQkJICAgQVJSQVlfU0laRShp
Y2xfYWxsb3dlZF9kYnVmcykpOworfQorCitzdGF0aWMgdTMyIHRnbF9jb21wdXRlX2RidWZfc2xp
Y2VzKGVudW0gcGlwZSBwaXBlLAorCQkJCSAgIHUzMiBhY3RpdmVfcGlwZXMsCisJCQkJICAgY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpCit7CisJcmV0dXJuIGNvbXB1
dGVfZGJ1Zl9zbGljZXMocGlwZSwgYWN0aXZlX3BpcGVzLAorCQkJCSAgIHRnbF9hbGxvd2VkX2Ri
dWZzLAorCQkJCSAgIEFSUkFZX1NJWkUodGdsX2FsbG93ZWRfZGJ1ZnMpKTsKK30KKworc3RhdGlj
IHU4IHNrbF9jb21wdXRlX2RidWZfc2xpY2VzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAorCQkJCSAgdTMyIGFjdGl2ZV9waXBlcykKK3sKKwlzdHJ1Y3QgaW50ZWxf
Y3J0YyAqY3J0YyA9IHRvX2ludGVsX2NydGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKKwlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsK
KwllbnVtIHBpcGUgcGlwZSA9IGNydGMtPnBpcGU7CisKKwlpZiAoSVNfR0VOKGRldl9wcml2LCAx
MikpCisJCXJldHVybiB0Z2xfY29tcHV0ZV9kYnVmX3NsaWNlcyhwaXBlLAorCQkJCQkgICAgICAg
YWN0aXZlX3BpcGVzLAorCQkJCQkgICAgICAgY3J0Y19zdGF0ZSk7CisJZWxzZSBpZiAoSVNfR0VO
KGRldl9wcml2LCAxMSkpCisJCXJldHVybiBpY2xfY29tcHV0ZV9kYnVmX3NsaWNlcyhwaXBlLAor
CQkJCQkgICAgICAgYWN0aXZlX3BpcGVzLAorCQkJCQkgICAgICAgY3J0Y19zdGF0ZSk7CisJLyoK
KwkgKiBGb3IgYW55dGhpbmcgZWxzZSBqdXN0IHJldHVybiBvbmUgc2xpY2UgeWV0LgorCSAqIFNo
b3VsZCBiZSBleHRlbmRlZCBmb3Igb3RoZXIgcGxhdGZvcm1zLgorCSAqLworCXJldHVybiBCSVQo
REJVRl9TMSk7Cit9CisKIHN0YXRpYyB1NjQKIHNrbF9wbGFuZV9yZWxhdGl2ZV9kYXRhX3JhdGUo
Y29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiAJCQkgICAgIGNvbnN0
IHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGUsCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uaAppbmRleCBkNjBhODU0MjFjNWEuLmY4NTNiYzE4NGRkNiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRl
bF9wbS5oCkBAIC01Nyw2ICs1Nyw4IEBAIGJvb2wgaWxrX2Rpc2FibGVfbHBfd20oc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfaW5pdF9pcGMoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaW50ZWxfZW5hYmxlX2lwYyhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogCitpbnQgaW50ZWxfZGJ1Zl9tYXhfc2xpY2Vz
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CisKIGJvb2wgaW50ZWxfc2V0X21l
bW9yeV9jeHNyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgYm9vbCBlbmFibGUp
OwogCiAjZW5kaWYgLyogX19JTlRFTF9QTV9IX18gKi8KLS0gCjIuMjQuMS40ODUuZ2FkMDVhM2Q4
ZTUKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVs
LWdmeCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczov
L2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=

Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 1273FCC149
	for <lists+intel-gfx@lfdr.de>; Fri,  4 Oct 2019 19:05:16 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 004176EBF0;
	Fri,  4 Oct 2019 17:05:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
 by gabe.freedesktop.org (Postfix) with ESMTPS id F24DF6EBEC
 for <intel-gfx@lists.freedesktop.org>; Fri,  4 Oct 2019 17:05:10 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga101.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 04 Oct 2019 10:05:10 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.67,256,1566889200"; d="scan'208";a="222216096"
Received: from bkokkula-mobl1.ger.corp.intel.com (HELO
 mwahaha-bdw.ger.corp.intel.com) ([10.252.7.77])
 by fmsmga002.fm.intel.com with ESMTP; 04 Oct 2019 10:05:09 -0700
From: Matthew Auld <matthew.auld@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri,  4 Oct 2019 18:04:42 +0100
Message-Id: <20191004170452.15410-12-matthew.auld@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191004170452.15410-1-matthew.auld@intel.com>
References: <20191004170452.15410-1-matthew.auld@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 11/21] drm/i915: enumerate and init each
 supported region
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

RnJvbTogQWJkaWVsIEphbnVsZ3VlIDxhYmRpZWwuamFudWxndWVAbGludXguaW50ZWwuY29tPgoK
Tm90aGluZyB0byBlbnVtZXJhdGUgeWV0Li4uCgpTaWduZWQtb2ZmLWJ5OiBBYmRpZWwgSmFudWxn
dWUgPGFiZGllbC5qYW51bGd1ZUBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IE1hdHRo
ZXcgQXVsZCA8bWF0dGhldy5hdWxkQGludGVsLmNvbT4KQ2M6IEpvb25hcyBMYWh0aW5lbiA8am9v
bmFzLmxhaHRpbmVuQGxpbnV4LmludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oICAgICAgICAgICAgICAgfCAgMyArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X2dlbV9ndHQuYyAgICAgICAgICAgfCA3MCArKysrKysrKysrKysrKysrKy0tCiAuLi4vZ3B1L2Ry
bS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyAgfCAgNiArKwogMyBmaWxlcyBjaGFu
Z2VkLCA3MiBpbnNlcnRpb25zKCspLCA3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5oCmluZGV4IGZmOGUyMWU1ODVhMy4uMDIzMzI2NTQwNWI0IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVf
ZHJ2LmgKQEAgLTIzNTEsNiArMjM1MSw5IEBAIGludCBfX211c3RfY2hlY2sgaTkxNV9nZW1fZXZp
Y3RfZm9yX25vZGUoc3RydWN0IGk5MTVfYWRkcmVzc19zcGFjZSAqdm0sCiAJCQkJCSB1bnNpZ25l
ZCBpbnQgZmxhZ3MpOwogaW50IGk5MTVfZ2VtX2V2aWN0X3ZtKHN0cnVjdCBpOTE1X2FkZHJlc3Nf
c3BhY2UgKnZtKTsKIAordm9pZCBpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKK2ludCBpOTE1X2dlbV9pbml0X21lbW9yeV9yZWdp
b25zKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KTsKKwogLyogaTkxNV9nZW1faW50ZXJu
YWwuYyAqLwogc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKgogaTkxNV9nZW1fb2JqZWN0X2Ny
ZWF0ZV9pbnRlcm5hbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ2VtX2d0dC5jCmluZGV4IDdiMTViYjg5MTk3MC4uNDUwZWM4Nzc5MjUyIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9ndHQuYwpAQCAtMjc0NCw2ICsyNzQ0LDY2IEBAIGlu
dCBpOTE1X2luaXRfZ2d0dChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSkKIAlyZXR1cm4g
MDsKIH0KIAordm9pZCBpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICppOTE1KQoreworCWludCBpOworCisJaTkxNV9nZW1fY2xlYW51cF9zdG9s
ZW4oaTkxNSk7CisKKwlmb3IgKGkgPSAwOyBpIDwgQVJSQVlfU0laRShpOTE1LT5tbS5yZWdpb25z
KTsgaSsrKSB7CisJCXN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICpyZWdpb24gPSBpOTE1LT5t
bS5yZWdpb25zW2ldOworCisJCWlmIChyZWdpb24pCisJCQlpbnRlbF9tZW1vcnlfcmVnaW9uX3B1
dChyZWdpb24pOworCX0KK30KKworaW50IGk5MTVfZ2VtX2luaXRfbWVtb3J5X3JlZ2lvbnMoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCit7CisJaW50IGVyciwgaTsKKworCS8qCisJICog
SW5pdGlhbGlzZSBzdG9sZW4gZWFybHkgc28gdGhhdCB3ZSBtYXkgcmVzZXJ2ZSBwcmVhbGxvY2F0
ZWQKKwkgKiBvYmplY3RzIGZvciB0aGUgQklPUyB0byBLTVMgdHJhbnNpdGlvbi4KKwkgKi8KKwkv
KiBYWFg6IHN0b2xlbiB3aWxsIGJlY29tZSBhIHJlZ2lvbiBhdCBzb21lIHBvaW50ICovCisJZXJy
ID0gaTkxNV9nZW1faW5pdF9zdG9sZW4oaTkxNSk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsK
KworCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKGk5MTUtPm1tLnJlZ2lvbnMpOyBpKyspIHsK
KwkJc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSA9IE5VTEw7CisJCXUzMiB0eXBlOwor
CisJCWlmICghSEFTX1JFR0lPTihpOTE1LCBCSVQoaSkpKQorCQkJY29udGludWU7CisKKwkJdHlw
ZSA9IE1FTU9SWV9UWVBFX0ZST01fUkVHSU9OKGludGVsX3JlZ2lvbl9tYXBbaV0pOworCQlzd2l0
Y2ggKHR5cGUpIHsKKwkJZGVmYXVsdDoKKwkJCWJyZWFrOworCQl9CisKKwkJaWYgKElTX0VSUiht
ZW0pKSB7CisJCQllcnIgPSBQVFJfRVJSKG1lbSk7CisJCQlEUk1fRVJST1IoIkZhaWxlZCB0byBz
ZXR1cCByZWdpb24oJWQpIHR5cGU9JWRcbiIsIGVyciwgdHlwZSk7CisJCQlnb3RvIG91dF9jbGVh
bnVwOworCQl9CisKKwkJbWVtLT5pZCA9IGludGVsX3JlZ2lvbl9tYXBbaV07CisJCW1lbS0+dHlw
ZSA9IHR5cGU7CisJCW1lbS0+aW5zdGFuY2UgPSBNRU1PUllfSU5TVEFOQ0VfRlJPTV9SRUdJT04o
aW50ZWxfcmVnaW9uX21hcFtpXSk7CisKKwkJaTkxNS0+bW0ucmVnaW9uc1tpXSA9IG1lbTsKKwl9
CisKKwlyZXR1cm4gMDsKKworb3V0X2NsZWFudXA6CisJaTkxNV9nZW1fY2xlYW51cF9tZW1vcnlf
cmVnaW9ucyhpOTE1KTsKKwlyZXR1cm4gZXJyOworfQorCiBzdGF0aWMgdm9pZCBnZ3R0X2NsZWFu
dXBfaHcoc3RydWN0IGk5MTVfZ2d0dCAqZ2d0dCkKIHsKIAlzdHJ1Y3QgaTkxNV92bWEgKnZtYSwg
KnZuOwpAQCAtMjc4MSw2ICsyODQxLDggQEAgdm9pZCBpOTE1X2dndHRfZHJpdmVyX3JlbGVhc2Uo
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiB7CiAJc3RydWN0IHBhZ2V2ZWMgKnB2ZWM7
CiAKKwlpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKGk5MTUpOworCiAJZmluaV9hbGlh
c2luZ19wcGd0dCgmaTkxNS0+Z2d0dCk7CiAKIAlnZ3R0X2NsZWFudXBfaHcoJmk5MTUtPmdndHQp
OwpAQCAtMjc5MCw4ICsyODUyLDYgQEAgdm9pZCBpOTE1X2dndHRfZHJpdmVyX3JlbGVhc2Uoc3Ry
dWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJCXNldF9wYWdlc19hcnJheV93YihwdmVjLT5w
YWdlcywgcHZlYy0+bnIpOwogCQlfX3BhZ2V2ZWNfcmVsZWFzZShwdmVjKTsKIAl9Ci0KLQlpOTE1
X2dlbV9jbGVhbnVwX3N0b2xlbihpOTE1KTsKIH0KIAogc3RhdGljIHVuc2lnbmVkIGludCBnZW42
X2dldF90b3RhbF9ndHRfc2l6ZSh1MTYgc25iX2dtY2hfY3RsKQpAQCAtMzI0MCwxMSArMzMwMCw3
IEBAIGludCBpOTE1X2dndHRfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpCiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCS8qCi0JICogSW5pdGlhbGlzZSBzdG9s
ZW4gZWFybHkgc28gdGhhdCB3ZSBtYXkgcmVzZXJ2ZSBwcmVhbGxvY2F0ZWQKLQkgKiBvYmplY3Rz
IGZvciB0aGUgQklPUyB0byBLTVMgdHJhbnNpdGlvbi4KLQkgKi8KLQlyZXQgPSBpOTE1X2dlbV9p
bml0X3N0b2xlbihkZXZfcHJpdik7CisJcmV0ID0gaTkxNV9nZW1faW5pdF9tZW1vcnlfcmVnaW9u
cyhkZXZfcHJpdik7CiAJaWYgKHJldCkKIAkJZ290byBvdXRfZ3R0X2NsZWFudXA7CiAKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYwppbmRleCA4
MjY0ZDM4ZmE2OTAuLjZkNDdmMGFlYWMwYyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvc2VsZnRlc3RzL21vY2tfZ2VtX2RldmljZS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L3NlbGZ0ZXN0cy9tb2NrX2dlbV9kZXZpY2UuYwpAQCAtNzQsNiArNzQsOCBAQCBzdGF0aWMgdm9p
ZCBtb2NrX2RldmljZV9yZWxlYXNlKHN0cnVjdCBkcm1fZGV2aWNlICpkZXYpCiAKIAlpOTE1X2dl
bWZzX2ZpbmkoaTkxNSk7CiAKKwlpOTE1X2dlbV9jbGVhbnVwX21lbW9yeV9yZWdpb25zKGk5MTUp
OworCiAJZHJtX21vZGVfY29uZmlnX2NsZWFudXAoJmk5MTUtPmRybSk7CiAKIAlkcm1fZGV2X2Zp
bmkoJmk5MTUtPmRybSk7CkBAIC0xOTYsNiArMTk4LDEwIEBAIHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICptb2NrX2dlbV9kZXZpY2Uodm9pZCkKIAogCVdBUk5fT04oaTkxNV9nZW1mc19pbml0KGk5
MTUpKTsKIAorCWVyciA9IGk5MTVfZ2VtX2luaXRfbWVtb3J5X3JlZ2lvbnMoaTkxNSk7CisJaWYg
KGVycikKKwkJZ290byBlcnJfY29udGV4dDsKKwogCXJldHVybiBpOTE1OwogCiBlcnJfY29udGV4
dDoKLS0gCjIuMjAuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Au
b3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwt
Z2Z4

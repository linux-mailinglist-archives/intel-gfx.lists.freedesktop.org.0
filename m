Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 95171D9194
	for <lists+intel-gfx@lfdr.de>; Wed, 16 Oct 2019 14:52:49 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AD1CB6E3FB;
	Wed, 16 Oct 2019 12:52:47 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 3E23F6E3FB
 for <intel-gfx@lists.freedesktop.org>; Wed, 16 Oct 2019 12:52:46 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 18857002-1500050 
 for multiple; Wed, 16 Oct 2019 13:52:38 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 16 Oct 2019 13:52:36 +0100
Message-Id: <20191016125236.17960-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/selftests: Teach requests to use all
 available engines
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIHJlcXVlc3Qgc2VsZnRlc3RzIHN0cmFkZGxlIHRoZSBib3VuZGFyeSBiZXR3ZWVuIGNoZWNr
aW5nIHRoZSBkcml2ZXIKYW5kIHRoZSBoYXJkd2FyZS4gVGhleSBhcmUgc3ViamVjdCB0byB0aGUg
cXVpcmtzIG9mIHRoZSB1bmRlcmx5aW5nIEhXLApidXQgb3BlcmF0ZSBvbiB0b3Agb2YgdGhlIGJh
Y2tlbmQgYWJzdHJhY3Rpb25zLiBUaGUgdGVzdHMgZm9jdXMgb24gdGhlCnNjaGVkdWxlciBlbGVt
ZW50cyBhbmQgc28gc2hvdWxkIGNoZWNrIGZvciBpbnRlcmFjdGlvbnMgb2YgdGhlIHNjaGVkdWxl
cgphY3Jvc3MgYWxsIGV4cG9zZWQgZW5naW5lcy4KClNpZ25lZC1vZmYtYnk6IENocmlzIFdpbHNv
biA8Y2hyaXNAY2hyaXMtd2lsc29uLmNvLnVrPgpDYzogVHZydGtvIFVyc3VsaW4gPHR2cnRrby51
cnN1bGluQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkx
NV9yZXF1ZXN0LmMgfCAyNzYgKysrKysrKysrKystLS0tLS0tCiAxIGZpbGUgY2hhbmdlZCwgMTcw
IGluc2VydGlvbnMoKyksIDEwNiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMKaW5kZXggMDg5N2E3YjA0OTQ0Li5iOTVhMGU4NDMx
YWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X3JlcXVl
c3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMK
QEAgLTM3LDYgKzM3LDE4IEBACiAjaW5jbHVkZSAibW9ja19kcm0uaCIKICNpbmNsdWRlICJtb2Nr
X2dlbV9kZXZpY2UuaCIKIAorc3RhdGljIHVuc2lnbmVkIGludCBudW1fdWFiaV9lbmdpbmVzKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQoreworCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3Mg
KmVuZ2luZTsKKwl1bnNpZ25lZCBpbnQgY291bnQ7CisKKwljb3VudCA9IDA7CisJZm9yX2VhY2hf
dWFiaV9lbmdpbmUoZW5naW5lLCBpOTE1KQorCQljb3VudCsrOworCisJcmV0dXJuIGNvdW50Owor
fQorCiBzdGF0aWMgaW50IGlndF9hZGRfcmVxdWVzdCh2b2lkICphcmcpCiB7CiAJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7CkBAIC01MTEsMTUgKzUyMywxNSBAQCBzdGF0aWMg
aW50IGxpdmVfbm9wX3JlcXVlc3Qodm9pZCAqYXJnKQogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1ID0gYXJnOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZTsKIAlzdHJ1Y3Qg
aWd0X2xpdmVfdGVzdCB0OwotCXVuc2lnbmVkIGludCBpZDsKIAlpbnQgZXJyID0gLUVOT0RFVjsK
IAotCS8qIFN1Ym1pdCB2YXJpb3VzIHNpemVkIGJhdGNoZXMgb2YgZW1wdHkgcmVxdWVzdHMsIHRv
IGVhY2ggZW5naW5lCisJLyoKKwkgKiBTdWJtaXQgdmFyaW91cyBzaXplZCBiYXRjaGVzIG9mIGVt
cHR5IHJlcXVlc3RzLCB0byBlYWNoIGVuZ2luZQogCSAqIChpbmRpdmlkdWFsbHkpLCBhbmQgd2Fp
dCBmb3IgdGhlIGJhdGNoIHRvIGNvbXBsZXRlLiBXZSBjYW4gY2hlY2sKIAkgKiB0aGUgb3Zlcmhl
YWQgb2Ygc3VibWl0dGluZyByZXF1ZXN0cyB0byB0aGUgaGFyZHdhcmUuCiAJICovCiAKLQlmb3Jf
ZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkgeworCWZvcl9lYWNoX3VhYmlfZW5naW5lKGVu
Z2luZSwgaTkxNSkgewogCQl1bnNpZ25lZCBsb25nIG4sIHByaW1lOwogCQlJR1RfVElNRU9VVChl
bmRfdGltZSk7CiAJCWt0aW1lX3QgdGltZXNbMl0gPSB7fTsKQEAgLTUzOSw3ICs1NTEsOCBAQCBz
dGF0aWMgaW50IGxpdmVfbm9wX3JlcXVlc3Qodm9pZCAqYXJnKQogCQkJCWlmIChJU19FUlIocmVx
dWVzdCkpCiAJCQkJCXJldHVybiBQVFJfRVJSKHJlcXVlc3QpOwogCi0JCQkJLyogVGhpcyBzcGFj
ZSBpcyBsZWZ0IGludGVudGlvbmFsbHkgYmxhbmsuCisJCQkJLyoKKwkJCQkgKiBUaGlzIHNwYWNl
IGlzIGxlZnQgaW50ZW50aW9uYWxseSBibGFuay4KIAkJCQkgKgogCQkJCSAqIFdlIGRvIG5vdCBh
Y3R1YWxseSB3YW50IHRvIHBlcmZvcm0gYW55CiAJCQkJICogYWN0aW9uIHdpdGggdGhpcyByZXF1
ZXN0LCB3ZSBqdXN0IHdhbnQKQEAgLTY1NywxMCArNjcwLDEwIEBAIHN0YXRpYyBpbnQgbGl2ZV9l
bXB0eV9yZXF1ZXN0KHZvaWQgKmFyZykKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7
CiAJc3RydWN0IGlndF9saXZlX3Rlc3QgdDsKIAlzdHJ1Y3QgaTkxNV92bWEgKmJhdGNoOwotCXVu
c2lnbmVkIGludCBpZDsKIAlpbnQgZXJyID0gMDsKIAotCS8qIFN1Ym1pdCB2YXJpb3VzIHNpemVk
IGJhdGNoZXMgb2YgZW1wdHkgcmVxdWVzdHMsIHRvIGVhY2ggZW5naW5lCisJLyoKKwkgKiBTdWJt
aXQgdmFyaW91cyBzaXplZCBiYXRjaGVzIG9mIGVtcHR5IHJlcXVlc3RzLCB0byBlYWNoIGVuZ2lu
ZQogCSAqIChpbmRpdmlkdWFsbHkpLCBhbmQgd2FpdCBmb3IgdGhlIGJhdGNoIHRvIGNvbXBsZXRl
LiBXZSBjYW4gY2hlY2sKIAkgKiB0aGUgb3ZlcmhlYWQgb2Ygc3VibWl0dGluZyByZXF1ZXN0cyB0
byB0aGUgaGFyZHdhcmUuCiAJICovCkBAIC02NjksNyArNjgyLDcgQEAgc3RhdGljIGludCBsaXZl
X2VtcHR5X3JlcXVlc3Qodm9pZCAqYXJnKQogCWlmIChJU19FUlIoYmF0Y2gpKQogCQlyZXR1cm4g
UFRSX0VSUihiYXRjaCk7CiAKLQlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkgewor
CWZvcl9lYWNoX3VhYmlfZW5naW5lKGVuZ2luZSwgaTkxNSkgewogCQlJR1RfVElNRU9VVChlbmRf
dGltZSk7CiAJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3Q7CiAJCXVuc2lnbmVkIGxvbmcg
biwgcHJpbWU7CkBAIC04MDEsNjMgKzgxNCw3MyBAQCBzdGF0aWMgaW50IHJlY3Vyc2l2ZV9iYXRj
aF9yZXNvbHZlKHN0cnVjdCBpOTE1X3ZtYSAqYmF0Y2gpCiBzdGF0aWMgaW50IGxpdmVfYWxsX2Vu
Z2luZXModm9pZCAqYXJnKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1ID0gYXJn
OworCWNvbnN0IHVuc2lnbmVkIGludCBuZW5naW5lcyA9IG51bV91YWJpX2VuZ2luZXMoaTkxNSk7
CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwotCXN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJlcXVlc3RbSTkxNV9OVU1fRU5HSU5FU107CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqKnJlcXVl
c3Q7CiAJc3RydWN0IGlndF9saXZlX3Rlc3QgdDsKIAlzdHJ1Y3QgaTkxNV92bWEgKmJhdGNoOwot
CXVuc2lnbmVkIGludCBpZDsKKwl1bnNpZ25lZCBpbnQgaWR4OwogCWludCBlcnI7CiAKLQkvKiBD
aGVjayB3ZSBjYW4gc3VibWl0IHJlcXVlc3RzIHRvIGFsbCBlbmdpbmVzIHNpbXVsdGFuZW91c2x5
LiBXZQorCS8qCisJICogQ2hlY2sgd2UgY2FuIHN1Ym1pdCByZXF1ZXN0cyB0byBhbGwgZW5naW5l
cyBzaW11bHRhbmVvdXNseS4gV2UKIAkgKiBzZW5kIGEgcmVjdXJzaXZlIGJhdGNoIHRvIGVhY2gg
ZW5naW5lIC0gY2hlY2tpbmcgdGhhdCB3ZSBkb24ndAogCSAqIGJsb2NrIGRvaW5nIHNvLCBhbmQg
dGhhdCB0aGV5IGRvbid0IGNvbXBsZXRlIHRvbyBzb29uLgogCSAqLwogCisJcmVxdWVzdCA9IGtt
YWxsb2NfYXJyYXkobmVuZ2luZXMsIHNpemVvZigqcmVxdWVzdCksIEdGUF9LRVJORUwpOworCWlm
ICghcmVxdWVzdCkKKwkJcmV0dXJuIC1FTk9NRU07CisKIAllcnIgPSBpZ3RfbGl2ZV90ZXN0X2Jl
Z2luKCZ0LCBpOTE1LCBfX2Z1bmNfXywgIiIpOwogCWlmIChlcnIpCi0JCXJldHVybiBlcnI7CisJ
CWdvdG8gb3V0X2ZyZWU7CiAKIAliYXRjaCA9IHJlY3Vyc2l2ZV9iYXRjaChpOTE1KTsKIAlpZiAo
SVNfRVJSKGJhdGNoKSkgewogCQllcnIgPSBQVFJfRVJSKGJhdGNoKTsKIAkJcHJfZXJyKCIlczog
VW5hYmxlIHRvIGNyZWF0ZSBiYXRjaCwgZXJyPSVkXG4iLCBfX2Z1bmNfXywgZXJyKTsKLQkJcmV0
dXJuIGVycjsKKwkJZ290byBvdXRfZnJlZTsKIAl9CiAKLQlmb3JfZWFjaF9lbmdpbmUoZW5naW5l
LCBpOTE1LCBpZCkgewotCQlyZXF1ZXN0W2lkXSA9IGk5MTVfcmVxdWVzdF9jcmVhdGUoZW5naW5l
LT5rZXJuZWxfY29udGV4dCk7Ci0JCWlmIChJU19FUlIocmVxdWVzdFtpZF0pKSB7Ci0JCQllcnIg
PSBQVFJfRVJSKHJlcXVlc3RbaWRdKTsKKwlpZHggPSAwOworCWZvcl9lYWNoX3VhYmlfZW5naW5l
KGVuZ2luZSwgaTkxNSkgeworCQlyZXF1ZXN0W2lkeF0gPSBpOTE1X3JlcXVlc3RfY3JlYXRlKGVu
Z2luZS0+a2VybmVsX2NvbnRleHQpOworCQlpZiAoSVNfRVJSKHJlcXVlc3RbaWR4XSkpIHsKKwkJ
CWVyciA9IFBUUl9FUlIocmVxdWVzdFtpZHhdKTsKIAkJCXByX2VycigiJXM6IFJlcXVlc3QgYWxs
b2NhdGlvbiBmYWlsZWQgd2l0aCBlcnI9JWRcbiIsCiAJCQkgICAgICAgX19mdW5jX18sIGVycik7
CiAJCQlnb3RvIG91dF9yZXF1ZXN0OwogCQl9CiAKLQkJZXJyID0gZW5naW5lLT5lbWl0X2JiX3N0
YXJ0KHJlcXVlc3RbaWRdLAorCQllcnIgPSBlbmdpbmUtPmVtaXRfYmJfc3RhcnQocmVxdWVzdFtp
ZHhdLAogCQkJCQkgICAgYmF0Y2gtPm5vZGUuc3RhcnQsCiAJCQkJCSAgICBiYXRjaC0+bm9kZS5z
aXplLAogCQkJCQkgICAgMCk7CiAJCUdFTV9CVUdfT04oZXJyKTsKLQkJcmVxdWVzdFtpZF0tPmJh
dGNoID0gYmF0Y2g7CisJCXJlcXVlc3RbaWR4XS0+YmF0Y2ggPSBiYXRjaDsKIAogCQlpOTE1X3Zt
YV9sb2NrKGJhdGNoKTsKLQkJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0X29iamVjdChyZXF1ZXN0
W2lkXSwgYmF0Y2gtPm9iaiwgMCk7CisJCWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9vYmplY3Qo
cmVxdWVzdFtpZHhdLCBiYXRjaC0+b2JqLCAwKTsKIAkJaWYgKGVyciA9PSAwKQotCQkJZXJyID0g
aTkxNV92bWFfbW92ZV90b19hY3RpdmUoYmF0Y2gsIHJlcXVlc3RbaWRdLCAwKTsKKwkJCWVyciA9
IGk5MTVfdm1hX21vdmVfdG9fYWN0aXZlKGJhdGNoLCByZXF1ZXN0W2lkeF0sIDApOwogCQlpOTE1
X3ZtYV91bmxvY2soYmF0Y2gpOwogCQlHRU1fQlVHX09OKGVycik7CiAKLQkJaTkxNV9yZXF1ZXN0
X2dldChyZXF1ZXN0W2lkXSk7Ci0JCWk5MTVfcmVxdWVzdF9hZGQocmVxdWVzdFtpZF0pOworCQlp
OTE1X3JlcXVlc3RfZ2V0KHJlcXVlc3RbaWR4XSk7CisJCWk5MTVfcmVxdWVzdF9hZGQocmVxdWVz
dFtpZHhdKTsKKwkJaWR4Kys7CiAJfQogCi0JZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwg
aWQpIHsKLQkJaWYgKGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocmVxdWVzdFtpZF0pKSB7CisJaWR4
ID0gMDsKKwlmb3JfZWFjaF91YWJpX2VuZ2luZShlbmdpbmUsIGk5MTUpIHsKKwkJaWYgKGk5MTVf
cmVxdWVzdF9jb21wbGV0ZWQocmVxdWVzdFtpZHhdKSkgewogCQkJcHJfZXJyKCIlcyglcyk6IHJl
cXVlc3QgY29tcGxldGVkIHRvbyBlYXJseSFcbiIsCiAJCQkgICAgICAgX19mdW5jX18sIGVuZ2lu
ZS0+bmFtZSk7CiAJCQllcnIgPSAtRUlOVkFMOwogCQkJZ290byBvdXRfcmVxdWVzdDsKIAkJfQor
CQlpZHgrKzsKIAl9CiAKIAllcnIgPSByZWN1cnNpdmVfYmF0Y2hfcmVzb2x2ZShiYXRjaCk7CkBA
IC04NjYsMTAgKzg4OSwxMSBAQCBzdGF0aWMgaW50IGxpdmVfYWxsX2VuZ2luZXModm9pZCAqYXJn
KQogCQlnb3RvIG91dF9yZXF1ZXN0OwogCX0KIAotCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGk5
MTUsIGlkKSB7CisJaWR4ID0gMDsKKwlmb3JfZWFjaF91YWJpX2VuZ2luZShlbmdpbmUsIGk5MTUp
IHsKIAkJbG9uZyB0aW1lb3V0OwogCi0JCXRpbWVvdXQgPSBpOTE1X3JlcXVlc3Rfd2FpdChyZXF1
ZXN0W2lkXSwgMCwKKwkJdGltZW91dCA9IGk5MTVfcmVxdWVzdF93YWl0KHJlcXVlc3RbaWR4XSwg
MCwKIAkJCQkJICAgIE1BWF9TQ0hFRFVMRV9USU1FT1VUKTsKIAkJaWYgKHRpbWVvdXQgPCAwKSB7
CiAJCQllcnIgPSB0aW1lb3V0OwpAQCAtODc4LDQzICs5MDIsNTcgQEAgc3RhdGljIGludCBsaXZl
X2FsbF9lbmdpbmVzKHZvaWQgKmFyZykKIAkJCWdvdG8gb3V0X3JlcXVlc3Q7CiAJCX0KIAotCQlH
RU1fQlVHX09OKCFpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJlcXVlc3RbaWRdKSk7Ci0JCWk5MTVf
cmVxdWVzdF9wdXQocmVxdWVzdFtpZF0pOwotCQlyZXF1ZXN0W2lkXSA9IE5VTEw7CisJCUdFTV9C
VUdfT04oIWk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocmVxdWVzdFtpZHhdKSk7CisJCWk5MTVfcmVx
dWVzdF9wdXQocmVxdWVzdFtpZHhdKTsKKwkJcmVxdWVzdFtpZHhdID0gTlVMTDsKKwkJaWR4Kys7
CiAJfQogCiAJZXJyID0gaWd0X2xpdmVfdGVzdF9lbmQoJnQpOwogCiBvdXRfcmVxdWVzdDoKLQlm
b3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkKLQkJaWYgKHJlcXVlc3RbaWRdKQotCQkJ
aTkxNV9yZXF1ZXN0X3B1dChyZXF1ZXN0W2lkXSk7CisJaWR4ID0gMDsKKwlmb3JfZWFjaF91YWJp
X2VuZ2luZShlbmdpbmUsIGk5MTUpIHsKKwkJaWYgKHJlcXVlc3RbaWR4XSkKKwkJCWk5MTVfcmVx
dWVzdF9wdXQocmVxdWVzdFtpZHhdKTsKKwkJaWR4Kys7CisJfQogCWk5MTVfdm1hX3VucGluKGJh
dGNoKTsKIAlpOTE1X3ZtYV9wdXQoYmF0Y2gpOworb3V0X2ZyZWU6CisJa2ZyZWUocmVxdWVzdCk7
CiAJcmV0dXJuIGVycjsKIH0KIAogc3RhdGljIGludCBsaXZlX3NlcXVlbnRpYWxfZW5naW5lcyh2
b2lkICphcmcpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUgPSBhcmc7Ci0Jc3Ry
dWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdFtJOTE1X05VTV9FTkdJTkVTXSA9IHt9OworCWNvbnN0
IHVuc2lnbmVkIGludCBuZW5naW5lcyA9IG51bV91YWJpX2VuZ2luZXMoaTkxNSk7CisJc3RydWN0
IGk5MTVfcmVxdWVzdCAqKnJlcXVlc3Q7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiA9IE5V
TEw7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwogCXN0cnVjdCBpZ3RfbGl2ZV90
ZXN0IHQ7Ci0JdW5zaWduZWQgaW50IGlkOworCXVuc2lnbmVkIGludCBpZHg7CiAJaW50IGVycjsK
IAotCS8qIENoZWNrIHdlIGNhbiBzdWJtaXQgcmVxdWVzdHMgdG8gYWxsIGVuZ2luZXMgc2VxdWVu
dGlhbGx5LCBzdWNoCisJLyoKKwkgKiBDaGVjayB3ZSBjYW4gc3VibWl0IHJlcXVlc3RzIHRvIGFs
bCBlbmdpbmVzIHNlcXVlbnRpYWxseSwgc3VjaAogCSAqIHRoYXQgZWFjaCBzdWNjZXNzaXZlIHJl
cXVlc3Qgd2FpdHMgZm9yIHRoZSBlYXJsaWVyIG9uZXMuIFRoaXMKIAkgKiB0ZXN0cyB0aGF0IHdl
IGRvbid0IGV4ZWN1dGUgcmVxdWVzdHMgb3V0IG9mIG9yZGVyLCBldmVuIHRob3VnaAogCSAqIHRo
ZXkgYXJlIHJ1bm5pbmcgb24gaW5kZXBlbmRlbnQgZW5naW5lcy4KIAkgKi8KIAorCXJlcXVlc3Qg
PSBrbWFsbG9jX2FycmF5KG5lbmdpbmVzLCBzaXplb2YoKnJlcXVlc3QpLAorCQkJCUdGUF9LRVJO
RUwgfCBfX0dGUF9aRVJPKTsKKwlpZiAoIXJlcXVlc3QpCisJCXJldHVybiAtRU5PTUVNOworCiAJ
ZXJyID0gaWd0X2xpdmVfdGVzdF9iZWdpbigmdCwgaTkxNSwgX19mdW5jX18sICIiKTsKIAlpZiAo
ZXJyKQotCQlyZXR1cm4gZXJyOworCQlnb3RvIG91dF9mcmVlOwogCi0JZm9yX2VhY2hfZW5naW5l
KGVuZ2luZSwgaTkxNSwgaWQpIHsKKwlpZHggPSAwOworCWZvcl9lYWNoX3VhYmlfZW5naW5lKGVu
Z2luZSwgaTkxNSkgewogCQlzdHJ1Y3QgaTkxNV92bWEgKmJhdGNoOwogCiAJCWJhdGNoID0gcmVj
dXJzaXZlX2JhdGNoKGk5MTUpOwpAQCAtOTIyLDY2ICs5NjAsNjkgQEAgc3RhdGljIGludCBsaXZl
X3NlcXVlbnRpYWxfZW5naW5lcyh2b2lkICphcmcpCiAJCQllcnIgPSBQVFJfRVJSKGJhdGNoKTsK
IAkJCXByX2VycigiJXM6IFVuYWJsZSB0byBjcmVhdGUgYmF0Y2ggZm9yICVzLCBlcnI9JWRcbiIs
CiAJCQkgICAgICAgX19mdW5jX18sIGVuZ2luZS0+bmFtZSwgZXJyKTsKLQkJCXJldHVybiBlcnI7
CisJCQlnb3RvIG91dF9mcmVlOwogCQl9CiAKLQkJcmVxdWVzdFtpZF0gPSBpOTE1X3JlcXVlc3Rf
Y3JlYXRlKGVuZ2luZS0+a2VybmVsX2NvbnRleHQpOwotCQlpZiAoSVNfRVJSKHJlcXVlc3RbaWRd
KSkgewotCQkJZXJyID0gUFRSX0VSUihyZXF1ZXN0W2lkXSk7CisJCXJlcXVlc3RbaWR4XSA9IGk5
MTVfcmVxdWVzdF9jcmVhdGUoZW5naW5lLT5rZXJuZWxfY29udGV4dCk7CisJCWlmIChJU19FUlIo
cmVxdWVzdFtpZHhdKSkgeworCQkJZXJyID0gUFRSX0VSUihyZXF1ZXN0W2lkeF0pOwogCQkJcHJf
ZXJyKCIlczogUmVxdWVzdCBhbGxvY2F0aW9uIGZhaWxlZCBmb3IgJXMgd2l0aCBlcnI9JWRcbiIs
CiAJCQkgICAgICAgX19mdW5jX18sIGVuZ2luZS0+bmFtZSwgZXJyKTsKIAkJCWdvdG8gb3V0X3Jl
cXVlc3Q7CiAJCX0KIAogCQlpZiAocHJldikgewotCQkJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0
X2RtYV9mZW5jZShyZXF1ZXN0W2lkXSwKKwkJCWVyciA9IGk5MTVfcmVxdWVzdF9hd2FpdF9kbWFf
ZmVuY2UocmVxdWVzdFtpZHhdLAogCQkJCQkJCSAgICZwcmV2LT5mZW5jZSk7CiAJCQlpZiAoZXJy
KSB7Ci0JCQkJaTkxNV9yZXF1ZXN0X2FkZChyZXF1ZXN0W2lkXSk7CisJCQkJaTkxNV9yZXF1ZXN0
X2FkZChyZXF1ZXN0W2lkeF0pOwogCQkJCXByX2VycigiJXM6IFJlcXVlc3QgYXdhaXQgZmFpbGVk
IGZvciAlcyB3aXRoIGVycj0lZFxuIiwKIAkJCQkgICAgICAgX19mdW5jX18sIGVuZ2luZS0+bmFt
ZSwgZXJyKTsKIAkJCQlnb3RvIG91dF9yZXF1ZXN0OwogCQkJfQogCQl9CiAKLQkJZXJyID0gZW5n
aW5lLT5lbWl0X2JiX3N0YXJ0KHJlcXVlc3RbaWRdLAorCQllcnIgPSBlbmdpbmUtPmVtaXRfYmJf
c3RhcnQocmVxdWVzdFtpZHhdLAogCQkJCQkgICAgYmF0Y2gtPm5vZGUuc3RhcnQsCiAJCQkJCSAg
ICBiYXRjaC0+bm9kZS5zaXplLAogCQkJCQkgICAgMCk7CiAJCUdFTV9CVUdfT04oZXJyKTsKLQkJ
cmVxdWVzdFtpZF0tPmJhdGNoID0gYmF0Y2g7CisJCXJlcXVlc3RbaWR4XS0+YmF0Y2ggPSBiYXRj
aDsKIAogCQlpOTE1X3ZtYV9sb2NrKGJhdGNoKTsKLQkJZXJyID0gaTkxNV9yZXF1ZXN0X2F3YWl0
X29iamVjdChyZXF1ZXN0W2lkXSwgYmF0Y2gtPm9iaiwgZmFsc2UpOworCQllcnIgPSBpOTE1X3Jl
cXVlc3RfYXdhaXRfb2JqZWN0KHJlcXVlc3RbaWR4XSwKKwkJCQkJCWJhdGNoLT5vYmosIGZhbHNl
KTsKIAkJaWYgKGVyciA9PSAwKQotCQkJZXJyID0gaTkxNV92bWFfbW92ZV90b19hY3RpdmUoYmF0
Y2gsIHJlcXVlc3RbaWRdLCAwKTsKKwkJCWVyciA9IGk5MTVfdm1hX21vdmVfdG9fYWN0aXZlKGJh
dGNoLCByZXF1ZXN0W2lkeF0sIDApOwogCQlpOTE1X3ZtYV91bmxvY2soYmF0Y2gpOwogCQlHRU1f
QlVHX09OKGVycik7CiAKLQkJaTkxNV9yZXF1ZXN0X2dldChyZXF1ZXN0W2lkXSk7Ci0JCWk5MTVf
cmVxdWVzdF9hZGQocmVxdWVzdFtpZF0pOworCQlpOTE1X3JlcXVlc3RfZ2V0KHJlcXVlc3RbaWR4
XSk7CisJCWk5MTVfcmVxdWVzdF9hZGQocmVxdWVzdFtpZHhdKTsKIAotCQlwcmV2ID0gcmVxdWVz
dFtpZF07CisJCXByZXYgPSByZXF1ZXN0W2lkeF07CisJCWlkeCsrOwogCX0KIAotCWZvcl9lYWNo
X2VuZ2luZShlbmdpbmUsIGk5MTUsIGlkKSB7CisJaWR4ID0gMDsKKwlmb3JfZWFjaF91YWJpX2Vu
Z2luZShlbmdpbmUsIGk5MTUpIHsKIAkJbG9uZyB0aW1lb3V0OwogCi0JCWlmIChpOTE1X3JlcXVl
c3RfY29tcGxldGVkKHJlcXVlc3RbaWRdKSkgeworCQlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRl
ZChyZXF1ZXN0W2lkeF0pKSB7CiAJCQlwcl9lcnIoIiVzKCVzKTogcmVxdWVzdCBjb21wbGV0ZWQg
dG9vIGVhcmx5IVxuIiwKIAkJCSAgICAgICBfX2Z1bmNfXywgZW5naW5lLT5uYW1lKTsKIAkJCWVy
ciA9IC1FSU5WQUw7CiAJCQlnb3RvIG91dF9yZXF1ZXN0OwogCQl9CiAKLQkJZXJyID0gcmVjdXJz
aXZlX2JhdGNoX3Jlc29sdmUocmVxdWVzdFtpZF0tPmJhdGNoKTsKKwkJZXJyID0gcmVjdXJzaXZl
X2JhdGNoX3Jlc29sdmUocmVxdWVzdFtpZHhdLT5iYXRjaCk7CiAJCWlmIChlcnIpIHsKIAkJCXBy
X2VycigiJXM6IGZhaWxlZCB0byByZXNvbHZlIGJhdGNoLCBlcnI9JWRcbiIsCiAJCQkgICAgICAg
X19mdW5jX18sIGVycik7CiAJCQlnb3RvIG91dF9yZXF1ZXN0OwogCQl9CiAKLQkJdGltZW91dCA9
IGk5MTVfcmVxdWVzdF93YWl0KHJlcXVlc3RbaWRdLCAwLAorCQl0aW1lb3V0ID0gaTkxNV9yZXF1
ZXN0X3dhaXQocmVxdWVzdFtpZHhdLCAwLAogCQkJCQkgICAgTUFYX1NDSEVEVUxFX1RJTUVPVVQp
OwogCQlpZiAodGltZW91dCA8IDApIHsKIAkJCWVyciA9IHRpbWVvdXQ7CkBAIC05OTAsMzAgKzEw
MzEsMzUgQEAgc3RhdGljIGludCBsaXZlX3NlcXVlbnRpYWxfZW5naW5lcyh2b2lkICphcmcpCiAJ
CQlnb3RvIG91dF9yZXF1ZXN0OwogCQl9CiAKLQkJR0VNX0JVR19PTighaTkxNV9yZXF1ZXN0X2Nv
bXBsZXRlZChyZXF1ZXN0W2lkXSkpOworCQlHRU1fQlVHX09OKCFpOTE1X3JlcXVlc3RfY29tcGxl
dGVkKHJlcXVlc3RbaWR4XSkpOworCQlpZHgrKzsKIAl9CiAKIAllcnIgPSBpZ3RfbGl2ZV90ZXN0
X2VuZCgmdCk7CiAKIG91dF9yZXF1ZXN0OgotCWZvcl9lYWNoX2VuZ2luZShlbmdpbmUsIGk5MTUs
IGlkKSB7CisJaWR4ID0gMDsKKwlmb3JfZWFjaF91YWJpX2VuZ2luZShlbmdpbmUsIGk5MTUpIHsK
IAkJdTMyICpjbWQ7CiAKLQkJaWYgKCFyZXF1ZXN0W2lkXSkKKwkJaWYgKCFyZXF1ZXN0W2lkeF0p
CiAJCQlicmVhazsKIAotCQljbWQgPSBpOTE1X2dlbV9vYmplY3RfcGluX21hcChyZXF1ZXN0W2lk
XS0+YmF0Y2gtPm9iaiwKKwkJY21kID0gaTkxNV9nZW1fb2JqZWN0X3Bpbl9tYXAocmVxdWVzdFtp
ZHhdLT5iYXRjaC0+b2JqLAogCQkJCQkgICAgICBJOTE1X01BUF9XQyk7CiAJCWlmICghSVNfRVJS
KGNtZCkpIHsKIAkJCSpjbWQgPSBNSV9CQVRDSF9CVUZGRVJfRU5EOwogCQkJaW50ZWxfZ3RfY2hp
cHNldF9mbHVzaChlbmdpbmUtPmd0KTsKIAotCQkJaTkxNV9nZW1fb2JqZWN0X3VucGluX21hcChy
ZXF1ZXN0W2lkXS0+YmF0Y2gtPm9iaik7CisJCQlpOTE1X2dlbV9vYmplY3RfdW5waW5fbWFwKHJl
cXVlc3RbaWR4XS0+YmF0Y2gtPm9iaik7CiAJCX0KIAotCQlpOTE1X3ZtYV9wdXQocmVxdWVzdFtp
ZF0tPmJhdGNoKTsKLQkJaTkxNV9yZXF1ZXN0X3B1dChyZXF1ZXN0W2lkXSk7CisJCWk5MTVfdm1h
X3B1dChyZXF1ZXN0W2lkeF0tPmJhdGNoKTsKKwkJaTkxNV9yZXF1ZXN0X3B1dChyZXF1ZXN0W2lk
eF0pOworCQlpZHgrKzsKIAl9CitvdXRfZnJlZToKKwlrZnJlZShyZXF1ZXN0KTsKIAlyZXR1cm4g
ZXJyOwogfQogCkBAIC0xMDc5LDkgKzExMjUsMTAgQEAgc3RhdGljIGludCBsaXZlX3BhcmFsbGVs
X2VuZ2luZXModm9pZCAqYXJnKQogCQlfX2xpdmVfcGFyYWxsZWxfZW5naW5lTiwKIAkJTlVMTCwK
IAl9OworCWNvbnN0IHVuc2lnbmVkIGludCBuZW5naW5lcyA9IG51bV91YWJpX2VuZ2luZXMoaTkx
NSk7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwotCWVudW0gaW50ZWxfZW5naW5l
X2lkIGlkOwogCWludCAoKiBjb25zdCAqZm4pKHZvaWQgKmFyZyk7CisJc3RydWN0IHRhc2tfc3Ry
dWN0ICoqdHNrOwogCWludCBlcnIgPSAwOwogCiAJLyoKQEAgLTEwODksNDIgKzExMzYsNDkgQEAg
c3RhdGljIGludCBsaXZlX3BhcmFsbGVsX2VuZ2luZXModm9pZCAqYXJnKQogCSAqIHRlc3RzIHRo
YXQgd2UgbG9hZCB1cCB0aGUgc3lzdGVtIG1heGltYWxseS4KIAkgKi8KIAorCXRzayA9IGttYWxs
b2NfYXJyYXkobmVuZ2luZXMsIHNpemVvZigqdHNrKSwgR0ZQX0tFUk5FTCB8IF9fR0ZQX1pFUk8p
OworCWlmICghdHNrKQorCQlyZXR1cm4gLUVOT01FTTsKKwogCWZvciAoZm4gPSBmdW5jOyAhZXJy
ICYmICpmbjsgZm4rKykgewotCQlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRza1tJOTE1X05VTV9FTkdJ
TkVTXSA9IHt9OwogCQlzdHJ1Y3QgaWd0X2xpdmVfdGVzdCB0OworCQl1bnNpZ25lZCBpbnQgaWR4
OwogCiAJCWVyciA9IGlndF9saXZlX3Rlc3RfYmVnaW4oJnQsIGk5MTUsIF9fZnVuY19fLCAiIik7
CiAJCWlmIChlcnIpCiAJCQlicmVhazsKIAotCQlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1
LCBpZCkgewotCQkJdHNrW2lkXSA9IGt0aHJlYWRfcnVuKCpmbiwgZW5naW5lLAorCQlpZHggPSAw
OworCQlmb3JfZWFjaF91YWJpX2VuZ2luZShlbmdpbmUsIGk5MTUpIHsKKwkJCXRza1tpZHhdID0g
a3RocmVhZF9ydW4oKmZuLCBlbmdpbmUsCiAJCQkJCSAgICAgICJpZ3QvcGFyYWxsZWw6JXMiLAog
CQkJCQkgICAgICBlbmdpbmUtPm5hbWUpOwotCQkJaWYgKElTX0VSUih0c2tbaWRdKSkgewotCQkJ
CWVyciA9IFBUUl9FUlIodHNrW2lkXSk7CisJCQlpZiAoSVNfRVJSKHRza1tpZHhdKSkgeworCQkJ
CWVyciA9IFBUUl9FUlIodHNrW2lkeF0pOwogCQkJCWJyZWFrOwogCQkJfQotCQkJZ2V0X3Rhc2tf
c3RydWN0KHRza1tpZF0pOworCQkJZ2V0X3Rhc2tfc3RydWN0KHRza1tpZHgrK10pOwogCQl9CiAK
LQkJZm9yX2VhY2hfZW5naW5lKGVuZ2luZSwgaTkxNSwgaWQpIHsKKwkJaWR4ID0gMDsKKwkJZm9y
X2VhY2hfdWFiaV9lbmdpbmUoZW5naW5lLCBpOTE1KSB7CiAJCQlpbnQgc3RhdHVzOwogCi0JCQlp
ZiAoSVNfRVJSX09SX05VTEwodHNrW2lkXSkpCi0JCQkJY29udGludWU7CisJCQlpZiAoSVNfRVJS
KHRza1tpZHhdKSkKKwkJCQlicmVhazsKIAotCQkJc3RhdHVzID0ga3RocmVhZF9zdG9wKHRza1tp
ZF0pOworCQkJc3RhdHVzID0ga3RocmVhZF9zdG9wKHRza1tpZHhdKTsKIAkJCWlmIChzdGF0dXMg
JiYgIWVycikKIAkJCQllcnIgPSBzdGF0dXM7CiAKLQkJCXB1dF90YXNrX3N0cnVjdCh0c2tbaWRd
KTsKKwkJCXB1dF90YXNrX3N0cnVjdCh0c2tbaWR4KytdKTsKIAkJfQogCiAJCWlmIChpZ3RfbGl2
ZV90ZXN0X2VuZCgmdCkpCiAJCQllcnIgPSAtRUlPOwogCX0KIAorCWtmcmVlKHRzayk7CiAJcmV0
dXJuIGVycjsKIH0KIApAQCAtMTE2OCwxNiArMTIyMiwxNiBAQCBtYXhfYmF0Y2hlcyhzdHJ1Y3Qg
aTkxNV9nZW1fY29udGV4dCAqY3R4LCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiBz
dGF0aWMgaW50IGxpdmVfYnJlYWRjcnVtYnNfc21va2V0ZXN0KHZvaWQgKmFyZykKIHsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGFyZzsKLQlzdHJ1Y3Qgc21va2V0ZXN0IHRbSTkx
NV9OVU1fRU5HSU5FU107Ci0JdW5zaWduZWQgaW50IG5jcHVzID0gbnVtX29ubGluZV9jcHVzKCk7
CisJY29uc3QgdW5zaWduZWQgaW50IG5lbmdpbmVzID0gbnVtX3VhYmlfZW5naW5lcyhpOTE1KTsK
Kwljb25zdCB1bnNpZ25lZCBpbnQgbmNwdXMgPSBudW1fb25saW5lX2NwdXMoKTsKIAl1bnNpZ25l
ZCBsb25nIG51bV93YWl0cywgbnVtX2ZlbmNlczsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpl
bmdpbmU7CiAJc3RydWN0IHRhc2tfc3RydWN0ICoqdGhyZWFkczsKIAlzdHJ1Y3QgaWd0X2xpdmVf
dGVzdCBsaXZlOwotCWVudW0gaW50ZWxfZW5naW5lX2lkIGlkOwogCWludGVsX3dha2VyZWZfdCB3
YWtlcmVmOwogCXN0cnVjdCBkcm1fZmlsZSAqZmlsZTsKLQl1bnNpZ25lZCBpbnQgbjsKKwlzdHJ1
Y3Qgc21va2V0ZXN0ICpzbW9rZTsKKwl1bnNpZ25lZCBpbnQgbiwgaWR4OwogCWludCByZXQgPSAw
OwogCiAJLyoKQEAgLTExOTYsMjggKzEyNTAsMzEgQEAgc3RhdGljIGludCBsaXZlX2JyZWFkY3J1
bWJzX3Ntb2tldGVzdCh2b2lkICphcmcpCiAJCWdvdG8gb3V0X3JwbTsKIAl9CiAKLQl0aHJlYWRz
ID0ga2NhbGxvYyhuY3B1cyAqIEk5MTVfTlVNX0VOR0lORVMsCi0JCQkgIHNpemVvZigqdGhyZWFk
cyksCi0JCQkgIEdGUF9LRVJORUwpOwotCWlmICghdGhyZWFkcykgeworCXNtb2tlID0ga2NhbGxv
YyhuZW5naW5lcywgc2l6ZW9mKCpzbW9rZSksIEdGUF9LRVJORUwpOworCWlmICghc21va2UpIHsK
IAkJcmV0ID0gLUVOT01FTTsKIAkJZ290byBvdXRfZmlsZTsKIAl9CiAKLQltZW1zZXQoJnRbMF0s
IDAsIHNpemVvZih0WzBdKSk7Ci0JdFswXS5yZXF1ZXN0X2FsbG9jID0gX19saXZlX3JlcXVlc3Rf
YWxsb2M7Ci0JdFswXS5uY29udGV4dHMgPSA2NDsKLQl0WzBdLmNvbnRleHRzID0ga21hbGxvY19h
cnJheSh0WzBdLm5jb250ZXh0cywKLQkJCQkgICAgICBzaXplb2YoKnRbMF0uY29udGV4dHMpLAot
CQkJCSAgICAgIEdGUF9LRVJORUwpOwotCWlmICghdFswXS5jb250ZXh0cykgeworCXRocmVhZHMg
PSBrY2FsbG9jKG5jcHVzICogbmVuZ2luZXMsIHNpemVvZigqdGhyZWFkcyksIEdGUF9LRVJORUwp
OworCWlmICghdGhyZWFkcykgeworCQlyZXQgPSAtRU5PTUVNOworCQlnb3RvIG91dF9zbW9rZTsK
Kwl9CisKKwlzbW9rZVswXS5yZXF1ZXN0X2FsbG9jID0gX19saXZlX3JlcXVlc3RfYWxsb2M7CisJ
c21va2VbMF0ubmNvbnRleHRzID0gNjQ7CisJc21va2VbMF0uY29udGV4dHMgPSBrbWFsbG9jX2Fy
cmF5KHNtb2tlWzBdLm5jb250ZXh0cywKKwkJCQkJICBzaXplb2YoKnNtb2tlWzBdLmNvbnRleHRz
KSwKKwkJCQkJICBHRlBfS0VSTkVMKTsKKwlpZiAoIXNtb2tlWzBdLmNvbnRleHRzKSB7CiAJCXJl
dCA9IC1FTk9NRU07CiAJCWdvdG8gb3V0X3RocmVhZHM7CiAJfQogCi0JZm9yIChuID0gMDsgbiA8
IHRbMF0ubmNvbnRleHRzOyBuKyspIHsKLQkJdFswXS5jb250ZXh0c1tuXSA9IGxpdmVfY29udGV4
dChpOTE1LCBmaWxlKTsKLQkJaWYgKCF0WzBdLmNvbnRleHRzW25dKSB7CisJZm9yIChuID0gMDsg
biA8IHNtb2tlWzBdLm5jb250ZXh0czsgbisrKSB7CisJCXNtb2tlWzBdLmNvbnRleHRzW25dID0g
bGl2ZV9jb250ZXh0KGk5MTUsIGZpbGUpOworCQlpZiAoIXNtb2tlWzBdLmNvbnRleHRzW25dKSB7
CiAJCQlyZXQgPSAtRU5PTUVNOwogCQkJZ290byBvdXRfY29udGV4dHM7CiAJCX0KQEAgLTEyMjcs
NDIgKzEyODQsNDYgQEAgc3RhdGljIGludCBsaXZlX2JyZWFkY3J1bWJzX3Ntb2tldGVzdCh2b2lk
ICphcmcpCiAJaWYgKHJldCkKIAkJZ290byBvdXRfY29udGV4dHM7CiAKLQlmb3JfZWFjaF9lbmdp
bmUoZW5naW5lLCBpOTE1LCBpZCkgewotCQl0W2lkXSA9IHRbMF07Ci0JCXRbaWRdLmVuZ2luZSA9
IGVuZ2luZTsKLQkJdFtpZF0ubWF4X2JhdGNoID0gbWF4X2JhdGNoZXModFswXS5jb250ZXh0c1sw
XSwgZW5naW5lKTsKLQkJaWYgKHRbaWRdLm1heF9iYXRjaCA8IDApIHsKLQkJCXJldCA9IHRbaWRd
Lm1heF9iYXRjaDsKKwlpZHggPSAwOworCWZvcl9lYWNoX3VhYmlfZW5naW5lKGVuZ2luZSwgaTkx
NSkgeworCQlzbW9rZVtpZHhdID0gc21va2VbMF07CisJCXNtb2tlW2lkeF0uZW5naW5lID0gZW5n
aW5lOworCQlzbW9rZVtpZHhdLm1heF9iYXRjaCA9IG1heF9iYXRjaGVzKHNtb2tlWzBdLmNvbnRl
eHRzWzBdLCBlbmdpbmUpOworCQlpZiAoc21va2VbaWR4XS5tYXhfYmF0Y2ggPCAwKSB7CisJCQly
ZXQgPSBzbW9rZVtpZHhdLm1heF9iYXRjaDsKIAkJCWdvdG8gb3V0X2ZsdXNoOwogCQl9CiAJCS8q
IE9uZSByaW5nIGludGVybGVhdmVkIGJldHdlZW4gcmVxdWVzdHMgZnJvbSBhbGwgY3B1cyAqLwot
CQl0W2lkXS5tYXhfYmF0Y2ggLz0gbnVtX29ubGluZV9jcHVzKCkgKyAxOworCQlzbW9rZVtpZHhd
Lm1heF9iYXRjaCAvPSBudW1fb25saW5lX2NwdXMoKSArIDE7CiAJCXByX2RlYnVnKCJMaW1pdGlu
ZyBiYXRjaGVzIHRvICVkIHJlcXVlc3RzIG9uICVzXG4iLAotCQkJIHRbaWRdLm1heF9iYXRjaCwg
ZW5naW5lLT5uYW1lKTsKKwkJCSBzbW9rZVtpZHhdLm1heF9iYXRjaCwgZW5naW5lLT5uYW1lKTsK
IAogCQlmb3IgKG4gPSAwOyBuIDwgbmNwdXM7IG4rKykgewogCQkJc3RydWN0IHRhc2tfc3RydWN0
ICp0c2s7CiAKIAkJCXRzayA9IGt0aHJlYWRfcnVuKF9faWd0X2JyZWFkY3J1bWJzX3Ntb2tldGVz
dCwKLQkJCQkJICAmdFtpZF0sICJpZ3QvJWQuJWQiLCBpZCwgbik7CisJCQkJCSAgJnNtb2tlW2lk
eF0sICJpZ3QvJWQuJWQiLCBpZHgsIG4pOwogCQkJaWYgKElTX0VSUih0c2spKSB7CiAJCQkJcmV0
ID0gUFRSX0VSUih0c2spOwogCQkJCWdvdG8gb3V0X2ZsdXNoOwogCQkJfQogCiAJCQlnZXRfdGFz
a19zdHJ1Y3QodHNrKTsKLQkJCXRocmVhZHNbaWQgKiBuY3B1cyArIG5dID0gdHNrOworCQkJdGhy
ZWFkc1tpZHggKiBuY3B1cyArIG5dID0gdHNrOwogCQl9CisKKwkJaWR4Kys7CiAJfQogCiAJbXNs
ZWVwKGppZmZpZXNfdG9fbXNlY3MoaTkxNV9zZWxmdGVzdC50aW1lb3V0X2ppZmZpZXMpKTsKIAog
b3V0X2ZsdXNoOgorCWlkeCA9IDA7CiAJbnVtX3dhaXRzID0gMDsKIAludW1fZmVuY2VzID0gMDsK
LQlmb3JfZWFjaF9lbmdpbmUoZW5naW5lLCBpOTE1LCBpZCkgeworCWZvcl9lYWNoX3VhYmlfZW5n
aW5lKGVuZ2luZSwgaTkxNSkgewogCQlmb3IgKG4gPSAwOyBuIDwgbmNwdXM7IG4rKykgewotCQkJ
c3RydWN0IHRhc2tfc3RydWN0ICp0c2sgPSB0aHJlYWRzW2lkICogbmNwdXMgKyBuXTsKKwkJCXN0
cnVjdCB0YXNrX3N0cnVjdCAqdHNrID0gdGhyZWFkc1tpZHggKiBuY3B1cyArIG5dOwogCQkJaW50
IGVycjsKIAogCQkJaWYgKCF0c2spCkBAIC0xMjc1LDE3ICsxMzM2LDIwIEBAIHN0YXRpYyBpbnQg
bGl2ZV9icmVhZGNydW1ic19zbW9rZXRlc3Qodm9pZCAqYXJnKQogCQkJcHV0X3Rhc2tfc3RydWN0
KHRzayk7CiAJCX0KIAotCQludW1fd2FpdHMgKz0gYXRvbWljX2xvbmdfcmVhZCgmdFtpZF0ubnVt
X3dhaXRzKTsKLQkJbnVtX2ZlbmNlcyArPSBhdG9taWNfbG9uZ19yZWFkKCZ0W2lkXS5udW1fZmVu
Y2VzKTsKKwkJbnVtX3dhaXRzICs9IGF0b21pY19sb25nX3JlYWQoJnNtb2tlW2lkeF0ubnVtX3dh
aXRzKTsKKwkJbnVtX2ZlbmNlcyArPSBhdG9taWNfbG9uZ19yZWFkKCZzbW9rZVtpZHhdLm51bV9m
ZW5jZXMpOworCQlpZHgrKzsKIAl9CiAJcHJfaW5mbygiQ29tcGxldGVkICVsdSB3YWl0cyBmb3Ig
JWx1IGZlbmNlcyBhY3Jvc3MgJWQgZW5naW5lcyBhbmQgJWQgY3B1c1xuIiwKIAkJbnVtX3dhaXRz
LCBudW1fZmVuY2VzLCBSVU5USU1FX0lORk8oaTkxNSktPm51bV9lbmdpbmVzLCBuY3B1cyk7CiAK
IAlyZXQgPSBpZ3RfbGl2ZV90ZXN0X2VuZCgmbGl2ZSkgPzogcmV0Owogb3V0X2NvbnRleHRzOgot
CWtmcmVlKHRbMF0uY29udGV4dHMpOworCWtmcmVlKHNtb2tlWzBdLmNvbnRleHRzKTsKIG91dF90
aHJlYWRzOgogCWtmcmVlKHRocmVhZHMpOworb3V0X3Ntb2tlOgorCWtmcmVlKHNtb2tlKTsKIG91
dF9maWxlOgogCW1vY2tfZmlsZV9mcmVlKGk5MTUsIGZpbGUpOwogb3V0X3JwbToKLS0gCjIuMjMu
MAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwt
Z2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8v
bGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4

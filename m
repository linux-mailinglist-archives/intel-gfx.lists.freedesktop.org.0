Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6477816AA3A
	for <lists+intel-gfx@lfdr.de>; Mon, 24 Feb 2020 16:36:03 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C5EE16E563;
	Mon, 24 Feb 2020 15:36:00 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga12.intel.com (mga12.intel.com [192.55.52.136])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 00BF26E554
 for <intel-gfx@lists.freedesktop.org>; Mon, 24 Feb 2020 15:35:59 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga001.jf.intel.com ([10.7.209.18])
 by fmsmga106.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 24 Feb 2020 07:35:59 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,480,1574150400"; d="scan'208";a="316779396"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by orsmga001.jf.intel.com with ESMTP; 24 Feb 2020 07:35:57 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 24 Feb 2020 17:32:39 +0200
Message-Id: <20200224153240.9047-8-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200224153240.9047-1-stanislav.lisovskiy@intel.com>
References: <20200224153240.9047-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v18 7/8] drm/i915: Restrict qgv points which
 don't have enough bandwidth.
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWNjb3JkaW5nIHRvIEJTcGVjIDUzOTk4LCB3ZSBzaG91bGQgdHJ5IHRvCnJlc3RyaWN0IHFndiBw
b2ludHMsIHdoaWNoIGNhbid0IHByb3ZpZGUKZW5vdWdoIGJhbmR3aWR0aCBmb3IgZGVzaXJlZCBk
aXNwbGF5IGNvbmZpZ3VyYXRpb24uCgpDdXJyZW50bHkgd2UgYXJlIGp1c3QgY29tcGFyaW5nIGFn
YWluc3QgYWxsIG9mCnRob3NlIGFuZCB0YWtlIG1pbmltdW0od29yc3QgY2FzZSkuCgp2MjogRml4
ZWQgd3JvbmcgUENvZGUgcmVwbHkgbWFzaywgcmVtb3ZlZCBoYXJkY29kZWQKICAgIHZhbHVlcy4K
CnYzOiBGb3JiaWQgc2ltdWx0YW5lb3VzIGxlZ2FjeSBTQUdWIFBDb2RlIHJlcXVlc3RzIGFuZAog
ICAgcmVzdHJpY3RpbmcgcWd2IHBvaW50cy4gUHV0IHRoZSBhY3R1YWwgcmVzdHJpY3Rpb24KICAg
IHRvIGNvbW1pdCBmdW5jdGlvbiwgYWRkZWQgc2VyaWFsaXphdGlvbih0aGFua3MgdG8gVmlsbGUp
CiAgICB0byBwcmV2ZW50IGNvbW1pdCBiZWluZyBhcHBsaWVkIG91dCBvZiBvcmRlciBpbiBjYXNl
IG9mCiAgICBub25ibG9ja2luZyBhbmQvb3Igbm9tb2Rlc2V0IGNvbW1pdHMuCgp2NDoKICAgIC0g
TWlub3IgY29kZSByZWZhY3RvcmluZywgZml4ZWQgZmV3IHR5cG9zKHRoYW5rcyB0byBKYW1lcyBB
dXNtdXMpCiAgICAtIENoYW5nZSB0aGUgbmFtaW5nIG9mIHFndiBwb2ludAogICAgICBtYXNraW5n
L3VubWFza2luZyBmdW5jdGlvbnMoSmFtZXMgQXVzbXVzKS4KICAgIC0gU2ltcGxpZnkgdGhlIG1h
c2tpbmcvdW5tYXNraW5nIG9wZXJhdGlvbiBpdHNlbGYsCiAgICAgIGFzIHdlIGRvbid0IG5lZWQg
dG8gbWFzayBvbmx5IHNpbmdsZSBwb2ludCBwZXIgcmVxdWVzdChKYW1lcyBBdXNtdXMpCiAgICAt
IFJlamVjdCBhbmQgc3RpY2sgdG8gaGlnaGVzdCBiYW5kd2lkdGggcG9pbnQgaWYgU0FHVgogICAg
ICBjYW4ndCBiZSBlbmFibGVkKEJTcGVjKQoKdjU6CiAgICAtIEFkZCBuZXcgbWFpbGJveCByZXBs
eSBjb2Rlcywgd2hpY2ggc2VlbXMgdG8gaGFwcGVuIGR1cmluZyBib290CiAgICAgIHRpbWUgZm9y
IFRHTCBhbmQgaW5kaWNhdGUgdGhhdCBRR1Ygc2V0dGluZyBpcyBub3QgeWV0IGF2YWlsYWJsZS4K
CnY2OgogICAgLSBJbmNyZWFzZSBudW1iZXIgb2Ygc3VwcG9ydGVkIFFHViBwb2ludHMgdG8gYmUg
aW4gc3luYyB3aXRoIEJTcGVjLgoKdjc6IC0gUmViYXNlZCBhbmQgcmVzb2x2ZWQgY29uZmxpY3Qg
dG8gZml4IGJ1aWxkIGZhaWx1cmUuCiAgICAtIEZpeCBOVU1fUUdWX1BPSU5UUyB0byA4IGFuZCBt
b3ZlZCB0aGF0IHRvIGhlYWRlciBmaWxlKEphbWVzIEF1c211cykKCnY4OiAtIERvbid0IHJlcG9y
dCBhbiBlcnJvciBpZiB3ZSBjYW4ndCByZXN0cmljdCBxZ3YgcG9pbnRzLCBhcyBTQUdWCiAgICAg
IGNhbiBiZSBkaXNhYmxlZCBieSBCSU9TLCB3aGljaCBpcyBjb21wbGV0ZWx5IGxlZ2FsLiBTbyBk
b24ndAogICAgICBtYWtlIENJIHBhbmljLiBJbnN0ZWFkIGlmIHdlIGRldGVjdCB0aGF0IHRoZXJl
IGlzIG9ubHkgMSBRR1YKICAgICAgcG9pbnQgYWNjZXNzaWJsZSBqdXN0IGFuYWx5emUgaWYgd2Ug
Y2FuIGZpdCB0aGUgcmVxdWlyZWQgYmFuZHdpZHRoCiAgICAgIHJlcXVpcmVtZW50cywgYnV0IG5v
IG5lZWQgaW4gcmVzdHJpY3RpbmcuCgp2OTogLSBGaXggd3JvbmcgUUdWIHRyYW5zaXRpb24gaWYg
d2UgaGF2ZSAwIHBsYW5lcyBhbmQgbm8gU0FHVgogICAgICBzaW11bHRhbmVvdXNseS4KCnYxMDog
LSBGaXggQ0RDTEsgY29ycnVwdGlvbiwgYmVjYXVzZSBvZiBnbG9iYWwgc3RhdGUgZ2V0dGluZyBz
ZXJpYWxpemVkCiAgICAgICB3aXRob3V0IG1vZGVzZXQsIHdoaWNoIGNhdXNlZCBjb3B5aW5nIG9m
IG5vbi1jYWxjdWxhdGVkIGNkY2xrCiAgICAgICB0byBiZSBjb3BpZWQgdG8gZGV2X3ByaXYodGhh
bmtzIHRvIFZpbGxlIGZvciB0aGUgaGludCkuCgp2MTE6IC0gUmVtb3ZlIHVubmVlZGVkIGhlYWRl
cnMgYW5kIHNwYWNlcyhNYXR0aGV3IFJvcGVyKQogICAgIC0gUmVtb3ZlIHVubmVlZGVkIGludGVs
X3Fndl9pbmZvIHFpIHN0cnVjdCBmcm9tIGJ3IGNoZWNrIGFuZCB6ZXJvCiAgICAgICBvdXQgdGhl
IG5lZWRlZCBvbmUoTWF0dGhldyBSb3BlcikKICAgICAtIENoYW5nZWQgUUdWIGVycm9yIG1lc3Nh
Z2UgdG8gaGF2ZSBtb3JlIGNsZWFyIG1lYW5pbmcoTWF0dGhldyBSb3BlcikKICAgICAtIFVzZSBz
dGF0ZS0+bW9kZXNldF9zZXQgaW5zdGVhZCBvZiBhbnlfbXMoTWF0dGhldyBSb3BlcikKICAgICAt
IE1vdmVkIE5VTV9TQUdWX1BPSU5UUyBmcm9tIGk5MTVfcmVnLmggdG8gaTkxNV9kcnYuaCB3aGVy
ZSBpdCdzIHVzZWQKICAgICAtIEtlZXAgdXNpbmcgY3J0Y19zdGF0ZS0+aHcuYWN0aXZlIGluc3Rl
YWQgb2YgLmVuYWJsZShNYXR0aGV3IFJvcGVyKQogICAgIC0gTW92ZWQgdW5yZWxhdGVkIGNoYW5n
ZXMgdG8gb3RoZXIgcGF0Y2godXNpbmcgbGF0ZW5jeSBhcyBwYXJhbWV0ZXIKICAgICAgIGZvciBw
bGFuZSB3bSBjYWxjdWxhdGlvbiwgbW92ZWQgdG8gU0FHViByZWZhY3RvcmluZyBwYXRjaCkKCnYx
MjogLSBGaXggcmViYXNlIGNvbmZsaWN0IHdpdGggb3duIHRlbXBvcmFyeSBTQUdWL1FHViBmaXgu
CiAgICAgLSBSZW1vdmUgdW5uZWNlc3NhcnkgbWFzayBiZWluZyB6ZXJvIGNoZWNrIHdoZW4gdW5t
YXNraW5nCiAgICAgICBxZ3YgcG9pbnRzIGFzIHRoaXMgaXMgY29tcGxldGVseSBsZWdhbChNYXR0
IFJvcGVyKQogICAgIC0gQ2hlY2sgaWYgd2UgYXJlIHNldHRpbmcgdGhlIHNhbWUgbWFzayBhcyBh
bHJlYWR5IGJlaW5nIHNldAogICAgICAgaW4gaGFyZHdhcmUgdG8gcHJldmVudCBlcnJvciBmcm9t
IFBDb2RlLgogICAgIC0gRml4IGVycm9yIG1lc3NhZ2Ugd2hlbiByZXN0cmljdGluZy91bnJlc3Ry
aWN0aW5nIHFndiBwb2ludHMKICAgICAgIHRvICJtYXNrL3VubWFzayIgd2hpY2ggc291bmRzIG1v
cmUgYWNjdXJhdGUoTWF0dCBSb3BlcikKICAgICAtIE1vdmUgc2FndiBzdGF0dXMgc2V0dGluZyB0
byBpY2xfZ2V0X2J3X2luZm8gZnJvbSBhdG9taWMgY2hlY2sKICAgICAgIGFzIHRoaXMgc2hvdWxk
IGJlIGNhbGN1bGF0ZWQgb25seSBvbmNlLihNYXR0IFJvcGVyKQogICAgIC0gRWRpdGVkIGNvbW1l
bnRzIGZvciB0aGUgY2FzZSB3aGVuIHdlIGNhbid0IGVuYWJsZSBTQUdWIGFuZAogICAgICAgdXNl
IG9ubHkgMSBRR1YgcG9pbnQgd2l0aCBoaWdoZXN0IGJhbmR3aWR0aCB0byBiZSBtb3JlCiAgICAg
ICB1bmRlcnN0YW5kYWJsZS4oTWF0dCBSb3BlcikKCnYxMzogLSBNb3ZlZCBtYXhfZGF0YV9yYXRl
IGluIGJ3IGNoZWNrIHRvIGNsb3NlciBzY29wZShWaWxsZSBTeXJqw6Rsw6QpCiAgICAgLSBDaGFu
Z2VkIGNvbW1lbnQgZm9yIHplcm8gbmV3X21hc2sgaW4gcWd2IHBvaW50cyBtYXNraW5nIGZ1bmN0
aW9uCiAgICAgICB0byBiZXR0ZXIgcmVmbGVjdCByZWFsaXR5KFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIFNpbXBsaWZpZWQgYml0IG1hc2sgb3BlcmF0aW9uIGluIHFndiBwb2ludHMgbWFza2luZyBm
dW5jdGlvbgogICAgICAgKFZpbGxlIFN5cmrDpGzDpCkKICAgICAtIE1vdmVkIGludGVsX3Fndl9w
b2ludHNfbWFzayBjbG9zZXIgdG8gZ2VuMTEgU0FHViBkaXNhYmxpbmcsCiAgICAgICBob3dldmVy
IHRoaXMgc3RpbGwgY2FuJ3QgYmUgdW5kZXIgbW9kZXNldCBjb25kaXRpb24oVmlsbGUgU3lyasOk
bMOkKQogICAgIC0gUGFja2VkIHFndl9wb2ludHNfbWFzayBhcyB1OCBhbmQgbW92ZWQgY2xvc2Vy
IHRvIHBpcGVfc2Fndl9tYXNrCiAgICAgICAoVmlsbGUgU3lyasOkbMOkKQogICAgIC0gRXh0cmFj
dGVkIFBDb2RlIGNoYW5nZXMgdG8gc2VwYXJhdGUgcGF0Y2guKFZpbGxlIFN5cmrDpGzDpCkKICAg
ICAtIE5vdyB0cmVhdCBudW1fcGxhbmVzIDAgc2FtZSBhcyAxIHRvIGF2b2lkIGNvbmZ1c2lvbiBh
bmQKICAgICAgIHJldHVybmluZyBtYXhfYncgYXMgMCwgd2hpY2ggd291bGQgcHJldmVudCBjaG9v
c2luZyBRR1YKICAgICAgIHBvaW50IGhhdmluZyBtYXggYmFuZHdpZHRoIGluIGNhc2UgaWYgU0FH
ViBpcyBub3QgYWxsb3dlZCwKICAgICAgIGFzIHBlciBCU3BlYyhWaWxsZSBTeXJqw6Rsw6QpCiAg
ICAgLSBEbyB0aGUgYWN0dWFsIHFndl9wb2ludHNfbWFzayBzd2FwIGluIHRoZSBzYW1lIHBsYWNl
IGFzCiAgICAgICBhbGwgb3RoZXIgZ2xvYmFsIHN0YXRlIHBhcnRzIGxpa2UgY2RjbGsgYXJlIHN3
YXBwZWQuCiAgICAgICBJbiB0aGUgbmV4dCBwYXRjaCwgdGhpcyBhbGwgd2lsbCBiZSBtb3ZlZCB0
byBidyBzdGF0ZSBhcwogICAgICAgZ2xvYmFsIHN0YXRlLCBvbmNlIG5ldyBnbG9iYWwgc3RhdGUg
cGF0Y2ggc2VyaWVzIGZyb20gVmlsbGUKICAgICAgIGxhbmRzCgp2MTQ6IC0gTm93IHVzaW5nIGds
b2JhbCBzdGF0ZSB0byBzZXJpYWxpemUgYWNjZXNzIHRvIHFndiBwb2ludHMKICAgICAtIEFkZGVk
IGdsb2JhbCBzdGF0ZSBsb2NraW5nIGJhY2ssIG90aGVyd2lzZSB3ZSBzZWVtIHRvIHJlYWQKICAg
ICAgIGJ3IHN0YXRlIGluIGEgd3Jvbmcgd2F5LgoKdjE1OiAtIEFkZGVkIFRPRE8gY29tbWVudCBm
b3IgbmVhciBhdG9taWMgZ2xvYmFsIHN0YXRlIGxvY2tpbmcgaW4KICAgICAgIGJ3IGNvZGUuCgp2
MTY6IC0gRml4ZWQgaW50ZWxfYXRvbWljX2J3XyogZnVuY3Rpb25zIHRvIGJlIGludGVsX2J3Xyog
YXMgZGlzY3Vzc2VkCiAgICAgICB3aXRoIEphbmkgTmlrdWxhLgogICAgIC0gVGFrZSBid19zdGF0
ZV9jaGFuZ2VkIGZsYWcgaW50byB1c2UuCgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zz
a2l5IDxzdGFuaXNsYXYubGlzb3Zza2l5QGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8
dmlsbGUuc3lyamFsYUBpbnRlbC5jb20+CkNjOiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0Bp
bnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5jICAg
ICAgfCAxODAgKysrKysrKysrKysrKy0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9idy5oICAgICAgfCAgIDkgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9p
bnRlbF9kaXNwbGF5LmMgfCAxMTQgKysrKysrKysrKystCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oICAgICAgICAgICAgICB8ICAgMyArCiA0IGZpbGVzIGNoYW5nZWQsIDI1NCBpbnNl
cnRpb25zKCspLCA1MiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2J3LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2J3LmMKaW5kZXggZDA3OTE4YjRhM2Q1Li44ZjFkZTk1YzdjMTkgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmMKQEAgLTgsNiArOCw5IEBACiAjaW5jbHVkZSAiaW50
ZWxfYncuaCIKICNpbmNsdWRlICJpbnRlbF9kaXNwbGF5X3R5cGVzLmgiCiAjaW5jbHVkZSAiaW50
ZWxfc2lkZWJhbmQuaCIKKyNpbmNsdWRlICJpbnRlbF9hdG9taWMuaCIKKyNpbmNsdWRlICJpbnRl
bF9wbS5oIgorCiAKIC8qIFBhcmFtZXRlcnMgZm9yIFFjbGsgR2V5c2VydmlsbGUgKFFHVikgKi8K
IHN0cnVjdCBpbnRlbF9xZ3ZfcG9pbnQgewpAQCAtMTEzLDYgKzExNiwyNiBAQCBzdGF0aWMgaW50
IGljbF9wY29kZV9yZWFkX3Fndl9wb2ludF9pbmZvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiwKIAlyZXR1cm4gMDsKIH0KIAoraW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3ZfcG9p
bnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2ludHNf
bWFzaykKK3sKKwlpbnQgcmV0OworCisJLyogYnNwZWMgc2F5cyB0byBrZWVwIHJldHJ5aW5nIGZv
ciBhdCBsZWFzdCAxIG1zICovCisJcmV0ID0gc2tsX3Bjb2RlX3JlcXVlc3QoZGV2X3ByaXYsIElD
TF9QQ09ERV9TQUdWX0RFX01FTV9TU19DT05GSUcsCisJCQkJcG9pbnRzX21hc2ssCisJCQkJR0VO
MTFfUENPREVfUE9JTlRTX1JFU1RSSUNURURfTUFTSywKKwkJCQlHRU4xMV9QQ09ERV9QT0lOVFNf
UkVTVFJJQ1RFRCwKKwkJCQkxKTsKKworCWlmIChyZXQgPCAwKSB7CisJCURSTV9FUlJPUigiRmFp
bGVkIHRvIGRpc2FibGUgcWd2IHBvaW50cyAoJWQpXG4iLCByZXQpOworCQlyZXR1cm4gcmV0Owor
CX0KKworCXJldHVybiAwOworfQorCiBzdGF0aWMgaW50IGljbF9nZXRfcWd2X3BvaW50cyhzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfcWd2
X2luZm8gKnFpKQogewpAQCAtMjQwLDYgKzI2MywxNiBAQCBzdGF0aWMgaW50IGljbF9nZXRfYndf
aW5mbyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIGNvbnN0IHN0cnVjdCBpbnRl
bAogCQkJYnJlYWs7CiAJfQogCisJLyoKKwkgKiBJbiBjYXNlIGlmIFNBR1YgaXMgZGlzYWJsZWQg
aW4gQklPUywgd2UgYWx3YXlzIGdldCAxCisJICogU0FHViBwb2ludCwgYnV0IHdlIGNhbid0IHNl
bmQgUENvZGUgY29tbWFuZHMgdG8gcmVzdHJpY3QgaXQKKwkgKiBhcyBpdCB3aWxsIGZhaWwgYW5k
IHBvaW50bGVzcyBhbnl3YXkuCisJICovCisJaWYgKHFpLm51bV9wb2ludHMgPT0gMSkKKwkJZGV2
X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX05PVF9DT05UUk9MTEVEOworCWVsc2UKKwkJ
ZGV2X3ByaXYtPnNhZ3Zfc3RhdHVzID0gSTkxNV9TQUdWX0VOQUJMRUQ7CisKIAlyZXR1cm4gMDsK
IH0KIApAQCAtMjU5LDcgKzI5Miw3IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgaWNsX21heF9idyhz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCWlmIChxZ3ZfcG9pbnQgPj0gYmkt
Pm51bV9xZ3ZfcG9pbnRzKQogCQkJcmV0dXJuIFVJTlRfTUFYOwogCi0JCWlmIChudW1fcGxhbmVz
ID49IGJpLT5udW1fcGxhbmVzKQorCQlpZiAobnVtX3BsYW5lcyA+PSBiaS0+bnVtX3BsYW5lcyB8
fCAhbnVtX3BsYW5lcykKIAkJCXJldHVybiBiaS0+ZGVyYXRlZGJ3W3Fndl9wb2ludF07CiAJfQog
CkBAIC0yNzcsMzQgKzMxMCw2IEBAIHZvaWQgaW50ZWxfYndfaW5pdF9odyhzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWljbF9nZXRfYndfaW5mbyhkZXZfcHJpdiwgJmljbF9z
YV9pbmZvKTsKIH0KIAotc3RhdGljIHVuc2lnbmVkIGludCBpbnRlbF9tYXhfZGF0YV9yYXRlKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKLQkJCQkJaW50IG51bV9wbGFuZXMpCi17
Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpIHsKLQkJLyoKLQkJICogQW55IGJ3IGdy
b3VwIGhhcyBzYW1lIGFtb3VudCBvZiBRR1YgcG9pbnRzCi0JCSAqLwotCQljb25zdCBzdHJ1Y3Qg
aW50ZWxfYndfaW5mbyAqYmkgPQotCQkJJmRldl9wcml2LT5tYXhfYndbMF07Ci0JCXVuc2lnbmVk
IGludCBtaW5fYncgPSBVSU5UX01BWDsKLQkJaW50IGk7Ci0KLQkJLyoKLQkJICogRklYTUUgd2l0
aCBTQUdWIGRpc2FibGVkIG1heWJlIHdlIGNhbiBhc3N1bWUKLQkJICogcG9pbnQgMSB3aWxsIGFs
d2F5cyBiZSB1c2VkPyBTZWVtcyB0byBtYXRjaAotCQkgKiB0aGUgYmVoYXZpb3VyIG9ic2VydmVk
IGluIHRoZSB3aWxkLgotCQkgKi8KLQkJZm9yIChpID0gMDsgaSA8IGJpLT5udW1fcWd2X3BvaW50
czsgaSsrKSB7Ci0JCQl1bnNpZ25lZCBpbnQgYncgPSBpY2xfbWF4X2J3KGRldl9wcml2LCBudW1f
cGxhbmVzLCBpKTsKLQotCQkJbWluX2J3ID0gbWluKGJ3LCBtaW5fYncpOwotCQl9Ci0JCXJldHVy
biBtaW5fYnc7Ci0JfSBlbHNlIHsKLQkJcmV0dXJuIFVJTlRfTUFYOwotCX0KLX0KLQogc3RhdGlj
IHVuc2lnbmVkIGludCBpbnRlbF9id19jcnRjX251bV9hY3RpdmVfcGxhbmVzKGNvbnN0IHN0cnVj
dCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlKQogewogCS8qCkBAIC00MTgsMTEgKzQyMywx
NiBAQCBpbnQgaW50ZWxfYndfYXRvbWljX2NoZWNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUg
KnN0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
c3RhdGUtPmJhc2UuZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3Rh
dGUsICpvbGRfY3J0Y19zdGF0ZTsKLQlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlID0g
TlVMTDsKLQl1bnNpZ25lZCBpbnQgZGF0YV9yYXRlLCBtYXhfZGF0YV9yYXRlOworCXN0cnVjdCBp
bnRlbF9id19zdGF0ZSAqbmV3X2J3X3N0YXRlID0gTlVMTDsKKwlzdHJ1Y3QgaW50ZWxfYndfc3Rh
dGUgKm9sZF9id19zdGF0ZSA9IE5VTEw7CisJdW5zaWduZWQgaW50IGRhdGFfcmF0ZTsKIAl1bnNp
Z25lZCBpbnQgbnVtX2FjdGl2ZV9wbGFuZXM7CiAJc3RydWN0IGludGVsX2NydGMgKmNydGM7CiAJ
aW50IGksIHJldDsKKwl1MzIgYWxsb3dlZF9wb2ludHMgPSAwOworCXVuc2lnbmVkIGludCBtYXhf
YndfcG9pbnQgPSAwLCBtYXhfYncgPSAwOworCXVuc2lnbmVkIGludCBudW1fcWd2X3BvaW50cyA9
IGRldl9wcml2LT5tYXhfYndbMF0ubnVtX3Fndl9wb2ludHM7CisJdTMyIG1hc2sgPSAoMSA8PCBu
dW1fcWd2X3BvaW50cykgLSAxOwogCiAJLyogRklYTUUgZWFybGllciBnZW5zIG5lZWQgc29tZSBj
aGVja3MgdG9vICovCiAJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkKQEAgLTQ0Nyw0MyAr
NDU3LDExMyBAQCBpbnQgaW50ZWxfYndfYXRvbWljX2NoZWNrKHN0cnVjdCBpbnRlbF9hdG9taWNf
c3RhdGUgKnN0YXRlKQogCQkgICAgb2xkX2FjdGl2ZV9wbGFuZXMgPT0gbmV3X2FjdGl2ZV9wbGFu
ZXMpCiAJCQljb250aW51ZTsKIAotCQlid19zdGF0ZSAgPSBpbnRlbF9id19nZXRfc3RhdGUoc3Rh
dGUpOwotCQlpZiAoSVNfRVJSKGJ3X3N0YXRlKSkKLQkJCXJldHVybiBQVFJfRVJSKGJ3X3N0YXRl
KTsKKwkJbmV3X2J3X3N0YXRlID0gaW50ZWxfYndfZ2V0X3N0YXRlKHN0YXRlKTsKKwkJaWYgKElT
X0VSUihuZXdfYndfc3RhdGUpKQorCQkJcmV0dXJuIFBUUl9FUlIobmV3X2J3X3N0YXRlKTsKIAot
CQlid19zdGF0ZS0+ZGF0YV9yYXRlW2NydGMtPnBpcGVdID0gbmV3X2RhdGFfcmF0ZTsKLQkJYndf
c3RhdGUtPm51bV9hY3RpdmVfcGxhbmVzW2NydGMtPnBpcGVdID0gbmV3X2FjdGl2ZV9wbGFuZXM7
CisJCW5ld19id19zdGF0ZS0+ZGF0YV9yYXRlW2NydGMtPnBpcGVdID0gbmV3X2RhdGFfcmF0ZTsK
KwkJbmV3X2J3X3N0YXRlLT5udW1fYWN0aXZlX3BsYW5lc1tjcnRjLT5waXBlXSA9IG5ld19hY3Rp
dmVfcGxhbmVzOwogCiAJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAogCQkJICAgICJwaXBl
ICVjIGRhdGEgcmF0ZSAldSBudW0gYWN0aXZlIHBsYW5lcyAldVxuIiwKIAkJCSAgICBwaXBlX25h
bWUoY3J0Yy0+cGlwZSksCi0JCQkgICAgYndfc3RhdGUtPmRhdGFfcmF0ZVtjcnRjLT5waXBlXSwK
LQkJCSAgICBid19zdGF0ZS0+bnVtX2FjdGl2ZV9wbGFuZXNbY3J0Yy0+cGlwZV0pOworCQkJICAg
IG5ld19id19zdGF0ZS0+ZGF0YV9yYXRlW2NydGMtPnBpcGVdLAorCQkJICAgIG5ld19id19zdGF0
ZS0+bnVtX2FjdGl2ZV9wbGFuZXNbY3J0Yy0+cGlwZV0pOwogCX0KIAotCWlmICghYndfc3RhdGUp
CisJaWYgKCFuZXdfYndfc3RhdGUpCiAJCXJldHVybiAwOwogCi0JcmV0ID0gaW50ZWxfYXRvbWlj
X2xvY2tfZ2xvYmFsX3N0YXRlKCZid19zdGF0ZS0+YmFzZSk7Ci0JaWYgKHJldCkKKwkvKgorCSAq
IFRPRE86IFNob3VsZCB3ZSBqdXN0IGNhbGwgaW50ZWxfYXRvbWljX3NlcmlhbGl6ZV9nbG9iYWxf
c3RhdGUgaGVyZT8KKwkgKiB3ZSBhbnl3YXkgYWxyZWFkeSBoYXZlIGRpZmZlcmVudCBkYXRhIHJh
dGVzIGFuZCB0aGlzIGNhbGwgaXMKKwkgKiBpcyBhbG1vc3Qgc2ltaWxhciwgZXhjZXB0IHRoYXQg
aXQgZG9lc24ndCBjYWxsIGR1cGxpY2F0ZV9zdGF0ZQorCSAqIGhvb2suCisJICovCisJcmV0ID0g
aW50ZWxfYXRvbWljX2xvY2tfZ2xvYmFsX3N0YXRlKCZuZXdfYndfc3RhdGUtPmJhc2UpOworCWlm
IChyZXQpIHsKKwkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IGxvY2sgZ2xvYmFsIHN0YXRlXG4i
KTsKIAkJcmV0dXJuIHJldDsKKwl9CiAKLQlzdGF0ZS0+Yndfc3RhdGVfY2hhbmdlZCA9IHRydWU7
CisJZGF0YV9yYXRlID0gaW50ZWxfYndfZGF0YV9yYXRlKGRldl9wcml2LCBuZXdfYndfc3RhdGUp
OworCW51bV9hY3RpdmVfcGxhbmVzID0gaW50ZWxfYndfbnVtX2FjdGl2ZV9wbGFuZXMoZGV2X3By
aXYsIG5ld19id19zdGF0ZSk7CiAKLQlkYXRhX3JhdGUgPSBpbnRlbF9id19kYXRhX3JhdGUoZGV2
X3ByaXYsIGJ3X3N0YXRlKTsKLQludW1fYWN0aXZlX3BsYW5lcyA9IGludGVsX2J3X251bV9hY3Rp
dmVfcGxhbmVzKGRldl9wcml2LCBid19zdGF0ZSk7CisJZGF0YV9yYXRlID0gRElWX1JPVU5EX1VQ
KGRhdGFfcmF0ZSwgMTAwMCk7CiAKLQltYXhfZGF0YV9yYXRlID0gaW50ZWxfbWF4X2RhdGFfcmF0
ZShkZXZfcHJpdiwgbnVtX2FjdGl2ZV9wbGFuZXMpOworCWZvciAoaSA9IDA7IGkgPCBudW1fcWd2
X3BvaW50czsgaSsrKSB7CisJCXVuc2lnbmVkIGludCBtYXhfZGF0YV9yYXRlOwogCi0JZGF0YV9y
YXRlID0gRElWX1JPVU5EX1VQKGRhdGFfcmF0ZSwgMTAwMCk7CisJCW1heF9kYXRhX3JhdGUgPSBp
Y2xfbWF4X2J3KGRldl9wcml2LCBudW1fYWN0aXZlX3BsYW5lcywgaSk7CisJCS8qCisJCSAqIFdl
IG5lZWQgdG8ga25vdyB3aGljaCBxZ3YgcG9pbnQgZ2l2ZXMgdXMKKwkJICogbWF4aW11bSBiYW5k
d2lkdGggaW4gb3JkZXIgdG8gZGlzYWJsZSBTQUdWCisJCSAqIGlmIHdlIGZpbmQgdGhhdCB3ZSBl
eGNlZWQgU0FHViBibG9jayB0aW1lCisJCSAqIHdpdGggd2F0ZXJtYXJrcy4gQnkgdGhhdCBtb21l
bnQgd2UgYWxyZWFkeQorCQkgKiBoYXZlIHRob3NlLCBhcyBpdCBpcyBjYWxjdWxhdGVkIGVhcmxp
ZXIgaW4KKwkJICogaW50ZWxfYXRvbWljX2NoZWNrLAorCQkgKi8KKwkJaWYgKG1heF9kYXRhX3Jh
dGUgPiBtYXhfYncpIHsKKwkJCW1heF9id19wb2ludCA9IGk7CisJCQltYXhfYncgPSBtYXhfZGF0
YV9yYXRlOworCQl9CisJCWlmIChtYXhfZGF0YV9yYXRlID49IGRhdGFfcmF0ZSkKKwkJCWFsbG93
ZWRfcG9pbnRzIHw9IEJJVChpKTsKKwkJRFJNX0RFQlVHX0tNUygiUUdWIHBvaW50ICVkOiBtYXgg
YncgJWQgcmVxdWlyZWQgJWRcbiIsCisJCQkgICAgICBpLCBtYXhfZGF0YV9yYXRlLCBkYXRhX3Jh
dGUpOworCX0KIAotCWlmIChkYXRhX3JhdGUgPiBtYXhfZGF0YV9yYXRlKSB7Ci0JCWRybV9kYmdf
a21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJCYW5kd2lkdGggJXUgTUIvcyBleGNlZWRzIG1h
eCBhdmFpbGFibGUgJWQgTUIvcyAoJWQgYWN0aXZlIHBsYW5lcylcbiIsCi0JCQkgICAgZGF0YV9y
YXRlLCBtYXhfZGF0YV9yYXRlLCBudW1fYWN0aXZlX3BsYW5lcyk7CisJLyoKKwkgKiBCU3BlYyBz
dGF0ZXMgdGhhdCB3ZSBhbHdheXMgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGFsbG93ZWQgcG9p
bnQKKwkgKiBsZWZ0LCBzbyBpZiB3ZSBjb3VsZG4ndCAtIHNpbXBseSByZWplY3QgdGhlIGNvbmZp
Z3VyYXRpb24gZm9yIG9idmlvdXMKKwkgKiByZWFzb25zLgorCSAqLworCWlmIChhbGxvd2VkX3Bv
aW50cyA9PSAwKSB7CisJCURSTV9ERUJVR19LTVMoIk5vIFFHViBwb2ludHMgcHJvdmlkZSBzdWZm
aWNpZW50IG1lbW9yeSIKKwkJCSAgICAgICIgYmFuZHdpZHRoIGZvciBkaXNwbGF5IGNvbmZpZ3Vy
YXRpb24uXG4iKTsKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCisJLyoKKwkgKiBMZWF2ZSBvbmx5
IHNpbmdsZSBwb2ludCB3aXRoIGhpZ2hlc3QgYmFuZHdpZHRoLCBpZgorCSAqIHdlIGNhbid0IGVu
YWJsZSBTQUdWIGR1ZSB0byB0aGUgaW5jcmVhc2VkIG1lbW9yeSBsYXRlbmN5IGl0IG1heQorCSAq
IGNhdXNlLgorCSAqLworCWlmICghaW50ZWxfY2FuX2VuYWJsZV9zYWd2X2Zvcl9zdGF0ZShzdGF0
ZSkpIHsKKwkJYWxsb3dlZF9wb2ludHMgPSAxIDw8IG1heF9id19wb2ludDsKKwkJRFJNX0RFQlVH
X0tNUygiTm8gU0FHViwgdXNpbmcgc2luZ2xlIFFHViBwb2ludCAlZFxuIiwKKwkJCSAgICAgIG1h
eF9id19wb2ludCk7CisJfQorCS8qCisJICogV2Ugc3RvcmUgdGhlIG9uZXMgd2hpY2ggbmVlZCB0
byBiZSBtYXNrZWQgYXMgdGhhdCBpcyB3aGF0IFBDb2RlCisJICogYWN0dWFsbHkgYWNjZXB0cyBh
cyBhIHBhcmFtZXRlci4KKwkgKi8KKwluZXdfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzayA9ICh+
YWxsb3dlZF9wb2ludHMpICYgbWFzazsKKworCURSTV9ERUJVR19LTVMoIk5ldyBzdGF0ZSAlcCBx
Z3YgbWFzayAleFxuIiwKKwkJICAgICAgc3RhdGUsIG5ld19id19zdGF0ZS0+cWd2X3BvaW50c19t
YXNrKTsKKworCW9sZF9id19zdGF0ZSA9IGludGVsX2J3X2dldF9vbGRfc3RhdGUoc3RhdGUpOwor
CWlmIChJU19FUlIob2xkX2J3X3N0YXRlKSkgeworCQlEUk1fREVCVUdfS01TKCJDb3VsZCBub3Qg
Z2V0IG9sZCBidyBzdGF0ZSFcbiIpOworCQlyZXR1cm4gUFRSX0VSUihvbGRfYndfc3RhdGUpOwor
CX0KKworCS8qCisJICogSWYgdGhlIGFjdHVhbCBtYXNrIGhhZCBjaGFuZ2VkIHdlIG5lZWQgdG8g
bWFrZSBzdXJlIHRoYXQKKwkgKiB0aGUgY29tbWl0cyBhcmUgc2VyaWFsaXplZChpbiBjYXNlIHRo
aXMgaXMgYSBub21vZGVzZXQsIG5vbmJsb2NraW5nKQorCSAqLworCWlmIChuZXdfYndfc3RhdGUt
PnFndl9wb2ludHNfbWFzayAhPSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzaykgeworCisJ
CXN0YXRlLT5id19zdGF0ZV9jaGFuZ2VkID0gdHJ1ZTsKKworCQlyZXQgPSBpbnRlbF9hdG9taWNf
c2VyaWFsaXplX2dsb2JhbF9zdGF0ZSgmbmV3X2J3X3N0YXRlLT5iYXNlKTsKKwkJaWYgKHJldCkg
eworCQkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IHNlcmlhbGl6ZSBnbG9iYWwgc3RhdGVcbiIp
OworCQkJcmV0dXJuIHJldDsKKwkJfQorCX0KKwogCXJldHVybiAwOwogfQogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmggYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmgKaW5kZXggYzMyYjUyODVjMTJmLi5iMzUyMjM4OWEx
ODEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2J3LmgKQEAgLTM2LDYgKzM2
LDEzIEBAIHN0cnVjdCBpbnRlbF9id19zdGF0ZSB7CiAJICovCiAJYm9vbCBjYW5fc2FndjsKIAor
CS8qCisJICogQ3VycmVudCBRR1YgcG9pbnRzIG1hc2ssIHdoaWNoIHJlc3RyaWN0cworCSAqIHNv
bWUgcGFydGljdWxhciBTQUdWIHN0YXRlcywgbm90IHRvIGNvbmZ1c2UKKwkgKiB3aXRoIHBpcGVf
c2Fndl9tYXNrLgorCSAqLworCXU4IHFndl9wb2ludHNfbWFzazsKKwogCXVuc2lnbmVkIGludCBk
YXRhX3JhdGVbSTkxNV9NQVhfUElQRVNdOwogCXU4IG51bV9hY3RpdmVfcGxhbmVzW0k5MTVfTUFY
X1BJUEVTXTsKIH07CkBAIC01Niw1ICs2Myw3IEBAIGludCBpbnRlbF9id19pbml0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CiBpbnQgaW50ZWxfYndfYXRvbWljX2NoZWNrKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKTsKIHZvaWQgaW50ZWxfYndfY3J0Y191cGRh
dGUoc3RydWN0IGludGVsX2J3X3N0YXRlICpid19zdGF0ZSwKIAkJCSAgY29uc3Qgc3RydWN0IGlu
dGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUpOworaW50IGljbF9wY29kZV9yZXN0cmljdF9xZ3Zf
cG9pbnRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKKwkJCQkgIHUzMiBwb2lu
dHNfbWFzayk7CiAKICNlbmRpZiAvKiBfX0lOVEVMX0JXX0hfXyAqLwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBiMzU1YmUzMmVkMmYuLmE3NjJj
OTdjZDZjMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
aXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMKQEAgLTE1NDczLDYgKzE1NDczLDEwNSBAQCBzdGF0aWMgdm9pZCBpbnRlbF9hdG9taWNfY2xl
YW51cF93b3JrKHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykKIAlpbnRlbF9hdG9taWNfaGVscGVy
X2ZyZWVfc3RhdGUoaTkxNSk7CiB9CiAKK3N0YXRpYyB2b2lkIGludGVsX3Fndl9wb2ludHNfbWFz
ayhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2Rldmlj
ZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2OworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlpbnQgcmV0OworCXN0cnVjdCBpbnRlbF9id19zdGF0ZSAq
bmV3X2J3X3N0YXRlID0gTlVMTDsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm9sZF9id19zdGF0
ZSA9IE5VTEw7CisJdTMyIG5ld19tYXNrID0gMDsKKwl1bnNpZ25lZCBpbnQgbnVtX3Fndl9wb2lu
dHMgPSBkZXZfcHJpdi0+bWF4X2J3WzBdLm51bV9xZ3ZfcG9pbnRzOworCXVuc2lnbmVkIGludCBt
YXNrID0gKDEgPDwgbnVtX3Fndl9wb2ludHMpIC0gMTsKKworCW5ld19id19zdGF0ZSA9IGludGVs
X2J3X2dldF9zdGF0ZShzdGF0ZSk7CisJaWYgKElTX0VSUihuZXdfYndfc3RhdGUpKSB7CisJCVdB
Uk4oMSwgIkNvdWxkIG5vdCBnZXQgbmV3IGJ3X3N0YXRlIVxuIik7CisJCXJldHVybjsKKwl9CisK
KwlvbGRfYndfc3RhdGUgPSBpbnRlbF9id19nZXRfb2xkX3N0YXRlKHN0YXRlKTsKKwlpZiAoSVNf
RVJSKG9sZF9id19zdGF0ZSkpIHsKKwkJV0FSTigxLCAiQ291bGQgbm90IGdldCBvbGQgYndfc3Rh
dGUhXG4iKTsKKwkJcmV0dXJuOworCX0KKworCW5ld19tYXNrID0gb2xkX2J3X3N0YXRlLT5xZ3Zf
cG9pbnRzX21hc2sgfCBuZXdfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzazsKKworCS8qCisJICog
SWYgbmV3IG1hc2sgaXMgemVybyAtIG1lYW5zIHRoZXJlIGlzIG5vdGhpbmcgdG8gbWFzaywKKwkg
KiB3ZSBjYW4gb25seSB1bm1hc2ssIHdoaWNoIHNob3VsZCBiZSBkb25lIGluIHVubWFzay4KKwkg
Ki8KKwlpZiAoIW5ld19tYXNrKQorCQlyZXR1cm47CisKKwlXQVJOX09OKG5ld19tYXNrID09IG1h
c2spOworCisJLyoKKwkgKiBKdXN0IHJldHVybiBpZiB3ZSBjYW4ndCBjb250cm9sIFNBR1Ygb3Ig
ZG9uJ3QgaGF2ZSBpdC4KKwkgKi8KKwlpZiAoIWludGVsX2hhc19zYWd2KGRldl9wcml2KSkKKwkJ
cmV0dXJuOworCisJLyoKKwkgKiBSZXN0cmljdCByZXF1aXJlZCBxZ3YgcG9pbnRzIGJlZm9yZSB1
cGRhdGluZyB0aGUgY29uZmlndXJhdGlvbi4KKwkgKiBBY2NvcmRpbmcgdG8gQlNwZWMgd2UgY2Fu
J3QgbWFzayBhbmQgdW5tYXNrIHFndiBwb2ludHMgYXQgdGhlIHNhbWUKKwkgKiB0aW1lLiBBbHNv
IG1hc2tpbmcgc2hvdWxkIGJlIGRvbmUgYmVmb3JlIHVwZGF0aW5nIHRoZSBjb25maWd1cmF0aW9u
CisJICogYW5kIHVubWFza2luZyBhZnRlcndhcmRzLgorCSAqLworCXJldCA9IGljbF9wY29kZV9y
ZXN0cmljdF9xZ3ZfcG9pbnRzKGRldl9wcml2LCBuZXdfbWFzayk7CisJaWYgKHJldCA8IDApCisJ
CURSTV9ERUJVR19LTVMoIkNvdWxkIG5vdCBtYXNrIHJlcXVpcmVkIHFndiBwb2ludHMoJWQpXG4i
LAorCQkJICAgICAgcmV0KTsKK30KKworc3RhdGljIHZvaWQgaW50ZWxfcWd2X3BvaW50c191bm1h
c2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9kZXZp
Y2UgKmRldiA9IHN0YXRlLT5iYXNlLmRldjsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGRldik7CisJaW50IHJldDsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUg
Km5ld19id19zdGF0ZSA9IE5VTEw7CisJc3RydWN0IGludGVsX2J3X3N0YXRlICpvbGRfYndfc3Rh
dGUgPSBOVUxMOworCXUzMiBuZXdfbWFzayA9IDA7CisKKwluZXdfYndfc3RhdGUgPSBpbnRlbF9i
d19nZXRfc3RhdGUoc3RhdGUpOworCWlmIChJU19FUlIobmV3X2J3X3N0YXRlKSkgeworCQlXQVJO
KDEsICJDb3VsZCBub3QgZ2V0IG5ldyBid19zdGF0ZSFcbiIpOworCQlyZXR1cm47CisJfQorCisJ
b2xkX2J3X3N0YXRlID0gaW50ZWxfYndfZ2V0X29sZF9zdGF0ZShzdGF0ZSk7CisJaWYgKElTX0VS
UihvbGRfYndfc3RhdGUpKSB7CisJCVdBUk4oMSwgIkNvdWxkIG5vdCBnZXQgbmV3IGJ3X3N0YXRl
IVxuIik7CisJCXJldHVybjsKKwl9CisKKwluZXdfbWFzayA9IG5ld19id19zdGF0ZS0+cWd2X3Bv
aW50c19tYXNrOworCisJLyoKKwkgKiBKdXN0IHJldHVybiBpZiB3ZSBjYW4ndCBjb250cm9sIFNB
R1Ygb3IgZG9uJ3QgaGF2ZSBpdC4KKwkgKi8KKwlpZiAoIWludGVsX2hhc19zYWd2KGRldl9wcml2
KSkKKwkJcmV0dXJuOworCisJLyoKKwkgKiBOb3RoaW5nIHRvIHVubWFzaworCSAqLworCWlmIChu
ZXdfbWFzayA9PSBvbGRfYndfc3RhdGUtPnFndl9wb2ludHNfbWFzaykKKwkJcmV0dXJuOworCisJ
LyoKKwkgKiBBbGxvdyByZXF1aXJlZCBxZ3YgcG9pbnRzIGFmdGVyIHVwZGF0aW5nIHRoZSBjb25m
aWd1cmF0aW9uLgorCSAqIEFjY29yZGluZyB0byBCU3BlYyB3ZSBjYW4ndCBtYXNrIGFuZCB1bm1h
c2sgcWd2IHBvaW50cyBhdCB0aGUgc2FtZQorCSAqIHRpbWUuIEFsc28gbWFza2luZyBzaG91bGQg
YmUgZG9uZSBiZWZvcmUgdXBkYXRpbmcgdGhlIGNvbmZpZ3VyYXRpb24KKwkgKiBhbmQgdW5tYXNr
aW5nIGFmdGVyd2FyZHMuCisJICovCisJcmV0ID0gaWNsX3Bjb2RlX3Jlc3RyaWN0X3Fndl9wb2lu
dHMoZGV2X3ByaXYsIG5ld19tYXNrKTsKKwlpZiAocmV0IDwgMCkKKwkJRFJNX0RFQlVHX0tNUygi
Q291bGQgbm90IHVubWFzayByZXF1aXJlZCBxZ3YgcG9pbnRzKCVkKVxuIiwKKwkJCSAgICAgIHJl
dCk7Cit9CisKIHN0YXRpYyB2b2lkIGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50
ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3Rh
dGUtPmJhc2UuZGV2OwpAQCAtMTU1MDYsNiArMTU2MDUsMTUgQEAgc3RhdGljIHZvaWQgaW50ZWxf
YXRvbWljX2NvbW1pdF90YWlsKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCWZv
cl9lYWNoX25ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBuZXdfY3J0Y19zdGF0
ZSwgaSkKIAkJY3J0Yy0+Y29uZmlnID0gbmV3X2NydGNfc3RhdGU7CiAKKwkvKgorCSAqIE5vdyB3
ZSBuZWVkIHRvIGNoZWNrIGlmIFNBR1YgbmVlZHMgdG8gYmUgZGlzYWJsZWQoaS5lIFFHViBwb2lu
dHMKKwkgKiBtb2RpZmllZCBldmVuLCB3aGVuIG5vIG1vZGVzZXQgaXMgZG9uZShmb3IgZXhhbXBs
ZSBwbGFuZSB1cGRhdGVzCisJICogY2FuIG5vdyB0cmlnZ2VyIHRoYXQpLgorCSAqLworCWlmICgo
SU5URUxfR0VOKGRldl9wcml2KSA+PSAxMSkpCisJCWlmIChzdGF0ZS0+Yndfc3RhdGVfY2hhbmdl
ZCkKKwkJCWludGVsX3Fndl9wb2ludHNfbWFzayhzdGF0ZSk7CisKIAlpZiAoc3RhdGUtPm1vZGVz
ZXQpIHsKIAkJZHJtX2F0b21pY19oZWxwZXJfdXBkYXRlX2xlZ2FjeV9tb2Rlc2V0X3N0YXRlKGRl
diwgJnN0YXRlLT5iYXNlKTsKIApAQCAtMTU2MjAsMTAgKzE1NzI4LDEyIEBAIHN0YXRpYyB2b2lk
IGludGVsX2F0b21pY19jb21taXRfdGFpbChzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0
ZSkKIAlpZiAoc3RhdGUtPm1vZGVzZXQpCiAJCWludGVsX3ZlcmlmeV9wbGFuZXMoc3RhdGUpOwog
Ci0JaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkgewotCQlpZiAoc3RhdGUtPmJ3X3N0YXRl
X2NoYW5nZWQpIHsKKwlpZiAoc3RhdGUtPmJ3X3N0YXRlX2NoYW5nZWQpIHsKKwkJaWYgKElOVEVM
X0dFTihkZXZfcHJpdikgPCAxMSkgewogCQkJaWYgKGludGVsX2Nhbl9lbmFibGVfc2FndihkZXZf
cHJpdikpCiAJCQkJaW50ZWxfZW5hYmxlX3NhZ3YoZGV2X3ByaXYpOworCQl9IGVsc2UgeworCQkJ
aW50ZWxfcWd2X3BvaW50c191bm1hc2soc3RhdGUpOwogCQl9CiAJfQogCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kcnYuaAppbmRleCA5OTI4ZDAwZWEwYjEuLjExNDNmNjdiYmEwYSAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCkBAIC04NDEsNiArODQxLDkgQEAgZW51bSBpbnRlbF9waXBlX2NyY19zb3VyY2Ug
ewogCUlOVEVMX1BJUEVfQ1JDX1NPVVJDRV9NQVgsCiB9OwogCisvKiBCU3BlYyBwcmVjaXNlbHkg
ZGVmaW5lcyB0aGlzICovCisjZGVmaW5lIE5VTV9TQUdWX1BPSU5UUyA4CisKICNkZWZpbmUgSU5U
RUxfUElQRV9DUkNfRU5UUklFU19OUgkxMjgKIHN0cnVjdCBpbnRlbF9waXBlX2NyYyB7CiAJc3Bp
bmxvY2tfdCBsb2NrOwotLSAKMi4yNC4xLjQ4NS5nYWQwNWEzZDhlNQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJ
bnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Au
b3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

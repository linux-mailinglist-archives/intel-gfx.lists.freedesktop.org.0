Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 16BF9E0A7C
	for <lists+intel-gfx@lfdr.de>; Tue, 22 Oct 2019 19:21:33 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 4B92C6E8A1;
	Tue, 22 Oct 2019 17:21:31 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 467206E8A1
 for <intel-gfx@lists.freedesktop.org>; Tue, 22 Oct 2019 17:21:28 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 22 Oct 2019 10:21:28 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.68,217,1569308400"; d="scan'208";a="227799665"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by fmsmga002.fm.intel.com with ESMTP; 22 Oct 2019 10:21:26 -0700
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 22 Oct 2019 20:18:56 +0300
Message-Id: <20191022171857.19327-2-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20191022171857.19327-1-stanislav.lisovskiy@intel.com>
References: <20191022171857.19327-1-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v6 1/2] drm/i915: Refactor intel_can_enable_sagv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: martin.peres@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q3VycmVudGx5IGludGVsX2Nhbl9lbmFibGVfc2FndiBmdW5jdGlvbiBjb250YWlucwphIG1peCBv
ZiB3b3JrYXJvdW5kcyBmb3IgZGlmZmVyZW50IHBsYXRmb3Jtcwpzb21lIG9mIHRoZW0gYXJlIG5v
dCB2YWxpZCBmb3IgZ2VucyA+PSAxMSBhbHJlYWR5LApzbyBsZXRzIHNwbGl0IGl0IGludG8gc2Vw
YXJhdGUgZnVuY3Rpb25zLgoKdjI6CiAgICAtIFJld29yayB3YXRlcm1hcmsgY2FsY3VsYXRpb24g
YWxnb3JpdGhtIHRvCiAgICAgIGF0dGVtcHQgdG8gY2FsY3VsYXRlIExldmVsIDAgd2F0ZXJtYXJr
CiAgICAgIHdpdGggYWRkZWQgc2FndiBibG9jayB0aW1lIGxhdGVuY3kgYW5kCiAgICAgIGNoZWNr
IGlmIGl0IGZpdHMgaW4gREJ1ZiBpbiBvcmRlciB0bwogICAgICBkZXRlcm1pbmUgaWYgU0FHViBj
YW4gYmUgZW5hYmxlZCBhbHJlYWR5CiAgICAgIGF0IHRoaXMgc3RhZ2UsIGp1c3QgYXMgQlNwZWMg
NDkzMjUgc3RhdGVzLgogICAgICBpZiB0aGF0IGZhaWxzIHJvbGxiYWNrIHRvIHVzdWFsIExldmVs
IDAKICAgICAgbGF0ZW5jeSBhbmQgZGlzYWJsZSBTQUdWLgogICAgLSBSZW1vdmUgdW5uZWVkZWQg
dGFicyhKYW1lcyBBdXNtdXMpCgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zza2l5IDxz
dGFuaXNsYXYubGlzb3Zza2l5QGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUu
c3lyamFsYUBpbnRlbC5jb20+CkNjOiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0BpbnRlbC5j
b20+Ci0tLQogLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwg
ICA4ICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMgICAgICAgICAgICAgICB8IDIy
OSArKysrKysrKysrKysrKysrKy0KIDIgZmlsZXMgY2hhbmdlZCwgMjI5IGluc2VydGlvbnMoKyks
IDggZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRleCA0MDM5MGQ4NTU4MTUuLjg5MWUwNmFmMjI4ZCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVz
LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVz
LmgKQEAgLTQ5MCw2ICs0OTAsMTMgQEAgc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSB7CiAJICov
CiAJdTggYWN0aXZlX3BpcGVfY2hhbmdlczsKIAorCS8qCisJICogRm9yIEdlbjEyIG9ubHkgYWZ0
ZXIgY2FsY3VsYXRpbmcgd2F0ZXJtYXJrcyB3aXRoCisJICogYWRkaXRpb25hbCBsYXRlbmN5LCB3
ZSBjYW4gZGV0ZXJtaW5lIGlmIFNBR1YgY2FuIGJlIGVuYWJsZWQKKwkgKiBvciBub3QgZm9yIHRo
YXQgcGFydGljdWxhciBjb25maWd1cmF0aW9uLgorCSAqLworCWJvb2wgZ2VuMTJfY2FuX3NhZ3Y7
CisKIAl1OCBhY3RpdmVfcGlwZXM7CiAJLyogbWluaW11bSBhY2NlcHRhYmxlIGNkY2xrIGZvciBl
YWNoIHBpcGUgKi8KIAlpbnQgbWluX2NkY2xrW0k5MTVfTUFYX1BJUEVTXTsKQEAgLTY0Miw2ICs2
NDksNyBAQCBzdHJ1Y3Qgc2tsX3BsYW5lX3dtIHsKIAlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHdtWzhd
OwogCXN0cnVjdCBza2xfd21fbGV2ZWwgdXZfd21bOF07CiAJc3RydWN0IHNrbF93bV9sZXZlbCB0
cmFuc193bTsKKwlzdHJ1Y3Qgc2tsX3dtX2xldmVsIHNhZ3Zfd21fbDA7CiAJYm9vbCBpc19wbGFu
YXI7CiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwppbmRleCA2N2QxNzE0NTZmNTkuLjdhMDhm
YTk1MDY3NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYworKysg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5jCkBAIC0zNzUwLDcgKzM3NTAsNyBAQCBp
bnRlbF9kaXNhYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCXJl
dHVybiAwOwogfQogCi1ib29sIGludGVsX2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSkKK2Jvb2wgc2tsX2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxf
YXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUt
PmJhc2UuZGV2OwogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUo
ZGV2KTsKQEAgLTM4MTYsNiArMzgxNiw3NSBAQCBib29sIGludGVsX2Nhbl9lbmFibGVfc2Fndihz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAlyZXR1cm4gdHJ1ZTsKIH0KIAorYm9v
bCBpY2xfY2FuX2VuYWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQor
eworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7CisJc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOworCXN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjOworCXN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZTsKKwlp
bnQgbGV2ZWwsIGxhdGVuY3k7CisJaW50IGk7CisJaW50IHBsYW5lX2lkOworCisJaWYgKCFpbnRl
bF9oYXNfc2FndihkZXZfcHJpdikpCisJCXJldHVybiBmYWxzZTsKKworCS8qCisJICogSWYgdGhl
cmUgYXJlIG5vIGFjdGl2ZSBDUlRDcywgbm8gYWRkaXRpb25hbCBjaGVja3MgbmVlZCBiZSBwZXJm
b3JtZWQKKwkgKi8KKwlpZiAoaHdlaWdodDgoc3RhdGUtPmFjdGl2ZV9waXBlcykgPT0gMCkKKwkJ
cmV0dXJuIHRydWU7CisKKwlmb3JfZWFjaF9uZXdfaW50ZWxfY3J0Y19pbl9zdGF0ZShzdGF0ZSwg
Y3J0YywKKwkJCQkJICAgICBuZXdfY3J0Y19zdGF0ZSwgaSkgeworCisJCWlmIChjcnRjLT5iYXNl
LnN0YXRlLT5hZGp1c3RlZF9tb2RlLmZsYWdzICYgRFJNX01PREVfRkxBR19JTlRFUkxBQ0UpCisJ
CQlyZXR1cm4gZmFsc2U7CisKKwkJaWYgKCFuZXdfY3J0Y19zdGF0ZS0+YmFzZS5lbmFibGUpCisJ
CQljb250aW51ZTsKKworCQlmb3JfZWFjaF9wbGFuZV9pZF9vbl9jcnRjKGNydGMsIHBsYW5lX2lk
KSB7CisJCQlzdHJ1Y3Qgc2tsX3BsYW5lX3dtICp3bSA9CisJCQkJJm5ld19jcnRjX3N0YXRlLT53
bS5za2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOworCisJCQkvKiBTa2lwIHRoaXMgcGxhbmUg
aWYgaXQncyBub3QgZW5hYmxlZCAqLworCQkJaWYgKCF3bS0+d21bMF0ucGxhbmVfZW4pCisJCQkJ
Y29udGludWU7CisKKwkJCS8qIEZpbmQgdGhlIGhpZ2hlc3QgZW5hYmxlZCB3bSBsZXZlbCBmb3Ig
dGhpcyBwbGFuZSAqLworCQkJZm9yIChsZXZlbCA9IGlsa193bV9tYXhfbGV2ZWwoZGV2X3ByaXYp
OworCQkJICAgICAhd20tPndtW2xldmVsXS5wbGFuZV9lbjsgLS1sZXZlbCkKKwkJCSAgICAgeyB9
CisKKwkJCWxhdGVuY3kgPSBkZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbbGV2ZWxdOworCisJCQkv
KgorCQkJICogSWYgYW55IG9mIHRoZSBwbGFuZXMgb24gdGhpcyBwaXBlIGRvbid0IGVuYWJsZSB3
bSBsZXZlbHMgdGhhdAorCQkJICogaW5jdXIgbWVtb3J5IGxhdGVuY2llcyBoaWdoZXIgdGhhbiBz
YWd2X2Jsb2NrX3RpbWVfdXMgd2UKKwkJCSAqIGNhbid0IGVuYWJsZSBTQUdWLgorCQkJICovCisJ
CQlpZiAobGF0ZW5jeSA8IGRldl9wcml2LT5zYWd2X2Jsb2NrX3RpbWVfdXMpCisJCQkJcmV0dXJu
IGZhbHNlOworCQl9CisJfQorCisJcmV0dXJuIHRydWU7Cit9CisKK2Jvb2wgaW50ZWxfY2FuX2Vu
YWJsZV9zYWd2KHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQoreworCXN0cnVjdCBk
cm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7CisJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOworCisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
Pj0gMTIpCisJCXJldHVybiBzdGF0ZS0+Z2VuMTJfY2FuX3NhZ3Y7CisJZWxzZSBpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA9PSAxMSkKKwkJcmV0dXJuIGljbF9jYW5fZW5hYmxlX3NhZ3Yoc3RhdGUp
OworCisJcmV0dXJuIHNrbF9jYW5fZW5hYmxlX3NhZ3Yoc3RhdGUpOworfQorCiBzdGF0aWMgdTE2
IGludGVsX2dldF9kZGJfc2l6ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJ
CQkgICAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCSAg
ICAgIGNvbnN0IHU2NCB0b3RhbF9kYXRhX3JhdGUsCkBAIC00MDI4LDYgKzQwOTcsNyBAQCBzdGF0
aWMgaW50IHNrbF9jb21wdXRlX3dtX3BhcmFtcyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgaW50IGNvbG9yX3BsYW5lKTsKIHN0YXRpYyB2b2lkIHNrbF9j
b21wdXRlX3BsYW5lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRl
LAogCQkJCSBpbnQgbGV2ZWwsCisJCQkJIHUzMiBsYXRlbmN5LAogCQkJCSBjb25zdCBzdHJ1Y3Qg
c2tsX3dtX3BhcmFtcyAqd3AsCiAJCQkJIGNvbnN0IHN0cnVjdCBza2xfd21fbGV2ZWwgKnJlc3Vs
dF9wcmV2LAogCQkJCSBzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1bHQgLyogb3V0ICovKTsKQEAg
LTQwNTAsNyArNDEyMCw4IEBAIHNrbF9jdXJzb3JfYWxsb2NhdGlvbihjb25zdCBzdHJ1Y3QgaW50
ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlXQVJOX09OKHJldCk7CiAKIAlmb3IgKGxldmVs
ID0gMDsgbGV2ZWwgPD0gbWF4X2xldmVsOyBsZXZlbCsrKSB7Ci0JCXNrbF9jb21wdXRlX3BsYW5l
X3dtKGNydGNfc3RhdGUsIGxldmVsLCAmd3AsICZ3bSwgJndtKTsKKwkJdTMyIGxhdGVuY3kgPSBk
ZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbbGV2ZWxdOworCQlza2xfY29tcHV0ZV9wbGFuZV93bShj
cnRjX3N0YXRlLCBsZXZlbCwgbGF0ZW5jeSwgJndwLCAmd20sICZ3bSk7CiAJCWlmICh3bS5taW5f
ZGRiX2FsbG9jID09IFUxNl9NQVgpCiAJCQlicmVhazsKIApAQCAtNDUwNSw2ICs0NTc2LDczIEBA
IGljbF9nZXRfdG90YWxfcmVsYXRpdmVfZGF0YV9yYXRlKHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAogCXJldHVybiB0b3RhbF9kYXRhX3JhdGU7CiB9CiAKK3N0YXRpYyBpbnQK
K3RnbF9jaGVja19waXBlX2ZpdHNfc2Fndl93bShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0
Y19zdGF0ZSwKKwkJICAgICAgc3RydWN0IHNrbF9kZGJfYWxsb2NhdGlvbiAqZGRiIC8qIG91dCAq
LykKK3sKKwlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBjcnRjX3N0YXRlLT5iYXNlLmNydGM7CisJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwor
CXN0cnVjdCBpbnRlbF9jcnRjICppbnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsKKwlz
dHJ1Y3Qgc2tsX2RkYl9lbnRyeSAqYWxsb2MgPSAmY3J0Y19zdGF0ZS0+d20uc2tsLmRkYjsKKwl1
MTYgYWxsb2Nfc2l6ZTsKKwl1MTYgdG90YWxbSTkxNV9NQVhfUExBTkVTXSA9IHt9OworCXU2NCB0
b3RhbF9kYXRhX3JhdGU7CisJZW51bSBwbGFuZV9pZCBwbGFuZV9pZDsKKwlpbnQgbnVtX2FjdGl2
ZTsKKwl1NjQgcGxhbmVfZGF0YV9yYXRlW0k5MTVfTUFYX1BMQU5FU10gPSB7fTsKKwl1NjQgdXZf
cGxhbmVfZGF0YV9yYXRlW0k5MTVfTUFYX1BMQU5FU10gPSB7fTsKKwl1MzIgYmxvY2tzOworCisJ
aWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTEpCisJCXRvdGFsX2RhdGFfcmF0ZSA9CisJCQlp
Y2xfZ2V0X3RvdGFsX3JlbGF0aXZlX2RhdGFfcmF0ZShjcnRjX3N0YXRlLAorCQkJCQkJCSBwbGFu
ZV9kYXRhX3JhdGUpOworCWVsc2UKKwkJdG90YWxfZGF0YV9yYXRlID0KKwkJCXNrbF9nZXRfdG90
YWxfcmVsYXRpdmVfZGF0YV9yYXRlKGNydGNfc3RhdGUsCisJCQkJCQkJIHBsYW5lX2RhdGFfcmF0
ZSwKKwkJCQkJCQkgdXZfcGxhbmVfZGF0YV9yYXRlKTsKKworCisJc2tsX2RkYl9nZXRfcGlwZV9h
bGxvY2F0aW9uX2xpbWl0cyhkZXZfcHJpdiwgY3J0Y19zdGF0ZSwgdG90YWxfZGF0YV9yYXRlLAor
CQkJCQkgICBkZGIsIGFsbG9jLCAmbnVtX2FjdGl2ZSk7CisJYWxsb2Nfc2l6ZSA9IHNrbF9kZGJf
ZW50cnlfc2l6ZShhbGxvYyk7CisJaWYgKGFsbG9jX3NpemUgPT0gMCkKKwkJcmV0dXJuIC1FTk9T
UEM7CisKKwkvKiBBbGxvY2F0ZSBmaXhlZCBudW1iZXIgb2YgYmxvY2tzIGZvciBjdXJzb3IuICov
CisJdG90YWxbUExBTkVfQ1VSU09SXSA9IHNrbF9jdXJzb3JfYWxsb2NhdGlvbihjcnRjX3N0YXRl
LCBudW1fYWN0aXZlKTsKKwlhbGxvY19zaXplIC09IHRvdGFsW1BMQU5FX0NVUlNPUl07CisJY3J0
Y19zdGF0ZS0+d20uc2tsLnBsYW5lX2RkYl95W1BMQU5FX0NVUlNPUl0uc3RhcnQgPQorCQlhbGxv
Yy0+ZW5kIC0gdG90YWxbUExBTkVfQ1VSU09SXTsKKwljcnRjX3N0YXRlLT53bS5za2wucGxhbmVf
ZGRiX3lbUExBTkVfQ1VSU09SXS5lbmQgPSBhbGxvYy0+ZW5kOworCisJLyoKKwkgKiBEbyBjaGVj
ayBpZiB3ZSBjYW4gZml0IEwwICsgc2Fndl9ibG9ja190aW1lIGFuZAorCSAqIGRpc2FibGUgU0FH
ViBpZiB3ZSBjYW4ndC4KKwkgKi8KKwlibG9ja3MgPSAwOworCWZvcl9lYWNoX3BsYW5lX2lkX29u
X2NydGMoaW50ZWxfY3J0YywgcGxhbmVfaWQpIHsKKwkJY29uc3Qgc3RydWN0IHNrbF9wbGFuZV93
bSAqd20gPQorCQkJJmNydGNfc3RhdGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07
CisKKwkJaWYgKHBsYW5lX2lkID09IFBMQU5FX0NVUlNPUikgeworCQkJaWYgKFdBUk5fT04od20t
PnNhZ3Zfd21fbDAubWluX2RkYl9hbGxvYyA+CisJCQkJICAgIHRvdGFsW1BMQU5FX0NVUlNPUl0p
KSB7CisJCQkJYmxvY2tzID0gVTMyX01BWDsKKwkJCQlicmVhazsKKwkJCX0KKwkJCWNvbnRpbnVl
OworCQl9CisKKwkJYmxvY2tzICs9IHdtLT5zYWd2X3dtX2wwLm1pbl9kZGJfYWxsb2M7CisJCWlm
IChibG9ja3MgPiBhbGxvY19zaXplKSB7CisJCQlyZXR1cm4gLUVOT1NQQzsKKwkJfQorCX0KKwly
ZXR1cm4gMDsKK30KKwogc3RhdGljIGludAogc2tsX2FsbG9jYXRlX3BpcGVfZGRiKHN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAogCQkgICAgICBzdHJ1Y3Qgc2tsX2RkYl9hbGxv
Y2F0aW9uICpkZGIgLyogb3V0ICovKQpAQCAtNDkzNCwxMiArNTA3MiwxMiBAQCBzdGF0aWMgYm9v
bCBza2xfd21faGFzX2xpbmVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgaW50
IGxldmVsKQogCiBzdGF0aWMgdm9pZCBza2xfY29tcHV0ZV9wbGFuZV93bShjb25zdCBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJCQkgaW50IGxldmVsLAorCQkJCSB1MzIg
bGF0ZW5jeSwKIAkJCQkgY29uc3Qgc3RydWN0IHNrbF93bV9wYXJhbXMgKndwLAogCQkJCSBjb25z
dCBzdHJ1Y3Qgc2tsX3dtX2xldmVsICpyZXN1bHRfcHJldiwKIAkJCQkgc3RydWN0IHNrbF93bV9s
ZXZlbCAqcmVzdWx0IC8qIG91dCAqLykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNydGNfc3RhdGUtPmJhc2UuY3J0Yy0+ZGV2KTsKLQl1MzIgbGF0ZW5j
eSA9IGRldl9wcml2LT53bS5za2xfbGF0ZW5jeVtsZXZlbF07CiAJdWludF9maXhlZF8xNl8xNl90
IG1ldGhvZDEsIG1ldGhvZDI7CiAJdWludF9maXhlZF8xNl8xNl90IHNlbGVjdGVkX3Jlc3VsdDsK
IAl1MzIgcmVzX2Jsb2NrcywgcmVzX2xpbmVzLCBtaW5fZGRiX2FsbG9jID0gMDsKQEAgLTUwNjAs
MTkgKzUxOTgsNDUgQEAgc3RhdGljIHZvaWQgc2tsX2NvbXB1dGVfcGxhbmVfd20oY29uc3Qgc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCiBzdGF0aWMgdm9pZAogc2tsX2NvbXB1
dGVfd21fbGV2ZWxzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0YXRlLAog
CQkgICAgICBjb25zdCBzdHJ1Y3Qgc2tsX3dtX3BhcmFtcyAqd21fcGFyYW1zLAotCQkgICAgICBz
dHJ1Y3Qgc2tsX3dtX2xldmVsICpsZXZlbHMpCisJCSAgICAgIHN0cnVjdCBza2xfcGxhbmVfd20g
KnBsYW5lX3dtLAorCQkgICAgICBib29sIHl1dikKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGNfc3RhdGUtPmJhc2UuY3J0Yy0+ZGV2KTsKIAlpbnQg
bGV2ZWwsIG1heF9sZXZlbCA9IGlsa193bV9tYXhfbGV2ZWwoZGV2X3ByaXYpOworCS8qCisJICog
Q2hlY2sgd2hpY2gga2luZCBvZiBwbGFuZSBpcyBpdCBhbmQgYmFzZWQgb24gdGhhdCBjYWxjdWxh
dGUKKwkgKiBjb3JyZXNwb25kZW50IFdNIGxldmVscy4KKwkgKi8KKwlzdHJ1Y3Qgc2tsX3dtX2xl
dmVsICpsZXZlbHMgPSB5dXYgPyBwbGFuZV93bS0+dXZfd20gOiBwbGFuZV93bS0+d207CiAJc3Ry
dWN0IHNrbF93bV9sZXZlbCAqcmVzdWx0X3ByZXYgPSAmbGV2ZWxzWzBdOwogCiAJZm9yIChsZXZl
bCA9IDA7IGxldmVsIDw9IG1heF9sZXZlbDsgbGV2ZWwrKykgewogCQlzdHJ1Y3Qgc2tsX3dtX2xl
dmVsICpyZXN1bHQgPSAmbGV2ZWxzW2xldmVsXTsKKwkJdTMyIGxhdGVuY3kgPSBkZXZfcHJpdi0+
d20uc2tsX2xhdGVuY3lbbGV2ZWxdOwogCi0JCXNrbF9jb21wdXRlX3BsYW5lX3dtKGNydGNfc3Rh
dGUsIGxldmVsLCB3bV9wYXJhbXMsCi0JCQkJICAgICByZXN1bHRfcHJldiwgcmVzdWx0KTsKKwkJ
c2tsX2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgbGV2ZWwsIGxhdGVuY3ksCisJCQkJICAg
ICB3bV9wYXJhbXMsIHJlc3VsdF9wcmV2LCByZXN1bHQpOwogCiAJCXJlc3VsdF9wcmV2ID0gcmVz
dWx0OworCQlpZiAobGV2ZWwgPT0gMCkgeworCQkJLyoKKwkJCSAqIEZvciBHZW4xMiBpZiBpdCBp
cyBhbiBMMCB3ZSBuZWVkIHRvIGFsc28KKwkJCSAqIGNvbnNpZGVyIHNhZ3ZfYmxvY2tfdGltZSB3
aGVuIGNhbGN1bGF0aW5nCisJCQkgKiBMMCB3YXRlcm1hcmsgLSB3ZSB3aWxsIG5lZWQgdGhhdCB3
aGVuIG1ha2luZworCQkJICogYSBkZWNpc2lvbiB3aGV0aGVyIGVuYWJsZSBTQUdWIG9yIG5vdC4K
KwkJCSAqIEZvciBvbGRlciBnZW5zIHdlIGFncmVlZCB0byBjb3B5IEwwIHZhbHVlIGZvcgorCQkJ
ICogY29tcGF0aWJpbGl0eS4KKwkJCSAqLworCQkJaWYgKChJTlRFTF9HRU4oZGV2X3ByaXYpID49
IDEyKSkgeworCQkJCWxhdGVuY3kgKz0gZGV2X3ByaXYtPnNhZ3ZfYmxvY2tfdGltZV91czsKKwkJ
CQlza2xfY29tcHV0ZV9wbGFuZV93bShjcnRjX3N0YXRlLCBsZXZlbCwgbGF0ZW5jeSwKKwkJCQkg
ICAgIHdtX3BhcmFtcywgcmVzdWx0X3ByZXYsCisJCQkJICAgICZwbGFuZV93bS0+c2Fndl93bV9s
MCk7CisJCQl9CisJCQllbHNlIAorCQkJCW1lbWNweSgmcGxhbmVfd20tPnNhZ3Zfd21fbDAsICZs
ZXZlbHNbMF0sCisJCQkJCXNpemVvZihzdHJ1Y3Qgc2tsX3dtX2xldmVsKSk7CisJCX0KIAl9CiB9
CiAKQEAgLTUxNjYsNyArNTMzMCw3IEBAIHN0YXRpYyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtX3Np
bmdsZShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlpZiAocmV0KQogCQly
ZXR1cm4gcmV0OwogCi0Jc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtLT53bSk7CisJc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtLCBmYWxzZSk7CiAJc2tsX2NvbXB1dGVfdHJhbnNpdGlvbl93bShjcnRjX3N0YXRlLCAm
d21fcGFyYW1zLCB3bSk7CiAKIAlyZXR1cm4gMDsKQEAgLTUxODgsNyArNTM1Miw3IEBAIHN0YXRp
YyBpbnQgc2tsX2J1aWxkX3BsYW5lX3dtX3V2KHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogCWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlza2xfY29tcHV0ZV93bV9sZXZl
bHMoY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20tPnV2X3dtKTsKKwlza2xfY29tcHV0ZV93bV9s
ZXZlbHMoY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20sIHRydWUpOwogCiAJcmV0dXJuIDA7CiB9
CkBAIC01NzY4LDIwICs1OTMyLDI2IEBAIHN0YXRpYyBpbnQgc2tsX3dtX2FkZF9hZmZlY3RlZF9w
bGFuZXMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiBzdGF0aWMgaW50CiBza2xf
Y29tcHV0ZV93bShzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIHsKKwlzdHJ1Y3Qg
ZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2OworCWNvbnN0IHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0YzsKIAlzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7CiAJc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKm9sZF9jcnRjX3N0YXRlOwogCXN0cnVjdCBza2xfZGRiX3ZhbHVl
cyAqcmVzdWx0cyA9ICZzdGF0ZS0+d21fcmVzdWx0czsKKwlzdHJ1Y3Qgc2tsX2RkYl9hbGxvY2F0
aW9uICpkZGIgPSAmc3RhdGUtPndtX3Jlc3VsdHMuZGRiOwogCWJvb2wgY2hhbmdlZCA9IGZhbHNl
OwogCWludCByZXQsIGk7CiAKIAkvKiBDbGVhciBhbGwgZGlydHkgZmxhZ3MgKi8KIAlyZXN1bHRz
LT5kaXJ0eV9waXBlcyA9IDA7CiAKKwlzdGF0ZS0+Z2VuMTJfY2FuX3NhZ3YgPSBmYWxzZTsKKwog
CXJldCA9IHNrbF9kZGJfYWRkX2FmZmVjdGVkX3BpcGVzKHN0YXRlLCAmY2hhbmdlZCk7CiAJaWYg
KHJldCB8fCAhY2hhbmdlZCkKIAkJcmV0dXJuIHJldDsKIAorCiAJLyoKIAkgKiBDYWxjdWxhdGUg
V00ncyBmb3IgYWxsIHBpcGVzIHRoYXQgYXJlIHBhcnQgb2YgdGhpcyB0cmFuc2FjdGlvbi4KIAkg
KiBOb3RlIHRoYXQgc2tsX2RkYl9hZGRfYWZmZWN0ZWRfcGlwZXMgbWF5IGhhdmUgYWRkZWQgbW9y
ZSBDUlRDJ3MgdGhhdApAQCAtNTgwNCw2ICs1OTc0LDQ5IEBAIHNrbF9jb21wdXRlX3dtKHN0cnVj
dCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQkJcmVzdWx0cy0+ZGlydHlfcGlwZXMgfD0g
ZHJtX2NydGNfbWFzaygmY3J0Yy0+YmFzZSk7CiAJfQogCisJaWYgKElOVEVMX0dFTihkZXZfcHJp
dikgPCAxMikKKwkJZ290byBjb21wdXRlX2RkYjsKKworCS8qCisJICogTGV0cyBhc3N1bWUgd2Ug
Y2FuIHRvbGVyYXRlIFNBR1YgZm9yIG5vdywKKwkgKiB1bnRpbCB3YXRlcm1hcmsgY2FsY3VsYXRp
b25zIHByb3ZlIHRoZSBvcHBvc2l0ZQorCSAqIGlmIGFueSBvZiB0aGUgcGlwZSBwbGFuZXMgaW4g
dGhlIHN0YXRlIHdpbGwKKwkgKiBmYWlsIHRoZSByZXF1aXJlbWVudHMgaXQgd2lsbCBiZSBhc3Np
Z25lZCB0byBmYWxzZQorCSAqIGluIHNrbF9jb21wdXRlX2RkYi4KKwkgKi8KKwlzdGF0ZS0+Z2Vu
MTJfY2FuX3NhZ3YgPSB0cnVlOworCisJZm9yX2VhY2hfb2xkbmV3X2ludGVsX2NydGNfaW5fc3Rh
dGUoc3RhdGUsIGNydGMsIG9sZF9jcnRjX3N0YXRlLAorCQkJCQkgICAgbmV3X2NydGNfc3RhdGUs
IGkpIHsKKwkJcmV0ID0gdGdsX2NoZWNrX3BpcGVfZml0c19zYWd2X3dtKG5ld19jcnRjX3N0YXRl
LCBkZGIpOworCQlpZiAocmV0KSB7CisJCQlzdGF0ZS0+Z2VuMTJfY2FuX3NhZ3YgPSBmYWxzZTsK
KwkJCWJyZWFrOworCQl9CisJfQorCisJaWYgKHN0YXRlLT5nZW4xMl9jYW5fc2FndikgeworCQkv
KgorCQkgKiBJZiB3ZSBkZXRlcm1pbmVkIHRoYXQgd2UgY2FuIGFjdHVhbGx5IGVuYWJsZSBTQUdW
LCB0aGVuCisJCSAqIGFjdHVhbGx5IHVzZSB0aG9zZSBsZXZlbHMgdGdsX2NoZWNrX3BpcGVfZml0
c19zYWd2X3dtCisJCSAqIGhhcyBhbHJlYWR5IHRha2VuIGNhcmUgb2YgY2hlY2tpbmcgaWYgTDAg
KyBzYWd2IGJsb2NrIHRpbWUKKwkJICogZml0cyBpbnRvIGRkYi4KKwkJICovCisJCWZvcl9lYWNo
X29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBvbGRfY3J0Y19zdGF0ZSwK
KwkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJCQlzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBs
YW5lOworCQkJZm9yX2VhY2hfaW50ZWxfcGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgY3J0
YywgcGxhbmUpIHsKKwkJCQllbnVtIHBsYW5lX2lkIHBsYW5lX2lkID0gcGxhbmUtPmlkOworCQkJ
CXN0cnVjdCBza2xfcGxhbmVfd20gKnBsYW5lX3dtID0gXAorCQkJCSAgICAmbmV3X2NydGNfc3Rh
dGUtPndtLnNrbC5vcHRpbWFsLnBsYW5lc1twbGFuZV9pZF07CisJCQkJc3RydWN0IHNrbF93bV9s
ZXZlbCAqc2Fndl93bTAgPSAmcGxhbmVfd20tPnNhZ3Zfd21fbDA7CisJCQkJc3RydWN0IHNrbF93
bV9sZXZlbCAqbDBfd20wID0gJnBsYW5lX3dtLT53bVswXTsKKwkJCQltZW1jcHkobDBfd20wLCBz
YWd2X3dtMCwgc2l6ZW9mKHN0cnVjdCBza2xfd21fbGV2ZWwpKTsKKwkJCX0KKwkJfQorCX0KKwor
Y29tcHV0ZV9kZGI6CiAJcmV0ID0gc2tsX2NvbXB1dGVfZGRiKHN0YXRlKTsKIAlpZiAocmV0KQog
CQlyZXR1cm4gcmV0OwotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

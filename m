Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 4B1D3167FD6
	for <lists+intel-gfx@lfdr.de>; Fri, 21 Feb 2020 15:12:27 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 70F796F452;
	Fri, 21 Feb 2020 14:12:18 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 075616F453
 for <intel-gfx@lists.freedesktop.org>; Fri, 21 Feb 2020 14:12:16 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 21 Feb 2020 06:12:16 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.70,468,1574150400"; d="scan'208";a="269999459"
Received: from slisovsk-lenovo-ideapad-720s-13ikb.fi.intel.com ([10.237.72.89])
 by fmsmga002.fm.intel.com with ESMTP; 21 Feb 2020 06:12:13 -0800
From: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Fri, 21 Feb 2020 16:09:09 +0200
Message-Id: <20200221140909.9296-1-stanislav.lisovskiy@intel.com>
X-Mailer: git-send-email 2.24.1.485.gad05a3d8e5
In-Reply-To: <20200220120741.6917-5-stanislav.lisovskiy@intel.com>
References: <20200220120741.6917-5-stanislav.lisovskiy@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v17 4/7] drm/i915: Refactor intel_can_enable_sagv
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q3VycmVudGx5IGludGVsX2Nhbl9lbmFibGVfc2FndiBmdW5jdGlvbiBjb250YWlucwphIG1peCBv
ZiB3b3JrYXJvdW5kcyBmb3IgZGlmZmVyZW50IHBsYXRmb3Jtcwpzb21lIG9mIHRoZW0gYXJlIG5v
dCB2YWxpZCBmb3IgZ2VucyA+PSAxMSBhbHJlYWR5LApzbyBsZXRzIHNwbGl0IGl0IGludG8gc2Vw
YXJhdGUgZnVuY3Rpb25zLgoKdjI6CiAgICAtIFJld29yayB3YXRlcm1hcmsgY2FsY3VsYXRpb24g
YWxnb3JpdGhtIHRvCiAgICAgIGF0dGVtcHQgdG8gY2FsY3VsYXRlIExldmVsIDAgd2F0ZXJtYXJr
CiAgICAgIHdpdGggYWRkZWQgc2FndiBibG9jayB0aW1lIGxhdGVuY3kgYW5kCiAgICAgIGNoZWNr
IGlmIGl0IGZpdHMgaW4gREJ1ZiBpbiBvcmRlciB0bwogICAgICBkZXRlcm1pbmUgaWYgU0FHViBj
YW4gYmUgZW5hYmxlZCBhbHJlYWR5CiAgICAgIGF0IHRoaXMgc3RhZ2UsIGp1c3QgYXMgQlNwZWMg
NDkzMjUgc3RhdGVzLgogICAgICBpZiB0aGF0IGZhaWxzIHJvbGxiYWNrIHRvIHVzdWFsIExldmVs
IDAKICAgICAgbGF0ZW5jeSBhbmQgZGlzYWJsZSBTQUdWLgogICAgLSBSZW1vdmUgdW5uZWVkZWQg
dGFicyhKYW1lcyBBdXNtdXMpCgp2MzogUmViYXNlZCB0aGUgcGF0Y2gKCnY0OiAtIEFkZGVkIGJh
Y2sgaW50ZXJsYWNlZCBjaGVjayBmb3IgR2VuMTIgYW5kCiAgICAgIGFkZGVkIHNlcGFyYXRlIGZ1
bmN0aW9uIGZvciBUR0wgU0FHViBjaGVjawogICAgICAodGhhbmtzIHRvIEphbWVzIEF1c211cyBm
b3Igc3BvdHRpbmcpCiAgICAtIFJlbW92ZWQgdW5uZWVkZWQgZ2VuIGNoZWNrCiAgICAtIEV4dHJh
Y3RlZCBHZW4xMiBTQUdWIGRlY2lzaW9uIG1ha2luZyBjb2RlCiAgICAgIHRvIGEgc2VwYXJhdGUg
ZnVuY3Rpb24gZnJvbSBza2xfY29tcHV0ZV93bQoKdjU6IC0gQWRkZWQgU0FHViBnbG9iYWwgc3Rh
dGUgdG8gZGV2X3ByaXYsIGJlY2F1c2UKICAgICAgd2UgbmVlZCB0byB0cmFjayBhbGwgcGlwZXMs
IG5vdCBvbmx5IHRob3NlCiAgICAgIGluIGF0b21pYyBzdGF0ZS4gRWFjaCBwaXBlIGhhcyBub3cg
Y29ycmVzcG9uZGVudAogICAgICBiaXQgbWFzayByZWZsZWN0aW5nLCB3aGV0aGVyIGl0IGNhbiB0
b2xlcmF0ZQogICAgICBTQUdWIG9yIG5vdCh0aGFua3MgdG8gVmlsbGUgU3lyamFsYSBmb3Igc3Vn
Z2VzdGlvbnMpLgogICAgLSBOb3cgdXNpbmcgYWN0aXZlIGZsYWcgaW5zdGVhZCBvZiBlbmFibGUg
aW4gY3JjCiAgICAgIHVzYWdlIGNoZWNrLgoKdjY6IC0gRml4ZWQgcmViYXNlIGNvbmZsaWN0cwoK
djc6IC0ga21zX2N1cnNvcl9sZWdhY3kgc2VlbXMgdG8gZ2V0IGJyb2tlbiBiZWNhdXNlIG9mIG11
bHRpcGxlIG1lbWNweQogICAgICBjYWxscyB3aGVuIGNvcHlpbmcgbGV2ZWwgMCB3YXRlciBtYXJr
cyBmb3IgZW5hYmxlZCBTQUdWLCB0bwogICAgICBmaXggdGhpcyBub3cgc2ltcGx5IHVzaW5nIHRo
YXQgZmllbGQgcmlnaHQgYXdheSwgd2l0aG91dCBjb3B5aW5nLAogICAgICBmb3IgdGhhdCBpbnRy
b2R1Y2VkIGEgbmV3IHdtX2xldmVsIGFjY2Vzc29yIHdoaWNoIGRlY2lkZXMgd2hpY2gKICAgICAg
d21fbGV2ZWwgdG8gcmV0dXJuIGJhc2VkIG9uIFNBR1Ygc3RhdGUuCgp2ODogLSBQcm90ZWN0IGNy
dGNfc2Fndl9tYXNrIHNhbWUgd2F5IGFzIHdlIGRvIGZvciBvdGhlciBnbG9iYWwgc3RhdGUKICAg
ICAgY2hhbmdlczogaS5lIGNoZWNrIGlmIGNoYW5nZXMgYXJlIG5lZWRlZCwgdGhlbiBncmFiIGFs
bCBjcnRjIGxvY2tzCiAgICAgIHRvIHNlcmlhbGl6ZSB0aGUgY2hhbmdlcyhWaWxsZSBTeXJqw6Rs
w6QpCiAgICAtIEFkZCBjcnRjX3NhZ3ZfbWFzayBjYWNoaW5nIGluIG9yZGVyIHRvIGF2b2lkIG5l
ZWRsZXNzIHJlY2FsY3VsYXRpb25zCiAgICAgIChNYXR0aGV3IFJvcGVyKQogICAgLSBQdXQgYmFj
ayBHZW4xMiBTQUdWIHN3aXRjaCBpbiBvcmRlciB0byBnZXQgaXQgZW5hYmxlZCBpbiBzZXBhcmF0
ZQogICAgICBwYXRjaChNYXR0aGV3IFJvcGVyKQogICAgLSBSZW5hbWUgKl9zZXRfc2Fndl9tYXNr
IHRvICpfY29tcHV0ZV9zYWd2X21hc2soTWF0dGhldyBSb3BlcikKICAgIC0gQ2hlY2sgaWYgdGhl
cmUgYXJlIG5vIGFjdGl2ZSBwaXBlcyBpbiBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YKICAgICAgaW5z
dGVhZCBvZiBwbGF0Zm9ybSBzcGVjaWZpYyBmdW5jdGlvbnMoTWF0dGhldyBSb3BlciksIHNhbWUK
ICAgICAgZm9yIGludGVsX2hhc19zYWd2IGNoZWNrLgoKdjkgIC0gU3dpdGNoZWQgdG8gdTggZm9y
IGNydGNfc2Fndl9tYXNrKFZpbGxlIFN5cmrDpGzDpCkKICAgIC0gY3J0Y19zYWd2X21hc2sgbm93
IGlzIHBpcGVfc2Fndl9tYXNrKFZpbGxlIFN5cmrDpGzDpCkKICAgIC0gRXh0cmFjdGVkIHNhZ3Yg
Y2hlY2tpbmcgbG9naWMgZnJvbSBza2wvaWNsL3RnbF9jb21wdXRlX3NhZ3ZfbWFzawogICAgLSBF
eHRyYWN0ZWQgc2tsX3BsYW5lX3dtX2xldmVsIGZ1bmN0aW9uIGFuZCBwYXNzaW5nIGxhdGVuY3kg
dG8KICAgICAgc2VwYXJhdGUgcGF0Y2hlcyhWaWxsZSBTeXJqw6Rsw6QpCiAgICAtIFJlbW92ZWQg
cGFydCBvZiB1bm5lZWRlZCBjb3B5LXBhc3RlIGZyb20gdGdsX2NoZWNrX3BpcGVfZml0c19zYWd2
X3dtCiAgICAgIChWaWxsZSBTeXJqw6Rsw6QpCiAgICAtIE5vdyB1c2luZyBzaW1wbGUgYXNzaWdu
bWVudCBmb3Igc2Fndl93bTAgYXMgaXQgY29udGFpbnMgb25seQogICAgICBwb2QgdHlwZXMgYW5k
IG5vIHBvaW50ZXJzKFZpbGxlIFN5cmrDpGzDpCkKICAgIC0gRml4ZWQgaW50ZWxfY2FuX2VuYWJs
ZV9zYWd2IG5vdCB0byBkbyBkb3VibGUgZHV0eSwgbm93IGl0IG9ubHkKICAgICAgY2hlY2sgU0FH
ViBiaXRzIGJ5IEFORGluZyB0aG9zZSBiZXR3ZWVuIGxvY2FsIGFuZCBnbG9iYWwgc3RhdGUuCiAg
ICAgIFRoZSBTQUdWIG1hc2tzIGFyZSBub3cgY29tcHV0ZWQgYWZ0ZXIgd2F0ZXJtYXJrcyBhcmUg
YXZhaWxhYmxlLAogICAgICBpbiBvcmRlciB0byBiZSBhYmxlIHRvIGZpZ3VyZSBvdXQgaWYgZGRi
IHJhbmdlcyBhcmUgZml0dGluZyBuaWNlbHkuCiAgICAgIChWaWxsZSBTeXJqw6Rsw6QpCiAgICAt
IE5vdyBoYXZpbmcgdXZfc2Fndl93bTAgYW5kIHNhZ3Zfd20wLCBvdGhlcndpc2Ugd2UgaGF2ZSB3
cm9uZyBsb2dpYwogICAgICB3aGVuIHVzaW5nIHNrbF9wbGFuZV93bV9sZXZlbCBhY2Nlc3Nvciwg
YXMgd2UgaGFkIHByZXZpb3VzbHkgZm9yIEdlbjExKwogICAgICBjb2xvciBwbGFuZSBhbmQgcmVn
dWxhciB3bSBsZXZlbHMsIHNvIHByb2JhYmx5IGJvdGggaGFzIHRvIGJlIHJlY2FsY3VsYXRlZAog
ICAgICB3aXRoIGFkZGl0aW9uYWwgU0FHViBibG9jayB0aW1lIGZvciBMZXZlbCAwLgoKdjEwOiAt
IFN0YXJ0aW5nIHRvIHVzZSBuZXcgZ2xvYmFsIHN0YXRlIGZvciBzdG9yaW5nIHBpcGVfc2Fndl9t
YXNrCgp2MTE6IC0gRml4ZWQgcmViYXNlIGNvbmZsaWN0IHdpdGggcmVjZW50IGRybS10aXAKICAg
ICAtIENoZWNrIGlmIHdlIHJlYWxseSBuZWVkIHRvIHJlY2FsY3VsYXRlIFNBR1YgbWFzaywgb3Ro
ZXJ3aXNlCiAgICAgICBiYWlsIG91dCB3aXRob3V0IG1ha2luZyBhbnkgY2hhbmdlcy4KICAgICAt
IFVzZSBjYWNoZWQgU0FHViByZXN1bHQsIGluc3RlYWQgb2YgcmVjYWxjdWxhdGluZyBpdCBldmVy
eXRpbWUsCiAgICAgICBpZiBid19zdGF0ZSBoYXNuJ3QgY2hhbmdlZC4KCnYxMjogLSBSZW1vdmVk
IFdBUk4gZnJvbSBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YsIGluIHNvbWUgb2YgdGhlIGNvbW1pdHMK
ICAgICAgIGlmIHdlIGRvbid0IHJlY2FsY3VsYXRlZCB3YXRlcm1hcmtzLCBid19zdGF0ZSBpcyBu
b3QgcmVjYWxjdWxhdGVkLAogICAgICAgdGh1cyBsZWFkaW5nIHRvIFNBR1Ygc3RhdGUgbm90IHJl
Y2FsY3VsYXRlZCBieSB0aGUgY29tbWl0IHN0YXRlLAogICAgICAgd2hpY2ggaXMgc3RpbGwgY2Fs
bGluZyBpbnRlbF9jYW5fZW5hYmxlX3NhZ3YgZnVuY3Rpb24uIEZpeCB0aGF0CiAgICAgICBieSBq
dXN0IGFuYWx5emluZyB0aGUgY3VycmVudCBnbG9iYWwgYndfc3RhdGUgb2JqZWN0IC0gYmVjYXVz
ZQogICAgICAgd2Ugc2ltcGx5IGhhdmUgbm8gb3RoZXIgb2JqZWN0cyByZWxhdGVkIHRvIHRoYXQu
CgpTaWduZWQtb2ZmLWJ5OiBTdGFuaXNsYXYgTGlzb3Zza2l5IDxzdGFuaXNsYXYubGlzb3Zza2l5
QGludGVsLmNvbT4KQ2M6IFZpbGxlIFN5cmrDpGzDpCA8dmlsbGUuc3lyamFsYUBpbnRlbC5jb20+
CkNjOiBKYW1lcyBBdXNtdXMgPGphbWVzLmF1c211c0BpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9idy5oICAgICAgIHwgIDE4ICsKIGRyaXZlcnMvZ3B1
L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jICB8ICAyMiArLQogLi4uL2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgICAyICsKIC4uLi9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9nbG9iYWxfc3RhdGUuaCB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9wbS5jICAgICAgICAgICAgICAgfCA0MzggKysrKysrKysrKysrKysrKy0tCiBk
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oICAgICAgICAgICAgICAgfCAgIDQgKy0KIDYg
ZmlsZXMgY2hhbmdlZCwgNDQzIGluc2VydGlvbnMoKyksIDQyIGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaAppbmRleCBhYzAwNGQ2ZjQyNzYuLmZiMTc2
MDEyNWY5ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9i
dy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYncuaApAQCAtMTgs
NiArMTgsMjQgQEAgc3RydWN0IGludGVsX2NydGNfc3RhdGU7CiBzdHJ1Y3QgaW50ZWxfYndfc3Rh
dGUgewogCXN0cnVjdCBpbnRlbF9nbG9iYWxfc3RhdGUgYmFzZTsKIAorCS8qCisJICogQ29udGFp
bnMgYSBiaXQgbWFzaywgdXNlZCB0byBkZXRlcm1pbmUsIHdoZXRoZXIgY29ycmVzcG9uZGVudAor
CSAqIHBpcGUgYWxsb3dzIFNBR1Ygb3Igbm90LgorCSAqLworCXU4IHBpcGVfc2Fndl9tYXNrOwor
CisJLyoKKwkgKiBVc2VkIHRvIGRldGVybWluZSBpZiB3ZSBhbHJlYWR5IGhhZCBjYWxjdWxhdGVk
CisJICogU0FHViBtYXNrIGZvciB0aGlzIHN0YXRlIG9uY2UuCisJICovCisJYm9vbCBzYWd2X2Nh
bGN1bGF0ZWQ7CisKKwkvKgorCSAqIENvbnRhaW5zIGZpbmFsIFNBR1YgZGVjaXNpb24gYmFzZWQg
b24gY3VycmVudCBtYXNrLAorCSAqIHRvIHByZXZlbnQgZG9pbmcgdGhlIHNhbWUgam9iIG92ZXIg
YW5kIG92ZXIgYWdhaW4uCisJICovCisJYm9vbCBjYW5fc2FndjsKKwogCXVuc2lnbmVkIGludCBk
YXRhX3JhdGVbSTkxNV9NQVhfUElQRVNdOwogCXU4IG51bV9hY3RpdmVfcGxhbmVzW0k5MTVfTUFY
X1BJUEVTXTsKIH07CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2lu
dGVsX2Rpc3BsYXkuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eS5jCmluZGV4IDQ4ZmUzZDJlMGZhMy4uNmE0ZDg4ZTRkNDFhIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYworKysgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwpAQCAtMTM5NzcsNyArMTM5NzcsMTAgQEAg
c3RhdGljIHZvaWQgdmVyaWZ5X3dtX3N0YXRlKHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAogCQkv
KiBXYXRlcm1hcmtzICovCiAJCWZvciAobGV2ZWwgPSAwOyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxl
dmVsKyspIHsKIAkJCWlmIChza2xfd21fbGV2ZWxfZXF1YWxzKCZod19wbGFuZV93bS0+d21bbGV2
ZWxdLAotCQkJCQkJJnN3X3BsYW5lX3dtLT53bVtsZXZlbF0pKQorCQkJCQkJJnN3X3BsYW5lX3dt
LT53bVtsZXZlbF0pIHx8CisJCQkgICAoc2tsX3dtX2xldmVsX2VxdWFscygmaHdfcGxhbmVfd20t
PndtW2xldmVsXSwKKwkJCQkJCSZzd19wbGFuZV93bS0+c2Fndl93bTApICYmCisJCQkgICAobGV2
ZWwgPT0gMCkpKQogCQkJCWNvbnRpbnVlOwogCiAJCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLApA
QCAtMTQwMzIsNyArMTQwMzUsMTAgQEAgc3RhdGljIHZvaWQgdmVyaWZ5X3dtX3N0YXRlKHN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjLAogCQkvKiBXYXRlcm1hcmtzICovCiAJCWZvciAobGV2ZWwgPSAw
OyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKIAkJCWlmIChza2xfd21fbGV2ZWxfZXF1
YWxzKCZod19wbGFuZV93bS0+d21bbGV2ZWxdLAotCQkJCQkJJnN3X3BsYW5lX3dtLT53bVtsZXZl
bF0pKQorCQkJCQkJJnN3X3BsYW5lX3dtLT53bVtsZXZlbF0pIHx8CisJCQkgICAoc2tsX3dtX2xl
dmVsX2VxdWFscygmaHdfcGxhbmVfd20tPndtW2xldmVsXSwKKwkJCQkJCSZzd19wbGFuZV93bS0+
c2Fndl93bTApICYmCisJCQkgICAobGV2ZWwgPT0gMCkpKQogCQkJCWNvbnRpbnVlOwogCiAJCQlk
cm1fZXJyKCZkZXZfcHJpdi0+ZHJtLApAQCAtMTU1MDksOCArMTU1MTUsOSBAQCBzdGF0aWMgdm9p
ZCBpbnRlbF9hdG9taWNfY29tbWl0X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUpCiAJCSAqIFNLTCB3b3JrYXJvdW5kOiBic3BlYyByZWNvbW1lbmRzIHdlIGRpc2FibGUgdGhl
IFNBR1Ygd2hlbiB3ZQogCQkgKiBoYXZlIG1vcmUgdGhlbiBvbmUgcGlwZSBlbmFibGVkCiAJCSAq
LwotCQlpZiAoIWludGVsX2Nhbl9lbmFibGVfc2FndihzdGF0ZSkpCi0JCQlpbnRlbF9kaXNhYmxl
X3NhZ3YoZGV2X3ByaXYpOworCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8IDExKQorCQkJaWYg
KCFpbnRlbF9jYW5fZW5hYmxlX3NhZ3YoZGV2X3ByaXYpKQorCQkJCWludGVsX2Rpc2FibGVfc2Fn
dihkZXZfcHJpdik7CiAKIAkJaW50ZWxfbW9kZXNldF92ZXJpZnlfZGlzYWJsZWQoZGV2X3ByaXYs
IHN0YXRlKTsKIAl9CkBAIC0xNTYxMCw4ICsxNTYxNywxMCBAQCBzdGF0aWMgdm9pZCBpbnRlbF9h
dG9taWNfY29tbWl0X3RhaWwoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJaWYg
KHN0YXRlLT5tb2Rlc2V0KQogCQlpbnRlbF92ZXJpZnlfcGxhbmVzKHN0YXRlKTsKIAotCWlmIChz
dGF0ZS0+bW9kZXNldCAmJiBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RhdGUpKQotCQlpbnRlbF9l
bmFibGVfc2FndihkZXZfcHJpdik7CisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMSkgewor
CQlpZiAoc3RhdGUtPm1vZGVzZXQgJiYgaW50ZWxfY2FuX2VuYWJsZV9zYWd2KGRldl9wcml2KSkK
KwkJCWludGVsX2VuYWJsZV9zYWd2KGRldl9wcml2KTsKKwl9CiAKIAlkcm1fYXRvbWljX2hlbHBl
cl9jb21taXRfaHdfZG9uZSgmc3RhdGUtPmJhc2UpOwogCkBAIC0xNTc2Myw3ICsxNTc3Miw2IEBA
IHN0YXRpYyBpbnQgaW50ZWxfYXRvbWljX2NvbW1pdChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAog
CiAJaWYgKHN0YXRlLT5nbG9iYWxfc3RhdGVfY2hhbmdlZCkgewogCQlhc3NlcnRfZ2xvYmFsX3N0
YXRlX2xvY2tlZChkZXZfcHJpdik7Ci0KIAkJZGV2X3ByaXYtPmFjdGl2ZV9waXBlcyA9IHN0YXRl
LT5hY3RpdmVfcGlwZXM7CiAJfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheV90eXBlcy5oCmluZGV4IDBkOGE2NDMwNTQ2NC4uNDA3ODkyYWE5M2Jm
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
dHlwZXMuaApAQCAtNjU0LDYgKzY1NCw4IEBAIHN0cnVjdCBza2xfcGxhbmVfd20gewogCXN0cnVj
dCBza2xfd21fbGV2ZWwgd21bOF07CiAJc3RydWN0IHNrbF93bV9sZXZlbCB1dl93bVs4XTsKIAlz
dHJ1Y3Qgc2tsX3dtX2xldmVsIHRyYW5zX3dtOworCXN0cnVjdCBza2xfd21fbGV2ZWwgc2Fndl93
bTA7CisJc3RydWN0IHNrbF93bV9sZXZlbCB1dl9zYWd2X3dtMDsKIAlib29sIGlzX3BsYW5hcjsK
IH07CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZ2xv
YmFsX3N0YXRlLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2dsb2JhbF9z
dGF0ZS5oCmluZGV4IGU2MTYzYTQ2OTAyOS4uNDgxYmY1ZWE5MGEzIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2dsb2JhbF9zdGF0ZS5oCisrKyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZ2xvYmFsX3N0YXRlLmgKQEAgLTg0LDQgKzg0
LDUgQEAgdm9pZCBpbnRlbF9hdG9taWNfY2xlYXJfZ2xvYmFsX3N0YXRlKHN0cnVjdCBpbnRlbF9h
dG9taWNfc3RhdGUgKnN0YXRlKTsKIGludCBpbnRlbF9hdG9taWNfbG9ja19nbG9iYWxfc3RhdGUo
c3RydWN0IGludGVsX2dsb2JhbF9zdGF0ZSAqb2JqX3N0YXRlKTsKIGludCBpbnRlbF9hdG9taWNf
c2VyaWFsaXplX2dsb2JhbF9zdGF0ZShzdHJ1Y3QgaW50ZWxfZ2xvYmFsX3N0YXRlICpvYmpfc3Rh
dGUpOwogCisKICNlbmRpZgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxf
cG0uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3BtLmMKaW5kZXggZTFkMTY3NDI5NDg5
Li42MDEzY2QwZDZmZDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3Bt
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uYwpAQCAtNDIsNiArNDIsNyBA
QAogI2luY2x1ZGUgImk5MTVfZHJ2LmgiCiAjaW5jbHVkZSAiaTkxNV9pcnEuaCIKICNpbmNsdWRl
ICJpOTE1X3RyYWNlLmgiCisjaW5jbHVkZSAiZGlzcGxheS9pbnRlbF9idy5oIgogI2luY2x1ZGUg
ImludGVsX3BtLmgiCiAjaW5jbHVkZSAiaW50ZWxfc2lkZWJhbmQuaCIKICNpbmNsdWRlICIuLi8u
Li8uLi9wbGF0Zm9ybS94ODYvaW50ZWxfaXBzLmgiCkBAIC0zNjIwLDcgKzM2MjEsNyBAQCBzdGF0
aWMgYm9vbCBza2xfbmVlZHNfbWVtb3J5X2J3X3dhKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKIAlyZXR1cm4gSVNfR0VOOV9CQyhkZXZfcHJpdikgfHwgSVNfQlJPWFRPTihkZXZf
cHJpdik7CiB9CiAKLXN0YXRpYyBib29sCitib29sCiBpbnRlbF9oYXNfc2FndihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiB7CiAJLyogSEFDSyEgKi8KQEAgLTM3NDMsMzkgKzM3
NDQsMjQgQEAgaW50ZWxfZGlzYWJsZV9zYWd2KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZf
cHJpdikKIAlyZXR1cm4gMDsKIH0KIAotYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0
IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCitzdGF0aWMgYm9vbCBza2xfY2FuX2VuYWJsZV9z
YWd2X29uX3BpcGUoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCisJCQkJCWVudW0g
cGlwZSBwaXBlKQogewogCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBzdGF0ZS0+YmFzZS5kZXY7
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShkZXYpOwogCXN0
cnVjdCBpbnRlbF9jcnRjICpjcnRjOwogCXN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmU7CiAJc3Ry
dWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGU7Ci0JZW51bSBwaXBlIHBpcGU7CiAJaW50
IGxldmVsLCBsYXRlbmN5OwogCi0JaWYgKCFpbnRlbF9oYXNfc2FndihkZXZfcHJpdikpCi0JCXJl
dHVybiBmYWxzZTsKLQotCS8qCi0JICogSWYgdGhlcmUgYXJlIG5vIGFjdGl2ZSBDUlRDcywgbm8g
YWRkaXRpb25hbCBjaGVja3MgbmVlZCBiZSBwZXJmb3JtZWQKLQkgKi8KLQlpZiAoaHdlaWdodDgo
c3RhdGUtPmFjdGl2ZV9waXBlcykgPT0gMCkKLQkJcmV0dXJuIHRydWU7Ci0KLQkvKgotCSAqIFNL
TCsgd29ya2Fyb3VuZDogYnNwZWMgcmVjb21tZW5kcyB3ZSBkaXNhYmxlIFNBR1Ygd2hlbiB3ZSBo
YXZlCi0JICogbW9yZSB0aGVuIG9uZSBwaXBlIGVuYWJsZWQKLQkgKi8KLQlpZiAoaHdlaWdodDgo
c3RhdGUtPmFjdGl2ZV9waXBlcykgPiAxKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQkvKiBTaW5jZSB3
ZSdyZSBub3cgZ3VhcmFudGVlZCB0byBvbmx5IGhhdmUgb25lIGFjdGl2ZSBDUlRDLi4uICovCi0J
cGlwZSA9IGZmcyhzdGF0ZS0+YWN0aXZlX3BpcGVzKSAtIDE7CiAJY3J0YyA9IGludGVsX2dldF9j
cnRjX2Zvcl9waXBlKGRldl9wcml2LCBwaXBlKTsKIAljcnRjX3N0YXRlID0gdG9faW50ZWxfY3J0
Y19zdGF0ZShjcnRjLT5iYXNlLnN0YXRlKTsKIAotCWlmIChjcnRjX3N0YXRlLT5ody5hZGp1c3Rl
ZF9tb2RlLmZsYWdzICYgRFJNX01PREVfRkxBR19JTlRFUkxBQ0UpCisJaWYgKGNydGNfc3RhdGUt
Pmh3LmFkanVzdGVkX21vZGUuZmxhZ3MgJiBEUk1fTU9ERV9GTEFHX0lOVEVSTEFDRSkgeworCQlE
Uk1fREVCVUdfS01TKCJObyBTQUdWIGZvciBpbnRlcmxhY2VkIG1vZGUgb24gcGlwZSAlY1xuIiwK
KwkJCSAgICAgIHBpcGVfbmFtZShwaXBlKSk7CiAJCXJldHVybiBmYWxzZTsKKwl9CiAKIAlmb3Jf
ZWFjaF9pbnRlbF9wbGFuZV9vbl9jcnRjKGRldiwgY3J0YywgcGxhbmUpIHsKIAkJc3RydWN0IHNr
bF9wbGFuZV93bSAqd20gPQpAQCAtMzgwMiwxMyArMzc4OCwxNzQgQEAgYm9vbCBpbnRlbF9jYW5f
ZW5hYmxlX3NhZ3Yoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJCSAqIGluY3Vy
IG1lbW9yeSBsYXRlbmNpZXMgaGlnaGVyIHRoYW4gc2Fndl9ibG9ja190aW1lX3VzIHdlCiAJCSAq
IGNhbid0IGVuYWJsZSBTQUdWLgogCQkgKi8KLQkJaWYgKGxhdGVuY3kgPCBkZXZfcHJpdi0+c2Fn
dl9ibG9ja190aW1lX3VzKQorCQlpZiAobGF0ZW5jeSA8IGRldl9wcml2LT5zYWd2X2Jsb2NrX3Rp
bWVfdXMpIHsKKwkJCURSTV9ERUJVR19LTVMoIkxhdGVuY3kgJWQgPCBzYWd2IGJsb2NrIHRpbWUg
JWQsIG5vIFNBR1YgZm9yIHBpcGUgJWNcbiIsCisJCQkJICAgICAgbGF0ZW5jeSwgZGV2X3ByaXYt
PnNhZ3ZfYmxvY2tfdGltZV91cywgcGlwZV9uYW1lKHBpcGUpKTsKIAkJCXJldHVybiBmYWxzZTsK
KwkJfQogCX0KIAogCXJldHVybiB0cnVlOwogfQogCitzdGF0aWMgdm9pZCBza2xfY29tcHV0ZV9z
YWd2X21hc2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGlu
dGVsX2NydGMgKmNydGM7CisJZW51bSBwaXBlIHBpcGU7CisJc3RydWN0IGludGVsX2J3X3N0YXRl
ICpuZXdfYndfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X2J3X3N0YXRlKHN0YXRlKTsKKworCWlm
IChJU19FUlIobmV3X2J3X3N0YXRlKSkgeworCQlXQVJOKDEsICJDb3VsZCBub3QgZ2V0IGJ3X3N0
YXRlXG4iKTsKKwkJcmV0dXJuOworCX0KKworCisJaWYgKHN0YXRlLT5hY3RpdmVfcGlwZXMgIT0g
MSkgeworCQluZXdfYndfc3RhdGUtPnBpcGVfc2Fndl9tYXNrID0gMDsKKwkJRFJNX0RFQlVHX0tN
UygiTm8gU0FHViBmb3IgbXVsdGlwbGUgcGlwZXMgb24gR2VuIDlcbiIpOworCQlyZXR1cm47CisJ
fQorCisJLyogU2luY2Ugd2UncmUgbm93IGd1YXJhbnRlZWQgdG8gb25seSBoYXZlIG9uZSBhY3Rp
dmUgQ1JUQy4uLiAqLworCXBpcGUgPSBmZnMoc3RhdGUtPmFjdGl2ZV9waXBlcykgLSAxOworCisJ
aWYgKHNrbF9jYW5fZW5hYmxlX3NhZ3Zfb25fcGlwZShzdGF0ZSwgcGlwZSkpCisJCW5ld19id19z
dGF0ZS0+cGlwZV9zYWd2X21hc2sgfD0gQklUKGNydGMtPnBpcGUpOworCWVsc2UKKwkJbmV3X2J3
X3N0YXRlLT5waXBlX3NhZ3ZfbWFzayAmPSB+QklUKGNydGMtPnBpcGUpOworfQorCitzdGF0aWMg
dm9pZCB0Z2xfY29tcHV0ZV9zYWd2X21hc2soc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3Rh
dGUpOworCitzdGF0aWMgdm9pZCBpY2xfY29tcHV0ZV9zYWd2X21hc2soc3RydWN0IGludGVsX2F0
b21pY19zdGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGludGVsX2NydGMgKmNydGM7CisJc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlOworCWludCBpOworCXN0cnVjdCBpbnRl
bF9id19zdGF0ZSAqbmV3X2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9id19zdGF0ZShzdGF0
ZSk7CisKKwlpZiAoSVNfRVJSKG5ld19id19zdGF0ZSkpIHsKKwkJV0FSTigxLCAiQ291bGQgbm90
IGdldCBid19zdGF0ZVxuIik7CisJCXJldHVybjsKKwl9CisKKwlmb3JfZWFjaF9uZXdfaW50ZWxf
Y3J0Y19pbl9zdGF0ZShzdGF0ZSwgY3J0YywKKwkJCQkJIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJ
CWlmIChza2xfY2FuX2VuYWJsZV9zYWd2X29uX3BpcGUoc3RhdGUsIGNydGMtPnBpcGUpKQorCQkJ
bmV3X2J3X3N0YXRlLT5waXBlX3NhZ3ZfbWFzayB8PSBCSVQoY3J0Yy0+cGlwZSk7CisJCWVsc2UK
KwkJCW5ld19id19zdGF0ZS0+cGlwZV9zYWd2X21hc2sgJj0gfkJJVChjcnRjLT5waXBlKTsKKwl9
Cit9CisKK3ZvaWQgaW50ZWxfY29tcHV0ZV9zYWd2X21hc2soc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUsIGludCB0b3RhbF9hZmZlY3RlZF9wbGFuZXMpCit7CisJaW50IHJldDsKKwlz
dHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gc3RhdGUtPmJhc2UuZGV2OworCXN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfYndfc3Rh
dGUgKm5ld19id19zdGF0ZSA9IGludGVsX2F0b21pY19nZXRfYndfc3RhdGUoc3RhdGUpOworCXN0
cnVjdCBpbnRlbF9id19zdGF0ZSAqb2xkX2J3X3N0YXRlID0gaW50ZWxfYXRvbWljX2dldF9vbGRf
Yndfc3RhdGUoc3RhdGUpOworCisJaWYgKElTX0VSUihuZXdfYndfc3RhdGUpIHx8IElTX0VSUihv
bGRfYndfc3RhdGUpKSB7CisJCVdBUk4oMSwgIkNvdWxkIG5vdCBnZXQgYndfc3RhdGVcbiIpOwor
CQlyZXR1cm47CisJfQorCisJbmV3X2J3X3N0YXRlLT5zYWd2X2NhbGN1bGF0ZWQgPSBmYWxzZTsK
KworCS8qCisJICogSWYgYWN0aXZlX3BpcGVzIGhhZCBjaGFuZ2VkLCBtZWFucyB3ZSBoYXZlIGFk
ZGVkL3JlbW92ZWQgY3J0YywKKwkgKiBpZiB0b3RhbF9hZmZlY3RlZF9wbGFuZXMgaGFkIGNoYW5n
ZWQgLSBtZWFucyB3ZSBoYXZlIGNoYW5nZWQgd20vZGRiLgorCSAqIEJvdGggcmVxdWlyZSBTQUdW
IHJlY2FsY3VsYXRpb24gLSBvdGhlcndpc2UganVzdCByZXR1cm4gYW5kIFNBR1YgbWFzaworCSAq
IHdpbGwgc3RheSB0aGUgc2FtZS4KKwkgKiBBbHNvIHdlIHdpbGwgaGF2ZSBjcnRjIGxvY2tzIGdy
YWJiZWQgb25seSBpbiBtZW50aW9uZWQgYWJvdmUgY2FzZXMuCisJICovCisJaWYgKChzdGF0ZS0+
YWN0aXZlX3BpcGVzID09IGRldl9wcml2LT5hY3RpdmVfcGlwZXMpICYmCisJICAgICh0b3RhbF9h
ZmZlY3RlZF9wbGFuZXMgPT0gMCkpIHsKKwkJbmV3X2J3X3N0YXRlLT5zYWd2X2NhbGN1bGF0ZWQg
PSB0cnVlOworCQlyZXR1cm47CisJfQorCisJLyoKKwkgKiBOb3cgb25jZSB3ZSBnb3Qgd20gbGV2
ZWxzIGNhbGN1bGF0ZWQsCisJICogY2hlY2sgaWYgd2UgY2FuIGhhdmUgU0FHVi4KKwkgKi8KKwlp
ZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikKKwkJdGdsX2NvbXB1dGVfc2Fndl9tYXNrKHN0
YXRlKTsKKwllbHNlIGlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID09IDExKQorCQlpY2xfY29tcHV0
ZV9zYWd2X21hc2soc3RhdGUpOworCWVsc2UKKwkJc2tsX2NvbXB1dGVfc2Fndl9tYXNrKHN0YXRl
KTsKKworCS8qCisJICogRm9yIFNBR1Ygd2UgbmVlZCB0byBhY2NvdW50IGFsbCB0aGUgcGlwZXMs
CisJICogbm90IG9ubHkgdGhlIG9uZXMgd2hpY2ggYXJlIGluIHN0YXRlIGN1cnJlbnRseS4KKwkg
KiBHcmFiIGFsbCBsb2NrcyBpZiB3ZSBkZXRlY3QgdGhhdCB3ZSBhcmUgYWN0dWFsbHkKKwkgKiBn
b2luZyB0byBkbyBzb21ldGhpbmcuCisJICovCisJaWYgKG5ld19id19zdGF0ZS0+cGlwZV9zYWd2
X21hc2sgIT0gb2xkX2J3X3N0YXRlLT5waXBlX3NhZ3ZfbWFzaykgeworCQlyZXQgPSBpbnRlbF9h
dG9taWNfc2VyaWFsaXplX2dsb2JhbF9zdGF0ZSgmbmV3X2J3X3N0YXRlLT5iYXNlKTsKKwkJaWYg
KHJldCkgeworCQkJRFJNX0RFQlVHX0tNUygiQ291bGQgbm90IHNlcmlhbGl6ZSBnbG9iYWwgc3Rh
dGVcbiIpOworCQkJcmV0dXJuOworCQl9CisJfQorfQorCitib29sIGludGVsX2NhbGN1bGF0ZV9z
YWd2X3Jlc3VsdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCisJCQkJIHN0cnVj
dCBpbnRlbF9id19zdGF0ZSAqYndfc3RhdGUpCit7CisJYm9vbCBzYWd2X3Jlc3VsdCA9IHRydWU7
CisJZW51bSBwaXBlIHBpcGU7CisKKwlmb3JfZWFjaF9waXBlKGRldl9wcml2LCBwaXBlKSB7CisJ
CS8qCisJCSAqIFRPRE86IFdlIGFyZSBkZXBlbmRpbmcgb24gYWN0aXZlX3BpcGVzIGhlcmUsCisJ
CSAqIHByb2JhYmx5IGl0IHNob3VsZCBiZSBwYXJ0IG9mIHNvbWUgb3RoZXIgZ2xvYmFsIHN0YXRl
CisJCSAqIG9iaiwgbGlrZSBtb2Rlc2V0X3N0YXRlIG9yIHNtdGgsIHdoaWNoIHdlIHNob3VsZCBk
ZXBlbmQgb24uCisJCSAqIERvbid0IHdhbnQgdG8gY2xvbmUgaXQgaGVyZSwgcmVhbGx5LgorCQkg
Ki8KKwkJaW50IGFjdGl2ZV9waXBlX2JpdCA9IGRldl9wcml2LT5hY3RpdmVfcGlwZXMgJiBCSVQo
cGlwZSk7CisJCWlmIChhY3RpdmVfcGlwZV9iaXQpIHsKKwkJCWlmICgoYndfc3RhdGUtPnBpcGVf
c2Fndl9tYXNrICYgQklUKHBpcGUpKSA9PSAwKSB7CisJCQkJc2Fndl9yZXN1bHQgPSBmYWxzZTsK
KwkJCQlicmVhazsKKwkJCX0KKwkJfQorCX0KKworCXJldHVybiBzYWd2X3Jlc3VsdDsKK30KKwor
LyoKKyAqIFRoaXMgZnVuY3Rpb24gdG8gYmUgdXNlZCBiZWZvcmUgc3dhcCBzdGF0ZQorICovCiti
b29sIGludGVsX2Nhbl9lbmFibGVfc2Fndl9mb3Jfc3RhdGUoc3RydWN0IGludGVsX2F0b21pY19z
dGF0ZSAqc3RhdGUpCit7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IHN0YXRlLT5iYXNlLmRl
djsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGRldik7CisJ
c3RydWN0IGludGVsX2J3X3N0YXRlICpid19zdGF0ZSAgPSBpbnRlbF9hdG9taWNfZ2V0X2J3X3N0
YXRlKHN0YXRlKTsKKworCWlmIChJU19FUlIoYndfc3RhdGUpKSB7CisJCVdBUk4oMSwgIkNvdWxk
IG5vdCBnZXQgYndfc3RhdGVcbiIpOworCQlyZXR1cm4gZmFsc2U7CisJfQorCisJaWYgKCFpbnRl
bF9oYXNfc2FndihkZXZfcHJpdikpIHsKKwkJRFJNX0RFQlVHX0tNUygiTm8gU0FHViBzdXBwb3J0
IGRldGVjdGVkXG4iKTsKKwkJcmV0dXJuIGZhbHNlOworCX0KKworCWlmIChid19zdGF0ZS0+c2Fn
dl9jYWxjdWxhdGVkKQorCQlnb3RvIG91dDsKKworCWJ3X3N0YXRlLT5jYW5fc2FndiA9IGludGVs
X2NhbGN1bGF0ZV9zYWd2X3Jlc3VsdChkZXZfcHJpdiwgYndfc3RhdGUpOworCWJ3X3N0YXRlLT5z
YWd2X2NhbGN1bGF0ZWQgPSB0cnVlOworCitvdXQ6CisJcmV0dXJuIGJ3X3N0YXRlLT5jYW5fc2Fn
djsKK30KKwogLyoKICAqIENhbGN1bGF0ZSBpbml0aWFsIERCdWYgc2xpY2Ugb2Zmc2V0LCBiYXNl
ZCBvbiBzbGljZSBzaXplCiAgKiBhbmQgbWFzayhpLmUgaWYgc2xpY2Ugc2l6ZSBpcyAxMDI0IGFu
ZCBzZWNvbmQgc2xpY2UgaXMgZW5hYmxlZApAQCAtMzg0Miw2ICszOTg5LDM1IEBAIHN0YXRpYyB1
MTYgaW50ZWxfZ2V0X2RkYl9zaXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikK
IAlyZXR1cm4gZGRiX3NpemU7CiB9CiAKKy8qCisgKiBUbyBiZSB1c2VkIGFmdGVyIHdlIHN3YXAg
c3RhdGUKKyAqLworYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3Yoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQoreworCXN0cnVjdCBpbnRlbF9nbG9iYWxfc3RhdGUgKmdsb2JhbF9z
dGF0ZTsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKmJ3X3N0YXRlOworCisJZ2xvYmFsX3N0YXRl
ID0gZGV2X3ByaXYtPmJ3X29iai5zdGF0ZTsKKwlpZiAoSVNfRVJSKGdsb2JhbF9zdGF0ZSkpIHsK
KwkJV0FSTigxLCAiQ291bGQgbm90IGdldCBnbG9iYWwgc3RhdGVcbiIpOworCQlyZXR1cm4gZmFs
c2U7CisJfQorCisJLyoKKwkgKiBUT0RPOiBTaG91bGQgd2Ugc3RpbGwgbWF5IGJlIGxvY2sgZ2xv
YmFsIHN0YXRlIGhlcmU/CisJICovCisJYndfc3RhdGUgPSB0b19pbnRlbF9id19zdGF0ZShnbG9i
YWxfc3RhdGUpOworCisJaWYgKGJ3X3N0YXRlLT5zYWd2X2NhbGN1bGF0ZWQpCisJCWdvdG8gb3V0
OworCisJYndfc3RhdGUtPmNhbl9zYWd2ID0gaW50ZWxfY2FsY3VsYXRlX3NhZ3ZfcmVzdWx0KGRl
dl9wcml2LCBid19zdGF0ZSk7CisJYndfc3RhdGUtPnNhZ3ZfY2FsY3VsYXRlZCA9IHRydWU7CisK
K291dDoKKwlyZXR1cm4gYndfc3RhdGUtPmNhbl9zYWd2OworfQorCiBzdGF0aWMgdTggc2tsX2Nv
bXB1dGVfZGJ1Zl9zbGljZXMoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3Rh
dGUsCiAJCQkJICB1MzIgYWN0aXZlX3BpcGVzKTsKIApAQCAtNDAyOCw2ICs0MjA0LDcgQEAgc2ts
X2N1cnNvcl9hbGxvY2F0aW9uKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRjX3N0
YXRlLAogCQl1MzIgbGF0ZW5jeSA9IGRldl9wcml2LT53bS5za2xfbGF0ZW5jeVtsZXZlbF07CiAK
IAkJc2tsX2NvbXB1dGVfcGxhbmVfd20oY3J0Y19zdGF0ZSwgbGV2ZWwsIGxhdGVuY3ksICZ3cCwg
JndtLCAmd20pOworCiAJCWlmICh3bS5taW5fZGRiX2FsbG9jID09IFUxNl9NQVgpCiAJCQlicmVh
azsKIApAQCAtNDU1NCwxMiArNDczMSw5MyBAQCBza2xfcGxhbmVfd21fbGV2ZWwoc3RydWN0IGlu
dGVsX3BsYW5lICpwbGFuZSwKIAkJICAgaW50IGxldmVsLAogCQkgICBpbnQgY29sb3JfcGxhbmUp
CiB7CisJc3RydWN0IGRybV9hdG9taWNfc3RhdGUgKnN0YXRlID0gY3J0Y19zdGF0ZS0+dWFwaS5z
dGF0ZTsKKwlzdHJ1Y3QgZHJtX2NydGMgKmNydGMgPSBjcnRjX3N0YXRlLT51YXBpLmNydGM7CisJ
c3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOwog
CWNvbnN0IHN0cnVjdCBza2xfcGxhbmVfd20gKndtID0KIAkJJmNydGNfc3RhdGUtPndtLnNrbC5v
cHRpbWFsLnBsYW5lc1twbGFuZS0+aWRdOwogCisJaWYgKCFsZXZlbCkgeworCQlib29sIGNhbl9z
YWd2ID0gZmFsc2U7CisKKwkJLyoKKwkJICogSWYgd2UgaGF2ZW4ndCB5ZXQgc3dhcHBlZCBvdXIg
c3RhdGUsIHdlIHNob3VsZCB1c2UKKwkJICogdGhlIHN0YXRlIHRvIGRldGVybWluZSBTQUdWLCBv
dGhlcndpc2UgdXNlIGdsb2JhbAorCQkgKiBzdGF0ZSBhcyBhdG9taWMgc3RhdGUgcG9pbnRlciBt
aWdodCBiZWNvbWUgc3RhbGUKKwkJICogYW5kIHplcm9lZCBvdXQuCisJCSAqLworCQlpZiAoc3Rh
dGUpIHsKKwkJCXN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKmludGVsX3N0YXRlID0KKwkJCQl0
b19pbnRlbF9hdG9taWNfc3RhdGUoc3RhdGUpOworCQkJY2FuX3NhZ3YgPSBpbnRlbF9jYW5fZW5h
YmxlX3NhZ3ZfZm9yX3N0YXRlKGludGVsX3N0YXRlKTsKKwkJfSBlbHNlIHsKKwkJCWNhbl9zYWd2
ID0gaW50ZWxfY2FuX2VuYWJsZV9zYWd2KGRldl9wcml2KTsKKwkJfQorCisJCWlmIChjYW5fc2Fn
dikKKwkJCXJldHVybiBjb2xvcl9wbGFuZSA/ICZ3bS0+dXZfc2Fndl93bTAgOiAmd20tPnNhZ3Zf
d20wOworCX0KKwogCXJldHVybiBjb2xvcl9wbGFuZSA/ICZ3bS0+dXZfd21bbGV2ZWxdIDogJndt
LT53bVtsZXZlbF07CiB9CiAKK3N0YXRpYyBpbnQKK3RnbF9jaGVja19waXBlX2ZpdHNfc2Fndl93
bShzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2Ny
dGMgKmNydGMgPSBjcnRjX3N0YXRlLT51YXBpLmNydGM7CisJc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5kZXYpOworCXN0cnVjdCBpbnRlbF9jcnRjICpp
bnRlbF9jcnRjID0gdG9faW50ZWxfY3J0YyhjcnRjKTsKKwlzdHJ1Y3Qgc2tsX2RkYl9lbnRyeSAq
YWxsb2MgPSAmY3J0Y19zdGF0ZS0+d20uc2tsLmRkYjsKKwl1MTYgYWxsb2Nfc2l6ZTsKKwl1NjQg
dG90YWxfZGF0YV9yYXRlOworCWVudW0gcGxhbmVfaWQgcGxhbmVfaWQ7CisJaW50IG51bV9hY3Rp
dmU7CisJdTY0IHBsYW5lX2RhdGFfcmF0ZVtJOTE1X01BWF9QTEFORVNdID0ge307CisJdTMyIGJs
b2NrczsKKworCS8qCisJICogTm8gbmVlZCB0byBjaGVjayBnZW4gaGVyZSwgd2UgY2FsbCB0aGlz
IG9ubHkgZm9yIGdlbjEyCisJICovCisJdG90YWxfZGF0YV9yYXRlID0KKwkJaWNsX2dldF90b3Rh
bF9yZWxhdGl2ZV9kYXRhX3JhdGUoY3J0Y19zdGF0ZSwKKwkJCQkJCSBwbGFuZV9kYXRhX3JhdGUp
OworCisJc2tsX2RkYl9nZXRfcGlwZV9hbGxvY2F0aW9uX2xpbWl0cyhkZXZfcHJpdiwgY3J0Y19z
dGF0ZSwKKwkJCQkJICAgdG90YWxfZGF0YV9yYXRlLAorCQkJCQkgICBhbGxvYywgJm51bV9hY3Rp
dmUpOworCWFsbG9jX3NpemUgPSBza2xfZGRiX2VudHJ5X3NpemUoYWxsb2MpOworCWlmIChhbGxv
Y19zaXplID09IDApCisJCXJldHVybiAtRU5PU1BDOworCisJLyoKKwkgKiBEbyBjaGVjayBpZiB3
ZSBjYW4gZml0IEwwICsgc2Fndl9ibG9ja190aW1lIGFuZAorCSAqIGRpc2FibGUgU0FHViBpZiB3
ZSBjYW4ndC4KKwkgKi8KKwlibG9ja3MgPSAwOworCWZvcl9lYWNoX3BsYW5lX2lkX29uX2NydGMo
aW50ZWxfY3J0YywgcGxhbmVfaWQpIHsKKwkJLyoKKwkJICogVGhlIG9ubHkgcGxhY2UsIHdoZXJl
IHdlIGNhbid0IHVzZSBza2xfcGxhbmVfd21fbGV2ZWwKKwkJICogYWNjZXNzb3IsIGJlY2F1c2Ug
aWYgYWN0dWFsbHkgY2FsbHMgaW50ZWxfY2FuX2VuYWJsZV9zYWd2CisJCSAqIHdoaWNoIGRlcGVu
ZHMgb24gdGhhdCBmdW5jdGlvbi4KKwkJICovCisJCWNvbnN0IHN0cnVjdCBza2xfcGxhbmVfd20g
KndtID0KKwkJCSZjcnRjX3N0YXRlLT53bS5za2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdOwor
CisJCWJsb2NrcyArPSB3bS0+c2Fndl93bTAubWluX2RkYl9hbGxvYzsKKwkJYmxvY2tzICs9IHdt
LT51dl9zYWd2X3dtMC5taW5fZGRiX2FsbG9jOworCisJCWlmIChibG9ja3MgPiBhbGxvY19zaXpl
KSB7CisJCQlEUk1fREVCVUdfS01TKCJOb3QgZW5vdWdoIGRkYiBibG9ja3MoJWQ8JWQpIGZvciBT
QUdWIG9uIHBpcGUgJWNcbiIsCisJCQkJICAgICAgYWxsb2Nfc2l6ZSwgYmxvY2tzLCBwaXBlX25h
bWUoaW50ZWxfY3J0Yy0+cGlwZSkpOworCQkJcmV0dXJuIC1FTk9TUEM7CisJCX0KKwl9CisJRFJN
X0RFQlVHX0tNUygiJWQgdG90YWwgYmxvY2tzIHJlcXVpcmVkIGZvciBTQUdWLCBkZGIgZW50cnkg
c2l6ZSAlZFxuIiwKKwkJICAgICAgYmxvY2tzLCBhbGxvY19zaXplKTsKKwlyZXR1cm4gMDsKK30K
KworCiBzdGF0aWMgaW50CiBza2xfYWxsb2NhdGVfcGlwZV9kZGIoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUpCiB7CkBAIC01MTQzLDExICs1NDAxLDE5IEBAIHN0YXRpYyB2b2lk
IHNrbF9jb21wdXRlX3BsYW5lX3dtKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpjcnRj
X3N0YXRlLAogc3RhdGljIHZvaWQKIHNrbF9jb21wdXRlX3dtX2xldmVscyhjb25zdCBzdHJ1Y3Qg
aW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAkJICAgICAgY29uc3Qgc3RydWN0IHNrbF93
bV9wYXJhbXMgKndtX3BhcmFtcywKLQkJICAgICAgc3RydWN0IHNrbF93bV9sZXZlbCAqbGV2ZWxz
KQorCQkgICAgICBzdHJ1Y3Qgc2tsX3BsYW5lX3dtICpwbGFuZV93bSwKKwkJICAgICAgYm9vbCB5
dXYpCiB7CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRj
X3N0YXRlLT51YXBpLmNydGMtPmRldik7CiAJaW50IGxldmVsLCBtYXhfbGV2ZWwgPSBpbGtfd21f
bWF4X2xldmVsKGRldl9wcml2KTsKKwkvKgorCSAqIENoZWNrIHdoaWNoIGtpbmQgb2YgcGxhbmUg
aXMgaXQgYW5kIGJhc2VkIG9uIHRoYXQgY2FsY3VsYXRlCisJICogY29ycmVzcG9uZGVudCBXTSBs
ZXZlbHMuCisJICovCisJc3RydWN0IHNrbF93bV9sZXZlbCAqbGV2ZWxzID0geXV2ID8gcGxhbmVf
d20tPnV2X3dtIDogcGxhbmVfd20tPndtOwogCXN0cnVjdCBza2xfd21fbGV2ZWwgKnJlc3VsdF9w
cmV2ID0gJmxldmVsc1swXTsKKwlzdHJ1Y3Qgc2tsX3dtX2xldmVsICpzYWd2X3dtID0geXV2ID8K
KwkJCQkmcGxhbmVfd20tPnV2X3NhZ3Zfd20wIDogJnBsYW5lX3dtLT5zYWd2X3dtMDsKIAogCWZv
ciAobGV2ZWwgPSAwOyBsZXZlbCA8PSBtYXhfbGV2ZWw7IGxldmVsKyspIHsKIAkJc3RydWN0IHNr
bF93bV9sZXZlbCAqcmVzdWx0ID0gJmxldmVsc1tsZXZlbF07CkBAIC01MTU4LDYgKzU0MjQsMjcg
QEAgc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpj
cnRjX3N0YXRlLAogCiAJCXJlc3VsdF9wcmV2ID0gcmVzdWx0OwogCX0KKwkvKgorCSAqIEZvciBH
ZW4xMiBpZiBpdCBpcyBhbiBMMCB3ZSBuZWVkIHRvIGFsc28KKwkgKiBjb25zaWRlciBzYWd2X2Js
b2NrX3RpbWUgd2hlbiBjYWxjdWxhdGluZworCSAqIEwwIHdhdGVybWFyayAtIHdlIHdpbGwgbmVl
ZCB0aGF0IHdoZW4gbWFraW5nCisJICogYSBkZWNpc2lvbiB3aGV0aGVyIGVuYWJsZSBTQUdWIG9y
IG5vdC4KKwkgKiBGb3Igb2xkZXIgZ2VucyB3ZSBhZ3JlZWQgdG8gY29weSBMMCB2YWx1ZSBmb3IK
KwkgKiBjb21wYXRpYmlsaXR5LgorCSAqLworCWlmICgoSU5URUxfR0VOKGRldl9wcml2KSA+PSAx
MikpIHsKKwkJdTMyIGxhdGVuY3kgPSBkZXZfcHJpdi0+d20uc2tsX2xhdGVuY3lbMF07CisKKwkJ
bGF0ZW5jeSArPSBkZXZfcHJpdi0+c2Fndl9ibG9ja190aW1lX3VzOworCQlza2xfY29tcHV0ZV9w
bGFuZV93bShjcnRjX3N0YXRlLCAwLCBsYXRlbmN5LAorCQkJCSAgICAgd21fcGFyYW1zLCAmbGV2
ZWxzWzBdLAorCQkJCSAgICAgc2Fndl93bSk7CisJCURSTV9ERUJVR19LTVMoIiVkIEwwIGJsb2Nr
cyByZXF1aXJlZCBmb3IgU0FHViB2cyAlZCBmb3Igbm9uLVNBR1ZcbiIsCisJCQkgICAgICBzYWd2
X3dtLT5taW5fZGRiX2FsbG9jLCBsZXZlbHNbMF0ubWluX2RkYl9hbGxvYyk7CisJfSBlbHNlIHsK
KwkJLyogU2luY2UgYWxsIG1lbWJlcnMgYXJlIFBPRCAqLworCQkqc2Fndl93bSA9IGxldmVsc1sw
XTsKKwl9CiB9CiAKIHN0YXRpYyB2b2lkIHNrbF9jb21wdXRlX3RyYW5zaXRpb25fd20oY29uc3Qg
c3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNfc3RhdGUsCkBAIC01MjMyLDcgKzU1MTksNyBA
QCBzdGF0aWMgaW50IHNrbF9idWlsZF9wbGFuZV93bV9zaW5nbGUoc3RydWN0IGludGVsX2NydGNf
c3RhdGUgKmNydGNfc3RhdGUsCiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKIAotCXNrbF9jb21w
dXRlX3dtX2xldmVscyhjcnRjX3N0YXRlLCAmd21fcGFyYW1zLCB3bS0+d20pOworCXNrbF9jb21w
dXRlX3dtX2xldmVscyhjcnRjX3N0YXRlLCAmd21fcGFyYW1zLCB3bSwgZmFsc2UpOwogCXNrbF9j
b21wdXRlX3RyYW5zaXRpb25fd20oY3J0Y19zdGF0ZSwgJndtX3BhcmFtcywgd20pOwogCiAJcmV0
dXJuIDA7CkBAIC01MjU0LDcgKzU1NDEsNyBAQCBzdGF0aWMgaW50IHNrbF9idWlsZF9wbGFuZV93
bV91dihzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSwKIAlpZiAocmV0KQogCQly
ZXR1cm4gcmV0OwogCi0Jc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9wYXJh
bXMsIHdtLT51dl93bSk7CisJc2tsX2NvbXB1dGVfd21fbGV2ZWxzKGNydGNfc3RhdGUsICZ3bV9w
YXJhbXMsIHdtLCB0cnVlKTsKIAogCXJldHVybiAwOwogfQpAQCAtNTU4NSwxMCArNTg3MiwyOSBA
QCBza2xfcHJpbnRfd21fY2hhbmdlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkK
IAkJZm9yX2VhY2hfaW50ZWxfcGxhbmVfb25fY3J0YygmZGV2X3ByaXYtPmRybSwgY3J0YywgcGxh
bmUpIHsKIAkJCWVudW0gcGxhbmVfaWQgcGxhbmVfaWQgPSBwbGFuZS0+aWQ7CiAJCQljb25zdCBz
dHJ1Y3Qgc2tsX3BsYW5lX3dtICpvbGRfd20sICpuZXdfd207CisJCQl1MTYgb2xkX3BsYW5lX3Jl
c19sLCBuZXdfcGxhbmVfcmVzX2w7CisJCQl1OCAgb2xkX3BsYW5lX3Jlc19iLCBuZXdfcGxhbmVf
cmVzX2I7CisJCQl1MTYgb2xkX21pbl9kZGJfYWxsb2MsIG5ld19taW5fZGRiX2FsbG9jOwogCiAJ
CQlvbGRfd20gPSAmb2xkX3BpcGVfd20tPnBsYW5lc1twbGFuZV9pZF07CiAJCQluZXdfd20gPSAm
bmV3X3BpcGVfd20tPnBsYW5lc1twbGFuZV9pZF07CiAKKwkJCW9sZF9wbGFuZV9yZXNfbCA9IGlu
dGVsX2Nhbl9lbmFibGVfc2FndihkZXZfcHJpdikgPworCQkJCQkgIG9sZF93bS0+c2Fndl93bTAu
cGxhbmVfcmVzX2wgOiBvbGRfd20tPndtWzBdLnBsYW5lX3Jlc19sOworCQkJb2xkX3BsYW5lX3Jl
c19iID0gaW50ZWxfY2FuX2VuYWJsZV9zYWd2KGRldl9wcml2KSA/CisJCQkJCSAgb2xkX3dtLT5z
YWd2X3dtMC5wbGFuZV9yZXNfYiA6IG9sZF93bS0+d21bMF0ucGxhbmVfcmVzX2I7CisKKwkJCW5l
d19wbGFuZV9yZXNfbCA9IGludGVsX2Nhbl9lbmFibGVfc2Fndl9mb3Jfc3RhdGUoc3RhdGUpID8K
KwkJCQkJICBuZXdfd20tPnNhZ3Zfd20wLnBsYW5lX3Jlc19sIDogbmV3X3dtLT53bVswXS5wbGFu
ZV9yZXNfbDsKKwkJCW5ld19wbGFuZV9yZXNfYiA9IGludGVsX2Nhbl9lbmFibGVfc2Fndl9mb3Jf
c3RhdGUoc3RhdGUpID8KKwkJCQkJICBuZXdfd20tPnNhZ3Zfd20wLnBsYW5lX3Jlc19iIDogbmV3
X3dtLT53bVswXS5wbGFuZV9yZXNfYjsKKworCQkJb2xkX21pbl9kZGJfYWxsb2MgPSBpbnRlbF9j
YW5fZW5hYmxlX3NhZ3YoZGV2X3ByaXYpID8KKwkJCQkJICAgIG9sZF93bS0+c2Fndl93bTAubWlu
X2RkYl9hbGxvYyA6IG9sZF93bS0+d21bMF0ubWluX2RkYl9hbGxvYzsKKworCQkJbmV3X21pbl9k
ZGJfYWxsb2MgPSBpbnRlbF9jYW5fZW5hYmxlX3NhZ3ZfZm9yX3N0YXRlKHN0YXRlKSA/CisJCQkJ
CSAgICBuZXdfd20tPnNhZ3Zfd20wLm1pbl9kZGJfYWxsb2MgOiBuZXdfd20tPndtWzBdLm1pbl9k
ZGJfYWxsb2M7CisKIAkJCWlmIChza2xfcGxhbmVfd21fZXF1YWxzKGRldl9wcml2LCBvbGRfd20s
IG5ld193bSkpCiAJCQkJY29udGludWU7CiAKQEAgLTU2MTEsNyArNTkxNyw3IEBAIHNrbF9wcmlu
dF93bV9jaGFuZ2VzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQkJCSAgICAi
W1BMQU5FOiVkOiVzXSAgIGxpbmVzICVjJTNkLCVjJTNkLCVjJTNkLCVjJTNkLCVjJTNkLCVjJTNk
LCVjJTNkLCVjJTNkLCVjJTNkIgogCQkJCSAgICAgICIgLT4gJWMlM2QsJWMlM2QsJWMlM2QsJWMl
M2QsJWMlM2QsJWMlM2QsJWMlM2QsJWMlM2QsJWMlM2RcbiIsCiAJCQkJICAgIHBsYW5lLT5iYXNl
LmJhc2UuaWQsIHBsYW5lLT5iYXNlLm5hbWUsCi0JCQkJICAgIGVuYXN0KG9sZF93bS0+d21bMF0u
aWdub3JlX2xpbmVzKSwgb2xkX3dtLT53bVswXS5wbGFuZV9yZXNfbCwKKwkJCQkgICAgZW5hc3Qo
b2xkX3dtLT53bVswXS5pZ25vcmVfbGluZXMpLCBvbGRfcGxhbmVfcmVzX2wsCiAJCQkJICAgIGVu
YXN0KG9sZF93bS0+d21bMV0uaWdub3JlX2xpbmVzKSwgb2xkX3dtLT53bVsxXS5wbGFuZV9yZXNf
bCwKIAkJCQkgICAgZW5hc3Qob2xkX3dtLT53bVsyXS5pZ25vcmVfbGluZXMpLCBvbGRfd20tPndt
WzJdLnBsYW5lX3Jlc19sLAogCQkJCSAgICBlbmFzdChvbGRfd20tPndtWzNdLmlnbm9yZV9saW5l
cyksIG9sZF93bS0+d21bM10ucGxhbmVfcmVzX2wsCkBAIC01NjIxLDcgKzU5MjcsNyBAQCBza2xf
cHJpbnRfd21fY2hhbmdlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJCQkg
ICAgZW5hc3Qob2xkX3dtLT53bVs3XS5pZ25vcmVfbGluZXMpLCBvbGRfd20tPndtWzddLnBsYW5l
X3Jlc19sLAogCQkJCSAgICBlbmFzdChvbGRfd20tPnRyYW5zX3dtLmlnbm9yZV9saW5lcyksIG9s
ZF93bS0+dHJhbnNfd20ucGxhbmVfcmVzX2wsCiAKLQkJCQkgICAgZW5hc3QobmV3X3dtLT53bVsw
XS5pZ25vcmVfbGluZXMpLCBuZXdfd20tPndtWzBdLnBsYW5lX3Jlc19sLAorCQkJCSAgICBlbmFz
dChuZXdfd20tPndtWzBdLmlnbm9yZV9saW5lcyksIG5ld19wbGFuZV9yZXNfbCwKIAkJCQkgICAg
ZW5hc3QobmV3X3dtLT53bVsxXS5pZ25vcmVfbGluZXMpLCBuZXdfd20tPndtWzFdLnBsYW5lX3Jl
c19sLAogCQkJCSAgICBlbmFzdChuZXdfd20tPndtWzJdLmlnbm9yZV9saW5lcyksIG5ld193bS0+
d21bMl0ucGxhbmVfcmVzX2wsCiAJCQkJICAgIGVuYXN0KG5ld193bS0+d21bM10uaWdub3JlX2xp
bmVzKSwgbmV3X3dtLT53bVszXS5wbGFuZV9yZXNfbCwKQEAgLTU2MzUsMTIgKzU5NDEsMTIgQEAg
c2tsX3ByaW50X3dtX2NoYW5nZXMoc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJ
CQkJICAgICJbUExBTkU6JWQ6JXNdICBibG9ja3MgJTRkLCU0ZCwlNGQsJTRkLCU0ZCwlNGQsJTRk
LCU0ZCwlNGQiCiAJCQkJICAgICIgLT4gJTRkLCU0ZCwlNGQsJTRkLCU0ZCwlNGQsJTRkLCU0ZCwl
NGRcbiIsCiAJCQkJICAgIHBsYW5lLT5iYXNlLmJhc2UuaWQsIHBsYW5lLT5iYXNlLm5hbWUsCi0J
CQkJICAgIG9sZF93bS0+d21bMF0ucGxhbmVfcmVzX2IsIG9sZF93bS0+d21bMV0ucGxhbmVfcmVz
X2IsCisJCQkJICAgIG9sZF9wbGFuZV9yZXNfYiwgb2xkX3dtLT53bVsxXS5wbGFuZV9yZXNfYiwK
IAkJCQkgICAgb2xkX3dtLT53bVsyXS5wbGFuZV9yZXNfYiwgb2xkX3dtLT53bVszXS5wbGFuZV9y
ZXNfYiwKIAkJCQkgICAgb2xkX3dtLT53bVs0XS5wbGFuZV9yZXNfYiwgb2xkX3dtLT53bVs1XS5w
bGFuZV9yZXNfYiwKIAkJCQkgICAgb2xkX3dtLT53bVs2XS5wbGFuZV9yZXNfYiwgb2xkX3dtLT53
bVs3XS5wbGFuZV9yZXNfYiwKIAkJCQkgICAgb2xkX3dtLT50cmFuc193bS5wbGFuZV9yZXNfYiwK
LQkJCQkgICAgbmV3X3dtLT53bVswXS5wbGFuZV9yZXNfYiwgbmV3X3dtLT53bVsxXS5wbGFuZV9y
ZXNfYiwKKwkJCQkgICAgbmV3X3BsYW5lX3Jlc19iLCBuZXdfd20tPndtWzFdLnBsYW5lX3Jlc19i
LAogCQkJCSAgICBuZXdfd20tPndtWzJdLnBsYW5lX3Jlc19iLCBuZXdfd20tPndtWzNdLnBsYW5l
X3Jlc19iLAogCQkJCSAgICBuZXdfd20tPndtWzRdLnBsYW5lX3Jlc19iLCBuZXdfd20tPndtWzVd
LnBsYW5lX3Jlc19iLAogCQkJCSAgICBuZXdfd20tPndtWzZdLnBsYW5lX3Jlc19iLCBuZXdfd20t
PndtWzddLnBsYW5lX3Jlc19iLApAQCAtNTY1MCwxMiArNTk1NiwxMiBAQCBza2xfcHJpbnRfd21f
Y2hhbmdlcyhzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkKIAkJCQkgICAgIltQTEFO
RTolZDolc10gbWluX2RkYiAlNGQsJTRkLCU0ZCwlNGQsJTRkLCU0ZCwlNGQsJTRkLCU0ZCIKIAkJ
CQkgICAgIiAtPiAlNGQsJTRkLCU0ZCwlNGQsJTRkLCU0ZCwlNGQsJTRkLCU0ZFxuIiwKIAkJCQkg
ICAgcGxhbmUtPmJhc2UuYmFzZS5pZCwgcGxhbmUtPmJhc2UubmFtZSwKLQkJCQkgICAgb2xkX3dt
LT53bVswXS5taW5fZGRiX2FsbG9jLCBvbGRfd20tPndtWzFdLm1pbl9kZGJfYWxsb2MsCisJCQkJ
ICAgIG9sZF9taW5fZGRiX2FsbG9jLCBvbGRfd20tPndtWzFdLm1pbl9kZGJfYWxsb2MsCiAJCQkJ
ICAgIG9sZF93bS0+d21bMl0ubWluX2RkYl9hbGxvYywgb2xkX3dtLT53bVszXS5taW5fZGRiX2Fs
bG9jLAogCQkJCSAgICBvbGRfd20tPndtWzRdLm1pbl9kZGJfYWxsb2MsIG9sZF93bS0+d21bNV0u
bWluX2RkYl9hbGxvYywKIAkJCQkgICAgb2xkX3dtLT53bVs2XS5taW5fZGRiX2FsbG9jLCBvbGRf
d20tPndtWzddLm1pbl9kZGJfYWxsb2MsCiAJCQkJICAgIG9sZF93bS0+dHJhbnNfd20ubWluX2Rk
Yl9hbGxvYywKLQkJCQkgICAgbmV3X3dtLT53bVswXS5taW5fZGRiX2FsbG9jLCBuZXdfd20tPndt
WzFdLm1pbl9kZGJfYWxsb2MsCisJCQkJICAgIG5ld19taW5fZGRiX2FsbG9jLCBuZXdfd20tPndt
WzFdLm1pbl9kZGJfYWxsb2MsCiAJCQkJICAgIG5ld193bS0+d21bMl0ubWluX2RkYl9hbGxvYywg
bmV3X3dtLT53bVszXS5taW5fZGRiX2FsbG9jLAogCQkJCSAgICBuZXdfd20tPndtWzRdLm1pbl9k
ZGJfYWxsb2MsIG5ld193bS0+d21bNV0ubWluX2RkYl9hbGxvYywKIAkJCQkgICAgbmV3X3dtLT53
bVs2XS5taW5fZGRiX2FsbG9jLCBuZXdfd20tPndtWzddLm1pbl9kZGJfYWxsb2MsCkBAIC01NzU1
LDcgKzYwNjEsOCBAQCBza2xfZGRiX2FkZF9hZmZlY3RlZF9waXBlcyhzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSkKICAqIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHdhdGVybWFya3MgcmVn
aXN0ZXJzIGlzIG5vdCB6ZXJvLgogICovCiBzdGF0aWMgaW50IHNrbF93bV9hZGRfYWZmZWN0ZWRf
cGxhbmVzKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlLAotCQkJCSAgICAgIHN0cnVj
dCBpbnRlbF9jcnRjICpjcnRjKQorCQkJCSAgICAgIHN0cnVjdCBpbnRlbF9jcnRjICpjcnRjLAor
CQkJCSAgICAgIGludCAqbnVtX2FmZmVjdGVkX3BsYW5lcykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqZGV2X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKIAljb25zdCBzdHJ1
Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqb2xkX2NydGNfc3RhdGUgPQpAQCAtNTc2NCw2ICs2MDcxLDgg
QEAgc3RhdGljIGludCBza2xfd21fYWRkX2FmZmVjdGVkX3BsYW5lcyhzdHJ1Y3QgaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSwKIAkJaW50ZWxfYXRvbWljX2dldF9uZXdfY3J0Y19zdGF0ZShzdGF0
ZSwgY3J0Yyk7CiAJc3RydWN0IGludGVsX3BsYW5lICpwbGFuZTsKIAorCSpudW1fYWZmZWN0ZWRf
cGxhbmVzID0gMDsKKwogCWZvcl9lYWNoX2ludGVsX3BsYW5lX29uX2NydGMoJmRldl9wcml2LT5k
cm0sIGNydGMsIHBsYW5lKSB7CiAJCXN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3Rh
dGU7CiAJCWVudW0gcGxhbmVfaWQgcGxhbmVfaWQgPSBwbGFuZS0+aWQ7CkBAIC01Nzg3LDExICs2
MDk2LDY0IEBAIHN0YXRpYyBpbnQgc2tsX3dtX2FkZF9hZmZlY3RlZF9wbGFuZXMoc3RydWN0IGlu
dGVsX2F0b21pY19zdGF0ZSAqc3RhdGUsCiAJCQlyZXR1cm4gUFRSX0VSUihwbGFuZV9zdGF0ZSk7
CiAKIAkJbmV3X2NydGNfc3RhdGUtPnVwZGF0ZV9wbGFuZXMgfD0gQklUKHBsYW5lX2lkKTsKKwkJ
Km51bV9hZmZlY3RlZF9wbGFuZXMgKz0gMTsKIAl9CiAKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGlj
IHZvaWQgdGdsX2NvbXB1dGVfc2Fndl9tYXNrKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0
YXRlKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoc3Rh
dGUtPmJhc2UuZGV2KTsKKwlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsKKwlzdHJ1Y3QgaW50ZWxf
Y3J0Y19zdGF0ZSAqbmV3X2NydGNfc3RhdGU7CisJc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm9s
ZF9jcnRjX3N0YXRlOworCWludCByZXQ7CisJaW50IGk7CisJc3RydWN0IGludGVsX3BsYW5lICpw
bGFuZTsKKwlzdHJ1Y3QgaW50ZWxfYndfc3RhdGUgKm5ld19id19zdGF0ZSAgPSBpbnRlbF9hdG9t
aWNfZ2V0X2J3X3N0YXRlKHN0YXRlKTsKKworCWlmIChJU19FUlIobmV3X2J3X3N0YXRlKSkgewor
CQlXQVJOKDEsICJDb3VsZCBub3QgZ2V0IGJ3X3N0YXRlXG4iKTsKKwkJcmV0dXJuOworCX0KKwor
CWZvcl9lYWNoX29sZG5ld19pbnRlbF9jcnRjX2luX3N0YXRlKHN0YXRlLCBjcnRjLCBvbGRfY3J0
Y19zdGF0ZSwKKwkJCQkJICAgIG5ld19jcnRjX3N0YXRlLCBpKSB7CisJCWludCBwaXBlX2JpdCA9
IEJJVChjcnRjLT5waXBlKTsKKwkJYm9vbCBza2lwID0gdHJ1ZTsKKworCQkvKgorCQkgKiBJZiB3
ZSBoYWQgc2V0IHRoaXMgbWFzdCBhbHJlYWR5IG9uY2UgZm9yIHRoaXMgc3RhdGUsCisJCSAqIG5v
IG5lZWQgdG8gd2FzdGUgQ1BVIGN5Y2xlcyBmb3IgZG9pbmcgdGhpcyBhZ2Fpbi4KKwkJICovCisJ
CWZvcl9lYWNoX2ludGVsX3BsYW5lX29uX2NydGMoJmRldl9wcml2LT5kcm0sIGNydGMsIHBsYW5l
KSB7CisJCQllbnVtIHBsYW5lX2lkIHBsYW5lX2lkID0gcGxhbmUtPmlkOworCisJCQlpZiAoIXNr
bF9wbGFuZV93bV9lcXVhbHMoZGV2X3ByaXYsCisJCQkJCQkgJm9sZF9jcnRjX3N0YXRlLT53bS5z
a2wub3B0aW1hbC5wbGFuZXNbcGxhbmVfaWRdLAorCQkJCQkJICZuZXdfY3J0Y19zdGF0ZS0+d20u
c2tsLm9wdGltYWwucGxhbmVzW3BsYW5lX2lkXSkpIHsKKwkJCQlza2lwID0gZmFsc2U7CisJCQkJ
YnJlYWs7CisJCQl9CisJCX0KKworCQkvKgorCQkgKiBDaGVjayBpZiB3bSBsZXZlbHMgYXJlIGFj
dHVhbGx5IHRoZSBzYW1lIGFzIGZvciBwcmV2aW91cworCQkgKiBzdGF0ZSwgd2hpY2ggbWVhbnMg
d2UgY2FuIGp1c3Qgc2tpcCBkb2luZyB0aGlzIGxvbmcgY2hlY2sKKwkJICogYW5kIGp1c3QgIGNv
cHkgY29ycmVzcG9uZGVudCBiaXQgZnJvbSBwcmV2aW91cyBzdGF0ZS4KKwkJICovCisJCWlmIChz
a2lwKQorCQkJY29udGludWU7CisKKwkJcmV0ID0gdGdsX2NoZWNrX3BpcGVfZml0c19zYWd2X3dt
KG5ld19jcnRjX3N0YXRlKTsKKwkJaWYgKCFyZXQpCisJCQluZXdfYndfc3RhdGUtPnBpcGVfc2Fn
dl9tYXNrIHw9IHBpcGVfYml0OworCQllbHNlCisJCQluZXdfYndfc3RhdGUtPnBpcGVfc2Fndl9t
YXNrICY9IH5waXBlX2JpdDsKKwl9Cit9CisKIHN0YXRpYyBpbnQKIHNrbF9jb21wdXRlX3dtKHN0
cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogewpAQCAtNTc5OSw2ICs2MTYxLDcgQEAg
c2tsX2NvbXB1dGVfd20oc3RydWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpCiAJc3RydWN0
IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlOwogCXN0cnVjdCBpbnRlbF9jcnRjX3N0
YXRlICpvbGRfY3J0Y19zdGF0ZTsKIAlpbnQgcmV0LCBpOworCWludCBhZmZlY3RlZF9wbGFuZXM7
IGludCB0b3RhbF9hZmZlY3RlZF9wbGFuZXMgPSAwOwogCiAJcmV0ID0gc2tsX2RkYl9hZGRfYWZm
ZWN0ZWRfcGlwZXMoc3RhdGUpOwogCWlmIChyZXQpCkBAIC01ODE1LDExICs2MTc4LDE1IEBAIHNr
bF9jb21wdXRlX3dtKHN0cnVjdCBpbnRlbF9hdG9taWNfc3RhdGUgKnN0YXRlKQogCQlpZiAocmV0
KQogCQkJcmV0dXJuIHJldDsKIAotCQlyZXQgPSBza2xfd21fYWRkX2FmZmVjdGVkX3BsYW5lcyhz
dGF0ZSwgY3J0Yyk7CisJCXJldCA9IHNrbF93bV9hZGRfYWZmZWN0ZWRfcGxhbmVzKHN0YXRlLCBj
cnRjLCAmYWZmZWN0ZWRfcGxhbmVzKTsKIAkJaWYgKHJldCkKIAkJCXJldHVybiByZXQ7CisKKwkJ
dG90YWxfYWZmZWN0ZWRfcGxhbmVzICs9IGFmZmVjdGVkX3BsYW5lczsKIAl9CiAKKwlpbnRlbF9j
b21wdXRlX3NhZ3ZfbWFzayhzdGF0ZSwgdG90YWxfYWZmZWN0ZWRfcGxhbmVzKTsKKwogCXJldCA9
IHNrbF9jb21wdXRlX2RkYihzdGF0ZSk7CiAJaWYgKHJldCkKIAkJcmV0dXJuIHJldDsKQEAgLTU5
MzksNiArNjMwNiw5IEBAIHZvaWQgc2tsX3BpcGVfd21fZ2V0X2h3X3N0YXRlKHN0cnVjdCBpbnRl
bF9jcnRjICpjcnRjLAogCQkJCXZhbCA9IEk5MTVfUkVBRChDVVJfV00ocGlwZSwgbGV2ZWwpKTsK
IAogCQkJc2tsX3dtX2xldmVsX2Zyb21fcmVnX3ZhbCh2YWwsICZ3bS0+d21bbGV2ZWxdKTsKKwkJ
CWlmIChsZXZlbCA9PSAwKQorCQkJCW1lbWNweSgmd20tPnNhZ3Zfd20wLCAmd20tPndtW2xldmVs
XSwKKwkJCQkgICAgICAgc2l6ZW9mKHN0cnVjdCBza2xfd21fbGV2ZWwpKTsKIAkJfQogCiAJCWlm
IChwbGFuZV9pZCAhPSBQTEFORV9DVVJTT1IpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9pbnRlbF9wbS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcG0uaAppbmRleCBk
NjBhODU0MjFjNWEuLjU2MWExN2E1ZDRlMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvaW50ZWxfcG0uaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9wbS5oCkBAIC00
MSw3ICs0MSw5IEBAIHZvaWQgc2tsX3BpcGVfd21fZ2V0X2h3X3N0YXRlKHN0cnVjdCBpbnRlbF9j
cnRjICpjcnRjLAogCQkJICAgICAgc3RydWN0IHNrbF9waXBlX3dtICpvdXQpOwogdm9pZCBnNHhf
d21fc2FuaXRpemUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgdmx2
X3dtX3Nhbml0aXplKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7Ci1ib29sIGlu
dGVsX2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSk7Citi
b29sIGludGVsX2Nhbl9lbmFibGVfc2FndihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpOworYm9vbCBpbnRlbF9jYW5fZW5hYmxlX3NhZ3ZfZm9yX3N0YXRlKHN0cnVjdCBpbnRlbF9h
dG9taWNfc3RhdGUgKnN0YXRlKTsKK2Jvb2wgaW50ZWxfaGFzX3NhZ3Yoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2KTsKIGludCBpbnRlbF9lbmFibGVfc2FndihzdHJ1Y3QgZHJtX2k5
MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogaW50IGludGVsX2Rpc2FibGVfc2FndihzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogYm9vbCBza2xfd21fbGV2ZWxfZXF1YWxzKGNvbnN0
IHN0cnVjdCBza2xfd21fbGV2ZWwgKmwxLAotLSAKMi4yNC4xLjQ4NS5nYWQwNWEzZDhlNQoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1h
aWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMu
ZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

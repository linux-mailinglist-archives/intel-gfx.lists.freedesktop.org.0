Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id E17184C962
	for <lists+intel-gfx@lfdr.de>; Thu, 20 Jun 2019 10:24:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8359289D87;
	Thu, 20 Jun 2019 08:24:39 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2DD6088F0D
 for <intel-gfx@lists.freedesktop.org>; Thu, 20 Jun 2019 08:24:37 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 16962371-1500050 
 for multiple; Thu, 20 Jun 2019 09:24:26 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 20 Jun 2019 09:24:28 +0100
Message-Id: <20190620082428.29524-1-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190620070559.30076-1-chris@chris-wilson.co.uk>
References: <20190620070559.30076-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH] drm/i915/execlists: Preempt-to-busy
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

V2hlbiB1c2luZyBhIGdsb2JhbCBzZXFubywgd2UgcmVxdWlyZWQgYSBwcmVjaXNlIHN0b3AtdGhl
LXdvcmtkIGV2ZW50IHRvCmhhbmRsZSBwcmVlbXB0aW9uIGFuZCB1bndpbmQgdGhlIGdsb2JhbCBz
ZXFubyBjb3VudGVyLiBUbyBhY2NvbXBsaXNoCnRoaXMsIHdlIHdvdWxkIHByZWVtcHQgdG8gYSBz
cGVjaWFsIG91dC1vZi1iYW5kIGNvbnRleHQgYW5kIHdhaXQgZm9yIHRoZQptYWNoaW5lIHRvIHJl
cG9ydCB0aGF0IGl0IHdhcyBpZGxlLiBHaXZlbiBhbiBpZGxlIG1hY2hpbmUsIHdlIGNvdWxkIHZl
cnkKcHJlY2lzZWx5IHNlZSB3aGljaCByZXF1ZXN0cyBoYWQgY29tcGxldGVkIGFuZCB3aGljaCB3
ZSBuZWVkZWQgdG8gZmVlZApiYWNrIGludG8gdGhlIHJ1biBxdWV1ZS4KCkhvd2V2ZXIsIG5vdyB0
aGF0IHdlIGhhdmUgc2NyYXBwZWQgdGhlIGdsb2JhbCBzZXFubywgd2Ugbm8gbG9uZ2VyIG5lZWQK
dG8gcHJlY2lzZWx5IHVud2luZCB0aGUgZ2xvYmFsIGNvdW50ZXIgYW5kIG9ubHkgdHJhY2sgcmVx
dWVzdHMgYnkgdGhlaXIKcGVyLWNvbnRleHQgc2Vxbm8uIFRoaXMgYWxsb3dzIHVzIHRvIGxvb3Nl
bHkgdW53aW5kIGluZmxpZ2h0IHJlcXVlc3RzCndoaWxlIHNjaGVkdWxpbmcgYSBwcmVlbXB0aW9u
LCB3aXRoIHRoZSBlbm9ybW91cyBjYXZlYXQgdGhhdCB0aGUKcmVxdWVzdHMgd2UgcHV0IGJhY2sg
b24gdGhlIHJ1biBxdWV1ZSBhcmUgc3RpbGwgX2luZmxpZ2h0XyAodW50aWwgdGhlCnByZWVtcHRp
b24gcmVxdWVzdCBpcyBjb21wbGV0ZSkuIFRoaXMgbWFrZXMgcmVxdWVzdCB0cmFja2luZyBtdWNo
IG1vcmUKbWVzc3ksIGFzIGF0IGFueSBwb2ludCB0aGVuIHdlIGNhbiBzZWUgYSBjb21wbGV0ZWQg
cmVxdWVzdCB0aGF0IHdlCmJlbGlldmUgaXMgbm90IGN1cnJlbnRseSBzY2hlZHVsZWQgZm9yIGV4
ZWN1dGlvbi4gV2UgYWxzbyBoYXZlIHRvIGJlCmNhcmVmdWwgbm90IHRvIHJld2luZCBSSU5HX1RB
SUwgcGFzdCBSSU5HX0hFQUQgb24gcHJlZW1wdGluZyB0byB0aGUKcnVubmluZyBjb250ZXh0LCBh
bmQgZm9yIHRoaXMgd2UgdXNlIGEgc2VtYXBob3JlIHRvIHByZXZlbnQgY29tcGxldGlvbgpvZiB0
aGUgcmVxdWVzdCBiZWZvcmUgY29udGludWluZy4KClRvIGFjY29tcGxpc2ggdGhpcyBmZWF0LCB3
ZSBjaGFuZ2UgaG93IHdlIHRyYWNrIHJlcXVlc3RzIHNjaGVkdWxlZCB0bwp0aGUgSFcuIEluc3Rl
YWQgb2YgYXBwZW5kaW5nIG91ciByZXF1ZXN0cyBvbnRvIGEgc2luZ2xlIGxpc3QgYXMgd2UKc3Vi
bWl0LCB3ZSB0cmFjayBlYWNoIHN1Ym1pc3Npb24gdG8gRUxTUCBhcyBpdHMgb3duIGJsb2NrLiBU
aGVuIHVwb24KcmVjZWl2aW5nIHRoZSBDUyBwcmVlbXB0aW9uIGV2ZW50LCB3ZSBwcm9tb3RlIHRo
ZSBwZW5kaW5nIGJsb2NrIHRvIHRoZQppbmZsaWdodCBibG9jayAoZGlzY2FyZGluZyB3aGF0IHdh
cyBwcmV2aW91c2x5IGJlaW5nIHRyYWNrZWQpLiBBcyBub3JtYWwKQ1MgY29tcGxldGlvbiBldmVu
dHMgYXJyaXZlLCB3ZSB0aGVuIHJlbW92ZSBzdGFsZSBlbnRyaWVzIGZyb20gdGhlCmluZmxpZ2h0
IHRyYWNrZXIuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlzLXdpbHNv
bi5jby51az4KLS0tClNraXAgdGhlIGJvbnVzIGFzc2VydHMgaWYgdGhlIGNvbnRleHQgaXMgYWxy
ZWFkeSBjb21wbGV0ZWQuCi0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2Nv
bnRleHQuYyAgIHwgICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0
X3R5cGVzLmggfCAgIDUgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgg
ICAgICAgIHwgIDYxICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3Mu
YyAgICAgfCAgNjMgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBl
cy5oICB8ICA1MiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgICAgICAg
ICAgIHwgNjc4ICsrKysrKysrLS0tLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9n
cHVfZXJyb3IuYyAgICAgICAgIHwgIDE5ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3Jl
cXVlc3QuYyAgICAgICAgICAgfCAgIDYgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1
ZXN0LmggICAgICAgICAgIHwgICAxICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1
bGVyLmMgICAgICAgICB8ICAgMyArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV91dGlscy5o
ICAgICAgICAgICAgIHwgIDEyICsKIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1Y19zdWJt
aXNzaW9uLmMgICB8IDE3NSArKy0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5
MTVfcmVxdWVzdC5jIHwgICA4ICstCiAxMyBmaWxlcyBjaGFuZ2VkLCA0NzUgaW5zZXJ0aW9ucygr
KSwgNjEwIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9jb250ZXh0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1f
Y29udGV4dC5jCmluZGV4IDBmMmMyMmEzYmNiNi4uMzU4NzFjOGE0MmE2IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fY29udGV4dC5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9jb250ZXh0LmMKQEAgLTY0Niw3ICs2NDYsNyBAQCBz
dGF0aWMgdm9pZCBpbml0X2NvbnRleHRzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1KQog
CiBzdGF0aWMgYm9vbCBuZWVkc19wcmVlbXB0X2NvbnRleHQoc3RydWN0IGRybV9pOTE1X3ByaXZh
dGUgKmk5MTUpCiB7Ci0JcmV0dXJuIEhBU19FWEVDTElTVFMoaTkxNSk7CisJcmV0dXJuIFVTRVNf
R1VDX1NVQk1JU1NJT04oaTkxNSk7CiB9CiAKIGludCBpOTE1X2dlbV9jb250ZXh0c19pbml0KHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaAppbmRleCAwODA0OWVlOTFjZWUuLjRjMGUyMTFjNzE1
ZCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfY29udGV4dF90eXBl
cy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2NvbnRleHRfdHlwZXMuaApA
QCAtMTMsNiArMTMsNyBAQAogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAKICNpbmNsdWRlICJp
OTE1X2FjdGl2ZV90eXBlcy5oIgorI2luY2x1ZGUgImk5MTVfdXRpbHMuaCIKICNpbmNsdWRlICJp
bnRlbF9lbmdpbmVfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9zc2V1LmgiCiAKQEAgLTM4LDYg
KzM5LDEwIEBAIHN0cnVjdCBpbnRlbF9jb250ZXh0IHsKIAlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4
dCAqZ2VtX2NvbnRleHQ7CiAJc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lOwogCXN0cnVj
dCBpbnRlbF9lbmdpbmVfY3MgKmluZmxpZ2h0OworI2RlZmluZSBpbnRlbF9jb250ZXh0X2luZmxp
Z2h0KGNlKSBwdHJfbWFza19iaXRzKChjZSktPmluZmxpZ2h0LCAyKQorI2RlZmluZSBpbnRlbF9j
b250ZXh0X2luZmxpZ2h0X2NvdW50KGNlKSAgcHRyX3VubWFza19iaXRzKChjZSktPmluZmxpZ2h0
LCAyKQorI2RlZmluZSBpbnRlbF9jb250ZXh0X2luZmxpZ2h0X2luYyhjZSkgcHRyX2NvdW50X2lu
YygmKGNlKS0+aW5mbGlnaHQpCisjZGVmaW5lIGludGVsX2NvbnRleHRfaW5mbGlnaHRfZGVjKGNl
KSBwdHJfY291bnRfZGVjKCYoY2UpLT5pbmZsaWdodCkKIAogCXN0cnVjdCBsaXN0X2hlYWQgc2ln
bmFsX2xpbms7CiAJc3RydWN0IGxpc3RfaGVhZCBzaWduYWxzOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9lbmdpbmUuaAppbmRleCAyZjFjNjg3MWVlOTUuLjliYjZmZjc2NjgwZSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lLmgKQEAgLTEyNSw3MSArMTI1LDI2IEBAIGhh
bmdjaGVja19hY3Rpb25fdG9fc3RyKGNvbnN0IGVudW0gaW50ZWxfZW5naW5lX2hhbmdjaGVja19h
Y3Rpb24gYSkKIAogdm9pZCBpbnRlbF9lbmdpbmVzX3NldF9zY2hlZHVsZXJfY2FwcyhzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSk7CiAKLXN0YXRpYyBpbmxpbmUgdm9pZAotZXhlY2xpc3Rz
X3NldF9hY3RpdmUoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cywKLQkJ
ICAgICB1bnNpZ25lZCBpbnQgYml0KQotewotCV9fc2V0X2JpdChiaXQsICh1bnNpZ25lZCBsb25n
ICopJmV4ZWNsaXN0cy0+YWN0aXZlKTsKLX0KLQotc3RhdGljIGlubGluZSBib29sCi1leGVjbGlz
dHNfc2V0X2FjdGl2ZV9vbmNlKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlz
dHMsCi0JCQkgIHVuc2lnbmVkIGludCBiaXQpCi17Ci0JcmV0dXJuICFfX3Rlc3RfYW5kX3NldF9i
aXQoYml0LCAodW5zaWduZWQgbG9uZyAqKSZleGVjbGlzdHMtPmFjdGl2ZSk7Ci19Ci0KLXN0YXRp
YyBpbmxpbmUgdm9pZAotZXhlY2xpc3RzX2NsZWFyX2FjdGl2ZShzdHJ1Y3QgaW50ZWxfZW5naW5l
X2V4ZWNsaXN0cyAqZXhlY2xpc3RzLAotCQkgICAgICAgdW5zaWduZWQgaW50IGJpdCkKLXsKLQlf
X2NsZWFyX2JpdChiaXQsICh1bnNpZ25lZCBsb25nICopJmV4ZWNsaXN0cy0+YWN0aXZlKTsKLX0K
LQotc3RhdGljIGlubGluZSB2b2lkCi1leGVjbGlzdHNfY2xlYXJfYWxsX2FjdGl2ZShzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQorc3RhdGljIGlubGluZSB1bnNpZ25l
ZCBpbnQKK2V4ZWNsaXN0c19udW1fcG9ydHMoY29uc3Qgc3RydWN0IGludGVsX2VuZ2luZV9leGVj
bGlzdHMgKiBjb25zdCBleGVjbGlzdHMpCiB7Ci0JZXhlY2xpc3RzLT5hY3RpdmUgPSAwOworCXJl
dHVybiBleGVjbGlzdHMtPnBvcnRfbWFzayArIDE7CiB9CiAKLXN0YXRpYyBpbmxpbmUgYm9vbAot
ZXhlY2xpc3RzX2lzX2FjdGl2ZShjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAq
ZXhlY2xpc3RzLAotCQkgICAgdW5zaWduZWQgaW50IGJpdCkKK3N0YXRpYyBpbmxpbmUgc3RydWN0
IGk5MTVfcmVxdWVzdCAqCitleGVjbGlzdHNfYWN0aXZlKGNvbnN0IHN0cnVjdCBpbnRlbF9lbmdp
bmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiB7Ci0JcmV0dXJuIHRlc3RfYml0KGJpdCwgKHVuc2ln
bmVkIGxvbmcgKikmZXhlY2xpc3RzLT5hY3RpdmUpOworCUdFTV9CVUdfT04oZXhlY2xpc3RzLT5h
Y3RpdmUgLSBleGVjbGlzdHMtPmluZmxpZ2h0ID4KKwkJICAgZXhlY2xpc3RzX251bV9wb3J0cyhl
eGVjbGlzdHMpKTsKKwlyZXR1cm4gUkVBRF9PTkNFKCpleGVjbGlzdHMtPmFjdGl2ZSk7CiB9CiAK
LXZvaWQgZXhlY2xpc3RzX3VzZXJfYmVnaW4oc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMg
KmV4ZWNsaXN0cywKLQkJCSAgY29uc3Qgc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBvcnQpOwotdm9p
ZCBleGVjbGlzdHNfdXNlcl9lbmQoc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNs
aXN0cyk7Ci0KIHZvaWQKIGV4ZWNsaXN0c19jYW5jZWxfcG9ydF9yZXF1ZXN0cyhzdHJ1Y3QgaW50
ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNvbnN0IGV4ZWNsaXN0cyk7CiAKIHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKgogZXhlY2xpc3RzX3Vud2luZF9pbmNvbXBsZXRlX3JlcXVlc3RzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpOwogCi1zdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGludAotZXhlY2xpc3RzX251bV9wb3J0cyhjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNs
aXN0cyAqIGNvbnN0IGV4ZWNsaXN0cykKLXsKLQlyZXR1cm4gZXhlY2xpc3RzLT5wb3J0X21hc2sg
KyAxOwotfQotCi1zdGF0aWMgaW5saW5lIHN0cnVjdCBleGVjbGlzdF9wb3J0ICoKLWV4ZWNsaXN0
c19wb3J0X2NvbXBsZXRlKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhl
Y2xpc3RzLAotCQkJc3RydWN0IGV4ZWNsaXN0X3BvcnQgKiBjb25zdCBwb3J0KQotewotCWNvbnN0
IHVuc2lnbmVkIGludCBtID0gZXhlY2xpc3RzLT5wb3J0X21hc2s7Ci0KLQlHRU1fQlVHX09OKHBv
cnRfaW5kZXgocG9ydCwgZXhlY2xpc3RzKSAhPSAwKTsKLQlHRU1fQlVHX09OKCFleGVjbGlzdHNf
aXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9VU0VSKSk7Ci0KLQltZW1tb3Zl
KHBvcnQsIHBvcnQgKyAxLCBtICogc2l6ZW9mKHN0cnVjdCBleGVjbGlzdF9wb3J0KSk7Ci0JbWVt
c2V0KHBvcnQgKyBtLCAwLCBzaXplb2Yoc3RydWN0IGV4ZWNsaXN0X3BvcnQpKTsKLQotCXJldHVy
biBwb3J0OwotfQotCiBzdGF0aWMgaW5saW5lIHUzMgogaW50ZWxfcmVhZF9zdGF0dXNfcGFnZShj
b25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsIGludCByZWcpCiB7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV9jcy5jCmluZGV4IDdmZDMzZTgxYzJkOS4uZDQ1
MzI4ZTI1NGRjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdp
bmVfY3MuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpA
QCAtNTA4LDYgKzUwOCwxMCBAQCB2b2lkIGludGVsX2VuZ2luZV9pbml0X2V4ZWNsaXN0cyhzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJR0VNX0JVR19PTighaXNfcG93ZXJfb2ZfMihl
eGVjbGlzdHNfbnVtX3BvcnRzKGV4ZWNsaXN0cykpKTsKIAlHRU1fQlVHX09OKGV4ZWNsaXN0c19u
dW1fcG9ydHMoZXhlY2xpc3RzKSA+IEVYRUNMSVNUX01BWF9QT1JUUyk7CiAKKwltZW1zZXQoZXhl
Y2xpc3RzLT5wZW5kaW5nLCAwLCBzaXplb2YoZXhlY2xpc3RzLT5wZW5kaW5nKSk7CisJZXhlY2xp
c3RzLT5hY3RpdmUgPQorCQltZW1zZXQoZXhlY2xpc3RzLT5pbmZsaWdodCwgMCwgc2l6ZW9mKGV4
ZWNsaXN0cy0+aW5mbGlnaHQpKTsKKwogCWV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9
IElOVF9NSU47CiAJZXhlY2xpc3RzLT5xdWV1ZSA9IFJCX1JPT1RfQ0FDSEVEOwogfQpAQCAtMTE1
Miw3ICsxMTU2LDcgQEAgYm9vbCBpbnRlbF9lbmdpbmVfaXNfaWRsZShzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2NzICplbmdpbmUpCiAJCXJldHVybiB0cnVlOwogCiAJLyogV2FpdGluZyB0byBkcmFpbiBF
TFNQPyAqLwotCWlmIChSRUFEX09OQ0UoZW5naW5lLT5leGVjbGlzdHMuYWN0aXZlKSkgeworCWlm
IChleGVjbGlzdHNfYWN0aXZlKCZlbmdpbmUtPmV4ZWNsaXN0cykpIHsKIAkJc3RydWN0IHRhc2ts
ZXRfc3RydWN0ICp0ID0gJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQ7CiAKIAkJc3luY2hyb25p
emVfaGFyZGlycShlbmdpbmUtPmk5MTUtPmRybS5pcnEpOwpAQCAtMTE2OSw3ICsxMTczLDcgQEAg
Ym9vbCBpbnRlbF9lbmdpbmVfaXNfaWRsZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUp
CiAJCS8qIE90aGVyd2lzZSBmbHVzaCB0aGUgdGFza2xldCBpZiBpdCB3YXMgb24gYW5vdGhlciBj
cHUgKi8KIAkJdGFza2xldF91bmxvY2tfd2FpdCh0KTsKIAotCQlpZiAoUkVBRF9PTkNFKGVuZ2lu
ZS0+ZXhlY2xpc3RzLmFjdGl2ZSkpCisJCWlmIChleGVjbGlzdHNfYWN0aXZlKCZlbmdpbmUtPmV4
ZWNsaXN0cykpCiAJCQlyZXR1cm4gZmFsc2U7CiAJfQogCkBAIC0xMzY3LDYgKzEzNzEsNyBAQCBz
dGF0aWMgdm9pZCBpbnRlbF9lbmdpbmVfcHJpbnRfcmVnaXN0ZXJzKHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwKIAl9CiAKIAlpZiAoSEFTX0VYRUNMSVNUUyhkZXZfcHJpdikpIHsKKwkJ
c3RydWN0IGk5MTVfcmVxdWVzdCAqIGNvbnN0ICpwb3J0LCAqcnE7CiAJCWNvbnN0IHUzMiAqaHdz
ID0KIAkJCSZlbmdpbmUtPnN0YXR1c19wYWdlLmFkZHJbSTkxNV9IV1NfQ1NCX0JVRjBfSU5ERVhd
OwogCQljb25zdCB1OCBudW1fZW50cmllcyA9IGV4ZWNsaXN0cy0+Y3NiX3NpemU7CkBAIC0xMzk5
LDI3ICsxNDA0LDMzIEBAIHN0YXRpYyB2b2lkIGludGVsX2VuZ2luZV9wcmludF9yZWdpc3RlcnMo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAogCQl9CiAKIAkJc3Bpbl9sb2NrX2lycXNh
dmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKLQkJZm9yIChpZHggPSAwOyBpZHggPCBl
eGVjbGlzdHNfbnVtX3BvcnRzKGV4ZWNsaXN0cyk7IGlkeCsrKSB7Ci0JCQlzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpycTsKLQkJCXVuc2lnbmVkIGludCBjb3VudDsKKwkJZm9yIChwb3J0ID0gZXhlY2xp
c3RzLT5hY3RpdmU7IChycSA9ICpwb3J0KTsgcG9ydCsrKSB7CisJCQljaGFyIGhkcls4MF07CisJ
CQlpbnQgbGVuOworCisJCQlsZW4gPSBzbnByaW50ZihoZHIsIHNpemVvZihoZHIpLAorCQkJCSAg
ICAgICAiXHRcdEFjdGl2ZVslZDogIiwKKwkJCQkgICAgICAgKGludCkocG9ydCAtIGV4ZWNsaXN0
cy0+YWN0aXZlKSk7CisJCQlpZiAoIWk5MTVfcmVxdWVzdF9zaWduYWxlZChycSkpCisJCQkJbGVu
ICs9IHNucHJpbnRmKGhkciArIGxlbiwgc2l6ZW9mKGhkcikgLSBsZW4sCisJCQkJCQkicmluZzp7
c3RhcnQ6JTA4eCwgaHdzcDolMDh4LCBzZXFubzolMDh4fSwgIiwKKwkJCQkJCWk5MTVfZ2d0dF9v
ZmZzZXQocnEtPnJpbmctPnZtYSksCisJCQkJCQlycS0+dGltZWxpbmUtPmh3c3Bfb2Zmc2V0LAor
CQkJCQkJaHdzcF9zZXFubyhycSkpOworCQkJc25wcmludGYoaGRyICsgbGVuLCBzaXplb2YoaGRy
KSAtIGxlbiwgInJxOiAiKTsKKwkJCXByaW50X3JlcXVlc3QobSwgcnEsIGhkcik7CisJCX0KKwkJ
Zm9yIChwb3J0ID0gZXhlY2xpc3RzLT5wZW5kaW5nOyAocnEgPSAqcG9ydCk7IHBvcnQrKykgewog
CQkJY2hhciBoZHJbODBdOwogCi0JCQlycSA9IHBvcnRfdW5wYWNrKCZleGVjbGlzdHMtPnBvcnRb
aWR4XSwgJmNvdW50KTsKLQkJCWlmICghcnEpIHsKLQkJCQlkcm1fcHJpbnRmKG0sICJcdFx0RUxT
UFslZF0gaWRsZVxuIiwgaWR4KTsKLQkJCX0gZWxzZSBpZiAoIWk5MTVfcmVxdWVzdF9zaWduYWxl
ZChycSkpIHsKLQkJCQlzbnByaW50ZihoZHIsIHNpemVvZihoZHIpLAotCQkJCQkgIlx0XHRFTFNQ
WyVkXSBjb3VudD0lZCwgcmluZzp7c3RhcnQ6JTA4eCwgaHdzcDolMDh4LCBzZXFubzolMDh4fSwg
cnE6ICIsCi0JCQkJCSBpZHgsIGNvdW50LAotCQkJCQkgaTkxNV9nZ3R0X29mZnNldChycS0+cmlu
Zy0+dm1hKSwKLQkJCQkJIHJxLT50aW1lbGluZS0+aHdzcF9vZmZzZXQsCi0JCQkJCSBod3NwX3Nl
cW5vKHJxKSk7Ci0JCQkJcHJpbnRfcmVxdWVzdChtLCBycSwgaGRyKTsKLQkJCX0gZWxzZSB7Ci0J
CQkJcHJpbnRfcmVxdWVzdChtLCBycSwgIlx0XHRFTFNQWyVkXSBycTogIik7Ci0JCQl9CisJCQlz
bnByaW50ZihoZHIsIHNpemVvZihoZHIpLAorCQkJCSAiXHRcdFBlbmRpbmdbJWRdIHJpbmc6e3N0
YXJ0OiUwOHgsIGh3c3A6JTA4eCwgc2Vxbm86JTA4eH0sIHJxOiAiLAorCQkJCSAoaW50KShwb3J0
IC0gZXhlY2xpc3RzLT5wZW5kaW5nKSwKKwkJCQkgaTkxNV9nZ3R0X29mZnNldChycS0+cmluZy0+
dm1hKSwKKwkJCQkgcnEtPnRpbWVsaW5lLT5od3NwX29mZnNldCwKKwkJCQkgaHdzcF9zZXFubyhy
cSkpOworCQkJcHJpbnRfcmVxdWVzdChtLCBycSwgaGRyKTsKIAkJfQotCQlkcm1fcHJpbnRmKG0s
ICJcdFx0SFcgYWN0aXZlPyAweCV4XG4iLCBleGVjbGlzdHMtPmFjdGl2ZSk7CiAJCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+YWN0aXZlLmxvY2ssIGZsYWdzKTsKIAl9IGVsc2UgaWYg
KElOVEVMX0dFTihkZXZfcHJpdikgPiA2KSB7CiAJCWRybV9wcmludGYobSwgIlx0UFBfRElSX0JB
U0U6IDB4JTA4eFxuIiwKQEAgLTE1ODMsMTUgKzE1OTQsMTkgQEAgaW50IGludGVsX2VuYWJsZV9l
bmdpbmVfc3RhdHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCX0KIAogCWlmIChl
bmdpbmUtPnN0YXRzLmVuYWJsZWQrKyA9PSAwKSB7Ci0JCWNvbnN0IHN0cnVjdCBleGVjbGlzdF9w
b3J0ICpwb3J0ID0gZXhlY2xpc3RzLT5wb3J0OwotCQl1bnNpZ25lZCBpbnQgbnVtX3BvcnRzID0g
ZXhlY2xpc3RzX251bV9wb3J0cyhleGVjbGlzdHMpOworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICog
Y29uc3QgKnBvcnQ7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwogCiAJCWVuZ2luZS0+c3Rh
dHMuZW5hYmxlZF9hdCA9IGt0aW1lX2dldCgpOwogCiAJCS8qIFhYWCBzdWJtaXNzaW9uIG1ldGhv
ZCBvYmxpdmlvdXM/ICovCi0JCXdoaWxlIChudW1fcG9ydHMtLSAmJiBwb3J0X2lzc2V0KHBvcnQp
KSB7CisJCWZvciAocG9ydCA9IGV4ZWNsaXN0cy0+YWN0aXZlOyAocnEgPSAqcG9ydCk7IHBvcnQr
KykKIAkJCWVuZ2luZS0+c3RhdHMuYWN0aXZlKys7Ci0JCQlwb3J0Kys7CisKKwkJZm9yIChwb3J0
ID0gZXhlY2xpc3RzLT5wZW5kaW5nOyAocnEgPSAqcG9ydCk7IHBvcnQrKykgeworCQkJLyogRXhj
bHVkZSBhbnkgY29udGV4dHMgYWxyZWFkeSBjb3VudGVkIGluIGFjdGl2ZSAqLworCQkJaWYgKGlu
dGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQocnEtPmh3X2NvbnRleHQpID09IDEpCisJCQkJZW5n
aW5lLT5zdGF0cy5hY3RpdmUrKzsKIAkJfQogCiAJCWlmIChlbmdpbmUtPnN0YXRzLmFjdGl2ZSkK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2VuZ2luZV90eXBlcy5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX3R5cGVzLmgKaW5kZXggNDNl
OTc1YTI2MDE2Li40MTFiN2E4MDdiOTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX2VuZ2luZV90eXBlcy5oCkBAIC0xNzIsNTEgKzE3MiwxMCBAQCBzdHJ1Y3QgaW50ZWxfZW5n
aW5lX2V4ZWNsaXN0cyB7CiAJICovCiAJdTMyIF9faW9tZW0gKmN0cmxfcmVnOwogCi0JLyoqCi0J
ICogQHBvcnQ6IGV4ZWNsaXN0IHBvcnQgc3RhdGVzCi0JICoKLQkgKiBGb3IgZWFjaCBoYXJkd2Fy
ZSBFTFNQIChFeGVjTGlzdCBTdWJtaXNzaW9uIFBvcnQpIHdlIGtlZXAKLQkgKiB0cmFjayBvZiB0
aGUgbGFzdCByZXF1ZXN0IGFuZCB0aGUgbnVtYmVyIG9mIHRpbWVzIHdlIHN1Ym1pdHRlZAotCSAq
IHRoYXQgcG9ydCB0byBody4gV2UgdGhlbiBjb3VudCB0aGUgbnVtYmVyIG9mIHRpbWVzIHRoZSBo
dyByZXBvcnRzCi0JICogYSBjb250ZXh0IGNvbXBsZXRpb24gb3IgcHJlZW1wdGlvbi4gQXMgb25s
eSBvbmUgY29udGV4dCBjYW4KLQkgKiBiZSBhY3RpdmUgb24gaHcsIHdlIGxpbWl0IHJlc3VibWlz
c2lvbiBvZiBjb250ZXh0IHRvIHBvcnRbMF0uIFRoaXMKLQkgKiBpcyBjYWxsZWQgTGl0ZSBSZXN0
b3JlLCBvZiB0aGUgY29udGV4dC4KLQkgKi8KLQlzdHJ1Y3QgZXhlY2xpc3RfcG9ydCB7Ci0JCS8q
KgotCQkgKiBAcmVxdWVzdF9jb3VudDogY29tYmluZWQgcmVxdWVzdCBhbmQgc3VibWlzc2lvbiBj
b3VudAotCQkgKi8KLQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdF9jb3VudDsKLSNkZWZp
bmUgRVhFQ0xJU1RfQ09VTlRfQklUUyAyCi0jZGVmaW5lIHBvcnRfcmVxdWVzdChwKSBwdHJfbWFz
a19iaXRzKChwKS0+cmVxdWVzdF9jb3VudCwgRVhFQ0xJU1RfQ09VTlRfQklUUykKLSNkZWZpbmUg
cG9ydF9jb3VudChwKSBwdHJfdW5tYXNrX2JpdHMoKHApLT5yZXF1ZXN0X2NvdW50LCBFWEVDTElT
VF9DT1VOVF9CSVRTKQotI2RlZmluZSBwb3J0X3BhY2socnEsIGNvdW50KSBwdHJfcGFja19iaXRz
KHJxLCBjb3VudCwgRVhFQ0xJU1RfQ09VTlRfQklUUykKLSNkZWZpbmUgcG9ydF91bnBhY2socCwg
Y291bnQpIHB0cl91bnBhY2tfYml0cygocCktPnJlcXVlc3RfY291bnQsIGNvdW50LCBFWEVDTElT
VF9DT1VOVF9CSVRTKQotI2RlZmluZSBwb3J0X3NldChwLCBwYWNrZWQpICgocCktPnJlcXVlc3Rf
Y291bnQgPSAocGFja2VkKSkKLSNkZWZpbmUgcG9ydF9pc3NldChwKSAoKHApLT5yZXF1ZXN0X2Nv
dW50KQotI2RlZmluZSBwb3J0X2luZGV4KHAsIGV4ZWNsaXN0cykgKChwKSAtIChleGVjbGlzdHMp
LT5wb3J0KQotCi0JCS8qKgotCQkgKiBAY29udGV4dF9pZDogY29udGV4dCBJRCBmb3IgcG9ydAot
CQkgKi8KLQkJR0VNX0RFQlVHX0RFQ0wodTMyIGNvbnRleHRfaWQpOwotCiAjZGVmaW5lIEVYRUNM
SVNUX01BWF9QT1JUUyAyCi0JfSBwb3J0W0VYRUNMSVNUX01BWF9QT1JUU107Ci0KLQkvKioKLQkg
KiBAYWN0aXZlOiBpcyB0aGUgSFcgYWN0aXZlPyBXZSBjb25zaWRlciB0aGUgSFcgYXMgYWN0aXZl
IGFmdGVyCi0JICogc3VibWl0dGluZyBhbnkgY29udGV4dCBmb3IgZXhlY3V0aW9uIGFuZCB1bnRp
bCB3ZSBoYXZlIHNlZW4gdGhlCi0JICogbGFzdCBjb250ZXh0IGNvbXBsZXRpb24gZXZlbnQuIEFm
dGVyIHRoYXQsIHdlIGRvIG5vdCBleHBlY3QgYW55Ci0JICogbW9yZSBldmVudHMgdW50aWwgd2Ug
c3VibWl0LCBhbmQgc28gY2FuIHBhcmsgdGhlIEhXLgotCSAqCi0JICogQXMgd2UgaGF2ZSBhIHNt
YWxsIG51bWJlciBvZiBkaWZmZXJlbnQgc291cmNlcyBmcm9tIHdoaWNoIHdlIGZlZWQKLQkgKiB0
aGUgSFcsIHdlIHRyYWNrIHRoZSBzdGF0ZSBvZiBlYWNoIGluc2lkZSBhIHNpbmdsZSBiaXRmaWVs
ZC4KLQkgKi8KLQl1bnNpZ25lZCBpbnQgYWN0aXZlOwotI2RlZmluZSBFWEVDTElTVFNfQUNUSVZF
X1VTRVIgMAotI2RlZmluZSBFWEVDTElTVFNfQUNUSVZFX1BSRUVNUFQgMQotI2RlZmluZSBFWEVD
TElTVFNfQUNUSVZFX0hXQUNLIDIKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKmFjdGl2
ZTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICppbmZsaWdodFtFWEVDTElTVF9NQVhfUE9SVFMgKyAx
IC8qIHNlbnRpbmVsICovXTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpwZW5kaW5nW0VYRUNMSVNU
X01BWF9QT1JUUyArIDFdOwogCiAJLyoqCiAJICogQHBvcnRfbWFzazogbnVtYmVyIG9mIGV4ZWNs
aXN0IHBvcnRzIC0gMQpAQCAtMjU3LDExICsyMTYsNiBAQCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyB7CiAJICovCiAJdTMyICpjc2Jfc3RhdHVzOwogCi0JLyoqCi0JICogQHByZWVtcHRf
Y29tcGxldGVfc3RhdHVzOiBleHBlY3RlZCBDU0IgdXBvbiBjb21wbGV0aW5nIHByZWVtcHRpb24K
LQkgKi8KLQl1MzIgcHJlZW1wdF9jb21wbGV0ZV9zdGF0dXM7Ci0KIAkvKioKIAkgKiBAY3NiX3Np
emU6IGNvbnRleHQgc3RhdHVzIGJ1ZmZlciBGSUZPIHNpemUKIAkgKi8KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfbHJjLmMKaW5kZXggODJiN2FjZTYyZDk3Li5iMWU0NWM2NTE2NjAgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2xyYy5jCkBAIC0xNjEsNiArMTYxLDggQEAKICNkZWZpbmUgR0VO
OF9DVFhfU1RBVFVTX0NPTVBMRVRFRF9NQVNLIFwKIAkgKEdFTjhfQ1RYX1NUQVRVU19DT01QTEVU
RSB8IEdFTjhfQ1RYX1NUQVRVU19QUkVFTVBURUQpCiAKKyNkZWZpbmUgQ1RYX0RFU0NfRk9SQ0Vf
UkVTVE9SRSBCSVRfVUxMKDIpCisKIC8qIFR5cGljYWwgc2l6ZSBvZiB0aGUgYXZlcmFnZSByZXF1
ZXN0ICgyIHBpcGVjb250cm9scyBhbmQgYSBNSV9CQikgKi8KICNkZWZpbmUgRVhFQ0xJU1RTX1JF
UVVFU1RfU0laRSA2NCAvKiBieXRlcyAqLwogI2RlZmluZSBXQV9UQUlMX0RXT1JEUyAyCkBAIC0y
MjEsNiArMjIzLDE0IEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19pbml0X3JlZ19zdGF0ZSh1MzIg
KnJlZ19zdGF0ZSwKIAkJCQkgICAgIHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwKIAkJ
CQkgICAgIHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nKTsKIAorc3RhdGljIGlubGluZSB1MzIgaW50
ZWxfaHdzX3ByZWVtcHRfYWRkcmVzcyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCit7
CisJcmV0dXJuIChpOTE1X2dndHRfb2Zmc2V0KGVuZ2luZS0+c3RhdHVzX3BhZ2Uudm1hKSArCisJ
CUk5MTVfR0VNX0hXU19QUkVFTVBUX0FERFIpOworfQorCisjZGVmaW5lIHJpbmdfcGF1c2UoRSkg
KChFKS0+c3RhdHVzX3BhZ2UuYWRkcltJOTE1X0dFTV9IV1NfUFJFRU1QVF0pCisKIHN0YXRpYyBp
bmxpbmUgc3RydWN0IGk5MTVfcHJpb2xpc3QgKnRvX3ByaW9saXN0KHN0cnVjdCByYl9ub2RlICpy
YikKIHsKIAlyZXR1cm4gcmJfZW50cnkocmIsIHN0cnVjdCBpOTE1X3ByaW9saXN0LCBub2RlKTsK
QEAgLTI3MSwxMiArMjgxLDYgQEAgc3RhdGljIGlubGluZSBib29sIG5lZWRfcHJlZW1wdChjb25z
dCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiB7CiAJaW50IGxhc3RfcHJpbzsKIAot
CWlmICghZW5naW5lLT5wcmVlbXB0X2NvbnRleHQpCi0JCXJldHVybiBmYWxzZTsKLQotCWlmIChp
OTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKLQkJcmV0dXJuIGZhbHNlOwotCiAJLyoKIAkgKiBD
aGVjayBpZiB0aGUgY3VycmVudCBwcmlvcml0eSBoaW50IG1lcml0cyBhIHByZWVtcHRpb24gYXR0
ZW1wdC4KIAkgKgpAQCAtMzM4LDkgKzM0Miw2IEBAIF9fbWF5YmVfdW51c2VkIHN0YXRpYyBpbmxp
bmUgYm9vbAogYXNzZXJ0X3ByaW9yaXR5X3F1ZXVlKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnByZXYsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKm5leHQpCiB7Ci0JY29u
c3Qgc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cyA9Ci0JCSZwcmV2LT5l
bmdpbmUtPmV4ZWNsaXN0czsKLQogCS8qCiAJICogV2l0aG91dCBwcmVlbXB0aW9uLCB0aGUgcHJl
diBtYXkgcmVmZXIgdG8gdGhlIHN0aWxsIGFjdGl2ZSBlbGVtZW50CiAJICogd2hpY2ggd2UgcmVm
dXNlIHRvIGxldCBnby4KQEAgLTM0OCw3ICszNDksNyBAQCBhc3NlcnRfcHJpb3JpdHlfcXVldWUo
Y29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcHJldiwKIAkgKiBFdmVuIHdpdGggcHJlZW1wdGlv
biwgdGhlcmUgYXJlIHRpbWVzIHdoZW4gd2UgdGhpbmsgaXQgaXMgYmV0dGVyIG5vdAogCSAqIHRv
IHByZWVtcHQgYW5kIGxlYXZlIGFuIG9zdGVuc2libHkgbG93ZXIgcHJpb3JpdHkgcmVxdWVzdCBp
biBmbGlnaHQuCiAJICovCi0JaWYgKHBvcnRfcmVxdWVzdChleGVjbGlzdHMtPnBvcnQpID09IHBy
ZXYpCisJaWYgKGk5MTVfcmVxdWVzdF9pc19hY3RpdmUocHJldikpCiAJCXJldHVybiB0cnVlOwog
CiAJcmV0dXJuIHJxX3ByaW8ocHJldikgPj0gcnFfcHJpbyhuZXh0KTsKQEAgLTQ0MiwxMyArNDQz
LDExIEBAIF9fdW53aW5kX2luY29tcGxldGVfcmVxdWVzdHMoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQogCQlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICpvd25lcjsKIAogCQlpZiAoaTkx
NV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCi0JCQlicmVhazsKKwkJCWNvbnRpbnVlOyAvKiBYWFgg
Ki8KIAogCQlfX2k5MTVfcmVxdWVzdF91bnN1Ym1pdChycSk7CiAJCXVud2luZF93YV90YWlsKHJx
KTsKIAotCQlHRU1fQlVHX09OKHJxLT5od19jb250ZXh0LT5pbmZsaWdodCk7Ci0KIAkJLyoKIAkJ
ICogUHVzaCB0aGUgcmVxdWVzdCBiYWNrIGludG8gdGhlIHF1ZXVlIGZvciBsYXRlciByZXN1Ym1p
c3Npb24uCiAJCSAqIElmIHRoaXMgcmVxdWVzdCBpcyBub3QgbmF0aXZlIHRvIHRoaXMgcGh5c2lj
YWwgZW5naW5lIChpLmUuCkBAIC01MDAsMzIgKzQ5OSwzMiBAQCBleGVjbGlzdHNfY29udGV4dF9z
dGF0dXNfY2hhbmdlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCB1bnNpZ25lZCBsb25nIHN0YXR1
cykKIAkJCQkgICBzdGF0dXMsIHJxKTsKIH0KIAotaW5saW5lIHZvaWQKLWV4ZWNsaXN0c191c2Vy
X2JlZ2luKHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMsCi0JCSAgICAg
Y29uc3Qgc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBvcnQpCitzdGF0aWMgaW5saW5lIHN0cnVjdCBp
OTE1X3JlcXVlc3QgKgorZXhlY2xpc3RzX3NjaGVkdWxlX2luKHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KnJxLCBpbnQgaWR4KQogewotCWV4ZWNsaXN0c19zZXRfYWN0aXZlX29uY2UoZXhlY2xpc3RzLCBF
WEVDTElTVFNfQUNUSVZFX1VTRVIpOwotfQorCXN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSA9IHJx
LT5od19jb250ZXh0OworCWludCBjb3VudDsKIAotaW5saW5lIHZvaWQKLWV4ZWNsaXN0c191c2Vy
X2VuZChzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQotewotCWV4ZWNs
aXN0c19jbGVhcl9hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZFX1VTRVIpOwotfQor
CXRyYWNlX2k5MTVfcmVxdWVzdF9pbihycSwgaWR4KTsKIAotc3RhdGljIGlubGluZSB2b2lkCi1l
eGVjbGlzdHNfY29udGV4dF9zY2hlZHVsZV9pbihzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKLXsK
LQlHRU1fQlVHX09OKHJxLT5od19jb250ZXh0LT5pbmZsaWdodCk7CisJY291bnQgPSBpbnRlbF9j
b250ZXh0X2luZmxpZ2h0X2NvdW50KGNlKTsKKwlpZiAoIWNvdW50KSB7CisJCWludGVsX2NvbnRl
eHRfZ2V0KGNlKTsKKwkJY2UtPmluZmxpZ2h0ID0gcnEtPmVuZ2luZTsKKworCQlleGVjbGlzdHNf
Y29udGV4dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX0lOKTsKKwkJ
aW50ZWxfZW5naW5lX2NvbnRleHRfaW4oY2UtPmluZmxpZ2h0KTsKKwl9CiAKLQlleGVjbGlzdHNf
Y29udGV4dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX0lOKTsKLQlp
bnRlbF9lbmdpbmVfY29udGV4dF9pbihycS0+ZW5naW5lKTsKLQlycS0+aHdfY29udGV4dC0+aW5m
bGlnaHQgPSBycS0+ZW5naW5lOworCWludGVsX2NvbnRleHRfaW5mbGlnaHRfaW5jKGNlKTsKKwlH
RU1fQlVHX09OKGludGVsX2NvbnRleHRfaW5mbGlnaHQoY2UpICE9IHJxLT5lbmdpbmUpOworCisJ
cmV0dXJuIGk5MTVfcmVxdWVzdF9nZXQocnEpOwogfQogCi1zdGF0aWMgdm9pZCBraWNrX3NpYmxp
bmdzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQorc3RhdGljIHZvaWQga2lja19zaWJsaW5ncyhz
dHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwgc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogewotCXN0
cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUgPSB0b192aXJ0dWFsX2VuZ2luZShycS0+aHdfY29udGV4
dC0+ZW5naW5lKTsKKwlzdHJ1Y3QgdmlydHVhbF9lbmdpbmUgKnZlID0gY29udGFpbmVyX29mKGNl
LCB0eXBlb2YoKnZlKSwgY29udGV4dCk7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqbmV4dCA9IFJF
QURfT05DRSh2ZS0+cmVxdWVzdCk7CiAKIAlpZiAobmV4dCAmJiBuZXh0LT5leGVjdXRpb25fbWFz
ayAmIH5ycS0+ZXhlY3V0aW9uX21hc2spCkBAIC01MzMsMjkgKzUzMiw0MiBAQCBzdGF0aWMgdm9p
ZCBraWNrX3NpYmxpbmdzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogfQogCiBzdGF0aWMgaW5s
aW5lIHZvaWQKLWV4ZWNsaXN0c19jb250ZXh0X3NjaGVkdWxlX291dChzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSwgdW5zaWduZWQgbG9uZyBzdGF0dXMpCitleGVjbGlzdHNfc2NoZWR1bGVfb3V0KHN0
cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCXJxLT5od19jb250ZXh0LT5pbmZsaWdodCA9IE5V
TEw7Ci0JaW50ZWxfZW5naW5lX2NvbnRleHRfb3V0KHJxLT5lbmdpbmUpOwotCWV4ZWNsaXN0c19j
b250ZXh0X3N0YXR1c19jaGFuZ2UocnEsIHN0YXR1cyk7CisJc3RydWN0IGludGVsX2NvbnRleHQg
KmNlID0gcnEtPmh3X2NvbnRleHQ7CisKKwlHRU1fQlVHX09OKCFpbnRlbF9jb250ZXh0X2luZmxp
Z2h0X2NvdW50KGNlKSk7CisKIAl0cmFjZV9pOTE1X3JlcXVlc3Rfb3V0KHJxKTsKIAotCS8qCi0J
ICogSWYgdGhpcyBpcyBwYXJ0IG9mIGEgdmlydHVhbCBlbmdpbmUsIGl0cyBuZXh0IHJlcXVlc3Qg
bWF5IGhhdmUKLQkgKiBiZWVuIGJsb2NrZWQgd2FpdGluZyBmb3IgYWNjZXNzIHRvIHRoZSBhY3Rp
dmUgY29udGV4dC4gV2UgaGF2ZQotCSAqIHRvIGtpY2sgYWxsIHRoZSBzaWJsaW5ncyBhZ2FpbiBp
biBjYXNlIHdlIG5lZWQgdG8gc3dpdGNoIChlLmcuCi0JICogdGhlIG5leHQgcmVxdWVzdCBpcyBu
b3QgcnVubmFibGUgb24gdGhpcyBlbmdpbmUpLiBIb3BlZnVsbHksCi0JICogd2Ugd2lsbCBhbHJl
YWR5IGhhdmUgc3VibWl0dGVkIHRoZSBuZXh0IHJlcXVlc3QgYmVmb3JlIHRoZQotCSAqIHRhc2ts
ZXQgcnVucyBhbmQgZG8gbm90IG5lZWQgdG8gcmVidWlsZCBlYWNoIHZpcnR1YWwgdHJlZQotCSAq
IGFuZCBraWNrIGV2ZXJ5b25lIGFnYWluLgotCSAqLwotCWlmIChycS0+ZW5naW5lICE9IHJxLT5o
d19jb250ZXh0LT5lbmdpbmUpCi0JCWtpY2tfc2libGluZ3MocnEpOworCWludGVsX2NvbnRleHRf
aW5mbGlnaHRfZGVjKGNlKTsKKwlpZiAoIWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQoY2Up
KSB7CisJCWludGVsX2VuZ2luZV9jb250ZXh0X291dChjZS0+aW5mbGlnaHQpOworCQlleGVjbGlz
dHNfY29udGV4dF9zdGF0dXNfY2hhbmdlKHJxLCBJTlRFTF9DT05URVhUX1NDSEVEVUxFX09VVCk7
CisKKwkJY2UtPmluZmxpZ2h0ID0gTlVMTDsKKwkJaW50ZWxfY29udGV4dF9wdXQoY2UpOworCisJ
CS8qCisJCSAqIElmIHRoaXMgaXMgcGFydCBvZiBhIHZpcnR1YWwgZW5naW5lLCBpdHMgbmV4dCBy
ZXF1ZXN0IG1heQorCQkgKiBoYXZlIGJlZW4gYmxvY2tlZCB3YWl0aW5nIGZvciBhY2Nlc3MgdG8g
dGhlIGFjdGl2ZSBjb250ZXh0LgorCQkgKiBXZSBoYXZlIHRvIGtpY2sgYWxsIHRoZSBzaWJsaW5n
cyBhZ2FpbiBpbiBjYXNlIHdlIG5lZWQgdG8KKwkJICogc3dpdGNoIChlLmcuIHRoZSBuZXh0IHJl
cXVlc3QgaXMgbm90IHJ1bm5hYmxlIG9uIHRoaXMKKwkJICogZW5naW5lKS4gSG9wZWZ1bGx5LCB3
ZSB3aWxsIGFscmVhZHkgaGF2ZSBzdWJtaXR0ZWQgdGhlIG5leHQKKwkJICogcmVxdWVzdCBiZWZv
cmUgdGhlIHRhc2tsZXQgcnVucyBhbmQgZG8gbm90IG5lZWQgdG8gcmVidWlsZAorCQkgKiBlYWNo
IHZpcnR1YWwgdHJlZSBhbmQga2ljayBldmVyeW9uZSBhZ2Fpbi4KKwkJICovCisJCWlmIChycS0+
ZW5naW5lICE9IGNlLT5lbmdpbmUpCisJCQlraWNrX3NpYmxpbmdzKHJxLCBjZSk7CisJfQorCisJ
aTkxNV9yZXF1ZXN0X3B1dChycSk7CiB9CiAKLXN0YXRpYyB1NjQgZXhlY2xpc3RzX3VwZGF0ZV9j
b250ZXh0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQorc3RhdGljIHU2NCBleGVjbGlzdHNfdXBk
YXRlX2NvbnRleHQoY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7CiAJc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlID0gcnEtPmh3X2NvbnRleHQ7CisJdTY0IGRlc2M7CiAKIAljZS0+bHJj
X3JlZ19zdGF0ZVtDVFhfUklOR19UQUlMICsgMV0gPQogCQlpbnRlbF9yaW5nX3NldF90YWlsKHJx
LT5yaW5nLCBycS0+dGFpbCk7CkBAIC01NzYsNyArNTg4LDExIEBAIHN0YXRpYyB1NjQgZXhlY2xp
c3RzX3VwZGF0ZV9jb250ZXh0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCSAqIHdtYikuCiAJ
ICovCiAJbWIoKTsKLQlyZXR1cm4gY2UtPmxyY19kZXNjOworCisJZGVzYyA9IGNlLT5scmNfZGVz
YzsKKwljZS0+bHJjX2Rlc2MgJj0gfkNUWF9ERVNDX0ZPUkNFX1JFU1RPUkU7CisKKwlyZXR1cm4g
ZGVzYzsKIH0KIAogc3RhdGljIGlubGluZSB2b2lkIHdyaXRlX2Rlc2Moc3RydWN0IGludGVsX2Vu
Z2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cywgdTY0IGRlc2MsIHUzMiBwb3J0KQpAQCAtNTkwLDEy
ICs2MDYsNTkgQEAgc3RhdGljIGlubGluZSB2b2lkIHdyaXRlX2Rlc2Moc3RydWN0IGludGVsX2Vu
Z2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cywgdTY0IGRlc2MKIAl9CiB9CiAKK3N0YXRpYyBfX21h
eWJlX3VudXNlZCB2b2lkCit0cmFjZV9wb3J0cyhjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4
ZWNsaXN0cyAqZXhlY2xpc3RzLAorCSAgICBjb25zdCBjaGFyICptc2csCisJICAgIHN0cnVjdCBp
OTE1X3JlcXVlc3QgKiBjb25zdCAqcG9ydHMpCit7CisJY29uc3Qgc3RydWN0IGludGVsX2VuZ2lu
ZV9jcyAqZW5naW5lID0KKwkJY29udGFpbmVyX29mKGV4ZWNsaXN0cywgdHlwZW9mKCplbmdpbmUp
LCBleGVjbGlzdHMpOworCisJR0VNX1RSQUNFKCIlczogJXMgeyAlbGx4OiVsbGQlcywgJWxseDol
bGxkIH1cbiIsCisJCSAgZW5naW5lLT5uYW1lLCBtc2csCisJCSAgcG9ydHNbMF0tPmZlbmNlLmNv
bnRleHQsCisJCSAgcG9ydHNbMF0tPmZlbmNlLnNlcW5vLAorCQkgIGk5MTVfcmVxdWVzdF9jb21w
bGV0ZWQocG9ydHNbMF0pID8gIiEiIDoKKwkJICBpOTE1X3JlcXVlc3Rfc3RhcnRlZChwb3J0c1sw
XSkgPyAiKiIgOgorCQkgICIiLAorCQkgIHBvcnRzWzFdID8gcG9ydHNbMV0tPmZlbmNlLmNvbnRl
eHQgOiAwLAorCQkgIHBvcnRzWzFdID8gcG9ydHNbMV0tPmZlbmNlLnNlcW5vIDogMCk7Cit9CisK
K3N0YXRpYyBfX21heWJlX3VudXNlZCBib29sCithc3NlcnRfcGVuZGluZ192YWxpZChjb25zdCBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzLAorCQkgICAgIGNvbnN0IGNo
YXIgKm1zZykKK3sKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKnBvcnQsICpycTsKKwlz
dHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UgPSBOVUxMOworCisJdHJhY2VfcG9ydHMoZXhlY2xpc3Rz
LCBtc2csIGV4ZWNsaXN0cy0+cGVuZGluZyk7CisKKwlpZiAoZXhlY2xpc3RzLT5wZW5kaW5nW2V4
ZWNsaXN0c19udW1fcG9ydHMoZXhlY2xpc3RzKV0pCisJCXJldHVybiBmYWxzZTsKKworCWZvciAo
cG9ydCA9IGV4ZWNsaXN0cy0+cGVuZGluZzsgKHJxID0gKnBvcnQpOyBwb3J0KyspIHsKKwkJaWYg
KGNlID09IHJxLT5od19jb250ZXh0KQorCQkJcmV0dXJuIGZhbHNlOworCisJCWNlID0gcnEtPmh3
X2NvbnRleHQ7CisJCWlmIChpOTE1X3JlcXVlc3RfY29tcGxldGVkKHJxKSkKKwkJCWNvbnRpbnVl
OworCisJCUdFTV9CVUdfT04oaTkxNV9hY3RpdmVfaXNfaWRsZSgmY2UtPmFjdGl2ZSkpOworCQlH
RU1fQlVHX09OKCFpOTE1X3ZtYV9pc19waW5uZWQoY2UtPnN0YXRlKSk7CisJfQorCisJcmV0dXJu
IGNlOworfQorCiBzdGF0aWMgdm9pZCBleGVjbGlzdHNfc3VibWl0X3BvcnRzKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAq
ZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwotCXN0cnVjdCBleGVjbGlzdF9wb3J0ICpw
b3J0ID0gZXhlY2xpc3RzLT5wb3J0OwogCXVuc2lnbmVkIGludCBuOwogCisJR0VNX0JVR19PTigh
YXNzZXJ0X3BlbmRpbmdfdmFsaWQoZXhlY2xpc3RzLCAic3VibWl0IikpOworCiAJLyoKIAkgKiBX
ZSBjYW4gc2tpcCBhY3F1aXJpbmcgaW50ZWxfcnVudGltZV9wbV9nZXQoKSBoZXJlIGFzIGl0IHdh
cyB0YWtlbgogCSAqIG9uIG91ciBiZWhhbGYgYnkgdGhlIHJlcXVlc3QgKHNlZSBpOTE1X2dlbV9t
YXJrX2J1c3koKSkgYW5kIGl0IHdpbGwKQEAgLTYxMywzOCArNjc2LDE2IEBAIHN0YXRpYyB2b2lk
IGV4ZWNsaXN0c19zdWJtaXRfcG9ydHMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CSAqIG9mIGVsc3EgZW50cmllcywga2VlcCB0aGlzIGluIG1pbmQgYmVmb3JlIGNoYW5naW5nIHRo
ZSBsb29wIGJlbG93LgogCSAqLwogCWZvciAobiA9IGV4ZWNsaXN0c19udW1fcG9ydHMoZXhlY2xp
c3RzKTsgbi0tOyApIHsKLQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7Ci0JCXVuc2lnbmVkIGlu
dCBjb3VudDsKLQkJdTY0IGRlc2M7CisJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gZXhlY2xp
c3RzLT5wZW5kaW5nW25dOwogCi0JCXJxID0gcG9ydF91bnBhY2soJnBvcnRbbl0sICZjb3VudCk7
Ci0JCWlmIChycSkgewotCQkJR0VNX0JVR19PTihjb3VudCA+ICFuKTsKLQkJCWlmICghY291bnQr
KykKLQkJCQlleGVjbGlzdHNfY29udGV4dF9zY2hlZHVsZV9pbihycSk7Ci0JCQlwb3J0X3NldCgm
cG9ydFtuXSwgcG9ydF9wYWNrKHJxLCBjb3VudCkpOwotCQkJZGVzYyA9IGV4ZWNsaXN0c191cGRh
dGVfY29udGV4dChycSk7Ci0JCQlHRU1fREVCVUdfRVhFQyhwb3J0W25dLmNvbnRleHRfaWQgPSB1
cHBlcl8zMl9iaXRzKGRlc2MpKTsKLQotCQkJR0VNX1RSQUNFKCIlcyBpblslZF06ICBjdHg9JWQu
JWQsIGZlbmNlICVsbHg6JWxsZCAoY3VycmVudCAlZCksIHByaW89JWRcbiIsCi0JCQkJICBlbmdp
bmUtPm5hbWUsIG4sCi0JCQkJICBwb3J0W25dLmNvbnRleHRfaWQsIGNvdW50LAotCQkJCSAgcnEt
PmZlbmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubywKLQkJCQkgIGh3c3Bfc2Vxbm8ocnEpLAot
CQkJCSAgcnFfcHJpbyhycSkpOwotCQl9IGVsc2UgewotCQkJR0VNX0JVR19PTighbik7Ci0JCQlk
ZXNjID0gMDsKLQkJfQotCi0JCXdyaXRlX2Rlc2MoZXhlY2xpc3RzLCBkZXNjLCBuKTsKKwkJd3Jp
dGVfZGVzYyhleGVjbGlzdHMsCisJCQkgICBycSA/IGV4ZWNsaXN0c191cGRhdGVfY29udGV4dChy
cSkgOiAwLAorCQkJICAgbik7CiAJfQogCiAJLyogd2UgbmVlZCB0byBtYW51YWxseSBsb2FkIHRo
ZSBzdWJtaXQgcXVldWUgKi8KIAlpZiAoZXhlY2xpc3RzLT5jdHJsX3JlZykKIAkJd3JpdGVsKEVM
X0NUUkxfTE9BRCwgZXhlY2xpc3RzLT5jdHJsX3JlZyk7Ci0KLQlleGVjbGlzdHNfY2xlYXJfYWN0
aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9IV0FDSyk7CiB9CiAKIHN0YXRpYyBib29s
IGN0eF9zaW5nbGVfcG9ydF9zdWJtaXNzaW9uKGNvbnN0IHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKQEAgLTY2OCw2ICs3MDksNyBAQCBzdGF0aWMgYm9vbCBjYW5fbWVyZ2VfY3R4KGNvbnN0IHN0
cnVjdCBpbnRlbF9jb250ZXh0ICpwcmV2LAogc3RhdGljIGJvb2wgY2FuX21lcmdlX3JxKGNvbnN0
IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnByZXYsCiAJCQkgY29uc3Qgc3RydWN0IGk5MTVfcmVxdWVz
dCAqbmV4dCkKIHsKKwlHRU1fQlVHX09OKHByZXYgPT0gbmV4dCk7CiAJR0VNX0JVR19PTighYXNz
ZXJ0X3ByaW9yaXR5X3F1ZXVlKHByZXYsIG5leHQpKTsKIAogCWlmICghY2FuX21lcmdlX2N0eChw
cmV2LT5od19jb250ZXh0LCBuZXh0LT5od19jb250ZXh0KSkKQEAgLTY3Niw1OCArNzE4LDYgQEAg
c3RhdGljIGJvb2wgY2FuX21lcmdlX3JxKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnByZXYs
CiAJcmV0dXJuIHRydWU7CiB9CiAKLXN0YXRpYyB2b2lkIHBvcnRfYXNzaWduKHN0cnVjdCBleGVj
bGlzdF9wb3J0ICpwb3J0LCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKLXsKLQlHRU1fQlVHX09O
KHJxID09IHBvcnRfcmVxdWVzdChwb3J0KSk7Ci0KLQlpZiAocG9ydF9pc3NldChwb3J0KSkKLQkJ
aTkxNV9yZXF1ZXN0X3B1dChwb3J0X3JlcXVlc3QocG9ydCkpOwotCi0JcG9ydF9zZXQocG9ydCwg
cG9ydF9wYWNrKGk5MTVfcmVxdWVzdF9nZXQocnEpLCBwb3J0X2NvdW50KHBvcnQpKSk7Ci19Ci0K
LXN0YXRpYyB2b2lkIGluamVjdF9wcmVlbXB0X2NvbnRleHQoc3RydWN0IGludGVsX2VuZ2luZV9j
cyAqZW5naW5lKQotewotCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMg
PSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0IGludGVsX2NvbnRleHQgKmNlID0gZW5naW5l
LT5wcmVlbXB0X2NvbnRleHQ7Ci0JdW5zaWduZWQgaW50IG47Ci0KLQlHRU1fQlVHX09OKGV4ZWNs
aXN0cy0+cHJlZW1wdF9jb21wbGV0ZV9zdGF0dXMgIT0KLQkJICAgdXBwZXJfMzJfYml0cyhjZS0+
bHJjX2Rlc2MpKTsKLQotCS8qCi0JICogU3dpdGNoIHRvIG91ciBlbXB0eSBwcmVlbXB0IGNvbnRl
eHQgc28KLQkgKiB0aGUgc3RhdGUgb2YgdGhlIEdQVSBpcyBrbm93biAoaWRsZSkuCi0JICovCi0J
R0VNX1RSQUNFKCIlc1xuIiwgZW5naW5lLT5uYW1lKTsKLQlmb3IgKG4gPSBleGVjbGlzdHNfbnVt
X3BvcnRzKGV4ZWNsaXN0cyk7IC0tbjsgKQotCQl3cml0ZV9kZXNjKGV4ZWNsaXN0cywgMCwgbik7
Ci0KLQl3cml0ZV9kZXNjKGV4ZWNsaXN0cywgY2UtPmxyY19kZXNjLCBuKTsKLQotCS8qIHdlIG5l
ZWQgdG8gbWFudWFsbHkgbG9hZCB0aGUgc3VibWl0IHF1ZXVlICovCi0JaWYgKGV4ZWNsaXN0cy0+
Y3RybF9yZWcpCi0JCXdyaXRlbChFTF9DVFJMX0xPQUQsIGV4ZWNsaXN0cy0+Y3RybF9yZWcpOwot
Ci0JZXhlY2xpc3RzX2NsZWFyX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVfSFdB
Q0spOwotCWV4ZWNsaXN0c19zZXRfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9Q
UkVFTVBUKTsKLQotCSh2b2lkKUk5MTVfU0VMRlRFU1RfT05MWShleGVjbGlzdHMtPnByZWVtcHRf
aGFuZy5jb3VudCsrKTsKLX0KLQotc3RhdGljIHZvaWQgY29tcGxldGVfcHJlZW1wdF9jb250ZXh0
KHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCi17Ci0JR0VNX0JVR19P
TighZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVfUFJFRU1Q
VCkpOwotCi0JaWYgKGluamVjdF9wcmVlbXB0X2hhbmcoZXhlY2xpc3RzKSkKLQkJcmV0dXJuOwot
Ci0JZXhlY2xpc3RzX2NhbmNlbF9wb3J0X3JlcXVlc3RzKGV4ZWNsaXN0cyk7Ci0JX191bndpbmRf
aW5jb21wbGV0ZV9yZXF1ZXN0cyhjb250YWluZXJfb2YoZXhlY2xpc3RzLAotCQkJCQkJICBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzLAotCQkJCQkJICBleGVjbGlzdHMpKTsKLX0KLQogc3RhdGljIHZv
aWQgdmlydHVhbF91cGRhdGVfcmVnaXN0ZXJfb2Zmc2V0cyh1MzIgKnJlZ3MsCiAJCQkJCSAgICBz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CkBAIC03OTIsNyArNzgyLDcgQEAgc3Rh
dGljIGJvb2wgdmlydHVhbF9tYXRjaGVzKGNvbnN0IHN0cnVjdCB2aXJ0dWFsX2VuZ2luZSAqdmUs
CiAJICogd2UgcmV1c2UgdGhlIHJlZ2lzdGVyIG9mZnNldHMpLiBUaGlzIGlzIGEgdmVyeSBzbWFs
bAogCSAqIGh5c3RlcnNpcyBvbiB0aGUgZ3JlZWR5IHNlZWxjdGlvbiBhbGdvcml0aG0uCiAJICov
Ci0JaW5mbGlnaHQgPSBSRUFEX09OQ0UodmUtPmNvbnRleHQuaW5mbGlnaHQpOworCWluZmxpZ2h0
ID0gaW50ZWxfY29udGV4dF9pbmZsaWdodCgmdmUtPmNvbnRleHQpOwogCWlmIChpbmZsaWdodCAm
JiBpbmZsaWdodCAhPSBlbmdpbmUpCiAJCXJldHVybiBmYWxzZTsKIApAQCAtODE1LDEzICs4MDUs
MjMgQEAgc3RhdGljIHZvaWQgdmlydHVhbF94ZmVyX2JyZWFkY3J1bWJzKHN0cnVjdCB2aXJ0dWFs
X2VuZ2luZSAqdmUsCiAJc3Bpbl91bmxvY2soJm9sZC0+YnJlYWRjcnVtYnMuaXJxX2xvY2spOwog
fQogCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAqCitsYXN0X2FjdGl2ZShjb25zdCBzdHJ1
Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqZXhlY2xpc3RzKQoreworCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKiBjb25zdCAqbGFzdCA9IGV4ZWNsaXN0cy0+YWN0aXZlOworCisJd2hpbGUgKCpsYXN0
ICYmIGk5MTVfcmVxdWVzdF9jb21wbGV0ZWQoKmxhc3QpKQorCQlsYXN0Kys7CisKKwlyZXR1cm4g
Kmxhc3Q7Cit9CisKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1ZXVlKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKmVuZ2luZSkKIHsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNsaXN0cyAqIGNv
bnN0IGV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKLQlzdHJ1Y3QgZXhlY2xpc3RfcG9y
dCAqcG9ydCA9IGV4ZWNsaXN0cy0+cG9ydDsKLQljb25zdCBzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAq
IGNvbnN0IGxhc3RfcG9ydCA9Ci0JCSZleGVjbGlzdHMtPnBvcnRbZXhlY2xpc3RzLT5wb3J0X21h
c2tdOwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKmxhc3QgPSBwb3J0X3JlcXVlc3QocG9ydCk7CisJ
c3RydWN0IGk5MTVfcmVxdWVzdCAqKnBvcnQgPSBleGVjbGlzdHMtPnBlbmRpbmc7CisJc3RydWN0
IGk5MTVfcmVxdWVzdCAqKiBjb25zdCBsYXN0X3BvcnQgPSBwb3J0ICsgZXhlY2xpc3RzLT5wb3J0
X21hc2s7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdDsKIAlzdHJ1Y3QgcmJfbm9kZSAqcmI7
CiAJYm9vbCBzdWJtaXQgPSBmYWxzZTsKIApAQCAtODY3LDY1ICs4NjcsNzIgQEAgc3RhdGljIHZv
aWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQli
cmVhazsKIAl9CiAKKwkvKgorCSAqIElmIHRoZSBxdWV1ZSBpcyBoaWdoZXIgcHJpb3JpdHkgdGhh
biB0aGUgbGFzdAorCSAqIHJlcXVlc3QgaW4gdGhlIGN1cnJlbnRseSBhY3RpdmUgY29udGV4dCwg
c3VibWl0IGFmcmVzaC4KKwkgKiBXZSB3aWxsIHJlc3VibWl0IGFnYWluIGFmdGVyd2FyZHMgaW4g
Y2FzZSB3ZSBuZWVkIHRvIHNwbGl0CisJICogdGhlIGFjdGl2ZSBjb250ZXh0IHRvIGludGVyamVj
dCB0aGUgcHJlZW1wdGlvbiByZXF1ZXN0LAorCSAqIGkuZS4gd2Ugd2lsbCByZXRyaWdnZXIgcHJl
ZW1wdGlvbiBmb2xsb3dpbmcgdGhlIGFjayBpbiBjYXNlCisJICogb2YgdHJvdWJsZS4KKwkgKi8K
KwlsYXN0ID0gbGFzdF9hY3RpdmUoZXhlY2xpc3RzKTsKIAlpZiAobGFzdCkgewotCQkvKgotCQkg
KiBEb24ndCByZXN1Ym1pdCBvciBzd2l0Y2ggdW50aWwgYWxsIG91dHN0YW5kaW5nCi0JCSAqIHBy
ZWVtcHRpb25zIChsaXRlLXJlc3RvcmUpIGFyZSBzZWVuLiBUaGVuIHdlCi0JCSAqIGtub3cgdGhl
IG5leHQgcHJlZW1wdGlvbiBzdGF0dXMgd2Ugc2VlIGNvcnJlc3BvbmRzCi0JCSAqIHRvIHRoaXMg
RUxTUCB1cGRhdGUuCi0JCSAqLwotCQlHRU1fQlVHX09OKCFleGVjbGlzdHNfaXNfYWN0aXZlKGV4
ZWNsaXN0cywKLQkJCQkJCUVYRUNMSVNUU19BQ1RJVkVfVVNFUikpOwotCQlHRU1fQlVHX09OKCFw
b3J0X2NvdW50KCZwb3J0WzBdKSk7Ci0KLQkJLyoKLQkJICogSWYgd2Ugd3JpdGUgdG8gRUxTUCBh
IHNlY29uZCB0aW1lIGJlZm9yZSB0aGUgSFcgaGFzIGhhZAotCQkgKiBhIGNoYW5jZSB0byByZXNw
b25kIHRvIHRoZSBwcmV2aW91cyB3cml0ZSwgd2UgY2FuIGNvbmZ1c2UKLQkJICogdGhlIEhXIGFu
ZCBoaXQgInVuZGVmaW5lZCBiZWhhdmlvdXIiLiBBZnRlciB3cml0aW5nIHRvIEVMU1AsCi0JCSAq
IHdlIG11c3QgdGhlbiB3YWl0IHVudGlsIHdlIHNlZSBhIGNvbnRleHQtc3dpdGNoIGV2ZW50IGZy
b20KLQkJICogdGhlIEhXIHRvIGluZGljYXRlIHRoYXQgaXQgaGFzIGhhZCBhIGNoYW5jZSB0byBy
ZXNwb25kLgotCQkgKi8KLQkJaWYgKCFleGVjbGlzdHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhF
Q0xJU1RTX0FDVElWRV9IV0FDSykpCi0JCQlyZXR1cm47Ci0KIAkJaWYgKG5lZWRfcHJlZW1wdChl
bmdpbmUsIGxhc3QsIHJiKSkgewotCQkJaW5qZWN0X3ByZWVtcHRfY29udGV4dChlbmdpbmUpOwot
CQkJcmV0dXJuOwotCQl9CisJCQlHRU1fVFJBQ0UoIiVzOiBwcmVlbXB0aW5nIGxhc3Q9JWxseDol
bGxkLCBwcmlvPSVkLCBoaW50PSVkXG4iLAorCQkJCSAgZW5naW5lLT5uYW1lLAorCQkJCSAgbGFz
dC0+ZmVuY2UuY29udGV4dCwKKwkJCQkgIGxhc3QtPmZlbmNlLnNlcW5vLAorCQkJCSAgbGFzdC0+
c2NoZWQuYXR0ci5wcmlvcml0eSwKKwkJCQkgIGV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGlu
dCk7CisJCQkvKgorCQkJICogRG9uJ3QgbGV0IHRoZSBSSU5HX0hFQUQgYWR2YW5jZSBwYXN0IHRo
ZSBicmVhZGNydW1iCisJCQkgKiBhcyB3ZSB1bndpbmQgKGFuZCB1bnRpbCB3ZSByZXN1Ym1pdCkg
c28gdGhhdCB3ZSBkbworCQkJICogbm90IGFjY2lkZW50YWxseSB0ZWxsIGl0IHRvIGdvIGJhY2t3
YXJkcy4KKwkJCSAqLworCQkJcmluZ19wYXVzZShlbmdpbmUpID0gMTsKIAotCQkvKgotCQkgKiBJ
biB0aGVvcnksIHdlIGNvdWxkIGNvYWxlc2NlIG1vcmUgcmVxdWVzdHMgb250bwotCQkgKiB0aGUg
c2Vjb25kIHBvcnQgKHRoZSBmaXJzdCBwb3J0IGlzIGFjdGl2ZSwgd2l0aAotCQkgKiBubyBwcmVl
bXB0aW9ucyBwZW5kaW5nKS4gSG93ZXZlciwgdGhhdCBtZWFucyB3ZQotCQkgKiB0aGVuIGhhdmUg
dG8gZGVhbCB3aXRoIHRoZSBwb3NzaWJsZSBsaXRlLXJlc3RvcmUKLQkJICogb2YgdGhlIHNlY29u
ZCBwb3J0IChhcyB3ZSBzdWJtaXQgdGhlIEVMU1AsIHRoZXJlCi0JCSAqIG1heSBiZSBhIGNvbnRl
eHQtc3dpdGNoKSBidXQgYWxzbyB3ZSBtYXkgY29tcGxldGUKLQkJICogdGhlIHJlc3VibWlzc2lv
biBiZWZvcmUgdGhlIGNvbnRleHQtc3dpdGNoLiBFcmdvLAotCQkgKiBjb2FsZXNjaW5nIG9udG8g
dGhlIHNlY29uZCBwb3J0IHdpbGwgY2F1c2UgYQotCQkgKiBwcmVlbXB0aW9uIGV2ZW50LCBidXQg
d2UgY2Fubm90IHByZWRpY3Qgd2hldGhlcgotCQkgKiB0aGF0IHdpbGwgYWZmZWN0IHBvcnRbMF0g
b3IgcG9ydFsxXS4KLQkJICoKLQkJICogSWYgdGhlIHNlY29uZCBwb3J0IGlzIGFscmVhZHkgYWN0
aXZlLCB3ZSBjYW4gd2FpdAotCQkgKiB1bnRpbCB0aGUgbmV4dCBjb250ZXh0LXN3aXRjaCBiZWZv
cmUgY29udGVtcGxhdGluZwotCQkgKiBuZXcgcmVxdWVzdHMuIFRoZSBHUFUgd2lsbCBiZSBidXN5
IGFuZCB3ZSBzaG91bGQgYmUKLQkJICogYWJsZSB0byByZXN1Ym1pdCB0aGUgbmV3IEVMU1AgYmVm
b3JlIGl0IGlkbGVzLAotCQkgKiBhdm9pZGluZyBwaXBlbGluZSBidWJibGVzIChtb21lbnRhcnkg
cGF1c2VzIHdoZXJlCi0JCSAqIHRoZSBkcml2ZXIgaXMgdW5hYmxlIHRvIGtlZXAgdXAgdGhlIHN1
cHBseSBvZiBuZXcKLQkJICogd29yaykuIEhvd2V2ZXIsIHdlIGhhdmUgdG8gZG91YmxlIGNoZWNr
IHRoYXQgdGhlCi0JCSAqIHByaW9yaXRpZXMgb2YgdGhlIHBvcnRzIGhhdmVuJ3QgYmVlbiBzd2l0
Y2guCi0JCSAqLwotCQlpZiAocG9ydF9jb3VudCgmcG9ydFsxXSkpCi0JCQlyZXR1cm47CisJCQkv
KgorCQkJICogTm90ZSB0aGF0IHdlIGhhdmUgbm90IHN0b3BwZWQgdGhlIEdQVSBhdCB0aGlzIHBv
aW50LAorCQkJICogc28gd2UgYXJlIHVud2luZGluZyB0aGUgaW5jb21wbGV0ZSByZXF1ZXN0cyBh
cyB0aGV5CisJCQkgKiByZW1haW4gaW5mbGlnaHQgYW5kIHNvIGJ5IHRoZSB0aW1lIHdlIGRvIGNv
bXBsZXRlCisJCQkgKiB0aGUgcHJlZW1wdGlvbiwgc29tZSBvZiB0aGUgdW53b3VuZCByZXF1ZXN0
cyBtYXkKKwkJCSAqIGNvbXBsZXRlIQorCQkJICovCisJCQlfX3Vud2luZF9pbmNvbXBsZXRlX3Jl
cXVlc3RzKGVuZ2luZSk7CiAKLQkJLyoKLQkJICogV2FJZGxlTGl0ZVJlc3RvcmU6YmR3LHNrbAot
CQkgKiBBcHBseSB0aGUgd2EgTk9PUHMgdG8gcHJldmVudAotCQkgKiByaW5nOkhFQUQgPT0gcnE6
VEFJTCBhcyB3ZSByZXN1Ym1pdCB0aGUKLQkJICogcmVxdWVzdC4gU2VlIGdlbjhfZW1pdF9maW5p
X2JyZWFkY3J1bWIoKSBmb3IKLQkJICogd2hlcmUgd2UgcHJlcGFyZSB0aGUgcGFkZGluZyBhZnRl
ciB0aGUKLQkJICogZW5kIG9mIHRoZSByZXF1ZXN0LgotCQkgKi8KLQkJbGFzdC0+dGFpbCA9IGxh
c3QtPndhX3RhaWw7CisJCQkvKgorCQkJICogSWYgd2UgbmVlZCB0byByZXR1cm4gdG8gdGhlIHBy
ZWVtcHRlZCBjb250ZXh0LCB3ZQorCQkJICogbmVlZCB0byBza2lwIHRoZSBsaXRlLXJlc3RvcmUg
YW5kIGZvcmNlIGl0IHRvCisJCQkgKiByZWxvYWQgdGhlIFJJTkdfVEFJTC4gT3RoZXJ3aXNlLCB0
aGUgSFcgaGFzIGEKKwkJCSAqIHRlbmRlbmN5IHRvIGlnbm9yZSB1cyByZXdpbmRpbmcgdGhlIFRB
SUwgdG8gdGhlCisJCQkgKiBlbmQgb2YgYW4gZWFybGllciByZXF1ZXN0LgorCQkJICovCisJCQls
YXN0LT5od19jb250ZXh0LT5scmNfZGVzYyB8PSBDVFhfREVTQ19GT1JDRV9SRVNUT1JFOworCQkJ
bGFzdCA9IE5VTEw7CisJCX0gZWxzZSB7CisJCQkvKgorCQkJICogT3RoZXJ3aXNlIGlmIHdlIGFs
cmVhZHkgaGF2ZSBhIHJlcXVlc3QgcGVuZGluZworCQkJICogZm9yIGV4ZWN1dGlvbiBhZnRlciB0
aGUgY3VycmVudCBvbmUsIHdlIGNhbgorCQkJICoganVzdCB3YWl0IHVudGlsIHRoZSBuZXh0IENT
IGV2ZW50IGJlZm9yZQorCQkJICogcXVldWluZyBtb3JlLiBJbiBlaXRoZXIgY2FzZSB3ZSB3aWxs
IGZvcmNlIGEKKwkJCSAqIGxpdGUtcmVzdG9yZSBwcmVlbXB0aW9uIGV2ZW50LCBidXQgaWYgd2Ug
d2FpdAorCQkJICogd2UgaG9wZWZ1bGx5IGNvYWxlc2NlIHNldmVyYWwgdXBkYXRlcyBpbnRvIGEg
c2luZ2xlCisJCQkgKiBzdWJtaXNzaW9uLgorCQkJICovCisJCQlpZiAoIWxpc3RfaXNfbGFzdCgm
bGFzdC0+c2NoZWQubGluaywKKwkJCQkJICAmZW5naW5lLT5hY3RpdmUucmVxdWVzdHMpKQorCQkJ
CXJldHVybjsKKworCQkJLyoKKwkJCSAqIFdhSWRsZUxpdGVSZXN0b3JlOmJkdyxza2wKKwkJCSAq
IEFwcGx5IHRoZSB3YSBOT09QcyB0byBwcmV2ZW50CisJCQkgKiByaW5nOkhFQUQgPT0gcnE6VEFJ
TCBhcyB3ZSByZXN1Ym1pdCB0aGUKKwkJCSAqIHJlcXVlc3QuIFNlZSBnZW44X2VtaXRfZmluaV9i
cmVhZGNydW1iKCkgZm9yCisJCQkgKiB3aGVyZSB3ZSBwcmVwYXJlIHRoZSBwYWRkaW5nIGFmdGVy
IHRoZQorCQkJICogZW5kIG9mIHRoZSByZXF1ZXN0LgorCQkJICovCisJCQlsYXN0LT50YWlsID0g
bGFzdC0+d2FfdGFpbDsKKwkJfQogCX0KIAogCXdoaWxlIChyYikgeyAvKiBYWFggdmlydHVhbCBp
cyBhbHdheXMgdGFraW5nIHByZWNlZGVuY2UgKi8KQEAgLTk1NSw5ICs5NjIsMjQgQEAgc3RhdGlj
IHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQog
CQkJCWNvbnRpbnVlOwogCQkJfQogCisJCQlpZiAoaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkp
IHsKKwkJCQl2ZS0+cmVxdWVzdCA9IE5VTEw7CisJCQkJdmUtPmJhc2UuZXhlY2xpc3RzLnF1ZXVl
X3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOworCQkJCXJiX2VyYXNlX2NhY2hlZChyYiwgJmV4ZWNs
aXN0cy0+dmlydHVhbCk7CisJCQkJUkJfQ0xFQVJfTk9ERShyYik7CisKKwkJCQlycS0+ZW5naW5l
ID0gZW5naW5lOworCQkJCV9faTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7CisKKwkJCQlzcGluX3Vu
bG9jaygmdmUtPmJhc2UuYWN0aXZlLmxvY2spOworCisJCQkJcmIgPSByYl9maXJzdF9jYWNoZWQo
JmV4ZWNsaXN0cy0+dmlydHVhbCk7CisJCQkJY29udGludWU7CisJCQl9CisKIAkJCWlmIChsYXN0
ICYmICFjYW5fbWVyZ2VfcnEobGFzdCwgcnEpKSB7CiAJCQkJc3Bpbl91bmxvY2soJnZlLT5iYXNl
LmFjdGl2ZS5sb2NrKTsKLQkJCQlyZXR1cm47IC8qIGxlYXZlIHRoaXMgcnEgZm9yIGFub3RoZXIg
ZW5naW5lICovCisJCQkJcmV0dXJuOyAvKiBsZWF2ZSB0aGlzIGZvciBhbm90aGVyICovCiAJCQl9
CiAKIAkJCUdFTV9UUkFDRSgiJXM6IHZpcnR1YWwgcnE9JWxseDolbGxkJXMsIG5ldyBlbmdpbmU/
ICVzXG4iLApAQCAtMTAwNiw5ICsxMDI4LDEwIEBAIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19kZXF1
ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCX0KIAogCQkJX19pOTE1X3Jl
cXVlc3Rfc3VibWl0KHJxKTsKLQkJCXRyYWNlX2k5MTVfcmVxdWVzdF9pbihycSwgcG9ydF9pbmRl
eChwb3J0LCBleGVjbGlzdHMpKTsKLQkJCXN1Ym1pdCA9IHRydWU7Ci0JCQlsYXN0ID0gcnE7CisJ
CQlpZiAoIWk5MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKSB7CisJCQkJc3VibWl0ID0gdHJ1ZTsK
KwkJCQlsYXN0ID0gcnE7CisJCQl9CiAJCX0KIAogCQlzcGluX3VubG9jaygmdmUtPmJhc2UuYWN0
aXZlLmxvY2spOwpAQCAtMTAyMSw2ICsxMDQ0LDkgQEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2Rl
cXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQlpbnQgaTsKIAogCQlwcmlv
bGlzdF9mb3JfZWFjaF9yZXF1ZXN0X2NvbnN1bWUocnEsIHJuLCBwLCBpKSB7CisJCQlpZiAoaTkx
NV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCisJCQkJZ290byBza2lwOworCiAJCQkvKgogCQkJICog
Q2FuIHdlIGNvbWJpbmUgdGhpcyByZXF1ZXN0IHdpdGggdGhlIGN1cnJlbnQgcG9ydD8KIAkJCSAq
IEl0IGhhcyB0byBiZSB0aGUgc2FtZSBjb250ZXh0L3JpbmdidWZmZXIgYW5kIG5vdApAQCAtMTA2
MCwxOSArMTA4NiwxNCBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfZGVxdWV1ZShzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkJICAgIGN0eF9zaW5nbGVfcG9ydF9zdWJtaXNzaW9u
KHJxLT5od19jb250ZXh0KSkKIAkJCQkJZ290byBkb25lOwogCi0KLQkJCQlpZiAoc3VibWl0KQot
CQkJCQlwb3J0X2Fzc2lnbihwb3J0LCBsYXN0KTsKKwkJCQkqcG9ydCA9IGV4ZWNsaXN0c19zY2hl
ZHVsZV9pbihsYXN0LCBwb3J0IC0gZXhlY2xpc3RzLT5wZW5kaW5nKTsKIAkJCQlwb3J0Kys7Ci0K
LQkJCQlHRU1fQlVHX09OKHBvcnRfaXNzZXQocG9ydCkpOwogCQkJfQogCi0JCQlfX2k5MTVfcmVx
dWVzdF9zdWJtaXQocnEpOwotCQkJdHJhY2VfaTkxNV9yZXF1ZXN0X2luKHJxLCBwb3J0X2luZGV4
KHBvcnQsIGV4ZWNsaXN0cykpOwotCiAJCQlsYXN0ID0gcnE7CiAJCQlzdWJtaXQgPSB0cnVlOwor
c2tpcDoKKwkJCV9faTkxNV9yZXF1ZXN0X3N1Ym1pdChycSk7CiAJCX0KIAogCQlyYl9lcmFzZV9j
YWNoZWQoJnAtPm5vZGUsICZleGVjbGlzdHMtPnF1ZXVlKTsKQEAgLTEwOTcsNTQgKzExMTgsMzAg
QEAgc3RhdGljIHZvaWQgZXhlY2xpc3RzX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lKQogCSAqIGludGVycnVwdCBmb3Igc2Vjb25kYXJ5IHBvcnRzKS4KIAkgKi8KIAlleGVj
bGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBxdWV1ZV9wcmlvKGV4ZWNsaXN0cyk7CisJR0VN
X1RSQUNFKCIlczogcXVldWVfcHJpb3JpdHlfaGludDolZCwgc3VibWl0OiVzXG4iLAorCQkgIGVu
Z2luZS0+bmFtZSwgZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9oaW50LAorCQkgIHllc25vKHN1
Ym1pdCkpOwogCiAJaWYgKHN1Ym1pdCkgewotCQlwb3J0X2Fzc2lnbihwb3J0LCBsYXN0KTsKKwkJ
KnBvcnQgPSBleGVjbGlzdHNfc2NoZWR1bGVfaW4obGFzdCwgcG9ydCAtIGV4ZWNsaXN0cy0+cGVu
ZGluZyk7CisJCW1lbXNldChwb3J0ICsgMSwgMCwgKGxhc3RfcG9ydCAtIHBvcnQpICogc2l6ZW9m
KCpwb3J0KSk7CiAJCWV4ZWNsaXN0c19zdWJtaXRfcG9ydHMoZW5naW5lKTsKIAl9Ci0KLQkvKiBX
ZSBtdXN0IGFsd2F5cyBrZWVwIHRoZSBiZWFzdCBmZWQgaWYgd2UgaGF2ZSB3b3JrIHBpbGVkIHVw
ICovCi0JR0VNX0JVR19PTihyYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+cXVldWUpICYmCi0J
CSAgICFwb3J0X2lzc2V0KGV4ZWNsaXN0cy0+cG9ydCkpOwotCi0JLyogUmUtZXZhbHVhdGUgdGhl
IGV4ZWN1dGluZyBjb250ZXh0IHNldHVwIGFmdGVyIGVhY2ggcHJlZW1wdGl2ZSBraWNrICovCi0J
aWYgKGxhc3QpCi0JCWV4ZWNsaXN0c191c2VyX2JlZ2luKGV4ZWNsaXN0cywgZXhlY2xpc3RzLT5w
b3J0KTsKLQotCS8qIElmIHRoZSBlbmdpbmUgaXMgbm93IGlkbGUsIHNvIHNob3VsZCBiZSB0aGUg
ZmxhZzsgYW5kIHZpY2UgdmVyc2EuICovCi0JR0VNX0JVR19PTihleGVjbGlzdHNfaXNfYWN0aXZl
KCZlbmdpbmUtPmV4ZWNsaXN0cywKLQkJCQkgICAgICAgRVhFQ0xJU1RTX0FDVElWRV9VU0VSKSA9
PQotCQkgICAhcG9ydF9pc3NldChlbmdpbmUtPmV4ZWNsaXN0cy5wb3J0KSk7CiB9CiAKIHZvaWQK
IGV4ZWNsaXN0c19jYW5jZWxfcG9ydF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2V4ZWNs
aXN0cyAqIGNvbnN0IGV4ZWNsaXN0cykKIHsKLQlzdHJ1Y3QgZXhlY2xpc3RfcG9ydCAqcG9ydCA9
IGV4ZWNsaXN0cy0+cG9ydDsKLQl1bnNpZ25lZCBpbnQgbnVtX3BvcnRzID0gZXhlY2xpc3RzX251
bV9wb3J0cyhleGVjbGlzdHMpOwotCi0Jd2hpbGUgKG51bV9wb3J0cy0tICYmIHBvcnRfaXNzZXQo
cG9ydCkpIHsKLQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEgPSBwb3J0X3JlcXVlc3QocG9ydCk7
Ci0KLQkJR0VNX1RSQUNFKCIlczpwb3J0JXUgZmVuY2UgJWxseDolbGxkLCAoY3VycmVudCAlZClc
biIsCi0JCQkgIHJxLT5lbmdpbmUtPm5hbWUsCi0JCQkgICh1bnNpZ25lZCBpbnQpKHBvcnQgLSBl
eGVjbGlzdHMtPnBvcnQpLAotCQkJICBycS0+ZmVuY2UuY29udGV4dCwgcnEtPmZlbmNlLnNlcW5v
LAotCQkJICBod3NwX3NlcW5vKHJxKSk7CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqIGNvbnN0ICpw
b3J0LCAqcnE7CiAKLQkJR0VNX0JVR19PTighZXhlY2xpc3RzLT5hY3RpdmUpOwotCQlleGVjbGlz
dHNfY29udGV4dF9zY2hlZHVsZV9vdXQocnEsCi0JCQkJCSAgICAgICBpOTE1X3JlcXVlc3RfY29t
cGxldGVkKHJxKSA/Ci0JCQkJCSAgICAgICBJTlRFTF9DT05URVhUX1NDSEVEVUxFX09VVCA6Ci0J
CQkJCSAgICAgICBJTlRFTF9DT05URVhUX1NDSEVEVUxFX1BSRUVNUFRFRCk7CisJZm9yIChwb3J0
ID0gZXhlY2xpc3RzLT5wZW5kaW5nOyAocnEgPSAqcG9ydCk7IHBvcnQrKykKKwkJZXhlY2xpc3Rz
X3NjaGVkdWxlX291dChycSk7CisJbWVtc2V0KGV4ZWNsaXN0cy0+cGVuZGluZywgMCwgc2l6ZW9m
KGV4ZWNsaXN0cy0+cGVuZGluZykpOwogCi0JCWk5MTVfcmVxdWVzdF9wdXQocnEpOwotCi0JCW1l
bXNldChwb3J0LCAwLCBzaXplb2YoKnBvcnQpKTsKLQkJcG9ydCsrOwotCX0KLQotCWV4ZWNsaXN0
c19jbGVhcl9hbGxfYWN0aXZlKGV4ZWNsaXN0cyk7CisJZm9yIChwb3J0ID0gZXhlY2xpc3RzLT5h
Y3RpdmU7IChycSA9ICpwb3J0KTsgcG9ydCsrKQorCQlleGVjbGlzdHNfc2NoZWR1bGVfb3V0KHJx
KTsKKwlleGVjbGlzdHMtPmFjdGl2ZSA9CisJCW1lbXNldChleGVjbGlzdHMtPmluZmxpZ2h0LCAw
LCBzaXplb2YoZXhlY2xpc3RzLT5pbmZsaWdodCkpOwogfQogCiBzdGF0aWMgaW5saW5lIHZvaWQK
QEAgLTExNjMsNyArMTE2MCw2IEBAIHJlc2V0X2luX3Byb2dyZXNzKGNvbnN0IHN0cnVjdCBpbnRl
bF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCiBzdGF0aWMgdm9pZCBwcm9jZXNzX2NzYihz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVsX2VuZ2luZV9l
eGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0
IGV4ZWNsaXN0X3BvcnQgKnBvcnQgPSBleGVjbGlzdHMtPnBvcnQ7CiAJY29uc3QgdTMyICogY29u
c3QgYnVmID0gZXhlY2xpc3RzLT5jc2Jfc3RhdHVzOwogCWNvbnN0IHU4IG51bV9lbnRyaWVzID0g
ZXhlY2xpc3RzLT5jc2Jfc2l6ZTsKIAl1OCBoZWFkLCB0YWlsOwpAQCAtMTE5OCw5ICsxMTk0LDcg
QEAgc3RhdGljIHZvaWQgcHJvY2Vzc19jc2Ioc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQogCXJtYigpOwogCiAJZG8gewotCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycTsKIAkJdW5zaWdu
ZWQgaW50IHN0YXR1czsKLQkJdW5zaWduZWQgaW50IGNvdW50OwogCiAJCWlmICgrK2hlYWQgPT0g
bnVtX2VudHJpZXMpCiAJCQloZWFkID0gMDsKQEAgLTEyMjMsNjggKzEyMTcsMzcgQEAgc3RhdGlj
IHZvaWQgcHJvY2Vzc19jc2Ioc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkgKiBz
dGF0dXMgbm90aWZpZXIuCiAJCSAqLwogCi0JCUdFTV9UUkFDRSgiJXMgY3NiWyVkXTogc3RhdHVz
PTB4JTA4eDoweCUwOHgsIGFjdGl2ZT0weCV4XG4iLAorCQlHRU1fVFJBQ0UoIiVzIGNzYlslZF06
IHN0YXR1cz0weCUwOHg6MHglMDh4XG4iLAogCQkJICBlbmdpbmUtPm5hbWUsIGhlYWQsCi0JCQkg
IGJ1ZlsyICogaGVhZCArIDBdLCBidWZbMiAqIGhlYWQgKyAxXSwKLQkJCSAgZXhlY2xpc3RzLT5h
Y3RpdmUpOworCQkJICBidWZbMiAqIGhlYWQgKyAwXSwgYnVmWzIgKiBoZWFkICsgMV0pOwogCiAJ
CXN0YXR1cyA9IGJ1ZlsyICogaGVhZF07Ci0JCWlmIChzdGF0dXMgJiAoR0VOOF9DVFhfU1RBVFVT
X0lETEVfQUNUSVZFIHwKLQkJCSAgICAgIEdFTjhfQ1RYX1NUQVRVU19QUkVFTVBURUQpKQotCQkJ
ZXhlY2xpc3RzX3NldF9hY3RpdmUoZXhlY2xpc3RzLAotCQkJCQkgICAgIEVYRUNMSVNUU19BQ1RJ
VkVfSFdBQ0spOwotCQlpZiAoc3RhdHVzICYgR0VOOF9DVFhfU1RBVFVTX0FDVElWRV9JRExFKQot
CQkJZXhlY2xpc3RzX2NsZWFyX2FjdGl2ZShleGVjbGlzdHMsCi0JCQkJCSAgICAgICBFWEVDTElT
VFNfQUNUSVZFX0hXQUNLKTsKLQotCQlpZiAoIShzdGF0dXMgJiBHRU44X0NUWF9TVEFUVVNfQ09N
UExFVEVEX01BU0spKQotCQkJY29udGludWU7CisJCWlmIChzdGF0dXMgJiBHRU44X0NUWF9TVEFU
VVNfSURMRV9BQ1RJVkUpIHsKK3Byb21vdGU6CisJCQlHRU1fQlVHX09OKCFhc3NlcnRfcGVuZGlu
Z192YWxpZChleGVjbGlzdHMsICJwcm9tb3RlIikpOworCQkJZXhlY2xpc3RzLT5hY3RpdmUgPQor
CQkJCW1lbWNweShleGVjbGlzdHMtPmluZmxpZ2h0LAorCQkJCSAgICAgICBleGVjbGlzdHMtPnBl
bmRpbmcsCisJCQkJICAgICAgIGV4ZWNsaXN0c19udW1fcG9ydHMoZXhlY2xpc3RzKSAqCisJCQkJ
ICAgICAgIHNpemVvZigqZXhlY2xpc3RzLT5wZW5kaW5nKSk7CisJCQlleGVjbGlzdHMtPnBlbmRp
bmdbMF0gPSBOVUxMOwogCi0JCS8qIFdlIHNob3VsZCBuZXZlciBnZXQgYSBDT01QTEVURUQgfCBJ
RExFX0FDVElWRSEgKi8KLQkJR0VNX0JVR19PTihzdGF0dXMgJiBHRU44X0NUWF9TVEFUVVNfSURM
RV9BQ1RJVkUpOworCQkJaWYgKCFpbmplY3RfcHJlZW1wdF9oYW5nKGV4ZWNsaXN0cykpCisJCQkJ
cmluZ19wYXVzZShlbmdpbmUpID0gMDsKKwkJfSBlbHNlIGlmIChzdGF0dXMgJiBHRU44X0NUWF9T
VEFUVVNfUFJFRU1QVEVEKSB7CisJCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICogY29uc3QgKnBvcnQg
PSBleGVjbGlzdHMtPmFjdGl2ZTsKIAotCQlpZiAoc3RhdHVzICYgR0VOOF9DVFhfU1RBVFVTX0NP
TVBMRVRFICYmCi0JCSAgICBidWZbMipoZWFkICsgMV0gPT0gZXhlY2xpc3RzLT5wcmVlbXB0X2Nv
bXBsZXRlX3N0YXR1cykgewotCQkJR0VNX1RSQUNFKCIlcyBwcmVlbXB0LWlkbGVcbiIsIGVuZ2lu
ZS0+bmFtZSk7Ci0JCQljb21wbGV0ZV9wcmVlbXB0X2NvbnRleHQoZXhlY2xpc3RzKTsKLQkJCWNv
bnRpbnVlOwotCQl9Ci0KLQkJaWYgKHN0YXR1cyAmIEdFTjhfQ1RYX1NUQVRVU19QUkVFTVBURUQg
JiYKLQkJICAgIGV4ZWNsaXN0c19pc19hY3RpdmUoZXhlY2xpc3RzLAotCQkJCQlFWEVDTElTVFNf
QUNUSVZFX1BSRUVNUFQpKQotCQkJY29udGludWU7CisJCQl0cmFjZV9wb3J0cyhleGVjbGlzdHMs
ICJwcmVlbXB0ZWQiLCBleGVjbGlzdHMtPmFjdGl2ZSk7CiAKLQkJR0VNX0JVR19PTighZXhlY2xp
c3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsCi0JCQkJCQlFWEVDTElTVFNfQUNUSVZFX1VTRVIpKTsK
KwkJCXdoaWxlICgqcG9ydCkKKwkJCQlleGVjbGlzdHNfc2NoZWR1bGVfb3V0KCpwb3J0KyspOwog
Ci0JCXJxID0gcG9ydF91bnBhY2socG9ydCwgJmNvdW50KTsKLQkJR0VNX1RSQUNFKCIlcyBvdXRb
MF06IGN0eD0lZC4lZCwgZmVuY2UgJWxseDolbGxkIChjdXJyZW50ICVkKSwgcHJpbz0lZFxuIiwK
LQkJCSAgZW5naW5lLT5uYW1lLAotCQkJICBwb3J0LT5jb250ZXh0X2lkLCBjb3VudCwKLQkJCSAg
cnEgPyBycS0+ZmVuY2UuY29udGV4dCA6IDAsCi0JCQkgIHJxID8gcnEtPmZlbmNlLnNlcW5vIDog
MCwKLQkJCSAgcnEgPyBod3NwX3NlcW5vKHJxKSA6IDAsCi0JCQkgIHJxID8gcnFfcHJpbyhycSkg
OiAwKTsKKwkJCWdvdG8gcHJvbW90ZTsKKwkJfSBlbHNlIGlmICgqZXhlY2xpc3RzLT5hY3RpdmUp
IHsKKwkJCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxID0gKmV4ZWNsaXN0cy0+YWN0aXZlKys7CiAK
LQkJLyogQ2hlY2sgdGhlIGNvbnRleHQvZGVzYyBpZCBmb3IgdGhpcyBldmVudCBtYXRjaGVzICov
Ci0JCUdFTV9ERUJVR19CVUdfT04oYnVmWzIgKiBoZWFkICsgMV0gIT0gcG9ydC0+Y29udGV4dF9p
ZCk7Ci0KLQkJR0VNX0JVR19PTihjb3VudCA9PSAwKTsKLQkJaWYgKC0tY291bnQgPT0gMCkgewot
CQkJLyoKLQkJCSAqIE9uIHRoZSBmaW5hbCBldmVudCBjb3JyZXNwb25kaW5nIHRvIHRoZQotCQkJ
ICogc3VibWlzc2lvbiBvZiB0aGlzIGNvbnRleHQsIHdlIGV4cGVjdCBlaXRoZXIKLQkJCSAqIGFu
IGVsZW1lbnQtc3dpdGNoIGV2ZW50IG9yIGEgY29tcGxldGlvbgotCQkJICogZXZlbnQgKGFuZCBv
biBjb21wbGV0aW9uLCB0aGUgYWN0aXZlLWlkbGUKLQkJCSAqIG1hcmtlcikuIE5vIG1vcmUgcHJl
ZW1wdGlvbnMsIGxpdGUtcmVzdG9yZQotCQkJICogb3Igb3RoZXJ3aXNlLgotCQkJICovCi0JCQlH
RU1fQlVHX09OKHN0YXR1cyAmIEdFTjhfQ1RYX1NUQVRVU19QUkVFTVBURUQpOwotCQkJR0VNX0JV
R19PTihwb3J0X2lzc2V0KCZwb3J0WzFdKSAmJgotCQkJCSAgICEoc3RhdHVzICYgR0VOOF9DVFhf
U1RBVFVTX0VMRU1FTlRfU1dJVENIKSk7Ci0JCQlHRU1fQlVHX09OKCFwb3J0X2lzc2V0KCZwb3J0
WzFdKSAmJgotCQkJCSAgICEoc3RhdHVzICYgR0VOOF9DVFhfU1RBVFVTX0FDVElWRV9JRExFKSk7
CisJCQl0cmFjZV9wb3J0cyhleGVjbGlzdHMsICJjb21wbGV0ZWQiLAorCQkJCSAgICBleGVjbGlz
dHMtPmFjdGl2ZSAtIDEpOwogCiAJCQkvKgogCQkJICogV2UgcmVseSBvbiB0aGUgaGFyZHdhcmUg
YmVpbmcgc3Ryb25nbHkKQEAgLTEyOTMsMjEgKzEyNTYsMTAgQEAgc3RhdGljIHZvaWQgcHJvY2Vz
c19jc2Ioc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogCQkJICogdXNlciBpbnRlcnJ1
cHQgYW5kIENTQiBpcyBwcm9jZXNzZWQuCiAJCQkgKi8KIAkJCUdFTV9CVUdfT04oIWk5MTVfcmVx
dWVzdF9jb21wbGV0ZWQocnEpKTsKKwkJCWV4ZWNsaXN0c19zY2hlZHVsZV9vdXQocnEpOwogCi0J
CQlleGVjbGlzdHNfY29udGV4dF9zY2hlZHVsZV9vdXQocnEsCi0JCQkJCQkgICAgICAgSU5URUxf
Q09OVEVYVF9TQ0hFRFVMRV9PVVQpOwotCQkJaTkxNV9yZXF1ZXN0X3B1dChycSk7Ci0KLQkJCUdF
TV9UUkFDRSgiJXMgY29tcGxldGVkIGN0eD0lZFxuIiwKLQkJCQkgIGVuZ2luZS0+bmFtZSwgcG9y
dC0+Y29udGV4dF9pZCk7Ci0KLQkJCXBvcnQgPSBleGVjbGlzdHNfcG9ydF9jb21wbGV0ZShleGVj
bGlzdHMsIHBvcnQpOwotCQkJaWYgKHBvcnRfaXNzZXQocG9ydCkpCi0JCQkJZXhlY2xpc3RzX3Vz
ZXJfYmVnaW4oZXhlY2xpc3RzLCBwb3J0KTsKLQkJCWVsc2UKLQkJCQlleGVjbGlzdHNfdXNlcl9l
bmQoZXhlY2xpc3RzKTsKLQkJfSBlbHNlIHsKLQkJCXBvcnRfc2V0KHBvcnQsIHBvcnRfcGFjayhy
cSwgY291bnQpKTsKKwkJCUdFTV9CVUdfT04oZXhlY2xpc3RzLT5hY3RpdmUgLSBleGVjbGlzdHMt
PmluZmxpZ2h0ID4KKwkJCQkgICBleGVjbGlzdHNfbnVtX3BvcnRzKGV4ZWNsaXN0cykpOwogCQl9
CiAJfSB3aGlsZSAoaGVhZCAhPSB0YWlsKTsKIApAQCAtMTMzMiw3ICsxMjg0LDcgQEAgc3RhdGlj
IHZvaWQgX19leGVjbGlzdHNfc3VibWlzc2lvbl90YXNrbGV0KHN0cnVjdCBpbnRlbF9lbmdpbmVf
Y3MgKmNvbnN0IGVuZ2luZSkKIAlsb2NrZGVwX2Fzc2VydF9oZWxkKCZlbmdpbmUtPmFjdGl2ZS5s
b2NrKTsKIAogCXByb2Nlc3NfY3NiKGVuZ2luZSk7Ci0JaWYgKCFleGVjbGlzdHNfaXNfYWN0aXZl
KCZlbmdpbmUtPmV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9QUkVFTVBUKSkKKwlpZiAoIWVu
Z2luZS0+ZXhlY2xpc3RzLnBlbmRpbmdbMF0pCiAJCWV4ZWNsaXN0c19kZXF1ZXVlKGVuZ2luZSk7
CiB9CiAKQEAgLTEzNDUsMTEgKzEyOTcsNiBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfc3VibWlz
c2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICogY29uc3QgZW5naW5lID0gKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKilkYXRhOwogCXVuc2ln
bmVkIGxvbmcgZmxhZ3M7CiAKLQlHRU1fVFJBQ0UoIiVzIGF3YWtlPz0lZCwgYWN0aXZlPSV4XG4i
LAotCQkgIGVuZ2luZS0+bmFtZSwKLQkJICAhIWludGVsX3dha2VyZWZfYWN0aXZlKCZlbmdpbmUt
Pndha2VyZWYpLAotCQkgIGVuZ2luZS0+ZXhlY2xpc3RzLmFjdGl2ZSk7Ci0KIAlzcGluX2xvY2tf
aXJxc2F2ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogCV9fZXhlY2xpc3RzX3N1Ym1p
c3Npb25fdGFza2xldChlbmdpbmUpOwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJmVuZ2luZS0+
YWN0aXZlLmxvY2ssIGZsYWdzKTsKQEAgLTEzNzYsMTIgKzEzMjMsMTYgQEAgc3RhdGljIHZvaWQg
X19zdWJtaXRfcXVldWVfaW1tKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJdGFz
a2xldF9oaV9zY2hlZHVsZSgmZXhlY2xpc3RzLT50YXNrbGV0KTsKIH0KIAotc3RhdGljIHZvaWQg
c3VibWl0X3F1ZXVlKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgaW50IHByaW8pCitz
dGF0aWMgdm9pZCBzdWJtaXRfcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAor
CQkJIGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewotCWlmIChwcmlvID4gZW5naW5l
LT5leGVjbGlzdHMucXVldWVfcHJpb3JpdHlfaGludCkgewotCQllbmdpbmUtPmV4ZWNsaXN0cy5x
dWV1ZV9wcmlvcml0eV9oaW50ID0gcHJpbzsKLQkJX19zdWJtaXRfcXVldWVfaW1tKGVuZ2luZSk7
Ci0JfQorCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMgPSAmZW5naW5l
LT5leGVjbGlzdHM7CisKKwlpZiAocnFfcHJpbyhycSkgPD0gZXhlY2xpc3RzLT5xdWV1ZV9wcmlv
cml0eV9oaW50KQorCQlyZXR1cm47CisKKwlleGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQg
PSBycV9wcmlvKHJxKTsKKwlfX3N1Ym1pdF9xdWV1ZV9pbW0oZW5naW5lKTsKIH0KIAogc3RhdGlj
IHZvaWQgZXhlY2xpc3RzX3N1Ym1pdF9yZXF1ZXN0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVl
c3QpCkBAIC0xMzk3LDcgKzEzNDgsNyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfc3VibWl0X3Jl
cXVlc3Qoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAlHRU1fQlVHX09OKFJCX0VNUFRZ
X1JPT1QoJmVuZ2luZS0+ZXhlY2xpc3RzLnF1ZXVlLnJiX3Jvb3QpKTsKIAlHRU1fQlVHX09OKGxp
c3RfZW1wdHkoJnJlcXVlc3QtPnNjaGVkLmxpbmspKTsKIAotCXN1Ym1pdF9xdWV1ZShlbmdpbmUs
IHJxX3ByaW8ocmVxdWVzdCkpOworCXN1Ym1pdF9xdWV1ZShlbmdpbmUsIHJlcXVlc3QpOwogCiAJ
c3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogfQpA
QCAtMjA0OCwyNyArMTk5OSwxMyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcmVzZXRfcHJlcGFy
ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJc3Bpbl91bmxvY2tfaXJxcmVzdG9y
ZSgmZW5naW5lLT5hY3RpdmUubG9jaywgZmxhZ3MpOwogfQogCi1zdGF0aWMgYm9vbCBscmNfcmVn
c19vayhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKLXsKLQljb25zdCBzdHJ1Y3QgaW50
ZWxfcmluZyAqcmluZyA9IHJxLT5yaW5nOwotCWNvbnN0IHUzMiAqcmVncyA9IHJxLT5od19jb250
ZXh0LT5scmNfcmVnX3N0YXRlOwotCi0JLyogUXVpY2sgc3BvdCBjaGVjayBmb3IgdGhlIGNvbW1v
biBzaWducyBvZiBjb250ZXh0IGNvcnJ1cHRpb24gKi8KLQotCWlmIChyZWdzW0NUWF9SSU5HX0JV
RkZFUl9DT05UUk9MICsgMV0gIT0KLQkgICAgKFJJTkdfQ1RMX1NJWkUocmluZy0+c2l6ZSkgfCBS
SU5HX1ZBTElEKSkKLQkJcmV0dXJuIGZhbHNlOwotCi0JaWYgKHJlZ3NbQ1RYX1JJTkdfQlVGRkVS
X1NUQVJUICsgMV0gIT0gaTkxNV9nZ3R0X29mZnNldChyaW5nLT52bWEpKQotCQlyZXR1cm4gZmFs
c2U7Ci0KLQlyZXR1cm4gdHJ1ZTsKLX0KLQotc3RhdGljIHZvaWQgcmVzZXRfY3NiX3BvaW50ZXJz
KHN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICpleGVjbGlzdHMpCitzdGF0aWMgdm9pZCBy
ZXNldF9jc2JfcG9pbnRlcnMoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQogeworCXN0
cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2luZS0+
ZXhlY2xpc3RzOwogCWNvbnN0IHVuc2lnbmVkIGludCByZXNldF92YWx1ZSA9IGV4ZWNsaXN0cy0+
Y3NiX3NpemUgLSAxOwogCisJcmluZ19wYXVzZShlbmdpbmUpID0gMDsKKwogCS8qCiAJICogQWZ0
ZXIgYSByZXNldCwgdGhlIEhXIHN0YXJ0cyB3cml0aW5nIGludG8gQ1NCIGVudHJ5IFswXS4gV2UK
IAkgKiB0aGVyZWZvcmUgaGF2ZSB0byBzZXQgb3VyIEhFQUQgcG9pbnRlciBiYWNrIG9uZSBlbnRy
eSBzbyB0aGF0CkBAIC0yMTE1LDE4ICsyMDUyLDIxIEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3Rz
X3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCXBy
b2Nlc3NfY3NiKGVuZ2luZSk7IC8qIGRyYWluIHByZWVtcHRpb24gZXZlbnRzICovCiAKIAkvKiBG
b2xsb3dpbmcgdGhlIHJlc2V0LCB3ZSBuZWVkIHRvIHJlbG9hZCB0aGUgQ1NCIHJlYWQvd3JpdGUg
cG9pbnRlcnMgKi8KLQlyZXNldF9jc2JfcG9pbnRlcnMoJmVuZ2luZS0+ZXhlY2xpc3RzKTsKKwly
ZXNldF9jc2JfcG9pbnRlcnMoZW5naW5lKTsKIAogCS8qCiAJICogU2F2ZSB0aGUgY3VycmVudGx5
IGV4ZWN1dGluZyBjb250ZXh0LCBldmVuIGlmIHdlIGNvbXBsZXRlZAogCSAqIGl0cyByZXF1ZXN0
LCBpdCB3YXMgc3RpbGwgcnVubmluZyBhdCB0aGUgdGltZSBvZiB0aGUKIAkgKiByZXNldCBhbmQg
d2lsbCBoYXZlIGJlZW4gY2xvYmJlcmVkLgogCSAqLwotCWlmICghcG9ydF9pc3NldChleGVjbGlz
dHMtPnBvcnQpKQotCQlnb3RvIG91dF9jbGVhcjsKKwlycSA9IGV4ZWNsaXN0c19hY3RpdmUoZXhl
Y2xpc3RzKTsKKwlpZiAoIXJxKQorCQlyZXR1cm47CiAKLQlycSA9IHBvcnRfcmVxdWVzdChleGVj
bGlzdHMtPnBvcnQpOwogCWNlID0gcnEtPmh3X2NvbnRleHQ7CisJR0VNX0JVR19PTihpOTE1X2Fj
dGl2ZV9pc19pZGxlKCZjZS0+YWN0aXZlKSk7CisJR0VNX0JVR19PTighaTkxNV92bWFfaXNfcGlu
bmVkKGNlLT5zdGF0ZSkpOworCXJxID0gYWN0aXZlX3JlcXVlc3QocnEpOwogCiAJLyoKIAkgKiBD
YXRjaCB1cCB3aXRoIGFueSBtaXNzZWQgY29udGV4dC1zd2l0Y2ggaW50ZXJydXB0cy4KQEAgLTIx
MzksOSArMjA3OSwxMiBAQCBzdGF0aWMgdm9pZCBfX2V4ZWNsaXN0c19yZXNldChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUsIGJvb2wgc3RhbGxlZCkKIAkgKi8KIAlleGVjbGlzdHNfY2Fu
Y2VsX3BvcnRfcmVxdWVzdHMoZXhlY2xpc3RzKTsKIAotCXJxID0gYWN0aXZlX3JlcXVlc3QocnEp
OwotCWlmICghcnEpCisJaWYgKCFycSkgeworCQljZS0+cmluZy0+aGVhZCA9IGNlLT5yaW5nLT50
YWlsOwogCQlnb3RvIG91dF9yZXBsYXk7CisJfQorCisJY2UtPnJpbmctPmhlYWQgPSBpbnRlbF9y
aW5nX3dyYXAoY2UtPnJpbmcsIHJxLT5oZWFkKTsKIAogCS8qCiAJICogSWYgdGhpcyByZXF1ZXN0
IGhhc24ndCBzdGFydGVkIHlldCwgZS5nLiBpdCBpcyB3YWl0aW5nIG9uIGEKQEAgLTIxNTUsNyAr
MjA5OCw3IEBAIHN0YXRpYyB2b2lkIF9fZXhlY2xpc3RzX3Jlc2V0KHN0cnVjdCBpbnRlbF9lbmdp
bmVfY3MgKmVuZ2luZSwgYm9vbCBzdGFsbGVkKQogCSAqIE90aGVyd2lzZSwgaWYgd2UgaGF2ZSBu
b3Qgc3RhcnRlZCB5ZXQsIHRoZSByZXF1ZXN0IHNob3VsZCByZXBsYXkKIAkgKiBwZXJmZWN0bHkg
YW5kIHdlIGRvIG5vdCBuZWVkIHRvIGZsYWcgdGhlIHJlc3VsdCBhcyBiZWluZyBlcnJvbmVvdXMu
CiAJICovCi0JaWYgKCFpOTE1X3JlcXVlc3Rfc3RhcnRlZChycSkgJiYgbHJjX3JlZ3Nfb2socnEp
KQorCWlmICghaTkxNV9yZXF1ZXN0X3N0YXJ0ZWQocnEpKQogCQlnb3RvIG91dF9yZXBsYXk7CiAK
IAkvKgpAQCAtMjE3MCw3ICsyMTEzLDcgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNfcmVzZXQo
c3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJICogaW1hZ2Ug
YmFjayB0byB0aGUgZXhwZWN0ZWQgdmFsdWVzIHRvIHNraXAgb3ZlciB0aGUgZ3VpbHR5IHJlcXVl
c3QuCiAJICovCiAJaTkxNV9yZXNldF9yZXF1ZXN0KHJxLCBzdGFsbGVkKTsKLQlpZiAoIXN0YWxs
ZWQgJiYgbHJjX3JlZ3Nfb2socnEpKQorCWlmICghc3RhbGxlZCkKIAkJZ290byBvdXRfcmVwbGF5
OwogCiAJLyoKQEAgLTIxOTAsMTcgKzIxMzMsMTMgQEAgc3RhdGljIHZvaWQgX19leGVjbGlzdHNf
cmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLCBib29sIHN0YWxsZWQpCiAJZXhl
Y2xpc3RzX2luaXRfcmVnX3N0YXRlKHJlZ3MsIGNlLCBlbmdpbmUsIGNlLT5yaW5nKTsKIAogb3V0
X3JlcGxheToKLQkvKiBSZXJ1biB0aGUgcmVxdWVzdDsgaXRzIHBheWxvYWQgaGFzIGJlZW4gbmV1
dGVyZWQgKGlmIGd1aWx0eSkuICovCi0JY2UtPnJpbmctPmhlYWQgPQotCQlycSA/IGludGVsX3Jp
bmdfd3JhcChjZS0+cmluZywgcnEtPmhlYWQpIDogY2UtPnJpbmctPnRhaWw7CisJR0VNX1RSQUNF
KCIlcyByZXBsYXkge2hlYWQ6JTA0eCwgdGFpbDolMDR4XG4iLAorCQkgIGVuZ2luZS0+bmFtZSwg
Y2UtPnJpbmctPmhlYWQsIGNlLT5yaW5nLT50YWlsKTsKIAlpbnRlbF9yaW5nX3VwZGF0ZV9zcGFj
ZShjZS0+cmluZyk7CiAJX19leGVjbGlzdHNfdXBkYXRlX3JlZ19zdGF0ZShjZSwgZW5naW5lKTsK
IAogCS8qIFB1c2ggYmFjayBhbnkgaW5jb21wbGV0ZSByZXF1ZXN0cyBmb3IgcmVwbGF5IGFmdGVy
IHRoZSByZXNldC4gKi8KIAlfX3Vud2luZF9pbmNvbXBsZXRlX3JlcXVlc3RzKGVuZ2luZSk7Ci0K
LW91dF9jbGVhcjoKLQlleGVjbGlzdHNfY2xlYXJfYWxsX2FjdGl2ZShleGVjbGlzdHMpOwogfQog
CiBzdGF0aWMgdm9pZCBleGVjbGlzdHNfcmVzZXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lLCBib29sIHN0YWxsZWQpCkBAIC0yMjk2LDcgKzIyMzUsNiBAQCBzdGF0aWMgdm9pZCBleGVj
bGlzdHNfY2FuY2VsX3JlcXVlc3RzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAog
CWV4ZWNsaXN0cy0+cXVldWVfcHJpb3JpdHlfaGludCA9IElOVF9NSU47CiAJZXhlY2xpc3RzLT5x
dWV1ZSA9IFJCX1JPT1RfQ0FDSEVEOwotCUdFTV9CVUdfT04ocG9ydF9pc3NldChleGVjbGlzdHMt
PnBvcnQpKTsKIAogCUdFTV9CVUdfT04oX190YXNrbGV0X2lzX2VuYWJsZWQoJmV4ZWNsaXN0cy0+
dGFza2xldCkpOwogCWV4ZWNsaXN0cy0+dGFza2xldC5mdW5jID0gbm9wX3N1Ym1pc3Npb25fdGFz
a2xldDsKQEAgLTI1MTQsMTUgKzI0NTIsMjkgQEAgc3RhdGljIHUzMiAqZ2VuOF9lbWl0X3dhX3Rh
aWwoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwgdTMyICpjcykKIAlyZXR1cm4gY3M7CiB9
CiAKK3N0YXRpYyB1MzIgKmVtaXRfcHJlZW1wdF9idXN5d2FpdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpyZXF1ZXN0LCB1MzIgKmNzKQoreworCSpjcysrID0gTUlfU0VNQVBIT1JFX1dBSVQgfAorCQlN
SV9TRU1BUEhPUkVfR0xPQkFMX0dUVCB8CisJCU1JX1NFTUFQSE9SRV9QT0xMIHwKKwkJTUlfU0VN
QVBIT1JFX1NBRF9FUV9TREQ7CisJKmNzKysgPSAwOworCSpjcysrID0gaW50ZWxfaHdzX3ByZWVt
cHRfYWRkcmVzcyhyZXF1ZXN0LT5lbmdpbmUpOworCSpjcysrID0gMDsKKworCXJldHVybiBjczsK
K30KKwogc3RhdGljIHUzMiAqZ2VuOF9lbWl0X2ZpbmlfYnJlYWRjcnVtYihzdHJ1Y3QgaTkxNV9y
ZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNzKQogewogCWNzID0gZ2VuOF9lbWl0X2dndHRfd3JpdGUo
Y3MsCiAJCQkJICByZXF1ZXN0LT5mZW5jZS5zZXFubywKIAkJCQkgIHJlcXVlc3QtPnRpbWVsaW5l
LT5od3NwX29mZnNldCwKIAkJCQkgIDApOwotCiAJKmNzKysgPSBNSV9VU0VSX0lOVEVSUlVQVDsK
KwogCSpjcysrID0gTUlfQVJCX09OX09GRiB8IE1JX0FSQl9FTkFCTEU7CisJY3MgPSBlbWl0X3By
ZWVtcHRfYnVzeXdhaXQocmVxdWVzdCwgY3MpOwogCiAJcmVxdWVzdC0+dGFpbCA9IGludGVsX3Jp
bmdfb2Zmc2V0KHJlcXVlc3QsIGNzKTsKIAlhc3NlcnRfcmluZ190YWlsX3ZhbGlkKHJlcXVlc3Qt
PnJpbmcsIHJlcXVlc3QtPnRhaWwpOwpAQCAtMjU0Myw5ICsyNDk1LDEwIEBAIHN0YXRpYyB1MzIg
KmdlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfcmNzKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVl
c3QsIHUzMiAqY3MpCiAJCQkJICAgIFBJUEVfQ09OVFJPTF9GTFVTSF9FTkFCTEUgfAogCQkJCSAg
ICBQSVBFX0NPTlRST0xfQ1NfU1RBTEwsCiAJCQkJICAgIDApOwotCiAJKmNzKysgPSBNSV9VU0VS
X0lOVEVSUlVQVDsKKwogCSpjcysrID0gTUlfQVJCX09OX09GRiB8IE1JX0FSQl9FTkFCTEU7CisJ
Y3MgPSBlbWl0X3ByZWVtcHRfYnVzeXdhaXQocmVxdWVzdCwgY3MpOwogCiAJcmVxdWVzdC0+dGFp
bCA9IGludGVsX3Jpbmdfb2Zmc2V0KHJlcXVlc3QsIGNzKTsKIAlhc3NlcnRfcmluZ190YWlsX3Zh
bGlkKHJlcXVlc3QtPnJpbmcsIHJlcXVlc3QtPnRhaWwpOwpAQCAtMjU5NCw4ICsyNTQ3LDcgQEAg
dm9pZCBpbnRlbF9leGVjbGlzdHNfc2V0X2RlZmF1bHRfc3VibWlzc2lvbihzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiAJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9TVVBQT1JU
U19TVEFUUzsKIAlpZiAoIWludGVsX3ZncHVfYWN0aXZlKGVuZ2luZS0+aTkxNSkpCiAJCWVuZ2lu
ZS0+ZmxhZ3MgfD0gSTkxNV9FTkdJTkVfSEFTX1NFTUFQSE9SRVM7Ci0JaWYgKGVuZ2luZS0+cHJl
ZW1wdF9jb250ZXh0ICYmCi0JICAgIEhBU19MT0dJQ0FMX1JJTkdfUFJFRU1QVElPTihlbmdpbmUt
Pmk5MTUpKQorCWlmIChIQVNfTE9HSUNBTF9SSU5HX1BSRUVNUFRJT04oZW5naW5lLT5pOTE1KSkK
IAkJZW5naW5lLT5mbGFncyB8PSBJOTE1X0VOR0lORV9IQVNfUFJFRU1QVElPTjsKIH0KIApAQCAt
MjcxOCwxMSArMjY3MCw2IEBAIGludCBpbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbl9pbml0KHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAkJCWk5MTVfbW1pb19yZWdfb2Zmc2V0KFJJ
TkdfRUxTUChiYXNlKSk7CiAJfQogCi0JZXhlY2xpc3RzLT5wcmVlbXB0X2NvbXBsZXRlX3N0YXR1
cyA9IH4wdTsKLQlpZiAoZW5naW5lLT5wcmVlbXB0X2NvbnRleHQpCi0JCWV4ZWNsaXN0cy0+cHJl
ZW1wdF9jb21wbGV0ZV9zdGF0dXMgPQotCQkJdXBwZXJfMzJfYml0cyhlbmdpbmUtPnByZWVtcHRf
Y29udGV4dC0+bHJjX2Rlc2MpOwotCiAJZXhlY2xpc3RzLT5jc2Jfc3RhdHVzID0KIAkJJmVuZ2lu
ZS0+c3RhdHVzX3BhZ2UuYWRkcltJOTE1X0hXU19DU0JfQlVGMF9JTkRFWF07CiAKQEAgLTI3MzQs
NyArMjY4MSw3IEBAIGludCBpbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbl9pbml0KHN0cnVjdCBp
bnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAllbHNlCiAJCWV4ZWNsaXN0cy0+Y3NiX3NpemUgPSBH
RU4xMV9DU0JfRU5UUklFUzsKIAotCXJlc2V0X2NzYl9wb2ludGVycyhleGVjbGlzdHMpOworCXJl
c2V0X2NzYl9wb2ludGVycyhlbmdpbmUpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC0yOTE3LDExICsy
ODY0LDYgQEAgcG9wdWxhdGVfbHJfY29udGV4dChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJ
aWYgKCFlbmdpbmUtPmRlZmF1bHRfc3RhdGUpCiAJCXJlZ3NbQ1RYX0NPTlRFWFRfQ09OVFJPTCAr
IDFdIHw9CiAJCQlfTUFTS0VEX0JJVF9FTkFCTEUoQ1RYX0NUUkxfRU5HSU5FX0NUWF9SRVNUT1JF
X0lOSElCSVQpOwotCWlmIChjZS0+Z2VtX2NvbnRleHQgPT0gZW5naW5lLT5pOTE1LT5wcmVlbXB0
X2NvbnRleHQgJiYKLQkgICAgSU5URUxfR0VOKGVuZ2luZS0+aTkxNSkgPCAxMSkKLQkJcmVnc1tD
VFhfQ09OVEVYVF9DT05UUk9MICsgMV0gfD0KLQkJCV9NQVNLRURfQklUX0VOQUJMRShDVFhfQ1RS
TF9FTkdJTkVfQ1RYX1JFU1RPUkVfSU5ISUJJVCB8Ci0JCQkJCSAgIENUWF9DVFJMX0VOR0lORV9D
VFhfU0FWRV9JTkhJQklUKTsKIAogCXJldCA9IDA7CiBlcnJfdW5waW5fY3R4OgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKaW5kZXggYjdlOWZkZGVmMjcwLi5hNDk3Y2Y3YWNiNmEg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ3B1X2Vycm9yLmMKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9ncHVfZXJyb3IuYwpAQCAtMTI0OCwxMCArMTI0OCwx
MCBAQCBzdGF0aWMgdm9pZCBlcnJvcl9yZWNvcmRfZW5naW5lX3JlZ2lzdGVycyhzdHJ1Y3QgaTkx
NV9ncHVfc3RhdGUgKmVycm9yLAogCX0KIH0KIAotc3RhdGljIHZvaWQgcmVjb3JkX3JlcXVlc3Qo
c3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwKK3N0YXRpYyB2b2lkIHJlY29yZF9yZXF1ZXN0
KGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsCiAJCQkgICBzdHJ1Y3QgZHJtX2k5
MTVfZXJyb3JfcmVxdWVzdCAqZXJxKQogewotCXN0cnVjdCBpOTE1X2dlbV9jb250ZXh0ICpjdHgg
PSByZXF1ZXN0LT5nZW1fY29udGV4dDsKKwljb25zdCBzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAq
Y3R4ID0gcmVxdWVzdC0+Z2VtX2NvbnRleHQ7CiAKIAllcnEtPmZsYWdzID0gcmVxdWVzdC0+ZmVu
Y2UuZmxhZ3M7CiAJZXJxLT5jb250ZXh0ID0gcmVxdWVzdC0+ZmVuY2UuY29udGV4dDsKQEAgLTEz
MTUsMjAgKzEzMTUsMTUgQEAgc3RhdGljIHZvaWQgZW5naW5lX3JlY29yZF9yZXF1ZXN0cyhzdHJ1
Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJZWUtPm51bV9yZXF1ZXN0cyA9IGNvdW50Owog
fQogCi1zdGF0aWMgdm9pZCBlcnJvcl9yZWNvcmRfZW5naW5lX2V4ZWNsaXN0cyhzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUsCitzdGF0aWMgdm9pZCBlcnJvcl9yZWNvcmRfZW5naW5lX2V4
ZWNsaXN0cyhjb25zdCBzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUsCiAJCQkJCSAgc3Ry
dWN0IGRybV9pOTE1X2Vycm9yX2VuZ2luZSAqZWUpCiB7CiAJY29uc3Qgc3RydWN0IGludGVsX2Vu
Z2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMgPSAmZW5naW5lLT5leGVjbGlzdHM7Ci0J
dW5zaWduZWQgaW50IG47CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqIGNvbnN0ICpwb3J0ID0gZXhl
Y2xpc3RzLT5hY3RpdmU7CisJdW5zaWduZWQgaW50IG4gPSAwOwogCi0JZm9yIChuID0gMDsgbiA8
IGV4ZWNsaXN0c19udW1fcG9ydHMoZXhlY2xpc3RzKTsgbisrKSB7Ci0JCXN0cnVjdCBpOTE1X3Jl
cXVlc3QgKnJxID0gcG9ydF9yZXF1ZXN0KCZleGVjbGlzdHMtPnBvcnRbbl0pOwotCi0JCWlmICgh
cnEpCi0JCQlicmVhazsKLQotCQlyZWNvcmRfcmVxdWVzdChycSwgJmVlLT5leGVjbGlzdFtuXSk7
Ci0JfQorCXdoaWxlICgqcG9ydCkKKwkJcmVjb3JkX3JlcXVlc3QoKnBvcnQrKywgJmVlLT5leGVj
bGlzdFtuKytdKTsKIAogCWVlLT5udW1fcG9ydHMgPSBuOwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1
X3JlcXVlc3QuYwppbmRleCA3MDgzZTZhYjkyYzUuLjBjOTk2OTRmYWFiNyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvaTkxNV9yZXF1ZXN0LmMKQEAgLTI3Niw2ICsyNzYsMTIgQEAgc3RhdGljIGJvb2wgaTkx
NV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAogCWxvY2FsX2lycV9k
aXNhYmxlKCk7CiAKKwkvKgorCSAqIFdlIG9ubHkgbG9vc2VseSB0cmFjayBpbmZsaWdodCByZXF1
ZXN0cyBhY3Jvc3MgcHJlZW1wdGlvbiwKKwkgKiBhbmQgc28gd2UgbWF5IGZpbmQgb3Vyc2VsdmVz
IGF0dGVtcHRpbmcgdG8gcmV0aXJlIGEgX2NvbXBsZXRlZF8KKwkgKiByZXF1ZXN0IHRoYXQgd2Ug
aGF2ZSByZW1vdmVkIGZyb20gdGhlIEhXIGFuZCBwdXQgYmFjayBvbiBhIHJ1bgorCSAqIHF1ZXVl
LgorCSAqLwogCXNwaW5fbG9jaygmcnEtPmVuZ2luZS0+YWN0aXZlLmxvY2spOwogCWxpc3RfZGVs
KCZycS0+c2NoZWQubGluayk7CiAJc3Bpbl91bmxvY2soJnJxLT5lbmdpbmUtPmFjdGl2ZS5sb2Nr
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmgKaW5kZXggZWRiYmRmZWMyNGFiLi5iZWJj
MWU5YjRhNWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5o
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCkBAIC0yOCw2ICsyOCw3
IEBACiAjaW5jbHVkZSA8bGludXgvZG1hLWZlbmNlLmg+CiAjaW5jbHVkZSA8bGludXgvbG9ja2Rl
cC5oPgogCisjaW5jbHVkZSAiZ3QvaW50ZWxfY29udGV4dF90eXBlcy5oIgogI2luY2x1ZGUgImd0
L2ludGVsX2VuZ2luZV90eXBlcy5oIgogCiAjaW5jbHVkZSAiaTkxNV9nZW0uaCIKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCmluZGV4IDJlOWIzOGJkYzMzYy4uYjFiYTNlNjVjZDUy
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3NjaGVkdWxlci5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfc2NoZWR1bGVyLmMKQEAgLTE3OSw4ICsxNzksNyBA
QCBzdGF0aWMgaW5saW5lIGludCBycV9wcmlvKGNvbnN0IHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
KQogCiBzdGF0aWMgdm9pZCBraWNrX3N1Ym1pc3Npb24oc3RydWN0IGludGVsX2VuZ2luZV9jcyAq
ZW5naW5lLCBpbnQgcHJpbykKIHsKLQljb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICppbmZsaWdo
dCA9Ci0JCXBvcnRfcmVxdWVzdChlbmdpbmUtPmV4ZWNsaXN0cy5wb3J0KTsKKwljb25zdCBzdHJ1
Y3QgaTkxNV9yZXF1ZXN0ICppbmZsaWdodCA9ICplbmdpbmUtPmV4ZWNsaXN0cy5hY3RpdmU7CiAK
IAkvKgogCSAqIElmIHdlIGFyZSBhbHJlYWR5IHRoZSBjdXJyZW50bHkgZXhlY3V0aW5nIGNvbnRl
eHQsIGRvbid0CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKaW5kZXggMjk4NzIxOWE2MzAwLi40
OTIwZmY5YWJhNjIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdXRpbHMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3V0aWxzLmgKQEAgLTEzMSw2ICsxMzEs
MTggQEAgX19jaGVja19zdHJ1Y3Rfc2l6ZShzaXplX3QgYmFzZSwgc2l6ZV90IGFyciwgc2l6ZV90
IGNvdW50LCBzaXplX3QgKnNpemUpCiAJKCh0eXBlb2YocHRyKSkoKHVuc2lnbmVkIGxvbmcpKHB0
cikgfCBfX2JpdHMpKTsJCQlcCiB9KQogCisjZGVmaW5lIHB0cl9jb3VudF9kZWMocF9wdHIpIGRv
IHsJCQkJCVwKKwl0eXBlb2YocF9wdHIpIF9fcCA9IChwX3B0cik7CQkJCQlcCisJdW5zaWduZWQg
bG9uZyBfX3YgPSAodW5zaWduZWQgbG9uZykoKl9fcCk7CQkJXAorCSpfX3AgPSAodHlwZW9mKCpw
X3B0cikpKC0tX192KTsJCQkJCVwKK30gd2hpbGUgKDApCisKKyNkZWZpbmUgcHRyX2NvdW50X2lu
YyhwX3B0cikgZG8gewkJCQkJXAorCXR5cGVvZihwX3B0cikgX19wID0gKHBfcHRyKTsJCQkJCVwK
Kwl1bnNpZ25lZCBsb25nIF9fdiA9ICh1bnNpZ25lZCBsb25nKSgqX19wKTsJCQlcCisJKl9fcCA9
ICh0eXBlb2YoKnBfcHRyKSkoKytfX3YpOwkJCQkJXAorfSB3aGlsZSAoMCkKKwogI2RlZmluZSBw
YWdlX21hc2tfYml0cyhwdHIpIHB0cl9tYXNrX2JpdHMocHRyLCBQQUdFX1NISUZUKQogI2RlZmlu
ZSBwYWdlX3VubWFza19iaXRzKHB0cikgcHRyX3VubWFza19iaXRzKHB0ciwgUEFHRV9TSElGVCkK
ICNkZWZpbmUgcGFnZV9wYWNrX2JpdHMocHRyLCBiaXRzKSBwdHJfcGFja19iaXRzKHB0ciwgYml0
cywgUEFHRV9TSElGVCkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2d1
Y19zdWJtaXNzaW9uLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfc3VibWlzc2lv
bi5jCmluZGV4IGRiNTMxZWJjNzcwNC4uMTJjMjIzNTlmZGFjIDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9pbnRlbF9ndWNfc3VibWlzc2lvbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2ludGVsX2d1Y19zdWJtaXNzaW9uLmMKQEAgLTMyLDcgKzMyLDExIEBACiAjaW5jbHVk
ZSAiaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaCIKICNpbmNsdWRlICJpOTE1X2Rydi5oIgogCi0jZGVm
aW5lIEdVQ19QUkVFTVBUX0ZJTklTSEVECQkweDEKK2VudW0geworCUdVQ19QUkVFTVBUX05PTkUg
PSAwLAorCUdVQ19QUkVFTVBUX0lOUFJPR1JFU1MsCisJR1VDX1BSRUVNUFRfRklOSVNIRUQsCit9
OwogI2RlZmluZSBHVUNfUFJFRU1QVF9CUkVBRENSVU1CX0RXT1JEUwkweDgKICNkZWZpbmUgR1VD
X1BSRUVNUFRfQlJFQURDUlVNQl9CWVRFUwlcCiAJKHNpemVvZih1MzIpICogR1VDX1BSRUVNUFRf
QlJFQURDUlVNQl9EV09SRFMpCkBAIC01MzcsMTUgKzU0MSwxMSBAQCBzdGF0aWMgdm9pZCBndWNf
YWRkX3JlcXVlc3Qoc3RydWN0IGludGVsX2d1YyAqZ3VjLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSkKIAl1MzIgY3R4X2Rlc2MgPSBsb3dlcl8zMl9iaXRzKHJxLT5od19jb250ZXh0LT5scmNfZGVz
Yyk7CiAJdTMyIHJpbmdfdGFpbCA9IGludGVsX3Jpbmdfc2V0X3RhaWwocnEtPnJpbmcsIHJxLT50
YWlsKSAvIHNpemVvZih1NjQpOwogCi0Jc3Bpbl9sb2NrKCZjbGllbnQtPndxX2xvY2spOwotCiAJ
Z3VjX3dxX2l0ZW1fYXBwZW5kKGNsaWVudCwgZW5naW5lLT5ndWNfaWQsIGN0eF9kZXNjLAogCQkJ
ICAgcmluZ190YWlsLCBycS0+ZmVuY2Uuc2Vxbm8pOwogCWd1Y19yaW5nX2Rvb3JiZWxsKGNsaWVu
dCk7CiAKIAljbGllbnQtPnN1Ym1pc3Npb25zW2VuZ2luZS0+aWRdICs9IDE7Ci0KLQlzcGluX3Vu
bG9jaygmY2xpZW50LT53cV9sb2NrKTsKIH0KIAogLyoKQEAgLTYzMSw4ICs2MzEsOSBAQCBzdGF0
aWMgdm9pZCBpbmplY3RfcHJlZW1wdF9jb250ZXh0KHN0cnVjdCB3b3JrX3N0cnVjdCAqd29yaykK
IAlkYXRhWzZdID0gaW50ZWxfZ3VjX2dndHRfb2Zmc2V0KGd1YywgZ3VjLT5zaGFyZWRfZGF0YSk7
CiAKIAlpZiAoV0FSTl9PTihpbnRlbF9ndWNfc2VuZChndWMsIGRhdGEsIEFSUkFZX1NJWkUoZGF0
YSkpKSkgewotCQlleGVjbGlzdHNfY2xlYXJfYWN0aXZlKCZlbmdpbmUtPmV4ZWNsaXN0cywKLQkJ
CQkgICAgICAgRVhFQ0xJU1RTX0FDVElWRV9QUkVFTVBUKTsKKwkJaW50ZWxfd3JpdGVfc3RhdHVz
X3BhZ2UoZW5naW5lLAorCQkJCQlJOTE1X0dFTV9IV1NfUFJFRU1QVCwKKwkJCQkJR1VDX1BSRUVN
UFRfTk9ORSk7CiAJCXRhc2tsZXRfc2NoZWR1bGUoJmVuZ2luZS0+ZXhlY2xpc3RzLnRhc2tsZXQp
OwogCX0KIApAQCAtNjcyLDggKzY3Myw2IEBAIHN0YXRpYyB2b2lkIGNvbXBsZXRlX3ByZWVtcHRf
Y29udGV4dChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJc3RydWN0IGludGVs
X2VuZ2luZV9leGVjbGlzdHMgKmV4ZWNsaXN0cyA9ICZlbmdpbmUtPmV4ZWNsaXN0czsKIAotCUdF
TV9CVUdfT04oIWV4ZWNsaXN0c19pc19hY3RpdmUoZXhlY2xpc3RzLCBFWEVDTElTVFNfQUNUSVZF
X1BSRUVNUFQpKTsKLQogCWlmIChpbmplY3RfcHJlZW1wdF9oYW5nKGV4ZWNsaXN0cykpCiAJCXJl
dHVybjsKIApAQCAtNjgxLDg5ICs2ODAsOTAgQEAgc3RhdGljIHZvaWQgY29tcGxldGVfcHJlZW1w
dF9jb250ZXh0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAlleGVjbGlzdHNfdW53
aW5kX2luY29tcGxldGVfcmVxdWVzdHMoZXhlY2xpc3RzKTsKIAogCXdhaXRfZm9yX2d1Y19wcmVl
bXB0X3JlcG9ydChlbmdpbmUpOwotCWludGVsX3dyaXRlX3N0YXR1c19wYWdlKGVuZ2luZSwgSTkx
NV9HRU1fSFdTX1BSRUVNUFQsIDApOworCWludGVsX3dyaXRlX3N0YXR1c19wYWdlKGVuZ2luZSwg
STkxNV9HRU1fSFdTX1BSRUVNUFQsIEdVQ19QUkVFTVBUX05PTkUpOwogfQogCi0vKioKLSAqIGd1
Y19zdWJtaXQoKSAtIFN1Ym1pdCBjb21tYW5kcyB0aHJvdWdoIEd1QwotICogQGVuZ2luZTogZW5n
aW5lIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29tbWFuZHMKLSAqCi0gKiBUaGUgb25seSBlcnJvciBo
ZXJlIGFyaXNlcyBpZiB0aGUgZG9vcmJlbGwgaGFyZHdhcmUgaXNuJ3QgZnVuY3Rpb25pbmcKLSAq
IGFzIGV4cGVjdGVkLCB3aGljaCByZWFsbHkgc2hvdWxuJ3QgaGFwcGVuLgotICovCi1zdGF0aWMg
dm9pZCBndWNfc3VibWl0KHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKK3N0YXRpYyB2
b2lkIGd1Y19zdWJtaXQoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lLAorCQkgICAgICAg
c3RydWN0IGk5MTVfcmVxdWVzdCAqKm91dCwKKwkJICAgICAgIHN0cnVjdCBpOTE1X3JlcXVlc3Qg
KiplbmQpCiB7CiAJc3RydWN0IGludGVsX2d1YyAqZ3VjID0gJmVuZ2luZS0+aTkxNS0+Z3VjOwot
CXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3QgZXhlY2xpc3RzID0gJmVuZ2lu
ZS0+ZXhlY2xpc3RzOwotCXN0cnVjdCBleGVjbGlzdF9wb3J0ICpwb3J0ID0gZXhlY2xpc3RzLT5w
b3J0OwotCXVuc2lnbmVkIGludCBuOworCXN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQg
PSBndWMtPmV4ZWNidWZfY2xpZW50OwogCi0JZm9yIChuID0gMDsgbiA8IGV4ZWNsaXN0c19udW1f
cG9ydHMoZXhlY2xpc3RzKTsgbisrKSB7Ci0JCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCQl1
bnNpZ25lZCBpbnQgY291bnQ7CisJc3Bpbl9sb2NrKCZjbGllbnQtPndxX2xvY2spOwogCi0JCXJx
ID0gcG9ydF91bnBhY2soJnBvcnRbbl0sICZjb3VudCk7Ci0JCWlmIChycSAmJiBjb3VudCA9PSAw
KSB7Ci0JCQlwb3J0X3NldCgmcG9ydFtuXSwgcG9ydF9wYWNrKHJxLCArK2NvdW50KSk7CisJZG8g
eworCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSA9ICpvdXQrKzsKIAotCQkJZmx1c2hfZ2d0dF93
cml0ZXMocnEtPnJpbmctPnZtYSk7CisJCWZsdXNoX2dndHRfd3JpdGVzKHJxLT5yaW5nLT52bWEp
OworCQlndWNfYWRkX3JlcXVlc3QoZ3VjLCBycSk7CisJfSB3aGlsZSAob3V0ICE9IGVuZCk7CiAK
LQkJCWd1Y19hZGRfcmVxdWVzdChndWMsIHJxKTsKLQkJfQotCX0KKwlzcGluX3VubG9jaygmY2xp
ZW50LT53cV9sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgcG9ydF9hc3NpZ24oc3RydWN0IGV4ZWNs
aXN0X3BvcnQgKnBvcnQsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQorc3RhdGljIGlubGluZSBp
bnQgcnFfcHJpbyhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlHRU1fQlVHX09O
KHBvcnRfaXNzZXQocG9ydCkpOwotCi0JcG9ydF9zZXQocG9ydCwgaTkxNV9yZXF1ZXN0X2dldChy
cSkpOworCXJldHVybiBycS0+c2NoZWQuYXR0ci5wcmlvcml0eSB8IF9fTk9fUFJFRU1QVElPTjsK
IH0KIAotc3RhdGljIGlubGluZSBpbnQgcnFfcHJpbyhjb25zdCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpycSkKK3N0YXRpYyBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpzY2hlZHVsZV9pbihzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpycSwgaW50IGlkeCkKIHsKLQlyZXR1cm4gcnEtPnNjaGVkLmF0dHIucHJpb3Jp
dHk7CisJdHJhY2VfaTkxNV9yZXF1ZXN0X2luKHJxLCBpZHgpOworCisJaWYgKCFycS0+aHdfY29u
dGV4dC0+aW5mbGlnaHQpCisJCXJxLT5od19jb250ZXh0LT5pbmZsaWdodCA9IHJxLT5lbmdpbmU7
CisJaW50ZWxfY29udGV4dF9pbmZsaWdodF9pbmMocnEtPmh3X2NvbnRleHQpOworCisJcmV0dXJu
IGk5MTVfcmVxdWVzdF9nZXQocnEpOwogfQogCi1zdGF0aWMgaW5saW5lIGludCBwb3J0X3ByaW8o
Y29uc3Qgc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBvcnQpCitzdGF0aWMgdm9pZCBzY2hlZHVsZV9v
dXQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEpCiB7Ci0JcmV0dXJuIHJxX3ByaW8ocG9ydF9yZXF1
ZXN0KHBvcnQpKSB8IF9fTk9fUFJFRU1QVElPTjsKKwl0cmFjZV9pOTE1X3JlcXVlc3Rfb3V0KHJx
KTsKKworCWludGVsX2NvbnRleHRfaW5mbGlnaHRfZGVjKHJxLT5od19jb250ZXh0KTsKKwlpZiAo
IWludGVsX2NvbnRleHRfaW5mbGlnaHRfY291bnQocnEtPmh3X2NvbnRleHQpKQorCQlycS0+aHdf
Y29udGV4dC0+aW5mbGlnaHQgPSBOVUxMOworCisJaTkxNV9yZXF1ZXN0X3B1dChycSk7CiB9CiAK
LXN0YXRpYyBib29sIF9fZ3VjX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5l
KQorc3RhdGljIHZvaWQgX19ndWNfZGVxdWV1ZShzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdp
bmUpCiB7CiAJc3RydWN0IGludGVsX2VuZ2luZV9leGVjbGlzdHMgKiBjb25zdCBleGVjbGlzdHMg
PSAmZW5naW5lLT5leGVjbGlzdHM7Ci0Jc3RydWN0IGV4ZWNsaXN0X3BvcnQgKnBvcnQgPSBleGVj
bGlzdHMtPnBvcnQ7Ci0Jc3RydWN0IGk5MTVfcmVxdWVzdCAqbGFzdCA9IE5VTEw7Ci0JY29uc3Qg
c3RydWN0IGV4ZWNsaXN0X3BvcnQgKiBjb25zdCBsYXN0X3BvcnQgPQotCQkmZXhlY2xpc3RzLT5w
b3J0W2V4ZWNsaXN0cy0+cG9ydF9tYXNrXTsKKwlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoqZmlyc3Qg
PSBleGVjbGlzdHMtPmluZmxpZ2h0OworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKiogY29uc3QgbGFz
dF9wb3J0ID0gZmlyc3QgKyBleGVjbGlzdHMtPnBvcnRfbWFzazsKKwlzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpsYXN0ID0gZmlyc3RbMF07CisJc3RydWN0IGk5MTVfcmVxdWVzdCAqKnBvcnQ7CiAJYm9v
bCBzdWJtaXQgPSBmYWxzZTsKIAlzdHJ1Y3QgcmJfbm9kZSAqcmI7CiAKIAlsb2NrZGVwX2Fzc2Vy
dF9oZWxkKCZlbmdpbmUtPmFjdGl2ZS5sb2NrKTsKIAotCWlmIChwb3J0X2lzc2V0KHBvcnQpKSB7
CisJaWYgKGxhc3QpIHsKIAkJaWYgKGludGVsX2VuZ2luZV9oYXNfcHJlZW1wdGlvbihlbmdpbmUp
KSB7CiAJCQlzdHJ1Y3QgZ3VjX3ByZWVtcHRfd29yayAqcHJlZW1wdF93b3JrID0KIAkJCQkmZW5n
aW5lLT5pOTE1LT5ndWMucHJlZW1wdF93b3JrW2VuZ2luZS0+aWRdOwogCQkJaW50IHByaW8gPSBl
eGVjbGlzdHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQ7CiAKLQkJCWlmIChpOTE1X3NjaGVkdWxlcl9u
ZWVkX3ByZWVtcHQocHJpbywKLQkJCQkJCQlwb3J0X3ByaW8ocG9ydCkpKSB7Ci0JCQkJZXhlY2xp
c3RzX3NldF9hY3RpdmUoZXhlY2xpc3RzLAotCQkJCQkJICAgICBFWEVDTElTVFNfQUNUSVZFX1BS
RUVNUFQpOworCQkJaWYgKGk5MTVfc2NoZWR1bGVyX25lZWRfcHJlZW1wdChwcmlvLCBycV9wcmlv
KGxhc3QpKSkgeworCQkJCWludGVsX3dyaXRlX3N0YXR1c19wYWdlKGVuZ2luZSwKKwkJCQkJCQlJ
OTE1X0dFTV9IV1NfUFJFRU1QVCwKKwkJCQkJCQlHVUNfUFJFRU1QVF9JTlBST0dSRVNTKTsKIAkJ
CQlxdWV1ZV93b3JrKGVuZ2luZS0+aTkxNS0+Z3VjLnByZWVtcHRfd3EsCiAJCQkJCSAgICZwcmVl
bXB0X3dvcmstPndvcmspOwotCQkJCXJldHVybiBmYWxzZTsKKwkJCQlyZXR1cm47CiAJCQl9CiAJ
CX0KIAotCQlwb3J0Kys7Ci0JCWlmIChwb3J0X2lzc2V0KHBvcnQpKQotCQkJcmV0dXJuIGZhbHNl
OworCQlpZiAoKisrZmlyc3QpCisJCQlyZXR1cm47CisKKwkJbGFzdCA9IE5VTEw7CiAJfQotCUdF
TV9CVUdfT04ocG9ydF9pc3NldChwb3J0KSk7CiAKKwlwb3J0ID0gZmlyc3Q7CiAJd2hpbGUgKChy
YiA9IHJiX2ZpcnN0X2NhY2hlZCgmZXhlY2xpc3RzLT5xdWV1ZSkpKSB7CiAJCXN0cnVjdCBpOTE1
X3ByaW9saXN0ICpwID0gdG9fcHJpb2xpc3QocmIpOwogCQlzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpy
cSwgKnJuOwpAQCAtNzc0LDE4ICs3NzQsMTUgQEAgc3RhdGljIGJvb2wgX19ndWNfZGVxdWV1ZShz
dHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkJaWYgKHBvcnQgPT0gbGFzdF9wb3J0
KQogCQkJCQlnb3RvIGRvbmU7CiAKLQkJCQlpZiAoc3VibWl0KQotCQkJCQlwb3J0X2Fzc2lnbihw
b3J0LCBsYXN0KTsKKwkJCQkqcG9ydCA9IHNjaGVkdWxlX2luKGxhc3QsCisJCQkJCQkgICAgcG9y
dCAtIGV4ZWNsaXN0cy0+aW5mbGlnaHQpOwogCQkJCXBvcnQrKzsKIAkJCX0KIAogCQkJbGlzdF9k
ZWxfaW5pdCgmcnEtPnNjaGVkLmxpbmspOwotCiAJCQlfX2k5MTVfcmVxdWVzdF9zdWJtaXQocnEp
OwotCQkJdHJhY2VfaTkxNV9yZXF1ZXN0X2luKHJxLCBwb3J0X2luZGV4KHBvcnQsIGV4ZWNsaXN0
cykpOwotCi0JCQlsYXN0ID0gcnE7CiAJCQlzdWJtaXQgPSB0cnVlOworCQkJbGFzdCA9IHJxOwog
CQl9CiAKIAkJcmJfZXJhc2VfY2FjaGVkKCZwLT5ub2RlLCAmZXhlY2xpc3RzLT5xdWV1ZSk7CkBA
IC03OTQsNTggKzc5MSw0MSBAQCBzdGF0aWMgYm9vbCBfX2d1Y19kZXF1ZXVlKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKIGRvbmU6CiAJZXhlY2xpc3RzLT5xdWV1ZV9wcmlvcml0eV9o
aW50ID0KIAkJcmIgPyB0b19wcmlvbGlzdChyYiktPnByaW9yaXR5IDogSU5UX01JTjsKLQlpZiAo
c3VibWl0KQotCQlwb3J0X2Fzc2lnbihwb3J0LCBsYXN0KTsKLQlpZiAobGFzdCkKLQkJZXhlY2xp
c3RzX3VzZXJfYmVnaW4oZXhlY2xpc3RzLCBleGVjbGlzdHMtPnBvcnQpOwotCi0JLyogV2UgbXVz
dCBhbHdheXMga2VlcCB0aGUgYmVhc3QgZmVkIGlmIHdlIGhhdmUgd29yayBwaWxlZCB1cCAqLwot
CUdFTV9CVUdfT04ocG9ydF9pc3NldChleGVjbGlzdHMtPnBvcnQpICYmCi0JCSAgICFleGVjbGlz
dHNfaXNfYWN0aXZlKGV4ZWNsaXN0cywgRVhFQ0xJU1RTX0FDVElWRV9VU0VSKSk7Ci0JR0VNX0JV
R19PTihyYl9maXJzdF9jYWNoZWQoJmV4ZWNsaXN0cy0+cXVldWUpICYmCi0JCSAgICFwb3J0X2lz
c2V0KGV4ZWNsaXN0cy0+cG9ydCkpOwotCi0JcmV0dXJuIHN1Ym1pdDsKLX0KLQotc3RhdGljIHZv
aWQgZ3VjX2RlcXVldWUoc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5naW5lKQotewotCWlmIChf
X2d1Y19kZXF1ZXVlKGVuZ2luZSkpCi0JCWd1Y19zdWJtaXQoZW5naW5lKTsKKwlpZiAoc3VibWl0
KSB7CisJCSpwb3J0ID0gc2NoZWR1bGVfaW4obGFzdCwgcG9ydCAtIGV4ZWNsaXN0cy0+aW5mbGln
aHQpOworCQkqKytwb3J0ID0gTlVMTDsKKwkJZ3VjX3N1Ym1pdChlbmdpbmUsIGZpcnN0LCBwb3J0
KTsKKwl9CisJZXhlY2xpc3RzLT5hY3RpdmUgPSBleGVjbGlzdHMtPmluZmxpZ2h0OwogfQogCiBz
dGF0aWMgdm9pZCBndWNfc3VibWlzc2lvbl90YXNrbGV0KHVuc2lnbmVkIGxvbmcgZGF0YSkKIHsK
IAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICogY29uc3QgZW5naW5lID0gKHN0cnVjdCBpbnRlbF9l
bmdpbmVfY3MgKilkYXRhOwogCXN0cnVjdCBpbnRlbF9lbmdpbmVfZXhlY2xpc3RzICogY29uc3Qg
ZXhlY2xpc3RzID0gJmVuZ2luZS0+ZXhlY2xpc3RzOwotCXN0cnVjdCBleGVjbGlzdF9wb3J0ICpw
b3J0ID0gZXhlY2xpc3RzLT5wb3J0OwotCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKipwb3J0LCAqcnE7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAogCXNw
aW5fbG9ja19pcnFzYXZlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7CiAKLQlycSA9IHBv
cnRfcmVxdWVzdChwb3J0KTsKLQl3aGlsZSAocnEgJiYgaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChy
cSkpIHsKLQkJdHJhY2VfaTkxNV9yZXF1ZXN0X291dChycSk7Ci0JCWk5MTVfcmVxdWVzdF9wdXQo
cnEpOworCWZvciAocG9ydCA9IGV4ZWNsaXN0cy0+aW5mbGlnaHQ7IChycSA9ICpwb3J0KTsgcG9y
dCsrKSB7CisJCWlmICghaTkxNV9yZXF1ZXN0X2NvbXBsZXRlZChycSkpCisJCQlicmVhazsKIAot
CQlwb3J0ID0gZXhlY2xpc3RzX3BvcnRfY29tcGxldGUoZXhlY2xpc3RzLCBwb3J0KTsKLQkJaWYg
KHBvcnRfaXNzZXQocG9ydCkpIHsKLQkJCWV4ZWNsaXN0c191c2VyX2JlZ2luKGV4ZWNsaXN0cywg
cG9ydCk7Ci0JCQlycSA9IHBvcnRfcmVxdWVzdChwb3J0KTsKLQkJfSBlbHNlIHsKLQkJCWV4ZWNs
aXN0c191c2VyX2VuZChleGVjbGlzdHMpOwotCQkJcnEgPSBOVUxMOwotCQl9CisJCXNjaGVkdWxl
X291dChycSk7CisJfQorCWlmIChwb3J0ICE9IGV4ZWNsaXN0cy0+aW5mbGlnaHQpIHsKKwkJaW50
IGlkeCA9IHBvcnQgLSBleGVjbGlzdHMtPmluZmxpZ2h0OworCQlpbnQgcmVtID0gQVJSQVlfU0la
RShleGVjbGlzdHMtPmluZmxpZ2h0KSAtIGlkeDsKKwkJbWVtbW92ZShleGVjbGlzdHMtPmluZmxp
Z2h0LCBwb3J0LCByZW0gKiBzaXplb2YoKnBvcnQpKTsKIAl9CiAKLQlpZiAoZXhlY2xpc3RzX2lz
X2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNUU19BQ1RJVkVfUFJFRU1QVCkgJiYKLQkgICAgaW50
ZWxfcmVhZF9zdGF0dXNfcGFnZShlbmdpbmUsIEk5MTVfR0VNX0hXU19QUkVFTVBUKSA9PQorCWlm
IChpbnRlbF9yZWFkX3N0YXR1c19wYWdlKGVuZ2luZSwgSTkxNV9HRU1fSFdTX1BSRUVNUFQpID09
CiAJICAgIEdVQ19QUkVFTVBUX0ZJTklTSEVEKQogCQljb21wbGV0ZV9wcmVlbXB0X2NvbnRleHQo
ZW5naW5lKTsKIAotCWlmICghZXhlY2xpc3RzX2lzX2FjdGl2ZShleGVjbGlzdHMsIEVYRUNMSVNU
U19BQ1RJVkVfUFJFRU1QVCkpCi0JCWd1Y19kZXF1ZXVlKGVuZ2luZSk7CisJaWYgKCFpbnRlbF9y
ZWFkX3N0YXR1c19wYWdlKGVuZ2luZSwgSTkxNV9HRU1fSFdTX1BSRUVNUFQpKQorCQlfX2d1Y19k
ZXF1ZXVlKGVuZ2luZSk7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2
ZS5sb2NrLCBmbGFncyk7CiB9CkBAIC05NTksNyArOTM5LDYgQEAgc3RhdGljIHZvaWQgZ3VjX2Nh
bmNlbF9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAKIAlleGVjbGlz
dHMtPnF1ZXVlX3ByaW9yaXR5X2hpbnQgPSBJTlRfTUlOOwogCWV4ZWNsaXN0cy0+cXVldWUgPSBS
Ql9ST09UX0NBQ0hFRDsKLQlHRU1fQlVHX09OKHBvcnRfaXNzZXQoZXhlY2xpc3RzLT5wb3J0KSk7
CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlbmdpbmUtPmFjdGl2ZS5sb2NrLCBmbGFncyk7
CiB9CkBAIC0xNDIyLDcgKzE0MDEsNyBAQCBpbnQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZW5hYmxl
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAkgKiBhbmQgaXQgaXMgZ3VhcmFudGVlZCB0aGF0IGl0
IHdpbGwgcmVtb3ZlIHRoZSB3b3JrIGl0ZW0gZnJvbSB0aGUKIAkgKiBxdWV1ZSBiZWZvcmUgb3Vy
IHJlcXVlc3QgaXMgY29tcGxldGVkLgogCSAqLwotCUJVSUxEX0JVR19PTihBUlJBWV9TSVpFKGVu
Z2luZS0+ZXhlY2xpc3RzLnBvcnQpICoKKwlCVUlMRF9CVUdfT04oQVJSQVlfU0laRShlbmdpbmUt
PmV4ZWNsaXN0cy5pbmZsaWdodCkgKgogCQkgICAgIHNpemVvZihzdHJ1Y3QgZ3VjX3dxX2l0ZW0p
ICoKIAkJICAgICBJOTE1X05VTV9FTkdJTkVTID4gR1VDX1dRX1NJWkUpOwogCmRpZmYgLS1naXQg
YS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkxNV9yZXF1ZXN0LmMKaW5kZXggMjk4YmI3MTE2YzUx
Li4xYTViOWUyODRjYTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9pOTE1X3JlcXVlc3QuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvaTkx
NV9yZXF1ZXN0LmMKQEAgLTM2NiwxMyArMzY2LDE1IEBAIHN0YXRpYyBpbnQgX19pZ3RfYnJlYWRj
cnVtYnNfc21va2V0ZXN0KHZvaWQgKmFyZykKIAogCQlpZiAoIXdhaXRfZXZlbnRfdGltZW91dCh3
YWl0LT53YWl0LAogCQkJCQlpOTE1X3N3X2ZlbmNlX2RvbmUod2FpdCksCi0JCQkJCUhaIC8gMikp
IHsKKwkJCQkJNSAqIEhaKSkgewogCQkJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEgPSByZXF1ZXN0
c1tjb3VudCAtIDFdOwogCi0JCQlwcl9lcnIoIndhaXRpbmcgZm9yICVkIGZlbmNlcyAobGFzdCAl
bGx4OiVsbGQpIG9uICVzIHRpbWVkIG91dCFcbiIsCi0JCQkgICAgICAgY291bnQsCisJCQlwcl9l
cnIoIndhaXRpbmcgZm9yICVkLyVkIGZlbmNlcyAobGFzdCAlbGx4OiVsbGQpIG9uICVzIHRpbWVk
IG91dCFcbiIsCisJCQkgICAgICAgYXRvbWljX3JlYWQoJndhaXQtPnBlbmRpbmcpLCBjb3VudCwK
IAkJCSAgICAgICBycS0+ZmVuY2UuY29udGV4dCwgcnEtPmZlbmNlLnNlcW5vLAogCQkJICAgICAg
IHQtPmVuZ2luZS0+bmFtZSk7CisJCQlHRU1fVFJBQ0VfRFVNUCgpOworCiAJCQlpOTE1X2dlbV9z
ZXRfd2VkZ2VkKHQtPmVuZ2luZS0+aTkxNSk7CiAJCQlHRU1fQlVHX09OKCFpOTE1X3JlcXVlc3Rf
Y29tcGxldGVkKHJxKSk7CiAJCQlpOTE1X3N3X2ZlbmNlX3dhaXQod2FpdCk7Ci0tIAoyLjIwLjEK
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdm
eCBtYWlsaW5nIGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xp
c3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeA==

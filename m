Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 85D8D114900
	for <lists+intel-gfx@lfdr.de>; Thu,  5 Dec 2019 23:02:53 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id AFFF56F90E;
	Thu,  5 Dec 2019 22:02:51 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2279F6F90C
 for <intel-gfx@lists.freedesktop.org>; Thu,  5 Dec 2019 22:02:50 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 05 Dec 2019 14:02:50 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.69,282,1571727600"; d="scan'208";a="243411357"
Received: from dceraolo-linux.fm.intel.com ([10.1.27.145])
 by fmsmga002.fm.intel.com with ESMTP; 05 Dec 2019 14:02:49 -0800
From: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  5 Dec 2019 14:02:41 -0800
Message-Id: <20191205220243.27403-3-daniele.ceraolospurio@intel.com>
X-Mailer: git-send-email 2.23.0
In-Reply-To: <20191205220243.27403-1-daniele.ceraolospurio@intel.com>
References: <20191205220243.27403-1-daniele.ceraolospurio@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 3/5] drm/i915/guc: kill doorbell code and
 selftests
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSB3b3JrcXVldWUsIHRoZSB1cGNvbWluZyByZXdvcmtl
ZCBHdUMKc3VibWlzc2lvbiBmbG93IHdpbGwgb2ZmZXIgdGhlIGhvc3QgZHJpdmVyIGluZGlwZW5k
ZW50IGNvbnRyb2wgb3Zlcgp0aGUgZXhlY3V0aW9uIHN0YXR1cyBvZiBlYWNoIGNvbnRleHQgc3Vi
bWl0dGVkIHRvIEd1Qy4gQXMgcGFydCBvZiB0aGlzLAp0aGUgZG9vcmJlbGwgdXNhZ2UgbW9kZWwg
aGFzIGJlZW4gcmV3b3JrZWQsIHdpdGggZWFjaCBkb29yYmVsbCBiZWluZwpwYWlyZWQgdG8gYSBz
aW5nbGUgbHJjIGFuZCBhIGRvb3JiZWxsIHJpbmcgcmVwcmVzZW50aW5nIG5ldyB3b3JrCmF2YWls
YWJsZSBmb3IgdGhhdCBzcGVjaWZpYyBjb250ZXh0LiBUaGlzIG1lY2hhbmlzbSwgaG93ZXZlciwg
bGltaXRzCnRoZSBudW1iZXIgb2YgY29udGV4dHMgdGhhdCBjYW4gYmUgcmVnaXN0ZXJlZCB3aXRo
IEd1QyB0byB0aGUgbnVtYmVyIG9mCmRvb3JiZWxscywgd2hpY2ggaXMgYW4gdW5kZXNpcmVkIGxp
bWl0YXRpb24uIFRvIGF2b2lkIHRoaXMgbGltaXRhdGlvbiwKd2UgcmVxdWVzdGVkIHRoZSBHdUMg
dGVhbSB0byBhbHNvIHByb3ZpZGUgYSBIMkcgdGhhdCB3aWxsIGFsbG93IHRoZSBob3N0CnRvIG5v
dGlmeSB0aGUgR3VDIG9mIHdvcmsgYXZhaWxhYmxlIGZvciBhIHNwZWNpZmllZCBscmMsIHNvIHdl
IGNhbiB1c2UKdGhhdCBtZWNoYW5pc20gaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSBkb29yYmVs
bHMuIFdlIGNhbiB0aGVyZWZvcmUgZHJvcAp0aGUgZG9vcmJlbGwgY29kZSB3ZSBjdXJyZW50bHkg
aGF2ZSwgYWxzbyBnaXZlbiB0aGUgZmFjdCB0aGF0IGluIHRoZQp1bmxpa2VseSBjYXNlIHdlJ2Qg
d2FudCB0byBzd2l0Y2ggYmFjayB0byB1c2luZyBkb29yYmVsbHMgd2UnZCBoYXZlIHRvCmhlYXZp
bHkgcmV3b3JrIGl0LgpUaGUgd29ya3F1ZXVlIHdpbGwgc3RpbGwgaGF2ZSBhIHVzZSBpbiB0aGUg
bmV3IGludGVyZmFjZSB0byBwYXNzIHNwZWNpYWwKY29tbWFuZHMsIHNvIHRoYXQgY29kZSBoYXMg
YmVlbiByZXRhaW5lZCBmb3Igbm93LgoKV2l0aCB0aGUgZG9vcmJlbGxzIGdvbmUgYW5kIHRoZSBH
dUMgY2xpZW50IGJlY29taW5nIGV2ZW4gc2ltcGxlciwgdGhlCmV4aXN0aW5nIEd1QyBzZWxmdGVz
dHMgZG9uJ3QgZ2l2ZSB1cyBhbnkgbWVhbmluZ2Z1bCBjb3ZlcmFnZSBzbyB3ZSBjYW4KcmVtb3Zl
IHRoZW0gYXMgd2VsbC4gU29tZSBzZWxmdGVzdHMgbWlnaHQgY29tZSB3aXRoIHRoZSBuZXcgY29k
ZSwgYnV0CnRoZXkgd2lsbCBsb29rIGRpZmZlcmVudCBmcm9tIHdoYXQgd2UgaGF2ZSBub3cgc28g
aWYgZG9lc24ndCBzZWVtIHdvcnRoCml0IHRvIGtlZXAgdGhlIGZpbGUgYXJvdW5kIGluIHRoZSBt
ZWFudGltZS4KCnYyOiBmaXggY29tbWVudHMgYW5kIGNvbW1pdCBtZXNzYWdlIChKb2huKQoKU2ln
bmVkLW9mZi1ieTogRGFuaWVsZSBDZXJhb2xvIFNwdXJpbyA8ZGFuaWVsZS5jZXJhb2xvc3B1cmlv
QGludGVsLmNvbT4KQ2M6IE1pY2hhbCBXYWpkZWN6a28gPG1pY2hhbC53YWpkZWN6a29AaW50ZWwu
Y29tPgpDYzogSm9obiBIYXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KQ2M6IE1h
dHRoZXcgQnJvc3QgPG1hdHRoZXcuYnJvc3RAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogSm9obiBI
YXJyaXNvbiA8Sm9obi5DLkhhcnJpc29uQEludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC91Yy9pbnRlbF9ndWMuaCAgICAgICAgfCAgIDggKy0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2d0L3VjL2ludGVsX2d1Y19md2lmLmggICB8ICAgMiArLQogLi4uL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIHwgMzc2ICsrLS0tLS0tLS0tLS0tLS0tLQogLi4u
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oIHwgICA5ICstCiBkcml2
ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF91Yy5jICAgICAgICAgfCAgIDcgKy0KIGRyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L3VjL3NlbGZ0ZXN0X2d1Yy5jICAgICB8IDI5OSAtLS0tLS0tLS0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgICAgICAgICAgIHwgIDEx
ICstCiAuLi4vZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaCAgfCAgIDEg
LQogOCBmaWxlcyBjaGFuZ2VkLCA0NCBpbnNlcnRpb25zKCspLCA2NjkgZGVsZXRpb25zKC0pCiBk
ZWxldGUgbW9kZSAxMDA2NDQgZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvc2VsZnRlc3RfZ3Vj
LmMKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuaCBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX2d1Yy5oCmluZGV4IGJmNDM4ZjgyMGMz
NS4uYjJkMTc2NmU2ODlhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9p
bnRlbF9ndWMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWMuaApA
QCAtMjAsOCArMjAsOCBAQCBzdHJ1Y3QgX19ndWNfYWRzX2Jsb2I7CiAKIC8qCiAgKiBUb3AgbGV2
ZWwgc3RydWN0dXJlIG9mIEd1Qy4gSXQgaGFuZGxlcyBmaXJtd2FyZSBsb2FkaW5nIGFuZCBtYW5h
Z2VzIGNsaWVudAotICogcG9vbCBhbmQgZG9vcmJlbGxzLiBpbnRlbF9ndWMgb3ducyBhIGludGVs
X2d1Y19jbGllbnQgdG8gcmVwbGFjZSB0aGUgbGVnYWN5Ci0gKiBFeGVjTGlzdCBzdWJtaXNzaW9u
LgorICogcG9vbC4gaW50ZWxfZ3VjIG93bnMgYSBpbnRlbF9ndWNfY2xpZW50IHRvIHJlcGxhY2Ug
dGhlIGxlZ2FjeSBFeGVjTGlzdAorICogc3VibWlzc2lvbi4KICAqLwogc3RydWN0IGludGVsX2d1
YyB7CiAJc3RydWN0IGludGVsX3VjX2Z3IGZ3OwpAQCAtNTAsMTAgKzUwLDYgQEAgc3RydWN0IGlu
dGVsX2d1YyB7CiAKIAlzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqZXhlY2J1Zl9jbGllbnQ7CiAK
LQlERUNMQVJFX0JJVE1BUChkb29yYmVsbF9iaXRtYXAsIEdVQ19OVU1fRE9PUkJFTExTKTsKLQkv
KiBDeWNsaWMgY291bnRlciBtb2QgcGFnZXNpemUJKi8KLQl1MzIgZGJfY2FjaGVsaW5lOwotCiAJ
LyogQ29udHJvbCBwYXJhbXMgZm9yIGZ3IGluaXRpYWxpemF0aW9uICovCiAJdTMyIHBhcmFtc1tH
VUNfQ1RMX01BWF9EV09SRFNdOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC91Yy9pbnRlbF9ndWNfZndpZi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxf
Z3VjX2Z3aWYuaAppbmRleCBhMjZhODVkNTAyMDkuLjFlOGU0YWY3ZDljYSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX2Z3aWYuaAorKysgYi9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfZndpZi5oCkBAIC0zMSw3ICszMSw3IEBACiAK
ICNkZWZpbmUgR1VDX0RPT1JCRUxMX0lOVkFMSUQJCTI1NgogCi0jZGVmaW5lIEdVQ19EQl9TSVpF
CQkJKFBBR0VfU0laRSkKKyNkZWZpbmUgR1VDX1BEX1NJWkUJCQkoUEFHRV9TSVpFKQogI2RlZmlu
ZSBHVUNfV1FfU0laRQkJCShQQUdFX1NJWkUgKiAyKQogCiAvKiBXb3JrIHF1ZXVlIGl0ZW0gaGVh
ZGVyIGRlZmluaXRpb25zICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91
Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50
ZWxfZ3VjX3N1Ym1pc3Npb24uYwppbmRleCA3NGMwYzY3OGIwOWQuLjg1ZGE1ZmU4NzYzZSAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24u
YworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5j
CkBAIC0zMCw4ICszMCw4IEBACiAgKiBHdUMgY2xpZW50OgogICogQSBpbnRlbF9ndWNfY2xpZW50
IHJlZmVycyB0byBhIHN1Ym1pc3Npb24gcGF0aCB0aHJvdWdoIEd1Qy4gQ3VycmVudGx5LCB0aGVy
ZQogICogaXMgb25seSBvbmUgY2xpZW50LCB3aGljaCBpcyBjaGFyZ2VkIHdpdGggYWxsIHN1Ym1p
c3Npb25zIHRvIHRoZSBHdUMuIFRoaXMKLSAqIHN0cnVjdCBpcyB0aGUgb3duZXIgb2YgYSBkb29y
YmVsbCwgYSBwcm9jZXNzIGRlc2NyaXB0b3IgYW5kIGEgd29ya3F1ZXVlIChhbGwKLSAqIG9mIHRo
ZW0gaW5zaWRlIGEgc2luZ2xlIGdlbSBvYmplY3QgdGhhdCBjb250YWlucyBhbGwgcmVxdWlyZWQg
cGFnZXMgZm9yIHRoZXNlCisgKiBzdHJ1Y3QgaXMgdGhlIG93bmVyIG9mIGEgcHJvY2VzcyBkZXNj
cmlwdG9yIGFuZCBhIHdvcmtxdWV1ZSAoYm90aCBvZiB0aGVtCisgKiBpbnNpZGUgYSBzaW5nbGUg
Z2VtIG9iamVjdCB0aGF0IGNvbnRhaW5zIGFsbCByZXF1aXJlZCBwYWdlcyBmb3IgdGhlc2UKICAq
IGVsZW1lbnRzKS4KICAqCiAgKiBHdUMgc3RhZ2UgZGVzY3JpcHRvcjoKQEAgLTM5LDEzICszOSwx
MyBAQAogICogZGVzY3JpcHRvcnMsIGFuZCBzaGFyZXMgdGhlbSB3aXRoIHRoZSBHdUMuCiAgKiBD
dXJyZW50bHksIHRoZXJlIGV4aXN0cyBhIDE6MSBtYXBwaW5nIGJldHdlZW4gYSBpbnRlbF9ndWNf
Y2xpZW50IGFuZCBhCiAgKiBndWNfc3RhZ2VfZGVzYyAodmlhIHRoZSBjbGllbnQncyBzdGFnZV9p
ZCksIHNvIGVmZmVjdGl2ZWx5IG9ubHkgb25lCi0gKiBnZXRzIHVzZWQuIFRoaXMgc3RhZ2UgZGVz
Y3JpcHRvciBsZXRzIHRoZSBHdUMga25vdyBhYm91dCB0aGUgZG9vcmJlbGwsCi0gKiB3b3JrcXVl
dWUgYW5kIHByb2Nlc3MgZGVzY3JpcHRvci4gVGhlb3JldGljYWxseSwgaXQgYWxzbyBsZXRzIHRo
ZSBHdUMKLSAqIGtub3cgYWJvdXQgb3VyIEhXIGNvbnRleHRzIChjb250ZXh0IElELCBldGMuLi4p
LCBidXQgd2UgYWN0dWFsbHkKLSAqIGVtcGxveSBhIGtpbmQgb2Ygc3VibWlzc2lvbiB3aGVyZSB0
aGUgR3VDIHVzZXMgdGhlIExSQ0Egc2VudCB2aWEgdGhlIHdvcmsKLSAqIGl0ZW0gaW5zdGVhZCAo
dGhlIHNpbmdsZSBndWNfc3RhZ2VfZGVzYyBhc3NvY2lhdGVkIHRvIGV4ZWNidWYgY2xpZW50Ci0g
KiBjb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZGVmYXVsdCBrZXJuZWwgY29udGV4dCBv
bmx5LCBidXQgdGhpcyBpcwotICogZXNzZW50aWFsbHkgdW51c2VkKS4gVGhpcyBpcyBjYWxsZWQg
YSAicHJveHkiIHN1Ym1pc3Npb24uCisgKiBnZXRzIHVzZWQuIFRoaXMgc3RhZ2UgZGVzY3JpcHRv
ciBsZXRzIHRoZSBHdUMga25vdyBhYm91dCB0aGUgd29ya3F1ZXVlIGFuZAorICogcHJvY2VzcyBk
ZXNjcmlwdG9yLiBUaGVvcmV0aWNhbGx5LCBpdCBhbHNvIGxldHMgdGhlIEd1QyBrbm93IGFib3V0
IG91ciBIVworICogY29udGV4dHMgKGNvbnRleHQgSUQsIGV0Yy4uLiksIGJ1dCB3ZSBhY3R1YWxs
eSBlbXBsb3kgYSBraW5kIG9mIHN1Ym1pc3Npb24KKyAqIHdoZXJlIHRoZSBHdUMgdXNlcyB0aGUg
TFJDQSBzZW50IHZpYSB0aGUgd29yayBpdGVtIGluc3RlYWQgKHRoZSBzaW5nbGUKKyAqIGd1Y19z
dGFnZV9kZXNjIGFzc29jaWF0ZWQgdG8gZXhlY2J1ZiBjbGllbnQgY29udGFpbnMgaW5mb3JtYXRp
b24gYWJvdXQgdGhlCisgKiBkZWZhdWx0IGtlcm5lbCBjb250ZXh0IG9ubHksIGJ1dCB0aGlzIGlz
IGVzc2VudGlhbGx5IHVudXNlZCkuIFRoaXMgaXMgY2FsbGVkCisgKiBhICJwcm94eSIgc3VibWlz
c2lvbi4KICAqCiAgKiBUaGUgU2NyYXRjaCByZWdpc3RlcnM6CiAgKiBUaGVyZSBhcmUgMTYgTU1J
Ty1iYXNlZCByZWdpc3RlcnMgc3RhcnQgZnJvbSAweEMxODAuIFRoZSBrZXJuZWwgZHJpdmVyIHdy
aXRlcwpAQCAtNTYsMTAgKzU2LDYgQEAKICAqIHRoZW4gcHJvY2VlZHMuCiAgKiBTZWUgaW50ZWxf
Z3VjX3NlbmQoKQogICoKLSAqIERvb3JiZWxsczoKLSAqIERvb3JiZWxscyBhcmUgaW50ZXJydXB0
cyB0byB1S2VybmVsLiBBIGRvb3JiZWxsIGlzIGEgc2luZ2xlIGNhY2hlIGxpbmUgKFFXKQotICog
bWFwcGVkIGludG8gcHJvY2VzcyBzcGFjZS4KLSAqCiAgKiBXb3JrIEl0ZW1zOgogICogVGhlcmUg
YXJlIHNldmVyYWwgdHlwZXMgb2Ygd29yayBpdGVtcyB0aGF0IHRoZSBob3N0IG1heSBwbGFjZSBp
bnRvIGEKICAqIHdvcmtxdWV1ZSwgZWFjaCB3aXRoIGl0cyBvd24gcmVxdWlyZW1lbnRzIGFuZCBs
aW1pdGF0aW9ucy4gQ3VycmVudGx5IG9ubHkKQEAgLTgxLDc4ICs3Nyw2IEBAIHN0YXRpYyBpbmxp
bmUgYm9vbCBpc19oaWdoX3ByaW9yaXR5KHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQp
CiAJCWNsaWVudC0+cHJpb3JpdHkgPT0gR1VDX0NMSUVOVF9QUklPUklUWV9ISUdIKTsKIH0KIAot
c3RhdGljIGludCByZXNlcnZlX2Rvb3JiZWxsKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGll
bnQpCi17Ci0JdW5zaWduZWQgbG9uZyBvZmZzZXQ7Ci0JdW5zaWduZWQgbG9uZyBlbmQ7Ci0JdTE2
IGlkOwotCi0JR0VNX0JVR19PTihjbGllbnQtPmRvb3JiZWxsX2lkICE9IEdVQ19ET09SQkVMTF9J
TlZBTElEKTsKLQotCS8qCi0JICogVGhlIGJpdG1hcCB0cmFja3Mgd2hpY2ggZG9vcmJlbGwgcmVn
aXN0ZXJzIGFyZSBjdXJyZW50bHkgaW4gdXNlLgotCSAqIEl0IGlzIHNwbGl0IGludG8gdHdvIGhh
bHZlczsgdGhlIGZpcnN0IGhhbGYgaXMgdXNlZCBmb3Igbm9ybWFsCi0JICogcHJpb3JpdHkgY29u
dGV4dHMsIHRoZSBzZWNvbmQgaGFsZiBmb3IgaGlnaC1wcmlvcml0eSBvbmVzLgotCSAqLwotCW9m
ZnNldCA9IDA7Ci0JZW5kID0gR1VDX05VTV9ET09SQkVMTFMgLyAyOwotCWlmIChpc19oaWdoX3By
aW9yaXR5KGNsaWVudCkpIHsKLQkJb2Zmc2V0ID0gZW5kOwotCQllbmQgKz0gb2Zmc2V0OwotCX0K
LQotCWlkID0gZmluZF9uZXh0X3plcm9fYml0KGNsaWVudC0+Z3VjLT5kb29yYmVsbF9iaXRtYXAs
IGVuZCwgb2Zmc2V0KTsKLQlpZiAoaWQgPT0gZW5kKQotCQlyZXR1cm4gLUVOT1NQQzsKLQotCV9f
c2V0X2JpdChpZCwgY2xpZW50LT5ndWMtPmRvb3JiZWxsX2JpdG1hcCk7Ci0JY2xpZW50LT5kb29y
YmVsbF9pZCA9IGlkOwotCURSTV9ERUJVR19EUklWRVIoImNsaWVudCAldSAoaGlnaCBwcmlvPSVz
KSByZXNlcnZlZCBkb29yYmVsbDogJWRcbiIsCi0JCQkgY2xpZW50LT5zdGFnZV9pZCwgeWVzbm8o
aXNfaGlnaF9wcmlvcml0eShjbGllbnQpKSwKLQkJCSBpZCk7Ci0JcmV0dXJuIDA7Ci19Ci0KLXN0
YXRpYyBib29sIGhhc19kb29yYmVsbChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQot
ewotCWlmIChjbGllbnQtPmRvb3JiZWxsX2lkID09IEdVQ19ET09SQkVMTF9JTlZBTElEKQotCQly
ZXR1cm4gZmFsc2U7Ci0KLQlyZXR1cm4gdGVzdF9iaXQoY2xpZW50LT5kb29yYmVsbF9pZCwgY2xp
ZW50LT5ndWMtPmRvb3JiZWxsX2JpdG1hcCk7Ci19Ci0KLXN0YXRpYyB2b2lkIHVucmVzZXJ2ZV9k
b29yYmVsbChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQotewotCUdFTV9CVUdfT04o
IWhhc19kb29yYmVsbChjbGllbnQpKTsKLQotCV9fY2xlYXJfYml0KGNsaWVudC0+ZG9vcmJlbGxf
aWQsIGNsaWVudC0+Z3VjLT5kb29yYmVsbF9iaXRtYXApOwotCWNsaWVudC0+ZG9vcmJlbGxfaWQg
PSBHVUNfRE9PUkJFTExfSU5WQUxJRDsKLX0KLQotLyoKLSAqIFRlbGwgdGhlIEd1QyB0byBhbGxv
Y2F0ZSBvciBkZWFsbG9jYXRlIGEgc3BlY2lmaWMgZG9vcmJlbGwKLSAqLwotCi1zdGF0aWMgaW50
IF9fZ3VjX2FsbG9jYXRlX2Rvb3JiZWxsKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMyIHN0YWdl
X2lkKQotewotCXUzMiBhY3Rpb25bXSA9IHsKLQkJSU5URUxfR1VDX0FDVElPTl9BTExPQ0FURV9E
T09SQkVMTCwKLQkJc3RhZ2VfaWQKLQl9OwotCi0JcmV0dXJuIGludGVsX2d1Y19zZW5kKGd1Yywg
YWN0aW9uLCBBUlJBWV9TSVpFKGFjdGlvbikpOwotfQotCi1zdGF0aWMgaW50IF9fZ3VjX2RlYWxs
b2NhdGVfZG9vcmJlbGwoc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MzIgc3RhZ2VfaWQpCi17Ci0J
dTMyIGFjdGlvbltdID0gewotCQlJTlRFTF9HVUNfQUNUSU9OX0RFQUxMT0NBVEVfRE9PUkJFTEws
Ci0JCXN0YWdlX2lkCi0JfTsKLQotCXJldHVybiBpbnRlbF9ndWNfc2VuZChndWMsIGFjdGlvbiwg
QVJSQVlfU0laRShhY3Rpb24pKTsKLX0KLQogc3RhdGljIHN0cnVjdCBndWNfc3RhZ2VfZGVzYyAq
X19nZXRfc3RhZ2VfZGVzYyhzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQogewogCXN0
cnVjdCBndWNfc3RhZ2VfZGVzYyAqYmFzZSA9IGNsaWVudC0+Z3VjLT5zdGFnZV9kZXNjX3Bvb2xf
dmFkZHI7CkBAIC0xNjAsMTE4ICs4NCwxMCBAQCBzdGF0aWMgc3RydWN0IGd1Y19zdGFnZV9kZXNj
ICpfX2dldF9zdGFnZV9kZXNjKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCiAJcmV0
dXJuICZiYXNlW2NsaWVudC0+c3RhZ2VfaWRdOwogfQogCi0vKgotICogSW5pdGlhbGlzZSwgdXBk
YXRlLCBvciBjbGVhciBkb29yYmVsbCBkYXRhIHNoYXJlZCB3aXRoIHRoZSBHdUMKLSAqCi0gKiBU
aGVzZSBmdW5jdGlvbnMgbW9kaWZ5IHNoYXJlZCBkYXRhIGFuZCBzbyBuZWVkIGFjY2VzcyB0byB0
aGUgbWFwcGVkCi0gKiBjbGllbnQgb2JqZWN0IHdoaWNoIGNvbnRhaW5zIHRoZSBwYWdlIGJlaW5n
IHVzZWQgZm9yIHRoZSBkb29yYmVsbAotICovCi0KLXN0YXRpYyB2b2lkIF9fdXBkYXRlX2Rvb3Ji
ZWxsX2Rlc2Moc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCwgdTE2IG5ld19pZCkKLXsK
LQlzdHJ1Y3QgZ3VjX3N0YWdlX2Rlc2MgKmRlc2M7Ci0KLQkvKiBVcGRhdGUgdGhlIEd1QydzIGlk
ZWEgb2YgdGhlIGRvb3JiZWxsIElEICovCi0JZGVzYyA9IF9fZ2V0X3N0YWdlX2Rlc2MoY2xpZW50
KTsKLQlkZXNjLT5kYl9pZCA9IG5ld19pZDsKLX0KLQotc3RhdGljIHN0cnVjdCBndWNfZG9vcmJl
bGxfaW5mbyAqX19nZXRfZG9vcmJlbGwoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkK
LXsKLQlyZXR1cm4gY2xpZW50LT52YWRkciArIGNsaWVudC0+ZG9vcmJlbGxfb2Zmc2V0OwotfQot
Ci1zdGF0aWMgYm9vbCBfX2Rvb3JiZWxsX3ZhbGlkKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTE2
IGRiX2lkKQotewotCXN0cnVjdCBpbnRlbF91bmNvcmUgKnVuY29yZSA9IGd1Y190b19ndChndWMp
LT51bmNvcmU7Ci0KLQlHRU1fQlVHX09OKGRiX2lkID49IEdVQ19OVU1fRE9PUkJFTExTKTsKLQly
ZXR1cm4gaW50ZWxfdW5jb3JlX3JlYWQodW5jb3JlLCBHRU44X0RSQlJFR0woZGJfaWQpKSAmIEdF
TjhfRFJCX1ZBTElEOwotfQotCi1zdGF0aWMgdm9pZCBfX2luaXRfZG9vcmJlbGwoc3RydWN0IGlu
dGVsX2d1Y19jbGllbnQgKmNsaWVudCkKLXsKLQlzdHJ1Y3QgZ3VjX2Rvb3JiZWxsX2luZm8gKmRv
b3JiZWxsOwotCi0JZG9vcmJlbGwgPSBfX2dldF9kb29yYmVsbChjbGllbnQpOwotCWRvb3JiZWxs
LT5kYl9zdGF0dXMgPSBHVUNfRE9PUkJFTExfRU5BQkxFRDsKLQlkb29yYmVsbC0+Y29va2llID0g
MDsKLX0KLQotc3RhdGljIHZvaWQgX19maW5pX2Rvb3JiZWxsKHN0cnVjdCBpbnRlbF9ndWNfY2xp
ZW50ICpjbGllbnQpCi17Ci0Jc3RydWN0IGd1Y19kb29yYmVsbF9pbmZvICpkb29yYmVsbDsKLQl1
MTYgZGJfaWQgPSBjbGllbnQtPmRvb3JiZWxsX2lkOwotCi0JZG9vcmJlbGwgPSBfX2dldF9kb29y
YmVsbChjbGllbnQpOwotCWRvb3JiZWxsLT5kYl9zdGF0dXMgPSBHVUNfRE9PUkJFTExfRElTQUJM
RUQ7Ci0KLQkvKiBEb29yYmVsbCByZWxlYXNlIGZsb3cgcmVxdWlyZXMgdGhhdCB3ZSB3YWl0IGZv
ciBHRU44X0RSQl9WQUxJRCBiaXQKLQkgKiB0byBnbyB0byB6ZXJvIGFmdGVyIHVwZGF0aW5nIGRi
X3N0YXR1cyBiZWZvcmUgd2UgY2FsbCB0aGUgR3VDIHRvCi0JICogcmVsZWFzZSB0aGUgZG9vcmJl
bGwKLQkgKi8KLQlpZiAod2FpdF9mb3JfdXMoIV9fZG9vcmJlbGxfdmFsaWQoY2xpZW50LT5ndWMs
IGRiX2lkKSwgMTApKQotCQlXQVJOX09OQ0UodHJ1ZSwgIkRvb3JiZWxsIG5ldmVyIGJlY2FtZSBp
bnZhbGlkIGFmdGVyIGRpc2FibGVcbiIpOwotfQotCi1zdGF0aWMgaW50IGNyZWF0ZV9kb29yYmVs
bChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQotewotCWludCByZXQ7Ci0KLQlpZiAo
V0FSTl9PTighaGFzX2Rvb3JiZWxsKGNsaWVudCkpKQotCQlyZXR1cm4gLUVOT0RFVjsgLyogaW50
ZXJuYWwgc2V0dXAgZXJyb3IsIHNob3VsZCBuZXZlciBoYXBwZW4gKi8KLQotCV9fdXBkYXRlX2Rv
b3JiZWxsX2Rlc2MoY2xpZW50LCBjbGllbnQtPmRvb3JiZWxsX2lkKTsKLQlfX2luaXRfZG9vcmJl
bGwoY2xpZW50KTsKLQotCXJldCA9IF9fZ3VjX2FsbG9jYXRlX2Rvb3JiZWxsKGNsaWVudC0+Z3Vj
LCBjbGllbnQtPnN0YWdlX2lkKTsKLQlpZiAocmV0KSB7Ci0JCV9fZmluaV9kb29yYmVsbChjbGll
bnQpOwotCQlfX3VwZGF0ZV9kb29yYmVsbF9kZXNjKGNsaWVudCwgR1VDX0RPT1JCRUxMX0lOVkFM
SUQpOwotCQlEUk1fREVCVUdfRFJJVkVSKCJDb3VsZG4ndCBjcmVhdGUgY2xpZW50ICV1IGRvb3Ji
ZWxsOiAlZFxuIiwKLQkJCQkgY2xpZW50LT5zdGFnZV9pZCwgcmV0KTsKLQkJcmV0dXJuIHJldDsK
LQl9Ci0KLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIGludCBkZXN0cm95X2Rvb3JiZWxsKHN0cnVj
dCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCi17Ci0JaW50IHJldDsKLQotCUdFTV9CVUdfT04o
IWhhc19kb29yYmVsbChjbGllbnQpKTsKLQotCV9fZmluaV9kb29yYmVsbChjbGllbnQpOwotCXJl
dCA9IF9fZ3VjX2RlYWxsb2NhdGVfZG9vcmJlbGwoY2xpZW50LT5ndWMsIGNsaWVudC0+c3RhZ2Vf
aWQpOwotCWlmIChyZXQpCi0JCURSTV9FUlJPUigiQ291bGRuJ3QgZGVzdHJveSBjbGllbnQgJXUg
ZG9vcmJlbGw6ICVkXG4iLAotCQkJICBjbGllbnQtPnN0YWdlX2lkLCByZXQpOwotCi0JX191cGRh
dGVfZG9vcmJlbGxfZGVzYyhjbGllbnQsIEdVQ19ET09SQkVMTF9JTlZBTElEKTsKLQotCXJldHVy
biByZXQ7Ci19Ci0KLXN0YXRpYyB1bnNpZ25lZCBsb25nIF9fc2VsZWN0X2NhY2hlbGluZShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpCi17Ci0JdW5zaWduZWQgbG9uZyBvZmZzZXQ7Ci0KLQkvKiBEb29y
YmVsbCB1c2VzIGEgc2luZ2xlIGNhY2hlIGxpbmUgd2l0aGluIGEgcGFnZSAqLwotCW9mZnNldCA9
IG9mZnNldF9pbl9wYWdlKGd1Yy0+ZGJfY2FjaGVsaW5lKTsKLQotCS8qIE1vdmluZyB0byBuZXh0
IGNhY2hlIGxpbmUgdG8gcmVkdWNlIGNvbnRlbnRpb24gKi8KLQlndWMtPmRiX2NhY2hlbGluZSAr
PSBjYWNoZV9saW5lX3NpemUoKTsKLQotCURSTV9ERUJVR19EUklWRVIoInJlc2VydmVkIGNhY2hl
bGluZSAweCVseCwgbmV4dCAweCV4LCBsaW5lc2l6ZSAldVxuIiwKLQkJCSBvZmZzZXQsIGd1Yy0+
ZGJfY2FjaGVsaW5lLCBjYWNoZV9saW5lX3NpemUoKSk7Ci0JcmV0dXJuIG9mZnNldDsKLX0KLQog
c3RhdGljIGlubGluZSBzdHJ1Y3QgZ3VjX3Byb2Nlc3NfZGVzYyAqCiBfX2dldF9wcm9jZXNzX2Rl
c2Moc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKIHsKLQlyZXR1cm4gY2xpZW50LT52
YWRkciArIGNsaWVudC0+cHJvY19kZXNjX29mZnNldDsKKwlyZXR1cm4gY2xpZW50LT52YWRkcjsK
IH0KIAogLyoKQEAgLTMzMiw4ICsxNDgsOCBAQCBzdGF0aWMgdm9pZCBndWNfc3RhZ2VfZGVzY19w
b29sX2Rlc3Ryb3koc3RydWN0IGludGVsX2d1YyAqZ3VjKQogICogSW5pdGlhbGlzZS9jbGVhciB0
aGUgc3RhZ2UgZGVzY3JpcHRvciBzaGFyZWQgd2l0aCB0aGUgR3VDIGZpcm13YXJlLgogICoKICAq
IFRoaXMgZGVzY3JpcHRvciB0ZWxscyB0aGUgR3VDIHdoZXJlIChpbiBHR1RUIHNwYWNlKSB0byBm
aW5kIHRoZSBpbXBvcnRhbnQKLSAqIGRhdGEgc3RydWN0dXJlcyByZWxhdGluZyB0byB0aGlzIGNs
aWVudCAoZG9vcmJlbGwsIHByb2Nlc3MgZGVzY3JpcHRvciwKLSAqIHdyaXRlIHF1ZXVlLCBldGMp
LgorICogZGF0YSBzdHJ1Y3R1cmVzIHJlbGF0aW5nIHRvIHRoaXMgY2xpZW50IChwcm9jZXNzIGRl
c2NyaXB0b3IsIHdyaXRlIHF1ZXVlLAorICogZXRjKS4KICAqLwogc3RhdGljIHZvaWQgZ3VjX3N0
YWdlX2Rlc2NfaW5pdChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQogewpAQCAtMzUw
LDE5ICsxNjYsMTQgQEAgc3RhdGljIHZvaWQgZ3VjX3N0YWdlX2Rlc2NfaW5pdChzdHJ1Y3QgaW50
ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQogCQlkZXNjLT5hdHRyaWJ1dGUgfD0gR1VDX1NUQUdFX0RF
U0NfQVRUUl9QUkVFTVBUOwogCWRlc2MtPnN0YWdlX2lkID0gY2xpZW50LT5zdGFnZV9pZDsKIAlk
ZXNjLT5wcmlvcml0eSA9IGNsaWVudC0+cHJpb3JpdHk7Ci0JZGVzYy0+ZGJfaWQgPSBjbGllbnQt
PmRvb3JiZWxsX2lkOwogCiAJLyoKLQkgKiBUaGUgZG9vcmJlbGwsIHByb2Nlc3MgZGVzY3JpcHRv
ciwgYW5kIHdvcmtxdWV1ZSBhcmUgYWxsIHBhcnRzCi0JICogb2YgdGhlIGNsaWVudCBvYmplY3Qs
IHdoaWNoIHRoZSBHdUMgd2lsbCByZWZlcmVuY2UgdmlhIHRoZSBHR1RUCisJICogVGhlIHByb2Nl
c3MgZGVzY3JpcHRvciBhbmQgd29ya3F1ZXVlIGFyZSBhbGwgcGFydHMgb2YgdGhlIGNsaWVudAor
CSAqIG9iamVjdCwgd2hpY2ggdGhlIEd1QyB3aWxsIHJlZmVyZW5jZSB2aWEgdGhlIEdHVFQKIAkg
Ki8KIAlnZnhfYWRkciA9IGludGVsX2d1Y19nZ3R0X29mZnNldChndWMsIGNsaWVudC0+dm1hKTsK
LQlkZXNjLT5kYl90cmlnZ2VyX3BoeSA9IHNnX2RtYV9hZGRyZXNzKGNsaWVudC0+dm1hLT5wYWdl
cy0+c2dsKSArCi0JCQkJY2xpZW50LT5kb29yYmVsbF9vZmZzZXQ7Ci0JZGVzYy0+ZGJfdHJpZ2dl
cl9jcHUgPSBwdHJfdG9fdTY0KF9fZ2V0X2Rvb3JiZWxsKGNsaWVudCkpOwotCWRlc2MtPmRiX3Ry
aWdnZXJfdWsgPSBnZnhfYWRkciArIGNsaWVudC0+ZG9vcmJlbGxfb2Zmc2V0OwotCWRlc2MtPnBy
b2Nlc3NfZGVzYyA9IGdmeF9hZGRyICsgY2xpZW50LT5wcm9jX2Rlc2Nfb2Zmc2V0OwotCWRlc2Mt
PndxX2FkZHIgPSBnZnhfYWRkciArIEdVQ19EQl9TSVpFOworCWRlc2MtPnByb2Nlc3NfZGVzYyA9
IGdmeF9hZGRyOworCWRlc2MtPndxX2FkZHIgPSBnZnhfYWRkciArIEdVQ19QRF9TSVpFOwogCWRl
c2MtPndxX3NpemUgPSBHVUNfV1FfU0laRTsKIAogCWRlc2MtPmRlc2NfcHJpdmF0ZSA9IHB0cl90
b191NjQoY2xpZW50KTsKQEAgLTQwOCw0OCArMjE5LDIzIEBAIHN0YXRpYyB2b2lkIGd1Y193cV9p
dGVtX2FwcGVuZChzdHJ1Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50LAogCQkJICAgICAgR1VD
X1dRX1NJWkUpIDwgd3FpX3NpemUpOwogCUdFTV9CVUdfT04od3Ffb2ZmICYgKHdxaV9zaXplIC0g
MSkpOwogCi0JLyogV1Egc3RhcnRzIGZyb20gdGhlIHBhZ2UgYWZ0ZXIgZG9vcmJlbGwgLyBwcm9j
ZXNzX2Rlc2MgKi8KLQl3cWkgPSBjbGllbnQtPnZhZGRyICsgd3Ffb2ZmICsgR1VDX0RCX1NJWkU7
Ci0KLQlpZiAoSTkxNV9TRUxGVEVTVF9PTkxZKGNsaWVudC0+dXNlX25vcF93cWkpKSB7Ci0JCXdx
aS0+aGVhZGVyID0gV1FfVFlQRV9OT09QIHwgKHdxaV9sZW4gPDwgV1FfTEVOX1NISUZUKTsKLQl9
IGVsc2UgewotCQkvKiBOb3cgZmlsbCBpbiB0aGUgNC13b3JkIHdvcmsgcXVldWUgaXRlbSAqLwot
CQl3cWktPmhlYWRlciA9IFdRX1RZUEVfSU5PUkRFUiB8Ci0JCQkgICAgICAod3FpX2xlbiA8PCBX
UV9MRU5fU0hJRlQpIHwKLQkJCSAgICAgICh0YXJnZXRfZW5naW5lIDw8IFdRX1RBUkdFVF9TSElG
VCkgfAotCQkJICAgICAgV1FfTk9fV0NGTFVTSF9XQUlUOwotCQl3cWktPmNvbnRleHRfZGVzYyA9
IGNvbnRleHRfZGVzYzsKLQkJd3FpLT5zdWJtaXRfZWxlbWVudF9pbmZvID0gcmluZ190YWlsIDw8
IFdRX1JJTkdfVEFJTF9TSElGVDsKLQkJR0VNX0JVR19PTihyaW5nX3RhaWwgPiBXUV9SSU5HX1RB
SUxfTUFYKTsKLQkJd3FpLT5mZW5jZV9pZCA9IGZlbmNlX2lkOwotCX0KKwkvKiBXUSBzdGFydHMg
ZnJvbSB0aGUgcGFnZSBhZnRlciBwcm9jZXNzX2Rlc2MgKi8KKwl3cWkgPSBjbGllbnQtPnZhZGRy
ICsgd3Ffb2ZmICsgR1VDX1BEX1NJWkU7CisKKwkvKiBOb3cgZmlsbCBpbiB0aGUgNC13b3JkIHdv
cmsgcXVldWUgaXRlbSAqLworCXdxaS0+aGVhZGVyID0gV1FfVFlQRV9JTk9SREVSIHwKKwkJICAg
ICAgKHdxaV9sZW4gPDwgV1FfTEVOX1NISUZUKSB8CisJCSAgICAgICh0YXJnZXRfZW5naW5lIDw8
IFdRX1RBUkdFVF9TSElGVCkgfAorCQkgICAgICBXUV9OT19XQ0ZMVVNIX1dBSVQ7CisJd3FpLT5j
b250ZXh0X2Rlc2MgPSBjb250ZXh0X2Rlc2M7CisJd3FpLT5zdWJtaXRfZWxlbWVudF9pbmZvID0g
cmluZ190YWlsIDw8IFdRX1JJTkdfVEFJTF9TSElGVDsKKwlHRU1fQlVHX09OKHJpbmdfdGFpbCA+
IFdRX1JJTkdfVEFJTF9NQVgpOworCXdxaS0+ZmVuY2VfaWQgPSBmZW5jZV9pZDsKIAogCS8qIE1h
a2UgdGhlIHVwZGF0ZSB2aXNpYmxlIHRvIEd1QyAqLwogCVdSSVRFX09OQ0UoZGVzYy0+dGFpbCwg
KHdxX29mZiArIHdxaV9zaXplKSAmIChHVUNfV1FfU0laRSAtIDEpKTsKIH0KIAotc3RhdGljIHZv
aWQgZ3VjX3JpbmdfZG9vcmJlbGwoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKLXsK
LQlzdHJ1Y3QgZ3VjX2Rvb3JiZWxsX2luZm8gKmRiOwotCXUzMiBjb29raWU7Ci0KLQlsb2NrZGVw
X2Fzc2VydF9oZWxkKCZjbGllbnQtPndxX2xvY2spOwotCi0JLyogcG9pbnRlciBvZiBjdXJyZW50
IGRvb3JiZWxsIGNhY2hlbGluZSAqLwotCWRiID0gX19nZXRfZG9vcmJlbGwoY2xpZW50KTsKLQot
CS8qCi0JICogV2UncmUgbm90IGV4cGVjdGluZyB0aGUgZG9vcmJlbGwgY29va2llIHRvIGNoYW5n
ZSBiZWhpbmQgb3VyIGJhY2ssCi0JICogd2UgYWxzbyBuZWVkIHRvIHRyZWF0IDAgYXMgYSByZXNl
cnZlZCB2YWx1ZS4KLQkgKi8KLQljb29raWUgPSBSRUFEX09OQ0UoZGItPmNvb2tpZSk7Ci0JV0FS
Tl9PTl9PTkNFKHhjaGcoJmRiLT5jb29raWUsIGNvb2tpZSArIDEgPzogY29va2llICsgMikgIT0g
Y29va2llKTsKLQotCS8qIFhYWDogZG9vcmJlbGwgd2FzIGxvc3QgYW5kIG5lZWQgdG8gYWNxdWly
ZSBpdCBhZ2FpbiAqLwotCUdFTV9CVUdfT04oZGItPmRiX3N0YXR1cyAhPSBHVUNfRE9PUkJFTExf
RU5BQkxFRCk7Ci19Ci0KIHN0YXRpYyB2b2lkIGd1Y19hZGRfcmVxdWVzdChzdHJ1Y3QgaW50ZWxf
Z3VjICpndWMsIHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogewogCXN0cnVjdCBpbnRlbF9ndWNf
Y2xpZW50ICpjbGllbnQgPSBndWMtPmV4ZWNidWZfY2xpZW50OwpAQCAtNDU5LDcgKzI0NSw2IEBA
IHN0YXRpYyB2b2lkIGd1Y19hZGRfcmVxdWVzdChzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCiAJZ3VjX3dxX2l0ZW1fYXBwZW5kKGNsaWVudCwgZW5naW5l
LT5ndWNfaWQsIGN0eF9kZXNjLAogCQkJICAgcmluZ190YWlsLCBycS0+ZmVuY2Uuc2Vxbm8pOwot
CWd1Y19yaW5nX2Rvb3JiZWxsKGNsaWVudCk7CiB9CiAKIC8qCkBAIC03NDQsMzYgKzUyOSw2IEBA
IHN0YXRpYyB2b2lkIGd1Y19yZXNldF9maW5pc2goc3RydWN0IGludGVsX2VuZ2luZV9jcyAqZW5n
aW5lKQogICogcGF0aCBvZiBndWNfc3VibWl0KCkgYWJvdmUuCiAgKi8KIAotLyogQ2hlY2sgdGhh
dCBhIGRvb3JiZWxsIHJlZ2lzdGVyIGlzIGluIHRoZSBleHBlY3RlZCBzdGF0ZSAqLwotc3RhdGlj
IGJvb2wgZG9vcmJlbGxfb2soc3RydWN0IGludGVsX2d1YyAqZ3VjLCB1MTYgZGJfaWQpCi17Ci0J
Ym9vbCB2YWxpZDsKLQotCUdFTV9CVUdfT04oZGJfaWQgPj0gR1VDX05VTV9ET09SQkVMTFMpOwot
Ci0JdmFsaWQgPSBfX2Rvb3JiZWxsX3ZhbGlkKGd1YywgZGJfaWQpOwotCi0JaWYgKHRlc3RfYml0
KGRiX2lkLCBndWMtPmRvb3JiZWxsX2JpdG1hcCkgPT0gdmFsaWQpCi0JCXJldHVybiB0cnVlOwot
Ci0JRFJNX0RFQlVHX0RSSVZFUigiRG9vcmJlbGwgJXUgaGFzIHVuZXhwZWN0ZWQgc3RhdGU6IHZh
bGlkPSVzXG4iLAotCQkJIGRiX2lkLCB5ZXNubyh2YWxpZCkpOwotCi0JcmV0dXJuIGZhbHNlOwot
fQotCi1zdGF0aWMgYm9vbCBndWNfdmVyaWZ5X2Rvb3JiZWxscyhzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMpCi17Ci0JYm9vbCBkb29yYmVsbHNfb2sgPSB0cnVlOwotCXUxNiBkYl9pZDsKLQotCWZvciAo
ZGJfaWQgPSAwOyBkYl9pZCA8IEdVQ19OVU1fRE9PUkJFTExTOyArK2RiX2lkKQotCQlpZiAoIWRv
b3JiZWxsX29rKGd1YywgZGJfaWQpKQotCQkJZG9vcmJlbGxzX29rID0gZmFsc2U7Ci0KLQlyZXR1
cm4gZG9vcmJlbGxzX29rOwotfQotCiAvKioKICAqIGd1Y19jbGllbnRfYWxsb2MoKSAtIEFsbG9j
YXRlIGFuIGludGVsX2d1Y19jbGllbnQKICAqIEBndWM6CXRoZSBpbnRlbF9ndWMgc3RydWN0dXJl
CkBAIC03OTgsNyArNTUzLDYgQEAgZ3VjX2NsaWVudF9hbGxvYyhzdHJ1Y3QgaW50ZWxfZ3VjICpn
dWMsIHUzMiBwcmlvcml0eSkKIAogCWNsaWVudC0+Z3VjID0gZ3VjOwogCWNsaWVudC0+cHJpb3Jp
dHkgPSBwcmlvcml0eTsKLQljbGllbnQtPmRvb3JiZWxsX2lkID0gR1VDX0RPT1JCRUxMX0lOVkFM
SUQ7CiAJc3Bpbl9sb2NrX2luaXQoJmNsaWVudC0+d3FfbG9jayk7CiAKIAlyZXQgPSBpZGFfc2lt
cGxlX2dldCgmZ3VjLT5zdGFnZV9pZHMsIDAsIEdVQ19NQVhfU1RBR0VfREVTQ1JJUFRPUlMsCkBA
IC04MDgsOCArNTYyLDggQEAgZ3VjX2NsaWVudF9hbGxvYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMs
IHUzMiBwcmlvcml0eSkKIAogCWNsaWVudC0+c3RhZ2VfaWQgPSByZXQ7CiAKLQkvKiBUaGUgZmly
c3QgcGFnZSBpcyBkb29yYmVsbC9wcm9jX2Rlc2MuIFR3byBmb2xsb3dlZCBwYWdlcyBhcmUgd3Eu
ICovCi0Jdm1hID0gaW50ZWxfZ3VjX2FsbG9jYXRlX3ZtYShndWMsIEdVQ19EQl9TSVpFICsgR1VD
X1dRX1NJWkUpOworCS8qIFRoZSBmaXJzdCBwYWdlIGlzIHByb2NfZGVzYy4gVHdvIGZvbGxvd2lu
ZyBwYWdlcyBhcmUgd3EuICovCisJdm1hID0gaW50ZWxfZ3VjX2FsbG9jYXRlX3ZtYShndWMsIEdV
Q19QRF9TSVpFICsgR1VDX1dRX1NJWkUpOwogCWlmIChJU19FUlIodm1hKSkgewogCQlyZXQgPSBQ
VFJfRVJSKHZtYSk7CiAJCWdvdG8gZXJyX2lkOwpAQCAtODI1LDMxICs1NzksMTEgQEAgZ3VjX2Ns
aWVudF9hbGxvYyhzdHJ1Y3QgaW50ZWxfZ3VjICpndWMsIHUzMiBwcmlvcml0eSkKIAl9CiAJY2xp
ZW50LT52YWRkciA9IHZhZGRyOwogCi0JcmV0ID0gcmVzZXJ2ZV9kb29yYmVsbChjbGllbnQpOwot
CWlmIChyZXQpCi0JCWdvdG8gZXJyX3ZhZGRyOwotCi0JY2xpZW50LT5kb29yYmVsbF9vZmZzZXQg
PSBfX3NlbGVjdF9jYWNoZWxpbmUoZ3VjKTsKLQotCS8qCi0JICogU2luY2UgdGhlIGRvb3JiZWxs
IG9ubHkgcmVxdWlyZXMgYSBzaW5nbGUgY2FjaGVsaW5lLCB3ZSBjYW4gc2F2ZQotCSAqIHNwYWNl
IGJ5IHB1dHRpbmcgdGhlIGFwcGxpY2F0aW9uIHByb2Nlc3MgZGVzY3JpcHRvciBpbiB0aGUgc2Ft
ZQotCSAqIHBhZ2UuIFVzZSB0aGUgaGFsZiBvZiB0aGUgcGFnZSB0aGF0IGRvZXNuJ3QgaW5jbHVk
ZSB0aGUgZG9vcmJlbGwuCi0JICovCi0JaWYgKGNsaWVudC0+ZG9vcmJlbGxfb2Zmc2V0ID49IChH
VUNfREJfU0laRSAvIDIpKQotCQljbGllbnQtPnByb2NfZGVzY19vZmZzZXQgPSAwOwotCWVsc2UK
LQkJY2xpZW50LT5wcm9jX2Rlc2Nfb2Zmc2V0ID0gKEdVQ19EQl9TSVpFIC8gMik7Ci0KIAlEUk1f
REVCVUdfRFJJVkVSKCJuZXcgcHJpb3JpdHkgJXUgY2xpZW50ICVwOiBzdGFnZV9pZCAldVxuIiwK
IAkJCSBwcmlvcml0eSwgY2xpZW50LCBjbGllbnQtPnN0YWdlX2lkKTsKLQlEUk1fREVCVUdfRFJJ
VkVSKCJkb29yYmVsbCBpZCAldSwgY2FjaGVsaW5lIG9mZnNldCAweCVseFxuIiwKLQkJCSBjbGll
bnQtPmRvb3JiZWxsX2lkLCBjbGllbnQtPmRvb3JiZWxsX29mZnNldCk7CiAKIAlyZXR1cm4gY2xp
ZW50OwogCi1lcnJfdmFkZHI6Ci0JaTkxNV9nZW1fb2JqZWN0X3VucGluX21hcChjbGllbnQtPnZt
YS0+b2JqKTsKIGVycl92bWE6CiAJaTkxNV92bWFfdW5waW5fYW5kX3JlbGVhc2UoJmNsaWVudC0+
dm1hLCAwKTsKIGVycl9pZDoKQEAgLTg2MSw3ICs1OTUsNiBAQCBndWNfY2xpZW50X2FsbG9jKHN0
cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMyIHByaW9yaXR5KQogCiBzdGF0aWMgdm9pZCBndWNfY2xp
ZW50X2ZyZWUoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKIHsKLQl1bnJlc2VydmVf
ZG9vcmJlbGwoY2xpZW50KTsKIAlpOTE1X3ZtYV91bnBpbl9hbmRfcmVsZWFzZSgmY2xpZW50LT52
bWEsIEk5MTVfVk1BX1JFTEVBU0VfTUFQKTsKIAlpZGFfc2ltcGxlX3JlbW92ZSgmY2xpZW50LT5n
dWMtPnN0YWdlX2lkcywgY2xpZW50LT5zdGFnZV9pZCk7CiAJa2ZyZWUoY2xpZW50KTsKQEAgLTg5
Miw0NCArNjI1LDIyIEBAIHN0YXRpYyB2b2lkIGd1Y19jbGllbnRzX2Rlc3Ryb3koc3RydWN0IGlu
dGVsX2d1YyAqZ3VjKQogCQlndWNfY2xpZW50X2ZyZWUoY2xpZW50KTsKIH0KIAotc3RhdGljIGlu
dCBfX2d1Y19jbGllbnRfZW5hYmxlKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpjbGllbnQpCitz
dGF0aWMgdm9pZCBfX2d1Y19jbGllbnRfZW5hYmxlKHN0cnVjdCBpbnRlbF9ndWNfY2xpZW50ICpj
bGllbnQpCiB7Ci0JaW50IHJldDsKLQogCWd1Y19wcm9jX2Rlc2NfaW5pdChjbGllbnQpOwogCWd1
Y19zdGFnZV9kZXNjX2luaXQoY2xpZW50KTsKLQotCXJldCA9IGNyZWF0ZV9kb29yYmVsbChjbGll
bnQpOwotCWlmIChyZXQpCi0JCWdvdG8gZmFpbDsKLQotCXJldHVybiAwOwotCi1mYWlsOgotCWd1
Y19zdGFnZV9kZXNjX2ZpbmkoY2xpZW50KTsKLQlndWNfcHJvY19kZXNjX2ZpbmkoY2xpZW50KTsK
LQlyZXR1cm4gcmV0OwogfQogCiBzdGF0aWMgdm9pZCBfX2d1Y19jbGllbnRfZGlzYWJsZShzdHJ1
Y3QgaW50ZWxfZ3VjX2NsaWVudCAqY2xpZW50KQogewotCS8qCi0JICogQnkgdGhlIHRpbWUgd2Un
cmUgaGVyZSwgR3VDIG1heSBoYXZlIGFscmVhZHkgYmVlbiByZXNldC4gaWYgdGhhdCBpcwotCSAq
IHRoZSBjYXNlLCBpbnN0ZWFkIG9mIHRyeWluZyAoaW4gdmFpbikgdG8gY29tbXVuaWNhdGUgd2l0
aCBpdCwgbGV0J3MKLQkgKiBqdXN0IGNsZWFudXAgdGhlIGRvb3JiZWxsIEhXIGFuZCBvdXIgaW50
ZXJuYWwgc3RhdGUuCi0JICovCi0JaWYgKGludGVsX2d1Y19pc19ydW5uaW5nKGNsaWVudC0+Z3Vj
KSkKLQkJZGVzdHJveV9kb29yYmVsbChjbGllbnQpOwotCWVsc2UKLQkJX19maW5pX2Rvb3JiZWxs
KGNsaWVudCk7Ci0KKwkvKiBOb3RlOiBCeSB0aGUgdGltZSB3ZSdyZSBoZXJlLCBHdUMgbWF5IGhh
dmUgYWxyZWFkeSBiZWVuIHJlc2V0ICovCiAJZ3VjX3N0YWdlX2Rlc2NfZmluaShjbGllbnQpOwog
CWd1Y19wcm9jX2Rlc2NfZmluaShjbGllbnQpOwogfQogCi1zdGF0aWMgaW50IGd1Y19jbGllbnRz
X2VuYWJsZShzdHJ1Y3QgaW50ZWxfZ3VjICpndWMpCitzdGF0aWMgdm9pZCBndWNfY2xpZW50c19l
bmFibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewotCXJldHVybiBfX2d1Y19jbGllbnRfZW5h
YmxlKGd1Yy0+ZXhlY2J1Zl9jbGllbnQpOworCV9fZ3VjX2NsaWVudF9lbmFibGUoZ3VjLT5leGVj
YnVmX2NsaWVudCk7CiB9CiAKIHN0YXRpYyB2b2lkIGd1Y19jbGllbnRzX2Rpc2FibGUoc3RydWN0
IGludGVsX2d1YyAqZ3VjKQpAQCAtOTU4LDcgKzY2OSw2IEBAIGludCBpbnRlbF9ndWNfc3VibWlz
c2lvbl9pbml0KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAkgKi8KIAlHRU1fQlVHX09OKCFndWMt
PnN0YWdlX2Rlc2NfcG9vbCk7CiAKLQlXQVJOX09OKCFndWNfdmVyaWZ5X2Rvb3JiZWxscyhndWMp
KTsKIAlyZXQgPSBndWNfY2xpZW50c19jcmVhdGUoZ3VjKTsKIAlpZiAocmV0KQogCQlnb3RvIGVy
cl9wb29sOwpAQCAtOTczLDcgKzY4Myw2IEBAIGludCBpbnRlbF9ndWNfc3VibWlzc2lvbl9pbml0
KHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIHZvaWQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZmluaShz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMpCiB7CiAJZ3VjX2NsaWVudHNfZGVzdHJveShndWMpOwotCVdB
Uk5fT04oIWd1Y192ZXJpZnlfZG9vcmJlbGxzKGd1YykpOwogCiAJaWYgKGd1Yy0+c3RhZ2VfZGVz
Y19wb29sKQogCQlndWNfc3RhZ2VfZGVzY19wb29sX2Rlc3Ryb3koZ3VjKTsKQEAgLTEwNDMsMTYg
Kzc1MiwxMSBAQCBzdGF0aWMgdm9pZCBndWNfc2V0X2RlZmF1bHRfc3VibWlzc2lvbihzdHJ1Y3Qg
aW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJR0VNX0JVR19PTihlbmdpbmUtPmlycV9lbmFibGUg
fHwgZW5naW5lLT5pcnFfZGlzYWJsZSk7CiB9CiAKLWludCBpbnRlbF9ndWNfc3VibWlzc2lvbl9l
bmFibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQordm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9l
bmFibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewogCXN0cnVjdCBpbnRlbF9ndCAqZ3QgPSBn
dWNfdG9fZ3QoZ3VjKTsKIAlzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmU7CiAJZW51bSBp
bnRlbF9lbmdpbmVfaWQgaWQ7Ci0JaW50IGVycjsKLQotCWVyciA9IGk5MTVfaW5qZWN0X3Byb2Jl
X2Vycm9yKGd0LT5pOTE1LCAtRU5YSU8pOwotCWlmIChlcnIpCi0JCXJldHVybiBlcnI7CiAKIAkv
KgogCSAqIFdlJ3JlIHVzaW5nIEd1QyB3b3JrIGl0ZW1zIGZvciBzdWJtaXR0aW5nIHdvcmsgdGhy
b3VnaCBHdUMuIFNpbmNlCkBAIC0xMDY5LDkgKzc3Myw3IEBAIGludCBpbnRlbF9ndWNfc3VibWlz
c2lvbl9lbmFibGUoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogCiAJR0VNX0JVR19PTighZ3VjLT5l
eGVjYnVmX2NsaWVudCk7CiAKLQllcnIgPSBndWNfY2xpZW50c19lbmFibGUoZ3VjKTsKLQlpZiAo
ZXJyKQotCQlyZXR1cm4gZXJyOworCWd1Y19jbGllbnRzX2VuYWJsZShndWMpOwogCiAJLyogVGFr
ZSBvdmVyIGZyb20gbWFudWFsIGNvbnRyb2wgb2YgRUxTUCAoZXhlY2xpc3RzKSAqLwogCWd1Y19p
bnRlcnJ1cHRzX2NhcHR1cmUoZ3QpOwpAQCAtMTA4MCw4ICs3ODIsNiBAQCBpbnQgaW50ZWxfZ3Vj
X3N1Ym1pc3Npb25fZW5hYmxlKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKIAkJZW5naW5lLT5zZXRf
ZGVmYXVsdF9zdWJtaXNzaW9uID0gZ3VjX3NldF9kZWZhdWx0X3N1Ym1pc3Npb247CiAJCWVuZ2lu
ZS0+c2V0X2RlZmF1bHRfc3VibWlzc2lvbihlbmdpbmUpOwogCX0KLQotCXJldHVybiAwOwogfQog
CiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2Rpc2FibGUoc3RydWN0IGludGVsX2d1YyAqZ3Vj
KQpAQCAtMTEwOSw3ICs4MDksMyBAQCB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2luaXRfZWFy
bHkoc3RydWN0IGludGVsX2d1YyAqZ3VjKQogewogCWd1Yy0+c3VibWlzc2lvbl9zdXBwb3J0ZWQg
PSBfX2d1Y19zdWJtaXNzaW9uX3N1cHBvcnQoZ3VjKTsKIH0KLQotI2lmIElTX0VOQUJMRUQoQ09O
RklHX0RSTV9JOTE1X1NFTEZURVNUKQotI2luY2x1ZGUgInNlbGZ0ZXN0X2d1Yy5jIgotI2VuZGlm
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlz
c2lvbi5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24u
aAppbmRleCA1NGQ3MTY4MjgzNTIuLmUyZGViNGU2ZjQyYSAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ3QvdWMvaW50ZWxfZ3VjX3N1Ym1pc3Npb24uaAorKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC91Yy9pbnRlbF9ndWNfc3VibWlzc2lvbi5oCkBAIC00NCwyMSArNDQsMTQg
QEAgc3RydWN0IGludGVsX2d1Y19jbGllbnQgewogCS8qIGJpdG1hcCBvZiAoaG9zdCkgZW5naW5l
IGlkcyAqLwogCXUzMiBwcmlvcml0eTsKIAl1MzIgc3RhZ2VfaWQ7Ci0JdTMyIHByb2NfZGVzY19v
ZmZzZXQ7Ci0KLQl1MTYgZG9vcmJlbGxfaWQ7Ci0JdW5zaWduZWQgbG9uZyBkb29yYmVsbF9vZmZz
ZXQ7CiAKIAkvKiBQcm90ZWN0cyBHdUMgY2xpZW50J3MgV1EgYWNjZXNzICovCiAJc3BpbmxvY2tf
dCB3cV9sb2NrOwotCi0JLyogRm9yIHRlc3RpbmcgcHVycG9zZXMsIHVzZSBub3AgV1EgaXRlbXMg
aW5zdGVhZCBvZiByZWFsIG9uZXMgKi8KLQlJOTE1X1NFTEZURVNUX0RFQ0xBUkUoYm9vbCB1c2Vf
bm9wX3dxaSk7CiB9OwogCiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2luaXRfZWFybHkoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKTsKIGludCBpbnRlbF9ndWNfc3VibWlzc2lvbl9pbml0KHN0cnVj
dCBpbnRlbF9ndWMgKmd1Yyk7Ci1pbnQgaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZW5hYmxlKHN0cnVj
dCBpbnRlbF9ndWMgKmd1Yyk7Cit2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2VuYWJsZShzdHJ1
Y3QgaW50ZWxfZ3VjICpndWMpOwogdm9pZCBpbnRlbF9ndWNfc3VibWlzc2lvbl9kaXNhYmxlKHN0
cnVjdCBpbnRlbF9ndWMgKmd1Yyk7CiB2b2lkIGludGVsX2d1Y19zdWJtaXNzaW9uX2Zpbmkoc3Ry
dWN0IGludGVsX2d1YyAqZ3VjKTsKIGludCBpbnRlbF9ndWNfcHJlZW1wdF93b3JrX2NyZWF0ZShz
dHJ1Y3QgaW50ZWxfZ3VjICpndWMpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvdWMvaW50ZWxfdWMuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmMK
aW5kZXggNjI5YjE5Mzc3YTI5Li5jNjUxOTA2NmEwZjYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L3VjL2ludGVsX3VjLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3Qv
dWMvaW50ZWxfdWMuYwpAQCAtNDg2LDExICs0ODYsOCBAQCBpbnQgaW50ZWxfdWNfaW5pdF9odyhz
dHJ1Y3QgaW50ZWxfdWMgKnVjKQogCWlmIChyZXQpCiAJCWdvdG8gZXJyX2NvbW11bmljYXRpb247
CiAKLQlpZiAoaW50ZWxfdWNfc3VwcG9ydHNfZ3VjX3N1Ym1pc3Npb24odWMpKSB7Ci0JCXJldCA9
IGludGVsX2d1Y19zdWJtaXNzaW9uX2VuYWJsZShndWMpOwotCQlpZiAocmV0KQotCQkJZ290byBl
cnJfY29tbXVuaWNhdGlvbjsKLQl9CisJaWYgKGludGVsX3VjX3N1cHBvcnRzX2d1Y19zdWJtaXNz
aW9uKHVjKSkKKwkJaW50ZWxfZ3VjX3N1Ym1pc3Npb25fZW5hYmxlKGd1Yyk7CiAKIAlkZXZfaW5m
byhpOTE1LT5kcm0uZGV2LCAiJXMgZmlybXdhcmUgJXMgdmVyc2lvbiAldS4ldSAlczolc1xuIiwK
IAkJIGludGVsX3VjX2Z3X3R5cGVfcmVwcihJTlRFTF9VQ19GV19UWVBFX0dVQyksIGd1Yy0+Zncu
cGF0aCwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL3NlbGZ0ZXN0X2d1
Yy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvdWMvc2VsZnRlc3RfZ3VjLmMKZGVsZXRlZCBm
aWxlIG1vZGUgMTAwNjQ0CmluZGV4IGQ4YTgwMzg4YmQzMS4uMDAwMDAwMDAwMDAwCi0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2d0L3VjL3NlbGZ0ZXN0X2d1Yy5jCisrKyAvZGV2L251bGwKQEAg
LTEsMjk5ICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKLS8qCi0gKiBD
b3B5cmlnaHQgwqkgMjAxNyBJbnRlbCBDb3Jwb3JhdGlvbgotICovCi0KLSNpbmNsdWRlICJpOTE1
X3NlbGZ0ZXN0LmgiCi0jaW5jbHVkZSAiZ2VtL2k5MTVfZ2VtX3BtLmgiCi0KLS8qIG1heCBkb29y
YmVsbCBudW1iZXIgKyBuZWdhdGl2ZSB0ZXN0IGZvciBlYWNoIGNsaWVudCB0eXBlICovCi0jZGVm
aW5lIEFUVEVNUFRTIChHVUNfTlVNX0RPT1JCRUxMUyArIEdVQ19DTElFTlRfUFJJT1JJVFlfTlVN
KQotCi1zdGF0aWMgc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudHNbQVRURU1QVFNdOwot
Ci1zdGF0aWMgYm9vbCBhdmFpbGFibGVfZGJzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YywgdTMyIHBy
aW9yaXR5KQotewotCXVuc2lnbmVkIGxvbmcgb2Zmc2V0OwotCXVuc2lnbmVkIGxvbmcgZW5kOwot
CXUxNiBpZDsKLQotCS8qIGZpcnN0IGhhbGYgaXMgdXNlZCBmb3Igbm9ybWFsIHByaW9yaXR5LCBz
ZWNvbmQgaGFsZiBmb3IgaGlnaCAqLwotCW9mZnNldCA9IDA7Ci0JZW5kID0gR1VDX05VTV9ET09S
QkVMTFMgLyAyOwotCWlmIChwcmlvcml0eSA8PSBHVUNfQ0xJRU5UX1BSSU9SSVRZX0hJR0gpIHsK
LQkJb2Zmc2V0ID0gZW5kOwotCQllbmQgKz0gb2Zmc2V0OwotCX0KLQotCWlkID0gZmluZF9uZXh0
X3plcm9fYml0KGd1Yy0+ZG9vcmJlbGxfYml0bWFwLCBlbmQsIG9mZnNldCk7Ci0JaWYgKGlkIDwg
ZW5kKQotCQlyZXR1cm4gdHJ1ZTsKLQotCXJldHVybiBmYWxzZTsKLX0KLQotc3RhdGljIGludCBj
aGVja19hbGxfZG9vcmJlbGxzKHN0cnVjdCBpbnRlbF9ndWMgKmd1YykKLXsKLQl1MTYgZGJfaWQ7
Ci0KLQlwcl9pbmZvX29uY2UoIk1heCBudW1iZXIgb2YgZG9vcmJlbGxzOiAlZCIsIEdVQ19OVU1f
RE9PUkJFTExTKTsKLQlmb3IgKGRiX2lkID0gMDsgZGJfaWQgPCBHVUNfTlVNX0RPT1JCRUxMUzsg
KytkYl9pZCkgewotCQlpZiAoIWRvb3JiZWxsX29rKGd1YywgZGJfaWQpKSB7Ci0JCQlwcl9lcnIo
ImRvb3JiZWxsICVkLCBub3Qgb2tcbiIsIGRiX2lkKTsKLQkJCXJldHVybiAtRUlPOwotCQl9Ci0J
fQotCi0JcmV0dXJuIDA7Ci19Ci0KLXN0YXRpYyBpbnQgcmluZ19kb29yYmVsbF9ub3Aoc3RydWN0
IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCkKLXsKLQlzdHJ1Y3QgZ3VjX3Byb2Nlc3NfZGVzYyAq
ZGVzYyA9IF9fZ2V0X3Byb2Nlc3NfZGVzYyhjbGllbnQpOwotCWludCBlcnI7Ci0KLQljbGllbnQt
PnVzZV9ub3Bfd3FpID0gdHJ1ZTsKLQotCXNwaW5fbG9ja19pcnEoJmNsaWVudC0+d3FfbG9jayk7
Ci0KLQlndWNfd3FfaXRlbV9hcHBlbmQoY2xpZW50LCAwLCAwLCAwLCAwKTsKLQlndWNfcmluZ19k
b29yYmVsbChjbGllbnQpOwotCi0Jc3Bpbl91bmxvY2tfaXJxKCZjbGllbnQtPndxX2xvY2spOwot
Ci0JY2xpZW50LT51c2Vfbm9wX3dxaSA9IGZhbHNlOwotCi0JLyogaWYgdGhlcmUgYXJlIG5vIGlz
c3VlcyBHdUMgd2lsbCB1cGRhdGUgdGhlIFdRIGhlYWQgYW5kIGtlZXAgdGhlCi0JICogV1EgaW4g
YWN0aXZlIHN0YXR1cwotCSAqLwotCWVyciA9IHdhaXRfZm9yKFJFQURfT05DRShkZXNjLT5oZWFk
KSA9PSBSRUFEX09OQ0UoZGVzYy0+dGFpbCksIDEwKTsKLQlpZiAoZXJyKSB7Ci0JCXByX2Vycigi
ZG9vcmJlbGwgJXUgcmluZyBmYWlsZWQhXG4iLCBjbGllbnQtPmRvb3JiZWxsX2lkKTsKLQkJcmV0
dXJuIC1FSU87Ci0JfQotCi0JaWYgKGRlc2MtPndxX3N0YXR1cyAhPSBXUV9TVEFUVVNfQUNUSVZF
KSB7Ci0JCXByX2VycigiZG9vcmJlbGwgJXUgcmluZyBwdXQgV1EgaW4gYmFkIHN0YXRlICgldSkh
XG4iLAotCQkgICAgICAgY2xpZW50LT5kb29yYmVsbF9pZCwgZGVzYy0+d3Ffc3RhdHVzKTsKLQkJ
cmV0dXJuIC1FSU87Ci0JfQotCi0JcmV0dXJuIDA7Ci19Ci0KLS8qCi0gKiBCYXNpYyBjbGllbnQg
c2FuaXR5IGNoZWNrLCBoYW5keSB0byB2YWxpZGF0ZSBjcmVhdGVfY2xpZW50cy4KLSAqLwotc3Rh
dGljIGludCB2YWxpZGF0ZV9jbGllbnQoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNsaWVudCwg
aW50IGNsaWVudF9wcmlvcml0eSkKLXsKLQlpZiAoY2xpZW50LT5wcmlvcml0eSAhPSBjbGllbnRf
cHJpb3JpdHkgfHwKLQkgICAgY2xpZW50LT5kb29yYmVsbF9pZCA9PSBHVUNfRE9PUkJFTExfSU5W
QUxJRCkKLQkJcmV0dXJuIC1FSU5WQUw7Ci0JZWxzZQotCQlyZXR1cm4gMDsKLX0KLQotc3RhdGlj
IGJvb2wgY2xpZW50X2Rvb3JiZWxsX2luX3N5bmMoc3RydWN0IGludGVsX2d1Y19jbGllbnQgKmNs
aWVudCkKLXsKLQlyZXR1cm4gIWNsaWVudCB8fCBkb29yYmVsbF9vayhjbGllbnQtPmd1YywgY2xp
ZW50LT5kb29yYmVsbF9pZCk7Ci19Ci0KLS8qCi0gKiBDaGVjayB0aGF0IHdlJ3JlIGFibGUgdG8g
c3luY2hyb25pemUgZ3VjX2NsaWVudHMgd2l0aCB0aGVpciBkb29yYmVsbHMKLSAqCi0gKiBXZSdy
ZSBjcmVhdGluZyBjbGllbnRzIGFuZCByZXNlcnZpbmcgZG9vcmJlbGxzIG9uY2UsIGF0IG1vZHVs
ZSBsb2FkLiBEdXJpbmcKLSAqIG1vZHVsZSBsaWZldGltZSwgR3VDLCBkb29yYmVsbCBIVywgYW5k
IGk5MTUgc3RhdGUgbWF5IGdvIG91dCBvZiBzeW5jIGR1ZSB0bwotICogR3VDIGJlaW5nIHJlc2V0
LiBJbiBvdGhlciB3b3JkcyAtIEd1QyBjbGllbnRzIGFyZSBzdGlsbCBhcm91bmQsIGJ1dCB0aGUK
LSAqIHN0YXR1cyBvZiB0aGVpciBkb29yYmVsbHMgbWF5IGJlIGluY29ycmVjdC4gVGhpcyBpcyB0
aGUgcmVhc29uIGJlaGluZAotICogdmFsaWRhdGluZyB0aGF0IHRoZSBkb29yYmVsbHMgc3RhdHVz
IGV4cGVjdGVkIGJ5IHRoZSBkcml2ZXIgbWF0Y2hlcyB3aGF0IHRoZQotICogR3VDL0hXIGhhdmUu
Ci0gKi8KLXN0YXRpYyBpbnQgaWd0X2d1Y19jbGllbnRzKHZvaWQgKmFyZykKLXsKLQlzdHJ1Y3Qg
aW50ZWxfZ3QgKmd0ID0gYXJnOwotCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9ICZndC0+dWMuZ3Vj
OwotCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwotCWludCBlcnIgPSAwOwotCi0JR0VNX0JVR19P
TighSEFTX0dUX1VDKGd0LT5pOTE1KSk7Ci0Jd2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0
KGd0LT51bmNvcmUtPnJwbSk7Ci0KLQllcnIgPSBjaGVja19hbGxfZG9vcmJlbGxzKGd1Yyk7Ci0J
aWYgKGVycikKLQkJZ290byB1bmxvY2s7Ci0KLQkvKgotCSAqIEdldCByaWQgb2YgY2xpZW50cyBj
cmVhdGVkIGR1cmluZyBkcml2ZXIgbG9hZCBiZWNhdXNlIHRoZSB0ZXN0IHdpbGwKLQkgKiByZWNy
ZWF0ZSB0aGVtLgotCSAqLwotCWd1Y19jbGllbnRzX2Rpc2FibGUoZ3VjKTsKLQlndWNfY2xpZW50
c19kZXN0cm95KGd1Yyk7Ci0JaWYgKGd1Yy0+ZXhlY2J1Zl9jbGllbnQpIHsKLQkJcHJfZXJyKCJn
dWNfY2xpZW50c19kZXN0cm95IGxpZWQhXG4iKTsKLQkJZXJyID0gLUVJTlZBTDsKLQkJZ290byB1
bmxvY2s7Ci0JfQotCi0JZXJyID0gZ3VjX2NsaWVudHNfY3JlYXRlKGd1Yyk7Ci0JaWYgKGVycikg
ewotCQlwcl9lcnIoIkZhaWxlZCB0byBjcmVhdGUgY2xpZW50c1xuIik7Ci0JCWdvdG8gdW5sb2Nr
OwotCX0KLQlHRU1fQlVHX09OKCFndWMtPmV4ZWNidWZfY2xpZW50KTsKLQotCWVyciA9IHZhbGlk
YXRlX2NsaWVudChndWMtPmV4ZWNidWZfY2xpZW50LAotCQkJICAgICAgR1VDX0NMSUVOVF9QUklP
UklUWV9LTURfTk9STUFMKTsKLQlpZiAoZXJyKSB7Ci0JCXByX2VycigiZXhlY2J1ZyBjbGllbnQg
dmFsaWRhdGlvbiBmYWlsZWRcbiIpOwotCQlnb3RvIG91dDsKLQl9Ci0KLQkvKiB0aGUgY2xpZW50
IHNob3VsZCBub3cgaGF2ZSByZXNlcnZlZCBhIGRvb3JiZWxsICovCi0JaWYgKCFoYXNfZG9vcmJl
bGwoZ3VjLT5leGVjYnVmX2NsaWVudCkpIHsKLQkJcHJfZXJyKCJndWNfY2xpZW50c19jcmVhdGUg
ZGlkbid0IHJlc2VydmUgZG9vcmJlbGxzXG4iKTsKLQkJZXJyID0gLUVJTlZBTDsKLQkJZ290byBv
dXQ7Ci0JfQotCi0JLyogTm93IGVuYWJsZSB0aGUgY2xpZW50cyAqLwotCWd1Y19jbGllbnRzX2Vu
YWJsZShndWMpOwotCi0JLyogZWFjaCBjbGllbnQgc2hvdWxkIG5vdyBoYXZlIHJlY2VpdmVkIGEg
ZG9vcmJlbGwgKi8KLQlpZiAoIWNsaWVudF9kb29yYmVsbF9pbl9zeW5jKGd1Yy0+ZXhlY2J1Zl9j
bGllbnQpKSB7Ci0JCXByX2VycigiZmFpbGVkIHRvIGluaXRpYWxpemUgdGhlIGRvb3JiZWxsc1xu
Iik7Ci0JCWVyciA9IC1FSU5WQUw7Ci0JCWdvdG8gb3V0OwotCX0KLQotCS8qCi0JICogQmFzaWMg
dGVzdCAtIGFuIGF0dGVtcHQgdG8gcmVhbGxvY2F0ZSBhIHZhbGlkIGRvb3JiZWxsIHRvIHRoZQot
CSAqIGNsaWVudCBpdCBpcyBjdXJyZW50bHkgYXNzaWduZWQgc2hvdWxkIG5vdCBjYXVzZSBhIGZh
aWx1cmUuCi0JICovCi0JZXJyID0gY3JlYXRlX2Rvb3JiZWxsKGd1Yy0+ZXhlY2J1Zl9jbGllbnQp
OwotCi1vdXQ6Ci0JLyoKLQkgKiBMZWF2ZSBjbGVhbiBzdGF0ZSBmb3Igb3RoZXIgdGVzdCwgcGx1
cyB0aGUgZHJpdmVyIGFsd2F5cyBkZXN0cm95IHRoZQotCSAqIGNsaWVudHMgZHVyaW5nIHVubG9h
ZC4KLQkgKi8KLQlndWNfY2xpZW50c19kaXNhYmxlKGd1Yyk7Ci0JZ3VjX2NsaWVudHNfZGVzdHJv
eShndWMpOwotCWd1Y19jbGllbnRzX2NyZWF0ZShndWMpOwotCWd1Y19jbGllbnRzX2VuYWJsZShn
dWMpOwotdW5sb2NrOgotCWludGVsX3J1bnRpbWVfcG1fcHV0KGd0LT51bmNvcmUtPnJwbSwgd2Fr
ZXJlZik7Ci0JcmV0dXJuIGVycjsKLX0KLQotLyoKLSAqIENyZWF0ZSBhcyBtYW55IGNsaWVudHMg
YXMgbnVtYmVyIG9mIGRvb3JiZWxscy4gTm90ZSB0aGF0IHRoZXJlJ3MgYWxyZWFkeQotICogY2xp
ZW50KHMpL2Rvb3JiZWxsKHMpIGNyZWF0ZWQgZHVyaW5nIGRyaXZlciBsb2FkLCBidXQgdGhpcyB0
ZXN0IGNyZWF0ZXMKLSAqIGl0cyBvd24gYW5kIGRvIG5vdCBpbnRlcmFjdCB3aXRoIHRoZSBleGlz
dGluZyBvbmVzLgotICovCi1zdGF0aWMgaW50IGlndF9ndWNfZG9vcmJlbGxzKHZvaWQgKmFyZykK
LXsKLQlzdHJ1Y3QgaW50ZWxfZ3QgKmd0ID0gYXJnOwotCXN0cnVjdCBpbnRlbF9ndWMgKmd1YyA9
ICZndC0+dWMuZ3VjOwotCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwotCWludCBpLCBlcnIgPSAw
OwotCXUxNiBkYl9pZDsKLQotCUdFTV9CVUdfT04oIUhBU19HVF9VQyhndC0+aTkxNSkpOwotCXdh
a2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldChndC0+dW5jb3JlLT5ycG0pOwotCi0JZXJyID0g
Y2hlY2tfYWxsX2Rvb3JiZWxscyhndWMpOwotCWlmIChlcnIpCi0JCWdvdG8gdW5sb2NrOwotCi0J
Zm9yIChpID0gMDsgaSA8IEFUVEVNUFRTOyBpKyspIHsKLQkJY2xpZW50c1tpXSA9IGd1Y19jbGll
bnRfYWxsb2MoZ3VjLCBpICUgR1VDX0NMSUVOVF9QUklPUklUWV9OVU0pOwotCi0JCWlmICghY2xp
ZW50c1tpXSkgewotCQkJcHJfZXJyKCJbJWRdIE5vIGd1YyBjbGllbnRcbiIsIGkpOwotCQkJZXJy
ID0gLUVJTlZBTDsKLQkJCWdvdG8gb3V0OwotCQl9Ci0KLQkJaWYgKElTX0VSUihjbGllbnRzW2ld
KSkgewotCQkJaWYgKFBUUl9FUlIoY2xpZW50c1tpXSkgIT0gLUVOT1NQQykgewotCQkJCXByX2Vy
cigiWyVkXSB1bmV4cGVjdGVkIGVycm9yXG4iLCBpKTsKLQkJCQllcnIgPSBQVFJfRVJSKGNsaWVu
dHNbaV0pOwotCQkJCWdvdG8gb3V0OwotCQkJfQotCi0JCQlpZiAoYXZhaWxhYmxlX2RicyhndWMs
IGkgJSBHVUNfQ0xJRU5UX1BSSU9SSVRZX05VTSkpIHsKLQkJCQlwcl9lcnIoIlslZF0gbm9uLWRi
IHJlbGF0ZWQgYWxsb2MgZmFpbFxuIiwgaSk7Ci0JCQkJZXJyID0gLUVJTlZBTDsKLQkJCQlnb3Rv
IG91dDsKLQkJCX0KLQotCQkJLyogZXhwZWN0ZWQsIHJhbiBvdXQgb2YgZGJzIGZvciB0aGlzIGNs
aWVudCB0eXBlICovCi0JCQljb250aW51ZTsKLQkJfQotCi0JCS8qCi0JCSAqIFRoZSBjaGVjayBi
ZWxvdyBpcyBvbmx5IHZhbGlkIGJlY2F1c2Ugd2Uga2VlcCBhIGRvb3JiZWxsCi0JCSAqIGFzc2ln
bmVkIGR1cmluZyB0aGUgd2hvbGUgbGlmZSBvZiB0aGUgY2xpZW50LgotCQkgKi8KLQkJaWYgKGNs
aWVudHNbaV0tPnN0YWdlX2lkID49IEdVQ19OVU1fRE9PUkJFTExTKSB7Ci0JCQlwcl9lcnIoIlsl
ZF0gbW9yZSBjbGllbnRzIHRoYW4gZG9vcmJlbGxzICglZCA+PSAlZClcbiIsCi0JCQkgICAgICAg
aSwgY2xpZW50c1tpXS0+c3RhZ2VfaWQsIEdVQ19OVU1fRE9PUkJFTExTKTsKLQkJCWVyciA9IC1F
SU5WQUw7Ci0JCQlnb3RvIG91dDsKLQkJfQotCi0JCWVyciA9IHZhbGlkYXRlX2NsaWVudChjbGll
bnRzW2ldLCBpICUgR1VDX0NMSUVOVF9QUklPUklUWV9OVU0pOwotCQlpZiAoZXJyKSB7Ci0JCQlw
cl9lcnIoIlslZF0gY2xpZW50X2FsbG9jIHNhbml0eSBjaGVjayBmYWlsZWQhXG4iLCBpKTsKLQkJ
CWVyciA9IC1FSU5WQUw7Ci0JCQlnb3RvIG91dDsKLQkJfQotCi0JCWRiX2lkID0gY2xpZW50c1tp
XS0+ZG9vcmJlbGxfaWQ7Ci0KLQkJZXJyID0gX19ndWNfY2xpZW50X2VuYWJsZShjbGllbnRzW2ld
KTsKLQkJaWYgKGVycikgewotCQkJcHJfZXJyKCJbJWRdIEZhaWxlZCB0byBjcmVhdGUgYSBkb29y
YmVsbFxuIiwgaSk7Ci0JCQlnb3RvIG91dDsKLQkJfQotCi0JCS8qIGRvb3JiZWxsIGlkIHNob3Vs
ZG4ndCBjaGFuZ2UsIHdlIGFyZSBob2xkaW5nIHRoZSBtdXRleCAqLwotCQlpZiAoZGJfaWQgIT0g
Y2xpZW50c1tpXS0+ZG9vcmJlbGxfaWQpIHsKLQkJCXByX2VycigiWyVkXSBkb29yYmVsbCBpZCBj
aGFuZ2VkICglZCAhPSAlZClcbiIsCi0JCQkgICAgICAgaSwgZGJfaWQsIGNsaWVudHNbaV0tPmRv
b3JiZWxsX2lkKTsKLQkJCWVyciA9IC1FSU5WQUw7Ci0JCQlnb3RvIG91dDsKLQkJfQotCi0JCWVy
ciA9IGNoZWNrX2FsbF9kb29yYmVsbHMoZ3VjKTsKLQkJaWYgKGVycikKLQkJCWdvdG8gb3V0Owot
Ci0JCWVyciA9IHJpbmdfZG9vcmJlbGxfbm9wKGNsaWVudHNbaV0pOwotCQlpZiAoZXJyKQotCQkJ
Z290byBvdXQ7Ci0JfQotCi1vdXQ6Ci0JZm9yIChpID0gMDsgaSA8IEFUVEVNUFRTOyBpKyspCi0J
CWlmICghSVNfRVJSX09SX05VTEwoY2xpZW50c1tpXSkpIHsKLQkJCV9fZ3VjX2NsaWVudF9kaXNh
YmxlKGNsaWVudHNbaV0pOwotCQkJZ3VjX2NsaWVudF9mcmVlKGNsaWVudHNbaV0pOwotCQl9Ci11
bmxvY2s6Ci0JaW50ZWxfcnVudGltZV9wbV9wdXQoZ3QtPnVuY29yZS0+cnBtLCB3YWtlcmVmKTsK
LQlyZXR1cm4gZXJyOwotfQotCi1pbnQgaW50ZWxfZ3VjX2xpdmVfc2VsZnRlc3Qoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCi17Ci0Jc3RhdGljIGNvbnN0IHN0cnVjdCBpOTE1X3N1YnRl
c3QgdGVzdHNbXSA9IHsKLQkJU1VCVEVTVChpZ3RfZ3VjX2NsaWVudHMpLAotCQlTVUJURVNUKGln
dF9ndWNfZG9vcmJlbGxzKSwKLQl9OwotCi0JaWYgKCFVU0VTX0dVQ19TVUJNSVNTSU9OKGk5MTUp
KQotCQlyZXR1cm4gMDsKLQotCXJldHVybiBpbnRlbF9ndF9saXZlX3N1YnRlc3RzKHRlc3RzLCAm
aTkxNS0+Z3QpOwotfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1
Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYwppbmRleCBlYjgwYTJj
NGI1NWIuLjQ1OTY0N2YxZWUyMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKQEAg
LTE4MTUsMTcgKzE4MTUsMTAgQEAgc3RhdGljIGludCBpOTE1X2d1Y19pbmZvKHN0cnVjdCBzZXFf
ZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAogCUdFTV9CVUdfT04oIWd1Yy0+ZXhlY2J1Zl9jbGllbnQp
OwogCi0Jc2VxX3ByaW50ZihtLCAiXG5Eb29yYmVsbCBtYXA6XG4iKTsKLQlzZXFfcHJpbnRmKG0s
ICJcdCUqcGJcbiIsIEdVQ19OVU1fRE9PUkJFTExTLCBndWMtPmRvb3JiZWxsX2JpdG1hcCk7Ci0J
c2VxX3ByaW50ZihtLCAiRG9vcmJlbGwgbmV4dCBjYWNoZWxpbmU6IDB4JXhcbiIsIGd1Yy0+ZGJf
Y2FjaGVsaW5lKTsKLQogCXNlcV9wcmludGYobSwgIlxuR3VDIGV4ZWNidWYgY2xpZW50IEAgJXA6
XG4iLCBjbGllbnQpOwotCXNlcV9wcmludGYobSwgIlx0UHJpb3JpdHkgJWQsIEd1QyBzdGFnZSBp
bmRleDogJXUsIFBEIG9mZnNldCAweCV4XG4iLAorCXNlcV9wcmludGYobSwgIlx0UHJpb3JpdHkg
JWQsIEd1QyBzdGFnZSBpbmRleDogJXVcbiIsCiAJCSAgIGNsaWVudC0+cHJpb3JpdHksCi0JCSAg
IGNsaWVudC0+c3RhZ2VfaWQsCi0JCSAgIGNsaWVudC0+cHJvY19kZXNjX29mZnNldCk7Ci0Jc2Vx
X3ByaW50ZihtLCAiXHREb29yYmVsbCBpZCAlZCwgb2Zmc2V0OiAweCVseFxuIiwKLQkJICAgY2xp
ZW50LT5kb29yYmVsbF9pZCwgY2xpZW50LT5kb29yYmVsbF9vZmZzZXQpOworCQkgICBjbGllbnQt
PnN0YWdlX2lkKTsKIAkvKiBBZGQgbW9yZSBhcyByZXF1aXJlZCAuLi4gKi8KIAogCXJldHVybiAw
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9z
ZWxmdGVzdHMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2Vs
ZnRlc3RzLmgKaW5kZXggYzdjNTBhYWM4NzA4Li40NzZmYmEyZWQ4YmIgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0cy9pOTE1X2xpdmVfc2VsZnRlc3RzLmgKKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvc2VsZnRlc3RzL2k5MTVfbGl2ZV9zZWxmdGVzdHMuaApAQCAt
MzcsNyArMzcsNiBAQCBzZWxmdGVzdChyZXNldCwgaW50ZWxfcmVzZXRfbGl2ZV9zZWxmdGVzdHMp
CiBzZWxmdGVzdChtZW1vcnlfcmVnaW9uLCBpbnRlbF9tZW1vcnlfcmVnaW9uX2xpdmVfc2VsZnRl
c3RzKQogc2VsZnRlc3QoaGFuZ2NoZWNrLCBpbnRlbF9oYW5nY2hlY2tfbGl2ZV9zZWxmdGVzdHMp
CiBzZWxmdGVzdChleGVjbGlzdHMsIGludGVsX2V4ZWNsaXN0c19saXZlX3NlbGZ0ZXN0cykKLXNl
bGZ0ZXN0KGd1YywgaW50ZWxfZ3VjX2xpdmVfc2VsZnRlc3QpCiBzZWxmdGVzdChwZXJmLCBpOTE1
X3BlcmZfbGl2ZV9zZWxmdGVzdHMpCiAvKiBIZXJlIGJlIGRyYWdvbnM6IGtlZXAgbGFzdCB0byBy
dW4gbGFzdCEgKi8KIHNlbGZ0ZXN0KGxhdGVfZ3RfcG0sIGludGVsX2d0X3BtX2xhdGVfc2VsZnRl
c3RzKQotLSAKMi4yMy4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3Rv
cC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRl
bC1nZng=

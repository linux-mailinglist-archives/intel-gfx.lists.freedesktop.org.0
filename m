Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 228899CF74
	for <lists+intel-gfx@lfdr.de>; Mon, 26 Aug 2019 14:21:13 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 7A49789913;
	Mon, 26 Aug 2019 12:21:11 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 0E0CF89913
 for <intel-gfx@lists.freedesktop.org>; Mon, 26 Aug 2019 12:21:10 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
 by fmsmga102.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 26 Aug 2019 05:21:09 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,433,1559545200"; d="scan'208";a="182426305"
Received: from ndobler-mobl.amr.corp.intel.com (HELO
 skylake-nuc.ger.corp.intel.com) ([10.249.254.248])
 by orsmga003.jf.intel.com with ESMTP; 26 Aug 2019 05:21:07 -0700
From: Abdiel Janulgue <abdiel.janulgue@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Mon, 26 Aug 2019 15:20:58 +0300
Message-Id: <20190826122102.32400-1-abdiel.janulgue@linux.intel.com>
X-Mailer: git-send-email 2.23.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 1/5] drm/i915: Allow i915 to manage the vma
 offset nodes instead of drm core
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SGF2ZSBpOTE1IHJlcGxhY2UgdGhlIGNvcmUgZHJtX2dlbV9tbWFwIGltcGxlbWVudGF0aW9uIHRv
IG92ZXJjb21lIGl0cwpsaW1pdGF0aW9uIGluIGhhdmluZyBvbmx5IGEgc2luZ2xlIG1tYXAgb2Zm
c2V0IG5vZGUgcGVyIGdlbSBvYmplY3QuClRoZSBjaGFuZ2UgYWxsb3dzIHVzIHRvIGhhdmUgbXVs
dGlwbGUgbW1hcCBvZmZzZXRzIHBlciBvYmplY3QuIFRoaXMKZW5hYmxlcyBhIG1tYXBwaW5nIGlu
c3RhbmNlIHRvIHVzZSB1bmlxdWUgZmF1bHQtaGFuZGxlcnMgcGVyIHVzZXIgdm1hLgoKVGhpcyBl
bmFibGVzIHVzIHRvIHN0b3JlIGV4dHJhIGRhdGEgd2l0aGluIHZtYS0+dm1fcHJpdmF0ZV9kYXRh
IGFuZCBhc3NpZ24KdGhlIHBhZ2VmYXVsdCBvcHMgZm9yIGVhY2ggbW1hcCBpbnN0YW5jZSBhbGxv
d2luZyBvYmplY3RzIHRvIHVzZSBtdWx0aXBsZQpmYXVsdCBoYW5kbGVycyBkZXBlbmRpbmcgb24g
aXRzIGJhY2tpbmcgc3RvcmFnZS4KClNpZ25lZC1vZmYtYnk6IEFiZGllbCBKYW51bGd1ZSA8YWJk
aWVsLmphbnVsZ3VlQGxpbnV4LmludGVsLmNvbT4KQ2M6IEpvb25hcyBMYWh0aW5lbiA8am9vbmFz
LmxhaHRpbmVuQGxpbnV4LmludGVsLmNvbT4KQ2M6IENocmlzIFdpbHNvbiA8Y2hyaXNAY2hyaXMt
d2lsc29uLmNvLnVrPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9tbWFu
LmMgICAgICB8IDE5MyArKysrKysrKysrKysrKysrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9vYmplY3QuYyAgICB8ICAxOSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2Vt
L2k5MTVfZ2VtX29iamVjdC5oICAgIHwgICA3ICstCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1
X2dlbV9vYmplY3RfdHlwZXMuaCAgfCAgMTggKysKIC4uLi9kcm0vaTkxNS9nZW0vc2VsZnRlc3Rz
L2k5MTVfZ2VtX21tYW4uYyAgICB8ICAxMiArLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfcmVzZXQuYyAgICAgICAgIHwgIDExICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Ry
di5jICAgICAgICAgICAgICAgfCAgIDkgKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmggICAgICAgICAgICAgICB8ICAgMSArCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3ZtYS5j
ICAgICAgICAgICAgICAgfCAgMjAgKy0KIDkgZmlsZXMgY2hhbmdlZCwgMjU0IGluc2VydGlvbnMo
KyksIDM2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9tbWFuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1h
bi5jCmluZGV4IDU5NTUzOWEwOWUzOC4uZmI3ZTM5ZjExNWQ3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fbW1hbi5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9p
OTE1L2dlbS9pOTE1X2dlbV9tbWFuLmMKQEAgLTIxOCw3ICsyMTgsOCBAQCB2bV9mYXVsdF90IGk5
MTVfZ2VtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAqdm1mKQogewogI2RlZmluZSBNSU5fQ0hVTktf
UEFHRVMgKFNaXzFNID4+IFBBR0VfU0hJRlQpCiAJc3RydWN0IHZtX2FyZWFfc3RydWN0ICphcmVh
ID0gdm1mLT52bWE7Ci0Jc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiA9IHRvX2ludGVs
X2JvKGFyZWEtPnZtX3ByaXZhdGVfZGF0YSk7CisJc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKnBy
aXYgPSBhcmVhLT52bV9wcml2YXRlX2RhdGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaiA9IHByaXYtPm9iajsKIAlzdHJ1Y3QgZHJtX2RldmljZSAqZGV2ID0gb2JqLT5iYXNlLmRl
djsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZGV2KTsKIAlzdHJ1
Y3QgaW50ZWxfcnVudGltZV9wbSAqcnBtID0gJmk5MTUtPnJ1bnRpbWVfcG07CkBAIC0zNzIsMTMg
KzM3MywyMCBAQCB2bV9mYXVsdF90IGk5MTVfZ2VtX2ZhdWx0KHN0cnVjdCB2bV9mYXVsdCAqdm1m
KQogdm9pZCBfX2k5MTVfZ2VtX29iamVjdF9yZWxlYXNlX21tYXAoc3RydWN0IGRybV9pOTE1X2dl
bV9vYmplY3QgKm9iaikKIHsKIAlzdHJ1Y3QgaTkxNV92bWEgKnZtYTsKKwlzdHJ1Y3QgaTkxNV9t
bWFwX29mZnNldCAqbW1vOwogCiAJR0VNX0JVR19PTighb2JqLT51c2VyZmF1bHRfY291bnQpOwog
CiAJb2JqLT51c2VyZmF1bHRfY291bnQgPSAwOwogCWxpc3RfZGVsKCZvYmotPnVzZXJmYXVsdF9s
aW5rKTsKLQlkcm1fdm1hX25vZGVfdW5tYXAoJm9iai0+YmFzZS52bWFfbm9kZSwKLQkJCSAgIG9i
ai0+YmFzZS5kZXYtPmFub25faW5vZGUtPmlfbWFwcGluZyk7CisKKwltdXRleF9sb2NrKCZvYmot
Pm1tb19sb2NrKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KG1tbywgJm9iai0+bW1hcF9vZmZzZXRz
LCBvZmZzZXQpIHsKKwkJaWYgKG1tby0+bW1hcF90eXBlID09IEk5MTVfTU1BUF9UWVBFX0dUVCkK
KwkJCWRybV92bWFfbm9kZV91bm1hcCgmbW1vLT52bWFfbm9kZSwKKwkJCQkJICAgb2JqLT5iYXNl
LmRldi0+YW5vbl9pbm9kZS0+aV9tYXBwaW5nKTsKKwl9CisJbXV0ZXhfdW5sb2NrKCZvYmotPm1t
b19sb2NrKTsKIAogCWZvcl9lYWNoX2dndHRfdm1hKHZtYSwgb2JqKQogCQlpOTE1X3ZtYV91bnNl
dF91c2VyZmF1bHQodm1hKTsKQEAgLTQzMywxNCArNDQxLDMzIEBAIHZvaWQgaTkxNV9nZW1fb2Jq
ZWN0X3JlbGVhc2VfbW1hcChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogCWludGVs
X3J1bnRpbWVfcG1fcHV0KCZpOTE1LT5ydW50aW1lX3BtLCB3YWtlcmVmKTsKIH0KIAotc3RhdGlj
IGludCBjcmVhdGVfbW1hcF9vZmZzZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikK
K3N0YXRpYyB2b2lkIGluaXRfbW1hcF9vZmZzZXQoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3Qg
Km9iaiwKKwkJCSAgICAgc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1tbykKK3sKKwltdXRleF9s
b2NrKCZvYmotPm1tb19sb2NrKTsKKwlrcmVmX2luaXQoJm1tby0+cmVmKTsKKwlsaXN0X2FkZCgm
bW1vLT5vZmZzZXQsICZvYmotPm1tYXBfb2Zmc2V0cyk7CisJbXV0ZXhfdW5sb2NrKCZvYmotPm1t
b19sb2NrKTsKKworCW1tby0+b2JqID0gb2JqOworfQorCitzdGF0aWMgaW50IGNyZWF0ZV9tbWFw
X29mZnNldChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAorCQkJICAgICAgc3RydWN0
IGk5MTVfbW1hcF9vZmZzZXQgKm1tbykKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IG9i
ai0+YmFzZS5kZXY7CiAJaW50IGVycjsKIAotCWVyciA9IGRybV9nZW1fY3JlYXRlX21tYXBfb2Zm
c2V0KCZvYmotPmJhc2UpOwotCWlmIChsaWtlbHkoIWVycikpCisJZHJtX3ZtYV9ub2RlX3Jlc2V0
KCZtbW8tPnZtYV9ub2RlKTsKKwlpZiAobW1vLT5maWxlKQorCQlkcm1fdm1hX25vZGVfYWxsb3co
Jm1tby0+dm1hX25vZGUsIG1tby0+ZmlsZSk7CisJZXJyID0gZHJtX3ZtYV9vZmZzZXRfYWRkKGRl
di0+dm1hX29mZnNldF9tYW5hZ2VyLCAmbW1vLT52bWFfbm9kZSwKKwkJCQkgb2JqLT5iYXNlLnNp
emUgLyBQQUdFX1NJWkUpOworCWlmIChsaWtlbHkoIWVycikpIHsKKwkJaW5pdF9tbWFwX29mZnNl
dChvYmosIG1tbyk7CiAJCXJldHVybiAwOworCX0KIAogCS8qIEF0dGVtcHQgdG8gcmVhcCBzb21l
IG1tYXAgc3BhY2UgZnJvbSBkZWFkIG9iamVjdHMgKi8KIAlkbyB7CkBAIC00NTEsMzIgKzQ3OCw0
OCBAQCBzdGF0aWMgaW50IGNyZWF0ZV9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29i
amVjdCAqb2JqKQogCQkJYnJlYWs7CiAKIAkJaTkxNV9nZW1fZHJhaW5fZnJlZWRfb2JqZWN0cyhp
OTE1KTsKLQkJZXJyID0gZHJtX2dlbV9jcmVhdGVfbW1hcF9vZmZzZXQoJm9iai0+YmFzZSk7Ci0J
CWlmICghZXJyKQorCQllcnIgPSBkcm1fdm1hX29mZnNldF9hZGQoZGV2LT52bWFfb2Zmc2V0X21h
bmFnZXIsICZtbW8tPnZtYV9ub2RlLAorCQkJCQkgb2JqLT5iYXNlLnNpemUgLyBQQUdFX1NJWkUp
OworCQlpZiAoIWVycikgeworCQkJaW5pdF9tbWFwX29mZnNldChvYmosIG1tbyk7CiAJCQlicmVh
azsKKwkJfQogCiAJfSB3aGlsZSAoZmx1c2hfZGVsYXllZF93b3JrKCZpOTE1LT5nZW0ucmV0aXJl
X3dvcmspKTsKIAogCXJldHVybiBlcnI7CiB9CiAKLWludAotaTkxNV9nZW1fbW1hcF9ndHQoc3Ry
dWN0IGRybV9maWxlICpmaWxlLAotCQkgIHN0cnVjdCBkcm1fZGV2aWNlICpkZXYsCi0JCSAgdTMy
IGhhbmRsZSwKLQkJICB1NjQgKm9mZnNldCkKK3N0YXRpYyBpbnQKK19fYXNzaWduX2dlbV9vYmpl
Y3RfbW1hcF9kYXRhKHN0cnVjdCBkcm1fZmlsZSAqZmlsZSwKKwkJCSAgICAgIHUzMiBoYW5kbGUs
CisJCQkgICAgICBlbnVtIGk5MTVfbW1hcF90eXBlIG1tYXBfdHlwZSwKKwkJCSAgICAgIHU2NCAq
b2Zmc2V0KQogewogCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmo7CisJc3RydWN0IGk5
MTVfbW1hcF9vZmZzZXQgKm1tbzsKIAlpbnQgcmV0OwogCiAJb2JqID0gaTkxNV9nZW1fb2JqZWN0
X2xvb2t1cChmaWxlLCBoYW5kbGUpOwogCWlmICghb2JqKQogCQlyZXR1cm4gLUVOT0VOVDsKIAot
CXJldCA9IGNyZWF0ZV9tbWFwX29mZnNldChvYmopOwotCWlmIChyZXQgPT0gMCkKLQkJKm9mZnNl
dCA9IGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmb2JqLT5iYXNlLnZtYV9ub2RlKTsKKwltbW8g
PSBremFsbG9jKHNpemVvZigqbW1vKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFtbW8pIHsKKwkJcmV0
ID0gLUVOT01FTTsKKwkJZ290byBlcnI7CisJfQorCisJbW1vLT5maWxlID0gZmlsZTsKKwlyZXQg
PSBjcmVhdGVfbW1hcF9vZmZzZXQob2JqLCBtbW8pOworCWlmIChyZXQpIHsKKwkJa2ZyZWUobW1v
KTsKKwkJZ290byBlcnI7CisJfQogCisJbW1vLT5tbWFwX3R5cGUgPSBtbWFwX3R5cGU7CisJKm9m
ZnNldCA9IGRybV92bWFfbm9kZV9vZmZzZXRfYWRkcigmbW1vLT52bWFfbm9kZSk7CitlcnI6CiAJ
aTkxNV9nZW1fb2JqZWN0X3B1dChvYmopOwogCXJldHVybiByZXQ7CiB9CkBAIC01MDAsOSArNTQz
LDEyMyBAQCBpbnQKIGk5MTVfZ2VtX21tYXBfZ3R0X2lvY3RsKHN0cnVjdCBkcm1fZGV2aWNlICpk
ZXYsIHZvaWQgKmRhdGEsCiAJCQlzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUpCiB7Ci0Jc3RydWN0IGRy
bV9pOTE1X2dlbV9tbWFwX2d0dCAqYXJncyA9IGRhdGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9t
bWFwX29mZnNldCAqYXJncyA9IGRhdGE7CisKKwlyZXR1cm4gX19hc3NpZ25fZ2VtX29iamVjdF9t
bWFwX2RhdGEoZmlsZSwgYXJncy0+aGFuZGxlLAorCQkJCQkgICAgIEk5MTVfTU1BUF9UWVBFX0dU
VCwKKwkJCQkJICAgICAmYXJncy0+b2Zmc2V0KTsKK30KKwordm9pZCBpOTE1X21tYXBfb2Zmc2V0
X29iamVjdF9yZWxlYXNlKHN0cnVjdCBrcmVmICpyZWYpCit7CisJc3RydWN0IGk5MTVfbW1hcF9v
ZmZzZXQgKm1tbyA9IGNvbnRhaW5lcl9vZihyZWYsCisJCQkJCQkgICAgc3RydWN0IGk5MTVfbW1h
cF9vZmZzZXQsCisJCQkJCQkgICAgcmVmKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAq
b2JqID0gbW1vLT5vYmo7CisJc3RydWN0IGRybV9kZXZpY2UgKmRldiA9IG9iai0+YmFzZS5kZXY7
CisKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZvYmotPm1tb19sb2NrKTsKKworCWlmIChtbW8tPmZp
bGUpCisJCWRybV92bWFfbm9kZV9yZXZva2UoJm1tby0+dm1hX25vZGUsIG1tby0+ZmlsZSk7CisJ
ZHJtX3ZtYV9vZmZzZXRfcmVtb3ZlKGRldi0+dm1hX29mZnNldF9tYW5hZ2VyLCAmbW1vLT52bWFf
bm9kZSk7CisJbGlzdF9kZWwoJm1tby0+b2Zmc2V0KTsKIAotCXJldHVybiBpOTE1X2dlbV9tbWFw
X2d0dChmaWxlLCBkZXYsIGFyZ3MtPmhhbmRsZSwgJmFyZ3MtPm9mZnNldCk7CisJa2ZyZWUobW1v
KTsKK30KKworc3RhdGljIHZvaWQgaTkxNV9nZW1fdm1fb3BlbihzdHJ1Y3Qgdm1fYXJlYV9zdHJ1
Y3QgKnZtYSkKK3sKKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqcHJpdiA9IHZtYS0+dm1fcHJp
dmF0ZV9kYXRhOworCXN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmogPSBwcml2LT5vYmo7
CisKKwlpOTE1X2dlbV9vYmplY3RfZ2V0KG9iaik7CisJa3JlZl9nZXQoJnByaXYtPnJlZik7Cit9
CisKK3N0YXRpYyB2b2lkIGk5MTVfZ2VtX3ZtX2Nsb3NlKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAq
dm1hKQoreworCXN0cnVjdCBpOTE1X21tYXBfb2Zmc2V0ICpwcml2ID0gdm1hLT52bV9wcml2YXRl
X2RhdGE7CisJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiA9IHByaXYtPm9iajsKKwor
CW11dGV4X2xvY2soJm9iai0+bW1vX2xvY2spOworCWtyZWZfcHV0KCZwcml2LT5yZWYsIGk5MTVf
bW1hcF9vZmZzZXRfb2JqZWN0X3JlbGVhc2UpOworCW11dGV4X3VubG9jaygmb2JqLT5tbW9fbG9j
ayk7CisKKwlpOTE1X2dlbV9vYmplY3RfcHV0KG9iaik7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1
Y3Qgdm1fb3BlcmF0aW9uc19zdHJ1Y3QgaTkxNV9nZW1fZ3R0X3ZtX29wcyA9IHsKKwkuZmF1bHQg
PSBpOTE1X2dlbV9mYXVsdCwKKwkub3BlbiA9IGk5MTVfZ2VtX3ZtX29wZW4sCisJLmNsb3NlID0g
aTkxNV9nZW1fdm1fY2xvc2UsCit9OworCisvKiBUaGlzIG92ZXJjb21lcyB0aGUgbGltaXRhdGlv
biBpbiBkcm1fZ2VtX21tYXAncyBhc3NpZ25tZW50IG9mIGEKKyAqIGRybV9nZW1fb2JqZWN0IGFz
IHRoZSB2bWEtPnZtX3ByaXZhdGVfZGF0YS4gU2luY2Ugd2UgbmVlZCB0bworICogYmUgYWJsZSB0
byByZXNvbHZlIG11bHRpcGxlIG1tYXAgb2Zmc2V0cyB3aGljaCBjb3VsZCBiZSB0aWVkCisgKiB0
byBhIHNpbmdsZSBnZW0gb2JqZWN0LgorICovCitpbnQgaTkxNV9nZW1fbW1hcChzdHJ1Y3QgZmls
ZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCit7CisJc3RydWN0IGRybV92bWFf
b2Zmc2V0X25vZGUgKm5vZGU7CisJc3RydWN0IGRybV9maWxlICpwcml2ID0gZmlscC0+cHJpdmF0
ZV9kYXRhOworCXN0cnVjdCBkcm1fZGV2aWNlICpkZXYgPSBwcml2LT5taW5vci0+ZGV2OworCXN0
cnVjdCBpOTE1X21tYXBfb2Zmc2V0ICptbW8gPSBOVUxMOworCXN0cnVjdCBkcm1fZ2VtX29iamVj
dCAqb2JqID0gTlVMTDsKKworCWlmIChkcm1fZGV2X2lzX3VucGx1Z2dlZChkZXYpKQorCQlyZXR1
cm4gLUVOT0RFVjsKKworCWRybV92bWFfb2Zmc2V0X2xvY2tfbG9va3VwKGRldi0+dm1hX29mZnNl
dF9tYW5hZ2VyKTsKKwlub2RlID0gZHJtX3ZtYV9vZmZzZXRfZXhhY3RfbG9va3VwX2xvY2tlZChk
ZXYtPnZtYV9vZmZzZXRfbWFuYWdlciwKKwkJCQkJCSAgdm1hLT52bV9wZ29mZiwKKwkJCQkJCSAg
dm1hX3BhZ2VzKHZtYSkpOworCWlmIChsaWtlbHkobm9kZSkpIHsKKwkJbW1vID0gY29udGFpbmVy
X29mKG5vZGUsIHN0cnVjdCBpOTE1X21tYXBfb2Zmc2V0LAorCQkJCSAgIHZtYV9ub2RlKTsKKwkJ
LyoKKwkJICogU2tpcCAwLXJlZmNudGVkIG9iamVjdHMgYXMgaXQgaXMgaW4gdGhlIHByb2Nlc3Mg
b2YgYmVpbmcKKwkJICogZGVzdHJveWVkIGFuZCB3aWxsIGJlIGludmFsaWQgd2hlbiB0aGUgdm1h
IG1hbmFnZXIgbG9jaworCQkgKiBpcyByZWxlYXNlZC4KKwkJICovCisJCW9iaiA9ICZtbW8tPm9i
ai0+YmFzZTsKKwkJaWYgKCFrcmVmX2dldF91bmxlc3NfemVybygmb2JqLT5yZWZjb3VudCkpCisJ
CQlvYmogPSBOVUxMOworCX0KKwlkcm1fdm1hX29mZnNldF91bmxvY2tfbG9va3VwKGRldi0+dm1h
X29mZnNldF9tYW5hZ2VyKTsKKworCWlmICghb2JqKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWlm
ICghZHJtX3ZtYV9ub2RlX2lzX2FsbG93ZWQobm9kZSwgcHJpdikpIHsKKwkJZHJtX2dlbV9vYmpl
Y3RfcHV0X3VubG9ja2VkKG9iaik7CisJCXJldHVybiAtRUFDQ0VTOworCX0KKworCWlmICh0b19p
bnRlbF9ibyhvYmopLT5yZWFkb25seSkgeworCQlpZiAodm1hLT52bV9mbGFncyAmIFZNX1dSSVRF
KSB7CisJCQlkcm1fZ2VtX29iamVjdF9wdXRfdW5sb2NrZWQob2JqKTsKKwkJCXJldHVybiAtRUlO
VkFMOworCQl9CisKKwkJdm1hLT52bV9mbGFncyAmPSB+Vk1fTUFZV1JJVEU7CisJfQorCisJdm1h
LT52bV9mbGFncyB8PSBWTV9QRk5NQVAgfCBWTV9ET05URVhQQU5EIHwgVk1fRE9OVERVTVA7CisJ
dm1hLT52bV9wYWdlX3Byb3QgPSBwZ3Byb3Rfd3JpdGVjb21iaW5lKHZtX2dldF9wYWdlX3Byb3Qo
dm1hLT52bV9mbGFncykpOworCXZtYS0+dm1fcGFnZV9wcm90ID0gcGdwcm90X2RlY3J5cHRlZCh2
bWEtPnZtX3BhZ2VfcHJvdCk7CisJdm1hLT52bV9wcml2YXRlX2RhdGEgPSBtbW87CisKKwl2bWEt
PnZtX29wcyA9ICZpOTE1X2dlbV9ndHRfdm1fb3BzOworCisJLyoKKwkgKiBUYWtlIGEgcmVmIGZv
ciBvdXIgbW1hcF9vZmZzZXQgb2JqZWN0LiBUaGUgcmVmZXJlbmNlIGlzIGNsZWFuZWQKKwkgKiB1
cCB3aGVuIHRoZSB2bWEgaXMgY2xvc2VkLgorCSAqLworCWtyZWZfZ2V0KCZtbW8tPnJlZik7CisK
KwlyZXR1cm4gMDsKIH0KIAogI2lmIElTX0VOQUJMRUQoQ09ORklHX0RSTV9JOTE1X1NFTEZURVNU
KQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5jCmluZGV4IGQ3ODU1
ZGM1YTVjNS4uZWIzZDdmMzUyOGYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fb2JqZWN0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX29iamVjdC5jCkBAIC01OCw2ICs1OCw5IEBAIHZvaWQgaTkxNV9nZW1fb2JqZWN0X2luaXQo
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAogCUlOSVRfTElTVF9IRUFEKCZvYmot
Pmx1dF9saXN0KTsKIAorCW11dGV4X2luaXQoJm9iai0+bW1vX2xvY2spOworCUlOSVRfTElTVF9I
RUFEKCZvYmotPm1tYXBfb2Zmc2V0cyk7CisKIAlpbml0X3JjdV9oZWFkKCZvYmotPnJjdSk7CiAK
IAlvYmotPm9wcyA9IG9wczsKQEAgLTk0LDYgKzk3LDcgQEAgdm9pZCBpOTE1X2dlbV9jbG9zZV9v
YmplY3Qoc3RydWN0IGRybV9nZW1fb2JqZWN0ICpnZW0sIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkK
IAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqID0gdG9faW50ZWxfYm8oZ2VtKTsKIAlz
dHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmcHJpdiA9IGZpbGUtPmRyaXZlcl9wcml2Owog
CXN0cnVjdCBpOTE1X2x1dF9oYW5kbGUgKmx1dCwgKmxuOworCXN0cnVjdCBpOTE1X21tYXBfb2Zm
c2V0ICptbW8sICpvbjsKIAlMSVNUX0hFQUQoY2xvc2UpOwogCiAJaTkxNV9nZW1fb2JqZWN0X2xv
Y2sob2JqKTsKQEAgLTEwOCw2ICsxMTIsMTMgQEAgdm9pZCBpOTE1X2dlbV9jbG9zZV9vYmplY3Qo
c3RydWN0IGRybV9nZW1fb2JqZWN0ICpnZW0sIHN0cnVjdCBkcm1fZmlsZSAqZmlsZSkKIAl9CiAJ
aTkxNV9nZW1fb2JqZWN0X3VubG9jayhvYmopOwogCisJbXV0ZXhfbG9jaygmb2JqLT5tbW9fbG9j
ayk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKG1tbywgb24sICZvYmotPm1tYXBfb2Zmc2V0
cywgb2Zmc2V0KSB7CisJCWlmIChtbW8tPmZpbGUgPT0gZmlsZSkKKwkJCWtyZWZfcHV0KCZtbW8t
PnJlZiwgaTkxNV9tbWFwX29mZnNldF9vYmplY3RfcmVsZWFzZSk7CisJfQorCW11dGV4X3VubG9j
aygmb2JqLT5tbW9fbG9jayk7CisKIAlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUobHV0LCBsbiwg
JmNsb3NlLCBvYmpfbGluaykgewogCQlzdHJ1Y3QgaTkxNV9nZW1fY29udGV4dCAqY3R4ID0gbHV0
LT5jdHg7CiAJCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwpAQCAtMTU2LDYgKzE2Nyw3IEBAIHN0YXRp
YyB2b2lkIF9faTkxNV9nZW1fZnJlZV9vYmplY3RzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpp
OTE1LAogCXdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldCgmaTkxNS0+cnVudGltZV9wbSk7
CiAJbGxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShvYmosIG9uLCBmcmVlZCwgZnJlZWQpIHsKIAkJ
c3RydWN0IGk5MTVfdm1hICp2bWEsICp2bjsKKwkJc3RydWN0IGk5MTVfbW1hcF9vZmZzZXQgKm1t
bywgKm9uOwogCiAJCXRyYWNlX2k5MTVfZ2VtX29iamVjdF9kZXN0cm95KG9iaik7CiAKQEAgLTE2
OSw2ICsxODEsMTMgQEAgc3RhdGljIHZvaWQgX19pOTE1X2dlbV9mcmVlX29iamVjdHMoc3RydWN0
IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsCiAJCUdFTV9CVUdfT04oIWxpc3RfZW1wdHkoJm9iai0+
dm1hLmxpc3QpKTsKIAkJR0VNX0JVR19PTighUkJfRU1QVFlfUk9PVCgmb2JqLT52bWEudHJlZSkp
OwogCisJCWk5MTVfZ2VtX29iamVjdF9yZWxlYXNlX21tYXAob2JqKTsKKworCQltdXRleF9sb2Nr
KCZvYmotPm1tb19sb2NrKTsKKwkJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKG1tbywgb24sICZv
YmotPm1tYXBfb2Zmc2V0cywgb2Zmc2V0KQorCQkJa3JlZl9wdXQoJm1tby0+cmVmLCBpOTE1X21t
YXBfb2Zmc2V0X29iamVjdF9yZWxlYXNlKTsKKwkJbXV0ZXhfdW5sb2NrKCZvYmotPm1tb19sb2Nr
KTsKKwogCQltdXRleF91bmxvY2soJmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwogCiAJCUdFTV9C
VUdfT04oYXRvbWljX3JlYWQoJm9iai0+YmluZF9jb3VudCkpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oIGIvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCmluZGV4IDVlZmI5OTM2ZTA1Yi4uZDY2N2VkOGJiMGE2
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0LmgK
KysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdC5oCkBAIC0xMjUs
MTMgKzEyNSwxMyBAQCB2b2lkIGk5MTVfZ2VtX29iamVjdF91bmxvY2tfZmVuY2Uoc3RydWN0IGRy
bV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIHN0YXRpYyBpbmxpbmUgdm9pZAogaTkxNV9nZW1fb2Jq
ZWN0X3NldF9yZWFkb25seShzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqKQogewotCW9i
ai0+YmFzZS52bWFfbm9kZS5yZWFkb25seSA9IHRydWU7CisJb2JqLT5yZWFkb25seSA9IHRydWU7
CiB9CiAKIHN0YXRpYyBpbmxpbmUgYm9vbAogaTkxNV9nZW1fb2JqZWN0X2lzX3JlYWRvbmx5KGNv
bnN0IHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiB7Ci0JcmV0dXJuIG9iai0+YmFz
ZS52bWFfbm9kZS5yZWFkb25seTsKKwlyZXR1cm4gb2JqLT5yZWFkb25seTsKIH0KIAogc3RhdGlj
IGlubGluZSBib29sCkBAIC00MjMsNiArNDIzLDkgQEAgaW50IGk5MTVfZ2VtX29iamVjdF93YWl0
KHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmosCiBpbnQgaTkxNV9nZW1fb2JqZWN0X3dh
aXRfcHJpb3JpdHkoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaiwKIAkJCQkgIHVuc2ln
bmVkIGludCBmbGFncywKIAkJCQkgIGNvbnN0IHN0cnVjdCBpOTE1X3NjaGVkX2F0dHIgKmF0dHIp
OworCit2b2lkIGk5MTVfbW1hcF9vZmZzZXRfb2JqZWN0X3JlbGVhc2Uoc3RydWN0IGtyZWYgKnJl
Zik7CisKICNkZWZpbmUgSTkxNV9QUklPUklUWV9ESVNQTEFZIEk5MTVfVVNFUl9QUklPUklUWShJ
OTE1X1BSSU9SSVRZX01BWCkKIAogI2VuZGlmCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9n
ZW0vaTkxNV9nZW1fb2JqZWN0X3R5cGVzLmgKaW5kZXggZWRlMGViNDIxOGE4Li5kNzRkZGI0Nzkz
MTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9vYmplY3Rf
dHlwZXMuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fb2JqZWN0X3R5
cGVzLmgKQEAgLTYwLDYgKzYwLDE5IEBAIHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0X29wcyB7
CiAJdm9pZCAoKnJlbGVhc2UpKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopOwogfTsK
IAorZW51bSBpOTE1X21tYXBfdHlwZSB7CisJSTkxNV9NTUFQX1RZUEVfR1RUID0gMCwKK307CisK
K3N0cnVjdCBpOTE1X21tYXBfb2Zmc2V0IHsKKwlzdHJ1Y3QgZHJtX3ZtYV9vZmZzZXRfbm9kZSB2
bWFfbm9kZTsKKwlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqOworCXN0cnVjdCBkcm1f
ZmlsZSAqZmlsZTsKKwllbnVtIGk5MTVfbW1hcF90eXBlIG1tYXBfdHlwZTsKKwlzdHJ1Y3Qga3Jl
ZiByZWY7CisJc3RydWN0IGxpc3RfaGVhZCBvZmZzZXQ7Cit9OworCiBzdHJ1Y3QgZHJtX2k5MTVf
Z2VtX29iamVjdCB7CiAJc3RydWN0IGRybV9nZW1fb2JqZWN0IGJhc2U7CiAKQEAgLTExNSw2ICsx
MjgsMTEgQEAgc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgewogCXVuc2lnbmVkIGludCB1c2Vy
ZmF1bHRfY291bnQ7CiAJc3RydWN0IGxpc3RfaGVhZCB1c2VyZmF1bHRfbGluazsKIAorCS8qIFBy
b3RlY3RzIGFjY2VzcyB0byBtbWFwIG9mZnNldHMgKi8KKwlzdHJ1Y3QgbXV0ZXggbW1vX2xvY2s7
CisJc3RydWN0IGxpc3RfaGVhZCBtbWFwX29mZnNldHM7CisJYm9vbCByZWFkb25seToxOworCiAJ
STkxNV9TRUxGVEVTVF9ERUNMQVJFKHN0cnVjdCBsaXN0X2hlYWQgc3RfbGluayk7CiAKIAkvKgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9t
bWFuLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vc2VsZnRlc3RzL2k5MTVfZ2VtX21tYW4u
YwppbmRleCAxZDI3YmFiZmYwY2UuLmE3NTEzNDIxYjFkYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMKKysrIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL3NlbGZ0ZXN0cy9pOTE1X2dlbV9tbWFuLmMKQEAgLTM3MSwxNSArMzcx
LDIwIEBAIHN0YXRpYyBib29sIGFzc2VydF9tbWFwX29mZnNldChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqaTkxNSwKIAkJCSAgICAgICBpbnQgZXhwZWN0ZWQpCiB7CiAJc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iajsKKwkvKiByZWZjb3VudGVkIGluIGNyZWF0ZV9tbWFwX29mZnNldCAq
LworCXN0cnVjdCBpOTE1X21tYXBfb2Zmc2V0ICptbW8gPSBremFsbG9jKHNpemVvZigqbW1vKSwg
R0ZQX0tFUk5FTCk7CiAJaW50IGVycjsKIAogCW9iaiA9IGk5MTVfZ2VtX29iamVjdF9jcmVhdGVf
aW50ZXJuYWwoaTkxNSwgc2l6ZSk7CiAJaWYgKElTX0VSUihvYmopKQogCQlyZXR1cm4gUFRSX0VS
UihvYmopOwogCi0JZXJyID0gY3JlYXRlX21tYXBfb2Zmc2V0KG9iaik7CisJZXJyID0gY3JlYXRl
X21tYXBfb2Zmc2V0KG9iaiwgbW1vKTsKKwlpZiAoZXJyKQorCQlrZnJlZShtbW8pOwogCWk5MTVf
Z2VtX29iamVjdF9wdXQob2JqKTsKIAorCiAJcmV0dXJuIGVyciA9PSBleHBlY3RlZDsKIH0KIApA
QCAtNDIyLDYgKzQyNyw4IEBAIHN0YXRpYyBpbnQgaWd0X21tYXBfb2Zmc2V0X2V4aGF1c3Rpb24o
dm9pZCAqYXJnKQogCXN0cnVjdCBkcm1fbW0gKm1tID0gJmk5MTUtPmRybS52bWFfb2Zmc2V0X21h
bmFnZXItPnZtX2FkZHJfc3BhY2VfbW07CiAJc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
ajsKIAlzdHJ1Y3QgZHJtX21tX25vZGUgcmVzdiwgKmhvbGU7CisJLyogcmVmY291bnRlZCBpbiBj
cmVhdGVfbW1hcF9vZmZzZXQgKi8KKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1vID0ga3ph
bGxvYyhzaXplb2YoKm1tbyksIEdGUF9LRVJORUwpOwogCXU2NCBob2xlX3N0YXJ0LCBob2xlX2Vu
ZDsKIAlpbnQgbG9vcCwgZXJyOwogCkBAIC00NjUsOSArNDcyLDEwIEBAIHN0YXRpYyBpbnQgaWd0
X21tYXBfb2Zmc2V0X2V4aGF1c3Rpb24odm9pZCAqYXJnKQogCQlnb3RvIG91dDsKIAl9CiAKLQll
cnIgPSBjcmVhdGVfbW1hcF9vZmZzZXQob2JqKTsKKwllcnIgPSBjcmVhdGVfbW1hcF9vZmZzZXQo
b2JqLCBtbW8pOwogCWlmIChlcnIpIHsKIAkJcHJfZXJyKCJVbmFibGUgdG8gaW5zZXJ0IG9iamVj
dCBpbnRvIHJlY2xhaW1lZCBob2xlXG4iKTsKKwkJa2ZyZWUobW1vKTsKIAkJZ290byBlcnJfb2Jq
OwogCX0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQu
YyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jlc2V0LmMKaW5kZXggYjlkODRkNTJl
OTg2Li43YjgyZWY4ODhiOTYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2lu
dGVsX3Jlc2V0LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmVzZXQuYwpA
QCAtNjI4LDYgKzYyOCw3IEBAIHN0YXRpYyB2b2lkIHJldm9rZV9tbWFwcyhzdHJ1Y3QgaW50ZWxf
Z3QgKmd0KQogCiAJZm9yIChpID0gMDsgaSA8IGd0LT5nZ3R0LT5udW1fZmVuY2VzOyBpKyspIHsK
IAkJc3RydWN0IGRybV92bWFfb2Zmc2V0X25vZGUgKm5vZGU7CisJCXN0cnVjdCBpOTE1X21tYXBf
b2Zmc2V0ICptbW87CiAJCXN0cnVjdCBpOTE1X3ZtYSAqdm1hOwogCQl1NjQgdm1hX29mZnNldDsK
IApAQCAtNjQxLDEwICs2NDIsMTggQEAgc3RhdGljIHZvaWQgcmV2b2tlX21tYXBzKHN0cnVjdCBp
bnRlbF9ndCAqZ3QpCiAJCUdFTV9CVUdfT04odm1hLT5mZW5jZSAhPSAmZ3QtPmdndHQtPmZlbmNl
X3JlZ3NbaV0pOwogCQlub2RlID0gJnZtYS0+b2JqLT5iYXNlLnZtYV9ub2RlOwogCQl2bWFfb2Zm
c2V0ID0gdm1hLT5nZ3R0X3ZpZXcucGFydGlhbC5vZmZzZXQgPDwgUEFHRV9TSElGVDsKLQkJdW5t
YXBfbWFwcGluZ19yYW5nZShndC0+aTkxNS0+ZHJtLmFub25faW5vZGUtPmlfbWFwcGluZywKKwor
CQlsaXN0X2Zvcl9lYWNoX2VudHJ5KG1tbywgJnZtYS0+b2JqLT5tbWFwX29mZnNldHMsIG9mZnNl
dCkgeworCQkJbm9kZSA9ICZtbW8tPnZtYV9ub2RlOworCQkJaWYgKCFkcm1fbW1fbm9kZV9hbGxv
Y2F0ZWQoJm5vZGUtPnZtX25vZGUpIHx8CisJCQkgICAgbW1vLT5tbWFwX3R5cGUgIT0gSTkxNV9N
TUFQX1RZUEVfR1RUKQorCQkJCWNvbnRpbnVlOworCisJCQl1bm1hcF9tYXBwaW5nX3JhbmdlKGd0
LT5pOTE1LT5kcm0uYW5vbl9pbm9kZS0+aV9tYXBwaW5nLAogCQkJCSAgICBkcm1fdm1hX25vZGVf
b2Zmc2V0X2FkZHIobm9kZSkgKyB2bWFfb2Zmc2V0LAogCQkJCSAgICB2bWEtPnNpemUsCiAJCQkJ
ICAgIDEpOworCQl9CiAJfQogfQogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9kcnYuYwppbmRleCAxYzQ1NzZh
NGE1ZTkuLmJkZDU5NzIwMDk4NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9kcnYuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5jCkBAIC0yNzIyLDE4
ICsyNzIyLDEyIEBAIGNvbnN0IHN0cnVjdCBkZXZfcG1fb3BzIGk5MTVfcG1fb3BzID0gewogCS5y
dW50aW1lX3Jlc3VtZSA9IGludGVsX3J1bnRpbWVfcmVzdW1lLAogfTsKIAotc3RhdGljIGNvbnN0
IHN0cnVjdCB2bV9vcGVyYXRpb25zX3N0cnVjdCBpOTE1X2dlbV92bV9vcHMgPSB7Ci0JLmZhdWx0
ID0gaTkxNV9nZW1fZmF1bHQsCi0JLm9wZW4gPSBkcm1fZ2VtX3ZtX29wZW4sCi0JLmNsb3NlID0g
ZHJtX2dlbV92bV9jbG9zZSwKLX07Ci0KIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRp
b25zIGk5MTVfZHJpdmVyX2ZvcHMgPSB7CiAJLm93bmVyID0gVEhJU19NT0RVTEUsCiAJLm9wZW4g
PSBkcm1fb3BlbiwKIAkucmVsZWFzZSA9IGRybV9yZWxlYXNlLAogCS51bmxvY2tlZF9pb2N0bCA9
IGRybV9pb2N0bCwKLQkubW1hcCA9IGRybV9nZW1fbW1hcCwKKwkubW1hcCA9IGk5MTVfZ2VtX21t
YXAsCiAJLnBvbGwgPSBkcm1fcG9sbCwKIAkucmVhZCA9IGRybV9yZWFkLAogCS5jb21wYXRfaW9j
dGwgPSBpOTE1X2NvbXBhdF9pb2N0bCwKQEAgLTI4MjIsNyArMjgxNiw2IEBAIHN0YXRpYyBzdHJ1
Y3QgZHJtX2RyaXZlciBkcml2ZXIgPSB7CiAKIAkuZ2VtX2Nsb3NlX29iamVjdCA9IGk5MTVfZ2Vt
X2Nsb3NlX29iamVjdCwKIAkuZ2VtX2ZyZWVfb2JqZWN0X3VubG9ja2VkID0gaTkxNV9nZW1fZnJl
ZV9vYmplY3QsCi0JLmdlbV92bV9vcHMgPSAmaTkxNV9nZW1fdm1fb3BzLAogCiAJLnByaW1lX2hh
bmRsZV90b19mZCA9IGRybV9nZW1fcHJpbWVfaGFuZGxlX3RvX2ZkLAogCS5wcmltZV9mZF90b19o
YW5kbGUgPSBkcm1fZ2VtX3ByaW1lX2ZkX3RvX2hhbmRsZSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5o
CmluZGV4IGI0MjY1MWEzODdkOS4uYmYyOTI3ZTg4ZTE0IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmgKQEAgLTIzMjcsNiArMjMyNyw3IEBAIGludCBpOTE1X2dlbV93YWl0X2Zvcl9pZGxlKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIHZvaWQgaTkxNV9nZW1fc3VzcGVuZChzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpOwogdm9pZCBpOTE1X2dlbV9zdXNwZW5kX2xh
dGUoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KTsKIHZvaWQgaTkxNV9nZW1fcmVz
dW1lKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdik7CitpbnQgaTkxNV9nZW1fbW1h
cChzdHJ1Y3QgZmlsZSAqZmlscCwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpOwogdm1fZmF1
bHRfdCBpOTE1X2dlbV9mYXVsdChzdHJ1Y3Qgdm1fZmF1bHQgKnZtZik7CiAKIGludCBpOTE1X2dl
bV9vcGVuKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICppOTE1LCBzdHJ1Y3QgZHJtX2ZpbGUgKmZp
bGUpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKaW5kZXggZTBlNjc3YjJhM2E5Li42NzczMjM2NDQz
MTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfdm1hLmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV92bWEuYwpAQCAtODYxLDcgKzg2MSw4IEBAIHN0YXRpYyB2
b2lkIF9faTkxNV92bWFfaW91bm1hcChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIAogdm9pZCBpOTE1
X3ZtYV9yZXZva2VfbW1hcChzdHJ1Y3QgaTkxNV92bWEgKnZtYSkKIHsKLQlzdHJ1Y3QgZHJtX3Zt
YV9vZmZzZXRfbm9kZSAqbm9kZSA9ICZ2bWEtPm9iai0+YmFzZS52bWFfbm9kZTsKKwlzdHJ1Y3Qg
ZHJtX3ZtYV9vZmZzZXRfbm9kZSAqbm9kZTsKKwlzdHJ1Y3QgaTkxNV9tbWFwX29mZnNldCAqbW1v
OwogCXU2NCB2bWFfb2Zmc2V0OwogCiAJbG9ja2RlcF9hc3NlcnRfaGVsZCgmdm1hLT52bS0+bXV0
ZXgpOwpAQCAtODczLDEwICs4NzQsMTkgQEAgdm9pZCBpOTE1X3ZtYV9yZXZva2VfbW1hcChzdHJ1
Y3QgaTkxNV92bWEgKnZtYSkKIAlHRU1fQlVHX09OKCF2bWEtPm9iai0+dXNlcmZhdWx0X2NvdW50
KTsKIAogCXZtYV9vZmZzZXQgPSB2bWEtPmdndHRfdmlldy5wYXJ0aWFsLm9mZnNldCA8PCBQQUdF
X1NISUZUOwotCXVubWFwX21hcHBpbmdfcmFuZ2Uodm1hLT52bS0+aTkxNS0+ZHJtLmFub25faW5v
ZGUtPmlfbWFwcGluZywKLQkJCSAgICBkcm1fdm1hX25vZGVfb2Zmc2V0X2FkZHIobm9kZSkgKyB2
bWFfb2Zmc2V0LAotCQkJICAgIHZtYS0+c2l6ZSwKLQkJCSAgICAxKTsKKworCWxpc3RfZm9yX2Vh
Y2hfZW50cnkobW1vLCAmdm1hLT5vYmotPm1tYXBfb2Zmc2V0cywgb2Zmc2V0KSB7CisJCW5vZGUg
PSAmbW1vLT52bWFfbm9kZTsKKwkJLyogT25seSBndHQtbW1hcHMgZm9yIHRoaXMgdm1hIHNob3Vs
ZCBiZSB1bm1hcHBlZCAqLworCQlpZiAoIWRybV9tbV9ub2RlX2FsbG9jYXRlZCgmbm9kZS0+dm1f
bm9kZSkgfHwKKwkJICAgIG1tby0+bW1hcF90eXBlICE9IEk5MTVfTU1BUF9UWVBFX0dUVCkKKwkJ
CWNvbnRpbnVlOworCisJCXVubWFwX21hcHBpbmdfcmFuZ2Uodm1hLT52bS0+aTkxNS0+ZHJtLmFu
b25faW5vZGUtPmlfbWFwcGluZywKKwkJCQkgICAgZHJtX3ZtYV9ub2RlX29mZnNldF9hZGRyKG5v
ZGUpICsgdm1hX29mZnNldCwKKwkJCQkgICAgdm1hLT5zaXplLAorCQkJCSAgICAxKTsKKwl9CiAK
IAlpOTE1X3ZtYV91bnNldF91c2VyZmF1bHQodm1hKTsKIAlpZiAoIS0tdm1hLT5vYmotPnVzZXJm
YXVsdF9jb3VudCkKLS0gCjIuMjMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGlu
Zm8vaW50ZWwtZ2Z4

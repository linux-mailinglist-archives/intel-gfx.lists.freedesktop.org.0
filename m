Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 6BEC68E890
	for <lists+intel-gfx@lfdr.de>; Thu, 15 Aug 2019 11:49:41 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id D2ECB6E96A;
	Thu, 15 Aug 2019 09:49:39 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 060FA6E96A
 for <intel-gfx@lists.freedesktop.org>; Thu, 15 Aug 2019 09:49:37 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga007.jf.intel.com ([10.7.209.58])
 by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 15 Aug 2019 02:49:37 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,388,1559545200"; d="scan'208";a="167703118"
Received: from rosetta.fi.intel.com ([10.237.72.194])
 by orsmga007.jf.intel.com with ESMTP; 15 Aug 2019 02:49:36 -0700
Received: by rosetta.fi.intel.com (Postfix, from userid 1000)
 id 0B3DF840810; Thu, 15 Aug 2019 12:49:30 +0300 (EEST)
From: Mika Kuoppala <mika.kuoppala@linux.intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu, 15 Aug 2019 12:49:29 +0300
Message-Id: <20190815094929.358-1-mika.kuoppala@linux.intel.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <156586009453.5838.3467087896008757285@skylake-alporthouse-com>
References: <156586009453.5838.3467087896008757285@skylake-alporthouse-com>
Subject: [Intel-gfx] [PATCH 3/3] drm/i915/icl: Add gen11 specific render
 breadcrumbs
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rmx1c2ggYWNjb3JkaW5nIHRvIHdoYXQgZ2VuMTEgZXhwZWN0cyB3aGVuIHdyaXRpbmcKYnJlYWRj
cnVtYnMuIEFzIG9ubHkgdGhlIHNlcW5vd3JpdGUgKyBmbHVzaCBkaWZmZXJzCmJldHdlZW4gZW5n
aW5lIGFuZCBnZW5zLCBlbmNsb3NlIHRoZSBmb290ZXIgdG8KaGVscGVyLgoKdjI6IGF2b2lkIHBy
b2JsZW0gb2Ygc2FuZSBsb2NhbCBuYW1pbmcgYnkgbm90IHVzaW5nIHRoZW0KCkNjOiBDaHJpcyBX
aWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KU2lnbmVkLW9mZi1ieTogTWlrYSBLdW9w
cGFsYSA8bWlrYS5rdW9wcGFsYUBsaW51eC5pbnRlbC5jb20+ClJldmlld2VkLWJ5OiBDaHJpcyBX
aWxzb24gPGNocmlzQGNocmlzLXdpbHNvbi5jby51az4KLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9ndC9pbnRlbF9scmMuYyB8IDY3ICsrKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tCiAxIGZp
bGUgY2hhbmdlZCwgNDcgaW5zZXJ0aW9ucygrKSwgMjAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMgYi9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF9scmMuYwppbmRleCA5MDE4YWZiNGU5ZWYuLmE1ZDliOTAyZDZlMyAxMDA2
NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKKysrIGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKQEAgLTI3NDAsMTIgKzI3NDAsMTAgQEAgc3Rh
dGljIHUzMiAqZW1pdF9wcmVlbXB0X2J1c3l3YWl0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVl
c3QsIHUzMiAqY3MpCiAJcmV0dXJuIGNzOwogfQogCi1zdGF0aWMgdTMyICpnZW44X2VtaXRfZmlu
aV9icmVhZGNydW1iKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsIHUzMiAqY3MpCitzdGF0
aWMgX19hbHdheXNfaW5saW5lIHUzMioKK2dlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfZm9vdGVy
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsCisJCQkJIHUzMiAqY3MpCiB7Ci0JY3MgPSBn
ZW44X2VtaXRfZ2d0dF93cml0ZShjcywKLQkJCQkgIHJlcXVlc3QtPmZlbmNlLnNlcW5vLAotCQkJ
CSAgcmVxdWVzdC0+dGltZWxpbmUtPmh3c3Bfb2Zmc2V0LAotCQkJCSAgMCk7CiAJKmNzKysgPSBN
SV9VU0VSX0lOVEVSUlVQVDsKIAogCSpjcysrID0gTUlfQVJCX09OX09GRiB8IE1JX0FSQl9FTkFC
TEU7CkBAIC0yNzU4LDI5ICsyNzU2LDQ4IEBAIHN0YXRpYyB1MzIgKmdlbjhfZW1pdF9maW5pX2Jy
ZWFkY3J1bWIoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwgdTMyICpjcykKIAlyZXR1cm4g
Z2VuOF9lbWl0X3dhX3RhaWwocmVxdWVzdCwgY3MpOwogfQogCitzdGF0aWMgdTMyICpnZW44X2Vt
aXRfZmluaV9icmVhZGNydW1iKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QsIHUzMiAqY3Mp
Cit7CisJY3MgPSBnZW44X2VtaXRfZ2d0dF93cml0ZShjcywKKwkJCQkgIHJlcXVlc3QtPmZlbmNl
LnNlcW5vLAorCQkJCSAgcmVxdWVzdC0+dGltZWxpbmUtPmh3c3Bfb2Zmc2V0LAorCQkJCSAgMCk7
CisKKwlyZXR1cm4gZ2VuOF9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9mb290ZXIocmVxdWVzdCwgY3Mp
OworfQorCiBzdGF0aWMgdTMyICpnZW44X2VtaXRfZmluaV9icmVhZGNydW1iX3JjcyhzdHJ1Y3Qg
aTkxNV9yZXF1ZXN0ICpyZXF1ZXN0LCB1MzIgKmNzKQogewotCS8qIFhYWCBmbHVzaCt3cml0ZStD
U19TVEFMTCBhbGwgaW4gb25lIHVwc2V0cyBnZW1fY29uY3VycmVudF9ibHQ6a2JsICovCiAJY3Mg
PSBnZW44X2VtaXRfZ2d0dF93cml0ZV9yY3MoY3MsCiAJCQkJICAgICAgcmVxdWVzdC0+ZmVuY2Uu
c2Vxbm8sCiAJCQkJICAgICAgcmVxdWVzdC0+dGltZWxpbmUtPmh3c3Bfb2Zmc2V0LAogCQkJCSAg
ICAgIFBJUEVfQ09OVFJPTF9SRU5ERVJfVEFSR0VUX0NBQ0hFX0ZMVVNIIHwKIAkJCQkgICAgICBQ
SVBFX0NPTlRST0xfREVQVEhfQ0FDSEVfRkxVU0ggfAogCQkJCSAgICAgIFBJUEVfQ09OVFJPTF9E
Q19GTFVTSF9FTkFCTEUpOworCisJLyogWFhYIGZsdXNoK3dyaXRlK0NTX1NUQUxMIGFsbCBpbiBv
bmUgdXBzZXRzIGdlbV9jb25jdXJyZW50X2JsdDprYmwgKi8KIAljcyA9IGdlbjhfZW1pdF9waXBl
X2NvbnRyb2woY3MsCiAJCQkJICAgIFBJUEVfQ09OVFJPTF9GTFVTSF9FTkFCTEUgfAogCQkJCSAg
ICBQSVBFX0NPTlRST0xfQ1NfU1RBTEwsCiAJCQkJICAgIDApOwotCSpjcysrID0gTUlfVVNFUl9J
TlRFUlJVUFQ7CiAKLQkqY3MrKyA9IE1JX0FSQl9PTl9PRkYgfCBNSV9BUkJfRU5BQkxFOwotCWlm
IChpbnRlbF9lbmdpbmVfaGFzX3NlbWFwaG9yZXMocmVxdWVzdC0+ZW5naW5lKSkKLQkJY3MgPSBl
bWl0X3ByZWVtcHRfYnVzeXdhaXQocmVxdWVzdCwgY3MpOworCXJldHVybiBnZW44X2VtaXRfZmlu
aV9icmVhZGNydW1iX2Zvb3RlcihyZXF1ZXN0LCBjcyk7Cit9CiAKLQlyZXF1ZXN0LT50YWlsID0g
aW50ZWxfcmluZ19vZmZzZXQocmVxdWVzdCwgY3MpOwotCWFzc2VydF9yaW5nX3RhaWxfdmFsaWQo
cmVxdWVzdC0+cmluZywgcmVxdWVzdC0+dGFpbCk7CitzdGF0aWMgdTMyICpnZW4xMV9lbWl0X2Zp
bmlfYnJlYWRjcnVtYl9yY3Moc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCwKKwkJCQkJICAg
dTMyICpjcykKK3sKKwljcyA9IGdlbjhfZW1pdF9nZ3R0X3dyaXRlX3JjcyhjcywKKwkJCQkgICAg
ICByZXF1ZXN0LT5mZW5jZS5zZXFubywKKwkJCQkgICAgICByZXF1ZXN0LT50aW1lbGluZS0+aHdz
cF9vZmZzZXQsCisJCQkJICAgICAgUElQRV9DT05UUk9MX0NTX1NUQUxMIHwKKwkJCQkgICAgICBQ
SVBFX0NPTlRST0xfVElMRV9DQUNIRV9GTFVTSCB8CisJCQkJICAgICAgUElQRV9DT05UUk9MX1JF
TkRFUl9UQVJHRVRfQ0FDSEVfRkxVU0ggfAorCQkJCSAgICAgIFBJUEVfQ09OVFJPTF9ERVBUSF9D
QUNIRV9GTFVTSCB8CisJCQkJICAgICAgUElQRV9DT05UUk9MX0RDX0ZMVVNIX0VOQUJMRSB8CisJ
CQkJICAgICAgUElQRV9DT05UUk9MX0ZMVVNIX0VOQUJMRSk7CiAKLQlyZXR1cm4gZ2VuOF9lbWl0
X3dhX3RhaWwocmVxdWVzdCwgY3MpOworCXJldHVybiBnZW44X2VtaXRfZmluaV9icmVhZGNydW1i
X2Zvb3RlcihyZXF1ZXN0LCBjcyk7CiB9CiAKIHN0YXRpYyB2b2lkIGV4ZWNsaXN0c19wYXJrKHN0
cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKQEAgLTI4NzYsNiArMjg5MywyMSBAQCBsb2dp
Y2FsX3JpbmdfZGVmYXVsdF9pcnFzKHN0cnVjdCBpbnRlbF9lbmdpbmVfY3MgKmVuZ2luZSkKIAll
bmdpbmUtPmlycV9rZWVwX21hc2sgPSBHVF9DT05URVhUX1NXSVRDSF9JTlRFUlJVUFQgPDwgc2hp
ZnQ7CiB9CiAKK3N0YXRpYyB2b2lkIHJjc19zdWJtaXNzaW9uX292ZXJyaWRlKHN0cnVjdCBpbnRl
bF9lbmdpbmVfY3MgKmVuZ2luZSkKK3sKKwlzd2l0Y2ggKElOVEVMX0dFTihlbmdpbmUtPmk5MTUp
KSB7CisJY2FzZSAxMjoKKwljYXNlIDExOgorCQllbmdpbmUtPmVtaXRfZmx1c2ggPSBnZW4xMV9l
bWl0X2ZsdXNoX3JlbmRlcjsKKwkJZW5naW5lLT5lbWl0X2ZpbmlfYnJlYWRjcnVtYiA9IGdlbjEx
X2VtaXRfZmluaV9icmVhZGNydW1iX3JjczsKKwkJYnJlYWs7CisJZGVmYXVsdDoKKwkJZW5naW5l
LT5lbWl0X2ZsdXNoID0gZ2VuOF9lbWl0X2ZsdXNoX3JlbmRlcjsKKwkJZW5naW5lLT5lbWl0X2Zp
bmlfYnJlYWRjcnVtYiA9IGdlbjhfZW1pdF9maW5pX2JyZWFkY3J1bWJfcmNzOworCQlicmVhazsK
Kwl9Cit9CisKIGludCBpbnRlbF9leGVjbGlzdHNfc3VibWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50
ZWxfZW5naW5lX2NzICplbmdpbmUpCiB7CiAJdGFza2xldF9pbml0KCZlbmdpbmUtPmV4ZWNsaXN0
cy50YXNrbGV0LApAQCAtMjg4NSwxMyArMjkxNyw4IEBAIGludCBpbnRlbF9leGVjbGlzdHNfc3Vi
bWlzc2lvbl9zZXR1cChzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJbG9naWNhbF9y
aW5nX2RlZmF1bHRfdmZ1bmNzKGVuZ2luZSk7CiAJbG9naWNhbF9yaW5nX2RlZmF1bHRfaXJxcyhl
bmdpbmUpOwogCi0JaWYgKGVuZ2luZS0+Y2xhc3MgPT0gUkVOREVSX0NMQVNTKSB7Ci0JCWlmIChJ
TlRFTF9HRU4oZW5naW5lLT5pOTE1KSA+PSAxMSkKLQkJCWVuZ2luZS0+ZW1pdF9mbHVzaCA9IGdl
bjExX2VtaXRfZmx1c2hfcmVuZGVyOwotCQllbHNlCi0JCQllbmdpbmUtPmVtaXRfZmx1c2ggPSBn
ZW44X2VtaXRfZmx1c2hfcmVuZGVyOwotCQllbmdpbmUtPmVtaXRfZmluaV9icmVhZGNydW1iID0g
Z2VuOF9lbWl0X2ZpbmlfYnJlYWRjcnVtYl9yY3M7Ci0JfQorCWlmIChlbmdpbmUtPmNsYXNzID09
IFJFTkRFUl9DTEFTUykKKwkJcmNzX3N1Ym1pc3Npb25fb3ZlcnJpZGUoZW5naW5lKTsKIAogCXJl
dHVybiAwOwogfQotLSAKMi4xNy4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVl
ZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5m
by9pbnRlbC1nZng=

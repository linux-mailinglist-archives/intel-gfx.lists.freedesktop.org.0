Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 82C8D30F3FF
	for <lists+intel-gfx@lfdr.de>; Thu,  4 Feb 2021 14:40:16 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id B8E126ED72;
	Thu,  4 Feb 2021 13:40:14 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 889426E07F
 for <intel-gfx@lists.freedesktop.org>; Thu,  4 Feb 2021 13:40:13 +0000 (UTC)
IronPort-SDR: T73UPkiWIO/OW4ARr6Ho1QfTP3NcNwrvqUPUFqPDj44bL4vJZ2YYR5NFl6+UWJRZa94lJ+0lOT
 xWbakjya/GpA==
X-IronPort-AV: E=McAfee;i="6000,8403,9884"; a="180462999"
X-IronPort-AV: E=Sophos;i="5.79,401,1602572400"; d="scan'208";a="180462999"
Received: from orsmga008.jf.intel.com ([10.7.209.65])
 by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 04 Feb 2021 05:40:12 -0800
IronPort-SDR: j9sqCTmaMLvAqZgyNv9Gi1xmMT+WVar8bVtHqQLDMhep/T5qaP+ainJJ9vVSKxfiuaWmC7XFd3
 8Cz2ggn86Qpg==
X-IronPort-AV: E=Sophos;i="5.79,401,1602572400"; d="scan'208";a="393170422"
Received: from helsinki.fi.intel.com ([10.237.66.162])
 by orsmga008-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 04 Feb 2021 05:40:09 -0800
From: Gwan-gyeong Mun <gwan-gyeong.mun@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Thu,  4 Feb 2021 15:40:14 +0200
Message-Id: <20210204134015.419036-1-gwan-gyeong.mun@intel.com>
X-Mailer: git-send-email 2.30.0
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v15 1/2] drm/i915/display: Support PSR Multiple
 Instances
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

SXQgaXMgYSBwcmVsaW1pbmFyeSB3b3JrIGZvciBzdXBwb3J0aW5nIG11bHRpcGxlIEVEUCBQU1Ig
YW5kCkRQIFBhbmVsUmVwbGF5LiBBbmQgaXQgcmVmYWN0b3JzIHNpbmdsZXRvbiBQU1IgdG8gTXVs
dGkgVHJhbnNjb2RlcgpzdXBwb3J0YWJsZSBQU1IuCkFuZCB0aGlzIG1vdmVzIGFuZCByZW5hbWVz
IHRoZSBpOTE1X3BzciBzdHJ1Y3R1cmUgb2YgZHJtX2k5MTVfcHJpdmF0ZSdzIHRvCmludGVsX2Rw
J3MgaW50ZWxfcHNyIHN0cnVjdHVyZS4KSXQgYWxzbyBjYXVzZXMgY2hhbmdlcyBpbiBQU1IgaW50
ZXJydXB0IGhhbmRsaW5nIHJvdXRpbmUgZm9yIHN1cHBvcnRpbmcKbXVsdGlwbGUgdHJhbnNjb2Rl
cnMuIEJ1dCBpdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIHNjZW5hcmlvIGFuZCB0aW1pbmcgb2YKZW5h
YmxpbmcgYW5kIGRpc2FibGluZyBQU1IuIEFuZCBpdCBub3Qgc3VwcG9ydCBtdWx0aXBsZSBwaXBl
cyB3aXRoCmEgc2luZ2xlIHRyYW5zY29kZXIgUFNSIGNhc2UgeWV0LgoKdjI6IEZpeCBpbmRlbnRh
dGlvbiBhbmQgYWRkIGNvbW1lbnRzCnYzOiBSZW1vdmUgQmxhbmsgbGluZQp2NDogUmViYXNlZAp2
NTogUmViYXNlZCBhbmQgQWRkcmVzc2VkIEFuc2h1bWFuJ3MgcmV2aWV3IGNvbW1lbnQuCiAgICAt
IE1vdmUgY2FsbGluZyBvZiBpbnRlbF9wc3JfaW5pdCgpIHRvIGludGVsX2RwX2luaXRfY29ubmVj
dG9yKCkKdjY6IEFkZHJlc3MgQW5zaHVtYW4ncyByZXZpZXcgY29tbWVudHMKICAgLSBSZW1vdmUg
d3JvbmcgY29tbWVudHMgYW5kIGFkZCBjb21tZW50cyBmb3IgYSBsaW1pdCBvZiBzdXBwb3J0aW5n
IG9mCiAgICAgYSBzaW5nbGUgcGlwZSBQU1IKdjc6IFVwZGF0ZSBpbnRlbF9wc3JfY29tcHV0ZV9j
b25maWcoKSBmb3Igc3VwcG9ydGluZyBtdWx0aXBsZSB0cmFuc2NvZGVyCiAgICBQU1Igb24gQkRX
Kwp2ODogQWRkcmVzcyBBbnNodW1hbidzIHJldmlldyBjb21tZW50cwogICAtIFJlcGxhY2UgRFJN
X0RFQlVHX0tNUyB3aXRoIGRybV9kYmdfa21zKCkgLyBEUk1fV0FSTiB3aXRoIGRybV93YXJuKCkK
djk6IEZpeCBjb21taXQgbWVzc2FnZQp2MTA6IFJlYmFzZWQKdjExOiBBZGRyZXNzIEpvc2UncyBy
ZXZpZXcgY29tbWVudC4KICAtIFJlb3JkZXIgY2FsbGluZyBvcmRlciBvZiBpbnRlbF9wc3IyX3By
b2dyYW1fdHJhbnNfbWFuX3Rya19jdGwoKS4KICAtIEluIG9yZGVyIHRvIHJlZHVjZSBjaGFuZ2Vz
IGtlZXAgdGhlIG9sZCBuYW1lIGZvciBkcm1faTkxNV9wcml2YXRlLgogIC0gQ2hhbmdlIHJlc3Ry
aWN0aW9ucyBvZiBtdWx0aXBsZSBpbnN0YW5jZXMgb2YgUFNSLgp2MTI6IEFkZHJlc3MgSm9zZSdz
IHJldmlldyBjb21tZW50LgogIC0gQ2hhbmdlIHRoZSBjYWxsaW5nIG9mIGludGVsX3BzcjJfcHJv
Z3JhbV90cmFuc19tYW5fdHJrX2N0bCgpIGludG8KICAgIGNvbW1pdF9waXBlX2NvbmZpZygpLgog
IC0gQ2hhbmdlIGEgY2hlY2tpbmcgb3JkZXIgb2YgQ0FOX1BTUigpIGFuZCBjb25uZWN0b3Jfc3Rh
dHVzIHRvIG9yaWdpbmFsCiAgICBvbiBpOTE1X3Bzcl9zaW5rX3N0YXR1c19zaG93KCkuCiAgLSBE
cm9wIHVubmVlZGVkIGludGVsX2RwX3VwZGF0ZV9waXBlKCkgZnVuY3Rpb24uCiAgLSBJbiBvcmRl
ciB0byB3YWl0IGEgc3BlY2lmaWMgZW5jb2RlciB3aGljaCBiZWxvbmcgdG8gY3J0Y19zdGF0ZSBv
bgogICAgaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUoKSwgYWRkIGNoZWNraW5nIG9mIGVuY29kZXIu
CiAgLSBBZGQgYW4gd2hpdGVzcGFjZSB0byBjb21tZW50cy4KdjEzOiBSZWJhc2VkIGFuZCBBZGRy
ZXNzIEpvc2UncyByZXZpZXcgY29tbWVudC4KICAtIEFkZCBhbmQgdXNlIGZvcl9lYWNoX2ludGVs
X3Bzcl9lbmFibGVkX2VuY29kZXIoKSBtYWNyby4KICAtIEluIG9yZGVyIHRvIHVzZSBjb3JyZWN0
IGZyb250YnVmZmVyX2JpdCBmb3IgZWFjaCBwaXBlLAogICAgZml4IGludGVsX3Bzcl9pbnZhbGlk
YXRlKCkgYW5kIGludGVsX3Bzcl9mbHVzaCgpLgogIC0gUmVtb3ZlIHJlZHVuZGFudCBvciB1bm5l
ZWRlZCBjb2Rlcy4KICAtIFVwZGF0ZSBjb21tZW50cy4KdjE0OiBBZGRyZXNzIEpvc2UncyByZXZp
ZXcgY29tbWVudAogIC0gQWRkIGFuZCB1c2UgZm9yX2VhY2hfaW50ZWxfZW5jb2Rlcl9jYW5fcHNy
KCkgbWFjcm8gYW5kCiAgICBmb3JfZWFjaF9pbnRlbF9lbmNvZGVyX21hc2tfY2FuX3BzcigpIG1h
Y3JvLgogIC0gQWRkIHNvdXJjZV9zdXBwb3J0IG1lbWJlciB2YXJpYWJsZSBpbnRvIGludGVsX3Bz
ciBzdHJ1Y3R1cmUuCiAgLSBVcGRhdGUgQ0FOX1BTUigpIG1hY3JvIHRoYXQgY2hlY2tzIHNvdXJj
ZV9zdXBwb3J0LgogIC0gTW92ZSBlbmNvZGVyJ3MgUFNSIGF2YWlsaXR5IGNoZWNrIHRvIHBzcl9p
bml0KCkgZnJvbQogICAgcHNyX2NvbXB1dGVfY29uZmlnKCkuCiAgLSBSZW1vdmUgcmVkdW5kYW50
IG9yIHVubmVlZGVkIGNvZGVzLgp2MTU6IFJlbW92ZSB3cm9uZyBtdXRleCBsb2NrL3VubG9jayBv
ZiBQU1IgZnJvbQogICAgIGludGVsX3BzcjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bCgpCgpT
aWduZWQtb2ZmLWJ5OiBHd2FuLWd5ZW9uZyBNdW4gPGd3YW4tZ3llb25nLm11bkBpbnRlbC5jb20+
CkNjOiBKb3PDqSBSb2JlcnRvIGRlIFNvdXphIDxqb3NlLnNvdXphQGludGVsLmNvbT4KQ2M6IEp1
aGEtUGVra2EgSGVpa2tpbGEgPGp1aGFwZWtrYS5oZWlra2lsYUBnbWFpbC5jb20+CkNjOiBBbnNo
dW1hbiBHdXB0YSA8YW5zaHVtYW4uZ3VwdGFAaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogQW5zaHVt
YW4gR3VwdGEgPGFuc2h1bWFuLmd1cHRhQGludGVsLmNvbT4KLS0tCiBkcml2ZXJzL2dwdS9kcm0v
aTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYyAgfCAgIDIgLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggIHwgICA5ICsKIC4uLi9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jICB8ICA5NSArKy0KIC4uLi9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICA1MSArKwogZHJpdmVycy9ncHUvZHJtL2k5MTUv
ZGlzcGxheS9pbnRlbF9kcC5jICAgICAgIHwgIDEwICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3Bzci5jICAgICAgfCA2MDAgKysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJz
L2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oICAgICAgfCAgMTAgKy0KIGRyaXZlcnMv
Z3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfc3ByaXRlLmMgICB8ICAgNiArLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvaTkxNV9kcnYuaCAgICAgICAgICAgICAgIHwgIDM4IC0tCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2lycS5jICAgICAgICAgICAgICAgfCAgNDIgKy0KIDEwIGZpbGVzIGNo
YW5nZWQsIDQ4NyBpbnNlcnRpb25zKCspLCAzNzYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXkuYwppbmRleCBhY2E5NjRmN2JhNzIuLjky
YzE0ZjNmMGFiZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9kaXNwbGF5LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNw
bGF5LmMKQEAgLTE0MTQ1LDggKzE0MTQ1LDYgQEAgc3RhdGljIHZvaWQgaW50ZWxfc2V0dXBfb3V0
cHV0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJCWludGVsX2R2b19pbml0
KGRldl9wcml2KTsKIAl9CiAKLQlpbnRlbF9wc3JfaW5pdChkZXZfcHJpdik7Ci0KIAlmb3JfZWFj
aF9pbnRlbF9lbmNvZGVyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CiAJCWVuY29kZXItPmJh
c2UucG9zc2libGVfY3J0Y3MgPQogCQkJaW50ZWxfZW5jb2Rlcl9wb3NzaWJsZV9jcnRjcyhlbmNv
ZGVyKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlz
cGxheS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmgKaW5k
ZXggNjRmZmEzNDU0NGE3Li5jNzJlNDFiNjEzNDkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCkBAIC00MTcsMTAgKzQxNywxOSBAQCBlbnVtIHBoeV9m
aWEgewogCQlmb3JfZWFjaF9pZigoZW5jb2Rlcl9tYXNrKSAmCQkJCVwKIAkJCSAgICBkcm1fZW5j
b2Rlcl9tYXNrKCZpbnRlbF9lbmNvZGVyLT5iYXNlKSkKIAorI2RlZmluZSBmb3JfZWFjaF9pbnRl
bF9lbmNvZGVyX21hc2tfY2FuX3BzcihkZXYsIGludGVsX2VuY29kZXIsIGVuY29kZXJfbWFzaykg
XAorCWxpc3RfZm9yX2VhY2hfZW50cnkoKGludGVsX2VuY29kZXIpLCAmKGRldiktPm1vZGVfY29u
ZmlnLmVuY29kZXJfbGlzdCwgYmFzZS5oZWFkKSBcCisJCWZvcl9lYWNoX2lmKCgoZW5jb2Rlcl9t
YXNrKSAmIGRybV9lbmNvZGVyX21hc2soJihpbnRlbF9lbmNvZGVyKS0+YmFzZSkpICYmIFwKKwkJ
CSAgICBpbnRlbF9lbmNvZGVyX2Nhbl9wc3IoaW50ZWxfZW5jb2RlcikpCisKICNkZWZpbmUgZm9y
X2VhY2hfaW50ZWxfZHAoZGV2LCBpbnRlbF9lbmNvZGVyKQkJCVwKIAlmb3JfZWFjaF9pbnRlbF9l
bmNvZGVyKGRldiwgaW50ZWxfZW5jb2RlcikJCVwKIAkJZm9yX2VhY2hfaWYoaW50ZWxfZW5jb2Rl
cl9pc19kcChpbnRlbF9lbmNvZGVyKSkKIAorI2RlZmluZSBmb3JfZWFjaF9pbnRlbF9lbmNvZGVy
X2Nhbl9wc3IoZGV2LCBpbnRlbF9lbmNvZGVyKSBcCisJZm9yX2VhY2hfaW50ZWxfZW5jb2Rlcigo
ZGV2KSwgKGludGVsX2VuY29kZXIpKSBcCisJCWZvcl9lYWNoX2lmKGludGVsX2VuY29kZXJfY2Fu
X3BzcihpbnRlbF9lbmNvZGVyKSkKKwogI2RlZmluZSBmb3JfZWFjaF9pbnRlbF9jb25uZWN0b3Jf
aXRlcihpbnRlbF9jb25uZWN0b3IsIGl0ZXIpIFwKIAl3aGlsZSAoKGludGVsX2Nvbm5lY3RvciA9
IHRvX2ludGVsX2Nvbm5lY3Rvcihkcm1fY29ubmVjdG9yX2xpc3RfaXRlcl9uZXh0KGl0ZXIpKSkp
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxh
eV9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlf
ZGVidWdmcy5jCmluZGV4IGQ2MmIxOGQ1ZWNkOC4uYjFiZGExZjVlZjE2IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfZGVidWdmcy5jCisrKyBi
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV9kZWJ1Z2ZzLmMKQEAg
LTI0OSwxMiArMjQ5LDExIEBAIHN0YXRpYyBpbnQgaTkxNV9wc3Jfc2lua19zdGF0dXNfc2hvdyhz
dHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCiAJCSJzaW5rIGludGVybmFsIGVycm9yIiwK
IAl9OwogCXN0cnVjdCBkcm1fY29ubmVjdG9yICpjb25uZWN0b3IgPSBtLT5wcml2YXRlOwotCXN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRvX2k5MTUoY29ubmVjdG9yLT5kZXYp
OwogCXN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAgPQogCQlpbnRlbF9hdHRhY2hlZF9kcCh0b19p
bnRlbF9jb25uZWN0b3IoY29ubmVjdG9yKSk7CiAJaW50IHJldDsKIAotCWlmICghQ0FOX1BTUihk
ZXZfcHJpdikpIHsKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKSB7CiAJCXNlcV9wdXRzKG0sICJQ
U1IgVW5zdXBwb3J0ZWRcbiIpOwogCQlyZXR1cm4gLUVOT0RFVjsKIAl9CkBAIC0yODAsMTIgKzI3
OSwxMyBAQCBzdGF0aWMgaW50IGk5MTVfcHNyX3Npbmtfc3RhdHVzX3Nob3coc3RydWN0IHNlcV9m
aWxlICptLCB2b2lkICpkYXRhKQogREVGSU5FX1NIT1dfQVRUUklCVVRFKGk5MTVfcHNyX3Npbmtf
c3RhdHVzKTsKIAogc3RhdGljIHZvaWQKLXBzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdiwgc3RydWN0IHNlcV9maWxlICptKQorcHNyX3NvdXJjZV9zdGF0
dXMoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwgc3RydWN0IHNlcV9maWxlICptKQogewotCXUz
MiB2YWwsIHN0YXR1c192YWw7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0g
ZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJY29uc3QgY2hhciAqc3RhdHVzID0gInVua25vd24iOwor
CXUzMiB2YWwsIHN0YXR1c192YWw7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQp
IHsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKIAkJc3RhdGljIGNvbnN0IGNo
YXIgKiBjb25zdCBsaXZlX3N0YXR1c1tdID0gewogCQkJIklETEUiLAogCQkJIkNBUFRVUkUiLApA
QCAtMzAwLDcgKzMwMCw3IEBAIHBzcl9zb3VyY2Vfc3RhdHVzKHN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiwgc3RydWN0IHNlcV9maWxlICptKQogCQkJIlRHX09OIgogCQl9OwogCQl2
YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSMl9TVEFUVVMoZGV2
X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIEVEUF9QU1IyX1NUQVRVUyhpbnRlbF9k
cC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJc3RhdHVzX3ZhbCA9ICh2YWwgJiBFRFBfUFNSMl9TVEFU
VVNfU1RBVEVfTUFTSykgPj4KIAkJCSAgICAgIEVEUF9QU1IyX1NUQVRVU19TVEFURV9TSElGVDsK
IAkJaWYgKHN0YXR1c192YWwgPCBBUlJBWV9TSVpFKGxpdmVfc3RhdHVzKSkKQEAgLTMxNyw3ICsz
MTcsNyBAQCBwc3Jfc291cmNlX3N0YXR1cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYsIHN0cnVjdCBzZXFfZmlsZSAqbSkKIAkJCSJTUkRFTlRfT04iLAogCQl9OwogCQl2YWwgPSBp
bnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+
cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50
cmFuc2NvZGVyKSk7CiAJCXN0YXR1c192YWwgPSAodmFsICYgRURQX1BTUl9TVEFUVVNfU1RBVEVf
TUFTSykgPj4KIAkJCSAgICAgIEVEUF9QU1JfU1RBVFVTX1NUQVRFX1NISUZUOwogCQlpZiAoc3Rh
dHVzX3ZhbCA8IEFSUkFZX1NJWkUobGl2ZV9zdGF0dXMpKQpAQCAtMzI3LDIxICszMjcsMTggQEAg
cHNyX3NvdXJjZV9zdGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCBzdHJ1
Y3Qgc2VxX2ZpbGUgKm0pCiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBTUiBzdGF0dXM6ICVzIFsw
eCUwOHhdXG4iLCBzdGF0dXMsIHZhbCk7CiB9CiAKLXN0YXRpYyBpbnQgaTkxNV9lZHBfcHNyX3N0
YXR1cyhzdHJ1Y3Qgc2VxX2ZpbGUgKm0sIHZvaWQgKmRhdGEpCitzdGF0aWMgaW50IGludGVsX3Bz
cl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCBzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQog
ewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5w
cml2YXRlKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCXN0
cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCWludGVsX3dha2VyZWZfdCB3
YWtlcmVmOwogCWNvbnN0IGNoYXIgKnN0YXR1czsKIAlib29sIGVuYWJsZWQ7CiAJdTMyIHZhbDsK
IAotCWlmICghSEFTX1BTUihkZXZfcHJpdikpCi0JCXJldHVybiAtRU5PREVWOwotCiAJc2VxX3By
aW50ZihtLCAiU2luayBzdXBwb3J0OiAlcyIsIHllc25vKHBzci0+c2lua19zdXBwb3J0KSk7Ci0J
aWYgKHBzci0+ZHApCi0JCXNlcV9wcmludGYobSwgIiBbMHglMDJ4XSIsIHBzci0+ZHAtPnBzcl9k
cGNkWzBdKTsKKwlpZiAocHNyLT5zaW5rX3N1cHBvcnQpCisJCXNlcV9wcmludGYobSwgIiBbMHgl
MDJ4XSIsIGludGVsX2RwLT5wc3JfZHBjZFswXSk7CiAJc2VxX3B1dHMobSwgIlxuIik7CiAKIAlp
ZiAoIXBzci0+c2lua19zdXBwb3J0KQpAQCAtMzY1LDE2ICszNjIsMTYgQEAgc3RhdGljIGludCBp
OTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAogCWlm
IChwc3ItPnBzcjJfZW5hYmxlZCkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAot
CQkJCSAgICBFRFBfUFNSMl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAg
IEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJZW5hYmxlZCA9IHZh
bCAmIEVEUF9QU1IyX0VOQUJMRTsKIAl9IGVsc2UgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRl
dl9wcml2LAotCQkJCSAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsK
KwkJCQkgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCWVuYWJs
ZWQgPSB2YWwgJiBFRFBfUFNSX0VOQUJMRTsKIAl9CiAJc2VxX3ByaW50ZihtLCAiU291cmNlIFBT
UiBjdGw6ICVzIFsweCUwOHhdXG4iLAogCQkgICBlbmFibGVkZGlzYWJsZWQoZW5hYmxlZCksIHZh
bCk7Ci0JcHNyX3NvdXJjZV9zdGF0dXMoZGV2X3ByaXYsIG0pOworCXBzcl9zb3VyY2Vfc3RhdHVz
KGludGVsX2RwLCBtKTsKIAlzZXFfcHJpbnRmKG0sICJCdXN5IGZyb250YnVmZmVyIGJpdHM6IDB4
JTA4eFxuIiwKIAkJICAgcHNyLT5idXN5X2Zyb250YnVmZmVyX2JpdHMpOwogCkBAIC0zODMsNyAr
MzgwLDcgQEAgc3RhdGljIGludCBpOTE1X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAq
bSwgdm9pZCAqZGF0YSkKIAkgKi8KIAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJP
QURXRUxMKGRldl9wcml2KSkgewogCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJ
CSAgICBFRFBfUFNSX1BFUkZfQ05UKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCSAg
ICBFRFBfUFNSX1BFUkZfQ05UKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQl2YWwgJj0g
RURQX1BTUl9QRVJGX0NOVF9NQVNLOwogCQlzZXFfcHJpbnRmKG0sICJQZXJmb3JtYW5jZSBjb3Vu
dGVyOiAldVxuIiwgdmFsKTsKIAl9CkBAIC00MDQsNyArNDAxLDcgQEAgc3RhdGljIGludCBpOTE1
X2VkcF9wc3Jfc3RhdHVzKHN0cnVjdCBzZXFfZmlsZSAqbSwgdm9pZCAqZGF0YSkKIAkJICovCiAJ
CWZvciAoZnJhbWUgPSAwOyBmcmFtZSA8IFBTUjJfU1VfU1RBVFVTX0ZSQU1FUzsgZnJhbWUgKz0g
MykgewogCQkJdmFsID0gaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwKLQkJCQkJICAgIFBTUjJfU1Vf
U1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKKwkJCQkJICAgIFBTUjJf
U1VfU1RBVFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2RlciwgZnJhbWUpKTsKIAkJCXN1X2ZyYW1l
c192YWxbZnJhbWUgLyAzXSA9IHZhbDsKIAkJfQogCkBAIC00MzAsMjMgKzQyNyw1MCBAQCBzdGF0
aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0IHNlcV9maWxlICptLCB2b2lkICpkYXRh
KQogCXJldHVybiAwOwogfQogCitzdGF0aWMgaW50IGk5MTVfZWRwX3Bzcl9zdGF0dXMoc3RydWN0
IHNlcV9maWxlICptLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdiA9IG5vZGVfdG9faTkxNShtLT5wcml2YXRlKTsKKwlzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwID0gTlVMTDsKKwlzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKKworCWlmICgh
SEFTX1BTUihkZXZfcHJpdikpCisJCXJldHVybiAtRU5PREVWOworCisJLyogRmluZCB0aGUgZmly
c3QgRURQIHdoaWNoIHN1cHBvcnRzIFBTUiAqLworCWZvcl9lYWNoX2ludGVsX2VuY29kZXJfY2Fu
X3BzcigmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQlpbnRlbF9kcCA9IGVuY190b19pbnRl
bF9kcChlbmNvZGVyKTsKKwkJYnJlYWs7CisJfQorCisJaWYgKCFpbnRlbF9kcCkKKwkJcmV0dXJu
IC1FTk9ERVY7CisKKwlyZXR1cm4gaW50ZWxfcHNyX3N0YXR1cyhtLCBpbnRlbF9kcCk7Cit9CisK
IHN0YXRpYyBpbnQKIGk5MTVfZWRwX3Bzcl9kZWJ1Z19zZXQodm9pZCAqZGF0YSwgdTY0IHZhbCkK
IHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkYXRhOworCXN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyOwogCWludGVsX3dha2VyZWZfdCB3YWtlcmVmOwotCWludCBy
ZXQ7CisJaW50IHJldCA9IC1FTk9ERVY7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYpKQotCQly
ZXR1cm4gLUVOT0RFVjsKKwlpZiAoIUhBU19QU1IoZGV2X3ByaXYpKQorCQlyZXR1cm4gcmV0Owog
Ci0JZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJTZXR0aW5nIFBTUiBkZWJ1ZyB0byAlbGx4
XG4iLCB2YWwpOworCWZvcl9lYWNoX2ludGVsX2VuY29kZXJfY2FuX3BzcigmZGV2X3ByaXYtPmRy
bSwgZW5jb2RlcikgeworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVs
X2RwKGVuY29kZXIpOwogCi0Jd2FrZXJlZiA9IGludGVsX3J1bnRpbWVfcG1fZ2V0KCZkZXZfcHJp
di0+cnVudGltZV9wbSk7CisJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiU2V0dGluZyBQ
U1IgZGVidWcgdG8gJWxseFxuIiwgdmFsKTsKIAotCXJldCA9IGludGVsX3Bzcl9kZWJ1Z19zZXQo
ZGV2X3ByaXYsIHZhbCk7CisJCXdha2VyZWYgPSBpbnRlbF9ydW50aW1lX3BtX2dldCgmZGV2X3By
aXYtPnJ1bnRpbWVfcG0pOwogCi0JaW50ZWxfcnVudGltZV9wbV9wdXQoJmRldl9wcml2LT5ydW50
aW1lX3BtLCB3YWtlcmVmKTsKKwkJLy8gVE9ETzogc3BsaXQgdG8gZWFjaCB0cmFuc2NvZGVyJ3Mg
UFNSIGRlYnVnIHN0YXRlCisJCXJldCA9IGludGVsX3Bzcl9kZWJ1Z19zZXQoaW50ZWxfZHAsIHZh
bCk7CisKKwkJaW50ZWxfcnVudGltZV9wbV9wdXQoJmRldl9wcml2LT5ydW50aW1lX3BtLCB3YWtl
cmVmKTsKKwl9CiAKIAlyZXR1cm4gcmV0OwogfQpAQCAtNDU1LDEyICs0NzksMjAgQEAgc3RhdGlj
IGludAogaTkxNV9lZHBfcHNyX2RlYnVnX2dldCh2b2lkICpkYXRhLCB1NjQgKnZhbCkKIHsKIAlz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkYXRhOworCXN0cnVjdCBpbnRlbF9l
bmNvZGVyICplbmNvZGVyOwogCi0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKKwlpZiAoIUhBU19Q
U1IoZGV2X3ByaXYpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAotCSp2YWwgPSBSRUFEX09OQ0UoZGV2
X3ByaXYtPnBzci5kZWJ1Zyk7Ci0JcmV0dXJuIDA7CisJZm9yX2VhY2hfaW50ZWxfZW5jb2Rlcl9j
YW5fcHNyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJCXN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAgPSBlbmNfdG9faW50ZWxfZHAoZW5jb2Rlcik7CisKKwkJLy8gVE9ETzogc3BsaXQgdG8g
ZWFjaCB0cmFuc2NvZGVyJ3MgUFNSIGRlYnVnIHN0YXRlCisJCSp2YWwgPSBSRUFEX09OQ0UoaW50
ZWxfZHAtPnBzci5kZWJ1Zyk7CisJCXJldHVybiAwOworCX0KKworCXJldHVybiAtRU5PREVWOwog
fQogCiBERUZJTkVfU0lNUExFX0FUVFJJQlVURShpOTE1X2VkcF9wc3JfZGVidWdfZm9wcywKQEAg
LTEyMzMsOSArMTI2NSw2IEBAIHN0YXRpYyB2b2lkIGRycnNfc3RhdHVzX3Blcl9jcnRjKHN0cnVj
dCBzZXFfZmlsZSAqbSwKIAkJLyogZGlzYWJsZV9kcnJzKCkgd2lsbCBtYWtlIGRycnMtPmRwIE5V
TEwgKi8KIAkJaWYgKCFkcnJzLT5kcCkgewogCQkJc2VxX3B1dHMobSwgIklkbGVuZXNzIERSUlM6
IERpc2FibGVkXG4iKTsKLQkJCWlmIChkZXZfcHJpdi0+cHNyLmVuYWJsZWQpCi0JCQkJc2VxX3B1
dHMobSwKLQkJCQkiXHRBcyBQU1IgaXMgZW5hYmxlZCwgRFJSUyBpcyBub3QgZW5hYmxlZFxuIik7
CiAJCQltdXRleF91bmxvY2soJmRycnMtPm11dGV4KTsKIAkJCXJldHVybjsKIAkJfQpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaAppbmRl
eCAzOTM5Nzc0OGI0YjAuLjMwN2ZmNGI3NzFmNCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKQEAgLTE0MTUsNiArMTQxNSw0MyBA
QCBzdHJ1Y3QgaW50ZWxfcHBzIHsKIAlzdHJ1Y3QgZWRwX3Bvd2VyX3NlcSBwcHNfZGVsYXlzOwog
fTsKIAorc3RydWN0IGludGVsX3BzciB7CisJLyogTXV0ZXggZm9yIFBTUiBzdGF0ZSBvZiB0aGUg
dHJhbnNjb2RlciAqLworCXN0cnVjdCBtdXRleCBsb2NrOworCisjZGVmaW5lIEk5MTVfUFNSX0RF
QlVHX01PREVfTUFTSwkweDBmCisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0RFRkFVTFQJCTB4MDAK
KyNkZWZpbmUgSTkxNV9QU1JfREVCVUdfRElTQUJMRQkJMHgwMQorI2RlZmluZSBJOTE1X1BTUl9E
RUJVR19FTkFCTEUJCTB4MDIKKyNkZWZpbmUgSTkxNV9QU1JfREVCVUdfRk9SQ0VfUFNSMQkweDAz
CisjZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0lSUQkJMHgxMAorCisJdTMyIGRlYnVnOworCWJvb2wg
c2lua19zdXBwb3J0OworCWJvb2wgc291cmNlX3N1cHBvcnQ7CisJYm9vbCBlbmFibGVkOworCWVu
dW0gcGlwZSBwaXBlOworCWVudW0gdHJhbnNjb2RlciB0cmFuc2NvZGVyOworCWJvb2wgYWN0aXZl
OworCXN0cnVjdCB3b3JrX3N0cnVjdCB3b3JrOworCXVuc2lnbmVkIGludCBidXN5X2Zyb250YnVm
ZmVyX2JpdHM7CisJYm9vbCBzaW5rX3BzcjJfc3VwcG9ydDsKKwlib29sIGxpbmtfc3RhbmRieTsK
Kwlib29sIGNvbG9yaW1ldHJ5X3N1cHBvcnQ7CisJYm9vbCBwc3IyX2VuYWJsZWQ7CisJYm9vbCBw
c3IyX3NlbF9mZXRjaF9lbmFibGVkOworCXU4IHNpbmtfc3luY19sYXRlbmN5OworCWt0aW1lX3Qg
bGFzdF9lbnRyeV9hdHRlbXB0OworCWt0aW1lX3QgbGFzdF9leGl0OworCWJvb2wgc2lua19ub3Rf
cmVsaWFibGU7CisJYm9vbCBpcnFfYXV4X2Vycm9yOworCXUxNiBzdV94X2dyYW51bGFyaXR5Owor
CWJvb2wgZGMzY29fZW5hYmxlZDsKKwl1MzIgZGMzY29fZXhpdF9kZWxheTsKKwlzdHJ1Y3QgZGVs
YXllZF93b3JrIGRjM2NvX3dvcms7CisJc3RydWN0IGRybV9kcF92c2Nfc2RwIHZzYzsKK307CisK
IHN0cnVjdCBpbnRlbF9kcCB7CiAJaTkxNV9yZWdfdCBvdXRwdXRfcmVnOwogCXUzMiBEUDsKQEAg
LTE1MTcsNiArMTU1NCw4IEBAIHN0cnVjdCBpbnRlbF9kcCB7CiAJYm9vbCBob2JsX2FjdGl2ZTsK
IAogCXN0cnVjdCBpbnRlbF9kcF9wY29uX2ZybCBmcmw7CisKKwlzdHJ1Y3QgaW50ZWxfcHNyIHBz
cjsKIH07CiAKIGVudW0gbHNwY29uX3ZlbmRvciB7CkBAIC0xNzUzLDYgKzE3OTIsMTggQEAgZHBf
dG9faTkxNShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXJldHVybiB0b19pOTE1KGRwX3Rv
X2RpZ19wb3J0KGludGVsX2RwKS0+YmFzZS5iYXNlLmRldik7CiB9CiAKKyNkZWZpbmUgQ0FOX1BT
UihpbnRlbF9kcCkJKEhBU19QU1IoZHBfdG9faTkxNShpbnRlbF9kcCkpICYmIFwKKwkJCQkgKGlu
dGVsX2RwKS0+cHNyLnNpbmtfc3VwcG9ydCAmJiBcCisJCQkJIChpbnRlbF9kcCktPnBzci5zb3Vy
Y2Vfc3VwcG9ydCkKKworc3RhdGljIGlubGluZSBib29sIGludGVsX2VuY29kZXJfY2FuX3Bzcihz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKK3sKKwlpZiAoIWludGVsX2VuY29kZXJfaXNf
ZHAoZW5jb2RlcikpCisJCXJldHVybiBmYWxzZTsKKworCXJldHVybiBDQU5fUFNSKGVuY190b19p
bnRlbF9kcChlbmNvZGVyKSk7Cit9CisKIHN0YXRpYyBpbmxpbmUgc3RydWN0IGludGVsX2RpZ2l0
YWxfcG9ydCAqCiBoZG1pX3RvX2RpZ19wb3J0KHN0cnVjdCBpbnRlbF9oZG1pICppbnRlbF9oZG1p
KQogewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5j
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kcC5jCmluZGV4IGEzMzg3MjBj
ZWUyZS4uOTY3ODlmYmQ0YzA2IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2RwLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9k
cC5jCkBAIC0xNjYzLDEyICsxNjYzLDEwIEBAIHZvaWQgaW50ZWxfZHBfY29tcHV0ZV9wc3JfdnNj
X3NkcChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkJCSAgY29uc3Qgc3RydWN0IGRybV9j
b25uZWN0b3Jfc3RhdGUgKmNvbm5fc3RhdGUsCiAJCQkJICBzdHJ1Y3QgZHJtX2RwX3ZzY19zZHAg
KnZzYykKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1
KGludGVsX2RwKTsKLQogCXZzYy0+c2RwX3R5cGUgPSBEUF9TRFBfVlNDOwogCi0JaWYgKGRldl9w
cml2LT5wc3IucHNyMl9lbmFibGVkKSB7Ci0JCWlmIChkZXZfcHJpdi0+cHNyLmNvbG9yaW1ldHJ5
X3N1cHBvcnQgJiYKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwkJaWYgKGlu
dGVsX2RwLT5wc3IuY29sb3JpbWV0cnlfc3VwcG9ydCAmJgogCQkgICAgaW50ZWxfZHBfbmVlZHNf
dnNjX3NkcChjcnRjX3N0YXRlLCBjb25uX3N0YXRlKSkgewogCQkJLyogW1BTUjIsICtDb2xvcmlt
ZXRyeV0gKi8KIAkJCWludGVsX2RwX2NvbXB1dGVfdnNjX2NvbG9yaW1ldHJ5KGNydGNfc3RhdGUs
IGNvbm5fc3RhdGUsCkBAIC0yMzU5LDcgKzIzNTcsNyBAQCBib29sIGludGVsX2RwX2luaXRpYWxf
ZmFzdHNldF9jaGVjayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlciwKIAkJcmV0dXJuIGZh
bHNlOwogCX0KIAotCWlmIChDQU5fUFNSKGk5MTUpICYmIGludGVsX2RwX2lzX2VkcChpbnRlbF9k
cCkpIHsKKwlpZiAoQ0FOX1BTUihpbnRlbF9kcCkgJiYgaW50ZWxfZHBfaXNfZWRwKGludGVsX2Rw
KSkgewogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiRm9yY2luZyBmdWxsIG1vZGVzZXQgdG8g
Y29tcHV0ZSBQU1Igc3RhdGVcbiIpOwogCQljcnRjX3N0YXRlLT51YXBpLm1vZGVfY2hhbmdlZCA9
IHRydWU7CiAJCXJldHVybiBmYWxzZTsKQEAgLTY2NDEsNiArNjYzOSw4IEBAIGludGVsX2RwX2lu
aXRfY29ubmVjdG9yKHN0cnVjdCBpbnRlbF9kaWdpdGFsX3BvcnQgKmRpZ19wb3J0LAogCWludGVs
X2RwLT5mcmwuaXNfdHJhaW5lZCA9IGZhbHNlOwogCWludGVsX2RwLT5mcmwudHJhaW5lZF9yYXRl
X2dicHMgPSAwOwogCisJaW50ZWxfcHNyX2luaXQoaW50ZWxfZHApOworCiAJcmV0dXJuIHRydWU7
CiAKIGZhaWw6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X3Bzci5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9wc3IuYwppbmRleCAy
YzM2NWI3NzhmNzQuLmJmNDhlYjRlMWE4NCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9wc3IuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX3Bzci5jCkBAIC04MCw5ICs4MCwxMSBAQAogICogdXNlIHBhZ2UgZmxpcHMuCiAgKi8K
IAotc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1KQorc3RhdGljIGJvb2wgcHNyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBpbnRlbF9kcCAq
aW50ZWxfZHApCiB7Ci0Jc3dpdGNoIChpOTE1LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19N
T0RFX01BU0spIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IGRwX3RvX2k5MTUo
aW50ZWxfZHApOworCisJc3dpdGNoIChpbnRlbF9kcC0+cHNyLmRlYnVnICYgSTkxNV9QU1JfREVC
VUdfTU9ERV9NQVNLKSB7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19ERUZBVUxUOgogCQlyZXR1cm4g
aTkxNS0+cGFyYW1zLmVuYWJsZV9wc3I7CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19ESVNBQkxFOgpA
QCAtOTIsOSArOTQsOSBAQCBzdGF0aWMgYm9vbCBwc3JfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmk5MTUpCiAJfQogfQogCi1zdGF0aWMgYm9vbCBwc3IyX2dsb2JhbF9l
bmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyBib29sIHBz
cjJfZ2xvYmFsX2VuYWJsZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlzd2l0Y2gg
KGRldl9wcml2LT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0spIHsKKwlzd2l0
Y2ggKGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0spIHsKIAlj
YXNlIEk5MTVfUFNSX0RFQlVHX0RJU0FCTEU6CiAJY2FzZSBJOTE1X1BTUl9ERUJVR19GT1JDRV9Q
U1IxOgogCQlyZXR1cm4gZmFsc2U7CkBAIC0xMDMsMTEgKzEwNSwxMiBAQCBzdGF0aWMgYm9vbCBw
c3IyX2dsb2JhbF9lbmFibGVkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAl9
CiB9CiAKLXN0YXRpYyB2b2lkIHBzcl9pcnFfY29udHJvbChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBwc3JfaXJxX2NvbnRyb2woc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90
b19pOTE1KGludGVsX2RwKTsKIAllbnVtIHRyYW5zY29kZXIgdHJhbnNfc2hpZnQ7Ci0JdTMyIG1h
c2ssIHZhbDsKIAlpOTE1X3JlZ190IGltcl9yZWc7CisJdTMyIG1hc2ssIHZhbDsKIAogCS8qCiAJ
ICogZ2VuMTIrIGhhcyByZWdpc3RlcnMgcmVsYXRpdmUgdG8gdHJhbnNjb2RlciBhbmQgb25lIHBl
ciB0cmFuc2NvZGVyCkBAIC0xMTYsMTQgKzExOSwxNCBAQCBzdGF0aWMgdm9pZCBwc3JfaXJxX2Nv
bnRyb2woc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCSAqLwogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDEyKSB7CiAJCXRyYW5zX3NoaWZ0ID0gMDsKLQkJaW1yX3JlZyA9
IFRSQU5TX1BTUl9JTVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJaW1yX3JlZyA9IFRS
QU5TX1BTUl9JTVIoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9IGVsc2UgewotCQl0cmFu
c19zaGlmdCA9IGRldl9wcml2LT5wc3IudHJhbnNjb2RlcjsKKwkJdHJhbnNfc2hpZnQgPSBpbnRl
bF9kcC0+cHNyLnRyYW5zY29kZXI7CiAJCWltcl9yZWcgPSBFRFBfUFNSX0lNUjsKIAl9CiAKIAlt
YXNrID0gRURQX1BTUl9FUlJPUih0cmFuc19zaGlmdCk7Ci0JaWYgKGRldl9wcml2LT5wc3IuZGVi
dWcgJiBJOTE1X1BTUl9ERUJVR19JUlEpCisJaWYgKGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1
X1BTUl9ERUJVR19JUlEpCiAJCW1hc2sgfD0gRURQX1BTUl9QT1NUX0VYSVQodHJhbnNfc2hpZnQp
IHwKIAkJCUVEUF9QU1JfUFJFX0VOVFJZKHRyYW5zX3NoaWZ0KTsKIApAQCAtMTcyLDMwICsxNzUs
MzEgQEAgc3RhdGljIHZvaWQgcHNyX2V2ZW50X3ByaW50KHN0cnVjdCBkcm1faTkxNV9wcml2YXRl
ICppOTE1LAogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJtLCAiXHRQU1IgZGlzYWJsZWRcbiIpOwog
fQogCi12b2lkIGludGVsX3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsIHUzMiBwc3JfaWlyKQordm9pZCBpbnRlbF9wc3JfaXJxX2hhbmRsZXIoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwgdTMyIHBzcl9paXIpCiB7Ci0JZW51bSB0cmFuc2NvZGVyIGNw
dV90cmFuc2NvZGVyID0gZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyOworCWVudW0gdHJhbnNjb2Rl
ciBjcHVfdHJhbnNjb2RlciA9IGludGVsX2RwLT5wc3IudHJhbnNjb2RlcjsKKwlzdHJ1Y3QgZHJt
X2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwlrdGltZV90
IHRpbWVfbnMgPSAga3RpbWVfZ2V0KCk7CiAJZW51bSB0cmFuc2NvZGVyIHRyYW5zX3NoaWZ0Owog
CWk5MTVfcmVnX3QgaW1yX3JlZzsKLQlrdGltZV90IHRpbWVfbnMgPSAga3RpbWVfZ2V0KCk7CiAK
IAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSAxMikgewogCQl0cmFuc19zaGlmdCA9IDA7Ci0J
CWltcl9yZWcgPSBUUkFOU19QU1JfSU1SKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJCWlt
cl9yZWcgPSBUUkFOU19QU1JfSU1SKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcik7CiAJfSBlbHNl
IHsKLQkJdHJhbnNfc2hpZnQgPSBkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXI7CisJCXRyYW5zX3No
aWZ0ID0gaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyOwogCQlpbXJfcmVnID0gRURQX1BTUl9JTVI7
CiAJfQogCiAJaWYgKHBzcl9paXIgJiBFRFBfUFNSX1BSRV9FTlRSWSh0cmFuc19zaGlmdCkpIHsK
LQkJZGV2X3ByaXYtPnBzci5sYXN0X2VudHJ5X2F0dGVtcHQgPSB0aW1lX25zOworCQlpbnRlbF9k
cC0+cHNyLmxhc3RfZW50cnlfYXR0ZW1wdCA9IHRpbWVfbnM7CiAJCWRybV9kYmdfa21zKCZkZXZf
cHJpdi0+ZHJtLAogCQkJICAgICJbdHJhbnNjb2RlciAlc10gUFNSIGVudHJ5IGF0dGVtcHQgaW4g
MiB2YmxhbmtzXG4iLAogCQkJICAgIHRyYW5zY29kZXJfbmFtZShjcHVfdHJhbnNjb2RlcikpOwog
CX0KIAogCWlmIChwc3JfaWlyICYgRURQX1BTUl9QT1NUX0VYSVQodHJhbnNfc2hpZnQpKSB7Ci0J
CWRldl9wcml2LT5wc3IubGFzdF9leGl0ID0gdGltZV9uczsKKwkJaW50ZWxfZHAtPnBzci5sYXN0
X2V4aXQgPSB0aW1lX25zOwogCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwKIAkJCSAgICAi
W3RyYW5zY29kZXIgJXNdIFBTUiBleGl0IGNvbXBsZXRlZFxuIiwKIAkJCSAgICB0cmFuc2NvZGVy
X25hbWUoY3B1X3RyYW5zY29kZXIpKTsKQEAgLTIwMyw3ICsyMDcsNyBAQCB2b2lkIGludGVsX3Bz
cl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBwc3Jf
aWlyKQogCQlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA5KSB7CiAJCQl1MzIgdmFsID0gaW50
ZWxfZGVfcmVhZChkZXZfcHJpdiwKIAkJCQkJCVBTUl9FVkVOVChjcHVfdHJhbnNjb2RlcikpOwot
CQkJYm9vbCBwc3IyX2VuYWJsZWQgPSBkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZDsKKwkJCWJv
b2wgcHNyMl9lbmFibGVkID0gaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQ7CiAKIAkJCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBQU1JfRVZFTlQoY3B1X3RyYW5zY29kZXIpLAogCQkJCSAgICAg
ICB2YWwpOwpAQCAtMjE3LDcgKzIyMSw3IEBAIHZvaWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBzcl9paXIpCiAJCWRybV93YXJu
KCZkZXZfcHJpdi0+ZHJtLCAiW3RyYW5zY29kZXIgJXNdIFBTUiBhdXggZXJyb3JcbiIsCiAJCQkg
dHJhbnNjb2Rlcl9uYW1lKGNwdV90cmFuc2NvZGVyKSk7CiAKLQkJZGV2X3ByaXYtPnBzci5pcnFf
YXV4X2Vycm9yID0gdHJ1ZTsKKwkJaW50ZWxfZHAtPnBzci5pcnFfYXV4X2Vycm9yID0gdHJ1ZTsK
IAogCQkvKgogCQkgKiBJZiB0aGlzIGludGVycnVwdGlvbiBpcyBub3QgbWFza2VkIGl0IHdpbGwg
a2VlcApAQCAtMjMxLDcgKzIzNSw3IEBAIHZvaWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVj
dCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwgdTMyIHBzcl9paXIpCiAJCXZhbCB8PSBFRFBf
UFNSX0VSUk9SKHRyYW5zX3NoaWZ0KTsKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIGltcl9y
ZWcsIHZhbCk7CiAKLQkJc2NoZWR1bGVfd29yaygmZGV2X3ByaXYtPnBzci53b3JrKTsKKwkJc2No
ZWR1bGVfd29yaygmaW50ZWxfZHAtPnBzci53b3JrKTsKIAl9CiB9CiAKQEAgLTI5MiwxMiArMjk2
LDYgQEAgdm9pZCBpbnRlbF9wc3JfaW5pdF9kcGNkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAp
CiAJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0KIAkJdG9faTkxNShkcF90b19k
aWdfcG9ydChpbnRlbF9kcCktPmJhc2UuYmFzZS5kZXYpOwogCi0JaWYgKGRldl9wcml2LT5wc3Iu
ZHApIHsKLQkJZHJtX3dhcm4oJmRldl9wcml2LT5kcm0sCi0JCQkgIk1vcmUgdGhhbiBvbmUgZURQ
IHBhbmVsIGZvdW5kLCBQU1Igc3VwcG9ydCBzaG91bGQgYmUgZXh0ZW5kZWRcbiIpOwotCQlyZXR1
cm47Ci0JfQotCiAJZHJtX2RwX2RwY2RfcmVhZCgmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX1NVUFBP
UlQsIGludGVsX2RwLT5wc3JfZHBjZCwKIAkJCSBzaXplb2YoaW50ZWxfZHAtPnBzcl9kcGNkKSk7
CiAKQEAgLTMxOCwxMiArMzE2LDEwIEBAIHZvaWQgaW50ZWxfcHNyX2luaXRfZHBjZChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogCQlyZXR1cm47CiAJfQogCi0JZGV2X3ByaXYtPnBzci5zaW5r
X3N1cHBvcnQgPSB0cnVlOwotCWRldl9wcml2LT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgPQorCWlu
dGVsX2RwLT5wc3Iuc2lua19zdXBwb3J0ID0gdHJ1ZTsKKwlpbnRlbF9kcC0+cHNyLnNpbmtfc3lu
Y19sYXRlbmN5ID0KIAkJaW50ZWxfZHBfZ2V0X3Npbmtfc3luY19sYXRlbmN5KGludGVsX2RwKTsK
IAotCWRldl9wcml2LT5wc3IuZHAgPSBpbnRlbF9kcDsKLQogCWlmIChJTlRFTF9HRU4oZGV2X3By
aXYpID49IDkgJiYKIAkgICAgKGludGVsX2RwLT5wc3JfZHBjZFswXSA9PSBEUF9QU1IyX1dJVEhf
WV9DT09SRF9JU19TVVBQT1JURUQpKSB7CiAJCWJvb2wgeV9yZXEgPSBpbnRlbF9kcC0+cHNyX2Rw
Y2RbMV0gJgpAQCAtMzQxLDE0ICszMzcsMTQgQEAgdm9pZCBpbnRlbF9wc3JfaW5pdF9kcGNkKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJCSAqIFktY29vcmRpbmF0ZSByZXF1aXJlbWVudCBw
YW5lbHMgd2Ugd291bGQgbmVlZCB0byBlbmFibGUKIAkJICogR1RDIGZpcnN0LgogCQkgKi8KLQkJ
ZGV2X3ByaXYtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCA9IHlfcmVxICYmIGFscG07CisJCWludGVs
X2RwLT5wc3Iuc2lua19wc3IyX3N1cHBvcnQgPSB5X3JlcSAmJiBhbHBtOwogCQlkcm1fZGJnX2tt
cygmZGV2X3ByaXYtPmRybSwgIlBTUjIgJXNzdXBwb3J0ZWRcbiIsCi0JCQkgICAgZGV2X3ByaXYt
PnBzci5zaW5rX3BzcjJfc3VwcG9ydCA/ICIiIDogIm5vdCAiKTsKKwkJCSAgICBpbnRlbF9kcC0+
cHNyLnNpbmtfcHNyMl9zdXBwb3J0ID8gIiIgOiAibm90ICIpOwogCi0JCWlmIChkZXZfcHJpdi0+
cHNyLnNpbmtfcHNyMl9zdXBwb3J0KSB7Ci0JCQlkZXZfcHJpdi0+cHNyLmNvbG9yaW1ldHJ5X3N1
cHBvcnQgPQorCQlpZiAoaW50ZWxfZHAtPnBzci5zaW5rX3BzcjJfc3VwcG9ydCkgeworCQkJaW50
ZWxfZHAtPnBzci5jb2xvcmltZXRyeV9zdXBwb3J0ID0KIAkJCQlpbnRlbF9kcF9nZXRfY29sb3Jp
bWV0cnlfc3RhdHVzKGludGVsX2RwKTsKLQkJCWRldl9wcml2LT5wc3Iuc3VfeF9ncmFudWxhcml0
eSA9CisJCQlpbnRlbF9kcC0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkgPQogCQkJCWludGVsX2RwX2dl
dF9zdV94X2dyYW51bGFydGl5KGludGVsX2RwKTsKIAkJfQogCX0KQEAgLTM3NCw3ICszNzAsNyBA
QCBzdGF0aWMgdm9pZCBoc3dfcHNyX3NldHVwX2F1eChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
KQogCUJVSUxEX0JVR19PTihzaXplb2YoYXV4X21zZykgPiAyMCk7CiAJZm9yIChpID0gMDsgaSA8
IHNpemVvZihhdXhfbXNnKTsgaSArPSA0KQogCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwKLQkJ
CSAgICAgICBFRFBfUFNSX0FVWF9EQVRBKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciwgaSA+PiAy
KSwKKwkJCSAgICAgICBFRFBfUFNSX0FVWF9EQVRBKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlciwg
aSA+PiAyKSwKIAkJCSAgICAgICBpbnRlbF9kcF9wYWNrX2F1eCgmYXV4X21zZ1tpXSwgc2l6ZW9m
KGF1eF9tc2cpIC0gaSkpOwogCiAJYXV4X2Nsb2NrX2RpdmlkZXIgPSBpbnRlbF9kcC0+Z2V0X2F1
eF9jbG9ja19kaXZpZGVyKGludGVsX2RwLCAwKTsKQEAgLTM4NSw3ICszODEsNyBAQCBzdGF0aWMg
dm9pZCBoc3dfcHNyX3NldHVwX2F1eChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCiAJLyog
U2VsZWN0IG9ubHkgdmFsaWQgYml0cyBmb3IgU1JEX0FVWF9DVEwgKi8KIAlhdXhfY3RsICY9IHBz
cl9hdXhfbWFzazsKLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9BVVhfQ1RMKGRl
dl9wcml2LT5wc3IudHJhbnNjb2RlciksCisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9Q
U1JfQVVYX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLAogCQkgICAgICAgYXV4X2N0bCk7
CiB9CiAKQEAgLTM5NSwxNCArMzkxLDE0IEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVf
c2luayhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCXU4IGRwY2RfdmFsID0gRFBfUFNSX0VO
QUJMRTsKIAogCS8qIEVuYWJsZSBBTFBNIGF0IHNpbmsgZm9yIHBzcjIgKi8KLQlpZiAoZGV2X3By
aXYtPnBzci5wc3IyX2VuYWJsZWQpIHsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQp
IHsKIAkJZHJtX2RwX2RwY2Rfd3JpdGViKCZpbnRlbF9kcC0+YXV4LCBEUF9SRUNFSVZFUl9BTFBN
X0NPTkZJRywKIAkJCQkgICBEUF9BTFBNX0VOQUJMRSB8CiAJCQkJICAgRFBfQUxQTV9MT0NLX0VS
Uk9SX0lSUV9IUERfRU5BQkxFKTsKIAogCQlkcGNkX3ZhbCB8PSBEUF9QU1JfRU5BQkxFX1BTUjIg
fCBEUF9QU1JfSVJRX0hQRF9XSVRIX0NSQ19FUlJPUlM7CiAJfSBlbHNlIHsKLQkJaWYgKGRldl9w
cml2LT5wc3IubGlua19zdGFuZGJ5KQorCQlpZiAoaW50ZWxfZHAtPnBzci5saW5rX3N0YW5kYnkp
CiAJCQlkcGNkX3ZhbCB8PSBEUF9QU1JfTUFJTl9MSU5LX0FDVElWRTsKIAogCQlpZiAoSU5URUxf
R0VOKGRldl9wcml2KSA+PSA4KQpAQCAtNDY1LDcgKzQ2MSw3IEBAIHN0YXRpYyB1OCBwc3JfY29t
cHV0ZV9pZGxlX2ZyYW1lcyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCSAqIG9mZi1ieS1v
bmUgaXNzdWUgdGhhdCBIVyBoYXMgaW4gc29tZSBjYXNlcy4KIAkgKi8KIAlpZGxlX2ZyYW1lcyA9
IG1heCg2LCBkZXZfcHJpdi0+dmJ0LnBzci5pZGxlX2ZyYW1lcyk7Ci0JaWRsZV9mcmFtZXMgPSBt
YXgoaWRsZV9mcmFtZXMsIGRldl9wcml2LT5wc3Iuc2lua19zeW5jX2xhdGVuY3kgKyAxKTsKKwlp
ZGxlX2ZyYW1lcyA9IG1heChpZGxlX2ZyYW1lcywgaW50ZWxfZHAtPnBzci5zaW5rX3N5bmNfbGF0
ZW5jeSArIDEpOwogCiAJaWYgKGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpZGxlX2ZyYW1l
cyA+IDB4ZikpCiAJCWlkbGVfZnJhbWVzID0gMHhmOwpAQCAtNDg1LDcgKzQ4MSw3IEBAIHN0YXRp
YyB2b2lkIGhzd19hY3RpdmF0ZV9wc3IxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJaWYg
KElTX0hBU1dFTEwoZGV2X3ByaXYpKQogCQl2YWwgfD0gRURQX1BTUl9NSU5fTElOS19FTlRSWV9U
SU1FXzhfTElORVM7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5saW5rX3N0YW5kYnkpCisJaWYgKGlu
dGVsX2RwLT5wc3IubGlua19zdGFuZGJ5KQogCQl2YWwgfD0gRURQX1BTUl9MSU5LX1NUQU5EQlk7
CiAKIAl2YWwgfD0gaW50ZWxfcHNyMV9nZXRfdHBfdGltZShpbnRlbF9kcCk7CkBAIC00OTMsOSAr
NDg5LDkgQEAgc3RhdGljIHZvaWQgaHN3X2FjdGl2YXRlX3BzcjEoc3RydWN0IGludGVsX2RwICpp
bnRlbF9kcCkKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA+PSA4KQogCQl2YWwgfD0gRURQX1BT
Ul9DUkNfRU5BQkxFOwogCi0JdmFsIHw9IChpbnRlbF9kZV9yZWFkKGRldl9wcml2LCBFRFBfUFNS
X0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKSAmCisJdmFsIHw9IChpbnRlbF9kZV9yZWFk
KGRldl9wcml2LCBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKSAmCiAJCUVE
UF9QU1JfUkVTVE9SRV9QU1JfQUNUSVZFX0NUWF9NQVNLKTsKLQlpbnRlbF9kZV93cml0ZShkZXZf
cHJpdiwgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKKwlpbnRl
bF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KSwgdmFsKTsKIH0KIAogc3RhdGljIHUzMiBpbnRlbF9wc3IyX2dldF90cF90aW1lKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApCkBAIC01MzAsNyArNTI2LDcgQEAgc3RhdGljIHZvaWQgaHN3X2Fj
dGl2YXRlX3BzcjIoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlpZiAoSU5URUxfR0VOKGRl
dl9wcml2KSA+PSAxMCB8fCBJU19HRU1JTklMQUtFKGRldl9wcml2KSkKIAkJdmFsIHw9IEVEUF9Z
X0NPT1JESU5BVEVfRU5BQkxFOwogCi0JdmFsIHw9IEVEUF9QU1IyX0ZSQU1FX0JFRk9SRV9TVShk
ZXZfcHJpdi0+cHNyLnNpbmtfc3luY19sYXRlbmN5ICsgMSk7CisJdmFsIHw9IEVEUF9QU1IyX0ZS
QU1FX0JFRk9SRV9TVShpbnRlbF9kcC0+cHNyLnNpbmtfc3luY19sYXRlbmN5ICsgMSk7CiAJdmFs
IHw9IGludGVsX3BzcjJfZ2V0X3RwX3RpbWUoaW50ZWxfZHApOwogCiAJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTIpIHsKQEAgLTU0OSw3ICs1NDUsNyBAQCBzdGF0aWMgdm9pZCBoc3dfYWN0
aXZhdGVfcHNyMihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQl2YWwgfD0gRURQX1BTUjJf
RkFTVF9XQUtFKDcpOwogCX0KIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfc2VsX2ZldGNoX2Vu
YWJsZWQpIHsKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX3NlbF9mZXRjaF9lbmFibGVkKSB7CiAJ
CS8qIFdBIDE0MDgzMzA4NDcgKi8KIAkJaWYgKElTX1RHTF9ESVNQX1NURVBQSU5HKGRldl9wcml2
LCBTVEVQX0EwLCBTVEVQX0EwKSB8fAogCQkgICAgSVNfUktMX1JFVklEKGRldl9wcml2LCBSS0xf
UkVWSURfQTAsIFJLTF9SRVZJRF9BMCkpCkBAIC01NTgsMjAgKzU1NCwyMCBAQCBzdGF0aWMgdm9p
ZCBoc3dfYWN0aXZhdGVfcHNyMihzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogCQkJCSAgICAg
RElTX1JBTV9CWVBBU1NfUFNSMl9NQU5fVFJBQ0spOwogCiAJCWludGVsX2RlX3dyaXRlKGRldl9w
cml2LAotCQkJICAgICAgIFBTUjJfTUFOX1RSS19DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVy
KSwKKwkJCSAgICAgICBQU1IyX01BTl9UUktfQ1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlciks
CiAJCQkgICAgICAgUFNSMl9NQU5fVFJLX0NUTF9FTkFCTEUpOwogCX0gZWxzZSBpZiAoSEFTX1BT
UjJfU0VMX0ZFVENIKGRldl9wcml2KSkgewogCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwKLQkJ
CSAgICAgICBQU1IyX01BTl9UUktfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlciksIDApOwor
CQkJICAgICAgIFBTUjJfTUFOX1RSS19DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwgMCk7
CiAJfQogCiAJLyoKIAkgKiBQU1IyIEhXIGlzIGluY29ycmVjdGx5IHVzaW5nIEVEUF9QU1JfVFAx
X1RQM19TRUwgYW5kIEJTcGVjIGlzCiAJICogcmVjb21tZW5kaW5nIGtlZXAgdGhpcyBiaXQgdW5z
ZXQgd2hpbGUgUFNSMiBpcyBlbmFibGVkLgogCSAqLwotCWludGVsX2RlX3dyaXRlKGRldl9wcml2
LCBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCAwKTsKKwlpbnRlbF9kZV93
cml0ZShkZXZfcHJpdiwgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwgMCk7
CiAKLQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3Iu
dHJhbnNjb2RlciksIHZhbCk7CisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1IyX0NU
TChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogfQogCiBzdGF0aWMgYm9vbApAQCAt
NTk0LDU1ICs1OTAsNTggQEAgc3RhdGljIHUzMiBpbnRlbF9nZXRfZnJhbWVfdGltZV91cyhjb25z
dCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3N0YXRlKQogCQkJICAgIGRybV9tb2RlX3ZyZWZy
ZXNoKCZjc3RhdGUtPmh3LmFkanVzdGVkX21vZGUpKTsKIH0KIAotc3RhdGljIHZvaWQgcHNyMl9w
cm9ncmFtX2lkbGVfZnJhbWVzKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKK3N0
YXRpYyB2b2lkIHBzcjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwLAogCQkJCSAgICAgdTMyIGlkbGVfZnJhbWVzKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXUzMiB2YWw7CiAKIAlpZGxl
X2ZyYW1lcyA8PD0gIEVEUF9QU1IyX0lETEVfRlJBTUVfU0hJRlQ7Ci0JdmFsID0gaW50ZWxfZGVf
cmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOwor
CXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTChpbnRlbF9kcC0+cHNy
LnRyYW5zY29kZXIpKTsKIAl2YWwgJj0gfkVEUF9QU1IyX0lETEVfRlJBTUVfTUFTSzsKIAl2YWwg
fD0gaWRsZV9mcmFtZXM7Ci0JaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1IyX0NUTChk
ZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOworCWludGVsX2RlX3dyaXRlKGRldl9wcml2
LCBFRFBfUFNSMl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKIH0KIAotc3Rh
dGljIHZvaWQgdGdsX3BzcjJfZW5hYmxlX2RjM2NvKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpk
ZXZfcHJpdikKK3N0YXRpYyB2b2lkIHRnbF9wc3IyX2VuYWJsZV9kYzNjbyhzdHJ1Y3QgaW50ZWxf
ZHAgKmludGVsX2RwKQogewotCXBzcjJfcHJvZ3JhbV9pZGxlX2ZyYW1lcyhkZXZfcHJpdiwgMCk7
CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9k
cCk7CisKKwlwc3IyX3Byb2dyYW1faWRsZV9mcmFtZXMoaW50ZWxfZHAsIDApOwogCWludGVsX2Rp
c3BsYXlfcG93ZXJfc2V0X3RhcmdldF9kY19zdGF0ZShkZXZfcHJpdiwgRENfU1RBVEVfRU5fREMz
Q08pOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfcHNyMl9kaXNhYmxlX2RjM2NvKHN0cnVjdCBkcm1f
aTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHRnbF9wc3IyX2Rpc2FibGVfZGMz
Y28oc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwID0gZGV2X3ByaXYtPnBzci5kcDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAogCWludGVsX2Rpc3BsYXlfcG93ZXJfc2V0X3Rh
cmdldF9kY19zdGF0ZShkZXZfcHJpdiwgRENfU1RBVEVfRU5fVVBUT19EQzYpOwotCXBzcjJfcHJv
Z3JhbV9pZGxlX2ZyYW1lcyhkZXZfcHJpdiwgcHNyX2NvbXB1dGVfaWRsZV9mcmFtZXMoaW50ZWxf
ZHApKTsKKwlwc3IyX3Byb2dyYW1faWRsZV9mcmFtZXMoaW50ZWxfZHAsIHBzcl9jb21wdXRlX2lk
bGVfZnJhbWVzKGludGVsX2RwKSk7CiB9CiAKIHN0YXRpYyB2b2lkIHRnbF9kYzNjb19kaXNhYmxl
X3dvcmsoc3RydWN0IHdvcmtfc3RydWN0ICp3b3JrKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2
YXRlICpkZXZfcHJpdiA9Ci0JCWNvbnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKmRldl9wcml2KSwg
cHNyLmRjM2NvX3dvcmsud29yayk7CisJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9CisJCWNv
bnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKmludGVsX2RwKSwgcHNyLmRjM2NvX3dvcmsud29yayk7
CiAKLQltdXRleF9sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X2xvY2soJmludGVs
X2RwLT5wc3IubG9jayk7CiAJLyogSWYgZGVsYXllZCB3b3JrIGlzIHBlbmRpbmcsIGl0IGlzIG5v
dCBpZGxlICovCi0JaWYgKGRlbGF5ZWRfd29ya19wZW5kaW5nKCZkZXZfcHJpdi0+cHNyLmRjM2Nv
X3dvcmspKQorCWlmIChkZWxheWVkX3dvcmtfcGVuZGluZygmaW50ZWxfZHAtPnBzci5kYzNjb193
b3JrKSkKIAkJZ290byB1bmxvY2s7CiAKLQl0Z2xfcHNyMl9kaXNhYmxlX2RjM2NvKGRldl9wcml2
KTsKKwl0Z2xfcHNyMl9kaXNhYmxlX2RjM2NvKGludGVsX2RwKTsKIHVubG9jazoKLQltdXRleF91
bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNy
LmxvY2spOwogfQogCi1zdGF0aWMgdm9pZCB0Z2xfZGlzYWxsb3dfZGMzY29fb25fcHNyMl9leGl0
KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIHRnbF9kaXNh
bGxvd19kYzNjb19vbl9wc3IyX2V4aXQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKLQlp
ZiAoIWRldl9wcml2LT5wc3IuZGMzY29fZW5hYmxlZCkKKwlpZiAoIWludGVsX2RwLT5wc3IuZGMz
Y29fZW5hYmxlZCkKIAkJcmV0dXJuOwogCi0JY2FuY2VsX2RlbGF5ZWRfd29yaygmZGV2X3ByaXYt
PnBzci5kYzNjb193b3JrKTsKKwljYW5jZWxfZGVsYXllZF93b3JrKCZpbnRlbF9kcC0+cHNyLmRj
M2NvX3dvcmspOwogCS8qIEJlZm9yZSBQU1IyIGV4aXQgZGlzYWxsb3cgZGMzY28qLwotCXRnbF9w
c3IyX2Rpc2FibGVfZGMzY28oZGV2X3ByaXYpOworCXRnbF9wc3IyX2Rpc2FibGVfZGMzY28oaW50
ZWxfZHApOwogfQogCiBzdGF0aWMgdm9pZApAQCAtNzE1LDcgKzcxNCw3IEBAIHN0YXRpYyBib29s
IGludGVsX3BzcjJfY29uZmlnX3ZhbGlkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJaW50
IGNydGNfdmRpc3BsYXkgPSBjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlLmNydGNfdmRpc3Bs
YXk7CiAJaW50IHBzcl9tYXhfaCA9IDAsIHBzcl9tYXhfdiA9IDAsIG1heF9icHAgPSAwOwogCi0J
aWYgKCFkZXZfcHJpdi0+cHNyLnNpbmtfcHNyMl9zdXBwb3J0KQorCWlmICghaW50ZWxfZHAtPnBz
ci5zaW5rX3BzcjJfc3VwcG9ydCkKIAkJcmV0dXJuIGZhbHNlOwogCiAJaWYgKCF0cmFuc2NvZGVy
X2hhc19wc3IyKGRldl9wcml2LCBjcnRjX3N0YXRlLT5jcHVfdHJhbnNjb2RlcikpIHsKQEAgLTcy
NSw3ICs3MjQsNyBAQCBzdGF0aWMgYm9vbCBpbnRlbF9wc3IyX2NvbmZpZ192YWxpZChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwLAogCQlyZXR1cm4gZmFsc2U7CiAJfQogCi0JaWYgKCFwc3IyX2ds
b2JhbF9lbmFibGVkKGRldl9wcml2KSkgeworCWlmICghcHNyMl9nbG9iYWxfZW5hYmxlZChpbnRl
bF9kcCkpIHsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sICJQU1IyIGRpc2FibGVkIGJ5
IGZsYWdcbiIpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQpAQCAtNzc0LDEwICs3NzMsMTAgQEAgc3Rh
dGljIGJvb2wgaW50ZWxfcHNyMl9jb25maWdfdmFsaWQoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKIAkgKiBvbmx5IG5lZWQgdG8gdmFsaWRhdGUgdGhlIFNVIGJsb2NrIHdpZHRoIGlzIGEgbXVs
dGlwbGUgb2YKIAkgKiB4IGdyYW51bGFyaXR5LgogCSAqLwotCWlmIChjcnRjX2hkaXNwbGF5ICUg
ZGV2X3ByaXYtPnBzci5zdV94X2dyYW51bGFyaXR5KSB7CisJaWYgKGNydGNfaGRpc3BsYXkgJSBp
bnRlbF9kcC0+cHNyLnN1X3hfZ3JhbnVsYXJpdHkpIHsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2
LT5kcm0sCiAJCQkgICAgIlBTUjIgbm90IGVuYWJsZWQsIGhkaXNwbGF5KCVkKSBub3QgbXVsdGlw
bGUgb2YgJWRcbiIsCi0JCQkgICAgY3J0Y19oZGlzcGxheSwgZGV2X3ByaXYtPnBzci5zdV94X2dy
YW51bGFyaXR5KTsKKwkJCSAgICBjcnRjX2hkaXNwbGF5LCBpbnRlbF9kcC0+cHNyLnN1X3hfZ3Jh
bnVsYXJpdHkpOwogCQlyZXR1cm4gZmFsc2U7CiAJfQogCkBAIC04MDYsNyArODA1LDYgQEAgc3Rh
dGljIGJvb2wgaW50ZWxfcHNyMl9jb25maWdfdmFsaWQoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKIHZvaWQgaW50ZWxfcHNyX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHAsCiAJCQkgICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSkKIHsKLQlz
dHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRwX3RvX2RpZ19wb3J0KGludGVs
X2RwKTsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGlu
dGVsX2RwKTsKIAljb25zdCBzdHJ1Y3QgZHJtX2Rpc3BsYXlfbW9kZSAqYWRqdXN0ZWRfbW9kZSA9
CiAJCSZjcnRjX3N0YXRlLT5ody5hZGp1c3RlZF9tb2RlOwpAQCAtODE5LDMwICs4MTcsMTUgQEAg
dm9pZCBpbnRlbF9wc3JfY29tcHV0ZV9jb25maWcoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
IAlpZiAoY3J0Y19zdGF0ZS0+dnJyLmVuYWJsZSkKIAkJcmV0dXJuOwogCi0JaWYgKCFDQU5fUFNS
KGRldl9wcml2KSkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKQogCQlyZXR1cm47CiAKLQlpZiAo
aW50ZWxfZHAgIT0gZGV2X3ByaXYtPnBzci5kcCkKLQkJcmV0dXJuOwotCi0JaWYgKCFwc3JfZ2xv
YmFsX2VuYWJsZWQoZGV2X3ByaXYpKSB7CisJaWYgKCFwc3JfZ2xvYmFsX2VuYWJsZWQoaW50ZWxf
ZHApKSB7CiAJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLCAiUFNSIGRpc2FibGVkIGJ5IGZs
YWdcbiIpOwogCQlyZXR1cm47CiAJfQogCi0JLyoKLQkgKiBIU1cgc3BlYyBleHBsaWNpdGx5IHNh
eXMgUFNSIGlzIHRpZWQgdG8gcG9ydCBBLgotCSAqIEJEVysgcGxhdGZvcm1zIGhhdmUgYSBpbnN0
YW5jZSBvZiBQU1IgcmVnaXN0ZXJzIHBlciB0cmFuc2NvZGVyIGJ1dAotCSAqIGZvciBub3cgaXQg
b25seSBzdXBwb3J0cyBvbmUgaW5zdGFuY2Ugb2YgUFNSLCBzbyBsZXRzIGtlZXAgaXQKLQkgKiBo
YXJkY29kZWQgdG8gUE9SVF9BCi0JICovCi0JaWYgKGRpZ19wb3J0LT5iYXNlLnBvcnQgIT0gUE9S
VF9BKSB7Ci0JCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJICAgICJQU1IgY29uZGl0
aW9uIGZhaWxlZDogUG9ydCBub3Qgc3VwcG9ydGVkXG4iKTsKLQkJcmV0dXJuOwotCX0KLQotCWlm
IChkZXZfcHJpdi0+cHNyLnNpbmtfbm90X3JlbGlhYmxlKSB7CisJaWYgKGludGVsX2RwLT5wc3Iu
c2lua19ub3RfcmVsaWFibGUpIHsKIAkJZHJtX2RiZ19rbXMoJmRldl9wcml2LT5kcm0sCiAJCQkg
ICAgIlBTUiBzaW5rIGltcGxlbWVudGF0aW9uIGlzIG5vdCByZWxpYWJsZVxuIik7CiAJCXJldHVy
bjsKQEAgLTg3OCwyMyArODYxLDI0IEBAIHZvaWQgaW50ZWxfcHNyX2NvbXB1dGVfY29uZmlnKHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiBzdGF0aWMgdm9pZCBpbnRlbF9wc3JfYWN0aXZhdGUo
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwllbnVtIHRyYW5zY29kZXIgdHJhbnNj
b2RlciA9IGludGVsX2RwLT5wc3IudHJhbnNjb2RlcjsKIAotCWlmICh0cmFuc2NvZGVyX2hhc19w
c3IyKGRldl9wcml2LCBkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKQorCWlmICh0cmFuc2NvZGVy
X2hhc19wc3IyKGRldl9wcml2LCB0cmFuc2NvZGVyKSkKIAkJZHJtX1dBUk5fT04oJmRldl9wcml2
LT5kcm0sCi0JCQkgICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUjJfQ1RMKGRldl9w
cml2LT5wc3IudHJhbnNjb2RlcikpICYgRURQX1BTUjJfRU5BQkxFKTsKKwkJCSAgICBpbnRlbF9k
ZV9yZWFkKGRldl9wcml2LCBFRFBfUFNSMl9DVEwodHJhbnNjb2RlcikpICYgRURQX1BTUjJfRU5B
QkxFKTsKIAogCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLAotCQkgICAgaW50ZWxfZGVfcmVh
ZChkZXZfcHJpdiwgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSkgJiBFRFBf
UFNSX0VOQUJMRSk7Ci0JZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sIGRldl9wcml2LT5wc3Iu
YWN0aXZlKTsKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCQkg
ICAgaW50ZWxfZGVfcmVhZChkZXZfcHJpdiwgRURQX1BTUl9DVEwodHJhbnNjb2RlcikpICYgRURQ
X1BTUl9FTkFCTEUpOworCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9kcC0+cHNy
LmFjdGl2ZSk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAog
CS8qIHBzcjEgYW5kIHBzcjIgYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZS4qLwotCWlmIChkZXZfcHJp
di0+cHNyLnBzcjJfZW5hYmxlZCkKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQpCiAJ
CWhzd19hY3RpdmF0ZV9wc3IyKGludGVsX2RwKTsKIAllbHNlCiAJCWhzd19hY3RpdmF0ZV9wc3Ix
KGludGVsX2RwKTsKIAotCWRldl9wcml2LT5wc3IuYWN0aXZlID0gdHJ1ZTsKKwlpbnRlbF9kcC0+
cHNyLmFjdGl2ZSA9IHRydWU7CiB9CiAKIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9lbmFibGVfc291
cmNlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCkBAIC05MTAsNyArODk0LDcgQEAgc3RhdGlj
IHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2Uoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwK
IAlpZiAoSVNfSEFTV0VMTChkZXZfcHJpdikgfHwgSVNfQlJPQURXRUxMKGRldl9wcml2KSkKIAkJ
aHN3X3Bzcl9zZXR1cF9hdXgoaW50ZWxfZHApOwogCi0JaWYgKGRldl9wcml2LT5wc3IucHNyMl9l
bmFibGVkICYmIChJU19HRU4oZGV2X3ByaXYsIDkpICYmCisJaWYgKGludGVsX2RwLT5wc3IucHNy
Ml9lbmFibGVkICYmIChJU19HRU4oZGV2X3ByaXYsIDkpICYmCiAJCQkJCSAgICFJU19HRU1JTklM
QUtFKGRldl9wcml2KSkpIHsKIAkJaTkxNV9yZWdfdCByZWcgPSBDSElDS0VOX1RSQU5TKGNwdV90
cmFuc2NvZGVyKTsKIAkJdTMyIGNoaWNrZW4gPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LCByZWcp
OwpAQCAtOTM0LDEwICs5MTgsMTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9zb3Vy
Y2Uoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCwKIAlpZiAoSU5URUxfR0VOKGRldl9wcml2KSA8
IDExKQogCQltYXNrIHw9IEVEUF9QU1JfREVCVUdfTUFTS19ESVNQX1JFR19XUklURTsKIAotCWlu
dGVsX2RlX3dyaXRlKGRldl9wcml2LCBFRFBfUFNSX0RFQlVHKGRldl9wcml2LT5wc3IudHJhbnNj
b2RlciksCisJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsIEVEUF9QU1JfREVCVUcoaW50ZWxfZHAt
PnBzci50cmFuc2NvZGVyKSwKIAkJICAgICAgIG1hc2spOwogCi0JcHNyX2lycV9jb250cm9sKGRl
dl9wcml2KTsKKwlwc3JfaXJxX2NvbnRyb2woaW50ZWxfZHApOwogCiAJaWYgKGNydGNfc3RhdGUt
PmRjM2NvX2V4aXRsaW5lKSB7CiAJCXUzMiB2YWw7CkBAIC05NTUsMzAgKzkzOSwzMCBAQCBzdGF0
aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX3NvdXJjZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2Rw
LAogCiAJaWYgKEhBU19QU1JfSFdfVFJBQ0tJTkcoZGV2X3ByaXYpICYmIEhBU19QU1IyX1NFTF9G
RVRDSChkZXZfcHJpdikpCiAJCWludGVsX2RlX3JtdyhkZXZfcHJpdiwgQ0hJQ0tFTl9QQVIxXzEs
IElHTk9SRV9QU1IyX0hXX1RSQUNLSU5HLAotCQkJICAgICBkZXZfcHJpdi0+cHNyLnBzcjJfc2Vs
X2ZldGNoX2VuYWJsZWQgPworCQkJICAgICBpbnRlbF9kcC0+cHNyLnBzcjJfc2VsX2ZldGNoX2Vu
YWJsZWQgPwogCQkJICAgICBJR05PUkVfUFNSMl9IV19UUkFDS0lORyA6IDApOwogfQogCi1zdGF0
aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYsCitzdGF0aWMgdm9pZCBpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwLAogCQkJCSAgICBjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAq
Y3J0Y19zdGF0ZSwKIAkJCQkgICAgY29uc3Qgc3RydWN0IGRybV9jb25uZWN0b3Jfc3RhdGUgKmNv
bm5fc3RhdGUpCiB7Ci0Jc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGRldl9wcml2LT5wc3Iu
ZHA7CiAJc3RydWN0IGludGVsX2RpZ2l0YWxfcG9ydCAqZGlnX3BvcnQgPSBkcF90b19kaWdfcG9y
dChpbnRlbF9kcCk7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9f
aTkxNShpbnRlbF9kcCk7CiAJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXIgPSAmZGlnX3Bv
cnQtPmJhc2U7CiAJdTMyIHZhbDsKIAotCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBkZXZf
cHJpdi0+cHNyLmVuYWJsZWQpOworCWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBpbnRlbF9k
cC0+cHNyLmVuYWJsZWQpOwogCi0JZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgPSBjcnRjX3N0
YXRlLT5oYXNfcHNyMjsKLQlkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyA9IDA7
Ci0JZGV2X3ByaXYtPnBzci5waXBlID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNy
dGMpLT5waXBlOwotCWRldl9wcml2LT5wc3IuZGMzY29fZW5hYmxlZCA9ICEhY3J0Y19zdGF0ZS0+
ZGMzY29fZXhpdGxpbmU7Ci0JZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyID0gY3J0Y19zdGF0ZS0+
Y3B1X3RyYW5zY29kZXI7CisJaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQgPSBjcnRjX3N0YXRl
LT5oYXNfcHNyMjsKKwlpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cyA9IDA7CisJ
aW50ZWxfZHAtPnBzci5waXBlID0gdG9faW50ZWxfY3J0YyhjcnRjX3N0YXRlLT51YXBpLmNydGMp
LT5waXBlOworCWludGVsX2RwLT5wc3IuZGMzY29fZW5hYmxlZCA9ICEhY3J0Y19zdGF0ZS0+ZGMz
Y29fZXhpdGxpbmU7CisJaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyID0gY3J0Y19zdGF0ZS0+Y3B1
X3RyYW5zY29kZXI7CiAJLyogREM1L0RDNiByZXF1aXJlcyBhdCBsZWFzdCA2IGlkbGUgZnJhbWVz
ICovCiAJdmFsID0gdXNlY3NfdG9famlmZmllcyhpbnRlbF9nZXRfZnJhbWVfdGltZV91cyhjcnRj
X3N0YXRlKSAqIDYpOwotCWRldl9wcml2LT5wc3IuZGMzY29fZXhpdF9kZWxheSA9IHZhbDsKLQlk
ZXZfcHJpdi0+cHNyLnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQgPSBjcnRjX3N0YXRlLT5lbmFibGVf
cHNyMl9zZWxfZmV0Y2g7CisJaW50ZWxfZHAtPnBzci5kYzNjb19leGl0X2RlbGF5ID0gdmFsOwor
CWludGVsX2RwLT5wc3IucHNyMl9zZWxfZmV0Y2hfZW5hYmxlZCA9IGNydGNfc3RhdGUtPmVuYWJs
ZV9wc3IyX3NlbF9mZXRjaDsKIAogCS8qCiAJICogSWYgYSBQU1IgZXJyb3IgaGFwcGVuZWQgYW5k
IHRoZSBkcml2ZXIgaXMgcmVsb2FkZWQsIHRoZSBFRFBfUFNSX0lJUgpAQCAtOTkwLDI3ICs5NzQs
MjcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAogCSAqLwogCWlmIChJTlRFTF9HRU4oZGV2X3ByaXYpID49IDEy
KSB7CiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIFRSQU5TX1BTUl9J
SVIoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSk7CisJCQkJICAgIFRSQU5TX1BTUl9JSVIoaW50
ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJCXZhbCAmPSBFRFBfUFNSX0VSUk9SKDApOwogCX0g
ZWxzZSB7CiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsIEVEUF9QU1JfSUlSKTsKLQkJ
dmFsICY9IEVEUF9QU1JfRVJST1IoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKTsKKwkJdmFsICY9
IEVEUF9QU1JfRVJST1IoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAl9CiAJaWYgKHZhbCkg
ewotCQlkZXZfcHJpdi0+cHNyLnNpbmtfbm90X3JlbGlhYmxlID0gdHJ1ZTsKKwkJaW50ZWxfZHAt
PnBzci5zaW5rX25vdF9yZWxpYWJsZSA9IHRydWU7CiAJCWRybV9kYmdfa21zKCZkZXZfcHJpdi0+
ZHJtLAogCQkJICAgICJQU1IgaW50ZXJydXB0aW9uIGVycm9yIHNldCwgbm90IGVuYWJsaW5nIFBT
UlxuIik7CiAJCXJldHVybjsKIAl9CiAKIAlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRybSwgIkVu
YWJsaW5nIFBTUiVzXG4iLAotCQkgICAgZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQgPyAiMiIg
OiAiMSIpOworCQkgICAgaW50ZWxfZHAtPnBzci5wc3IyX2VuYWJsZWQgPyAiMiIgOiAiMSIpOwog
CWludGVsX2RwX2NvbXB1dGVfcHNyX3ZzY19zZHAoaW50ZWxfZHAsIGNydGNfc3RhdGUsIGNvbm5f
c3RhdGUsCi0JCQkJICAgICAmZGV2X3ByaXYtPnBzci52c2MpOwotCWludGVsX3dyaXRlX2RwX3Zz
Y19zZHAoZW5jb2RlciwgY3J0Y19zdGF0ZSwgJmRldl9wcml2LT5wc3IudnNjKTsKKwkJCQkgICAg
ICZpbnRlbF9kcC0+cHNyLnZzYyk7CisJaW50ZWxfd3JpdGVfZHBfdnNjX3NkcChlbmNvZGVyLCBj
cnRjX3N0YXRlLCAmaW50ZWxfZHAtPnBzci52c2MpOwogCWludGVsX3Bzcl9lbmFibGVfc2luayhp
bnRlbF9kcCk7CiAJaW50ZWxfcHNyX2VuYWJsZV9zb3VyY2UoaW50ZWxfZHAsIGNydGNfc3RhdGUp
OwotCWRldl9wcml2LT5wc3IuZW5hYmxlZCA9IHRydWU7CisJaW50ZWxfZHAtPnBzci5lbmFibGVk
ID0gdHJ1ZTsKIAogCWludGVsX3Bzcl9hY3RpdmF0ZShpbnRlbF9kcCk7CiB9CkBAIC0xMDI5LDcg
KzEwMTMsNyBAQCB2b2lkIGludGVsX3Bzcl9lbmFibGUoc3RydWN0IGludGVsX2RwICppbnRlbF9k
cCwKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGlu
dGVsX2RwKTsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwgZGV2X3ByaXYtPnBzci5kcCAh
PSBpbnRlbF9kcCkKKwlpZiAoIUNBTl9QU1IoaW50ZWxfZHApKQogCQlyZXR1cm47CiAKIAlpZiAo
IWNydGNfc3RhdGUtPmhhc19wc3IpCkBAIC0xMDM3LDQ2ICsxMDIxLDQ3IEBAIHZvaWQgaW50ZWxf
cHNyX2VuYWJsZShzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCiAJZHJtX1dBUk5fT04oJmRl
dl9wcml2LT5kcm0sIGRldl9wcml2LT5kcnJzLmRwKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2
LT5wc3IubG9jayk7Ci0JaW50ZWxfcHNyX2VuYWJsZV9sb2NrZWQoZGV2X3ByaXYsIGNydGNfc3Rh
dGUsIGNvbm5fc3RhdGUpOwotCW11dGV4X3VubG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwlt
dXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2spOworCWludGVsX3Bzcl9lbmFibGVfbG9ja2Vk
KGludGVsX2RwLCBjcnRjX3N0YXRlLCBjb25uX3N0YXRlKTsKKwltdXRleF91bmxvY2soJmludGVs
X2RwLT5wc3IubG9jayk7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3Bzcl9leGl0KHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9leGl0KHN0
cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRl
dl9wcml2ID0gZHBfdG9faTkxNShpbnRlbF9kcCk7CiAJdTMyIHZhbDsKIAotCWlmICghZGV2X3By
aXYtPnBzci5hY3RpdmUpIHsKLQkJaWYgKHRyYW5zY29kZXJfaGFzX3BzcjIoZGV2X3ByaXYsIGRl
dl9wcml2LT5wc3IudHJhbnNjb2RlcikpIHsKKwlpZiAoIWludGVsX2RwLT5wc3IuYWN0aXZlKSB7
CisJCWlmICh0cmFuc2NvZGVyX2hhc19wc3IyKGRldl9wcml2LCBpbnRlbF9kcC0+cHNyLnRyYW5z
Y29kZXIpKSB7CiAJCQl2YWwgPSBpbnRlbF9kZV9yZWFkKGRldl9wcml2LAotCQkJCQkgICAgRURQ
X1BTUjJfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2RlcikpOworCQkJCQkgICAgRURQX1BTUjJf
Q1RMKGludGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQkJZHJtX1dBUk5fT04oJmRldl9wcml2
LT5kcm0sIHZhbCAmIEVEUF9QU1IyX0VOQUJMRSk7CiAJCX0KIAogCQl2YWwgPSBpbnRlbF9kZV9y
ZWFkKGRldl9wcml2LAotCQkJCSAgICBFRFBfUFNSX0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29k
ZXIpKTsKKwkJCQkgICAgRURQX1BTUl9DVEwoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSk7CiAJ
CWRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCB2YWwgJiBFRFBfUFNSX0VOQUJMRSk7CiAKIAkJ
cmV0dXJuOwogCX0KIAotCWlmIChkZXZfcHJpdi0+cHNyLnBzcjJfZW5hYmxlZCkgewotCQl0Z2xf
ZGlzYWxsb3dfZGMzY29fb25fcHNyMl9leGl0KGRldl9wcml2KTsKKwlpZiAoaW50ZWxfZHAtPnBz
ci5wc3IyX2VuYWJsZWQpIHsKKwkJdGdsX2Rpc2FsbG93X2RjM2NvX29uX3BzcjJfZXhpdChpbnRl
bF9kcCk7CiAJCXZhbCA9IGludGVsX2RlX3JlYWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1Iy
X0NUTChkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpKTsKKwkJCQkgICAgRURQX1BTUjJfQ1RMKGlu
dGVsX2RwLT5wc3IudHJhbnNjb2RlcikpOwogCQlkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwg
ISh2YWwgJiBFRFBfUFNSMl9FTkFCTEUpKTsKIAkJdmFsICY9IH5FRFBfUFNSMl9FTkFCTEU7CiAJ
CWludGVsX2RlX3dyaXRlKGRldl9wcml2LAotCQkJICAgICAgIEVEUF9QU1IyX0NUTChkZXZfcHJp
di0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOworCQkJICAgICAgIEVEUF9QU1IyX0NUTChpbnRlbF9k
cC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogCX0gZWxzZSB7CiAJCXZhbCA9IGludGVsX2RlX3Jl
YWQoZGV2X3ByaXYsCi0JCQkJICAgIEVEUF9QU1JfQ1RMKGRldl9wcml2LT5wc3IudHJhbnNjb2Rl
cikpOworCQkJCSAgICBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpKTsKIAkJ
ZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICEodmFsICYgRURQX1BTUl9FTkFCTEUpKTsKIAkJ
dmFsICY9IH5FRFBfUFNSX0VOQUJMRTsKIAkJaW50ZWxfZGVfd3JpdGUoZGV2X3ByaXYsCi0JCQkg
ICAgICAgRURQX1BTUl9DVEwoZGV2X3ByaXYtPnBzci50cmFuc2NvZGVyKSwgdmFsKTsKKwkJCSAg
ICAgICBFRFBfUFNSX0NUTChpbnRlbF9kcC0+cHNyLnRyYW5zY29kZXIpLCB2YWwpOwogCX0KLQlk
ZXZfcHJpdi0+cHNyLmFjdGl2ZSA9IGZhbHNlOworCWludGVsX2RwLT5wc3IuYWN0aXZlID0gZmFs
c2U7CiB9CiAKIHN0YXRpYyB2b2lkIGludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQpAQCAtMTA4NSwyMSArMTA3MCwyMSBAQCBzdGF0aWMgdm9pZCBpbnRl
bF9wc3JfZGlzYWJsZV9sb2NrZWQoc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIAlpOTE1X3Jl
Z190IHBzcl9zdGF0dXM7CiAJdTMyIHBzcl9zdGF0dXNfbWFzazsKIAotCWxvY2tkZXBfYXNzZXJ0
X2hlbGQoJmRldl9wcml2LT5wc3IubG9jayk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmaW50ZWxf
ZHAtPnBzci5sb2NrKTsKIAotCWlmICghZGV2X3ByaXYtPnBzci5lbmFibGVkKQorCWlmICghaW50
ZWxfZHAtPnBzci5lbmFibGVkKQogCQlyZXR1cm47CiAKIAlkcm1fZGJnX2ttcygmZGV2X3ByaXYt
PmRybSwgIkRpc2FibGluZyBQU1Ilc1xuIiwKLQkJICAgIGRldl9wcml2LT5wc3IucHNyMl9lbmFi
bGVkID8gIjIiIDogIjEiKTsKKwkJICAgIGludGVsX2RwLT5wc3IucHNyMl9lbmFibGVkID8gIjIi
IDogIjEiKTsKIAotCWludGVsX3Bzcl9leGl0KGRldl9wcml2KTsKKwlpbnRlbF9wc3JfZXhpdChp
bnRlbF9kcCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpIHsKLQkJcHNyX3N0
YXR1cyA9IEVEUF9QU1IyX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCWlmIChp
bnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkgeworCQlwc3Jfc3RhdHVzID0gRURQX1BTUjJfU1RB
VFVTKGludGVsX2RwLT5wc3IudHJhbnNjb2Rlcik7CiAJCXBzcl9zdGF0dXNfbWFzayA9IEVEUF9Q
U1IyX1NUQVRVU19TVEFURV9NQVNLOwogCX0gZWxzZSB7Ci0JCXBzcl9zdGF0dXMgPSBFRFBfUFNS
X1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOworCQlwc3Jfc3RhdHVzID0gRURQX1BT
Ul9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKTsKIAkJcHNyX3N0YXR1c19tYXNrID0g
RURQX1BTUl9TVEFUVVNfU1RBVEVfTUFTSzsKIAl9CiAKQEAgLTExMDksNyArMTA5NCw3IEBAIHN0
YXRpYyB2b2lkIGludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChzdHJ1Y3QgaW50ZWxfZHAgKmludGVs
X2RwKQogCQlkcm1fZXJyKCZkZXZfcHJpdi0+ZHJtLCAiVGltZWQgb3V0IHdhaXRpbmcgUFNSIGlk
bGUgc3RhdGVcbiIpOwogCiAJLyogV0EgMTQwODMzMDg0NyAqLwotCWlmIChkZXZfcHJpdi0+cHNy
LnBzcjJfc2VsX2ZldGNoX2VuYWJsZWQgJiYKKwlpZiAoaW50ZWxfZHAtPnBzci5wc3IyX3NlbF9m
ZXRjaF9lbmFibGVkICYmCiAJICAgIChJU19UR0xfRElTUF9TVEVQUElORyhkZXZfcHJpdiwgU1RF
UF9BMCwgU1RFUF9BMCkgfHwKIAkgICAgIElTX1JLTF9SRVZJRChkZXZfcHJpdiwgUktMX1JFVklE
X0EwLCBSS0xfUkVWSURfQTApKSkKIAkJaW50ZWxfZGVfcm13KGRldl9wcml2LCBDSElDS0VOX1BB
UjFfMSwKQEAgLTExMTgsMTAgKzExMDMsMTAgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX2Rpc2Fi
bGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiAJLyogRGlzYWJsZSBQU1Igb24g
U2luayAqLwogCWRybV9kcF9kcGNkX3dyaXRlYigmaW50ZWxfZHAtPmF1eCwgRFBfUFNSX0VOX0NG
RywgMCk7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpCisJaWYgKGludGVsX2Rw
LT5wc3IucHNyMl9lbmFibGVkKQogCQlkcm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgs
IERQX1JFQ0VJVkVSX0FMUE1fQ09ORklHLCAwKTsKIAotCWRldl9wcml2LT5wc3IuZW5hYmxlZCA9
IGZhbHNlOworCWludGVsX2RwLT5wc3IuZW5hYmxlZCA9IGZhbHNlOwogfQogCiAvKioKQEAgLTEx
MzksMjAgKzExMjQsMjIgQEAgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLAogCWlmICghb2xkX2NydGNfc3RhdGUtPmhhc19wc3IpCiAJCXJldHVybjsKIAot
CWlmIChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgIUNBTl9QU1IoZGV2X3ByaXYpKSkKKwlp
ZiAoZHJtX1dBUk5fT04oJmRldl9wcml2LT5kcm0sICFDQU5fUFNSKGludGVsX2RwKSkpCiAJCXJl
dHVybjsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygm
aW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChpbnRlbF9k
cCk7CiAKLQltdXRleF91bmxvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JY2FuY2VsX3dvcmtf
c3luYygmZGV2X3ByaXYtPnBzci53b3JrKTsKLQljYW5jZWxfZGVsYXllZF93b3JrX3N5bmMoJmRl
dl9wcml2LT5wc3IuZGMzY29fd29yayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOworCWNhbmNlbF93b3JrX3N5bmMoJmludGVsX2RwLT5wc3Iud29yayk7CisJY2FuY2VsX2Rl
bGF5ZWRfd29ya19zeW5jKCZpbnRlbF9kcC0+cHNyLmRjM2NvX3dvcmspOwogfQogCi1zdGF0aWMg
dm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAq
ZGV2X3ByaXYpCitzdGF0aWMgdm9pZCBwc3JfZm9yY2VfaHdfdHJhY2tpbmdfZXhpdChzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogeworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOworCiAJaWYgKElTX1RJR0VSTEFLRShkZXZfcHJpdikp
CiAJCS8qCiAJCSAqIFdyaXRlcyB0byBDVVJTVVJGTElWRSBpbiBUR0wgYXJlIGNhdXNpbmcgSU9N
TVUgZXJyb3JzIGFuZApAQCAtMTE2Niw3ICsxMTUzLDcgQEAgc3RhdGljIHZvaWQgcHNyX2ZvcmNl
X2h3X3RyYWNraW5nX2V4aXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2KQogCQkg
KiBTbyB1c2luZyB0aGlzIHdvcmthcm91bmQgdW50aWwgdGhpcyBpc3N1ZSBpcyByb290IGNhdXNl
ZAogCQkgKiBhbmQgYSBiZXR0ZXIgZml4IGlzIGZvdW5kLgogCQkgKi8KLQkJaW50ZWxfcHNyX2V4
aXQoZGV2X3ByaXYpOworCQlpbnRlbF9wc3JfZXhpdChpbnRlbF9kcCk7CiAJZWxzZSBpZiAoSU5U
RUxfR0VOKGRldl9wcml2KSA+PSA5KQogCQkvKgogCQkgKiBEaXNwbGF5IFdBICMwODg0OiBza2wr
CkBAIC0xMTc3LDEzICsxMTY0LDEzIEBAIHN0YXRpYyB2b2lkIHBzcl9mb3JjZV9od190cmFja2lu
Z19leGl0KHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKIAkJICogYnV0IGl0IG1h
a2VzIG1vcmUgc2Vuc2Ugd3JpdGUgdG8gdGhlIGN1cnJlbnQgYWN0aXZlCiAJCSAqIHBpcGUuCiAJ
CSAqLwotCQlpbnRlbF9kZV93cml0ZShkZXZfcHJpdiwgQ1VSU1VSRkxJVkUoZGV2X3ByaXYtPnBz
ci5waXBlKSwgMCk7CisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LCBDVVJTVVJGTElWRShpbnRl
bF9kcC0+cHNyLnBpcGUpLCAwKTsKIAllbHNlCiAJCS8qCiAJCSAqIEEgd3JpdGUgdG8gQ1VSU1VS
RkxJVkUgZG8gbm90IGNhdXNlIEhXIHRyYWNraW5nIHRvIGV4aXQgUFNSCiAJCSAqIG9uIG9sZGVy
IGdlbnMgc28gZG9pbmcgdGhlIG1hbnVhbCBleGl0IGluc3RlYWQuCiAJCSAqLwotCQlpbnRlbF9w
c3JfZXhpdChkZXZfcHJpdik7CisJCWludGVsX3Bzcl9leGl0KGludGVsX2RwKTsKIH0KIAogdm9p
ZCBpbnRlbF9wc3IyX3Byb2dyYW1fcGxhbmVfc2VsX2ZldGNoKHN0cnVjdCBpbnRlbF9wbGFuZSAq
cGxhbmUsCkBAIC0xMjMxLDE2ICsxMjE4LDI0IEBAIHZvaWQgaW50ZWxfcHNyMl9wcm9ncmFtX3Bs
YW5lX3NlbF9mZXRjaChzdHJ1Y3QgaW50ZWxfcGxhbmUgKnBsYW5lLAogCiB2b2lkIGludGVsX3Bz
cjJfcHJvZ3JhbV90cmFuc19tYW5fdHJrX2N0bChjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0
ZSAqY3J0Y19zdGF0ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9IHRvX2ludGVsX2Ny
dGMoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjKTsKLQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYgPSB0b19pOTE1KGNydGMtPmJhc2UuZGV2KTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9
ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUoY3J0Y19zdGF0ZS0+dWFwaS5jcnRjLT5kZXYpOworCXN0cnVjdCBpbnRlbF9lbmNvZGVy
ICplbmNvZGVyOwogCiAJaWYgKCFIQVNfUFNSMl9TRUxfRkVUQ0goZGV2X3ByaXYpIHx8CiAJICAg
ICFjcnRjX3N0YXRlLT5lbmFibGVfcHNyMl9zZWxfZmV0Y2gpCiAJCXJldHVybjsKIAotCWludGVs
X2RlX3dyaXRlKGRldl9wcml2LCBQU1IyX01BTl9UUktfQ1RMKHBzci0+dHJhbnNjb2RlciksCi0J
CSAgICAgICBjcnRjX3N0YXRlLT5wc3IyX21hbl90cmFja19jdGwpOworCWZvcl9lYWNoX2ludGVs
X2VuY29kZXJfbWFza19jYW5fcHNyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyLAorCQkJCQkgICAg
Y3J0Y19zdGF0ZS0+dWFwaS5lbmNvZGVyX21hc2spIHsKKwkJc3RydWN0IGludGVsX2RwICppbnRl
bF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKworCQlpZiAoIWludGVsX2RwLT5wc3Iu
ZW5hYmxlZCkKKwkJCWNvbnRpbnVlOworCisJCWludGVsX2RlX3dyaXRlKGRldl9wcml2LAorCQkJ
ICAgICAgIFBTUjJfTUFOX1RSS19DVEwoY3J0Y19zdGF0ZS0+Y3B1X3RyYW5zY29kZXIpLAorCQkJ
ICAgICAgIGNydGNfc3RhdGUtPnBzcjJfbWFuX3RyYWNrX2N0bCk7CisJfQogfQogCiBzdGF0aWMg
dm9pZCBwc3IyX21hbl90cmtfY3RsX2NhbGMoc3RydWN0IGludGVsX2NydGNfc3RhdGUgKmNydGNf
c3RhdGUsCkBAIC0xNDM1LDEzICsxNDMwLDEzIEBAIHZvaWQgaW50ZWxfcHNyX3VwZGF0ZShzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogCQkgICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rv
cl9zdGF0ZSAqY29ubl9zdGF0ZSkKIHsKIAlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZf
cHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCWJv
b2wgZW5hYmxlLCBwc3IyX2VuYWJsZTsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwgUkVB
RF9PTkNFKHBzci0+ZHApICE9IGludGVsX2RwKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkpCiAJ
CXJldHVybjsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9j
aygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAogCWVuYWJsZSA9IGNydGNfc3RhdGUtPmhhc19wc3I7
CiAJcHNyMl9lbmFibGUgPSBjcnRjX3N0YXRlLT5oYXNfcHNyMjsKQEAgLTE0NDksMTUgKzE0NDQs
MTUgQEAgdm9pZCBpbnRlbF9wc3JfdXBkYXRlKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJ
aWYgKGVuYWJsZSA9PSBwc3ItPmVuYWJsZWQgJiYgcHNyMl9lbmFibGUgPT0gcHNyLT5wc3IyX2Vu
YWJsZWQpIHsKIAkJLyogRm9yY2UgYSBQU1IgZXhpdCB3aGVuIGVuYWJsaW5nIENSQyB0byBhdm9p
ZCBDUkMgdGltZW91dHMgKi8KIAkJaWYgKGNydGNfc3RhdGUtPmNyY19lbmFibGVkICYmIHBzci0+
ZW5hYmxlZCkKLQkJCXBzcl9mb3JjZV9od190cmFja2luZ19leGl0KGRldl9wcml2KTsKKwkJCXBz
cl9mb3JjZV9od190cmFja2luZ19leGl0KGludGVsX2RwKTsKIAkJZWxzZSBpZiAoSU5URUxfR0VO
KGRldl9wcml2KSA8IDkgJiYgcHNyLT5lbmFibGVkKSB7CiAJCQkvKgogCQkJICogQWN0aXZhdGUg
UFNSIGFnYWluIGFmdGVyIGEgZm9yY2UgZXhpdCB3aGVuIGVuYWJsaW5nCiAJCQkgKiBDUkMgaW4g
b2xkZXIgZ2VucwogCQkJICovCi0JCQlpZiAoIWRldl9wcml2LT5wc3IuYWN0aXZlICYmCi0JCQkg
ICAgIWRldl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzKQotCQkJCXNjaGVkdWxlX3dv
cmsoJmRldl9wcml2LT5wc3Iud29yayk7CisJCQlpZiAoIWludGVsX2RwLT5wc3IuYWN0aXZlICYm
CisJCQkgICAgIWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzKQorCQkJCXNjaGVk
dWxlX3dvcmsoJmludGVsX2RwLT5wc3Iud29yayk7CiAJCX0KIAogCQlnb3RvIHVubG9jazsKQEAg
LTE0NjcsMzQgKzE0NjIsMjMgQEAgdm9pZCBpbnRlbF9wc3JfdXBkYXRlKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHAsCiAJCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChpbnRlbF9kcCk7CiAKIAlp
ZiAoZW5hYmxlKQotCQlpbnRlbF9wc3JfZW5hYmxlX2xvY2tlZChkZXZfcHJpdiwgY3J0Y19zdGF0
ZSwgY29ubl9zdGF0ZSk7CisJCWludGVsX3Bzcl9lbmFibGVfbG9ja2VkKGludGVsX2RwLCBjcnRj
X3N0YXRlLCBjb25uX3N0YXRlKTsKIAogdW5sb2NrOgotCW11dGV4X3VubG9jaygmZGV2X3ByaXYt
PnBzci5sb2NrKTsKKwltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CiB9CiAKIC8q
KgotICogaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUgLSB3YWl0IGZvciBQU1IxIHRvIGlkbGUKLSAq
IEBuZXdfY3J0Y19zdGF0ZTogbmV3IENSVEMgc3RhdGUKKyAqIHBzcl93YWl0X2Zvcl9pZGxlIC0g
d2FpdCBmb3IgUFNSMSB0byBpZGxlCisgKiBAaW50ZWxfZHA6IEludGVsIERQCiAgKiBAb3V0X3Zh
bHVlOiBQU1Igc3RhdHVzIGluIGNhc2Ugb2YgZmFpbHVyZQogICoKLSAqIFRoaXMgZnVuY3Rpb24g
aXMgZXhwZWN0ZWQgdG8gYmUgY2FsbGVkIGZyb20gcGlwZV91cGRhdGVfc3RhcnQoKSB3aGVyZSBp
dCBpcwotICogbm90IGV4cGVjdGVkIHRvIHJhY2Ugd2l0aCBQU1IgZW5hYmxlIG9yIGRpc2FibGUu
Ci0gKgogICogUmV0dXJuczogMCBvbiBzdWNjZXNzIG9yIC1FVElNRU9VVCBpZiBQU1Igc3RhdHVz
IGRvZXMgbm90IGlkbGUuCisgKgogICovCi1pbnQgaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlLAotCQkJICAgIHUzMiAq
b3V0X3ZhbHVlKQorc3RhdGljIGludCBwc3Jfd2FpdF9mb3JfaWRsZShzdHJ1Y3QgaW50ZWxfZHAg
KmludGVsX2RwLCB1MzIgKm91dF92YWx1ZSkKIHsKLQlzdHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YyA9
IHRvX2ludGVsX2NydGMobmV3X2NydGNfc3RhdGUtPnVhcGkuY3J0Yyk7Ci0Jc3RydWN0IGRybV9p
OTE1X3ByaXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShjcnRjLT5iYXNlLmRldik7Ci0KLQlpZiAo
IWRldl9wcml2LT5wc3IuZW5hYmxlZCB8fCAhbmV3X2NydGNfc3RhdGUtPmhhc19wc3IpCi0JCXJl
dHVybiAwOwotCi0JLyogRklYTUU6IFVwZGF0ZSB0aGlzIGZvciBQU1IyIGlmIHdlIG5lZWQgdG8g
d2FpdCBmb3IgaWRsZSAqLwotCWlmIChSRUFEX09OQ0UoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJs
ZWQpKQotCQlyZXR1cm4gMDsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBk
cF90b19pOTE1KGludGVsX2RwKTsKIAogCS8qCiAJICogRnJvbSBic3BlYzogUGFuZWwgU2VsZiBS
ZWZyZXNoIChCRFcrKQpAQCAtMTUwMiwzMiArMTQ4Niw2OCBAQCBpbnQgaW50ZWxfcHNyX3dhaXRf
Zm9yX2lkbGUoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlLAog
CSAqIGV4aXQgdHJhaW5pbmcgdGltZSArIDEuNSBtcyBvZiBhdXggY2hhbm5lbCBoYW5kc2hha2Uu
IDUwIG1zIGlzCiAJICogZGVmZW5zaXZlIGVub3VnaCB0byBjb3ZlciBldmVyeXRoaW5nLgogCSAq
LwotCiAJcmV0dXJuIF9faW50ZWxfd2FpdF9mb3JfcmVnaXN0ZXIoJmRldl9wcml2LT51bmNvcmUs
Ci0JCQkJCSBFRFBfUFNSX1NUQVRVUyhkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpLAorCQkJCQkg
RURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVyKSwKIAkJCQkJIEVEUF9QU1Jf
U1RBVFVTX1NUQVRFX01BU0ssCiAJCQkJCSBFRFBfUFNSX1NUQVRVU19TVEFURV9JRExFLCAyLCA1
MCwKIAkJCQkJIG91dF92YWx1ZSk7CiB9CiAKLXN0YXRpYyBib29sIF9fcHNyX3dhaXRfZm9yX2lk
bGVfbG9ja2VkKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKKy8qKgorICogaW50
ZWxfcHNyX3dhaXRfZm9yX2lkbGUgLSB3YWl0IGZvciBQU1IxIHRvIGlkbGUKKyAqIEBuZXdfY3J0
Y19zdGF0ZTogbmV3IENSVEMgc3RhdGUKKyAqCisgKiBUaGlzIGZ1bmN0aW9uIGlzIGV4cGVjdGVk
IHRvIGJlIGNhbGxlZCBmcm9tIHBpcGVfdXBkYXRlX3N0YXJ0KCkgd2hlcmUgaXQgaXMKKyAqIG5v
dCBleHBlY3RlZCB0byByYWNlIHdpdGggUFNSIGVuYWJsZSBvciBkaXNhYmxlLgorICovCit2b2lk
IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpu
ZXdfY3J0Y19zdGF0ZSkKK3sKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSB0
b19pOTE1KG5ld19jcnRjX3N0YXRlLT51YXBpLmNydGMtPmRldik7CisJc3RydWN0IGludGVsX2Vu
Y29kZXIgKmVuY29kZXI7CisKKwlpZiAoIW5ld19jcnRjX3N0YXRlLT5oYXNfcHNyKQorCQlyZXR1
cm47CisKKwlmb3JfZWFjaF9pbnRlbF9lbmNvZGVyX21hc2tfY2FuX3BzcigmZGV2X3ByaXYtPmRy
bSwgZW5jb2RlciwKKwkJCQkJICAgIG5ld19jcnRjX3N0YXRlLT51YXBpLmVuY29kZXJfbWFzaykg
eworCQlzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIp
OworCQl1MzIgcHNyX3N0YXR1czsKKworCQltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNyLmxvY2sp
OworCQlpZiAoIWludGVsX2RwLT5wc3IuZW5hYmxlZCB8fAorCQkgICAgKGludGVsX2RwLT5wc3Iu
ZW5hYmxlZCAmJiBpbnRlbF9kcC0+cHNyLnBzcjJfZW5hYmxlZCkpIHsKKwkJCW11dGV4X3VubG9j
aygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwkJCWNvbnRpbnVlOworCQl9CisKKwkJLyogd2hlbiB0
aGUgUFNSMSBpcyBlbmFibGVkICovCisJCWlmIChwc3Jfd2FpdF9mb3JfaWRsZShpbnRlbF9kcCwg
JnBzcl9zdGF0dXMpKQorCQkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwKKwkJCQkiUFNSIGlkbGUg
dGltZWQgb3V0IDB4JXgsIGF0b21pYyB1cGRhdGUgbWF5IGZhaWxcbiIsCisJCQkJcHNyX3N0YXR1
cyk7CisJCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwl9Cit9CisKK3N0YXRp
YyBib29sIF9fcHNyX3dhaXRfZm9yX2lkbGVfbG9ja2VkKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxf
ZHApCiB7CisJc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBfdG9faTkxNShp
bnRlbF9kcCk7CiAJaTkxNV9yZWdfdCByZWc7CiAJdTMyIG1hc2s7CiAJaW50IGVycjsKIAotCWlm
ICghZGV2X3ByaXYtPnBzci5lbmFibGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQog
CQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoZGV2X3ByaXYtPnBzci5wc3IyX2VuYWJsZWQpIHsKLQkJ
cmVnID0gRURQX1BTUjJfU1RBVFVTKGRldl9wcml2LT5wc3IudHJhbnNjb2Rlcik7CisJaWYgKGlu
dGVsX2RwLT5wc3IucHNyMl9lbmFibGVkKSB7CisJCXJlZyA9IEVEUF9QU1IyX1NUQVRVUyhpbnRl
bF9kcC0+cHNyLnRyYW5zY29kZXIpOwogCQltYXNrID0gRURQX1BTUjJfU1RBVFVTX1NUQVRFX01B
U0s7CiAJfSBlbHNlIHsKLQkJcmVnID0gRURQX1BTUl9TVEFUVVMoZGV2X3ByaXYtPnBzci50cmFu
c2NvZGVyKTsKKwkJcmVnID0gRURQX1BTUl9TVEFUVVMoaW50ZWxfZHAtPnBzci50cmFuc2NvZGVy
KTsKIAkJbWFzayA9IEVEUF9QU1JfU1RBVFVTX1NUQVRFX01BU0s7CiAJfQogCi0JbXV0ZXhfdW5s
b2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5s
b2NrKTsKIAogCWVyciA9IGludGVsX2RlX3dhaXRfZm9yX2NsZWFyKGRldl9wcml2LCByZWcsIG1h
c2ssIDUwKTsKIAlpZiAoZXJyKQpAQCAtMTUzNSw4ICsxNTU1LDggQEAgc3RhdGljIGJvb2wgX19w
c3Jfd2FpdF9mb3JfaWRsZV9sb2NrZWQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2
KQogCQkJIlRpbWVkIG91dCB3YWl0aW5nIGZvciBQU1IgSWRsZSBmb3IgcmUtZW5hYmxlXG4iKTsK
IAogCS8qIEFmdGVyIHRoZSB1bmxvY2tlZCB3YWl0LCB2ZXJpZnkgdGhhdCBQU1IgaXMgc3RpbGwg
d2FudGVkISAqLwotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JcmV0dXJuIGVy
ciA9PSAwICYmIGRldl9wcml2LT5wc3IuZW5hYmxlZDsKKwltdXRleF9sb2NrKCZpbnRlbF9kcC0+
cHNyLmxvY2spOworCXJldHVybiBlcnIgPT0gMCAmJiBpbnRlbF9kcC0+cHNyLmVuYWJsZWQ7CiB9
CiAKIHN0YXRpYyBpbnQgaW50ZWxfcHNyX2Zhc3RzZXRfZm9yY2Uoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2KQpAQCAtMTYwMiw4ICsxNjIyLDkgQEAgc3RhdGljIGludCBpbnRlbF9w
c3JfZmFzdHNldF9mb3JjZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYpCiAJcmV0
dXJuIGVycjsKIH0KIAotaW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQoraW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0
IGludGVsX2RwICppbnRlbF9kcCwgdTY0IHZhbCkKIHsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0
ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKIAljb25zdCB1MzIgbW9kZSA9IHZh
bCAmIEk5MTVfUFNSX0RFQlVHX01PREVfTUFTSzsKIAl1MzIgb2xkX21vZGU7CiAJaW50IHJldDsK
QEAgLTE2MTQsMjEgKzE2MzUsMjEgQEAgaW50IGludGVsX3Bzcl9kZWJ1Z19zZXQoc3RydWN0IGRy
bV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQogCQlyZXR1cm4gLUVJTlZBTDsKIAl9
CiAKLQlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJmRldl9wcml2LT5wc3IubG9jayk7
CisJcmV0ID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZpbnRlbF9kcC0+cHNyLmxvY2spOwog
CWlmIChyZXQpCiAJCXJldHVybiByZXQ7CiAKLQlvbGRfbW9kZSA9IGRldl9wcml2LT5wc3IuZGVi
dWcgJiBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0s7Ci0JZGV2X3ByaXYtPnBzci5kZWJ1ZyA9IHZh
bDsKKwlvbGRfbW9kZSA9IGludGVsX2RwLT5wc3IuZGVidWcgJiBJOTE1X1BTUl9ERUJVR19NT0RF
X01BU0s7CisJaW50ZWxfZHAtPnBzci5kZWJ1ZyA9IHZhbDsKIAogCS8qCiAJICogRG8gaXQgcmln
aHQgYXdheSBpZiBpdCdzIGFscmVhZHkgZW5hYmxlZCwgb3RoZXJ3aXNlIGl0IHdpbGwgYmUgZG9u
ZQogCSAqIHdoZW4gZW5hYmxpbmcgdGhlIHNvdXJjZS4KIAkgKi8KLQlpZiAoZGV2X3ByaXYtPnBz
ci5lbmFibGVkKQotCQlwc3JfaXJxX2NvbnRyb2woZGV2X3ByaXYpOworCWlmIChpbnRlbF9kcC0+
cHNyLmVuYWJsZWQpCisJCXBzcl9pcnFfY29udHJvbChpbnRlbF9kcCk7CiAKLQltdXRleF91bmxv
Y2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOwogCiAJaWYgKG9sZF9tb2RlICE9IG1vZGUpCiAJCXJldCA9IGludGVsX3Bzcl9mYXN0c2V0
X2ZvcmNlKGRldl9wcml2KTsKQEAgLTE2MzYsMjggKzE2NTcsMjggQEAgaW50IGludGVsX3Bzcl9k
ZWJ1Z19zZXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1NjQgdmFsKQogCXJl
dHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGludGVsX3Bzcl9oYW5kbGVfaXJxKHN0cnVjdCBk
cm1faTkxNV9wcml2YXRlICpkZXZfcHJpdikKK3N0YXRpYyB2b2lkIGludGVsX3Bzcl9oYW5kbGVf
aXJxKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0IGk5MTVfcHNyICpwc3Ig
PSAmZGV2X3ByaXYtPnBzcjsKKwlzdHJ1Y3QgaW50ZWxfcHNyICpwc3IgPSAmaW50ZWxfZHAtPnBz
cjsKIAotCWludGVsX3Bzcl9kaXNhYmxlX2xvY2tlZChwc3ItPmRwKTsKKwlpbnRlbF9wc3JfZGlz
YWJsZV9sb2NrZWQoaW50ZWxfZHApOwogCXBzci0+c2lua19ub3RfcmVsaWFibGUgPSB0cnVlOwog
CS8qIGxldCdzIG1ha2Ugc3VyZSB0aGF0IHNpbmsgaXMgYXdha2VuICovCi0JZHJtX2RwX2RwY2Rf
d3JpdGViKCZwc3ItPmRwLT5hdXgsIERQX1NFVF9QT1dFUiwgRFBfU0VUX1BPV0VSX0QwKTsKKwlk
cm1fZHBfZHBjZF93cml0ZWIoJmludGVsX2RwLT5hdXgsIERQX1NFVF9QT1dFUiwgRFBfU0VUX1BP
V0VSX0QwKTsKIH0KIAogc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3RydWN0IHdvcmtfc3Ry
dWN0ICp3b3JrKQogewotCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9Ci0JCWNv
bnRhaW5lcl9vZih3b3JrLCB0eXBlb2YoKmRldl9wcml2KSwgcHNyLndvcmspOworCXN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAgPQorCQljb250YWluZXJfb2Yod29yaywgdHlwZW9mKCppbnRlbF9k
cCksIHBzci53b3JrKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7CisJbXV0
ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIAotCWlmICghZGV2X3ByaXYtPnBzci5lbmFi
bGVkKQorCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKQogCQlnb3RvIHVubG9jazsKIAotCWlm
IChSRUFEX09OQ0UoZGV2X3ByaXYtPnBzci5pcnFfYXV4X2Vycm9yKSkKLQkJaW50ZWxfcHNyX2hh
bmRsZV9pcnEoZGV2X3ByaXYpOworCWlmIChSRUFEX09OQ0UoaW50ZWxfZHAtPnBzci5pcnFfYXV4
X2Vycm9yKSkKKwkJaW50ZWxfcHNyX2hhbmRsZV9pcnEoaW50ZWxfZHApOwogCiAJLyoKIAkgKiBX
ZSBoYXZlIHRvIG1ha2Ugc3VyZSBQU1IgaXMgcmVhZHkgZm9yIHJlLWVuYWJsZQpAQCAtMTY2NSw3
ICsxNjg2LDcgQEAgc3RhdGljIHZvaWQgaW50ZWxfcHNyX3dvcmsoc3RydWN0IHdvcmtfc3RydWN0
ICp3b3JrKQogCSAqIFBTUiBtaWdodCB0YWtlIHNvbWUgdGltZSB0byBnZXQgZnVsbHkgZGlzYWJs
ZWQKIAkgKiBhbmQgYmUgcmVhZHkgZm9yIHJlLWVuYWJsZS4KIAkgKi8KLQlpZiAoIV9fcHNyX3dh
aXRfZm9yX2lkbGVfbG9ja2VkKGRldl9wcml2KSkKKwlpZiAoIV9fcHNyX3dhaXRfZm9yX2lkbGVf
bG9ja2VkKGludGVsX2RwKSkKIAkJZ290byB1bmxvY2s7CiAKIAkvKgpAQCAtMTY3MywxMiArMTY5
NCwxMiBAQCBzdGF0aWMgdm9pZCBpbnRlbF9wc3Jfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndv
cmspCiAJICogcmVjaGVjay4gU2luY2UgcHNyX2ZsdXNoIGZpcnN0IGNsZWFycyB0aGlzIGFuZCB0
aGVuIHJlc2NoZWR1bGVzIHdlCiAJICogd29uJ3QgZXZlciBtaXNzIGEgZmx1c2ggd2hlbiBiYWls
aW5nIG91dCBoZXJlLgogCSAqLwotCWlmIChkZXZfcHJpdi0+cHNyLmJ1c3lfZnJvbnRidWZmZXJf
Yml0cyB8fCBkZXZfcHJpdi0+cHNyLmFjdGl2ZSkKKwlpZiAoaW50ZWxfZHAtPnBzci5idXN5X2Zy
b250YnVmZmVyX2JpdHMgfHwgaW50ZWxfZHAtPnBzci5hY3RpdmUpCiAJCWdvdG8gdW5sb2NrOwog
Ci0JaW50ZWxfcHNyX2FjdGl2YXRlKGRldl9wcml2LT5wc3IuZHApOworCWludGVsX3Bzcl9hY3Rp
dmF0ZShpbnRlbF9kcCk7CiB1bmxvY2s6Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxv
Y2spOworCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogLyoqCkBAIC0x
Njk3LDI3ICsxNzE4LDMxIEBAIHN0YXRpYyB2b2lkIGludGVsX3Bzcl93b3JrKHN0cnVjdCB3b3Jr
X3N0cnVjdCAqd29yaykKIHZvaWQgaW50ZWxfcHNyX2ludmFsaWRhdGUoc3RydWN0IGRybV9pOTE1
X3ByaXZhdGUgKmRldl9wcml2LAogCQkJICB1bnNpZ25lZCBmcm9udGJ1ZmZlcl9iaXRzLCBlbnVt
IGZiX29wX29yaWdpbiBvcmlnaW4pCiB7Ci0JaWYgKCFDQU5fUFNSKGRldl9wcml2KSkKLQkJcmV0
dXJuOworCXN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyOwogCiAJaWYgKG9yaWdpbiA9PSBP
UklHSU5fRkxJUCkKIAkJcmV0dXJuOwogCi0JbXV0ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2Nr
KTsKLQlpZiAoIWRldl9wcml2LT5wc3IuZW5hYmxlZCkgewotCQltdXRleF91bmxvY2soJmRldl9w
cml2LT5wc3IubG9jayk7Ci0JCXJldHVybjsKLQl9CisJZm9yX2VhY2hfaW50ZWxfZW5jb2Rlcl9j
YW5fcHNyKCZkZXZfcHJpdi0+ZHJtLCBlbmNvZGVyKSB7CisJCXVuc2lnbmVkIGludCBwaXBlX2Zy
b250YnVmZmVyX2JpdHMgPSBmcm9udGJ1ZmZlcl9iaXRzOworCQlzdHJ1Y3QgaW50ZWxfZHAgKmlu
dGVsX2RwID0gZW5jX3RvX2ludGVsX2RwKGVuY29kZXIpOwogCi0JZnJvbnRidWZmZXJfYml0cyAm
PSBJTlRFTF9GUk9OVEJVRkZFUl9BTExfTUFTSyhkZXZfcHJpdi0+cHNyLnBpcGUpOwotCWRldl9w
cml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzIHw9IGZyb250YnVmZmVyX2JpdHM7CisJCW11
dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCWlmICghaW50ZWxfZHAtPnBzci5lbmFi
bGVkKSB7CisJCQltdXRleF91bmxvY2soJmludGVsX2RwLT5wc3IubG9jayk7CisJCQljb250aW51
ZTsKKwkJfQogCi0JaWYgKGZyb250YnVmZmVyX2JpdHMpCi0JCWludGVsX3Bzcl9leGl0KGRldl9w
cml2KTsKKwkJcGlwZV9mcm9udGJ1ZmZlcl9iaXRzICY9CisJCQlJTlRFTF9GUk9OVEJVRkZFUl9B
TExfTUFTSyhpbnRlbF9kcC0+cHNyLnBpcGUpOworCQlpbnRlbF9kcC0+cHNyLmJ1c3lfZnJvbnRi
dWZmZXJfYml0cyB8PSBwaXBlX2Zyb250YnVmZmVyX2JpdHM7CiAKLQltdXRleF91bmxvY2soJmRl
dl9wcml2LT5wc3IubG9jayk7Ci19CisJCWlmIChwaXBlX2Zyb250YnVmZmVyX2JpdHMpCisJCQlp
bnRlbF9wc3JfZXhpdChpbnRlbF9kcCk7CiAKKwkJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNy
LmxvY2spOworCX0KK30KIC8qCiAgKiBXaGVuIHdlIHdpbGwgYmUgY29tcGxldGVseSByZWx5IG9u
IFBTUjIgUy9XIHRyYWNraW5nIGluIGZ1dHVyZSwKICAqIGludGVsX3Bzcl9mbHVzaCgpIHdpbGwg
aW52YWxpZGF0ZSBhbmQgZmx1c2ggdGhlIFBTUiBmb3IgT1JJR0lOX0ZMSVAKQEAgLTE3MjUsMTUg
KzE3NTAsMTUgQEAgdm9pZCBpbnRlbF9wc3JfaW52YWxpZGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsCiAgKiBhY2NvcmRpbmdseSBpbiBmdXR1cmUuCiAgKi8KIHN0YXRpYyB2
b2lkCi10Z2xfZGMzY29fZmx1c2goc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAot
CQl1bnNpZ25lZCBpbnQgZnJvbnRidWZmZXJfYml0cywgZW51bSBmYl9vcF9vcmlnaW4gb3JpZ2lu
KQordGdsX2RjM2NvX2ZsdXNoKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsIHVuc2lnbmVkIGlu
dCBmcm9udGJ1ZmZlcl9iaXRzLAorCQllbnVtIGZiX29wX29yaWdpbiBvcmlnaW4pCiB7Ci0JbXV0
ZXhfbG9jaygmZGV2X3ByaXYtPnBzci5sb2NrKTsKKwltdXRleF9sb2NrKCZpbnRlbF9kcC0+cHNy
LmxvY2spOwogCi0JaWYgKCFkZXZfcHJpdi0+cHNyLmRjM2NvX2VuYWJsZWQpCisJaWYgKCFpbnRl
bF9kcC0+cHNyLmRjM2NvX2VuYWJsZWQpCiAJCWdvdG8gdW5sb2NrOwogCi0JaWYgKCFkZXZfcHJp
di0+cHNyLnBzcjJfZW5hYmxlZCB8fCAhZGV2X3ByaXYtPnBzci5hY3RpdmUpCisJaWYgKCFpbnRl
bF9kcC0+cHNyLnBzcjJfZW5hYmxlZCB8fCAhaW50ZWxfZHAtPnBzci5hY3RpdmUpCiAJCWdvdG8g
dW5sb2NrOwogCiAJLyoKQEAgLTE3NDEsMTUgKzE3NjYsMTUgQEAgdGdsX2RjM2NvX2ZsdXNoKHN0
cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkgKiB3aGVuIGRlbGF5ZWQgd29yayBz
Y2hlZHVsZXMgdGhhdCBtZWFucyBkaXNwbGF5IGhhcyBiZWVuIGlkbGUuCiAJICovCiAJaWYgKCEo
ZnJvbnRidWZmZXJfYml0cyAmCi0JICAgIElOVEVMX0ZST05UQlVGRkVSX0FMTF9NQVNLKGRldl9w
cml2LT5wc3IucGlwZSkpKQorCSAgICBJTlRFTF9GUk9OVEJVRkZFUl9BTExfTUFTSyhpbnRlbF9k
cC0+cHNyLnBpcGUpKSkKIAkJZ290byB1bmxvY2s7CiAKLQl0Z2xfcHNyMl9lbmFibGVfZGMzY28o
ZGV2X3ByaXYpOwotCW1vZF9kZWxheWVkX3dvcmsoc3lzdGVtX3dxLCAmZGV2X3ByaXYtPnBzci5k
YzNjb193b3JrLAotCQkJIGRldl9wcml2LT5wc3IuZGMzY29fZXhpdF9kZWxheSk7CisJdGdsX3Bz
cjJfZW5hYmxlX2RjM2NvKGludGVsX2RwKTsKKwltb2RfZGVsYXllZF93b3JrKHN5c3RlbV93cSwg
JmludGVsX2RwLT5wc3IuZGMzY29fd29yaywKKwkJCSBpbnRlbF9kcC0+cHNyLmRjM2NvX2V4aXRf
ZGVsYXkpOwogCiB1bmxvY2s6Ci0JbXV0ZXhfdW5sb2NrKCZkZXZfcHJpdi0+cHNyLmxvY2spOwor
CW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0KIAogLyoqCkBAIC0xNzY4LDQ3
ICsxNzkzLDczIEBAIHRnbF9kYzNjb19mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiB2b2lkIGludGVsX3Bzcl9mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsCiAJCSAgICAgdW5zaWduZWQgZnJvbnRidWZmZXJfYml0cywgZW51bSBmYl9vcF9vcmln
aW4gb3JpZ2luKQogewotCWlmICghQ0FOX1BTUihkZXZfcHJpdikpCi0JCXJldHVybjsKKwlzdHJ1
Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcjsKIAotCWlmIChvcmlnaW4gPT0gT1JJR0lOX0ZMSVAp
IHsKLQkJdGdsX2RjM2NvX2ZsdXNoKGRldl9wcml2LCBmcm9udGJ1ZmZlcl9iaXRzLCBvcmlnaW4p
OwotCQlyZXR1cm47Ci0JfQorCWZvcl9lYWNoX2ludGVsX2VuY29kZXJfY2FuX3BzcigmZGV2X3By
aXYtPmRybSwgZW5jb2RlcikgeworCQl1bnNpZ25lZCBpbnQgcGlwZV9mcm9udGJ1ZmZlcl9iaXRz
ID0gZnJvbnRidWZmZXJfYml0czsKKwkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190
b19pbnRlbF9kcChlbmNvZGVyKTsKIAotCW11dGV4X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7
Ci0JaWYgKCFkZXZfcHJpdi0+cHNyLmVuYWJsZWQpIHsKLQkJbXV0ZXhfdW5sb2NrKCZkZXZfcHJp
di0+cHNyLmxvY2spOwotCQlyZXR1cm47Ci0JfQorCQlpZiAob3JpZ2luID09IE9SSUdJTl9GTElQ
KSB7CisJCQl0Z2xfZGMzY29fZmx1c2goaW50ZWxfZHAsIGZyb250YnVmZmVyX2JpdHMsIG9yaWdp
bik7CisJCQljb250aW51ZTsKKwkJfQorCisJCW11dGV4X2xvY2soJmludGVsX2RwLT5wc3IubG9j
ayk7CisJCWlmICghaW50ZWxfZHAtPnBzci5lbmFibGVkKSB7CisJCQltdXRleF91bmxvY2soJmlu
dGVsX2RwLT5wc3IubG9jayk7CisJCQljb250aW51ZTsKKwkJfQogCi0JZnJvbnRidWZmZXJfYml0
cyAmPSBJTlRFTF9GUk9OVEJVRkZFUl9BTExfTUFTSyhkZXZfcHJpdi0+cHNyLnBpcGUpOwotCWRl
dl9wcml2LT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9iaXRzICY9IH5mcm9udGJ1ZmZlcl9iaXRzOwor
CQlwaXBlX2Zyb250YnVmZmVyX2JpdHMgJj0KKwkJCUlOVEVMX0ZST05UQlVGRkVSX0FMTF9NQVNL
KGludGVsX2RwLT5wc3IucGlwZSk7CisJCWludGVsX2RwLT5wc3IuYnVzeV9mcm9udGJ1ZmZlcl9i
aXRzICY9IH5waXBlX2Zyb250YnVmZmVyX2JpdHM7CiAKLQkvKiBCeSBkZWZpbml0aW9uIGZsdXNo
ID0gaW52YWxpZGF0ZSArIGZsdXNoICovCi0JaWYgKGZyb250YnVmZmVyX2JpdHMpCi0JCXBzcl9m
b3JjZV9od190cmFja2luZ19leGl0KGRldl9wcml2KTsKKwkJLyogQnkgZGVmaW5pdGlvbiBmbHVz
aCA9IGludmFsaWRhdGUgKyBmbHVzaCAqLworCQlpZiAocGlwZV9mcm9udGJ1ZmZlcl9iaXRzKQor
CQkJcHNyX2ZvcmNlX2h3X3RyYWNraW5nX2V4aXQoaW50ZWxfZHApOwogCi0JaWYgKCFkZXZfcHJp
di0+cHNyLmFjdGl2ZSAmJiAhZGV2X3ByaXYtPnBzci5idXN5X2Zyb250YnVmZmVyX2JpdHMpCi0J
CXNjaGVkdWxlX3dvcmsoJmRldl9wcml2LT5wc3Iud29yayk7Ci0JbXV0ZXhfdW5sb2NrKCZkZXZf
cHJpdi0+cHNyLmxvY2spOworCQlpZiAoIWludGVsX2RwLT5wc3IuYWN0aXZlICYmICFpbnRlbF9k
cC0+cHNyLmJ1c3lfZnJvbnRidWZmZXJfYml0cykKKwkJCXNjaGVkdWxlX3dvcmsoJmludGVsX2Rw
LT5wc3Iud29yayk7CisJCW11dGV4X3VubG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwl9CiB9
CiAKIC8qKgogICogaW50ZWxfcHNyX2luaXQgLSBJbml0IGJhc2ljIFBTUiB3b3JrIGFuZCBtdXRl
eC4KLSAqIEBkZXZfcHJpdjogaTkxNSBkZXZpY2UgcHJpdmF0ZQorICogQGludGVsX2RwOiBJbnRl
bCBEUAogICoKLSAqIFRoaXMgZnVuY3Rpb24gaXMgIGNhbGxlZCBvbmx5IG9uY2UgYXQgZHJpdmVy
IGxvYWQgdG8gaW5pdGlhbGl6ZSBiYXNpYwotICogUFNSIHN0dWZmLgorICogVGhpcyBmdW5jdGlv
biBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGluaXRpYWxpemluZyBjb25uZWN0b3IuCisgKiAodGhlIGlu
aXRpYWxpemluZyBvZiBjb25uZWN0b3IgdHJlYXRzIHRoZSBoYW5kbGluZyBvZiBjb25uZWN0b3Ig
Y2FwYWJpbGl0aWVzKQorICogQW5kIGl0IGluaXRpYWxpemVzIGJhc2ljIFBTUiBzdHVmZiBmb3Ig
ZWFjaCBEUCBFbmNvZGVyLgogICovCi12b2lkIGludGVsX3Bzcl9pbml0KHN0cnVjdCBkcm1faTkx
NV9wcml2YXRlICpkZXZfcHJpdikKK3ZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGludGVsX2Rw
ICppbnRlbF9kcCkKIHsKKwlzdHJ1Y3QgaW50ZWxfZGlnaXRhbF9wb3J0ICpkaWdfcG9ydCA9IGRw
X3RvX2RpZ19wb3J0KGludGVsX2RwKTsKKwlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKKwogCWlmICghSEFTX1BTUihkZXZfcHJpdikpCiAJ
CXJldHVybjsKIAotCWlmICghZGV2X3ByaXYtPnBzci5zaW5rX3N1cHBvcnQpCisJaWYgKCFpbnRl
bF9kcC0+cHNyLnNpbmtfc3VwcG9ydCkKIAkJcmV0dXJuOwogCisJLyoKKwkgKiBIU1cgc3BlYyBl
eHBsaWNpdGx5IHNheXMgUFNSIGlzIHRpZWQgdG8gcG9ydCBBLgorCSAqIEJEVysgcGxhdGZvcm1z
IGhhdmUgYSBpbnN0YW5jZSBvZiBQU1IgcmVnaXN0ZXJzIHBlciB0cmFuc2NvZGVyIGJ1dAorCSAq
IEJEVywgR0VOOSBhbmQgR0VOMTEgYXJlIG5vdCB2YWxpZGF0ZWQgYnkgSFcgdGVhbSBpbiBvdGhl
ciB0cmFuc2NvZGVyCisJICogdGhhbiBlRFAgb25lLgorCSAqIEZvciBub3cgaXQgb25seSBzdXBw
b3J0cyBvbmUgaW5zdGFuY2Ugb2YgUFNSIGZvciBCRFcsIEdFTjkgYW5kIEdFTjExLgorCSAqIFNv
IGxldHMga2VlcCBpdCBoYXJkY29kZWQgdG8gUE9SVF9BIGZvciBCRFcsIEdFTjkgYW5kIEdFTjEx
LgorCSAqIEJ1dCBHRU4xMiBzdXBwb3J0cyBhIGluc3RhbmNlIG9mIFBTUiByZWdpc3RlcnMgcGVy
IHRyYW5zY29kZXIuCisJICovCisJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPCAxMiAmJiBkaWdf
cG9ydC0+YmFzZS5wb3J0ICE9IFBPUlRfQSkgeworCQlkcm1fZGJnX2ttcygmZGV2X3ByaXYtPmRy
bSwKKwkJCSAgICAiUFNSIGNvbmRpdGlvbiBmYWlsZWQ6IFBvcnQgbm90IHN1cHBvcnRlZFxuIik7
CisJCXJldHVybjsKKwl9CisKKwlpbnRlbF9kcC0+cHNyLnNvdXJjZV9zdXBwb3J0ID0gdHJ1ZTsK
KwogCWlmIChJU19IQVNXRUxMKGRldl9wcml2KSkKIAkJLyoKIAkJICogSFNXIGRvbid0IGhhdmUg
UFNSIHJlZ2lzdGVycyBvbiB0aGUgc2FtZSBzcGFjZSBhcyB0cmFuc2NvZGVyCkBAIC0xODI0LDE0
ICsxODc1LDE0IEBAIHZvaWQgaW50ZWxfcHNyX2luaXQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUg
KmRldl9wcml2KQogCS8qIFNldCBsaW5rX3N0YW5kYnkgeCBsaW5rX29mZiBkZWZhdWx0cyAqLwog
CWlmIChJU19IQVNXRUxMKGRldl9wcml2KSB8fCBJU19CUk9BRFdFTEwoZGV2X3ByaXYpKQogCQkv
KiBIU1cgYW5kIEJEVyByZXF1aXJlIHdvcmthcm91bmRzIHRoYXQgd2UgZG9uJ3QgaW1wbGVtZW50
LiAqLwotCQlkZXZfcHJpdi0+cHNyLmxpbmtfc3RhbmRieSA9IGZhbHNlOworCQlpbnRlbF9kcC0+
cHNyLmxpbmtfc3RhbmRieSA9IGZhbHNlOwogCWVsc2UgaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
PCAxMikKIAkJLyogRm9yIG5ldyBwbGF0Zm9ybXMgdXAgdG8gVEdMIGxldCdzIHJlc3BlY3QgVkJU
IGJhY2sgYWdhaW4gKi8KLQkJZGV2X3ByaXYtPnBzci5saW5rX3N0YW5kYnkgPSBkZXZfcHJpdi0+
dmJ0LnBzci5mdWxsX2xpbms7CisJCWludGVsX2RwLT5wc3IubGlua19zdGFuZGJ5ID0gZGV2X3By
aXYtPnZidC5wc3IuZnVsbF9saW5rOwogCi0JSU5JVF9XT1JLKCZkZXZfcHJpdi0+cHNyLndvcmss
IGludGVsX3Bzcl93b3JrKTsKLQlJTklUX0RFTEFZRURfV09SSygmZGV2X3ByaXYtPnBzci5kYzNj
b193b3JrLCB0Z2xfZGMzY29fZGlzYWJsZV93b3JrKTsKLQltdXRleF9pbml0KCZkZXZfcHJpdi0+
cHNyLmxvY2spOworCUlOSVRfV09SSygmaW50ZWxfZHAtPnBzci53b3JrLCBpbnRlbF9wc3Jfd29y
ayk7CisJSU5JVF9ERUxBWUVEX1dPUksoJmludGVsX2RwLT5wc3IuZGMzY29fd29yaywgdGdsX2Rj
M2NvX2Rpc2FibGVfd29yayk7CisJbXV0ZXhfaW5pdCgmaW50ZWxfZHAtPnBzci5sb2NrKTsKIH0K
IAogc3RhdGljIGludCBwc3JfZ2V0X3N0YXR1c19hbmRfZXJyb3Jfc3RhdHVzKHN0cnVjdCBpbnRl
bF9kcCAqaW50ZWxfZHAsCkBAIC0xODU3LDcgKzE5MDgsNyBAQCBzdGF0aWMgdm9pZCBwc3JfYWxw
bV9jaGVjayhzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9w
cml2YXRlICpkZXZfcHJpdiA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwogCXN0cnVjdCBkcm1fZHBf
YXV4ICphdXggPSAmaW50ZWxfZHAtPmF1eDsKLQlzdHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZf
cHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3IgKnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4
IHZhbDsKIAlpbnQgcjsKIApAQCAtMTg4NCw3ICsxOTM1LDcgQEAgc3RhdGljIHZvaWQgcHNyX2Fs
cG1fY2hlY2soc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHN0YXRpYyB2b2lkIHBzcl9jYXBh
YmlsaXR5X2NoYW5nZWRfY2hlY2soc3RydWN0IGludGVsX2RwICppbnRlbF9kcCkKIHsKIAlzdHJ1
Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYgPSBkcF90b19pOTE1KGludGVsX2RwKTsKLQlz
dHJ1Y3QgaTkxNV9wc3IgKnBzciA9ICZkZXZfcHJpdi0+cHNyOworCXN0cnVjdCBpbnRlbF9wc3Ig
KnBzciA9ICZpbnRlbF9kcC0+cHNyOwogCXU4IHZhbDsKIAlpbnQgcjsKIApAQCAtMTkwOCwxOCAr
MTk1OSwxOCBAQCBzdGF0aWMgdm9pZCBwc3JfY2FwYWJpbGl0eV9jaGFuZ2VkX2NoZWNrKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApCiB2b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3Qg
aW50ZWxfZHAgKmludGVsX2RwKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJp
diA9IGRwX3RvX2k5MTUoaW50ZWxfZHApOwotCXN0cnVjdCBpOTE1X3BzciAqcHNyID0gJmRldl9w
cml2LT5wc3I7CisJc3RydWN0IGludGVsX3BzciAqcHNyID0gJmludGVsX2RwLT5wc3I7CiAJdTgg
c3RhdHVzLCBlcnJvcl9zdGF0dXM7CiAJY29uc3QgdTggZXJyb3JzID0gRFBfUFNSX1JGQl9TVE9S
QUdFX0VSUk9SIHwKIAkJCSAgRFBfUFNSX1ZTQ19TRFBfVU5DT1JSRUNUQUJMRV9FUlJPUiB8CiAJ
CQkgIERQX1BTUl9MSU5LX0NSQ19FUlJPUjsKIAotCWlmICghQ0FOX1BTUihkZXZfcHJpdikgfHwg
IWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCisJaWYgKCFDQU5fUFNSKGludGVsX2RwKSB8fCAh
aW50ZWxfZHBfaXNfZWRwKGludGVsX2RwKSkKIAkJcmV0dXJuOwogCiAJbXV0ZXhfbG9jaygmcHNy
LT5sb2NrKTsKIAotCWlmICghcHNyLT5lbmFibGVkIHx8IHBzci0+ZHAgIT0gaW50ZWxfZHApCisJ
aWYgKCFwc3ItPmVuYWJsZWQpCiAJCWdvdG8gZXhpdDsKIAogCWlmIChwc3JfZ2V0X3N0YXR1c19h
bmRfZXJyb3Jfc3RhdHVzKGludGVsX2RwLCAmc3RhdHVzLCAmZXJyb3Jfc3RhdHVzKSkgewpAQCAt
MTk2MiwxNSArMjAxMywxNCBAQCB2b2lkIGludGVsX3Bzcl9zaG9ydF9wdWxzZShzdHJ1Y3QgaW50
ZWxfZHAgKmludGVsX2RwKQogCiBib29sIGludGVsX3Bzcl9lbmFibGVkKHN0cnVjdCBpbnRlbF9k
cCAqaW50ZWxfZHApCiB7Ci0Jc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2ID0gZHBf
dG9faTkxNShpbnRlbF9kcCk7CiAJYm9vbCByZXQ7CiAKLQlpZiAoIUNBTl9QU1IoZGV2X3ByaXYp
IHx8ICFpbnRlbF9kcF9pc19lZHAoaW50ZWxfZHApKQorCWlmICghQ0FOX1BTUihpbnRlbF9kcCkg
fHwgIWludGVsX2RwX2lzX2VkcChpbnRlbF9kcCkpCiAJCXJldHVybiBmYWxzZTsKIAotCW11dGV4
X2xvY2soJmRldl9wcml2LT5wc3IubG9jayk7Ci0JcmV0ID0gKGRldl9wcml2LT5wc3IuZHAgPT0g
aW50ZWxfZHAgJiYgZGV2X3ByaXYtPnBzci5lbmFibGVkKTsKLQltdXRleF91bmxvY2soJmRldl9w
cml2LT5wc3IubG9jayk7CisJbXV0ZXhfbG9jaygmaW50ZWxfZHAtPnBzci5sb2NrKTsKKwlyZXQg
PSBpbnRlbF9kcC0+cHNyLmVuYWJsZWQ7CisJbXV0ZXhfdW5sb2NrKCZpbnRlbF9kcC0+cHNyLmxv
Y2spOwogCiAJcmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2Rpc3BsYXkvaW50ZWxfcHNyLmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVs
X3Bzci5oCmluZGV4IDBhNTE3OTc4ZThhZi4uMDQ5MWE0OWZmZDUwIDEwMDY0NAotLS0gYS9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Bzci5oCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfcHNyLmgKQEAgLTE4LDcgKzE4LDYgQEAgc3RydWN0IGludGVs
X2F0b21pY19zdGF0ZTsKIHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZTsKIHN0cnVjdCBpbnRlbF9w
bGFuZTsKIAotI2RlZmluZSBDQU5fUFNSKGRldl9wcml2KSAoSEFTX1BTUihkZXZfcHJpdikgJiYg
ZGV2X3ByaXYtPnBzci5zaW5rX3N1cHBvcnQpCiB2b2lkIGludGVsX3Bzcl9pbml0X2RwY2Qoc3Ry
dWN0IGludGVsX2RwICppbnRlbF9kcCk7CiB2b2lkIGludGVsX3Bzcl9lbmFibGUoc3RydWN0IGlu
dGVsX2RwICppbnRlbF9kcCwKIAkJICAgICAgY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUg
KmNydGNfc3RhdGUsCkBAIC0yOCwyMCArMjcsMTkgQEAgdm9pZCBpbnRlbF9wc3JfZGlzYWJsZShz
dHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwLAogdm9pZCBpbnRlbF9wc3JfdXBkYXRlKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHAsCiAJCSAgICAgIGNvbnN0IHN0cnVjdCBpbnRlbF9jcnRjX3N0YXRl
ICpjcnRjX3N0YXRlLAogCQkgICAgICBjb25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3Rvcl9zdGF0ZSAq
Y29ubl9zdGF0ZSk7Ci1pbnQgaW50ZWxfcHNyX2RlYnVnX3NldChzdHJ1Y3QgZHJtX2k5MTVfcHJp
dmF0ZSAqZGV2X3ByaXYsIHU2NCB2YWx1ZSk7CitpbnQgaW50ZWxfcHNyX2RlYnVnX3NldChzdHJ1
Y3QgaW50ZWxfZHAgKmludGVsX2RwLCB1NjQgdmFsdWUpOwogdm9pZCBpbnRlbF9wc3JfaW52YWxp
ZGF0ZShzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCQkgIHVuc2lnbmVkIGZy
b250YnVmZmVyX2JpdHMsCiAJCQkgIGVudW0gZmJfb3Bfb3JpZ2luIG9yaWdpbik7CiB2b2lkIGlu
dGVsX3Bzcl9mbHVzaChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsCiAJCSAgICAg
dW5zaWduZWQgZnJvbnRidWZmZXJfYml0cywKIAkJICAgICBlbnVtIGZiX29wX29yaWdpbiBvcmln
aW4pOwotdm9pZCBpbnRlbF9wc3JfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3By
aXYpOwordm9pZCBpbnRlbF9wc3JfaW5pdChzdHJ1Y3QgaW50ZWxfZHAgKmludGVsX2RwKTsKIHZv
aWQgaW50ZWxfcHNyX2NvbXB1dGVfY29uZmlnKHN0cnVjdCBpbnRlbF9kcCAqaW50ZWxfZHAsCiAJ
CQkgICAgICBzdHJ1Y3QgaW50ZWxfY3J0Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7Ci12b2lkIGludGVs
X3Bzcl9pcnFfaGFuZGxlcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2X3ByaXYsIHUzMiBw
c3JfaWlyKTsKK3ZvaWQgaW50ZWxfcHNyX2lycV9oYW5kbGVyKHN0cnVjdCBpbnRlbF9kcCAqaW50
ZWxfZHAsIHUzMiBwc3JfaWlyKTsKIHZvaWQgaW50ZWxfcHNyX3Nob3J0X3B1bHNlKHN0cnVjdCBp
bnRlbF9kcCAqaW50ZWxfZHApOwotaW50IGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0
cnVjdCBpbnRlbF9jcnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSwKLQkJCSAgICB1MzIgKm91dF92
YWx1ZSk7Cit2b2lkIGludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKGNvbnN0IHN0cnVjdCBpbnRlbF9j
cnRjX3N0YXRlICpuZXdfY3J0Y19zdGF0ZSk7CiBib29sIGludGVsX3Bzcl9lbmFibGVkKHN0cnVj
dCBpbnRlbF9kcCAqaW50ZWxfZHApOwogaW50IGludGVsX3BzcjJfc2VsX2ZldGNoX3VwZGF0ZShz
dHJ1Y3QgaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSwKIAkJCQlzdHJ1Y3QgaW50ZWxfY3J0YyAq
Y3J0Yyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX3Nw
cml0ZS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYwppbmRl
eCA0MDIwMzAyNTFjNjQuLjI2MDI1MjUxYjAzOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZGlzcGxheS9pbnRlbF9zcHJpdGUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX3Nwcml0ZS5jCkBAIC05Niw3ICs5Niw2IEBAIHZvaWQgaW50ZWxfcGlwZV91
cGRhdGVfc3RhcnQoY29uc3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRl
KQogCWJvb2wgbmVlZF92bHZfZHNpX3dhID0gKElTX1ZBTExFWVZJRVcoZGV2X3ByaXYpIHx8IElT
X0NIRVJSWVZJRVcoZGV2X3ByaXYpKSAmJgogCQlpbnRlbF9jcnRjX2hhc190eXBlKG5ld19jcnRj
X3N0YXRlLCBJTlRFTF9PVVRQVVRfRFNJKTsKIAlERUZJTkVfV0FJVCh3YWl0KTsKLQl1MzIgcHNy
X3N0YXR1czsKIAogCWlmIChuZXdfY3J0Y19zdGF0ZS0+dWFwaS5hc3luY19mbGlwKQogCQlyZXR1
cm47CkBAIC0xMjIsMTAgKzEyMSw3IEBAIHZvaWQgaW50ZWxfcGlwZV91cGRhdGVfc3RhcnQoY29u
c3Qgc3RydWN0IGludGVsX2NydGNfc3RhdGUgKm5ld19jcnRjX3N0YXRlKQogCSAqIFZCTCBpbnRl
cnJ1cHRzIHdpbGwgc3RhcnQgdGhlIFBTUiBleGl0IGFuZCBwcmV2ZW50IGEgUFNSCiAJICogcmUt
ZW50cnkgYXMgd2VsbC4KIAkgKi8KLQlpZiAoaW50ZWxfcHNyX3dhaXRfZm9yX2lkbGUobmV3X2Ny
dGNfc3RhdGUsICZwc3Jfc3RhdHVzKSkKLQkJZHJtX2VycigmZGV2X3ByaXYtPmRybSwKLQkJCSJQ
U1IgaWRsZSB0aW1lZCBvdXQgMHgleCwgYXRvbWljIHVwZGF0ZSBtYXkgZmFpbFxuIiwKLQkJCXBz
cl9zdGF0dXMpOworCWludGVsX3Bzcl93YWl0X2Zvcl9pZGxlKG5ld19jcnRjX3N0YXRlKTsKIAog
CWxvY2FsX2lycV9kaXNhYmxlKCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5oCmluZGV4IGEyZmQ3
ZTUwMzliMy4uYjI4OTgzMmYwMGIxIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2LmgKQEAgLTQ3OCw0
MiArNDc4LDYgQEAgc3RydWN0IGk5MTVfZHJycyB7CiAJZW51bSBkcnJzX3N1cHBvcnRfdHlwZSB0
eXBlOwogfTsKIAotc3RydWN0IGk5MTVfcHNyIHsKLQlzdHJ1Y3QgbXV0ZXggbG9jazsKLQotI2Rl
ZmluZSBJOTE1X1BTUl9ERUJVR19NT0RFX01BU0sJMHgwZgotI2RlZmluZSBJOTE1X1BTUl9ERUJV
R19ERUZBVUxUCQkweDAwCi0jZGVmaW5lIEk5MTVfUFNSX0RFQlVHX0RJU0FCTEUJCTB4MDEKLSNk
ZWZpbmUgSTkxNV9QU1JfREVCVUdfRU5BQkxFCQkweDAyCi0jZGVmaW5lIEk5MTVfUFNSX0RFQlVH
X0ZPUkNFX1BTUjEJMHgwMwotI2RlZmluZSBJOTE1X1BTUl9ERUJVR19JUlEJCTB4MTAKLQotCXUz
MiBkZWJ1ZzsKLQlib29sIHNpbmtfc3VwcG9ydDsKLQlib29sIGVuYWJsZWQ7Ci0Jc3RydWN0IGlu
dGVsX2RwICpkcDsKLQllbnVtIHBpcGUgcGlwZTsKLQllbnVtIHRyYW5zY29kZXIgdHJhbnNjb2Rl
cjsKLQlib29sIGFjdGl2ZTsKLQlzdHJ1Y3Qgd29ya19zdHJ1Y3Qgd29yazsKLQl1bnNpZ25lZCBi
dXN5X2Zyb250YnVmZmVyX2JpdHM7Ci0JYm9vbCBzaW5rX3BzcjJfc3VwcG9ydDsKLQlib29sIGxp
bmtfc3RhbmRieTsKLQlib29sIGNvbG9yaW1ldHJ5X3N1cHBvcnQ7Ci0JYm9vbCBwc3IyX2VuYWJs
ZWQ7Ci0JYm9vbCBwc3IyX3NlbF9mZXRjaF9lbmFibGVkOwotCXU4IHNpbmtfc3luY19sYXRlbmN5
OwotCWt0aW1lX3QgbGFzdF9lbnRyeV9hdHRlbXB0OwotCWt0aW1lX3QgbGFzdF9leGl0OwotCWJv
b2wgc2lua19ub3RfcmVsaWFibGU7Ci0JYm9vbCBpcnFfYXV4X2Vycm9yOwotCXUxNiBzdV94X2dy
YW51bGFyaXR5OwotCWJvb2wgZGMzY29fZW5hYmxlZDsKLQl1MzIgZGMzY29fZXhpdF9kZWxheTsK
LQlzdHJ1Y3QgZGVsYXllZF93b3JrIGRjM2NvX3dvcms7Ci0Jc3RydWN0IGRybV9kcF92c2Nfc2Rw
IHZzYzsKLX07Ci0KICNkZWZpbmUgUVVJUktfTFZEU19TU0NfRElTQUJMRSAoMTw8MSkKICNkZWZp
bmUgUVVJUktfSU5WRVJUX0JSSUdIVE5FU1MgKDE8PDIpCiAjZGVmaW5lIFFVSVJLX0JBQ0tMSUdI
VF9QUkVTRU5UICgxPDwzKQpAQCAtMTA0MSw4ICsxMDA1LDYgQEAgc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgewogCiAJc3RydWN0IGk5MTVfcG93ZXJfZG9tYWlucyBwb3dlcl9kb21haW5zOwogCi0J
c3RydWN0IGk5MTVfcHNyIHBzcjsKLQogCXN0cnVjdCBpOTE1X2dwdV9lcnJvciBncHVfZXJyb3I7
CiAKIAlzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqdmx2X3BjdHg7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2lycS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9pcnEuYwppbmRleCAwZmYzZjY0YzRiYjUuLjk4MTQ1YTdmMjhhNCAxMDA2NDQKLS0tIGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvaTkxNV9pcnEuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9p
OTE1X2lycS5jCkBAIC0yMDk0LDEwICsyMDk0LDE5IEBAIHN0YXRpYyB2b2lkIGl2Yl9kaXNwbGF5
X2lycV9oYW5kbGVyKHN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiwKIAkJaXZiX2Vy
cl9pbnRfaGFuZGxlcihkZXZfcHJpdik7CiAKIAlpZiAoZGVfaWlyICYgREVfRURQX1BTUl9JTlRf
SFNXKSB7Ci0JCXUzMiBwc3JfaWlyID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRldl9wcml2LT51bmNv
cmUsIEVEUF9QU1JfSUlSKTsKKwkJc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29kZXI7CiAKLQkJ
aW50ZWxfcHNyX2lycV9oYW5kbGVyKGRldl9wcml2LCBwc3JfaWlyKTsKLQkJaW50ZWxfdW5jb3Jl
X3dyaXRlKCZkZXZfcHJpdi0+dW5jb3JlLCBFRFBfUFNSX0lJUiwgcHNyX2lpcik7CisJCWZvcl9l
YWNoX2ludGVsX2VuY29kZXJfY2FuX3BzcigmZGV2X3ByaXYtPmRybSwgZW5jb2RlcikgeworCQkJ
c3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190b19pbnRlbF9kcChlbmNvZGVyKTsKKwor
CQkJdTMyIHBzcl9paXIgPSBpbnRlbF91bmNvcmVfcmVhZCgmZGV2X3ByaXYtPnVuY29yZSwKKwkJ
CQkJCQlFRFBfUFNSX0lJUik7CisKKwkJCWludGVsX3Bzcl9pcnFfaGFuZGxlcihpbnRlbF9kcCwg
cHNyX2lpcik7CisJCQlpbnRlbF91bmNvcmVfd3JpdGUoJmRldl9wcml2LT51bmNvcmUsCisJCQkJ
CSAgIEVEUF9QU1JfSUlSLCBwc3JfaWlyKTsKKwkJCWJyZWFrOworCQl9CiAJfQogCiAJaWYgKGRl
X2lpciAmIERFX0FVWF9DSEFOTkVMX0FfSVZCKQpAQCAtMjMxMCwyMSArMjMxOSwzMCBAQCBnZW44
X2RlX21pc2NfaXJxX2hhbmRsZXIoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LCB1
MzIgaWlyKQogCX0KIAogCWlmIChpaXIgJiBHRU44X0RFX0VEUF9QU1IpIHsKKwkJc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXI7CiAJCXUzMiBwc3JfaWlyOwogCQlpOTE1X3JlZ190IGlpcl9y
ZWc7CiAKLQkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikgPj0gMTIpCi0JCQlpaXJfcmVnID0gVFJB
TlNfUFNSX0lJUihkZXZfcHJpdi0+cHNyLnRyYW5zY29kZXIpOwotCQllbHNlCi0JCQlpaXJfcmVn
ID0gRURQX1BTUl9JSVI7CisJCWZvcl9lYWNoX2ludGVsX2VuY29kZXJfY2FuX3BzcigmZGV2X3By
aXYtPmRybSwgZW5jb2RlcikgeworCQkJc3RydWN0IGludGVsX2RwICppbnRlbF9kcCA9IGVuY190
b19pbnRlbF9kcChlbmNvZGVyKTsKIAotCQlwc3JfaWlyID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRl
dl9wcml2LT51bmNvcmUsIGlpcl9yZWcpOwotCQlpbnRlbF91bmNvcmVfd3JpdGUoJmRldl9wcml2
LT51bmNvcmUsIGlpcl9yZWcsIHBzcl9paXIpOworCQkJaWYgKElOVEVMX0dFTihkZXZfcHJpdikg
Pj0gMTIpCisJCQkJaWlyX3JlZyA9IFRSQU5TX1BTUl9JSVIoaW50ZWxfZHAtPnBzci50cmFuc2Nv
ZGVyKTsKKwkJCWVsc2UKKwkJCQlpaXJfcmVnID0gRURQX1BTUl9JSVI7CiAKLQkJaWYgKHBzcl9p
aXIpCi0JCQlmb3VuZCA9IHRydWU7CisJCQlwc3JfaWlyID0gaW50ZWxfdW5jb3JlX3JlYWQoJmRl
dl9wcml2LT51bmNvcmUsIGlpcl9yZWcpOworCQkJaW50ZWxfdW5jb3JlX3dyaXRlKCZkZXZfcHJp
di0+dW5jb3JlLCBpaXJfcmVnLCBwc3JfaWlyKTsKIAotCQlpbnRlbF9wc3JfaXJxX2hhbmRsZXIo
ZGV2X3ByaXYsIHBzcl9paXIpOworCQkJaWYgKHBzcl9paXIpCisJCQkJZm91bmQgPSB0cnVlOwor
CisJCQlpbnRlbF9wc3JfaXJxX2hhbmRsZXIoaW50ZWxfZHAsIHBzcl9paXIpOworCisJCQkvKiBw
cmlvciBHRU4xMiBvbmx5IGhhdmUgb25lIEVEUCBQU1IgKi8KKwkJCWlmIChJTlRFTF9HRU4oZGV2
X3ByaXYpIDwgMTIpCisJCQkJYnJlYWs7CisJCX0KIAl9CiAKIAlpZiAoIWZvdW5kKQotLSAKMi4z
MC4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRl
bC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6
Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZngK

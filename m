Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 293FA45EE0
	for <lists+intel-gfx@lfdr.de>; Fri, 14 Jun 2019 15:48:03 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 6EE47898EA;
	Fri, 14 Jun 2019 13:48:01 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from bombadil.infradead.org (bombadil.infradead.org
 [IPv6:2607:7c80:54:e::133])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 57C3D898C4;
 Fri, 14 Jun 2019 13:47:58 +0000 (UTC)
Received: from 213-225-9-13.nat.highway.a1.net ([213.225.9.13] helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hbmYQ-0004jF-5L; Fri, 14 Jun 2019 13:47:42 +0000
From: Christoph Hellwig <hch@lst.de>
To: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <maxime.ripard@bootlin.com>, Sean Paul <sean@poorly.run>,
 David Airlie <airlied@linux.ie>, Daniel Vetter <daniel@ffwll.ch>,
 Jani Nikula <jani.nikula@linux.intel.com>,
 Joonas Lahtinen <joonas.lahtinen@linux.intel.com>,
 Rodrigo Vivi <rodrigo.vivi@intel.com>, Ian Abbott <abbotti@mev.co.uk>,
 H Hartley Sweeten <hsweeten@visionengravers.com>
Date: Fri, 14 Jun 2019 15:47:13 +0200
Message-Id: <20190614134726.3827-4-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614134726.3827-1-hch@lst.de>
References: <20190614134726.3827-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; 
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=+xs8xEvecIN+pidhw5Y71rlRjZmb8fJOnZhp8o/DsSw=; b=LZajKbx8vMWmoPyPihl3W8b1II
 oarEXVrrz2rxvZ0BgXTxaFSJ89DHAoMwNs46qftGPIs2iOcmI3PGUZe+ESDrKJqwk8Pn/9InuTjbe
 w/TkgWs39UEZl5gAqGPQNkS8QJr9eK5xRj4GSD3z1xgEem0WZvNMx/y06DWCWoiPPtMn6DV1KJtT4
 3dephzfXQQJVrhS8KA9VAcX9i7Lqdp6j+6fd+Du7mG+QFzmKyVufezvRPWVqUb7kH/R5PAyOXYi6v
 YOEZa1MgatXouQX+rfRB0aOlbZAvy1un6+StmE3Bzk1C+2JjRxYHzmpazpOIF5cCv5pJpncKedcmm
 mul+NSrA==;
Subject: [Intel-gfx] [PATCH 03/16] drm/i915: stop using drm_pci_alloc
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: devel@driverdev.osuosl.org, linux-s390@vger.kernel.org,
 Intel Linux Wireless <linuxwifi@intel.com>, linux-rdma@vger.kernel.org,
 netdev@vger.kernel.org, intel-gfx@lists.freedesktop.org,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 iommu@lists.linux-foundation.org,
 "moderated list:ARM PORT" <linux-arm-kernel@lists.infradead.org>,
 linux-media@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

UmVtb3ZlIHVzYWdlIG9mIHRoZSBsZWdhY3kgZHJtIFBDSSBETUEgd3JhcHBlcnMsIGFuZCB3aXRo
IHRoYXQgdGhlCmluY29ycmVjdCB1c2FnZSBjb2NrdGFpbCBvZiBfX0dGUF9DT01QLCB2aXJ0X3Rv
X3BhZ2Ugb24gRE1BIGFsbG9jYXRpb24KYW5kIFNldFBhZ2VSZXNlcnZlZC4KClNpZ25lZC1vZmYt
Ynk6IENocmlzdG9waCBIZWxsd2lnIDxoY2hAbHN0LmRlPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L2k5MTVfZ2VtLmMgICAgICAgIHwgMzAgKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0KIGRy
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtX29iamVjdC5oIHwgIDMgKystCiBkcml2ZXJzL2dw
dS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMgICB8ICAyICstCiAzIGZpbGVzIGNoYW5nZWQsIDE4
IGluc2VydGlvbnMoKyksIDE3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfZ2VtLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5jCmlu
ZGV4IGFkMDFjOTJhYWY3NC4uOGYyMDUzYzkxYWZmIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pOTE1X2dlbS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZ2VtLmMK
QEAgLTIyOCw3ICsyMjgsNiBAQCBpOTE1X2dlbV9nZXRfYXBlcnR1cmVfaW9jdGwoc3RydWN0IGRy
bV9kZXZpY2UgKmRldiwgdm9pZCAqZGF0YSwKIHN0YXRpYyBpbnQgaTkxNV9nZW1fb2JqZWN0X2dl
dF9wYWdlc19waHlzKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0ICpvYmopCiB7CiAJc3RydWN0
IGFkZHJlc3Nfc3BhY2UgKm1hcHBpbmcgPSBvYmotPmJhc2UuZmlscC0+Zl9tYXBwaW5nOwotCWRy
bV9kbWFfaGFuZGxlX3QgKnBoeXM7CiAJc3RydWN0IHNnX3RhYmxlICpzdDsKIAlzdHJ1Y3Qgc2Nh
dHRlcmxpc3QgKnNnOwogCWNoYXIgKnZhZGRyOwpAQCAtMjQyLDEzICsyNDEsMTMgQEAgc3RhdGlj
IGludCBpOTE1X2dlbV9vYmplY3RfZ2V0X3BhZ2VzX3BoeXMoc3RydWN0IGRybV9pOTE1X2dlbV9v
YmplY3QgKm9iaikKIAkgKiB0byBoYW5kbGUgYWxsIHBvc3NpYmxlIGNhbGxlcnMsIGFuZCBnaXZl
biB0eXBpY2FsIG9iamVjdCBzaXplcywKIAkgKiB0aGUgYWxpZ25tZW50IG9mIHRoZSBidWRkeSBh
bGxvY2F0aW9uIHdpbGwgbmF0dXJhbGx5IG1hdGNoLgogCSAqLwotCXBoeXMgPSBkcm1fcGNpX2Fs
bG9jKG9iai0+YmFzZS5kZXYsCi0JCQkgICAgIHJvdW5kdXBfcG93X29mX3R3byhvYmotPmJhc2Uu
c2l6ZSksCi0JCQkgICAgIHJvdW5kdXBfcG93X29mX3R3byhvYmotPmJhc2Uuc2l6ZSkpOwotCWlm
ICghcGh5cykKKwlvYmotPnBoeXNfdmFkZHIgPSBkbWFfYWxsb2NfY29oZXJlbnQoJm9iai0+YmFz
ZS5kZXYtPnBkZXYtPmRldiwKKwkJCXJvdW5kdXBfcG93X29mX3R3byhvYmotPmJhc2Uuc2l6ZSks
CisJCQkmb2JqLT5waHlzX2hhbmRsZSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFvYmotPnBoeXNfdmFk
ZHIpCiAJCXJldHVybiAtRU5PTUVNOwogCi0JdmFkZHIgPSBwaHlzLT52YWRkcjsKKwl2YWRkciA9
IG9iai0+cGh5c192YWRkcjsKIAlmb3IgKGkgPSAwOyBpIDwgb2JqLT5iYXNlLnNpemUgLyBQQUdF
X1NJWkU7IGkrKykgewogCQlzdHJ1Y3QgcGFnZSAqcGFnZTsKIAkJY2hhciAqc3JjOwpAQCAtMjg2
LDE4ICsyODUsMTcgQEAgc3RhdGljIGludCBpOTE1X2dlbV9vYmplY3RfZ2V0X3BhZ2VzX3BoeXMo
c3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9iaikKIAlzZy0+b2Zmc2V0ID0gMDsKIAlzZy0+
bGVuZ3RoID0gb2JqLT5iYXNlLnNpemU7CiAKLQlzZ19kbWFfYWRkcmVzcyhzZykgPSBwaHlzLT5i
dXNhZGRyOworCXNnX2RtYV9hZGRyZXNzKHNnKSA9IG9iai0+cGh5c19oYW5kbGU7CiAJc2dfZG1h
X2xlbihzZykgPSBvYmotPmJhc2Uuc2l6ZTsKIAotCW9iai0+cGh5c19oYW5kbGUgPSBwaHlzOwot
CiAJX19pOTE1X2dlbV9vYmplY3Rfc2V0X3BhZ2VzKG9iaiwgc3QsIHNnLT5sZW5ndGgpOwogCiAJ
cmV0dXJuIDA7CiAKIGVycl9waHlzOgotCWRybV9wY2lfZnJlZShvYmotPmJhc2UuZGV2LCBwaHlz
KTsKLQorCWRtYV9mcmVlX2NvaGVyZW50KCZvYmotPmJhc2UuZGV2LT5wZGV2LT5kZXYsCisJCQly
b3VuZHVwX3Bvd19vZl90d28ob2JqLT5iYXNlLnNpemUpLCBvYmotPnBoeXNfdmFkZHIsCisJCQlv
YmotPnBoeXNfaGFuZGxlKTsKIAlyZXR1cm4gZXJyOwogfQogCkBAIC0zMzUsNyArMzMzLDcgQEAg
aTkxNV9nZW1fb2JqZWN0X3B1dF9wYWdlc19waHlzKHN0cnVjdCBkcm1faTkxNV9nZW1fb2JqZWN0
ICpvYmosCiAKIAlpZiAob2JqLT5tbS5kaXJ0eSkgewogCQlzdHJ1Y3QgYWRkcmVzc19zcGFjZSAq
bWFwcGluZyA9IG9iai0+YmFzZS5maWxwLT5mX21hcHBpbmc7Ci0JCWNoYXIgKnZhZGRyID0gb2Jq
LT5waHlzX2hhbmRsZS0+dmFkZHI7CisJCWNoYXIgKnZhZGRyID0gb2JqLT5waHlzX3ZhZGRyOwog
CQlpbnQgaTsKIAogCQlmb3IgKGkgPSAwOyBpIDwgb2JqLT5iYXNlLnNpemUgLyBQQUdFX1NJWkU7
IGkrKykgewpAQCAtMzYzLDcgKzM2MSw5IEBAIGk5MTVfZ2VtX29iamVjdF9wdXRfcGFnZXNfcGh5
cyhzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCAqb2JqLAogCXNnX2ZyZWVfdGFibGUocGFnZXMp
OwogCWtmcmVlKHBhZ2VzKTsKIAotCWRybV9wY2lfZnJlZShvYmotPmJhc2UuZGV2LCBvYmotPnBo
eXNfaGFuZGxlKTsKKwlkbWFfZnJlZV9jb2hlcmVudCgmb2JqLT5iYXNlLmRldi0+cGRldi0+ZGV2
LAorCQkJcm91bmR1cF9wb3dfb2ZfdHdvKG9iai0+YmFzZS5zaXplKSwgb2JqLT5waHlzX3ZhZGRy
LAorCQkJb2JqLT5waHlzX2hhbmRsZSk7CiB9CiAKIHN0YXRpYyB2b2lkCkBAIC02MDMsNyArNjAz
LDcgQEAgaTkxNV9nZW1fcGh5c19wd3JpdGUoc3RydWN0IGRybV9pOTE1X2dlbV9vYmplY3QgKm9i
aiwKIAkJICAgICBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX3B3cml0ZSAqYXJncywKIAkJICAgICBzdHJ1
Y3QgZHJtX2ZpbGUgKmZpbGUpCiB7Ci0Jdm9pZCAqdmFkZHIgPSBvYmotPnBoeXNfaGFuZGxlLT52
YWRkciArIGFyZ3MtPm9mZnNldDsKKwl2b2lkICp2YWRkciA9IG9iai0+cGh5c192YWRkciArIGFy
Z3MtPm9mZnNldDsKIAljaGFyIF9fdXNlciAqdXNlcl9kYXRhID0gdTY0X3RvX3VzZXJfcHRyKGFy
Z3MtPmRhdGFfcHRyKTsKIAogCS8qIFdlIG1hbnVhbGx5IGNvbnRyb2wgdGhlIGRvbWFpbiBoZXJl
IGFuZCBwcmV0ZW5kIHRoYXQgaXQKQEAgLTE0MzEsNyArMTQzMSw3IEBAIGk5MTVfZ2VtX3B3cml0
ZV9pb2N0bChzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LCB2b2lkICpkYXRhLAogCQlyZXQgPSBpOTE1
X2dlbV9ndHRfcHdyaXRlX2Zhc3Qob2JqLCBhcmdzKTsKIAogCWlmIChyZXQgPT0gLUVGQVVMVCB8
fCByZXQgPT0gLUVOT1NQQykgewotCQlpZiAob2JqLT5waHlzX2hhbmRsZSkKKwkJaWYgKG9iai0+
cGh5c192YWRkcikKIAkJCXJldCA9IGk5MTVfZ2VtX3BoeXNfcHdyaXRlKG9iaiwgYXJncywgZmls
ZSk7CiAJCWVsc2UKIAkJCXJldCA9IGk5MTVfZ2VtX3NobWVtX3B3cml0ZShvYmosIGFyZ3MpOwpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fb2JqZWN0LmggYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbV9vYmplY3QuaAppbmRleCBjYTkzYTQwYzBjODcuLjE0
YmQyZDYxZDBmNiAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fb2Jq
ZWN0LmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW1fb2JqZWN0LmgKQEAgLTI5
MCw3ICsyOTAsOCBAQCBzdHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdCB7CiAJfTsKIAogCS8qKiBm
b3IgcGh5cyBhbGxvY2F0ZWQgb2JqZWN0cyAqLwotCXN0cnVjdCBkcm1fZG1hX2hhbmRsZSAqcGh5
c19oYW5kbGU7CisJZG1hX2FkZHJfdCBwaHlzX2hhbmRsZTsKKwl2b2lkICpwaHlzX3ZhZGRyOwog
CiAJc3RydWN0IHJlc2VydmF0aW9uX29iamVjdCBfX2J1aWx0aW5fcmVzdjsKIH07CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMgYi9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMKaW5kZXggNTA5ODIyOGYxMzAyLi40ZjhiMzY4YWM0ZTIg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX2Rpc3BsYXkuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kaXNwbGF5LmMKQEAgLTEwMDY2LDcgKzEwMDY2LDcg
QEAgc3RhdGljIHUzMiBpbnRlbF9jdXJzb3JfYmFzZShjb25zdCBzdHJ1Y3QgaW50ZWxfcGxhbmVf
c3RhdGUgKnBsYW5lX3N0YXRlKQogCXUzMiBiYXNlOwogCiAJaWYgKElOVEVMX0lORk8oZGV2X3By
aXYpLT5kaXNwbGF5LmN1cnNvcl9uZWVkc19waHlzaWNhbCkKLQkJYmFzZSA9IG9iai0+cGh5c19o
YW5kbGUtPmJ1c2FkZHI7CisJCWJhc2UgPSBvYmotPnBoeXNfaGFuZGxlOwogCWVsc2UKIAkJYmFz
ZSA9IGludGVsX3BsYW5lX2dndHRfb2Zmc2V0KHBsYW5lX3N0YXRlKTsKIAotLSAKMi4yMC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZngg
bWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0
cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

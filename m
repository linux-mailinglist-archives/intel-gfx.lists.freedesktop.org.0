Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id EFFFD39F492
	for <lists+intel-gfx@lfdr.de>; Tue,  8 Jun 2021 13:03:55 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id C9B546EBA8;
	Tue,  8 Jun 2021 11:03:53 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9110F6EB9F;
 Tue,  8 Jun 2021 11:03:51 +0000 (UTC)
IronPort-SDR: 0NUjpXeZpbivg6RlmUNXX6L2NZabkGQkl2UbJdGMJunWutt/vRcfnal+GO8QtT5zQTu7vwO6na
 7CfD5F24mewA==
X-IronPort-AV: E=McAfee;i="6200,9189,10008"; a="268674817"
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="268674817"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jun 2021 04:03:50 -0700
IronPort-SDR: fLKoVspU9fIR386IVT2WcvtpksHgWPq7ullIIvCIXMd+jmco+58eId8Vq9wMp0FAwIWHYKXX+1
 lCjaKvj62seA==
X-IronPort-AV: E=Sophos;i="5.83,257,1616482800"; d="scan'208";a="552237216"
Received: from mrahim1x-mobl.gar.corp.intel.com (HELO mwauld-desk1.intel.com)
 ([10.215.170.251])
 by fmsmga001-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 08 Jun 2021 04:03:42 -0700
From: Matthew Auld <matthew.auld@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue,  8 Jun 2021 12:02:52 +0100
Message-Id: <20210608110254.169357-6-matthew.auld@intel.com>
X-Mailer: git-send-email 2.26.3
In-Reply-To: <20210608110254.169357-1-matthew.auld@intel.com>
References: <20210608110254.169357-1-matthew.auld@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v3 5/7] drm/i915/ttm: remove node usage in our
 naming
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: =?UTF-8?q?Thomas=20Hellstr=C3=B6m?= <thomas.hellstrom@linux.intel.com>,
 dri-devel@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Tm93IHRoYXQgdHRtX3Jlc291cmNlX21hbmFnZXIganVzdCByZXR1cm5zIGEgZ2VuZXJpYyB0dG1f
cmVzb3VyY2Ugd2UKZG9uJ3QgbmVlZCB0byByZWZlcmVuY2UgdGhlIG1tX25vZGUgc3R1ZmYgYW55
bW9yZSB3aGljaCBtb3N0bHkgb25seQptYWtlcyBzZW5zZSBmb3IgZHJtX21tX25vZGUuIEluIHRo
ZSBuZXh0IGZldyBwYXRjaGVzIHdlIHdhbnQgc3dpdGNoIG92ZXIKdG8gdGhlIHR0bV9idWRkeV9t
YW4gd2hpY2ggaXMganVzdCBhbm90aGVyIHR5cGUgb2YgdHRtX3Jlc291cmNlIHNvCnJlZmxlY3Qg
dGhhdCBpbiB0aGUgbmFtaW5nLgoKU2lnbmVkLW9mZi1ieTogTWF0dGhldyBBdWxkIDxtYXR0aGV3
LmF1bGRAaW50ZWwuY29tPgpDYzogVGhvbWFzIEhlbGxzdHLDtm0gPHRob21hcy5oZWxsc3Ryb21A
bGludXguaW50ZWwuY29tPgotLS0KIC4uLi9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVj
dF90eXBlcy5oICB8ICA1ICsrLS0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV90
dG0uYyAgICAgICB8ICAyICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9yZWdpb25fdHRt
LmMgICAgICAgfCAzMCArKysrKysrKystLS0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9p
bnRlbF9yZWdpb25fdHRtLmggICAgICAgfCAxNCArKysrLS0tLS0KIGRyaXZlcnMvZ3B1L2RybS9p
OTE1L3NlbGZ0ZXN0cy9tb2NrX3JlZ2lvbi5jICB8IDE2ICsrKysrLS0tLS0KIDUgZmlsZXMgY2hh
bmdlZCwgMzQgaW5zZXJ0aW9ucygrKSwgMzMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX29iamVjdF90eXBlcy5oCmluZGV4IDJhMjNiNzc0MjRi
My4uM2EyZDllY2Y4ZTAzIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkx
NV9nZW1fb2JqZWN0X3R5cGVzLmgKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVf
Z2VtX29iamVjdF90eXBlcy5oCkBAIC0yNjUsOSArMjY1LDEwIEBAIHN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0IHsKIAkJc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKnJlZ2lvbjsKIAogCQkv
KioKLQkJICogTWVtb3J5IG1hbmFnZXIgbm9kZSBhbGxvY2F0ZWQgZm9yIHRoaXMgb2JqZWN0Lgor
CQkgKiBNZW1vcnkgbWFuYWdlciByZXNvdXJjZSBhbGxvY2F0ZWQgZm9yIHRoaXMgb2JqZWN0LiBP
bmx5CisJCSAqIG5lZWRlZCBmb3IgdGhlIG1vY2sgcmVnaW9uLgogCQkgKi8KLQkJdm9pZCAqc3Rf
bW1fbm9kZTsKKwkJc3RydWN0IHR0bV9yZXNvdXJjZSAqcmVzOwogCiAJCS8qKgogCQkgKiBFbGVt
ZW50IHdpdGhpbiBtZW1vcnlfcmVnaW9uLT5vYmplY3RzIG9yIHJlZ2lvbi0+cHVyZ2VhYmxlCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdHRtLmMgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdHRtLmMKaW5kZXggYzYxMjI3NWMzNmM5Li41
NTA0NTMxMGEzMDAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dl
bV90dG0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9nZW0vaTkxNV9nZW1fdHRtLmMKQEAg
LTMzMiw3ICszMzIsNyBAQCBpOTE1X3R0bV9yZXNvdXJjZV9nZXRfc3Qoc3RydWN0IGRybV9pOTE1
X2dlbV9vYmplY3QgKm9iaiwKIAlpZiAobWFuLT51c2VfdHQpCiAJCXJldHVybiBpOTE1X3R0bV90
dF9nZXRfc3QoYm8tPnR0bSk7CiAKLQlyZXR1cm4gaW50ZWxfcmVnaW9uX3R0bV9ub2RlX3RvX3N0
KG9iai0+bW0ucmVnaW9uLCByZXMtPm1tX25vZGUpOworCXJldHVybiBpbnRlbF9yZWdpb25fdHRt
X3Jlc291cmNlX3RvX3N0KG9iai0+bW0ucmVnaW9uLCByZXMpOwogfQogCiBzdGF0aWMgaW50IGk5
MTVfdHRtX21vdmUoc3RydWN0IHR0bV9idWZmZXJfb2JqZWN0ICpibywgYm9vbCBldmljdCwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uYwppbmRleCA1YTY2NGY2Y2M5M2YuLmY5
ZDYxNjU0NDcyOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfcmVnaW9u
X3R0bS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uYwpAQCAt
NjgsNyArNjgsNyBAQCBpbnQgaW50ZWxfcmVnaW9uX3RvX3R0bV90eXBlKGNvbnN0IHN0cnVjdCBp
bnRlbF9tZW1vcnlfcmVnaW9uICptZW0pCiB9CiAKIHN0YXRpYyBzdHJ1Y3QgdHRtX3Jlc291cmNl
ICoKLWludGVsX3JlZ2lvbl90dG1fbm9kZV9yZXNlcnZlKHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVn
aW9uICptZW0sCitpbnRlbF9yZWdpb25fdHRtX3Jlc291cmNlX3Jlc2VydmUoc3RydWN0IGludGVs
X21lbW9yeV9yZWdpb24gKm1lbSwKIAkJCSAgICAgIHJlc291cmNlX3NpemVfdCBvZmZzZXQsCiAJ
CQkgICAgICByZXNvdXJjZV9zaXplX3Qgc2l6ZSkKIHsKQEAgLTEwMCwxMiArMTAwLDEyIEBAIGlu
dGVsX3JlZ2lvbl90dG1fbm9kZV9yZXNlcnZlKHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICpt
ZW0sCiB9CiAKIC8qKgotICogaW50ZWxfcmVnaW9uX3R0bV9ub2RlX2ZyZWUgLSBGcmVlIGEgbm9k
ZSBhbGxvY2F0ZWQgZnJvbSBhIHJlc291cmNlIG1hbmFnZXIKLSAqIEBtZW06IFRoZSByZWdpb24g
dGhlIG5vZGUgd2FzIGFsbG9jYXRlZCBmcm9tLgotICogQG5vZGU6IFRoZSBvcGFxdWUgbm9kZSBy
ZXByZXNlbnRpbmcgYW4gYWxsb2NhdGlvbi4KKyAqIGludGVsX3JlZ2lvbl90dG1fcmVzb3VyY2Vf
ZnJlZSAtIEZyZWUgYSByZXNvdXJjZSBhbGxvY2F0ZWQgZnJvbSBhIHJlc291cmNlIG1hbmFnZXIK
KyAqIEBtZW06IFRoZSByZWdpb24gdGhlIHJlc291cmNlIHdhcyBhbGxvY2F0ZWQgZnJvbS4KKyAq
IEByZXM6IFRoZSBvcGFxdWUgcmVzb3VyY2UgcmVwcmVzZW50aW5nIGFuIGFsbG9jYXRpb24uCiAg
Ki8KLXZvaWQgaW50ZWxfcmVnaW9uX3R0bV9ub2RlX2ZyZWUoc3RydWN0IGludGVsX21lbW9yeV9y
ZWdpb24gKm1lbSwKLQkJCQlzdHJ1Y3QgdHRtX3Jlc291cmNlICpyZXMpCit2b2lkIGludGVsX3Jl
Z2lvbl90dG1fcmVzb3VyY2VfZnJlZShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAor
CQkJCSAgICBzdHJ1Y3QgdHRtX3Jlc291cmNlICpyZXMpCiB7CiAJc3RydWN0IHR0bV9yZXNvdXJj
ZV9tYW5hZ2VyICptYW4gPSBtZW0tPnJlZ2lvbl9wcml2YXRlOwogCkBAIC0xMTMsOCArMTEzLDgg
QEAgdm9pZCBpbnRlbF9yZWdpb25fdHRtX25vZGVfZnJlZShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3Jl
Z2lvbiAqbWVtLAogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGludGVsX21lbW9yeV9yZWdpb25f
cHJpdmF0ZV9vcHMgcHJpdl9vcHMgPSB7Ci0JLnJlc2VydmUgPSBpbnRlbF9yZWdpb25fdHRtX25v
ZGVfcmVzZXJ2ZSwKLQkuZnJlZSA9IGludGVsX3JlZ2lvbl90dG1fbm9kZV9mcmVlLAorCS5yZXNl
cnZlID0gaW50ZWxfcmVnaW9uX3R0bV9yZXNvdXJjZV9yZXNlcnZlLAorCS5mcmVlID0gaW50ZWxf
cmVnaW9uX3R0bV9yZXNvdXJjZV9mcmVlLAogfTsKIAogaW50IGludGVsX3JlZ2lvbl90dG1faW5p
dChzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtKQpAQCAtMTU3LDEwICsxNTcsMTAgQEAg
dm9pZCBpbnRlbF9yZWdpb25fdHRtX2Zpbmkoc3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1l
bSkKIH0KIAogLyoqCi0gKiBpbnRlbF9yZWdpb25fdHRtX25vZGVfdG9fc3QgLSBDb252ZXJ0IGFu
IG9wYXF1ZSBUVE0gcmVzb3VyY2UgbWFuYWdlciBub2RlCisgKiBpbnRlbF9yZWdpb25fdHRtX3Jl
c291cmNlX3RvX3N0IC0gQ29udmVydCBhbiBvcGFxdWUgVFRNIHJlc291cmNlIG1hbmFnZXIgcmVz
b3VyY2UKICAqIHRvIGFuIHNnX3RhYmxlLgogICogQG1lbTogVGhlIG1lbW9yeSByZWdpb24uCi0g
KiBAbm9kZTogVGhlIHJlc291cmNlIG1hbmFnZXIgbm9kZSBvYnRhaW5lZCBmcm9tIHRoZSBUVE0g
cmVzb3VyY2UgbWFuYWdlci4KKyAqIEByZXM6IFRoZSByZXNvdXJjZSBtYW5hZ2VyIHJlc291cmNl
IG9idGFpbmVkIGZyb20gdGhlIFRUTSByZXNvdXJjZSBtYW5hZ2VyLgogICoKICAqIFRoZSBnZW0g
YmFja2VuZHMgdHlwaWNhbGx5IHVzZSBzZy10YWJsZXMgZm9yIG9wZXJhdGlvbnMgb24gdGhlIHVu
ZGVybHlpbmcKICAqIGlvX21lbW9yeS4gU28gcHJvdmlkZSBhIHdheSBmb3IgdGhlIGJhY2tlbmRz
IHRvIHRyYW5zbGF0ZSB0aGUKQEAgLTE2OCw4ICsxNjgsOCBAQCB2b2lkIGludGVsX3JlZ2lvbl90
dG1fZmluaShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtKQogICoKICAqIFJldHVybjog
QSBtYWxsb2NlZCBzZ190YWJsZSBvbiBzdWNjZXNzLCBhbiBlcnJvciBwb2ludGVyIG9uIGZhaWx1
cmUuCiAgKi8KLXN0cnVjdCBzZ190YWJsZSAqaW50ZWxfcmVnaW9uX3R0bV9ub2RlX3RvX3N0KHN0
cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0sCi0JCQkJCSAgICAgc3RydWN0IHR0bV9yZXNv
dXJjZSAqcmVzKQorc3RydWN0IHNnX3RhYmxlICppbnRlbF9yZWdpb25fdHRtX3Jlc291cmNlX3Rv
X3N0KHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0sCisJCQkJCQkgc3RydWN0IHR0bV9y
ZXNvdXJjZSAqcmVzKQogewogCXN0cnVjdCB0dG1fcmFuZ2VfbWdyX25vZGUgKnJhbmdlX25vZGUg
PQogCQljb250YWluZXJfb2YocmVzLCB0eXBlb2YoKnJhbmdlX25vZGUpLCBiYXNlKTsKQEAgLTE5
Niw5ICsxOTYsOSBAQCBzdHJ1Y3Qgc2dfdGFibGUgKmludGVsX3JlZ2lvbl90dG1fbm9kZV90b19z
dChzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAogICogUmV0dXJuOiBBIHZhbGlkIHBv
aW50ZXIgb24gc3VjY2VzcywgYW4gZXJyb3IgcG9pbnRlciBvbiBmYWlsdXJlLgogICovCiBzdHJ1
Y3QgdHRtX3Jlc291cmNlICoKLWludGVsX3JlZ2lvbl90dG1fbm9kZV9hbGxvYyhzdHJ1Y3QgaW50
ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAotCQkJICAgIHJlc291cmNlX3NpemVfdCBzaXplLAotCQkJ
ICAgIHVuc2lnbmVkIGludCBmbGFncykKK2ludGVsX3JlZ2lvbl90dG1fcmVzb3VyY2VfYWxsb2Mo
c3RydWN0IGludGVsX21lbW9yeV9yZWdpb24gKm1lbSwKKwkJCQlyZXNvdXJjZV9zaXplX3Qgc2l6
ZSwKKwkJCQl1bnNpZ25lZCBpbnQgZmxhZ3MpCiB7CiAJc3RydWN0IHR0bV9yZXNvdXJjZV9tYW5h
Z2VyICptYW4gPSBtZW0tPnJlZ2lvbl9wcml2YXRlOwogCXN0cnVjdCB0dG1fcGxhY2UgcGxhY2Ug
PSB7fTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0u
aCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90dG0uaAppbmRleCA1ZWVkY2Mz
OTdiZDUuLjAyNmMyODNiMjE1YSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50
ZWxfcmVnaW9uX3R0bS5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2ludGVsX3JlZ2lvbl90
dG0uaApAQCAtMjQsMTggKzI0LDE4IEBAIHZvaWQgaW50ZWxfcmVnaW9uX3R0bV9maW5pKHN0cnVj
dCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0pOwogCiBpbnQgaW50ZWxfcmVnaW9uX3RvX3R0bV90
eXBlKGNvbnN0IHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0pOwogCi1zdHJ1Y3Qgc2df
dGFibGUgKmludGVsX3JlZ2lvbl90dG1fbm9kZV90b19zdChzdHJ1Y3QgaW50ZWxfbWVtb3J5X3Jl
Z2lvbiAqbWVtLAotCQkJCQkgICAgIHN0cnVjdCB0dG1fcmVzb3VyY2UgKnJlcyk7CitzdHJ1Y3Qg
c2dfdGFibGUgKmludGVsX3JlZ2lvbl90dG1fcmVzb3VyY2VfdG9fc3Qoc3RydWN0IGludGVsX21l
bW9yeV9yZWdpb24gKm1lbSwKKwkJCQkJCSBzdHJ1Y3QgdHRtX3Jlc291cmNlICpyZXMpOwogCi12
b2lkIGludGVsX3JlZ2lvbl90dG1fbm9kZV9mcmVlKHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9u
ICptZW0sCi0JCQkJc3RydWN0IHR0bV9yZXNvdXJjZSAqbm9kZSk7Cit2b2lkIGludGVsX3JlZ2lv
bl90dG1fcmVzb3VyY2VfZnJlZShzdHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAorCQkJ
CSAgICBzdHJ1Y3QgdHRtX3Jlc291cmNlICpyZXMpOwogCiBzdHJ1Y3QgdHRtX2RldmljZV9mdW5j
cyAqaTkxNV90dG1fZHJpdmVyKHZvaWQpOwogCiAjaWZkZWYgQ09ORklHX0RSTV9JOTE1X1NFTEZU
RVNUCiBzdHJ1Y3QgdHRtX3Jlc291cmNlICoKLWludGVsX3JlZ2lvbl90dG1fbm9kZV9hbGxvYyhz
dHJ1Y3QgaW50ZWxfbWVtb3J5X3JlZ2lvbiAqbWVtLAotCQkJICAgIHJlc291cmNlX3NpemVfdCBz
aXplLAotCQkJICAgIHVuc2lnbmVkIGludCBmbGFncyk7CitpbnRlbF9yZWdpb25fdHRtX3Jlc291
cmNlX2FsbG9jKHN0cnVjdCBpbnRlbF9tZW1vcnlfcmVnaW9uICptZW0sCisJCQkJcmVzb3VyY2Vf
c2l6ZV90IHNpemUsCisJCQkJdW5zaWduZWQgaW50IGZsYWdzKTsKICNlbmRpZgogI2VuZGlmIC8q
IF9JTlRFTF9SRUdJT05fVFRNX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkx
NS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L3NlbGZ0ZXN0
cy9tb2NrX3JlZ2lvbi5jCmluZGV4IGVhZmM1YTA0OTc1Yy4uNjEyMGQ0M2ZlNTA0IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9zZWxmdGVzdHMvbW9ja19yZWdpb24uYwpAQCAtMTYsNyArMTYs
NyBAQAogc3RhdGljIHZvaWQgbW9ja19yZWdpb25fcHV0X3BhZ2VzKHN0cnVjdCBkcm1faTkxNV9n
ZW1fb2JqZWN0ICpvYmosCiAJCQkJICBzdHJ1Y3Qgc2dfdGFibGUgKnBhZ2VzKQogewotCWludGVs
X3JlZ2lvbl90dG1fbm9kZV9mcmVlKG9iai0+bW0ucmVnaW9uLCBvYmotPm1tLnN0X21tX25vZGUp
OworCWludGVsX3JlZ2lvbl90dG1fcmVzb3VyY2VfZnJlZShvYmotPm1tLnJlZ2lvbiwgb2JqLT5t
bS5yZXMpOwogCXNnX2ZyZWVfdGFibGUocGFnZXMpOwogCWtmcmVlKHBhZ2VzKTsKIH0KQEAgLTMw
LDE1ICszMCwxNSBAQCBzdGF0aWMgaW50IG1vY2tfcmVnaW9uX2dldF9wYWdlcyhzdHJ1Y3QgZHJt
X2k5MTVfZ2VtX29iamVjdCAqb2JqKQogCWlmIChvYmotPmZsYWdzICYgSTkxNV9CT19BTExPQ19D
T05USUdVT1VTKQogCQlmbGFncyB8PSBJOTE1X0FMTE9DX0NPTlRJR1VPVVM7CiAKLQlvYmotPm1t
LnN0X21tX25vZGUgPSBpbnRlbF9yZWdpb25fdHRtX25vZGVfYWxsb2Mob2JqLT5tbS5yZWdpb24s
Ci0JCQkJCQkJIG9iai0+YmFzZS5zaXplLAotCQkJCQkJCSBmbGFncyk7Ci0JaWYgKElTX0VSUihv
YmotPm1tLnN0X21tX25vZGUpKQotCQlyZXR1cm4gUFRSX0VSUihvYmotPm1tLnN0X21tX25vZGUp
OworCW9iai0+bW0ucmVzID0gaW50ZWxfcmVnaW9uX3R0bV9yZXNvdXJjZV9hbGxvYyhvYmotPm1t
LnJlZ2lvbiwKKwkJCQkJCSAgICAgIG9iai0+YmFzZS5zaXplLAorCQkJCQkJICAgICAgZmxhZ3Mp
OworCWlmIChJU19FUlIob2JqLT5tbS5yZXMpKQorCQlyZXR1cm4gUFRSX0VSUihvYmotPm1tLnJl
cyk7CiAKLQlwYWdlcyA9IGludGVsX3JlZ2lvbl90dG1fbm9kZV90b19zdChvYmotPm1tLnJlZ2lv
biwgb2JqLT5tbS5zdF9tbV9ub2RlKTsKKwlwYWdlcyA9IGludGVsX3JlZ2lvbl90dG1fcmVzb3Vy
Y2VfdG9fc3Qob2JqLT5tbS5yZWdpb24sIG9iai0+bW0ucmVzKTsKIAlpZiAoSVNfRVJSKHBhZ2Vz
KSkgewotCQlpbnRlbF9yZWdpb25fdHRtX25vZGVfZnJlZShvYmotPm1tLnJlZ2lvbiwgb2JqLT5t
bS5zdF9tbV9ub2RlKTsKKwkJaW50ZWxfcmVnaW9uX3R0bV9yZXNvdXJjZV9mcmVlKG9iai0+bW0u
cmVnaW9uLCBvYmotPm1tLnJlcyk7CiAJCXJldHVybiBQVFJfRVJSKHBhZ2VzKTsKIAl9CiAKLS0g
CjIuMjYuMwoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
SW50ZWwtZ2Z4IG1haWxpbmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0
dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

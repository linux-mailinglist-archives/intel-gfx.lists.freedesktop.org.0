Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 8DD7D96CA6
	for <lists+intel-gfx@lfdr.de>; Wed, 21 Aug 2019 01:05:11 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id CD7216E8AD;
	Tue, 20 Aug 2019 23:05:07 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 5EB456E8A5
 for <intel-gfx@lists.freedesktop.org>; Tue, 20 Aug 2019 23:04:55 +0000 (UTC)
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga005.fm.intel.com ([10.253.24.32])
 by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Aug 2019 16:04:55 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.64,410,1559545200"; d="scan'208";a="377944628"
Received: from jssummer-xeon.ra.intel.com ([10.23.184.90])
 by fmsmga005.fm.intel.com with ESMTP; 20 Aug 2019 16:04:55 -0700
From: Stuart Summers <stuart.summers@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 20 Aug 2019 16:05:44 -0700
Message-Id: <20190820230544.170010-12-stuart.summers@intel.com>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190820230544.170010-1-stuart.summers@intel.com>
References: <20190820230544.170010-1-stuart.summers@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 11/11] drm/i915: Expand subslice mask
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Q3VycmVudGx5LCB0aGUgc3Vic2xpY2VfbWFzayBydW50aW1lIHBhcmFtZXRlciBpcyBzdG9yZWQg
YXMgYW4KYXJyYXkgb2Ygc3Vic2xpY2VzIHBlciBzbGljZS4gRXhwYW5kIHRoZSBzdWJzbGljZSBt
YXNrIGFycmF5IHRvCmJldHRlciBtYXRjaCB3aGF0IGlzIHByZXNlbnRlZCB0byB1c2Vyc3BhY2Ug
dGhyb3VnaCB0aGUKSTkxNV9RVUVSWV9UT1BPTE9HWV9JTkZPIGlvY3RsLiBUaGUgaW5kZXggaW50
byB0aGlzIGFycmF5IGlzCnRoZW4gY2FsY3VsYXRlZDoKICBzbGljZSAqIHN1YnNsaWNlIHN0cmlk
ZSArIHN1YnNsaWNlIGluZGV4IC8gOAoKdjI6IEZpeCAzMi1iaXQgYnVpbGQKdjM6IFVzZSBuZXcg
aGVscGVyIGZ1bmN0aW9uIGluIFNTRVUgd29ya2Fyb3VuZCB3YXJuaW5nIG1lc3NhZ2UKClNpZ25l
ZC1vZmYtYnk6IFN0dWFydCBTdW1tZXJzIDxzdHVhcnQuc3VtbWVyc0BpbnRlbC5jb20+Ci0tLQog
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfc3NldS5jICAgICAgICB8IDI3ICsrKysrKysr
KysrKysrKysrKysrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfc3NldS5oICAgICAg
ICB8ICA1ICsrKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3dvcmthcm91bmRzLmMg
fCAgNSArKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVnZnMuYyAgICAgICAgIHwg
IDUgKysrLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uYyAgICB8ICA4
ICsrKy0tLQogNSBmaWxlcyBjaGFuZ2VkLCA0MCBpbnNlcnRpb25zKCspLCAxMCBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9zc2V1LmMgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9zc2V1LmMKaW5kZXggNWQ1MzdlYzk3ZmNjLi5l
YWUxYzdiMjA2ODggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Nz
ZXUuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9zc2V1LmMKQEAgLTMwLDYg
KzMwLDMxIEBAIGludGVsX3NzZXVfc3Vic2xpY2VfdG90YWwoY29uc3Qgc3RydWN0IHNzZXVfZGV2
X2luZm8gKnNzZXUpCiAJcmV0dXJuIHRvdGFsOwogfQogCit1MzIgaW50ZWxfc3NldV9nZXRfc3Vi
c2xpY2VzKGNvbnN0IHN0cnVjdCBzc2V1X2Rldl9pbmZvICpzc2V1LCB1OCBzbGljZSkKK3sKKwlp
bnQgaSwgb2Zmc2V0ID0gc2xpY2UgKiBzc2V1LT5zc19zdHJpZGU7CisJdTMyIG1hc2sgPSAwOwor
CisJaWYgKHNsaWNlID49IHNzZXUtPm1heF9zbGljZXMpIHsKKwkJRFJNX0VSUk9SKCIlczogaW52
YWxpZCBzbGljZSAlZCwgbWF4OiAlZFxuIiwKKwkJCSAgX19mdW5jX18sIHNsaWNlLCBzc2V1LT5t
YXhfc2xpY2VzKTsKKwkJcmV0dXJuIDA7CisJfQorCisJaWYgKHNzZXUtPnNzX3N0cmlkZSA+IHNp
emVvZihtYXNrKSkgeworCQlEUk1fRVJST1IoIiVzOiBpbnZhbGlkIHN1YnNsaWNlIHN0cmlkZSAl
ZCwgbWF4OiAldVxuIiwKKwkJCSAgX19mdW5jX18sIHNzZXUtPnNzX3N0cmlkZSwKKwkJCSAodW5z
aWduZWQgaW50KXNpemVvZihtYXNrKSk7CisJCXJldHVybiAwOworCX0KKworCWZvciAoaSA9IDA7
IGkgPCBzc2V1LT5zc19zdHJpZGU7IGkrKykKKwkJbWFzayB8PSAodTMyKXNzZXUtPnN1YnNsaWNl
X21hc2tbb2Zmc2V0ICsgaV0gPDwKKwkJCWkgKiBCSVRTX1BFUl9CWVRFOworCisJcmV0dXJuIG1h
c2s7Cit9CisKIHZvaWQgaW50ZWxfc3NldV9zZXRfc3Vic2xpY2VzKHN0cnVjdCBzc2V1X2Rldl9p
bmZvICpzc2V1LCBpbnQgc2xpY2UsCiAJCQkgICAgICB1MzIgc3NfbWFzaykKIHsKQEAgLTQ3LDcg
KzcyLDcgQEAgdm9pZCBpbnRlbF9zc2V1X3NldF9zdWJzbGljZXMoc3RydWN0IHNzZXVfZGV2X2lu
Zm8gKnNzZXUsIGludCBzbGljZSwKIHVuc2lnbmVkIGludAogaW50ZWxfc3NldV9zdWJzbGljZXNf
cGVyX3NsaWNlKGNvbnN0IHN0cnVjdCBzc2V1X2Rldl9pbmZvICpzc2V1LCB1OCBzbGljZSkKIHsK
LQlyZXR1cm4gaHdlaWdodDgoc3NldS0+c3Vic2xpY2VfbWFza1tzbGljZV0pOworCXJldHVybiBo
d2VpZ2h0MzIoaW50ZWxfc3NldV9nZXRfc3Vic2xpY2VzKHNzZXUsIHNsaWNlKSk7CiB9CiAKIHUz
MiBpbnRlbF9zc2V1X21ha2VfcnBjcyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3NzZXUuaCBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX3NzZXUuaAppbmRleCAzYTE0NmEzM2EyMmUuLmVkZjc3ZjA3
ZmZiMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfc3NldS5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3NzZXUuaApAQCAtMTcsMTAgKzE3LDEx
IEBAIHN0cnVjdCBkcm1faTkxNV9wcml2YXRlOwogI2RlZmluZSBHRU5fTUFYX1NMSUNFUwkJKDYp
IC8qIENOTCB1cHBlciBib3VuZCAqLwogI2RlZmluZSBHRU5fTUFYX1NVQlNMSUNFUwkoOCkgLyog
SUNMIHVwcGVyIGJvdW5kICovCiAjZGVmaW5lIEdFTl9TU0VVX1NUUklERShtYXhfZW50cmllcykg
RElWX1JPVU5EX1VQKG1heF9lbnRyaWVzLCBCSVRTX1BFUl9CWVRFKQorI2RlZmluZSBHRU5fTUFY
X1NVQlNMSUNFX1NUUklERSBHRU5fU1NFVV9TVFJJREUoR0VOX01BWF9TVUJTTElDRVMpCiAKIHN0
cnVjdCBzc2V1X2Rldl9pbmZvIHsKIAl1OCBzbGljZV9tYXNrOwotCXU4IHN1YnNsaWNlX21hc2tb
R0VOX01BWF9TTElDRVNdOworCXU4IHN1YnNsaWNlX21hc2tbR0VOX01BWF9TTElDRVMgKiBHRU5f
TUFYX1NVQlNMSUNFX1NUUklERV07CiAJdTE2IGV1X3RvdGFsOwogCXU4IGV1X3Blcl9zdWJzbGlj
ZTsKIAl1OCBtaW5fZXVfaW5fcG9vbDsKQEAgLTkxLDYgKzkyLDggQEAgaW50ZWxfc3NldV9zdWJz
bGljZV90b3RhbChjb25zdCBzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSk7CiB1bnNpZ25lZCBp
bnQKIGludGVsX3NzZXVfc3Vic2xpY2VzX3Blcl9zbGljZShjb25zdCBzdHJ1Y3Qgc3NldV9kZXZf
aW5mbyAqc3NldSwgdTggc2xpY2UpOwogCit1MzIgIGludGVsX3NzZXVfZ2V0X3N1YnNsaWNlcyhj
b25zdCBzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSwgdTggc2xpY2UpOworCiB2b2lkIGludGVs
X3NzZXVfc2V0X3N1YnNsaWNlcyhzdHJ1Y3Qgc3NldV9kZXZfaW5mbyAqc3NldSwgaW50IHNsaWNl
LAogCQkJICAgICAgdTMyIHNzX21hc2spOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0v
aTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kcy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfd29ya2Fyb3VuZHMuYwppbmRleCAxMjZhYjM2Njc5MTkuLmFkMjI2MWUwY2JhOCAxMDA2NDQK
LS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfd29ya2Fyb3VuZHMuYworKysgYi9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF93b3JrYXJvdW5kcy5jCkBAIC04MDEsMTEgKzgw
MSwxMCBAQCB3YV9pbml0X21jcihzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwgc3RydWN0
IGk5MTVfd2FfbGlzdCAqd2FsKQogCX0KIAogCXNsaWNlID0gZmxzKHNzZXUtPnNsaWNlX21hc2sp
IC0gMTsKLQlHRU1fQlVHX09OKHNsaWNlID49IEFSUkFZX1NJWkUoc3NldS0+c3Vic2xpY2VfbWFz
aykpOwotCXN1YnNsaWNlID0gZmxzKGwzX2VuICYgc3NldS0+c3Vic2xpY2VfbWFza1tzbGljZV0p
OworCXN1YnNsaWNlID0gZmxzKGwzX2VuICYgaW50ZWxfc3NldV9nZXRfc3Vic2xpY2VzKHNzZXUs
IHNsaWNlKSk7CiAJaWYgKCFzdWJzbGljZSkgewogCQlEUk1fV0FSTigiTm8gY29tbW9uIGluZGV4
IGZvdW5kIGJldHdlZW4gc3Vic2xpY2UgbWFzayAleCBhbmQgTDMgYmFuayBtYXNrICV4IVxuIiwK
LQkJCSBzc2V1LT5zdWJzbGljZV9tYXNrW3NsaWNlXSwgbDNfZW4pOworCQkJIGludGVsX3NzZXVf
Z2V0X3N1YnNsaWNlcyhzc2V1LCBzbGljZSksIGwzX2VuKTsKIAkJc3Vic2xpY2UgPSBmbHMobDNf
ZW4pOwogCQlXQVJOX09OKCFzdWJzbGljZSk7CiAJfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2RlYnVn
ZnMuYwppbmRleCBlOTc1Y2FkMDNlMzkuLjExMmM4YTMwNTk3MSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvaTkxNV9kZWJ1Z2ZzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
aTkxNV9kZWJ1Z2ZzLmMKQEAgLTM4NTksMTMgKzM4NTksMTYgQEAgc3RhdGljIHZvaWQgZ2VuOV9z
c2V1X2RldmljZV9zdGF0dXMoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmRldl9wcml2LAogCiAJ
CWZvciAoc3MgPSAwOyBzcyA8IGluZm8tPnNzZXUubWF4X3N1YnNsaWNlczsgc3MrKykgewogCQkJ
dW5zaWduZWQgaW50IGV1X2NudDsKKwkJCXU4IHNzX2lkeCA9IHMgKiBpbmZvLT5zc2V1LnNzX3N0
cmlkZSArCisJCQkJICAgIHNzIC8gQklUU19QRVJfQllURTsKIAogCQkJaWYgKElTX0dFTjlfTFAo
ZGV2X3ByaXYpKSB7CiAJCQkJaWYgKCEoc19yZWdbc10gJiAoR0VOOV9QR0NUTF9TU19BQ0soc3Mp
KSkpCiAJCQkJCS8qIHNraXAgZGlzYWJsZWQgc3Vic2xpY2UgKi8KIAkJCQkJY29udGludWU7CiAK
LQkJCQlzc2V1LT5zdWJzbGljZV9tYXNrW3NdIHw9IEJJVChzcyk7CisJCQkJc3NldS0+c3Vic2xp
Y2VfbWFza1tzc19pZHhdIHw9CisJCQkJCUJJVChzcyAlIEJJVFNfUEVSX0JZVEUpOwogCQkJfQog
CiAJCQlldV9jbnQgPSAyICogaHdlaWdodDMyKGV1X3JlZ1syKnMgKyBzcy8yXSAmCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2luZm8uYwppbmRleCBjMjBmNzRlZTVmMjIuLmQ5YjVi
YWFlZjVkMCAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaW50ZWxfZGV2aWNlX2lu
Zm8uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pbnRlbF9kZXZpY2VfaW5mby5jCkBAIC05
Myw5ICs5Myw5IEBAIHN0YXRpYyB2b2lkIHNzZXVfZHVtcChjb25zdCBzdHJ1Y3Qgc3NldV9kZXZf
aW5mbyAqc3NldSwgc3RydWN0IGRybV9wcmludGVyICpwKQogCQkgICBod2VpZ2h0OChzc2V1LT5z
bGljZV9tYXNrKSwgc3NldS0+c2xpY2VfbWFzayk7CiAJZHJtX3ByaW50ZihwLCAic3Vic2xpY2Ug
dG90YWw6ICV1XG4iLCBpbnRlbF9zc2V1X3N1YnNsaWNlX3RvdGFsKHNzZXUpKTsKIAlmb3IgKHMg
PSAwOyBzIDwgc3NldS0+bWF4X3NsaWNlczsgcysrKSB7Ci0JCWRybV9wcmludGYocCwgInNsaWNl
JWQ6ICV1IHN1YnNsaWNlcywgbWFzaz0lMDR4XG4iLAorCQlkcm1fcHJpbnRmKHAsICJzbGljZSVk
OiAldSBzdWJzbGljZXMsIG1hc2s9JTA4eFxuIiwKIAkJCSAgIHMsIGludGVsX3NzZXVfc3Vic2xp
Y2VzX3Blcl9zbGljZShzc2V1LCBzKSwKLQkJCSAgIHNzZXUtPnN1YnNsaWNlX21hc2tbc10pOwor
CQkJICAgaW50ZWxfc3NldV9nZXRfc3Vic2xpY2VzKHNzZXUsIHMpKTsKIAl9CiAJZHJtX3ByaW50
ZihwLCAiRVUgdG90YWw6ICV1XG4iLCBzc2V1LT5ldV90b3RhbCk7CiAJZHJtX3ByaW50ZihwLCAi
RVUgcGVyIHN1YnNsaWNlOiAldVxuIiwgc3NldS0+ZXVfcGVyX3N1YnNsaWNlKTsKQEAgLTE1OSw5
ICsxNTksOSBAQCB2b2lkIGludGVsX2RldmljZV9pbmZvX2R1bXBfdG9wb2xvZ3koY29uc3Qgc3Ry
dWN0IHNzZXVfZGV2X2luZm8gKnNzZXUsCiAJfQogCiAJZm9yIChzID0gMDsgcyA8IHNzZXUtPm1h
eF9zbGljZXM7IHMrKykgewotCQlkcm1fcHJpbnRmKHAsICJzbGljZSVkOiAldSBzdWJzbGljZShz
KSAoMHglaGh4KTpcbiIsCisJCWRybV9wcmludGYocCwgInNsaWNlJWQ6ICV1IHN1YnNsaWNlKHMp
ICgweCUwOHgpOlxuIiwKIAkJCSAgIHMsIGludGVsX3NzZXVfc3Vic2xpY2VzX3Blcl9zbGljZShz
c2V1LCBzKSwKLQkJCSAgIHNzZXUtPnN1YnNsaWNlX21hc2tbc10pOworCQkJICAgaW50ZWxfc3Nl
dV9nZXRfc3Vic2xpY2VzKHNzZXUsIHMpKTsKIAogCQlmb3IgKHNzID0gMDsgc3MgPCBzc2V1LT5t
YXhfc3Vic2xpY2VzOyBzcysrKSB7CiAJCQl1MTYgZW5hYmxlZF9ldXMgPSBzc2V1X2dldF9ldXMo
c3NldSwgcywgc3MpOwotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVsLWdmeEBsaXN0cy5m
cmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcvbWFpbG1hbi9saXN0
aW5mby9pbnRlbC1nZng=

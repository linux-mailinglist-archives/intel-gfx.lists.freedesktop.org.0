Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 4631D33F5B2
	for <lists+intel-gfx@lfdr.de>; Wed, 17 Mar 2021 17:38:25 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 9C0586E847;
	Wed, 17 Mar 2021 16:38:23 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 2E0F26E847
 for <intel-gfx@lists.freedesktop.org>; Wed, 17 Mar 2021 16:38:23 +0000 (UTC)
IronPort-SDR: dD8jZh3eD7ZGC4viBap/FFa5ykVy4HDDr+tghWdZZj8E68BHznb6MR973wCuxwh2Jj+9w3fAca
 6T1m9UlUcgog==
X-IronPort-AV: E=McAfee;i="6000,8403,9926"; a="186141997"
X-IronPort-AV: E=Sophos;i="5.81,256,1610438400"; d="scan'208";a="186141997"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 17 Mar 2021 09:38:22 -0700
IronPort-SDR: qZJO0bdG8gx7T5KgF7PnGi1Fa1VpiBl/rewaUeZ3RJfLVKkOdlUB4mTlirJ74DZBJvu6c7lFIy
 3Y2St16yUR4g==
X-IronPort-AV: E=Sophos;i="5.81,256,1610438400"; d="scan'208";a="439469006"
Received: from jpferrer-mobl1.ger.corp.intel.com (HELO localhost)
 ([10.249.46.99])
 by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 17 Mar 2021 09:38:20 -0700
From: Jani Nikula <jani.nikula@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Wed, 17 Mar 2021 18:36:53 +0200
Message-Id: <4bc49244ce68e136e5b21db4c4e6554bec9ac0fb.1615998927.git.jani.nikula@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <cover.1615998927.git.jani.nikula@intel.com>
References: <cover.1615998927.git.jani.nikula@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 14/14] drm/i915/bios: add
 intel_bios_encoder_data to encoder, use for iboost
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Cc: jani.nikula@intel.com, lucas.demarchi@intel.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

QWRkIGludGVsX2Jpb3NfZW5jb2Rlcl9kYXRhIHBvaW50ZXIgdG8gZW5jb2RlciwgYW5kIHVzZSBp
dCBmb3IgaGRtaSBhbmQKZHAgaWJvb3N0LiBGb3Igc3RhcnRlcnMsIHdlIG9ubHkgc2V0IHRoZSBl
bmNvZGVyLT5kZXZkYXRhIGZvciBEREkKZW5jb2RlcnMsIGkuZS4gd2UgY2FuIG9ubHkgdXNlIGl0
IGZvciBkYXRhIHRoYXQgaXMgdXNlZCBieSBEREkgZW5jb2RlcnMuCgpDYzogTHVjYXMgRGUgTWFy
Y2hpIDxsdWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+CkNjOiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxl
LnN5cmphbGFAbGludXguaW50ZWwuY29tPgpSZXZpZXdlZC1ieTogTHVjYXMgRGUgTWFyY2hpIDxs
dWNhcy5kZW1hcmNoaUBpbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEphbmkgTmlrdWxhIDxqYW5p
Lm5pa3VsYUBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRl
bF9iaW9zLmMgICAgIHwgMzAgKysrKysrKysrKystLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5
MTUvZGlzcGxheS9pbnRlbF9iaW9zLmggICAgIHwgIDQgKy0tCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9kaXNwbGF5L2ludGVsX2RkaS5jICAgICAgfCAgOSArKystLS0KIC4uLi9kcm0vaTkxNS9kaXNw
bGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaCAgICB8ICAzICsrCiBkcml2ZXJzL2dwdS9kcm0vaTkx
NS9pOTE1X2Rydi5oICAgICAgICAgICAgICAgfCAgMiAtLQogNSBmaWxlcyBjaGFuZ2VkLCAyNyBp
bnNlcnRpb25zKCspLCAyMSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfYmlvcy5jCmluZGV4IDJmNjYxZWU1ZWJhOS4uY2JmNWIzZDI5NjQxIDEwMDY0NAot
LS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYworKysgYi9kcml2
ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Jpb3MuYwpAQCAtMTg1OSw2ICsxODU5LDcg
QEAgc3RhdGljIHZvaWQgcGFyc2VfZGRpX3BvcnQoc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5
MTUsCiAJY29uc3Qgc3RydWN0IGNoaWxkX2RldmljZV9jb25maWcgKmNoaWxkID0gJmRldmRhdGEt
PmNoaWxkOwogCXN0cnVjdCBkZGlfdmJ0X3BvcnRfaW5mbyAqaW5mbzsKIAlib29sIGlzX2R2aSwg
aXNfaGRtaSwgaXNfZHAsIGlzX2VkcCwgaXNfY3J0LCBzdXBwb3J0c190eXBlY191c2IsIHN1cHBv
cnRzX3RidDsKKwlpbnQgZHBfYm9vc3RfbGV2ZWwsIGhkbWlfYm9vc3RfbGV2ZWw7CiAJZW51bSBw
b3J0IHBvcnQ7CiAKIAlwb3J0ID0gZHZvX3BvcnRfdG9fcG9ydChpOTE1LCBjaGlsZC0+ZHZvX3Bv
cnQpOwpAQCAtMTk0OSwxNyArMTk1MCwxOCBAQCBzdGF0aWMgdm9pZCBwYXJzZV9kZGlfcG9ydChz
dHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSwKIAkJaW5mby0+bWF4X3RtZHNfY2xvY2sgPSBt
YXhfdG1kc19jbG9jazsKIAl9CiAKLQkvKiBQYXJzZSB0aGUgSV9ib29zdCBjb25maWcgZm9yIFNL
TCBhbmQgYWJvdmUgKi8KLQlpZiAoaTkxNS0+dmJ0LnZlcnNpb24gPj0gMTk2ICYmIGNoaWxkLT5p
Ym9vc3QpIHsKLQkJaW5mby0+ZHBfYm9vc3RfbGV2ZWwgPSB0cmFuc2xhdGVfaWJvb3N0KGNoaWxk
LT5kcF9pYm9vc3RfbGV2ZWwpOworCS8qIElfYm9vc3QgY29uZmlnIGZvciBTS0wgYW5kIGFib3Zl
ICovCisJZHBfYm9vc3RfbGV2ZWwgPSBpbnRlbF9iaW9zX2VuY29kZXJfZHBfYm9vc3RfbGV2ZWwo
ZGV2ZGF0YSk7CisJaWYgKGRwX2Jvb3N0X2xldmVsKQogCQlkcm1fZGJnX2ttcygmaTkxNS0+ZHJt
LAogCQkJICAgICJQb3J0ICVjIFZCVCAoZSlEUCBib29zdCBsZXZlbDogJWRcbiIsCi0JCQkgICAg
cG9ydF9uYW1lKHBvcnQpLCBpbmZvLT5kcF9ib29zdF9sZXZlbCk7Ci0JCWluZm8tPmhkbWlfYm9v
c3RfbGV2ZWwgPSB0cmFuc2xhdGVfaWJvb3N0KGNoaWxkLT5oZG1pX2lib29zdF9sZXZlbCk7CisJ
CQkgICAgcG9ydF9uYW1lKHBvcnQpLCBkcF9ib29zdF9sZXZlbCk7CisKKwloZG1pX2Jvb3N0X2xl
dmVsID0gaW50ZWxfYmlvc19lbmNvZGVyX2hkbWlfYm9vc3RfbGV2ZWwoZGV2ZGF0YSk7CisJaWYg
KGhkbWlfYm9vc3RfbGV2ZWwpCiAJCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sCiAJCQkgICAgIlBv
cnQgJWMgVkJUIEhETUkgYm9vc3QgbGV2ZWw6ICVkXG4iLAotCQkJICAgIHBvcnRfbmFtZShwb3J0
KSwgaW5mby0+aGRtaV9ib29zdF9sZXZlbCk7Ci0JfQorCQkJICAgIHBvcnRfbmFtZShwb3J0KSwg
aGRtaV9ib29zdF9sZXZlbCk7CiAKIAkvKiBEUCBtYXggbGluayByYXRlIGZvciBDTkwrICovCiAJ
aWYgKGk5MTUtPnZidC52ZXJzaW9uID49IDIxNikgewpAQCAtMjkwNCwxOCArMjkwNiwyMCBAQCBp
bnQgaW50ZWxfYmlvc19oZG1pX2xldmVsX3NoaWZ0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyKQogCXJldHVybiBpbmZvLT5oZG1pX2xldmVsX3NoaWZ0X3NldCA/IGluZm8tPmhkbWlfbGV2
ZWxfc2hpZnQgOiAtMTsKIH0KIAotaW50IGludGVsX2Jpb3NfZHBfYm9vc3RfbGV2ZWwoc3RydWN0
IGludGVsX2VuY29kZXIgKmVuY29kZXIpCitpbnQgaW50ZWxfYmlvc19lbmNvZGVyX2RwX2Jvb3N0
X2xldmVsKGNvbnN0IHN0cnVjdCBpbnRlbF9iaW9zX2VuY29kZXJfZGF0YSAqZGV2ZGF0YSkKIHsK
LQlzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5k
ZXYpOworCWlmICghZGV2ZGF0YSB8fCBkZXZkYXRhLT5pOTE1LT52YnQudmVyc2lvbiA8IDE5NiB8
fCAhZGV2ZGF0YS0+Y2hpbGQuaWJvb3N0KQorCQlyZXR1cm4gMDsKIAotCXJldHVybiBpOTE1LT52
YnQuZGRpX3BvcnRfaW5mb1tlbmNvZGVyLT5wb3J0XS5kcF9ib29zdF9sZXZlbDsKKwlyZXR1cm4g
dHJhbnNsYXRlX2lib29zdChkZXZkYXRhLT5jaGlsZC5kcF9pYm9vc3RfbGV2ZWwpOwogfQogCi1p
bnQgaW50ZWxfYmlvc19oZG1pX2Jvb3N0X2xldmVsKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyKQoraW50IGludGVsX2Jpb3NfZW5jb2Rlcl9oZG1pX2Jvb3N0X2xldmVsKGNvbnN0IHN0cnVj
dCBpbnRlbF9iaW9zX2VuY29kZXJfZGF0YSAqZGV2ZGF0YSkKIHsKLQlzdHJ1Y3QgZHJtX2k5MTVf
cHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUoZW5jb2Rlci0+YmFzZS5kZXYpOworCWlmICghZGV2ZGF0
YSB8fCBkZXZkYXRhLT5pOTE1LT52YnQudmVyc2lvbiA8IDE5NiB8fCAhZGV2ZGF0YS0+Y2hpbGQu
aWJvb3N0KQorCQlyZXR1cm4gMDsKIAotCXJldHVybiBpOTE1LT52YnQuZGRpX3BvcnRfaW5mb1tl
bmNvZGVyLT5wb3J0XS5oZG1pX2Jvb3N0X2xldmVsOworCXJldHVybiB0cmFuc2xhdGVfaWJvb3N0
KGRldmRhdGEtPmNoaWxkLmhkbWlfaWJvb3N0X2xldmVsKTsKIH0KIAogaW50IGludGVsX2Jpb3Nf
ZHBfbWF4X2xpbmtfcmF0ZShzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2RlcikKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5oIGIvZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9iaW9zLmgKaW5kZXggZjgyY2VmMjlhYjVhLi40NzA5
YzRkMjk4MDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxf
Ymlvcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfYmlvcy5oCkBA
IC0yNTAsOCArMjUwLDYgQEAgYm9vbCBpbnRlbF9iaW9zX2dldF9kc2NfcGFyYW1zKHN0cnVjdCBp
bnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJICAgICAgIGludCBkc2NfbWF4X2JwYyk7CiBpbnQg
aW50ZWxfYmlvc19tYXhfdG1kc19jbG9jayhzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7
CiBpbnQgaW50ZWxfYmlvc19oZG1pX2xldmVsX3NoaWZ0KHN0cnVjdCBpbnRlbF9lbmNvZGVyICpl
bmNvZGVyKTsKLWludCBpbnRlbF9iaW9zX2RwX2Jvb3N0X2xldmVsKHN0cnVjdCBpbnRlbF9lbmNv
ZGVyICplbmNvZGVyKTsKLWludCBpbnRlbF9iaW9zX2hkbWlfYm9vc3RfbGV2ZWwoc3RydWN0IGlu
dGVsX2VuY29kZXIgKmVuY29kZXIpOwogaW50IGludGVsX2Jpb3NfZHBfbWF4X2xpbmtfcmF0ZShz
dHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7CiBpbnQgaW50ZWxfYmlvc19hbHRlcm5hdGVf
ZGRjX3BpbihzdHJ1Y3QgaW50ZWxfZW5jb2RlciAqZW5jb2Rlcik7CiBib29sIGludGVsX2Jpb3Nf
cG9ydF9zdXBwb3J0c190eXBlY191c2Ioc3RydWN0IGRybV9pOTE1X3ByaXZhdGUgKmk5MTUsIGVu
dW0gcG9ydCBwb3J0KTsKQEAgLTI2NSw1ICsyNjMsNyBAQCBib29sIGludGVsX2Jpb3NfZW5jb2Rl
cl9zdXBwb3J0c19oZG1pKGNvbnN0IHN0cnVjdCBpbnRlbF9iaW9zX2VuY29kZXJfZGF0YSAqZGV2
ZAogYm9vbCBpbnRlbF9iaW9zX2VuY29kZXJfc3VwcG9ydHNfZHAoY29uc3Qgc3RydWN0IGludGVs
X2Jpb3NfZW5jb2Rlcl9kYXRhICpkZXZkYXRhKTsKIGJvb2wgaW50ZWxfYmlvc19lbmNvZGVyX3N1
cHBvcnRzX3R5cGVjX3VzYihjb25zdCBzdHJ1Y3QgaW50ZWxfYmlvc19lbmNvZGVyX2RhdGEgKmRl
dmRhdGEpOwogYm9vbCBpbnRlbF9iaW9zX2VuY29kZXJfc3VwcG9ydHNfdGJ0KGNvbnN0IHN0cnVj
dCBpbnRlbF9iaW9zX2VuY29kZXJfZGF0YSAqZGV2ZGF0YSk7CitpbnQgaW50ZWxfYmlvc19lbmNv
ZGVyX2RwX2Jvb3N0X2xldmVsKGNvbnN0IHN0cnVjdCBpbnRlbF9iaW9zX2VuY29kZXJfZGF0YSAq
ZGV2ZGF0YSk7CitpbnQgaW50ZWxfYmlvc19lbmNvZGVyX2hkbWlfYm9vc3RfbGV2ZWwoY29uc3Qg
c3RydWN0IGludGVsX2Jpb3NfZW5jb2Rlcl9kYXRhICpkZXZkYXRhKTsKIAogI2VuZGlmIC8qIF9J
TlRFTF9CSU9TX0hfICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5
L2ludGVsX2RkaS5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYwpp
bmRleCBiNDIyMzFhMmUyYjkuLjc1NjU1ZjQ3ZjI2YyAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kZGkuYworKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9k
aXNwbGF5L2ludGVsX2RkaS5jCkBAIC0xMTMsNyArMTEzLDcgQEAgdm9pZCBpbnRlbF9wcmVwYXJl
X2RwX2RkaV9idWZmZXJzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNvZGVyLAogCQkJCQkJCSAg
ICAgICZuX2VudHJpZXMpOwogCiAJLyogSWYgd2UncmUgYm9vc3RpbmcgdGhlIGN1cnJlbnQsIHNl
dCBiaXQgMzEgb2YgdHJhbnMxICovCi0JaWYgKElTX0dFTjlfQkMoZGV2X3ByaXYpICYmIGludGVs
X2Jpb3NfZHBfYm9vc3RfbGV2ZWwoZW5jb2RlcikpCisJaWYgKElTX0dFTjlfQkMoZGV2X3ByaXYp
ICYmIGludGVsX2Jpb3NfZW5jb2Rlcl9kcF9ib29zdF9sZXZlbChlbmNvZGVyLT5kZXZkYXRhKSkK
IAkJaWJvb3N0X2JpdCA9IERESV9CVUZfQkFMQU5DRV9MRUdfRU5BQkxFOwogCiAJZm9yIChpID0g
MDsgaSA8IG5fZW50cmllczsgaSsrKSB7CkBAIC0xNDYsNyArMTQ2LDcgQEAgc3RhdGljIHZvaWQg
aW50ZWxfcHJlcGFyZV9oZG1pX2RkaV9idWZmZXJzKHN0cnVjdCBpbnRlbF9lbmNvZGVyICplbmNv
ZGVyLAogCQlsZXZlbCA9IG5fZW50cmllcyAtIDE7CiAKIAkvKiBJZiB3ZSdyZSBib29zdGluZyB0
aGUgY3VycmVudCwgc2V0IGJpdCAzMSBvZiB0cmFuczEgKi8KLQlpZiAoSVNfR0VOOV9CQyhkZXZf
cHJpdikgJiYgaW50ZWxfYmlvc19oZG1pX2Jvb3N0X2xldmVsKGVuY29kZXIpKQorCWlmIChJU19H
RU45X0JDKGRldl9wcml2KSAmJiBpbnRlbF9iaW9zX2VuY29kZXJfaGRtaV9ib29zdF9sZXZlbChl
bmNvZGVyLT5kZXZkYXRhKSkKIAkJaWJvb3N0X2JpdCA9IERESV9CVUZfQkFMQU5DRV9MRUdfRU5B
QkxFOwogCiAJLyogRW50cnkgOSBpcyBmb3IgSERNSTogKi8KQEAgLTkwNSw5ICs5MDUsOSBAQCBz
dGF0aWMgdm9pZCBza2xfZGRpX3NldF9pYm9vc3Qoc3RydWN0IGludGVsX2VuY29kZXIgKmVuY29k
ZXIsCiAJdTggaWJvb3N0OwogCiAJaWYgKGludGVsX2NydGNfaGFzX3R5cGUoY3J0Y19zdGF0ZSwg
SU5URUxfT1VUUFVUX0hETUkpKQotCQlpYm9vc3QgPSBpbnRlbF9iaW9zX2hkbWlfYm9vc3RfbGV2
ZWwoZW5jb2Rlcik7CisJCWlib29zdCA9IGludGVsX2Jpb3NfZW5jb2Rlcl9oZG1pX2Jvb3N0X2xl
dmVsKGVuY29kZXItPmRldmRhdGEpOwogCWVsc2UKLQkJaWJvb3N0ID0gaW50ZWxfYmlvc19kcF9i
b29zdF9sZXZlbChlbmNvZGVyKTsKKwkJaWJvb3N0ID0gaW50ZWxfYmlvc19lbmNvZGVyX2RwX2Jv
b3N0X2xldmVsKGVuY29kZXItPmRldmRhdGEpOwogCiAJaWYgKGlib29zdCA9PSAwKSB7CiAJCWNv
bnN0IHN0cnVjdCBkZGlfYnVmX3RyYW5zICpkZGlfdHJhbnNsYXRpb25zOwpAQCAtNDQ3OCw2ICs0
NDc4LDcgQEAgdm9pZCBpbnRlbF9kZGlfaW5pdChzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqZGV2
X3ByaXYsIGVudW0gcG9ydCBwb3J0KQogCQlyZXR1cm47CiAKIAllbmNvZGVyID0gJmRpZ19wb3J0
LT5iYXNlOworCWVuY29kZXItPmRldmRhdGEgPSBkZXZkYXRhOwogCiAJaWYgKElOVEVMX0dFTihk
ZXZfcHJpdikgPj0gMTIpIHsKIAkJZW51bSB0Y19wb3J0IHRjX3BvcnQgPSBpbnRlbF9wb3J0X3Rv
X3RjKGRldl9wcml2LCBwb3J0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxh
eS9pbnRlbF9kaXNwbGF5X3R5cGVzLmgKaW5kZXggZWFlYmJhNTg4OWQyLi4wMTI4NjNiNTYxNzQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90
eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90
eXBlcy5oCkBAIC0yMzQsNiArMjM0LDkgQEAgc3RydWN0IGludGVsX2VuY29kZXIgewogCWVudW0g
aW50ZWxfZGlzcGxheV9wb3dlcl9kb21haW4gcG93ZXJfZG9tYWluOwogCS8qIGZvciBjb21tdW5p
Y2F0aW9uIHdpdGggYXVkaW8gY29tcG9uZW50OyBwcm90ZWN0ZWQgYnkgYXZfbXV0ZXggKi8KIAlj
b25zdCBzdHJ1Y3QgZHJtX2Nvbm5lY3RvciAqYXVkaW9fY29ubmVjdG9yOworCisJLyogVkJUIGlu
Zm9ybWF0aW9uIGZvciB0aGlzIGVuY29kZXIgKG1heSBiZSBOVUxMIGZvciBvbGRlciBwbGF0Zm9y
bXMpICovCisJY29uc3Qgc3RydWN0IGludGVsX2Jpb3NfZW5jb2Rlcl9kYXRhICpkZXZkYXRhOwog
fTsKIAogc3RydWN0IGludGVsX3BhbmVsX2JsX2Z1bmNzIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2k5MTVfZHJ2LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2Rydi5o
CmluZGV4IDkzYTc0OTIxNzU1Ny4uOWNkMzFlYTk3NGZhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9pOTE1X2Rydi5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfZHJ2
LmgKQEAgLTU5NSw4ICs1OTUsNiBAQCBzdHJ1Y3QgZGRpX3ZidF9wb3J0X2luZm8gewogCXU4IGFs
dGVybmF0ZV9hdXhfY2hhbm5lbDsKIAl1OCBhbHRlcm5hdGVfZGRjX3BpbjsKIAotCXU4IGRwX2Jv
b3N0X2xldmVsOwotCXU4IGhkbWlfYm9vc3RfbGV2ZWw7CiAJaW50IGRwX21heF9saW5rX3JhdGU7
CQkvKiAwIGZvciBub3QgbGltaXRlZCBieSBWQlQgKi8KIH07CiAKLS0gCjIuMjAuMQoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KSW50ZWwtZ2Z4IG1haWxp
bmcgbGlzdApJbnRlbC1nZnhAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJl
ZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vaW50ZWwtZ2Z4Cg==

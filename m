Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 3F12C3F4601
	for <lists+intel-gfx@lfdr.de>; Mon, 23 Aug 2021 09:50:39 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id A310D89C19;
	Mon, 23 Aug 2021 07:50:25 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 9A65389C1C
 for <intel-gfx@lists.freedesktop.org>; Mon, 23 Aug 2021 07:50:23 +0000 (UTC)
X-IronPort-AV: E=McAfee;i="6200,9189,10084"; a="280775507"
X-IronPort-AV: E=Sophos;i="5.84,344,1620716400"; d="scan'208";a="280775507"
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
 by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 23 Aug 2021 00:50:23 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.84,344,1620716400"; d="scan'208";a="683068085"
Received: from fmsmsx605.amr.corp.intel.com ([10.18.126.85])
 by fmsmga006.fm.intel.com with ESMTP; 23 Aug 2021 00:50:22 -0700
Received: from bgsmsx603.gar.corp.intel.com (10.109.78.82) by
 fmsmsx605.amr.corp.intel.com (10.18.126.85) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.4; Mon, 23 Aug 2021 00:50:21 -0700
Received: from bgsmsx604.gar.corp.intel.com (10.67.234.6) by
 BGSMSX603.gar.corp.intel.com (10.109.78.82) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2242.10; Mon, 23 Aug 2021 13:20:19 +0530
Received: from bgsmsx604.gar.corp.intel.com ([10.67.234.6]) by
 BGSMSX604.gar.corp.intel.com ([10.67.234.6]) with mapi id 15.01.2242.010;
 Mon, 23 Aug 2021 13:20:19 +0530
From: "Shankar, Uma" <uma.shankar@intel.com>
To: "Gupta, Anshuman" <anshuman.gupta@intel.com>,
 "intel-gfx@lists.freedesktop.org" <intel-gfx@lists.freedesktop.org>
CC: "Bommu, Krishnaiah" <krishnaiah.bommu@intel.com>, Huang Sean Z
 <sean.z.huang@intel.com>, "Gaurav, Kumar" <kumar.gaurav@intel.com>,
 =?utf-8?B?VmlsbGUgU3lyasOkbMOk?= <ville.syrjala@linux.intel.com>, "Ceraolo
 Spurio, Daniele" <daniele.ceraolospurio@intel.com>, "Li, Juston"
 <juston.li@intel.com>, "Vivi, Rodrigo" <rodrigo.vivi@intel.com>
Thread-Topic: [PATCH v6 13/15] drm/i915/pxp: Add plane decryption support
Thread-Index: AQHXhB3mNnoQdJkX3Ei37xPnyWYh/6tvQHAAgBGeM3A=
Date: Mon, 23 Aug 2021 07:50:19 +0000
Message-ID: <62b12909b7e641c3b26b2f3167b88af7@intel.com>
References: <20210729020106.18346-14-daniele.ceraolospurio@intel.com>
 <20210812081706.29458-1-anshuman.gupta@intel.com>
In-Reply-To: <20210812081706.29458-1-anshuman.gupta@intel.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
dlp-product: dlpe-windows
dlp-reaction: no-action
dlp-version: 11.5.1.3
x-originating-ip: [10.223.10.1]
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Subject: Re: [Intel-gfx] [PATCH v6 13/15] drm/i915/pxp: Add plane decryption
 support
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

DQoNCj4gLS0tLS1PcmlnaW5hbCBNZXNzYWdlLS0tLS0NCj4gRnJvbTogR3VwdGEsIEFuc2h1bWFu
IDxhbnNodW1hbi5ndXB0YUBpbnRlbC5jb20+DQo+IFNlbnQ6IFRodXJzZGF5LCBBdWd1c3QgMTIs
IDIwMjEgMTo0NyBQTQ0KPiBUbzogaW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZw0KPiBD
YzogU2hhbmthciwgVW1hIDx1bWEuc2hhbmthckBpbnRlbC5jb20+OyBHdXB0YSwgQW5zaHVtYW4N
Cj4gPGFuc2h1bWFuLmd1cHRhQGludGVsLmNvbT47IEJvbW11LCBLcmlzaG5haWFoDQo+IDxrcmlz
aG5haWFoLmJvbW11QGludGVsLmNvbT47IEh1YW5nIFNlYW4gWiA8c2Vhbi56Lmh1YW5nQGludGVs
LmNvbT47IEdhdXJhdiwNCj4gS3VtYXIgPGt1bWFyLmdhdXJhdkBpbnRlbC5jb20+OyBWaWxsZSBT
eXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPjsNCj4gQ2VyYW9sbyBTcHVy
aW8sIERhbmllbGUgPGRhbmllbGUuY2VyYW9sb3NwdXJpb0BpbnRlbC5jb20+OyBMaSwgSnVzdG9u
DQo+IDxqdXN0b24ubGlAaW50ZWwuY29tPjsgVml2aSwgUm9kcmlnbyA8cm9kcmlnby52aXZpQGlu
dGVsLmNvbT4NCj4gU3ViamVjdDogW1BBVENIIHY2IDEzLzE1XSBkcm0vaTkxNS9weHA6IEFkZCBw
bGFuZSBkZWNyeXB0aW9uIHN1cHBvcnQNCj4gDQo+IEFkZCBzdXBwb3J0IHRvIGVuYWJsZS9kaXNh
YmxlIFBMQU5FX1NVUkYgRGVjcnlwdGlvbiBSZXF1ZXN0IGJpdC4NCj4gSXQgcmVxdWlyZXMgb25s
eSB0byBlbmFibGUgcGxhbmUgZGVjcnlwdGlvbiBzdXBwb3J0IHdoZW4gZm9sbG93aW5nIGNvbmRp
dGlvbiBtZXQuDQo+IDEuIFBYUCBzZXNzaW9uIGlzIGVuYWJsZWQuDQo+IDIuIEJ1ZmZlciBvYmpl
Y3QgaXMgcHJvdGVjdGVkLg0KPiANCj4gdjI6DQo+IC0gVXNlZCBnZW4gZmIgb2JqIHVzZXJfZmxh
Z3MgaW5zdGVhZCBnZW1fb2JqZWN0X21ldGFkYXRhLiBbS3Jpc2huYV0NCj4gDQo+IHYzOg0KPiAt
IGludGVsX3B4cF9nZW1fb2JqZWN0X3N0YXR1cygpIEFQSSBjaGFuZ2VzLg0KPiANCj4gdjQ6IHVz
ZSBpbnRlbF9weHBfaXNfYWN0aXZlIChEYW5pZWxlKQ0KPiANCj4gdjU6IHJlYmFzZSBhbmQgdXNl
IHRoZSBuZXcgcHJvdGVjdGVkIG9iamVjdCBzdGF0dXMgY2hlY2tlciAoRGFuaWVsZSkNCj4gDQo+
IHY2OiB1c2VkIHBsYW5lIHN0YXRlIGZvciBwbGFuZV9kZWNyeXB0aW9uIHRvIGhhbmRsZSBhc3lu
YyBmbGlwDQo+ICAgICBhcyBzdWdnZXN0ZWQgYnkgVmlsbGUuDQo+IA0KPiB2NzogY2hlY2sgcHhw
IHNlc3Npb24gd2hpbGUgcGxhbmUgZGVjcnlwdCBzdGF0ZSBjb21wdXRhdGlvbi4gW1ZpbGxlXQ0K
PiAgICAgcmVtb3ZlZCBwb2ludGxlc3MgY29kZS4gW1ZpbGxlXQ0KPiANCj4gdjggKERhbmllbGUp
OiB1cGRhdGUgUFhQIGNoZWNrDQo+IA0KPiB2OTogbW92ZSBkZWNyeXB0IGNoZWNrIGFmdGVyIGlj
bF9jaGVja19udjEyX3BsYW5lcygpIHdoZW4gb3ZlcmxheXMNCj4gICAgIGhhdmUgZmIgc2V0IChK
dXN0b24pDQoNCkxvb2tzIEdvb2QgdG8gbWUuDQpSZXZpZXdlZC1ieTogVW1hIFNoYW5rYXIgPHVt
YS5zaGFua2FyQGludGVsLmNvbT4NCg0KPiBDYzogQm9tbXUgS3Jpc2huYWlhaCA8a3Jpc2huYWlh
aC5ib21tdUBpbnRlbC5jb20+DQo+IENjOiBIdWFuZyBTZWFuIFogPHNlYW4uei5odWFuZ0BpbnRl
bC5jb20+DQo+IENjOiBHYXVyYXYgS3VtYXIgPGt1bWFyLmdhdXJhdkBpbnRlbC5jb20+DQo+IENj
OiBWaWxsZSBTeXJqw6Rsw6QgPHZpbGxlLnN5cmphbGFAbGludXguaW50ZWwuY29tPg0KPiBTaWdu
ZWQtb2ZmLWJ5OiBBbnNodW1hbiBHdXB0YSA8YW5zaHVtYW4uZ3VwdGFAaW50ZWwuY29tPg0KPiBT
aWduZWQtb2ZmLWJ5OiBEYW5pZWxlIENlcmFvbG8gU3B1cmlvIDxkYW5pZWxlLmNlcmFvbG9zcHVy
aW9AaW50ZWwuY29tPg0KPiBTaWduZWQtb2ZmLWJ5OiBKdXN0b24gTGkgPGp1c3Rvbi5saUBpbnRl
bC5jb20+DQo+IFJldmlld2VkLWJ5OiBSb2RyaWdvIFZpdmkgPHJvZHJpZ28udml2aUBpbnRlbC5j
b20+DQo+IC0tLQ0KPiAgZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5
LmMgIHwgMjcgKysrKysrKysrKysrKysrKysrKw0KPiAgLi4uL2RybS9pOTE1L2Rpc3BsYXkvaW50
ZWxfZGlzcGxheV90eXBlcy5oICAgIHwgIDMgKysrDQo+ICAuLi4vZHJtL2k5MTUvZGlzcGxheS9z
a2xfdW5pdmVyc2FsX3BsYW5lLmMgICAgfCAxNSArKysrKysrKy0tLQ0KPiAgZHJpdmVycy9ncHUv
ZHJtL2k5MTUvaTkxNV9yZWcuaCAgICAgICAgICAgICAgIHwgIDEgKw0KPiAgNCBmaWxlcyBjaGFu
Z2VkLCA0MyBpbnNlcnRpb25zKCspLCAzIGRlbGV0aW9ucygtKQ0KPiANCj4gZGlmZiAtLWdpdCBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+IGIvZHJpdmVy
cy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMNCj4gaW5kZXggYjI1YzU5NmY2
ZjdlLi5hY2NkZDY2MTQ2ODEgMTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jDQo+ICsrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3Bs
YXkvaW50ZWxfZGlzcGxheS5jDQo+IEBAIC03MCw2ICs3MCw4IEBADQo+ICAjaW5jbHVkZSAiZ3Qv
aW50ZWxfcnBzLmgiDQo+ICAjaW5jbHVkZSAiZ3QvZ2VuOF9wcGd0dC5oIg0KPiANCj4gKyNpbmNs
dWRlICJweHAvaW50ZWxfcHhwLmgiDQo+ICsNCj4gICNpbmNsdWRlICJnNHhfZHAuaCINCj4gICNp
bmNsdWRlICJnNHhfaGRtaS5oIg0KPiAgI2luY2x1ZGUgImk5MTVfZHJ2LmgiDQo+IEBAIC05NjEw
LDEzICs5NjEyLDI0IEBAIHN0YXRpYyBpbnQgaW50ZWxfYmlnam9pbmVyX2FkZF9hZmZlY3RlZF9w
bGFuZXMoc3RydWN0DQo+IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpDQo+ICAJcmV0dXJuIDA7
DQo+ICB9DQo+IA0KPiArc3RhdGljIGludCBib19oYXNfdmFsaWRfZW5jcnlwdGlvbihjb25zdCBz
dHJ1Y3QgZHJtX2k5MTVfZ2VtX29iamVjdA0KPiArKm9iaikgew0KPiArICAgICAgICBzdHJ1Y3Qg
ZHJtX2k5MTVfcHJpdmF0ZSAqaTkxNSA9IHRvX2k5MTUob2JqLT5iYXNlLmRldik7DQo+ICsNCj4g
KyAgICAgICAgcmV0dXJuIGk5MTVfZ2VtX29iamVjdF9oYXNfdmFsaWRfcHJvdGVjdGlvbihvYmop
ICYmDQo+ICsgICAgICAgICAgICAgICBpbnRlbF9weHBfaXNfYWN0aXZlKCZpOTE1LT5ndC5weHAp
Ow0KPiArfQ0KPiArDQo+ICBzdGF0aWMgaW50IGludGVsX2F0b21pY19jaGVja19wbGFuZXMoc3Ry
dWN0IGludGVsX2F0b21pY19zdGF0ZSAqc3RhdGUpICB7DQo+ICAJc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmRldl9wcml2ID0gdG9faTkxNShzdGF0ZS0+YmFzZS5kZXYpOw0KPiAgCXN0cnVjdCBp
bnRlbF9jcnRjX3N0YXRlICpvbGRfY3J0Y19zdGF0ZSwgKm5ld19jcnRjX3N0YXRlOw0KPiAgCXN0
cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSAqcGxhbmVfc3RhdGU7DQo+ICAJc3RydWN0IGludGVsX3Bs
YW5lICpwbGFuZTsNCj4gKwlzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKm5ld19wbGFuZV9zdGF0
ZTsNCj4gKwlzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUgKm9sZF9wbGFuZV9zdGF0ZTsNCj4gIAlz
dHJ1Y3QgaW50ZWxfY3J0YyAqY3J0YzsNCj4gKwljb25zdCBzdHJ1Y3QgZHJtX2ZyYW1lYnVmZmVy
ICpmYjsNCj4gIAlpbnQgaSwgcmV0Ow0KPiANCj4gIAlyZXQgPSBpY2xfYWRkX2xpbmtlZF9wbGFu
ZXMoc3RhdGUpOw0KPiBAQCAtOTY2NCw2ICs5Njc3LDE2IEBAIHN0YXRpYyBpbnQgaW50ZWxfYXRv
bWljX2NoZWNrX3BsYW5lcyhzdHJ1Y3QNCj4gaW50ZWxfYXRvbWljX3N0YXRlICpzdGF0ZSkNCj4g
IAkJCXJldHVybiByZXQ7DQo+ICAJfQ0KPiANCj4gKwlmb3JfZWFjaF9uZXdfaW50ZWxfcGxhbmVf
aW5fc3RhdGUoc3RhdGUsIHBsYW5lLCBwbGFuZV9zdGF0ZSwgaSkgew0KPiArCQluZXdfcGxhbmVf
c3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X25ld19wbGFuZV9zdGF0ZShzdGF0ZSwNCj4gcGxhbmUp
Ow0KPiArCQlvbGRfcGxhbmVfc3RhdGUgPSBpbnRlbF9hdG9taWNfZ2V0X29sZF9wbGFuZV9zdGF0
ZShzdGF0ZSwgcGxhbmUpOw0KPiArCQlmYiA9IG5ld19wbGFuZV9zdGF0ZS0+aHcuZmI7DQo+ICsJ
CWlmIChmYikNCj4gKwkJCW5ld19wbGFuZV9zdGF0ZS0+ZGVjcnlwdCA9DQo+IGJvX2hhc192YWxp
ZF9lbmNyeXB0aW9uKGludGVsX2ZiX29iaihmYikpOw0KPiArCQllbHNlDQo+ICsJCQluZXdfcGxh
bmVfc3RhdGUtPmRlY3J5cHQgPSBvbGRfcGxhbmVfc3RhdGUtPmRlY3J5cHQ7DQo+ICsgICAgICAg
IH0NCj4gKw0KPiAgCXJldHVybiAwOw0KPiAgfQ0KPiANCj4gQEAgLTk5NTAsNiArOTk3MywxMCBA
QCBzdGF0aWMgaW50IGludGVsX2F0b21pY19jaGVja19hc3luYyhzdHJ1Y3QNCj4gaW50ZWxfYXRv
bWljX3N0YXRlICpzdGF0ZSkNCj4gIAkJCWRybV9kYmdfa21zKCZpOTE1LT5kcm0sICJDb2xvciBy
YW5nZSBjYW5ub3QgYmUNCj4gY2hhbmdlZCBpbiBhc3luYyBmbGlwXG4iKTsNCj4gIAkJCXJldHVy
biAtRUlOVkFMOw0KPiAgCQl9DQo+ICsNCj4gKwkJLyogcGxhbmUgZGVjcnlwdGlvbiBpcyBhbGxv
dyB0byBjaGFuZ2Ugb25seSBpbiBzeW5jaHJvbm91cyBmbGlwcyAqLw0KPiArCQlpZiAob2xkX3Bs
YW5lX3N0YXRlLT5kZWNyeXB0ICE9IG5ld19wbGFuZV9zdGF0ZS0+ZGVjcnlwdCkNCj4gKwkJCXJl
dHVybiAtRUlOVkFMOw0KPiAgCX0NCj4gDQo+ICAJcmV0dXJuIDA7DQo+IGRpZmYgLS1naXQgYS9k
cml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheV90eXBlcy5oDQo+IGluZGV4
IDZiZWVlZWJhMWJlZC4uNTNiNWRiM2M2MjI4IDEwMDY0NA0KPiAtLS0gYS9kcml2ZXJzL2dwdS9k
cm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiArKysgYi9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9kaXNwbGF5L2ludGVsX2Rpc3BsYXlfdHlwZXMuaA0KPiBAQCAtNjI5LDYgKzYy
OSw5IEBAIHN0cnVjdCBpbnRlbF9wbGFuZV9zdGF0ZSB7DQo+IA0KPiAgCXN0cnVjdCBpbnRlbF9m
Yl92aWV3IHZpZXc7DQo+IA0KPiArCS8qIFBsYW5lIHB4cCBkZWNyeXB0aW9uIHN0YXRlICovDQo+
ICsJYm9vbCBkZWNyeXB0Ow0KPiArDQo+ICAJLyogcGxhbmUgY29udHJvbCByZWdpc3RlciAqLw0K
PiAgCXUzMiBjdGw7DQo+IA0KPiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9za2xfdW5pdmVyc2FsX3BsYW5lLmMNCj4gYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9kaXNw
bGF5L3NrbF91bml2ZXJzYWxfcGxhbmUuYw0KPiBpbmRleCA3MjRlN2IwNGYzYjYuLjU1ZTNmMDkz
Yjk1MSAxMDA2NDQNCj4gLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9za2xfdW5p
dmVyc2FsX3BsYW5lLmMNCj4gKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9za2xf
dW5pdmVyc2FsX3BsYW5lLmMNCj4gQEAgLTE4LDYgKzE4LDcgQEANCj4gICNpbmNsdWRlICJpbnRl
bF9zcHJpdGUuaCINCj4gICNpbmNsdWRlICJza2xfc2NhbGVyLmgiDQo+ICAjaW5jbHVkZSAic2ts
X3VuaXZlcnNhbF9wbGFuZS5oIg0KPiArI2luY2x1ZGUgInB4cC9pbnRlbF9weHAuaCINCj4gDQo+
ICBzdGF0aWMgY29uc3QgdTMyIHNrbF9wbGFuZV9mb3JtYXRzW10gPSB7DQo+ICAJRFJNX0ZPUk1B
VF9DOCwNCj4gQEAgLTEwMjQsNyArMTAyNSw3IEBAIHNrbF9wcm9ncmFtX3BsYW5lKHN0cnVjdCBp
bnRlbF9wbGFuZSAqcGxhbmUsDQo+ICAJdTggYWxwaGEgPSBwbGFuZV9zdGF0ZS0+aHcuYWxwaGEg
Pj4gODsNCj4gIAl1MzIgcGxhbmVfY29sb3JfY3RsID0gMCwgYXV4X2Rpc3QgPSAwOw0KPiAgCXVu
c2lnbmVkIGxvbmcgaXJxZmxhZ3M7DQo+IC0JdTMyIGtleW1zaywga2V5bWF4Ow0KPiArCXUzMiBr
ZXltc2ssIGtleW1heCwgcGxhbmVfc3VyZjsNCj4gIAl1MzIgcGxhbmVfY3RsID0gcGxhbmVfc3Rh
dGUtPmN0bDsNCj4gDQo+ICAJcGxhbmVfY3RsIHw9IHNrbF9wbGFuZV9jdGxfY3J0YyhjcnRjX3N0
YXRlKTsgQEAgLTExMTMsOCArMTExNCwxNiBAQA0KPiBza2xfcHJvZ3JhbV9wbGFuZShzdHJ1Y3Qg
aW50ZWxfcGxhbmUgKnBsYW5lLA0KPiAgCSAqIHRoZSBjb250cm9sIHJlZ2lzdGVyIGp1c3QgYmVm
b3JlIHRoZSBzdXJmYWNlIHJlZ2lzdGVyLg0KPiAgCSAqLw0KPiAgCWludGVsX2RlX3dyaXRlX2Z3
KGRldl9wcml2LCBQTEFORV9DVEwocGlwZSwgcGxhbmVfaWQpLCBwbGFuZV9jdGwpOw0KPiAtCWlu
dGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQTEFORV9TVVJGKHBpcGUsIHBsYW5lX2lkKSwNCj4g
LQkJCSAgaW50ZWxfcGxhbmVfZ2d0dF9vZmZzZXQocGxhbmVfc3RhdGUpICsgc3VyZl9hZGRyKTsN
Cj4gKwlwbGFuZV9zdXJmID0gaW50ZWxfcGxhbmVfZ2d0dF9vZmZzZXQocGxhbmVfc3RhdGUpICsg
c3VyZl9hZGRyOw0KPiArDQo+ICsJLyoNCj4gKwkgKiBGSVhNRTogcHhwIHNlc3Npb24gaW52YWxp
ZGF0aW9uIGNhbiBoaXQgYW55IHRpbWUgZXZlbiBhdCB0aW1lIG9mIGNvbW1pdA0KPiArCSAqIG9y
IGFmdGVyIHRoZSBjb21taXQsIGRpc3BsYXkgY29udGVudCB3aWxsIGJlIGdhcmJhZ2UuDQo+ICsJ
ICovDQo+ICsJaWYgKHBsYW5lX3N0YXRlLT5kZWNyeXB0KQ0KPiArCQlwbGFuZV9zdXJmIHw9IFBM
QU5FX1NVUkZfREVDUllQVDsNCj4gKw0KPiArCWludGVsX2RlX3dyaXRlX2Z3KGRldl9wcml2LCBQ
TEFORV9TVVJGKHBpcGUsIHBsYW5lX2lkKSwgcGxhbmVfc3VyZik7DQo+IA0KPiAgCXNwaW5fdW5s
b2NrX2lycXJlc3RvcmUoJmRldl9wcml2LT51bmNvcmUubG9jaywgaXJxZmxhZ3MpOyAgfSBkaWZm
IC0tZ2l0DQo+IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaCBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2k5MTVfcmVnLmggaW5kZXgNCj4gZjc2ZWFlZDhlODU1Li41N2YyMmY1NGQ5Zjcg
MTAwNjQ0DQo+IC0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVnLmgNCj4gKysrIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZWcuaA0KPiBAQCAtNzM0Nyw2ICs3MzQ3LDcgQEAg
ZW51bSB7DQo+ICAjZGVmaW5lIF9QTEFORV9TVVJGXzMocGlwZSkJX1BJUEUocGlwZSwgX1BMQU5F
X1NVUkZfM19BLA0KPiBfUExBTkVfU1VSRl8zX0IpDQo+ICAjZGVmaW5lIFBMQU5FX1NVUkYocGlw
ZSwgcGxhbmUpCVwNCj4gIAlfTU1JT19QTEFORShwbGFuZSwgX1BMQU5FX1NVUkZfMShwaXBlKSwg
X1BMQU5FX1NVUkZfMihwaXBlKSkNCj4gKyNkZWZpbmUgICBQTEFORV9TVVJGX0RFQ1JZUFQJCQlS
RUdfQklUKDIpDQo+IA0KPiAgI2RlZmluZSBfUExBTkVfT0ZGU0VUXzFfQgkJCTB4NzExYTQNCj4g
ICNkZWZpbmUgX1BMQU5FX09GRlNFVF8yX0IJCQkweDcxMmE0DQo+IC0tDQo+IDIuMjYuMg0KDQo=

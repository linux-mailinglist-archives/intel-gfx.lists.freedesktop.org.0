Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id C1C3071F67
	for <lists+intel-gfx@lfdr.de>; Tue, 23 Jul 2019 20:39:02 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 1D9666E391;
	Tue, 23 Jul 2019 18:39:00 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from fireflyinternet.com (mail.fireflyinternet.com [109.228.58.192])
 by gabe.freedesktop.org (Postfix) with ESMTPS id CB3236E37C
 for <intel-gfx@lists.freedesktop.org>; Tue, 23 Jul 2019 18:38:58 +0000 (UTC)
X-Default-Received-SPF: pass (skip=forwardok (res=PASS))
 x-ip-name=78.156.65.138; 
Received: from haswell.alporthouse.com (unverified [78.156.65.138]) 
 by fireflyinternet.com (Firefly Internet (M1)) with ESMTP id 17542621-1500050 
 for multiple; Tue, 23 Jul 2019 19:38:46 +0100
From: Chris Wilson <chris@chris-wilson.co.uk>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 23 Jul 2019 19:38:36 +0100
Message-Id: <20190723183842.20372-17-chris@chris-wilson.co.uk>
X-Mailer: git-send-email 2.22.0
In-Reply-To: <20190723183842.20372-1-chris@chris-wilson.co.uk>
References: <20190723183842.20372-1-chris@chris-wilson.co.uk>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH 17/23] drm/i915: Protect request retirement with
 timeline->mutex
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

Rm9yZ28gdGhlIHN0cnVjdF9tdXRleCByZXF1aXJlbWVudCBmb3IgcmVxdWVzdCByZXRpcmVtZW50
IGFzIHdlIGhhdmUKYmVlbiB0cmFuc2l0aW9uaW5nIG92ZXIgdG8gb25seSB1c2luZyB0aGUgdGlt
ZWxpbmUtPm11dGV4IGZvcgpjb250cm9sbGluZyB0aGUgbGlmZXRpbWUgb2YgYSByZXF1ZXN0IG9u
IHRoYXQgdGltZWxpbmUuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpcyBXaWxzb24gPGNocmlzQGNocmlz
LXdpbHNvbi5jby51az4KLS0tCiAuLi4vZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVm
ZmVyLmMgICAgfCAxODMgKysrKysrKysrKy0tLS0tLS0tCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9n
dC9pbnRlbF9jb250ZXh0LmggICAgICAgfCAgMTggKy0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0
L2ludGVsX2VuZ2luZV9jcy5jICAgICB8ICAgMSAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9lbmdpbmVfdHlwZXMuaCAgfCAgIDIgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50
ZWxfZ3QuYyAgICAgICAgICAgIHwgICAxIC0KIGRyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2d0X3R5cGVzLmggICAgICB8ICAgMiAtCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9s
cmMuYyAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmlu
Z2J1ZmZlci5jICAgIHwgIDEzICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9tb2NrX2VuZ2lu
ZS5jICAgICAgICAgfCAgIDEgLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9yZXF1ZXN0LmMg
ICAgICAgICAgIHwgMTUxICsrKysrKystLS0tLS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZXF1ZXN0LmggICAgICAgICAgIHwgICAzIC0KIDExIGZpbGVzIGNoYW5nZWQsIDE5NyBpbnNl
cnRpb25zKCspLCAxNzkgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJt
L2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dl
bS9pOTE1X2dlbV9leGVjYnVmZmVyLmMKaW5kZXggOGQ5MDQ5OGVhZjQ2Li40NGFkZDE3MmNkYzgg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2dlbS9pOTE1X2dlbV9leGVjYnVmZmVy
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ2VtL2k5MTVfZ2VtX2V4ZWNidWZmZXIuYwpA
QCAtNzM0LDYzICs3MzQsNiBAQCBzdGF0aWMgaW50IGViX3NlbGVjdF9jb250ZXh0KHN0cnVjdCBp
OTE1X2V4ZWNidWZmZXIgKmViKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgc3RydWN0IGk5MTVf
cmVxdWVzdCAqX19lYl93YWl0X2Zvcl9yaW5nKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nKQotewot
CXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCi0JLyoKLQkgKiBDb21wbGV0ZWx5IHVuc2NpZW50
aWZpYyBmaW5nZXItaW4tdGhlLWFpciBlc3RpbWF0ZXMgZm9yIHN1aXRhYmxlCi0JICogbWF4aW11
bSB1c2VyIHJlcXVlc3Qgc2l6ZSAodG8gYXZvaWQgYmxvY2tpbmcpIGFuZCB0aGVuIGJhY2tvZmYu
Ci0JICovCi0JaWYgKGludGVsX3JpbmdfdXBkYXRlX3NwYWNlKHJpbmcpID49IFBBR0VfU0laRSkK
LQkJcmV0dXJuIE5VTEw7Ci0KLQkvKgotCSAqIEZpbmQgYSByZXF1ZXN0IHRoYXQgYWZ0ZXIgd2Fp
dGluZyB1cG9uLCB0aGVyZSB3aWxsIGJlIGF0IGxlYXN0IGhhbGYKLQkgKiB0aGUgcmluZyBhdmFp
bGFibGUuIFRoZSBoeXN0ZXJlc2lzIGFsbG93cyB1cyB0byBjb21wZXRlIGZvciB0aGUKLQkgKiBz
aGFyZWQgcmluZyBhbmQgc2hvdWxkIG1lYW4gdGhhdCB3ZSBzbGVlcCBsZXNzIG9mdGVuIHByaW9y
IHRvCi0JICogY2xhaW1pbmcgb3VyIHJlc291cmNlcywgYnV0IG5vdCBzbyBsb25nIHRoYXQgdGhl
IHJpbmcgY29tcGxldGVseQotCSAqIGRyYWlucyBiZWZvcmUgd2UgY2FuIHN1Ym1pdCBvdXIgbmV4
dCByZXF1ZXN0LgotCSAqLwotCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZyaW5nLT5yZXF1ZXN0
X2xpc3QsIHJpbmdfbGluaykgewotCQlpZiAoX19pbnRlbF9yaW5nX3NwYWNlKHJxLT5wb3N0Zml4
LAotCQkJCSAgICAgICByaW5nLT5lbWl0LCByaW5nLT5zaXplKSA+IHJpbmctPnNpemUgLyAyKQot
CQkJYnJlYWs7Ci0JfQotCWlmICgmcnEtPnJpbmdfbGluayA9PSAmcmluZy0+cmVxdWVzdF9saXN0
KQotCQlyZXR1cm4gTlVMTDsgLyogd2VpcmQsIHdlIHdpbGwgY2hlY2sgYWdhaW4gbGF0ZXIgZm9y
IHJlYWwgKi8KLQotCXJldHVybiBpOTE1X3JlcXVlc3RfZ2V0KHJxKTsKLX0KLQotc3RhdGljIGlu
dCBlYl93YWl0X2Zvcl9yaW5nKGNvbnN0IHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQotewot
CXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCWludCByZXQgPSAwOwotCi0JLyoKLQkgKiBBcHBs
eSBhIGxpZ2h0IGFtb3VudCBvZiBiYWNrcHJlc3N1cmUgdG8gcHJldmVudCBleGNlc3NpdmUgaG9n
cwotCSAqIGZyb20gYmxvY2tpbmcgd2FpdGluZyBmb3Igc3BhY2Ugd2hpbHN0IGhvbGRpbmcgc3Ry
dWN0X211dGV4IGFuZAotCSAqIGtlZXBpbmcgYWxsIG9mIHRoZWlyIHJlc291cmNlcyBwaW5uZWQu
Ci0JICovCi0KLQlycSA9IF9fZWJfd2FpdF9mb3JfcmluZyhlYi0+Y29udGV4dC0+cmluZyk7Ci0J
aWYgKHJxKSB7Ci0JCW11dGV4X3VubG9jaygmZWItPmk5MTUtPmRybS5zdHJ1Y3RfbXV0ZXgpOwot
Ci0JCWlmIChpOTE1X3JlcXVlc3Rfd2FpdChycSwKLQkJCQkgICAgICBJOTE1X1dBSVRfSU5URVJS
VVBUSUJMRSwKLQkJCQkgICAgICBNQVhfU0NIRURVTEVfVElNRU9VVCkgPCAwKQotCQkJcmV0ID0g
LUVJTlRSOwotCi0JCWk5MTVfcmVxdWVzdF9wdXQocnEpOwotCi0JCW11dGV4X2xvY2soJmViLT5p
OTE1LT5kcm0uc3RydWN0X211dGV4KTsKLQl9Ci0KLQlyZXR1cm4gcmV0OwotfQotCiBzdGF0aWMg
aW50IGViX2xvb2t1cF92bWFzKHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmViKQogewogCXN0cnVj
dCByYWRpeF90cmVlX3Jvb3QgKmhhbmRsZXNfdm1hID0gJmViLT5nZW1fY29udGV4dC0+aGFuZGxl
c192bWE7CkBAIC0yMTE4LDggKzIwNjEsNzMgQEAgc3RhdGljIGNvbnN0IGVudW0gaW50ZWxfZW5n
aW5lX2lkIHVzZXJfcmluZ19tYXBbXSA9IHsKIAlbSTkxNV9FWEVDX1ZFQk9YXQk9IFZFQ1MwCiB9
OwogCi1zdGF0aWMgaW50IGViX3Bpbl9jb250ZXh0KHN0cnVjdCBpOTE1X2V4ZWNidWZmZXIgKmVi
LCBzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCitzdGF0aWMgc3RydWN0IGk5MTVfcmVxdWVzdCAq
ZWJfdGhyb3R0bGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQogeworCXN0cnVjdCBpbnRlbF9y
aW5nICpyaW5nID0gY2UtPnJpbmc7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IHJpbmct
PnRpbWVsaW5lOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOworCisJLyoKKwkgKiBDb21wbGV0
ZWx5IHVuc2NpZW50aWZpYyBmaW5nZXItaW4tdGhlLWFpciBlc3RpbWF0ZXMgZm9yIHN1aXRhYmxl
CisJICogbWF4aW11bSB1c2VyIHJlcXVlc3Qgc2l6ZSAodG8gYXZvaWQgYmxvY2tpbmcpIGFuZCB0
aGVuIGJhY2tvZmYuCisJICovCisJaWYgKGludGVsX3JpbmdfdXBkYXRlX3NwYWNlKHJpbmcpID49
IFBBR0VfU0laRSkKKwkJcmV0dXJuIE5VTEw7CisKKwkvKgorCSAqIEZpbmQgYSByZXF1ZXN0IHRo
YXQgYWZ0ZXIgd2FpdGluZyB1cG9uLCB0aGVyZSB3aWxsIGJlIGF0IGxlYXN0IGhhbGYKKwkgKiB0
aGUgcmluZyBhdmFpbGFibGUuIFRoZSBoeXN0ZXJlc2lzIGFsbG93cyB1cyB0byBjb21wZXRlIGZv
ciB0aGUKKwkgKiBzaGFyZWQgcmluZyBhbmQgc2hvdWxkIG1lYW4gdGhhdCB3ZSBzbGVlcCBsZXNz
IG9mdGVuIHByaW9yIHRvCisJICogY2xhaW1pbmcgb3VyIHJlc291cmNlcywgYnV0IG5vdCBzbyBs
b25nIHRoYXQgdGhlIHJpbmcgY29tcGxldGVseQorCSAqIGRyYWlucyBiZWZvcmUgd2UgY2FuIHN1
Ym1pdCBvdXIgbmV4dCByZXF1ZXN0LgorCSAqLworCWxpc3RfZm9yX2VhY2hfZW50cnkocnEsICZ0
bC0+cmVxdWVzdHMsIGxpbmspIHsKKwkJaWYgKHJxLT5yaW5nICE9IHJpbmcpCisJCQljb250aW51
ZTsKKworCQlpZiAoX19pbnRlbF9yaW5nX3NwYWNlKHJxLT5wb3N0Zml4LAorCQkJCSAgICAgICBy
aW5nLT5lbWl0LCByaW5nLT5zaXplKSA+IHJpbmctPnNpemUgLyAyKQorCQkJYnJlYWs7CisJfQor
CWlmICgmcnEtPmxpbmsgPT0gJnRsLT5yZXF1ZXN0cykKKwkJcmV0dXJuIE5VTEw7IC8qIHdlaXJk
LCB3ZSB3aWxsIGNoZWNrIGFnYWluIGxhdGVyIGZvciByZWFsICovCisKKwlyZXR1cm4gaTkxNV9y
ZXF1ZXN0X2dldChycSk7Cit9CisKK3N0YXRpYyBpbnQKK19fZWJfcGluX2NvbnRleHQoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKK3sKKwlpbnQg
ZXJyOworCisJaWYgKGxpa2VseShhdG9taWNfaW5jX25vdF96ZXJvKCZjZS0+cGluX2NvdW50KSkp
CisJCXJldHVybiAwOworCisJZXJyID0gbXV0ZXhfbG9ja19pbnRlcnJ1cHRpYmxlKCZlYi0+aTkx
NS0+ZHJtLnN0cnVjdF9tdXRleCk7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVyciA9
IF9faW50ZWxfY29udGV4dF9kb19waW4oY2UpOworCW11dGV4X3VubG9jaygmZWItPmk5MTUtPmRy
bS5zdHJ1Y3RfbXV0ZXgpOworCisJcmV0dXJuIGVycjsKK30KKworc3RhdGljIHZvaWQKK19fZWJf
dW5waW5fY29udGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgc3RydWN0IGludGVsX2Nv
bnRleHQgKmNlKQoreworCWlmIChsaWtlbHkoYXRvbWljX2FkZF91bmxlc3MoJmNlLT5waW5fY291
bnQsIC0xLCAxKSkpCisJCXJldHVybjsKKworCW11dGV4X2xvY2soJmViLT5pOTE1LT5kcm0uc3Ry
dWN0X211dGV4KTsKKwlpbnRlbF9jb250ZXh0X3VucGluKGNlKTsKKwltdXRleF91bmxvY2soJmVi
LT5pOTE1LT5kcm0uc3RydWN0X211dGV4KTsKK30KKworc3RhdGljIGludCBfX2ViX3Bpbl9lbmdp
bmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkK
K3sKKwlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsOworCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJx
OwogCWludCBlcnI7CiAKIAkvKgpAQCAtMjEzNSw3ICsyMTQzLDcgQEAgc3RhdGljIGludCBlYl9w
aW5fY29udGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYiwgc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlKQogCSAqIEdHVFQgc3BhY2UsIHNvIGRvIHRoaXMgZmlyc3QgYmVmb3JlIHdlIHJlc2Vy
dmUgYSBzZXFubyBmb3IKIAkgKiBvdXJzZWx2ZXMuCiAJICovCi0JZXJyID0gaW50ZWxfY29udGV4
dF9waW4oY2UpOworCWVyciA9IF9fZWJfcGluX2NvbnRleHQoZWIsIGNlKTsKIAlpZiAoZXJyKQog
CQlyZXR1cm4gZXJyOwogCkBAIC0yMTQ3LDIzICsyMTU1LDQzIEBAIHN0YXRpYyBpbnQgZWJfcGlu
X2NvbnRleHQoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsIHN0cnVjdCBpbnRlbF9jb250ZXh0
ICpjZSkKIAkgKiB1bnRpbCB0aGUgdGltZWxpbmUgaXMgaWRsZSwgd2hpY2ggaW4gdHVybiByZWxl
YXNlcyB0aGUgd2FrZXJlZgogCSAqIHRha2VuIG9uIHRoZSBlbmdpbmUsIGFuZCB0aGUgcGFyZW50
IGRldmljZS4KIAkgKi8KLQllcnIgPSBpbnRlbF9jb250ZXh0X3RpbWVsaW5lX2xvY2soY2UpOwot
CWlmIChlcnIpCisJdGwgPSBpbnRlbF9jb250ZXh0X3RpbWVsaW5lX2xvY2soY2UpOworCWlmIChJ
U19FUlIodGwpKSB7CisJCWVyciA9IFBUUl9FUlIodGwpOwogCQlnb3RvIGVycl91bnBpbjsKKwl9
CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsKLQlpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3Vu
bG9jayhjZSk7CisJcnEgPSBlYl90aHJvdHRsZShjZSk7CisKKwlpbnRlbF9jb250ZXh0X3RpbWVs
aW5lX3VubG9jayh0bCk7CisKKwlpZiAocnEpIHsKKwkJaWYgKGk5MTVfcmVxdWVzdF93YWl0KHJx
LAorCQkJCSAgICAgIEk5MTVfV0FJVF9JTlRFUlJVUFRJQkxFLAorCQkJCSAgICAgIE1BWF9TQ0hF
RFVMRV9USU1FT1VUKSA8IDApIHsKKwkJCWk5MTVfcmVxdWVzdF9wdXQocnEpOworCQkJZXJyID0g
LUVJTlRSOworCQkJZ290byBlcnJfZXhpdDsKKwkJfQorCisJCWk5MTVfcmVxdWVzdF9wdXQocnEp
OworCX0KIAogCWViLT5lbmdpbmUgPSBjZS0+ZW5naW5lOwogCWViLT5jb250ZXh0ID0gY2U7CiAJ
cmV0dXJuIDA7CiAKK2Vycl9leGl0OgorCW11dGV4X2xvY2soJnRsLT5tdXRleCk7CisJaW50ZWxf
Y29udGV4dF9leGl0KGNlKTsKKwlpbnRlbF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayh0bCk7CiBl
cnJfdW5waW46Ci0JaW50ZWxfY29udGV4dF91bnBpbihjZSk7CisJX19lYl91bnBpbl9jb250ZXh0
KGViLCBjZSk7CiAJcmV0dXJuIGVycjsKIH0KIAotc3RhdGljIHZvaWQgZWJfdW5waW5fY29udGV4
dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKK3N0YXRpYyB2b2lkIGViX3VucGluX2VuZ2lu
ZShzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIHsKIAlzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UgPSBlYi0+Y29udGV4dDsKIAlzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKnRsID0gY2UtPnJpbmct
PnRpbWVsaW5lOwpAQCAtMjE3Miw3ICsyMjAwLDcgQEAgc3RhdGljIHZvaWQgZWJfdW5waW5fY29u
dGV4dChzdHJ1Y3QgaTkxNV9leGVjYnVmZmVyICplYikKIAlpbnRlbF9jb250ZXh0X2V4aXQoY2Up
OwogCW11dGV4X3VubG9jaygmdGwtPm11dGV4KTsKIAotCWludGVsX2NvbnRleHRfdW5waW4oY2Up
OworCV9fZWJfdW5waW5fY29udGV4dChlYiwgY2UpOwogfQogCiBzdGF0aWMgdW5zaWduZWQgaW50
CkBAIC0yMjE3LDkgKzIyNDUsOSBAQCBlYl9zZWxlY3RfbGVnYWN5X3Jpbmcoc3RydWN0IGk5MTVf
ZXhlY2J1ZmZlciAqZWIsCiB9CiAKIHN0YXRpYyBpbnQKLWViX3NlbGVjdF9lbmdpbmUoc3RydWN0
IGk5MTVfZXhlY2J1ZmZlciAqZWIsCi0JCSBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCi0JCSBzdHJ1
Y3QgZHJtX2k5MTVfZ2VtX2V4ZWNidWZmZXIyICphcmdzKQorZWJfcGluX2VuZ2luZShzdHJ1Y3Qg
aTkxNV9leGVjYnVmZmVyICplYiwKKwkgICAgICBzdHJ1Y3QgZHJtX2ZpbGUgKmZpbGUsCisJICAg
ICAgc3RydWN0IGRybV9pOTE1X2dlbV9leGVjYnVmZmVyMiAqYXJncykKIHsKIAlzdHJ1Y3QgaW50
ZWxfY29udGV4dCAqY2U7CiAJdW5zaWduZWQgaW50IGlkeDsKQEAgLTIyMzQsNyArMjI2Miw3IEBA
IGViX3NlbGVjdF9lbmdpbmUoc3RydWN0IGk5MTVfZXhlY2J1ZmZlciAqZWIsCiAJaWYgKElTX0VS
UihjZSkpCiAJCXJldHVybiBQVFJfRVJSKGNlKTsKIAotCWVyciA9IGViX3Bpbl9jb250ZXh0KGVi
LCBjZSk7CisJZXJyID0gX19lYl9waW5fZW5naW5lKGViLCBjZSk7CiAJaW50ZWxfY29udGV4dF9w
dXQoY2UpOwogCiAJcmV0dXJuIGVycjsKQEAgLTI0NTIsMTYgKzI0ODAsMTIgQEAgaTkxNV9nZW1f
ZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2LAogCWlmICh1bmxpa2VseShlcnIp
KQogCQlnb3RvIGVycl9kZXN0cm95OwogCi0JZXJyID0gaTkxNV9tdXRleF9sb2NrX2ludGVycnVw
dGlibGUoZGV2KTsKLQlpZiAoZXJyKQotCQlnb3RvIGVycl9jb250ZXh0OwotCi0JZXJyID0gZWJf
c2VsZWN0X2VuZ2luZSgmZWIsIGZpbGUsIGFyZ3MpOworCWVyciA9IGViX3Bpbl9lbmdpbmUoJmVi
LCBmaWxlLCBhcmdzKTsKIAlpZiAodW5saWtlbHkoZXJyKSkKLQkJZ290byBlcnJfdW5sb2NrOwor
CQlnb3RvIGVycl9jb250ZXh0OwogCi0JZXJyID0gZWJfd2FpdF9mb3JfcmluZygmZWIpOyAvKiBt
YXkgdGVtcG9yYXJpbHkgZHJvcCBzdHJ1Y3RfbXV0ZXggKi8KLQlpZiAodW5saWtlbHkoZXJyKSkK
KwllcnIgPSBpOTE1X211dGV4X2xvY2tfaW50ZXJydXB0aWJsZShkZXYpOworCWlmIChlcnIpCiAJ
CWdvdG8gZXJyX2VuZ2luZTsKIAogCWVyciA9IGViX3JlbG9jYXRlKCZlYik7CkBAIC0yNjE1LDEw
ICsyNjM5LDkgQEAgaTkxNV9nZW1fZG9fZXhlY2J1ZmZlcihzdHJ1Y3QgZHJtX2RldmljZSAqZGV2
LAogZXJyX3ZtYToKIAlpZiAoZWIuZXhlYykKIAkJZWJfcmVsZWFzZV92bWFzKCZlYik7Ci1lcnJf
ZW5naW5lOgotCWViX3VucGluX2NvbnRleHQoJmViKTsKLWVycl91bmxvY2s6CiAJbXV0ZXhfdW5s
b2NrKCZkZXYtPnN0cnVjdF9tdXRleCk7CitlcnJfZW5naW5lOgorCWViX3VucGluX2VuZ2luZSgm
ZWIpOwogZXJyX2NvbnRleHQ6CiAJaTkxNV9nZW1fY29udGV4dF9wdXQoZWIuZ2VtX2NvbnRleHQp
OwogZXJyX2Rlc3Ryb3k6CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRl
bF9jb250ZXh0LmggYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9jb250ZXh0LmgKaW5k
ZXggM2Y1NGViM2QxMGFiLi4wNzcyZjc3Mzk0YzUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2NvbnRleHQuaAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9jb250ZXh0LmgKQEAgLTEyLDYgKzEyLDcgQEAKICNpbmNsdWRlICJpOTE1X2FjdGl2ZS5o
IgogI2luY2x1ZGUgImludGVsX2NvbnRleHRfdHlwZXMuaCIKICNpbmNsdWRlICJpbnRlbF9lbmdp
bmVfdHlwZXMuaCIKKyNpbmNsdWRlICJpbnRlbF90aW1lbGluZV90eXBlcy5oIgogCiB2b2lkIGlu
dGVsX2NvbnRleHRfaW5pdChzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UsCiAJCQlzdHJ1Y3QgaTkx
NV9nZW1fY29udGV4dCAqY3R4LApAQCAtMTI3LDE3ICsxMjgsMjQgQEAgc3RhdGljIGlubGluZSB2
b2lkIGludGVsX2NvbnRleHRfcHV0KHN0cnVjdCBpbnRlbF9jb250ZXh0ICpjZSkKIAlrcmVmX3B1
dCgmY2UtPnJlZiwgY2UtPm9wcy0+ZGVzdHJveSk7CiB9CiAKLXN0YXRpYyBpbmxpbmUgaW50IF9f
bXVzdF9jaGVjaworc3RhdGljIGlubGluZSBzdHJ1Y3QgaW50ZWxfdGltZWxpbmUgKl9fbXVzdF9j
aGVjawogaW50ZWxfY29udGV4dF90aW1lbGluZV9sb2NrKHN0cnVjdCBpbnRlbF9jb250ZXh0ICpj
ZSkKIAlfX2FjcXVpcmVzKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KQogewotCXJldHVybiBt
dXRleF9sb2NrX2ludGVycnVwdGlibGUoJmNlLT5yaW5nLT50aW1lbGluZS0+bXV0ZXgpOworCXN0
cnVjdCBpbnRlbF90aW1lbGluZSAqdGwgPSBjZS0+cmluZy0+dGltZWxpbmU7CisJaW50IGVycjsK
KworCWVyciA9IG11dGV4X2xvY2tfaW50ZXJydXB0aWJsZSgmdGwtPm11dGV4KTsKKwlpZiAoZXJy
KQorCQlyZXR1cm4gRVJSX1BUUihlcnIpOworCisJcmV0dXJuIHRsOwogfQogCi1zdGF0aWMgaW5s
aW5lIHZvaWQgaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2soc3RydWN0IGludGVsX2NvbnRl
eHQgKmNlKQotCV9fcmVsZWFzZXMoJmNlLT5yaW5nLT50aW1lbGluZS0+bXV0ZXgpCitzdGF0aWMg
aW5saW5lIHZvaWQgaW50ZWxfY29udGV4dF90aW1lbGluZV91bmxvY2soc3RydWN0IGludGVsX3Rp
bWVsaW5lICp0bCkKKwlfX3JlbGVhc2VzKCZ0bC0+bXV0ZXgpCiB7Ci0JbXV0ZXhfdW5sb2NrKCZj
ZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KTsKKwltdXRleF91bmxvY2soJnRsLT5tdXRleCk7CiB9
CiAKIGludCBpbnRlbF9jb250ZXh0X3ByZXBhcmVfcmVtb3RlX3JlcXVlc3Qoc3RydWN0IGludGVs
X2NvbnRleHQgKmNlLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxf
ZW5naW5lX2NzLmMgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfY3MuYwpp
bmRleCAzZWEwYjVkZWJlOTQuLjM2OGVhNTA4NzE3MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUv
ZHJtL2k5MTUvZ3QvaW50ZWxfZW5naW5lX2NzLmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUv
Z3QvaW50ZWxfZW5naW5lX2NzLmMKQEAgLTc0NSw3ICs3NDUsNiBAQCBzdGF0aWMgaW50IG1lYXN1
cmVfYnJlYWRjcnVtYl9kdyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2NzICplbmdpbmUpCiAJCQkJZW5n
aW5lLT5zdGF0dXNfcGFnZS52bWEpKQogCQlnb3RvIG91dF9mcmFtZTsKIAotCUlOSVRfTElTVF9I
RUFEKCZmcmFtZS0+cmluZy5yZXF1ZXN0X2xpc3QpOwogCWZyYW1lLT5yaW5nLnRpbWVsaW5lID0g
JmZyYW1lLT50aW1lbGluZTsKIAlmcmFtZS0+cmluZy52YWRkciA9IGZyYW1lLT5jczsKIAlmcmFt
ZS0+cmluZy5zaXplID0gc2l6ZW9mKGZyYW1lLT5jcyk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dw
dS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaCBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2VuZ2luZV90eXBlcy5oCmluZGV4IDljOTI3ZmE0MDhhYS4uM2M4NDk3MzI3NWFl
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9lbmdpbmVfdHlwZXMuaApAQCAt
NzAsOCArNzAsNiBAQCBzdHJ1Y3QgaW50ZWxfcmluZyB7CiAJdm9pZCAqdmFkZHI7CiAKIAlzdHJ1
Y3QgaW50ZWxfdGltZWxpbmUgKnRpbWVsaW5lOwotCXN0cnVjdCBsaXN0X2hlYWQgcmVxdWVzdF9s
aXN0OwotCXN0cnVjdCBsaXN0X2hlYWQgYWN0aXZlX2xpbms7CiAKIAkvKgogCSAqIEFzIHdlIGhh
dmUgdHdvIHR5cGVzIG9mIHJpbmdzLCBvbmUgZ2xvYmFsIHRvIHRoZSBlbmdpbmUgdXNlZApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYyBiL2RyaXZlcnMvZ3B1
L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKaW5kZXggZGUwZDZhZDVmOTNjLi5mNjYzYzc5NmIyOTkg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0LmMKKysrIGIvZHJp
dmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfZ3QuYwpAQCAtMTQsNyArMTQsNiBAQCB2b2lkIGlu
dGVsX2d0X2luaXRfZWFybHkoc3RydWN0IGludGVsX2d0ICpndCwgc3RydWN0IGRybV9pOTE1X3By
aXZhdGUgKmk5MTUpCiAJZ3QtPmk5MTUgPSBpOTE1OwogCWd0LT51bmNvcmUgPSAmaTkxNS0+dW5j
b3JlOwogCi0JSU5JVF9MSVNUX0hFQUQoJmd0LT5hY3RpdmVfcmluZ3MpOwogCUlOSVRfTElTVF9I
RUFEKCZndC0+Y2xvc2VkX3ZtYSk7CiAKIAlzcGluX2xvY2tfaW5pdCgmZ3QtPmNsb3NlZF9sb2Nr
KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3R5cGVzLmgg
Yi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9pbnRlbF9ndF90eXBlcy5oCmluZGV4IGIxM2Y2M2U1
MjIwMy4uYmZkYWJmNDliMWU3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9ndC9p
bnRlbF9ndF90eXBlcy5oCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX2d0X3R5
cGVzLmgKQEAgLTQ4LDggKzQ4LDYgQEAgc3RydWN0IGludGVsX2d0IHsKIAkJc3RydWN0IGxpc3Rf
aGVhZCBod3NwX2ZyZWVfbGlzdDsKIAl9IHRpbWVsaW5lczsKIAotCXN0cnVjdCBsaXN0X2hlYWQg
YWN0aXZlX3JpbmdzOwotCiAJc3RydWN0IGludGVsX3dha2VyZWYgd2FrZXJlZjsKIAogCXN0cnVj
dCBsaXN0X2hlYWQgY2xvc2VkX3ZtYTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX2xyYy5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfbHJjLmMKaW5k
ZXggNWM3M2I5M2JlNGZiLi4zOWM5YzExNTM2ZDUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2d0L2ludGVsX2xyYy5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVs
X2xyYy5jCkBAIC0xNTc4LDYgKzE1NzgsNyBAQCBzdGF0aWMgdm9pZCBleGVjbGlzdHNfY29udGV4
dF91bnBpbihzdHJ1Y3QgaW50ZWxfY29udGV4dCAqY2UpCiB7CiAJaTkxNV9nZW1fY29udGV4dF91
bnBpbl9od19pZChjZS0+Z2VtX2NvbnRleHQpOwogCWk5MTVfZ2VtX29iamVjdF91bnBpbl9tYXAo
Y2UtPnN0YXRlLT5vYmopOworCWludGVsX3JpbmdfcmVzZXQoY2UtPnJpbmcsIGNlLT5yaW5nLT50
YWlsKTsKIH0KIAogc3RhdGljIHZvaWQKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1
L2d0L2ludGVsX3JpbmdidWZmZXIuYyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L2ludGVsX3Jp
bmdidWZmZXIuYwppbmRleCBkOGVmYjg4ZjMzZjMuLjlkOWJlNWZlZDlmYyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvaW50ZWxfcmluZ2J1ZmZlci5jCisrKyBiL2RyaXZlcnMv
Z3B1L2RybS9pOTE1L2d0L2ludGVsX3JpbmdidWZmZXIuYwpAQCAtMTI3NSw3ICsxMjc1LDcgQEAg
dm9pZCBpbnRlbF9yaW5nX3VucGluKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nKQogCUdFTV9UUkFD
RSgicmluZzolbGx4IHVucGluXG4iLCByaW5nLT50aW1lbGluZS0+ZmVuY2VfY29udGV4dCk7CiAK
IAkvKiBEaXNjYXJkIGFueSB1bnVzZWQgYnl0ZXMgYmV5b25kIHRoYXQgc3VibWl0dGVkIHRvIGh3
LiAqLwotCWludGVsX3JpbmdfcmVzZXQocmluZywgcmluZy0+dGFpbCk7CisJaW50ZWxfcmluZ19y
ZXNldChyaW5nLCByaW5nLT5lbWl0KTsKIAogCWk5MTVfdm1hX3Vuc2V0X2dndHRfd3JpdGUodm1h
KTsKIAlpZiAoaTkxNV92bWFfaXNfbWFwX2FuZF9mZW5jZWFibGUodm1hKSkKQEAgLTEzNDAsNyAr
MTM0MCw2IEBAIGludGVsX2VuZ2luZV9jcmVhdGVfcmluZyhzdHJ1Y3QgaW50ZWxfZW5naW5lX2Nz
ICplbmdpbmUsCiAJCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOwogCiAJa3JlZl9pbml0KCZyaW5n
LT5yZWYpOwotCUlOSVRfTElTVF9IRUFEKCZyaW5nLT5yZXF1ZXN0X2xpc3QpOwogCXJpbmctPnRp
bWVsaW5lID0gaW50ZWxfdGltZWxpbmVfZ2V0KHRpbWVsaW5lKTsKIAogCXJpbmctPnNpemUgPSBz
aXplOwpAQCAtMTg4OCwyMSArMTg4NywyNSBAQCBzdGF0aWMgaW50IHJpbmdfcmVxdWVzdF9hbGxv
YyhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpyZXF1ZXN0KQogCiBzdGF0aWMgbm9pbmxpbmUgaW50IHdh
aXRfZm9yX3NwYWNlKHN0cnVjdCBpbnRlbF9yaW5nICpyaW5nLCB1bnNpZ25lZCBpbnQgYnl0ZXMp
CiB7CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bCA9IHJpbmctPnRpbWVsaW5lOwogCXN0cnVj
dCBpOTE1X3JlcXVlc3QgKnRhcmdldDsKIAlsb25nIHRpbWVvdXQ7CiAKIAlpZiAoaW50ZWxfcmlu
Z191cGRhdGVfc3BhY2UocmluZykgPj0gYnl0ZXMpCiAJCXJldHVybiAwOwogCi0JR0VNX0JVR19P
TihsaXN0X2VtcHR5KCZyaW5nLT5yZXF1ZXN0X2xpc3QpKTsKLQlsaXN0X2Zvcl9lYWNoX2VudHJ5
KHRhcmdldCwgJnJpbmctPnJlcXVlc3RfbGlzdCwgcmluZ19saW5rKSB7CisJR0VNX0JVR19PTihs
aXN0X2VtcHR5KCZ0bC0+cmVxdWVzdHMpKTsKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KHRhcmdldCwg
JnRsLT5yZXF1ZXN0cywgbGluaykgeworCQlpZiAodGFyZ2V0LT5yaW5nICE9IHJpbmcpCisJCQlj
b250aW51ZTsKKwogCQkvKiBXb3VsZCBjb21wbGV0aW9uIG9mIHRoaXMgcmVxdWVzdCBmcmVlIGVu
b3VnaCBzcGFjZT8gKi8KIAkJaWYgKGJ5dGVzIDw9IF9faW50ZWxfcmluZ19zcGFjZSh0YXJnZXQt
PnBvc3RmaXgsCiAJCQkJCQlyaW5nLT5lbWl0LCByaW5nLT5zaXplKSkKIAkJCWJyZWFrOwogCX0K
IAotCWlmIChXQVJOX09OKCZ0YXJnZXQtPnJpbmdfbGluayA9PSAmcmluZy0+cmVxdWVzdF9saXN0
KSkKKwlpZiAoR0VNX1dBUk5fT04oJnRhcmdldC0+bGluayA9PSAmdGwtPnJlcXVlc3RzKSkKIAkJ
cmV0dXJuIC1FTk9TUEM7CiAKIAl0aW1lb3V0ID0gaTkxNV9yZXF1ZXN0X3dhaXQodGFyZ2V0LApk
aWZmIC0tZ2l0IGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYyBiL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5lLmMKaW5kZXggMDQyYjQ1NmNkZTQ5Li40Mjc3
NjY3MmM1OWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2d0L21vY2tfZW5naW5l
LmMKKysrIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZ3QvbW9ja19lbmdpbmUuYwpAQCAtNjgsNyAr
NjgsNiBAQCBzdGF0aWMgc3RydWN0IGludGVsX3JpbmcgKm1vY2tfcmluZyhzdHJ1Y3QgaW50ZWxf
ZW5naW5lX2NzICplbmdpbmUpCiAJcmluZy0+YmFzZS50aW1lbGluZSA9ICZyaW5nLT50aW1lbGlu
ZTsKIAlhdG9taWNfc2V0KCZyaW5nLT5iYXNlLnBpbl9jb3VudCwgMSk7CiAKLQlJTklUX0xJU1Rf
SEVBRCgmcmluZy0+YmFzZS5yZXF1ZXN0X2xpc3QpOwogCWludGVsX3JpbmdfdXBkYXRlX3NwYWNl
KCZyaW5nLT5iYXNlKTsKIAogCXJldHVybiAmcmluZy0+YmFzZTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkx
NV9yZXF1ZXN0LmMKaW5kZXggOGFjN2QxNGVjOGM5Li45MjMxM2E1OTU2M2MgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5jCisrKyBiL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2k5MTVfcmVxdWVzdC5jCkBAIC0xODAsNDAgKzE4MCw2IEBAIGk5MTVfcmVxdWVzdF9y
ZW1vdmVfZnJvbV9jbGllbnQoc3RydWN0IGk5MTVfcmVxdWVzdCAqcmVxdWVzdCkKIAlzcGluX3Vu
bG9jaygmZmlsZV9wcml2LT5tbS5sb2NrKTsKIH0KIAotc3RhdGljIHZvaWQgYWR2YW5jZV9yaW5n
KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJlcXVlc3QpCi17Ci0Jc3RydWN0IGludGVsX3JpbmcgKnJp
bmcgPSByZXF1ZXN0LT5yaW5nOwotCXVuc2lnbmVkIGludCB0YWlsOwotCi0JLyoKLQkgKiBXZSBr
bm93IHRoZSBHUFUgbXVzdCBoYXZlIHJlYWQgdGhlIHJlcXVlc3QgdG8gaGF2ZQotCSAqIHNlbnQg
dXMgdGhlIHNlcW5vICsgaW50ZXJydXB0LCBzbyB1c2UgdGhlIHBvc2l0aW9uCi0JICogb2YgdGFp
bCBvZiB0aGUgcmVxdWVzdCB0byB1cGRhdGUgdGhlIGxhc3Qga25vd24gcG9zaXRpb24KLQkgKiBv
ZiB0aGUgR1BVIGhlYWQuCi0JICoKLQkgKiBOb3RlIHRoaXMgcmVxdWlyZXMgdGhhdCB3ZSBhcmUg
YWx3YXlzIGNhbGxlZCBpbiByZXF1ZXN0Ci0JICogY29tcGxldGlvbiBvcmRlci4KLQkgKi8KLQlH
RU1fQlVHX09OKCFsaXN0X2lzX2ZpcnN0KCZyZXF1ZXN0LT5yaW5nX2xpbmssICZyaW5nLT5yZXF1
ZXN0X2xpc3QpKTsKLQlpZiAobGlzdF9pc19sYXN0KCZyZXF1ZXN0LT5yaW5nX2xpbmssICZyaW5n
LT5yZXF1ZXN0X2xpc3QpKSB7Ci0JCS8qCi0JCSAqIFdlIG1heSByYWNlIGhlcmUgd2l0aCBleGVj
bGlzdHMgcmVzdWJtaXR0aW5nIHRoaXMgcmVxdWVzdAotCQkgKiBhcyB3ZSByZXRpcmUgaXQuIFRo
ZSByZXN1Ym1pc3Npb24gd2lsbCBtb3ZlIHRoZSByaW5nLT50YWlsCi0JCSAqIGZvcndhcmRzICh0
byByZXF1ZXN0LT53YV90YWlsKS4gV2UgZWl0aGVyIHJlYWQgdGhlCi0JCSAqIGN1cnJlbnQgdmFs
dWUgdGhhdCB3YXMgd3JpdHRlbiB0byBodywgb3IgdGhlIHZhbHVlIHRoYXQKLQkJICogaXMganVz
dCBhYm91dCB0byBiZS4gRWl0aGVyIHdvcmtzLCBpZiB3ZSBtaXNzIHRoZSBsYXN0IHR3bwotCQkg
KiBub29wcyAtIHRoZXkgYXJlIHNhZmUgdG8gYmUgcmVwbGF5ZWQgb24gYSByZXNldC4KLQkJICov
Ci0JCXRhaWwgPSBSRUFEX09OQ0UocmVxdWVzdC0+dGFpbCk7Ci0JCWxpc3RfZGVsKCZyaW5nLT5h
Y3RpdmVfbGluayk7Ci0JfSBlbHNlIHsKLQkJdGFpbCA9IHJlcXVlc3QtPnBvc3RmaXg7Ci0JfQot
CWxpc3RfZGVsX2luaXQoJnJlcXVlc3QtPnJpbmdfbGluayk7Ci0KLQlyaW5nLT5oZWFkID0gdGFp
bDsKLX0KLQogc3RhdGljIHZvaWQgZnJlZV9jYXB0dXJlX2xpc3Qoc3RydWN0IGk5MTVfcmVxdWVz
dCAqcmVxdWVzdCkKIHsKIAlzdHJ1Y3QgaTkxNV9jYXB0dXJlX2xpc3QgKmNhcHR1cmU7CkBAIC0y
MzEsNyArMTk3LDcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkx
NV9yZXF1ZXN0ICpycSkKIHsKIAlzdHJ1Y3QgaTkxNV9hY3RpdmVfcmVxdWVzdCAqYWN0aXZlLCAq
bmV4dDsKIAotCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnJxLT5pOTE1LT5kcm0uc3RydWN0X211dGV4
KTsKKwlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11dGV4KTsKIAlpZiAoIWk5
MTVfcmVxdWVzdF9jb21wbGV0ZWQocnEpKQogCQlyZXR1cm4gZmFsc2U7CiAKQEAgLTI0Myw3ICsy
MDksMTcgQEAgc3RhdGljIGJvb2wgaTkxNV9yZXF1ZXN0X3JldGlyZShzdHJ1Y3QgaTkxNV9yZXF1
ZXN0ICpycSkKIAlHRU1fQlVHX09OKCFpOTE1X3N3X2ZlbmNlX3NpZ25hbGVkKCZycS0+c3VibWl0
KSk7CiAJdHJhY2VfaTkxNV9yZXF1ZXN0X3JldGlyZShycSk7CiAKLQlhZHZhbmNlX3JpbmcocnEp
OworCS8qCisJICogV2Uga25vdyB0aGUgR1BVIG11c3QgaGF2ZSByZWFkIHRoZSByZXF1ZXN0IHRv
IGhhdmUKKwkgKiBzZW50IHVzIHRoZSBzZXFubyArIGludGVycnVwdCwgc28gdXNlIHRoZSBwb3Np
dGlvbgorCSAqIG9mIHRhaWwgb2YgdGhlIHJlcXVlc3QgdG8gdXBkYXRlIHRoZSBsYXN0IGtub3du
IHBvc2l0aW9uCisJICogb2YgdGhlIEdQVSBoZWFkLgorCSAqCisJICogTm90ZSB0aGlzIHJlcXVp
cmVzIHRoYXQgd2UgYXJlIGFsd2F5cyBjYWxsZWQgaW4gcmVxdWVzdAorCSAqIGNvbXBsZXRpb24g
b3JkZXIuCisJICovCisJR0VNX0JVR19PTighbGlzdF9pc19maXJzdCgmcnEtPmxpbmssICZycS0+
dGltZWxpbmUtPnJlcXVlc3RzKSk7CisJcnEtPnJpbmctPmhlYWQgPSBycS0+cG9zdGZpeDsKIAog
CS8qCiAJICogV2FsayB0aHJvdWdoIHRoZSBhY3RpdmUgbGlzdCwgY2FsbGluZyByZXRpcmUgb24g
ZWFjaC4gVGhpcyBhbGxvd3MKQEAgLTMyMCw3ICsyOTYsNyBAQCBzdGF0aWMgYm9vbCBpOTE1X3Jl
cXVlc3RfcmV0aXJlKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogCiB2b2lkIGk5MTVfcmVxdWVz
dF9yZXRpcmVfdXB0byhzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIHsKLQlzdHJ1Y3QgaW50ZWxf
cmluZyAqcmluZyA9IHJxLT5yaW5nOworCXN0cnVjdCBpbnRlbF90aW1lbGluZSAqIGNvbnN0IHRs
ID0gcnEtPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnRtcDsKIAogCUdFTV9UUkFD
RSgiJXMgZmVuY2UgJWxseDolbGxkLCBjdXJyZW50ICVkXG4iLApAQCAtMzI4LDE1ICszMDQsMTEg
QEAgdm9pZCBpOTE1X3JlcXVlc3RfcmV0aXJlX3VwdG8oc3RydWN0IGk5MTVfcmVxdWVzdCAqcnEp
CiAJCSAgcnEtPmZlbmNlLmNvbnRleHQsIHJxLT5mZW5jZS5zZXFubywKIAkJICBod3NwX3NlcW5v
KHJxKSk7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+aTkxNS0+ZHJtLnN0cnVjdF9tdXRl
eCk7CisJbG9ja2RlcF9hc3NlcnRfaGVsZCgmdGwtPm11dGV4KTsKIAlHRU1fQlVHX09OKCFpOTE1
X3JlcXVlc3RfY29tcGxldGVkKHJxKSk7CiAKLQlpZiAobGlzdF9lbXB0eSgmcnEtPnJpbmdfbGlu
aykpCi0JCXJldHVybjsKLQogCWRvIHsKLQkJdG1wID0gbGlzdF9maXJzdF9lbnRyeSgmcmluZy0+
cmVxdWVzdF9saXN0LAotCQkJCSAgICAgICB0eXBlb2YoKnRtcCksIHJpbmdfbGluayk7CisJCXRt
cCA9IGxpc3RfZmlyc3RfZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCp0bXApLCBsaW5rKTsK
IAl9IHdoaWxlIChpOTE1X3JlcXVlc3RfcmV0aXJlKHRtcCkgJiYgdG1wICE9IHJxKTsKIH0KIApA
QCAtNTYzLDI5ICs1MzUsMjggQEAgc2VtYXBob3JlX25vdGlmeShzdHJ1Y3QgaTkxNV9zd19mZW5j
ZSAqZmVuY2UsIGVudW0gaTkxNV9zd19mZW5jZV9ub3RpZnkgc3RhdGUpCiAJcmV0dXJuIE5PVElG
WV9ET05FOwogfQogCi1zdGF0aWMgdm9pZCByaW5nX3JldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50
ZWxfcmluZyAqcmluZykKK3N0YXRpYyB2b2lkIHJldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgaW50ZWxf
dGltZWxpbmUgKnRsKQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCAqcm47CiAKLQlsaXN0
X2Zvcl9lYWNoX2VudHJ5X3NhZmUocnEsIHJuLCAmcmluZy0+cmVxdWVzdF9saXN0LCByaW5nX2xp
bmspCisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHJxLCBybiwgJnRsLT5yZXF1ZXN0cywgbGlu
aykKIAkJaWYgKCFpOTE1X3JlcXVlc3RfcmV0aXJlKHJxKSkKIAkJCWJyZWFrOwogfQogCiBzdGF0
aWMgbm9pbmxpbmUgc3RydWN0IGk5MTVfcmVxdWVzdCAqCi1yZXF1ZXN0X2FsbG9jX3Nsb3coc3Ry
dWN0IGludGVsX2NvbnRleHQgKmNlLCBnZnBfdCBnZnApCityZXF1ZXN0X2FsbG9jX3Nsb3coc3Ry
dWN0IGludGVsX3RpbWVsaW5lICp0bCwgZ2ZwX3QgZ2ZwKQogewotCXN0cnVjdCBpbnRlbF9yaW5n
ICpyaW5nID0gY2UtPnJpbmc7CiAJc3RydWN0IGk5MTVfcmVxdWVzdCAqcnE7CiAKLQlpZiAobGlz
dF9lbXB0eSgmcmluZy0+cmVxdWVzdF9saXN0KSkKKwlpZiAobGlzdF9lbXB0eSgmdGwtPnJlcXVl
c3RzKSkKIAkJZ290byBvdXQ7CiAKIAlpZiAoIWdmcGZsYWdzX2FsbG93X2Jsb2NraW5nKGdmcCkp
CiAJCWdvdG8gb3V0OwogCiAJLyogTW92ZSBvdXIgb2xkZXN0IHJlcXVlc3QgdG8gdGhlIHNsYWIt
Y2FjaGUgKGlmIG5vdCBpbiB1c2UhKSAqLwotCXJxID0gbGlzdF9maXJzdF9lbnRyeSgmcmluZy0+
cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKKwlycSA9IGxpc3RfZmlyc3Rf
ZW50cnkoJnRsLT5yZXF1ZXN0cywgdHlwZW9mKCpycSksIGxpbmspOwogCWk5MTVfcmVxdWVzdF9y
ZXRpcmUocnEpOwogCiAJcnEgPSBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3Rz
LApAQCAtNTk0LDExICs1NjUsMTEgQEAgcmVxdWVzdF9hbGxvY19zbG93KHN0cnVjdCBpbnRlbF9j
b250ZXh0ICpjZSwgZ2ZwX3QgZ2ZwKQogCQlyZXR1cm4gcnE7CiAKIAkvKiBSYXRlbGltaXQgb3Vy
c2VsdmVzIHRvIHByZXZlbnQgb29tIGZyb20gbWFsaWNpb3VzIGNsaWVudHMgKi8KLQlycSA9IGxp
c3RfbGFzdF9lbnRyeSgmcmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5r
KTsKKwlycSA9IGxpc3RfbGFzdF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnJxKSwgbGlu
ayk7CiAJY29uZF9zeW5jaHJvbml6ZV9yY3UocnEtPnJjdXN0YXRlKTsKIAogCS8qIFJldGlyZSBv
dXIgb2xkIHJlcXVlc3RzIGluIHRoZSBob3BlIHRoYXQgd2UgZnJlZSBzb21lICovCi0JcmluZ19y
ZXRpcmVfcmVxdWVzdHMocmluZyk7CisJcmV0aXJlX3JlcXVlc3RzKHRsKTsKIAogb3V0OgogCXJl
dHVybiBrbWVtX2NhY2hlX2FsbG9jKGdsb2JhbC5zbGFiX3JlcXVlc3RzLCBnZnApOwpAQCAtNjQ5
LDcgKzYyMCw3IEBAIF9faTkxNV9yZXF1ZXN0X2NyZWF0ZShzdHJ1Y3QgaW50ZWxfY29udGV4dCAq
Y2UsIGdmcF90IGdmcCkKIAlycSA9IGttZW1fY2FjaGVfYWxsb2MoZ2xvYmFsLnNsYWJfcmVxdWVz
dHMsCiAJCQkgICAgICBnZnAgfCBfX0dGUF9SRVRSWV9NQVlGQUlMIHwgX19HRlBfTk9XQVJOKTsK
IAlpZiAodW5saWtlbHkoIXJxKSkgewotCQlycSA9IHJlcXVlc3RfYWxsb2Nfc2xvdyhjZSwgZ2Zw
KTsKKwkJcnEgPSByZXF1ZXN0X2FsbG9jX3Nsb3codGwsIGdmcCk7CiAJCWlmICghcnEpIHsKIAkJ
CXJldCA9IC1FTk9NRU07CiAJCQlnb3RvIGVycl91bnJlc2VydmU7CkBAIC03NDEsMTUgKzcxMiwx
NSBAQCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICoKIGk5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGlu
dGVsX2NvbnRleHQgKmNlKQogewogCXN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxOwotCWludCBlcnI7
CisJc3RydWN0IGludGVsX3RpbWVsaW5lICp0bDsKIAotCWVyciA9IGludGVsX2NvbnRleHRfdGlt
ZWxpbmVfbG9jayhjZSk7Ci0JaWYgKGVycikKLQkJcmV0dXJuIEVSUl9QVFIoZXJyKTsKKwl0bCA9
IGludGVsX2NvbnRleHRfdGltZWxpbmVfbG9jayhjZSk7CisJaWYgKElTX0VSUih0bCkpCisJCXJl
dHVybiBFUlJfQ0FTVCh0bCk7CiAKIAkvKiBNb3ZlIG91ciBvbGRlc3QgcmVxdWVzdCB0byB0aGUg
c2xhYi1jYWNoZSAoaWYgbm90IGluIHVzZSEpICovCi0JcnEgPSBsaXN0X2ZpcnN0X2VudHJ5KCZj
ZS0+cmluZy0+cmVxdWVzdF9saXN0LCB0eXBlb2YoKnJxKSwgcmluZ19saW5rKTsKLQlpZiAoIWxp
c3RfaXNfbGFzdCgmcnEtPnJpbmdfbGluaywgJmNlLT5yaW5nLT5yZXF1ZXN0X2xpc3QpKQorCXJx
ID0gbGlzdF9maXJzdF9lbnRyeSgmdGwtPnJlcXVlc3RzLCB0eXBlb2YoKnJxKSwgbGluayk7CisJ
aWYgKCFsaXN0X2lzX2xhc3QoJnJxLT5saW5rLCAmdGwtPnJlcXVlc3RzKSkKIAkJaTkxNV9yZXF1
ZXN0X3JldGlyZShycSk7CiAKIAlpbnRlbF9jb250ZXh0X2VudGVyKGNlKTsKQEAgLTc1OSwyMiAr
NzMwLDIyIEBAIGk5MTVfcmVxdWVzdF9jcmVhdGUoc3RydWN0IGludGVsX2NvbnRleHQgKmNlKQog
CQlnb3RvIGVycl91bmxvY2s7CiAKIAkvKiBDaGVjayB0aGF0IHdlIGRvIG5vdCBpbnRlcnJ1cHQg
b3Vyc2VsdmVzIHdpdGggYSBuZXcgcmVxdWVzdCAqLwotCXJxLT5jb29raWUgPSBsb2NrZGVwX3Bp
bl9sb2NrKCZjZS0+cmluZy0+dGltZWxpbmUtPm11dGV4KTsKKwlycS0+Y29va2llID0gbG9ja2Rl
cF9waW5fbG9jaygmdGwtPm11dGV4KTsKIAogCXJldHVybiBycTsKIAogZXJyX3VubG9jazoKLQlp
bnRlbF9jb250ZXh0X3RpbWVsaW5lX3VubG9jayhjZSk7CisJaW50ZWxfY29udGV4dF90aW1lbGlu
ZV91bmxvY2sodGwpOwogCXJldHVybiBycTsKIH0KIAogc3RhdGljIGludAogaTkxNV9yZXF1ZXN0
X2F3YWl0X3N0YXJ0KHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxLCBzdHJ1Y3QgaTkxNV9yZXF1ZXN0
ICpzaWduYWwpCiB7Ci0JaWYgKGxpc3RfaXNfZmlyc3QoJnNpZ25hbC0+cmluZ19saW5rLCAmc2ln
bmFsLT5yaW5nLT5yZXF1ZXN0X2xpc3QpKQorCWlmIChsaXN0X2lzX2ZpcnN0KCZzaWduYWwtPmxp
bmssICZzaWduYWwtPnJpbmctPnRpbWVsaW5lLT5yZXF1ZXN0cykpCiAJCXJldHVybiAwOwogCi0J
c2lnbmFsID0gbGlzdF9wcmV2X2VudHJ5KHNpZ25hbCwgcmluZ19saW5rKTsKKwlzaWduYWwgPSBs
aXN0X3ByZXZfZW50cnkoc2lnbmFsLCBsaW5rKTsKIAlpZiAoaW50ZWxfdGltZWxpbmVfc3luY19p
c19sYXRlcihycS0+dGltZWxpbmUsICZzaWduYWwtPmZlbmNlKSkKIAkJcmV0dXJuIDA7CiAKQEAg
LTExNjcsNiArMTEzOCw3IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgKl9faTkxNV9yZXF1ZXN0X2Nv
bW1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAkgKi8KIAlHRU1fQlVHX09OKHJxLT5yZXNl
cnZlZF9zcGFjZSA+IHJpbmctPnNwYWNlKTsKIAlycS0+cmVzZXJ2ZWRfc3BhY2UgPSAwOworCXJx
LT5lbWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwogCiAJLyoKIAkgKiBSZWNvcmQgdGhlIHBvc2l0
aW9uIG9mIHRoZSBzdGFydCBvZiB0aGUgYnJlYWRjcnVtYiBzbyB0aGF0CkBAIC0xMTgwLDExICsx
MTUyLDYgQEAgc3RydWN0IGk5MTVfcmVxdWVzdCAqX19pOTE1X3JlcXVlc3RfY29tbWl0KHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCiAJcHJldiA9IF9faTkxNV9yZXF1ZXN0X2FkZF90b190aW1l
bGluZShycSk7CiAKLQlsaXN0X2FkZF90YWlsKCZycS0+cmluZ19saW5rLCAmcmluZy0+cmVxdWVz
dF9saXN0KTsKLQlpZiAobGlzdF9pc19maXJzdCgmcnEtPnJpbmdfbGluaywgJnJpbmctPnJlcXVl
c3RfbGlzdCkpCi0JCWxpc3RfYWRkKCZyaW5nLT5hY3RpdmVfbGluaywgJnJxLT5pOTE1LT5ndC5h
Y3RpdmVfcmluZ3MpOwotCXJxLT5lbWl0dGVkX2ppZmZpZXMgPSBqaWZmaWVzOwotCiAJLyoKIAkg
KiBMZXQgdGhlIGJhY2tlbmQga25vdyBhIG5ldyByZXF1ZXN0IGhhcyBhcnJpdmVkIHRoYXQgbWF5
IG5lZWQKIAkgKiB0byBhZGp1c3QgdGhlIGV4aXN0aW5nIGV4ZWN1dGlvbiBzY2hlZHVsZSBkdWUg
dG8gYSBoaWdoIHByaW9yaXR5CkBAIC0xMjM3LDEwICsxMjA0LDExIEBAIHN0cnVjdCBpOTE1X3Jl
cXVlc3QgKl9faTkxNV9yZXF1ZXN0X2NvbW1pdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSkKIAog
dm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVjdCBpOTE1X3JlcXVlc3QgKnJxKQogeworCXN0cnVj
dCBpbnRlbF90aW1lbGluZSAqIGNvbnN0IHRsID0gcnEtPnRpbWVsaW5lOwogCXN0cnVjdCBpOTE1
X3JlcXVlc3QgKnByZXY7CiAKLQlsb2NrZGVwX2Fzc2VydF9oZWxkKCZycS0+dGltZWxpbmUtPm11
dGV4KTsKLQlsb2NrZGVwX3VucGluX2xvY2soJnJxLT50aW1lbGluZS0+bXV0ZXgsIHJxLT5jb29r
aWUpOworCWxvY2tkZXBfYXNzZXJ0X2hlbGQoJnRsLT5tdXRleCk7CisJbG9ja2RlcF91bnBpbl9s
b2NrKCZ0bC0+bXV0ZXgsIHJxLT5jb29raWUpOwogCiAJdHJhY2VfaTkxNV9yZXF1ZXN0X2FkZChy
cSk7CiAKQEAgLTEyNjMsMTAgKzEyMzEsMTAgQEAgdm9pZCBpOTE1X3JlcXVlc3RfYWRkKHN0cnVj
dCBpOTE1X3JlcXVlc3QgKnJxKQogCSAqIHdvcmsgb24gYmVoYWxmIG9mIG90aGVycyAtLSBidXQg
aW5zdGVhZCB3ZSBzaG91bGQgYmVuZWZpdCBmcm9tCiAJICogaW1wcm92ZWQgcmVzb3VyY2UgbWFu
YWdlbWVudC4gKFdlbGwsIHRoYXQncyB0aGUgdGhlb3J5IGF0IGxlYXN0LikKIAkgKi8KLQlpZiAo
cHJldiAmJiBpOTE1X3JlcXVlc3RfY29tcGxldGVkKHByZXYpKQorCWlmIChwcmV2ICYmIGk5MTVf
cmVxdWVzdF9jb21wbGV0ZWQocHJldikgJiYgcHJldi0+dGltZWxpbmUgPT0gdGwpCiAJCWk5MTVf
cmVxdWVzdF9yZXRpcmVfdXB0byhwcmV2KTsKIAotCW11dGV4X3VubG9jaygmcnEtPnRpbWVsaW5l
LT5tdXRleCk7CisJbXV0ZXhfdW5sb2NrKCZ0bC0+bXV0ZXgpOwogfQogCiBzdGF0aWMgdW5zaWdu
ZWQgbG9uZyBsb2NhbF9jbG9ja191cyh1bnNpZ25lZCBpbnQgKmNwdSkKQEAgLTE0ODYsMTggKzE0
NTQsNDMgQEAgbG9uZyBpOTE1X3JlcXVlc3Rfd2FpdChzdHJ1Y3QgaTkxNV9yZXF1ZXN0ICpycSwK
IAogYm9vbCBpOTE1X3JldGlyZV9yZXF1ZXN0cyhzdHJ1Y3QgZHJtX2k5MTVfcHJpdmF0ZSAqaTkx
NSkKIHsKLQlzdHJ1Y3QgaW50ZWxfcmluZyAqcmluZywgKnRtcDsKKwlzdHJ1Y3QgaW50ZWxfZ3Rf
dGltZWxpbmVzICp0aW1lbGluZXMgPSAmaTkxNS0+Z3QudGltZWxpbmVzOworCXN0cnVjdCBpbnRl
bF90aW1lbGluZSAqdGwsICp0bjsKKwlMSVNUX0hFQUQoZnJlZSk7CisKKwlzcGluX2xvY2soJnRp
bWVsaW5lcy0+bG9jayk7CisJbGlzdF9mb3JfZWFjaF9lbnRyeV9zYWZlKHRsLCB0biwgJnRpbWVs
aW5lcy0+YWN0aXZlX2xpc3QsIGxpbmspIHsKKwkJaWYgKCFtdXRleF90cnlsb2NrKCZ0bC0+bXV0
ZXgpKQorCQkJY29udGludWU7CisKKwkJaW50ZWxfdGltZWxpbmVfZ2V0KHRsKTsKKwkJR0VNX0JV
R19PTighdGwtPmFjdGl2ZV9jb3VudCk7CisJCXRsLT5hY3RpdmVfY291bnQrKzsgLyogcGluIHRo
ZSBsaXN0IGVsZW1lbnQgKi8KKwkJc3Bpbl91bmxvY2soJnRpbWVsaW5lcy0+bG9jayk7CiAKLQls
b2NrZGVwX2Fzc2VydF9oZWxkKCZpOTE1LT5kcm0uc3RydWN0X211dGV4KTsKKwkJcmV0aXJlX3Jl
cXVlc3RzKHRsKTsKIAotCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZShyaW5nLCB0bXAsCi0JCQkJ
ICZpOTE1LT5ndC5hY3RpdmVfcmluZ3MsIGFjdGl2ZV9saW5rKSB7Ci0JCWludGVsX3JpbmdfZ2V0
KHJpbmcpOyAvKiBsYXN0IHJxIGhvbGRzIHJlZmVyZW5jZSEgKi8KLQkJcmluZ19yZXRpcmVfcmVx
dWVzdHMocmluZyk7Ci0JCWludGVsX3JpbmdfcHV0KHJpbmcpOworCQlzcGluX2xvY2soJnRpbWVs
aW5lcy0+bG9jayk7CisKKwkJLyogUmVzdGFydCBpdGVyYXRpb24gYWZ0ZXIgZHJvcHBpbmcgbG9j
ayAqLworCQlsaXN0X3NhZmVfcmVzZXRfbmV4dCh0bCwgdG4sIGxpbmspOworCQlpZiAoIS0tdGwt
PmFjdGl2ZV9jb3VudCkKKwkJCWxpc3RfZGVsKCZ0bC0+bGluayk7CisKKwkJbXV0ZXhfdW5sb2Nr
KCZ0bC0+bXV0ZXgpOworCisJCS8qIERlZmVyIHRoZSBmaW5hbCByZWxlYXNlIHRvIGFmdGVyIHRo
ZSBzcGlubG9jayAqLworCQlpZiAocmVmY291bnRfZGVjX2FuZF90ZXN0KCZ0bC0+a3JlZi5yZWZj
b3VudCkpIHsKKwkJCUdFTV9CVUdfT04odGwtPmFjdGl2ZV9jb3VudCk7CisJCQlsaXN0X2FkZCgm
dGwtPmxpbmssICZmcmVlKTsKKwkJfQogCX0KKwlzcGluX3VubG9jaygmdGltZWxpbmVzLT5sb2Nr
KTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnlfc2FmZSh0bCwgdG4sICZmcmVlLCBsaW5rKQorCQlf
X2ludGVsX3RpbWVsaW5lX2ZyZWUoJnRsLT5rcmVmKTsKIAotCXJldHVybiAhbGlzdF9lbXB0eSgm
aTkxNS0+Z3QuYWN0aXZlX3JpbmdzKTsKKwlyZXR1cm4gIWxpc3RfZW1wdHkoJnRpbWVsaW5lcy0+
YWN0aXZlX2xpc3QpOwogfQogCiAjaWYgSVNfRU5BQkxFRChDT05GSUdfRFJNX0k5MTVfU0VMRlRF
U1QpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaCBiL2Ry
aXZlcnMvZ3B1L2RybS9pOTE1L2k5MTVfcmVxdWVzdC5oCmluZGV4IDMxM2RmM2MzNzE1OC4uMjJl
NTA2ZTk2MGUwIDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3Qu
aAorKysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X3JlcXVlc3QuaApAQCAtMjIzLDkgKzIy
Myw2IEBAIHN0cnVjdCBpOTE1X3JlcXVlc3QgewogCS8qKiB0aW1lbGluZS0+cmVxdWVzdCBlbnRy
eSBmb3IgdGhpcyByZXF1ZXN0ICovCiAJc3RydWN0IGxpc3RfaGVhZCBsaW5rOwogCi0JLyoqIHJp
bmctPnJlcXVlc3RfbGlzdCBlbnRyeSBmb3IgdGhpcyByZXF1ZXN0ICovCi0Jc3RydWN0IGxpc3Rf
aGVhZCByaW5nX2xpbms7Ci0KIAlzdHJ1Y3QgZHJtX2k5MTVfZmlsZV9wcml2YXRlICpmaWxlX3By
aXY7CiAJLyoqIGZpbGVfcHJpdiBsaXN0IGVudHJ5IGZvciB0aGlzIHJlcXVlc3QgKi8KIAlzdHJ1
Y3QgbGlzdF9oZWFkIGNsaWVudF9saW5rOwotLSAKMi4yMi4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpJbnRlbC1nZnggbWFpbGluZyBsaXN0CkludGVs
LWdmeEBsaXN0cy5mcmVlZGVza3RvcC5vcmcKaHR0cHM6Ly9saXN0cy5mcmVlZGVza3RvcC5vcmcv
bWFpbG1hbi9saXN0aW5mby9pbnRlbC1nZng=

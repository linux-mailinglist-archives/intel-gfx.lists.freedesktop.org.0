Return-Path: <intel-gfx-bounces@lists.freedesktop.org>
X-Original-To: lists+intel-gfx@lfdr.de
Delivered-To: lists+intel-gfx@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [IPv6:2610:10:20:722:a800:ff:fe36:1795])
	by mail.lfdr.de (Postfix) with ESMTPS id 2B0B729CCBE
	for <lists+intel-gfx@lfdr.de>; Wed, 28 Oct 2020 00:46:00 +0100 (CET)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 8C6576E408;
	Tue, 27 Oct 2020 23:45:58 +0000 (UTC)
X-Original-To: intel-gfx@lists.freedesktop.org
Delivered-To: intel-gfx@lists.freedesktop.org
Received: from mga11.intel.com (mga11.intel.com [192.55.52.93])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 286396E405
 for <intel-gfx@lists.freedesktop.org>; Tue, 27 Oct 2020 23:45:50 +0000 (UTC)
IronPort-SDR: HKBLrCsGYQyAicyl6xYBzkYHKKyPtG/i0NDiMj5mLT7HKRCvnV5C1CHfbrbSByf8HbYois/0aT
 sN4xg3OIF/og==
X-IronPort-AV: E=McAfee;i="6000,8403,9787"; a="164680893"
X-IronPort-AV: E=Sophos;i="5.77,424,1596524400"; d="scan'208";a="164680893"
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 27 Oct 2020 16:45:49 -0700
IronPort-SDR: EJ8rLGFLbsk0ZOuBhyHj468a6ty5uIiRZRVgJA0taj9SRy3VayD7yKVr5uANviwjQ2GHrH+keO
 oX8vVyMJeOrQ==
X-IronPort-AV: E=Sophos;i="5.77,424,1596524400"; d="scan'208";a="355729363"
Received: from josouza-mobl2.jf.intel.com (HELO josouza-mobl2.intel.com)
 ([10.24.14.55])
 by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 27 Oct 2020 16:45:49 -0700
From: =?UTF-8?q?Jos=C3=A9=20Roberto=20de=20Souza?= <jose.souza@intel.com>
To: intel-gfx@lists.freedesktop.org
Date: Tue, 27 Oct 2020 16:45:24 -0700
Message-Id: <20201027234526.33043-4-jose.souza@intel.com>
X-Mailer: git-send-email 2.29.1
In-Reply-To: <20201027234526.33043-1-jose.souza@intel.com>
References: <20201027234526.33043-1-jose.souza@intel.com>
MIME-Version: 1.0
Subject: [Intel-gfx] [PATCH v2 4/6] drm/i915/display: Split and export main
 surface calculation from skl_check_main_surface()
X-BeenThere: intel-gfx@lists.freedesktop.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Intel graphics driver community testing & development
 <intel-gfx.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/intel-gfx>
List-Post: <mailto:intel-gfx@lists.freedesktop.org>
List-Help: <mailto:intel-gfx-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/intel-gfx>,
 <mailto:intel-gfx-request@lists.freedesktop.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: intel-gfx-bounces@lists.freedesktop.org
Sender: "Intel-gfx" <intel-gfx-bounces@lists.freedesktop.org>

VGhlIGNhbGN1bGF0aW9uIHRoZSBvZmZzZXRzIG9mIHRoZSBtYWluIHN1cmZhY2Ugd2lsbCBiZSBu
ZWVkZWQgYnkgUFNSMgpzZWxlY3RpdmUgZmV0Y2ggY29kZSBzbyBoZXJlIHNwbGl0dGluZyBhbmQg
ZXhwb3J0aW5nIGl0LgpObyBmdW5jdGlvbmFsIGNoYW5nZXMgd2VyZSBkb25lIGhlcmUuCgpDYzog
R3dhbi1neWVvbmcgTXVuIDxnd2FuLWd5ZW9uZy5tdW5AaW50ZWwuY29tPgpDYzogVmlsbGUgU3ly
asOkbMOkIDx2aWxsZS5zeXJqYWxhQGxpbnV4LmludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogSm9z
w6kgUm9iZXJ0byBkZSBTb3V6YSA8am9zZS5zb3V6YUBpbnRlbC5jb20+Ci0tLQogZHJpdmVycy9n
cHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMgfCA5NSArKysrKysrKysrKystLS0t
LS0tLQogZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmggfCAgMiAr
CiAyIGZpbGVzIGNoYW5nZWQsIDU5IGluc2VydGlvbnMoKyksIDM4IGRlbGV0aW9ucygtKQoKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5jIGIv
ZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlzcGxheS9pbnRlbF9kaXNwbGF5LmMKaW5kZXggZjQxYjZm
OGI1NjE4Li40NjBmOWMxN2VlYTMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rp
c3BsYXkvaW50ZWxfZGlzcGxheS5jCisrKyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkv
aW50ZWxfZGlzcGxheS5jCkBAIC0zODk3LDYgKzM4OTcsNTYgQEAgaW50ZWxfcGxhbmVfZmVuY2Vf
eV9vZmZzZXQoY29uc3Qgc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSkKIAly
ZXR1cm4geTsKIH0KIAoraW50IHNrbF9jYWxjX21haW5fc3VyZmFjZV9vZmZzZXQoY29uc3Qgc3Ry
dWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0ZSwKKwkJCQkgaW50ICp4LCBpbnQgKnks
IHUzMiAqb2Zmc2V0KQoreworCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUocGxhbmVfc3RhdGUtPnVhcGkucGxhbmUtPmRldik7CisJY29uc3Qgc3RydWN0IGRybV9m
cmFtZWJ1ZmZlciAqZmIgPSBwbGFuZV9zdGF0ZS0+aHcuZmI7CisJY29uc3QgaW50IGF1eF9wbGFu
ZSA9IGludGVsX21haW5fdG9fYXV4X3BsYW5lKGZiLCAwKTsKKwljb25zdCB1MzIgYXV4X29mZnNl
dCA9IHBsYW5lX3N0YXRlLT5jb2xvcl9wbGFuZVthdXhfcGxhbmVdLm9mZnNldDsKKwljb25zdCB1
MzIgYWxpZ25tZW50ID0gaW50ZWxfc3VyZl9hbGlnbm1lbnQoZmIsIDApOworCWNvbnN0IGludCB3
ID0gZHJtX3JlY3Rfd2lkdGgoJnBsYW5lX3N0YXRlLT51YXBpLnNyYykgPj4gMTY7CisKKwlpbnRl
bF9hZGRfZmJfb2Zmc2V0cyh4LCB5LCBwbGFuZV9zdGF0ZSwgMCk7CisJKm9mZnNldCA9IGludGVs
X3BsYW5lX2NvbXB1dGVfYWxpZ25lZF9vZmZzZXQoeCwgeSwgcGxhbmVfc3RhdGUsIDApOworCWlm
IChkcm1fV0FSTl9PTigmZGV2X3ByaXYtPmRybSwgYWxpZ25tZW50ICYmICFpc19wb3dlcl9vZl8y
KGFsaWdubWVudCkpKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCS8qCisJICogQVVYIHN1cmZhY2Ug
b2Zmc2V0IGlzIHNwZWNpZmllZCBhcyB0aGUgZGlzdGFuY2UgZnJvbSB0aGUKKwkgKiBtYWluIHN1
cmZhY2Ugb2Zmc2V0LCBhbmQgaXQgbXVzdCBiZSBub24tbmVnYXRpdmUuIE1ha2UKKwkgKiBzdXJl
IHRoYXQgaXMgd2hhdCB3ZSB3aWxsIGdldC4KKwkgKi8KKwlpZiAoYXV4X3BsYW5lICYmICpvZmZz
ZXQgPiBhdXhfb2Zmc2V0KQorCQkqb2Zmc2V0ID0gaW50ZWxfcGxhbmVfYWRqdXN0X2FsaWduZWRf
b2Zmc2V0KHgsIHksIHBsYW5lX3N0YXRlLCAwLAorCQkJCQkJCSAgICAqb2Zmc2V0LAorCQkJCQkJ
CSAgICBhdXhfb2Zmc2V0ICYgfihhbGlnbm1lbnQgLSAxKSk7CisKKwkvKgorCSAqIFdoZW4gdXNp
bmcgYW4gWC10aWxlZCBzdXJmYWNlLCB0aGUgcGxhbmUgYmxvd3MgdXAKKwkgKiBpZiB0aGUgeCBv
ZmZzZXQgKyB3aWR0aCBleGNlZWQgdGhlIHN0cmlkZS4KKwkgKgorCSAqIFRPRE86IGxpbmVhciBh
bmQgWS10aWxlZCBzZWVtIGZpbmUsIFlmIHVudGVzdGVkLAorCSAqLworCWlmIChmYi0+bW9kaWZp
ZXIgPT0gSTkxNV9GT1JNQVRfTU9EX1hfVElMRUQpIHsKKwkJaW50IGNwcCA9IGZiLT5mb3JtYXQt
PmNwcFswXTsKKworCQl3aGlsZSAoKCp4ICsgdykgKiBjcHAgPiBwbGFuZV9zdGF0ZS0+Y29sb3Jf
cGxhbmVbMF0uc3RyaWRlKSB7CisJCQlpZiAoKm9mZnNldCA9PSAwKSB7CisJCQkJZHJtX2RiZ19r
bXMoJmRldl9wcml2LT5kcm0sCisJCQkJCSAgICAiVW5hYmxlIHRvIGZpbmQgc3VpdGFibGUgZGlz
cGxheSBzdXJmYWNlIG9mZnNldCBkdWUgdG8gWC10aWxpbmdcbiIpOworCQkJCXJldHVybiAtRUlO
VkFMOworCQkJfQorCisJCQkqb2Zmc2V0ID0gaW50ZWxfcGxhbmVfYWRqdXN0X2FsaWduZWRfb2Zm
c2V0KHgsIHksIHBsYW5lX3N0YXRlLCAwLAorCQkJCQkJCQkgICAgKm9mZnNldCwKKwkJCQkJCQkJ
ICAgICpvZmZzZXQgLSBhbGlnbm1lbnQpOworCQl9CisJfQorCisJcmV0dXJuIDA7Cit9CisKIHN0
YXRpYyBpbnQgc2tsX2NoZWNrX21haW5fc3VyZmFjZShzdHJ1Y3QgaW50ZWxfcGxhbmVfc3RhdGUg
KnBsYW5lX3N0YXRlKQogewogCXN0cnVjdCBkcm1faTkxNV9wcml2YXRlICpkZXZfcHJpdiA9IHRv
X2k5MTUocGxhbmVfc3RhdGUtPnVhcGkucGxhbmUtPmRldik7CkBAIC0zOTA3LDkgKzM5NTcsMTAg
QEAgc3RhdGljIGludCBza2xfY2hlY2tfbWFpbl9zdXJmYWNlKHN0cnVjdCBpbnRlbF9wbGFuZV9z
dGF0ZSAqcGxhbmVfc3RhdGUpCiAJaW50IHcgPSBkcm1fcmVjdF93aWR0aCgmcGxhbmVfc3RhdGUt
PnVhcGkuc3JjKSA+PiAxNjsKIAlpbnQgaCA9IGRybV9yZWN0X2hlaWdodCgmcGxhbmVfc3RhdGUt
PnVhcGkuc3JjKSA+PiAxNjsKIAlpbnQgbWF4X3dpZHRoLCBtaW5fd2lkdGgsIG1heF9oZWlnaHQ7
Ci0JdTMyIGFsaWdubWVudCwgb2Zmc2V0OwotCWludCBhdXhfcGxhbmUgPSBpbnRlbF9tYWluX3Rv
X2F1eF9wbGFuZShmYiwgMCk7Ci0JdTMyIGF1eF9vZmZzZXQgPSBwbGFuZV9zdGF0ZS0+Y29sb3Jf
cGxhbmVbYXV4X3BsYW5lXS5vZmZzZXQ7CisJY29uc3QgaW50IGF1eF9wbGFuZSA9IGludGVsX21h
aW5fdG9fYXV4X3BsYW5lKGZiLCAwKTsKKwljb25zdCB1MzIgYWxpZ25tZW50ID0gaW50ZWxfc3Vy
Zl9hbGlnbm1lbnQoZmIsIDApOworCXUzMiBvZmZzZXQ7CisJaW50IHJldDsKIAogCWlmIChJTlRF
TF9HRU4oZGV2X3ByaXYpID49IDExKSB7CiAJCW1heF93aWR0aCA9IGljbF9tYXhfcGxhbmVfd2lk
dGgoZmIsIDAsIHJvdGF0aW9uKTsKQEAgLTM5MzQsNDEgKzM5ODUsOSBAQCBzdGF0aWMgaW50IHNr
bF9jaGVja19tYWluX3N1cmZhY2Uoc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9zdGF0
ZSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAJfQogCi0JaW50ZWxfYWRkX2ZiX29mZnNldHMoJngsICZ5
LCBwbGFuZV9zdGF0ZSwgMCk7Ci0Jb2Zmc2V0ID0gaW50ZWxfcGxhbmVfY29tcHV0ZV9hbGlnbmVk
X29mZnNldCgmeCwgJnksIHBsYW5lX3N0YXRlLCAwKTsKLQlhbGlnbm1lbnQgPSBpbnRlbF9zdXJm
X2FsaWdubWVudChmYiwgMCk7Ci0JaWYgKGRybV9XQVJOX09OKCZkZXZfcHJpdi0+ZHJtLCBhbGln
bm1lbnQgJiYgIWlzX3Bvd2VyX29mXzIoYWxpZ25tZW50KSkpCi0JCXJldHVybiAtRUlOVkFMOwot
Ci0JLyoKLQkgKiBBVVggc3VyZmFjZSBvZmZzZXQgaXMgc3BlY2lmaWVkIGFzIHRoZSBkaXN0YW5j
ZSBmcm9tIHRoZQotCSAqIG1haW4gc3VyZmFjZSBvZmZzZXQsIGFuZCBpdCBtdXN0IGJlIG5vbi1u
ZWdhdGl2ZS4gTWFrZQotCSAqIHN1cmUgdGhhdCBpcyB3aGF0IHdlIHdpbGwgZ2V0LgotCSAqLwot
CWlmIChhdXhfcGxhbmUgJiYgb2Zmc2V0ID4gYXV4X29mZnNldCkKLQkJb2Zmc2V0ID0gaW50ZWxf
cGxhbmVfYWRqdXN0X2FsaWduZWRfb2Zmc2V0KCZ4LCAmeSwgcGxhbmVfc3RhdGUsIDAsCi0JCQkJ
CQkJICAgb2Zmc2V0LCBhdXhfb2Zmc2V0ICYgfihhbGlnbm1lbnQgLSAxKSk7Ci0KLQkvKgotCSAq
IFdoZW4gdXNpbmcgYW4gWC10aWxlZCBzdXJmYWNlLCB0aGUgcGxhbmUgYmxvd3MgdXAKLQkgKiBp
ZiB0aGUgeCBvZmZzZXQgKyB3aWR0aCBleGNlZWQgdGhlIHN0cmlkZS4KLQkgKgotCSAqIFRPRE86
IGxpbmVhciBhbmQgWS10aWxlZCBzZWVtIGZpbmUsIFlmIHVudGVzdGVkLAotCSAqLwotCWlmIChm
Yi0+bW9kaWZpZXIgPT0gSTkxNV9GT1JNQVRfTU9EX1hfVElMRUQpIHsKLQkJaW50IGNwcCA9IGZi
LT5mb3JtYXQtPmNwcFswXTsKLQotCQl3aGlsZSAoKHggKyB3KSAqIGNwcCA+IHBsYW5lX3N0YXRl
LT5jb2xvcl9wbGFuZVswXS5zdHJpZGUpIHsKLQkJCWlmIChvZmZzZXQgPT0gMCkgewotCQkJCWRy
bV9kYmdfa21zKCZkZXZfcHJpdi0+ZHJtLAotCQkJCQkgICAgIlVuYWJsZSB0byBmaW5kIHN1aXRh
YmxlIGRpc3BsYXkgc3VyZmFjZSBvZmZzZXQgZHVlIHRvIFgtdGlsaW5nXG4iKTsKLQkJCQlyZXR1
cm4gLUVJTlZBTDsKLQkJCX0KLQotCQkJb2Zmc2V0ID0gaW50ZWxfcGxhbmVfYWRqdXN0X2FsaWdu
ZWRfb2Zmc2V0KCZ4LCAmeSwgcGxhbmVfc3RhdGUsIDAsCi0JCQkJCQkJCSAgIG9mZnNldCwgb2Zm
c2V0IC0gYWxpZ25tZW50KTsKLQkJfQotCX0KKwlyZXQgPSBza2xfY2FsY19tYWluX3N1cmZhY2Vf
b2Zmc2V0KHBsYW5lX3N0YXRlLCAmeCwgJnksICZvZmZzZXQpOworCWlmIChyZXQpCisJCXJldHVy
biByZXQ7CiAKIAkvKgogCSAqIENDUyBBVVggc3VyZmFjZSBkb2Vzbid0IGhhdmUgaXRzIG93biB4
L3kgb2Zmc2V0cywgd2UgbXVzdCBtYWtlIHN1cmUKZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2Ry
bS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oIGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvZGlz
cGxheS9pbnRlbF9kaXNwbGF5LmgKaW5kZXggMWI5NDYyMDllMDZiLi4yMjhlZGU4Nzg4ZDQgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCisr
KyBiL2RyaXZlcnMvZ3B1L2RybS9pOTE1L2Rpc3BsYXkvaW50ZWxfZGlzcGxheS5oCkBAIC02MTMs
NiArNjEzLDggQEAgdTMyIHNrbF9wbGFuZV9jdGxfY3J0Yyhjb25zdCBzdHJ1Y3QgaW50ZWxfY3J0
Y19zdGF0ZSAqY3J0Y19zdGF0ZSk7CiB1MzIgc2tsX3BsYW5lX3N0cmlkZShjb25zdCBzdHJ1Y3Qg
aW50ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLAogCQkgICAgIGludCBwbGFuZSk7CiBpbnQg
c2tsX2NoZWNrX3BsYW5lX3N1cmZhY2Uoc3RydWN0IGludGVsX3BsYW5lX3N0YXRlICpwbGFuZV9z
dGF0ZSk7CitpbnQgc2tsX2NhbGNfbWFpbl9zdXJmYWNlX29mZnNldChjb25zdCBzdHJ1Y3QgaW50
ZWxfcGxhbmVfc3RhdGUgKnBsYW5lX3N0YXRlLAorCQkJCSBpbnQgKngsIGludCAqeSwgdTMyICpv
ZmZzZXQpOwogaW50IGk5eHhfY2hlY2tfcGxhbmVfc3VyZmFjZShzdHJ1Y3QgaW50ZWxfcGxhbmVf
c3RhdGUgKnBsYW5lX3N0YXRlKTsKIGludCBza2xfZm9ybWF0X3RvX2ZvdXJjYyhpbnQgZm9ybWF0
LCBib29sIHJnYl9vcmRlciwgYm9vbCBhbHBoYSk7CiB1bnNpZ25lZCBpbnQgaTl4eF9wbGFuZV9t
YXhfc3RyaWRlKHN0cnVjdCBpbnRlbF9wbGFuZSAqcGxhbmUsCi0tIAoyLjI5LjEKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkludGVsLWdmeCBtYWlsaW5n
IGxpc3QKSW50ZWwtZ2Z4QGxpc3RzLmZyZWVkZXNrdG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVk
ZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2ludGVsLWdmeAo=
